kind = STUB
major_key = CEntryStub
name = CEntryStub
compiler = unknown
Instructions (size = 392)
0xffff91406060     0  add x11, jssp, x0, lsl #3
0xffff91406064     4  sub x11, x11, #0x8 (8)
0xffff91406068     8  sub csp, jssp, #0x10 (16)
0xffff9140606c    12  stp fp, lr, [jssp, #-16]!
0xffff91406070    16  mov fp, jssp
0xffff91406074    20  movz x10, #0x300000000
0xffff91406078    24  sub csp, jssp, #0x8 (8)
0xffff9140607c    28  str x10, [jssp, #-8]!
0xffff91406080    32  sub csp, jssp, #0x8 (8)
0xffff91406084    36  str xzr, [jssp, #-8]!
0xffff91406088    40  ldr x10, pc+248 (addr 0x0000ffff91406180)    ;; object: 0xffff91406001 <Code: STUB>
0xffff9140608c    44  sub csp, jssp, #0x8 (8)
0xffff91406090    48  str x10, [jssp, #-8]!
0xffff91406094    52  ldr x10, pc+244 (addr 0x0000ffff91406188)    ;; external reference (Isolate::c_entry_fp_address)
0xffff91406098    56  str fp, [x10]
0xffff9140609c    60  ldr x10, pc+244 (addr 0x0000ffff91406190)    ;; external reference (Isolate::context_address)
0xffff914060a0    64  str cp, [x10]
0xffff914060a4    68  sub csp, jssp, #0x20 (32)
0xffff914060a8    72  sub jssp, jssp, #0x20 (32)
0xffff914060ac    76  and csp, jssp, #0xfffffffffffffff0
0xffff914060b0    80  add x10, csp, #0x8 (8)
0xffff914060b4    84  stur x10, [fp, #-16]
0xffff914060b8    88  str x21, [csp, #8]
0xffff914060bc    92  str x22, [csp, #16]
0xffff914060c0    96  str x23, [csp, #24]
0xffff914060c4   100  mov x22, x0
0xffff914060c8   104  mov x23, x1
0xffff914060cc   108  mov x21, x11
0xffff914060d0   112  mov x0, x22
0xffff914060d4   116  mov x1, x21
0xffff914060d8   120  ldr x2, pc+192 (addr 0x0000ffff91406198)    ;; external reference (isolate)
0xffff914060dc   124  adr x12, #+0xc (addr 0xffff914060e8)
0xffff914060e0   128  str x12, [csp]
0xffff914060e4   132  blr x23
0xffff914060e8   136  ldr x16, [x26, #344]
0xffff914060ec   140  cmp x0, x16
0xffff914060f0   144  b.eq #+0x34 (addr 0xffff91406124)
0xffff914060f4   148  mov x11, x22
0xffff914060f8   152  ldr x21, [csp, #8]
0xffff914060fc   156  ldr x22, [csp, #16]
0xffff91406100   160  ldr x23, [csp, #24]
0xffff91406104   164  ldr x10, pc+156 (addr 0x0000ffff914061a0)    ;; external reference (Isolate::context_address)
0xffff91406108   168  ldr cp, [x10]
0xffff9140610c   172  ldr x10, pc+156 (addr 0x0000ffff914061a8)    ;; external reference (Isolate::c_entry_fp_address)
0xffff91406110   176  str xzr, [x10]
0xffff91406114   180  mov jssp, fp
0xffff91406118   184  ldp fp, lr, [jssp], #16
0xffff9140611c   188  add jssp, jssp, x11, lsl #3
0xffff91406120   192  ret
0xffff91406124   196  movz x0, #0x0
0xffff91406128   200  movz x1, #0x0
0xffff9140612c   204  ldr x2, pc+132 (addr 0x0000ffff914061b0)    ;; external reference (isolate)
0xffff91406130   208  ldr x16, pc+136 (addr 0x0000ffff914061b8)    ;; external reference (Runtime::UnwindAndFindExceptionHandler)
0xffff91406134   212  blr x16
0xffff91406138   216  ldr cp, pc+136 (addr 0x0000ffff914061c0)    ;; external reference (Isolate::pending_handler_context_address)
0xffff9140613c   220  ldr cp, [cp]
0xffff91406140   224  ldr jssp, pc+136 (addr 0x0000ffff914061c8)    ;; external reference (Isolate::pending_handler_sp_address)
0xffff91406144   228  ldr jssp, [jssp]
0xffff91406148   232  ldr fp, pc+136 (addr 0x0000ffff914061d0)    ;; external reference (Isolate::pending_handler_fp_address)
0xffff9140614c   236  ldr fp, [fp]
0xffff91406150   240  cbz cp, #+0x8 (addr 0xffff91406158)
0xffff91406154   244  stur cp, [fp, #-8]
0xffff91406158   248  ldr x10, pc+128 (addr 0x0000ffff914061d8)    ;; external reference (Isolate::pending_handler_code_address)
0xffff9140615c   252  ldr x10, [x10]
0xffff91406160   256  ldr x11, pc+128 (addr 0x0000ffff914061e0)    ;; external reference (Isolate::pending_handler_offset_address)
0xffff91406164   260  ldr x11, [x11]
0xffff91406168   264  add x10, x10, #0x5f (95)
0xffff9140616c   268  add x10, x10, x11
0xffff91406170   272  br x10
0xffff91406174   276  5800039f       constant pool begin (num_const = 28)    ;; constant pool
0xffff91406178   280  d63f03e0       constant
0xffff9140617c   284  d503201f       constant
0xffff91406180   288  91406001       constant
0xffff91406184   292  0000ffff       constant
0xffff91406188   296  4117fdf8       constant
0xffff9140618c   300  00000000       constant
0xffff91406190   304  4117fd90       constant
0xffff91406194   308  00000000       constant
0xffff91406198   312  4117e2d0       constant
0xffff9140619c   316  00000000       constant
0xffff914061a0   320  4117fd90       constant
0xffff914061a4   324  00000000       constant
0xffff914061a8   328  4117fdf8       constant
0xffff914061ac   332  00000000       constant
0xffff914061b0   336  4117e2d0       constant
0xffff914061b4   340  00000000       constant
0xffff914061b8   344  00e232d8       constant
0xffff914061bc   348  00000000       constant
0xffff914061c0   352  4117fda8       constant
0xffff914061c4   356  00000000       constant
0xffff914061c8   360  4117fdc8       constant
0xffff914061cc   364  00000000       constant
0xffff914061d0   368  4117fdc0       constant
0xffff914061d4   372  00000000       constant
0xffff914061d8   376  4117fdb0       constant
0xffff914061dc   380  00000000       constant
0xffff914061e0   384  4117fdb8       constant
0xffff914061e4   388  00000000       constant


RelocInfo (size = 31)
0xffff91406088  embedded object  (0xffff91406001 <Code: STUB>)
0xffff91406094  external reference (Isolate::c_entry_fp_address)  (0x4117fdf8)
0xffff9140609c  external reference (Isolate::context_address)  (0x4117fd90)
0xffff914060d8  external reference (isolate)  (0x4117e2d0)
0xffff91406104  external reference (Isolate::context_address)  (0x4117fd90)
0xffff9140610c  external reference (Isolate::c_entry_fp_address)  (0x4117fdf8)
0xffff9140612c  external reference (isolate)  (0x4117e2d0)
0xffff91406130  external reference (Runtime::UnwindAndFindExceptionHandler)  (0xe232d8)
0xffff91406138  external reference (Isolate::pending_handler_context_address)  (0x4117fda8)
0xffff91406140  external reference (Isolate::pending_handler_sp_address)  (0x4117fdc8)
0xffff91406148  external reference (Isolate::pending_handler_fp_address)  (0x4117fdc0)
0xffff91406158  external reference (Isolate::pending_handler_code_address)  (0x4117fdb0)
0xffff91406160  external reference (Isolate::pending_handler_offset_address)  (0x4117fdb8)
0xffff91406174  constant pool (size 116)


kind = STUB
major_key = CEntryStub
name = CEntryStub
compiler = unknown
Instructions (size = 488)
0xffff91406260     0  add x11, jssp, x0, lsl #3
0xffff91406264     4  sub x11, x11, #0x8 (8)
0xffff91406268     8  sub csp, jssp, #0x10 (16)
0xffff9140626c    12  stp fp, lr, [jssp, #-16]!
0xffff91406270    16  mov fp, jssp
0xffff91406274    20  movz x10, #0x300000000
0xffff91406278    24  sub csp, jssp, #0x8 (8)
0xffff9140627c    28  str x10, [jssp, #-8]!
0xffff91406280    32  sub csp, jssp, #0x8 (8)
0xffff91406284    36  str xzr, [jssp, #-8]!
0xffff91406288    40  ldr x10, pc+344 (addr 0x0000ffff914063e0)    ;; object: 0xffff91406201 <Code: STUB>
0xffff9140628c    44  sub csp, jssp, #0x8 (8)
0xffff91406290    48  str x10, [jssp, #-8]!
0xffff91406294    52  ldr x10, pc+340 (addr 0x0000ffff914063e8)    ;; external reference (Isolate::c_entry_fp_address)
0xffff91406298    56  str fp, [x10]
0xffff9140629c    60  ldr x10, pc+340 (addr 0x0000ffff914063f0)    ;; external reference (Isolate::context_address)
0xffff914062a0    64  str cp, [x10]
0xffff914062a4    68  sub csp, jssp, #0xc0 (192)
0xffff914062a8    72  stp d28, d29, [jssp, #-32]!
0xffff914062ac    76  stp d30, d31, [jssp, #16]
0xffff914062b0    80  stp d24, d25, [jssp, #-32]!
0xffff914062b4    84  stp d26, d27, [jssp, #16]
0xffff914062b8    88  stp d20, d21, [jssp, #-32]!
0xffff914062bc    92  stp d22, d23, [jssp, #16]
0xffff914062c0    96  stp d16, d17, [jssp, #-32]!
0xffff914062c4   100  stp d18, d19, [jssp, #16]
0xffff914062c8   104  stp d4, d5, [jssp, #-32]!
0xffff914062cc   108  stp d6, d7, [jssp, #16]
0xffff914062d0   112  stp d0, d1, [jssp, #-32]!
0xffff914062d4   116  stp d2, d3, [jssp, #16]
0xffff914062d8   120  sub csp, jssp, #0x20 (32)
0xffff914062dc   124  sub jssp, jssp, #0x20 (32)
0xffff914062e0   128  and csp, jssp, #0xfffffffffffffff0
0xffff914062e4   132  add x10, csp, #0x8 (8)
0xffff914062e8   136  stur x10, [fp, #-16]
0xffff914062ec   140  str x21, [csp, #8]
0xffff914062f0   144  str x22, [csp, #16]
0xffff914062f4   148  str x23, [csp, #24]
0xffff914062f8   152  mov x22, x0
0xffff914062fc   156  mov x23, x1
0xffff91406300   160  mov x21, x11
0xffff91406304   164  mov x0, x22
0xffff91406308   168  mov x1, x21
0xffff9140630c   172  ldr x2, pc+236 (addr 0x0000ffff914063f8)    ;; external reference (isolate)
0xffff91406310   176  adr x12, #+0xc (addr 0xffff9140631c)
0xffff91406314   180  str x12, [csp]
0xffff91406318   184  blr x23
0xffff9140631c   188  ldr x16, [x26, #344]
0xffff91406320   192  cmp x0, x16
0xffff91406324   196  b.eq #+0x64 (addr 0xffff91406388)
0xffff91406328   200  mov x11, x22
0xffff9140632c   204  ldr x21, [csp, #8]
0xffff91406330   208  ldr x22, [csp, #16]
0xffff91406334   212  ldr x23, [csp, #24]
0xffff91406338   216  ldp d30, d31, [fp, #-40]
0xffff9140633c   220  ldp d28, d29, [fp, #-56]
0xffff91406340   224  ldp d26, d27, [fp, #-72]
0xffff91406344   228  ldp d24, d25, [fp, #-88]
0xffff91406348   232  ldp d22, d23, [fp, #-104]
0xffff9140634c   236  ldp d20, d21, [fp, #-120]
0xffff91406350   240  ldp d18, d19, [fp, #-136]
0xffff91406354   244  ldp d16, d17, [fp, #-152]
0xffff91406358   248  ldp d6, d7, [fp, #-168]
0xffff9140635c   252  ldp d4, d5, [fp, #-184]
0xffff91406360   256  ldp d2, d3, [fp, #-200]
0xffff91406364   260  ldp d0, d1, [fp, #-216]
0xffff91406368   264  ldr x10, pc+152 (addr 0x0000ffff91406400)    ;; external reference (Isolate::context_address)
0xffff9140636c   268  ldr cp, [x10]
0xffff91406370   272  ldr x10, pc+152 (addr 0x0000ffff91406408)    ;; external reference (Isolate::c_entry_fp_address)
0xffff91406374   276  str xzr, [x10]
0xffff91406378   280  mov jssp, fp
0xffff9140637c   284  ldp fp, lr, [jssp], #16
0xffff91406380   288  add jssp, jssp, x11, lsl #3
0xffff91406384   292  ret
0xffff91406388   296  movz x0, #0x0
0xffff9140638c   300  movz x1, #0x0
0xffff91406390   304  ldr x2, pc+128 (addr 0x0000ffff91406410)    ;; external reference (isolate)
0xffff91406394   308  ldr x16, pc+132 (addr 0x0000ffff91406418)    ;; external reference (Runtime::UnwindAndFindExceptionHandler)
0xffff91406398   312  blr x16
0xffff9140639c   316  ldr cp, pc+132 (addr 0x0000ffff91406420)    ;; external reference (Isolate::pending_handler_context_address)
0xffff914063a0   320  ldr cp, [cp]
0xffff914063a4   324  ldr jssp, pc+132 (addr 0x0000ffff91406428)    ;; external reference (Isolate::pending_handler_sp_address)
0xffff914063a8   328  ldr jssp, [jssp]
0xffff914063ac   332  ldr fp, pc+132 (addr 0x0000ffff91406430)    ;; external reference (Isolate::pending_handler_fp_address)
0xffff914063b0   336  ldr fp, [fp]
0xffff914063b4   340  cbz cp, #+0x8 (addr 0xffff914063bc)
0xffff914063b8   344  stur cp, [fp, #-8]
0xffff914063bc   348  ldr x10, pc+124 (addr 0x0000ffff91406438)    ;; external reference (Isolate::pending_handler_code_address)
0xffff914063c0   352  ldr x10, [x10]
0xffff914063c4   356  ldr x11, pc+124 (addr 0x0000ffff91406440)    ;; external reference (Isolate::pending_handler_offset_address)
0xffff914063c8   360  ldr x11, [x11]
0xffff914063cc   364  add x10, x10, #0x5f (95)
0xffff914063d0   368  add x10, x10, x11
0xffff914063d4   372  br x10
0xffff914063d8   376  5800037f       constant pool begin (num_const = 27)    ;; constant pool
0xffff914063dc   380  d63f03e0       constant
0xffff914063e0   384  91406201       constant
0xffff914063e4   388  0000ffff       constant
0xffff914063e8   392  4117fdf8       constant
0xffff914063ec   396  00000000       constant
0xffff914063f0   400  4117fd90       constant
0xffff914063f4   404  00000000       constant
0xffff914063f8   408  4117e2d0       constant
0xffff914063fc   412  00000000       constant
0xffff91406400   416  4117fd90       constant
0xffff91406404   420  00000000       constant
0xffff91406408   424  4117fdf8       constant
0xffff9140640c   428  00000000       constant
0xffff91406410   432  4117e2d0       constant
0xffff91406414   436  00000000       constant
0xffff91406418   440  00e232d8       constant
0xffff9140641c   444  00000000       constant
0xffff91406420   448  4117fda8       constant
0xffff91406424   452  00000000       constant
0xffff91406428   456  4117fdc8       constant
0xffff9140642c   460  00000000       constant
0xffff91406430   464  4117fdc0       constant
0xffff91406434   468  00000000       constant
0xffff91406438   472  4117fdb0       constant
0xffff9140643c   476  00000000       constant
0xffff91406440   480  4117fdb8       constant
0xffff91406444   484  00000000       constant


RelocInfo (size = 35)
0xffff91406288  embedded object  (0xffff91406201 <Code: STUB>)
0xffff91406294  external reference (Isolate::c_entry_fp_address)  (0x4117fdf8)
0xffff9140629c  external reference (Isolate::context_address)  (0x4117fd90)
0xffff9140630c  external reference (isolate)  (0x4117e2d0)
0xffff91406368  external reference (Isolate::context_address)  (0x4117fd90)
0xffff91406370  external reference (Isolate::c_entry_fp_address)  (0x4117fdf8)
0xffff91406390  external reference (isolate)  (0x4117e2d0)
0xffff91406394  external reference (Runtime::UnwindAndFindExceptionHandler)  (0xe232d8)
0xffff9140639c  external reference (Isolate::pending_handler_context_address)  (0x4117fda8)
0xffff914063a4  external reference (Isolate::pending_handler_sp_address)  (0x4117fdc8)
0xffff914063ac  external reference (Isolate::pending_handler_fp_address)  (0x4117fdc0)
0xffff914063bc  external reference (Isolate::pending_handler_code_address)  (0x4117fdb0)
0xffff914063c4  external reference (Isolate::pending_handler_offset_address)  (0x4117fdb8)
0xffff914063d8  constant pool (size 112)


kind = STUB
major_key = StoreBufferOverflowStub
name = StoreBufferOverflowStub
compiler = unknown
Instructions (size = 120)
0xffff914064c0     0  sub csp, jssp, #0x90 (144)
0xffff914064c4     4  stp x14, x15, [jssp, #-32]!
0xffff914064c8     8  stp x18, lr, [jssp, #16]
0xffff914064cc    12  stp x10, x11, [jssp, #-32]!
0xffff914064d0    16  stp x12, x13, [jssp, #16]
0xffff914064d4    20  stp x6, x7, [jssp, #-32]!
0xffff914064d8    24  stp x8, x9, [jssp, #16]
0xffff914064dc    28  stp x2, x3, [jssp, #-32]!
0xffff914064e0    32  stp x4, x5, [jssp, #16]
0xffff914064e4    36  stp x0, x1, [jssp, #-16]!
0xffff914064e8    40  ldr x0, pc+64 (addr 0x0000ffff91406528)    ;; external reference (isolate)
0xffff914064ec    44  ldr x16, pc+68 (addr 0x0000ffff91406530)    ;; external reference (StoreBuffer::StoreBufferOverflow)
0xffff914064f0    48  and csp, jssp, #0xfffffffffffffff0
0xffff914064f4    52  blr x16
0xffff914064f8    56  ldp x2, x3, [jssp, #16]
0xffff914064fc    60  ldp x0, x1, [jssp], #32
0xffff91406500    64  ldp x6, x7, [jssp, #16]
0xffff91406504    68  ldp x4, x5, [jssp], #32
0xffff91406508    72  ldp x10, x11, [jssp, #16]
0xffff9140650c    76  ldp x8, x9, [jssp], #32
0xffff91406510    80  ldp x14, x15, [jssp, #16]
0xffff91406514    84  ldp x12, x13, [jssp], #32
0xffff91406518    88  ldp x18, lr, [jssp], #16
0xffff9140651c    92  ret
0xffff91406520    96  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff91406524   100  d63f03e0       constant
0xffff91406528   104  4117e2d0       constant
0xffff9140652c   108  00000000       constant
0xffff91406530   112  00c716d0       constant
0xffff91406534   116  00000000       constant


RelocInfo (size = 10)
0xffff914064e8  external reference (isolate)  (0x4117e2d0)
0xffff914064ec  external reference (StoreBuffer::StoreBufferOverflow)  (0xc716d0)
0xffff91406520  constant pool (size 24)


kind = STUB
major_key = StoreBufferOverflowStub
name = StoreBufferOverflowStub
compiler = unknown
Instructions (size = 216)
0xffff914065a0     0  sub csp, jssp, #0x90 (144)
0xffff914065a4     4  stp x14, x15, [jssp, #-32]!
0xffff914065a8     8  stp x18, lr, [jssp, #16]
0xffff914065ac    12  stp x10, x11, [jssp, #-32]!
0xffff914065b0    16  stp x12, x13, [jssp, #16]
0xffff914065b4    20  stp x6, x7, [jssp, #-32]!
0xffff914065b8    24  stp x8, x9, [jssp, #16]
0xffff914065bc    28  stp x2, x3, [jssp, #-32]!
0xffff914065c0    32  stp x4, x5, [jssp, #16]
0xffff914065c4    36  stp x0, x1, [jssp, #-16]!
0xffff914065c8    40  sub csp, jssp, #0xb0 (176)
0xffff914065cc    44  stp d26, d27, [jssp, #-32]!
0xffff914065d0    48  stp d28, d29, [jssp, #16]
0xffff914065d4    52  stp d22, d23, [jssp, #-32]!
0xffff914065d8    56  stp d24, d25, [jssp, #16]
0xffff914065dc    60  stp d18, d19, [jssp, #-32]!
0xffff914065e0    64  stp d20, d21, [jssp, #16]
0xffff914065e4    68  stp d6, d7, [jssp, #-32]!
0xffff914065e8    72  stp d16, d17, [jssp, #16]
0xffff914065ec    76  stp d2, d3, [jssp, #-32]!
0xffff914065f0    80  stp d4, d5, [jssp, #16]
0xffff914065f4    84  stp d0, d1, [jssp, #-16]!
0xffff914065f8    88  ldr x0, pc+112 (addr 0x0000ffff91406668)    ;; external reference (isolate)
0xffff914065fc    92  ldr x16, pc+116 (addr 0x0000ffff91406670)    ;; external reference (StoreBuffer::StoreBufferOverflow)
0xffff91406600    96  and csp, jssp, #0xfffffffffffffff0
0xffff91406604   100  blr x16
0xffff91406608   104  ldp d2, d3, [jssp, #16]
0xffff9140660c   108  ldp d0, d1, [jssp], #32
0xffff91406610   112  ldp d6, d7, [jssp, #16]
0xffff91406614   116  ldp d4, d5, [jssp], #32
0xffff91406618   120  ldp d18, d19, [jssp, #16]
0xffff9140661c   124  ldp d16, d17, [jssp], #32
0xffff91406620   128  ldp d22, d23, [jssp, #16]
0xffff91406624   132  ldp d20, d21, [jssp], #32
0xffff91406628   136  ldp d26, d27, [jssp, #16]
0xffff9140662c   140  ldp d24, d25, [jssp], #32
0xffff91406630   144  ldp d28, d29, [jssp], #16
0xffff91406634   148  ldp x2, x3, [jssp, #16]
0xffff91406638   152  ldp x0, x1, [jssp], #32
0xffff9140663c   156  ldp x6, x7, [jssp, #16]
0xffff91406640   160  ldp x4, x5, [jssp], #32
0xffff91406644   164  ldp x10, x11, [jssp, #16]
0xffff91406648   168  ldp x8, x9, [jssp], #32
0xffff9140664c   172  ldp x14, x15, [jssp, #16]
0xffff91406650   176  ldp x12, x13, [jssp], #32
0xffff91406654   180  ldp x18, lr, [jssp], #16
0xffff91406658   184  ret
0xffff9140665c   188  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff91406660   192  d63f03e0       constant
0xffff91406664   196  d503201f       constant
0xffff91406668   200  4117e2d0       constant
0xffff9140666c   204  00000000       constant
0xffff91406670   208  00c716d0       constant
0xffff91406674   212  00000000       constant


RelocInfo (size = 14)
0xffff914065f8  external reference (isolate)  (0x4117e2d0)
0xffff914065fc  external reference (StoreBuffer::StoreBufferOverflow)  (0xc716d0)
0xffff9140665c  constant pool (size 28)


kind = STUB
major_key = StubFailureTrampolineStub
name = StubFailureTrampolineStub
compiler = unknown
Instructions (size = 48)
0xffff914066e0     0  ldr x16, pc+40 (addr 0x0000ffff91406708)    ;; code: STUB, CEntryStub, minor: 5
0xffff914066e4     4  blr x16
0xffff914066e8     8  ldur x1, [fp, #-24]
0xffff914066ec    12  mov jssp, fp
0xffff914066f0    16  ldp fp, lr, [jssp], #16
0xffff914066f4    20  add jssp, jssp, x1, lsl #3
0xffff914066f8    24  ret
0xffff914066fc    28  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91406700    32  d63f03e0       constant
0xffff91406704    36  d503201f       constant
0xffff91406708    40  91406260       constant
0xffff9140670c    44  0000ffff       constant


RelocInfo (size = 7)
0xffff914066e0  code target (STUB)  (0xffff91406260)
0xffff914066fc  constant pool (size 20)


kind = STUB
major_key = StubFailureTrampolineStub
name = StubFailureTrampolineStub
compiler = unknown
Instructions (size = 48)
0xffff91406780     0  ldr x16, pc+40 (addr 0x0000ffff914067a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91406784     4  blr x16
0xffff91406788     8  ldur x1, [fp, #-24]
0xffff9140678c    12  add x1, x1, #0x1 (1)
0xffff91406790    16  mov jssp, fp
0xffff91406794    20  ldp fp, lr, [jssp], #16
0xffff91406798    24  add jssp, jssp, x1, lsl #3
0xffff9140679c    28  ret
0xffff914067a0    32  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914067a4    36  d63f03e0       constant
0xffff914067a8    40  91406260       constant
0xffff914067ac    44  0000ffff       constant


RelocInfo (size = 7)
0xffff91406780  code target (STUB)  (0xffff91406260)
0xffff914067a0  constant pool (size 16)


kind = STUB
major_key = StoreRegistersStateStub
name = StoreRegistersStateStub
compiler = unknown
Instructions (size = 80)
0xffff91406820     0  mov x17, lr
0xffff91406824     4  mov lr, x16
0xffff91406828     8  sub csp, jssp, #0x20 (32)
0xffff9140682c    12  sub jssp, jssp, #0x20 (32)
0xffff91406830    16  sub csp, jssp, #0xe0 (224)
0xffff91406834    20  stp x26, cp, [jssp, #-32]!
0xffff91406838    24  stp fp, lr, [jssp, #16]
0xffff9140683c    28  stp x22, x23, [jssp, #-32]!
0xffff91406840    32  stp x24, x25, [jssp, #16]
0xffff91406844    36  stp x18, x19, [jssp, #-32]!
0xffff91406848    40  stp x20, x21, [jssp, #16]
0xffff9140684c    44  stp x12, x13, [jssp, #-32]!
0xffff91406850    48  stp x14, x15, [jssp, #16]
0xffff91406854    52  stp x8, x9, [jssp, #-32]!
0xffff91406858    56  stp x10, x11, [jssp, #16]
0xffff9140685c    60  stp x4, x5, [jssp, #-32]!
0xffff91406860    64  stp x6, x7, [jssp, #16]
0xffff91406864    68  stp x0, x1, [jssp, #-32]!
0xffff91406868    72  stp x2, x3, [jssp, #16]
0xffff9140686c    76  ret x17


RelocInfo (size = 0)


kind = STUB
major_key = RestoreRegistersStateStub
name = RestoreRegistersStateStub
compiler = unknown
Instructions (size = 68)
0xffff914068e0     0  mov x16, lr
0xffff914068e4     4  ldp x2, x3, [jssp, #16]
0xffff914068e8     8  ldp x0, x1, [jssp], #32
0xffff914068ec    12  ldp x6, x7, [jssp, #16]
0xffff914068f0    16  ldp x4, x5, [jssp], #32
0xffff914068f4    20  ldp x10, x11, [jssp, #16]
0xffff914068f8    24  ldp x8, x9, [jssp], #32
0xffff914068fc    28  ldp x14, x15, [jssp, #16]
0xffff91406900    32  ldp x12, x13, [jssp], #32
0xffff91406904    36  ldp x20, x21, [jssp, #16]
0xffff91406908    40  ldp x18, x19, [jssp], #32
0xffff9140690c    44  ldp x24, x25, [jssp, #16]
0xffff91406910    48  ldp x22, x23, [jssp], #32
0xffff91406914    52  ldp fp, lr, [jssp, #16]
0xffff91406918    56  ldp x26, cp, [jssp], #32
0xffff9140691c    60  add jssp, jssp, #0x20 (32)
0xffff91406920    64  ret x16


RelocInfo (size = 0)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 469)
0xffff914069a0     0  movz w0, #0x6000
0xffff914069a4     4  movk w0, #0x9, lsl #16
0xffff914069a8     8  cmp w0, #0x30 (48)
0xffff914069ac    12  b.ls #+0x174 (addr 0xffff91406b20)
0xffff914069b0    16  movz x3, #0xf2c0
0xffff914069b4    20  movk x3, #0x4117, lsl #16
0xffff914069b8    24  ldp x4, x0, [x3]
0xffff914069bc    28  adds x16, x4, #0x60 (96)
0xffff914069c0    32  ccmp x16, x0, #nzCv, lo
0xffff914069c4    36  b.hi #+0x98 (addr 0xffff91406a5c)
0xffff914069c8    40  str x16, [x3]
0xffff914069cc    44  orr x4, x4, #0x1
0xffff914069d0    48  movz w0, #0x0
0xffff914069d4    52  stur x0, [x4, #47]
0xffff914069d8    56  ldur x0, [x1, #23]
0xffff914069dc    60  stur x0, [x4, #-1]
0xffff914069e0    64  ldr x0, pc+232 (addr 0x0000ffff91406ac8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914069e4    68  stur x0, [x4, #7]
0xffff914069e8    72  ldr x0, pc+232 (addr 0x0000ffff91406ad0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914069ec    76  stur x0, [x4, #15]
0xffff914069f0    80  movz x0, #0x0
0xffff914069f4    84  stur x0, [x4, #23]
0xffff914069f8    88  add x0, x4, #0x20 (32)
0xffff914069fc    92  ldr x1, pc+220 (addr 0x0000ffff91406ad8)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91406a00    96  stur x1, [x0, #-1]
0xffff91406a04   100  stur x2, [x0, #7]
0xffff91406a08   104  ldur w0, [x2, #35]
0xffff91406a0c   108  add w0, w0, #0x1 (1)
0xffff91406a10   112  lsl x0, x0, #32
0xffff91406a14   116  stur x0, [x2, #31]
0xffff91406a18   120  add x0, x4, #0x30 (48)
0xffff91406a1c   124  ldr x1, pc+196 (addr 0x0000ffff91406ae0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91406a20   128  stur x1, [x0, #-1]
0xffff91406a24   132  movz x1, #0x400000000
0xffff91406a28   136  stur x1, [x0, #7]
0xffff91406a2c   140  stur x0, [x4, #15]
0xffff91406a30   144  ldr x1, pc+184 (addr 0x0000ffff91406ae8)    ;; object: 0x49b04519 <the hole>
0xffff91406a34   148  stur x1, [x0, #15]
0xffff91406a38   152  ldr x1, pc+184 (addr 0x0000ffff91406af0)    ;; object: 0x49b04519 <the hole>
0xffff91406a3c   156  stur x1, [x0, #23]
0xffff91406a40   160  ldr x1, pc+184 (addr 0x0000ffff91406af8)    ;; object: 0x49b04519 <the hole>
0xffff91406a44   164  stur x1, [x0, #31]
0xffff91406a48   168  ldr x1, pc+184 (addr 0x0000ffff91406b00)    ;; object: 0x49b04519 <the hole>
0xffff91406a4c   172  stur x1, [x0, #39]
0xffff91406a50   176  mov x0, x4
0xffff91406a54   180  add jssp, jssp, #0x8 (8)
0xffff91406a58   184  ret
0xffff91406a5c   188  sub csp, jssp, #0x10 (16)
0xffff91406a60   192  stp fp, lr, [jssp, #-16]!
0xffff91406a64   196  movz fp, #0xa00000000
0xffff91406a68   200  sub csp, jssp, #0x8 (8)
0xffff91406a6c   204  str fp, [jssp, #-8]!
0xffff91406a70   208  add fp, jssp, #0x8 (8)
0xffff91406a74   212  movz x4, #0x0
0xffff91406a78   216  mov x16, lr
0xffff91406a7c   220  ldr x17, pc+140 (addr 0x0000ffff91406b08)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91406a80   224  blr x17
0xffff91406a84   228  movz x0, #0x6000000000
0xffff91406a88   232  movz x10, #0x0
0xffff91406a8c   236  sub csp, jssp, #0x10 (16)
0xffff91406a90   240  stp x10, x0, [jssp, #-16]!
0xffff91406a94   244  movz x0, #0x2
0xffff91406a98   248  movz x1, #0x5b88
0xffff91406a9c   252  movk x1, #0xe2, lsl #16
0xffff91406aa0   256  ldr x16, pc+112 (addr 0x0000ffff91406b10)    ;; code: STUB, CEntryStub, minor: 5
0xffff91406aa4   260  blr x16
0xffff91406aa8   264  str x0, [jssp, #32]
0xffff91406aac   268  ldr x16, pc+108 (addr 0x0000ffff91406b18)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91406ab0   272  blr x16
0xffff91406ab4   276  ldr lr, [jssp, #16]
0xffff91406ab8   280  ldp xzr, fp, [jssp], #24
0xffff91406abc   284  b #-0xec (addr 0xffff914069d0)
0xffff91406ac0   288  580002ff       constant pool begin (num_const = 23)    ;; constant pool
0xffff91406ac4   292  d63f03e0       constant
0xffff91406ac8   296  49b04201       constant
0xffff91406acc   300  00000000       constant
0xffff91406ad0   304  49b04201       constant
0xffff91406ad4   308  00000000       constant
0xffff91406ad8   312  36405d81       constant
0xffff91406adc   316  00000000       constant
0xffff91406ae0   320  36404259       constant
0xffff91406ae4   324  00000000       constant
0xffff91406ae8   328  49b04519       constant
0xffff91406aec   332  00000000       constant
0xffff91406af0   336  49b04519       constant
0xffff91406af4   340  00000000       constant
0xffff91406af8   344  49b04519       constant
0xffff91406afc   348  00000000       constant
0xffff91406b00   352  49b04519       constant
0xffff91406b04   356  00000000       constant
0xffff91406b08   360  91406820       constant
0xffff91406b0c   364  0000ffff       constant
0xffff91406b10   368  91406260       constant
0xffff91406b14   372  0000ffff       constant
0xffff91406b18   376  914068e0       constant
0xffff91406b1c   380  0000ffff       constant
0xffff91406b20   384  movz x16, #0x0
0xffff91406b24   388  sub csp, jssp, #0x10 (16)
0xffff91406b28   392  stp fp, lr, [jssp, #-16]!
0xffff91406b2c   396  bl #+0x4 (addr 0xffff91406b30)
0xffff91406b30   400  movz x17, #0xa00000000
0xffff91406b34   404  sub csp, jssp, #0x10 (16)
0xffff91406b38   408  stp x17, cp, [jssp, #-16]!
0xffff91406b3c   412  add fp, jssp, #0x10 (16)
0xffff91406b40   416  ldr x17, pc+24 (addr 0x0000ffff91406b58)    ;; lazy deoptimization bailout 0
0xffff91406b44   420  add x17, x17, x16
0xffff91406b48   424  br x17
0xffff91406b4c   428  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91406b50   432  d63f03e0       constant
0xffff91406b54   436  d503201f       constant
0xffff91406b58   440  91206000       constant
0xffff91406b5c   444  0000ffff       constant


Safepoints (size = 21)
0xffff91406aa8   264  000 | x1 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 29)
0xffff914069e0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914069e8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914069fc  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91406a1c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91406a30  embedded object  (0x49b04519 <the hole>)
0xffff91406a38  embedded object  (0x49b04519 <the hole>)
0xffff91406a40  embedded object  (0x49b04519 <the hole>)
0xffff91406a48  embedded object  (0x49b04519 <the hole>)
0xffff91406a7c  code target (STUB)  (0xffff91406820)
0xffff91406aa0  code target (STUB)  (0xffff91406260)
0xffff91406aac  code target (STUB)  (0xffff914068e0)
0xffff91406ac0  constant pool (size 96)
0xffff91406b40  runtime entry
0xffff91406b4c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 469)
0xffff914069a0     0  movz w0, #0x6000
0xffff914069a4     4  movk w0, #0x9, lsl #16
0xffff914069a8     8  cmp w0, #0x30 (48)
0xffff914069ac    12  b.ls #+0x174 (addr 0xffff91406b20)
0xffff914069b0    16  movz x3, #0xf2c0
0xffff914069b4    20  movk x3, #0x4117, lsl #16
0xffff914069b8    24  ldp x4, x0, [x3]
0xffff914069bc    28  adds x16, x4, #0x60 (96)
0xffff914069c0    32  ccmp x16, x0, #nzCv, lo
0xffff914069c4    36  b.hi #+0x98 (addr 0xffff91406a5c)
0xffff914069c8    40  str x16, [x3]
0xffff914069cc    44  orr x4, x4, #0x1
0xffff914069d0    48  movz w0, #0x0
0xffff914069d4    52  stur x0, [x4, #47]
0xffff914069d8    56  ldur x0, [x1, #23]
0xffff914069dc    60  stur x0, [x4, #-1]
0xffff914069e0    64  ldr x0, pc+232 (addr 0x0000ffff91406ac8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914069e4    68  stur x0, [x4, #7]
0xffff914069e8    72  ldr x0, pc+232 (addr 0x0000ffff91406ad0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914069ec    76  stur x0, [x4, #15]
0xffff914069f0    80  movz x0, #0x0
0xffff914069f4    84  stur x0, [x4, #23]
0xffff914069f8    88  add x0, x4, #0x20 (32)
0xffff914069fc    92  ldr x1, pc+220 (addr 0x0000ffff91406ad8)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91406a00    96  stur x1, [x0, #-1]
0xffff91406a04   100  stur x2, [x0, #7]
0xffff91406a08   104  ldur w0, [x2, #35]
0xffff91406a0c   108  add w0, w0, #0x1 (1)
0xffff91406a10   112  lsl x0, x0, #32
0xffff91406a14   116  stur x0, [x2, #31]
0xffff91406a18   120  add x0, x4, #0x30 (48)
0xffff91406a1c   124  ldr x1, pc+196 (addr 0x0000ffff91406ae0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91406a20   128  stur x1, [x0, #-1]
0xffff91406a24   132  movz x1, #0x400000000
0xffff91406a28   136  stur x1, [x0, #7]
0xffff91406a2c   140  stur x0, [x4, #15]
0xffff91406a30   144  ldr x1, pc+184 (addr 0x0000ffff91406ae8)    ;; object: 0x49b04519 <the hole>
0xffff91406a34   148  stur x1, [x0, #15]
0xffff91406a38   152  ldr x1, pc+184 (addr 0x0000ffff91406af0)    ;; object: 0x49b04519 <the hole>
0xffff91406a3c   156  stur x1, [x0, #23]
0xffff91406a40   160  ldr x1, pc+184 (addr 0x0000ffff91406af8)    ;; object: 0x49b04519 <the hole>
0xffff91406a44   164  stur x1, [x0, #31]
0xffff91406a48   168  ldr x1, pc+184 (addr 0x0000ffff91406b00)    ;; object: 0x49b04519 <the hole>
0xffff91406a4c   172  stur x1, [x0, #39]
0xffff91406a50   176  mov x0, x4
0xffff91406a54   180  add jssp, jssp, #0x8 (8)
0xffff91406a58   184  ret
0xffff91406a5c   188  sub csp, jssp, #0x10 (16)
0xffff91406a60   192  stp fp, lr, [jssp, #-16]!
0xffff91406a64   196  movz fp, #0xa00000000
0xffff91406a68   200  sub csp, jssp, #0x8 (8)
0xffff91406a6c   204  str fp, [jssp, #-8]!
0xffff91406a70   208  add fp, jssp, #0x8 (8)
0xffff91406a74   212  movz x4, #0x0
0xffff91406a78   216  mov x16, lr
0xffff91406a7c   220  ldr x17, pc+140 (addr 0x0000ffff91406b08)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91406a80   224  blr x17
0xffff91406a84   228  movz x0, #0x6000000000
0xffff91406a88   232  movz x10, #0x0
0xffff91406a8c   236  sub csp, jssp, #0x10 (16)
0xffff91406a90   240  stp x10, x0, [jssp, #-16]!
0xffff91406a94   244  movz x0, #0x2
0xffff91406a98   248  movz x1, #0x5b88
0xffff91406a9c   252  movk x1, #0xe2, lsl #16
0xffff91406aa0   256  ldr x16, pc+112 (addr 0x0000ffff91406b10)    ;; code: STUB, CEntryStub, minor: 5
0xffff91406aa4   260  blr x16
0xffff91406aa8   264  str x0, [jssp, #32]
0xffff91406aac   268  ldr x16, pc+108 (addr 0x0000ffff91406b18)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91406ab0   272  blr x16
0xffff91406ab4   276  ldr lr, [jssp, #16]
0xffff91406ab8   280  ldp xzr, fp, [jssp], #24
0xffff91406abc   284  b #-0xec (addr 0xffff914069d0)
0xffff91406ac0   288  580002ff       constant pool begin (num_const = 23)    ;; constant pool
0xffff91406ac4   292  d63f03e0       constant
0xffff91406ac8   296  49b04201       constant
0xffff91406acc   300  00000000       constant
0xffff91406ad0   304  49b04201       constant
0xffff91406ad4   308  00000000       constant
0xffff91406ad8   312  36405d81       constant
0xffff91406adc   316  00000000       constant
0xffff91406ae0   320  36404259       constant
0xffff91406ae4   324  00000000       constant
0xffff91406ae8   328  49b04519       constant
0xffff91406aec   332  00000000       constant
0xffff91406af0   336  49b04519       constant
0xffff91406af4   340  00000000       constant
0xffff91406af8   344  49b04519       constant
0xffff91406afc   348  00000000       constant
0xffff91406b00   352  49b04519       constant
0xffff91406b04   356  00000000       constant
0xffff91406b08   360  91406820       constant
0xffff91406b0c   364  0000ffff       constant
0xffff91406b10   368  91406260       constant
0xffff91406b14   372  0000ffff       constant
0xffff91406b18   376  914068e0       constant
0xffff91406b1c   380  0000ffff       constant
0xffff91406b20   384  movz x16, #0x0
0xffff91406b24   388  sub csp, jssp, #0x10 (16)
0xffff91406b28   392  stp fp, lr, [jssp, #-16]!
0xffff91406b2c   396  bl #+0x4 (addr 0xffff91406b30)
0xffff91406b30   400  movz x17, #0xa00000000
0xffff91406b34   404  sub csp, jssp, #0x10 (16)
0xffff91406b38   408  stp x17, cp, [jssp, #-16]!
0xffff91406b3c   412  add fp, jssp, #0x10 (16)
0xffff91406b40   416  ldr x17, pc+24 (addr 0x0000ffff91406b58)    ;; lazy deoptimization bailout 0
0xffff91406b44   420  add x17, x17, x16
0xffff91406b48   424  br x17
0xffff91406b4c   428  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91406b50   432  d63f03e0       constant
0xffff91406b54   436  d503201f       constant
0xffff91406b58   440  91206000       constant
0xffff91406b5c   444  0000ffff       constant


Safepoints (size = 21)
0xffff91406aa8   264  000 | x1 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 29)
0xffff914069e0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914069e8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914069fc  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91406a1c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91406a30  embedded object  (0x49b04519 <the hole>)
0xffff91406a38  embedded object  (0x49b04519 <the hole>)
0xffff91406a40  embedded object  (0x49b04519 <the hole>)
0xffff91406a48  embedded object  (0x49b04519 <the hole>)
0xffff91406a7c  code target (STUB)  (0xffff91406820)
0xffff91406aa0  code target (STUB)  (0xffff91406260)
0xffff91406aac  code target (STUB)  (0xffff914068e0)
0xffff91406ac0  constant pool (size 96)
0xffff91406b40  runtime entry
0xffff91406b4c  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 429)
0xffff91406be0     0  movz w0, #0x6000
0xffff91406be4     4  movk w0, #0x9, lsl #16
0xffff91406be8     8  cmp w0, #0x30 (48)
0xffff91406bec    12  b.ls #+0x14c (addr 0xffff91406d38)
0xffff91406bf0    16  movz x2, #0xf2c0
0xffff91406bf4    20  movk x2, #0x4117, lsl #16
0xffff91406bf8    24  ldp x3, x0, [x2]
0xffff91406bfc    28  adds x16, x3, #0x50 (80)
0xffff91406c00    32  ccmp x16, x0, #nzCv, lo
0xffff91406c04    36  b.hi #+0x78 (addr 0xffff91406c7c)
0xffff91406c08    40  str x16, [x2]
0xffff91406c0c    44  orr x3, x3, #0x1
0xffff91406c10    48  movz w0, #0x0
0xffff91406c14    52  stur x0, [x3, #31]
0xffff91406c18    56  ldur x0, [x1, #23]
0xffff91406c1c    60  stur x0, [x3, #-1]
0xffff91406c20    64  ldr x0, pc+200 (addr 0x0000ffff91406ce8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91406c24    68  stur x0, [x3, #7]
0xffff91406c28    72  ldr x0, pc+200 (addr 0x0000ffff91406cf0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91406c2c    76  stur x0, [x3, #15]
0xffff91406c30    80  movz x0, #0x0
0xffff91406c34    84  stur x0, [x3, #23]
0xffff91406c38    88  add x0, x3, #0x20 (32)
0xffff91406c3c    92  ldr x1, pc+188 (addr 0x0000ffff91406cf8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91406c40    96  stur x1, [x0, #-1]
0xffff91406c44   100  movz x1, #0x400000000
0xffff91406c48   104  stur x1, [x0, #7]
0xffff91406c4c   108  stur x0, [x3, #15]
0xffff91406c50   112  ldr x1, pc+176 (addr 0x0000ffff91406d00)    ;; object: 0x49b04519 <the hole>
0xffff91406c54   116  stur x1, [x0, #15]
0xffff91406c58   120  ldr x1, pc+176 (addr 0x0000ffff91406d08)    ;; object: 0x49b04519 <the hole>
0xffff91406c5c   124  stur x1, [x0, #23]
0xffff91406c60   128  ldr x1, pc+176 (addr 0x0000ffff91406d10)    ;; object: 0x49b04519 <the hole>
0xffff91406c64   132  stur x1, [x0, #31]
0xffff91406c68   136  ldr x1, pc+176 (addr 0x0000ffff91406d18)    ;; object: 0x49b04519 <the hole>
0xffff91406c6c   140  stur x1, [x0, #39]
0xffff91406c70   144  mov x0, x3
0xffff91406c74   148  add jssp, jssp, #0x8 (8)
0xffff91406c78   152  ret
0xffff91406c7c   156  sub csp, jssp, #0x10 (16)
0xffff91406c80   160  stp fp, lr, [jssp, #-16]!
0xffff91406c84   164  movz fp, #0xa00000000
0xffff91406c88   168  sub csp, jssp, #0x8 (8)
0xffff91406c8c   172  str fp, [jssp, #-8]!
0xffff91406c90   176  add fp, jssp, #0x8 (8)
0xffff91406c94   180  movz x3, #0x0
0xffff91406c98   184  mov x16, lr
0xffff91406c9c   188  ldr x17, pc+132 (addr 0x0000ffff91406d20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91406ca0   192  blr x17
0xffff91406ca4   196  movz x0, #0x5000000000
0xffff91406ca8   200  movz x10, #0x0
0xffff91406cac   204  sub csp, jssp, #0x10 (16)
0xffff91406cb0   208  stp x10, x0, [jssp, #-16]!
0xffff91406cb4   212  movz x0, #0x2
0xffff91406cb8   216  movz x1, #0x5b88
0xffff91406cbc   220  movk x1, #0xe2, lsl #16
0xffff91406cc0   224  ldr x16, pc+104 (addr 0x0000ffff91406d28)    ;; code: STUB, CEntryStub, minor: 5
0xffff91406cc4   228  blr x16
0xffff91406cc8   232  str x0, [jssp, #24]
0xffff91406ccc   236  ldr x16, pc+100 (addr 0x0000ffff91406d30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91406cd0   240  blr x16
0xffff91406cd4   244  ldr lr, [jssp, #16]
0xffff91406cd8   248  ldp xzr, fp, [jssp], #24
0xffff91406cdc   252  b #-0xcc (addr 0xffff91406c10)
0xffff91406ce0   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff91406ce4   260  d63f03e0       constant
0xffff91406ce8   264  49b04201       constant
0xffff91406cec   268  00000000       constant
0xffff91406cf0   272  49b04201       constant
0xffff91406cf4   276  00000000       constant
0xffff91406cf8   280  36404259       constant
0xffff91406cfc   284  00000000       constant
0xffff91406d00   288  49b04519       constant
0xffff91406d04   292  00000000       constant
0xffff91406d08   296  49b04519       constant
0xffff91406d0c   300  00000000       constant
0xffff91406d10   304  49b04519       constant
0xffff91406d14   308  00000000       constant
0xffff91406d18   312  49b04519       constant
0xffff91406d1c   316  00000000       constant
0xffff91406d20   320  91406820       constant
0xffff91406d24   324  0000ffff       constant
0xffff91406d28   328  91406260       constant
0xffff91406d2c   332  0000ffff       constant
0xffff91406d30   336  914068e0       constant
0xffff91406d34   340  0000ffff       constant
0xffff91406d38   344  movz x16, #0x0
0xffff91406d3c   348  sub csp, jssp, #0x10 (16)
0xffff91406d40   352  stp fp, lr, [jssp, #-16]!
0xffff91406d44   356  bl #+0x4 (addr 0xffff91406d48)
0xffff91406d48   360  movz x17, #0xa00000000
0xffff91406d4c   364  sub csp, jssp, #0x10 (16)
0xffff91406d50   368  stp x17, cp, [jssp, #-16]!
0xffff91406d54   372  add fp, jssp, #0x10 (16)
0xffff91406d58   376  ldr x17, pc+24 (addr 0x0000ffff91406d70)    ;; lazy deoptimization bailout 0
0xffff91406d5c   380  add x17, x17, x16
0xffff91406d60   384  br x17
0xffff91406d64   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91406d68   392  d63f03e0       constant
0xffff91406d6c   396  d503201f       constant
0xffff91406d70   400  91206000       constant
0xffff91406d74   404  0000ffff       constant


Safepoints (size = 21)
0xffff91406cc8   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff91406c20  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91406c28  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91406c3c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91406c50  embedded object  (0x49b04519 <the hole>)
0xffff91406c58  embedded object  (0x49b04519 <the hole>)
0xffff91406c60  embedded object  (0x49b04519 <the hole>)
0xffff91406c68  embedded object  (0x49b04519 <the hole>)
0xffff91406c9c  code target (STUB)  (0xffff91406820)
0xffff91406cc0  code target (STUB)  (0xffff91406260)
0xffff91406ccc  code target (STUB)  (0xffff914068e0)
0xffff91406ce0  constant pool (size 88)
0xffff91406d58  runtime entry
0xffff91406d64  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 429)
0xffff91406be0     0  movz w0, #0x6000
0xffff91406be4     4  movk w0, #0x9, lsl #16
0xffff91406be8     8  cmp w0, #0x30 (48)
0xffff91406bec    12  b.ls #+0x14c (addr 0xffff91406d38)
0xffff91406bf0    16  movz x2, #0xf2c0
0xffff91406bf4    20  movk x2, #0x4117, lsl #16
0xffff91406bf8    24  ldp x3, x0, [x2]
0xffff91406bfc    28  adds x16, x3, #0x50 (80)
0xffff91406c00    32  ccmp x16, x0, #nzCv, lo
0xffff91406c04    36  b.hi #+0x78 (addr 0xffff91406c7c)
0xffff91406c08    40  str x16, [x2]
0xffff91406c0c    44  orr x3, x3, #0x1
0xffff91406c10    48  movz w0, #0x0
0xffff91406c14    52  stur x0, [x3, #31]
0xffff91406c18    56  ldur x0, [x1, #23]
0xffff91406c1c    60  stur x0, [x3, #-1]
0xffff91406c20    64  ldr x0, pc+200 (addr 0x0000ffff91406ce8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91406c24    68  stur x0, [x3, #7]
0xffff91406c28    72  ldr x0, pc+200 (addr 0x0000ffff91406cf0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91406c2c    76  stur x0, [x3, #15]
0xffff91406c30    80  movz x0, #0x0
0xffff91406c34    84  stur x0, [x3, #23]
0xffff91406c38    88  add x0, x3, #0x20 (32)
0xffff91406c3c    92  ldr x1, pc+188 (addr 0x0000ffff91406cf8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91406c40    96  stur x1, [x0, #-1]
0xffff91406c44   100  movz x1, #0x400000000
0xffff91406c48   104  stur x1, [x0, #7]
0xffff91406c4c   108  stur x0, [x3, #15]
0xffff91406c50   112  ldr x1, pc+176 (addr 0x0000ffff91406d00)    ;; object: 0x49b04519 <the hole>
0xffff91406c54   116  stur x1, [x0, #15]
0xffff91406c58   120  ldr x1, pc+176 (addr 0x0000ffff91406d08)    ;; object: 0x49b04519 <the hole>
0xffff91406c5c   124  stur x1, [x0, #23]
0xffff91406c60   128  ldr x1, pc+176 (addr 0x0000ffff91406d10)    ;; object: 0x49b04519 <the hole>
0xffff91406c64   132  stur x1, [x0, #31]
0xffff91406c68   136  ldr x1, pc+176 (addr 0x0000ffff91406d18)    ;; object: 0x49b04519 <the hole>
0xffff91406c6c   140  stur x1, [x0, #39]
0xffff91406c70   144  mov x0, x3
0xffff91406c74   148  add jssp, jssp, #0x8 (8)
0xffff91406c78   152  ret
0xffff91406c7c   156  sub csp, jssp, #0x10 (16)
0xffff91406c80   160  stp fp, lr, [jssp, #-16]!
0xffff91406c84   164  movz fp, #0xa00000000
0xffff91406c88   168  sub csp, jssp, #0x8 (8)
0xffff91406c8c   172  str fp, [jssp, #-8]!
0xffff91406c90   176  add fp, jssp, #0x8 (8)
0xffff91406c94   180  movz x3, #0x0
0xffff91406c98   184  mov x16, lr
0xffff91406c9c   188  ldr x17, pc+132 (addr 0x0000ffff91406d20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91406ca0   192  blr x17
0xffff91406ca4   196  movz x0, #0x5000000000
0xffff91406ca8   200  movz x10, #0x0
0xffff91406cac   204  sub csp, jssp, #0x10 (16)
0xffff91406cb0   208  stp x10, x0, [jssp, #-16]!
0xffff91406cb4   212  movz x0, #0x2
0xffff91406cb8   216  movz x1, #0x5b88
0xffff91406cbc   220  movk x1, #0xe2, lsl #16
0xffff91406cc0   224  ldr x16, pc+104 (addr 0x0000ffff91406d28)    ;; code: STUB, CEntryStub, minor: 5
0xffff91406cc4   228  blr x16
0xffff91406cc8   232  str x0, [jssp, #24]
0xffff91406ccc   236  ldr x16, pc+100 (addr 0x0000ffff91406d30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91406cd0   240  blr x16
0xffff91406cd4   244  ldr lr, [jssp, #16]
0xffff91406cd8   248  ldp xzr, fp, [jssp], #24
0xffff91406cdc   252  b #-0xcc (addr 0xffff91406c10)
0xffff91406ce0   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff91406ce4   260  d63f03e0       constant
0xffff91406ce8   264  49b04201       constant
0xffff91406cec   268  00000000       constant
0xffff91406cf0   272  49b04201       constant
0xffff91406cf4   276  00000000       constant
0xffff91406cf8   280  36404259       constant
0xffff91406cfc   284  00000000       constant
0xffff91406d00   288  49b04519       constant
0xffff91406d04   292  00000000       constant
0xffff91406d08   296  49b04519       constant
0xffff91406d0c   300  00000000       constant
0xffff91406d10   304  49b04519       constant
0xffff91406d14   308  00000000       constant
0xffff91406d18   312  49b04519       constant
0xffff91406d1c   316  00000000       constant
0xffff91406d20   320  91406820       constant
0xffff91406d24   324  0000ffff       constant
0xffff91406d28   328  91406260       constant
0xffff91406d2c   332  0000ffff       constant
0xffff91406d30   336  914068e0       constant
0xffff91406d34   340  0000ffff       constant
0xffff91406d38   344  movz x16, #0x0
0xffff91406d3c   348  sub csp, jssp, #0x10 (16)
0xffff91406d40   352  stp fp, lr, [jssp, #-16]!
0xffff91406d44   356  bl #+0x4 (addr 0xffff91406d48)
0xffff91406d48   360  movz x17, #0xa00000000
0xffff91406d4c   364  sub csp, jssp, #0x10 (16)
0xffff91406d50   368  stp x17, cp, [jssp, #-16]!
0xffff91406d54   372  add fp, jssp, #0x10 (16)
0xffff91406d58   376  ldr x17, pc+24 (addr 0x0000ffff91406d70)    ;; lazy deoptimization bailout 0
0xffff91406d5c   380  add x17, x17, x16
0xffff91406d60   384  br x17
0xffff91406d64   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91406d68   392  d63f03e0       constant
0xffff91406d6c   396  d503201f       constant
0xffff91406d70   400  91206000       constant
0xffff91406d74   404  0000ffff       constant


Safepoints (size = 21)
0xffff91406cc8   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff91406c20  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91406c28  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91406c3c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91406c50  embedded object  (0x49b04519 <the hole>)
0xffff91406c58  embedded object  (0x49b04519 <the hole>)
0xffff91406c60  embedded object  (0x49b04519 <the hole>)
0xffff91406c68  embedded object  (0x49b04519 <the hole>)
0xffff91406c9c  code target (STUB)  (0xffff91406820)
0xffff91406cc0  code target (STUB)  (0xffff91406260)
0xffff91406ccc  code target (STUB)  (0xffff914068e0)
0xffff91406ce0  constant pool (size 88)
0xffff91406d58  runtime entry
0xffff91406d64  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 485)
0xffff91406e00     0  movz w0, #0x6000
0xffff91406e04     4  movk w0, #0x9, lsl #16
0xffff91406e08     8  cmp w0, #0x30 (48)
0xffff91406e0c    12  b.ls #+0x184 (addr 0xffff91406f90)
0xffff91406e10    16  movz x3, #0xf2c0
0xffff91406e14    20  movk x3, #0x4117, lsl #16
0xffff91406e18    24  ldp x4, x0, [x3]
0xffff91406e1c    28  adds x16, x4, #0x60 (96)
0xffff91406e20    32  ccmp x16, x0, #nzCv, lo
0xffff91406e24    36  b.hi #+0xa4 (addr 0xffff91406ec8)
0xffff91406e28    40  str x16, [x3]
0xffff91406e2c    44  orr x4, x4, #0x1
0xffff91406e30    48  movz w0, #0x0
0xffff91406e34    52  stur x0, [x4, #47]
0xffff91406e38    56  ldur x0, [x1, #39]
0xffff91406e3c    60  ldur x0, [x0, #39]
0xffff91406e40    64  movz x16, #0x17f
0xffff91406e44    68  ldr x0, [x0, x16]
0xffff91406e48    72  stur x0, [x4, #-1]
0xffff91406e4c    76  ldr x0, pc+236 (addr 0x0000ffff91406f38)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91406e50    80  stur x0, [x4, #7]
0xffff91406e54    84  ldr x0, pc+236 (addr 0x0000ffff91406f40)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91406e58    88  stur x0, [x4, #15]
0xffff91406e5c    92  movz x0, #0x0
0xffff91406e60    96  stur x0, [x4, #23]
0xffff91406e64   100  add x0, x4, #0x20 (32)
0xffff91406e68   104  ldr x1, pc+224 (addr 0x0000ffff91406f48)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91406e6c   108  stur x1, [x0, #-1]
0xffff91406e70   112  stur x2, [x0, #7]
0xffff91406e74   116  ldur w0, [x2, #35]
0xffff91406e78   120  add w0, w0, #0x1 (1)
0xffff91406e7c   124  lsl x0, x0, #32
0xffff91406e80   128  stur x0, [x2, #31]
0xffff91406e84   132  add x0, x4, #0x30 (48)
0xffff91406e88   136  ldr x1, pc+200 (addr 0x0000ffff91406f50)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91406e8c   140  stur x1, [x0, #-1]
0xffff91406e90   144  movz x1, #0x400000000
0xffff91406e94   148  stur x1, [x0, #7]
0xffff91406e98   152  stur x0, [x4, #15]
0xffff91406e9c   156  ldr x1, pc+188 (addr 0x0000ffff91406f58)    ;; object: 0x49b04519 <the hole>
0xffff91406ea0   160  stur x1, [x0, #15]
0xffff91406ea4   164  ldr x1, pc+188 (addr 0x0000ffff91406f60)    ;; object: 0x49b04519 <the hole>
0xffff91406ea8   168  stur x1, [x0, #23]
0xffff91406eac   172  ldr x1, pc+188 (addr 0x0000ffff91406f68)    ;; object: 0x49b04519 <the hole>
0xffff91406eb0   176  stur x1, [x0, #31]
0xffff91406eb4   180  ldr x1, pc+188 (addr 0x0000ffff91406f70)    ;; object: 0x49b04519 <the hole>
0xffff91406eb8   184  stur x1, [x0, #39]
0xffff91406ebc   188  mov x0, x4
0xffff91406ec0   192  add jssp, jssp, #0x8 (8)
0xffff91406ec4   196  ret
0xffff91406ec8   200  sub csp, jssp, #0x10 (16)
0xffff91406ecc   204  stp fp, lr, [jssp, #-16]!
0xffff91406ed0   208  movz fp, #0xa00000000
0xffff91406ed4   212  sub csp, jssp, #0x8 (8)
0xffff91406ed8   216  str fp, [jssp, #-8]!
0xffff91406edc   220  add fp, jssp, #0x8 (8)
0xffff91406ee0   224  movz x4, #0x0
0xffff91406ee4   228  mov x16, lr
0xffff91406ee8   232  ldr x17, pc+144 (addr 0x0000ffff91406f78)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91406eec   236  blr x17
0xffff91406ef0   240  movz x0, #0x6000000000
0xffff91406ef4   244  movz x10, #0x0
0xffff91406ef8   248  sub csp, jssp, #0x10 (16)
0xffff91406efc   252  stp x10, x0, [jssp, #-16]!
0xffff91406f00   256  movz x0, #0x2
0xffff91406f04   260  movz x1, #0x5b88
0xffff91406f08   264  movk x1, #0xe2, lsl #16
0xffff91406f0c   268  ldr x16, pc+116 (addr 0x0000ffff91406f80)    ;; code: STUB, CEntryStub, minor: 5
0xffff91406f10   272  blr x16
0xffff91406f14   276  str x0, [jssp, #32]
0xffff91406f18   280  ldr x16, pc+112 (addr 0x0000ffff91406f88)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91406f1c   284  blr x16
0xffff91406f20   288  ldr lr, [jssp, #16]
0xffff91406f24   292  ldp xzr, fp, [jssp], #24
0xffff91406f28   296  b #-0xf8 (addr 0xffff91406e30)
0xffff91406f2c   300  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff91406f30   304  d63f03e0       constant
0xffff91406f34   308  d503201f       constant
0xffff91406f38   312  49b04201       constant
0xffff91406f3c   316  00000000       constant
0xffff91406f40   320  49b04201       constant
0xffff91406f44   324  00000000       constant
0xffff91406f48   328  36405d81       constant
0xffff91406f4c   332  00000000       constant
0xffff91406f50   336  36404259       constant
0xffff91406f54   340  00000000       constant
0xffff91406f58   344  49b04519       constant
0xffff91406f5c   348  00000000       constant
0xffff91406f60   352  49b04519       constant
0xffff91406f64   356  00000000       constant
0xffff91406f68   360  49b04519       constant
0xffff91406f6c   364  00000000       constant
0xffff91406f70   368  49b04519       constant
0xffff91406f74   372  00000000       constant
0xffff91406f78   376  91406820       constant
0xffff91406f7c   380  0000ffff       constant
0xffff91406f80   384  91406260       constant
0xffff91406f84   388  0000ffff       constant
0xffff91406f88   392  914068e0       constant
0xffff91406f8c   396  0000ffff       constant
0xffff91406f90   400  movz x16, #0x0
0xffff91406f94   404  sub csp, jssp, #0x10 (16)
0xffff91406f98   408  stp fp, lr, [jssp, #-16]!
0xffff91406f9c   412  bl #+0x4 (addr 0xffff91406fa0)
0xffff91406fa0   416  movz x17, #0xa00000000
0xffff91406fa4   420  sub csp, jssp, #0x10 (16)
0xffff91406fa8   424  stp x17, cp, [jssp, #-16]!
0xffff91406fac   428  add fp, jssp, #0x10 (16)
0xffff91406fb0   432  ldr x17, pc+24 (addr 0x0000ffff91406fc8)    ;; lazy deoptimization bailout 0
0xffff91406fb4   436  add x17, x17, x16
0xffff91406fb8   440  br x17
0xffff91406fbc   444  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91406fc0   448  d63f03e0       constant
0xffff91406fc4   452  d503201f       constant
0xffff91406fc8   456  91206000       constant
0xffff91406fcc   460  0000ffff       constant


Safepoints (size = 21)
0xffff91406f14   276  000 | x1 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 29)
0xffff91406e4c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91406e54  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91406e68  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91406e88  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91406e9c  embedded object  (0x49b04519 <the hole>)
0xffff91406ea4  embedded object  (0x49b04519 <the hole>)
0xffff91406eac  embedded object  (0x49b04519 <the hole>)
0xffff91406eb4  embedded object  (0x49b04519 <the hole>)
0xffff91406ee8  code target (STUB)  (0xffff91406820)
0xffff91406f0c  code target (STUB)  (0xffff91406260)
0xffff91406f18  code target (STUB)  (0xffff914068e0)
0xffff91406f2c  constant pool (size 100)
0xffff91406fb0  runtime entry
0xffff91406fbc  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_HOLEY_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 485)
0xffff91406e00     0  movz w0, #0x6000
0xffff91406e04     4  movk w0, #0x9, lsl #16
0xffff91406e08     8  cmp w0, #0x30 (48)
0xffff91406e0c    12  b.ls #+0x184 (addr 0xffff91406f90)
0xffff91406e10    16  movz x3, #0xf2c0
0xffff91406e14    20  movk x3, #0x4117, lsl #16
0xffff91406e18    24  ldp x4, x0, [x3]
0xffff91406e1c    28  adds x16, x4, #0x60 (96)
0xffff91406e20    32  ccmp x16, x0, #nzCv, lo
0xffff91406e24    36  b.hi #+0xa4 (addr 0xffff91406ec8)
0xffff91406e28    40  str x16, [x3]
0xffff91406e2c    44  orr x4, x4, #0x1
0xffff91406e30    48  movz w0, #0x0
0xffff91406e34    52  stur x0, [x4, #47]
0xffff91406e38    56  ldur x0, [x1, #39]
0xffff91406e3c    60  ldur x0, [x0, #39]
0xffff91406e40    64  movz x16, #0x17f
0xffff91406e44    68  ldr x0, [x0, x16]
0xffff91406e48    72  stur x0, [x4, #-1]
0xffff91406e4c    76  ldr x0, pc+236 (addr 0x0000ffff91406f38)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91406e50    80  stur x0, [x4, #7]
0xffff91406e54    84  ldr x0, pc+236 (addr 0x0000ffff91406f40)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91406e58    88  stur x0, [x4, #15]
0xffff91406e5c    92  movz x0, #0x0
0xffff91406e60    96  stur x0, [x4, #23]
0xffff91406e64   100  add x0, x4, #0x20 (32)
0xffff91406e68   104  ldr x1, pc+224 (addr 0x0000ffff91406f48)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91406e6c   108  stur x1, [x0, #-1]
0xffff91406e70   112  stur x2, [x0, #7]
0xffff91406e74   116  ldur w0, [x2, #35]
0xffff91406e78   120  add w0, w0, #0x1 (1)
0xffff91406e7c   124  lsl x0, x0, #32
0xffff91406e80   128  stur x0, [x2, #31]
0xffff91406e84   132  add x0, x4, #0x30 (48)
0xffff91406e88   136  ldr x1, pc+200 (addr 0x0000ffff91406f50)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91406e8c   140  stur x1, [x0, #-1]
0xffff91406e90   144  movz x1, #0x400000000
0xffff91406e94   148  stur x1, [x0, #7]
0xffff91406e98   152  stur x0, [x4, #15]
0xffff91406e9c   156  ldr x1, pc+188 (addr 0x0000ffff91406f58)    ;; object: 0x49b04519 <the hole>
0xffff91406ea0   160  stur x1, [x0, #15]
0xffff91406ea4   164  ldr x1, pc+188 (addr 0x0000ffff91406f60)    ;; object: 0x49b04519 <the hole>
0xffff91406ea8   168  stur x1, [x0, #23]
0xffff91406eac   172  ldr x1, pc+188 (addr 0x0000ffff91406f68)    ;; object: 0x49b04519 <the hole>
0xffff91406eb0   176  stur x1, [x0, #31]
0xffff91406eb4   180  ldr x1, pc+188 (addr 0x0000ffff91406f70)    ;; object: 0x49b04519 <the hole>
0xffff91406eb8   184  stur x1, [x0, #39]
0xffff91406ebc   188  mov x0, x4
0xffff91406ec0   192  add jssp, jssp, #0x8 (8)
0xffff91406ec4   196  ret
0xffff91406ec8   200  sub csp, jssp, #0x10 (16)
0xffff91406ecc   204  stp fp, lr, [jssp, #-16]!
0xffff91406ed0   208  movz fp, #0xa00000000
0xffff91406ed4   212  sub csp, jssp, #0x8 (8)
0xffff91406ed8   216  str fp, [jssp, #-8]!
0xffff91406edc   220  add fp, jssp, #0x8 (8)
0xffff91406ee0   224  movz x4, #0x0
0xffff91406ee4   228  mov x16, lr
0xffff91406ee8   232  ldr x17, pc+144 (addr 0x0000ffff91406f78)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91406eec   236  blr x17
0xffff91406ef0   240  movz x0, #0x6000000000
0xffff91406ef4   244  movz x10, #0x0
0xffff91406ef8   248  sub csp, jssp, #0x10 (16)
0xffff91406efc   252  stp x10, x0, [jssp, #-16]!
0xffff91406f00   256  movz x0, #0x2
0xffff91406f04   260  movz x1, #0x5b88
0xffff91406f08   264  movk x1, #0xe2, lsl #16
0xffff91406f0c   268  ldr x16, pc+116 (addr 0x0000ffff91406f80)    ;; code: STUB, CEntryStub, minor: 5
0xffff91406f10   272  blr x16
0xffff91406f14   276  str x0, [jssp, #32]
0xffff91406f18   280  ldr x16, pc+112 (addr 0x0000ffff91406f88)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91406f1c   284  blr x16
0xffff91406f20   288  ldr lr, [jssp, #16]
0xffff91406f24   292  ldp xzr, fp, [jssp], #24
0xffff91406f28   296  b #-0xf8 (addr 0xffff91406e30)
0xffff91406f2c   300  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff91406f30   304  d63f03e0       constant
0xffff91406f34   308  d503201f       constant
0xffff91406f38   312  49b04201       constant
0xffff91406f3c   316  00000000       constant
0xffff91406f40   320  49b04201       constant
0xffff91406f44   324  00000000       constant
0xffff91406f48   328  36405d81       constant
0xffff91406f4c   332  00000000       constant
0xffff91406f50   336  36404259       constant
0xffff91406f54   340  00000000       constant
0xffff91406f58   344  49b04519       constant
0xffff91406f5c   348  00000000       constant
0xffff91406f60   352  49b04519       constant
0xffff91406f64   356  00000000       constant
0xffff91406f68   360  49b04519       constant
0xffff91406f6c   364  00000000       constant
0xffff91406f70   368  49b04519       constant
0xffff91406f74   372  00000000       constant
0xffff91406f78   376  91406820       constant
0xffff91406f7c   380  0000ffff       constant
0xffff91406f80   384  91406260       constant
0xffff91406f84   388  0000ffff       constant
0xffff91406f88   392  914068e0       constant
0xffff91406f8c   396  0000ffff       constant
0xffff91406f90   400  movz x16, #0x0
0xffff91406f94   404  sub csp, jssp, #0x10 (16)
0xffff91406f98   408  stp fp, lr, [jssp, #-16]!
0xffff91406f9c   412  bl #+0x4 (addr 0xffff91406fa0)
0xffff91406fa0   416  movz x17, #0xa00000000
0xffff91406fa4   420  sub csp, jssp, #0x10 (16)
0xffff91406fa8   424  stp x17, cp, [jssp, #-16]!
0xffff91406fac   428  add fp, jssp, #0x10 (16)
0xffff91406fb0   432  ldr x17, pc+24 (addr 0x0000ffff91406fc8)    ;; lazy deoptimization bailout 0
0xffff91406fb4   436  add x17, x17, x16
0xffff91406fb8   440  br x17
0xffff91406fbc   444  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91406fc0   448  d63f03e0       constant
0xffff91406fc4   452  d503201f       constant
0xffff91406fc8   456  91206000       constant
0xffff91406fcc   460  0000ffff       constant


Safepoints (size = 21)
0xffff91406f14   276  000 | x1 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 29)
0xffff91406e4c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91406e54  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91406e68  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91406e88  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91406e9c  embedded object  (0x49b04519 <the hole>)
0xffff91406ea4  embedded object  (0x49b04519 <the hole>)
0xffff91406eac  embedded object  (0x49b04519 <the hole>)
0xffff91406eb4  embedded object  (0x49b04519 <the hole>)
0xffff91406ee8  code target (STUB)  (0xffff91406820)
0xffff91406f0c  code target (STUB)  (0xffff91406260)
0xffff91406f18  code target (STUB)  (0xffff914068e0)
0xffff91406f2c  constant pool (size 100)
0xffff91406fb0  runtime entry
0xffff91406fbc  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 445)
0xffff91407060     0  movz w0, #0x6000
0xffff91407064     4  movk w0, #0x9, lsl #16
0xffff91407068     8  cmp w0, #0x30 (48)
0xffff9140706c    12  b.ls #+0x15c (addr 0xffff914071c8)
0xffff91407070    16  movz x2, #0xf2c0
0xffff91407074    20  movk x2, #0x4117, lsl #16
0xffff91407078    24  ldp x3, x0, [x2]
0xffff9140707c    28  adds x16, x3, #0x50 (80)
0xffff91407080    32  ccmp x16, x0, #nzCv, lo
0xffff91407084    36  b.hi #+0x84 (addr 0xffff91407108)
0xffff91407088    40  str x16, [x2]
0xffff9140708c    44  orr x3, x3, #0x1
0xffff91407090    48  movz w0, #0x0
0xffff91407094    52  stur x0, [x3, #31]
0xffff91407098    56  ldur x0, [x1, #39]
0xffff9140709c    60  ldur x0, [x0, #39]
0xffff914070a0    64  movz x16, #0x17f
0xffff914070a4    68  ldr x0, [x0, x16]
0xffff914070a8    72  stur x0, [x3, #-1]
0xffff914070ac    76  ldr x0, pc+204 (addr 0x0000ffff91407178)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914070b0    80  stur x0, [x3, #7]
0xffff914070b4    84  ldr x0, pc+204 (addr 0x0000ffff91407180)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914070b8    88  stur x0, [x3, #15]
0xffff914070bc    92  movz x0, #0x0
0xffff914070c0    96  stur x0, [x3, #23]
0xffff914070c4   100  add x0, x3, #0x20 (32)
0xffff914070c8   104  ldr x1, pc+192 (addr 0x0000ffff91407188)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914070cc   108  stur x1, [x0, #-1]
0xffff914070d0   112  movz x1, #0x400000000
0xffff914070d4   116  stur x1, [x0, #7]
0xffff914070d8   120  stur x0, [x3, #15]
0xffff914070dc   124  ldr x1, pc+180 (addr 0x0000ffff91407190)    ;; object: 0x49b04519 <the hole>
0xffff914070e0   128  stur x1, [x0, #15]
0xffff914070e4   132  ldr x1, pc+180 (addr 0x0000ffff91407198)    ;; object: 0x49b04519 <the hole>
0xffff914070e8   136  stur x1, [x0, #23]
0xffff914070ec   140  ldr x1, pc+180 (addr 0x0000ffff914071a0)    ;; object: 0x49b04519 <the hole>
0xffff914070f0   144  stur x1, [x0, #31]
0xffff914070f4   148  ldr x1, pc+180 (addr 0x0000ffff914071a8)    ;; object: 0x49b04519 <the hole>
0xffff914070f8   152  stur x1, [x0, #39]
0xffff914070fc   156  mov x0, x3
0xffff91407100   160  add jssp, jssp, #0x8 (8)
0xffff91407104   164  ret
0xffff91407108   168  sub csp, jssp, #0x10 (16)
0xffff9140710c   172  stp fp, lr, [jssp, #-16]!
0xffff91407110   176  movz fp, #0xa00000000
0xffff91407114   180  sub csp, jssp, #0x8 (8)
0xffff91407118   184  str fp, [jssp, #-8]!
0xffff9140711c   188  add fp, jssp, #0x8 (8)
0xffff91407120   192  movz x3, #0x0
0xffff91407124   196  mov x16, lr
0xffff91407128   200  ldr x17, pc+136 (addr 0x0000ffff914071b0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140712c   204  blr x17
0xffff91407130   208  movz x0, #0x5000000000
0xffff91407134   212  movz x10, #0x0
0xffff91407138   216  sub csp, jssp, #0x10 (16)
0xffff9140713c   220  stp x10, x0, [jssp, #-16]!
0xffff91407140   224  movz x0, #0x2
0xffff91407144   228  movz x1, #0x5b88
0xffff91407148   232  movk x1, #0xe2, lsl #16
0xffff9140714c   236  ldr x16, pc+108 (addr 0x0000ffff914071b8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91407150   240  blr x16
0xffff91407154   244  str x0, [jssp, #24]
0xffff91407158   248  ldr x16, pc+104 (addr 0x0000ffff914071c0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140715c   252  blr x16
0xffff91407160   256  ldr lr, [jssp, #16]
0xffff91407164   260  ldp xzr, fp, [jssp], #24
0xffff91407168   264  b #-0xd8 (addr 0xffff91407090)
0xffff9140716c   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff91407170   272  d63f03e0       constant
0xffff91407174   276  d503201f       constant
0xffff91407178   280  49b04201       constant
0xffff9140717c   284  00000000       constant
0xffff91407180   288  49b04201       constant
0xffff91407184   292  00000000       constant
0xffff91407188   296  36404259       constant
0xffff9140718c   300  00000000       constant
0xffff91407190   304  49b04519       constant
0xffff91407194   308  00000000       constant
0xffff91407198   312  49b04519       constant
0xffff9140719c   316  00000000       constant
0xffff914071a0   320  49b04519       constant
0xffff914071a4   324  00000000       constant
0xffff914071a8   328  49b04519       constant
0xffff914071ac   332  00000000       constant
0xffff914071b0   336  91406820       constant
0xffff914071b4   340  0000ffff       constant
0xffff914071b8   344  91406260       constant
0xffff914071bc   348  0000ffff       constant
0xffff914071c0   352  914068e0       constant
0xffff914071c4   356  0000ffff       constant
0xffff914071c8   360  movz x16, #0x0
0xffff914071cc   364  sub csp, jssp, #0x10 (16)
0xffff914071d0   368  stp fp, lr, [jssp, #-16]!
0xffff914071d4   372  bl #+0x4 (addr 0xffff914071d8)
0xffff914071d8   376  movz x17, #0xa00000000
0xffff914071dc   380  sub csp, jssp, #0x10 (16)
0xffff914071e0   384  stp x17, cp, [jssp, #-16]!
0xffff914071e4   388  add fp, jssp, #0x10 (16)
0xffff914071e8   392  ldr x17, pc+24 (addr 0x0000ffff91407200)    ;; lazy deoptimization bailout 0
0xffff914071ec   396  add x17, x17, x16
0xffff914071f0   400  br x17
0xffff914071f4   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914071f8   408  d63f03e0       constant
0xffff914071fc   412  d503201f       constant
0xffff91407200   416  91206000       constant
0xffff91407204   420  0000ffff       constant


Safepoints (size = 21)
0xffff91407154   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff914070ac  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914070b4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914070c8  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914070dc  embedded object  (0x49b04519 <the hole>)
0xffff914070e4  embedded object  (0x49b04519 <the hole>)
0xffff914070ec  embedded object  (0x49b04519 <the hole>)
0xffff914070f4  embedded object  (0x49b04519 <the hole>)
0xffff91407128  code target (STUB)  (0xffff91406820)
0xffff9140714c  code target (STUB)  (0xffff91406260)
0xffff91407158  code target (STUB)  (0xffff914068e0)
0xffff9140716c  constant pool (size 92)
0xffff914071e8  runtime entry
0xffff914071f4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_HOLEY_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 445)
0xffff91407060     0  movz w0, #0x6000
0xffff91407064     4  movk w0, #0x9, lsl #16
0xffff91407068     8  cmp w0, #0x30 (48)
0xffff9140706c    12  b.ls #+0x15c (addr 0xffff914071c8)
0xffff91407070    16  movz x2, #0xf2c0
0xffff91407074    20  movk x2, #0x4117, lsl #16
0xffff91407078    24  ldp x3, x0, [x2]
0xffff9140707c    28  adds x16, x3, #0x50 (80)
0xffff91407080    32  ccmp x16, x0, #nzCv, lo
0xffff91407084    36  b.hi #+0x84 (addr 0xffff91407108)
0xffff91407088    40  str x16, [x2]
0xffff9140708c    44  orr x3, x3, #0x1
0xffff91407090    48  movz w0, #0x0
0xffff91407094    52  stur x0, [x3, #31]
0xffff91407098    56  ldur x0, [x1, #39]
0xffff9140709c    60  ldur x0, [x0, #39]
0xffff914070a0    64  movz x16, #0x17f
0xffff914070a4    68  ldr x0, [x0, x16]
0xffff914070a8    72  stur x0, [x3, #-1]
0xffff914070ac    76  ldr x0, pc+204 (addr 0x0000ffff91407178)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914070b0    80  stur x0, [x3, #7]
0xffff914070b4    84  ldr x0, pc+204 (addr 0x0000ffff91407180)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914070b8    88  stur x0, [x3, #15]
0xffff914070bc    92  movz x0, #0x0
0xffff914070c0    96  stur x0, [x3, #23]
0xffff914070c4   100  add x0, x3, #0x20 (32)
0xffff914070c8   104  ldr x1, pc+192 (addr 0x0000ffff91407188)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914070cc   108  stur x1, [x0, #-1]
0xffff914070d0   112  movz x1, #0x400000000
0xffff914070d4   116  stur x1, [x0, #7]
0xffff914070d8   120  stur x0, [x3, #15]
0xffff914070dc   124  ldr x1, pc+180 (addr 0x0000ffff91407190)    ;; object: 0x49b04519 <the hole>
0xffff914070e0   128  stur x1, [x0, #15]
0xffff914070e4   132  ldr x1, pc+180 (addr 0x0000ffff91407198)    ;; object: 0x49b04519 <the hole>
0xffff914070e8   136  stur x1, [x0, #23]
0xffff914070ec   140  ldr x1, pc+180 (addr 0x0000ffff914071a0)    ;; object: 0x49b04519 <the hole>
0xffff914070f0   144  stur x1, [x0, #31]
0xffff914070f4   148  ldr x1, pc+180 (addr 0x0000ffff914071a8)    ;; object: 0x49b04519 <the hole>
0xffff914070f8   152  stur x1, [x0, #39]
0xffff914070fc   156  mov x0, x3
0xffff91407100   160  add jssp, jssp, #0x8 (8)
0xffff91407104   164  ret
0xffff91407108   168  sub csp, jssp, #0x10 (16)
0xffff9140710c   172  stp fp, lr, [jssp, #-16]!
0xffff91407110   176  movz fp, #0xa00000000
0xffff91407114   180  sub csp, jssp, #0x8 (8)
0xffff91407118   184  str fp, [jssp, #-8]!
0xffff9140711c   188  add fp, jssp, #0x8 (8)
0xffff91407120   192  movz x3, #0x0
0xffff91407124   196  mov x16, lr
0xffff91407128   200  ldr x17, pc+136 (addr 0x0000ffff914071b0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140712c   204  blr x17
0xffff91407130   208  movz x0, #0x5000000000
0xffff91407134   212  movz x10, #0x0
0xffff91407138   216  sub csp, jssp, #0x10 (16)
0xffff9140713c   220  stp x10, x0, [jssp, #-16]!
0xffff91407140   224  movz x0, #0x2
0xffff91407144   228  movz x1, #0x5b88
0xffff91407148   232  movk x1, #0xe2, lsl #16
0xffff9140714c   236  ldr x16, pc+108 (addr 0x0000ffff914071b8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91407150   240  blr x16
0xffff91407154   244  str x0, [jssp, #24]
0xffff91407158   248  ldr x16, pc+104 (addr 0x0000ffff914071c0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140715c   252  blr x16
0xffff91407160   256  ldr lr, [jssp, #16]
0xffff91407164   260  ldp xzr, fp, [jssp], #24
0xffff91407168   264  b #-0xd8 (addr 0xffff91407090)
0xffff9140716c   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff91407170   272  d63f03e0       constant
0xffff91407174   276  d503201f       constant
0xffff91407178   280  49b04201       constant
0xffff9140717c   284  00000000       constant
0xffff91407180   288  49b04201       constant
0xffff91407184   292  00000000       constant
0xffff91407188   296  36404259       constant
0xffff9140718c   300  00000000       constant
0xffff91407190   304  49b04519       constant
0xffff91407194   308  00000000       constant
0xffff91407198   312  49b04519       constant
0xffff9140719c   316  00000000       constant
0xffff914071a0   320  49b04519       constant
0xffff914071a4   324  00000000       constant
0xffff914071a8   328  49b04519       constant
0xffff914071ac   332  00000000       constant
0xffff914071b0   336  91406820       constant
0xffff914071b4   340  0000ffff       constant
0xffff914071b8   344  91406260       constant
0xffff914071bc   348  0000ffff       constant
0xffff914071c0   352  914068e0       constant
0xffff914071c4   356  0000ffff       constant
0xffff914071c8   360  movz x16, #0x0
0xffff914071cc   364  sub csp, jssp, #0x10 (16)
0xffff914071d0   368  stp fp, lr, [jssp, #-16]!
0xffff914071d4   372  bl #+0x4 (addr 0xffff914071d8)
0xffff914071d8   376  movz x17, #0xa00000000
0xffff914071dc   380  sub csp, jssp, #0x10 (16)
0xffff914071e0   384  stp x17, cp, [jssp, #-16]!
0xffff914071e4   388  add fp, jssp, #0x10 (16)
0xffff914071e8   392  ldr x17, pc+24 (addr 0x0000ffff91407200)    ;; lazy deoptimization bailout 0
0xffff914071ec   396  add x17, x17, x16
0xffff914071f0   400  br x17
0xffff914071f4   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914071f8   408  d63f03e0       constant
0xffff914071fc   412  d503201f       constant
0xffff91407200   416  91206000       constant
0xffff91407204   420  0000ffff       constant


Safepoints (size = 21)
0xffff91407154   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff914070ac  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914070b4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914070c8  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914070dc  embedded object  (0x49b04519 <the hole>)
0xffff914070e4  embedded object  (0x49b04519 <the hole>)
0xffff914070ec  embedded object  (0x49b04519 <the hole>)
0xffff914070f4  embedded object  (0x49b04519 <the hole>)
0xffff91407128  code target (STUB)  (0xffff91406820)
0xffff9140714c  code target (STUB)  (0xffff91406260)
0xffff91407158  code target (STUB)  (0xffff914068e0)
0xffff9140716c  constant pool (size 92)
0xffff914071e8  runtime entry
0xffff914071f4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 405)
0xffff91407280     0  movz w0, #0x6000
0xffff91407284     4  movk w0, #0x9, lsl #16
0xffff91407288     8  cmp w0, #0x30 (48)
0xffff9140728c    12  b.ls #+0x134 (addr 0xffff914073c0)
0xffff91407290    16  movz x2, #0xf2c0
0xffff91407294    20  movk x2, #0x4117, lsl #16
0xffff91407298    24  ldp x3, x0, [x2]
0xffff9140729c    28  adds x16, x3, #0x50 (80)
0xffff914072a0    32  ccmp x16, x0, #nzCv, lo
0xffff914072a4    36  b.hi #+0x78 (addr 0xffff9140731c)
0xffff914072a8    40  str x16, [x2]
0xffff914072ac    44  orr x3, x3, #0x1
0xffff914072b0    48  movz w0, #0x0
0xffff914072b4    52  stur x0, [x3, #31]
0xffff914072b8    56  ldur x0, [x1, #39]
0xffff914072bc    60  ldur x0, [x0, #39]
0xffff914072c0    64  movz x16, #0x197
0xffff914072c4    68  ldr x0, [x0, x16]
0xffff914072c8    72  stur x0, [x3, #-1]
0xffff914072cc    76  ldr x0, pc+196 (addr 0x0000ffff91407390)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914072d0    80  stur x0, [x3, #7]
0xffff914072d4    84  ldr x0, pc+196 (addr 0x0000ffff91407398)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914072d8    88  stur x0, [x3, #15]
0xffff914072dc    92  movz x0, #0x0
0xffff914072e0    96  stur x0, [x3, #23]
0xffff914072e4   100  add x0, x3, #0x20 (32)
0xffff914072e8   104  ldr x1, pc+184 (addr 0x0000ffff914073a0)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914072ec   108  stur x1, [x0, #-1]
0xffff914072f0   112  movz x1, #0x400000000
0xffff914072f4   116  stur x1, [x0, #7]
0xffff914072f8   120  stur x0, [x3, #15]
0xffff914072fc   124  ldr d0, pc+140 (addr 0x0000ffff91407388)
0xffff91407300   128  stur d0, [x0, #15]
0xffff91407304   132  stur d0, [x0, #23]
0xffff91407308   136  stur d0, [x0, #31]
0xffff9140730c   140  stur d0, [x0, #39]
0xffff91407310   144  mov x0, x3
0xffff91407314   148  add jssp, jssp, #0x8 (8)
0xffff91407318   152  ret
0xffff9140731c   156  sub csp, jssp, #0x10 (16)
0xffff91407320   160  stp fp, lr, [jssp, #-16]!
0xffff91407324   164  movz fp, #0xa00000000
0xffff91407328   168  sub csp, jssp, #0x8 (8)
0xffff9140732c   172  str fp, [jssp, #-8]!
0xffff91407330   176  add fp, jssp, #0x8 (8)
0xffff91407334   180  movz x3, #0x0
0xffff91407338   184  mov x16, lr
0xffff9140733c   188  ldr x17, pc+108 (addr 0x0000ffff914073a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91407340   192  blr x17
0xffff91407344   196  movz x0, #0x5000000000
0xffff91407348   200  movz x10, #0x100000000
0xffff9140734c   204  sub csp, jssp, #0x10 (16)
0xffff91407350   208  stp x10, x0, [jssp, #-16]!
0xffff91407354   212  movz x0, #0x2
0xffff91407358   216  movz x1, #0x5b88
0xffff9140735c   220  movk x1, #0xe2, lsl #16
0xffff91407360   224  ldr x16, pc+80 (addr 0x0000ffff914073b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91407364   228  blr x16
0xffff91407368   232  str x0, [jssp, #24]
0xffff9140736c   236  ldr x16, pc+76 (addr 0x0000ffff914073b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91407370   240  blr x16
0xffff91407374   244  ldr lr, [jssp, #16]
0xffff91407378   248  ldp xzr, fp, [jssp], #24
0xffff9140737c   252  b #-0xcc (addr 0xffff914072b0)
0xffff91407380   256  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff91407384   260  d63f03e0       constant
0xffff91407388   264  fff7ffff       constant
0xffff9140738c   268  fff7ffff       constant
0xffff91407390   272  49b04201       constant
0xffff91407394   276  00000000       constant
0xffff91407398   280  49b04201       constant
0xffff9140739c   284  00000000       constant
0xffff914073a0   288  364052d9       constant
0xffff914073a4   292  00000000       constant
0xffff914073a8   296  91406820       constant
0xffff914073ac   300  0000ffff       constant
0xffff914073b0   304  91406260       constant
0xffff914073b4   308  0000ffff       constant
0xffff914073b8   312  914068e0       constant
0xffff914073bc   316  0000ffff       constant
0xffff914073c0   320  movz x16, #0x0
0xffff914073c4   324  sub csp, jssp, #0x10 (16)
0xffff914073c8   328  stp fp, lr, [jssp, #-16]!
0xffff914073cc   332  bl #+0x4 (addr 0xffff914073d0)
0xffff914073d0   336  movz x17, #0xa00000000
0xffff914073d4   340  sub csp, jssp, #0x10 (16)
0xffff914073d8   344  stp x17, cp, [jssp, #-16]!
0xffff914073dc   348  add fp, jssp, #0x10 (16)
0xffff914073e0   352  ldr x17, pc+24 (addr 0x0000ffff914073f8)    ;; lazy deoptimization bailout 0
0xffff914073e4   356  add x17, x17, x16
0xffff914073e8   360  br x17
0xffff914073ec   364  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914073f0   368  d63f03e0       constant
0xffff914073f4   372  d503201f       constant
0xffff914073f8   376  91206000       constant
0xffff914073fc   380  0000ffff       constant


Safepoints (size = 21)
0xffff91407368   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff914072cc  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914072d4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914072e8  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140733c  code target (STUB)  (0xffff91406820)
0xffff91407360  code target (STUB)  (0xffff91406260)
0xffff9140736c  code target (STUB)  (0xffff914068e0)
0xffff91407380  constant pool (size 64)
0xffff914073e0  runtime entry
0xffff914073ec  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 405)
0xffff91407280     0  movz w0, #0x6000
0xffff91407284     4  movk w0, #0x9, lsl #16
0xffff91407288     8  cmp w0, #0x30 (48)
0xffff9140728c    12  b.ls #+0x134 (addr 0xffff914073c0)
0xffff91407290    16  movz x2, #0xf2c0
0xffff91407294    20  movk x2, #0x4117, lsl #16
0xffff91407298    24  ldp x3, x0, [x2]
0xffff9140729c    28  adds x16, x3, #0x50 (80)
0xffff914072a0    32  ccmp x16, x0, #nzCv, lo
0xffff914072a4    36  b.hi #+0x78 (addr 0xffff9140731c)
0xffff914072a8    40  str x16, [x2]
0xffff914072ac    44  orr x3, x3, #0x1
0xffff914072b0    48  movz w0, #0x0
0xffff914072b4    52  stur x0, [x3, #31]
0xffff914072b8    56  ldur x0, [x1, #39]
0xffff914072bc    60  ldur x0, [x0, #39]
0xffff914072c0    64  movz x16, #0x197
0xffff914072c4    68  ldr x0, [x0, x16]
0xffff914072c8    72  stur x0, [x3, #-1]
0xffff914072cc    76  ldr x0, pc+196 (addr 0x0000ffff91407390)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914072d0    80  stur x0, [x3, #7]
0xffff914072d4    84  ldr x0, pc+196 (addr 0x0000ffff91407398)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914072d8    88  stur x0, [x3, #15]
0xffff914072dc    92  movz x0, #0x0
0xffff914072e0    96  stur x0, [x3, #23]
0xffff914072e4   100  add x0, x3, #0x20 (32)
0xffff914072e8   104  ldr x1, pc+184 (addr 0x0000ffff914073a0)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914072ec   108  stur x1, [x0, #-1]
0xffff914072f0   112  movz x1, #0x400000000
0xffff914072f4   116  stur x1, [x0, #7]
0xffff914072f8   120  stur x0, [x3, #15]
0xffff914072fc   124  ldr d0, pc+140 (addr 0x0000ffff91407388)
0xffff91407300   128  stur d0, [x0, #15]
0xffff91407304   132  stur d0, [x0, #23]
0xffff91407308   136  stur d0, [x0, #31]
0xffff9140730c   140  stur d0, [x0, #39]
0xffff91407310   144  mov x0, x3
0xffff91407314   148  add jssp, jssp, #0x8 (8)
0xffff91407318   152  ret
0xffff9140731c   156  sub csp, jssp, #0x10 (16)
0xffff91407320   160  stp fp, lr, [jssp, #-16]!
0xffff91407324   164  movz fp, #0xa00000000
0xffff91407328   168  sub csp, jssp, #0x8 (8)
0xffff9140732c   172  str fp, [jssp, #-8]!
0xffff91407330   176  add fp, jssp, #0x8 (8)
0xffff91407334   180  movz x3, #0x0
0xffff91407338   184  mov x16, lr
0xffff9140733c   188  ldr x17, pc+108 (addr 0x0000ffff914073a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91407340   192  blr x17
0xffff91407344   196  movz x0, #0x5000000000
0xffff91407348   200  movz x10, #0x100000000
0xffff9140734c   204  sub csp, jssp, #0x10 (16)
0xffff91407350   208  stp x10, x0, [jssp, #-16]!
0xffff91407354   212  movz x0, #0x2
0xffff91407358   216  movz x1, #0x5b88
0xffff9140735c   220  movk x1, #0xe2, lsl #16
0xffff91407360   224  ldr x16, pc+80 (addr 0x0000ffff914073b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91407364   228  blr x16
0xffff91407368   232  str x0, [jssp, #24]
0xffff9140736c   236  ldr x16, pc+76 (addr 0x0000ffff914073b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91407370   240  blr x16
0xffff91407374   244  ldr lr, [jssp, #16]
0xffff91407378   248  ldp xzr, fp, [jssp], #24
0xffff9140737c   252  b #-0xcc (addr 0xffff914072b0)
0xffff91407380   256  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff91407384   260  d63f03e0       constant
0xffff91407388   264  fff7ffff       constant
0xffff9140738c   268  fff7ffff       constant
0xffff91407390   272  49b04201       constant
0xffff91407394   276  00000000       constant
0xffff91407398   280  49b04201       constant
0xffff9140739c   284  00000000       constant
0xffff914073a0   288  364052d9       constant
0xffff914073a4   292  00000000       constant
0xffff914073a8   296  91406820       constant
0xffff914073ac   300  0000ffff       constant
0xffff914073b0   304  91406260       constant
0xffff914073b4   308  0000ffff       constant
0xffff914073b8   312  914068e0       constant
0xffff914073bc   316  0000ffff       constant
0xffff914073c0   320  movz x16, #0x0
0xffff914073c4   324  sub csp, jssp, #0x10 (16)
0xffff914073c8   328  stp fp, lr, [jssp, #-16]!
0xffff914073cc   332  bl #+0x4 (addr 0xffff914073d0)
0xffff914073d0   336  movz x17, #0xa00000000
0xffff914073d4   340  sub csp, jssp, #0x10 (16)
0xffff914073d8   344  stp x17, cp, [jssp, #-16]!
0xffff914073dc   348  add fp, jssp, #0x10 (16)
0xffff914073e0   352  ldr x17, pc+24 (addr 0x0000ffff914073f8)    ;; lazy deoptimization bailout 0
0xffff914073e4   356  add x17, x17, x16
0xffff914073e8   360  br x17
0xffff914073ec   364  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914073f0   368  d63f03e0       constant
0xffff914073f4   372  d503201f       constant
0xffff914073f8   376  91206000       constant
0xffff914073fc   380  0000ffff       constant


Safepoints (size = 21)
0xffff91407368   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff914072cc  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914072d4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914072e8  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140733c  code target (STUB)  (0xffff91406820)
0xffff91407360  code target (STUB)  (0xffff91406260)
0xffff9140736c  code target (STUB)  (0xffff914068e0)
0xffff91407380  constant pool (size 64)
0xffff914073e0  runtime entry
0xffff914073ec  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 405)
0xffff91407480     0  movz w0, #0x6000
0xffff91407484     4  movk w0, #0x9, lsl #16
0xffff91407488     8  cmp w0, #0x30 (48)
0xffff9140748c    12  b.ls #+0x134 (addr 0xffff914075c0)
0xffff91407490    16  movz x2, #0xf2c0
0xffff91407494    20  movk x2, #0x4117, lsl #16
0xffff91407498    24  ldp x3, x0, [x2]
0xffff9140749c    28  adds x16, x3, #0x50 (80)
0xffff914074a0    32  ccmp x16, x0, #nzCv, lo
0xffff914074a4    36  b.hi #+0x78 (addr 0xffff9140751c)
0xffff914074a8    40  str x16, [x2]
0xffff914074ac    44  orr x3, x3, #0x1
0xffff914074b0    48  movz w0, #0x0
0xffff914074b4    52  stur x0, [x3, #31]
0xffff914074b8    56  ldur x0, [x1, #39]
0xffff914074bc    60  ldur x0, [x0, #39]
0xffff914074c0    64  movz x16, #0x19f
0xffff914074c4    68  ldr x0, [x0, x16]
0xffff914074c8    72  stur x0, [x3, #-1]
0xffff914074cc    76  ldr x0, pc+196 (addr 0x0000ffff91407590)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914074d0    80  stur x0, [x3, #7]
0xffff914074d4    84  ldr x0, pc+196 (addr 0x0000ffff91407598)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914074d8    88  stur x0, [x3, #15]
0xffff914074dc    92  movz x0, #0x0
0xffff914074e0    96  stur x0, [x3, #23]
0xffff914074e4   100  add x0, x3, #0x20 (32)
0xffff914074e8   104  ldr x1, pc+184 (addr 0x0000ffff914075a0)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914074ec   108  stur x1, [x0, #-1]
0xffff914074f0   112  movz x1, #0x400000000
0xffff914074f4   116  stur x1, [x0, #7]
0xffff914074f8   120  stur x0, [x3, #15]
0xffff914074fc   124  ldr d0, pc+140 (addr 0x0000ffff91407588)
0xffff91407500   128  stur d0, [x0, #15]
0xffff91407504   132  stur d0, [x0, #23]
0xffff91407508   136  stur d0, [x0, #31]
0xffff9140750c   140  stur d0, [x0, #39]
0xffff91407510   144  mov x0, x3
0xffff91407514   148  add jssp, jssp, #0x8 (8)
0xffff91407518   152  ret
0xffff9140751c   156  sub csp, jssp, #0x10 (16)
0xffff91407520   160  stp fp, lr, [jssp, #-16]!
0xffff91407524   164  movz fp, #0xa00000000
0xffff91407528   168  sub csp, jssp, #0x8 (8)
0xffff9140752c   172  str fp, [jssp, #-8]!
0xffff91407530   176  add fp, jssp, #0x8 (8)
0xffff91407534   180  movz x3, #0x0
0xffff91407538   184  mov x16, lr
0xffff9140753c   188  ldr x17, pc+108 (addr 0x0000ffff914075a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91407540   192  blr x17
0xffff91407544   196  movz x0, #0x5000000000
0xffff91407548   200  movz x10, #0x100000000
0xffff9140754c   204  sub csp, jssp, #0x10 (16)
0xffff91407550   208  stp x10, x0, [jssp, #-16]!
0xffff91407554   212  movz x0, #0x2
0xffff91407558   216  movz x1, #0x5b88
0xffff9140755c   220  movk x1, #0xe2, lsl #16
0xffff91407560   224  ldr x16, pc+80 (addr 0x0000ffff914075b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91407564   228  blr x16
0xffff91407568   232  str x0, [jssp, #24]
0xffff9140756c   236  ldr x16, pc+76 (addr 0x0000ffff914075b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91407570   240  blr x16
0xffff91407574   244  ldr lr, [jssp, #16]
0xffff91407578   248  ldp xzr, fp, [jssp], #24
0xffff9140757c   252  b #-0xcc (addr 0xffff914074b0)
0xffff91407580   256  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff91407584   260  d63f03e0       constant
0xffff91407588   264  fff7ffff       constant
0xffff9140758c   268  fff7ffff       constant
0xffff91407590   272  49b04201       constant
0xffff91407594   276  00000000       constant
0xffff91407598   280  49b04201       constant
0xffff9140759c   284  00000000       constant
0xffff914075a0   288  364052d9       constant
0xffff914075a4   292  00000000       constant
0xffff914075a8   296  91406820       constant
0xffff914075ac   300  0000ffff       constant
0xffff914075b0   304  91406260       constant
0xffff914075b4   308  0000ffff       constant
0xffff914075b8   312  914068e0       constant
0xffff914075bc   316  0000ffff       constant
0xffff914075c0   320  movz x16, #0x0
0xffff914075c4   324  sub csp, jssp, #0x10 (16)
0xffff914075c8   328  stp fp, lr, [jssp, #-16]!
0xffff914075cc   332  bl #+0x4 (addr 0xffff914075d0)
0xffff914075d0   336  movz x17, #0xa00000000
0xffff914075d4   340  sub csp, jssp, #0x10 (16)
0xffff914075d8   344  stp x17, cp, [jssp, #-16]!
0xffff914075dc   348  add fp, jssp, #0x10 (16)
0xffff914075e0   352  ldr x17, pc+24 (addr 0x0000ffff914075f8)    ;; lazy deoptimization bailout 0
0xffff914075e4   356  add x17, x17, x16
0xffff914075e8   360  br x17
0xffff914075ec   364  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914075f0   368  d63f03e0       constant
0xffff914075f4   372  d503201f       constant
0xffff914075f8   376  91206000       constant
0xffff914075fc   380  0000ffff       constant


Safepoints (size = 21)
0xffff91407568   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff914074cc  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914074d4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914074e8  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140753c  code target (STUB)  (0xffff91406820)
0xffff91407560  code target (STUB)  (0xffff91406260)
0xffff9140756c  code target (STUB)  (0xffff914068e0)
0xffff91407580  constant pool (size 64)
0xffff914075e0  runtime entry
0xffff914075ec  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_HOLEY_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 405)
0xffff91407480     0  movz w0, #0x6000
0xffff91407484     4  movk w0, #0x9, lsl #16
0xffff91407488     8  cmp w0, #0x30 (48)
0xffff9140748c    12  b.ls #+0x134 (addr 0xffff914075c0)
0xffff91407490    16  movz x2, #0xf2c0
0xffff91407494    20  movk x2, #0x4117, lsl #16
0xffff91407498    24  ldp x3, x0, [x2]
0xffff9140749c    28  adds x16, x3, #0x50 (80)
0xffff914074a0    32  ccmp x16, x0, #nzCv, lo
0xffff914074a4    36  b.hi #+0x78 (addr 0xffff9140751c)
0xffff914074a8    40  str x16, [x2]
0xffff914074ac    44  orr x3, x3, #0x1
0xffff914074b0    48  movz w0, #0x0
0xffff914074b4    52  stur x0, [x3, #31]
0xffff914074b8    56  ldur x0, [x1, #39]
0xffff914074bc    60  ldur x0, [x0, #39]
0xffff914074c0    64  movz x16, #0x19f
0xffff914074c4    68  ldr x0, [x0, x16]
0xffff914074c8    72  stur x0, [x3, #-1]
0xffff914074cc    76  ldr x0, pc+196 (addr 0x0000ffff91407590)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914074d0    80  stur x0, [x3, #7]
0xffff914074d4    84  ldr x0, pc+196 (addr 0x0000ffff91407598)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914074d8    88  stur x0, [x3, #15]
0xffff914074dc    92  movz x0, #0x0
0xffff914074e0    96  stur x0, [x3, #23]
0xffff914074e4   100  add x0, x3, #0x20 (32)
0xffff914074e8   104  ldr x1, pc+184 (addr 0x0000ffff914075a0)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914074ec   108  stur x1, [x0, #-1]
0xffff914074f0   112  movz x1, #0x400000000
0xffff914074f4   116  stur x1, [x0, #7]
0xffff914074f8   120  stur x0, [x3, #15]
0xffff914074fc   124  ldr d0, pc+140 (addr 0x0000ffff91407588)
0xffff91407500   128  stur d0, [x0, #15]
0xffff91407504   132  stur d0, [x0, #23]
0xffff91407508   136  stur d0, [x0, #31]
0xffff9140750c   140  stur d0, [x0, #39]
0xffff91407510   144  mov x0, x3
0xffff91407514   148  add jssp, jssp, #0x8 (8)
0xffff91407518   152  ret
0xffff9140751c   156  sub csp, jssp, #0x10 (16)
0xffff91407520   160  stp fp, lr, [jssp, #-16]!
0xffff91407524   164  movz fp, #0xa00000000
0xffff91407528   168  sub csp, jssp, #0x8 (8)
0xffff9140752c   172  str fp, [jssp, #-8]!
0xffff91407530   176  add fp, jssp, #0x8 (8)
0xffff91407534   180  movz x3, #0x0
0xffff91407538   184  mov x16, lr
0xffff9140753c   188  ldr x17, pc+108 (addr 0x0000ffff914075a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91407540   192  blr x17
0xffff91407544   196  movz x0, #0x5000000000
0xffff91407548   200  movz x10, #0x100000000
0xffff9140754c   204  sub csp, jssp, #0x10 (16)
0xffff91407550   208  stp x10, x0, [jssp, #-16]!
0xffff91407554   212  movz x0, #0x2
0xffff91407558   216  movz x1, #0x5b88
0xffff9140755c   220  movk x1, #0xe2, lsl #16
0xffff91407560   224  ldr x16, pc+80 (addr 0x0000ffff914075b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91407564   228  blr x16
0xffff91407568   232  str x0, [jssp, #24]
0xffff9140756c   236  ldr x16, pc+76 (addr 0x0000ffff914075b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91407570   240  blr x16
0xffff91407574   244  ldr lr, [jssp, #16]
0xffff91407578   248  ldp xzr, fp, [jssp], #24
0xffff9140757c   252  b #-0xcc (addr 0xffff914074b0)
0xffff91407580   256  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff91407584   260  d63f03e0       constant
0xffff91407588   264  fff7ffff       constant
0xffff9140758c   268  fff7ffff       constant
0xffff91407590   272  49b04201       constant
0xffff91407594   276  00000000       constant
0xffff91407598   280  49b04201       constant
0xffff9140759c   284  00000000       constant
0xffff914075a0   288  364052d9       constant
0xffff914075a4   292  00000000       constant
0xffff914075a8   296  91406820       constant
0xffff914075ac   300  0000ffff       constant
0xffff914075b0   304  91406260       constant
0xffff914075b4   308  0000ffff       constant
0xffff914075b8   312  914068e0       constant
0xffff914075bc   316  0000ffff       constant
0xffff914075c0   320  movz x16, #0x0
0xffff914075c4   324  sub csp, jssp, #0x10 (16)
0xffff914075c8   328  stp fp, lr, [jssp, #-16]!
0xffff914075cc   332  bl #+0x4 (addr 0xffff914075d0)
0xffff914075d0   336  movz x17, #0xa00000000
0xffff914075d4   340  sub csp, jssp, #0x10 (16)
0xffff914075d8   344  stp x17, cp, [jssp, #-16]!
0xffff914075dc   348  add fp, jssp, #0x10 (16)
0xffff914075e0   352  ldr x17, pc+24 (addr 0x0000ffff914075f8)    ;; lazy deoptimization bailout 0
0xffff914075e4   356  add x17, x17, x16
0xffff914075e8   360  br x17
0xffff914075ec   364  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914075f0   368  d63f03e0       constant
0xffff914075f4   372  d503201f       constant
0xffff914075f8   376  91206000       constant
0xffff914075fc   380  0000ffff       constant


Safepoints (size = 21)
0xffff91407568   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff914074cc  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914074d4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914074e8  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140753c  code target (STUB)  (0xffff91406820)
0xffff91407560  code target (STUB)  (0xffff91406260)
0xffff9140756c  code target (STUB)  (0xffff914068e0)
0xffff91407580  constant pool (size 64)
0xffff914075e0  runtime entry
0xffff914075ec  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 445)
0xffff91407680     0  movz w0, #0x6000
0xffff91407684     4  movk w0, #0x9, lsl #16
0xffff91407688     8  cmp w0, #0x30 (48)
0xffff9140768c    12  b.ls #+0x15c (addr 0xffff914077e8)
0xffff91407690    16  movz x2, #0xf2c0
0xffff91407694    20  movk x2, #0x4117, lsl #16
0xffff91407698    24  ldp x3, x0, [x2]
0xffff9140769c    28  adds x16, x3, #0x50 (80)
0xffff914076a0    32  ccmp x16, x0, #nzCv, lo
0xffff914076a4    36  b.hi #+0x84 (addr 0xffff91407728)
0xffff914076a8    40  str x16, [x2]
0xffff914076ac    44  orr x3, x3, #0x1
0xffff914076b0    48  movz w0, #0x0
0xffff914076b4    52  stur x0, [x3, #31]
0xffff914076b8    56  ldur x0, [x1, #39]
0xffff914076bc    60  ldur x0, [x0, #39]
0xffff914076c0    64  movz x16, #0x187
0xffff914076c4    68  ldr x0, [x0, x16]
0xffff914076c8    72  stur x0, [x3, #-1]
0xffff914076cc    76  ldr x0, pc+204 (addr 0x0000ffff91407798)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914076d0    80  stur x0, [x3, #7]
0xffff914076d4    84  ldr x0, pc+204 (addr 0x0000ffff914077a0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914076d8    88  stur x0, [x3, #15]
0xffff914076dc    92  movz x0, #0x0
0xffff914076e0    96  stur x0, [x3, #23]
0xffff914076e4   100  add x0, x3, #0x20 (32)
0xffff914076e8   104  ldr x1, pc+192 (addr 0x0000ffff914077a8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914076ec   108  stur x1, [x0, #-1]
0xffff914076f0   112  movz x1, #0x400000000
0xffff914076f4   116  stur x1, [x0, #7]
0xffff914076f8   120  stur x0, [x3, #15]
0xffff914076fc   124  ldr x1, pc+180 (addr 0x0000ffff914077b0)    ;; object: 0x49b04519 <the hole>
0xffff91407700   128  stur x1, [x0, #15]
0xffff91407704   132  ldr x1, pc+180 (addr 0x0000ffff914077b8)    ;; object: 0x49b04519 <the hole>
0xffff91407708   136  stur x1, [x0, #23]
0xffff9140770c   140  ldr x1, pc+180 (addr 0x0000ffff914077c0)    ;; object: 0x49b04519 <the hole>
0xffff91407710   144  stur x1, [x0, #31]
0xffff91407714   148  ldr x1, pc+180 (addr 0x0000ffff914077c8)    ;; object: 0x49b04519 <the hole>
0xffff91407718   152  stur x1, [x0, #39]
0xffff9140771c   156  mov x0, x3
0xffff91407720   160  add jssp, jssp, #0x8 (8)
0xffff91407724   164  ret
0xffff91407728   168  sub csp, jssp, #0x10 (16)
0xffff9140772c   172  stp fp, lr, [jssp, #-16]!
0xffff91407730   176  movz fp, #0xa00000000
0xffff91407734   180  sub csp, jssp, #0x8 (8)
0xffff91407738   184  str fp, [jssp, #-8]!
0xffff9140773c   188  add fp, jssp, #0x8 (8)
0xffff91407740   192  movz x3, #0x0
0xffff91407744   196  mov x16, lr
0xffff91407748   200  ldr x17, pc+136 (addr 0x0000ffff914077d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140774c   204  blr x17
0xffff91407750   208  movz x0, #0x5000000000
0xffff91407754   212  movz x10, #0x0
0xffff91407758   216  sub csp, jssp, #0x10 (16)
0xffff9140775c   220  stp x10, x0, [jssp, #-16]!
0xffff91407760   224  movz x0, #0x2
0xffff91407764   228  movz x1, #0x5b88
0xffff91407768   232  movk x1, #0xe2, lsl #16
0xffff9140776c   236  ldr x16, pc+108 (addr 0x0000ffff914077d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91407770   240  blr x16
0xffff91407774   244  str x0, [jssp, #24]
0xffff91407778   248  ldr x16, pc+104 (addr 0x0000ffff914077e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140777c   252  blr x16
0xffff91407780   256  ldr lr, [jssp, #16]
0xffff91407784   260  ldp xzr, fp, [jssp], #24
0xffff91407788   264  b #-0xd8 (addr 0xffff914076b0)
0xffff9140778c   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff91407790   272  d63f03e0       constant
0xffff91407794   276  d503201f       constant
0xffff91407798   280  49b04201       constant
0xffff9140779c   284  00000000       constant
0xffff914077a0   288  49b04201       constant
0xffff914077a4   292  00000000       constant
0xffff914077a8   296  36404259       constant
0xffff914077ac   300  00000000       constant
0xffff914077b0   304  49b04519       constant
0xffff914077b4   308  00000000       constant
0xffff914077b8   312  49b04519       constant
0xffff914077bc   316  00000000       constant
0xffff914077c0   320  49b04519       constant
0xffff914077c4   324  00000000       constant
0xffff914077c8   328  49b04519       constant
0xffff914077cc   332  00000000       constant
0xffff914077d0   336  91406820       constant
0xffff914077d4   340  0000ffff       constant
0xffff914077d8   344  91406260       constant
0xffff914077dc   348  0000ffff       constant
0xffff914077e0   352  914068e0       constant
0xffff914077e4   356  0000ffff       constant
0xffff914077e8   360  movz x16, #0x0
0xffff914077ec   364  sub csp, jssp, #0x10 (16)
0xffff914077f0   368  stp fp, lr, [jssp, #-16]!
0xffff914077f4   372  bl #+0x4 (addr 0xffff914077f8)
0xffff914077f8   376  movz x17, #0xa00000000
0xffff914077fc   380  sub csp, jssp, #0x10 (16)
0xffff91407800   384  stp x17, cp, [jssp, #-16]!
0xffff91407804   388  add fp, jssp, #0x10 (16)
0xffff91407808   392  ldr x17, pc+24 (addr 0x0000ffff91407820)    ;; lazy deoptimization bailout 0
0xffff9140780c   396  add x17, x17, x16
0xffff91407810   400  br x17
0xffff91407814   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91407818   408  d63f03e0       constant
0xffff9140781c   412  d503201f       constant
0xffff91407820   416  91206000       constant
0xffff91407824   420  0000ffff       constant


Safepoints (size = 21)
0xffff91407774   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff914076cc  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914076d4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914076e8  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914076fc  embedded object  (0x49b04519 <the hole>)
0xffff91407704  embedded object  (0x49b04519 <the hole>)
0xffff9140770c  embedded object  (0x49b04519 <the hole>)
0xffff91407714  embedded object  (0x49b04519 <the hole>)
0xffff91407748  code target (STUB)  (0xffff91406820)
0xffff9140776c  code target (STUB)  (0xffff91406260)
0xffff91407778  code target (STUB)  (0xffff914068e0)
0xffff9140778c  constant pool (size 92)
0xffff91407808  runtime entry
0xffff91407814  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_ELEMENTS
compiler = crankshaft
Instructions (size = 445)
0xffff91407680     0  movz w0, #0x6000
0xffff91407684     4  movk w0, #0x9, lsl #16
0xffff91407688     8  cmp w0, #0x30 (48)
0xffff9140768c    12  b.ls #+0x15c (addr 0xffff914077e8)
0xffff91407690    16  movz x2, #0xf2c0
0xffff91407694    20  movk x2, #0x4117, lsl #16
0xffff91407698    24  ldp x3, x0, [x2]
0xffff9140769c    28  adds x16, x3, #0x50 (80)
0xffff914076a0    32  ccmp x16, x0, #nzCv, lo
0xffff914076a4    36  b.hi #+0x84 (addr 0xffff91407728)
0xffff914076a8    40  str x16, [x2]
0xffff914076ac    44  orr x3, x3, #0x1
0xffff914076b0    48  movz w0, #0x0
0xffff914076b4    52  stur x0, [x3, #31]
0xffff914076b8    56  ldur x0, [x1, #39]
0xffff914076bc    60  ldur x0, [x0, #39]
0xffff914076c0    64  movz x16, #0x187
0xffff914076c4    68  ldr x0, [x0, x16]
0xffff914076c8    72  stur x0, [x3, #-1]
0xffff914076cc    76  ldr x0, pc+204 (addr 0x0000ffff91407798)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914076d0    80  stur x0, [x3, #7]
0xffff914076d4    84  ldr x0, pc+204 (addr 0x0000ffff914077a0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914076d8    88  stur x0, [x3, #15]
0xffff914076dc    92  movz x0, #0x0
0xffff914076e0    96  stur x0, [x3, #23]
0xffff914076e4   100  add x0, x3, #0x20 (32)
0xffff914076e8   104  ldr x1, pc+192 (addr 0x0000ffff914077a8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914076ec   108  stur x1, [x0, #-1]
0xffff914076f0   112  movz x1, #0x400000000
0xffff914076f4   116  stur x1, [x0, #7]
0xffff914076f8   120  stur x0, [x3, #15]
0xffff914076fc   124  ldr x1, pc+180 (addr 0x0000ffff914077b0)    ;; object: 0x49b04519 <the hole>
0xffff91407700   128  stur x1, [x0, #15]
0xffff91407704   132  ldr x1, pc+180 (addr 0x0000ffff914077b8)    ;; object: 0x49b04519 <the hole>
0xffff91407708   136  stur x1, [x0, #23]
0xffff9140770c   140  ldr x1, pc+180 (addr 0x0000ffff914077c0)    ;; object: 0x49b04519 <the hole>
0xffff91407710   144  stur x1, [x0, #31]
0xffff91407714   148  ldr x1, pc+180 (addr 0x0000ffff914077c8)    ;; object: 0x49b04519 <the hole>
0xffff91407718   152  stur x1, [x0, #39]
0xffff9140771c   156  mov x0, x3
0xffff91407720   160  add jssp, jssp, #0x8 (8)
0xffff91407724   164  ret
0xffff91407728   168  sub csp, jssp, #0x10 (16)
0xffff9140772c   172  stp fp, lr, [jssp, #-16]!
0xffff91407730   176  movz fp, #0xa00000000
0xffff91407734   180  sub csp, jssp, #0x8 (8)
0xffff91407738   184  str fp, [jssp, #-8]!
0xffff9140773c   188  add fp, jssp, #0x8 (8)
0xffff91407740   192  movz x3, #0x0
0xffff91407744   196  mov x16, lr
0xffff91407748   200  ldr x17, pc+136 (addr 0x0000ffff914077d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140774c   204  blr x17
0xffff91407750   208  movz x0, #0x5000000000
0xffff91407754   212  movz x10, #0x0
0xffff91407758   216  sub csp, jssp, #0x10 (16)
0xffff9140775c   220  stp x10, x0, [jssp, #-16]!
0xffff91407760   224  movz x0, #0x2
0xffff91407764   228  movz x1, #0x5b88
0xffff91407768   232  movk x1, #0xe2, lsl #16
0xffff9140776c   236  ldr x16, pc+108 (addr 0x0000ffff914077d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91407770   240  blr x16
0xffff91407774   244  str x0, [jssp, #24]
0xffff91407778   248  ldr x16, pc+104 (addr 0x0000ffff914077e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140777c   252  blr x16
0xffff91407780   256  ldr lr, [jssp, #16]
0xffff91407784   260  ldp xzr, fp, [jssp], #24
0xffff91407788   264  b #-0xd8 (addr 0xffff914076b0)
0xffff9140778c   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff91407790   272  d63f03e0       constant
0xffff91407794   276  d503201f       constant
0xffff91407798   280  49b04201       constant
0xffff9140779c   284  00000000       constant
0xffff914077a0   288  49b04201       constant
0xffff914077a4   292  00000000       constant
0xffff914077a8   296  36404259       constant
0xffff914077ac   300  00000000       constant
0xffff914077b0   304  49b04519       constant
0xffff914077b4   308  00000000       constant
0xffff914077b8   312  49b04519       constant
0xffff914077bc   316  00000000       constant
0xffff914077c0   320  49b04519       constant
0xffff914077c4   324  00000000       constant
0xffff914077c8   328  49b04519       constant
0xffff914077cc   332  00000000       constant
0xffff914077d0   336  91406820       constant
0xffff914077d4   340  0000ffff       constant
0xffff914077d8   344  91406260       constant
0xffff914077dc   348  0000ffff       constant
0xffff914077e0   352  914068e0       constant
0xffff914077e4   356  0000ffff       constant
0xffff914077e8   360  movz x16, #0x0
0xffff914077ec   364  sub csp, jssp, #0x10 (16)
0xffff914077f0   368  stp fp, lr, [jssp, #-16]!
0xffff914077f4   372  bl #+0x4 (addr 0xffff914077f8)
0xffff914077f8   376  movz x17, #0xa00000000
0xffff914077fc   380  sub csp, jssp, #0x10 (16)
0xffff91407800   384  stp x17, cp, [jssp, #-16]!
0xffff91407804   388  add fp, jssp, #0x10 (16)
0xffff91407808   392  ldr x17, pc+24 (addr 0x0000ffff91407820)    ;; lazy deoptimization bailout 0
0xffff9140780c   396  add x17, x17, x16
0xffff91407810   400  br x17
0xffff91407814   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91407818   408  d63f03e0       constant
0xffff9140781c   412  d503201f       constant
0xffff91407820   416  91206000       constant
0xffff91407824   420  0000ffff       constant


Safepoints (size = 21)
0xffff91407774   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff914076cc  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914076d4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914076e8  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914076fc  embedded object  (0x49b04519 <the hole>)
0xffff91407704  embedded object  (0x49b04519 <the hole>)
0xffff9140770c  embedded object  (0x49b04519 <the hole>)
0xffff91407714  embedded object  (0x49b04519 <the hole>)
0xffff91407748  code target (STUB)  (0xffff91406820)
0xffff9140776c  code target (STUB)  (0xffff91406260)
0xffff91407778  code target (STUB)  (0xffff914068e0)
0xffff9140778c  constant pool (size 92)
0xffff91407808  runtime entry
0xffff91407814  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 445)
0xffff914078a0     0  movz w0, #0x6000
0xffff914078a4     4  movk w0, #0x9, lsl #16
0xffff914078a8     8  cmp w0, #0x30 (48)
0xffff914078ac    12  b.ls #+0x15c (addr 0xffff91407a08)
0xffff914078b0    16  movz x2, #0xf2c0
0xffff914078b4    20  movk x2, #0x4117, lsl #16
0xffff914078b8    24  ldp x3, x0, [x2]
0xffff914078bc    28  adds x16, x3, #0x50 (80)
0xffff914078c0    32  ccmp x16, x0, #nzCv, lo
0xffff914078c4    36  b.hi #+0x84 (addr 0xffff91407948)
0xffff914078c8    40  str x16, [x2]
0xffff914078cc    44  orr x3, x3, #0x1
0xffff914078d0    48  movz w0, #0x0
0xffff914078d4    52  stur x0, [x3, #31]
0xffff914078d8    56  ldur x0, [x1, #39]
0xffff914078dc    60  ldur x0, [x0, #39]
0xffff914078e0    64  movz x16, #0x18f
0xffff914078e4    68  ldr x0, [x0, x16]
0xffff914078e8    72  stur x0, [x3, #-1]
0xffff914078ec    76  ldr x0, pc+204 (addr 0x0000ffff914079b8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914078f0    80  stur x0, [x3, #7]
0xffff914078f4    84  ldr x0, pc+204 (addr 0x0000ffff914079c0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914078f8    88  stur x0, [x3, #15]
0xffff914078fc    92  movz x0, #0x0
0xffff91407900    96  stur x0, [x3, #23]
0xffff91407904   100  add x0, x3, #0x20 (32)
0xffff91407908   104  ldr x1, pc+192 (addr 0x0000ffff914079c8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9140790c   108  stur x1, [x0, #-1]
0xffff91407910   112  movz x1, #0x400000000
0xffff91407914   116  stur x1, [x0, #7]
0xffff91407918   120  stur x0, [x3, #15]
0xffff9140791c   124  ldr x1, pc+180 (addr 0x0000ffff914079d0)    ;; object: 0x49b04519 <the hole>
0xffff91407920   128  stur x1, [x0, #15]
0xffff91407924   132  ldr x1, pc+180 (addr 0x0000ffff914079d8)    ;; object: 0x49b04519 <the hole>
0xffff91407928   136  stur x1, [x0, #23]
0xffff9140792c   140  ldr x1, pc+180 (addr 0x0000ffff914079e0)    ;; object: 0x49b04519 <the hole>
0xffff91407930   144  stur x1, [x0, #31]
0xffff91407934   148  ldr x1, pc+180 (addr 0x0000ffff914079e8)    ;; object: 0x49b04519 <the hole>
0xffff91407938   152  stur x1, [x0, #39]
0xffff9140793c   156  mov x0, x3
0xffff91407940   160  add jssp, jssp, #0x8 (8)
0xffff91407944   164  ret
0xffff91407948   168  sub csp, jssp, #0x10 (16)
0xffff9140794c   172  stp fp, lr, [jssp, #-16]!
0xffff91407950   176  movz fp, #0xa00000000
0xffff91407954   180  sub csp, jssp, #0x8 (8)
0xffff91407958   184  str fp, [jssp, #-8]!
0xffff9140795c   188  add fp, jssp, #0x8 (8)
0xffff91407960   192  movz x3, #0x0
0xffff91407964   196  mov x16, lr
0xffff91407968   200  ldr x17, pc+136 (addr 0x0000ffff914079f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140796c   204  blr x17
0xffff91407970   208  movz x0, #0x5000000000
0xffff91407974   212  movz x10, #0x0
0xffff91407978   216  sub csp, jssp, #0x10 (16)
0xffff9140797c   220  stp x10, x0, [jssp, #-16]!
0xffff91407980   224  movz x0, #0x2
0xffff91407984   228  movz x1, #0x5b88
0xffff91407988   232  movk x1, #0xe2, lsl #16
0xffff9140798c   236  ldr x16, pc+108 (addr 0x0000ffff914079f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91407990   240  blr x16
0xffff91407994   244  str x0, [jssp, #24]
0xffff91407998   248  ldr x16, pc+104 (addr 0x0000ffff91407a00)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140799c   252  blr x16
0xffff914079a0   256  ldr lr, [jssp, #16]
0xffff914079a4   260  ldp xzr, fp, [jssp], #24
0xffff914079a8   264  b #-0xd8 (addr 0xffff914078d0)
0xffff914079ac   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff914079b0   272  d63f03e0       constant
0xffff914079b4   276  d503201f       constant
0xffff914079b8   280  49b04201       constant
0xffff914079bc   284  00000000       constant
0xffff914079c0   288  49b04201       constant
0xffff914079c4   292  00000000       constant
0xffff914079c8   296  36404259       constant
0xffff914079cc   300  00000000       constant
0xffff914079d0   304  49b04519       constant
0xffff914079d4   308  00000000       constant
0xffff914079d8   312  49b04519       constant
0xffff914079dc   316  00000000       constant
0xffff914079e0   320  49b04519       constant
0xffff914079e4   324  00000000       constant
0xffff914079e8   328  49b04519       constant
0xffff914079ec   332  00000000       constant
0xffff914079f0   336  91406820       constant
0xffff914079f4   340  0000ffff       constant
0xffff914079f8   344  91406260       constant
0xffff914079fc   348  0000ffff       constant
0xffff91407a00   352  914068e0       constant
0xffff91407a04   356  0000ffff       constant
0xffff91407a08   360  movz x16, #0x0
0xffff91407a0c   364  sub csp, jssp, #0x10 (16)
0xffff91407a10   368  stp fp, lr, [jssp, #-16]!
0xffff91407a14   372  bl #+0x4 (addr 0xffff91407a18)
0xffff91407a18   376  movz x17, #0xa00000000
0xffff91407a1c   380  sub csp, jssp, #0x10 (16)
0xffff91407a20   384  stp x17, cp, [jssp, #-16]!
0xffff91407a24   388  add fp, jssp, #0x10 (16)
0xffff91407a28   392  ldr x17, pc+24 (addr 0x0000ffff91407a40)    ;; lazy deoptimization bailout 0
0xffff91407a2c   396  add x17, x17, x16
0xffff91407a30   400  br x17
0xffff91407a34   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91407a38   408  d63f03e0       constant
0xffff91407a3c   412  d503201f       constant
0xffff91407a40   416  91206000       constant
0xffff91407a44   420  0000ffff       constant


Safepoints (size = 21)
0xffff91407994   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff914078ec  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914078f4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91407908  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140791c  embedded object  (0x49b04519 <the hole>)
0xffff91407924  embedded object  (0x49b04519 <the hole>)
0xffff9140792c  embedded object  (0x49b04519 <the hole>)
0xffff91407934  embedded object  (0x49b04519 <the hole>)
0xffff91407968  code target (STUB)  (0xffff91406820)
0xffff9140798c  code target (STUB)  (0xffff91406260)
0xffff91407998  code target (STUB)  (0xffff914068e0)
0xffff914079ac  constant pool (size 92)
0xffff91407a28  runtime entry
0xffff91407a34  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_HOLEY_ELEMENTS
compiler = crankshaft
Instructions (size = 445)
0xffff914078a0     0  movz w0, #0x6000
0xffff914078a4     4  movk w0, #0x9, lsl #16
0xffff914078a8     8  cmp w0, #0x30 (48)
0xffff914078ac    12  b.ls #+0x15c (addr 0xffff91407a08)
0xffff914078b0    16  movz x2, #0xf2c0
0xffff914078b4    20  movk x2, #0x4117, lsl #16
0xffff914078b8    24  ldp x3, x0, [x2]
0xffff914078bc    28  adds x16, x3, #0x50 (80)
0xffff914078c0    32  ccmp x16, x0, #nzCv, lo
0xffff914078c4    36  b.hi #+0x84 (addr 0xffff91407948)
0xffff914078c8    40  str x16, [x2]
0xffff914078cc    44  orr x3, x3, #0x1
0xffff914078d0    48  movz w0, #0x0
0xffff914078d4    52  stur x0, [x3, #31]
0xffff914078d8    56  ldur x0, [x1, #39]
0xffff914078dc    60  ldur x0, [x0, #39]
0xffff914078e0    64  movz x16, #0x18f
0xffff914078e4    68  ldr x0, [x0, x16]
0xffff914078e8    72  stur x0, [x3, #-1]
0xffff914078ec    76  ldr x0, pc+204 (addr 0x0000ffff914079b8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914078f0    80  stur x0, [x3, #7]
0xffff914078f4    84  ldr x0, pc+204 (addr 0x0000ffff914079c0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914078f8    88  stur x0, [x3, #15]
0xffff914078fc    92  movz x0, #0x0
0xffff91407900    96  stur x0, [x3, #23]
0xffff91407904   100  add x0, x3, #0x20 (32)
0xffff91407908   104  ldr x1, pc+192 (addr 0x0000ffff914079c8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9140790c   108  stur x1, [x0, #-1]
0xffff91407910   112  movz x1, #0x400000000
0xffff91407914   116  stur x1, [x0, #7]
0xffff91407918   120  stur x0, [x3, #15]
0xffff9140791c   124  ldr x1, pc+180 (addr 0x0000ffff914079d0)    ;; object: 0x49b04519 <the hole>
0xffff91407920   128  stur x1, [x0, #15]
0xffff91407924   132  ldr x1, pc+180 (addr 0x0000ffff914079d8)    ;; object: 0x49b04519 <the hole>
0xffff91407928   136  stur x1, [x0, #23]
0xffff9140792c   140  ldr x1, pc+180 (addr 0x0000ffff914079e0)    ;; object: 0x49b04519 <the hole>
0xffff91407930   144  stur x1, [x0, #31]
0xffff91407934   148  ldr x1, pc+180 (addr 0x0000ffff914079e8)    ;; object: 0x49b04519 <the hole>
0xffff91407938   152  stur x1, [x0, #39]
0xffff9140793c   156  mov x0, x3
0xffff91407940   160  add jssp, jssp, #0x8 (8)
0xffff91407944   164  ret
0xffff91407948   168  sub csp, jssp, #0x10 (16)
0xffff9140794c   172  stp fp, lr, [jssp, #-16]!
0xffff91407950   176  movz fp, #0xa00000000
0xffff91407954   180  sub csp, jssp, #0x8 (8)
0xffff91407958   184  str fp, [jssp, #-8]!
0xffff9140795c   188  add fp, jssp, #0x8 (8)
0xffff91407960   192  movz x3, #0x0
0xffff91407964   196  mov x16, lr
0xffff91407968   200  ldr x17, pc+136 (addr 0x0000ffff914079f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140796c   204  blr x17
0xffff91407970   208  movz x0, #0x5000000000
0xffff91407974   212  movz x10, #0x0
0xffff91407978   216  sub csp, jssp, #0x10 (16)
0xffff9140797c   220  stp x10, x0, [jssp, #-16]!
0xffff91407980   224  movz x0, #0x2
0xffff91407984   228  movz x1, #0x5b88
0xffff91407988   232  movk x1, #0xe2, lsl #16
0xffff9140798c   236  ldr x16, pc+108 (addr 0x0000ffff914079f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91407990   240  blr x16
0xffff91407994   244  str x0, [jssp, #24]
0xffff91407998   248  ldr x16, pc+104 (addr 0x0000ffff91407a00)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140799c   252  blr x16
0xffff914079a0   256  ldr lr, [jssp, #16]
0xffff914079a4   260  ldp xzr, fp, [jssp], #24
0xffff914079a8   264  b #-0xd8 (addr 0xffff914078d0)
0xffff914079ac   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff914079b0   272  d63f03e0       constant
0xffff914079b4   276  d503201f       constant
0xffff914079b8   280  49b04201       constant
0xffff914079bc   284  00000000       constant
0xffff914079c0   288  49b04201       constant
0xffff914079c4   292  00000000       constant
0xffff914079c8   296  36404259       constant
0xffff914079cc   300  00000000       constant
0xffff914079d0   304  49b04519       constant
0xffff914079d4   308  00000000       constant
0xffff914079d8   312  49b04519       constant
0xffff914079dc   316  00000000       constant
0xffff914079e0   320  49b04519       constant
0xffff914079e4   324  00000000       constant
0xffff914079e8   328  49b04519       constant
0xffff914079ec   332  00000000       constant
0xffff914079f0   336  91406820       constant
0xffff914079f4   340  0000ffff       constant
0xffff914079f8   344  91406260       constant
0xffff914079fc   348  0000ffff       constant
0xffff91407a00   352  914068e0       constant
0xffff91407a04   356  0000ffff       constant
0xffff91407a08   360  movz x16, #0x0
0xffff91407a0c   364  sub csp, jssp, #0x10 (16)
0xffff91407a10   368  stp fp, lr, [jssp, #-16]!
0xffff91407a14   372  bl #+0x4 (addr 0xffff91407a18)
0xffff91407a18   376  movz x17, #0xa00000000
0xffff91407a1c   380  sub csp, jssp, #0x10 (16)
0xffff91407a20   384  stp x17, cp, [jssp, #-16]!
0xffff91407a24   388  add fp, jssp, #0x10 (16)
0xffff91407a28   392  ldr x17, pc+24 (addr 0x0000ffff91407a40)    ;; lazy deoptimization bailout 0
0xffff91407a2c   396  add x17, x17, x16
0xffff91407a30   400  br x17
0xffff91407a34   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91407a38   408  d63f03e0       constant
0xffff91407a3c   412  d503201f       constant
0xffff91407a40   416  91206000       constant
0xffff91407a44   420  0000ffff       constant


Safepoints (size = 21)
0xffff91407994   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff914078ec  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914078f4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91407908  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140791c  embedded object  (0x49b04519 <the hole>)
0xffff91407924  embedded object  (0x49b04519 <the hole>)
0xffff9140792c  embedded object  (0x49b04519 <the hole>)
0xffff91407934  embedded object  (0x49b04519 <the hole>)
0xffff91407968  code target (STUB)  (0xffff91406820)
0xffff9140798c  code target (STUB)  (0xffff91406260)
0xffff91407998  code target (STUB)  (0xffff914068e0)
0xffff914079ac  constant pool (size 92)
0xffff91407a28  runtime entry
0xffff91407a34  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1904)
0xffff91407ac0     0  adr xzr, #+0x40 (addr 0xffff91407b00)
0xffff91407ac4     4  adr xzr, #+0x358 (addr 0xffff91407e1c)
0xffff91407ac8     8  ldr x16, pc+1720 (addr 0x0000ffff91408180)    ;; external reference (store_buffer_top)
0xffff91407acc    12  ldr x0, [x16]
0xffff91407ad0    16  str x1, [x0], #8
0xffff91407ad4    20  str x0, [x16]
0xffff91407ad8    24  tst x0, #0x1ffff
0xffff91407adc    28  b.eq #+0x8 (addr 0xffff91407ae4)
0xffff91407ae0    32  ret
0xffff91407ae4    36  sub csp, jssp, #0x8 (8)
0xffff91407ae8    40  str lr, [jssp, #-8]!
0xffff91407aec    44  ldr x17, pc+1692 (addr 0x0000ffff91408188)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91407af0    48  blr x17
0xffff91407af4    52  ldr lr, [jssp], #8
0xffff91407af8    56  ret
0xffff91407afc    60  ret
0xffff91407b00    64  sub csp, jssp, #0x10 (16)
0xffff91407b04    68  stp x3, x2, [jssp, #-16]!
0xffff91407b08    72  ldr x0, [x1]
0xffff91407b0c    76  and x16, x0, #0xfffffffffff00000
0xffff91407b10    80  ldr x16, [x16, #8]
0xffff91407b14    84  tst x16, #0x18
0xffff91407b18    88  b.eq #+0x1d4 (addr 0xffff91407cec)
0xffff91407b1c    92  and x16, x8, #0xfffffffffff00000
0xffff91407b20    96  ldr x16, [x16, #8]
0xffff91407b24   100  tst x16, #0x18
0xffff91407b28   104  b.ne #+0x1c4 (addr 0xffff91407cec)
0xffff91407b2c   108  and x0, x8, #0xfffffffffff00000
0xffff91407b30   112  ldr x2, [x0, #104]
0xffff91407b34   116  subs x2, x2, #0x1 (1)
0xffff91407b38   120  str x2, [x0, #104]
0xffff91407b3c   124  b.mi #+0xc4 (addr 0xffff91407c00)
0xffff91407b40   128  ubfx x16, x8, #8, #12
0xffff91407b44   132  and x0, x8, #0xfffffffffff00000
0xffff91407b48   136  add x0, x0, x16, lsl #2
0xffff91407b4c   140  ubfx x2, x8, #3, #5
0xffff91407b50   144  ldr x0, [x0, #360]
0xffff91407b54   148  lsr x0, x0, x2
0xffff91407b58   152  tbz w0, #0, #+0x8 (addr 0xffff91407b60)
0xffff91407b5c   156  tbnz w0, #1, #+0x3c (addr 0xffff91407b98)
0xffff91407b60   160  ldp x3, x2, [jssp], #16
0xffff91407b64   164  ldr x16, pc+1580 (addr 0x0000ffff91408190)    ;; external reference (store_buffer_top)
0xffff91407b68   168  ldr x0, [x16]
0xffff91407b6c   172  str x1, [x0], #8
0xffff91407b70   176  str x0, [x16]
0xffff91407b74   180  tst x0, #0x1ffff
0xffff91407b78   184  b.eq #+0x8 (addr 0xffff91407b80)
0xffff91407b7c   188  ret
0xffff91407b80   192  sub csp, jssp, #0x8 (8)
0xffff91407b84   196  str lr, [jssp, #-8]!
0xffff91407b88   200  ldr x17, pc+1552 (addr 0x0000ffff91408198)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91407b8c   204  blr x17
0xffff91407b90   208  ldr lr, [jssp], #8
0xffff91407b94   212  ret
0xffff91407b98   216  ldr x0, [x1]
0xffff91407b9c   220  sub csp, jssp, #0x10 (16)
0xffff91407ba0   224  stp x8, x1, [jssp, #-16]!
0xffff91407ba4   228  ubfx x16, x0, #8, #12
0xffff91407ba8   232  and x2, x0, #0xfffffffffff00000
0xffff91407bac   236  add x2, x2, x16, lsl #2
0xffff91407bb0   240  ubfx x8, x0, #3, #5
0xffff91407bb4   244  ldr x1, [x2, #360]
0xffff91407bb8   248  lsr x1, x1, x8
0xffff91407bbc   252  tbz w1, #0, #+0x40 (addr 0xffff91407bfc)
0xffff91407bc0   256  ldp x8, x1, [jssp], #16
0xffff91407bc4   260  ldp x3, x2, [jssp], #16
0xffff91407bc8   264  ldr x16, pc+1496 (addr 0x0000ffff914081a0)    ;; external reference (store_buffer_top)
0xffff91407bcc   268  ldr x0, [x16]
0xffff91407bd0   272  str x1, [x0], #8
0xffff91407bd4   276  str x0, [x16]
0xffff91407bd8   280  tst x0, #0x1ffff
0xffff91407bdc   284  b.eq #+0x8 (addr 0xffff91407be4)
0xffff91407be0   288  ret
0xffff91407be4   292  sub csp, jssp, #0x8 (8)
0xffff91407be8   296  str lr, [jssp, #-8]!
0xffff91407bec   300  ldr x17, pc+1468 (addr 0x0000ffff914081a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91407bf0   304  blr x17
0xffff91407bf4   308  ldr lr, [jssp], #8
0xffff91407bf8   312  ret
0xffff91407bfc   316  ldp x8, x1, [jssp], #16
0xffff91407c00   320  sub csp, jssp, #0x78 (120)
0xffff91407c04   324  stp x14, x15, [jssp, #-32]!
0xffff91407c08   328  stp x18, lr, [jssp, #16]
0xffff91407c0c   332  stp x10, x11, [jssp, #-32]!
0xffff91407c10   336  stp x12, x13, [jssp, #16]
0xffff91407c14   340  stp x6, x7, [jssp, #-32]!
0xffff91407c18   344  stp x8, x9, [jssp, #16]
0xffff91407c1c   348  stp x1, x4, [jssp, #-24]!
0xffff91407c20   352  str x5, [jssp, #16]
0xffff91407c24   356  sub csp, jssp, #0xb0 (176)
0xffff91407c28   360  stp d26, d27, [jssp, #-32]!
0xffff91407c2c   364  stp d28, d29, [jssp, #16]
0xffff91407c30   368  stp d22, d23, [jssp, #-32]!
0xffff91407c34   372  stp d24, d25, [jssp, #16]
0xffff91407c38   376  stp d18, d19, [jssp, #-32]!
0xffff91407c3c   380  stp d20, d21, [jssp, #16]
0xffff91407c40   384  stp d6, d7, [jssp, #-32]!
0xffff91407c44   388  stp d16, d17, [jssp, #16]
0xffff91407c48   392  stp d2, d3, [jssp, #-32]!
0xffff91407c4c   396  stp d4, d5, [jssp, #16]
0xffff91407c50   400  stp d0, d1, [jssp, #-16]!
0xffff91407c54   404  mov x0, x8
0xffff91407c58   408  ldr x2, pc+1368 (addr 0x0000ffff914081b0)    ;; external reference (isolate)
0xffff91407c5c   412  ldr x16, pc+1372 (addr 0x0000ffff914081b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91407c60   416  and csp, jssp, #0xfffffffffffffff0
0xffff91407c64   420  blr x16
0xffff91407c68   424  ldp d2, d3, [jssp, #16]
0xffff91407c6c   428  ldp d0, d1, [jssp], #32
0xffff91407c70   432  ldp d6, d7, [jssp, #16]
0xffff91407c74   436  ldp d4, d5, [jssp], #32
0xffff91407c78   440  ldp d18, d19, [jssp, #16]
0xffff91407c7c   444  ldp d16, d17, [jssp], #32
0xffff91407c80   448  ldp d22, d23, [jssp, #16]
0xffff91407c84   452  ldp d20, d21, [jssp], #32
0xffff91407c88   456  ldp d26, d27, [jssp, #16]
0xffff91407c8c   460  ldp d24, d25, [jssp], #32
0xffff91407c90   464  ldp d28, d29, [jssp], #16
0xffff91407c94   468  ldp x5, x6, [jssp, #16]
0xffff91407c98   472  ldp x1, x4, [jssp], #32
0xffff91407c9c   476  ldp x9, x10, [jssp, #16]
0xffff91407ca0   480  ldp x7, x8, [jssp], #32
0xffff91407ca4   484  ldp x13, x14, [jssp, #16]
0xffff91407ca8   488  ldp x11, x12, [jssp], #32
0xffff91407cac   492  ldr lr, [jssp, #16]
0xffff91407cb0   496  ldp x15, x18, [jssp], #24
0xffff91407cb4   500  ldp x3, x2, [jssp], #16
0xffff91407cb8   504  ldr x16, pc+1288 (addr 0x0000ffff914081c0)    ;; external reference (store_buffer_top)
0xffff91407cbc   508  ldr x0, [x16]
0xffff91407cc0   512  str x1, [x0], #8
0xffff91407cc4   516  str x0, [x16]
0xffff91407cc8   520  tst x0, #0x1ffff
0xffff91407ccc   524  b.eq #+0x8 (addr 0xffff91407cd4)
0xffff91407cd0   528  ret
0xffff91407cd4   532  sub csp, jssp, #0x8 (8)
0xffff91407cd8   536  str lr, [jssp, #-8]!
0xffff91407cdc   540  ldr x17, pc+1260 (addr 0x0000ffff914081c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91407ce0   544  blr x17
0xffff91407ce4   548  ldr lr, [jssp], #8
0xffff91407ce8   552  ret
0xffff91407cec   556  and x0, x8, #0xfffffffffff00000
0xffff91407cf0   560  ldr x2, [x0, #104]
0xffff91407cf4   564  subs x2, x2, #0x1 (1)
0xffff91407cf8   568  str x2, [x0, #104]
0xffff91407cfc   572  b.mi #+0x64 (addr 0xffff91407d60)
0xffff91407d00   576  ubfx x16, x8, #8, #12
0xffff91407d04   580  and x0, x8, #0xfffffffffff00000
0xffff91407d08   584  add x0, x0, x16, lsl #2
0xffff91407d0c   588  ubfx x2, x8, #3, #5
0xffff91407d10   592  ldr x0, [x0, #360]
0xffff91407d14   596  lsr x0, x0, x2
0xffff91407d18   600  tbz w0, #0, #+0x8 (addr 0xffff91407d20)
0xffff91407d1c   604  tbnz w0, #1, #+0xc (addr 0xffff91407d28)
0xffff91407d20   608  ldp x3, x2, [jssp], #16
0xffff91407d24   612  ret
0xffff91407d28   616  ldr x0, [x1]
0xffff91407d2c   620  sub csp, jssp, #0x10 (16)
0xffff91407d30   624  stp x8, x1, [jssp, #-16]!
0xffff91407d34   628  ubfx x16, x0, #8, #12
0xffff91407d38   632  and x2, x0, #0xfffffffffff00000
0xffff91407d3c   636  add x2, x2, x16, lsl #2
0xffff91407d40   640  ubfx x8, x0, #3, #5
0xffff91407d44   644  ldr x1, [x2, #360]
0xffff91407d48   648  lsr x1, x1, x8
0xffff91407d4c   652  tbz w1, #0, #+0x10 (addr 0xffff91407d5c)
0xffff91407d50   656  ldp x8, x1, [jssp], #16
0xffff91407d54   660  ldp x3, x2, [jssp], #16
0xffff91407d58   664  ret
0xffff91407d5c   668  ldp x8, x1, [jssp], #16
0xffff91407d60   672  sub csp, jssp, #0x78 (120)
0xffff91407d64   676  stp x14, x15, [jssp, #-32]!
0xffff91407d68   680  stp x18, lr, [jssp, #16]
0xffff91407d6c   684  stp x10, x11, [jssp, #-32]!
0xffff91407d70   688  stp x12, x13, [jssp, #16]
0xffff91407d74   692  stp x6, x7, [jssp, #-32]!
0xffff91407d78   696  stp x8, x9, [jssp, #16]
0xffff91407d7c   700  stp x1, x4, [jssp, #-24]!
0xffff91407d80   704  str x5, [jssp, #16]
0xffff91407d84   708  sub csp, jssp, #0xb0 (176)
0xffff91407d88   712  stp d26, d27, [jssp, #-32]!
0xffff91407d8c   716  stp d28, d29, [jssp, #16]
0xffff91407d90   720  stp d22, d23, [jssp, #-32]!
0xffff91407d94   724  stp d24, d25, [jssp, #16]
0xffff91407d98   728  stp d18, d19, [jssp, #-32]!
0xffff91407d9c   732  stp d20, d21, [jssp, #16]
0xffff91407da0   736  stp d6, d7, [jssp, #-32]!
0xffff91407da4   740  stp d16, d17, [jssp, #16]
0xffff91407da8   744  stp d2, d3, [jssp, #-32]!
0xffff91407dac   748  stp d4, d5, [jssp, #16]
0xffff91407db0   752  stp d0, d1, [jssp, #-16]!
0xffff91407db4   756  mov x0, x8
0xffff91407db8   760  ldr x2, pc+1048 (addr 0x0000ffff914081d0)    ;; external reference (isolate)
0xffff91407dbc   764  ldr x16, pc+1052 (addr 0x0000ffff914081d8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91407dc0   768  and csp, jssp, #0xfffffffffffffff0
0xffff91407dc4   772  blr x16
0xffff91407dc8   776  ldp d2, d3, [jssp, #16]
0xffff91407dcc   780  ldp d0, d1, [jssp], #32
0xffff91407dd0   784  ldp d6, d7, [jssp, #16]
0xffff91407dd4   788  ldp d4, d5, [jssp], #32
0xffff91407dd8   792  ldp d18, d19, [jssp, #16]
0xffff91407ddc   796  ldp d16, d17, [jssp], #32
0xffff91407de0   800  ldp d22, d23, [jssp, #16]
0xffff91407de4   804  ldp d20, d21, [jssp], #32
0xffff91407de8   808  ldp d26, d27, [jssp, #16]
0xffff91407dec   812  ldp d24, d25, [jssp], #32
0xffff91407df0   816  ldp d28, d29, [jssp], #16
0xffff91407df4   820  ldp x5, x6, [jssp, #16]
0xffff91407df8   824  ldp x1, x4, [jssp], #32
0xffff91407dfc   828  ldp x9, x10, [jssp, #16]
0xffff91407e00   832  ldp x7, x8, [jssp], #32
0xffff91407e04   836  ldp x13, x14, [jssp, #16]
0xffff91407e08   840  ldp x11, x12, [jssp], #32
0xffff91407e0c   844  ldr lr, [jssp, #16]
0xffff91407e10   848  ldp x15, x18, [jssp], #24
0xffff91407e14   852  ldp x3, x2, [jssp], #16
0xffff91407e18   856  ret
0xffff91407e1c   860  sub csp, jssp, #0x10 (16)
0xffff91407e20   864  stp x3, x2, [jssp, #-16]!
0xffff91407e24   868  ldr x0, [x1]
0xffff91407e28   872  and x16, x0, #0xfffffffffff00000
0xffff91407e2c   876  ldr x16, [x16, #8]
0xffff91407e30   880  tst x16, #0x18
0xffff91407e34   884  b.eq #+0x1f4 (addr 0xffff91408028)
0xffff91407e38   888  and x16, x8, #0xfffffffffff00000
0xffff91407e3c   892  ldr x16, [x16, #8]
0xffff91407e40   896  tst x16, #0x18
0xffff91407e44   900  b.ne #+0x1e4 (addr 0xffff91408028)
0xffff91407e48   904  and x0, x8, #0xfffffffffff00000
0xffff91407e4c   908  ldr x2, [x0, #104]
0xffff91407e50   912  subs x2, x2, #0x1 (1)
0xffff91407e54   916  str x2, [x0, #104]
0xffff91407e58   920  b.mi #+0xe4 (addr 0xffff91407f3c)
0xffff91407e5c   924  ubfx x16, x8, #8, #12
0xffff91407e60   928  and x0, x8, #0xfffffffffff00000
0xffff91407e64   932  add x0, x0, x16, lsl #2
0xffff91407e68   936  ubfx x2, x8, #3, #5
0xffff91407e6c   940  ldr x0, [x0, #360]
0xffff91407e70   944  lsr x0, x0, x2
0xffff91407e74   948  tbz w0, #0, #+0x8 (addr 0xffff91407e7c)
0xffff91407e78   952  tbnz w0, #1, #+0x3c (addr 0xffff91407eb4)
0xffff91407e7c   956  ldp x3, x2, [jssp], #16
0xffff91407e80   960  ldr x16, pc+864 (addr 0x0000ffff914081e0)    ;; external reference (store_buffer_top)
0xffff91407e84   964  ldr x0, [x16]
0xffff91407e88   968  str x1, [x0], #8
0xffff91407e8c   972  str x0, [x16]
0xffff91407e90   976  tst x0, #0x1ffff
0xffff91407e94   980  b.eq #+0x8 (addr 0xffff91407e9c)
0xffff91407e98   984  ret
0xffff91407e9c   988  sub csp, jssp, #0x8 (8)
0xffff91407ea0   992  str lr, [jssp, #-8]!
0xffff91407ea4   996  ldr x17, pc+836 (addr 0x0000ffff914081e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91407ea8  1000  blr x17
0xffff91407eac  1004  ldr lr, [jssp], #8
0xffff91407eb0  1008  ret
0xffff91407eb4  1012  ldr x0, [x1]
0xffff91407eb8  1016  and x2, x0, #0xfffffffffff00000
0xffff91407ebc  1020  ldr x2, [x2, #8]
0xffff91407ec0  1024  tbz w2, #6, #+0x18 (addr 0xffff91407ed8)
0xffff91407ec4  1028  and x2, x8, #0xfffffffffff00000
0xffff91407ec8  1032  ldr x2, [x2, #8]
0xffff91407ecc  1036  movz x16, #0x58
0xffff91407ed0  1040  tst x2, x16
0xffff91407ed4  1044  b.eq #+0x68 (addr 0xffff91407f3c)
0xffff91407ed8  1048  sub csp, jssp, #0x10 (16)
0xffff91407edc  1052  stp x8, x1, [jssp, #-16]!
0xffff91407ee0  1056  ubfx x16, x0, #8, #12
0xffff91407ee4  1060  and x2, x0, #0xfffffffffff00000
0xffff91407ee8  1064  add x2, x2, x16, lsl #2
0xffff91407eec  1068  ubfx x8, x0, #3, #5
0xffff91407ef0  1072  ldr x1, [x2, #360]
0xffff91407ef4  1076  lsr x1, x1, x8
0xffff91407ef8  1080  tbz w1, #0, #+0x40 (addr 0xffff91407f38)
0xffff91407efc  1084  ldp x8, x1, [jssp], #16
0xffff91407f00  1088  ldp x3, x2, [jssp], #16
0xffff91407f04  1092  ldr x16, pc+748 (addr 0x0000ffff914081f0)    ;; external reference (store_buffer_top)
0xffff91407f08  1096  ldr x0, [x16]
0xffff91407f0c  1100  str x1, [x0], #8
0xffff91407f10  1104  str x0, [x16]
0xffff91407f14  1108  tst x0, #0x1ffff
0xffff91407f18  1112  b.eq #+0x8 (addr 0xffff91407f20)
0xffff91407f1c  1116  ret
0xffff91407f20  1120  sub csp, jssp, #0x8 (8)
0xffff91407f24  1124  str lr, [jssp, #-8]!
0xffff91407f28  1128  ldr x17, pc+720 (addr 0x0000ffff914081f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91407f2c  1132  blr x17
0xffff91407f30  1136  ldr lr, [jssp], #8
0xffff91407f34  1140  ret
0xffff91407f38  1144  ldp x8, x1, [jssp], #16
0xffff91407f3c  1148  sub csp, jssp, #0x78 (120)
0xffff91407f40  1152  stp x14, x15, [jssp, #-32]!
0xffff91407f44  1156  stp x18, lr, [jssp, #16]
0xffff91407f48  1160  stp x10, x11, [jssp, #-32]!
0xffff91407f4c  1164  stp x12, x13, [jssp, #16]
0xffff91407f50  1168  stp x6, x7, [jssp, #-32]!
0xffff91407f54  1172  stp x8, x9, [jssp, #16]
0xffff91407f58  1176  stp x1, x4, [jssp, #-24]!
0xffff91407f5c  1180  str x5, [jssp, #16]
0xffff91407f60  1184  sub csp, jssp, #0xb0 (176)
0xffff91407f64  1188  stp d26, d27, [jssp, #-32]!
0xffff91407f68  1192  stp d28, d29, [jssp, #16]
0xffff91407f6c  1196  stp d22, d23, [jssp, #-32]!
0xffff91407f70  1200  stp d24, d25, [jssp, #16]
0xffff91407f74  1204  stp d18, d19, [jssp, #-32]!
0xffff91407f78  1208  stp d20, d21, [jssp, #16]
0xffff91407f7c  1212  stp d6, d7, [jssp, #-32]!
0xffff91407f80  1216  stp d16, d17, [jssp, #16]
0xffff91407f84  1220  stp d2, d3, [jssp, #-32]!
0xffff91407f88  1224  stp d4, d5, [jssp, #16]
0xffff91407f8c  1228  stp d0, d1, [jssp, #-16]!
0xffff91407f90  1232  mov x0, x8
0xffff91407f94  1236  ldr x2, pc+620 (addr 0x0000ffff91408200)    ;; external reference (isolate)
0xffff91407f98  1240  ldr x16, pc+624 (addr 0x0000ffff91408208)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91407f9c  1244  and csp, jssp, #0xfffffffffffffff0
0xffff91407fa0  1248  blr x16
0xffff91407fa4  1252  ldp d2, d3, [jssp, #16]
0xffff91407fa8  1256  ldp d0, d1, [jssp], #32
0xffff91407fac  1260  ldp d6, d7, [jssp, #16]
0xffff91407fb0  1264  ldp d4, d5, [jssp], #32
0xffff91407fb4  1268  ldp d18, d19, [jssp, #16]
0xffff91407fb8  1272  ldp d16, d17, [jssp], #32
0xffff91407fbc  1276  ldp d22, d23, [jssp, #16]
0xffff91407fc0  1280  ldp d20, d21, [jssp], #32
0xffff91407fc4  1284  ldp d26, d27, [jssp, #16]
0xffff91407fc8  1288  ldp d24, d25, [jssp], #32
0xffff91407fcc  1292  ldp d28, d29, [jssp], #16
0xffff91407fd0  1296  ldp x5, x6, [jssp, #16]
0xffff91407fd4  1300  ldp x1, x4, [jssp], #32
0xffff91407fd8  1304  ldp x9, x10, [jssp, #16]
0xffff91407fdc  1308  ldp x7, x8, [jssp], #32
0xffff91407fe0  1312  ldp x13, x14, [jssp, #16]
0xffff91407fe4  1316  ldp x11, x12, [jssp], #32
0xffff91407fe8  1320  ldr lr, [jssp, #16]
0xffff91407fec  1324  ldp x15, x18, [jssp], #24
0xffff91407ff0  1328  ldp x3, x2, [jssp], #16
0xffff91407ff4  1332  ldr x16, pc+540 (addr 0x0000ffff91408210)    ;; external reference (store_buffer_top)
0xffff91407ff8  1336  ldr x0, [x16]
0xffff91407ffc  1340  str x1, [x0], #8
0xffff91408000  1344  str x0, [x16]
0xffff91408004  1348  tst x0, #0x1ffff
0xffff91408008  1352  b.eq #+0x8 (addr 0xffff91408010)
0xffff9140800c  1356  ret
0xffff91408010  1360  sub csp, jssp, #0x8 (8)
0xffff91408014  1364  str lr, [jssp, #-8]!
0xffff91408018  1368  ldr x17, pc+512 (addr 0x0000ffff91408218)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140801c  1372  blr x17
0xffff91408020  1376  ldr lr, [jssp], #8
0xffff91408024  1380  ret
0xffff91408028  1384  and x0, x8, #0xfffffffffff00000
0xffff9140802c  1388  ldr x2, [x0, #104]
0xffff91408030  1392  subs x2, x2, #0x1 (1)
0xffff91408034  1396  str x2, [x0, #104]
0xffff91408038  1400  b.mi #+0x84 (addr 0xffff914080bc)
0xffff9140803c  1404  ubfx x16, x8, #8, #12
0xffff91408040  1408  and x0, x8, #0xfffffffffff00000
0xffff91408044  1412  add x0, x0, x16, lsl #2
0xffff91408048  1416  ubfx x2, x8, #3, #5
0xffff9140804c  1420  ldr x0, [x0, #360]
0xffff91408050  1424  lsr x0, x0, x2
0xffff91408054  1428  tbz w0, #0, #+0x8 (addr 0xffff9140805c)
0xffff91408058  1432  tbnz w0, #1, #+0xc (addr 0xffff91408064)
0xffff9140805c  1436  ldp x3, x2, [jssp], #16
0xffff91408060  1440  ret
0xffff91408064  1444  ldr x0, [x1]
0xffff91408068  1448  and x2, x0, #0xfffffffffff00000
0xffff9140806c  1452  ldr x2, [x2, #8]
0xffff91408070  1456  tbz w2, #6, #+0x18 (addr 0xffff91408088)
0xffff91408074  1460  and x2, x8, #0xfffffffffff00000
0xffff91408078  1464  ldr x2, [x2, #8]
0xffff9140807c  1468  movz x16, #0x58
0xffff91408080  1472  tst x2, x16
0xffff91408084  1476  b.eq #+0x38 (addr 0xffff914080bc)
0xffff91408088  1480  sub csp, jssp, #0x10 (16)
0xffff9140808c  1484  stp x8, x1, [jssp, #-16]!
0xffff91408090  1488  ubfx x16, x0, #8, #12
0xffff91408094  1492  and x2, x0, #0xfffffffffff00000
0xffff91408098  1496  add x2, x2, x16, lsl #2
0xffff9140809c  1500  ubfx x8, x0, #3, #5
0xffff914080a0  1504  ldr x1, [x2, #360]
0xffff914080a4  1508  lsr x1, x1, x8
0xffff914080a8  1512  tbz w1, #0, #+0x10 (addr 0xffff914080b8)
0xffff914080ac  1516  ldp x8, x1, [jssp], #16
0xffff914080b0  1520  ldp x3, x2, [jssp], #16
0xffff914080b4  1524  ret
0xffff914080b8  1528  ldp x8, x1, [jssp], #16
0xffff914080bc  1532  sub csp, jssp, #0x78 (120)
0xffff914080c0  1536  stp x14, x15, [jssp, #-32]!
0xffff914080c4  1540  stp x18, lr, [jssp, #16]
0xffff914080c8  1544  stp x10, x11, [jssp, #-32]!
0xffff914080cc  1548  stp x12, x13, [jssp, #16]
0xffff914080d0  1552  stp x6, x7, [jssp, #-32]!
0xffff914080d4  1556  stp x8, x9, [jssp, #16]
0xffff914080d8  1560  stp x1, x4, [jssp, #-24]!
0xffff914080dc  1564  str x5, [jssp, #16]
0xffff914080e0  1568  sub csp, jssp, #0xb0 (176)
0xffff914080e4  1572  stp d26, d27, [jssp, #-32]!
0xffff914080e8  1576  stp d28, d29, [jssp, #16]
0xffff914080ec  1580  stp d22, d23, [jssp, #-32]!
0xffff914080f0  1584  stp d24, d25, [jssp, #16]
0xffff914080f4  1588  stp d18, d19, [jssp, #-32]!
0xffff914080f8  1592  stp d20, d21, [jssp, #16]
0xffff914080fc  1596  stp d6, d7, [jssp, #-32]!
0xffff91408100  1600  stp d16, d17, [jssp, #16]
0xffff91408104  1604  stp d2, d3, [jssp, #-32]!
0xffff91408108  1608  stp d4, d5, [jssp, #16]
0xffff9140810c  1612  stp d0, d1, [jssp, #-16]!
0xffff91408110  1616  mov x0, x8
0xffff91408114  1620  ldr x2, pc+268 (addr 0x0000ffff91408220)    ;; external reference (isolate)
0xffff91408118  1624  ldr x16, pc+272 (addr 0x0000ffff91408228)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140811c  1628  and csp, jssp, #0xfffffffffffffff0
0xffff91408120  1632  blr x16
0xffff91408124  1636  ldp d2, d3, [jssp, #16]
0xffff91408128  1640  ldp d0, d1, [jssp], #32
0xffff9140812c  1644  ldp d6, d7, [jssp, #16]
0xffff91408130  1648  ldp d4, d5, [jssp], #32
0xffff91408134  1652  ldp d18, d19, [jssp, #16]
0xffff91408138  1656  ldp d16, d17, [jssp], #32
0xffff9140813c  1660  ldp d22, d23, [jssp, #16]
0xffff91408140  1664  ldp d20, d21, [jssp], #32
0xffff91408144  1668  ldp d26, d27, [jssp, #16]
0xffff91408148  1672  ldp d24, d25, [jssp], #32
0xffff9140814c  1676  ldp d28, d29, [jssp], #16
0xffff91408150  1680  ldp x5, x6, [jssp, #16]
0xffff91408154  1684  ldp x1, x4, [jssp], #32
0xffff91408158  1688  ldp x9, x10, [jssp, #16]
0xffff9140815c  1692  ldp x7, x8, [jssp], #32
0xffff91408160  1696  ldp x13, x14, [jssp, #16]
0xffff91408164  1700  ldp x11, x12, [jssp], #32
0xffff91408168  1704  ldr lr, [jssp, #16]
0xffff9140816c  1708  ldp x15, x18, [jssp], #24
0xffff91408170  1712  ldp x3, x2, [jssp], #16
0xffff91408174  1716  ret
0xffff91408178  1720  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9140817c  1724  d63f03e0       constant
0xffff91408180  1728  4117f8c0       constant
0xffff91408184  1732  00000000       constant
0xffff91408188  1736  914065a0       constant
0xffff9140818c  1740  0000ffff       constant
0xffff91408190  1744  4117f8c0       constant
0xffff91408194  1748  00000000       constant
0xffff91408198  1752  914065a0       constant
0xffff9140819c  1756  0000ffff       constant
0xffff914081a0  1760  4117f8c0       constant
0xffff914081a4  1764  00000000       constant
0xffff914081a8  1768  914065a0       constant
0xffff914081ac  1772  0000ffff       constant
0xffff914081b0  1776  4117e2d0       constant
0xffff914081b4  1780  00000000       constant
0xffff914081b8  1784  00c2d958       constant
0xffff914081bc  1788  00000000       constant
0xffff914081c0  1792  4117f8c0       constant
0xffff914081c4  1796  00000000       constant
0xffff914081c8  1800  914065a0       constant
0xffff914081cc  1804  0000ffff       constant
0xffff914081d0  1808  4117e2d0       constant
0xffff914081d4  1812  00000000       constant
0xffff914081d8  1816  00c2d958       constant
0xffff914081dc  1820  00000000       constant
0xffff914081e0  1824  4117f8c0       constant
0xffff914081e4  1828  00000000       constant
0xffff914081e8  1832  914065a0       constant
0xffff914081ec  1836  0000ffff       constant
0xffff914081f0  1840  4117f8c0       constant
0xffff914081f4  1844  00000000       constant
0xffff914081f8  1848  914065a0       constant
0xffff914081fc  1852  0000ffff       constant
0xffff91408200  1856  4117e2d0       constant
0xffff91408204  1860  00000000       constant
0xffff91408208  1864  00c2d958       constant
0xffff9140820c  1868  00000000       constant
0xffff91408210  1872  4117f8c0       constant
0xffff91408214  1876  00000000       constant
0xffff91408218  1880  914065a0       constant
0xffff9140821c  1884  0000ffff       constant
0xffff91408220  1888  4117e2d0       constant
0xffff91408224  1892  00000000       constant
0xffff91408228  1896  00c2d958       constant
0xffff9140822c  1900  00000000       constant


RelocInfo (size = 65)
0xffff91407ac8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91407aec  code target (STUB)  (0xffff914065a0)
0xffff91407b64  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91407b88  code target (STUB)  (0xffff914065a0)
0xffff91407bc8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91407bec  code target (STUB)  (0xffff914065a0)
0xffff91407c58  external reference (isolate)  (0x4117e2d0)
0xffff91407c5c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91407cb8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91407cdc  code target (STUB)  (0xffff914065a0)
0xffff91407db8  external reference (isolate)  (0x4117e2d0)
0xffff91407dbc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91407e80  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91407ea4  code target (STUB)  (0xffff914065a0)
0xffff91407f04  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91407f28  code target (STUB)  (0xffff914065a0)
0xffff91407f94  external reference (isolate)  (0x4117e2d0)
0xffff91407f98  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91407ff4  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91408018  code target (STUB)  (0xffff914065a0)
0xffff91408114  external reference (isolate)  (0x4117e2d0)
0xffff91408118  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91408178  constant pool (size 184)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 706)
0xffff914082a0     0  movz x16, #0xa00000000
0xffff914082a4     4  sub csp, jssp, #0x10 (16)
0xffff914082a8     8  stp fp, lr, [jssp, #-16]!
0xffff914082ac    12  mov fp, jssp
0xffff914082b0    16  sub csp, jssp, #0x8 (8)
0xffff914082b4    20  sub jssp, jssp, #0x8 (8)
0xffff914082b8    24  stur x16, [fp, #-8]
0xffff914082bc    28  ldr x3, [fp]
0xffff914082c0    32  ldur x4, [x3, #-8]
0xffff914082c4    36  movz x16, #0xe00000000
0xffff914082c8    40  cmp x4, x16
0xffff914082cc    44  csel x4, fp, x3, ne
0xffff914082d0    48  ldr x3, [x4, #16]
0xffff914082d4    52  tbnz w3, #0, #+0x11c (addr 0xffff914083f0)
0xffff914082d8    56  asr x5, x3, #32
0xffff914082dc    60  movz w16, #0x257f
0xffff914082e0    64  cmp w5, w16, lsl #3
0xffff914082e4    68  b.hs #+0x224 (addr 0xffff91408508)
0xffff914082e8    72  cbz w5, #+0xc (addr 0xffff914082f4)
0xffff914082ec    76  mov x3, x5
0xffff914082f0    80  b #+0xc (addr 0xffff914082fc)
0xffff914082f4    84  movz x3, #0x4
0xffff914082f8    88  movz x5, #0x0
0xffff914082fc    92  lsl x4, x3, #32
0xffff91408300    96  lsl x5, x5, #32
0xffff91408304   100  lsl w6, w3, #3
0xffff91408308   104  add w6, w6, #0x10 (16)
0xffff9140830c   108  cmp w6, #0x96000 (614400)
0xffff91408310   112  b.hs #+0x200 (addr 0xffff91408510)
0xffff91408314   116  movz x7, #0xf2c0
0xffff91408318   120  movk x7, #0x4117, lsl #16
0xffff9140831c   124  ldp x8, x0, [x7]
0xffff91408320   128  adds x16, x8, #0x30 (48)
0xffff91408324   132  ccmp x16, x0, #nzCv, lo
0xffff91408328   136  b.hi #+0xf0 (addr 0xffff91408418)
0xffff9140832c   140  str x16, [x7]
0xffff91408330   144  orr x8, x8, #0x1
0xffff91408334   148  ldur x0, [x1, #23]
0xffff91408338   152  stur x0, [x8, #-1]
0xffff9140833c   156  ldr x0, pc+364 (addr 0x0000ffff914084a8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408340   160  stur x0, [x8, #7]
0xffff91408344   164  ldr x0, pc+364 (addr 0x0000ffff914084b0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408348   168  stur x0, [x8, #15]
0xffff9140834c   172  stur x5, [x8, #23]
0xffff91408350   176  add x0, x8, #0x20 (32)
0xffff91408354   180  ldr x1, pc+356 (addr 0x0000ffff914084b8)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91408358   184  stur x1, [x0, #-1]
0xffff9140835c   188  stur x2, [x0, #7]
0xffff91408360   192  ldur w0, [x2, #35]
0xffff91408364   196  add w0, w0, #0x1 (1)
0xffff91408368   200  lsl x0, x0, #32
0xffff9140836c   204  stur x0, [x2, #31]
0xffff91408370   208  sxtw x6, w6
0xffff91408374   212  movz x0, #0xf2c0
0xffff91408378   216  movk x0, #0x4117, lsl #16
0xffff9140837c   220  ldp x2, x16, [x0]
0xffff91408380   224  adds x1, x2, x6
0xffff91408384   228  ccmp x1, x16, #nzCv, lo
0xffff91408388   232  b.hi #+0xd4 (addr 0xffff9140845c)
0xffff9140838c   236  str x1, [x0]
0xffff91408390   240  orr x2, x2, #0x1
0xffff91408394   244  ldr x0, pc+300 (addr 0x0000ffff914084c0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91408398   248  stur x0, [x2, #-1]
0xffff9140839c   252  stur x4, [x2, #7]
0xffff914083a0   256  mov x0, x2
0xffff914083a4   260  stur x0, [x8, #15]
0xffff914083a8   264  add x1, x8, #0xf (15)
0xffff914083ac   268  and x0, x8, #0xfffffffffff00000
0xffff914083b0   272  ldr x0, [x0, #8]
0xffff914083b4   276  tbz w0, #2, #+0xc (addr 0xffff914083c0)
0xffff914083b8   280  ldr x16, pc+272 (addr 0x0000ffff914084c8)    ;; code: STUB, RecordWriteStub, minor: 66568
0xffff914083bc   284  blr x16
0xffff914083c0   288  cmp w3, #0x0 (0)
0xffff914083c4   292  b.le #+0x18 (addr 0xffff914083dc)
0xffff914083c8   296  sub w3, w3, #0x1 (1)
0xffff914083cc   300  ldr x0, pc+260 (addr 0x0000ffff914084d0)    ;; object: 0x49b04519 <the hole>
0xffff914083d0   304  add x1, x2, #0xf (15)
0xffff914083d4   308  str x0, [x1, w3, sxtw #3]
0xffff914083d8   312  b #-0x18 (addr 0xffff914083c0)
0xffff914083dc   316  mov x0, x8
0xffff914083e0   320  mov jssp, fp
0xffff914083e4   324  ldp fp, lr, [jssp], #16
0xffff914083e8   328  add jssp, jssp, #0x10 (16)
0xffff914083ec   332  ret
0xffff914083f0   336  ldur x16, [x3, #-1]
0xffff914083f4   340  ldr x17, [x26, #120]
0xffff914083f8   344  cmp x16, x17
0xffff914083fc   348  b.ne #+0x11c (addr 0xffff91408518)
0xffff91408400   352  ldur d29, [x3, #7]
0xffff91408404   356  fcvtzs w5, d29
0xffff91408408   360  scvtf d0, w5
0xffff9140840c   364  fcmp d29, d0
0xffff91408410   368  b.ne #+0x108 (addr 0xffff91408518)
0xffff91408414   372  b #-0x138 (addr 0xffff914082dc)
0xffff91408418   376  movz x8, #0x0
0xffff9140841c   380  mov x16, lr
0xffff91408420   384  ldr x17, pc+184 (addr 0x0000ffff914084d8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91408424   388  blr x17
0xffff91408428   392  movz x0, #0x3000000000
0xffff9140842c   396  movz x10, #0x0
0xffff91408430   400  sub csp, jssp, #0x10 (16)
0xffff91408434   404  stp x10, x0, [jssp, #-16]!
0xffff91408438   408  movz x0, #0x2
0xffff9140843c   412  movz x1, #0x5b88
0xffff91408440   416  movk x1, #0xe2, lsl #16
0xffff91408444   420  ldr x16, pc+156 (addr 0x0000ffff914084e0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91408448   424  blr x16
0xffff9140844c   428  str x0, [jssp, #64]
0xffff91408450   432  ldr x16, pc+152 (addr 0x0000ffff914084e8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91408454   436  blr x16
0xffff91408458   440  b #-0x124 (addr 0xffff91408334)
0xffff9140845c   444  movz x2, #0x0
0xffff91408460   448  mov x16, lr
0xffff91408464   452  ldr x17, pc+140 (addr 0x0000ffff914084f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91408468   456  blr x17
0xffff9140846c   460  lsl x0, x6, #32
0xffff91408470   464  movz x10, #0x0
0xffff91408474   468  sub csp, jssp, #0x10 (16)
0xffff91408478   472  stp x10, x0, [jssp, #-16]!
0xffff9140847c   476  movz x0, #0x2
0xffff91408480   480  movz x1, #0x5b88
0xffff91408484   484  movk x1, #0xe2, lsl #16
0xffff91408488   488  ldr x16, pc+112 (addr 0x0000ffff914084f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140848c   492  blr x16
0xffff91408490   496  str x0, [jssp, #16]
0xffff91408494   500  ldr x16, pc+108 (addr 0x0000ffff91408500)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91408498   504  blr x16
0xffff9140849c   508  b #-0x108 (addr 0xffff91408394)
0xffff914084a0   512  5800033f       constant pool begin (num_const = 25)    ;; constant pool
0xffff914084a4   516  d63f03e0       constant
0xffff914084a8   520  49b04201       constant
0xffff914084ac   524  00000000       constant
0xffff914084b0   528  49b04201       constant
0xffff914084b4   532  00000000       constant
0xffff914084b8   536  36405d81       constant
0xffff914084bc   540  00000000       constant
0xffff914084c0   544  36404259       constant
0xffff914084c4   548  00000000       constant
0xffff914084c8   552  91407ac0       constant
0xffff914084cc   556  0000ffff       constant
0xffff914084d0   560  49b04519       constant
0xffff914084d4   564  00000000       constant
0xffff914084d8   568  91406820       constant
0xffff914084dc   572  0000ffff       constant
0xffff914084e0   576  91406260       constant
0xffff914084e4   580  0000ffff       constant
0xffff914084e8   584  914068e0       constant
0xffff914084ec   588  0000ffff       constant
0xffff914084f0   592  91406820       constant
0xffff914084f4   596  0000ffff       constant
0xffff914084f8   600  91406260       constant
0xffff914084fc   604  0000ffff       constant
0xffff91408500   608  914068e0       constant
0xffff91408504   612  0000ffff       constant
0xffff91408508   616  movz x16, #0x0
0xffff9140850c   620  bl #+0x14 (addr 0xffff91408520)
0xffff91408510   624  movz x16, #0x8
0xffff91408514   628  bl #+0xc (addr 0xffff91408520)
0xffff91408518   632  movz x16, #0x10
0xffff9140851c   636  bl #+0x4 (addr 0xffff91408520)
0xffff91408520   640  ldr x17, pc+24 (addr 0x0000ffff91408538)    ;; lazy deoptimization bailout 0
0xffff91408524   644  add x17, x17, x16
0xffff91408528   648  br x17
0xffff9140852c   652  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91408530   656  d63f03e0       constant
0xffff91408534   660  d503201f       constant
0xffff91408538   664  91206000       constant
0xffff9140853c   668  0000ffff       constant


Safepoints (size = 34)
0xffff9140844c   428  000 | x1 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2
0xffff91408490   496  000 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff9140833c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408344  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408354  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91408394  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914083b8  code target (STUB)  (0xffff91407ac0)
0xffff914083cc  embedded object  (0x49b04519 <the hole>)
0xffff91408420  code target (STUB)  (0xffff91406820)
0xffff91408444  code target (STUB)  (0xffff91406260)
0xffff91408450  code target (STUB)  (0xffff914068e0)
0xffff91408464  code target (STUB)  (0xffff91406820)
0xffff91408488  code target (STUB)  (0xffff91406260)
0xffff91408494  code target (STUB)  (0xffff914068e0)
0xffff914084a0  constant pool (size 104)
0xffff91408520  runtime entry
0xffff9140852c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 706)
0xffff914082a0     0  movz x16, #0xa00000000
0xffff914082a4     4  sub csp, jssp, #0x10 (16)
0xffff914082a8     8  stp fp, lr, [jssp, #-16]!
0xffff914082ac    12  mov fp, jssp
0xffff914082b0    16  sub csp, jssp, #0x8 (8)
0xffff914082b4    20  sub jssp, jssp, #0x8 (8)
0xffff914082b8    24  stur x16, [fp, #-8]
0xffff914082bc    28  ldr x3, [fp]
0xffff914082c0    32  ldur x4, [x3, #-8]
0xffff914082c4    36  movz x16, #0xe00000000
0xffff914082c8    40  cmp x4, x16
0xffff914082cc    44  csel x4, fp, x3, ne
0xffff914082d0    48  ldr x3, [x4, #16]
0xffff914082d4    52  tbnz w3, #0, #+0x11c (addr 0xffff914083f0)
0xffff914082d8    56  asr x5, x3, #32
0xffff914082dc    60  movz w16, #0x257f
0xffff914082e0    64  cmp w5, w16, lsl #3
0xffff914082e4    68  b.hs #+0x224 (addr 0xffff91408508)
0xffff914082e8    72  cbz w5, #+0xc (addr 0xffff914082f4)
0xffff914082ec    76  mov x3, x5
0xffff914082f0    80  b #+0xc (addr 0xffff914082fc)
0xffff914082f4    84  movz x3, #0x4
0xffff914082f8    88  movz x5, #0x0
0xffff914082fc    92  lsl x4, x3, #32
0xffff91408300    96  lsl x5, x5, #32
0xffff91408304   100  lsl w6, w3, #3
0xffff91408308   104  add w6, w6, #0x10 (16)
0xffff9140830c   108  cmp w6, #0x96000 (614400)
0xffff91408310   112  b.hs #+0x200 (addr 0xffff91408510)
0xffff91408314   116  movz x7, #0xf2c0
0xffff91408318   120  movk x7, #0x4117, lsl #16
0xffff9140831c   124  ldp x8, x0, [x7]
0xffff91408320   128  adds x16, x8, #0x30 (48)
0xffff91408324   132  ccmp x16, x0, #nzCv, lo
0xffff91408328   136  b.hi #+0xf0 (addr 0xffff91408418)
0xffff9140832c   140  str x16, [x7]
0xffff91408330   144  orr x8, x8, #0x1
0xffff91408334   148  ldur x0, [x1, #23]
0xffff91408338   152  stur x0, [x8, #-1]
0xffff9140833c   156  ldr x0, pc+364 (addr 0x0000ffff914084a8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408340   160  stur x0, [x8, #7]
0xffff91408344   164  ldr x0, pc+364 (addr 0x0000ffff914084b0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408348   168  stur x0, [x8, #15]
0xffff9140834c   172  stur x5, [x8, #23]
0xffff91408350   176  add x0, x8, #0x20 (32)
0xffff91408354   180  ldr x1, pc+356 (addr 0x0000ffff914084b8)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91408358   184  stur x1, [x0, #-1]
0xffff9140835c   188  stur x2, [x0, #7]
0xffff91408360   192  ldur w0, [x2, #35]
0xffff91408364   196  add w0, w0, #0x1 (1)
0xffff91408368   200  lsl x0, x0, #32
0xffff9140836c   204  stur x0, [x2, #31]
0xffff91408370   208  sxtw x6, w6
0xffff91408374   212  movz x0, #0xf2c0
0xffff91408378   216  movk x0, #0x4117, lsl #16
0xffff9140837c   220  ldp x2, x16, [x0]
0xffff91408380   224  adds x1, x2, x6
0xffff91408384   228  ccmp x1, x16, #nzCv, lo
0xffff91408388   232  b.hi #+0xd4 (addr 0xffff9140845c)
0xffff9140838c   236  str x1, [x0]
0xffff91408390   240  orr x2, x2, #0x1
0xffff91408394   244  ldr x0, pc+300 (addr 0x0000ffff914084c0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91408398   248  stur x0, [x2, #-1]
0xffff9140839c   252  stur x4, [x2, #7]
0xffff914083a0   256  mov x0, x2
0xffff914083a4   260  stur x0, [x8, #15]
0xffff914083a8   264  add x1, x8, #0xf (15)
0xffff914083ac   268  and x0, x8, #0xfffffffffff00000
0xffff914083b0   272  ldr x0, [x0, #8]
0xffff914083b4   276  tbz w0, #2, #+0xc (addr 0xffff914083c0)
0xffff914083b8   280  ldr x16, pc+272 (addr 0x0000ffff914084c8)    ;; code: STUB, RecordWriteStub, minor: 66568
0xffff914083bc   284  blr x16
0xffff914083c0   288  cmp w3, #0x0 (0)
0xffff914083c4   292  b.le #+0x18 (addr 0xffff914083dc)
0xffff914083c8   296  sub w3, w3, #0x1 (1)
0xffff914083cc   300  ldr x0, pc+260 (addr 0x0000ffff914084d0)    ;; object: 0x49b04519 <the hole>
0xffff914083d0   304  add x1, x2, #0xf (15)
0xffff914083d4   308  str x0, [x1, w3, sxtw #3]
0xffff914083d8   312  b #-0x18 (addr 0xffff914083c0)
0xffff914083dc   316  mov x0, x8
0xffff914083e0   320  mov jssp, fp
0xffff914083e4   324  ldp fp, lr, [jssp], #16
0xffff914083e8   328  add jssp, jssp, #0x10 (16)
0xffff914083ec   332  ret
0xffff914083f0   336  ldur x16, [x3, #-1]
0xffff914083f4   340  ldr x17, [x26, #120]
0xffff914083f8   344  cmp x16, x17
0xffff914083fc   348  b.ne #+0x11c (addr 0xffff91408518)
0xffff91408400   352  ldur d29, [x3, #7]
0xffff91408404   356  fcvtzs w5, d29
0xffff91408408   360  scvtf d0, w5
0xffff9140840c   364  fcmp d29, d0
0xffff91408410   368  b.ne #+0x108 (addr 0xffff91408518)
0xffff91408414   372  b #-0x138 (addr 0xffff914082dc)
0xffff91408418   376  movz x8, #0x0
0xffff9140841c   380  mov x16, lr
0xffff91408420   384  ldr x17, pc+184 (addr 0x0000ffff914084d8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91408424   388  blr x17
0xffff91408428   392  movz x0, #0x3000000000
0xffff9140842c   396  movz x10, #0x0
0xffff91408430   400  sub csp, jssp, #0x10 (16)
0xffff91408434   404  stp x10, x0, [jssp, #-16]!
0xffff91408438   408  movz x0, #0x2
0xffff9140843c   412  movz x1, #0x5b88
0xffff91408440   416  movk x1, #0xe2, lsl #16
0xffff91408444   420  ldr x16, pc+156 (addr 0x0000ffff914084e0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91408448   424  blr x16
0xffff9140844c   428  str x0, [jssp, #64]
0xffff91408450   432  ldr x16, pc+152 (addr 0x0000ffff914084e8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91408454   436  blr x16
0xffff91408458   440  b #-0x124 (addr 0xffff91408334)
0xffff9140845c   444  movz x2, #0x0
0xffff91408460   448  mov x16, lr
0xffff91408464   452  ldr x17, pc+140 (addr 0x0000ffff914084f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91408468   456  blr x17
0xffff9140846c   460  lsl x0, x6, #32
0xffff91408470   464  movz x10, #0x0
0xffff91408474   468  sub csp, jssp, #0x10 (16)
0xffff91408478   472  stp x10, x0, [jssp, #-16]!
0xffff9140847c   476  movz x0, #0x2
0xffff91408480   480  movz x1, #0x5b88
0xffff91408484   484  movk x1, #0xe2, lsl #16
0xffff91408488   488  ldr x16, pc+112 (addr 0x0000ffff914084f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140848c   492  blr x16
0xffff91408490   496  str x0, [jssp, #16]
0xffff91408494   500  ldr x16, pc+108 (addr 0x0000ffff91408500)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91408498   504  blr x16
0xffff9140849c   508  b #-0x108 (addr 0xffff91408394)
0xffff914084a0   512  5800033f       constant pool begin (num_const = 25)    ;; constant pool
0xffff914084a4   516  d63f03e0       constant
0xffff914084a8   520  49b04201       constant
0xffff914084ac   524  00000000       constant
0xffff914084b0   528  49b04201       constant
0xffff914084b4   532  00000000       constant
0xffff914084b8   536  36405d81       constant
0xffff914084bc   540  00000000       constant
0xffff914084c0   544  36404259       constant
0xffff914084c4   548  00000000       constant
0xffff914084c8   552  91407ac0       constant
0xffff914084cc   556  0000ffff       constant
0xffff914084d0   560  49b04519       constant
0xffff914084d4   564  00000000       constant
0xffff914084d8   568  91406820       constant
0xffff914084dc   572  0000ffff       constant
0xffff914084e0   576  91406260       constant
0xffff914084e4   580  0000ffff       constant
0xffff914084e8   584  914068e0       constant
0xffff914084ec   588  0000ffff       constant
0xffff914084f0   592  91406820       constant
0xffff914084f4   596  0000ffff       constant
0xffff914084f8   600  91406260       constant
0xffff914084fc   604  0000ffff       constant
0xffff91408500   608  914068e0       constant
0xffff91408504   612  0000ffff       constant
0xffff91408508   616  movz x16, #0x0
0xffff9140850c   620  bl #+0x14 (addr 0xffff91408520)
0xffff91408510   624  movz x16, #0x8
0xffff91408514   628  bl #+0xc (addr 0xffff91408520)
0xffff91408518   632  movz x16, #0x10
0xffff9140851c   636  bl #+0x4 (addr 0xffff91408520)
0xffff91408520   640  ldr x17, pc+24 (addr 0x0000ffff91408538)    ;; lazy deoptimization bailout 0
0xffff91408524   644  add x17, x17, x16
0xffff91408528   648  br x17
0xffff9140852c   652  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91408530   656  d63f03e0       constant
0xffff91408534   660  d503201f       constant
0xffff91408538   664  91206000       constant
0xffff9140853c   668  0000ffff       constant


Safepoints (size = 34)
0xffff9140844c   428  000 | x1 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2
0xffff91408490   496  000 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff9140833c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408344  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408354  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91408394  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914083b8  code target (STUB)  (0xffff91407ac0)
0xffff914083cc  embedded object  (0x49b04519 <the hole>)
0xffff91408420  code target (STUB)  (0xffff91406820)
0xffff91408444  code target (STUB)  (0xffff91406260)
0xffff91408450  code target (STUB)  (0xffff914068e0)
0xffff91408464  code target (STUB)  (0xffff91406820)
0xffff91408488  code target (STUB)  (0xffff91406260)
0xffff91408494  code target (STUB)  (0xffff914068e0)
0xffff914084a0  constant pool (size 104)
0xffff91408520  runtime entry
0xffff9140852c  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 509)
0xffff914085e0     0  movz x16, #0xa00000000
0xffff914085e4     4  sub csp, jssp, #0x10 (16)
0xffff914085e8     8  stp fp, lr, [jssp, #-16]!
0xffff914085ec    12  mov fp, jssp
0xffff914085f0    16  sub csp, jssp, #0x8 (8)
0xffff914085f4    20  sub jssp, jssp, #0x8 (8)
0xffff914085f8    24  stur x16, [fp, #-8]
0xffff914085fc    28  ldr x3, [fp]
0xffff91408600    32  ldur x4, [x3, #-8]
0xffff91408604    36  movz x16, #0xe00000000
0xffff91408608    40  cmp x4, x16
0xffff9140860c    44  csel x4, fp, x3, ne
0xffff91408610    48  ldr x3, [x4, #16]
0xffff91408614    52  tbnz w3, #0, #+0xd0 (addr 0xffff914086e4)
0xffff91408618    56  asr x5, x3, #32
0xffff9140861c    60  movz w16, #0x257f
0xffff91408620    64  cmp w5, w16, lsl #3
0xffff91408624    68  b.hs #+0x16c (addr 0xffff91408790)
0xffff91408628    72  cbz w5, #+0xc (addr 0xffff91408634)
0xffff9140862c    76  mov x3, x5
0xffff91408630    80  b #+0xc (addr 0xffff9140863c)
0xffff91408634    84  movz x3, #0x4
0xffff91408638    88  movz x5, #0x0
0xffff9140863c    92  lsl x4, x3, #32
0xffff91408640    96  lsl x5, x5, #32
0xffff91408644   100  lsl w6, w3, #3
0xffff91408648   104  add w6, w6, #0x10 (16)
0xffff9140864c   108  cmp w6, #0x96000 (614400)
0xffff91408650   112  b.hs #+0x148 (addr 0xffff91408798)
0xffff91408654   116  add w0, w6, #0x20 (32)
0xffff91408658   120  sxtw x0, w0
0xffff9140865c   124  movz x2, #0xf2c0
0xffff91408660   128  movk x2, #0x4117, lsl #16
0xffff91408664   132  ldp x7, x16, [x2]
0xffff91408668   136  adds x6, x7, x0
0xffff9140866c   140  ccmp x6, x16, #nzCv, lo
0xffff91408670   144  b.hi #+0x9c (addr 0xffff9140870c)
0xffff91408674   148  str x6, [x2]
0xffff91408678   152  orr x7, x7, #0x1
0xffff9140867c   156  movz w0, #0x0
0xffff91408680   160  stur x0, [x7, #31]
0xffff91408684   164  ldur x0, [x1, #23]
0xffff91408688   168  stur x0, [x7, #-1]
0xffff9140868c   172  ldr x0, pc+204 (addr 0x0000ffff91408758)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408690   176  stur x0, [x7, #7]
0xffff91408694   180  ldr x0, pc+204 (addr 0x0000ffff91408760)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408698   184  stur x0, [x7, #15]
0xffff9140869c   188  stur x5, [x7, #23]
0xffff914086a0   192  add x0, x7, #0x20 (32)
0xffff914086a4   196  ldr x1, pc+196 (addr 0x0000ffff91408768)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914086a8   200  stur x1, [x0, #-1]
0xffff914086ac   204  stur x4, [x0, #7]
0xffff914086b0   208  stur x0, [x7, #15]
0xffff914086b4   212  cmp w3, #0x0 (0)
0xffff914086b8   216  b.le #+0x18 (addr 0xffff914086d0)
0xffff914086bc   220  sub w3, w3, #0x1 (1)
0xffff914086c0   224  ldr x1, pc+176 (addr 0x0000ffff91408770)    ;; object: 0x49b04519 <the hole>
0xffff914086c4   228  add x2, x0, #0xf (15)
0xffff914086c8   232  str x1, [x2, w3, sxtw #3]
0xffff914086cc   236  b #-0x18 (addr 0xffff914086b4)
0xffff914086d0   240  mov x0, x7
0xffff914086d4   244  mov jssp, fp
0xffff914086d8   248  ldp fp, lr, [jssp], #16
0xffff914086dc   252  add jssp, jssp, #0x10 (16)
0xffff914086e0   256  ret
0xffff914086e4   260  ldur x16, [x3, #-1]
0xffff914086e8   264  ldr x17, [x26, #120]
0xffff914086ec   268  cmp x16, x17
0xffff914086f0   272  b.ne #+0xb0 (addr 0xffff914087a0)
0xffff914086f4   276  ldur d29, [x3, #7]
0xffff914086f8   280  fcvtzs w5, d29
0xffff914086fc   284  scvtf d0, w5
0xffff91408700   288  fcmp d29, d0
0xffff91408704   292  b.ne #+0x9c (addr 0xffff914087a0)
0xffff91408708   296  b #-0xec (addr 0xffff9140861c)
0xffff9140870c   300  movz x7, #0x0
0xffff91408710   304  mov x16, lr
0xffff91408714   308  ldr x17, pc+100 (addr 0x0000ffff91408778)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91408718   312  blr x17
0xffff9140871c   316  lsl x0, x0, #32
0xffff91408720   320  movz x10, #0x0
0xffff91408724   324  sub csp, jssp, #0x10 (16)
0xffff91408728   328  stp x10, x0, [jssp, #-16]!
0xffff9140872c   332  movz x0, #0x2
0xffff91408730   336  movz x1, #0x5b88
0xffff91408734   340  movk x1, #0xe2, lsl #16
0xffff91408738   344  ldr x16, pc+72 (addr 0x0000ffff91408780)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140873c   348  blr x16
0xffff91408740   352  str x0, [jssp, #56]
0xffff91408744   356  ldr x16, pc+68 (addr 0x0000ffff91408788)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91408748   360  blr x16
0xffff9140874c   364  b #-0xd0 (addr 0xffff9140867c)
0xffff91408750   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff91408754   372  d63f03e0       constant
0xffff91408758   376  49b04201       constant
0xffff9140875c   380  00000000       constant
0xffff91408760   384  49b04201       constant
0xffff91408764   388  00000000       constant
0xffff91408768   392  36404259       constant
0xffff9140876c   396  00000000       constant
0xffff91408770   400  49b04519       constant
0xffff91408774   404  00000000       constant
0xffff91408778   408  91406820       constant
0xffff9140877c   412  0000ffff       constant
0xffff91408780   416  91406260       constant
0xffff91408784   420  0000ffff       constant
0xffff91408788   424  914068e0       constant
0xffff9140878c   428  0000ffff       constant
0xffff91408790   432  movz x16, #0x0
0xffff91408794   436  bl #+0x14 (addr 0xffff914087a8)
0xffff91408798   440  movz x16, #0x8
0xffff9140879c   444  bl #+0xc (addr 0xffff914087a8)
0xffff914087a0   448  movz x16, #0x10
0xffff914087a4   452  bl #+0x4 (addr 0xffff914087a8)
0xffff914087a8   456  ldr x17, pc+24 (addr 0x0000ffff914087c0)    ;; lazy deoptimization bailout 0
0xffff914087ac   460  add x17, x17, x16
0xffff914087b0   464  br x17
0xffff914087b4   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914087b8   472  d63f03e0       constant
0xffff914087bc   476  d503201f       constant
0xffff914087c0   480  91206000       constant
0xffff914087c4   484  0000ffff       constant


Safepoints (size = 21)
0xffff91408740   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff9140868c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408694  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914086a4  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914086c0  embedded object  (0x49b04519 <the hole>)
0xffff91408714  code target (STUB)  (0xffff91406820)
0xffff91408738  code target (STUB)  (0xffff91406260)
0xffff91408744  code target (STUB)  (0xffff914068e0)
0xffff91408750  constant pool (size 64)
0xffff914087a8  runtime entry
0xffff914087b4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 509)
0xffff914085e0     0  movz x16, #0xa00000000
0xffff914085e4     4  sub csp, jssp, #0x10 (16)
0xffff914085e8     8  stp fp, lr, [jssp, #-16]!
0xffff914085ec    12  mov fp, jssp
0xffff914085f0    16  sub csp, jssp, #0x8 (8)
0xffff914085f4    20  sub jssp, jssp, #0x8 (8)
0xffff914085f8    24  stur x16, [fp, #-8]
0xffff914085fc    28  ldr x3, [fp]
0xffff91408600    32  ldur x4, [x3, #-8]
0xffff91408604    36  movz x16, #0xe00000000
0xffff91408608    40  cmp x4, x16
0xffff9140860c    44  csel x4, fp, x3, ne
0xffff91408610    48  ldr x3, [x4, #16]
0xffff91408614    52  tbnz w3, #0, #+0xd0 (addr 0xffff914086e4)
0xffff91408618    56  asr x5, x3, #32
0xffff9140861c    60  movz w16, #0x257f
0xffff91408620    64  cmp w5, w16, lsl #3
0xffff91408624    68  b.hs #+0x16c (addr 0xffff91408790)
0xffff91408628    72  cbz w5, #+0xc (addr 0xffff91408634)
0xffff9140862c    76  mov x3, x5
0xffff91408630    80  b #+0xc (addr 0xffff9140863c)
0xffff91408634    84  movz x3, #0x4
0xffff91408638    88  movz x5, #0x0
0xffff9140863c    92  lsl x4, x3, #32
0xffff91408640    96  lsl x5, x5, #32
0xffff91408644   100  lsl w6, w3, #3
0xffff91408648   104  add w6, w6, #0x10 (16)
0xffff9140864c   108  cmp w6, #0x96000 (614400)
0xffff91408650   112  b.hs #+0x148 (addr 0xffff91408798)
0xffff91408654   116  add w0, w6, #0x20 (32)
0xffff91408658   120  sxtw x0, w0
0xffff9140865c   124  movz x2, #0xf2c0
0xffff91408660   128  movk x2, #0x4117, lsl #16
0xffff91408664   132  ldp x7, x16, [x2]
0xffff91408668   136  adds x6, x7, x0
0xffff9140866c   140  ccmp x6, x16, #nzCv, lo
0xffff91408670   144  b.hi #+0x9c (addr 0xffff9140870c)
0xffff91408674   148  str x6, [x2]
0xffff91408678   152  orr x7, x7, #0x1
0xffff9140867c   156  movz w0, #0x0
0xffff91408680   160  stur x0, [x7, #31]
0xffff91408684   164  ldur x0, [x1, #23]
0xffff91408688   168  stur x0, [x7, #-1]
0xffff9140868c   172  ldr x0, pc+204 (addr 0x0000ffff91408758)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408690   176  stur x0, [x7, #7]
0xffff91408694   180  ldr x0, pc+204 (addr 0x0000ffff91408760)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408698   184  stur x0, [x7, #15]
0xffff9140869c   188  stur x5, [x7, #23]
0xffff914086a0   192  add x0, x7, #0x20 (32)
0xffff914086a4   196  ldr x1, pc+196 (addr 0x0000ffff91408768)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914086a8   200  stur x1, [x0, #-1]
0xffff914086ac   204  stur x4, [x0, #7]
0xffff914086b0   208  stur x0, [x7, #15]
0xffff914086b4   212  cmp w3, #0x0 (0)
0xffff914086b8   216  b.le #+0x18 (addr 0xffff914086d0)
0xffff914086bc   220  sub w3, w3, #0x1 (1)
0xffff914086c0   224  ldr x1, pc+176 (addr 0x0000ffff91408770)    ;; object: 0x49b04519 <the hole>
0xffff914086c4   228  add x2, x0, #0xf (15)
0xffff914086c8   232  str x1, [x2, w3, sxtw #3]
0xffff914086cc   236  b #-0x18 (addr 0xffff914086b4)
0xffff914086d0   240  mov x0, x7
0xffff914086d4   244  mov jssp, fp
0xffff914086d8   248  ldp fp, lr, [jssp], #16
0xffff914086dc   252  add jssp, jssp, #0x10 (16)
0xffff914086e0   256  ret
0xffff914086e4   260  ldur x16, [x3, #-1]
0xffff914086e8   264  ldr x17, [x26, #120]
0xffff914086ec   268  cmp x16, x17
0xffff914086f0   272  b.ne #+0xb0 (addr 0xffff914087a0)
0xffff914086f4   276  ldur d29, [x3, #7]
0xffff914086f8   280  fcvtzs w5, d29
0xffff914086fc   284  scvtf d0, w5
0xffff91408700   288  fcmp d29, d0
0xffff91408704   292  b.ne #+0x9c (addr 0xffff914087a0)
0xffff91408708   296  b #-0xec (addr 0xffff9140861c)
0xffff9140870c   300  movz x7, #0x0
0xffff91408710   304  mov x16, lr
0xffff91408714   308  ldr x17, pc+100 (addr 0x0000ffff91408778)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91408718   312  blr x17
0xffff9140871c   316  lsl x0, x0, #32
0xffff91408720   320  movz x10, #0x0
0xffff91408724   324  sub csp, jssp, #0x10 (16)
0xffff91408728   328  stp x10, x0, [jssp, #-16]!
0xffff9140872c   332  movz x0, #0x2
0xffff91408730   336  movz x1, #0x5b88
0xffff91408734   340  movk x1, #0xe2, lsl #16
0xffff91408738   344  ldr x16, pc+72 (addr 0x0000ffff91408780)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140873c   348  blr x16
0xffff91408740   352  str x0, [jssp, #56]
0xffff91408744   356  ldr x16, pc+68 (addr 0x0000ffff91408788)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91408748   360  blr x16
0xffff9140874c   364  b #-0xd0 (addr 0xffff9140867c)
0xffff91408750   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff91408754   372  d63f03e0       constant
0xffff91408758   376  49b04201       constant
0xffff9140875c   380  00000000       constant
0xffff91408760   384  49b04201       constant
0xffff91408764   388  00000000       constant
0xffff91408768   392  36404259       constant
0xffff9140876c   396  00000000       constant
0xffff91408770   400  49b04519       constant
0xffff91408774   404  00000000       constant
0xffff91408778   408  91406820       constant
0xffff9140877c   412  0000ffff       constant
0xffff91408780   416  91406260       constant
0xffff91408784   420  0000ffff       constant
0xffff91408788   424  914068e0       constant
0xffff9140878c   428  0000ffff       constant
0xffff91408790   432  movz x16, #0x0
0xffff91408794   436  bl #+0x14 (addr 0xffff914087a8)
0xffff91408798   440  movz x16, #0x8
0xffff9140879c   444  bl #+0xc (addr 0xffff914087a8)
0xffff914087a0   448  movz x16, #0x10
0xffff914087a4   452  bl #+0x4 (addr 0xffff914087a8)
0xffff914087a8   456  ldr x17, pc+24 (addr 0x0000ffff914087c0)    ;; lazy deoptimization bailout 0
0xffff914087ac   460  add x17, x17, x16
0xffff914087b0   464  br x17
0xffff914087b4   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914087b8   472  d63f03e0       constant
0xffff914087bc   476  d503201f       constant
0xffff914087c0   480  91206000       constant
0xffff914087c4   484  0000ffff       constant


Safepoints (size = 21)
0xffff91408740   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff9140868c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408694  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914086a4  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914086c0  embedded object  (0x49b04519 <the hole>)
0xffff91408714  code target (STUB)  (0xffff91406820)
0xffff91408738  code target (STUB)  (0xffff91406260)
0xffff91408744  code target (STUB)  (0xffff914068e0)
0xffff91408750  constant pool (size 64)
0xffff914087a8  runtime entry
0xffff914087b4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 722)
0xffff91408840     0  movz x16, #0xa00000000
0xffff91408844     4  sub csp, jssp, #0x10 (16)
0xffff91408848     8  stp fp, lr, [jssp, #-16]!
0xffff9140884c    12  mov fp, jssp
0xffff91408850    16  sub csp, jssp, #0x8 (8)
0xffff91408854    20  sub jssp, jssp, #0x8 (8)
0xffff91408858    24  stur x16, [fp, #-8]
0xffff9140885c    28  ldr x3, [fp]
0xffff91408860    32  ldur x4, [x3, #-8]
0xffff91408864    36  movz x16, #0xe00000000
0xffff91408868    40  cmp x4, x16
0xffff9140886c    44  csel x4, fp, x3, ne
0xffff91408870    48  ldr x3, [x4, #16]
0xffff91408874    52  tbnz w3, #0, #+0x128 (addr 0xffff9140899c)
0xffff91408878    56  asr x5, x3, #32
0xffff9140887c    60  movz w16, #0x257f
0xffff91408880    64  cmp w5, w16, lsl #3
0xffff91408884    68  b.hs #+0x234 (addr 0xffff91408ab8)
0xffff91408888    72  cbz w5, #+0xc (addr 0xffff91408894)
0xffff9140888c    76  mov x3, x5
0xffff91408890    80  b #+0xc (addr 0xffff9140889c)
0xffff91408894    84  movz x3, #0x4
0xffff91408898    88  movz x5, #0x0
0xffff9140889c    92  lsl x4, x3, #32
0xffff914088a0    96  lsl x5, x5, #32
0xffff914088a4   100  lsl w6, w3, #3
0xffff914088a8   104  add w6, w6, #0x10 (16)
0xffff914088ac   108  cmp w6, #0x96000 (614400)
0xffff914088b0   112  b.hs #+0x210 (addr 0xffff91408ac0)
0xffff914088b4   116  movz x7, #0xf2c0
0xffff914088b8   120  movk x7, #0x4117, lsl #16
0xffff914088bc   124  ldp x8, x0, [x7]
0xffff914088c0   128  adds x16, x8, #0x30 (48)
0xffff914088c4   132  ccmp x16, x0, #nzCv, lo
0xffff914088c8   136  b.hi #+0xfc (addr 0xffff914089c4)
0xffff914088cc   140  str x16, [x7]
0xffff914088d0   144  orr x8, x8, #0x1
0xffff914088d4   148  ldur x0, [x1, #39]
0xffff914088d8   152  ldur x0, [x0, #39]
0xffff914088dc   156  movz x16, #0x17f
0xffff914088e0   160  ldr x0, [x0, x16]
0xffff914088e4   164  stur x0, [x8, #-1]
0xffff914088e8   168  ldr x0, pc+368 (addr 0x0000ffff91408a58)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914088ec   172  stur x0, [x8, #7]
0xffff914088f0   176  ldr x0, pc+368 (addr 0x0000ffff91408a60)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914088f4   180  stur x0, [x8, #15]
0xffff914088f8   184  stur x5, [x8, #23]
0xffff914088fc   188  add x0, x8, #0x20 (32)
0xffff91408900   192  ldr x1, pc+360 (addr 0x0000ffff91408a68)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91408904   196  stur x1, [x0, #-1]
0xffff91408908   200  stur x2, [x0, #7]
0xffff9140890c   204  ldur w0, [x2, #35]
0xffff91408910   208  add w0, w0, #0x1 (1)
0xffff91408914   212  lsl x0, x0, #32
0xffff91408918   216  stur x0, [x2, #31]
0xffff9140891c   220  sxtw x6, w6
0xffff91408920   224  movz x0, #0xf2c0
0xffff91408924   228  movk x0, #0x4117, lsl #16
0xffff91408928   232  ldp x2, x16, [x0]
0xffff9140892c   236  adds x1, x2, x6
0xffff91408930   240  ccmp x1, x16, #nzCv, lo
0xffff91408934   244  b.hi #+0xd4 (addr 0xffff91408a08)
0xffff91408938   248  str x1, [x0]
0xffff9140893c   252  orr x2, x2, #0x1
0xffff91408940   256  ldr x0, pc+304 (addr 0x0000ffff91408a70)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91408944   260  stur x0, [x2, #-1]
0xffff91408948   264  stur x4, [x2, #7]
0xffff9140894c   268  mov x0, x2
0xffff91408950   272  stur x0, [x8, #15]
0xffff91408954   276  add x1, x8, #0xf (15)
0xffff91408958   280  and x0, x8, #0xfffffffffff00000
0xffff9140895c   284  ldr x0, [x0, #8]
0xffff91408960   288  tbz w0, #2, #+0xc (addr 0xffff9140896c)
0xffff91408964   292  ldr x16, pc+276 (addr 0x0000ffff91408a78)    ;; code: STUB, RecordWriteStub, minor: 66568
0xffff91408968   296  blr x16
0xffff9140896c   300  cmp w3, #0x0 (0)
0xffff91408970   304  b.le #+0x18 (addr 0xffff91408988)
0xffff91408974   308  sub w3, w3, #0x1 (1)
0xffff91408978   312  ldr x0, pc+264 (addr 0x0000ffff91408a80)    ;; object: 0x49b04519 <the hole>
0xffff9140897c   316  add x1, x2, #0xf (15)
0xffff91408980   320  str x0, [x1, w3, sxtw #3]
0xffff91408984   324  b #-0x18 (addr 0xffff9140896c)
0xffff91408988   328  mov x0, x8
0xffff9140898c   332  mov jssp, fp
0xffff91408990   336  ldp fp, lr, [jssp], #16
0xffff91408994   340  add jssp, jssp, #0x10 (16)
0xffff91408998   344  ret
0xffff9140899c   348  ldur x16, [x3, #-1]
0xffff914089a0   352  ldr x17, [x26, #120]
0xffff914089a4   356  cmp x16, x17
0xffff914089a8   360  b.ne #+0x120 (addr 0xffff91408ac8)
0xffff914089ac   364  ldur d29, [x3, #7]
0xffff914089b0   368  fcvtzs w5, d29
0xffff914089b4   372  scvtf d0, w5
0xffff914089b8   376  fcmp d29, d0
0xffff914089bc   380  b.ne #+0x10c (addr 0xffff91408ac8)
0xffff914089c0   384  b #-0x144 (addr 0xffff9140887c)
0xffff914089c4   388  movz x8, #0x0
0xffff914089c8   392  mov x16, lr
0xffff914089cc   396  ldr x17, pc+188 (addr 0x0000ffff91408a88)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914089d0   400  blr x17
0xffff914089d4   404  movz x0, #0x3000000000
0xffff914089d8   408  movz x10, #0x0
0xffff914089dc   412  sub csp, jssp, #0x10 (16)
0xffff914089e0   416  stp x10, x0, [jssp, #-16]!
0xffff914089e4   420  movz x0, #0x2
0xffff914089e8   424  movz x1, #0x5b88
0xffff914089ec   428  movk x1, #0xe2, lsl #16
0xffff914089f0   432  ldr x16, pc+160 (addr 0x0000ffff91408a90)    ;; code: STUB, CEntryStub, minor: 5
0xffff914089f4   436  blr x16
0xffff914089f8   440  str x0, [jssp, #64]
0xffff914089fc   444  ldr x16, pc+156 (addr 0x0000ffff91408a98)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91408a00   448  blr x16
0xffff91408a04   452  b #-0x130 (addr 0xffff914088d4)
0xffff91408a08   456  movz x2, #0x0
0xffff91408a0c   460  mov x16, lr
0xffff91408a10   464  ldr x17, pc+144 (addr 0x0000ffff91408aa0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91408a14   468  blr x17
0xffff91408a18   472  lsl x0, x6, #32
0xffff91408a1c   476  movz x10, #0x0
0xffff91408a20   480  sub csp, jssp, #0x10 (16)
0xffff91408a24   484  stp x10, x0, [jssp, #-16]!
0xffff91408a28   488  movz x0, #0x2
0xffff91408a2c   492  movz x1, #0x5b88
0xffff91408a30   496  movk x1, #0xe2, lsl #16
0xffff91408a34   500  ldr x16, pc+116 (addr 0x0000ffff91408aa8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91408a38   504  blr x16
0xffff91408a3c   508  str x0, [jssp, #16]
0xffff91408a40   512  ldr x16, pc+112 (addr 0x0000ffff91408ab0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91408a44   516  blr x16
0xffff91408a48   520  b #-0x108 (addr 0xffff91408940)
0xffff91408a4c   524  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff91408a50   528  d63f03e0       constant
0xffff91408a54   532  d503201f       constant
0xffff91408a58   536  49b04201       constant
0xffff91408a5c   540  00000000       constant
0xffff91408a60   544  49b04201       constant
0xffff91408a64   548  00000000       constant
0xffff91408a68   552  36405d81       constant
0xffff91408a6c   556  00000000       constant
0xffff91408a70   560  36404259       constant
0xffff91408a74   564  00000000       constant
0xffff91408a78   568  91407ac0       constant
0xffff91408a7c   572  0000ffff       constant
0xffff91408a80   576  49b04519       constant
0xffff91408a84   580  00000000       constant
0xffff91408a88   584  91406820       constant
0xffff91408a8c   588  0000ffff       constant
0xffff91408a90   592  91406260       constant
0xffff91408a94   596  0000ffff       constant
0xffff91408a98   600  914068e0       constant
0xffff91408a9c   604  0000ffff       constant
0xffff91408aa0   608  91406820       constant
0xffff91408aa4   612  0000ffff       constant
0xffff91408aa8   616  91406260       constant
0xffff91408aac   620  0000ffff       constant
0xffff91408ab0   624  914068e0       constant
0xffff91408ab4   628  0000ffff       constant
0xffff91408ab8   632  movz x16, #0x0
0xffff91408abc   636  bl #+0x14 (addr 0xffff91408ad0)
0xffff91408ac0   640  movz x16, #0x8
0xffff91408ac4   644  bl #+0xc (addr 0xffff91408ad0)
0xffff91408ac8   648  movz x16, #0x10
0xffff91408acc   652  bl #+0x4 (addr 0xffff91408ad0)
0xffff91408ad0   656  ldr x17, pc+24 (addr 0x0000ffff91408ae8)    ;; lazy deoptimization bailout 0
0xffff91408ad4   660  add x17, x17, x16
0xffff91408ad8   664  br x17
0xffff91408adc   668  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91408ae0   672  d63f03e0       constant
0xffff91408ae4   676  d503201f       constant
0xffff91408ae8   680  91206000       constant
0xffff91408aec   684  0000ffff       constant


Safepoints (size = 34)
0xffff914089f8   440  000 | x1 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2
0xffff91408a3c   508  000 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff914088e8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914088f0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408900  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91408940  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91408964  code target (STUB)  (0xffff91407ac0)
0xffff91408978  embedded object  (0x49b04519 <the hole>)
0xffff914089cc  code target (STUB)  (0xffff91406820)
0xffff914089f0  code target (STUB)  (0xffff91406260)
0xffff914089fc  code target (STUB)  (0xffff914068e0)
0xffff91408a10  code target (STUB)  (0xffff91406820)
0xffff91408a34  code target (STUB)  (0xffff91406260)
0xffff91408a40  code target (STUB)  (0xffff914068e0)
0xffff91408a4c  constant pool (size 108)
0xffff91408ad0  runtime entry
0xffff91408adc  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_HOLEY_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 722)
0xffff91408840     0  movz x16, #0xa00000000
0xffff91408844     4  sub csp, jssp, #0x10 (16)
0xffff91408848     8  stp fp, lr, [jssp, #-16]!
0xffff9140884c    12  mov fp, jssp
0xffff91408850    16  sub csp, jssp, #0x8 (8)
0xffff91408854    20  sub jssp, jssp, #0x8 (8)
0xffff91408858    24  stur x16, [fp, #-8]
0xffff9140885c    28  ldr x3, [fp]
0xffff91408860    32  ldur x4, [x3, #-8]
0xffff91408864    36  movz x16, #0xe00000000
0xffff91408868    40  cmp x4, x16
0xffff9140886c    44  csel x4, fp, x3, ne
0xffff91408870    48  ldr x3, [x4, #16]
0xffff91408874    52  tbnz w3, #0, #+0x128 (addr 0xffff9140899c)
0xffff91408878    56  asr x5, x3, #32
0xffff9140887c    60  movz w16, #0x257f
0xffff91408880    64  cmp w5, w16, lsl #3
0xffff91408884    68  b.hs #+0x234 (addr 0xffff91408ab8)
0xffff91408888    72  cbz w5, #+0xc (addr 0xffff91408894)
0xffff9140888c    76  mov x3, x5
0xffff91408890    80  b #+0xc (addr 0xffff9140889c)
0xffff91408894    84  movz x3, #0x4
0xffff91408898    88  movz x5, #0x0
0xffff9140889c    92  lsl x4, x3, #32
0xffff914088a0    96  lsl x5, x5, #32
0xffff914088a4   100  lsl w6, w3, #3
0xffff914088a8   104  add w6, w6, #0x10 (16)
0xffff914088ac   108  cmp w6, #0x96000 (614400)
0xffff914088b0   112  b.hs #+0x210 (addr 0xffff91408ac0)
0xffff914088b4   116  movz x7, #0xf2c0
0xffff914088b8   120  movk x7, #0x4117, lsl #16
0xffff914088bc   124  ldp x8, x0, [x7]
0xffff914088c0   128  adds x16, x8, #0x30 (48)
0xffff914088c4   132  ccmp x16, x0, #nzCv, lo
0xffff914088c8   136  b.hi #+0xfc (addr 0xffff914089c4)
0xffff914088cc   140  str x16, [x7]
0xffff914088d0   144  orr x8, x8, #0x1
0xffff914088d4   148  ldur x0, [x1, #39]
0xffff914088d8   152  ldur x0, [x0, #39]
0xffff914088dc   156  movz x16, #0x17f
0xffff914088e0   160  ldr x0, [x0, x16]
0xffff914088e4   164  stur x0, [x8, #-1]
0xffff914088e8   168  ldr x0, pc+368 (addr 0x0000ffff91408a58)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914088ec   172  stur x0, [x8, #7]
0xffff914088f0   176  ldr x0, pc+368 (addr 0x0000ffff91408a60)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914088f4   180  stur x0, [x8, #15]
0xffff914088f8   184  stur x5, [x8, #23]
0xffff914088fc   188  add x0, x8, #0x20 (32)
0xffff91408900   192  ldr x1, pc+360 (addr 0x0000ffff91408a68)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91408904   196  stur x1, [x0, #-1]
0xffff91408908   200  stur x2, [x0, #7]
0xffff9140890c   204  ldur w0, [x2, #35]
0xffff91408910   208  add w0, w0, #0x1 (1)
0xffff91408914   212  lsl x0, x0, #32
0xffff91408918   216  stur x0, [x2, #31]
0xffff9140891c   220  sxtw x6, w6
0xffff91408920   224  movz x0, #0xf2c0
0xffff91408924   228  movk x0, #0x4117, lsl #16
0xffff91408928   232  ldp x2, x16, [x0]
0xffff9140892c   236  adds x1, x2, x6
0xffff91408930   240  ccmp x1, x16, #nzCv, lo
0xffff91408934   244  b.hi #+0xd4 (addr 0xffff91408a08)
0xffff91408938   248  str x1, [x0]
0xffff9140893c   252  orr x2, x2, #0x1
0xffff91408940   256  ldr x0, pc+304 (addr 0x0000ffff91408a70)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91408944   260  stur x0, [x2, #-1]
0xffff91408948   264  stur x4, [x2, #7]
0xffff9140894c   268  mov x0, x2
0xffff91408950   272  stur x0, [x8, #15]
0xffff91408954   276  add x1, x8, #0xf (15)
0xffff91408958   280  and x0, x8, #0xfffffffffff00000
0xffff9140895c   284  ldr x0, [x0, #8]
0xffff91408960   288  tbz w0, #2, #+0xc (addr 0xffff9140896c)
0xffff91408964   292  ldr x16, pc+276 (addr 0x0000ffff91408a78)    ;; code: STUB, RecordWriteStub, minor: 66568
0xffff91408968   296  blr x16
0xffff9140896c   300  cmp w3, #0x0 (0)
0xffff91408970   304  b.le #+0x18 (addr 0xffff91408988)
0xffff91408974   308  sub w3, w3, #0x1 (1)
0xffff91408978   312  ldr x0, pc+264 (addr 0x0000ffff91408a80)    ;; object: 0x49b04519 <the hole>
0xffff9140897c   316  add x1, x2, #0xf (15)
0xffff91408980   320  str x0, [x1, w3, sxtw #3]
0xffff91408984   324  b #-0x18 (addr 0xffff9140896c)
0xffff91408988   328  mov x0, x8
0xffff9140898c   332  mov jssp, fp
0xffff91408990   336  ldp fp, lr, [jssp], #16
0xffff91408994   340  add jssp, jssp, #0x10 (16)
0xffff91408998   344  ret
0xffff9140899c   348  ldur x16, [x3, #-1]
0xffff914089a0   352  ldr x17, [x26, #120]
0xffff914089a4   356  cmp x16, x17
0xffff914089a8   360  b.ne #+0x120 (addr 0xffff91408ac8)
0xffff914089ac   364  ldur d29, [x3, #7]
0xffff914089b0   368  fcvtzs w5, d29
0xffff914089b4   372  scvtf d0, w5
0xffff914089b8   376  fcmp d29, d0
0xffff914089bc   380  b.ne #+0x10c (addr 0xffff91408ac8)
0xffff914089c0   384  b #-0x144 (addr 0xffff9140887c)
0xffff914089c4   388  movz x8, #0x0
0xffff914089c8   392  mov x16, lr
0xffff914089cc   396  ldr x17, pc+188 (addr 0x0000ffff91408a88)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914089d0   400  blr x17
0xffff914089d4   404  movz x0, #0x3000000000
0xffff914089d8   408  movz x10, #0x0
0xffff914089dc   412  sub csp, jssp, #0x10 (16)
0xffff914089e0   416  stp x10, x0, [jssp, #-16]!
0xffff914089e4   420  movz x0, #0x2
0xffff914089e8   424  movz x1, #0x5b88
0xffff914089ec   428  movk x1, #0xe2, lsl #16
0xffff914089f0   432  ldr x16, pc+160 (addr 0x0000ffff91408a90)    ;; code: STUB, CEntryStub, minor: 5
0xffff914089f4   436  blr x16
0xffff914089f8   440  str x0, [jssp, #64]
0xffff914089fc   444  ldr x16, pc+156 (addr 0x0000ffff91408a98)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91408a00   448  blr x16
0xffff91408a04   452  b #-0x130 (addr 0xffff914088d4)
0xffff91408a08   456  movz x2, #0x0
0xffff91408a0c   460  mov x16, lr
0xffff91408a10   464  ldr x17, pc+144 (addr 0x0000ffff91408aa0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91408a14   468  blr x17
0xffff91408a18   472  lsl x0, x6, #32
0xffff91408a1c   476  movz x10, #0x0
0xffff91408a20   480  sub csp, jssp, #0x10 (16)
0xffff91408a24   484  stp x10, x0, [jssp, #-16]!
0xffff91408a28   488  movz x0, #0x2
0xffff91408a2c   492  movz x1, #0x5b88
0xffff91408a30   496  movk x1, #0xe2, lsl #16
0xffff91408a34   500  ldr x16, pc+116 (addr 0x0000ffff91408aa8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91408a38   504  blr x16
0xffff91408a3c   508  str x0, [jssp, #16]
0xffff91408a40   512  ldr x16, pc+112 (addr 0x0000ffff91408ab0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91408a44   516  blr x16
0xffff91408a48   520  b #-0x108 (addr 0xffff91408940)
0xffff91408a4c   524  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff91408a50   528  d63f03e0       constant
0xffff91408a54   532  d503201f       constant
0xffff91408a58   536  49b04201       constant
0xffff91408a5c   540  00000000       constant
0xffff91408a60   544  49b04201       constant
0xffff91408a64   548  00000000       constant
0xffff91408a68   552  36405d81       constant
0xffff91408a6c   556  00000000       constant
0xffff91408a70   560  36404259       constant
0xffff91408a74   564  00000000       constant
0xffff91408a78   568  91407ac0       constant
0xffff91408a7c   572  0000ffff       constant
0xffff91408a80   576  49b04519       constant
0xffff91408a84   580  00000000       constant
0xffff91408a88   584  91406820       constant
0xffff91408a8c   588  0000ffff       constant
0xffff91408a90   592  91406260       constant
0xffff91408a94   596  0000ffff       constant
0xffff91408a98   600  914068e0       constant
0xffff91408a9c   604  0000ffff       constant
0xffff91408aa0   608  91406820       constant
0xffff91408aa4   612  0000ffff       constant
0xffff91408aa8   616  91406260       constant
0xffff91408aac   620  0000ffff       constant
0xffff91408ab0   624  914068e0       constant
0xffff91408ab4   628  0000ffff       constant
0xffff91408ab8   632  movz x16, #0x0
0xffff91408abc   636  bl #+0x14 (addr 0xffff91408ad0)
0xffff91408ac0   640  movz x16, #0x8
0xffff91408ac4   644  bl #+0xc (addr 0xffff91408ad0)
0xffff91408ac8   648  movz x16, #0x10
0xffff91408acc   652  bl #+0x4 (addr 0xffff91408ad0)
0xffff91408ad0   656  ldr x17, pc+24 (addr 0x0000ffff91408ae8)    ;; lazy deoptimization bailout 0
0xffff91408ad4   660  add x17, x17, x16
0xffff91408ad8   664  br x17
0xffff91408adc   668  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91408ae0   672  d63f03e0       constant
0xffff91408ae4   676  d503201f       constant
0xffff91408ae8   680  91206000       constant
0xffff91408aec   684  0000ffff       constant


Safepoints (size = 34)
0xffff914089f8   440  000 | x1 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2
0xffff91408a3c   508  000 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff914088e8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914088f0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408900  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91408940  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91408964  code target (STUB)  (0xffff91407ac0)
0xffff91408978  embedded object  (0x49b04519 <the hole>)
0xffff914089cc  code target (STUB)  (0xffff91406820)
0xffff914089f0  code target (STUB)  (0xffff91406260)
0xffff914089fc  code target (STUB)  (0xffff914068e0)
0xffff91408a10  code target (STUB)  (0xffff91406820)
0xffff91408a34  code target (STUB)  (0xffff91406260)
0xffff91408a40  code target (STUB)  (0xffff914068e0)
0xffff91408a4c  constant pool (size 108)
0xffff91408ad0  runtime entry
0xffff91408adc  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 525)
0xffff91408b80     0  movz x16, #0xa00000000
0xffff91408b84     4  sub csp, jssp, #0x10 (16)
0xffff91408b88     8  stp fp, lr, [jssp, #-16]!
0xffff91408b8c    12  mov fp, jssp
0xffff91408b90    16  sub csp, jssp, #0x8 (8)
0xffff91408b94    20  sub jssp, jssp, #0x8 (8)
0xffff91408b98    24  stur x16, [fp, #-8]
0xffff91408b9c    28  ldr x3, [fp]
0xffff91408ba0    32  ldur x4, [x3, #-8]
0xffff91408ba4    36  movz x16, #0xe00000000
0xffff91408ba8    40  cmp x4, x16
0xffff91408bac    44  csel x4, fp, x3, ne
0xffff91408bb0    48  ldr x3, [x4, #16]
0xffff91408bb4    52  tbnz w3, #0, #+0xdc (addr 0xffff91408c90)
0xffff91408bb8    56  asr x5, x3, #32
0xffff91408bbc    60  movz w16, #0x257f
0xffff91408bc0    64  cmp w5, w16, lsl #3
0xffff91408bc4    68  b.hs #+0x17c (addr 0xffff91408d40)
0xffff91408bc8    72  cbz w5, #+0xc (addr 0xffff91408bd4)
0xffff91408bcc    76  mov x3, x5
0xffff91408bd0    80  b #+0xc (addr 0xffff91408bdc)
0xffff91408bd4    84  movz x3, #0x4
0xffff91408bd8    88  movz x5, #0x0
0xffff91408bdc    92  lsl x4, x3, #32
0xffff91408be0    96  lsl x5, x5, #32
0xffff91408be4   100  lsl w6, w3, #3
0xffff91408be8   104  add w6, w6, #0x10 (16)
0xffff91408bec   108  cmp w6, #0x96000 (614400)
0xffff91408bf0   112  b.hs #+0x158 (addr 0xffff91408d48)
0xffff91408bf4   116  add w0, w6, #0x20 (32)
0xffff91408bf8   120  sxtw x0, w0
0xffff91408bfc   124  movz x2, #0xf2c0
0xffff91408c00   128  movk x2, #0x4117, lsl #16
0xffff91408c04   132  ldp x7, x16, [x2]
0xffff91408c08   136  adds x6, x7, x0
0xffff91408c0c   140  ccmp x6, x16, #nzCv, lo
0xffff91408c10   144  b.hi #+0xa8 (addr 0xffff91408cb8)
0xffff91408c14   148  str x6, [x2]
0xffff91408c18   152  orr x7, x7, #0x1
0xffff91408c1c   156  movz w0, #0x0
0xffff91408c20   160  stur x0, [x7, #31]
0xffff91408c24   164  ldur x0, [x1, #39]
0xffff91408c28   168  ldur x0, [x0, #39]
0xffff91408c2c   172  movz x16, #0x17f
0xffff91408c30   176  ldr x0, [x0, x16]
0xffff91408c34   180  stur x0, [x7, #-1]
0xffff91408c38   184  ldr x0, pc+208 (addr 0x0000ffff91408d08)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408c3c   188  stur x0, [x7, #7]
0xffff91408c40   192  ldr x0, pc+208 (addr 0x0000ffff91408d10)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408c44   196  stur x0, [x7, #15]
0xffff91408c48   200  stur x5, [x7, #23]
0xffff91408c4c   204  add x0, x7, #0x20 (32)
0xffff91408c50   208  ldr x1, pc+200 (addr 0x0000ffff91408d18)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91408c54   212  stur x1, [x0, #-1]
0xffff91408c58   216  stur x4, [x0, #7]
0xffff91408c5c   220  stur x0, [x7, #15]
0xffff91408c60   224  cmp w3, #0x0 (0)
0xffff91408c64   228  b.le #+0x18 (addr 0xffff91408c7c)
0xffff91408c68   232  sub w3, w3, #0x1 (1)
0xffff91408c6c   236  ldr x1, pc+180 (addr 0x0000ffff91408d20)    ;; object: 0x49b04519 <the hole>
0xffff91408c70   240  add x2, x0, #0xf (15)
0xffff91408c74   244  str x1, [x2, w3, sxtw #3]
0xffff91408c78   248  b #-0x18 (addr 0xffff91408c60)
0xffff91408c7c   252  mov x0, x7
0xffff91408c80   256  mov jssp, fp
0xffff91408c84   260  ldp fp, lr, [jssp], #16
0xffff91408c88   264  add jssp, jssp, #0x10 (16)
0xffff91408c8c   268  ret
0xffff91408c90   272  ldur x16, [x3, #-1]
0xffff91408c94   276  ldr x17, [x26, #120]
0xffff91408c98   280  cmp x16, x17
0xffff91408c9c   284  b.ne #+0xb4 (addr 0xffff91408d50)
0xffff91408ca0   288  ldur d29, [x3, #7]
0xffff91408ca4   292  fcvtzs w5, d29
0xffff91408ca8   296  scvtf d0, w5
0xffff91408cac   300  fcmp d29, d0
0xffff91408cb0   304  b.ne #+0xa0 (addr 0xffff91408d50)
0xffff91408cb4   308  b #-0xf8 (addr 0xffff91408bbc)
0xffff91408cb8   312  movz x7, #0x0
0xffff91408cbc   316  mov x16, lr
0xffff91408cc0   320  ldr x17, pc+104 (addr 0x0000ffff91408d28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91408cc4   324  blr x17
0xffff91408cc8   328  lsl x0, x0, #32
0xffff91408ccc   332  movz x10, #0x0
0xffff91408cd0   336  sub csp, jssp, #0x10 (16)
0xffff91408cd4   340  stp x10, x0, [jssp, #-16]!
0xffff91408cd8   344  movz x0, #0x2
0xffff91408cdc   348  movz x1, #0x5b88
0xffff91408ce0   352  movk x1, #0xe2, lsl #16
0xffff91408ce4   356  ldr x16, pc+76 (addr 0x0000ffff91408d30)    ;; code: STUB, CEntryStub, minor: 5
0xffff91408ce8   360  blr x16
0xffff91408cec   364  str x0, [jssp, #56]
0xffff91408cf0   368  ldr x16, pc+72 (addr 0x0000ffff91408d38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91408cf4   372  blr x16
0xffff91408cf8   376  b #-0xdc (addr 0xffff91408c1c)
0xffff91408cfc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff91408d00   384  d63f03e0       constant
0xffff91408d04   388  d503201f       constant
0xffff91408d08   392  49b04201       constant
0xffff91408d0c   396  00000000       constant
0xffff91408d10   400  49b04201       constant
0xffff91408d14   404  00000000       constant
0xffff91408d18   408  36404259       constant
0xffff91408d1c   412  00000000       constant
0xffff91408d20   416  49b04519       constant
0xffff91408d24   420  00000000       constant
0xffff91408d28   424  91406820       constant
0xffff91408d2c   428  0000ffff       constant
0xffff91408d30   432  91406260       constant
0xffff91408d34   436  0000ffff       constant
0xffff91408d38   440  914068e0       constant
0xffff91408d3c   444  0000ffff       constant
0xffff91408d40   448  movz x16, #0x0
0xffff91408d44   452  bl #+0x14 (addr 0xffff91408d58)
0xffff91408d48   456  movz x16, #0x8
0xffff91408d4c   460  bl #+0xc (addr 0xffff91408d58)
0xffff91408d50   464  movz x16, #0x10
0xffff91408d54   468  bl #+0x4 (addr 0xffff91408d58)
0xffff91408d58   472  ldr x17, pc+24 (addr 0x0000ffff91408d70)    ;; lazy deoptimization bailout 0
0xffff91408d5c   476  add x17, x17, x16
0xffff91408d60   480  br x17
0xffff91408d64   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91408d68   488  d63f03e0       constant
0xffff91408d6c   492  d503201f       constant
0xffff91408d70   496  91206000       constant
0xffff91408d74   500  0000ffff       constant


Safepoints (size = 21)
0xffff91408cec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff91408c38  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408c40  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408c50  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91408c6c  embedded object  (0x49b04519 <the hole>)
0xffff91408cc0  code target (STUB)  (0xffff91406820)
0xffff91408ce4  code target (STUB)  (0xffff91406260)
0xffff91408cf0  code target (STUB)  (0xffff914068e0)
0xffff91408cfc  constant pool (size 68)
0xffff91408d58  runtime entry
0xffff91408d64  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_HOLEY_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 525)
0xffff91408b80     0  movz x16, #0xa00000000
0xffff91408b84     4  sub csp, jssp, #0x10 (16)
0xffff91408b88     8  stp fp, lr, [jssp, #-16]!
0xffff91408b8c    12  mov fp, jssp
0xffff91408b90    16  sub csp, jssp, #0x8 (8)
0xffff91408b94    20  sub jssp, jssp, #0x8 (8)
0xffff91408b98    24  stur x16, [fp, #-8]
0xffff91408b9c    28  ldr x3, [fp]
0xffff91408ba0    32  ldur x4, [x3, #-8]
0xffff91408ba4    36  movz x16, #0xe00000000
0xffff91408ba8    40  cmp x4, x16
0xffff91408bac    44  csel x4, fp, x3, ne
0xffff91408bb0    48  ldr x3, [x4, #16]
0xffff91408bb4    52  tbnz w3, #0, #+0xdc (addr 0xffff91408c90)
0xffff91408bb8    56  asr x5, x3, #32
0xffff91408bbc    60  movz w16, #0x257f
0xffff91408bc0    64  cmp w5, w16, lsl #3
0xffff91408bc4    68  b.hs #+0x17c (addr 0xffff91408d40)
0xffff91408bc8    72  cbz w5, #+0xc (addr 0xffff91408bd4)
0xffff91408bcc    76  mov x3, x5
0xffff91408bd0    80  b #+0xc (addr 0xffff91408bdc)
0xffff91408bd4    84  movz x3, #0x4
0xffff91408bd8    88  movz x5, #0x0
0xffff91408bdc    92  lsl x4, x3, #32
0xffff91408be0    96  lsl x5, x5, #32
0xffff91408be4   100  lsl w6, w3, #3
0xffff91408be8   104  add w6, w6, #0x10 (16)
0xffff91408bec   108  cmp w6, #0x96000 (614400)
0xffff91408bf0   112  b.hs #+0x158 (addr 0xffff91408d48)
0xffff91408bf4   116  add w0, w6, #0x20 (32)
0xffff91408bf8   120  sxtw x0, w0
0xffff91408bfc   124  movz x2, #0xf2c0
0xffff91408c00   128  movk x2, #0x4117, lsl #16
0xffff91408c04   132  ldp x7, x16, [x2]
0xffff91408c08   136  adds x6, x7, x0
0xffff91408c0c   140  ccmp x6, x16, #nzCv, lo
0xffff91408c10   144  b.hi #+0xa8 (addr 0xffff91408cb8)
0xffff91408c14   148  str x6, [x2]
0xffff91408c18   152  orr x7, x7, #0x1
0xffff91408c1c   156  movz w0, #0x0
0xffff91408c20   160  stur x0, [x7, #31]
0xffff91408c24   164  ldur x0, [x1, #39]
0xffff91408c28   168  ldur x0, [x0, #39]
0xffff91408c2c   172  movz x16, #0x17f
0xffff91408c30   176  ldr x0, [x0, x16]
0xffff91408c34   180  stur x0, [x7, #-1]
0xffff91408c38   184  ldr x0, pc+208 (addr 0x0000ffff91408d08)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408c3c   188  stur x0, [x7, #7]
0xffff91408c40   192  ldr x0, pc+208 (addr 0x0000ffff91408d10)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408c44   196  stur x0, [x7, #15]
0xffff91408c48   200  stur x5, [x7, #23]
0xffff91408c4c   204  add x0, x7, #0x20 (32)
0xffff91408c50   208  ldr x1, pc+200 (addr 0x0000ffff91408d18)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91408c54   212  stur x1, [x0, #-1]
0xffff91408c58   216  stur x4, [x0, #7]
0xffff91408c5c   220  stur x0, [x7, #15]
0xffff91408c60   224  cmp w3, #0x0 (0)
0xffff91408c64   228  b.le #+0x18 (addr 0xffff91408c7c)
0xffff91408c68   232  sub w3, w3, #0x1 (1)
0xffff91408c6c   236  ldr x1, pc+180 (addr 0x0000ffff91408d20)    ;; object: 0x49b04519 <the hole>
0xffff91408c70   240  add x2, x0, #0xf (15)
0xffff91408c74   244  str x1, [x2, w3, sxtw #3]
0xffff91408c78   248  b #-0x18 (addr 0xffff91408c60)
0xffff91408c7c   252  mov x0, x7
0xffff91408c80   256  mov jssp, fp
0xffff91408c84   260  ldp fp, lr, [jssp], #16
0xffff91408c88   264  add jssp, jssp, #0x10 (16)
0xffff91408c8c   268  ret
0xffff91408c90   272  ldur x16, [x3, #-1]
0xffff91408c94   276  ldr x17, [x26, #120]
0xffff91408c98   280  cmp x16, x17
0xffff91408c9c   284  b.ne #+0xb4 (addr 0xffff91408d50)
0xffff91408ca0   288  ldur d29, [x3, #7]
0xffff91408ca4   292  fcvtzs w5, d29
0xffff91408ca8   296  scvtf d0, w5
0xffff91408cac   300  fcmp d29, d0
0xffff91408cb0   304  b.ne #+0xa0 (addr 0xffff91408d50)
0xffff91408cb4   308  b #-0xf8 (addr 0xffff91408bbc)
0xffff91408cb8   312  movz x7, #0x0
0xffff91408cbc   316  mov x16, lr
0xffff91408cc0   320  ldr x17, pc+104 (addr 0x0000ffff91408d28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91408cc4   324  blr x17
0xffff91408cc8   328  lsl x0, x0, #32
0xffff91408ccc   332  movz x10, #0x0
0xffff91408cd0   336  sub csp, jssp, #0x10 (16)
0xffff91408cd4   340  stp x10, x0, [jssp, #-16]!
0xffff91408cd8   344  movz x0, #0x2
0xffff91408cdc   348  movz x1, #0x5b88
0xffff91408ce0   352  movk x1, #0xe2, lsl #16
0xffff91408ce4   356  ldr x16, pc+76 (addr 0x0000ffff91408d30)    ;; code: STUB, CEntryStub, minor: 5
0xffff91408ce8   360  blr x16
0xffff91408cec   364  str x0, [jssp, #56]
0xffff91408cf0   368  ldr x16, pc+72 (addr 0x0000ffff91408d38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91408cf4   372  blr x16
0xffff91408cf8   376  b #-0xdc (addr 0xffff91408c1c)
0xffff91408cfc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff91408d00   384  d63f03e0       constant
0xffff91408d04   388  d503201f       constant
0xffff91408d08   392  49b04201       constant
0xffff91408d0c   396  00000000       constant
0xffff91408d10   400  49b04201       constant
0xffff91408d14   404  00000000       constant
0xffff91408d18   408  36404259       constant
0xffff91408d1c   412  00000000       constant
0xffff91408d20   416  49b04519       constant
0xffff91408d24   420  00000000       constant
0xffff91408d28   424  91406820       constant
0xffff91408d2c   428  0000ffff       constant
0xffff91408d30   432  91406260       constant
0xffff91408d34   436  0000ffff       constant
0xffff91408d38   440  914068e0       constant
0xffff91408d3c   444  0000ffff       constant
0xffff91408d40   448  movz x16, #0x0
0xffff91408d44   452  bl #+0x14 (addr 0xffff91408d58)
0xffff91408d48   456  movz x16, #0x8
0xffff91408d4c   460  bl #+0xc (addr 0xffff91408d58)
0xffff91408d50   464  movz x16, #0x10
0xffff91408d54   468  bl #+0x4 (addr 0xffff91408d58)
0xffff91408d58   472  ldr x17, pc+24 (addr 0x0000ffff91408d70)    ;; lazy deoptimization bailout 0
0xffff91408d5c   476  add x17, x17, x16
0xffff91408d60   480  br x17
0xffff91408d64   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91408d68   488  d63f03e0       constant
0xffff91408d6c   492  d503201f       constant
0xffff91408d70   496  91206000       constant
0xffff91408d74   500  0000ffff       constant


Safepoints (size = 21)
0xffff91408cec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff91408c38  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408c40  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408c50  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91408c6c  embedded object  (0x49b04519 <the hole>)
0xffff91408cc0  code target (STUB)  (0xffff91406820)
0xffff91408ce4  code target (STUB)  (0xffff91406260)
0xffff91408cf0  code target (STUB)  (0xffff914068e0)
0xffff91408cfc  constant pool (size 68)
0xffff91408d58  runtime entry
0xffff91408d64  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 525)
0xffff91408e00     0  movz x16, #0xa00000000
0xffff91408e04     4  sub csp, jssp, #0x10 (16)
0xffff91408e08     8  stp fp, lr, [jssp, #-16]!
0xffff91408e0c    12  mov fp, jssp
0xffff91408e10    16  sub csp, jssp, #0x8 (8)
0xffff91408e14    20  sub jssp, jssp, #0x8 (8)
0xffff91408e18    24  stur x16, [fp, #-8]
0xffff91408e1c    28  ldr x3, [fp]
0xffff91408e20    32  ldur x4, [x3, #-8]
0xffff91408e24    36  movz x16, #0xe00000000
0xffff91408e28    40  cmp x4, x16
0xffff91408e2c    44  csel x4, fp, x3, ne
0xffff91408e30    48  ldr x3, [x4, #16]
0xffff91408e34    52  tbnz w3, #0, #+0xdc (addr 0xffff91408f10)
0xffff91408e38    56  asr x5, x3, #32
0xffff91408e3c    60  movz w16, #0x257f
0xffff91408e40    64  cmp w5, w16, lsl #3
0xffff91408e44    68  b.hs #+0x17c (addr 0xffff91408fc0)
0xffff91408e48    72  cbz w5, #+0xc (addr 0xffff91408e54)
0xffff91408e4c    76  mov x3, x5
0xffff91408e50    80  b #+0xc (addr 0xffff91408e5c)
0xffff91408e54    84  movz x3, #0x4
0xffff91408e58    88  movz x5, #0x0
0xffff91408e5c    92  lsl x4, x3, #32
0xffff91408e60    96  lsl x5, x5, #32
0xffff91408e64   100  lsl w6, w3, #3
0xffff91408e68   104  add w6, w6, #0x10 (16)
0xffff91408e6c   108  cmp w6, #0x96000 (614400)
0xffff91408e70   112  b.hs #+0x158 (addr 0xffff91408fc8)
0xffff91408e74   116  add w0, w6, #0x20 (32)
0xffff91408e78   120  sxtw x0, w0
0xffff91408e7c   124  movz x2, #0xf2c0
0xffff91408e80   128  movk x2, #0x4117, lsl #16
0xffff91408e84   132  ldp x7, x16, [x2]
0xffff91408e88   136  adds x6, x7, x0
0xffff91408e8c   140  ccmp x6, x16, #nzCv, lo
0xffff91408e90   144  b.hi #+0xa8 (addr 0xffff91408f38)
0xffff91408e94   148  str x6, [x2]
0xffff91408e98   152  orr x7, x7, #0x1
0xffff91408e9c   156  movz w0, #0x0
0xffff91408ea0   160  stur x0, [x7, #31]
0xffff91408ea4   164  ldur x0, [x1, #39]
0xffff91408ea8   168  ldur x0, [x0, #39]
0xffff91408eac   172  movz x16, #0x197
0xffff91408eb0   176  ldr x0, [x0, x16]
0xffff91408eb4   180  stur x0, [x7, #-1]
0xffff91408eb8   184  ldr x0, pc+216 (addr 0x0000ffff91408f90)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408ebc   188  stur x0, [x7, #7]
0xffff91408ec0   192  ldr x0, pc+216 (addr 0x0000ffff91408f98)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408ec4   196  stur x0, [x7, #15]
0xffff91408ec8   200  stur x5, [x7, #23]
0xffff91408ecc   204  add x0, x7, #0x20 (32)
0xffff91408ed0   208  ldr x1, pc+208 (addr 0x0000ffff91408fa0)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91408ed4   212  stur x1, [x0, #-1]
0xffff91408ed8   216  stur x4, [x0, #7]
0xffff91408edc   220  stur x0, [x7, #15]
0xffff91408ee0   224  ldr d0, pc+168 (addr 0x0000ffff91408f88)
0xffff91408ee4   228  cmp w3, #0x0 (0)
0xffff91408ee8   232  b.le #+0x14 (addr 0xffff91408efc)
0xffff91408eec   236  sub w3, w3, #0x1 (1)
0xffff91408ef0   240  add x1, x0, #0xf (15)
0xffff91408ef4   244  str d0, [x1, w3, sxtw #3]
0xffff91408ef8   248  b #-0x14 (addr 0xffff91408ee4)
0xffff91408efc   252  mov x0, x7
0xffff91408f00   256  mov jssp, fp
0xffff91408f04   260  ldp fp, lr, [jssp], #16
0xffff91408f08   264  add jssp, jssp, #0x10 (16)
0xffff91408f0c   268  ret
0xffff91408f10   272  ldur x16, [x3, #-1]
0xffff91408f14   276  ldr x17, [x26, #120]
0xffff91408f18   280  cmp x16, x17
0xffff91408f1c   284  b.ne #+0xb4 (addr 0xffff91408fd0)
0xffff91408f20   288  ldur d29, [x3, #7]
0xffff91408f24   292  fcvtzs w5, d29
0xffff91408f28   296  scvtf d0, w5
0xffff91408f2c   300  fcmp d29, d0
0xffff91408f30   304  b.ne #+0xa0 (addr 0xffff91408fd0)
0xffff91408f34   308  b #-0xf8 (addr 0xffff91408e3c)
0xffff91408f38   312  movz x7, #0x0
0xffff91408f3c   316  mov x16, lr
0xffff91408f40   320  ldr x17, pc+104 (addr 0x0000ffff91408fa8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91408f44   324  blr x17
0xffff91408f48   328  lsl x0, x0, #32
0xffff91408f4c   332  movz x10, #0x100000000
0xffff91408f50   336  sub csp, jssp, #0x10 (16)
0xffff91408f54   340  stp x10, x0, [jssp, #-16]!
0xffff91408f58   344  movz x0, #0x2
0xffff91408f5c   348  movz x1, #0x5b88
0xffff91408f60   352  movk x1, #0xe2, lsl #16
0xffff91408f64   356  ldr x16, pc+76 (addr 0x0000ffff91408fb0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91408f68   360  blr x16
0xffff91408f6c   364  str x0, [jssp, #56]
0xffff91408f70   368  ldr x16, pc+72 (addr 0x0000ffff91408fb8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91408f74   372  blr x16
0xffff91408f78   376  b #-0xdc (addr 0xffff91408e9c)
0xffff91408f7c   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff91408f80   384  d63f03e0       constant
0xffff91408f84   388  d503201f       constant
0xffff91408f88   392  fff7ffff       constant
0xffff91408f8c   396  fff7ffff       constant
0xffff91408f90   400  49b04201       constant
0xffff91408f94   404  00000000       constant
0xffff91408f98   408  49b04201       constant
0xffff91408f9c   412  00000000       constant
0xffff91408fa0   416  364052d9       constant
0xffff91408fa4   420  00000000       constant
0xffff91408fa8   424  91406820       constant
0xffff91408fac   428  0000ffff       constant
0xffff91408fb0   432  91406260       constant
0xffff91408fb4   436  0000ffff       constant
0xffff91408fb8   440  914068e0       constant
0xffff91408fbc   444  0000ffff       constant
0xffff91408fc0   448  movz x16, #0x0
0xffff91408fc4   452  bl #+0x14 (addr 0xffff91408fd8)
0xffff91408fc8   456  movz x16, #0x8
0xffff91408fcc   460  bl #+0xc (addr 0xffff91408fd8)
0xffff91408fd0   464  movz x16, #0x10
0xffff91408fd4   468  bl #+0x4 (addr 0xffff91408fd8)
0xffff91408fd8   472  ldr x17, pc+24 (addr 0x0000ffff91408ff0)    ;; lazy deoptimization bailout 0
0xffff91408fdc   476  add x17, x17, x16
0xffff91408fe0   480  br x17
0xffff91408fe4   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91408fe8   488  d63f03e0       constant
0xffff91408fec   492  d503201f       constant
0xffff91408ff0   496  91206000       constant
0xffff91408ff4   500  0000ffff       constant


Safepoints (size = 21)
0xffff91408f6c   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff91408eb8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408ec0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408ed0  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91408f40  code target (STUB)  (0xffff91406820)
0xffff91408f64  code target (STUB)  (0xffff91406260)
0xffff91408f70  code target (STUB)  (0xffff914068e0)
0xffff91408f7c  constant pool (size 68)
0xffff91408fd8  runtime entry
0xffff91408fe4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 525)
0xffff91408e00     0  movz x16, #0xa00000000
0xffff91408e04     4  sub csp, jssp, #0x10 (16)
0xffff91408e08     8  stp fp, lr, [jssp, #-16]!
0xffff91408e0c    12  mov fp, jssp
0xffff91408e10    16  sub csp, jssp, #0x8 (8)
0xffff91408e14    20  sub jssp, jssp, #0x8 (8)
0xffff91408e18    24  stur x16, [fp, #-8]
0xffff91408e1c    28  ldr x3, [fp]
0xffff91408e20    32  ldur x4, [x3, #-8]
0xffff91408e24    36  movz x16, #0xe00000000
0xffff91408e28    40  cmp x4, x16
0xffff91408e2c    44  csel x4, fp, x3, ne
0xffff91408e30    48  ldr x3, [x4, #16]
0xffff91408e34    52  tbnz w3, #0, #+0xdc (addr 0xffff91408f10)
0xffff91408e38    56  asr x5, x3, #32
0xffff91408e3c    60  movz w16, #0x257f
0xffff91408e40    64  cmp w5, w16, lsl #3
0xffff91408e44    68  b.hs #+0x17c (addr 0xffff91408fc0)
0xffff91408e48    72  cbz w5, #+0xc (addr 0xffff91408e54)
0xffff91408e4c    76  mov x3, x5
0xffff91408e50    80  b #+0xc (addr 0xffff91408e5c)
0xffff91408e54    84  movz x3, #0x4
0xffff91408e58    88  movz x5, #0x0
0xffff91408e5c    92  lsl x4, x3, #32
0xffff91408e60    96  lsl x5, x5, #32
0xffff91408e64   100  lsl w6, w3, #3
0xffff91408e68   104  add w6, w6, #0x10 (16)
0xffff91408e6c   108  cmp w6, #0x96000 (614400)
0xffff91408e70   112  b.hs #+0x158 (addr 0xffff91408fc8)
0xffff91408e74   116  add w0, w6, #0x20 (32)
0xffff91408e78   120  sxtw x0, w0
0xffff91408e7c   124  movz x2, #0xf2c0
0xffff91408e80   128  movk x2, #0x4117, lsl #16
0xffff91408e84   132  ldp x7, x16, [x2]
0xffff91408e88   136  adds x6, x7, x0
0xffff91408e8c   140  ccmp x6, x16, #nzCv, lo
0xffff91408e90   144  b.hi #+0xa8 (addr 0xffff91408f38)
0xffff91408e94   148  str x6, [x2]
0xffff91408e98   152  orr x7, x7, #0x1
0xffff91408e9c   156  movz w0, #0x0
0xffff91408ea0   160  stur x0, [x7, #31]
0xffff91408ea4   164  ldur x0, [x1, #39]
0xffff91408ea8   168  ldur x0, [x0, #39]
0xffff91408eac   172  movz x16, #0x197
0xffff91408eb0   176  ldr x0, [x0, x16]
0xffff91408eb4   180  stur x0, [x7, #-1]
0xffff91408eb8   184  ldr x0, pc+216 (addr 0x0000ffff91408f90)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408ebc   188  stur x0, [x7, #7]
0xffff91408ec0   192  ldr x0, pc+216 (addr 0x0000ffff91408f98)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91408ec4   196  stur x0, [x7, #15]
0xffff91408ec8   200  stur x5, [x7, #23]
0xffff91408ecc   204  add x0, x7, #0x20 (32)
0xffff91408ed0   208  ldr x1, pc+208 (addr 0x0000ffff91408fa0)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91408ed4   212  stur x1, [x0, #-1]
0xffff91408ed8   216  stur x4, [x0, #7]
0xffff91408edc   220  stur x0, [x7, #15]
0xffff91408ee0   224  ldr d0, pc+168 (addr 0x0000ffff91408f88)
0xffff91408ee4   228  cmp w3, #0x0 (0)
0xffff91408ee8   232  b.le #+0x14 (addr 0xffff91408efc)
0xffff91408eec   236  sub w3, w3, #0x1 (1)
0xffff91408ef0   240  add x1, x0, #0xf (15)
0xffff91408ef4   244  str d0, [x1, w3, sxtw #3]
0xffff91408ef8   248  b #-0x14 (addr 0xffff91408ee4)
0xffff91408efc   252  mov x0, x7
0xffff91408f00   256  mov jssp, fp
0xffff91408f04   260  ldp fp, lr, [jssp], #16
0xffff91408f08   264  add jssp, jssp, #0x10 (16)
0xffff91408f0c   268  ret
0xffff91408f10   272  ldur x16, [x3, #-1]
0xffff91408f14   276  ldr x17, [x26, #120]
0xffff91408f18   280  cmp x16, x17
0xffff91408f1c   284  b.ne #+0xb4 (addr 0xffff91408fd0)
0xffff91408f20   288  ldur d29, [x3, #7]
0xffff91408f24   292  fcvtzs w5, d29
0xffff91408f28   296  scvtf d0, w5
0xffff91408f2c   300  fcmp d29, d0
0xffff91408f30   304  b.ne #+0xa0 (addr 0xffff91408fd0)
0xffff91408f34   308  b #-0xf8 (addr 0xffff91408e3c)
0xffff91408f38   312  movz x7, #0x0
0xffff91408f3c   316  mov x16, lr
0xffff91408f40   320  ldr x17, pc+104 (addr 0x0000ffff91408fa8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91408f44   324  blr x17
0xffff91408f48   328  lsl x0, x0, #32
0xffff91408f4c   332  movz x10, #0x100000000
0xffff91408f50   336  sub csp, jssp, #0x10 (16)
0xffff91408f54   340  stp x10, x0, [jssp, #-16]!
0xffff91408f58   344  movz x0, #0x2
0xffff91408f5c   348  movz x1, #0x5b88
0xffff91408f60   352  movk x1, #0xe2, lsl #16
0xffff91408f64   356  ldr x16, pc+76 (addr 0x0000ffff91408fb0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91408f68   360  blr x16
0xffff91408f6c   364  str x0, [jssp, #56]
0xffff91408f70   368  ldr x16, pc+72 (addr 0x0000ffff91408fb8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91408f74   372  blr x16
0xffff91408f78   376  b #-0xdc (addr 0xffff91408e9c)
0xffff91408f7c   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff91408f80   384  d63f03e0       constant
0xffff91408f84   388  d503201f       constant
0xffff91408f88   392  fff7ffff       constant
0xffff91408f8c   396  fff7ffff       constant
0xffff91408f90   400  49b04201       constant
0xffff91408f94   404  00000000       constant
0xffff91408f98   408  49b04201       constant
0xffff91408f9c   412  00000000       constant
0xffff91408fa0   416  364052d9       constant
0xffff91408fa4   420  00000000       constant
0xffff91408fa8   424  91406820       constant
0xffff91408fac   428  0000ffff       constant
0xffff91408fb0   432  91406260       constant
0xffff91408fb4   436  0000ffff       constant
0xffff91408fb8   440  914068e0       constant
0xffff91408fbc   444  0000ffff       constant
0xffff91408fc0   448  movz x16, #0x0
0xffff91408fc4   452  bl #+0x14 (addr 0xffff91408fd8)
0xffff91408fc8   456  movz x16, #0x8
0xffff91408fcc   460  bl #+0xc (addr 0xffff91408fd8)
0xffff91408fd0   464  movz x16, #0x10
0xffff91408fd4   468  bl #+0x4 (addr 0xffff91408fd8)
0xffff91408fd8   472  ldr x17, pc+24 (addr 0x0000ffff91408ff0)    ;; lazy deoptimization bailout 0
0xffff91408fdc   476  add x17, x17, x16
0xffff91408fe0   480  br x17
0xffff91408fe4   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91408fe8   488  d63f03e0       constant
0xffff91408fec   492  d503201f       constant
0xffff91408ff0   496  91206000       constant
0xffff91408ff4   500  0000ffff       constant


Safepoints (size = 21)
0xffff91408f6c   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff91408eb8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408ec0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91408ed0  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91408f40  code target (STUB)  (0xffff91406820)
0xffff91408f64  code target (STUB)  (0xffff91406260)
0xffff91408f70  code target (STUB)  (0xffff914068e0)
0xffff91408f7c  constant pool (size 68)
0xffff91408fd8  runtime entry
0xffff91408fe4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 525)
0xffff91409080     0  movz x16, #0xa00000000
0xffff91409084     4  sub csp, jssp, #0x10 (16)
0xffff91409088     8  stp fp, lr, [jssp, #-16]!
0xffff9140908c    12  mov fp, jssp
0xffff91409090    16  sub csp, jssp, #0x8 (8)
0xffff91409094    20  sub jssp, jssp, #0x8 (8)
0xffff91409098    24  stur x16, [fp, #-8]
0xffff9140909c    28  ldr x3, [fp]
0xffff914090a0    32  ldur x4, [x3, #-8]
0xffff914090a4    36  movz x16, #0xe00000000
0xffff914090a8    40  cmp x4, x16
0xffff914090ac    44  csel x4, fp, x3, ne
0xffff914090b0    48  ldr x3, [x4, #16]
0xffff914090b4    52  tbnz w3, #0, #+0xdc (addr 0xffff91409190)
0xffff914090b8    56  asr x5, x3, #32
0xffff914090bc    60  movz w16, #0x257f
0xffff914090c0    64  cmp w5, w16, lsl #3
0xffff914090c4    68  b.hs #+0x17c (addr 0xffff91409240)
0xffff914090c8    72  cbz w5, #+0xc (addr 0xffff914090d4)
0xffff914090cc    76  mov x3, x5
0xffff914090d0    80  b #+0xc (addr 0xffff914090dc)
0xffff914090d4    84  movz x3, #0x4
0xffff914090d8    88  movz x5, #0x0
0xffff914090dc    92  lsl x4, x3, #32
0xffff914090e0    96  lsl x5, x5, #32
0xffff914090e4   100  lsl w6, w3, #3
0xffff914090e8   104  add w6, w6, #0x10 (16)
0xffff914090ec   108  cmp w6, #0x96000 (614400)
0xffff914090f0   112  b.hs #+0x158 (addr 0xffff91409248)
0xffff914090f4   116  add w0, w6, #0x20 (32)
0xffff914090f8   120  sxtw x0, w0
0xffff914090fc   124  movz x2, #0xf2c0
0xffff91409100   128  movk x2, #0x4117, lsl #16
0xffff91409104   132  ldp x7, x16, [x2]
0xffff91409108   136  adds x6, x7, x0
0xffff9140910c   140  ccmp x6, x16, #nzCv, lo
0xffff91409110   144  b.hi #+0xa8 (addr 0xffff914091b8)
0xffff91409114   148  str x6, [x2]
0xffff91409118   152  orr x7, x7, #0x1
0xffff9140911c   156  movz w0, #0x0
0xffff91409120   160  stur x0, [x7, #31]
0xffff91409124   164  ldur x0, [x1, #39]
0xffff91409128   168  ldur x0, [x0, #39]
0xffff9140912c   172  movz x16, #0x19f
0xffff91409130   176  ldr x0, [x0, x16]
0xffff91409134   180  stur x0, [x7, #-1]
0xffff91409138   184  ldr x0, pc+216 (addr 0x0000ffff91409210)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140913c   188  stur x0, [x7, #7]
0xffff91409140   192  ldr x0, pc+216 (addr 0x0000ffff91409218)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91409144   196  stur x0, [x7, #15]
0xffff91409148   200  stur x5, [x7, #23]
0xffff9140914c   204  add x0, x7, #0x20 (32)
0xffff91409150   208  ldr x1, pc+208 (addr 0x0000ffff91409220)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91409154   212  stur x1, [x0, #-1]
0xffff91409158   216  stur x4, [x0, #7]
0xffff9140915c   220  stur x0, [x7, #15]
0xffff91409160   224  ldr d0, pc+168 (addr 0x0000ffff91409208)
0xffff91409164   228  cmp w3, #0x0 (0)
0xffff91409168   232  b.le #+0x14 (addr 0xffff9140917c)
0xffff9140916c   236  sub w3, w3, #0x1 (1)
0xffff91409170   240  add x1, x0, #0xf (15)
0xffff91409174   244  str d0, [x1, w3, sxtw #3]
0xffff91409178   248  b #-0x14 (addr 0xffff91409164)
0xffff9140917c   252  mov x0, x7
0xffff91409180   256  mov jssp, fp
0xffff91409184   260  ldp fp, lr, [jssp], #16
0xffff91409188   264  add jssp, jssp, #0x10 (16)
0xffff9140918c   268  ret
0xffff91409190   272  ldur x16, [x3, #-1]
0xffff91409194   276  ldr x17, [x26, #120]
0xffff91409198   280  cmp x16, x17
0xffff9140919c   284  b.ne #+0xb4 (addr 0xffff91409250)
0xffff914091a0   288  ldur d29, [x3, #7]
0xffff914091a4   292  fcvtzs w5, d29
0xffff914091a8   296  scvtf d0, w5
0xffff914091ac   300  fcmp d29, d0
0xffff914091b0   304  b.ne #+0xa0 (addr 0xffff91409250)
0xffff914091b4   308  b #-0xf8 (addr 0xffff914090bc)
0xffff914091b8   312  movz x7, #0x0
0xffff914091bc   316  mov x16, lr
0xffff914091c0   320  ldr x17, pc+104 (addr 0x0000ffff91409228)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914091c4   324  blr x17
0xffff914091c8   328  lsl x0, x0, #32
0xffff914091cc   332  movz x10, #0x100000000
0xffff914091d0   336  sub csp, jssp, #0x10 (16)
0xffff914091d4   340  stp x10, x0, [jssp, #-16]!
0xffff914091d8   344  movz x0, #0x2
0xffff914091dc   348  movz x1, #0x5b88
0xffff914091e0   352  movk x1, #0xe2, lsl #16
0xffff914091e4   356  ldr x16, pc+76 (addr 0x0000ffff91409230)    ;; code: STUB, CEntryStub, minor: 5
0xffff914091e8   360  blr x16
0xffff914091ec   364  str x0, [jssp, #56]
0xffff914091f0   368  ldr x16, pc+72 (addr 0x0000ffff91409238)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914091f4   372  blr x16
0xffff914091f8   376  b #-0xdc (addr 0xffff9140911c)
0xffff914091fc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff91409200   384  d63f03e0       constant
0xffff91409204   388  d503201f       constant
0xffff91409208   392  fff7ffff       constant
0xffff9140920c   396  fff7ffff       constant
0xffff91409210   400  49b04201       constant
0xffff91409214   404  00000000       constant
0xffff91409218   408  49b04201       constant
0xffff9140921c   412  00000000       constant
0xffff91409220   416  364052d9       constant
0xffff91409224   420  00000000       constant
0xffff91409228   424  91406820       constant
0xffff9140922c   428  0000ffff       constant
0xffff91409230   432  91406260       constant
0xffff91409234   436  0000ffff       constant
0xffff91409238   440  914068e0       constant
0xffff9140923c   444  0000ffff       constant
0xffff91409240   448  movz x16, #0x0
0xffff91409244   452  bl #+0x14 (addr 0xffff91409258)
0xffff91409248   456  movz x16, #0x8
0xffff9140924c   460  bl #+0xc (addr 0xffff91409258)
0xffff91409250   464  movz x16, #0x10
0xffff91409254   468  bl #+0x4 (addr 0xffff91409258)
0xffff91409258   472  ldr x17, pc+24 (addr 0x0000ffff91409270)    ;; lazy deoptimization bailout 0
0xffff9140925c   476  add x17, x17, x16
0xffff91409260   480  br x17
0xffff91409264   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91409268   488  d63f03e0       constant
0xffff9140926c   492  d503201f       constant
0xffff91409270   496  91206000       constant
0xffff91409274   500  0000ffff       constant


Safepoints (size = 21)
0xffff914091ec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff91409138  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91409140  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91409150  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914091c0  code target (STUB)  (0xffff91406820)
0xffff914091e4  code target (STUB)  (0xffff91406260)
0xffff914091f0  code target (STUB)  (0xffff914068e0)
0xffff914091fc  constant pool (size 68)
0xffff91409258  runtime entry
0xffff91409264  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_HOLEY_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 525)
0xffff91409080     0  movz x16, #0xa00000000
0xffff91409084     4  sub csp, jssp, #0x10 (16)
0xffff91409088     8  stp fp, lr, [jssp, #-16]!
0xffff9140908c    12  mov fp, jssp
0xffff91409090    16  sub csp, jssp, #0x8 (8)
0xffff91409094    20  sub jssp, jssp, #0x8 (8)
0xffff91409098    24  stur x16, [fp, #-8]
0xffff9140909c    28  ldr x3, [fp]
0xffff914090a0    32  ldur x4, [x3, #-8]
0xffff914090a4    36  movz x16, #0xe00000000
0xffff914090a8    40  cmp x4, x16
0xffff914090ac    44  csel x4, fp, x3, ne
0xffff914090b0    48  ldr x3, [x4, #16]
0xffff914090b4    52  tbnz w3, #0, #+0xdc (addr 0xffff91409190)
0xffff914090b8    56  asr x5, x3, #32
0xffff914090bc    60  movz w16, #0x257f
0xffff914090c0    64  cmp w5, w16, lsl #3
0xffff914090c4    68  b.hs #+0x17c (addr 0xffff91409240)
0xffff914090c8    72  cbz w5, #+0xc (addr 0xffff914090d4)
0xffff914090cc    76  mov x3, x5
0xffff914090d0    80  b #+0xc (addr 0xffff914090dc)
0xffff914090d4    84  movz x3, #0x4
0xffff914090d8    88  movz x5, #0x0
0xffff914090dc    92  lsl x4, x3, #32
0xffff914090e0    96  lsl x5, x5, #32
0xffff914090e4   100  lsl w6, w3, #3
0xffff914090e8   104  add w6, w6, #0x10 (16)
0xffff914090ec   108  cmp w6, #0x96000 (614400)
0xffff914090f0   112  b.hs #+0x158 (addr 0xffff91409248)
0xffff914090f4   116  add w0, w6, #0x20 (32)
0xffff914090f8   120  sxtw x0, w0
0xffff914090fc   124  movz x2, #0xf2c0
0xffff91409100   128  movk x2, #0x4117, lsl #16
0xffff91409104   132  ldp x7, x16, [x2]
0xffff91409108   136  adds x6, x7, x0
0xffff9140910c   140  ccmp x6, x16, #nzCv, lo
0xffff91409110   144  b.hi #+0xa8 (addr 0xffff914091b8)
0xffff91409114   148  str x6, [x2]
0xffff91409118   152  orr x7, x7, #0x1
0xffff9140911c   156  movz w0, #0x0
0xffff91409120   160  stur x0, [x7, #31]
0xffff91409124   164  ldur x0, [x1, #39]
0xffff91409128   168  ldur x0, [x0, #39]
0xffff9140912c   172  movz x16, #0x19f
0xffff91409130   176  ldr x0, [x0, x16]
0xffff91409134   180  stur x0, [x7, #-1]
0xffff91409138   184  ldr x0, pc+216 (addr 0x0000ffff91409210)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140913c   188  stur x0, [x7, #7]
0xffff91409140   192  ldr x0, pc+216 (addr 0x0000ffff91409218)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91409144   196  stur x0, [x7, #15]
0xffff91409148   200  stur x5, [x7, #23]
0xffff9140914c   204  add x0, x7, #0x20 (32)
0xffff91409150   208  ldr x1, pc+208 (addr 0x0000ffff91409220)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91409154   212  stur x1, [x0, #-1]
0xffff91409158   216  stur x4, [x0, #7]
0xffff9140915c   220  stur x0, [x7, #15]
0xffff91409160   224  ldr d0, pc+168 (addr 0x0000ffff91409208)
0xffff91409164   228  cmp w3, #0x0 (0)
0xffff91409168   232  b.le #+0x14 (addr 0xffff9140917c)
0xffff9140916c   236  sub w3, w3, #0x1 (1)
0xffff91409170   240  add x1, x0, #0xf (15)
0xffff91409174   244  str d0, [x1, w3, sxtw #3]
0xffff91409178   248  b #-0x14 (addr 0xffff91409164)
0xffff9140917c   252  mov x0, x7
0xffff91409180   256  mov jssp, fp
0xffff91409184   260  ldp fp, lr, [jssp], #16
0xffff91409188   264  add jssp, jssp, #0x10 (16)
0xffff9140918c   268  ret
0xffff91409190   272  ldur x16, [x3, #-1]
0xffff91409194   276  ldr x17, [x26, #120]
0xffff91409198   280  cmp x16, x17
0xffff9140919c   284  b.ne #+0xb4 (addr 0xffff91409250)
0xffff914091a0   288  ldur d29, [x3, #7]
0xffff914091a4   292  fcvtzs w5, d29
0xffff914091a8   296  scvtf d0, w5
0xffff914091ac   300  fcmp d29, d0
0xffff914091b0   304  b.ne #+0xa0 (addr 0xffff91409250)
0xffff914091b4   308  b #-0xf8 (addr 0xffff914090bc)
0xffff914091b8   312  movz x7, #0x0
0xffff914091bc   316  mov x16, lr
0xffff914091c0   320  ldr x17, pc+104 (addr 0x0000ffff91409228)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914091c4   324  blr x17
0xffff914091c8   328  lsl x0, x0, #32
0xffff914091cc   332  movz x10, #0x100000000
0xffff914091d0   336  sub csp, jssp, #0x10 (16)
0xffff914091d4   340  stp x10, x0, [jssp, #-16]!
0xffff914091d8   344  movz x0, #0x2
0xffff914091dc   348  movz x1, #0x5b88
0xffff914091e0   352  movk x1, #0xe2, lsl #16
0xffff914091e4   356  ldr x16, pc+76 (addr 0x0000ffff91409230)    ;; code: STUB, CEntryStub, minor: 5
0xffff914091e8   360  blr x16
0xffff914091ec   364  str x0, [jssp, #56]
0xffff914091f0   368  ldr x16, pc+72 (addr 0x0000ffff91409238)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914091f4   372  blr x16
0xffff914091f8   376  b #-0xdc (addr 0xffff9140911c)
0xffff914091fc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff91409200   384  d63f03e0       constant
0xffff91409204   388  d503201f       constant
0xffff91409208   392  fff7ffff       constant
0xffff9140920c   396  fff7ffff       constant
0xffff91409210   400  49b04201       constant
0xffff91409214   404  00000000       constant
0xffff91409218   408  49b04201       constant
0xffff9140921c   412  00000000       constant
0xffff91409220   416  364052d9       constant
0xffff91409224   420  00000000       constant
0xffff91409228   424  91406820       constant
0xffff9140922c   428  0000ffff       constant
0xffff91409230   432  91406260       constant
0xffff91409234   436  0000ffff       constant
0xffff91409238   440  914068e0       constant
0xffff9140923c   444  0000ffff       constant
0xffff91409240   448  movz x16, #0x0
0xffff91409244   452  bl #+0x14 (addr 0xffff91409258)
0xffff91409248   456  movz x16, #0x8
0xffff9140924c   460  bl #+0xc (addr 0xffff91409258)
0xffff91409250   464  movz x16, #0x10
0xffff91409254   468  bl #+0x4 (addr 0xffff91409258)
0xffff91409258   472  ldr x17, pc+24 (addr 0x0000ffff91409270)    ;; lazy deoptimization bailout 0
0xffff9140925c   476  add x17, x17, x16
0xffff91409260   480  br x17
0xffff91409264   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91409268   488  d63f03e0       constant
0xffff9140926c   492  d503201f       constant
0xffff91409270   496  91206000       constant
0xffff91409274   500  0000ffff       constant


Safepoints (size = 21)
0xffff914091ec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff91409138  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91409140  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91409150  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914091c0  code target (STUB)  (0xffff91406820)
0xffff914091e4  code target (STUB)  (0xffff91406260)
0xffff914091f0  code target (STUB)  (0xffff914068e0)
0xffff914091fc  constant pool (size 68)
0xffff91409258  runtime entry
0xffff91409264  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 525)
0xffff91409300     0  movz x16, #0xa00000000
0xffff91409304     4  sub csp, jssp, #0x10 (16)
0xffff91409308     8  stp fp, lr, [jssp, #-16]!
0xffff9140930c    12  mov fp, jssp
0xffff91409310    16  sub csp, jssp, #0x8 (8)
0xffff91409314    20  sub jssp, jssp, #0x8 (8)
0xffff91409318    24  stur x16, [fp, #-8]
0xffff9140931c    28  ldr x3, [fp]
0xffff91409320    32  ldur x4, [x3, #-8]
0xffff91409324    36  movz x16, #0xe00000000
0xffff91409328    40  cmp x4, x16
0xffff9140932c    44  csel x4, fp, x3, ne
0xffff91409330    48  ldr x3, [x4, #16]
0xffff91409334    52  tbnz w3, #0, #+0xdc (addr 0xffff91409410)
0xffff91409338    56  asr x5, x3, #32
0xffff9140933c    60  movz w16, #0x257f
0xffff91409340    64  cmp w5, w16, lsl #3
0xffff91409344    68  b.hs #+0x17c (addr 0xffff914094c0)
0xffff91409348    72  cbz w5, #+0xc (addr 0xffff91409354)
0xffff9140934c    76  mov x3, x5
0xffff91409350    80  b #+0xc (addr 0xffff9140935c)
0xffff91409354    84  movz x3, #0x4
0xffff91409358    88  movz x5, #0x0
0xffff9140935c    92  lsl x4, x3, #32
0xffff91409360    96  lsl x5, x5, #32
0xffff91409364   100  lsl w6, w3, #3
0xffff91409368   104  add w6, w6, #0x10 (16)
0xffff9140936c   108  cmp w6, #0x96000 (614400)
0xffff91409370   112  b.hs #+0x158 (addr 0xffff914094c8)
0xffff91409374   116  add w0, w6, #0x20 (32)
0xffff91409378   120  sxtw x0, w0
0xffff9140937c   124  movz x2, #0xf2c0
0xffff91409380   128  movk x2, #0x4117, lsl #16
0xffff91409384   132  ldp x7, x16, [x2]
0xffff91409388   136  adds x6, x7, x0
0xffff9140938c   140  ccmp x6, x16, #nzCv, lo
0xffff91409390   144  b.hi #+0xa8 (addr 0xffff91409438)
0xffff91409394   148  str x6, [x2]
0xffff91409398   152  orr x7, x7, #0x1
0xffff9140939c   156  movz w0, #0x0
0xffff914093a0   160  stur x0, [x7, #31]
0xffff914093a4   164  ldur x0, [x1, #39]
0xffff914093a8   168  ldur x0, [x0, #39]
0xffff914093ac   172  movz x16, #0x187
0xffff914093b0   176  ldr x0, [x0, x16]
0xffff914093b4   180  stur x0, [x7, #-1]
0xffff914093b8   184  ldr x0, pc+208 (addr 0x0000ffff91409488)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914093bc   188  stur x0, [x7, #7]
0xffff914093c0   192  ldr x0, pc+208 (addr 0x0000ffff91409490)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914093c4   196  stur x0, [x7, #15]
0xffff914093c8   200  stur x5, [x7, #23]
0xffff914093cc   204  add x0, x7, #0x20 (32)
0xffff914093d0   208  ldr x1, pc+200 (addr 0x0000ffff91409498)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914093d4   212  stur x1, [x0, #-1]
0xffff914093d8   216  stur x4, [x0, #7]
0xffff914093dc   220  stur x0, [x7, #15]
0xffff914093e0   224  cmp w3, #0x0 (0)
0xffff914093e4   228  b.le #+0x18 (addr 0xffff914093fc)
0xffff914093e8   232  sub w3, w3, #0x1 (1)
0xffff914093ec   236  ldr x1, pc+180 (addr 0x0000ffff914094a0)    ;; object: 0x49b04519 <the hole>
0xffff914093f0   240  add x2, x0, #0xf (15)
0xffff914093f4   244  str x1, [x2, w3, sxtw #3]
0xffff914093f8   248  b #-0x18 (addr 0xffff914093e0)
0xffff914093fc   252  mov x0, x7
0xffff91409400   256  mov jssp, fp
0xffff91409404   260  ldp fp, lr, [jssp], #16
0xffff91409408   264  add jssp, jssp, #0x10 (16)
0xffff9140940c   268  ret
0xffff91409410   272  ldur x16, [x3, #-1]
0xffff91409414   276  ldr x17, [x26, #120]
0xffff91409418   280  cmp x16, x17
0xffff9140941c   284  b.ne #+0xb4 (addr 0xffff914094d0)
0xffff91409420   288  ldur d29, [x3, #7]
0xffff91409424   292  fcvtzs w5, d29
0xffff91409428   296  scvtf d0, w5
0xffff9140942c   300  fcmp d29, d0
0xffff91409430   304  b.ne #+0xa0 (addr 0xffff914094d0)
0xffff91409434   308  b #-0xf8 (addr 0xffff9140933c)
0xffff91409438   312  movz x7, #0x0
0xffff9140943c   316  mov x16, lr
0xffff91409440   320  ldr x17, pc+104 (addr 0x0000ffff914094a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91409444   324  blr x17
0xffff91409448   328  lsl x0, x0, #32
0xffff9140944c   332  movz x10, #0x0
0xffff91409450   336  sub csp, jssp, #0x10 (16)
0xffff91409454   340  stp x10, x0, [jssp, #-16]!
0xffff91409458   344  movz x0, #0x2
0xffff9140945c   348  movz x1, #0x5b88
0xffff91409460   352  movk x1, #0xe2, lsl #16
0xffff91409464   356  ldr x16, pc+76 (addr 0x0000ffff914094b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91409468   360  blr x16
0xffff9140946c   364  str x0, [jssp, #56]
0xffff91409470   368  ldr x16, pc+72 (addr 0x0000ffff914094b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91409474   372  blr x16
0xffff91409478   376  b #-0xdc (addr 0xffff9140939c)
0xffff9140947c   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff91409480   384  d63f03e0       constant
0xffff91409484   388  d503201f       constant
0xffff91409488   392  49b04201       constant
0xffff9140948c   396  00000000       constant
0xffff91409490   400  49b04201       constant
0xffff91409494   404  00000000       constant
0xffff91409498   408  36404259       constant
0xffff9140949c   412  00000000       constant
0xffff914094a0   416  49b04519       constant
0xffff914094a4   420  00000000       constant
0xffff914094a8   424  91406820       constant
0xffff914094ac   428  0000ffff       constant
0xffff914094b0   432  91406260       constant
0xffff914094b4   436  0000ffff       constant
0xffff914094b8   440  914068e0       constant
0xffff914094bc   444  0000ffff       constant
0xffff914094c0   448  movz x16, #0x0
0xffff914094c4   452  bl #+0x14 (addr 0xffff914094d8)
0xffff914094c8   456  movz x16, #0x8
0xffff914094cc   460  bl #+0xc (addr 0xffff914094d8)
0xffff914094d0   464  movz x16, #0x10
0xffff914094d4   468  bl #+0x4 (addr 0xffff914094d8)
0xffff914094d8   472  ldr x17, pc+24 (addr 0x0000ffff914094f0)    ;; lazy deoptimization bailout 0
0xffff914094dc   476  add x17, x17, x16
0xffff914094e0   480  br x17
0xffff914094e4   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914094e8   488  d63f03e0       constant
0xffff914094ec   492  d503201f       constant
0xffff914094f0   496  91206000       constant
0xffff914094f4   500  0000ffff       constant


Safepoints (size = 21)
0xffff9140946c   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff914093b8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914093c0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914093d0  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914093ec  embedded object  (0x49b04519 <the hole>)
0xffff91409440  code target (STUB)  (0xffff91406820)
0xffff91409464  code target (STUB)  (0xffff91406260)
0xffff91409470  code target (STUB)  (0xffff914068e0)
0xffff9140947c  constant pool (size 68)
0xffff914094d8  runtime entry
0xffff914094e4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_ELEMENTS
compiler = crankshaft
Instructions (size = 525)
0xffff91409300     0  movz x16, #0xa00000000
0xffff91409304     4  sub csp, jssp, #0x10 (16)
0xffff91409308     8  stp fp, lr, [jssp, #-16]!
0xffff9140930c    12  mov fp, jssp
0xffff91409310    16  sub csp, jssp, #0x8 (8)
0xffff91409314    20  sub jssp, jssp, #0x8 (8)
0xffff91409318    24  stur x16, [fp, #-8]
0xffff9140931c    28  ldr x3, [fp]
0xffff91409320    32  ldur x4, [x3, #-8]
0xffff91409324    36  movz x16, #0xe00000000
0xffff91409328    40  cmp x4, x16
0xffff9140932c    44  csel x4, fp, x3, ne
0xffff91409330    48  ldr x3, [x4, #16]
0xffff91409334    52  tbnz w3, #0, #+0xdc (addr 0xffff91409410)
0xffff91409338    56  asr x5, x3, #32
0xffff9140933c    60  movz w16, #0x257f
0xffff91409340    64  cmp w5, w16, lsl #3
0xffff91409344    68  b.hs #+0x17c (addr 0xffff914094c0)
0xffff91409348    72  cbz w5, #+0xc (addr 0xffff91409354)
0xffff9140934c    76  mov x3, x5
0xffff91409350    80  b #+0xc (addr 0xffff9140935c)
0xffff91409354    84  movz x3, #0x4
0xffff91409358    88  movz x5, #0x0
0xffff9140935c    92  lsl x4, x3, #32
0xffff91409360    96  lsl x5, x5, #32
0xffff91409364   100  lsl w6, w3, #3
0xffff91409368   104  add w6, w6, #0x10 (16)
0xffff9140936c   108  cmp w6, #0x96000 (614400)
0xffff91409370   112  b.hs #+0x158 (addr 0xffff914094c8)
0xffff91409374   116  add w0, w6, #0x20 (32)
0xffff91409378   120  sxtw x0, w0
0xffff9140937c   124  movz x2, #0xf2c0
0xffff91409380   128  movk x2, #0x4117, lsl #16
0xffff91409384   132  ldp x7, x16, [x2]
0xffff91409388   136  adds x6, x7, x0
0xffff9140938c   140  ccmp x6, x16, #nzCv, lo
0xffff91409390   144  b.hi #+0xa8 (addr 0xffff91409438)
0xffff91409394   148  str x6, [x2]
0xffff91409398   152  orr x7, x7, #0x1
0xffff9140939c   156  movz w0, #0x0
0xffff914093a0   160  stur x0, [x7, #31]
0xffff914093a4   164  ldur x0, [x1, #39]
0xffff914093a8   168  ldur x0, [x0, #39]
0xffff914093ac   172  movz x16, #0x187
0xffff914093b0   176  ldr x0, [x0, x16]
0xffff914093b4   180  stur x0, [x7, #-1]
0xffff914093b8   184  ldr x0, pc+208 (addr 0x0000ffff91409488)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914093bc   188  stur x0, [x7, #7]
0xffff914093c0   192  ldr x0, pc+208 (addr 0x0000ffff91409490)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914093c4   196  stur x0, [x7, #15]
0xffff914093c8   200  stur x5, [x7, #23]
0xffff914093cc   204  add x0, x7, #0x20 (32)
0xffff914093d0   208  ldr x1, pc+200 (addr 0x0000ffff91409498)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914093d4   212  stur x1, [x0, #-1]
0xffff914093d8   216  stur x4, [x0, #7]
0xffff914093dc   220  stur x0, [x7, #15]
0xffff914093e0   224  cmp w3, #0x0 (0)
0xffff914093e4   228  b.le #+0x18 (addr 0xffff914093fc)
0xffff914093e8   232  sub w3, w3, #0x1 (1)
0xffff914093ec   236  ldr x1, pc+180 (addr 0x0000ffff914094a0)    ;; object: 0x49b04519 <the hole>
0xffff914093f0   240  add x2, x0, #0xf (15)
0xffff914093f4   244  str x1, [x2, w3, sxtw #3]
0xffff914093f8   248  b #-0x18 (addr 0xffff914093e0)
0xffff914093fc   252  mov x0, x7
0xffff91409400   256  mov jssp, fp
0xffff91409404   260  ldp fp, lr, [jssp], #16
0xffff91409408   264  add jssp, jssp, #0x10 (16)
0xffff9140940c   268  ret
0xffff91409410   272  ldur x16, [x3, #-1]
0xffff91409414   276  ldr x17, [x26, #120]
0xffff91409418   280  cmp x16, x17
0xffff9140941c   284  b.ne #+0xb4 (addr 0xffff914094d0)
0xffff91409420   288  ldur d29, [x3, #7]
0xffff91409424   292  fcvtzs w5, d29
0xffff91409428   296  scvtf d0, w5
0xffff9140942c   300  fcmp d29, d0
0xffff91409430   304  b.ne #+0xa0 (addr 0xffff914094d0)
0xffff91409434   308  b #-0xf8 (addr 0xffff9140933c)
0xffff91409438   312  movz x7, #0x0
0xffff9140943c   316  mov x16, lr
0xffff91409440   320  ldr x17, pc+104 (addr 0x0000ffff914094a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91409444   324  blr x17
0xffff91409448   328  lsl x0, x0, #32
0xffff9140944c   332  movz x10, #0x0
0xffff91409450   336  sub csp, jssp, #0x10 (16)
0xffff91409454   340  stp x10, x0, [jssp, #-16]!
0xffff91409458   344  movz x0, #0x2
0xffff9140945c   348  movz x1, #0x5b88
0xffff91409460   352  movk x1, #0xe2, lsl #16
0xffff91409464   356  ldr x16, pc+76 (addr 0x0000ffff914094b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91409468   360  blr x16
0xffff9140946c   364  str x0, [jssp, #56]
0xffff91409470   368  ldr x16, pc+72 (addr 0x0000ffff914094b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91409474   372  blr x16
0xffff91409478   376  b #-0xdc (addr 0xffff9140939c)
0xffff9140947c   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff91409480   384  d63f03e0       constant
0xffff91409484   388  d503201f       constant
0xffff91409488   392  49b04201       constant
0xffff9140948c   396  00000000       constant
0xffff91409490   400  49b04201       constant
0xffff91409494   404  00000000       constant
0xffff91409498   408  36404259       constant
0xffff9140949c   412  00000000       constant
0xffff914094a0   416  49b04519       constant
0xffff914094a4   420  00000000       constant
0xffff914094a8   424  91406820       constant
0xffff914094ac   428  0000ffff       constant
0xffff914094b0   432  91406260       constant
0xffff914094b4   436  0000ffff       constant
0xffff914094b8   440  914068e0       constant
0xffff914094bc   444  0000ffff       constant
0xffff914094c0   448  movz x16, #0x0
0xffff914094c4   452  bl #+0x14 (addr 0xffff914094d8)
0xffff914094c8   456  movz x16, #0x8
0xffff914094cc   460  bl #+0xc (addr 0xffff914094d8)
0xffff914094d0   464  movz x16, #0x10
0xffff914094d4   468  bl #+0x4 (addr 0xffff914094d8)
0xffff914094d8   472  ldr x17, pc+24 (addr 0x0000ffff914094f0)    ;; lazy deoptimization bailout 0
0xffff914094dc   476  add x17, x17, x16
0xffff914094e0   480  br x17
0xffff914094e4   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914094e8   488  d63f03e0       constant
0xffff914094ec   492  d503201f       constant
0xffff914094f0   496  91206000       constant
0xffff914094f4   500  0000ffff       constant


Safepoints (size = 21)
0xffff9140946c   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff914093b8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914093c0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914093d0  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914093ec  embedded object  (0x49b04519 <the hole>)
0xffff91409440  code target (STUB)  (0xffff91406820)
0xffff91409464  code target (STUB)  (0xffff91406260)
0xffff91409470  code target (STUB)  (0xffff914068e0)
0xffff9140947c  constant pool (size 68)
0xffff914094d8  runtime entry
0xffff914094e4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 525)
0xffff91409580     0  movz x16, #0xa00000000
0xffff91409584     4  sub csp, jssp, #0x10 (16)
0xffff91409588     8  stp fp, lr, [jssp, #-16]!
0xffff9140958c    12  mov fp, jssp
0xffff91409590    16  sub csp, jssp, #0x8 (8)
0xffff91409594    20  sub jssp, jssp, #0x8 (8)
0xffff91409598    24  stur x16, [fp, #-8]
0xffff9140959c    28  ldr x3, [fp]
0xffff914095a0    32  ldur x4, [x3, #-8]
0xffff914095a4    36  movz x16, #0xe00000000
0xffff914095a8    40  cmp x4, x16
0xffff914095ac    44  csel x4, fp, x3, ne
0xffff914095b0    48  ldr x3, [x4, #16]
0xffff914095b4    52  tbnz w3, #0, #+0xdc (addr 0xffff91409690)
0xffff914095b8    56  asr x5, x3, #32
0xffff914095bc    60  movz w16, #0x257f
0xffff914095c0    64  cmp w5, w16, lsl #3
0xffff914095c4    68  b.hs #+0x17c (addr 0xffff91409740)
0xffff914095c8    72  cbz w5, #+0xc (addr 0xffff914095d4)
0xffff914095cc    76  mov x3, x5
0xffff914095d0    80  b #+0xc (addr 0xffff914095dc)
0xffff914095d4    84  movz x3, #0x4
0xffff914095d8    88  movz x5, #0x0
0xffff914095dc    92  lsl x4, x3, #32
0xffff914095e0    96  lsl x5, x5, #32
0xffff914095e4   100  lsl w6, w3, #3
0xffff914095e8   104  add w6, w6, #0x10 (16)
0xffff914095ec   108  cmp w6, #0x96000 (614400)
0xffff914095f0   112  b.hs #+0x158 (addr 0xffff91409748)
0xffff914095f4   116  add w0, w6, #0x20 (32)
0xffff914095f8   120  sxtw x0, w0
0xffff914095fc   124  movz x2, #0xf2c0
0xffff91409600   128  movk x2, #0x4117, lsl #16
0xffff91409604   132  ldp x7, x16, [x2]
0xffff91409608   136  adds x6, x7, x0
0xffff9140960c   140  ccmp x6, x16, #nzCv, lo
0xffff91409610   144  b.hi #+0xa8 (addr 0xffff914096b8)
0xffff91409614   148  str x6, [x2]
0xffff91409618   152  orr x7, x7, #0x1
0xffff9140961c   156  movz w0, #0x0
0xffff91409620   160  stur x0, [x7, #31]
0xffff91409624   164  ldur x0, [x1, #39]
0xffff91409628   168  ldur x0, [x0, #39]
0xffff9140962c   172  movz x16, #0x18f
0xffff91409630   176  ldr x0, [x0, x16]
0xffff91409634   180  stur x0, [x7, #-1]
0xffff91409638   184  ldr x0, pc+208 (addr 0x0000ffff91409708)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140963c   188  stur x0, [x7, #7]
0xffff91409640   192  ldr x0, pc+208 (addr 0x0000ffff91409710)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91409644   196  stur x0, [x7, #15]
0xffff91409648   200  stur x5, [x7, #23]
0xffff9140964c   204  add x0, x7, #0x20 (32)
0xffff91409650   208  ldr x1, pc+200 (addr 0x0000ffff91409718)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91409654   212  stur x1, [x0, #-1]
0xffff91409658   216  stur x4, [x0, #7]
0xffff9140965c   220  stur x0, [x7, #15]
0xffff91409660   224  cmp w3, #0x0 (0)
0xffff91409664   228  b.le #+0x18 (addr 0xffff9140967c)
0xffff91409668   232  sub w3, w3, #0x1 (1)
0xffff9140966c   236  ldr x1, pc+180 (addr 0x0000ffff91409720)    ;; object: 0x49b04519 <the hole>
0xffff91409670   240  add x2, x0, #0xf (15)
0xffff91409674   244  str x1, [x2, w3, sxtw #3]
0xffff91409678   248  b #-0x18 (addr 0xffff91409660)
0xffff9140967c   252  mov x0, x7
0xffff91409680   256  mov jssp, fp
0xffff91409684   260  ldp fp, lr, [jssp], #16
0xffff91409688   264  add jssp, jssp, #0x10 (16)
0xffff9140968c   268  ret
0xffff91409690   272  ldur x16, [x3, #-1]
0xffff91409694   276  ldr x17, [x26, #120]
0xffff91409698   280  cmp x16, x17
0xffff9140969c   284  b.ne #+0xb4 (addr 0xffff91409750)
0xffff914096a0   288  ldur d29, [x3, #7]
0xffff914096a4   292  fcvtzs w5, d29
0xffff914096a8   296  scvtf d0, w5
0xffff914096ac   300  fcmp d29, d0
0xffff914096b0   304  b.ne #+0xa0 (addr 0xffff91409750)
0xffff914096b4   308  b #-0xf8 (addr 0xffff914095bc)
0xffff914096b8   312  movz x7, #0x0
0xffff914096bc   316  mov x16, lr
0xffff914096c0   320  ldr x17, pc+104 (addr 0x0000ffff91409728)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914096c4   324  blr x17
0xffff914096c8   328  lsl x0, x0, #32
0xffff914096cc   332  movz x10, #0x0
0xffff914096d0   336  sub csp, jssp, #0x10 (16)
0xffff914096d4   340  stp x10, x0, [jssp, #-16]!
0xffff914096d8   344  movz x0, #0x2
0xffff914096dc   348  movz x1, #0x5b88
0xffff914096e0   352  movk x1, #0xe2, lsl #16
0xffff914096e4   356  ldr x16, pc+76 (addr 0x0000ffff91409730)    ;; code: STUB, CEntryStub, minor: 5
0xffff914096e8   360  blr x16
0xffff914096ec   364  str x0, [jssp, #56]
0xffff914096f0   368  ldr x16, pc+72 (addr 0x0000ffff91409738)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914096f4   372  blr x16
0xffff914096f8   376  b #-0xdc (addr 0xffff9140961c)
0xffff914096fc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff91409700   384  d63f03e0       constant
0xffff91409704   388  d503201f       constant
0xffff91409708   392  49b04201       constant
0xffff9140970c   396  00000000       constant
0xffff91409710   400  49b04201       constant
0xffff91409714   404  00000000       constant
0xffff91409718   408  36404259       constant
0xffff9140971c   412  00000000       constant
0xffff91409720   416  49b04519       constant
0xffff91409724   420  00000000       constant
0xffff91409728   424  91406820       constant
0xffff9140972c   428  0000ffff       constant
0xffff91409730   432  91406260       constant
0xffff91409734   436  0000ffff       constant
0xffff91409738   440  914068e0       constant
0xffff9140973c   444  0000ffff       constant
0xffff91409740   448  movz x16, #0x0
0xffff91409744   452  bl #+0x14 (addr 0xffff91409758)
0xffff91409748   456  movz x16, #0x8
0xffff9140974c   460  bl #+0xc (addr 0xffff91409758)
0xffff91409750   464  movz x16, #0x10
0xffff91409754   468  bl #+0x4 (addr 0xffff91409758)
0xffff91409758   472  ldr x17, pc+24 (addr 0x0000ffff91409770)    ;; lazy deoptimization bailout 0
0xffff9140975c   476  add x17, x17, x16
0xffff91409760   480  br x17
0xffff91409764   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91409768   488  d63f03e0       constant
0xffff9140976c   492  d503201f       constant
0xffff91409770   496  91206000       constant
0xffff91409774   500  0000ffff       constant


Safepoints (size = 21)
0xffff914096ec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff91409638  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91409640  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91409650  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140966c  embedded object  (0x49b04519 <the hole>)
0xffff914096c0  code target (STUB)  (0xffff91406820)
0xffff914096e4  code target (STUB)  (0xffff91406260)
0xffff914096f0  code target (STUB)  (0xffff914068e0)
0xffff914096fc  constant pool (size 68)
0xffff91409758  runtime entry
0xffff91409764  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_HOLEY_ELEMENTS
compiler = crankshaft
Instructions (size = 525)
0xffff91409580     0  movz x16, #0xa00000000
0xffff91409584     4  sub csp, jssp, #0x10 (16)
0xffff91409588     8  stp fp, lr, [jssp, #-16]!
0xffff9140958c    12  mov fp, jssp
0xffff91409590    16  sub csp, jssp, #0x8 (8)
0xffff91409594    20  sub jssp, jssp, #0x8 (8)
0xffff91409598    24  stur x16, [fp, #-8]
0xffff9140959c    28  ldr x3, [fp]
0xffff914095a0    32  ldur x4, [x3, #-8]
0xffff914095a4    36  movz x16, #0xe00000000
0xffff914095a8    40  cmp x4, x16
0xffff914095ac    44  csel x4, fp, x3, ne
0xffff914095b0    48  ldr x3, [x4, #16]
0xffff914095b4    52  tbnz w3, #0, #+0xdc (addr 0xffff91409690)
0xffff914095b8    56  asr x5, x3, #32
0xffff914095bc    60  movz w16, #0x257f
0xffff914095c0    64  cmp w5, w16, lsl #3
0xffff914095c4    68  b.hs #+0x17c (addr 0xffff91409740)
0xffff914095c8    72  cbz w5, #+0xc (addr 0xffff914095d4)
0xffff914095cc    76  mov x3, x5
0xffff914095d0    80  b #+0xc (addr 0xffff914095dc)
0xffff914095d4    84  movz x3, #0x4
0xffff914095d8    88  movz x5, #0x0
0xffff914095dc    92  lsl x4, x3, #32
0xffff914095e0    96  lsl x5, x5, #32
0xffff914095e4   100  lsl w6, w3, #3
0xffff914095e8   104  add w6, w6, #0x10 (16)
0xffff914095ec   108  cmp w6, #0x96000 (614400)
0xffff914095f0   112  b.hs #+0x158 (addr 0xffff91409748)
0xffff914095f4   116  add w0, w6, #0x20 (32)
0xffff914095f8   120  sxtw x0, w0
0xffff914095fc   124  movz x2, #0xf2c0
0xffff91409600   128  movk x2, #0x4117, lsl #16
0xffff91409604   132  ldp x7, x16, [x2]
0xffff91409608   136  adds x6, x7, x0
0xffff9140960c   140  ccmp x6, x16, #nzCv, lo
0xffff91409610   144  b.hi #+0xa8 (addr 0xffff914096b8)
0xffff91409614   148  str x6, [x2]
0xffff91409618   152  orr x7, x7, #0x1
0xffff9140961c   156  movz w0, #0x0
0xffff91409620   160  stur x0, [x7, #31]
0xffff91409624   164  ldur x0, [x1, #39]
0xffff91409628   168  ldur x0, [x0, #39]
0xffff9140962c   172  movz x16, #0x18f
0xffff91409630   176  ldr x0, [x0, x16]
0xffff91409634   180  stur x0, [x7, #-1]
0xffff91409638   184  ldr x0, pc+208 (addr 0x0000ffff91409708)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140963c   188  stur x0, [x7, #7]
0xffff91409640   192  ldr x0, pc+208 (addr 0x0000ffff91409710)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91409644   196  stur x0, [x7, #15]
0xffff91409648   200  stur x5, [x7, #23]
0xffff9140964c   204  add x0, x7, #0x20 (32)
0xffff91409650   208  ldr x1, pc+200 (addr 0x0000ffff91409718)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91409654   212  stur x1, [x0, #-1]
0xffff91409658   216  stur x4, [x0, #7]
0xffff9140965c   220  stur x0, [x7, #15]
0xffff91409660   224  cmp w3, #0x0 (0)
0xffff91409664   228  b.le #+0x18 (addr 0xffff9140967c)
0xffff91409668   232  sub w3, w3, #0x1 (1)
0xffff9140966c   236  ldr x1, pc+180 (addr 0x0000ffff91409720)    ;; object: 0x49b04519 <the hole>
0xffff91409670   240  add x2, x0, #0xf (15)
0xffff91409674   244  str x1, [x2, w3, sxtw #3]
0xffff91409678   248  b #-0x18 (addr 0xffff91409660)
0xffff9140967c   252  mov x0, x7
0xffff91409680   256  mov jssp, fp
0xffff91409684   260  ldp fp, lr, [jssp], #16
0xffff91409688   264  add jssp, jssp, #0x10 (16)
0xffff9140968c   268  ret
0xffff91409690   272  ldur x16, [x3, #-1]
0xffff91409694   276  ldr x17, [x26, #120]
0xffff91409698   280  cmp x16, x17
0xffff9140969c   284  b.ne #+0xb4 (addr 0xffff91409750)
0xffff914096a0   288  ldur d29, [x3, #7]
0xffff914096a4   292  fcvtzs w5, d29
0xffff914096a8   296  scvtf d0, w5
0xffff914096ac   300  fcmp d29, d0
0xffff914096b0   304  b.ne #+0xa0 (addr 0xffff91409750)
0xffff914096b4   308  b #-0xf8 (addr 0xffff914095bc)
0xffff914096b8   312  movz x7, #0x0
0xffff914096bc   316  mov x16, lr
0xffff914096c0   320  ldr x17, pc+104 (addr 0x0000ffff91409728)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914096c4   324  blr x17
0xffff914096c8   328  lsl x0, x0, #32
0xffff914096cc   332  movz x10, #0x0
0xffff914096d0   336  sub csp, jssp, #0x10 (16)
0xffff914096d4   340  stp x10, x0, [jssp, #-16]!
0xffff914096d8   344  movz x0, #0x2
0xffff914096dc   348  movz x1, #0x5b88
0xffff914096e0   352  movk x1, #0xe2, lsl #16
0xffff914096e4   356  ldr x16, pc+76 (addr 0x0000ffff91409730)    ;; code: STUB, CEntryStub, minor: 5
0xffff914096e8   360  blr x16
0xffff914096ec   364  str x0, [jssp, #56]
0xffff914096f0   368  ldr x16, pc+72 (addr 0x0000ffff91409738)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914096f4   372  blr x16
0xffff914096f8   376  b #-0xdc (addr 0xffff9140961c)
0xffff914096fc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff91409700   384  d63f03e0       constant
0xffff91409704   388  d503201f       constant
0xffff91409708   392  49b04201       constant
0xffff9140970c   396  00000000       constant
0xffff91409710   400  49b04201       constant
0xffff91409714   404  00000000       constant
0xffff91409718   408  36404259       constant
0xffff9140971c   412  00000000       constant
0xffff91409720   416  49b04519       constant
0xffff91409724   420  00000000       constant
0xffff91409728   424  91406820       constant
0xffff9140972c   428  0000ffff       constant
0xffff91409730   432  91406260       constant
0xffff91409734   436  0000ffff       constant
0xffff91409738   440  914068e0       constant
0xffff9140973c   444  0000ffff       constant
0xffff91409740   448  movz x16, #0x0
0xffff91409744   452  bl #+0x14 (addr 0xffff91409758)
0xffff91409748   456  movz x16, #0x8
0xffff9140974c   460  bl #+0xc (addr 0xffff91409758)
0xffff91409750   464  movz x16, #0x10
0xffff91409754   468  bl #+0x4 (addr 0xffff91409758)
0xffff91409758   472  ldr x17, pc+24 (addr 0x0000ffff91409770)    ;; lazy deoptimization bailout 0
0xffff9140975c   476  add x17, x17, x16
0xffff91409760   480  br x17
0xffff91409764   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91409768   488  d63f03e0       constant
0xffff9140976c   492  d503201f       constant
0xffff91409770   496  91206000       constant
0xffff91409774   500  0000ffff       constant


Safepoints (size = 21)
0xffff914096ec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff91409638  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91409640  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91409650  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140966c  embedded object  (0x49b04519 <the hole>)
0xffff914096c0  code target (STUB)  (0xffff91406820)
0xffff914096e4  code target (STUB)  (0xffff91406260)
0xffff914096f0  code target (STUB)  (0xffff914068e0)
0xffff914096fc  constant pool (size 68)
0xffff91409758  runtime entry
0xffff91409764  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff91409800     0  adr xzr, #+0x40 (addr 0xffff91409840)
0xffff91409804     4  adr xzr, #+0x360 (addr 0xffff91409b64)
0xffff91409808     8  ldr x16, pc+1736 (addr 0x0000ffff91409ed0)    ;; external reference (store_buffer_top)
0xffff9140980c    12  ldr x3, [x16]
0xffff91409810    16  str x4, [x3], #8
0xffff91409814    20  str x3, [x16]
0xffff91409818    24  tst x3, #0x1ffff
0xffff9140981c    28  b.eq #+0x8 (addr 0xffff91409824)
0xffff91409820    32  ret
0xffff91409824    36  sub csp, jssp, #0x8 (8)
0xffff91409828    40  str lr, [jssp, #-8]!
0xffff9140982c    44  ldr x17, pc+1708 (addr 0x0000ffff91409ed8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91409830    48  blr x17
0xffff91409834    52  ldr lr, [jssp], #8
0xffff91409838    56  ret
0xffff9140983c    60  ret
0xffff91409840    64  sub csp, jssp, #0x10 (16)
0xffff91409844    68  stp x1, x0, [jssp, #-16]!
0xffff91409848    72  ldr x3, [x4]
0xffff9140984c    76  and x16, x3, #0xfffffffffff00000
0xffff91409850    80  ldr x16, [x16, #8]
0xffff91409854    84  tst x16, #0x18
0xffff91409858    88  b.eq #+0x1d8 (addr 0xffff91409a30)
0xffff9140985c    92  and x16, x7, #0xfffffffffff00000
0xffff91409860    96  ldr x16, [x16, #8]
0xffff91409864   100  tst x16, #0x18
0xffff91409868   104  b.ne #+0x1c8 (addr 0xffff91409a30)
0xffff9140986c   108  and x3, x7, #0xfffffffffff00000
0xffff91409870   112  ldr x0, [x3, #104]
0xffff91409874   116  subs x0, x0, #0x1 (1)
0xffff91409878   120  str x0, [x3, #104]
0xffff9140987c   124  b.mi #+0xc4 (addr 0xffff91409940)
0xffff91409880   128  ubfx x16, x7, #8, #12
0xffff91409884   132  and x3, x7, #0xfffffffffff00000
0xffff91409888   136  add x3, x3, x16, lsl #2
0xffff9140988c   140  ubfx x0, x7, #3, #5
0xffff91409890   144  ldr x3, [x3, #360]
0xffff91409894   148  lsr x3, x3, x0
0xffff91409898   152  tbz w3, #0, #+0x8 (addr 0xffff914098a0)
0xffff9140989c   156  tbnz w3, #1, #+0x3c (addr 0xffff914098d8)
0xffff914098a0   160  ldp x1, x0, [jssp], #16
0xffff914098a4   164  ldr x16, pc+1596 (addr 0x0000ffff91409ee0)    ;; external reference (store_buffer_top)
0xffff914098a8   168  ldr x3, [x16]
0xffff914098ac   172  str x4, [x3], #8
0xffff914098b0   176  str x3, [x16]
0xffff914098b4   180  tst x3, #0x1ffff
0xffff914098b8   184  b.eq #+0x8 (addr 0xffff914098c0)
0xffff914098bc   188  ret
0xffff914098c0   192  sub csp, jssp, #0x8 (8)
0xffff914098c4   196  str lr, [jssp, #-8]!
0xffff914098c8   200  ldr x17, pc+1568 (addr 0x0000ffff91409ee8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914098cc   204  blr x17
0xffff914098d0   208  ldr lr, [jssp], #8
0xffff914098d4   212  ret
0xffff914098d8   216  ldr x3, [x4]
0xffff914098dc   220  sub csp, jssp, #0x10 (16)
0xffff914098e0   224  stp x7, x4, [jssp, #-16]!
0xffff914098e4   228  ubfx x16, x3, #8, #12
0xffff914098e8   232  and x0, x3, #0xfffffffffff00000
0xffff914098ec   236  add x0, x0, x16, lsl #2
0xffff914098f0   240  ubfx x7, x3, #3, #5
0xffff914098f4   244  ldr x4, [x0, #360]
0xffff914098f8   248  lsr x4, x4, x7
0xffff914098fc   252  tbz w4, #0, #+0x40 (addr 0xffff9140993c)
0xffff91409900   256  ldp x7, x4, [jssp], #16
0xffff91409904   260  ldp x1, x0, [jssp], #16
0xffff91409908   264  ldr x16, pc+1512 (addr 0x0000ffff91409ef0)    ;; external reference (store_buffer_top)
0xffff9140990c   268  ldr x3, [x16]
0xffff91409910   272  str x4, [x3], #8
0xffff91409914   276  str x3, [x16]
0xffff91409918   280  tst x3, #0x1ffff
0xffff9140991c   284  b.eq #+0x8 (addr 0xffff91409924)
0xffff91409920   288  ret
0xffff91409924   292  sub csp, jssp, #0x8 (8)
0xffff91409928   296  str lr, [jssp, #-8]!
0xffff9140992c   300  ldr x17, pc+1484 (addr 0x0000ffff91409ef8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91409930   304  blr x17
0xffff91409934   308  ldr lr, [jssp], #8
0xffff91409938   312  ret
0xffff9140993c   316  ldp x7, x4, [jssp], #16
0xffff91409940   320  sub csp, jssp, #0x78 (120)
0xffff91409944   324  stp x14, x15, [jssp, #-32]!
0xffff91409948   328  stp x18, lr, [jssp, #16]
0xffff9140994c   332  stp x10, x11, [jssp, #-32]!
0xffff91409950   336  stp x12, x13, [jssp, #16]
0xffff91409954   340  stp x6, x7, [jssp, #-32]!
0xffff91409958   344  stp x8, x9, [jssp, #16]
0xffff9140995c   348  stp x2, x4, [jssp, #-24]!
0xffff91409960   352  str x5, [jssp, #16]
0xffff91409964   356  sub csp, jssp, #0xb0 (176)
0xffff91409968   360  stp d26, d27, [jssp, #-32]!
0xffff9140996c   364  stp d28, d29, [jssp, #16]
0xffff91409970   368  stp d22, d23, [jssp, #-32]!
0xffff91409974   372  stp d24, d25, [jssp, #16]
0xffff91409978   376  stp d18, d19, [jssp, #-32]!
0xffff9140997c   380  stp d20, d21, [jssp, #16]
0xffff91409980   384  stp d6, d7, [jssp, #-32]!
0xffff91409984   388  stp d16, d17, [jssp, #16]
0xffff91409988   392  stp d2, d3, [jssp, #-32]!
0xffff9140998c   396  stp d4, d5, [jssp, #16]
0xffff91409990   400  stp d0, d1, [jssp, #-16]!
0xffff91409994   404  mov x0, x7
0xffff91409998   408  mov x1, x4
0xffff9140999c   412  ldr x2, pc+1380 (addr 0x0000ffff91409f00)    ;; external reference (isolate)
0xffff914099a0   416  ldr x16, pc+1384 (addr 0x0000ffff91409f08)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914099a4   420  and csp, jssp, #0xfffffffffffffff0
0xffff914099a8   424  blr x16
0xffff914099ac   428  ldp d2, d3, [jssp, #16]
0xffff914099b0   432  ldp d0, d1, [jssp], #32
0xffff914099b4   436  ldp d6, d7, [jssp, #16]
0xffff914099b8   440  ldp d4, d5, [jssp], #32
0xffff914099bc   444  ldp d18, d19, [jssp, #16]
0xffff914099c0   448  ldp d16, d17, [jssp], #32
0xffff914099c4   452  ldp d22, d23, [jssp, #16]
0xffff914099c8   456  ldp d20, d21, [jssp], #32
0xffff914099cc   460  ldp d26, d27, [jssp, #16]
0xffff914099d0   464  ldp d24, d25, [jssp], #32
0xffff914099d4   468  ldp d28, d29, [jssp], #16
0xffff914099d8   472  ldp x5, x6, [jssp, #16]
0xffff914099dc   476  ldp x2, x4, [jssp], #32
0xffff914099e0   480  ldp x9, x10, [jssp, #16]
0xffff914099e4   484  ldp x7, x8, [jssp], #32
0xffff914099e8   488  ldp x13, x14, [jssp, #16]
0xffff914099ec   492  ldp x11, x12, [jssp], #32
0xffff914099f0   496  ldr lr, [jssp, #16]
0xffff914099f4   500  ldp x15, x18, [jssp], #24
0xffff914099f8   504  ldp x1, x0, [jssp], #16
0xffff914099fc   508  ldr x16, pc+1300 (addr 0x0000ffff91409f10)    ;; external reference (store_buffer_top)
0xffff91409a00   512  ldr x3, [x16]
0xffff91409a04   516  str x4, [x3], #8
0xffff91409a08   520  str x3, [x16]
0xffff91409a0c   524  tst x3, #0x1ffff
0xffff91409a10   528  b.eq #+0x8 (addr 0xffff91409a18)
0xffff91409a14   532  ret
0xffff91409a18   536  sub csp, jssp, #0x8 (8)
0xffff91409a1c   540  str lr, [jssp, #-8]!
0xffff91409a20   544  ldr x17, pc+1272 (addr 0x0000ffff91409f18)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91409a24   548  blr x17
0xffff91409a28   552  ldr lr, [jssp], #8
0xffff91409a2c   556  ret
0xffff91409a30   560  and x3, x7, #0xfffffffffff00000
0xffff91409a34   564  ldr x0, [x3, #104]
0xffff91409a38   568  subs x0, x0, #0x1 (1)
0xffff91409a3c   572  str x0, [x3, #104]
0xffff91409a40   576  b.mi #+0x64 (addr 0xffff91409aa4)
0xffff91409a44   580  ubfx x16, x7, #8, #12
0xffff91409a48   584  and x3, x7, #0xfffffffffff00000
0xffff91409a4c   588  add x3, x3, x16, lsl #2
0xffff91409a50   592  ubfx x0, x7, #3, #5
0xffff91409a54   596  ldr x3, [x3, #360]
0xffff91409a58   600  lsr x3, x3, x0
0xffff91409a5c   604  tbz w3, #0, #+0x8 (addr 0xffff91409a64)
0xffff91409a60   608  tbnz w3, #1, #+0xc (addr 0xffff91409a6c)
0xffff91409a64   612  ldp x1, x0, [jssp], #16
0xffff91409a68   616  ret
0xffff91409a6c   620  ldr x3, [x4]
0xffff91409a70   624  sub csp, jssp, #0x10 (16)
0xffff91409a74   628  stp x7, x4, [jssp, #-16]!
0xffff91409a78   632  ubfx x16, x3, #8, #12
0xffff91409a7c   636  and x0, x3, #0xfffffffffff00000
0xffff91409a80   640  add x0, x0, x16, lsl #2
0xffff91409a84   644  ubfx x7, x3, #3, #5
0xffff91409a88   648  ldr x4, [x0, #360]
0xffff91409a8c   652  lsr x4, x4, x7
0xffff91409a90   656  tbz w4, #0, #+0x10 (addr 0xffff91409aa0)
0xffff91409a94   660  ldp x7, x4, [jssp], #16
0xffff91409a98   664  ldp x1, x0, [jssp], #16
0xffff91409a9c   668  ret
0xffff91409aa0   672  ldp x7, x4, [jssp], #16
0xffff91409aa4   676  sub csp, jssp, #0x78 (120)
0xffff91409aa8   680  stp x14, x15, [jssp, #-32]!
0xffff91409aac   684  stp x18, lr, [jssp, #16]
0xffff91409ab0   688  stp x10, x11, [jssp, #-32]!
0xffff91409ab4   692  stp x12, x13, [jssp, #16]
0xffff91409ab8   696  stp x6, x7, [jssp, #-32]!
0xffff91409abc   700  stp x8, x9, [jssp, #16]
0xffff91409ac0   704  stp x2, x4, [jssp, #-24]!
0xffff91409ac4   708  str x5, [jssp, #16]
0xffff91409ac8   712  sub csp, jssp, #0xb0 (176)
0xffff91409acc   716  stp d26, d27, [jssp, #-32]!
0xffff91409ad0   720  stp d28, d29, [jssp, #16]
0xffff91409ad4   724  stp d22, d23, [jssp, #-32]!
0xffff91409ad8   728  stp d24, d25, [jssp, #16]
0xffff91409adc   732  stp d18, d19, [jssp, #-32]!
0xffff91409ae0   736  stp d20, d21, [jssp, #16]
0xffff91409ae4   740  stp d6, d7, [jssp, #-32]!
0xffff91409ae8   744  stp d16, d17, [jssp, #16]
0xffff91409aec   748  stp d2, d3, [jssp, #-32]!
0xffff91409af0   752  stp d4, d5, [jssp, #16]
0xffff91409af4   756  stp d0, d1, [jssp, #-16]!
0xffff91409af8   760  mov x0, x7
0xffff91409afc   764  mov x1, x4
0xffff91409b00   768  ldr x2, pc+1056 (addr 0x0000ffff91409f20)    ;; external reference (isolate)
0xffff91409b04   772  ldr x16, pc+1060 (addr 0x0000ffff91409f28)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91409b08   776  and csp, jssp, #0xfffffffffffffff0
0xffff91409b0c   780  blr x16
0xffff91409b10   784  ldp d2, d3, [jssp, #16]
0xffff91409b14   788  ldp d0, d1, [jssp], #32
0xffff91409b18   792  ldp d6, d7, [jssp, #16]
0xffff91409b1c   796  ldp d4, d5, [jssp], #32
0xffff91409b20   800  ldp d18, d19, [jssp, #16]
0xffff91409b24   804  ldp d16, d17, [jssp], #32
0xffff91409b28   808  ldp d22, d23, [jssp, #16]
0xffff91409b2c   812  ldp d20, d21, [jssp], #32
0xffff91409b30   816  ldp d26, d27, [jssp, #16]
0xffff91409b34   820  ldp d24, d25, [jssp], #32
0xffff91409b38   824  ldp d28, d29, [jssp], #16
0xffff91409b3c   828  ldp x5, x6, [jssp, #16]
0xffff91409b40   832  ldp x2, x4, [jssp], #32
0xffff91409b44   836  ldp x9, x10, [jssp, #16]
0xffff91409b48   840  ldp x7, x8, [jssp], #32
0xffff91409b4c   844  ldp x13, x14, [jssp, #16]
0xffff91409b50   848  ldp x11, x12, [jssp], #32
0xffff91409b54   852  ldr lr, [jssp, #16]
0xffff91409b58   856  ldp x15, x18, [jssp], #24
0xffff91409b5c   860  ldp x1, x0, [jssp], #16
0xffff91409b60   864  ret
0xffff91409b64   868  sub csp, jssp, #0x10 (16)
0xffff91409b68   872  stp x1, x0, [jssp, #-16]!
0xffff91409b6c   876  ldr x3, [x4]
0xffff91409b70   880  and x16, x3, #0xfffffffffff00000
0xffff91409b74   884  ldr x16, [x16, #8]
0xffff91409b78   888  tst x16, #0x18
0xffff91409b7c   892  b.eq #+0x1f8 (addr 0xffff91409d74)
0xffff91409b80   896  and x16, x7, #0xfffffffffff00000
0xffff91409b84   900  ldr x16, [x16, #8]
0xffff91409b88   904  tst x16, #0x18
0xffff91409b8c   908  b.ne #+0x1e8 (addr 0xffff91409d74)
0xffff91409b90   912  and x3, x7, #0xfffffffffff00000
0xffff91409b94   916  ldr x0, [x3, #104]
0xffff91409b98   920  subs x0, x0, #0x1 (1)
0xffff91409b9c   924  str x0, [x3, #104]
0xffff91409ba0   928  b.mi #+0xe4 (addr 0xffff91409c84)
0xffff91409ba4   932  ubfx x16, x7, #8, #12
0xffff91409ba8   936  and x3, x7, #0xfffffffffff00000
0xffff91409bac   940  add x3, x3, x16, lsl #2
0xffff91409bb0   944  ubfx x0, x7, #3, #5
0xffff91409bb4   948  ldr x3, [x3, #360]
0xffff91409bb8   952  lsr x3, x3, x0
0xffff91409bbc   956  tbz w3, #0, #+0x8 (addr 0xffff91409bc4)
0xffff91409bc0   960  tbnz w3, #1, #+0x3c (addr 0xffff91409bfc)
0xffff91409bc4   964  ldp x1, x0, [jssp], #16
0xffff91409bc8   968  ldr x16, pc+872 (addr 0x0000ffff91409f30)    ;; external reference (store_buffer_top)
0xffff91409bcc   972  ldr x3, [x16]
0xffff91409bd0   976  str x4, [x3], #8
0xffff91409bd4   980  str x3, [x16]
0xffff91409bd8   984  tst x3, #0x1ffff
0xffff91409bdc   988  b.eq #+0x8 (addr 0xffff91409be4)
0xffff91409be0   992  ret
0xffff91409be4   996  sub csp, jssp, #0x8 (8)
0xffff91409be8  1000  str lr, [jssp, #-8]!
0xffff91409bec  1004  ldr x17, pc+844 (addr 0x0000ffff91409f38)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91409bf0  1008  blr x17
0xffff91409bf4  1012  ldr lr, [jssp], #8
0xffff91409bf8  1016  ret
0xffff91409bfc  1020  ldr x3, [x4]
0xffff91409c00  1024  and x0, x3, #0xfffffffffff00000
0xffff91409c04  1028  ldr x0, [x0, #8]
0xffff91409c08  1032  tbz w0, #6, #+0x18 (addr 0xffff91409c20)
0xffff91409c0c  1036  and x0, x7, #0xfffffffffff00000
0xffff91409c10  1040  ldr x0, [x0, #8]
0xffff91409c14  1044  movz x16, #0x58
0xffff91409c18  1048  tst x0, x16
0xffff91409c1c  1052  b.eq #+0x68 (addr 0xffff91409c84)
0xffff91409c20  1056  sub csp, jssp, #0x10 (16)
0xffff91409c24  1060  stp x7, x4, [jssp, #-16]!
0xffff91409c28  1064  ubfx x16, x3, #8, #12
0xffff91409c2c  1068  and x0, x3, #0xfffffffffff00000
0xffff91409c30  1072  add x0, x0, x16, lsl #2
0xffff91409c34  1076  ubfx x7, x3, #3, #5
0xffff91409c38  1080  ldr x4, [x0, #360]
0xffff91409c3c  1084  lsr x4, x4, x7
0xffff91409c40  1088  tbz w4, #0, #+0x40 (addr 0xffff91409c80)
0xffff91409c44  1092  ldp x7, x4, [jssp], #16
0xffff91409c48  1096  ldp x1, x0, [jssp], #16
0xffff91409c4c  1100  ldr x16, pc+756 (addr 0x0000ffff91409f40)    ;; external reference (store_buffer_top)
0xffff91409c50  1104  ldr x3, [x16]
0xffff91409c54  1108  str x4, [x3], #8
0xffff91409c58  1112  str x3, [x16]
0xffff91409c5c  1116  tst x3, #0x1ffff
0xffff91409c60  1120  b.eq #+0x8 (addr 0xffff91409c68)
0xffff91409c64  1124  ret
0xffff91409c68  1128  sub csp, jssp, #0x8 (8)
0xffff91409c6c  1132  str lr, [jssp, #-8]!
0xffff91409c70  1136  ldr x17, pc+728 (addr 0x0000ffff91409f48)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91409c74  1140  blr x17
0xffff91409c78  1144  ldr lr, [jssp], #8
0xffff91409c7c  1148  ret
0xffff91409c80  1152  ldp x7, x4, [jssp], #16
0xffff91409c84  1156  sub csp, jssp, #0x78 (120)
0xffff91409c88  1160  stp x14, x15, [jssp, #-32]!
0xffff91409c8c  1164  stp x18, lr, [jssp, #16]
0xffff91409c90  1168  stp x10, x11, [jssp, #-32]!
0xffff91409c94  1172  stp x12, x13, [jssp, #16]
0xffff91409c98  1176  stp x6, x7, [jssp, #-32]!
0xffff91409c9c  1180  stp x8, x9, [jssp, #16]
0xffff91409ca0  1184  stp x2, x4, [jssp, #-24]!
0xffff91409ca4  1188  str x5, [jssp, #16]
0xffff91409ca8  1192  sub csp, jssp, #0xb0 (176)
0xffff91409cac  1196  stp d26, d27, [jssp, #-32]!
0xffff91409cb0  1200  stp d28, d29, [jssp, #16]
0xffff91409cb4  1204  stp d22, d23, [jssp, #-32]!
0xffff91409cb8  1208  stp d24, d25, [jssp, #16]
0xffff91409cbc  1212  stp d18, d19, [jssp, #-32]!
0xffff91409cc0  1216  stp d20, d21, [jssp, #16]
0xffff91409cc4  1220  stp d6, d7, [jssp, #-32]!
0xffff91409cc8  1224  stp d16, d17, [jssp, #16]
0xffff91409ccc  1228  stp d2, d3, [jssp, #-32]!
0xffff91409cd0  1232  stp d4, d5, [jssp, #16]
0xffff91409cd4  1236  stp d0, d1, [jssp, #-16]!
0xffff91409cd8  1240  mov x0, x7
0xffff91409cdc  1244  mov x1, x4
0xffff91409ce0  1248  ldr x2, pc+624 (addr 0x0000ffff91409f50)    ;; external reference (isolate)
0xffff91409ce4  1252  ldr x16, pc+628 (addr 0x0000ffff91409f58)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91409ce8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff91409cec  1260  blr x16
0xffff91409cf0  1264  ldp d2, d3, [jssp, #16]
0xffff91409cf4  1268  ldp d0, d1, [jssp], #32
0xffff91409cf8  1272  ldp d6, d7, [jssp, #16]
0xffff91409cfc  1276  ldp d4, d5, [jssp], #32
0xffff91409d00  1280  ldp d18, d19, [jssp, #16]
0xffff91409d04  1284  ldp d16, d17, [jssp], #32
0xffff91409d08  1288  ldp d22, d23, [jssp, #16]
0xffff91409d0c  1292  ldp d20, d21, [jssp], #32
0xffff91409d10  1296  ldp d26, d27, [jssp, #16]
0xffff91409d14  1300  ldp d24, d25, [jssp], #32
0xffff91409d18  1304  ldp d28, d29, [jssp], #16
0xffff91409d1c  1308  ldp x5, x6, [jssp, #16]
0xffff91409d20  1312  ldp x2, x4, [jssp], #32
0xffff91409d24  1316  ldp x9, x10, [jssp, #16]
0xffff91409d28  1320  ldp x7, x8, [jssp], #32
0xffff91409d2c  1324  ldp x13, x14, [jssp, #16]
0xffff91409d30  1328  ldp x11, x12, [jssp], #32
0xffff91409d34  1332  ldr lr, [jssp, #16]
0xffff91409d38  1336  ldp x15, x18, [jssp], #24
0xffff91409d3c  1340  ldp x1, x0, [jssp], #16
0xffff91409d40  1344  ldr x16, pc+544 (addr 0x0000ffff91409f60)    ;; external reference (store_buffer_top)
0xffff91409d44  1348  ldr x3, [x16]
0xffff91409d48  1352  str x4, [x3], #8
0xffff91409d4c  1356  str x3, [x16]
0xffff91409d50  1360  tst x3, #0x1ffff
0xffff91409d54  1364  b.eq #+0x8 (addr 0xffff91409d5c)
0xffff91409d58  1368  ret
0xffff91409d5c  1372  sub csp, jssp, #0x8 (8)
0xffff91409d60  1376  str lr, [jssp, #-8]!
0xffff91409d64  1380  ldr x17, pc+516 (addr 0x0000ffff91409f68)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91409d68  1384  blr x17
0xffff91409d6c  1388  ldr lr, [jssp], #8
0xffff91409d70  1392  ret
0xffff91409d74  1396  and x3, x7, #0xfffffffffff00000
0xffff91409d78  1400  ldr x0, [x3, #104]
0xffff91409d7c  1404  subs x0, x0, #0x1 (1)
0xffff91409d80  1408  str x0, [x3, #104]
0xffff91409d84  1412  b.mi #+0x84 (addr 0xffff91409e08)
0xffff91409d88  1416  ubfx x16, x7, #8, #12
0xffff91409d8c  1420  and x3, x7, #0xfffffffffff00000
0xffff91409d90  1424  add x3, x3, x16, lsl #2
0xffff91409d94  1428  ubfx x0, x7, #3, #5
0xffff91409d98  1432  ldr x3, [x3, #360]
0xffff91409d9c  1436  lsr x3, x3, x0
0xffff91409da0  1440  tbz w3, #0, #+0x8 (addr 0xffff91409da8)
0xffff91409da4  1444  tbnz w3, #1, #+0xc (addr 0xffff91409db0)
0xffff91409da8  1448  ldp x1, x0, [jssp], #16
0xffff91409dac  1452  ret
0xffff91409db0  1456  ldr x3, [x4]
0xffff91409db4  1460  and x0, x3, #0xfffffffffff00000
0xffff91409db8  1464  ldr x0, [x0, #8]
0xffff91409dbc  1468  tbz w0, #6, #+0x18 (addr 0xffff91409dd4)
0xffff91409dc0  1472  and x0, x7, #0xfffffffffff00000
0xffff91409dc4  1476  ldr x0, [x0, #8]
0xffff91409dc8  1480  movz x16, #0x58
0xffff91409dcc  1484  tst x0, x16
0xffff91409dd0  1488  b.eq #+0x38 (addr 0xffff91409e08)
0xffff91409dd4  1492  sub csp, jssp, #0x10 (16)
0xffff91409dd8  1496  stp x7, x4, [jssp, #-16]!
0xffff91409ddc  1500  ubfx x16, x3, #8, #12
0xffff91409de0  1504  and x0, x3, #0xfffffffffff00000
0xffff91409de4  1508  add x0, x0, x16, lsl #2
0xffff91409de8  1512  ubfx x7, x3, #3, #5
0xffff91409dec  1516  ldr x4, [x0, #360]
0xffff91409df0  1520  lsr x4, x4, x7
0xffff91409df4  1524  tbz w4, #0, #+0x10 (addr 0xffff91409e04)
0xffff91409df8  1528  ldp x7, x4, [jssp], #16
0xffff91409dfc  1532  ldp x1, x0, [jssp], #16
0xffff91409e00  1536  ret
0xffff91409e04  1540  ldp x7, x4, [jssp], #16
0xffff91409e08  1544  sub csp, jssp, #0x78 (120)
0xffff91409e0c  1548  stp x14, x15, [jssp, #-32]!
0xffff91409e10  1552  stp x18, lr, [jssp, #16]
0xffff91409e14  1556  stp x10, x11, [jssp, #-32]!
0xffff91409e18  1560  stp x12, x13, [jssp, #16]
0xffff91409e1c  1564  stp x6, x7, [jssp, #-32]!
0xffff91409e20  1568  stp x8, x9, [jssp, #16]
0xffff91409e24  1572  stp x2, x4, [jssp, #-24]!
0xffff91409e28  1576  str x5, [jssp, #16]
0xffff91409e2c  1580  sub csp, jssp, #0xb0 (176)
0xffff91409e30  1584  stp d26, d27, [jssp, #-32]!
0xffff91409e34  1588  stp d28, d29, [jssp, #16]
0xffff91409e38  1592  stp d22, d23, [jssp, #-32]!
0xffff91409e3c  1596  stp d24, d25, [jssp, #16]
0xffff91409e40  1600  stp d18, d19, [jssp, #-32]!
0xffff91409e44  1604  stp d20, d21, [jssp, #16]
0xffff91409e48  1608  stp d6, d7, [jssp, #-32]!
0xffff91409e4c  1612  stp d16, d17, [jssp, #16]
0xffff91409e50  1616  stp d2, d3, [jssp, #-32]!
0xffff91409e54  1620  stp d4, d5, [jssp, #16]
0xffff91409e58  1624  stp d0, d1, [jssp, #-16]!
0xffff91409e5c  1628  mov x0, x7
0xffff91409e60  1632  mov x1, x4
0xffff91409e64  1636  ldr x2, pc+268 (addr 0x0000ffff91409f70)    ;; external reference (isolate)
0xffff91409e68  1640  ldr x16, pc+272 (addr 0x0000ffff91409f78)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91409e6c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff91409e70  1648  blr x16
0xffff91409e74  1652  ldp d2, d3, [jssp, #16]
0xffff91409e78  1656  ldp d0, d1, [jssp], #32
0xffff91409e7c  1660  ldp d6, d7, [jssp, #16]
0xffff91409e80  1664  ldp d4, d5, [jssp], #32
0xffff91409e84  1668  ldp d18, d19, [jssp, #16]
0xffff91409e88  1672  ldp d16, d17, [jssp], #32
0xffff91409e8c  1676  ldp d22, d23, [jssp, #16]
0xffff91409e90  1680  ldp d20, d21, [jssp], #32
0xffff91409e94  1684  ldp d26, d27, [jssp, #16]
0xffff91409e98  1688  ldp d24, d25, [jssp], #32
0xffff91409e9c  1692  ldp d28, d29, [jssp], #16
0xffff91409ea0  1696  ldp x5, x6, [jssp, #16]
0xffff91409ea4  1700  ldp x2, x4, [jssp], #32
0xffff91409ea8  1704  ldp x9, x10, [jssp, #16]
0xffff91409eac  1708  ldp x7, x8, [jssp], #32
0xffff91409eb0  1712  ldp x13, x14, [jssp, #16]
0xffff91409eb4  1716  ldp x11, x12, [jssp], #32
0xffff91409eb8  1720  ldr lr, [jssp, #16]
0xffff91409ebc  1724  ldp x15, x18, [jssp], #24
0xffff91409ec0  1728  ldp x1, x0, [jssp], #16
0xffff91409ec4  1732  ret
0xffff91409ec8  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff91409ecc  1740  d63f03e0       constant
0xffff91409ed0  1744  4117f8c0       constant
0xffff91409ed4  1748  00000000       constant
0xffff91409ed8  1752  914065a0       constant
0xffff91409edc  1756  0000ffff       constant
0xffff91409ee0  1760  4117f8c0       constant
0xffff91409ee4  1764  00000000       constant
0xffff91409ee8  1768  914065a0       constant
0xffff91409eec  1772  0000ffff       constant
0xffff91409ef0  1776  4117f8c0       constant
0xffff91409ef4  1780  00000000       constant
0xffff91409ef8  1784  914065a0       constant
0xffff91409efc  1788  0000ffff       constant
0xffff91409f00  1792  4117e2d0       constant
0xffff91409f04  1796  00000000       constant
0xffff91409f08  1800  00c2d958       constant
0xffff91409f0c  1804  00000000       constant
0xffff91409f10  1808  4117f8c0       constant
0xffff91409f14  1812  00000000       constant
0xffff91409f18  1816  914065a0       constant
0xffff91409f1c  1820  0000ffff       constant
0xffff91409f20  1824  4117e2d0       constant
0xffff91409f24  1828  00000000       constant
0xffff91409f28  1832  00c2d958       constant
0xffff91409f2c  1836  00000000       constant
0xffff91409f30  1840  4117f8c0       constant
0xffff91409f34  1844  00000000       constant
0xffff91409f38  1848  914065a0       constant
0xffff91409f3c  1852  0000ffff       constant
0xffff91409f40  1856  4117f8c0       constant
0xffff91409f44  1860  00000000       constant
0xffff91409f48  1864  914065a0       constant
0xffff91409f4c  1868  0000ffff       constant
0xffff91409f50  1872  4117e2d0       constant
0xffff91409f54  1876  00000000       constant
0xffff91409f58  1880  00c2d958       constant
0xffff91409f5c  1884  00000000       constant
0xffff91409f60  1888  4117f8c0       constant
0xffff91409f64  1892  00000000       constant
0xffff91409f68  1896  914065a0       constant
0xffff91409f6c  1900  0000ffff       constant
0xffff91409f70  1904  4117e2d0       constant
0xffff91409f74  1908  00000000       constant
0xffff91409f78  1912  00c2d958       constant
0xffff91409f7c  1916  00000000       constant


RelocInfo (size = 65)
0xffff91409808  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140982c  code target (STUB)  (0xffff914065a0)
0xffff914098a4  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914098c8  code target (STUB)  (0xffff914065a0)
0xffff91409908  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140992c  code target (STUB)  (0xffff914065a0)
0xffff9140999c  external reference (isolate)  (0x4117e2d0)
0xffff914099a0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff914099fc  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91409a20  code target (STUB)  (0xffff914065a0)
0xffff91409b00  external reference (isolate)  (0x4117e2d0)
0xffff91409b04  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91409bc8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91409bec  code target (STUB)  (0xffff914065a0)
0xffff91409c4c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91409c70  code target (STUB)  (0xffff914065a0)
0xffff91409ce0  external reference (isolate)  (0x4117e2d0)
0xffff91409ce4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91409d40  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91409d64  code target (STUB)  (0xffff914065a0)
0xffff91409e64  external reference (isolate)  (0x4117e2d0)
0xffff91409e68  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91409ec8  constant pool (size 184)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 690)
0xffff91409fe0     0  movz x16, #0xa00000000
0xffff91409fe4     4  sub csp, jssp, #0x10 (16)
0xffff91409fe8     8  stp fp, lr, [jssp, #-16]!
0xffff91409fec    12  mov fp, jssp
0xffff91409ff0    16  sub csp, jssp, #0x8 (8)
0xffff91409ff4    20  sub jssp, jssp, #0x8 (8)
0xffff91409ff8    24  stur x16, [fp, #-8]
0xffff91409ffc    28  movz w16, #0x257f
0xffff9140a000    32  cmp w0, w16, lsl #3
0xffff9140a004    36  b.hs #+0x234 (addr 0xffff9140a238)
0xffff9140a008    40  lsl x3, x0, #32
0xffff9140a00c    44  lsl w4, w0, #3
0xffff9140a010    48  add w4, w4, #0x10 (16)
0xffff9140a014    52  cmp w4, #0x96000 (614400)
0xffff9140a018    56  b.hs #+0x228 (addr 0xffff9140a240)
0xffff9140a01c    60  movz x6, #0xf2c0
0xffff9140a020    64  movk x6, #0x4117, lsl #16
0xffff9140a024    68  ldp x7, x5, [x6]
0xffff9140a028    72  adds x16, x7, #0x30 (48)
0xffff9140a02c    76  ccmp x16, x5, #nzCv, lo
0xffff9140a030    80  b.hi #+0x114 (addr 0xffff9140a144)
0xffff9140a034    84  str x16, [x6]
0xffff9140a038    88  orr x7, x7, #0x1
0xffff9140a03c    92  ldur x5, [x1, #23]
0xffff9140a040    96  stur x5, [x7, #-1]
0xffff9140a044   100  ldr x5, pc+404 (addr 0x0000ffff9140a1d8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a048   104  stur x5, [x7, #7]
0xffff9140a04c   108  ldr x5, pc+404 (addr 0x0000ffff9140a1e0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a050   112  stur x5, [x7, #15]
0xffff9140a054   116  stur x3, [x7, #23]
0xffff9140a058   120  add x5, x7, #0x20 (32)
0xffff9140a05c   124  ldr x6, pc+396 (addr 0x0000ffff9140a1e8)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9140a060   128  stur x6, [x5, #-1]
0xffff9140a064   132  stur x2, [x5, #7]
0xffff9140a068   136  ldur w5, [x2, #35]
0xffff9140a06c   140  add w5, w5, #0x1 (1)
0xffff9140a070   144  lsl x5, x5, #32
0xffff9140a074   148  stur x5, [x2, #31]
0xffff9140a078   152  sxtw x4, w4
0xffff9140a07c   156  movz x5, #0xf2c0
0xffff9140a080   160  movk x5, #0x4117, lsl #16
0xffff9140a084   164  ldp x8, x16, [x5]
0xffff9140a088   168  adds x6, x8, x4
0xffff9140a08c   172  ccmp x6, x16, #nzCv, lo
0xffff9140a090   176  b.hi #+0xf8 (addr 0xffff9140a188)
0xffff9140a094   180  str x6, [x5]
0xffff9140a098   184  orr x8, x8, #0x1
0xffff9140a09c   188  ldr x4, pc+340 (addr 0x0000ffff9140a1f0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9140a0a0   192  stur x4, [x8, #-1]
0xffff9140a0a4   196  stur x3, [x8, #7]
0xffff9140a0a8   200  mov x3, x8
0xffff9140a0ac   204  stur x3, [x7, #15]
0xffff9140a0b0   208  add x4, x7, #0xf (15)
0xffff9140a0b4   212  and x3, x7, #0xfffffffffff00000
0xffff9140a0b8   216  ldr x3, [x3, #8]
0xffff9140a0bc   220  tbz w3, #2, #+0xc (addr 0xffff9140a0c8)
0xffff9140a0c0   224  ldr x16, pc+312 (addr 0x0000ffff9140a1f8)    ;; code: STUB, RecordWriteStub, minor: 69735
0xffff9140a0c4   228  blr x16
0xffff9140a0c8   232  mov x3, x0
0xffff9140a0cc   236  cmp w3, #0x0 (0)
0xffff9140a0d0   240  b.le #+0x18 (addr 0xffff9140a0e8)
0xffff9140a0d4   244  sub w3, w3, #0x1 (1)
0xffff9140a0d8   248  ldr x4, pc+296 (addr 0x0000ffff9140a200)    ;; object: 0x49b04519 <the hole>
0xffff9140a0dc   252  add x5, x8, #0xf (15)
0xffff9140a0e0   256  str x4, [x5, w3, sxtw #3]
0xffff9140a0e4   260  b #-0x18 (addr 0xffff9140a0cc)
0xffff9140a0e8   264  ldr x3, [fp]
0xffff9140a0ec   268  ldur x4, [x3, #-8]
0xffff9140a0f0   272  movz x16, #0xe00000000
0xffff9140a0f4   276  cmp x4, x16
0xffff9140a0f8   280  csel x4, fp, x3, ne
0xffff9140a0fc   284  movz x3, #0x0
0xffff9140a100   288  cmp w0, w3
0xffff9140a104   292  b.le #+0x24 (addr 0xffff9140a128)
0xffff9140a108   296  sub w5, w0, w3
0xffff9140a10c   300  add w5, w5, #0x1 (1)
0xffff9140a110   304  ldr x5, [x4, w5, uxtw #3]
0xffff9140a114   308  tbnz w5, #0, #+0x134 (addr 0xffff9140a248)
0xffff9140a118   312  add x6, x8, #0xf (15)
0xffff9140a11c   316  str x5, [x6, w3, sxtw #3]
0xffff9140a120   320  add w3, w3, #0x1 (1)
0xffff9140a124   324  b #-0x24 (addr 0xffff9140a100)
0xffff9140a128   328  add w0, w0, #0x1 (1)
0xffff9140a12c   332  lsl x1, x0, #32
0xffff9140a130   336  mov x0, x7
0xffff9140a134   340  mov jssp, fp
0xffff9140a138   344  ldp fp, lr, [jssp], #16
0xffff9140a13c   348  add jssp, jssp, x1, lsr #29
0xffff9140a140   352  ret
0xffff9140a144   356  movz x7, #0x0
0xffff9140a148   360  mov x16, lr
0xffff9140a14c   364  ldr x17, pc+188 (addr 0x0000ffff9140a208)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140a150   368  blr x17
0xffff9140a154   372  movz x0, #0x3000000000
0xffff9140a158   376  movz x10, #0x0
0xffff9140a15c   380  sub csp, jssp, #0x10 (16)
0xffff9140a160   384  stp x10, x0, [jssp, #-16]!
0xffff9140a164   388  movz x0, #0x2
0xffff9140a168   392  movz x1, #0x5b88
0xffff9140a16c   396  movk x1, #0xe2, lsl #16
0xffff9140a170   400  ldr x16, pc+160 (addr 0x0000ffff9140a210)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140a174   404  blr x16
0xffff9140a178   408  str x0, [jssp, #56]
0xffff9140a17c   412  ldr x16, pc+156 (addr 0x0000ffff9140a218)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140a180   416  blr x16
0xffff9140a184   420  b #-0x148 (addr 0xffff9140a03c)
0xffff9140a188   424  movz x8, #0x0
0xffff9140a18c   428  mov x16, lr
0xffff9140a190   432  ldr x17, pc+144 (addr 0x0000ffff9140a220)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140a194   436  blr x17
0xffff9140a198   440  lsl x0, x4, #32
0xffff9140a19c   444  movz x10, #0x0
0xffff9140a1a0   448  sub csp, jssp, #0x10 (16)
0xffff9140a1a4   452  stp x10, x0, [jssp, #-16]!
0xffff9140a1a8   456  movz x0, #0x2
0xffff9140a1ac   460  movz x1, #0x5b88
0xffff9140a1b0   464  movk x1, #0xe2, lsl #16
0xffff9140a1b4   468  ldr x16, pc+116 (addr 0x0000ffff9140a228)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140a1b8   472  blr x16
0xffff9140a1bc   476  str x0, [jssp, #64]
0xffff9140a1c0   480  ldr x16, pc+112 (addr 0x0000ffff9140a230)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140a1c4   484  blr x16
0xffff9140a1c8   488  b #-0x12c (addr 0xffff9140a09c)
0xffff9140a1cc   492  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff9140a1d0   496  d63f03e0       constant
0xffff9140a1d4   500  d503201f       constant
0xffff9140a1d8   504  49b04201       constant
0xffff9140a1dc   508  00000000       constant
0xffff9140a1e0   512  49b04201       constant
0xffff9140a1e4   516  00000000       constant
0xffff9140a1e8   520  36405d81       constant
0xffff9140a1ec   524  00000000       constant
0xffff9140a1f0   528  36404259       constant
0xffff9140a1f4   532  00000000       constant
0xffff9140a1f8   536  91409800       constant
0xffff9140a1fc   540  0000ffff       constant
0xffff9140a200   544  49b04519       constant
0xffff9140a204   548  00000000       constant
0xffff9140a208   552  91406820       constant
0xffff9140a20c   556  0000ffff       constant
0xffff9140a210   560  91406260       constant
0xffff9140a214   564  0000ffff       constant
0xffff9140a218   568  914068e0       constant
0xffff9140a21c   572  0000ffff       constant
0xffff9140a220   576  91406820       constant
0xffff9140a224   580  0000ffff       constant
0xffff9140a228   584  91406260       constant
0xffff9140a22c   588  0000ffff       constant
0xffff9140a230   592  914068e0       constant
0xffff9140a234   596  0000ffff       constant
0xffff9140a238   600  movz x16, #0x0
0xffff9140a23c   604  bl #+0x14 (addr 0xffff9140a250)
0xffff9140a240   608  movz x16, #0x8
0xffff9140a244   612  bl #+0xc (addr 0xffff9140a250)
0xffff9140a248   616  movz x16, #0x10
0xffff9140a24c   620  bl #+0x4 (addr 0xffff9140a250)
0xffff9140a250   624  ldr x17, pc+24 (addr 0x0000ffff9140a268)    ;; lazy deoptimization bailout 0
0xffff9140a254   628  add x17, x17, x16
0xffff9140a258   632  br x17
0xffff9140a25c   636  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140a260   640  d63f03e0       constant
0xffff9140a264   644  d503201f       constant
0xffff9140a268   648  91206000       constant
0xffff9140a26c   652  0000ffff       constant


Safepoints (size = 34)
0xffff9140a178   408  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2
0xffff9140a1bc   476  000 | x1 | x2 | x7 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff9140a044  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a04c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a05c  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140a09c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140a0c0  code target (STUB)  (0xffff91409800)
0xffff9140a0d8  embedded object  (0x49b04519 <the hole>)
0xffff9140a14c  code target (STUB)  (0xffff91406820)
0xffff9140a170  code target (STUB)  (0xffff91406260)
0xffff9140a17c  code target (STUB)  (0xffff914068e0)
0xffff9140a190  code target (STUB)  (0xffff91406820)
0xffff9140a1b4  code target (STUB)  (0xffff91406260)
0xffff9140a1c0  code target (STUB)  (0xffff914068e0)
0xffff9140a1cc  constant pool (size 108)
0xffff9140a250  runtime entry
0xffff9140a25c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 690)
0xffff91409fe0     0  movz x16, #0xa00000000
0xffff91409fe4     4  sub csp, jssp, #0x10 (16)
0xffff91409fe8     8  stp fp, lr, [jssp, #-16]!
0xffff91409fec    12  mov fp, jssp
0xffff91409ff0    16  sub csp, jssp, #0x8 (8)
0xffff91409ff4    20  sub jssp, jssp, #0x8 (8)
0xffff91409ff8    24  stur x16, [fp, #-8]
0xffff91409ffc    28  movz w16, #0x257f
0xffff9140a000    32  cmp w0, w16, lsl #3
0xffff9140a004    36  b.hs #+0x234 (addr 0xffff9140a238)
0xffff9140a008    40  lsl x3, x0, #32
0xffff9140a00c    44  lsl w4, w0, #3
0xffff9140a010    48  add w4, w4, #0x10 (16)
0xffff9140a014    52  cmp w4, #0x96000 (614400)
0xffff9140a018    56  b.hs #+0x228 (addr 0xffff9140a240)
0xffff9140a01c    60  movz x6, #0xf2c0
0xffff9140a020    64  movk x6, #0x4117, lsl #16
0xffff9140a024    68  ldp x7, x5, [x6]
0xffff9140a028    72  adds x16, x7, #0x30 (48)
0xffff9140a02c    76  ccmp x16, x5, #nzCv, lo
0xffff9140a030    80  b.hi #+0x114 (addr 0xffff9140a144)
0xffff9140a034    84  str x16, [x6]
0xffff9140a038    88  orr x7, x7, #0x1
0xffff9140a03c    92  ldur x5, [x1, #23]
0xffff9140a040    96  stur x5, [x7, #-1]
0xffff9140a044   100  ldr x5, pc+404 (addr 0x0000ffff9140a1d8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a048   104  stur x5, [x7, #7]
0xffff9140a04c   108  ldr x5, pc+404 (addr 0x0000ffff9140a1e0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a050   112  stur x5, [x7, #15]
0xffff9140a054   116  stur x3, [x7, #23]
0xffff9140a058   120  add x5, x7, #0x20 (32)
0xffff9140a05c   124  ldr x6, pc+396 (addr 0x0000ffff9140a1e8)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9140a060   128  stur x6, [x5, #-1]
0xffff9140a064   132  stur x2, [x5, #7]
0xffff9140a068   136  ldur w5, [x2, #35]
0xffff9140a06c   140  add w5, w5, #0x1 (1)
0xffff9140a070   144  lsl x5, x5, #32
0xffff9140a074   148  stur x5, [x2, #31]
0xffff9140a078   152  sxtw x4, w4
0xffff9140a07c   156  movz x5, #0xf2c0
0xffff9140a080   160  movk x5, #0x4117, lsl #16
0xffff9140a084   164  ldp x8, x16, [x5]
0xffff9140a088   168  adds x6, x8, x4
0xffff9140a08c   172  ccmp x6, x16, #nzCv, lo
0xffff9140a090   176  b.hi #+0xf8 (addr 0xffff9140a188)
0xffff9140a094   180  str x6, [x5]
0xffff9140a098   184  orr x8, x8, #0x1
0xffff9140a09c   188  ldr x4, pc+340 (addr 0x0000ffff9140a1f0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9140a0a0   192  stur x4, [x8, #-1]
0xffff9140a0a4   196  stur x3, [x8, #7]
0xffff9140a0a8   200  mov x3, x8
0xffff9140a0ac   204  stur x3, [x7, #15]
0xffff9140a0b0   208  add x4, x7, #0xf (15)
0xffff9140a0b4   212  and x3, x7, #0xfffffffffff00000
0xffff9140a0b8   216  ldr x3, [x3, #8]
0xffff9140a0bc   220  tbz w3, #2, #+0xc (addr 0xffff9140a0c8)
0xffff9140a0c0   224  ldr x16, pc+312 (addr 0x0000ffff9140a1f8)    ;; code: STUB, RecordWriteStub, minor: 69735
0xffff9140a0c4   228  blr x16
0xffff9140a0c8   232  mov x3, x0
0xffff9140a0cc   236  cmp w3, #0x0 (0)
0xffff9140a0d0   240  b.le #+0x18 (addr 0xffff9140a0e8)
0xffff9140a0d4   244  sub w3, w3, #0x1 (1)
0xffff9140a0d8   248  ldr x4, pc+296 (addr 0x0000ffff9140a200)    ;; object: 0x49b04519 <the hole>
0xffff9140a0dc   252  add x5, x8, #0xf (15)
0xffff9140a0e0   256  str x4, [x5, w3, sxtw #3]
0xffff9140a0e4   260  b #-0x18 (addr 0xffff9140a0cc)
0xffff9140a0e8   264  ldr x3, [fp]
0xffff9140a0ec   268  ldur x4, [x3, #-8]
0xffff9140a0f0   272  movz x16, #0xe00000000
0xffff9140a0f4   276  cmp x4, x16
0xffff9140a0f8   280  csel x4, fp, x3, ne
0xffff9140a0fc   284  movz x3, #0x0
0xffff9140a100   288  cmp w0, w3
0xffff9140a104   292  b.le #+0x24 (addr 0xffff9140a128)
0xffff9140a108   296  sub w5, w0, w3
0xffff9140a10c   300  add w5, w5, #0x1 (1)
0xffff9140a110   304  ldr x5, [x4, w5, uxtw #3]
0xffff9140a114   308  tbnz w5, #0, #+0x134 (addr 0xffff9140a248)
0xffff9140a118   312  add x6, x8, #0xf (15)
0xffff9140a11c   316  str x5, [x6, w3, sxtw #3]
0xffff9140a120   320  add w3, w3, #0x1 (1)
0xffff9140a124   324  b #-0x24 (addr 0xffff9140a100)
0xffff9140a128   328  add w0, w0, #0x1 (1)
0xffff9140a12c   332  lsl x1, x0, #32
0xffff9140a130   336  mov x0, x7
0xffff9140a134   340  mov jssp, fp
0xffff9140a138   344  ldp fp, lr, [jssp], #16
0xffff9140a13c   348  add jssp, jssp, x1, lsr #29
0xffff9140a140   352  ret
0xffff9140a144   356  movz x7, #0x0
0xffff9140a148   360  mov x16, lr
0xffff9140a14c   364  ldr x17, pc+188 (addr 0x0000ffff9140a208)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140a150   368  blr x17
0xffff9140a154   372  movz x0, #0x3000000000
0xffff9140a158   376  movz x10, #0x0
0xffff9140a15c   380  sub csp, jssp, #0x10 (16)
0xffff9140a160   384  stp x10, x0, [jssp, #-16]!
0xffff9140a164   388  movz x0, #0x2
0xffff9140a168   392  movz x1, #0x5b88
0xffff9140a16c   396  movk x1, #0xe2, lsl #16
0xffff9140a170   400  ldr x16, pc+160 (addr 0x0000ffff9140a210)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140a174   404  blr x16
0xffff9140a178   408  str x0, [jssp, #56]
0xffff9140a17c   412  ldr x16, pc+156 (addr 0x0000ffff9140a218)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140a180   416  blr x16
0xffff9140a184   420  b #-0x148 (addr 0xffff9140a03c)
0xffff9140a188   424  movz x8, #0x0
0xffff9140a18c   428  mov x16, lr
0xffff9140a190   432  ldr x17, pc+144 (addr 0x0000ffff9140a220)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140a194   436  blr x17
0xffff9140a198   440  lsl x0, x4, #32
0xffff9140a19c   444  movz x10, #0x0
0xffff9140a1a0   448  sub csp, jssp, #0x10 (16)
0xffff9140a1a4   452  stp x10, x0, [jssp, #-16]!
0xffff9140a1a8   456  movz x0, #0x2
0xffff9140a1ac   460  movz x1, #0x5b88
0xffff9140a1b0   464  movk x1, #0xe2, lsl #16
0xffff9140a1b4   468  ldr x16, pc+116 (addr 0x0000ffff9140a228)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140a1b8   472  blr x16
0xffff9140a1bc   476  str x0, [jssp, #64]
0xffff9140a1c0   480  ldr x16, pc+112 (addr 0x0000ffff9140a230)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140a1c4   484  blr x16
0xffff9140a1c8   488  b #-0x12c (addr 0xffff9140a09c)
0xffff9140a1cc   492  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff9140a1d0   496  d63f03e0       constant
0xffff9140a1d4   500  d503201f       constant
0xffff9140a1d8   504  49b04201       constant
0xffff9140a1dc   508  00000000       constant
0xffff9140a1e0   512  49b04201       constant
0xffff9140a1e4   516  00000000       constant
0xffff9140a1e8   520  36405d81       constant
0xffff9140a1ec   524  00000000       constant
0xffff9140a1f0   528  36404259       constant
0xffff9140a1f4   532  00000000       constant
0xffff9140a1f8   536  91409800       constant
0xffff9140a1fc   540  0000ffff       constant
0xffff9140a200   544  49b04519       constant
0xffff9140a204   548  00000000       constant
0xffff9140a208   552  91406820       constant
0xffff9140a20c   556  0000ffff       constant
0xffff9140a210   560  91406260       constant
0xffff9140a214   564  0000ffff       constant
0xffff9140a218   568  914068e0       constant
0xffff9140a21c   572  0000ffff       constant
0xffff9140a220   576  91406820       constant
0xffff9140a224   580  0000ffff       constant
0xffff9140a228   584  91406260       constant
0xffff9140a22c   588  0000ffff       constant
0xffff9140a230   592  914068e0       constant
0xffff9140a234   596  0000ffff       constant
0xffff9140a238   600  movz x16, #0x0
0xffff9140a23c   604  bl #+0x14 (addr 0xffff9140a250)
0xffff9140a240   608  movz x16, #0x8
0xffff9140a244   612  bl #+0xc (addr 0xffff9140a250)
0xffff9140a248   616  movz x16, #0x10
0xffff9140a24c   620  bl #+0x4 (addr 0xffff9140a250)
0xffff9140a250   624  ldr x17, pc+24 (addr 0x0000ffff9140a268)    ;; lazy deoptimization bailout 0
0xffff9140a254   628  add x17, x17, x16
0xffff9140a258   632  br x17
0xffff9140a25c   636  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140a260   640  d63f03e0       constant
0xffff9140a264   644  d503201f       constant
0xffff9140a268   648  91206000       constant
0xffff9140a26c   652  0000ffff       constant


Safepoints (size = 34)
0xffff9140a178   408  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2
0xffff9140a1bc   476  000 | x1 | x2 | x7 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff9140a044  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a04c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a05c  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140a09c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140a0c0  code target (STUB)  (0xffff91409800)
0xffff9140a0d8  embedded object  (0x49b04519 <the hole>)
0xffff9140a14c  code target (STUB)  (0xffff91406820)
0xffff9140a170  code target (STUB)  (0xffff91406260)
0xffff9140a17c  code target (STUB)  (0xffff914068e0)
0xffff9140a190  code target (STUB)  (0xffff91406820)
0xffff9140a1b4  code target (STUB)  (0xffff91406260)
0xffff9140a1c0  code target (STUB)  (0xffff914068e0)
0xffff9140a1cc  constant pool (size 108)
0xffff9140a250  runtime entry
0xffff9140a25c  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 493)
0xffff9140a300     0  movz x16, #0xa00000000
0xffff9140a304     4  sub csp, jssp, #0x10 (16)
0xffff9140a308     8  stp fp, lr, [jssp, #-16]!
0xffff9140a30c    12  mov fp, jssp
0xffff9140a310    16  sub csp, jssp, #0x8 (8)
0xffff9140a314    20  sub jssp, jssp, #0x8 (8)
0xffff9140a318    24  stur x16, [fp, #-8]
0xffff9140a31c    28  movz w16, #0x257f
0xffff9140a320    32  cmp w0, w16, lsl #3
0xffff9140a324    36  b.hs #+0x17c (addr 0xffff9140a4a0)
0xffff9140a328    40  lsl x3, x0, #32
0xffff9140a32c    44  lsl w4, w0, #3
0xffff9140a330    48  add w4, w4, #0x10 (16)
0xffff9140a334    52  cmp w4, #0x96000 (614400)
0xffff9140a338    56  b.hs #+0x170 (addr 0xffff9140a4a8)
0xffff9140a33c    60  add w4, w4, #0x20 (32)
0xffff9140a340    64  sxtw x4, w4
0xffff9140a344    68  movz x5, #0xf2c0
0xffff9140a348    72  movk x5, #0x4117, lsl #16
0xffff9140a34c    76  ldp x7, x16, [x5]
0xffff9140a350    80  adds x6, x7, x4
0xffff9140a354    84  ccmp x6, x16, #nzCv, lo
0xffff9140a358    88  b.hi #+0xc0 (addr 0xffff9140a418)
0xffff9140a35c    92  str x6, [x5]
0xffff9140a360    96  orr x7, x7, #0x1
0xffff9140a364   100  movz w4, #0x0
0xffff9140a368   104  stur x4, [x7, #31]
0xffff9140a36c   108  ldur x4, [x1, #23]
0xffff9140a370   112  stur x4, [x7, #-1]
0xffff9140a374   116  ldr x4, pc+244 (addr 0x0000ffff9140a468)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a378   120  stur x4, [x7, #7]
0xffff9140a37c   124  ldr x4, pc+244 (addr 0x0000ffff9140a470)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a380   128  stur x4, [x7, #15]
0xffff9140a384   132  stur x3, [x7, #23]
0xffff9140a388   136  add x4, x7, #0x20 (32)
0xffff9140a38c   140  ldr x5, pc+236 (addr 0x0000ffff9140a478)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9140a390   144  stur x5, [x4, #-1]
0xffff9140a394   148  stur x3, [x4, #7]
0xffff9140a398   152  stur x4, [x7, #15]
0xffff9140a39c   156  mov x3, x0
0xffff9140a3a0   160  cmp w3, #0x0 (0)
0xffff9140a3a4   164  b.le #+0x18 (addr 0xffff9140a3bc)
0xffff9140a3a8   168  sub w3, w3, #0x1 (1)
0xffff9140a3ac   172  ldr x5, pc+212 (addr 0x0000ffff9140a480)    ;; object: 0x49b04519 <the hole>
0xffff9140a3b0   176  add x6, x4, #0xf (15)
0xffff9140a3b4   180  str x5, [x6, w3, sxtw #3]
0xffff9140a3b8   184  b #-0x18 (addr 0xffff9140a3a0)
0xffff9140a3bc   188  ldr x3, [fp]
0xffff9140a3c0   192  ldur x5, [x3, #-8]
0xffff9140a3c4   196  movz x16, #0xe00000000
0xffff9140a3c8   200  cmp x5, x16
0xffff9140a3cc   204  csel x5, fp, x3, ne
0xffff9140a3d0   208  movz x3, #0x0
0xffff9140a3d4   212  cmp w0, w3
0xffff9140a3d8   216  b.le #+0x24 (addr 0xffff9140a3fc)
0xffff9140a3dc   220  sub w6, w0, w3
0xffff9140a3e0   224  add w6, w6, #0x1 (1)
0xffff9140a3e4   228  ldr x6, [x5, w6, uxtw #3]
0xffff9140a3e8   232  tbnz w6, #0, #+0xc8 (addr 0xffff9140a4b0)
0xffff9140a3ec   236  add x8, x4, #0xf (15)
0xffff9140a3f0   240  str x6, [x8, w3, sxtw #3]
0xffff9140a3f4   244  add w3, w3, #0x1 (1)
0xffff9140a3f8   248  b #-0x24 (addr 0xffff9140a3d4)
0xffff9140a3fc   252  add w0, w0, #0x1 (1)
0xffff9140a400   256  lsl x1, x0, #32
0xffff9140a404   260  mov x0, x7
0xffff9140a408   264  mov jssp, fp
0xffff9140a40c   268  ldp fp, lr, [jssp], #16
0xffff9140a410   272  add jssp, jssp, x1, lsr #29
0xffff9140a414   276  ret
0xffff9140a418   280  movz x7, #0x0
0xffff9140a41c   284  mov x16, lr
0xffff9140a420   288  ldr x17, pc+104 (addr 0x0000ffff9140a488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140a424   292  blr x17
0xffff9140a428   296  lsl x0, x4, #32
0xffff9140a42c   300  movz x10, #0x0
0xffff9140a430   304  sub csp, jssp, #0x10 (16)
0xffff9140a434   308  stp x10, x0, [jssp, #-16]!
0xffff9140a438   312  movz x0, #0x2
0xffff9140a43c   316  movz x1, #0x5b88
0xffff9140a440   320  movk x1, #0xe2, lsl #16
0xffff9140a444   324  ldr x16, pc+76 (addr 0x0000ffff9140a490)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140a448   328  blr x16
0xffff9140a44c   332  str x0, [jssp, #56]
0xffff9140a450   336  ldr x16, pc+72 (addr 0x0000ffff9140a498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140a454   340  blr x16
0xffff9140a458   344  b #-0xf4 (addr 0xffff9140a364)
0xffff9140a45c   348  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff9140a460   352  d63f03e0       constant
0xffff9140a464   356  d503201f       constant
0xffff9140a468   360  49b04201       constant
0xffff9140a46c   364  00000000       constant
0xffff9140a470   368  49b04201       constant
0xffff9140a474   372  00000000       constant
0xffff9140a478   376  36404259       constant
0xffff9140a47c   380  00000000       constant
0xffff9140a480   384  49b04519       constant
0xffff9140a484   388  00000000       constant
0xffff9140a488   392  91406820       constant
0xffff9140a48c   396  0000ffff       constant
0xffff9140a490   400  91406260       constant
0xffff9140a494   404  0000ffff       constant
0xffff9140a498   408  914068e0       constant
0xffff9140a49c   412  0000ffff       constant
0xffff9140a4a0   416  movz x16, #0x0
0xffff9140a4a4   420  bl #+0x14 (addr 0xffff9140a4b8)
0xffff9140a4a8   424  movz x16, #0x8
0xffff9140a4ac   428  bl #+0xc (addr 0xffff9140a4b8)
0xffff9140a4b0   432  movz x16, #0x10
0xffff9140a4b4   436  bl #+0x4 (addr 0xffff9140a4b8)
0xffff9140a4b8   440  ldr x17, pc+24 (addr 0x0000ffff9140a4d0)    ;; lazy deoptimization bailout 0
0xffff9140a4bc   444  add x17, x17, x16
0xffff9140a4c0   448  br x17
0xffff9140a4c4   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140a4c8   456  d63f03e0       constant
0xffff9140a4cc   460  d503201f       constant
0xffff9140a4d0   464  91206000       constant
0xffff9140a4d4   468  0000ffff       constant


Safepoints (size = 21)
0xffff9140a44c   332  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff9140a374  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a37c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a38c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140a3ac  embedded object  (0x49b04519 <the hole>)
0xffff9140a420  code target (STUB)  (0xffff91406820)
0xffff9140a444  code target (STUB)  (0xffff91406260)
0xffff9140a450  code target (STUB)  (0xffff914068e0)
0xffff9140a45c  constant pool (size 68)
0xffff9140a4b8  runtime entry
0xffff9140a4c4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 493)
0xffff9140a300     0  movz x16, #0xa00000000
0xffff9140a304     4  sub csp, jssp, #0x10 (16)
0xffff9140a308     8  stp fp, lr, [jssp, #-16]!
0xffff9140a30c    12  mov fp, jssp
0xffff9140a310    16  sub csp, jssp, #0x8 (8)
0xffff9140a314    20  sub jssp, jssp, #0x8 (8)
0xffff9140a318    24  stur x16, [fp, #-8]
0xffff9140a31c    28  movz w16, #0x257f
0xffff9140a320    32  cmp w0, w16, lsl #3
0xffff9140a324    36  b.hs #+0x17c (addr 0xffff9140a4a0)
0xffff9140a328    40  lsl x3, x0, #32
0xffff9140a32c    44  lsl w4, w0, #3
0xffff9140a330    48  add w4, w4, #0x10 (16)
0xffff9140a334    52  cmp w4, #0x96000 (614400)
0xffff9140a338    56  b.hs #+0x170 (addr 0xffff9140a4a8)
0xffff9140a33c    60  add w4, w4, #0x20 (32)
0xffff9140a340    64  sxtw x4, w4
0xffff9140a344    68  movz x5, #0xf2c0
0xffff9140a348    72  movk x5, #0x4117, lsl #16
0xffff9140a34c    76  ldp x7, x16, [x5]
0xffff9140a350    80  adds x6, x7, x4
0xffff9140a354    84  ccmp x6, x16, #nzCv, lo
0xffff9140a358    88  b.hi #+0xc0 (addr 0xffff9140a418)
0xffff9140a35c    92  str x6, [x5]
0xffff9140a360    96  orr x7, x7, #0x1
0xffff9140a364   100  movz w4, #0x0
0xffff9140a368   104  stur x4, [x7, #31]
0xffff9140a36c   108  ldur x4, [x1, #23]
0xffff9140a370   112  stur x4, [x7, #-1]
0xffff9140a374   116  ldr x4, pc+244 (addr 0x0000ffff9140a468)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a378   120  stur x4, [x7, #7]
0xffff9140a37c   124  ldr x4, pc+244 (addr 0x0000ffff9140a470)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a380   128  stur x4, [x7, #15]
0xffff9140a384   132  stur x3, [x7, #23]
0xffff9140a388   136  add x4, x7, #0x20 (32)
0xffff9140a38c   140  ldr x5, pc+236 (addr 0x0000ffff9140a478)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9140a390   144  stur x5, [x4, #-1]
0xffff9140a394   148  stur x3, [x4, #7]
0xffff9140a398   152  stur x4, [x7, #15]
0xffff9140a39c   156  mov x3, x0
0xffff9140a3a0   160  cmp w3, #0x0 (0)
0xffff9140a3a4   164  b.le #+0x18 (addr 0xffff9140a3bc)
0xffff9140a3a8   168  sub w3, w3, #0x1 (1)
0xffff9140a3ac   172  ldr x5, pc+212 (addr 0x0000ffff9140a480)    ;; object: 0x49b04519 <the hole>
0xffff9140a3b0   176  add x6, x4, #0xf (15)
0xffff9140a3b4   180  str x5, [x6, w3, sxtw #3]
0xffff9140a3b8   184  b #-0x18 (addr 0xffff9140a3a0)
0xffff9140a3bc   188  ldr x3, [fp]
0xffff9140a3c0   192  ldur x5, [x3, #-8]
0xffff9140a3c4   196  movz x16, #0xe00000000
0xffff9140a3c8   200  cmp x5, x16
0xffff9140a3cc   204  csel x5, fp, x3, ne
0xffff9140a3d0   208  movz x3, #0x0
0xffff9140a3d4   212  cmp w0, w3
0xffff9140a3d8   216  b.le #+0x24 (addr 0xffff9140a3fc)
0xffff9140a3dc   220  sub w6, w0, w3
0xffff9140a3e0   224  add w6, w6, #0x1 (1)
0xffff9140a3e4   228  ldr x6, [x5, w6, uxtw #3]
0xffff9140a3e8   232  tbnz w6, #0, #+0xc8 (addr 0xffff9140a4b0)
0xffff9140a3ec   236  add x8, x4, #0xf (15)
0xffff9140a3f0   240  str x6, [x8, w3, sxtw #3]
0xffff9140a3f4   244  add w3, w3, #0x1 (1)
0xffff9140a3f8   248  b #-0x24 (addr 0xffff9140a3d4)
0xffff9140a3fc   252  add w0, w0, #0x1 (1)
0xffff9140a400   256  lsl x1, x0, #32
0xffff9140a404   260  mov x0, x7
0xffff9140a408   264  mov jssp, fp
0xffff9140a40c   268  ldp fp, lr, [jssp], #16
0xffff9140a410   272  add jssp, jssp, x1, lsr #29
0xffff9140a414   276  ret
0xffff9140a418   280  movz x7, #0x0
0xffff9140a41c   284  mov x16, lr
0xffff9140a420   288  ldr x17, pc+104 (addr 0x0000ffff9140a488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140a424   292  blr x17
0xffff9140a428   296  lsl x0, x4, #32
0xffff9140a42c   300  movz x10, #0x0
0xffff9140a430   304  sub csp, jssp, #0x10 (16)
0xffff9140a434   308  stp x10, x0, [jssp, #-16]!
0xffff9140a438   312  movz x0, #0x2
0xffff9140a43c   316  movz x1, #0x5b88
0xffff9140a440   320  movk x1, #0xe2, lsl #16
0xffff9140a444   324  ldr x16, pc+76 (addr 0x0000ffff9140a490)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140a448   328  blr x16
0xffff9140a44c   332  str x0, [jssp, #56]
0xffff9140a450   336  ldr x16, pc+72 (addr 0x0000ffff9140a498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140a454   340  blr x16
0xffff9140a458   344  b #-0xf4 (addr 0xffff9140a364)
0xffff9140a45c   348  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff9140a460   352  d63f03e0       constant
0xffff9140a464   356  d503201f       constant
0xffff9140a468   360  49b04201       constant
0xffff9140a46c   364  00000000       constant
0xffff9140a470   368  49b04201       constant
0xffff9140a474   372  00000000       constant
0xffff9140a478   376  36404259       constant
0xffff9140a47c   380  00000000       constant
0xffff9140a480   384  49b04519       constant
0xffff9140a484   388  00000000       constant
0xffff9140a488   392  91406820       constant
0xffff9140a48c   396  0000ffff       constant
0xffff9140a490   400  91406260       constant
0xffff9140a494   404  0000ffff       constant
0xffff9140a498   408  914068e0       constant
0xffff9140a49c   412  0000ffff       constant
0xffff9140a4a0   416  movz x16, #0x0
0xffff9140a4a4   420  bl #+0x14 (addr 0xffff9140a4b8)
0xffff9140a4a8   424  movz x16, #0x8
0xffff9140a4ac   428  bl #+0xc (addr 0xffff9140a4b8)
0xffff9140a4b0   432  movz x16, #0x10
0xffff9140a4b4   436  bl #+0x4 (addr 0xffff9140a4b8)
0xffff9140a4b8   440  ldr x17, pc+24 (addr 0x0000ffff9140a4d0)    ;; lazy deoptimization bailout 0
0xffff9140a4bc   444  add x17, x17, x16
0xffff9140a4c0   448  br x17
0xffff9140a4c4   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140a4c8   456  d63f03e0       constant
0xffff9140a4cc   460  d503201f       constant
0xffff9140a4d0   464  91206000       constant
0xffff9140a4d4   468  0000ffff       constant


Safepoints (size = 21)
0xffff9140a44c   332  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff9140a374  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a37c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a38c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140a3ac  embedded object  (0x49b04519 <the hole>)
0xffff9140a420  code target (STUB)  (0xffff91406820)
0xffff9140a444  code target (STUB)  (0xffff91406260)
0xffff9140a450  code target (STUB)  (0xffff914068e0)
0xffff9140a45c  constant pool (size 68)
0xffff9140a4b8  runtime entry
0xffff9140a4c4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 698)
0xffff9140a560     0  movz x16, #0xa00000000
0xffff9140a564     4  sub csp, jssp, #0x10 (16)
0xffff9140a568     8  stp fp, lr, [jssp, #-16]!
0xffff9140a56c    12  mov fp, jssp
0xffff9140a570    16  sub csp, jssp, #0x8 (8)
0xffff9140a574    20  sub jssp, jssp, #0x8 (8)
0xffff9140a578    24  stur x16, [fp, #-8]
0xffff9140a57c    28  movz w16, #0x257f
0xffff9140a580    32  cmp w0, w16, lsl #3
0xffff9140a584    36  b.hs #+0x23c (addr 0xffff9140a7c0)
0xffff9140a588    40  lsl x3, x0, #32
0xffff9140a58c    44  lsl w4, w0, #3
0xffff9140a590    48  add w4, w4, #0x10 (16)
0xffff9140a594    52  cmp w4, #0x96000 (614400)
0xffff9140a598    56  b.hs #+0x230 (addr 0xffff9140a7c8)
0xffff9140a59c    60  movz x6, #0xf2c0
0xffff9140a5a0    64  movk x6, #0x4117, lsl #16
0xffff9140a5a4    68  ldp x7, x5, [x6]
0xffff9140a5a8    72  adds x16, x7, #0x30 (48)
0xffff9140a5ac    76  ccmp x16, x5, #nzCv, lo
0xffff9140a5b0    80  b.hi #+0x120 (addr 0xffff9140a6d0)
0xffff9140a5b4    84  str x16, [x6]
0xffff9140a5b8    88  orr x7, x7, #0x1
0xffff9140a5bc    92  ldur x5, [x1, #39]
0xffff9140a5c0    96  ldur x5, [x5, #39]
0xffff9140a5c4   100  movz x16, #0x17f
0xffff9140a5c8   104  ldr x5, [x5, x16]
0xffff9140a5cc   108  stur x5, [x7, #-1]
0xffff9140a5d0   112  ldr x5, pc+400 (addr 0x0000ffff9140a760)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a5d4   116  stur x5, [x7, #7]
0xffff9140a5d8   120  ldr x5, pc+400 (addr 0x0000ffff9140a768)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a5dc   124  stur x5, [x7, #15]
0xffff9140a5e0   128  stur x3, [x7, #23]
0xffff9140a5e4   132  add x5, x7, #0x20 (32)
0xffff9140a5e8   136  ldr x6, pc+392 (addr 0x0000ffff9140a770)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9140a5ec   140  stur x6, [x5, #-1]
0xffff9140a5f0   144  stur x2, [x5, #7]
0xffff9140a5f4   148  ldur w5, [x2, #35]
0xffff9140a5f8   152  add w5, w5, #0x1 (1)
0xffff9140a5fc   156  lsl x5, x5, #32
0xffff9140a600   160  stur x5, [x2, #31]
0xffff9140a604   164  sxtw x4, w4
0xffff9140a608   168  movz x5, #0xf2c0
0xffff9140a60c   172  movk x5, #0x4117, lsl #16
0xffff9140a610   176  ldp x8, x16, [x5]
0xffff9140a614   180  adds x6, x8, x4
0xffff9140a618   184  ccmp x6, x16, #nzCv, lo
0xffff9140a61c   188  b.hi #+0xf8 (addr 0xffff9140a714)
0xffff9140a620   192  str x6, [x5]
0xffff9140a624   196  orr x8, x8, #0x1
0xffff9140a628   200  ldr x4, pc+336 (addr 0x0000ffff9140a778)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9140a62c   204  stur x4, [x8, #-1]
0xffff9140a630   208  stur x3, [x8, #7]
0xffff9140a634   212  mov x3, x8
0xffff9140a638   216  stur x3, [x7, #15]
0xffff9140a63c   220  add x4, x7, #0xf (15)
0xffff9140a640   224  and x3, x7, #0xfffffffffff00000
0xffff9140a644   228  ldr x3, [x3, #8]
0xffff9140a648   232  tbz w3, #2, #+0xc (addr 0xffff9140a654)
0xffff9140a64c   236  ldr x16, pc+308 (addr 0x0000ffff9140a780)    ;; code: STUB, RecordWriteStub, minor: 69735
0xffff9140a650   240  blr x16
0xffff9140a654   244  mov x3, x0
0xffff9140a658   248  cmp w3, #0x0 (0)
0xffff9140a65c   252  b.le #+0x18 (addr 0xffff9140a674)
0xffff9140a660   256  sub w3, w3, #0x1 (1)
0xffff9140a664   260  ldr x4, pc+292 (addr 0x0000ffff9140a788)    ;; object: 0x49b04519 <the hole>
0xffff9140a668   264  add x5, x8, #0xf (15)
0xffff9140a66c   268  str x4, [x5, w3, sxtw #3]
0xffff9140a670   272  b #-0x18 (addr 0xffff9140a658)
0xffff9140a674   276  ldr x3, [fp]
0xffff9140a678   280  ldur x4, [x3, #-8]
0xffff9140a67c   284  movz x16, #0xe00000000
0xffff9140a680   288  cmp x4, x16
0xffff9140a684   292  csel x4, fp, x3, ne
0xffff9140a688   296  movz x3, #0x0
0xffff9140a68c   300  cmp w0, w3
0xffff9140a690   304  b.le #+0x24 (addr 0xffff9140a6b4)
0xffff9140a694   308  sub w5, w0, w3
0xffff9140a698   312  add w5, w5, #0x1 (1)
0xffff9140a69c   316  ldr x5, [x4, w5, uxtw #3]
0xffff9140a6a0   320  tbnz w5, #0, #+0x130 (addr 0xffff9140a7d0)
0xffff9140a6a4   324  add x6, x8, #0xf (15)
0xffff9140a6a8   328  str x5, [x6, w3, sxtw #3]
0xffff9140a6ac   332  add w3, w3, #0x1 (1)
0xffff9140a6b0   336  b #-0x24 (addr 0xffff9140a68c)
0xffff9140a6b4   340  add w0, w0, #0x1 (1)
0xffff9140a6b8   344  lsl x1, x0, #32
0xffff9140a6bc   348  mov x0, x7
0xffff9140a6c0   352  mov jssp, fp
0xffff9140a6c4   356  ldp fp, lr, [jssp], #16
0xffff9140a6c8   360  add jssp, jssp, x1, lsr #29
0xffff9140a6cc   364  ret
0xffff9140a6d0   368  movz x7, #0x0
0xffff9140a6d4   372  mov x16, lr
0xffff9140a6d8   376  ldr x17, pc+184 (addr 0x0000ffff9140a790)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140a6dc   380  blr x17
0xffff9140a6e0   384  movz x0, #0x3000000000
0xffff9140a6e4   388  movz x10, #0x0
0xffff9140a6e8   392  sub csp, jssp, #0x10 (16)
0xffff9140a6ec   396  stp x10, x0, [jssp, #-16]!
0xffff9140a6f0   400  movz x0, #0x2
0xffff9140a6f4   404  movz x1, #0x5b88
0xffff9140a6f8   408  movk x1, #0xe2, lsl #16
0xffff9140a6fc   412  ldr x16, pc+156 (addr 0x0000ffff9140a798)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140a700   416  blr x16
0xffff9140a704   420  str x0, [jssp, #56]
0xffff9140a708   424  ldr x16, pc+152 (addr 0x0000ffff9140a7a0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140a70c   428  blr x16
0xffff9140a710   432  b #-0x154 (addr 0xffff9140a5bc)
0xffff9140a714   436  movz x8, #0x0
0xffff9140a718   440  mov x16, lr
0xffff9140a71c   444  ldr x17, pc+140 (addr 0x0000ffff9140a7a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140a720   448  blr x17
0xffff9140a724   452  lsl x0, x4, #32
0xffff9140a728   456  movz x10, #0x0
0xffff9140a72c   460  sub csp, jssp, #0x10 (16)
0xffff9140a730   464  stp x10, x0, [jssp, #-16]!
0xffff9140a734   468  movz x0, #0x2
0xffff9140a738   472  movz x1, #0x5b88
0xffff9140a73c   476  movk x1, #0xe2, lsl #16
0xffff9140a740   480  ldr x16, pc+112 (addr 0x0000ffff9140a7b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140a744   484  blr x16
0xffff9140a748   488  str x0, [jssp, #64]
0xffff9140a74c   492  ldr x16, pc+108 (addr 0x0000ffff9140a7b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140a750   496  blr x16
0xffff9140a754   500  b #-0x12c (addr 0xffff9140a628)
0xffff9140a758   504  5800033f       constant pool begin (num_const = 25)    ;; constant pool
0xffff9140a75c   508  d63f03e0       constant
0xffff9140a760   512  49b04201       constant
0xffff9140a764   516  00000000       constant
0xffff9140a768   520  49b04201       constant
0xffff9140a76c   524  00000000       constant
0xffff9140a770   528  36405d81       constant
0xffff9140a774   532  00000000       constant
0xffff9140a778   536  36404259       constant
0xffff9140a77c   540  00000000       constant
0xffff9140a780   544  91409800       constant
0xffff9140a784   548  0000ffff       constant
0xffff9140a788   552  49b04519       constant
0xffff9140a78c   556  00000000       constant
0xffff9140a790   560  91406820       constant
0xffff9140a794   564  0000ffff       constant
0xffff9140a798   568  91406260       constant
0xffff9140a79c   572  0000ffff       constant
0xffff9140a7a0   576  914068e0       constant
0xffff9140a7a4   580  0000ffff       constant
0xffff9140a7a8   584  91406820       constant
0xffff9140a7ac   588  0000ffff       constant
0xffff9140a7b0   592  91406260       constant
0xffff9140a7b4   596  0000ffff       constant
0xffff9140a7b8   600  914068e0       constant
0xffff9140a7bc   604  0000ffff       constant
0xffff9140a7c0   608  movz x16, #0x0
0xffff9140a7c4   612  bl #+0x14 (addr 0xffff9140a7d8)
0xffff9140a7c8   616  movz x16, #0x8
0xffff9140a7cc   620  bl #+0xc (addr 0xffff9140a7d8)
0xffff9140a7d0   624  movz x16, #0x10
0xffff9140a7d4   628  bl #+0x4 (addr 0xffff9140a7d8)
0xffff9140a7d8   632  ldr x17, pc+24 (addr 0x0000ffff9140a7f0)    ;; lazy deoptimization bailout 0
0xffff9140a7dc   636  add x17, x17, x16
0xffff9140a7e0   640  br x17
0xffff9140a7e4   644  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140a7e8   648  d63f03e0       constant
0xffff9140a7ec   652  d503201f       constant
0xffff9140a7f0   656  91206000       constant
0xffff9140a7f4   660  0000ffff       constant


Safepoints (size = 34)
0xffff9140a704   420  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2
0xffff9140a748   488  000 | x1 | x2 | x7 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff9140a5d0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a5d8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a5e8  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140a628  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140a64c  code target (STUB)  (0xffff91409800)
0xffff9140a664  embedded object  (0x49b04519 <the hole>)
0xffff9140a6d8  code target (STUB)  (0xffff91406820)
0xffff9140a6fc  code target (STUB)  (0xffff91406260)
0xffff9140a708  code target (STUB)  (0xffff914068e0)
0xffff9140a71c  code target (STUB)  (0xffff91406820)
0xffff9140a740  code target (STUB)  (0xffff91406260)
0xffff9140a74c  code target (STUB)  (0xffff914068e0)
0xffff9140a758  constant pool (size 104)
0xffff9140a7d8  runtime entry
0xffff9140a7e4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_HOLEY_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 698)
0xffff9140a560     0  movz x16, #0xa00000000
0xffff9140a564     4  sub csp, jssp, #0x10 (16)
0xffff9140a568     8  stp fp, lr, [jssp, #-16]!
0xffff9140a56c    12  mov fp, jssp
0xffff9140a570    16  sub csp, jssp, #0x8 (8)
0xffff9140a574    20  sub jssp, jssp, #0x8 (8)
0xffff9140a578    24  stur x16, [fp, #-8]
0xffff9140a57c    28  movz w16, #0x257f
0xffff9140a580    32  cmp w0, w16, lsl #3
0xffff9140a584    36  b.hs #+0x23c (addr 0xffff9140a7c0)
0xffff9140a588    40  lsl x3, x0, #32
0xffff9140a58c    44  lsl w4, w0, #3
0xffff9140a590    48  add w4, w4, #0x10 (16)
0xffff9140a594    52  cmp w4, #0x96000 (614400)
0xffff9140a598    56  b.hs #+0x230 (addr 0xffff9140a7c8)
0xffff9140a59c    60  movz x6, #0xf2c0
0xffff9140a5a0    64  movk x6, #0x4117, lsl #16
0xffff9140a5a4    68  ldp x7, x5, [x6]
0xffff9140a5a8    72  adds x16, x7, #0x30 (48)
0xffff9140a5ac    76  ccmp x16, x5, #nzCv, lo
0xffff9140a5b0    80  b.hi #+0x120 (addr 0xffff9140a6d0)
0xffff9140a5b4    84  str x16, [x6]
0xffff9140a5b8    88  orr x7, x7, #0x1
0xffff9140a5bc    92  ldur x5, [x1, #39]
0xffff9140a5c0    96  ldur x5, [x5, #39]
0xffff9140a5c4   100  movz x16, #0x17f
0xffff9140a5c8   104  ldr x5, [x5, x16]
0xffff9140a5cc   108  stur x5, [x7, #-1]
0xffff9140a5d0   112  ldr x5, pc+400 (addr 0x0000ffff9140a760)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a5d4   116  stur x5, [x7, #7]
0xffff9140a5d8   120  ldr x5, pc+400 (addr 0x0000ffff9140a768)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a5dc   124  stur x5, [x7, #15]
0xffff9140a5e0   128  stur x3, [x7, #23]
0xffff9140a5e4   132  add x5, x7, #0x20 (32)
0xffff9140a5e8   136  ldr x6, pc+392 (addr 0x0000ffff9140a770)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9140a5ec   140  stur x6, [x5, #-1]
0xffff9140a5f0   144  stur x2, [x5, #7]
0xffff9140a5f4   148  ldur w5, [x2, #35]
0xffff9140a5f8   152  add w5, w5, #0x1 (1)
0xffff9140a5fc   156  lsl x5, x5, #32
0xffff9140a600   160  stur x5, [x2, #31]
0xffff9140a604   164  sxtw x4, w4
0xffff9140a608   168  movz x5, #0xf2c0
0xffff9140a60c   172  movk x5, #0x4117, lsl #16
0xffff9140a610   176  ldp x8, x16, [x5]
0xffff9140a614   180  adds x6, x8, x4
0xffff9140a618   184  ccmp x6, x16, #nzCv, lo
0xffff9140a61c   188  b.hi #+0xf8 (addr 0xffff9140a714)
0xffff9140a620   192  str x6, [x5]
0xffff9140a624   196  orr x8, x8, #0x1
0xffff9140a628   200  ldr x4, pc+336 (addr 0x0000ffff9140a778)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9140a62c   204  stur x4, [x8, #-1]
0xffff9140a630   208  stur x3, [x8, #7]
0xffff9140a634   212  mov x3, x8
0xffff9140a638   216  stur x3, [x7, #15]
0xffff9140a63c   220  add x4, x7, #0xf (15)
0xffff9140a640   224  and x3, x7, #0xfffffffffff00000
0xffff9140a644   228  ldr x3, [x3, #8]
0xffff9140a648   232  tbz w3, #2, #+0xc (addr 0xffff9140a654)
0xffff9140a64c   236  ldr x16, pc+308 (addr 0x0000ffff9140a780)    ;; code: STUB, RecordWriteStub, minor: 69735
0xffff9140a650   240  blr x16
0xffff9140a654   244  mov x3, x0
0xffff9140a658   248  cmp w3, #0x0 (0)
0xffff9140a65c   252  b.le #+0x18 (addr 0xffff9140a674)
0xffff9140a660   256  sub w3, w3, #0x1 (1)
0xffff9140a664   260  ldr x4, pc+292 (addr 0x0000ffff9140a788)    ;; object: 0x49b04519 <the hole>
0xffff9140a668   264  add x5, x8, #0xf (15)
0xffff9140a66c   268  str x4, [x5, w3, sxtw #3]
0xffff9140a670   272  b #-0x18 (addr 0xffff9140a658)
0xffff9140a674   276  ldr x3, [fp]
0xffff9140a678   280  ldur x4, [x3, #-8]
0xffff9140a67c   284  movz x16, #0xe00000000
0xffff9140a680   288  cmp x4, x16
0xffff9140a684   292  csel x4, fp, x3, ne
0xffff9140a688   296  movz x3, #0x0
0xffff9140a68c   300  cmp w0, w3
0xffff9140a690   304  b.le #+0x24 (addr 0xffff9140a6b4)
0xffff9140a694   308  sub w5, w0, w3
0xffff9140a698   312  add w5, w5, #0x1 (1)
0xffff9140a69c   316  ldr x5, [x4, w5, uxtw #3]
0xffff9140a6a0   320  tbnz w5, #0, #+0x130 (addr 0xffff9140a7d0)
0xffff9140a6a4   324  add x6, x8, #0xf (15)
0xffff9140a6a8   328  str x5, [x6, w3, sxtw #3]
0xffff9140a6ac   332  add w3, w3, #0x1 (1)
0xffff9140a6b0   336  b #-0x24 (addr 0xffff9140a68c)
0xffff9140a6b4   340  add w0, w0, #0x1 (1)
0xffff9140a6b8   344  lsl x1, x0, #32
0xffff9140a6bc   348  mov x0, x7
0xffff9140a6c0   352  mov jssp, fp
0xffff9140a6c4   356  ldp fp, lr, [jssp], #16
0xffff9140a6c8   360  add jssp, jssp, x1, lsr #29
0xffff9140a6cc   364  ret
0xffff9140a6d0   368  movz x7, #0x0
0xffff9140a6d4   372  mov x16, lr
0xffff9140a6d8   376  ldr x17, pc+184 (addr 0x0000ffff9140a790)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140a6dc   380  blr x17
0xffff9140a6e0   384  movz x0, #0x3000000000
0xffff9140a6e4   388  movz x10, #0x0
0xffff9140a6e8   392  sub csp, jssp, #0x10 (16)
0xffff9140a6ec   396  stp x10, x0, [jssp, #-16]!
0xffff9140a6f0   400  movz x0, #0x2
0xffff9140a6f4   404  movz x1, #0x5b88
0xffff9140a6f8   408  movk x1, #0xe2, lsl #16
0xffff9140a6fc   412  ldr x16, pc+156 (addr 0x0000ffff9140a798)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140a700   416  blr x16
0xffff9140a704   420  str x0, [jssp, #56]
0xffff9140a708   424  ldr x16, pc+152 (addr 0x0000ffff9140a7a0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140a70c   428  blr x16
0xffff9140a710   432  b #-0x154 (addr 0xffff9140a5bc)
0xffff9140a714   436  movz x8, #0x0
0xffff9140a718   440  mov x16, lr
0xffff9140a71c   444  ldr x17, pc+140 (addr 0x0000ffff9140a7a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140a720   448  blr x17
0xffff9140a724   452  lsl x0, x4, #32
0xffff9140a728   456  movz x10, #0x0
0xffff9140a72c   460  sub csp, jssp, #0x10 (16)
0xffff9140a730   464  stp x10, x0, [jssp, #-16]!
0xffff9140a734   468  movz x0, #0x2
0xffff9140a738   472  movz x1, #0x5b88
0xffff9140a73c   476  movk x1, #0xe2, lsl #16
0xffff9140a740   480  ldr x16, pc+112 (addr 0x0000ffff9140a7b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140a744   484  blr x16
0xffff9140a748   488  str x0, [jssp, #64]
0xffff9140a74c   492  ldr x16, pc+108 (addr 0x0000ffff9140a7b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140a750   496  blr x16
0xffff9140a754   500  b #-0x12c (addr 0xffff9140a628)
0xffff9140a758   504  5800033f       constant pool begin (num_const = 25)    ;; constant pool
0xffff9140a75c   508  d63f03e0       constant
0xffff9140a760   512  49b04201       constant
0xffff9140a764   516  00000000       constant
0xffff9140a768   520  49b04201       constant
0xffff9140a76c   524  00000000       constant
0xffff9140a770   528  36405d81       constant
0xffff9140a774   532  00000000       constant
0xffff9140a778   536  36404259       constant
0xffff9140a77c   540  00000000       constant
0xffff9140a780   544  91409800       constant
0xffff9140a784   548  0000ffff       constant
0xffff9140a788   552  49b04519       constant
0xffff9140a78c   556  00000000       constant
0xffff9140a790   560  91406820       constant
0xffff9140a794   564  0000ffff       constant
0xffff9140a798   568  91406260       constant
0xffff9140a79c   572  0000ffff       constant
0xffff9140a7a0   576  914068e0       constant
0xffff9140a7a4   580  0000ffff       constant
0xffff9140a7a8   584  91406820       constant
0xffff9140a7ac   588  0000ffff       constant
0xffff9140a7b0   592  91406260       constant
0xffff9140a7b4   596  0000ffff       constant
0xffff9140a7b8   600  914068e0       constant
0xffff9140a7bc   604  0000ffff       constant
0xffff9140a7c0   608  movz x16, #0x0
0xffff9140a7c4   612  bl #+0x14 (addr 0xffff9140a7d8)
0xffff9140a7c8   616  movz x16, #0x8
0xffff9140a7cc   620  bl #+0xc (addr 0xffff9140a7d8)
0xffff9140a7d0   624  movz x16, #0x10
0xffff9140a7d4   628  bl #+0x4 (addr 0xffff9140a7d8)
0xffff9140a7d8   632  ldr x17, pc+24 (addr 0x0000ffff9140a7f0)    ;; lazy deoptimization bailout 0
0xffff9140a7dc   636  add x17, x17, x16
0xffff9140a7e0   640  br x17
0xffff9140a7e4   644  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140a7e8   648  d63f03e0       constant
0xffff9140a7ec   652  d503201f       constant
0xffff9140a7f0   656  91206000       constant
0xffff9140a7f4   660  0000ffff       constant


Safepoints (size = 34)
0xffff9140a704   420  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2
0xffff9140a748   488  000 | x1 | x2 | x7 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff9140a5d0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a5d8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a5e8  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140a628  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140a64c  code target (STUB)  (0xffff91409800)
0xffff9140a664  embedded object  (0x49b04519 <the hole>)
0xffff9140a6d8  code target (STUB)  (0xffff91406820)
0xffff9140a6fc  code target (STUB)  (0xffff91406260)
0xffff9140a708  code target (STUB)  (0xffff914068e0)
0xffff9140a71c  code target (STUB)  (0xffff91406820)
0xffff9140a740  code target (STUB)  (0xffff91406260)
0xffff9140a74c  code target (STUB)  (0xffff914068e0)
0xffff9140a758  constant pool (size 104)
0xffff9140a7d8  runtime entry
0xffff9140a7e4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 501)
0xffff9140a880     0  movz x16, #0xa00000000
0xffff9140a884     4  sub csp, jssp, #0x10 (16)
0xffff9140a888     8  stp fp, lr, [jssp, #-16]!
0xffff9140a88c    12  mov fp, jssp
0xffff9140a890    16  sub csp, jssp, #0x8 (8)
0xffff9140a894    20  sub jssp, jssp, #0x8 (8)
0xffff9140a898    24  stur x16, [fp, #-8]
0xffff9140a89c    28  movz w16, #0x257f
0xffff9140a8a0    32  cmp w0, w16, lsl #3
0xffff9140a8a4    36  b.hs #+0x184 (addr 0xffff9140aa28)
0xffff9140a8a8    40  lsl x3, x0, #32
0xffff9140a8ac    44  lsl w4, w0, #3
0xffff9140a8b0    48  add w4, w4, #0x10 (16)
0xffff9140a8b4    52  cmp w4, #0x96000 (614400)
0xffff9140a8b8    56  b.hs #+0x178 (addr 0xffff9140aa30)
0xffff9140a8bc    60  add w4, w4, #0x20 (32)
0xffff9140a8c0    64  sxtw x4, w4
0xffff9140a8c4    68  movz x5, #0xf2c0
0xffff9140a8c8    72  movk x5, #0x4117, lsl #16
0xffff9140a8cc    76  ldp x7, x16, [x5]
0xffff9140a8d0    80  adds x6, x7, x4
0xffff9140a8d4    84  ccmp x6, x16, #nzCv, lo
0xffff9140a8d8    88  b.hi #+0xcc (addr 0xffff9140a9a4)
0xffff9140a8dc    92  str x6, [x5]
0xffff9140a8e0    96  orr x7, x7, #0x1
0xffff9140a8e4   100  movz w4, #0x0
0xffff9140a8e8   104  stur x4, [x7, #31]
0xffff9140a8ec   108  ldur x4, [x1, #39]
0xffff9140a8f0   112  ldur x4, [x4, #39]
0xffff9140a8f4   116  movz x16, #0x17f
0xffff9140a8f8   120  ldr x4, [x4, x16]
0xffff9140a8fc   124  stur x4, [x7, #-1]
0xffff9140a900   128  ldr x4, pc+240 (addr 0x0000ffff9140a9f0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a904   132  stur x4, [x7, #7]
0xffff9140a908   136  ldr x4, pc+240 (addr 0x0000ffff9140a9f8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a90c   140  stur x4, [x7, #15]
0xffff9140a910   144  stur x3, [x7, #23]
0xffff9140a914   148  add x4, x7, #0x20 (32)
0xffff9140a918   152  ldr x5, pc+232 (addr 0x0000ffff9140aa00)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9140a91c   156  stur x5, [x4, #-1]
0xffff9140a920   160  stur x3, [x4, #7]
0xffff9140a924   164  stur x4, [x7, #15]
0xffff9140a928   168  mov x3, x0
0xffff9140a92c   172  cmp w3, #0x0 (0)
0xffff9140a930   176  b.le #+0x18 (addr 0xffff9140a948)
0xffff9140a934   180  sub w3, w3, #0x1 (1)
0xffff9140a938   184  ldr x5, pc+208 (addr 0x0000ffff9140aa08)    ;; object: 0x49b04519 <the hole>
0xffff9140a93c   188  add x6, x4, #0xf (15)
0xffff9140a940   192  str x5, [x6, w3, sxtw #3]
0xffff9140a944   196  b #-0x18 (addr 0xffff9140a92c)
0xffff9140a948   200  ldr x3, [fp]
0xffff9140a94c   204  ldur x5, [x3, #-8]
0xffff9140a950   208  movz x16, #0xe00000000
0xffff9140a954   212  cmp x5, x16
0xffff9140a958   216  csel x5, fp, x3, ne
0xffff9140a95c   220  movz x3, #0x0
0xffff9140a960   224  cmp w0, w3
0xffff9140a964   228  b.le #+0x24 (addr 0xffff9140a988)
0xffff9140a968   232  sub w6, w0, w3
0xffff9140a96c   236  add w6, w6, #0x1 (1)
0xffff9140a970   240  ldr x6, [x5, w6, uxtw #3]
0xffff9140a974   244  tbnz w6, #0, #+0xc4 (addr 0xffff9140aa38)
0xffff9140a978   248  add x8, x4, #0xf (15)
0xffff9140a97c   252  str x6, [x8, w3, sxtw #3]
0xffff9140a980   256  add w3, w3, #0x1 (1)
0xffff9140a984   260  b #-0x24 (addr 0xffff9140a960)
0xffff9140a988   264  add w0, w0, #0x1 (1)
0xffff9140a98c   268  lsl x1, x0, #32
0xffff9140a990   272  mov x0, x7
0xffff9140a994   276  mov jssp, fp
0xffff9140a998   280  ldp fp, lr, [jssp], #16
0xffff9140a99c   284  add jssp, jssp, x1, lsr #29
0xffff9140a9a0   288  ret
0xffff9140a9a4   292  movz x7, #0x0
0xffff9140a9a8   296  mov x16, lr
0xffff9140a9ac   300  ldr x17, pc+100 (addr 0x0000ffff9140aa10)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140a9b0   304  blr x17
0xffff9140a9b4   308  lsl x0, x4, #32
0xffff9140a9b8   312  movz x10, #0x0
0xffff9140a9bc   316  sub csp, jssp, #0x10 (16)
0xffff9140a9c0   320  stp x10, x0, [jssp, #-16]!
0xffff9140a9c4   324  movz x0, #0x2
0xffff9140a9c8   328  movz x1, #0x5b88
0xffff9140a9cc   332  movk x1, #0xe2, lsl #16
0xffff9140a9d0   336  ldr x16, pc+72 (addr 0x0000ffff9140aa18)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140a9d4   340  blr x16
0xffff9140a9d8   344  str x0, [jssp, #56]
0xffff9140a9dc   348  ldr x16, pc+68 (addr 0x0000ffff9140aa20)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140a9e0   352  blr x16
0xffff9140a9e4   356  b #-0x100 (addr 0xffff9140a8e4)
0xffff9140a9e8   360  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff9140a9ec   364  d63f03e0       constant
0xffff9140a9f0   368  49b04201       constant
0xffff9140a9f4   372  00000000       constant
0xffff9140a9f8   376  49b04201       constant
0xffff9140a9fc   380  00000000       constant
0xffff9140aa00   384  36404259       constant
0xffff9140aa04   388  00000000       constant
0xffff9140aa08   392  49b04519       constant
0xffff9140aa0c   396  00000000       constant
0xffff9140aa10   400  91406820       constant
0xffff9140aa14   404  0000ffff       constant
0xffff9140aa18   408  91406260       constant
0xffff9140aa1c   412  0000ffff       constant
0xffff9140aa20   416  914068e0       constant
0xffff9140aa24   420  0000ffff       constant
0xffff9140aa28   424  movz x16, #0x0
0xffff9140aa2c   428  bl #+0x14 (addr 0xffff9140aa40)
0xffff9140aa30   432  movz x16, #0x8
0xffff9140aa34   436  bl #+0xc (addr 0xffff9140aa40)
0xffff9140aa38   440  movz x16, #0x10
0xffff9140aa3c   444  bl #+0x4 (addr 0xffff9140aa40)
0xffff9140aa40   448  ldr x17, pc+24 (addr 0x0000ffff9140aa58)    ;; lazy deoptimization bailout 0
0xffff9140aa44   452  add x17, x17, x16
0xffff9140aa48   456  br x17
0xffff9140aa4c   460  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140aa50   464  d63f03e0       constant
0xffff9140aa54   468  d503201f       constant
0xffff9140aa58   472  91206000       constant
0xffff9140aa5c   476  0000ffff       constant


Safepoints (size = 21)
0xffff9140a9d8   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff9140a900  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a908  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a918  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140a938  embedded object  (0x49b04519 <the hole>)
0xffff9140a9ac  code target (STUB)  (0xffff91406820)
0xffff9140a9d0  code target (STUB)  (0xffff91406260)
0xffff9140a9dc  code target (STUB)  (0xffff914068e0)
0xffff9140a9e8  constant pool (size 64)
0xffff9140aa40  runtime entry
0xffff9140aa4c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_HOLEY_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 501)
0xffff9140a880     0  movz x16, #0xa00000000
0xffff9140a884     4  sub csp, jssp, #0x10 (16)
0xffff9140a888     8  stp fp, lr, [jssp, #-16]!
0xffff9140a88c    12  mov fp, jssp
0xffff9140a890    16  sub csp, jssp, #0x8 (8)
0xffff9140a894    20  sub jssp, jssp, #0x8 (8)
0xffff9140a898    24  stur x16, [fp, #-8]
0xffff9140a89c    28  movz w16, #0x257f
0xffff9140a8a0    32  cmp w0, w16, lsl #3
0xffff9140a8a4    36  b.hs #+0x184 (addr 0xffff9140aa28)
0xffff9140a8a8    40  lsl x3, x0, #32
0xffff9140a8ac    44  lsl w4, w0, #3
0xffff9140a8b0    48  add w4, w4, #0x10 (16)
0xffff9140a8b4    52  cmp w4, #0x96000 (614400)
0xffff9140a8b8    56  b.hs #+0x178 (addr 0xffff9140aa30)
0xffff9140a8bc    60  add w4, w4, #0x20 (32)
0xffff9140a8c0    64  sxtw x4, w4
0xffff9140a8c4    68  movz x5, #0xf2c0
0xffff9140a8c8    72  movk x5, #0x4117, lsl #16
0xffff9140a8cc    76  ldp x7, x16, [x5]
0xffff9140a8d0    80  adds x6, x7, x4
0xffff9140a8d4    84  ccmp x6, x16, #nzCv, lo
0xffff9140a8d8    88  b.hi #+0xcc (addr 0xffff9140a9a4)
0xffff9140a8dc    92  str x6, [x5]
0xffff9140a8e0    96  orr x7, x7, #0x1
0xffff9140a8e4   100  movz w4, #0x0
0xffff9140a8e8   104  stur x4, [x7, #31]
0xffff9140a8ec   108  ldur x4, [x1, #39]
0xffff9140a8f0   112  ldur x4, [x4, #39]
0xffff9140a8f4   116  movz x16, #0x17f
0xffff9140a8f8   120  ldr x4, [x4, x16]
0xffff9140a8fc   124  stur x4, [x7, #-1]
0xffff9140a900   128  ldr x4, pc+240 (addr 0x0000ffff9140a9f0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a904   132  stur x4, [x7, #7]
0xffff9140a908   136  ldr x4, pc+240 (addr 0x0000ffff9140a9f8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140a90c   140  stur x4, [x7, #15]
0xffff9140a910   144  stur x3, [x7, #23]
0xffff9140a914   148  add x4, x7, #0x20 (32)
0xffff9140a918   152  ldr x5, pc+232 (addr 0x0000ffff9140aa00)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9140a91c   156  stur x5, [x4, #-1]
0xffff9140a920   160  stur x3, [x4, #7]
0xffff9140a924   164  stur x4, [x7, #15]
0xffff9140a928   168  mov x3, x0
0xffff9140a92c   172  cmp w3, #0x0 (0)
0xffff9140a930   176  b.le #+0x18 (addr 0xffff9140a948)
0xffff9140a934   180  sub w3, w3, #0x1 (1)
0xffff9140a938   184  ldr x5, pc+208 (addr 0x0000ffff9140aa08)    ;; object: 0x49b04519 <the hole>
0xffff9140a93c   188  add x6, x4, #0xf (15)
0xffff9140a940   192  str x5, [x6, w3, sxtw #3]
0xffff9140a944   196  b #-0x18 (addr 0xffff9140a92c)
0xffff9140a948   200  ldr x3, [fp]
0xffff9140a94c   204  ldur x5, [x3, #-8]
0xffff9140a950   208  movz x16, #0xe00000000
0xffff9140a954   212  cmp x5, x16
0xffff9140a958   216  csel x5, fp, x3, ne
0xffff9140a95c   220  movz x3, #0x0
0xffff9140a960   224  cmp w0, w3
0xffff9140a964   228  b.le #+0x24 (addr 0xffff9140a988)
0xffff9140a968   232  sub w6, w0, w3
0xffff9140a96c   236  add w6, w6, #0x1 (1)
0xffff9140a970   240  ldr x6, [x5, w6, uxtw #3]
0xffff9140a974   244  tbnz w6, #0, #+0xc4 (addr 0xffff9140aa38)
0xffff9140a978   248  add x8, x4, #0xf (15)
0xffff9140a97c   252  str x6, [x8, w3, sxtw #3]
0xffff9140a980   256  add w3, w3, #0x1 (1)
0xffff9140a984   260  b #-0x24 (addr 0xffff9140a960)
0xffff9140a988   264  add w0, w0, #0x1 (1)
0xffff9140a98c   268  lsl x1, x0, #32
0xffff9140a990   272  mov x0, x7
0xffff9140a994   276  mov jssp, fp
0xffff9140a998   280  ldp fp, lr, [jssp], #16
0xffff9140a99c   284  add jssp, jssp, x1, lsr #29
0xffff9140a9a0   288  ret
0xffff9140a9a4   292  movz x7, #0x0
0xffff9140a9a8   296  mov x16, lr
0xffff9140a9ac   300  ldr x17, pc+100 (addr 0x0000ffff9140aa10)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140a9b0   304  blr x17
0xffff9140a9b4   308  lsl x0, x4, #32
0xffff9140a9b8   312  movz x10, #0x0
0xffff9140a9bc   316  sub csp, jssp, #0x10 (16)
0xffff9140a9c0   320  stp x10, x0, [jssp, #-16]!
0xffff9140a9c4   324  movz x0, #0x2
0xffff9140a9c8   328  movz x1, #0x5b88
0xffff9140a9cc   332  movk x1, #0xe2, lsl #16
0xffff9140a9d0   336  ldr x16, pc+72 (addr 0x0000ffff9140aa18)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140a9d4   340  blr x16
0xffff9140a9d8   344  str x0, [jssp, #56]
0xffff9140a9dc   348  ldr x16, pc+68 (addr 0x0000ffff9140aa20)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140a9e0   352  blr x16
0xffff9140a9e4   356  b #-0x100 (addr 0xffff9140a8e4)
0xffff9140a9e8   360  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff9140a9ec   364  d63f03e0       constant
0xffff9140a9f0   368  49b04201       constant
0xffff9140a9f4   372  00000000       constant
0xffff9140a9f8   376  49b04201       constant
0xffff9140a9fc   380  00000000       constant
0xffff9140aa00   384  36404259       constant
0xffff9140aa04   388  00000000       constant
0xffff9140aa08   392  49b04519       constant
0xffff9140aa0c   396  00000000       constant
0xffff9140aa10   400  91406820       constant
0xffff9140aa14   404  0000ffff       constant
0xffff9140aa18   408  91406260       constant
0xffff9140aa1c   412  0000ffff       constant
0xffff9140aa20   416  914068e0       constant
0xffff9140aa24   420  0000ffff       constant
0xffff9140aa28   424  movz x16, #0x0
0xffff9140aa2c   428  bl #+0x14 (addr 0xffff9140aa40)
0xffff9140aa30   432  movz x16, #0x8
0xffff9140aa34   436  bl #+0xc (addr 0xffff9140aa40)
0xffff9140aa38   440  movz x16, #0x10
0xffff9140aa3c   444  bl #+0x4 (addr 0xffff9140aa40)
0xffff9140aa40   448  ldr x17, pc+24 (addr 0x0000ffff9140aa58)    ;; lazy deoptimization bailout 0
0xffff9140aa44   452  add x17, x17, x16
0xffff9140aa48   456  br x17
0xffff9140aa4c   460  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140aa50   464  d63f03e0       constant
0xffff9140aa54   468  d503201f       constant
0xffff9140aa58   472  91206000       constant
0xffff9140aa5c   476  0000ffff       constant


Safepoints (size = 21)
0xffff9140a9d8   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff9140a900  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a908  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140a918  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140a938  embedded object  (0x49b04519 <the hole>)
0xffff9140a9ac  code target (STUB)  (0xffff91406820)
0xffff9140a9d0  code target (STUB)  (0xffff91406260)
0xffff9140a9dc  code target (STUB)  (0xffff914068e0)
0xffff9140a9e8  constant pool (size 64)
0xffff9140aa40  runtime entry
0xffff9140aa4c  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 493)
0xffff9140aae0     0  movz x16, #0xa00000000
0xffff9140aae4     4  sub csp, jssp, #0x10 (16)
0xffff9140aae8     8  stp fp, lr, [jssp, #-16]!
0xffff9140aaec    12  mov fp, jssp
0xffff9140aaf0    16  sub csp, jssp, #0x8 (8)
0xffff9140aaf4    20  sub jssp, jssp, #0x8 (8)
0xffff9140aaf8    24  stur x16, [fp, #-8]
0xffff9140aafc    28  movz w16, #0x257f
0xffff9140ab00    32  cmp w0, w16, lsl #3
0xffff9140ab04    36  b.hs #+0x17c (addr 0xffff9140ac80)
0xffff9140ab08    40  lsl x3, x0, #32
0xffff9140ab0c    44  lsl w4, w0, #3
0xffff9140ab10    48  add w4, w4, #0x10 (16)
0xffff9140ab14    52  cmp w4, #0x96000 (614400)
0xffff9140ab18    56  b.hs #+0x170 (addr 0xffff9140ac88)
0xffff9140ab1c    60  add w4, w4, #0x20 (32)
0xffff9140ab20    64  sxtw x4, w4
0xffff9140ab24    68  movz x5, #0xf2c0
0xffff9140ab28    72  movk x5, #0x4117, lsl #16
0xffff9140ab2c    76  ldp x7, x16, [x5]
0xffff9140ab30    80  adds x6, x7, x4
0xffff9140ab34    84  ccmp x6, x16, #nzCv, lo
0xffff9140ab38    88  b.hi #+0xcc (addr 0xffff9140ac04)
0xffff9140ab3c    92  str x6, [x5]
0xffff9140ab40    96  orr x7, x7, #0x1
0xffff9140ab44   100  movz w4, #0x0
0xffff9140ab48   104  stur x4, [x7, #31]
0xffff9140ab4c   108  ldur x4, [x1, #39]
0xffff9140ab50   112  ldur x4, [x4, #39]
0xffff9140ab54   116  movz x16, #0x197
0xffff9140ab58   120  ldr x4, [x4, x16]
0xffff9140ab5c   124  stur x4, [x7, #-1]
0xffff9140ab60   128  ldr x4, pc+240 (addr 0x0000ffff9140ac50)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140ab64   132  stur x4, [x7, #7]
0xffff9140ab68   136  ldr x4, pc+240 (addr 0x0000ffff9140ac58)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140ab6c   140  stur x4, [x7, #15]
0xffff9140ab70   144  stur x3, [x7, #23]
0xffff9140ab74   148  add x4, x7, #0x20 (32)
0xffff9140ab78   152  ldr x5, pc+232 (addr 0x0000ffff9140ac60)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9140ab7c   156  stur x5, [x4, #-1]
0xffff9140ab80   160  stur x3, [x4, #7]
0xffff9140ab84   164  stur x4, [x7, #15]
0xffff9140ab88   168  ldr x3, [fp]
0xffff9140ab8c   172  ldur x5, [x3, #-8]
0xffff9140ab90   176  movz x16, #0xe00000000
0xffff9140ab94   180  cmp x5, x16
0xffff9140ab98   184  csel x5, fp, x3, ne
0xffff9140ab9c   188  movz x3, #0x0
0xffff9140aba0   192  cmp w0, w3
0xffff9140aba4   196  b.le #+0x44 (addr 0xffff9140abe8)
0xffff9140aba8   200  sub w6, w0, w3
0xffff9140abac   204  add w6, w6, #0x1 (1)
0xffff9140abb0   208  ldr x6, [x5, w6, uxtw #3]
0xffff9140abb4   212  tbz w6, #0, #+0x1c (addr 0xffff9140abd0)
0xffff9140abb8   216  ldur x16, [x6, #-1]
0xffff9140abbc   220  ldr x17, [x26, #120]
0xffff9140abc0   224  cmp x16, x17
0xffff9140abc4   228  b.ne #+0xcc (addr 0xffff9140ac90)
0xffff9140abc8   232  ldur d0, [x6, #7]
0xffff9140abcc   236  b #+0x8 (addr 0xffff9140abd4)
0xffff9140abd0   240  scvtf d0, x6, #32
0xffff9140abd4   244  add x6, x4, #0xf (15)
0xffff9140abd8   248  fsub d29, d0, d15
0xffff9140abdc   252  str d29, [x6, w3, sxtw #3]
0xffff9140abe0   256  add w3, w3, #0x1 (1)
0xffff9140abe4   260  b #-0x44 (addr 0xffff9140aba0)
0xffff9140abe8   264  add w0, w0, #0x1 (1)
0xffff9140abec   268  lsl x1, x0, #32
0xffff9140abf0   272  mov x0, x7
0xffff9140abf4   276  mov jssp, fp
0xffff9140abf8   280  ldp fp, lr, [jssp], #16
0xffff9140abfc   284  add jssp, jssp, x1, lsr #29
0xffff9140ac00   288  ret
0xffff9140ac04   292  movz x7, #0x0
0xffff9140ac08   296  mov x16, lr
0xffff9140ac0c   300  ldr x17, pc+92 (addr 0x0000ffff9140ac68)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140ac10   304  blr x17
0xffff9140ac14   308  lsl x0, x4, #32
0xffff9140ac18   312  movz x10, #0x100000000
0xffff9140ac1c   316  sub csp, jssp, #0x10 (16)
0xffff9140ac20   320  stp x10, x0, [jssp, #-16]!
0xffff9140ac24   324  movz x0, #0x2
0xffff9140ac28   328  movz x1, #0x5b88
0xffff9140ac2c   332  movk x1, #0xe2, lsl #16
0xffff9140ac30   336  ldr x16, pc+64 (addr 0x0000ffff9140ac70)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140ac34   340  blr x16
0xffff9140ac38   344  str x0, [jssp, #56]
0xffff9140ac3c   348  ldr x16, pc+60 (addr 0x0000ffff9140ac78)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140ac40   352  blr x16
0xffff9140ac44   356  b #-0x100 (addr 0xffff9140ab44)
0xffff9140ac48   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9140ac4c   364  d63f03e0       constant
0xffff9140ac50   368  49b04201       constant
0xffff9140ac54   372  00000000       constant
0xffff9140ac58   376  49b04201       constant
0xffff9140ac5c   380  00000000       constant
0xffff9140ac60   384  364052d9       constant
0xffff9140ac64   388  00000000       constant
0xffff9140ac68   392  91406820       constant
0xffff9140ac6c   396  0000ffff       constant
0xffff9140ac70   400  91406260       constant
0xffff9140ac74   404  0000ffff       constant
0xffff9140ac78   408  914068e0       constant
0xffff9140ac7c   412  0000ffff       constant
0xffff9140ac80   416  movz x16, #0x0
0xffff9140ac84   420  bl #+0x14 (addr 0xffff9140ac98)
0xffff9140ac88   424  movz x16, #0x8
0xffff9140ac8c   428  bl #+0xc (addr 0xffff9140ac98)
0xffff9140ac90   432  movz x16, #0x10
0xffff9140ac94   436  bl #+0x4 (addr 0xffff9140ac98)
0xffff9140ac98   440  ldr x17, pc+24 (addr 0x0000ffff9140acb0)    ;; lazy deoptimization bailout 0
0xffff9140ac9c   444  add x17, x17, x16
0xffff9140aca0   448  br x17
0xffff9140aca4   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140aca8   456  d63f03e0       constant
0xffff9140acac   460  d503201f       constant
0xffff9140acb0   464  91206000       constant
0xffff9140acb4   468  0000ffff       constant


Safepoints (size = 21)
0xffff9140ac38   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff9140ab60  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140ab68  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140ab78  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140ac0c  code target (STUB)  (0xffff91406820)
0xffff9140ac30  code target (STUB)  (0xffff91406260)
0xffff9140ac3c  code target (STUB)  (0xffff914068e0)
0xffff9140ac48  constant pool (size 56)
0xffff9140ac98  runtime entry
0xffff9140aca4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 493)
0xffff9140aae0     0  movz x16, #0xa00000000
0xffff9140aae4     4  sub csp, jssp, #0x10 (16)
0xffff9140aae8     8  stp fp, lr, [jssp, #-16]!
0xffff9140aaec    12  mov fp, jssp
0xffff9140aaf0    16  sub csp, jssp, #0x8 (8)
0xffff9140aaf4    20  sub jssp, jssp, #0x8 (8)
0xffff9140aaf8    24  stur x16, [fp, #-8]
0xffff9140aafc    28  movz w16, #0x257f
0xffff9140ab00    32  cmp w0, w16, lsl #3
0xffff9140ab04    36  b.hs #+0x17c (addr 0xffff9140ac80)
0xffff9140ab08    40  lsl x3, x0, #32
0xffff9140ab0c    44  lsl w4, w0, #3
0xffff9140ab10    48  add w4, w4, #0x10 (16)
0xffff9140ab14    52  cmp w4, #0x96000 (614400)
0xffff9140ab18    56  b.hs #+0x170 (addr 0xffff9140ac88)
0xffff9140ab1c    60  add w4, w4, #0x20 (32)
0xffff9140ab20    64  sxtw x4, w4
0xffff9140ab24    68  movz x5, #0xf2c0
0xffff9140ab28    72  movk x5, #0x4117, lsl #16
0xffff9140ab2c    76  ldp x7, x16, [x5]
0xffff9140ab30    80  adds x6, x7, x4
0xffff9140ab34    84  ccmp x6, x16, #nzCv, lo
0xffff9140ab38    88  b.hi #+0xcc (addr 0xffff9140ac04)
0xffff9140ab3c    92  str x6, [x5]
0xffff9140ab40    96  orr x7, x7, #0x1
0xffff9140ab44   100  movz w4, #0x0
0xffff9140ab48   104  stur x4, [x7, #31]
0xffff9140ab4c   108  ldur x4, [x1, #39]
0xffff9140ab50   112  ldur x4, [x4, #39]
0xffff9140ab54   116  movz x16, #0x197
0xffff9140ab58   120  ldr x4, [x4, x16]
0xffff9140ab5c   124  stur x4, [x7, #-1]
0xffff9140ab60   128  ldr x4, pc+240 (addr 0x0000ffff9140ac50)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140ab64   132  stur x4, [x7, #7]
0xffff9140ab68   136  ldr x4, pc+240 (addr 0x0000ffff9140ac58)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140ab6c   140  stur x4, [x7, #15]
0xffff9140ab70   144  stur x3, [x7, #23]
0xffff9140ab74   148  add x4, x7, #0x20 (32)
0xffff9140ab78   152  ldr x5, pc+232 (addr 0x0000ffff9140ac60)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9140ab7c   156  stur x5, [x4, #-1]
0xffff9140ab80   160  stur x3, [x4, #7]
0xffff9140ab84   164  stur x4, [x7, #15]
0xffff9140ab88   168  ldr x3, [fp]
0xffff9140ab8c   172  ldur x5, [x3, #-8]
0xffff9140ab90   176  movz x16, #0xe00000000
0xffff9140ab94   180  cmp x5, x16
0xffff9140ab98   184  csel x5, fp, x3, ne
0xffff9140ab9c   188  movz x3, #0x0
0xffff9140aba0   192  cmp w0, w3
0xffff9140aba4   196  b.le #+0x44 (addr 0xffff9140abe8)
0xffff9140aba8   200  sub w6, w0, w3
0xffff9140abac   204  add w6, w6, #0x1 (1)
0xffff9140abb0   208  ldr x6, [x5, w6, uxtw #3]
0xffff9140abb4   212  tbz w6, #0, #+0x1c (addr 0xffff9140abd0)
0xffff9140abb8   216  ldur x16, [x6, #-1]
0xffff9140abbc   220  ldr x17, [x26, #120]
0xffff9140abc0   224  cmp x16, x17
0xffff9140abc4   228  b.ne #+0xcc (addr 0xffff9140ac90)
0xffff9140abc8   232  ldur d0, [x6, #7]
0xffff9140abcc   236  b #+0x8 (addr 0xffff9140abd4)
0xffff9140abd0   240  scvtf d0, x6, #32
0xffff9140abd4   244  add x6, x4, #0xf (15)
0xffff9140abd8   248  fsub d29, d0, d15
0xffff9140abdc   252  str d29, [x6, w3, sxtw #3]
0xffff9140abe0   256  add w3, w3, #0x1 (1)
0xffff9140abe4   260  b #-0x44 (addr 0xffff9140aba0)
0xffff9140abe8   264  add w0, w0, #0x1 (1)
0xffff9140abec   268  lsl x1, x0, #32
0xffff9140abf0   272  mov x0, x7
0xffff9140abf4   276  mov jssp, fp
0xffff9140abf8   280  ldp fp, lr, [jssp], #16
0xffff9140abfc   284  add jssp, jssp, x1, lsr #29
0xffff9140ac00   288  ret
0xffff9140ac04   292  movz x7, #0x0
0xffff9140ac08   296  mov x16, lr
0xffff9140ac0c   300  ldr x17, pc+92 (addr 0x0000ffff9140ac68)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140ac10   304  blr x17
0xffff9140ac14   308  lsl x0, x4, #32
0xffff9140ac18   312  movz x10, #0x100000000
0xffff9140ac1c   316  sub csp, jssp, #0x10 (16)
0xffff9140ac20   320  stp x10, x0, [jssp, #-16]!
0xffff9140ac24   324  movz x0, #0x2
0xffff9140ac28   328  movz x1, #0x5b88
0xffff9140ac2c   332  movk x1, #0xe2, lsl #16
0xffff9140ac30   336  ldr x16, pc+64 (addr 0x0000ffff9140ac70)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140ac34   340  blr x16
0xffff9140ac38   344  str x0, [jssp, #56]
0xffff9140ac3c   348  ldr x16, pc+60 (addr 0x0000ffff9140ac78)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140ac40   352  blr x16
0xffff9140ac44   356  b #-0x100 (addr 0xffff9140ab44)
0xffff9140ac48   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9140ac4c   364  d63f03e0       constant
0xffff9140ac50   368  49b04201       constant
0xffff9140ac54   372  00000000       constant
0xffff9140ac58   376  49b04201       constant
0xffff9140ac5c   380  00000000       constant
0xffff9140ac60   384  364052d9       constant
0xffff9140ac64   388  00000000       constant
0xffff9140ac68   392  91406820       constant
0xffff9140ac6c   396  0000ffff       constant
0xffff9140ac70   400  91406260       constant
0xffff9140ac74   404  0000ffff       constant
0xffff9140ac78   408  914068e0       constant
0xffff9140ac7c   412  0000ffff       constant
0xffff9140ac80   416  movz x16, #0x0
0xffff9140ac84   420  bl #+0x14 (addr 0xffff9140ac98)
0xffff9140ac88   424  movz x16, #0x8
0xffff9140ac8c   428  bl #+0xc (addr 0xffff9140ac98)
0xffff9140ac90   432  movz x16, #0x10
0xffff9140ac94   436  bl #+0x4 (addr 0xffff9140ac98)
0xffff9140ac98   440  ldr x17, pc+24 (addr 0x0000ffff9140acb0)    ;; lazy deoptimization bailout 0
0xffff9140ac9c   444  add x17, x17, x16
0xffff9140aca0   448  br x17
0xffff9140aca4   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140aca8   456  d63f03e0       constant
0xffff9140acac   460  d503201f       constant
0xffff9140acb0   464  91206000       constant
0xffff9140acb4   468  0000ffff       constant


Safepoints (size = 21)
0xffff9140ac38   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff9140ab60  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140ab68  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140ab78  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140ac0c  code target (STUB)  (0xffff91406820)
0xffff9140ac30  code target (STUB)  (0xffff91406260)
0xffff9140ac3c  code target (STUB)  (0xffff914068e0)
0xffff9140ac48  constant pool (size 56)
0xffff9140ac98  runtime entry
0xffff9140aca4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 493)
0xffff9140ad40     0  movz x16, #0xa00000000
0xffff9140ad44     4  sub csp, jssp, #0x10 (16)
0xffff9140ad48     8  stp fp, lr, [jssp, #-16]!
0xffff9140ad4c    12  mov fp, jssp
0xffff9140ad50    16  sub csp, jssp, #0x8 (8)
0xffff9140ad54    20  sub jssp, jssp, #0x8 (8)
0xffff9140ad58    24  stur x16, [fp, #-8]
0xffff9140ad5c    28  movz w16, #0x257f
0xffff9140ad60    32  cmp w0, w16, lsl #3
0xffff9140ad64    36  b.hs #+0x17c (addr 0xffff9140aee0)
0xffff9140ad68    40  lsl x3, x0, #32
0xffff9140ad6c    44  lsl w4, w0, #3
0xffff9140ad70    48  add w4, w4, #0x10 (16)
0xffff9140ad74    52  cmp w4, #0x96000 (614400)
0xffff9140ad78    56  b.hs #+0x170 (addr 0xffff9140aee8)
0xffff9140ad7c    60  add w4, w4, #0x20 (32)
0xffff9140ad80    64  sxtw x4, w4
0xffff9140ad84    68  movz x5, #0xf2c0
0xffff9140ad88    72  movk x5, #0x4117, lsl #16
0xffff9140ad8c    76  ldp x7, x16, [x5]
0xffff9140ad90    80  adds x6, x7, x4
0xffff9140ad94    84  ccmp x6, x16, #nzCv, lo
0xffff9140ad98    88  b.hi #+0xcc (addr 0xffff9140ae64)
0xffff9140ad9c    92  str x6, [x5]
0xffff9140ada0    96  orr x7, x7, #0x1
0xffff9140ada4   100  movz w4, #0x0
0xffff9140ada8   104  stur x4, [x7, #31]
0xffff9140adac   108  ldur x4, [x1, #39]
0xffff9140adb0   112  ldur x4, [x4, #39]
0xffff9140adb4   116  movz x16, #0x19f
0xffff9140adb8   120  ldr x4, [x4, x16]
0xffff9140adbc   124  stur x4, [x7, #-1]
0xffff9140adc0   128  ldr x4, pc+240 (addr 0x0000ffff9140aeb0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140adc4   132  stur x4, [x7, #7]
0xffff9140adc8   136  ldr x4, pc+240 (addr 0x0000ffff9140aeb8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140adcc   140  stur x4, [x7, #15]
0xffff9140add0   144  stur x3, [x7, #23]
0xffff9140add4   148  add x4, x7, #0x20 (32)
0xffff9140add8   152  ldr x5, pc+232 (addr 0x0000ffff9140aec0)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9140addc   156  stur x5, [x4, #-1]
0xffff9140ade0   160  stur x3, [x4, #7]
0xffff9140ade4   164  stur x4, [x7, #15]
0xffff9140ade8   168  ldr x3, [fp]
0xffff9140adec   172  ldur x5, [x3, #-8]
0xffff9140adf0   176  movz x16, #0xe00000000
0xffff9140adf4   180  cmp x5, x16
0xffff9140adf8   184  csel x5, fp, x3, ne
0xffff9140adfc   188  movz x3, #0x0
0xffff9140ae00   192  cmp w0, w3
0xffff9140ae04   196  b.le #+0x44 (addr 0xffff9140ae48)
0xffff9140ae08   200  sub w6, w0, w3
0xffff9140ae0c   204  add w6, w6, #0x1 (1)
0xffff9140ae10   208  ldr x6, [x5, w6, uxtw #3]
0xffff9140ae14   212  tbz w6, #0, #+0x1c (addr 0xffff9140ae30)
0xffff9140ae18   216  ldur x16, [x6, #-1]
0xffff9140ae1c   220  ldr x17, [x26, #120]
0xffff9140ae20   224  cmp x16, x17
0xffff9140ae24   228  b.ne #+0xcc (addr 0xffff9140aef0)
0xffff9140ae28   232  ldur d0, [x6, #7]
0xffff9140ae2c   236  b #+0x8 (addr 0xffff9140ae34)
0xffff9140ae30   240  scvtf d0, x6, #32
0xffff9140ae34   244  add x6, x4, #0xf (15)
0xffff9140ae38   248  fsub d29, d0, d15
0xffff9140ae3c   252  str d29, [x6, w3, sxtw #3]
0xffff9140ae40   256  add w3, w3, #0x1 (1)
0xffff9140ae44   260  b #-0x44 (addr 0xffff9140ae00)
0xffff9140ae48   264  add w0, w0, #0x1 (1)
0xffff9140ae4c   268  lsl x1, x0, #32
0xffff9140ae50   272  mov x0, x7
0xffff9140ae54   276  mov jssp, fp
0xffff9140ae58   280  ldp fp, lr, [jssp], #16
0xffff9140ae5c   284  add jssp, jssp, x1, lsr #29
0xffff9140ae60   288  ret
0xffff9140ae64   292  movz x7, #0x0
0xffff9140ae68   296  mov x16, lr
0xffff9140ae6c   300  ldr x17, pc+92 (addr 0x0000ffff9140aec8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140ae70   304  blr x17
0xffff9140ae74   308  lsl x0, x4, #32
0xffff9140ae78   312  movz x10, #0x100000000
0xffff9140ae7c   316  sub csp, jssp, #0x10 (16)
0xffff9140ae80   320  stp x10, x0, [jssp, #-16]!
0xffff9140ae84   324  movz x0, #0x2
0xffff9140ae88   328  movz x1, #0x5b88
0xffff9140ae8c   332  movk x1, #0xe2, lsl #16
0xffff9140ae90   336  ldr x16, pc+64 (addr 0x0000ffff9140aed0)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140ae94   340  blr x16
0xffff9140ae98   344  str x0, [jssp, #56]
0xffff9140ae9c   348  ldr x16, pc+60 (addr 0x0000ffff9140aed8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140aea0   352  blr x16
0xffff9140aea4   356  b #-0x100 (addr 0xffff9140ada4)
0xffff9140aea8   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9140aeac   364  d63f03e0       constant
0xffff9140aeb0   368  49b04201       constant
0xffff9140aeb4   372  00000000       constant
0xffff9140aeb8   376  49b04201       constant
0xffff9140aebc   380  00000000       constant
0xffff9140aec0   384  364052d9       constant
0xffff9140aec4   388  00000000       constant
0xffff9140aec8   392  91406820       constant
0xffff9140aecc   396  0000ffff       constant
0xffff9140aed0   400  91406260       constant
0xffff9140aed4   404  0000ffff       constant
0xffff9140aed8   408  914068e0       constant
0xffff9140aedc   412  0000ffff       constant
0xffff9140aee0   416  movz x16, #0x0
0xffff9140aee4   420  bl #+0x14 (addr 0xffff9140aef8)
0xffff9140aee8   424  movz x16, #0x8
0xffff9140aeec   428  bl #+0xc (addr 0xffff9140aef8)
0xffff9140aef0   432  movz x16, #0x10
0xffff9140aef4   436  bl #+0x4 (addr 0xffff9140aef8)
0xffff9140aef8   440  ldr x17, pc+24 (addr 0x0000ffff9140af10)    ;; lazy deoptimization bailout 0
0xffff9140aefc   444  add x17, x17, x16
0xffff9140af00   448  br x17
0xffff9140af04   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140af08   456  d63f03e0       constant
0xffff9140af0c   460  d503201f       constant
0xffff9140af10   464  91206000       constant
0xffff9140af14   468  0000ffff       constant


Safepoints (size = 21)
0xffff9140ae98   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff9140adc0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140adc8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140add8  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140ae6c  code target (STUB)  (0xffff91406820)
0xffff9140ae90  code target (STUB)  (0xffff91406260)
0xffff9140ae9c  code target (STUB)  (0xffff914068e0)
0xffff9140aea8  constant pool (size 56)
0xffff9140aef8  runtime entry
0xffff9140af04  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_HOLEY_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 493)
0xffff9140ad40     0  movz x16, #0xa00000000
0xffff9140ad44     4  sub csp, jssp, #0x10 (16)
0xffff9140ad48     8  stp fp, lr, [jssp, #-16]!
0xffff9140ad4c    12  mov fp, jssp
0xffff9140ad50    16  sub csp, jssp, #0x8 (8)
0xffff9140ad54    20  sub jssp, jssp, #0x8 (8)
0xffff9140ad58    24  stur x16, [fp, #-8]
0xffff9140ad5c    28  movz w16, #0x257f
0xffff9140ad60    32  cmp w0, w16, lsl #3
0xffff9140ad64    36  b.hs #+0x17c (addr 0xffff9140aee0)
0xffff9140ad68    40  lsl x3, x0, #32
0xffff9140ad6c    44  lsl w4, w0, #3
0xffff9140ad70    48  add w4, w4, #0x10 (16)
0xffff9140ad74    52  cmp w4, #0x96000 (614400)
0xffff9140ad78    56  b.hs #+0x170 (addr 0xffff9140aee8)
0xffff9140ad7c    60  add w4, w4, #0x20 (32)
0xffff9140ad80    64  sxtw x4, w4
0xffff9140ad84    68  movz x5, #0xf2c0
0xffff9140ad88    72  movk x5, #0x4117, lsl #16
0xffff9140ad8c    76  ldp x7, x16, [x5]
0xffff9140ad90    80  adds x6, x7, x4
0xffff9140ad94    84  ccmp x6, x16, #nzCv, lo
0xffff9140ad98    88  b.hi #+0xcc (addr 0xffff9140ae64)
0xffff9140ad9c    92  str x6, [x5]
0xffff9140ada0    96  orr x7, x7, #0x1
0xffff9140ada4   100  movz w4, #0x0
0xffff9140ada8   104  stur x4, [x7, #31]
0xffff9140adac   108  ldur x4, [x1, #39]
0xffff9140adb0   112  ldur x4, [x4, #39]
0xffff9140adb4   116  movz x16, #0x19f
0xffff9140adb8   120  ldr x4, [x4, x16]
0xffff9140adbc   124  stur x4, [x7, #-1]
0xffff9140adc0   128  ldr x4, pc+240 (addr 0x0000ffff9140aeb0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140adc4   132  stur x4, [x7, #7]
0xffff9140adc8   136  ldr x4, pc+240 (addr 0x0000ffff9140aeb8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140adcc   140  stur x4, [x7, #15]
0xffff9140add0   144  stur x3, [x7, #23]
0xffff9140add4   148  add x4, x7, #0x20 (32)
0xffff9140add8   152  ldr x5, pc+232 (addr 0x0000ffff9140aec0)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9140addc   156  stur x5, [x4, #-1]
0xffff9140ade0   160  stur x3, [x4, #7]
0xffff9140ade4   164  stur x4, [x7, #15]
0xffff9140ade8   168  ldr x3, [fp]
0xffff9140adec   172  ldur x5, [x3, #-8]
0xffff9140adf0   176  movz x16, #0xe00000000
0xffff9140adf4   180  cmp x5, x16
0xffff9140adf8   184  csel x5, fp, x3, ne
0xffff9140adfc   188  movz x3, #0x0
0xffff9140ae00   192  cmp w0, w3
0xffff9140ae04   196  b.le #+0x44 (addr 0xffff9140ae48)
0xffff9140ae08   200  sub w6, w0, w3
0xffff9140ae0c   204  add w6, w6, #0x1 (1)
0xffff9140ae10   208  ldr x6, [x5, w6, uxtw #3]
0xffff9140ae14   212  tbz w6, #0, #+0x1c (addr 0xffff9140ae30)
0xffff9140ae18   216  ldur x16, [x6, #-1]
0xffff9140ae1c   220  ldr x17, [x26, #120]
0xffff9140ae20   224  cmp x16, x17
0xffff9140ae24   228  b.ne #+0xcc (addr 0xffff9140aef0)
0xffff9140ae28   232  ldur d0, [x6, #7]
0xffff9140ae2c   236  b #+0x8 (addr 0xffff9140ae34)
0xffff9140ae30   240  scvtf d0, x6, #32
0xffff9140ae34   244  add x6, x4, #0xf (15)
0xffff9140ae38   248  fsub d29, d0, d15
0xffff9140ae3c   252  str d29, [x6, w3, sxtw #3]
0xffff9140ae40   256  add w3, w3, #0x1 (1)
0xffff9140ae44   260  b #-0x44 (addr 0xffff9140ae00)
0xffff9140ae48   264  add w0, w0, #0x1 (1)
0xffff9140ae4c   268  lsl x1, x0, #32
0xffff9140ae50   272  mov x0, x7
0xffff9140ae54   276  mov jssp, fp
0xffff9140ae58   280  ldp fp, lr, [jssp], #16
0xffff9140ae5c   284  add jssp, jssp, x1, lsr #29
0xffff9140ae60   288  ret
0xffff9140ae64   292  movz x7, #0x0
0xffff9140ae68   296  mov x16, lr
0xffff9140ae6c   300  ldr x17, pc+92 (addr 0x0000ffff9140aec8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140ae70   304  blr x17
0xffff9140ae74   308  lsl x0, x4, #32
0xffff9140ae78   312  movz x10, #0x100000000
0xffff9140ae7c   316  sub csp, jssp, #0x10 (16)
0xffff9140ae80   320  stp x10, x0, [jssp, #-16]!
0xffff9140ae84   324  movz x0, #0x2
0xffff9140ae88   328  movz x1, #0x5b88
0xffff9140ae8c   332  movk x1, #0xe2, lsl #16
0xffff9140ae90   336  ldr x16, pc+64 (addr 0x0000ffff9140aed0)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140ae94   340  blr x16
0xffff9140ae98   344  str x0, [jssp, #56]
0xffff9140ae9c   348  ldr x16, pc+60 (addr 0x0000ffff9140aed8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140aea0   352  blr x16
0xffff9140aea4   356  b #-0x100 (addr 0xffff9140ada4)
0xffff9140aea8   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9140aeac   364  d63f03e0       constant
0xffff9140aeb0   368  49b04201       constant
0xffff9140aeb4   372  00000000       constant
0xffff9140aeb8   376  49b04201       constant
0xffff9140aebc   380  00000000       constant
0xffff9140aec0   384  364052d9       constant
0xffff9140aec4   388  00000000       constant
0xffff9140aec8   392  91406820       constant
0xffff9140aecc   396  0000ffff       constant
0xffff9140aed0   400  91406260       constant
0xffff9140aed4   404  0000ffff       constant
0xffff9140aed8   408  914068e0       constant
0xffff9140aedc   412  0000ffff       constant
0xffff9140aee0   416  movz x16, #0x0
0xffff9140aee4   420  bl #+0x14 (addr 0xffff9140aef8)
0xffff9140aee8   424  movz x16, #0x8
0xffff9140aeec   428  bl #+0xc (addr 0xffff9140aef8)
0xffff9140aef0   432  movz x16, #0x10
0xffff9140aef4   436  bl #+0x4 (addr 0xffff9140aef8)
0xffff9140aef8   440  ldr x17, pc+24 (addr 0x0000ffff9140af10)    ;; lazy deoptimization bailout 0
0xffff9140aefc   444  add x17, x17, x16
0xffff9140af00   448  br x17
0xffff9140af04   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140af08   456  d63f03e0       constant
0xffff9140af0c   460  d503201f       constant
0xffff9140af10   464  91206000       constant
0xffff9140af14   468  0000ffff       constant


Safepoints (size = 21)
0xffff9140ae98   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff9140adc0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140adc8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140add8  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140ae6c  code target (STUB)  (0xffff91406820)
0xffff9140ae90  code target (STUB)  (0xffff91406260)
0xffff9140ae9c  code target (STUB)  (0xffff914068e0)
0xffff9140aea8  constant pool (size 56)
0xffff9140aef8  runtime entry
0xffff9140af04  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 453)
0xffff9140afa0     0  movz x16, #0xa00000000
0xffff9140afa4     4  sub csp, jssp, #0x10 (16)
0xffff9140afa8     8  stp fp, lr, [jssp, #-16]!
0xffff9140afac    12  mov fp, jssp
0xffff9140afb0    16  sub csp, jssp, #0x8 (8)
0xffff9140afb4    20  sub jssp, jssp, #0x8 (8)
0xffff9140afb8    24  stur x16, [fp, #-8]
0xffff9140afbc    28  movz w16, #0x257f
0xffff9140afc0    32  cmp w0, w16, lsl #3
0xffff9140afc4    36  b.hs #+0x15c (addr 0xffff9140b120)
0xffff9140afc8    40  lsl x3, x0, #32
0xffff9140afcc    44  lsl w4, w0, #3
0xffff9140afd0    48  add w4, w4, #0x10 (16)
0xffff9140afd4    52  cmp w4, #0x96000 (614400)
0xffff9140afd8    56  b.hs #+0x150 (addr 0xffff9140b128)
0xffff9140afdc    60  add w2, w4, #0x20 (32)
0xffff9140afe0    64  sxtw x2, w2
0xffff9140afe4    68  movz x4, #0xf2c0
0xffff9140afe8    72  movk x4, #0x4117, lsl #16
0xffff9140afec    76  ldp x6, x16, [x4]
0xffff9140aff0    80  adds x5, x6, x2
0xffff9140aff4    84  ccmp x5, x16, #nzCv, lo
0xffff9140aff8    88  b.hi #+0xa8 (addr 0xffff9140b0a0)
0xffff9140affc    92  str x5, [x4]
0xffff9140b000    96  orr x6, x6, #0x1
0xffff9140b004   100  movz w2, #0x0
0xffff9140b008   104  stur x2, [x6, #31]
0xffff9140b00c   108  ldur x1, [x1, #39]
0xffff9140b010   112  ldur x1, [x1, #39]
0xffff9140b014   116  movz x16, #0x187
0xffff9140b018   120  ldr x1, [x1, x16]
0xffff9140b01c   124  stur x1, [x6, #-1]
0xffff9140b020   128  ldr x1, pc+208 (addr 0x0000ffff9140b0f0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140b024   132  stur x1, [x6, #7]
0xffff9140b028   136  ldr x1, pc+208 (addr 0x0000ffff9140b0f8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140b02c   140  stur x1, [x6, #15]
0xffff9140b030   144  stur x3, [x6, #23]
0xffff9140b034   148  add x1, x6, #0x20 (32)
0xffff9140b038   152  ldr x2, pc+200 (addr 0x0000ffff9140b100)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9140b03c   156  stur x2, [x1, #-1]
0xffff9140b040   160  stur x3, [x1, #7]
0xffff9140b044   164  stur x1, [x6, #15]
0xffff9140b048   168  ldr x2, [fp]
0xffff9140b04c   172  ldur x3, [x2, #-8]
0xffff9140b050   176  movz x16, #0xe00000000
0xffff9140b054   180  cmp x3, x16
0xffff9140b058   184  csel x3, fp, x2, ne
0xffff9140b05c   188  movz x2, #0x0
0xffff9140b060   192  cmp w0, w2
0xffff9140b064   196  b.le #+0x20 (addr 0xffff9140b084)
0xffff9140b068   200  sub w4, w0, w2
0xffff9140b06c   204  add w4, w4, #0x1 (1)
0xffff9140b070   208  ldr x4, [x3, w4, uxtw #3]
0xffff9140b074   212  add x5, x1, #0xf (15)
0xffff9140b078   216  str x4, [x5, w2, sxtw #3]
0xffff9140b07c   220  add w2, w2, #0x1 (1)
0xffff9140b080   224  b #-0x20 (addr 0xffff9140b060)
0xffff9140b084   228  add w0, w0, #0x1 (1)
0xffff9140b088   232  lsl x1, x0, #32
0xffff9140b08c   236  mov x0, x6
0xffff9140b090   240  mov jssp, fp
0xffff9140b094   244  ldp fp, lr, [jssp], #16
0xffff9140b098   248  add jssp, jssp, x1, lsr #29
0xffff9140b09c   252  ret
0xffff9140b0a0   256  movz x6, #0x0
0xffff9140b0a4   260  mov x16, lr
0xffff9140b0a8   264  ldr x17, pc+96 (addr 0x0000ffff9140b108)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140b0ac   268  blr x17
0xffff9140b0b0   272  lsl x0, x2, #32
0xffff9140b0b4   276  movz x10, #0x0
0xffff9140b0b8   280  sub csp, jssp, #0x10 (16)
0xffff9140b0bc   284  stp x10, x0, [jssp, #-16]!
0xffff9140b0c0   288  movz x0, #0x2
0xffff9140b0c4   292  movz x1, #0x5b88
0xffff9140b0c8   296  movk x1, #0xe2, lsl #16
0xffff9140b0cc   300  ldr x16, pc+68 (addr 0x0000ffff9140b110)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140b0d0   304  blr x16
0xffff9140b0d4   308  str x0, [jssp, #48]
0xffff9140b0d8   312  ldr x16, pc+64 (addr 0x0000ffff9140b118)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140b0dc   316  blr x16
0xffff9140b0e0   320  b #-0xdc (addr 0xffff9140b004)
0xffff9140b0e4   324  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff9140b0e8   328  d63f03e0       constant
0xffff9140b0ec   332  d503201f       constant
0xffff9140b0f0   336  49b04201       constant
0xffff9140b0f4   340  00000000       constant
0xffff9140b0f8   344  49b04201       constant
0xffff9140b0fc   348  00000000       constant
0xffff9140b100   352  36404259       constant
0xffff9140b104   356  00000000       constant
0xffff9140b108   360  91406820       constant
0xffff9140b10c   364  0000ffff       constant
0xffff9140b110   368  91406260       constant
0xffff9140b114   372  0000ffff       constant
0xffff9140b118   376  914068e0       constant
0xffff9140b11c   380  0000ffff       constant
0xffff9140b120   384  movz x16, #0x0
0xffff9140b124   388  bl #+0xc (addr 0xffff9140b130)
0xffff9140b128   392  movz x16, #0x8
0xffff9140b12c   396  bl #+0x4 (addr 0xffff9140b130)
0xffff9140b130   400  ldr x17, pc+24 (addr 0x0000ffff9140b148)    ;; lazy deoptimization bailout 0
0xffff9140b134   404  add x17, x17, x16
0xffff9140b138   408  br x17
0xffff9140b13c   412  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140b140   416  d63f03e0       constant
0xffff9140b144   420  d503201f       constant
0xffff9140b148   424  91206000       constant
0xffff9140b14c   428  0000ffff       constant


Safepoints (size = 21)
0xffff9140b0d4   308  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff9140b020  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140b028  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140b038  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140b0a8  code target (STUB)  (0xffff91406820)
0xffff9140b0cc  code target (STUB)  (0xffff91406260)
0xffff9140b0d8  code target (STUB)  (0xffff914068e0)
0xffff9140b0e4  constant pool (size 60)
0xffff9140b130  runtime entry
0xffff9140b13c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_ELEMENTS
compiler = crankshaft
Instructions (size = 453)
0xffff9140afa0     0  movz x16, #0xa00000000
0xffff9140afa4     4  sub csp, jssp, #0x10 (16)
0xffff9140afa8     8  stp fp, lr, [jssp, #-16]!
0xffff9140afac    12  mov fp, jssp
0xffff9140afb0    16  sub csp, jssp, #0x8 (8)
0xffff9140afb4    20  sub jssp, jssp, #0x8 (8)
0xffff9140afb8    24  stur x16, [fp, #-8]
0xffff9140afbc    28  movz w16, #0x257f
0xffff9140afc0    32  cmp w0, w16, lsl #3
0xffff9140afc4    36  b.hs #+0x15c (addr 0xffff9140b120)
0xffff9140afc8    40  lsl x3, x0, #32
0xffff9140afcc    44  lsl w4, w0, #3
0xffff9140afd0    48  add w4, w4, #0x10 (16)
0xffff9140afd4    52  cmp w4, #0x96000 (614400)
0xffff9140afd8    56  b.hs #+0x150 (addr 0xffff9140b128)
0xffff9140afdc    60  add w2, w4, #0x20 (32)
0xffff9140afe0    64  sxtw x2, w2
0xffff9140afe4    68  movz x4, #0xf2c0
0xffff9140afe8    72  movk x4, #0x4117, lsl #16
0xffff9140afec    76  ldp x6, x16, [x4]
0xffff9140aff0    80  adds x5, x6, x2
0xffff9140aff4    84  ccmp x5, x16, #nzCv, lo
0xffff9140aff8    88  b.hi #+0xa8 (addr 0xffff9140b0a0)
0xffff9140affc    92  str x5, [x4]
0xffff9140b000    96  orr x6, x6, #0x1
0xffff9140b004   100  movz w2, #0x0
0xffff9140b008   104  stur x2, [x6, #31]
0xffff9140b00c   108  ldur x1, [x1, #39]
0xffff9140b010   112  ldur x1, [x1, #39]
0xffff9140b014   116  movz x16, #0x187
0xffff9140b018   120  ldr x1, [x1, x16]
0xffff9140b01c   124  stur x1, [x6, #-1]
0xffff9140b020   128  ldr x1, pc+208 (addr 0x0000ffff9140b0f0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140b024   132  stur x1, [x6, #7]
0xffff9140b028   136  ldr x1, pc+208 (addr 0x0000ffff9140b0f8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140b02c   140  stur x1, [x6, #15]
0xffff9140b030   144  stur x3, [x6, #23]
0xffff9140b034   148  add x1, x6, #0x20 (32)
0xffff9140b038   152  ldr x2, pc+200 (addr 0x0000ffff9140b100)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9140b03c   156  stur x2, [x1, #-1]
0xffff9140b040   160  stur x3, [x1, #7]
0xffff9140b044   164  stur x1, [x6, #15]
0xffff9140b048   168  ldr x2, [fp]
0xffff9140b04c   172  ldur x3, [x2, #-8]
0xffff9140b050   176  movz x16, #0xe00000000
0xffff9140b054   180  cmp x3, x16
0xffff9140b058   184  csel x3, fp, x2, ne
0xffff9140b05c   188  movz x2, #0x0
0xffff9140b060   192  cmp w0, w2
0xffff9140b064   196  b.le #+0x20 (addr 0xffff9140b084)
0xffff9140b068   200  sub w4, w0, w2
0xffff9140b06c   204  add w4, w4, #0x1 (1)
0xffff9140b070   208  ldr x4, [x3, w4, uxtw #3]
0xffff9140b074   212  add x5, x1, #0xf (15)
0xffff9140b078   216  str x4, [x5, w2, sxtw #3]
0xffff9140b07c   220  add w2, w2, #0x1 (1)
0xffff9140b080   224  b #-0x20 (addr 0xffff9140b060)
0xffff9140b084   228  add w0, w0, #0x1 (1)
0xffff9140b088   232  lsl x1, x0, #32
0xffff9140b08c   236  mov x0, x6
0xffff9140b090   240  mov jssp, fp
0xffff9140b094   244  ldp fp, lr, [jssp], #16
0xffff9140b098   248  add jssp, jssp, x1, lsr #29
0xffff9140b09c   252  ret
0xffff9140b0a0   256  movz x6, #0x0
0xffff9140b0a4   260  mov x16, lr
0xffff9140b0a8   264  ldr x17, pc+96 (addr 0x0000ffff9140b108)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140b0ac   268  blr x17
0xffff9140b0b0   272  lsl x0, x2, #32
0xffff9140b0b4   276  movz x10, #0x0
0xffff9140b0b8   280  sub csp, jssp, #0x10 (16)
0xffff9140b0bc   284  stp x10, x0, [jssp, #-16]!
0xffff9140b0c0   288  movz x0, #0x2
0xffff9140b0c4   292  movz x1, #0x5b88
0xffff9140b0c8   296  movk x1, #0xe2, lsl #16
0xffff9140b0cc   300  ldr x16, pc+68 (addr 0x0000ffff9140b110)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140b0d0   304  blr x16
0xffff9140b0d4   308  str x0, [jssp, #48]
0xffff9140b0d8   312  ldr x16, pc+64 (addr 0x0000ffff9140b118)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140b0dc   316  blr x16
0xffff9140b0e0   320  b #-0xdc (addr 0xffff9140b004)
0xffff9140b0e4   324  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff9140b0e8   328  d63f03e0       constant
0xffff9140b0ec   332  d503201f       constant
0xffff9140b0f0   336  49b04201       constant
0xffff9140b0f4   340  00000000       constant
0xffff9140b0f8   344  49b04201       constant
0xffff9140b0fc   348  00000000       constant
0xffff9140b100   352  36404259       constant
0xffff9140b104   356  00000000       constant
0xffff9140b108   360  91406820       constant
0xffff9140b10c   364  0000ffff       constant
0xffff9140b110   368  91406260       constant
0xffff9140b114   372  0000ffff       constant
0xffff9140b118   376  914068e0       constant
0xffff9140b11c   380  0000ffff       constant
0xffff9140b120   384  movz x16, #0x0
0xffff9140b124   388  bl #+0xc (addr 0xffff9140b130)
0xffff9140b128   392  movz x16, #0x8
0xffff9140b12c   396  bl #+0x4 (addr 0xffff9140b130)
0xffff9140b130   400  ldr x17, pc+24 (addr 0x0000ffff9140b148)    ;; lazy deoptimization bailout 0
0xffff9140b134   404  add x17, x17, x16
0xffff9140b138   408  br x17
0xffff9140b13c   412  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140b140   416  d63f03e0       constant
0xffff9140b144   420  d503201f       constant
0xffff9140b148   424  91206000       constant
0xffff9140b14c   428  0000ffff       constant


Safepoints (size = 21)
0xffff9140b0d4   308  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff9140b020  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140b028  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140b038  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140b0a8  code target (STUB)  (0xffff91406820)
0xffff9140b0cc  code target (STUB)  (0xffff91406260)
0xffff9140b0d8  code target (STUB)  (0xffff914068e0)
0xffff9140b0e4  constant pool (size 60)
0xffff9140b130  runtime entry
0xffff9140b13c  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 453)
0xffff9140b1e0     0  movz x16, #0xa00000000
0xffff9140b1e4     4  sub csp, jssp, #0x10 (16)
0xffff9140b1e8     8  stp fp, lr, [jssp, #-16]!
0xffff9140b1ec    12  mov fp, jssp
0xffff9140b1f0    16  sub csp, jssp, #0x8 (8)
0xffff9140b1f4    20  sub jssp, jssp, #0x8 (8)
0xffff9140b1f8    24  stur x16, [fp, #-8]
0xffff9140b1fc    28  movz w16, #0x257f
0xffff9140b200    32  cmp w0, w16, lsl #3
0xffff9140b204    36  b.hs #+0x15c (addr 0xffff9140b360)
0xffff9140b208    40  lsl x3, x0, #32
0xffff9140b20c    44  lsl w4, w0, #3
0xffff9140b210    48  add w4, w4, #0x10 (16)
0xffff9140b214    52  cmp w4, #0x96000 (614400)
0xffff9140b218    56  b.hs #+0x150 (addr 0xffff9140b368)
0xffff9140b21c    60  add w2, w4, #0x20 (32)
0xffff9140b220    64  sxtw x2, w2
0xffff9140b224    68  movz x4, #0xf2c0
0xffff9140b228    72  movk x4, #0x4117, lsl #16
0xffff9140b22c    76  ldp x6, x16, [x4]
0xffff9140b230    80  adds x5, x6, x2
0xffff9140b234    84  ccmp x5, x16, #nzCv, lo
0xffff9140b238    88  b.hi #+0xa8 (addr 0xffff9140b2e0)
0xffff9140b23c    92  str x5, [x4]
0xffff9140b240    96  orr x6, x6, #0x1
0xffff9140b244   100  movz w2, #0x0
0xffff9140b248   104  stur x2, [x6, #31]
0xffff9140b24c   108  ldur x1, [x1, #39]
0xffff9140b250   112  ldur x1, [x1, #39]
0xffff9140b254   116  movz x16, #0x18f
0xffff9140b258   120  ldr x1, [x1, x16]
0xffff9140b25c   124  stur x1, [x6, #-1]
0xffff9140b260   128  ldr x1, pc+208 (addr 0x0000ffff9140b330)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140b264   132  stur x1, [x6, #7]
0xffff9140b268   136  ldr x1, pc+208 (addr 0x0000ffff9140b338)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140b26c   140  stur x1, [x6, #15]
0xffff9140b270   144  stur x3, [x6, #23]
0xffff9140b274   148  add x1, x6, #0x20 (32)
0xffff9140b278   152  ldr x2, pc+200 (addr 0x0000ffff9140b340)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9140b27c   156  stur x2, [x1, #-1]
0xffff9140b280   160  stur x3, [x1, #7]
0xffff9140b284   164  stur x1, [x6, #15]
0xffff9140b288   168  ldr x2, [fp]
0xffff9140b28c   172  ldur x3, [x2, #-8]
0xffff9140b290   176  movz x16, #0xe00000000
0xffff9140b294   180  cmp x3, x16
0xffff9140b298   184  csel x3, fp, x2, ne
0xffff9140b29c   188  movz x2, #0x0
0xffff9140b2a0   192  cmp w0, w2
0xffff9140b2a4   196  b.le #+0x20 (addr 0xffff9140b2c4)
0xffff9140b2a8   200  sub w4, w0, w2
0xffff9140b2ac   204  add w4, w4, #0x1 (1)
0xffff9140b2b0   208  ldr x4, [x3, w4, uxtw #3]
0xffff9140b2b4   212  add x5, x1, #0xf (15)
0xffff9140b2b8   216  str x4, [x5, w2, sxtw #3]
0xffff9140b2bc   220  add w2, w2, #0x1 (1)
0xffff9140b2c0   224  b #-0x20 (addr 0xffff9140b2a0)
0xffff9140b2c4   228  add w0, w0, #0x1 (1)
0xffff9140b2c8   232  lsl x1, x0, #32
0xffff9140b2cc   236  mov x0, x6
0xffff9140b2d0   240  mov jssp, fp
0xffff9140b2d4   244  ldp fp, lr, [jssp], #16
0xffff9140b2d8   248  add jssp, jssp, x1, lsr #29
0xffff9140b2dc   252  ret
0xffff9140b2e0   256  movz x6, #0x0
0xffff9140b2e4   260  mov x16, lr
0xffff9140b2e8   264  ldr x17, pc+96 (addr 0x0000ffff9140b348)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140b2ec   268  blr x17
0xffff9140b2f0   272  lsl x0, x2, #32
0xffff9140b2f4   276  movz x10, #0x0
0xffff9140b2f8   280  sub csp, jssp, #0x10 (16)
0xffff9140b2fc   284  stp x10, x0, [jssp, #-16]!
0xffff9140b300   288  movz x0, #0x2
0xffff9140b304   292  movz x1, #0x5b88
0xffff9140b308   296  movk x1, #0xe2, lsl #16
0xffff9140b30c   300  ldr x16, pc+68 (addr 0x0000ffff9140b350)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140b310   304  blr x16
0xffff9140b314   308  str x0, [jssp, #48]
0xffff9140b318   312  ldr x16, pc+64 (addr 0x0000ffff9140b358)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140b31c   316  blr x16
0xffff9140b320   320  b #-0xdc (addr 0xffff9140b244)
0xffff9140b324   324  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff9140b328   328  d63f03e0       constant
0xffff9140b32c   332  d503201f       constant
0xffff9140b330   336  49b04201       constant
0xffff9140b334   340  00000000       constant
0xffff9140b338   344  49b04201       constant
0xffff9140b33c   348  00000000       constant
0xffff9140b340   352  36404259       constant
0xffff9140b344   356  00000000       constant
0xffff9140b348   360  91406820       constant
0xffff9140b34c   364  0000ffff       constant
0xffff9140b350   368  91406260       constant
0xffff9140b354   372  0000ffff       constant
0xffff9140b358   376  914068e0       constant
0xffff9140b35c   380  0000ffff       constant
0xffff9140b360   384  movz x16, #0x0
0xffff9140b364   388  bl #+0xc (addr 0xffff9140b370)
0xffff9140b368   392  movz x16, #0x8
0xffff9140b36c   396  bl #+0x4 (addr 0xffff9140b370)
0xffff9140b370   400  ldr x17, pc+24 (addr 0x0000ffff9140b388)    ;; lazy deoptimization bailout 0
0xffff9140b374   404  add x17, x17, x16
0xffff9140b378   408  br x17
0xffff9140b37c   412  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140b380   416  d63f03e0       constant
0xffff9140b384   420  d503201f       constant
0xffff9140b388   424  91206000       constant
0xffff9140b38c   428  0000ffff       constant


Safepoints (size = 21)
0xffff9140b314   308  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff9140b260  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140b268  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140b278  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140b2e8  code target (STUB)  (0xffff91406820)
0xffff9140b30c  code target (STUB)  (0xffff91406260)
0xffff9140b318  code target (STUB)  (0xffff914068e0)
0xffff9140b324  constant pool (size 60)
0xffff9140b370  runtime entry
0xffff9140b37c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_HOLEY_ELEMENTS
compiler = crankshaft
Instructions (size = 453)
0xffff9140b1e0     0  movz x16, #0xa00000000
0xffff9140b1e4     4  sub csp, jssp, #0x10 (16)
0xffff9140b1e8     8  stp fp, lr, [jssp, #-16]!
0xffff9140b1ec    12  mov fp, jssp
0xffff9140b1f0    16  sub csp, jssp, #0x8 (8)
0xffff9140b1f4    20  sub jssp, jssp, #0x8 (8)
0xffff9140b1f8    24  stur x16, [fp, #-8]
0xffff9140b1fc    28  movz w16, #0x257f
0xffff9140b200    32  cmp w0, w16, lsl #3
0xffff9140b204    36  b.hs #+0x15c (addr 0xffff9140b360)
0xffff9140b208    40  lsl x3, x0, #32
0xffff9140b20c    44  lsl w4, w0, #3
0xffff9140b210    48  add w4, w4, #0x10 (16)
0xffff9140b214    52  cmp w4, #0x96000 (614400)
0xffff9140b218    56  b.hs #+0x150 (addr 0xffff9140b368)
0xffff9140b21c    60  add w2, w4, #0x20 (32)
0xffff9140b220    64  sxtw x2, w2
0xffff9140b224    68  movz x4, #0xf2c0
0xffff9140b228    72  movk x4, #0x4117, lsl #16
0xffff9140b22c    76  ldp x6, x16, [x4]
0xffff9140b230    80  adds x5, x6, x2
0xffff9140b234    84  ccmp x5, x16, #nzCv, lo
0xffff9140b238    88  b.hi #+0xa8 (addr 0xffff9140b2e0)
0xffff9140b23c    92  str x5, [x4]
0xffff9140b240    96  orr x6, x6, #0x1
0xffff9140b244   100  movz w2, #0x0
0xffff9140b248   104  stur x2, [x6, #31]
0xffff9140b24c   108  ldur x1, [x1, #39]
0xffff9140b250   112  ldur x1, [x1, #39]
0xffff9140b254   116  movz x16, #0x18f
0xffff9140b258   120  ldr x1, [x1, x16]
0xffff9140b25c   124  stur x1, [x6, #-1]
0xffff9140b260   128  ldr x1, pc+208 (addr 0x0000ffff9140b330)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140b264   132  stur x1, [x6, #7]
0xffff9140b268   136  ldr x1, pc+208 (addr 0x0000ffff9140b338)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140b26c   140  stur x1, [x6, #15]
0xffff9140b270   144  stur x3, [x6, #23]
0xffff9140b274   148  add x1, x6, #0x20 (32)
0xffff9140b278   152  ldr x2, pc+200 (addr 0x0000ffff9140b340)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9140b27c   156  stur x2, [x1, #-1]
0xffff9140b280   160  stur x3, [x1, #7]
0xffff9140b284   164  stur x1, [x6, #15]
0xffff9140b288   168  ldr x2, [fp]
0xffff9140b28c   172  ldur x3, [x2, #-8]
0xffff9140b290   176  movz x16, #0xe00000000
0xffff9140b294   180  cmp x3, x16
0xffff9140b298   184  csel x3, fp, x2, ne
0xffff9140b29c   188  movz x2, #0x0
0xffff9140b2a0   192  cmp w0, w2
0xffff9140b2a4   196  b.le #+0x20 (addr 0xffff9140b2c4)
0xffff9140b2a8   200  sub w4, w0, w2
0xffff9140b2ac   204  add w4, w4, #0x1 (1)
0xffff9140b2b0   208  ldr x4, [x3, w4, uxtw #3]
0xffff9140b2b4   212  add x5, x1, #0xf (15)
0xffff9140b2b8   216  str x4, [x5, w2, sxtw #3]
0xffff9140b2bc   220  add w2, w2, #0x1 (1)
0xffff9140b2c0   224  b #-0x20 (addr 0xffff9140b2a0)
0xffff9140b2c4   228  add w0, w0, #0x1 (1)
0xffff9140b2c8   232  lsl x1, x0, #32
0xffff9140b2cc   236  mov x0, x6
0xffff9140b2d0   240  mov jssp, fp
0xffff9140b2d4   244  ldp fp, lr, [jssp], #16
0xffff9140b2d8   248  add jssp, jssp, x1, lsr #29
0xffff9140b2dc   252  ret
0xffff9140b2e0   256  movz x6, #0x0
0xffff9140b2e4   260  mov x16, lr
0xffff9140b2e8   264  ldr x17, pc+96 (addr 0x0000ffff9140b348)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140b2ec   268  blr x17
0xffff9140b2f0   272  lsl x0, x2, #32
0xffff9140b2f4   276  movz x10, #0x0
0xffff9140b2f8   280  sub csp, jssp, #0x10 (16)
0xffff9140b2fc   284  stp x10, x0, [jssp, #-16]!
0xffff9140b300   288  movz x0, #0x2
0xffff9140b304   292  movz x1, #0x5b88
0xffff9140b308   296  movk x1, #0xe2, lsl #16
0xffff9140b30c   300  ldr x16, pc+68 (addr 0x0000ffff9140b350)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140b310   304  blr x16
0xffff9140b314   308  str x0, [jssp, #48]
0xffff9140b318   312  ldr x16, pc+64 (addr 0x0000ffff9140b358)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140b31c   316  blr x16
0xffff9140b320   320  b #-0xdc (addr 0xffff9140b244)
0xffff9140b324   324  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff9140b328   328  d63f03e0       constant
0xffff9140b32c   332  d503201f       constant
0xffff9140b330   336  49b04201       constant
0xffff9140b334   340  00000000       constant
0xffff9140b338   344  49b04201       constant
0xffff9140b33c   348  00000000       constant
0xffff9140b340   352  36404259       constant
0xffff9140b344   356  00000000       constant
0xffff9140b348   360  91406820       constant
0xffff9140b34c   364  0000ffff       constant
0xffff9140b350   368  91406260       constant
0xffff9140b354   372  0000ffff       constant
0xffff9140b358   376  914068e0       constant
0xffff9140b35c   380  0000ffff       constant
0xffff9140b360   384  movz x16, #0x0
0xffff9140b364   388  bl #+0xc (addr 0xffff9140b370)
0xffff9140b368   392  movz x16, #0x8
0xffff9140b36c   396  bl #+0x4 (addr 0xffff9140b370)
0xffff9140b370   400  ldr x17, pc+24 (addr 0x0000ffff9140b388)    ;; lazy deoptimization bailout 0
0xffff9140b374   404  add x17, x17, x16
0xffff9140b378   408  br x17
0xffff9140b37c   412  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140b380   416  d63f03e0       constant
0xffff9140b384   420  d503201f       constant
0xffff9140b388   424  91206000       constant
0xffff9140b38c   428  0000ffff       constant


Safepoints (size = 21)
0xffff9140b314   308  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff9140b260  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140b268  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140b278  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9140b2e8  code target (STUB)  (0xffff91406820)
0xffff9140b30c  code target (STUB)  (0xffff91406260)
0xffff9140b318  code target (STUB)  (0xffff914068e0)
0xffff9140b324  constant pool (size 60)
0xffff9140b370  runtime entry
0xffff9140b37c  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1904)
0xffff9140b420     0  adr xzr, #+0x40 (addr 0xffff9140b460)
0xffff9140b424     4  adr xzr, #+0x358 (addr 0xffff9140b77c)
0xffff9140b428     8  ldr x16, pc+1720 (addr 0x0000ffff9140bae0)    ;; external reference (store_buffer_top)
0xffff9140b42c    12  ldr x0, [x16]
0xffff9140b430    16  str x1, [x0], #8
0xffff9140b434    20  str x0, [x16]
0xffff9140b438    24  tst x0, #0x1ffff
0xffff9140b43c    28  b.eq #+0x8 (addr 0xffff9140b444)
0xffff9140b440    32  ret
0xffff9140b444    36  sub csp, jssp, #0x8 (8)
0xffff9140b448    40  str lr, [jssp, #-8]!
0xffff9140b44c    44  ldr x17, pc+1692 (addr 0x0000ffff9140bae8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140b450    48  blr x17
0xffff9140b454    52  ldr lr, [jssp], #8
0xffff9140b458    56  ret
0xffff9140b45c    60  ret
0xffff9140b460    64  sub csp, jssp, #0x10 (16)
0xffff9140b464    68  stp x3, x2, [jssp, #-16]!
0xffff9140b468    72  ldr x0, [x1]
0xffff9140b46c    76  and x16, x0, #0xfffffffffff00000
0xffff9140b470    80  ldr x16, [x16, #8]
0xffff9140b474    84  tst x16, #0x18
0xffff9140b478    88  b.eq #+0x1d4 (addr 0xffff9140b64c)
0xffff9140b47c    92  and x16, x4, #0xfffffffffff00000
0xffff9140b480    96  ldr x16, [x16, #8]
0xffff9140b484   100  tst x16, #0x18
0xffff9140b488   104  b.ne #+0x1c4 (addr 0xffff9140b64c)
0xffff9140b48c   108  and x0, x4, #0xfffffffffff00000
0xffff9140b490   112  ldr x2, [x0, #104]
0xffff9140b494   116  subs x2, x2, #0x1 (1)
0xffff9140b498   120  str x2, [x0, #104]
0xffff9140b49c   124  b.mi #+0xc4 (addr 0xffff9140b560)
0xffff9140b4a0   128  ubfx x16, x4, #8, #12
0xffff9140b4a4   132  and x0, x4, #0xfffffffffff00000
0xffff9140b4a8   136  add x0, x0, x16, lsl #2
0xffff9140b4ac   140  ubfx x2, x4, #3, #5
0xffff9140b4b0   144  ldr x0, [x0, #360]
0xffff9140b4b4   148  lsr x0, x0, x2
0xffff9140b4b8   152  tbz w0, #0, #+0x8 (addr 0xffff9140b4c0)
0xffff9140b4bc   156  tbnz w0, #1, #+0x3c (addr 0xffff9140b4f8)
0xffff9140b4c0   160  ldp x3, x2, [jssp], #16
0xffff9140b4c4   164  ldr x16, pc+1580 (addr 0x0000ffff9140baf0)    ;; external reference (store_buffer_top)
0xffff9140b4c8   168  ldr x0, [x16]
0xffff9140b4cc   172  str x1, [x0], #8
0xffff9140b4d0   176  str x0, [x16]
0xffff9140b4d4   180  tst x0, #0x1ffff
0xffff9140b4d8   184  b.eq #+0x8 (addr 0xffff9140b4e0)
0xffff9140b4dc   188  ret
0xffff9140b4e0   192  sub csp, jssp, #0x8 (8)
0xffff9140b4e4   196  str lr, [jssp, #-8]!
0xffff9140b4e8   200  ldr x17, pc+1552 (addr 0x0000ffff9140baf8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140b4ec   204  blr x17
0xffff9140b4f0   208  ldr lr, [jssp], #8
0xffff9140b4f4   212  ret
0xffff9140b4f8   216  ldr x0, [x1]
0xffff9140b4fc   220  sub csp, jssp, #0x10 (16)
0xffff9140b500   224  stp x4, x1, [jssp, #-16]!
0xffff9140b504   228  ubfx x16, x0, #8, #12
0xffff9140b508   232  and x2, x0, #0xfffffffffff00000
0xffff9140b50c   236  add x2, x2, x16, lsl #2
0xffff9140b510   240  ubfx x4, x0, #3, #5
0xffff9140b514   244  ldr x1, [x2, #360]
0xffff9140b518   248  lsr x1, x1, x4
0xffff9140b51c   252  tbz w1, #0, #+0x40 (addr 0xffff9140b55c)
0xffff9140b520   256  ldp x4, x1, [jssp], #16
0xffff9140b524   260  ldp x3, x2, [jssp], #16
0xffff9140b528   264  ldr x16, pc+1496 (addr 0x0000ffff9140bb00)    ;; external reference (store_buffer_top)
0xffff9140b52c   268  ldr x0, [x16]
0xffff9140b530   272  str x1, [x0], #8
0xffff9140b534   276  str x0, [x16]
0xffff9140b538   280  tst x0, #0x1ffff
0xffff9140b53c   284  b.eq #+0x8 (addr 0xffff9140b544)
0xffff9140b540   288  ret
0xffff9140b544   292  sub csp, jssp, #0x8 (8)
0xffff9140b548   296  str lr, [jssp, #-8]!
0xffff9140b54c   300  ldr x17, pc+1468 (addr 0x0000ffff9140bb08)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140b550   304  blr x17
0xffff9140b554   308  ldr lr, [jssp], #8
0xffff9140b558   312  ret
0xffff9140b55c   316  ldp x4, x1, [jssp], #16
0xffff9140b560   320  sub csp, jssp, #0x78 (120)
0xffff9140b564   324  stp x14, x15, [jssp, #-32]!
0xffff9140b568   328  stp x18, lr, [jssp, #16]
0xffff9140b56c   332  stp x10, x11, [jssp, #-32]!
0xffff9140b570   336  stp x12, x13, [jssp, #16]
0xffff9140b574   340  stp x6, x7, [jssp, #-32]!
0xffff9140b578   344  stp x8, x9, [jssp, #16]
0xffff9140b57c   348  stp x1, x4, [jssp, #-24]!
0xffff9140b580   352  str x5, [jssp, #16]
0xffff9140b584   356  sub csp, jssp, #0xb0 (176)
0xffff9140b588   360  stp d26, d27, [jssp, #-32]!
0xffff9140b58c   364  stp d28, d29, [jssp, #16]
0xffff9140b590   368  stp d22, d23, [jssp, #-32]!
0xffff9140b594   372  stp d24, d25, [jssp, #16]
0xffff9140b598   376  stp d18, d19, [jssp, #-32]!
0xffff9140b59c   380  stp d20, d21, [jssp, #16]
0xffff9140b5a0   384  stp d6, d7, [jssp, #-32]!
0xffff9140b5a4   388  stp d16, d17, [jssp, #16]
0xffff9140b5a8   392  stp d2, d3, [jssp, #-32]!
0xffff9140b5ac   396  stp d4, d5, [jssp, #16]
0xffff9140b5b0   400  stp d0, d1, [jssp, #-16]!
0xffff9140b5b4   404  mov x0, x4
0xffff9140b5b8   408  ldr x2, pc+1368 (addr 0x0000ffff9140bb10)    ;; external reference (isolate)
0xffff9140b5bc   412  ldr x16, pc+1372 (addr 0x0000ffff9140bb18)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140b5c0   416  and csp, jssp, #0xfffffffffffffff0
0xffff9140b5c4   420  blr x16
0xffff9140b5c8   424  ldp d2, d3, [jssp, #16]
0xffff9140b5cc   428  ldp d0, d1, [jssp], #32
0xffff9140b5d0   432  ldp d6, d7, [jssp, #16]
0xffff9140b5d4   436  ldp d4, d5, [jssp], #32
0xffff9140b5d8   440  ldp d18, d19, [jssp, #16]
0xffff9140b5dc   444  ldp d16, d17, [jssp], #32
0xffff9140b5e0   448  ldp d22, d23, [jssp, #16]
0xffff9140b5e4   452  ldp d20, d21, [jssp], #32
0xffff9140b5e8   456  ldp d26, d27, [jssp, #16]
0xffff9140b5ec   460  ldp d24, d25, [jssp], #32
0xffff9140b5f0   464  ldp d28, d29, [jssp], #16
0xffff9140b5f4   468  ldp x5, x6, [jssp, #16]
0xffff9140b5f8   472  ldp x1, x4, [jssp], #32
0xffff9140b5fc   476  ldp x9, x10, [jssp, #16]
0xffff9140b600   480  ldp x7, x8, [jssp], #32
0xffff9140b604   484  ldp x13, x14, [jssp, #16]
0xffff9140b608   488  ldp x11, x12, [jssp], #32
0xffff9140b60c   492  ldr lr, [jssp, #16]
0xffff9140b610   496  ldp x15, x18, [jssp], #24
0xffff9140b614   500  ldp x3, x2, [jssp], #16
0xffff9140b618   504  ldr x16, pc+1288 (addr 0x0000ffff9140bb20)    ;; external reference (store_buffer_top)
0xffff9140b61c   508  ldr x0, [x16]
0xffff9140b620   512  str x1, [x0], #8
0xffff9140b624   516  str x0, [x16]
0xffff9140b628   520  tst x0, #0x1ffff
0xffff9140b62c   524  b.eq #+0x8 (addr 0xffff9140b634)
0xffff9140b630   528  ret
0xffff9140b634   532  sub csp, jssp, #0x8 (8)
0xffff9140b638   536  str lr, [jssp, #-8]!
0xffff9140b63c   540  ldr x17, pc+1260 (addr 0x0000ffff9140bb28)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140b640   544  blr x17
0xffff9140b644   548  ldr lr, [jssp], #8
0xffff9140b648   552  ret
0xffff9140b64c   556  and x0, x4, #0xfffffffffff00000
0xffff9140b650   560  ldr x2, [x0, #104]
0xffff9140b654   564  subs x2, x2, #0x1 (1)
0xffff9140b658   568  str x2, [x0, #104]
0xffff9140b65c   572  b.mi #+0x64 (addr 0xffff9140b6c0)
0xffff9140b660   576  ubfx x16, x4, #8, #12
0xffff9140b664   580  and x0, x4, #0xfffffffffff00000
0xffff9140b668   584  add x0, x0, x16, lsl #2
0xffff9140b66c   588  ubfx x2, x4, #3, #5
0xffff9140b670   592  ldr x0, [x0, #360]
0xffff9140b674   596  lsr x0, x0, x2
0xffff9140b678   600  tbz w0, #0, #+0x8 (addr 0xffff9140b680)
0xffff9140b67c   604  tbnz w0, #1, #+0xc (addr 0xffff9140b688)
0xffff9140b680   608  ldp x3, x2, [jssp], #16
0xffff9140b684   612  ret
0xffff9140b688   616  ldr x0, [x1]
0xffff9140b68c   620  sub csp, jssp, #0x10 (16)
0xffff9140b690   624  stp x4, x1, [jssp, #-16]!
0xffff9140b694   628  ubfx x16, x0, #8, #12
0xffff9140b698   632  and x2, x0, #0xfffffffffff00000
0xffff9140b69c   636  add x2, x2, x16, lsl #2
0xffff9140b6a0   640  ubfx x4, x0, #3, #5
0xffff9140b6a4   644  ldr x1, [x2, #360]
0xffff9140b6a8   648  lsr x1, x1, x4
0xffff9140b6ac   652  tbz w1, #0, #+0x10 (addr 0xffff9140b6bc)
0xffff9140b6b0   656  ldp x4, x1, [jssp], #16
0xffff9140b6b4   660  ldp x3, x2, [jssp], #16
0xffff9140b6b8   664  ret
0xffff9140b6bc   668  ldp x4, x1, [jssp], #16
0xffff9140b6c0   672  sub csp, jssp, #0x78 (120)
0xffff9140b6c4   676  stp x14, x15, [jssp, #-32]!
0xffff9140b6c8   680  stp x18, lr, [jssp, #16]
0xffff9140b6cc   684  stp x10, x11, [jssp, #-32]!
0xffff9140b6d0   688  stp x12, x13, [jssp, #16]
0xffff9140b6d4   692  stp x6, x7, [jssp, #-32]!
0xffff9140b6d8   696  stp x8, x9, [jssp, #16]
0xffff9140b6dc   700  stp x1, x4, [jssp, #-24]!
0xffff9140b6e0   704  str x5, [jssp, #16]
0xffff9140b6e4   708  sub csp, jssp, #0xb0 (176)
0xffff9140b6e8   712  stp d26, d27, [jssp, #-32]!
0xffff9140b6ec   716  stp d28, d29, [jssp, #16]
0xffff9140b6f0   720  stp d22, d23, [jssp, #-32]!
0xffff9140b6f4   724  stp d24, d25, [jssp, #16]
0xffff9140b6f8   728  stp d18, d19, [jssp, #-32]!
0xffff9140b6fc   732  stp d20, d21, [jssp, #16]
0xffff9140b700   736  stp d6, d7, [jssp, #-32]!
0xffff9140b704   740  stp d16, d17, [jssp, #16]
0xffff9140b708   744  stp d2, d3, [jssp, #-32]!
0xffff9140b70c   748  stp d4, d5, [jssp, #16]
0xffff9140b710   752  stp d0, d1, [jssp, #-16]!
0xffff9140b714   756  mov x0, x4
0xffff9140b718   760  ldr x2, pc+1048 (addr 0x0000ffff9140bb30)    ;; external reference (isolate)
0xffff9140b71c   764  ldr x16, pc+1052 (addr 0x0000ffff9140bb38)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140b720   768  and csp, jssp, #0xfffffffffffffff0
0xffff9140b724   772  blr x16
0xffff9140b728   776  ldp d2, d3, [jssp, #16]
0xffff9140b72c   780  ldp d0, d1, [jssp], #32
0xffff9140b730   784  ldp d6, d7, [jssp, #16]
0xffff9140b734   788  ldp d4, d5, [jssp], #32
0xffff9140b738   792  ldp d18, d19, [jssp, #16]
0xffff9140b73c   796  ldp d16, d17, [jssp], #32
0xffff9140b740   800  ldp d22, d23, [jssp, #16]
0xffff9140b744   804  ldp d20, d21, [jssp], #32
0xffff9140b748   808  ldp d26, d27, [jssp, #16]
0xffff9140b74c   812  ldp d24, d25, [jssp], #32
0xffff9140b750   816  ldp d28, d29, [jssp], #16
0xffff9140b754   820  ldp x5, x6, [jssp, #16]
0xffff9140b758   824  ldp x1, x4, [jssp], #32
0xffff9140b75c   828  ldp x9, x10, [jssp, #16]
0xffff9140b760   832  ldp x7, x8, [jssp], #32
0xffff9140b764   836  ldp x13, x14, [jssp, #16]
0xffff9140b768   840  ldp x11, x12, [jssp], #32
0xffff9140b76c   844  ldr lr, [jssp, #16]
0xffff9140b770   848  ldp x15, x18, [jssp], #24
0xffff9140b774   852  ldp x3, x2, [jssp], #16
0xffff9140b778   856  ret
0xffff9140b77c   860  sub csp, jssp, #0x10 (16)
0xffff9140b780   864  stp x3, x2, [jssp, #-16]!
0xffff9140b784   868  ldr x0, [x1]
0xffff9140b788   872  and x16, x0, #0xfffffffffff00000
0xffff9140b78c   876  ldr x16, [x16, #8]
0xffff9140b790   880  tst x16, #0x18
0xffff9140b794   884  b.eq #+0x1f4 (addr 0xffff9140b988)
0xffff9140b798   888  and x16, x4, #0xfffffffffff00000
0xffff9140b79c   892  ldr x16, [x16, #8]
0xffff9140b7a0   896  tst x16, #0x18
0xffff9140b7a4   900  b.ne #+0x1e4 (addr 0xffff9140b988)
0xffff9140b7a8   904  and x0, x4, #0xfffffffffff00000
0xffff9140b7ac   908  ldr x2, [x0, #104]
0xffff9140b7b0   912  subs x2, x2, #0x1 (1)
0xffff9140b7b4   916  str x2, [x0, #104]
0xffff9140b7b8   920  b.mi #+0xe4 (addr 0xffff9140b89c)
0xffff9140b7bc   924  ubfx x16, x4, #8, #12
0xffff9140b7c0   928  and x0, x4, #0xfffffffffff00000
0xffff9140b7c4   932  add x0, x0, x16, lsl #2
0xffff9140b7c8   936  ubfx x2, x4, #3, #5
0xffff9140b7cc   940  ldr x0, [x0, #360]
0xffff9140b7d0   944  lsr x0, x0, x2
0xffff9140b7d4   948  tbz w0, #0, #+0x8 (addr 0xffff9140b7dc)
0xffff9140b7d8   952  tbnz w0, #1, #+0x3c (addr 0xffff9140b814)
0xffff9140b7dc   956  ldp x3, x2, [jssp], #16
0xffff9140b7e0   960  ldr x16, pc+864 (addr 0x0000ffff9140bb40)    ;; external reference (store_buffer_top)
0xffff9140b7e4   964  ldr x0, [x16]
0xffff9140b7e8   968  str x1, [x0], #8
0xffff9140b7ec   972  str x0, [x16]
0xffff9140b7f0   976  tst x0, #0x1ffff
0xffff9140b7f4   980  b.eq #+0x8 (addr 0xffff9140b7fc)
0xffff9140b7f8   984  ret
0xffff9140b7fc   988  sub csp, jssp, #0x8 (8)
0xffff9140b800   992  str lr, [jssp, #-8]!
0xffff9140b804   996  ldr x17, pc+836 (addr 0x0000ffff9140bb48)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140b808  1000  blr x17
0xffff9140b80c  1004  ldr lr, [jssp], #8
0xffff9140b810  1008  ret
0xffff9140b814  1012  ldr x0, [x1]
0xffff9140b818  1016  and x2, x0, #0xfffffffffff00000
0xffff9140b81c  1020  ldr x2, [x2, #8]
0xffff9140b820  1024  tbz w2, #6, #+0x18 (addr 0xffff9140b838)
0xffff9140b824  1028  and x2, x4, #0xfffffffffff00000
0xffff9140b828  1032  ldr x2, [x2, #8]
0xffff9140b82c  1036  movz x16, #0x58
0xffff9140b830  1040  tst x2, x16
0xffff9140b834  1044  b.eq #+0x68 (addr 0xffff9140b89c)
0xffff9140b838  1048  sub csp, jssp, #0x10 (16)
0xffff9140b83c  1052  stp x4, x1, [jssp, #-16]!
0xffff9140b840  1056  ubfx x16, x0, #8, #12
0xffff9140b844  1060  and x2, x0, #0xfffffffffff00000
0xffff9140b848  1064  add x2, x2, x16, lsl #2
0xffff9140b84c  1068  ubfx x4, x0, #3, #5
0xffff9140b850  1072  ldr x1, [x2, #360]
0xffff9140b854  1076  lsr x1, x1, x4
0xffff9140b858  1080  tbz w1, #0, #+0x40 (addr 0xffff9140b898)
0xffff9140b85c  1084  ldp x4, x1, [jssp], #16
0xffff9140b860  1088  ldp x3, x2, [jssp], #16
0xffff9140b864  1092  ldr x16, pc+748 (addr 0x0000ffff9140bb50)    ;; external reference (store_buffer_top)
0xffff9140b868  1096  ldr x0, [x16]
0xffff9140b86c  1100  str x1, [x0], #8
0xffff9140b870  1104  str x0, [x16]
0xffff9140b874  1108  tst x0, #0x1ffff
0xffff9140b878  1112  b.eq #+0x8 (addr 0xffff9140b880)
0xffff9140b87c  1116  ret
0xffff9140b880  1120  sub csp, jssp, #0x8 (8)
0xffff9140b884  1124  str lr, [jssp, #-8]!
0xffff9140b888  1128  ldr x17, pc+720 (addr 0x0000ffff9140bb58)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140b88c  1132  blr x17
0xffff9140b890  1136  ldr lr, [jssp], #8
0xffff9140b894  1140  ret
0xffff9140b898  1144  ldp x4, x1, [jssp], #16
0xffff9140b89c  1148  sub csp, jssp, #0x78 (120)
0xffff9140b8a0  1152  stp x14, x15, [jssp, #-32]!
0xffff9140b8a4  1156  stp x18, lr, [jssp, #16]
0xffff9140b8a8  1160  stp x10, x11, [jssp, #-32]!
0xffff9140b8ac  1164  stp x12, x13, [jssp, #16]
0xffff9140b8b0  1168  stp x6, x7, [jssp, #-32]!
0xffff9140b8b4  1172  stp x8, x9, [jssp, #16]
0xffff9140b8b8  1176  stp x1, x4, [jssp, #-24]!
0xffff9140b8bc  1180  str x5, [jssp, #16]
0xffff9140b8c0  1184  sub csp, jssp, #0xb0 (176)
0xffff9140b8c4  1188  stp d26, d27, [jssp, #-32]!
0xffff9140b8c8  1192  stp d28, d29, [jssp, #16]
0xffff9140b8cc  1196  stp d22, d23, [jssp, #-32]!
0xffff9140b8d0  1200  stp d24, d25, [jssp, #16]
0xffff9140b8d4  1204  stp d18, d19, [jssp, #-32]!
0xffff9140b8d8  1208  stp d20, d21, [jssp, #16]
0xffff9140b8dc  1212  stp d6, d7, [jssp, #-32]!
0xffff9140b8e0  1216  stp d16, d17, [jssp, #16]
0xffff9140b8e4  1220  stp d2, d3, [jssp, #-32]!
0xffff9140b8e8  1224  stp d4, d5, [jssp, #16]
0xffff9140b8ec  1228  stp d0, d1, [jssp, #-16]!
0xffff9140b8f0  1232  mov x0, x4
0xffff9140b8f4  1236  ldr x2, pc+620 (addr 0x0000ffff9140bb60)    ;; external reference (isolate)
0xffff9140b8f8  1240  ldr x16, pc+624 (addr 0x0000ffff9140bb68)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140b8fc  1244  and csp, jssp, #0xfffffffffffffff0
0xffff9140b900  1248  blr x16
0xffff9140b904  1252  ldp d2, d3, [jssp, #16]
0xffff9140b908  1256  ldp d0, d1, [jssp], #32
0xffff9140b90c  1260  ldp d6, d7, [jssp, #16]
0xffff9140b910  1264  ldp d4, d5, [jssp], #32
0xffff9140b914  1268  ldp d18, d19, [jssp, #16]
0xffff9140b918  1272  ldp d16, d17, [jssp], #32
0xffff9140b91c  1276  ldp d22, d23, [jssp, #16]
0xffff9140b920  1280  ldp d20, d21, [jssp], #32
0xffff9140b924  1284  ldp d26, d27, [jssp, #16]
0xffff9140b928  1288  ldp d24, d25, [jssp], #32
0xffff9140b92c  1292  ldp d28, d29, [jssp], #16
0xffff9140b930  1296  ldp x5, x6, [jssp, #16]
0xffff9140b934  1300  ldp x1, x4, [jssp], #32
0xffff9140b938  1304  ldp x9, x10, [jssp, #16]
0xffff9140b93c  1308  ldp x7, x8, [jssp], #32
0xffff9140b940  1312  ldp x13, x14, [jssp, #16]
0xffff9140b944  1316  ldp x11, x12, [jssp], #32
0xffff9140b948  1320  ldr lr, [jssp, #16]
0xffff9140b94c  1324  ldp x15, x18, [jssp], #24
0xffff9140b950  1328  ldp x3, x2, [jssp], #16
0xffff9140b954  1332  ldr x16, pc+540 (addr 0x0000ffff9140bb70)    ;; external reference (store_buffer_top)
0xffff9140b958  1336  ldr x0, [x16]
0xffff9140b95c  1340  str x1, [x0], #8
0xffff9140b960  1344  str x0, [x16]
0xffff9140b964  1348  tst x0, #0x1ffff
0xffff9140b968  1352  b.eq #+0x8 (addr 0xffff9140b970)
0xffff9140b96c  1356  ret
0xffff9140b970  1360  sub csp, jssp, #0x8 (8)
0xffff9140b974  1364  str lr, [jssp, #-8]!
0xffff9140b978  1368  ldr x17, pc+512 (addr 0x0000ffff9140bb78)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140b97c  1372  blr x17
0xffff9140b980  1376  ldr lr, [jssp], #8
0xffff9140b984  1380  ret
0xffff9140b988  1384  and x0, x4, #0xfffffffffff00000
0xffff9140b98c  1388  ldr x2, [x0, #104]
0xffff9140b990  1392  subs x2, x2, #0x1 (1)
0xffff9140b994  1396  str x2, [x0, #104]
0xffff9140b998  1400  b.mi #+0x84 (addr 0xffff9140ba1c)
0xffff9140b99c  1404  ubfx x16, x4, #8, #12
0xffff9140b9a0  1408  and x0, x4, #0xfffffffffff00000
0xffff9140b9a4  1412  add x0, x0, x16, lsl #2
0xffff9140b9a8  1416  ubfx x2, x4, #3, #5
0xffff9140b9ac  1420  ldr x0, [x0, #360]
0xffff9140b9b0  1424  lsr x0, x0, x2
0xffff9140b9b4  1428  tbz w0, #0, #+0x8 (addr 0xffff9140b9bc)
0xffff9140b9b8  1432  tbnz w0, #1, #+0xc (addr 0xffff9140b9c4)
0xffff9140b9bc  1436  ldp x3, x2, [jssp], #16
0xffff9140b9c0  1440  ret
0xffff9140b9c4  1444  ldr x0, [x1]
0xffff9140b9c8  1448  and x2, x0, #0xfffffffffff00000
0xffff9140b9cc  1452  ldr x2, [x2, #8]
0xffff9140b9d0  1456  tbz w2, #6, #+0x18 (addr 0xffff9140b9e8)
0xffff9140b9d4  1460  and x2, x4, #0xfffffffffff00000
0xffff9140b9d8  1464  ldr x2, [x2, #8]
0xffff9140b9dc  1468  movz x16, #0x58
0xffff9140b9e0  1472  tst x2, x16
0xffff9140b9e4  1476  b.eq #+0x38 (addr 0xffff9140ba1c)
0xffff9140b9e8  1480  sub csp, jssp, #0x10 (16)
0xffff9140b9ec  1484  stp x4, x1, [jssp, #-16]!
0xffff9140b9f0  1488  ubfx x16, x0, #8, #12
0xffff9140b9f4  1492  and x2, x0, #0xfffffffffff00000
0xffff9140b9f8  1496  add x2, x2, x16, lsl #2
0xffff9140b9fc  1500  ubfx x4, x0, #3, #5
0xffff9140ba00  1504  ldr x1, [x2, #360]
0xffff9140ba04  1508  lsr x1, x1, x4
0xffff9140ba08  1512  tbz w1, #0, #+0x10 (addr 0xffff9140ba18)
0xffff9140ba0c  1516  ldp x4, x1, [jssp], #16
0xffff9140ba10  1520  ldp x3, x2, [jssp], #16
0xffff9140ba14  1524  ret
0xffff9140ba18  1528  ldp x4, x1, [jssp], #16
0xffff9140ba1c  1532  sub csp, jssp, #0x78 (120)
0xffff9140ba20  1536  stp x14, x15, [jssp, #-32]!
0xffff9140ba24  1540  stp x18, lr, [jssp, #16]
0xffff9140ba28  1544  stp x10, x11, [jssp, #-32]!
0xffff9140ba2c  1548  stp x12, x13, [jssp, #16]
0xffff9140ba30  1552  stp x6, x7, [jssp, #-32]!
0xffff9140ba34  1556  stp x8, x9, [jssp, #16]
0xffff9140ba38  1560  stp x1, x4, [jssp, #-24]!
0xffff9140ba3c  1564  str x5, [jssp, #16]
0xffff9140ba40  1568  sub csp, jssp, #0xb0 (176)
0xffff9140ba44  1572  stp d26, d27, [jssp, #-32]!
0xffff9140ba48  1576  stp d28, d29, [jssp, #16]
0xffff9140ba4c  1580  stp d22, d23, [jssp, #-32]!
0xffff9140ba50  1584  stp d24, d25, [jssp, #16]
0xffff9140ba54  1588  stp d18, d19, [jssp, #-32]!
0xffff9140ba58  1592  stp d20, d21, [jssp, #16]
0xffff9140ba5c  1596  stp d6, d7, [jssp, #-32]!
0xffff9140ba60  1600  stp d16, d17, [jssp, #16]
0xffff9140ba64  1604  stp d2, d3, [jssp, #-32]!
0xffff9140ba68  1608  stp d4, d5, [jssp, #16]
0xffff9140ba6c  1612  stp d0, d1, [jssp, #-16]!
0xffff9140ba70  1616  mov x0, x4
0xffff9140ba74  1620  ldr x2, pc+268 (addr 0x0000ffff9140bb80)    ;; external reference (isolate)
0xffff9140ba78  1624  ldr x16, pc+272 (addr 0x0000ffff9140bb88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140ba7c  1628  and csp, jssp, #0xfffffffffffffff0
0xffff9140ba80  1632  blr x16
0xffff9140ba84  1636  ldp d2, d3, [jssp, #16]
0xffff9140ba88  1640  ldp d0, d1, [jssp], #32
0xffff9140ba8c  1644  ldp d6, d7, [jssp, #16]
0xffff9140ba90  1648  ldp d4, d5, [jssp], #32
0xffff9140ba94  1652  ldp d18, d19, [jssp, #16]
0xffff9140ba98  1656  ldp d16, d17, [jssp], #32
0xffff9140ba9c  1660  ldp d22, d23, [jssp, #16]
0xffff9140baa0  1664  ldp d20, d21, [jssp], #32
0xffff9140baa4  1668  ldp d26, d27, [jssp, #16]
0xffff9140baa8  1672  ldp d24, d25, [jssp], #32
0xffff9140baac  1676  ldp d28, d29, [jssp], #16
0xffff9140bab0  1680  ldp x5, x6, [jssp, #16]
0xffff9140bab4  1684  ldp x1, x4, [jssp], #32
0xffff9140bab8  1688  ldp x9, x10, [jssp, #16]
0xffff9140babc  1692  ldp x7, x8, [jssp], #32
0xffff9140bac0  1696  ldp x13, x14, [jssp, #16]
0xffff9140bac4  1700  ldp x11, x12, [jssp], #32
0xffff9140bac8  1704  ldr lr, [jssp, #16]
0xffff9140bacc  1708  ldp x15, x18, [jssp], #24
0xffff9140bad0  1712  ldp x3, x2, [jssp], #16
0xffff9140bad4  1716  ret
0xffff9140bad8  1720  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9140badc  1724  d63f03e0       constant
0xffff9140bae0  1728  4117f8c0       constant
0xffff9140bae4  1732  00000000       constant
0xffff9140bae8  1736  914065a0       constant
0xffff9140baec  1740  0000ffff       constant
0xffff9140baf0  1744  4117f8c0       constant
0xffff9140baf4  1748  00000000       constant
0xffff9140baf8  1752  914065a0       constant
0xffff9140bafc  1756  0000ffff       constant
0xffff9140bb00  1760  4117f8c0       constant
0xffff9140bb04  1764  00000000       constant
0xffff9140bb08  1768  914065a0       constant
0xffff9140bb0c  1772  0000ffff       constant
0xffff9140bb10  1776  4117e2d0       constant
0xffff9140bb14  1780  00000000       constant
0xffff9140bb18  1784  00c2d958       constant
0xffff9140bb1c  1788  00000000       constant
0xffff9140bb20  1792  4117f8c0       constant
0xffff9140bb24  1796  00000000       constant
0xffff9140bb28  1800  914065a0       constant
0xffff9140bb2c  1804  0000ffff       constant
0xffff9140bb30  1808  4117e2d0       constant
0xffff9140bb34  1812  00000000       constant
0xffff9140bb38  1816  00c2d958       constant
0xffff9140bb3c  1820  00000000       constant
0xffff9140bb40  1824  4117f8c0       constant
0xffff9140bb44  1828  00000000       constant
0xffff9140bb48  1832  914065a0       constant
0xffff9140bb4c  1836  0000ffff       constant
0xffff9140bb50  1840  4117f8c0       constant
0xffff9140bb54  1844  00000000       constant
0xffff9140bb58  1848  914065a0       constant
0xffff9140bb5c  1852  0000ffff       constant
0xffff9140bb60  1856  4117e2d0       constant
0xffff9140bb64  1860  00000000       constant
0xffff9140bb68  1864  00c2d958       constant
0xffff9140bb6c  1868  00000000       constant
0xffff9140bb70  1872  4117f8c0       constant
0xffff9140bb74  1876  00000000       constant
0xffff9140bb78  1880  914065a0       constant
0xffff9140bb7c  1884  0000ffff       constant
0xffff9140bb80  1888  4117e2d0       constant
0xffff9140bb84  1892  00000000       constant
0xffff9140bb88  1896  00c2d958       constant
0xffff9140bb8c  1900  00000000       constant


RelocInfo (size = 65)
0xffff9140b428  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140b44c  code target (STUB)  (0xffff914065a0)
0xffff9140b4c4  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140b4e8  code target (STUB)  (0xffff914065a0)
0xffff9140b528  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140b54c  code target (STUB)  (0xffff914065a0)
0xffff9140b5b8  external reference (isolate)  (0x4117e2d0)
0xffff9140b5bc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140b618  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140b63c  code target (STUB)  (0xffff914065a0)
0xffff9140b718  external reference (isolate)  (0x4117e2d0)
0xffff9140b71c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140b7e0  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140b804  code target (STUB)  (0xffff914065a0)
0xffff9140b864  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140b888  code target (STUB)  (0xffff914065a0)
0xffff9140b8f4  external reference (isolate)  (0x4117e2d0)
0xffff9140b8f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140b954  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140b978  code target (STUB)  (0xffff914065a0)
0xffff9140ba74  external reference (isolate)  (0x4117e2d0)
0xffff9140ba78  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140bad8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff9140bc00     0  adr xzr, #+0x40 (addr 0xffff9140bc40)
0xffff9140bc04     4  adr xzr, #+0x360 (addr 0xffff9140bf64)
0xffff9140bc08     8  ldr x16, pc+1736 (addr 0x0000ffff9140c2d0)    ;; external reference (store_buffer_top)
0xffff9140bc0c    12  ldr x1, [x16]
0xffff9140bc10    16  str x5, [x1], #8
0xffff9140bc14    20  str x1, [x16]
0xffff9140bc18    24  tst x1, #0x1ffff
0xffff9140bc1c    28  b.eq #+0x8 (addr 0xffff9140bc24)
0xffff9140bc20    32  ret
0xffff9140bc24    36  sub csp, jssp, #0x8 (8)
0xffff9140bc28    40  str lr, [jssp, #-8]!
0xffff9140bc2c    44  ldr x17, pc+1708 (addr 0x0000ffff9140c2d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140bc30    48  blr x17
0xffff9140bc34    52  ldr lr, [jssp], #8
0xffff9140bc38    56  ret
0xffff9140bc3c    60  ret
0xffff9140bc40    64  sub csp, jssp, #0x10 (16)
0xffff9140bc44    68  stp x2, x0, [jssp, #-16]!
0xffff9140bc48    72  ldr x1, [x5]
0xffff9140bc4c    76  and x16, x1, #0xfffffffffff00000
0xffff9140bc50    80  ldr x16, [x16, #8]
0xffff9140bc54    84  tst x16, #0x18
0xffff9140bc58    88  b.eq #+0x1d8 (addr 0xffff9140be30)
0xffff9140bc5c    92  and x16, x4, #0xfffffffffff00000
0xffff9140bc60    96  ldr x16, [x16, #8]
0xffff9140bc64   100  tst x16, #0x18
0xffff9140bc68   104  b.ne #+0x1c8 (addr 0xffff9140be30)
0xffff9140bc6c   108  and x1, x4, #0xfffffffffff00000
0xffff9140bc70   112  ldr x0, [x1, #104]
0xffff9140bc74   116  subs x0, x0, #0x1 (1)
0xffff9140bc78   120  str x0, [x1, #104]
0xffff9140bc7c   124  b.mi #+0xc4 (addr 0xffff9140bd40)
0xffff9140bc80   128  ubfx x16, x4, #8, #12
0xffff9140bc84   132  and x1, x4, #0xfffffffffff00000
0xffff9140bc88   136  add x1, x1, x16, lsl #2
0xffff9140bc8c   140  ubfx x0, x4, #3, #5
0xffff9140bc90   144  ldr x1, [x1, #360]
0xffff9140bc94   148  lsr x1, x1, x0
0xffff9140bc98   152  tbz w1, #0, #+0x8 (addr 0xffff9140bca0)
0xffff9140bc9c   156  tbnz w1, #1, #+0x3c (addr 0xffff9140bcd8)
0xffff9140bca0   160  ldp x2, x0, [jssp], #16
0xffff9140bca4   164  ldr x16, pc+1596 (addr 0x0000ffff9140c2e0)    ;; external reference (store_buffer_top)
0xffff9140bca8   168  ldr x1, [x16]
0xffff9140bcac   172  str x5, [x1], #8
0xffff9140bcb0   176  str x1, [x16]
0xffff9140bcb4   180  tst x1, #0x1ffff
0xffff9140bcb8   184  b.eq #+0x8 (addr 0xffff9140bcc0)
0xffff9140bcbc   188  ret
0xffff9140bcc0   192  sub csp, jssp, #0x8 (8)
0xffff9140bcc4   196  str lr, [jssp, #-8]!
0xffff9140bcc8   200  ldr x17, pc+1568 (addr 0x0000ffff9140c2e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140bccc   204  blr x17
0xffff9140bcd0   208  ldr lr, [jssp], #8
0xffff9140bcd4   212  ret
0xffff9140bcd8   216  ldr x1, [x5]
0xffff9140bcdc   220  sub csp, jssp, #0x10 (16)
0xffff9140bce0   224  stp x4, x5, [jssp, #-16]!
0xffff9140bce4   228  ubfx x16, x1, #8, #12
0xffff9140bce8   232  and x0, x1, #0xfffffffffff00000
0xffff9140bcec   236  add x0, x0, x16, lsl #2
0xffff9140bcf0   240  ubfx x4, x1, #3, #5
0xffff9140bcf4   244  ldr x5, [x0, #360]
0xffff9140bcf8   248  lsr x5, x5, x4
0xffff9140bcfc   252  tbz w5, #0, #+0x40 (addr 0xffff9140bd3c)
0xffff9140bd00   256  ldp x4, x5, [jssp], #16
0xffff9140bd04   260  ldp x2, x0, [jssp], #16
0xffff9140bd08   264  ldr x16, pc+1512 (addr 0x0000ffff9140c2f0)    ;; external reference (store_buffer_top)
0xffff9140bd0c   268  ldr x1, [x16]
0xffff9140bd10   272  str x5, [x1], #8
0xffff9140bd14   276  str x1, [x16]
0xffff9140bd18   280  tst x1, #0x1ffff
0xffff9140bd1c   284  b.eq #+0x8 (addr 0xffff9140bd24)
0xffff9140bd20   288  ret
0xffff9140bd24   292  sub csp, jssp, #0x8 (8)
0xffff9140bd28   296  str lr, [jssp, #-8]!
0xffff9140bd2c   300  ldr x17, pc+1484 (addr 0x0000ffff9140c2f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140bd30   304  blr x17
0xffff9140bd34   308  ldr lr, [jssp], #8
0xffff9140bd38   312  ret
0xffff9140bd3c   316  ldp x4, x5, [jssp], #16
0xffff9140bd40   320  sub csp, jssp, #0x78 (120)
0xffff9140bd44   324  stp x14, x15, [jssp, #-32]!
0xffff9140bd48   328  stp x18, lr, [jssp, #16]
0xffff9140bd4c   332  stp x10, x11, [jssp, #-32]!
0xffff9140bd50   336  stp x12, x13, [jssp, #16]
0xffff9140bd54   340  stp x6, x7, [jssp, #-32]!
0xffff9140bd58   344  stp x8, x9, [jssp, #16]
0xffff9140bd5c   348  stp x3, x4, [jssp, #-24]!
0xffff9140bd60   352  str x5, [jssp, #16]
0xffff9140bd64   356  sub csp, jssp, #0xb0 (176)
0xffff9140bd68   360  stp d26, d27, [jssp, #-32]!
0xffff9140bd6c   364  stp d28, d29, [jssp, #16]
0xffff9140bd70   368  stp d22, d23, [jssp, #-32]!
0xffff9140bd74   372  stp d24, d25, [jssp, #16]
0xffff9140bd78   376  stp d18, d19, [jssp, #-32]!
0xffff9140bd7c   380  stp d20, d21, [jssp, #16]
0xffff9140bd80   384  stp d6, d7, [jssp, #-32]!
0xffff9140bd84   388  stp d16, d17, [jssp, #16]
0xffff9140bd88   392  stp d2, d3, [jssp, #-32]!
0xffff9140bd8c   396  stp d4, d5, [jssp, #16]
0xffff9140bd90   400  stp d0, d1, [jssp, #-16]!
0xffff9140bd94   404  mov x0, x4
0xffff9140bd98   408  mov x1, x5
0xffff9140bd9c   412  ldr x2, pc+1380 (addr 0x0000ffff9140c300)    ;; external reference (isolate)
0xffff9140bda0   416  ldr x16, pc+1384 (addr 0x0000ffff9140c308)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140bda4   420  and csp, jssp, #0xfffffffffffffff0
0xffff9140bda8   424  blr x16
0xffff9140bdac   428  ldp d2, d3, [jssp, #16]
0xffff9140bdb0   432  ldp d0, d1, [jssp], #32
0xffff9140bdb4   436  ldp d6, d7, [jssp, #16]
0xffff9140bdb8   440  ldp d4, d5, [jssp], #32
0xffff9140bdbc   444  ldp d18, d19, [jssp, #16]
0xffff9140bdc0   448  ldp d16, d17, [jssp], #32
0xffff9140bdc4   452  ldp d22, d23, [jssp, #16]
0xffff9140bdc8   456  ldp d20, d21, [jssp], #32
0xffff9140bdcc   460  ldp d26, d27, [jssp, #16]
0xffff9140bdd0   464  ldp d24, d25, [jssp], #32
0xffff9140bdd4   468  ldp d28, d29, [jssp], #16
0xffff9140bdd8   472  ldp x5, x6, [jssp, #16]
0xffff9140bddc   476  ldp x3, x4, [jssp], #32
0xffff9140bde0   480  ldp x9, x10, [jssp, #16]
0xffff9140bde4   484  ldp x7, x8, [jssp], #32
0xffff9140bde8   488  ldp x13, x14, [jssp, #16]
0xffff9140bdec   492  ldp x11, x12, [jssp], #32
0xffff9140bdf0   496  ldr lr, [jssp, #16]
0xffff9140bdf4   500  ldp x15, x18, [jssp], #24
0xffff9140bdf8   504  ldp x2, x0, [jssp], #16
0xffff9140bdfc   508  ldr x16, pc+1300 (addr 0x0000ffff9140c310)    ;; external reference (store_buffer_top)
0xffff9140be00   512  ldr x1, [x16]
0xffff9140be04   516  str x5, [x1], #8
0xffff9140be08   520  str x1, [x16]
0xffff9140be0c   524  tst x1, #0x1ffff
0xffff9140be10   528  b.eq #+0x8 (addr 0xffff9140be18)
0xffff9140be14   532  ret
0xffff9140be18   536  sub csp, jssp, #0x8 (8)
0xffff9140be1c   540  str lr, [jssp, #-8]!
0xffff9140be20   544  ldr x17, pc+1272 (addr 0x0000ffff9140c318)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140be24   548  blr x17
0xffff9140be28   552  ldr lr, [jssp], #8
0xffff9140be2c   556  ret
0xffff9140be30   560  and x1, x4, #0xfffffffffff00000
0xffff9140be34   564  ldr x0, [x1, #104]
0xffff9140be38   568  subs x0, x0, #0x1 (1)
0xffff9140be3c   572  str x0, [x1, #104]
0xffff9140be40   576  b.mi #+0x64 (addr 0xffff9140bea4)
0xffff9140be44   580  ubfx x16, x4, #8, #12
0xffff9140be48   584  and x1, x4, #0xfffffffffff00000
0xffff9140be4c   588  add x1, x1, x16, lsl #2
0xffff9140be50   592  ubfx x0, x4, #3, #5
0xffff9140be54   596  ldr x1, [x1, #360]
0xffff9140be58   600  lsr x1, x1, x0
0xffff9140be5c   604  tbz w1, #0, #+0x8 (addr 0xffff9140be64)
0xffff9140be60   608  tbnz w1, #1, #+0xc (addr 0xffff9140be6c)
0xffff9140be64   612  ldp x2, x0, [jssp], #16
0xffff9140be68   616  ret
0xffff9140be6c   620  ldr x1, [x5]
0xffff9140be70   624  sub csp, jssp, #0x10 (16)
0xffff9140be74   628  stp x4, x5, [jssp, #-16]!
0xffff9140be78   632  ubfx x16, x1, #8, #12
0xffff9140be7c   636  and x0, x1, #0xfffffffffff00000
0xffff9140be80   640  add x0, x0, x16, lsl #2
0xffff9140be84   644  ubfx x4, x1, #3, #5
0xffff9140be88   648  ldr x5, [x0, #360]
0xffff9140be8c   652  lsr x5, x5, x4
0xffff9140be90   656  tbz w5, #0, #+0x10 (addr 0xffff9140bea0)
0xffff9140be94   660  ldp x4, x5, [jssp], #16
0xffff9140be98   664  ldp x2, x0, [jssp], #16
0xffff9140be9c   668  ret
0xffff9140bea0   672  ldp x4, x5, [jssp], #16
0xffff9140bea4   676  sub csp, jssp, #0x78 (120)
0xffff9140bea8   680  stp x14, x15, [jssp, #-32]!
0xffff9140beac   684  stp x18, lr, [jssp, #16]
0xffff9140beb0   688  stp x10, x11, [jssp, #-32]!
0xffff9140beb4   692  stp x12, x13, [jssp, #16]
0xffff9140beb8   696  stp x6, x7, [jssp, #-32]!
0xffff9140bebc   700  stp x8, x9, [jssp, #16]
0xffff9140bec0   704  stp x3, x4, [jssp, #-24]!
0xffff9140bec4   708  str x5, [jssp, #16]
0xffff9140bec8   712  sub csp, jssp, #0xb0 (176)
0xffff9140becc   716  stp d26, d27, [jssp, #-32]!
0xffff9140bed0   720  stp d28, d29, [jssp, #16]
0xffff9140bed4   724  stp d22, d23, [jssp, #-32]!
0xffff9140bed8   728  stp d24, d25, [jssp, #16]
0xffff9140bedc   732  stp d18, d19, [jssp, #-32]!
0xffff9140bee0   736  stp d20, d21, [jssp, #16]
0xffff9140bee4   740  stp d6, d7, [jssp, #-32]!
0xffff9140bee8   744  stp d16, d17, [jssp, #16]
0xffff9140beec   748  stp d2, d3, [jssp, #-32]!
0xffff9140bef0   752  stp d4, d5, [jssp, #16]
0xffff9140bef4   756  stp d0, d1, [jssp, #-16]!
0xffff9140bef8   760  mov x0, x4
0xffff9140befc   764  mov x1, x5
0xffff9140bf00   768  ldr x2, pc+1056 (addr 0x0000ffff9140c320)    ;; external reference (isolate)
0xffff9140bf04   772  ldr x16, pc+1060 (addr 0x0000ffff9140c328)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140bf08   776  and csp, jssp, #0xfffffffffffffff0
0xffff9140bf0c   780  blr x16
0xffff9140bf10   784  ldp d2, d3, [jssp, #16]
0xffff9140bf14   788  ldp d0, d1, [jssp], #32
0xffff9140bf18   792  ldp d6, d7, [jssp, #16]
0xffff9140bf1c   796  ldp d4, d5, [jssp], #32
0xffff9140bf20   800  ldp d18, d19, [jssp, #16]
0xffff9140bf24   804  ldp d16, d17, [jssp], #32
0xffff9140bf28   808  ldp d22, d23, [jssp, #16]
0xffff9140bf2c   812  ldp d20, d21, [jssp], #32
0xffff9140bf30   816  ldp d26, d27, [jssp, #16]
0xffff9140bf34   820  ldp d24, d25, [jssp], #32
0xffff9140bf38   824  ldp d28, d29, [jssp], #16
0xffff9140bf3c   828  ldp x5, x6, [jssp, #16]
0xffff9140bf40   832  ldp x3, x4, [jssp], #32
0xffff9140bf44   836  ldp x9, x10, [jssp, #16]
0xffff9140bf48   840  ldp x7, x8, [jssp], #32
0xffff9140bf4c   844  ldp x13, x14, [jssp, #16]
0xffff9140bf50   848  ldp x11, x12, [jssp], #32
0xffff9140bf54   852  ldr lr, [jssp, #16]
0xffff9140bf58   856  ldp x15, x18, [jssp], #24
0xffff9140bf5c   860  ldp x2, x0, [jssp], #16
0xffff9140bf60   864  ret
0xffff9140bf64   868  sub csp, jssp, #0x10 (16)
0xffff9140bf68   872  stp x2, x0, [jssp, #-16]!
0xffff9140bf6c   876  ldr x1, [x5]
0xffff9140bf70   880  and x16, x1, #0xfffffffffff00000
0xffff9140bf74   884  ldr x16, [x16, #8]
0xffff9140bf78   888  tst x16, #0x18
0xffff9140bf7c   892  b.eq #+0x1f8 (addr 0xffff9140c174)
0xffff9140bf80   896  and x16, x4, #0xfffffffffff00000
0xffff9140bf84   900  ldr x16, [x16, #8]
0xffff9140bf88   904  tst x16, #0x18
0xffff9140bf8c   908  b.ne #+0x1e8 (addr 0xffff9140c174)
0xffff9140bf90   912  and x1, x4, #0xfffffffffff00000
0xffff9140bf94   916  ldr x0, [x1, #104]
0xffff9140bf98   920  subs x0, x0, #0x1 (1)
0xffff9140bf9c   924  str x0, [x1, #104]
0xffff9140bfa0   928  b.mi #+0xe4 (addr 0xffff9140c084)
0xffff9140bfa4   932  ubfx x16, x4, #8, #12
0xffff9140bfa8   936  and x1, x4, #0xfffffffffff00000
0xffff9140bfac   940  add x1, x1, x16, lsl #2
0xffff9140bfb0   944  ubfx x0, x4, #3, #5
0xffff9140bfb4   948  ldr x1, [x1, #360]
0xffff9140bfb8   952  lsr x1, x1, x0
0xffff9140bfbc   956  tbz w1, #0, #+0x8 (addr 0xffff9140bfc4)
0xffff9140bfc0   960  tbnz w1, #1, #+0x3c (addr 0xffff9140bffc)
0xffff9140bfc4   964  ldp x2, x0, [jssp], #16
0xffff9140bfc8   968  ldr x16, pc+872 (addr 0x0000ffff9140c330)    ;; external reference (store_buffer_top)
0xffff9140bfcc   972  ldr x1, [x16]
0xffff9140bfd0   976  str x5, [x1], #8
0xffff9140bfd4   980  str x1, [x16]
0xffff9140bfd8   984  tst x1, #0x1ffff
0xffff9140bfdc   988  b.eq #+0x8 (addr 0xffff9140bfe4)
0xffff9140bfe0   992  ret
0xffff9140bfe4   996  sub csp, jssp, #0x8 (8)
0xffff9140bfe8  1000  str lr, [jssp, #-8]!
0xffff9140bfec  1004  ldr x17, pc+844 (addr 0x0000ffff9140c338)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140bff0  1008  blr x17
0xffff9140bff4  1012  ldr lr, [jssp], #8
0xffff9140bff8  1016  ret
0xffff9140bffc  1020  ldr x1, [x5]
0xffff9140c000  1024  and x0, x1, #0xfffffffffff00000
0xffff9140c004  1028  ldr x0, [x0, #8]
0xffff9140c008  1032  tbz w0, #6, #+0x18 (addr 0xffff9140c020)
0xffff9140c00c  1036  and x0, x4, #0xfffffffffff00000
0xffff9140c010  1040  ldr x0, [x0, #8]
0xffff9140c014  1044  movz x16, #0x58
0xffff9140c018  1048  tst x0, x16
0xffff9140c01c  1052  b.eq #+0x68 (addr 0xffff9140c084)
0xffff9140c020  1056  sub csp, jssp, #0x10 (16)
0xffff9140c024  1060  stp x4, x5, [jssp, #-16]!
0xffff9140c028  1064  ubfx x16, x1, #8, #12
0xffff9140c02c  1068  and x0, x1, #0xfffffffffff00000
0xffff9140c030  1072  add x0, x0, x16, lsl #2
0xffff9140c034  1076  ubfx x4, x1, #3, #5
0xffff9140c038  1080  ldr x5, [x0, #360]
0xffff9140c03c  1084  lsr x5, x5, x4
0xffff9140c040  1088  tbz w5, #0, #+0x40 (addr 0xffff9140c080)
0xffff9140c044  1092  ldp x4, x5, [jssp], #16
0xffff9140c048  1096  ldp x2, x0, [jssp], #16
0xffff9140c04c  1100  ldr x16, pc+756 (addr 0x0000ffff9140c340)    ;; external reference (store_buffer_top)
0xffff9140c050  1104  ldr x1, [x16]
0xffff9140c054  1108  str x5, [x1], #8
0xffff9140c058  1112  str x1, [x16]
0xffff9140c05c  1116  tst x1, #0x1ffff
0xffff9140c060  1120  b.eq #+0x8 (addr 0xffff9140c068)
0xffff9140c064  1124  ret
0xffff9140c068  1128  sub csp, jssp, #0x8 (8)
0xffff9140c06c  1132  str lr, [jssp, #-8]!
0xffff9140c070  1136  ldr x17, pc+728 (addr 0x0000ffff9140c348)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140c074  1140  blr x17
0xffff9140c078  1144  ldr lr, [jssp], #8
0xffff9140c07c  1148  ret
0xffff9140c080  1152  ldp x4, x5, [jssp], #16
0xffff9140c084  1156  sub csp, jssp, #0x78 (120)
0xffff9140c088  1160  stp x14, x15, [jssp, #-32]!
0xffff9140c08c  1164  stp x18, lr, [jssp, #16]
0xffff9140c090  1168  stp x10, x11, [jssp, #-32]!
0xffff9140c094  1172  stp x12, x13, [jssp, #16]
0xffff9140c098  1176  stp x6, x7, [jssp, #-32]!
0xffff9140c09c  1180  stp x8, x9, [jssp, #16]
0xffff9140c0a0  1184  stp x3, x4, [jssp, #-24]!
0xffff9140c0a4  1188  str x5, [jssp, #16]
0xffff9140c0a8  1192  sub csp, jssp, #0xb0 (176)
0xffff9140c0ac  1196  stp d26, d27, [jssp, #-32]!
0xffff9140c0b0  1200  stp d28, d29, [jssp, #16]
0xffff9140c0b4  1204  stp d22, d23, [jssp, #-32]!
0xffff9140c0b8  1208  stp d24, d25, [jssp, #16]
0xffff9140c0bc  1212  stp d18, d19, [jssp, #-32]!
0xffff9140c0c0  1216  stp d20, d21, [jssp, #16]
0xffff9140c0c4  1220  stp d6, d7, [jssp, #-32]!
0xffff9140c0c8  1224  stp d16, d17, [jssp, #16]
0xffff9140c0cc  1228  stp d2, d3, [jssp, #-32]!
0xffff9140c0d0  1232  stp d4, d5, [jssp, #16]
0xffff9140c0d4  1236  stp d0, d1, [jssp, #-16]!
0xffff9140c0d8  1240  mov x0, x4
0xffff9140c0dc  1244  mov x1, x5
0xffff9140c0e0  1248  ldr x2, pc+624 (addr 0x0000ffff9140c350)    ;; external reference (isolate)
0xffff9140c0e4  1252  ldr x16, pc+628 (addr 0x0000ffff9140c358)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140c0e8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff9140c0ec  1260  blr x16
0xffff9140c0f0  1264  ldp d2, d3, [jssp, #16]
0xffff9140c0f4  1268  ldp d0, d1, [jssp], #32
0xffff9140c0f8  1272  ldp d6, d7, [jssp, #16]
0xffff9140c0fc  1276  ldp d4, d5, [jssp], #32
0xffff9140c100  1280  ldp d18, d19, [jssp, #16]
0xffff9140c104  1284  ldp d16, d17, [jssp], #32
0xffff9140c108  1288  ldp d22, d23, [jssp, #16]
0xffff9140c10c  1292  ldp d20, d21, [jssp], #32
0xffff9140c110  1296  ldp d26, d27, [jssp, #16]
0xffff9140c114  1300  ldp d24, d25, [jssp], #32
0xffff9140c118  1304  ldp d28, d29, [jssp], #16
0xffff9140c11c  1308  ldp x5, x6, [jssp, #16]
0xffff9140c120  1312  ldp x3, x4, [jssp], #32
0xffff9140c124  1316  ldp x9, x10, [jssp, #16]
0xffff9140c128  1320  ldp x7, x8, [jssp], #32
0xffff9140c12c  1324  ldp x13, x14, [jssp, #16]
0xffff9140c130  1328  ldp x11, x12, [jssp], #32
0xffff9140c134  1332  ldr lr, [jssp, #16]
0xffff9140c138  1336  ldp x15, x18, [jssp], #24
0xffff9140c13c  1340  ldp x2, x0, [jssp], #16
0xffff9140c140  1344  ldr x16, pc+544 (addr 0x0000ffff9140c360)    ;; external reference (store_buffer_top)
0xffff9140c144  1348  ldr x1, [x16]
0xffff9140c148  1352  str x5, [x1], #8
0xffff9140c14c  1356  str x1, [x16]
0xffff9140c150  1360  tst x1, #0x1ffff
0xffff9140c154  1364  b.eq #+0x8 (addr 0xffff9140c15c)
0xffff9140c158  1368  ret
0xffff9140c15c  1372  sub csp, jssp, #0x8 (8)
0xffff9140c160  1376  str lr, [jssp, #-8]!
0xffff9140c164  1380  ldr x17, pc+516 (addr 0x0000ffff9140c368)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140c168  1384  blr x17
0xffff9140c16c  1388  ldr lr, [jssp], #8
0xffff9140c170  1392  ret
0xffff9140c174  1396  and x1, x4, #0xfffffffffff00000
0xffff9140c178  1400  ldr x0, [x1, #104]
0xffff9140c17c  1404  subs x0, x0, #0x1 (1)
0xffff9140c180  1408  str x0, [x1, #104]
0xffff9140c184  1412  b.mi #+0x84 (addr 0xffff9140c208)
0xffff9140c188  1416  ubfx x16, x4, #8, #12
0xffff9140c18c  1420  and x1, x4, #0xfffffffffff00000
0xffff9140c190  1424  add x1, x1, x16, lsl #2
0xffff9140c194  1428  ubfx x0, x4, #3, #5
0xffff9140c198  1432  ldr x1, [x1, #360]
0xffff9140c19c  1436  lsr x1, x1, x0
0xffff9140c1a0  1440  tbz w1, #0, #+0x8 (addr 0xffff9140c1a8)
0xffff9140c1a4  1444  tbnz w1, #1, #+0xc (addr 0xffff9140c1b0)
0xffff9140c1a8  1448  ldp x2, x0, [jssp], #16
0xffff9140c1ac  1452  ret
0xffff9140c1b0  1456  ldr x1, [x5]
0xffff9140c1b4  1460  and x0, x1, #0xfffffffffff00000
0xffff9140c1b8  1464  ldr x0, [x0, #8]
0xffff9140c1bc  1468  tbz w0, #6, #+0x18 (addr 0xffff9140c1d4)
0xffff9140c1c0  1472  and x0, x4, #0xfffffffffff00000
0xffff9140c1c4  1476  ldr x0, [x0, #8]
0xffff9140c1c8  1480  movz x16, #0x58
0xffff9140c1cc  1484  tst x0, x16
0xffff9140c1d0  1488  b.eq #+0x38 (addr 0xffff9140c208)
0xffff9140c1d4  1492  sub csp, jssp, #0x10 (16)
0xffff9140c1d8  1496  stp x4, x5, [jssp, #-16]!
0xffff9140c1dc  1500  ubfx x16, x1, #8, #12
0xffff9140c1e0  1504  and x0, x1, #0xfffffffffff00000
0xffff9140c1e4  1508  add x0, x0, x16, lsl #2
0xffff9140c1e8  1512  ubfx x4, x1, #3, #5
0xffff9140c1ec  1516  ldr x5, [x0, #360]
0xffff9140c1f0  1520  lsr x5, x5, x4
0xffff9140c1f4  1524  tbz w5, #0, #+0x10 (addr 0xffff9140c204)
0xffff9140c1f8  1528  ldp x4, x5, [jssp], #16
0xffff9140c1fc  1532  ldp x2, x0, [jssp], #16
0xffff9140c200  1536  ret
0xffff9140c204  1540  ldp x4, x5, [jssp], #16
0xffff9140c208  1544  sub csp, jssp, #0x78 (120)
0xffff9140c20c  1548  stp x14, x15, [jssp, #-32]!
0xffff9140c210  1552  stp x18, lr, [jssp, #16]
0xffff9140c214  1556  stp x10, x11, [jssp, #-32]!
0xffff9140c218  1560  stp x12, x13, [jssp, #16]
0xffff9140c21c  1564  stp x6, x7, [jssp, #-32]!
0xffff9140c220  1568  stp x8, x9, [jssp, #16]
0xffff9140c224  1572  stp x3, x4, [jssp, #-24]!
0xffff9140c228  1576  str x5, [jssp, #16]
0xffff9140c22c  1580  sub csp, jssp, #0xb0 (176)
0xffff9140c230  1584  stp d26, d27, [jssp, #-32]!
0xffff9140c234  1588  stp d28, d29, [jssp, #16]
0xffff9140c238  1592  stp d22, d23, [jssp, #-32]!
0xffff9140c23c  1596  stp d24, d25, [jssp, #16]
0xffff9140c240  1600  stp d18, d19, [jssp, #-32]!
0xffff9140c244  1604  stp d20, d21, [jssp, #16]
0xffff9140c248  1608  stp d6, d7, [jssp, #-32]!
0xffff9140c24c  1612  stp d16, d17, [jssp, #16]
0xffff9140c250  1616  stp d2, d3, [jssp, #-32]!
0xffff9140c254  1620  stp d4, d5, [jssp, #16]
0xffff9140c258  1624  stp d0, d1, [jssp, #-16]!
0xffff9140c25c  1628  mov x0, x4
0xffff9140c260  1632  mov x1, x5
0xffff9140c264  1636  ldr x2, pc+268 (addr 0x0000ffff9140c370)    ;; external reference (isolate)
0xffff9140c268  1640  ldr x16, pc+272 (addr 0x0000ffff9140c378)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140c26c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff9140c270  1648  blr x16
0xffff9140c274  1652  ldp d2, d3, [jssp, #16]
0xffff9140c278  1656  ldp d0, d1, [jssp], #32
0xffff9140c27c  1660  ldp d6, d7, [jssp, #16]
0xffff9140c280  1664  ldp d4, d5, [jssp], #32
0xffff9140c284  1668  ldp d18, d19, [jssp, #16]
0xffff9140c288  1672  ldp d16, d17, [jssp], #32
0xffff9140c28c  1676  ldp d22, d23, [jssp, #16]
0xffff9140c290  1680  ldp d20, d21, [jssp], #32
0xffff9140c294  1684  ldp d26, d27, [jssp, #16]
0xffff9140c298  1688  ldp d24, d25, [jssp], #32
0xffff9140c29c  1692  ldp d28, d29, [jssp], #16
0xffff9140c2a0  1696  ldp x5, x6, [jssp, #16]
0xffff9140c2a4  1700  ldp x3, x4, [jssp], #32
0xffff9140c2a8  1704  ldp x9, x10, [jssp, #16]
0xffff9140c2ac  1708  ldp x7, x8, [jssp], #32
0xffff9140c2b0  1712  ldp x13, x14, [jssp, #16]
0xffff9140c2b4  1716  ldp x11, x12, [jssp], #32
0xffff9140c2b8  1720  ldr lr, [jssp, #16]
0xffff9140c2bc  1724  ldp x15, x18, [jssp], #24
0xffff9140c2c0  1728  ldp x2, x0, [jssp], #16
0xffff9140c2c4  1732  ret
0xffff9140c2c8  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9140c2cc  1740  d63f03e0       constant
0xffff9140c2d0  1744  4117f8c0       constant
0xffff9140c2d4  1748  00000000       constant
0xffff9140c2d8  1752  914065a0       constant
0xffff9140c2dc  1756  0000ffff       constant
0xffff9140c2e0  1760  4117f8c0       constant
0xffff9140c2e4  1764  00000000       constant
0xffff9140c2e8  1768  914065a0       constant
0xffff9140c2ec  1772  0000ffff       constant
0xffff9140c2f0  1776  4117f8c0       constant
0xffff9140c2f4  1780  00000000       constant
0xffff9140c2f8  1784  914065a0       constant
0xffff9140c2fc  1788  0000ffff       constant
0xffff9140c300  1792  4117e2d0       constant
0xffff9140c304  1796  00000000       constant
0xffff9140c308  1800  00c2d958       constant
0xffff9140c30c  1804  00000000       constant
0xffff9140c310  1808  4117f8c0       constant
0xffff9140c314  1812  00000000       constant
0xffff9140c318  1816  914065a0       constant
0xffff9140c31c  1820  0000ffff       constant
0xffff9140c320  1824  4117e2d0       constant
0xffff9140c324  1828  00000000       constant
0xffff9140c328  1832  00c2d958       constant
0xffff9140c32c  1836  00000000       constant
0xffff9140c330  1840  4117f8c0       constant
0xffff9140c334  1844  00000000       constant
0xffff9140c338  1848  914065a0       constant
0xffff9140c33c  1852  0000ffff       constant
0xffff9140c340  1856  4117f8c0       constant
0xffff9140c344  1860  00000000       constant
0xffff9140c348  1864  914065a0       constant
0xffff9140c34c  1868  0000ffff       constant
0xffff9140c350  1872  4117e2d0       constant
0xffff9140c354  1876  00000000       constant
0xffff9140c358  1880  00c2d958       constant
0xffff9140c35c  1884  00000000       constant
0xffff9140c360  1888  4117f8c0       constant
0xffff9140c364  1892  00000000       constant
0xffff9140c368  1896  914065a0       constant
0xffff9140c36c  1900  0000ffff       constant
0xffff9140c370  1904  4117e2d0       constant
0xffff9140c374  1908  00000000       constant
0xffff9140c378  1912  00c2d958       constant
0xffff9140c37c  1916  00000000       constant


RelocInfo (size = 65)
0xffff9140bc08  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140bc2c  code target (STUB)  (0xffff914065a0)
0xffff9140bca4  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140bcc8  code target (STUB)  (0xffff914065a0)
0xffff9140bd08  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140bd2c  code target (STUB)  (0xffff914065a0)
0xffff9140bd9c  external reference (isolate)  (0x4117e2d0)
0xffff9140bda0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140bdfc  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140be20  code target (STUB)  (0xffff914065a0)
0xffff9140bf00  external reference (isolate)  (0x4117e2d0)
0xffff9140bf04  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140bfc8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140bfec  code target (STUB)  (0xffff914065a0)
0xffff9140c04c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140c070  code target (STUB)  (0xffff914065a0)
0xffff9140c0e0  external reference (isolate)  (0x4117e2d0)
0xffff9140c0e4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140c140  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140c164  code target (STUB)  (0xffff914065a0)
0xffff9140c264  external reference (isolate)  (0x4117e2d0)
0xffff9140c268  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140c2c8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff9140c3e0     0  adr xzr, #+0x40 (addr 0xffff9140c420)
0xffff9140c3e4     4  adr xzr, #+0x360 (addr 0xffff9140c744)
0xffff9140c3e8     8  ldr x16, pc+1736 (addr 0x0000ffff9140cab0)    ;; external reference (store_buffer_top)
0xffff9140c3ec    12  ldr x4, [x16]
0xffff9140c3f0    16  str x3, [x4], #8
0xffff9140c3f4    20  str x4, [x16]
0xffff9140c3f8    24  tst x4, #0x1ffff
0xffff9140c3fc    28  b.eq #+0x8 (addr 0xffff9140c404)
0xffff9140c400    32  ret
0xffff9140c404    36  sub csp, jssp, #0x8 (8)
0xffff9140c408    40  str lr, [jssp, #-8]!
0xffff9140c40c    44  ldr x17, pc+1708 (addr 0x0000ffff9140cab8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140c410    48  blr x17
0xffff9140c414    52  ldr lr, [jssp], #8
0xffff9140c418    56  ret
0xffff9140c41c    60  ret
0xffff9140c420    64  sub csp, jssp, #0x10 (16)
0xffff9140c424    68  stp x2, x0, [jssp, #-16]!
0xffff9140c428    72  ldr x4, [x3]
0xffff9140c42c    76  and x16, x4, #0xfffffffffff00000
0xffff9140c430    80  ldr x16, [x16, #8]
0xffff9140c434    84  tst x16, #0x18
0xffff9140c438    88  b.eq #+0x1d8 (addr 0xffff9140c610)
0xffff9140c43c    92  and x16, x1, #0xfffffffffff00000
0xffff9140c440    96  ldr x16, [x16, #8]
0xffff9140c444   100  tst x16, #0x18
0xffff9140c448   104  b.ne #+0x1c8 (addr 0xffff9140c610)
0xffff9140c44c   108  and x4, x1, #0xfffffffffff00000
0xffff9140c450   112  ldr x0, [x4, #104]
0xffff9140c454   116  subs x0, x0, #0x1 (1)
0xffff9140c458   120  str x0, [x4, #104]
0xffff9140c45c   124  b.mi #+0xc4 (addr 0xffff9140c520)
0xffff9140c460   128  ubfx x16, x1, #8, #12
0xffff9140c464   132  and x4, x1, #0xfffffffffff00000
0xffff9140c468   136  add x4, x4, x16, lsl #2
0xffff9140c46c   140  ubfx x0, x1, #3, #5
0xffff9140c470   144  ldr x4, [x4, #360]
0xffff9140c474   148  lsr x4, x4, x0
0xffff9140c478   152  tbz w4, #0, #+0x8 (addr 0xffff9140c480)
0xffff9140c47c   156  tbnz w4, #1, #+0x3c (addr 0xffff9140c4b8)
0xffff9140c480   160  ldp x2, x0, [jssp], #16
0xffff9140c484   164  ldr x16, pc+1596 (addr 0x0000ffff9140cac0)    ;; external reference (store_buffer_top)
0xffff9140c488   168  ldr x4, [x16]
0xffff9140c48c   172  str x3, [x4], #8
0xffff9140c490   176  str x4, [x16]
0xffff9140c494   180  tst x4, #0x1ffff
0xffff9140c498   184  b.eq #+0x8 (addr 0xffff9140c4a0)
0xffff9140c49c   188  ret
0xffff9140c4a0   192  sub csp, jssp, #0x8 (8)
0xffff9140c4a4   196  str lr, [jssp, #-8]!
0xffff9140c4a8   200  ldr x17, pc+1568 (addr 0x0000ffff9140cac8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140c4ac   204  blr x17
0xffff9140c4b0   208  ldr lr, [jssp], #8
0xffff9140c4b4   212  ret
0xffff9140c4b8   216  ldr x4, [x3]
0xffff9140c4bc   220  sub csp, jssp, #0x10 (16)
0xffff9140c4c0   224  stp x1, x3, [jssp, #-16]!
0xffff9140c4c4   228  ubfx x16, x4, #8, #12
0xffff9140c4c8   232  and x0, x4, #0xfffffffffff00000
0xffff9140c4cc   236  add x0, x0, x16, lsl #2
0xffff9140c4d0   240  ubfx x1, x4, #3, #5
0xffff9140c4d4   244  ldr x3, [x0, #360]
0xffff9140c4d8   248  lsr x3, x3, x1
0xffff9140c4dc   252  tbz w3, #0, #+0x40 (addr 0xffff9140c51c)
0xffff9140c4e0   256  ldp x1, x3, [jssp], #16
0xffff9140c4e4   260  ldp x2, x0, [jssp], #16
0xffff9140c4e8   264  ldr x16, pc+1512 (addr 0x0000ffff9140cad0)    ;; external reference (store_buffer_top)
0xffff9140c4ec   268  ldr x4, [x16]
0xffff9140c4f0   272  str x3, [x4], #8
0xffff9140c4f4   276  str x4, [x16]
0xffff9140c4f8   280  tst x4, #0x1ffff
0xffff9140c4fc   284  b.eq #+0x8 (addr 0xffff9140c504)
0xffff9140c500   288  ret
0xffff9140c504   292  sub csp, jssp, #0x8 (8)
0xffff9140c508   296  str lr, [jssp, #-8]!
0xffff9140c50c   300  ldr x17, pc+1484 (addr 0x0000ffff9140cad8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140c510   304  blr x17
0xffff9140c514   308  ldr lr, [jssp], #8
0xffff9140c518   312  ret
0xffff9140c51c   316  ldp x1, x3, [jssp], #16
0xffff9140c520   320  sub csp, jssp, #0x78 (120)
0xffff9140c524   324  stp x14, x15, [jssp, #-32]!
0xffff9140c528   328  stp x18, lr, [jssp, #16]
0xffff9140c52c   332  stp x10, x11, [jssp, #-32]!
0xffff9140c530   336  stp x12, x13, [jssp, #16]
0xffff9140c534   340  stp x6, x7, [jssp, #-32]!
0xffff9140c538   344  stp x8, x9, [jssp, #16]
0xffff9140c53c   348  stp x1, x3, [jssp, #-24]!
0xffff9140c540   352  str x5, [jssp, #16]
0xffff9140c544   356  sub csp, jssp, #0xb0 (176)
0xffff9140c548   360  stp d26, d27, [jssp, #-32]!
0xffff9140c54c   364  stp d28, d29, [jssp, #16]
0xffff9140c550   368  stp d22, d23, [jssp, #-32]!
0xffff9140c554   372  stp d24, d25, [jssp, #16]
0xffff9140c558   376  stp d18, d19, [jssp, #-32]!
0xffff9140c55c   380  stp d20, d21, [jssp, #16]
0xffff9140c560   384  stp d6, d7, [jssp, #-32]!
0xffff9140c564   388  stp d16, d17, [jssp, #16]
0xffff9140c568   392  stp d2, d3, [jssp, #-32]!
0xffff9140c56c   396  stp d4, d5, [jssp, #16]
0xffff9140c570   400  stp d0, d1, [jssp, #-16]!
0xffff9140c574   404  mov x0, x1
0xffff9140c578   408  mov x1, x3
0xffff9140c57c   412  ldr x2, pc+1380 (addr 0x0000ffff9140cae0)    ;; external reference (isolate)
0xffff9140c580   416  ldr x16, pc+1384 (addr 0x0000ffff9140cae8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140c584   420  and csp, jssp, #0xfffffffffffffff0
0xffff9140c588   424  blr x16
0xffff9140c58c   428  ldp d2, d3, [jssp, #16]
0xffff9140c590   432  ldp d0, d1, [jssp], #32
0xffff9140c594   436  ldp d6, d7, [jssp, #16]
0xffff9140c598   440  ldp d4, d5, [jssp], #32
0xffff9140c59c   444  ldp d18, d19, [jssp, #16]
0xffff9140c5a0   448  ldp d16, d17, [jssp], #32
0xffff9140c5a4   452  ldp d22, d23, [jssp, #16]
0xffff9140c5a8   456  ldp d20, d21, [jssp], #32
0xffff9140c5ac   460  ldp d26, d27, [jssp, #16]
0xffff9140c5b0   464  ldp d24, d25, [jssp], #32
0xffff9140c5b4   468  ldp d28, d29, [jssp], #16
0xffff9140c5b8   472  ldp x5, x6, [jssp, #16]
0xffff9140c5bc   476  ldp x1, x3, [jssp], #32
0xffff9140c5c0   480  ldp x9, x10, [jssp, #16]
0xffff9140c5c4   484  ldp x7, x8, [jssp], #32
0xffff9140c5c8   488  ldp x13, x14, [jssp, #16]
0xffff9140c5cc   492  ldp x11, x12, [jssp], #32
0xffff9140c5d0   496  ldr lr, [jssp, #16]
0xffff9140c5d4   500  ldp x15, x18, [jssp], #24
0xffff9140c5d8   504  ldp x2, x0, [jssp], #16
0xffff9140c5dc   508  ldr x16, pc+1300 (addr 0x0000ffff9140caf0)    ;; external reference (store_buffer_top)
0xffff9140c5e0   512  ldr x4, [x16]
0xffff9140c5e4   516  str x3, [x4], #8
0xffff9140c5e8   520  str x4, [x16]
0xffff9140c5ec   524  tst x4, #0x1ffff
0xffff9140c5f0   528  b.eq #+0x8 (addr 0xffff9140c5f8)
0xffff9140c5f4   532  ret
0xffff9140c5f8   536  sub csp, jssp, #0x8 (8)
0xffff9140c5fc   540  str lr, [jssp, #-8]!
0xffff9140c600   544  ldr x17, pc+1272 (addr 0x0000ffff9140caf8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140c604   548  blr x17
0xffff9140c608   552  ldr lr, [jssp], #8
0xffff9140c60c   556  ret
0xffff9140c610   560  and x4, x1, #0xfffffffffff00000
0xffff9140c614   564  ldr x0, [x4, #104]
0xffff9140c618   568  subs x0, x0, #0x1 (1)
0xffff9140c61c   572  str x0, [x4, #104]
0xffff9140c620   576  b.mi #+0x64 (addr 0xffff9140c684)
0xffff9140c624   580  ubfx x16, x1, #8, #12
0xffff9140c628   584  and x4, x1, #0xfffffffffff00000
0xffff9140c62c   588  add x4, x4, x16, lsl #2
0xffff9140c630   592  ubfx x0, x1, #3, #5
0xffff9140c634   596  ldr x4, [x4, #360]
0xffff9140c638   600  lsr x4, x4, x0
0xffff9140c63c   604  tbz w4, #0, #+0x8 (addr 0xffff9140c644)
0xffff9140c640   608  tbnz w4, #1, #+0xc (addr 0xffff9140c64c)
0xffff9140c644   612  ldp x2, x0, [jssp], #16
0xffff9140c648   616  ret
0xffff9140c64c   620  ldr x4, [x3]
0xffff9140c650   624  sub csp, jssp, #0x10 (16)
0xffff9140c654   628  stp x1, x3, [jssp, #-16]!
0xffff9140c658   632  ubfx x16, x4, #8, #12
0xffff9140c65c   636  and x0, x4, #0xfffffffffff00000
0xffff9140c660   640  add x0, x0, x16, lsl #2
0xffff9140c664   644  ubfx x1, x4, #3, #5
0xffff9140c668   648  ldr x3, [x0, #360]
0xffff9140c66c   652  lsr x3, x3, x1
0xffff9140c670   656  tbz w3, #0, #+0x10 (addr 0xffff9140c680)
0xffff9140c674   660  ldp x1, x3, [jssp], #16
0xffff9140c678   664  ldp x2, x0, [jssp], #16
0xffff9140c67c   668  ret
0xffff9140c680   672  ldp x1, x3, [jssp], #16
0xffff9140c684   676  sub csp, jssp, #0x78 (120)
0xffff9140c688   680  stp x14, x15, [jssp, #-32]!
0xffff9140c68c   684  stp x18, lr, [jssp, #16]
0xffff9140c690   688  stp x10, x11, [jssp, #-32]!
0xffff9140c694   692  stp x12, x13, [jssp, #16]
0xffff9140c698   696  stp x6, x7, [jssp, #-32]!
0xffff9140c69c   700  stp x8, x9, [jssp, #16]
0xffff9140c6a0   704  stp x1, x3, [jssp, #-24]!
0xffff9140c6a4   708  str x5, [jssp, #16]
0xffff9140c6a8   712  sub csp, jssp, #0xb0 (176)
0xffff9140c6ac   716  stp d26, d27, [jssp, #-32]!
0xffff9140c6b0   720  stp d28, d29, [jssp, #16]
0xffff9140c6b4   724  stp d22, d23, [jssp, #-32]!
0xffff9140c6b8   728  stp d24, d25, [jssp, #16]
0xffff9140c6bc   732  stp d18, d19, [jssp, #-32]!
0xffff9140c6c0   736  stp d20, d21, [jssp, #16]
0xffff9140c6c4   740  stp d6, d7, [jssp, #-32]!
0xffff9140c6c8   744  stp d16, d17, [jssp, #16]
0xffff9140c6cc   748  stp d2, d3, [jssp, #-32]!
0xffff9140c6d0   752  stp d4, d5, [jssp, #16]
0xffff9140c6d4   756  stp d0, d1, [jssp, #-16]!
0xffff9140c6d8   760  mov x0, x1
0xffff9140c6dc   764  mov x1, x3
0xffff9140c6e0   768  ldr x2, pc+1056 (addr 0x0000ffff9140cb00)    ;; external reference (isolate)
0xffff9140c6e4   772  ldr x16, pc+1060 (addr 0x0000ffff9140cb08)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140c6e8   776  and csp, jssp, #0xfffffffffffffff0
0xffff9140c6ec   780  blr x16
0xffff9140c6f0   784  ldp d2, d3, [jssp, #16]
0xffff9140c6f4   788  ldp d0, d1, [jssp], #32
0xffff9140c6f8   792  ldp d6, d7, [jssp, #16]
0xffff9140c6fc   796  ldp d4, d5, [jssp], #32
0xffff9140c700   800  ldp d18, d19, [jssp, #16]
0xffff9140c704   804  ldp d16, d17, [jssp], #32
0xffff9140c708   808  ldp d22, d23, [jssp, #16]
0xffff9140c70c   812  ldp d20, d21, [jssp], #32
0xffff9140c710   816  ldp d26, d27, [jssp, #16]
0xffff9140c714   820  ldp d24, d25, [jssp], #32
0xffff9140c718   824  ldp d28, d29, [jssp], #16
0xffff9140c71c   828  ldp x5, x6, [jssp, #16]
0xffff9140c720   832  ldp x1, x3, [jssp], #32
0xffff9140c724   836  ldp x9, x10, [jssp, #16]
0xffff9140c728   840  ldp x7, x8, [jssp], #32
0xffff9140c72c   844  ldp x13, x14, [jssp, #16]
0xffff9140c730   848  ldp x11, x12, [jssp], #32
0xffff9140c734   852  ldr lr, [jssp, #16]
0xffff9140c738   856  ldp x15, x18, [jssp], #24
0xffff9140c73c   860  ldp x2, x0, [jssp], #16
0xffff9140c740   864  ret
0xffff9140c744   868  sub csp, jssp, #0x10 (16)
0xffff9140c748   872  stp x2, x0, [jssp, #-16]!
0xffff9140c74c   876  ldr x4, [x3]
0xffff9140c750   880  and x16, x4, #0xfffffffffff00000
0xffff9140c754   884  ldr x16, [x16, #8]
0xffff9140c758   888  tst x16, #0x18
0xffff9140c75c   892  b.eq #+0x1f8 (addr 0xffff9140c954)
0xffff9140c760   896  and x16, x1, #0xfffffffffff00000
0xffff9140c764   900  ldr x16, [x16, #8]
0xffff9140c768   904  tst x16, #0x18
0xffff9140c76c   908  b.ne #+0x1e8 (addr 0xffff9140c954)
0xffff9140c770   912  and x4, x1, #0xfffffffffff00000
0xffff9140c774   916  ldr x0, [x4, #104]
0xffff9140c778   920  subs x0, x0, #0x1 (1)
0xffff9140c77c   924  str x0, [x4, #104]
0xffff9140c780   928  b.mi #+0xe4 (addr 0xffff9140c864)
0xffff9140c784   932  ubfx x16, x1, #8, #12
0xffff9140c788   936  and x4, x1, #0xfffffffffff00000
0xffff9140c78c   940  add x4, x4, x16, lsl #2
0xffff9140c790   944  ubfx x0, x1, #3, #5
0xffff9140c794   948  ldr x4, [x4, #360]
0xffff9140c798   952  lsr x4, x4, x0
0xffff9140c79c   956  tbz w4, #0, #+0x8 (addr 0xffff9140c7a4)
0xffff9140c7a0   960  tbnz w4, #1, #+0x3c (addr 0xffff9140c7dc)
0xffff9140c7a4   964  ldp x2, x0, [jssp], #16
0xffff9140c7a8   968  ldr x16, pc+872 (addr 0x0000ffff9140cb10)    ;; external reference (store_buffer_top)
0xffff9140c7ac   972  ldr x4, [x16]
0xffff9140c7b0   976  str x3, [x4], #8
0xffff9140c7b4   980  str x4, [x16]
0xffff9140c7b8   984  tst x4, #0x1ffff
0xffff9140c7bc   988  b.eq #+0x8 (addr 0xffff9140c7c4)
0xffff9140c7c0   992  ret
0xffff9140c7c4   996  sub csp, jssp, #0x8 (8)
0xffff9140c7c8  1000  str lr, [jssp, #-8]!
0xffff9140c7cc  1004  ldr x17, pc+844 (addr 0x0000ffff9140cb18)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140c7d0  1008  blr x17
0xffff9140c7d4  1012  ldr lr, [jssp], #8
0xffff9140c7d8  1016  ret
0xffff9140c7dc  1020  ldr x4, [x3]
0xffff9140c7e0  1024  and x0, x4, #0xfffffffffff00000
0xffff9140c7e4  1028  ldr x0, [x0, #8]
0xffff9140c7e8  1032  tbz w0, #6, #+0x18 (addr 0xffff9140c800)
0xffff9140c7ec  1036  and x0, x1, #0xfffffffffff00000
0xffff9140c7f0  1040  ldr x0, [x0, #8]
0xffff9140c7f4  1044  movz x16, #0x58
0xffff9140c7f8  1048  tst x0, x16
0xffff9140c7fc  1052  b.eq #+0x68 (addr 0xffff9140c864)
0xffff9140c800  1056  sub csp, jssp, #0x10 (16)
0xffff9140c804  1060  stp x1, x3, [jssp, #-16]!
0xffff9140c808  1064  ubfx x16, x4, #8, #12
0xffff9140c80c  1068  and x0, x4, #0xfffffffffff00000
0xffff9140c810  1072  add x0, x0, x16, lsl #2
0xffff9140c814  1076  ubfx x1, x4, #3, #5
0xffff9140c818  1080  ldr x3, [x0, #360]
0xffff9140c81c  1084  lsr x3, x3, x1
0xffff9140c820  1088  tbz w3, #0, #+0x40 (addr 0xffff9140c860)
0xffff9140c824  1092  ldp x1, x3, [jssp], #16
0xffff9140c828  1096  ldp x2, x0, [jssp], #16
0xffff9140c82c  1100  ldr x16, pc+756 (addr 0x0000ffff9140cb20)    ;; external reference (store_buffer_top)
0xffff9140c830  1104  ldr x4, [x16]
0xffff9140c834  1108  str x3, [x4], #8
0xffff9140c838  1112  str x4, [x16]
0xffff9140c83c  1116  tst x4, #0x1ffff
0xffff9140c840  1120  b.eq #+0x8 (addr 0xffff9140c848)
0xffff9140c844  1124  ret
0xffff9140c848  1128  sub csp, jssp, #0x8 (8)
0xffff9140c84c  1132  str lr, [jssp, #-8]!
0xffff9140c850  1136  ldr x17, pc+728 (addr 0x0000ffff9140cb28)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140c854  1140  blr x17
0xffff9140c858  1144  ldr lr, [jssp], #8
0xffff9140c85c  1148  ret
0xffff9140c860  1152  ldp x1, x3, [jssp], #16
0xffff9140c864  1156  sub csp, jssp, #0x78 (120)
0xffff9140c868  1160  stp x14, x15, [jssp, #-32]!
0xffff9140c86c  1164  stp x18, lr, [jssp, #16]
0xffff9140c870  1168  stp x10, x11, [jssp, #-32]!
0xffff9140c874  1172  stp x12, x13, [jssp, #16]
0xffff9140c878  1176  stp x6, x7, [jssp, #-32]!
0xffff9140c87c  1180  stp x8, x9, [jssp, #16]
0xffff9140c880  1184  stp x1, x3, [jssp, #-24]!
0xffff9140c884  1188  str x5, [jssp, #16]
0xffff9140c888  1192  sub csp, jssp, #0xb0 (176)
0xffff9140c88c  1196  stp d26, d27, [jssp, #-32]!
0xffff9140c890  1200  stp d28, d29, [jssp, #16]
0xffff9140c894  1204  stp d22, d23, [jssp, #-32]!
0xffff9140c898  1208  stp d24, d25, [jssp, #16]
0xffff9140c89c  1212  stp d18, d19, [jssp, #-32]!
0xffff9140c8a0  1216  stp d20, d21, [jssp, #16]
0xffff9140c8a4  1220  stp d6, d7, [jssp, #-32]!
0xffff9140c8a8  1224  stp d16, d17, [jssp, #16]
0xffff9140c8ac  1228  stp d2, d3, [jssp, #-32]!
0xffff9140c8b0  1232  stp d4, d5, [jssp, #16]
0xffff9140c8b4  1236  stp d0, d1, [jssp, #-16]!
0xffff9140c8b8  1240  mov x0, x1
0xffff9140c8bc  1244  mov x1, x3
0xffff9140c8c0  1248  ldr x2, pc+624 (addr 0x0000ffff9140cb30)    ;; external reference (isolate)
0xffff9140c8c4  1252  ldr x16, pc+628 (addr 0x0000ffff9140cb38)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140c8c8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff9140c8cc  1260  blr x16
0xffff9140c8d0  1264  ldp d2, d3, [jssp, #16]
0xffff9140c8d4  1268  ldp d0, d1, [jssp], #32
0xffff9140c8d8  1272  ldp d6, d7, [jssp, #16]
0xffff9140c8dc  1276  ldp d4, d5, [jssp], #32
0xffff9140c8e0  1280  ldp d18, d19, [jssp, #16]
0xffff9140c8e4  1284  ldp d16, d17, [jssp], #32
0xffff9140c8e8  1288  ldp d22, d23, [jssp, #16]
0xffff9140c8ec  1292  ldp d20, d21, [jssp], #32
0xffff9140c8f0  1296  ldp d26, d27, [jssp, #16]
0xffff9140c8f4  1300  ldp d24, d25, [jssp], #32
0xffff9140c8f8  1304  ldp d28, d29, [jssp], #16
0xffff9140c8fc  1308  ldp x5, x6, [jssp, #16]
0xffff9140c900  1312  ldp x1, x3, [jssp], #32
0xffff9140c904  1316  ldp x9, x10, [jssp, #16]
0xffff9140c908  1320  ldp x7, x8, [jssp], #32
0xffff9140c90c  1324  ldp x13, x14, [jssp, #16]
0xffff9140c910  1328  ldp x11, x12, [jssp], #32
0xffff9140c914  1332  ldr lr, [jssp, #16]
0xffff9140c918  1336  ldp x15, x18, [jssp], #24
0xffff9140c91c  1340  ldp x2, x0, [jssp], #16
0xffff9140c920  1344  ldr x16, pc+544 (addr 0x0000ffff9140cb40)    ;; external reference (store_buffer_top)
0xffff9140c924  1348  ldr x4, [x16]
0xffff9140c928  1352  str x3, [x4], #8
0xffff9140c92c  1356  str x4, [x16]
0xffff9140c930  1360  tst x4, #0x1ffff
0xffff9140c934  1364  b.eq #+0x8 (addr 0xffff9140c93c)
0xffff9140c938  1368  ret
0xffff9140c93c  1372  sub csp, jssp, #0x8 (8)
0xffff9140c940  1376  str lr, [jssp, #-8]!
0xffff9140c944  1380  ldr x17, pc+516 (addr 0x0000ffff9140cb48)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140c948  1384  blr x17
0xffff9140c94c  1388  ldr lr, [jssp], #8
0xffff9140c950  1392  ret
0xffff9140c954  1396  and x4, x1, #0xfffffffffff00000
0xffff9140c958  1400  ldr x0, [x4, #104]
0xffff9140c95c  1404  subs x0, x0, #0x1 (1)
0xffff9140c960  1408  str x0, [x4, #104]
0xffff9140c964  1412  b.mi #+0x84 (addr 0xffff9140c9e8)
0xffff9140c968  1416  ubfx x16, x1, #8, #12
0xffff9140c96c  1420  and x4, x1, #0xfffffffffff00000
0xffff9140c970  1424  add x4, x4, x16, lsl #2
0xffff9140c974  1428  ubfx x0, x1, #3, #5
0xffff9140c978  1432  ldr x4, [x4, #360]
0xffff9140c97c  1436  lsr x4, x4, x0
0xffff9140c980  1440  tbz w4, #0, #+0x8 (addr 0xffff9140c988)
0xffff9140c984  1444  tbnz w4, #1, #+0xc (addr 0xffff9140c990)
0xffff9140c988  1448  ldp x2, x0, [jssp], #16
0xffff9140c98c  1452  ret
0xffff9140c990  1456  ldr x4, [x3]
0xffff9140c994  1460  and x0, x4, #0xfffffffffff00000
0xffff9140c998  1464  ldr x0, [x0, #8]
0xffff9140c99c  1468  tbz w0, #6, #+0x18 (addr 0xffff9140c9b4)
0xffff9140c9a0  1472  and x0, x1, #0xfffffffffff00000
0xffff9140c9a4  1476  ldr x0, [x0, #8]
0xffff9140c9a8  1480  movz x16, #0x58
0xffff9140c9ac  1484  tst x0, x16
0xffff9140c9b0  1488  b.eq #+0x38 (addr 0xffff9140c9e8)
0xffff9140c9b4  1492  sub csp, jssp, #0x10 (16)
0xffff9140c9b8  1496  stp x1, x3, [jssp, #-16]!
0xffff9140c9bc  1500  ubfx x16, x4, #8, #12
0xffff9140c9c0  1504  and x0, x4, #0xfffffffffff00000
0xffff9140c9c4  1508  add x0, x0, x16, lsl #2
0xffff9140c9c8  1512  ubfx x1, x4, #3, #5
0xffff9140c9cc  1516  ldr x3, [x0, #360]
0xffff9140c9d0  1520  lsr x3, x3, x1
0xffff9140c9d4  1524  tbz w3, #0, #+0x10 (addr 0xffff9140c9e4)
0xffff9140c9d8  1528  ldp x1, x3, [jssp], #16
0xffff9140c9dc  1532  ldp x2, x0, [jssp], #16
0xffff9140c9e0  1536  ret
0xffff9140c9e4  1540  ldp x1, x3, [jssp], #16
0xffff9140c9e8  1544  sub csp, jssp, #0x78 (120)
0xffff9140c9ec  1548  stp x14, x15, [jssp, #-32]!
0xffff9140c9f0  1552  stp x18, lr, [jssp, #16]
0xffff9140c9f4  1556  stp x10, x11, [jssp, #-32]!
0xffff9140c9f8  1560  stp x12, x13, [jssp, #16]
0xffff9140c9fc  1564  stp x6, x7, [jssp, #-32]!
0xffff9140ca00  1568  stp x8, x9, [jssp, #16]
0xffff9140ca04  1572  stp x1, x3, [jssp, #-24]!
0xffff9140ca08  1576  str x5, [jssp, #16]
0xffff9140ca0c  1580  sub csp, jssp, #0xb0 (176)
0xffff9140ca10  1584  stp d26, d27, [jssp, #-32]!
0xffff9140ca14  1588  stp d28, d29, [jssp, #16]
0xffff9140ca18  1592  stp d22, d23, [jssp, #-32]!
0xffff9140ca1c  1596  stp d24, d25, [jssp, #16]
0xffff9140ca20  1600  stp d18, d19, [jssp, #-32]!
0xffff9140ca24  1604  stp d20, d21, [jssp, #16]
0xffff9140ca28  1608  stp d6, d7, [jssp, #-32]!
0xffff9140ca2c  1612  stp d16, d17, [jssp, #16]
0xffff9140ca30  1616  stp d2, d3, [jssp, #-32]!
0xffff9140ca34  1620  stp d4, d5, [jssp, #16]
0xffff9140ca38  1624  stp d0, d1, [jssp, #-16]!
0xffff9140ca3c  1628  mov x0, x1
0xffff9140ca40  1632  mov x1, x3
0xffff9140ca44  1636  ldr x2, pc+268 (addr 0x0000ffff9140cb50)    ;; external reference (isolate)
0xffff9140ca48  1640  ldr x16, pc+272 (addr 0x0000ffff9140cb58)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140ca4c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff9140ca50  1648  blr x16
0xffff9140ca54  1652  ldp d2, d3, [jssp, #16]
0xffff9140ca58  1656  ldp d0, d1, [jssp], #32
0xffff9140ca5c  1660  ldp d6, d7, [jssp, #16]
0xffff9140ca60  1664  ldp d4, d5, [jssp], #32
0xffff9140ca64  1668  ldp d18, d19, [jssp, #16]
0xffff9140ca68  1672  ldp d16, d17, [jssp], #32
0xffff9140ca6c  1676  ldp d22, d23, [jssp, #16]
0xffff9140ca70  1680  ldp d20, d21, [jssp], #32
0xffff9140ca74  1684  ldp d26, d27, [jssp, #16]
0xffff9140ca78  1688  ldp d24, d25, [jssp], #32
0xffff9140ca7c  1692  ldp d28, d29, [jssp], #16
0xffff9140ca80  1696  ldp x5, x6, [jssp, #16]
0xffff9140ca84  1700  ldp x1, x3, [jssp], #32
0xffff9140ca88  1704  ldp x9, x10, [jssp, #16]
0xffff9140ca8c  1708  ldp x7, x8, [jssp], #32
0xffff9140ca90  1712  ldp x13, x14, [jssp, #16]
0xffff9140ca94  1716  ldp x11, x12, [jssp], #32
0xffff9140ca98  1720  ldr lr, [jssp, #16]
0xffff9140ca9c  1724  ldp x15, x18, [jssp], #24
0xffff9140caa0  1728  ldp x2, x0, [jssp], #16
0xffff9140caa4  1732  ret
0xffff9140caa8  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9140caac  1740  d63f03e0       constant
0xffff9140cab0  1744  4117f8c0       constant
0xffff9140cab4  1748  00000000       constant
0xffff9140cab8  1752  914065a0       constant
0xffff9140cabc  1756  0000ffff       constant
0xffff9140cac0  1760  4117f8c0       constant
0xffff9140cac4  1764  00000000       constant
0xffff9140cac8  1768  914065a0       constant
0xffff9140cacc  1772  0000ffff       constant
0xffff9140cad0  1776  4117f8c0       constant
0xffff9140cad4  1780  00000000       constant
0xffff9140cad8  1784  914065a0       constant
0xffff9140cadc  1788  0000ffff       constant
0xffff9140cae0  1792  4117e2d0       constant
0xffff9140cae4  1796  00000000       constant
0xffff9140cae8  1800  00c2d958       constant
0xffff9140caec  1804  00000000       constant
0xffff9140caf0  1808  4117f8c0       constant
0xffff9140caf4  1812  00000000       constant
0xffff9140caf8  1816  914065a0       constant
0xffff9140cafc  1820  0000ffff       constant
0xffff9140cb00  1824  4117e2d0       constant
0xffff9140cb04  1828  00000000       constant
0xffff9140cb08  1832  00c2d958       constant
0xffff9140cb0c  1836  00000000       constant
0xffff9140cb10  1840  4117f8c0       constant
0xffff9140cb14  1844  00000000       constant
0xffff9140cb18  1848  914065a0       constant
0xffff9140cb1c  1852  0000ffff       constant
0xffff9140cb20  1856  4117f8c0       constant
0xffff9140cb24  1860  00000000       constant
0xffff9140cb28  1864  914065a0       constant
0xffff9140cb2c  1868  0000ffff       constant
0xffff9140cb30  1872  4117e2d0       constant
0xffff9140cb34  1876  00000000       constant
0xffff9140cb38  1880  00c2d958       constant
0xffff9140cb3c  1884  00000000       constant
0xffff9140cb40  1888  4117f8c0       constant
0xffff9140cb44  1892  00000000       constant
0xffff9140cb48  1896  914065a0       constant
0xffff9140cb4c  1900  0000ffff       constant
0xffff9140cb50  1904  4117e2d0       constant
0xffff9140cb54  1908  00000000       constant
0xffff9140cb58  1912  00c2d958       constant
0xffff9140cb5c  1916  00000000       constant


RelocInfo (size = 65)
0xffff9140c3e8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140c40c  code target (STUB)  (0xffff914065a0)
0xffff9140c484  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140c4a8  code target (STUB)  (0xffff914065a0)
0xffff9140c4e8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140c50c  code target (STUB)  (0xffff914065a0)
0xffff9140c57c  external reference (isolate)  (0x4117e2d0)
0xffff9140c580  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140c5dc  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140c600  code target (STUB)  (0xffff914065a0)
0xffff9140c6e0  external reference (isolate)  (0x4117e2d0)
0xffff9140c6e4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140c7a8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140c7cc  code target (STUB)  (0xffff914065a0)
0xffff9140c82c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140c850  code target (STUB)  (0xffff914065a0)
0xffff9140c8c0  external reference (isolate)  (0x4117e2d0)
0xffff9140c8c4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140c920  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140c944  code target (STUB)  (0xffff914065a0)
0xffff9140ca44  external reference (isolate)  (0x4117e2d0)
0xffff9140ca48  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140caa8  constant pool (size 184)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = CreateAllocationSiteStub
compiler = crankshaft
Instructions (size = 477)
0xffff9140cbc0     0  movz x1, #0xd840
0xffff9140cbc4     4  movk x1, #0x411a, lsl #16
0xffff9140cbc8     8  ldp x4, x0, [x1]
0xffff9140cbcc    12  adds x16, x4, #0x38 (56)
0xffff9140cbd0    16  ccmp x16, x0, #nzCv, lo
0xffff9140cbd4    20  b.hi #+0x104 (addr 0xffff9140ccd8)
0xffff9140cbd8    24  str x16, [x1]
0xffff9140cbdc    28  orr x4, x4, #0x1
0xffff9140cbe0    32  ldr x0, pc+360 (addr 0x0000ffff9140cd48)    ;; object: 0x36405d29 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9140cbe4    36  stur x0, [x4, #-1]
0xffff9140cbe8    40  sub x1, x4, #0x1 (1)
0xffff9140cbec    44  and x0, x0, #0xfffffffffff00000
0xffff9140cbf0    48  ldr x0, [x0, #8]
0xffff9140cbf4    52  tbz w0, #1, #+0x24 (addr 0xffff9140cc18)
0xffff9140cbf8    56  and x0, x4, #0xfffffffffff00000
0xffff9140cbfc    60  ldr x0, [x0, #8]
0xffff9140cc00    64  tbz w0, #2, #+0x18 (addr 0xffff9140cc18)
0xffff9140cc04    68  sub csp, jssp, #0x8 (8)
0xffff9140cc08    72  str lr, [jssp, #-8]!
0xffff9140cc0c    76  ldr x16, pc+324 (addr 0x0000ffff9140cd50)    ;; code: STUB, RecordWriteStub, minor: 66564
0xffff9140cc10    80  blr x16
0xffff9140cc14    84  ldr lr, [jssp], #8
0xffff9140cc18    88  movz x0, #0x0
0xffff9140cc1c    92  stur x0, [x4, #7]
0xffff9140cc20    96  movz x0, #0x0
0xffff9140cc24   100  stur x0, [x4, #15]
0xffff9140cc28   104  movz x0, #0x0
0xffff9140cc2c   108  stur x0, [x4, #23]
0xffff9140cc30   112  movz x0, #0x0
0xffff9140cc34   116  stur x0, [x4, #31]
0xffff9140cc38   120  ldr x0, pc+288 (addr 0x0000ffff9140cd58)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140cc3c   124  stur x0, [x4, #39]
0xffff9140cc40   128  movz x0, #0xf748
0xffff9140cc44   132  movk x0, #0x4117, lsl #16
0xffff9140cc48   136  ldr x1, [x0]
0xffff9140cc4c   140  stur x1, [x4, #47]
0xffff9140cc50   144  tbz w1, #0, #+0x34 (addr 0xffff9140cc84)
0xffff9140cc54   148  add x5, x4, #0x2f (47)
0xffff9140cc58   152  and x1, x1, #0xfffffffffff00000
0xffff9140cc5c   156  ldr x1, [x1, #8]
0xffff9140cc60   160  tbz w1, #1, #+0x24 (addr 0xffff9140cc84)
0xffff9140cc64   164  and x1, x4, #0xfffffffffff00000
0xffff9140cc68   168  ldr x1, [x1, #8]
0xffff9140cc6c   172  tbz w1, #2, #+0x18 (addr 0xffff9140cc84)
0xffff9140cc70   176  sub csp, jssp, #0x8 (8)
0xffff9140cc74   180  str lr, [jssp, #-8]!
0xffff9140cc78   184  ldr x16, pc+232 (addr 0x0000ffff9140cd60)    ;; code: STUB, RecordWriteStub, minor: 70692
0xffff9140cc7c   188  blr x16
0xffff9140cc80   192  ldr lr, [jssp], #8
0xffff9140cc84   196  movz x1, #0xf748
0xffff9140cc88   200  movk x1, #0x4117, lsl #16
0xffff9140cc8c   204  str x4, [x0]
0xffff9140cc90   208  asr x0, x3, #32
0xffff9140cc94   212  mov x1, x2
0xffff9140cc98   216  add x3, x1, #0xf (15)
0xffff9140cc9c   220  str x4, [x3, w0, sxtw #3]
0xffff9140cca0   224  add x3, x3, w0, sxtw #3
0xffff9140cca4   228  and x4, x4, #0xfffffffffff00000
0xffff9140cca8   232  ldr x4, [x4, #8]
0xffff9140ccac   236  tbz w4, #1, #+0x24 (addr 0xffff9140ccd0)
0xffff9140ccb0   240  and x4, x1, #0xfffffffffff00000
0xffff9140ccb4   244  ldr x4, [x4, #8]
0xffff9140ccb8   248  tbz w4, #2, #+0x18 (addr 0xffff9140ccd0)
0xffff9140ccbc   252  sub csp, jssp, #0x8 (8)
0xffff9140ccc0   256  str lr, [jssp, #-8]!
0xffff9140ccc4   260  ldr x16, pc+164 (addr 0x0000ffff9140cd68)    ;; code: STUB, RecordWriteStub, minor: 68737
0xffff9140ccc8   264  blr x16
0xffff9140cccc   268  ldr lr, [jssp], #8
0xffff9140ccd0   272  mov x0, x2
0xffff9140ccd4   276  ret
0xffff9140ccd8   280  sub csp, jssp, #0x10 (16)
0xffff9140ccdc   284  stp fp, lr, [jssp, #-16]!
0xffff9140cce0   288  movz fp, #0xa00000000
0xffff9140cce4   292  sub csp, jssp, #0x8 (8)
0xffff9140cce8   296  str fp, [jssp, #-8]!
0xffff9140ccec   300  add fp, jssp, #0x8 (8)
0xffff9140ccf0   304  movz x4, #0x0
0xffff9140ccf4   308  mov x16, lr
0xffff9140ccf8   312  ldr x17, pc+120 (addr 0x0000ffff9140cd70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140ccfc   316  blr x17
0xffff9140cd00   320  movz x0, #0x3800000000
0xffff9140cd04   324  movz x10, #0x200000000
0xffff9140cd08   328  sub csp, jssp, #0x10 (16)
0xffff9140cd0c   332  stp x10, x0, [jssp, #-16]!
0xffff9140cd10   336  movz x0, #0x2
0xffff9140cd14   340  movz x1, #0x5b88
0xffff9140cd18   344  movk x1, #0xe2, lsl #16
0xffff9140cd1c   348  ldr x16, pc+92 (addr 0x0000ffff9140cd78)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140cd20   352  blr x16
0xffff9140cd24   356  str x0, [jssp, #32]
0xffff9140cd28   360  ldr x16, pc+88 (addr 0x0000ffff9140cd80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140cd2c   364  blr x16
0xffff9140cd30   368  ldr lr, [jssp, #16]
0xffff9140cd34   372  ldp xzr, fp, [jssp], #24
0xffff9140cd38   376  b #-0x158 (addr 0xffff9140cbe0)
0xffff9140cd3c   380  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff9140cd40   384  d63f03e0       constant
0xffff9140cd44   388  d503201f       constant
0xffff9140cd48   392  36405d29       constant
0xffff9140cd4c   396  00000000       constant
0xffff9140cd50   400  9140b420       constant
0xffff9140cd54   404  0000ffff       constant
0xffff9140cd58   408  49b04201       constant
0xffff9140cd5c   412  00000000       constant
0xffff9140cd60   416  9140bc00       constant
0xffff9140cd64   420  0000ffff       constant
0xffff9140cd68   424  9140c3e0       constant
0xffff9140cd6c   428  0000ffff       constant
0xffff9140cd70   432  91406820       constant
0xffff9140cd74   436  0000ffff       constant
0xffff9140cd78   440  91406260       constant
0xffff9140cd7c   444  0000ffff       constant
0xffff9140cd80   448  914068e0       constant
0xffff9140cd84   452  0000ffff       constant


Safepoints (size = 21)
0xffff9140cd24   356  000 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 18)
0xffff9140cbe0  embedded object  (0x36405d29 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140cc0c  code target (STUB)  (0xffff9140b420)
0xffff9140cc38  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140cc78  code target (STUB)  (0xffff9140bc00)
0xffff9140ccc4  code target (STUB)  (0xffff9140c3e0)
0xffff9140ccf8  code target (STUB)  (0xffff91406820)
0xffff9140cd1c  code target (STUB)  (0xffff91406260)
0xffff9140cd28  code target (STUB)  (0xffff914068e0)
0xffff9140cd3c  constant pool (size 76)

--- End code ---
kind = STUB
major_key = CreateAllocationSiteStub
name = CreateAllocationSiteStub
compiler = crankshaft
Instructions (size = 477)
0xffff9140cbc0     0  movz x1, #0xd840
0xffff9140cbc4     4  movk x1, #0x411a, lsl #16
0xffff9140cbc8     8  ldp x4, x0, [x1]
0xffff9140cbcc    12  adds x16, x4, #0x38 (56)
0xffff9140cbd0    16  ccmp x16, x0, #nzCv, lo
0xffff9140cbd4    20  b.hi #+0x104 (addr 0xffff9140ccd8)
0xffff9140cbd8    24  str x16, [x1]
0xffff9140cbdc    28  orr x4, x4, #0x1
0xffff9140cbe0    32  ldr x0, pc+360 (addr 0x0000ffff9140cd48)    ;; object: 0x36405d29 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9140cbe4    36  stur x0, [x4, #-1]
0xffff9140cbe8    40  sub x1, x4, #0x1 (1)
0xffff9140cbec    44  and x0, x0, #0xfffffffffff00000
0xffff9140cbf0    48  ldr x0, [x0, #8]
0xffff9140cbf4    52  tbz w0, #1, #+0x24 (addr 0xffff9140cc18)
0xffff9140cbf8    56  and x0, x4, #0xfffffffffff00000
0xffff9140cbfc    60  ldr x0, [x0, #8]
0xffff9140cc00    64  tbz w0, #2, #+0x18 (addr 0xffff9140cc18)
0xffff9140cc04    68  sub csp, jssp, #0x8 (8)
0xffff9140cc08    72  str lr, [jssp, #-8]!
0xffff9140cc0c    76  ldr x16, pc+324 (addr 0x0000ffff9140cd50)    ;; code: STUB, RecordWriteStub, minor: 66564
0xffff9140cc10    80  blr x16
0xffff9140cc14    84  ldr lr, [jssp], #8
0xffff9140cc18    88  movz x0, #0x0
0xffff9140cc1c    92  stur x0, [x4, #7]
0xffff9140cc20    96  movz x0, #0x0
0xffff9140cc24   100  stur x0, [x4, #15]
0xffff9140cc28   104  movz x0, #0x0
0xffff9140cc2c   108  stur x0, [x4, #23]
0xffff9140cc30   112  movz x0, #0x0
0xffff9140cc34   116  stur x0, [x4, #31]
0xffff9140cc38   120  ldr x0, pc+288 (addr 0x0000ffff9140cd58)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9140cc3c   124  stur x0, [x4, #39]
0xffff9140cc40   128  movz x0, #0xf748
0xffff9140cc44   132  movk x0, #0x4117, lsl #16
0xffff9140cc48   136  ldr x1, [x0]
0xffff9140cc4c   140  stur x1, [x4, #47]
0xffff9140cc50   144  tbz w1, #0, #+0x34 (addr 0xffff9140cc84)
0xffff9140cc54   148  add x5, x4, #0x2f (47)
0xffff9140cc58   152  and x1, x1, #0xfffffffffff00000
0xffff9140cc5c   156  ldr x1, [x1, #8]
0xffff9140cc60   160  tbz w1, #1, #+0x24 (addr 0xffff9140cc84)
0xffff9140cc64   164  and x1, x4, #0xfffffffffff00000
0xffff9140cc68   168  ldr x1, [x1, #8]
0xffff9140cc6c   172  tbz w1, #2, #+0x18 (addr 0xffff9140cc84)
0xffff9140cc70   176  sub csp, jssp, #0x8 (8)
0xffff9140cc74   180  str lr, [jssp, #-8]!
0xffff9140cc78   184  ldr x16, pc+232 (addr 0x0000ffff9140cd60)    ;; code: STUB, RecordWriteStub, minor: 70692
0xffff9140cc7c   188  blr x16
0xffff9140cc80   192  ldr lr, [jssp], #8
0xffff9140cc84   196  movz x1, #0xf748
0xffff9140cc88   200  movk x1, #0x4117, lsl #16
0xffff9140cc8c   204  str x4, [x0]
0xffff9140cc90   208  asr x0, x3, #32
0xffff9140cc94   212  mov x1, x2
0xffff9140cc98   216  add x3, x1, #0xf (15)
0xffff9140cc9c   220  str x4, [x3, w0, sxtw #3]
0xffff9140cca0   224  add x3, x3, w0, sxtw #3
0xffff9140cca4   228  and x4, x4, #0xfffffffffff00000
0xffff9140cca8   232  ldr x4, [x4, #8]
0xffff9140ccac   236  tbz w4, #1, #+0x24 (addr 0xffff9140ccd0)
0xffff9140ccb0   240  and x4, x1, #0xfffffffffff00000
0xffff9140ccb4   244  ldr x4, [x4, #8]
0xffff9140ccb8   248  tbz w4, #2, #+0x18 (addr 0xffff9140ccd0)
0xffff9140ccbc   252  sub csp, jssp, #0x8 (8)
0xffff9140ccc0   256  str lr, [jssp, #-8]!
0xffff9140ccc4   260  ldr x16, pc+164 (addr 0x0000ffff9140cd68)    ;; code: STUB, RecordWriteStub, minor: 68737
0xffff9140ccc8   264  blr x16
0xffff9140cccc   268  ldr lr, [jssp], #8
0xffff9140ccd0   272  mov x0, x2
0xffff9140ccd4   276  ret
0xffff9140ccd8   280  sub csp, jssp, #0x10 (16)
0xffff9140ccdc   284  stp fp, lr, [jssp, #-16]!
0xffff9140cce0   288  movz fp, #0xa00000000
0xffff9140cce4   292  sub csp, jssp, #0x8 (8)
0xffff9140cce8   296  str fp, [jssp, #-8]!
0xffff9140ccec   300  add fp, jssp, #0x8 (8)
0xffff9140ccf0   304  movz x4, #0x0
0xffff9140ccf4   308  mov x16, lr
0xffff9140ccf8   312  ldr x17, pc+120 (addr 0x0000ffff9140cd70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140ccfc   316  blr x17
0xffff9140cd00   320  movz x0, #0x3800000000
0xffff9140cd04   324  movz x10, #0x200000000
0xffff9140cd08   328  sub csp, jssp, #0x10 (16)
0xffff9140cd0c   332  stp x10, x0, [jssp, #-16]!
0xffff9140cd10   336  movz x0, #0x2
0xffff9140cd14   340  movz x1, #0x5b88
0xffff9140cd18   344  movk x1, #0xe2, lsl #16
0xffff9140cd1c   348  ldr x16, pc+92 (addr 0x0000ffff9140cd78)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140cd20   352  blr x16
0xffff9140cd24   356  str x0, [jssp, #32]
0xffff9140cd28   360  ldr x16, pc+88 (addr 0x0000ffff9140cd80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140cd2c   364  blr x16
0xffff9140cd30   368  ldr lr, [jssp, #16]
0xffff9140cd34   372  ldp xzr, fp, [jssp], #24
0xffff9140cd38   376  b #-0x158 (addr 0xffff9140cbe0)
0xffff9140cd3c   380  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff9140cd40   384  d63f03e0       constant
0xffff9140cd44   388  d503201f       constant
0xffff9140cd48   392  36405d29       constant
0xffff9140cd4c   396  00000000       constant
0xffff9140cd50   400  9140b420       constant
0xffff9140cd54   404  0000ffff       constant
0xffff9140cd58   408  49b04201       constant
0xffff9140cd5c   412  00000000       constant
0xffff9140cd60   416  9140bc00       constant
0xffff9140cd64   420  0000ffff       constant
0xffff9140cd68   424  9140c3e0       constant
0xffff9140cd6c   428  0000ffff       constant
0xffff9140cd70   432  91406820       constant
0xffff9140cd74   436  0000ffff       constant
0xffff9140cd78   440  91406260       constant
0xffff9140cd7c   444  0000ffff       constant
0xffff9140cd80   448  914068e0       constant
0xffff9140cd84   452  0000ffff       constant


Safepoints (size = 21)
0xffff9140cd24   356  000 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 18)
0xffff9140cbe0  embedded object  (0x36405d29 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140cc0c  code target (STUB)  (0xffff9140b420)
0xffff9140cc38  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9140cc78  code target (STUB)  (0xffff9140bc00)
0xffff9140ccc4  code target (STUB)  (0xffff9140c3e0)
0xffff9140ccf8  code target (STUB)  (0xffff91406820)
0xffff9140cd1c  code target (STUB)  (0xffff91406260)
0xffff9140cd28  code target (STUB)  (0xffff914068e0)
0xffff9140cd3c  constant pool (size 76)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff9140ce00     0  adr xzr, #+0x40 (addr 0xffff9140ce40)
0xffff9140ce04     4  adr xzr, #+0x360 (addr 0xffff9140d164)
0xffff9140ce08     8  ldr x16, pc+1736 (addr 0x0000ffff9140d4d0)    ;; external reference (store_buffer_top)
0xffff9140ce0c    12  ldr x1, [x16]
0xffff9140ce10    16  str x0, [x1], #8
0xffff9140ce14    20  str x1, [x16]
0xffff9140ce18    24  tst x1, #0x1ffff
0xffff9140ce1c    28  b.eq #+0x8 (addr 0xffff9140ce24)
0xffff9140ce20    32  ret
0xffff9140ce24    36  sub csp, jssp, #0x8 (8)
0xffff9140ce28    40  str lr, [jssp, #-8]!
0xffff9140ce2c    44  ldr x17, pc+1708 (addr 0x0000ffff9140d4d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140ce30    48  blr x17
0xffff9140ce34    52  ldr lr, [jssp], #8
0xffff9140ce38    56  ret
0xffff9140ce3c    60  ret
0xffff9140ce40    64  sub csp, jssp, #0x10 (16)
0xffff9140ce44    68  stp x3, x2, [jssp, #-16]!
0xffff9140ce48    72  ldr x1, [x0]
0xffff9140ce4c    76  and x16, x1, #0xfffffffffff00000
0xffff9140ce50    80  ldr x16, [x16, #8]
0xffff9140ce54    84  tst x16, #0x18
0xffff9140ce58    88  b.eq #+0x1d8 (addr 0xffff9140d030)
0xffff9140ce5c    92  and x16, x5, #0xfffffffffff00000
0xffff9140ce60    96  ldr x16, [x16, #8]
0xffff9140ce64   100  tst x16, #0x18
0xffff9140ce68   104  b.ne #+0x1c8 (addr 0xffff9140d030)
0xffff9140ce6c   108  and x1, x5, #0xfffffffffff00000
0xffff9140ce70   112  ldr x2, [x1, #104]
0xffff9140ce74   116  subs x2, x2, #0x1 (1)
0xffff9140ce78   120  str x2, [x1, #104]
0xffff9140ce7c   124  b.mi #+0xc4 (addr 0xffff9140cf40)
0xffff9140ce80   128  ubfx x16, x5, #8, #12
0xffff9140ce84   132  and x1, x5, #0xfffffffffff00000
0xffff9140ce88   136  add x1, x1, x16, lsl #2
0xffff9140ce8c   140  ubfx x2, x5, #3, #5
0xffff9140ce90   144  ldr x1, [x1, #360]
0xffff9140ce94   148  lsr x1, x1, x2
0xffff9140ce98   152  tbz w1, #0, #+0x8 (addr 0xffff9140cea0)
0xffff9140ce9c   156  tbnz w1, #1, #+0x3c (addr 0xffff9140ced8)
0xffff9140cea0   160  ldp x3, x2, [jssp], #16
0xffff9140cea4   164  ldr x16, pc+1596 (addr 0x0000ffff9140d4e0)    ;; external reference (store_buffer_top)
0xffff9140cea8   168  ldr x1, [x16]
0xffff9140ceac   172  str x0, [x1], #8
0xffff9140ceb0   176  str x1, [x16]
0xffff9140ceb4   180  tst x1, #0x1ffff
0xffff9140ceb8   184  b.eq #+0x8 (addr 0xffff9140cec0)
0xffff9140cebc   188  ret
0xffff9140cec0   192  sub csp, jssp, #0x8 (8)
0xffff9140cec4   196  str lr, [jssp, #-8]!
0xffff9140cec8   200  ldr x17, pc+1568 (addr 0x0000ffff9140d4e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140cecc   204  blr x17
0xffff9140ced0   208  ldr lr, [jssp], #8
0xffff9140ced4   212  ret
0xffff9140ced8   216  ldr x1, [x0]
0xffff9140cedc   220  sub csp, jssp, #0x10 (16)
0xffff9140cee0   224  stp x5, x0, [jssp, #-16]!
0xffff9140cee4   228  ubfx x16, x1, #8, #12
0xffff9140cee8   232  and x2, x1, #0xfffffffffff00000
0xffff9140ceec   236  add x2, x2, x16, lsl #2
0xffff9140cef0   240  ubfx x5, x1, #3, #5
0xffff9140cef4   244  ldr x0, [x2, #360]
0xffff9140cef8   248  lsr x0, x0, x5
0xffff9140cefc   252  tbz w0, #0, #+0x40 (addr 0xffff9140cf3c)
0xffff9140cf00   256  ldp x5, x0, [jssp], #16
0xffff9140cf04   260  ldp x3, x2, [jssp], #16
0xffff9140cf08   264  ldr x16, pc+1512 (addr 0x0000ffff9140d4f0)    ;; external reference (store_buffer_top)
0xffff9140cf0c   268  ldr x1, [x16]
0xffff9140cf10   272  str x0, [x1], #8
0xffff9140cf14   276  str x1, [x16]
0xffff9140cf18   280  tst x1, #0x1ffff
0xffff9140cf1c   284  b.eq #+0x8 (addr 0xffff9140cf24)
0xffff9140cf20   288  ret
0xffff9140cf24   292  sub csp, jssp, #0x8 (8)
0xffff9140cf28   296  str lr, [jssp, #-8]!
0xffff9140cf2c   300  ldr x17, pc+1484 (addr 0x0000ffff9140d4f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140cf30   304  blr x17
0xffff9140cf34   308  ldr lr, [jssp], #8
0xffff9140cf38   312  ret
0xffff9140cf3c   316  ldp x5, x0, [jssp], #16
0xffff9140cf40   320  sub csp, jssp, #0x78 (120)
0xffff9140cf44   324  stp x14, x15, [jssp, #-32]!
0xffff9140cf48   328  stp x18, lr, [jssp, #16]
0xffff9140cf4c   332  stp x10, x11, [jssp, #-32]!
0xffff9140cf50   336  stp x12, x13, [jssp, #16]
0xffff9140cf54   340  stp x6, x7, [jssp, #-32]!
0xffff9140cf58   344  stp x8, x9, [jssp, #16]
0xffff9140cf5c   348  stp x0, x4, [jssp, #-24]!
0xffff9140cf60   352  str x5, [jssp, #16]
0xffff9140cf64   356  sub csp, jssp, #0xb0 (176)
0xffff9140cf68   360  stp d26, d27, [jssp, #-32]!
0xffff9140cf6c   364  stp d28, d29, [jssp, #16]
0xffff9140cf70   368  stp d22, d23, [jssp, #-32]!
0xffff9140cf74   372  stp d24, d25, [jssp, #16]
0xffff9140cf78   376  stp d18, d19, [jssp, #-32]!
0xffff9140cf7c   380  stp d20, d21, [jssp, #16]
0xffff9140cf80   384  stp d6, d7, [jssp, #-32]!
0xffff9140cf84   388  stp d16, d17, [jssp, #16]
0xffff9140cf88   392  stp d2, d3, [jssp, #-32]!
0xffff9140cf8c   396  stp d4, d5, [jssp, #16]
0xffff9140cf90   400  stp d0, d1, [jssp, #-16]!
0xffff9140cf94   404  mov x1, x0
0xffff9140cf98   408  mov x0, x5
0xffff9140cf9c   412  ldr x2, pc+1380 (addr 0x0000ffff9140d500)    ;; external reference (isolate)
0xffff9140cfa0   416  ldr x16, pc+1384 (addr 0x0000ffff9140d508)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140cfa4   420  and csp, jssp, #0xfffffffffffffff0
0xffff9140cfa8   424  blr x16
0xffff9140cfac   428  ldp d2, d3, [jssp, #16]
0xffff9140cfb0   432  ldp d0, d1, [jssp], #32
0xffff9140cfb4   436  ldp d6, d7, [jssp, #16]
0xffff9140cfb8   440  ldp d4, d5, [jssp], #32
0xffff9140cfbc   444  ldp d18, d19, [jssp, #16]
0xffff9140cfc0   448  ldp d16, d17, [jssp], #32
0xffff9140cfc4   452  ldp d22, d23, [jssp, #16]
0xffff9140cfc8   456  ldp d20, d21, [jssp], #32
0xffff9140cfcc   460  ldp d26, d27, [jssp, #16]
0xffff9140cfd0   464  ldp d24, d25, [jssp], #32
0xffff9140cfd4   468  ldp d28, d29, [jssp], #16
0xffff9140cfd8   472  ldp x5, x6, [jssp, #16]
0xffff9140cfdc   476  ldp x0, x4, [jssp], #32
0xffff9140cfe0   480  ldp x9, x10, [jssp, #16]
0xffff9140cfe4   484  ldp x7, x8, [jssp], #32
0xffff9140cfe8   488  ldp x13, x14, [jssp, #16]
0xffff9140cfec   492  ldp x11, x12, [jssp], #32
0xffff9140cff0   496  ldr lr, [jssp, #16]
0xffff9140cff4   500  ldp x15, x18, [jssp], #24
0xffff9140cff8   504  ldp x3, x2, [jssp], #16
0xffff9140cffc   508  ldr x16, pc+1300 (addr 0x0000ffff9140d510)    ;; external reference (store_buffer_top)
0xffff9140d000   512  ldr x1, [x16]
0xffff9140d004   516  str x0, [x1], #8
0xffff9140d008   520  str x1, [x16]
0xffff9140d00c   524  tst x1, #0x1ffff
0xffff9140d010   528  b.eq #+0x8 (addr 0xffff9140d018)
0xffff9140d014   532  ret
0xffff9140d018   536  sub csp, jssp, #0x8 (8)
0xffff9140d01c   540  str lr, [jssp, #-8]!
0xffff9140d020   544  ldr x17, pc+1272 (addr 0x0000ffff9140d518)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140d024   548  blr x17
0xffff9140d028   552  ldr lr, [jssp], #8
0xffff9140d02c   556  ret
0xffff9140d030   560  and x1, x5, #0xfffffffffff00000
0xffff9140d034   564  ldr x2, [x1, #104]
0xffff9140d038   568  subs x2, x2, #0x1 (1)
0xffff9140d03c   572  str x2, [x1, #104]
0xffff9140d040   576  b.mi #+0x64 (addr 0xffff9140d0a4)
0xffff9140d044   580  ubfx x16, x5, #8, #12
0xffff9140d048   584  and x1, x5, #0xfffffffffff00000
0xffff9140d04c   588  add x1, x1, x16, lsl #2
0xffff9140d050   592  ubfx x2, x5, #3, #5
0xffff9140d054   596  ldr x1, [x1, #360]
0xffff9140d058   600  lsr x1, x1, x2
0xffff9140d05c   604  tbz w1, #0, #+0x8 (addr 0xffff9140d064)
0xffff9140d060   608  tbnz w1, #1, #+0xc (addr 0xffff9140d06c)
0xffff9140d064   612  ldp x3, x2, [jssp], #16
0xffff9140d068   616  ret
0xffff9140d06c   620  ldr x1, [x0]
0xffff9140d070   624  sub csp, jssp, #0x10 (16)
0xffff9140d074   628  stp x5, x0, [jssp, #-16]!
0xffff9140d078   632  ubfx x16, x1, #8, #12
0xffff9140d07c   636  and x2, x1, #0xfffffffffff00000
0xffff9140d080   640  add x2, x2, x16, lsl #2
0xffff9140d084   644  ubfx x5, x1, #3, #5
0xffff9140d088   648  ldr x0, [x2, #360]
0xffff9140d08c   652  lsr x0, x0, x5
0xffff9140d090   656  tbz w0, #0, #+0x10 (addr 0xffff9140d0a0)
0xffff9140d094   660  ldp x5, x0, [jssp], #16
0xffff9140d098   664  ldp x3, x2, [jssp], #16
0xffff9140d09c   668  ret
0xffff9140d0a0   672  ldp x5, x0, [jssp], #16
0xffff9140d0a4   676  sub csp, jssp, #0x78 (120)
0xffff9140d0a8   680  stp x14, x15, [jssp, #-32]!
0xffff9140d0ac   684  stp x18, lr, [jssp, #16]
0xffff9140d0b0   688  stp x10, x11, [jssp, #-32]!
0xffff9140d0b4   692  stp x12, x13, [jssp, #16]
0xffff9140d0b8   696  stp x6, x7, [jssp, #-32]!
0xffff9140d0bc   700  stp x8, x9, [jssp, #16]
0xffff9140d0c0   704  stp x0, x4, [jssp, #-24]!
0xffff9140d0c4   708  str x5, [jssp, #16]
0xffff9140d0c8   712  sub csp, jssp, #0xb0 (176)
0xffff9140d0cc   716  stp d26, d27, [jssp, #-32]!
0xffff9140d0d0   720  stp d28, d29, [jssp, #16]
0xffff9140d0d4   724  stp d22, d23, [jssp, #-32]!
0xffff9140d0d8   728  stp d24, d25, [jssp, #16]
0xffff9140d0dc   732  stp d18, d19, [jssp, #-32]!
0xffff9140d0e0   736  stp d20, d21, [jssp, #16]
0xffff9140d0e4   740  stp d6, d7, [jssp, #-32]!
0xffff9140d0e8   744  stp d16, d17, [jssp, #16]
0xffff9140d0ec   748  stp d2, d3, [jssp, #-32]!
0xffff9140d0f0   752  stp d4, d5, [jssp, #16]
0xffff9140d0f4   756  stp d0, d1, [jssp, #-16]!
0xffff9140d0f8   760  mov x1, x0
0xffff9140d0fc   764  mov x0, x5
0xffff9140d100   768  ldr x2, pc+1056 (addr 0x0000ffff9140d520)    ;; external reference (isolate)
0xffff9140d104   772  ldr x16, pc+1060 (addr 0x0000ffff9140d528)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140d108   776  and csp, jssp, #0xfffffffffffffff0
0xffff9140d10c   780  blr x16
0xffff9140d110   784  ldp d2, d3, [jssp, #16]
0xffff9140d114   788  ldp d0, d1, [jssp], #32
0xffff9140d118   792  ldp d6, d7, [jssp, #16]
0xffff9140d11c   796  ldp d4, d5, [jssp], #32
0xffff9140d120   800  ldp d18, d19, [jssp, #16]
0xffff9140d124   804  ldp d16, d17, [jssp], #32
0xffff9140d128   808  ldp d22, d23, [jssp, #16]
0xffff9140d12c   812  ldp d20, d21, [jssp], #32
0xffff9140d130   816  ldp d26, d27, [jssp, #16]
0xffff9140d134   820  ldp d24, d25, [jssp], #32
0xffff9140d138   824  ldp d28, d29, [jssp], #16
0xffff9140d13c   828  ldp x5, x6, [jssp, #16]
0xffff9140d140   832  ldp x0, x4, [jssp], #32
0xffff9140d144   836  ldp x9, x10, [jssp, #16]
0xffff9140d148   840  ldp x7, x8, [jssp], #32
0xffff9140d14c   844  ldp x13, x14, [jssp, #16]
0xffff9140d150   848  ldp x11, x12, [jssp], #32
0xffff9140d154   852  ldr lr, [jssp, #16]
0xffff9140d158   856  ldp x15, x18, [jssp], #24
0xffff9140d15c   860  ldp x3, x2, [jssp], #16
0xffff9140d160   864  ret
0xffff9140d164   868  sub csp, jssp, #0x10 (16)
0xffff9140d168   872  stp x3, x2, [jssp, #-16]!
0xffff9140d16c   876  ldr x1, [x0]
0xffff9140d170   880  and x16, x1, #0xfffffffffff00000
0xffff9140d174   884  ldr x16, [x16, #8]
0xffff9140d178   888  tst x16, #0x18
0xffff9140d17c   892  b.eq #+0x1f8 (addr 0xffff9140d374)
0xffff9140d180   896  and x16, x5, #0xfffffffffff00000
0xffff9140d184   900  ldr x16, [x16, #8]
0xffff9140d188   904  tst x16, #0x18
0xffff9140d18c   908  b.ne #+0x1e8 (addr 0xffff9140d374)
0xffff9140d190   912  and x1, x5, #0xfffffffffff00000
0xffff9140d194   916  ldr x2, [x1, #104]
0xffff9140d198   920  subs x2, x2, #0x1 (1)
0xffff9140d19c   924  str x2, [x1, #104]
0xffff9140d1a0   928  b.mi #+0xe4 (addr 0xffff9140d284)
0xffff9140d1a4   932  ubfx x16, x5, #8, #12
0xffff9140d1a8   936  and x1, x5, #0xfffffffffff00000
0xffff9140d1ac   940  add x1, x1, x16, lsl #2
0xffff9140d1b0   944  ubfx x2, x5, #3, #5
0xffff9140d1b4   948  ldr x1, [x1, #360]
0xffff9140d1b8   952  lsr x1, x1, x2
0xffff9140d1bc   956  tbz w1, #0, #+0x8 (addr 0xffff9140d1c4)
0xffff9140d1c0   960  tbnz w1, #1, #+0x3c (addr 0xffff9140d1fc)
0xffff9140d1c4   964  ldp x3, x2, [jssp], #16
0xffff9140d1c8   968  ldr x16, pc+872 (addr 0x0000ffff9140d530)    ;; external reference (store_buffer_top)
0xffff9140d1cc   972  ldr x1, [x16]
0xffff9140d1d0   976  str x0, [x1], #8
0xffff9140d1d4   980  str x1, [x16]
0xffff9140d1d8   984  tst x1, #0x1ffff
0xffff9140d1dc   988  b.eq #+0x8 (addr 0xffff9140d1e4)
0xffff9140d1e0   992  ret
0xffff9140d1e4   996  sub csp, jssp, #0x8 (8)
0xffff9140d1e8  1000  str lr, [jssp, #-8]!
0xffff9140d1ec  1004  ldr x17, pc+844 (addr 0x0000ffff9140d538)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140d1f0  1008  blr x17
0xffff9140d1f4  1012  ldr lr, [jssp], #8
0xffff9140d1f8  1016  ret
0xffff9140d1fc  1020  ldr x1, [x0]
0xffff9140d200  1024  and x2, x1, #0xfffffffffff00000
0xffff9140d204  1028  ldr x2, [x2, #8]
0xffff9140d208  1032  tbz w2, #6, #+0x18 (addr 0xffff9140d220)
0xffff9140d20c  1036  and x2, x5, #0xfffffffffff00000
0xffff9140d210  1040  ldr x2, [x2, #8]
0xffff9140d214  1044  movz x16, #0x58
0xffff9140d218  1048  tst x2, x16
0xffff9140d21c  1052  b.eq #+0x68 (addr 0xffff9140d284)
0xffff9140d220  1056  sub csp, jssp, #0x10 (16)
0xffff9140d224  1060  stp x5, x0, [jssp, #-16]!
0xffff9140d228  1064  ubfx x16, x1, #8, #12
0xffff9140d22c  1068  and x2, x1, #0xfffffffffff00000
0xffff9140d230  1072  add x2, x2, x16, lsl #2
0xffff9140d234  1076  ubfx x5, x1, #3, #5
0xffff9140d238  1080  ldr x0, [x2, #360]
0xffff9140d23c  1084  lsr x0, x0, x5
0xffff9140d240  1088  tbz w0, #0, #+0x40 (addr 0xffff9140d280)
0xffff9140d244  1092  ldp x5, x0, [jssp], #16
0xffff9140d248  1096  ldp x3, x2, [jssp], #16
0xffff9140d24c  1100  ldr x16, pc+756 (addr 0x0000ffff9140d540)    ;; external reference (store_buffer_top)
0xffff9140d250  1104  ldr x1, [x16]
0xffff9140d254  1108  str x0, [x1], #8
0xffff9140d258  1112  str x1, [x16]
0xffff9140d25c  1116  tst x1, #0x1ffff
0xffff9140d260  1120  b.eq #+0x8 (addr 0xffff9140d268)
0xffff9140d264  1124  ret
0xffff9140d268  1128  sub csp, jssp, #0x8 (8)
0xffff9140d26c  1132  str lr, [jssp, #-8]!
0xffff9140d270  1136  ldr x17, pc+728 (addr 0x0000ffff9140d548)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140d274  1140  blr x17
0xffff9140d278  1144  ldr lr, [jssp], #8
0xffff9140d27c  1148  ret
0xffff9140d280  1152  ldp x5, x0, [jssp], #16
0xffff9140d284  1156  sub csp, jssp, #0x78 (120)
0xffff9140d288  1160  stp x14, x15, [jssp, #-32]!
0xffff9140d28c  1164  stp x18, lr, [jssp, #16]
0xffff9140d290  1168  stp x10, x11, [jssp, #-32]!
0xffff9140d294  1172  stp x12, x13, [jssp, #16]
0xffff9140d298  1176  stp x6, x7, [jssp, #-32]!
0xffff9140d29c  1180  stp x8, x9, [jssp, #16]
0xffff9140d2a0  1184  stp x0, x4, [jssp, #-24]!
0xffff9140d2a4  1188  str x5, [jssp, #16]
0xffff9140d2a8  1192  sub csp, jssp, #0xb0 (176)
0xffff9140d2ac  1196  stp d26, d27, [jssp, #-32]!
0xffff9140d2b0  1200  stp d28, d29, [jssp, #16]
0xffff9140d2b4  1204  stp d22, d23, [jssp, #-32]!
0xffff9140d2b8  1208  stp d24, d25, [jssp, #16]
0xffff9140d2bc  1212  stp d18, d19, [jssp, #-32]!
0xffff9140d2c0  1216  stp d20, d21, [jssp, #16]
0xffff9140d2c4  1220  stp d6, d7, [jssp, #-32]!
0xffff9140d2c8  1224  stp d16, d17, [jssp, #16]
0xffff9140d2cc  1228  stp d2, d3, [jssp, #-32]!
0xffff9140d2d0  1232  stp d4, d5, [jssp, #16]
0xffff9140d2d4  1236  stp d0, d1, [jssp, #-16]!
0xffff9140d2d8  1240  mov x1, x0
0xffff9140d2dc  1244  mov x0, x5
0xffff9140d2e0  1248  ldr x2, pc+624 (addr 0x0000ffff9140d550)    ;; external reference (isolate)
0xffff9140d2e4  1252  ldr x16, pc+628 (addr 0x0000ffff9140d558)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140d2e8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff9140d2ec  1260  blr x16
0xffff9140d2f0  1264  ldp d2, d3, [jssp, #16]
0xffff9140d2f4  1268  ldp d0, d1, [jssp], #32
0xffff9140d2f8  1272  ldp d6, d7, [jssp, #16]
0xffff9140d2fc  1276  ldp d4, d5, [jssp], #32
0xffff9140d300  1280  ldp d18, d19, [jssp, #16]
0xffff9140d304  1284  ldp d16, d17, [jssp], #32
0xffff9140d308  1288  ldp d22, d23, [jssp, #16]
0xffff9140d30c  1292  ldp d20, d21, [jssp], #32
0xffff9140d310  1296  ldp d26, d27, [jssp, #16]
0xffff9140d314  1300  ldp d24, d25, [jssp], #32
0xffff9140d318  1304  ldp d28, d29, [jssp], #16
0xffff9140d31c  1308  ldp x5, x6, [jssp, #16]
0xffff9140d320  1312  ldp x0, x4, [jssp], #32
0xffff9140d324  1316  ldp x9, x10, [jssp, #16]
0xffff9140d328  1320  ldp x7, x8, [jssp], #32
0xffff9140d32c  1324  ldp x13, x14, [jssp, #16]
0xffff9140d330  1328  ldp x11, x12, [jssp], #32
0xffff9140d334  1332  ldr lr, [jssp, #16]
0xffff9140d338  1336  ldp x15, x18, [jssp], #24
0xffff9140d33c  1340  ldp x3, x2, [jssp], #16
0xffff9140d340  1344  ldr x16, pc+544 (addr 0x0000ffff9140d560)    ;; external reference (store_buffer_top)
0xffff9140d344  1348  ldr x1, [x16]
0xffff9140d348  1352  str x0, [x1], #8
0xffff9140d34c  1356  str x1, [x16]
0xffff9140d350  1360  tst x1, #0x1ffff
0xffff9140d354  1364  b.eq #+0x8 (addr 0xffff9140d35c)
0xffff9140d358  1368  ret
0xffff9140d35c  1372  sub csp, jssp, #0x8 (8)
0xffff9140d360  1376  str lr, [jssp, #-8]!
0xffff9140d364  1380  ldr x17, pc+516 (addr 0x0000ffff9140d568)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140d368  1384  blr x17
0xffff9140d36c  1388  ldr lr, [jssp], #8
0xffff9140d370  1392  ret
0xffff9140d374  1396  and x1, x5, #0xfffffffffff00000
0xffff9140d378  1400  ldr x2, [x1, #104]
0xffff9140d37c  1404  subs x2, x2, #0x1 (1)
0xffff9140d380  1408  str x2, [x1, #104]
0xffff9140d384  1412  b.mi #+0x84 (addr 0xffff9140d408)
0xffff9140d388  1416  ubfx x16, x5, #8, #12
0xffff9140d38c  1420  and x1, x5, #0xfffffffffff00000
0xffff9140d390  1424  add x1, x1, x16, lsl #2
0xffff9140d394  1428  ubfx x2, x5, #3, #5
0xffff9140d398  1432  ldr x1, [x1, #360]
0xffff9140d39c  1436  lsr x1, x1, x2
0xffff9140d3a0  1440  tbz w1, #0, #+0x8 (addr 0xffff9140d3a8)
0xffff9140d3a4  1444  tbnz w1, #1, #+0xc (addr 0xffff9140d3b0)
0xffff9140d3a8  1448  ldp x3, x2, [jssp], #16
0xffff9140d3ac  1452  ret
0xffff9140d3b0  1456  ldr x1, [x0]
0xffff9140d3b4  1460  and x2, x1, #0xfffffffffff00000
0xffff9140d3b8  1464  ldr x2, [x2, #8]
0xffff9140d3bc  1468  tbz w2, #6, #+0x18 (addr 0xffff9140d3d4)
0xffff9140d3c0  1472  and x2, x5, #0xfffffffffff00000
0xffff9140d3c4  1476  ldr x2, [x2, #8]
0xffff9140d3c8  1480  movz x16, #0x58
0xffff9140d3cc  1484  tst x2, x16
0xffff9140d3d0  1488  b.eq #+0x38 (addr 0xffff9140d408)
0xffff9140d3d4  1492  sub csp, jssp, #0x10 (16)
0xffff9140d3d8  1496  stp x5, x0, [jssp, #-16]!
0xffff9140d3dc  1500  ubfx x16, x1, #8, #12
0xffff9140d3e0  1504  and x2, x1, #0xfffffffffff00000
0xffff9140d3e4  1508  add x2, x2, x16, lsl #2
0xffff9140d3e8  1512  ubfx x5, x1, #3, #5
0xffff9140d3ec  1516  ldr x0, [x2, #360]
0xffff9140d3f0  1520  lsr x0, x0, x5
0xffff9140d3f4  1524  tbz w0, #0, #+0x10 (addr 0xffff9140d404)
0xffff9140d3f8  1528  ldp x5, x0, [jssp], #16
0xffff9140d3fc  1532  ldp x3, x2, [jssp], #16
0xffff9140d400  1536  ret
0xffff9140d404  1540  ldp x5, x0, [jssp], #16
0xffff9140d408  1544  sub csp, jssp, #0x78 (120)
0xffff9140d40c  1548  stp x14, x15, [jssp, #-32]!
0xffff9140d410  1552  stp x18, lr, [jssp, #16]
0xffff9140d414  1556  stp x10, x11, [jssp, #-32]!
0xffff9140d418  1560  stp x12, x13, [jssp, #16]
0xffff9140d41c  1564  stp x6, x7, [jssp, #-32]!
0xffff9140d420  1568  stp x8, x9, [jssp, #16]
0xffff9140d424  1572  stp x0, x4, [jssp, #-24]!
0xffff9140d428  1576  str x5, [jssp, #16]
0xffff9140d42c  1580  sub csp, jssp, #0xb0 (176)
0xffff9140d430  1584  stp d26, d27, [jssp, #-32]!
0xffff9140d434  1588  stp d28, d29, [jssp, #16]
0xffff9140d438  1592  stp d22, d23, [jssp, #-32]!
0xffff9140d43c  1596  stp d24, d25, [jssp, #16]
0xffff9140d440  1600  stp d18, d19, [jssp, #-32]!
0xffff9140d444  1604  stp d20, d21, [jssp, #16]
0xffff9140d448  1608  stp d6, d7, [jssp, #-32]!
0xffff9140d44c  1612  stp d16, d17, [jssp, #16]
0xffff9140d450  1616  stp d2, d3, [jssp, #-32]!
0xffff9140d454  1620  stp d4, d5, [jssp, #16]
0xffff9140d458  1624  stp d0, d1, [jssp, #-16]!
0xffff9140d45c  1628  mov x1, x0
0xffff9140d460  1632  mov x0, x5
0xffff9140d464  1636  ldr x2, pc+268 (addr 0x0000ffff9140d570)    ;; external reference (isolate)
0xffff9140d468  1640  ldr x16, pc+272 (addr 0x0000ffff9140d578)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140d46c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff9140d470  1648  blr x16
0xffff9140d474  1652  ldp d2, d3, [jssp, #16]
0xffff9140d478  1656  ldp d0, d1, [jssp], #32
0xffff9140d47c  1660  ldp d6, d7, [jssp, #16]
0xffff9140d480  1664  ldp d4, d5, [jssp], #32
0xffff9140d484  1668  ldp d18, d19, [jssp, #16]
0xffff9140d488  1672  ldp d16, d17, [jssp], #32
0xffff9140d48c  1676  ldp d22, d23, [jssp, #16]
0xffff9140d490  1680  ldp d20, d21, [jssp], #32
0xffff9140d494  1684  ldp d26, d27, [jssp, #16]
0xffff9140d498  1688  ldp d24, d25, [jssp], #32
0xffff9140d49c  1692  ldp d28, d29, [jssp], #16
0xffff9140d4a0  1696  ldp x5, x6, [jssp, #16]
0xffff9140d4a4  1700  ldp x0, x4, [jssp], #32
0xffff9140d4a8  1704  ldp x9, x10, [jssp, #16]
0xffff9140d4ac  1708  ldp x7, x8, [jssp], #32
0xffff9140d4b0  1712  ldp x13, x14, [jssp, #16]
0xffff9140d4b4  1716  ldp x11, x12, [jssp], #32
0xffff9140d4b8  1720  ldr lr, [jssp, #16]
0xffff9140d4bc  1724  ldp x15, x18, [jssp], #24
0xffff9140d4c0  1728  ldp x3, x2, [jssp], #16
0xffff9140d4c4  1732  ret
0xffff9140d4c8  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9140d4cc  1740  d63f03e0       constant
0xffff9140d4d0  1744  4117f8c0       constant
0xffff9140d4d4  1748  00000000       constant
0xffff9140d4d8  1752  914065a0       constant
0xffff9140d4dc  1756  0000ffff       constant
0xffff9140d4e0  1760  4117f8c0       constant
0xffff9140d4e4  1764  00000000       constant
0xffff9140d4e8  1768  914065a0       constant
0xffff9140d4ec  1772  0000ffff       constant
0xffff9140d4f0  1776  4117f8c0       constant
0xffff9140d4f4  1780  00000000       constant
0xffff9140d4f8  1784  914065a0       constant
0xffff9140d4fc  1788  0000ffff       constant
0xffff9140d500  1792  4117e2d0       constant
0xffff9140d504  1796  00000000       constant
0xffff9140d508  1800  00c2d958       constant
0xffff9140d50c  1804  00000000       constant
0xffff9140d510  1808  4117f8c0       constant
0xffff9140d514  1812  00000000       constant
0xffff9140d518  1816  914065a0       constant
0xffff9140d51c  1820  0000ffff       constant
0xffff9140d520  1824  4117e2d0       constant
0xffff9140d524  1828  00000000       constant
0xffff9140d528  1832  00c2d958       constant
0xffff9140d52c  1836  00000000       constant
0xffff9140d530  1840  4117f8c0       constant
0xffff9140d534  1844  00000000       constant
0xffff9140d538  1848  914065a0       constant
0xffff9140d53c  1852  0000ffff       constant
0xffff9140d540  1856  4117f8c0       constant
0xffff9140d544  1860  00000000       constant
0xffff9140d548  1864  914065a0       constant
0xffff9140d54c  1868  0000ffff       constant
0xffff9140d550  1872  4117e2d0       constant
0xffff9140d554  1876  00000000       constant
0xffff9140d558  1880  00c2d958       constant
0xffff9140d55c  1884  00000000       constant
0xffff9140d560  1888  4117f8c0       constant
0xffff9140d564  1892  00000000       constant
0xffff9140d568  1896  914065a0       constant
0xffff9140d56c  1900  0000ffff       constant
0xffff9140d570  1904  4117e2d0       constant
0xffff9140d574  1908  00000000       constant
0xffff9140d578  1912  00c2d958       constant
0xffff9140d57c  1916  00000000       constant


RelocInfo (size = 65)
0xffff9140ce08  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140ce2c  code target (STUB)  (0xffff914065a0)
0xffff9140cea4  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140cec8  code target (STUB)  (0xffff914065a0)
0xffff9140cf08  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140cf2c  code target (STUB)  (0xffff914065a0)
0xffff9140cf9c  external reference (isolate)  (0x4117e2d0)
0xffff9140cfa0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140cffc  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140d020  code target (STUB)  (0xffff914065a0)
0xffff9140d100  external reference (isolate)  (0x4117e2d0)
0xffff9140d104  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140d1c8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140d1ec  code target (STUB)  (0xffff914065a0)
0xffff9140d24c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140d270  code target (STUB)  (0xffff914065a0)
0xffff9140d2e0  external reference (isolate)  (0x4117e2d0)
0xffff9140d2e4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140d340  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140d364  code target (STUB)  (0xffff914065a0)
0xffff9140d464  external reference (isolate)  (0x4117e2d0)
0xffff9140d468  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140d4c8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1904)
0xffff9140d5e0     0  adr xzr, #+0x40 (addr 0xffff9140d620)
0xffff9140d5e4     4  adr xzr, #+0x358 (addr 0xffff9140d93c)
0xffff9140d5e8     8  ldr x16, pc+1720 (addr 0x0000ffff9140dca0)    ;; external reference (store_buffer_top)
0xffff9140d5ec    12  ldr x5, [x16]
0xffff9140d5f0    16  str x1, [x5], #8
0xffff9140d5f4    20  str x5, [x16]
0xffff9140d5f8    24  tst x5, #0x1ffff
0xffff9140d5fc    28  b.eq #+0x8 (addr 0xffff9140d604)
0xffff9140d600    32  ret
0xffff9140d604    36  sub csp, jssp, #0x8 (8)
0xffff9140d608    40  str lr, [jssp, #-8]!
0xffff9140d60c    44  ldr x17, pc+1692 (addr 0x0000ffff9140dca8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140d610    48  blr x17
0xffff9140d614    52  ldr lr, [jssp], #8
0xffff9140d618    56  ret
0xffff9140d61c    60  ret
0xffff9140d620    64  sub csp, jssp, #0x10 (16)
0xffff9140d624    68  stp x3, x0, [jssp, #-16]!
0xffff9140d628    72  ldr x5, [x1]
0xffff9140d62c    76  and x16, x5, #0xfffffffffff00000
0xffff9140d630    80  ldr x16, [x16, #8]
0xffff9140d634    84  tst x16, #0x18
0xffff9140d638    88  b.eq #+0x1d4 (addr 0xffff9140d80c)
0xffff9140d63c    92  and x16, x2, #0xfffffffffff00000
0xffff9140d640    96  ldr x16, [x16, #8]
0xffff9140d644   100  tst x16, #0x18
0xffff9140d648   104  b.ne #+0x1c4 (addr 0xffff9140d80c)
0xffff9140d64c   108  and x5, x2, #0xfffffffffff00000
0xffff9140d650   112  ldr x0, [x5, #104]
0xffff9140d654   116  subs x0, x0, #0x1 (1)
0xffff9140d658   120  str x0, [x5, #104]
0xffff9140d65c   124  b.mi #+0xc4 (addr 0xffff9140d720)
0xffff9140d660   128  ubfx x16, x2, #8, #12
0xffff9140d664   132  and x5, x2, #0xfffffffffff00000
0xffff9140d668   136  add x5, x5, x16, lsl #2
0xffff9140d66c   140  ubfx x0, x2, #3, #5
0xffff9140d670   144  ldr x5, [x5, #360]
0xffff9140d674   148  lsr x5, x5, x0
0xffff9140d678   152  tbz w5, #0, #+0x8 (addr 0xffff9140d680)
0xffff9140d67c   156  tbnz w5, #1, #+0x3c (addr 0xffff9140d6b8)
0xffff9140d680   160  ldp x3, x0, [jssp], #16
0xffff9140d684   164  ldr x16, pc+1580 (addr 0x0000ffff9140dcb0)    ;; external reference (store_buffer_top)
0xffff9140d688   168  ldr x5, [x16]
0xffff9140d68c   172  str x1, [x5], #8
0xffff9140d690   176  str x5, [x16]
0xffff9140d694   180  tst x5, #0x1ffff
0xffff9140d698   184  b.eq #+0x8 (addr 0xffff9140d6a0)
0xffff9140d69c   188  ret
0xffff9140d6a0   192  sub csp, jssp, #0x8 (8)
0xffff9140d6a4   196  str lr, [jssp, #-8]!
0xffff9140d6a8   200  ldr x17, pc+1552 (addr 0x0000ffff9140dcb8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140d6ac   204  blr x17
0xffff9140d6b0   208  ldr lr, [jssp], #8
0xffff9140d6b4   212  ret
0xffff9140d6b8   216  ldr x5, [x1]
0xffff9140d6bc   220  sub csp, jssp, #0x10 (16)
0xffff9140d6c0   224  stp x2, x1, [jssp, #-16]!
0xffff9140d6c4   228  ubfx x16, x5, #8, #12
0xffff9140d6c8   232  and x0, x5, #0xfffffffffff00000
0xffff9140d6cc   236  add x0, x0, x16, lsl #2
0xffff9140d6d0   240  ubfx x2, x5, #3, #5
0xffff9140d6d4   244  ldr x1, [x0, #360]
0xffff9140d6d8   248  lsr x1, x1, x2
0xffff9140d6dc   252  tbz w1, #0, #+0x40 (addr 0xffff9140d71c)
0xffff9140d6e0   256  ldp x2, x1, [jssp], #16
0xffff9140d6e4   260  ldp x3, x0, [jssp], #16
0xffff9140d6e8   264  ldr x16, pc+1496 (addr 0x0000ffff9140dcc0)    ;; external reference (store_buffer_top)
0xffff9140d6ec   268  ldr x5, [x16]
0xffff9140d6f0   272  str x1, [x5], #8
0xffff9140d6f4   276  str x5, [x16]
0xffff9140d6f8   280  tst x5, #0x1ffff
0xffff9140d6fc   284  b.eq #+0x8 (addr 0xffff9140d704)
0xffff9140d700   288  ret
0xffff9140d704   292  sub csp, jssp, #0x8 (8)
0xffff9140d708   296  str lr, [jssp, #-8]!
0xffff9140d70c   300  ldr x17, pc+1468 (addr 0x0000ffff9140dcc8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140d710   304  blr x17
0xffff9140d714   308  ldr lr, [jssp], #8
0xffff9140d718   312  ret
0xffff9140d71c   316  ldp x2, x1, [jssp], #16
0xffff9140d720   320  sub csp, jssp, #0x78 (120)
0xffff9140d724   324  stp x14, x15, [jssp, #-32]!
0xffff9140d728   328  stp x18, lr, [jssp, #16]
0xffff9140d72c   332  stp x10, x11, [jssp, #-32]!
0xffff9140d730   336  stp x12, x13, [jssp, #16]
0xffff9140d734   340  stp x6, x7, [jssp, #-32]!
0xffff9140d738   344  stp x8, x9, [jssp, #16]
0xffff9140d73c   348  stp x1, x2, [jssp, #-24]!
0xffff9140d740   352  str x4, [jssp, #16]
0xffff9140d744   356  sub csp, jssp, #0xb0 (176)
0xffff9140d748   360  stp d26, d27, [jssp, #-32]!
0xffff9140d74c   364  stp d28, d29, [jssp, #16]
0xffff9140d750   368  stp d22, d23, [jssp, #-32]!
0xffff9140d754   372  stp d24, d25, [jssp, #16]
0xffff9140d758   376  stp d18, d19, [jssp, #-32]!
0xffff9140d75c   380  stp d20, d21, [jssp, #16]
0xffff9140d760   384  stp d6, d7, [jssp, #-32]!
0xffff9140d764   388  stp d16, d17, [jssp, #16]
0xffff9140d768   392  stp d2, d3, [jssp, #-32]!
0xffff9140d76c   396  stp d4, d5, [jssp, #16]
0xffff9140d770   400  stp d0, d1, [jssp, #-16]!
0xffff9140d774   404  mov x0, x2
0xffff9140d778   408  ldr x2, pc+1368 (addr 0x0000ffff9140dcd0)    ;; external reference (isolate)
0xffff9140d77c   412  ldr x16, pc+1372 (addr 0x0000ffff9140dcd8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140d780   416  and csp, jssp, #0xfffffffffffffff0
0xffff9140d784   420  blr x16
0xffff9140d788   424  ldp d2, d3, [jssp, #16]
0xffff9140d78c   428  ldp d0, d1, [jssp], #32
0xffff9140d790   432  ldp d6, d7, [jssp, #16]
0xffff9140d794   436  ldp d4, d5, [jssp], #32
0xffff9140d798   440  ldp d18, d19, [jssp, #16]
0xffff9140d79c   444  ldp d16, d17, [jssp], #32
0xffff9140d7a0   448  ldp d22, d23, [jssp, #16]
0xffff9140d7a4   452  ldp d20, d21, [jssp], #32
0xffff9140d7a8   456  ldp d26, d27, [jssp, #16]
0xffff9140d7ac   460  ldp d24, d25, [jssp], #32
0xffff9140d7b0   464  ldp d28, d29, [jssp], #16
0xffff9140d7b4   468  ldp x4, x6, [jssp, #16]
0xffff9140d7b8   472  ldp x1, x2, [jssp], #32
0xffff9140d7bc   476  ldp x9, x10, [jssp, #16]
0xffff9140d7c0   480  ldp x7, x8, [jssp], #32
0xffff9140d7c4   484  ldp x13, x14, [jssp, #16]
0xffff9140d7c8   488  ldp x11, x12, [jssp], #32
0xffff9140d7cc   492  ldr lr, [jssp, #16]
0xffff9140d7d0   496  ldp x15, x18, [jssp], #24
0xffff9140d7d4   500  ldp x3, x0, [jssp], #16
0xffff9140d7d8   504  ldr x16, pc+1288 (addr 0x0000ffff9140dce0)    ;; external reference (store_buffer_top)
0xffff9140d7dc   508  ldr x5, [x16]
0xffff9140d7e0   512  str x1, [x5], #8
0xffff9140d7e4   516  str x5, [x16]
0xffff9140d7e8   520  tst x5, #0x1ffff
0xffff9140d7ec   524  b.eq #+0x8 (addr 0xffff9140d7f4)
0xffff9140d7f0   528  ret
0xffff9140d7f4   532  sub csp, jssp, #0x8 (8)
0xffff9140d7f8   536  str lr, [jssp, #-8]!
0xffff9140d7fc   540  ldr x17, pc+1260 (addr 0x0000ffff9140dce8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140d800   544  blr x17
0xffff9140d804   548  ldr lr, [jssp], #8
0xffff9140d808   552  ret
0xffff9140d80c   556  and x5, x2, #0xfffffffffff00000
0xffff9140d810   560  ldr x0, [x5, #104]
0xffff9140d814   564  subs x0, x0, #0x1 (1)
0xffff9140d818   568  str x0, [x5, #104]
0xffff9140d81c   572  b.mi #+0x64 (addr 0xffff9140d880)
0xffff9140d820   576  ubfx x16, x2, #8, #12
0xffff9140d824   580  and x5, x2, #0xfffffffffff00000
0xffff9140d828   584  add x5, x5, x16, lsl #2
0xffff9140d82c   588  ubfx x0, x2, #3, #5
0xffff9140d830   592  ldr x5, [x5, #360]
0xffff9140d834   596  lsr x5, x5, x0
0xffff9140d838   600  tbz w5, #0, #+0x8 (addr 0xffff9140d840)
0xffff9140d83c   604  tbnz w5, #1, #+0xc (addr 0xffff9140d848)
0xffff9140d840   608  ldp x3, x0, [jssp], #16
0xffff9140d844   612  ret
0xffff9140d848   616  ldr x5, [x1]
0xffff9140d84c   620  sub csp, jssp, #0x10 (16)
0xffff9140d850   624  stp x2, x1, [jssp, #-16]!
0xffff9140d854   628  ubfx x16, x5, #8, #12
0xffff9140d858   632  and x0, x5, #0xfffffffffff00000
0xffff9140d85c   636  add x0, x0, x16, lsl #2
0xffff9140d860   640  ubfx x2, x5, #3, #5
0xffff9140d864   644  ldr x1, [x0, #360]
0xffff9140d868   648  lsr x1, x1, x2
0xffff9140d86c   652  tbz w1, #0, #+0x10 (addr 0xffff9140d87c)
0xffff9140d870   656  ldp x2, x1, [jssp], #16
0xffff9140d874   660  ldp x3, x0, [jssp], #16
0xffff9140d878   664  ret
0xffff9140d87c   668  ldp x2, x1, [jssp], #16
0xffff9140d880   672  sub csp, jssp, #0x78 (120)
0xffff9140d884   676  stp x14, x15, [jssp, #-32]!
0xffff9140d888   680  stp x18, lr, [jssp, #16]
0xffff9140d88c   684  stp x10, x11, [jssp, #-32]!
0xffff9140d890   688  stp x12, x13, [jssp, #16]
0xffff9140d894   692  stp x6, x7, [jssp, #-32]!
0xffff9140d898   696  stp x8, x9, [jssp, #16]
0xffff9140d89c   700  stp x1, x2, [jssp, #-24]!
0xffff9140d8a0   704  str x4, [jssp, #16]
0xffff9140d8a4   708  sub csp, jssp, #0xb0 (176)
0xffff9140d8a8   712  stp d26, d27, [jssp, #-32]!
0xffff9140d8ac   716  stp d28, d29, [jssp, #16]
0xffff9140d8b0   720  stp d22, d23, [jssp, #-32]!
0xffff9140d8b4   724  stp d24, d25, [jssp, #16]
0xffff9140d8b8   728  stp d18, d19, [jssp, #-32]!
0xffff9140d8bc   732  stp d20, d21, [jssp, #16]
0xffff9140d8c0   736  stp d6, d7, [jssp, #-32]!
0xffff9140d8c4   740  stp d16, d17, [jssp, #16]
0xffff9140d8c8   744  stp d2, d3, [jssp, #-32]!
0xffff9140d8cc   748  stp d4, d5, [jssp, #16]
0xffff9140d8d0   752  stp d0, d1, [jssp, #-16]!
0xffff9140d8d4   756  mov x0, x2
0xffff9140d8d8   760  ldr x2, pc+1048 (addr 0x0000ffff9140dcf0)    ;; external reference (isolate)
0xffff9140d8dc   764  ldr x16, pc+1052 (addr 0x0000ffff9140dcf8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140d8e0   768  and csp, jssp, #0xfffffffffffffff0
0xffff9140d8e4   772  blr x16
0xffff9140d8e8   776  ldp d2, d3, [jssp, #16]
0xffff9140d8ec   780  ldp d0, d1, [jssp], #32
0xffff9140d8f0   784  ldp d6, d7, [jssp, #16]
0xffff9140d8f4   788  ldp d4, d5, [jssp], #32
0xffff9140d8f8   792  ldp d18, d19, [jssp, #16]
0xffff9140d8fc   796  ldp d16, d17, [jssp], #32
0xffff9140d900   800  ldp d22, d23, [jssp, #16]
0xffff9140d904   804  ldp d20, d21, [jssp], #32
0xffff9140d908   808  ldp d26, d27, [jssp, #16]
0xffff9140d90c   812  ldp d24, d25, [jssp], #32
0xffff9140d910   816  ldp d28, d29, [jssp], #16
0xffff9140d914   820  ldp x4, x6, [jssp, #16]
0xffff9140d918   824  ldp x1, x2, [jssp], #32
0xffff9140d91c   828  ldp x9, x10, [jssp, #16]
0xffff9140d920   832  ldp x7, x8, [jssp], #32
0xffff9140d924   836  ldp x13, x14, [jssp, #16]
0xffff9140d928   840  ldp x11, x12, [jssp], #32
0xffff9140d92c   844  ldr lr, [jssp, #16]
0xffff9140d930   848  ldp x15, x18, [jssp], #24
0xffff9140d934   852  ldp x3, x0, [jssp], #16
0xffff9140d938   856  ret
0xffff9140d93c   860  sub csp, jssp, #0x10 (16)
0xffff9140d940   864  stp x3, x0, [jssp, #-16]!
0xffff9140d944   868  ldr x5, [x1]
0xffff9140d948   872  and x16, x5, #0xfffffffffff00000
0xffff9140d94c   876  ldr x16, [x16, #8]
0xffff9140d950   880  tst x16, #0x18
0xffff9140d954   884  b.eq #+0x1f4 (addr 0xffff9140db48)
0xffff9140d958   888  and x16, x2, #0xfffffffffff00000
0xffff9140d95c   892  ldr x16, [x16, #8]
0xffff9140d960   896  tst x16, #0x18
0xffff9140d964   900  b.ne #+0x1e4 (addr 0xffff9140db48)
0xffff9140d968   904  and x5, x2, #0xfffffffffff00000
0xffff9140d96c   908  ldr x0, [x5, #104]
0xffff9140d970   912  subs x0, x0, #0x1 (1)
0xffff9140d974   916  str x0, [x5, #104]
0xffff9140d978   920  b.mi #+0xe4 (addr 0xffff9140da5c)
0xffff9140d97c   924  ubfx x16, x2, #8, #12
0xffff9140d980   928  and x5, x2, #0xfffffffffff00000
0xffff9140d984   932  add x5, x5, x16, lsl #2
0xffff9140d988   936  ubfx x0, x2, #3, #5
0xffff9140d98c   940  ldr x5, [x5, #360]
0xffff9140d990   944  lsr x5, x5, x0
0xffff9140d994   948  tbz w5, #0, #+0x8 (addr 0xffff9140d99c)
0xffff9140d998   952  tbnz w5, #1, #+0x3c (addr 0xffff9140d9d4)
0xffff9140d99c   956  ldp x3, x0, [jssp], #16
0xffff9140d9a0   960  ldr x16, pc+864 (addr 0x0000ffff9140dd00)    ;; external reference (store_buffer_top)
0xffff9140d9a4   964  ldr x5, [x16]
0xffff9140d9a8   968  str x1, [x5], #8
0xffff9140d9ac   972  str x5, [x16]
0xffff9140d9b0   976  tst x5, #0x1ffff
0xffff9140d9b4   980  b.eq #+0x8 (addr 0xffff9140d9bc)
0xffff9140d9b8   984  ret
0xffff9140d9bc   988  sub csp, jssp, #0x8 (8)
0xffff9140d9c0   992  str lr, [jssp, #-8]!
0xffff9140d9c4   996  ldr x17, pc+836 (addr 0x0000ffff9140dd08)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140d9c8  1000  blr x17
0xffff9140d9cc  1004  ldr lr, [jssp], #8
0xffff9140d9d0  1008  ret
0xffff9140d9d4  1012  ldr x5, [x1]
0xffff9140d9d8  1016  and x0, x5, #0xfffffffffff00000
0xffff9140d9dc  1020  ldr x0, [x0, #8]
0xffff9140d9e0  1024  tbz w0, #6, #+0x18 (addr 0xffff9140d9f8)
0xffff9140d9e4  1028  and x0, x2, #0xfffffffffff00000
0xffff9140d9e8  1032  ldr x0, [x0, #8]
0xffff9140d9ec  1036  movz x16, #0x58
0xffff9140d9f0  1040  tst x0, x16
0xffff9140d9f4  1044  b.eq #+0x68 (addr 0xffff9140da5c)
0xffff9140d9f8  1048  sub csp, jssp, #0x10 (16)
0xffff9140d9fc  1052  stp x2, x1, [jssp, #-16]!
0xffff9140da00  1056  ubfx x16, x5, #8, #12
0xffff9140da04  1060  and x0, x5, #0xfffffffffff00000
0xffff9140da08  1064  add x0, x0, x16, lsl #2
0xffff9140da0c  1068  ubfx x2, x5, #3, #5
0xffff9140da10  1072  ldr x1, [x0, #360]
0xffff9140da14  1076  lsr x1, x1, x2
0xffff9140da18  1080  tbz w1, #0, #+0x40 (addr 0xffff9140da58)
0xffff9140da1c  1084  ldp x2, x1, [jssp], #16
0xffff9140da20  1088  ldp x3, x0, [jssp], #16
0xffff9140da24  1092  ldr x16, pc+748 (addr 0x0000ffff9140dd10)    ;; external reference (store_buffer_top)
0xffff9140da28  1096  ldr x5, [x16]
0xffff9140da2c  1100  str x1, [x5], #8
0xffff9140da30  1104  str x5, [x16]
0xffff9140da34  1108  tst x5, #0x1ffff
0xffff9140da38  1112  b.eq #+0x8 (addr 0xffff9140da40)
0xffff9140da3c  1116  ret
0xffff9140da40  1120  sub csp, jssp, #0x8 (8)
0xffff9140da44  1124  str lr, [jssp, #-8]!
0xffff9140da48  1128  ldr x17, pc+720 (addr 0x0000ffff9140dd18)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140da4c  1132  blr x17
0xffff9140da50  1136  ldr lr, [jssp], #8
0xffff9140da54  1140  ret
0xffff9140da58  1144  ldp x2, x1, [jssp], #16
0xffff9140da5c  1148  sub csp, jssp, #0x78 (120)
0xffff9140da60  1152  stp x14, x15, [jssp, #-32]!
0xffff9140da64  1156  stp x18, lr, [jssp, #16]
0xffff9140da68  1160  stp x10, x11, [jssp, #-32]!
0xffff9140da6c  1164  stp x12, x13, [jssp, #16]
0xffff9140da70  1168  stp x6, x7, [jssp, #-32]!
0xffff9140da74  1172  stp x8, x9, [jssp, #16]
0xffff9140da78  1176  stp x1, x2, [jssp, #-24]!
0xffff9140da7c  1180  str x4, [jssp, #16]
0xffff9140da80  1184  sub csp, jssp, #0xb0 (176)
0xffff9140da84  1188  stp d26, d27, [jssp, #-32]!
0xffff9140da88  1192  stp d28, d29, [jssp, #16]
0xffff9140da8c  1196  stp d22, d23, [jssp, #-32]!
0xffff9140da90  1200  stp d24, d25, [jssp, #16]
0xffff9140da94  1204  stp d18, d19, [jssp, #-32]!
0xffff9140da98  1208  stp d20, d21, [jssp, #16]
0xffff9140da9c  1212  stp d6, d7, [jssp, #-32]!
0xffff9140daa0  1216  stp d16, d17, [jssp, #16]
0xffff9140daa4  1220  stp d2, d3, [jssp, #-32]!
0xffff9140daa8  1224  stp d4, d5, [jssp, #16]
0xffff9140daac  1228  stp d0, d1, [jssp, #-16]!
0xffff9140dab0  1232  mov x0, x2
0xffff9140dab4  1236  ldr x2, pc+620 (addr 0x0000ffff9140dd20)    ;; external reference (isolate)
0xffff9140dab8  1240  ldr x16, pc+624 (addr 0x0000ffff9140dd28)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140dabc  1244  and csp, jssp, #0xfffffffffffffff0
0xffff9140dac0  1248  blr x16
0xffff9140dac4  1252  ldp d2, d3, [jssp, #16]
0xffff9140dac8  1256  ldp d0, d1, [jssp], #32
0xffff9140dacc  1260  ldp d6, d7, [jssp, #16]
0xffff9140dad0  1264  ldp d4, d5, [jssp], #32
0xffff9140dad4  1268  ldp d18, d19, [jssp, #16]
0xffff9140dad8  1272  ldp d16, d17, [jssp], #32
0xffff9140dadc  1276  ldp d22, d23, [jssp, #16]
0xffff9140dae0  1280  ldp d20, d21, [jssp], #32
0xffff9140dae4  1284  ldp d26, d27, [jssp, #16]
0xffff9140dae8  1288  ldp d24, d25, [jssp], #32
0xffff9140daec  1292  ldp d28, d29, [jssp], #16
0xffff9140daf0  1296  ldp x4, x6, [jssp, #16]
0xffff9140daf4  1300  ldp x1, x2, [jssp], #32
0xffff9140daf8  1304  ldp x9, x10, [jssp, #16]
0xffff9140dafc  1308  ldp x7, x8, [jssp], #32
0xffff9140db00  1312  ldp x13, x14, [jssp, #16]
0xffff9140db04  1316  ldp x11, x12, [jssp], #32
0xffff9140db08  1320  ldr lr, [jssp, #16]
0xffff9140db0c  1324  ldp x15, x18, [jssp], #24
0xffff9140db10  1328  ldp x3, x0, [jssp], #16
0xffff9140db14  1332  ldr x16, pc+540 (addr 0x0000ffff9140dd30)    ;; external reference (store_buffer_top)
0xffff9140db18  1336  ldr x5, [x16]
0xffff9140db1c  1340  str x1, [x5], #8
0xffff9140db20  1344  str x5, [x16]
0xffff9140db24  1348  tst x5, #0x1ffff
0xffff9140db28  1352  b.eq #+0x8 (addr 0xffff9140db30)
0xffff9140db2c  1356  ret
0xffff9140db30  1360  sub csp, jssp, #0x8 (8)
0xffff9140db34  1364  str lr, [jssp, #-8]!
0xffff9140db38  1368  ldr x17, pc+512 (addr 0x0000ffff9140dd38)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9140db3c  1372  blr x17
0xffff9140db40  1376  ldr lr, [jssp], #8
0xffff9140db44  1380  ret
0xffff9140db48  1384  and x5, x2, #0xfffffffffff00000
0xffff9140db4c  1388  ldr x0, [x5, #104]
0xffff9140db50  1392  subs x0, x0, #0x1 (1)
0xffff9140db54  1396  str x0, [x5, #104]
0xffff9140db58  1400  b.mi #+0x84 (addr 0xffff9140dbdc)
0xffff9140db5c  1404  ubfx x16, x2, #8, #12
0xffff9140db60  1408  and x5, x2, #0xfffffffffff00000
0xffff9140db64  1412  add x5, x5, x16, lsl #2
0xffff9140db68  1416  ubfx x0, x2, #3, #5
0xffff9140db6c  1420  ldr x5, [x5, #360]
0xffff9140db70  1424  lsr x5, x5, x0
0xffff9140db74  1428  tbz w5, #0, #+0x8 (addr 0xffff9140db7c)
0xffff9140db78  1432  tbnz w5, #1, #+0xc (addr 0xffff9140db84)
0xffff9140db7c  1436  ldp x3, x0, [jssp], #16
0xffff9140db80  1440  ret
0xffff9140db84  1444  ldr x5, [x1]
0xffff9140db88  1448  and x0, x5, #0xfffffffffff00000
0xffff9140db8c  1452  ldr x0, [x0, #8]
0xffff9140db90  1456  tbz w0, #6, #+0x18 (addr 0xffff9140dba8)
0xffff9140db94  1460  and x0, x2, #0xfffffffffff00000
0xffff9140db98  1464  ldr x0, [x0, #8]
0xffff9140db9c  1468  movz x16, #0x58
0xffff9140dba0  1472  tst x0, x16
0xffff9140dba4  1476  b.eq #+0x38 (addr 0xffff9140dbdc)
0xffff9140dba8  1480  sub csp, jssp, #0x10 (16)
0xffff9140dbac  1484  stp x2, x1, [jssp, #-16]!
0xffff9140dbb0  1488  ubfx x16, x5, #8, #12
0xffff9140dbb4  1492  and x0, x5, #0xfffffffffff00000
0xffff9140dbb8  1496  add x0, x0, x16, lsl #2
0xffff9140dbbc  1500  ubfx x2, x5, #3, #5
0xffff9140dbc0  1504  ldr x1, [x0, #360]
0xffff9140dbc4  1508  lsr x1, x1, x2
0xffff9140dbc8  1512  tbz w1, #0, #+0x10 (addr 0xffff9140dbd8)
0xffff9140dbcc  1516  ldp x2, x1, [jssp], #16
0xffff9140dbd0  1520  ldp x3, x0, [jssp], #16
0xffff9140dbd4  1524  ret
0xffff9140dbd8  1528  ldp x2, x1, [jssp], #16
0xffff9140dbdc  1532  sub csp, jssp, #0x78 (120)
0xffff9140dbe0  1536  stp x14, x15, [jssp, #-32]!
0xffff9140dbe4  1540  stp x18, lr, [jssp, #16]
0xffff9140dbe8  1544  stp x10, x11, [jssp, #-32]!
0xffff9140dbec  1548  stp x12, x13, [jssp, #16]
0xffff9140dbf0  1552  stp x6, x7, [jssp, #-32]!
0xffff9140dbf4  1556  stp x8, x9, [jssp, #16]
0xffff9140dbf8  1560  stp x1, x2, [jssp, #-24]!
0xffff9140dbfc  1564  str x4, [jssp, #16]
0xffff9140dc00  1568  sub csp, jssp, #0xb0 (176)
0xffff9140dc04  1572  stp d26, d27, [jssp, #-32]!
0xffff9140dc08  1576  stp d28, d29, [jssp, #16]
0xffff9140dc0c  1580  stp d22, d23, [jssp, #-32]!
0xffff9140dc10  1584  stp d24, d25, [jssp, #16]
0xffff9140dc14  1588  stp d18, d19, [jssp, #-32]!
0xffff9140dc18  1592  stp d20, d21, [jssp, #16]
0xffff9140dc1c  1596  stp d6, d7, [jssp, #-32]!
0xffff9140dc20  1600  stp d16, d17, [jssp, #16]
0xffff9140dc24  1604  stp d2, d3, [jssp, #-32]!
0xffff9140dc28  1608  stp d4, d5, [jssp, #16]
0xffff9140dc2c  1612  stp d0, d1, [jssp, #-16]!
0xffff9140dc30  1616  mov x0, x2
0xffff9140dc34  1620  ldr x2, pc+268 (addr 0x0000ffff9140dd40)    ;; external reference (isolate)
0xffff9140dc38  1624  ldr x16, pc+272 (addr 0x0000ffff9140dd48)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9140dc3c  1628  and csp, jssp, #0xfffffffffffffff0
0xffff9140dc40  1632  blr x16
0xffff9140dc44  1636  ldp d2, d3, [jssp, #16]
0xffff9140dc48  1640  ldp d0, d1, [jssp], #32
0xffff9140dc4c  1644  ldp d6, d7, [jssp, #16]
0xffff9140dc50  1648  ldp d4, d5, [jssp], #32
0xffff9140dc54  1652  ldp d18, d19, [jssp, #16]
0xffff9140dc58  1656  ldp d16, d17, [jssp], #32
0xffff9140dc5c  1660  ldp d22, d23, [jssp, #16]
0xffff9140dc60  1664  ldp d20, d21, [jssp], #32
0xffff9140dc64  1668  ldp d26, d27, [jssp, #16]
0xffff9140dc68  1672  ldp d24, d25, [jssp], #32
0xffff9140dc6c  1676  ldp d28, d29, [jssp], #16
0xffff9140dc70  1680  ldp x4, x6, [jssp, #16]
0xffff9140dc74  1684  ldp x1, x2, [jssp], #32
0xffff9140dc78  1688  ldp x9, x10, [jssp, #16]
0xffff9140dc7c  1692  ldp x7, x8, [jssp], #32
0xffff9140dc80  1696  ldp x13, x14, [jssp, #16]
0xffff9140dc84  1700  ldp x11, x12, [jssp], #32
0xffff9140dc88  1704  ldr lr, [jssp, #16]
0xffff9140dc8c  1708  ldp x15, x18, [jssp], #24
0xffff9140dc90  1712  ldp x3, x0, [jssp], #16
0xffff9140dc94  1716  ret
0xffff9140dc98  1720  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9140dc9c  1724  d63f03e0       constant
0xffff9140dca0  1728  4117f8c0       constant
0xffff9140dca4  1732  00000000       constant
0xffff9140dca8  1736  914065a0       constant
0xffff9140dcac  1740  0000ffff       constant
0xffff9140dcb0  1744  4117f8c0       constant
0xffff9140dcb4  1748  00000000       constant
0xffff9140dcb8  1752  914065a0       constant
0xffff9140dcbc  1756  0000ffff       constant
0xffff9140dcc0  1760  4117f8c0       constant
0xffff9140dcc4  1764  00000000       constant
0xffff9140dcc8  1768  914065a0       constant
0xffff9140dccc  1772  0000ffff       constant
0xffff9140dcd0  1776  4117e2d0       constant
0xffff9140dcd4  1780  00000000       constant
0xffff9140dcd8  1784  00c2d958       constant
0xffff9140dcdc  1788  00000000       constant
0xffff9140dce0  1792  4117f8c0       constant
0xffff9140dce4  1796  00000000       constant
0xffff9140dce8  1800  914065a0       constant
0xffff9140dcec  1804  0000ffff       constant
0xffff9140dcf0  1808  4117e2d0       constant
0xffff9140dcf4  1812  00000000       constant
0xffff9140dcf8  1816  00c2d958       constant
0xffff9140dcfc  1820  00000000       constant
0xffff9140dd00  1824  4117f8c0       constant
0xffff9140dd04  1828  00000000       constant
0xffff9140dd08  1832  914065a0       constant
0xffff9140dd0c  1836  0000ffff       constant
0xffff9140dd10  1840  4117f8c0       constant
0xffff9140dd14  1844  00000000       constant
0xffff9140dd18  1848  914065a0       constant
0xffff9140dd1c  1852  0000ffff       constant
0xffff9140dd20  1856  4117e2d0       constant
0xffff9140dd24  1860  00000000       constant
0xffff9140dd28  1864  00c2d958       constant
0xffff9140dd2c  1868  00000000       constant
0xffff9140dd30  1872  4117f8c0       constant
0xffff9140dd34  1876  00000000       constant
0xffff9140dd38  1880  914065a0       constant
0xffff9140dd3c  1884  0000ffff       constant
0xffff9140dd40  1888  4117e2d0       constant
0xffff9140dd44  1892  00000000       constant
0xffff9140dd48  1896  00c2d958       constant
0xffff9140dd4c  1900  00000000       constant


RelocInfo (size = 65)
0xffff9140d5e8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140d60c  code target (STUB)  (0xffff914065a0)
0xffff9140d684  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140d6a8  code target (STUB)  (0xffff914065a0)
0xffff9140d6e8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140d70c  code target (STUB)  (0xffff914065a0)
0xffff9140d778  external reference (isolate)  (0x4117e2d0)
0xffff9140d77c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140d7d8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140d7fc  code target (STUB)  (0xffff914065a0)
0xffff9140d8d8  external reference (isolate)  (0x4117e2d0)
0xffff9140d8dc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140d9a0  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140d9c4  code target (STUB)  (0xffff914065a0)
0xffff9140da24  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140da48  code target (STUB)  (0xffff914065a0)
0xffff9140dab4  external reference (isolate)  (0x4117e2d0)
0xffff9140dab8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140db14  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9140db38  code target (STUB)  (0xffff914065a0)
0xffff9140dc34  external reference (isolate)  (0x4117e2d0)
0xffff9140dc38  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9140dc98  constant pool (size 184)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = CreateWeakCellStub
compiler = crankshaft
Instructions (size = 357)
0xffff9140ddc0     0  movz x4, #0xd840
0xffff9140ddc4     4  movk x4, #0x411a, lsl #16
0xffff9140ddc8     8  ldp x5, x0, [x4]
0xffff9140ddcc    12  adds x16, x5, #0x18 (24)
0xffff9140ddd0    16  ccmp x16, x0, #nzCv, lo
0xffff9140ddd4    20  b.hi #+0x98 (addr 0xffff9140de6c)
0xffff9140ddd8    24  str x16, [x4]
0xffff9140dddc    28  orr x5, x5, #0x1
0xffff9140dde0    32  ldr x0, pc+248 (addr 0x0000ffff9140ded8)    ;; object: 0x364058b1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9140dde4    36  stur x0, [x5, #-1]
0xffff9140dde8    40  stur x1, [x5, #7]
0xffff9140ddec    44  tbz w1, #0, #+0x34 (addr 0xffff9140de20)
0xffff9140ddf0    48  add x0, x5, #0x7 (7)
0xffff9140ddf4    52  and x1, x1, #0xfffffffffff00000
0xffff9140ddf8    56  ldr x1, [x1, #8]
0xffff9140ddfc    60  tbz w1, #1, #+0x24 (addr 0xffff9140de20)
0xffff9140de00    64  and x1, x5, #0xfffffffffff00000
0xffff9140de04    68  ldr x1, [x1, #8]
0xffff9140de08    72  tbz w1, #2, #+0x18 (addr 0xffff9140de20)
0xffff9140de0c    76  sub csp, jssp, #0x8 (8)
0xffff9140de10    80  str lr, [jssp, #-8]!
0xffff9140de14    84  ldr x16, pc+204 (addr 0x0000ffff9140dee0)    ;; code: STUB, RecordWriteStub, minor: 65573
0xffff9140de18    88  blr x16
0xffff9140de1c    92  ldr lr, [jssp], #8
0xffff9140de20    96  ldr x0, pc+200 (addr 0x0000ffff9140dee8)    ;; object: 0x49b04519 <the hole>
0xffff9140de24   100  stur x0, [x5, #15]
0xffff9140de28   104  asr x0, x3, #32
0xffff9140de2c   108  add x1, x2, #0xf (15)
0xffff9140de30   112  str x5, [x1, w0, sxtw #3]
0xffff9140de34   116  add x1, x1, w0, sxtw #3
0xffff9140de38   120  and x5, x5, #0xfffffffffff00000
0xffff9140de3c   124  ldr x5, [x5, #8]
0xffff9140de40   128  tbz w5, #1, #+0x24 (addr 0xffff9140de64)
0xffff9140de44   132  and x5, x2, #0xfffffffffff00000
0xffff9140de48   136  ldr x5, [x5, #8]
0xffff9140de4c   140  tbz w5, #2, #+0x18 (addr 0xffff9140de64)
0xffff9140de50   144  sub csp, jssp, #0x8 (8)
0xffff9140de54   148  str lr, [jssp, #-8]!
0xffff9140de58   152  ldr x16, pc+152 (addr 0x0000ffff9140def0)    ;; code: STUB, RecordWriteStub, minor: 66722
0xffff9140de5c   156  blr x16
0xffff9140de60   160  ldr lr, [jssp], #8
0xffff9140de64   164  movz x0, #0x0
0xffff9140de68   168  ret
0xffff9140de6c   172  sub csp, jssp, #0x10 (16)
0xffff9140de70   176  stp fp, lr, [jssp, #-16]!
0xffff9140de74   180  movz fp, #0xa00000000
0xffff9140de78   184  sub csp, jssp, #0x8 (8)
0xffff9140de7c   188  str fp, [jssp, #-8]!
0xffff9140de80   192  add fp, jssp, #0x8 (8)
0xffff9140de84   196  movz x5, #0x0
0xffff9140de88   200  mov x16, lr
0xffff9140de8c   204  ldr x17, pc+108 (addr 0x0000ffff9140def8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140de90   208  blr x17
0xffff9140de94   212  movz x0, #0x1800000000
0xffff9140de98   216  movz x10, #0x200000000
0xffff9140de9c   220  sub csp, jssp, #0x10 (16)
0xffff9140dea0   224  stp x10, x0, [jssp, #-16]!
0xffff9140dea4   228  movz x0, #0x2
0xffff9140dea8   232  movz x1, #0x5b88
0xffff9140deac   236  movk x1, #0xe2, lsl #16
0xffff9140deb0   240  ldr x16, pc+80 (addr 0x0000ffff9140df00)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140deb4   244  blr x16
0xffff9140deb8   248  str x0, [jssp, #40]
0xffff9140debc   252  ldr x16, pc+76 (addr 0x0000ffff9140df08)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140dec0   256  blr x16
0xffff9140dec4   260  ldr lr, [jssp, #16]
0xffff9140dec8   264  ldp xzr, fp, [jssp], #24
0xffff9140decc   268  b #-0xec (addr 0xffff9140dde0)
0xffff9140ded0   272  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff9140ded4   276  d63f03e0       constant
0xffff9140ded8   280  364058b1       constant
0xffff9140dedc   284  00000000       constant
0xffff9140dee0   288  9140ce00       constant
0xffff9140dee4   292  0000ffff       constant
0xffff9140dee8   296  49b04519       constant
0xffff9140deec   300  00000000       constant
0xffff9140def0   304  9140d5e0       constant
0xffff9140def4   308  0000ffff       constant
0xffff9140def8   312  91406820       constant
0xffff9140defc   316  0000ffff       constant
0xffff9140df00   320  91406260       constant
0xffff9140df04   324  0000ffff       constant
0xffff9140df08   328  914068e0       constant
0xffff9140df0c   332  0000ffff       constant


Safepoints (size = 21)
0xffff9140deb8   248  000 | x1 | x2 | x5 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 13)
0xffff9140dde0  embedded object  (0x364058b1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140de14  code target (STUB)  (0xffff9140ce00)
0xffff9140de20  embedded object  (0x49b04519 <the hole>)
0xffff9140de58  code target (STUB)  (0xffff9140d5e0)
0xffff9140de8c  code target (STUB)  (0xffff91406820)
0xffff9140deb0  code target (STUB)  (0xffff91406260)
0xffff9140debc  code target (STUB)  (0xffff914068e0)
0xffff9140ded0  constant pool (size 64)

--- End code ---
kind = STUB
major_key = CreateWeakCellStub
name = CreateWeakCellStub
compiler = crankshaft
Instructions (size = 357)
0xffff9140ddc0     0  movz x4, #0xd840
0xffff9140ddc4     4  movk x4, #0x411a, lsl #16
0xffff9140ddc8     8  ldp x5, x0, [x4]
0xffff9140ddcc    12  adds x16, x5, #0x18 (24)
0xffff9140ddd0    16  ccmp x16, x0, #nzCv, lo
0xffff9140ddd4    20  b.hi #+0x98 (addr 0xffff9140de6c)
0xffff9140ddd8    24  str x16, [x4]
0xffff9140dddc    28  orr x5, x5, #0x1
0xffff9140dde0    32  ldr x0, pc+248 (addr 0x0000ffff9140ded8)    ;; object: 0x364058b1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9140dde4    36  stur x0, [x5, #-1]
0xffff9140dde8    40  stur x1, [x5, #7]
0xffff9140ddec    44  tbz w1, #0, #+0x34 (addr 0xffff9140de20)
0xffff9140ddf0    48  add x0, x5, #0x7 (7)
0xffff9140ddf4    52  and x1, x1, #0xfffffffffff00000
0xffff9140ddf8    56  ldr x1, [x1, #8]
0xffff9140ddfc    60  tbz w1, #1, #+0x24 (addr 0xffff9140de20)
0xffff9140de00    64  and x1, x5, #0xfffffffffff00000
0xffff9140de04    68  ldr x1, [x1, #8]
0xffff9140de08    72  tbz w1, #2, #+0x18 (addr 0xffff9140de20)
0xffff9140de0c    76  sub csp, jssp, #0x8 (8)
0xffff9140de10    80  str lr, [jssp, #-8]!
0xffff9140de14    84  ldr x16, pc+204 (addr 0x0000ffff9140dee0)    ;; code: STUB, RecordWriteStub, minor: 65573
0xffff9140de18    88  blr x16
0xffff9140de1c    92  ldr lr, [jssp], #8
0xffff9140de20    96  ldr x0, pc+200 (addr 0x0000ffff9140dee8)    ;; object: 0x49b04519 <the hole>
0xffff9140de24   100  stur x0, [x5, #15]
0xffff9140de28   104  asr x0, x3, #32
0xffff9140de2c   108  add x1, x2, #0xf (15)
0xffff9140de30   112  str x5, [x1, w0, sxtw #3]
0xffff9140de34   116  add x1, x1, w0, sxtw #3
0xffff9140de38   120  and x5, x5, #0xfffffffffff00000
0xffff9140de3c   124  ldr x5, [x5, #8]
0xffff9140de40   128  tbz w5, #1, #+0x24 (addr 0xffff9140de64)
0xffff9140de44   132  and x5, x2, #0xfffffffffff00000
0xffff9140de48   136  ldr x5, [x5, #8]
0xffff9140de4c   140  tbz w5, #2, #+0x18 (addr 0xffff9140de64)
0xffff9140de50   144  sub csp, jssp, #0x8 (8)
0xffff9140de54   148  str lr, [jssp, #-8]!
0xffff9140de58   152  ldr x16, pc+152 (addr 0x0000ffff9140def0)    ;; code: STUB, RecordWriteStub, minor: 66722
0xffff9140de5c   156  blr x16
0xffff9140de60   160  ldr lr, [jssp], #8
0xffff9140de64   164  movz x0, #0x0
0xffff9140de68   168  ret
0xffff9140de6c   172  sub csp, jssp, #0x10 (16)
0xffff9140de70   176  stp fp, lr, [jssp, #-16]!
0xffff9140de74   180  movz fp, #0xa00000000
0xffff9140de78   184  sub csp, jssp, #0x8 (8)
0xffff9140de7c   188  str fp, [jssp, #-8]!
0xffff9140de80   192  add fp, jssp, #0x8 (8)
0xffff9140de84   196  movz x5, #0x0
0xffff9140de88   200  mov x16, lr
0xffff9140de8c   204  ldr x17, pc+108 (addr 0x0000ffff9140def8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140de90   208  blr x17
0xffff9140de94   212  movz x0, #0x1800000000
0xffff9140de98   216  movz x10, #0x200000000
0xffff9140de9c   220  sub csp, jssp, #0x10 (16)
0xffff9140dea0   224  stp x10, x0, [jssp, #-16]!
0xffff9140dea4   228  movz x0, #0x2
0xffff9140dea8   232  movz x1, #0x5b88
0xffff9140deac   236  movk x1, #0xe2, lsl #16
0xffff9140deb0   240  ldr x16, pc+80 (addr 0x0000ffff9140df00)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140deb4   244  blr x16
0xffff9140deb8   248  str x0, [jssp, #40]
0xffff9140debc   252  ldr x16, pc+76 (addr 0x0000ffff9140df08)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140dec0   256  blr x16
0xffff9140dec4   260  ldr lr, [jssp, #16]
0xffff9140dec8   264  ldp xzr, fp, [jssp], #24
0xffff9140decc   268  b #-0xec (addr 0xffff9140dde0)
0xffff9140ded0   272  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff9140ded4   276  d63f03e0       constant
0xffff9140ded8   280  364058b1       constant
0xffff9140dedc   284  00000000       constant
0xffff9140dee0   288  9140ce00       constant
0xffff9140dee4   292  0000ffff       constant
0xffff9140dee8   296  49b04519       constant
0xffff9140deec   300  00000000       constant
0xffff9140def0   304  9140d5e0       constant
0xffff9140def4   308  0000ffff       constant
0xffff9140def8   312  91406820       constant
0xffff9140defc   316  0000ffff       constant
0xffff9140df00   320  91406260       constant
0xffff9140df04   324  0000ffff       constant
0xffff9140df08   328  914068e0       constant
0xffff9140df0c   332  0000ffff       constant


Safepoints (size = 21)
0xffff9140deb8   248  000 | x1 | x2 | x5 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 13)
0xffff9140dde0  embedded object  (0x364058b1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9140de14  code target (STUB)  (0xffff9140ce00)
0xffff9140de20  embedded object  (0x49b04519 <the hole>)
0xffff9140de58  code target (STUB)  (0xffff9140d5e0)
0xffff9140de8c  code target (STUB)  (0xffff91406820)
0xffff9140deb0  code target (STUB)  (0xffff91406260)
0xffff9140debc  code target (STUB)  (0xffff914068e0)
0xffff9140ded0  constant pool (size 64)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
name = BinaryOpICStub(BIT_OR:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff9140dfa0     0  movz x16, #0xc00000000
0xffff9140dfa4     4  sub csp, jssp, #0x10 (16)
0xffff9140dfa8     8  stp fp, lr, [jssp, #-16]!
0xffff9140dfac    12  sub csp, jssp, #0x10 (16)
0xffff9140dfb0    16  str x16, [jssp, #-8]!
0xffff9140dfb4    20  ldr x17, pc+60 (addr 0x0000ffff9140dff0)    ;; object: 0xffff9140df41 <Code: BINARY_OP_IC>
0xffff9140dfb8    24  sub csp, jssp, #0x10 (16)
0xffff9140dfbc    28  str x17, [jssp, #-8]!
0xffff9140dfc0    32  add fp, jssp, #0x10 (16)
0xffff9140dfc4    36  sub csp, jssp, #0x10 (16)
0xffff9140dfc8    40  stp x0, x1, [jssp, #-16]!
0xffff9140dfcc    44  movz x0, #0x2
0xffff9140dfd0    48  ldr x1, pc+40 (addr 0x0000ffff9140dff8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff9140dfd4    52  ldr x16, pc+44 (addr 0x0000ffff9140e000)    ;; code: STUB, CEntryStub, minor: 4
0xffff9140dfd8    56  blr x16
0xffff9140dfdc    60  mov jssp, fp
0xffff9140dfe0    64  ldp fp, lr, [jssp], #16
0xffff9140dfe4    68  ret
0xffff9140dfe8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140dfec    76  d63f03e0       constant
0xffff9140dff0    80  9140df41       constant
0xffff9140dff4    84  0000ffff       constant
0xffff9140dff8    88  00c8e1b8       constant
0xffff9140dffc    92  00000000       constant
0xffff9140e000    96  91406060       constant
0xffff9140e004   100  0000ffff       constant


RelocInfo (size = 10)
0xffff9140dfb4  embedded object  (0xffff9140df41 <Code: BINARY_OP_IC>)
0xffff9140dfd0  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff9140dfd4  code target (STUB)  (0xffff91406060)
0xffff9140dfe8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 1
name = BinaryOpICStub(BIT_XOR:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff9140e080     0  movz x16, #0xc00000000
0xffff9140e084     4  sub csp, jssp, #0x10 (16)
0xffff9140e088     8  stp fp, lr, [jssp, #-16]!
0xffff9140e08c    12  sub csp, jssp, #0x10 (16)
0xffff9140e090    16  str x16, [jssp, #-8]!
0xffff9140e094    20  ldr x17, pc+60 (addr 0x0000ffff9140e0d0)    ;; object: 0xffff9140e021 <Code: BINARY_OP_IC>
0xffff9140e098    24  sub csp, jssp, #0x10 (16)
0xffff9140e09c    28  str x17, [jssp, #-8]!
0xffff9140e0a0    32  add fp, jssp, #0x10 (16)
0xffff9140e0a4    36  sub csp, jssp, #0x10 (16)
0xffff9140e0a8    40  stp x0, x1, [jssp, #-16]!
0xffff9140e0ac    44  movz x0, #0x2
0xffff9140e0b0    48  ldr x1, pc+40 (addr 0x0000ffff9140e0d8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff9140e0b4    52  ldr x16, pc+44 (addr 0x0000ffff9140e0e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9140e0b8    56  blr x16
0xffff9140e0bc    60  mov jssp, fp
0xffff9140e0c0    64  ldp fp, lr, [jssp], #16
0xffff9140e0c4    68  ret
0xffff9140e0c8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140e0cc    76  d63f03e0       constant
0xffff9140e0d0    80  9140e021       constant
0xffff9140e0d4    84  0000ffff       constant
0xffff9140e0d8    88  00c8e1b8       constant
0xffff9140e0dc    92  00000000       constant
0xffff9140e0e0    96  91406060       constant
0xffff9140e0e4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff9140e094  embedded object  (0xffff9140e021 <Code: BINARY_OP_IC>)
0xffff9140e0b0  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff9140e0b4  code target (STUB)  (0xffff91406060)
0xffff9140e0c8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 2
name = BinaryOpICStub(BIT_AND:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff9140e160     0  movz x16, #0xc00000000
0xffff9140e164     4  sub csp, jssp, #0x10 (16)
0xffff9140e168     8  stp fp, lr, [jssp, #-16]!
0xffff9140e16c    12  sub csp, jssp, #0x10 (16)
0xffff9140e170    16  str x16, [jssp, #-8]!
0xffff9140e174    20  ldr x17, pc+60 (addr 0x0000ffff9140e1b0)    ;; object: 0xffff9140e101 <Code: BINARY_OP_IC>
0xffff9140e178    24  sub csp, jssp, #0x10 (16)
0xffff9140e17c    28  str x17, [jssp, #-8]!
0xffff9140e180    32  add fp, jssp, #0x10 (16)
0xffff9140e184    36  sub csp, jssp, #0x10 (16)
0xffff9140e188    40  stp x0, x1, [jssp, #-16]!
0xffff9140e18c    44  movz x0, #0x2
0xffff9140e190    48  ldr x1, pc+40 (addr 0x0000ffff9140e1b8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff9140e194    52  ldr x16, pc+44 (addr 0x0000ffff9140e1c0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9140e198    56  blr x16
0xffff9140e19c    60  mov jssp, fp
0xffff9140e1a0    64  ldp fp, lr, [jssp], #16
0xffff9140e1a4    68  ret
0xffff9140e1a8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140e1ac    76  d63f03e0       constant
0xffff9140e1b0    80  9140e101       constant
0xffff9140e1b4    84  0000ffff       constant
0xffff9140e1b8    88  00c8e1b8       constant
0xffff9140e1bc    92  00000000       constant
0xffff9140e1c0    96  91406060       constant
0xffff9140e1c4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff9140e174  embedded object  (0xffff9140e101 <Code: BINARY_OP_IC>)
0xffff9140e190  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff9140e194  code target (STUB)  (0xffff91406060)
0xffff9140e1a8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 3
name = BinaryOpICStub(SHL:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff9140e240     0  movz x16, #0xc00000000
0xffff9140e244     4  sub csp, jssp, #0x10 (16)
0xffff9140e248     8  stp fp, lr, [jssp, #-16]!
0xffff9140e24c    12  sub csp, jssp, #0x10 (16)
0xffff9140e250    16  str x16, [jssp, #-8]!
0xffff9140e254    20  ldr x17, pc+60 (addr 0x0000ffff9140e290)    ;; object: 0xffff9140e1e1 <Code: BINARY_OP_IC>
0xffff9140e258    24  sub csp, jssp, #0x10 (16)
0xffff9140e25c    28  str x17, [jssp, #-8]!
0xffff9140e260    32  add fp, jssp, #0x10 (16)
0xffff9140e264    36  sub csp, jssp, #0x10 (16)
0xffff9140e268    40  stp x0, x1, [jssp, #-16]!
0xffff9140e26c    44  movz x0, #0x2
0xffff9140e270    48  ldr x1, pc+40 (addr 0x0000ffff9140e298)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff9140e274    52  ldr x16, pc+44 (addr 0x0000ffff9140e2a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9140e278    56  blr x16
0xffff9140e27c    60  mov jssp, fp
0xffff9140e280    64  ldp fp, lr, [jssp], #16
0xffff9140e284    68  ret
0xffff9140e288    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140e28c    76  d63f03e0       constant
0xffff9140e290    80  9140e1e1       constant
0xffff9140e294    84  0000ffff       constant
0xffff9140e298    88  00c8e1b8       constant
0xffff9140e29c    92  00000000       constant
0xffff9140e2a0    96  91406060       constant
0xffff9140e2a4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff9140e254  embedded object  (0xffff9140e1e1 <Code: BINARY_OP_IC>)
0xffff9140e270  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff9140e274  code target (STUB)  (0xffff91406060)
0xffff9140e288  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 4
name = BinaryOpICStub(SAR:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff9140e320     0  movz x16, #0xc00000000
0xffff9140e324     4  sub csp, jssp, #0x10 (16)
0xffff9140e328     8  stp fp, lr, [jssp, #-16]!
0xffff9140e32c    12  sub csp, jssp, #0x10 (16)
0xffff9140e330    16  str x16, [jssp, #-8]!
0xffff9140e334    20  ldr x17, pc+60 (addr 0x0000ffff9140e370)    ;; object: 0xffff9140e2c1 <Code: BINARY_OP_IC>
0xffff9140e338    24  sub csp, jssp, #0x10 (16)
0xffff9140e33c    28  str x17, [jssp, #-8]!
0xffff9140e340    32  add fp, jssp, #0x10 (16)
0xffff9140e344    36  sub csp, jssp, #0x10 (16)
0xffff9140e348    40  stp x0, x1, [jssp, #-16]!
0xffff9140e34c    44  movz x0, #0x2
0xffff9140e350    48  ldr x1, pc+40 (addr 0x0000ffff9140e378)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff9140e354    52  ldr x16, pc+44 (addr 0x0000ffff9140e380)    ;; code: STUB, CEntryStub, minor: 4
0xffff9140e358    56  blr x16
0xffff9140e35c    60  mov jssp, fp
0xffff9140e360    64  ldp fp, lr, [jssp], #16
0xffff9140e364    68  ret
0xffff9140e368    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140e36c    76  d63f03e0       constant
0xffff9140e370    80  9140e2c1       constant
0xffff9140e374    84  0000ffff       constant
0xffff9140e378    88  00c8e1b8       constant
0xffff9140e37c    92  00000000       constant
0xffff9140e380    96  91406060       constant
0xffff9140e384   100  0000ffff       constant


RelocInfo (size = 10)
0xffff9140e334  embedded object  (0xffff9140e2c1 <Code: BINARY_OP_IC>)
0xffff9140e350  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff9140e354  code target (STUB)  (0xffff91406060)
0xffff9140e368  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 5
name = BinaryOpICStub(SHR:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff9140e400     0  movz x16, #0xc00000000
0xffff9140e404     4  sub csp, jssp, #0x10 (16)
0xffff9140e408     8  stp fp, lr, [jssp, #-16]!
0xffff9140e40c    12  sub csp, jssp, #0x10 (16)
0xffff9140e410    16  str x16, [jssp, #-8]!
0xffff9140e414    20  ldr x17, pc+60 (addr 0x0000ffff9140e450)    ;; object: 0xffff9140e3a1 <Code: BINARY_OP_IC>
0xffff9140e418    24  sub csp, jssp, #0x10 (16)
0xffff9140e41c    28  str x17, [jssp, #-8]!
0xffff9140e420    32  add fp, jssp, #0x10 (16)
0xffff9140e424    36  sub csp, jssp, #0x10 (16)
0xffff9140e428    40  stp x0, x1, [jssp, #-16]!
0xffff9140e42c    44  movz x0, #0x2
0xffff9140e430    48  ldr x1, pc+40 (addr 0x0000ffff9140e458)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff9140e434    52  ldr x16, pc+44 (addr 0x0000ffff9140e460)    ;; code: STUB, CEntryStub, minor: 4
0xffff9140e438    56  blr x16
0xffff9140e43c    60  mov jssp, fp
0xffff9140e440    64  ldp fp, lr, [jssp], #16
0xffff9140e444    68  ret
0xffff9140e448    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140e44c    76  d63f03e0       constant
0xffff9140e450    80  9140e3a1       constant
0xffff9140e454    84  0000ffff       constant
0xffff9140e458    88  00c8e1b8       constant
0xffff9140e45c    92  00000000       constant
0xffff9140e460    96  91406060       constant
0xffff9140e464   100  0000ffff       constant


RelocInfo (size = 10)
0xffff9140e414  embedded object  (0xffff9140e3a1 <Code: BINARY_OP_IC>)
0xffff9140e430  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff9140e434  code target (STUB)  (0xffff91406060)
0xffff9140e448  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 6
name = BinaryOpICStub(ROR:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff9140e4e0     0  movz x16, #0xc00000000
0xffff9140e4e4     4  sub csp, jssp, #0x10 (16)
0xffff9140e4e8     8  stp fp, lr, [jssp, #-16]!
0xffff9140e4ec    12  sub csp, jssp, #0x10 (16)
0xffff9140e4f0    16  str x16, [jssp, #-8]!
0xffff9140e4f4    20  ldr x17, pc+60 (addr 0x0000ffff9140e530)    ;; object: 0xffff9140e481 <Code: BINARY_OP_IC>
0xffff9140e4f8    24  sub csp, jssp, #0x10 (16)
0xffff9140e4fc    28  str x17, [jssp, #-8]!
0xffff9140e500    32  add fp, jssp, #0x10 (16)
0xffff9140e504    36  sub csp, jssp, #0x10 (16)
0xffff9140e508    40  stp x0, x1, [jssp, #-16]!
0xffff9140e50c    44  movz x0, #0x2
0xffff9140e510    48  ldr x1, pc+40 (addr 0x0000ffff9140e538)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff9140e514    52  ldr x16, pc+44 (addr 0x0000ffff9140e540)    ;; code: STUB, CEntryStub, minor: 4
0xffff9140e518    56  blr x16
0xffff9140e51c    60  mov jssp, fp
0xffff9140e520    64  ldp fp, lr, [jssp], #16
0xffff9140e524    68  ret
0xffff9140e528    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140e52c    76  d63f03e0       constant
0xffff9140e530    80  9140e481       constant
0xffff9140e534    84  0000ffff       constant
0xffff9140e538    88  00c8e1b8       constant
0xffff9140e53c    92  00000000       constant
0xffff9140e540    96  91406060       constant
0xffff9140e544   100  0000ffff       constant


RelocInfo (size = 10)
0xffff9140e4f4  embedded object  (0xffff9140e481 <Code: BINARY_OP_IC>)
0xffff9140e510  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff9140e514  code target (STUB)  (0xffff91406060)
0xffff9140e528  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 7
name = BinaryOpICStub(ADD:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff9140e5c0     0  movz x16, #0xc00000000
0xffff9140e5c4     4  sub csp, jssp, #0x10 (16)
0xffff9140e5c8     8  stp fp, lr, [jssp, #-16]!
0xffff9140e5cc    12  sub csp, jssp, #0x10 (16)
0xffff9140e5d0    16  str x16, [jssp, #-8]!
0xffff9140e5d4    20  ldr x17, pc+60 (addr 0x0000ffff9140e610)    ;; object: 0xffff9140e561 <Code: BINARY_OP_IC>
0xffff9140e5d8    24  sub csp, jssp, #0x10 (16)
0xffff9140e5dc    28  str x17, [jssp, #-8]!
0xffff9140e5e0    32  add fp, jssp, #0x10 (16)
0xffff9140e5e4    36  sub csp, jssp, #0x10 (16)
0xffff9140e5e8    40  stp x0, x1, [jssp, #-16]!
0xffff9140e5ec    44  movz x0, #0x2
0xffff9140e5f0    48  ldr x1, pc+40 (addr 0x0000ffff9140e618)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff9140e5f4    52  ldr x16, pc+44 (addr 0x0000ffff9140e620)    ;; code: STUB, CEntryStub, minor: 4
0xffff9140e5f8    56  blr x16
0xffff9140e5fc    60  mov jssp, fp
0xffff9140e600    64  ldp fp, lr, [jssp], #16
0xffff9140e604    68  ret
0xffff9140e608    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140e60c    76  d63f03e0       constant
0xffff9140e610    80  9140e561       constant
0xffff9140e614    84  0000ffff       constant
0xffff9140e618    88  00c8e1b8       constant
0xffff9140e61c    92  00000000       constant
0xffff9140e620    96  91406060       constant
0xffff9140e624   100  0000ffff       constant


RelocInfo (size = 10)
0xffff9140e5d4  embedded object  (0xffff9140e561 <Code: BINARY_OP_IC>)
0xffff9140e5f0  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff9140e5f4  code target (STUB)  (0xffff91406060)
0xffff9140e608  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 8
name = BinaryOpICStub(SUB:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff9140e6a0     0  movz x16, #0xc00000000
0xffff9140e6a4     4  sub csp, jssp, #0x10 (16)
0xffff9140e6a8     8  stp fp, lr, [jssp, #-16]!
0xffff9140e6ac    12  sub csp, jssp, #0x10 (16)
0xffff9140e6b0    16  str x16, [jssp, #-8]!
0xffff9140e6b4    20  ldr x17, pc+60 (addr 0x0000ffff9140e6f0)    ;; object: 0xffff9140e641 <Code: BINARY_OP_IC>
0xffff9140e6b8    24  sub csp, jssp, #0x10 (16)
0xffff9140e6bc    28  str x17, [jssp, #-8]!
0xffff9140e6c0    32  add fp, jssp, #0x10 (16)
0xffff9140e6c4    36  sub csp, jssp, #0x10 (16)
0xffff9140e6c8    40  stp x0, x1, [jssp, #-16]!
0xffff9140e6cc    44  movz x0, #0x2
0xffff9140e6d0    48  ldr x1, pc+40 (addr 0x0000ffff9140e6f8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff9140e6d4    52  ldr x16, pc+44 (addr 0x0000ffff9140e700)    ;; code: STUB, CEntryStub, minor: 4
0xffff9140e6d8    56  blr x16
0xffff9140e6dc    60  mov jssp, fp
0xffff9140e6e0    64  ldp fp, lr, [jssp], #16
0xffff9140e6e4    68  ret
0xffff9140e6e8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140e6ec    76  d63f03e0       constant
0xffff9140e6f0    80  9140e641       constant
0xffff9140e6f4    84  0000ffff       constant
0xffff9140e6f8    88  00c8e1b8       constant
0xffff9140e6fc    92  00000000       constant
0xffff9140e700    96  91406060       constant
0xffff9140e704   100  0000ffff       constant


RelocInfo (size = 10)
0xffff9140e6b4  embedded object  (0xffff9140e641 <Code: BINARY_OP_IC>)
0xffff9140e6d0  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff9140e6d4  code target (STUB)  (0xffff91406060)
0xffff9140e6e8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 9
name = BinaryOpICStub(MUL:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff9140e780     0  movz x16, #0xc00000000
0xffff9140e784     4  sub csp, jssp, #0x10 (16)
0xffff9140e788     8  stp fp, lr, [jssp, #-16]!
0xffff9140e78c    12  sub csp, jssp, #0x10 (16)
0xffff9140e790    16  str x16, [jssp, #-8]!
0xffff9140e794    20  ldr x17, pc+60 (addr 0x0000ffff9140e7d0)    ;; object: 0xffff9140e721 <Code: BINARY_OP_IC>
0xffff9140e798    24  sub csp, jssp, #0x10 (16)
0xffff9140e79c    28  str x17, [jssp, #-8]!
0xffff9140e7a0    32  add fp, jssp, #0x10 (16)
0xffff9140e7a4    36  sub csp, jssp, #0x10 (16)
0xffff9140e7a8    40  stp x0, x1, [jssp, #-16]!
0xffff9140e7ac    44  movz x0, #0x2
0xffff9140e7b0    48  ldr x1, pc+40 (addr 0x0000ffff9140e7d8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff9140e7b4    52  ldr x16, pc+44 (addr 0x0000ffff9140e7e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9140e7b8    56  blr x16
0xffff9140e7bc    60  mov jssp, fp
0xffff9140e7c0    64  ldp fp, lr, [jssp], #16
0xffff9140e7c4    68  ret
0xffff9140e7c8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140e7cc    76  d63f03e0       constant
0xffff9140e7d0    80  9140e721       constant
0xffff9140e7d4    84  0000ffff       constant
0xffff9140e7d8    88  00c8e1b8       constant
0xffff9140e7dc    92  00000000       constant
0xffff9140e7e0    96  91406060       constant
0xffff9140e7e4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff9140e794  embedded object  (0xffff9140e721 <Code: BINARY_OP_IC>)
0xffff9140e7b0  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff9140e7b4  code target (STUB)  (0xffff91406060)
0xffff9140e7c8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 10
name = BinaryOpICStub(DIV:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff9140e860     0  movz x16, #0xc00000000
0xffff9140e864     4  sub csp, jssp, #0x10 (16)
0xffff9140e868     8  stp fp, lr, [jssp, #-16]!
0xffff9140e86c    12  sub csp, jssp, #0x10 (16)
0xffff9140e870    16  str x16, [jssp, #-8]!
0xffff9140e874    20  ldr x17, pc+60 (addr 0x0000ffff9140e8b0)    ;; object: 0xffff9140e801 <Code: BINARY_OP_IC>
0xffff9140e878    24  sub csp, jssp, #0x10 (16)
0xffff9140e87c    28  str x17, [jssp, #-8]!
0xffff9140e880    32  add fp, jssp, #0x10 (16)
0xffff9140e884    36  sub csp, jssp, #0x10 (16)
0xffff9140e888    40  stp x0, x1, [jssp, #-16]!
0xffff9140e88c    44  movz x0, #0x2
0xffff9140e890    48  ldr x1, pc+40 (addr 0x0000ffff9140e8b8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff9140e894    52  ldr x16, pc+44 (addr 0x0000ffff9140e8c0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9140e898    56  blr x16
0xffff9140e89c    60  mov jssp, fp
0xffff9140e8a0    64  ldp fp, lr, [jssp], #16
0xffff9140e8a4    68  ret
0xffff9140e8a8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140e8ac    76  d63f03e0       constant
0xffff9140e8b0    80  9140e801       constant
0xffff9140e8b4    84  0000ffff       constant
0xffff9140e8b8    88  00c8e1b8       constant
0xffff9140e8bc    92  00000000       constant
0xffff9140e8c0    96  91406060       constant
0xffff9140e8c4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff9140e874  embedded object  (0xffff9140e801 <Code: BINARY_OP_IC>)
0xffff9140e890  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff9140e894  code target (STUB)  (0xffff91406060)
0xffff9140e8a8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 11
name = BinaryOpICStub(MOD:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff9140e940     0  movz x16, #0xc00000000
0xffff9140e944     4  sub csp, jssp, #0x10 (16)
0xffff9140e948     8  stp fp, lr, [jssp, #-16]!
0xffff9140e94c    12  sub csp, jssp, #0x10 (16)
0xffff9140e950    16  str x16, [jssp, #-8]!
0xffff9140e954    20  ldr x17, pc+60 (addr 0x0000ffff9140e990)    ;; object: 0xffff9140e8e1 <Code: BINARY_OP_IC>
0xffff9140e958    24  sub csp, jssp, #0x10 (16)
0xffff9140e95c    28  str x17, [jssp, #-8]!
0xffff9140e960    32  add fp, jssp, #0x10 (16)
0xffff9140e964    36  sub csp, jssp, #0x10 (16)
0xffff9140e968    40  stp x0, x1, [jssp, #-16]!
0xffff9140e96c    44  movz x0, #0x2
0xffff9140e970    48  ldr x1, pc+40 (addr 0x0000ffff9140e998)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff9140e974    52  ldr x16, pc+44 (addr 0x0000ffff9140e9a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9140e978    56  blr x16
0xffff9140e97c    60  mov jssp, fp
0xffff9140e980    64  ldp fp, lr, [jssp], #16
0xffff9140e984    68  ret
0xffff9140e988    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140e98c    76  d63f03e0       constant
0xffff9140e990    80  9140e8e1       constant
0xffff9140e994    84  0000ffff       constant
0xffff9140e998    88  00c8e1b8       constant
0xffff9140e99c    92  00000000       constant
0xffff9140e9a0    96  91406060       constant
0xffff9140e9a4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff9140e954  embedded object  (0xffff9140e8e1 <Code: BINARY_OP_IC>)
0xffff9140e970  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff9140e974  code target (STUB)  (0xffff91406060)
0xffff9140e988  constant pool (size 32)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4391
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff9140ea20     0  mov x2, x1
0xffff9140ea24     4  tbnz w2, #0, #+0x1c (addr 0xffff9140ea40)
0xffff9140ea28     8  mov x3, x0
0xffff9140ea2c    12  tbnz w3, #0, #+0x24 (addr 0xffff9140ea50)
0xffff9140ea30    16  adds x2, x3, x2
0xffff9140ea34    20  b.vs #+0x2c (addr 0xffff9140ea60)
0xffff9140ea38    24  mov x0, x2
0xffff9140ea3c    28  ret
0xffff9140ea40    32  movz x16, #0x0
0xffff9140ea44    36  sub csp, jssp, #0x10 (16)
0xffff9140ea48    40  stp fp, lr, [jssp, #-16]!
0xffff9140ea4c    44  bl #+0x24 (addr 0xffff9140ea70)
0xffff9140ea50    48  movz x16, #0x8
0xffff9140ea54    52  sub csp, jssp, #0x10 (16)
0xffff9140ea58    56  stp fp, lr, [jssp, #-16]!
0xffff9140ea5c    60  bl #+0x14 (addr 0xffff9140ea70)
0xffff9140ea60    64  movz x16, #0x10
0xffff9140ea64    68  sub csp, jssp, #0x10 (16)
0xffff9140ea68    72  stp fp, lr, [jssp, #-16]!
0xffff9140ea6c    76  bl #+0x4 (addr 0xffff9140ea70)
0xffff9140ea70    80  movz x17, #0xa00000000
0xffff9140ea74    84  sub csp, jssp, #0x10 (16)
0xffff9140ea78    88  stp x17, cp, [jssp, #-16]!
0xffff9140ea7c    92  add fp, jssp, #0x10 (16)
0xffff9140ea80    96  ldr x17, pc+24 (addr 0x0000ffff9140ea98)    ;; lazy deoptimization bailout 0
0xffff9140ea84   100  add x17, x17, x16
0xffff9140ea88   104  br x17
0xffff9140ea8c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140ea90   112  d63f03e0       constant
0xffff9140ea94   116  d503201f       constant
0xffff9140ea98   120  91206000       constant
0xffff9140ea9c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140ea80  runtime entry
0xffff9140ea8c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4391
type = NORMAL
name = BinaryOpICStub(ADD:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff9140ea20     0  mov x2, x1
0xffff9140ea24     4  tbnz w2, #0, #+0x1c (addr 0xffff9140ea40)
0xffff9140ea28     8  mov x3, x0
0xffff9140ea2c    12  tbnz w3, #0, #+0x24 (addr 0xffff9140ea50)
0xffff9140ea30    16  adds x2, x3, x2
0xffff9140ea34    20  b.vs #+0x2c (addr 0xffff9140ea60)
0xffff9140ea38    24  mov x0, x2
0xffff9140ea3c    28  ret
0xffff9140ea40    32  movz x16, #0x0
0xffff9140ea44    36  sub csp, jssp, #0x10 (16)
0xffff9140ea48    40  stp fp, lr, [jssp, #-16]!
0xffff9140ea4c    44  bl #+0x24 (addr 0xffff9140ea70)
0xffff9140ea50    48  movz x16, #0x8
0xffff9140ea54    52  sub csp, jssp, #0x10 (16)
0xffff9140ea58    56  stp fp, lr, [jssp, #-16]!
0xffff9140ea5c    60  bl #+0x14 (addr 0xffff9140ea70)
0xffff9140ea60    64  movz x16, #0x10
0xffff9140ea64    68  sub csp, jssp, #0x10 (16)
0xffff9140ea68    72  stp fp, lr, [jssp, #-16]!
0xffff9140ea6c    76  bl #+0x4 (addr 0xffff9140ea70)
0xffff9140ea70    80  movz x17, #0xa00000000
0xffff9140ea74    84  sub csp, jssp, #0x10 (16)
0xffff9140ea78    88  stp x17, cp, [jssp, #-16]!
0xffff9140ea7c    92  add fp, jssp, #0x10 (16)
0xffff9140ea80    96  ldr x17, pc+24 (addr 0x0000ffff9140ea98)    ;; lazy deoptimization bailout 0
0xffff9140ea84   100  add x17, x17, x16
0xffff9140ea88   104  br x17
0xffff9140ea8c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140ea90   112  d63f03e0       constant
0xffff9140ea94   116  d503201f       constant
0xffff9140ea98   120  91206000       constant
0xffff9140ea9c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140ea80  runtime entry
0xffff9140ea8c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4407
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff9140eb20     0  mov x2, x1
0xffff9140eb24     4  tbnz w2, #0, #+0xc4 (addr 0xffff9140ebe8)
0xffff9140eb28     8  mov x3, x0
0xffff9140eb2c    12  tbnz w3, #0, #+0xcc (addr 0xffff9140ebf8)
0xffff9140eb30    16  scvtf d0, x2, #32
0xffff9140eb34    20  scvtf d1, x3, #32
0xffff9140eb38    24  fadd d0, d0, d1
0xffff9140eb3c    28  movz x1, #0xf2c0
0xffff9140eb40    32  movk x1, #0x4117, lsl #16
0xffff9140eb44    36  ldp x2, x0, [x1]
0xffff9140eb48    40  adds x16, x2, #0x10 (16)
0xffff9140eb4c    44  ccmp x16, x0, #nzCv, lo
0xffff9140eb50    48  b.hi #+0x20 (addr 0xffff9140eb70)
0xffff9140eb54    52  str x16, [x1]
0xffff9140eb58    56  ldr x1, [x26, #120]
0xffff9140eb5c    60  str x1, [x2]
0xffff9140eb60    64  orr x2, x2, #0x1
0xffff9140eb64    68  stur d0, [x2, #7]
0xffff9140eb68    72  mov x0, x2
0xffff9140eb6c    76  ret
0xffff9140eb70    80  sub csp, jssp, #0x10 (16)
0xffff9140eb74    84  stp fp, lr, [jssp, #-16]!
0xffff9140eb78    88  movz fp, #0xa00000000
0xffff9140eb7c    92  sub csp, jssp, #0x8 (8)
0xffff9140eb80    96  str fp, [jssp, #-8]!
0xffff9140eb84   100  add fp, jssp, #0x8 (8)
0xffff9140eb88   104  movz x2, #0x0
0xffff9140eb8c   108  mov x16, lr
0xffff9140eb90   112  ldr x17, pc+64 (addr 0x0000ffff9140ebd0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140eb94   116  blr x17
0xffff9140eb98   120  ldur cp, [fp, #-8]
0xffff9140eb9c   124  movz x0, #0x0
0xffff9140eba0   128  movz x1, #0x4b48
0xffff9140eba4   132  movk x1, #0xe4, lsl #16
0xffff9140eba8   136  ldr x16, pc+48 (addr 0x0000ffff9140ebd8)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140ebac   140  blr x16
0xffff9140ebb0   144  str x0, [jssp, #16]
0xffff9140ebb4   148  ldr x16, pc+44 (addr 0x0000ffff9140ebe0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140ebb8   152  blr x16
0xffff9140ebbc   156  ldr lr, [jssp, #16]
0xffff9140ebc0   160  ldp xzr, fp, [jssp], #24
0xffff9140ebc4   164  b #-0x60 (addr 0xffff9140eb64)
0xffff9140ebc8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140ebcc   172  d63f03e0       constant
0xffff9140ebd0   176  91406820       constant
0xffff9140ebd4   180  0000ffff       constant
0xffff9140ebd8   184  91406260       constant
0xffff9140ebdc   188  0000ffff       constant
0xffff9140ebe0   192  914068e0       constant
0xffff9140ebe4   196  0000ffff       constant
0xffff9140ebe8   200  movz x16, #0x0
0xffff9140ebec   204  sub csp, jssp, #0x10 (16)
0xffff9140ebf0   208  stp fp, lr, [jssp, #-16]!
0xffff9140ebf4   212  bl #+0x14 (addr 0xffff9140ec08)
0xffff9140ebf8   216  movz x16, #0x8
0xffff9140ebfc   220  sub csp, jssp, #0x10 (16)
0xffff9140ec00   224  stp fp, lr, [jssp, #-16]!
0xffff9140ec04   228  bl #+0x4 (addr 0xffff9140ec08)
0xffff9140ec08   232  movz x17, #0xa00000000
0xffff9140ec0c   236  sub csp, jssp, #0x10 (16)
0xffff9140ec10   240  stp x17, cp, [jssp, #-16]!
0xffff9140ec14   244  add fp, jssp, #0x10 (16)
0xffff9140ec18   248  ldr x17, pc+24 (addr 0x0000ffff9140ec30)    ;; lazy deoptimization bailout 0
0xffff9140ec1c   252  add x17, x17, x16
0xffff9140ec20   256  br x17
0xffff9140ec24   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140ec28   264  d63f03e0       constant
0xffff9140ec2c   268  d503201f       constant
0xffff9140ec30   272  91206000       constant
0xffff9140ec34   276  0000ffff       constant


Safepoints (size = 21)
0xffff9140ebb0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9140eb90  code target (STUB)  (0xffff91406820)
0xffff9140eba8  code target (STUB)  (0xffff91406260)
0xffff9140ebb4  code target (STUB)  (0xffff914068e0)
0xffff9140ebc8  constant pool (size 32)
0xffff9140ec18  runtime entry
0xffff9140ec24  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4407
type = NORMAL
name = BinaryOpICStub(ADD:Int32*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff9140eb20     0  mov x2, x1
0xffff9140eb24     4  tbnz w2, #0, #+0xc4 (addr 0xffff9140ebe8)
0xffff9140eb28     8  mov x3, x0
0xffff9140eb2c    12  tbnz w3, #0, #+0xcc (addr 0xffff9140ebf8)
0xffff9140eb30    16  scvtf d0, x2, #32
0xffff9140eb34    20  scvtf d1, x3, #32
0xffff9140eb38    24  fadd d0, d0, d1
0xffff9140eb3c    28  movz x1, #0xf2c0
0xffff9140eb40    32  movk x1, #0x4117, lsl #16
0xffff9140eb44    36  ldp x2, x0, [x1]
0xffff9140eb48    40  adds x16, x2, #0x10 (16)
0xffff9140eb4c    44  ccmp x16, x0, #nzCv, lo
0xffff9140eb50    48  b.hi #+0x20 (addr 0xffff9140eb70)
0xffff9140eb54    52  str x16, [x1]
0xffff9140eb58    56  ldr x1, [x26, #120]
0xffff9140eb5c    60  str x1, [x2]
0xffff9140eb60    64  orr x2, x2, #0x1
0xffff9140eb64    68  stur d0, [x2, #7]
0xffff9140eb68    72  mov x0, x2
0xffff9140eb6c    76  ret
0xffff9140eb70    80  sub csp, jssp, #0x10 (16)
0xffff9140eb74    84  stp fp, lr, [jssp, #-16]!
0xffff9140eb78    88  movz fp, #0xa00000000
0xffff9140eb7c    92  sub csp, jssp, #0x8 (8)
0xffff9140eb80    96  str fp, [jssp, #-8]!
0xffff9140eb84   100  add fp, jssp, #0x8 (8)
0xffff9140eb88   104  movz x2, #0x0
0xffff9140eb8c   108  mov x16, lr
0xffff9140eb90   112  ldr x17, pc+64 (addr 0x0000ffff9140ebd0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140eb94   116  blr x17
0xffff9140eb98   120  ldur cp, [fp, #-8]
0xffff9140eb9c   124  movz x0, #0x0
0xffff9140eba0   128  movz x1, #0x4b48
0xffff9140eba4   132  movk x1, #0xe4, lsl #16
0xffff9140eba8   136  ldr x16, pc+48 (addr 0x0000ffff9140ebd8)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140ebac   140  blr x16
0xffff9140ebb0   144  str x0, [jssp, #16]
0xffff9140ebb4   148  ldr x16, pc+44 (addr 0x0000ffff9140ebe0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140ebb8   152  blr x16
0xffff9140ebbc   156  ldr lr, [jssp, #16]
0xffff9140ebc0   160  ldp xzr, fp, [jssp], #24
0xffff9140ebc4   164  b #-0x60 (addr 0xffff9140eb64)
0xffff9140ebc8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140ebcc   172  d63f03e0       constant
0xffff9140ebd0   176  91406820       constant
0xffff9140ebd4   180  0000ffff       constant
0xffff9140ebd8   184  91406260       constant
0xffff9140ebdc   188  0000ffff       constant
0xffff9140ebe0   192  914068e0       constant
0xffff9140ebe4   196  0000ffff       constant
0xffff9140ebe8   200  movz x16, #0x0
0xffff9140ebec   204  sub csp, jssp, #0x10 (16)
0xffff9140ebf0   208  stp fp, lr, [jssp, #-16]!
0xffff9140ebf4   212  bl #+0x14 (addr 0xffff9140ec08)
0xffff9140ebf8   216  movz x16, #0x8
0xffff9140ebfc   220  sub csp, jssp, #0x10 (16)
0xffff9140ec00   224  stp fp, lr, [jssp, #-16]!
0xffff9140ec04   228  bl #+0x4 (addr 0xffff9140ec08)
0xffff9140ec08   232  movz x17, #0xa00000000
0xffff9140ec0c   236  sub csp, jssp, #0x10 (16)
0xffff9140ec10   240  stp x17, cp, [jssp, #-16]!
0xffff9140ec14   244  add fp, jssp, #0x10 (16)
0xffff9140ec18   248  ldr x17, pc+24 (addr 0x0000ffff9140ec30)    ;; lazy deoptimization bailout 0
0xffff9140ec1c   252  add x17, x17, x16
0xffff9140ec20   256  br x17
0xffff9140ec24   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140ec28   264  d63f03e0       constant
0xffff9140ec2c   268  d503201f       constant
0xffff9140ec30   272  91206000       constant
0xffff9140ec34   276  0000ffff       constant


Safepoints (size = 21)
0xffff9140ebb0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9140eb90  code target (STUB)  (0xffff91406820)
0xffff9140eba8  code target (STUB)  (0xffff91406260)
0xffff9140ebb4  code target (STUB)  (0xffff914068e0)
0xffff9140ebc8  constant pool (size 32)
0xffff9140ec18  runtime entry
0xffff9140ec24  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6455
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff9140ecc0     0  mov x2, x1
0xffff9140ecc4     4  tbnz w2, #0, #+0xf4 (addr 0xffff9140edb8)
0xffff9140ecc8     8  tbz w0, #0, #+0x34 (addr 0xffff9140ecfc)
0xffff9140eccc    12  ldur x16, [x0, #-1]
0xffff9140ecd0    16  ldr x17, [x26, #120]
0xffff9140ecd4    20  cmp x16, x17
0xffff9140ecd8    24  b.ne #+0xc (addr 0xffff9140ece4)
0xffff9140ecdc    28  ldur d0, [x0, #7]
0xffff9140ece0    32  b #+0x20 (addr 0xffff9140ed00)
0xffff9140ece4    36  ldr x16, [x26, #40]
0xffff9140ece8    40  cmp x0, x16
0xffff9140ecec    44  b.ne #+0xdc (addr 0xffff9140edc8)
0xffff9140ecf0    48  ldr x3, [x26, #928]
0xffff9140ecf4    52  ldur d0, [x3, #7]
0xffff9140ecf8    56  b #+0x8 (addr 0xffff9140ed00)
0xffff9140ecfc    60  scvtf d0, x0, #32
0xffff9140ed00    64  scvtf d1, x2, #32
0xffff9140ed04    68  fadd d0, d1, d0
0xffff9140ed08    72  movz x1, #0xf2c0
0xffff9140ed0c    76  movk x1, #0x4117, lsl #16
0xffff9140ed10    80  ldp x2, x0, [x1]
0xffff9140ed14    84  adds x16, x2, #0x10 (16)
0xffff9140ed18    88  ccmp x16, x0, #nzCv, lo
0xffff9140ed1c    92  b.hi #+0x20 (addr 0xffff9140ed3c)
0xffff9140ed20    96  str x16, [x1]
0xffff9140ed24   100  ldr x1, [x26, #120]
0xffff9140ed28   104  str x1, [x2]
0xffff9140ed2c   108  orr x2, x2, #0x1
0xffff9140ed30   112  stur d0, [x2, #7]
0xffff9140ed34   116  mov x0, x2
0xffff9140ed38   120  ret
0xffff9140ed3c   124  sub csp, jssp, #0x10 (16)
0xffff9140ed40   128  stp fp, lr, [jssp, #-16]!
0xffff9140ed44   132  movz fp, #0xa00000000
0xffff9140ed48   136  sub csp, jssp, #0x8 (8)
0xffff9140ed4c   140  str fp, [jssp, #-8]!
0xffff9140ed50   144  add fp, jssp, #0x8 (8)
0xffff9140ed54   148  movz x2, #0x0
0xffff9140ed58   152  mov x16, lr
0xffff9140ed5c   156  ldr x17, pc+68 (addr 0x0000ffff9140eda0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140ed60   160  blr x17
0xffff9140ed64   164  ldur cp, [fp, #-8]
0xffff9140ed68   168  movz x0, #0x0
0xffff9140ed6c   172  movz x1, #0x4b48
0xffff9140ed70   176  movk x1, #0xe4, lsl #16
0xffff9140ed74   180  ldr x16, pc+52 (addr 0x0000ffff9140eda8)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140ed78   184  blr x16
0xffff9140ed7c   188  str x0, [jssp, #16]
0xffff9140ed80   192  ldr x16, pc+48 (addr 0x0000ffff9140edb0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140ed84   196  blr x16
0xffff9140ed88   200  ldr lr, [jssp, #16]
0xffff9140ed8c   204  ldp xzr, fp, [jssp], #24
0xffff9140ed90   208  b #-0x60 (addr 0xffff9140ed30)
0xffff9140ed94   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff9140ed98   216  d63f03e0       constant
0xffff9140ed9c   220  d503201f       constant
0xffff9140eda0   224  91406820       constant
0xffff9140eda4   228  0000ffff       constant
0xffff9140eda8   232  91406260       constant
0xffff9140edac   236  0000ffff       constant
0xffff9140edb0   240  914068e0       constant
0xffff9140edb4   244  0000ffff       constant
0xffff9140edb8   248  movz x16, #0x0
0xffff9140edbc   252  sub csp, jssp, #0x10 (16)
0xffff9140edc0   256  stp fp, lr, [jssp, #-16]!
0xffff9140edc4   260  bl #+0x14 (addr 0xffff9140edd8)
0xffff9140edc8   264  movz x16, #0x8
0xffff9140edcc   268  sub csp, jssp, #0x10 (16)
0xffff9140edd0   272  stp fp, lr, [jssp, #-16]!
0xffff9140edd4   276  bl #+0x4 (addr 0xffff9140edd8)
0xffff9140edd8   280  movz x17, #0xa00000000
0xffff9140eddc   284  sub csp, jssp, #0x10 (16)
0xffff9140ede0   288  stp x17, cp, [jssp, #-16]!
0xffff9140ede4   292  add fp, jssp, #0x10 (16)
0xffff9140ede8   296  ldr x17, pc+24 (addr 0x0000ffff9140ee00)    ;; lazy deoptimization bailout 0
0xffff9140edec   300  add x17, x17, x16
0xffff9140edf0   304  br x17
0xffff9140edf4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140edf8   312  d63f03e0       constant
0xffff9140edfc   316  d503201f       constant
0xffff9140ee00   320  91206000       constant
0xffff9140ee04   324  0000ffff       constant


Safepoints (size = 21)
0xffff9140ed7c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9140ed5c  code target (STUB)  (0xffff91406820)
0xffff9140ed74  code target (STUB)  (0xffff91406260)
0xffff9140ed80  code target (STUB)  (0xffff914068e0)
0xffff9140ed94  constant pool (size 36)
0xffff9140ede8  runtime entry
0xffff9140edf4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6455
type = NORMAL
name = BinaryOpICStub(ADD:Int32*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff9140ecc0     0  mov x2, x1
0xffff9140ecc4     4  tbnz w2, #0, #+0xf4 (addr 0xffff9140edb8)
0xffff9140ecc8     8  tbz w0, #0, #+0x34 (addr 0xffff9140ecfc)
0xffff9140eccc    12  ldur x16, [x0, #-1]
0xffff9140ecd0    16  ldr x17, [x26, #120]
0xffff9140ecd4    20  cmp x16, x17
0xffff9140ecd8    24  b.ne #+0xc (addr 0xffff9140ece4)
0xffff9140ecdc    28  ldur d0, [x0, #7]
0xffff9140ece0    32  b #+0x20 (addr 0xffff9140ed00)
0xffff9140ece4    36  ldr x16, [x26, #40]
0xffff9140ece8    40  cmp x0, x16
0xffff9140ecec    44  b.ne #+0xdc (addr 0xffff9140edc8)
0xffff9140ecf0    48  ldr x3, [x26, #928]
0xffff9140ecf4    52  ldur d0, [x3, #7]
0xffff9140ecf8    56  b #+0x8 (addr 0xffff9140ed00)
0xffff9140ecfc    60  scvtf d0, x0, #32
0xffff9140ed00    64  scvtf d1, x2, #32
0xffff9140ed04    68  fadd d0, d1, d0
0xffff9140ed08    72  movz x1, #0xf2c0
0xffff9140ed0c    76  movk x1, #0x4117, lsl #16
0xffff9140ed10    80  ldp x2, x0, [x1]
0xffff9140ed14    84  adds x16, x2, #0x10 (16)
0xffff9140ed18    88  ccmp x16, x0, #nzCv, lo
0xffff9140ed1c    92  b.hi #+0x20 (addr 0xffff9140ed3c)
0xffff9140ed20    96  str x16, [x1]
0xffff9140ed24   100  ldr x1, [x26, #120]
0xffff9140ed28   104  str x1, [x2]
0xffff9140ed2c   108  orr x2, x2, #0x1
0xffff9140ed30   112  stur d0, [x2, #7]
0xffff9140ed34   116  mov x0, x2
0xffff9140ed38   120  ret
0xffff9140ed3c   124  sub csp, jssp, #0x10 (16)
0xffff9140ed40   128  stp fp, lr, [jssp, #-16]!
0xffff9140ed44   132  movz fp, #0xa00000000
0xffff9140ed48   136  sub csp, jssp, #0x8 (8)
0xffff9140ed4c   140  str fp, [jssp, #-8]!
0xffff9140ed50   144  add fp, jssp, #0x8 (8)
0xffff9140ed54   148  movz x2, #0x0
0xffff9140ed58   152  mov x16, lr
0xffff9140ed5c   156  ldr x17, pc+68 (addr 0x0000ffff9140eda0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140ed60   160  blr x17
0xffff9140ed64   164  ldur cp, [fp, #-8]
0xffff9140ed68   168  movz x0, #0x0
0xffff9140ed6c   172  movz x1, #0x4b48
0xffff9140ed70   176  movk x1, #0xe4, lsl #16
0xffff9140ed74   180  ldr x16, pc+52 (addr 0x0000ffff9140eda8)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140ed78   184  blr x16
0xffff9140ed7c   188  str x0, [jssp, #16]
0xffff9140ed80   192  ldr x16, pc+48 (addr 0x0000ffff9140edb0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140ed84   196  blr x16
0xffff9140ed88   200  ldr lr, [jssp, #16]
0xffff9140ed8c   204  ldp xzr, fp, [jssp], #24
0xffff9140ed90   208  b #-0x60 (addr 0xffff9140ed30)
0xffff9140ed94   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff9140ed98   216  d63f03e0       constant
0xffff9140ed9c   220  d503201f       constant
0xffff9140eda0   224  91406820       constant
0xffff9140eda4   228  0000ffff       constant
0xffff9140eda8   232  91406260       constant
0xffff9140edac   236  0000ffff       constant
0xffff9140edb0   240  914068e0       constant
0xffff9140edb4   244  0000ffff       constant
0xffff9140edb8   248  movz x16, #0x0
0xffff9140edbc   252  sub csp, jssp, #0x10 (16)
0xffff9140edc0   256  stp fp, lr, [jssp, #-16]!
0xffff9140edc4   260  bl #+0x14 (addr 0xffff9140edd8)
0xffff9140edc8   264  movz x16, #0x8
0xffff9140edcc   268  sub csp, jssp, #0x10 (16)
0xffff9140edd0   272  stp fp, lr, [jssp, #-16]!
0xffff9140edd4   276  bl #+0x4 (addr 0xffff9140edd8)
0xffff9140edd8   280  movz x17, #0xa00000000
0xffff9140eddc   284  sub csp, jssp, #0x10 (16)
0xffff9140ede0   288  stp x17, cp, [jssp, #-16]!
0xffff9140ede4   292  add fp, jssp, #0x10 (16)
0xffff9140ede8   296  ldr x17, pc+24 (addr 0x0000ffff9140ee00)    ;; lazy deoptimization bailout 0
0xffff9140edec   300  add x17, x17, x16
0xffff9140edf0   304  br x17
0xffff9140edf4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140edf8   312  d63f03e0       constant
0xffff9140edfc   316  d503201f       constant
0xffff9140ee00   320  91206000       constant
0xffff9140ee04   324  0000ffff       constant


Safepoints (size = 21)
0xffff9140ed7c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9140ed5c  code target (STUB)  (0xffff91406820)
0xffff9140ed74  code target (STUB)  (0xffff91406260)
0xffff9140ed80  code target (STUB)  (0xffff914068e0)
0xffff9140ed94  constant pool (size 36)
0xffff9140ede8  runtime entry
0xffff9140edf4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2343
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff9140ee80     0  mov x2, x1
0xffff9140ee84     4  tbnz w2, #0, #+0x1c (addr 0xffff9140eea0)
0xffff9140ee88     8  mov x3, x0
0xffff9140ee8c    12  tbnz w3, #0, #+0x24 (addr 0xffff9140eeb0)
0xffff9140ee90    16  adds x2, x3, x2
0xffff9140ee94    20  b.vs #+0x2c (addr 0xffff9140eec0)
0xffff9140ee98    24  mov x0, x2
0xffff9140ee9c    28  ret
0xffff9140eea0    32  movz x16, #0x0
0xffff9140eea4    36  sub csp, jssp, #0x10 (16)
0xffff9140eea8    40  stp fp, lr, [jssp, #-16]!
0xffff9140eeac    44  bl #+0x24 (addr 0xffff9140eed0)
0xffff9140eeb0    48  movz x16, #0x8
0xffff9140eeb4    52  sub csp, jssp, #0x10 (16)
0xffff9140eeb8    56  stp fp, lr, [jssp, #-16]!
0xffff9140eebc    60  bl #+0x14 (addr 0xffff9140eed0)
0xffff9140eec0    64  movz x16, #0x10
0xffff9140eec4    68  sub csp, jssp, #0x10 (16)
0xffff9140eec8    72  stp fp, lr, [jssp, #-16]!
0xffff9140eecc    76  bl #+0x4 (addr 0xffff9140eed0)
0xffff9140eed0    80  movz x17, #0xa00000000
0xffff9140eed4    84  sub csp, jssp, #0x10 (16)
0xffff9140eed8    88  stp x17, cp, [jssp, #-16]!
0xffff9140eedc    92  add fp, jssp, #0x10 (16)
0xffff9140eee0    96  ldr x17, pc+24 (addr 0x0000ffff9140eef8)    ;; lazy deoptimization bailout 0
0xffff9140eee4   100  add x17, x17, x16
0xffff9140eee8   104  br x17
0xffff9140eeec   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140eef0   112  d63f03e0       constant
0xffff9140eef4   116  d503201f       constant
0xffff9140eef8   120  91206000       constant
0xffff9140eefc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140eee0  runtime entry
0xffff9140eeec  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2343
type = NORMAL
name = BinaryOpICStub(ADD:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff9140ee80     0  mov x2, x1
0xffff9140ee84     4  tbnz w2, #0, #+0x1c (addr 0xffff9140eea0)
0xffff9140ee88     8  mov x3, x0
0xffff9140ee8c    12  tbnz w3, #0, #+0x24 (addr 0xffff9140eeb0)
0xffff9140ee90    16  adds x2, x3, x2
0xffff9140ee94    20  b.vs #+0x2c (addr 0xffff9140eec0)
0xffff9140ee98    24  mov x0, x2
0xffff9140ee9c    28  ret
0xffff9140eea0    32  movz x16, #0x0
0xffff9140eea4    36  sub csp, jssp, #0x10 (16)
0xffff9140eea8    40  stp fp, lr, [jssp, #-16]!
0xffff9140eeac    44  bl #+0x24 (addr 0xffff9140eed0)
0xffff9140eeb0    48  movz x16, #0x8
0xffff9140eeb4    52  sub csp, jssp, #0x10 (16)
0xffff9140eeb8    56  stp fp, lr, [jssp, #-16]!
0xffff9140eebc    60  bl #+0x14 (addr 0xffff9140eed0)
0xffff9140eec0    64  movz x16, #0x10
0xffff9140eec4    68  sub csp, jssp, #0x10 (16)
0xffff9140eec8    72  stp fp, lr, [jssp, #-16]!
0xffff9140eecc    76  bl #+0x4 (addr 0xffff9140eed0)
0xffff9140eed0    80  movz x17, #0xa00000000
0xffff9140eed4    84  sub csp, jssp, #0x10 (16)
0xffff9140eed8    88  stp x17, cp, [jssp, #-16]!
0xffff9140eedc    92  add fp, jssp, #0x10 (16)
0xffff9140eee0    96  ldr x17, pc+24 (addr 0x0000ffff9140eef8)    ;; lazy deoptimization bailout 0
0xffff9140eee4   100  add x17, x17, x16
0xffff9140eee8   104  br x17
0xffff9140eeec   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140eef0   112  d63f03e0       constant
0xffff9140eef4   116  d503201f       constant
0xffff9140eef8   120  91206000       constant
0xffff9140eefc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140eee0  runtime entry
0xffff9140eeec  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4535
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff9140ef80     0  mov x2, x0
0xffff9140ef84     4  tbnz w2, #0, #+0xf4 (addr 0xffff9140f078)
0xffff9140ef88     8  tbz w1, #0, #+0x34 (addr 0xffff9140efbc)
0xffff9140ef8c    12  ldur x16, [x1, #-1]
0xffff9140ef90    16  ldr x17, [x26, #120]
0xffff9140ef94    20  cmp x16, x17
0xffff9140ef98    24  b.ne #+0xc (addr 0xffff9140efa4)
0xffff9140ef9c    28  ldur d0, [x1, #7]
0xffff9140efa0    32  b #+0x20 (addr 0xffff9140efc0)
0xffff9140efa4    36  ldr x16, [x26, #40]
0xffff9140efa8    40  cmp x1, x16
0xffff9140efac    44  b.ne #+0xdc (addr 0xffff9140f088)
0xffff9140efb0    48  ldr x3, [x26, #928]
0xffff9140efb4    52  ldur d0, [x3, #7]
0xffff9140efb8    56  b #+0x8 (addr 0xffff9140efc0)
0xffff9140efbc    60  scvtf d0, x1, #32
0xffff9140efc0    64  scvtf d1, x2, #32
0xffff9140efc4    68  fadd d0, d0, d1
0xffff9140efc8    72  movz x1, #0xf2c0
0xffff9140efcc    76  movk x1, #0x4117, lsl #16
0xffff9140efd0    80  ldp x2, x0, [x1]
0xffff9140efd4    84  adds x16, x2, #0x10 (16)
0xffff9140efd8    88  ccmp x16, x0, #nzCv, lo
0xffff9140efdc    92  b.hi #+0x20 (addr 0xffff9140effc)
0xffff9140efe0    96  str x16, [x1]
0xffff9140efe4   100  ldr x1, [x26, #120]
0xffff9140efe8   104  str x1, [x2]
0xffff9140efec   108  orr x2, x2, #0x1
0xffff9140eff0   112  stur d0, [x2, #7]
0xffff9140eff4   116  mov x0, x2
0xffff9140eff8   120  ret
0xffff9140effc   124  sub csp, jssp, #0x10 (16)
0xffff9140f000   128  stp fp, lr, [jssp, #-16]!
0xffff9140f004   132  movz fp, #0xa00000000
0xffff9140f008   136  sub csp, jssp, #0x8 (8)
0xffff9140f00c   140  str fp, [jssp, #-8]!
0xffff9140f010   144  add fp, jssp, #0x8 (8)
0xffff9140f014   148  movz x2, #0x0
0xffff9140f018   152  mov x16, lr
0xffff9140f01c   156  ldr x17, pc+68 (addr 0x0000ffff9140f060)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140f020   160  blr x17
0xffff9140f024   164  ldur cp, [fp, #-8]
0xffff9140f028   168  movz x0, #0x0
0xffff9140f02c   172  movz x1, #0x4b48
0xffff9140f030   176  movk x1, #0xe4, lsl #16
0xffff9140f034   180  ldr x16, pc+52 (addr 0x0000ffff9140f068)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140f038   184  blr x16
0xffff9140f03c   188  str x0, [jssp, #16]
0xffff9140f040   192  ldr x16, pc+48 (addr 0x0000ffff9140f070)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140f044   196  blr x16
0xffff9140f048   200  ldr lr, [jssp, #16]
0xffff9140f04c   204  ldp xzr, fp, [jssp], #24
0xffff9140f050   208  b #-0x60 (addr 0xffff9140eff0)
0xffff9140f054   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff9140f058   216  d63f03e0       constant
0xffff9140f05c   220  d503201f       constant
0xffff9140f060   224  91406820       constant
0xffff9140f064   228  0000ffff       constant
0xffff9140f068   232  91406260       constant
0xffff9140f06c   236  0000ffff       constant
0xffff9140f070   240  914068e0       constant
0xffff9140f074   244  0000ffff       constant
0xffff9140f078   248  movz x16, #0x0
0xffff9140f07c   252  sub csp, jssp, #0x10 (16)
0xffff9140f080   256  stp fp, lr, [jssp, #-16]!
0xffff9140f084   260  bl #+0x14 (addr 0xffff9140f098)
0xffff9140f088   264  movz x16, #0x8
0xffff9140f08c   268  sub csp, jssp, #0x10 (16)
0xffff9140f090   272  stp fp, lr, [jssp, #-16]!
0xffff9140f094   276  bl #+0x4 (addr 0xffff9140f098)
0xffff9140f098   280  movz x17, #0xa00000000
0xffff9140f09c   284  sub csp, jssp, #0x10 (16)
0xffff9140f0a0   288  stp x17, cp, [jssp, #-16]!
0xffff9140f0a4   292  add fp, jssp, #0x10 (16)
0xffff9140f0a8   296  ldr x17, pc+24 (addr 0x0000ffff9140f0c0)    ;; lazy deoptimization bailout 0
0xffff9140f0ac   300  add x17, x17, x16
0xffff9140f0b0   304  br x17
0xffff9140f0b4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140f0b8   312  d63f03e0       constant
0xffff9140f0bc   316  d503201f       constant
0xffff9140f0c0   320  91206000       constant
0xffff9140f0c4   324  0000ffff       constant


Safepoints (size = 21)
0xffff9140f03c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9140f01c  code target (STUB)  (0xffff91406820)
0xffff9140f034  code target (STUB)  (0xffff91406260)
0xffff9140f040  code target (STUB)  (0xffff914068e0)
0xffff9140f054  constant pool (size 36)
0xffff9140f0a8  runtime entry
0xffff9140f0b4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4535
type = NORMAL
name = BinaryOpICStub(ADD:Number*Int32->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff9140ef80     0  mov x2, x0
0xffff9140ef84     4  tbnz w2, #0, #+0xf4 (addr 0xffff9140f078)
0xffff9140ef88     8  tbz w1, #0, #+0x34 (addr 0xffff9140efbc)
0xffff9140ef8c    12  ldur x16, [x1, #-1]
0xffff9140ef90    16  ldr x17, [x26, #120]
0xffff9140ef94    20  cmp x16, x17
0xffff9140ef98    24  b.ne #+0xc (addr 0xffff9140efa4)
0xffff9140ef9c    28  ldur d0, [x1, #7]
0xffff9140efa0    32  b #+0x20 (addr 0xffff9140efc0)
0xffff9140efa4    36  ldr x16, [x26, #40]
0xffff9140efa8    40  cmp x1, x16
0xffff9140efac    44  b.ne #+0xdc (addr 0xffff9140f088)
0xffff9140efb0    48  ldr x3, [x26, #928]
0xffff9140efb4    52  ldur d0, [x3, #7]
0xffff9140efb8    56  b #+0x8 (addr 0xffff9140efc0)
0xffff9140efbc    60  scvtf d0, x1, #32
0xffff9140efc0    64  scvtf d1, x2, #32
0xffff9140efc4    68  fadd d0, d0, d1
0xffff9140efc8    72  movz x1, #0xf2c0
0xffff9140efcc    76  movk x1, #0x4117, lsl #16
0xffff9140efd0    80  ldp x2, x0, [x1]
0xffff9140efd4    84  adds x16, x2, #0x10 (16)
0xffff9140efd8    88  ccmp x16, x0, #nzCv, lo
0xffff9140efdc    92  b.hi #+0x20 (addr 0xffff9140effc)
0xffff9140efe0    96  str x16, [x1]
0xffff9140efe4   100  ldr x1, [x26, #120]
0xffff9140efe8   104  str x1, [x2]
0xffff9140efec   108  orr x2, x2, #0x1
0xffff9140eff0   112  stur d0, [x2, #7]
0xffff9140eff4   116  mov x0, x2
0xffff9140eff8   120  ret
0xffff9140effc   124  sub csp, jssp, #0x10 (16)
0xffff9140f000   128  stp fp, lr, [jssp, #-16]!
0xffff9140f004   132  movz fp, #0xa00000000
0xffff9140f008   136  sub csp, jssp, #0x8 (8)
0xffff9140f00c   140  str fp, [jssp, #-8]!
0xffff9140f010   144  add fp, jssp, #0x8 (8)
0xffff9140f014   148  movz x2, #0x0
0xffff9140f018   152  mov x16, lr
0xffff9140f01c   156  ldr x17, pc+68 (addr 0x0000ffff9140f060)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140f020   160  blr x17
0xffff9140f024   164  ldur cp, [fp, #-8]
0xffff9140f028   168  movz x0, #0x0
0xffff9140f02c   172  movz x1, #0x4b48
0xffff9140f030   176  movk x1, #0xe4, lsl #16
0xffff9140f034   180  ldr x16, pc+52 (addr 0x0000ffff9140f068)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140f038   184  blr x16
0xffff9140f03c   188  str x0, [jssp, #16]
0xffff9140f040   192  ldr x16, pc+48 (addr 0x0000ffff9140f070)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140f044   196  blr x16
0xffff9140f048   200  ldr lr, [jssp, #16]
0xffff9140f04c   204  ldp xzr, fp, [jssp], #24
0xffff9140f050   208  b #-0x60 (addr 0xffff9140eff0)
0xffff9140f054   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff9140f058   216  d63f03e0       constant
0xffff9140f05c   220  d503201f       constant
0xffff9140f060   224  91406820       constant
0xffff9140f064   228  0000ffff       constant
0xffff9140f068   232  91406260       constant
0xffff9140f06c   236  0000ffff       constant
0xffff9140f070   240  914068e0       constant
0xffff9140f074   244  0000ffff       constant
0xffff9140f078   248  movz x16, #0x0
0xffff9140f07c   252  sub csp, jssp, #0x10 (16)
0xffff9140f080   256  stp fp, lr, [jssp, #-16]!
0xffff9140f084   260  bl #+0x14 (addr 0xffff9140f098)
0xffff9140f088   264  movz x16, #0x8
0xffff9140f08c   268  sub csp, jssp, #0x10 (16)
0xffff9140f090   272  stp fp, lr, [jssp, #-16]!
0xffff9140f094   276  bl #+0x4 (addr 0xffff9140f098)
0xffff9140f098   280  movz x17, #0xa00000000
0xffff9140f09c   284  sub csp, jssp, #0x10 (16)
0xffff9140f0a0   288  stp x17, cp, [jssp, #-16]!
0xffff9140f0a4   292  add fp, jssp, #0x10 (16)
0xffff9140f0a8   296  ldr x17, pc+24 (addr 0x0000ffff9140f0c0)    ;; lazy deoptimization bailout 0
0xffff9140f0ac   300  add x17, x17, x16
0xffff9140f0b0   304  br x17
0xffff9140f0b4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140f0b8   312  d63f03e0       constant
0xffff9140f0bc   316  d503201f       constant
0xffff9140f0c0   320  91206000       constant
0xffff9140f0c4   324  0000ffff       constant


Safepoints (size = 21)
0xffff9140f03c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9140f01c  code target (STUB)  (0xffff91406820)
0xffff9140f034  code target (STUB)  (0xffff91406260)
0xffff9140f040  code target (STUB)  (0xffff914068e0)
0xffff9140f054  constant pool (size 36)
0xffff9140f0a8  runtime entry
0xffff9140f0b4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6583
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 389)
0xffff9140f140     0  tbz w1, #0, #+0x34 (addr 0xffff9140f174)
0xffff9140f144     4  ldur x16, [x1, #-1]
0xffff9140f148     8  ldr x17, [x26, #120]
0xffff9140f14c    12  cmp x16, x17
0xffff9140f150    16  b.ne #+0xc (addr 0xffff9140f15c)
0xffff9140f154    20  ldur d0, [x1, #7]
0xffff9140f158    24  b #+0x20 (addr 0xffff9140f178)
0xffff9140f15c    28  ldr x16, [x26, #40]
0xffff9140f160    32  cmp x1, x16
0xffff9140f164    36  b.ne #+0xfc (addr 0xffff9140f260)
0xffff9140f168    40  ldr x2, [x26, #928]
0xffff9140f16c    44  ldur d0, [x2, #7]
0xffff9140f170    48  b #+0x8 (addr 0xffff9140f178)
0xffff9140f174    52  scvtf d0, x1, #32
0xffff9140f178    56  tbz w0, #0, #+0x34 (addr 0xffff9140f1ac)
0xffff9140f17c    60  ldur x16, [x0, #-1]
0xffff9140f180    64  ldr x17, [x26, #120]
0xffff9140f184    68  cmp x16, x17
0xffff9140f188    72  b.ne #+0xc (addr 0xffff9140f194)
0xffff9140f18c    76  ldur d1, [x0, #7]
0xffff9140f190    80  b #+0x20 (addr 0xffff9140f1b0)
0xffff9140f194    84  ldr x16, [x26, #40]
0xffff9140f198    88  cmp x0, x16
0xffff9140f19c    92  b.ne #+0xd4 (addr 0xffff9140f270)
0xffff9140f1a0    96  ldr x2, [x26, #928]
0xffff9140f1a4   100  ldur d1, [x2, #7]
0xffff9140f1a8   104  b #+0x8 (addr 0xffff9140f1b0)
0xffff9140f1ac   108  scvtf d1, x0, #32
0xffff9140f1b0   112  fadd d0, d0, d1
0xffff9140f1b4   116  movz x1, #0xf2c0
0xffff9140f1b8   120  movk x1, #0x4117, lsl #16
0xffff9140f1bc   124  ldp x2, x0, [x1]
0xffff9140f1c0   128  adds x16, x2, #0x10 (16)
0xffff9140f1c4   132  ccmp x16, x0, #nzCv, lo
0xffff9140f1c8   136  b.hi #+0x20 (addr 0xffff9140f1e8)
0xffff9140f1cc   140  str x16, [x1]
0xffff9140f1d0   144  ldr x1, [x26, #120]
0xffff9140f1d4   148  str x1, [x2]
0xffff9140f1d8   152  orr x2, x2, #0x1
0xffff9140f1dc   156  stur d0, [x2, #7]
0xffff9140f1e0   160  mov x0, x2
0xffff9140f1e4   164  ret
0xffff9140f1e8   168  sub csp, jssp, #0x10 (16)
0xffff9140f1ec   172  stp fp, lr, [jssp, #-16]!
0xffff9140f1f0   176  movz fp, #0xa00000000
0xffff9140f1f4   180  sub csp, jssp, #0x8 (8)
0xffff9140f1f8   184  str fp, [jssp, #-8]!
0xffff9140f1fc   188  add fp, jssp, #0x8 (8)
0xffff9140f200   192  movz x2, #0x0
0xffff9140f204   196  mov x16, lr
0xffff9140f208   200  ldr x17, pc+64 (addr 0x0000ffff9140f248)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140f20c   204  blr x17
0xffff9140f210   208  ldur cp, [fp, #-8]
0xffff9140f214   212  movz x0, #0x0
0xffff9140f218   216  movz x1, #0x4b48
0xffff9140f21c   220  movk x1, #0xe4, lsl #16
0xffff9140f220   224  ldr x16, pc+48 (addr 0x0000ffff9140f250)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140f224   228  blr x16
0xffff9140f228   232  str x0, [jssp, #16]
0xffff9140f22c   236  ldr x16, pc+44 (addr 0x0000ffff9140f258)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140f230   240  blr x16
0xffff9140f234   244  ldr lr, [jssp, #16]
0xffff9140f238   248  ldp xzr, fp, [jssp], #24
0xffff9140f23c   252  b #-0x60 (addr 0xffff9140f1dc)
0xffff9140f240   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140f244   260  d63f03e0       constant
0xffff9140f248   264  91406820       constant
0xffff9140f24c   268  0000ffff       constant
0xffff9140f250   272  91406260       constant
0xffff9140f254   276  0000ffff       constant
0xffff9140f258   280  914068e0       constant
0xffff9140f25c   284  0000ffff       constant
0xffff9140f260   288  movz x16, #0x0
0xffff9140f264   292  sub csp, jssp, #0x10 (16)
0xffff9140f268   296  stp fp, lr, [jssp, #-16]!
0xffff9140f26c   300  bl #+0x14 (addr 0xffff9140f280)
0xffff9140f270   304  movz x16, #0x8
0xffff9140f274   308  sub csp, jssp, #0x10 (16)
0xffff9140f278   312  stp fp, lr, [jssp, #-16]!
0xffff9140f27c   316  bl #+0x4 (addr 0xffff9140f280)
0xffff9140f280   320  movz x17, #0xa00000000
0xffff9140f284   324  sub csp, jssp, #0x10 (16)
0xffff9140f288   328  stp x17, cp, [jssp, #-16]!
0xffff9140f28c   332  add fp, jssp, #0x10 (16)
0xffff9140f290   336  ldr x17, pc+24 (addr 0x0000ffff9140f2a8)    ;; lazy deoptimization bailout 0
0xffff9140f294   340  add x17, x17, x16
0xffff9140f298   344  br x17
0xffff9140f29c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140f2a0   352  d63f03e0       constant
0xffff9140f2a4   356  d503201f       constant
0xffff9140f2a8   360  91206000       constant
0xffff9140f2ac   364  0000ffff       constant


Safepoints (size = 21)
0xffff9140f228   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9140f208  code target (STUB)  (0xffff91406820)
0xffff9140f220  code target (STUB)  (0xffff91406260)
0xffff9140f22c  code target (STUB)  (0xffff914068e0)
0xffff9140f240  constant pool (size 32)
0xffff9140f290  runtime entry
0xffff9140f29c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6583
type = NORMAL
name = BinaryOpICStub(ADD:Number*Number->Number)
compiler = crankshaft
Instructions (size = 389)
0xffff9140f140     0  tbz w1, #0, #+0x34 (addr 0xffff9140f174)
0xffff9140f144     4  ldur x16, [x1, #-1]
0xffff9140f148     8  ldr x17, [x26, #120]
0xffff9140f14c    12  cmp x16, x17
0xffff9140f150    16  b.ne #+0xc (addr 0xffff9140f15c)
0xffff9140f154    20  ldur d0, [x1, #7]
0xffff9140f158    24  b #+0x20 (addr 0xffff9140f178)
0xffff9140f15c    28  ldr x16, [x26, #40]
0xffff9140f160    32  cmp x1, x16
0xffff9140f164    36  b.ne #+0xfc (addr 0xffff9140f260)
0xffff9140f168    40  ldr x2, [x26, #928]
0xffff9140f16c    44  ldur d0, [x2, #7]
0xffff9140f170    48  b #+0x8 (addr 0xffff9140f178)
0xffff9140f174    52  scvtf d0, x1, #32
0xffff9140f178    56  tbz w0, #0, #+0x34 (addr 0xffff9140f1ac)
0xffff9140f17c    60  ldur x16, [x0, #-1]
0xffff9140f180    64  ldr x17, [x26, #120]
0xffff9140f184    68  cmp x16, x17
0xffff9140f188    72  b.ne #+0xc (addr 0xffff9140f194)
0xffff9140f18c    76  ldur d1, [x0, #7]
0xffff9140f190    80  b #+0x20 (addr 0xffff9140f1b0)
0xffff9140f194    84  ldr x16, [x26, #40]
0xffff9140f198    88  cmp x0, x16
0xffff9140f19c    92  b.ne #+0xd4 (addr 0xffff9140f270)
0xffff9140f1a0    96  ldr x2, [x26, #928]
0xffff9140f1a4   100  ldur d1, [x2, #7]
0xffff9140f1a8   104  b #+0x8 (addr 0xffff9140f1b0)
0xffff9140f1ac   108  scvtf d1, x0, #32
0xffff9140f1b0   112  fadd d0, d0, d1
0xffff9140f1b4   116  movz x1, #0xf2c0
0xffff9140f1b8   120  movk x1, #0x4117, lsl #16
0xffff9140f1bc   124  ldp x2, x0, [x1]
0xffff9140f1c0   128  adds x16, x2, #0x10 (16)
0xffff9140f1c4   132  ccmp x16, x0, #nzCv, lo
0xffff9140f1c8   136  b.hi #+0x20 (addr 0xffff9140f1e8)
0xffff9140f1cc   140  str x16, [x1]
0xffff9140f1d0   144  ldr x1, [x26, #120]
0xffff9140f1d4   148  str x1, [x2]
0xffff9140f1d8   152  orr x2, x2, #0x1
0xffff9140f1dc   156  stur d0, [x2, #7]
0xffff9140f1e0   160  mov x0, x2
0xffff9140f1e4   164  ret
0xffff9140f1e8   168  sub csp, jssp, #0x10 (16)
0xffff9140f1ec   172  stp fp, lr, [jssp, #-16]!
0xffff9140f1f0   176  movz fp, #0xa00000000
0xffff9140f1f4   180  sub csp, jssp, #0x8 (8)
0xffff9140f1f8   184  str fp, [jssp, #-8]!
0xffff9140f1fc   188  add fp, jssp, #0x8 (8)
0xffff9140f200   192  movz x2, #0x0
0xffff9140f204   196  mov x16, lr
0xffff9140f208   200  ldr x17, pc+64 (addr 0x0000ffff9140f248)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140f20c   204  blr x17
0xffff9140f210   208  ldur cp, [fp, #-8]
0xffff9140f214   212  movz x0, #0x0
0xffff9140f218   216  movz x1, #0x4b48
0xffff9140f21c   220  movk x1, #0xe4, lsl #16
0xffff9140f220   224  ldr x16, pc+48 (addr 0x0000ffff9140f250)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140f224   228  blr x16
0xffff9140f228   232  str x0, [jssp, #16]
0xffff9140f22c   236  ldr x16, pc+44 (addr 0x0000ffff9140f258)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140f230   240  blr x16
0xffff9140f234   244  ldr lr, [jssp, #16]
0xffff9140f238   248  ldp xzr, fp, [jssp], #24
0xffff9140f23c   252  b #-0x60 (addr 0xffff9140f1dc)
0xffff9140f240   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140f244   260  d63f03e0       constant
0xffff9140f248   264  91406820       constant
0xffff9140f24c   268  0000ffff       constant
0xffff9140f250   272  91406260       constant
0xffff9140f254   276  0000ffff       constant
0xffff9140f258   280  914068e0       constant
0xffff9140f25c   284  0000ffff       constant
0xffff9140f260   288  movz x16, #0x0
0xffff9140f264   292  sub csp, jssp, #0x10 (16)
0xffff9140f268   296  stp fp, lr, [jssp, #-16]!
0xffff9140f26c   300  bl #+0x14 (addr 0xffff9140f280)
0xffff9140f270   304  movz x16, #0x8
0xffff9140f274   308  sub csp, jssp, #0x10 (16)
0xffff9140f278   312  stp fp, lr, [jssp, #-16]!
0xffff9140f27c   316  bl #+0x4 (addr 0xffff9140f280)
0xffff9140f280   320  movz x17, #0xa00000000
0xffff9140f284   324  sub csp, jssp, #0x10 (16)
0xffff9140f288   328  stp x17, cp, [jssp, #-16]!
0xffff9140f28c   332  add fp, jssp, #0x10 (16)
0xffff9140f290   336  ldr x17, pc+24 (addr 0x0000ffff9140f2a8)    ;; lazy deoptimization bailout 0
0xffff9140f294   340  add x17, x17, x16
0xffff9140f298   344  br x17
0xffff9140f29c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140f2a0   352  d63f03e0       constant
0xffff9140f2a4   356  d503201f       constant
0xffff9140f2a8   360  91206000       constant
0xffff9140f2ac   364  0000ffff       constant


Safepoints (size = 21)
0xffff9140f228   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9140f208  code target (STUB)  (0xffff91406820)
0xffff9140f220  code target (STUB)  (0xffff91406260)
0xffff9140f22c  code target (STUB)  (0xffff914068e0)
0xffff9140f240  constant pool (size 32)
0xffff9140f290  runtime entry
0xffff9140f29c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2487
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff9140f340     0  mov x2, x0
0xffff9140f344     4  tbnz w2, #0, #+0xf4 (addr 0xffff9140f438)
0xffff9140f348     8  tbz w1, #0, #+0x34 (addr 0xffff9140f37c)
0xffff9140f34c    12  ldur x16, [x1, #-1]
0xffff9140f350    16  ldr x17, [x26, #120]
0xffff9140f354    20  cmp x16, x17
0xffff9140f358    24  b.ne #+0xc (addr 0xffff9140f364)
0xffff9140f35c    28  ldur d0, [x1, #7]
0xffff9140f360    32  b #+0x20 (addr 0xffff9140f380)
0xffff9140f364    36  ldr x16, [x26, #40]
0xffff9140f368    40  cmp x1, x16
0xffff9140f36c    44  b.ne #+0xdc (addr 0xffff9140f448)
0xffff9140f370    48  ldr x3, [x26, #928]
0xffff9140f374    52  ldur d0, [x3, #7]
0xffff9140f378    56  b #+0x8 (addr 0xffff9140f380)
0xffff9140f37c    60  scvtf d0, x1, #32
0xffff9140f380    64  scvtf d1, x2, #32
0xffff9140f384    68  fadd d0, d0, d1
0xffff9140f388    72  movz x1, #0xf2c0
0xffff9140f38c    76  movk x1, #0x4117, lsl #16
0xffff9140f390    80  ldp x2, x0, [x1]
0xffff9140f394    84  adds x16, x2, #0x10 (16)
0xffff9140f398    88  ccmp x16, x0, #nzCv, lo
0xffff9140f39c    92  b.hi #+0x20 (addr 0xffff9140f3bc)
0xffff9140f3a0    96  str x16, [x1]
0xffff9140f3a4   100  ldr x1, [x26, #120]
0xffff9140f3a8   104  str x1, [x2]
0xffff9140f3ac   108  orr x2, x2, #0x1
0xffff9140f3b0   112  stur d0, [x2, #7]
0xffff9140f3b4   116  mov x0, x2
0xffff9140f3b8   120  ret
0xffff9140f3bc   124  sub csp, jssp, #0x10 (16)
0xffff9140f3c0   128  stp fp, lr, [jssp, #-16]!
0xffff9140f3c4   132  movz fp, #0xa00000000
0xffff9140f3c8   136  sub csp, jssp, #0x8 (8)
0xffff9140f3cc   140  str fp, [jssp, #-8]!
0xffff9140f3d0   144  add fp, jssp, #0x8 (8)
0xffff9140f3d4   148  movz x2, #0x0
0xffff9140f3d8   152  mov x16, lr
0xffff9140f3dc   156  ldr x17, pc+68 (addr 0x0000ffff9140f420)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140f3e0   160  blr x17
0xffff9140f3e4   164  ldur cp, [fp, #-8]
0xffff9140f3e8   168  movz x0, #0x0
0xffff9140f3ec   172  movz x1, #0x4b48
0xffff9140f3f0   176  movk x1, #0xe4, lsl #16
0xffff9140f3f4   180  ldr x16, pc+52 (addr 0x0000ffff9140f428)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140f3f8   184  blr x16
0xffff9140f3fc   188  str x0, [jssp, #16]
0xffff9140f400   192  ldr x16, pc+48 (addr 0x0000ffff9140f430)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140f404   196  blr x16
0xffff9140f408   200  ldr lr, [jssp, #16]
0xffff9140f40c   204  ldp xzr, fp, [jssp], #24
0xffff9140f410   208  b #-0x60 (addr 0xffff9140f3b0)
0xffff9140f414   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff9140f418   216  d63f03e0       constant
0xffff9140f41c   220  d503201f       constant
0xffff9140f420   224  91406820       constant
0xffff9140f424   228  0000ffff       constant
0xffff9140f428   232  91406260       constant
0xffff9140f42c   236  0000ffff       constant
0xffff9140f430   240  914068e0       constant
0xffff9140f434   244  0000ffff       constant
0xffff9140f438   248  movz x16, #0x0
0xffff9140f43c   252  sub csp, jssp, #0x10 (16)
0xffff9140f440   256  stp fp, lr, [jssp, #-16]!
0xffff9140f444   260  bl #+0x14 (addr 0xffff9140f458)
0xffff9140f448   264  movz x16, #0x8
0xffff9140f44c   268  sub csp, jssp, #0x10 (16)
0xffff9140f450   272  stp fp, lr, [jssp, #-16]!
0xffff9140f454   276  bl #+0x4 (addr 0xffff9140f458)
0xffff9140f458   280  movz x17, #0xa00000000
0xffff9140f45c   284  sub csp, jssp, #0x10 (16)
0xffff9140f460   288  stp x17, cp, [jssp, #-16]!
0xffff9140f464   292  add fp, jssp, #0x10 (16)
0xffff9140f468   296  ldr x17, pc+24 (addr 0x0000ffff9140f480)    ;; lazy deoptimization bailout 0
0xffff9140f46c   300  add x17, x17, x16
0xffff9140f470   304  br x17
0xffff9140f474   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140f478   312  d63f03e0       constant
0xffff9140f47c   316  d503201f       constant
0xffff9140f480   320  91206000       constant
0xffff9140f484   324  0000ffff       constant


Safepoints (size = 21)
0xffff9140f3fc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9140f3dc  code target (STUB)  (0xffff91406820)
0xffff9140f3f4  code target (STUB)  (0xffff91406260)
0xffff9140f400  code target (STUB)  (0xffff914068e0)
0xffff9140f414  constant pool (size 36)
0xffff9140f468  runtime entry
0xffff9140f474  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2487
type = NORMAL
name = BinaryOpICStub(ADD:Number*Smi->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff9140f340     0  mov x2, x0
0xffff9140f344     4  tbnz w2, #0, #+0xf4 (addr 0xffff9140f438)
0xffff9140f348     8  tbz w1, #0, #+0x34 (addr 0xffff9140f37c)
0xffff9140f34c    12  ldur x16, [x1, #-1]
0xffff9140f350    16  ldr x17, [x26, #120]
0xffff9140f354    20  cmp x16, x17
0xffff9140f358    24  b.ne #+0xc (addr 0xffff9140f364)
0xffff9140f35c    28  ldur d0, [x1, #7]
0xffff9140f360    32  b #+0x20 (addr 0xffff9140f380)
0xffff9140f364    36  ldr x16, [x26, #40]
0xffff9140f368    40  cmp x1, x16
0xffff9140f36c    44  b.ne #+0xdc (addr 0xffff9140f448)
0xffff9140f370    48  ldr x3, [x26, #928]
0xffff9140f374    52  ldur d0, [x3, #7]
0xffff9140f378    56  b #+0x8 (addr 0xffff9140f380)
0xffff9140f37c    60  scvtf d0, x1, #32
0xffff9140f380    64  scvtf d1, x2, #32
0xffff9140f384    68  fadd d0, d0, d1
0xffff9140f388    72  movz x1, #0xf2c0
0xffff9140f38c    76  movk x1, #0x4117, lsl #16
0xffff9140f390    80  ldp x2, x0, [x1]
0xffff9140f394    84  adds x16, x2, #0x10 (16)
0xffff9140f398    88  ccmp x16, x0, #nzCv, lo
0xffff9140f39c    92  b.hi #+0x20 (addr 0xffff9140f3bc)
0xffff9140f3a0    96  str x16, [x1]
0xffff9140f3a4   100  ldr x1, [x26, #120]
0xffff9140f3a8   104  str x1, [x2]
0xffff9140f3ac   108  orr x2, x2, #0x1
0xffff9140f3b0   112  stur d0, [x2, #7]
0xffff9140f3b4   116  mov x0, x2
0xffff9140f3b8   120  ret
0xffff9140f3bc   124  sub csp, jssp, #0x10 (16)
0xffff9140f3c0   128  stp fp, lr, [jssp, #-16]!
0xffff9140f3c4   132  movz fp, #0xa00000000
0xffff9140f3c8   136  sub csp, jssp, #0x8 (8)
0xffff9140f3cc   140  str fp, [jssp, #-8]!
0xffff9140f3d0   144  add fp, jssp, #0x8 (8)
0xffff9140f3d4   148  movz x2, #0x0
0xffff9140f3d8   152  mov x16, lr
0xffff9140f3dc   156  ldr x17, pc+68 (addr 0x0000ffff9140f420)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140f3e0   160  blr x17
0xffff9140f3e4   164  ldur cp, [fp, #-8]
0xffff9140f3e8   168  movz x0, #0x0
0xffff9140f3ec   172  movz x1, #0x4b48
0xffff9140f3f0   176  movk x1, #0xe4, lsl #16
0xffff9140f3f4   180  ldr x16, pc+52 (addr 0x0000ffff9140f428)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140f3f8   184  blr x16
0xffff9140f3fc   188  str x0, [jssp, #16]
0xffff9140f400   192  ldr x16, pc+48 (addr 0x0000ffff9140f430)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140f404   196  blr x16
0xffff9140f408   200  ldr lr, [jssp, #16]
0xffff9140f40c   204  ldp xzr, fp, [jssp], #24
0xffff9140f410   208  b #-0x60 (addr 0xffff9140f3b0)
0xffff9140f414   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff9140f418   216  d63f03e0       constant
0xffff9140f41c   220  d503201f       constant
0xffff9140f420   224  91406820       constant
0xffff9140f424   228  0000ffff       constant
0xffff9140f428   232  91406260       constant
0xffff9140f42c   236  0000ffff       constant
0xffff9140f430   240  914068e0       constant
0xffff9140f434   244  0000ffff       constant
0xffff9140f438   248  movz x16, #0x0
0xffff9140f43c   252  sub csp, jssp, #0x10 (16)
0xffff9140f440   256  stp fp, lr, [jssp, #-16]!
0xffff9140f444   260  bl #+0x14 (addr 0xffff9140f458)
0xffff9140f448   264  movz x16, #0x8
0xffff9140f44c   268  sub csp, jssp, #0x10 (16)
0xffff9140f450   272  stp fp, lr, [jssp, #-16]!
0xffff9140f454   276  bl #+0x4 (addr 0xffff9140f458)
0xffff9140f458   280  movz x17, #0xa00000000
0xffff9140f45c   284  sub csp, jssp, #0x10 (16)
0xffff9140f460   288  stp x17, cp, [jssp, #-16]!
0xffff9140f464   292  add fp, jssp, #0x10 (16)
0xffff9140f468   296  ldr x17, pc+24 (addr 0x0000ffff9140f480)    ;; lazy deoptimization bailout 0
0xffff9140f46c   300  add x17, x17, x16
0xffff9140f470   304  br x17
0xffff9140f474   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140f478   312  d63f03e0       constant
0xffff9140f47c   316  d503201f       constant
0xffff9140f480   320  91206000       constant
0xffff9140f484   324  0000ffff       constant


Safepoints (size = 21)
0xffff9140f3fc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9140f3dc  code target (STUB)  (0xffff91406820)
0xffff9140f3f4  code target (STUB)  (0xffff91406260)
0xffff9140f400  code target (STUB)  (0xffff914068e0)
0xffff9140f414  constant pool (size 36)
0xffff9140f468  runtime entry
0xffff9140f474  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4263
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff9140f500     0  mov x2, x1
0xffff9140f504     4  tbnz w2, #0, #+0x1c (addr 0xffff9140f520)
0xffff9140f508     8  mov x3, x0
0xffff9140f50c    12  tbnz w3, #0, #+0x24 (addr 0xffff9140f530)
0xffff9140f510    16  adds x2, x3, x2
0xffff9140f514    20  b.vs #+0x2c (addr 0xffff9140f540)
0xffff9140f518    24  mov x0, x2
0xffff9140f51c    28  ret
0xffff9140f520    32  movz x16, #0x0
0xffff9140f524    36  sub csp, jssp, #0x10 (16)
0xffff9140f528    40  stp fp, lr, [jssp, #-16]!
0xffff9140f52c    44  bl #+0x24 (addr 0xffff9140f550)
0xffff9140f530    48  movz x16, #0x8
0xffff9140f534    52  sub csp, jssp, #0x10 (16)
0xffff9140f538    56  stp fp, lr, [jssp, #-16]!
0xffff9140f53c    60  bl #+0x14 (addr 0xffff9140f550)
0xffff9140f540    64  movz x16, #0x10
0xffff9140f544    68  sub csp, jssp, #0x10 (16)
0xffff9140f548    72  stp fp, lr, [jssp, #-16]!
0xffff9140f54c    76  bl #+0x4 (addr 0xffff9140f550)
0xffff9140f550    80  movz x17, #0xa00000000
0xffff9140f554    84  sub csp, jssp, #0x10 (16)
0xffff9140f558    88  stp x17, cp, [jssp, #-16]!
0xffff9140f55c    92  add fp, jssp, #0x10 (16)
0xffff9140f560    96  ldr x17, pc+24 (addr 0x0000ffff9140f578)    ;; lazy deoptimization bailout 0
0xffff9140f564   100  add x17, x17, x16
0xffff9140f568   104  br x17
0xffff9140f56c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140f570   112  d63f03e0       constant
0xffff9140f574   116  d503201f       constant
0xffff9140f578   120  91206000       constant
0xffff9140f57c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140f560  runtime entry
0xffff9140f56c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4263
type = NORMAL
name = BinaryOpICStub(ADD:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff9140f500     0  mov x2, x1
0xffff9140f504     4  tbnz w2, #0, #+0x1c (addr 0xffff9140f520)
0xffff9140f508     8  mov x3, x0
0xffff9140f50c    12  tbnz w3, #0, #+0x24 (addr 0xffff9140f530)
0xffff9140f510    16  adds x2, x3, x2
0xffff9140f514    20  b.vs #+0x2c (addr 0xffff9140f540)
0xffff9140f518    24  mov x0, x2
0xffff9140f51c    28  ret
0xffff9140f520    32  movz x16, #0x0
0xffff9140f524    36  sub csp, jssp, #0x10 (16)
0xffff9140f528    40  stp fp, lr, [jssp, #-16]!
0xffff9140f52c    44  bl #+0x24 (addr 0xffff9140f550)
0xffff9140f530    48  movz x16, #0x8
0xffff9140f534    52  sub csp, jssp, #0x10 (16)
0xffff9140f538    56  stp fp, lr, [jssp, #-16]!
0xffff9140f53c    60  bl #+0x14 (addr 0xffff9140f550)
0xffff9140f540    64  movz x16, #0x10
0xffff9140f544    68  sub csp, jssp, #0x10 (16)
0xffff9140f548    72  stp fp, lr, [jssp, #-16]!
0xffff9140f54c    76  bl #+0x4 (addr 0xffff9140f550)
0xffff9140f550    80  movz x17, #0xa00000000
0xffff9140f554    84  sub csp, jssp, #0x10 (16)
0xffff9140f558    88  stp x17, cp, [jssp, #-16]!
0xffff9140f55c    92  add fp, jssp, #0x10 (16)
0xffff9140f560    96  ldr x17, pc+24 (addr 0x0000ffff9140f578)    ;; lazy deoptimization bailout 0
0xffff9140f564   100  add x17, x17, x16
0xffff9140f568   104  br x17
0xffff9140f56c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140f570   112  d63f03e0       constant
0xffff9140f574   116  d503201f       constant
0xffff9140f578   120  91206000       constant
0xffff9140f57c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140f560  runtime entry
0xffff9140f56c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4279
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff9140f600     0  mov x2, x1
0xffff9140f604     4  tbnz w2, #0, #+0xc4 (addr 0xffff9140f6c8)
0xffff9140f608     8  mov x3, x0
0xffff9140f60c    12  tbnz w3, #0, #+0xcc (addr 0xffff9140f6d8)
0xffff9140f610    16  scvtf d0, x2, #32
0xffff9140f614    20  scvtf d1, x3, #32
0xffff9140f618    24  fadd d0, d0, d1
0xffff9140f61c    28  movz x1, #0xf2c0
0xffff9140f620    32  movk x1, #0x4117, lsl #16
0xffff9140f624    36  ldp x2, x0, [x1]
0xffff9140f628    40  adds x16, x2, #0x10 (16)
0xffff9140f62c    44  ccmp x16, x0, #nzCv, lo
0xffff9140f630    48  b.hi #+0x20 (addr 0xffff9140f650)
0xffff9140f634    52  str x16, [x1]
0xffff9140f638    56  ldr x1, [x26, #120]
0xffff9140f63c    60  str x1, [x2]
0xffff9140f640    64  orr x2, x2, #0x1
0xffff9140f644    68  stur d0, [x2, #7]
0xffff9140f648    72  mov x0, x2
0xffff9140f64c    76  ret
0xffff9140f650    80  sub csp, jssp, #0x10 (16)
0xffff9140f654    84  stp fp, lr, [jssp, #-16]!
0xffff9140f658    88  movz fp, #0xa00000000
0xffff9140f65c    92  sub csp, jssp, #0x8 (8)
0xffff9140f660    96  str fp, [jssp, #-8]!
0xffff9140f664   100  add fp, jssp, #0x8 (8)
0xffff9140f668   104  movz x2, #0x0
0xffff9140f66c   108  mov x16, lr
0xffff9140f670   112  ldr x17, pc+64 (addr 0x0000ffff9140f6b0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140f674   116  blr x17
0xffff9140f678   120  ldur cp, [fp, #-8]
0xffff9140f67c   124  movz x0, #0x0
0xffff9140f680   128  movz x1, #0x4b48
0xffff9140f684   132  movk x1, #0xe4, lsl #16
0xffff9140f688   136  ldr x16, pc+48 (addr 0x0000ffff9140f6b8)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140f68c   140  blr x16
0xffff9140f690   144  str x0, [jssp, #16]
0xffff9140f694   148  ldr x16, pc+44 (addr 0x0000ffff9140f6c0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140f698   152  blr x16
0xffff9140f69c   156  ldr lr, [jssp, #16]
0xffff9140f6a0   160  ldp xzr, fp, [jssp], #24
0xffff9140f6a4   164  b #-0x60 (addr 0xffff9140f644)
0xffff9140f6a8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140f6ac   172  d63f03e0       constant
0xffff9140f6b0   176  91406820       constant
0xffff9140f6b4   180  0000ffff       constant
0xffff9140f6b8   184  91406260       constant
0xffff9140f6bc   188  0000ffff       constant
0xffff9140f6c0   192  914068e0       constant
0xffff9140f6c4   196  0000ffff       constant
0xffff9140f6c8   200  movz x16, #0x0
0xffff9140f6cc   204  sub csp, jssp, #0x10 (16)
0xffff9140f6d0   208  stp fp, lr, [jssp, #-16]!
0xffff9140f6d4   212  bl #+0x14 (addr 0xffff9140f6e8)
0xffff9140f6d8   216  movz x16, #0x8
0xffff9140f6dc   220  sub csp, jssp, #0x10 (16)
0xffff9140f6e0   224  stp fp, lr, [jssp, #-16]!
0xffff9140f6e4   228  bl #+0x4 (addr 0xffff9140f6e8)
0xffff9140f6e8   232  movz x17, #0xa00000000
0xffff9140f6ec   236  sub csp, jssp, #0x10 (16)
0xffff9140f6f0   240  stp x17, cp, [jssp, #-16]!
0xffff9140f6f4   244  add fp, jssp, #0x10 (16)
0xffff9140f6f8   248  ldr x17, pc+24 (addr 0x0000ffff9140f710)    ;; lazy deoptimization bailout 0
0xffff9140f6fc   252  add x17, x17, x16
0xffff9140f700   256  br x17
0xffff9140f704   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140f708   264  d63f03e0       constant
0xffff9140f70c   268  d503201f       constant
0xffff9140f710   272  91206000       constant
0xffff9140f714   276  0000ffff       constant


Safepoints (size = 21)
0xffff9140f690   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9140f670  code target (STUB)  (0xffff91406820)
0xffff9140f688  code target (STUB)  (0xffff91406260)
0xffff9140f694  code target (STUB)  (0xffff914068e0)
0xffff9140f6a8  constant pool (size 32)
0xffff9140f6f8  runtime entry
0xffff9140f704  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4279
type = NORMAL
name = BinaryOpICStub(ADD:Smi*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff9140f600     0  mov x2, x1
0xffff9140f604     4  tbnz w2, #0, #+0xc4 (addr 0xffff9140f6c8)
0xffff9140f608     8  mov x3, x0
0xffff9140f60c    12  tbnz w3, #0, #+0xcc (addr 0xffff9140f6d8)
0xffff9140f610    16  scvtf d0, x2, #32
0xffff9140f614    20  scvtf d1, x3, #32
0xffff9140f618    24  fadd d0, d0, d1
0xffff9140f61c    28  movz x1, #0xf2c0
0xffff9140f620    32  movk x1, #0x4117, lsl #16
0xffff9140f624    36  ldp x2, x0, [x1]
0xffff9140f628    40  adds x16, x2, #0x10 (16)
0xffff9140f62c    44  ccmp x16, x0, #nzCv, lo
0xffff9140f630    48  b.hi #+0x20 (addr 0xffff9140f650)
0xffff9140f634    52  str x16, [x1]
0xffff9140f638    56  ldr x1, [x26, #120]
0xffff9140f63c    60  str x1, [x2]
0xffff9140f640    64  orr x2, x2, #0x1
0xffff9140f644    68  stur d0, [x2, #7]
0xffff9140f648    72  mov x0, x2
0xffff9140f64c    76  ret
0xffff9140f650    80  sub csp, jssp, #0x10 (16)
0xffff9140f654    84  stp fp, lr, [jssp, #-16]!
0xffff9140f658    88  movz fp, #0xa00000000
0xffff9140f65c    92  sub csp, jssp, #0x8 (8)
0xffff9140f660    96  str fp, [jssp, #-8]!
0xffff9140f664   100  add fp, jssp, #0x8 (8)
0xffff9140f668   104  movz x2, #0x0
0xffff9140f66c   108  mov x16, lr
0xffff9140f670   112  ldr x17, pc+64 (addr 0x0000ffff9140f6b0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140f674   116  blr x17
0xffff9140f678   120  ldur cp, [fp, #-8]
0xffff9140f67c   124  movz x0, #0x0
0xffff9140f680   128  movz x1, #0x4b48
0xffff9140f684   132  movk x1, #0xe4, lsl #16
0xffff9140f688   136  ldr x16, pc+48 (addr 0x0000ffff9140f6b8)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140f68c   140  blr x16
0xffff9140f690   144  str x0, [jssp, #16]
0xffff9140f694   148  ldr x16, pc+44 (addr 0x0000ffff9140f6c0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140f698   152  blr x16
0xffff9140f69c   156  ldr lr, [jssp, #16]
0xffff9140f6a0   160  ldp xzr, fp, [jssp], #24
0xffff9140f6a4   164  b #-0x60 (addr 0xffff9140f644)
0xffff9140f6a8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9140f6ac   172  d63f03e0       constant
0xffff9140f6b0   176  91406820       constant
0xffff9140f6b4   180  0000ffff       constant
0xffff9140f6b8   184  91406260       constant
0xffff9140f6bc   188  0000ffff       constant
0xffff9140f6c0   192  914068e0       constant
0xffff9140f6c4   196  0000ffff       constant
0xffff9140f6c8   200  movz x16, #0x0
0xffff9140f6cc   204  sub csp, jssp, #0x10 (16)
0xffff9140f6d0   208  stp fp, lr, [jssp, #-16]!
0xffff9140f6d4   212  bl #+0x14 (addr 0xffff9140f6e8)
0xffff9140f6d8   216  movz x16, #0x8
0xffff9140f6dc   220  sub csp, jssp, #0x10 (16)
0xffff9140f6e0   224  stp fp, lr, [jssp, #-16]!
0xffff9140f6e4   228  bl #+0x4 (addr 0xffff9140f6e8)
0xffff9140f6e8   232  movz x17, #0xa00000000
0xffff9140f6ec   236  sub csp, jssp, #0x10 (16)
0xffff9140f6f0   240  stp x17, cp, [jssp, #-16]!
0xffff9140f6f4   244  add fp, jssp, #0x10 (16)
0xffff9140f6f8   248  ldr x17, pc+24 (addr 0x0000ffff9140f710)    ;; lazy deoptimization bailout 0
0xffff9140f6fc   252  add x17, x17, x16
0xffff9140f700   256  br x17
0xffff9140f704   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140f708   264  d63f03e0       constant
0xffff9140f70c   268  d503201f       constant
0xffff9140f710   272  91206000       constant
0xffff9140f714   276  0000ffff       constant


Safepoints (size = 21)
0xffff9140f690   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9140f670  code target (STUB)  (0xffff91406820)
0xffff9140f688  code target (STUB)  (0xffff91406260)
0xffff9140f694  code target (STUB)  (0xffff914068e0)
0xffff9140f6a8  constant pool (size 32)
0xffff9140f6f8  runtime entry
0xffff9140f704  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6327
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff9140f7a0     0  mov x2, x1
0xffff9140f7a4     4  tbnz w2, #0, #+0xf4 (addr 0xffff9140f898)
0xffff9140f7a8     8  tbz w0, #0, #+0x34 (addr 0xffff9140f7dc)
0xffff9140f7ac    12  ldur x16, [x0, #-1]
0xffff9140f7b0    16  ldr x17, [x26, #120]
0xffff9140f7b4    20  cmp x16, x17
0xffff9140f7b8    24  b.ne #+0xc (addr 0xffff9140f7c4)
0xffff9140f7bc    28  ldur d0, [x0, #7]
0xffff9140f7c0    32  b #+0x20 (addr 0xffff9140f7e0)
0xffff9140f7c4    36  ldr x16, [x26, #40]
0xffff9140f7c8    40  cmp x0, x16
0xffff9140f7cc    44  b.ne #+0xdc (addr 0xffff9140f8a8)
0xffff9140f7d0    48  ldr x3, [x26, #928]
0xffff9140f7d4    52  ldur d0, [x3, #7]
0xffff9140f7d8    56  b #+0x8 (addr 0xffff9140f7e0)
0xffff9140f7dc    60  scvtf d0, x0, #32
0xffff9140f7e0    64  scvtf d1, x2, #32
0xffff9140f7e4    68  fadd d0, d1, d0
0xffff9140f7e8    72  movz x1, #0xf2c0
0xffff9140f7ec    76  movk x1, #0x4117, lsl #16
0xffff9140f7f0    80  ldp x2, x0, [x1]
0xffff9140f7f4    84  adds x16, x2, #0x10 (16)
0xffff9140f7f8    88  ccmp x16, x0, #nzCv, lo
0xffff9140f7fc    92  b.hi #+0x20 (addr 0xffff9140f81c)
0xffff9140f800    96  str x16, [x1]
0xffff9140f804   100  ldr x1, [x26, #120]
0xffff9140f808   104  str x1, [x2]
0xffff9140f80c   108  orr x2, x2, #0x1
0xffff9140f810   112  stur d0, [x2, #7]
0xffff9140f814   116  mov x0, x2
0xffff9140f818   120  ret
0xffff9140f81c   124  sub csp, jssp, #0x10 (16)
0xffff9140f820   128  stp fp, lr, [jssp, #-16]!
0xffff9140f824   132  movz fp, #0xa00000000
0xffff9140f828   136  sub csp, jssp, #0x8 (8)
0xffff9140f82c   140  str fp, [jssp, #-8]!
0xffff9140f830   144  add fp, jssp, #0x8 (8)
0xffff9140f834   148  movz x2, #0x0
0xffff9140f838   152  mov x16, lr
0xffff9140f83c   156  ldr x17, pc+68 (addr 0x0000ffff9140f880)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140f840   160  blr x17
0xffff9140f844   164  ldur cp, [fp, #-8]
0xffff9140f848   168  movz x0, #0x0
0xffff9140f84c   172  movz x1, #0x4b48
0xffff9140f850   176  movk x1, #0xe4, lsl #16
0xffff9140f854   180  ldr x16, pc+52 (addr 0x0000ffff9140f888)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140f858   184  blr x16
0xffff9140f85c   188  str x0, [jssp, #16]
0xffff9140f860   192  ldr x16, pc+48 (addr 0x0000ffff9140f890)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140f864   196  blr x16
0xffff9140f868   200  ldr lr, [jssp, #16]
0xffff9140f86c   204  ldp xzr, fp, [jssp], #24
0xffff9140f870   208  b #-0x60 (addr 0xffff9140f810)
0xffff9140f874   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff9140f878   216  d63f03e0       constant
0xffff9140f87c   220  d503201f       constant
0xffff9140f880   224  91406820       constant
0xffff9140f884   228  0000ffff       constant
0xffff9140f888   232  91406260       constant
0xffff9140f88c   236  0000ffff       constant
0xffff9140f890   240  914068e0       constant
0xffff9140f894   244  0000ffff       constant
0xffff9140f898   248  movz x16, #0x0
0xffff9140f89c   252  sub csp, jssp, #0x10 (16)
0xffff9140f8a0   256  stp fp, lr, [jssp, #-16]!
0xffff9140f8a4   260  bl #+0x14 (addr 0xffff9140f8b8)
0xffff9140f8a8   264  movz x16, #0x8
0xffff9140f8ac   268  sub csp, jssp, #0x10 (16)
0xffff9140f8b0   272  stp fp, lr, [jssp, #-16]!
0xffff9140f8b4   276  bl #+0x4 (addr 0xffff9140f8b8)
0xffff9140f8b8   280  movz x17, #0xa00000000
0xffff9140f8bc   284  sub csp, jssp, #0x10 (16)
0xffff9140f8c0   288  stp x17, cp, [jssp, #-16]!
0xffff9140f8c4   292  add fp, jssp, #0x10 (16)
0xffff9140f8c8   296  ldr x17, pc+24 (addr 0x0000ffff9140f8e0)    ;; lazy deoptimization bailout 0
0xffff9140f8cc   300  add x17, x17, x16
0xffff9140f8d0   304  br x17
0xffff9140f8d4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140f8d8   312  d63f03e0       constant
0xffff9140f8dc   316  d503201f       constant
0xffff9140f8e0   320  91206000       constant
0xffff9140f8e4   324  0000ffff       constant


Safepoints (size = 21)
0xffff9140f85c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9140f83c  code target (STUB)  (0xffff91406820)
0xffff9140f854  code target (STUB)  (0xffff91406260)
0xffff9140f860  code target (STUB)  (0xffff914068e0)
0xffff9140f874  constant pool (size 36)
0xffff9140f8c8  runtime entry
0xffff9140f8d4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6327
type = NORMAL
name = BinaryOpICStub(ADD:Smi*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff9140f7a0     0  mov x2, x1
0xffff9140f7a4     4  tbnz w2, #0, #+0xf4 (addr 0xffff9140f898)
0xffff9140f7a8     8  tbz w0, #0, #+0x34 (addr 0xffff9140f7dc)
0xffff9140f7ac    12  ldur x16, [x0, #-1]
0xffff9140f7b0    16  ldr x17, [x26, #120]
0xffff9140f7b4    20  cmp x16, x17
0xffff9140f7b8    24  b.ne #+0xc (addr 0xffff9140f7c4)
0xffff9140f7bc    28  ldur d0, [x0, #7]
0xffff9140f7c0    32  b #+0x20 (addr 0xffff9140f7e0)
0xffff9140f7c4    36  ldr x16, [x26, #40]
0xffff9140f7c8    40  cmp x0, x16
0xffff9140f7cc    44  b.ne #+0xdc (addr 0xffff9140f8a8)
0xffff9140f7d0    48  ldr x3, [x26, #928]
0xffff9140f7d4    52  ldur d0, [x3, #7]
0xffff9140f7d8    56  b #+0x8 (addr 0xffff9140f7e0)
0xffff9140f7dc    60  scvtf d0, x0, #32
0xffff9140f7e0    64  scvtf d1, x2, #32
0xffff9140f7e4    68  fadd d0, d1, d0
0xffff9140f7e8    72  movz x1, #0xf2c0
0xffff9140f7ec    76  movk x1, #0x4117, lsl #16
0xffff9140f7f0    80  ldp x2, x0, [x1]
0xffff9140f7f4    84  adds x16, x2, #0x10 (16)
0xffff9140f7f8    88  ccmp x16, x0, #nzCv, lo
0xffff9140f7fc    92  b.hi #+0x20 (addr 0xffff9140f81c)
0xffff9140f800    96  str x16, [x1]
0xffff9140f804   100  ldr x1, [x26, #120]
0xffff9140f808   104  str x1, [x2]
0xffff9140f80c   108  orr x2, x2, #0x1
0xffff9140f810   112  stur d0, [x2, #7]
0xffff9140f814   116  mov x0, x2
0xffff9140f818   120  ret
0xffff9140f81c   124  sub csp, jssp, #0x10 (16)
0xffff9140f820   128  stp fp, lr, [jssp, #-16]!
0xffff9140f824   132  movz fp, #0xa00000000
0xffff9140f828   136  sub csp, jssp, #0x8 (8)
0xffff9140f82c   140  str fp, [jssp, #-8]!
0xffff9140f830   144  add fp, jssp, #0x8 (8)
0xffff9140f834   148  movz x2, #0x0
0xffff9140f838   152  mov x16, lr
0xffff9140f83c   156  ldr x17, pc+68 (addr 0x0000ffff9140f880)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9140f840   160  blr x17
0xffff9140f844   164  ldur cp, [fp, #-8]
0xffff9140f848   168  movz x0, #0x0
0xffff9140f84c   172  movz x1, #0x4b48
0xffff9140f850   176  movk x1, #0xe4, lsl #16
0xffff9140f854   180  ldr x16, pc+52 (addr 0x0000ffff9140f888)    ;; code: STUB, CEntryStub, minor: 5
0xffff9140f858   184  blr x16
0xffff9140f85c   188  str x0, [jssp, #16]
0xffff9140f860   192  ldr x16, pc+48 (addr 0x0000ffff9140f890)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9140f864   196  blr x16
0xffff9140f868   200  ldr lr, [jssp, #16]
0xffff9140f86c   204  ldp xzr, fp, [jssp], #24
0xffff9140f870   208  b #-0x60 (addr 0xffff9140f810)
0xffff9140f874   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff9140f878   216  d63f03e0       constant
0xffff9140f87c   220  d503201f       constant
0xffff9140f880   224  91406820       constant
0xffff9140f884   228  0000ffff       constant
0xffff9140f888   232  91406260       constant
0xffff9140f88c   236  0000ffff       constant
0xffff9140f890   240  914068e0       constant
0xffff9140f894   244  0000ffff       constant
0xffff9140f898   248  movz x16, #0x0
0xffff9140f89c   252  sub csp, jssp, #0x10 (16)
0xffff9140f8a0   256  stp fp, lr, [jssp, #-16]!
0xffff9140f8a4   260  bl #+0x14 (addr 0xffff9140f8b8)
0xffff9140f8a8   264  movz x16, #0x8
0xffff9140f8ac   268  sub csp, jssp, #0x10 (16)
0xffff9140f8b0   272  stp fp, lr, [jssp, #-16]!
0xffff9140f8b4   276  bl #+0x4 (addr 0xffff9140f8b8)
0xffff9140f8b8   280  movz x17, #0xa00000000
0xffff9140f8bc   284  sub csp, jssp, #0x10 (16)
0xffff9140f8c0   288  stp x17, cp, [jssp, #-16]!
0xffff9140f8c4   292  add fp, jssp, #0x10 (16)
0xffff9140f8c8   296  ldr x17, pc+24 (addr 0x0000ffff9140f8e0)    ;; lazy deoptimization bailout 0
0xffff9140f8cc   300  add x17, x17, x16
0xffff9140f8d0   304  br x17
0xffff9140f8d4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140f8d8   312  d63f03e0       constant
0xffff9140f8dc   316  d503201f       constant
0xffff9140f8e0   320  91206000       constant
0xffff9140f8e4   324  0000ffff       constant


Safepoints (size = 21)
0xffff9140f85c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9140f83c  code target (STUB)  (0xffff91406820)
0xffff9140f854  code target (STUB)  (0xffff91406260)
0xffff9140f860  code target (STUB)  (0xffff914068e0)
0xffff9140f874  constant pool (size 36)
0xffff9140f8c8  runtime entry
0xffff9140f8d4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2215
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff9140f960     0  mov x2, x1
0xffff9140f964     4  tbnz w2, #0, #+0x1c (addr 0xffff9140f980)
0xffff9140f968     8  mov x3, x0
0xffff9140f96c    12  tbnz w3, #0, #+0x24 (addr 0xffff9140f990)
0xffff9140f970    16  adds x2, x3, x2
0xffff9140f974    20  b.vs #+0x2c (addr 0xffff9140f9a0)
0xffff9140f978    24  mov x0, x2
0xffff9140f97c    28  ret
0xffff9140f980    32  movz x16, #0x0
0xffff9140f984    36  sub csp, jssp, #0x10 (16)
0xffff9140f988    40  stp fp, lr, [jssp, #-16]!
0xffff9140f98c    44  bl #+0x24 (addr 0xffff9140f9b0)
0xffff9140f990    48  movz x16, #0x8
0xffff9140f994    52  sub csp, jssp, #0x10 (16)
0xffff9140f998    56  stp fp, lr, [jssp, #-16]!
0xffff9140f99c    60  bl #+0x14 (addr 0xffff9140f9b0)
0xffff9140f9a0    64  movz x16, #0x10
0xffff9140f9a4    68  sub csp, jssp, #0x10 (16)
0xffff9140f9a8    72  stp fp, lr, [jssp, #-16]!
0xffff9140f9ac    76  bl #+0x4 (addr 0xffff9140f9b0)
0xffff9140f9b0    80  movz x17, #0xa00000000
0xffff9140f9b4    84  sub csp, jssp, #0x10 (16)
0xffff9140f9b8    88  stp x17, cp, [jssp, #-16]!
0xffff9140f9bc    92  add fp, jssp, #0x10 (16)
0xffff9140f9c0    96  ldr x17, pc+24 (addr 0x0000ffff9140f9d8)    ;; lazy deoptimization bailout 0
0xffff9140f9c4   100  add x17, x17, x16
0xffff9140f9c8   104  br x17
0xffff9140f9cc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140f9d0   112  d63f03e0       constant
0xffff9140f9d4   116  d503201f       constant
0xffff9140f9d8   120  91206000       constant
0xffff9140f9dc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140f9c0  runtime entry
0xffff9140f9cc  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2215
type = NORMAL
name = BinaryOpICStub(ADD:Smi*Smi->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff9140f960     0  mov x2, x1
0xffff9140f964     4  tbnz w2, #0, #+0x1c (addr 0xffff9140f980)
0xffff9140f968     8  mov x3, x0
0xffff9140f96c    12  tbnz w3, #0, #+0x24 (addr 0xffff9140f990)
0xffff9140f970    16  adds x2, x3, x2
0xffff9140f974    20  b.vs #+0x2c (addr 0xffff9140f9a0)
0xffff9140f978    24  mov x0, x2
0xffff9140f97c    28  ret
0xffff9140f980    32  movz x16, #0x0
0xffff9140f984    36  sub csp, jssp, #0x10 (16)
0xffff9140f988    40  stp fp, lr, [jssp, #-16]!
0xffff9140f98c    44  bl #+0x24 (addr 0xffff9140f9b0)
0xffff9140f990    48  movz x16, #0x8
0xffff9140f994    52  sub csp, jssp, #0x10 (16)
0xffff9140f998    56  stp fp, lr, [jssp, #-16]!
0xffff9140f99c    60  bl #+0x14 (addr 0xffff9140f9b0)
0xffff9140f9a0    64  movz x16, #0x10
0xffff9140f9a4    68  sub csp, jssp, #0x10 (16)
0xffff9140f9a8    72  stp fp, lr, [jssp, #-16]!
0xffff9140f9ac    76  bl #+0x4 (addr 0xffff9140f9b0)
0xffff9140f9b0    80  movz x17, #0xa00000000
0xffff9140f9b4    84  sub csp, jssp, #0x10 (16)
0xffff9140f9b8    88  stp x17, cp, [jssp, #-16]!
0xffff9140f9bc    92  add fp, jssp, #0x10 (16)
0xffff9140f9c0    96  ldr x17, pc+24 (addr 0x0000ffff9140f9d8)    ;; lazy deoptimization bailout 0
0xffff9140f9c4   100  add x17, x17, x16
0xffff9140f9c8   104  br x17
0xffff9140f9cc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140f9d0   112  d63f03e0       constant
0xffff9140f9d4   116  d503201f       constant
0xffff9140f9d8   120  91206000       constant
0xffff9140f9dc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140f9c0  runtime entry
0xffff9140f9cc  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2199
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff9140fa60     0  mov x2, x1
0xffff9140fa64     4  tbnz w2, #0, #+0x1c (addr 0xffff9140fa80)
0xffff9140fa68     8  mov x3, x0
0xffff9140fa6c    12  tbnz w3, #0, #+0x24 (addr 0xffff9140fa90)
0xffff9140fa70    16  adds x2, x3, x2
0xffff9140fa74    20  b.vs #+0x2c (addr 0xffff9140faa0)
0xffff9140fa78    24  mov x0, x2
0xffff9140fa7c    28  ret
0xffff9140fa80    32  movz x16, #0x0
0xffff9140fa84    36  sub csp, jssp, #0x10 (16)
0xffff9140fa88    40  stp fp, lr, [jssp, #-16]!
0xffff9140fa8c    44  bl #+0x24 (addr 0xffff9140fab0)
0xffff9140fa90    48  movz x16, #0x8
0xffff9140fa94    52  sub csp, jssp, #0x10 (16)
0xffff9140fa98    56  stp fp, lr, [jssp, #-16]!
0xffff9140fa9c    60  bl #+0x14 (addr 0xffff9140fab0)
0xffff9140faa0    64  movz x16, #0x10
0xffff9140faa4    68  sub csp, jssp, #0x10 (16)
0xffff9140faa8    72  stp fp, lr, [jssp, #-16]!
0xffff9140faac    76  bl #+0x4 (addr 0xffff9140fab0)
0xffff9140fab0    80  movz x17, #0xa00000000
0xffff9140fab4    84  sub csp, jssp, #0x10 (16)
0xffff9140fab8    88  stp x17, cp, [jssp, #-16]!
0xffff9140fabc    92  add fp, jssp, #0x10 (16)
0xffff9140fac0    96  ldr x17, pc+24 (addr 0x0000ffff9140fad8)    ;; lazy deoptimization bailout 0
0xffff9140fac4   100  add x17, x17, x16
0xffff9140fac8   104  br x17
0xffff9140facc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140fad0   112  d63f03e0       constant
0xffff9140fad4   116  d503201f       constant
0xffff9140fad8   120  91206000       constant
0xffff9140fadc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140fac0  runtime entry
0xffff9140facc  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2199
type = NORMAL
name = BinaryOpICStub(ADD:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 136)
0xffff9140fa60     0  mov x2, x1
0xffff9140fa64     4  tbnz w2, #0, #+0x1c (addr 0xffff9140fa80)
0xffff9140fa68     8  mov x3, x0
0xffff9140fa6c    12  tbnz w3, #0, #+0x24 (addr 0xffff9140fa90)
0xffff9140fa70    16  adds x2, x3, x2
0xffff9140fa74    20  b.vs #+0x2c (addr 0xffff9140faa0)
0xffff9140fa78    24  mov x0, x2
0xffff9140fa7c    28  ret
0xffff9140fa80    32  movz x16, #0x0
0xffff9140fa84    36  sub csp, jssp, #0x10 (16)
0xffff9140fa88    40  stp fp, lr, [jssp, #-16]!
0xffff9140fa8c    44  bl #+0x24 (addr 0xffff9140fab0)
0xffff9140fa90    48  movz x16, #0x8
0xffff9140fa94    52  sub csp, jssp, #0x10 (16)
0xffff9140fa98    56  stp fp, lr, [jssp, #-16]!
0xffff9140fa9c    60  bl #+0x14 (addr 0xffff9140fab0)
0xffff9140faa0    64  movz x16, #0x10
0xffff9140faa4    68  sub csp, jssp, #0x10 (16)
0xffff9140faa8    72  stp fp, lr, [jssp, #-16]!
0xffff9140faac    76  bl #+0x4 (addr 0xffff9140fab0)
0xffff9140fab0    80  movz x17, #0xa00000000
0xffff9140fab4    84  sub csp, jssp, #0x10 (16)
0xffff9140fab8    88  stp x17, cp, [jssp, #-16]!
0xffff9140fabc    92  add fp, jssp, #0x10 (16)
0xffff9140fac0    96  ldr x17, pc+24 (addr 0x0000ffff9140fad8)    ;; lazy deoptimization bailout 0
0xffff9140fac4   100  add x17, x17, x16
0xffff9140fac8   104  br x17
0xffff9140facc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140fad0   112  d63f03e0       constant
0xffff9140fad4   116  d503201f       constant
0xffff9140fad8   120  91206000       constant
0xffff9140fadc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140fac0  runtime entry
0xffff9140facc  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4386
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff9140fb60     0  mov x2, x1
0xffff9140fb64     4  tbnz w2, #0, #+0x14 (addr 0xffff9140fb78)
0xffff9140fb68     8  mov x3, x0
0xffff9140fb6c    12  tbnz w3, #0, #+0x1c (addr 0xffff9140fb88)
0xffff9140fb70    16  and x0, x3, x2
0xffff9140fb74    20  ret
0xffff9140fb78    24  movz x16, #0x0
0xffff9140fb7c    28  sub csp, jssp, #0x10 (16)
0xffff9140fb80    32  stp fp, lr, [jssp, #-16]!
0xffff9140fb84    36  bl #+0x14 (addr 0xffff9140fb98)
0xffff9140fb88    40  movz x16, #0x8
0xffff9140fb8c    44  sub csp, jssp, #0x10 (16)
0xffff9140fb90    48  stp fp, lr, [jssp, #-16]!
0xffff9140fb94    52  bl #+0x4 (addr 0xffff9140fb98)
0xffff9140fb98    56  movz x17, #0xa00000000
0xffff9140fb9c    60  sub csp, jssp, #0x10 (16)
0xffff9140fba0    64  stp x17, cp, [jssp, #-16]!
0xffff9140fba4    68  add fp, jssp, #0x10 (16)
0xffff9140fba8    72  ldr x17, pc+24 (addr 0x0000ffff9140fbc0)    ;; lazy deoptimization bailout 0
0xffff9140fbac    76  add x17, x17, x16
0xffff9140fbb0    80  br x17
0xffff9140fbb4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140fbb8    88  d63f03e0       constant
0xffff9140fbbc    92  d503201f       constant
0xffff9140fbc0    96  91206000       constant
0xffff9140fbc4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140fba8  runtime entry
0xffff9140fbb4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4386
type = NORMAL
name = BinaryOpICStub(BIT_AND:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff9140fb60     0  mov x2, x1
0xffff9140fb64     4  tbnz w2, #0, #+0x14 (addr 0xffff9140fb78)
0xffff9140fb68     8  mov x3, x0
0xffff9140fb6c    12  tbnz w3, #0, #+0x1c (addr 0xffff9140fb88)
0xffff9140fb70    16  and x0, x3, x2
0xffff9140fb74    20  ret
0xffff9140fb78    24  movz x16, #0x0
0xffff9140fb7c    28  sub csp, jssp, #0x10 (16)
0xffff9140fb80    32  stp fp, lr, [jssp, #-16]!
0xffff9140fb84    36  bl #+0x14 (addr 0xffff9140fb98)
0xffff9140fb88    40  movz x16, #0x8
0xffff9140fb8c    44  sub csp, jssp, #0x10 (16)
0xffff9140fb90    48  stp fp, lr, [jssp, #-16]!
0xffff9140fb94    52  bl #+0x4 (addr 0xffff9140fb98)
0xffff9140fb98    56  movz x17, #0xa00000000
0xffff9140fb9c    60  sub csp, jssp, #0x10 (16)
0xffff9140fba0    64  stp x17, cp, [jssp, #-16]!
0xffff9140fba4    68  add fp, jssp, #0x10 (16)
0xffff9140fba8    72  ldr x17, pc+24 (addr 0x0000ffff9140fbc0)    ;; lazy deoptimization bailout 0
0xffff9140fbac    76  add x17, x17, x16
0xffff9140fbb0    80  br x17
0xffff9140fbb4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140fbb8    88  d63f03e0       constant
0xffff9140fbbc    92  d503201f       constant
0xffff9140fbc0    96  91206000       constant
0xffff9140fbc4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140fba8  runtime entry
0xffff9140fbb4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4370
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff9140fc40     0  mov x2, x1
0xffff9140fc44     4  tbnz w2, #0, #+0x14 (addr 0xffff9140fc58)
0xffff9140fc48     8  mov x3, x0
0xffff9140fc4c    12  tbnz w3, #0, #+0x1c (addr 0xffff9140fc68)
0xffff9140fc50    16  and x0, x3, x2
0xffff9140fc54    20  ret
0xffff9140fc58    24  movz x16, #0x0
0xffff9140fc5c    28  sub csp, jssp, #0x10 (16)
0xffff9140fc60    32  stp fp, lr, [jssp, #-16]!
0xffff9140fc64    36  bl #+0x14 (addr 0xffff9140fc78)
0xffff9140fc68    40  movz x16, #0x8
0xffff9140fc6c    44  sub csp, jssp, #0x10 (16)
0xffff9140fc70    48  stp fp, lr, [jssp, #-16]!
0xffff9140fc74    52  bl #+0x4 (addr 0xffff9140fc78)
0xffff9140fc78    56  movz x17, #0xa00000000
0xffff9140fc7c    60  sub csp, jssp, #0x10 (16)
0xffff9140fc80    64  stp x17, cp, [jssp, #-16]!
0xffff9140fc84    68  add fp, jssp, #0x10 (16)
0xffff9140fc88    72  ldr x17, pc+24 (addr 0x0000ffff9140fca0)    ;; lazy deoptimization bailout 0
0xffff9140fc8c    76  add x17, x17, x16
0xffff9140fc90    80  br x17
0xffff9140fc94    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140fc98    88  d63f03e0       constant
0xffff9140fc9c    92  d503201f       constant
0xffff9140fca0    96  91206000       constant
0xffff9140fca4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140fc88  runtime entry
0xffff9140fc94  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4370
type = NORMAL
name = BinaryOpICStub(BIT_AND:Int32*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff9140fc40     0  mov x2, x1
0xffff9140fc44     4  tbnz w2, #0, #+0x14 (addr 0xffff9140fc58)
0xffff9140fc48     8  mov x3, x0
0xffff9140fc4c    12  tbnz w3, #0, #+0x1c (addr 0xffff9140fc68)
0xffff9140fc50    16  and x0, x3, x2
0xffff9140fc54    20  ret
0xffff9140fc58    24  movz x16, #0x0
0xffff9140fc5c    28  sub csp, jssp, #0x10 (16)
0xffff9140fc60    32  stp fp, lr, [jssp, #-16]!
0xffff9140fc64    36  bl #+0x14 (addr 0xffff9140fc78)
0xffff9140fc68    40  movz x16, #0x8
0xffff9140fc6c    44  sub csp, jssp, #0x10 (16)
0xffff9140fc70    48  stp fp, lr, [jssp, #-16]!
0xffff9140fc74    52  bl #+0x4 (addr 0xffff9140fc78)
0xffff9140fc78    56  movz x17, #0xa00000000
0xffff9140fc7c    60  sub csp, jssp, #0x10 (16)
0xffff9140fc80    64  stp x17, cp, [jssp, #-16]!
0xffff9140fc84    68  add fp, jssp, #0x10 (16)
0xffff9140fc88    72  ldr x17, pc+24 (addr 0x0000ffff9140fca0)    ;; lazy deoptimization bailout 0
0xffff9140fc8c    76  add x17, x17, x16
0xffff9140fc90    80  br x17
0xffff9140fc94    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140fc98    88  d63f03e0       constant
0xffff9140fc9c    92  d503201f       constant
0xffff9140fca0    96  91206000       constant
0xffff9140fca4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140fc88  runtime entry
0xffff9140fc94  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2338
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff9140fd20     0  mov x2, x1
0xffff9140fd24     4  tbnz w2, #0, #+0x14 (addr 0xffff9140fd38)
0xffff9140fd28     8  mov x3, x0
0xffff9140fd2c    12  tbnz w3, #0, #+0x1c (addr 0xffff9140fd48)
0xffff9140fd30    16  and x0, x3, x2
0xffff9140fd34    20  ret
0xffff9140fd38    24  movz x16, #0x0
0xffff9140fd3c    28  sub csp, jssp, #0x10 (16)
0xffff9140fd40    32  stp fp, lr, [jssp, #-16]!
0xffff9140fd44    36  bl #+0x14 (addr 0xffff9140fd58)
0xffff9140fd48    40  movz x16, #0x8
0xffff9140fd4c    44  sub csp, jssp, #0x10 (16)
0xffff9140fd50    48  stp fp, lr, [jssp, #-16]!
0xffff9140fd54    52  bl #+0x4 (addr 0xffff9140fd58)
0xffff9140fd58    56  movz x17, #0xa00000000
0xffff9140fd5c    60  sub csp, jssp, #0x10 (16)
0xffff9140fd60    64  stp x17, cp, [jssp, #-16]!
0xffff9140fd64    68  add fp, jssp, #0x10 (16)
0xffff9140fd68    72  ldr x17, pc+24 (addr 0x0000ffff9140fd80)    ;; lazy deoptimization bailout 0
0xffff9140fd6c    76  add x17, x17, x16
0xffff9140fd70    80  br x17
0xffff9140fd74    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140fd78    88  d63f03e0       constant
0xffff9140fd7c    92  d503201f       constant
0xffff9140fd80    96  91206000       constant
0xffff9140fd84   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140fd68  runtime entry
0xffff9140fd74  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2338
type = NORMAL
name = BinaryOpICStub(BIT_AND:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff9140fd20     0  mov x2, x1
0xffff9140fd24     4  tbnz w2, #0, #+0x14 (addr 0xffff9140fd38)
0xffff9140fd28     8  mov x3, x0
0xffff9140fd2c    12  tbnz w3, #0, #+0x1c (addr 0xffff9140fd48)
0xffff9140fd30    16  and x0, x3, x2
0xffff9140fd34    20  ret
0xffff9140fd38    24  movz x16, #0x0
0xffff9140fd3c    28  sub csp, jssp, #0x10 (16)
0xffff9140fd40    32  stp fp, lr, [jssp, #-16]!
0xffff9140fd44    36  bl #+0x14 (addr 0xffff9140fd58)
0xffff9140fd48    40  movz x16, #0x8
0xffff9140fd4c    44  sub csp, jssp, #0x10 (16)
0xffff9140fd50    48  stp fp, lr, [jssp, #-16]!
0xffff9140fd54    52  bl #+0x4 (addr 0xffff9140fd58)
0xffff9140fd58    56  movz x17, #0xa00000000
0xffff9140fd5c    60  sub csp, jssp, #0x10 (16)
0xffff9140fd60    64  stp x17, cp, [jssp, #-16]!
0xffff9140fd64    68  add fp, jssp, #0x10 (16)
0xffff9140fd68    72  ldr x17, pc+24 (addr 0x0000ffff9140fd80)    ;; lazy deoptimization bailout 0
0xffff9140fd6c    76  add x17, x17, x16
0xffff9140fd70    80  br x17
0xffff9140fd74    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140fd78    88  d63f03e0       constant
0xffff9140fd7c    92  d503201f       constant
0xffff9140fd80    96  91206000       constant
0xffff9140fd84   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140fd68  runtime entry
0xffff9140fd74  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2322
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff9140fe00     0  mov x2, x1
0xffff9140fe04     4  tbnz w2, #0, #+0x14 (addr 0xffff9140fe18)
0xffff9140fe08     8  mov x3, x0
0xffff9140fe0c    12  tbnz w3, #0, #+0x1c (addr 0xffff9140fe28)
0xffff9140fe10    16  and x0, x3, x2
0xffff9140fe14    20  ret
0xffff9140fe18    24  movz x16, #0x0
0xffff9140fe1c    28  sub csp, jssp, #0x10 (16)
0xffff9140fe20    32  stp fp, lr, [jssp, #-16]!
0xffff9140fe24    36  bl #+0x14 (addr 0xffff9140fe38)
0xffff9140fe28    40  movz x16, #0x8
0xffff9140fe2c    44  sub csp, jssp, #0x10 (16)
0xffff9140fe30    48  stp fp, lr, [jssp, #-16]!
0xffff9140fe34    52  bl #+0x4 (addr 0xffff9140fe38)
0xffff9140fe38    56  movz x17, #0xa00000000
0xffff9140fe3c    60  sub csp, jssp, #0x10 (16)
0xffff9140fe40    64  stp x17, cp, [jssp, #-16]!
0xffff9140fe44    68  add fp, jssp, #0x10 (16)
0xffff9140fe48    72  ldr x17, pc+24 (addr 0x0000ffff9140fe60)    ;; lazy deoptimization bailout 0
0xffff9140fe4c    76  add x17, x17, x16
0xffff9140fe50    80  br x17
0xffff9140fe54    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140fe58    88  d63f03e0       constant
0xffff9140fe5c    92  d503201f       constant
0xffff9140fe60    96  91206000       constant
0xffff9140fe64   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140fe48  runtime entry
0xffff9140fe54  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2322
type = NORMAL
name = BinaryOpICStub(BIT_AND:Int32*Smi->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff9140fe00     0  mov x2, x1
0xffff9140fe04     4  tbnz w2, #0, #+0x14 (addr 0xffff9140fe18)
0xffff9140fe08     8  mov x3, x0
0xffff9140fe0c    12  tbnz w3, #0, #+0x1c (addr 0xffff9140fe28)
0xffff9140fe10    16  and x0, x3, x2
0xffff9140fe14    20  ret
0xffff9140fe18    24  movz x16, #0x0
0xffff9140fe1c    28  sub csp, jssp, #0x10 (16)
0xffff9140fe20    32  stp fp, lr, [jssp, #-16]!
0xffff9140fe24    36  bl #+0x14 (addr 0xffff9140fe38)
0xffff9140fe28    40  movz x16, #0x8
0xffff9140fe2c    44  sub csp, jssp, #0x10 (16)
0xffff9140fe30    48  stp fp, lr, [jssp, #-16]!
0xffff9140fe34    52  bl #+0x4 (addr 0xffff9140fe38)
0xffff9140fe38    56  movz x17, #0xa00000000
0xffff9140fe3c    60  sub csp, jssp, #0x10 (16)
0xffff9140fe40    64  stp x17, cp, [jssp, #-16]!
0xffff9140fe44    68  add fp, jssp, #0x10 (16)
0xffff9140fe48    72  ldr x17, pc+24 (addr 0x0000ffff9140fe60)    ;; lazy deoptimization bailout 0
0xffff9140fe4c    76  add x17, x17, x16
0xffff9140fe50    80  br x17
0xffff9140fe54    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9140fe58    88  d63f03e0       constant
0xffff9140fe5c    92  d503201f       constant
0xffff9140fe60    96  91206000       constant
0xffff9140fe64   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9140fe48  runtime entry
0xffff9140fe54  constant pool (size 20)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff9140fee0     0  sub csp, jssp, #0x10 (16)
0xffff9140fee4     4  stp x2, x0, [jssp, #-16]!
0xffff9140fee8     8  ldur x4, [x1, #7]
0xffff9140feec    12  ubfx x0, x4, #52, #11
0xffff9140fef0    16  cmp x0, #0x453 (1107)
0xffff9140fef4    20  csel x4, xzr, x4, ge
0xffff9140fef8    24  b.ge #+0x1c (addr 0xffff9140ff14)
0xffff9140fefc    28  ubfx x2, x4, #0, #52
0xffff9140ff00    32  orr x2, x2, #0x10000000000000
0xffff9140ff04    36  tst x4, #0x8000000000000000
0xffff9140ff08    40  cneg x2, x2, ne
0xffff9140ff0c    44  sub x0, x0, #0x433 (1075)
0xffff9140ff10    48  lsl x4, x2, x0
0xffff9140ff14    52  ldp x2, x0, [jssp], #16
0xffff9140ff18    56  ret


RelocInfo (size = 0)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4514
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff9140ff80     0  mov x2, x0
0xffff9140ff84     4  tbnz w2, #0, #+0xac (addr 0xffff91410030)
0xffff9140ff88     8  tbnz w1, #0, #+0x18 (addr 0xffff9140ffa0)
0xffff9140ff8c    12  asr x4, x1, #32
0xffff9140ff90    16  asr x0, x2, #32
0xffff9140ff94    20  and w0, w0, w4
0xffff9140ff98    24  lsl x0, x0, #32
0xffff9140ff9c    28  ret
0xffff9140ffa0    32  sub csp, jssp, #0x10 (16)
0xffff9140ffa4    36  stp fp, lr, [jssp, #-16]!
0xffff9140ffa8    40  movz fp, #0xa00000000
0xffff9140ffac    44  sub csp, jssp, #0x8 (8)
0xffff9140ffb0    48  str fp, [jssp, #-8]!
0xffff9140ffb4    52  add fp, jssp, #0x8 (8)
0xffff9140ffb8    56  ldur x16, [x1, #-1]
0xffff9140ffbc    60  ldr x17, [x26, #120]
0xffff9140ffc0    64  cmp x16, x17
0xffff9140ffc4    68  b.ne #+0x30 (addr 0xffff9140fff4)
0xffff9140ffc8    72  ldur d30, [x1, #7]
0xffff9140ffcc    76  fcvtzs x4, d30
0xffff9140ffd0    80  cmp x4, #0x1 (1)
0xffff9140ffd4    84  ccmn x4, #1, #nzcV, vc
0xffff9140ffd8    88  b.vc #+0x18 (addr 0xffff9140fff0)
0xffff9140ffdc    92  sub csp, jssp, #0x8 (8)
0xffff9140ffe0    96  str lr, [jssp, #-8]!
0xffff9140ffe4   100  ldr x16, pc+68 (addr 0x0000ffff91410028)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff9140ffe8   104  blr x16
0xffff9140ffec   108  ldr lr, [jssp], #8
0xffff9140fff0   112  b #+0x24 (addr 0xffff91410014)
0xffff9140fff4   116  ldp x4, x3, [x26, #64]
0xffff9140fff8   120  cmp x1, x4
0xffff9140fffc   124  cset x4, eq
0xffff91410000   128  ccmp x1, x3, #nZcv, ne
0xffff91410004   132  b.eq #+0x10 (addr 0xffff91410014)
0xffff91410008   136  ldr x16, [x26, #40]
0xffff9141000c   140  cmp x1, x16
0xffff91410010   144  b.ne #+0x30 (addr 0xffff91410040)
0xffff91410014   148  ldr lr, [jssp, #16]
0xffff91410018   152  ldp xzr, fp, [jssp], #24
0xffff9141001c   156  b #-0x8c (addr 0xffff9140ff90)
0xffff91410020   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91410024   164  d63f03e0       constant
0xffff91410028   168  9140fee0       constant
0xffff9141002c   172  0000ffff       constant
0xffff91410030   176  movz x16, #0x0
0xffff91410034   180  sub csp, jssp, #0x10 (16)
0xffff91410038   184  stp fp, lr, [jssp, #-16]!
0xffff9141003c   188  bl #+0xc (addr 0xffff91410048)
0xffff91410040   192  movz x16, #0x8
0xffff91410044   196  bl #+0x14 (addr 0xffff91410058)
0xffff91410048   200  movz x17, #0xa00000000
0xffff9141004c   204  sub csp, jssp, #0x10 (16)
0xffff91410050   208  stp x17, cp, [jssp, #-16]!
0xffff91410054   212  add fp, jssp, #0x10 (16)
0xffff91410058   216  ldr x17, pc+24 (addr 0x0000ffff91410070)    ;; lazy deoptimization bailout 0
0xffff9141005c   220  add x17, x17, x16
0xffff91410060   224  br x17
0xffff91410064   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410068   232  d63f03e0       constant
0xffff9141006c   236  d503201f       constant
0xffff91410070   240  91206000       constant
0xffff91410074   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff9140ffe4  code target (STUB)  (0xffff9140fee0)
0xffff91410020  constant pool (size 16)
0xffff91410058  runtime entry
0xffff91410064  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4514
type = NORMAL
name = BinaryOpICStub(BIT_AND:Number*Int32->Int32)
compiler = crankshaft
Instructions (size = 256)
0xffff9140ff80     0  mov x2, x0
0xffff9140ff84     4  tbnz w2, #0, #+0xac (addr 0xffff91410030)
0xffff9140ff88     8  tbnz w1, #0, #+0x18 (addr 0xffff9140ffa0)
0xffff9140ff8c    12  asr x4, x1, #32
0xffff9140ff90    16  asr x0, x2, #32
0xffff9140ff94    20  and w0, w0, w4
0xffff9140ff98    24  lsl x0, x0, #32
0xffff9140ff9c    28  ret
0xffff9140ffa0    32  sub csp, jssp, #0x10 (16)
0xffff9140ffa4    36  stp fp, lr, [jssp, #-16]!
0xffff9140ffa8    40  movz fp, #0xa00000000
0xffff9140ffac    44  sub csp, jssp, #0x8 (8)
0xffff9140ffb0    48  str fp, [jssp, #-8]!
0xffff9140ffb4    52  add fp, jssp, #0x8 (8)
0xffff9140ffb8    56  ldur x16, [x1, #-1]
0xffff9140ffbc    60  ldr x17, [x26, #120]
0xffff9140ffc0    64  cmp x16, x17
0xffff9140ffc4    68  b.ne #+0x30 (addr 0xffff9140fff4)
0xffff9140ffc8    72  ldur d30, [x1, #7]
0xffff9140ffcc    76  fcvtzs x4, d30
0xffff9140ffd0    80  cmp x4, #0x1 (1)
0xffff9140ffd4    84  ccmn x4, #1, #nzcV, vc
0xffff9140ffd8    88  b.vc #+0x18 (addr 0xffff9140fff0)
0xffff9140ffdc    92  sub csp, jssp, #0x8 (8)
0xffff9140ffe0    96  str lr, [jssp, #-8]!
0xffff9140ffe4   100  ldr x16, pc+68 (addr 0x0000ffff91410028)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff9140ffe8   104  blr x16
0xffff9140ffec   108  ldr lr, [jssp], #8
0xffff9140fff0   112  b #+0x24 (addr 0xffff91410014)
0xffff9140fff4   116  ldp x4, x3, [x26, #64]
0xffff9140fff8   120  cmp x1, x4
0xffff9140fffc   124  cset x4, eq
0xffff91410000   128  ccmp x1, x3, #nZcv, ne
0xffff91410004   132  b.eq #+0x10 (addr 0xffff91410014)
0xffff91410008   136  ldr x16, [x26, #40]
0xffff9141000c   140  cmp x1, x16
0xffff91410010   144  b.ne #+0x30 (addr 0xffff91410040)
0xffff91410014   148  ldr lr, [jssp, #16]
0xffff91410018   152  ldp xzr, fp, [jssp], #24
0xffff9141001c   156  b #-0x8c (addr 0xffff9140ff90)
0xffff91410020   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91410024   164  d63f03e0       constant
0xffff91410028   168  9140fee0       constant
0xffff9141002c   172  0000ffff       constant
0xffff91410030   176  movz x16, #0x0
0xffff91410034   180  sub csp, jssp, #0x10 (16)
0xffff91410038   184  stp fp, lr, [jssp, #-16]!
0xffff9141003c   188  bl #+0xc (addr 0xffff91410048)
0xffff91410040   192  movz x16, #0x8
0xffff91410044   196  bl #+0x14 (addr 0xffff91410058)
0xffff91410048   200  movz x17, #0xa00000000
0xffff9141004c   204  sub csp, jssp, #0x10 (16)
0xffff91410050   208  stp x17, cp, [jssp, #-16]!
0xffff91410054   212  add fp, jssp, #0x10 (16)
0xffff91410058   216  ldr x17, pc+24 (addr 0x0000ffff91410070)    ;; lazy deoptimization bailout 0
0xffff9141005c   220  add x17, x17, x16
0xffff91410060   224  br x17
0xffff91410064   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410068   232  d63f03e0       constant
0xffff9141006c   236  d503201f       constant
0xffff91410070   240  91206000       constant
0xffff91410074   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff9140ffe4  code target (STUB)  (0xffff9140fee0)
0xffff91410020  constant pool (size 16)
0xffff91410058  runtime entry
0xffff91410064  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2450
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff914100e0     0  mov x2, x0
0xffff914100e4     4  tbnz w2, #0, #+0xac (addr 0xffff91410190)
0xffff914100e8     8  tbnz w1, #0, #+0x18 (addr 0xffff91410100)
0xffff914100ec    12  asr x4, x1, #32
0xffff914100f0    16  asr x0, x2, #32
0xffff914100f4    20  and w0, w0, w4
0xffff914100f8    24  lsl x0, x0, #32
0xffff914100fc    28  ret
0xffff91410100    32  sub csp, jssp, #0x10 (16)
0xffff91410104    36  stp fp, lr, [jssp, #-16]!
0xffff91410108    40  movz fp, #0xa00000000
0xffff9141010c    44  sub csp, jssp, #0x8 (8)
0xffff91410110    48  str fp, [jssp, #-8]!
0xffff91410114    52  add fp, jssp, #0x8 (8)
0xffff91410118    56  ldur x16, [x1, #-1]
0xffff9141011c    60  ldr x17, [x26, #120]
0xffff91410120    64  cmp x16, x17
0xffff91410124    68  b.ne #+0x30 (addr 0xffff91410154)
0xffff91410128    72  ldur d30, [x1, #7]
0xffff9141012c    76  fcvtzs x4, d30
0xffff91410130    80  cmp x4, #0x1 (1)
0xffff91410134    84  ccmn x4, #1, #nzcV, vc
0xffff91410138    88  b.vc #+0x18 (addr 0xffff91410150)
0xffff9141013c    92  sub csp, jssp, #0x8 (8)
0xffff91410140    96  str lr, [jssp, #-8]!
0xffff91410144   100  ldr x16, pc+68 (addr 0x0000ffff91410188)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91410148   104  blr x16
0xffff9141014c   108  ldr lr, [jssp], #8
0xffff91410150   112  b #+0x24 (addr 0xffff91410174)
0xffff91410154   116  ldp x4, x3, [x26, #64]
0xffff91410158   120  cmp x1, x4
0xffff9141015c   124  cset x4, eq
0xffff91410160   128  ccmp x1, x3, #nZcv, ne
0xffff91410164   132  b.eq #+0x10 (addr 0xffff91410174)
0xffff91410168   136  ldr x16, [x26, #40]
0xffff9141016c   140  cmp x1, x16
0xffff91410170   144  b.ne #+0x30 (addr 0xffff914101a0)
0xffff91410174   148  ldr lr, [jssp, #16]
0xffff91410178   152  ldp xzr, fp, [jssp], #24
0xffff9141017c   156  b #-0x8c (addr 0xffff914100f0)
0xffff91410180   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91410184   164  d63f03e0       constant
0xffff91410188   168  9140fee0       constant
0xffff9141018c   172  0000ffff       constant
0xffff91410190   176  movz x16, #0x0
0xffff91410194   180  sub csp, jssp, #0x10 (16)
0xffff91410198   184  stp fp, lr, [jssp, #-16]!
0xffff9141019c   188  bl #+0xc (addr 0xffff914101a8)
0xffff914101a0   192  movz x16, #0x8
0xffff914101a4   196  bl #+0x14 (addr 0xffff914101b8)
0xffff914101a8   200  movz x17, #0xa00000000
0xffff914101ac   204  sub csp, jssp, #0x10 (16)
0xffff914101b0   208  stp x17, cp, [jssp, #-16]!
0xffff914101b4   212  add fp, jssp, #0x10 (16)
0xffff914101b8   216  ldr x17, pc+24 (addr 0x0000ffff914101d0)    ;; lazy deoptimization bailout 0
0xffff914101bc   220  add x17, x17, x16
0xffff914101c0   224  br x17
0xffff914101c4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914101c8   232  d63f03e0       constant
0xffff914101cc   236  d503201f       constant
0xffff914101d0   240  91206000       constant
0xffff914101d4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff91410144  code target (STUB)  (0xffff9140fee0)
0xffff91410180  constant pool (size 16)
0xffff914101b8  runtime entry
0xffff914101c4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2450
type = NORMAL
name = BinaryOpICStub(BIT_AND:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff914100e0     0  mov x2, x0
0xffff914100e4     4  tbnz w2, #0, #+0xac (addr 0xffff91410190)
0xffff914100e8     8  tbnz w1, #0, #+0x18 (addr 0xffff91410100)
0xffff914100ec    12  asr x4, x1, #32
0xffff914100f0    16  asr x0, x2, #32
0xffff914100f4    20  and w0, w0, w4
0xffff914100f8    24  lsl x0, x0, #32
0xffff914100fc    28  ret
0xffff91410100    32  sub csp, jssp, #0x10 (16)
0xffff91410104    36  stp fp, lr, [jssp, #-16]!
0xffff91410108    40  movz fp, #0xa00000000
0xffff9141010c    44  sub csp, jssp, #0x8 (8)
0xffff91410110    48  str fp, [jssp, #-8]!
0xffff91410114    52  add fp, jssp, #0x8 (8)
0xffff91410118    56  ldur x16, [x1, #-1]
0xffff9141011c    60  ldr x17, [x26, #120]
0xffff91410120    64  cmp x16, x17
0xffff91410124    68  b.ne #+0x30 (addr 0xffff91410154)
0xffff91410128    72  ldur d30, [x1, #7]
0xffff9141012c    76  fcvtzs x4, d30
0xffff91410130    80  cmp x4, #0x1 (1)
0xffff91410134    84  ccmn x4, #1, #nzcV, vc
0xffff91410138    88  b.vc #+0x18 (addr 0xffff91410150)
0xffff9141013c    92  sub csp, jssp, #0x8 (8)
0xffff91410140    96  str lr, [jssp, #-8]!
0xffff91410144   100  ldr x16, pc+68 (addr 0x0000ffff91410188)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91410148   104  blr x16
0xffff9141014c   108  ldr lr, [jssp], #8
0xffff91410150   112  b #+0x24 (addr 0xffff91410174)
0xffff91410154   116  ldp x4, x3, [x26, #64]
0xffff91410158   120  cmp x1, x4
0xffff9141015c   124  cset x4, eq
0xffff91410160   128  ccmp x1, x3, #nZcv, ne
0xffff91410164   132  b.eq #+0x10 (addr 0xffff91410174)
0xffff91410168   136  ldr x16, [x26, #40]
0xffff9141016c   140  cmp x1, x16
0xffff91410170   144  b.ne #+0x30 (addr 0xffff914101a0)
0xffff91410174   148  ldr lr, [jssp, #16]
0xffff91410178   152  ldp xzr, fp, [jssp], #24
0xffff9141017c   156  b #-0x8c (addr 0xffff914100f0)
0xffff91410180   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91410184   164  d63f03e0       constant
0xffff91410188   168  9140fee0       constant
0xffff9141018c   172  0000ffff       constant
0xffff91410190   176  movz x16, #0x0
0xffff91410194   180  sub csp, jssp, #0x10 (16)
0xffff91410198   184  stp fp, lr, [jssp, #-16]!
0xffff9141019c   188  bl #+0xc (addr 0xffff914101a8)
0xffff914101a0   192  movz x16, #0x8
0xffff914101a4   196  bl #+0x14 (addr 0xffff914101b8)
0xffff914101a8   200  movz x17, #0xa00000000
0xffff914101ac   204  sub csp, jssp, #0x10 (16)
0xffff914101b0   208  stp x17, cp, [jssp, #-16]!
0xffff914101b4   212  add fp, jssp, #0x10 (16)
0xffff914101b8   216  ldr x17, pc+24 (addr 0x0000ffff914101d0)    ;; lazy deoptimization bailout 0
0xffff914101bc   220  add x17, x17, x16
0xffff914101c0   224  br x17
0xffff914101c4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914101c8   232  d63f03e0       constant
0xffff914101cc   236  d503201f       constant
0xffff914101d0   240  91206000       constant
0xffff914101d4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff91410144  code target (STUB)  (0xffff9140fee0)
0xffff91410180  constant pool (size 16)
0xffff914101b8  runtime entry
0xffff914101c4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4258
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff91410240     0  mov x2, x1
0xffff91410244     4  tbnz w2, #0, #+0x14 (addr 0xffff91410258)
0xffff91410248     8  mov x3, x0
0xffff9141024c    12  tbnz w3, #0, #+0x1c (addr 0xffff91410268)
0xffff91410250    16  and x0, x3, x2
0xffff91410254    20  ret
0xffff91410258    24  movz x16, #0x0
0xffff9141025c    28  sub csp, jssp, #0x10 (16)
0xffff91410260    32  stp fp, lr, [jssp, #-16]!
0xffff91410264    36  bl #+0x14 (addr 0xffff91410278)
0xffff91410268    40  movz x16, #0x8
0xffff9141026c    44  sub csp, jssp, #0x10 (16)
0xffff91410270    48  stp fp, lr, [jssp, #-16]!
0xffff91410274    52  bl #+0x4 (addr 0xffff91410278)
0xffff91410278    56  movz x17, #0xa00000000
0xffff9141027c    60  sub csp, jssp, #0x10 (16)
0xffff91410280    64  stp x17, cp, [jssp, #-16]!
0xffff91410284    68  add fp, jssp, #0x10 (16)
0xffff91410288    72  ldr x17, pc+24 (addr 0x0000ffff914102a0)    ;; lazy deoptimization bailout 0
0xffff9141028c    76  add x17, x17, x16
0xffff91410290    80  br x17
0xffff91410294    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410298    88  d63f03e0       constant
0xffff9141029c    92  d503201f       constant
0xffff914102a0    96  91206000       constant
0xffff914102a4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410288  runtime entry
0xffff91410294  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4258
type = NORMAL
name = BinaryOpICStub(BIT_AND:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff91410240     0  mov x2, x1
0xffff91410244     4  tbnz w2, #0, #+0x14 (addr 0xffff91410258)
0xffff91410248     8  mov x3, x0
0xffff9141024c    12  tbnz w3, #0, #+0x1c (addr 0xffff91410268)
0xffff91410250    16  and x0, x3, x2
0xffff91410254    20  ret
0xffff91410258    24  movz x16, #0x0
0xffff9141025c    28  sub csp, jssp, #0x10 (16)
0xffff91410260    32  stp fp, lr, [jssp, #-16]!
0xffff91410264    36  bl #+0x14 (addr 0xffff91410278)
0xffff91410268    40  movz x16, #0x8
0xffff9141026c    44  sub csp, jssp, #0x10 (16)
0xffff91410270    48  stp fp, lr, [jssp, #-16]!
0xffff91410274    52  bl #+0x4 (addr 0xffff91410278)
0xffff91410278    56  movz x17, #0xa00000000
0xffff9141027c    60  sub csp, jssp, #0x10 (16)
0xffff91410280    64  stp x17, cp, [jssp, #-16]!
0xffff91410284    68  add fp, jssp, #0x10 (16)
0xffff91410288    72  ldr x17, pc+24 (addr 0x0000ffff914102a0)    ;; lazy deoptimization bailout 0
0xffff9141028c    76  add x17, x17, x16
0xffff91410290    80  br x17
0xffff91410294    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410298    88  d63f03e0       constant
0xffff9141029c    92  d503201f       constant
0xffff914102a0    96  91206000       constant
0xffff914102a4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410288  runtime entry
0xffff91410294  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4242
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff91410320     0  mov x2, x1
0xffff91410324     4  tbnz w2, #0, #+0x14 (addr 0xffff91410338)
0xffff91410328     8  mov x3, x0
0xffff9141032c    12  tbnz w3, #0, #+0x1c (addr 0xffff91410348)
0xffff91410330    16  and x0, x3, x2
0xffff91410334    20  ret
0xffff91410338    24  movz x16, #0x0
0xffff9141033c    28  sub csp, jssp, #0x10 (16)
0xffff91410340    32  stp fp, lr, [jssp, #-16]!
0xffff91410344    36  bl #+0x14 (addr 0xffff91410358)
0xffff91410348    40  movz x16, #0x8
0xffff9141034c    44  sub csp, jssp, #0x10 (16)
0xffff91410350    48  stp fp, lr, [jssp, #-16]!
0xffff91410354    52  bl #+0x4 (addr 0xffff91410358)
0xffff91410358    56  movz x17, #0xa00000000
0xffff9141035c    60  sub csp, jssp, #0x10 (16)
0xffff91410360    64  stp x17, cp, [jssp, #-16]!
0xffff91410364    68  add fp, jssp, #0x10 (16)
0xffff91410368    72  ldr x17, pc+24 (addr 0x0000ffff91410380)    ;; lazy deoptimization bailout 0
0xffff9141036c    76  add x17, x17, x16
0xffff91410370    80  br x17
0xffff91410374    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410378    88  d63f03e0       constant
0xffff9141037c    92  d503201f       constant
0xffff91410380    96  91206000       constant
0xffff91410384   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410368  runtime entry
0xffff91410374  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4242
type = NORMAL
name = BinaryOpICStub(BIT_AND:Smi*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff91410320     0  mov x2, x1
0xffff91410324     4  tbnz w2, #0, #+0x14 (addr 0xffff91410338)
0xffff91410328     8  mov x3, x0
0xffff9141032c    12  tbnz w3, #0, #+0x1c (addr 0xffff91410348)
0xffff91410330    16  and x0, x3, x2
0xffff91410334    20  ret
0xffff91410338    24  movz x16, #0x0
0xffff9141033c    28  sub csp, jssp, #0x10 (16)
0xffff91410340    32  stp fp, lr, [jssp, #-16]!
0xffff91410344    36  bl #+0x14 (addr 0xffff91410358)
0xffff91410348    40  movz x16, #0x8
0xffff9141034c    44  sub csp, jssp, #0x10 (16)
0xffff91410350    48  stp fp, lr, [jssp, #-16]!
0xffff91410354    52  bl #+0x4 (addr 0xffff91410358)
0xffff91410358    56  movz x17, #0xa00000000
0xffff9141035c    60  sub csp, jssp, #0x10 (16)
0xffff91410360    64  stp x17, cp, [jssp, #-16]!
0xffff91410364    68  add fp, jssp, #0x10 (16)
0xffff91410368    72  ldr x17, pc+24 (addr 0x0000ffff91410380)    ;; lazy deoptimization bailout 0
0xffff9141036c    76  add x17, x17, x16
0xffff91410370    80  br x17
0xffff91410374    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410378    88  d63f03e0       constant
0xffff9141037c    92  d503201f       constant
0xffff91410380    96  91206000       constant
0xffff91410384   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410368  runtime entry
0xffff91410374  constant pool (size 20)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff91410400     0  sub csp, jssp, #0x10 (16)
0xffff91410404     4  stp x2, x1, [jssp, #-16]!
0xffff91410408     8  ldur x4, [x0, #7]
0xffff9141040c    12  ubfx x1, x4, #52, #11
0xffff91410410    16  cmp x1, #0x453 (1107)
0xffff91410414    20  csel x4, xzr, x4, ge
0xffff91410418    24  b.ge #+0x1c (addr 0xffff91410434)
0xffff9141041c    28  ubfx x2, x4, #0, #52
0xffff91410420    32  orr x2, x2, #0x10000000000000
0xffff91410424    36  tst x4, #0x8000000000000000
0xffff91410428    40  cneg x2, x2, ne
0xffff9141042c    44  sub x1, x1, #0x433 (1075)
0xffff91410430    48  lsl x4, x2, x1
0xffff91410434    52  ldp x2, x1, [jssp], #16
0xffff91410438    56  ret


RelocInfo (size = 0)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6290
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff914104a0     0  mov x2, x1
0xffff914104a4     4  tbnz w2, #0, #+0xac (addr 0xffff91410550)
0xffff914104a8     8  tbnz w0, #0, #+0x18 (addr 0xffff914104c0)
0xffff914104ac    12  asr x4, x0, #32
0xffff914104b0    16  asr x0, x2, #32
0xffff914104b4    20  and w0, w4, w0
0xffff914104b8    24  lsl x0, x0, #32
0xffff914104bc    28  ret
0xffff914104c0    32  sub csp, jssp, #0x10 (16)
0xffff914104c4    36  stp fp, lr, [jssp, #-16]!
0xffff914104c8    40  movz fp, #0xa00000000
0xffff914104cc    44  sub csp, jssp, #0x8 (8)
0xffff914104d0    48  str fp, [jssp, #-8]!
0xffff914104d4    52  add fp, jssp, #0x8 (8)
0xffff914104d8    56  ldur x16, [x0, #-1]
0xffff914104dc    60  ldr x17, [x26, #120]
0xffff914104e0    64  cmp x16, x17
0xffff914104e4    68  b.ne #+0x30 (addr 0xffff91410514)
0xffff914104e8    72  ldur d30, [x0, #7]
0xffff914104ec    76  fcvtzs x4, d30
0xffff914104f0    80  cmp x4, #0x1 (1)
0xffff914104f4    84  ccmn x4, #1, #nzcV, vc
0xffff914104f8    88  b.vc #+0x18 (addr 0xffff91410510)
0xffff914104fc    92  sub csp, jssp, #0x8 (8)
0xffff91410500    96  str lr, [jssp, #-8]!
0xffff91410504   100  ldr x16, pc+68 (addr 0x0000ffff91410548)    ;; code: STUB, DoubleToIStub, minor: 127232
0xffff91410508   104  blr x16
0xffff9141050c   108  ldr lr, [jssp], #8
0xffff91410510   112  b #+0x24 (addr 0xffff91410534)
0xffff91410514   116  ldp x4, x3, [x26, #64]
0xffff91410518   120  cmp x0, x4
0xffff9141051c   124  cset x4, eq
0xffff91410520   128  ccmp x0, x3, #nZcv, ne
0xffff91410524   132  b.eq #+0x10 (addr 0xffff91410534)
0xffff91410528   136  ldr x16, [x26, #40]
0xffff9141052c   140  cmp x0, x16
0xffff91410530   144  b.ne #+0x30 (addr 0xffff91410560)
0xffff91410534   148  ldr lr, [jssp, #16]
0xffff91410538   152  ldp xzr, fp, [jssp], #24
0xffff9141053c   156  b #-0x8c (addr 0xffff914104b0)
0xffff91410540   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91410544   164  d63f03e0       constant
0xffff91410548   168  91410400       constant
0xffff9141054c   172  0000ffff       constant
0xffff91410550   176  movz x16, #0x0
0xffff91410554   180  sub csp, jssp, #0x10 (16)
0xffff91410558   184  stp fp, lr, [jssp, #-16]!
0xffff9141055c   188  bl #+0xc (addr 0xffff91410568)
0xffff91410560   192  movz x16, #0x8
0xffff91410564   196  bl #+0x14 (addr 0xffff91410578)
0xffff91410568   200  movz x17, #0xa00000000
0xffff9141056c   204  sub csp, jssp, #0x10 (16)
0xffff91410570   208  stp x17, cp, [jssp, #-16]!
0xffff91410574   212  add fp, jssp, #0x10 (16)
0xffff91410578   216  ldr x17, pc+24 (addr 0x0000ffff91410590)    ;; lazy deoptimization bailout 0
0xffff9141057c   220  add x17, x17, x16
0xffff91410580   224  br x17
0xffff91410584   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410588   232  d63f03e0       constant
0xffff9141058c   236  d503201f       constant
0xffff91410590   240  91206000       constant
0xffff91410594   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff91410504  code target (STUB)  (0xffff91410400)
0xffff91410540  constant pool (size 16)
0xffff91410578  runtime entry
0xffff91410584  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6290
type = NORMAL
name = BinaryOpICStub(BIT_AND:Smi*Number->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff914104a0     0  mov x2, x1
0xffff914104a4     4  tbnz w2, #0, #+0xac (addr 0xffff91410550)
0xffff914104a8     8  tbnz w0, #0, #+0x18 (addr 0xffff914104c0)
0xffff914104ac    12  asr x4, x0, #32
0xffff914104b0    16  asr x0, x2, #32
0xffff914104b4    20  and w0, w4, w0
0xffff914104b8    24  lsl x0, x0, #32
0xffff914104bc    28  ret
0xffff914104c0    32  sub csp, jssp, #0x10 (16)
0xffff914104c4    36  stp fp, lr, [jssp, #-16]!
0xffff914104c8    40  movz fp, #0xa00000000
0xffff914104cc    44  sub csp, jssp, #0x8 (8)
0xffff914104d0    48  str fp, [jssp, #-8]!
0xffff914104d4    52  add fp, jssp, #0x8 (8)
0xffff914104d8    56  ldur x16, [x0, #-1]
0xffff914104dc    60  ldr x17, [x26, #120]
0xffff914104e0    64  cmp x16, x17
0xffff914104e4    68  b.ne #+0x30 (addr 0xffff91410514)
0xffff914104e8    72  ldur d30, [x0, #7]
0xffff914104ec    76  fcvtzs x4, d30
0xffff914104f0    80  cmp x4, #0x1 (1)
0xffff914104f4    84  ccmn x4, #1, #nzcV, vc
0xffff914104f8    88  b.vc #+0x18 (addr 0xffff91410510)
0xffff914104fc    92  sub csp, jssp, #0x8 (8)
0xffff91410500    96  str lr, [jssp, #-8]!
0xffff91410504   100  ldr x16, pc+68 (addr 0x0000ffff91410548)    ;; code: STUB, DoubleToIStub, minor: 127232
0xffff91410508   104  blr x16
0xffff9141050c   108  ldr lr, [jssp], #8
0xffff91410510   112  b #+0x24 (addr 0xffff91410534)
0xffff91410514   116  ldp x4, x3, [x26, #64]
0xffff91410518   120  cmp x0, x4
0xffff9141051c   124  cset x4, eq
0xffff91410520   128  ccmp x0, x3, #nZcv, ne
0xffff91410524   132  b.eq #+0x10 (addr 0xffff91410534)
0xffff91410528   136  ldr x16, [x26, #40]
0xffff9141052c   140  cmp x0, x16
0xffff91410530   144  b.ne #+0x30 (addr 0xffff91410560)
0xffff91410534   148  ldr lr, [jssp, #16]
0xffff91410538   152  ldp xzr, fp, [jssp], #24
0xffff9141053c   156  b #-0x8c (addr 0xffff914104b0)
0xffff91410540   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91410544   164  d63f03e0       constant
0xffff91410548   168  91410400       constant
0xffff9141054c   172  0000ffff       constant
0xffff91410550   176  movz x16, #0x0
0xffff91410554   180  sub csp, jssp, #0x10 (16)
0xffff91410558   184  stp fp, lr, [jssp, #-16]!
0xffff9141055c   188  bl #+0xc (addr 0xffff91410568)
0xffff91410560   192  movz x16, #0x8
0xffff91410564   196  bl #+0x14 (addr 0xffff91410578)
0xffff91410568   200  movz x17, #0xa00000000
0xffff9141056c   204  sub csp, jssp, #0x10 (16)
0xffff91410570   208  stp x17, cp, [jssp, #-16]!
0xffff91410574   212  add fp, jssp, #0x10 (16)
0xffff91410578   216  ldr x17, pc+24 (addr 0x0000ffff91410590)    ;; lazy deoptimization bailout 0
0xffff9141057c   220  add x17, x17, x16
0xffff91410580   224  br x17
0xffff91410584   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410588   232  d63f03e0       constant
0xffff9141058c   236  d503201f       constant
0xffff91410590   240  91206000       constant
0xffff91410594   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff91410504  code target (STUB)  (0xffff91410400)
0xffff91410540  constant pool (size 16)
0xffff91410578  runtime entry
0xffff91410584  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2194
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff91410600     0  mov x2, x1
0xffff91410604     4  tbnz w2, #0, #+0x14 (addr 0xffff91410618)
0xffff91410608     8  mov x3, x0
0xffff9141060c    12  tbnz w3, #0, #+0x1c (addr 0xffff91410628)
0xffff91410610    16  and x0, x3, x2
0xffff91410614    20  ret
0xffff91410618    24  movz x16, #0x0
0xffff9141061c    28  sub csp, jssp, #0x10 (16)
0xffff91410620    32  stp fp, lr, [jssp, #-16]!
0xffff91410624    36  bl #+0x14 (addr 0xffff91410638)
0xffff91410628    40  movz x16, #0x8
0xffff9141062c    44  sub csp, jssp, #0x10 (16)
0xffff91410630    48  stp fp, lr, [jssp, #-16]!
0xffff91410634    52  bl #+0x4 (addr 0xffff91410638)
0xffff91410638    56  movz x17, #0xa00000000
0xffff9141063c    60  sub csp, jssp, #0x10 (16)
0xffff91410640    64  stp x17, cp, [jssp, #-16]!
0xffff91410644    68  add fp, jssp, #0x10 (16)
0xffff91410648    72  ldr x17, pc+24 (addr 0x0000ffff91410660)    ;; lazy deoptimization bailout 0
0xffff9141064c    76  add x17, x17, x16
0xffff91410650    80  br x17
0xffff91410654    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410658    88  d63f03e0       constant
0xffff9141065c    92  d503201f       constant
0xffff91410660    96  91206000       constant
0xffff91410664   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410648  runtime entry
0xffff91410654  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2194
type = NORMAL
name = BinaryOpICStub(BIT_AND:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff91410600     0  mov x2, x1
0xffff91410604     4  tbnz w2, #0, #+0x14 (addr 0xffff91410618)
0xffff91410608     8  mov x3, x0
0xffff9141060c    12  tbnz w3, #0, #+0x1c (addr 0xffff91410628)
0xffff91410610    16  and x0, x3, x2
0xffff91410614    20  ret
0xffff91410618    24  movz x16, #0x0
0xffff9141061c    28  sub csp, jssp, #0x10 (16)
0xffff91410620    32  stp fp, lr, [jssp, #-16]!
0xffff91410624    36  bl #+0x14 (addr 0xffff91410638)
0xffff91410628    40  movz x16, #0x8
0xffff9141062c    44  sub csp, jssp, #0x10 (16)
0xffff91410630    48  stp fp, lr, [jssp, #-16]!
0xffff91410634    52  bl #+0x4 (addr 0xffff91410638)
0xffff91410638    56  movz x17, #0xa00000000
0xffff9141063c    60  sub csp, jssp, #0x10 (16)
0xffff91410640    64  stp x17, cp, [jssp, #-16]!
0xffff91410644    68  add fp, jssp, #0x10 (16)
0xffff91410648    72  ldr x17, pc+24 (addr 0x0000ffff91410660)    ;; lazy deoptimization bailout 0
0xffff9141064c    76  add x17, x17, x16
0xffff91410650    80  br x17
0xffff91410654    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410658    88  d63f03e0       constant
0xffff9141065c    92  d503201f       constant
0xffff91410660    96  91206000       constant
0xffff91410664   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410648  runtime entry
0xffff91410654  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4384
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff914106e0     0  mov x2, x1
0xffff914106e4     4  tbnz w2, #0, #+0x14 (addr 0xffff914106f8)
0xffff914106e8     8  mov x3, x0
0xffff914106ec    12  tbnz w3, #0, #+0x1c (addr 0xffff91410708)
0xffff914106f0    16  orr x0, x3, x2
0xffff914106f4    20  ret
0xffff914106f8    24  movz x16, #0x0
0xffff914106fc    28  sub csp, jssp, #0x10 (16)
0xffff91410700    32  stp fp, lr, [jssp, #-16]!
0xffff91410704    36  bl #+0x14 (addr 0xffff91410718)
0xffff91410708    40  movz x16, #0x8
0xffff9141070c    44  sub csp, jssp, #0x10 (16)
0xffff91410710    48  stp fp, lr, [jssp, #-16]!
0xffff91410714    52  bl #+0x4 (addr 0xffff91410718)
0xffff91410718    56  movz x17, #0xa00000000
0xffff9141071c    60  sub csp, jssp, #0x10 (16)
0xffff91410720    64  stp x17, cp, [jssp, #-16]!
0xffff91410724    68  add fp, jssp, #0x10 (16)
0xffff91410728    72  ldr x17, pc+24 (addr 0x0000ffff91410740)    ;; lazy deoptimization bailout 0
0xffff9141072c    76  add x17, x17, x16
0xffff91410730    80  br x17
0xffff91410734    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410738    88  d63f03e0       constant
0xffff9141073c    92  d503201f       constant
0xffff91410740    96  91206000       constant
0xffff91410744   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410728  runtime entry
0xffff91410734  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4384
type = NORMAL
name = BinaryOpICStub(BIT_OR:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff914106e0     0  mov x2, x1
0xffff914106e4     4  tbnz w2, #0, #+0x14 (addr 0xffff914106f8)
0xffff914106e8     8  mov x3, x0
0xffff914106ec    12  tbnz w3, #0, #+0x1c (addr 0xffff91410708)
0xffff914106f0    16  orr x0, x3, x2
0xffff914106f4    20  ret
0xffff914106f8    24  movz x16, #0x0
0xffff914106fc    28  sub csp, jssp, #0x10 (16)
0xffff91410700    32  stp fp, lr, [jssp, #-16]!
0xffff91410704    36  bl #+0x14 (addr 0xffff91410718)
0xffff91410708    40  movz x16, #0x8
0xffff9141070c    44  sub csp, jssp, #0x10 (16)
0xffff91410710    48  stp fp, lr, [jssp, #-16]!
0xffff91410714    52  bl #+0x4 (addr 0xffff91410718)
0xffff91410718    56  movz x17, #0xa00000000
0xffff9141071c    60  sub csp, jssp, #0x10 (16)
0xffff91410720    64  stp x17, cp, [jssp, #-16]!
0xffff91410724    68  add fp, jssp, #0x10 (16)
0xffff91410728    72  ldr x17, pc+24 (addr 0x0000ffff91410740)    ;; lazy deoptimization bailout 0
0xffff9141072c    76  add x17, x17, x16
0xffff91410730    80  br x17
0xffff91410734    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410738    88  d63f03e0       constant
0xffff9141073c    92  d503201f       constant
0xffff91410740    96  91206000       constant
0xffff91410744   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410728  runtime entry
0xffff91410734  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4368
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff914107c0     0  mov x2, x1
0xffff914107c4     4  tbnz w2, #0, #+0x14 (addr 0xffff914107d8)
0xffff914107c8     8  mov x3, x0
0xffff914107cc    12  tbnz w3, #0, #+0x1c (addr 0xffff914107e8)
0xffff914107d0    16  orr x0, x3, x2
0xffff914107d4    20  ret
0xffff914107d8    24  movz x16, #0x0
0xffff914107dc    28  sub csp, jssp, #0x10 (16)
0xffff914107e0    32  stp fp, lr, [jssp, #-16]!
0xffff914107e4    36  bl #+0x14 (addr 0xffff914107f8)
0xffff914107e8    40  movz x16, #0x8
0xffff914107ec    44  sub csp, jssp, #0x10 (16)
0xffff914107f0    48  stp fp, lr, [jssp, #-16]!
0xffff914107f4    52  bl #+0x4 (addr 0xffff914107f8)
0xffff914107f8    56  movz x17, #0xa00000000
0xffff914107fc    60  sub csp, jssp, #0x10 (16)
0xffff91410800    64  stp x17, cp, [jssp, #-16]!
0xffff91410804    68  add fp, jssp, #0x10 (16)
0xffff91410808    72  ldr x17, pc+24 (addr 0x0000ffff91410820)    ;; lazy deoptimization bailout 0
0xffff9141080c    76  add x17, x17, x16
0xffff91410810    80  br x17
0xffff91410814    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410818    88  d63f03e0       constant
0xffff9141081c    92  d503201f       constant
0xffff91410820    96  91206000       constant
0xffff91410824   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410808  runtime entry
0xffff91410814  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4368
type = NORMAL
name = BinaryOpICStub(BIT_OR:Int32*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff914107c0     0  mov x2, x1
0xffff914107c4     4  tbnz w2, #0, #+0x14 (addr 0xffff914107d8)
0xffff914107c8     8  mov x3, x0
0xffff914107cc    12  tbnz w3, #0, #+0x1c (addr 0xffff914107e8)
0xffff914107d0    16  orr x0, x3, x2
0xffff914107d4    20  ret
0xffff914107d8    24  movz x16, #0x0
0xffff914107dc    28  sub csp, jssp, #0x10 (16)
0xffff914107e0    32  stp fp, lr, [jssp, #-16]!
0xffff914107e4    36  bl #+0x14 (addr 0xffff914107f8)
0xffff914107e8    40  movz x16, #0x8
0xffff914107ec    44  sub csp, jssp, #0x10 (16)
0xffff914107f0    48  stp fp, lr, [jssp, #-16]!
0xffff914107f4    52  bl #+0x4 (addr 0xffff914107f8)
0xffff914107f8    56  movz x17, #0xa00000000
0xffff914107fc    60  sub csp, jssp, #0x10 (16)
0xffff91410800    64  stp x17, cp, [jssp, #-16]!
0xffff91410804    68  add fp, jssp, #0x10 (16)
0xffff91410808    72  ldr x17, pc+24 (addr 0x0000ffff91410820)    ;; lazy deoptimization bailout 0
0xffff9141080c    76  add x17, x17, x16
0xffff91410810    80  br x17
0xffff91410814    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410818    88  d63f03e0       constant
0xffff9141081c    92  d503201f       constant
0xffff91410820    96  91206000       constant
0xffff91410824   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410808  runtime entry
0xffff91410814  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2336
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff914108a0     0  mov x2, x1
0xffff914108a4     4  tbnz w2, #0, #+0x14 (addr 0xffff914108b8)
0xffff914108a8     8  mov x3, x0
0xffff914108ac    12  tbnz w3, #0, #+0x1c (addr 0xffff914108c8)
0xffff914108b0    16  orr x0, x3, x2
0xffff914108b4    20  ret
0xffff914108b8    24  movz x16, #0x0
0xffff914108bc    28  sub csp, jssp, #0x10 (16)
0xffff914108c0    32  stp fp, lr, [jssp, #-16]!
0xffff914108c4    36  bl #+0x14 (addr 0xffff914108d8)
0xffff914108c8    40  movz x16, #0x8
0xffff914108cc    44  sub csp, jssp, #0x10 (16)
0xffff914108d0    48  stp fp, lr, [jssp, #-16]!
0xffff914108d4    52  bl #+0x4 (addr 0xffff914108d8)
0xffff914108d8    56  movz x17, #0xa00000000
0xffff914108dc    60  sub csp, jssp, #0x10 (16)
0xffff914108e0    64  stp x17, cp, [jssp, #-16]!
0xffff914108e4    68  add fp, jssp, #0x10 (16)
0xffff914108e8    72  ldr x17, pc+24 (addr 0x0000ffff91410900)    ;; lazy deoptimization bailout 0
0xffff914108ec    76  add x17, x17, x16
0xffff914108f0    80  br x17
0xffff914108f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914108f8    88  d63f03e0       constant
0xffff914108fc    92  d503201f       constant
0xffff91410900    96  91206000       constant
0xffff91410904   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914108e8  runtime entry
0xffff914108f4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2336
type = NORMAL
name = BinaryOpICStub(BIT_OR:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff914108a0     0  mov x2, x1
0xffff914108a4     4  tbnz w2, #0, #+0x14 (addr 0xffff914108b8)
0xffff914108a8     8  mov x3, x0
0xffff914108ac    12  tbnz w3, #0, #+0x1c (addr 0xffff914108c8)
0xffff914108b0    16  orr x0, x3, x2
0xffff914108b4    20  ret
0xffff914108b8    24  movz x16, #0x0
0xffff914108bc    28  sub csp, jssp, #0x10 (16)
0xffff914108c0    32  stp fp, lr, [jssp, #-16]!
0xffff914108c4    36  bl #+0x14 (addr 0xffff914108d8)
0xffff914108c8    40  movz x16, #0x8
0xffff914108cc    44  sub csp, jssp, #0x10 (16)
0xffff914108d0    48  stp fp, lr, [jssp, #-16]!
0xffff914108d4    52  bl #+0x4 (addr 0xffff914108d8)
0xffff914108d8    56  movz x17, #0xa00000000
0xffff914108dc    60  sub csp, jssp, #0x10 (16)
0xffff914108e0    64  stp x17, cp, [jssp, #-16]!
0xffff914108e4    68  add fp, jssp, #0x10 (16)
0xffff914108e8    72  ldr x17, pc+24 (addr 0x0000ffff91410900)    ;; lazy deoptimization bailout 0
0xffff914108ec    76  add x17, x17, x16
0xffff914108f0    80  br x17
0xffff914108f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914108f8    88  d63f03e0       constant
0xffff914108fc    92  d503201f       constant
0xffff91410900    96  91206000       constant
0xffff91410904   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914108e8  runtime entry
0xffff914108f4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2320
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff91410980     0  mov x2, x1
0xffff91410984     4  tbnz w2, #0, #+0x14 (addr 0xffff91410998)
0xffff91410988     8  mov x3, x0
0xffff9141098c    12  tbnz w3, #0, #+0x1c (addr 0xffff914109a8)
0xffff91410990    16  orr x0, x3, x2
0xffff91410994    20  ret
0xffff91410998    24  movz x16, #0x0
0xffff9141099c    28  sub csp, jssp, #0x10 (16)
0xffff914109a0    32  stp fp, lr, [jssp, #-16]!
0xffff914109a4    36  bl #+0x14 (addr 0xffff914109b8)
0xffff914109a8    40  movz x16, #0x8
0xffff914109ac    44  sub csp, jssp, #0x10 (16)
0xffff914109b0    48  stp fp, lr, [jssp, #-16]!
0xffff914109b4    52  bl #+0x4 (addr 0xffff914109b8)
0xffff914109b8    56  movz x17, #0xa00000000
0xffff914109bc    60  sub csp, jssp, #0x10 (16)
0xffff914109c0    64  stp x17, cp, [jssp, #-16]!
0xffff914109c4    68  add fp, jssp, #0x10 (16)
0xffff914109c8    72  ldr x17, pc+24 (addr 0x0000ffff914109e0)    ;; lazy deoptimization bailout 0
0xffff914109cc    76  add x17, x17, x16
0xffff914109d0    80  br x17
0xffff914109d4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914109d8    88  d63f03e0       constant
0xffff914109dc    92  d503201f       constant
0xffff914109e0    96  91206000       constant
0xffff914109e4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914109c8  runtime entry
0xffff914109d4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2320
type = NORMAL
name = BinaryOpICStub(BIT_OR:Int32*Smi->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff91410980     0  mov x2, x1
0xffff91410984     4  tbnz w2, #0, #+0x14 (addr 0xffff91410998)
0xffff91410988     8  mov x3, x0
0xffff9141098c    12  tbnz w3, #0, #+0x1c (addr 0xffff914109a8)
0xffff91410990    16  orr x0, x3, x2
0xffff91410994    20  ret
0xffff91410998    24  movz x16, #0x0
0xffff9141099c    28  sub csp, jssp, #0x10 (16)
0xffff914109a0    32  stp fp, lr, [jssp, #-16]!
0xffff914109a4    36  bl #+0x14 (addr 0xffff914109b8)
0xffff914109a8    40  movz x16, #0x8
0xffff914109ac    44  sub csp, jssp, #0x10 (16)
0xffff914109b0    48  stp fp, lr, [jssp, #-16]!
0xffff914109b4    52  bl #+0x4 (addr 0xffff914109b8)
0xffff914109b8    56  movz x17, #0xa00000000
0xffff914109bc    60  sub csp, jssp, #0x10 (16)
0xffff914109c0    64  stp x17, cp, [jssp, #-16]!
0xffff914109c4    68  add fp, jssp, #0x10 (16)
0xffff914109c8    72  ldr x17, pc+24 (addr 0x0000ffff914109e0)    ;; lazy deoptimization bailout 0
0xffff914109cc    76  add x17, x17, x16
0xffff914109d0    80  br x17
0xffff914109d4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914109d8    88  d63f03e0       constant
0xffff914109dc    92  d503201f       constant
0xffff914109e0    96  91206000       constant
0xffff914109e4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914109c8  runtime entry
0xffff914109d4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2464
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff91410a60     0  mov x2, x0
0xffff91410a64     4  tbnz w2, #0, #+0xac (addr 0xffff91410b10)
0xffff91410a68     8  tbnz w1, #0, #+0x18 (addr 0xffff91410a80)
0xffff91410a6c    12  asr x4, x1, #32
0xffff91410a70    16  asr x0, x2, #32
0xffff91410a74    20  orr w0, w0, w4
0xffff91410a78    24  lsl x0, x0, #32
0xffff91410a7c    28  ret
0xffff91410a80    32  sub csp, jssp, #0x10 (16)
0xffff91410a84    36  stp fp, lr, [jssp, #-16]!
0xffff91410a88    40  movz fp, #0xa00000000
0xffff91410a8c    44  sub csp, jssp, #0x8 (8)
0xffff91410a90    48  str fp, [jssp, #-8]!
0xffff91410a94    52  add fp, jssp, #0x8 (8)
0xffff91410a98    56  ldur x16, [x1, #-1]
0xffff91410a9c    60  ldr x17, [x26, #120]
0xffff91410aa0    64  cmp x16, x17
0xffff91410aa4    68  b.ne #+0x30 (addr 0xffff91410ad4)
0xffff91410aa8    72  ldur d30, [x1, #7]
0xffff91410aac    76  fcvtzs x4, d30
0xffff91410ab0    80  cmp x4, #0x1 (1)
0xffff91410ab4    84  ccmn x4, #1, #nzcV, vc
0xffff91410ab8    88  b.vc #+0x18 (addr 0xffff91410ad0)
0xffff91410abc    92  sub csp, jssp, #0x8 (8)
0xffff91410ac0    96  str lr, [jssp, #-8]!
0xffff91410ac4   100  ldr x16, pc+68 (addr 0x0000ffff91410b08)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91410ac8   104  blr x16
0xffff91410acc   108  ldr lr, [jssp], #8
0xffff91410ad0   112  b #+0x24 (addr 0xffff91410af4)
0xffff91410ad4   116  ldp x4, x3, [x26, #64]
0xffff91410ad8   120  cmp x1, x4
0xffff91410adc   124  cset x4, eq
0xffff91410ae0   128  ccmp x1, x3, #nZcv, ne
0xffff91410ae4   132  b.eq #+0x10 (addr 0xffff91410af4)
0xffff91410ae8   136  ldr x16, [x26, #40]
0xffff91410aec   140  cmp x1, x16
0xffff91410af0   144  b.ne #+0x30 (addr 0xffff91410b20)
0xffff91410af4   148  ldr lr, [jssp, #16]
0xffff91410af8   152  ldp xzr, fp, [jssp], #24
0xffff91410afc   156  b #-0x8c (addr 0xffff91410a70)
0xffff91410b00   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91410b04   164  d63f03e0       constant
0xffff91410b08   168  9140fee0       constant
0xffff91410b0c   172  0000ffff       constant
0xffff91410b10   176  movz x16, #0x0
0xffff91410b14   180  sub csp, jssp, #0x10 (16)
0xffff91410b18   184  stp fp, lr, [jssp, #-16]!
0xffff91410b1c   188  bl #+0xc (addr 0xffff91410b28)
0xffff91410b20   192  movz x16, #0x8
0xffff91410b24   196  bl #+0x14 (addr 0xffff91410b38)
0xffff91410b28   200  movz x17, #0xa00000000
0xffff91410b2c   204  sub csp, jssp, #0x10 (16)
0xffff91410b30   208  stp x17, cp, [jssp, #-16]!
0xffff91410b34   212  add fp, jssp, #0x10 (16)
0xffff91410b38   216  ldr x17, pc+24 (addr 0x0000ffff91410b50)    ;; lazy deoptimization bailout 0
0xffff91410b3c   220  add x17, x17, x16
0xffff91410b40   224  br x17
0xffff91410b44   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410b48   232  d63f03e0       constant
0xffff91410b4c   236  d503201f       constant
0xffff91410b50   240  91206000       constant
0xffff91410b54   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff91410ac4  code target (STUB)  (0xffff9140fee0)
0xffff91410b00  constant pool (size 16)
0xffff91410b38  runtime entry
0xffff91410b44  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2464
type = NORMAL
name = BinaryOpICStub(BIT_OR:Number*Smi->Int32)
compiler = crankshaft
Instructions (size = 256)
0xffff91410a60     0  mov x2, x0
0xffff91410a64     4  tbnz w2, #0, #+0xac (addr 0xffff91410b10)
0xffff91410a68     8  tbnz w1, #0, #+0x18 (addr 0xffff91410a80)
0xffff91410a6c    12  asr x4, x1, #32
0xffff91410a70    16  asr x0, x2, #32
0xffff91410a74    20  orr w0, w0, w4
0xffff91410a78    24  lsl x0, x0, #32
0xffff91410a7c    28  ret
0xffff91410a80    32  sub csp, jssp, #0x10 (16)
0xffff91410a84    36  stp fp, lr, [jssp, #-16]!
0xffff91410a88    40  movz fp, #0xa00000000
0xffff91410a8c    44  sub csp, jssp, #0x8 (8)
0xffff91410a90    48  str fp, [jssp, #-8]!
0xffff91410a94    52  add fp, jssp, #0x8 (8)
0xffff91410a98    56  ldur x16, [x1, #-1]
0xffff91410a9c    60  ldr x17, [x26, #120]
0xffff91410aa0    64  cmp x16, x17
0xffff91410aa4    68  b.ne #+0x30 (addr 0xffff91410ad4)
0xffff91410aa8    72  ldur d30, [x1, #7]
0xffff91410aac    76  fcvtzs x4, d30
0xffff91410ab0    80  cmp x4, #0x1 (1)
0xffff91410ab4    84  ccmn x4, #1, #nzcV, vc
0xffff91410ab8    88  b.vc #+0x18 (addr 0xffff91410ad0)
0xffff91410abc    92  sub csp, jssp, #0x8 (8)
0xffff91410ac0    96  str lr, [jssp, #-8]!
0xffff91410ac4   100  ldr x16, pc+68 (addr 0x0000ffff91410b08)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91410ac8   104  blr x16
0xffff91410acc   108  ldr lr, [jssp], #8
0xffff91410ad0   112  b #+0x24 (addr 0xffff91410af4)
0xffff91410ad4   116  ldp x4, x3, [x26, #64]
0xffff91410ad8   120  cmp x1, x4
0xffff91410adc   124  cset x4, eq
0xffff91410ae0   128  ccmp x1, x3, #nZcv, ne
0xffff91410ae4   132  b.eq #+0x10 (addr 0xffff91410af4)
0xffff91410ae8   136  ldr x16, [x26, #40]
0xffff91410aec   140  cmp x1, x16
0xffff91410af0   144  b.ne #+0x30 (addr 0xffff91410b20)
0xffff91410af4   148  ldr lr, [jssp, #16]
0xffff91410af8   152  ldp xzr, fp, [jssp], #24
0xffff91410afc   156  b #-0x8c (addr 0xffff91410a70)
0xffff91410b00   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91410b04   164  d63f03e0       constant
0xffff91410b08   168  9140fee0       constant
0xffff91410b0c   172  0000ffff       constant
0xffff91410b10   176  movz x16, #0x0
0xffff91410b14   180  sub csp, jssp, #0x10 (16)
0xffff91410b18   184  stp fp, lr, [jssp, #-16]!
0xffff91410b1c   188  bl #+0xc (addr 0xffff91410b28)
0xffff91410b20   192  movz x16, #0x8
0xffff91410b24   196  bl #+0x14 (addr 0xffff91410b38)
0xffff91410b28   200  movz x17, #0xa00000000
0xffff91410b2c   204  sub csp, jssp, #0x10 (16)
0xffff91410b30   208  stp x17, cp, [jssp, #-16]!
0xffff91410b34   212  add fp, jssp, #0x10 (16)
0xffff91410b38   216  ldr x17, pc+24 (addr 0x0000ffff91410b50)    ;; lazy deoptimization bailout 0
0xffff91410b3c   220  add x17, x17, x16
0xffff91410b40   224  br x17
0xffff91410b44   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410b48   232  d63f03e0       constant
0xffff91410b4c   236  d503201f       constant
0xffff91410b50   240  91206000       constant
0xffff91410b54   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff91410ac4  code target (STUB)  (0xffff9140fee0)
0xffff91410b00  constant pool (size 16)
0xffff91410b38  runtime entry
0xffff91410b44  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2448
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff91410bc0     0  mov x2, x0
0xffff91410bc4     4  tbnz w2, #0, #+0xac (addr 0xffff91410c70)
0xffff91410bc8     8  tbnz w1, #0, #+0x18 (addr 0xffff91410be0)
0xffff91410bcc    12  asr x4, x1, #32
0xffff91410bd0    16  asr x0, x2, #32
0xffff91410bd4    20  orr w0, w0, w4
0xffff91410bd8    24  lsl x0, x0, #32
0xffff91410bdc    28  ret
0xffff91410be0    32  sub csp, jssp, #0x10 (16)
0xffff91410be4    36  stp fp, lr, [jssp, #-16]!
0xffff91410be8    40  movz fp, #0xa00000000
0xffff91410bec    44  sub csp, jssp, #0x8 (8)
0xffff91410bf0    48  str fp, [jssp, #-8]!
0xffff91410bf4    52  add fp, jssp, #0x8 (8)
0xffff91410bf8    56  ldur x16, [x1, #-1]
0xffff91410bfc    60  ldr x17, [x26, #120]
0xffff91410c00    64  cmp x16, x17
0xffff91410c04    68  b.ne #+0x30 (addr 0xffff91410c34)
0xffff91410c08    72  ldur d30, [x1, #7]
0xffff91410c0c    76  fcvtzs x4, d30
0xffff91410c10    80  cmp x4, #0x1 (1)
0xffff91410c14    84  ccmn x4, #1, #nzcV, vc
0xffff91410c18    88  b.vc #+0x18 (addr 0xffff91410c30)
0xffff91410c1c    92  sub csp, jssp, #0x8 (8)
0xffff91410c20    96  str lr, [jssp, #-8]!
0xffff91410c24   100  ldr x16, pc+68 (addr 0x0000ffff91410c68)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91410c28   104  blr x16
0xffff91410c2c   108  ldr lr, [jssp], #8
0xffff91410c30   112  b #+0x24 (addr 0xffff91410c54)
0xffff91410c34   116  ldp x4, x3, [x26, #64]
0xffff91410c38   120  cmp x1, x4
0xffff91410c3c   124  cset x4, eq
0xffff91410c40   128  ccmp x1, x3, #nZcv, ne
0xffff91410c44   132  b.eq #+0x10 (addr 0xffff91410c54)
0xffff91410c48   136  ldr x16, [x26, #40]
0xffff91410c4c   140  cmp x1, x16
0xffff91410c50   144  b.ne #+0x30 (addr 0xffff91410c80)
0xffff91410c54   148  ldr lr, [jssp, #16]
0xffff91410c58   152  ldp xzr, fp, [jssp], #24
0xffff91410c5c   156  b #-0x8c (addr 0xffff91410bd0)
0xffff91410c60   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91410c64   164  d63f03e0       constant
0xffff91410c68   168  9140fee0       constant
0xffff91410c6c   172  0000ffff       constant
0xffff91410c70   176  movz x16, #0x0
0xffff91410c74   180  sub csp, jssp, #0x10 (16)
0xffff91410c78   184  stp fp, lr, [jssp, #-16]!
0xffff91410c7c   188  bl #+0xc (addr 0xffff91410c88)
0xffff91410c80   192  movz x16, #0x8
0xffff91410c84   196  bl #+0x14 (addr 0xffff91410c98)
0xffff91410c88   200  movz x17, #0xa00000000
0xffff91410c8c   204  sub csp, jssp, #0x10 (16)
0xffff91410c90   208  stp x17, cp, [jssp, #-16]!
0xffff91410c94   212  add fp, jssp, #0x10 (16)
0xffff91410c98   216  ldr x17, pc+24 (addr 0x0000ffff91410cb0)    ;; lazy deoptimization bailout 0
0xffff91410c9c   220  add x17, x17, x16
0xffff91410ca0   224  br x17
0xffff91410ca4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410ca8   232  d63f03e0       constant
0xffff91410cac   236  d503201f       constant
0xffff91410cb0   240  91206000       constant
0xffff91410cb4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff91410c24  code target (STUB)  (0xffff9140fee0)
0xffff91410c60  constant pool (size 16)
0xffff91410c98  runtime entry
0xffff91410ca4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2448
type = NORMAL
name = BinaryOpICStub(BIT_OR:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff91410bc0     0  mov x2, x0
0xffff91410bc4     4  tbnz w2, #0, #+0xac (addr 0xffff91410c70)
0xffff91410bc8     8  tbnz w1, #0, #+0x18 (addr 0xffff91410be0)
0xffff91410bcc    12  asr x4, x1, #32
0xffff91410bd0    16  asr x0, x2, #32
0xffff91410bd4    20  orr w0, w0, w4
0xffff91410bd8    24  lsl x0, x0, #32
0xffff91410bdc    28  ret
0xffff91410be0    32  sub csp, jssp, #0x10 (16)
0xffff91410be4    36  stp fp, lr, [jssp, #-16]!
0xffff91410be8    40  movz fp, #0xa00000000
0xffff91410bec    44  sub csp, jssp, #0x8 (8)
0xffff91410bf0    48  str fp, [jssp, #-8]!
0xffff91410bf4    52  add fp, jssp, #0x8 (8)
0xffff91410bf8    56  ldur x16, [x1, #-1]
0xffff91410bfc    60  ldr x17, [x26, #120]
0xffff91410c00    64  cmp x16, x17
0xffff91410c04    68  b.ne #+0x30 (addr 0xffff91410c34)
0xffff91410c08    72  ldur d30, [x1, #7]
0xffff91410c0c    76  fcvtzs x4, d30
0xffff91410c10    80  cmp x4, #0x1 (1)
0xffff91410c14    84  ccmn x4, #1, #nzcV, vc
0xffff91410c18    88  b.vc #+0x18 (addr 0xffff91410c30)
0xffff91410c1c    92  sub csp, jssp, #0x8 (8)
0xffff91410c20    96  str lr, [jssp, #-8]!
0xffff91410c24   100  ldr x16, pc+68 (addr 0x0000ffff91410c68)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91410c28   104  blr x16
0xffff91410c2c   108  ldr lr, [jssp], #8
0xffff91410c30   112  b #+0x24 (addr 0xffff91410c54)
0xffff91410c34   116  ldp x4, x3, [x26, #64]
0xffff91410c38   120  cmp x1, x4
0xffff91410c3c   124  cset x4, eq
0xffff91410c40   128  ccmp x1, x3, #nZcv, ne
0xffff91410c44   132  b.eq #+0x10 (addr 0xffff91410c54)
0xffff91410c48   136  ldr x16, [x26, #40]
0xffff91410c4c   140  cmp x1, x16
0xffff91410c50   144  b.ne #+0x30 (addr 0xffff91410c80)
0xffff91410c54   148  ldr lr, [jssp, #16]
0xffff91410c58   152  ldp xzr, fp, [jssp], #24
0xffff91410c5c   156  b #-0x8c (addr 0xffff91410bd0)
0xffff91410c60   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91410c64   164  d63f03e0       constant
0xffff91410c68   168  9140fee0       constant
0xffff91410c6c   172  0000ffff       constant
0xffff91410c70   176  movz x16, #0x0
0xffff91410c74   180  sub csp, jssp, #0x10 (16)
0xffff91410c78   184  stp fp, lr, [jssp, #-16]!
0xffff91410c7c   188  bl #+0xc (addr 0xffff91410c88)
0xffff91410c80   192  movz x16, #0x8
0xffff91410c84   196  bl #+0x14 (addr 0xffff91410c98)
0xffff91410c88   200  movz x17, #0xa00000000
0xffff91410c8c   204  sub csp, jssp, #0x10 (16)
0xffff91410c90   208  stp x17, cp, [jssp, #-16]!
0xffff91410c94   212  add fp, jssp, #0x10 (16)
0xffff91410c98   216  ldr x17, pc+24 (addr 0x0000ffff91410cb0)    ;; lazy deoptimization bailout 0
0xffff91410c9c   220  add x17, x17, x16
0xffff91410ca0   224  br x17
0xffff91410ca4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410ca8   232  d63f03e0       constant
0xffff91410cac   236  d503201f       constant
0xffff91410cb0   240  91206000       constant
0xffff91410cb4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff91410c24  code target (STUB)  (0xffff9140fee0)
0xffff91410c60  constant pool (size 16)
0xffff91410c98  runtime entry
0xffff91410ca4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4256
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff91410d20     0  mov x2, x1
0xffff91410d24     4  tbnz w2, #0, #+0x14 (addr 0xffff91410d38)
0xffff91410d28     8  mov x3, x0
0xffff91410d2c    12  tbnz w3, #0, #+0x1c (addr 0xffff91410d48)
0xffff91410d30    16  orr x0, x3, x2
0xffff91410d34    20  ret
0xffff91410d38    24  movz x16, #0x0
0xffff91410d3c    28  sub csp, jssp, #0x10 (16)
0xffff91410d40    32  stp fp, lr, [jssp, #-16]!
0xffff91410d44    36  bl #+0x14 (addr 0xffff91410d58)
0xffff91410d48    40  movz x16, #0x8
0xffff91410d4c    44  sub csp, jssp, #0x10 (16)
0xffff91410d50    48  stp fp, lr, [jssp, #-16]!
0xffff91410d54    52  bl #+0x4 (addr 0xffff91410d58)
0xffff91410d58    56  movz x17, #0xa00000000
0xffff91410d5c    60  sub csp, jssp, #0x10 (16)
0xffff91410d60    64  stp x17, cp, [jssp, #-16]!
0xffff91410d64    68  add fp, jssp, #0x10 (16)
0xffff91410d68    72  ldr x17, pc+24 (addr 0x0000ffff91410d80)    ;; lazy deoptimization bailout 0
0xffff91410d6c    76  add x17, x17, x16
0xffff91410d70    80  br x17
0xffff91410d74    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410d78    88  d63f03e0       constant
0xffff91410d7c    92  d503201f       constant
0xffff91410d80    96  91206000       constant
0xffff91410d84   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410d68  runtime entry
0xffff91410d74  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4256
type = NORMAL
name = BinaryOpICStub(BIT_OR:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff91410d20     0  mov x2, x1
0xffff91410d24     4  tbnz w2, #0, #+0x14 (addr 0xffff91410d38)
0xffff91410d28     8  mov x3, x0
0xffff91410d2c    12  tbnz w3, #0, #+0x1c (addr 0xffff91410d48)
0xffff91410d30    16  orr x0, x3, x2
0xffff91410d34    20  ret
0xffff91410d38    24  movz x16, #0x0
0xffff91410d3c    28  sub csp, jssp, #0x10 (16)
0xffff91410d40    32  stp fp, lr, [jssp, #-16]!
0xffff91410d44    36  bl #+0x14 (addr 0xffff91410d58)
0xffff91410d48    40  movz x16, #0x8
0xffff91410d4c    44  sub csp, jssp, #0x10 (16)
0xffff91410d50    48  stp fp, lr, [jssp, #-16]!
0xffff91410d54    52  bl #+0x4 (addr 0xffff91410d58)
0xffff91410d58    56  movz x17, #0xa00000000
0xffff91410d5c    60  sub csp, jssp, #0x10 (16)
0xffff91410d60    64  stp x17, cp, [jssp, #-16]!
0xffff91410d64    68  add fp, jssp, #0x10 (16)
0xffff91410d68    72  ldr x17, pc+24 (addr 0x0000ffff91410d80)    ;; lazy deoptimization bailout 0
0xffff91410d6c    76  add x17, x17, x16
0xffff91410d70    80  br x17
0xffff91410d74    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410d78    88  d63f03e0       constant
0xffff91410d7c    92  d503201f       constant
0xffff91410d80    96  91206000       constant
0xffff91410d84   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410d68  runtime entry
0xffff91410d74  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4240
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff91410e00     0  mov x2, x1
0xffff91410e04     4  tbnz w2, #0, #+0x14 (addr 0xffff91410e18)
0xffff91410e08     8  mov x3, x0
0xffff91410e0c    12  tbnz w3, #0, #+0x1c (addr 0xffff91410e28)
0xffff91410e10    16  orr x0, x3, x2
0xffff91410e14    20  ret
0xffff91410e18    24  movz x16, #0x0
0xffff91410e1c    28  sub csp, jssp, #0x10 (16)
0xffff91410e20    32  stp fp, lr, [jssp, #-16]!
0xffff91410e24    36  bl #+0x14 (addr 0xffff91410e38)
0xffff91410e28    40  movz x16, #0x8
0xffff91410e2c    44  sub csp, jssp, #0x10 (16)
0xffff91410e30    48  stp fp, lr, [jssp, #-16]!
0xffff91410e34    52  bl #+0x4 (addr 0xffff91410e38)
0xffff91410e38    56  movz x17, #0xa00000000
0xffff91410e3c    60  sub csp, jssp, #0x10 (16)
0xffff91410e40    64  stp x17, cp, [jssp, #-16]!
0xffff91410e44    68  add fp, jssp, #0x10 (16)
0xffff91410e48    72  ldr x17, pc+24 (addr 0x0000ffff91410e60)    ;; lazy deoptimization bailout 0
0xffff91410e4c    76  add x17, x17, x16
0xffff91410e50    80  br x17
0xffff91410e54    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410e58    88  d63f03e0       constant
0xffff91410e5c    92  d503201f       constant
0xffff91410e60    96  91206000       constant
0xffff91410e64   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410e48  runtime entry
0xffff91410e54  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4240
type = NORMAL
name = BinaryOpICStub(BIT_OR:Smi*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff91410e00     0  mov x2, x1
0xffff91410e04     4  tbnz w2, #0, #+0x14 (addr 0xffff91410e18)
0xffff91410e08     8  mov x3, x0
0xffff91410e0c    12  tbnz w3, #0, #+0x1c (addr 0xffff91410e28)
0xffff91410e10    16  orr x0, x3, x2
0xffff91410e14    20  ret
0xffff91410e18    24  movz x16, #0x0
0xffff91410e1c    28  sub csp, jssp, #0x10 (16)
0xffff91410e20    32  stp fp, lr, [jssp, #-16]!
0xffff91410e24    36  bl #+0x14 (addr 0xffff91410e38)
0xffff91410e28    40  movz x16, #0x8
0xffff91410e2c    44  sub csp, jssp, #0x10 (16)
0xffff91410e30    48  stp fp, lr, [jssp, #-16]!
0xffff91410e34    52  bl #+0x4 (addr 0xffff91410e38)
0xffff91410e38    56  movz x17, #0xa00000000
0xffff91410e3c    60  sub csp, jssp, #0x10 (16)
0xffff91410e40    64  stp x17, cp, [jssp, #-16]!
0xffff91410e44    68  add fp, jssp, #0x10 (16)
0xffff91410e48    72  ldr x17, pc+24 (addr 0x0000ffff91410e60)    ;; lazy deoptimization bailout 0
0xffff91410e4c    76  add x17, x17, x16
0xffff91410e50    80  br x17
0xffff91410e54    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410e58    88  d63f03e0       constant
0xffff91410e5c    92  d503201f       constant
0xffff91410e60    96  91206000       constant
0xffff91410e64   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410e48  runtime entry
0xffff91410e54  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2192
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff91410ee0     0  mov x2, x1
0xffff91410ee4     4  tbnz w2, #0, #+0x14 (addr 0xffff91410ef8)
0xffff91410ee8     8  mov x3, x0
0xffff91410eec    12  tbnz w3, #0, #+0x1c (addr 0xffff91410f08)
0xffff91410ef0    16  orr x0, x3, x2
0xffff91410ef4    20  ret
0xffff91410ef8    24  movz x16, #0x0
0xffff91410efc    28  sub csp, jssp, #0x10 (16)
0xffff91410f00    32  stp fp, lr, [jssp, #-16]!
0xffff91410f04    36  bl #+0x14 (addr 0xffff91410f18)
0xffff91410f08    40  movz x16, #0x8
0xffff91410f0c    44  sub csp, jssp, #0x10 (16)
0xffff91410f10    48  stp fp, lr, [jssp, #-16]!
0xffff91410f14    52  bl #+0x4 (addr 0xffff91410f18)
0xffff91410f18    56  movz x17, #0xa00000000
0xffff91410f1c    60  sub csp, jssp, #0x10 (16)
0xffff91410f20    64  stp x17, cp, [jssp, #-16]!
0xffff91410f24    68  add fp, jssp, #0x10 (16)
0xffff91410f28    72  ldr x17, pc+24 (addr 0x0000ffff91410f40)    ;; lazy deoptimization bailout 0
0xffff91410f2c    76  add x17, x17, x16
0xffff91410f30    80  br x17
0xffff91410f34    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410f38    88  d63f03e0       constant
0xffff91410f3c    92  d503201f       constant
0xffff91410f40    96  91206000       constant
0xffff91410f44   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410f28  runtime entry
0xffff91410f34  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2192
type = NORMAL
name = BinaryOpICStub(BIT_OR:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff91410ee0     0  mov x2, x1
0xffff91410ee4     4  tbnz w2, #0, #+0x14 (addr 0xffff91410ef8)
0xffff91410ee8     8  mov x3, x0
0xffff91410eec    12  tbnz w3, #0, #+0x1c (addr 0xffff91410f08)
0xffff91410ef0    16  orr x0, x3, x2
0xffff91410ef4    20  ret
0xffff91410ef8    24  movz x16, #0x0
0xffff91410efc    28  sub csp, jssp, #0x10 (16)
0xffff91410f00    32  stp fp, lr, [jssp, #-16]!
0xffff91410f04    36  bl #+0x14 (addr 0xffff91410f18)
0xffff91410f08    40  movz x16, #0x8
0xffff91410f0c    44  sub csp, jssp, #0x10 (16)
0xffff91410f10    48  stp fp, lr, [jssp, #-16]!
0xffff91410f14    52  bl #+0x4 (addr 0xffff91410f18)
0xffff91410f18    56  movz x17, #0xa00000000
0xffff91410f1c    60  sub csp, jssp, #0x10 (16)
0xffff91410f20    64  stp x17, cp, [jssp, #-16]!
0xffff91410f24    68  add fp, jssp, #0x10 (16)
0xffff91410f28    72  ldr x17, pc+24 (addr 0x0000ffff91410f40)    ;; lazy deoptimization bailout 0
0xffff91410f2c    76  add x17, x17, x16
0xffff91410f30    80  br x17
0xffff91410f34    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91410f38    88  d63f03e0       constant
0xffff91410f3c    92  d503201f       constant
0xffff91410f40    96  91206000       constant
0xffff91410f44   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91410f28  runtime entry
0xffff91410f34  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4385
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff91410fc0     0  mov x2, x1
0xffff91410fc4     4  tbnz w2, #0, #+0x14 (addr 0xffff91410fd8)
0xffff91410fc8     8  mov x3, x0
0xffff91410fcc    12  tbnz w3, #0, #+0x1c (addr 0xffff91410fe8)
0xffff91410fd0    16  eor x0, x3, x2
0xffff91410fd4    20  ret
0xffff91410fd8    24  movz x16, #0x0
0xffff91410fdc    28  sub csp, jssp, #0x10 (16)
0xffff91410fe0    32  stp fp, lr, [jssp, #-16]!
0xffff91410fe4    36  bl #+0x14 (addr 0xffff91410ff8)
0xffff91410fe8    40  movz x16, #0x8
0xffff91410fec    44  sub csp, jssp, #0x10 (16)
0xffff91410ff0    48  stp fp, lr, [jssp, #-16]!
0xffff91410ff4    52  bl #+0x4 (addr 0xffff91410ff8)
0xffff91410ff8    56  movz x17, #0xa00000000
0xffff91410ffc    60  sub csp, jssp, #0x10 (16)
0xffff91411000    64  stp x17, cp, [jssp, #-16]!
0xffff91411004    68  add fp, jssp, #0x10 (16)
0xffff91411008    72  ldr x17, pc+24 (addr 0x0000ffff91411020)    ;; lazy deoptimization bailout 0
0xffff9141100c    76  add x17, x17, x16
0xffff91411010    80  br x17
0xffff91411014    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411018    88  d63f03e0       constant
0xffff9141101c    92  d503201f       constant
0xffff91411020    96  91206000       constant
0xffff91411024   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91411008  runtime entry
0xffff91411014  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4385
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff91410fc0     0  mov x2, x1
0xffff91410fc4     4  tbnz w2, #0, #+0x14 (addr 0xffff91410fd8)
0xffff91410fc8     8  mov x3, x0
0xffff91410fcc    12  tbnz w3, #0, #+0x1c (addr 0xffff91410fe8)
0xffff91410fd0    16  eor x0, x3, x2
0xffff91410fd4    20  ret
0xffff91410fd8    24  movz x16, #0x0
0xffff91410fdc    28  sub csp, jssp, #0x10 (16)
0xffff91410fe0    32  stp fp, lr, [jssp, #-16]!
0xffff91410fe4    36  bl #+0x14 (addr 0xffff91410ff8)
0xffff91410fe8    40  movz x16, #0x8
0xffff91410fec    44  sub csp, jssp, #0x10 (16)
0xffff91410ff0    48  stp fp, lr, [jssp, #-16]!
0xffff91410ff4    52  bl #+0x4 (addr 0xffff91410ff8)
0xffff91410ff8    56  movz x17, #0xa00000000
0xffff91410ffc    60  sub csp, jssp, #0x10 (16)
0xffff91411000    64  stp x17, cp, [jssp, #-16]!
0xffff91411004    68  add fp, jssp, #0x10 (16)
0xffff91411008    72  ldr x17, pc+24 (addr 0x0000ffff91411020)    ;; lazy deoptimization bailout 0
0xffff9141100c    76  add x17, x17, x16
0xffff91411010    80  br x17
0xffff91411014    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411018    88  d63f03e0       constant
0xffff9141101c    92  d503201f       constant
0xffff91411020    96  91206000       constant
0xffff91411024   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91411008  runtime entry
0xffff91411014  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4369
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff914110a0     0  mov x2, x1
0xffff914110a4     4  tbnz w2, #0, #+0x14 (addr 0xffff914110b8)
0xffff914110a8     8  mov x3, x0
0xffff914110ac    12  tbnz w3, #0, #+0x1c (addr 0xffff914110c8)
0xffff914110b0    16  eor x0, x3, x2
0xffff914110b4    20  ret
0xffff914110b8    24  movz x16, #0x0
0xffff914110bc    28  sub csp, jssp, #0x10 (16)
0xffff914110c0    32  stp fp, lr, [jssp, #-16]!
0xffff914110c4    36  bl #+0x14 (addr 0xffff914110d8)
0xffff914110c8    40  movz x16, #0x8
0xffff914110cc    44  sub csp, jssp, #0x10 (16)
0xffff914110d0    48  stp fp, lr, [jssp, #-16]!
0xffff914110d4    52  bl #+0x4 (addr 0xffff914110d8)
0xffff914110d8    56  movz x17, #0xa00000000
0xffff914110dc    60  sub csp, jssp, #0x10 (16)
0xffff914110e0    64  stp x17, cp, [jssp, #-16]!
0xffff914110e4    68  add fp, jssp, #0x10 (16)
0xffff914110e8    72  ldr x17, pc+24 (addr 0x0000ffff91411100)    ;; lazy deoptimization bailout 0
0xffff914110ec    76  add x17, x17, x16
0xffff914110f0    80  br x17
0xffff914110f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914110f8    88  d63f03e0       constant
0xffff914110fc    92  d503201f       constant
0xffff91411100    96  91206000       constant
0xffff91411104   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914110e8  runtime entry
0xffff914110f4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4369
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Int32*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff914110a0     0  mov x2, x1
0xffff914110a4     4  tbnz w2, #0, #+0x14 (addr 0xffff914110b8)
0xffff914110a8     8  mov x3, x0
0xffff914110ac    12  tbnz w3, #0, #+0x1c (addr 0xffff914110c8)
0xffff914110b0    16  eor x0, x3, x2
0xffff914110b4    20  ret
0xffff914110b8    24  movz x16, #0x0
0xffff914110bc    28  sub csp, jssp, #0x10 (16)
0xffff914110c0    32  stp fp, lr, [jssp, #-16]!
0xffff914110c4    36  bl #+0x14 (addr 0xffff914110d8)
0xffff914110c8    40  movz x16, #0x8
0xffff914110cc    44  sub csp, jssp, #0x10 (16)
0xffff914110d0    48  stp fp, lr, [jssp, #-16]!
0xffff914110d4    52  bl #+0x4 (addr 0xffff914110d8)
0xffff914110d8    56  movz x17, #0xa00000000
0xffff914110dc    60  sub csp, jssp, #0x10 (16)
0xffff914110e0    64  stp x17, cp, [jssp, #-16]!
0xffff914110e4    68  add fp, jssp, #0x10 (16)
0xffff914110e8    72  ldr x17, pc+24 (addr 0x0000ffff91411100)    ;; lazy deoptimization bailout 0
0xffff914110ec    76  add x17, x17, x16
0xffff914110f0    80  br x17
0xffff914110f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914110f8    88  d63f03e0       constant
0xffff914110fc    92  d503201f       constant
0xffff91411100    96  91206000       constant
0xffff91411104   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914110e8  runtime entry
0xffff914110f4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6417
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff91411180     0  mov x2, x1
0xffff91411184     4  tbnz w2, #0, #+0xac (addr 0xffff91411230)
0xffff91411188     8  tbnz w0, #0, #+0x18 (addr 0xffff914111a0)
0xffff9141118c    12  asr x4, x0, #32
0xffff91411190    16  asr x0, x2, #32
0xffff91411194    20  eor w0, w4, w0
0xffff91411198    24  lsl x0, x0, #32
0xffff9141119c    28  ret
0xffff914111a0    32  sub csp, jssp, #0x10 (16)
0xffff914111a4    36  stp fp, lr, [jssp, #-16]!
0xffff914111a8    40  movz fp, #0xa00000000
0xffff914111ac    44  sub csp, jssp, #0x8 (8)
0xffff914111b0    48  str fp, [jssp, #-8]!
0xffff914111b4    52  add fp, jssp, #0x8 (8)
0xffff914111b8    56  ldur x16, [x0, #-1]
0xffff914111bc    60  ldr x17, [x26, #120]
0xffff914111c0    64  cmp x16, x17
0xffff914111c4    68  b.ne #+0x30 (addr 0xffff914111f4)
0xffff914111c8    72  ldur d30, [x0, #7]
0xffff914111cc    76  fcvtzs x4, d30
0xffff914111d0    80  cmp x4, #0x1 (1)
0xffff914111d4    84  ccmn x4, #1, #nzcV, vc
0xffff914111d8    88  b.vc #+0x18 (addr 0xffff914111f0)
0xffff914111dc    92  sub csp, jssp, #0x8 (8)
0xffff914111e0    96  str lr, [jssp, #-8]!
0xffff914111e4   100  ldr x16, pc+68 (addr 0x0000ffff91411228)    ;; code: STUB, DoubleToIStub, minor: 127232
0xffff914111e8   104  blr x16
0xffff914111ec   108  ldr lr, [jssp], #8
0xffff914111f0   112  b #+0x24 (addr 0xffff91411214)
0xffff914111f4   116  ldp x4, x3, [x26, #64]
0xffff914111f8   120  cmp x0, x4
0xffff914111fc   124  cset x4, eq
0xffff91411200   128  ccmp x0, x3, #nZcv, ne
0xffff91411204   132  b.eq #+0x10 (addr 0xffff91411214)
0xffff91411208   136  ldr x16, [x26, #40]
0xffff9141120c   140  cmp x0, x16
0xffff91411210   144  b.ne #+0x30 (addr 0xffff91411240)
0xffff91411214   148  ldr lr, [jssp, #16]
0xffff91411218   152  ldp xzr, fp, [jssp], #24
0xffff9141121c   156  b #-0x8c (addr 0xffff91411190)
0xffff91411220   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91411224   164  d63f03e0       constant
0xffff91411228   168  91410400       constant
0xffff9141122c   172  0000ffff       constant
0xffff91411230   176  movz x16, #0x0
0xffff91411234   180  sub csp, jssp, #0x10 (16)
0xffff91411238   184  stp fp, lr, [jssp, #-16]!
0xffff9141123c   188  bl #+0xc (addr 0xffff91411248)
0xffff91411240   192  movz x16, #0x8
0xffff91411244   196  bl #+0x14 (addr 0xffff91411258)
0xffff91411248   200  movz x17, #0xa00000000
0xffff9141124c   204  sub csp, jssp, #0x10 (16)
0xffff91411250   208  stp x17, cp, [jssp, #-16]!
0xffff91411254   212  add fp, jssp, #0x10 (16)
0xffff91411258   216  ldr x17, pc+24 (addr 0x0000ffff91411270)    ;; lazy deoptimization bailout 0
0xffff9141125c   220  add x17, x17, x16
0xffff91411260   224  br x17
0xffff91411264   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411268   232  d63f03e0       constant
0xffff9141126c   236  d503201f       constant
0xffff91411270   240  91206000       constant
0xffff91411274   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914111e4  code target (STUB)  (0xffff91410400)
0xffff91411220  constant pool (size 16)
0xffff91411258  runtime entry
0xffff91411264  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6417
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Int32*Number->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff91411180     0  mov x2, x1
0xffff91411184     4  tbnz w2, #0, #+0xac (addr 0xffff91411230)
0xffff91411188     8  tbnz w0, #0, #+0x18 (addr 0xffff914111a0)
0xffff9141118c    12  asr x4, x0, #32
0xffff91411190    16  asr x0, x2, #32
0xffff91411194    20  eor w0, w4, w0
0xffff91411198    24  lsl x0, x0, #32
0xffff9141119c    28  ret
0xffff914111a0    32  sub csp, jssp, #0x10 (16)
0xffff914111a4    36  stp fp, lr, [jssp, #-16]!
0xffff914111a8    40  movz fp, #0xa00000000
0xffff914111ac    44  sub csp, jssp, #0x8 (8)
0xffff914111b0    48  str fp, [jssp, #-8]!
0xffff914111b4    52  add fp, jssp, #0x8 (8)
0xffff914111b8    56  ldur x16, [x0, #-1]
0xffff914111bc    60  ldr x17, [x26, #120]
0xffff914111c0    64  cmp x16, x17
0xffff914111c4    68  b.ne #+0x30 (addr 0xffff914111f4)
0xffff914111c8    72  ldur d30, [x0, #7]
0xffff914111cc    76  fcvtzs x4, d30
0xffff914111d0    80  cmp x4, #0x1 (1)
0xffff914111d4    84  ccmn x4, #1, #nzcV, vc
0xffff914111d8    88  b.vc #+0x18 (addr 0xffff914111f0)
0xffff914111dc    92  sub csp, jssp, #0x8 (8)
0xffff914111e0    96  str lr, [jssp, #-8]!
0xffff914111e4   100  ldr x16, pc+68 (addr 0x0000ffff91411228)    ;; code: STUB, DoubleToIStub, minor: 127232
0xffff914111e8   104  blr x16
0xffff914111ec   108  ldr lr, [jssp], #8
0xffff914111f0   112  b #+0x24 (addr 0xffff91411214)
0xffff914111f4   116  ldp x4, x3, [x26, #64]
0xffff914111f8   120  cmp x0, x4
0xffff914111fc   124  cset x4, eq
0xffff91411200   128  ccmp x0, x3, #nZcv, ne
0xffff91411204   132  b.eq #+0x10 (addr 0xffff91411214)
0xffff91411208   136  ldr x16, [x26, #40]
0xffff9141120c   140  cmp x0, x16
0xffff91411210   144  b.ne #+0x30 (addr 0xffff91411240)
0xffff91411214   148  ldr lr, [jssp, #16]
0xffff91411218   152  ldp xzr, fp, [jssp], #24
0xffff9141121c   156  b #-0x8c (addr 0xffff91411190)
0xffff91411220   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91411224   164  d63f03e0       constant
0xffff91411228   168  91410400       constant
0xffff9141122c   172  0000ffff       constant
0xffff91411230   176  movz x16, #0x0
0xffff91411234   180  sub csp, jssp, #0x10 (16)
0xffff91411238   184  stp fp, lr, [jssp, #-16]!
0xffff9141123c   188  bl #+0xc (addr 0xffff91411248)
0xffff91411240   192  movz x16, #0x8
0xffff91411244   196  bl #+0x14 (addr 0xffff91411258)
0xffff91411248   200  movz x17, #0xa00000000
0xffff9141124c   204  sub csp, jssp, #0x10 (16)
0xffff91411250   208  stp x17, cp, [jssp, #-16]!
0xffff91411254   212  add fp, jssp, #0x10 (16)
0xffff91411258   216  ldr x17, pc+24 (addr 0x0000ffff91411270)    ;; lazy deoptimization bailout 0
0xffff9141125c   220  add x17, x17, x16
0xffff91411260   224  br x17
0xffff91411264   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411268   232  d63f03e0       constant
0xffff9141126c   236  d503201f       constant
0xffff91411270   240  91206000       constant
0xffff91411274   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914111e4  code target (STUB)  (0xffff91410400)
0xffff91411220  constant pool (size 16)
0xffff91411258  runtime entry
0xffff91411264  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2337
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff914112e0     0  mov x2, x1
0xffff914112e4     4  tbnz w2, #0, #+0x14 (addr 0xffff914112f8)
0xffff914112e8     8  mov x3, x0
0xffff914112ec    12  tbnz w3, #0, #+0x1c (addr 0xffff91411308)
0xffff914112f0    16  eor x0, x3, x2
0xffff914112f4    20  ret
0xffff914112f8    24  movz x16, #0x0
0xffff914112fc    28  sub csp, jssp, #0x10 (16)
0xffff91411300    32  stp fp, lr, [jssp, #-16]!
0xffff91411304    36  bl #+0x14 (addr 0xffff91411318)
0xffff91411308    40  movz x16, #0x8
0xffff9141130c    44  sub csp, jssp, #0x10 (16)
0xffff91411310    48  stp fp, lr, [jssp, #-16]!
0xffff91411314    52  bl #+0x4 (addr 0xffff91411318)
0xffff91411318    56  movz x17, #0xa00000000
0xffff9141131c    60  sub csp, jssp, #0x10 (16)
0xffff91411320    64  stp x17, cp, [jssp, #-16]!
0xffff91411324    68  add fp, jssp, #0x10 (16)
0xffff91411328    72  ldr x17, pc+24 (addr 0x0000ffff91411340)    ;; lazy deoptimization bailout 0
0xffff9141132c    76  add x17, x17, x16
0xffff91411330    80  br x17
0xffff91411334    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411338    88  d63f03e0       constant
0xffff9141133c    92  d503201f       constant
0xffff91411340    96  91206000       constant
0xffff91411344   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91411328  runtime entry
0xffff91411334  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2337
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff914112e0     0  mov x2, x1
0xffff914112e4     4  tbnz w2, #0, #+0x14 (addr 0xffff914112f8)
0xffff914112e8     8  mov x3, x0
0xffff914112ec    12  tbnz w3, #0, #+0x1c (addr 0xffff91411308)
0xffff914112f0    16  eor x0, x3, x2
0xffff914112f4    20  ret
0xffff914112f8    24  movz x16, #0x0
0xffff914112fc    28  sub csp, jssp, #0x10 (16)
0xffff91411300    32  stp fp, lr, [jssp, #-16]!
0xffff91411304    36  bl #+0x14 (addr 0xffff91411318)
0xffff91411308    40  movz x16, #0x8
0xffff9141130c    44  sub csp, jssp, #0x10 (16)
0xffff91411310    48  stp fp, lr, [jssp, #-16]!
0xffff91411314    52  bl #+0x4 (addr 0xffff91411318)
0xffff91411318    56  movz x17, #0xa00000000
0xffff9141131c    60  sub csp, jssp, #0x10 (16)
0xffff91411320    64  stp x17, cp, [jssp, #-16]!
0xffff91411324    68  add fp, jssp, #0x10 (16)
0xffff91411328    72  ldr x17, pc+24 (addr 0x0000ffff91411340)    ;; lazy deoptimization bailout 0
0xffff9141132c    76  add x17, x17, x16
0xffff91411330    80  br x17
0xffff91411334    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411338    88  d63f03e0       constant
0xffff9141133c    92  d503201f       constant
0xffff91411340    96  91206000       constant
0xffff91411344   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91411328  runtime entry
0xffff91411334  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4513
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff914113c0     0  mov x2, x0
0xffff914113c4     4  tbnz w2, #0, #+0xac (addr 0xffff91411470)
0xffff914113c8     8  tbnz w1, #0, #+0x18 (addr 0xffff914113e0)
0xffff914113cc    12  asr x4, x1, #32
0xffff914113d0    16  asr x0, x2, #32
0xffff914113d4    20  eor w0, w0, w4
0xffff914113d8    24  lsl x0, x0, #32
0xffff914113dc    28  ret
0xffff914113e0    32  sub csp, jssp, #0x10 (16)
0xffff914113e4    36  stp fp, lr, [jssp, #-16]!
0xffff914113e8    40  movz fp, #0xa00000000
0xffff914113ec    44  sub csp, jssp, #0x8 (8)
0xffff914113f0    48  str fp, [jssp, #-8]!
0xffff914113f4    52  add fp, jssp, #0x8 (8)
0xffff914113f8    56  ldur x16, [x1, #-1]
0xffff914113fc    60  ldr x17, [x26, #120]
0xffff91411400    64  cmp x16, x17
0xffff91411404    68  b.ne #+0x30 (addr 0xffff91411434)
0xffff91411408    72  ldur d30, [x1, #7]
0xffff9141140c    76  fcvtzs x4, d30
0xffff91411410    80  cmp x4, #0x1 (1)
0xffff91411414    84  ccmn x4, #1, #nzcV, vc
0xffff91411418    88  b.vc #+0x18 (addr 0xffff91411430)
0xffff9141141c    92  sub csp, jssp, #0x8 (8)
0xffff91411420    96  str lr, [jssp, #-8]!
0xffff91411424   100  ldr x16, pc+68 (addr 0x0000ffff91411468)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91411428   104  blr x16
0xffff9141142c   108  ldr lr, [jssp], #8
0xffff91411430   112  b #+0x24 (addr 0xffff91411454)
0xffff91411434   116  ldp x4, x3, [x26, #64]
0xffff91411438   120  cmp x1, x4
0xffff9141143c   124  cset x4, eq
0xffff91411440   128  ccmp x1, x3, #nZcv, ne
0xffff91411444   132  b.eq #+0x10 (addr 0xffff91411454)
0xffff91411448   136  ldr x16, [x26, #40]
0xffff9141144c   140  cmp x1, x16
0xffff91411450   144  b.ne #+0x30 (addr 0xffff91411480)
0xffff91411454   148  ldr lr, [jssp, #16]
0xffff91411458   152  ldp xzr, fp, [jssp], #24
0xffff9141145c   156  b #-0x8c (addr 0xffff914113d0)
0xffff91411460   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91411464   164  d63f03e0       constant
0xffff91411468   168  9140fee0       constant
0xffff9141146c   172  0000ffff       constant
0xffff91411470   176  movz x16, #0x0
0xffff91411474   180  sub csp, jssp, #0x10 (16)
0xffff91411478   184  stp fp, lr, [jssp, #-16]!
0xffff9141147c   188  bl #+0xc (addr 0xffff91411488)
0xffff91411480   192  movz x16, #0x8
0xffff91411484   196  bl #+0x14 (addr 0xffff91411498)
0xffff91411488   200  movz x17, #0xa00000000
0xffff9141148c   204  sub csp, jssp, #0x10 (16)
0xffff91411490   208  stp x17, cp, [jssp, #-16]!
0xffff91411494   212  add fp, jssp, #0x10 (16)
0xffff91411498   216  ldr x17, pc+24 (addr 0x0000ffff914114b0)    ;; lazy deoptimization bailout 0
0xffff9141149c   220  add x17, x17, x16
0xffff914114a0   224  br x17
0xffff914114a4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914114a8   232  d63f03e0       constant
0xffff914114ac   236  d503201f       constant
0xffff914114b0   240  91206000       constant
0xffff914114b4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff91411424  code target (STUB)  (0xffff9140fee0)
0xffff91411460  constant pool (size 16)
0xffff91411498  runtime entry
0xffff914114a4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4513
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Number*Int32->Int32)
compiler = crankshaft
Instructions (size = 256)
0xffff914113c0     0  mov x2, x0
0xffff914113c4     4  tbnz w2, #0, #+0xac (addr 0xffff91411470)
0xffff914113c8     8  tbnz w1, #0, #+0x18 (addr 0xffff914113e0)
0xffff914113cc    12  asr x4, x1, #32
0xffff914113d0    16  asr x0, x2, #32
0xffff914113d4    20  eor w0, w0, w4
0xffff914113d8    24  lsl x0, x0, #32
0xffff914113dc    28  ret
0xffff914113e0    32  sub csp, jssp, #0x10 (16)
0xffff914113e4    36  stp fp, lr, [jssp, #-16]!
0xffff914113e8    40  movz fp, #0xa00000000
0xffff914113ec    44  sub csp, jssp, #0x8 (8)
0xffff914113f0    48  str fp, [jssp, #-8]!
0xffff914113f4    52  add fp, jssp, #0x8 (8)
0xffff914113f8    56  ldur x16, [x1, #-1]
0xffff914113fc    60  ldr x17, [x26, #120]
0xffff91411400    64  cmp x16, x17
0xffff91411404    68  b.ne #+0x30 (addr 0xffff91411434)
0xffff91411408    72  ldur d30, [x1, #7]
0xffff9141140c    76  fcvtzs x4, d30
0xffff91411410    80  cmp x4, #0x1 (1)
0xffff91411414    84  ccmn x4, #1, #nzcV, vc
0xffff91411418    88  b.vc #+0x18 (addr 0xffff91411430)
0xffff9141141c    92  sub csp, jssp, #0x8 (8)
0xffff91411420    96  str lr, [jssp, #-8]!
0xffff91411424   100  ldr x16, pc+68 (addr 0x0000ffff91411468)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91411428   104  blr x16
0xffff9141142c   108  ldr lr, [jssp], #8
0xffff91411430   112  b #+0x24 (addr 0xffff91411454)
0xffff91411434   116  ldp x4, x3, [x26, #64]
0xffff91411438   120  cmp x1, x4
0xffff9141143c   124  cset x4, eq
0xffff91411440   128  ccmp x1, x3, #nZcv, ne
0xffff91411444   132  b.eq #+0x10 (addr 0xffff91411454)
0xffff91411448   136  ldr x16, [x26, #40]
0xffff9141144c   140  cmp x1, x16
0xffff91411450   144  b.ne #+0x30 (addr 0xffff91411480)
0xffff91411454   148  ldr lr, [jssp, #16]
0xffff91411458   152  ldp xzr, fp, [jssp], #24
0xffff9141145c   156  b #-0x8c (addr 0xffff914113d0)
0xffff91411460   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91411464   164  d63f03e0       constant
0xffff91411468   168  9140fee0       constant
0xffff9141146c   172  0000ffff       constant
0xffff91411470   176  movz x16, #0x0
0xffff91411474   180  sub csp, jssp, #0x10 (16)
0xffff91411478   184  stp fp, lr, [jssp, #-16]!
0xffff9141147c   188  bl #+0xc (addr 0xffff91411488)
0xffff91411480   192  movz x16, #0x8
0xffff91411484   196  bl #+0x14 (addr 0xffff91411498)
0xffff91411488   200  movz x17, #0xa00000000
0xffff9141148c   204  sub csp, jssp, #0x10 (16)
0xffff91411490   208  stp x17, cp, [jssp, #-16]!
0xffff91411494   212  add fp, jssp, #0x10 (16)
0xffff91411498   216  ldr x17, pc+24 (addr 0x0000ffff914114b0)    ;; lazy deoptimization bailout 0
0xffff9141149c   220  add x17, x17, x16
0xffff914114a0   224  br x17
0xffff914114a4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914114a8   232  d63f03e0       constant
0xffff914114ac   236  d503201f       constant
0xffff914114b0   240  91206000       constant
0xffff914114b4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff91411424  code target (STUB)  (0xffff9140fee0)
0xffff91411460  constant pool (size 16)
0xffff91411498  runtime entry
0xffff914114a4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2465
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff91411520     0  mov x2, x0
0xffff91411524     4  tbnz w2, #0, #+0xac (addr 0xffff914115d0)
0xffff91411528     8  tbnz w1, #0, #+0x18 (addr 0xffff91411540)
0xffff9141152c    12  asr x4, x1, #32
0xffff91411530    16  asr x0, x2, #32
0xffff91411534    20  eor w0, w0, w4
0xffff91411538    24  lsl x0, x0, #32
0xffff9141153c    28  ret
0xffff91411540    32  sub csp, jssp, #0x10 (16)
0xffff91411544    36  stp fp, lr, [jssp, #-16]!
0xffff91411548    40  movz fp, #0xa00000000
0xffff9141154c    44  sub csp, jssp, #0x8 (8)
0xffff91411550    48  str fp, [jssp, #-8]!
0xffff91411554    52  add fp, jssp, #0x8 (8)
0xffff91411558    56  ldur x16, [x1, #-1]
0xffff9141155c    60  ldr x17, [x26, #120]
0xffff91411560    64  cmp x16, x17
0xffff91411564    68  b.ne #+0x30 (addr 0xffff91411594)
0xffff91411568    72  ldur d30, [x1, #7]
0xffff9141156c    76  fcvtzs x4, d30
0xffff91411570    80  cmp x4, #0x1 (1)
0xffff91411574    84  ccmn x4, #1, #nzcV, vc
0xffff91411578    88  b.vc #+0x18 (addr 0xffff91411590)
0xffff9141157c    92  sub csp, jssp, #0x8 (8)
0xffff91411580    96  str lr, [jssp, #-8]!
0xffff91411584   100  ldr x16, pc+68 (addr 0x0000ffff914115c8)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91411588   104  blr x16
0xffff9141158c   108  ldr lr, [jssp], #8
0xffff91411590   112  b #+0x24 (addr 0xffff914115b4)
0xffff91411594   116  ldp x4, x3, [x26, #64]
0xffff91411598   120  cmp x1, x4
0xffff9141159c   124  cset x4, eq
0xffff914115a0   128  ccmp x1, x3, #nZcv, ne
0xffff914115a4   132  b.eq #+0x10 (addr 0xffff914115b4)
0xffff914115a8   136  ldr x16, [x26, #40]
0xffff914115ac   140  cmp x1, x16
0xffff914115b0   144  b.ne #+0x30 (addr 0xffff914115e0)
0xffff914115b4   148  ldr lr, [jssp, #16]
0xffff914115b8   152  ldp xzr, fp, [jssp], #24
0xffff914115bc   156  b #-0x8c (addr 0xffff91411530)
0xffff914115c0   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914115c4   164  d63f03e0       constant
0xffff914115c8   168  9140fee0       constant
0xffff914115cc   172  0000ffff       constant
0xffff914115d0   176  movz x16, #0x0
0xffff914115d4   180  sub csp, jssp, #0x10 (16)
0xffff914115d8   184  stp fp, lr, [jssp, #-16]!
0xffff914115dc   188  bl #+0xc (addr 0xffff914115e8)
0xffff914115e0   192  movz x16, #0x8
0xffff914115e4   196  bl #+0x14 (addr 0xffff914115f8)
0xffff914115e8   200  movz x17, #0xa00000000
0xffff914115ec   204  sub csp, jssp, #0x10 (16)
0xffff914115f0   208  stp x17, cp, [jssp, #-16]!
0xffff914115f4   212  add fp, jssp, #0x10 (16)
0xffff914115f8   216  ldr x17, pc+24 (addr 0x0000ffff91411610)    ;; lazy deoptimization bailout 0
0xffff914115fc   220  add x17, x17, x16
0xffff91411600   224  br x17
0xffff91411604   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411608   232  d63f03e0       constant
0xffff9141160c   236  d503201f       constant
0xffff91411610   240  91206000       constant
0xffff91411614   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff91411584  code target (STUB)  (0xffff9140fee0)
0xffff914115c0  constant pool (size 16)
0xffff914115f8  runtime entry
0xffff91411604  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2465
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Number*Smi->Int32)
compiler = crankshaft
Instructions (size = 256)
0xffff91411520     0  mov x2, x0
0xffff91411524     4  tbnz w2, #0, #+0xac (addr 0xffff914115d0)
0xffff91411528     8  tbnz w1, #0, #+0x18 (addr 0xffff91411540)
0xffff9141152c    12  asr x4, x1, #32
0xffff91411530    16  asr x0, x2, #32
0xffff91411534    20  eor w0, w0, w4
0xffff91411538    24  lsl x0, x0, #32
0xffff9141153c    28  ret
0xffff91411540    32  sub csp, jssp, #0x10 (16)
0xffff91411544    36  stp fp, lr, [jssp, #-16]!
0xffff91411548    40  movz fp, #0xa00000000
0xffff9141154c    44  sub csp, jssp, #0x8 (8)
0xffff91411550    48  str fp, [jssp, #-8]!
0xffff91411554    52  add fp, jssp, #0x8 (8)
0xffff91411558    56  ldur x16, [x1, #-1]
0xffff9141155c    60  ldr x17, [x26, #120]
0xffff91411560    64  cmp x16, x17
0xffff91411564    68  b.ne #+0x30 (addr 0xffff91411594)
0xffff91411568    72  ldur d30, [x1, #7]
0xffff9141156c    76  fcvtzs x4, d30
0xffff91411570    80  cmp x4, #0x1 (1)
0xffff91411574    84  ccmn x4, #1, #nzcV, vc
0xffff91411578    88  b.vc #+0x18 (addr 0xffff91411590)
0xffff9141157c    92  sub csp, jssp, #0x8 (8)
0xffff91411580    96  str lr, [jssp, #-8]!
0xffff91411584   100  ldr x16, pc+68 (addr 0x0000ffff914115c8)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91411588   104  blr x16
0xffff9141158c   108  ldr lr, [jssp], #8
0xffff91411590   112  b #+0x24 (addr 0xffff914115b4)
0xffff91411594   116  ldp x4, x3, [x26, #64]
0xffff91411598   120  cmp x1, x4
0xffff9141159c   124  cset x4, eq
0xffff914115a0   128  ccmp x1, x3, #nZcv, ne
0xffff914115a4   132  b.eq #+0x10 (addr 0xffff914115b4)
0xffff914115a8   136  ldr x16, [x26, #40]
0xffff914115ac   140  cmp x1, x16
0xffff914115b0   144  b.ne #+0x30 (addr 0xffff914115e0)
0xffff914115b4   148  ldr lr, [jssp, #16]
0xffff914115b8   152  ldp xzr, fp, [jssp], #24
0xffff914115bc   156  b #-0x8c (addr 0xffff91411530)
0xffff914115c0   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914115c4   164  d63f03e0       constant
0xffff914115c8   168  9140fee0       constant
0xffff914115cc   172  0000ffff       constant
0xffff914115d0   176  movz x16, #0x0
0xffff914115d4   180  sub csp, jssp, #0x10 (16)
0xffff914115d8   184  stp fp, lr, [jssp, #-16]!
0xffff914115dc   188  bl #+0xc (addr 0xffff914115e8)
0xffff914115e0   192  movz x16, #0x8
0xffff914115e4   196  bl #+0x14 (addr 0xffff914115f8)
0xffff914115e8   200  movz x17, #0xa00000000
0xffff914115ec   204  sub csp, jssp, #0x10 (16)
0xffff914115f0   208  stp x17, cp, [jssp, #-16]!
0xffff914115f4   212  add fp, jssp, #0x10 (16)
0xffff914115f8   216  ldr x17, pc+24 (addr 0x0000ffff91411610)    ;; lazy deoptimization bailout 0
0xffff914115fc   220  add x17, x17, x16
0xffff91411600   224  br x17
0xffff91411604   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411608   232  d63f03e0       constant
0xffff9141160c   236  d503201f       constant
0xffff91411610   240  91206000       constant
0xffff91411614   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff91411584  code target (STUB)  (0xffff9140fee0)
0xffff914115c0  constant pool (size 16)
0xffff914115f8  runtime entry
0xffff91411604  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2449
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff91411680     0  mov x2, x0
0xffff91411684     4  tbnz w2, #0, #+0xac (addr 0xffff91411730)
0xffff91411688     8  tbnz w1, #0, #+0x18 (addr 0xffff914116a0)
0xffff9141168c    12  asr x4, x1, #32
0xffff91411690    16  asr x0, x2, #32
0xffff91411694    20  eor w0, w0, w4
0xffff91411698    24  lsl x0, x0, #32
0xffff9141169c    28  ret
0xffff914116a0    32  sub csp, jssp, #0x10 (16)
0xffff914116a4    36  stp fp, lr, [jssp, #-16]!
0xffff914116a8    40  movz fp, #0xa00000000
0xffff914116ac    44  sub csp, jssp, #0x8 (8)
0xffff914116b0    48  str fp, [jssp, #-8]!
0xffff914116b4    52  add fp, jssp, #0x8 (8)
0xffff914116b8    56  ldur x16, [x1, #-1]
0xffff914116bc    60  ldr x17, [x26, #120]
0xffff914116c0    64  cmp x16, x17
0xffff914116c4    68  b.ne #+0x30 (addr 0xffff914116f4)
0xffff914116c8    72  ldur d30, [x1, #7]
0xffff914116cc    76  fcvtzs x4, d30
0xffff914116d0    80  cmp x4, #0x1 (1)
0xffff914116d4    84  ccmn x4, #1, #nzcV, vc
0xffff914116d8    88  b.vc #+0x18 (addr 0xffff914116f0)
0xffff914116dc    92  sub csp, jssp, #0x8 (8)
0xffff914116e0    96  str lr, [jssp, #-8]!
0xffff914116e4   100  ldr x16, pc+68 (addr 0x0000ffff91411728)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff914116e8   104  blr x16
0xffff914116ec   108  ldr lr, [jssp], #8
0xffff914116f0   112  b #+0x24 (addr 0xffff91411714)
0xffff914116f4   116  ldp x4, x3, [x26, #64]
0xffff914116f8   120  cmp x1, x4
0xffff914116fc   124  cset x4, eq
0xffff91411700   128  ccmp x1, x3, #nZcv, ne
0xffff91411704   132  b.eq #+0x10 (addr 0xffff91411714)
0xffff91411708   136  ldr x16, [x26, #40]
0xffff9141170c   140  cmp x1, x16
0xffff91411710   144  b.ne #+0x30 (addr 0xffff91411740)
0xffff91411714   148  ldr lr, [jssp, #16]
0xffff91411718   152  ldp xzr, fp, [jssp], #24
0xffff9141171c   156  b #-0x8c (addr 0xffff91411690)
0xffff91411720   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91411724   164  d63f03e0       constant
0xffff91411728   168  9140fee0       constant
0xffff9141172c   172  0000ffff       constant
0xffff91411730   176  movz x16, #0x0
0xffff91411734   180  sub csp, jssp, #0x10 (16)
0xffff91411738   184  stp fp, lr, [jssp, #-16]!
0xffff9141173c   188  bl #+0xc (addr 0xffff91411748)
0xffff91411740   192  movz x16, #0x8
0xffff91411744   196  bl #+0x14 (addr 0xffff91411758)
0xffff91411748   200  movz x17, #0xa00000000
0xffff9141174c   204  sub csp, jssp, #0x10 (16)
0xffff91411750   208  stp x17, cp, [jssp, #-16]!
0xffff91411754   212  add fp, jssp, #0x10 (16)
0xffff91411758   216  ldr x17, pc+24 (addr 0x0000ffff91411770)    ;; lazy deoptimization bailout 0
0xffff9141175c   220  add x17, x17, x16
0xffff91411760   224  br x17
0xffff91411764   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411768   232  d63f03e0       constant
0xffff9141176c   236  d503201f       constant
0xffff91411770   240  91206000       constant
0xffff91411774   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914116e4  code target (STUB)  (0xffff9140fee0)
0xffff91411720  constant pool (size 16)
0xffff91411758  runtime entry
0xffff91411764  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2449
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff91411680     0  mov x2, x0
0xffff91411684     4  tbnz w2, #0, #+0xac (addr 0xffff91411730)
0xffff91411688     8  tbnz w1, #0, #+0x18 (addr 0xffff914116a0)
0xffff9141168c    12  asr x4, x1, #32
0xffff91411690    16  asr x0, x2, #32
0xffff91411694    20  eor w0, w0, w4
0xffff91411698    24  lsl x0, x0, #32
0xffff9141169c    28  ret
0xffff914116a0    32  sub csp, jssp, #0x10 (16)
0xffff914116a4    36  stp fp, lr, [jssp, #-16]!
0xffff914116a8    40  movz fp, #0xa00000000
0xffff914116ac    44  sub csp, jssp, #0x8 (8)
0xffff914116b0    48  str fp, [jssp, #-8]!
0xffff914116b4    52  add fp, jssp, #0x8 (8)
0xffff914116b8    56  ldur x16, [x1, #-1]
0xffff914116bc    60  ldr x17, [x26, #120]
0xffff914116c0    64  cmp x16, x17
0xffff914116c4    68  b.ne #+0x30 (addr 0xffff914116f4)
0xffff914116c8    72  ldur d30, [x1, #7]
0xffff914116cc    76  fcvtzs x4, d30
0xffff914116d0    80  cmp x4, #0x1 (1)
0xffff914116d4    84  ccmn x4, #1, #nzcV, vc
0xffff914116d8    88  b.vc #+0x18 (addr 0xffff914116f0)
0xffff914116dc    92  sub csp, jssp, #0x8 (8)
0xffff914116e0    96  str lr, [jssp, #-8]!
0xffff914116e4   100  ldr x16, pc+68 (addr 0x0000ffff91411728)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff914116e8   104  blr x16
0xffff914116ec   108  ldr lr, [jssp], #8
0xffff914116f0   112  b #+0x24 (addr 0xffff91411714)
0xffff914116f4   116  ldp x4, x3, [x26, #64]
0xffff914116f8   120  cmp x1, x4
0xffff914116fc   124  cset x4, eq
0xffff91411700   128  ccmp x1, x3, #nZcv, ne
0xffff91411704   132  b.eq #+0x10 (addr 0xffff91411714)
0xffff91411708   136  ldr x16, [x26, #40]
0xffff9141170c   140  cmp x1, x16
0xffff91411710   144  b.ne #+0x30 (addr 0xffff91411740)
0xffff91411714   148  ldr lr, [jssp, #16]
0xffff91411718   152  ldp xzr, fp, [jssp], #24
0xffff9141171c   156  b #-0x8c (addr 0xffff91411690)
0xffff91411720   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91411724   164  d63f03e0       constant
0xffff91411728   168  9140fee0       constant
0xffff9141172c   172  0000ffff       constant
0xffff91411730   176  movz x16, #0x0
0xffff91411734   180  sub csp, jssp, #0x10 (16)
0xffff91411738   184  stp fp, lr, [jssp, #-16]!
0xffff9141173c   188  bl #+0xc (addr 0xffff91411748)
0xffff91411740   192  movz x16, #0x8
0xffff91411744   196  bl #+0x14 (addr 0xffff91411758)
0xffff91411748   200  movz x17, #0xa00000000
0xffff9141174c   204  sub csp, jssp, #0x10 (16)
0xffff91411750   208  stp x17, cp, [jssp, #-16]!
0xffff91411754   212  add fp, jssp, #0x10 (16)
0xffff91411758   216  ldr x17, pc+24 (addr 0x0000ffff91411770)    ;; lazy deoptimization bailout 0
0xffff9141175c   220  add x17, x17, x16
0xffff91411760   224  br x17
0xffff91411764   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411768   232  d63f03e0       constant
0xffff9141176c   236  d503201f       constant
0xffff91411770   240  91206000       constant
0xffff91411774   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914116e4  code target (STUB)  (0xffff9140fee0)
0xffff91411720  constant pool (size 16)
0xffff91411758  runtime entry
0xffff91411764  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4257
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff914117e0     0  mov x2, x1
0xffff914117e4     4  tbnz w2, #0, #+0x14 (addr 0xffff914117f8)
0xffff914117e8     8  mov x3, x0
0xffff914117ec    12  tbnz w3, #0, #+0x1c (addr 0xffff91411808)
0xffff914117f0    16  eor x0, x3, x2
0xffff914117f4    20  ret
0xffff914117f8    24  movz x16, #0x0
0xffff914117fc    28  sub csp, jssp, #0x10 (16)
0xffff91411800    32  stp fp, lr, [jssp, #-16]!
0xffff91411804    36  bl #+0x14 (addr 0xffff91411818)
0xffff91411808    40  movz x16, #0x8
0xffff9141180c    44  sub csp, jssp, #0x10 (16)
0xffff91411810    48  stp fp, lr, [jssp, #-16]!
0xffff91411814    52  bl #+0x4 (addr 0xffff91411818)
0xffff91411818    56  movz x17, #0xa00000000
0xffff9141181c    60  sub csp, jssp, #0x10 (16)
0xffff91411820    64  stp x17, cp, [jssp, #-16]!
0xffff91411824    68  add fp, jssp, #0x10 (16)
0xffff91411828    72  ldr x17, pc+24 (addr 0x0000ffff91411840)    ;; lazy deoptimization bailout 0
0xffff9141182c    76  add x17, x17, x16
0xffff91411830    80  br x17
0xffff91411834    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411838    88  d63f03e0       constant
0xffff9141183c    92  d503201f       constant
0xffff91411840    96  91206000       constant
0xffff91411844   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91411828  runtime entry
0xffff91411834  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4257
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff914117e0     0  mov x2, x1
0xffff914117e4     4  tbnz w2, #0, #+0x14 (addr 0xffff914117f8)
0xffff914117e8     8  mov x3, x0
0xffff914117ec    12  tbnz w3, #0, #+0x1c (addr 0xffff91411808)
0xffff914117f0    16  eor x0, x3, x2
0xffff914117f4    20  ret
0xffff914117f8    24  movz x16, #0x0
0xffff914117fc    28  sub csp, jssp, #0x10 (16)
0xffff91411800    32  stp fp, lr, [jssp, #-16]!
0xffff91411804    36  bl #+0x14 (addr 0xffff91411818)
0xffff91411808    40  movz x16, #0x8
0xffff9141180c    44  sub csp, jssp, #0x10 (16)
0xffff91411810    48  stp fp, lr, [jssp, #-16]!
0xffff91411814    52  bl #+0x4 (addr 0xffff91411818)
0xffff91411818    56  movz x17, #0xa00000000
0xffff9141181c    60  sub csp, jssp, #0x10 (16)
0xffff91411820    64  stp x17, cp, [jssp, #-16]!
0xffff91411824    68  add fp, jssp, #0x10 (16)
0xffff91411828    72  ldr x17, pc+24 (addr 0x0000ffff91411840)    ;; lazy deoptimization bailout 0
0xffff9141182c    76  add x17, x17, x16
0xffff91411830    80  br x17
0xffff91411834    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411838    88  d63f03e0       constant
0xffff9141183c    92  d503201f       constant
0xffff91411840    96  91206000       constant
0xffff91411844   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91411828  runtime entry
0xffff91411834  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4241
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff914118c0     0  mov x2, x1
0xffff914118c4     4  tbnz w2, #0, #+0x14 (addr 0xffff914118d8)
0xffff914118c8     8  mov x3, x0
0xffff914118cc    12  tbnz w3, #0, #+0x1c (addr 0xffff914118e8)
0xffff914118d0    16  eor x0, x3, x2
0xffff914118d4    20  ret
0xffff914118d8    24  movz x16, #0x0
0xffff914118dc    28  sub csp, jssp, #0x10 (16)
0xffff914118e0    32  stp fp, lr, [jssp, #-16]!
0xffff914118e4    36  bl #+0x14 (addr 0xffff914118f8)
0xffff914118e8    40  movz x16, #0x8
0xffff914118ec    44  sub csp, jssp, #0x10 (16)
0xffff914118f0    48  stp fp, lr, [jssp, #-16]!
0xffff914118f4    52  bl #+0x4 (addr 0xffff914118f8)
0xffff914118f8    56  movz x17, #0xa00000000
0xffff914118fc    60  sub csp, jssp, #0x10 (16)
0xffff91411900    64  stp x17, cp, [jssp, #-16]!
0xffff91411904    68  add fp, jssp, #0x10 (16)
0xffff91411908    72  ldr x17, pc+24 (addr 0x0000ffff91411920)    ;; lazy deoptimization bailout 0
0xffff9141190c    76  add x17, x17, x16
0xffff91411910    80  br x17
0xffff91411914    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411918    88  d63f03e0       constant
0xffff9141191c    92  d503201f       constant
0xffff91411920    96  91206000       constant
0xffff91411924   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91411908  runtime entry
0xffff91411914  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4241
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Smi*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff914118c0     0  mov x2, x1
0xffff914118c4     4  tbnz w2, #0, #+0x14 (addr 0xffff914118d8)
0xffff914118c8     8  mov x3, x0
0xffff914118cc    12  tbnz w3, #0, #+0x1c (addr 0xffff914118e8)
0xffff914118d0    16  eor x0, x3, x2
0xffff914118d4    20  ret
0xffff914118d8    24  movz x16, #0x0
0xffff914118dc    28  sub csp, jssp, #0x10 (16)
0xffff914118e0    32  stp fp, lr, [jssp, #-16]!
0xffff914118e4    36  bl #+0x14 (addr 0xffff914118f8)
0xffff914118e8    40  movz x16, #0x8
0xffff914118ec    44  sub csp, jssp, #0x10 (16)
0xffff914118f0    48  stp fp, lr, [jssp, #-16]!
0xffff914118f4    52  bl #+0x4 (addr 0xffff914118f8)
0xffff914118f8    56  movz x17, #0xa00000000
0xffff914118fc    60  sub csp, jssp, #0x10 (16)
0xffff91411900    64  stp x17, cp, [jssp, #-16]!
0xffff91411904    68  add fp, jssp, #0x10 (16)
0xffff91411908    72  ldr x17, pc+24 (addr 0x0000ffff91411920)    ;; lazy deoptimization bailout 0
0xffff9141190c    76  add x17, x17, x16
0xffff91411910    80  br x17
0xffff91411914    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411918    88  d63f03e0       constant
0xffff9141191c    92  d503201f       constant
0xffff91411920    96  91206000       constant
0xffff91411924   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91411908  runtime entry
0xffff91411914  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2193
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff914119a0     0  mov x2, x1
0xffff914119a4     4  tbnz w2, #0, #+0x14 (addr 0xffff914119b8)
0xffff914119a8     8  mov x3, x0
0xffff914119ac    12  tbnz w3, #0, #+0x1c (addr 0xffff914119c8)
0xffff914119b0    16  eor x0, x3, x2
0xffff914119b4    20  ret
0xffff914119b8    24  movz x16, #0x0
0xffff914119bc    28  sub csp, jssp, #0x10 (16)
0xffff914119c0    32  stp fp, lr, [jssp, #-16]!
0xffff914119c4    36  bl #+0x14 (addr 0xffff914119d8)
0xffff914119c8    40  movz x16, #0x8
0xffff914119cc    44  sub csp, jssp, #0x10 (16)
0xffff914119d0    48  stp fp, lr, [jssp, #-16]!
0xffff914119d4    52  bl #+0x4 (addr 0xffff914119d8)
0xffff914119d8    56  movz x17, #0xa00000000
0xffff914119dc    60  sub csp, jssp, #0x10 (16)
0xffff914119e0    64  stp x17, cp, [jssp, #-16]!
0xffff914119e4    68  add fp, jssp, #0x10 (16)
0xffff914119e8    72  ldr x17, pc+24 (addr 0x0000ffff91411a00)    ;; lazy deoptimization bailout 0
0xffff914119ec    76  add x17, x17, x16
0xffff914119f0    80  br x17
0xffff914119f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914119f8    88  d63f03e0       constant
0xffff914119fc    92  d503201f       constant
0xffff91411a00    96  91206000       constant
0xffff91411a04   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914119e8  runtime entry
0xffff914119f4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2193
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff914119a0     0  mov x2, x1
0xffff914119a4     4  tbnz w2, #0, #+0x14 (addr 0xffff914119b8)
0xffff914119a8     8  mov x3, x0
0xffff914119ac    12  tbnz w3, #0, #+0x1c (addr 0xffff914119c8)
0xffff914119b0    16  eor x0, x3, x2
0xffff914119b4    20  ret
0xffff914119b8    24  movz x16, #0x0
0xffff914119bc    28  sub csp, jssp, #0x10 (16)
0xffff914119c0    32  stp fp, lr, [jssp, #-16]!
0xffff914119c4    36  bl #+0x14 (addr 0xffff914119d8)
0xffff914119c8    40  movz x16, #0x8
0xffff914119cc    44  sub csp, jssp, #0x10 (16)
0xffff914119d0    48  stp fp, lr, [jssp, #-16]!
0xffff914119d4    52  bl #+0x4 (addr 0xffff914119d8)
0xffff914119d8    56  movz x17, #0xa00000000
0xffff914119dc    60  sub csp, jssp, #0x10 (16)
0xffff914119e0    64  stp x17, cp, [jssp, #-16]!
0xffff914119e4    68  add fp, jssp, #0x10 (16)
0xffff914119e8    72  ldr x17, pc+24 (addr 0x0000ffff91411a00)    ;; lazy deoptimization bailout 0
0xffff914119ec    76  add x17, x17, x16
0xffff914119f0    80  br x17
0xffff914119f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914119f8    88  d63f03e0       constant
0xffff914119fc    92  d503201f       constant
0xffff91411a00    96  91206000       constant
0xffff91411a04   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914119e8  runtime entry
0xffff914119f4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4394
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 176)
0xffff91411a80     0  mov x2, x1
0xffff91411a84     4  tbnz w2, #0, #+0x44 (addr 0xffff91411ac8)
0xffff91411a88     8  mov x3, x0
0xffff91411a8c    12  tbnz w3, #0, #+0x4c (addr 0xffff91411ad8)
0xffff91411a90    16  asr x2, x2, #32
0xffff91411a94    20  asr x3, x3, #32
0xffff91411a98    24  sdiv w5, w2, w3
0xffff91411a9c    28  cbz w3, #+0x4c (addr 0xffff91411ae8)
0xffff91411aa0    32  cmp w3, #0x0 (0)
0xffff91411aa4    36  ccmp w2, #0, #nzcv, mi
0xffff91411aa8    40  b.eq #+0x40 (addr 0xffff91411ae8)
0xffff91411aac    44  cmp w2, #0x1 (1)
0xffff91411ab0    48  ccmn w3, #1, #nzcv, vs
0xffff91411ab4    52  b.eq #+0x34 (addr 0xffff91411ae8)
0xffff91411ab8    56  msub w4, w5, w3, w2
0xffff91411abc    60  cbnz w4, #+0x2c (addr 0xffff91411ae8)
0xffff91411ac0    64  lsl x0, x5, #32
0xffff91411ac4    68  ret
0xffff91411ac8    72  movz x16, #0x0
0xffff91411acc    76  sub csp, jssp, #0x10 (16)
0xffff91411ad0    80  stp fp, lr, [jssp, #-16]!
0xffff91411ad4    84  bl #+0x24 (addr 0xffff91411af8)
0xffff91411ad8    88  movz x16, #0x8
0xffff91411adc    92  sub csp, jssp, #0x10 (16)
0xffff91411ae0    96  stp fp, lr, [jssp, #-16]!
0xffff91411ae4   100  bl #+0x14 (addr 0xffff91411af8)
0xffff91411ae8   104  movz x16, #0x10
0xffff91411aec   108  sub csp, jssp, #0x10 (16)
0xffff91411af0   112  stp fp, lr, [jssp, #-16]!
0xffff91411af4   116  bl #+0x4 (addr 0xffff91411af8)
0xffff91411af8   120  movz x17, #0xa00000000
0xffff91411afc   124  sub csp, jssp, #0x10 (16)
0xffff91411b00   128  stp x17, cp, [jssp, #-16]!
0xffff91411b04   132  add fp, jssp, #0x10 (16)
0xffff91411b08   136  ldr x17, pc+24 (addr 0x0000ffff91411b20)    ;; lazy deoptimization bailout 0
0xffff91411b0c   140  add x17, x17, x16
0xffff91411b10   144  br x17
0xffff91411b14   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411b18   152  d63f03e0       constant
0xffff91411b1c   156  d503201f       constant
0xffff91411b20   160  91206000       constant
0xffff91411b24   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91411b08  runtime entry
0xffff91411b14  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4394
type = NORMAL
name = BinaryOpICStub(DIV:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 176)
0xffff91411a80     0  mov x2, x1
0xffff91411a84     4  tbnz w2, #0, #+0x44 (addr 0xffff91411ac8)
0xffff91411a88     8  mov x3, x0
0xffff91411a8c    12  tbnz w3, #0, #+0x4c (addr 0xffff91411ad8)
0xffff91411a90    16  asr x2, x2, #32
0xffff91411a94    20  asr x3, x3, #32
0xffff91411a98    24  sdiv w5, w2, w3
0xffff91411a9c    28  cbz w3, #+0x4c (addr 0xffff91411ae8)
0xffff91411aa0    32  cmp w3, #0x0 (0)
0xffff91411aa4    36  ccmp w2, #0, #nzcv, mi
0xffff91411aa8    40  b.eq #+0x40 (addr 0xffff91411ae8)
0xffff91411aac    44  cmp w2, #0x1 (1)
0xffff91411ab0    48  ccmn w3, #1, #nzcv, vs
0xffff91411ab4    52  b.eq #+0x34 (addr 0xffff91411ae8)
0xffff91411ab8    56  msub w4, w5, w3, w2
0xffff91411abc    60  cbnz w4, #+0x2c (addr 0xffff91411ae8)
0xffff91411ac0    64  lsl x0, x5, #32
0xffff91411ac4    68  ret
0xffff91411ac8    72  movz x16, #0x0
0xffff91411acc    76  sub csp, jssp, #0x10 (16)
0xffff91411ad0    80  stp fp, lr, [jssp, #-16]!
0xffff91411ad4    84  bl #+0x24 (addr 0xffff91411af8)
0xffff91411ad8    88  movz x16, #0x8
0xffff91411adc    92  sub csp, jssp, #0x10 (16)
0xffff91411ae0    96  stp fp, lr, [jssp, #-16]!
0xffff91411ae4   100  bl #+0x14 (addr 0xffff91411af8)
0xffff91411ae8   104  movz x16, #0x10
0xffff91411aec   108  sub csp, jssp, #0x10 (16)
0xffff91411af0   112  stp fp, lr, [jssp, #-16]!
0xffff91411af4   116  bl #+0x4 (addr 0xffff91411af8)
0xffff91411af8   120  movz x17, #0xa00000000
0xffff91411afc   124  sub csp, jssp, #0x10 (16)
0xffff91411b00   128  stp x17, cp, [jssp, #-16]!
0xffff91411b04   132  add fp, jssp, #0x10 (16)
0xffff91411b08   136  ldr x17, pc+24 (addr 0x0000ffff91411b20)    ;; lazy deoptimization bailout 0
0xffff91411b0c   140  add x17, x17, x16
0xffff91411b10   144  br x17
0xffff91411b14   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411b18   152  d63f03e0       constant
0xffff91411b1c   156  d503201f       constant
0xffff91411b20   160  91206000       constant
0xffff91411b24   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91411b08  runtime entry
0xffff91411b14  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4410
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff91411ba0     0  mov x2, x1
0xffff91411ba4     4  tbnz w2, #0, #+0xc4 (addr 0xffff91411c68)
0xffff91411ba8     8  mov x3, x0
0xffff91411bac    12  tbnz w3, #0, #+0xcc (addr 0xffff91411c78)
0xffff91411bb0    16  scvtf d0, x2, #32
0xffff91411bb4    20  scvtf d1, x3, #32
0xffff91411bb8    24  fdiv d0, d0, d1
0xffff91411bbc    28  movz x1, #0xf2c0
0xffff91411bc0    32  movk x1, #0x4117, lsl #16
0xffff91411bc4    36  ldp x2, x0, [x1]
0xffff91411bc8    40  adds x16, x2, #0x10 (16)
0xffff91411bcc    44  ccmp x16, x0, #nzCv, lo
0xffff91411bd0    48  b.hi #+0x20 (addr 0xffff91411bf0)
0xffff91411bd4    52  str x16, [x1]
0xffff91411bd8    56  ldr x1, [x26, #120]
0xffff91411bdc    60  str x1, [x2]
0xffff91411be0    64  orr x2, x2, #0x1
0xffff91411be4    68  stur d0, [x2, #7]
0xffff91411be8    72  mov x0, x2
0xffff91411bec    76  ret
0xffff91411bf0    80  sub csp, jssp, #0x10 (16)
0xffff91411bf4    84  stp fp, lr, [jssp, #-16]!
0xffff91411bf8    88  movz fp, #0xa00000000
0xffff91411bfc    92  sub csp, jssp, #0x8 (8)
0xffff91411c00    96  str fp, [jssp, #-8]!
0xffff91411c04   100  add fp, jssp, #0x8 (8)
0xffff91411c08   104  movz x2, #0x0
0xffff91411c0c   108  mov x16, lr
0xffff91411c10   112  ldr x17, pc+64 (addr 0x0000ffff91411c50)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91411c14   116  blr x17
0xffff91411c18   120  ldur cp, [fp, #-8]
0xffff91411c1c   124  movz x0, #0x0
0xffff91411c20   128  movz x1, #0x4b48
0xffff91411c24   132  movk x1, #0xe4, lsl #16
0xffff91411c28   136  ldr x16, pc+48 (addr 0x0000ffff91411c58)    ;; code: STUB, CEntryStub, minor: 5
0xffff91411c2c   140  blr x16
0xffff91411c30   144  str x0, [jssp, #16]
0xffff91411c34   148  ldr x16, pc+44 (addr 0x0000ffff91411c60)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91411c38   152  blr x16
0xffff91411c3c   156  ldr lr, [jssp, #16]
0xffff91411c40   160  ldp xzr, fp, [jssp], #24
0xffff91411c44   164  b #-0x60 (addr 0xffff91411be4)
0xffff91411c48   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91411c4c   172  d63f03e0       constant
0xffff91411c50   176  91406820       constant
0xffff91411c54   180  0000ffff       constant
0xffff91411c58   184  91406260       constant
0xffff91411c5c   188  0000ffff       constant
0xffff91411c60   192  914068e0       constant
0xffff91411c64   196  0000ffff       constant
0xffff91411c68   200  movz x16, #0x0
0xffff91411c6c   204  sub csp, jssp, #0x10 (16)
0xffff91411c70   208  stp fp, lr, [jssp, #-16]!
0xffff91411c74   212  bl #+0x14 (addr 0xffff91411c88)
0xffff91411c78   216  movz x16, #0x8
0xffff91411c7c   220  sub csp, jssp, #0x10 (16)
0xffff91411c80   224  stp fp, lr, [jssp, #-16]!
0xffff91411c84   228  bl #+0x4 (addr 0xffff91411c88)
0xffff91411c88   232  movz x17, #0xa00000000
0xffff91411c8c   236  sub csp, jssp, #0x10 (16)
0xffff91411c90   240  stp x17, cp, [jssp, #-16]!
0xffff91411c94   244  add fp, jssp, #0x10 (16)
0xffff91411c98   248  ldr x17, pc+24 (addr 0x0000ffff91411cb0)    ;; lazy deoptimization bailout 0
0xffff91411c9c   252  add x17, x17, x16
0xffff91411ca0   256  br x17
0xffff91411ca4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411ca8   264  d63f03e0       constant
0xffff91411cac   268  d503201f       constant
0xffff91411cb0   272  91206000       constant
0xffff91411cb4   276  0000ffff       constant


Safepoints (size = 21)
0xffff91411c30   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91411c10  code target (STUB)  (0xffff91406820)
0xffff91411c28  code target (STUB)  (0xffff91406260)
0xffff91411c34  code target (STUB)  (0xffff914068e0)
0xffff91411c48  constant pool (size 32)
0xffff91411c98  runtime entry
0xffff91411ca4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4410
type = NORMAL
name = BinaryOpICStub(DIV:Int32*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff91411ba0     0  mov x2, x1
0xffff91411ba4     4  tbnz w2, #0, #+0xc4 (addr 0xffff91411c68)
0xffff91411ba8     8  mov x3, x0
0xffff91411bac    12  tbnz w3, #0, #+0xcc (addr 0xffff91411c78)
0xffff91411bb0    16  scvtf d0, x2, #32
0xffff91411bb4    20  scvtf d1, x3, #32
0xffff91411bb8    24  fdiv d0, d0, d1
0xffff91411bbc    28  movz x1, #0xf2c0
0xffff91411bc0    32  movk x1, #0x4117, lsl #16
0xffff91411bc4    36  ldp x2, x0, [x1]
0xffff91411bc8    40  adds x16, x2, #0x10 (16)
0xffff91411bcc    44  ccmp x16, x0, #nzCv, lo
0xffff91411bd0    48  b.hi #+0x20 (addr 0xffff91411bf0)
0xffff91411bd4    52  str x16, [x1]
0xffff91411bd8    56  ldr x1, [x26, #120]
0xffff91411bdc    60  str x1, [x2]
0xffff91411be0    64  orr x2, x2, #0x1
0xffff91411be4    68  stur d0, [x2, #7]
0xffff91411be8    72  mov x0, x2
0xffff91411bec    76  ret
0xffff91411bf0    80  sub csp, jssp, #0x10 (16)
0xffff91411bf4    84  stp fp, lr, [jssp, #-16]!
0xffff91411bf8    88  movz fp, #0xa00000000
0xffff91411bfc    92  sub csp, jssp, #0x8 (8)
0xffff91411c00    96  str fp, [jssp, #-8]!
0xffff91411c04   100  add fp, jssp, #0x8 (8)
0xffff91411c08   104  movz x2, #0x0
0xffff91411c0c   108  mov x16, lr
0xffff91411c10   112  ldr x17, pc+64 (addr 0x0000ffff91411c50)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91411c14   116  blr x17
0xffff91411c18   120  ldur cp, [fp, #-8]
0xffff91411c1c   124  movz x0, #0x0
0xffff91411c20   128  movz x1, #0x4b48
0xffff91411c24   132  movk x1, #0xe4, lsl #16
0xffff91411c28   136  ldr x16, pc+48 (addr 0x0000ffff91411c58)    ;; code: STUB, CEntryStub, minor: 5
0xffff91411c2c   140  blr x16
0xffff91411c30   144  str x0, [jssp, #16]
0xffff91411c34   148  ldr x16, pc+44 (addr 0x0000ffff91411c60)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91411c38   152  blr x16
0xffff91411c3c   156  ldr lr, [jssp, #16]
0xffff91411c40   160  ldp xzr, fp, [jssp], #24
0xffff91411c44   164  b #-0x60 (addr 0xffff91411be4)
0xffff91411c48   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91411c4c   172  d63f03e0       constant
0xffff91411c50   176  91406820       constant
0xffff91411c54   180  0000ffff       constant
0xffff91411c58   184  91406260       constant
0xffff91411c5c   188  0000ffff       constant
0xffff91411c60   192  914068e0       constant
0xffff91411c64   196  0000ffff       constant
0xffff91411c68   200  movz x16, #0x0
0xffff91411c6c   204  sub csp, jssp, #0x10 (16)
0xffff91411c70   208  stp fp, lr, [jssp, #-16]!
0xffff91411c74   212  bl #+0x14 (addr 0xffff91411c88)
0xffff91411c78   216  movz x16, #0x8
0xffff91411c7c   220  sub csp, jssp, #0x10 (16)
0xffff91411c80   224  stp fp, lr, [jssp, #-16]!
0xffff91411c84   228  bl #+0x4 (addr 0xffff91411c88)
0xffff91411c88   232  movz x17, #0xa00000000
0xffff91411c8c   236  sub csp, jssp, #0x10 (16)
0xffff91411c90   240  stp x17, cp, [jssp, #-16]!
0xffff91411c94   244  add fp, jssp, #0x10 (16)
0xffff91411c98   248  ldr x17, pc+24 (addr 0x0000ffff91411cb0)    ;; lazy deoptimization bailout 0
0xffff91411c9c   252  add x17, x17, x16
0xffff91411ca0   256  br x17
0xffff91411ca4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411ca8   264  d63f03e0       constant
0xffff91411cac   268  d503201f       constant
0xffff91411cb0   272  91206000       constant
0xffff91411cb4   276  0000ffff       constant


Safepoints (size = 21)
0xffff91411c30   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91411c10  code target (STUB)  (0xffff91406820)
0xffff91411c28  code target (STUB)  (0xffff91406260)
0xffff91411c34  code target (STUB)  (0xffff914068e0)
0xffff91411c48  constant pool (size 32)
0xffff91411c98  runtime entry
0xffff91411ca4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6458
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff91411d40     0  mov x2, x1
0xffff91411d44     4  tbnz w2, #0, #+0xf4 (addr 0xffff91411e38)
0xffff91411d48     8  tbz w0, #0, #+0x34 (addr 0xffff91411d7c)
0xffff91411d4c    12  ldur x16, [x0, #-1]
0xffff91411d50    16  ldr x17, [x26, #120]
0xffff91411d54    20  cmp x16, x17
0xffff91411d58    24  b.ne #+0xc (addr 0xffff91411d64)
0xffff91411d5c    28  ldur d0, [x0, #7]
0xffff91411d60    32  b #+0x20 (addr 0xffff91411d80)
0xffff91411d64    36  ldr x16, [x26, #40]
0xffff91411d68    40  cmp x0, x16
0xffff91411d6c    44  b.ne #+0xdc (addr 0xffff91411e48)
0xffff91411d70    48  ldr x3, [x26, #928]
0xffff91411d74    52  ldur d0, [x3, #7]
0xffff91411d78    56  b #+0x8 (addr 0xffff91411d80)
0xffff91411d7c    60  scvtf d0, x0, #32
0xffff91411d80    64  scvtf d1, x2, #32
0xffff91411d84    68  fdiv d0, d1, d0
0xffff91411d88    72  movz x1, #0xf2c0
0xffff91411d8c    76  movk x1, #0x4117, lsl #16
0xffff91411d90    80  ldp x2, x0, [x1]
0xffff91411d94    84  adds x16, x2, #0x10 (16)
0xffff91411d98    88  ccmp x16, x0, #nzCv, lo
0xffff91411d9c    92  b.hi #+0x20 (addr 0xffff91411dbc)
0xffff91411da0    96  str x16, [x1]
0xffff91411da4   100  ldr x1, [x26, #120]
0xffff91411da8   104  str x1, [x2]
0xffff91411dac   108  orr x2, x2, #0x1
0xffff91411db0   112  stur d0, [x2, #7]
0xffff91411db4   116  mov x0, x2
0xffff91411db8   120  ret
0xffff91411dbc   124  sub csp, jssp, #0x10 (16)
0xffff91411dc0   128  stp fp, lr, [jssp, #-16]!
0xffff91411dc4   132  movz fp, #0xa00000000
0xffff91411dc8   136  sub csp, jssp, #0x8 (8)
0xffff91411dcc   140  str fp, [jssp, #-8]!
0xffff91411dd0   144  add fp, jssp, #0x8 (8)
0xffff91411dd4   148  movz x2, #0x0
0xffff91411dd8   152  mov x16, lr
0xffff91411ddc   156  ldr x17, pc+68 (addr 0x0000ffff91411e20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91411de0   160  blr x17
0xffff91411de4   164  ldur cp, [fp, #-8]
0xffff91411de8   168  movz x0, #0x0
0xffff91411dec   172  movz x1, #0x4b48
0xffff91411df0   176  movk x1, #0xe4, lsl #16
0xffff91411df4   180  ldr x16, pc+52 (addr 0x0000ffff91411e28)    ;; code: STUB, CEntryStub, minor: 5
0xffff91411df8   184  blr x16
0xffff91411dfc   188  str x0, [jssp, #16]
0xffff91411e00   192  ldr x16, pc+48 (addr 0x0000ffff91411e30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91411e04   196  blr x16
0xffff91411e08   200  ldr lr, [jssp, #16]
0xffff91411e0c   204  ldp xzr, fp, [jssp], #24
0xffff91411e10   208  b #-0x60 (addr 0xffff91411db0)
0xffff91411e14   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91411e18   216  d63f03e0       constant
0xffff91411e1c   220  d503201f       constant
0xffff91411e20   224  91406820       constant
0xffff91411e24   228  0000ffff       constant
0xffff91411e28   232  91406260       constant
0xffff91411e2c   236  0000ffff       constant
0xffff91411e30   240  914068e0       constant
0xffff91411e34   244  0000ffff       constant
0xffff91411e38   248  movz x16, #0x0
0xffff91411e3c   252  sub csp, jssp, #0x10 (16)
0xffff91411e40   256  stp fp, lr, [jssp, #-16]!
0xffff91411e44   260  bl #+0x14 (addr 0xffff91411e58)
0xffff91411e48   264  movz x16, #0x8
0xffff91411e4c   268  sub csp, jssp, #0x10 (16)
0xffff91411e50   272  stp fp, lr, [jssp, #-16]!
0xffff91411e54   276  bl #+0x4 (addr 0xffff91411e58)
0xffff91411e58   280  movz x17, #0xa00000000
0xffff91411e5c   284  sub csp, jssp, #0x10 (16)
0xffff91411e60   288  stp x17, cp, [jssp, #-16]!
0xffff91411e64   292  add fp, jssp, #0x10 (16)
0xffff91411e68   296  ldr x17, pc+24 (addr 0x0000ffff91411e80)    ;; lazy deoptimization bailout 0
0xffff91411e6c   300  add x17, x17, x16
0xffff91411e70   304  br x17
0xffff91411e74   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411e78   312  d63f03e0       constant
0xffff91411e7c   316  d503201f       constant
0xffff91411e80   320  91206000       constant
0xffff91411e84   324  0000ffff       constant


Safepoints (size = 21)
0xffff91411dfc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91411ddc  code target (STUB)  (0xffff91406820)
0xffff91411df4  code target (STUB)  (0xffff91406260)
0xffff91411e00  code target (STUB)  (0xffff914068e0)
0xffff91411e14  constant pool (size 36)
0xffff91411e68  runtime entry
0xffff91411e74  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6458
type = NORMAL
name = BinaryOpICStub(DIV:Int32*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff91411d40     0  mov x2, x1
0xffff91411d44     4  tbnz w2, #0, #+0xf4 (addr 0xffff91411e38)
0xffff91411d48     8  tbz w0, #0, #+0x34 (addr 0xffff91411d7c)
0xffff91411d4c    12  ldur x16, [x0, #-1]
0xffff91411d50    16  ldr x17, [x26, #120]
0xffff91411d54    20  cmp x16, x17
0xffff91411d58    24  b.ne #+0xc (addr 0xffff91411d64)
0xffff91411d5c    28  ldur d0, [x0, #7]
0xffff91411d60    32  b #+0x20 (addr 0xffff91411d80)
0xffff91411d64    36  ldr x16, [x26, #40]
0xffff91411d68    40  cmp x0, x16
0xffff91411d6c    44  b.ne #+0xdc (addr 0xffff91411e48)
0xffff91411d70    48  ldr x3, [x26, #928]
0xffff91411d74    52  ldur d0, [x3, #7]
0xffff91411d78    56  b #+0x8 (addr 0xffff91411d80)
0xffff91411d7c    60  scvtf d0, x0, #32
0xffff91411d80    64  scvtf d1, x2, #32
0xffff91411d84    68  fdiv d0, d1, d0
0xffff91411d88    72  movz x1, #0xf2c0
0xffff91411d8c    76  movk x1, #0x4117, lsl #16
0xffff91411d90    80  ldp x2, x0, [x1]
0xffff91411d94    84  adds x16, x2, #0x10 (16)
0xffff91411d98    88  ccmp x16, x0, #nzCv, lo
0xffff91411d9c    92  b.hi #+0x20 (addr 0xffff91411dbc)
0xffff91411da0    96  str x16, [x1]
0xffff91411da4   100  ldr x1, [x26, #120]
0xffff91411da8   104  str x1, [x2]
0xffff91411dac   108  orr x2, x2, #0x1
0xffff91411db0   112  stur d0, [x2, #7]
0xffff91411db4   116  mov x0, x2
0xffff91411db8   120  ret
0xffff91411dbc   124  sub csp, jssp, #0x10 (16)
0xffff91411dc0   128  stp fp, lr, [jssp, #-16]!
0xffff91411dc4   132  movz fp, #0xa00000000
0xffff91411dc8   136  sub csp, jssp, #0x8 (8)
0xffff91411dcc   140  str fp, [jssp, #-8]!
0xffff91411dd0   144  add fp, jssp, #0x8 (8)
0xffff91411dd4   148  movz x2, #0x0
0xffff91411dd8   152  mov x16, lr
0xffff91411ddc   156  ldr x17, pc+68 (addr 0x0000ffff91411e20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91411de0   160  blr x17
0xffff91411de4   164  ldur cp, [fp, #-8]
0xffff91411de8   168  movz x0, #0x0
0xffff91411dec   172  movz x1, #0x4b48
0xffff91411df0   176  movk x1, #0xe4, lsl #16
0xffff91411df4   180  ldr x16, pc+52 (addr 0x0000ffff91411e28)    ;; code: STUB, CEntryStub, minor: 5
0xffff91411df8   184  blr x16
0xffff91411dfc   188  str x0, [jssp, #16]
0xffff91411e00   192  ldr x16, pc+48 (addr 0x0000ffff91411e30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91411e04   196  blr x16
0xffff91411e08   200  ldr lr, [jssp, #16]
0xffff91411e0c   204  ldp xzr, fp, [jssp], #24
0xffff91411e10   208  b #-0x60 (addr 0xffff91411db0)
0xffff91411e14   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91411e18   216  d63f03e0       constant
0xffff91411e1c   220  d503201f       constant
0xffff91411e20   224  91406820       constant
0xffff91411e24   228  0000ffff       constant
0xffff91411e28   232  91406260       constant
0xffff91411e2c   236  0000ffff       constant
0xffff91411e30   240  914068e0       constant
0xffff91411e34   244  0000ffff       constant
0xffff91411e38   248  movz x16, #0x0
0xffff91411e3c   252  sub csp, jssp, #0x10 (16)
0xffff91411e40   256  stp fp, lr, [jssp, #-16]!
0xffff91411e44   260  bl #+0x14 (addr 0xffff91411e58)
0xffff91411e48   264  movz x16, #0x8
0xffff91411e4c   268  sub csp, jssp, #0x10 (16)
0xffff91411e50   272  stp fp, lr, [jssp, #-16]!
0xffff91411e54   276  bl #+0x4 (addr 0xffff91411e58)
0xffff91411e58   280  movz x17, #0xa00000000
0xffff91411e5c   284  sub csp, jssp, #0x10 (16)
0xffff91411e60   288  stp x17, cp, [jssp, #-16]!
0xffff91411e64   292  add fp, jssp, #0x10 (16)
0xffff91411e68   296  ldr x17, pc+24 (addr 0x0000ffff91411e80)    ;; lazy deoptimization bailout 0
0xffff91411e6c   300  add x17, x17, x16
0xffff91411e70   304  br x17
0xffff91411e74   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411e78   312  d63f03e0       constant
0xffff91411e7c   316  d503201f       constant
0xffff91411e80   320  91206000       constant
0xffff91411e84   324  0000ffff       constant


Safepoints (size = 21)
0xffff91411dfc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91411ddc  code target (STUB)  (0xffff91406820)
0xffff91411df4  code target (STUB)  (0xffff91406260)
0xffff91411e00  code target (STUB)  (0xffff914068e0)
0xffff91411e14  constant pool (size 36)
0xffff91411e68  runtime entry
0xffff91411e74  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2346
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 176)
0xffff91411f00     0  mov x2, x1
0xffff91411f04     4  tbnz w2, #0, #+0x44 (addr 0xffff91411f48)
0xffff91411f08     8  mov x3, x0
0xffff91411f0c    12  tbnz w3, #0, #+0x4c (addr 0xffff91411f58)
0xffff91411f10    16  asr x2, x2, #32
0xffff91411f14    20  asr x3, x3, #32
0xffff91411f18    24  sdiv w5, w2, w3
0xffff91411f1c    28  cbz w3, #+0x4c (addr 0xffff91411f68)
0xffff91411f20    32  cmp w3, #0x0 (0)
0xffff91411f24    36  ccmp w2, #0, #nzcv, mi
0xffff91411f28    40  b.eq #+0x40 (addr 0xffff91411f68)
0xffff91411f2c    44  cmp w2, #0x1 (1)
0xffff91411f30    48  ccmn w3, #1, #nzcv, vs
0xffff91411f34    52  b.eq #+0x34 (addr 0xffff91411f68)
0xffff91411f38    56  msub w4, w5, w3, w2
0xffff91411f3c    60  cbnz w4, #+0x2c (addr 0xffff91411f68)
0xffff91411f40    64  lsl x0, x5, #32
0xffff91411f44    68  ret
0xffff91411f48    72  movz x16, #0x0
0xffff91411f4c    76  sub csp, jssp, #0x10 (16)
0xffff91411f50    80  stp fp, lr, [jssp, #-16]!
0xffff91411f54    84  bl #+0x24 (addr 0xffff91411f78)
0xffff91411f58    88  movz x16, #0x8
0xffff91411f5c    92  sub csp, jssp, #0x10 (16)
0xffff91411f60    96  stp fp, lr, [jssp, #-16]!
0xffff91411f64   100  bl #+0x14 (addr 0xffff91411f78)
0xffff91411f68   104  movz x16, #0x10
0xffff91411f6c   108  sub csp, jssp, #0x10 (16)
0xffff91411f70   112  stp fp, lr, [jssp, #-16]!
0xffff91411f74   116  bl #+0x4 (addr 0xffff91411f78)
0xffff91411f78   120  movz x17, #0xa00000000
0xffff91411f7c   124  sub csp, jssp, #0x10 (16)
0xffff91411f80   128  stp x17, cp, [jssp, #-16]!
0xffff91411f84   132  add fp, jssp, #0x10 (16)
0xffff91411f88   136  ldr x17, pc+24 (addr 0x0000ffff91411fa0)    ;; lazy deoptimization bailout 0
0xffff91411f8c   140  add x17, x17, x16
0xffff91411f90   144  br x17
0xffff91411f94   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411f98   152  d63f03e0       constant
0xffff91411f9c   156  d503201f       constant
0xffff91411fa0   160  91206000       constant
0xffff91411fa4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91411f88  runtime entry
0xffff91411f94  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2346
type = NORMAL
name = BinaryOpICStub(DIV:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 176)
0xffff91411f00     0  mov x2, x1
0xffff91411f04     4  tbnz w2, #0, #+0x44 (addr 0xffff91411f48)
0xffff91411f08     8  mov x3, x0
0xffff91411f0c    12  tbnz w3, #0, #+0x4c (addr 0xffff91411f58)
0xffff91411f10    16  asr x2, x2, #32
0xffff91411f14    20  asr x3, x3, #32
0xffff91411f18    24  sdiv w5, w2, w3
0xffff91411f1c    28  cbz w3, #+0x4c (addr 0xffff91411f68)
0xffff91411f20    32  cmp w3, #0x0 (0)
0xffff91411f24    36  ccmp w2, #0, #nzcv, mi
0xffff91411f28    40  b.eq #+0x40 (addr 0xffff91411f68)
0xffff91411f2c    44  cmp w2, #0x1 (1)
0xffff91411f30    48  ccmn w3, #1, #nzcv, vs
0xffff91411f34    52  b.eq #+0x34 (addr 0xffff91411f68)
0xffff91411f38    56  msub w4, w5, w3, w2
0xffff91411f3c    60  cbnz w4, #+0x2c (addr 0xffff91411f68)
0xffff91411f40    64  lsl x0, x5, #32
0xffff91411f44    68  ret
0xffff91411f48    72  movz x16, #0x0
0xffff91411f4c    76  sub csp, jssp, #0x10 (16)
0xffff91411f50    80  stp fp, lr, [jssp, #-16]!
0xffff91411f54    84  bl #+0x24 (addr 0xffff91411f78)
0xffff91411f58    88  movz x16, #0x8
0xffff91411f5c    92  sub csp, jssp, #0x10 (16)
0xffff91411f60    96  stp fp, lr, [jssp, #-16]!
0xffff91411f64   100  bl #+0x14 (addr 0xffff91411f78)
0xffff91411f68   104  movz x16, #0x10
0xffff91411f6c   108  sub csp, jssp, #0x10 (16)
0xffff91411f70   112  stp fp, lr, [jssp, #-16]!
0xffff91411f74   116  bl #+0x4 (addr 0xffff91411f78)
0xffff91411f78   120  movz x17, #0xa00000000
0xffff91411f7c   124  sub csp, jssp, #0x10 (16)
0xffff91411f80   128  stp x17, cp, [jssp, #-16]!
0xffff91411f84   132  add fp, jssp, #0x10 (16)
0xffff91411f88   136  ldr x17, pc+24 (addr 0x0000ffff91411fa0)    ;; lazy deoptimization bailout 0
0xffff91411f8c   140  add x17, x17, x16
0xffff91411f90   144  br x17
0xffff91411f94   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91411f98   152  d63f03e0       constant
0xffff91411f9c   156  d503201f       constant
0xffff91411fa0   160  91206000       constant
0xffff91411fa4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91411f88  runtime entry
0xffff91411f94  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2362
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff91412020     0  mov x2, x1
0xffff91412024     4  tbnz w2, #0, #+0xc4 (addr 0xffff914120e8)
0xffff91412028     8  mov x3, x0
0xffff9141202c    12  tbnz w3, #0, #+0xcc (addr 0xffff914120f8)
0xffff91412030    16  scvtf d0, x2, #32
0xffff91412034    20  scvtf d1, x3, #32
0xffff91412038    24  fdiv d0, d0, d1
0xffff9141203c    28  movz x1, #0xf2c0
0xffff91412040    32  movk x1, #0x4117, lsl #16
0xffff91412044    36  ldp x2, x0, [x1]
0xffff91412048    40  adds x16, x2, #0x10 (16)
0xffff9141204c    44  ccmp x16, x0, #nzCv, lo
0xffff91412050    48  b.hi #+0x20 (addr 0xffff91412070)
0xffff91412054    52  str x16, [x1]
0xffff91412058    56  ldr x1, [x26, #120]
0xffff9141205c    60  str x1, [x2]
0xffff91412060    64  orr x2, x2, #0x1
0xffff91412064    68  stur d0, [x2, #7]
0xffff91412068    72  mov x0, x2
0xffff9141206c    76  ret
0xffff91412070    80  sub csp, jssp, #0x10 (16)
0xffff91412074    84  stp fp, lr, [jssp, #-16]!
0xffff91412078    88  movz fp, #0xa00000000
0xffff9141207c    92  sub csp, jssp, #0x8 (8)
0xffff91412080    96  str fp, [jssp, #-8]!
0xffff91412084   100  add fp, jssp, #0x8 (8)
0xffff91412088   104  movz x2, #0x0
0xffff9141208c   108  mov x16, lr
0xffff91412090   112  ldr x17, pc+64 (addr 0x0000ffff914120d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91412094   116  blr x17
0xffff91412098   120  ldur cp, [fp, #-8]
0xffff9141209c   124  movz x0, #0x0
0xffff914120a0   128  movz x1, #0x4b48
0xffff914120a4   132  movk x1, #0xe4, lsl #16
0xffff914120a8   136  ldr x16, pc+48 (addr 0x0000ffff914120d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff914120ac   140  blr x16
0xffff914120b0   144  str x0, [jssp, #16]
0xffff914120b4   148  ldr x16, pc+44 (addr 0x0000ffff914120e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914120b8   152  blr x16
0xffff914120bc   156  ldr lr, [jssp, #16]
0xffff914120c0   160  ldp xzr, fp, [jssp], #24
0xffff914120c4   164  b #-0x60 (addr 0xffff91412064)
0xffff914120c8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914120cc   172  d63f03e0       constant
0xffff914120d0   176  91406820       constant
0xffff914120d4   180  0000ffff       constant
0xffff914120d8   184  91406260       constant
0xffff914120dc   188  0000ffff       constant
0xffff914120e0   192  914068e0       constant
0xffff914120e4   196  0000ffff       constant
0xffff914120e8   200  movz x16, #0x0
0xffff914120ec   204  sub csp, jssp, #0x10 (16)
0xffff914120f0   208  stp fp, lr, [jssp, #-16]!
0xffff914120f4   212  bl #+0x14 (addr 0xffff91412108)
0xffff914120f8   216  movz x16, #0x8
0xffff914120fc   220  sub csp, jssp, #0x10 (16)
0xffff91412100   224  stp fp, lr, [jssp, #-16]!
0xffff91412104   228  bl #+0x4 (addr 0xffff91412108)
0xffff91412108   232  movz x17, #0xa00000000
0xffff9141210c   236  sub csp, jssp, #0x10 (16)
0xffff91412110   240  stp x17, cp, [jssp, #-16]!
0xffff91412114   244  add fp, jssp, #0x10 (16)
0xffff91412118   248  ldr x17, pc+24 (addr 0x0000ffff91412130)    ;; lazy deoptimization bailout 0
0xffff9141211c   252  add x17, x17, x16
0xffff91412120   256  br x17
0xffff91412124   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91412128   264  d63f03e0       constant
0xffff9141212c   268  d503201f       constant
0xffff91412130   272  91206000       constant
0xffff91412134   276  0000ffff       constant


Safepoints (size = 21)
0xffff914120b0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91412090  code target (STUB)  (0xffff91406820)
0xffff914120a8  code target (STUB)  (0xffff91406260)
0xffff914120b4  code target (STUB)  (0xffff914068e0)
0xffff914120c8  constant pool (size 32)
0xffff91412118  runtime entry
0xffff91412124  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2362
type = NORMAL
name = BinaryOpICStub(DIV:Int32*Smi->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff91412020     0  mov x2, x1
0xffff91412024     4  tbnz w2, #0, #+0xc4 (addr 0xffff914120e8)
0xffff91412028     8  mov x3, x0
0xffff9141202c    12  tbnz w3, #0, #+0xcc (addr 0xffff914120f8)
0xffff91412030    16  scvtf d0, x2, #32
0xffff91412034    20  scvtf d1, x3, #32
0xffff91412038    24  fdiv d0, d0, d1
0xffff9141203c    28  movz x1, #0xf2c0
0xffff91412040    32  movk x1, #0x4117, lsl #16
0xffff91412044    36  ldp x2, x0, [x1]
0xffff91412048    40  adds x16, x2, #0x10 (16)
0xffff9141204c    44  ccmp x16, x0, #nzCv, lo
0xffff91412050    48  b.hi #+0x20 (addr 0xffff91412070)
0xffff91412054    52  str x16, [x1]
0xffff91412058    56  ldr x1, [x26, #120]
0xffff9141205c    60  str x1, [x2]
0xffff91412060    64  orr x2, x2, #0x1
0xffff91412064    68  stur d0, [x2, #7]
0xffff91412068    72  mov x0, x2
0xffff9141206c    76  ret
0xffff91412070    80  sub csp, jssp, #0x10 (16)
0xffff91412074    84  stp fp, lr, [jssp, #-16]!
0xffff91412078    88  movz fp, #0xa00000000
0xffff9141207c    92  sub csp, jssp, #0x8 (8)
0xffff91412080    96  str fp, [jssp, #-8]!
0xffff91412084   100  add fp, jssp, #0x8 (8)
0xffff91412088   104  movz x2, #0x0
0xffff9141208c   108  mov x16, lr
0xffff91412090   112  ldr x17, pc+64 (addr 0x0000ffff914120d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91412094   116  blr x17
0xffff91412098   120  ldur cp, [fp, #-8]
0xffff9141209c   124  movz x0, #0x0
0xffff914120a0   128  movz x1, #0x4b48
0xffff914120a4   132  movk x1, #0xe4, lsl #16
0xffff914120a8   136  ldr x16, pc+48 (addr 0x0000ffff914120d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff914120ac   140  blr x16
0xffff914120b0   144  str x0, [jssp, #16]
0xffff914120b4   148  ldr x16, pc+44 (addr 0x0000ffff914120e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914120b8   152  blr x16
0xffff914120bc   156  ldr lr, [jssp, #16]
0xffff914120c0   160  ldp xzr, fp, [jssp], #24
0xffff914120c4   164  b #-0x60 (addr 0xffff91412064)
0xffff914120c8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914120cc   172  d63f03e0       constant
0xffff914120d0   176  91406820       constant
0xffff914120d4   180  0000ffff       constant
0xffff914120d8   184  91406260       constant
0xffff914120dc   188  0000ffff       constant
0xffff914120e0   192  914068e0       constant
0xffff914120e4   196  0000ffff       constant
0xffff914120e8   200  movz x16, #0x0
0xffff914120ec   204  sub csp, jssp, #0x10 (16)
0xffff914120f0   208  stp fp, lr, [jssp, #-16]!
0xffff914120f4   212  bl #+0x14 (addr 0xffff91412108)
0xffff914120f8   216  movz x16, #0x8
0xffff914120fc   220  sub csp, jssp, #0x10 (16)
0xffff91412100   224  stp fp, lr, [jssp, #-16]!
0xffff91412104   228  bl #+0x4 (addr 0xffff91412108)
0xffff91412108   232  movz x17, #0xa00000000
0xffff9141210c   236  sub csp, jssp, #0x10 (16)
0xffff91412110   240  stp x17, cp, [jssp, #-16]!
0xffff91412114   244  add fp, jssp, #0x10 (16)
0xffff91412118   248  ldr x17, pc+24 (addr 0x0000ffff91412130)    ;; lazy deoptimization bailout 0
0xffff9141211c   252  add x17, x17, x16
0xffff91412120   256  br x17
0xffff91412124   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91412128   264  d63f03e0       constant
0xffff9141212c   268  d503201f       constant
0xffff91412130   272  91206000       constant
0xffff91412134   276  0000ffff       constant


Safepoints (size = 21)
0xffff914120b0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91412090  code target (STUB)  (0xffff91406820)
0xffff914120a8  code target (STUB)  (0xffff91406260)
0xffff914120b4  code target (STUB)  (0xffff914068e0)
0xffff914120c8  constant pool (size 32)
0xffff91412118  runtime entry
0xffff91412124  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4538
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff914121c0     0  mov x2, x0
0xffff914121c4     4  tbnz w2, #0, #+0xf4 (addr 0xffff914122b8)
0xffff914121c8     8  tbz w1, #0, #+0x34 (addr 0xffff914121fc)
0xffff914121cc    12  ldur x16, [x1, #-1]
0xffff914121d0    16  ldr x17, [x26, #120]
0xffff914121d4    20  cmp x16, x17
0xffff914121d8    24  b.ne #+0xc (addr 0xffff914121e4)
0xffff914121dc    28  ldur d0, [x1, #7]
0xffff914121e0    32  b #+0x20 (addr 0xffff91412200)
0xffff914121e4    36  ldr x16, [x26, #40]
0xffff914121e8    40  cmp x1, x16
0xffff914121ec    44  b.ne #+0xdc (addr 0xffff914122c8)
0xffff914121f0    48  ldr x3, [x26, #928]
0xffff914121f4    52  ldur d0, [x3, #7]
0xffff914121f8    56  b #+0x8 (addr 0xffff91412200)
0xffff914121fc    60  scvtf d0, x1, #32
0xffff91412200    64  scvtf d1, x2, #32
0xffff91412204    68  fdiv d0, d0, d1
0xffff91412208    72  movz x1, #0xf2c0
0xffff9141220c    76  movk x1, #0x4117, lsl #16
0xffff91412210    80  ldp x2, x0, [x1]
0xffff91412214    84  adds x16, x2, #0x10 (16)
0xffff91412218    88  ccmp x16, x0, #nzCv, lo
0xffff9141221c    92  b.hi #+0x20 (addr 0xffff9141223c)
0xffff91412220    96  str x16, [x1]
0xffff91412224   100  ldr x1, [x26, #120]
0xffff91412228   104  str x1, [x2]
0xffff9141222c   108  orr x2, x2, #0x1
0xffff91412230   112  stur d0, [x2, #7]
0xffff91412234   116  mov x0, x2
0xffff91412238   120  ret
0xffff9141223c   124  sub csp, jssp, #0x10 (16)
0xffff91412240   128  stp fp, lr, [jssp, #-16]!
0xffff91412244   132  movz fp, #0xa00000000
0xffff91412248   136  sub csp, jssp, #0x8 (8)
0xffff9141224c   140  str fp, [jssp, #-8]!
0xffff91412250   144  add fp, jssp, #0x8 (8)
0xffff91412254   148  movz x2, #0x0
0xffff91412258   152  mov x16, lr
0xffff9141225c   156  ldr x17, pc+68 (addr 0x0000ffff914122a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91412260   160  blr x17
0xffff91412264   164  ldur cp, [fp, #-8]
0xffff91412268   168  movz x0, #0x0
0xffff9141226c   172  movz x1, #0x4b48
0xffff91412270   176  movk x1, #0xe4, lsl #16
0xffff91412274   180  ldr x16, pc+52 (addr 0x0000ffff914122a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91412278   184  blr x16
0xffff9141227c   188  str x0, [jssp, #16]
0xffff91412280   192  ldr x16, pc+48 (addr 0x0000ffff914122b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91412284   196  blr x16
0xffff91412288   200  ldr lr, [jssp, #16]
0xffff9141228c   204  ldp xzr, fp, [jssp], #24
0xffff91412290   208  b #-0x60 (addr 0xffff91412230)
0xffff91412294   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91412298   216  d63f03e0       constant
0xffff9141229c   220  d503201f       constant
0xffff914122a0   224  91406820       constant
0xffff914122a4   228  0000ffff       constant
0xffff914122a8   232  91406260       constant
0xffff914122ac   236  0000ffff       constant
0xffff914122b0   240  914068e0       constant
0xffff914122b4   244  0000ffff       constant
0xffff914122b8   248  movz x16, #0x0
0xffff914122bc   252  sub csp, jssp, #0x10 (16)
0xffff914122c0   256  stp fp, lr, [jssp, #-16]!
0xffff914122c4   260  bl #+0x14 (addr 0xffff914122d8)
0xffff914122c8   264  movz x16, #0x8
0xffff914122cc   268  sub csp, jssp, #0x10 (16)
0xffff914122d0   272  stp fp, lr, [jssp, #-16]!
0xffff914122d4   276  bl #+0x4 (addr 0xffff914122d8)
0xffff914122d8   280  movz x17, #0xa00000000
0xffff914122dc   284  sub csp, jssp, #0x10 (16)
0xffff914122e0   288  stp x17, cp, [jssp, #-16]!
0xffff914122e4   292  add fp, jssp, #0x10 (16)
0xffff914122e8   296  ldr x17, pc+24 (addr 0x0000ffff91412300)    ;; lazy deoptimization bailout 0
0xffff914122ec   300  add x17, x17, x16
0xffff914122f0   304  br x17
0xffff914122f4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914122f8   312  d63f03e0       constant
0xffff914122fc   316  d503201f       constant
0xffff91412300   320  91206000       constant
0xffff91412304   324  0000ffff       constant


Safepoints (size = 21)
0xffff9141227c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9141225c  code target (STUB)  (0xffff91406820)
0xffff91412274  code target (STUB)  (0xffff91406260)
0xffff91412280  code target (STUB)  (0xffff914068e0)
0xffff91412294  constant pool (size 36)
0xffff914122e8  runtime entry
0xffff914122f4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4538
type = NORMAL
name = BinaryOpICStub(DIV:Number*Int32->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff914121c0     0  mov x2, x0
0xffff914121c4     4  tbnz w2, #0, #+0xf4 (addr 0xffff914122b8)
0xffff914121c8     8  tbz w1, #0, #+0x34 (addr 0xffff914121fc)
0xffff914121cc    12  ldur x16, [x1, #-1]
0xffff914121d0    16  ldr x17, [x26, #120]
0xffff914121d4    20  cmp x16, x17
0xffff914121d8    24  b.ne #+0xc (addr 0xffff914121e4)
0xffff914121dc    28  ldur d0, [x1, #7]
0xffff914121e0    32  b #+0x20 (addr 0xffff91412200)
0xffff914121e4    36  ldr x16, [x26, #40]
0xffff914121e8    40  cmp x1, x16
0xffff914121ec    44  b.ne #+0xdc (addr 0xffff914122c8)
0xffff914121f0    48  ldr x3, [x26, #928]
0xffff914121f4    52  ldur d0, [x3, #7]
0xffff914121f8    56  b #+0x8 (addr 0xffff91412200)
0xffff914121fc    60  scvtf d0, x1, #32
0xffff91412200    64  scvtf d1, x2, #32
0xffff91412204    68  fdiv d0, d0, d1
0xffff91412208    72  movz x1, #0xf2c0
0xffff9141220c    76  movk x1, #0x4117, lsl #16
0xffff91412210    80  ldp x2, x0, [x1]
0xffff91412214    84  adds x16, x2, #0x10 (16)
0xffff91412218    88  ccmp x16, x0, #nzCv, lo
0xffff9141221c    92  b.hi #+0x20 (addr 0xffff9141223c)
0xffff91412220    96  str x16, [x1]
0xffff91412224   100  ldr x1, [x26, #120]
0xffff91412228   104  str x1, [x2]
0xffff9141222c   108  orr x2, x2, #0x1
0xffff91412230   112  stur d0, [x2, #7]
0xffff91412234   116  mov x0, x2
0xffff91412238   120  ret
0xffff9141223c   124  sub csp, jssp, #0x10 (16)
0xffff91412240   128  stp fp, lr, [jssp, #-16]!
0xffff91412244   132  movz fp, #0xa00000000
0xffff91412248   136  sub csp, jssp, #0x8 (8)
0xffff9141224c   140  str fp, [jssp, #-8]!
0xffff91412250   144  add fp, jssp, #0x8 (8)
0xffff91412254   148  movz x2, #0x0
0xffff91412258   152  mov x16, lr
0xffff9141225c   156  ldr x17, pc+68 (addr 0x0000ffff914122a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91412260   160  blr x17
0xffff91412264   164  ldur cp, [fp, #-8]
0xffff91412268   168  movz x0, #0x0
0xffff9141226c   172  movz x1, #0x4b48
0xffff91412270   176  movk x1, #0xe4, lsl #16
0xffff91412274   180  ldr x16, pc+52 (addr 0x0000ffff914122a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91412278   184  blr x16
0xffff9141227c   188  str x0, [jssp, #16]
0xffff91412280   192  ldr x16, pc+48 (addr 0x0000ffff914122b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91412284   196  blr x16
0xffff91412288   200  ldr lr, [jssp, #16]
0xffff9141228c   204  ldp xzr, fp, [jssp], #24
0xffff91412290   208  b #-0x60 (addr 0xffff91412230)
0xffff91412294   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91412298   216  d63f03e0       constant
0xffff9141229c   220  d503201f       constant
0xffff914122a0   224  91406820       constant
0xffff914122a4   228  0000ffff       constant
0xffff914122a8   232  91406260       constant
0xffff914122ac   236  0000ffff       constant
0xffff914122b0   240  914068e0       constant
0xffff914122b4   244  0000ffff       constant
0xffff914122b8   248  movz x16, #0x0
0xffff914122bc   252  sub csp, jssp, #0x10 (16)
0xffff914122c0   256  stp fp, lr, [jssp, #-16]!
0xffff914122c4   260  bl #+0x14 (addr 0xffff914122d8)
0xffff914122c8   264  movz x16, #0x8
0xffff914122cc   268  sub csp, jssp, #0x10 (16)
0xffff914122d0   272  stp fp, lr, [jssp, #-16]!
0xffff914122d4   276  bl #+0x4 (addr 0xffff914122d8)
0xffff914122d8   280  movz x17, #0xa00000000
0xffff914122dc   284  sub csp, jssp, #0x10 (16)
0xffff914122e0   288  stp x17, cp, [jssp, #-16]!
0xffff914122e4   292  add fp, jssp, #0x10 (16)
0xffff914122e8   296  ldr x17, pc+24 (addr 0x0000ffff91412300)    ;; lazy deoptimization bailout 0
0xffff914122ec   300  add x17, x17, x16
0xffff914122f0   304  br x17
0xffff914122f4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914122f8   312  d63f03e0       constant
0xffff914122fc   316  d503201f       constant
0xffff91412300   320  91206000       constant
0xffff91412304   324  0000ffff       constant


Safepoints (size = 21)
0xffff9141227c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9141225c  code target (STUB)  (0xffff91406820)
0xffff91412274  code target (STUB)  (0xffff91406260)
0xffff91412280  code target (STUB)  (0xffff914068e0)
0xffff91412294  constant pool (size 36)
0xffff914122e8  runtime entry
0xffff914122f4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6586
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 389)
0xffff91412380     0  tbz w1, #0, #+0x34 (addr 0xffff914123b4)
0xffff91412384     4  ldur x16, [x1, #-1]
0xffff91412388     8  ldr x17, [x26, #120]
0xffff9141238c    12  cmp x16, x17
0xffff91412390    16  b.ne #+0xc (addr 0xffff9141239c)
0xffff91412394    20  ldur d0, [x1, #7]
0xffff91412398    24  b #+0x20 (addr 0xffff914123b8)
0xffff9141239c    28  ldr x16, [x26, #40]
0xffff914123a0    32  cmp x1, x16
0xffff914123a4    36  b.ne #+0xfc (addr 0xffff914124a0)
0xffff914123a8    40  ldr x2, [x26, #928]
0xffff914123ac    44  ldur d0, [x2, #7]
0xffff914123b0    48  b #+0x8 (addr 0xffff914123b8)
0xffff914123b4    52  scvtf d0, x1, #32
0xffff914123b8    56  tbz w0, #0, #+0x34 (addr 0xffff914123ec)
0xffff914123bc    60  ldur x16, [x0, #-1]
0xffff914123c0    64  ldr x17, [x26, #120]
0xffff914123c4    68  cmp x16, x17
0xffff914123c8    72  b.ne #+0xc (addr 0xffff914123d4)
0xffff914123cc    76  ldur d1, [x0, #7]
0xffff914123d0    80  b #+0x20 (addr 0xffff914123f0)
0xffff914123d4    84  ldr x16, [x26, #40]
0xffff914123d8    88  cmp x0, x16
0xffff914123dc    92  b.ne #+0xd4 (addr 0xffff914124b0)
0xffff914123e0    96  ldr x2, [x26, #928]
0xffff914123e4   100  ldur d1, [x2, #7]
0xffff914123e8   104  b #+0x8 (addr 0xffff914123f0)
0xffff914123ec   108  scvtf d1, x0, #32
0xffff914123f0   112  fdiv d0, d0, d1
0xffff914123f4   116  movz x1, #0xf2c0
0xffff914123f8   120  movk x1, #0x4117, lsl #16
0xffff914123fc   124  ldp x2, x0, [x1]
0xffff91412400   128  adds x16, x2, #0x10 (16)
0xffff91412404   132  ccmp x16, x0, #nzCv, lo
0xffff91412408   136  b.hi #+0x20 (addr 0xffff91412428)
0xffff9141240c   140  str x16, [x1]
0xffff91412410   144  ldr x1, [x26, #120]
0xffff91412414   148  str x1, [x2]
0xffff91412418   152  orr x2, x2, #0x1
0xffff9141241c   156  stur d0, [x2, #7]
0xffff91412420   160  mov x0, x2
0xffff91412424   164  ret
0xffff91412428   168  sub csp, jssp, #0x10 (16)
0xffff9141242c   172  stp fp, lr, [jssp, #-16]!
0xffff91412430   176  movz fp, #0xa00000000
0xffff91412434   180  sub csp, jssp, #0x8 (8)
0xffff91412438   184  str fp, [jssp, #-8]!
0xffff9141243c   188  add fp, jssp, #0x8 (8)
0xffff91412440   192  movz x2, #0x0
0xffff91412444   196  mov x16, lr
0xffff91412448   200  ldr x17, pc+64 (addr 0x0000ffff91412488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9141244c   204  blr x17
0xffff91412450   208  ldur cp, [fp, #-8]
0xffff91412454   212  movz x0, #0x0
0xffff91412458   216  movz x1, #0x4b48
0xffff9141245c   220  movk x1, #0xe4, lsl #16
0xffff91412460   224  ldr x16, pc+48 (addr 0x0000ffff91412490)    ;; code: STUB, CEntryStub, minor: 5
0xffff91412464   228  blr x16
0xffff91412468   232  str x0, [jssp, #16]
0xffff9141246c   236  ldr x16, pc+44 (addr 0x0000ffff91412498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91412470   240  blr x16
0xffff91412474   244  ldr lr, [jssp, #16]
0xffff91412478   248  ldp xzr, fp, [jssp], #24
0xffff9141247c   252  b #-0x60 (addr 0xffff9141241c)
0xffff91412480   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91412484   260  d63f03e0       constant
0xffff91412488   264  91406820       constant
0xffff9141248c   268  0000ffff       constant
0xffff91412490   272  91406260       constant
0xffff91412494   276  0000ffff       constant
0xffff91412498   280  914068e0       constant
0xffff9141249c   284  0000ffff       constant
0xffff914124a0   288  movz x16, #0x0
0xffff914124a4   292  sub csp, jssp, #0x10 (16)
0xffff914124a8   296  stp fp, lr, [jssp, #-16]!
0xffff914124ac   300  bl #+0x14 (addr 0xffff914124c0)
0xffff914124b0   304  movz x16, #0x8
0xffff914124b4   308  sub csp, jssp, #0x10 (16)
0xffff914124b8   312  stp fp, lr, [jssp, #-16]!
0xffff914124bc   316  bl #+0x4 (addr 0xffff914124c0)
0xffff914124c0   320  movz x17, #0xa00000000
0xffff914124c4   324  sub csp, jssp, #0x10 (16)
0xffff914124c8   328  stp x17, cp, [jssp, #-16]!
0xffff914124cc   332  add fp, jssp, #0x10 (16)
0xffff914124d0   336  ldr x17, pc+24 (addr 0x0000ffff914124e8)    ;; lazy deoptimization bailout 0
0xffff914124d4   340  add x17, x17, x16
0xffff914124d8   344  br x17
0xffff914124dc   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914124e0   352  d63f03e0       constant
0xffff914124e4   356  d503201f       constant
0xffff914124e8   360  91206000       constant
0xffff914124ec   364  0000ffff       constant


Safepoints (size = 21)
0xffff91412468   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91412448  code target (STUB)  (0xffff91406820)
0xffff91412460  code target (STUB)  (0xffff91406260)
0xffff9141246c  code target (STUB)  (0xffff914068e0)
0xffff91412480  constant pool (size 32)
0xffff914124d0  runtime entry
0xffff914124dc  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6586
type = NORMAL
name = BinaryOpICStub(DIV:Number*Number->Number)
compiler = crankshaft
Instructions (size = 389)
0xffff91412380     0  tbz w1, #0, #+0x34 (addr 0xffff914123b4)
0xffff91412384     4  ldur x16, [x1, #-1]
0xffff91412388     8  ldr x17, [x26, #120]
0xffff9141238c    12  cmp x16, x17
0xffff91412390    16  b.ne #+0xc (addr 0xffff9141239c)
0xffff91412394    20  ldur d0, [x1, #7]
0xffff91412398    24  b #+0x20 (addr 0xffff914123b8)
0xffff9141239c    28  ldr x16, [x26, #40]
0xffff914123a0    32  cmp x1, x16
0xffff914123a4    36  b.ne #+0xfc (addr 0xffff914124a0)
0xffff914123a8    40  ldr x2, [x26, #928]
0xffff914123ac    44  ldur d0, [x2, #7]
0xffff914123b0    48  b #+0x8 (addr 0xffff914123b8)
0xffff914123b4    52  scvtf d0, x1, #32
0xffff914123b8    56  tbz w0, #0, #+0x34 (addr 0xffff914123ec)
0xffff914123bc    60  ldur x16, [x0, #-1]
0xffff914123c0    64  ldr x17, [x26, #120]
0xffff914123c4    68  cmp x16, x17
0xffff914123c8    72  b.ne #+0xc (addr 0xffff914123d4)
0xffff914123cc    76  ldur d1, [x0, #7]
0xffff914123d0    80  b #+0x20 (addr 0xffff914123f0)
0xffff914123d4    84  ldr x16, [x26, #40]
0xffff914123d8    88  cmp x0, x16
0xffff914123dc    92  b.ne #+0xd4 (addr 0xffff914124b0)
0xffff914123e0    96  ldr x2, [x26, #928]
0xffff914123e4   100  ldur d1, [x2, #7]
0xffff914123e8   104  b #+0x8 (addr 0xffff914123f0)
0xffff914123ec   108  scvtf d1, x0, #32
0xffff914123f0   112  fdiv d0, d0, d1
0xffff914123f4   116  movz x1, #0xf2c0
0xffff914123f8   120  movk x1, #0x4117, lsl #16
0xffff914123fc   124  ldp x2, x0, [x1]
0xffff91412400   128  adds x16, x2, #0x10 (16)
0xffff91412404   132  ccmp x16, x0, #nzCv, lo
0xffff91412408   136  b.hi #+0x20 (addr 0xffff91412428)
0xffff9141240c   140  str x16, [x1]
0xffff91412410   144  ldr x1, [x26, #120]
0xffff91412414   148  str x1, [x2]
0xffff91412418   152  orr x2, x2, #0x1
0xffff9141241c   156  stur d0, [x2, #7]
0xffff91412420   160  mov x0, x2
0xffff91412424   164  ret
0xffff91412428   168  sub csp, jssp, #0x10 (16)
0xffff9141242c   172  stp fp, lr, [jssp, #-16]!
0xffff91412430   176  movz fp, #0xa00000000
0xffff91412434   180  sub csp, jssp, #0x8 (8)
0xffff91412438   184  str fp, [jssp, #-8]!
0xffff9141243c   188  add fp, jssp, #0x8 (8)
0xffff91412440   192  movz x2, #0x0
0xffff91412444   196  mov x16, lr
0xffff91412448   200  ldr x17, pc+64 (addr 0x0000ffff91412488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9141244c   204  blr x17
0xffff91412450   208  ldur cp, [fp, #-8]
0xffff91412454   212  movz x0, #0x0
0xffff91412458   216  movz x1, #0x4b48
0xffff9141245c   220  movk x1, #0xe4, lsl #16
0xffff91412460   224  ldr x16, pc+48 (addr 0x0000ffff91412490)    ;; code: STUB, CEntryStub, minor: 5
0xffff91412464   228  blr x16
0xffff91412468   232  str x0, [jssp, #16]
0xffff9141246c   236  ldr x16, pc+44 (addr 0x0000ffff91412498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91412470   240  blr x16
0xffff91412474   244  ldr lr, [jssp, #16]
0xffff91412478   248  ldp xzr, fp, [jssp], #24
0xffff9141247c   252  b #-0x60 (addr 0xffff9141241c)
0xffff91412480   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91412484   260  d63f03e0       constant
0xffff91412488   264  91406820       constant
0xffff9141248c   268  0000ffff       constant
0xffff91412490   272  91406260       constant
0xffff91412494   276  0000ffff       constant
0xffff91412498   280  914068e0       constant
0xffff9141249c   284  0000ffff       constant
0xffff914124a0   288  movz x16, #0x0
0xffff914124a4   292  sub csp, jssp, #0x10 (16)
0xffff914124a8   296  stp fp, lr, [jssp, #-16]!
0xffff914124ac   300  bl #+0x14 (addr 0xffff914124c0)
0xffff914124b0   304  movz x16, #0x8
0xffff914124b4   308  sub csp, jssp, #0x10 (16)
0xffff914124b8   312  stp fp, lr, [jssp, #-16]!
0xffff914124bc   316  bl #+0x4 (addr 0xffff914124c0)
0xffff914124c0   320  movz x17, #0xa00000000
0xffff914124c4   324  sub csp, jssp, #0x10 (16)
0xffff914124c8   328  stp x17, cp, [jssp, #-16]!
0xffff914124cc   332  add fp, jssp, #0x10 (16)
0xffff914124d0   336  ldr x17, pc+24 (addr 0x0000ffff914124e8)    ;; lazy deoptimization bailout 0
0xffff914124d4   340  add x17, x17, x16
0xffff914124d8   344  br x17
0xffff914124dc   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914124e0   352  d63f03e0       constant
0xffff914124e4   356  d503201f       constant
0xffff914124e8   360  91206000       constant
0xffff914124ec   364  0000ffff       constant


Safepoints (size = 21)
0xffff91412468   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91412448  code target (STUB)  (0xffff91406820)
0xffff91412460  code target (STUB)  (0xffff91406260)
0xffff9141246c  code target (STUB)  (0xffff914068e0)
0xffff91412480  constant pool (size 32)
0xffff914124d0  runtime entry
0xffff914124dc  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2490
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff91412580     0  mov x2, x0
0xffff91412584     4  tbnz w2, #0, #+0xf4 (addr 0xffff91412678)
0xffff91412588     8  tbz w1, #0, #+0x34 (addr 0xffff914125bc)
0xffff9141258c    12  ldur x16, [x1, #-1]
0xffff91412590    16  ldr x17, [x26, #120]
0xffff91412594    20  cmp x16, x17
0xffff91412598    24  b.ne #+0xc (addr 0xffff914125a4)
0xffff9141259c    28  ldur d0, [x1, #7]
0xffff914125a0    32  b #+0x20 (addr 0xffff914125c0)
0xffff914125a4    36  ldr x16, [x26, #40]
0xffff914125a8    40  cmp x1, x16
0xffff914125ac    44  b.ne #+0xdc (addr 0xffff91412688)
0xffff914125b0    48  ldr x3, [x26, #928]
0xffff914125b4    52  ldur d0, [x3, #7]
0xffff914125b8    56  b #+0x8 (addr 0xffff914125c0)
0xffff914125bc    60  scvtf d0, x1, #32
0xffff914125c0    64  scvtf d1, x2, #32
0xffff914125c4    68  fdiv d0, d0, d1
0xffff914125c8    72  movz x1, #0xf2c0
0xffff914125cc    76  movk x1, #0x4117, lsl #16
0xffff914125d0    80  ldp x2, x0, [x1]
0xffff914125d4    84  adds x16, x2, #0x10 (16)
0xffff914125d8    88  ccmp x16, x0, #nzCv, lo
0xffff914125dc    92  b.hi #+0x20 (addr 0xffff914125fc)
0xffff914125e0    96  str x16, [x1]
0xffff914125e4   100  ldr x1, [x26, #120]
0xffff914125e8   104  str x1, [x2]
0xffff914125ec   108  orr x2, x2, #0x1
0xffff914125f0   112  stur d0, [x2, #7]
0xffff914125f4   116  mov x0, x2
0xffff914125f8   120  ret
0xffff914125fc   124  sub csp, jssp, #0x10 (16)
0xffff91412600   128  stp fp, lr, [jssp, #-16]!
0xffff91412604   132  movz fp, #0xa00000000
0xffff91412608   136  sub csp, jssp, #0x8 (8)
0xffff9141260c   140  str fp, [jssp, #-8]!
0xffff91412610   144  add fp, jssp, #0x8 (8)
0xffff91412614   148  movz x2, #0x0
0xffff91412618   152  mov x16, lr
0xffff9141261c   156  ldr x17, pc+68 (addr 0x0000ffff91412660)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91412620   160  blr x17
0xffff91412624   164  ldur cp, [fp, #-8]
0xffff91412628   168  movz x0, #0x0
0xffff9141262c   172  movz x1, #0x4b48
0xffff91412630   176  movk x1, #0xe4, lsl #16
0xffff91412634   180  ldr x16, pc+52 (addr 0x0000ffff91412668)    ;; code: STUB, CEntryStub, minor: 5
0xffff91412638   184  blr x16
0xffff9141263c   188  str x0, [jssp, #16]
0xffff91412640   192  ldr x16, pc+48 (addr 0x0000ffff91412670)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91412644   196  blr x16
0xffff91412648   200  ldr lr, [jssp, #16]
0xffff9141264c   204  ldp xzr, fp, [jssp], #24
0xffff91412650   208  b #-0x60 (addr 0xffff914125f0)
0xffff91412654   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91412658   216  d63f03e0       constant
0xffff9141265c   220  d503201f       constant
0xffff91412660   224  91406820       constant
0xffff91412664   228  0000ffff       constant
0xffff91412668   232  91406260       constant
0xffff9141266c   236  0000ffff       constant
0xffff91412670   240  914068e0       constant
0xffff91412674   244  0000ffff       constant
0xffff91412678   248  movz x16, #0x0
0xffff9141267c   252  sub csp, jssp, #0x10 (16)
0xffff91412680   256  stp fp, lr, [jssp, #-16]!
0xffff91412684   260  bl #+0x14 (addr 0xffff91412698)
0xffff91412688   264  movz x16, #0x8
0xffff9141268c   268  sub csp, jssp, #0x10 (16)
0xffff91412690   272  stp fp, lr, [jssp, #-16]!
0xffff91412694   276  bl #+0x4 (addr 0xffff91412698)
0xffff91412698   280  movz x17, #0xa00000000
0xffff9141269c   284  sub csp, jssp, #0x10 (16)
0xffff914126a0   288  stp x17, cp, [jssp, #-16]!
0xffff914126a4   292  add fp, jssp, #0x10 (16)
0xffff914126a8   296  ldr x17, pc+24 (addr 0x0000ffff914126c0)    ;; lazy deoptimization bailout 0
0xffff914126ac   300  add x17, x17, x16
0xffff914126b0   304  br x17
0xffff914126b4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914126b8   312  d63f03e0       constant
0xffff914126bc   316  d503201f       constant
0xffff914126c0   320  91206000       constant
0xffff914126c4   324  0000ffff       constant


Safepoints (size = 21)
0xffff9141263c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9141261c  code target (STUB)  (0xffff91406820)
0xffff91412634  code target (STUB)  (0xffff91406260)
0xffff91412640  code target (STUB)  (0xffff914068e0)
0xffff91412654  constant pool (size 36)
0xffff914126a8  runtime entry
0xffff914126b4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2490
type = NORMAL
name = BinaryOpICStub(DIV:Number*Smi->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff91412580     0  mov x2, x0
0xffff91412584     4  tbnz w2, #0, #+0xf4 (addr 0xffff91412678)
0xffff91412588     8  tbz w1, #0, #+0x34 (addr 0xffff914125bc)
0xffff9141258c    12  ldur x16, [x1, #-1]
0xffff91412590    16  ldr x17, [x26, #120]
0xffff91412594    20  cmp x16, x17
0xffff91412598    24  b.ne #+0xc (addr 0xffff914125a4)
0xffff9141259c    28  ldur d0, [x1, #7]
0xffff914125a0    32  b #+0x20 (addr 0xffff914125c0)
0xffff914125a4    36  ldr x16, [x26, #40]
0xffff914125a8    40  cmp x1, x16
0xffff914125ac    44  b.ne #+0xdc (addr 0xffff91412688)
0xffff914125b0    48  ldr x3, [x26, #928]
0xffff914125b4    52  ldur d0, [x3, #7]
0xffff914125b8    56  b #+0x8 (addr 0xffff914125c0)
0xffff914125bc    60  scvtf d0, x1, #32
0xffff914125c0    64  scvtf d1, x2, #32
0xffff914125c4    68  fdiv d0, d0, d1
0xffff914125c8    72  movz x1, #0xf2c0
0xffff914125cc    76  movk x1, #0x4117, lsl #16
0xffff914125d0    80  ldp x2, x0, [x1]
0xffff914125d4    84  adds x16, x2, #0x10 (16)
0xffff914125d8    88  ccmp x16, x0, #nzCv, lo
0xffff914125dc    92  b.hi #+0x20 (addr 0xffff914125fc)
0xffff914125e0    96  str x16, [x1]
0xffff914125e4   100  ldr x1, [x26, #120]
0xffff914125e8   104  str x1, [x2]
0xffff914125ec   108  orr x2, x2, #0x1
0xffff914125f0   112  stur d0, [x2, #7]
0xffff914125f4   116  mov x0, x2
0xffff914125f8   120  ret
0xffff914125fc   124  sub csp, jssp, #0x10 (16)
0xffff91412600   128  stp fp, lr, [jssp, #-16]!
0xffff91412604   132  movz fp, #0xa00000000
0xffff91412608   136  sub csp, jssp, #0x8 (8)
0xffff9141260c   140  str fp, [jssp, #-8]!
0xffff91412610   144  add fp, jssp, #0x8 (8)
0xffff91412614   148  movz x2, #0x0
0xffff91412618   152  mov x16, lr
0xffff9141261c   156  ldr x17, pc+68 (addr 0x0000ffff91412660)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91412620   160  blr x17
0xffff91412624   164  ldur cp, [fp, #-8]
0xffff91412628   168  movz x0, #0x0
0xffff9141262c   172  movz x1, #0x4b48
0xffff91412630   176  movk x1, #0xe4, lsl #16
0xffff91412634   180  ldr x16, pc+52 (addr 0x0000ffff91412668)    ;; code: STUB, CEntryStub, minor: 5
0xffff91412638   184  blr x16
0xffff9141263c   188  str x0, [jssp, #16]
0xffff91412640   192  ldr x16, pc+48 (addr 0x0000ffff91412670)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91412644   196  blr x16
0xffff91412648   200  ldr lr, [jssp, #16]
0xffff9141264c   204  ldp xzr, fp, [jssp], #24
0xffff91412650   208  b #-0x60 (addr 0xffff914125f0)
0xffff91412654   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91412658   216  d63f03e0       constant
0xffff9141265c   220  d503201f       constant
0xffff91412660   224  91406820       constant
0xffff91412664   228  0000ffff       constant
0xffff91412668   232  91406260       constant
0xffff9141266c   236  0000ffff       constant
0xffff91412670   240  914068e0       constant
0xffff91412674   244  0000ffff       constant
0xffff91412678   248  movz x16, #0x0
0xffff9141267c   252  sub csp, jssp, #0x10 (16)
0xffff91412680   256  stp fp, lr, [jssp, #-16]!
0xffff91412684   260  bl #+0x14 (addr 0xffff91412698)
0xffff91412688   264  movz x16, #0x8
0xffff9141268c   268  sub csp, jssp, #0x10 (16)
0xffff91412690   272  stp fp, lr, [jssp, #-16]!
0xffff91412694   276  bl #+0x4 (addr 0xffff91412698)
0xffff91412698   280  movz x17, #0xa00000000
0xffff9141269c   284  sub csp, jssp, #0x10 (16)
0xffff914126a0   288  stp x17, cp, [jssp, #-16]!
0xffff914126a4   292  add fp, jssp, #0x10 (16)
0xffff914126a8   296  ldr x17, pc+24 (addr 0x0000ffff914126c0)    ;; lazy deoptimization bailout 0
0xffff914126ac   300  add x17, x17, x16
0xffff914126b0   304  br x17
0xffff914126b4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914126b8   312  d63f03e0       constant
0xffff914126bc   316  d503201f       constant
0xffff914126c0   320  91206000       constant
0xffff914126c4   324  0000ffff       constant


Safepoints (size = 21)
0xffff9141263c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9141261c  code target (STUB)  (0xffff91406820)
0xffff91412634  code target (STUB)  (0xffff91406260)
0xffff91412640  code target (STUB)  (0xffff914068e0)
0xffff91412654  constant pool (size 36)
0xffff914126a8  runtime entry
0xffff914126b4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4266
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 176)
0xffff91412740     0  mov x2, x1
0xffff91412744     4  tbnz w2, #0, #+0x44 (addr 0xffff91412788)
0xffff91412748     8  mov x3, x0
0xffff9141274c    12  tbnz w3, #0, #+0x4c (addr 0xffff91412798)
0xffff91412750    16  asr x2, x2, #32
0xffff91412754    20  asr x3, x3, #32
0xffff91412758    24  sdiv w5, w2, w3
0xffff9141275c    28  cbz w3, #+0x4c (addr 0xffff914127a8)
0xffff91412760    32  cmp w3, #0x0 (0)
0xffff91412764    36  ccmp w2, #0, #nzcv, mi
0xffff91412768    40  b.eq #+0x40 (addr 0xffff914127a8)
0xffff9141276c    44  cmp w2, #0x1 (1)
0xffff91412770    48  ccmn w3, #1, #nzcv, vs
0xffff91412774    52  b.eq #+0x34 (addr 0xffff914127a8)
0xffff91412778    56  msub w4, w5, w3, w2
0xffff9141277c    60  cbnz w4, #+0x2c (addr 0xffff914127a8)
0xffff91412780    64  lsl x0, x5, #32
0xffff91412784    68  ret
0xffff91412788    72  movz x16, #0x0
0xffff9141278c    76  sub csp, jssp, #0x10 (16)
0xffff91412790    80  stp fp, lr, [jssp, #-16]!
0xffff91412794    84  bl #+0x24 (addr 0xffff914127b8)
0xffff91412798    88  movz x16, #0x8
0xffff9141279c    92  sub csp, jssp, #0x10 (16)
0xffff914127a0    96  stp fp, lr, [jssp, #-16]!
0xffff914127a4   100  bl #+0x14 (addr 0xffff914127b8)
0xffff914127a8   104  movz x16, #0x10
0xffff914127ac   108  sub csp, jssp, #0x10 (16)
0xffff914127b0   112  stp fp, lr, [jssp, #-16]!
0xffff914127b4   116  bl #+0x4 (addr 0xffff914127b8)
0xffff914127b8   120  movz x17, #0xa00000000
0xffff914127bc   124  sub csp, jssp, #0x10 (16)
0xffff914127c0   128  stp x17, cp, [jssp, #-16]!
0xffff914127c4   132  add fp, jssp, #0x10 (16)
0xffff914127c8   136  ldr x17, pc+24 (addr 0x0000ffff914127e0)    ;; lazy deoptimization bailout 0
0xffff914127cc   140  add x17, x17, x16
0xffff914127d0   144  br x17
0xffff914127d4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914127d8   152  d63f03e0       constant
0xffff914127dc   156  d503201f       constant
0xffff914127e0   160  91206000       constant
0xffff914127e4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914127c8  runtime entry
0xffff914127d4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4266
type = NORMAL
name = BinaryOpICStub(DIV:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 176)
0xffff91412740     0  mov x2, x1
0xffff91412744     4  tbnz w2, #0, #+0x44 (addr 0xffff91412788)
0xffff91412748     8  mov x3, x0
0xffff9141274c    12  tbnz w3, #0, #+0x4c (addr 0xffff91412798)
0xffff91412750    16  asr x2, x2, #32
0xffff91412754    20  asr x3, x3, #32
0xffff91412758    24  sdiv w5, w2, w3
0xffff9141275c    28  cbz w3, #+0x4c (addr 0xffff914127a8)
0xffff91412760    32  cmp w3, #0x0 (0)
0xffff91412764    36  ccmp w2, #0, #nzcv, mi
0xffff91412768    40  b.eq #+0x40 (addr 0xffff914127a8)
0xffff9141276c    44  cmp w2, #0x1 (1)
0xffff91412770    48  ccmn w3, #1, #nzcv, vs
0xffff91412774    52  b.eq #+0x34 (addr 0xffff914127a8)
0xffff91412778    56  msub w4, w5, w3, w2
0xffff9141277c    60  cbnz w4, #+0x2c (addr 0xffff914127a8)
0xffff91412780    64  lsl x0, x5, #32
0xffff91412784    68  ret
0xffff91412788    72  movz x16, #0x0
0xffff9141278c    76  sub csp, jssp, #0x10 (16)
0xffff91412790    80  stp fp, lr, [jssp, #-16]!
0xffff91412794    84  bl #+0x24 (addr 0xffff914127b8)
0xffff91412798    88  movz x16, #0x8
0xffff9141279c    92  sub csp, jssp, #0x10 (16)
0xffff914127a0    96  stp fp, lr, [jssp, #-16]!
0xffff914127a4   100  bl #+0x14 (addr 0xffff914127b8)
0xffff914127a8   104  movz x16, #0x10
0xffff914127ac   108  sub csp, jssp, #0x10 (16)
0xffff914127b0   112  stp fp, lr, [jssp, #-16]!
0xffff914127b4   116  bl #+0x4 (addr 0xffff914127b8)
0xffff914127b8   120  movz x17, #0xa00000000
0xffff914127bc   124  sub csp, jssp, #0x10 (16)
0xffff914127c0   128  stp x17, cp, [jssp, #-16]!
0xffff914127c4   132  add fp, jssp, #0x10 (16)
0xffff914127c8   136  ldr x17, pc+24 (addr 0x0000ffff914127e0)    ;; lazy deoptimization bailout 0
0xffff914127cc   140  add x17, x17, x16
0xffff914127d0   144  br x17
0xffff914127d4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914127d8   152  d63f03e0       constant
0xffff914127dc   156  d503201f       constant
0xffff914127e0   160  91206000       constant
0xffff914127e4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914127c8  runtime entry
0xffff914127d4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4282
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff91412860     0  mov x2, x1
0xffff91412864     4  tbnz w2, #0, #+0xc4 (addr 0xffff91412928)
0xffff91412868     8  mov x3, x0
0xffff9141286c    12  tbnz w3, #0, #+0xcc (addr 0xffff91412938)
0xffff91412870    16  scvtf d0, x2, #32
0xffff91412874    20  scvtf d1, x3, #32
0xffff91412878    24  fdiv d0, d0, d1
0xffff9141287c    28  movz x1, #0xf2c0
0xffff91412880    32  movk x1, #0x4117, lsl #16
0xffff91412884    36  ldp x2, x0, [x1]
0xffff91412888    40  adds x16, x2, #0x10 (16)
0xffff9141288c    44  ccmp x16, x0, #nzCv, lo
0xffff91412890    48  b.hi #+0x20 (addr 0xffff914128b0)
0xffff91412894    52  str x16, [x1]
0xffff91412898    56  ldr x1, [x26, #120]
0xffff9141289c    60  str x1, [x2]
0xffff914128a0    64  orr x2, x2, #0x1
0xffff914128a4    68  stur d0, [x2, #7]
0xffff914128a8    72  mov x0, x2
0xffff914128ac    76  ret
0xffff914128b0    80  sub csp, jssp, #0x10 (16)
0xffff914128b4    84  stp fp, lr, [jssp, #-16]!
0xffff914128b8    88  movz fp, #0xa00000000
0xffff914128bc    92  sub csp, jssp, #0x8 (8)
0xffff914128c0    96  str fp, [jssp, #-8]!
0xffff914128c4   100  add fp, jssp, #0x8 (8)
0xffff914128c8   104  movz x2, #0x0
0xffff914128cc   108  mov x16, lr
0xffff914128d0   112  ldr x17, pc+64 (addr 0x0000ffff91412910)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914128d4   116  blr x17
0xffff914128d8   120  ldur cp, [fp, #-8]
0xffff914128dc   124  movz x0, #0x0
0xffff914128e0   128  movz x1, #0x4b48
0xffff914128e4   132  movk x1, #0xe4, lsl #16
0xffff914128e8   136  ldr x16, pc+48 (addr 0x0000ffff91412918)    ;; code: STUB, CEntryStub, minor: 5
0xffff914128ec   140  blr x16
0xffff914128f0   144  str x0, [jssp, #16]
0xffff914128f4   148  ldr x16, pc+44 (addr 0x0000ffff91412920)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914128f8   152  blr x16
0xffff914128fc   156  ldr lr, [jssp, #16]
0xffff91412900   160  ldp xzr, fp, [jssp], #24
0xffff91412904   164  b #-0x60 (addr 0xffff914128a4)
0xffff91412908   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9141290c   172  d63f03e0       constant
0xffff91412910   176  91406820       constant
0xffff91412914   180  0000ffff       constant
0xffff91412918   184  91406260       constant
0xffff9141291c   188  0000ffff       constant
0xffff91412920   192  914068e0       constant
0xffff91412924   196  0000ffff       constant
0xffff91412928   200  movz x16, #0x0
0xffff9141292c   204  sub csp, jssp, #0x10 (16)
0xffff91412930   208  stp fp, lr, [jssp, #-16]!
0xffff91412934   212  bl #+0x14 (addr 0xffff91412948)
0xffff91412938   216  movz x16, #0x8
0xffff9141293c   220  sub csp, jssp, #0x10 (16)
0xffff91412940   224  stp fp, lr, [jssp, #-16]!
0xffff91412944   228  bl #+0x4 (addr 0xffff91412948)
0xffff91412948   232  movz x17, #0xa00000000
0xffff9141294c   236  sub csp, jssp, #0x10 (16)
0xffff91412950   240  stp x17, cp, [jssp, #-16]!
0xffff91412954   244  add fp, jssp, #0x10 (16)
0xffff91412958   248  ldr x17, pc+24 (addr 0x0000ffff91412970)    ;; lazy deoptimization bailout 0
0xffff9141295c   252  add x17, x17, x16
0xffff91412960   256  br x17
0xffff91412964   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91412968   264  d63f03e0       constant
0xffff9141296c   268  d503201f       constant
0xffff91412970   272  91206000       constant
0xffff91412974   276  0000ffff       constant


Safepoints (size = 21)
0xffff914128f0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff914128d0  code target (STUB)  (0xffff91406820)
0xffff914128e8  code target (STUB)  (0xffff91406260)
0xffff914128f4  code target (STUB)  (0xffff914068e0)
0xffff91412908  constant pool (size 32)
0xffff91412958  runtime entry
0xffff91412964  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4282
type = NORMAL
name = BinaryOpICStub(DIV:Smi*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff91412860     0  mov x2, x1
0xffff91412864     4  tbnz w2, #0, #+0xc4 (addr 0xffff91412928)
0xffff91412868     8  mov x3, x0
0xffff9141286c    12  tbnz w3, #0, #+0xcc (addr 0xffff91412938)
0xffff91412870    16  scvtf d0, x2, #32
0xffff91412874    20  scvtf d1, x3, #32
0xffff91412878    24  fdiv d0, d0, d1
0xffff9141287c    28  movz x1, #0xf2c0
0xffff91412880    32  movk x1, #0x4117, lsl #16
0xffff91412884    36  ldp x2, x0, [x1]
0xffff91412888    40  adds x16, x2, #0x10 (16)
0xffff9141288c    44  ccmp x16, x0, #nzCv, lo
0xffff91412890    48  b.hi #+0x20 (addr 0xffff914128b0)
0xffff91412894    52  str x16, [x1]
0xffff91412898    56  ldr x1, [x26, #120]
0xffff9141289c    60  str x1, [x2]
0xffff914128a0    64  orr x2, x2, #0x1
0xffff914128a4    68  stur d0, [x2, #7]
0xffff914128a8    72  mov x0, x2
0xffff914128ac    76  ret
0xffff914128b0    80  sub csp, jssp, #0x10 (16)
0xffff914128b4    84  stp fp, lr, [jssp, #-16]!
0xffff914128b8    88  movz fp, #0xa00000000
0xffff914128bc    92  sub csp, jssp, #0x8 (8)
0xffff914128c0    96  str fp, [jssp, #-8]!
0xffff914128c4   100  add fp, jssp, #0x8 (8)
0xffff914128c8   104  movz x2, #0x0
0xffff914128cc   108  mov x16, lr
0xffff914128d0   112  ldr x17, pc+64 (addr 0x0000ffff91412910)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914128d4   116  blr x17
0xffff914128d8   120  ldur cp, [fp, #-8]
0xffff914128dc   124  movz x0, #0x0
0xffff914128e0   128  movz x1, #0x4b48
0xffff914128e4   132  movk x1, #0xe4, lsl #16
0xffff914128e8   136  ldr x16, pc+48 (addr 0x0000ffff91412918)    ;; code: STUB, CEntryStub, minor: 5
0xffff914128ec   140  blr x16
0xffff914128f0   144  str x0, [jssp, #16]
0xffff914128f4   148  ldr x16, pc+44 (addr 0x0000ffff91412920)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914128f8   152  blr x16
0xffff914128fc   156  ldr lr, [jssp, #16]
0xffff91412900   160  ldp xzr, fp, [jssp], #24
0xffff91412904   164  b #-0x60 (addr 0xffff914128a4)
0xffff91412908   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9141290c   172  d63f03e0       constant
0xffff91412910   176  91406820       constant
0xffff91412914   180  0000ffff       constant
0xffff91412918   184  91406260       constant
0xffff9141291c   188  0000ffff       constant
0xffff91412920   192  914068e0       constant
0xffff91412924   196  0000ffff       constant
0xffff91412928   200  movz x16, #0x0
0xffff9141292c   204  sub csp, jssp, #0x10 (16)
0xffff91412930   208  stp fp, lr, [jssp, #-16]!
0xffff91412934   212  bl #+0x14 (addr 0xffff91412948)
0xffff91412938   216  movz x16, #0x8
0xffff9141293c   220  sub csp, jssp, #0x10 (16)
0xffff91412940   224  stp fp, lr, [jssp, #-16]!
0xffff91412944   228  bl #+0x4 (addr 0xffff91412948)
0xffff91412948   232  movz x17, #0xa00000000
0xffff9141294c   236  sub csp, jssp, #0x10 (16)
0xffff91412950   240  stp x17, cp, [jssp, #-16]!
0xffff91412954   244  add fp, jssp, #0x10 (16)
0xffff91412958   248  ldr x17, pc+24 (addr 0x0000ffff91412970)    ;; lazy deoptimization bailout 0
0xffff9141295c   252  add x17, x17, x16
0xffff91412960   256  br x17
0xffff91412964   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91412968   264  d63f03e0       constant
0xffff9141296c   268  d503201f       constant
0xffff91412970   272  91206000       constant
0xffff91412974   276  0000ffff       constant


Safepoints (size = 21)
0xffff914128f0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff914128d0  code target (STUB)  (0xffff91406820)
0xffff914128e8  code target (STUB)  (0xffff91406260)
0xffff914128f4  code target (STUB)  (0xffff914068e0)
0xffff91412908  constant pool (size 32)
0xffff91412958  runtime entry
0xffff91412964  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6330
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff91412a00     0  mov x2, x1
0xffff91412a04     4  tbnz w2, #0, #+0xf4 (addr 0xffff91412af8)
0xffff91412a08     8  tbz w0, #0, #+0x34 (addr 0xffff91412a3c)
0xffff91412a0c    12  ldur x16, [x0, #-1]
0xffff91412a10    16  ldr x17, [x26, #120]
0xffff91412a14    20  cmp x16, x17
0xffff91412a18    24  b.ne #+0xc (addr 0xffff91412a24)
0xffff91412a1c    28  ldur d0, [x0, #7]
0xffff91412a20    32  b #+0x20 (addr 0xffff91412a40)
0xffff91412a24    36  ldr x16, [x26, #40]
0xffff91412a28    40  cmp x0, x16
0xffff91412a2c    44  b.ne #+0xdc (addr 0xffff91412b08)
0xffff91412a30    48  ldr x3, [x26, #928]
0xffff91412a34    52  ldur d0, [x3, #7]
0xffff91412a38    56  b #+0x8 (addr 0xffff91412a40)
0xffff91412a3c    60  scvtf d0, x0, #32
0xffff91412a40    64  scvtf d1, x2, #32
0xffff91412a44    68  fdiv d0, d1, d0
0xffff91412a48    72  movz x1, #0xf2c0
0xffff91412a4c    76  movk x1, #0x4117, lsl #16
0xffff91412a50    80  ldp x2, x0, [x1]
0xffff91412a54    84  adds x16, x2, #0x10 (16)
0xffff91412a58    88  ccmp x16, x0, #nzCv, lo
0xffff91412a5c    92  b.hi #+0x20 (addr 0xffff91412a7c)
0xffff91412a60    96  str x16, [x1]
0xffff91412a64   100  ldr x1, [x26, #120]
0xffff91412a68   104  str x1, [x2]
0xffff91412a6c   108  orr x2, x2, #0x1
0xffff91412a70   112  stur d0, [x2, #7]
0xffff91412a74   116  mov x0, x2
0xffff91412a78   120  ret
0xffff91412a7c   124  sub csp, jssp, #0x10 (16)
0xffff91412a80   128  stp fp, lr, [jssp, #-16]!
0xffff91412a84   132  movz fp, #0xa00000000
0xffff91412a88   136  sub csp, jssp, #0x8 (8)
0xffff91412a8c   140  str fp, [jssp, #-8]!
0xffff91412a90   144  add fp, jssp, #0x8 (8)
0xffff91412a94   148  movz x2, #0x0
0xffff91412a98   152  mov x16, lr
0xffff91412a9c   156  ldr x17, pc+68 (addr 0x0000ffff91412ae0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91412aa0   160  blr x17
0xffff91412aa4   164  ldur cp, [fp, #-8]
0xffff91412aa8   168  movz x0, #0x0
0xffff91412aac   172  movz x1, #0x4b48
0xffff91412ab0   176  movk x1, #0xe4, lsl #16
0xffff91412ab4   180  ldr x16, pc+52 (addr 0x0000ffff91412ae8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91412ab8   184  blr x16
0xffff91412abc   188  str x0, [jssp, #16]
0xffff91412ac0   192  ldr x16, pc+48 (addr 0x0000ffff91412af0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91412ac4   196  blr x16
0xffff91412ac8   200  ldr lr, [jssp, #16]
0xffff91412acc   204  ldp xzr, fp, [jssp], #24
0xffff91412ad0   208  b #-0x60 (addr 0xffff91412a70)
0xffff91412ad4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91412ad8   216  d63f03e0       constant
0xffff91412adc   220  d503201f       constant
0xffff91412ae0   224  91406820       constant
0xffff91412ae4   228  0000ffff       constant
0xffff91412ae8   232  91406260       constant
0xffff91412aec   236  0000ffff       constant
0xffff91412af0   240  914068e0       constant
0xffff91412af4   244  0000ffff       constant
0xffff91412af8   248  movz x16, #0x0
0xffff91412afc   252  sub csp, jssp, #0x10 (16)
0xffff91412b00   256  stp fp, lr, [jssp, #-16]!
0xffff91412b04   260  bl #+0x14 (addr 0xffff91412b18)
0xffff91412b08   264  movz x16, #0x8
0xffff91412b0c   268  sub csp, jssp, #0x10 (16)
0xffff91412b10   272  stp fp, lr, [jssp, #-16]!
0xffff91412b14   276  bl #+0x4 (addr 0xffff91412b18)
0xffff91412b18   280  movz x17, #0xa00000000
0xffff91412b1c   284  sub csp, jssp, #0x10 (16)
0xffff91412b20   288  stp x17, cp, [jssp, #-16]!
0xffff91412b24   292  add fp, jssp, #0x10 (16)
0xffff91412b28   296  ldr x17, pc+24 (addr 0x0000ffff91412b40)    ;; lazy deoptimization bailout 0
0xffff91412b2c   300  add x17, x17, x16
0xffff91412b30   304  br x17
0xffff91412b34   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91412b38   312  d63f03e0       constant
0xffff91412b3c   316  d503201f       constant
0xffff91412b40   320  91206000       constant
0xffff91412b44   324  0000ffff       constant


Safepoints (size = 21)
0xffff91412abc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91412a9c  code target (STUB)  (0xffff91406820)
0xffff91412ab4  code target (STUB)  (0xffff91406260)
0xffff91412ac0  code target (STUB)  (0xffff914068e0)
0xffff91412ad4  constant pool (size 36)
0xffff91412b28  runtime entry
0xffff91412b34  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6330
type = NORMAL
name = BinaryOpICStub(DIV:Smi*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff91412a00     0  mov x2, x1
0xffff91412a04     4  tbnz w2, #0, #+0xf4 (addr 0xffff91412af8)
0xffff91412a08     8  tbz w0, #0, #+0x34 (addr 0xffff91412a3c)
0xffff91412a0c    12  ldur x16, [x0, #-1]
0xffff91412a10    16  ldr x17, [x26, #120]
0xffff91412a14    20  cmp x16, x17
0xffff91412a18    24  b.ne #+0xc (addr 0xffff91412a24)
0xffff91412a1c    28  ldur d0, [x0, #7]
0xffff91412a20    32  b #+0x20 (addr 0xffff91412a40)
0xffff91412a24    36  ldr x16, [x26, #40]
0xffff91412a28    40  cmp x0, x16
0xffff91412a2c    44  b.ne #+0xdc (addr 0xffff91412b08)
0xffff91412a30    48  ldr x3, [x26, #928]
0xffff91412a34    52  ldur d0, [x3, #7]
0xffff91412a38    56  b #+0x8 (addr 0xffff91412a40)
0xffff91412a3c    60  scvtf d0, x0, #32
0xffff91412a40    64  scvtf d1, x2, #32
0xffff91412a44    68  fdiv d0, d1, d0
0xffff91412a48    72  movz x1, #0xf2c0
0xffff91412a4c    76  movk x1, #0x4117, lsl #16
0xffff91412a50    80  ldp x2, x0, [x1]
0xffff91412a54    84  adds x16, x2, #0x10 (16)
0xffff91412a58    88  ccmp x16, x0, #nzCv, lo
0xffff91412a5c    92  b.hi #+0x20 (addr 0xffff91412a7c)
0xffff91412a60    96  str x16, [x1]
0xffff91412a64   100  ldr x1, [x26, #120]
0xffff91412a68   104  str x1, [x2]
0xffff91412a6c   108  orr x2, x2, #0x1
0xffff91412a70   112  stur d0, [x2, #7]
0xffff91412a74   116  mov x0, x2
0xffff91412a78   120  ret
0xffff91412a7c   124  sub csp, jssp, #0x10 (16)
0xffff91412a80   128  stp fp, lr, [jssp, #-16]!
0xffff91412a84   132  movz fp, #0xa00000000
0xffff91412a88   136  sub csp, jssp, #0x8 (8)
0xffff91412a8c   140  str fp, [jssp, #-8]!
0xffff91412a90   144  add fp, jssp, #0x8 (8)
0xffff91412a94   148  movz x2, #0x0
0xffff91412a98   152  mov x16, lr
0xffff91412a9c   156  ldr x17, pc+68 (addr 0x0000ffff91412ae0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91412aa0   160  blr x17
0xffff91412aa4   164  ldur cp, [fp, #-8]
0xffff91412aa8   168  movz x0, #0x0
0xffff91412aac   172  movz x1, #0x4b48
0xffff91412ab0   176  movk x1, #0xe4, lsl #16
0xffff91412ab4   180  ldr x16, pc+52 (addr 0x0000ffff91412ae8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91412ab8   184  blr x16
0xffff91412abc   188  str x0, [jssp, #16]
0xffff91412ac0   192  ldr x16, pc+48 (addr 0x0000ffff91412af0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91412ac4   196  blr x16
0xffff91412ac8   200  ldr lr, [jssp, #16]
0xffff91412acc   204  ldp xzr, fp, [jssp], #24
0xffff91412ad0   208  b #-0x60 (addr 0xffff91412a70)
0xffff91412ad4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91412ad8   216  d63f03e0       constant
0xffff91412adc   220  d503201f       constant
0xffff91412ae0   224  91406820       constant
0xffff91412ae4   228  0000ffff       constant
0xffff91412ae8   232  91406260       constant
0xffff91412aec   236  0000ffff       constant
0xffff91412af0   240  914068e0       constant
0xffff91412af4   244  0000ffff       constant
0xffff91412af8   248  movz x16, #0x0
0xffff91412afc   252  sub csp, jssp, #0x10 (16)
0xffff91412b00   256  stp fp, lr, [jssp, #-16]!
0xffff91412b04   260  bl #+0x14 (addr 0xffff91412b18)
0xffff91412b08   264  movz x16, #0x8
0xffff91412b0c   268  sub csp, jssp, #0x10 (16)
0xffff91412b10   272  stp fp, lr, [jssp, #-16]!
0xffff91412b14   276  bl #+0x4 (addr 0xffff91412b18)
0xffff91412b18   280  movz x17, #0xa00000000
0xffff91412b1c   284  sub csp, jssp, #0x10 (16)
0xffff91412b20   288  stp x17, cp, [jssp, #-16]!
0xffff91412b24   292  add fp, jssp, #0x10 (16)
0xffff91412b28   296  ldr x17, pc+24 (addr 0x0000ffff91412b40)    ;; lazy deoptimization bailout 0
0xffff91412b2c   300  add x17, x17, x16
0xffff91412b30   304  br x17
0xffff91412b34   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91412b38   312  d63f03e0       constant
0xffff91412b3c   316  d503201f       constant
0xffff91412b40   320  91206000       constant
0xffff91412b44   324  0000ffff       constant


Safepoints (size = 21)
0xffff91412abc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91412a9c  code target (STUB)  (0xffff91406820)
0xffff91412ab4  code target (STUB)  (0xffff91406260)
0xffff91412ac0  code target (STUB)  (0xffff914068e0)
0xffff91412ad4  constant pool (size 36)
0xffff91412b28  runtime entry
0xffff91412b34  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2234
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff91412bc0     0  mov x2, x1
0xffff91412bc4     4  tbnz w2, #0, #+0xc4 (addr 0xffff91412c88)
0xffff91412bc8     8  mov x3, x0
0xffff91412bcc    12  tbnz w3, #0, #+0xcc (addr 0xffff91412c98)
0xffff91412bd0    16  scvtf d0, x2, #32
0xffff91412bd4    20  scvtf d1, x3, #32
0xffff91412bd8    24  fdiv d0, d0, d1
0xffff91412bdc    28  movz x1, #0xf2c0
0xffff91412be0    32  movk x1, #0x4117, lsl #16
0xffff91412be4    36  ldp x2, x0, [x1]
0xffff91412be8    40  adds x16, x2, #0x10 (16)
0xffff91412bec    44  ccmp x16, x0, #nzCv, lo
0xffff91412bf0    48  b.hi #+0x20 (addr 0xffff91412c10)
0xffff91412bf4    52  str x16, [x1]
0xffff91412bf8    56  ldr x1, [x26, #120]
0xffff91412bfc    60  str x1, [x2]
0xffff91412c00    64  orr x2, x2, #0x1
0xffff91412c04    68  stur d0, [x2, #7]
0xffff91412c08    72  mov x0, x2
0xffff91412c0c    76  ret
0xffff91412c10    80  sub csp, jssp, #0x10 (16)
0xffff91412c14    84  stp fp, lr, [jssp, #-16]!
0xffff91412c18    88  movz fp, #0xa00000000
0xffff91412c1c    92  sub csp, jssp, #0x8 (8)
0xffff91412c20    96  str fp, [jssp, #-8]!
0xffff91412c24   100  add fp, jssp, #0x8 (8)
0xffff91412c28   104  movz x2, #0x0
0xffff91412c2c   108  mov x16, lr
0xffff91412c30   112  ldr x17, pc+64 (addr 0x0000ffff91412c70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91412c34   116  blr x17
0xffff91412c38   120  ldur cp, [fp, #-8]
0xffff91412c3c   124  movz x0, #0x0
0xffff91412c40   128  movz x1, #0x4b48
0xffff91412c44   132  movk x1, #0xe4, lsl #16
0xffff91412c48   136  ldr x16, pc+48 (addr 0x0000ffff91412c78)    ;; code: STUB, CEntryStub, minor: 5
0xffff91412c4c   140  blr x16
0xffff91412c50   144  str x0, [jssp, #16]
0xffff91412c54   148  ldr x16, pc+44 (addr 0x0000ffff91412c80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91412c58   152  blr x16
0xffff91412c5c   156  ldr lr, [jssp, #16]
0xffff91412c60   160  ldp xzr, fp, [jssp], #24
0xffff91412c64   164  b #-0x60 (addr 0xffff91412c04)
0xffff91412c68   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91412c6c   172  d63f03e0       constant
0xffff91412c70   176  91406820       constant
0xffff91412c74   180  0000ffff       constant
0xffff91412c78   184  91406260       constant
0xffff91412c7c   188  0000ffff       constant
0xffff91412c80   192  914068e0       constant
0xffff91412c84   196  0000ffff       constant
0xffff91412c88   200  movz x16, #0x0
0xffff91412c8c   204  sub csp, jssp, #0x10 (16)
0xffff91412c90   208  stp fp, lr, [jssp, #-16]!
0xffff91412c94   212  bl #+0x14 (addr 0xffff91412ca8)
0xffff91412c98   216  movz x16, #0x8
0xffff91412c9c   220  sub csp, jssp, #0x10 (16)
0xffff91412ca0   224  stp fp, lr, [jssp, #-16]!
0xffff91412ca4   228  bl #+0x4 (addr 0xffff91412ca8)
0xffff91412ca8   232  movz x17, #0xa00000000
0xffff91412cac   236  sub csp, jssp, #0x10 (16)
0xffff91412cb0   240  stp x17, cp, [jssp, #-16]!
0xffff91412cb4   244  add fp, jssp, #0x10 (16)
0xffff91412cb8   248  ldr x17, pc+24 (addr 0x0000ffff91412cd0)    ;; lazy deoptimization bailout 0
0xffff91412cbc   252  add x17, x17, x16
0xffff91412cc0   256  br x17
0xffff91412cc4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91412cc8   264  d63f03e0       constant
0xffff91412ccc   268  d503201f       constant
0xffff91412cd0   272  91206000       constant
0xffff91412cd4   276  0000ffff       constant


Safepoints (size = 21)
0xffff91412c50   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91412c30  code target (STUB)  (0xffff91406820)
0xffff91412c48  code target (STUB)  (0xffff91406260)
0xffff91412c54  code target (STUB)  (0xffff914068e0)
0xffff91412c68  constant pool (size 32)
0xffff91412cb8  runtime entry
0xffff91412cc4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2234
type = NORMAL
name = BinaryOpICStub(DIV:Smi*Smi->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff91412bc0     0  mov x2, x1
0xffff91412bc4     4  tbnz w2, #0, #+0xc4 (addr 0xffff91412c88)
0xffff91412bc8     8  mov x3, x0
0xffff91412bcc    12  tbnz w3, #0, #+0xcc (addr 0xffff91412c98)
0xffff91412bd0    16  scvtf d0, x2, #32
0xffff91412bd4    20  scvtf d1, x3, #32
0xffff91412bd8    24  fdiv d0, d0, d1
0xffff91412bdc    28  movz x1, #0xf2c0
0xffff91412be0    32  movk x1, #0x4117, lsl #16
0xffff91412be4    36  ldp x2, x0, [x1]
0xffff91412be8    40  adds x16, x2, #0x10 (16)
0xffff91412bec    44  ccmp x16, x0, #nzCv, lo
0xffff91412bf0    48  b.hi #+0x20 (addr 0xffff91412c10)
0xffff91412bf4    52  str x16, [x1]
0xffff91412bf8    56  ldr x1, [x26, #120]
0xffff91412bfc    60  str x1, [x2]
0xffff91412c00    64  orr x2, x2, #0x1
0xffff91412c04    68  stur d0, [x2, #7]
0xffff91412c08    72  mov x0, x2
0xffff91412c0c    76  ret
0xffff91412c10    80  sub csp, jssp, #0x10 (16)
0xffff91412c14    84  stp fp, lr, [jssp, #-16]!
0xffff91412c18    88  movz fp, #0xa00000000
0xffff91412c1c    92  sub csp, jssp, #0x8 (8)
0xffff91412c20    96  str fp, [jssp, #-8]!
0xffff91412c24   100  add fp, jssp, #0x8 (8)
0xffff91412c28   104  movz x2, #0x0
0xffff91412c2c   108  mov x16, lr
0xffff91412c30   112  ldr x17, pc+64 (addr 0x0000ffff91412c70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91412c34   116  blr x17
0xffff91412c38   120  ldur cp, [fp, #-8]
0xffff91412c3c   124  movz x0, #0x0
0xffff91412c40   128  movz x1, #0x4b48
0xffff91412c44   132  movk x1, #0xe4, lsl #16
0xffff91412c48   136  ldr x16, pc+48 (addr 0x0000ffff91412c78)    ;; code: STUB, CEntryStub, minor: 5
0xffff91412c4c   140  blr x16
0xffff91412c50   144  str x0, [jssp, #16]
0xffff91412c54   148  ldr x16, pc+44 (addr 0x0000ffff91412c80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91412c58   152  blr x16
0xffff91412c5c   156  ldr lr, [jssp, #16]
0xffff91412c60   160  ldp xzr, fp, [jssp], #24
0xffff91412c64   164  b #-0x60 (addr 0xffff91412c04)
0xffff91412c68   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91412c6c   172  d63f03e0       constant
0xffff91412c70   176  91406820       constant
0xffff91412c74   180  0000ffff       constant
0xffff91412c78   184  91406260       constant
0xffff91412c7c   188  0000ffff       constant
0xffff91412c80   192  914068e0       constant
0xffff91412c84   196  0000ffff       constant
0xffff91412c88   200  movz x16, #0x0
0xffff91412c8c   204  sub csp, jssp, #0x10 (16)
0xffff91412c90   208  stp fp, lr, [jssp, #-16]!
0xffff91412c94   212  bl #+0x14 (addr 0xffff91412ca8)
0xffff91412c98   216  movz x16, #0x8
0xffff91412c9c   220  sub csp, jssp, #0x10 (16)
0xffff91412ca0   224  stp fp, lr, [jssp, #-16]!
0xffff91412ca4   228  bl #+0x4 (addr 0xffff91412ca8)
0xffff91412ca8   232  movz x17, #0xa00000000
0xffff91412cac   236  sub csp, jssp, #0x10 (16)
0xffff91412cb0   240  stp x17, cp, [jssp, #-16]!
0xffff91412cb4   244  add fp, jssp, #0x10 (16)
0xffff91412cb8   248  ldr x17, pc+24 (addr 0x0000ffff91412cd0)    ;; lazy deoptimization bailout 0
0xffff91412cbc   252  add x17, x17, x16
0xffff91412cc0   256  br x17
0xffff91412cc4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91412cc8   264  d63f03e0       constant
0xffff91412ccc   268  d503201f       constant
0xffff91412cd0   272  91206000       constant
0xffff91412cd4   276  0000ffff       constant


Safepoints (size = 21)
0xffff91412c50   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91412c30  code target (STUB)  (0xffff91406820)
0xffff91412c48  code target (STUB)  (0xffff91406260)
0xffff91412c54  code target (STUB)  (0xffff914068e0)
0xffff91412c68  constant pool (size 32)
0xffff91412cb8  runtime entry
0xffff91412cc4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2202
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 176)
0xffff91412d60     0  mov x2, x1
0xffff91412d64     4  tbnz w2, #0, #+0x44 (addr 0xffff91412da8)
0xffff91412d68     8  mov x3, x0
0xffff91412d6c    12  tbnz w3, #0, #+0x4c (addr 0xffff91412db8)
0xffff91412d70    16  asr x2, x2, #32
0xffff91412d74    20  asr x3, x3, #32
0xffff91412d78    24  sdiv w5, w2, w3
0xffff91412d7c    28  cbz w3, #+0x4c (addr 0xffff91412dc8)
0xffff91412d80    32  cmp w3, #0x0 (0)
0xffff91412d84    36  ccmp w2, #0, #nzcv, mi
0xffff91412d88    40  b.eq #+0x40 (addr 0xffff91412dc8)
0xffff91412d8c    44  cmp w2, #0x1 (1)
0xffff91412d90    48  ccmn w3, #1, #nzcv, vs
0xffff91412d94    52  b.eq #+0x34 (addr 0xffff91412dc8)
0xffff91412d98    56  msub w4, w5, w3, w2
0xffff91412d9c    60  cbnz w4, #+0x2c (addr 0xffff91412dc8)
0xffff91412da0    64  lsl x0, x5, #32
0xffff91412da4    68  ret
0xffff91412da8    72  movz x16, #0x0
0xffff91412dac    76  sub csp, jssp, #0x10 (16)
0xffff91412db0    80  stp fp, lr, [jssp, #-16]!
0xffff91412db4    84  bl #+0x24 (addr 0xffff91412dd8)
0xffff91412db8    88  movz x16, #0x8
0xffff91412dbc    92  sub csp, jssp, #0x10 (16)
0xffff91412dc0    96  stp fp, lr, [jssp, #-16]!
0xffff91412dc4   100  bl #+0x14 (addr 0xffff91412dd8)
0xffff91412dc8   104  movz x16, #0x10
0xffff91412dcc   108  sub csp, jssp, #0x10 (16)
0xffff91412dd0   112  stp fp, lr, [jssp, #-16]!
0xffff91412dd4   116  bl #+0x4 (addr 0xffff91412dd8)
0xffff91412dd8   120  movz x17, #0xa00000000
0xffff91412ddc   124  sub csp, jssp, #0x10 (16)
0xffff91412de0   128  stp x17, cp, [jssp, #-16]!
0xffff91412de4   132  add fp, jssp, #0x10 (16)
0xffff91412de8   136  ldr x17, pc+24 (addr 0x0000ffff91412e00)    ;; lazy deoptimization bailout 0
0xffff91412dec   140  add x17, x17, x16
0xffff91412df0   144  br x17
0xffff91412df4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91412df8   152  d63f03e0       constant
0xffff91412dfc   156  d503201f       constant
0xffff91412e00   160  91206000       constant
0xffff91412e04   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91412de8  runtime entry
0xffff91412df4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2202
type = NORMAL
name = BinaryOpICStub(DIV:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 176)
0xffff91412d60     0  mov x2, x1
0xffff91412d64     4  tbnz w2, #0, #+0x44 (addr 0xffff91412da8)
0xffff91412d68     8  mov x3, x0
0xffff91412d6c    12  tbnz w3, #0, #+0x4c (addr 0xffff91412db8)
0xffff91412d70    16  asr x2, x2, #32
0xffff91412d74    20  asr x3, x3, #32
0xffff91412d78    24  sdiv w5, w2, w3
0xffff91412d7c    28  cbz w3, #+0x4c (addr 0xffff91412dc8)
0xffff91412d80    32  cmp w3, #0x0 (0)
0xffff91412d84    36  ccmp w2, #0, #nzcv, mi
0xffff91412d88    40  b.eq #+0x40 (addr 0xffff91412dc8)
0xffff91412d8c    44  cmp w2, #0x1 (1)
0xffff91412d90    48  ccmn w3, #1, #nzcv, vs
0xffff91412d94    52  b.eq #+0x34 (addr 0xffff91412dc8)
0xffff91412d98    56  msub w4, w5, w3, w2
0xffff91412d9c    60  cbnz w4, #+0x2c (addr 0xffff91412dc8)
0xffff91412da0    64  lsl x0, x5, #32
0xffff91412da4    68  ret
0xffff91412da8    72  movz x16, #0x0
0xffff91412dac    76  sub csp, jssp, #0x10 (16)
0xffff91412db0    80  stp fp, lr, [jssp, #-16]!
0xffff91412db4    84  bl #+0x24 (addr 0xffff91412dd8)
0xffff91412db8    88  movz x16, #0x8
0xffff91412dbc    92  sub csp, jssp, #0x10 (16)
0xffff91412dc0    96  stp fp, lr, [jssp, #-16]!
0xffff91412dc4   100  bl #+0x14 (addr 0xffff91412dd8)
0xffff91412dc8   104  movz x16, #0x10
0xffff91412dcc   108  sub csp, jssp, #0x10 (16)
0xffff91412dd0   112  stp fp, lr, [jssp, #-16]!
0xffff91412dd4   116  bl #+0x4 (addr 0xffff91412dd8)
0xffff91412dd8   120  movz x17, #0xa00000000
0xffff91412ddc   124  sub csp, jssp, #0x10 (16)
0xffff91412de0   128  stp x17, cp, [jssp, #-16]!
0xffff91412de4   132  add fp, jssp, #0x10 (16)
0xffff91412de8   136  ldr x17, pc+24 (addr 0x0000ffff91412e00)    ;; lazy deoptimization bailout 0
0xffff91412dec   140  add x17, x17, x16
0xffff91412df0   144  br x17
0xffff91412df4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91412df8   152  d63f03e0       constant
0xffff91412dfc   156  d503201f       constant
0xffff91412e00   160  91206000       constant
0xffff91412e04   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91412de8  runtime entry
0xffff91412df4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2491
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff91412e80     0  movz x16, #0xa00000000
0xffff91412e84     4  sub csp, jssp, #0x10 (16)
0xffff91412e88     8  stp fp, lr, [jssp, #-16]!
0xffff91412e8c    12  mov fp, jssp
0xffff91412e90    16  sub csp, jssp, #0x20 (32)
0xffff91412e94    20  sub jssp, jssp, #0x20 (32)
0xffff91412e98    24  stur x16, [fp, #-8]
0xffff91412e9c    28  str x1, [jssp, #16]
0xffff91412ea0    32  str x0, [jssp, #8]
0xffff91412ea4    36  str cp, [jssp]
0xffff91412ea8    40  mov x3, cp
0xffff91412eac    44  mov x2, x0
0xffff91412eb0    48  tbnz w2, #0, #+0xe8 (addr 0xffff91412f98)
0xffff91412eb4    52  tbz w1, #0, #+0x34 (addr 0xffff91412ee8)
0xffff91412eb8    56  ldur x16, [x1, #-1]
0xffff91412ebc    60  ldr x17, [x26, #120]
0xffff91412ec0    64  cmp x16, x17
0xffff91412ec4    68  b.ne #+0xc (addr 0xffff91412ed0)
0xffff91412ec8    72  ldur d0, [x1, #7]
0xffff91412ecc    76  b #+0x20 (addr 0xffff91412eec)
0xffff91412ed0    80  ldr x16, [x26, #40]
0xffff91412ed4    84  cmp x1, x16
0xffff91412ed8    88  b.ne #+0xc8 (addr 0xffff91412fa0)
0xffff91412edc    92  ldr x4, [x26, #928]
0xffff91412ee0    96  ldur d0, [x4, #7]
0xffff91412ee4   100  b #+0x8 (addr 0xffff91412eec)
0xffff91412ee8   104  scvtf d0, x1, #32
0xffff91412eec   108  scvtf d1, x2, #32
0xffff91412ef0   112  movz x16, #0x4c40
0xffff91412ef4   116  movk x16, #0x9c, lsl #16
0xffff91412ef8   120  and csp, jssp, #0xfffffffffffffff0
0xffff91412efc   124  blr x16
0xffff91412f00   128  movz x1, #0xf2c0
0xffff91412f04   132  movk x1, #0x4117, lsl #16
0xffff91412f08   136  ldp x2, x0, [x1]
0xffff91412f0c   140  adds x16, x2, #0x10 (16)
0xffff91412f10   144  ccmp x16, x0, #nzCv, lo
0xffff91412f14   148  b.hi #+0x2c (addr 0xffff91412f40)
0xffff91412f18   152  str x16, [x1]
0xffff91412f1c   156  ldr x1, [x26, #120]
0xffff91412f20   160  str x1, [x2]
0xffff91412f24   164  orr x2, x2, #0x1
0xffff91412f28   168  stur d0, [x2, #7]
0xffff91412f2c   172  mov x0, x2
0xffff91412f30   176  ldr cp, [jssp]
0xffff91412f34   180  mov jssp, fp
0xffff91412f38   184  ldp fp, lr, [jssp], #16
0xffff91412f3c   188  ret
0xffff91412f40   192  movz x2, #0x0
0xffff91412f44   196  mov x16, lr
0xffff91412f48   200  ldr x17, pc+56 (addr 0x0000ffff91412f80)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91412f4c   204  blr x17
0xffff91412f50   208  ldur cp, [fp, #-8]
0xffff91412f54   212  movz x0, #0x0
0xffff91412f58   216  movz x1, #0x4b48
0xffff91412f5c   220  movk x1, #0xe4, lsl #16
0xffff91412f60   224  ldr x16, pc+40 (addr 0x0000ffff91412f88)    ;; code: STUB, CEntryStub, minor: 5
0xffff91412f64   228  blr x16
0xffff91412f68   232  str x0, [jssp, #16]
0xffff91412f6c   236  ldr x16, pc+36 (addr 0x0000ffff91412f90)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91412f70   240  blr x16
0xffff91412f74   244  b #-0x4c (addr 0xffff91412f28)
0xffff91412f78   248  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91412f7c   252  d63f03e0       constant
0xffff91412f80   256  91406820       constant
0xffff91412f84   260  0000ffff       constant
0xffff91412f88   264  91406260       constant
0xffff91412f8c   268  0000ffff       constant
0xffff91412f90   272  914068e0       constant
0xffff91412f94   276  0000ffff       constant
0xffff91412f98   280  movz x16, #0x0
0xffff91412f9c   284  bl #+0xc (addr 0xffff91412fa8)
0xffff91412fa0   288  movz x16, #0x8
0xffff91412fa4   292  bl #+0x4 (addr 0xffff91412fa8)
0xffff91412fa8   296  ldr x17, pc+24 (addr 0x0000ffff91412fc0)    ;; lazy deoptimization bailout 0
0xffff91412fac   300  add x17, x17, x16
0xffff91412fb0   304  br x17
0xffff91412fb4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91412fb8   312  d63f03e0       constant
0xffff91412fbc   316  d503201f       constant
0xffff91412fc0   320  91206000       constant
0xffff91412fc4   324  0000ffff       constant


Safepoints (size = 21)
0xffff91412f68   232  100000 | x2 (sp -> fp)  <none>

RelocInfo (size = 19)
0xffff91412f48  code target (STUB)  (0xffff91406820)
0xffff91412f60  code target (STUB)  (0xffff91406260)
0xffff91412f6c  code target (STUB)  (0xffff914068e0)
0xffff91412f78  constant pool (size 32)
0xffff91412fa8  runtime entry
0xffff91412fb4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2491
type = NORMAL
name = BinaryOpICStub(MOD:Number*Smi->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff91412e80     0  movz x16, #0xa00000000
0xffff91412e84     4  sub csp, jssp, #0x10 (16)
0xffff91412e88     8  stp fp, lr, [jssp, #-16]!
0xffff91412e8c    12  mov fp, jssp
0xffff91412e90    16  sub csp, jssp, #0x20 (32)
0xffff91412e94    20  sub jssp, jssp, #0x20 (32)
0xffff91412e98    24  stur x16, [fp, #-8]
0xffff91412e9c    28  str x1, [jssp, #16]
0xffff91412ea0    32  str x0, [jssp, #8]
0xffff91412ea4    36  str cp, [jssp]
0xffff91412ea8    40  mov x3, cp
0xffff91412eac    44  mov x2, x0
0xffff91412eb0    48  tbnz w2, #0, #+0xe8 (addr 0xffff91412f98)
0xffff91412eb4    52  tbz w1, #0, #+0x34 (addr 0xffff91412ee8)
0xffff91412eb8    56  ldur x16, [x1, #-1]
0xffff91412ebc    60  ldr x17, [x26, #120]
0xffff91412ec0    64  cmp x16, x17
0xffff91412ec4    68  b.ne #+0xc (addr 0xffff91412ed0)
0xffff91412ec8    72  ldur d0, [x1, #7]
0xffff91412ecc    76  b #+0x20 (addr 0xffff91412eec)
0xffff91412ed0    80  ldr x16, [x26, #40]
0xffff91412ed4    84  cmp x1, x16
0xffff91412ed8    88  b.ne #+0xc8 (addr 0xffff91412fa0)
0xffff91412edc    92  ldr x4, [x26, #928]
0xffff91412ee0    96  ldur d0, [x4, #7]
0xffff91412ee4   100  b #+0x8 (addr 0xffff91412eec)
0xffff91412ee8   104  scvtf d0, x1, #32
0xffff91412eec   108  scvtf d1, x2, #32
0xffff91412ef0   112  movz x16, #0x4c40
0xffff91412ef4   116  movk x16, #0x9c, lsl #16
0xffff91412ef8   120  and csp, jssp, #0xfffffffffffffff0
0xffff91412efc   124  blr x16
0xffff91412f00   128  movz x1, #0xf2c0
0xffff91412f04   132  movk x1, #0x4117, lsl #16
0xffff91412f08   136  ldp x2, x0, [x1]
0xffff91412f0c   140  adds x16, x2, #0x10 (16)
0xffff91412f10   144  ccmp x16, x0, #nzCv, lo
0xffff91412f14   148  b.hi #+0x2c (addr 0xffff91412f40)
0xffff91412f18   152  str x16, [x1]
0xffff91412f1c   156  ldr x1, [x26, #120]
0xffff91412f20   160  str x1, [x2]
0xffff91412f24   164  orr x2, x2, #0x1
0xffff91412f28   168  stur d0, [x2, #7]
0xffff91412f2c   172  mov x0, x2
0xffff91412f30   176  ldr cp, [jssp]
0xffff91412f34   180  mov jssp, fp
0xffff91412f38   184  ldp fp, lr, [jssp], #16
0xffff91412f3c   188  ret
0xffff91412f40   192  movz x2, #0x0
0xffff91412f44   196  mov x16, lr
0xffff91412f48   200  ldr x17, pc+56 (addr 0x0000ffff91412f80)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91412f4c   204  blr x17
0xffff91412f50   208  ldur cp, [fp, #-8]
0xffff91412f54   212  movz x0, #0x0
0xffff91412f58   216  movz x1, #0x4b48
0xffff91412f5c   220  movk x1, #0xe4, lsl #16
0xffff91412f60   224  ldr x16, pc+40 (addr 0x0000ffff91412f88)    ;; code: STUB, CEntryStub, minor: 5
0xffff91412f64   228  blr x16
0xffff91412f68   232  str x0, [jssp, #16]
0xffff91412f6c   236  ldr x16, pc+36 (addr 0x0000ffff91412f90)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91412f70   240  blr x16
0xffff91412f74   244  b #-0x4c (addr 0xffff91412f28)
0xffff91412f78   248  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91412f7c   252  d63f03e0       constant
0xffff91412f80   256  91406820       constant
0xffff91412f84   260  0000ffff       constant
0xffff91412f88   264  91406260       constant
0xffff91412f8c   268  0000ffff       constant
0xffff91412f90   272  914068e0       constant
0xffff91412f94   276  0000ffff       constant
0xffff91412f98   280  movz x16, #0x0
0xffff91412f9c   284  bl #+0xc (addr 0xffff91412fa8)
0xffff91412fa0   288  movz x16, #0x8
0xffff91412fa4   292  bl #+0x4 (addr 0xffff91412fa8)
0xffff91412fa8   296  ldr x17, pc+24 (addr 0x0000ffff91412fc0)    ;; lazy deoptimization bailout 0
0xffff91412fac   300  add x17, x17, x16
0xffff91412fb0   304  br x17
0xffff91412fb4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91412fb8   312  d63f03e0       constant
0xffff91412fbc   316  d503201f       constant
0xffff91412fc0   320  91206000       constant
0xffff91412fc4   324  0000ffff       constant


Safepoints (size = 21)
0xffff91412f68   232  100000 | x2 (sp -> fp)  <none>

RelocInfo (size = 19)
0xffff91412f48  code target (STUB)  (0xffff91406820)
0xffff91412f60  code target (STUB)  (0xffff91406260)
0xffff91412f6c  code target (STUB)  (0xffff914068e0)
0xffff91412f78  constant pool (size 32)
0xffff91412fa8  runtime entry
0xffff91412fb4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2203
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 152)
0xffff91413040     0  mov x2, x1
0xffff91413044     4  tbnz w2, #0, #+0x30 (addr 0xffff91413074)
0xffff91413048     8  mov x3, x0
0xffff9141304c    12  tbnz w3, #0, #+0x38 (addr 0xffff91413084)
0xffff91413050    16  asr x2, x2, #32
0xffff91413054    20  asr x3, x3, #32
0xffff91413058    24  sdiv w4, w2, w3
0xffff9141305c    28  cbz w3, #+0x38 (addr 0xffff91413094)
0xffff91413060    32  msub w4, w4, w3, w2
0xffff91413064    36  cbnz w4, #+0x8 (addr 0xffff9141306c)
0xffff91413068    40  tbnz w2, #31, #+0x2c (addr 0xffff91413094)
0xffff9141306c    44  lsl x0, x4, #32
0xffff91413070    48  ret
0xffff91413074    52  movz x16, #0x0
0xffff91413078    56  sub csp, jssp, #0x10 (16)
0xffff9141307c    60  stp fp, lr, [jssp, #-16]!
0xffff91413080    64  bl #+0x24 (addr 0xffff914130a4)
0xffff91413084    68  movz x16, #0x8
0xffff91413088    72  sub csp, jssp, #0x10 (16)
0xffff9141308c    76  stp fp, lr, [jssp, #-16]!
0xffff91413090    80  bl #+0x14 (addr 0xffff914130a4)
0xffff91413094    84  movz x16, #0x10
0xffff91413098    88  sub csp, jssp, #0x10 (16)
0xffff9141309c    92  stp fp, lr, [jssp, #-16]!
0xffff914130a0    96  bl #+0x4 (addr 0xffff914130a4)
0xffff914130a4   100  movz x17, #0xa00000000
0xffff914130a8   104  sub csp, jssp, #0x10 (16)
0xffff914130ac   108  stp x17, cp, [jssp, #-16]!
0xffff914130b0   112  add fp, jssp, #0x10 (16)
0xffff914130b4   116  ldr x17, pc+20 (addr 0x0000ffff914130c8)    ;; lazy deoptimization bailout 0
0xffff914130b8   120  add x17, x17, x16
0xffff914130bc   124  br x17
0xffff914130c0   128  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914130c4   132  d63f03e0       constant
0xffff914130c8   136  91206000       constant
0xffff914130cc   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914130b4  runtime entry
0xffff914130c0  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2203
type = NORMAL
name = BinaryOpICStub(MOD:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 152)
0xffff91413040     0  mov x2, x1
0xffff91413044     4  tbnz w2, #0, #+0x30 (addr 0xffff91413074)
0xffff91413048     8  mov x3, x0
0xffff9141304c    12  tbnz w3, #0, #+0x38 (addr 0xffff91413084)
0xffff91413050    16  asr x2, x2, #32
0xffff91413054    20  asr x3, x3, #32
0xffff91413058    24  sdiv w4, w2, w3
0xffff9141305c    28  cbz w3, #+0x38 (addr 0xffff91413094)
0xffff91413060    32  msub w4, w4, w3, w2
0xffff91413064    36  cbnz w4, #+0x8 (addr 0xffff9141306c)
0xffff91413068    40  tbnz w2, #31, #+0x2c (addr 0xffff91413094)
0xffff9141306c    44  lsl x0, x4, #32
0xffff91413070    48  ret
0xffff91413074    52  movz x16, #0x0
0xffff91413078    56  sub csp, jssp, #0x10 (16)
0xffff9141307c    60  stp fp, lr, [jssp, #-16]!
0xffff91413080    64  bl #+0x24 (addr 0xffff914130a4)
0xffff91413084    68  movz x16, #0x8
0xffff91413088    72  sub csp, jssp, #0x10 (16)
0xffff9141308c    76  stp fp, lr, [jssp, #-16]!
0xffff91413090    80  bl #+0x14 (addr 0xffff914130a4)
0xffff91413094    84  movz x16, #0x10
0xffff91413098    88  sub csp, jssp, #0x10 (16)
0xffff9141309c    92  stp fp, lr, [jssp, #-16]!
0xffff914130a0    96  bl #+0x4 (addr 0xffff914130a4)
0xffff914130a4   100  movz x17, #0xa00000000
0xffff914130a8   104  sub csp, jssp, #0x10 (16)
0xffff914130ac   108  stp x17, cp, [jssp, #-16]!
0xffff914130b0   112  add fp, jssp, #0x10 (16)
0xffff914130b4   116  ldr x17, pc+20 (addr 0x0000ffff914130c8)    ;; lazy deoptimization bailout 0
0xffff914130b8   120  add x17, x17, x16
0xffff914130bc   124  br x17
0xffff914130c0   128  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914130c4   132  d63f03e0       constant
0xffff914130c8   136  91206000       constant
0xffff914130cc   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914130b4  runtime entry
0xffff914130c0  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4393
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 160)
0xffff91413140     0  mov x2, x1
0xffff91413144     4  tbnz w2, #0, #+0x34 (addr 0xffff91413178)
0xffff91413148     8  mov x3, x0
0xffff9141314c    12  tbnz w3, #0, #+0x3c (addr 0xffff91413188)
0xffff91413150    16  cmp x3, #0x0 (0)
0xffff91413154    20  ccmp x2, #0, #nZcv, ne
0xffff91413158    24  ccmn x3, x2, #nzcv, eq
0xffff9141315c    28  b.mi #+0x3c (addr 0xffff91413198)
0xffff91413160    32  smulh x2, x3, x2
0xffff91413164    36  cmp x2, w2, sxtw
0xffff91413168    40  lsl x2, x2, #32
0xffff9141316c    44  b.ne #+0x2c (addr 0xffff91413198)
0xffff91413170    48  mov x0, x2
0xffff91413174    52  ret
0xffff91413178    56  movz x16, #0x0
0xffff9141317c    60  sub csp, jssp, #0x10 (16)
0xffff91413180    64  stp fp, lr, [jssp, #-16]!
0xffff91413184    68  bl #+0x24 (addr 0xffff914131a8)
0xffff91413188    72  movz x16, #0x8
0xffff9141318c    76  sub csp, jssp, #0x10 (16)
0xffff91413190    80  stp fp, lr, [jssp, #-16]!
0xffff91413194    84  bl #+0x14 (addr 0xffff914131a8)
0xffff91413198    88  movz x16, #0x10
0xffff9141319c    92  sub csp, jssp, #0x10 (16)
0xffff914131a0    96  stp fp, lr, [jssp, #-16]!
0xffff914131a4   100  bl #+0x4 (addr 0xffff914131a8)
0xffff914131a8   104  movz x17, #0xa00000000
0xffff914131ac   108  sub csp, jssp, #0x10 (16)
0xffff914131b0   112  stp x17, cp, [jssp, #-16]!
0xffff914131b4   116  add fp, jssp, #0x10 (16)
0xffff914131b8   120  ldr x17, pc+24 (addr 0x0000ffff914131d0)    ;; lazy deoptimization bailout 0
0xffff914131bc   124  add x17, x17, x16
0xffff914131c0   128  br x17
0xffff914131c4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914131c8   136  d63f03e0       constant
0xffff914131cc   140  d503201f       constant
0xffff914131d0   144  91206000       constant
0xffff914131d4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914131b8  runtime entry
0xffff914131c4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4393
type = NORMAL
name = BinaryOpICStub(MUL:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 160)
0xffff91413140     0  mov x2, x1
0xffff91413144     4  tbnz w2, #0, #+0x34 (addr 0xffff91413178)
0xffff91413148     8  mov x3, x0
0xffff9141314c    12  tbnz w3, #0, #+0x3c (addr 0xffff91413188)
0xffff91413150    16  cmp x3, #0x0 (0)
0xffff91413154    20  ccmp x2, #0, #nZcv, ne
0xffff91413158    24  ccmn x3, x2, #nzcv, eq
0xffff9141315c    28  b.mi #+0x3c (addr 0xffff91413198)
0xffff91413160    32  smulh x2, x3, x2
0xffff91413164    36  cmp x2, w2, sxtw
0xffff91413168    40  lsl x2, x2, #32
0xffff9141316c    44  b.ne #+0x2c (addr 0xffff91413198)
0xffff91413170    48  mov x0, x2
0xffff91413174    52  ret
0xffff91413178    56  movz x16, #0x0
0xffff9141317c    60  sub csp, jssp, #0x10 (16)
0xffff91413180    64  stp fp, lr, [jssp, #-16]!
0xffff91413184    68  bl #+0x24 (addr 0xffff914131a8)
0xffff91413188    72  movz x16, #0x8
0xffff9141318c    76  sub csp, jssp, #0x10 (16)
0xffff91413190    80  stp fp, lr, [jssp, #-16]!
0xffff91413194    84  bl #+0x14 (addr 0xffff914131a8)
0xffff91413198    88  movz x16, #0x10
0xffff9141319c    92  sub csp, jssp, #0x10 (16)
0xffff914131a0    96  stp fp, lr, [jssp, #-16]!
0xffff914131a4   100  bl #+0x4 (addr 0xffff914131a8)
0xffff914131a8   104  movz x17, #0xa00000000
0xffff914131ac   108  sub csp, jssp, #0x10 (16)
0xffff914131b0   112  stp x17, cp, [jssp, #-16]!
0xffff914131b4   116  add fp, jssp, #0x10 (16)
0xffff914131b8   120  ldr x17, pc+24 (addr 0x0000ffff914131d0)    ;; lazy deoptimization bailout 0
0xffff914131bc   124  add x17, x17, x16
0xffff914131c0   128  br x17
0xffff914131c4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914131c8   136  d63f03e0       constant
0xffff914131cc   140  d503201f       constant
0xffff914131d0   144  91206000       constant
0xffff914131d4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914131b8  runtime entry
0xffff914131c4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4409
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff91413240     0  mov x2, x1
0xffff91413244     4  tbnz w2, #0, #+0xc4 (addr 0xffff91413308)
0xffff91413248     8  mov x3, x0
0xffff9141324c    12  tbnz w3, #0, #+0xcc (addr 0xffff91413318)
0xffff91413250    16  scvtf d0, x2, #32
0xffff91413254    20  scvtf d1, x3, #32
0xffff91413258    24  fmul d0, d0, d1
0xffff9141325c    28  movz x1, #0xf2c0
0xffff91413260    32  movk x1, #0x4117, lsl #16
0xffff91413264    36  ldp x2, x0, [x1]
0xffff91413268    40  adds x16, x2, #0x10 (16)
0xffff9141326c    44  ccmp x16, x0, #nzCv, lo
0xffff91413270    48  b.hi #+0x20 (addr 0xffff91413290)
0xffff91413274    52  str x16, [x1]
0xffff91413278    56  ldr x1, [x26, #120]
0xffff9141327c    60  str x1, [x2]
0xffff91413280    64  orr x2, x2, #0x1
0xffff91413284    68  stur d0, [x2, #7]
0xffff91413288    72  mov x0, x2
0xffff9141328c    76  ret
0xffff91413290    80  sub csp, jssp, #0x10 (16)
0xffff91413294    84  stp fp, lr, [jssp, #-16]!
0xffff91413298    88  movz fp, #0xa00000000
0xffff9141329c    92  sub csp, jssp, #0x8 (8)
0xffff914132a0    96  str fp, [jssp, #-8]!
0xffff914132a4   100  add fp, jssp, #0x8 (8)
0xffff914132a8   104  movz x2, #0x0
0xffff914132ac   108  mov x16, lr
0xffff914132b0   112  ldr x17, pc+64 (addr 0x0000ffff914132f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914132b4   116  blr x17
0xffff914132b8   120  ldur cp, [fp, #-8]
0xffff914132bc   124  movz x0, #0x0
0xffff914132c0   128  movz x1, #0x4b48
0xffff914132c4   132  movk x1, #0xe4, lsl #16
0xffff914132c8   136  ldr x16, pc+48 (addr 0x0000ffff914132f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff914132cc   140  blr x16
0xffff914132d0   144  str x0, [jssp, #16]
0xffff914132d4   148  ldr x16, pc+44 (addr 0x0000ffff91413300)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914132d8   152  blr x16
0xffff914132dc   156  ldr lr, [jssp, #16]
0xffff914132e0   160  ldp xzr, fp, [jssp], #24
0xffff914132e4   164  b #-0x60 (addr 0xffff91413284)
0xffff914132e8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914132ec   172  d63f03e0       constant
0xffff914132f0   176  91406820       constant
0xffff914132f4   180  0000ffff       constant
0xffff914132f8   184  91406260       constant
0xffff914132fc   188  0000ffff       constant
0xffff91413300   192  914068e0       constant
0xffff91413304   196  0000ffff       constant
0xffff91413308   200  movz x16, #0x0
0xffff9141330c   204  sub csp, jssp, #0x10 (16)
0xffff91413310   208  stp fp, lr, [jssp, #-16]!
0xffff91413314   212  bl #+0x14 (addr 0xffff91413328)
0xffff91413318   216  movz x16, #0x8
0xffff9141331c   220  sub csp, jssp, #0x10 (16)
0xffff91413320   224  stp fp, lr, [jssp, #-16]!
0xffff91413324   228  bl #+0x4 (addr 0xffff91413328)
0xffff91413328   232  movz x17, #0xa00000000
0xffff9141332c   236  sub csp, jssp, #0x10 (16)
0xffff91413330   240  stp x17, cp, [jssp, #-16]!
0xffff91413334   244  add fp, jssp, #0x10 (16)
0xffff91413338   248  ldr x17, pc+24 (addr 0x0000ffff91413350)    ;; lazy deoptimization bailout 0
0xffff9141333c   252  add x17, x17, x16
0xffff91413340   256  br x17
0xffff91413344   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413348   264  d63f03e0       constant
0xffff9141334c   268  d503201f       constant
0xffff91413350   272  91206000       constant
0xffff91413354   276  0000ffff       constant


Safepoints (size = 21)
0xffff914132d0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff914132b0  code target (STUB)  (0xffff91406820)
0xffff914132c8  code target (STUB)  (0xffff91406260)
0xffff914132d4  code target (STUB)  (0xffff914068e0)
0xffff914132e8  constant pool (size 32)
0xffff91413338  runtime entry
0xffff91413344  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4409
type = NORMAL
name = BinaryOpICStub(MUL:Int32*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff91413240     0  mov x2, x1
0xffff91413244     4  tbnz w2, #0, #+0xc4 (addr 0xffff91413308)
0xffff91413248     8  mov x3, x0
0xffff9141324c    12  tbnz w3, #0, #+0xcc (addr 0xffff91413318)
0xffff91413250    16  scvtf d0, x2, #32
0xffff91413254    20  scvtf d1, x3, #32
0xffff91413258    24  fmul d0, d0, d1
0xffff9141325c    28  movz x1, #0xf2c0
0xffff91413260    32  movk x1, #0x4117, lsl #16
0xffff91413264    36  ldp x2, x0, [x1]
0xffff91413268    40  adds x16, x2, #0x10 (16)
0xffff9141326c    44  ccmp x16, x0, #nzCv, lo
0xffff91413270    48  b.hi #+0x20 (addr 0xffff91413290)
0xffff91413274    52  str x16, [x1]
0xffff91413278    56  ldr x1, [x26, #120]
0xffff9141327c    60  str x1, [x2]
0xffff91413280    64  orr x2, x2, #0x1
0xffff91413284    68  stur d0, [x2, #7]
0xffff91413288    72  mov x0, x2
0xffff9141328c    76  ret
0xffff91413290    80  sub csp, jssp, #0x10 (16)
0xffff91413294    84  stp fp, lr, [jssp, #-16]!
0xffff91413298    88  movz fp, #0xa00000000
0xffff9141329c    92  sub csp, jssp, #0x8 (8)
0xffff914132a0    96  str fp, [jssp, #-8]!
0xffff914132a4   100  add fp, jssp, #0x8 (8)
0xffff914132a8   104  movz x2, #0x0
0xffff914132ac   108  mov x16, lr
0xffff914132b0   112  ldr x17, pc+64 (addr 0x0000ffff914132f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914132b4   116  blr x17
0xffff914132b8   120  ldur cp, [fp, #-8]
0xffff914132bc   124  movz x0, #0x0
0xffff914132c0   128  movz x1, #0x4b48
0xffff914132c4   132  movk x1, #0xe4, lsl #16
0xffff914132c8   136  ldr x16, pc+48 (addr 0x0000ffff914132f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff914132cc   140  blr x16
0xffff914132d0   144  str x0, [jssp, #16]
0xffff914132d4   148  ldr x16, pc+44 (addr 0x0000ffff91413300)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914132d8   152  blr x16
0xffff914132dc   156  ldr lr, [jssp, #16]
0xffff914132e0   160  ldp xzr, fp, [jssp], #24
0xffff914132e4   164  b #-0x60 (addr 0xffff91413284)
0xffff914132e8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914132ec   172  d63f03e0       constant
0xffff914132f0   176  91406820       constant
0xffff914132f4   180  0000ffff       constant
0xffff914132f8   184  91406260       constant
0xffff914132fc   188  0000ffff       constant
0xffff91413300   192  914068e0       constant
0xffff91413304   196  0000ffff       constant
0xffff91413308   200  movz x16, #0x0
0xffff9141330c   204  sub csp, jssp, #0x10 (16)
0xffff91413310   208  stp fp, lr, [jssp, #-16]!
0xffff91413314   212  bl #+0x14 (addr 0xffff91413328)
0xffff91413318   216  movz x16, #0x8
0xffff9141331c   220  sub csp, jssp, #0x10 (16)
0xffff91413320   224  stp fp, lr, [jssp, #-16]!
0xffff91413324   228  bl #+0x4 (addr 0xffff91413328)
0xffff91413328   232  movz x17, #0xa00000000
0xffff9141332c   236  sub csp, jssp, #0x10 (16)
0xffff91413330   240  stp x17, cp, [jssp, #-16]!
0xffff91413334   244  add fp, jssp, #0x10 (16)
0xffff91413338   248  ldr x17, pc+24 (addr 0x0000ffff91413350)    ;; lazy deoptimization bailout 0
0xffff9141333c   252  add x17, x17, x16
0xffff91413340   256  br x17
0xffff91413344   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413348   264  d63f03e0       constant
0xffff9141334c   268  d503201f       constant
0xffff91413350   272  91206000       constant
0xffff91413354   276  0000ffff       constant


Safepoints (size = 21)
0xffff914132d0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff914132b0  code target (STUB)  (0xffff91406820)
0xffff914132c8  code target (STUB)  (0xffff91406260)
0xffff914132d4  code target (STUB)  (0xffff914068e0)
0xffff914132e8  constant pool (size 32)
0xffff91413338  runtime entry
0xffff91413344  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6457
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff914133e0     0  mov x2, x1
0xffff914133e4     4  tbnz w2, #0, #+0xf4 (addr 0xffff914134d8)
0xffff914133e8     8  tbz w0, #0, #+0x34 (addr 0xffff9141341c)
0xffff914133ec    12  ldur x16, [x0, #-1]
0xffff914133f0    16  ldr x17, [x26, #120]
0xffff914133f4    20  cmp x16, x17
0xffff914133f8    24  b.ne #+0xc (addr 0xffff91413404)
0xffff914133fc    28  ldur d0, [x0, #7]
0xffff91413400    32  b #+0x20 (addr 0xffff91413420)
0xffff91413404    36  ldr x16, [x26, #40]
0xffff91413408    40  cmp x0, x16
0xffff9141340c    44  b.ne #+0xdc (addr 0xffff914134e8)
0xffff91413410    48  ldr x3, [x26, #928]
0xffff91413414    52  ldur d0, [x3, #7]
0xffff91413418    56  b #+0x8 (addr 0xffff91413420)
0xffff9141341c    60  scvtf d0, x0, #32
0xffff91413420    64  scvtf d1, x2, #32
0xffff91413424    68  fmul d0, d1, d0
0xffff91413428    72  movz x1, #0xf2c0
0xffff9141342c    76  movk x1, #0x4117, lsl #16
0xffff91413430    80  ldp x2, x0, [x1]
0xffff91413434    84  adds x16, x2, #0x10 (16)
0xffff91413438    88  ccmp x16, x0, #nzCv, lo
0xffff9141343c    92  b.hi #+0x20 (addr 0xffff9141345c)
0xffff91413440    96  str x16, [x1]
0xffff91413444   100  ldr x1, [x26, #120]
0xffff91413448   104  str x1, [x2]
0xffff9141344c   108  orr x2, x2, #0x1
0xffff91413450   112  stur d0, [x2, #7]
0xffff91413454   116  mov x0, x2
0xffff91413458   120  ret
0xffff9141345c   124  sub csp, jssp, #0x10 (16)
0xffff91413460   128  stp fp, lr, [jssp, #-16]!
0xffff91413464   132  movz fp, #0xa00000000
0xffff91413468   136  sub csp, jssp, #0x8 (8)
0xffff9141346c   140  str fp, [jssp, #-8]!
0xffff91413470   144  add fp, jssp, #0x8 (8)
0xffff91413474   148  movz x2, #0x0
0xffff91413478   152  mov x16, lr
0xffff9141347c   156  ldr x17, pc+68 (addr 0x0000ffff914134c0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91413480   160  blr x17
0xffff91413484   164  ldur cp, [fp, #-8]
0xffff91413488   168  movz x0, #0x0
0xffff9141348c   172  movz x1, #0x4b48
0xffff91413490   176  movk x1, #0xe4, lsl #16
0xffff91413494   180  ldr x16, pc+52 (addr 0x0000ffff914134c8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91413498   184  blr x16
0xffff9141349c   188  str x0, [jssp, #16]
0xffff914134a0   192  ldr x16, pc+48 (addr 0x0000ffff914134d0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914134a4   196  blr x16
0xffff914134a8   200  ldr lr, [jssp, #16]
0xffff914134ac   204  ldp xzr, fp, [jssp], #24
0xffff914134b0   208  b #-0x60 (addr 0xffff91413450)
0xffff914134b4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff914134b8   216  d63f03e0       constant
0xffff914134bc   220  d503201f       constant
0xffff914134c0   224  91406820       constant
0xffff914134c4   228  0000ffff       constant
0xffff914134c8   232  91406260       constant
0xffff914134cc   236  0000ffff       constant
0xffff914134d0   240  914068e0       constant
0xffff914134d4   244  0000ffff       constant
0xffff914134d8   248  movz x16, #0x0
0xffff914134dc   252  sub csp, jssp, #0x10 (16)
0xffff914134e0   256  stp fp, lr, [jssp, #-16]!
0xffff914134e4   260  bl #+0x14 (addr 0xffff914134f8)
0xffff914134e8   264  movz x16, #0x8
0xffff914134ec   268  sub csp, jssp, #0x10 (16)
0xffff914134f0   272  stp fp, lr, [jssp, #-16]!
0xffff914134f4   276  bl #+0x4 (addr 0xffff914134f8)
0xffff914134f8   280  movz x17, #0xa00000000
0xffff914134fc   284  sub csp, jssp, #0x10 (16)
0xffff91413500   288  stp x17, cp, [jssp, #-16]!
0xffff91413504   292  add fp, jssp, #0x10 (16)
0xffff91413508   296  ldr x17, pc+24 (addr 0x0000ffff91413520)    ;; lazy deoptimization bailout 0
0xffff9141350c   300  add x17, x17, x16
0xffff91413510   304  br x17
0xffff91413514   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413518   312  d63f03e0       constant
0xffff9141351c   316  d503201f       constant
0xffff91413520   320  91206000       constant
0xffff91413524   324  0000ffff       constant


Safepoints (size = 21)
0xffff9141349c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9141347c  code target (STUB)  (0xffff91406820)
0xffff91413494  code target (STUB)  (0xffff91406260)
0xffff914134a0  code target (STUB)  (0xffff914068e0)
0xffff914134b4  constant pool (size 36)
0xffff91413508  runtime entry
0xffff91413514  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6457
type = NORMAL
name = BinaryOpICStub(MUL:Int32*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff914133e0     0  mov x2, x1
0xffff914133e4     4  tbnz w2, #0, #+0xf4 (addr 0xffff914134d8)
0xffff914133e8     8  tbz w0, #0, #+0x34 (addr 0xffff9141341c)
0xffff914133ec    12  ldur x16, [x0, #-1]
0xffff914133f0    16  ldr x17, [x26, #120]
0xffff914133f4    20  cmp x16, x17
0xffff914133f8    24  b.ne #+0xc (addr 0xffff91413404)
0xffff914133fc    28  ldur d0, [x0, #7]
0xffff91413400    32  b #+0x20 (addr 0xffff91413420)
0xffff91413404    36  ldr x16, [x26, #40]
0xffff91413408    40  cmp x0, x16
0xffff9141340c    44  b.ne #+0xdc (addr 0xffff914134e8)
0xffff91413410    48  ldr x3, [x26, #928]
0xffff91413414    52  ldur d0, [x3, #7]
0xffff91413418    56  b #+0x8 (addr 0xffff91413420)
0xffff9141341c    60  scvtf d0, x0, #32
0xffff91413420    64  scvtf d1, x2, #32
0xffff91413424    68  fmul d0, d1, d0
0xffff91413428    72  movz x1, #0xf2c0
0xffff9141342c    76  movk x1, #0x4117, lsl #16
0xffff91413430    80  ldp x2, x0, [x1]
0xffff91413434    84  adds x16, x2, #0x10 (16)
0xffff91413438    88  ccmp x16, x0, #nzCv, lo
0xffff9141343c    92  b.hi #+0x20 (addr 0xffff9141345c)
0xffff91413440    96  str x16, [x1]
0xffff91413444   100  ldr x1, [x26, #120]
0xffff91413448   104  str x1, [x2]
0xffff9141344c   108  orr x2, x2, #0x1
0xffff91413450   112  stur d0, [x2, #7]
0xffff91413454   116  mov x0, x2
0xffff91413458   120  ret
0xffff9141345c   124  sub csp, jssp, #0x10 (16)
0xffff91413460   128  stp fp, lr, [jssp, #-16]!
0xffff91413464   132  movz fp, #0xa00000000
0xffff91413468   136  sub csp, jssp, #0x8 (8)
0xffff9141346c   140  str fp, [jssp, #-8]!
0xffff91413470   144  add fp, jssp, #0x8 (8)
0xffff91413474   148  movz x2, #0x0
0xffff91413478   152  mov x16, lr
0xffff9141347c   156  ldr x17, pc+68 (addr 0x0000ffff914134c0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91413480   160  blr x17
0xffff91413484   164  ldur cp, [fp, #-8]
0xffff91413488   168  movz x0, #0x0
0xffff9141348c   172  movz x1, #0x4b48
0xffff91413490   176  movk x1, #0xe4, lsl #16
0xffff91413494   180  ldr x16, pc+52 (addr 0x0000ffff914134c8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91413498   184  blr x16
0xffff9141349c   188  str x0, [jssp, #16]
0xffff914134a0   192  ldr x16, pc+48 (addr 0x0000ffff914134d0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914134a4   196  blr x16
0xffff914134a8   200  ldr lr, [jssp, #16]
0xffff914134ac   204  ldp xzr, fp, [jssp], #24
0xffff914134b0   208  b #-0x60 (addr 0xffff91413450)
0xffff914134b4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff914134b8   216  d63f03e0       constant
0xffff914134bc   220  d503201f       constant
0xffff914134c0   224  91406820       constant
0xffff914134c4   228  0000ffff       constant
0xffff914134c8   232  91406260       constant
0xffff914134cc   236  0000ffff       constant
0xffff914134d0   240  914068e0       constant
0xffff914134d4   244  0000ffff       constant
0xffff914134d8   248  movz x16, #0x0
0xffff914134dc   252  sub csp, jssp, #0x10 (16)
0xffff914134e0   256  stp fp, lr, [jssp, #-16]!
0xffff914134e4   260  bl #+0x14 (addr 0xffff914134f8)
0xffff914134e8   264  movz x16, #0x8
0xffff914134ec   268  sub csp, jssp, #0x10 (16)
0xffff914134f0   272  stp fp, lr, [jssp, #-16]!
0xffff914134f4   276  bl #+0x4 (addr 0xffff914134f8)
0xffff914134f8   280  movz x17, #0xa00000000
0xffff914134fc   284  sub csp, jssp, #0x10 (16)
0xffff91413500   288  stp x17, cp, [jssp, #-16]!
0xffff91413504   292  add fp, jssp, #0x10 (16)
0xffff91413508   296  ldr x17, pc+24 (addr 0x0000ffff91413520)    ;; lazy deoptimization bailout 0
0xffff9141350c   300  add x17, x17, x16
0xffff91413510   304  br x17
0xffff91413514   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413518   312  d63f03e0       constant
0xffff9141351c   316  d503201f       constant
0xffff91413520   320  91206000       constant
0xffff91413524   324  0000ffff       constant


Safepoints (size = 21)
0xffff9141349c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9141347c  code target (STUB)  (0xffff91406820)
0xffff91413494  code target (STUB)  (0xffff91406260)
0xffff914134a0  code target (STUB)  (0xffff914068e0)
0xffff914134b4  constant pool (size 36)
0xffff91413508  runtime entry
0xffff91413514  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2345
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 160)
0xffff914135a0     0  mov x2, x1
0xffff914135a4     4  tbnz w2, #0, #+0x34 (addr 0xffff914135d8)
0xffff914135a8     8  mov x3, x0
0xffff914135ac    12  tbnz w3, #0, #+0x3c (addr 0xffff914135e8)
0xffff914135b0    16  cmp x3, #0x0 (0)
0xffff914135b4    20  ccmp x2, #0, #nZcv, ne
0xffff914135b8    24  ccmn x3, x2, #nzcv, eq
0xffff914135bc    28  b.mi #+0x3c (addr 0xffff914135f8)
0xffff914135c0    32  smulh x2, x3, x2
0xffff914135c4    36  cmp x2, w2, sxtw
0xffff914135c8    40  lsl x2, x2, #32
0xffff914135cc    44  b.ne #+0x2c (addr 0xffff914135f8)
0xffff914135d0    48  mov x0, x2
0xffff914135d4    52  ret
0xffff914135d8    56  movz x16, #0x0
0xffff914135dc    60  sub csp, jssp, #0x10 (16)
0xffff914135e0    64  stp fp, lr, [jssp, #-16]!
0xffff914135e4    68  bl #+0x24 (addr 0xffff91413608)
0xffff914135e8    72  movz x16, #0x8
0xffff914135ec    76  sub csp, jssp, #0x10 (16)
0xffff914135f0    80  stp fp, lr, [jssp, #-16]!
0xffff914135f4    84  bl #+0x14 (addr 0xffff91413608)
0xffff914135f8    88  movz x16, #0x10
0xffff914135fc    92  sub csp, jssp, #0x10 (16)
0xffff91413600    96  stp fp, lr, [jssp, #-16]!
0xffff91413604   100  bl #+0x4 (addr 0xffff91413608)
0xffff91413608   104  movz x17, #0xa00000000
0xffff9141360c   108  sub csp, jssp, #0x10 (16)
0xffff91413610   112  stp x17, cp, [jssp, #-16]!
0xffff91413614   116  add fp, jssp, #0x10 (16)
0xffff91413618   120  ldr x17, pc+24 (addr 0x0000ffff91413630)    ;; lazy deoptimization bailout 0
0xffff9141361c   124  add x17, x17, x16
0xffff91413620   128  br x17
0xffff91413624   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413628   136  d63f03e0       constant
0xffff9141362c   140  d503201f       constant
0xffff91413630   144  91206000       constant
0xffff91413634   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91413618  runtime entry
0xffff91413624  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2345
type = NORMAL
name = BinaryOpICStub(MUL:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 160)
0xffff914135a0     0  mov x2, x1
0xffff914135a4     4  tbnz w2, #0, #+0x34 (addr 0xffff914135d8)
0xffff914135a8     8  mov x3, x0
0xffff914135ac    12  tbnz w3, #0, #+0x3c (addr 0xffff914135e8)
0xffff914135b0    16  cmp x3, #0x0 (0)
0xffff914135b4    20  ccmp x2, #0, #nZcv, ne
0xffff914135b8    24  ccmn x3, x2, #nzcv, eq
0xffff914135bc    28  b.mi #+0x3c (addr 0xffff914135f8)
0xffff914135c0    32  smulh x2, x3, x2
0xffff914135c4    36  cmp x2, w2, sxtw
0xffff914135c8    40  lsl x2, x2, #32
0xffff914135cc    44  b.ne #+0x2c (addr 0xffff914135f8)
0xffff914135d0    48  mov x0, x2
0xffff914135d4    52  ret
0xffff914135d8    56  movz x16, #0x0
0xffff914135dc    60  sub csp, jssp, #0x10 (16)
0xffff914135e0    64  stp fp, lr, [jssp, #-16]!
0xffff914135e4    68  bl #+0x24 (addr 0xffff91413608)
0xffff914135e8    72  movz x16, #0x8
0xffff914135ec    76  sub csp, jssp, #0x10 (16)
0xffff914135f0    80  stp fp, lr, [jssp, #-16]!
0xffff914135f4    84  bl #+0x14 (addr 0xffff91413608)
0xffff914135f8    88  movz x16, #0x10
0xffff914135fc    92  sub csp, jssp, #0x10 (16)
0xffff91413600    96  stp fp, lr, [jssp, #-16]!
0xffff91413604   100  bl #+0x4 (addr 0xffff91413608)
0xffff91413608   104  movz x17, #0xa00000000
0xffff9141360c   108  sub csp, jssp, #0x10 (16)
0xffff91413610   112  stp x17, cp, [jssp, #-16]!
0xffff91413614   116  add fp, jssp, #0x10 (16)
0xffff91413618   120  ldr x17, pc+24 (addr 0x0000ffff91413630)    ;; lazy deoptimization bailout 0
0xffff9141361c   124  add x17, x17, x16
0xffff91413620   128  br x17
0xffff91413624   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413628   136  d63f03e0       constant
0xffff9141362c   140  d503201f       constant
0xffff91413630   144  91206000       constant
0xffff91413634   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91413618  runtime entry
0xffff91413624  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2361
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff914136a0     0  mov x2, x1
0xffff914136a4     4  tbnz w2, #0, #+0xc4 (addr 0xffff91413768)
0xffff914136a8     8  mov x3, x0
0xffff914136ac    12  tbnz w3, #0, #+0xcc (addr 0xffff91413778)
0xffff914136b0    16  scvtf d0, x2, #32
0xffff914136b4    20  scvtf d1, x3, #32
0xffff914136b8    24  fmul d0, d0, d1
0xffff914136bc    28  movz x1, #0xf2c0
0xffff914136c0    32  movk x1, #0x4117, lsl #16
0xffff914136c4    36  ldp x2, x0, [x1]
0xffff914136c8    40  adds x16, x2, #0x10 (16)
0xffff914136cc    44  ccmp x16, x0, #nzCv, lo
0xffff914136d0    48  b.hi #+0x20 (addr 0xffff914136f0)
0xffff914136d4    52  str x16, [x1]
0xffff914136d8    56  ldr x1, [x26, #120]
0xffff914136dc    60  str x1, [x2]
0xffff914136e0    64  orr x2, x2, #0x1
0xffff914136e4    68  stur d0, [x2, #7]
0xffff914136e8    72  mov x0, x2
0xffff914136ec    76  ret
0xffff914136f0    80  sub csp, jssp, #0x10 (16)
0xffff914136f4    84  stp fp, lr, [jssp, #-16]!
0xffff914136f8    88  movz fp, #0xa00000000
0xffff914136fc    92  sub csp, jssp, #0x8 (8)
0xffff91413700    96  str fp, [jssp, #-8]!
0xffff91413704   100  add fp, jssp, #0x8 (8)
0xffff91413708   104  movz x2, #0x0
0xffff9141370c   108  mov x16, lr
0xffff91413710   112  ldr x17, pc+64 (addr 0x0000ffff91413750)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91413714   116  blr x17
0xffff91413718   120  ldur cp, [fp, #-8]
0xffff9141371c   124  movz x0, #0x0
0xffff91413720   128  movz x1, #0x4b48
0xffff91413724   132  movk x1, #0xe4, lsl #16
0xffff91413728   136  ldr x16, pc+48 (addr 0x0000ffff91413758)    ;; code: STUB, CEntryStub, minor: 5
0xffff9141372c   140  blr x16
0xffff91413730   144  str x0, [jssp, #16]
0xffff91413734   148  ldr x16, pc+44 (addr 0x0000ffff91413760)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91413738   152  blr x16
0xffff9141373c   156  ldr lr, [jssp, #16]
0xffff91413740   160  ldp xzr, fp, [jssp], #24
0xffff91413744   164  b #-0x60 (addr 0xffff914136e4)
0xffff91413748   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9141374c   172  d63f03e0       constant
0xffff91413750   176  91406820       constant
0xffff91413754   180  0000ffff       constant
0xffff91413758   184  91406260       constant
0xffff9141375c   188  0000ffff       constant
0xffff91413760   192  914068e0       constant
0xffff91413764   196  0000ffff       constant
0xffff91413768   200  movz x16, #0x0
0xffff9141376c   204  sub csp, jssp, #0x10 (16)
0xffff91413770   208  stp fp, lr, [jssp, #-16]!
0xffff91413774   212  bl #+0x14 (addr 0xffff91413788)
0xffff91413778   216  movz x16, #0x8
0xffff9141377c   220  sub csp, jssp, #0x10 (16)
0xffff91413780   224  stp fp, lr, [jssp, #-16]!
0xffff91413784   228  bl #+0x4 (addr 0xffff91413788)
0xffff91413788   232  movz x17, #0xa00000000
0xffff9141378c   236  sub csp, jssp, #0x10 (16)
0xffff91413790   240  stp x17, cp, [jssp, #-16]!
0xffff91413794   244  add fp, jssp, #0x10 (16)
0xffff91413798   248  ldr x17, pc+24 (addr 0x0000ffff914137b0)    ;; lazy deoptimization bailout 0
0xffff9141379c   252  add x17, x17, x16
0xffff914137a0   256  br x17
0xffff914137a4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914137a8   264  d63f03e0       constant
0xffff914137ac   268  d503201f       constant
0xffff914137b0   272  91206000       constant
0xffff914137b4   276  0000ffff       constant


Safepoints (size = 21)
0xffff91413730   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91413710  code target (STUB)  (0xffff91406820)
0xffff91413728  code target (STUB)  (0xffff91406260)
0xffff91413734  code target (STUB)  (0xffff914068e0)
0xffff91413748  constant pool (size 32)
0xffff91413798  runtime entry
0xffff914137a4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2361
type = NORMAL
name = BinaryOpICStub(MUL:Int32*Smi->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff914136a0     0  mov x2, x1
0xffff914136a4     4  tbnz w2, #0, #+0xc4 (addr 0xffff91413768)
0xffff914136a8     8  mov x3, x0
0xffff914136ac    12  tbnz w3, #0, #+0xcc (addr 0xffff91413778)
0xffff914136b0    16  scvtf d0, x2, #32
0xffff914136b4    20  scvtf d1, x3, #32
0xffff914136b8    24  fmul d0, d0, d1
0xffff914136bc    28  movz x1, #0xf2c0
0xffff914136c0    32  movk x1, #0x4117, lsl #16
0xffff914136c4    36  ldp x2, x0, [x1]
0xffff914136c8    40  adds x16, x2, #0x10 (16)
0xffff914136cc    44  ccmp x16, x0, #nzCv, lo
0xffff914136d0    48  b.hi #+0x20 (addr 0xffff914136f0)
0xffff914136d4    52  str x16, [x1]
0xffff914136d8    56  ldr x1, [x26, #120]
0xffff914136dc    60  str x1, [x2]
0xffff914136e0    64  orr x2, x2, #0x1
0xffff914136e4    68  stur d0, [x2, #7]
0xffff914136e8    72  mov x0, x2
0xffff914136ec    76  ret
0xffff914136f0    80  sub csp, jssp, #0x10 (16)
0xffff914136f4    84  stp fp, lr, [jssp, #-16]!
0xffff914136f8    88  movz fp, #0xa00000000
0xffff914136fc    92  sub csp, jssp, #0x8 (8)
0xffff91413700    96  str fp, [jssp, #-8]!
0xffff91413704   100  add fp, jssp, #0x8 (8)
0xffff91413708   104  movz x2, #0x0
0xffff9141370c   108  mov x16, lr
0xffff91413710   112  ldr x17, pc+64 (addr 0x0000ffff91413750)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91413714   116  blr x17
0xffff91413718   120  ldur cp, [fp, #-8]
0xffff9141371c   124  movz x0, #0x0
0xffff91413720   128  movz x1, #0x4b48
0xffff91413724   132  movk x1, #0xe4, lsl #16
0xffff91413728   136  ldr x16, pc+48 (addr 0x0000ffff91413758)    ;; code: STUB, CEntryStub, minor: 5
0xffff9141372c   140  blr x16
0xffff91413730   144  str x0, [jssp, #16]
0xffff91413734   148  ldr x16, pc+44 (addr 0x0000ffff91413760)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91413738   152  blr x16
0xffff9141373c   156  ldr lr, [jssp, #16]
0xffff91413740   160  ldp xzr, fp, [jssp], #24
0xffff91413744   164  b #-0x60 (addr 0xffff914136e4)
0xffff91413748   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9141374c   172  d63f03e0       constant
0xffff91413750   176  91406820       constant
0xffff91413754   180  0000ffff       constant
0xffff91413758   184  91406260       constant
0xffff9141375c   188  0000ffff       constant
0xffff91413760   192  914068e0       constant
0xffff91413764   196  0000ffff       constant
0xffff91413768   200  movz x16, #0x0
0xffff9141376c   204  sub csp, jssp, #0x10 (16)
0xffff91413770   208  stp fp, lr, [jssp, #-16]!
0xffff91413774   212  bl #+0x14 (addr 0xffff91413788)
0xffff91413778   216  movz x16, #0x8
0xffff9141377c   220  sub csp, jssp, #0x10 (16)
0xffff91413780   224  stp fp, lr, [jssp, #-16]!
0xffff91413784   228  bl #+0x4 (addr 0xffff91413788)
0xffff91413788   232  movz x17, #0xa00000000
0xffff9141378c   236  sub csp, jssp, #0x10 (16)
0xffff91413790   240  stp x17, cp, [jssp, #-16]!
0xffff91413794   244  add fp, jssp, #0x10 (16)
0xffff91413798   248  ldr x17, pc+24 (addr 0x0000ffff914137b0)    ;; lazy deoptimization bailout 0
0xffff9141379c   252  add x17, x17, x16
0xffff914137a0   256  br x17
0xffff914137a4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914137a8   264  d63f03e0       constant
0xffff914137ac   268  d503201f       constant
0xffff914137b0   272  91206000       constant
0xffff914137b4   276  0000ffff       constant


Safepoints (size = 21)
0xffff91413730   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91413710  code target (STUB)  (0xffff91406820)
0xffff91413728  code target (STUB)  (0xffff91406260)
0xffff91413734  code target (STUB)  (0xffff914068e0)
0xffff91413748  constant pool (size 32)
0xffff91413798  runtime entry
0xffff914137a4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4537
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff91413840     0  mov x2, x0
0xffff91413844     4  tbnz w2, #0, #+0xf4 (addr 0xffff91413938)
0xffff91413848     8  tbz w1, #0, #+0x34 (addr 0xffff9141387c)
0xffff9141384c    12  ldur x16, [x1, #-1]
0xffff91413850    16  ldr x17, [x26, #120]
0xffff91413854    20  cmp x16, x17
0xffff91413858    24  b.ne #+0xc (addr 0xffff91413864)
0xffff9141385c    28  ldur d0, [x1, #7]
0xffff91413860    32  b #+0x20 (addr 0xffff91413880)
0xffff91413864    36  ldr x16, [x26, #40]
0xffff91413868    40  cmp x1, x16
0xffff9141386c    44  b.ne #+0xdc (addr 0xffff91413948)
0xffff91413870    48  ldr x3, [x26, #928]
0xffff91413874    52  ldur d0, [x3, #7]
0xffff91413878    56  b #+0x8 (addr 0xffff91413880)
0xffff9141387c    60  scvtf d0, x1, #32
0xffff91413880    64  scvtf d1, x2, #32
0xffff91413884    68  fmul d0, d0, d1
0xffff91413888    72  movz x1, #0xf2c0
0xffff9141388c    76  movk x1, #0x4117, lsl #16
0xffff91413890    80  ldp x2, x0, [x1]
0xffff91413894    84  adds x16, x2, #0x10 (16)
0xffff91413898    88  ccmp x16, x0, #nzCv, lo
0xffff9141389c    92  b.hi #+0x20 (addr 0xffff914138bc)
0xffff914138a0    96  str x16, [x1]
0xffff914138a4   100  ldr x1, [x26, #120]
0xffff914138a8   104  str x1, [x2]
0xffff914138ac   108  orr x2, x2, #0x1
0xffff914138b0   112  stur d0, [x2, #7]
0xffff914138b4   116  mov x0, x2
0xffff914138b8   120  ret
0xffff914138bc   124  sub csp, jssp, #0x10 (16)
0xffff914138c0   128  stp fp, lr, [jssp, #-16]!
0xffff914138c4   132  movz fp, #0xa00000000
0xffff914138c8   136  sub csp, jssp, #0x8 (8)
0xffff914138cc   140  str fp, [jssp, #-8]!
0xffff914138d0   144  add fp, jssp, #0x8 (8)
0xffff914138d4   148  movz x2, #0x0
0xffff914138d8   152  mov x16, lr
0xffff914138dc   156  ldr x17, pc+68 (addr 0x0000ffff91413920)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914138e0   160  blr x17
0xffff914138e4   164  ldur cp, [fp, #-8]
0xffff914138e8   168  movz x0, #0x0
0xffff914138ec   172  movz x1, #0x4b48
0xffff914138f0   176  movk x1, #0xe4, lsl #16
0xffff914138f4   180  ldr x16, pc+52 (addr 0x0000ffff91413928)    ;; code: STUB, CEntryStub, minor: 5
0xffff914138f8   184  blr x16
0xffff914138fc   188  str x0, [jssp, #16]
0xffff91413900   192  ldr x16, pc+48 (addr 0x0000ffff91413930)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91413904   196  blr x16
0xffff91413908   200  ldr lr, [jssp, #16]
0xffff9141390c   204  ldp xzr, fp, [jssp], #24
0xffff91413910   208  b #-0x60 (addr 0xffff914138b0)
0xffff91413914   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91413918   216  d63f03e0       constant
0xffff9141391c   220  d503201f       constant
0xffff91413920   224  91406820       constant
0xffff91413924   228  0000ffff       constant
0xffff91413928   232  91406260       constant
0xffff9141392c   236  0000ffff       constant
0xffff91413930   240  914068e0       constant
0xffff91413934   244  0000ffff       constant
0xffff91413938   248  movz x16, #0x0
0xffff9141393c   252  sub csp, jssp, #0x10 (16)
0xffff91413940   256  stp fp, lr, [jssp, #-16]!
0xffff91413944   260  bl #+0x14 (addr 0xffff91413958)
0xffff91413948   264  movz x16, #0x8
0xffff9141394c   268  sub csp, jssp, #0x10 (16)
0xffff91413950   272  stp fp, lr, [jssp, #-16]!
0xffff91413954   276  bl #+0x4 (addr 0xffff91413958)
0xffff91413958   280  movz x17, #0xa00000000
0xffff9141395c   284  sub csp, jssp, #0x10 (16)
0xffff91413960   288  stp x17, cp, [jssp, #-16]!
0xffff91413964   292  add fp, jssp, #0x10 (16)
0xffff91413968   296  ldr x17, pc+24 (addr 0x0000ffff91413980)    ;; lazy deoptimization bailout 0
0xffff9141396c   300  add x17, x17, x16
0xffff91413970   304  br x17
0xffff91413974   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413978   312  d63f03e0       constant
0xffff9141397c   316  d503201f       constant
0xffff91413980   320  91206000       constant
0xffff91413984   324  0000ffff       constant


Safepoints (size = 21)
0xffff914138fc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff914138dc  code target (STUB)  (0xffff91406820)
0xffff914138f4  code target (STUB)  (0xffff91406260)
0xffff91413900  code target (STUB)  (0xffff914068e0)
0xffff91413914  constant pool (size 36)
0xffff91413968  runtime entry
0xffff91413974  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4537
type = NORMAL
name = BinaryOpICStub(MUL:Number*Int32->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff91413840     0  mov x2, x0
0xffff91413844     4  tbnz w2, #0, #+0xf4 (addr 0xffff91413938)
0xffff91413848     8  tbz w1, #0, #+0x34 (addr 0xffff9141387c)
0xffff9141384c    12  ldur x16, [x1, #-1]
0xffff91413850    16  ldr x17, [x26, #120]
0xffff91413854    20  cmp x16, x17
0xffff91413858    24  b.ne #+0xc (addr 0xffff91413864)
0xffff9141385c    28  ldur d0, [x1, #7]
0xffff91413860    32  b #+0x20 (addr 0xffff91413880)
0xffff91413864    36  ldr x16, [x26, #40]
0xffff91413868    40  cmp x1, x16
0xffff9141386c    44  b.ne #+0xdc (addr 0xffff91413948)
0xffff91413870    48  ldr x3, [x26, #928]
0xffff91413874    52  ldur d0, [x3, #7]
0xffff91413878    56  b #+0x8 (addr 0xffff91413880)
0xffff9141387c    60  scvtf d0, x1, #32
0xffff91413880    64  scvtf d1, x2, #32
0xffff91413884    68  fmul d0, d0, d1
0xffff91413888    72  movz x1, #0xf2c0
0xffff9141388c    76  movk x1, #0x4117, lsl #16
0xffff91413890    80  ldp x2, x0, [x1]
0xffff91413894    84  adds x16, x2, #0x10 (16)
0xffff91413898    88  ccmp x16, x0, #nzCv, lo
0xffff9141389c    92  b.hi #+0x20 (addr 0xffff914138bc)
0xffff914138a0    96  str x16, [x1]
0xffff914138a4   100  ldr x1, [x26, #120]
0xffff914138a8   104  str x1, [x2]
0xffff914138ac   108  orr x2, x2, #0x1
0xffff914138b0   112  stur d0, [x2, #7]
0xffff914138b4   116  mov x0, x2
0xffff914138b8   120  ret
0xffff914138bc   124  sub csp, jssp, #0x10 (16)
0xffff914138c0   128  stp fp, lr, [jssp, #-16]!
0xffff914138c4   132  movz fp, #0xa00000000
0xffff914138c8   136  sub csp, jssp, #0x8 (8)
0xffff914138cc   140  str fp, [jssp, #-8]!
0xffff914138d0   144  add fp, jssp, #0x8 (8)
0xffff914138d4   148  movz x2, #0x0
0xffff914138d8   152  mov x16, lr
0xffff914138dc   156  ldr x17, pc+68 (addr 0x0000ffff91413920)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914138e0   160  blr x17
0xffff914138e4   164  ldur cp, [fp, #-8]
0xffff914138e8   168  movz x0, #0x0
0xffff914138ec   172  movz x1, #0x4b48
0xffff914138f0   176  movk x1, #0xe4, lsl #16
0xffff914138f4   180  ldr x16, pc+52 (addr 0x0000ffff91413928)    ;; code: STUB, CEntryStub, minor: 5
0xffff914138f8   184  blr x16
0xffff914138fc   188  str x0, [jssp, #16]
0xffff91413900   192  ldr x16, pc+48 (addr 0x0000ffff91413930)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91413904   196  blr x16
0xffff91413908   200  ldr lr, [jssp, #16]
0xffff9141390c   204  ldp xzr, fp, [jssp], #24
0xffff91413910   208  b #-0x60 (addr 0xffff914138b0)
0xffff91413914   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91413918   216  d63f03e0       constant
0xffff9141391c   220  d503201f       constant
0xffff91413920   224  91406820       constant
0xffff91413924   228  0000ffff       constant
0xffff91413928   232  91406260       constant
0xffff9141392c   236  0000ffff       constant
0xffff91413930   240  914068e0       constant
0xffff91413934   244  0000ffff       constant
0xffff91413938   248  movz x16, #0x0
0xffff9141393c   252  sub csp, jssp, #0x10 (16)
0xffff91413940   256  stp fp, lr, [jssp, #-16]!
0xffff91413944   260  bl #+0x14 (addr 0xffff91413958)
0xffff91413948   264  movz x16, #0x8
0xffff9141394c   268  sub csp, jssp, #0x10 (16)
0xffff91413950   272  stp fp, lr, [jssp, #-16]!
0xffff91413954   276  bl #+0x4 (addr 0xffff91413958)
0xffff91413958   280  movz x17, #0xa00000000
0xffff9141395c   284  sub csp, jssp, #0x10 (16)
0xffff91413960   288  stp x17, cp, [jssp, #-16]!
0xffff91413964   292  add fp, jssp, #0x10 (16)
0xffff91413968   296  ldr x17, pc+24 (addr 0x0000ffff91413980)    ;; lazy deoptimization bailout 0
0xffff9141396c   300  add x17, x17, x16
0xffff91413970   304  br x17
0xffff91413974   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413978   312  d63f03e0       constant
0xffff9141397c   316  d503201f       constant
0xffff91413980   320  91206000       constant
0xffff91413984   324  0000ffff       constant


Safepoints (size = 21)
0xffff914138fc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff914138dc  code target (STUB)  (0xffff91406820)
0xffff914138f4  code target (STUB)  (0xffff91406260)
0xffff91413900  code target (STUB)  (0xffff914068e0)
0xffff91413914  constant pool (size 36)
0xffff91413968  runtime entry
0xffff91413974  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6585
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 389)
0xffff91413a00     0  tbz w1, #0, #+0x34 (addr 0xffff91413a34)
0xffff91413a04     4  ldur x16, [x1, #-1]
0xffff91413a08     8  ldr x17, [x26, #120]
0xffff91413a0c    12  cmp x16, x17
0xffff91413a10    16  b.ne #+0xc (addr 0xffff91413a1c)
0xffff91413a14    20  ldur d0, [x1, #7]
0xffff91413a18    24  b #+0x20 (addr 0xffff91413a38)
0xffff91413a1c    28  ldr x16, [x26, #40]
0xffff91413a20    32  cmp x1, x16
0xffff91413a24    36  b.ne #+0xfc (addr 0xffff91413b20)
0xffff91413a28    40  ldr x2, [x26, #928]
0xffff91413a2c    44  ldur d0, [x2, #7]
0xffff91413a30    48  b #+0x8 (addr 0xffff91413a38)
0xffff91413a34    52  scvtf d0, x1, #32
0xffff91413a38    56  tbz w0, #0, #+0x34 (addr 0xffff91413a6c)
0xffff91413a3c    60  ldur x16, [x0, #-1]
0xffff91413a40    64  ldr x17, [x26, #120]
0xffff91413a44    68  cmp x16, x17
0xffff91413a48    72  b.ne #+0xc (addr 0xffff91413a54)
0xffff91413a4c    76  ldur d1, [x0, #7]
0xffff91413a50    80  b #+0x20 (addr 0xffff91413a70)
0xffff91413a54    84  ldr x16, [x26, #40]
0xffff91413a58    88  cmp x0, x16
0xffff91413a5c    92  b.ne #+0xd4 (addr 0xffff91413b30)
0xffff91413a60    96  ldr x2, [x26, #928]
0xffff91413a64   100  ldur d1, [x2, #7]
0xffff91413a68   104  b #+0x8 (addr 0xffff91413a70)
0xffff91413a6c   108  scvtf d1, x0, #32
0xffff91413a70   112  fmul d0, d0, d1
0xffff91413a74   116  movz x1, #0xf2c0
0xffff91413a78   120  movk x1, #0x4117, lsl #16
0xffff91413a7c   124  ldp x2, x0, [x1]
0xffff91413a80   128  adds x16, x2, #0x10 (16)
0xffff91413a84   132  ccmp x16, x0, #nzCv, lo
0xffff91413a88   136  b.hi #+0x20 (addr 0xffff91413aa8)
0xffff91413a8c   140  str x16, [x1]
0xffff91413a90   144  ldr x1, [x26, #120]
0xffff91413a94   148  str x1, [x2]
0xffff91413a98   152  orr x2, x2, #0x1
0xffff91413a9c   156  stur d0, [x2, #7]
0xffff91413aa0   160  mov x0, x2
0xffff91413aa4   164  ret
0xffff91413aa8   168  sub csp, jssp, #0x10 (16)
0xffff91413aac   172  stp fp, lr, [jssp, #-16]!
0xffff91413ab0   176  movz fp, #0xa00000000
0xffff91413ab4   180  sub csp, jssp, #0x8 (8)
0xffff91413ab8   184  str fp, [jssp, #-8]!
0xffff91413abc   188  add fp, jssp, #0x8 (8)
0xffff91413ac0   192  movz x2, #0x0
0xffff91413ac4   196  mov x16, lr
0xffff91413ac8   200  ldr x17, pc+64 (addr 0x0000ffff91413b08)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91413acc   204  blr x17
0xffff91413ad0   208  ldur cp, [fp, #-8]
0xffff91413ad4   212  movz x0, #0x0
0xffff91413ad8   216  movz x1, #0x4b48
0xffff91413adc   220  movk x1, #0xe4, lsl #16
0xffff91413ae0   224  ldr x16, pc+48 (addr 0x0000ffff91413b10)    ;; code: STUB, CEntryStub, minor: 5
0xffff91413ae4   228  blr x16
0xffff91413ae8   232  str x0, [jssp, #16]
0xffff91413aec   236  ldr x16, pc+44 (addr 0x0000ffff91413b18)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91413af0   240  blr x16
0xffff91413af4   244  ldr lr, [jssp, #16]
0xffff91413af8   248  ldp xzr, fp, [jssp], #24
0xffff91413afc   252  b #-0x60 (addr 0xffff91413a9c)
0xffff91413b00   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91413b04   260  d63f03e0       constant
0xffff91413b08   264  91406820       constant
0xffff91413b0c   268  0000ffff       constant
0xffff91413b10   272  91406260       constant
0xffff91413b14   276  0000ffff       constant
0xffff91413b18   280  914068e0       constant
0xffff91413b1c   284  0000ffff       constant
0xffff91413b20   288  movz x16, #0x0
0xffff91413b24   292  sub csp, jssp, #0x10 (16)
0xffff91413b28   296  stp fp, lr, [jssp, #-16]!
0xffff91413b2c   300  bl #+0x14 (addr 0xffff91413b40)
0xffff91413b30   304  movz x16, #0x8
0xffff91413b34   308  sub csp, jssp, #0x10 (16)
0xffff91413b38   312  stp fp, lr, [jssp, #-16]!
0xffff91413b3c   316  bl #+0x4 (addr 0xffff91413b40)
0xffff91413b40   320  movz x17, #0xa00000000
0xffff91413b44   324  sub csp, jssp, #0x10 (16)
0xffff91413b48   328  stp x17, cp, [jssp, #-16]!
0xffff91413b4c   332  add fp, jssp, #0x10 (16)
0xffff91413b50   336  ldr x17, pc+24 (addr 0x0000ffff91413b68)    ;; lazy deoptimization bailout 0
0xffff91413b54   340  add x17, x17, x16
0xffff91413b58   344  br x17
0xffff91413b5c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413b60   352  d63f03e0       constant
0xffff91413b64   356  d503201f       constant
0xffff91413b68   360  91206000       constant
0xffff91413b6c   364  0000ffff       constant


Safepoints (size = 21)
0xffff91413ae8   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91413ac8  code target (STUB)  (0xffff91406820)
0xffff91413ae0  code target (STUB)  (0xffff91406260)
0xffff91413aec  code target (STUB)  (0xffff914068e0)
0xffff91413b00  constant pool (size 32)
0xffff91413b50  runtime entry
0xffff91413b5c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6585
type = NORMAL
name = BinaryOpICStub(MUL:Number*Number->Number)
compiler = crankshaft
Instructions (size = 389)
0xffff91413a00     0  tbz w1, #0, #+0x34 (addr 0xffff91413a34)
0xffff91413a04     4  ldur x16, [x1, #-1]
0xffff91413a08     8  ldr x17, [x26, #120]
0xffff91413a0c    12  cmp x16, x17
0xffff91413a10    16  b.ne #+0xc (addr 0xffff91413a1c)
0xffff91413a14    20  ldur d0, [x1, #7]
0xffff91413a18    24  b #+0x20 (addr 0xffff91413a38)
0xffff91413a1c    28  ldr x16, [x26, #40]
0xffff91413a20    32  cmp x1, x16
0xffff91413a24    36  b.ne #+0xfc (addr 0xffff91413b20)
0xffff91413a28    40  ldr x2, [x26, #928]
0xffff91413a2c    44  ldur d0, [x2, #7]
0xffff91413a30    48  b #+0x8 (addr 0xffff91413a38)
0xffff91413a34    52  scvtf d0, x1, #32
0xffff91413a38    56  tbz w0, #0, #+0x34 (addr 0xffff91413a6c)
0xffff91413a3c    60  ldur x16, [x0, #-1]
0xffff91413a40    64  ldr x17, [x26, #120]
0xffff91413a44    68  cmp x16, x17
0xffff91413a48    72  b.ne #+0xc (addr 0xffff91413a54)
0xffff91413a4c    76  ldur d1, [x0, #7]
0xffff91413a50    80  b #+0x20 (addr 0xffff91413a70)
0xffff91413a54    84  ldr x16, [x26, #40]
0xffff91413a58    88  cmp x0, x16
0xffff91413a5c    92  b.ne #+0xd4 (addr 0xffff91413b30)
0xffff91413a60    96  ldr x2, [x26, #928]
0xffff91413a64   100  ldur d1, [x2, #7]
0xffff91413a68   104  b #+0x8 (addr 0xffff91413a70)
0xffff91413a6c   108  scvtf d1, x0, #32
0xffff91413a70   112  fmul d0, d0, d1
0xffff91413a74   116  movz x1, #0xf2c0
0xffff91413a78   120  movk x1, #0x4117, lsl #16
0xffff91413a7c   124  ldp x2, x0, [x1]
0xffff91413a80   128  adds x16, x2, #0x10 (16)
0xffff91413a84   132  ccmp x16, x0, #nzCv, lo
0xffff91413a88   136  b.hi #+0x20 (addr 0xffff91413aa8)
0xffff91413a8c   140  str x16, [x1]
0xffff91413a90   144  ldr x1, [x26, #120]
0xffff91413a94   148  str x1, [x2]
0xffff91413a98   152  orr x2, x2, #0x1
0xffff91413a9c   156  stur d0, [x2, #7]
0xffff91413aa0   160  mov x0, x2
0xffff91413aa4   164  ret
0xffff91413aa8   168  sub csp, jssp, #0x10 (16)
0xffff91413aac   172  stp fp, lr, [jssp, #-16]!
0xffff91413ab0   176  movz fp, #0xa00000000
0xffff91413ab4   180  sub csp, jssp, #0x8 (8)
0xffff91413ab8   184  str fp, [jssp, #-8]!
0xffff91413abc   188  add fp, jssp, #0x8 (8)
0xffff91413ac0   192  movz x2, #0x0
0xffff91413ac4   196  mov x16, lr
0xffff91413ac8   200  ldr x17, pc+64 (addr 0x0000ffff91413b08)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91413acc   204  blr x17
0xffff91413ad0   208  ldur cp, [fp, #-8]
0xffff91413ad4   212  movz x0, #0x0
0xffff91413ad8   216  movz x1, #0x4b48
0xffff91413adc   220  movk x1, #0xe4, lsl #16
0xffff91413ae0   224  ldr x16, pc+48 (addr 0x0000ffff91413b10)    ;; code: STUB, CEntryStub, minor: 5
0xffff91413ae4   228  blr x16
0xffff91413ae8   232  str x0, [jssp, #16]
0xffff91413aec   236  ldr x16, pc+44 (addr 0x0000ffff91413b18)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91413af0   240  blr x16
0xffff91413af4   244  ldr lr, [jssp, #16]
0xffff91413af8   248  ldp xzr, fp, [jssp], #24
0xffff91413afc   252  b #-0x60 (addr 0xffff91413a9c)
0xffff91413b00   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91413b04   260  d63f03e0       constant
0xffff91413b08   264  91406820       constant
0xffff91413b0c   268  0000ffff       constant
0xffff91413b10   272  91406260       constant
0xffff91413b14   276  0000ffff       constant
0xffff91413b18   280  914068e0       constant
0xffff91413b1c   284  0000ffff       constant
0xffff91413b20   288  movz x16, #0x0
0xffff91413b24   292  sub csp, jssp, #0x10 (16)
0xffff91413b28   296  stp fp, lr, [jssp, #-16]!
0xffff91413b2c   300  bl #+0x14 (addr 0xffff91413b40)
0xffff91413b30   304  movz x16, #0x8
0xffff91413b34   308  sub csp, jssp, #0x10 (16)
0xffff91413b38   312  stp fp, lr, [jssp, #-16]!
0xffff91413b3c   316  bl #+0x4 (addr 0xffff91413b40)
0xffff91413b40   320  movz x17, #0xa00000000
0xffff91413b44   324  sub csp, jssp, #0x10 (16)
0xffff91413b48   328  stp x17, cp, [jssp, #-16]!
0xffff91413b4c   332  add fp, jssp, #0x10 (16)
0xffff91413b50   336  ldr x17, pc+24 (addr 0x0000ffff91413b68)    ;; lazy deoptimization bailout 0
0xffff91413b54   340  add x17, x17, x16
0xffff91413b58   344  br x17
0xffff91413b5c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413b60   352  d63f03e0       constant
0xffff91413b64   356  d503201f       constant
0xffff91413b68   360  91206000       constant
0xffff91413b6c   364  0000ffff       constant


Safepoints (size = 21)
0xffff91413ae8   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91413ac8  code target (STUB)  (0xffff91406820)
0xffff91413ae0  code target (STUB)  (0xffff91406260)
0xffff91413aec  code target (STUB)  (0xffff914068e0)
0xffff91413b00  constant pool (size 32)
0xffff91413b50  runtime entry
0xffff91413b5c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2489
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff91413c00     0  mov x2, x0
0xffff91413c04     4  tbnz w2, #0, #+0xf4 (addr 0xffff91413cf8)
0xffff91413c08     8  tbz w1, #0, #+0x34 (addr 0xffff91413c3c)
0xffff91413c0c    12  ldur x16, [x1, #-1]
0xffff91413c10    16  ldr x17, [x26, #120]
0xffff91413c14    20  cmp x16, x17
0xffff91413c18    24  b.ne #+0xc (addr 0xffff91413c24)
0xffff91413c1c    28  ldur d0, [x1, #7]
0xffff91413c20    32  b #+0x20 (addr 0xffff91413c40)
0xffff91413c24    36  ldr x16, [x26, #40]
0xffff91413c28    40  cmp x1, x16
0xffff91413c2c    44  b.ne #+0xdc (addr 0xffff91413d08)
0xffff91413c30    48  ldr x3, [x26, #928]
0xffff91413c34    52  ldur d0, [x3, #7]
0xffff91413c38    56  b #+0x8 (addr 0xffff91413c40)
0xffff91413c3c    60  scvtf d0, x1, #32
0xffff91413c40    64  scvtf d1, x2, #32
0xffff91413c44    68  fmul d0, d0, d1
0xffff91413c48    72  movz x1, #0xf2c0
0xffff91413c4c    76  movk x1, #0x4117, lsl #16
0xffff91413c50    80  ldp x2, x0, [x1]
0xffff91413c54    84  adds x16, x2, #0x10 (16)
0xffff91413c58    88  ccmp x16, x0, #nzCv, lo
0xffff91413c5c    92  b.hi #+0x20 (addr 0xffff91413c7c)
0xffff91413c60    96  str x16, [x1]
0xffff91413c64   100  ldr x1, [x26, #120]
0xffff91413c68   104  str x1, [x2]
0xffff91413c6c   108  orr x2, x2, #0x1
0xffff91413c70   112  stur d0, [x2, #7]
0xffff91413c74   116  mov x0, x2
0xffff91413c78   120  ret
0xffff91413c7c   124  sub csp, jssp, #0x10 (16)
0xffff91413c80   128  stp fp, lr, [jssp, #-16]!
0xffff91413c84   132  movz fp, #0xa00000000
0xffff91413c88   136  sub csp, jssp, #0x8 (8)
0xffff91413c8c   140  str fp, [jssp, #-8]!
0xffff91413c90   144  add fp, jssp, #0x8 (8)
0xffff91413c94   148  movz x2, #0x0
0xffff91413c98   152  mov x16, lr
0xffff91413c9c   156  ldr x17, pc+68 (addr 0x0000ffff91413ce0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91413ca0   160  blr x17
0xffff91413ca4   164  ldur cp, [fp, #-8]
0xffff91413ca8   168  movz x0, #0x0
0xffff91413cac   172  movz x1, #0x4b48
0xffff91413cb0   176  movk x1, #0xe4, lsl #16
0xffff91413cb4   180  ldr x16, pc+52 (addr 0x0000ffff91413ce8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91413cb8   184  blr x16
0xffff91413cbc   188  str x0, [jssp, #16]
0xffff91413cc0   192  ldr x16, pc+48 (addr 0x0000ffff91413cf0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91413cc4   196  blr x16
0xffff91413cc8   200  ldr lr, [jssp, #16]
0xffff91413ccc   204  ldp xzr, fp, [jssp], #24
0xffff91413cd0   208  b #-0x60 (addr 0xffff91413c70)
0xffff91413cd4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91413cd8   216  d63f03e0       constant
0xffff91413cdc   220  d503201f       constant
0xffff91413ce0   224  91406820       constant
0xffff91413ce4   228  0000ffff       constant
0xffff91413ce8   232  91406260       constant
0xffff91413cec   236  0000ffff       constant
0xffff91413cf0   240  914068e0       constant
0xffff91413cf4   244  0000ffff       constant
0xffff91413cf8   248  movz x16, #0x0
0xffff91413cfc   252  sub csp, jssp, #0x10 (16)
0xffff91413d00   256  stp fp, lr, [jssp, #-16]!
0xffff91413d04   260  bl #+0x14 (addr 0xffff91413d18)
0xffff91413d08   264  movz x16, #0x8
0xffff91413d0c   268  sub csp, jssp, #0x10 (16)
0xffff91413d10   272  stp fp, lr, [jssp, #-16]!
0xffff91413d14   276  bl #+0x4 (addr 0xffff91413d18)
0xffff91413d18   280  movz x17, #0xa00000000
0xffff91413d1c   284  sub csp, jssp, #0x10 (16)
0xffff91413d20   288  stp x17, cp, [jssp, #-16]!
0xffff91413d24   292  add fp, jssp, #0x10 (16)
0xffff91413d28   296  ldr x17, pc+24 (addr 0x0000ffff91413d40)    ;; lazy deoptimization bailout 0
0xffff91413d2c   300  add x17, x17, x16
0xffff91413d30   304  br x17
0xffff91413d34   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413d38   312  d63f03e0       constant
0xffff91413d3c   316  d503201f       constant
0xffff91413d40   320  91206000       constant
0xffff91413d44   324  0000ffff       constant


Safepoints (size = 21)
0xffff91413cbc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91413c9c  code target (STUB)  (0xffff91406820)
0xffff91413cb4  code target (STUB)  (0xffff91406260)
0xffff91413cc0  code target (STUB)  (0xffff914068e0)
0xffff91413cd4  constant pool (size 36)
0xffff91413d28  runtime entry
0xffff91413d34  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2489
type = NORMAL
name = BinaryOpICStub(MUL:Number*Smi->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff91413c00     0  mov x2, x0
0xffff91413c04     4  tbnz w2, #0, #+0xf4 (addr 0xffff91413cf8)
0xffff91413c08     8  tbz w1, #0, #+0x34 (addr 0xffff91413c3c)
0xffff91413c0c    12  ldur x16, [x1, #-1]
0xffff91413c10    16  ldr x17, [x26, #120]
0xffff91413c14    20  cmp x16, x17
0xffff91413c18    24  b.ne #+0xc (addr 0xffff91413c24)
0xffff91413c1c    28  ldur d0, [x1, #7]
0xffff91413c20    32  b #+0x20 (addr 0xffff91413c40)
0xffff91413c24    36  ldr x16, [x26, #40]
0xffff91413c28    40  cmp x1, x16
0xffff91413c2c    44  b.ne #+0xdc (addr 0xffff91413d08)
0xffff91413c30    48  ldr x3, [x26, #928]
0xffff91413c34    52  ldur d0, [x3, #7]
0xffff91413c38    56  b #+0x8 (addr 0xffff91413c40)
0xffff91413c3c    60  scvtf d0, x1, #32
0xffff91413c40    64  scvtf d1, x2, #32
0xffff91413c44    68  fmul d0, d0, d1
0xffff91413c48    72  movz x1, #0xf2c0
0xffff91413c4c    76  movk x1, #0x4117, lsl #16
0xffff91413c50    80  ldp x2, x0, [x1]
0xffff91413c54    84  adds x16, x2, #0x10 (16)
0xffff91413c58    88  ccmp x16, x0, #nzCv, lo
0xffff91413c5c    92  b.hi #+0x20 (addr 0xffff91413c7c)
0xffff91413c60    96  str x16, [x1]
0xffff91413c64   100  ldr x1, [x26, #120]
0xffff91413c68   104  str x1, [x2]
0xffff91413c6c   108  orr x2, x2, #0x1
0xffff91413c70   112  stur d0, [x2, #7]
0xffff91413c74   116  mov x0, x2
0xffff91413c78   120  ret
0xffff91413c7c   124  sub csp, jssp, #0x10 (16)
0xffff91413c80   128  stp fp, lr, [jssp, #-16]!
0xffff91413c84   132  movz fp, #0xa00000000
0xffff91413c88   136  sub csp, jssp, #0x8 (8)
0xffff91413c8c   140  str fp, [jssp, #-8]!
0xffff91413c90   144  add fp, jssp, #0x8 (8)
0xffff91413c94   148  movz x2, #0x0
0xffff91413c98   152  mov x16, lr
0xffff91413c9c   156  ldr x17, pc+68 (addr 0x0000ffff91413ce0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91413ca0   160  blr x17
0xffff91413ca4   164  ldur cp, [fp, #-8]
0xffff91413ca8   168  movz x0, #0x0
0xffff91413cac   172  movz x1, #0x4b48
0xffff91413cb0   176  movk x1, #0xe4, lsl #16
0xffff91413cb4   180  ldr x16, pc+52 (addr 0x0000ffff91413ce8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91413cb8   184  blr x16
0xffff91413cbc   188  str x0, [jssp, #16]
0xffff91413cc0   192  ldr x16, pc+48 (addr 0x0000ffff91413cf0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91413cc4   196  blr x16
0xffff91413cc8   200  ldr lr, [jssp, #16]
0xffff91413ccc   204  ldp xzr, fp, [jssp], #24
0xffff91413cd0   208  b #-0x60 (addr 0xffff91413c70)
0xffff91413cd4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91413cd8   216  d63f03e0       constant
0xffff91413cdc   220  d503201f       constant
0xffff91413ce0   224  91406820       constant
0xffff91413ce4   228  0000ffff       constant
0xffff91413ce8   232  91406260       constant
0xffff91413cec   236  0000ffff       constant
0xffff91413cf0   240  914068e0       constant
0xffff91413cf4   244  0000ffff       constant
0xffff91413cf8   248  movz x16, #0x0
0xffff91413cfc   252  sub csp, jssp, #0x10 (16)
0xffff91413d00   256  stp fp, lr, [jssp, #-16]!
0xffff91413d04   260  bl #+0x14 (addr 0xffff91413d18)
0xffff91413d08   264  movz x16, #0x8
0xffff91413d0c   268  sub csp, jssp, #0x10 (16)
0xffff91413d10   272  stp fp, lr, [jssp, #-16]!
0xffff91413d14   276  bl #+0x4 (addr 0xffff91413d18)
0xffff91413d18   280  movz x17, #0xa00000000
0xffff91413d1c   284  sub csp, jssp, #0x10 (16)
0xffff91413d20   288  stp x17, cp, [jssp, #-16]!
0xffff91413d24   292  add fp, jssp, #0x10 (16)
0xffff91413d28   296  ldr x17, pc+24 (addr 0x0000ffff91413d40)    ;; lazy deoptimization bailout 0
0xffff91413d2c   300  add x17, x17, x16
0xffff91413d30   304  br x17
0xffff91413d34   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413d38   312  d63f03e0       constant
0xffff91413d3c   316  d503201f       constant
0xffff91413d40   320  91206000       constant
0xffff91413d44   324  0000ffff       constant


Safepoints (size = 21)
0xffff91413cbc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91413c9c  code target (STUB)  (0xffff91406820)
0xffff91413cb4  code target (STUB)  (0xffff91406260)
0xffff91413cc0  code target (STUB)  (0xffff914068e0)
0xffff91413cd4  constant pool (size 36)
0xffff91413d28  runtime entry
0xffff91413d34  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4265
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 160)
0xffff91413dc0     0  mov x2, x1
0xffff91413dc4     4  tbnz w2, #0, #+0x34 (addr 0xffff91413df8)
0xffff91413dc8     8  mov x3, x0
0xffff91413dcc    12  tbnz w3, #0, #+0x3c (addr 0xffff91413e08)
0xffff91413dd0    16  cmp x3, #0x0 (0)
0xffff91413dd4    20  ccmp x2, #0, #nZcv, ne
0xffff91413dd8    24  ccmn x3, x2, #nzcv, eq
0xffff91413ddc    28  b.mi #+0x3c (addr 0xffff91413e18)
0xffff91413de0    32  smulh x2, x3, x2
0xffff91413de4    36  cmp x2, w2, sxtw
0xffff91413de8    40  lsl x2, x2, #32
0xffff91413dec    44  b.ne #+0x2c (addr 0xffff91413e18)
0xffff91413df0    48  mov x0, x2
0xffff91413df4    52  ret
0xffff91413df8    56  movz x16, #0x0
0xffff91413dfc    60  sub csp, jssp, #0x10 (16)
0xffff91413e00    64  stp fp, lr, [jssp, #-16]!
0xffff91413e04    68  bl #+0x24 (addr 0xffff91413e28)
0xffff91413e08    72  movz x16, #0x8
0xffff91413e0c    76  sub csp, jssp, #0x10 (16)
0xffff91413e10    80  stp fp, lr, [jssp, #-16]!
0xffff91413e14    84  bl #+0x14 (addr 0xffff91413e28)
0xffff91413e18    88  movz x16, #0x10
0xffff91413e1c    92  sub csp, jssp, #0x10 (16)
0xffff91413e20    96  stp fp, lr, [jssp, #-16]!
0xffff91413e24   100  bl #+0x4 (addr 0xffff91413e28)
0xffff91413e28   104  movz x17, #0xa00000000
0xffff91413e2c   108  sub csp, jssp, #0x10 (16)
0xffff91413e30   112  stp x17, cp, [jssp, #-16]!
0xffff91413e34   116  add fp, jssp, #0x10 (16)
0xffff91413e38   120  ldr x17, pc+24 (addr 0x0000ffff91413e50)    ;; lazy deoptimization bailout 0
0xffff91413e3c   124  add x17, x17, x16
0xffff91413e40   128  br x17
0xffff91413e44   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413e48   136  d63f03e0       constant
0xffff91413e4c   140  d503201f       constant
0xffff91413e50   144  91206000       constant
0xffff91413e54   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91413e38  runtime entry
0xffff91413e44  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4265
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 160)
0xffff91413dc0     0  mov x2, x1
0xffff91413dc4     4  tbnz w2, #0, #+0x34 (addr 0xffff91413df8)
0xffff91413dc8     8  mov x3, x0
0xffff91413dcc    12  tbnz w3, #0, #+0x3c (addr 0xffff91413e08)
0xffff91413dd0    16  cmp x3, #0x0 (0)
0xffff91413dd4    20  ccmp x2, #0, #nZcv, ne
0xffff91413dd8    24  ccmn x3, x2, #nzcv, eq
0xffff91413ddc    28  b.mi #+0x3c (addr 0xffff91413e18)
0xffff91413de0    32  smulh x2, x3, x2
0xffff91413de4    36  cmp x2, w2, sxtw
0xffff91413de8    40  lsl x2, x2, #32
0xffff91413dec    44  b.ne #+0x2c (addr 0xffff91413e18)
0xffff91413df0    48  mov x0, x2
0xffff91413df4    52  ret
0xffff91413df8    56  movz x16, #0x0
0xffff91413dfc    60  sub csp, jssp, #0x10 (16)
0xffff91413e00    64  stp fp, lr, [jssp, #-16]!
0xffff91413e04    68  bl #+0x24 (addr 0xffff91413e28)
0xffff91413e08    72  movz x16, #0x8
0xffff91413e0c    76  sub csp, jssp, #0x10 (16)
0xffff91413e10    80  stp fp, lr, [jssp, #-16]!
0xffff91413e14    84  bl #+0x14 (addr 0xffff91413e28)
0xffff91413e18    88  movz x16, #0x10
0xffff91413e1c    92  sub csp, jssp, #0x10 (16)
0xffff91413e20    96  stp fp, lr, [jssp, #-16]!
0xffff91413e24   100  bl #+0x4 (addr 0xffff91413e28)
0xffff91413e28   104  movz x17, #0xa00000000
0xffff91413e2c   108  sub csp, jssp, #0x10 (16)
0xffff91413e30   112  stp x17, cp, [jssp, #-16]!
0xffff91413e34   116  add fp, jssp, #0x10 (16)
0xffff91413e38   120  ldr x17, pc+24 (addr 0x0000ffff91413e50)    ;; lazy deoptimization bailout 0
0xffff91413e3c   124  add x17, x17, x16
0xffff91413e40   128  br x17
0xffff91413e44   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413e48   136  d63f03e0       constant
0xffff91413e4c   140  d503201f       constant
0xffff91413e50   144  91206000       constant
0xffff91413e54   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91413e38  runtime entry
0xffff91413e44  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4281
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff91413ec0     0  mov x2, x1
0xffff91413ec4     4  tbnz w2, #0, #+0xc4 (addr 0xffff91413f88)
0xffff91413ec8     8  mov x3, x0
0xffff91413ecc    12  tbnz w3, #0, #+0xcc (addr 0xffff91413f98)
0xffff91413ed0    16  scvtf d0, x2, #32
0xffff91413ed4    20  scvtf d1, x3, #32
0xffff91413ed8    24  fmul d0, d0, d1
0xffff91413edc    28  movz x1, #0xf2c0
0xffff91413ee0    32  movk x1, #0x4117, lsl #16
0xffff91413ee4    36  ldp x2, x0, [x1]
0xffff91413ee8    40  adds x16, x2, #0x10 (16)
0xffff91413eec    44  ccmp x16, x0, #nzCv, lo
0xffff91413ef0    48  b.hi #+0x20 (addr 0xffff91413f10)
0xffff91413ef4    52  str x16, [x1]
0xffff91413ef8    56  ldr x1, [x26, #120]
0xffff91413efc    60  str x1, [x2]
0xffff91413f00    64  orr x2, x2, #0x1
0xffff91413f04    68  stur d0, [x2, #7]
0xffff91413f08    72  mov x0, x2
0xffff91413f0c    76  ret
0xffff91413f10    80  sub csp, jssp, #0x10 (16)
0xffff91413f14    84  stp fp, lr, [jssp, #-16]!
0xffff91413f18    88  movz fp, #0xa00000000
0xffff91413f1c    92  sub csp, jssp, #0x8 (8)
0xffff91413f20    96  str fp, [jssp, #-8]!
0xffff91413f24   100  add fp, jssp, #0x8 (8)
0xffff91413f28   104  movz x2, #0x0
0xffff91413f2c   108  mov x16, lr
0xffff91413f30   112  ldr x17, pc+64 (addr 0x0000ffff91413f70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91413f34   116  blr x17
0xffff91413f38   120  ldur cp, [fp, #-8]
0xffff91413f3c   124  movz x0, #0x0
0xffff91413f40   128  movz x1, #0x4b48
0xffff91413f44   132  movk x1, #0xe4, lsl #16
0xffff91413f48   136  ldr x16, pc+48 (addr 0x0000ffff91413f78)    ;; code: STUB, CEntryStub, minor: 5
0xffff91413f4c   140  blr x16
0xffff91413f50   144  str x0, [jssp, #16]
0xffff91413f54   148  ldr x16, pc+44 (addr 0x0000ffff91413f80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91413f58   152  blr x16
0xffff91413f5c   156  ldr lr, [jssp, #16]
0xffff91413f60   160  ldp xzr, fp, [jssp], #24
0xffff91413f64   164  b #-0x60 (addr 0xffff91413f04)
0xffff91413f68   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91413f6c   172  d63f03e0       constant
0xffff91413f70   176  91406820       constant
0xffff91413f74   180  0000ffff       constant
0xffff91413f78   184  91406260       constant
0xffff91413f7c   188  0000ffff       constant
0xffff91413f80   192  914068e0       constant
0xffff91413f84   196  0000ffff       constant
0xffff91413f88   200  movz x16, #0x0
0xffff91413f8c   204  sub csp, jssp, #0x10 (16)
0xffff91413f90   208  stp fp, lr, [jssp, #-16]!
0xffff91413f94   212  bl #+0x14 (addr 0xffff91413fa8)
0xffff91413f98   216  movz x16, #0x8
0xffff91413f9c   220  sub csp, jssp, #0x10 (16)
0xffff91413fa0   224  stp fp, lr, [jssp, #-16]!
0xffff91413fa4   228  bl #+0x4 (addr 0xffff91413fa8)
0xffff91413fa8   232  movz x17, #0xa00000000
0xffff91413fac   236  sub csp, jssp, #0x10 (16)
0xffff91413fb0   240  stp x17, cp, [jssp, #-16]!
0xffff91413fb4   244  add fp, jssp, #0x10 (16)
0xffff91413fb8   248  ldr x17, pc+24 (addr 0x0000ffff91413fd0)    ;; lazy deoptimization bailout 0
0xffff91413fbc   252  add x17, x17, x16
0xffff91413fc0   256  br x17
0xffff91413fc4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413fc8   264  d63f03e0       constant
0xffff91413fcc   268  d503201f       constant
0xffff91413fd0   272  91206000       constant
0xffff91413fd4   276  0000ffff       constant


Safepoints (size = 21)
0xffff91413f50   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91413f30  code target (STUB)  (0xffff91406820)
0xffff91413f48  code target (STUB)  (0xffff91406260)
0xffff91413f54  code target (STUB)  (0xffff914068e0)
0xffff91413f68  constant pool (size 32)
0xffff91413fb8  runtime entry
0xffff91413fc4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4281
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff91413ec0     0  mov x2, x1
0xffff91413ec4     4  tbnz w2, #0, #+0xc4 (addr 0xffff91413f88)
0xffff91413ec8     8  mov x3, x0
0xffff91413ecc    12  tbnz w3, #0, #+0xcc (addr 0xffff91413f98)
0xffff91413ed0    16  scvtf d0, x2, #32
0xffff91413ed4    20  scvtf d1, x3, #32
0xffff91413ed8    24  fmul d0, d0, d1
0xffff91413edc    28  movz x1, #0xf2c0
0xffff91413ee0    32  movk x1, #0x4117, lsl #16
0xffff91413ee4    36  ldp x2, x0, [x1]
0xffff91413ee8    40  adds x16, x2, #0x10 (16)
0xffff91413eec    44  ccmp x16, x0, #nzCv, lo
0xffff91413ef0    48  b.hi #+0x20 (addr 0xffff91413f10)
0xffff91413ef4    52  str x16, [x1]
0xffff91413ef8    56  ldr x1, [x26, #120]
0xffff91413efc    60  str x1, [x2]
0xffff91413f00    64  orr x2, x2, #0x1
0xffff91413f04    68  stur d0, [x2, #7]
0xffff91413f08    72  mov x0, x2
0xffff91413f0c    76  ret
0xffff91413f10    80  sub csp, jssp, #0x10 (16)
0xffff91413f14    84  stp fp, lr, [jssp, #-16]!
0xffff91413f18    88  movz fp, #0xa00000000
0xffff91413f1c    92  sub csp, jssp, #0x8 (8)
0xffff91413f20    96  str fp, [jssp, #-8]!
0xffff91413f24   100  add fp, jssp, #0x8 (8)
0xffff91413f28   104  movz x2, #0x0
0xffff91413f2c   108  mov x16, lr
0xffff91413f30   112  ldr x17, pc+64 (addr 0x0000ffff91413f70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91413f34   116  blr x17
0xffff91413f38   120  ldur cp, [fp, #-8]
0xffff91413f3c   124  movz x0, #0x0
0xffff91413f40   128  movz x1, #0x4b48
0xffff91413f44   132  movk x1, #0xe4, lsl #16
0xffff91413f48   136  ldr x16, pc+48 (addr 0x0000ffff91413f78)    ;; code: STUB, CEntryStub, minor: 5
0xffff91413f4c   140  blr x16
0xffff91413f50   144  str x0, [jssp, #16]
0xffff91413f54   148  ldr x16, pc+44 (addr 0x0000ffff91413f80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91413f58   152  blr x16
0xffff91413f5c   156  ldr lr, [jssp, #16]
0xffff91413f60   160  ldp xzr, fp, [jssp], #24
0xffff91413f64   164  b #-0x60 (addr 0xffff91413f04)
0xffff91413f68   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91413f6c   172  d63f03e0       constant
0xffff91413f70   176  91406820       constant
0xffff91413f74   180  0000ffff       constant
0xffff91413f78   184  91406260       constant
0xffff91413f7c   188  0000ffff       constant
0xffff91413f80   192  914068e0       constant
0xffff91413f84   196  0000ffff       constant
0xffff91413f88   200  movz x16, #0x0
0xffff91413f8c   204  sub csp, jssp, #0x10 (16)
0xffff91413f90   208  stp fp, lr, [jssp, #-16]!
0xffff91413f94   212  bl #+0x14 (addr 0xffff91413fa8)
0xffff91413f98   216  movz x16, #0x8
0xffff91413f9c   220  sub csp, jssp, #0x10 (16)
0xffff91413fa0   224  stp fp, lr, [jssp, #-16]!
0xffff91413fa4   228  bl #+0x4 (addr 0xffff91413fa8)
0xffff91413fa8   232  movz x17, #0xa00000000
0xffff91413fac   236  sub csp, jssp, #0x10 (16)
0xffff91413fb0   240  stp x17, cp, [jssp, #-16]!
0xffff91413fb4   244  add fp, jssp, #0x10 (16)
0xffff91413fb8   248  ldr x17, pc+24 (addr 0x0000ffff91413fd0)    ;; lazy deoptimization bailout 0
0xffff91413fbc   252  add x17, x17, x16
0xffff91413fc0   256  br x17
0xffff91413fc4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91413fc8   264  d63f03e0       constant
0xffff91413fcc   268  d503201f       constant
0xffff91413fd0   272  91206000       constant
0xffff91413fd4   276  0000ffff       constant


Safepoints (size = 21)
0xffff91413f50   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91413f30  code target (STUB)  (0xffff91406820)
0xffff91413f48  code target (STUB)  (0xffff91406260)
0xffff91413f54  code target (STUB)  (0xffff914068e0)
0xffff91413f68  constant pool (size 32)
0xffff91413fb8  runtime entry
0xffff91413fc4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6329
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff91414060     0  mov x2, x1
0xffff91414064     4  tbnz w2, #0, #+0xf4 (addr 0xffff91414158)
0xffff91414068     8  tbz w0, #0, #+0x34 (addr 0xffff9141409c)
0xffff9141406c    12  ldur x16, [x0, #-1]
0xffff91414070    16  ldr x17, [x26, #120]
0xffff91414074    20  cmp x16, x17
0xffff91414078    24  b.ne #+0xc (addr 0xffff91414084)
0xffff9141407c    28  ldur d0, [x0, #7]
0xffff91414080    32  b #+0x20 (addr 0xffff914140a0)
0xffff91414084    36  ldr x16, [x26, #40]
0xffff91414088    40  cmp x0, x16
0xffff9141408c    44  b.ne #+0xdc (addr 0xffff91414168)
0xffff91414090    48  ldr x3, [x26, #928]
0xffff91414094    52  ldur d0, [x3, #7]
0xffff91414098    56  b #+0x8 (addr 0xffff914140a0)
0xffff9141409c    60  scvtf d0, x0, #32
0xffff914140a0    64  scvtf d1, x2, #32
0xffff914140a4    68  fmul d0, d1, d0
0xffff914140a8    72  movz x1, #0xf2c0
0xffff914140ac    76  movk x1, #0x4117, lsl #16
0xffff914140b0    80  ldp x2, x0, [x1]
0xffff914140b4    84  adds x16, x2, #0x10 (16)
0xffff914140b8    88  ccmp x16, x0, #nzCv, lo
0xffff914140bc    92  b.hi #+0x20 (addr 0xffff914140dc)
0xffff914140c0    96  str x16, [x1]
0xffff914140c4   100  ldr x1, [x26, #120]
0xffff914140c8   104  str x1, [x2]
0xffff914140cc   108  orr x2, x2, #0x1
0xffff914140d0   112  stur d0, [x2, #7]
0xffff914140d4   116  mov x0, x2
0xffff914140d8   120  ret
0xffff914140dc   124  sub csp, jssp, #0x10 (16)
0xffff914140e0   128  stp fp, lr, [jssp, #-16]!
0xffff914140e4   132  movz fp, #0xa00000000
0xffff914140e8   136  sub csp, jssp, #0x8 (8)
0xffff914140ec   140  str fp, [jssp, #-8]!
0xffff914140f0   144  add fp, jssp, #0x8 (8)
0xffff914140f4   148  movz x2, #0x0
0xffff914140f8   152  mov x16, lr
0xffff914140fc   156  ldr x17, pc+68 (addr 0x0000ffff91414140)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91414100   160  blr x17
0xffff91414104   164  ldur cp, [fp, #-8]
0xffff91414108   168  movz x0, #0x0
0xffff9141410c   172  movz x1, #0x4b48
0xffff91414110   176  movk x1, #0xe4, lsl #16
0xffff91414114   180  ldr x16, pc+52 (addr 0x0000ffff91414148)    ;; code: STUB, CEntryStub, minor: 5
0xffff91414118   184  blr x16
0xffff9141411c   188  str x0, [jssp, #16]
0xffff91414120   192  ldr x16, pc+48 (addr 0x0000ffff91414150)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91414124   196  blr x16
0xffff91414128   200  ldr lr, [jssp, #16]
0xffff9141412c   204  ldp xzr, fp, [jssp], #24
0xffff91414130   208  b #-0x60 (addr 0xffff914140d0)
0xffff91414134   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91414138   216  d63f03e0       constant
0xffff9141413c   220  d503201f       constant
0xffff91414140   224  91406820       constant
0xffff91414144   228  0000ffff       constant
0xffff91414148   232  91406260       constant
0xffff9141414c   236  0000ffff       constant
0xffff91414150   240  914068e0       constant
0xffff91414154   244  0000ffff       constant
0xffff91414158   248  movz x16, #0x0
0xffff9141415c   252  sub csp, jssp, #0x10 (16)
0xffff91414160   256  stp fp, lr, [jssp, #-16]!
0xffff91414164   260  bl #+0x14 (addr 0xffff91414178)
0xffff91414168   264  movz x16, #0x8
0xffff9141416c   268  sub csp, jssp, #0x10 (16)
0xffff91414170   272  stp fp, lr, [jssp, #-16]!
0xffff91414174   276  bl #+0x4 (addr 0xffff91414178)
0xffff91414178   280  movz x17, #0xa00000000
0xffff9141417c   284  sub csp, jssp, #0x10 (16)
0xffff91414180   288  stp x17, cp, [jssp, #-16]!
0xffff91414184   292  add fp, jssp, #0x10 (16)
0xffff91414188   296  ldr x17, pc+24 (addr 0x0000ffff914141a0)    ;; lazy deoptimization bailout 0
0xffff9141418c   300  add x17, x17, x16
0xffff91414190   304  br x17
0xffff91414194   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91414198   312  d63f03e0       constant
0xffff9141419c   316  d503201f       constant
0xffff914141a0   320  91206000       constant
0xffff914141a4   324  0000ffff       constant


Safepoints (size = 21)
0xffff9141411c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff914140fc  code target (STUB)  (0xffff91406820)
0xffff91414114  code target (STUB)  (0xffff91406260)
0xffff91414120  code target (STUB)  (0xffff914068e0)
0xffff91414134  constant pool (size 36)
0xffff91414188  runtime entry
0xffff91414194  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6329
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff91414060     0  mov x2, x1
0xffff91414064     4  tbnz w2, #0, #+0xf4 (addr 0xffff91414158)
0xffff91414068     8  tbz w0, #0, #+0x34 (addr 0xffff9141409c)
0xffff9141406c    12  ldur x16, [x0, #-1]
0xffff91414070    16  ldr x17, [x26, #120]
0xffff91414074    20  cmp x16, x17
0xffff91414078    24  b.ne #+0xc (addr 0xffff91414084)
0xffff9141407c    28  ldur d0, [x0, #7]
0xffff91414080    32  b #+0x20 (addr 0xffff914140a0)
0xffff91414084    36  ldr x16, [x26, #40]
0xffff91414088    40  cmp x0, x16
0xffff9141408c    44  b.ne #+0xdc (addr 0xffff91414168)
0xffff91414090    48  ldr x3, [x26, #928]
0xffff91414094    52  ldur d0, [x3, #7]
0xffff91414098    56  b #+0x8 (addr 0xffff914140a0)
0xffff9141409c    60  scvtf d0, x0, #32
0xffff914140a0    64  scvtf d1, x2, #32
0xffff914140a4    68  fmul d0, d1, d0
0xffff914140a8    72  movz x1, #0xf2c0
0xffff914140ac    76  movk x1, #0x4117, lsl #16
0xffff914140b0    80  ldp x2, x0, [x1]
0xffff914140b4    84  adds x16, x2, #0x10 (16)
0xffff914140b8    88  ccmp x16, x0, #nzCv, lo
0xffff914140bc    92  b.hi #+0x20 (addr 0xffff914140dc)
0xffff914140c0    96  str x16, [x1]
0xffff914140c4   100  ldr x1, [x26, #120]
0xffff914140c8   104  str x1, [x2]
0xffff914140cc   108  orr x2, x2, #0x1
0xffff914140d0   112  stur d0, [x2, #7]
0xffff914140d4   116  mov x0, x2
0xffff914140d8   120  ret
0xffff914140dc   124  sub csp, jssp, #0x10 (16)
0xffff914140e0   128  stp fp, lr, [jssp, #-16]!
0xffff914140e4   132  movz fp, #0xa00000000
0xffff914140e8   136  sub csp, jssp, #0x8 (8)
0xffff914140ec   140  str fp, [jssp, #-8]!
0xffff914140f0   144  add fp, jssp, #0x8 (8)
0xffff914140f4   148  movz x2, #0x0
0xffff914140f8   152  mov x16, lr
0xffff914140fc   156  ldr x17, pc+68 (addr 0x0000ffff91414140)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91414100   160  blr x17
0xffff91414104   164  ldur cp, [fp, #-8]
0xffff91414108   168  movz x0, #0x0
0xffff9141410c   172  movz x1, #0x4b48
0xffff91414110   176  movk x1, #0xe4, lsl #16
0xffff91414114   180  ldr x16, pc+52 (addr 0x0000ffff91414148)    ;; code: STUB, CEntryStub, minor: 5
0xffff91414118   184  blr x16
0xffff9141411c   188  str x0, [jssp, #16]
0xffff91414120   192  ldr x16, pc+48 (addr 0x0000ffff91414150)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91414124   196  blr x16
0xffff91414128   200  ldr lr, [jssp, #16]
0xffff9141412c   204  ldp xzr, fp, [jssp], #24
0xffff91414130   208  b #-0x60 (addr 0xffff914140d0)
0xffff91414134   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91414138   216  d63f03e0       constant
0xffff9141413c   220  d503201f       constant
0xffff91414140   224  91406820       constant
0xffff91414144   228  0000ffff       constant
0xffff91414148   232  91406260       constant
0xffff9141414c   236  0000ffff       constant
0xffff91414150   240  914068e0       constant
0xffff91414154   244  0000ffff       constant
0xffff91414158   248  movz x16, #0x0
0xffff9141415c   252  sub csp, jssp, #0x10 (16)
0xffff91414160   256  stp fp, lr, [jssp, #-16]!
0xffff91414164   260  bl #+0x14 (addr 0xffff91414178)
0xffff91414168   264  movz x16, #0x8
0xffff9141416c   268  sub csp, jssp, #0x10 (16)
0xffff91414170   272  stp fp, lr, [jssp, #-16]!
0xffff91414174   276  bl #+0x4 (addr 0xffff91414178)
0xffff91414178   280  movz x17, #0xa00000000
0xffff9141417c   284  sub csp, jssp, #0x10 (16)
0xffff91414180   288  stp x17, cp, [jssp, #-16]!
0xffff91414184   292  add fp, jssp, #0x10 (16)
0xffff91414188   296  ldr x17, pc+24 (addr 0x0000ffff914141a0)    ;; lazy deoptimization bailout 0
0xffff9141418c   300  add x17, x17, x16
0xffff91414190   304  br x17
0xffff91414194   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91414198   312  d63f03e0       constant
0xffff9141419c   316  d503201f       constant
0xffff914141a0   320  91206000       constant
0xffff914141a4   324  0000ffff       constant


Safepoints (size = 21)
0xffff9141411c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff914140fc  code target (STUB)  (0xffff91406820)
0xffff91414114  code target (STUB)  (0xffff91406260)
0xffff91414120  code target (STUB)  (0xffff914068e0)
0xffff91414134  constant pool (size 36)
0xffff91414188  runtime entry
0xffff91414194  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2217
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 160)
0xffff91414220     0  mov x2, x1
0xffff91414224     4  tbnz w2, #0, #+0x34 (addr 0xffff91414258)
0xffff91414228     8  mov x3, x0
0xffff9141422c    12  tbnz w3, #0, #+0x3c (addr 0xffff91414268)
0xffff91414230    16  cmp x3, #0x0 (0)
0xffff91414234    20  ccmp x2, #0, #nZcv, ne
0xffff91414238    24  ccmn x3, x2, #nzcv, eq
0xffff9141423c    28  b.mi #+0x3c (addr 0xffff91414278)
0xffff91414240    32  smulh x2, x3, x2
0xffff91414244    36  cmp x2, w2, sxtw
0xffff91414248    40  lsl x2, x2, #32
0xffff9141424c    44  b.ne #+0x2c (addr 0xffff91414278)
0xffff91414250    48  mov x0, x2
0xffff91414254    52  ret
0xffff91414258    56  movz x16, #0x0
0xffff9141425c    60  sub csp, jssp, #0x10 (16)
0xffff91414260    64  stp fp, lr, [jssp, #-16]!
0xffff91414264    68  bl #+0x24 (addr 0xffff91414288)
0xffff91414268    72  movz x16, #0x8
0xffff9141426c    76  sub csp, jssp, #0x10 (16)
0xffff91414270    80  stp fp, lr, [jssp, #-16]!
0xffff91414274    84  bl #+0x14 (addr 0xffff91414288)
0xffff91414278    88  movz x16, #0x10
0xffff9141427c    92  sub csp, jssp, #0x10 (16)
0xffff91414280    96  stp fp, lr, [jssp, #-16]!
0xffff91414284   100  bl #+0x4 (addr 0xffff91414288)
0xffff91414288   104  movz x17, #0xa00000000
0xffff9141428c   108  sub csp, jssp, #0x10 (16)
0xffff91414290   112  stp x17, cp, [jssp, #-16]!
0xffff91414294   116  add fp, jssp, #0x10 (16)
0xffff91414298   120  ldr x17, pc+24 (addr 0x0000ffff914142b0)    ;; lazy deoptimization bailout 0
0xffff9141429c   124  add x17, x17, x16
0xffff914142a0   128  br x17
0xffff914142a4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914142a8   136  d63f03e0       constant
0xffff914142ac   140  d503201f       constant
0xffff914142b0   144  91206000       constant
0xffff914142b4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414298  runtime entry
0xffff914142a4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2217
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Smi->Int32)
compiler = crankshaft
Instructions (size = 160)
0xffff91414220     0  mov x2, x1
0xffff91414224     4  tbnz w2, #0, #+0x34 (addr 0xffff91414258)
0xffff91414228     8  mov x3, x0
0xffff9141422c    12  tbnz w3, #0, #+0x3c (addr 0xffff91414268)
0xffff91414230    16  cmp x3, #0x0 (0)
0xffff91414234    20  ccmp x2, #0, #nZcv, ne
0xffff91414238    24  ccmn x3, x2, #nzcv, eq
0xffff9141423c    28  b.mi #+0x3c (addr 0xffff91414278)
0xffff91414240    32  smulh x2, x3, x2
0xffff91414244    36  cmp x2, w2, sxtw
0xffff91414248    40  lsl x2, x2, #32
0xffff9141424c    44  b.ne #+0x2c (addr 0xffff91414278)
0xffff91414250    48  mov x0, x2
0xffff91414254    52  ret
0xffff91414258    56  movz x16, #0x0
0xffff9141425c    60  sub csp, jssp, #0x10 (16)
0xffff91414260    64  stp fp, lr, [jssp, #-16]!
0xffff91414264    68  bl #+0x24 (addr 0xffff91414288)
0xffff91414268    72  movz x16, #0x8
0xffff9141426c    76  sub csp, jssp, #0x10 (16)
0xffff91414270    80  stp fp, lr, [jssp, #-16]!
0xffff91414274    84  bl #+0x14 (addr 0xffff91414288)
0xffff91414278    88  movz x16, #0x10
0xffff9141427c    92  sub csp, jssp, #0x10 (16)
0xffff91414280    96  stp fp, lr, [jssp, #-16]!
0xffff91414284   100  bl #+0x4 (addr 0xffff91414288)
0xffff91414288   104  movz x17, #0xa00000000
0xffff9141428c   108  sub csp, jssp, #0x10 (16)
0xffff91414290   112  stp x17, cp, [jssp, #-16]!
0xffff91414294   116  add fp, jssp, #0x10 (16)
0xffff91414298   120  ldr x17, pc+24 (addr 0x0000ffff914142b0)    ;; lazy deoptimization bailout 0
0xffff9141429c   124  add x17, x17, x16
0xffff914142a0   128  br x17
0xffff914142a4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914142a8   136  d63f03e0       constant
0xffff914142ac   140  d503201f       constant
0xffff914142b0   144  91206000       constant
0xffff914142b4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414298  runtime entry
0xffff914142a4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2233
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff91414320     0  mov x2, x1
0xffff91414324     4  tbnz w2, #0, #+0xc4 (addr 0xffff914143e8)
0xffff91414328     8  mov x3, x0
0xffff9141432c    12  tbnz w3, #0, #+0xcc (addr 0xffff914143f8)
0xffff91414330    16  scvtf d0, x2, #32
0xffff91414334    20  scvtf d1, x3, #32
0xffff91414338    24  fmul d0, d0, d1
0xffff9141433c    28  movz x1, #0xf2c0
0xffff91414340    32  movk x1, #0x4117, lsl #16
0xffff91414344    36  ldp x2, x0, [x1]
0xffff91414348    40  adds x16, x2, #0x10 (16)
0xffff9141434c    44  ccmp x16, x0, #nzCv, lo
0xffff91414350    48  b.hi #+0x20 (addr 0xffff91414370)
0xffff91414354    52  str x16, [x1]
0xffff91414358    56  ldr x1, [x26, #120]
0xffff9141435c    60  str x1, [x2]
0xffff91414360    64  orr x2, x2, #0x1
0xffff91414364    68  stur d0, [x2, #7]
0xffff91414368    72  mov x0, x2
0xffff9141436c    76  ret
0xffff91414370    80  sub csp, jssp, #0x10 (16)
0xffff91414374    84  stp fp, lr, [jssp, #-16]!
0xffff91414378    88  movz fp, #0xa00000000
0xffff9141437c    92  sub csp, jssp, #0x8 (8)
0xffff91414380    96  str fp, [jssp, #-8]!
0xffff91414384   100  add fp, jssp, #0x8 (8)
0xffff91414388   104  movz x2, #0x0
0xffff9141438c   108  mov x16, lr
0xffff91414390   112  ldr x17, pc+64 (addr 0x0000ffff914143d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91414394   116  blr x17
0xffff91414398   120  ldur cp, [fp, #-8]
0xffff9141439c   124  movz x0, #0x0
0xffff914143a0   128  movz x1, #0x4b48
0xffff914143a4   132  movk x1, #0xe4, lsl #16
0xffff914143a8   136  ldr x16, pc+48 (addr 0x0000ffff914143d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff914143ac   140  blr x16
0xffff914143b0   144  str x0, [jssp, #16]
0xffff914143b4   148  ldr x16, pc+44 (addr 0x0000ffff914143e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914143b8   152  blr x16
0xffff914143bc   156  ldr lr, [jssp, #16]
0xffff914143c0   160  ldp xzr, fp, [jssp], #24
0xffff914143c4   164  b #-0x60 (addr 0xffff91414364)
0xffff914143c8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914143cc   172  d63f03e0       constant
0xffff914143d0   176  91406820       constant
0xffff914143d4   180  0000ffff       constant
0xffff914143d8   184  91406260       constant
0xffff914143dc   188  0000ffff       constant
0xffff914143e0   192  914068e0       constant
0xffff914143e4   196  0000ffff       constant
0xffff914143e8   200  movz x16, #0x0
0xffff914143ec   204  sub csp, jssp, #0x10 (16)
0xffff914143f0   208  stp fp, lr, [jssp, #-16]!
0xffff914143f4   212  bl #+0x14 (addr 0xffff91414408)
0xffff914143f8   216  movz x16, #0x8
0xffff914143fc   220  sub csp, jssp, #0x10 (16)
0xffff91414400   224  stp fp, lr, [jssp, #-16]!
0xffff91414404   228  bl #+0x4 (addr 0xffff91414408)
0xffff91414408   232  movz x17, #0xa00000000
0xffff9141440c   236  sub csp, jssp, #0x10 (16)
0xffff91414410   240  stp x17, cp, [jssp, #-16]!
0xffff91414414   244  add fp, jssp, #0x10 (16)
0xffff91414418   248  ldr x17, pc+24 (addr 0x0000ffff91414430)    ;; lazy deoptimization bailout 0
0xffff9141441c   252  add x17, x17, x16
0xffff91414420   256  br x17
0xffff91414424   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91414428   264  d63f03e0       constant
0xffff9141442c   268  d503201f       constant
0xffff91414430   272  91206000       constant
0xffff91414434   276  0000ffff       constant


Safepoints (size = 21)
0xffff914143b0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91414390  code target (STUB)  (0xffff91406820)
0xffff914143a8  code target (STUB)  (0xffff91406260)
0xffff914143b4  code target (STUB)  (0xffff914068e0)
0xffff914143c8  constant pool (size 32)
0xffff91414418  runtime entry
0xffff91414424  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2233
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Smi->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff91414320     0  mov x2, x1
0xffff91414324     4  tbnz w2, #0, #+0xc4 (addr 0xffff914143e8)
0xffff91414328     8  mov x3, x0
0xffff9141432c    12  tbnz w3, #0, #+0xcc (addr 0xffff914143f8)
0xffff91414330    16  scvtf d0, x2, #32
0xffff91414334    20  scvtf d1, x3, #32
0xffff91414338    24  fmul d0, d0, d1
0xffff9141433c    28  movz x1, #0xf2c0
0xffff91414340    32  movk x1, #0x4117, lsl #16
0xffff91414344    36  ldp x2, x0, [x1]
0xffff91414348    40  adds x16, x2, #0x10 (16)
0xffff9141434c    44  ccmp x16, x0, #nzCv, lo
0xffff91414350    48  b.hi #+0x20 (addr 0xffff91414370)
0xffff91414354    52  str x16, [x1]
0xffff91414358    56  ldr x1, [x26, #120]
0xffff9141435c    60  str x1, [x2]
0xffff91414360    64  orr x2, x2, #0x1
0xffff91414364    68  stur d0, [x2, #7]
0xffff91414368    72  mov x0, x2
0xffff9141436c    76  ret
0xffff91414370    80  sub csp, jssp, #0x10 (16)
0xffff91414374    84  stp fp, lr, [jssp, #-16]!
0xffff91414378    88  movz fp, #0xa00000000
0xffff9141437c    92  sub csp, jssp, #0x8 (8)
0xffff91414380    96  str fp, [jssp, #-8]!
0xffff91414384   100  add fp, jssp, #0x8 (8)
0xffff91414388   104  movz x2, #0x0
0xffff9141438c   108  mov x16, lr
0xffff91414390   112  ldr x17, pc+64 (addr 0x0000ffff914143d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91414394   116  blr x17
0xffff91414398   120  ldur cp, [fp, #-8]
0xffff9141439c   124  movz x0, #0x0
0xffff914143a0   128  movz x1, #0x4b48
0xffff914143a4   132  movk x1, #0xe4, lsl #16
0xffff914143a8   136  ldr x16, pc+48 (addr 0x0000ffff914143d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff914143ac   140  blr x16
0xffff914143b0   144  str x0, [jssp, #16]
0xffff914143b4   148  ldr x16, pc+44 (addr 0x0000ffff914143e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914143b8   152  blr x16
0xffff914143bc   156  ldr lr, [jssp, #16]
0xffff914143c0   160  ldp xzr, fp, [jssp], #24
0xffff914143c4   164  b #-0x60 (addr 0xffff91414364)
0xffff914143c8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914143cc   172  d63f03e0       constant
0xffff914143d0   176  91406820       constant
0xffff914143d4   180  0000ffff       constant
0xffff914143d8   184  91406260       constant
0xffff914143dc   188  0000ffff       constant
0xffff914143e0   192  914068e0       constant
0xffff914143e4   196  0000ffff       constant
0xffff914143e8   200  movz x16, #0x0
0xffff914143ec   204  sub csp, jssp, #0x10 (16)
0xffff914143f0   208  stp fp, lr, [jssp, #-16]!
0xffff914143f4   212  bl #+0x14 (addr 0xffff91414408)
0xffff914143f8   216  movz x16, #0x8
0xffff914143fc   220  sub csp, jssp, #0x10 (16)
0xffff91414400   224  stp fp, lr, [jssp, #-16]!
0xffff91414404   228  bl #+0x4 (addr 0xffff91414408)
0xffff91414408   232  movz x17, #0xa00000000
0xffff9141440c   236  sub csp, jssp, #0x10 (16)
0xffff91414410   240  stp x17, cp, [jssp, #-16]!
0xffff91414414   244  add fp, jssp, #0x10 (16)
0xffff91414418   248  ldr x17, pc+24 (addr 0x0000ffff91414430)    ;; lazy deoptimization bailout 0
0xffff9141441c   252  add x17, x17, x16
0xffff91414420   256  br x17
0xffff91414424   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91414428   264  d63f03e0       constant
0xffff9141442c   268  d503201f       constant
0xffff91414430   272  91206000       constant
0xffff91414434   276  0000ffff       constant


Safepoints (size = 21)
0xffff914143b0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91414390  code target (STUB)  (0xffff91406820)
0xffff914143a8  code target (STUB)  (0xffff91406260)
0xffff914143b4  code target (STUB)  (0xffff914068e0)
0xffff914143c8  constant pool (size 32)
0xffff91414418  runtime entry
0xffff91414424  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2201
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 160)
0xffff914144c0     0  mov x2, x1
0xffff914144c4     4  tbnz w2, #0, #+0x34 (addr 0xffff914144f8)
0xffff914144c8     8  mov x3, x0
0xffff914144cc    12  tbnz w3, #0, #+0x3c (addr 0xffff91414508)
0xffff914144d0    16  cmp x3, #0x0 (0)
0xffff914144d4    20  ccmp x2, #0, #nZcv, ne
0xffff914144d8    24  ccmn x3, x2, #nzcv, eq
0xffff914144dc    28  b.mi #+0x3c (addr 0xffff91414518)
0xffff914144e0    32  smulh x2, x3, x2
0xffff914144e4    36  cmp x2, w2, sxtw
0xffff914144e8    40  lsl x2, x2, #32
0xffff914144ec    44  b.ne #+0x2c (addr 0xffff91414518)
0xffff914144f0    48  mov x0, x2
0xffff914144f4    52  ret
0xffff914144f8    56  movz x16, #0x0
0xffff914144fc    60  sub csp, jssp, #0x10 (16)
0xffff91414500    64  stp fp, lr, [jssp, #-16]!
0xffff91414504    68  bl #+0x24 (addr 0xffff91414528)
0xffff91414508    72  movz x16, #0x8
0xffff9141450c    76  sub csp, jssp, #0x10 (16)
0xffff91414510    80  stp fp, lr, [jssp, #-16]!
0xffff91414514    84  bl #+0x14 (addr 0xffff91414528)
0xffff91414518    88  movz x16, #0x10
0xffff9141451c    92  sub csp, jssp, #0x10 (16)
0xffff91414520    96  stp fp, lr, [jssp, #-16]!
0xffff91414524   100  bl #+0x4 (addr 0xffff91414528)
0xffff91414528   104  movz x17, #0xa00000000
0xffff9141452c   108  sub csp, jssp, #0x10 (16)
0xffff91414530   112  stp x17, cp, [jssp, #-16]!
0xffff91414534   116  add fp, jssp, #0x10 (16)
0xffff91414538   120  ldr x17, pc+24 (addr 0x0000ffff91414550)    ;; lazy deoptimization bailout 0
0xffff9141453c   124  add x17, x17, x16
0xffff91414540   128  br x17
0xffff91414544   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91414548   136  d63f03e0       constant
0xffff9141454c   140  d503201f       constant
0xffff91414550   144  91206000       constant
0xffff91414554   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414538  runtime entry
0xffff91414544  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2201
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 160)
0xffff914144c0     0  mov x2, x1
0xffff914144c4     4  tbnz w2, #0, #+0x34 (addr 0xffff914144f8)
0xffff914144c8     8  mov x3, x0
0xffff914144cc    12  tbnz w3, #0, #+0x3c (addr 0xffff91414508)
0xffff914144d0    16  cmp x3, #0x0 (0)
0xffff914144d4    20  ccmp x2, #0, #nZcv, ne
0xffff914144d8    24  ccmn x3, x2, #nzcv, eq
0xffff914144dc    28  b.mi #+0x3c (addr 0xffff91414518)
0xffff914144e0    32  smulh x2, x3, x2
0xffff914144e4    36  cmp x2, w2, sxtw
0xffff914144e8    40  lsl x2, x2, #32
0xffff914144ec    44  b.ne #+0x2c (addr 0xffff91414518)
0xffff914144f0    48  mov x0, x2
0xffff914144f4    52  ret
0xffff914144f8    56  movz x16, #0x0
0xffff914144fc    60  sub csp, jssp, #0x10 (16)
0xffff91414500    64  stp fp, lr, [jssp, #-16]!
0xffff91414504    68  bl #+0x24 (addr 0xffff91414528)
0xffff91414508    72  movz x16, #0x8
0xffff9141450c    76  sub csp, jssp, #0x10 (16)
0xffff91414510    80  stp fp, lr, [jssp, #-16]!
0xffff91414514    84  bl #+0x14 (addr 0xffff91414528)
0xffff91414518    88  movz x16, #0x10
0xffff9141451c    92  sub csp, jssp, #0x10 (16)
0xffff91414520    96  stp fp, lr, [jssp, #-16]!
0xffff91414524   100  bl #+0x4 (addr 0xffff91414528)
0xffff91414528   104  movz x17, #0xa00000000
0xffff9141452c   108  sub csp, jssp, #0x10 (16)
0xffff91414530   112  stp x17, cp, [jssp, #-16]!
0xffff91414534   116  add fp, jssp, #0x10 (16)
0xffff91414538   120  ldr x17, pc+24 (addr 0x0000ffff91414550)    ;; lazy deoptimization bailout 0
0xffff9141453c   124  add x17, x17, x16
0xffff91414540   128  br x17
0xffff91414544   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91414548   136  d63f03e0       constant
0xffff9141454c   140  d503201f       constant
0xffff91414550   144  91206000       constant
0xffff91414554   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414538  runtime entry
0xffff91414544  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2340
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff914145c0     0  mov x2, x1
0xffff914145c4     4  tbnz w2, #0, #+0x20 (addr 0xffff914145e4)
0xffff914145c8     8  mov x3, x0
0xffff914145cc    12  tbnz w3, #0, #+0x28 (addr 0xffff914145f4)
0xffff914145d0    16  asr x0, x2, #32
0xffff914145d4    20  asr x1, x3, #32
0xffff914145d8    24  asr w0, w0, w1
0xffff914145dc    28  lsl x0, x0, #32
0xffff914145e0    32  ret
0xffff914145e4    36  movz x16, #0x0
0xffff914145e8    40  sub csp, jssp, #0x10 (16)
0xffff914145ec    44  stp fp, lr, [jssp, #-16]!
0xffff914145f0    48  bl #+0x14 (addr 0xffff91414604)
0xffff914145f4    52  movz x16, #0x8
0xffff914145f8    56  sub csp, jssp, #0x10 (16)
0xffff914145fc    60  stp fp, lr, [jssp, #-16]!
0xffff91414600    64  bl #+0x4 (addr 0xffff91414604)
0xffff91414604    68  movz x17, #0xa00000000
0xffff91414608    72  sub csp, jssp, #0x10 (16)
0xffff9141460c    76  stp x17, cp, [jssp, #-16]!
0xffff91414610    80  add fp, jssp, #0x10 (16)
0xffff91414614    84  ldr x17, pc+20 (addr 0x0000ffff91414628)    ;; lazy deoptimization bailout 0
0xffff91414618    88  add x17, x17, x16
0xffff9141461c    92  br x17
0xffff91414620    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414624   100  d63f03e0       constant
0xffff91414628   104  91206000       constant
0xffff9141462c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414614  runtime entry
0xffff91414620  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2340
type = NORMAL
name = BinaryOpICStub(SAR:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 120)
0xffff914145c0     0  mov x2, x1
0xffff914145c4     4  tbnz w2, #0, #+0x20 (addr 0xffff914145e4)
0xffff914145c8     8  mov x3, x0
0xffff914145cc    12  tbnz w3, #0, #+0x28 (addr 0xffff914145f4)
0xffff914145d0    16  asr x0, x2, #32
0xffff914145d4    20  asr x1, x3, #32
0xffff914145d8    24  asr w0, w0, w1
0xffff914145dc    28  lsl x0, x0, #32
0xffff914145e0    32  ret
0xffff914145e4    36  movz x16, #0x0
0xffff914145e8    40  sub csp, jssp, #0x10 (16)
0xffff914145ec    44  stp fp, lr, [jssp, #-16]!
0xffff914145f0    48  bl #+0x14 (addr 0xffff91414604)
0xffff914145f4    52  movz x16, #0x8
0xffff914145f8    56  sub csp, jssp, #0x10 (16)
0xffff914145fc    60  stp fp, lr, [jssp, #-16]!
0xffff91414600    64  bl #+0x4 (addr 0xffff91414604)
0xffff91414604    68  movz x17, #0xa00000000
0xffff91414608    72  sub csp, jssp, #0x10 (16)
0xffff9141460c    76  stp x17, cp, [jssp, #-16]!
0xffff91414610    80  add fp, jssp, #0x10 (16)
0xffff91414614    84  ldr x17, pc+20 (addr 0x0000ffff91414628)    ;; lazy deoptimization bailout 0
0xffff91414618    88  add x17, x17, x16
0xffff9141461c    92  br x17
0xffff91414620    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414624   100  d63f03e0       constant
0xffff91414628   104  91206000       constant
0xffff9141462c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414614  runtime entry
0xffff91414620  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2324
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff914146a0     0  mov x2, x1
0xffff914146a4     4  tbnz w2, #0, #+0x20 (addr 0xffff914146c4)
0xffff914146a8     8  mov x3, x0
0xffff914146ac    12  tbnz w3, #0, #+0x28 (addr 0xffff914146d4)
0xffff914146b0    16  asr x0, x2, #32
0xffff914146b4    20  asr x1, x3, #32
0xffff914146b8    24  asr w0, w0, w1
0xffff914146bc    28  lsl x0, x0, #32
0xffff914146c0    32  ret
0xffff914146c4    36  movz x16, #0x0
0xffff914146c8    40  sub csp, jssp, #0x10 (16)
0xffff914146cc    44  stp fp, lr, [jssp, #-16]!
0xffff914146d0    48  bl #+0x14 (addr 0xffff914146e4)
0xffff914146d4    52  movz x16, #0x8
0xffff914146d8    56  sub csp, jssp, #0x10 (16)
0xffff914146dc    60  stp fp, lr, [jssp, #-16]!
0xffff914146e0    64  bl #+0x4 (addr 0xffff914146e4)
0xffff914146e4    68  movz x17, #0xa00000000
0xffff914146e8    72  sub csp, jssp, #0x10 (16)
0xffff914146ec    76  stp x17, cp, [jssp, #-16]!
0xffff914146f0    80  add fp, jssp, #0x10 (16)
0xffff914146f4    84  ldr x17, pc+20 (addr 0x0000ffff91414708)    ;; lazy deoptimization bailout 0
0xffff914146f8    88  add x17, x17, x16
0xffff914146fc    92  br x17
0xffff91414700    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414704   100  d63f03e0       constant
0xffff91414708   104  91206000       constant
0xffff9141470c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914146f4  runtime entry
0xffff91414700  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2324
type = NORMAL
name = BinaryOpICStub(SAR:Int32*Smi->Smi)
compiler = crankshaft
Instructions (size = 120)
0xffff914146a0     0  mov x2, x1
0xffff914146a4     4  tbnz w2, #0, #+0x20 (addr 0xffff914146c4)
0xffff914146a8     8  mov x3, x0
0xffff914146ac    12  tbnz w3, #0, #+0x28 (addr 0xffff914146d4)
0xffff914146b0    16  asr x0, x2, #32
0xffff914146b4    20  asr x1, x3, #32
0xffff914146b8    24  asr w0, w0, w1
0xffff914146bc    28  lsl x0, x0, #32
0xffff914146c0    32  ret
0xffff914146c4    36  movz x16, #0x0
0xffff914146c8    40  sub csp, jssp, #0x10 (16)
0xffff914146cc    44  stp fp, lr, [jssp, #-16]!
0xffff914146d0    48  bl #+0x14 (addr 0xffff914146e4)
0xffff914146d4    52  movz x16, #0x8
0xffff914146d8    56  sub csp, jssp, #0x10 (16)
0xffff914146dc    60  stp fp, lr, [jssp, #-16]!
0xffff914146e0    64  bl #+0x4 (addr 0xffff914146e4)
0xffff914146e4    68  movz x17, #0xa00000000
0xffff914146e8    72  sub csp, jssp, #0x10 (16)
0xffff914146ec    76  stp x17, cp, [jssp, #-16]!
0xffff914146f0    80  add fp, jssp, #0x10 (16)
0xffff914146f4    84  ldr x17, pc+20 (addr 0x0000ffff91414708)    ;; lazy deoptimization bailout 0
0xffff914146f8    88  add x17, x17, x16
0xffff914146fc    92  br x17
0xffff91414700    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414704   100  d63f03e0       constant
0xffff91414708   104  91206000       constant
0xffff9141470c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914146f4  runtime entry
0xffff91414700  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2452
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff91414780     0  mov x2, x0
0xffff91414784     4  tbnz w2, #0, #+0xac (addr 0xffff91414830)
0xffff91414788     8  tbnz w1, #0, #+0x18 (addr 0xffff914147a0)
0xffff9141478c    12  asr x4, x1, #32
0xffff91414790    16  asr x0, x2, #32
0xffff91414794    20  asr w0, w4, w0
0xffff91414798    24  lsl x0, x0, #32
0xffff9141479c    28  ret
0xffff914147a0    32  sub csp, jssp, #0x10 (16)
0xffff914147a4    36  stp fp, lr, [jssp, #-16]!
0xffff914147a8    40  movz fp, #0xa00000000
0xffff914147ac    44  sub csp, jssp, #0x8 (8)
0xffff914147b0    48  str fp, [jssp, #-8]!
0xffff914147b4    52  add fp, jssp, #0x8 (8)
0xffff914147b8    56  ldur x16, [x1, #-1]
0xffff914147bc    60  ldr x17, [x26, #120]
0xffff914147c0    64  cmp x16, x17
0xffff914147c4    68  b.ne #+0x30 (addr 0xffff914147f4)
0xffff914147c8    72  ldur d30, [x1, #7]
0xffff914147cc    76  fcvtzs x4, d30
0xffff914147d0    80  cmp x4, #0x1 (1)
0xffff914147d4    84  ccmn x4, #1, #nzcV, vc
0xffff914147d8    88  b.vc #+0x18 (addr 0xffff914147f0)
0xffff914147dc    92  sub csp, jssp, #0x8 (8)
0xffff914147e0    96  str lr, [jssp, #-8]!
0xffff914147e4   100  ldr x16, pc+68 (addr 0x0000ffff91414828)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff914147e8   104  blr x16
0xffff914147ec   108  ldr lr, [jssp], #8
0xffff914147f0   112  b #+0x24 (addr 0xffff91414814)
0xffff914147f4   116  ldp x4, x3, [x26, #64]
0xffff914147f8   120  cmp x1, x4
0xffff914147fc   124  cset x4, eq
0xffff91414800   128  ccmp x1, x3, #nZcv, ne
0xffff91414804   132  b.eq #+0x10 (addr 0xffff91414814)
0xffff91414808   136  ldr x16, [x26, #40]
0xffff9141480c   140  cmp x1, x16
0xffff91414810   144  b.ne #+0x30 (addr 0xffff91414840)
0xffff91414814   148  ldr lr, [jssp, #16]
0xffff91414818   152  ldp xzr, fp, [jssp], #24
0xffff9141481c   156  b #-0x8c (addr 0xffff91414790)
0xffff91414820   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414824   164  d63f03e0       constant
0xffff91414828   168  9140fee0       constant
0xffff9141482c   172  0000ffff       constant
0xffff91414830   176  movz x16, #0x0
0xffff91414834   180  sub csp, jssp, #0x10 (16)
0xffff91414838   184  stp fp, lr, [jssp, #-16]!
0xffff9141483c   188  bl #+0xc (addr 0xffff91414848)
0xffff91414840   192  movz x16, #0x8
0xffff91414844   196  bl #+0x14 (addr 0xffff91414858)
0xffff91414848   200  movz x17, #0xa00000000
0xffff9141484c   204  sub csp, jssp, #0x10 (16)
0xffff91414850   208  stp x17, cp, [jssp, #-16]!
0xffff91414854   212  add fp, jssp, #0x10 (16)
0xffff91414858   216  ldr x17, pc+24 (addr 0x0000ffff91414870)    ;; lazy deoptimization bailout 0
0xffff9141485c   220  add x17, x17, x16
0xffff91414860   224  br x17
0xffff91414864   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91414868   232  d63f03e0       constant
0xffff9141486c   236  d503201f       constant
0xffff91414870   240  91206000       constant
0xffff91414874   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914147e4  code target (STUB)  (0xffff9140fee0)
0xffff91414820  constant pool (size 16)
0xffff91414858  runtime entry
0xffff91414864  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2452
type = NORMAL
name = BinaryOpICStub(SAR:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff91414780     0  mov x2, x0
0xffff91414784     4  tbnz w2, #0, #+0xac (addr 0xffff91414830)
0xffff91414788     8  tbnz w1, #0, #+0x18 (addr 0xffff914147a0)
0xffff9141478c    12  asr x4, x1, #32
0xffff91414790    16  asr x0, x2, #32
0xffff91414794    20  asr w0, w4, w0
0xffff91414798    24  lsl x0, x0, #32
0xffff9141479c    28  ret
0xffff914147a0    32  sub csp, jssp, #0x10 (16)
0xffff914147a4    36  stp fp, lr, [jssp, #-16]!
0xffff914147a8    40  movz fp, #0xa00000000
0xffff914147ac    44  sub csp, jssp, #0x8 (8)
0xffff914147b0    48  str fp, [jssp, #-8]!
0xffff914147b4    52  add fp, jssp, #0x8 (8)
0xffff914147b8    56  ldur x16, [x1, #-1]
0xffff914147bc    60  ldr x17, [x26, #120]
0xffff914147c0    64  cmp x16, x17
0xffff914147c4    68  b.ne #+0x30 (addr 0xffff914147f4)
0xffff914147c8    72  ldur d30, [x1, #7]
0xffff914147cc    76  fcvtzs x4, d30
0xffff914147d0    80  cmp x4, #0x1 (1)
0xffff914147d4    84  ccmn x4, #1, #nzcV, vc
0xffff914147d8    88  b.vc #+0x18 (addr 0xffff914147f0)
0xffff914147dc    92  sub csp, jssp, #0x8 (8)
0xffff914147e0    96  str lr, [jssp, #-8]!
0xffff914147e4   100  ldr x16, pc+68 (addr 0x0000ffff91414828)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff914147e8   104  blr x16
0xffff914147ec   108  ldr lr, [jssp], #8
0xffff914147f0   112  b #+0x24 (addr 0xffff91414814)
0xffff914147f4   116  ldp x4, x3, [x26, #64]
0xffff914147f8   120  cmp x1, x4
0xffff914147fc   124  cset x4, eq
0xffff91414800   128  ccmp x1, x3, #nZcv, ne
0xffff91414804   132  b.eq #+0x10 (addr 0xffff91414814)
0xffff91414808   136  ldr x16, [x26, #40]
0xffff9141480c   140  cmp x1, x16
0xffff91414810   144  b.ne #+0x30 (addr 0xffff91414840)
0xffff91414814   148  ldr lr, [jssp, #16]
0xffff91414818   152  ldp xzr, fp, [jssp], #24
0xffff9141481c   156  b #-0x8c (addr 0xffff91414790)
0xffff91414820   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414824   164  d63f03e0       constant
0xffff91414828   168  9140fee0       constant
0xffff9141482c   172  0000ffff       constant
0xffff91414830   176  movz x16, #0x0
0xffff91414834   180  sub csp, jssp, #0x10 (16)
0xffff91414838   184  stp fp, lr, [jssp, #-16]!
0xffff9141483c   188  bl #+0xc (addr 0xffff91414848)
0xffff91414840   192  movz x16, #0x8
0xffff91414844   196  bl #+0x14 (addr 0xffff91414858)
0xffff91414848   200  movz x17, #0xa00000000
0xffff9141484c   204  sub csp, jssp, #0x10 (16)
0xffff91414850   208  stp x17, cp, [jssp, #-16]!
0xffff91414854   212  add fp, jssp, #0x10 (16)
0xffff91414858   216  ldr x17, pc+24 (addr 0x0000ffff91414870)    ;; lazy deoptimization bailout 0
0xffff9141485c   220  add x17, x17, x16
0xffff91414860   224  br x17
0xffff91414864   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91414868   232  d63f03e0       constant
0xffff9141486c   236  d503201f       constant
0xffff91414870   240  91206000       constant
0xffff91414874   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914147e4  code target (STUB)  (0xffff9140fee0)
0xffff91414820  constant pool (size 16)
0xffff91414858  runtime entry
0xffff91414864  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2196
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff914148e0     0  mov x2, x1
0xffff914148e4     4  tbnz w2, #0, #+0x20 (addr 0xffff91414904)
0xffff914148e8     8  mov x3, x0
0xffff914148ec    12  tbnz w3, #0, #+0x28 (addr 0xffff91414914)
0xffff914148f0    16  asr x0, x2, #32
0xffff914148f4    20  asr x1, x3, #32
0xffff914148f8    24  asr w0, w0, w1
0xffff914148fc    28  lsl x0, x0, #32
0xffff91414900    32  ret
0xffff91414904    36  movz x16, #0x0
0xffff91414908    40  sub csp, jssp, #0x10 (16)
0xffff9141490c    44  stp fp, lr, [jssp, #-16]!
0xffff91414910    48  bl #+0x14 (addr 0xffff91414924)
0xffff91414914    52  movz x16, #0x8
0xffff91414918    56  sub csp, jssp, #0x10 (16)
0xffff9141491c    60  stp fp, lr, [jssp, #-16]!
0xffff91414920    64  bl #+0x4 (addr 0xffff91414924)
0xffff91414924    68  movz x17, #0xa00000000
0xffff91414928    72  sub csp, jssp, #0x10 (16)
0xffff9141492c    76  stp x17, cp, [jssp, #-16]!
0xffff91414930    80  add fp, jssp, #0x10 (16)
0xffff91414934    84  ldr x17, pc+20 (addr 0x0000ffff91414948)    ;; lazy deoptimization bailout 0
0xffff91414938    88  add x17, x17, x16
0xffff9141493c    92  br x17
0xffff91414940    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414944   100  d63f03e0       constant
0xffff91414948   104  91206000       constant
0xffff9141494c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414934  runtime entry
0xffff91414940  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2196
type = NORMAL
name = BinaryOpICStub(SAR:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 120)
0xffff914148e0     0  mov x2, x1
0xffff914148e4     4  tbnz w2, #0, #+0x20 (addr 0xffff91414904)
0xffff914148e8     8  mov x3, x0
0xffff914148ec    12  tbnz w3, #0, #+0x28 (addr 0xffff91414914)
0xffff914148f0    16  asr x0, x2, #32
0xffff914148f4    20  asr x1, x3, #32
0xffff914148f8    24  asr w0, w0, w1
0xffff914148fc    28  lsl x0, x0, #32
0xffff91414900    32  ret
0xffff91414904    36  movz x16, #0x0
0xffff91414908    40  sub csp, jssp, #0x10 (16)
0xffff9141490c    44  stp fp, lr, [jssp, #-16]!
0xffff91414910    48  bl #+0x14 (addr 0xffff91414924)
0xffff91414914    52  movz x16, #0x8
0xffff91414918    56  sub csp, jssp, #0x10 (16)
0xffff9141491c    60  stp fp, lr, [jssp, #-16]!
0xffff91414920    64  bl #+0x4 (addr 0xffff91414924)
0xffff91414924    68  movz x17, #0xa00000000
0xffff91414928    72  sub csp, jssp, #0x10 (16)
0xffff9141492c    76  stp x17, cp, [jssp, #-16]!
0xffff91414930    80  add fp, jssp, #0x10 (16)
0xffff91414934    84  ldr x17, pc+20 (addr 0x0000ffff91414948)    ;; lazy deoptimization bailout 0
0xffff91414938    88  add x17, x17, x16
0xffff9141493c    92  br x17
0xffff91414940    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414944   100  d63f03e0       constant
0xffff91414948   104  91206000       constant
0xffff9141494c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414934  runtime entry
0xffff91414940  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2339
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff914149c0     0  mov x2, x1
0xffff914149c4     4  tbnz w2, #0, #+0x20 (addr 0xffff914149e4)
0xffff914149c8     8  mov x3, x0
0xffff914149cc    12  tbnz w3, #0, #+0x28 (addr 0xffff914149f4)
0xffff914149d0    16  asr x0, x2, #32
0xffff914149d4    20  asr x1, x3, #32
0xffff914149d8    24  lsl w0, w0, w1
0xffff914149dc    28  lsl x0, x0, #32
0xffff914149e0    32  ret
0xffff914149e4    36  movz x16, #0x0
0xffff914149e8    40  sub csp, jssp, #0x10 (16)
0xffff914149ec    44  stp fp, lr, [jssp, #-16]!
0xffff914149f0    48  bl #+0x14 (addr 0xffff91414a04)
0xffff914149f4    52  movz x16, #0x8
0xffff914149f8    56  sub csp, jssp, #0x10 (16)
0xffff914149fc    60  stp fp, lr, [jssp, #-16]!
0xffff91414a00    64  bl #+0x4 (addr 0xffff91414a04)
0xffff91414a04    68  movz x17, #0xa00000000
0xffff91414a08    72  sub csp, jssp, #0x10 (16)
0xffff91414a0c    76  stp x17, cp, [jssp, #-16]!
0xffff91414a10    80  add fp, jssp, #0x10 (16)
0xffff91414a14    84  ldr x17, pc+20 (addr 0x0000ffff91414a28)    ;; lazy deoptimization bailout 0
0xffff91414a18    88  add x17, x17, x16
0xffff91414a1c    92  br x17
0xffff91414a20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414a24   100  d63f03e0       constant
0xffff91414a28   104  91206000       constant
0xffff91414a2c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414a14  runtime entry
0xffff91414a20  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2339
type = NORMAL
name = BinaryOpICStub(SHL:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 120)
0xffff914149c0     0  mov x2, x1
0xffff914149c4     4  tbnz w2, #0, #+0x20 (addr 0xffff914149e4)
0xffff914149c8     8  mov x3, x0
0xffff914149cc    12  tbnz w3, #0, #+0x28 (addr 0xffff914149f4)
0xffff914149d0    16  asr x0, x2, #32
0xffff914149d4    20  asr x1, x3, #32
0xffff914149d8    24  lsl w0, w0, w1
0xffff914149dc    28  lsl x0, x0, #32
0xffff914149e0    32  ret
0xffff914149e4    36  movz x16, #0x0
0xffff914149e8    40  sub csp, jssp, #0x10 (16)
0xffff914149ec    44  stp fp, lr, [jssp, #-16]!
0xffff914149f0    48  bl #+0x14 (addr 0xffff91414a04)
0xffff914149f4    52  movz x16, #0x8
0xffff914149f8    56  sub csp, jssp, #0x10 (16)
0xffff914149fc    60  stp fp, lr, [jssp, #-16]!
0xffff91414a00    64  bl #+0x4 (addr 0xffff91414a04)
0xffff91414a04    68  movz x17, #0xa00000000
0xffff91414a08    72  sub csp, jssp, #0x10 (16)
0xffff91414a0c    76  stp x17, cp, [jssp, #-16]!
0xffff91414a10    80  add fp, jssp, #0x10 (16)
0xffff91414a14    84  ldr x17, pc+20 (addr 0x0000ffff91414a28)    ;; lazy deoptimization bailout 0
0xffff91414a18    88  add x17, x17, x16
0xffff91414a1c    92  br x17
0xffff91414a20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414a24   100  d63f03e0       constant
0xffff91414a28   104  91206000       constant
0xffff91414a2c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414a14  runtime entry
0xffff91414a20  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2323
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff91414aa0     0  mov x2, x1
0xffff91414aa4     4  tbnz w2, #0, #+0x20 (addr 0xffff91414ac4)
0xffff91414aa8     8  mov x3, x0
0xffff91414aac    12  tbnz w3, #0, #+0x28 (addr 0xffff91414ad4)
0xffff91414ab0    16  asr x0, x2, #32
0xffff91414ab4    20  asr x1, x3, #32
0xffff91414ab8    24  lsl w0, w0, w1
0xffff91414abc    28  lsl x0, x0, #32
0xffff91414ac0    32  ret
0xffff91414ac4    36  movz x16, #0x0
0xffff91414ac8    40  sub csp, jssp, #0x10 (16)
0xffff91414acc    44  stp fp, lr, [jssp, #-16]!
0xffff91414ad0    48  bl #+0x14 (addr 0xffff91414ae4)
0xffff91414ad4    52  movz x16, #0x8
0xffff91414ad8    56  sub csp, jssp, #0x10 (16)
0xffff91414adc    60  stp fp, lr, [jssp, #-16]!
0xffff91414ae0    64  bl #+0x4 (addr 0xffff91414ae4)
0xffff91414ae4    68  movz x17, #0xa00000000
0xffff91414ae8    72  sub csp, jssp, #0x10 (16)
0xffff91414aec    76  stp x17, cp, [jssp, #-16]!
0xffff91414af0    80  add fp, jssp, #0x10 (16)
0xffff91414af4    84  ldr x17, pc+20 (addr 0x0000ffff91414b08)    ;; lazy deoptimization bailout 0
0xffff91414af8    88  add x17, x17, x16
0xffff91414afc    92  br x17
0xffff91414b00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414b04   100  d63f03e0       constant
0xffff91414b08   104  91206000       constant
0xffff91414b0c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414af4  runtime entry
0xffff91414b00  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2323
type = NORMAL
name = BinaryOpICStub(SHL:Int32*Smi->Smi)
compiler = crankshaft
Instructions (size = 120)
0xffff91414aa0     0  mov x2, x1
0xffff91414aa4     4  tbnz w2, #0, #+0x20 (addr 0xffff91414ac4)
0xffff91414aa8     8  mov x3, x0
0xffff91414aac    12  tbnz w3, #0, #+0x28 (addr 0xffff91414ad4)
0xffff91414ab0    16  asr x0, x2, #32
0xffff91414ab4    20  asr x1, x3, #32
0xffff91414ab8    24  lsl w0, w0, w1
0xffff91414abc    28  lsl x0, x0, #32
0xffff91414ac0    32  ret
0xffff91414ac4    36  movz x16, #0x0
0xffff91414ac8    40  sub csp, jssp, #0x10 (16)
0xffff91414acc    44  stp fp, lr, [jssp, #-16]!
0xffff91414ad0    48  bl #+0x14 (addr 0xffff91414ae4)
0xffff91414ad4    52  movz x16, #0x8
0xffff91414ad8    56  sub csp, jssp, #0x10 (16)
0xffff91414adc    60  stp fp, lr, [jssp, #-16]!
0xffff91414ae0    64  bl #+0x4 (addr 0xffff91414ae4)
0xffff91414ae4    68  movz x17, #0xa00000000
0xffff91414ae8    72  sub csp, jssp, #0x10 (16)
0xffff91414aec    76  stp x17, cp, [jssp, #-16]!
0xffff91414af0    80  add fp, jssp, #0x10 (16)
0xffff91414af4    84  ldr x17, pc+20 (addr 0x0000ffff91414b08)    ;; lazy deoptimization bailout 0
0xffff91414af8    88  add x17, x17, x16
0xffff91414afc    92  br x17
0xffff91414b00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414b04   100  d63f03e0       constant
0xffff91414b08   104  91206000       constant
0xffff91414b0c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414af4  runtime entry
0xffff91414b00  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2451
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff91414b80     0  mov x2, x0
0xffff91414b84     4  tbnz w2, #0, #+0xac (addr 0xffff91414c30)
0xffff91414b88     8  tbnz w1, #0, #+0x18 (addr 0xffff91414ba0)
0xffff91414b8c    12  asr x4, x1, #32
0xffff91414b90    16  asr x0, x2, #32
0xffff91414b94    20  lsl w0, w4, w0
0xffff91414b98    24  lsl x0, x0, #32
0xffff91414b9c    28  ret
0xffff91414ba0    32  sub csp, jssp, #0x10 (16)
0xffff91414ba4    36  stp fp, lr, [jssp, #-16]!
0xffff91414ba8    40  movz fp, #0xa00000000
0xffff91414bac    44  sub csp, jssp, #0x8 (8)
0xffff91414bb0    48  str fp, [jssp, #-8]!
0xffff91414bb4    52  add fp, jssp, #0x8 (8)
0xffff91414bb8    56  ldur x16, [x1, #-1]
0xffff91414bbc    60  ldr x17, [x26, #120]
0xffff91414bc0    64  cmp x16, x17
0xffff91414bc4    68  b.ne #+0x30 (addr 0xffff91414bf4)
0xffff91414bc8    72  ldur d30, [x1, #7]
0xffff91414bcc    76  fcvtzs x4, d30
0xffff91414bd0    80  cmp x4, #0x1 (1)
0xffff91414bd4    84  ccmn x4, #1, #nzcV, vc
0xffff91414bd8    88  b.vc #+0x18 (addr 0xffff91414bf0)
0xffff91414bdc    92  sub csp, jssp, #0x8 (8)
0xffff91414be0    96  str lr, [jssp, #-8]!
0xffff91414be4   100  ldr x16, pc+68 (addr 0x0000ffff91414c28)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91414be8   104  blr x16
0xffff91414bec   108  ldr lr, [jssp], #8
0xffff91414bf0   112  b #+0x24 (addr 0xffff91414c14)
0xffff91414bf4   116  ldp x4, x3, [x26, #64]
0xffff91414bf8   120  cmp x1, x4
0xffff91414bfc   124  cset x4, eq
0xffff91414c00   128  ccmp x1, x3, #nZcv, ne
0xffff91414c04   132  b.eq #+0x10 (addr 0xffff91414c14)
0xffff91414c08   136  ldr x16, [x26, #40]
0xffff91414c0c   140  cmp x1, x16
0xffff91414c10   144  b.ne #+0x30 (addr 0xffff91414c40)
0xffff91414c14   148  ldr lr, [jssp, #16]
0xffff91414c18   152  ldp xzr, fp, [jssp], #24
0xffff91414c1c   156  b #-0x8c (addr 0xffff91414b90)
0xffff91414c20   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414c24   164  d63f03e0       constant
0xffff91414c28   168  9140fee0       constant
0xffff91414c2c   172  0000ffff       constant
0xffff91414c30   176  movz x16, #0x0
0xffff91414c34   180  sub csp, jssp, #0x10 (16)
0xffff91414c38   184  stp fp, lr, [jssp, #-16]!
0xffff91414c3c   188  bl #+0xc (addr 0xffff91414c48)
0xffff91414c40   192  movz x16, #0x8
0xffff91414c44   196  bl #+0x14 (addr 0xffff91414c58)
0xffff91414c48   200  movz x17, #0xa00000000
0xffff91414c4c   204  sub csp, jssp, #0x10 (16)
0xffff91414c50   208  stp x17, cp, [jssp, #-16]!
0xffff91414c54   212  add fp, jssp, #0x10 (16)
0xffff91414c58   216  ldr x17, pc+24 (addr 0x0000ffff91414c70)    ;; lazy deoptimization bailout 0
0xffff91414c5c   220  add x17, x17, x16
0xffff91414c60   224  br x17
0xffff91414c64   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91414c68   232  d63f03e0       constant
0xffff91414c6c   236  d503201f       constant
0xffff91414c70   240  91206000       constant
0xffff91414c74   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff91414be4  code target (STUB)  (0xffff9140fee0)
0xffff91414c20  constant pool (size 16)
0xffff91414c58  runtime entry
0xffff91414c64  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2451
type = NORMAL
name = BinaryOpICStub(SHL:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff91414b80     0  mov x2, x0
0xffff91414b84     4  tbnz w2, #0, #+0xac (addr 0xffff91414c30)
0xffff91414b88     8  tbnz w1, #0, #+0x18 (addr 0xffff91414ba0)
0xffff91414b8c    12  asr x4, x1, #32
0xffff91414b90    16  asr x0, x2, #32
0xffff91414b94    20  lsl w0, w4, w0
0xffff91414b98    24  lsl x0, x0, #32
0xffff91414b9c    28  ret
0xffff91414ba0    32  sub csp, jssp, #0x10 (16)
0xffff91414ba4    36  stp fp, lr, [jssp, #-16]!
0xffff91414ba8    40  movz fp, #0xa00000000
0xffff91414bac    44  sub csp, jssp, #0x8 (8)
0xffff91414bb0    48  str fp, [jssp, #-8]!
0xffff91414bb4    52  add fp, jssp, #0x8 (8)
0xffff91414bb8    56  ldur x16, [x1, #-1]
0xffff91414bbc    60  ldr x17, [x26, #120]
0xffff91414bc0    64  cmp x16, x17
0xffff91414bc4    68  b.ne #+0x30 (addr 0xffff91414bf4)
0xffff91414bc8    72  ldur d30, [x1, #7]
0xffff91414bcc    76  fcvtzs x4, d30
0xffff91414bd0    80  cmp x4, #0x1 (1)
0xffff91414bd4    84  ccmn x4, #1, #nzcV, vc
0xffff91414bd8    88  b.vc #+0x18 (addr 0xffff91414bf0)
0xffff91414bdc    92  sub csp, jssp, #0x8 (8)
0xffff91414be0    96  str lr, [jssp, #-8]!
0xffff91414be4   100  ldr x16, pc+68 (addr 0x0000ffff91414c28)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91414be8   104  blr x16
0xffff91414bec   108  ldr lr, [jssp], #8
0xffff91414bf0   112  b #+0x24 (addr 0xffff91414c14)
0xffff91414bf4   116  ldp x4, x3, [x26, #64]
0xffff91414bf8   120  cmp x1, x4
0xffff91414bfc   124  cset x4, eq
0xffff91414c00   128  ccmp x1, x3, #nZcv, ne
0xffff91414c04   132  b.eq #+0x10 (addr 0xffff91414c14)
0xffff91414c08   136  ldr x16, [x26, #40]
0xffff91414c0c   140  cmp x1, x16
0xffff91414c10   144  b.ne #+0x30 (addr 0xffff91414c40)
0xffff91414c14   148  ldr lr, [jssp, #16]
0xffff91414c18   152  ldp xzr, fp, [jssp], #24
0xffff91414c1c   156  b #-0x8c (addr 0xffff91414b90)
0xffff91414c20   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414c24   164  d63f03e0       constant
0xffff91414c28   168  9140fee0       constant
0xffff91414c2c   172  0000ffff       constant
0xffff91414c30   176  movz x16, #0x0
0xffff91414c34   180  sub csp, jssp, #0x10 (16)
0xffff91414c38   184  stp fp, lr, [jssp, #-16]!
0xffff91414c3c   188  bl #+0xc (addr 0xffff91414c48)
0xffff91414c40   192  movz x16, #0x8
0xffff91414c44   196  bl #+0x14 (addr 0xffff91414c58)
0xffff91414c48   200  movz x17, #0xa00000000
0xffff91414c4c   204  sub csp, jssp, #0x10 (16)
0xffff91414c50   208  stp x17, cp, [jssp, #-16]!
0xffff91414c54   212  add fp, jssp, #0x10 (16)
0xffff91414c58   216  ldr x17, pc+24 (addr 0x0000ffff91414c70)    ;; lazy deoptimization bailout 0
0xffff91414c5c   220  add x17, x17, x16
0xffff91414c60   224  br x17
0xffff91414c64   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91414c68   232  d63f03e0       constant
0xffff91414c6c   236  d503201f       constant
0xffff91414c70   240  91206000       constant
0xffff91414c74   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff91414be4  code target (STUB)  (0xffff9140fee0)
0xffff91414c20  constant pool (size 16)
0xffff91414c58  runtime entry
0xffff91414c64  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2211
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff91414ce0     0  mov x2, x1
0xffff91414ce4     4  tbnz w2, #0, #+0x20 (addr 0xffff91414d04)
0xffff91414ce8     8  mov x3, x0
0xffff91414cec    12  tbnz w3, #0, #+0x28 (addr 0xffff91414d14)
0xffff91414cf0    16  asr x0, x2, #32
0xffff91414cf4    20  asr x1, x3, #32
0xffff91414cf8    24  lsl w0, w0, w1
0xffff91414cfc    28  lsl x0, x0, #32
0xffff91414d00    32  ret
0xffff91414d04    36  movz x16, #0x0
0xffff91414d08    40  sub csp, jssp, #0x10 (16)
0xffff91414d0c    44  stp fp, lr, [jssp, #-16]!
0xffff91414d10    48  bl #+0x14 (addr 0xffff91414d24)
0xffff91414d14    52  movz x16, #0x8
0xffff91414d18    56  sub csp, jssp, #0x10 (16)
0xffff91414d1c    60  stp fp, lr, [jssp, #-16]!
0xffff91414d20    64  bl #+0x4 (addr 0xffff91414d24)
0xffff91414d24    68  movz x17, #0xa00000000
0xffff91414d28    72  sub csp, jssp, #0x10 (16)
0xffff91414d2c    76  stp x17, cp, [jssp, #-16]!
0xffff91414d30    80  add fp, jssp, #0x10 (16)
0xffff91414d34    84  ldr x17, pc+20 (addr 0x0000ffff91414d48)    ;; lazy deoptimization bailout 0
0xffff91414d38    88  add x17, x17, x16
0xffff91414d3c    92  br x17
0xffff91414d40    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414d44   100  d63f03e0       constant
0xffff91414d48   104  91206000       constant
0xffff91414d4c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414d34  runtime entry
0xffff91414d40  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2211
type = NORMAL
name = BinaryOpICStub(SHL:Smi*Smi->Int32)
compiler = crankshaft
Instructions (size = 120)
0xffff91414ce0     0  mov x2, x1
0xffff91414ce4     4  tbnz w2, #0, #+0x20 (addr 0xffff91414d04)
0xffff91414ce8     8  mov x3, x0
0xffff91414cec    12  tbnz w3, #0, #+0x28 (addr 0xffff91414d14)
0xffff91414cf0    16  asr x0, x2, #32
0xffff91414cf4    20  asr x1, x3, #32
0xffff91414cf8    24  lsl w0, w0, w1
0xffff91414cfc    28  lsl x0, x0, #32
0xffff91414d00    32  ret
0xffff91414d04    36  movz x16, #0x0
0xffff91414d08    40  sub csp, jssp, #0x10 (16)
0xffff91414d0c    44  stp fp, lr, [jssp, #-16]!
0xffff91414d10    48  bl #+0x14 (addr 0xffff91414d24)
0xffff91414d14    52  movz x16, #0x8
0xffff91414d18    56  sub csp, jssp, #0x10 (16)
0xffff91414d1c    60  stp fp, lr, [jssp, #-16]!
0xffff91414d20    64  bl #+0x4 (addr 0xffff91414d24)
0xffff91414d24    68  movz x17, #0xa00000000
0xffff91414d28    72  sub csp, jssp, #0x10 (16)
0xffff91414d2c    76  stp x17, cp, [jssp, #-16]!
0xffff91414d30    80  add fp, jssp, #0x10 (16)
0xffff91414d34    84  ldr x17, pc+20 (addr 0x0000ffff91414d48)    ;; lazy deoptimization bailout 0
0xffff91414d38    88  add x17, x17, x16
0xffff91414d3c    92  br x17
0xffff91414d40    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414d44   100  d63f03e0       constant
0xffff91414d48   104  91206000       constant
0xffff91414d4c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414d34  runtime entry
0xffff91414d40  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2195
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff91414dc0     0  mov x2, x1
0xffff91414dc4     4  tbnz w2, #0, #+0x20 (addr 0xffff91414de4)
0xffff91414dc8     8  mov x3, x0
0xffff91414dcc    12  tbnz w3, #0, #+0x28 (addr 0xffff91414df4)
0xffff91414dd0    16  asr x0, x2, #32
0xffff91414dd4    20  asr x1, x3, #32
0xffff91414dd8    24  lsl w0, w0, w1
0xffff91414ddc    28  lsl x0, x0, #32
0xffff91414de0    32  ret
0xffff91414de4    36  movz x16, #0x0
0xffff91414de8    40  sub csp, jssp, #0x10 (16)
0xffff91414dec    44  stp fp, lr, [jssp, #-16]!
0xffff91414df0    48  bl #+0x14 (addr 0xffff91414e04)
0xffff91414df4    52  movz x16, #0x8
0xffff91414df8    56  sub csp, jssp, #0x10 (16)
0xffff91414dfc    60  stp fp, lr, [jssp, #-16]!
0xffff91414e00    64  bl #+0x4 (addr 0xffff91414e04)
0xffff91414e04    68  movz x17, #0xa00000000
0xffff91414e08    72  sub csp, jssp, #0x10 (16)
0xffff91414e0c    76  stp x17, cp, [jssp, #-16]!
0xffff91414e10    80  add fp, jssp, #0x10 (16)
0xffff91414e14    84  ldr x17, pc+20 (addr 0x0000ffff91414e28)    ;; lazy deoptimization bailout 0
0xffff91414e18    88  add x17, x17, x16
0xffff91414e1c    92  br x17
0xffff91414e20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414e24   100  d63f03e0       constant
0xffff91414e28   104  91206000       constant
0xffff91414e2c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414e14  runtime entry
0xffff91414e20  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2195
type = NORMAL
name = BinaryOpICStub(SHL:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 120)
0xffff91414dc0     0  mov x2, x1
0xffff91414dc4     4  tbnz w2, #0, #+0x20 (addr 0xffff91414de4)
0xffff91414dc8     8  mov x3, x0
0xffff91414dcc    12  tbnz w3, #0, #+0x28 (addr 0xffff91414df4)
0xffff91414dd0    16  asr x0, x2, #32
0xffff91414dd4    20  asr x1, x3, #32
0xffff91414dd8    24  lsl w0, w0, w1
0xffff91414ddc    28  lsl x0, x0, #32
0xffff91414de0    32  ret
0xffff91414de4    36  movz x16, #0x0
0xffff91414de8    40  sub csp, jssp, #0x10 (16)
0xffff91414dec    44  stp fp, lr, [jssp, #-16]!
0xffff91414df0    48  bl #+0x14 (addr 0xffff91414e04)
0xffff91414df4    52  movz x16, #0x8
0xffff91414df8    56  sub csp, jssp, #0x10 (16)
0xffff91414dfc    60  stp fp, lr, [jssp, #-16]!
0xffff91414e00    64  bl #+0x4 (addr 0xffff91414e04)
0xffff91414e04    68  movz x17, #0xa00000000
0xffff91414e08    72  sub csp, jssp, #0x10 (16)
0xffff91414e0c    76  stp x17, cp, [jssp, #-16]!
0xffff91414e10    80  add fp, jssp, #0x10 (16)
0xffff91414e14    84  ldr x17, pc+20 (addr 0x0000ffff91414e28)    ;; lazy deoptimization bailout 0
0xffff91414e18    88  add x17, x17, x16
0xffff91414e1c    92  br x17
0xffff91414e20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414e24   100  d63f03e0       constant
0xffff91414e28   104  91206000       constant
0xffff91414e2c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414e14  runtime entry
0xffff91414e20  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2325
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 144)
0xffff91414ea0     0  mov x2, x1
0xffff91414ea4     4  tbnz w2, #0, #+0x28 (addr 0xffff91414ecc)
0xffff91414ea8     8  mov x3, x0
0xffff91414eac    12  tbnz w3, #0, #+0x30 (addr 0xffff91414edc)
0xffff91414eb0    16  asr x2, x2, #32
0xffff91414eb4    20  asr x3, x3, #32
0xffff91414eb8    24  lsr w2, w2, w3
0xffff91414ebc    28  tbnz w2, #31, #+0x30 (addr 0xffff91414eec)
0xffff91414ec0    32  lsl x2, x2, #32
0xffff91414ec4    36  mov x0, x2
0xffff91414ec8    40  ret
0xffff91414ecc    44  movz x16, #0x0
0xffff91414ed0    48  sub csp, jssp, #0x10 (16)
0xffff91414ed4    52  stp fp, lr, [jssp, #-16]!
0xffff91414ed8    56  bl #+0x24 (addr 0xffff91414efc)
0xffff91414edc    60  movz x16, #0x8
0xffff91414ee0    64  sub csp, jssp, #0x10 (16)
0xffff91414ee4    68  stp fp, lr, [jssp, #-16]!
0xffff91414ee8    72  bl #+0x14 (addr 0xffff91414efc)
0xffff91414eec    76  movz x16, #0x10
0xffff91414ef0    80  sub csp, jssp, #0x10 (16)
0xffff91414ef4    84  stp fp, lr, [jssp, #-16]!
0xffff91414ef8    88  bl #+0x4 (addr 0xffff91414efc)
0xffff91414efc    92  movz x17, #0xa00000000
0xffff91414f00    96  sub csp, jssp, #0x10 (16)
0xffff91414f04   100  stp x17, cp, [jssp, #-16]!
0xffff91414f08   104  add fp, jssp, #0x10 (16)
0xffff91414f0c   108  ldr x17, pc+20 (addr 0x0000ffff91414f20)    ;; lazy deoptimization bailout 0
0xffff91414f10   112  add x17, x17, x16
0xffff91414f14   116  br x17
0xffff91414f18   120  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414f1c   124  d63f03e0       constant
0xffff91414f20   128  91206000       constant
0xffff91414f24   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414f0c  runtime entry
0xffff91414f18  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2325
type = NORMAL
name = BinaryOpICStub(SHR:Int32*Smi->Smi)
compiler = crankshaft
Instructions (size = 144)
0xffff91414ea0     0  mov x2, x1
0xffff91414ea4     4  tbnz w2, #0, #+0x28 (addr 0xffff91414ecc)
0xffff91414ea8     8  mov x3, x0
0xffff91414eac    12  tbnz w3, #0, #+0x30 (addr 0xffff91414edc)
0xffff91414eb0    16  asr x2, x2, #32
0xffff91414eb4    20  asr x3, x3, #32
0xffff91414eb8    24  lsr w2, w2, w3
0xffff91414ebc    28  tbnz w2, #31, #+0x30 (addr 0xffff91414eec)
0xffff91414ec0    32  lsl x2, x2, #32
0xffff91414ec4    36  mov x0, x2
0xffff91414ec8    40  ret
0xffff91414ecc    44  movz x16, #0x0
0xffff91414ed0    48  sub csp, jssp, #0x10 (16)
0xffff91414ed4    52  stp fp, lr, [jssp, #-16]!
0xffff91414ed8    56  bl #+0x24 (addr 0xffff91414efc)
0xffff91414edc    60  movz x16, #0x8
0xffff91414ee0    64  sub csp, jssp, #0x10 (16)
0xffff91414ee4    68  stp fp, lr, [jssp, #-16]!
0xffff91414ee8    72  bl #+0x14 (addr 0xffff91414efc)
0xffff91414eec    76  movz x16, #0x10
0xffff91414ef0    80  sub csp, jssp, #0x10 (16)
0xffff91414ef4    84  stp fp, lr, [jssp, #-16]!
0xffff91414ef8    88  bl #+0x4 (addr 0xffff91414efc)
0xffff91414efc    92  movz x17, #0xa00000000
0xffff91414f00    96  sub csp, jssp, #0x10 (16)
0xffff91414f04   100  stp x17, cp, [jssp, #-16]!
0xffff91414f08   104  add fp, jssp, #0x10 (16)
0xffff91414f0c   108  ldr x17, pc+20 (addr 0x0000ffff91414f20)    ;; lazy deoptimization bailout 0
0xffff91414f10   112  add x17, x17, x16
0xffff91414f14   116  br x17
0xffff91414f18   120  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91414f1c   124  d63f03e0       constant
0xffff91414f20   128  91206000       constant
0xffff91414f24   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91414f0c  runtime entry
0xffff91414f18  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2469
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 280)
0xffff91414fa0     0  mov x2, x0
0xffff91414fa4     4  tbnz w2, #0, #+0xb4 (addr 0xffff91415058)
0xffff91414fa8     8  tbnz w1, #0, #+0x20 (addr 0xffff91414fc8)
0xffff91414fac    12  asr x4, x1, #32
0xffff91414fb0    16  asr x2, x2, #32
0xffff91414fb4    20  lsr w2, w4, w2
0xffff91414fb8    24  tbnz w2, #31, #+0xb0 (addr 0xffff91415068)
0xffff91414fbc    28  lsl x2, x2, #32
0xffff91414fc0    32  mov x0, x2
0xffff91414fc4    36  ret
0xffff91414fc8    40  sub csp, jssp, #0x10 (16)
0xffff91414fcc    44  stp fp, lr, [jssp, #-16]!
0xffff91414fd0    48  movz fp, #0xa00000000
0xffff91414fd4    52  sub csp, jssp, #0x8 (8)
0xffff91414fd8    56  str fp, [jssp, #-8]!
0xffff91414fdc    60  add fp, jssp, #0x8 (8)
0xffff91414fe0    64  ldur x16, [x1, #-1]
0xffff91414fe4    68  ldr x17, [x26, #120]
0xffff91414fe8    72  cmp x16, x17
0xffff91414fec    76  b.ne #+0x30 (addr 0xffff9141501c)
0xffff91414ff0    80  ldur d30, [x1, #7]
0xffff91414ff4    84  fcvtzs x4, d30
0xffff91414ff8    88  cmp x4, #0x1 (1)
0xffff91414ffc    92  ccmn x4, #1, #nzcV, vc
0xffff91415000    96  b.vc #+0x18 (addr 0xffff91415018)
0xffff91415004   100  sub csp, jssp, #0x8 (8)
0xffff91415008   104  str lr, [jssp, #-8]!
0xffff9141500c   108  ldr x16, pc+68 (addr 0x0000ffff91415050)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91415010   112  blr x16
0xffff91415014   116  ldr lr, [jssp], #8
0xffff91415018   120  b #+0x24 (addr 0xffff9141503c)
0xffff9141501c   124  ldp x4, x3, [x26, #64]
0xffff91415020   128  cmp x1, x4
0xffff91415024   132  cset x4, eq
0xffff91415028   136  ccmp x1, x3, #nZcv, ne
0xffff9141502c   140  b.eq #+0x10 (addr 0xffff9141503c)
0xffff91415030   144  ldr x16, [x26, #40]
0xffff91415034   148  cmp x1, x16
0xffff91415038   152  b.ne #+0x40 (addr 0xffff91415078)
0xffff9141503c   156  ldr lr, [jssp, #16]
0xffff91415040   160  ldp xzr, fp, [jssp], #24
0xffff91415044   164  b #-0x94 (addr 0xffff91414fb0)
0xffff91415048   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff9141504c   172  d63f03e0       constant
0xffff91415050   176  9140fee0       constant
0xffff91415054   180  0000ffff       constant
0xffff91415058   184  movz x16, #0x0
0xffff9141505c   188  sub csp, jssp, #0x10 (16)
0xffff91415060   192  stp fp, lr, [jssp, #-16]!
0xffff91415064   196  bl #+0x1c (addr 0xffff91415080)
0xffff91415068   200  movz x16, #0x8
0xffff9141506c   204  sub csp, jssp, #0x10 (16)
0xffff91415070   208  stp fp, lr, [jssp, #-16]!
0xffff91415074   212  bl #+0xc (addr 0xffff91415080)
0xffff91415078   216  movz x16, #0x10
0xffff9141507c   220  bl #+0x14 (addr 0xffff91415090)
0xffff91415080   224  movz x17, #0xa00000000
0xffff91415084   228  sub csp, jssp, #0x10 (16)
0xffff91415088   232  stp x17, cp, [jssp, #-16]!
0xffff9141508c   236  add fp, jssp, #0x10 (16)
0xffff91415090   240  ldr x17, pc+24 (addr 0x0000ffff914150a8)    ;; lazy deoptimization bailout 0
0xffff91415094   244  add x17, x17, x16
0xffff91415098   248  br x17
0xffff9141509c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914150a0   256  d63f03e0       constant
0xffff914150a4   260  d503201f       constant
0xffff914150a8   264  91206000       constant
0xffff914150ac   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff9141500c  code target (STUB)  (0xffff9140fee0)
0xffff91415048  constant pool (size 16)
0xffff91415090  runtime entry
0xffff9141509c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2469
type = NORMAL
name = BinaryOpICStub(SHR:Number*Smi->Int32)
compiler = crankshaft
Instructions (size = 280)
0xffff91414fa0     0  mov x2, x0
0xffff91414fa4     4  tbnz w2, #0, #+0xb4 (addr 0xffff91415058)
0xffff91414fa8     8  tbnz w1, #0, #+0x20 (addr 0xffff91414fc8)
0xffff91414fac    12  asr x4, x1, #32
0xffff91414fb0    16  asr x2, x2, #32
0xffff91414fb4    20  lsr w2, w4, w2
0xffff91414fb8    24  tbnz w2, #31, #+0xb0 (addr 0xffff91415068)
0xffff91414fbc    28  lsl x2, x2, #32
0xffff91414fc0    32  mov x0, x2
0xffff91414fc4    36  ret
0xffff91414fc8    40  sub csp, jssp, #0x10 (16)
0xffff91414fcc    44  stp fp, lr, [jssp, #-16]!
0xffff91414fd0    48  movz fp, #0xa00000000
0xffff91414fd4    52  sub csp, jssp, #0x8 (8)
0xffff91414fd8    56  str fp, [jssp, #-8]!
0xffff91414fdc    60  add fp, jssp, #0x8 (8)
0xffff91414fe0    64  ldur x16, [x1, #-1]
0xffff91414fe4    68  ldr x17, [x26, #120]
0xffff91414fe8    72  cmp x16, x17
0xffff91414fec    76  b.ne #+0x30 (addr 0xffff9141501c)
0xffff91414ff0    80  ldur d30, [x1, #7]
0xffff91414ff4    84  fcvtzs x4, d30
0xffff91414ff8    88  cmp x4, #0x1 (1)
0xffff91414ffc    92  ccmn x4, #1, #nzcV, vc
0xffff91415000    96  b.vc #+0x18 (addr 0xffff91415018)
0xffff91415004   100  sub csp, jssp, #0x8 (8)
0xffff91415008   104  str lr, [jssp, #-8]!
0xffff9141500c   108  ldr x16, pc+68 (addr 0x0000ffff91415050)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91415010   112  blr x16
0xffff91415014   116  ldr lr, [jssp], #8
0xffff91415018   120  b #+0x24 (addr 0xffff9141503c)
0xffff9141501c   124  ldp x4, x3, [x26, #64]
0xffff91415020   128  cmp x1, x4
0xffff91415024   132  cset x4, eq
0xffff91415028   136  ccmp x1, x3, #nZcv, ne
0xffff9141502c   140  b.eq #+0x10 (addr 0xffff9141503c)
0xffff91415030   144  ldr x16, [x26, #40]
0xffff91415034   148  cmp x1, x16
0xffff91415038   152  b.ne #+0x40 (addr 0xffff91415078)
0xffff9141503c   156  ldr lr, [jssp, #16]
0xffff91415040   160  ldp xzr, fp, [jssp], #24
0xffff91415044   164  b #-0x94 (addr 0xffff91414fb0)
0xffff91415048   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff9141504c   172  d63f03e0       constant
0xffff91415050   176  9140fee0       constant
0xffff91415054   180  0000ffff       constant
0xffff91415058   184  movz x16, #0x0
0xffff9141505c   188  sub csp, jssp, #0x10 (16)
0xffff91415060   192  stp fp, lr, [jssp, #-16]!
0xffff91415064   196  bl #+0x1c (addr 0xffff91415080)
0xffff91415068   200  movz x16, #0x8
0xffff9141506c   204  sub csp, jssp, #0x10 (16)
0xffff91415070   208  stp fp, lr, [jssp, #-16]!
0xffff91415074   212  bl #+0xc (addr 0xffff91415080)
0xffff91415078   216  movz x16, #0x10
0xffff9141507c   220  bl #+0x14 (addr 0xffff91415090)
0xffff91415080   224  movz x17, #0xa00000000
0xffff91415084   228  sub csp, jssp, #0x10 (16)
0xffff91415088   232  stp x17, cp, [jssp, #-16]!
0xffff9141508c   236  add fp, jssp, #0x10 (16)
0xffff91415090   240  ldr x17, pc+24 (addr 0x0000ffff914150a8)    ;; lazy deoptimization bailout 0
0xffff91415094   244  add x17, x17, x16
0xffff91415098   248  br x17
0xffff9141509c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914150a0   256  d63f03e0       constant
0xffff914150a4   260  d503201f       constant
0xffff914150a8   264  91206000       constant
0xffff914150ac   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff9141500c  code target (STUB)  (0xffff9140fee0)
0xffff91415048  constant pool (size 16)
0xffff91415090  runtime entry
0xffff9141509c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2453
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 280)
0xffff91415120     0  mov x2, x0
0xffff91415124     4  tbnz w2, #0, #+0xb4 (addr 0xffff914151d8)
0xffff91415128     8  tbnz w1, #0, #+0x20 (addr 0xffff91415148)
0xffff9141512c    12  asr x4, x1, #32
0xffff91415130    16  asr x2, x2, #32
0xffff91415134    20  lsr w2, w4, w2
0xffff91415138    24  tbnz w2, #31, #+0xb0 (addr 0xffff914151e8)
0xffff9141513c    28  lsl x2, x2, #32
0xffff91415140    32  mov x0, x2
0xffff91415144    36  ret
0xffff91415148    40  sub csp, jssp, #0x10 (16)
0xffff9141514c    44  stp fp, lr, [jssp, #-16]!
0xffff91415150    48  movz fp, #0xa00000000
0xffff91415154    52  sub csp, jssp, #0x8 (8)
0xffff91415158    56  str fp, [jssp, #-8]!
0xffff9141515c    60  add fp, jssp, #0x8 (8)
0xffff91415160    64  ldur x16, [x1, #-1]
0xffff91415164    68  ldr x17, [x26, #120]
0xffff91415168    72  cmp x16, x17
0xffff9141516c    76  b.ne #+0x30 (addr 0xffff9141519c)
0xffff91415170    80  ldur d30, [x1, #7]
0xffff91415174    84  fcvtzs x4, d30
0xffff91415178    88  cmp x4, #0x1 (1)
0xffff9141517c    92  ccmn x4, #1, #nzcV, vc
0xffff91415180    96  b.vc #+0x18 (addr 0xffff91415198)
0xffff91415184   100  sub csp, jssp, #0x8 (8)
0xffff91415188   104  str lr, [jssp, #-8]!
0xffff9141518c   108  ldr x16, pc+68 (addr 0x0000ffff914151d0)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91415190   112  blr x16
0xffff91415194   116  ldr lr, [jssp], #8
0xffff91415198   120  b #+0x24 (addr 0xffff914151bc)
0xffff9141519c   124  ldp x4, x3, [x26, #64]
0xffff914151a0   128  cmp x1, x4
0xffff914151a4   132  cset x4, eq
0xffff914151a8   136  ccmp x1, x3, #nZcv, ne
0xffff914151ac   140  b.eq #+0x10 (addr 0xffff914151bc)
0xffff914151b0   144  ldr x16, [x26, #40]
0xffff914151b4   148  cmp x1, x16
0xffff914151b8   152  b.ne #+0x40 (addr 0xffff914151f8)
0xffff914151bc   156  ldr lr, [jssp, #16]
0xffff914151c0   160  ldp xzr, fp, [jssp], #24
0xffff914151c4   164  b #-0x94 (addr 0xffff91415130)
0xffff914151c8   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914151cc   172  d63f03e0       constant
0xffff914151d0   176  9140fee0       constant
0xffff914151d4   180  0000ffff       constant
0xffff914151d8   184  movz x16, #0x0
0xffff914151dc   188  sub csp, jssp, #0x10 (16)
0xffff914151e0   192  stp fp, lr, [jssp, #-16]!
0xffff914151e4   196  bl #+0x1c (addr 0xffff91415200)
0xffff914151e8   200  movz x16, #0x8
0xffff914151ec   204  sub csp, jssp, #0x10 (16)
0xffff914151f0   208  stp fp, lr, [jssp, #-16]!
0xffff914151f4   212  bl #+0xc (addr 0xffff91415200)
0xffff914151f8   216  movz x16, #0x10
0xffff914151fc   220  bl #+0x14 (addr 0xffff91415210)
0xffff91415200   224  movz x17, #0xa00000000
0xffff91415204   228  sub csp, jssp, #0x10 (16)
0xffff91415208   232  stp x17, cp, [jssp, #-16]!
0xffff9141520c   236  add fp, jssp, #0x10 (16)
0xffff91415210   240  ldr x17, pc+24 (addr 0x0000ffff91415228)    ;; lazy deoptimization bailout 0
0xffff91415214   244  add x17, x17, x16
0xffff91415218   248  br x17
0xffff9141521c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91415220   256  d63f03e0       constant
0xffff91415224   260  d503201f       constant
0xffff91415228   264  91206000       constant
0xffff9141522c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff9141518c  code target (STUB)  (0xffff9140fee0)
0xffff914151c8  constant pool (size 16)
0xffff91415210  runtime entry
0xffff9141521c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2453
type = NORMAL
name = BinaryOpICStub(SHR:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 280)
0xffff91415120     0  mov x2, x0
0xffff91415124     4  tbnz w2, #0, #+0xb4 (addr 0xffff914151d8)
0xffff91415128     8  tbnz w1, #0, #+0x20 (addr 0xffff91415148)
0xffff9141512c    12  asr x4, x1, #32
0xffff91415130    16  asr x2, x2, #32
0xffff91415134    20  lsr w2, w4, w2
0xffff91415138    24  tbnz w2, #31, #+0xb0 (addr 0xffff914151e8)
0xffff9141513c    28  lsl x2, x2, #32
0xffff91415140    32  mov x0, x2
0xffff91415144    36  ret
0xffff91415148    40  sub csp, jssp, #0x10 (16)
0xffff9141514c    44  stp fp, lr, [jssp, #-16]!
0xffff91415150    48  movz fp, #0xa00000000
0xffff91415154    52  sub csp, jssp, #0x8 (8)
0xffff91415158    56  str fp, [jssp, #-8]!
0xffff9141515c    60  add fp, jssp, #0x8 (8)
0xffff91415160    64  ldur x16, [x1, #-1]
0xffff91415164    68  ldr x17, [x26, #120]
0xffff91415168    72  cmp x16, x17
0xffff9141516c    76  b.ne #+0x30 (addr 0xffff9141519c)
0xffff91415170    80  ldur d30, [x1, #7]
0xffff91415174    84  fcvtzs x4, d30
0xffff91415178    88  cmp x4, #0x1 (1)
0xffff9141517c    92  ccmn x4, #1, #nzcV, vc
0xffff91415180    96  b.vc #+0x18 (addr 0xffff91415198)
0xffff91415184   100  sub csp, jssp, #0x8 (8)
0xffff91415188   104  str lr, [jssp, #-8]!
0xffff9141518c   108  ldr x16, pc+68 (addr 0x0000ffff914151d0)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff91415190   112  blr x16
0xffff91415194   116  ldr lr, [jssp], #8
0xffff91415198   120  b #+0x24 (addr 0xffff914151bc)
0xffff9141519c   124  ldp x4, x3, [x26, #64]
0xffff914151a0   128  cmp x1, x4
0xffff914151a4   132  cset x4, eq
0xffff914151a8   136  ccmp x1, x3, #nZcv, ne
0xffff914151ac   140  b.eq #+0x10 (addr 0xffff914151bc)
0xffff914151b0   144  ldr x16, [x26, #40]
0xffff914151b4   148  cmp x1, x16
0xffff914151b8   152  b.ne #+0x40 (addr 0xffff914151f8)
0xffff914151bc   156  ldr lr, [jssp, #16]
0xffff914151c0   160  ldp xzr, fp, [jssp], #24
0xffff914151c4   164  b #-0x94 (addr 0xffff91415130)
0xffff914151c8   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914151cc   172  d63f03e0       constant
0xffff914151d0   176  9140fee0       constant
0xffff914151d4   180  0000ffff       constant
0xffff914151d8   184  movz x16, #0x0
0xffff914151dc   188  sub csp, jssp, #0x10 (16)
0xffff914151e0   192  stp fp, lr, [jssp, #-16]!
0xffff914151e4   196  bl #+0x1c (addr 0xffff91415200)
0xffff914151e8   200  movz x16, #0x8
0xffff914151ec   204  sub csp, jssp, #0x10 (16)
0xffff914151f0   208  stp fp, lr, [jssp, #-16]!
0xffff914151f4   212  bl #+0xc (addr 0xffff91415200)
0xffff914151f8   216  movz x16, #0x10
0xffff914151fc   220  bl #+0x14 (addr 0xffff91415210)
0xffff91415200   224  movz x17, #0xa00000000
0xffff91415204   228  sub csp, jssp, #0x10 (16)
0xffff91415208   232  stp x17, cp, [jssp, #-16]!
0xffff9141520c   236  add fp, jssp, #0x10 (16)
0xffff91415210   240  ldr x17, pc+24 (addr 0x0000ffff91415228)    ;; lazy deoptimization bailout 0
0xffff91415214   244  add x17, x17, x16
0xffff91415218   248  br x17
0xffff9141521c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91415220   256  d63f03e0       constant
0xffff91415224   260  d503201f       constant
0xffff91415228   264  91206000       constant
0xffff9141522c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff9141518c  code target (STUB)  (0xffff9140fee0)
0xffff914151c8  constant pool (size 16)
0xffff91415210  runtime entry
0xffff9141521c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2197
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 144)
0xffff914152a0     0  mov x2, x1
0xffff914152a4     4  tbnz w2, #0, #+0x28 (addr 0xffff914152cc)
0xffff914152a8     8  mov x3, x0
0xffff914152ac    12  tbnz w3, #0, #+0x30 (addr 0xffff914152dc)
0xffff914152b0    16  asr x2, x2, #32
0xffff914152b4    20  asr x3, x3, #32
0xffff914152b8    24  lsr w2, w2, w3
0xffff914152bc    28  tbnz w2, #31, #+0x30 (addr 0xffff914152ec)
0xffff914152c0    32  lsl x2, x2, #32
0xffff914152c4    36  mov x0, x2
0xffff914152c8    40  ret
0xffff914152cc    44  movz x16, #0x0
0xffff914152d0    48  sub csp, jssp, #0x10 (16)
0xffff914152d4    52  stp fp, lr, [jssp, #-16]!
0xffff914152d8    56  bl #+0x24 (addr 0xffff914152fc)
0xffff914152dc    60  movz x16, #0x8
0xffff914152e0    64  sub csp, jssp, #0x10 (16)
0xffff914152e4    68  stp fp, lr, [jssp, #-16]!
0xffff914152e8    72  bl #+0x14 (addr 0xffff914152fc)
0xffff914152ec    76  movz x16, #0x10
0xffff914152f0    80  sub csp, jssp, #0x10 (16)
0xffff914152f4    84  stp fp, lr, [jssp, #-16]!
0xffff914152f8    88  bl #+0x4 (addr 0xffff914152fc)
0xffff914152fc    92  movz x17, #0xa00000000
0xffff91415300    96  sub csp, jssp, #0x10 (16)
0xffff91415304   100  stp x17, cp, [jssp, #-16]!
0xffff91415308   104  add fp, jssp, #0x10 (16)
0xffff9141530c   108  ldr x17, pc+20 (addr 0x0000ffff91415320)    ;; lazy deoptimization bailout 0
0xffff91415310   112  add x17, x17, x16
0xffff91415314   116  br x17
0xffff91415318   120  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff9141531c   124  d63f03e0       constant
0xffff91415320   128  91206000       constant
0xffff91415324   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9141530c  runtime entry
0xffff91415318  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2197
type = NORMAL
name = BinaryOpICStub(SHR:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 144)
0xffff914152a0     0  mov x2, x1
0xffff914152a4     4  tbnz w2, #0, #+0x28 (addr 0xffff914152cc)
0xffff914152a8     8  mov x3, x0
0xffff914152ac    12  tbnz w3, #0, #+0x30 (addr 0xffff914152dc)
0xffff914152b0    16  asr x2, x2, #32
0xffff914152b4    20  asr x3, x3, #32
0xffff914152b8    24  lsr w2, w2, w3
0xffff914152bc    28  tbnz w2, #31, #+0x30 (addr 0xffff914152ec)
0xffff914152c0    32  lsl x2, x2, #32
0xffff914152c4    36  mov x0, x2
0xffff914152c8    40  ret
0xffff914152cc    44  movz x16, #0x0
0xffff914152d0    48  sub csp, jssp, #0x10 (16)
0xffff914152d4    52  stp fp, lr, [jssp, #-16]!
0xffff914152d8    56  bl #+0x24 (addr 0xffff914152fc)
0xffff914152dc    60  movz x16, #0x8
0xffff914152e0    64  sub csp, jssp, #0x10 (16)
0xffff914152e4    68  stp fp, lr, [jssp, #-16]!
0xffff914152e8    72  bl #+0x14 (addr 0xffff914152fc)
0xffff914152ec    76  movz x16, #0x10
0xffff914152f0    80  sub csp, jssp, #0x10 (16)
0xffff914152f4    84  stp fp, lr, [jssp, #-16]!
0xffff914152f8    88  bl #+0x4 (addr 0xffff914152fc)
0xffff914152fc    92  movz x17, #0xa00000000
0xffff91415300    96  sub csp, jssp, #0x10 (16)
0xffff91415304   100  stp x17, cp, [jssp, #-16]!
0xffff91415308   104  add fp, jssp, #0x10 (16)
0xffff9141530c   108  ldr x17, pc+20 (addr 0x0000ffff91415320)    ;; lazy deoptimization bailout 0
0xffff91415310   112  add x17, x17, x16
0xffff91415314   116  br x17
0xffff91415318   120  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff9141531c   124  d63f03e0       constant
0xffff91415320   128  91206000       constant
0xffff91415324   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9141530c  runtime entry
0xffff91415318  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4392
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff914153a0     0  mov x2, x1
0xffff914153a4     4  tbnz w2, #0, #+0x1c (addr 0xffff914153c0)
0xffff914153a8     8  mov x3, x0
0xffff914153ac    12  tbnz w3, #0, #+0x24 (addr 0xffff914153d0)
0xffff914153b0    16  subs x2, x2, x3
0xffff914153b4    20  b.vs #+0x2c (addr 0xffff914153e0)
0xffff914153b8    24  mov x0, x2
0xffff914153bc    28  ret
0xffff914153c0    32  movz x16, #0x0
0xffff914153c4    36  sub csp, jssp, #0x10 (16)
0xffff914153c8    40  stp fp, lr, [jssp, #-16]!
0xffff914153cc    44  bl #+0x24 (addr 0xffff914153f0)
0xffff914153d0    48  movz x16, #0x8
0xffff914153d4    52  sub csp, jssp, #0x10 (16)
0xffff914153d8    56  stp fp, lr, [jssp, #-16]!
0xffff914153dc    60  bl #+0x14 (addr 0xffff914153f0)
0xffff914153e0    64  movz x16, #0x10
0xffff914153e4    68  sub csp, jssp, #0x10 (16)
0xffff914153e8    72  stp fp, lr, [jssp, #-16]!
0xffff914153ec    76  bl #+0x4 (addr 0xffff914153f0)
0xffff914153f0    80  movz x17, #0xa00000000
0xffff914153f4    84  sub csp, jssp, #0x10 (16)
0xffff914153f8    88  stp x17, cp, [jssp, #-16]!
0xffff914153fc    92  add fp, jssp, #0x10 (16)
0xffff91415400    96  ldr x17, pc+24 (addr 0x0000ffff91415418)    ;; lazy deoptimization bailout 0
0xffff91415404   100  add x17, x17, x16
0xffff91415408   104  br x17
0xffff9141540c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91415410   112  d63f03e0       constant
0xffff91415414   116  d503201f       constant
0xffff91415418   120  91206000       constant
0xffff9141541c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91415400  runtime entry
0xffff9141540c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4392
type = NORMAL
name = BinaryOpICStub(SUB:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff914153a0     0  mov x2, x1
0xffff914153a4     4  tbnz w2, #0, #+0x1c (addr 0xffff914153c0)
0xffff914153a8     8  mov x3, x0
0xffff914153ac    12  tbnz w3, #0, #+0x24 (addr 0xffff914153d0)
0xffff914153b0    16  subs x2, x2, x3
0xffff914153b4    20  b.vs #+0x2c (addr 0xffff914153e0)
0xffff914153b8    24  mov x0, x2
0xffff914153bc    28  ret
0xffff914153c0    32  movz x16, #0x0
0xffff914153c4    36  sub csp, jssp, #0x10 (16)
0xffff914153c8    40  stp fp, lr, [jssp, #-16]!
0xffff914153cc    44  bl #+0x24 (addr 0xffff914153f0)
0xffff914153d0    48  movz x16, #0x8
0xffff914153d4    52  sub csp, jssp, #0x10 (16)
0xffff914153d8    56  stp fp, lr, [jssp, #-16]!
0xffff914153dc    60  bl #+0x14 (addr 0xffff914153f0)
0xffff914153e0    64  movz x16, #0x10
0xffff914153e4    68  sub csp, jssp, #0x10 (16)
0xffff914153e8    72  stp fp, lr, [jssp, #-16]!
0xffff914153ec    76  bl #+0x4 (addr 0xffff914153f0)
0xffff914153f0    80  movz x17, #0xa00000000
0xffff914153f4    84  sub csp, jssp, #0x10 (16)
0xffff914153f8    88  stp x17, cp, [jssp, #-16]!
0xffff914153fc    92  add fp, jssp, #0x10 (16)
0xffff91415400    96  ldr x17, pc+24 (addr 0x0000ffff91415418)    ;; lazy deoptimization bailout 0
0xffff91415404   100  add x17, x17, x16
0xffff91415408   104  br x17
0xffff9141540c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91415410   112  d63f03e0       constant
0xffff91415414   116  d503201f       constant
0xffff91415418   120  91206000       constant
0xffff9141541c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91415400  runtime entry
0xffff9141540c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6456
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff914154a0     0  mov x2, x1
0xffff914154a4     4  tbnz w2, #0, #+0xf4 (addr 0xffff91415598)
0xffff914154a8     8  tbz w0, #0, #+0x34 (addr 0xffff914154dc)
0xffff914154ac    12  ldur x16, [x0, #-1]
0xffff914154b0    16  ldr x17, [x26, #120]
0xffff914154b4    20  cmp x16, x17
0xffff914154b8    24  b.ne #+0xc (addr 0xffff914154c4)
0xffff914154bc    28  ldur d0, [x0, #7]
0xffff914154c0    32  b #+0x20 (addr 0xffff914154e0)
0xffff914154c4    36  ldr x16, [x26, #40]
0xffff914154c8    40  cmp x0, x16
0xffff914154cc    44  b.ne #+0xdc (addr 0xffff914155a8)
0xffff914154d0    48  ldr x3, [x26, #928]
0xffff914154d4    52  ldur d0, [x3, #7]
0xffff914154d8    56  b #+0x8 (addr 0xffff914154e0)
0xffff914154dc    60  scvtf d0, x0, #32
0xffff914154e0    64  scvtf d1, x2, #32
0xffff914154e4    68  fsub d0, d1, d0
0xffff914154e8    72  movz x1, #0xf2c0
0xffff914154ec    76  movk x1, #0x4117, lsl #16
0xffff914154f0    80  ldp x2, x0, [x1]
0xffff914154f4    84  adds x16, x2, #0x10 (16)
0xffff914154f8    88  ccmp x16, x0, #nzCv, lo
0xffff914154fc    92  b.hi #+0x20 (addr 0xffff9141551c)
0xffff91415500    96  str x16, [x1]
0xffff91415504   100  ldr x1, [x26, #120]
0xffff91415508   104  str x1, [x2]
0xffff9141550c   108  orr x2, x2, #0x1
0xffff91415510   112  stur d0, [x2, #7]
0xffff91415514   116  mov x0, x2
0xffff91415518   120  ret
0xffff9141551c   124  sub csp, jssp, #0x10 (16)
0xffff91415520   128  stp fp, lr, [jssp, #-16]!
0xffff91415524   132  movz fp, #0xa00000000
0xffff91415528   136  sub csp, jssp, #0x8 (8)
0xffff9141552c   140  str fp, [jssp, #-8]!
0xffff91415530   144  add fp, jssp, #0x8 (8)
0xffff91415534   148  movz x2, #0x0
0xffff91415538   152  mov x16, lr
0xffff9141553c   156  ldr x17, pc+68 (addr 0x0000ffff91415580)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91415540   160  blr x17
0xffff91415544   164  ldur cp, [fp, #-8]
0xffff91415548   168  movz x0, #0x0
0xffff9141554c   172  movz x1, #0x4b48
0xffff91415550   176  movk x1, #0xe4, lsl #16
0xffff91415554   180  ldr x16, pc+52 (addr 0x0000ffff91415588)    ;; code: STUB, CEntryStub, minor: 5
0xffff91415558   184  blr x16
0xffff9141555c   188  str x0, [jssp, #16]
0xffff91415560   192  ldr x16, pc+48 (addr 0x0000ffff91415590)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91415564   196  blr x16
0xffff91415568   200  ldr lr, [jssp, #16]
0xffff9141556c   204  ldp xzr, fp, [jssp], #24
0xffff91415570   208  b #-0x60 (addr 0xffff91415510)
0xffff91415574   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91415578   216  d63f03e0       constant
0xffff9141557c   220  d503201f       constant
0xffff91415580   224  91406820       constant
0xffff91415584   228  0000ffff       constant
0xffff91415588   232  91406260       constant
0xffff9141558c   236  0000ffff       constant
0xffff91415590   240  914068e0       constant
0xffff91415594   244  0000ffff       constant
0xffff91415598   248  movz x16, #0x0
0xffff9141559c   252  sub csp, jssp, #0x10 (16)
0xffff914155a0   256  stp fp, lr, [jssp, #-16]!
0xffff914155a4   260  bl #+0x14 (addr 0xffff914155b8)
0xffff914155a8   264  movz x16, #0x8
0xffff914155ac   268  sub csp, jssp, #0x10 (16)
0xffff914155b0   272  stp fp, lr, [jssp, #-16]!
0xffff914155b4   276  bl #+0x4 (addr 0xffff914155b8)
0xffff914155b8   280  movz x17, #0xa00000000
0xffff914155bc   284  sub csp, jssp, #0x10 (16)
0xffff914155c0   288  stp x17, cp, [jssp, #-16]!
0xffff914155c4   292  add fp, jssp, #0x10 (16)
0xffff914155c8   296  ldr x17, pc+24 (addr 0x0000ffff914155e0)    ;; lazy deoptimization bailout 0
0xffff914155cc   300  add x17, x17, x16
0xffff914155d0   304  br x17
0xffff914155d4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914155d8   312  d63f03e0       constant
0xffff914155dc   316  d503201f       constant
0xffff914155e0   320  91206000       constant
0xffff914155e4   324  0000ffff       constant


Safepoints (size = 21)
0xffff9141555c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9141553c  code target (STUB)  (0xffff91406820)
0xffff91415554  code target (STUB)  (0xffff91406260)
0xffff91415560  code target (STUB)  (0xffff914068e0)
0xffff91415574  constant pool (size 36)
0xffff914155c8  runtime entry
0xffff914155d4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6456
type = NORMAL
name = BinaryOpICStub(SUB:Int32*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff914154a0     0  mov x2, x1
0xffff914154a4     4  tbnz w2, #0, #+0xf4 (addr 0xffff91415598)
0xffff914154a8     8  tbz w0, #0, #+0x34 (addr 0xffff914154dc)
0xffff914154ac    12  ldur x16, [x0, #-1]
0xffff914154b0    16  ldr x17, [x26, #120]
0xffff914154b4    20  cmp x16, x17
0xffff914154b8    24  b.ne #+0xc (addr 0xffff914154c4)
0xffff914154bc    28  ldur d0, [x0, #7]
0xffff914154c0    32  b #+0x20 (addr 0xffff914154e0)
0xffff914154c4    36  ldr x16, [x26, #40]
0xffff914154c8    40  cmp x0, x16
0xffff914154cc    44  b.ne #+0xdc (addr 0xffff914155a8)
0xffff914154d0    48  ldr x3, [x26, #928]
0xffff914154d4    52  ldur d0, [x3, #7]
0xffff914154d8    56  b #+0x8 (addr 0xffff914154e0)
0xffff914154dc    60  scvtf d0, x0, #32
0xffff914154e0    64  scvtf d1, x2, #32
0xffff914154e4    68  fsub d0, d1, d0
0xffff914154e8    72  movz x1, #0xf2c0
0xffff914154ec    76  movk x1, #0x4117, lsl #16
0xffff914154f0    80  ldp x2, x0, [x1]
0xffff914154f4    84  adds x16, x2, #0x10 (16)
0xffff914154f8    88  ccmp x16, x0, #nzCv, lo
0xffff914154fc    92  b.hi #+0x20 (addr 0xffff9141551c)
0xffff91415500    96  str x16, [x1]
0xffff91415504   100  ldr x1, [x26, #120]
0xffff91415508   104  str x1, [x2]
0xffff9141550c   108  orr x2, x2, #0x1
0xffff91415510   112  stur d0, [x2, #7]
0xffff91415514   116  mov x0, x2
0xffff91415518   120  ret
0xffff9141551c   124  sub csp, jssp, #0x10 (16)
0xffff91415520   128  stp fp, lr, [jssp, #-16]!
0xffff91415524   132  movz fp, #0xa00000000
0xffff91415528   136  sub csp, jssp, #0x8 (8)
0xffff9141552c   140  str fp, [jssp, #-8]!
0xffff91415530   144  add fp, jssp, #0x8 (8)
0xffff91415534   148  movz x2, #0x0
0xffff91415538   152  mov x16, lr
0xffff9141553c   156  ldr x17, pc+68 (addr 0x0000ffff91415580)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91415540   160  blr x17
0xffff91415544   164  ldur cp, [fp, #-8]
0xffff91415548   168  movz x0, #0x0
0xffff9141554c   172  movz x1, #0x4b48
0xffff91415550   176  movk x1, #0xe4, lsl #16
0xffff91415554   180  ldr x16, pc+52 (addr 0x0000ffff91415588)    ;; code: STUB, CEntryStub, minor: 5
0xffff91415558   184  blr x16
0xffff9141555c   188  str x0, [jssp, #16]
0xffff91415560   192  ldr x16, pc+48 (addr 0x0000ffff91415590)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91415564   196  blr x16
0xffff91415568   200  ldr lr, [jssp, #16]
0xffff9141556c   204  ldp xzr, fp, [jssp], #24
0xffff91415570   208  b #-0x60 (addr 0xffff91415510)
0xffff91415574   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91415578   216  d63f03e0       constant
0xffff9141557c   220  d503201f       constant
0xffff91415580   224  91406820       constant
0xffff91415584   228  0000ffff       constant
0xffff91415588   232  91406260       constant
0xffff9141558c   236  0000ffff       constant
0xffff91415590   240  914068e0       constant
0xffff91415594   244  0000ffff       constant
0xffff91415598   248  movz x16, #0x0
0xffff9141559c   252  sub csp, jssp, #0x10 (16)
0xffff914155a0   256  stp fp, lr, [jssp, #-16]!
0xffff914155a4   260  bl #+0x14 (addr 0xffff914155b8)
0xffff914155a8   264  movz x16, #0x8
0xffff914155ac   268  sub csp, jssp, #0x10 (16)
0xffff914155b0   272  stp fp, lr, [jssp, #-16]!
0xffff914155b4   276  bl #+0x4 (addr 0xffff914155b8)
0xffff914155b8   280  movz x17, #0xa00000000
0xffff914155bc   284  sub csp, jssp, #0x10 (16)
0xffff914155c0   288  stp x17, cp, [jssp, #-16]!
0xffff914155c4   292  add fp, jssp, #0x10 (16)
0xffff914155c8   296  ldr x17, pc+24 (addr 0x0000ffff914155e0)    ;; lazy deoptimization bailout 0
0xffff914155cc   300  add x17, x17, x16
0xffff914155d0   304  br x17
0xffff914155d4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914155d8   312  d63f03e0       constant
0xffff914155dc   316  d503201f       constant
0xffff914155e0   320  91206000       constant
0xffff914155e4   324  0000ffff       constant


Safepoints (size = 21)
0xffff9141555c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff9141553c  code target (STUB)  (0xffff91406820)
0xffff91415554  code target (STUB)  (0xffff91406260)
0xffff91415560  code target (STUB)  (0xffff914068e0)
0xffff91415574  constant pool (size 36)
0xffff914155c8  runtime entry
0xffff914155d4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2344
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff91415660     0  mov x2, x1
0xffff91415664     4  tbnz w2, #0, #+0x1c (addr 0xffff91415680)
0xffff91415668     8  mov x3, x0
0xffff9141566c    12  tbnz w3, #0, #+0x24 (addr 0xffff91415690)
0xffff91415670    16  subs x2, x2, x3
0xffff91415674    20  b.vs #+0x2c (addr 0xffff914156a0)
0xffff91415678    24  mov x0, x2
0xffff9141567c    28  ret
0xffff91415680    32  movz x16, #0x0
0xffff91415684    36  sub csp, jssp, #0x10 (16)
0xffff91415688    40  stp fp, lr, [jssp, #-16]!
0xffff9141568c    44  bl #+0x24 (addr 0xffff914156b0)
0xffff91415690    48  movz x16, #0x8
0xffff91415694    52  sub csp, jssp, #0x10 (16)
0xffff91415698    56  stp fp, lr, [jssp, #-16]!
0xffff9141569c    60  bl #+0x14 (addr 0xffff914156b0)
0xffff914156a0    64  movz x16, #0x10
0xffff914156a4    68  sub csp, jssp, #0x10 (16)
0xffff914156a8    72  stp fp, lr, [jssp, #-16]!
0xffff914156ac    76  bl #+0x4 (addr 0xffff914156b0)
0xffff914156b0    80  movz x17, #0xa00000000
0xffff914156b4    84  sub csp, jssp, #0x10 (16)
0xffff914156b8    88  stp x17, cp, [jssp, #-16]!
0xffff914156bc    92  add fp, jssp, #0x10 (16)
0xffff914156c0    96  ldr x17, pc+24 (addr 0x0000ffff914156d8)    ;; lazy deoptimization bailout 0
0xffff914156c4   100  add x17, x17, x16
0xffff914156c8   104  br x17
0xffff914156cc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914156d0   112  d63f03e0       constant
0xffff914156d4   116  d503201f       constant
0xffff914156d8   120  91206000       constant
0xffff914156dc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914156c0  runtime entry
0xffff914156cc  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2344
type = NORMAL
name = BinaryOpICStub(SUB:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff91415660     0  mov x2, x1
0xffff91415664     4  tbnz w2, #0, #+0x1c (addr 0xffff91415680)
0xffff91415668     8  mov x3, x0
0xffff9141566c    12  tbnz w3, #0, #+0x24 (addr 0xffff91415690)
0xffff91415670    16  subs x2, x2, x3
0xffff91415674    20  b.vs #+0x2c (addr 0xffff914156a0)
0xffff91415678    24  mov x0, x2
0xffff9141567c    28  ret
0xffff91415680    32  movz x16, #0x0
0xffff91415684    36  sub csp, jssp, #0x10 (16)
0xffff91415688    40  stp fp, lr, [jssp, #-16]!
0xffff9141568c    44  bl #+0x24 (addr 0xffff914156b0)
0xffff91415690    48  movz x16, #0x8
0xffff91415694    52  sub csp, jssp, #0x10 (16)
0xffff91415698    56  stp fp, lr, [jssp, #-16]!
0xffff9141569c    60  bl #+0x14 (addr 0xffff914156b0)
0xffff914156a0    64  movz x16, #0x10
0xffff914156a4    68  sub csp, jssp, #0x10 (16)
0xffff914156a8    72  stp fp, lr, [jssp, #-16]!
0xffff914156ac    76  bl #+0x4 (addr 0xffff914156b0)
0xffff914156b0    80  movz x17, #0xa00000000
0xffff914156b4    84  sub csp, jssp, #0x10 (16)
0xffff914156b8    88  stp x17, cp, [jssp, #-16]!
0xffff914156bc    92  add fp, jssp, #0x10 (16)
0xffff914156c0    96  ldr x17, pc+24 (addr 0x0000ffff914156d8)    ;; lazy deoptimization bailout 0
0xffff914156c4   100  add x17, x17, x16
0xffff914156c8   104  br x17
0xffff914156cc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914156d0   112  d63f03e0       constant
0xffff914156d4   116  d503201f       constant
0xffff914156d8   120  91206000       constant
0xffff914156dc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914156c0  runtime entry
0xffff914156cc  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4536
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff91415760     0  mov x2, x0
0xffff91415764     4  tbnz w2, #0, #+0xf4 (addr 0xffff91415858)
0xffff91415768     8  tbz w1, #0, #+0x34 (addr 0xffff9141579c)
0xffff9141576c    12  ldur x16, [x1, #-1]
0xffff91415770    16  ldr x17, [x26, #120]
0xffff91415774    20  cmp x16, x17
0xffff91415778    24  b.ne #+0xc (addr 0xffff91415784)
0xffff9141577c    28  ldur d0, [x1, #7]
0xffff91415780    32  b #+0x20 (addr 0xffff914157a0)
0xffff91415784    36  ldr x16, [x26, #40]
0xffff91415788    40  cmp x1, x16
0xffff9141578c    44  b.ne #+0xdc (addr 0xffff91415868)
0xffff91415790    48  ldr x3, [x26, #928]
0xffff91415794    52  ldur d0, [x3, #7]
0xffff91415798    56  b #+0x8 (addr 0xffff914157a0)
0xffff9141579c    60  scvtf d0, x1, #32
0xffff914157a0    64  scvtf d1, x2, #32
0xffff914157a4    68  fsub d0, d0, d1
0xffff914157a8    72  movz x1, #0xf2c0
0xffff914157ac    76  movk x1, #0x4117, lsl #16
0xffff914157b0    80  ldp x2, x0, [x1]
0xffff914157b4    84  adds x16, x2, #0x10 (16)
0xffff914157b8    88  ccmp x16, x0, #nzCv, lo
0xffff914157bc    92  b.hi #+0x20 (addr 0xffff914157dc)
0xffff914157c0    96  str x16, [x1]
0xffff914157c4   100  ldr x1, [x26, #120]
0xffff914157c8   104  str x1, [x2]
0xffff914157cc   108  orr x2, x2, #0x1
0xffff914157d0   112  stur d0, [x2, #7]
0xffff914157d4   116  mov x0, x2
0xffff914157d8   120  ret
0xffff914157dc   124  sub csp, jssp, #0x10 (16)
0xffff914157e0   128  stp fp, lr, [jssp, #-16]!
0xffff914157e4   132  movz fp, #0xa00000000
0xffff914157e8   136  sub csp, jssp, #0x8 (8)
0xffff914157ec   140  str fp, [jssp, #-8]!
0xffff914157f0   144  add fp, jssp, #0x8 (8)
0xffff914157f4   148  movz x2, #0x0
0xffff914157f8   152  mov x16, lr
0xffff914157fc   156  ldr x17, pc+68 (addr 0x0000ffff91415840)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91415800   160  blr x17
0xffff91415804   164  ldur cp, [fp, #-8]
0xffff91415808   168  movz x0, #0x0
0xffff9141580c   172  movz x1, #0x4b48
0xffff91415810   176  movk x1, #0xe4, lsl #16
0xffff91415814   180  ldr x16, pc+52 (addr 0x0000ffff91415848)    ;; code: STUB, CEntryStub, minor: 5
0xffff91415818   184  blr x16
0xffff9141581c   188  str x0, [jssp, #16]
0xffff91415820   192  ldr x16, pc+48 (addr 0x0000ffff91415850)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91415824   196  blr x16
0xffff91415828   200  ldr lr, [jssp, #16]
0xffff9141582c   204  ldp xzr, fp, [jssp], #24
0xffff91415830   208  b #-0x60 (addr 0xffff914157d0)
0xffff91415834   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91415838   216  d63f03e0       constant
0xffff9141583c   220  d503201f       constant
0xffff91415840   224  91406820       constant
0xffff91415844   228  0000ffff       constant
0xffff91415848   232  91406260       constant
0xffff9141584c   236  0000ffff       constant
0xffff91415850   240  914068e0       constant
0xffff91415854   244  0000ffff       constant
0xffff91415858   248  movz x16, #0x0
0xffff9141585c   252  sub csp, jssp, #0x10 (16)
0xffff91415860   256  stp fp, lr, [jssp, #-16]!
0xffff91415864   260  bl #+0x14 (addr 0xffff91415878)
0xffff91415868   264  movz x16, #0x8
0xffff9141586c   268  sub csp, jssp, #0x10 (16)
0xffff91415870   272  stp fp, lr, [jssp, #-16]!
0xffff91415874   276  bl #+0x4 (addr 0xffff91415878)
0xffff91415878   280  movz x17, #0xa00000000
0xffff9141587c   284  sub csp, jssp, #0x10 (16)
0xffff91415880   288  stp x17, cp, [jssp, #-16]!
0xffff91415884   292  add fp, jssp, #0x10 (16)
0xffff91415888   296  ldr x17, pc+24 (addr 0x0000ffff914158a0)    ;; lazy deoptimization bailout 0
0xffff9141588c   300  add x17, x17, x16
0xffff91415890   304  br x17
0xffff91415894   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91415898   312  d63f03e0       constant
0xffff9141589c   316  d503201f       constant
0xffff914158a0   320  91206000       constant
0xffff914158a4   324  0000ffff       constant


Safepoints (size = 21)
0xffff9141581c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff914157fc  code target (STUB)  (0xffff91406820)
0xffff91415814  code target (STUB)  (0xffff91406260)
0xffff91415820  code target (STUB)  (0xffff914068e0)
0xffff91415834  constant pool (size 36)
0xffff91415888  runtime entry
0xffff91415894  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4536
type = NORMAL
name = BinaryOpICStub(SUB:Number*Int32->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff91415760     0  mov x2, x0
0xffff91415764     4  tbnz w2, #0, #+0xf4 (addr 0xffff91415858)
0xffff91415768     8  tbz w1, #0, #+0x34 (addr 0xffff9141579c)
0xffff9141576c    12  ldur x16, [x1, #-1]
0xffff91415770    16  ldr x17, [x26, #120]
0xffff91415774    20  cmp x16, x17
0xffff91415778    24  b.ne #+0xc (addr 0xffff91415784)
0xffff9141577c    28  ldur d0, [x1, #7]
0xffff91415780    32  b #+0x20 (addr 0xffff914157a0)
0xffff91415784    36  ldr x16, [x26, #40]
0xffff91415788    40  cmp x1, x16
0xffff9141578c    44  b.ne #+0xdc (addr 0xffff91415868)
0xffff91415790    48  ldr x3, [x26, #928]
0xffff91415794    52  ldur d0, [x3, #7]
0xffff91415798    56  b #+0x8 (addr 0xffff914157a0)
0xffff9141579c    60  scvtf d0, x1, #32
0xffff914157a0    64  scvtf d1, x2, #32
0xffff914157a4    68  fsub d0, d0, d1
0xffff914157a8    72  movz x1, #0xf2c0
0xffff914157ac    76  movk x1, #0x4117, lsl #16
0xffff914157b0    80  ldp x2, x0, [x1]
0xffff914157b4    84  adds x16, x2, #0x10 (16)
0xffff914157b8    88  ccmp x16, x0, #nzCv, lo
0xffff914157bc    92  b.hi #+0x20 (addr 0xffff914157dc)
0xffff914157c0    96  str x16, [x1]
0xffff914157c4   100  ldr x1, [x26, #120]
0xffff914157c8   104  str x1, [x2]
0xffff914157cc   108  orr x2, x2, #0x1
0xffff914157d0   112  stur d0, [x2, #7]
0xffff914157d4   116  mov x0, x2
0xffff914157d8   120  ret
0xffff914157dc   124  sub csp, jssp, #0x10 (16)
0xffff914157e0   128  stp fp, lr, [jssp, #-16]!
0xffff914157e4   132  movz fp, #0xa00000000
0xffff914157e8   136  sub csp, jssp, #0x8 (8)
0xffff914157ec   140  str fp, [jssp, #-8]!
0xffff914157f0   144  add fp, jssp, #0x8 (8)
0xffff914157f4   148  movz x2, #0x0
0xffff914157f8   152  mov x16, lr
0xffff914157fc   156  ldr x17, pc+68 (addr 0x0000ffff91415840)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91415800   160  blr x17
0xffff91415804   164  ldur cp, [fp, #-8]
0xffff91415808   168  movz x0, #0x0
0xffff9141580c   172  movz x1, #0x4b48
0xffff91415810   176  movk x1, #0xe4, lsl #16
0xffff91415814   180  ldr x16, pc+52 (addr 0x0000ffff91415848)    ;; code: STUB, CEntryStub, minor: 5
0xffff91415818   184  blr x16
0xffff9141581c   188  str x0, [jssp, #16]
0xffff91415820   192  ldr x16, pc+48 (addr 0x0000ffff91415850)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91415824   196  blr x16
0xffff91415828   200  ldr lr, [jssp, #16]
0xffff9141582c   204  ldp xzr, fp, [jssp], #24
0xffff91415830   208  b #-0x60 (addr 0xffff914157d0)
0xffff91415834   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91415838   216  d63f03e0       constant
0xffff9141583c   220  d503201f       constant
0xffff91415840   224  91406820       constant
0xffff91415844   228  0000ffff       constant
0xffff91415848   232  91406260       constant
0xffff9141584c   236  0000ffff       constant
0xffff91415850   240  914068e0       constant
0xffff91415854   244  0000ffff       constant
0xffff91415858   248  movz x16, #0x0
0xffff9141585c   252  sub csp, jssp, #0x10 (16)
0xffff91415860   256  stp fp, lr, [jssp, #-16]!
0xffff91415864   260  bl #+0x14 (addr 0xffff91415878)
0xffff91415868   264  movz x16, #0x8
0xffff9141586c   268  sub csp, jssp, #0x10 (16)
0xffff91415870   272  stp fp, lr, [jssp, #-16]!
0xffff91415874   276  bl #+0x4 (addr 0xffff91415878)
0xffff91415878   280  movz x17, #0xa00000000
0xffff9141587c   284  sub csp, jssp, #0x10 (16)
0xffff91415880   288  stp x17, cp, [jssp, #-16]!
0xffff91415884   292  add fp, jssp, #0x10 (16)
0xffff91415888   296  ldr x17, pc+24 (addr 0x0000ffff914158a0)    ;; lazy deoptimization bailout 0
0xffff9141588c   300  add x17, x17, x16
0xffff91415890   304  br x17
0xffff91415894   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91415898   312  d63f03e0       constant
0xffff9141589c   316  d503201f       constant
0xffff914158a0   320  91206000       constant
0xffff914158a4   324  0000ffff       constant


Safepoints (size = 21)
0xffff9141581c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff914157fc  code target (STUB)  (0xffff91406820)
0xffff91415814  code target (STUB)  (0xffff91406260)
0xffff91415820  code target (STUB)  (0xffff914068e0)
0xffff91415834  constant pool (size 36)
0xffff91415888  runtime entry
0xffff91415894  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6584
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 389)
0xffff91415920     0  tbz w1, #0, #+0x34 (addr 0xffff91415954)
0xffff91415924     4  ldur x16, [x1, #-1]
0xffff91415928     8  ldr x17, [x26, #120]
0xffff9141592c    12  cmp x16, x17
0xffff91415930    16  b.ne #+0xc (addr 0xffff9141593c)
0xffff91415934    20  ldur d0, [x1, #7]
0xffff91415938    24  b #+0x20 (addr 0xffff91415958)
0xffff9141593c    28  ldr x16, [x26, #40]
0xffff91415940    32  cmp x1, x16
0xffff91415944    36  b.ne #+0xfc (addr 0xffff91415a40)
0xffff91415948    40  ldr x2, [x26, #928]
0xffff9141594c    44  ldur d0, [x2, #7]
0xffff91415950    48  b #+0x8 (addr 0xffff91415958)
0xffff91415954    52  scvtf d0, x1, #32
0xffff91415958    56  tbz w0, #0, #+0x34 (addr 0xffff9141598c)
0xffff9141595c    60  ldur x16, [x0, #-1]
0xffff91415960    64  ldr x17, [x26, #120]
0xffff91415964    68  cmp x16, x17
0xffff91415968    72  b.ne #+0xc (addr 0xffff91415974)
0xffff9141596c    76  ldur d1, [x0, #7]
0xffff91415970    80  b #+0x20 (addr 0xffff91415990)
0xffff91415974    84  ldr x16, [x26, #40]
0xffff91415978    88  cmp x0, x16
0xffff9141597c    92  b.ne #+0xd4 (addr 0xffff91415a50)
0xffff91415980    96  ldr x2, [x26, #928]
0xffff91415984   100  ldur d1, [x2, #7]
0xffff91415988   104  b #+0x8 (addr 0xffff91415990)
0xffff9141598c   108  scvtf d1, x0, #32
0xffff91415990   112  fsub d0, d0, d1
0xffff91415994   116  movz x1, #0xf2c0
0xffff91415998   120  movk x1, #0x4117, lsl #16
0xffff9141599c   124  ldp x2, x0, [x1]
0xffff914159a0   128  adds x16, x2, #0x10 (16)
0xffff914159a4   132  ccmp x16, x0, #nzCv, lo
0xffff914159a8   136  b.hi #+0x20 (addr 0xffff914159c8)
0xffff914159ac   140  str x16, [x1]
0xffff914159b0   144  ldr x1, [x26, #120]
0xffff914159b4   148  str x1, [x2]
0xffff914159b8   152  orr x2, x2, #0x1
0xffff914159bc   156  stur d0, [x2, #7]
0xffff914159c0   160  mov x0, x2
0xffff914159c4   164  ret
0xffff914159c8   168  sub csp, jssp, #0x10 (16)
0xffff914159cc   172  stp fp, lr, [jssp, #-16]!
0xffff914159d0   176  movz fp, #0xa00000000
0xffff914159d4   180  sub csp, jssp, #0x8 (8)
0xffff914159d8   184  str fp, [jssp, #-8]!
0xffff914159dc   188  add fp, jssp, #0x8 (8)
0xffff914159e0   192  movz x2, #0x0
0xffff914159e4   196  mov x16, lr
0xffff914159e8   200  ldr x17, pc+64 (addr 0x0000ffff91415a28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914159ec   204  blr x17
0xffff914159f0   208  ldur cp, [fp, #-8]
0xffff914159f4   212  movz x0, #0x0
0xffff914159f8   216  movz x1, #0x4b48
0xffff914159fc   220  movk x1, #0xe4, lsl #16
0xffff91415a00   224  ldr x16, pc+48 (addr 0x0000ffff91415a30)    ;; code: STUB, CEntryStub, minor: 5
0xffff91415a04   228  blr x16
0xffff91415a08   232  str x0, [jssp, #16]
0xffff91415a0c   236  ldr x16, pc+44 (addr 0x0000ffff91415a38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91415a10   240  blr x16
0xffff91415a14   244  ldr lr, [jssp, #16]
0xffff91415a18   248  ldp xzr, fp, [jssp], #24
0xffff91415a1c   252  b #-0x60 (addr 0xffff914159bc)
0xffff91415a20   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91415a24   260  d63f03e0       constant
0xffff91415a28   264  91406820       constant
0xffff91415a2c   268  0000ffff       constant
0xffff91415a30   272  91406260       constant
0xffff91415a34   276  0000ffff       constant
0xffff91415a38   280  914068e0       constant
0xffff91415a3c   284  0000ffff       constant
0xffff91415a40   288  movz x16, #0x0
0xffff91415a44   292  sub csp, jssp, #0x10 (16)
0xffff91415a48   296  stp fp, lr, [jssp, #-16]!
0xffff91415a4c   300  bl #+0x14 (addr 0xffff91415a60)
0xffff91415a50   304  movz x16, #0x8
0xffff91415a54   308  sub csp, jssp, #0x10 (16)
0xffff91415a58   312  stp fp, lr, [jssp, #-16]!
0xffff91415a5c   316  bl #+0x4 (addr 0xffff91415a60)
0xffff91415a60   320  movz x17, #0xa00000000
0xffff91415a64   324  sub csp, jssp, #0x10 (16)
0xffff91415a68   328  stp x17, cp, [jssp, #-16]!
0xffff91415a6c   332  add fp, jssp, #0x10 (16)
0xffff91415a70   336  ldr x17, pc+24 (addr 0x0000ffff91415a88)    ;; lazy deoptimization bailout 0
0xffff91415a74   340  add x17, x17, x16
0xffff91415a78   344  br x17
0xffff91415a7c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91415a80   352  d63f03e0       constant
0xffff91415a84   356  d503201f       constant
0xffff91415a88   360  91206000       constant
0xffff91415a8c   364  0000ffff       constant


Safepoints (size = 21)
0xffff91415a08   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff914159e8  code target (STUB)  (0xffff91406820)
0xffff91415a00  code target (STUB)  (0xffff91406260)
0xffff91415a0c  code target (STUB)  (0xffff914068e0)
0xffff91415a20  constant pool (size 32)
0xffff91415a70  runtime entry
0xffff91415a7c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6584
type = NORMAL
name = BinaryOpICStub(SUB:Number*Number->Number)
compiler = crankshaft
Instructions (size = 389)
0xffff91415920     0  tbz w1, #0, #+0x34 (addr 0xffff91415954)
0xffff91415924     4  ldur x16, [x1, #-1]
0xffff91415928     8  ldr x17, [x26, #120]
0xffff9141592c    12  cmp x16, x17
0xffff91415930    16  b.ne #+0xc (addr 0xffff9141593c)
0xffff91415934    20  ldur d0, [x1, #7]
0xffff91415938    24  b #+0x20 (addr 0xffff91415958)
0xffff9141593c    28  ldr x16, [x26, #40]
0xffff91415940    32  cmp x1, x16
0xffff91415944    36  b.ne #+0xfc (addr 0xffff91415a40)
0xffff91415948    40  ldr x2, [x26, #928]
0xffff9141594c    44  ldur d0, [x2, #7]
0xffff91415950    48  b #+0x8 (addr 0xffff91415958)
0xffff91415954    52  scvtf d0, x1, #32
0xffff91415958    56  tbz w0, #0, #+0x34 (addr 0xffff9141598c)
0xffff9141595c    60  ldur x16, [x0, #-1]
0xffff91415960    64  ldr x17, [x26, #120]
0xffff91415964    68  cmp x16, x17
0xffff91415968    72  b.ne #+0xc (addr 0xffff91415974)
0xffff9141596c    76  ldur d1, [x0, #7]
0xffff91415970    80  b #+0x20 (addr 0xffff91415990)
0xffff91415974    84  ldr x16, [x26, #40]
0xffff91415978    88  cmp x0, x16
0xffff9141597c    92  b.ne #+0xd4 (addr 0xffff91415a50)
0xffff91415980    96  ldr x2, [x26, #928]
0xffff91415984   100  ldur d1, [x2, #7]
0xffff91415988   104  b #+0x8 (addr 0xffff91415990)
0xffff9141598c   108  scvtf d1, x0, #32
0xffff91415990   112  fsub d0, d0, d1
0xffff91415994   116  movz x1, #0xf2c0
0xffff91415998   120  movk x1, #0x4117, lsl #16
0xffff9141599c   124  ldp x2, x0, [x1]
0xffff914159a0   128  adds x16, x2, #0x10 (16)
0xffff914159a4   132  ccmp x16, x0, #nzCv, lo
0xffff914159a8   136  b.hi #+0x20 (addr 0xffff914159c8)
0xffff914159ac   140  str x16, [x1]
0xffff914159b0   144  ldr x1, [x26, #120]
0xffff914159b4   148  str x1, [x2]
0xffff914159b8   152  orr x2, x2, #0x1
0xffff914159bc   156  stur d0, [x2, #7]
0xffff914159c0   160  mov x0, x2
0xffff914159c4   164  ret
0xffff914159c8   168  sub csp, jssp, #0x10 (16)
0xffff914159cc   172  stp fp, lr, [jssp, #-16]!
0xffff914159d0   176  movz fp, #0xa00000000
0xffff914159d4   180  sub csp, jssp, #0x8 (8)
0xffff914159d8   184  str fp, [jssp, #-8]!
0xffff914159dc   188  add fp, jssp, #0x8 (8)
0xffff914159e0   192  movz x2, #0x0
0xffff914159e4   196  mov x16, lr
0xffff914159e8   200  ldr x17, pc+64 (addr 0x0000ffff91415a28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914159ec   204  blr x17
0xffff914159f0   208  ldur cp, [fp, #-8]
0xffff914159f4   212  movz x0, #0x0
0xffff914159f8   216  movz x1, #0x4b48
0xffff914159fc   220  movk x1, #0xe4, lsl #16
0xffff91415a00   224  ldr x16, pc+48 (addr 0x0000ffff91415a30)    ;; code: STUB, CEntryStub, minor: 5
0xffff91415a04   228  blr x16
0xffff91415a08   232  str x0, [jssp, #16]
0xffff91415a0c   236  ldr x16, pc+44 (addr 0x0000ffff91415a38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91415a10   240  blr x16
0xffff91415a14   244  ldr lr, [jssp, #16]
0xffff91415a18   248  ldp xzr, fp, [jssp], #24
0xffff91415a1c   252  b #-0x60 (addr 0xffff914159bc)
0xffff91415a20   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91415a24   260  d63f03e0       constant
0xffff91415a28   264  91406820       constant
0xffff91415a2c   268  0000ffff       constant
0xffff91415a30   272  91406260       constant
0xffff91415a34   276  0000ffff       constant
0xffff91415a38   280  914068e0       constant
0xffff91415a3c   284  0000ffff       constant
0xffff91415a40   288  movz x16, #0x0
0xffff91415a44   292  sub csp, jssp, #0x10 (16)
0xffff91415a48   296  stp fp, lr, [jssp, #-16]!
0xffff91415a4c   300  bl #+0x14 (addr 0xffff91415a60)
0xffff91415a50   304  movz x16, #0x8
0xffff91415a54   308  sub csp, jssp, #0x10 (16)
0xffff91415a58   312  stp fp, lr, [jssp, #-16]!
0xffff91415a5c   316  bl #+0x4 (addr 0xffff91415a60)
0xffff91415a60   320  movz x17, #0xa00000000
0xffff91415a64   324  sub csp, jssp, #0x10 (16)
0xffff91415a68   328  stp x17, cp, [jssp, #-16]!
0xffff91415a6c   332  add fp, jssp, #0x10 (16)
0xffff91415a70   336  ldr x17, pc+24 (addr 0x0000ffff91415a88)    ;; lazy deoptimization bailout 0
0xffff91415a74   340  add x17, x17, x16
0xffff91415a78   344  br x17
0xffff91415a7c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91415a80   352  d63f03e0       constant
0xffff91415a84   356  d503201f       constant
0xffff91415a88   360  91206000       constant
0xffff91415a8c   364  0000ffff       constant


Safepoints (size = 21)
0xffff91415a08   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff914159e8  code target (STUB)  (0xffff91406820)
0xffff91415a00  code target (STUB)  (0xffff91406260)
0xffff91415a0c  code target (STUB)  (0xffff914068e0)
0xffff91415a20  constant pool (size 32)
0xffff91415a70  runtime entry
0xffff91415a7c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2488
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff91415b20     0  mov x2, x0
0xffff91415b24     4  tbnz w2, #0, #+0xf4 (addr 0xffff91415c18)
0xffff91415b28     8  tbz w1, #0, #+0x34 (addr 0xffff91415b5c)
0xffff91415b2c    12  ldur x16, [x1, #-1]
0xffff91415b30    16  ldr x17, [x26, #120]
0xffff91415b34    20  cmp x16, x17
0xffff91415b38    24  b.ne #+0xc (addr 0xffff91415b44)
0xffff91415b3c    28  ldur d0, [x1, #7]
0xffff91415b40    32  b #+0x20 (addr 0xffff91415b60)
0xffff91415b44    36  ldr x16, [x26, #40]
0xffff91415b48    40  cmp x1, x16
0xffff91415b4c    44  b.ne #+0xdc (addr 0xffff91415c28)
0xffff91415b50    48  ldr x3, [x26, #928]
0xffff91415b54    52  ldur d0, [x3, #7]
0xffff91415b58    56  b #+0x8 (addr 0xffff91415b60)
0xffff91415b5c    60  scvtf d0, x1, #32
0xffff91415b60    64  scvtf d1, x2, #32
0xffff91415b64    68  fsub d0, d0, d1
0xffff91415b68    72  movz x1, #0xf2c0
0xffff91415b6c    76  movk x1, #0x4117, lsl #16
0xffff91415b70    80  ldp x2, x0, [x1]
0xffff91415b74    84  adds x16, x2, #0x10 (16)
0xffff91415b78    88  ccmp x16, x0, #nzCv, lo
0xffff91415b7c    92  b.hi #+0x20 (addr 0xffff91415b9c)
0xffff91415b80    96  str x16, [x1]
0xffff91415b84   100  ldr x1, [x26, #120]
0xffff91415b88   104  str x1, [x2]
0xffff91415b8c   108  orr x2, x2, #0x1
0xffff91415b90   112  stur d0, [x2, #7]
0xffff91415b94   116  mov x0, x2
0xffff91415b98   120  ret
0xffff91415b9c   124  sub csp, jssp, #0x10 (16)
0xffff91415ba0   128  stp fp, lr, [jssp, #-16]!
0xffff91415ba4   132  movz fp, #0xa00000000
0xffff91415ba8   136  sub csp, jssp, #0x8 (8)
0xffff91415bac   140  str fp, [jssp, #-8]!
0xffff91415bb0   144  add fp, jssp, #0x8 (8)
0xffff91415bb4   148  movz x2, #0x0
0xffff91415bb8   152  mov x16, lr
0xffff91415bbc   156  ldr x17, pc+68 (addr 0x0000ffff91415c00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91415bc0   160  blr x17
0xffff91415bc4   164  ldur cp, [fp, #-8]
0xffff91415bc8   168  movz x0, #0x0
0xffff91415bcc   172  movz x1, #0x4b48
0xffff91415bd0   176  movk x1, #0xe4, lsl #16
0xffff91415bd4   180  ldr x16, pc+52 (addr 0x0000ffff91415c08)    ;; code: STUB, CEntryStub, minor: 5
0xffff91415bd8   184  blr x16
0xffff91415bdc   188  str x0, [jssp, #16]
0xffff91415be0   192  ldr x16, pc+48 (addr 0x0000ffff91415c10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91415be4   196  blr x16
0xffff91415be8   200  ldr lr, [jssp, #16]
0xffff91415bec   204  ldp xzr, fp, [jssp], #24
0xffff91415bf0   208  b #-0x60 (addr 0xffff91415b90)
0xffff91415bf4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91415bf8   216  d63f03e0       constant
0xffff91415bfc   220  d503201f       constant
0xffff91415c00   224  91406820       constant
0xffff91415c04   228  0000ffff       constant
0xffff91415c08   232  91406260       constant
0xffff91415c0c   236  0000ffff       constant
0xffff91415c10   240  914068e0       constant
0xffff91415c14   244  0000ffff       constant
0xffff91415c18   248  movz x16, #0x0
0xffff91415c1c   252  sub csp, jssp, #0x10 (16)
0xffff91415c20   256  stp fp, lr, [jssp, #-16]!
0xffff91415c24   260  bl #+0x14 (addr 0xffff91415c38)
0xffff91415c28   264  movz x16, #0x8
0xffff91415c2c   268  sub csp, jssp, #0x10 (16)
0xffff91415c30   272  stp fp, lr, [jssp, #-16]!
0xffff91415c34   276  bl #+0x4 (addr 0xffff91415c38)
0xffff91415c38   280  movz x17, #0xa00000000
0xffff91415c3c   284  sub csp, jssp, #0x10 (16)
0xffff91415c40   288  stp x17, cp, [jssp, #-16]!
0xffff91415c44   292  add fp, jssp, #0x10 (16)
0xffff91415c48   296  ldr x17, pc+24 (addr 0x0000ffff91415c60)    ;; lazy deoptimization bailout 0
0xffff91415c4c   300  add x17, x17, x16
0xffff91415c50   304  br x17
0xffff91415c54   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91415c58   312  d63f03e0       constant
0xffff91415c5c   316  d503201f       constant
0xffff91415c60   320  91206000       constant
0xffff91415c64   324  0000ffff       constant


Safepoints (size = 21)
0xffff91415bdc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91415bbc  code target (STUB)  (0xffff91406820)
0xffff91415bd4  code target (STUB)  (0xffff91406260)
0xffff91415be0  code target (STUB)  (0xffff914068e0)
0xffff91415bf4  constant pool (size 36)
0xffff91415c48  runtime entry
0xffff91415c54  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2488
type = NORMAL
name = BinaryOpICStub(SUB:Number*Smi->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff91415b20     0  mov x2, x0
0xffff91415b24     4  tbnz w2, #0, #+0xf4 (addr 0xffff91415c18)
0xffff91415b28     8  tbz w1, #0, #+0x34 (addr 0xffff91415b5c)
0xffff91415b2c    12  ldur x16, [x1, #-1]
0xffff91415b30    16  ldr x17, [x26, #120]
0xffff91415b34    20  cmp x16, x17
0xffff91415b38    24  b.ne #+0xc (addr 0xffff91415b44)
0xffff91415b3c    28  ldur d0, [x1, #7]
0xffff91415b40    32  b #+0x20 (addr 0xffff91415b60)
0xffff91415b44    36  ldr x16, [x26, #40]
0xffff91415b48    40  cmp x1, x16
0xffff91415b4c    44  b.ne #+0xdc (addr 0xffff91415c28)
0xffff91415b50    48  ldr x3, [x26, #928]
0xffff91415b54    52  ldur d0, [x3, #7]
0xffff91415b58    56  b #+0x8 (addr 0xffff91415b60)
0xffff91415b5c    60  scvtf d0, x1, #32
0xffff91415b60    64  scvtf d1, x2, #32
0xffff91415b64    68  fsub d0, d0, d1
0xffff91415b68    72  movz x1, #0xf2c0
0xffff91415b6c    76  movk x1, #0x4117, lsl #16
0xffff91415b70    80  ldp x2, x0, [x1]
0xffff91415b74    84  adds x16, x2, #0x10 (16)
0xffff91415b78    88  ccmp x16, x0, #nzCv, lo
0xffff91415b7c    92  b.hi #+0x20 (addr 0xffff91415b9c)
0xffff91415b80    96  str x16, [x1]
0xffff91415b84   100  ldr x1, [x26, #120]
0xffff91415b88   104  str x1, [x2]
0xffff91415b8c   108  orr x2, x2, #0x1
0xffff91415b90   112  stur d0, [x2, #7]
0xffff91415b94   116  mov x0, x2
0xffff91415b98   120  ret
0xffff91415b9c   124  sub csp, jssp, #0x10 (16)
0xffff91415ba0   128  stp fp, lr, [jssp, #-16]!
0xffff91415ba4   132  movz fp, #0xa00000000
0xffff91415ba8   136  sub csp, jssp, #0x8 (8)
0xffff91415bac   140  str fp, [jssp, #-8]!
0xffff91415bb0   144  add fp, jssp, #0x8 (8)
0xffff91415bb4   148  movz x2, #0x0
0xffff91415bb8   152  mov x16, lr
0xffff91415bbc   156  ldr x17, pc+68 (addr 0x0000ffff91415c00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91415bc0   160  blr x17
0xffff91415bc4   164  ldur cp, [fp, #-8]
0xffff91415bc8   168  movz x0, #0x0
0xffff91415bcc   172  movz x1, #0x4b48
0xffff91415bd0   176  movk x1, #0xe4, lsl #16
0xffff91415bd4   180  ldr x16, pc+52 (addr 0x0000ffff91415c08)    ;; code: STUB, CEntryStub, minor: 5
0xffff91415bd8   184  blr x16
0xffff91415bdc   188  str x0, [jssp, #16]
0xffff91415be0   192  ldr x16, pc+48 (addr 0x0000ffff91415c10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91415be4   196  blr x16
0xffff91415be8   200  ldr lr, [jssp, #16]
0xffff91415bec   204  ldp xzr, fp, [jssp], #24
0xffff91415bf0   208  b #-0x60 (addr 0xffff91415b90)
0xffff91415bf4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91415bf8   216  d63f03e0       constant
0xffff91415bfc   220  d503201f       constant
0xffff91415c00   224  91406820       constant
0xffff91415c04   228  0000ffff       constant
0xffff91415c08   232  91406260       constant
0xffff91415c0c   236  0000ffff       constant
0xffff91415c10   240  914068e0       constant
0xffff91415c14   244  0000ffff       constant
0xffff91415c18   248  movz x16, #0x0
0xffff91415c1c   252  sub csp, jssp, #0x10 (16)
0xffff91415c20   256  stp fp, lr, [jssp, #-16]!
0xffff91415c24   260  bl #+0x14 (addr 0xffff91415c38)
0xffff91415c28   264  movz x16, #0x8
0xffff91415c2c   268  sub csp, jssp, #0x10 (16)
0xffff91415c30   272  stp fp, lr, [jssp, #-16]!
0xffff91415c34   276  bl #+0x4 (addr 0xffff91415c38)
0xffff91415c38   280  movz x17, #0xa00000000
0xffff91415c3c   284  sub csp, jssp, #0x10 (16)
0xffff91415c40   288  stp x17, cp, [jssp, #-16]!
0xffff91415c44   292  add fp, jssp, #0x10 (16)
0xffff91415c48   296  ldr x17, pc+24 (addr 0x0000ffff91415c60)    ;; lazy deoptimization bailout 0
0xffff91415c4c   300  add x17, x17, x16
0xffff91415c50   304  br x17
0xffff91415c54   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91415c58   312  d63f03e0       constant
0xffff91415c5c   316  d503201f       constant
0xffff91415c60   320  91206000       constant
0xffff91415c64   324  0000ffff       constant


Safepoints (size = 21)
0xffff91415bdc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91415bbc  code target (STUB)  (0xffff91406820)
0xffff91415bd4  code target (STUB)  (0xffff91406260)
0xffff91415be0  code target (STUB)  (0xffff914068e0)
0xffff91415bf4  constant pool (size 36)
0xffff91415c48  runtime entry
0xffff91415c54  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4264
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff91415ce0     0  mov x2, x1
0xffff91415ce4     4  tbnz w2, #0, #+0x1c (addr 0xffff91415d00)
0xffff91415ce8     8  mov x3, x0
0xffff91415cec    12  tbnz w3, #0, #+0x24 (addr 0xffff91415d10)
0xffff91415cf0    16  subs x2, x2, x3
0xffff91415cf4    20  b.vs #+0x2c (addr 0xffff91415d20)
0xffff91415cf8    24  mov x0, x2
0xffff91415cfc    28  ret
0xffff91415d00    32  movz x16, #0x0
0xffff91415d04    36  sub csp, jssp, #0x10 (16)
0xffff91415d08    40  stp fp, lr, [jssp, #-16]!
0xffff91415d0c    44  bl #+0x24 (addr 0xffff91415d30)
0xffff91415d10    48  movz x16, #0x8
0xffff91415d14    52  sub csp, jssp, #0x10 (16)
0xffff91415d18    56  stp fp, lr, [jssp, #-16]!
0xffff91415d1c    60  bl #+0x14 (addr 0xffff91415d30)
0xffff91415d20    64  movz x16, #0x10
0xffff91415d24    68  sub csp, jssp, #0x10 (16)
0xffff91415d28    72  stp fp, lr, [jssp, #-16]!
0xffff91415d2c    76  bl #+0x4 (addr 0xffff91415d30)
0xffff91415d30    80  movz x17, #0xa00000000
0xffff91415d34    84  sub csp, jssp, #0x10 (16)
0xffff91415d38    88  stp x17, cp, [jssp, #-16]!
0xffff91415d3c    92  add fp, jssp, #0x10 (16)
0xffff91415d40    96  ldr x17, pc+24 (addr 0x0000ffff91415d58)    ;; lazy deoptimization bailout 0
0xffff91415d44   100  add x17, x17, x16
0xffff91415d48   104  br x17
0xffff91415d4c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91415d50   112  d63f03e0       constant
0xffff91415d54   116  d503201f       constant
0xffff91415d58   120  91206000       constant
0xffff91415d5c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91415d40  runtime entry
0xffff91415d4c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4264
type = NORMAL
name = BinaryOpICStub(SUB:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff91415ce0     0  mov x2, x1
0xffff91415ce4     4  tbnz w2, #0, #+0x1c (addr 0xffff91415d00)
0xffff91415ce8     8  mov x3, x0
0xffff91415cec    12  tbnz w3, #0, #+0x24 (addr 0xffff91415d10)
0xffff91415cf0    16  subs x2, x2, x3
0xffff91415cf4    20  b.vs #+0x2c (addr 0xffff91415d20)
0xffff91415cf8    24  mov x0, x2
0xffff91415cfc    28  ret
0xffff91415d00    32  movz x16, #0x0
0xffff91415d04    36  sub csp, jssp, #0x10 (16)
0xffff91415d08    40  stp fp, lr, [jssp, #-16]!
0xffff91415d0c    44  bl #+0x24 (addr 0xffff91415d30)
0xffff91415d10    48  movz x16, #0x8
0xffff91415d14    52  sub csp, jssp, #0x10 (16)
0xffff91415d18    56  stp fp, lr, [jssp, #-16]!
0xffff91415d1c    60  bl #+0x14 (addr 0xffff91415d30)
0xffff91415d20    64  movz x16, #0x10
0xffff91415d24    68  sub csp, jssp, #0x10 (16)
0xffff91415d28    72  stp fp, lr, [jssp, #-16]!
0xffff91415d2c    76  bl #+0x4 (addr 0xffff91415d30)
0xffff91415d30    80  movz x17, #0xa00000000
0xffff91415d34    84  sub csp, jssp, #0x10 (16)
0xffff91415d38    88  stp x17, cp, [jssp, #-16]!
0xffff91415d3c    92  add fp, jssp, #0x10 (16)
0xffff91415d40    96  ldr x17, pc+24 (addr 0x0000ffff91415d58)    ;; lazy deoptimization bailout 0
0xffff91415d44   100  add x17, x17, x16
0xffff91415d48   104  br x17
0xffff91415d4c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91415d50   112  d63f03e0       constant
0xffff91415d54   116  d503201f       constant
0xffff91415d58   120  91206000       constant
0xffff91415d5c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91415d40  runtime entry
0xffff91415d4c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6328
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff91415de0     0  mov x2, x1
0xffff91415de4     4  tbnz w2, #0, #+0xf4 (addr 0xffff91415ed8)
0xffff91415de8     8  tbz w0, #0, #+0x34 (addr 0xffff91415e1c)
0xffff91415dec    12  ldur x16, [x0, #-1]
0xffff91415df0    16  ldr x17, [x26, #120]
0xffff91415df4    20  cmp x16, x17
0xffff91415df8    24  b.ne #+0xc (addr 0xffff91415e04)
0xffff91415dfc    28  ldur d0, [x0, #7]
0xffff91415e00    32  b #+0x20 (addr 0xffff91415e20)
0xffff91415e04    36  ldr x16, [x26, #40]
0xffff91415e08    40  cmp x0, x16
0xffff91415e0c    44  b.ne #+0xdc (addr 0xffff91415ee8)
0xffff91415e10    48  ldr x3, [x26, #928]
0xffff91415e14    52  ldur d0, [x3, #7]
0xffff91415e18    56  b #+0x8 (addr 0xffff91415e20)
0xffff91415e1c    60  scvtf d0, x0, #32
0xffff91415e20    64  scvtf d1, x2, #32
0xffff91415e24    68  fsub d0, d1, d0
0xffff91415e28    72  movz x1, #0xf2c0
0xffff91415e2c    76  movk x1, #0x4117, lsl #16
0xffff91415e30    80  ldp x2, x0, [x1]
0xffff91415e34    84  adds x16, x2, #0x10 (16)
0xffff91415e38    88  ccmp x16, x0, #nzCv, lo
0xffff91415e3c    92  b.hi #+0x20 (addr 0xffff91415e5c)
0xffff91415e40    96  str x16, [x1]
0xffff91415e44   100  ldr x1, [x26, #120]
0xffff91415e48   104  str x1, [x2]
0xffff91415e4c   108  orr x2, x2, #0x1
0xffff91415e50   112  stur d0, [x2, #7]
0xffff91415e54   116  mov x0, x2
0xffff91415e58   120  ret
0xffff91415e5c   124  sub csp, jssp, #0x10 (16)
0xffff91415e60   128  stp fp, lr, [jssp, #-16]!
0xffff91415e64   132  movz fp, #0xa00000000
0xffff91415e68   136  sub csp, jssp, #0x8 (8)
0xffff91415e6c   140  str fp, [jssp, #-8]!
0xffff91415e70   144  add fp, jssp, #0x8 (8)
0xffff91415e74   148  movz x2, #0x0
0xffff91415e78   152  mov x16, lr
0xffff91415e7c   156  ldr x17, pc+68 (addr 0x0000ffff91415ec0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91415e80   160  blr x17
0xffff91415e84   164  ldur cp, [fp, #-8]
0xffff91415e88   168  movz x0, #0x0
0xffff91415e8c   172  movz x1, #0x4b48
0xffff91415e90   176  movk x1, #0xe4, lsl #16
0xffff91415e94   180  ldr x16, pc+52 (addr 0x0000ffff91415ec8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91415e98   184  blr x16
0xffff91415e9c   188  str x0, [jssp, #16]
0xffff91415ea0   192  ldr x16, pc+48 (addr 0x0000ffff91415ed0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91415ea4   196  blr x16
0xffff91415ea8   200  ldr lr, [jssp, #16]
0xffff91415eac   204  ldp xzr, fp, [jssp], #24
0xffff91415eb0   208  b #-0x60 (addr 0xffff91415e50)
0xffff91415eb4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91415eb8   216  d63f03e0       constant
0xffff91415ebc   220  d503201f       constant
0xffff91415ec0   224  91406820       constant
0xffff91415ec4   228  0000ffff       constant
0xffff91415ec8   232  91406260       constant
0xffff91415ecc   236  0000ffff       constant
0xffff91415ed0   240  914068e0       constant
0xffff91415ed4   244  0000ffff       constant
0xffff91415ed8   248  movz x16, #0x0
0xffff91415edc   252  sub csp, jssp, #0x10 (16)
0xffff91415ee0   256  stp fp, lr, [jssp, #-16]!
0xffff91415ee4   260  bl #+0x14 (addr 0xffff91415ef8)
0xffff91415ee8   264  movz x16, #0x8
0xffff91415eec   268  sub csp, jssp, #0x10 (16)
0xffff91415ef0   272  stp fp, lr, [jssp, #-16]!
0xffff91415ef4   276  bl #+0x4 (addr 0xffff91415ef8)
0xffff91415ef8   280  movz x17, #0xa00000000
0xffff91415efc   284  sub csp, jssp, #0x10 (16)
0xffff91415f00   288  stp x17, cp, [jssp, #-16]!
0xffff91415f04   292  add fp, jssp, #0x10 (16)
0xffff91415f08   296  ldr x17, pc+24 (addr 0x0000ffff91415f20)    ;; lazy deoptimization bailout 0
0xffff91415f0c   300  add x17, x17, x16
0xffff91415f10   304  br x17
0xffff91415f14   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91415f18   312  d63f03e0       constant
0xffff91415f1c   316  d503201f       constant
0xffff91415f20   320  91206000       constant
0xffff91415f24   324  0000ffff       constant


Safepoints (size = 21)
0xffff91415e9c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91415e7c  code target (STUB)  (0xffff91406820)
0xffff91415e94  code target (STUB)  (0xffff91406260)
0xffff91415ea0  code target (STUB)  (0xffff914068e0)
0xffff91415eb4  constant pool (size 36)
0xffff91415f08  runtime entry
0xffff91415f14  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6328
type = NORMAL
name = BinaryOpICStub(SUB:Smi*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff91415de0     0  mov x2, x1
0xffff91415de4     4  tbnz w2, #0, #+0xf4 (addr 0xffff91415ed8)
0xffff91415de8     8  tbz w0, #0, #+0x34 (addr 0xffff91415e1c)
0xffff91415dec    12  ldur x16, [x0, #-1]
0xffff91415df0    16  ldr x17, [x26, #120]
0xffff91415df4    20  cmp x16, x17
0xffff91415df8    24  b.ne #+0xc (addr 0xffff91415e04)
0xffff91415dfc    28  ldur d0, [x0, #7]
0xffff91415e00    32  b #+0x20 (addr 0xffff91415e20)
0xffff91415e04    36  ldr x16, [x26, #40]
0xffff91415e08    40  cmp x0, x16
0xffff91415e0c    44  b.ne #+0xdc (addr 0xffff91415ee8)
0xffff91415e10    48  ldr x3, [x26, #928]
0xffff91415e14    52  ldur d0, [x3, #7]
0xffff91415e18    56  b #+0x8 (addr 0xffff91415e20)
0xffff91415e1c    60  scvtf d0, x0, #32
0xffff91415e20    64  scvtf d1, x2, #32
0xffff91415e24    68  fsub d0, d1, d0
0xffff91415e28    72  movz x1, #0xf2c0
0xffff91415e2c    76  movk x1, #0x4117, lsl #16
0xffff91415e30    80  ldp x2, x0, [x1]
0xffff91415e34    84  adds x16, x2, #0x10 (16)
0xffff91415e38    88  ccmp x16, x0, #nzCv, lo
0xffff91415e3c    92  b.hi #+0x20 (addr 0xffff91415e5c)
0xffff91415e40    96  str x16, [x1]
0xffff91415e44   100  ldr x1, [x26, #120]
0xffff91415e48   104  str x1, [x2]
0xffff91415e4c   108  orr x2, x2, #0x1
0xffff91415e50   112  stur d0, [x2, #7]
0xffff91415e54   116  mov x0, x2
0xffff91415e58   120  ret
0xffff91415e5c   124  sub csp, jssp, #0x10 (16)
0xffff91415e60   128  stp fp, lr, [jssp, #-16]!
0xffff91415e64   132  movz fp, #0xa00000000
0xffff91415e68   136  sub csp, jssp, #0x8 (8)
0xffff91415e6c   140  str fp, [jssp, #-8]!
0xffff91415e70   144  add fp, jssp, #0x8 (8)
0xffff91415e74   148  movz x2, #0x0
0xffff91415e78   152  mov x16, lr
0xffff91415e7c   156  ldr x17, pc+68 (addr 0x0000ffff91415ec0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91415e80   160  blr x17
0xffff91415e84   164  ldur cp, [fp, #-8]
0xffff91415e88   168  movz x0, #0x0
0xffff91415e8c   172  movz x1, #0x4b48
0xffff91415e90   176  movk x1, #0xe4, lsl #16
0xffff91415e94   180  ldr x16, pc+52 (addr 0x0000ffff91415ec8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91415e98   184  blr x16
0xffff91415e9c   188  str x0, [jssp, #16]
0xffff91415ea0   192  ldr x16, pc+48 (addr 0x0000ffff91415ed0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91415ea4   196  blr x16
0xffff91415ea8   200  ldr lr, [jssp, #16]
0xffff91415eac   204  ldp xzr, fp, [jssp], #24
0xffff91415eb0   208  b #-0x60 (addr 0xffff91415e50)
0xffff91415eb4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91415eb8   216  d63f03e0       constant
0xffff91415ebc   220  d503201f       constant
0xffff91415ec0   224  91406820       constant
0xffff91415ec4   228  0000ffff       constant
0xffff91415ec8   232  91406260       constant
0xffff91415ecc   236  0000ffff       constant
0xffff91415ed0   240  914068e0       constant
0xffff91415ed4   244  0000ffff       constant
0xffff91415ed8   248  movz x16, #0x0
0xffff91415edc   252  sub csp, jssp, #0x10 (16)
0xffff91415ee0   256  stp fp, lr, [jssp, #-16]!
0xffff91415ee4   260  bl #+0x14 (addr 0xffff91415ef8)
0xffff91415ee8   264  movz x16, #0x8
0xffff91415eec   268  sub csp, jssp, #0x10 (16)
0xffff91415ef0   272  stp fp, lr, [jssp, #-16]!
0xffff91415ef4   276  bl #+0x4 (addr 0xffff91415ef8)
0xffff91415ef8   280  movz x17, #0xa00000000
0xffff91415efc   284  sub csp, jssp, #0x10 (16)
0xffff91415f00   288  stp x17, cp, [jssp, #-16]!
0xffff91415f04   292  add fp, jssp, #0x10 (16)
0xffff91415f08   296  ldr x17, pc+24 (addr 0x0000ffff91415f20)    ;; lazy deoptimization bailout 0
0xffff91415f0c   300  add x17, x17, x16
0xffff91415f10   304  br x17
0xffff91415f14   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91415f18   312  d63f03e0       constant
0xffff91415f1c   316  d503201f       constant
0xffff91415f20   320  91206000       constant
0xffff91415f24   324  0000ffff       constant


Safepoints (size = 21)
0xffff91415e9c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91415e7c  code target (STUB)  (0xffff91406820)
0xffff91415e94  code target (STUB)  (0xffff91406260)
0xffff91415ea0  code target (STUB)  (0xffff914068e0)
0xffff91415eb4  constant pool (size 36)
0xffff91415f08  runtime entry
0xffff91415f14  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2200
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff91415fa0     0  mov x2, x1
0xffff91415fa4     4  tbnz w2, #0, #+0x1c (addr 0xffff91415fc0)
0xffff91415fa8     8  mov x3, x0
0xffff91415fac    12  tbnz w3, #0, #+0x24 (addr 0xffff91415fd0)
0xffff91415fb0    16  subs x2, x2, x3
0xffff91415fb4    20  b.vs #+0x2c (addr 0xffff91415fe0)
0xffff91415fb8    24  mov x0, x2
0xffff91415fbc    28  ret
0xffff91415fc0    32  movz x16, #0x0
0xffff91415fc4    36  sub csp, jssp, #0x10 (16)
0xffff91415fc8    40  stp fp, lr, [jssp, #-16]!
0xffff91415fcc    44  bl #+0x24 (addr 0xffff91415ff0)
0xffff91415fd0    48  movz x16, #0x8
0xffff91415fd4    52  sub csp, jssp, #0x10 (16)
0xffff91415fd8    56  stp fp, lr, [jssp, #-16]!
0xffff91415fdc    60  bl #+0x14 (addr 0xffff91415ff0)
0xffff91415fe0    64  movz x16, #0x10
0xffff91415fe4    68  sub csp, jssp, #0x10 (16)
0xffff91415fe8    72  stp fp, lr, [jssp, #-16]!
0xffff91415fec    76  bl #+0x4 (addr 0xffff91415ff0)
0xffff91415ff0    80  movz x17, #0xa00000000
0xffff91415ff4    84  sub csp, jssp, #0x10 (16)
0xffff91415ff8    88  stp x17, cp, [jssp, #-16]!
0xffff91415ffc    92  add fp, jssp, #0x10 (16)
0xffff91416000    96  ldr x17, pc+24 (addr 0x0000ffff91416018)    ;; lazy deoptimization bailout 0
0xffff91416004   100  add x17, x17, x16
0xffff91416008   104  br x17
0xffff9141600c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91416010   112  d63f03e0       constant
0xffff91416014   116  d503201f       constant
0xffff91416018   120  91206000       constant
0xffff9141601c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91416000  runtime entry
0xffff9141600c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2200
type = NORMAL
name = BinaryOpICStub(SUB:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 136)
0xffff91415fa0     0  mov x2, x1
0xffff91415fa4     4  tbnz w2, #0, #+0x1c (addr 0xffff91415fc0)
0xffff91415fa8     8  mov x3, x0
0xffff91415fac    12  tbnz w3, #0, #+0x24 (addr 0xffff91415fd0)
0xffff91415fb0    16  subs x2, x2, x3
0xffff91415fb4    20  b.vs #+0x2c (addr 0xffff91415fe0)
0xffff91415fb8    24  mov x0, x2
0xffff91415fbc    28  ret
0xffff91415fc0    32  movz x16, #0x0
0xffff91415fc4    36  sub csp, jssp, #0x10 (16)
0xffff91415fc8    40  stp fp, lr, [jssp, #-16]!
0xffff91415fcc    44  bl #+0x24 (addr 0xffff91415ff0)
0xffff91415fd0    48  movz x16, #0x8
0xffff91415fd4    52  sub csp, jssp, #0x10 (16)
0xffff91415fd8    56  stp fp, lr, [jssp, #-16]!
0xffff91415fdc    60  bl #+0x14 (addr 0xffff91415ff0)
0xffff91415fe0    64  movz x16, #0x10
0xffff91415fe4    68  sub csp, jssp, #0x10 (16)
0xffff91415fe8    72  stp fp, lr, [jssp, #-16]!
0xffff91415fec    76  bl #+0x4 (addr 0xffff91415ff0)
0xffff91415ff0    80  movz x17, #0xa00000000
0xffff91415ff4    84  sub csp, jssp, #0x10 (16)
0xffff91415ff8    88  stp x17, cp, [jssp, #-16]!
0xffff91415ffc    92  add fp, jssp, #0x10 (16)
0xffff91416000    96  ldr x17, pc+24 (addr 0x0000ffff91416018)    ;; lazy deoptimization bailout 0
0xffff91416004   100  add x17, x17, x16
0xffff91416008   104  br x17
0xffff9141600c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91416010   112  d63f03e0       constant
0xffff91416014   116  d503201f       constant
0xffff91416018   120  91206000       constant
0xffff9141601c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91416000  runtime entry
0xffff9141600c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 3227
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff914160a0     0  mov x2, x1
0xffff914160a4     4  tbnz w2, #0, #+0x44 (addr 0xffff914160e8)
0xffff914160a8     8  mov x3, x0
0xffff914160ac    12  tbnz w3, #0, #+0x4c (addr 0xffff914160f8)
0xffff914160b0    16  asr x3, x3, #32
0xffff914160b4    20  cmp w3, #0x2 (2)
0xffff914160b8    24  b.eq #+0x8 (addr 0xffff914160c0)
0xffff914160bc    28  b #+0x4c (addr 0xffff91416108)
0xffff914160c0    32  asr x2, x2, #32
0xffff914160c4    36  tbz w2, #31, #+0x18 (addr 0xffff914160dc)
0xffff914160c8    40  neg w2, w2
0xffff914160cc    44  and w2, w2, #0x1
0xffff914160d0    48  negs w2, w2
0xffff914160d4    52  b.eq #+0x44 (addr 0xffff91416118)
0xffff914160d8    56  b #+0x8 (addr 0xffff914160e0)
0xffff914160dc    60  and w2, w2, #0x1
0xffff914160e0    64  lsl x0, x2, #32
0xffff914160e4    68  ret
0xffff914160e8    72  movz x16, #0x0
0xffff914160ec    76  sub csp, jssp, #0x10 (16)
0xffff914160f0    80  stp fp, lr, [jssp, #-16]!
0xffff914160f4    84  bl #+0x34 (addr 0xffff91416128)
0xffff914160f8    88  movz x16, #0x8
0xffff914160fc    92  sub csp, jssp, #0x10 (16)
0xffff91416100    96  stp fp, lr, [jssp, #-16]!
0xffff91416104   100  bl #+0x24 (addr 0xffff91416128)
0xffff91416108   104  movz x16, #0x10
0xffff9141610c   108  sub csp, jssp, #0x10 (16)
0xffff91416110   112  stp fp, lr, [jssp, #-16]!
0xffff91416114   116  bl #+0x14 (addr 0xffff91416128)
0xffff91416118   120  movz x16, #0x18
0xffff9141611c   124  sub csp, jssp, #0x10 (16)
0xffff91416120   128  stp fp, lr, [jssp, #-16]!
0xffff91416124   132  bl #+0x4 (addr 0xffff91416128)
0xffff91416128   136  movz x17, #0xa00000000
0xffff9141612c   140  sub csp, jssp, #0x10 (16)
0xffff91416130   144  stp x17, cp, [jssp, #-16]!
0xffff91416134   148  add fp, jssp, #0x10 (16)
0xffff91416138   152  ldr x17, pc+24 (addr 0x0000ffff91416150)    ;; lazy deoptimization bailout 0
0xffff9141613c   156  add x17, x17, x16
0xffff91416140   160  br x17
0xffff91416144   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91416148   168  d63f03e0       constant
0xffff9141614c   172  d503201f       constant
0xffff91416150   176  91206000       constant
0xffff91416154   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91416138  runtime entry
0xffff91416144  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 3227
type = NORMAL
name = BinaryOpICStub(MOD:Smi*2->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff914160a0     0  mov x2, x1
0xffff914160a4     4  tbnz w2, #0, #+0x44 (addr 0xffff914160e8)
0xffff914160a8     8  mov x3, x0
0xffff914160ac    12  tbnz w3, #0, #+0x4c (addr 0xffff914160f8)
0xffff914160b0    16  asr x3, x3, #32
0xffff914160b4    20  cmp w3, #0x2 (2)
0xffff914160b8    24  b.eq #+0x8 (addr 0xffff914160c0)
0xffff914160bc    28  b #+0x4c (addr 0xffff91416108)
0xffff914160c0    32  asr x2, x2, #32
0xffff914160c4    36  tbz w2, #31, #+0x18 (addr 0xffff914160dc)
0xffff914160c8    40  neg w2, w2
0xffff914160cc    44  and w2, w2, #0x1
0xffff914160d0    48  negs w2, w2
0xffff914160d4    52  b.eq #+0x44 (addr 0xffff91416118)
0xffff914160d8    56  b #+0x8 (addr 0xffff914160e0)
0xffff914160dc    60  and w2, w2, #0x1
0xffff914160e0    64  lsl x0, x2, #32
0xffff914160e4    68  ret
0xffff914160e8    72  movz x16, #0x0
0xffff914160ec    76  sub csp, jssp, #0x10 (16)
0xffff914160f0    80  stp fp, lr, [jssp, #-16]!
0xffff914160f4    84  bl #+0x34 (addr 0xffff91416128)
0xffff914160f8    88  movz x16, #0x8
0xffff914160fc    92  sub csp, jssp, #0x10 (16)
0xffff91416100    96  stp fp, lr, [jssp, #-16]!
0xffff91416104   100  bl #+0x24 (addr 0xffff91416128)
0xffff91416108   104  movz x16, #0x10
0xffff9141610c   108  sub csp, jssp, #0x10 (16)
0xffff91416110   112  stp fp, lr, [jssp, #-16]!
0xffff91416114   116  bl #+0x14 (addr 0xffff91416128)
0xffff91416118   120  movz x16, #0x18
0xffff9141611c   124  sub csp, jssp, #0x10 (16)
0xffff91416120   128  stp fp, lr, [jssp, #-16]!
0xffff91416124   132  bl #+0x4 (addr 0xffff91416128)
0xffff91416128   136  movz x17, #0xa00000000
0xffff9141612c   140  sub csp, jssp, #0x10 (16)
0xffff91416130   144  stp x17, cp, [jssp, #-16]!
0xffff91416134   148  add fp, jssp, #0x10 (16)
0xffff91416138   152  ldr x17, pc+24 (addr 0x0000ffff91416150)    ;; lazy deoptimization bailout 0
0xffff9141613c   156  add x17, x17, x16
0xffff91416140   160  br x17
0xffff91416144   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91416148   168  d63f03e0       constant
0xffff9141614c   172  d503201f       constant
0xffff91416150   176  91206000       constant
0xffff91416154   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91416138  runtime entry
0xffff91416144  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 5275
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff914161c0     0  mov x2, x1
0xffff914161c4     4  tbnz w2, #0, #+0x44 (addr 0xffff91416208)
0xffff914161c8     8  mov x3, x0
0xffff914161cc    12  tbnz w3, #0, #+0x4c (addr 0xffff91416218)
0xffff914161d0    16  asr x3, x3, #32
0xffff914161d4    20  cmp w3, #0x4 (4)
0xffff914161d8    24  b.eq #+0x8 (addr 0xffff914161e0)
0xffff914161dc    28  b #+0x4c (addr 0xffff91416228)
0xffff914161e0    32  asr x2, x2, #32
0xffff914161e4    36  tbz w2, #31, #+0x18 (addr 0xffff914161fc)
0xffff914161e8    40  neg w2, w2
0xffff914161ec    44  and w2, w2, #0x3
0xffff914161f0    48  negs w2, w2
0xffff914161f4    52  b.eq #+0x44 (addr 0xffff91416238)
0xffff914161f8    56  b #+0x8 (addr 0xffff91416200)
0xffff914161fc    60  and w2, w2, #0x3
0xffff91416200    64  lsl x0, x2, #32
0xffff91416204    68  ret
0xffff91416208    72  movz x16, #0x0
0xffff9141620c    76  sub csp, jssp, #0x10 (16)
0xffff91416210    80  stp fp, lr, [jssp, #-16]!
0xffff91416214    84  bl #+0x34 (addr 0xffff91416248)
0xffff91416218    88  movz x16, #0x8
0xffff9141621c    92  sub csp, jssp, #0x10 (16)
0xffff91416220    96  stp fp, lr, [jssp, #-16]!
0xffff91416224   100  bl #+0x24 (addr 0xffff91416248)
0xffff91416228   104  movz x16, #0x10
0xffff9141622c   108  sub csp, jssp, #0x10 (16)
0xffff91416230   112  stp fp, lr, [jssp, #-16]!
0xffff91416234   116  bl #+0x14 (addr 0xffff91416248)
0xffff91416238   120  movz x16, #0x18
0xffff9141623c   124  sub csp, jssp, #0x10 (16)
0xffff91416240   128  stp fp, lr, [jssp, #-16]!
0xffff91416244   132  bl #+0x4 (addr 0xffff91416248)
0xffff91416248   136  movz x17, #0xa00000000
0xffff9141624c   140  sub csp, jssp, #0x10 (16)
0xffff91416250   144  stp x17, cp, [jssp, #-16]!
0xffff91416254   148  add fp, jssp, #0x10 (16)
0xffff91416258   152  ldr x17, pc+24 (addr 0x0000ffff91416270)    ;; lazy deoptimization bailout 0
0xffff9141625c   156  add x17, x17, x16
0xffff91416260   160  br x17
0xffff91416264   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91416268   168  d63f03e0       constant
0xffff9141626c   172  d503201f       constant
0xffff91416270   176  91206000       constant
0xffff91416274   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91416258  runtime entry
0xffff91416264  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 5275
type = NORMAL
name = BinaryOpICStub(MOD:Smi*4->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff914161c0     0  mov x2, x1
0xffff914161c4     4  tbnz w2, #0, #+0x44 (addr 0xffff91416208)
0xffff914161c8     8  mov x3, x0
0xffff914161cc    12  tbnz w3, #0, #+0x4c (addr 0xffff91416218)
0xffff914161d0    16  asr x3, x3, #32
0xffff914161d4    20  cmp w3, #0x4 (4)
0xffff914161d8    24  b.eq #+0x8 (addr 0xffff914161e0)
0xffff914161dc    28  b #+0x4c (addr 0xffff91416228)
0xffff914161e0    32  asr x2, x2, #32
0xffff914161e4    36  tbz w2, #31, #+0x18 (addr 0xffff914161fc)
0xffff914161e8    40  neg w2, w2
0xffff914161ec    44  and w2, w2, #0x3
0xffff914161f0    48  negs w2, w2
0xffff914161f4    52  b.eq #+0x44 (addr 0xffff91416238)
0xffff914161f8    56  b #+0x8 (addr 0xffff91416200)
0xffff914161fc    60  and w2, w2, #0x3
0xffff91416200    64  lsl x0, x2, #32
0xffff91416204    68  ret
0xffff91416208    72  movz x16, #0x0
0xffff9141620c    76  sub csp, jssp, #0x10 (16)
0xffff91416210    80  stp fp, lr, [jssp, #-16]!
0xffff91416214    84  bl #+0x34 (addr 0xffff91416248)
0xffff91416218    88  movz x16, #0x8
0xffff9141621c    92  sub csp, jssp, #0x10 (16)
0xffff91416220    96  stp fp, lr, [jssp, #-16]!
0xffff91416224   100  bl #+0x24 (addr 0xffff91416248)
0xffff91416228   104  movz x16, #0x10
0xffff9141622c   108  sub csp, jssp, #0x10 (16)
0xffff91416230   112  stp fp, lr, [jssp, #-16]!
0xffff91416234   116  bl #+0x14 (addr 0xffff91416248)
0xffff91416238   120  movz x16, #0x18
0xffff9141623c   124  sub csp, jssp, #0x10 (16)
0xffff91416240   128  stp fp, lr, [jssp, #-16]!
0xffff91416244   132  bl #+0x4 (addr 0xffff91416248)
0xffff91416248   136  movz x17, #0xa00000000
0xffff9141624c   140  sub csp, jssp, #0x10 (16)
0xffff91416250   144  stp x17, cp, [jssp, #-16]!
0xffff91416254   148  add fp, jssp, #0x10 (16)
0xffff91416258   152  ldr x17, pc+24 (addr 0x0000ffff91416270)    ;; lazy deoptimization bailout 0
0xffff9141625c   156  add x17, x17, x16
0xffff91416260   160  br x17
0xffff91416264   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91416268   168  d63f03e0       constant
0xffff9141626c   172  d503201f       constant
0xffff91416270   176  91206000       constant
0xffff91416274   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91416258  runtime entry
0xffff91416264  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 7323
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff914162e0     0  mov x2, x1
0xffff914162e4     4  tbnz w2, #0, #+0x44 (addr 0xffff91416328)
0xffff914162e8     8  mov x3, x0
0xffff914162ec    12  tbnz w3, #0, #+0x4c (addr 0xffff91416338)
0xffff914162f0    16  asr x3, x3, #32
0xffff914162f4    20  cmp w3, #0x8 (8)
0xffff914162f8    24  b.eq #+0x8 (addr 0xffff91416300)
0xffff914162fc    28  b #+0x4c (addr 0xffff91416348)
0xffff91416300    32  asr x2, x2, #32
0xffff91416304    36  tbz w2, #31, #+0x18 (addr 0xffff9141631c)
0xffff91416308    40  neg w2, w2
0xffff9141630c    44  and w2, w2, #0x7
0xffff91416310    48  negs w2, w2
0xffff91416314    52  b.eq #+0x44 (addr 0xffff91416358)
0xffff91416318    56  b #+0x8 (addr 0xffff91416320)
0xffff9141631c    60  and w2, w2, #0x7
0xffff91416320    64  lsl x0, x2, #32
0xffff91416324    68  ret
0xffff91416328    72  movz x16, #0x0
0xffff9141632c    76  sub csp, jssp, #0x10 (16)
0xffff91416330    80  stp fp, lr, [jssp, #-16]!
0xffff91416334    84  bl #+0x34 (addr 0xffff91416368)
0xffff91416338    88  movz x16, #0x8
0xffff9141633c    92  sub csp, jssp, #0x10 (16)
0xffff91416340    96  stp fp, lr, [jssp, #-16]!
0xffff91416344   100  bl #+0x24 (addr 0xffff91416368)
0xffff91416348   104  movz x16, #0x10
0xffff9141634c   108  sub csp, jssp, #0x10 (16)
0xffff91416350   112  stp fp, lr, [jssp, #-16]!
0xffff91416354   116  bl #+0x14 (addr 0xffff91416368)
0xffff91416358   120  movz x16, #0x18
0xffff9141635c   124  sub csp, jssp, #0x10 (16)
0xffff91416360   128  stp fp, lr, [jssp, #-16]!
0xffff91416364   132  bl #+0x4 (addr 0xffff91416368)
0xffff91416368   136  movz x17, #0xa00000000
0xffff9141636c   140  sub csp, jssp, #0x10 (16)
0xffff91416370   144  stp x17, cp, [jssp, #-16]!
0xffff91416374   148  add fp, jssp, #0x10 (16)
0xffff91416378   152  ldr x17, pc+24 (addr 0x0000ffff91416390)    ;; lazy deoptimization bailout 0
0xffff9141637c   156  add x17, x17, x16
0xffff91416380   160  br x17
0xffff91416384   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91416388   168  d63f03e0       constant
0xffff9141638c   172  d503201f       constant
0xffff91416390   176  91206000       constant
0xffff91416394   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91416378  runtime entry
0xffff91416384  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 7323
type = NORMAL
name = BinaryOpICStub(MOD:Smi*8->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff914162e0     0  mov x2, x1
0xffff914162e4     4  tbnz w2, #0, #+0x44 (addr 0xffff91416328)
0xffff914162e8     8  mov x3, x0
0xffff914162ec    12  tbnz w3, #0, #+0x4c (addr 0xffff91416338)
0xffff914162f0    16  asr x3, x3, #32
0xffff914162f4    20  cmp w3, #0x8 (8)
0xffff914162f8    24  b.eq #+0x8 (addr 0xffff91416300)
0xffff914162fc    28  b #+0x4c (addr 0xffff91416348)
0xffff91416300    32  asr x2, x2, #32
0xffff91416304    36  tbz w2, #31, #+0x18 (addr 0xffff9141631c)
0xffff91416308    40  neg w2, w2
0xffff9141630c    44  and w2, w2, #0x7
0xffff91416310    48  negs w2, w2
0xffff91416314    52  b.eq #+0x44 (addr 0xffff91416358)
0xffff91416318    56  b #+0x8 (addr 0xffff91416320)
0xffff9141631c    60  and w2, w2, #0x7
0xffff91416320    64  lsl x0, x2, #32
0xffff91416324    68  ret
0xffff91416328    72  movz x16, #0x0
0xffff9141632c    76  sub csp, jssp, #0x10 (16)
0xffff91416330    80  stp fp, lr, [jssp, #-16]!
0xffff91416334    84  bl #+0x34 (addr 0xffff91416368)
0xffff91416338    88  movz x16, #0x8
0xffff9141633c    92  sub csp, jssp, #0x10 (16)
0xffff91416340    96  stp fp, lr, [jssp, #-16]!
0xffff91416344   100  bl #+0x24 (addr 0xffff91416368)
0xffff91416348   104  movz x16, #0x10
0xffff9141634c   108  sub csp, jssp, #0x10 (16)
0xffff91416350   112  stp fp, lr, [jssp, #-16]!
0xffff91416354   116  bl #+0x14 (addr 0xffff91416368)
0xffff91416358   120  movz x16, #0x18
0xffff9141635c   124  sub csp, jssp, #0x10 (16)
0xffff91416360   128  stp fp, lr, [jssp, #-16]!
0xffff91416364   132  bl #+0x4 (addr 0xffff91416368)
0xffff91416368   136  movz x17, #0xa00000000
0xffff9141636c   140  sub csp, jssp, #0x10 (16)
0xffff91416370   144  stp x17, cp, [jssp, #-16]!
0xffff91416374   148  add fp, jssp, #0x10 (16)
0xffff91416378   152  ldr x17, pc+24 (addr 0x0000ffff91416390)    ;; lazy deoptimization bailout 0
0xffff9141637c   156  add x17, x17, x16
0xffff91416380   160  br x17
0xffff91416384   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91416388   168  d63f03e0       constant
0xffff9141638c   172  d503201f       constant
0xffff91416390   176  91206000       constant
0xffff91416394   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91416378  runtime entry
0xffff91416384  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 9371
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff91416400     0  mov x2, x1
0xffff91416404     4  tbnz w2, #0, #+0x44 (addr 0xffff91416448)
0xffff91416408     8  mov x3, x0
0xffff9141640c    12  tbnz w3, #0, #+0x4c (addr 0xffff91416458)
0xffff91416410    16  asr x3, x3, #32
0xffff91416414    20  cmp w3, #0x10 (16)
0xffff91416418    24  b.eq #+0x8 (addr 0xffff91416420)
0xffff9141641c    28  b #+0x4c (addr 0xffff91416468)
0xffff91416420    32  asr x2, x2, #32
0xffff91416424    36  tbz w2, #31, #+0x18 (addr 0xffff9141643c)
0xffff91416428    40  neg w2, w2
0xffff9141642c    44  and w2, w2, #0xf
0xffff91416430    48  negs w2, w2
0xffff91416434    52  b.eq #+0x44 (addr 0xffff91416478)
0xffff91416438    56  b #+0x8 (addr 0xffff91416440)
0xffff9141643c    60  and w2, w2, #0xf
0xffff91416440    64  lsl x0, x2, #32
0xffff91416444    68  ret
0xffff91416448    72  movz x16, #0x0
0xffff9141644c    76  sub csp, jssp, #0x10 (16)
0xffff91416450    80  stp fp, lr, [jssp, #-16]!
0xffff91416454    84  bl #+0x34 (addr 0xffff91416488)
0xffff91416458    88  movz x16, #0x8
0xffff9141645c    92  sub csp, jssp, #0x10 (16)
0xffff91416460    96  stp fp, lr, [jssp, #-16]!
0xffff91416464   100  bl #+0x24 (addr 0xffff91416488)
0xffff91416468   104  movz x16, #0x10
0xffff9141646c   108  sub csp, jssp, #0x10 (16)
0xffff91416470   112  stp fp, lr, [jssp, #-16]!
0xffff91416474   116  bl #+0x14 (addr 0xffff91416488)
0xffff91416478   120  movz x16, #0x18
0xffff9141647c   124  sub csp, jssp, #0x10 (16)
0xffff91416480   128  stp fp, lr, [jssp, #-16]!
0xffff91416484   132  bl #+0x4 (addr 0xffff91416488)
0xffff91416488   136  movz x17, #0xa00000000
0xffff9141648c   140  sub csp, jssp, #0x10 (16)
0xffff91416490   144  stp x17, cp, [jssp, #-16]!
0xffff91416494   148  add fp, jssp, #0x10 (16)
0xffff91416498   152  ldr x17, pc+24 (addr 0x0000ffff914164b0)    ;; lazy deoptimization bailout 0
0xffff9141649c   156  add x17, x17, x16
0xffff914164a0   160  br x17
0xffff914164a4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914164a8   168  d63f03e0       constant
0xffff914164ac   172  d503201f       constant
0xffff914164b0   176  91206000       constant
0xffff914164b4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91416498  runtime entry
0xffff914164a4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 9371
type = NORMAL
name = BinaryOpICStub(MOD:Smi*16->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff91416400     0  mov x2, x1
0xffff91416404     4  tbnz w2, #0, #+0x44 (addr 0xffff91416448)
0xffff91416408     8  mov x3, x0
0xffff9141640c    12  tbnz w3, #0, #+0x4c (addr 0xffff91416458)
0xffff91416410    16  asr x3, x3, #32
0xffff91416414    20  cmp w3, #0x10 (16)
0xffff91416418    24  b.eq #+0x8 (addr 0xffff91416420)
0xffff9141641c    28  b #+0x4c (addr 0xffff91416468)
0xffff91416420    32  asr x2, x2, #32
0xffff91416424    36  tbz w2, #31, #+0x18 (addr 0xffff9141643c)
0xffff91416428    40  neg w2, w2
0xffff9141642c    44  and w2, w2, #0xf
0xffff91416430    48  negs w2, w2
0xffff91416434    52  b.eq #+0x44 (addr 0xffff91416478)
0xffff91416438    56  b #+0x8 (addr 0xffff91416440)
0xffff9141643c    60  and w2, w2, #0xf
0xffff91416440    64  lsl x0, x2, #32
0xffff91416444    68  ret
0xffff91416448    72  movz x16, #0x0
0xffff9141644c    76  sub csp, jssp, #0x10 (16)
0xffff91416450    80  stp fp, lr, [jssp, #-16]!
0xffff91416454    84  bl #+0x34 (addr 0xffff91416488)
0xffff91416458    88  movz x16, #0x8
0xffff9141645c    92  sub csp, jssp, #0x10 (16)
0xffff91416460    96  stp fp, lr, [jssp, #-16]!
0xffff91416464   100  bl #+0x24 (addr 0xffff91416488)
0xffff91416468   104  movz x16, #0x10
0xffff9141646c   108  sub csp, jssp, #0x10 (16)
0xffff91416470   112  stp fp, lr, [jssp, #-16]!
0xffff91416474   116  bl #+0x14 (addr 0xffff91416488)
0xffff91416478   120  movz x16, #0x18
0xffff9141647c   124  sub csp, jssp, #0x10 (16)
0xffff91416480   128  stp fp, lr, [jssp, #-16]!
0xffff91416484   132  bl #+0x4 (addr 0xffff91416488)
0xffff91416488   136  movz x17, #0xa00000000
0xffff9141648c   140  sub csp, jssp, #0x10 (16)
0xffff91416490   144  stp x17, cp, [jssp, #-16]!
0xffff91416494   148  add fp, jssp, #0x10 (16)
0xffff91416498   152  ldr x17, pc+24 (addr 0x0000ffff914164b0)    ;; lazy deoptimization bailout 0
0xffff9141649c   156  add x17, x17, x16
0xffff914164a0   160  br x17
0xffff914164a4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914164a8   168  d63f03e0       constant
0xffff914164ac   172  d503201f       constant
0xffff914164b0   176  91206000       constant
0xffff914164b4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff91416498  runtime entry
0xffff914164a4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 11419
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff91416520     0  mov x2, x1
0xffff91416524     4  tbnz w2, #0, #+0x44 (addr 0xffff91416568)
0xffff91416528     8  mov x3, x0
0xffff9141652c    12  tbnz w3, #0, #+0x4c (addr 0xffff91416578)
0xffff91416530    16  asr x3, x3, #32
0xffff91416534    20  cmp w3, #0x20 (32)
0xffff91416538    24  b.eq #+0x8 (addr 0xffff91416540)
0xffff9141653c    28  b #+0x4c (addr 0xffff91416588)
0xffff91416540    32  asr x2, x2, #32
0xffff91416544    36  tbz w2, #31, #+0x18 (addr 0xffff9141655c)
0xffff91416548    40  neg w2, w2
0xffff9141654c    44  and w2, w2, #0x1f
0xffff91416550    48  negs w2, w2
0xffff91416554    52  b.eq #+0x44 (addr 0xffff91416598)
0xffff91416558    56  b #+0x8 (addr 0xffff91416560)
0xffff9141655c    60  and w2, w2, #0x1f
0xffff91416560    64  lsl x0, x2, #32
0xffff91416564    68  ret
0xffff91416568    72  movz x16, #0x0
0xffff9141656c    76  sub csp, jssp, #0x10 (16)
0xffff91416570    80  stp fp, lr, [jssp, #-16]!
0xffff91416574    84  bl #+0x34 (addr 0xffff914165a8)
0xffff91416578    88  movz x16, #0x8
0xffff9141657c    92  sub csp, jssp, #0x10 (16)
0xffff91416580    96  stp fp, lr, [jssp, #-16]!
0xffff91416584   100  bl #+0x24 (addr 0xffff914165a8)
0xffff91416588   104  movz x16, #0x10
0xffff9141658c   108  sub csp, jssp, #0x10 (16)
0xffff91416590   112  stp fp, lr, [jssp, #-16]!
0xffff91416594   116  bl #+0x14 (addr 0xffff914165a8)
0xffff91416598   120  movz x16, #0x18
0xffff9141659c   124  sub csp, jssp, #0x10 (16)
0xffff914165a0   128  stp fp, lr, [jssp, #-16]!
0xffff914165a4   132  bl #+0x4 (addr 0xffff914165a8)
0xffff914165a8   136  movz x17, #0xa00000000
0xffff914165ac   140  sub csp, jssp, #0x10 (16)
0xffff914165b0   144  stp x17, cp, [jssp, #-16]!
0xffff914165b4   148  add fp, jssp, #0x10 (16)
0xffff914165b8   152  ldr x17, pc+24 (addr 0x0000ffff914165d0)    ;; lazy deoptimization bailout 0
0xffff914165bc   156  add x17, x17, x16
0xffff914165c0   160  br x17
0xffff914165c4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914165c8   168  d63f03e0       constant
0xffff914165cc   172  d503201f       constant
0xffff914165d0   176  91206000       constant
0xffff914165d4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914165b8  runtime entry
0xffff914165c4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 11419
type = NORMAL
name = BinaryOpICStub(MOD:Smi*32->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff91416520     0  mov x2, x1
0xffff91416524     4  tbnz w2, #0, #+0x44 (addr 0xffff91416568)
0xffff91416528     8  mov x3, x0
0xffff9141652c    12  tbnz w3, #0, #+0x4c (addr 0xffff91416578)
0xffff91416530    16  asr x3, x3, #32
0xffff91416534    20  cmp w3, #0x20 (32)
0xffff91416538    24  b.eq #+0x8 (addr 0xffff91416540)
0xffff9141653c    28  b #+0x4c (addr 0xffff91416588)
0xffff91416540    32  asr x2, x2, #32
0xffff91416544    36  tbz w2, #31, #+0x18 (addr 0xffff9141655c)
0xffff91416548    40  neg w2, w2
0xffff9141654c    44  and w2, w2, #0x1f
0xffff91416550    48  negs w2, w2
0xffff91416554    52  b.eq #+0x44 (addr 0xffff91416598)
0xffff91416558    56  b #+0x8 (addr 0xffff91416560)
0xffff9141655c    60  and w2, w2, #0x1f
0xffff91416560    64  lsl x0, x2, #32
0xffff91416564    68  ret
0xffff91416568    72  movz x16, #0x0
0xffff9141656c    76  sub csp, jssp, #0x10 (16)
0xffff91416570    80  stp fp, lr, [jssp, #-16]!
0xffff91416574    84  bl #+0x34 (addr 0xffff914165a8)
0xffff91416578    88  movz x16, #0x8
0xffff9141657c    92  sub csp, jssp, #0x10 (16)
0xffff91416580    96  stp fp, lr, [jssp, #-16]!
0xffff91416584   100  bl #+0x24 (addr 0xffff914165a8)
0xffff91416588   104  movz x16, #0x10
0xffff9141658c   108  sub csp, jssp, #0x10 (16)
0xffff91416590   112  stp fp, lr, [jssp, #-16]!
0xffff91416594   116  bl #+0x14 (addr 0xffff914165a8)
0xffff91416598   120  movz x16, #0x18
0xffff9141659c   124  sub csp, jssp, #0x10 (16)
0xffff914165a0   128  stp fp, lr, [jssp, #-16]!
0xffff914165a4   132  bl #+0x4 (addr 0xffff914165a8)
0xffff914165a8   136  movz x17, #0xa00000000
0xffff914165ac   140  sub csp, jssp, #0x10 (16)
0xffff914165b0   144  stp x17, cp, [jssp, #-16]!
0xffff914165b4   148  add fp, jssp, #0x10 (16)
0xffff914165b8   152  ldr x17, pc+24 (addr 0x0000ffff914165d0)    ;; lazy deoptimization bailout 0
0xffff914165bc   156  add x17, x17, x16
0xffff914165c0   160  br x17
0xffff914165c4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914165c8   168  d63f03e0       constant
0xffff914165cc   172  d503201f       constant
0xffff914165d0   176  91206000       constant
0xffff914165d4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914165b8  runtime entry
0xffff914165c4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 23707
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff91416640     0  mov x2, x1
0xffff91416644     4  tbnz w2, #0, #+0x44 (addr 0xffff91416688)
0xffff91416648     8  mov x3, x0
0xffff9141664c    12  tbnz w3, #0, #+0x4c (addr 0xffff91416698)
0xffff91416650    16  asr x3, x3, #32
0xffff91416654    20  cmp w3, #0x800 (2048)
0xffff91416658    24  b.eq #+0x8 (addr 0xffff91416660)
0xffff9141665c    28  b #+0x4c (addr 0xffff914166a8)
0xffff91416660    32  asr x2, x2, #32
0xffff91416664    36  tbz w2, #31, #+0x18 (addr 0xffff9141667c)
0xffff91416668    40  neg w2, w2
0xffff9141666c    44  and w2, w2, #0x7ff
0xffff91416670    48  negs w2, w2
0xffff91416674    52  b.eq #+0x44 (addr 0xffff914166b8)
0xffff91416678    56  b #+0x8 (addr 0xffff91416680)
0xffff9141667c    60  and w2, w2, #0x7ff
0xffff91416680    64  lsl x0, x2, #32
0xffff91416684    68  ret
0xffff91416688    72  movz x16, #0x0
0xffff9141668c    76  sub csp, jssp, #0x10 (16)
0xffff91416690    80  stp fp, lr, [jssp, #-16]!
0xffff91416694    84  bl #+0x34 (addr 0xffff914166c8)
0xffff91416698    88  movz x16, #0x8
0xffff9141669c    92  sub csp, jssp, #0x10 (16)
0xffff914166a0    96  stp fp, lr, [jssp, #-16]!
0xffff914166a4   100  bl #+0x24 (addr 0xffff914166c8)
0xffff914166a8   104  movz x16, #0x10
0xffff914166ac   108  sub csp, jssp, #0x10 (16)
0xffff914166b0   112  stp fp, lr, [jssp, #-16]!
0xffff914166b4   116  bl #+0x14 (addr 0xffff914166c8)
0xffff914166b8   120  movz x16, #0x18
0xffff914166bc   124  sub csp, jssp, #0x10 (16)
0xffff914166c0   128  stp fp, lr, [jssp, #-16]!
0xffff914166c4   132  bl #+0x4 (addr 0xffff914166c8)
0xffff914166c8   136  movz x17, #0xa00000000
0xffff914166cc   140  sub csp, jssp, #0x10 (16)
0xffff914166d0   144  stp x17, cp, [jssp, #-16]!
0xffff914166d4   148  add fp, jssp, #0x10 (16)
0xffff914166d8   152  ldr x17, pc+24 (addr 0x0000ffff914166f0)    ;; lazy deoptimization bailout 0
0xffff914166dc   156  add x17, x17, x16
0xffff914166e0   160  br x17
0xffff914166e4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914166e8   168  d63f03e0       constant
0xffff914166ec   172  d503201f       constant
0xffff914166f0   176  91206000       constant
0xffff914166f4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914166d8  runtime entry
0xffff914166e4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 23707
type = NORMAL
name = BinaryOpICStub(MOD:Smi*2048->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff91416640     0  mov x2, x1
0xffff91416644     4  tbnz w2, #0, #+0x44 (addr 0xffff91416688)
0xffff91416648     8  mov x3, x0
0xffff9141664c    12  tbnz w3, #0, #+0x4c (addr 0xffff91416698)
0xffff91416650    16  asr x3, x3, #32
0xffff91416654    20  cmp w3, #0x800 (2048)
0xffff91416658    24  b.eq #+0x8 (addr 0xffff91416660)
0xffff9141665c    28  b #+0x4c (addr 0xffff914166a8)
0xffff91416660    32  asr x2, x2, #32
0xffff91416664    36  tbz w2, #31, #+0x18 (addr 0xffff9141667c)
0xffff91416668    40  neg w2, w2
0xffff9141666c    44  and w2, w2, #0x7ff
0xffff91416670    48  negs w2, w2
0xffff91416674    52  b.eq #+0x44 (addr 0xffff914166b8)
0xffff91416678    56  b #+0x8 (addr 0xffff91416680)
0xffff9141667c    60  and w2, w2, #0x7ff
0xffff91416680    64  lsl x0, x2, #32
0xffff91416684    68  ret
0xffff91416688    72  movz x16, #0x0
0xffff9141668c    76  sub csp, jssp, #0x10 (16)
0xffff91416690    80  stp fp, lr, [jssp, #-16]!
0xffff91416694    84  bl #+0x34 (addr 0xffff914166c8)
0xffff91416698    88  movz x16, #0x8
0xffff9141669c    92  sub csp, jssp, #0x10 (16)
0xffff914166a0    96  stp fp, lr, [jssp, #-16]!
0xffff914166a4   100  bl #+0x24 (addr 0xffff914166c8)
0xffff914166a8   104  movz x16, #0x10
0xffff914166ac   108  sub csp, jssp, #0x10 (16)
0xffff914166b0   112  stp fp, lr, [jssp, #-16]!
0xffff914166b4   116  bl #+0x14 (addr 0xffff914166c8)
0xffff914166b8   120  movz x16, #0x18
0xffff914166bc   124  sub csp, jssp, #0x10 (16)
0xffff914166c0   128  stp fp, lr, [jssp, #-16]!
0xffff914166c4   132  bl #+0x4 (addr 0xffff914166c8)
0xffff914166c8   136  movz x17, #0xa00000000
0xffff914166cc   140  sub csp, jssp, #0x10 (16)
0xffff914166d0   144  stp x17, cp, [jssp, #-16]!
0xffff914166d4   148  add fp, jssp, #0x10 (16)
0xffff914166d8   152  ldr x17, pc+24 (addr 0x0000ffff914166f0)    ;; lazy deoptimization bailout 0
0xffff914166dc   156  add x17, x17, x16
0xffff914166e0   160  br x17
0xffff914166e4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914166e8   168  d63f03e0       constant
0xffff914166ec   172  d503201f       constant
0xffff914166f0   176  91206000       constant
0xffff914166f4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914166d8  runtime entry
0xffff914166e4  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff91416760     0  adr xzr, #+0x40 (addr 0xffff914167a0)
0xffff91416764     4  adr xzr, #+0x360 (addr 0xffff91416ac4)
0xffff91416768     8  ldr x16, pc+1736 (addr 0x0000ffff91416e30)    ;; external reference (store_buffer_top)
0xffff9141676c    12  ldr x1, [x16]
0xffff91416770    16  str x2, [x1], #8
0xffff91416774    20  str x1, [x16]
0xffff91416778    24  tst x1, #0x1ffff
0xffff9141677c    28  b.eq #+0x8 (addr 0xffff91416784)
0xffff91416780    32  ret
0xffff91416784    36  sub csp, jssp, #0x8 (8)
0xffff91416788    40  str lr, [jssp, #-8]!
0xffff9141678c    44  ldr x17, pc+1708 (addr 0x0000ffff91416e38)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91416790    48  blr x17
0xffff91416794    52  ldr lr, [jssp], #8
0xffff91416798    56  ret
0xffff9141679c    60  ret
0xffff914167a0    64  sub csp, jssp, #0x10 (16)
0xffff914167a4    68  stp x3, x0, [jssp, #-16]!
0xffff914167a8    72  ldr x1, [x2]
0xffff914167ac    76  and x16, x1, #0xfffffffffff00000
0xffff914167b0    80  ldr x16, [x16, #8]
0xffff914167b4    84  tst x16, #0x18
0xffff914167b8    88  b.eq #+0x1d8 (addr 0xffff91416990)
0xffff914167bc    92  and x16, x5, #0xfffffffffff00000
0xffff914167c0    96  ldr x16, [x16, #8]
0xffff914167c4   100  tst x16, #0x18
0xffff914167c8   104  b.ne #+0x1c8 (addr 0xffff91416990)
0xffff914167cc   108  and x1, x5, #0xfffffffffff00000
0xffff914167d0   112  ldr x0, [x1, #104]
0xffff914167d4   116  subs x0, x0, #0x1 (1)
0xffff914167d8   120  str x0, [x1, #104]
0xffff914167dc   124  b.mi #+0xc4 (addr 0xffff914168a0)
0xffff914167e0   128  ubfx x16, x5, #8, #12
0xffff914167e4   132  and x1, x5, #0xfffffffffff00000
0xffff914167e8   136  add x1, x1, x16, lsl #2
0xffff914167ec   140  ubfx x0, x5, #3, #5
0xffff914167f0   144  ldr x1, [x1, #360]
0xffff914167f4   148  lsr x1, x1, x0
0xffff914167f8   152  tbz w1, #0, #+0x8 (addr 0xffff91416800)
0xffff914167fc   156  tbnz w1, #1, #+0x3c (addr 0xffff91416838)
0xffff91416800   160  ldp x3, x0, [jssp], #16
0xffff91416804   164  ldr x16, pc+1596 (addr 0x0000ffff91416e40)    ;; external reference (store_buffer_top)
0xffff91416808   168  ldr x1, [x16]
0xffff9141680c   172  str x2, [x1], #8
0xffff91416810   176  str x1, [x16]
0xffff91416814   180  tst x1, #0x1ffff
0xffff91416818   184  b.eq #+0x8 (addr 0xffff91416820)
0xffff9141681c   188  ret
0xffff91416820   192  sub csp, jssp, #0x8 (8)
0xffff91416824   196  str lr, [jssp, #-8]!
0xffff91416828   200  ldr x17, pc+1568 (addr 0x0000ffff91416e48)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9141682c   204  blr x17
0xffff91416830   208  ldr lr, [jssp], #8
0xffff91416834   212  ret
0xffff91416838   216  ldr x1, [x2]
0xffff9141683c   220  sub csp, jssp, #0x10 (16)
0xffff91416840   224  stp x5, x2, [jssp, #-16]!
0xffff91416844   228  ubfx x16, x1, #8, #12
0xffff91416848   232  and x0, x1, #0xfffffffffff00000
0xffff9141684c   236  add x0, x0, x16, lsl #2
0xffff91416850   240  ubfx x5, x1, #3, #5
0xffff91416854   244  ldr x2, [x0, #360]
0xffff91416858   248  lsr x2, x2, x5
0xffff9141685c   252  tbz w2, #0, #+0x40 (addr 0xffff9141689c)
0xffff91416860   256  ldp x5, x2, [jssp], #16
0xffff91416864   260  ldp x3, x0, [jssp], #16
0xffff91416868   264  ldr x16, pc+1512 (addr 0x0000ffff91416e50)    ;; external reference (store_buffer_top)
0xffff9141686c   268  ldr x1, [x16]
0xffff91416870   272  str x2, [x1], #8
0xffff91416874   276  str x1, [x16]
0xffff91416878   280  tst x1, #0x1ffff
0xffff9141687c   284  b.eq #+0x8 (addr 0xffff91416884)
0xffff91416880   288  ret
0xffff91416884   292  sub csp, jssp, #0x8 (8)
0xffff91416888   296  str lr, [jssp, #-8]!
0xffff9141688c   300  ldr x17, pc+1484 (addr 0x0000ffff91416e58)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91416890   304  blr x17
0xffff91416894   308  ldr lr, [jssp], #8
0xffff91416898   312  ret
0xffff9141689c   316  ldp x5, x2, [jssp], #16
0xffff914168a0   320  sub csp, jssp, #0x78 (120)
0xffff914168a4   324  stp x14, x15, [jssp, #-32]!
0xffff914168a8   328  stp x18, lr, [jssp, #16]
0xffff914168ac   332  stp x10, x11, [jssp, #-32]!
0xffff914168b0   336  stp x12, x13, [jssp, #16]
0xffff914168b4   340  stp x6, x7, [jssp, #-32]!
0xffff914168b8   344  stp x8, x9, [jssp, #16]
0xffff914168bc   348  stp x2, x4, [jssp, #-24]!
0xffff914168c0   352  str x5, [jssp, #16]
0xffff914168c4   356  sub csp, jssp, #0xb0 (176)
0xffff914168c8   360  stp d26, d27, [jssp, #-32]!
0xffff914168cc   364  stp d28, d29, [jssp, #16]
0xffff914168d0   368  stp d22, d23, [jssp, #-32]!
0xffff914168d4   372  stp d24, d25, [jssp, #16]
0xffff914168d8   376  stp d18, d19, [jssp, #-32]!
0xffff914168dc   380  stp d20, d21, [jssp, #16]
0xffff914168e0   384  stp d6, d7, [jssp, #-32]!
0xffff914168e4   388  stp d16, d17, [jssp, #16]
0xffff914168e8   392  stp d2, d3, [jssp, #-32]!
0xffff914168ec   396  stp d4, d5, [jssp, #16]
0xffff914168f0   400  stp d0, d1, [jssp, #-16]!
0xffff914168f4   404  mov x0, x5
0xffff914168f8   408  mov x1, x2
0xffff914168fc   412  ldr x2, pc+1380 (addr 0x0000ffff91416e60)    ;; external reference (isolate)
0xffff91416900   416  ldr x16, pc+1384 (addr 0x0000ffff91416e68)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91416904   420  and csp, jssp, #0xfffffffffffffff0
0xffff91416908   424  blr x16
0xffff9141690c   428  ldp d2, d3, [jssp, #16]
0xffff91416910   432  ldp d0, d1, [jssp], #32
0xffff91416914   436  ldp d6, d7, [jssp, #16]
0xffff91416918   440  ldp d4, d5, [jssp], #32
0xffff9141691c   444  ldp d18, d19, [jssp, #16]
0xffff91416920   448  ldp d16, d17, [jssp], #32
0xffff91416924   452  ldp d22, d23, [jssp, #16]
0xffff91416928   456  ldp d20, d21, [jssp], #32
0xffff9141692c   460  ldp d26, d27, [jssp, #16]
0xffff91416930   464  ldp d24, d25, [jssp], #32
0xffff91416934   468  ldp d28, d29, [jssp], #16
0xffff91416938   472  ldp x5, x6, [jssp, #16]
0xffff9141693c   476  ldp x2, x4, [jssp], #32
0xffff91416940   480  ldp x9, x10, [jssp, #16]
0xffff91416944   484  ldp x7, x8, [jssp], #32
0xffff91416948   488  ldp x13, x14, [jssp, #16]
0xffff9141694c   492  ldp x11, x12, [jssp], #32
0xffff91416950   496  ldr lr, [jssp, #16]
0xffff91416954   500  ldp x15, x18, [jssp], #24
0xffff91416958   504  ldp x3, x0, [jssp], #16
0xffff9141695c   508  ldr x16, pc+1300 (addr 0x0000ffff91416e70)    ;; external reference (store_buffer_top)
0xffff91416960   512  ldr x1, [x16]
0xffff91416964   516  str x2, [x1], #8
0xffff91416968   520  str x1, [x16]
0xffff9141696c   524  tst x1, #0x1ffff
0xffff91416970   528  b.eq #+0x8 (addr 0xffff91416978)
0xffff91416974   532  ret
0xffff91416978   536  sub csp, jssp, #0x8 (8)
0xffff9141697c   540  str lr, [jssp, #-8]!
0xffff91416980   544  ldr x17, pc+1272 (addr 0x0000ffff91416e78)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91416984   548  blr x17
0xffff91416988   552  ldr lr, [jssp], #8
0xffff9141698c   556  ret
0xffff91416990   560  and x1, x5, #0xfffffffffff00000
0xffff91416994   564  ldr x0, [x1, #104]
0xffff91416998   568  subs x0, x0, #0x1 (1)
0xffff9141699c   572  str x0, [x1, #104]
0xffff914169a0   576  b.mi #+0x64 (addr 0xffff91416a04)
0xffff914169a4   580  ubfx x16, x5, #8, #12
0xffff914169a8   584  and x1, x5, #0xfffffffffff00000
0xffff914169ac   588  add x1, x1, x16, lsl #2
0xffff914169b0   592  ubfx x0, x5, #3, #5
0xffff914169b4   596  ldr x1, [x1, #360]
0xffff914169b8   600  lsr x1, x1, x0
0xffff914169bc   604  tbz w1, #0, #+0x8 (addr 0xffff914169c4)
0xffff914169c0   608  tbnz w1, #1, #+0xc (addr 0xffff914169cc)
0xffff914169c4   612  ldp x3, x0, [jssp], #16
0xffff914169c8   616  ret
0xffff914169cc   620  ldr x1, [x2]
0xffff914169d0   624  sub csp, jssp, #0x10 (16)
0xffff914169d4   628  stp x5, x2, [jssp, #-16]!
0xffff914169d8   632  ubfx x16, x1, #8, #12
0xffff914169dc   636  and x0, x1, #0xfffffffffff00000
0xffff914169e0   640  add x0, x0, x16, lsl #2
0xffff914169e4   644  ubfx x5, x1, #3, #5
0xffff914169e8   648  ldr x2, [x0, #360]
0xffff914169ec   652  lsr x2, x2, x5
0xffff914169f0   656  tbz w2, #0, #+0x10 (addr 0xffff91416a00)
0xffff914169f4   660  ldp x5, x2, [jssp], #16
0xffff914169f8   664  ldp x3, x0, [jssp], #16
0xffff914169fc   668  ret
0xffff91416a00   672  ldp x5, x2, [jssp], #16
0xffff91416a04   676  sub csp, jssp, #0x78 (120)
0xffff91416a08   680  stp x14, x15, [jssp, #-32]!
0xffff91416a0c   684  stp x18, lr, [jssp, #16]
0xffff91416a10   688  stp x10, x11, [jssp, #-32]!
0xffff91416a14   692  stp x12, x13, [jssp, #16]
0xffff91416a18   696  stp x6, x7, [jssp, #-32]!
0xffff91416a1c   700  stp x8, x9, [jssp, #16]
0xffff91416a20   704  stp x2, x4, [jssp, #-24]!
0xffff91416a24   708  str x5, [jssp, #16]
0xffff91416a28   712  sub csp, jssp, #0xb0 (176)
0xffff91416a2c   716  stp d26, d27, [jssp, #-32]!
0xffff91416a30   720  stp d28, d29, [jssp, #16]
0xffff91416a34   724  stp d22, d23, [jssp, #-32]!
0xffff91416a38   728  stp d24, d25, [jssp, #16]
0xffff91416a3c   732  stp d18, d19, [jssp, #-32]!
0xffff91416a40   736  stp d20, d21, [jssp, #16]
0xffff91416a44   740  stp d6, d7, [jssp, #-32]!
0xffff91416a48   744  stp d16, d17, [jssp, #16]
0xffff91416a4c   748  stp d2, d3, [jssp, #-32]!
0xffff91416a50   752  stp d4, d5, [jssp, #16]
0xffff91416a54   756  stp d0, d1, [jssp, #-16]!
0xffff91416a58   760  mov x0, x5
0xffff91416a5c   764  mov x1, x2
0xffff91416a60   768  ldr x2, pc+1056 (addr 0x0000ffff91416e80)    ;; external reference (isolate)
0xffff91416a64   772  ldr x16, pc+1060 (addr 0x0000ffff91416e88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91416a68   776  and csp, jssp, #0xfffffffffffffff0
0xffff91416a6c   780  blr x16
0xffff91416a70   784  ldp d2, d3, [jssp, #16]
0xffff91416a74   788  ldp d0, d1, [jssp], #32
0xffff91416a78   792  ldp d6, d7, [jssp, #16]
0xffff91416a7c   796  ldp d4, d5, [jssp], #32
0xffff91416a80   800  ldp d18, d19, [jssp, #16]
0xffff91416a84   804  ldp d16, d17, [jssp], #32
0xffff91416a88   808  ldp d22, d23, [jssp, #16]
0xffff91416a8c   812  ldp d20, d21, [jssp], #32
0xffff91416a90   816  ldp d26, d27, [jssp, #16]
0xffff91416a94   820  ldp d24, d25, [jssp], #32
0xffff91416a98   824  ldp d28, d29, [jssp], #16
0xffff91416a9c   828  ldp x5, x6, [jssp, #16]
0xffff91416aa0   832  ldp x2, x4, [jssp], #32
0xffff91416aa4   836  ldp x9, x10, [jssp, #16]
0xffff91416aa8   840  ldp x7, x8, [jssp], #32
0xffff91416aac   844  ldp x13, x14, [jssp, #16]
0xffff91416ab0   848  ldp x11, x12, [jssp], #32
0xffff91416ab4   852  ldr lr, [jssp, #16]
0xffff91416ab8   856  ldp x15, x18, [jssp], #24
0xffff91416abc   860  ldp x3, x0, [jssp], #16
0xffff91416ac0   864  ret
0xffff91416ac4   868  sub csp, jssp, #0x10 (16)
0xffff91416ac8   872  stp x3, x0, [jssp, #-16]!
0xffff91416acc   876  ldr x1, [x2]
0xffff91416ad0   880  and x16, x1, #0xfffffffffff00000
0xffff91416ad4   884  ldr x16, [x16, #8]
0xffff91416ad8   888  tst x16, #0x18
0xffff91416adc   892  b.eq #+0x1f8 (addr 0xffff91416cd4)
0xffff91416ae0   896  and x16, x5, #0xfffffffffff00000
0xffff91416ae4   900  ldr x16, [x16, #8]
0xffff91416ae8   904  tst x16, #0x18
0xffff91416aec   908  b.ne #+0x1e8 (addr 0xffff91416cd4)
0xffff91416af0   912  and x1, x5, #0xfffffffffff00000
0xffff91416af4   916  ldr x0, [x1, #104]
0xffff91416af8   920  subs x0, x0, #0x1 (1)
0xffff91416afc   924  str x0, [x1, #104]
0xffff91416b00   928  b.mi #+0xe4 (addr 0xffff91416be4)
0xffff91416b04   932  ubfx x16, x5, #8, #12
0xffff91416b08   936  and x1, x5, #0xfffffffffff00000
0xffff91416b0c   940  add x1, x1, x16, lsl #2
0xffff91416b10   944  ubfx x0, x5, #3, #5
0xffff91416b14   948  ldr x1, [x1, #360]
0xffff91416b18   952  lsr x1, x1, x0
0xffff91416b1c   956  tbz w1, #0, #+0x8 (addr 0xffff91416b24)
0xffff91416b20   960  tbnz w1, #1, #+0x3c (addr 0xffff91416b5c)
0xffff91416b24   964  ldp x3, x0, [jssp], #16
0xffff91416b28   968  ldr x16, pc+872 (addr 0x0000ffff91416e90)    ;; external reference (store_buffer_top)
0xffff91416b2c   972  ldr x1, [x16]
0xffff91416b30   976  str x2, [x1], #8
0xffff91416b34   980  str x1, [x16]
0xffff91416b38   984  tst x1, #0x1ffff
0xffff91416b3c   988  b.eq #+0x8 (addr 0xffff91416b44)
0xffff91416b40   992  ret
0xffff91416b44   996  sub csp, jssp, #0x8 (8)
0xffff91416b48  1000  str lr, [jssp, #-8]!
0xffff91416b4c  1004  ldr x17, pc+844 (addr 0x0000ffff91416e98)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91416b50  1008  blr x17
0xffff91416b54  1012  ldr lr, [jssp], #8
0xffff91416b58  1016  ret
0xffff91416b5c  1020  ldr x1, [x2]
0xffff91416b60  1024  and x0, x1, #0xfffffffffff00000
0xffff91416b64  1028  ldr x0, [x0, #8]
0xffff91416b68  1032  tbz w0, #6, #+0x18 (addr 0xffff91416b80)
0xffff91416b6c  1036  and x0, x5, #0xfffffffffff00000
0xffff91416b70  1040  ldr x0, [x0, #8]
0xffff91416b74  1044  movz x16, #0x58
0xffff91416b78  1048  tst x0, x16
0xffff91416b7c  1052  b.eq #+0x68 (addr 0xffff91416be4)
0xffff91416b80  1056  sub csp, jssp, #0x10 (16)
0xffff91416b84  1060  stp x5, x2, [jssp, #-16]!
0xffff91416b88  1064  ubfx x16, x1, #8, #12
0xffff91416b8c  1068  and x0, x1, #0xfffffffffff00000
0xffff91416b90  1072  add x0, x0, x16, lsl #2
0xffff91416b94  1076  ubfx x5, x1, #3, #5
0xffff91416b98  1080  ldr x2, [x0, #360]
0xffff91416b9c  1084  lsr x2, x2, x5
0xffff91416ba0  1088  tbz w2, #0, #+0x40 (addr 0xffff91416be0)
0xffff91416ba4  1092  ldp x5, x2, [jssp], #16
0xffff91416ba8  1096  ldp x3, x0, [jssp], #16
0xffff91416bac  1100  ldr x16, pc+756 (addr 0x0000ffff91416ea0)    ;; external reference (store_buffer_top)
0xffff91416bb0  1104  ldr x1, [x16]
0xffff91416bb4  1108  str x2, [x1], #8
0xffff91416bb8  1112  str x1, [x16]
0xffff91416bbc  1116  tst x1, #0x1ffff
0xffff91416bc0  1120  b.eq #+0x8 (addr 0xffff91416bc8)
0xffff91416bc4  1124  ret
0xffff91416bc8  1128  sub csp, jssp, #0x8 (8)
0xffff91416bcc  1132  str lr, [jssp, #-8]!
0xffff91416bd0  1136  ldr x17, pc+728 (addr 0x0000ffff91416ea8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91416bd4  1140  blr x17
0xffff91416bd8  1144  ldr lr, [jssp], #8
0xffff91416bdc  1148  ret
0xffff91416be0  1152  ldp x5, x2, [jssp], #16
0xffff91416be4  1156  sub csp, jssp, #0x78 (120)
0xffff91416be8  1160  stp x14, x15, [jssp, #-32]!
0xffff91416bec  1164  stp x18, lr, [jssp, #16]
0xffff91416bf0  1168  stp x10, x11, [jssp, #-32]!
0xffff91416bf4  1172  stp x12, x13, [jssp, #16]
0xffff91416bf8  1176  stp x6, x7, [jssp, #-32]!
0xffff91416bfc  1180  stp x8, x9, [jssp, #16]
0xffff91416c00  1184  stp x2, x4, [jssp, #-24]!
0xffff91416c04  1188  str x5, [jssp, #16]
0xffff91416c08  1192  sub csp, jssp, #0xb0 (176)
0xffff91416c0c  1196  stp d26, d27, [jssp, #-32]!
0xffff91416c10  1200  stp d28, d29, [jssp, #16]
0xffff91416c14  1204  stp d22, d23, [jssp, #-32]!
0xffff91416c18  1208  stp d24, d25, [jssp, #16]
0xffff91416c1c  1212  stp d18, d19, [jssp, #-32]!
0xffff91416c20  1216  stp d20, d21, [jssp, #16]
0xffff91416c24  1220  stp d6, d7, [jssp, #-32]!
0xffff91416c28  1224  stp d16, d17, [jssp, #16]
0xffff91416c2c  1228  stp d2, d3, [jssp, #-32]!
0xffff91416c30  1232  stp d4, d5, [jssp, #16]
0xffff91416c34  1236  stp d0, d1, [jssp, #-16]!
0xffff91416c38  1240  mov x0, x5
0xffff91416c3c  1244  mov x1, x2
0xffff91416c40  1248  ldr x2, pc+624 (addr 0x0000ffff91416eb0)    ;; external reference (isolate)
0xffff91416c44  1252  ldr x16, pc+628 (addr 0x0000ffff91416eb8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91416c48  1256  and csp, jssp, #0xfffffffffffffff0
0xffff91416c4c  1260  blr x16
0xffff91416c50  1264  ldp d2, d3, [jssp, #16]
0xffff91416c54  1268  ldp d0, d1, [jssp], #32
0xffff91416c58  1272  ldp d6, d7, [jssp, #16]
0xffff91416c5c  1276  ldp d4, d5, [jssp], #32
0xffff91416c60  1280  ldp d18, d19, [jssp, #16]
0xffff91416c64  1284  ldp d16, d17, [jssp], #32
0xffff91416c68  1288  ldp d22, d23, [jssp, #16]
0xffff91416c6c  1292  ldp d20, d21, [jssp], #32
0xffff91416c70  1296  ldp d26, d27, [jssp, #16]
0xffff91416c74  1300  ldp d24, d25, [jssp], #32
0xffff91416c78  1304  ldp d28, d29, [jssp], #16
0xffff91416c7c  1308  ldp x5, x6, [jssp, #16]
0xffff91416c80  1312  ldp x2, x4, [jssp], #32
0xffff91416c84  1316  ldp x9, x10, [jssp, #16]
0xffff91416c88  1320  ldp x7, x8, [jssp], #32
0xffff91416c8c  1324  ldp x13, x14, [jssp, #16]
0xffff91416c90  1328  ldp x11, x12, [jssp], #32
0xffff91416c94  1332  ldr lr, [jssp, #16]
0xffff91416c98  1336  ldp x15, x18, [jssp], #24
0xffff91416c9c  1340  ldp x3, x0, [jssp], #16
0xffff91416ca0  1344  ldr x16, pc+544 (addr 0x0000ffff91416ec0)    ;; external reference (store_buffer_top)
0xffff91416ca4  1348  ldr x1, [x16]
0xffff91416ca8  1352  str x2, [x1], #8
0xffff91416cac  1356  str x1, [x16]
0xffff91416cb0  1360  tst x1, #0x1ffff
0xffff91416cb4  1364  b.eq #+0x8 (addr 0xffff91416cbc)
0xffff91416cb8  1368  ret
0xffff91416cbc  1372  sub csp, jssp, #0x8 (8)
0xffff91416cc0  1376  str lr, [jssp, #-8]!
0xffff91416cc4  1380  ldr x17, pc+516 (addr 0x0000ffff91416ec8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91416cc8  1384  blr x17
0xffff91416ccc  1388  ldr lr, [jssp], #8
0xffff91416cd0  1392  ret
0xffff91416cd4  1396  and x1, x5, #0xfffffffffff00000
0xffff91416cd8  1400  ldr x0, [x1, #104]
0xffff91416cdc  1404  subs x0, x0, #0x1 (1)
0xffff91416ce0  1408  str x0, [x1, #104]
0xffff91416ce4  1412  b.mi #+0x84 (addr 0xffff91416d68)
0xffff91416ce8  1416  ubfx x16, x5, #8, #12
0xffff91416cec  1420  and x1, x5, #0xfffffffffff00000
0xffff91416cf0  1424  add x1, x1, x16, lsl #2
0xffff91416cf4  1428  ubfx x0, x5, #3, #5
0xffff91416cf8  1432  ldr x1, [x1, #360]
0xffff91416cfc  1436  lsr x1, x1, x0
0xffff91416d00  1440  tbz w1, #0, #+0x8 (addr 0xffff91416d08)
0xffff91416d04  1444  tbnz w1, #1, #+0xc (addr 0xffff91416d10)
0xffff91416d08  1448  ldp x3, x0, [jssp], #16
0xffff91416d0c  1452  ret
0xffff91416d10  1456  ldr x1, [x2]
0xffff91416d14  1460  and x0, x1, #0xfffffffffff00000
0xffff91416d18  1464  ldr x0, [x0, #8]
0xffff91416d1c  1468  tbz w0, #6, #+0x18 (addr 0xffff91416d34)
0xffff91416d20  1472  and x0, x5, #0xfffffffffff00000
0xffff91416d24  1476  ldr x0, [x0, #8]
0xffff91416d28  1480  movz x16, #0x58
0xffff91416d2c  1484  tst x0, x16
0xffff91416d30  1488  b.eq #+0x38 (addr 0xffff91416d68)
0xffff91416d34  1492  sub csp, jssp, #0x10 (16)
0xffff91416d38  1496  stp x5, x2, [jssp, #-16]!
0xffff91416d3c  1500  ubfx x16, x1, #8, #12
0xffff91416d40  1504  and x0, x1, #0xfffffffffff00000
0xffff91416d44  1508  add x0, x0, x16, lsl #2
0xffff91416d48  1512  ubfx x5, x1, #3, #5
0xffff91416d4c  1516  ldr x2, [x0, #360]
0xffff91416d50  1520  lsr x2, x2, x5
0xffff91416d54  1524  tbz w2, #0, #+0x10 (addr 0xffff91416d64)
0xffff91416d58  1528  ldp x5, x2, [jssp], #16
0xffff91416d5c  1532  ldp x3, x0, [jssp], #16
0xffff91416d60  1536  ret
0xffff91416d64  1540  ldp x5, x2, [jssp], #16
0xffff91416d68  1544  sub csp, jssp, #0x78 (120)
0xffff91416d6c  1548  stp x14, x15, [jssp, #-32]!
0xffff91416d70  1552  stp x18, lr, [jssp, #16]
0xffff91416d74  1556  stp x10, x11, [jssp, #-32]!
0xffff91416d78  1560  stp x12, x13, [jssp, #16]
0xffff91416d7c  1564  stp x6, x7, [jssp, #-32]!
0xffff91416d80  1568  stp x8, x9, [jssp, #16]
0xffff91416d84  1572  stp x2, x4, [jssp, #-24]!
0xffff91416d88  1576  str x5, [jssp, #16]
0xffff91416d8c  1580  sub csp, jssp, #0xb0 (176)
0xffff91416d90  1584  stp d26, d27, [jssp, #-32]!
0xffff91416d94  1588  stp d28, d29, [jssp, #16]
0xffff91416d98  1592  stp d22, d23, [jssp, #-32]!
0xffff91416d9c  1596  stp d24, d25, [jssp, #16]
0xffff91416da0  1600  stp d18, d19, [jssp, #-32]!
0xffff91416da4  1604  stp d20, d21, [jssp, #16]
0xffff91416da8  1608  stp d6, d7, [jssp, #-32]!
0xffff91416dac  1612  stp d16, d17, [jssp, #16]
0xffff91416db0  1616  stp d2, d3, [jssp, #-32]!
0xffff91416db4  1620  stp d4, d5, [jssp, #16]
0xffff91416db8  1624  stp d0, d1, [jssp, #-16]!
0xffff91416dbc  1628  mov x0, x5
0xffff91416dc0  1632  mov x1, x2
0xffff91416dc4  1636  ldr x2, pc+268 (addr 0x0000ffff91416ed0)    ;; external reference (isolate)
0xffff91416dc8  1640  ldr x16, pc+272 (addr 0x0000ffff91416ed8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91416dcc  1644  and csp, jssp, #0xfffffffffffffff0
0xffff91416dd0  1648  blr x16
0xffff91416dd4  1652  ldp d2, d3, [jssp, #16]
0xffff91416dd8  1656  ldp d0, d1, [jssp], #32
0xffff91416ddc  1660  ldp d6, d7, [jssp, #16]
0xffff91416de0  1664  ldp d4, d5, [jssp], #32
0xffff91416de4  1668  ldp d18, d19, [jssp, #16]
0xffff91416de8  1672  ldp d16, d17, [jssp], #32
0xffff91416dec  1676  ldp d22, d23, [jssp, #16]
0xffff91416df0  1680  ldp d20, d21, [jssp], #32
0xffff91416df4  1684  ldp d26, d27, [jssp, #16]
0xffff91416df8  1688  ldp d24, d25, [jssp], #32
0xffff91416dfc  1692  ldp d28, d29, [jssp], #16
0xffff91416e00  1696  ldp x5, x6, [jssp, #16]
0xffff91416e04  1700  ldp x2, x4, [jssp], #32
0xffff91416e08  1704  ldp x9, x10, [jssp, #16]
0xffff91416e0c  1708  ldp x7, x8, [jssp], #32
0xffff91416e10  1712  ldp x13, x14, [jssp, #16]
0xffff91416e14  1716  ldp x11, x12, [jssp], #32
0xffff91416e18  1720  ldr lr, [jssp, #16]
0xffff91416e1c  1724  ldp x15, x18, [jssp], #24
0xffff91416e20  1728  ldp x3, x0, [jssp], #16
0xffff91416e24  1732  ret
0xffff91416e28  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff91416e2c  1740  d63f03e0       constant
0xffff91416e30  1744  4117f8c0       constant
0xffff91416e34  1748  00000000       constant
0xffff91416e38  1752  914065a0       constant
0xffff91416e3c  1756  0000ffff       constant
0xffff91416e40  1760  4117f8c0       constant
0xffff91416e44  1764  00000000       constant
0xffff91416e48  1768  914065a0       constant
0xffff91416e4c  1772  0000ffff       constant
0xffff91416e50  1776  4117f8c0       constant
0xffff91416e54  1780  00000000       constant
0xffff91416e58  1784  914065a0       constant
0xffff91416e5c  1788  0000ffff       constant
0xffff91416e60  1792  4117e2d0       constant
0xffff91416e64  1796  00000000       constant
0xffff91416e68  1800  00c2d958       constant
0xffff91416e6c  1804  00000000       constant
0xffff91416e70  1808  4117f8c0       constant
0xffff91416e74  1812  00000000       constant
0xffff91416e78  1816  914065a0       constant
0xffff91416e7c  1820  0000ffff       constant
0xffff91416e80  1824  4117e2d0       constant
0xffff91416e84  1828  00000000       constant
0xffff91416e88  1832  00c2d958       constant
0xffff91416e8c  1836  00000000       constant
0xffff91416e90  1840  4117f8c0       constant
0xffff91416e94  1844  00000000       constant
0xffff91416e98  1848  914065a0       constant
0xffff91416e9c  1852  0000ffff       constant
0xffff91416ea0  1856  4117f8c0       constant
0xffff91416ea4  1860  00000000       constant
0xffff91416ea8  1864  914065a0       constant
0xffff91416eac  1868  0000ffff       constant
0xffff91416eb0  1872  4117e2d0       constant
0xffff91416eb4  1876  00000000       constant
0xffff91416eb8  1880  00c2d958       constant
0xffff91416ebc  1884  00000000       constant
0xffff91416ec0  1888  4117f8c0       constant
0xffff91416ec4  1892  00000000       constant
0xffff91416ec8  1896  914065a0       constant
0xffff91416ecc  1900  0000ffff       constant
0xffff91416ed0  1904  4117e2d0       constant
0xffff91416ed4  1908  00000000       constant
0xffff91416ed8  1912  00c2d958       constant
0xffff91416edc  1916  00000000       constant


RelocInfo (size = 65)
0xffff91416768  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9141678c  code target (STUB)  (0xffff914065a0)
0xffff91416804  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91416828  code target (STUB)  (0xffff914065a0)
0xffff91416868  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9141688c  code target (STUB)  (0xffff914065a0)
0xffff914168fc  external reference (isolate)  (0x4117e2d0)
0xffff91416900  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9141695c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91416980  code target (STUB)  (0xffff914065a0)
0xffff91416a60  external reference (isolate)  (0x4117e2d0)
0xffff91416a64  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91416b28  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91416b4c  code target (STUB)  (0xffff914065a0)
0xffff91416bac  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91416bd0  code target (STUB)  (0xffff914065a0)
0xffff91416c40  external reference (isolate)  (0x4117e2d0)
0xffff91416c44  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91416ca0  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91416cc4  code target (STUB)  (0xffff914065a0)
0xffff91416dc4  external reference (isolate)  (0x4117e2d0)
0xffff91416dc8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91416e28  constant pool (size 184)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff91416f40     0  ldur x5, [x1, #15]
0xffff91416f44     4  ldur x6, [x5, #-1]
0xffff91416f48     8  ldr x16, pc+152 (addr 0x0000ffff91416fe0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91416f4c    12  cmp x6, x16
0xffff91416f50    16  b.ne #+0xa0 (addr 0xffff91416ff0)
0xffff91416f54    20  ldur w6, [x5, #11]
0xffff91416f58    24  tbnz w2, #0, #+0x54 (addr 0xffff91416fac)
0xffff91416f5c    28  asr x8, x2, #32
0xffff91416f60    32  cmp w8, w6
0xffff91416f64    36  b.hs #+0x9c (addr 0xffff91417000)
0xffff91416f68    40  mov x1, x0
0xffff91416f6c    44  add x2, x5, #0xf (15)
0xffff91416f70    48  str x1, [x2, w8, sxtw #3]
0xffff91416f74    52  add x2, x2, w8, sxtw #3
0xffff91416f78    56  tbz w1, #0, #+0x30 (addr 0xffff91416fa8)
0xffff91416f7c    60  and x1, x1, #0xfffffffffff00000
0xffff91416f80    64  ldr x1, [x1, #8]
0xffff91416f84    68  tbz w1, #1, #+0x24 (addr 0xffff91416fa8)
0xffff91416f88    72  and x1, x5, #0xfffffffffff00000
0xffff91416f8c    76  ldr x1, [x1, #8]
0xffff91416f90    80  tbz w1, #2, #+0x18 (addr 0xffff91416fa8)
0xffff91416f94    84  sub csp, jssp, #0x8 (8)
0xffff91416f98    88  str lr, [jssp, #-8]!
0xffff91416f9c    92  ldr x16, pc+76 (addr 0x0000ffff91416fe8)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff91416fa0    96  blr x16
0xffff91416fa4   100  ldr lr, [jssp], #8
0xffff91416fa8   104  ret
0xffff91416fac   108  ldur x16, [x2, #-1]
0xffff91416fb0   112  ldr x17, [x26, #120]
0xffff91416fb4   116  cmp x16, x17
0xffff91416fb8   120  b.ne #+0x58 (addr 0xffff91417010)
0xffff91416fbc   124  ldur d29, [x2, #7]
0xffff91416fc0   128  fcvtzs w8, d29
0xffff91416fc4   132  scvtf d0, w8
0xffff91416fc8   136  fcmp d29, d0
0xffff91416fcc   140  b.ne #+0x44 (addr 0xffff91417010)
0xffff91416fd0   144  b #-0x70 (addr 0xffff91416f60)
0xffff91416fd4   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff91416fd8   152  d63f03e0       constant
0xffff91416fdc   156  d503201f       constant
0xffff91416fe0   160  36404259       constant
0xffff91416fe4   164  00000000       constant
0xffff91416fe8   168  91416760       constant
0xffff91416fec   172  0000ffff       constant
0xffff91416ff0   176  movz x16, #0x0
0xffff91416ff4   180  sub csp, jssp, #0x10 (16)
0xffff91416ff8   184  stp fp, lr, [jssp, #-16]!
0xffff91416ffc   188  bl #+0x24 (addr 0xffff91417020)
0xffff91417000   192  movz x16, #0x8
0xffff91417004   196  sub csp, jssp, #0x10 (16)
0xffff91417008   200  stp fp, lr, [jssp, #-16]!
0xffff9141700c   204  bl #+0x14 (addr 0xffff91417020)
0xffff91417010   208  movz x16, #0x10
0xffff91417014   212  sub csp, jssp, #0x10 (16)
0xffff91417018   216  stp fp, lr, [jssp, #-16]!
0xffff9141701c   220  bl #+0x4 (addr 0xffff91417020)
0xffff91417020   224  movz x17, #0xa00000000
0xffff91417024   228  sub csp, jssp, #0x10 (16)
0xffff91417028   232  stp x17, cp, [jssp, #-16]!
0xffff9141702c   236  add fp, jssp, #0x10 (16)
0xffff91417030   240  ldr x17, pc+24 (addr 0x0000ffff91417048)    ;; lazy deoptimization bailout 0
0xffff91417034   244  add x17, x17, x16
0xffff91417038   248  br x17
0xffff9141703c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91417040   256  d63f03e0       constant
0xffff91417044   260  d503201f       constant
0xffff91417048   264  91206000       constant
0xffff9141704c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff91416f48  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91416f9c  code target (STUB)  (0xffff91416760)
0xffff91416fd4  constant pool (size 28)
0xffff91417030  runtime entry
0xffff9141703c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff91416f40     0  ldur x5, [x1, #15]
0xffff91416f44     4  ldur x6, [x5, #-1]
0xffff91416f48     8  ldr x16, pc+152 (addr 0x0000ffff91416fe0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91416f4c    12  cmp x6, x16
0xffff91416f50    16  b.ne #+0xa0 (addr 0xffff91416ff0)
0xffff91416f54    20  ldur w6, [x5, #11]
0xffff91416f58    24  tbnz w2, #0, #+0x54 (addr 0xffff91416fac)
0xffff91416f5c    28  asr x8, x2, #32
0xffff91416f60    32  cmp w8, w6
0xffff91416f64    36  b.hs #+0x9c (addr 0xffff91417000)
0xffff91416f68    40  mov x1, x0
0xffff91416f6c    44  add x2, x5, #0xf (15)
0xffff91416f70    48  str x1, [x2, w8, sxtw #3]
0xffff91416f74    52  add x2, x2, w8, sxtw #3
0xffff91416f78    56  tbz w1, #0, #+0x30 (addr 0xffff91416fa8)
0xffff91416f7c    60  and x1, x1, #0xfffffffffff00000
0xffff91416f80    64  ldr x1, [x1, #8]
0xffff91416f84    68  tbz w1, #1, #+0x24 (addr 0xffff91416fa8)
0xffff91416f88    72  and x1, x5, #0xfffffffffff00000
0xffff91416f8c    76  ldr x1, [x1, #8]
0xffff91416f90    80  tbz w1, #2, #+0x18 (addr 0xffff91416fa8)
0xffff91416f94    84  sub csp, jssp, #0x8 (8)
0xffff91416f98    88  str lr, [jssp, #-8]!
0xffff91416f9c    92  ldr x16, pc+76 (addr 0x0000ffff91416fe8)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff91416fa0    96  blr x16
0xffff91416fa4   100  ldr lr, [jssp], #8
0xffff91416fa8   104  ret
0xffff91416fac   108  ldur x16, [x2, #-1]
0xffff91416fb0   112  ldr x17, [x26, #120]
0xffff91416fb4   116  cmp x16, x17
0xffff91416fb8   120  b.ne #+0x58 (addr 0xffff91417010)
0xffff91416fbc   124  ldur d29, [x2, #7]
0xffff91416fc0   128  fcvtzs w8, d29
0xffff91416fc4   132  scvtf d0, w8
0xffff91416fc8   136  fcmp d29, d0
0xffff91416fcc   140  b.ne #+0x44 (addr 0xffff91417010)
0xffff91416fd0   144  b #-0x70 (addr 0xffff91416f60)
0xffff91416fd4   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff91416fd8   152  d63f03e0       constant
0xffff91416fdc   156  d503201f       constant
0xffff91416fe0   160  36404259       constant
0xffff91416fe4   164  00000000       constant
0xffff91416fe8   168  91416760       constant
0xffff91416fec   172  0000ffff       constant
0xffff91416ff0   176  movz x16, #0x0
0xffff91416ff4   180  sub csp, jssp, #0x10 (16)
0xffff91416ff8   184  stp fp, lr, [jssp, #-16]!
0xffff91416ffc   188  bl #+0x24 (addr 0xffff91417020)
0xffff91417000   192  movz x16, #0x8
0xffff91417004   196  sub csp, jssp, #0x10 (16)
0xffff91417008   200  stp fp, lr, [jssp, #-16]!
0xffff9141700c   204  bl #+0x14 (addr 0xffff91417020)
0xffff91417010   208  movz x16, #0x10
0xffff91417014   212  sub csp, jssp, #0x10 (16)
0xffff91417018   216  stp fp, lr, [jssp, #-16]!
0xffff9141701c   220  bl #+0x4 (addr 0xffff91417020)
0xffff91417020   224  movz x17, #0xa00000000
0xffff91417024   228  sub csp, jssp, #0x10 (16)
0xffff91417028   232  stp x17, cp, [jssp, #-16]!
0xffff9141702c   236  add fp, jssp, #0x10 (16)
0xffff91417030   240  ldr x17, pc+24 (addr 0x0000ffff91417048)    ;; lazy deoptimization bailout 0
0xffff91417034   244  add x17, x17, x16
0xffff91417038   248  br x17
0xffff9141703c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91417040   256  d63f03e0       constant
0xffff91417044   260  d503201f       constant
0xffff91417048   264  91206000       constant
0xffff9141704c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff91416f48  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91416f9c  code target (STUB)  (0xffff91416760)
0xffff91416fd4  constant pool (size 28)
0xffff91417030  runtime entry
0xffff9141703c  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff914170c0     0  adr xzr, #+0x40 (addr 0xffff91417100)
0xffff914170c4     4  adr xzr, #+0x360 (addr 0xffff91417424)
0xffff914170c8     8  ldr x16, pc+1736 (addr 0x0000ffff91417790)    ;; external reference (store_buffer_top)
0xffff914170cc    12  ldr x2, [x16]
0xffff914170d0    16  str x3, [x2], #8
0xffff914170d4    20  str x2, [x16]
0xffff914170d8    24  tst x2, #0x1ffff
0xffff914170dc    28  b.eq #+0x8 (addr 0xffff914170e4)
0xffff914170e0    32  ret
0xffff914170e4    36  sub csp, jssp, #0x8 (8)
0xffff914170e8    40  str lr, [jssp, #-8]!
0xffff914170ec    44  ldr x17, pc+1708 (addr 0x0000ffff91417798)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914170f0    48  blr x17
0xffff914170f4    52  ldr lr, [jssp], #8
0xffff914170f8    56  ret
0xffff914170fc    60  ret
0xffff91417100    64  sub csp, jssp, #0x10 (16)
0xffff91417104    68  stp x4, x0, [jssp, #-16]!
0xffff91417108    72  ldr x2, [x3]
0xffff9141710c    76  and x16, x2, #0xfffffffffff00000
0xffff91417110    80  ldr x16, [x16, #8]
0xffff91417114    84  tst x16, #0x18
0xffff91417118    88  b.eq #+0x1d8 (addr 0xffff914172f0)
0xffff9141711c    92  and x16, x1, #0xfffffffffff00000
0xffff91417120    96  ldr x16, [x16, #8]
0xffff91417124   100  tst x16, #0x18
0xffff91417128   104  b.ne #+0x1c8 (addr 0xffff914172f0)
0xffff9141712c   108  and x2, x1, #0xfffffffffff00000
0xffff91417130   112  ldr x0, [x2, #104]
0xffff91417134   116  subs x0, x0, #0x1 (1)
0xffff91417138   120  str x0, [x2, #104]
0xffff9141713c   124  b.mi #+0xc4 (addr 0xffff91417200)
0xffff91417140   128  ubfx x16, x1, #8, #12
0xffff91417144   132  and x2, x1, #0xfffffffffff00000
0xffff91417148   136  add x2, x2, x16, lsl #2
0xffff9141714c   140  ubfx x0, x1, #3, #5
0xffff91417150   144  ldr x2, [x2, #360]
0xffff91417154   148  lsr x2, x2, x0
0xffff91417158   152  tbz w2, #0, #+0x8 (addr 0xffff91417160)
0xffff9141715c   156  tbnz w2, #1, #+0x3c (addr 0xffff91417198)
0xffff91417160   160  ldp x4, x0, [jssp], #16
0xffff91417164   164  ldr x16, pc+1596 (addr 0x0000ffff914177a0)    ;; external reference (store_buffer_top)
0xffff91417168   168  ldr x2, [x16]
0xffff9141716c   172  str x3, [x2], #8
0xffff91417170   176  str x2, [x16]
0xffff91417174   180  tst x2, #0x1ffff
0xffff91417178   184  b.eq #+0x8 (addr 0xffff91417180)
0xffff9141717c   188  ret
0xffff91417180   192  sub csp, jssp, #0x8 (8)
0xffff91417184   196  str lr, [jssp, #-8]!
0xffff91417188   200  ldr x17, pc+1568 (addr 0x0000ffff914177a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9141718c   204  blr x17
0xffff91417190   208  ldr lr, [jssp], #8
0xffff91417194   212  ret
0xffff91417198   216  ldr x2, [x3]
0xffff9141719c   220  sub csp, jssp, #0x10 (16)
0xffff914171a0   224  stp x1, x3, [jssp, #-16]!
0xffff914171a4   228  ubfx x16, x2, #8, #12
0xffff914171a8   232  and x0, x2, #0xfffffffffff00000
0xffff914171ac   236  add x0, x0, x16, lsl #2
0xffff914171b0   240  ubfx x1, x2, #3, #5
0xffff914171b4   244  ldr x3, [x0, #360]
0xffff914171b8   248  lsr x3, x3, x1
0xffff914171bc   252  tbz w3, #0, #+0x40 (addr 0xffff914171fc)
0xffff914171c0   256  ldp x1, x3, [jssp], #16
0xffff914171c4   260  ldp x4, x0, [jssp], #16
0xffff914171c8   264  ldr x16, pc+1512 (addr 0x0000ffff914177b0)    ;; external reference (store_buffer_top)
0xffff914171cc   268  ldr x2, [x16]
0xffff914171d0   272  str x3, [x2], #8
0xffff914171d4   276  str x2, [x16]
0xffff914171d8   280  tst x2, #0x1ffff
0xffff914171dc   284  b.eq #+0x8 (addr 0xffff914171e4)
0xffff914171e0   288  ret
0xffff914171e4   292  sub csp, jssp, #0x8 (8)
0xffff914171e8   296  str lr, [jssp, #-8]!
0xffff914171ec   300  ldr x17, pc+1484 (addr 0x0000ffff914177b8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914171f0   304  blr x17
0xffff914171f4   308  ldr lr, [jssp], #8
0xffff914171f8   312  ret
0xffff914171fc   316  ldp x1, x3, [jssp], #16
0xffff91417200   320  sub csp, jssp, #0x78 (120)
0xffff91417204   324  stp x14, x15, [jssp, #-32]!
0xffff91417208   328  stp x18, lr, [jssp, #16]
0xffff9141720c   332  stp x10, x11, [jssp, #-32]!
0xffff91417210   336  stp x12, x13, [jssp, #16]
0xffff91417214   340  stp x6, x7, [jssp, #-32]!
0xffff91417218   344  stp x8, x9, [jssp, #16]
0xffff9141721c   348  stp x1, x3, [jssp, #-24]!
0xffff91417220   352  str x5, [jssp, #16]
0xffff91417224   356  sub csp, jssp, #0xb0 (176)
0xffff91417228   360  stp d26, d27, [jssp, #-32]!
0xffff9141722c   364  stp d28, d29, [jssp, #16]
0xffff91417230   368  stp d22, d23, [jssp, #-32]!
0xffff91417234   372  stp d24, d25, [jssp, #16]
0xffff91417238   376  stp d18, d19, [jssp, #-32]!
0xffff9141723c   380  stp d20, d21, [jssp, #16]
0xffff91417240   384  stp d6, d7, [jssp, #-32]!
0xffff91417244   388  stp d16, d17, [jssp, #16]
0xffff91417248   392  stp d2, d3, [jssp, #-32]!
0xffff9141724c   396  stp d4, d5, [jssp, #16]
0xffff91417250   400  stp d0, d1, [jssp, #-16]!
0xffff91417254   404  mov x0, x1
0xffff91417258   408  mov x1, x3
0xffff9141725c   412  ldr x2, pc+1380 (addr 0x0000ffff914177c0)    ;; external reference (isolate)
0xffff91417260   416  ldr x16, pc+1384 (addr 0x0000ffff914177c8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91417264   420  and csp, jssp, #0xfffffffffffffff0
0xffff91417268   424  blr x16
0xffff9141726c   428  ldp d2, d3, [jssp, #16]
0xffff91417270   432  ldp d0, d1, [jssp], #32
0xffff91417274   436  ldp d6, d7, [jssp, #16]
0xffff91417278   440  ldp d4, d5, [jssp], #32
0xffff9141727c   444  ldp d18, d19, [jssp, #16]
0xffff91417280   448  ldp d16, d17, [jssp], #32
0xffff91417284   452  ldp d22, d23, [jssp, #16]
0xffff91417288   456  ldp d20, d21, [jssp], #32
0xffff9141728c   460  ldp d26, d27, [jssp, #16]
0xffff91417290   464  ldp d24, d25, [jssp], #32
0xffff91417294   468  ldp d28, d29, [jssp], #16
0xffff91417298   472  ldp x5, x6, [jssp, #16]
0xffff9141729c   476  ldp x1, x3, [jssp], #32
0xffff914172a0   480  ldp x9, x10, [jssp, #16]
0xffff914172a4   484  ldp x7, x8, [jssp], #32
0xffff914172a8   488  ldp x13, x14, [jssp, #16]
0xffff914172ac   492  ldp x11, x12, [jssp], #32
0xffff914172b0   496  ldr lr, [jssp, #16]
0xffff914172b4   500  ldp x15, x18, [jssp], #24
0xffff914172b8   504  ldp x4, x0, [jssp], #16
0xffff914172bc   508  ldr x16, pc+1300 (addr 0x0000ffff914177d0)    ;; external reference (store_buffer_top)
0xffff914172c0   512  ldr x2, [x16]
0xffff914172c4   516  str x3, [x2], #8
0xffff914172c8   520  str x2, [x16]
0xffff914172cc   524  tst x2, #0x1ffff
0xffff914172d0   528  b.eq #+0x8 (addr 0xffff914172d8)
0xffff914172d4   532  ret
0xffff914172d8   536  sub csp, jssp, #0x8 (8)
0xffff914172dc   540  str lr, [jssp, #-8]!
0xffff914172e0   544  ldr x17, pc+1272 (addr 0x0000ffff914177d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914172e4   548  blr x17
0xffff914172e8   552  ldr lr, [jssp], #8
0xffff914172ec   556  ret
0xffff914172f0   560  and x2, x1, #0xfffffffffff00000
0xffff914172f4   564  ldr x0, [x2, #104]
0xffff914172f8   568  subs x0, x0, #0x1 (1)
0xffff914172fc   572  str x0, [x2, #104]
0xffff91417300   576  b.mi #+0x64 (addr 0xffff91417364)
0xffff91417304   580  ubfx x16, x1, #8, #12
0xffff91417308   584  and x2, x1, #0xfffffffffff00000
0xffff9141730c   588  add x2, x2, x16, lsl #2
0xffff91417310   592  ubfx x0, x1, #3, #5
0xffff91417314   596  ldr x2, [x2, #360]
0xffff91417318   600  lsr x2, x2, x0
0xffff9141731c   604  tbz w2, #0, #+0x8 (addr 0xffff91417324)
0xffff91417320   608  tbnz w2, #1, #+0xc (addr 0xffff9141732c)
0xffff91417324   612  ldp x4, x0, [jssp], #16
0xffff91417328   616  ret
0xffff9141732c   620  ldr x2, [x3]
0xffff91417330   624  sub csp, jssp, #0x10 (16)
0xffff91417334   628  stp x1, x3, [jssp, #-16]!
0xffff91417338   632  ubfx x16, x2, #8, #12
0xffff9141733c   636  and x0, x2, #0xfffffffffff00000
0xffff91417340   640  add x0, x0, x16, lsl #2
0xffff91417344   644  ubfx x1, x2, #3, #5
0xffff91417348   648  ldr x3, [x0, #360]
0xffff9141734c   652  lsr x3, x3, x1
0xffff91417350   656  tbz w3, #0, #+0x10 (addr 0xffff91417360)
0xffff91417354   660  ldp x1, x3, [jssp], #16
0xffff91417358   664  ldp x4, x0, [jssp], #16
0xffff9141735c   668  ret
0xffff91417360   672  ldp x1, x3, [jssp], #16
0xffff91417364   676  sub csp, jssp, #0x78 (120)
0xffff91417368   680  stp x14, x15, [jssp, #-32]!
0xffff9141736c   684  stp x18, lr, [jssp, #16]
0xffff91417370   688  stp x10, x11, [jssp, #-32]!
0xffff91417374   692  stp x12, x13, [jssp, #16]
0xffff91417378   696  stp x6, x7, [jssp, #-32]!
0xffff9141737c   700  stp x8, x9, [jssp, #16]
0xffff91417380   704  stp x1, x3, [jssp, #-24]!
0xffff91417384   708  str x5, [jssp, #16]
0xffff91417388   712  sub csp, jssp, #0xb0 (176)
0xffff9141738c   716  stp d26, d27, [jssp, #-32]!
0xffff91417390   720  stp d28, d29, [jssp, #16]
0xffff91417394   724  stp d22, d23, [jssp, #-32]!
0xffff91417398   728  stp d24, d25, [jssp, #16]
0xffff9141739c   732  stp d18, d19, [jssp, #-32]!
0xffff914173a0   736  stp d20, d21, [jssp, #16]
0xffff914173a4   740  stp d6, d7, [jssp, #-32]!
0xffff914173a8   744  stp d16, d17, [jssp, #16]
0xffff914173ac   748  stp d2, d3, [jssp, #-32]!
0xffff914173b0   752  stp d4, d5, [jssp, #16]
0xffff914173b4   756  stp d0, d1, [jssp, #-16]!
0xffff914173b8   760  mov x0, x1
0xffff914173bc   764  mov x1, x3
0xffff914173c0   768  ldr x2, pc+1056 (addr 0x0000ffff914177e0)    ;; external reference (isolate)
0xffff914173c4   772  ldr x16, pc+1060 (addr 0x0000ffff914177e8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914173c8   776  and csp, jssp, #0xfffffffffffffff0
0xffff914173cc   780  blr x16
0xffff914173d0   784  ldp d2, d3, [jssp, #16]
0xffff914173d4   788  ldp d0, d1, [jssp], #32
0xffff914173d8   792  ldp d6, d7, [jssp, #16]
0xffff914173dc   796  ldp d4, d5, [jssp], #32
0xffff914173e0   800  ldp d18, d19, [jssp, #16]
0xffff914173e4   804  ldp d16, d17, [jssp], #32
0xffff914173e8   808  ldp d22, d23, [jssp, #16]
0xffff914173ec   812  ldp d20, d21, [jssp], #32
0xffff914173f0   816  ldp d26, d27, [jssp, #16]
0xffff914173f4   820  ldp d24, d25, [jssp], #32
0xffff914173f8   824  ldp d28, d29, [jssp], #16
0xffff914173fc   828  ldp x5, x6, [jssp, #16]
0xffff91417400   832  ldp x1, x3, [jssp], #32
0xffff91417404   836  ldp x9, x10, [jssp, #16]
0xffff91417408   840  ldp x7, x8, [jssp], #32
0xffff9141740c   844  ldp x13, x14, [jssp, #16]
0xffff91417410   848  ldp x11, x12, [jssp], #32
0xffff91417414   852  ldr lr, [jssp, #16]
0xffff91417418   856  ldp x15, x18, [jssp], #24
0xffff9141741c   860  ldp x4, x0, [jssp], #16
0xffff91417420   864  ret
0xffff91417424   868  sub csp, jssp, #0x10 (16)
0xffff91417428   872  stp x4, x0, [jssp, #-16]!
0xffff9141742c   876  ldr x2, [x3]
0xffff91417430   880  and x16, x2, #0xfffffffffff00000
0xffff91417434   884  ldr x16, [x16, #8]
0xffff91417438   888  tst x16, #0x18
0xffff9141743c   892  b.eq #+0x1f8 (addr 0xffff91417634)
0xffff91417440   896  and x16, x1, #0xfffffffffff00000
0xffff91417444   900  ldr x16, [x16, #8]
0xffff91417448   904  tst x16, #0x18
0xffff9141744c   908  b.ne #+0x1e8 (addr 0xffff91417634)
0xffff91417450   912  and x2, x1, #0xfffffffffff00000
0xffff91417454   916  ldr x0, [x2, #104]
0xffff91417458   920  subs x0, x0, #0x1 (1)
0xffff9141745c   924  str x0, [x2, #104]
0xffff91417460   928  b.mi #+0xe4 (addr 0xffff91417544)
0xffff91417464   932  ubfx x16, x1, #8, #12
0xffff91417468   936  and x2, x1, #0xfffffffffff00000
0xffff9141746c   940  add x2, x2, x16, lsl #2
0xffff91417470   944  ubfx x0, x1, #3, #5
0xffff91417474   948  ldr x2, [x2, #360]
0xffff91417478   952  lsr x2, x2, x0
0xffff9141747c   956  tbz w2, #0, #+0x8 (addr 0xffff91417484)
0xffff91417480   960  tbnz w2, #1, #+0x3c (addr 0xffff914174bc)
0xffff91417484   964  ldp x4, x0, [jssp], #16
0xffff91417488   968  ldr x16, pc+872 (addr 0x0000ffff914177f0)    ;; external reference (store_buffer_top)
0xffff9141748c   972  ldr x2, [x16]
0xffff91417490   976  str x3, [x2], #8
0xffff91417494   980  str x2, [x16]
0xffff91417498   984  tst x2, #0x1ffff
0xffff9141749c   988  b.eq #+0x8 (addr 0xffff914174a4)
0xffff914174a0   992  ret
0xffff914174a4   996  sub csp, jssp, #0x8 (8)
0xffff914174a8  1000  str lr, [jssp, #-8]!
0xffff914174ac  1004  ldr x17, pc+844 (addr 0x0000ffff914177f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914174b0  1008  blr x17
0xffff914174b4  1012  ldr lr, [jssp], #8
0xffff914174b8  1016  ret
0xffff914174bc  1020  ldr x2, [x3]
0xffff914174c0  1024  and x0, x2, #0xfffffffffff00000
0xffff914174c4  1028  ldr x0, [x0, #8]
0xffff914174c8  1032  tbz w0, #6, #+0x18 (addr 0xffff914174e0)
0xffff914174cc  1036  and x0, x1, #0xfffffffffff00000
0xffff914174d0  1040  ldr x0, [x0, #8]
0xffff914174d4  1044  movz x16, #0x58
0xffff914174d8  1048  tst x0, x16
0xffff914174dc  1052  b.eq #+0x68 (addr 0xffff91417544)
0xffff914174e0  1056  sub csp, jssp, #0x10 (16)
0xffff914174e4  1060  stp x1, x3, [jssp, #-16]!
0xffff914174e8  1064  ubfx x16, x2, #8, #12
0xffff914174ec  1068  and x0, x2, #0xfffffffffff00000
0xffff914174f0  1072  add x0, x0, x16, lsl #2
0xffff914174f4  1076  ubfx x1, x2, #3, #5
0xffff914174f8  1080  ldr x3, [x0, #360]
0xffff914174fc  1084  lsr x3, x3, x1
0xffff91417500  1088  tbz w3, #0, #+0x40 (addr 0xffff91417540)
0xffff91417504  1092  ldp x1, x3, [jssp], #16
0xffff91417508  1096  ldp x4, x0, [jssp], #16
0xffff9141750c  1100  ldr x16, pc+756 (addr 0x0000ffff91417800)    ;; external reference (store_buffer_top)
0xffff91417510  1104  ldr x2, [x16]
0xffff91417514  1108  str x3, [x2], #8
0xffff91417518  1112  str x2, [x16]
0xffff9141751c  1116  tst x2, #0x1ffff
0xffff91417520  1120  b.eq #+0x8 (addr 0xffff91417528)
0xffff91417524  1124  ret
0xffff91417528  1128  sub csp, jssp, #0x8 (8)
0xffff9141752c  1132  str lr, [jssp, #-8]!
0xffff91417530  1136  ldr x17, pc+728 (addr 0x0000ffff91417808)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91417534  1140  blr x17
0xffff91417538  1144  ldr lr, [jssp], #8
0xffff9141753c  1148  ret
0xffff91417540  1152  ldp x1, x3, [jssp], #16
0xffff91417544  1156  sub csp, jssp, #0x78 (120)
0xffff91417548  1160  stp x14, x15, [jssp, #-32]!
0xffff9141754c  1164  stp x18, lr, [jssp, #16]
0xffff91417550  1168  stp x10, x11, [jssp, #-32]!
0xffff91417554  1172  stp x12, x13, [jssp, #16]
0xffff91417558  1176  stp x6, x7, [jssp, #-32]!
0xffff9141755c  1180  stp x8, x9, [jssp, #16]
0xffff91417560  1184  stp x1, x3, [jssp, #-24]!
0xffff91417564  1188  str x5, [jssp, #16]
0xffff91417568  1192  sub csp, jssp, #0xb0 (176)
0xffff9141756c  1196  stp d26, d27, [jssp, #-32]!
0xffff91417570  1200  stp d28, d29, [jssp, #16]
0xffff91417574  1204  stp d22, d23, [jssp, #-32]!
0xffff91417578  1208  stp d24, d25, [jssp, #16]
0xffff9141757c  1212  stp d18, d19, [jssp, #-32]!
0xffff91417580  1216  stp d20, d21, [jssp, #16]
0xffff91417584  1220  stp d6, d7, [jssp, #-32]!
0xffff91417588  1224  stp d16, d17, [jssp, #16]
0xffff9141758c  1228  stp d2, d3, [jssp, #-32]!
0xffff91417590  1232  stp d4, d5, [jssp, #16]
0xffff91417594  1236  stp d0, d1, [jssp, #-16]!
0xffff91417598  1240  mov x0, x1
0xffff9141759c  1244  mov x1, x3
0xffff914175a0  1248  ldr x2, pc+624 (addr 0x0000ffff91417810)    ;; external reference (isolate)
0xffff914175a4  1252  ldr x16, pc+628 (addr 0x0000ffff91417818)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914175a8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff914175ac  1260  blr x16
0xffff914175b0  1264  ldp d2, d3, [jssp, #16]
0xffff914175b4  1268  ldp d0, d1, [jssp], #32
0xffff914175b8  1272  ldp d6, d7, [jssp, #16]
0xffff914175bc  1276  ldp d4, d5, [jssp], #32
0xffff914175c0  1280  ldp d18, d19, [jssp, #16]
0xffff914175c4  1284  ldp d16, d17, [jssp], #32
0xffff914175c8  1288  ldp d22, d23, [jssp, #16]
0xffff914175cc  1292  ldp d20, d21, [jssp], #32
0xffff914175d0  1296  ldp d26, d27, [jssp, #16]
0xffff914175d4  1300  ldp d24, d25, [jssp], #32
0xffff914175d8  1304  ldp d28, d29, [jssp], #16
0xffff914175dc  1308  ldp x5, x6, [jssp, #16]
0xffff914175e0  1312  ldp x1, x3, [jssp], #32
0xffff914175e4  1316  ldp x9, x10, [jssp, #16]
0xffff914175e8  1320  ldp x7, x8, [jssp], #32
0xffff914175ec  1324  ldp x13, x14, [jssp, #16]
0xffff914175f0  1328  ldp x11, x12, [jssp], #32
0xffff914175f4  1332  ldr lr, [jssp, #16]
0xffff914175f8  1336  ldp x15, x18, [jssp], #24
0xffff914175fc  1340  ldp x4, x0, [jssp], #16
0xffff91417600  1344  ldr x16, pc+544 (addr 0x0000ffff91417820)    ;; external reference (store_buffer_top)
0xffff91417604  1348  ldr x2, [x16]
0xffff91417608  1352  str x3, [x2], #8
0xffff9141760c  1356  str x2, [x16]
0xffff91417610  1360  tst x2, #0x1ffff
0xffff91417614  1364  b.eq #+0x8 (addr 0xffff9141761c)
0xffff91417618  1368  ret
0xffff9141761c  1372  sub csp, jssp, #0x8 (8)
0xffff91417620  1376  str lr, [jssp, #-8]!
0xffff91417624  1380  ldr x17, pc+516 (addr 0x0000ffff91417828)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91417628  1384  blr x17
0xffff9141762c  1388  ldr lr, [jssp], #8
0xffff91417630  1392  ret
0xffff91417634  1396  and x2, x1, #0xfffffffffff00000
0xffff91417638  1400  ldr x0, [x2, #104]
0xffff9141763c  1404  subs x0, x0, #0x1 (1)
0xffff91417640  1408  str x0, [x2, #104]
0xffff91417644  1412  b.mi #+0x84 (addr 0xffff914176c8)
0xffff91417648  1416  ubfx x16, x1, #8, #12
0xffff9141764c  1420  and x2, x1, #0xfffffffffff00000
0xffff91417650  1424  add x2, x2, x16, lsl #2
0xffff91417654  1428  ubfx x0, x1, #3, #5
0xffff91417658  1432  ldr x2, [x2, #360]
0xffff9141765c  1436  lsr x2, x2, x0
0xffff91417660  1440  tbz w2, #0, #+0x8 (addr 0xffff91417668)
0xffff91417664  1444  tbnz w2, #1, #+0xc (addr 0xffff91417670)
0xffff91417668  1448  ldp x4, x0, [jssp], #16
0xffff9141766c  1452  ret
0xffff91417670  1456  ldr x2, [x3]
0xffff91417674  1460  and x0, x2, #0xfffffffffff00000
0xffff91417678  1464  ldr x0, [x0, #8]
0xffff9141767c  1468  tbz w0, #6, #+0x18 (addr 0xffff91417694)
0xffff91417680  1472  and x0, x1, #0xfffffffffff00000
0xffff91417684  1476  ldr x0, [x0, #8]
0xffff91417688  1480  movz x16, #0x58
0xffff9141768c  1484  tst x0, x16
0xffff91417690  1488  b.eq #+0x38 (addr 0xffff914176c8)
0xffff91417694  1492  sub csp, jssp, #0x10 (16)
0xffff91417698  1496  stp x1, x3, [jssp, #-16]!
0xffff9141769c  1500  ubfx x16, x2, #8, #12
0xffff914176a0  1504  and x0, x2, #0xfffffffffff00000
0xffff914176a4  1508  add x0, x0, x16, lsl #2
0xffff914176a8  1512  ubfx x1, x2, #3, #5
0xffff914176ac  1516  ldr x3, [x0, #360]
0xffff914176b0  1520  lsr x3, x3, x1
0xffff914176b4  1524  tbz w3, #0, #+0x10 (addr 0xffff914176c4)
0xffff914176b8  1528  ldp x1, x3, [jssp], #16
0xffff914176bc  1532  ldp x4, x0, [jssp], #16
0xffff914176c0  1536  ret
0xffff914176c4  1540  ldp x1, x3, [jssp], #16
0xffff914176c8  1544  sub csp, jssp, #0x78 (120)
0xffff914176cc  1548  stp x14, x15, [jssp, #-32]!
0xffff914176d0  1552  stp x18, lr, [jssp, #16]
0xffff914176d4  1556  stp x10, x11, [jssp, #-32]!
0xffff914176d8  1560  stp x12, x13, [jssp, #16]
0xffff914176dc  1564  stp x6, x7, [jssp, #-32]!
0xffff914176e0  1568  stp x8, x9, [jssp, #16]
0xffff914176e4  1572  stp x1, x3, [jssp, #-24]!
0xffff914176e8  1576  str x5, [jssp, #16]
0xffff914176ec  1580  sub csp, jssp, #0xb0 (176)
0xffff914176f0  1584  stp d26, d27, [jssp, #-32]!
0xffff914176f4  1588  stp d28, d29, [jssp, #16]
0xffff914176f8  1592  stp d22, d23, [jssp, #-32]!
0xffff914176fc  1596  stp d24, d25, [jssp, #16]
0xffff91417700  1600  stp d18, d19, [jssp, #-32]!
0xffff91417704  1604  stp d20, d21, [jssp, #16]
0xffff91417708  1608  stp d6, d7, [jssp, #-32]!
0xffff9141770c  1612  stp d16, d17, [jssp, #16]
0xffff91417710  1616  stp d2, d3, [jssp, #-32]!
0xffff91417714  1620  stp d4, d5, [jssp, #16]
0xffff91417718  1624  stp d0, d1, [jssp, #-16]!
0xffff9141771c  1628  mov x0, x1
0xffff91417720  1632  mov x1, x3
0xffff91417724  1636  ldr x2, pc+268 (addr 0x0000ffff91417830)    ;; external reference (isolate)
0xffff91417728  1640  ldr x16, pc+272 (addr 0x0000ffff91417838)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9141772c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff91417730  1648  blr x16
0xffff91417734  1652  ldp d2, d3, [jssp, #16]
0xffff91417738  1656  ldp d0, d1, [jssp], #32
0xffff9141773c  1660  ldp d6, d7, [jssp, #16]
0xffff91417740  1664  ldp d4, d5, [jssp], #32
0xffff91417744  1668  ldp d18, d19, [jssp, #16]
0xffff91417748  1672  ldp d16, d17, [jssp], #32
0xffff9141774c  1676  ldp d22, d23, [jssp, #16]
0xffff91417750  1680  ldp d20, d21, [jssp], #32
0xffff91417754  1684  ldp d26, d27, [jssp, #16]
0xffff91417758  1688  ldp d24, d25, [jssp], #32
0xffff9141775c  1692  ldp d28, d29, [jssp], #16
0xffff91417760  1696  ldp x5, x6, [jssp, #16]
0xffff91417764  1700  ldp x1, x3, [jssp], #32
0xffff91417768  1704  ldp x9, x10, [jssp, #16]
0xffff9141776c  1708  ldp x7, x8, [jssp], #32
0xffff91417770  1712  ldp x13, x14, [jssp, #16]
0xffff91417774  1716  ldp x11, x12, [jssp], #32
0xffff91417778  1720  ldr lr, [jssp, #16]
0xffff9141777c  1724  ldp x15, x18, [jssp], #24
0xffff91417780  1728  ldp x4, x0, [jssp], #16
0xffff91417784  1732  ret
0xffff91417788  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9141778c  1740  d63f03e0       constant
0xffff91417790  1744  4117f8c0       constant
0xffff91417794  1748  00000000       constant
0xffff91417798  1752  914065a0       constant
0xffff9141779c  1756  0000ffff       constant
0xffff914177a0  1760  4117f8c0       constant
0xffff914177a4  1764  00000000       constant
0xffff914177a8  1768  914065a0       constant
0xffff914177ac  1772  0000ffff       constant
0xffff914177b0  1776  4117f8c0       constant
0xffff914177b4  1780  00000000       constant
0xffff914177b8  1784  914065a0       constant
0xffff914177bc  1788  0000ffff       constant
0xffff914177c0  1792  4117e2d0       constant
0xffff914177c4  1796  00000000       constant
0xffff914177c8  1800  00c2d958       constant
0xffff914177cc  1804  00000000       constant
0xffff914177d0  1808  4117f8c0       constant
0xffff914177d4  1812  00000000       constant
0xffff914177d8  1816  914065a0       constant
0xffff914177dc  1820  0000ffff       constant
0xffff914177e0  1824  4117e2d0       constant
0xffff914177e4  1828  00000000       constant
0xffff914177e8  1832  00c2d958       constant
0xffff914177ec  1836  00000000       constant
0xffff914177f0  1840  4117f8c0       constant
0xffff914177f4  1844  00000000       constant
0xffff914177f8  1848  914065a0       constant
0xffff914177fc  1852  0000ffff       constant
0xffff91417800  1856  4117f8c0       constant
0xffff91417804  1860  00000000       constant
0xffff91417808  1864  914065a0       constant
0xffff9141780c  1868  0000ffff       constant
0xffff91417810  1872  4117e2d0       constant
0xffff91417814  1876  00000000       constant
0xffff91417818  1880  00c2d958       constant
0xffff9141781c  1884  00000000       constant
0xffff91417820  1888  4117f8c0       constant
0xffff91417824  1892  00000000       constant
0xffff91417828  1896  914065a0       constant
0xffff9141782c  1900  0000ffff       constant
0xffff91417830  1904  4117e2d0       constant
0xffff91417834  1908  00000000       constant
0xffff91417838  1912  00c2d958       constant
0xffff9141783c  1916  00000000       constant


RelocInfo (size = 65)
0xffff914170c8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914170ec  code target (STUB)  (0xffff914065a0)
0xffff91417164  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91417188  code target (STUB)  (0xffff914065a0)
0xffff914171c8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914171ec  code target (STUB)  (0xffff914065a0)
0xffff9141725c  external reference (isolate)  (0x4117e2d0)
0xffff91417260  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff914172bc  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914172e0  code target (STUB)  (0xffff914065a0)
0xffff914173c0  external reference (isolate)  (0x4117e2d0)
0xffff914173c4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91417488  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914174ac  code target (STUB)  (0xffff914065a0)
0xffff9141750c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91417530  code target (STUB)  (0xffff914065a0)
0xffff914175a0  external reference (isolate)  (0x4117e2d0)
0xffff914175a4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91417600  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91417624  code target (STUB)  (0xffff914065a0)
0xffff91417724  external reference (isolate)  (0x4117e2d0)
0xffff91417728  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91417788  constant pool (size 184)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff914178a0     0  sub csp, jssp, #0x10 (16)
0xffff914178a4     4  stp x1, x0, [jssp, #-16]!
0xffff914178a8     8  ldur x9, [x2, #7]
0xffff914178ac    12  ubfx x0, x9, #52, #11
0xffff914178b0    16  cmp x0, #0x453 (1107)
0xffff914178b4    20  csel x9, xzr, x9, ge
0xffff914178b8    24  b.ge #+0x1c (addr 0xffff914178d4)
0xffff914178bc    28  ubfx x1, x9, #0, #52
0xffff914178c0    32  orr x1, x1, #0x10000000000000
0xffff914178c4    36  tst x9, #0x8000000000000000
0xffff914178c8    40  cneg x1, x1, ne
0xffff914178cc    44  sub x0, x0, #0x433 (1075)
0xffff914178d0    48  lsl x9, x1, x0
0xffff914178d4    52  ldp x1, x0, [jssp], #16
0xffff914178d8    56  ret


RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 893)
0xffff91417940     0  ldur x5, [x1, #15]
0xffff91417944     4  ldur x6, [x5, #-1]
0xffff91417948     8  ldr x16, pc+648 (addr 0x0000ffff91417bd0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9141794c    12  cmp x6, x16
0xffff91417950    16  b.ne #+0x2c8 (addr 0xffff91417c18)
0xffff91417954    20  ldur w6, [x5, #11]
0xffff91417958    24  tbnz w2, #0, #+0x140 (addr 0xffff91417a98)
0xffff9141795c    28  asr x8, x2, #32
0xffff91417960    32  cmp w6, w8
0xffff91417964    36  b.le #+0x10 (addr 0xffff91417974)
0xffff91417968    40  cmp w8, w6
0xffff9141796c    44  b.hs #+0x2bc (addr 0xffff91417c28)
0xffff91417970    48  b #+0xe4 (addr 0xffff91417a54)
0xffff91417974    52  cmp w6, w8
0xffff91417978    56  b.gt #+0xdc (addr 0xffff91417a54)
0xffff9141797c    60  adds w7, w6, #0x400 (1024)
0xffff91417980    64  b.vs #+0x2b8 (addr 0xffff91417c38)
0xffff91417984    68  cmp w8, w7
0xffff91417988    72  b.hs #+0x2c0 (addr 0xffff91417c48)
0xffff9141798c    76  tbnz w2, #0, #+0x154 (addr 0xffff91417ae0)
0xffff91417990    80  asr x9, x2, #32
0xffff91417994    84  add w7, w8, w9, lsr #1
0xffff91417998    88  add w7, w7, #0x10 (16)
0xffff9141799c    92  movz w16, #0x95ff
0xffff914179a0    96  cmp w7, w16, lsl #1
0xffff914179a4   100  b.hs #+0x2b4 (addr 0xffff91417c58)
0xffff914179a8   104  lsl x2, x7, #32
0xffff914179ac   108  lsl w3, w7, #3
0xffff914179b0   112  add w3, w3, #0x10 (16)
0xffff914179b4   116  sxtw x3, w3
0xffff914179b8   120  movz x4, #0xf2c0
0xffff914179bc   124  movk x4, #0x4117, lsl #16
0xffff914179c0   128  ldp x9, x16, [x4]
0xffff914179c4   132  adds x7, x9, x3
0xffff914179c8   136  ccmp x7, x16, #nzCv, lo
0xffff914179cc   140  b.hi #+0x194 (addr 0xffff91417b60)
0xffff914179d0   144  str x7, [x4]
0xffff914179d4   148  orr x9, x9, #0x1
0xffff914179d8   152  ldr x3, pc+512 (addr 0x0000ffff91417bd8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914179dc   156  stur x3, [x9, #-1]
0xffff914179e0   160  stur x2, [x9, #7]
0xffff914179e4   164  ldur w2, [x9, #11]
0xffff914179e8   168  cmp w6, w2
0xffff914179ec   172  b.ge #+0x18 (addr 0xffff91417a04)
0xffff914179f0   176  sub w2, w2, #0x1 (1)
0xffff914179f4   180  ldr x3, pc+492 (addr 0x0000ffff91417be0)    ;; object: 0x49b04519 <the hole>
0xffff914179f8   184  add x4, x9, #0xf (15)
0xffff914179fc   188  str x3, [x4, w2, sxtw #3]
0xffff91417a00   192  b #-0x18 (addr 0xffff914179e8)
0xffff91417a04   196  cmp w6, #0x0 (0)
0xffff91417a08   200  b.le #+0x1c (addr 0xffff91417a24)
0xffff91417a0c   204  sub w6, w6, #0x1 (1)
0xffff91417a10   208  add x2, x5, #0xf (15)
0xffff91417a14   212  ldr x3, [x2, w6, sxtw #3]
0xffff91417a18   216  add x2, x9, #0xf (15)
0xffff91417a1c   220  str x3, [x2, w6, sxtw #3]
0xffff91417a20   224  b #-0x1c (addr 0xffff91417a04)
0xffff91417a24   228  mov x2, x9
0xffff91417a28   232  stur x2, [x1, #15]
0xffff91417a2c   236  add x3, x1, #0xf (15)
0xffff91417a30   240  and x2, x1, #0xfffffffffff00000
0xffff91417a34   244  ldr x2, [x2, #8]
0xffff91417a38   248  tbz w2, #2, #+0x18 (addr 0xffff91417a50)
0xffff91417a3c   252  sub csp, jssp, #0x8 (8)
0xffff91417a40   256  str lr, [jssp, #-8]!
0xffff91417a44   260  ldr x16, pc+420 (addr 0x0000ffff91417be8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff91417a48   264  blr x16
0xffff91417a4c   268  ldr lr, [jssp], #8
0xffff91417a50   272  mov x5, x9
0xffff91417a54   276  mov x1, x0
0xffff91417a58   280  add x2, x5, #0xf (15)
0xffff91417a5c   284  str x1, [x2, w8, sxtw #3]
0xffff91417a60   288  add x2, x2, w8, sxtw #3
0xffff91417a64   292  tbz w1, #0, #+0x30 (addr 0xffff91417a94)
0xffff91417a68   296  and x1, x1, #0xfffffffffff00000
0xffff91417a6c   300  ldr x1, [x1, #8]
0xffff91417a70   304  tbz w1, #1, #+0x24 (addr 0xffff91417a94)
0xffff91417a74   308  and x1, x5, #0xfffffffffff00000
0xffff91417a78   312  ldr x1, [x1, #8]
0xffff91417a7c   316  tbz w1, #2, #+0x18 (addr 0xffff91417a94)
0xffff91417a80   320  sub csp, jssp, #0x8 (8)
0xffff91417a84   324  str lr, [jssp, #-8]!
0xffff91417a88   328  ldr x16, pc+360 (addr 0x0000ffff91417bf0)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff91417a8c   332  blr x16
0xffff91417a90   336  ldr lr, [jssp], #8
0xffff91417a94   340  ret
0xffff91417a98   344  sub csp, jssp, #0x10 (16)
0xffff91417a9c   348  stp fp, lr, [jssp, #-16]!
0xffff91417aa0   352  movz fp, #0xa00000000
0xffff91417aa4   356  sub csp, jssp, #0x8 (8)
0xffff91417aa8   360  str fp, [jssp, #-8]!
0xffff91417aac   364  add fp, jssp, #0x8 (8)
0xffff91417ab0   368  ldur x16, [x2, #-1]
0xffff91417ab4   372  ldr x17, [x26, #120]
0xffff91417ab8   376  cmp x16, x17
0xffff91417abc   380  b.ne #+0x1ac (addr 0xffff91417c68)
0xffff91417ac0   384  ldur d29, [x2, #7]
0xffff91417ac4   388  fcvtzs w8, d29
0xffff91417ac8   392  scvtf d0, w8
0xffff91417acc   396  fcmp d29, d0
0xffff91417ad0   400  b.ne #+0x198 (addr 0xffff91417c68)
0xffff91417ad4   404  ldr lr, [jssp, #16]
0xffff91417ad8   408  ldp xzr, fp, [jssp], #24
0xffff91417adc   412  b #-0x17c (addr 0xffff91417960)
0xffff91417ae0   416  sub csp, jssp, #0x10 (16)
0xffff91417ae4   420  stp fp, lr, [jssp, #-16]!
0xffff91417ae8   424  movz fp, #0xa00000000
0xffff91417aec   428  sub csp, jssp, #0x8 (8)
0xffff91417af0   432  str fp, [jssp, #-8]!
0xffff91417af4   436  add fp, jssp, #0x8 (8)
0xffff91417af8   440  ldur x16, [x2, #-1]
0xffff91417afc   444  ldr x17, [x26, #120]
0xffff91417b00   448  cmp x16, x17
0xffff91417b04   452  b.ne #+0x30 (addr 0xffff91417b34)
0xffff91417b08   456  ldur d30, [x2, #7]
0xffff91417b0c   460  fcvtzs x9, d30
0xffff91417b10   464  cmp x9, #0x1 (1)
0xffff91417b14   468  ccmn x9, #1, #nzcV, vc
0xffff91417b18   472  b.vc #+0x18 (addr 0xffff91417b30)
0xffff91417b1c   476  sub csp, jssp, #0x8 (8)
0xffff91417b20   480  str lr, [jssp, #-8]!
0xffff91417b24   484  ldr x16, pc+212 (addr 0x0000ffff91417bf8)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff91417b28   488  blr x16
0xffff91417b2c   492  ldr lr, [jssp], #8
0xffff91417b30   496  b #+0x24 (addr 0xffff91417b54)
0xffff91417b34   500  ldp x9, x7, [x26, #64]
0xffff91417b38   504  cmp x2, x9
0xffff91417b3c   508  cset x9, eq
0xffff91417b40   512  ccmp x2, x7, #nZcv, ne
0xffff91417b44   516  b.eq #+0x10 (addr 0xffff91417b54)
0xffff91417b48   520  ldr x16, [x26, #40]
0xffff91417b4c   524  cmp x2, x16
0xffff91417b50   528  b.ne #+0x120 (addr 0xffff91417c70)
0xffff91417b54   532  ldr lr, [jssp, #16]
0xffff91417b58   536  ldp xzr, fp, [jssp], #24
0xffff91417b5c   540  b #-0x1c8 (addr 0xffff91417994)
0xffff91417b60   544  sub csp, jssp, #0x10 (16)
0xffff91417b64   548  stp fp, lr, [jssp, #-16]!
0xffff91417b68   552  movz fp, #0xa00000000
0xffff91417b6c   556  sub csp, jssp, #0x8 (8)
0xffff91417b70   560  str fp, [jssp, #-8]!
0xffff91417b74   564  add fp, jssp, #0x8 (8)
0xffff91417b78   568  movz x9, #0x0
0xffff91417b7c   572  mov x16, lr
0xffff91417b80   576  ldr x17, pc+128 (addr 0x0000ffff91417c00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91417b84   580  blr x17
0xffff91417b88   584  lsl x0, x3, #32
0xffff91417b8c   588  movz x10, #0x0
0xffff91417b90   592  sub csp, jssp, #0x10 (16)
0xffff91417b94   596  stp x10, x0, [jssp, #-16]!
0xffff91417b98   600  movz x0, #0x2
0xffff91417b9c   604  movz x1, #0x5b88
0xffff91417ba0   608  movk x1, #0xe2, lsl #16
0xffff91417ba4   612  ldr x16, pc+100 (addr 0x0000ffff91417c08)    ;; code: STUB, CEntryStub, minor: 5
0xffff91417ba8   616  blr x16
0xffff91417bac   620  str x0, [jssp, #72]
0xffff91417bb0   624  ldr x16, pc+96 (addr 0x0000ffff91417c10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91417bb4   628  blr x16
0xffff91417bb8   632  ldr lr, [jssp, #16]
0xffff91417bbc   636  ldp xzr, fp, [jssp], #24
0xffff91417bc0   640  b #-0x1e8 (addr 0xffff914179d8)
0xffff91417bc4   644  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff91417bc8   648  d63f03e0       constant
0xffff91417bcc   652  d503201f       constant
0xffff91417bd0   656  36404259       constant
0xffff91417bd4   660  00000000       constant
0xffff91417bd8   664  36404259       constant
0xffff91417bdc   668  00000000       constant
0xffff91417be0   672  49b04519       constant
0xffff91417be4   676  00000000       constant
0xffff91417be8   680  914170c0       constant
0xffff91417bec   684  0000ffff       constant
0xffff91417bf0   688  91416760       constant
0xffff91417bf4   692  0000ffff       constant
0xffff91417bf8   696  914178a0       constant
0xffff91417bfc   700  0000ffff       constant
0xffff91417c00   704  91406820       constant
0xffff91417c04   708  0000ffff       constant
0xffff91417c08   712  91406260       constant
0xffff91417c0c   716  0000ffff       constant
0xffff91417c10   720  914068e0       constant
0xffff91417c14   724  0000ffff       constant
0xffff91417c18   728  movz x16, #0x0
0xffff91417c1c   732  sub csp, jssp, #0x10 (16)
0xffff91417c20   736  stp fp, lr, [jssp, #-16]!
0xffff91417c24   740  bl #+0x54 (addr 0xffff91417c78)
0xffff91417c28   744  movz x16, #0x8
0xffff91417c2c   748  sub csp, jssp, #0x10 (16)
0xffff91417c30   752  stp fp, lr, [jssp, #-16]!
0xffff91417c34   756  bl #+0x44 (addr 0xffff91417c78)
0xffff91417c38   760  movz x16, #0x10
0xffff91417c3c   764  sub csp, jssp, #0x10 (16)
0xffff91417c40   768  stp fp, lr, [jssp, #-16]!
0xffff91417c44   772  bl #+0x34 (addr 0xffff91417c78)
0xffff91417c48   776  movz x16, #0x18
0xffff91417c4c   780  sub csp, jssp, #0x10 (16)
0xffff91417c50   784  stp fp, lr, [jssp, #-16]!
0xffff91417c54   788  bl #+0x24 (addr 0xffff91417c78)
0xffff91417c58   792  movz x16, #0x20
0xffff91417c5c   796  sub csp, jssp, #0x10 (16)
0xffff91417c60   800  stp fp, lr, [jssp, #-16]!
0xffff91417c64   804  bl #+0x14 (addr 0xffff91417c78)
0xffff91417c68   808  movz x16, #0x28
0xffff91417c6c   812  bl #+0x1c (addr 0xffff91417c88)
0xffff91417c70   816  movz x16, #0x30
0xffff91417c74   820  bl #+0x14 (addr 0xffff91417c88)
0xffff91417c78   824  movz x17, #0xa00000000
0xffff91417c7c   828  sub csp, jssp, #0x10 (16)
0xffff91417c80   832  stp x17, cp, [jssp, #-16]!
0xffff91417c84   836  add fp, jssp, #0x10 (16)
0xffff91417c88   840  ldr x17, pc+24 (addr 0x0000ffff91417ca0)    ;; lazy deoptimization bailout 0
0xffff91417c8c   844  add x17, x17, x16
0xffff91417c90   848  br x17
0xffff91417c94   852  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91417c98   856  d63f03e0       constant
0xffff91417c9c   860  d503201f       constant
0xffff91417ca0   864  91206000       constant
0xffff91417ca4   868  0000ffff       constant


Safepoints (size = 21)
0xffff91417bac   620  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff91417948  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914179d8  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914179f4  embedded object  (0x49b04519 <the hole>)
0xffff91417a44  code target (STUB)  (0xffff914170c0)
0xffff91417a88  code target (STUB)  (0xffff91416760)
0xffff91417b24  code target (STUB)  (0xffff914178a0)
0xffff91417b80  code target (STUB)  (0xffff91406820)
0xffff91417ba4  code target (STUB)  (0xffff91406260)
0xffff91417bb0  code target (STUB)  (0xffff914068e0)
0xffff91417bc4  constant pool (size 84)
0xffff91417c88  runtime entry
0xffff91417c94  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 893)
0xffff91417940     0  ldur x5, [x1, #15]
0xffff91417944     4  ldur x6, [x5, #-1]
0xffff91417948     8  ldr x16, pc+648 (addr 0x0000ffff91417bd0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9141794c    12  cmp x6, x16
0xffff91417950    16  b.ne #+0x2c8 (addr 0xffff91417c18)
0xffff91417954    20  ldur w6, [x5, #11]
0xffff91417958    24  tbnz w2, #0, #+0x140 (addr 0xffff91417a98)
0xffff9141795c    28  asr x8, x2, #32
0xffff91417960    32  cmp w6, w8
0xffff91417964    36  b.le #+0x10 (addr 0xffff91417974)
0xffff91417968    40  cmp w8, w6
0xffff9141796c    44  b.hs #+0x2bc (addr 0xffff91417c28)
0xffff91417970    48  b #+0xe4 (addr 0xffff91417a54)
0xffff91417974    52  cmp w6, w8
0xffff91417978    56  b.gt #+0xdc (addr 0xffff91417a54)
0xffff9141797c    60  adds w7, w6, #0x400 (1024)
0xffff91417980    64  b.vs #+0x2b8 (addr 0xffff91417c38)
0xffff91417984    68  cmp w8, w7
0xffff91417988    72  b.hs #+0x2c0 (addr 0xffff91417c48)
0xffff9141798c    76  tbnz w2, #0, #+0x154 (addr 0xffff91417ae0)
0xffff91417990    80  asr x9, x2, #32
0xffff91417994    84  add w7, w8, w9, lsr #1
0xffff91417998    88  add w7, w7, #0x10 (16)
0xffff9141799c    92  movz w16, #0x95ff
0xffff914179a0    96  cmp w7, w16, lsl #1
0xffff914179a4   100  b.hs #+0x2b4 (addr 0xffff91417c58)
0xffff914179a8   104  lsl x2, x7, #32
0xffff914179ac   108  lsl w3, w7, #3
0xffff914179b0   112  add w3, w3, #0x10 (16)
0xffff914179b4   116  sxtw x3, w3
0xffff914179b8   120  movz x4, #0xf2c0
0xffff914179bc   124  movk x4, #0x4117, lsl #16
0xffff914179c0   128  ldp x9, x16, [x4]
0xffff914179c4   132  adds x7, x9, x3
0xffff914179c8   136  ccmp x7, x16, #nzCv, lo
0xffff914179cc   140  b.hi #+0x194 (addr 0xffff91417b60)
0xffff914179d0   144  str x7, [x4]
0xffff914179d4   148  orr x9, x9, #0x1
0xffff914179d8   152  ldr x3, pc+512 (addr 0x0000ffff91417bd8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914179dc   156  stur x3, [x9, #-1]
0xffff914179e0   160  stur x2, [x9, #7]
0xffff914179e4   164  ldur w2, [x9, #11]
0xffff914179e8   168  cmp w6, w2
0xffff914179ec   172  b.ge #+0x18 (addr 0xffff91417a04)
0xffff914179f0   176  sub w2, w2, #0x1 (1)
0xffff914179f4   180  ldr x3, pc+492 (addr 0x0000ffff91417be0)    ;; object: 0x49b04519 <the hole>
0xffff914179f8   184  add x4, x9, #0xf (15)
0xffff914179fc   188  str x3, [x4, w2, sxtw #3]
0xffff91417a00   192  b #-0x18 (addr 0xffff914179e8)
0xffff91417a04   196  cmp w6, #0x0 (0)
0xffff91417a08   200  b.le #+0x1c (addr 0xffff91417a24)
0xffff91417a0c   204  sub w6, w6, #0x1 (1)
0xffff91417a10   208  add x2, x5, #0xf (15)
0xffff91417a14   212  ldr x3, [x2, w6, sxtw #3]
0xffff91417a18   216  add x2, x9, #0xf (15)
0xffff91417a1c   220  str x3, [x2, w6, sxtw #3]
0xffff91417a20   224  b #-0x1c (addr 0xffff91417a04)
0xffff91417a24   228  mov x2, x9
0xffff91417a28   232  stur x2, [x1, #15]
0xffff91417a2c   236  add x3, x1, #0xf (15)
0xffff91417a30   240  and x2, x1, #0xfffffffffff00000
0xffff91417a34   244  ldr x2, [x2, #8]
0xffff91417a38   248  tbz w2, #2, #+0x18 (addr 0xffff91417a50)
0xffff91417a3c   252  sub csp, jssp, #0x8 (8)
0xffff91417a40   256  str lr, [jssp, #-8]!
0xffff91417a44   260  ldr x16, pc+420 (addr 0x0000ffff91417be8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff91417a48   264  blr x16
0xffff91417a4c   268  ldr lr, [jssp], #8
0xffff91417a50   272  mov x5, x9
0xffff91417a54   276  mov x1, x0
0xffff91417a58   280  add x2, x5, #0xf (15)
0xffff91417a5c   284  str x1, [x2, w8, sxtw #3]
0xffff91417a60   288  add x2, x2, w8, sxtw #3
0xffff91417a64   292  tbz w1, #0, #+0x30 (addr 0xffff91417a94)
0xffff91417a68   296  and x1, x1, #0xfffffffffff00000
0xffff91417a6c   300  ldr x1, [x1, #8]
0xffff91417a70   304  tbz w1, #1, #+0x24 (addr 0xffff91417a94)
0xffff91417a74   308  and x1, x5, #0xfffffffffff00000
0xffff91417a78   312  ldr x1, [x1, #8]
0xffff91417a7c   316  tbz w1, #2, #+0x18 (addr 0xffff91417a94)
0xffff91417a80   320  sub csp, jssp, #0x8 (8)
0xffff91417a84   324  str lr, [jssp, #-8]!
0xffff91417a88   328  ldr x16, pc+360 (addr 0x0000ffff91417bf0)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff91417a8c   332  blr x16
0xffff91417a90   336  ldr lr, [jssp], #8
0xffff91417a94   340  ret
0xffff91417a98   344  sub csp, jssp, #0x10 (16)
0xffff91417a9c   348  stp fp, lr, [jssp, #-16]!
0xffff91417aa0   352  movz fp, #0xa00000000
0xffff91417aa4   356  sub csp, jssp, #0x8 (8)
0xffff91417aa8   360  str fp, [jssp, #-8]!
0xffff91417aac   364  add fp, jssp, #0x8 (8)
0xffff91417ab0   368  ldur x16, [x2, #-1]
0xffff91417ab4   372  ldr x17, [x26, #120]
0xffff91417ab8   376  cmp x16, x17
0xffff91417abc   380  b.ne #+0x1ac (addr 0xffff91417c68)
0xffff91417ac0   384  ldur d29, [x2, #7]
0xffff91417ac4   388  fcvtzs w8, d29
0xffff91417ac8   392  scvtf d0, w8
0xffff91417acc   396  fcmp d29, d0
0xffff91417ad0   400  b.ne #+0x198 (addr 0xffff91417c68)
0xffff91417ad4   404  ldr lr, [jssp, #16]
0xffff91417ad8   408  ldp xzr, fp, [jssp], #24
0xffff91417adc   412  b #-0x17c (addr 0xffff91417960)
0xffff91417ae0   416  sub csp, jssp, #0x10 (16)
0xffff91417ae4   420  stp fp, lr, [jssp, #-16]!
0xffff91417ae8   424  movz fp, #0xa00000000
0xffff91417aec   428  sub csp, jssp, #0x8 (8)
0xffff91417af0   432  str fp, [jssp, #-8]!
0xffff91417af4   436  add fp, jssp, #0x8 (8)
0xffff91417af8   440  ldur x16, [x2, #-1]
0xffff91417afc   444  ldr x17, [x26, #120]
0xffff91417b00   448  cmp x16, x17
0xffff91417b04   452  b.ne #+0x30 (addr 0xffff91417b34)
0xffff91417b08   456  ldur d30, [x2, #7]
0xffff91417b0c   460  fcvtzs x9, d30
0xffff91417b10   464  cmp x9, #0x1 (1)
0xffff91417b14   468  ccmn x9, #1, #nzcV, vc
0xffff91417b18   472  b.vc #+0x18 (addr 0xffff91417b30)
0xffff91417b1c   476  sub csp, jssp, #0x8 (8)
0xffff91417b20   480  str lr, [jssp, #-8]!
0xffff91417b24   484  ldr x16, pc+212 (addr 0x0000ffff91417bf8)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff91417b28   488  blr x16
0xffff91417b2c   492  ldr lr, [jssp], #8
0xffff91417b30   496  b #+0x24 (addr 0xffff91417b54)
0xffff91417b34   500  ldp x9, x7, [x26, #64]
0xffff91417b38   504  cmp x2, x9
0xffff91417b3c   508  cset x9, eq
0xffff91417b40   512  ccmp x2, x7, #nZcv, ne
0xffff91417b44   516  b.eq #+0x10 (addr 0xffff91417b54)
0xffff91417b48   520  ldr x16, [x26, #40]
0xffff91417b4c   524  cmp x2, x16
0xffff91417b50   528  b.ne #+0x120 (addr 0xffff91417c70)
0xffff91417b54   532  ldr lr, [jssp, #16]
0xffff91417b58   536  ldp xzr, fp, [jssp], #24
0xffff91417b5c   540  b #-0x1c8 (addr 0xffff91417994)
0xffff91417b60   544  sub csp, jssp, #0x10 (16)
0xffff91417b64   548  stp fp, lr, [jssp, #-16]!
0xffff91417b68   552  movz fp, #0xa00000000
0xffff91417b6c   556  sub csp, jssp, #0x8 (8)
0xffff91417b70   560  str fp, [jssp, #-8]!
0xffff91417b74   564  add fp, jssp, #0x8 (8)
0xffff91417b78   568  movz x9, #0x0
0xffff91417b7c   572  mov x16, lr
0xffff91417b80   576  ldr x17, pc+128 (addr 0x0000ffff91417c00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91417b84   580  blr x17
0xffff91417b88   584  lsl x0, x3, #32
0xffff91417b8c   588  movz x10, #0x0
0xffff91417b90   592  sub csp, jssp, #0x10 (16)
0xffff91417b94   596  stp x10, x0, [jssp, #-16]!
0xffff91417b98   600  movz x0, #0x2
0xffff91417b9c   604  movz x1, #0x5b88
0xffff91417ba0   608  movk x1, #0xe2, lsl #16
0xffff91417ba4   612  ldr x16, pc+100 (addr 0x0000ffff91417c08)    ;; code: STUB, CEntryStub, minor: 5
0xffff91417ba8   616  blr x16
0xffff91417bac   620  str x0, [jssp, #72]
0xffff91417bb0   624  ldr x16, pc+96 (addr 0x0000ffff91417c10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91417bb4   628  blr x16
0xffff91417bb8   632  ldr lr, [jssp, #16]
0xffff91417bbc   636  ldp xzr, fp, [jssp], #24
0xffff91417bc0   640  b #-0x1e8 (addr 0xffff914179d8)
0xffff91417bc4   644  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff91417bc8   648  d63f03e0       constant
0xffff91417bcc   652  d503201f       constant
0xffff91417bd0   656  36404259       constant
0xffff91417bd4   660  00000000       constant
0xffff91417bd8   664  36404259       constant
0xffff91417bdc   668  00000000       constant
0xffff91417be0   672  49b04519       constant
0xffff91417be4   676  00000000       constant
0xffff91417be8   680  914170c0       constant
0xffff91417bec   684  0000ffff       constant
0xffff91417bf0   688  91416760       constant
0xffff91417bf4   692  0000ffff       constant
0xffff91417bf8   696  914178a0       constant
0xffff91417bfc   700  0000ffff       constant
0xffff91417c00   704  91406820       constant
0xffff91417c04   708  0000ffff       constant
0xffff91417c08   712  91406260       constant
0xffff91417c0c   716  0000ffff       constant
0xffff91417c10   720  914068e0       constant
0xffff91417c14   724  0000ffff       constant
0xffff91417c18   728  movz x16, #0x0
0xffff91417c1c   732  sub csp, jssp, #0x10 (16)
0xffff91417c20   736  stp fp, lr, [jssp, #-16]!
0xffff91417c24   740  bl #+0x54 (addr 0xffff91417c78)
0xffff91417c28   744  movz x16, #0x8
0xffff91417c2c   748  sub csp, jssp, #0x10 (16)
0xffff91417c30   752  stp fp, lr, [jssp, #-16]!
0xffff91417c34   756  bl #+0x44 (addr 0xffff91417c78)
0xffff91417c38   760  movz x16, #0x10
0xffff91417c3c   764  sub csp, jssp, #0x10 (16)
0xffff91417c40   768  stp fp, lr, [jssp, #-16]!
0xffff91417c44   772  bl #+0x34 (addr 0xffff91417c78)
0xffff91417c48   776  movz x16, #0x18
0xffff91417c4c   780  sub csp, jssp, #0x10 (16)
0xffff91417c50   784  stp fp, lr, [jssp, #-16]!
0xffff91417c54   788  bl #+0x24 (addr 0xffff91417c78)
0xffff91417c58   792  movz x16, #0x20
0xffff91417c5c   796  sub csp, jssp, #0x10 (16)
0xffff91417c60   800  stp fp, lr, [jssp, #-16]!
0xffff91417c64   804  bl #+0x14 (addr 0xffff91417c78)
0xffff91417c68   808  movz x16, #0x28
0xffff91417c6c   812  bl #+0x1c (addr 0xffff91417c88)
0xffff91417c70   816  movz x16, #0x30
0xffff91417c74   820  bl #+0x14 (addr 0xffff91417c88)
0xffff91417c78   824  movz x17, #0xa00000000
0xffff91417c7c   828  sub csp, jssp, #0x10 (16)
0xffff91417c80   832  stp x17, cp, [jssp, #-16]!
0xffff91417c84   836  add fp, jssp, #0x10 (16)
0xffff91417c88   840  ldr x17, pc+24 (addr 0x0000ffff91417ca0)    ;; lazy deoptimization bailout 0
0xffff91417c8c   844  add x17, x17, x16
0xffff91417c90   848  br x17
0xffff91417c94   852  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91417c98   856  d63f03e0       constant
0xffff91417c9c   860  d503201f       constant
0xffff91417ca0   864  91206000       constant
0xffff91417ca4   868  0000ffff       constant


Safepoints (size = 21)
0xffff91417bac   620  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff91417948  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914179d8  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914179f4  embedded object  (0x49b04519 <the hole>)
0xffff91417a44  code target (STUB)  (0xffff914170c0)
0xffff91417a88  code target (STUB)  (0xffff91416760)
0xffff91417b24  code target (STUB)  (0xffff914178a0)
0xffff91417b80  code target (STUB)  (0xffff91406820)
0xffff91417ba4  code target (STUB)  (0xffff91406260)
0xffff91417bb0  code target (STUB)  (0xffff914068e0)
0xffff91417bc4  constant pool (size 84)
0xffff91417c88  runtime entry
0xffff91417c94  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 240)
0xffff91417d20     0  ldur x5, [x1, #15]
0xffff91417d24     4  ldur x6, [x5, #-1]
0xffff91417d28     8  ldr x16, pc+104 (addr 0x0000ffff91417d90)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91417d2c    12  cmp x6, x16
0xffff91417d30    16  b.ne #+0x68 (addr 0xffff91417d98)
0xffff91417d34    20  ldur w6, [x1, #27]
0xffff91417d38    24  mov x7, x0
0xffff91417d3c    28  tbnz w7, #0, #+0x6c (addr 0xffff91417da8)
0xffff91417d40    32  tbnz w2, #0, #+0x20 (addr 0xffff91417d60)
0xffff91417d44    36  asr x9, x2, #32
0xffff91417d48    40  cmp w9, w6
0xffff91417d4c    44  b.hs #+0x6c (addr 0xffff91417db8)
0xffff91417d50    48  asr x1, x7, #32
0xffff91417d54    52  add x2, x5, w9, sxtw #3
0xffff91417d58    56  stur w1, [x2, #19]
0xffff91417d5c    60  ret
0xffff91417d60    64  ldur x16, [x2, #-1]
0xffff91417d64    68  ldr x17, [x26, #120]
0xffff91417d68    72  cmp x16, x17
0xffff91417d6c    76  b.ne #+0x5c (addr 0xffff91417dc8)
0xffff91417d70    80  ldur d29, [x2, #7]
0xffff91417d74    84  fcvtzs w9, d29
0xffff91417d78    88  scvtf d0, w9
0xffff91417d7c    92  fcmp d29, d0
0xffff91417d80    96  b.ne #+0x48 (addr 0xffff91417dc8)
0xffff91417d84   100  b #-0x3c (addr 0xffff91417d48)
0xffff91417d88   104  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91417d8c   108  d63f03e0       constant
0xffff91417d90   112  36404259       constant
0xffff91417d94   116  00000000       constant
0xffff91417d98   120  movz x16, #0x0
0xffff91417d9c   124  sub csp, jssp, #0x10 (16)
0xffff91417da0   128  stp fp, lr, [jssp, #-16]!
0xffff91417da4   132  bl #+0x34 (addr 0xffff91417dd8)
0xffff91417da8   136  movz x16, #0x8
0xffff91417dac   140  sub csp, jssp, #0x10 (16)
0xffff91417db0   144  stp fp, lr, [jssp, #-16]!
0xffff91417db4   148  bl #+0x24 (addr 0xffff91417dd8)
0xffff91417db8   152  movz x16, #0x10
0xffff91417dbc   156  sub csp, jssp, #0x10 (16)
0xffff91417dc0   160  stp fp, lr, [jssp, #-16]!
0xffff91417dc4   164  bl #+0x14 (addr 0xffff91417dd8)
0xffff91417dc8   168  movz x16, #0x18
0xffff91417dcc   172  sub csp, jssp, #0x10 (16)
0xffff91417dd0   176  stp fp, lr, [jssp, #-16]!
0xffff91417dd4   180  bl #+0x4 (addr 0xffff91417dd8)
0xffff91417dd8   184  movz x17, #0xa00000000
0xffff91417ddc   188  sub csp, jssp, #0x10 (16)
0xffff91417de0   192  stp x17, cp, [jssp, #-16]!
0xffff91417de4   196  add fp, jssp, #0x10 (16)
0xffff91417de8   200  ldr x17, pc+24 (addr 0x0000ffff91417e00)    ;; lazy deoptimization bailout 0
0xffff91417dec   204  add x17, x17, x16
0xffff91417df0   208  br x17
0xffff91417df4   212  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91417df8   216  d63f03e0       constant
0xffff91417dfc   220  d503201f       constant
0xffff91417e00   224  91206000       constant
0xffff91417e04   228  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff91417d28  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91417d88  constant pool (size 16)
0xffff91417de8  runtime entry
0xffff91417df4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 240)
0xffff91417d20     0  ldur x5, [x1, #15]
0xffff91417d24     4  ldur x6, [x5, #-1]
0xffff91417d28     8  ldr x16, pc+104 (addr 0x0000ffff91417d90)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91417d2c    12  cmp x6, x16
0xffff91417d30    16  b.ne #+0x68 (addr 0xffff91417d98)
0xffff91417d34    20  ldur w6, [x1, #27]
0xffff91417d38    24  mov x7, x0
0xffff91417d3c    28  tbnz w7, #0, #+0x6c (addr 0xffff91417da8)
0xffff91417d40    32  tbnz w2, #0, #+0x20 (addr 0xffff91417d60)
0xffff91417d44    36  asr x9, x2, #32
0xffff91417d48    40  cmp w9, w6
0xffff91417d4c    44  b.hs #+0x6c (addr 0xffff91417db8)
0xffff91417d50    48  asr x1, x7, #32
0xffff91417d54    52  add x2, x5, w9, sxtw #3
0xffff91417d58    56  stur w1, [x2, #19]
0xffff91417d5c    60  ret
0xffff91417d60    64  ldur x16, [x2, #-1]
0xffff91417d64    68  ldr x17, [x26, #120]
0xffff91417d68    72  cmp x16, x17
0xffff91417d6c    76  b.ne #+0x5c (addr 0xffff91417dc8)
0xffff91417d70    80  ldur d29, [x2, #7]
0xffff91417d74    84  fcvtzs w9, d29
0xffff91417d78    88  scvtf d0, w9
0xffff91417d7c    92  fcmp d29, d0
0xffff91417d80    96  b.ne #+0x48 (addr 0xffff91417dc8)
0xffff91417d84   100  b #-0x3c (addr 0xffff91417d48)
0xffff91417d88   104  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91417d8c   108  d63f03e0       constant
0xffff91417d90   112  36404259       constant
0xffff91417d94   116  00000000       constant
0xffff91417d98   120  movz x16, #0x0
0xffff91417d9c   124  sub csp, jssp, #0x10 (16)
0xffff91417da0   128  stp fp, lr, [jssp, #-16]!
0xffff91417da4   132  bl #+0x34 (addr 0xffff91417dd8)
0xffff91417da8   136  movz x16, #0x8
0xffff91417dac   140  sub csp, jssp, #0x10 (16)
0xffff91417db0   144  stp fp, lr, [jssp, #-16]!
0xffff91417db4   148  bl #+0x24 (addr 0xffff91417dd8)
0xffff91417db8   152  movz x16, #0x10
0xffff91417dbc   156  sub csp, jssp, #0x10 (16)
0xffff91417dc0   160  stp fp, lr, [jssp, #-16]!
0xffff91417dc4   164  bl #+0x14 (addr 0xffff91417dd8)
0xffff91417dc8   168  movz x16, #0x18
0xffff91417dcc   172  sub csp, jssp, #0x10 (16)
0xffff91417dd0   176  stp fp, lr, [jssp, #-16]!
0xffff91417dd4   180  bl #+0x4 (addr 0xffff91417dd8)
0xffff91417dd8   184  movz x17, #0xa00000000
0xffff91417ddc   188  sub csp, jssp, #0x10 (16)
0xffff91417de0   192  stp x17, cp, [jssp, #-16]!
0xffff91417de4   196  add fp, jssp, #0x10 (16)
0xffff91417de8   200  ldr x17, pc+24 (addr 0x0000ffff91417e00)    ;; lazy deoptimization bailout 0
0xffff91417dec   204  add x17, x17, x16
0xffff91417df0   208  br x17
0xffff91417df4   212  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91417df8   216  d63f03e0       constant
0xffff91417dfc   220  d503201f       constant
0xffff91417e00   224  91206000       constant
0xffff91417e04   228  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff91417d28  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91417d88  constant pool (size 16)
0xffff91417de8  runtime entry
0xffff91417df4  constant pool (size 20)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff91417e80     0  sub csp, jssp, #0x10 (16)
0xffff91417e84     4  stp x1, x0, [jssp, #-16]!
0xffff91417e88     8  ldur x10, [x2, #7]
0xffff91417e8c    12  ubfx x0, x10, #52, #11
0xffff91417e90    16  cmp x0, #0x453 (1107)
0xffff91417e94    20  csel x10, xzr, x10, ge
0xffff91417e98    24  b.ge #+0x1c (addr 0xffff91417eb4)
0xffff91417e9c    28  ubfx x1, x10, #0, #52
0xffff91417ea0    32  orr x1, x1, #0x10000000000000
0xffff91417ea4    36  tst x10, #0x8000000000000000
0xffff91417ea8    40  cneg x1, x1, ne
0xffff91417eac    44  sub x0, x0, #0x433 (1075)
0xffff91417eb0    48  lsl x10, x1, x0
0xffff91417eb4    52  ldp x1, x0, [jssp], #16
0xffff91417eb8    56  ret


RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 885)
0xffff91417f20     0  ldur x5, [x1, #15]
0xffff91417f24     4  ldur x6, [x5, #-1]
0xffff91417f28     8  ldr x16, pc+632 (addr 0x0000ffff914181a0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91417f2c    12  cmp x6, x16
0xffff91417f30    16  b.ne #+0x2b0 (addr 0xffff914181e0)
0xffff91417f34    20  ldur w6, [x1, #27]
0xffff91417f38    24  mov x7, x0
0xffff91417f3c    28  tbnz w7, #0, #+0x2b4 (addr 0xffff914181f0)
0xffff91417f40    32  asr x7, x7, #32
0xffff91417f44    36  tbnz w2, #0, #+0x128 (addr 0xffff9141806c)
0xffff91417f48    40  asr x9, x2, #32
0xffff91417f4c    44  cmp w6, w9
0xffff91417f50    48  b.eq #+0x10 (addr 0xffff91417f60)
0xffff91417f54    52  cmp w9, w6
0xffff91417f58    56  b.hs #+0x2a8 (addr 0xffff91418200)
0xffff91417f5c    60  b #+0x104 (addr 0xffff91418060)
0xffff91417f60    64  ldur w8, [x5, #11]
0xffff91417f64    68  cmp w8, w9
0xffff91417f68    72  b.gt #+0xe0 (addr 0xffff91418048)
0xffff91417f6c    76  adds w8, w8, #0x400 (1024)
0xffff91417f70    80  b.vs #+0x2a0 (addr 0xffff91418210)
0xffff91417f74    84  cmp w9, w8
0xffff91417f78    88  b.hs #+0x2a8 (addr 0xffff91418220)
0xffff91417f7c    92  tbnz w2, #0, #+0x138 (addr 0xffff914180b4)
0xffff91417f80    96  asr x10, x2, #32
0xffff91417f84   100  add w8, w9, w10, lsr #1
0xffff91417f88   104  add w8, w8, #0x10 (16)
0xffff91417f8c   108  movz w16, #0x95ff
0xffff91417f90   112  cmp w8, w16, lsl #1
0xffff91417f94   116  b.hs #+0x29c (addr 0xffff91418230)
0xffff91417f98   120  lsl x2, x8, #32
0xffff91417f9c   124  lsl w3, w8, #3
0xffff91417fa0   128  add w3, w3, #0x10 (16)
0xffff91417fa4   132  sxtw x3, w3
0xffff91417fa8   136  movz x4, #0xf2c0
0xffff91417fac   140  movk x4, #0x4117, lsl #16
0xffff91417fb0   144  ldp x10, x16, [x4]
0xffff91417fb4   148  adds x8, x10, x3
0xffff91417fb8   152  ccmp x8, x16, #nzCv, lo
0xffff91417fbc   156  b.hi #+0x178 (addr 0xffff91418134)
0xffff91417fc0   160  str x8, [x4]
0xffff91417fc4   164  orr x10, x10, #0x1
0xffff91417fc8   168  ldr x3, pc+480 (addr 0x0000ffff914181a8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91417fcc   172  stur x3, [x10, #-1]
0xffff91417fd0   176  stur x2, [x10, #7]
0xffff91417fd4   180  ldur w2, [x10, #11]
0xffff91417fd8   184  cmp w6, w2
0xffff91417fdc   188  b.ge #+0x18 (addr 0xffff91417ff4)
0xffff91417fe0   192  sub w2, w2, #0x1 (1)
0xffff91417fe4   196  ldr x3, pc+460 (addr 0x0000ffff914181b0)    ;; object: 0x49b04519 <the hole>
0xffff91417fe8   200  add x4, x10, #0xf (15)
0xffff91417fec   204  str x3, [x4, w2, sxtw #3]
0xffff91417ff0   208  b #-0x18 (addr 0xffff91417fd8)
0xffff91417ff4   212  cmp w6, #0x0 (0)
0xffff91417ff8   216  b.le #+0x20 (addr 0xffff91418018)
0xffff91417ffc   220  sub w6, w6, #0x1 (1)
0xffff91418000   224  add x2, x5, w6, sxtw #3
0xffff91418004   228  ldur w3, [x2, #19]
0xffff91418008   232  lsl x2, x3, #32
0xffff9141800c   236  add x3, x10, #0xf (15)
0xffff91418010   240  str x2, [x3, w6, sxtw #3]
0xffff91418014   244  b #-0x20 (addr 0xffff91417ff4)
0xffff91418018   248  mov x2, x10
0xffff9141801c   252  stur x2, [x1, #15]
0xffff91418020   256  add x3, x1, #0xf (15)
0xffff91418024   260  and x2, x1, #0xfffffffffff00000
0xffff91418028   264  ldr x2, [x2, #8]
0xffff9141802c   268  tbz w2, #2, #+0x18 (addr 0xffff91418044)
0xffff91418030   272  sub csp, jssp, #0x8 (8)
0xffff91418034   276  str lr, [jssp, #-8]!
0xffff91418038   280  ldr x16, pc+384 (addr 0x0000ffff914181b8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9141803c   284  blr x16
0xffff91418040   288  ldr lr, [jssp], #8
0xffff91418044   292  mov x5, x10
0xffff91418048   296  add w2, w9, #0x1 (1)
0xffff9141804c   300  lsl x2, x2, #32
0xffff91418050   304  stur x2, [x1, #23]
0xffff91418054   308  movz x1, #0x0
0xffff91418058   312  add x2, x5, #0xf (15)
0xffff9141805c   316  str x1, [x2, w9, sxtw #3]
0xffff91418060   320  add x1, x5, w9, sxtw #3
0xffff91418064   324  stur w7, [x1, #19]
0xffff91418068   328  ret
0xffff9141806c   332  sub csp, jssp, #0x10 (16)
0xffff91418070   336  stp fp, lr, [jssp, #-16]!
0xffff91418074   340  movz fp, #0xa00000000
0xffff91418078   344  sub csp, jssp, #0x8 (8)
0xffff9141807c   348  str fp, [jssp, #-8]!
0xffff91418080   352  add fp, jssp, #0x8 (8)
0xffff91418084   356  ldur x16, [x2, #-1]
0xffff91418088   360  ldr x17, [x26, #120]
0xffff9141808c   364  cmp x16, x17
0xffff91418090   368  b.ne #+0x1b0 (addr 0xffff91418240)
0xffff91418094   372  ldur d29, [x2, #7]
0xffff91418098   376  fcvtzs w9, d29
0xffff9141809c   380  scvtf d0, w9
0xffff914180a0   384  fcmp d29, d0
0xffff914180a4   388  b.ne #+0x19c (addr 0xffff91418240)
0xffff914180a8   392  ldr lr, [jssp, #16]
0xffff914180ac   396  ldp xzr, fp, [jssp], #24
0xffff914180b0   400  b #-0x164 (addr 0xffff91417f4c)
0xffff914180b4   404  sub csp, jssp, #0x10 (16)
0xffff914180b8   408  stp fp, lr, [jssp, #-16]!
0xffff914180bc   412  movz fp, #0xa00000000
0xffff914180c0   416  sub csp, jssp, #0x8 (8)
0xffff914180c4   420  str fp, [jssp, #-8]!
0xffff914180c8   424  add fp, jssp, #0x8 (8)
0xffff914180cc   428  ldur x16, [x2, #-1]
0xffff914180d0   432  ldr x17, [x26, #120]
0xffff914180d4   436  cmp x16, x17
0xffff914180d8   440  b.ne #+0x30 (addr 0xffff91418108)
0xffff914180dc   444  ldur d30, [x2, #7]
0xffff914180e0   448  fcvtzs x10, d30
0xffff914180e4   452  cmp x10, #0x1 (1)
0xffff914180e8   456  ccmn x10, #1, #nzcV, vc
0xffff914180ec   460  b.vc #+0x18 (addr 0xffff91418104)
0xffff914180f0   464  sub csp, jssp, #0x8 (8)
0xffff914180f4   468  str lr, [jssp, #-8]!
0xffff914180f8   472  ldr x16, pc+200 (addr 0x0000ffff914181c0)    ;; code: STUB, DoubleToIStub, minor: 127618
0xffff914180fc   476  blr x16
0xffff91418100   480  ldr lr, [jssp], #8
0xffff91418104   484  b #+0x24 (addr 0xffff91418128)
0xffff91418108   488  ldp x10, x8, [x26, #64]
0xffff9141810c   492  cmp x2, x10
0xffff91418110   496  cset x10, eq
0xffff91418114   500  ccmp x2, x8, #nZcv, ne
0xffff91418118   504  b.eq #+0x10 (addr 0xffff91418128)
0xffff9141811c   508  ldr x16, [x26, #40]
0xffff91418120   512  cmp x2, x16
0xffff91418124   516  b.ne #+0x124 (addr 0xffff91418248)
0xffff91418128   520  ldr lr, [jssp, #16]
0xffff9141812c   524  ldp xzr, fp, [jssp], #24
0xffff91418130   528  b #-0x1ac (addr 0xffff91417f84)
0xffff91418134   532  sub csp, jssp, #0x10 (16)
0xffff91418138   536  stp fp, lr, [jssp, #-16]!
0xffff9141813c   540  movz fp, #0xa00000000
0xffff91418140   544  sub csp, jssp, #0x8 (8)
0xffff91418144   548  str fp, [jssp, #-8]!
0xffff91418148   552  add fp, jssp, #0x8 (8)
0xffff9141814c   556  movz x10, #0x0
0xffff91418150   560  mov x16, lr
0xffff91418154   564  ldr x17, pc+116 (addr 0x0000ffff914181c8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91418158   568  blr x17
0xffff9141815c   572  lsl x0, x3, #32
0xffff91418160   576  movz x10, #0x0
0xffff91418164   580  sub csp, jssp, #0x10 (16)
0xffff91418168   584  stp x10, x0, [jssp, #-16]!
0xffff9141816c   588  movz x0, #0x2
0xffff91418170   592  movz x1, #0x5b88
0xffff91418174   596  movk x1, #0xe2, lsl #16
0xffff91418178   600  ldr x16, pc+88 (addr 0x0000ffff914181d0)    ;; code: STUB, CEntryStub, minor: 5
0xffff9141817c   604  blr x16
0xffff91418180   608  str x0, [jssp, #80]
0xffff91418184   612  ldr x16, pc+84 (addr 0x0000ffff914181d8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91418188   616  blr x16
0xffff9141818c   620  ldr lr, [jssp, #16]
0xffff91418190   624  ldp xzr, fp, [jssp], #24
0xffff91418194   628  b #-0x1cc (addr 0xffff91417fc8)
0xffff91418198   632  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff9141819c   636  d63f03e0       constant
0xffff914181a0   640  36404259       constant
0xffff914181a4   644  00000000       constant
0xffff914181a8   648  36404259       constant
0xffff914181ac   652  00000000       constant
0xffff914181b0   656  49b04519       constant
0xffff914181b4   660  00000000       constant
0xffff914181b8   664  914170c0       constant
0xffff914181bc   668  0000ffff       constant
0xffff914181c0   672  91417e80       constant
0xffff914181c4   676  0000ffff       constant
0xffff914181c8   680  91406820       constant
0xffff914181cc   684  0000ffff       constant
0xffff914181d0   688  91406260       constant
0xffff914181d4   692  0000ffff       constant
0xffff914181d8   696  914068e0       constant
0xffff914181dc   700  0000ffff       constant
0xffff914181e0   704  movz x16, #0x0
0xffff914181e4   708  sub csp, jssp, #0x10 (16)
0xffff914181e8   712  stp fp, lr, [jssp, #-16]!
0xffff914181ec   716  bl #+0x64 (addr 0xffff91418250)
0xffff914181f0   720  movz x16, #0x8
0xffff914181f4   724  sub csp, jssp, #0x10 (16)
0xffff914181f8   728  stp fp, lr, [jssp, #-16]!
0xffff914181fc   732  bl #+0x54 (addr 0xffff91418250)
0xffff91418200   736  movz x16, #0x10
0xffff91418204   740  sub csp, jssp, #0x10 (16)
0xffff91418208   744  stp fp, lr, [jssp, #-16]!
0xffff9141820c   748  bl #+0x44 (addr 0xffff91418250)
0xffff91418210   752  movz x16, #0x18
0xffff91418214   756  sub csp, jssp, #0x10 (16)
0xffff91418218   760  stp fp, lr, [jssp, #-16]!
0xffff9141821c   764  bl #+0x34 (addr 0xffff91418250)
0xffff91418220   768  movz x16, #0x20
0xffff91418224   772  sub csp, jssp, #0x10 (16)
0xffff91418228   776  stp fp, lr, [jssp, #-16]!
0xffff9141822c   780  bl #+0x24 (addr 0xffff91418250)
0xffff91418230   784  movz x16, #0x28
0xffff91418234   788  sub csp, jssp, #0x10 (16)
0xffff91418238   792  stp fp, lr, [jssp, #-16]!
0xffff9141823c   796  bl #+0x14 (addr 0xffff91418250)
0xffff91418240   800  movz x16, #0x30
0xffff91418244   804  bl #+0x1c (addr 0xffff91418260)
0xffff91418248   808  movz x16, #0x38
0xffff9141824c   812  bl #+0x14 (addr 0xffff91418260)
0xffff91418250   816  movz x17, #0xa00000000
0xffff91418254   820  sub csp, jssp, #0x10 (16)
0xffff91418258   824  stp x17, cp, [jssp, #-16]!
0xffff9141825c   828  add fp, jssp, #0x10 (16)
0xffff91418260   832  ldr x17, pc+24 (addr 0x0000ffff91418278)    ;; lazy deoptimization bailout 0
0xffff91418264   836  add x17, x17, x16
0xffff91418268   840  br x17
0xffff9141826c   844  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91418270   848  d63f03e0       constant
0xffff91418274   852  d503201f       constant
0xffff91418278   856  91206000       constant
0xffff9141827c   860  0000ffff       constant


Safepoints (size = 21)
0xffff91418180   608  000 | x0 | x1 | x5 | x10 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 32)
0xffff91417f28  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91417fc8  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91417fe4  embedded object  (0x49b04519 <the hole>)
0xffff91418038  code target (STUB)  (0xffff914170c0)
0xffff914180f8  code target (STUB)  (0xffff91417e80)
0xffff91418154  code target (STUB)  (0xffff91406820)
0xffff91418178  code target (STUB)  (0xffff91406260)
0xffff91418184  code target (STUB)  (0xffff914068e0)
0xffff91418198  constant pool (size 72)
0xffff91418260  runtime entry
0xffff9141826c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 885)
0xffff91417f20     0  ldur x5, [x1, #15]
0xffff91417f24     4  ldur x6, [x5, #-1]
0xffff91417f28     8  ldr x16, pc+632 (addr 0x0000ffff914181a0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91417f2c    12  cmp x6, x16
0xffff91417f30    16  b.ne #+0x2b0 (addr 0xffff914181e0)
0xffff91417f34    20  ldur w6, [x1, #27]
0xffff91417f38    24  mov x7, x0
0xffff91417f3c    28  tbnz w7, #0, #+0x2b4 (addr 0xffff914181f0)
0xffff91417f40    32  asr x7, x7, #32
0xffff91417f44    36  tbnz w2, #0, #+0x128 (addr 0xffff9141806c)
0xffff91417f48    40  asr x9, x2, #32
0xffff91417f4c    44  cmp w6, w9
0xffff91417f50    48  b.eq #+0x10 (addr 0xffff91417f60)
0xffff91417f54    52  cmp w9, w6
0xffff91417f58    56  b.hs #+0x2a8 (addr 0xffff91418200)
0xffff91417f5c    60  b #+0x104 (addr 0xffff91418060)
0xffff91417f60    64  ldur w8, [x5, #11]
0xffff91417f64    68  cmp w8, w9
0xffff91417f68    72  b.gt #+0xe0 (addr 0xffff91418048)
0xffff91417f6c    76  adds w8, w8, #0x400 (1024)
0xffff91417f70    80  b.vs #+0x2a0 (addr 0xffff91418210)
0xffff91417f74    84  cmp w9, w8
0xffff91417f78    88  b.hs #+0x2a8 (addr 0xffff91418220)
0xffff91417f7c    92  tbnz w2, #0, #+0x138 (addr 0xffff914180b4)
0xffff91417f80    96  asr x10, x2, #32
0xffff91417f84   100  add w8, w9, w10, lsr #1
0xffff91417f88   104  add w8, w8, #0x10 (16)
0xffff91417f8c   108  movz w16, #0x95ff
0xffff91417f90   112  cmp w8, w16, lsl #1
0xffff91417f94   116  b.hs #+0x29c (addr 0xffff91418230)
0xffff91417f98   120  lsl x2, x8, #32
0xffff91417f9c   124  lsl w3, w8, #3
0xffff91417fa0   128  add w3, w3, #0x10 (16)
0xffff91417fa4   132  sxtw x3, w3
0xffff91417fa8   136  movz x4, #0xf2c0
0xffff91417fac   140  movk x4, #0x4117, lsl #16
0xffff91417fb0   144  ldp x10, x16, [x4]
0xffff91417fb4   148  adds x8, x10, x3
0xffff91417fb8   152  ccmp x8, x16, #nzCv, lo
0xffff91417fbc   156  b.hi #+0x178 (addr 0xffff91418134)
0xffff91417fc0   160  str x8, [x4]
0xffff91417fc4   164  orr x10, x10, #0x1
0xffff91417fc8   168  ldr x3, pc+480 (addr 0x0000ffff914181a8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91417fcc   172  stur x3, [x10, #-1]
0xffff91417fd0   176  stur x2, [x10, #7]
0xffff91417fd4   180  ldur w2, [x10, #11]
0xffff91417fd8   184  cmp w6, w2
0xffff91417fdc   188  b.ge #+0x18 (addr 0xffff91417ff4)
0xffff91417fe0   192  sub w2, w2, #0x1 (1)
0xffff91417fe4   196  ldr x3, pc+460 (addr 0x0000ffff914181b0)    ;; object: 0x49b04519 <the hole>
0xffff91417fe8   200  add x4, x10, #0xf (15)
0xffff91417fec   204  str x3, [x4, w2, sxtw #3]
0xffff91417ff0   208  b #-0x18 (addr 0xffff91417fd8)
0xffff91417ff4   212  cmp w6, #0x0 (0)
0xffff91417ff8   216  b.le #+0x20 (addr 0xffff91418018)
0xffff91417ffc   220  sub w6, w6, #0x1 (1)
0xffff91418000   224  add x2, x5, w6, sxtw #3
0xffff91418004   228  ldur w3, [x2, #19]
0xffff91418008   232  lsl x2, x3, #32
0xffff9141800c   236  add x3, x10, #0xf (15)
0xffff91418010   240  str x2, [x3, w6, sxtw #3]
0xffff91418014   244  b #-0x20 (addr 0xffff91417ff4)
0xffff91418018   248  mov x2, x10
0xffff9141801c   252  stur x2, [x1, #15]
0xffff91418020   256  add x3, x1, #0xf (15)
0xffff91418024   260  and x2, x1, #0xfffffffffff00000
0xffff91418028   264  ldr x2, [x2, #8]
0xffff9141802c   268  tbz w2, #2, #+0x18 (addr 0xffff91418044)
0xffff91418030   272  sub csp, jssp, #0x8 (8)
0xffff91418034   276  str lr, [jssp, #-8]!
0xffff91418038   280  ldr x16, pc+384 (addr 0x0000ffff914181b8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9141803c   284  blr x16
0xffff91418040   288  ldr lr, [jssp], #8
0xffff91418044   292  mov x5, x10
0xffff91418048   296  add w2, w9, #0x1 (1)
0xffff9141804c   300  lsl x2, x2, #32
0xffff91418050   304  stur x2, [x1, #23]
0xffff91418054   308  movz x1, #0x0
0xffff91418058   312  add x2, x5, #0xf (15)
0xffff9141805c   316  str x1, [x2, w9, sxtw #3]
0xffff91418060   320  add x1, x5, w9, sxtw #3
0xffff91418064   324  stur w7, [x1, #19]
0xffff91418068   328  ret
0xffff9141806c   332  sub csp, jssp, #0x10 (16)
0xffff91418070   336  stp fp, lr, [jssp, #-16]!
0xffff91418074   340  movz fp, #0xa00000000
0xffff91418078   344  sub csp, jssp, #0x8 (8)
0xffff9141807c   348  str fp, [jssp, #-8]!
0xffff91418080   352  add fp, jssp, #0x8 (8)
0xffff91418084   356  ldur x16, [x2, #-1]
0xffff91418088   360  ldr x17, [x26, #120]
0xffff9141808c   364  cmp x16, x17
0xffff91418090   368  b.ne #+0x1b0 (addr 0xffff91418240)
0xffff91418094   372  ldur d29, [x2, #7]
0xffff91418098   376  fcvtzs w9, d29
0xffff9141809c   380  scvtf d0, w9
0xffff914180a0   384  fcmp d29, d0
0xffff914180a4   388  b.ne #+0x19c (addr 0xffff91418240)
0xffff914180a8   392  ldr lr, [jssp, #16]
0xffff914180ac   396  ldp xzr, fp, [jssp], #24
0xffff914180b0   400  b #-0x164 (addr 0xffff91417f4c)
0xffff914180b4   404  sub csp, jssp, #0x10 (16)
0xffff914180b8   408  stp fp, lr, [jssp, #-16]!
0xffff914180bc   412  movz fp, #0xa00000000
0xffff914180c0   416  sub csp, jssp, #0x8 (8)
0xffff914180c4   420  str fp, [jssp, #-8]!
0xffff914180c8   424  add fp, jssp, #0x8 (8)
0xffff914180cc   428  ldur x16, [x2, #-1]
0xffff914180d0   432  ldr x17, [x26, #120]
0xffff914180d4   436  cmp x16, x17
0xffff914180d8   440  b.ne #+0x30 (addr 0xffff91418108)
0xffff914180dc   444  ldur d30, [x2, #7]
0xffff914180e0   448  fcvtzs x10, d30
0xffff914180e4   452  cmp x10, #0x1 (1)
0xffff914180e8   456  ccmn x10, #1, #nzcV, vc
0xffff914180ec   460  b.vc #+0x18 (addr 0xffff91418104)
0xffff914180f0   464  sub csp, jssp, #0x8 (8)
0xffff914180f4   468  str lr, [jssp, #-8]!
0xffff914180f8   472  ldr x16, pc+200 (addr 0x0000ffff914181c0)    ;; code: STUB, DoubleToIStub, minor: 127618
0xffff914180fc   476  blr x16
0xffff91418100   480  ldr lr, [jssp], #8
0xffff91418104   484  b #+0x24 (addr 0xffff91418128)
0xffff91418108   488  ldp x10, x8, [x26, #64]
0xffff9141810c   492  cmp x2, x10
0xffff91418110   496  cset x10, eq
0xffff91418114   500  ccmp x2, x8, #nZcv, ne
0xffff91418118   504  b.eq #+0x10 (addr 0xffff91418128)
0xffff9141811c   508  ldr x16, [x26, #40]
0xffff91418120   512  cmp x2, x16
0xffff91418124   516  b.ne #+0x124 (addr 0xffff91418248)
0xffff91418128   520  ldr lr, [jssp, #16]
0xffff9141812c   524  ldp xzr, fp, [jssp], #24
0xffff91418130   528  b #-0x1ac (addr 0xffff91417f84)
0xffff91418134   532  sub csp, jssp, #0x10 (16)
0xffff91418138   536  stp fp, lr, [jssp, #-16]!
0xffff9141813c   540  movz fp, #0xa00000000
0xffff91418140   544  sub csp, jssp, #0x8 (8)
0xffff91418144   548  str fp, [jssp, #-8]!
0xffff91418148   552  add fp, jssp, #0x8 (8)
0xffff9141814c   556  movz x10, #0x0
0xffff91418150   560  mov x16, lr
0xffff91418154   564  ldr x17, pc+116 (addr 0x0000ffff914181c8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91418158   568  blr x17
0xffff9141815c   572  lsl x0, x3, #32
0xffff91418160   576  movz x10, #0x0
0xffff91418164   580  sub csp, jssp, #0x10 (16)
0xffff91418168   584  stp x10, x0, [jssp, #-16]!
0xffff9141816c   588  movz x0, #0x2
0xffff91418170   592  movz x1, #0x5b88
0xffff91418174   596  movk x1, #0xe2, lsl #16
0xffff91418178   600  ldr x16, pc+88 (addr 0x0000ffff914181d0)    ;; code: STUB, CEntryStub, minor: 5
0xffff9141817c   604  blr x16
0xffff91418180   608  str x0, [jssp, #80]
0xffff91418184   612  ldr x16, pc+84 (addr 0x0000ffff914181d8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91418188   616  blr x16
0xffff9141818c   620  ldr lr, [jssp, #16]
0xffff91418190   624  ldp xzr, fp, [jssp], #24
0xffff91418194   628  b #-0x1cc (addr 0xffff91417fc8)
0xffff91418198   632  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff9141819c   636  d63f03e0       constant
0xffff914181a0   640  36404259       constant
0xffff914181a4   644  00000000       constant
0xffff914181a8   648  36404259       constant
0xffff914181ac   652  00000000       constant
0xffff914181b0   656  49b04519       constant
0xffff914181b4   660  00000000       constant
0xffff914181b8   664  914170c0       constant
0xffff914181bc   668  0000ffff       constant
0xffff914181c0   672  91417e80       constant
0xffff914181c4   676  0000ffff       constant
0xffff914181c8   680  91406820       constant
0xffff914181cc   684  0000ffff       constant
0xffff914181d0   688  91406260       constant
0xffff914181d4   692  0000ffff       constant
0xffff914181d8   696  914068e0       constant
0xffff914181dc   700  0000ffff       constant
0xffff914181e0   704  movz x16, #0x0
0xffff914181e4   708  sub csp, jssp, #0x10 (16)
0xffff914181e8   712  stp fp, lr, [jssp, #-16]!
0xffff914181ec   716  bl #+0x64 (addr 0xffff91418250)
0xffff914181f0   720  movz x16, #0x8
0xffff914181f4   724  sub csp, jssp, #0x10 (16)
0xffff914181f8   728  stp fp, lr, [jssp, #-16]!
0xffff914181fc   732  bl #+0x54 (addr 0xffff91418250)
0xffff91418200   736  movz x16, #0x10
0xffff91418204   740  sub csp, jssp, #0x10 (16)
0xffff91418208   744  stp fp, lr, [jssp, #-16]!
0xffff9141820c   748  bl #+0x44 (addr 0xffff91418250)
0xffff91418210   752  movz x16, #0x18
0xffff91418214   756  sub csp, jssp, #0x10 (16)
0xffff91418218   760  stp fp, lr, [jssp, #-16]!
0xffff9141821c   764  bl #+0x34 (addr 0xffff91418250)
0xffff91418220   768  movz x16, #0x20
0xffff91418224   772  sub csp, jssp, #0x10 (16)
0xffff91418228   776  stp fp, lr, [jssp, #-16]!
0xffff9141822c   780  bl #+0x24 (addr 0xffff91418250)
0xffff91418230   784  movz x16, #0x28
0xffff91418234   788  sub csp, jssp, #0x10 (16)
0xffff91418238   792  stp fp, lr, [jssp, #-16]!
0xffff9141823c   796  bl #+0x14 (addr 0xffff91418250)
0xffff91418240   800  movz x16, #0x30
0xffff91418244   804  bl #+0x1c (addr 0xffff91418260)
0xffff91418248   808  movz x16, #0x38
0xffff9141824c   812  bl #+0x14 (addr 0xffff91418260)
0xffff91418250   816  movz x17, #0xa00000000
0xffff91418254   820  sub csp, jssp, #0x10 (16)
0xffff91418258   824  stp x17, cp, [jssp, #-16]!
0xffff9141825c   828  add fp, jssp, #0x10 (16)
0xffff91418260   832  ldr x17, pc+24 (addr 0x0000ffff91418278)    ;; lazy deoptimization bailout 0
0xffff91418264   836  add x17, x17, x16
0xffff91418268   840  br x17
0xffff9141826c   844  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91418270   848  d63f03e0       constant
0xffff91418274   852  d503201f       constant
0xffff91418278   856  91206000       constant
0xffff9141827c   860  0000ffff       constant


Safepoints (size = 21)
0xffff91418180   608  000 | x0 | x1 | x5 | x10 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 32)
0xffff91417f28  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91417fc8  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91417fe4  embedded object  (0x49b04519 <the hole>)
0xffff91418038  code target (STUB)  (0xffff914170c0)
0xffff914180f8  code target (STUB)  (0xffff91417e80)
0xffff91418154  code target (STUB)  (0xffff91406820)
0xffff91418178  code target (STUB)  (0xffff91406260)
0xffff91418184  code target (STUB)  (0xffff914068e0)
0xffff91418198  constant pool (size 72)
0xffff91418260  runtime entry
0xffff9141826c  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 240)
0xffff91418300     0  ldur x5, [x1, #15]
0xffff91418304     4  ldur x6, [x5, #-1]
0xffff91418308     8  ldr x16, pc+104 (addr 0x0000ffff91418370)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9141830c    12  cmp x6, x16
0xffff91418310    16  b.ne #+0x68 (addr 0xffff91418378)
0xffff91418314    20  ldur w6, [x1, #27]
0xffff91418318    24  mov x7, x0
0xffff9141831c    28  tbnz w7, #0, #+0x6c (addr 0xffff91418388)
0xffff91418320    32  tbnz w2, #0, #+0x1c (addr 0xffff9141833c)
0xffff91418324    36  asr x9, x2, #32
0xffff91418328    40  cmp w9, w6
0xffff9141832c    44  b.hs #+0x6c (addr 0xffff91418398)
0xffff91418330    48  add x1, x5, #0xf (15)
0xffff91418334    52  str x7, [x1, w9, sxtw #3]
0xffff91418338    56  ret
0xffff9141833c    60  ldur x16, [x2, #-1]
0xffff91418340    64  ldr x17, [x26, #120]
0xffff91418344    68  cmp x16, x17
0xffff91418348    72  b.ne #+0x60 (addr 0xffff914183a8)
0xffff9141834c    76  ldur d29, [x2, #7]
0xffff91418350    80  fcvtzs w9, d29
0xffff91418354    84  scvtf d0, w9
0xffff91418358    88  fcmp d29, d0
0xffff9141835c    92  b.ne #+0x4c (addr 0xffff914183a8)
0xffff91418360    96  b #-0x38 (addr 0xffff91418328)
0xffff91418364   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91418368   104  d63f03e0       constant
0xffff9141836c   108  d503201f       constant
0xffff91418370   112  36404259       constant
0xffff91418374   116  00000000       constant
0xffff91418378   120  movz x16, #0x0
0xffff9141837c   124  sub csp, jssp, #0x10 (16)
0xffff91418380   128  stp fp, lr, [jssp, #-16]!
0xffff91418384   132  bl #+0x34 (addr 0xffff914183b8)
0xffff91418388   136  movz x16, #0x8
0xffff9141838c   140  sub csp, jssp, #0x10 (16)
0xffff91418390   144  stp fp, lr, [jssp, #-16]!
0xffff91418394   148  bl #+0x24 (addr 0xffff914183b8)
0xffff91418398   152  movz x16, #0x10
0xffff9141839c   156  sub csp, jssp, #0x10 (16)
0xffff914183a0   160  stp fp, lr, [jssp, #-16]!
0xffff914183a4   164  bl #+0x14 (addr 0xffff914183b8)
0xffff914183a8   168  movz x16, #0x18
0xffff914183ac   172  sub csp, jssp, #0x10 (16)
0xffff914183b0   176  stp fp, lr, [jssp, #-16]!
0xffff914183b4   180  bl #+0x4 (addr 0xffff914183b8)
0xffff914183b8   184  movz x17, #0xa00000000
0xffff914183bc   188  sub csp, jssp, #0x10 (16)
0xffff914183c0   192  stp x17, cp, [jssp, #-16]!
0xffff914183c4   196  add fp, jssp, #0x10 (16)
0xffff914183c8   200  ldr x17, pc+24 (addr 0x0000ffff914183e0)    ;; lazy deoptimization bailout 0
0xffff914183cc   204  add x17, x17, x16
0xffff914183d0   208  br x17
0xffff914183d4   212  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914183d8   216  d63f03e0       constant
0xffff914183dc   220  d503201f       constant
0xffff914183e0   224  91206000       constant
0xffff914183e4   228  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff91418308  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418364  constant pool (size 20)
0xffff914183c8  runtime entry
0xffff914183d4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 240)
0xffff91418300     0  ldur x5, [x1, #15]
0xffff91418304     4  ldur x6, [x5, #-1]
0xffff91418308     8  ldr x16, pc+104 (addr 0x0000ffff91418370)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9141830c    12  cmp x6, x16
0xffff91418310    16  b.ne #+0x68 (addr 0xffff91418378)
0xffff91418314    20  ldur w6, [x1, #27]
0xffff91418318    24  mov x7, x0
0xffff9141831c    28  tbnz w7, #0, #+0x6c (addr 0xffff91418388)
0xffff91418320    32  tbnz w2, #0, #+0x1c (addr 0xffff9141833c)
0xffff91418324    36  asr x9, x2, #32
0xffff91418328    40  cmp w9, w6
0xffff9141832c    44  b.hs #+0x6c (addr 0xffff91418398)
0xffff91418330    48  add x1, x5, #0xf (15)
0xffff91418334    52  str x7, [x1, w9, sxtw #3]
0xffff91418338    56  ret
0xffff9141833c    60  ldur x16, [x2, #-1]
0xffff91418340    64  ldr x17, [x26, #120]
0xffff91418344    68  cmp x16, x17
0xffff91418348    72  b.ne #+0x60 (addr 0xffff914183a8)
0xffff9141834c    76  ldur d29, [x2, #7]
0xffff91418350    80  fcvtzs w9, d29
0xffff91418354    84  scvtf d0, w9
0xffff91418358    88  fcmp d29, d0
0xffff9141835c    92  b.ne #+0x4c (addr 0xffff914183a8)
0xffff91418360    96  b #-0x38 (addr 0xffff91418328)
0xffff91418364   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91418368   104  d63f03e0       constant
0xffff9141836c   108  d503201f       constant
0xffff91418370   112  36404259       constant
0xffff91418374   116  00000000       constant
0xffff91418378   120  movz x16, #0x0
0xffff9141837c   124  sub csp, jssp, #0x10 (16)
0xffff91418380   128  stp fp, lr, [jssp, #-16]!
0xffff91418384   132  bl #+0x34 (addr 0xffff914183b8)
0xffff91418388   136  movz x16, #0x8
0xffff9141838c   140  sub csp, jssp, #0x10 (16)
0xffff91418390   144  stp fp, lr, [jssp, #-16]!
0xffff91418394   148  bl #+0x24 (addr 0xffff914183b8)
0xffff91418398   152  movz x16, #0x10
0xffff9141839c   156  sub csp, jssp, #0x10 (16)
0xffff914183a0   160  stp fp, lr, [jssp, #-16]!
0xffff914183a4   164  bl #+0x14 (addr 0xffff914183b8)
0xffff914183a8   168  movz x16, #0x18
0xffff914183ac   172  sub csp, jssp, #0x10 (16)
0xffff914183b0   176  stp fp, lr, [jssp, #-16]!
0xffff914183b4   180  bl #+0x4 (addr 0xffff914183b8)
0xffff914183b8   184  movz x17, #0xa00000000
0xffff914183bc   188  sub csp, jssp, #0x10 (16)
0xffff914183c0   192  stp x17, cp, [jssp, #-16]!
0xffff914183c4   196  add fp, jssp, #0x10 (16)
0xffff914183c8   200  ldr x17, pc+24 (addr 0x0000ffff914183e0)    ;; lazy deoptimization bailout 0
0xffff914183cc   204  add x17, x17, x16
0xffff914183d0   208  br x17
0xffff914183d4   212  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914183d8   216  d63f03e0       constant
0xffff914183dc   220  d503201f       constant
0xffff914183e0   224  91206000       constant
0xffff914183e4   228  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff91418308  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418364  constant pool (size 20)
0xffff914183c8  runtime entry
0xffff914183d4  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 869)
0xffff91418460     0  ldur x5, [x1, #15]
0xffff91418464     4  ldur x6, [x5, #-1]
0xffff91418468     8  ldr x16, pc+616 (addr 0x0000ffff914186d0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9141846c    12  cmp x6, x16
0xffff91418470    16  b.ne #+0x2a0 (addr 0xffff91418710)
0xffff91418474    20  ldur w6, [x1, #27]
0xffff91418478    24  mov x7, x0
0xffff9141847c    28  tbnz w7, #0, #+0x2a4 (addr 0xffff91418720)
0xffff91418480    32  tbnz w2, #0, #+0x118 (addr 0xffff91418598)
0xffff91418484    36  asr x9, x2, #32
0xffff91418488    40  cmp w6, w9
0xffff9141848c    44  b.le #+0x10 (addr 0xffff9141849c)
0xffff91418490    48  cmp w9, w6
0xffff91418494    52  b.hs #+0x29c (addr 0xffff91418730)
0xffff91418498    56  b #+0xf4 (addr 0xffff9141858c)
0xffff9141849c    60  ldur w8, [x5, #11]
0xffff914184a0    64  cmp w8, w9
0xffff914184a4    68  b.gt #+0xdc (addr 0xffff91418580)
0xffff914184a8    72  adds w8, w8, #0x400 (1024)
0xffff914184ac    76  b.vs #+0x294 (addr 0xffff91418740)
0xffff914184b0    80  cmp w9, w8
0xffff914184b4    84  b.hs #+0x29c (addr 0xffff91418750)
0xffff914184b8    88  tbnz w2, #0, #+0x128 (addr 0xffff914185e0)
0xffff914184bc    92  asr x10, x2, #32
0xffff914184c0    96  add w8, w9, w10, lsr #1
0xffff914184c4   100  add w8, w8, #0x10 (16)
0xffff914184c8   104  movz w16, #0x95ff
0xffff914184cc   108  cmp w8, w16, lsl #1
0xffff914184d0   112  b.hs #+0x290 (addr 0xffff91418760)
0xffff914184d4   116  lsl x2, x8, #32
0xffff914184d8   120  lsl w3, w8, #3
0xffff914184dc   124  add w3, w3, #0x10 (16)
0xffff914184e0   128  sxtw x3, w3
0xffff914184e4   132  movz x4, #0xf2c0
0xffff914184e8   136  movk x4, #0x4117, lsl #16
0xffff914184ec   140  ldp x10, x16, [x4]
0xffff914184f0   144  adds x8, x10, x3
0xffff914184f4   148  ccmp x8, x16, #nzCv, lo
0xffff914184f8   152  b.hi #+0x168 (addr 0xffff91418660)
0xffff914184fc   156  str x8, [x4]
0xffff91418500   160  orr x10, x10, #0x1
0xffff91418504   164  ldr x3, pc+468 (addr 0x0000ffff914186d8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91418508   168  stur x3, [x10, #-1]
0xffff9141850c   172  stur x2, [x10, #7]
0xffff91418510   176  ldur w2, [x10, #11]
0xffff91418514   180  cmp w6, w2
0xffff91418518   184  b.ge #+0x18 (addr 0xffff91418530)
0xffff9141851c   188  sub w2, w2, #0x1 (1)
0xffff91418520   192  ldr x3, pc+448 (addr 0x0000ffff914186e0)    ;; object: 0x49b04519 <the hole>
0xffff91418524   196  add x4, x10, #0xf (15)
0xffff91418528   200  str x3, [x4, w2, sxtw #3]
0xffff9141852c   204  b #-0x18 (addr 0xffff91418514)
0xffff91418530   208  cmp w6, #0x0 (0)
0xffff91418534   212  b.le #+0x1c (addr 0xffff91418550)
0xffff91418538   216  sub w6, w6, #0x1 (1)
0xffff9141853c   220  add x2, x5, #0xf (15)
0xffff91418540   224  ldr x3, [x2, w6, sxtw #3]
0xffff91418544   228  add x2, x10, #0xf (15)
0xffff91418548   232  str x3, [x2, w6, sxtw #3]
0xffff9141854c   236  b #-0x1c (addr 0xffff91418530)
0xffff91418550   240  mov x2, x10
0xffff91418554   244  stur x2, [x1, #15]
0xffff91418558   248  add x3, x1, #0xf (15)
0xffff9141855c   252  and x2, x1, #0xfffffffffff00000
0xffff91418560   256  ldr x2, [x2, #8]
0xffff91418564   260  tbz w2, #2, #+0x18 (addr 0xffff9141857c)
0xffff91418568   264  sub csp, jssp, #0x8 (8)
0xffff9141856c   268  str lr, [jssp, #-8]!
0xffff91418570   272  ldr x16, pc+376 (addr 0x0000ffff914186e8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff91418574   276  blr x16
0xffff91418578   280  ldr lr, [jssp], #8
0xffff9141857c   284  mov x5, x10
0xffff91418580   288  add w2, w9, #0x1 (1)
0xffff91418584   292  lsl x2, x2, #32
0xffff91418588   296  stur x2, [x1, #23]
0xffff9141858c   300  add x1, x5, #0xf (15)
0xffff91418590   304  str x7, [x1, w9, sxtw #3]
0xffff91418594   308  ret
0xffff91418598   312  sub csp, jssp, #0x10 (16)
0xffff9141859c   316  stp fp, lr, [jssp, #-16]!
0xffff914185a0   320  movz fp, #0xa00000000
0xffff914185a4   324  sub csp, jssp, #0x8 (8)
0xffff914185a8   328  str fp, [jssp, #-8]!
0xffff914185ac   332  add fp, jssp, #0x8 (8)
0xffff914185b0   336  ldur x16, [x2, #-1]
0xffff914185b4   340  ldr x17, [x26, #120]
0xffff914185b8   344  cmp x16, x17
0xffff914185bc   348  b.ne #+0x1b4 (addr 0xffff91418770)
0xffff914185c0   352  ldur d29, [x2, #7]
0xffff914185c4   356  fcvtzs w9, d29
0xffff914185c8   360  scvtf d0, w9
0xffff914185cc   364  fcmp d29, d0
0xffff914185d0   368  b.ne #+0x1a0 (addr 0xffff91418770)
0xffff914185d4   372  ldr lr, [jssp, #16]
0xffff914185d8   376  ldp xzr, fp, [jssp], #24
0xffff914185dc   380  b #-0x154 (addr 0xffff91418488)
0xffff914185e0   384  sub csp, jssp, #0x10 (16)
0xffff914185e4   388  stp fp, lr, [jssp, #-16]!
0xffff914185e8   392  movz fp, #0xa00000000
0xffff914185ec   396  sub csp, jssp, #0x8 (8)
0xffff914185f0   400  str fp, [jssp, #-8]!
0xffff914185f4   404  add fp, jssp, #0x8 (8)
0xffff914185f8   408  ldur x16, [x2, #-1]
0xffff914185fc   412  ldr x17, [x26, #120]
0xffff91418600   416  cmp x16, x17
0xffff91418604   420  b.ne #+0x30 (addr 0xffff91418634)
0xffff91418608   424  ldur d30, [x2, #7]
0xffff9141860c   428  fcvtzs x10, d30
0xffff91418610   432  cmp x10, #0x1 (1)
0xffff91418614   436  ccmn x10, #1, #nzcV, vc
0xffff91418618   440  b.vc #+0x18 (addr 0xffff91418630)
0xffff9141861c   444  sub csp, jssp, #0x8 (8)
0xffff91418620   448  str lr, [jssp, #-8]!
0xffff91418624   452  ldr x16, pc+204 (addr 0x0000ffff914186f0)    ;; code: STUB, DoubleToIStub, minor: 127618
0xffff91418628   456  blr x16
0xffff9141862c   460  ldr lr, [jssp], #8
0xffff91418630   464  b #+0x24 (addr 0xffff91418654)
0xffff91418634   468  ldp x10, x8, [x26, #64]
0xffff91418638   472  cmp x2, x10
0xffff9141863c   476  cset x10, eq
0xffff91418640   480  ccmp x2, x8, #nZcv, ne
0xffff91418644   484  b.eq #+0x10 (addr 0xffff91418654)
0xffff91418648   488  ldr x16, [x26, #40]
0xffff9141864c   492  cmp x2, x16
0xffff91418650   496  b.ne #+0x128 (addr 0xffff91418778)
0xffff91418654   500  ldr lr, [jssp, #16]
0xffff91418658   504  ldp xzr, fp, [jssp], #24
0xffff9141865c   508  b #-0x19c (addr 0xffff914184c0)
0xffff91418660   512  sub csp, jssp, #0x10 (16)
0xffff91418664   516  stp fp, lr, [jssp, #-16]!
0xffff91418668   520  movz fp, #0xa00000000
0xffff9141866c   524  sub csp, jssp, #0x8 (8)
0xffff91418670   528  str fp, [jssp, #-8]!
0xffff91418674   532  add fp, jssp, #0x8 (8)
0xffff91418678   536  movz x10, #0x0
0xffff9141867c   540  mov x16, lr
0xffff91418680   544  ldr x17, pc+120 (addr 0x0000ffff914186f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91418684   548  blr x17
0xffff91418688   552  lsl x0, x3, #32
0xffff9141868c   556  movz x10, #0x0
0xffff91418690   560  sub csp, jssp, #0x10 (16)
0xffff91418694   564  stp x10, x0, [jssp, #-16]!
0xffff91418698   568  movz x0, #0x2
0xffff9141869c   572  movz x1, #0x5b88
0xffff914186a0   576  movk x1, #0xe2, lsl #16
0xffff914186a4   580  ldr x16, pc+92 (addr 0x0000ffff91418700)    ;; code: STUB, CEntryStub, minor: 5
0xffff914186a8   584  blr x16
0xffff914186ac   588  str x0, [jssp, #80]
0xffff914186b0   592  ldr x16, pc+88 (addr 0x0000ffff91418708)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914186b4   596  blr x16
0xffff914186b8   600  ldr lr, [jssp, #16]
0xffff914186bc   604  ldp xzr, fp, [jssp], #24
0xffff914186c0   608  b #-0x1bc (addr 0xffff91418504)
0xffff914186c4   612  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff914186c8   616  d63f03e0       constant
0xffff914186cc   620  d503201f       constant
0xffff914186d0   624  36404259       constant
0xffff914186d4   628  00000000       constant
0xffff914186d8   632  36404259       constant
0xffff914186dc   636  00000000       constant
0xffff914186e0   640  49b04519       constant
0xffff914186e4   644  00000000       constant
0xffff914186e8   648  914170c0       constant
0xffff914186ec   652  0000ffff       constant
0xffff914186f0   656  91417e80       constant
0xffff914186f4   660  0000ffff       constant
0xffff914186f8   664  91406820       constant
0xffff914186fc   668  0000ffff       constant
0xffff91418700   672  91406260       constant
0xffff91418704   676  0000ffff       constant
0xffff91418708   680  914068e0       constant
0xffff9141870c   684  0000ffff       constant
0xffff91418710   688  movz x16, #0x0
0xffff91418714   692  sub csp, jssp, #0x10 (16)
0xffff91418718   696  stp fp, lr, [jssp, #-16]!
0xffff9141871c   700  bl #+0x64 (addr 0xffff91418780)
0xffff91418720   704  movz x16, #0x8
0xffff91418724   708  sub csp, jssp, #0x10 (16)
0xffff91418728   712  stp fp, lr, [jssp, #-16]!
0xffff9141872c   716  bl #+0x54 (addr 0xffff91418780)
0xffff91418730   720  movz x16, #0x10
0xffff91418734   724  sub csp, jssp, #0x10 (16)
0xffff91418738   728  stp fp, lr, [jssp, #-16]!
0xffff9141873c   732  bl #+0x44 (addr 0xffff91418780)
0xffff91418740   736  movz x16, #0x18
0xffff91418744   740  sub csp, jssp, #0x10 (16)
0xffff91418748   744  stp fp, lr, [jssp, #-16]!
0xffff9141874c   748  bl #+0x34 (addr 0xffff91418780)
0xffff91418750   752  movz x16, #0x20
0xffff91418754   756  sub csp, jssp, #0x10 (16)
0xffff91418758   760  stp fp, lr, [jssp, #-16]!
0xffff9141875c   764  bl #+0x24 (addr 0xffff91418780)
0xffff91418760   768  movz x16, #0x28
0xffff91418764   772  sub csp, jssp, #0x10 (16)
0xffff91418768   776  stp fp, lr, [jssp, #-16]!
0xffff9141876c   780  bl #+0x14 (addr 0xffff91418780)
0xffff91418770   784  movz x16, #0x30
0xffff91418774   788  bl #+0x1c (addr 0xffff91418790)
0xffff91418778   792  movz x16, #0x38
0xffff9141877c   796  bl #+0x14 (addr 0xffff91418790)
0xffff91418780   800  movz x17, #0xa00000000
0xffff91418784   804  sub csp, jssp, #0x10 (16)
0xffff91418788   808  stp x17, cp, [jssp, #-16]!
0xffff9141878c   812  add fp, jssp, #0x10 (16)
0xffff91418790   816  ldr x17, pc+24 (addr 0x0000ffff914187a8)    ;; lazy deoptimization bailout 0
0xffff91418794   820  add x17, x17, x16
0xffff91418798   824  br x17
0xffff9141879c   828  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914187a0   832  d63f03e0       constant
0xffff914187a4   836  d503201f       constant
0xffff914187a8   840  91206000       constant
0xffff914187ac   844  0000ffff       constant


Safepoints (size = 21)
0xffff914186ac   588  000 | x0 | x1 | x5 | x10 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 32)
0xffff91418468  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418504  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418520  embedded object  (0x49b04519 <the hole>)
0xffff91418570  code target (STUB)  (0xffff914170c0)
0xffff91418624  code target (STUB)  (0xffff91417e80)
0xffff91418680  code target (STUB)  (0xffff91406820)
0xffff914186a4  code target (STUB)  (0xffff91406260)
0xffff914186b0  code target (STUB)  (0xffff914068e0)
0xffff914186c4  constant pool (size 76)
0xffff91418790  runtime entry
0xffff9141879c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 869)
0xffff91418460     0  ldur x5, [x1, #15]
0xffff91418464     4  ldur x6, [x5, #-1]
0xffff91418468     8  ldr x16, pc+616 (addr 0x0000ffff914186d0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9141846c    12  cmp x6, x16
0xffff91418470    16  b.ne #+0x2a0 (addr 0xffff91418710)
0xffff91418474    20  ldur w6, [x1, #27]
0xffff91418478    24  mov x7, x0
0xffff9141847c    28  tbnz w7, #0, #+0x2a4 (addr 0xffff91418720)
0xffff91418480    32  tbnz w2, #0, #+0x118 (addr 0xffff91418598)
0xffff91418484    36  asr x9, x2, #32
0xffff91418488    40  cmp w6, w9
0xffff9141848c    44  b.le #+0x10 (addr 0xffff9141849c)
0xffff91418490    48  cmp w9, w6
0xffff91418494    52  b.hs #+0x29c (addr 0xffff91418730)
0xffff91418498    56  b #+0xf4 (addr 0xffff9141858c)
0xffff9141849c    60  ldur w8, [x5, #11]
0xffff914184a0    64  cmp w8, w9
0xffff914184a4    68  b.gt #+0xdc (addr 0xffff91418580)
0xffff914184a8    72  adds w8, w8, #0x400 (1024)
0xffff914184ac    76  b.vs #+0x294 (addr 0xffff91418740)
0xffff914184b0    80  cmp w9, w8
0xffff914184b4    84  b.hs #+0x29c (addr 0xffff91418750)
0xffff914184b8    88  tbnz w2, #0, #+0x128 (addr 0xffff914185e0)
0xffff914184bc    92  asr x10, x2, #32
0xffff914184c0    96  add w8, w9, w10, lsr #1
0xffff914184c4   100  add w8, w8, #0x10 (16)
0xffff914184c8   104  movz w16, #0x95ff
0xffff914184cc   108  cmp w8, w16, lsl #1
0xffff914184d0   112  b.hs #+0x290 (addr 0xffff91418760)
0xffff914184d4   116  lsl x2, x8, #32
0xffff914184d8   120  lsl w3, w8, #3
0xffff914184dc   124  add w3, w3, #0x10 (16)
0xffff914184e0   128  sxtw x3, w3
0xffff914184e4   132  movz x4, #0xf2c0
0xffff914184e8   136  movk x4, #0x4117, lsl #16
0xffff914184ec   140  ldp x10, x16, [x4]
0xffff914184f0   144  adds x8, x10, x3
0xffff914184f4   148  ccmp x8, x16, #nzCv, lo
0xffff914184f8   152  b.hi #+0x168 (addr 0xffff91418660)
0xffff914184fc   156  str x8, [x4]
0xffff91418500   160  orr x10, x10, #0x1
0xffff91418504   164  ldr x3, pc+468 (addr 0x0000ffff914186d8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91418508   168  stur x3, [x10, #-1]
0xffff9141850c   172  stur x2, [x10, #7]
0xffff91418510   176  ldur w2, [x10, #11]
0xffff91418514   180  cmp w6, w2
0xffff91418518   184  b.ge #+0x18 (addr 0xffff91418530)
0xffff9141851c   188  sub w2, w2, #0x1 (1)
0xffff91418520   192  ldr x3, pc+448 (addr 0x0000ffff914186e0)    ;; object: 0x49b04519 <the hole>
0xffff91418524   196  add x4, x10, #0xf (15)
0xffff91418528   200  str x3, [x4, w2, sxtw #3]
0xffff9141852c   204  b #-0x18 (addr 0xffff91418514)
0xffff91418530   208  cmp w6, #0x0 (0)
0xffff91418534   212  b.le #+0x1c (addr 0xffff91418550)
0xffff91418538   216  sub w6, w6, #0x1 (1)
0xffff9141853c   220  add x2, x5, #0xf (15)
0xffff91418540   224  ldr x3, [x2, w6, sxtw #3]
0xffff91418544   228  add x2, x10, #0xf (15)
0xffff91418548   232  str x3, [x2, w6, sxtw #3]
0xffff9141854c   236  b #-0x1c (addr 0xffff91418530)
0xffff91418550   240  mov x2, x10
0xffff91418554   244  stur x2, [x1, #15]
0xffff91418558   248  add x3, x1, #0xf (15)
0xffff9141855c   252  and x2, x1, #0xfffffffffff00000
0xffff91418560   256  ldr x2, [x2, #8]
0xffff91418564   260  tbz w2, #2, #+0x18 (addr 0xffff9141857c)
0xffff91418568   264  sub csp, jssp, #0x8 (8)
0xffff9141856c   268  str lr, [jssp, #-8]!
0xffff91418570   272  ldr x16, pc+376 (addr 0x0000ffff914186e8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff91418574   276  blr x16
0xffff91418578   280  ldr lr, [jssp], #8
0xffff9141857c   284  mov x5, x10
0xffff91418580   288  add w2, w9, #0x1 (1)
0xffff91418584   292  lsl x2, x2, #32
0xffff91418588   296  stur x2, [x1, #23]
0xffff9141858c   300  add x1, x5, #0xf (15)
0xffff91418590   304  str x7, [x1, w9, sxtw #3]
0xffff91418594   308  ret
0xffff91418598   312  sub csp, jssp, #0x10 (16)
0xffff9141859c   316  stp fp, lr, [jssp, #-16]!
0xffff914185a0   320  movz fp, #0xa00000000
0xffff914185a4   324  sub csp, jssp, #0x8 (8)
0xffff914185a8   328  str fp, [jssp, #-8]!
0xffff914185ac   332  add fp, jssp, #0x8 (8)
0xffff914185b0   336  ldur x16, [x2, #-1]
0xffff914185b4   340  ldr x17, [x26, #120]
0xffff914185b8   344  cmp x16, x17
0xffff914185bc   348  b.ne #+0x1b4 (addr 0xffff91418770)
0xffff914185c0   352  ldur d29, [x2, #7]
0xffff914185c4   356  fcvtzs w9, d29
0xffff914185c8   360  scvtf d0, w9
0xffff914185cc   364  fcmp d29, d0
0xffff914185d0   368  b.ne #+0x1a0 (addr 0xffff91418770)
0xffff914185d4   372  ldr lr, [jssp, #16]
0xffff914185d8   376  ldp xzr, fp, [jssp], #24
0xffff914185dc   380  b #-0x154 (addr 0xffff91418488)
0xffff914185e0   384  sub csp, jssp, #0x10 (16)
0xffff914185e4   388  stp fp, lr, [jssp, #-16]!
0xffff914185e8   392  movz fp, #0xa00000000
0xffff914185ec   396  sub csp, jssp, #0x8 (8)
0xffff914185f0   400  str fp, [jssp, #-8]!
0xffff914185f4   404  add fp, jssp, #0x8 (8)
0xffff914185f8   408  ldur x16, [x2, #-1]
0xffff914185fc   412  ldr x17, [x26, #120]
0xffff91418600   416  cmp x16, x17
0xffff91418604   420  b.ne #+0x30 (addr 0xffff91418634)
0xffff91418608   424  ldur d30, [x2, #7]
0xffff9141860c   428  fcvtzs x10, d30
0xffff91418610   432  cmp x10, #0x1 (1)
0xffff91418614   436  ccmn x10, #1, #nzcV, vc
0xffff91418618   440  b.vc #+0x18 (addr 0xffff91418630)
0xffff9141861c   444  sub csp, jssp, #0x8 (8)
0xffff91418620   448  str lr, [jssp, #-8]!
0xffff91418624   452  ldr x16, pc+204 (addr 0x0000ffff914186f0)    ;; code: STUB, DoubleToIStub, minor: 127618
0xffff91418628   456  blr x16
0xffff9141862c   460  ldr lr, [jssp], #8
0xffff91418630   464  b #+0x24 (addr 0xffff91418654)
0xffff91418634   468  ldp x10, x8, [x26, #64]
0xffff91418638   472  cmp x2, x10
0xffff9141863c   476  cset x10, eq
0xffff91418640   480  ccmp x2, x8, #nZcv, ne
0xffff91418644   484  b.eq #+0x10 (addr 0xffff91418654)
0xffff91418648   488  ldr x16, [x26, #40]
0xffff9141864c   492  cmp x2, x16
0xffff91418650   496  b.ne #+0x128 (addr 0xffff91418778)
0xffff91418654   500  ldr lr, [jssp, #16]
0xffff91418658   504  ldp xzr, fp, [jssp], #24
0xffff9141865c   508  b #-0x19c (addr 0xffff914184c0)
0xffff91418660   512  sub csp, jssp, #0x10 (16)
0xffff91418664   516  stp fp, lr, [jssp, #-16]!
0xffff91418668   520  movz fp, #0xa00000000
0xffff9141866c   524  sub csp, jssp, #0x8 (8)
0xffff91418670   528  str fp, [jssp, #-8]!
0xffff91418674   532  add fp, jssp, #0x8 (8)
0xffff91418678   536  movz x10, #0x0
0xffff9141867c   540  mov x16, lr
0xffff91418680   544  ldr x17, pc+120 (addr 0x0000ffff914186f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91418684   548  blr x17
0xffff91418688   552  lsl x0, x3, #32
0xffff9141868c   556  movz x10, #0x0
0xffff91418690   560  sub csp, jssp, #0x10 (16)
0xffff91418694   564  stp x10, x0, [jssp, #-16]!
0xffff91418698   568  movz x0, #0x2
0xffff9141869c   572  movz x1, #0x5b88
0xffff914186a0   576  movk x1, #0xe2, lsl #16
0xffff914186a4   580  ldr x16, pc+92 (addr 0x0000ffff91418700)    ;; code: STUB, CEntryStub, minor: 5
0xffff914186a8   584  blr x16
0xffff914186ac   588  str x0, [jssp, #80]
0xffff914186b0   592  ldr x16, pc+88 (addr 0x0000ffff91418708)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914186b4   596  blr x16
0xffff914186b8   600  ldr lr, [jssp, #16]
0xffff914186bc   604  ldp xzr, fp, [jssp], #24
0xffff914186c0   608  b #-0x1bc (addr 0xffff91418504)
0xffff914186c4   612  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff914186c8   616  d63f03e0       constant
0xffff914186cc   620  d503201f       constant
0xffff914186d0   624  36404259       constant
0xffff914186d4   628  00000000       constant
0xffff914186d8   632  36404259       constant
0xffff914186dc   636  00000000       constant
0xffff914186e0   640  49b04519       constant
0xffff914186e4   644  00000000       constant
0xffff914186e8   648  914170c0       constant
0xffff914186ec   652  0000ffff       constant
0xffff914186f0   656  91417e80       constant
0xffff914186f4   660  0000ffff       constant
0xffff914186f8   664  91406820       constant
0xffff914186fc   668  0000ffff       constant
0xffff91418700   672  91406260       constant
0xffff91418704   676  0000ffff       constant
0xffff91418708   680  914068e0       constant
0xffff9141870c   684  0000ffff       constant
0xffff91418710   688  movz x16, #0x0
0xffff91418714   692  sub csp, jssp, #0x10 (16)
0xffff91418718   696  stp fp, lr, [jssp, #-16]!
0xffff9141871c   700  bl #+0x64 (addr 0xffff91418780)
0xffff91418720   704  movz x16, #0x8
0xffff91418724   708  sub csp, jssp, #0x10 (16)
0xffff91418728   712  stp fp, lr, [jssp, #-16]!
0xffff9141872c   716  bl #+0x54 (addr 0xffff91418780)
0xffff91418730   720  movz x16, #0x10
0xffff91418734   724  sub csp, jssp, #0x10 (16)
0xffff91418738   728  stp fp, lr, [jssp, #-16]!
0xffff9141873c   732  bl #+0x44 (addr 0xffff91418780)
0xffff91418740   736  movz x16, #0x18
0xffff91418744   740  sub csp, jssp, #0x10 (16)
0xffff91418748   744  stp fp, lr, [jssp, #-16]!
0xffff9141874c   748  bl #+0x34 (addr 0xffff91418780)
0xffff91418750   752  movz x16, #0x20
0xffff91418754   756  sub csp, jssp, #0x10 (16)
0xffff91418758   760  stp fp, lr, [jssp, #-16]!
0xffff9141875c   764  bl #+0x24 (addr 0xffff91418780)
0xffff91418760   768  movz x16, #0x28
0xffff91418764   772  sub csp, jssp, #0x10 (16)
0xffff91418768   776  stp fp, lr, [jssp, #-16]!
0xffff9141876c   780  bl #+0x14 (addr 0xffff91418780)
0xffff91418770   784  movz x16, #0x30
0xffff91418774   788  bl #+0x1c (addr 0xffff91418790)
0xffff91418778   792  movz x16, #0x38
0xffff9141877c   796  bl #+0x14 (addr 0xffff91418790)
0xffff91418780   800  movz x17, #0xa00000000
0xffff91418784   804  sub csp, jssp, #0x10 (16)
0xffff91418788   808  stp x17, cp, [jssp, #-16]!
0xffff9141878c   812  add fp, jssp, #0x10 (16)
0xffff91418790   816  ldr x17, pc+24 (addr 0x0000ffff914187a8)    ;; lazy deoptimization bailout 0
0xffff91418794   820  add x17, x17, x16
0xffff91418798   824  br x17
0xffff9141879c   828  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914187a0   832  d63f03e0       constant
0xffff914187a4   836  d503201f       constant
0xffff914187a8   840  91206000       constant
0xffff914187ac   844  0000ffff       constant


Safepoints (size = 21)
0xffff914186ac   588  000 | x0 | x1 | x5 | x10 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 32)
0xffff91418468  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418504  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418520  embedded object  (0x49b04519 <the hole>)
0xffff91418570  code target (STUB)  (0xffff914170c0)
0xffff91418624  code target (STUB)  (0xffff91417e80)
0xffff91418680  code target (STUB)  (0xffff91406820)
0xffff914186a4  code target (STUB)  (0xffff91406260)
0xffff914186b0  code target (STUB)  (0xffff914068e0)
0xffff914186c4  constant pool (size 76)
0xffff91418790  runtime entry
0xffff9141879c  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff91418840     0  ldur x5, [x1, #15]
0xffff91418844     4  ldur x6, [x5, #-1]
0xffff91418848     8  ldr x16, pc+152 (addr 0x0000ffff914188e0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9141884c    12  cmp x6, x16
0xffff91418850    16  b.ne #+0xa0 (addr 0xffff914188f0)
0xffff91418854    20  ldur w6, [x1, #27]
0xffff91418858    24  tbnz w2, #0, #+0x54 (addr 0xffff914188ac)
0xffff9141885c    28  asr x8, x2, #32
0xffff91418860    32  cmp w8, w6
0xffff91418864    36  b.hs #+0x9c (addr 0xffff91418900)
0xffff91418868    40  mov x1, x0
0xffff9141886c    44  add x2, x5, #0xf (15)
0xffff91418870    48  str x1, [x2, w8, sxtw #3]
0xffff91418874    52  add x2, x2, w8, sxtw #3
0xffff91418878    56  tbz w1, #0, #+0x30 (addr 0xffff914188a8)
0xffff9141887c    60  and x1, x1, #0xfffffffffff00000
0xffff91418880    64  ldr x1, [x1, #8]
0xffff91418884    68  tbz w1, #1, #+0x24 (addr 0xffff914188a8)
0xffff91418888    72  and x1, x5, #0xfffffffffff00000
0xffff9141888c    76  ldr x1, [x1, #8]
0xffff91418890    80  tbz w1, #2, #+0x18 (addr 0xffff914188a8)
0xffff91418894    84  sub csp, jssp, #0x8 (8)
0xffff91418898    88  str lr, [jssp, #-8]!
0xffff9141889c    92  ldr x16, pc+76 (addr 0x0000ffff914188e8)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff914188a0    96  blr x16
0xffff914188a4   100  ldr lr, [jssp], #8
0xffff914188a8   104  ret
0xffff914188ac   108  ldur x16, [x2, #-1]
0xffff914188b0   112  ldr x17, [x26, #120]
0xffff914188b4   116  cmp x16, x17
0xffff914188b8   120  b.ne #+0x58 (addr 0xffff91418910)
0xffff914188bc   124  ldur d29, [x2, #7]
0xffff914188c0   128  fcvtzs w8, d29
0xffff914188c4   132  scvtf d0, w8
0xffff914188c8   136  fcmp d29, d0
0xffff914188cc   140  b.ne #+0x44 (addr 0xffff91418910)
0xffff914188d0   144  b #-0x70 (addr 0xffff91418860)
0xffff914188d4   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914188d8   152  d63f03e0       constant
0xffff914188dc   156  d503201f       constant
0xffff914188e0   160  36404259       constant
0xffff914188e4   164  00000000       constant
0xffff914188e8   168  91416760       constant
0xffff914188ec   172  0000ffff       constant
0xffff914188f0   176  movz x16, #0x0
0xffff914188f4   180  sub csp, jssp, #0x10 (16)
0xffff914188f8   184  stp fp, lr, [jssp, #-16]!
0xffff914188fc   188  bl #+0x24 (addr 0xffff91418920)
0xffff91418900   192  movz x16, #0x8
0xffff91418904   196  sub csp, jssp, #0x10 (16)
0xffff91418908   200  stp fp, lr, [jssp, #-16]!
0xffff9141890c   204  bl #+0x14 (addr 0xffff91418920)
0xffff91418910   208  movz x16, #0x10
0xffff91418914   212  sub csp, jssp, #0x10 (16)
0xffff91418918   216  stp fp, lr, [jssp, #-16]!
0xffff9141891c   220  bl #+0x4 (addr 0xffff91418920)
0xffff91418920   224  movz x17, #0xa00000000
0xffff91418924   228  sub csp, jssp, #0x10 (16)
0xffff91418928   232  stp x17, cp, [jssp, #-16]!
0xffff9141892c   236  add fp, jssp, #0x10 (16)
0xffff91418930   240  ldr x17, pc+24 (addr 0x0000ffff91418948)    ;; lazy deoptimization bailout 0
0xffff91418934   244  add x17, x17, x16
0xffff91418938   248  br x17
0xffff9141893c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91418940   256  d63f03e0       constant
0xffff91418944   260  d503201f       constant
0xffff91418948   264  91206000       constant
0xffff9141894c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff91418848  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9141889c  code target (STUB)  (0xffff91416760)
0xffff914188d4  constant pool (size 28)
0xffff91418930  runtime entry
0xffff9141893c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff91418840     0  ldur x5, [x1, #15]
0xffff91418844     4  ldur x6, [x5, #-1]
0xffff91418848     8  ldr x16, pc+152 (addr 0x0000ffff914188e0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9141884c    12  cmp x6, x16
0xffff91418850    16  b.ne #+0xa0 (addr 0xffff914188f0)
0xffff91418854    20  ldur w6, [x1, #27]
0xffff91418858    24  tbnz w2, #0, #+0x54 (addr 0xffff914188ac)
0xffff9141885c    28  asr x8, x2, #32
0xffff91418860    32  cmp w8, w6
0xffff91418864    36  b.hs #+0x9c (addr 0xffff91418900)
0xffff91418868    40  mov x1, x0
0xffff9141886c    44  add x2, x5, #0xf (15)
0xffff91418870    48  str x1, [x2, w8, sxtw #3]
0xffff91418874    52  add x2, x2, w8, sxtw #3
0xffff91418878    56  tbz w1, #0, #+0x30 (addr 0xffff914188a8)
0xffff9141887c    60  and x1, x1, #0xfffffffffff00000
0xffff91418880    64  ldr x1, [x1, #8]
0xffff91418884    68  tbz w1, #1, #+0x24 (addr 0xffff914188a8)
0xffff91418888    72  and x1, x5, #0xfffffffffff00000
0xffff9141888c    76  ldr x1, [x1, #8]
0xffff91418890    80  tbz w1, #2, #+0x18 (addr 0xffff914188a8)
0xffff91418894    84  sub csp, jssp, #0x8 (8)
0xffff91418898    88  str lr, [jssp, #-8]!
0xffff9141889c    92  ldr x16, pc+76 (addr 0x0000ffff914188e8)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff914188a0    96  blr x16
0xffff914188a4   100  ldr lr, [jssp], #8
0xffff914188a8   104  ret
0xffff914188ac   108  ldur x16, [x2, #-1]
0xffff914188b0   112  ldr x17, [x26, #120]
0xffff914188b4   116  cmp x16, x17
0xffff914188b8   120  b.ne #+0x58 (addr 0xffff91418910)
0xffff914188bc   124  ldur d29, [x2, #7]
0xffff914188c0   128  fcvtzs w8, d29
0xffff914188c4   132  scvtf d0, w8
0xffff914188c8   136  fcmp d29, d0
0xffff914188cc   140  b.ne #+0x44 (addr 0xffff91418910)
0xffff914188d0   144  b #-0x70 (addr 0xffff91418860)
0xffff914188d4   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914188d8   152  d63f03e0       constant
0xffff914188dc   156  d503201f       constant
0xffff914188e0   160  36404259       constant
0xffff914188e4   164  00000000       constant
0xffff914188e8   168  91416760       constant
0xffff914188ec   172  0000ffff       constant
0xffff914188f0   176  movz x16, #0x0
0xffff914188f4   180  sub csp, jssp, #0x10 (16)
0xffff914188f8   184  stp fp, lr, [jssp, #-16]!
0xffff914188fc   188  bl #+0x24 (addr 0xffff91418920)
0xffff91418900   192  movz x16, #0x8
0xffff91418904   196  sub csp, jssp, #0x10 (16)
0xffff91418908   200  stp fp, lr, [jssp, #-16]!
0xffff9141890c   204  bl #+0x14 (addr 0xffff91418920)
0xffff91418910   208  movz x16, #0x10
0xffff91418914   212  sub csp, jssp, #0x10 (16)
0xffff91418918   216  stp fp, lr, [jssp, #-16]!
0xffff9141891c   220  bl #+0x4 (addr 0xffff91418920)
0xffff91418920   224  movz x17, #0xa00000000
0xffff91418924   228  sub csp, jssp, #0x10 (16)
0xffff91418928   232  stp x17, cp, [jssp, #-16]!
0xffff9141892c   236  add fp, jssp, #0x10 (16)
0xffff91418930   240  ldr x17, pc+24 (addr 0x0000ffff91418948)    ;; lazy deoptimization bailout 0
0xffff91418934   244  add x17, x17, x16
0xffff91418938   248  br x17
0xffff9141893c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91418940   256  d63f03e0       constant
0xffff91418944   260  d503201f       constant
0xffff91418948   264  91206000       constant
0xffff9141894c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff91418848  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9141889c  code target (STUB)  (0xffff91416760)
0xffff914188d4  constant pool (size 28)
0xffff91418930  runtime entry
0xffff9141893c  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 909)
0xffff914189c0     0  ldur x5, [x1, #15]
0xffff914189c4     4  ldur x6, [x5, #-1]
0xffff914189c8     8  ldr x16, pc+664 (addr 0x0000ffff91418c60)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914189cc    12  cmp x6, x16
0xffff914189d0    16  b.ne #+0x2d8 (addr 0xffff91418ca8)
0xffff914189d4    20  ldur w6, [x1, #27]
0xffff914189d8    24  tbnz w2, #0, #+0x150 (addr 0xffff91418b28)
0xffff914189dc    28  asr x8, x2, #32
0xffff914189e0    32  cmp w6, w8
0xffff914189e4    36  b.eq #+0x10 (addr 0xffff914189f4)
0xffff914189e8    40  cmp w8, w6
0xffff914189ec    44  b.hs #+0x2cc (addr 0xffff91418cb8)
0xffff914189f0    48  b #+0xf4 (addr 0xffff91418ae4)
0xffff914189f4    52  ldur w7, [x5, #11]
0xffff914189f8    56  cmp w7, w8
0xffff914189fc    60  b.gt #+0xdc (addr 0xffff91418ad8)
0xffff91418a00    64  adds w7, w7, #0x400 (1024)
0xffff91418a04    68  b.vs #+0x2c4 (addr 0xffff91418cc8)
0xffff91418a08    72  cmp w8, w7
0xffff91418a0c    76  b.hs #+0x2cc (addr 0xffff91418cd8)
0xffff91418a10    80  tbnz w2, #0, #+0x160 (addr 0xffff91418b70)
0xffff91418a14    84  asr x9, x2, #32
0xffff91418a18    88  add w7, w8, w9, lsr #1
0xffff91418a1c    92  add w7, w7, #0x10 (16)
0xffff91418a20    96  movz w16, #0x95ff
0xffff91418a24   100  cmp w7, w16, lsl #1
0xffff91418a28   104  b.hs #+0x2c0 (addr 0xffff91418ce8)
0xffff91418a2c   108  lsl x2, x7, #32
0xffff91418a30   112  lsl w3, w7, #3
0xffff91418a34   116  add w3, w3, #0x10 (16)
0xffff91418a38   120  sxtw x3, w3
0xffff91418a3c   124  movz x4, #0xf2c0
0xffff91418a40   128  movk x4, #0x4117, lsl #16
0xffff91418a44   132  ldp x9, x16, [x4]
0xffff91418a48   136  adds x7, x9, x3
0xffff91418a4c   140  ccmp x7, x16, #nzCv, lo
0xffff91418a50   144  b.hi #+0x1a0 (addr 0xffff91418bf0)
0xffff91418a54   148  str x7, [x4]
0xffff91418a58   152  orr x9, x9, #0x1
0xffff91418a5c   156  ldr x3, pc+524 (addr 0x0000ffff91418c68)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91418a60   160  stur x3, [x9, #-1]
0xffff91418a64   164  stur x2, [x9, #7]
0xffff91418a68   168  ldur w2, [x9, #11]
0xffff91418a6c   172  cmp w6, w2
0xffff91418a70   176  b.ge #+0x18 (addr 0xffff91418a88)
0xffff91418a74   180  sub w2, w2, #0x1 (1)
0xffff91418a78   184  ldr x3, pc+504 (addr 0x0000ffff91418c70)    ;; object: 0x49b04519 <the hole>
0xffff91418a7c   188  add x4, x9, #0xf (15)
0xffff91418a80   192  str x3, [x4, w2, sxtw #3]
0xffff91418a84   196  b #-0x18 (addr 0xffff91418a6c)
0xffff91418a88   200  cmp w6, #0x0 (0)
0xffff91418a8c   204  b.le #+0x1c (addr 0xffff91418aa8)
0xffff91418a90   208  sub w6, w6, #0x1 (1)
0xffff91418a94   212  add x2, x5, #0xf (15)
0xffff91418a98   216  ldr x3, [x2, w6, sxtw #3]
0xffff91418a9c   220  add x2, x9, #0xf (15)
0xffff91418aa0   224  str x3, [x2, w6, sxtw #3]
0xffff91418aa4   228  b #-0x1c (addr 0xffff91418a88)
0xffff91418aa8   232  mov x2, x9
0xffff91418aac   236  stur x2, [x1, #15]
0xffff91418ab0   240  add x3, x1, #0xf (15)
0xffff91418ab4   244  and x2, x1, #0xfffffffffff00000
0xffff91418ab8   248  ldr x2, [x2, #8]
0xffff91418abc   252  tbz w2, #2, #+0x18 (addr 0xffff91418ad4)
0xffff91418ac0   256  sub csp, jssp, #0x8 (8)
0xffff91418ac4   260  str lr, [jssp, #-8]!
0xffff91418ac8   264  ldr x16, pc+432 (addr 0x0000ffff91418c78)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff91418acc   268  blr x16
0xffff91418ad0   272  ldr lr, [jssp], #8
0xffff91418ad4   276  mov x5, x9
0xffff91418ad8   280  add w2, w8, #0x1 (1)
0xffff91418adc   284  lsl x2, x2, #32
0xffff91418ae0   288  stur x2, [x1, #23]
0xffff91418ae4   292  mov x1, x0
0xffff91418ae8   296  add x2, x5, #0xf (15)
0xffff91418aec   300  str x1, [x2, w8, sxtw #3]
0xffff91418af0   304  add x2, x2, w8, sxtw #3
0xffff91418af4   308  tbz w1, #0, #+0x30 (addr 0xffff91418b24)
0xffff91418af8   312  and x1, x1, #0xfffffffffff00000
0xffff91418afc   316  ldr x1, [x1, #8]
0xffff91418b00   320  tbz w1, #1, #+0x24 (addr 0xffff91418b24)
0xffff91418b04   324  and x1, x5, #0xfffffffffff00000
0xffff91418b08   328  ldr x1, [x1, #8]
0xffff91418b0c   332  tbz w1, #2, #+0x18 (addr 0xffff91418b24)
0xffff91418b10   336  sub csp, jssp, #0x8 (8)
0xffff91418b14   340  str lr, [jssp, #-8]!
0xffff91418b18   344  ldr x16, pc+360 (addr 0x0000ffff91418c80)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff91418b1c   348  blr x16
0xffff91418b20   352  ldr lr, [jssp], #8
0xffff91418b24   356  ret
0xffff91418b28   360  sub csp, jssp, #0x10 (16)
0xffff91418b2c   364  stp fp, lr, [jssp, #-16]!
0xffff91418b30   368  movz fp, #0xa00000000
0xffff91418b34   372  sub csp, jssp, #0x8 (8)
0xffff91418b38   376  str fp, [jssp, #-8]!
0xffff91418b3c   380  add fp, jssp, #0x8 (8)
0xffff91418b40   384  ldur x16, [x2, #-1]
0xffff91418b44   388  ldr x17, [x26, #120]
0xffff91418b48   392  cmp x16, x17
0xffff91418b4c   396  b.ne #+0x1ac (addr 0xffff91418cf8)
0xffff91418b50   400  ldur d29, [x2, #7]
0xffff91418b54   404  fcvtzs w8, d29
0xffff91418b58   408  scvtf d0, w8
0xffff91418b5c   412  fcmp d29, d0
0xffff91418b60   416  b.ne #+0x198 (addr 0xffff91418cf8)
0xffff91418b64   420  ldr lr, [jssp, #16]
0xffff91418b68   424  ldp xzr, fp, [jssp], #24
0xffff91418b6c   428  b #-0x18c (addr 0xffff914189e0)
0xffff91418b70   432  sub csp, jssp, #0x10 (16)
0xffff91418b74   436  stp fp, lr, [jssp, #-16]!
0xffff91418b78   440  movz fp, #0xa00000000
0xffff91418b7c   444  sub csp, jssp, #0x8 (8)
0xffff91418b80   448  str fp, [jssp, #-8]!
0xffff91418b84   452  add fp, jssp, #0x8 (8)
0xffff91418b88   456  ldur x16, [x2, #-1]
0xffff91418b8c   460  ldr x17, [x26, #120]
0xffff91418b90   464  cmp x16, x17
0xffff91418b94   468  b.ne #+0x30 (addr 0xffff91418bc4)
0xffff91418b98   472  ldur d30, [x2, #7]
0xffff91418b9c   476  fcvtzs x9, d30
0xffff91418ba0   480  cmp x9, #0x1 (1)
0xffff91418ba4   484  ccmn x9, #1, #nzcV, vc
0xffff91418ba8   488  b.vc #+0x18 (addr 0xffff91418bc0)
0xffff91418bac   492  sub csp, jssp, #0x8 (8)
0xffff91418bb0   496  str lr, [jssp, #-8]!
0xffff91418bb4   500  ldr x16, pc+212 (addr 0x0000ffff91418c88)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff91418bb8   504  blr x16
0xffff91418bbc   508  ldr lr, [jssp], #8
0xffff91418bc0   512  b #+0x24 (addr 0xffff91418be4)
0xffff91418bc4   516  ldp x9, x7, [x26, #64]
0xffff91418bc8   520  cmp x2, x9
0xffff91418bcc   524  cset x9, eq
0xffff91418bd0   528  ccmp x2, x7, #nZcv, ne
0xffff91418bd4   532  b.eq #+0x10 (addr 0xffff91418be4)
0xffff91418bd8   536  ldr x16, [x26, #40]
0xffff91418bdc   540  cmp x2, x16
0xffff91418be0   544  b.ne #+0x120 (addr 0xffff91418d00)
0xffff91418be4   548  ldr lr, [jssp, #16]
0xffff91418be8   552  ldp xzr, fp, [jssp], #24
0xffff91418bec   556  b #-0x1d4 (addr 0xffff91418a18)
0xffff91418bf0   560  sub csp, jssp, #0x10 (16)
0xffff91418bf4   564  stp fp, lr, [jssp, #-16]!
0xffff91418bf8   568  movz fp, #0xa00000000
0xffff91418bfc   572  sub csp, jssp, #0x8 (8)
0xffff91418c00   576  str fp, [jssp, #-8]!
0xffff91418c04   580  add fp, jssp, #0x8 (8)
0xffff91418c08   584  movz x9, #0x0
0xffff91418c0c   588  mov x16, lr
0xffff91418c10   592  ldr x17, pc+128 (addr 0x0000ffff91418c90)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91418c14   596  blr x17
0xffff91418c18   600  lsl x0, x3, #32
0xffff91418c1c   604  movz x10, #0x0
0xffff91418c20   608  sub csp, jssp, #0x10 (16)
0xffff91418c24   612  stp x10, x0, [jssp, #-16]!
0xffff91418c28   616  movz x0, #0x2
0xffff91418c2c   620  movz x1, #0x5b88
0xffff91418c30   624  movk x1, #0xe2, lsl #16
0xffff91418c34   628  ldr x16, pc+100 (addr 0x0000ffff91418c98)    ;; code: STUB, CEntryStub, minor: 5
0xffff91418c38   632  blr x16
0xffff91418c3c   636  str x0, [jssp, #72]
0xffff91418c40   640  ldr x16, pc+96 (addr 0x0000ffff91418ca0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91418c44   644  blr x16
0xffff91418c48   648  ldr lr, [jssp, #16]
0xffff91418c4c   652  ldp xzr, fp, [jssp], #24
0xffff91418c50   656  b #-0x1f4 (addr 0xffff91418a5c)
0xffff91418c54   660  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff91418c58   664  d63f03e0       constant
0xffff91418c5c   668  d503201f       constant
0xffff91418c60   672  36404259       constant
0xffff91418c64   676  00000000       constant
0xffff91418c68   680  36404259       constant
0xffff91418c6c   684  00000000       constant
0xffff91418c70   688  49b04519       constant
0xffff91418c74   692  00000000       constant
0xffff91418c78   696  914170c0       constant
0xffff91418c7c   700  0000ffff       constant
0xffff91418c80   704  91416760       constant
0xffff91418c84   708  0000ffff       constant
0xffff91418c88   712  914178a0       constant
0xffff91418c8c   716  0000ffff       constant
0xffff91418c90   720  91406820       constant
0xffff91418c94   724  0000ffff       constant
0xffff91418c98   728  91406260       constant
0xffff91418c9c   732  0000ffff       constant
0xffff91418ca0   736  914068e0       constant
0xffff91418ca4   740  0000ffff       constant
0xffff91418ca8   744  movz x16, #0x0
0xffff91418cac   748  sub csp, jssp, #0x10 (16)
0xffff91418cb0   752  stp fp, lr, [jssp, #-16]!
0xffff91418cb4   756  bl #+0x54 (addr 0xffff91418d08)
0xffff91418cb8   760  movz x16, #0x8
0xffff91418cbc   764  sub csp, jssp, #0x10 (16)
0xffff91418cc0   768  stp fp, lr, [jssp, #-16]!
0xffff91418cc4   772  bl #+0x44 (addr 0xffff91418d08)
0xffff91418cc8   776  movz x16, #0x10
0xffff91418ccc   780  sub csp, jssp, #0x10 (16)
0xffff91418cd0   784  stp fp, lr, [jssp, #-16]!
0xffff91418cd4   788  bl #+0x34 (addr 0xffff91418d08)
0xffff91418cd8   792  movz x16, #0x18
0xffff91418cdc   796  sub csp, jssp, #0x10 (16)
0xffff91418ce0   800  stp fp, lr, [jssp, #-16]!
0xffff91418ce4   804  bl #+0x24 (addr 0xffff91418d08)
0xffff91418ce8   808  movz x16, #0x20
0xffff91418cec   812  sub csp, jssp, #0x10 (16)
0xffff91418cf0   816  stp fp, lr, [jssp, #-16]!
0xffff91418cf4   820  bl #+0x14 (addr 0xffff91418d08)
0xffff91418cf8   824  movz x16, #0x28
0xffff91418cfc   828  bl #+0x1c (addr 0xffff91418d18)
0xffff91418d00   832  movz x16, #0x30
0xffff91418d04   836  bl #+0x14 (addr 0xffff91418d18)
0xffff91418d08   840  movz x17, #0xa00000000
0xffff91418d0c   844  sub csp, jssp, #0x10 (16)
0xffff91418d10   848  stp x17, cp, [jssp, #-16]!
0xffff91418d14   852  add fp, jssp, #0x10 (16)
0xffff91418d18   856  ldr x17, pc+24 (addr 0x0000ffff91418d30)    ;; lazy deoptimization bailout 0
0xffff91418d1c   860  add x17, x17, x16
0xffff91418d20   864  br x17
0xffff91418d24   868  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91418d28   872  d63f03e0       constant
0xffff91418d2c   876  d503201f       constant
0xffff91418d30   880  91206000       constant
0xffff91418d34   884  0000ffff       constant


Safepoints (size = 21)
0xffff91418c3c   636  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff914189c8  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418a5c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418a78  embedded object  (0x49b04519 <the hole>)
0xffff91418ac8  code target (STUB)  (0xffff914170c0)
0xffff91418b18  code target (STUB)  (0xffff91416760)
0xffff91418bb4  code target (STUB)  (0xffff914178a0)
0xffff91418c10  code target (STUB)  (0xffff91406820)
0xffff91418c34  code target (STUB)  (0xffff91406260)
0xffff91418c40  code target (STUB)  (0xffff914068e0)
0xffff91418c54  constant pool (size 84)
0xffff91418d18  runtime entry
0xffff91418d24  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 909)
0xffff914189c0     0  ldur x5, [x1, #15]
0xffff914189c4     4  ldur x6, [x5, #-1]
0xffff914189c8     8  ldr x16, pc+664 (addr 0x0000ffff91418c60)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914189cc    12  cmp x6, x16
0xffff914189d0    16  b.ne #+0x2d8 (addr 0xffff91418ca8)
0xffff914189d4    20  ldur w6, [x1, #27]
0xffff914189d8    24  tbnz w2, #0, #+0x150 (addr 0xffff91418b28)
0xffff914189dc    28  asr x8, x2, #32
0xffff914189e0    32  cmp w6, w8
0xffff914189e4    36  b.eq #+0x10 (addr 0xffff914189f4)
0xffff914189e8    40  cmp w8, w6
0xffff914189ec    44  b.hs #+0x2cc (addr 0xffff91418cb8)
0xffff914189f0    48  b #+0xf4 (addr 0xffff91418ae4)
0xffff914189f4    52  ldur w7, [x5, #11]
0xffff914189f8    56  cmp w7, w8
0xffff914189fc    60  b.gt #+0xdc (addr 0xffff91418ad8)
0xffff91418a00    64  adds w7, w7, #0x400 (1024)
0xffff91418a04    68  b.vs #+0x2c4 (addr 0xffff91418cc8)
0xffff91418a08    72  cmp w8, w7
0xffff91418a0c    76  b.hs #+0x2cc (addr 0xffff91418cd8)
0xffff91418a10    80  tbnz w2, #0, #+0x160 (addr 0xffff91418b70)
0xffff91418a14    84  asr x9, x2, #32
0xffff91418a18    88  add w7, w8, w9, lsr #1
0xffff91418a1c    92  add w7, w7, #0x10 (16)
0xffff91418a20    96  movz w16, #0x95ff
0xffff91418a24   100  cmp w7, w16, lsl #1
0xffff91418a28   104  b.hs #+0x2c0 (addr 0xffff91418ce8)
0xffff91418a2c   108  lsl x2, x7, #32
0xffff91418a30   112  lsl w3, w7, #3
0xffff91418a34   116  add w3, w3, #0x10 (16)
0xffff91418a38   120  sxtw x3, w3
0xffff91418a3c   124  movz x4, #0xf2c0
0xffff91418a40   128  movk x4, #0x4117, lsl #16
0xffff91418a44   132  ldp x9, x16, [x4]
0xffff91418a48   136  adds x7, x9, x3
0xffff91418a4c   140  ccmp x7, x16, #nzCv, lo
0xffff91418a50   144  b.hi #+0x1a0 (addr 0xffff91418bf0)
0xffff91418a54   148  str x7, [x4]
0xffff91418a58   152  orr x9, x9, #0x1
0xffff91418a5c   156  ldr x3, pc+524 (addr 0x0000ffff91418c68)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91418a60   160  stur x3, [x9, #-1]
0xffff91418a64   164  stur x2, [x9, #7]
0xffff91418a68   168  ldur w2, [x9, #11]
0xffff91418a6c   172  cmp w6, w2
0xffff91418a70   176  b.ge #+0x18 (addr 0xffff91418a88)
0xffff91418a74   180  sub w2, w2, #0x1 (1)
0xffff91418a78   184  ldr x3, pc+504 (addr 0x0000ffff91418c70)    ;; object: 0x49b04519 <the hole>
0xffff91418a7c   188  add x4, x9, #0xf (15)
0xffff91418a80   192  str x3, [x4, w2, sxtw #3]
0xffff91418a84   196  b #-0x18 (addr 0xffff91418a6c)
0xffff91418a88   200  cmp w6, #0x0 (0)
0xffff91418a8c   204  b.le #+0x1c (addr 0xffff91418aa8)
0xffff91418a90   208  sub w6, w6, #0x1 (1)
0xffff91418a94   212  add x2, x5, #0xf (15)
0xffff91418a98   216  ldr x3, [x2, w6, sxtw #3]
0xffff91418a9c   220  add x2, x9, #0xf (15)
0xffff91418aa0   224  str x3, [x2, w6, sxtw #3]
0xffff91418aa4   228  b #-0x1c (addr 0xffff91418a88)
0xffff91418aa8   232  mov x2, x9
0xffff91418aac   236  stur x2, [x1, #15]
0xffff91418ab0   240  add x3, x1, #0xf (15)
0xffff91418ab4   244  and x2, x1, #0xfffffffffff00000
0xffff91418ab8   248  ldr x2, [x2, #8]
0xffff91418abc   252  tbz w2, #2, #+0x18 (addr 0xffff91418ad4)
0xffff91418ac0   256  sub csp, jssp, #0x8 (8)
0xffff91418ac4   260  str lr, [jssp, #-8]!
0xffff91418ac8   264  ldr x16, pc+432 (addr 0x0000ffff91418c78)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff91418acc   268  blr x16
0xffff91418ad0   272  ldr lr, [jssp], #8
0xffff91418ad4   276  mov x5, x9
0xffff91418ad8   280  add w2, w8, #0x1 (1)
0xffff91418adc   284  lsl x2, x2, #32
0xffff91418ae0   288  stur x2, [x1, #23]
0xffff91418ae4   292  mov x1, x0
0xffff91418ae8   296  add x2, x5, #0xf (15)
0xffff91418aec   300  str x1, [x2, w8, sxtw #3]
0xffff91418af0   304  add x2, x2, w8, sxtw #3
0xffff91418af4   308  tbz w1, #0, #+0x30 (addr 0xffff91418b24)
0xffff91418af8   312  and x1, x1, #0xfffffffffff00000
0xffff91418afc   316  ldr x1, [x1, #8]
0xffff91418b00   320  tbz w1, #1, #+0x24 (addr 0xffff91418b24)
0xffff91418b04   324  and x1, x5, #0xfffffffffff00000
0xffff91418b08   328  ldr x1, [x1, #8]
0xffff91418b0c   332  tbz w1, #2, #+0x18 (addr 0xffff91418b24)
0xffff91418b10   336  sub csp, jssp, #0x8 (8)
0xffff91418b14   340  str lr, [jssp, #-8]!
0xffff91418b18   344  ldr x16, pc+360 (addr 0x0000ffff91418c80)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff91418b1c   348  blr x16
0xffff91418b20   352  ldr lr, [jssp], #8
0xffff91418b24   356  ret
0xffff91418b28   360  sub csp, jssp, #0x10 (16)
0xffff91418b2c   364  stp fp, lr, [jssp, #-16]!
0xffff91418b30   368  movz fp, #0xa00000000
0xffff91418b34   372  sub csp, jssp, #0x8 (8)
0xffff91418b38   376  str fp, [jssp, #-8]!
0xffff91418b3c   380  add fp, jssp, #0x8 (8)
0xffff91418b40   384  ldur x16, [x2, #-1]
0xffff91418b44   388  ldr x17, [x26, #120]
0xffff91418b48   392  cmp x16, x17
0xffff91418b4c   396  b.ne #+0x1ac (addr 0xffff91418cf8)
0xffff91418b50   400  ldur d29, [x2, #7]
0xffff91418b54   404  fcvtzs w8, d29
0xffff91418b58   408  scvtf d0, w8
0xffff91418b5c   412  fcmp d29, d0
0xffff91418b60   416  b.ne #+0x198 (addr 0xffff91418cf8)
0xffff91418b64   420  ldr lr, [jssp, #16]
0xffff91418b68   424  ldp xzr, fp, [jssp], #24
0xffff91418b6c   428  b #-0x18c (addr 0xffff914189e0)
0xffff91418b70   432  sub csp, jssp, #0x10 (16)
0xffff91418b74   436  stp fp, lr, [jssp, #-16]!
0xffff91418b78   440  movz fp, #0xa00000000
0xffff91418b7c   444  sub csp, jssp, #0x8 (8)
0xffff91418b80   448  str fp, [jssp, #-8]!
0xffff91418b84   452  add fp, jssp, #0x8 (8)
0xffff91418b88   456  ldur x16, [x2, #-1]
0xffff91418b8c   460  ldr x17, [x26, #120]
0xffff91418b90   464  cmp x16, x17
0xffff91418b94   468  b.ne #+0x30 (addr 0xffff91418bc4)
0xffff91418b98   472  ldur d30, [x2, #7]
0xffff91418b9c   476  fcvtzs x9, d30
0xffff91418ba0   480  cmp x9, #0x1 (1)
0xffff91418ba4   484  ccmn x9, #1, #nzcV, vc
0xffff91418ba8   488  b.vc #+0x18 (addr 0xffff91418bc0)
0xffff91418bac   492  sub csp, jssp, #0x8 (8)
0xffff91418bb0   496  str lr, [jssp, #-8]!
0xffff91418bb4   500  ldr x16, pc+212 (addr 0x0000ffff91418c88)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff91418bb8   504  blr x16
0xffff91418bbc   508  ldr lr, [jssp], #8
0xffff91418bc0   512  b #+0x24 (addr 0xffff91418be4)
0xffff91418bc4   516  ldp x9, x7, [x26, #64]
0xffff91418bc8   520  cmp x2, x9
0xffff91418bcc   524  cset x9, eq
0xffff91418bd0   528  ccmp x2, x7, #nZcv, ne
0xffff91418bd4   532  b.eq #+0x10 (addr 0xffff91418be4)
0xffff91418bd8   536  ldr x16, [x26, #40]
0xffff91418bdc   540  cmp x2, x16
0xffff91418be0   544  b.ne #+0x120 (addr 0xffff91418d00)
0xffff91418be4   548  ldr lr, [jssp, #16]
0xffff91418be8   552  ldp xzr, fp, [jssp], #24
0xffff91418bec   556  b #-0x1d4 (addr 0xffff91418a18)
0xffff91418bf0   560  sub csp, jssp, #0x10 (16)
0xffff91418bf4   564  stp fp, lr, [jssp, #-16]!
0xffff91418bf8   568  movz fp, #0xa00000000
0xffff91418bfc   572  sub csp, jssp, #0x8 (8)
0xffff91418c00   576  str fp, [jssp, #-8]!
0xffff91418c04   580  add fp, jssp, #0x8 (8)
0xffff91418c08   584  movz x9, #0x0
0xffff91418c0c   588  mov x16, lr
0xffff91418c10   592  ldr x17, pc+128 (addr 0x0000ffff91418c90)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91418c14   596  blr x17
0xffff91418c18   600  lsl x0, x3, #32
0xffff91418c1c   604  movz x10, #0x0
0xffff91418c20   608  sub csp, jssp, #0x10 (16)
0xffff91418c24   612  stp x10, x0, [jssp, #-16]!
0xffff91418c28   616  movz x0, #0x2
0xffff91418c2c   620  movz x1, #0x5b88
0xffff91418c30   624  movk x1, #0xe2, lsl #16
0xffff91418c34   628  ldr x16, pc+100 (addr 0x0000ffff91418c98)    ;; code: STUB, CEntryStub, minor: 5
0xffff91418c38   632  blr x16
0xffff91418c3c   636  str x0, [jssp, #72]
0xffff91418c40   640  ldr x16, pc+96 (addr 0x0000ffff91418ca0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91418c44   644  blr x16
0xffff91418c48   648  ldr lr, [jssp, #16]
0xffff91418c4c   652  ldp xzr, fp, [jssp], #24
0xffff91418c50   656  b #-0x1f4 (addr 0xffff91418a5c)
0xffff91418c54   660  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff91418c58   664  d63f03e0       constant
0xffff91418c5c   668  d503201f       constant
0xffff91418c60   672  36404259       constant
0xffff91418c64   676  00000000       constant
0xffff91418c68   680  36404259       constant
0xffff91418c6c   684  00000000       constant
0xffff91418c70   688  49b04519       constant
0xffff91418c74   692  00000000       constant
0xffff91418c78   696  914170c0       constant
0xffff91418c7c   700  0000ffff       constant
0xffff91418c80   704  91416760       constant
0xffff91418c84   708  0000ffff       constant
0xffff91418c88   712  914178a0       constant
0xffff91418c8c   716  0000ffff       constant
0xffff91418c90   720  91406820       constant
0xffff91418c94   724  0000ffff       constant
0xffff91418c98   728  91406260       constant
0xffff91418c9c   732  0000ffff       constant
0xffff91418ca0   736  914068e0       constant
0xffff91418ca4   740  0000ffff       constant
0xffff91418ca8   744  movz x16, #0x0
0xffff91418cac   748  sub csp, jssp, #0x10 (16)
0xffff91418cb0   752  stp fp, lr, [jssp, #-16]!
0xffff91418cb4   756  bl #+0x54 (addr 0xffff91418d08)
0xffff91418cb8   760  movz x16, #0x8
0xffff91418cbc   764  sub csp, jssp, #0x10 (16)
0xffff91418cc0   768  stp fp, lr, [jssp, #-16]!
0xffff91418cc4   772  bl #+0x44 (addr 0xffff91418d08)
0xffff91418cc8   776  movz x16, #0x10
0xffff91418ccc   780  sub csp, jssp, #0x10 (16)
0xffff91418cd0   784  stp fp, lr, [jssp, #-16]!
0xffff91418cd4   788  bl #+0x34 (addr 0xffff91418d08)
0xffff91418cd8   792  movz x16, #0x18
0xffff91418cdc   796  sub csp, jssp, #0x10 (16)
0xffff91418ce0   800  stp fp, lr, [jssp, #-16]!
0xffff91418ce4   804  bl #+0x24 (addr 0xffff91418d08)
0xffff91418ce8   808  movz x16, #0x20
0xffff91418cec   812  sub csp, jssp, #0x10 (16)
0xffff91418cf0   816  stp fp, lr, [jssp, #-16]!
0xffff91418cf4   820  bl #+0x14 (addr 0xffff91418d08)
0xffff91418cf8   824  movz x16, #0x28
0xffff91418cfc   828  bl #+0x1c (addr 0xffff91418d18)
0xffff91418d00   832  movz x16, #0x30
0xffff91418d04   836  bl #+0x14 (addr 0xffff91418d18)
0xffff91418d08   840  movz x17, #0xa00000000
0xffff91418d0c   844  sub csp, jssp, #0x10 (16)
0xffff91418d10   848  stp x17, cp, [jssp, #-16]!
0xffff91418d14   852  add fp, jssp, #0x10 (16)
0xffff91418d18   856  ldr x17, pc+24 (addr 0x0000ffff91418d30)    ;; lazy deoptimization bailout 0
0xffff91418d1c   860  add x17, x17, x16
0xffff91418d20   864  br x17
0xffff91418d24   868  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91418d28   872  d63f03e0       constant
0xffff91418d2c   876  d503201f       constant
0xffff91418d30   880  91206000       constant
0xffff91418d34   884  0000ffff       constant


Safepoints (size = 21)
0xffff91418c3c   636  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff914189c8  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418a5c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418a78  embedded object  (0x49b04519 <the hole>)
0xffff91418ac8  code target (STUB)  (0xffff914170c0)
0xffff91418b18  code target (STUB)  (0xffff91416760)
0xffff91418bb4  code target (STUB)  (0xffff914178a0)
0xffff91418c10  code target (STUB)  (0xffff91406820)
0xffff91418c34  code target (STUB)  (0xffff91406260)
0xffff91418c40  code target (STUB)  (0xffff914068e0)
0xffff91418c54  constant pool (size 84)
0xffff91418d18  runtime entry
0xffff91418d24  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff91418dc0     0  ldur x5, [x1, #15]
0xffff91418dc4     4  ldur x6, [x5, #-1]
0xffff91418dc8     8  ldr x16, pc+152 (addr 0x0000ffff91418e60)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91418dcc    12  cmp x6, x16
0xffff91418dd0    16  b.ne #+0xa0 (addr 0xffff91418e70)
0xffff91418dd4    20  ldur w6, [x1, #27]
0xffff91418dd8    24  tbnz w2, #0, #+0x54 (addr 0xffff91418e2c)
0xffff91418ddc    28  asr x8, x2, #32
0xffff91418de0    32  cmp w8, w6
0xffff91418de4    36  b.hs #+0x9c (addr 0xffff91418e80)
0xffff91418de8    40  mov x1, x0
0xffff91418dec    44  add x2, x5, #0xf (15)
0xffff91418df0    48  str x1, [x2, w8, sxtw #3]
0xffff91418df4    52  add x2, x2, w8, sxtw #3
0xffff91418df8    56  tbz w1, #0, #+0x30 (addr 0xffff91418e28)
0xffff91418dfc    60  and x1, x1, #0xfffffffffff00000
0xffff91418e00    64  ldr x1, [x1, #8]
0xffff91418e04    68  tbz w1, #1, #+0x24 (addr 0xffff91418e28)
0xffff91418e08    72  and x1, x5, #0xfffffffffff00000
0xffff91418e0c    76  ldr x1, [x1, #8]
0xffff91418e10    80  tbz w1, #2, #+0x18 (addr 0xffff91418e28)
0xffff91418e14    84  sub csp, jssp, #0x8 (8)
0xffff91418e18    88  str lr, [jssp, #-8]!
0xffff91418e1c    92  ldr x16, pc+76 (addr 0x0000ffff91418e68)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff91418e20    96  blr x16
0xffff91418e24   100  ldr lr, [jssp], #8
0xffff91418e28   104  ret
0xffff91418e2c   108  ldur x16, [x2, #-1]
0xffff91418e30   112  ldr x17, [x26, #120]
0xffff91418e34   116  cmp x16, x17
0xffff91418e38   120  b.ne #+0x58 (addr 0xffff91418e90)
0xffff91418e3c   124  ldur d29, [x2, #7]
0xffff91418e40   128  fcvtzs w8, d29
0xffff91418e44   132  scvtf d0, w8
0xffff91418e48   136  fcmp d29, d0
0xffff91418e4c   140  b.ne #+0x44 (addr 0xffff91418e90)
0xffff91418e50   144  b #-0x70 (addr 0xffff91418de0)
0xffff91418e54   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff91418e58   152  d63f03e0       constant
0xffff91418e5c   156  d503201f       constant
0xffff91418e60   160  36404259       constant
0xffff91418e64   164  00000000       constant
0xffff91418e68   168  91416760       constant
0xffff91418e6c   172  0000ffff       constant
0xffff91418e70   176  movz x16, #0x0
0xffff91418e74   180  sub csp, jssp, #0x10 (16)
0xffff91418e78   184  stp fp, lr, [jssp, #-16]!
0xffff91418e7c   188  bl #+0x24 (addr 0xffff91418ea0)
0xffff91418e80   192  movz x16, #0x8
0xffff91418e84   196  sub csp, jssp, #0x10 (16)
0xffff91418e88   200  stp fp, lr, [jssp, #-16]!
0xffff91418e8c   204  bl #+0x14 (addr 0xffff91418ea0)
0xffff91418e90   208  movz x16, #0x10
0xffff91418e94   212  sub csp, jssp, #0x10 (16)
0xffff91418e98   216  stp fp, lr, [jssp, #-16]!
0xffff91418e9c   220  bl #+0x4 (addr 0xffff91418ea0)
0xffff91418ea0   224  movz x17, #0xa00000000
0xffff91418ea4   228  sub csp, jssp, #0x10 (16)
0xffff91418ea8   232  stp x17, cp, [jssp, #-16]!
0xffff91418eac   236  add fp, jssp, #0x10 (16)
0xffff91418eb0   240  ldr x17, pc+24 (addr 0x0000ffff91418ec8)    ;; lazy deoptimization bailout 0
0xffff91418eb4   244  add x17, x17, x16
0xffff91418eb8   248  br x17
0xffff91418ebc   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91418ec0   256  d63f03e0       constant
0xffff91418ec4   260  d503201f       constant
0xffff91418ec8   264  91206000       constant
0xffff91418ecc   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff91418dc8  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418e1c  code target (STUB)  (0xffff91416760)
0xffff91418e54  constant pool (size 28)
0xffff91418eb0  runtime entry
0xffff91418ebc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff91418dc0     0  ldur x5, [x1, #15]
0xffff91418dc4     4  ldur x6, [x5, #-1]
0xffff91418dc8     8  ldr x16, pc+152 (addr 0x0000ffff91418e60)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91418dcc    12  cmp x6, x16
0xffff91418dd0    16  b.ne #+0xa0 (addr 0xffff91418e70)
0xffff91418dd4    20  ldur w6, [x1, #27]
0xffff91418dd8    24  tbnz w2, #0, #+0x54 (addr 0xffff91418e2c)
0xffff91418ddc    28  asr x8, x2, #32
0xffff91418de0    32  cmp w8, w6
0xffff91418de4    36  b.hs #+0x9c (addr 0xffff91418e80)
0xffff91418de8    40  mov x1, x0
0xffff91418dec    44  add x2, x5, #0xf (15)
0xffff91418df0    48  str x1, [x2, w8, sxtw #3]
0xffff91418df4    52  add x2, x2, w8, sxtw #3
0xffff91418df8    56  tbz w1, #0, #+0x30 (addr 0xffff91418e28)
0xffff91418dfc    60  and x1, x1, #0xfffffffffff00000
0xffff91418e00    64  ldr x1, [x1, #8]
0xffff91418e04    68  tbz w1, #1, #+0x24 (addr 0xffff91418e28)
0xffff91418e08    72  and x1, x5, #0xfffffffffff00000
0xffff91418e0c    76  ldr x1, [x1, #8]
0xffff91418e10    80  tbz w1, #2, #+0x18 (addr 0xffff91418e28)
0xffff91418e14    84  sub csp, jssp, #0x8 (8)
0xffff91418e18    88  str lr, [jssp, #-8]!
0xffff91418e1c    92  ldr x16, pc+76 (addr 0x0000ffff91418e68)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff91418e20    96  blr x16
0xffff91418e24   100  ldr lr, [jssp], #8
0xffff91418e28   104  ret
0xffff91418e2c   108  ldur x16, [x2, #-1]
0xffff91418e30   112  ldr x17, [x26, #120]
0xffff91418e34   116  cmp x16, x17
0xffff91418e38   120  b.ne #+0x58 (addr 0xffff91418e90)
0xffff91418e3c   124  ldur d29, [x2, #7]
0xffff91418e40   128  fcvtzs w8, d29
0xffff91418e44   132  scvtf d0, w8
0xffff91418e48   136  fcmp d29, d0
0xffff91418e4c   140  b.ne #+0x44 (addr 0xffff91418e90)
0xffff91418e50   144  b #-0x70 (addr 0xffff91418de0)
0xffff91418e54   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff91418e58   152  d63f03e0       constant
0xffff91418e5c   156  d503201f       constant
0xffff91418e60   160  36404259       constant
0xffff91418e64   164  00000000       constant
0xffff91418e68   168  91416760       constant
0xffff91418e6c   172  0000ffff       constant
0xffff91418e70   176  movz x16, #0x0
0xffff91418e74   180  sub csp, jssp, #0x10 (16)
0xffff91418e78   184  stp fp, lr, [jssp, #-16]!
0xffff91418e7c   188  bl #+0x24 (addr 0xffff91418ea0)
0xffff91418e80   192  movz x16, #0x8
0xffff91418e84   196  sub csp, jssp, #0x10 (16)
0xffff91418e88   200  stp fp, lr, [jssp, #-16]!
0xffff91418e8c   204  bl #+0x14 (addr 0xffff91418ea0)
0xffff91418e90   208  movz x16, #0x10
0xffff91418e94   212  sub csp, jssp, #0x10 (16)
0xffff91418e98   216  stp fp, lr, [jssp, #-16]!
0xffff91418e9c   220  bl #+0x4 (addr 0xffff91418ea0)
0xffff91418ea0   224  movz x17, #0xa00000000
0xffff91418ea4   228  sub csp, jssp, #0x10 (16)
0xffff91418ea8   232  stp x17, cp, [jssp, #-16]!
0xffff91418eac   236  add fp, jssp, #0x10 (16)
0xffff91418eb0   240  ldr x17, pc+24 (addr 0x0000ffff91418ec8)    ;; lazy deoptimization bailout 0
0xffff91418eb4   244  add x17, x17, x16
0xffff91418eb8   248  br x17
0xffff91418ebc   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91418ec0   256  d63f03e0       constant
0xffff91418ec4   260  d503201f       constant
0xffff91418ec8   264  91206000       constant
0xffff91418ecc   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff91418dc8  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418e1c  code target (STUB)  (0xffff91416760)
0xffff91418e54  constant pool (size 28)
0xffff91418eb0  runtime entry
0xffff91418ebc  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 909)
0xffff91418f40     0  ldur x5, [x1, #15]
0xffff91418f44     4  ldur x6, [x5, #-1]
0xffff91418f48     8  ldr x16, pc+664 (addr 0x0000ffff914191e0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91418f4c    12  cmp x6, x16
0xffff91418f50    16  b.ne #+0x2d8 (addr 0xffff91419228)
0xffff91418f54    20  ldur w6, [x1, #27]
0xffff91418f58    24  tbnz w2, #0, #+0x150 (addr 0xffff914190a8)
0xffff91418f5c    28  asr x8, x2, #32
0xffff91418f60    32  cmp w6, w8
0xffff91418f64    36  b.le #+0x10 (addr 0xffff91418f74)
0xffff91418f68    40  cmp w8, w6
0xffff91418f6c    44  b.hs #+0x2cc (addr 0xffff91419238)
0xffff91418f70    48  b #+0xf4 (addr 0xffff91419064)
0xffff91418f74    52  ldur w7, [x5, #11]
0xffff91418f78    56  cmp w7, w8
0xffff91418f7c    60  b.gt #+0xdc (addr 0xffff91419058)
0xffff91418f80    64  adds w7, w7, #0x400 (1024)
0xffff91418f84    68  b.vs #+0x2c4 (addr 0xffff91419248)
0xffff91418f88    72  cmp w8, w7
0xffff91418f8c    76  b.hs #+0x2cc (addr 0xffff91419258)
0xffff91418f90    80  tbnz w2, #0, #+0x160 (addr 0xffff914190f0)
0xffff91418f94    84  asr x9, x2, #32
0xffff91418f98    88  add w7, w8, w9, lsr #1
0xffff91418f9c    92  add w7, w7, #0x10 (16)
0xffff91418fa0    96  movz w16, #0x95ff
0xffff91418fa4   100  cmp w7, w16, lsl #1
0xffff91418fa8   104  b.hs #+0x2c0 (addr 0xffff91419268)
0xffff91418fac   108  lsl x2, x7, #32
0xffff91418fb0   112  lsl w3, w7, #3
0xffff91418fb4   116  add w3, w3, #0x10 (16)
0xffff91418fb8   120  sxtw x3, w3
0xffff91418fbc   124  movz x4, #0xf2c0
0xffff91418fc0   128  movk x4, #0x4117, lsl #16
0xffff91418fc4   132  ldp x9, x16, [x4]
0xffff91418fc8   136  adds x7, x9, x3
0xffff91418fcc   140  ccmp x7, x16, #nzCv, lo
0xffff91418fd0   144  b.hi #+0x1a0 (addr 0xffff91419170)
0xffff91418fd4   148  str x7, [x4]
0xffff91418fd8   152  orr x9, x9, #0x1
0xffff91418fdc   156  ldr x3, pc+524 (addr 0x0000ffff914191e8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91418fe0   160  stur x3, [x9, #-1]
0xffff91418fe4   164  stur x2, [x9, #7]
0xffff91418fe8   168  ldur w2, [x9, #11]
0xffff91418fec   172  cmp w6, w2
0xffff91418ff0   176  b.ge #+0x18 (addr 0xffff91419008)
0xffff91418ff4   180  sub w2, w2, #0x1 (1)
0xffff91418ff8   184  ldr x3, pc+504 (addr 0x0000ffff914191f0)    ;; object: 0x49b04519 <the hole>
0xffff91418ffc   188  add x4, x9, #0xf (15)
0xffff91419000   192  str x3, [x4, w2, sxtw #3]
0xffff91419004   196  b #-0x18 (addr 0xffff91418fec)
0xffff91419008   200  cmp w6, #0x0 (0)
0xffff9141900c   204  b.le #+0x1c (addr 0xffff91419028)
0xffff91419010   208  sub w6, w6, #0x1 (1)
0xffff91419014   212  add x2, x5, #0xf (15)
0xffff91419018   216  ldr x3, [x2, w6, sxtw #3]
0xffff9141901c   220  add x2, x9, #0xf (15)
0xffff91419020   224  str x3, [x2, w6, sxtw #3]
0xffff91419024   228  b #-0x1c (addr 0xffff91419008)
0xffff91419028   232  mov x2, x9
0xffff9141902c   236  stur x2, [x1, #15]
0xffff91419030   240  add x3, x1, #0xf (15)
0xffff91419034   244  and x2, x1, #0xfffffffffff00000
0xffff91419038   248  ldr x2, [x2, #8]
0xffff9141903c   252  tbz w2, #2, #+0x18 (addr 0xffff91419054)
0xffff91419040   256  sub csp, jssp, #0x8 (8)
0xffff91419044   260  str lr, [jssp, #-8]!
0xffff91419048   264  ldr x16, pc+432 (addr 0x0000ffff914191f8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9141904c   268  blr x16
0xffff91419050   272  ldr lr, [jssp], #8
0xffff91419054   276  mov x5, x9
0xffff91419058   280  add w2, w8, #0x1 (1)
0xffff9141905c   284  lsl x2, x2, #32
0xffff91419060   288  stur x2, [x1, #23]
0xffff91419064   292  mov x1, x0
0xffff91419068   296  add x2, x5, #0xf (15)
0xffff9141906c   300  str x1, [x2, w8, sxtw #3]
0xffff91419070   304  add x2, x2, w8, sxtw #3
0xffff91419074   308  tbz w1, #0, #+0x30 (addr 0xffff914190a4)
0xffff91419078   312  and x1, x1, #0xfffffffffff00000
0xffff9141907c   316  ldr x1, [x1, #8]
0xffff91419080   320  tbz w1, #1, #+0x24 (addr 0xffff914190a4)
0xffff91419084   324  and x1, x5, #0xfffffffffff00000
0xffff91419088   328  ldr x1, [x1, #8]
0xffff9141908c   332  tbz w1, #2, #+0x18 (addr 0xffff914190a4)
0xffff91419090   336  sub csp, jssp, #0x8 (8)
0xffff91419094   340  str lr, [jssp, #-8]!
0xffff91419098   344  ldr x16, pc+360 (addr 0x0000ffff91419200)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff9141909c   348  blr x16
0xffff914190a0   352  ldr lr, [jssp], #8
0xffff914190a4   356  ret
0xffff914190a8   360  sub csp, jssp, #0x10 (16)
0xffff914190ac   364  stp fp, lr, [jssp, #-16]!
0xffff914190b0   368  movz fp, #0xa00000000
0xffff914190b4   372  sub csp, jssp, #0x8 (8)
0xffff914190b8   376  str fp, [jssp, #-8]!
0xffff914190bc   380  add fp, jssp, #0x8 (8)
0xffff914190c0   384  ldur x16, [x2, #-1]
0xffff914190c4   388  ldr x17, [x26, #120]
0xffff914190c8   392  cmp x16, x17
0xffff914190cc   396  b.ne #+0x1ac (addr 0xffff91419278)
0xffff914190d0   400  ldur d29, [x2, #7]
0xffff914190d4   404  fcvtzs w8, d29
0xffff914190d8   408  scvtf d0, w8
0xffff914190dc   412  fcmp d29, d0
0xffff914190e0   416  b.ne #+0x198 (addr 0xffff91419278)
0xffff914190e4   420  ldr lr, [jssp, #16]
0xffff914190e8   424  ldp xzr, fp, [jssp], #24
0xffff914190ec   428  b #-0x18c (addr 0xffff91418f60)
0xffff914190f0   432  sub csp, jssp, #0x10 (16)
0xffff914190f4   436  stp fp, lr, [jssp, #-16]!
0xffff914190f8   440  movz fp, #0xa00000000
0xffff914190fc   444  sub csp, jssp, #0x8 (8)
0xffff91419100   448  str fp, [jssp, #-8]!
0xffff91419104   452  add fp, jssp, #0x8 (8)
0xffff91419108   456  ldur x16, [x2, #-1]
0xffff9141910c   460  ldr x17, [x26, #120]
0xffff91419110   464  cmp x16, x17
0xffff91419114   468  b.ne #+0x30 (addr 0xffff91419144)
0xffff91419118   472  ldur d30, [x2, #7]
0xffff9141911c   476  fcvtzs x9, d30
0xffff91419120   480  cmp x9, #0x1 (1)
0xffff91419124   484  ccmn x9, #1, #nzcV, vc
0xffff91419128   488  b.vc #+0x18 (addr 0xffff91419140)
0xffff9141912c   492  sub csp, jssp, #0x8 (8)
0xffff91419130   496  str lr, [jssp, #-8]!
0xffff91419134   500  ldr x16, pc+212 (addr 0x0000ffff91419208)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff91419138   504  blr x16
0xffff9141913c   508  ldr lr, [jssp], #8
0xffff91419140   512  b #+0x24 (addr 0xffff91419164)
0xffff91419144   516  ldp x9, x7, [x26, #64]
0xffff91419148   520  cmp x2, x9
0xffff9141914c   524  cset x9, eq
0xffff91419150   528  ccmp x2, x7, #nZcv, ne
0xffff91419154   532  b.eq #+0x10 (addr 0xffff91419164)
0xffff91419158   536  ldr x16, [x26, #40]
0xffff9141915c   540  cmp x2, x16
0xffff91419160   544  b.ne #+0x120 (addr 0xffff91419280)
0xffff91419164   548  ldr lr, [jssp, #16]
0xffff91419168   552  ldp xzr, fp, [jssp], #24
0xffff9141916c   556  b #-0x1d4 (addr 0xffff91418f98)
0xffff91419170   560  sub csp, jssp, #0x10 (16)
0xffff91419174   564  stp fp, lr, [jssp, #-16]!
0xffff91419178   568  movz fp, #0xa00000000
0xffff9141917c   572  sub csp, jssp, #0x8 (8)
0xffff91419180   576  str fp, [jssp, #-8]!
0xffff91419184   580  add fp, jssp, #0x8 (8)
0xffff91419188   584  movz x9, #0x0
0xffff9141918c   588  mov x16, lr
0xffff91419190   592  ldr x17, pc+128 (addr 0x0000ffff91419210)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91419194   596  blr x17
0xffff91419198   600  lsl x0, x3, #32
0xffff9141919c   604  movz x10, #0x0
0xffff914191a0   608  sub csp, jssp, #0x10 (16)
0xffff914191a4   612  stp x10, x0, [jssp, #-16]!
0xffff914191a8   616  movz x0, #0x2
0xffff914191ac   620  movz x1, #0x5b88
0xffff914191b0   624  movk x1, #0xe2, lsl #16
0xffff914191b4   628  ldr x16, pc+100 (addr 0x0000ffff91419218)    ;; code: STUB, CEntryStub, minor: 5
0xffff914191b8   632  blr x16
0xffff914191bc   636  str x0, [jssp, #72]
0xffff914191c0   640  ldr x16, pc+96 (addr 0x0000ffff91419220)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914191c4   644  blr x16
0xffff914191c8   648  ldr lr, [jssp, #16]
0xffff914191cc   652  ldp xzr, fp, [jssp], #24
0xffff914191d0   656  b #-0x1f4 (addr 0xffff91418fdc)
0xffff914191d4   660  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff914191d8   664  d63f03e0       constant
0xffff914191dc   668  d503201f       constant
0xffff914191e0   672  36404259       constant
0xffff914191e4   676  00000000       constant
0xffff914191e8   680  36404259       constant
0xffff914191ec   684  00000000       constant
0xffff914191f0   688  49b04519       constant
0xffff914191f4   692  00000000       constant
0xffff914191f8   696  914170c0       constant
0xffff914191fc   700  0000ffff       constant
0xffff91419200   704  91416760       constant
0xffff91419204   708  0000ffff       constant
0xffff91419208   712  914178a0       constant
0xffff9141920c   716  0000ffff       constant
0xffff91419210   720  91406820       constant
0xffff91419214   724  0000ffff       constant
0xffff91419218   728  91406260       constant
0xffff9141921c   732  0000ffff       constant
0xffff91419220   736  914068e0       constant
0xffff91419224   740  0000ffff       constant
0xffff91419228   744  movz x16, #0x0
0xffff9141922c   748  sub csp, jssp, #0x10 (16)
0xffff91419230   752  stp fp, lr, [jssp, #-16]!
0xffff91419234   756  bl #+0x54 (addr 0xffff91419288)
0xffff91419238   760  movz x16, #0x8
0xffff9141923c   764  sub csp, jssp, #0x10 (16)
0xffff91419240   768  stp fp, lr, [jssp, #-16]!
0xffff91419244   772  bl #+0x44 (addr 0xffff91419288)
0xffff91419248   776  movz x16, #0x10
0xffff9141924c   780  sub csp, jssp, #0x10 (16)
0xffff91419250   784  stp fp, lr, [jssp, #-16]!
0xffff91419254   788  bl #+0x34 (addr 0xffff91419288)
0xffff91419258   792  movz x16, #0x18
0xffff9141925c   796  sub csp, jssp, #0x10 (16)
0xffff91419260   800  stp fp, lr, [jssp, #-16]!
0xffff91419264   804  bl #+0x24 (addr 0xffff91419288)
0xffff91419268   808  movz x16, #0x20
0xffff9141926c   812  sub csp, jssp, #0x10 (16)
0xffff91419270   816  stp fp, lr, [jssp, #-16]!
0xffff91419274   820  bl #+0x14 (addr 0xffff91419288)
0xffff91419278   824  movz x16, #0x28
0xffff9141927c   828  bl #+0x1c (addr 0xffff91419298)
0xffff91419280   832  movz x16, #0x30
0xffff91419284   836  bl #+0x14 (addr 0xffff91419298)
0xffff91419288   840  movz x17, #0xa00000000
0xffff9141928c   844  sub csp, jssp, #0x10 (16)
0xffff91419290   848  stp x17, cp, [jssp, #-16]!
0xffff91419294   852  add fp, jssp, #0x10 (16)
0xffff91419298   856  ldr x17, pc+24 (addr 0x0000ffff914192b0)    ;; lazy deoptimization bailout 0
0xffff9141929c   860  add x17, x17, x16
0xffff914192a0   864  br x17
0xffff914192a4   868  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914192a8   872  d63f03e0       constant
0xffff914192ac   876  d503201f       constant
0xffff914192b0   880  91206000       constant
0xffff914192b4   884  0000ffff       constant


Safepoints (size = 21)
0xffff914191bc   636  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff91418f48  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418fdc  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418ff8  embedded object  (0x49b04519 <the hole>)
0xffff91419048  code target (STUB)  (0xffff914170c0)
0xffff91419098  code target (STUB)  (0xffff91416760)
0xffff91419134  code target (STUB)  (0xffff914178a0)
0xffff91419190  code target (STUB)  (0xffff91406820)
0xffff914191b4  code target (STUB)  (0xffff91406260)
0xffff914191c0  code target (STUB)  (0xffff914068e0)
0xffff914191d4  constant pool (size 84)
0xffff91419298  runtime entry
0xffff914192a4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 909)
0xffff91418f40     0  ldur x5, [x1, #15]
0xffff91418f44     4  ldur x6, [x5, #-1]
0xffff91418f48     8  ldr x16, pc+664 (addr 0x0000ffff914191e0)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91418f4c    12  cmp x6, x16
0xffff91418f50    16  b.ne #+0x2d8 (addr 0xffff91419228)
0xffff91418f54    20  ldur w6, [x1, #27]
0xffff91418f58    24  tbnz w2, #0, #+0x150 (addr 0xffff914190a8)
0xffff91418f5c    28  asr x8, x2, #32
0xffff91418f60    32  cmp w6, w8
0xffff91418f64    36  b.le #+0x10 (addr 0xffff91418f74)
0xffff91418f68    40  cmp w8, w6
0xffff91418f6c    44  b.hs #+0x2cc (addr 0xffff91419238)
0xffff91418f70    48  b #+0xf4 (addr 0xffff91419064)
0xffff91418f74    52  ldur w7, [x5, #11]
0xffff91418f78    56  cmp w7, w8
0xffff91418f7c    60  b.gt #+0xdc (addr 0xffff91419058)
0xffff91418f80    64  adds w7, w7, #0x400 (1024)
0xffff91418f84    68  b.vs #+0x2c4 (addr 0xffff91419248)
0xffff91418f88    72  cmp w8, w7
0xffff91418f8c    76  b.hs #+0x2cc (addr 0xffff91419258)
0xffff91418f90    80  tbnz w2, #0, #+0x160 (addr 0xffff914190f0)
0xffff91418f94    84  asr x9, x2, #32
0xffff91418f98    88  add w7, w8, w9, lsr #1
0xffff91418f9c    92  add w7, w7, #0x10 (16)
0xffff91418fa0    96  movz w16, #0x95ff
0xffff91418fa4   100  cmp w7, w16, lsl #1
0xffff91418fa8   104  b.hs #+0x2c0 (addr 0xffff91419268)
0xffff91418fac   108  lsl x2, x7, #32
0xffff91418fb0   112  lsl w3, w7, #3
0xffff91418fb4   116  add w3, w3, #0x10 (16)
0xffff91418fb8   120  sxtw x3, w3
0xffff91418fbc   124  movz x4, #0xf2c0
0xffff91418fc0   128  movk x4, #0x4117, lsl #16
0xffff91418fc4   132  ldp x9, x16, [x4]
0xffff91418fc8   136  adds x7, x9, x3
0xffff91418fcc   140  ccmp x7, x16, #nzCv, lo
0xffff91418fd0   144  b.hi #+0x1a0 (addr 0xffff91419170)
0xffff91418fd4   148  str x7, [x4]
0xffff91418fd8   152  orr x9, x9, #0x1
0xffff91418fdc   156  ldr x3, pc+524 (addr 0x0000ffff914191e8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91418fe0   160  stur x3, [x9, #-1]
0xffff91418fe4   164  stur x2, [x9, #7]
0xffff91418fe8   168  ldur w2, [x9, #11]
0xffff91418fec   172  cmp w6, w2
0xffff91418ff0   176  b.ge #+0x18 (addr 0xffff91419008)
0xffff91418ff4   180  sub w2, w2, #0x1 (1)
0xffff91418ff8   184  ldr x3, pc+504 (addr 0x0000ffff914191f0)    ;; object: 0x49b04519 <the hole>
0xffff91418ffc   188  add x4, x9, #0xf (15)
0xffff91419000   192  str x3, [x4, w2, sxtw #3]
0xffff91419004   196  b #-0x18 (addr 0xffff91418fec)
0xffff91419008   200  cmp w6, #0x0 (0)
0xffff9141900c   204  b.le #+0x1c (addr 0xffff91419028)
0xffff91419010   208  sub w6, w6, #0x1 (1)
0xffff91419014   212  add x2, x5, #0xf (15)
0xffff91419018   216  ldr x3, [x2, w6, sxtw #3]
0xffff9141901c   220  add x2, x9, #0xf (15)
0xffff91419020   224  str x3, [x2, w6, sxtw #3]
0xffff91419024   228  b #-0x1c (addr 0xffff91419008)
0xffff91419028   232  mov x2, x9
0xffff9141902c   236  stur x2, [x1, #15]
0xffff91419030   240  add x3, x1, #0xf (15)
0xffff91419034   244  and x2, x1, #0xfffffffffff00000
0xffff91419038   248  ldr x2, [x2, #8]
0xffff9141903c   252  tbz w2, #2, #+0x18 (addr 0xffff91419054)
0xffff91419040   256  sub csp, jssp, #0x8 (8)
0xffff91419044   260  str lr, [jssp, #-8]!
0xffff91419048   264  ldr x16, pc+432 (addr 0x0000ffff914191f8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9141904c   268  blr x16
0xffff91419050   272  ldr lr, [jssp], #8
0xffff91419054   276  mov x5, x9
0xffff91419058   280  add w2, w8, #0x1 (1)
0xffff9141905c   284  lsl x2, x2, #32
0xffff91419060   288  stur x2, [x1, #23]
0xffff91419064   292  mov x1, x0
0xffff91419068   296  add x2, x5, #0xf (15)
0xffff9141906c   300  str x1, [x2, w8, sxtw #3]
0xffff91419070   304  add x2, x2, w8, sxtw #3
0xffff91419074   308  tbz w1, #0, #+0x30 (addr 0xffff914190a4)
0xffff91419078   312  and x1, x1, #0xfffffffffff00000
0xffff9141907c   316  ldr x1, [x1, #8]
0xffff91419080   320  tbz w1, #1, #+0x24 (addr 0xffff914190a4)
0xffff91419084   324  and x1, x5, #0xfffffffffff00000
0xffff91419088   328  ldr x1, [x1, #8]
0xffff9141908c   332  tbz w1, #2, #+0x18 (addr 0xffff914190a4)
0xffff91419090   336  sub csp, jssp, #0x8 (8)
0xffff91419094   340  str lr, [jssp, #-8]!
0xffff91419098   344  ldr x16, pc+360 (addr 0x0000ffff91419200)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff9141909c   348  blr x16
0xffff914190a0   352  ldr lr, [jssp], #8
0xffff914190a4   356  ret
0xffff914190a8   360  sub csp, jssp, #0x10 (16)
0xffff914190ac   364  stp fp, lr, [jssp, #-16]!
0xffff914190b0   368  movz fp, #0xa00000000
0xffff914190b4   372  sub csp, jssp, #0x8 (8)
0xffff914190b8   376  str fp, [jssp, #-8]!
0xffff914190bc   380  add fp, jssp, #0x8 (8)
0xffff914190c0   384  ldur x16, [x2, #-1]
0xffff914190c4   388  ldr x17, [x26, #120]
0xffff914190c8   392  cmp x16, x17
0xffff914190cc   396  b.ne #+0x1ac (addr 0xffff91419278)
0xffff914190d0   400  ldur d29, [x2, #7]
0xffff914190d4   404  fcvtzs w8, d29
0xffff914190d8   408  scvtf d0, w8
0xffff914190dc   412  fcmp d29, d0
0xffff914190e0   416  b.ne #+0x198 (addr 0xffff91419278)
0xffff914190e4   420  ldr lr, [jssp, #16]
0xffff914190e8   424  ldp xzr, fp, [jssp], #24
0xffff914190ec   428  b #-0x18c (addr 0xffff91418f60)
0xffff914190f0   432  sub csp, jssp, #0x10 (16)
0xffff914190f4   436  stp fp, lr, [jssp, #-16]!
0xffff914190f8   440  movz fp, #0xa00000000
0xffff914190fc   444  sub csp, jssp, #0x8 (8)
0xffff91419100   448  str fp, [jssp, #-8]!
0xffff91419104   452  add fp, jssp, #0x8 (8)
0xffff91419108   456  ldur x16, [x2, #-1]
0xffff9141910c   460  ldr x17, [x26, #120]
0xffff91419110   464  cmp x16, x17
0xffff91419114   468  b.ne #+0x30 (addr 0xffff91419144)
0xffff91419118   472  ldur d30, [x2, #7]
0xffff9141911c   476  fcvtzs x9, d30
0xffff91419120   480  cmp x9, #0x1 (1)
0xffff91419124   484  ccmn x9, #1, #nzcV, vc
0xffff91419128   488  b.vc #+0x18 (addr 0xffff91419140)
0xffff9141912c   492  sub csp, jssp, #0x8 (8)
0xffff91419130   496  str lr, [jssp, #-8]!
0xffff91419134   500  ldr x16, pc+212 (addr 0x0000ffff91419208)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff91419138   504  blr x16
0xffff9141913c   508  ldr lr, [jssp], #8
0xffff91419140   512  b #+0x24 (addr 0xffff91419164)
0xffff91419144   516  ldp x9, x7, [x26, #64]
0xffff91419148   520  cmp x2, x9
0xffff9141914c   524  cset x9, eq
0xffff91419150   528  ccmp x2, x7, #nZcv, ne
0xffff91419154   532  b.eq #+0x10 (addr 0xffff91419164)
0xffff91419158   536  ldr x16, [x26, #40]
0xffff9141915c   540  cmp x2, x16
0xffff91419160   544  b.ne #+0x120 (addr 0xffff91419280)
0xffff91419164   548  ldr lr, [jssp, #16]
0xffff91419168   552  ldp xzr, fp, [jssp], #24
0xffff9141916c   556  b #-0x1d4 (addr 0xffff91418f98)
0xffff91419170   560  sub csp, jssp, #0x10 (16)
0xffff91419174   564  stp fp, lr, [jssp, #-16]!
0xffff91419178   568  movz fp, #0xa00000000
0xffff9141917c   572  sub csp, jssp, #0x8 (8)
0xffff91419180   576  str fp, [jssp, #-8]!
0xffff91419184   580  add fp, jssp, #0x8 (8)
0xffff91419188   584  movz x9, #0x0
0xffff9141918c   588  mov x16, lr
0xffff91419190   592  ldr x17, pc+128 (addr 0x0000ffff91419210)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91419194   596  blr x17
0xffff91419198   600  lsl x0, x3, #32
0xffff9141919c   604  movz x10, #0x0
0xffff914191a0   608  sub csp, jssp, #0x10 (16)
0xffff914191a4   612  stp x10, x0, [jssp, #-16]!
0xffff914191a8   616  movz x0, #0x2
0xffff914191ac   620  movz x1, #0x5b88
0xffff914191b0   624  movk x1, #0xe2, lsl #16
0xffff914191b4   628  ldr x16, pc+100 (addr 0x0000ffff91419218)    ;; code: STUB, CEntryStub, minor: 5
0xffff914191b8   632  blr x16
0xffff914191bc   636  str x0, [jssp, #72]
0xffff914191c0   640  ldr x16, pc+96 (addr 0x0000ffff91419220)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914191c4   644  blr x16
0xffff914191c8   648  ldr lr, [jssp, #16]
0xffff914191cc   652  ldp xzr, fp, [jssp], #24
0xffff914191d0   656  b #-0x1f4 (addr 0xffff91418fdc)
0xffff914191d4   660  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff914191d8   664  d63f03e0       constant
0xffff914191dc   668  d503201f       constant
0xffff914191e0   672  36404259       constant
0xffff914191e4   676  00000000       constant
0xffff914191e8   680  36404259       constant
0xffff914191ec   684  00000000       constant
0xffff914191f0   688  49b04519       constant
0xffff914191f4   692  00000000       constant
0xffff914191f8   696  914170c0       constant
0xffff914191fc   700  0000ffff       constant
0xffff91419200   704  91416760       constant
0xffff91419204   708  0000ffff       constant
0xffff91419208   712  914178a0       constant
0xffff9141920c   716  0000ffff       constant
0xffff91419210   720  91406820       constant
0xffff91419214   724  0000ffff       constant
0xffff91419218   728  91406260       constant
0xffff9141921c   732  0000ffff       constant
0xffff91419220   736  914068e0       constant
0xffff91419224   740  0000ffff       constant
0xffff91419228   744  movz x16, #0x0
0xffff9141922c   748  sub csp, jssp, #0x10 (16)
0xffff91419230   752  stp fp, lr, [jssp, #-16]!
0xffff91419234   756  bl #+0x54 (addr 0xffff91419288)
0xffff91419238   760  movz x16, #0x8
0xffff9141923c   764  sub csp, jssp, #0x10 (16)
0xffff91419240   768  stp fp, lr, [jssp, #-16]!
0xffff91419244   772  bl #+0x44 (addr 0xffff91419288)
0xffff91419248   776  movz x16, #0x10
0xffff9141924c   780  sub csp, jssp, #0x10 (16)
0xffff91419250   784  stp fp, lr, [jssp, #-16]!
0xffff91419254   788  bl #+0x34 (addr 0xffff91419288)
0xffff91419258   792  movz x16, #0x18
0xffff9141925c   796  sub csp, jssp, #0x10 (16)
0xffff91419260   800  stp fp, lr, [jssp, #-16]!
0xffff91419264   804  bl #+0x24 (addr 0xffff91419288)
0xffff91419268   808  movz x16, #0x20
0xffff9141926c   812  sub csp, jssp, #0x10 (16)
0xffff91419270   816  stp fp, lr, [jssp, #-16]!
0xffff91419274   820  bl #+0x14 (addr 0xffff91419288)
0xffff91419278   824  movz x16, #0x28
0xffff9141927c   828  bl #+0x1c (addr 0xffff91419298)
0xffff91419280   832  movz x16, #0x30
0xffff91419284   836  bl #+0x14 (addr 0xffff91419298)
0xffff91419288   840  movz x17, #0xa00000000
0xffff9141928c   844  sub csp, jssp, #0x10 (16)
0xffff91419290   848  stp x17, cp, [jssp, #-16]!
0xffff91419294   852  add fp, jssp, #0x10 (16)
0xffff91419298   856  ldr x17, pc+24 (addr 0x0000ffff914192b0)    ;; lazy deoptimization bailout 0
0xffff9141929c   860  add x17, x17, x16
0xffff914192a0   864  br x17
0xffff914192a4   868  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914192a8   872  d63f03e0       constant
0xffff914192ac   876  d503201f       constant
0xffff914192b0   880  91206000       constant
0xffff914192b4   884  0000ffff       constant


Safepoints (size = 21)
0xffff914191bc   636  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff91418f48  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418fdc  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91418ff8  embedded object  (0x49b04519 <the hole>)
0xffff91419048  code target (STUB)  (0xffff914170c0)
0xffff91419098  code target (STUB)  (0xffff91416760)
0xffff91419134  code target (STUB)  (0xffff914178a0)
0xffff91419190  code target (STUB)  (0xffff91406820)
0xffff914191b4  code target (STUB)  (0xffff91406260)
0xffff914191c0  code target (STUB)  (0xffff914068e0)
0xffff914191d4  constant pool (size 84)
0xffff91419298  runtime entry
0xffff914192a4  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff91419340     0  ldur x5, [x1, #15]
0xffff91419344     4  ldur w6, [x1, #27]
0xffff91419348     8  tbnz w2, #0, #+0x40 (addr 0xffff91419388)
0xffff9141934c    12  asr x8, x2, #32
0xffff91419350    16  cmp w8, w6
0xffff91419354    20  b.hs #+0x5c (addr 0xffff914193b0)
0xffff91419358    24  tbz w0, #0, #+0x1c (addr 0xffff91419374)
0xffff9141935c    28  ldur x16, [x0, #-1]
0xffff91419360    32  ldr x17, [x26, #120]
0xffff91419364    36  cmp x16, x17
0xffff91419368    40  b.ne #+0x58 (addr 0xffff914193c0)
0xffff9141936c    44  ldur d0, [x0, #7]
0xffff91419370    48  b #+0x8 (addr 0xffff91419378)
0xffff91419374    52  scvtf d0, x0, #32
0xffff91419378    56  add x1, x5, #0xf (15)
0xffff9141937c    60  fsub d29, d0, d15
0xffff91419380    64  str d29, [x1, w8, sxtw #3]
0xffff91419384    68  ret
0xffff91419388    72  ldur x16, [x2, #-1]
0xffff9141938c    76  ldr x17, [x26, #120]
0xffff91419390    80  cmp x16, x17
0xffff91419394    84  b.ne #+0x3c (addr 0xffff914193d0)
0xffff91419398    88  ldur d29, [x2, #7]
0xffff9141939c    92  fcvtzs w8, d29
0xffff914193a0    96  scvtf d0, w8
0xffff914193a4   100  fcmp d29, d0
0xffff914193a8   104  b.ne #+0x28 (addr 0xffff914193d0)
0xffff914193ac   108  b #-0x5c (addr 0xffff91419350)
0xffff914193b0   112  movz x16, #0x0
0xffff914193b4   116  sub csp, jssp, #0x10 (16)
0xffff914193b8   120  stp fp, lr, [jssp, #-16]!
0xffff914193bc   124  bl #+0x24 (addr 0xffff914193e0)
0xffff914193c0   128  movz x16, #0x8
0xffff914193c4   132  sub csp, jssp, #0x10 (16)
0xffff914193c8   136  stp fp, lr, [jssp, #-16]!
0xffff914193cc   140  bl #+0x14 (addr 0xffff914193e0)
0xffff914193d0   144  movz x16, #0x10
0xffff914193d4   148  sub csp, jssp, #0x10 (16)
0xffff914193d8   152  stp fp, lr, [jssp, #-16]!
0xffff914193dc   156  bl #+0x4 (addr 0xffff914193e0)
0xffff914193e0   160  movz x17, #0xa00000000
0xffff914193e4   164  sub csp, jssp, #0x10 (16)
0xffff914193e8   168  stp x17, cp, [jssp, #-16]!
0xffff914193ec   172  add fp, jssp, #0x10 (16)
0xffff914193f0   176  ldr x17, pc+24 (addr 0x0000ffff91419408)    ;; lazy deoptimization bailout 0
0xffff914193f4   180  add x17, x17, x16
0xffff914193f8   184  br x17
0xffff914193fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91419400   192  d63f03e0       constant
0xffff91419404   196  d503201f       constant
0xffff91419408   200  91206000       constant
0xffff9141940c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914193f0  runtime entry
0xffff914193fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff91419340     0  ldur x5, [x1, #15]
0xffff91419344     4  ldur w6, [x1, #27]
0xffff91419348     8  tbnz w2, #0, #+0x40 (addr 0xffff91419388)
0xffff9141934c    12  asr x8, x2, #32
0xffff91419350    16  cmp w8, w6
0xffff91419354    20  b.hs #+0x5c (addr 0xffff914193b0)
0xffff91419358    24  tbz w0, #0, #+0x1c (addr 0xffff91419374)
0xffff9141935c    28  ldur x16, [x0, #-1]
0xffff91419360    32  ldr x17, [x26, #120]
0xffff91419364    36  cmp x16, x17
0xffff91419368    40  b.ne #+0x58 (addr 0xffff914193c0)
0xffff9141936c    44  ldur d0, [x0, #7]
0xffff91419370    48  b #+0x8 (addr 0xffff91419378)
0xffff91419374    52  scvtf d0, x0, #32
0xffff91419378    56  add x1, x5, #0xf (15)
0xffff9141937c    60  fsub d29, d0, d15
0xffff91419380    64  str d29, [x1, w8, sxtw #3]
0xffff91419384    68  ret
0xffff91419388    72  ldur x16, [x2, #-1]
0xffff9141938c    76  ldr x17, [x26, #120]
0xffff91419390    80  cmp x16, x17
0xffff91419394    84  b.ne #+0x3c (addr 0xffff914193d0)
0xffff91419398    88  ldur d29, [x2, #7]
0xffff9141939c    92  fcvtzs w8, d29
0xffff914193a0    96  scvtf d0, w8
0xffff914193a4   100  fcmp d29, d0
0xffff914193a8   104  b.ne #+0x28 (addr 0xffff914193d0)
0xffff914193ac   108  b #-0x5c (addr 0xffff91419350)
0xffff914193b0   112  movz x16, #0x0
0xffff914193b4   116  sub csp, jssp, #0x10 (16)
0xffff914193b8   120  stp fp, lr, [jssp, #-16]!
0xffff914193bc   124  bl #+0x24 (addr 0xffff914193e0)
0xffff914193c0   128  movz x16, #0x8
0xffff914193c4   132  sub csp, jssp, #0x10 (16)
0xffff914193c8   136  stp fp, lr, [jssp, #-16]!
0xffff914193cc   140  bl #+0x14 (addr 0xffff914193e0)
0xffff914193d0   144  movz x16, #0x10
0xffff914193d4   148  sub csp, jssp, #0x10 (16)
0xffff914193d8   152  stp fp, lr, [jssp, #-16]!
0xffff914193dc   156  bl #+0x4 (addr 0xffff914193e0)
0xffff914193e0   160  movz x17, #0xa00000000
0xffff914193e4   164  sub csp, jssp, #0x10 (16)
0xffff914193e8   168  stp x17, cp, [jssp, #-16]!
0xffff914193ec   172  add fp, jssp, #0x10 (16)
0xffff914193f0   176  ldr x17, pc+24 (addr 0x0000ffff91419408)    ;; lazy deoptimization bailout 0
0xffff914193f4   180  add x17, x17, x16
0xffff914193f8   184  br x17
0xffff914193fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91419400   192  d63f03e0       constant
0xffff91419404   196  d503201f       constant
0xffff91419408   200  91206000       constant
0xffff9141940c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914193f0  runtime entry
0xffff914193fc  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 853)
0xffff91419480     0  ldur x5, [x1, #15]
0xffff91419484     4  ldur w6, [x1, #27]
0xffff91419488     8  tbz w0, #0, #+0x1c (addr 0xffff914194a4)
0xffff9141948c    12  ldur x16, [x0, #-1]
0xffff91419490    16  ldr x17, [x26, #120]
0xffff91419494    20  cmp x16, x17
0xffff91419498    24  b.ne #+0x298 (addr 0xffff91419730)
0xffff9141949c    28  ldur d0, [x0, #7]
0xffff914194a0    32  b #+0x8 (addr 0xffff914194a8)
0xffff914194a4    36  scvtf d0, x0, #32
0xffff914194a8    40  tbnz w2, #0, #+0x11c (addr 0xffff914195c4)
0xffff914194ac    44  asr x8, x2, #32
0xffff914194b0    48  cmp w6, w8
0xffff914194b4    52  b.eq #+0x10 (addr 0xffff914194c4)
0xffff914194b8    56  cmp w8, w6
0xffff914194bc    60  b.hs #+0x284 (addr 0xffff91419740)
0xffff914194c0    64  b #+0xf4 (addr 0xffff914195b4)
0xffff914194c4    68  ldur w7, [x5, #11]
0xffff914194c8    72  cmp w7, w8
0xffff914194cc    76  b.gt #+0xdc (addr 0xffff914195a8)
0xffff914194d0    80  adds w7, w7, #0x400 (1024)
0xffff914194d4    84  b.vs #+0x27c (addr 0xffff91419750)
0xffff914194d8    88  cmp w8, w7
0xffff914194dc    92  b.hs #+0x284 (addr 0xffff91419760)
0xffff914194e0    96  tbnz w2, #0, #+0x12c (addr 0xffff9141960c)
0xffff914194e4   100  asr x9, x2, #32
0xffff914194e8   104  add w7, w8, w9, lsr #1
0xffff914194ec   108  add w7, w7, #0x10 (16)
0xffff914194f0   112  movz w16, #0x95ff
0xffff914194f4   116  cmp w7, w16, lsl #1
0xffff914194f8   120  b.hs #+0x278 (addr 0xffff91419770)
0xffff914194fc   124  lsl x2, x7, #32
0xffff91419500   128  lsl w3, w7, #3
0xffff91419504   132  add w3, w3, #0x10 (16)
0xffff91419508   136  sxtw x3, w3
0xffff9141950c   140  movz x4, #0xf2c0
0xffff91419510   144  movk x4, #0x4117, lsl #16
0xffff91419514   148  ldp x9, x16, [x4]
0xffff91419518   152  adds x7, x9, x3
0xffff9141951c   156  ccmp x7, x16, #nzCv, lo
0xffff91419520   160  b.hi #+0x16c (addr 0xffff9141968c)
0xffff91419524   164  str x7, [x4]
0xffff91419528   168  orr x9, x9, #0x1
0xffff9141952c   172  ldr x3, pc+468 (addr 0x0000ffff91419700)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419530   176  stur x3, [x9, #-1]
0xffff91419534   180  stur x2, [x9, #7]
0xffff91419538   184  ldr d1, pc+448 (addr 0x0000ffff914196f8)
0xffff9141953c   188  ldur w2, [x9, #11]
0xffff91419540   192  cmp w6, w2
0xffff91419544   196  b.ge #+0x14 (addr 0xffff91419558)
0xffff91419548   200  sub w2, w2, #0x1 (1)
0xffff9141954c   204  add x3, x9, #0xf (15)
0xffff91419550   208  str d1, [x3, w2, sxtw #3]
0xffff91419554   212  b #-0x14 (addr 0xffff91419540)
0xffff91419558   216  cmp w6, #0x0 (0)
0xffff9141955c   220  b.le #+0x1c (addr 0xffff91419578)
0xffff91419560   224  sub w6, w6, #0x1 (1)
0xffff91419564   228  add x2, x5, #0xf (15)
0xffff91419568   232  ldr d1, [x2, w6, sxtw #3]
0xffff9141956c   236  add x2, x9, #0xf (15)
0xffff91419570   240  str d1, [x2, w6, sxtw #3]
0xffff91419574   244  b #-0x1c (addr 0xffff91419558)
0xffff91419578   248  mov x2, x9
0xffff9141957c   252  stur x2, [x1, #15]
0xffff91419580   256  add x3, x1, #0xf (15)
0xffff91419584   260  and x2, x1, #0xfffffffffff00000
0xffff91419588   264  ldr x2, [x2, #8]
0xffff9141958c   268  tbz w2, #2, #+0x18 (addr 0xffff914195a4)
0xffff91419590   272  sub csp, jssp, #0x8 (8)
0xffff91419594   276  str lr, [jssp, #-8]!
0xffff91419598   280  ldr x16, pc+368 (addr 0x0000ffff91419708)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9141959c   284  blr x16
0xffff914195a0   288  ldr lr, [jssp], #8
0xffff914195a4   292  mov x5, x9
0xffff914195a8   296  add w2, w8, #0x1 (1)
0xffff914195ac   300  lsl x2, x2, #32
0xffff914195b0   304  stur x2, [x1, #23]
0xffff914195b4   308  add x1, x5, #0xf (15)
0xffff914195b8   312  fsub d29, d0, d15
0xffff914195bc   316  str d29, [x1, w8, sxtw #3]
0xffff914195c0   320  ret
0xffff914195c4   324  sub csp, jssp, #0x10 (16)
0xffff914195c8   328  stp fp, lr, [jssp, #-16]!
0xffff914195cc   332  movz fp, #0xa00000000
0xffff914195d0   336  sub csp, jssp, #0x8 (8)
0xffff914195d4   340  str fp, [jssp, #-8]!
0xffff914195d8   344  add fp, jssp, #0x8 (8)
0xffff914195dc   348  ldur x16, [x2, #-1]
0xffff914195e0   352  ldr x17, [x26, #120]
0xffff914195e4   356  cmp x16, x17
0xffff914195e8   360  b.ne #+0x198 (addr 0xffff91419780)
0xffff914195ec   364  ldur d29, [x2, #7]
0xffff914195f0   368  fcvtzs w8, d29
0xffff914195f4   372  scvtf d1, w8
0xffff914195f8   376  fcmp d29, d1
0xffff914195fc   380  b.ne #+0x184 (addr 0xffff91419780)
0xffff91419600   384  ldr lr, [jssp, #16]
0xffff91419604   388  ldp xzr, fp, [jssp], #24
0xffff91419608   392  b #-0x158 (addr 0xffff914194b0)
0xffff9141960c   396  sub csp, jssp, #0x10 (16)
0xffff91419610   400  stp fp, lr, [jssp, #-16]!
0xffff91419614   404  movz fp, #0xa00000000
0xffff91419618   408  sub csp, jssp, #0x8 (8)
0xffff9141961c   412  str fp, [jssp, #-8]!
0xffff91419620   416  add fp, jssp, #0x8 (8)
0xffff91419624   420  ldur x16, [x2, #-1]
0xffff91419628   424  ldr x17, [x26, #120]
0xffff9141962c   428  cmp x16, x17
0xffff91419630   432  b.ne #+0x30 (addr 0xffff91419660)
0xffff91419634   436  ldur d30, [x2, #7]
0xffff91419638   440  fcvtzs x9, d30
0xffff9141963c   444  cmp x9, #0x1 (1)
0xffff91419640   448  ccmn x9, #1, #nzcV, vc
0xffff91419644   452  b.vc #+0x18 (addr 0xffff9141965c)
0xffff91419648   456  sub csp, jssp, #0x8 (8)
0xffff9141964c   460  str lr, [jssp, #-8]!
0xffff91419650   464  ldr x16, pc+192 (addr 0x0000ffff91419710)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff91419654   468  blr x16
0xffff91419658   472  ldr lr, [jssp], #8
0xffff9141965c   476  b #+0x24 (addr 0xffff91419680)
0xffff91419660   480  ldp x9, x7, [x26, #64]
0xffff91419664   484  cmp x2, x9
0xffff91419668   488  cset x9, eq
0xffff9141966c   492  ccmp x2, x7, #nZcv, ne
0xffff91419670   496  b.eq #+0x10 (addr 0xffff91419680)
0xffff91419674   500  ldr x16, [x26, #40]
0xffff91419678   504  cmp x2, x16
0xffff9141967c   508  b.ne #+0x10c (addr 0xffff91419788)
0xffff91419680   512  ldr lr, [jssp, #16]
0xffff91419684   516  ldp xzr, fp, [jssp], #24
0xffff91419688   520  b #-0x1a0 (addr 0xffff914194e8)
0xffff9141968c   524  sub csp, jssp, #0x10 (16)
0xffff91419690   528  stp fp, lr, [jssp, #-16]!
0xffff91419694   532  movz fp, #0xa00000000
0xffff91419698   536  sub csp, jssp, #0x8 (8)
0xffff9141969c   540  str fp, [jssp, #-8]!
0xffff914196a0   544  add fp, jssp, #0x8 (8)
0xffff914196a4   548  movz x9, #0x0
0xffff914196a8   552  mov x16, lr
0xffff914196ac   556  ldr x17, pc+108 (addr 0x0000ffff91419718)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914196b0   560  blr x17
0xffff914196b4   564  lsl x0, x3, #32
0xffff914196b8   568  movz x10, #0x100000000
0xffff914196bc   572  sub csp, jssp, #0x10 (16)
0xffff914196c0   576  stp x10, x0, [jssp, #-16]!
0xffff914196c4   580  movz x0, #0x2
0xffff914196c8   584  movz x1, #0x5b88
0xffff914196cc   588  movk x1, #0xe2, lsl #16
0xffff914196d0   592  ldr x16, pc+80 (addr 0x0000ffff91419720)    ;; code: STUB, CEntryStub, minor: 5
0xffff914196d4   596  blr x16
0xffff914196d8   600  str x0, [jssp, #72]
0xffff914196dc   604  ldr x16, pc+76 (addr 0x0000ffff91419728)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914196e0   608  blr x16
0xffff914196e4   612  ldr lr, [jssp, #16]
0xffff914196e8   616  ldp xzr, fp, [jssp], #24
0xffff914196ec   620  b #-0x1c0 (addr 0xffff9141952c)
0xffff914196f0   624  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff914196f4   628  d63f03e0       constant
0xffff914196f8   632  fff7ffff       constant
0xffff914196fc   636  fff7ffff       constant
0xffff91419700   640  364052d9       constant
0xffff91419704   644  00000000       constant
0xffff91419708   648  914170c0       constant
0xffff9141970c   652  0000ffff       constant
0xffff91419710   656  914178a0       constant
0xffff91419714   660  0000ffff       constant
0xffff91419718   664  91406820       constant
0xffff9141971c   668  0000ffff       constant
0xffff91419720   672  91406260       constant
0xffff91419724   676  0000ffff       constant
0xffff91419728   680  914068e0       constant
0xffff9141972c   684  0000ffff       constant
0xffff91419730   688  movz x16, #0x0
0xffff91419734   692  sub csp, jssp, #0x10 (16)
0xffff91419738   696  stp fp, lr, [jssp, #-16]!
0xffff9141973c   700  bl #+0x54 (addr 0xffff91419790)
0xffff91419740   704  movz x16, #0x8
0xffff91419744   708  sub csp, jssp, #0x10 (16)
0xffff91419748   712  stp fp, lr, [jssp, #-16]!
0xffff9141974c   716  bl #+0x44 (addr 0xffff91419790)
0xffff91419750   720  movz x16, #0x10
0xffff91419754   724  sub csp, jssp, #0x10 (16)
0xffff91419758   728  stp fp, lr, [jssp, #-16]!
0xffff9141975c   732  bl #+0x34 (addr 0xffff91419790)
0xffff91419760   736  movz x16, #0x18
0xffff91419764   740  sub csp, jssp, #0x10 (16)
0xffff91419768   744  stp fp, lr, [jssp, #-16]!
0xffff9141976c   748  bl #+0x24 (addr 0xffff91419790)
0xffff91419770   752  movz x16, #0x20
0xffff91419774   756  sub csp, jssp, #0x10 (16)
0xffff91419778   760  stp fp, lr, [jssp, #-16]!
0xffff9141977c   764  bl #+0x14 (addr 0xffff91419790)
0xffff91419780   768  movz x16, #0x28
0xffff91419784   772  bl #+0x1c (addr 0xffff914197a0)
0xffff91419788   776  movz x16, #0x30
0xffff9141978c   780  bl #+0x14 (addr 0xffff914197a0)
0xffff91419790   784  movz x17, #0xa00000000
0xffff91419794   788  sub csp, jssp, #0x10 (16)
0xffff91419798   792  stp x17, cp, [jssp, #-16]!
0xffff9141979c   796  add fp, jssp, #0x10 (16)
0xffff914197a0   800  ldr x17, pc+24 (addr 0x0000ffff914197b8)    ;; lazy deoptimization bailout 0
0xffff914197a4   804  add x17, x17, x16
0xffff914197a8   808  br x17
0xffff914197ac   812  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914197b0   816  d63f03e0       constant
0xffff914197b4   820  d503201f       constant
0xffff914197b8   824  91206000       constant
0xffff914197bc   828  0000ffff       constant


Safepoints (size = 21)
0xffff914196d8   600  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff9141952c  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419598  code target (STUB)  (0xffff914170c0)
0xffff91419650  code target (STUB)  (0xffff914178a0)
0xffff914196ac  code target (STUB)  (0xffff91406820)
0xffff914196d0  code target (STUB)  (0xffff91406260)
0xffff914196dc  code target (STUB)  (0xffff914068e0)
0xffff914196f0  constant pool (size 64)
0xffff914197a0  runtime entry
0xffff914197ac  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 853)
0xffff91419480     0  ldur x5, [x1, #15]
0xffff91419484     4  ldur w6, [x1, #27]
0xffff91419488     8  tbz w0, #0, #+0x1c (addr 0xffff914194a4)
0xffff9141948c    12  ldur x16, [x0, #-1]
0xffff91419490    16  ldr x17, [x26, #120]
0xffff91419494    20  cmp x16, x17
0xffff91419498    24  b.ne #+0x298 (addr 0xffff91419730)
0xffff9141949c    28  ldur d0, [x0, #7]
0xffff914194a0    32  b #+0x8 (addr 0xffff914194a8)
0xffff914194a4    36  scvtf d0, x0, #32
0xffff914194a8    40  tbnz w2, #0, #+0x11c (addr 0xffff914195c4)
0xffff914194ac    44  asr x8, x2, #32
0xffff914194b0    48  cmp w6, w8
0xffff914194b4    52  b.eq #+0x10 (addr 0xffff914194c4)
0xffff914194b8    56  cmp w8, w6
0xffff914194bc    60  b.hs #+0x284 (addr 0xffff91419740)
0xffff914194c0    64  b #+0xf4 (addr 0xffff914195b4)
0xffff914194c4    68  ldur w7, [x5, #11]
0xffff914194c8    72  cmp w7, w8
0xffff914194cc    76  b.gt #+0xdc (addr 0xffff914195a8)
0xffff914194d0    80  adds w7, w7, #0x400 (1024)
0xffff914194d4    84  b.vs #+0x27c (addr 0xffff91419750)
0xffff914194d8    88  cmp w8, w7
0xffff914194dc    92  b.hs #+0x284 (addr 0xffff91419760)
0xffff914194e0    96  tbnz w2, #0, #+0x12c (addr 0xffff9141960c)
0xffff914194e4   100  asr x9, x2, #32
0xffff914194e8   104  add w7, w8, w9, lsr #1
0xffff914194ec   108  add w7, w7, #0x10 (16)
0xffff914194f0   112  movz w16, #0x95ff
0xffff914194f4   116  cmp w7, w16, lsl #1
0xffff914194f8   120  b.hs #+0x278 (addr 0xffff91419770)
0xffff914194fc   124  lsl x2, x7, #32
0xffff91419500   128  lsl w3, w7, #3
0xffff91419504   132  add w3, w3, #0x10 (16)
0xffff91419508   136  sxtw x3, w3
0xffff9141950c   140  movz x4, #0xf2c0
0xffff91419510   144  movk x4, #0x4117, lsl #16
0xffff91419514   148  ldp x9, x16, [x4]
0xffff91419518   152  adds x7, x9, x3
0xffff9141951c   156  ccmp x7, x16, #nzCv, lo
0xffff91419520   160  b.hi #+0x16c (addr 0xffff9141968c)
0xffff91419524   164  str x7, [x4]
0xffff91419528   168  orr x9, x9, #0x1
0xffff9141952c   172  ldr x3, pc+468 (addr 0x0000ffff91419700)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419530   176  stur x3, [x9, #-1]
0xffff91419534   180  stur x2, [x9, #7]
0xffff91419538   184  ldr d1, pc+448 (addr 0x0000ffff914196f8)
0xffff9141953c   188  ldur w2, [x9, #11]
0xffff91419540   192  cmp w6, w2
0xffff91419544   196  b.ge #+0x14 (addr 0xffff91419558)
0xffff91419548   200  sub w2, w2, #0x1 (1)
0xffff9141954c   204  add x3, x9, #0xf (15)
0xffff91419550   208  str d1, [x3, w2, sxtw #3]
0xffff91419554   212  b #-0x14 (addr 0xffff91419540)
0xffff91419558   216  cmp w6, #0x0 (0)
0xffff9141955c   220  b.le #+0x1c (addr 0xffff91419578)
0xffff91419560   224  sub w6, w6, #0x1 (1)
0xffff91419564   228  add x2, x5, #0xf (15)
0xffff91419568   232  ldr d1, [x2, w6, sxtw #3]
0xffff9141956c   236  add x2, x9, #0xf (15)
0xffff91419570   240  str d1, [x2, w6, sxtw #3]
0xffff91419574   244  b #-0x1c (addr 0xffff91419558)
0xffff91419578   248  mov x2, x9
0xffff9141957c   252  stur x2, [x1, #15]
0xffff91419580   256  add x3, x1, #0xf (15)
0xffff91419584   260  and x2, x1, #0xfffffffffff00000
0xffff91419588   264  ldr x2, [x2, #8]
0xffff9141958c   268  tbz w2, #2, #+0x18 (addr 0xffff914195a4)
0xffff91419590   272  sub csp, jssp, #0x8 (8)
0xffff91419594   276  str lr, [jssp, #-8]!
0xffff91419598   280  ldr x16, pc+368 (addr 0x0000ffff91419708)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9141959c   284  blr x16
0xffff914195a0   288  ldr lr, [jssp], #8
0xffff914195a4   292  mov x5, x9
0xffff914195a8   296  add w2, w8, #0x1 (1)
0xffff914195ac   300  lsl x2, x2, #32
0xffff914195b0   304  stur x2, [x1, #23]
0xffff914195b4   308  add x1, x5, #0xf (15)
0xffff914195b8   312  fsub d29, d0, d15
0xffff914195bc   316  str d29, [x1, w8, sxtw #3]
0xffff914195c0   320  ret
0xffff914195c4   324  sub csp, jssp, #0x10 (16)
0xffff914195c8   328  stp fp, lr, [jssp, #-16]!
0xffff914195cc   332  movz fp, #0xa00000000
0xffff914195d0   336  sub csp, jssp, #0x8 (8)
0xffff914195d4   340  str fp, [jssp, #-8]!
0xffff914195d8   344  add fp, jssp, #0x8 (8)
0xffff914195dc   348  ldur x16, [x2, #-1]
0xffff914195e0   352  ldr x17, [x26, #120]
0xffff914195e4   356  cmp x16, x17
0xffff914195e8   360  b.ne #+0x198 (addr 0xffff91419780)
0xffff914195ec   364  ldur d29, [x2, #7]
0xffff914195f0   368  fcvtzs w8, d29
0xffff914195f4   372  scvtf d1, w8
0xffff914195f8   376  fcmp d29, d1
0xffff914195fc   380  b.ne #+0x184 (addr 0xffff91419780)
0xffff91419600   384  ldr lr, [jssp, #16]
0xffff91419604   388  ldp xzr, fp, [jssp], #24
0xffff91419608   392  b #-0x158 (addr 0xffff914194b0)
0xffff9141960c   396  sub csp, jssp, #0x10 (16)
0xffff91419610   400  stp fp, lr, [jssp, #-16]!
0xffff91419614   404  movz fp, #0xa00000000
0xffff91419618   408  sub csp, jssp, #0x8 (8)
0xffff9141961c   412  str fp, [jssp, #-8]!
0xffff91419620   416  add fp, jssp, #0x8 (8)
0xffff91419624   420  ldur x16, [x2, #-1]
0xffff91419628   424  ldr x17, [x26, #120]
0xffff9141962c   428  cmp x16, x17
0xffff91419630   432  b.ne #+0x30 (addr 0xffff91419660)
0xffff91419634   436  ldur d30, [x2, #7]
0xffff91419638   440  fcvtzs x9, d30
0xffff9141963c   444  cmp x9, #0x1 (1)
0xffff91419640   448  ccmn x9, #1, #nzcV, vc
0xffff91419644   452  b.vc #+0x18 (addr 0xffff9141965c)
0xffff91419648   456  sub csp, jssp, #0x8 (8)
0xffff9141964c   460  str lr, [jssp, #-8]!
0xffff91419650   464  ldr x16, pc+192 (addr 0x0000ffff91419710)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff91419654   468  blr x16
0xffff91419658   472  ldr lr, [jssp], #8
0xffff9141965c   476  b #+0x24 (addr 0xffff91419680)
0xffff91419660   480  ldp x9, x7, [x26, #64]
0xffff91419664   484  cmp x2, x9
0xffff91419668   488  cset x9, eq
0xffff9141966c   492  ccmp x2, x7, #nZcv, ne
0xffff91419670   496  b.eq #+0x10 (addr 0xffff91419680)
0xffff91419674   500  ldr x16, [x26, #40]
0xffff91419678   504  cmp x2, x16
0xffff9141967c   508  b.ne #+0x10c (addr 0xffff91419788)
0xffff91419680   512  ldr lr, [jssp, #16]
0xffff91419684   516  ldp xzr, fp, [jssp], #24
0xffff91419688   520  b #-0x1a0 (addr 0xffff914194e8)
0xffff9141968c   524  sub csp, jssp, #0x10 (16)
0xffff91419690   528  stp fp, lr, [jssp, #-16]!
0xffff91419694   532  movz fp, #0xa00000000
0xffff91419698   536  sub csp, jssp, #0x8 (8)
0xffff9141969c   540  str fp, [jssp, #-8]!
0xffff914196a0   544  add fp, jssp, #0x8 (8)
0xffff914196a4   548  movz x9, #0x0
0xffff914196a8   552  mov x16, lr
0xffff914196ac   556  ldr x17, pc+108 (addr 0x0000ffff91419718)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914196b0   560  blr x17
0xffff914196b4   564  lsl x0, x3, #32
0xffff914196b8   568  movz x10, #0x100000000
0xffff914196bc   572  sub csp, jssp, #0x10 (16)
0xffff914196c0   576  stp x10, x0, [jssp, #-16]!
0xffff914196c4   580  movz x0, #0x2
0xffff914196c8   584  movz x1, #0x5b88
0xffff914196cc   588  movk x1, #0xe2, lsl #16
0xffff914196d0   592  ldr x16, pc+80 (addr 0x0000ffff91419720)    ;; code: STUB, CEntryStub, minor: 5
0xffff914196d4   596  blr x16
0xffff914196d8   600  str x0, [jssp, #72]
0xffff914196dc   604  ldr x16, pc+76 (addr 0x0000ffff91419728)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914196e0   608  blr x16
0xffff914196e4   612  ldr lr, [jssp, #16]
0xffff914196e8   616  ldp xzr, fp, [jssp], #24
0xffff914196ec   620  b #-0x1c0 (addr 0xffff9141952c)
0xffff914196f0   624  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff914196f4   628  d63f03e0       constant
0xffff914196f8   632  fff7ffff       constant
0xffff914196fc   636  fff7ffff       constant
0xffff91419700   640  364052d9       constant
0xffff91419704   644  00000000       constant
0xffff91419708   648  914170c0       constant
0xffff9141970c   652  0000ffff       constant
0xffff91419710   656  914178a0       constant
0xffff91419714   660  0000ffff       constant
0xffff91419718   664  91406820       constant
0xffff9141971c   668  0000ffff       constant
0xffff91419720   672  91406260       constant
0xffff91419724   676  0000ffff       constant
0xffff91419728   680  914068e0       constant
0xffff9141972c   684  0000ffff       constant
0xffff91419730   688  movz x16, #0x0
0xffff91419734   692  sub csp, jssp, #0x10 (16)
0xffff91419738   696  stp fp, lr, [jssp, #-16]!
0xffff9141973c   700  bl #+0x54 (addr 0xffff91419790)
0xffff91419740   704  movz x16, #0x8
0xffff91419744   708  sub csp, jssp, #0x10 (16)
0xffff91419748   712  stp fp, lr, [jssp, #-16]!
0xffff9141974c   716  bl #+0x44 (addr 0xffff91419790)
0xffff91419750   720  movz x16, #0x10
0xffff91419754   724  sub csp, jssp, #0x10 (16)
0xffff91419758   728  stp fp, lr, [jssp, #-16]!
0xffff9141975c   732  bl #+0x34 (addr 0xffff91419790)
0xffff91419760   736  movz x16, #0x18
0xffff91419764   740  sub csp, jssp, #0x10 (16)
0xffff91419768   744  stp fp, lr, [jssp, #-16]!
0xffff9141976c   748  bl #+0x24 (addr 0xffff91419790)
0xffff91419770   752  movz x16, #0x20
0xffff91419774   756  sub csp, jssp, #0x10 (16)
0xffff91419778   760  stp fp, lr, [jssp, #-16]!
0xffff9141977c   764  bl #+0x14 (addr 0xffff91419790)
0xffff91419780   768  movz x16, #0x28
0xffff91419784   772  bl #+0x1c (addr 0xffff914197a0)
0xffff91419788   776  movz x16, #0x30
0xffff9141978c   780  bl #+0x14 (addr 0xffff914197a0)
0xffff91419790   784  movz x17, #0xa00000000
0xffff91419794   788  sub csp, jssp, #0x10 (16)
0xffff91419798   792  stp x17, cp, [jssp, #-16]!
0xffff9141979c   796  add fp, jssp, #0x10 (16)
0xffff914197a0   800  ldr x17, pc+24 (addr 0x0000ffff914197b8)    ;; lazy deoptimization bailout 0
0xffff914197a4   804  add x17, x17, x16
0xffff914197a8   808  br x17
0xffff914197ac   812  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914197b0   816  d63f03e0       constant
0xffff914197b4   820  d503201f       constant
0xffff914197b8   824  91206000       constant
0xffff914197bc   828  0000ffff       constant


Safepoints (size = 21)
0xffff914196d8   600  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff9141952c  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419598  code target (STUB)  (0xffff914170c0)
0xffff91419650  code target (STUB)  (0xffff914178a0)
0xffff914196ac  code target (STUB)  (0xffff91406820)
0xffff914196d0  code target (STUB)  (0xffff91406260)
0xffff914196dc  code target (STUB)  (0xffff914068e0)
0xffff914196f0  constant pool (size 64)
0xffff914197a0  runtime entry
0xffff914197ac  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff91419840     0  ldur x5, [x1, #15]
0xffff91419844     4  ldur w6, [x1, #27]
0xffff91419848     8  tbnz w2, #0, #+0x40 (addr 0xffff91419888)
0xffff9141984c    12  asr x8, x2, #32
0xffff91419850    16  cmp w8, w6
0xffff91419854    20  b.hs #+0x5c (addr 0xffff914198b0)
0xffff91419858    24  tbz w0, #0, #+0x1c (addr 0xffff91419874)
0xffff9141985c    28  ldur x16, [x0, #-1]
0xffff91419860    32  ldr x17, [x26, #120]
0xffff91419864    36  cmp x16, x17
0xffff91419868    40  b.ne #+0x58 (addr 0xffff914198c0)
0xffff9141986c    44  ldur d0, [x0, #7]
0xffff91419870    48  b #+0x8 (addr 0xffff91419878)
0xffff91419874    52  scvtf d0, x0, #32
0xffff91419878    56  add x1, x5, #0xf (15)
0xffff9141987c    60  fsub d29, d0, d15
0xffff91419880    64  str d29, [x1, w8, sxtw #3]
0xffff91419884    68  ret
0xffff91419888    72  ldur x16, [x2, #-1]
0xffff9141988c    76  ldr x17, [x26, #120]
0xffff91419890    80  cmp x16, x17
0xffff91419894    84  b.ne #+0x3c (addr 0xffff914198d0)
0xffff91419898    88  ldur d29, [x2, #7]
0xffff9141989c    92  fcvtzs w8, d29
0xffff914198a0    96  scvtf d0, w8
0xffff914198a4   100  fcmp d29, d0
0xffff914198a8   104  b.ne #+0x28 (addr 0xffff914198d0)
0xffff914198ac   108  b #-0x5c (addr 0xffff91419850)
0xffff914198b0   112  movz x16, #0x0
0xffff914198b4   116  sub csp, jssp, #0x10 (16)
0xffff914198b8   120  stp fp, lr, [jssp, #-16]!
0xffff914198bc   124  bl #+0x24 (addr 0xffff914198e0)
0xffff914198c0   128  movz x16, #0x8
0xffff914198c4   132  sub csp, jssp, #0x10 (16)
0xffff914198c8   136  stp fp, lr, [jssp, #-16]!
0xffff914198cc   140  bl #+0x14 (addr 0xffff914198e0)
0xffff914198d0   144  movz x16, #0x10
0xffff914198d4   148  sub csp, jssp, #0x10 (16)
0xffff914198d8   152  stp fp, lr, [jssp, #-16]!
0xffff914198dc   156  bl #+0x4 (addr 0xffff914198e0)
0xffff914198e0   160  movz x17, #0xa00000000
0xffff914198e4   164  sub csp, jssp, #0x10 (16)
0xffff914198e8   168  stp x17, cp, [jssp, #-16]!
0xffff914198ec   172  add fp, jssp, #0x10 (16)
0xffff914198f0   176  ldr x17, pc+24 (addr 0x0000ffff91419908)    ;; lazy deoptimization bailout 0
0xffff914198f4   180  add x17, x17, x16
0xffff914198f8   184  br x17
0xffff914198fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91419900   192  d63f03e0       constant
0xffff91419904   196  d503201f       constant
0xffff91419908   200  91206000       constant
0xffff9141990c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914198f0  runtime entry
0xffff914198fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff91419840     0  ldur x5, [x1, #15]
0xffff91419844     4  ldur w6, [x1, #27]
0xffff91419848     8  tbnz w2, #0, #+0x40 (addr 0xffff91419888)
0xffff9141984c    12  asr x8, x2, #32
0xffff91419850    16  cmp w8, w6
0xffff91419854    20  b.hs #+0x5c (addr 0xffff914198b0)
0xffff91419858    24  tbz w0, #0, #+0x1c (addr 0xffff91419874)
0xffff9141985c    28  ldur x16, [x0, #-1]
0xffff91419860    32  ldr x17, [x26, #120]
0xffff91419864    36  cmp x16, x17
0xffff91419868    40  b.ne #+0x58 (addr 0xffff914198c0)
0xffff9141986c    44  ldur d0, [x0, #7]
0xffff91419870    48  b #+0x8 (addr 0xffff91419878)
0xffff91419874    52  scvtf d0, x0, #32
0xffff91419878    56  add x1, x5, #0xf (15)
0xffff9141987c    60  fsub d29, d0, d15
0xffff91419880    64  str d29, [x1, w8, sxtw #3]
0xffff91419884    68  ret
0xffff91419888    72  ldur x16, [x2, #-1]
0xffff9141988c    76  ldr x17, [x26, #120]
0xffff91419890    80  cmp x16, x17
0xffff91419894    84  b.ne #+0x3c (addr 0xffff914198d0)
0xffff91419898    88  ldur d29, [x2, #7]
0xffff9141989c    92  fcvtzs w8, d29
0xffff914198a0    96  scvtf d0, w8
0xffff914198a4   100  fcmp d29, d0
0xffff914198a8   104  b.ne #+0x28 (addr 0xffff914198d0)
0xffff914198ac   108  b #-0x5c (addr 0xffff91419850)
0xffff914198b0   112  movz x16, #0x0
0xffff914198b4   116  sub csp, jssp, #0x10 (16)
0xffff914198b8   120  stp fp, lr, [jssp, #-16]!
0xffff914198bc   124  bl #+0x24 (addr 0xffff914198e0)
0xffff914198c0   128  movz x16, #0x8
0xffff914198c4   132  sub csp, jssp, #0x10 (16)
0xffff914198c8   136  stp fp, lr, [jssp, #-16]!
0xffff914198cc   140  bl #+0x14 (addr 0xffff914198e0)
0xffff914198d0   144  movz x16, #0x10
0xffff914198d4   148  sub csp, jssp, #0x10 (16)
0xffff914198d8   152  stp fp, lr, [jssp, #-16]!
0xffff914198dc   156  bl #+0x4 (addr 0xffff914198e0)
0xffff914198e0   160  movz x17, #0xa00000000
0xffff914198e4   164  sub csp, jssp, #0x10 (16)
0xffff914198e8   168  stp x17, cp, [jssp, #-16]!
0xffff914198ec   172  add fp, jssp, #0x10 (16)
0xffff914198f0   176  ldr x17, pc+24 (addr 0x0000ffff91419908)    ;; lazy deoptimization bailout 0
0xffff914198f4   180  add x17, x17, x16
0xffff914198f8   184  br x17
0xffff914198fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91419900   192  d63f03e0       constant
0xffff91419904   196  d503201f       constant
0xffff91419908   200  91206000       constant
0xffff9141990c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914198f0  runtime entry
0xffff914198fc  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 853)
0xffff91419980     0  ldur x5, [x1, #15]
0xffff91419984     4  ldur w6, [x1, #27]
0xffff91419988     8  tbz w0, #0, #+0x1c (addr 0xffff914199a4)
0xffff9141998c    12  ldur x16, [x0, #-1]
0xffff91419990    16  ldr x17, [x26, #120]
0xffff91419994    20  cmp x16, x17
0xffff91419998    24  b.ne #+0x298 (addr 0xffff91419c30)
0xffff9141999c    28  ldur d0, [x0, #7]
0xffff914199a0    32  b #+0x8 (addr 0xffff914199a8)
0xffff914199a4    36  scvtf d0, x0, #32
0xffff914199a8    40  tbnz w2, #0, #+0x11c (addr 0xffff91419ac4)
0xffff914199ac    44  asr x8, x2, #32
0xffff914199b0    48  cmp w6, w8
0xffff914199b4    52  b.le #+0x10 (addr 0xffff914199c4)
0xffff914199b8    56  cmp w8, w6
0xffff914199bc    60  b.hs #+0x284 (addr 0xffff91419c40)
0xffff914199c0    64  b #+0xf4 (addr 0xffff91419ab4)
0xffff914199c4    68  ldur w7, [x5, #11]
0xffff914199c8    72  cmp w7, w8
0xffff914199cc    76  b.gt #+0xdc (addr 0xffff91419aa8)
0xffff914199d0    80  adds w7, w7, #0x400 (1024)
0xffff914199d4    84  b.vs #+0x27c (addr 0xffff91419c50)
0xffff914199d8    88  cmp w8, w7
0xffff914199dc    92  b.hs #+0x284 (addr 0xffff91419c60)
0xffff914199e0    96  tbnz w2, #0, #+0x12c (addr 0xffff91419b0c)
0xffff914199e4   100  asr x9, x2, #32
0xffff914199e8   104  add w7, w8, w9, lsr #1
0xffff914199ec   108  add w7, w7, #0x10 (16)
0xffff914199f0   112  movz w16, #0x95ff
0xffff914199f4   116  cmp w7, w16, lsl #1
0xffff914199f8   120  b.hs #+0x278 (addr 0xffff91419c70)
0xffff914199fc   124  lsl x2, x7, #32
0xffff91419a00   128  lsl w3, w7, #3
0xffff91419a04   132  add w3, w3, #0x10 (16)
0xffff91419a08   136  sxtw x3, w3
0xffff91419a0c   140  movz x4, #0xf2c0
0xffff91419a10   144  movk x4, #0x4117, lsl #16
0xffff91419a14   148  ldp x9, x16, [x4]
0xffff91419a18   152  adds x7, x9, x3
0xffff91419a1c   156  ccmp x7, x16, #nzCv, lo
0xffff91419a20   160  b.hi #+0x16c (addr 0xffff91419b8c)
0xffff91419a24   164  str x7, [x4]
0xffff91419a28   168  orr x9, x9, #0x1
0xffff91419a2c   172  ldr x3, pc+468 (addr 0x0000ffff91419c00)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419a30   176  stur x3, [x9, #-1]
0xffff91419a34   180  stur x2, [x9, #7]
0xffff91419a38   184  ldr d1, pc+448 (addr 0x0000ffff91419bf8)
0xffff91419a3c   188  ldur w2, [x9, #11]
0xffff91419a40   192  cmp w6, w2
0xffff91419a44   196  b.ge #+0x14 (addr 0xffff91419a58)
0xffff91419a48   200  sub w2, w2, #0x1 (1)
0xffff91419a4c   204  add x3, x9, #0xf (15)
0xffff91419a50   208  str d1, [x3, w2, sxtw #3]
0xffff91419a54   212  b #-0x14 (addr 0xffff91419a40)
0xffff91419a58   216  cmp w6, #0x0 (0)
0xffff91419a5c   220  b.le #+0x1c (addr 0xffff91419a78)
0xffff91419a60   224  sub w6, w6, #0x1 (1)
0xffff91419a64   228  add x2, x5, #0xf (15)
0xffff91419a68   232  ldr d1, [x2, w6, sxtw #3]
0xffff91419a6c   236  add x2, x9, #0xf (15)
0xffff91419a70   240  str d1, [x2, w6, sxtw #3]
0xffff91419a74   244  b #-0x1c (addr 0xffff91419a58)
0xffff91419a78   248  mov x2, x9
0xffff91419a7c   252  stur x2, [x1, #15]
0xffff91419a80   256  add x3, x1, #0xf (15)
0xffff91419a84   260  and x2, x1, #0xfffffffffff00000
0xffff91419a88   264  ldr x2, [x2, #8]
0xffff91419a8c   268  tbz w2, #2, #+0x18 (addr 0xffff91419aa4)
0xffff91419a90   272  sub csp, jssp, #0x8 (8)
0xffff91419a94   276  str lr, [jssp, #-8]!
0xffff91419a98   280  ldr x16, pc+368 (addr 0x0000ffff91419c08)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff91419a9c   284  blr x16
0xffff91419aa0   288  ldr lr, [jssp], #8
0xffff91419aa4   292  mov x5, x9
0xffff91419aa8   296  add w2, w8, #0x1 (1)
0xffff91419aac   300  lsl x2, x2, #32
0xffff91419ab0   304  stur x2, [x1, #23]
0xffff91419ab4   308  add x1, x5, #0xf (15)
0xffff91419ab8   312  fsub d29, d0, d15
0xffff91419abc   316  str d29, [x1, w8, sxtw #3]
0xffff91419ac0   320  ret
0xffff91419ac4   324  sub csp, jssp, #0x10 (16)
0xffff91419ac8   328  stp fp, lr, [jssp, #-16]!
0xffff91419acc   332  movz fp, #0xa00000000
0xffff91419ad0   336  sub csp, jssp, #0x8 (8)
0xffff91419ad4   340  str fp, [jssp, #-8]!
0xffff91419ad8   344  add fp, jssp, #0x8 (8)
0xffff91419adc   348  ldur x16, [x2, #-1]
0xffff91419ae0   352  ldr x17, [x26, #120]
0xffff91419ae4   356  cmp x16, x17
0xffff91419ae8   360  b.ne #+0x198 (addr 0xffff91419c80)
0xffff91419aec   364  ldur d29, [x2, #7]
0xffff91419af0   368  fcvtzs w8, d29
0xffff91419af4   372  scvtf d1, w8
0xffff91419af8   376  fcmp d29, d1
0xffff91419afc   380  b.ne #+0x184 (addr 0xffff91419c80)
0xffff91419b00   384  ldr lr, [jssp, #16]
0xffff91419b04   388  ldp xzr, fp, [jssp], #24
0xffff91419b08   392  b #-0x158 (addr 0xffff914199b0)
0xffff91419b0c   396  sub csp, jssp, #0x10 (16)
0xffff91419b10   400  stp fp, lr, [jssp, #-16]!
0xffff91419b14   404  movz fp, #0xa00000000
0xffff91419b18   408  sub csp, jssp, #0x8 (8)
0xffff91419b1c   412  str fp, [jssp, #-8]!
0xffff91419b20   416  add fp, jssp, #0x8 (8)
0xffff91419b24   420  ldur x16, [x2, #-1]
0xffff91419b28   424  ldr x17, [x26, #120]
0xffff91419b2c   428  cmp x16, x17
0xffff91419b30   432  b.ne #+0x30 (addr 0xffff91419b60)
0xffff91419b34   436  ldur d30, [x2, #7]
0xffff91419b38   440  fcvtzs x9, d30
0xffff91419b3c   444  cmp x9, #0x1 (1)
0xffff91419b40   448  ccmn x9, #1, #nzcV, vc
0xffff91419b44   452  b.vc #+0x18 (addr 0xffff91419b5c)
0xffff91419b48   456  sub csp, jssp, #0x8 (8)
0xffff91419b4c   460  str lr, [jssp, #-8]!
0xffff91419b50   464  ldr x16, pc+192 (addr 0x0000ffff91419c10)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff91419b54   468  blr x16
0xffff91419b58   472  ldr lr, [jssp], #8
0xffff91419b5c   476  b #+0x24 (addr 0xffff91419b80)
0xffff91419b60   480  ldp x9, x7, [x26, #64]
0xffff91419b64   484  cmp x2, x9
0xffff91419b68   488  cset x9, eq
0xffff91419b6c   492  ccmp x2, x7, #nZcv, ne
0xffff91419b70   496  b.eq #+0x10 (addr 0xffff91419b80)
0xffff91419b74   500  ldr x16, [x26, #40]
0xffff91419b78   504  cmp x2, x16
0xffff91419b7c   508  b.ne #+0x10c (addr 0xffff91419c88)
0xffff91419b80   512  ldr lr, [jssp, #16]
0xffff91419b84   516  ldp xzr, fp, [jssp], #24
0xffff91419b88   520  b #-0x1a0 (addr 0xffff914199e8)
0xffff91419b8c   524  sub csp, jssp, #0x10 (16)
0xffff91419b90   528  stp fp, lr, [jssp, #-16]!
0xffff91419b94   532  movz fp, #0xa00000000
0xffff91419b98   536  sub csp, jssp, #0x8 (8)
0xffff91419b9c   540  str fp, [jssp, #-8]!
0xffff91419ba0   544  add fp, jssp, #0x8 (8)
0xffff91419ba4   548  movz x9, #0x0
0xffff91419ba8   552  mov x16, lr
0xffff91419bac   556  ldr x17, pc+108 (addr 0x0000ffff91419c18)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91419bb0   560  blr x17
0xffff91419bb4   564  lsl x0, x3, #32
0xffff91419bb8   568  movz x10, #0x100000000
0xffff91419bbc   572  sub csp, jssp, #0x10 (16)
0xffff91419bc0   576  stp x10, x0, [jssp, #-16]!
0xffff91419bc4   580  movz x0, #0x2
0xffff91419bc8   584  movz x1, #0x5b88
0xffff91419bcc   588  movk x1, #0xe2, lsl #16
0xffff91419bd0   592  ldr x16, pc+80 (addr 0x0000ffff91419c20)    ;; code: STUB, CEntryStub, minor: 5
0xffff91419bd4   596  blr x16
0xffff91419bd8   600  str x0, [jssp, #72]
0xffff91419bdc   604  ldr x16, pc+76 (addr 0x0000ffff91419c28)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91419be0   608  blr x16
0xffff91419be4   612  ldr lr, [jssp, #16]
0xffff91419be8   616  ldp xzr, fp, [jssp], #24
0xffff91419bec   620  b #-0x1c0 (addr 0xffff91419a2c)
0xffff91419bf0   624  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff91419bf4   628  d63f03e0       constant
0xffff91419bf8   632  fff7ffff       constant
0xffff91419bfc   636  fff7ffff       constant
0xffff91419c00   640  364052d9       constant
0xffff91419c04   644  00000000       constant
0xffff91419c08   648  914170c0       constant
0xffff91419c0c   652  0000ffff       constant
0xffff91419c10   656  914178a0       constant
0xffff91419c14   660  0000ffff       constant
0xffff91419c18   664  91406820       constant
0xffff91419c1c   668  0000ffff       constant
0xffff91419c20   672  91406260       constant
0xffff91419c24   676  0000ffff       constant
0xffff91419c28   680  914068e0       constant
0xffff91419c2c   684  0000ffff       constant
0xffff91419c30   688  movz x16, #0x0
0xffff91419c34   692  sub csp, jssp, #0x10 (16)
0xffff91419c38   696  stp fp, lr, [jssp, #-16]!
0xffff91419c3c   700  bl #+0x54 (addr 0xffff91419c90)
0xffff91419c40   704  movz x16, #0x8
0xffff91419c44   708  sub csp, jssp, #0x10 (16)
0xffff91419c48   712  stp fp, lr, [jssp, #-16]!
0xffff91419c4c   716  bl #+0x44 (addr 0xffff91419c90)
0xffff91419c50   720  movz x16, #0x10
0xffff91419c54   724  sub csp, jssp, #0x10 (16)
0xffff91419c58   728  stp fp, lr, [jssp, #-16]!
0xffff91419c5c   732  bl #+0x34 (addr 0xffff91419c90)
0xffff91419c60   736  movz x16, #0x18
0xffff91419c64   740  sub csp, jssp, #0x10 (16)
0xffff91419c68   744  stp fp, lr, [jssp, #-16]!
0xffff91419c6c   748  bl #+0x24 (addr 0xffff91419c90)
0xffff91419c70   752  movz x16, #0x20
0xffff91419c74   756  sub csp, jssp, #0x10 (16)
0xffff91419c78   760  stp fp, lr, [jssp, #-16]!
0xffff91419c7c   764  bl #+0x14 (addr 0xffff91419c90)
0xffff91419c80   768  movz x16, #0x28
0xffff91419c84   772  bl #+0x1c (addr 0xffff91419ca0)
0xffff91419c88   776  movz x16, #0x30
0xffff91419c8c   780  bl #+0x14 (addr 0xffff91419ca0)
0xffff91419c90   784  movz x17, #0xa00000000
0xffff91419c94   788  sub csp, jssp, #0x10 (16)
0xffff91419c98   792  stp x17, cp, [jssp, #-16]!
0xffff91419c9c   796  add fp, jssp, #0x10 (16)
0xffff91419ca0   800  ldr x17, pc+24 (addr 0x0000ffff91419cb8)    ;; lazy deoptimization bailout 0
0xffff91419ca4   804  add x17, x17, x16
0xffff91419ca8   808  br x17
0xffff91419cac   812  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91419cb0   816  d63f03e0       constant
0xffff91419cb4   820  d503201f       constant
0xffff91419cb8   824  91206000       constant
0xffff91419cbc   828  0000ffff       constant


Safepoints (size = 21)
0xffff91419bd8   600  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff91419a2c  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419a98  code target (STUB)  (0xffff914170c0)
0xffff91419b50  code target (STUB)  (0xffff914178a0)
0xffff91419bac  code target (STUB)  (0xffff91406820)
0xffff91419bd0  code target (STUB)  (0xffff91406260)
0xffff91419bdc  code target (STUB)  (0xffff914068e0)
0xffff91419bf0  constant pool (size 64)
0xffff91419ca0  runtime entry
0xffff91419cac  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 853)
0xffff91419980     0  ldur x5, [x1, #15]
0xffff91419984     4  ldur w6, [x1, #27]
0xffff91419988     8  tbz w0, #0, #+0x1c (addr 0xffff914199a4)
0xffff9141998c    12  ldur x16, [x0, #-1]
0xffff91419990    16  ldr x17, [x26, #120]
0xffff91419994    20  cmp x16, x17
0xffff91419998    24  b.ne #+0x298 (addr 0xffff91419c30)
0xffff9141999c    28  ldur d0, [x0, #7]
0xffff914199a0    32  b #+0x8 (addr 0xffff914199a8)
0xffff914199a4    36  scvtf d0, x0, #32
0xffff914199a8    40  tbnz w2, #0, #+0x11c (addr 0xffff91419ac4)
0xffff914199ac    44  asr x8, x2, #32
0xffff914199b0    48  cmp w6, w8
0xffff914199b4    52  b.le #+0x10 (addr 0xffff914199c4)
0xffff914199b8    56  cmp w8, w6
0xffff914199bc    60  b.hs #+0x284 (addr 0xffff91419c40)
0xffff914199c0    64  b #+0xf4 (addr 0xffff91419ab4)
0xffff914199c4    68  ldur w7, [x5, #11]
0xffff914199c8    72  cmp w7, w8
0xffff914199cc    76  b.gt #+0xdc (addr 0xffff91419aa8)
0xffff914199d0    80  adds w7, w7, #0x400 (1024)
0xffff914199d4    84  b.vs #+0x27c (addr 0xffff91419c50)
0xffff914199d8    88  cmp w8, w7
0xffff914199dc    92  b.hs #+0x284 (addr 0xffff91419c60)
0xffff914199e0    96  tbnz w2, #0, #+0x12c (addr 0xffff91419b0c)
0xffff914199e4   100  asr x9, x2, #32
0xffff914199e8   104  add w7, w8, w9, lsr #1
0xffff914199ec   108  add w7, w7, #0x10 (16)
0xffff914199f0   112  movz w16, #0x95ff
0xffff914199f4   116  cmp w7, w16, lsl #1
0xffff914199f8   120  b.hs #+0x278 (addr 0xffff91419c70)
0xffff914199fc   124  lsl x2, x7, #32
0xffff91419a00   128  lsl w3, w7, #3
0xffff91419a04   132  add w3, w3, #0x10 (16)
0xffff91419a08   136  sxtw x3, w3
0xffff91419a0c   140  movz x4, #0xf2c0
0xffff91419a10   144  movk x4, #0x4117, lsl #16
0xffff91419a14   148  ldp x9, x16, [x4]
0xffff91419a18   152  adds x7, x9, x3
0xffff91419a1c   156  ccmp x7, x16, #nzCv, lo
0xffff91419a20   160  b.hi #+0x16c (addr 0xffff91419b8c)
0xffff91419a24   164  str x7, [x4]
0xffff91419a28   168  orr x9, x9, #0x1
0xffff91419a2c   172  ldr x3, pc+468 (addr 0x0000ffff91419c00)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419a30   176  stur x3, [x9, #-1]
0xffff91419a34   180  stur x2, [x9, #7]
0xffff91419a38   184  ldr d1, pc+448 (addr 0x0000ffff91419bf8)
0xffff91419a3c   188  ldur w2, [x9, #11]
0xffff91419a40   192  cmp w6, w2
0xffff91419a44   196  b.ge #+0x14 (addr 0xffff91419a58)
0xffff91419a48   200  sub w2, w2, #0x1 (1)
0xffff91419a4c   204  add x3, x9, #0xf (15)
0xffff91419a50   208  str d1, [x3, w2, sxtw #3]
0xffff91419a54   212  b #-0x14 (addr 0xffff91419a40)
0xffff91419a58   216  cmp w6, #0x0 (0)
0xffff91419a5c   220  b.le #+0x1c (addr 0xffff91419a78)
0xffff91419a60   224  sub w6, w6, #0x1 (1)
0xffff91419a64   228  add x2, x5, #0xf (15)
0xffff91419a68   232  ldr d1, [x2, w6, sxtw #3]
0xffff91419a6c   236  add x2, x9, #0xf (15)
0xffff91419a70   240  str d1, [x2, w6, sxtw #3]
0xffff91419a74   244  b #-0x1c (addr 0xffff91419a58)
0xffff91419a78   248  mov x2, x9
0xffff91419a7c   252  stur x2, [x1, #15]
0xffff91419a80   256  add x3, x1, #0xf (15)
0xffff91419a84   260  and x2, x1, #0xfffffffffff00000
0xffff91419a88   264  ldr x2, [x2, #8]
0xffff91419a8c   268  tbz w2, #2, #+0x18 (addr 0xffff91419aa4)
0xffff91419a90   272  sub csp, jssp, #0x8 (8)
0xffff91419a94   276  str lr, [jssp, #-8]!
0xffff91419a98   280  ldr x16, pc+368 (addr 0x0000ffff91419c08)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff91419a9c   284  blr x16
0xffff91419aa0   288  ldr lr, [jssp], #8
0xffff91419aa4   292  mov x5, x9
0xffff91419aa8   296  add w2, w8, #0x1 (1)
0xffff91419aac   300  lsl x2, x2, #32
0xffff91419ab0   304  stur x2, [x1, #23]
0xffff91419ab4   308  add x1, x5, #0xf (15)
0xffff91419ab8   312  fsub d29, d0, d15
0xffff91419abc   316  str d29, [x1, w8, sxtw #3]
0xffff91419ac0   320  ret
0xffff91419ac4   324  sub csp, jssp, #0x10 (16)
0xffff91419ac8   328  stp fp, lr, [jssp, #-16]!
0xffff91419acc   332  movz fp, #0xa00000000
0xffff91419ad0   336  sub csp, jssp, #0x8 (8)
0xffff91419ad4   340  str fp, [jssp, #-8]!
0xffff91419ad8   344  add fp, jssp, #0x8 (8)
0xffff91419adc   348  ldur x16, [x2, #-1]
0xffff91419ae0   352  ldr x17, [x26, #120]
0xffff91419ae4   356  cmp x16, x17
0xffff91419ae8   360  b.ne #+0x198 (addr 0xffff91419c80)
0xffff91419aec   364  ldur d29, [x2, #7]
0xffff91419af0   368  fcvtzs w8, d29
0xffff91419af4   372  scvtf d1, w8
0xffff91419af8   376  fcmp d29, d1
0xffff91419afc   380  b.ne #+0x184 (addr 0xffff91419c80)
0xffff91419b00   384  ldr lr, [jssp, #16]
0xffff91419b04   388  ldp xzr, fp, [jssp], #24
0xffff91419b08   392  b #-0x158 (addr 0xffff914199b0)
0xffff91419b0c   396  sub csp, jssp, #0x10 (16)
0xffff91419b10   400  stp fp, lr, [jssp, #-16]!
0xffff91419b14   404  movz fp, #0xa00000000
0xffff91419b18   408  sub csp, jssp, #0x8 (8)
0xffff91419b1c   412  str fp, [jssp, #-8]!
0xffff91419b20   416  add fp, jssp, #0x8 (8)
0xffff91419b24   420  ldur x16, [x2, #-1]
0xffff91419b28   424  ldr x17, [x26, #120]
0xffff91419b2c   428  cmp x16, x17
0xffff91419b30   432  b.ne #+0x30 (addr 0xffff91419b60)
0xffff91419b34   436  ldur d30, [x2, #7]
0xffff91419b38   440  fcvtzs x9, d30
0xffff91419b3c   444  cmp x9, #0x1 (1)
0xffff91419b40   448  ccmn x9, #1, #nzcV, vc
0xffff91419b44   452  b.vc #+0x18 (addr 0xffff91419b5c)
0xffff91419b48   456  sub csp, jssp, #0x8 (8)
0xffff91419b4c   460  str lr, [jssp, #-8]!
0xffff91419b50   464  ldr x16, pc+192 (addr 0x0000ffff91419c10)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff91419b54   468  blr x16
0xffff91419b58   472  ldr lr, [jssp], #8
0xffff91419b5c   476  b #+0x24 (addr 0xffff91419b80)
0xffff91419b60   480  ldp x9, x7, [x26, #64]
0xffff91419b64   484  cmp x2, x9
0xffff91419b68   488  cset x9, eq
0xffff91419b6c   492  ccmp x2, x7, #nZcv, ne
0xffff91419b70   496  b.eq #+0x10 (addr 0xffff91419b80)
0xffff91419b74   500  ldr x16, [x26, #40]
0xffff91419b78   504  cmp x2, x16
0xffff91419b7c   508  b.ne #+0x10c (addr 0xffff91419c88)
0xffff91419b80   512  ldr lr, [jssp, #16]
0xffff91419b84   516  ldp xzr, fp, [jssp], #24
0xffff91419b88   520  b #-0x1a0 (addr 0xffff914199e8)
0xffff91419b8c   524  sub csp, jssp, #0x10 (16)
0xffff91419b90   528  stp fp, lr, [jssp, #-16]!
0xffff91419b94   532  movz fp, #0xa00000000
0xffff91419b98   536  sub csp, jssp, #0x8 (8)
0xffff91419b9c   540  str fp, [jssp, #-8]!
0xffff91419ba0   544  add fp, jssp, #0x8 (8)
0xffff91419ba4   548  movz x9, #0x0
0xffff91419ba8   552  mov x16, lr
0xffff91419bac   556  ldr x17, pc+108 (addr 0x0000ffff91419c18)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91419bb0   560  blr x17
0xffff91419bb4   564  lsl x0, x3, #32
0xffff91419bb8   568  movz x10, #0x100000000
0xffff91419bbc   572  sub csp, jssp, #0x10 (16)
0xffff91419bc0   576  stp x10, x0, [jssp, #-16]!
0xffff91419bc4   580  movz x0, #0x2
0xffff91419bc8   584  movz x1, #0x5b88
0xffff91419bcc   588  movk x1, #0xe2, lsl #16
0xffff91419bd0   592  ldr x16, pc+80 (addr 0x0000ffff91419c20)    ;; code: STUB, CEntryStub, minor: 5
0xffff91419bd4   596  blr x16
0xffff91419bd8   600  str x0, [jssp, #72]
0xffff91419bdc   604  ldr x16, pc+76 (addr 0x0000ffff91419c28)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91419be0   608  blr x16
0xffff91419be4   612  ldr lr, [jssp, #16]
0xffff91419be8   616  ldp xzr, fp, [jssp], #24
0xffff91419bec   620  b #-0x1c0 (addr 0xffff91419a2c)
0xffff91419bf0   624  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff91419bf4   628  d63f03e0       constant
0xffff91419bf8   632  fff7ffff       constant
0xffff91419bfc   636  fff7ffff       constant
0xffff91419c00   640  364052d9       constant
0xffff91419c04   644  00000000       constant
0xffff91419c08   648  914170c0       constant
0xffff91419c0c   652  0000ffff       constant
0xffff91419c10   656  914178a0       constant
0xffff91419c14   660  0000ffff       constant
0xffff91419c18   664  91406820       constant
0xffff91419c1c   668  0000ffff       constant
0xffff91419c20   672  91406260       constant
0xffff91419c24   676  0000ffff       constant
0xffff91419c28   680  914068e0       constant
0xffff91419c2c   684  0000ffff       constant
0xffff91419c30   688  movz x16, #0x0
0xffff91419c34   692  sub csp, jssp, #0x10 (16)
0xffff91419c38   696  stp fp, lr, [jssp, #-16]!
0xffff91419c3c   700  bl #+0x54 (addr 0xffff91419c90)
0xffff91419c40   704  movz x16, #0x8
0xffff91419c44   708  sub csp, jssp, #0x10 (16)
0xffff91419c48   712  stp fp, lr, [jssp, #-16]!
0xffff91419c4c   716  bl #+0x44 (addr 0xffff91419c90)
0xffff91419c50   720  movz x16, #0x10
0xffff91419c54   724  sub csp, jssp, #0x10 (16)
0xffff91419c58   728  stp fp, lr, [jssp, #-16]!
0xffff91419c5c   732  bl #+0x34 (addr 0xffff91419c90)
0xffff91419c60   736  movz x16, #0x18
0xffff91419c64   740  sub csp, jssp, #0x10 (16)
0xffff91419c68   744  stp fp, lr, [jssp, #-16]!
0xffff91419c6c   748  bl #+0x24 (addr 0xffff91419c90)
0xffff91419c70   752  movz x16, #0x20
0xffff91419c74   756  sub csp, jssp, #0x10 (16)
0xffff91419c78   760  stp fp, lr, [jssp, #-16]!
0xffff91419c7c   764  bl #+0x14 (addr 0xffff91419c90)
0xffff91419c80   768  movz x16, #0x28
0xffff91419c84   772  bl #+0x1c (addr 0xffff91419ca0)
0xffff91419c88   776  movz x16, #0x30
0xffff91419c8c   780  bl #+0x14 (addr 0xffff91419ca0)
0xffff91419c90   784  movz x17, #0xa00000000
0xffff91419c94   788  sub csp, jssp, #0x10 (16)
0xffff91419c98   792  stp x17, cp, [jssp, #-16]!
0xffff91419c9c   796  add fp, jssp, #0x10 (16)
0xffff91419ca0   800  ldr x17, pc+24 (addr 0x0000ffff91419cb8)    ;; lazy deoptimization bailout 0
0xffff91419ca4   804  add x17, x17, x16
0xffff91419ca8   808  br x17
0xffff91419cac   812  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91419cb0   816  d63f03e0       constant
0xffff91419cb4   820  d503201f       constant
0xffff91419cb8   824  91206000       constant
0xffff91419cbc   828  0000ffff       constant


Safepoints (size = 21)
0xffff91419bd8   600  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff91419a2c  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419a98  code target (STUB)  (0xffff914170c0)
0xffff91419b50  code target (STUB)  (0xffff914178a0)
0xffff91419bac  code target (STUB)  (0xffff91406820)
0xffff91419bd0  code target (STUB)  (0xffff91406260)
0xffff91419bdc  code target (STUB)  (0xffff914068e0)
0xffff91419bf0  constant pool (size 64)
0xffff91419ca0  runtime entry
0xffff91419cac  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = TypeofStub
compiler = crankshaft
Instructions (size = 584)
0xffff91419d40     0  tbz w3, #0, #+0x14c (addr 0xffff91419e8c)
0xffff91419d44     4  ldur x0, [x3, #-1]
0xffff91419d48     8  ldr x16, pc+344 (addr 0x0000ffff91419ea0)    ;; object: 0x36404411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419d4c    12  cmp x0, x16
0xffff91419d50    16  b.eq #+0x134 (addr 0xffff91419e84)
0xffff91419d54    20  ldur x0, [x3, #-1]
0xffff91419d58    24  ldrb w1, [x0, #11]
0xffff91419d5c    28  cmp w1, #0x80 (128)
0xffff91419d60    32  b.lt #+0x11c (addr 0xffff91419e7c)
0xffff91419d64    36  cmp w1, #0x83 (131)
0xffff91419d68    40  b.eq #+0x10c (addr 0xffff91419e74)
0xffff91419d6c    44  cmp w1, #0x80 (128)
0xffff91419d70    48  b.eq #+0xfc (addr 0xffff91419e6c)
0xffff91419d74    52  ldrb w1, [x0, #12]
0xffff91419d78    56  movz w16, #0x12
0xffff91419d7c    60  and w1, w1, w16
0xffff91419d80    64  cmp w1, #0x2 (2)
0xffff91419d84    68  b.eq #+0xe0 (addr 0xffff91419e64)
0xffff91419d88    72  ldr x2, pc+288 (addr 0x0000ffff91419ea8)    ;; object: 0x36404519 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419d8c    76  cmp x0, x2
0xffff91419d90    80  b.eq #+0xcc (addr 0xffff91419e5c)
0xffff91419d94    84  ldr x2, pc+284 (addr 0x0000ffff91419eb0)    ;; object: 0x36404571 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419d98    88  cmp x0, x2
0xffff91419d9c    92  b.eq #+0xb8 (addr 0xffff91419e54)
0xffff91419da0    96  ldr x2, pc+280 (addr 0x0000ffff91419eb8)    ;; object: 0x364045c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419da4   100  cmp x0, x2
0xffff91419da8   104  b.eq #+0xa4 (addr 0xffff91419e4c)
0xffff91419dac   108  ldr x2, pc+276 (addr 0x0000ffff91419ec0)    ;; object: 0x36404621 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419db0   112  cmp x0, x2
0xffff91419db4   116  b.eq #+0x90 (addr 0xffff91419e44)
0xffff91419db8   120  ldr x2, pc+272 (addr 0x0000ffff91419ec8)    ;; object: 0x36404679 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419dbc   124  cmp x0, x2
0xffff91419dc0   128  b.eq #+0x7c (addr 0xffff91419e3c)
0xffff91419dc4   132  ldr x2, pc+268 (addr 0x0000ffff91419ed0)    ;; object: 0x364046d1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419dc8   136  cmp x0, x2
0xffff91419dcc   140  b.eq #+0x68 (addr 0xffff91419e34)
0xffff91419dd0   144  ldr x2, pc+264 (addr 0x0000ffff91419ed8)    ;; object: 0x36404729 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419dd4   148  cmp x0, x2
0xffff91419dd8   152  b.eq #+0x54 (addr 0xffff91419e2c)
0xffff91419ddc   156  ldr x2, pc+260 (addr 0x0000ffff91419ee0)    ;; object: 0x36404781 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419de0   160  cmp x0, x2
0xffff91419de4   164  b.eq #+0x40 (addr 0xffff91419e24)
0xffff91419de8   168  ldr x2, pc+256 (addr 0x0000ffff91419ee8)    ;; object: 0x364047d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419dec   172  cmp x0, x2
0xffff91419df0   176  b.eq #+0x2c (addr 0xffff91419e1c)
0xffff91419df4   180  ldr x2, pc+252 (addr 0x0000ffff91419ef0)    ;; object: 0x36404831 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419df8   184  cmp x0, x2
0xffff91419dfc   188  b.eq #+0x18 (addr 0xffff91419e14)
0xffff91419e00   192  cbnz w1, #+0xc (addr 0xffff91419e0c)
0xffff91419e04   196  ldr x0, pc+244 (addr 0x0000ffff91419ef8)    ;; object: 0x49b04499 <String[6]: object>
0xffff91419e08   200  b #+0x88 (addr 0xffff91419e90)
0xffff91419e0c   204  ldr x0, pc+244 (addr 0x0000ffff91419f00)    ;; object: 0x49b04451 <String[9]: undefined>
0xffff91419e10   208  b #+0x80 (addr 0xffff91419e90)
0xffff91419e14   212  ldr x0, pc+244 (addr 0x0000ffff91419f08)    ;; object: 0x49b04921 <String[8]: bool8x16>
0xffff91419e18   216  b #+0x78 (addr 0xffff91419e90)
0xffff91419e1c   220  ldr x0, pc+244 (addr 0x0000ffff91419f10)    ;; object: 0x49b05699 <String[8]: uint8x16>
0xffff91419e20   224  b #+0x70 (addr 0xffff91419e90)
0xffff91419e24   228  ldr x0, pc+244 (addr 0x0000ffff91419f18)    ;; object: 0x49b05031 <String[7]: int8x16>
0xffff91419e28   232  b #+0x68 (addr 0xffff91419e90)
0xffff91419e2c   236  ldr x0, pc+244 (addr 0x0000ffff91419f20)    ;; object: 0x49b048a1 <String[8]: bool16x8>
0xffff91419e30   240  b #+0x60 (addr 0xffff91419e90)
0xffff91419e34   244  ldr x0, pc+244 (addr 0x0000ffff91419f28)    ;; object: 0x49b05619 <String[8]: uint16x8>
0xffff91419e38   248  b #+0x58 (addr 0xffff91419e90)
0xffff91419e3c   252  ldr x0, pc+244 (addr 0x0000ffff91419f30)    ;; object: 0x49b04fb1 <String[7]: int16x8>
0xffff91419e40   256  b #+0x50 (addr 0xffff91419e90)
0xffff91419e44   260  ldr x0, pc+244 (addr 0x0000ffff91419f38)    ;; object: 0x49b048e1 <String[8]: bool32x4>
0xffff91419e48   264  b #+0x48 (addr 0xffff91419e90)
0xffff91419e4c   268  ldr x0, pc+244 (addr 0x0000ffff91419f40)    ;; object: 0x49b05659 <String[8]: uint32x4>
0xffff91419e50   272  b #+0x40 (addr 0xffff91419e90)
0xffff91419e54   276  ldr x0, pc+244 (addr 0x0000ffff91419f48)    ;; object: 0x49b04ff1 <String[7]: int32x4>
0xffff91419e58   280  b #+0x38 (addr 0xffff91419e90)
0xffff91419e5c   284  ldr x0, pc+244 (addr 0x0000ffff91419f50)    ;; object: 0x49b04d19 <String[9]: float32x4>
0xffff91419e60   288  b #+0x30 (addr 0xffff91419e90)
0xffff91419e64   292  ldr x0, pc+244 (addr 0x0000ffff91419f58)    ;; object: 0x49b04da9 <String[8]: function>
0xffff91419e68   296  b #+0x28 (addr 0xffff91419e90)
0xffff91419e6c   300  ldr x0, pc+244 (addr 0x0000ffff91419f60)    ;; object: 0x49b05559 <String[6]: symbol>
0xffff91419e70   304  b #+0x20 (addr 0xffff91419e90)
0xffff91419e74   308  ldur x0, [x3, #39]
0xffff91419e78   312  b #+0x18 (addr 0xffff91419e90)
0xffff91419e7c   316  ldr x0, pc+236 (addr 0x0000ffff91419f68)    ;; object: 0x49b05519 <String[6]: string>
0xffff91419e80   320  b #+0x10 (addr 0xffff91419e90)
0xffff91419e84   324  ldr x0, pc+236 (addr 0x0000ffff91419f70)    ;; object: 0x49b05251 <String[6]: number>
0xffff91419e88   328  b #+0x8 (addr 0xffff91419e90)
0xffff91419e8c   332  ldr x0, pc+236 (addr 0x0000ffff91419f78)    ;; object: 0x49b05251 <String[6]: number>
0xffff91419e90   336  ret
0xffff91419e94   340  5800075f       constant pool begin (num_const = 58)    ;; constant pool
0xffff91419e98   344  d63f03e0       constant
0xffff91419e9c   348  d503201f       constant
0xffff91419ea0   352  36404411       constant
0xffff91419ea4   356  00000000       constant
0xffff91419ea8   360  36404519       constant
0xffff91419eac   364  00000000       constant
0xffff91419eb0   368  36404571       constant
0xffff91419eb4   372  00000000       constant
0xffff91419eb8   376  364045c9       constant
0xffff91419ebc   380  00000000       constant
0xffff91419ec0   384  36404621       constant
0xffff91419ec4   388  00000000       constant
0xffff91419ec8   392  36404679       constant
0xffff91419ecc   396  00000000       constant
0xffff91419ed0   400  364046d1       constant
0xffff91419ed4   404  00000000       constant
0xffff91419ed8   408  36404729       constant
0xffff91419edc   412  00000000       constant
0xffff91419ee0   416  36404781       constant
0xffff91419ee4   420  00000000       constant
0xffff91419ee8   424  364047d9       constant
0xffff91419eec   428  00000000       constant
0xffff91419ef0   432  36404831       constant
0xffff91419ef4   436  00000000       constant
0xffff91419ef8   440  49b04499       constant
0xffff91419efc   444  00000000       constant
0xffff91419f00   448  49b04451       constant
0xffff91419f04   452  00000000       constant
0xffff91419f08   456  49b04921       constant
0xffff91419f0c   460  00000000       constant
0xffff91419f10   464  49b05699       constant
0xffff91419f14   468  00000000       constant
0xffff91419f18   472  49b05031       constant
0xffff91419f1c   476  00000000       constant
0xffff91419f20   480  49b048a1       constant
0xffff91419f24   484  00000000       constant
0xffff91419f28   488  49b05619       constant
0xffff91419f2c   492  00000000       constant
0xffff91419f30   496  49b04fb1       constant
0xffff91419f34   500  00000000       constant
0xffff91419f38   504  49b048e1       constant
0xffff91419f3c   508  00000000       constant
0xffff91419f40   512  49b05659       constant
0xffff91419f44   516  00000000       constant
0xffff91419f48   520  49b04ff1       constant
0xffff91419f4c   524  00000000       constant
0xffff91419f50   528  49b04d19       constant
0xffff91419f54   532  00000000       constant
0xffff91419f58   536  49b04da9       constant
0xffff91419f5c   540  00000000       constant
0xffff91419f60   544  49b05559       constant
0xffff91419f64   548  00000000       constant
0xffff91419f68   552  49b05519       constant
0xffff91419f6c   556  00000000       constant
0xffff91419f70   560  49b05251       constant
0xffff91419f74   564  00000000       constant
0xffff91419f78   568  49b05251       constant
0xffff91419f7c   572  00000000       constant


Safepoints (size = 8)

RelocInfo (size = 36)
0xffff91419d48  embedded object  (0x36404411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419d88  embedded object  (0x36404519 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419d94  embedded object  (0x36404571 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419da0  embedded object  (0x364045c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419dac  embedded object  (0x36404621 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419db8  embedded object  (0x36404679 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419dc4  embedded object  (0x364046d1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419dd0  embedded object  (0x36404729 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419ddc  embedded object  (0x36404781 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419de8  embedded object  (0x364047d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419df4  embedded object  (0x36404831 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419e04  embedded object  (0x49b04499 <String[6]: object>)
0xffff91419e0c  embedded object  (0x49b04451 <String[9]: undefined>)
0xffff91419e14  embedded object  (0x49b04921 <String[8]: bool8x16>)
0xffff91419e1c  embedded object  (0x49b05699 <String[8]: uint8x16>)
0xffff91419e24  embedded object  (0x49b05031 <String[7]: int8x16>)
0xffff91419e2c  embedded object  (0x49b048a1 <String[8]: bool16x8>)
0xffff91419e34  embedded object  (0x49b05619 <String[8]: uint16x8>)
0xffff91419e3c  embedded object  (0x49b04fb1 <String[7]: int16x8>)
0xffff91419e44  embedded object  (0x49b048e1 <String[8]: bool32x4>)
0xffff91419e4c  embedded object  (0x49b05659 <String[8]: uint32x4>)
0xffff91419e54  embedded object  (0x49b04ff1 <String[7]: int32x4>)
0xffff91419e5c  embedded object  (0x49b04d19 <String[9]: float32x4>)
0xffff91419e64  embedded object  (0x49b04da9 <String[8]: function>)
0xffff91419e6c  embedded object  (0x49b05559 <String[6]: symbol>)
0xffff91419e7c  embedded object  (0x49b05519 <String[6]: string>)
0xffff91419e84  embedded object  (0x49b05251 <String[6]: number>)
0xffff91419e8c  embedded object  (0x49b05251 <String[6]: number>)
0xffff91419e94  constant pool (size 236)

--- End code ---
kind = STUB
major_key = TypeofStub
name = TypeofStub
compiler = crankshaft
Instructions (size = 584)
0xffff91419d40     0  tbz w3, #0, #+0x14c (addr 0xffff91419e8c)
0xffff91419d44     4  ldur x0, [x3, #-1]
0xffff91419d48     8  ldr x16, pc+344 (addr 0x0000ffff91419ea0)    ;; object: 0x36404411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419d4c    12  cmp x0, x16
0xffff91419d50    16  b.eq #+0x134 (addr 0xffff91419e84)
0xffff91419d54    20  ldur x0, [x3, #-1]
0xffff91419d58    24  ldrb w1, [x0, #11]
0xffff91419d5c    28  cmp w1, #0x80 (128)
0xffff91419d60    32  b.lt #+0x11c (addr 0xffff91419e7c)
0xffff91419d64    36  cmp w1, #0x83 (131)
0xffff91419d68    40  b.eq #+0x10c (addr 0xffff91419e74)
0xffff91419d6c    44  cmp w1, #0x80 (128)
0xffff91419d70    48  b.eq #+0xfc (addr 0xffff91419e6c)
0xffff91419d74    52  ldrb w1, [x0, #12]
0xffff91419d78    56  movz w16, #0x12
0xffff91419d7c    60  and w1, w1, w16
0xffff91419d80    64  cmp w1, #0x2 (2)
0xffff91419d84    68  b.eq #+0xe0 (addr 0xffff91419e64)
0xffff91419d88    72  ldr x2, pc+288 (addr 0x0000ffff91419ea8)    ;; object: 0x36404519 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419d8c    76  cmp x0, x2
0xffff91419d90    80  b.eq #+0xcc (addr 0xffff91419e5c)
0xffff91419d94    84  ldr x2, pc+284 (addr 0x0000ffff91419eb0)    ;; object: 0x36404571 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419d98    88  cmp x0, x2
0xffff91419d9c    92  b.eq #+0xb8 (addr 0xffff91419e54)
0xffff91419da0    96  ldr x2, pc+280 (addr 0x0000ffff91419eb8)    ;; object: 0x364045c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419da4   100  cmp x0, x2
0xffff91419da8   104  b.eq #+0xa4 (addr 0xffff91419e4c)
0xffff91419dac   108  ldr x2, pc+276 (addr 0x0000ffff91419ec0)    ;; object: 0x36404621 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419db0   112  cmp x0, x2
0xffff91419db4   116  b.eq #+0x90 (addr 0xffff91419e44)
0xffff91419db8   120  ldr x2, pc+272 (addr 0x0000ffff91419ec8)    ;; object: 0x36404679 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419dbc   124  cmp x0, x2
0xffff91419dc0   128  b.eq #+0x7c (addr 0xffff91419e3c)
0xffff91419dc4   132  ldr x2, pc+268 (addr 0x0000ffff91419ed0)    ;; object: 0x364046d1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419dc8   136  cmp x0, x2
0xffff91419dcc   140  b.eq #+0x68 (addr 0xffff91419e34)
0xffff91419dd0   144  ldr x2, pc+264 (addr 0x0000ffff91419ed8)    ;; object: 0x36404729 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419dd4   148  cmp x0, x2
0xffff91419dd8   152  b.eq #+0x54 (addr 0xffff91419e2c)
0xffff91419ddc   156  ldr x2, pc+260 (addr 0x0000ffff91419ee0)    ;; object: 0x36404781 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419de0   160  cmp x0, x2
0xffff91419de4   164  b.eq #+0x40 (addr 0xffff91419e24)
0xffff91419de8   168  ldr x2, pc+256 (addr 0x0000ffff91419ee8)    ;; object: 0x364047d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419dec   172  cmp x0, x2
0xffff91419df0   176  b.eq #+0x2c (addr 0xffff91419e1c)
0xffff91419df4   180  ldr x2, pc+252 (addr 0x0000ffff91419ef0)    ;; object: 0x36404831 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91419df8   184  cmp x0, x2
0xffff91419dfc   188  b.eq #+0x18 (addr 0xffff91419e14)
0xffff91419e00   192  cbnz w1, #+0xc (addr 0xffff91419e0c)
0xffff91419e04   196  ldr x0, pc+244 (addr 0x0000ffff91419ef8)    ;; object: 0x49b04499 <String[6]: object>
0xffff91419e08   200  b #+0x88 (addr 0xffff91419e90)
0xffff91419e0c   204  ldr x0, pc+244 (addr 0x0000ffff91419f00)    ;; object: 0x49b04451 <String[9]: undefined>
0xffff91419e10   208  b #+0x80 (addr 0xffff91419e90)
0xffff91419e14   212  ldr x0, pc+244 (addr 0x0000ffff91419f08)    ;; object: 0x49b04921 <String[8]: bool8x16>
0xffff91419e18   216  b #+0x78 (addr 0xffff91419e90)
0xffff91419e1c   220  ldr x0, pc+244 (addr 0x0000ffff91419f10)    ;; object: 0x49b05699 <String[8]: uint8x16>
0xffff91419e20   224  b #+0x70 (addr 0xffff91419e90)
0xffff91419e24   228  ldr x0, pc+244 (addr 0x0000ffff91419f18)    ;; object: 0x49b05031 <String[7]: int8x16>
0xffff91419e28   232  b #+0x68 (addr 0xffff91419e90)
0xffff91419e2c   236  ldr x0, pc+244 (addr 0x0000ffff91419f20)    ;; object: 0x49b048a1 <String[8]: bool16x8>
0xffff91419e30   240  b #+0x60 (addr 0xffff91419e90)
0xffff91419e34   244  ldr x0, pc+244 (addr 0x0000ffff91419f28)    ;; object: 0x49b05619 <String[8]: uint16x8>
0xffff91419e38   248  b #+0x58 (addr 0xffff91419e90)
0xffff91419e3c   252  ldr x0, pc+244 (addr 0x0000ffff91419f30)    ;; object: 0x49b04fb1 <String[7]: int16x8>
0xffff91419e40   256  b #+0x50 (addr 0xffff91419e90)
0xffff91419e44   260  ldr x0, pc+244 (addr 0x0000ffff91419f38)    ;; object: 0x49b048e1 <String[8]: bool32x4>
0xffff91419e48   264  b #+0x48 (addr 0xffff91419e90)
0xffff91419e4c   268  ldr x0, pc+244 (addr 0x0000ffff91419f40)    ;; object: 0x49b05659 <String[8]: uint32x4>
0xffff91419e50   272  b #+0x40 (addr 0xffff91419e90)
0xffff91419e54   276  ldr x0, pc+244 (addr 0x0000ffff91419f48)    ;; object: 0x49b04ff1 <String[7]: int32x4>
0xffff91419e58   280  b #+0x38 (addr 0xffff91419e90)
0xffff91419e5c   284  ldr x0, pc+244 (addr 0x0000ffff91419f50)    ;; object: 0x49b04d19 <String[9]: float32x4>
0xffff91419e60   288  b #+0x30 (addr 0xffff91419e90)
0xffff91419e64   292  ldr x0, pc+244 (addr 0x0000ffff91419f58)    ;; object: 0x49b04da9 <String[8]: function>
0xffff91419e68   296  b #+0x28 (addr 0xffff91419e90)
0xffff91419e6c   300  ldr x0, pc+244 (addr 0x0000ffff91419f60)    ;; object: 0x49b05559 <String[6]: symbol>
0xffff91419e70   304  b #+0x20 (addr 0xffff91419e90)
0xffff91419e74   308  ldur x0, [x3, #39]
0xffff91419e78   312  b #+0x18 (addr 0xffff91419e90)
0xffff91419e7c   316  ldr x0, pc+236 (addr 0x0000ffff91419f68)    ;; object: 0x49b05519 <String[6]: string>
0xffff91419e80   320  b #+0x10 (addr 0xffff91419e90)
0xffff91419e84   324  ldr x0, pc+236 (addr 0x0000ffff91419f70)    ;; object: 0x49b05251 <String[6]: number>
0xffff91419e88   328  b #+0x8 (addr 0xffff91419e90)
0xffff91419e8c   332  ldr x0, pc+236 (addr 0x0000ffff91419f78)    ;; object: 0x49b05251 <String[6]: number>
0xffff91419e90   336  ret
0xffff91419e94   340  5800075f       constant pool begin (num_const = 58)    ;; constant pool
0xffff91419e98   344  d63f03e0       constant
0xffff91419e9c   348  d503201f       constant
0xffff91419ea0   352  36404411       constant
0xffff91419ea4   356  00000000       constant
0xffff91419ea8   360  36404519       constant
0xffff91419eac   364  00000000       constant
0xffff91419eb0   368  36404571       constant
0xffff91419eb4   372  00000000       constant
0xffff91419eb8   376  364045c9       constant
0xffff91419ebc   380  00000000       constant
0xffff91419ec0   384  36404621       constant
0xffff91419ec4   388  00000000       constant
0xffff91419ec8   392  36404679       constant
0xffff91419ecc   396  00000000       constant
0xffff91419ed0   400  364046d1       constant
0xffff91419ed4   404  00000000       constant
0xffff91419ed8   408  36404729       constant
0xffff91419edc   412  00000000       constant
0xffff91419ee0   416  36404781       constant
0xffff91419ee4   420  00000000       constant
0xffff91419ee8   424  364047d9       constant
0xffff91419eec   428  00000000       constant
0xffff91419ef0   432  36404831       constant
0xffff91419ef4   436  00000000       constant
0xffff91419ef8   440  49b04499       constant
0xffff91419efc   444  00000000       constant
0xffff91419f00   448  49b04451       constant
0xffff91419f04   452  00000000       constant
0xffff91419f08   456  49b04921       constant
0xffff91419f0c   460  00000000       constant
0xffff91419f10   464  49b05699       constant
0xffff91419f14   468  00000000       constant
0xffff91419f18   472  49b05031       constant
0xffff91419f1c   476  00000000       constant
0xffff91419f20   480  49b048a1       constant
0xffff91419f24   484  00000000       constant
0xffff91419f28   488  49b05619       constant
0xffff91419f2c   492  00000000       constant
0xffff91419f30   496  49b04fb1       constant
0xffff91419f34   500  00000000       constant
0xffff91419f38   504  49b048e1       constant
0xffff91419f3c   508  00000000       constant
0xffff91419f40   512  49b05659       constant
0xffff91419f44   516  00000000       constant
0xffff91419f48   520  49b04ff1       constant
0xffff91419f4c   524  00000000       constant
0xffff91419f50   528  49b04d19       constant
0xffff91419f54   532  00000000       constant
0xffff91419f58   536  49b04da9       constant
0xffff91419f5c   540  00000000       constant
0xffff91419f60   544  49b05559       constant
0xffff91419f64   548  00000000       constant
0xffff91419f68   552  49b05519       constant
0xffff91419f6c   556  00000000       constant
0xffff91419f70   560  49b05251       constant
0xffff91419f74   564  00000000       constant
0xffff91419f78   568  49b05251       constant
0xffff91419f7c   572  00000000       constant


Safepoints (size = 8)

RelocInfo (size = 36)
0xffff91419d48  embedded object  (0x36404411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419d88  embedded object  (0x36404519 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419d94  embedded object  (0x36404571 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419da0  embedded object  (0x364045c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419dac  embedded object  (0x36404621 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419db8  embedded object  (0x36404679 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419dc4  embedded object  (0x364046d1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419dd0  embedded object  (0x36404729 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419ddc  embedded object  (0x36404781 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419de8  embedded object  (0x364047d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419df4  embedded object  (0x36404831 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91419e04  embedded object  (0x49b04499 <String[6]: object>)
0xffff91419e0c  embedded object  (0x49b04451 <String[9]: undefined>)
0xffff91419e14  embedded object  (0x49b04921 <String[8]: bool8x16>)
0xffff91419e1c  embedded object  (0x49b05699 <String[8]: uint8x16>)
0xffff91419e24  embedded object  (0x49b05031 <String[7]: int8x16>)
0xffff91419e2c  embedded object  (0x49b048a1 <String[8]: bool16x8>)
0xffff91419e34  embedded object  (0x49b05619 <String[8]: uint16x8>)
0xffff91419e3c  embedded object  (0x49b04fb1 <String[7]: int16x8>)
0xffff91419e44  embedded object  (0x49b048e1 <String[8]: bool32x4>)
0xffff91419e4c  embedded object  (0x49b05659 <String[8]: uint32x4>)
0xffff91419e54  embedded object  (0x49b04ff1 <String[7]: int32x4>)
0xffff91419e5c  embedded object  (0x49b04d19 <String[9]: float32x4>)
0xffff91419e64  embedded object  (0x49b04da9 <String[8]: function>)
0xffff91419e6c  embedded object  (0x49b05559 <String[6]: symbol>)
0xffff91419e7c  embedded object  (0x49b05519 <String[6]: string>)
0xffff91419e84  embedded object  (0x49b05251 <String[6]: number>)
0xffff91419e8c  embedded object  (0x49b05251 <String[6]: number>)
0xffff91419e94  constant pool (size 236)


kind = STUB
major_key = JSEntryStub
name = JSEntryStub
compiler = unknown
Instructions (size = 400)
0xffff9141a000     0  movn xzr, #0x1
0xffff9141a004     4  stp d14, d15, [csp, #-16]!
0xffff9141a008     8  stp d12, d13, [csp, #-16]!
0xffff9141a00c    12  stp d10, d11, [csp, #-16]!
0xffff9141a010    16  stp d8, d9, [csp, #-16]!
0xffff9141a014    20  stp fp, lr, [csp, #-16]!
0xffff9141a018    24  stp cp, jssp, [csp, #-16]!
0xffff9141a01c    28  stp x25, x26, [csp, #-16]!
0xffff9141a020    32  stp x23, x24, [csp, #-16]!
0xffff9141a024    36  stp x21, x22, [csp, #-16]!
0xffff9141a028    40  stp x19, x20, [csp, #-16]!
0xffff9141a02c    44  mov jssp, csp
0xffff9141a030    48  mrs x16, fpcr
0xffff9141a034    52  tbnz w16, #25, #+0xc (addr 0xffff9141a040)
0xffff9141a038    56  orr x16, x16, #0x2000000
0xffff9141a03c    60  msr fpcr, x16
0xffff9141a040    64  fmov d15, xzr
0xffff9141a044    68  movn x13, #0x0
0xffff9141a048    72  movz x12, #0x100000000
0xffff9141a04c    76  ldr x11, pc+244 (addr 0x0000ffff9141a140)    ;; external reference (Isolate::c_entry_fp_address)
0xffff9141a050    80  ldr x10, [x11]
0xffff9141a054    84  sub csp, jssp, #0x20 (32)
0xffff9141a058    88  stp x10, xzr, [jssp, #-32]!
0xffff9141a05c    92  stp x12, x13, [jssp, #16]
0xffff9141a060    96  add fp, jssp, #0x18 (24)
0xffff9141a064   100  ldr x10, pc+228 (addr 0x0000ffff9141a148)    ;; external reference (Isolate::js_entry_sp_address)
0xffff9141a068   104  ldr x11, [x10]
0xffff9141a06c   108  cbnz x11, #+0x18 (addr 0xffff9141a084)
0xffff9141a070   112  str fp, [x10]
0xffff9141a074   116  movz x12, #0x100000000
0xffff9141a078   120  sub csp, jssp, #0x8 (8)
0xffff9141a07c   124  str x12, [jssp, #-8]!
0xffff9141a080   128  b #+0xc (addr 0xffff9141a08c)
0xffff9141a084   132  sub csp, jssp, #0x8 (8)
0xffff9141a088   136  str xzr, [jssp, #-8]!
0xffff9141a08c   140  b #+0x14 (addr 0xffff9141a0a0)
0xffff9141a090   144  ldr x10, pc+192 (addr 0x0000ffff9141a150)    ;; external reference (Isolate::pending_exception_address)
0xffff9141a094   148  str x0, [x10]
0xffff9141a098   152  ldr x0, [x26, #344]
0xffff9141a09c   156  b #+0x40 (addr 0xffff9141a0dc)
0xffff9141a0a0   160  ldr x11, pc+184 (addr 0x0000ffff9141a158)    ;; external reference (Isolate::handler_address)
0xffff9141a0a4   164  ldr x10, [x11]
0xffff9141a0a8   168  sub csp, jssp, #0x8 (8)
0xffff9141a0ac   172  str x10, [jssp, #-8]!
0xffff9141a0b0   176  str jssp, [x11]
0xffff9141a0b4   180  ldr x10, pc+172 (addr 0x0000ffff9141a160)    ;; object: 0x49b04519 <the hole>
0xffff9141a0b8   184  ldr x11, pc+176 (addr 0x0000ffff9141a168)    ;; external reference (Isolate::pending_exception_address)
0xffff9141a0bc   188  str x10, [x11]
0xffff9141a0c0   192  ldr x10, pc+176 (addr 0x0000ffff9141a170)    ;; external reference (Builtins::JSEntryTrampoline)
0xffff9141a0c4   196  ldr x11, [x10]
0xffff9141a0c8   200  add x12, x11, #0x5f (95)
0xffff9141a0cc   204  blr x12
0xffff9141a0d0   208  ldr x10, [jssp], #8
0xffff9141a0d4   212  ldr x11, pc+164 (addr 0x0000ffff9141a178)    ;; external reference (Isolate::handler_address)
0xffff9141a0d8   216  str x10, [x11]
0xffff9141a0dc   220  ldr x10, [jssp], #8
0xffff9141a0e0   224  movz x16, #0x100000000
0xffff9141a0e4   228  cmp x10, x16
0xffff9141a0e8   232  b.ne #+0xc (addr 0xffff9141a0f4)
0xffff9141a0ec   236  ldr x11, pc+148 (addr 0x0000ffff9141a180)    ;; external reference (Isolate::js_entry_sp_address)
0xffff9141a0f0   240  str xzr, [x11]
0xffff9141a0f4   244  ldr x10, [jssp], #8
0xffff9141a0f8   248  ldr x11, pc+144 (addr 0x0000ffff9141a188)    ;; external reference (Isolate::c_entry_fp_address)
0xffff9141a0fc   252  str x10, [x11]
0xffff9141a100   256  add jssp, jssp, #0x18 (24)
0xffff9141a104   260  mov csp, jssp
0xffff9141a108   264  ldp x19, x20, [csp], #16
0xffff9141a10c   268  ldp x21, x22, [csp], #16
0xffff9141a110   272  ldp x23, x24, [csp], #16
0xffff9141a114   276  ldp x25, x26, [csp], #16
0xffff9141a118   280  ldp cp, jssp, [csp], #16
0xffff9141a11c   284  ldp fp, lr, [csp], #16
0xffff9141a120   288  ldp d8, d9, [csp], #16
0xffff9141a124   292  ldp d10, d11, [csp], #16
0xffff9141a128   296  ldp d12, d13, [csp], #16
0xffff9141a12c   300  ldp d14, d15, [csp], #16
0xffff9141a130   304  ret
0xffff9141a134   308  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff9141a138   312  d63f03e0       constant
0xffff9141a13c   316  d503201f       constant
0xffff9141a140   320  4117fdf8       constant
0xffff9141a144   324  00000000       constant
0xffff9141a148   328  4117fe18       constant
0xffff9141a14c   332  00000000       constant
0xffff9141a150   336  4117fda0       constant
0xffff9141a154   340  00000000       constant
0xffff9141a158   344  4117fe00       constant
0xffff9141a15c   348  00000000       constant
0xffff9141a160   352  49b04519       constant
0xffff9141a164   356  00000000       constant
0xffff9141a168   360  4117fda0       constant
0xffff9141a16c   364  00000000       constant
0xffff9141a170   368  41180b08       constant
0xffff9141a174   372  00000000       constant
0xffff9141a178   376  4117fe00       constant
0xffff9141a17c   380  00000000       constant
0xffff9141a180   384  4117fe18       constant
0xffff9141a184   388  00000000       constant
0xffff9141a188   392  4117fdf8       constant
0xffff9141a18c   396  00000000       constant


Handler Table (size = 24)

RelocInfo (size = 27)
0xffff9141a04c  external reference (Isolate::c_entry_fp_address)  (0x4117fdf8)
0xffff9141a064  external reference (Isolate::js_entry_sp_address)  (0x4117fe18)
0xffff9141a090  external reference (Isolate::pending_exception_address)  (0x4117fda0)
0xffff9141a0a0  external reference (Isolate::handler_address)  (0x4117fe00)
0xffff9141a0b4  embedded object  (0x49b04519 <the hole>)
0xffff9141a0b8  external reference (Isolate::pending_exception_address)  (0x4117fda0)
0xffff9141a0c0  external reference (Builtins::JSEntryTrampoline)  (0x41180b08)
0xffff9141a0d4  external reference (Isolate::handler_address)  (0x4117fe00)
0xffff9141a0ec  external reference (Isolate::js_entry_sp_address)  (0x4117fe18)
0xffff9141a0f8  external reference (Isolate::c_entry_fp_address)  (0x4117fdf8)
0xffff9141a134  constant pool (size 92)


kind = STUB
major_key = JSEntryStub
name = JSConstructEntryStub
compiler = unknown
Instructions (size = 400)
0xffff9141a200     0  movn xzr, #0x1
0xffff9141a204     4  stp d14, d15, [csp, #-16]!
0xffff9141a208     8  stp d12, d13, [csp, #-16]!
0xffff9141a20c    12  stp d10, d11, [csp, #-16]!
0xffff9141a210    16  stp d8, d9, [csp, #-16]!
0xffff9141a214    20  stp fp, lr, [csp, #-16]!
0xffff9141a218    24  stp cp, jssp, [csp, #-16]!
0xffff9141a21c    28  stp x25, x26, [csp, #-16]!
0xffff9141a220    32  stp x23, x24, [csp, #-16]!
0xffff9141a224    36  stp x21, x22, [csp, #-16]!
0xffff9141a228    40  stp x19, x20, [csp, #-16]!
0xffff9141a22c    44  mov jssp, csp
0xffff9141a230    48  mrs x16, fpcr
0xffff9141a234    52  tbnz w16, #25, #+0xc (addr 0xffff9141a240)
0xffff9141a238    56  orr x16, x16, #0x2000000
0xffff9141a23c    60  msr fpcr, x16
0xffff9141a240    64  fmov d15, xzr
0xffff9141a244    68  movn x13, #0x0
0xffff9141a248    72  movz x12, #0x200000000
0xffff9141a24c    76  ldr x11, pc+244 (addr 0x0000ffff9141a340)    ;; external reference (Isolate::c_entry_fp_address)
0xffff9141a250    80  ldr x10, [x11]
0xffff9141a254    84  sub csp, jssp, #0x20 (32)
0xffff9141a258    88  stp x10, xzr, [jssp, #-32]!
0xffff9141a25c    92  stp x12, x13, [jssp, #16]
0xffff9141a260    96  add fp, jssp, #0x18 (24)
0xffff9141a264   100  ldr x10, pc+228 (addr 0x0000ffff9141a348)    ;; external reference (Isolate::js_entry_sp_address)
0xffff9141a268   104  ldr x11, [x10]
0xffff9141a26c   108  cbnz x11, #+0x18 (addr 0xffff9141a284)
0xffff9141a270   112  str fp, [x10]
0xffff9141a274   116  movz x12, #0x100000000
0xffff9141a278   120  sub csp, jssp, #0x8 (8)
0xffff9141a27c   124  str x12, [jssp, #-8]!
0xffff9141a280   128  b #+0xc (addr 0xffff9141a28c)
0xffff9141a284   132  sub csp, jssp, #0x8 (8)
0xffff9141a288   136  str xzr, [jssp, #-8]!
0xffff9141a28c   140  b #+0x14 (addr 0xffff9141a2a0)
0xffff9141a290   144  ldr x10, pc+192 (addr 0x0000ffff9141a350)    ;; external reference (Isolate::pending_exception_address)
0xffff9141a294   148  str x0, [x10]
0xffff9141a298   152  ldr x0, [x26, #344]
0xffff9141a29c   156  b #+0x40 (addr 0xffff9141a2dc)
0xffff9141a2a0   160  ldr x11, pc+184 (addr 0x0000ffff9141a358)    ;; external reference (Isolate::handler_address)
0xffff9141a2a4   164  ldr x10, [x11]
0xffff9141a2a8   168  sub csp, jssp, #0x8 (8)
0xffff9141a2ac   172  str x10, [jssp, #-8]!
0xffff9141a2b0   176  str jssp, [x11]
0xffff9141a2b4   180  ldr x10, pc+172 (addr 0x0000ffff9141a360)    ;; object: 0x49b04519 <the hole>
0xffff9141a2b8   184  ldr x11, pc+176 (addr 0x0000ffff9141a368)    ;; external reference (Isolate::pending_exception_address)
0xffff9141a2bc   188  str x10, [x11]
0xffff9141a2c0   192  ldr x10, pc+176 (addr 0x0000ffff9141a370)    ;; external reference (Builtins::JSConstructEntryTrampoline)
0xffff9141a2c4   196  ldr x11, [x10]
0xffff9141a2c8   200  add x12, x11, #0x5f (95)
0xffff9141a2cc   204  blr x12
0xffff9141a2d0   208  ldr x10, [jssp], #8
0xffff9141a2d4   212  ldr x11, pc+164 (addr 0x0000ffff9141a378)    ;; external reference (Isolate::handler_address)
0xffff9141a2d8   216  str x10, [x11]
0xffff9141a2dc   220  ldr x10, [jssp], #8
0xffff9141a2e0   224  movz x16, #0x100000000
0xffff9141a2e4   228  cmp x10, x16
0xffff9141a2e8   232  b.ne #+0xc (addr 0xffff9141a2f4)
0xffff9141a2ec   236  ldr x11, pc+148 (addr 0x0000ffff9141a380)    ;; external reference (Isolate::js_entry_sp_address)
0xffff9141a2f0   240  str xzr, [x11]
0xffff9141a2f4   244  ldr x10, [jssp], #8
0xffff9141a2f8   248  ldr x11, pc+144 (addr 0x0000ffff9141a388)    ;; external reference (Isolate::c_entry_fp_address)
0xffff9141a2fc   252  str x10, [x11]
0xffff9141a300   256  add jssp, jssp, #0x18 (24)
0xffff9141a304   260  mov csp, jssp
0xffff9141a308   264  ldp x19, x20, [csp], #16
0xffff9141a30c   268  ldp x21, x22, [csp], #16
0xffff9141a310   272  ldp x23, x24, [csp], #16
0xffff9141a314   276  ldp x25, x26, [csp], #16
0xffff9141a318   280  ldp cp, jssp, [csp], #16
0xffff9141a31c   284  ldp fp, lr, [csp], #16
0xffff9141a320   288  ldp d8, d9, [csp], #16
0xffff9141a324   292  ldp d10, d11, [csp], #16
0xffff9141a328   296  ldp d12, d13, [csp], #16
0xffff9141a32c   300  ldp d14, d15, [csp], #16
0xffff9141a330   304  ret
0xffff9141a334   308  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff9141a338   312  d63f03e0       constant
0xffff9141a33c   316  d503201f       constant
0xffff9141a340   320  4117fdf8       constant
0xffff9141a344   324  00000000       constant
0xffff9141a348   328  4117fe18       constant
0xffff9141a34c   332  00000000       constant
0xffff9141a350   336  4117fda0       constant
0xffff9141a354   340  00000000       constant
0xffff9141a358   344  4117fe00       constant
0xffff9141a35c   348  00000000       constant
0xffff9141a360   352  49b04519       constant
0xffff9141a364   356  00000000       constant
0xffff9141a368   360  4117fda0       constant
0xffff9141a36c   364  00000000       constant
0xffff9141a370   368  41180b10       constant
0xffff9141a374   372  00000000       constant
0xffff9141a378   376  4117fe00       constant
0xffff9141a37c   380  00000000       constant
0xffff9141a380   384  4117fe18       constant
0xffff9141a384   388  00000000       constant
0xffff9141a388   392  4117fdf8       constant
0xffff9141a38c   396  00000000       constant


Handler Table (size = 24)

RelocInfo (size = 27)
0xffff9141a24c  external reference (Isolate::c_entry_fp_address)  (0x4117fdf8)
0xffff9141a264  external reference (Isolate::js_entry_sp_address)  (0x4117fe18)
0xffff9141a290  external reference (Isolate::pending_exception_address)  (0x4117fda0)
0xffff9141a2a0  external reference (Isolate::handler_address)  (0x4117fe00)
0xffff9141a2b4  embedded object  (0x49b04519 <the hole>)
0xffff9141a2b8  external reference (Isolate::pending_exception_address)  (0x4117fda0)
0xffff9141a2c0  external reference (Builtins::JSConstructEntryTrampoline)  (0x41180b10)
0xffff9141a2d4  external reference (Isolate::handler_address)  (0x4117fe00)
0xffff9141a2ec  external reference (Isolate::js_entry_sp_address)  (0x4117fe18)
0xffff9141a2f8  external reference (Isolate::c_entry_fp_address)  (0x4117fdf8)
0xffff9141a334  constant pool (size 92)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ToObjectStub
compiler = crankshaft
Instructions (size = 333)
0xffff9141e440     0  tbz w0, #0, #+0x20 (addr 0xffff9141e460)
0xffff9141e444     4  ldur x1, [x0, #-1]
0xffff9141e448     8  ldrb w2, [x1, #11]
0xffff9141e44c    12  cmp w2, #0xb1 (177)
0xffff9141e450    16  b.ge #+0x5c (addr 0xffff9141e4ac)
0xffff9141e454    20  ldrb w1, [x1, #8]
0xffff9141e458    24  cbnz w1, #+0xc (addr 0xffff9141e464)
0xffff9141e45c    28  b #+0xdc (addr 0xffff9141e538)
0xffff9141e460    32  movz x1, #0x3f
0xffff9141e464    36  ldur x2, [cp, #39]
0xffff9141e468    40  add x3, x2, #0xf (15)
0xffff9141e46c    44  ldr x4, [x3, w1, sxtw #3]
0xffff9141e470    48  ldur x1, [x4, #23]
0xffff9141e474    52  movz x3, #0xf2c0
0xffff9141e478    56  movk x3, #0x4117, lsl #16
0xffff9141e47c    60  ldp x4, x2, [x3]
0xffff9141e480    64  adds x16, x4, #0x20 (32)
0xffff9141e484    68  ccmp x16, x2, #nzCv, lo
0xffff9141e488    72  b.hi #+0x28 (addr 0xffff9141e4b0)
0xffff9141e48c    76  str x16, [x3]
0xffff9141e490    80  orr x4, x4, #0x1
0xffff9141e494    84  stur x1, [x4, #-1]
0xffff9141e498    88  ldr x1, [x26, #304]
0xffff9141e49c    92  stur x1, [x4, #7]
0xffff9141e4a0    96  stur x1, [x4, #15]
0xffff9141e4a4   100  stur x0, [x4, #23]
0xffff9141e4a8   104  mov x0, x4
0xffff9141e4ac   108  ret
0xffff9141e4b0   112  sub csp, jssp, #0x10 (16)
0xffff9141e4b4   116  stp fp, lr, [jssp, #-16]!
0xffff9141e4b8   120  movz fp, #0xa00000000
0xffff9141e4bc   124  sub csp, jssp, #0x8 (8)
0xffff9141e4c0   128  str fp, [jssp, #-8]!
0xffff9141e4c4   132  add fp, jssp, #0x8 (8)
0xffff9141e4c8   136  movz x4, #0x0
0xffff9141e4cc   140  mov x16, lr
0xffff9141e4d0   144  ldr x17, pc+80 (addr 0x0000ffff9141e520)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9141e4d4   148  blr x17
0xffff9141e4d8   152  movz x0, #0x2000000000
0xffff9141e4dc   156  movz x10, #0x0
0xffff9141e4e0   160  sub csp, jssp, #0x10 (16)
0xffff9141e4e4   164  stp x10, x0, [jssp, #-16]!
0xffff9141e4e8   168  movz x0, #0x2
0xffff9141e4ec   172  movz x1, #0x5b88
0xffff9141e4f0   176  movk x1, #0xe2, lsl #16
0xffff9141e4f4   180  ldr x16, pc+52 (addr 0x0000ffff9141e528)    ;; code: STUB, CEntryStub, minor: 5
0xffff9141e4f8   184  blr x16
0xffff9141e4fc   188  str x0, [jssp, #32]
0xffff9141e500   192  ldr x16, pc+48 (addr 0x0000ffff9141e530)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9141e504   196  blr x16
0xffff9141e508   200  ldr lr, [jssp, #16]
0xffff9141e50c   204  ldp xzr, fp, [jssp], #24
0xffff9141e510   208  b #-0x7c (addr 0xffff9141e494)
0xffff9141e514   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff9141e518   216  d63f03e0       constant
0xffff9141e51c   220  d503201f       constant
0xffff9141e520   224  91406820       constant
0xffff9141e524   228  0000ffff       constant
0xffff9141e528   232  91406260       constant
0xffff9141e52c   236  0000ffff       constant
0xffff9141e530   240  914068e0       constant
0xffff9141e534   244  0000ffff       constant
0xffff9141e538   248  movz x16, #0x0
0xffff9141e53c   252  sub csp, jssp, #0x10 (16)
0xffff9141e540   256  stp fp, lr, [jssp, #-16]!
0xffff9141e544   260  bl #+0x4 (addr 0xffff9141e548)
0xffff9141e548   264  movz x17, #0xa00000000
0xffff9141e54c   268  sub csp, jssp, #0x10 (16)
0xffff9141e550   272  stp x17, cp, [jssp, #-16]!
0xffff9141e554   276  add fp, jssp, #0x10 (16)
0xffff9141e558   280  ldr x17, pc+24 (addr 0x0000ffff9141e570)    ;; lazy deoptimization bailout 0
0xffff9141e55c   284  add x17, x17, x16
0xffff9141e560   288  br x17
0xffff9141e564   292  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9141e568   296  d63f03e0       constant
0xffff9141e56c   300  d503201f       constant
0xffff9141e570   304  91206000       constant
0xffff9141e574   308  0000ffff       constant


Safepoints (size = 21)
0xffff9141e4fc   188  000 | x0 | x1 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 21)
0xffff9141e4d0  code target (STUB)  (0xffff91406820)
0xffff9141e4f4  code target (STUB)  (0xffff91406260)
0xffff9141e500  code target (STUB)  (0xffff914068e0)
0xffff9141e514  constant pool (size 36)
0xffff9141e558  runtime entry
0xffff9141e564  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ToObjectStub
name = ToObjectStub
compiler = crankshaft
Instructions (size = 333)
0xffff9141e440     0  tbz w0, #0, #+0x20 (addr 0xffff9141e460)
0xffff9141e444     4  ldur x1, [x0, #-1]
0xffff9141e448     8  ldrb w2, [x1, #11]
0xffff9141e44c    12  cmp w2, #0xb1 (177)
0xffff9141e450    16  b.ge #+0x5c (addr 0xffff9141e4ac)
0xffff9141e454    20  ldrb w1, [x1, #8]
0xffff9141e458    24  cbnz w1, #+0xc (addr 0xffff9141e464)
0xffff9141e45c    28  b #+0xdc (addr 0xffff9141e538)
0xffff9141e460    32  movz x1, #0x3f
0xffff9141e464    36  ldur x2, [cp, #39]
0xffff9141e468    40  add x3, x2, #0xf (15)
0xffff9141e46c    44  ldr x4, [x3, w1, sxtw #3]
0xffff9141e470    48  ldur x1, [x4, #23]
0xffff9141e474    52  movz x3, #0xf2c0
0xffff9141e478    56  movk x3, #0x4117, lsl #16
0xffff9141e47c    60  ldp x4, x2, [x3]
0xffff9141e480    64  adds x16, x4, #0x20 (32)
0xffff9141e484    68  ccmp x16, x2, #nzCv, lo
0xffff9141e488    72  b.hi #+0x28 (addr 0xffff9141e4b0)
0xffff9141e48c    76  str x16, [x3]
0xffff9141e490    80  orr x4, x4, #0x1
0xffff9141e494    84  stur x1, [x4, #-1]
0xffff9141e498    88  ldr x1, [x26, #304]
0xffff9141e49c    92  stur x1, [x4, #7]
0xffff9141e4a0    96  stur x1, [x4, #15]
0xffff9141e4a4   100  stur x0, [x4, #23]
0xffff9141e4a8   104  mov x0, x4
0xffff9141e4ac   108  ret
0xffff9141e4b0   112  sub csp, jssp, #0x10 (16)
0xffff9141e4b4   116  stp fp, lr, [jssp, #-16]!
0xffff9141e4b8   120  movz fp, #0xa00000000
0xffff9141e4bc   124  sub csp, jssp, #0x8 (8)
0xffff9141e4c0   128  str fp, [jssp, #-8]!
0xffff9141e4c4   132  add fp, jssp, #0x8 (8)
0xffff9141e4c8   136  movz x4, #0x0
0xffff9141e4cc   140  mov x16, lr
0xffff9141e4d0   144  ldr x17, pc+80 (addr 0x0000ffff9141e520)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9141e4d4   148  blr x17
0xffff9141e4d8   152  movz x0, #0x2000000000
0xffff9141e4dc   156  movz x10, #0x0
0xffff9141e4e0   160  sub csp, jssp, #0x10 (16)
0xffff9141e4e4   164  stp x10, x0, [jssp, #-16]!
0xffff9141e4e8   168  movz x0, #0x2
0xffff9141e4ec   172  movz x1, #0x5b88
0xffff9141e4f0   176  movk x1, #0xe2, lsl #16
0xffff9141e4f4   180  ldr x16, pc+52 (addr 0x0000ffff9141e528)    ;; code: STUB, CEntryStub, minor: 5
0xffff9141e4f8   184  blr x16
0xffff9141e4fc   188  str x0, [jssp, #32]
0xffff9141e500   192  ldr x16, pc+48 (addr 0x0000ffff9141e530)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9141e504   196  blr x16
0xffff9141e508   200  ldr lr, [jssp, #16]
0xffff9141e50c   204  ldp xzr, fp, [jssp], #24
0xffff9141e510   208  b #-0x7c (addr 0xffff9141e494)
0xffff9141e514   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff9141e518   216  d63f03e0       constant
0xffff9141e51c   220  d503201f       constant
0xffff9141e520   224  91406820       constant
0xffff9141e524   228  0000ffff       constant
0xffff9141e528   232  91406260       constant
0xffff9141e52c   236  0000ffff       constant
0xffff9141e530   240  914068e0       constant
0xffff9141e534   244  0000ffff       constant
0xffff9141e538   248  movz x16, #0x0
0xffff9141e53c   252  sub csp, jssp, #0x10 (16)
0xffff9141e540   256  stp fp, lr, [jssp, #-16]!
0xffff9141e544   260  bl #+0x4 (addr 0xffff9141e548)
0xffff9141e548   264  movz x17, #0xa00000000
0xffff9141e54c   268  sub csp, jssp, #0x10 (16)
0xffff9141e550   272  stp x17, cp, [jssp, #-16]!
0xffff9141e554   276  add fp, jssp, #0x10 (16)
0xffff9141e558   280  ldr x17, pc+24 (addr 0x0000ffff9141e570)    ;; lazy deoptimization bailout 0
0xffff9141e55c   284  add x17, x17, x16
0xffff9141e560   288  br x17
0xffff9141e564   292  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9141e568   296  d63f03e0       constant
0xffff9141e56c   300  d503201f       constant
0xffff9141e570   304  91206000       constant
0xffff9141e574   308  0000ffff       constant


Safepoints (size = 21)
0xffff9141e4fc   188  000 | x0 | x1 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 21)
0xffff9141e4d0  code target (STUB)  (0xffff91406820)
0xffff9141e4f4  code target (STUB)  (0xffff91406260)
0xffff9141e500  code target (STUB)  (0xffff914068e0)
0xffff9141e514  constant pool (size 36)
0xffff9141e558  runtime entry
0xffff9141e564  constant pool (size 20)


kind = STUB
major_key = FastNewObjectStub
name = FastNewObjectStub
compiler = unknown
Instructions (size = 544)
0xffff91420680     0  ldur x2, [x3, #-1]
0xffff91420684     4  ldrb w2, [x2, #11]
0xffff91420688     8  cmp x2, #0xc9 (201)
0xffff9142068c    12  b.ne #+0x1a8 (addr 0xffff91420834)
0xffff91420690    16  ldur x2, [x3, #23]
0xffff91420694    20  tbz w2, #0, #+0x1a0 (addr 0xffff91420834)
0xffff91420698    24  ldur x0, [x2, #-1]
0xffff9142069c    28  ldrb w0, [x0, #11]
0xffff914206a0    32  cmp x0, #0x84 (132)
0xffff914206a4    36  b.ne #+0x190 (addr 0xffff91420834)
0xffff914206a8    40  ldur x0, [x2, #31]
0xffff914206ac    44  cmp x0, x1
0xffff914206b0    48  b.ne #+0x184 (addr 0xffff91420834)
0xffff914206b4    52  ldrb w4, [x2, #7]
0xffff914206b8    56  ldr x6, pc+416 (addr 0x0000ffff91420858)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff914206bc    60  ldp x0, x16, [x6]
0xffff914206c0    64  adds x5, x0, x4, lsl #3
0xffff914206c4    68  ccmp x5, x16, #nzCv, lo
0xffff914206c8    72  b.hi #+0x110 (addr 0xffff914207d8)
0xffff914206cc    76  str x5, [x6]
0xffff914206d0    80  mov x1, x0
0xffff914206d4    84  str x2, [x1], #8
0xffff914206d8    88  ldr x3, [x26, #304]
0xffff914206dc    92  stp x3, x3, [x1], #16
0xffff914206e0    96  ldr x6, [x26, #40]
0xffff914206e4   100  ldur w3, [x2, #15]
0xffff914206e8   104  tst w3, #0xe0000000
0xffff914206ec   108  b.ne #+0x30 (addr 0xffff9142071c)
0xffff914206f0   112  subs x16, x5, x1
0xffff914206f4   116  b.le #+0x20 (addr 0xffff91420714)
0xffff914206f8   120  str x6, [x1]
0xffff914206fc   124  and x16, x16, #0x8
0xffff91420700   128  add x1, x1, x16
0xffff91420704   132  b #+0x8 (addr 0xffff9142070c)
0xffff91420708   136  stp x6, x6, [x1], #16
0xffff9142070c   140  cmp x1, x5
0xffff91420710   144  b.lo #-0x8 (addr 0xffff91420708)
0xffff91420714   148  add x0, x0, #0x1 (1)
0xffff91420718   152  ret
0xffff9142071c   156  movz w16, #0x20000000
0xffff91420720   160  sub w3, w3, w16
0xffff91420724   164  stur w3, [x2, #15]
0xffff91420728   168  ldrb w4, [x2, #14]
0xffff9142072c   172  sub x4, x5, x4, lsl #3
0xffff91420730   176  subs x16, x4, x1
0xffff91420734   180  b.le #+0x20 (addr 0xffff91420754)
0xffff91420738   184  str x6, [x1]
0xffff9142073c   188  and x16, x16, #0x8
0xffff91420740   192  add x1, x1, x16
0xffff91420744   196  b #+0x8 (addr 0xffff9142074c)
0xffff91420748   200  stp x6, x6, [x1], #16
0xffff9142074c   204  cmp x1, x4
0xffff91420750   208  b.lo #-0x8 (addr 0xffff91420748)
0xffff91420754   212  ldr x6, [x26, #16]
0xffff91420758   216  subs x16, x5, x1
0xffff9142075c   220  b.le #+0x20 (addr 0xffff9142077c)
0xffff91420760   224  str x6, [x1]
0xffff91420764   228  and x16, x16, #0x8
0xffff91420768   232  add x1, x1, x16
0xffff9142076c   236  b #+0x8 (addr 0xffff91420774)
0xffff91420770   240  stp x6, x6, [x1], #16
0xffff91420774   244  cmp x1, x5
0xffff91420778   248  b.lo #-0x8 (addr 0xffff91420770)
0xffff9142077c   252  add x0, x0, #0x1 (1)
0xffff91420780   256  tst w3, #0xe0000000
0xffff91420784   260  b.eq #+0x8 (addr 0xffff9142078c)
0xffff91420788   264  ret
0xffff9142078c   268  movz x16, #0xc00000000
0xffff91420790   272  sub csp, jssp, #0x10 (16)
0xffff91420794   276  stp fp, lr, [jssp, #-16]!
0xffff91420798   280  sub csp, jssp, #0x10 (16)
0xffff9142079c   284  str x16, [jssp, #-8]!
0xffff914207a0   288  ldr x17, pc+192 (addr 0x0000ffff91420860)    ;; object: 0xffff91420621 <Code: STUB>
0xffff914207a4   292  sub csp, jssp, #0x10 (16)
0xffff914207a8   296  str x17, [jssp, #-8]!
0xffff914207ac   300  add fp, jssp, #0x10 (16)
0xffff914207b0   304  sub csp, jssp, #0x10 (16)
0xffff914207b4   308  stp x2, x0, [jssp, #-16]!
0xffff914207b8   312  movz x0, #0x1
0xffff914207bc   316  ldr x1, pc+172 (addr 0x0000ffff91420868)    ;; external reference (Runtime::FinalizeInstanceSize)
0xffff914207c0   320  ldr x16, pc+176 (addr 0x0000ffff91420870)    ;; code: STUB, CEntryStub, minor: 4
0xffff914207c4   324  blr x16
0xffff914207c8   328  ldr x0, [jssp], #8
0xffff914207cc   332  mov jssp, fp
0xffff914207d0   336  ldp fp, lr, [jssp], #16
0xffff914207d4   340  ret
0xffff914207d8   344  movz x16, #0xc00000000
0xffff914207dc   348  sub csp, jssp, #0x10 (16)
0xffff914207e0   352  stp fp, lr, [jssp, #-16]!
0xffff914207e4   356  sub csp, jssp, #0x10 (16)
0xffff914207e8   360  str x16, [jssp, #-8]!
0xffff914207ec   364  ldr x17, pc+140 (addr 0x0000ffff91420878)    ;; object: 0xffff91420621 <Code: STUB>
0xffff914207f0   368  sub csp, jssp, #0x10 (16)
0xffff914207f4   372  str x17, [jssp, #-8]!
0xffff914207f8   376  add fp, jssp, #0x10 (16)
0xffff914207fc   380  lsl x4, x4, #35
0xffff91420800   384  sub csp, jssp, #0x10 (16)
0xffff91420804   388  stp x4, x2, [jssp, #-16]!
0xffff91420808   392  movz x0, #0x1
0xffff9142080c   396  ldr x1, pc+116 (addr 0x0000ffff91420880)    ;; external reference (Runtime::AllocateInNewSpace)
0xffff91420810   400  ldr x16, pc+120 (addr 0x0000ffff91420888)    ;; code: STUB, CEntryStub, minor: 4
0xffff91420814   404  blr x16
0xffff91420818   408  ldr x2, [jssp], #8
0xffff9142081c   412  mov jssp, fp
0xffff91420820   416  ldp fp, lr, [jssp], #16
0xffff91420824   420  sub x0, x0, #0x1 (1)
0xffff91420828   424  ldrb w5, [x2, #7]
0xffff9142082c   428  add x5, x0, x5, lsl #3
0xffff91420830   432  b #-0x160 (addr 0xffff914206d0)
0xffff91420834   436  sub csp, jssp, #0x10 (16)
0xffff91420838   440  stp x3, x1, [jssp, #-16]!
0xffff9142083c   444  movz x0, #0x2
0xffff91420840   448  ldr x1, pc+80 (addr 0x0000ffff91420890)    ;; external reference (Runtime::NewObject)
0xffff91420844   452  ldr x16, pc+84 (addr 0x0000ffff91420898)    ;; code: STUB, CEntryStub, minor: 4
0xffff91420848   456  br x16
0xffff9142084c   460  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff91420850   464  d63f03e0       constant
0xffff91420854   468  d503201f       constant
0xffff91420858   472  4117f2c0       constant
0xffff9142085c   476  00000000       constant
0xffff91420860   480  91420621       constant
0xffff91420864   484  0000ffff       constant
0xffff91420868   488  00e450e0       constant
0xffff9142086c   492  00000000       constant
0xffff91420870   496  91406060       constant
0xffff91420874   500  0000ffff       constant
0xffff91420878   504  91420621       constant
0xffff9142087c   508  0000ffff       constant
0xffff91420880   512  00e25898       constant
0xffff91420884   516  00000000       constant
0xffff91420888   520  91406060       constant
0xffff9142088c   524  0000ffff       constant
0xffff91420890   528  00e44dc0       constant
0xffff91420894   532  00000000       constant
0xffff91420898   536  91406060       constant
0xffff9142089c   540  0000ffff       constant


RelocInfo (size = 21)
0xffff914206b8  external reference (Heap::NewSpaceAllocationTopAddress())  (0x4117f2c0)
0xffff914207a0  embedded object  (0xffff91420621 <Code: STUB>)
0xffff914207bc  external reference (Runtime::FinalizeInstanceSize)  (0xe450e0)
0xffff914207c0  code target (STUB)  (0xffff91406060)
0xffff914207ec  embedded object  (0xffff91420621 <Code: STUB>)
0xffff9142080c  external reference (Runtime::AllocateInNewSpace)  (0xe25898)
0xffff91420810  code target (STUB)  (0xffff91406060)
0xffff91420840  external reference (Runtime::NewObject)  (0xe44dc0)
0xffff91420844  code target (STUB)  (0xffff91406060)
0xffff9142084c  constant pool (size 84)


kind = STUB
major_key = NameDictionaryLookupStub
name = NameDictionaryLookupStub
compiler = unknown
Instructions (size = 616)
0xffff91422620     0  ldursw x3, [x0, #35]
0xffff91422624     4  sub x3, x3, #0x1 (1)
0xffff91422628     8  ldur x4, [x1, #7]
0xffff9142262c    12  ldr x5, [x26, #40]
0xffff91422630    16  add x2, x4, #0x28 (40)
0xffff91422634    20  and x2, x3, x2, lsr #2
0xffff91422638    24  add x2, x2, x2, lsl #1
0xffff9142263c    28  add x2, x0, x2, lsl #3
0xffff91422640    32  ldur x6, [x2, #55]
0xffff91422644    36  cmp x6, x5
0xffff91422648    40  b.eq #+0x238 (addr 0xffff91422880)
0xffff9142264c    44  cmp x6, x1
0xffff91422650    48  b.eq #+0x228 (addr 0xffff91422878)
0xffff91422654    52  add x2, x4, #0x3c (60)
0xffff91422658    56  and x2, x3, x2, lsr #2
0xffff9142265c    60  add x2, x2, x2, lsl #1
0xffff91422660    64  add x2, x0, x2, lsl #3
0xffff91422664    68  ldur x6, [x2, #55]
0xffff91422668    72  cmp x6, x5
0xffff9142266c    76  b.eq #+0x214 (addr 0xffff91422880)
0xffff91422670    80  cmp x6, x1
0xffff91422674    84  b.eq #+0x204 (addr 0xffff91422878)
0xffff91422678    88  add x2, x4, #0x54 (84)
0xffff9142267c    92  and x2, x3, x2, lsr #2
0xffff91422680    96  add x2, x2, x2, lsl #1
0xffff91422684   100  add x2, x0, x2, lsl #3
0xffff91422688   104  ldur x6, [x2, #55]
0xffff9142268c   108  cmp x6, x5
0xffff91422690   112  b.eq #+0x1f0 (addr 0xffff91422880)
0xffff91422694   116  cmp x6, x1
0xffff91422698   120  b.eq #+0x1e0 (addr 0xffff91422878)
0xffff9142269c   124  add x2, x4, #0x70 (112)
0xffff914226a0   128  and x2, x3, x2, lsr #2
0xffff914226a4   132  add x2, x2, x2, lsl #1
0xffff914226a8   136  add x2, x0, x2, lsl #3
0xffff914226ac   140  ldur x6, [x2, #55]
0xffff914226b0   144  cmp x6, x5
0xffff914226b4   148  b.eq #+0x1cc (addr 0xffff91422880)
0xffff914226b8   152  cmp x6, x1
0xffff914226bc   156  b.eq #+0x1bc (addr 0xffff91422878)
0xffff914226c0   160  add x2, x4, #0x90 (144)
0xffff914226c4   164  and x2, x3, x2, lsr #2
0xffff914226c8   168  add x2, x2, x2, lsl #1
0xffff914226cc   172  add x2, x0, x2, lsl #3
0xffff914226d0   176  ldur x6, [x2, #55]
0xffff914226d4   180  cmp x6, x5
0xffff914226d8   184  b.eq #+0x1a8 (addr 0xffff91422880)
0xffff914226dc   188  cmp x6, x1
0xffff914226e0   192  b.eq #+0x198 (addr 0xffff91422878)
0xffff914226e4   196  add x2, x4, #0xb4 (180)
0xffff914226e8   200  and x2, x3, x2, lsr #2
0xffff914226ec   204  add x2, x2, x2, lsl #1
0xffff914226f0   208  add x2, x0, x2, lsl #3
0xffff914226f4   212  ldur x6, [x2, #55]
0xffff914226f8   216  cmp x6, x5
0xffff914226fc   220  b.eq #+0x184 (addr 0xffff91422880)
0xffff91422700   224  cmp x6, x1
0xffff91422704   228  b.eq #+0x174 (addr 0xffff91422878)
0xffff91422708   232  add x2, x4, #0xdc (220)
0xffff9142270c   236  and x2, x3, x2, lsr #2
0xffff91422710   240  add x2, x2, x2, lsl #1
0xffff91422714   244  add x2, x0, x2, lsl #3
0xffff91422718   248  ldur x6, [x2, #55]
0xffff9142271c   252  cmp x6, x5
0xffff91422720   256  b.eq #+0x160 (addr 0xffff91422880)
0xffff91422724   260  cmp x6, x1
0xffff91422728   264  b.eq #+0x150 (addr 0xffff91422878)
0xffff9142272c   268  add x2, x4, #0x108 (264)
0xffff91422730   272  and x2, x3, x2, lsr #2
0xffff91422734   276  add x2, x2, x2, lsl #1
0xffff91422738   280  add x2, x0, x2, lsl #3
0xffff9142273c   284  ldur x6, [x2, #55]
0xffff91422740   288  cmp x6, x5
0xffff91422744   292  b.eq #+0x13c (addr 0xffff91422880)
0xffff91422748   296  cmp x6, x1
0xffff9142274c   300  b.eq #+0x12c (addr 0xffff91422878)
0xffff91422750   304  add x2, x4, #0x138 (312)
0xffff91422754   308  and x2, x3, x2, lsr #2
0xffff91422758   312  add x2, x2, x2, lsl #1
0xffff9142275c   316  add x2, x0, x2, lsl #3
0xffff91422760   320  ldur x6, [x2, #55]
0xffff91422764   324  cmp x6, x5
0xffff91422768   328  b.eq #+0x118 (addr 0xffff91422880)
0xffff9142276c   332  cmp x6, x1
0xffff91422770   336  b.eq #+0x108 (addr 0xffff91422878)
0xffff91422774   340  add x2, x4, #0x16c (364)
0xffff91422778   344  and x2, x3, x2, lsr #2
0xffff9142277c   348  add x2, x2, x2, lsl #1
0xffff91422780   352  add x2, x0, x2, lsl #3
0xffff91422784   356  ldur x6, [x2, #55]
0xffff91422788   360  cmp x6, x5
0xffff9142278c   364  b.eq #+0xf4 (addr 0xffff91422880)
0xffff91422790   368  cmp x6, x1
0xffff91422794   372  b.eq #+0xe4 (addr 0xffff91422878)
0xffff91422798   376  add x2, x4, #0x1a4 (420)
0xffff9142279c   380  and x2, x3, x2, lsr #2
0xffff914227a0   384  add x2, x2, x2, lsl #1
0xffff914227a4   388  add x2, x0, x2, lsl #3
0xffff914227a8   392  ldur x6, [x2, #55]
0xffff914227ac   396  cmp x6, x5
0xffff914227b0   400  b.eq #+0xd0 (addr 0xffff91422880)
0xffff914227b4   404  cmp x6, x1
0xffff914227b8   408  b.eq #+0xc0 (addr 0xffff91422878)
0xffff914227bc   412  add x2, x4, #0x1e0 (480)
0xffff914227c0   416  and x2, x3, x2, lsr #2
0xffff914227c4   420  add x2, x2, x2, lsl #1
0xffff914227c8   424  add x2, x0, x2, lsl #3
0xffff914227cc   428  ldur x6, [x2, #55]
0xffff914227d0   432  cmp x6, x5
0xffff914227d4   436  b.eq #+0xac (addr 0xffff91422880)
0xffff914227d8   440  cmp x6, x1
0xffff914227dc   444  b.eq #+0x9c (addr 0xffff91422878)
0xffff914227e0   448  add x2, x4, #0x220 (544)
0xffff914227e4   452  and x2, x3, x2, lsr #2
0xffff914227e8   456  add x2, x2, x2, lsl #1
0xffff914227ec   460  add x2, x0, x2, lsl #3
0xffff914227f0   464  ldur x6, [x2, #55]
0xffff914227f4   468  cmp x6, x5
0xffff914227f8   472  b.eq #+0x88 (addr 0xffff91422880)
0xffff914227fc   476  cmp x6, x1
0xffff91422800   480  b.eq #+0x78 (addr 0xffff91422878)
0xffff91422804   484  add x2, x4, #0x264 (612)
0xffff91422808   488  and x2, x3, x2, lsr #2
0xffff9142280c   492  add x2, x2, x2, lsl #1
0xffff91422810   496  add x2, x0, x2, lsl #3
0xffff91422814   500  ldur x6, [x2, #55]
0xffff91422818   504  cmp x6, x5
0xffff9142281c   508  b.eq #+0x64 (addr 0xffff91422880)
0xffff91422820   512  cmp x6, x1
0xffff91422824   516  b.eq #+0x54 (addr 0xffff91422878)
0xffff91422828   520  add x2, x4, #0x2ac (684)
0xffff9142282c   524  and x2, x3, x2, lsr #2
0xffff91422830   528  add x2, x2, x2, lsl #1
0xffff91422834   532  add x2, x0, x2, lsl #3
0xffff91422838   536  ldur x6, [x2, #55]
0xffff9142283c   540  cmp x6, x5
0xffff91422840   544  b.eq #+0x40 (addr 0xffff91422880)
0xffff91422844   548  cmp x6, x1
0xffff91422848   552  b.eq #+0x30 (addr 0xffff91422878)
0xffff9142284c   556  add x2, x4, #0x2f8 (760)
0xffff91422850   560  and x2, x3, x2, lsr #2
0xffff91422854   564  add x2, x2, x2, lsl #1
0xffff91422858   568  add x2, x0, x2, lsl #3
0xffff9142285c   572  ldur x6, [x2, #55]
0xffff91422860   576  cmp x6, x5
0xffff91422864   580  b.eq #+0x1c (addr 0xffff91422880)
0xffff91422868   584  cmp x6, x1
0xffff9142286c   588  b.eq #+0xc (addr 0xffff91422878)
0xffff91422870   592  movz x0, #0x0
0xffff91422874   596  ret
0xffff91422878   600  movz x0, #0x1
0xffff9142287c   604  ret
0xffff91422880   608  movz x0, #0x0
0xffff91422884   612  ret


RelocInfo (size = 0)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff91422f80     0  adr xzr, #+0x40 (addr 0xffff91422fc0)
0xffff91422f84     4  adr xzr, #+0x2a8 (addr 0xffff9142322c)
0xffff91422f88     8  ldr x16, pc+1368 (addr 0x0000ffff914234e0)    ;; external reference (store_buffer_top)
0xffff91422f8c    12  ldr x10, [x16]
0xffff91422f90    16  str x11, [x10], #8
0xffff91422f94    20  str x10, [x16]
0xffff91422f98    24  tst x10, #0x1ffff
0xffff91422f9c    28  b.eq #+0x8 (addr 0xffff91422fa4)
0xffff91422fa0    32  ret
0xffff91422fa4    36  sub csp, jssp, #0x8 (8)
0xffff91422fa8    40  str lr, [jssp, #-8]!
0xffff91422fac    44  ldr x17, pc+1340 (addr 0x0000ffff914234e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91422fb0    48  blr x17
0xffff91422fb4    52  ldr lr, [jssp], #8
0xffff91422fb8    56  ret
0xffff91422fbc    60  ret
0xffff91422fc0    64  sub csp, jssp, #0x10 (16)
0xffff91422fc4    68  stp x1, x0, [jssp, #-16]!
0xffff91422fc8    72  ldr x10, [x11]
0xffff91422fcc    76  and x16, x10, #0xfffffffffff00000
0xffff91422fd0    80  ldr x16, [x16, #8]
0xffff91422fd4    84  tst x16, #0x18
0xffff91422fd8    88  b.eq #+0x17c (addr 0xffff91423154)
0xffff91422fdc    92  and x16, x4, #0xfffffffffff00000
0xffff91422fe0    96  ldr x16, [x16, #8]
0xffff91422fe4   100  tst x16, #0x18
0xffff91422fe8   104  b.ne #+0x16c (addr 0xffff91423154)
0xffff91422fec   108  and x10, x4, #0xfffffffffff00000
0xffff91422ff0   112  ldr x0, [x10, #104]
0xffff91422ff4   116  subs x0, x0, #0x1 (1)
0xffff91422ff8   120  str x0, [x10, #104]
0xffff91422ffc   124  b.mi #+0xc4 (addr 0xffff914230c0)
0xffff91423000   128  ubfx x16, x4, #8, #12
0xffff91423004   132  and x10, x4, #0xfffffffffff00000
0xffff91423008   136  add x10, x10, x16, lsl #2
0xffff9142300c   140  ubfx x0, x4, #3, #5
0xffff91423010   144  ldr x10, [x10, #360]
0xffff91423014   148  lsr x10, x10, x0
0xffff91423018   152  tbz w10, #0, #+0x8 (addr 0xffff91423020)
0xffff9142301c   156  tbnz w10, #1, #+0x3c (addr 0xffff91423058)
0xffff91423020   160  ldp x1, x0, [jssp], #16
0xffff91423024   164  ldr x16, pc+1228 (addr 0x0000ffff914234f0)    ;; external reference (store_buffer_top)
0xffff91423028   168  ldr x10, [x16]
0xffff9142302c   172  str x11, [x10], #8
0xffff91423030   176  str x10, [x16]
0xffff91423034   180  tst x10, #0x1ffff
0xffff91423038   184  b.eq #+0x8 (addr 0xffff91423040)
0xffff9142303c   188  ret
0xffff91423040   192  sub csp, jssp, #0x8 (8)
0xffff91423044   196  str lr, [jssp, #-8]!
0xffff91423048   200  ldr x17, pc+1200 (addr 0x0000ffff914234f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142304c   204  blr x17
0xffff91423050   208  ldr lr, [jssp], #8
0xffff91423054   212  ret
0xffff91423058   216  ldr x10, [x11]
0xffff9142305c   220  sub csp, jssp, #0x10 (16)
0xffff91423060   224  stp x4, x11, [jssp, #-16]!
0xffff91423064   228  ubfx x16, x10, #8, #12
0xffff91423068   232  and x0, x10, #0xfffffffffff00000
0xffff9142306c   236  add x0, x0, x16, lsl #2
0xffff91423070   240  ubfx x4, x10, #3, #5
0xffff91423074   244  ldr x11, [x0, #360]
0xffff91423078   248  lsr x11, x11, x4
0xffff9142307c   252  tbz w11, #0, #+0x40 (addr 0xffff914230bc)
0xffff91423080   256  ldp x4, x11, [jssp], #16
0xffff91423084   260  ldp x1, x0, [jssp], #16
0xffff91423088   264  ldr x16, pc+1144 (addr 0x0000ffff91423500)    ;; external reference (store_buffer_top)
0xffff9142308c   268  ldr x10, [x16]
0xffff91423090   272  str x11, [x10], #8
0xffff91423094   276  str x10, [x16]
0xffff91423098   280  tst x10, #0x1ffff
0xffff9142309c   284  b.eq #+0x8 (addr 0xffff914230a4)
0xffff914230a0   288  ret
0xffff914230a4   292  sub csp, jssp, #0x8 (8)
0xffff914230a8   296  str lr, [jssp, #-8]!
0xffff914230ac   300  ldr x17, pc+1116 (addr 0x0000ffff91423508)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff914230b0   304  blr x17
0xffff914230b4   308  ldr lr, [jssp], #8
0xffff914230b8   312  ret
0xffff914230bc   316  ldp x4, x11, [jssp], #16
0xffff914230c0   320  sub csp, jssp, #0x78 (120)
0xffff914230c4   324  stp x14, x15, [jssp, #-32]!
0xffff914230c8   328  stp x18, lr, [jssp, #16]
0xffff914230cc   332  stp x9, x11, [jssp, #-32]!
0xffff914230d0   336  stp x12, x13, [jssp, #16]
0xffff914230d4   340  stp x5, x6, [jssp, #-32]!
0xffff914230d8   344  stp x7, x8, [jssp, #16]
0xffff914230dc   348  stp x2, x3, [jssp, #-24]!
0xffff914230e0   352  str x4, [jssp, #16]
0xffff914230e4   356  mov x0, x4
0xffff914230e8   360  mov x1, x11
0xffff914230ec   364  ldr x2, pc+1060 (addr 0x0000ffff91423510)    ;; external reference (isolate)
0xffff914230f0   368  ldr x16, pc+1064 (addr 0x0000ffff91423518)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914230f4   372  and csp, jssp, #0xfffffffffffffff0
0xffff914230f8   376  blr x16
0xffff914230fc   380  ldp x4, x5, [jssp, #16]
0xffff91423100   384  ldp x2, x3, [jssp], #32
0xffff91423104   388  ldp x8, x9, [jssp, #16]
0xffff91423108   392  ldp x6, x7, [jssp], #32
0xffff9142310c   396  ldp x13, x14, [jssp, #16]
0xffff91423110   400  ldp x11, x12, [jssp], #32
0xffff91423114   404  ldr lr, [jssp, #16]
0xffff91423118   408  ldp x15, x18, [jssp], #24
0xffff9142311c   412  ldp x1, x0, [jssp], #16
0xffff91423120   416  ldr x16, pc+1024 (addr 0x0000ffff91423520)    ;; external reference (store_buffer_top)
0xffff91423124   420  ldr x10, [x16]
0xffff91423128   424  str x11, [x10], #8
0xffff9142312c   428  str x10, [x16]
0xffff91423130   432  tst x10, #0x1ffff
0xffff91423134   436  b.eq #+0x8 (addr 0xffff9142313c)
0xffff91423138   440  ret
0xffff9142313c   444  sub csp, jssp, #0x8 (8)
0xffff91423140   448  str lr, [jssp, #-8]!
0xffff91423144   452  ldr x17, pc+996 (addr 0x0000ffff91423528)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91423148   456  blr x17
0xffff9142314c   460  ldr lr, [jssp], #8
0xffff91423150   464  ret
0xffff91423154   468  and x10, x4, #0xfffffffffff00000
0xffff91423158   472  ldr x0, [x10, #104]
0xffff9142315c   476  subs x0, x0, #0x1 (1)
0xffff91423160   480  str x0, [x10, #104]
0xffff91423164   484  b.mi #+0x64 (addr 0xffff914231c8)
0xffff91423168   488  ubfx x16, x4, #8, #12
0xffff9142316c   492  and x10, x4, #0xfffffffffff00000
0xffff91423170   496  add x10, x10, x16, lsl #2
0xffff91423174   500  ubfx x0, x4, #3, #5
0xffff91423178   504  ldr x10, [x10, #360]
0xffff9142317c   508  lsr x10, x10, x0
0xffff91423180   512  tbz w10, #0, #+0x8 (addr 0xffff91423188)
0xffff91423184   516  tbnz w10, #1, #+0xc (addr 0xffff91423190)
0xffff91423188   520  ldp x1, x0, [jssp], #16
0xffff9142318c   524  ret
0xffff91423190   528  ldr x10, [x11]
0xffff91423194   532  sub csp, jssp, #0x10 (16)
0xffff91423198   536  stp x4, x11, [jssp, #-16]!
0xffff9142319c   540  ubfx x16, x10, #8, #12
0xffff914231a0   544  and x0, x10, #0xfffffffffff00000
0xffff914231a4   548  add x0, x0, x16, lsl #2
0xffff914231a8   552  ubfx x4, x10, #3, #5
0xffff914231ac   556  ldr x11, [x0, #360]
0xffff914231b0   560  lsr x11, x11, x4
0xffff914231b4   564  tbz w11, #0, #+0x10 (addr 0xffff914231c4)
0xffff914231b8   568  ldp x4, x11, [jssp], #16
0xffff914231bc   572  ldp x1, x0, [jssp], #16
0xffff914231c0   576  ret
0xffff914231c4   580  ldp x4, x11, [jssp], #16
0xffff914231c8   584  sub csp, jssp, #0x78 (120)
0xffff914231cc   588  stp x14, x15, [jssp, #-32]!
0xffff914231d0   592  stp x18, lr, [jssp, #16]
0xffff914231d4   596  stp x9, x11, [jssp, #-32]!
0xffff914231d8   600  stp x12, x13, [jssp, #16]
0xffff914231dc   604  stp x5, x6, [jssp, #-32]!
0xffff914231e0   608  stp x7, x8, [jssp, #16]
0xffff914231e4   612  stp x2, x3, [jssp, #-24]!
0xffff914231e8   616  str x4, [jssp, #16]
0xffff914231ec   620  mov x0, x4
0xffff914231f0   624  mov x1, x11
0xffff914231f4   628  ldr x2, pc+828 (addr 0x0000ffff91423530)    ;; external reference (isolate)
0xffff914231f8   632  ldr x16, pc+832 (addr 0x0000ffff91423538)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914231fc   636  and csp, jssp, #0xfffffffffffffff0
0xffff91423200   640  blr x16
0xffff91423204   644  ldp x4, x5, [jssp, #16]
0xffff91423208   648  ldp x2, x3, [jssp], #32
0xffff9142320c   652  ldp x8, x9, [jssp, #16]
0xffff91423210   656  ldp x6, x7, [jssp], #32
0xffff91423214   660  ldp x13, x14, [jssp, #16]
0xffff91423218   664  ldp x11, x12, [jssp], #32
0xffff9142321c   668  ldr lr, [jssp, #16]
0xffff91423220   672  ldp x15, x18, [jssp], #24
0xffff91423224   676  ldp x1, x0, [jssp], #16
0xffff91423228   680  ret
0xffff9142322c   684  sub csp, jssp, #0x10 (16)
0xffff91423230   688  stp x1, x0, [jssp, #-16]!
0xffff91423234   692  ldr x10, [x11]
0xffff91423238   696  and x16, x10, #0xfffffffffff00000
0xffff9142323c   700  ldr x16, [x16, #8]
0xffff91423240   704  tst x16, #0x18
0xffff91423244   708  b.eq #+0x19c (addr 0xffff914233e0)
0xffff91423248   712  and x16, x4, #0xfffffffffff00000
0xffff9142324c   716  ldr x16, [x16, #8]
0xffff91423250   720  tst x16, #0x18
0xffff91423254   724  b.ne #+0x18c (addr 0xffff914233e0)
0xffff91423258   728  and x10, x4, #0xfffffffffff00000
0xffff9142325c   732  ldr x0, [x10, #104]
0xffff91423260   736  subs x0, x0, #0x1 (1)
0xffff91423264   740  str x0, [x10, #104]
0xffff91423268   744  b.mi #+0xe4 (addr 0xffff9142334c)
0xffff9142326c   748  ubfx x16, x4, #8, #12
0xffff91423270   752  and x10, x4, #0xfffffffffff00000
0xffff91423274   756  add x10, x10, x16, lsl #2
0xffff91423278   760  ubfx x0, x4, #3, #5
0xffff9142327c   764  ldr x10, [x10, #360]
0xffff91423280   768  lsr x10, x10, x0
0xffff91423284   772  tbz w10, #0, #+0x8 (addr 0xffff9142328c)
0xffff91423288   776  tbnz w10, #1, #+0x3c (addr 0xffff914232c4)
0xffff9142328c   780  ldp x1, x0, [jssp], #16
0xffff91423290   784  ldr x16, pc+688 (addr 0x0000ffff91423540)    ;; external reference (store_buffer_top)
0xffff91423294   788  ldr x10, [x16]
0xffff91423298   792  str x11, [x10], #8
0xffff9142329c   796  str x10, [x16]
0xffff914232a0   800  tst x10, #0x1ffff
0xffff914232a4   804  b.eq #+0x8 (addr 0xffff914232ac)
0xffff914232a8   808  ret
0xffff914232ac   812  sub csp, jssp, #0x8 (8)
0xffff914232b0   816  str lr, [jssp, #-8]!
0xffff914232b4   820  ldr x17, pc+660 (addr 0x0000ffff91423548)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff914232b8   824  blr x17
0xffff914232bc   828  ldr lr, [jssp], #8
0xffff914232c0   832  ret
0xffff914232c4   836  ldr x10, [x11]
0xffff914232c8   840  and x0, x10, #0xfffffffffff00000
0xffff914232cc   844  ldr x0, [x0, #8]
0xffff914232d0   848  tbz w0, #6, #+0x18 (addr 0xffff914232e8)
0xffff914232d4   852  and x0, x4, #0xfffffffffff00000
0xffff914232d8   856  ldr x0, [x0, #8]
0xffff914232dc   860  movz x16, #0x58
0xffff914232e0   864  tst x0, x16
0xffff914232e4   868  b.eq #+0x68 (addr 0xffff9142334c)
0xffff914232e8   872  sub csp, jssp, #0x10 (16)
0xffff914232ec   876  stp x4, x11, [jssp, #-16]!
0xffff914232f0   880  ubfx x16, x10, #8, #12
0xffff914232f4   884  and x0, x10, #0xfffffffffff00000
0xffff914232f8   888  add x0, x0, x16, lsl #2
0xffff914232fc   892  ubfx x4, x10, #3, #5
0xffff91423300   896  ldr x11, [x0, #360]
0xffff91423304   900  lsr x11, x11, x4
0xffff91423308   904  tbz w11, #0, #+0x40 (addr 0xffff91423348)
0xffff9142330c   908  ldp x4, x11, [jssp], #16
0xffff91423310   912  ldp x1, x0, [jssp], #16
0xffff91423314   916  ldr x16, pc+572 (addr 0x0000ffff91423550)    ;; external reference (store_buffer_top)
0xffff91423318   920  ldr x10, [x16]
0xffff9142331c   924  str x11, [x10], #8
0xffff91423320   928  str x10, [x16]
0xffff91423324   932  tst x10, #0x1ffff
0xffff91423328   936  b.eq #+0x8 (addr 0xffff91423330)
0xffff9142332c   940  ret
0xffff91423330   944  sub csp, jssp, #0x8 (8)
0xffff91423334   948  str lr, [jssp, #-8]!
0xffff91423338   952  ldr x17, pc+544 (addr 0x0000ffff91423558)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142333c   956  blr x17
0xffff91423340   960  ldr lr, [jssp], #8
0xffff91423344   964  ret
0xffff91423348   968  ldp x4, x11, [jssp], #16
0xffff9142334c   972  sub csp, jssp, #0x78 (120)
0xffff91423350   976  stp x14, x15, [jssp, #-32]!
0xffff91423354   980  stp x18, lr, [jssp, #16]
0xffff91423358   984  stp x9, x11, [jssp, #-32]!
0xffff9142335c   988  stp x12, x13, [jssp, #16]
0xffff91423360   992  stp x5, x6, [jssp, #-32]!
0xffff91423364   996  stp x7, x8, [jssp, #16]
0xffff91423368  1000  stp x2, x3, [jssp, #-24]!
0xffff9142336c  1004  str x4, [jssp, #16]
0xffff91423370  1008  mov x0, x4
0xffff91423374  1012  mov x1, x11
0xffff91423378  1016  ldr x2, pc+488 (addr 0x0000ffff91423560)    ;; external reference (isolate)
0xffff9142337c  1020  ldr x16, pc+492 (addr 0x0000ffff91423568)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91423380  1024  and csp, jssp, #0xfffffffffffffff0
0xffff91423384  1028  blr x16
0xffff91423388  1032  ldp x4, x5, [jssp, #16]
0xffff9142338c  1036  ldp x2, x3, [jssp], #32
0xffff91423390  1040  ldp x8, x9, [jssp, #16]
0xffff91423394  1044  ldp x6, x7, [jssp], #32
0xffff91423398  1048  ldp x13, x14, [jssp, #16]
0xffff9142339c  1052  ldp x11, x12, [jssp], #32
0xffff914233a0  1056  ldr lr, [jssp, #16]
0xffff914233a4  1060  ldp x15, x18, [jssp], #24
0xffff914233a8  1064  ldp x1, x0, [jssp], #16
0xffff914233ac  1068  ldr x16, pc+452 (addr 0x0000ffff91423570)    ;; external reference (store_buffer_top)
0xffff914233b0  1072  ldr x10, [x16]
0xffff914233b4  1076  str x11, [x10], #8
0xffff914233b8  1080  str x10, [x16]
0xffff914233bc  1084  tst x10, #0x1ffff
0xffff914233c0  1088  b.eq #+0x8 (addr 0xffff914233c8)
0xffff914233c4  1092  ret
0xffff914233c8  1096  sub csp, jssp, #0x8 (8)
0xffff914233cc  1100  str lr, [jssp, #-8]!
0xffff914233d0  1104  ldr x17, pc+424 (addr 0x0000ffff91423578)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff914233d4  1108  blr x17
0xffff914233d8  1112  ldr lr, [jssp], #8
0xffff914233dc  1116  ret
0xffff914233e0  1120  and x10, x4, #0xfffffffffff00000
0xffff914233e4  1124  ldr x0, [x10, #104]
0xffff914233e8  1128  subs x0, x0, #0x1 (1)
0xffff914233ec  1132  str x0, [x10, #104]
0xffff914233f0  1136  b.mi #+0x84 (addr 0xffff91423474)
0xffff914233f4  1140  ubfx x16, x4, #8, #12
0xffff914233f8  1144  and x10, x4, #0xfffffffffff00000
0xffff914233fc  1148  add x10, x10, x16, lsl #2
0xffff91423400  1152  ubfx x0, x4, #3, #5
0xffff91423404  1156  ldr x10, [x10, #360]
0xffff91423408  1160  lsr x10, x10, x0
0xffff9142340c  1164  tbz w10, #0, #+0x8 (addr 0xffff91423414)
0xffff91423410  1168  tbnz w10, #1, #+0xc (addr 0xffff9142341c)
0xffff91423414  1172  ldp x1, x0, [jssp], #16
0xffff91423418  1176  ret
0xffff9142341c  1180  ldr x10, [x11]
0xffff91423420  1184  and x0, x10, #0xfffffffffff00000
0xffff91423424  1188  ldr x0, [x0, #8]
0xffff91423428  1192  tbz w0, #6, #+0x18 (addr 0xffff91423440)
0xffff9142342c  1196  and x0, x4, #0xfffffffffff00000
0xffff91423430  1200  ldr x0, [x0, #8]
0xffff91423434  1204  movz x16, #0x58
0xffff91423438  1208  tst x0, x16
0xffff9142343c  1212  b.eq #+0x38 (addr 0xffff91423474)
0xffff91423440  1216  sub csp, jssp, #0x10 (16)
0xffff91423444  1220  stp x4, x11, [jssp, #-16]!
0xffff91423448  1224  ubfx x16, x10, #8, #12
0xffff9142344c  1228  and x0, x10, #0xfffffffffff00000
0xffff91423450  1232  add x0, x0, x16, lsl #2
0xffff91423454  1236  ubfx x4, x10, #3, #5
0xffff91423458  1240  ldr x11, [x0, #360]
0xffff9142345c  1244  lsr x11, x11, x4
0xffff91423460  1248  tbz w11, #0, #+0x10 (addr 0xffff91423470)
0xffff91423464  1252  ldp x4, x11, [jssp], #16
0xffff91423468  1256  ldp x1, x0, [jssp], #16
0xffff9142346c  1260  ret
0xffff91423470  1264  ldp x4, x11, [jssp], #16
0xffff91423474  1268  sub csp, jssp, #0x78 (120)
0xffff91423478  1272  stp x14, x15, [jssp, #-32]!
0xffff9142347c  1276  stp x18, lr, [jssp, #16]
0xffff91423480  1280  stp x9, x11, [jssp, #-32]!
0xffff91423484  1284  stp x12, x13, [jssp, #16]
0xffff91423488  1288  stp x5, x6, [jssp, #-32]!
0xffff9142348c  1292  stp x7, x8, [jssp, #16]
0xffff91423490  1296  stp x2, x3, [jssp, #-24]!
0xffff91423494  1300  str x4, [jssp, #16]
0xffff91423498  1304  mov x0, x4
0xffff9142349c  1308  mov x1, x11
0xffff914234a0  1312  ldr x2, pc+224 (addr 0x0000ffff91423580)    ;; external reference (isolate)
0xffff914234a4  1316  ldr x16, pc+228 (addr 0x0000ffff91423588)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914234a8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff914234ac  1324  blr x16
0xffff914234b0  1328  ldp x4, x5, [jssp, #16]
0xffff914234b4  1332  ldp x2, x3, [jssp], #32
0xffff914234b8  1336  ldp x8, x9, [jssp, #16]
0xffff914234bc  1340  ldp x6, x7, [jssp], #32
0xffff914234c0  1344  ldp x13, x14, [jssp, #16]
0xffff914234c4  1348  ldp x11, x12, [jssp], #32
0xffff914234c8  1352  ldr lr, [jssp, #16]
0xffff914234cc  1356  ldp x15, x18, [jssp], #24
0xffff914234d0  1360  ldp x1, x0, [jssp], #16
0xffff914234d4  1364  ret
0xffff914234d8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff914234dc  1372  d63f03e0       constant
0xffff914234e0  1376  4117f8c0       constant
0xffff914234e4  1380  00000000       constant
0xffff914234e8  1384  914064c0       constant
0xffff914234ec  1388  0000ffff       constant
0xffff914234f0  1392  4117f8c0       constant
0xffff914234f4  1396  00000000       constant
0xffff914234f8  1400  914064c0       constant
0xffff914234fc  1404  0000ffff       constant
0xffff91423500  1408  4117f8c0       constant
0xffff91423504  1412  00000000       constant
0xffff91423508  1416  914064c0       constant
0xffff9142350c  1420  0000ffff       constant
0xffff91423510  1424  4117e2d0       constant
0xffff91423514  1428  00000000       constant
0xffff91423518  1432  00c2d958       constant
0xffff9142351c  1436  00000000       constant
0xffff91423520  1440  4117f8c0       constant
0xffff91423524  1444  00000000       constant
0xffff91423528  1448  914064c0       constant
0xffff9142352c  1452  0000ffff       constant
0xffff91423530  1456  4117e2d0       constant
0xffff91423534  1460  00000000       constant
0xffff91423538  1464  00c2d958       constant
0xffff9142353c  1468  00000000       constant
0xffff91423540  1472  4117f8c0       constant
0xffff91423544  1476  00000000       constant
0xffff91423548  1480  914064c0       constant
0xffff9142354c  1484  0000ffff       constant
0xffff91423550  1488  4117f8c0       constant
0xffff91423554  1492  00000000       constant
0xffff91423558  1496  914064c0       constant
0xffff9142355c  1500  0000ffff       constant
0xffff91423560  1504  4117e2d0       constant
0xffff91423564  1508  00000000       constant
0xffff91423568  1512  00c2d958       constant
0xffff9142356c  1516  00000000       constant
0xffff91423570  1520  4117f8c0       constant
0xffff91423574  1524  00000000       constant
0xffff91423578  1528  914064c0       constant
0xffff9142357c  1532  0000ffff       constant
0xffff91423580  1536  4117e2d0       constant
0xffff91423584  1540  00000000       constant
0xffff91423588  1544  00c2d958       constant
0xffff9142358c  1548  00000000       constant


RelocInfo (size = 59)
0xffff91422f88  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91422fac  code target (STUB)  (0xffff914064c0)
0xffff91423024  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91423048  code target (STUB)  (0xffff914064c0)
0xffff91423088  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914230ac  code target (STUB)  (0xffff914064c0)
0xffff914230ec  external reference (isolate)  (0x4117e2d0)
0xffff914230f0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91423120  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91423144  code target (STUB)  (0xffff914064c0)
0xffff914231f4  external reference (isolate)  (0x4117e2d0)
0xffff914231f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91423290  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914232b4  code target (STUB)  (0xffff914064c0)
0xffff91423314  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91423338  code target (STUB)  (0xffff914064c0)
0xffff91423378  external reference (isolate)  (0x4117e2d0)
0xffff9142337c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff914233ac  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914233d0  code target (STUB)  (0xffff914064c0)
0xffff914234a0  external reference (isolate)  (0x4117e2d0)
0xffff914234a4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff914234d8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 536)
0xffff91423600     0  adr xzr, #+0xc (addr 0xffff9142360c)
0xffff91423604     4  adr xzr, #+0xe8 (addr 0xffff914236ec)
0xffff91423608     8  ret
0xffff9142360c    12  sub csp, jssp, #0x10 (16)
0xffff91423610    16  stp x2, x0, [jssp, #-16]!
0xffff91423614    20  and x3, x1, #0xfffffffffff00000
0xffff91423618    24  ldr x0, [x3, #104]
0xffff9142361c    28  subs x0, x0, #0x1 (1)
0xffff91423620    32  str x0, [x3, #104]
0xffff91423624    36  b.mi #+0x64 (addr 0xffff91423688)
0xffff91423628    40  ubfx x16, x1, #8, #12
0xffff9142362c    44  and x3, x1, #0xfffffffffff00000
0xffff91423630    48  add x3, x3, x16, lsl #2
0xffff91423634    52  ubfx x0, x1, #3, #5
0xffff91423638    56  ldr x3, [x3, #360]
0xffff9142363c    60  lsr x3, x3, x0
0xffff91423640    64  tbz w3, #0, #+0x8 (addr 0xffff91423648)
0xffff91423644    68  tbnz w3, #1, #+0xc (addr 0xffff91423650)
0xffff91423648    72  ldp x2, x0, [jssp], #16
0xffff9142364c    76  ret
0xffff91423650    80  ldr x3, [x6]
0xffff91423654    84  sub csp, jssp, #0x10 (16)
0xffff91423658    88  stp x1, x6, [jssp, #-16]!
0xffff9142365c    92  ubfx x16, x3, #8, #12
0xffff91423660    96  and x0, x3, #0xfffffffffff00000
0xffff91423664   100  add x0, x0, x16, lsl #2
0xffff91423668   104  ubfx x1, x3, #3, #5
0xffff9142366c   108  ldr x6, [x0, #360]
0xffff91423670   112  lsr x6, x6, x1
0xffff91423674   116  tbz w6, #0, #+0x10 (addr 0xffff91423684)
0xffff91423678   120  ldp x1, x6, [jssp], #16
0xffff9142367c   124  ldp x2, x0, [jssp], #16
0xffff91423680   128  ret
0xffff91423684   132  ldp x1, x6, [jssp], #16
0xffff91423688   136  sub csp, jssp, #0x78 (120)
0xffff9142368c   140  stp x14, x15, [jssp, #-32]!
0xffff91423690   144  stp x18, lr, [jssp, #16]
0xffff91423694   148  stp x10, x11, [jssp, #-32]!
0xffff91423698   152  stp x12, x13, [jssp, #16]
0xffff9142369c   156  stp x6, x7, [jssp, #-32]!
0xffff914236a0   160  stp x8, x9, [jssp, #16]
0xffff914236a4   164  stp x1, x4, [jssp, #-24]!
0xffff914236a8   168  str x5, [jssp, #16]
0xffff914236ac   172  mov x0, x1
0xffff914236b0   176  mov x1, x6
0xffff914236b4   180  ldr x2, pc+324 (addr 0x0000ffff914237f8)    ;; external reference (isolate)
0xffff914236b8   184  ldr x16, pc+328 (addr 0x0000ffff91423800)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914236bc   188  and csp, jssp, #0xfffffffffffffff0
0xffff914236c0   192  blr x16
0xffff914236c4   196  ldp x5, x6, [jssp, #16]
0xffff914236c8   200  ldp x1, x4, [jssp], #32
0xffff914236cc   204  ldp x9, x10, [jssp, #16]
0xffff914236d0   208  ldp x7, x8, [jssp], #32
0xffff914236d4   212  ldp x13, x14, [jssp, #16]
0xffff914236d8   216  ldp x11, x12, [jssp], #32
0xffff914236dc   220  ldr lr, [jssp, #16]
0xffff914236e0   224  ldp x15, x18, [jssp], #24
0xffff914236e4   228  ldp x2, x0, [jssp], #16
0xffff914236e8   232  ret
0xffff914236ec   236  sub csp, jssp, #0x10 (16)
0xffff914236f0   240  stp x2, x0, [jssp, #-16]!
0xffff914236f4   244  and x3, x1, #0xfffffffffff00000
0xffff914236f8   248  ldr x0, [x3, #104]
0xffff914236fc   252  subs x0, x0, #0x1 (1)
0xffff91423700   256  str x0, [x3, #104]
0xffff91423704   260  b.mi #+0x84 (addr 0xffff91423788)
0xffff91423708   264  ubfx x16, x1, #8, #12
0xffff9142370c   268  and x3, x1, #0xfffffffffff00000
0xffff91423710   272  add x3, x3, x16, lsl #2
0xffff91423714   276  ubfx x0, x1, #3, #5
0xffff91423718   280  ldr x3, [x3, #360]
0xffff9142371c   284  lsr x3, x3, x0
0xffff91423720   288  tbz w3, #0, #+0x8 (addr 0xffff91423728)
0xffff91423724   292  tbnz w3, #1, #+0xc (addr 0xffff91423730)
0xffff91423728   296  ldp x2, x0, [jssp], #16
0xffff9142372c   300  ret
0xffff91423730   304  ldr x3, [x6]
0xffff91423734   308  and x0, x3, #0xfffffffffff00000
0xffff91423738   312  ldr x0, [x0, #8]
0xffff9142373c   316  tbz w0, #6, #+0x18 (addr 0xffff91423754)
0xffff91423740   320  and x0, x1, #0xfffffffffff00000
0xffff91423744   324  ldr x0, [x0, #8]
0xffff91423748   328  movz x16, #0x58
0xffff9142374c   332  tst x0, x16
0xffff91423750   336  b.eq #+0x38 (addr 0xffff91423788)
0xffff91423754   340  sub csp, jssp, #0x10 (16)
0xffff91423758   344  stp x1, x6, [jssp, #-16]!
0xffff9142375c   348  ubfx x16, x3, #8, #12
0xffff91423760   352  and x0, x3, #0xfffffffffff00000
0xffff91423764   356  add x0, x0, x16, lsl #2
0xffff91423768   360  ubfx x1, x3, #3, #5
0xffff9142376c   364  ldr x6, [x0, #360]
0xffff91423770   368  lsr x6, x6, x1
0xffff91423774   372  tbz w6, #0, #+0x10 (addr 0xffff91423784)
0xffff91423778   376  ldp x1, x6, [jssp], #16
0xffff9142377c   380  ldp x2, x0, [jssp], #16
0xffff91423780   384  ret
0xffff91423784   388  ldp x1, x6, [jssp], #16
0xffff91423788   392  sub csp, jssp, #0x78 (120)
0xffff9142378c   396  stp x14, x15, [jssp, #-32]!
0xffff91423790   400  stp x18, lr, [jssp, #16]
0xffff91423794   404  stp x10, x11, [jssp, #-32]!
0xffff91423798   408  stp x12, x13, [jssp, #16]
0xffff9142379c   412  stp x6, x7, [jssp, #-32]!
0xffff914237a0   416  stp x8, x9, [jssp, #16]
0xffff914237a4   420  stp x1, x4, [jssp, #-24]!
0xffff914237a8   424  str x5, [jssp, #16]
0xffff914237ac   428  mov x0, x1
0xffff914237b0   432  mov x1, x6
0xffff914237b4   436  ldr x2, pc+84 (addr 0x0000ffff91423808)    ;; external reference (isolate)
0xffff914237b8   440  ldr x16, pc+88 (addr 0x0000ffff91423810)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914237bc   444  and csp, jssp, #0xfffffffffffffff0
0xffff914237c0   448  blr x16
0xffff914237c4   452  ldp x5, x6, [jssp, #16]
0xffff914237c8   456  ldp x1, x4, [jssp], #32
0xffff914237cc   460  ldp x9, x10, [jssp, #16]
0xffff914237d0   464  ldp x7, x8, [jssp], #32
0xffff914237d4   468  ldp x13, x14, [jssp, #16]
0xffff914237d8   472  ldp x11, x12, [jssp], #32
0xffff914237dc   476  ldr lr, [jssp, #16]
0xffff914237e0   480  ldp x15, x18, [jssp], #24
0xffff914237e4   484  ldp x2, x0, [jssp], #16
0xffff914237e8   488  ret
0xffff914237ec   492  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff914237f0   496  d63f03e0       constant
0xffff914237f4   500  d503201f       constant
0xffff914237f8   504  4117e2d0       constant
0xffff914237fc   508  00000000       constant
0xffff91423800   512  00c2d958       constant
0xffff91423804   516  00000000       constant
0xffff91423808   520  4117e2d0       constant
0xffff9142380c   524  00000000       constant
0xffff91423810   528  00c2d958       constant
0xffff91423814   532  00000000       constant


RelocInfo (size = 18)
0xffff914236b4  external reference (isolate)  (0x4117e2d0)
0xffff914236b8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff914237b4  external reference (isolate)  (0x4117e2d0)
0xffff914237b8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff914237ec  constant pool (size 44)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff91423880     0  adr xzr, #+0x40 (addr 0xffff914238c0)
0xffff91423884     4  adr xzr, #+0x2a8 (addr 0xffff91423b2c)
0xffff91423888     8  ldr x16, pc+1368 (addr 0x0000ffff91423de0)    ;; external reference (store_buffer_top)
0xffff9142388c    12  ldr x10, [x16]
0xffff91423890    16  str x6, [x10], #8
0xffff91423894    20  str x10, [x16]
0xffff91423898    24  tst x10, #0x1ffff
0xffff9142389c    28  b.eq #+0x8 (addr 0xffff914238a4)
0xffff914238a0    32  ret
0xffff914238a4    36  sub csp, jssp, #0x8 (8)
0xffff914238a8    40  str lr, [jssp, #-8]!
0xffff914238ac    44  ldr x17, pc+1340 (addr 0x0000ffff91423de8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff914238b0    48  blr x17
0xffff914238b4    52  ldr lr, [jssp], #8
0xffff914238b8    56  ret
0xffff914238bc    60  ret
0xffff914238c0    64  sub csp, jssp, #0x10 (16)
0xffff914238c4    68  stp x2, x0, [jssp, #-16]!
0xffff914238c8    72  ldr x10, [x6]
0xffff914238cc    76  and x16, x10, #0xfffffffffff00000
0xffff914238d0    80  ldr x16, [x16, #8]
0xffff914238d4    84  tst x16, #0x18
0xffff914238d8    88  b.eq #+0x17c (addr 0xffff91423a54)
0xffff914238dc    92  and x16, x1, #0xfffffffffff00000
0xffff914238e0    96  ldr x16, [x16, #8]
0xffff914238e4   100  tst x16, #0x18
0xffff914238e8   104  b.ne #+0x16c (addr 0xffff91423a54)
0xffff914238ec   108  and x10, x1, #0xfffffffffff00000
0xffff914238f0   112  ldr x0, [x10, #104]
0xffff914238f4   116  subs x0, x0, #0x1 (1)
0xffff914238f8   120  str x0, [x10, #104]
0xffff914238fc   124  b.mi #+0xc4 (addr 0xffff914239c0)
0xffff91423900   128  ubfx x16, x1, #8, #12
0xffff91423904   132  and x10, x1, #0xfffffffffff00000
0xffff91423908   136  add x10, x10, x16, lsl #2
0xffff9142390c   140  ubfx x0, x1, #3, #5
0xffff91423910   144  ldr x10, [x10, #360]
0xffff91423914   148  lsr x10, x10, x0
0xffff91423918   152  tbz w10, #0, #+0x8 (addr 0xffff91423920)
0xffff9142391c   156  tbnz w10, #1, #+0x3c (addr 0xffff91423958)
0xffff91423920   160  ldp x2, x0, [jssp], #16
0xffff91423924   164  ldr x16, pc+1228 (addr 0x0000ffff91423df0)    ;; external reference (store_buffer_top)
0xffff91423928   168  ldr x10, [x16]
0xffff9142392c   172  str x6, [x10], #8
0xffff91423930   176  str x10, [x16]
0xffff91423934   180  tst x10, #0x1ffff
0xffff91423938   184  b.eq #+0x8 (addr 0xffff91423940)
0xffff9142393c   188  ret
0xffff91423940   192  sub csp, jssp, #0x8 (8)
0xffff91423944   196  str lr, [jssp, #-8]!
0xffff91423948   200  ldr x17, pc+1200 (addr 0x0000ffff91423df8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142394c   204  blr x17
0xffff91423950   208  ldr lr, [jssp], #8
0xffff91423954   212  ret
0xffff91423958   216  ldr x10, [x6]
0xffff9142395c   220  sub csp, jssp, #0x10 (16)
0xffff91423960   224  stp x1, x6, [jssp, #-16]!
0xffff91423964   228  ubfx x16, x10, #8, #12
0xffff91423968   232  and x0, x10, #0xfffffffffff00000
0xffff9142396c   236  add x0, x0, x16, lsl #2
0xffff91423970   240  ubfx x1, x10, #3, #5
0xffff91423974   244  ldr x6, [x0, #360]
0xffff91423978   248  lsr x6, x6, x1
0xffff9142397c   252  tbz w6, #0, #+0x40 (addr 0xffff914239bc)
0xffff91423980   256  ldp x1, x6, [jssp], #16
0xffff91423984   260  ldp x2, x0, [jssp], #16
0xffff91423988   264  ldr x16, pc+1144 (addr 0x0000ffff91423e00)    ;; external reference (store_buffer_top)
0xffff9142398c   268  ldr x10, [x16]
0xffff91423990   272  str x6, [x10], #8
0xffff91423994   276  str x10, [x16]
0xffff91423998   280  tst x10, #0x1ffff
0xffff9142399c   284  b.eq #+0x8 (addr 0xffff914239a4)
0xffff914239a0   288  ret
0xffff914239a4   292  sub csp, jssp, #0x8 (8)
0xffff914239a8   296  str lr, [jssp, #-8]!
0xffff914239ac   300  ldr x17, pc+1116 (addr 0x0000ffff91423e08)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff914239b0   304  blr x17
0xffff914239b4   308  ldr lr, [jssp], #8
0xffff914239b8   312  ret
0xffff914239bc   316  ldp x1, x6, [jssp], #16
0xffff914239c0   320  sub csp, jssp, #0x78 (120)
0xffff914239c4   324  stp x14, x15, [jssp, #-32]!
0xffff914239c8   328  stp x18, lr, [jssp, #16]
0xffff914239cc   332  stp x9, x11, [jssp, #-32]!
0xffff914239d0   336  stp x12, x13, [jssp, #16]
0xffff914239d4   340  stp x5, x6, [jssp, #-32]!
0xffff914239d8   344  stp x7, x8, [jssp, #16]
0xffff914239dc   348  stp x1, x3, [jssp, #-24]!
0xffff914239e0   352  str x4, [jssp, #16]
0xffff914239e4   356  mov x0, x1
0xffff914239e8   360  mov x1, x6
0xffff914239ec   364  ldr x2, pc+1060 (addr 0x0000ffff91423e10)    ;; external reference (isolate)
0xffff914239f0   368  ldr x16, pc+1064 (addr 0x0000ffff91423e18)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914239f4   372  and csp, jssp, #0xfffffffffffffff0
0xffff914239f8   376  blr x16
0xffff914239fc   380  ldp x4, x5, [jssp, #16]
0xffff91423a00   384  ldp x1, x3, [jssp], #32
0xffff91423a04   388  ldp x8, x9, [jssp, #16]
0xffff91423a08   392  ldp x6, x7, [jssp], #32
0xffff91423a0c   396  ldp x13, x14, [jssp, #16]
0xffff91423a10   400  ldp x11, x12, [jssp], #32
0xffff91423a14   404  ldr lr, [jssp, #16]
0xffff91423a18   408  ldp x15, x18, [jssp], #24
0xffff91423a1c   412  ldp x2, x0, [jssp], #16
0xffff91423a20   416  ldr x16, pc+1024 (addr 0x0000ffff91423e20)    ;; external reference (store_buffer_top)
0xffff91423a24   420  ldr x10, [x16]
0xffff91423a28   424  str x6, [x10], #8
0xffff91423a2c   428  str x10, [x16]
0xffff91423a30   432  tst x10, #0x1ffff
0xffff91423a34   436  b.eq #+0x8 (addr 0xffff91423a3c)
0xffff91423a38   440  ret
0xffff91423a3c   444  sub csp, jssp, #0x8 (8)
0xffff91423a40   448  str lr, [jssp, #-8]!
0xffff91423a44   452  ldr x17, pc+996 (addr 0x0000ffff91423e28)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91423a48   456  blr x17
0xffff91423a4c   460  ldr lr, [jssp], #8
0xffff91423a50   464  ret
0xffff91423a54   468  and x10, x1, #0xfffffffffff00000
0xffff91423a58   472  ldr x0, [x10, #104]
0xffff91423a5c   476  subs x0, x0, #0x1 (1)
0xffff91423a60   480  str x0, [x10, #104]
0xffff91423a64   484  b.mi #+0x64 (addr 0xffff91423ac8)
0xffff91423a68   488  ubfx x16, x1, #8, #12
0xffff91423a6c   492  and x10, x1, #0xfffffffffff00000
0xffff91423a70   496  add x10, x10, x16, lsl #2
0xffff91423a74   500  ubfx x0, x1, #3, #5
0xffff91423a78   504  ldr x10, [x10, #360]
0xffff91423a7c   508  lsr x10, x10, x0
0xffff91423a80   512  tbz w10, #0, #+0x8 (addr 0xffff91423a88)
0xffff91423a84   516  tbnz w10, #1, #+0xc (addr 0xffff91423a90)
0xffff91423a88   520  ldp x2, x0, [jssp], #16
0xffff91423a8c   524  ret
0xffff91423a90   528  ldr x10, [x6]
0xffff91423a94   532  sub csp, jssp, #0x10 (16)
0xffff91423a98   536  stp x1, x6, [jssp, #-16]!
0xffff91423a9c   540  ubfx x16, x10, #8, #12
0xffff91423aa0   544  and x0, x10, #0xfffffffffff00000
0xffff91423aa4   548  add x0, x0, x16, lsl #2
0xffff91423aa8   552  ubfx x1, x10, #3, #5
0xffff91423aac   556  ldr x6, [x0, #360]
0xffff91423ab0   560  lsr x6, x6, x1
0xffff91423ab4   564  tbz w6, #0, #+0x10 (addr 0xffff91423ac4)
0xffff91423ab8   568  ldp x1, x6, [jssp], #16
0xffff91423abc   572  ldp x2, x0, [jssp], #16
0xffff91423ac0   576  ret
0xffff91423ac4   580  ldp x1, x6, [jssp], #16
0xffff91423ac8   584  sub csp, jssp, #0x78 (120)
0xffff91423acc   588  stp x14, x15, [jssp, #-32]!
0xffff91423ad0   592  stp x18, lr, [jssp, #16]
0xffff91423ad4   596  stp x9, x11, [jssp, #-32]!
0xffff91423ad8   600  stp x12, x13, [jssp, #16]
0xffff91423adc   604  stp x5, x6, [jssp, #-32]!
0xffff91423ae0   608  stp x7, x8, [jssp, #16]
0xffff91423ae4   612  stp x1, x3, [jssp, #-24]!
0xffff91423ae8   616  str x4, [jssp, #16]
0xffff91423aec   620  mov x0, x1
0xffff91423af0   624  mov x1, x6
0xffff91423af4   628  ldr x2, pc+828 (addr 0x0000ffff91423e30)    ;; external reference (isolate)
0xffff91423af8   632  ldr x16, pc+832 (addr 0x0000ffff91423e38)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91423afc   636  and csp, jssp, #0xfffffffffffffff0
0xffff91423b00   640  blr x16
0xffff91423b04   644  ldp x4, x5, [jssp, #16]
0xffff91423b08   648  ldp x1, x3, [jssp], #32
0xffff91423b0c   652  ldp x8, x9, [jssp, #16]
0xffff91423b10   656  ldp x6, x7, [jssp], #32
0xffff91423b14   660  ldp x13, x14, [jssp, #16]
0xffff91423b18   664  ldp x11, x12, [jssp], #32
0xffff91423b1c   668  ldr lr, [jssp, #16]
0xffff91423b20   672  ldp x15, x18, [jssp], #24
0xffff91423b24   676  ldp x2, x0, [jssp], #16
0xffff91423b28   680  ret
0xffff91423b2c   684  sub csp, jssp, #0x10 (16)
0xffff91423b30   688  stp x2, x0, [jssp, #-16]!
0xffff91423b34   692  ldr x10, [x6]
0xffff91423b38   696  and x16, x10, #0xfffffffffff00000
0xffff91423b3c   700  ldr x16, [x16, #8]
0xffff91423b40   704  tst x16, #0x18
0xffff91423b44   708  b.eq #+0x19c (addr 0xffff91423ce0)
0xffff91423b48   712  and x16, x1, #0xfffffffffff00000
0xffff91423b4c   716  ldr x16, [x16, #8]
0xffff91423b50   720  tst x16, #0x18
0xffff91423b54   724  b.ne #+0x18c (addr 0xffff91423ce0)
0xffff91423b58   728  and x10, x1, #0xfffffffffff00000
0xffff91423b5c   732  ldr x0, [x10, #104]
0xffff91423b60   736  subs x0, x0, #0x1 (1)
0xffff91423b64   740  str x0, [x10, #104]
0xffff91423b68   744  b.mi #+0xe4 (addr 0xffff91423c4c)
0xffff91423b6c   748  ubfx x16, x1, #8, #12
0xffff91423b70   752  and x10, x1, #0xfffffffffff00000
0xffff91423b74   756  add x10, x10, x16, lsl #2
0xffff91423b78   760  ubfx x0, x1, #3, #5
0xffff91423b7c   764  ldr x10, [x10, #360]
0xffff91423b80   768  lsr x10, x10, x0
0xffff91423b84   772  tbz w10, #0, #+0x8 (addr 0xffff91423b8c)
0xffff91423b88   776  tbnz w10, #1, #+0x3c (addr 0xffff91423bc4)
0xffff91423b8c   780  ldp x2, x0, [jssp], #16
0xffff91423b90   784  ldr x16, pc+688 (addr 0x0000ffff91423e40)    ;; external reference (store_buffer_top)
0xffff91423b94   788  ldr x10, [x16]
0xffff91423b98   792  str x6, [x10], #8
0xffff91423b9c   796  str x10, [x16]
0xffff91423ba0   800  tst x10, #0x1ffff
0xffff91423ba4   804  b.eq #+0x8 (addr 0xffff91423bac)
0xffff91423ba8   808  ret
0xffff91423bac   812  sub csp, jssp, #0x8 (8)
0xffff91423bb0   816  str lr, [jssp, #-8]!
0xffff91423bb4   820  ldr x17, pc+660 (addr 0x0000ffff91423e48)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91423bb8   824  blr x17
0xffff91423bbc   828  ldr lr, [jssp], #8
0xffff91423bc0   832  ret
0xffff91423bc4   836  ldr x10, [x6]
0xffff91423bc8   840  and x0, x10, #0xfffffffffff00000
0xffff91423bcc   844  ldr x0, [x0, #8]
0xffff91423bd0   848  tbz w0, #6, #+0x18 (addr 0xffff91423be8)
0xffff91423bd4   852  and x0, x1, #0xfffffffffff00000
0xffff91423bd8   856  ldr x0, [x0, #8]
0xffff91423bdc   860  movz x16, #0x58
0xffff91423be0   864  tst x0, x16
0xffff91423be4   868  b.eq #+0x68 (addr 0xffff91423c4c)
0xffff91423be8   872  sub csp, jssp, #0x10 (16)
0xffff91423bec   876  stp x1, x6, [jssp, #-16]!
0xffff91423bf0   880  ubfx x16, x10, #8, #12
0xffff91423bf4   884  and x0, x10, #0xfffffffffff00000
0xffff91423bf8   888  add x0, x0, x16, lsl #2
0xffff91423bfc   892  ubfx x1, x10, #3, #5
0xffff91423c00   896  ldr x6, [x0, #360]
0xffff91423c04   900  lsr x6, x6, x1
0xffff91423c08   904  tbz w6, #0, #+0x40 (addr 0xffff91423c48)
0xffff91423c0c   908  ldp x1, x6, [jssp], #16
0xffff91423c10   912  ldp x2, x0, [jssp], #16
0xffff91423c14   916  ldr x16, pc+572 (addr 0x0000ffff91423e50)    ;; external reference (store_buffer_top)
0xffff91423c18   920  ldr x10, [x16]
0xffff91423c1c   924  str x6, [x10], #8
0xffff91423c20   928  str x10, [x16]
0xffff91423c24   932  tst x10, #0x1ffff
0xffff91423c28   936  b.eq #+0x8 (addr 0xffff91423c30)
0xffff91423c2c   940  ret
0xffff91423c30   944  sub csp, jssp, #0x8 (8)
0xffff91423c34   948  str lr, [jssp, #-8]!
0xffff91423c38   952  ldr x17, pc+544 (addr 0x0000ffff91423e58)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91423c3c   956  blr x17
0xffff91423c40   960  ldr lr, [jssp], #8
0xffff91423c44   964  ret
0xffff91423c48   968  ldp x1, x6, [jssp], #16
0xffff91423c4c   972  sub csp, jssp, #0x78 (120)
0xffff91423c50   976  stp x14, x15, [jssp, #-32]!
0xffff91423c54   980  stp x18, lr, [jssp, #16]
0xffff91423c58   984  stp x9, x11, [jssp, #-32]!
0xffff91423c5c   988  stp x12, x13, [jssp, #16]
0xffff91423c60   992  stp x5, x6, [jssp, #-32]!
0xffff91423c64   996  stp x7, x8, [jssp, #16]
0xffff91423c68  1000  stp x1, x3, [jssp, #-24]!
0xffff91423c6c  1004  str x4, [jssp, #16]
0xffff91423c70  1008  mov x0, x1
0xffff91423c74  1012  mov x1, x6
0xffff91423c78  1016  ldr x2, pc+488 (addr 0x0000ffff91423e60)    ;; external reference (isolate)
0xffff91423c7c  1020  ldr x16, pc+492 (addr 0x0000ffff91423e68)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91423c80  1024  and csp, jssp, #0xfffffffffffffff0
0xffff91423c84  1028  blr x16
0xffff91423c88  1032  ldp x4, x5, [jssp, #16]
0xffff91423c8c  1036  ldp x1, x3, [jssp], #32
0xffff91423c90  1040  ldp x8, x9, [jssp, #16]
0xffff91423c94  1044  ldp x6, x7, [jssp], #32
0xffff91423c98  1048  ldp x13, x14, [jssp, #16]
0xffff91423c9c  1052  ldp x11, x12, [jssp], #32
0xffff91423ca0  1056  ldr lr, [jssp, #16]
0xffff91423ca4  1060  ldp x15, x18, [jssp], #24
0xffff91423ca8  1064  ldp x2, x0, [jssp], #16
0xffff91423cac  1068  ldr x16, pc+452 (addr 0x0000ffff91423e70)    ;; external reference (store_buffer_top)
0xffff91423cb0  1072  ldr x10, [x16]
0xffff91423cb4  1076  str x6, [x10], #8
0xffff91423cb8  1080  str x10, [x16]
0xffff91423cbc  1084  tst x10, #0x1ffff
0xffff91423cc0  1088  b.eq #+0x8 (addr 0xffff91423cc8)
0xffff91423cc4  1092  ret
0xffff91423cc8  1096  sub csp, jssp, #0x8 (8)
0xffff91423ccc  1100  str lr, [jssp, #-8]!
0xffff91423cd0  1104  ldr x17, pc+424 (addr 0x0000ffff91423e78)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91423cd4  1108  blr x17
0xffff91423cd8  1112  ldr lr, [jssp], #8
0xffff91423cdc  1116  ret
0xffff91423ce0  1120  and x10, x1, #0xfffffffffff00000
0xffff91423ce4  1124  ldr x0, [x10, #104]
0xffff91423ce8  1128  subs x0, x0, #0x1 (1)
0xffff91423cec  1132  str x0, [x10, #104]
0xffff91423cf0  1136  b.mi #+0x84 (addr 0xffff91423d74)
0xffff91423cf4  1140  ubfx x16, x1, #8, #12
0xffff91423cf8  1144  and x10, x1, #0xfffffffffff00000
0xffff91423cfc  1148  add x10, x10, x16, lsl #2
0xffff91423d00  1152  ubfx x0, x1, #3, #5
0xffff91423d04  1156  ldr x10, [x10, #360]
0xffff91423d08  1160  lsr x10, x10, x0
0xffff91423d0c  1164  tbz w10, #0, #+0x8 (addr 0xffff91423d14)
0xffff91423d10  1168  tbnz w10, #1, #+0xc (addr 0xffff91423d1c)
0xffff91423d14  1172  ldp x2, x0, [jssp], #16
0xffff91423d18  1176  ret
0xffff91423d1c  1180  ldr x10, [x6]
0xffff91423d20  1184  and x0, x10, #0xfffffffffff00000
0xffff91423d24  1188  ldr x0, [x0, #8]
0xffff91423d28  1192  tbz w0, #6, #+0x18 (addr 0xffff91423d40)
0xffff91423d2c  1196  and x0, x1, #0xfffffffffff00000
0xffff91423d30  1200  ldr x0, [x0, #8]
0xffff91423d34  1204  movz x16, #0x58
0xffff91423d38  1208  tst x0, x16
0xffff91423d3c  1212  b.eq #+0x38 (addr 0xffff91423d74)
0xffff91423d40  1216  sub csp, jssp, #0x10 (16)
0xffff91423d44  1220  stp x1, x6, [jssp, #-16]!
0xffff91423d48  1224  ubfx x16, x10, #8, #12
0xffff91423d4c  1228  and x0, x10, #0xfffffffffff00000
0xffff91423d50  1232  add x0, x0, x16, lsl #2
0xffff91423d54  1236  ubfx x1, x10, #3, #5
0xffff91423d58  1240  ldr x6, [x0, #360]
0xffff91423d5c  1244  lsr x6, x6, x1
0xffff91423d60  1248  tbz w6, #0, #+0x10 (addr 0xffff91423d70)
0xffff91423d64  1252  ldp x1, x6, [jssp], #16
0xffff91423d68  1256  ldp x2, x0, [jssp], #16
0xffff91423d6c  1260  ret
0xffff91423d70  1264  ldp x1, x6, [jssp], #16
0xffff91423d74  1268  sub csp, jssp, #0x78 (120)
0xffff91423d78  1272  stp x14, x15, [jssp, #-32]!
0xffff91423d7c  1276  stp x18, lr, [jssp, #16]
0xffff91423d80  1280  stp x9, x11, [jssp, #-32]!
0xffff91423d84  1284  stp x12, x13, [jssp, #16]
0xffff91423d88  1288  stp x5, x6, [jssp, #-32]!
0xffff91423d8c  1292  stp x7, x8, [jssp, #16]
0xffff91423d90  1296  stp x1, x3, [jssp, #-24]!
0xffff91423d94  1300  str x4, [jssp, #16]
0xffff91423d98  1304  mov x0, x1
0xffff91423d9c  1308  mov x1, x6
0xffff91423da0  1312  ldr x2, pc+224 (addr 0x0000ffff91423e80)    ;; external reference (isolate)
0xffff91423da4  1316  ldr x16, pc+228 (addr 0x0000ffff91423e88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91423da8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff91423dac  1324  blr x16
0xffff91423db0  1328  ldp x4, x5, [jssp, #16]
0xffff91423db4  1332  ldp x1, x3, [jssp], #32
0xffff91423db8  1336  ldp x8, x9, [jssp, #16]
0xffff91423dbc  1340  ldp x6, x7, [jssp], #32
0xffff91423dc0  1344  ldp x13, x14, [jssp, #16]
0xffff91423dc4  1348  ldp x11, x12, [jssp], #32
0xffff91423dc8  1352  ldr lr, [jssp, #16]
0xffff91423dcc  1356  ldp x15, x18, [jssp], #24
0xffff91423dd0  1360  ldp x2, x0, [jssp], #16
0xffff91423dd4  1364  ret
0xffff91423dd8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff91423ddc  1372  d63f03e0       constant
0xffff91423de0  1376  4117f8c0       constant
0xffff91423de4  1380  00000000       constant
0xffff91423de8  1384  914064c0       constant
0xffff91423dec  1388  0000ffff       constant
0xffff91423df0  1392  4117f8c0       constant
0xffff91423df4  1396  00000000       constant
0xffff91423df8  1400  914064c0       constant
0xffff91423dfc  1404  0000ffff       constant
0xffff91423e00  1408  4117f8c0       constant
0xffff91423e04  1412  00000000       constant
0xffff91423e08  1416  914064c0       constant
0xffff91423e0c  1420  0000ffff       constant
0xffff91423e10  1424  4117e2d0       constant
0xffff91423e14  1428  00000000       constant
0xffff91423e18  1432  00c2d958       constant
0xffff91423e1c  1436  00000000       constant
0xffff91423e20  1440  4117f8c0       constant
0xffff91423e24  1444  00000000       constant
0xffff91423e28  1448  914064c0       constant
0xffff91423e2c  1452  0000ffff       constant
0xffff91423e30  1456  4117e2d0       constant
0xffff91423e34  1460  00000000       constant
0xffff91423e38  1464  00c2d958       constant
0xffff91423e3c  1468  00000000       constant
0xffff91423e40  1472  4117f8c0       constant
0xffff91423e44  1476  00000000       constant
0xffff91423e48  1480  914064c0       constant
0xffff91423e4c  1484  0000ffff       constant
0xffff91423e50  1488  4117f8c0       constant
0xffff91423e54  1492  00000000       constant
0xffff91423e58  1496  914064c0       constant
0xffff91423e5c  1500  0000ffff       constant
0xffff91423e60  1504  4117e2d0       constant
0xffff91423e64  1508  00000000       constant
0xffff91423e68  1512  00c2d958       constant
0xffff91423e6c  1516  00000000       constant
0xffff91423e70  1520  4117f8c0       constant
0xffff91423e74  1524  00000000       constant
0xffff91423e78  1528  914064c0       constant
0xffff91423e7c  1532  0000ffff       constant
0xffff91423e80  1536  4117e2d0       constant
0xffff91423e84  1540  00000000       constant
0xffff91423e88  1544  00c2d958       constant
0xffff91423e8c  1548  00000000       constant


RelocInfo (size = 59)
0xffff91423888  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914238ac  code target (STUB)  (0xffff914064c0)
0xffff91423924  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91423948  code target (STUB)  (0xffff914064c0)
0xffff91423988  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914239ac  code target (STUB)  (0xffff914064c0)
0xffff914239ec  external reference (isolate)  (0x4117e2d0)
0xffff914239f0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91423a20  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91423a44  code target (STUB)  (0xffff914064c0)
0xffff91423af4  external reference (isolate)  (0x4117e2d0)
0xffff91423af8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91423b90  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91423bb4  code target (STUB)  (0xffff914064c0)
0xffff91423c14  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91423c38  code target (STUB)  (0xffff914064c0)
0xffff91423c78  external reference (isolate)  (0x4117e2d0)
0xffff91423c7c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91423cac  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91423cd0  code target (STUB)  (0xffff914064c0)
0xffff91423da0  external reference (isolate)  (0x4117e2d0)
0xffff91423da4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91423dd8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff91423f00     0  adr xzr, #+0x40 (addr 0xffff91423f40)
0xffff91423f04     4  adr xzr, #+0x2a8 (addr 0xffff914241ac)
0xffff91423f08     8  ldr x16, pc+1368 (addr 0x0000ffff91424460)    ;; external reference (store_buffer_top)
0xffff91423f0c    12  ldr x3, [x16]
0xffff91423f10    16  str x10, [x3], #8
0xffff91423f14    20  str x3, [x16]
0xffff91423f18    24  tst x3, #0x1ffff
0xffff91423f1c    28  b.eq #+0x8 (addr 0xffff91423f24)
0xffff91423f20    32  ret
0xffff91423f24    36  sub csp, jssp, #0x8 (8)
0xffff91423f28    40  str lr, [jssp, #-8]!
0xffff91423f2c    44  ldr x17, pc+1340 (addr 0x0000ffff91424468)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91423f30    48  blr x17
0xffff91423f34    52  ldr lr, [jssp], #8
0xffff91423f38    56  ret
0xffff91423f3c    60  ret
0xffff91423f40    64  sub csp, jssp, #0x10 (16)
0xffff91423f44    68  stp x2, x0, [jssp, #-16]!
0xffff91423f48    72  ldr x3, [x10]
0xffff91423f4c    76  and x16, x3, #0xfffffffffff00000
0xffff91423f50    80  ldr x16, [x16, #8]
0xffff91423f54    84  tst x16, #0x18
0xffff91423f58    88  b.eq #+0x17c (addr 0xffff914240d4)
0xffff91423f5c    92  and x16, x1, #0xfffffffffff00000
0xffff91423f60    96  ldr x16, [x16, #8]
0xffff91423f64   100  tst x16, #0x18
0xffff91423f68   104  b.ne #+0x16c (addr 0xffff914240d4)
0xffff91423f6c   108  and x3, x1, #0xfffffffffff00000
0xffff91423f70   112  ldr x0, [x3, #104]
0xffff91423f74   116  subs x0, x0, #0x1 (1)
0xffff91423f78   120  str x0, [x3, #104]
0xffff91423f7c   124  b.mi #+0xc4 (addr 0xffff91424040)
0xffff91423f80   128  ubfx x16, x1, #8, #12
0xffff91423f84   132  and x3, x1, #0xfffffffffff00000
0xffff91423f88   136  add x3, x3, x16, lsl #2
0xffff91423f8c   140  ubfx x0, x1, #3, #5
0xffff91423f90   144  ldr x3, [x3, #360]
0xffff91423f94   148  lsr x3, x3, x0
0xffff91423f98   152  tbz w3, #0, #+0x8 (addr 0xffff91423fa0)
0xffff91423f9c   156  tbnz w3, #1, #+0x3c (addr 0xffff91423fd8)
0xffff91423fa0   160  ldp x2, x0, [jssp], #16
0xffff91423fa4   164  ldr x16, pc+1228 (addr 0x0000ffff91424470)    ;; external reference (store_buffer_top)
0xffff91423fa8   168  ldr x3, [x16]
0xffff91423fac   172  str x10, [x3], #8
0xffff91423fb0   176  str x3, [x16]
0xffff91423fb4   180  tst x3, #0x1ffff
0xffff91423fb8   184  b.eq #+0x8 (addr 0xffff91423fc0)
0xffff91423fbc   188  ret
0xffff91423fc0   192  sub csp, jssp, #0x8 (8)
0xffff91423fc4   196  str lr, [jssp, #-8]!
0xffff91423fc8   200  ldr x17, pc+1200 (addr 0x0000ffff91424478)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91423fcc   204  blr x17
0xffff91423fd0   208  ldr lr, [jssp], #8
0xffff91423fd4   212  ret
0xffff91423fd8   216  ldr x3, [x10]
0xffff91423fdc   220  sub csp, jssp, #0x10 (16)
0xffff91423fe0   224  stp x1, x10, [jssp, #-16]!
0xffff91423fe4   228  ubfx x16, x3, #8, #12
0xffff91423fe8   232  and x0, x3, #0xfffffffffff00000
0xffff91423fec   236  add x0, x0, x16, lsl #2
0xffff91423ff0   240  ubfx x1, x3, #3, #5
0xffff91423ff4   244  ldr x10, [x0, #360]
0xffff91423ff8   248  lsr x10, x10, x1
0xffff91423ffc   252  tbz w10, #0, #+0x40 (addr 0xffff9142403c)
0xffff91424000   256  ldp x1, x10, [jssp], #16
0xffff91424004   260  ldp x2, x0, [jssp], #16
0xffff91424008   264  ldr x16, pc+1144 (addr 0x0000ffff91424480)    ;; external reference (store_buffer_top)
0xffff9142400c   268  ldr x3, [x16]
0xffff91424010   272  str x10, [x3], #8
0xffff91424014   276  str x3, [x16]
0xffff91424018   280  tst x3, #0x1ffff
0xffff9142401c   284  b.eq #+0x8 (addr 0xffff91424024)
0xffff91424020   288  ret
0xffff91424024   292  sub csp, jssp, #0x8 (8)
0xffff91424028   296  str lr, [jssp, #-8]!
0xffff9142402c   300  ldr x17, pc+1116 (addr 0x0000ffff91424488)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91424030   304  blr x17
0xffff91424034   308  ldr lr, [jssp], #8
0xffff91424038   312  ret
0xffff9142403c   316  ldp x1, x10, [jssp], #16
0xffff91424040   320  sub csp, jssp, #0x78 (120)
0xffff91424044   324  stp x14, x15, [jssp, #-32]!
0xffff91424048   328  stp x18, lr, [jssp, #16]
0xffff9142404c   332  stp x10, x11, [jssp, #-32]!
0xffff91424050   336  stp x12, x13, [jssp, #16]
0xffff91424054   340  stp x6, x7, [jssp, #-32]!
0xffff91424058   344  stp x8, x9, [jssp, #16]
0xffff9142405c   348  stp x1, x4, [jssp, #-24]!
0xffff91424060   352  str x5, [jssp, #16]
0xffff91424064   356  mov x0, x1
0xffff91424068   360  mov x1, x10
0xffff9142406c   364  ldr x2, pc+1060 (addr 0x0000ffff91424490)    ;; external reference (isolate)
0xffff91424070   368  ldr x16, pc+1064 (addr 0x0000ffff91424498)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91424074   372  and csp, jssp, #0xfffffffffffffff0
0xffff91424078   376  blr x16
0xffff9142407c   380  ldp x5, x6, [jssp, #16]
0xffff91424080   384  ldp x1, x4, [jssp], #32
0xffff91424084   388  ldp x9, x10, [jssp, #16]
0xffff91424088   392  ldp x7, x8, [jssp], #32
0xffff9142408c   396  ldp x13, x14, [jssp, #16]
0xffff91424090   400  ldp x11, x12, [jssp], #32
0xffff91424094   404  ldr lr, [jssp, #16]
0xffff91424098   408  ldp x15, x18, [jssp], #24
0xffff9142409c   412  ldp x2, x0, [jssp], #16
0xffff914240a0   416  ldr x16, pc+1024 (addr 0x0000ffff914244a0)    ;; external reference (store_buffer_top)
0xffff914240a4   420  ldr x3, [x16]
0xffff914240a8   424  str x10, [x3], #8
0xffff914240ac   428  str x3, [x16]
0xffff914240b0   432  tst x3, #0x1ffff
0xffff914240b4   436  b.eq #+0x8 (addr 0xffff914240bc)
0xffff914240b8   440  ret
0xffff914240bc   444  sub csp, jssp, #0x8 (8)
0xffff914240c0   448  str lr, [jssp, #-8]!
0xffff914240c4   452  ldr x17, pc+996 (addr 0x0000ffff914244a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff914240c8   456  blr x17
0xffff914240cc   460  ldr lr, [jssp], #8
0xffff914240d0   464  ret
0xffff914240d4   468  and x3, x1, #0xfffffffffff00000
0xffff914240d8   472  ldr x0, [x3, #104]
0xffff914240dc   476  subs x0, x0, #0x1 (1)
0xffff914240e0   480  str x0, [x3, #104]
0xffff914240e4   484  b.mi #+0x64 (addr 0xffff91424148)
0xffff914240e8   488  ubfx x16, x1, #8, #12
0xffff914240ec   492  and x3, x1, #0xfffffffffff00000
0xffff914240f0   496  add x3, x3, x16, lsl #2
0xffff914240f4   500  ubfx x0, x1, #3, #5
0xffff914240f8   504  ldr x3, [x3, #360]
0xffff914240fc   508  lsr x3, x3, x0
0xffff91424100   512  tbz w3, #0, #+0x8 (addr 0xffff91424108)
0xffff91424104   516  tbnz w3, #1, #+0xc (addr 0xffff91424110)
0xffff91424108   520  ldp x2, x0, [jssp], #16
0xffff9142410c   524  ret
0xffff91424110   528  ldr x3, [x10]
0xffff91424114   532  sub csp, jssp, #0x10 (16)
0xffff91424118   536  stp x1, x10, [jssp, #-16]!
0xffff9142411c   540  ubfx x16, x3, #8, #12
0xffff91424120   544  and x0, x3, #0xfffffffffff00000
0xffff91424124   548  add x0, x0, x16, lsl #2
0xffff91424128   552  ubfx x1, x3, #3, #5
0xffff9142412c   556  ldr x10, [x0, #360]
0xffff91424130   560  lsr x10, x10, x1
0xffff91424134   564  tbz w10, #0, #+0x10 (addr 0xffff91424144)
0xffff91424138   568  ldp x1, x10, [jssp], #16
0xffff9142413c   572  ldp x2, x0, [jssp], #16
0xffff91424140   576  ret
0xffff91424144   580  ldp x1, x10, [jssp], #16
0xffff91424148   584  sub csp, jssp, #0x78 (120)
0xffff9142414c   588  stp x14, x15, [jssp, #-32]!
0xffff91424150   592  stp x18, lr, [jssp, #16]
0xffff91424154   596  stp x10, x11, [jssp, #-32]!
0xffff91424158   600  stp x12, x13, [jssp, #16]
0xffff9142415c   604  stp x6, x7, [jssp, #-32]!
0xffff91424160   608  stp x8, x9, [jssp, #16]
0xffff91424164   612  stp x1, x4, [jssp, #-24]!
0xffff91424168   616  str x5, [jssp, #16]
0xffff9142416c   620  mov x0, x1
0xffff91424170   624  mov x1, x10
0xffff91424174   628  ldr x2, pc+828 (addr 0x0000ffff914244b0)    ;; external reference (isolate)
0xffff91424178   632  ldr x16, pc+832 (addr 0x0000ffff914244b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142417c   636  and csp, jssp, #0xfffffffffffffff0
0xffff91424180   640  blr x16
0xffff91424184   644  ldp x5, x6, [jssp, #16]
0xffff91424188   648  ldp x1, x4, [jssp], #32
0xffff9142418c   652  ldp x9, x10, [jssp, #16]
0xffff91424190   656  ldp x7, x8, [jssp], #32
0xffff91424194   660  ldp x13, x14, [jssp, #16]
0xffff91424198   664  ldp x11, x12, [jssp], #32
0xffff9142419c   668  ldr lr, [jssp, #16]
0xffff914241a0   672  ldp x15, x18, [jssp], #24
0xffff914241a4   676  ldp x2, x0, [jssp], #16
0xffff914241a8   680  ret
0xffff914241ac   684  sub csp, jssp, #0x10 (16)
0xffff914241b0   688  stp x2, x0, [jssp, #-16]!
0xffff914241b4   692  ldr x3, [x10]
0xffff914241b8   696  and x16, x3, #0xfffffffffff00000
0xffff914241bc   700  ldr x16, [x16, #8]
0xffff914241c0   704  tst x16, #0x18
0xffff914241c4   708  b.eq #+0x19c (addr 0xffff91424360)
0xffff914241c8   712  and x16, x1, #0xfffffffffff00000
0xffff914241cc   716  ldr x16, [x16, #8]
0xffff914241d0   720  tst x16, #0x18
0xffff914241d4   724  b.ne #+0x18c (addr 0xffff91424360)
0xffff914241d8   728  and x3, x1, #0xfffffffffff00000
0xffff914241dc   732  ldr x0, [x3, #104]
0xffff914241e0   736  subs x0, x0, #0x1 (1)
0xffff914241e4   740  str x0, [x3, #104]
0xffff914241e8   744  b.mi #+0xe4 (addr 0xffff914242cc)
0xffff914241ec   748  ubfx x16, x1, #8, #12
0xffff914241f0   752  and x3, x1, #0xfffffffffff00000
0xffff914241f4   756  add x3, x3, x16, lsl #2
0xffff914241f8   760  ubfx x0, x1, #3, #5
0xffff914241fc   764  ldr x3, [x3, #360]
0xffff91424200   768  lsr x3, x3, x0
0xffff91424204   772  tbz w3, #0, #+0x8 (addr 0xffff9142420c)
0xffff91424208   776  tbnz w3, #1, #+0x3c (addr 0xffff91424244)
0xffff9142420c   780  ldp x2, x0, [jssp], #16
0xffff91424210   784  ldr x16, pc+688 (addr 0x0000ffff914244c0)    ;; external reference (store_buffer_top)
0xffff91424214   788  ldr x3, [x16]
0xffff91424218   792  str x10, [x3], #8
0xffff9142421c   796  str x3, [x16]
0xffff91424220   800  tst x3, #0x1ffff
0xffff91424224   804  b.eq #+0x8 (addr 0xffff9142422c)
0xffff91424228   808  ret
0xffff9142422c   812  sub csp, jssp, #0x8 (8)
0xffff91424230   816  str lr, [jssp, #-8]!
0xffff91424234   820  ldr x17, pc+660 (addr 0x0000ffff914244c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91424238   824  blr x17
0xffff9142423c   828  ldr lr, [jssp], #8
0xffff91424240   832  ret
0xffff91424244   836  ldr x3, [x10]
0xffff91424248   840  and x0, x3, #0xfffffffffff00000
0xffff9142424c   844  ldr x0, [x0, #8]
0xffff91424250   848  tbz w0, #6, #+0x18 (addr 0xffff91424268)
0xffff91424254   852  and x0, x1, #0xfffffffffff00000
0xffff91424258   856  ldr x0, [x0, #8]
0xffff9142425c   860  movz x16, #0x58
0xffff91424260   864  tst x0, x16
0xffff91424264   868  b.eq #+0x68 (addr 0xffff914242cc)
0xffff91424268   872  sub csp, jssp, #0x10 (16)
0xffff9142426c   876  stp x1, x10, [jssp, #-16]!
0xffff91424270   880  ubfx x16, x3, #8, #12
0xffff91424274   884  and x0, x3, #0xfffffffffff00000
0xffff91424278   888  add x0, x0, x16, lsl #2
0xffff9142427c   892  ubfx x1, x3, #3, #5
0xffff91424280   896  ldr x10, [x0, #360]
0xffff91424284   900  lsr x10, x10, x1
0xffff91424288   904  tbz w10, #0, #+0x40 (addr 0xffff914242c8)
0xffff9142428c   908  ldp x1, x10, [jssp], #16
0xffff91424290   912  ldp x2, x0, [jssp], #16
0xffff91424294   916  ldr x16, pc+572 (addr 0x0000ffff914244d0)    ;; external reference (store_buffer_top)
0xffff91424298   920  ldr x3, [x16]
0xffff9142429c   924  str x10, [x3], #8
0xffff914242a0   928  str x3, [x16]
0xffff914242a4   932  tst x3, #0x1ffff
0xffff914242a8   936  b.eq #+0x8 (addr 0xffff914242b0)
0xffff914242ac   940  ret
0xffff914242b0   944  sub csp, jssp, #0x8 (8)
0xffff914242b4   948  str lr, [jssp, #-8]!
0xffff914242b8   952  ldr x17, pc+544 (addr 0x0000ffff914244d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff914242bc   956  blr x17
0xffff914242c0   960  ldr lr, [jssp], #8
0xffff914242c4   964  ret
0xffff914242c8   968  ldp x1, x10, [jssp], #16
0xffff914242cc   972  sub csp, jssp, #0x78 (120)
0xffff914242d0   976  stp x14, x15, [jssp, #-32]!
0xffff914242d4   980  stp x18, lr, [jssp, #16]
0xffff914242d8   984  stp x10, x11, [jssp, #-32]!
0xffff914242dc   988  stp x12, x13, [jssp, #16]
0xffff914242e0   992  stp x6, x7, [jssp, #-32]!
0xffff914242e4   996  stp x8, x9, [jssp, #16]
0xffff914242e8  1000  stp x1, x4, [jssp, #-24]!
0xffff914242ec  1004  str x5, [jssp, #16]
0xffff914242f0  1008  mov x0, x1
0xffff914242f4  1012  mov x1, x10
0xffff914242f8  1016  ldr x2, pc+488 (addr 0x0000ffff914244e0)    ;; external reference (isolate)
0xffff914242fc  1020  ldr x16, pc+492 (addr 0x0000ffff914244e8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91424300  1024  and csp, jssp, #0xfffffffffffffff0
0xffff91424304  1028  blr x16
0xffff91424308  1032  ldp x5, x6, [jssp, #16]
0xffff9142430c  1036  ldp x1, x4, [jssp], #32
0xffff91424310  1040  ldp x9, x10, [jssp, #16]
0xffff91424314  1044  ldp x7, x8, [jssp], #32
0xffff91424318  1048  ldp x13, x14, [jssp, #16]
0xffff9142431c  1052  ldp x11, x12, [jssp], #32
0xffff91424320  1056  ldr lr, [jssp, #16]
0xffff91424324  1060  ldp x15, x18, [jssp], #24
0xffff91424328  1064  ldp x2, x0, [jssp], #16
0xffff9142432c  1068  ldr x16, pc+452 (addr 0x0000ffff914244f0)    ;; external reference (store_buffer_top)
0xffff91424330  1072  ldr x3, [x16]
0xffff91424334  1076  str x10, [x3], #8
0xffff91424338  1080  str x3, [x16]
0xffff9142433c  1084  tst x3, #0x1ffff
0xffff91424340  1088  b.eq #+0x8 (addr 0xffff91424348)
0xffff91424344  1092  ret
0xffff91424348  1096  sub csp, jssp, #0x8 (8)
0xffff9142434c  1100  str lr, [jssp, #-8]!
0xffff91424350  1104  ldr x17, pc+424 (addr 0x0000ffff914244f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91424354  1108  blr x17
0xffff91424358  1112  ldr lr, [jssp], #8
0xffff9142435c  1116  ret
0xffff91424360  1120  and x3, x1, #0xfffffffffff00000
0xffff91424364  1124  ldr x0, [x3, #104]
0xffff91424368  1128  subs x0, x0, #0x1 (1)
0xffff9142436c  1132  str x0, [x3, #104]
0xffff91424370  1136  b.mi #+0x84 (addr 0xffff914243f4)
0xffff91424374  1140  ubfx x16, x1, #8, #12
0xffff91424378  1144  and x3, x1, #0xfffffffffff00000
0xffff9142437c  1148  add x3, x3, x16, lsl #2
0xffff91424380  1152  ubfx x0, x1, #3, #5
0xffff91424384  1156  ldr x3, [x3, #360]
0xffff91424388  1160  lsr x3, x3, x0
0xffff9142438c  1164  tbz w3, #0, #+0x8 (addr 0xffff91424394)
0xffff91424390  1168  tbnz w3, #1, #+0xc (addr 0xffff9142439c)
0xffff91424394  1172  ldp x2, x0, [jssp], #16
0xffff91424398  1176  ret
0xffff9142439c  1180  ldr x3, [x10]
0xffff914243a0  1184  and x0, x3, #0xfffffffffff00000
0xffff914243a4  1188  ldr x0, [x0, #8]
0xffff914243a8  1192  tbz w0, #6, #+0x18 (addr 0xffff914243c0)
0xffff914243ac  1196  and x0, x1, #0xfffffffffff00000
0xffff914243b0  1200  ldr x0, [x0, #8]
0xffff914243b4  1204  movz x16, #0x58
0xffff914243b8  1208  tst x0, x16
0xffff914243bc  1212  b.eq #+0x38 (addr 0xffff914243f4)
0xffff914243c0  1216  sub csp, jssp, #0x10 (16)
0xffff914243c4  1220  stp x1, x10, [jssp, #-16]!
0xffff914243c8  1224  ubfx x16, x3, #8, #12
0xffff914243cc  1228  and x0, x3, #0xfffffffffff00000
0xffff914243d0  1232  add x0, x0, x16, lsl #2
0xffff914243d4  1236  ubfx x1, x3, #3, #5
0xffff914243d8  1240  ldr x10, [x0, #360]
0xffff914243dc  1244  lsr x10, x10, x1
0xffff914243e0  1248  tbz w10, #0, #+0x10 (addr 0xffff914243f0)
0xffff914243e4  1252  ldp x1, x10, [jssp], #16
0xffff914243e8  1256  ldp x2, x0, [jssp], #16
0xffff914243ec  1260  ret
0xffff914243f0  1264  ldp x1, x10, [jssp], #16
0xffff914243f4  1268  sub csp, jssp, #0x78 (120)
0xffff914243f8  1272  stp x14, x15, [jssp, #-32]!
0xffff914243fc  1276  stp x18, lr, [jssp, #16]
0xffff91424400  1280  stp x10, x11, [jssp, #-32]!
0xffff91424404  1284  stp x12, x13, [jssp, #16]
0xffff91424408  1288  stp x6, x7, [jssp, #-32]!
0xffff9142440c  1292  stp x8, x9, [jssp, #16]
0xffff91424410  1296  stp x1, x4, [jssp, #-24]!
0xffff91424414  1300  str x5, [jssp, #16]
0xffff91424418  1304  mov x0, x1
0xffff9142441c  1308  mov x1, x10
0xffff91424420  1312  ldr x2, pc+224 (addr 0x0000ffff91424500)    ;; external reference (isolate)
0xffff91424424  1316  ldr x16, pc+228 (addr 0x0000ffff91424508)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91424428  1320  and csp, jssp, #0xfffffffffffffff0
0xffff9142442c  1324  blr x16
0xffff91424430  1328  ldp x5, x6, [jssp, #16]
0xffff91424434  1332  ldp x1, x4, [jssp], #32
0xffff91424438  1336  ldp x9, x10, [jssp, #16]
0xffff9142443c  1340  ldp x7, x8, [jssp], #32
0xffff91424440  1344  ldp x13, x14, [jssp, #16]
0xffff91424444  1348  ldp x11, x12, [jssp], #32
0xffff91424448  1352  ldr lr, [jssp, #16]
0xffff9142444c  1356  ldp x15, x18, [jssp], #24
0xffff91424450  1360  ldp x2, x0, [jssp], #16
0xffff91424454  1364  ret
0xffff91424458  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9142445c  1372  d63f03e0       constant
0xffff91424460  1376  4117f8c0       constant
0xffff91424464  1380  00000000       constant
0xffff91424468  1384  914064c0       constant
0xffff9142446c  1388  0000ffff       constant
0xffff91424470  1392  4117f8c0       constant
0xffff91424474  1396  00000000       constant
0xffff91424478  1400  914064c0       constant
0xffff9142447c  1404  0000ffff       constant
0xffff91424480  1408  4117f8c0       constant
0xffff91424484  1412  00000000       constant
0xffff91424488  1416  914064c0       constant
0xffff9142448c  1420  0000ffff       constant
0xffff91424490  1424  4117e2d0       constant
0xffff91424494  1428  00000000       constant
0xffff91424498  1432  00c2d958       constant
0xffff9142449c  1436  00000000       constant
0xffff914244a0  1440  4117f8c0       constant
0xffff914244a4  1444  00000000       constant
0xffff914244a8  1448  914064c0       constant
0xffff914244ac  1452  0000ffff       constant
0xffff914244b0  1456  4117e2d0       constant
0xffff914244b4  1460  00000000       constant
0xffff914244b8  1464  00c2d958       constant
0xffff914244bc  1468  00000000       constant
0xffff914244c0  1472  4117f8c0       constant
0xffff914244c4  1476  00000000       constant
0xffff914244c8  1480  914064c0       constant
0xffff914244cc  1484  0000ffff       constant
0xffff914244d0  1488  4117f8c0       constant
0xffff914244d4  1492  00000000       constant
0xffff914244d8  1496  914064c0       constant
0xffff914244dc  1500  0000ffff       constant
0xffff914244e0  1504  4117e2d0       constant
0xffff914244e4  1508  00000000       constant
0xffff914244e8  1512  00c2d958       constant
0xffff914244ec  1516  00000000       constant
0xffff914244f0  1520  4117f8c0       constant
0xffff914244f4  1524  00000000       constant
0xffff914244f8  1528  914064c0       constant
0xffff914244fc  1532  0000ffff       constant
0xffff91424500  1536  4117e2d0       constant
0xffff91424504  1540  00000000       constant
0xffff91424508  1544  00c2d958       constant
0xffff9142450c  1548  00000000       constant


RelocInfo (size = 59)
0xffff91423f08  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91423f2c  code target (STUB)  (0xffff914064c0)
0xffff91423fa4  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91423fc8  code target (STUB)  (0xffff914064c0)
0xffff91424008  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142402c  code target (STUB)  (0xffff914064c0)
0xffff9142406c  external reference (isolate)  (0x4117e2d0)
0xffff91424070  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff914240a0  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914240c4  code target (STUB)  (0xffff914064c0)
0xffff91424174  external reference (isolate)  (0x4117e2d0)
0xffff91424178  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91424210  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91424234  code target (STUB)  (0xffff914064c0)
0xffff91424294  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914242b8  code target (STUB)  (0xffff914064c0)
0xffff914242f8  external reference (isolate)  (0x4117e2d0)
0xffff914242fc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142432c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91424350  code target (STUB)  (0xffff914064c0)
0xffff91424420  external reference (isolate)  (0x4117e2d0)
0xffff91424424  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91424458  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff91424580     0  adr xzr, #+0x40 (addr 0xffff914245c0)
0xffff91424584     4  adr xzr, #+0x2a8 (addr 0xffff9142482c)
0xffff91424588     8  ldr x16, pc+1368 (addr 0x0000ffff91424ae0)    ;; external reference (store_buffer_top)
0xffff9142458c    12  ldr x5, [x16]
0xffff91424590    16  str x13, [x5], #8
0xffff91424594    20  str x5, [x16]
0xffff91424598    24  tst x5, #0x1ffff
0xffff9142459c    28  b.eq #+0x8 (addr 0xffff914245a4)
0xffff914245a0    32  ret
0xffff914245a4    36  sub csp, jssp, #0x8 (8)
0xffff914245a8    40  str lr, [jssp, #-8]!
0xffff914245ac    44  ldr x17, pc+1340 (addr 0x0000ffff91424ae8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff914245b0    48  blr x17
0xffff914245b4    52  ldr lr, [jssp], #8
0xffff914245b8    56  ret
0xffff914245bc    60  ret
0xffff914245c0    64  sub csp, jssp, #0x10 (16)
0xffff914245c4    68  stp x1, x0, [jssp, #-16]!
0xffff914245c8    72  ldr x5, [x13]
0xffff914245cc    76  and x16, x5, #0xfffffffffff00000
0xffff914245d0    80  ldr x16, [x16, #8]
0xffff914245d4    84  tst x16, #0x18
0xffff914245d8    88  b.eq #+0x17c (addr 0xffff91424754)
0xffff914245dc    92  and x16, x7, #0xfffffffffff00000
0xffff914245e0    96  ldr x16, [x16, #8]
0xffff914245e4   100  tst x16, #0x18
0xffff914245e8   104  b.ne #+0x16c (addr 0xffff91424754)
0xffff914245ec   108  and x5, x7, #0xfffffffffff00000
0xffff914245f0   112  ldr x0, [x5, #104]
0xffff914245f4   116  subs x0, x0, #0x1 (1)
0xffff914245f8   120  str x0, [x5, #104]
0xffff914245fc   124  b.mi #+0xc4 (addr 0xffff914246c0)
0xffff91424600   128  ubfx x16, x7, #8, #12
0xffff91424604   132  and x5, x7, #0xfffffffffff00000
0xffff91424608   136  add x5, x5, x16, lsl #2
0xffff9142460c   140  ubfx x0, x7, #3, #5
0xffff91424610   144  ldr x5, [x5, #360]
0xffff91424614   148  lsr x5, x5, x0
0xffff91424618   152  tbz w5, #0, #+0x8 (addr 0xffff91424620)
0xffff9142461c   156  tbnz w5, #1, #+0x3c (addr 0xffff91424658)
0xffff91424620   160  ldp x1, x0, [jssp], #16
0xffff91424624   164  ldr x16, pc+1228 (addr 0x0000ffff91424af0)    ;; external reference (store_buffer_top)
0xffff91424628   168  ldr x5, [x16]
0xffff9142462c   172  str x13, [x5], #8
0xffff91424630   176  str x5, [x16]
0xffff91424634   180  tst x5, #0x1ffff
0xffff91424638   184  b.eq #+0x8 (addr 0xffff91424640)
0xffff9142463c   188  ret
0xffff91424640   192  sub csp, jssp, #0x8 (8)
0xffff91424644   196  str lr, [jssp, #-8]!
0xffff91424648   200  ldr x17, pc+1200 (addr 0x0000ffff91424af8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142464c   204  blr x17
0xffff91424650   208  ldr lr, [jssp], #8
0xffff91424654   212  ret
0xffff91424658   216  ldr x5, [x13]
0xffff9142465c   220  sub csp, jssp, #0x10 (16)
0xffff91424660   224  stp x7, x13, [jssp, #-16]!
0xffff91424664   228  ubfx x16, x5, #8, #12
0xffff91424668   232  and x0, x5, #0xfffffffffff00000
0xffff9142466c   236  add x0, x0, x16, lsl #2
0xffff91424670   240  ubfx x7, x5, #3, #5
0xffff91424674   244  ldr x13, [x0, #360]
0xffff91424678   248  lsr x13, x13, x7
0xffff9142467c   252  tbz w13, #0, #+0x40 (addr 0xffff914246bc)
0xffff91424680   256  ldp x7, x13, [jssp], #16
0xffff91424684   260  ldp x1, x0, [jssp], #16
0xffff91424688   264  ldr x16, pc+1144 (addr 0x0000ffff91424b00)    ;; external reference (store_buffer_top)
0xffff9142468c   268  ldr x5, [x16]
0xffff91424690   272  str x13, [x5], #8
0xffff91424694   276  str x5, [x16]
0xffff91424698   280  tst x5, #0x1ffff
0xffff9142469c   284  b.eq #+0x8 (addr 0xffff914246a4)
0xffff914246a0   288  ret
0xffff914246a4   292  sub csp, jssp, #0x8 (8)
0xffff914246a8   296  str lr, [jssp, #-8]!
0xffff914246ac   300  ldr x17, pc+1116 (addr 0x0000ffff91424b08)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff914246b0   304  blr x17
0xffff914246b4   308  ldr lr, [jssp], #8
0xffff914246b8   312  ret
0xffff914246bc   316  ldp x7, x13, [jssp], #16
0xffff914246c0   320  sub csp, jssp, #0x78 (120)
0xffff914246c4   324  stp x14, x15, [jssp, #-32]!
0xffff914246c8   328  stp x18, lr, [jssp, #16]
0xffff914246cc   332  stp x10, x11, [jssp, #-32]!
0xffff914246d0   336  stp x12, x13, [jssp, #16]
0xffff914246d4   340  stp x6, x7, [jssp, #-32]!
0xffff914246d8   344  stp x8, x9, [jssp, #16]
0xffff914246dc   348  stp x2, x3, [jssp, #-24]!
0xffff914246e0   352  str x4, [jssp, #16]
0xffff914246e4   356  mov x0, x7
0xffff914246e8   360  mov x1, x13
0xffff914246ec   364  ldr x2, pc+1060 (addr 0x0000ffff91424b10)    ;; external reference (isolate)
0xffff914246f0   368  ldr x16, pc+1064 (addr 0x0000ffff91424b18)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914246f4   372  and csp, jssp, #0xfffffffffffffff0
0xffff914246f8   376  blr x16
0xffff914246fc   380  ldp x4, x6, [jssp, #16]
0xffff91424700   384  ldp x2, x3, [jssp], #32
0xffff91424704   388  ldp x9, x10, [jssp, #16]
0xffff91424708   392  ldp x7, x8, [jssp], #32
0xffff9142470c   396  ldp x13, x14, [jssp, #16]
0xffff91424710   400  ldp x11, x12, [jssp], #32
0xffff91424714   404  ldr lr, [jssp, #16]
0xffff91424718   408  ldp x15, x18, [jssp], #24
0xffff9142471c   412  ldp x1, x0, [jssp], #16
0xffff91424720   416  ldr x16, pc+1024 (addr 0x0000ffff91424b20)    ;; external reference (store_buffer_top)
0xffff91424724   420  ldr x5, [x16]
0xffff91424728   424  str x13, [x5], #8
0xffff9142472c   428  str x5, [x16]
0xffff91424730   432  tst x5, #0x1ffff
0xffff91424734   436  b.eq #+0x8 (addr 0xffff9142473c)
0xffff91424738   440  ret
0xffff9142473c   444  sub csp, jssp, #0x8 (8)
0xffff91424740   448  str lr, [jssp, #-8]!
0xffff91424744   452  ldr x17, pc+996 (addr 0x0000ffff91424b28)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91424748   456  blr x17
0xffff9142474c   460  ldr lr, [jssp], #8
0xffff91424750   464  ret
0xffff91424754   468  and x5, x7, #0xfffffffffff00000
0xffff91424758   472  ldr x0, [x5, #104]
0xffff9142475c   476  subs x0, x0, #0x1 (1)
0xffff91424760   480  str x0, [x5, #104]
0xffff91424764   484  b.mi #+0x64 (addr 0xffff914247c8)
0xffff91424768   488  ubfx x16, x7, #8, #12
0xffff9142476c   492  and x5, x7, #0xfffffffffff00000
0xffff91424770   496  add x5, x5, x16, lsl #2
0xffff91424774   500  ubfx x0, x7, #3, #5
0xffff91424778   504  ldr x5, [x5, #360]
0xffff9142477c   508  lsr x5, x5, x0
0xffff91424780   512  tbz w5, #0, #+0x8 (addr 0xffff91424788)
0xffff91424784   516  tbnz w5, #1, #+0xc (addr 0xffff91424790)
0xffff91424788   520  ldp x1, x0, [jssp], #16
0xffff9142478c   524  ret
0xffff91424790   528  ldr x5, [x13]
0xffff91424794   532  sub csp, jssp, #0x10 (16)
0xffff91424798   536  stp x7, x13, [jssp, #-16]!
0xffff9142479c   540  ubfx x16, x5, #8, #12
0xffff914247a0   544  and x0, x5, #0xfffffffffff00000
0xffff914247a4   548  add x0, x0, x16, lsl #2
0xffff914247a8   552  ubfx x7, x5, #3, #5
0xffff914247ac   556  ldr x13, [x0, #360]
0xffff914247b0   560  lsr x13, x13, x7
0xffff914247b4   564  tbz w13, #0, #+0x10 (addr 0xffff914247c4)
0xffff914247b8   568  ldp x7, x13, [jssp], #16
0xffff914247bc   572  ldp x1, x0, [jssp], #16
0xffff914247c0   576  ret
0xffff914247c4   580  ldp x7, x13, [jssp], #16
0xffff914247c8   584  sub csp, jssp, #0x78 (120)
0xffff914247cc   588  stp x14, x15, [jssp, #-32]!
0xffff914247d0   592  stp x18, lr, [jssp, #16]
0xffff914247d4   596  stp x10, x11, [jssp, #-32]!
0xffff914247d8   600  stp x12, x13, [jssp, #16]
0xffff914247dc   604  stp x6, x7, [jssp, #-32]!
0xffff914247e0   608  stp x8, x9, [jssp, #16]
0xffff914247e4   612  stp x2, x3, [jssp, #-24]!
0xffff914247e8   616  str x4, [jssp, #16]
0xffff914247ec   620  mov x0, x7
0xffff914247f0   624  mov x1, x13
0xffff914247f4   628  ldr x2, pc+828 (addr 0x0000ffff91424b30)    ;; external reference (isolate)
0xffff914247f8   632  ldr x16, pc+832 (addr 0x0000ffff91424b38)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914247fc   636  and csp, jssp, #0xfffffffffffffff0
0xffff91424800   640  blr x16
0xffff91424804   644  ldp x4, x6, [jssp, #16]
0xffff91424808   648  ldp x2, x3, [jssp], #32
0xffff9142480c   652  ldp x9, x10, [jssp, #16]
0xffff91424810   656  ldp x7, x8, [jssp], #32
0xffff91424814   660  ldp x13, x14, [jssp, #16]
0xffff91424818   664  ldp x11, x12, [jssp], #32
0xffff9142481c   668  ldr lr, [jssp, #16]
0xffff91424820   672  ldp x15, x18, [jssp], #24
0xffff91424824   676  ldp x1, x0, [jssp], #16
0xffff91424828   680  ret
0xffff9142482c   684  sub csp, jssp, #0x10 (16)
0xffff91424830   688  stp x1, x0, [jssp, #-16]!
0xffff91424834   692  ldr x5, [x13]
0xffff91424838   696  and x16, x5, #0xfffffffffff00000
0xffff9142483c   700  ldr x16, [x16, #8]
0xffff91424840   704  tst x16, #0x18
0xffff91424844   708  b.eq #+0x19c (addr 0xffff914249e0)
0xffff91424848   712  and x16, x7, #0xfffffffffff00000
0xffff9142484c   716  ldr x16, [x16, #8]
0xffff91424850   720  tst x16, #0x18
0xffff91424854   724  b.ne #+0x18c (addr 0xffff914249e0)
0xffff91424858   728  and x5, x7, #0xfffffffffff00000
0xffff9142485c   732  ldr x0, [x5, #104]
0xffff91424860   736  subs x0, x0, #0x1 (1)
0xffff91424864   740  str x0, [x5, #104]
0xffff91424868   744  b.mi #+0xe4 (addr 0xffff9142494c)
0xffff9142486c   748  ubfx x16, x7, #8, #12
0xffff91424870   752  and x5, x7, #0xfffffffffff00000
0xffff91424874   756  add x5, x5, x16, lsl #2
0xffff91424878   760  ubfx x0, x7, #3, #5
0xffff9142487c   764  ldr x5, [x5, #360]
0xffff91424880   768  lsr x5, x5, x0
0xffff91424884   772  tbz w5, #0, #+0x8 (addr 0xffff9142488c)
0xffff91424888   776  tbnz w5, #1, #+0x3c (addr 0xffff914248c4)
0xffff9142488c   780  ldp x1, x0, [jssp], #16
0xffff91424890   784  ldr x16, pc+688 (addr 0x0000ffff91424b40)    ;; external reference (store_buffer_top)
0xffff91424894   788  ldr x5, [x16]
0xffff91424898   792  str x13, [x5], #8
0xffff9142489c   796  str x5, [x16]
0xffff914248a0   800  tst x5, #0x1ffff
0xffff914248a4   804  b.eq #+0x8 (addr 0xffff914248ac)
0xffff914248a8   808  ret
0xffff914248ac   812  sub csp, jssp, #0x8 (8)
0xffff914248b0   816  str lr, [jssp, #-8]!
0xffff914248b4   820  ldr x17, pc+660 (addr 0x0000ffff91424b48)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff914248b8   824  blr x17
0xffff914248bc   828  ldr lr, [jssp], #8
0xffff914248c0   832  ret
0xffff914248c4   836  ldr x5, [x13]
0xffff914248c8   840  and x0, x5, #0xfffffffffff00000
0xffff914248cc   844  ldr x0, [x0, #8]
0xffff914248d0   848  tbz w0, #6, #+0x18 (addr 0xffff914248e8)
0xffff914248d4   852  and x0, x7, #0xfffffffffff00000
0xffff914248d8   856  ldr x0, [x0, #8]
0xffff914248dc   860  movz x16, #0x58
0xffff914248e0   864  tst x0, x16
0xffff914248e4   868  b.eq #+0x68 (addr 0xffff9142494c)
0xffff914248e8   872  sub csp, jssp, #0x10 (16)
0xffff914248ec   876  stp x7, x13, [jssp, #-16]!
0xffff914248f0   880  ubfx x16, x5, #8, #12
0xffff914248f4   884  and x0, x5, #0xfffffffffff00000
0xffff914248f8   888  add x0, x0, x16, lsl #2
0xffff914248fc   892  ubfx x7, x5, #3, #5
0xffff91424900   896  ldr x13, [x0, #360]
0xffff91424904   900  lsr x13, x13, x7
0xffff91424908   904  tbz w13, #0, #+0x40 (addr 0xffff91424948)
0xffff9142490c   908  ldp x7, x13, [jssp], #16
0xffff91424910   912  ldp x1, x0, [jssp], #16
0xffff91424914   916  ldr x16, pc+572 (addr 0x0000ffff91424b50)    ;; external reference (store_buffer_top)
0xffff91424918   920  ldr x5, [x16]
0xffff9142491c   924  str x13, [x5], #8
0xffff91424920   928  str x5, [x16]
0xffff91424924   932  tst x5, #0x1ffff
0xffff91424928   936  b.eq #+0x8 (addr 0xffff91424930)
0xffff9142492c   940  ret
0xffff91424930   944  sub csp, jssp, #0x8 (8)
0xffff91424934   948  str lr, [jssp, #-8]!
0xffff91424938   952  ldr x17, pc+544 (addr 0x0000ffff91424b58)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142493c   956  blr x17
0xffff91424940   960  ldr lr, [jssp], #8
0xffff91424944   964  ret
0xffff91424948   968  ldp x7, x13, [jssp], #16
0xffff9142494c   972  sub csp, jssp, #0x78 (120)
0xffff91424950   976  stp x14, x15, [jssp, #-32]!
0xffff91424954   980  stp x18, lr, [jssp, #16]
0xffff91424958   984  stp x10, x11, [jssp, #-32]!
0xffff9142495c   988  stp x12, x13, [jssp, #16]
0xffff91424960   992  stp x6, x7, [jssp, #-32]!
0xffff91424964   996  stp x8, x9, [jssp, #16]
0xffff91424968  1000  stp x2, x3, [jssp, #-24]!
0xffff9142496c  1004  str x4, [jssp, #16]
0xffff91424970  1008  mov x0, x7
0xffff91424974  1012  mov x1, x13
0xffff91424978  1016  ldr x2, pc+488 (addr 0x0000ffff91424b60)    ;; external reference (isolate)
0xffff9142497c  1020  ldr x16, pc+492 (addr 0x0000ffff91424b68)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91424980  1024  and csp, jssp, #0xfffffffffffffff0
0xffff91424984  1028  blr x16
0xffff91424988  1032  ldp x4, x6, [jssp, #16]
0xffff9142498c  1036  ldp x2, x3, [jssp], #32
0xffff91424990  1040  ldp x9, x10, [jssp, #16]
0xffff91424994  1044  ldp x7, x8, [jssp], #32
0xffff91424998  1048  ldp x13, x14, [jssp, #16]
0xffff9142499c  1052  ldp x11, x12, [jssp], #32
0xffff914249a0  1056  ldr lr, [jssp, #16]
0xffff914249a4  1060  ldp x15, x18, [jssp], #24
0xffff914249a8  1064  ldp x1, x0, [jssp], #16
0xffff914249ac  1068  ldr x16, pc+452 (addr 0x0000ffff91424b70)    ;; external reference (store_buffer_top)
0xffff914249b0  1072  ldr x5, [x16]
0xffff914249b4  1076  str x13, [x5], #8
0xffff914249b8  1080  str x5, [x16]
0xffff914249bc  1084  tst x5, #0x1ffff
0xffff914249c0  1088  b.eq #+0x8 (addr 0xffff914249c8)
0xffff914249c4  1092  ret
0xffff914249c8  1096  sub csp, jssp, #0x8 (8)
0xffff914249cc  1100  str lr, [jssp, #-8]!
0xffff914249d0  1104  ldr x17, pc+424 (addr 0x0000ffff91424b78)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff914249d4  1108  blr x17
0xffff914249d8  1112  ldr lr, [jssp], #8
0xffff914249dc  1116  ret
0xffff914249e0  1120  and x5, x7, #0xfffffffffff00000
0xffff914249e4  1124  ldr x0, [x5, #104]
0xffff914249e8  1128  subs x0, x0, #0x1 (1)
0xffff914249ec  1132  str x0, [x5, #104]
0xffff914249f0  1136  b.mi #+0x84 (addr 0xffff91424a74)
0xffff914249f4  1140  ubfx x16, x7, #8, #12
0xffff914249f8  1144  and x5, x7, #0xfffffffffff00000
0xffff914249fc  1148  add x5, x5, x16, lsl #2
0xffff91424a00  1152  ubfx x0, x7, #3, #5
0xffff91424a04  1156  ldr x5, [x5, #360]
0xffff91424a08  1160  lsr x5, x5, x0
0xffff91424a0c  1164  tbz w5, #0, #+0x8 (addr 0xffff91424a14)
0xffff91424a10  1168  tbnz w5, #1, #+0xc (addr 0xffff91424a1c)
0xffff91424a14  1172  ldp x1, x0, [jssp], #16
0xffff91424a18  1176  ret
0xffff91424a1c  1180  ldr x5, [x13]
0xffff91424a20  1184  and x0, x5, #0xfffffffffff00000
0xffff91424a24  1188  ldr x0, [x0, #8]
0xffff91424a28  1192  tbz w0, #6, #+0x18 (addr 0xffff91424a40)
0xffff91424a2c  1196  and x0, x7, #0xfffffffffff00000
0xffff91424a30  1200  ldr x0, [x0, #8]
0xffff91424a34  1204  movz x16, #0x58
0xffff91424a38  1208  tst x0, x16
0xffff91424a3c  1212  b.eq #+0x38 (addr 0xffff91424a74)
0xffff91424a40  1216  sub csp, jssp, #0x10 (16)
0xffff91424a44  1220  stp x7, x13, [jssp, #-16]!
0xffff91424a48  1224  ubfx x16, x5, #8, #12
0xffff91424a4c  1228  and x0, x5, #0xfffffffffff00000
0xffff91424a50  1232  add x0, x0, x16, lsl #2
0xffff91424a54  1236  ubfx x7, x5, #3, #5
0xffff91424a58  1240  ldr x13, [x0, #360]
0xffff91424a5c  1244  lsr x13, x13, x7
0xffff91424a60  1248  tbz w13, #0, #+0x10 (addr 0xffff91424a70)
0xffff91424a64  1252  ldp x7, x13, [jssp], #16
0xffff91424a68  1256  ldp x1, x0, [jssp], #16
0xffff91424a6c  1260  ret
0xffff91424a70  1264  ldp x7, x13, [jssp], #16
0xffff91424a74  1268  sub csp, jssp, #0x78 (120)
0xffff91424a78  1272  stp x14, x15, [jssp, #-32]!
0xffff91424a7c  1276  stp x18, lr, [jssp, #16]
0xffff91424a80  1280  stp x10, x11, [jssp, #-32]!
0xffff91424a84  1284  stp x12, x13, [jssp, #16]
0xffff91424a88  1288  stp x6, x7, [jssp, #-32]!
0xffff91424a8c  1292  stp x8, x9, [jssp, #16]
0xffff91424a90  1296  stp x2, x3, [jssp, #-24]!
0xffff91424a94  1300  str x4, [jssp, #16]
0xffff91424a98  1304  mov x0, x7
0xffff91424a9c  1308  mov x1, x13
0xffff91424aa0  1312  ldr x2, pc+224 (addr 0x0000ffff91424b80)    ;; external reference (isolate)
0xffff91424aa4  1316  ldr x16, pc+228 (addr 0x0000ffff91424b88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91424aa8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff91424aac  1324  blr x16
0xffff91424ab0  1328  ldp x4, x6, [jssp, #16]
0xffff91424ab4  1332  ldp x2, x3, [jssp], #32
0xffff91424ab8  1336  ldp x9, x10, [jssp, #16]
0xffff91424abc  1340  ldp x7, x8, [jssp], #32
0xffff91424ac0  1344  ldp x13, x14, [jssp, #16]
0xffff91424ac4  1348  ldp x11, x12, [jssp], #32
0xffff91424ac8  1352  ldr lr, [jssp, #16]
0xffff91424acc  1356  ldp x15, x18, [jssp], #24
0xffff91424ad0  1360  ldp x1, x0, [jssp], #16
0xffff91424ad4  1364  ret
0xffff91424ad8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff91424adc  1372  d63f03e0       constant
0xffff91424ae0  1376  4117f8c0       constant
0xffff91424ae4  1380  00000000       constant
0xffff91424ae8  1384  914064c0       constant
0xffff91424aec  1388  0000ffff       constant
0xffff91424af0  1392  4117f8c0       constant
0xffff91424af4  1396  00000000       constant
0xffff91424af8  1400  914064c0       constant
0xffff91424afc  1404  0000ffff       constant
0xffff91424b00  1408  4117f8c0       constant
0xffff91424b04  1412  00000000       constant
0xffff91424b08  1416  914064c0       constant
0xffff91424b0c  1420  0000ffff       constant
0xffff91424b10  1424  4117e2d0       constant
0xffff91424b14  1428  00000000       constant
0xffff91424b18  1432  00c2d958       constant
0xffff91424b1c  1436  00000000       constant
0xffff91424b20  1440  4117f8c0       constant
0xffff91424b24  1444  00000000       constant
0xffff91424b28  1448  914064c0       constant
0xffff91424b2c  1452  0000ffff       constant
0xffff91424b30  1456  4117e2d0       constant
0xffff91424b34  1460  00000000       constant
0xffff91424b38  1464  00c2d958       constant
0xffff91424b3c  1468  00000000       constant
0xffff91424b40  1472  4117f8c0       constant
0xffff91424b44  1476  00000000       constant
0xffff91424b48  1480  914064c0       constant
0xffff91424b4c  1484  0000ffff       constant
0xffff91424b50  1488  4117f8c0       constant
0xffff91424b54  1492  00000000       constant
0xffff91424b58  1496  914064c0       constant
0xffff91424b5c  1500  0000ffff       constant
0xffff91424b60  1504  4117e2d0       constant
0xffff91424b64  1508  00000000       constant
0xffff91424b68  1512  00c2d958       constant
0xffff91424b6c  1516  00000000       constant
0xffff91424b70  1520  4117f8c0       constant
0xffff91424b74  1524  00000000       constant
0xffff91424b78  1528  914064c0       constant
0xffff91424b7c  1532  0000ffff       constant
0xffff91424b80  1536  4117e2d0       constant
0xffff91424b84  1540  00000000       constant
0xffff91424b88  1544  00c2d958       constant
0xffff91424b8c  1548  00000000       constant


RelocInfo (size = 59)
0xffff91424588  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914245ac  code target (STUB)  (0xffff914064c0)
0xffff91424624  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91424648  code target (STUB)  (0xffff914064c0)
0xffff91424688  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914246ac  code target (STUB)  (0xffff914064c0)
0xffff914246ec  external reference (isolate)  (0x4117e2d0)
0xffff914246f0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91424720  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91424744  code target (STUB)  (0xffff914064c0)
0xffff914247f4  external reference (isolate)  (0x4117e2d0)
0xffff914247f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91424890  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914248b4  code target (STUB)  (0xffff914064c0)
0xffff91424914  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91424938  code target (STUB)  (0xffff914064c0)
0xffff91424978  external reference (isolate)  (0x4117e2d0)
0xffff9142497c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff914249ac  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914249d0  code target (STUB)  (0xffff914064c0)
0xffff91424aa0  external reference (isolate)  (0x4117e2d0)
0xffff91424aa4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91424ad8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff91424c00     0  adr xzr, #+0x40 (addr 0xffff91424c40)
0xffff91424c04     4  adr xzr, #+0x2a8 (addr 0xffff91424eac)
0xffff91424c08     8  ldr x16, pc+1368 (addr 0x0000ffff91425160)    ;; external reference (store_buffer_top)
0xffff91424c0c    12  ldr x7, [x16]
0xffff91424c10    16  str x13, [x7], #8
0xffff91424c14    20  str x7, [x16]
0xffff91424c18    24  tst x7, #0x1ffff
0xffff91424c1c    28  b.eq #+0x8 (addr 0xffff91424c24)
0xffff91424c20    32  ret
0xffff91424c24    36  sub csp, jssp, #0x8 (8)
0xffff91424c28    40  str lr, [jssp, #-8]!
0xffff91424c2c    44  ldr x17, pc+1340 (addr 0x0000ffff91425168)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91424c30    48  blr x17
0xffff91424c34    52  ldr lr, [jssp], #8
0xffff91424c38    56  ret
0xffff91424c3c    60  ret
0xffff91424c40    64  sub csp, jssp, #0x10 (16)
0xffff91424c44    68  stp x2, x0, [jssp, #-16]!
0xffff91424c48    72  ldr x7, [x13]
0xffff91424c4c    76  and x16, x7, #0xfffffffffff00000
0xffff91424c50    80  ldr x16, [x16, #8]
0xffff91424c54    84  tst x16, #0x18
0xffff91424c58    88  b.eq #+0x17c (addr 0xffff91424dd4)
0xffff91424c5c    92  and x16, x1, #0xfffffffffff00000
0xffff91424c60    96  ldr x16, [x16, #8]
0xffff91424c64   100  tst x16, #0x18
0xffff91424c68   104  b.ne #+0x16c (addr 0xffff91424dd4)
0xffff91424c6c   108  and x7, x1, #0xfffffffffff00000
0xffff91424c70   112  ldr x0, [x7, #104]
0xffff91424c74   116  subs x0, x0, #0x1 (1)
0xffff91424c78   120  str x0, [x7, #104]
0xffff91424c7c   124  b.mi #+0xc4 (addr 0xffff91424d40)
0xffff91424c80   128  ubfx x16, x1, #8, #12
0xffff91424c84   132  and x7, x1, #0xfffffffffff00000
0xffff91424c88   136  add x7, x7, x16, lsl #2
0xffff91424c8c   140  ubfx x0, x1, #3, #5
0xffff91424c90   144  ldr x7, [x7, #360]
0xffff91424c94   148  lsr x7, x7, x0
0xffff91424c98   152  tbz w7, #0, #+0x8 (addr 0xffff91424ca0)
0xffff91424c9c   156  tbnz w7, #1, #+0x3c (addr 0xffff91424cd8)
0xffff91424ca0   160  ldp x2, x0, [jssp], #16
0xffff91424ca4   164  ldr x16, pc+1228 (addr 0x0000ffff91425170)    ;; external reference (store_buffer_top)
0xffff91424ca8   168  ldr x7, [x16]
0xffff91424cac   172  str x13, [x7], #8
0xffff91424cb0   176  str x7, [x16]
0xffff91424cb4   180  tst x7, #0x1ffff
0xffff91424cb8   184  b.eq #+0x8 (addr 0xffff91424cc0)
0xffff91424cbc   188  ret
0xffff91424cc0   192  sub csp, jssp, #0x8 (8)
0xffff91424cc4   196  str lr, [jssp, #-8]!
0xffff91424cc8   200  ldr x17, pc+1200 (addr 0x0000ffff91425178)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91424ccc   204  blr x17
0xffff91424cd0   208  ldr lr, [jssp], #8
0xffff91424cd4   212  ret
0xffff91424cd8   216  ldr x7, [x13]
0xffff91424cdc   220  sub csp, jssp, #0x10 (16)
0xffff91424ce0   224  stp x1, x13, [jssp, #-16]!
0xffff91424ce4   228  ubfx x16, x7, #8, #12
0xffff91424ce8   232  and x0, x7, #0xfffffffffff00000
0xffff91424cec   236  add x0, x0, x16, lsl #2
0xffff91424cf0   240  ubfx x1, x7, #3, #5
0xffff91424cf4   244  ldr x13, [x0, #360]
0xffff91424cf8   248  lsr x13, x13, x1
0xffff91424cfc   252  tbz w13, #0, #+0x40 (addr 0xffff91424d3c)
0xffff91424d00   256  ldp x1, x13, [jssp], #16
0xffff91424d04   260  ldp x2, x0, [jssp], #16
0xffff91424d08   264  ldr x16, pc+1144 (addr 0x0000ffff91425180)    ;; external reference (store_buffer_top)
0xffff91424d0c   268  ldr x7, [x16]
0xffff91424d10   272  str x13, [x7], #8
0xffff91424d14   276  str x7, [x16]
0xffff91424d18   280  tst x7, #0x1ffff
0xffff91424d1c   284  b.eq #+0x8 (addr 0xffff91424d24)
0xffff91424d20   288  ret
0xffff91424d24   292  sub csp, jssp, #0x8 (8)
0xffff91424d28   296  str lr, [jssp, #-8]!
0xffff91424d2c   300  ldr x17, pc+1116 (addr 0x0000ffff91425188)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91424d30   304  blr x17
0xffff91424d34   308  ldr lr, [jssp], #8
0xffff91424d38   312  ret
0xffff91424d3c   316  ldp x1, x13, [jssp], #16
0xffff91424d40   320  sub csp, jssp, #0x78 (120)
0xffff91424d44   324  stp x14, x15, [jssp, #-32]!
0xffff91424d48   328  stp x18, lr, [jssp, #16]
0xffff91424d4c   332  stp x10, x11, [jssp, #-32]!
0xffff91424d50   336  stp x12, x13, [jssp, #16]
0xffff91424d54   340  stp x5, x6, [jssp, #-32]!
0xffff91424d58   344  stp x8, x9, [jssp, #16]
0xffff91424d5c   348  stp x1, x3, [jssp, #-24]!
0xffff91424d60   352  str x4, [jssp, #16]
0xffff91424d64   356  mov x0, x1
0xffff91424d68   360  mov x1, x13
0xffff91424d6c   364  ldr x2, pc+1060 (addr 0x0000ffff91425190)    ;; external reference (isolate)
0xffff91424d70   368  ldr x16, pc+1064 (addr 0x0000ffff91425198)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91424d74   372  and csp, jssp, #0xfffffffffffffff0
0xffff91424d78   376  blr x16
0xffff91424d7c   380  ldp x4, x5, [jssp, #16]
0xffff91424d80   384  ldp x1, x3, [jssp], #32
0xffff91424d84   388  ldp x9, x10, [jssp, #16]
0xffff91424d88   392  ldp x6, x8, [jssp], #32
0xffff91424d8c   396  ldp x13, x14, [jssp, #16]
0xffff91424d90   400  ldp x11, x12, [jssp], #32
0xffff91424d94   404  ldr lr, [jssp, #16]
0xffff91424d98   408  ldp x15, x18, [jssp], #24
0xffff91424d9c   412  ldp x2, x0, [jssp], #16
0xffff91424da0   416  ldr x16, pc+1024 (addr 0x0000ffff914251a0)    ;; external reference (store_buffer_top)
0xffff91424da4   420  ldr x7, [x16]
0xffff91424da8   424  str x13, [x7], #8
0xffff91424dac   428  str x7, [x16]
0xffff91424db0   432  tst x7, #0x1ffff
0xffff91424db4   436  b.eq #+0x8 (addr 0xffff91424dbc)
0xffff91424db8   440  ret
0xffff91424dbc   444  sub csp, jssp, #0x8 (8)
0xffff91424dc0   448  str lr, [jssp, #-8]!
0xffff91424dc4   452  ldr x17, pc+996 (addr 0x0000ffff914251a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91424dc8   456  blr x17
0xffff91424dcc   460  ldr lr, [jssp], #8
0xffff91424dd0   464  ret
0xffff91424dd4   468  and x7, x1, #0xfffffffffff00000
0xffff91424dd8   472  ldr x0, [x7, #104]
0xffff91424ddc   476  subs x0, x0, #0x1 (1)
0xffff91424de0   480  str x0, [x7, #104]
0xffff91424de4   484  b.mi #+0x64 (addr 0xffff91424e48)
0xffff91424de8   488  ubfx x16, x1, #8, #12
0xffff91424dec   492  and x7, x1, #0xfffffffffff00000
0xffff91424df0   496  add x7, x7, x16, lsl #2
0xffff91424df4   500  ubfx x0, x1, #3, #5
0xffff91424df8   504  ldr x7, [x7, #360]
0xffff91424dfc   508  lsr x7, x7, x0
0xffff91424e00   512  tbz w7, #0, #+0x8 (addr 0xffff91424e08)
0xffff91424e04   516  tbnz w7, #1, #+0xc (addr 0xffff91424e10)
0xffff91424e08   520  ldp x2, x0, [jssp], #16
0xffff91424e0c   524  ret
0xffff91424e10   528  ldr x7, [x13]
0xffff91424e14   532  sub csp, jssp, #0x10 (16)
0xffff91424e18   536  stp x1, x13, [jssp, #-16]!
0xffff91424e1c   540  ubfx x16, x7, #8, #12
0xffff91424e20   544  and x0, x7, #0xfffffffffff00000
0xffff91424e24   548  add x0, x0, x16, lsl #2
0xffff91424e28   552  ubfx x1, x7, #3, #5
0xffff91424e2c   556  ldr x13, [x0, #360]
0xffff91424e30   560  lsr x13, x13, x1
0xffff91424e34   564  tbz w13, #0, #+0x10 (addr 0xffff91424e44)
0xffff91424e38   568  ldp x1, x13, [jssp], #16
0xffff91424e3c   572  ldp x2, x0, [jssp], #16
0xffff91424e40   576  ret
0xffff91424e44   580  ldp x1, x13, [jssp], #16
0xffff91424e48   584  sub csp, jssp, #0x78 (120)
0xffff91424e4c   588  stp x14, x15, [jssp, #-32]!
0xffff91424e50   592  stp x18, lr, [jssp, #16]
0xffff91424e54   596  stp x10, x11, [jssp, #-32]!
0xffff91424e58   600  stp x12, x13, [jssp, #16]
0xffff91424e5c   604  stp x5, x6, [jssp, #-32]!
0xffff91424e60   608  stp x8, x9, [jssp, #16]
0xffff91424e64   612  stp x1, x3, [jssp, #-24]!
0xffff91424e68   616  str x4, [jssp, #16]
0xffff91424e6c   620  mov x0, x1
0xffff91424e70   624  mov x1, x13
0xffff91424e74   628  ldr x2, pc+828 (addr 0x0000ffff914251b0)    ;; external reference (isolate)
0xffff91424e78   632  ldr x16, pc+832 (addr 0x0000ffff914251b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91424e7c   636  and csp, jssp, #0xfffffffffffffff0
0xffff91424e80   640  blr x16
0xffff91424e84   644  ldp x4, x5, [jssp, #16]
0xffff91424e88   648  ldp x1, x3, [jssp], #32
0xffff91424e8c   652  ldp x9, x10, [jssp, #16]
0xffff91424e90   656  ldp x6, x8, [jssp], #32
0xffff91424e94   660  ldp x13, x14, [jssp, #16]
0xffff91424e98   664  ldp x11, x12, [jssp], #32
0xffff91424e9c   668  ldr lr, [jssp, #16]
0xffff91424ea0   672  ldp x15, x18, [jssp], #24
0xffff91424ea4   676  ldp x2, x0, [jssp], #16
0xffff91424ea8   680  ret
0xffff91424eac   684  sub csp, jssp, #0x10 (16)
0xffff91424eb0   688  stp x2, x0, [jssp, #-16]!
0xffff91424eb4   692  ldr x7, [x13]
0xffff91424eb8   696  and x16, x7, #0xfffffffffff00000
0xffff91424ebc   700  ldr x16, [x16, #8]
0xffff91424ec0   704  tst x16, #0x18
0xffff91424ec4   708  b.eq #+0x19c (addr 0xffff91425060)
0xffff91424ec8   712  and x16, x1, #0xfffffffffff00000
0xffff91424ecc   716  ldr x16, [x16, #8]
0xffff91424ed0   720  tst x16, #0x18
0xffff91424ed4   724  b.ne #+0x18c (addr 0xffff91425060)
0xffff91424ed8   728  and x7, x1, #0xfffffffffff00000
0xffff91424edc   732  ldr x0, [x7, #104]
0xffff91424ee0   736  subs x0, x0, #0x1 (1)
0xffff91424ee4   740  str x0, [x7, #104]
0xffff91424ee8   744  b.mi #+0xe4 (addr 0xffff91424fcc)
0xffff91424eec   748  ubfx x16, x1, #8, #12
0xffff91424ef0   752  and x7, x1, #0xfffffffffff00000
0xffff91424ef4   756  add x7, x7, x16, lsl #2
0xffff91424ef8   760  ubfx x0, x1, #3, #5
0xffff91424efc   764  ldr x7, [x7, #360]
0xffff91424f00   768  lsr x7, x7, x0
0xffff91424f04   772  tbz w7, #0, #+0x8 (addr 0xffff91424f0c)
0xffff91424f08   776  tbnz w7, #1, #+0x3c (addr 0xffff91424f44)
0xffff91424f0c   780  ldp x2, x0, [jssp], #16
0xffff91424f10   784  ldr x16, pc+688 (addr 0x0000ffff914251c0)    ;; external reference (store_buffer_top)
0xffff91424f14   788  ldr x7, [x16]
0xffff91424f18   792  str x13, [x7], #8
0xffff91424f1c   796  str x7, [x16]
0xffff91424f20   800  tst x7, #0x1ffff
0xffff91424f24   804  b.eq #+0x8 (addr 0xffff91424f2c)
0xffff91424f28   808  ret
0xffff91424f2c   812  sub csp, jssp, #0x8 (8)
0xffff91424f30   816  str lr, [jssp, #-8]!
0xffff91424f34   820  ldr x17, pc+660 (addr 0x0000ffff914251c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91424f38   824  blr x17
0xffff91424f3c   828  ldr lr, [jssp], #8
0xffff91424f40   832  ret
0xffff91424f44   836  ldr x7, [x13]
0xffff91424f48   840  and x0, x7, #0xfffffffffff00000
0xffff91424f4c   844  ldr x0, [x0, #8]
0xffff91424f50   848  tbz w0, #6, #+0x18 (addr 0xffff91424f68)
0xffff91424f54   852  and x0, x1, #0xfffffffffff00000
0xffff91424f58   856  ldr x0, [x0, #8]
0xffff91424f5c   860  movz x16, #0x58
0xffff91424f60   864  tst x0, x16
0xffff91424f64   868  b.eq #+0x68 (addr 0xffff91424fcc)
0xffff91424f68   872  sub csp, jssp, #0x10 (16)
0xffff91424f6c   876  stp x1, x13, [jssp, #-16]!
0xffff91424f70   880  ubfx x16, x7, #8, #12
0xffff91424f74   884  and x0, x7, #0xfffffffffff00000
0xffff91424f78   888  add x0, x0, x16, lsl #2
0xffff91424f7c   892  ubfx x1, x7, #3, #5
0xffff91424f80   896  ldr x13, [x0, #360]
0xffff91424f84   900  lsr x13, x13, x1
0xffff91424f88   904  tbz w13, #0, #+0x40 (addr 0xffff91424fc8)
0xffff91424f8c   908  ldp x1, x13, [jssp], #16
0xffff91424f90   912  ldp x2, x0, [jssp], #16
0xffff91424f94   916  ldr x16, pc+572 (addr 0x0000ffff914251d0)    ;; external reference (store_buffer_top)
0xffff91424f98   920  ldr x7, [x16]
0xffff91424f9c   924  str x13, [x7], #8
0xffff91424fa0   928  str x7, [x16]
0xffff91424fa4   932  tst x7, #0x1ffff
0xffff91424fa8   936  b.eq #+0x8 (addr 0xffff91424fb0)
0xffff91424fac   940  ret
0xffff91424fb0   944  sub csp, jssp, #0x8 (8)
0xffff91424fb4   948  str lr, [jssp, #-8]!
0xffff91424fb8   952  ldr x17, pc+544 (addr 0x0000ffff914251d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91424fbc   956  blr x17
0xffff91424fc0   960  ldr lr, [jssp], #8
0xffff91424fc4   964  ret
0xffff91424fc8   968  ldp x1, x13, [jssp], #16
0xffff91424fcc   972  sub csp, jssp, #0x78 (120)
0xffff91424fd0   976  stp x14, x15, [jssp, #-32]!
0xffff91424fd4   980  stp x18, lr, [jssp, #16]
0xffff91424fd8   984  stp x10, x11, [jssp, #-32]!
0xffff91424fdc   988  stp x12, x13, [jssp, #16]
0xffff91424fe0   992  stp x5, x6, [jssp, #-32]!
0xffff91424fe4   996  stp x8, x9, [jssp, #16]
0xffff91424fe8  1000  stp x1, x3, [jssp, #-24]!
0xffff91424fec  1004  str x4, [jssp, #16]
0xffff91424ff0  1008  mov x0, x1
0xffff91424ff4  1012  mov x1, x13
0xffff91424ff8  1016  ldr x2, pc+488 (addr 0x0000ffff914251e0)    ;; external reference (isolate)
0xffff91424ffc  1020  ldr x16, pc+492 (addr 0x0000ffff914251e8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91425000  1024  and csp, jssp, #0xfffffffffffffff0
0xffff91425004  1028  blr x16
0xffff91425008  1032  ldp x4, x5, [jssp, #16]
0xffff9142500c  1036  ldp x1, x3, [jssp], #32
0xffff91425010  1040  ldp x9, x10, [jssp, #16]
0xffff91425014  1044  ldp x6, x8, [jssp], #32
0xffff91425018  1048  ldp x13, x14, [jssp, #16]
0xffff9142501c  1052  ldp x11, x12, [jssp], #32
0xffff91425020  1056  ldr lr, [jssp, #16]
0xffff91425024  1060  ldp x15, x18, [jssp], #24
0xffff91425028  1064  ldp x2, x0, [jssp], #16
0xffff9142502c  1068  ldr x16, pc+452 (addr 0x0000ffff914251f0)    ;; external reference (store_buffer_top)
0xffff91425030  1072  ldr x7, [x16]
0xffff91425034  1076  str x13, [x7], #8
0xffff91425038  1080  str x7, [x16]
0xffff9142503c  1084  tst x7, #0x1ffff
0xffff91425040  1088  b.eq #+0x8 (addr 0xffff91425048)
0xffff91425044  1092  ret
0xffff91425048  1096  sub csp, jssp, #0x8 (8)
0xffff9142504c  1100  str lr, [jssp, #-8]!
0xffff91425050  1104  ldr x17, pc+424 (addr 0x0000ffff914251f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91425054  1108  blr x17
0xffff91425058  1112  ldr lr, [jssp], #8
0xffff9142505c  1116  ret
0xffff91425060  1120  and x7, x1, #0xfffffffffff00000
0xffff91425064  1124  ldr x0, [x7, #104]
0xffff91425068  1128  subs x0, x0, #0x1 (1)
0xffff9142506c  1132  str x0, [x7, #104]
0xffff91425070  1136  b.mi #+0x84 (addr 0xffff914250f4)
0xffff91425074  1140  ubfx x16, x1, #8, #12
0xffff91425078  1144  and x7, x1, #0xfffffffffff00000
0xffff9142507c  1148  add x7, x7, x16, lsl #2
0xffff91425080  1152  ubfx x0, x1, #3, #5
0xffff91425084  1156  ldr x7, [x7, #360]
0xffff91425088  1160  lsr x7, x7, x0
0xffff9142508c  1164  tbz w7, #0, #+0x8 (addr 0xffff91425094)
0xffff91425090  1168  tbnz w7, #1, #+0xc (addr 0xffff9142509c)
0xffff91425094  1172  ldp x2, x0, [jssp], #16
0xffff91425098  1176  ret
0xffff9142509c  1180  ldr x7, [x13]
0xffff914250a0  1184  and x0, x7, #0xfffffffffff00000
0xffff914250a4  1188  ldr x0, [x0, #8]
0xffff914250a8  1192  tbz w0, #6, #+0x18 (addr 0xffff914250c0)
0xffff914250ac  1196  and x0, x1, #0xfffffffffff00000
0xffff914250b0  1200  ldr x0, [x0, #8]
0xffff914250b4  1204  movz x16, #0x58
0xffff914250b8  1208  tst x0, x16
0xffff914250bc  1212  b.eq #+0x38 (addr 0xffff914250f4)
0xffff914250c0  1216  sub csp, jssp, #0x10 (16)
0xffff914250c4  1220  stp x1, x13, [jssp, #-16]!
0xffff914250c8  1224  ubfx x16, x7, #8, #12
0xffff914250cc  1228  and x0, x7, #0xfffffffffff00000
0xffff914250d0  1232  add x0, x0, x16, lsl #2
0xffff914250d4  1236  ubfx x1, x7, #3, #5
0xffff914250d8  1240  ldr x13, [x0, #360]
0xffff914250dc  1244  lsr x13, x13, x1
0xffff914250e0  1248  tbz w13, #0, #+0x10 (addr 0xffff914250f0)
0xffff914250e4  1252  ldp x1, x13, [jssp], #16
0xffff914250e8  1256  ldp x2, x0, [jssp], #16
0xffff914250ec  1260  ret
0xffff914250f0  1264  ldp x1, x13, [jssp], #16
0xffff914250f4  1268  sub csp, jssp, #0x78 (120)
0xffff914250f8  1272  stp x14, x15, [jssp, #-32]!
0xffff914250fc  1276  stp x18, lr, [jssp, #16]
0xffff91425100  1280  stp x10, x11, [jssp, #-32]!
0xffff91425104  1284  stp x12, x13, [jssp, #16]
0xffff91425108  1288  stp x5, x6, [jssp, #-32]!
0xffff9142510c  1292  stp x8, x9, [jssp, #16]
0xffff91425110  1296  stp x1, x3, [jssp, #-24]!
0xffff91425114  1300  str x4, [jssp, #16]
0xffff91425118  1304  mov x0, x1
0xffff9142511c  1308  mov x1, x13
0xffff91425120  1312  ldr x2, pc+224 (addr 0x0000ffff91425200)    ;; external reference (isolate)
0xffff91425124  1316  ldr x16, pc+228 (addr 0x0000ffff91425208)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91425128  1320  and csp, jssp, #0xfffffffffffffff0
0xffff9142512c  1324  blr x16
0xffff91425130  1328  ldp x4, x5, [jssp, #16]
0xffff91425134  1332  ldp x1, x3, [jssp], #32
0xffff91425138  1336  ldp x9, x10, [jssp, #16]
0xffff9142513c  1340  ldp x6, x8, [jssp], #32
0xffff91425140  1344  ldp x13, x14, [jssp, #16]
0xffff91425144  1348  ldp x11, x12, [jssp], #32
0xffff91425148  1352  ldr lr, [jssp, #16]
0xffff9142514c  1356  ldp x15, x18, [jssp], #24
0xffff91425150  1360  ldp x2, x0, [jssp], #16
0xffff91425154  1364  ret
0xffff91425158  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9142515c  1372  d63f03e0       constant
0xffff91425160  1376  4117f8c0       constant
0xffff91425164  1380  00000000       constant
0xffff91425168  1384  914064c0       constant
0xffff9142516c  1388  0000ffff       constant
0xffff91425170  1392  4117f8c0       constant
0xffff91425174  1396  00000000       constant
0xffff91425178  1400  914064c0       constant
0xffff9142517c  1404  0000ffff       constant
0xffff91425180  1408  4117f8c0       constant
0xffff91425184  1412  00000000       constant
0xffff91425188  1416  914064c0       constant
0xffff9142518c  1420  0000ffff       constant
0xffff91425190  1424  4117e2d0       constant
0xffff91425194  1428  00000000       constant
0xffff91425198  1432  00c2d958       constant
0xffff9142519c  1436  00000000       constant
0xffff914251a0  1440  4117f8c0       constant
0xffff914251a4  1444  00000000       constant
0xffff914251a8  1448  914064c0       constant
0xffff914251ac  1452  0000ffff       constant
0xffff914251b0  1456  4117e2d0       constant
0xffff914251b4  1460  00000000       constant
0xffff914251b8  1464  00c2d958       constant
0xffff914251bc  1468  00000000       constant
0xffff914251c0  1472  4117f8c0       constant
0xffff914251c4  1476  00000000       constant
0xffff914251c8  1480  914064c0       constant
0xffff914251cc  1484  0000ffff       constant
0xffff914251d0  1488  4117f8c0       constant
0xffff914251d4  1492  00000000       constant
0xffff914251d8  1496  914064c0       constant
0xffff914251dc  1500  0000ffff       constant
0xffff914251e0  1504  4117e2d0       constant
0xffff914251e4  1508  00000000       constant
0xffff914251e8  1512  00c2d958       constant
0xffff914251ec  1516  00000000       constant
0xffff914251f0  1520  4117f8c0       constant
0xffff914251f4  1524  00000000       constant
0xffff914251f8  1528  914064c0       constant
0xffff914251fc  1532  0000ffff       constant
0xffff91425200  1536  4117e2d0       constant
0xffff91425204  1540  00000000       constant
0xffff91425208  1544  00c2d958       constant
0xffff9142520c  1548  00000000       constant


RelocInfo (size = 59)
0xffff91424c08  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91424c2c  code target (STUB)  (0xffff914064c0)
0xffff91424ca4  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91424cc8  code target (STUB)  (0xffff914064c0)
0xffff91424d08  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91424d2c  code target (STUB)  (0xffff914064c0)
0xffff91424d6c  external reference (isolate)  (0x4117e2d0)
0xffff91424d70  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91424da0  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91424dc4  code target (STUB)  (0xffff914064c0)
0xffff91424e74  external reference (isolate)  (0x4117e2d0)
0xffff91424e78  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91424f10  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91424f34  code target (STUB)  (0xffff914064c0)
0xffff91424f94  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91424fb8  code target (STUB)  (0xffff914064c0)
0xffff91424ff8  external reference (isolate)  (0x4117e2d0)
0xffff91424ffc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142502c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91425050  code target (STUB)  (0xffff914064c0)
0xffff91425120  external reference (isolate)  (0x4117e2d0)
0xffff91425124  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91425158  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 536)
0xffff91425280     0  adr xzr, #+0xc (addr 0xffff9142528c)
0xffff91425284     4  adr xzr, #+0xe8 (addr 0xffff9142536c)
0xffff91425288     8  ret
0xffff9142528c    12  sub csp, jssp, #0x10 (16)
0xffff91425290    16  stp x2, x0, [jssp, #-16]!
0xffff91425294    20  and x3, x1, #0xfffffffffff00000
0xffff91425298    24  ldr x0, [x3, #104]
0xffff9142529c    28  subs x0, x0, #0x1 (1)
0xffff914252a0    32  str x0, [x3, #104]
0xffff914252a4    36  b.mi #+0x64 (addr 0xffff91425308)
0xffff914252a8    40  ubfx x16, x1, #8, #12
0xffff914252ac    44  and x3, x1, #0xfffffffffff00000
0xffff914252b0    48  add x3, x3, x16, lsl #2
0xffff914252b4    52  ubfx x0, x1, #3, #5
0xffff914252b8    56  ldr x3, [x3, #360]
0xffff914252bc    60  lsr x3, x3, x0
0xffff914252c0    64  tbz w3, #0, #+0x8 (addr 0xffff914252c8)
0xffff914252c4    68  tbnz w3, #1, #+0xc (addr 0xffff914252d0)
0xffff914252c8    72  ldp x2, x0, [jssp], #16
0xffff914252cc    76  ret
0xffff914252d0    80  ldr x3, [x13]
0xffff914252d4    84  sub csp, jssp, #0x10 (16)
0xffff914252d8    88  stp x1, x13, [jssp, #-16]!
0xffff914252dc    92  ubfx x16, x3, #8, #12
0xffff914252e0    96  and x0, x3, #0xfffffffffff00000
0xffff914252e4   100  add x0, x0, x16, lsl #2
0xffff914252e8   104  ubfx x1, x3, #3, #5
0xffff914252ec   108  ldr x13, [x0, #360]
0xffff914252f0   112  lsr x13, x13, x1
0xffff914252f4   116  tbz w13, #0, #+0x10 (addr 0xffff91425304)
0xffff914252f8   120  ldp x1, x13, [jssp], #16
0xffff914252fc   124  ldp x2, x0, [jssp], #16
0xffff91425300   128  ret
0xffff91425304   132  ldp x1, x13, [jssp], #16
0xffff91425308   136  sub csp, jssp, #0x78 (120)
0xffff9142530c   140  stp x14, x15, [jssp, #-32]!
0xffff91425310   144  stp x18, lr, [jssp, #16]
0xffff91425314   148  stp x10, x11, [jssp, #-32]!
0xffff91425318   152  stp x12, x13, [jssp, #16]
0xffff9142531c   156  stp x6, x7, [jssp, #-32]!
0xffff91425320   160  stp x8, x9, [jssp, #16]
0xffff91425324   164  stp x1, x4, [jssp, #-24]!
0xffff91425328   168  str x5, [jssp, #16]
0xffff9142532c   172  mov x0, x1
0xffff91425330   176  mov x1, x13
0xffff91425334   180  ldr x2, pc+324 (addr 0x0000ffff91425478)    ;; external reference (isolate)
0xffff91425338   184  ldr x16, pc+328 (addr 0x0000ffff91425480)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142533c   188  and csp, jssp, #0xfffffffffffffff0
0xffff91425340   192  blr x16
0xffff91425344   196  ldp x5, x6, [jssp, #16]
0xffff91425348   200  ldp x1, x4, [jssp], #32
0xffff9142534c   204  ldp x9, x10, [jssp, #16]
0xffff91425350   208  ldp x7, x8, [jssp], #32
0xffff91425354   212  ldp x13, x14, [jssp, #16]
0xffff91425358   216  ldp x11, x12, [jssp], #32
0xffff9142535c   220  ldr lr, [jssp, #16]
0xffff91425360   224  ldp x15, x18, [jssp], #24
0xffff91425364   228  ldp x2, x0, [jssp], #16
0xffff91425368   232  ret
0xffff9142536c   236  sub csp, jssp, #0x10 (16)
0xffff91425370   240  stp x2, x0, [jssp, #-16]!
0xffff91425374   244  and x3, x1, #0xfffffffffff00000
0xffff91425378   248  ldr x0, [x3, #104]
0xffff9142537c   252  subs x0, x0, #0x1 (1)
0xffff91425380   256  str x0, [x3, #104]
0xffff91425384   260  b.mi #+0x84 (addr 0xffff91425408)
0xffff91425388   264  ubfx x16, x1, #8, #12
0xffff9142538c   268  and x3, x1, #0xfffffffffff00000
0xffff91425390   272  add x3, x3, x16, lsl #2
0xffff91425394   276  ubfx x0, x1, #3, #5
0xffff91425398   280  ldr x3, [x3, #360]
0xffff9142539c   284  lsr x3, x3, x0
0xffff914253a0   288  tbz w3, #0, #+0x8 (addr 0xffff914253a8)
0xffff914253a4   292  tbnz w3, #1, #+0xc (addr 0xffff914253b0)
0xffff914253a8   296  ldp x2, x0, [jssp], #16
0xffff914253ac   300  ret
0xffff914253b0   304  ldr x3, [x13]
0xffff914253b4   308  and x0, x3, #0xfffffffffff00000
0xffff914253b8   312  ldr x0, [x0, #8]
0xffff914253bc   316  tbz w0, #6, #+0x18 (addr 0xffff914253d4)
0xffff914253c0   320  and x0, x1, #0xfffffffffff00000
0xffff914253c4   324  ldr x0, [x0, #8]
0xffff914253c8   328  movz x16, #0x58
0xffff914253cc   332  tst x0, x16
0xffff914253d0   336  b.eq #+0x38 (addr 0xffff91425408)
0xffff914253d4   340  sub csp, jssp, #0x10 (16)
0xffff914253d8   344  stp x1, x13, [jssp, #-16]!
0xffff914253dc   348  ubfx x16, x3, #8, #12
0xffff914253e0   352  and x0, x3, #0xfffffffffff00000
0xffff914253e4   356  add x0, x0, x16, lsl #2
0xffff914253e8   360  ubfx x1, x3, #3, #5
0xffff914253ec   364  ldr x13, [x0, #360]
0xffff914253f0   368  lsr x13, x13, x1
0xffff914253f4   372  tbz w13, #0, #+0x10 (addr 0xffff91425404)
0xffff914253f8   376  ldp x1, x13, [jssp], #16
0xffff914253fc   380  ldp x2, x0, [jssp], #16
0xffff91425400   384  ret
0xffff91425404   388  ldp x1, x13, [jssp], #16
0xffff91425408   392  sub csp, jssp, #0x78 (120)
0xffff9142540c   396  stp x14, x15, [jssp, #-32]!
0xffff91425410   400  stp x18, lr, [jssp, #16]
0xffff91425414   404  stp x10, x11, [jssp, #-32]!
0xffff91425418   408  stp x12, x13, [jssp, #16]
0xffff9142541c   412  stp x6, x7, [jssp, #-32]!
0xffff91425420   416  stp x8, x9, [jssp, #16]
0xffff91425424   420  stp x1, x4, [jssp, #-24]!
0xffff91425428   424  str x5, [jssp, #16]
0xffff9142542c   428  mov x0, x1
0xffff91425430   432  mov x1, x13
0xffff91425434   436  ldr x2, pc+84 (addr 0x0000ffff91425488)    ;; external reference (isolate)
0xffff91425438   440  ldr x16, pc+88 (addr 0x0000ffff91425490)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142543c   444  and csp, jssp, #0xfffffffffffffff0
0xffff91425440   448  blr x16
0xffff91425444   452  ldp x5, x6, [jssp, #16]
0xffff91425448   456  ldp x1, x4, [jssp], #32
0xffff9142544c   460  ldp x9, x10, [jssp, #16]
0xffff91425450   464  ldp x7, x8, [jssp], #32
0xffff91425454   468  ldp x13, x14, [jssp, #16]
0xffff91425458   472  ldp x11, x12, [jssp], #32
0xffff9142545c   476  ldr lr, [jssp, #16]
0xffff91425460   480  ldp x15, x18, [jssp], #24
0xffff91425464   484  ldp x2, x0, [jssp], #16
0xffff91425468   488  ret
0xffff9142546c   492  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff91425470   496  d63f03e0       constant
0xffff91425474   500  d503201f       constant
0xffff91425478   504  4117e2d0       constant
0xffff9142547c   508  00000000       constant
0xffff91425480   512  00c2d958       constant
0xffff91425484   516  00000000       constant
0xffff91425488   520  4117e2d0       constant
0xffff9142548c   524  00000000       constant
0xffff91425490   528  00c2d958       constant
0xffff91425494   532  00000000       constant


RelocInfo (size = 18)
0xffff91425334  external reference (isolate)  (0x4117e2d0)
0xffff91425338  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91425434  external reference (isolate)  (0x4117e2d0)
0xffff91425438  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142546c  constant pool (size 44)


kind = STUB
major_key = InstanceOfStub
name = InstanceOfStub
compiler = unknown
Instructions (size = 296)
0xffff914283a0     0  tbz w1, #0, #+0x28 (addr 0xffff914283c8)
0xffff914283a4     4  ldur x2, [x1, #-1]
0xffff914283a8     8  ldr x16, [x26, #376]
0xffff914283ac    12  cmp x0, x16
0xffff914283b0    16  b.ne #+0x34 (addr 0xffff914283e4)
0xffff914283b4    20  ldr x16, [x26, #384]
0xffff914283b8    24  cmp x2, x16
0xffff914283bc    28  b.ne #+0x28 (addr 0xffff914283e4)
0xffff914283c0    32  ldr x0, [x26, #392]
0xffff914283c4    36  ret
0xffff914283c8    40  tbz w0, #0, #+0xbc (addr 0xffff91428484)
0xffff914283cc    44  ldur x3, [x0, #-1]
0xffff914283d0    48  ldrb w5, [x3, #11]
0xffff914283d4    52  cmp x5, #0xc9 (201)
0xffff914283d8    56  b.ne #+0xac (addr 0xffff91428484)
0xffff914283dc    60  ldr x0, [x26, #72]
0xffff914283e0    64  ret
0xffff914283e4    68  tbz w0, #0, #+0xa0 (addr 0xffff91428484)
0xffff914283e8    72  ldur x3, [x0, #-1]
0xffff914283ec    76  ldrb w5, [x3, #11]
0xffff914283f0    80  cmp x5, #0xc9 (201)
0xffff914283f4    84  b.ne #+0x90 (addr 0xffff91428484)
0xffff914283f8    88  ldrb w5, [x3, #12]
0xffff914283fc    92  tbz w5, #7, #+0x88 (addr 0xffff91428484)
0xffff91428400    96  tbnz w5, #0, #+0x84 (addr 0xffff91428484)
0xffff91428404   100  ldur x4, [x0, #23]
0xffff91428408   104  ldur x5, [x4, #-1]
0xffff9142840c   108  ldrb w5, [x5, #11]
0xffff91428410   112  cmp x5, #0x84 (132)
0xffff91428414   116  b.ne #+0x8 (addr 0xffff9142841c)
0xffff91428418   120  ldur x4, [x4, #23]
0xffff9142841c   124  str x0, [x26, #376]
0xffff91428420   128  str x2, [x26, #384]
0xffff91428424   132  ldr x0, [x26, #64]
0xffff91428428   136  ldr x5, [x26, #56]
0xffff9142842c   140  ldrb w3, [x2, #12]
0xffff91428430   144  tbnz w3, #6, #+0x34 (addr 0xffff91428464)
0xffff91428434   148  ldrb w3, [x2, #11]
0xffff91428438   152  cmp x3, #0xb1 (177)
0xffff9142843c   156  b.eq #+0x28 (addr 0xffff91428464)
0xffff91428440   160  ldur x1, [x2, #23]
0xffff91428444   164  cmp x1, x4
0xffff91428448   168  b.eq #+0x14 (addr 0xffff9142845c)
0xffff9142844c   172  cmp x1, x5
0xffff91428450   176  ldur x2, [x1, #-1]
0xffff91428454   180  b.ne #-0x28 (addr 0xffff9142842c)
0xffff91428458   184  ldr x0, [x26, #72]
0xffff9142845c   188  str x0, [x26, #392]
0xffff91428460   192  ret
0xffff91428464   196  sub csp, jssp, #0x10 (16)
0xffff91428468   200  stp x4, x1, [jssp, #-16]!
0xffff9142846c   204  movz x5, #0x0
0xffff91428470   208  str x5, [x26, #376]
0xffff91428474   212  movz x0, #0x2
0xffff91428478   216  ldr x1, pc+48 (addr 0x0000ffff914284a8)    ;; external reference (Runtime::HasInPrototypeChain)
0xffff9142847c   220  ldr x16, pc+52 (addr 0x0000ffff914284b0)    ;; code: STUB, CEntryStub, minor: 4
0xffff91428480   224  br x16
0xffff91428484   228  sub csp, jssp, #0x10 (16)
0xffff91428488   232  stp x0, x1, [jssp, #-16]!
0xffff9142848c   236  movz x0, #0x2
0xffff91428490   240  ldr x1, pc+40 (addr 0x0000ffff914284b8)    ;; external reference (Runtime::OrdinaryHasInstance)
0xffff91428494   244  ldr x16, pc+44 (addr 0x0000ffff914284c0)    ;; code: STUB, CEntryStub, minor: 4
0xffff91428498   248  br x16
0xffff9142849c   252  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff914284a0   256  d63f03e0       constant
0xffff914284a4   260  d503201f       constant
0xffff914284a8   264  00e4ad20       constant
0xffff914284ac   268  00000000       constant
0xffff914284b0   272  91406060       constant
0xffff914284b4   276  0000ffff       constant
0xffff914284b8   280  00e4a740       constant
0xffff914284bc   284  00000000       constant
0xffff914284c0   288  91406060       constant
0xffff914284c4   292  0000ffff       constant


RelocInfo (size = 14)
0xffff91428478  external reference (Runtime::HasInPrototypeChain)  (0xe4ad20)
0xffff9142847c  code target (STUB)  (0xffff91406060)
0xffff91428490  external reference (Runtime::OrdinaryHasInstance)  (0xe4a740)
0xffff91428494  code target (STUB)  (0xffff91406060)
0xffff9142849c  constant pool (size 44)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 429)
0xffff914289c0     0  movz w0, #0x6000
0xffff914289c4     4  movk w0, #0x9, lsl #16
0xffff914289c8     8  cmp w0, #0x30 (48)
0xffff914289cc    12  b.ls #+0x14c (addr 0xffff91428b18)
0xffff914289d0    16  movz x2, #0xf2c0
0xffff914289d4    20  movk x2, #0x4117, lsl #16
0xffff914289d8    24  ldp x3, x0, [x2]
0xffff914289dc    28  adds x16, x3, #0x50 (80)
0xffff914289e0    32  ccmp x16, x0, #nzCv, lo
0xffff914289e4    36  b.hi #+0x78 (addr 0xffff91428a5c)
0xffff914289e8    40  str x16, [x2]
0xffff914289ec    44  orr x3, x3, #0x1
0xffff914289f0    48  movz w0, #0x0
0xffff914289f4    52  stur x0, [x3, #31]
0xffff914289f8    56  ldur x0, [x1, #23]
0xffff914289fc    60  stur x0, [x3, #-1]
0xffff91428a00    64  ldr x0, pc+200 (addr 0x0000ffff91428ac8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91428a04    68  stur x0, [x3, #7]
0xffff91428a08    72  ldr x0, pc+200 (addr 0x0000ffff91428ad0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91428a0c    76  stur x0, [x3, #15]
0xffff91428a10    80  movz x0, #0x0
0xffff91428a14    84  stur x0, [x3, #23]
0xffff91428a18    88  add x0, x3, #0x20 (32)
0xffff91428a1c    92  ldr x1, pc+188 (addr 0x0000ffff91428ad8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91428a20    96  stur x1, [x0, #-1]
0xffff91428a24   100  movz x1, #0x400000000
0xffff91428a28   104  stur x1, [x0, #7]
0xffff91428a2c   108  stur x0, [x3, #15]
0xffff91428a30   112  ldr x1, pc+176 (addr 0x0000ffff91428ae0)    ;; object: 0x49b04519 <the hole>
0xffff91428a34   116  stur x1, [x0, #15]
0xffff91428a38   120  ldr x1, pc+176 (addr 0x0000ffff91428ae8)    ;; object: 0x49b04519 <the hole>
0xffff91428a3c   124  stur x1, [x0, #23]
0xffff91428a40   128  ldr x1, pc+176 (addr 0x0000ffff91428af0)    ;; object: 0x49b04519 <the hole>
0xffff91428a44   132  stur x1, [x0, #31]
0xffff91428a48   136  ldr x1, pc+176 (addr 0x0000ffff91428af8)    ;; object: 0x49b04519 <the hole>
0xffff91428a4c   140  stur x1, [x0, #39]
0xffff91428a50   144  mov x0, x3
0xffff91428a54   148  add jssp, jssp, #0x8 (8)
0xffff91428a58   152  ret
0xffff91428a5c   156  sub csp, jssp, #0x10 (16)
0xffff91428a60   160  stp fp, lr, [jssp, #-16]!
0xffff91428a64   164  movz fp, #0xa00000000
0xffff91428a68   168  sub csp, jssp, #0x8 (8)
0xffff91428a6c   172  str fp, [jssp, #-8]!
0xffff91428a70   176  add fp, jssp, #0x8 (8)
0xffff91428a74   180  movz x3, #0x0
0xffff91428a78   184  mov x16, lr
0xffff91428a7c   188  ldr x17, pc+132 (addr 0x0000ffff91428b00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91428a80   192  blr x17
0xffff91428a84   196  movz x0, #0x5000000000
0xffff91428a88   200  movz x10, #0x0
0xffff91428a8c   204  sub csp, jssp, #0x10 (16)
0xffff91428a90   208  stp x10, x0, [jssp, #-16]!
0xffff91428a94   212  movz x0, #0x2
0xffff91428a98   216  movz x1, #0x5b88
0xffff91428a9c   220  movk x1, #0xe2, lsl #16
0xffff91428aa0   224  ldr x16, pc+104 (addr 0x0000ffff91428b08)    ;; code: STUB, CEntryStub, minor: 5
0xffff91428aa4   228  blr x16
0xffff91428aa8   232  str x0, [jssp, #24]
0xffff91428aac   236  ldr x16, pc+100 (addr 0x0000ffff91428b10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91428ab0   240  blr x16
0xffff91428ab4   244  ldr lr, [jssp, #16]
0xffff91428ab8   248  ldp xzr, fp, [jssp], #24
0xffff91428abc   252  b #-0xcc (addr 0xffff914289f0)
0xffff91428ac0   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff91428ac4   260  d63f03e0       constant
0xffff91428ac8   264  49b04201       constant
0xffff91428acc   268  00000000       constant
0xffff91428ad0   272  49b04201       constant
0xffff91428ad4   276  00000000       constant
0xffff91428ad8   280  36404259       constant
0xffff91428adc   284  00000000       constant
0xffff91428ae0   288  49b04519       constant
0xffff91428ae4   292  00000000       constant
0xffff91428ae8   296  49b04519       constant
0xffff91428aec   300  00000000       constant
0xffff91428af0   304  49b04519       constant
0xffff91428af4   308  00000000       constant
0xffff91428af8   312  49b04519       constant
0xffff91428afc   316  00000000       constant
0xffff91428b00   320  91406820       constant
0xffff91428b04   324  0000ffff       constant
0xffff91428b08   328  91406260       constant
0xffff91428b0c   332  0000ffff       constant
0xffff91428b10   336  914068e0       constant
0xffff91428b14   340  0000ffff       constant
0xffff91428b18   344  movz x16, #0x0
0xffff91428b1c   348  sub csp, jssp, #0x10 (16)
0xffff91428b20   352  stp fp, lr, [jssp, #-16]!
0xffff91428b24   356  bl #+0x4 (addr 0xffff91428b28)
0xffff91428b28   360  movz x17, #0xa00000000
0xffff91428b2c   364  sub csp, jssp, #0x10 (16)
0xffff91428b30   368  stp x17, cp, [jssp, #-16]!
0xffff91428b34   372  add fp, jssp, #0x10 (16)
0xffff91428b38   376  ldr x17, pc+24 (addr 0x0000ffff91428b50)    ;; lazy deoptimization bailout 0
0xffff91428b3c   380  add x17, x17, x16
0xffff91428b40   384  br x17
0xffff91428b44   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91428b48   392  d63f03e0       constant
0xffff91428b4c   396  d503201f       constant
0xffff91428b50   400  91206000       constant
0xffff91428b54   404  0000ffff       constant


Safepoints (size = 21)
0xffff91428aa8   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff91428a00  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91428a08  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91428a1c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91428a30  embedded object  (0x49b04519 <the hole>)
0xffff91428a38  embedded object  (0x49b04519 <the hole>)
0xffff91428a40  embedded object  (0x49b04519 <the hole>)
0xffff91428a48  embedded object  (0x49b04519 <the hole>)
0xffff91428a7c  code target (STUB)  (0xffff91406820)
0xffff91428aa0  code target (STUB)  (0xffff91406260)
0xffff91428aac  code target (STUB)  (0xffff914068e0)
0xffff91428ac0  constant pool (size 88)
0xffff91428b38  runtime entry
0xffff91428b44  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArrayNoArgumentConstructorStub
name = InternalArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 429)
0xffff914289c0     0  movz w0, #0x6000
0xffff914289c4     4  movk w0, #0x9, lsl #16
0xffff914289c8     8  cmp w0, #0x30 (48)
0xffff914289cc    12  b.ls #+0x14c (addr 0xffff91428b18)
0xffff914289d0    16  movz x2, #0xf2c0
0xffff914289d4    20  movk x2, #0x4117, lsl #16
0xffff914289d8    24  ldp x3, x0, [x2]
0xffff914289dc    28  adds x16, x3, #0x50 (80)
0xffff914289e0    32  ccmp x16, x0, #nzCv, lo
0xffff914289e4    36  b.hi #+0x78 (addr 0xffff91428a5c)
0xffff914289e8    40  str x16, [x2]
0xffff914289ec    44  orr x3, x3, #0x1
0xffff914289f0    48  movz w0, #0x0
0xffff914289f4    52  stur x0, [x3, #31]
0xffff914289f8    56  ldur x0, [x1, #23]
0xffff914289fc    60  stur x0, [x3, #-1]
0xffff91428a00    64  ldr x0, pc+200 (addr 0x0000ffff91428ac8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91428a04    68  stur x0, [x3, #7]
0xffff91428a08    72  ldr x0, pc+200 (addr 0x0000ffff91428ad0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91428a0c    76  stur x0, [x3, #15]
0xffff91428a10    80  movz x0, #0x0
0xffff91428a14    84  stur x0, [x3, #23]
0xffff91428a18    88  add x0, x3, #0x20 (32)
0xffff91428a1c    92  ldr x1, pc+188 (addr 0x0000ffff91428ad8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91428a20    96  stur x1, [x0, #-1]
0xffff91428a24   100  movz x1, #0x400000000
0xffff91428a28   104  stur x1, [x0, #7]
0xffff91428a2c   108  stur x0, [x3, #15]
0xffff91428a30   112  ldr x1, pc+176 (addr 0x0000ffff91428ae0)    ;; object: 0x49b04519 <the hole>
0xffff91428a34   116  stur x1, [x0, #15]
0xffff91428a38   120  ldr x1, pc+176 (addr 0x0000ffff91428ae8)    ;; object: 0x49b04519 <the hole>
0xffff91428a3c   124  stur x1, [x0, #23]
0xffff91428a40   128  ldr x1, pc+176 (addr 0x0000ffff91428af0)    ;; object: 0x49b04519 <the hole>
0xffff91428a44   132  stur x1, [x0, #31]
0xffff91428a48   136  ldr x1, pc+176 (addr 0x0000ffff91428af8)    ;; object: 0x49b04519 <the hole>
0xffff91428a4c   140  stur x1, [x0, #39]
0xffff91428a50   144  mov x0, x3
0xffff91428a54   148  add jssp, jssp, #0x8 (8)
0xffff91428a58   152  ret
0xffff91428a5c   156  sub csp, jssp, #0x10 (16)
0xffff91428a60   160  stp fp, lr, [jssp, #-16]!
0xffff91428a64   164  movz fp, #0xa00000000
0xffff91428a68   168  sub csp, jssp, #0x8 (8)
0xffff91428a6c   172  str fp, [jssp, #-8]!
0xffff91428a70   176  add fp, jssp, #0x8 (8)
0xffff91428a74   180  movz x3, #0x0
0xffff91428a78   184  mov x16, lr
0xffff91428a7c   188  ldr x17, pc+132 (addr 0x0000ffff91428b00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91428a80   192  blr x17
0xffff91428a84   196  movz x0, #0x5000000000
0xffff91428a88   200  movz x10, #0x0
0xffff91428a8c   204  sub csp, jssp, #0x10 (16)
0xffff91428a90   208  stp x10, x0, [jssp, #-16]!
0xffff91428a94   212  movz x0, #0x2
0xffff91428a98   216  movz x1, #0x5b88
0xffff91428a9c   220  movk x1, #0xe2, lsl #16
0xffff91428aa0   224  ldr x16, pc+104 (addr 0x0000ffff91428b08)    ;; code: STUB, CEntryStub, minor: 5
0xffff91428aa4   228  blr x16
0xffff91428aa8   232  str x0, [jssp, #24]
0xffff91428aac   236  ldr x16, pc+100 (addr 0x0000ffff91428b10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91428ab0   240  blr x16
0xffff91428ab4   244  ldr lr, [jssp, #16]
0xffff91428ab8   248  ldp xzr, fp, [jssp], #24
0xffff91428abc   252  b #-0xcc (addr 0xffff914289f0)
0xffff91428ac0   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff91428ac4   260  d63f03e0       constant
0xffff91428ac8   264  49b04201       constant
0xffff91428acc   268  00000000       constant
0xffff91428ad0   272  49b04201       constant
0xffff91428ad4   276  00000000       constant
0xffff91428ad8   280  36404259       constant
0xffff91428adc   284  00000000       constant
0xffff91428ae0   288  49b04519       constant
0xffff91428ae4   292  00000000       constant
0xffff91428ae8   296  49b04519       constant
0xffff91428aec   300  00000000       constant
0xffff91428af0   304  49b04519       constant
0xffff91428af4   308  00000000       constant
0xffff91428af8   312  49b04519       constant
0xffff91428afc   316  00000000       constant
0xffff91428b00   320  91406820       constant
0xffff91428b04   324  0000ffff       constant
0xffff91428b08   328  91406260       constant
0xffff91428b0c   332  0000ffff       constant
0xffff91428b10   336  914068e0       constant
0xffff91428b14   340  0000ffff       constant
0xffff91428b18   344  movz x16, #0x0
0xffff91428b1c   348  sub csp, jssp, #0x10 (16)
0xffff91428b20   352  stp fp, lr, [jssp, #-16]!
0xffff91428b24   356  bl #+0x4 (addr 0xffff91428b28)
0xffff91428b28   360  movz x17, #0xa00000000
0xffff91428b2c   364  sub csp, jssp, #0x10 (16)
0xffff91428b30   368  stp x17, cp, [jssp, #-16]!
0xffff91428b34   372  add fp, jssp, #0x10 (16)
0xffff91428b38   376  ldr x17, pc+24 (addr 0x0000ffff91428b50)    ;; lazy deoptimization bailout 0
0xffff91428b3c   380  add x17, x17, x16
0xffff91428b40   384  br x17
0xffff91428b44   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91428b48   392  d63f03e0       constant
0xffff91428b4c   396  d503201f       constant
0xffff91428b50   400  91206000       constant
0xffff91428b54   404  0000ffff       constant


Safepoints (size = 21)
0xffff91428aa8   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff91428a00  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91428a08  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91428a1c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91428a30  embedded object  (0x49b04519 <the hole>)
0xffff91428a38  embedded object  (0x49b04519 <the hole>)
0xffff91428a40  embedded object  (0x49b04519 <the hole>)
0xffff91428a48  embedded object  (0x49b04519 <the hole>)
0xffff91428a7c  code target (STUB)  (0xffff91406820)
0xffff91428aa0  code target (STUB)  (0xffff91406260)
0xffff91428aac  code target (STUB)  (0xffff914068e0)
0xffff91428ac0  constant pool (size 88)
0xffff91428b38  runtime entry
0xffff91428b44  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 509)
0xffff91428be0     0  movz x16, #0xa00000000
0xffff91428be4     4  sub csp, jssp, #0x10 (16)
0xffff91428be8     8  stp fp, lr, [jssp, #-16]!
0xffff91428bec    12  mov fp, jssp
0xffff91428bf0    16  sub csp, jssp, #0x8 (8)
0xffff91428bf4    20  sub jssp, jssp, #0x8 (8)
0xffff91428bf8    24  stur x16, [fp, #-8]
0xffff91428bfc    28  ldr x2, [fp]
0xffff91428c00    32  ldur x3, [x2, #-8]
0xffff91428c04    36  movz x16, #0xe00000000
0xffff91428c08    40  cmp x3, x16
0xffff91428c0c    44  csel x3, fp, x2, ne
0xffff91428c10    48  ldr x2, [x3, #16]
0xffff91428c14    52  tbnz w2, #0, #+0xd0 (addr 0xffff91428ce4)
0xffff91428c18    56  asr x4, x2, #32
0xffff91428c1c    60  movz w16, #0x257f
0xffff91428c20    64  cmp w4, w16, lsl #3
0xffff91428c24    68  b.hs #+0x16c (addr 0xffff91428d90)
0xffff91428c28    72  cbz w4, #+0xc (addr 0xffff91428c34)
0xffff91428c2c    76  mov x2, x4
0xffff91428c30    80  b #+0xc (addr 0xffff91428c3c)
0xffff91428c34    84  movz x2, #0x4
0xffff91428c38    88  movz x4, #0x0
0xffff91428c3c    92  lsl x3, x2, #32
0xffff91428c40    96  lsl x4, x4, #32
0xffff91428c44   100  lsl w5, w2, #3
0xffff91428c48   104  add w5, w5, #0x10 (16)
0xffff91428c4c   108  cmp w5, #0x96000 (614400)
0xffff91428c50   112  b.hs #+0x148 (addr 0xffff91428d98)
0xffff91428c54   116  add w0, w5, #0x20 (32)
0xffff91428c58   120  sxtw x0, w0
0xffff91428c5c   124  movz x5, #0xf2c0
0xffff91428c60   128  movk x5, #0x4117, lsl #16
0xffff91428c64   132  ldp x7, x16, [x5]
0xffff91428c68   136  adds x6, x7, x0
0xffff91428c6c   140  ccmp x6, x16, #nzCv, lo
0xffff91428c70   144  b.hi #+0x9c (addr 0xffff91428d0c)
0xffff91428c74   148  str x6, [x5]
0xffff91428c78   152  orr x7, x7, #0x1
0xffff91428c7c   156  movz w0, #0x0
0xffff91428c80   160  stur x0, [x7, #31]
0xffff91428c84   164  ldur x0, [x1, #23]
0xffff91428c88   168  stur x0, [x7, #-1]
0xffff91428c8c   172  ldr x0, pc+204 (addr 0x0000ffff91428d58)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91428c90   176  stur x0, [x7, #7]
0xffff91428c94   180  ldr x0, pc+204 (addr 0x0000ffff91428d60)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91428c98   184  stur x0, [x7, #15]
0xffff91428c9c   188  stur x4, [x7, #23]
0xffff91428ca0   192  add x0, x7, #0x20 (32)
0xffff91428ca4   196  ldr x1, pc+196 (addr 0x0000ffff91428d68)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91428ca8   200  stur x1, [x0, #-1]
0xffff91428cac   204  stur x3, [x0, #7]
0xffff91428cb0   208  stur x0, [x7, #15]
0xffff91428cb4   212  cmp w2, #0x0 (0)
0xffff91428cb8   216  b.le #+0x18 (addr 0xffff91428cd0)
0xffff91428cbc   220  sub w2, w2, #0x1 (1)
0xffff91428cc0   224  ldr x1, pc+176 (addr 0x0000ffff91428d70)    ;; object: 0x49b04519 <the hole>
0xffff91428cc4   228  add x3, x0, #0xf (15)
0xffff91428cc8   232  str x1, [x3, w2, sxtw #3]
0xffff91428ccc   236  b #-0x18 (addr 0xffff91428cb4)
0xffff91428cd0   240  mov x0, x7
0xffff91428cd4   244  mov jssp, fp
0xffff91428cd8   248  ldp fp, lr, [jssp], #16
0xffff91428cdc   252  add jssp, jssp, #0x10 (16)
0xffff91428ce0   256  ret
0xffff91428ce4   260  ldur x16, [x2, #-1]
0xffff91428ce8   264  ldr x17, [x26, #120]
0xffff91428cec   268  cmp x16, x17
0xffff91428cf0   272  b.ne #+0xb0 (addr 0xffff91428da0)
0xffff91428cf4   276  ldur d29, [x2, #7]
0xffff91428cf8   280  fcvtzs w4, d29
0xffff91428cfc   284  scvtf d0, w4
0xffff91428d00   288  fcmp d29, d0
0xffff91428d04   292  b.ne #+0x9c (addr 0xffff91428da0)
0xffff91428d08   296  b #-0xec (addr 0xffff91428c1c)
0xffff91428d0c   300  movz x7, #0x0
0xffff91428d10   304  mov x16, lr
0xffff91428d14   308  ldr x17, pc+100 (addr 0x0000ffff91428d78)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91428d18   312  blr x17
0xffff91428d1c   316  lsl x0, x0, #32
0xffff91428d20   320  movz x10, #0x0
0xffff91428d24   324  sub csp, jssp, #0x10 (16)
0xffff91428d28   328  stp x10, x0, [jssp, #-16]!
0xffff91428d2c   332  movz x0, #0x2
0xffff91428d30   336  movz x1, #0x5b88
0xffff91428d34   340  movk x1, #0xe2, lsl #16
0xffff91428d38   344  ldr x16, pc+72 (addr 0x0000ffff91428d80)    ;; code: STUB, CEntryStub, minor: 5
0xffff91428d3c   348  blr x16
0xffff91428d40   352  str x0, [jssp, #56]
0xffff91428d44   356  ldr x16, pc+68 (addr 0x0000ffff91428d88)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91428d48   360  blr x16
0xffff91428d4c   364  b #-0xd0 (addr 0xffff91428c7c)
0xffff91428d50   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff91428d54   372  d63f03e0       constant
0xffff91428d58   376  49b04201       constant
0xffff91428d5c   380  00000000       constant
0xffff91428d60   384  49b04201       constant
0xffff91428d64   388  00000000       constant
0xffff91428d68   392  36404259       constant
0xffff91428d6c   396  00000000       constant
0xffff91428d70   400  49b04519       constant
0xffff91428d74   404  00000000       constant
0xffff91428d78   408  91406820       constant
0xffff91428d7c   412  0000ffff       constant
0xffff91428d80   416  91406260       constant
0xffff91428d84   420  0000ffff       constant
0xffff91428d88   424  914068e0       constant
0xffff91428d8c   428  0000ffff       constant
0xffff91428d90   432  movz x16, #0x0
0xffff91428d94   436  bl #+0x14 (addr 0xffff91428da8)
0xffff91428d98   440  movz x16, #0x8
0xffff91428d9c   444  bl #+0xc (addr 0xffff91428da8)
0xffff91428da0   448  movz x16, #0x10
0xffff91428da4   452  bl #+0x4 (addr 0xffff91428da8)
0xffff91428da8   456  ldr x17, pc+24 (addr 0x0000ffff91428dc0)    ;; lazy deoptimization bailout 0
0xffff91428dac   460  add x17, x17, x16
0xffff91428db0   464  br x17
0xffff91428db4   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91428db8   472  d63f03e0       constant
0xffff91428dbc   476  d503201f       constant
0xffff91428dc0   480  91206000       constant
0xffff91428dc4   484  0000ffff       constant


Safepoints (size = 21)
0xffff91428d40   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff91428c8c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91428c94  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91428ca4  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91428cc0  embedded object  (0x49b04519 <the hole>)
0xffff91428d14  code target (STUB)  (0xffff91406820)
0xffff91428d38  code target (STUB)  (0xffff91406260)
0xffff91428d44  code target (STUB)  (0xffff914068e0)
0xffff91428d50  constant pool (size 64)
0xffff91428da8  runtime entry
0xffff91428db4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArraySingleArgumentConstructorStub
name = InternalArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 509)
0xffff91428be0     0  movz x16, #0xa00000000
0xffff91428be4     4  sub csp, jssp, #0x10 (16)
0xffff91428be8     8  stp fp, lr, [jssp, #-16]!
0xffff91428bec    12  mov fp, jssp
0xffff91428bf0    16  sub csp, jssp, #0x8 (8)
0xffff91428bf4    20  sub jssp, jssp, #0x8 (8)
0xffff91428bf8    24  stur x16, [fp, #-8]
0xffff91428bfc    28  ldr x2, [fp]
0xffff91428c00    32  ldur x3, [x2, #-8]
0xffff91428c04    36  movz x16, #0xe00000000
0xffff91428c08    40  cmp x3, x16
0xffff91428c0c    44  csel x3, fp, x2, ne
0xffff91428c10    48  ldr x2, [x3, #16]
0xffff91428c14    52  tbnz w2, #0, #+0xd0 (addr 0xffff91428ce4)
0xffff91428c18    56  asr x4, x2, #32
0xffff91428c1c    60  movz w16, #0x257f
0xffff91428c20    64  cmp w4, w16, lsl #3
0xffff91428c24    68  b.hs #+0x16c (addr 0xffff91428d90)
0xffff91428c28    72  cbz w4, #+0xc (addr 0xffff91428c34)
0xffff91428c2c    76  mov x2, x4
0xffff91428c30    80  b #+0xc (addr 0xffff91428c3c)
0xffff91428c34    84  movz x2, #0x4
0xffff91428c38    88  movz x4, #0x0
0xffff91428c3c    92  lsl x3, x2, #32
0xffff91428c40    96  lsl x4, x4, #32
0xffff91428c44   100  lsl w5, w2, #3
0xffff91428c48   104  add w5, w5, #0x10 (16)
0xffff91428c4c   108  cmp w5, #0x96000 (614400)
0xffff91428c50   112  b.hs #+0x148 (addr 0xffff91428d98)
0xffff91428c54   116  add w0, w5, #0x20 (32)
0xffff91428c58   120  sxtw x0, w0
0xffff91428c5c   124  movz x5, #0xf2c0
0xffff91428c60   128  movk x5, #0x4117, lsl #16
0xffff91428c64   132  ldp x7, x16, [x5]
0xffff91428c68   136  adds x6, x7, x0
0xffff91428c6c   140  ccmp x6, x16, #nzCv, lo
0xffff91428c70   144  b.hi #+0x9c (addr 0xffff91428d0c)
0xffff91428c74   148  str x6, [x5]
0xffff91428c78   152  orr x7, x7, #0x1
0xffff91428c7c   156  movz w0, #0x0
0xffff91428c80   160  stur x0, [x7, #31]
0xffff91428c84   164  ldur x0, [x1, #23]
0xffff91428c88   168  stur x0, [x7, #-1]
0xffff91428c8c   172  ldr x0, pc+204 (addr 0x0000ffff91428d58)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91428c90   176  stur x0, [x7, #7]
0xffff91428c94   180  ldr x0, pc+204 (addr 0x0000ffff91428d60)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91428c98   184  stur x0, [x7, #15]
0xffff91428c9c   188  stur x4, [x7, #23]
0xffff91428ca0   192  add x0, x7, #0x20 (32)
0xffff91428ca4   196  ldr x1, pc+196 (addr 0x0000ffff91428d68)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91428ca8   200  stur x1, [x0, #-1]
0xffff91428cac   204  stur x3, [x0, #7]
0xffff91428cb0   208  stur x0, [x7, #15]
0xffff91428cb4   212  cmp w2, #0x0 (0)
0xffff91428cb8   216  b.le #+0x18 (addr 0xffff91428cd0)
0xffff91428cbc   220  sub w2, w2, #0x1 (1)
0xffff91428cc0   224  ldr x1, pc+176 (addr 0x0000ffff91428d70)    ;; object: 0x49b04519 <the hole>
0xffff91428cc4   228  add x3, x0, #0xf (15)
0xffff91428cc8   232  str x1, [x3, w2, sxtw #3]
0xffff91428ccc   236  b #-0x18 (addr 0xffff91428cb4)
0xffff91428cd0   240  mov x0, x7
0xffff91428cd4   244  mov jssp, fp
0xffff91428cd8   248  ldp fp, lr, [jssp], #16
0xffff91428cdc   252  add jssp, jssp, #0x10 (16)
0xffff91428ce0   256  ret
0xffff91428ce4   260  ldur x16, [x2, #-1]
0xffff91428ce8   264  ldr x17, [x26, #120]
0xffff91428cec   268  cmp x16, x17
0xffff91428cf0   272  b.ne #+0xb0 (addr 0xffff91428da0)
0xffff91428cf4   276  ldur d29, [x2, #7]
0xffff91428cf8   280  fcvtzs w4, d29
0xffff91428cfc   284  scvtf d0, w4
0xffff91428d00   288  fcmp d29, d0
0xffff91428d04   292  b.ne #+0x9c (addr 0xffff91428da0)
0xffff91428d08   296  b #-0xec (addr 0xffff91428c1c)
0xffff91428d0c   300  movz x7, #0x0
0xffff91428d10   304  mov x16, lr
0xffff91428d14   308  ldr x17, pc+100 (addr 0x0000ffff91428d78)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91428d18   312  blr x17
0xffff91428d1c   316  lsl x0, x0, #32
0xffff91428d20   320  movz x10, #0x0
0xffff91428d24   324  sub csp, jssp, #0x10 (16)
0xffff91428d28   328  stp x10, x0, [jssp, #-16]!
0xffff91428d2c   332  movz x0, #0x2
0xffff91428d30   336  movz x1, #0x5b88
0xffff91428d34   340  movk x1, #0xe2, lsl #16
0xffff91428d38   344  ldr x16, pc+72 (addr 0x0000ffff91428d80)    ;; code: STUB, CEntryStub, minor: 5
0xffff91428d3c   348  blr x16
0xffff91428d40   352  str x0, [jssp, #56]
0xffff91428d44   356  ldr x16, pc+68 (addr 0x0000ffff91428d88)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91428d48   360  blr x16
0xffff91428d4c   364  b #-0xd0 (addr 0xffff91428c7c)
0xffff91428d50   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff91428d54   372  d63f03e0       constant
0xffff91428d58   376  49b04201       constant
0xffff91428d5c   380  00000000       constant
0xffff91428d60   384  49b04201       constant
0xffff91428d64   388  00000000       constant
0xffff91428d68   392  36404259       constant
0xffff91428d6c   396  00000000       constant
0xffff91428d70   400  49b04519       constant
0xffff91428d74   404  00000000       constant
0xffff91428d78   408  91406820       constant
0xffff91428d7c   412  0000ffff       constant
0xffff91428d80   416  91406260       constant
0xffff91428d84   420  0000ffff       constant
0xffff91428d88   424  914068e0       constant
0xffff91428d8c   428  0000ffff       constant
0xffff91428d90   432  movz x16, #0x0
0xffff91428d94   436  bl #+0x14 (addr 0xffff91428da8)
0xffff91428d98   440  movz x16, #0x8
0xffff91428d9c   444  bl #+0xc (addr 0xffff91428da8)
0xffff91428da0   448  movz x16, #0x10
0xffff91428da4   452  bl #+0x4 (addr 0xffff91428da8)
0xffff91428da8   456  ldr x17, pc+24 (addr 0x0000ffff91428dc0)    ;; lazy deoptimization bailout 0
0xffff91428dac   460  add x17, x17, x16
0xffff91428db0   464  br x17
0xffff91428db4   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91428db8   472  d63f03e0       constant
0xffff91428dbc   476  d503201f       constant
0xffff91428dc0   480  91206000       constant
0xffff91428dc4   484  0000ffff       constant


Safepoints (size = 21)
0xffff91428d40   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff91428c8c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91428c94  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91428ca4  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91428cc0  embedded object  (0x49b04519 <the hole>)
0xffff91428d14  code target (STUB)  (0xffff91406820)
0xffff91428d38  code target (STUB)  (0xffff91406260)
0xffff91428d44  code target (STUB)  (0xffff914068e0)
0xffff91428d50  constant pool (size 64)
0xffff91428da8  runtime entry
0xffff91428db4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 437)
0xffff91428e40     0  movz x16, #0xa00000000
0xffff91428e44     4  sub csp, jssp, #0x10 (16)
0xffff91428e48     8  stp fp, lr, [jssp, #-16]!
0xffff91428e4c    12  mov fp, jssp
0xffff91428e50    16  sub csp, jssp, #0x8 (8)
0xffff91428e54    20  sub jssp, jssp, #0x8 (8)
0xffff91428e58    24  stur x16, [fp, #-8]
0xffff91428e5c    28  movz w16, #0x257f
0xffff91428e60    32  cmp w0, w16, lsl #3
0xffff91428e64    36  b.hs #+0x14c (addr 0xffff91428fb0)
0xffff91428e68    40  lsl x2, x0, #32
0xffff91428e6c    44  lsl w3, w0, #3
0xffff91428e70    48  add w3, w3, #0x10 (16)
0xffff91428e74    52  cmp w3, #0x96000 (614400)
0xffff91428e78    56  b.hs #+0x140 (addr 0xffff91428fb8)
0xffff91428e7c    60  add w3, w3, #0x20 (32)
0xffff91428e80    64  sxtw x3, w3
0xffff91428e84    68  movz x4, #0xf2c0
0xffff91428e88    72  movk x4, #0x4117, lsl #16
0xffff91428e8c    76  ldp x6, x16, [x4]
0xffff91428e90    80  adds x5, x6, x3
0xffff91428e94    84  ccmp x5, x16, #nzCv, lo
0xffff91428e98    88  b.hi #+0x9c (addr 0xffff91428f34)
0xffff91428e9c    92  str x5, [x4]
0xffff91428ea0    96  orr x6, x6, #0x1
0xffff91428ea4   100  movz w3, #0x0
0xffff91428ea8   104  stur x3, [x6, #31]
0xffff91428eac   108  ldur x1, [x1, #23]
0xffff91428eb0   112  stur x1, [x6, #-1]
0xffff91428eb4   116  ldr x1, pc+204 (addr 0x0000ffff91428f80)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91428eb8   120  stur x1, [x6, #7]
0xffff91428ebc   124  ldr x1, pc+204 (addr 0x0000ffff91428f88)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91428ec0   128  stur x1, [x6, #15]
0xffff91428ec4   132  stur x2, [x6, #23]
0xffff91428ec8   136  add x1, x6, #0x20 (32)
0xffff91428ecc   140  ldr x3, pc+196 (addr 0x0000ffff91428f90)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91428ed0   144  stur x3, [x1, #-1]
0xffff91428ed4   148  stur x2, [x1, #7]
0xffff91428ed8   152  stur x1, [x6, #15]
0xffff91428edc   156  ldr x2, [fp]
0xffff91428ee0   160  ldur x3, [x2, #-8]
0xffff91428ee4   164  movz x16, #0xe00000000
0xffff91428ee8   168  cmp x3, x16
0xffff91428eec   172  csel x3, fp, x2, ne
0xffff91428ef0   176  movz x2, #0x0
0xffff91428ef4   180  cmp w0, w2
0xffff91428ef8   184  b.le #+0x20 (addr 0xffff91428f18)
0xffff91428efc   188  sub w4, w0, w2
0xffff91428f00   192  add w4, w4, #0x1 (1)
0xffff91428f04   196  ldr x4, [x3, w4, uxtw #3]
0xffff91428f08   200  add x5, x1, #0xf (15)
0xffff91428f0c   204  str x4, [x5, w2, sxtw #3]
0xffff91428f10   208  add w2, w2, #0x1 (1)
0xffff91428f14   212  b #-0x20 (addr 0xffff91428ef4)
0xffff91428f18   216  add w0, w0, #0x1 (1)
0xffff91428f1c   220  lsl x1, x0, #32
0xffff91428f20   224  mov x0, x6
0xffff91428f24   228  mov jssp, fp
0xffff91428f28   232  ldp fp, lr, [jssp], #16
0xffff91428f2c   236  add jssp, jssp, x1, lsr #29
0xffff91428f30   240  ret
0xffff91428f34   244  movz x6, #0x0
0xffff91428f38   248  mov x16, lr
0xffff91428f3c   252  ldr x17, pc+92 (addr 0x0000ffff91428f98)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91428f40   256  blr x17
0xffff91428f44   260  lsl x0, x3, #32
0xffff91428f48   264  movz x10, #0x0
0xffff91428f4c   268  sub csp, jssp, #0x10 (16)
0xffff91428f50   272  stp x10, x0, [jssp, #-16]!
0xffff91428f54   276  movz x0, #0x2
0xffff91428f58   280  movz x1, #0x5b88
0xffff91428f5c   284  movk x1, #0xe2, lsl #16
0xffff91428f60   288  ldr x16, pc+64 (addr 0x0000ffff91428fa0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91428f64   292  blr x16
0xffff91428f68   296  str x0, [jssp, #48]
0xffff91428f6c   300  ldr x16, pc+60 (addr 0x0000ffff91428fa8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91428f70   304  blr x16
0xffff91428f74   308  b #-0xd0 (addr 0xffff91428ea4)
0xffff91428f78   312  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff91428f7c   316  d63f03e0       constant
0xffff91428f80   320  49b04201       constant
0xffff91428f84   324  00000000       constant
0xffff91428f88   328  49b04201       constant
0xffff91428f8c   332  00000000       constant
0xffff91428f90   336  36404259       constant
0xffff91428f94   340  00000000       constant
0xffff91428f98   344  91406820       constant
0xffff91428f9c   348  0000ffff       constant
0xffff91428fa0   352  91406260       constant
0xffff91428fa4   356  0000ffff       constant
0xffff91428fa8   360  914068e0       constant
0xffff91428fac   364  0000ffff       constant
0xffff91428fb0   368  movz x16, #0x0
0xffff91428fb4   372  bl #+0xc (addr 0xffff91428fc0)
0xffff91428fb8   376  movz x16, #0x8
0xffff91428fbc   380  bl #+0x4 (addr 0xffff91428fc0)
0xffff91428fc0   384  ldr x17, pc+24 (addr 0x0000ffff91428fd8)    ;; lazy deoptimization bailout 0
0xffff91428fc4   388  add x17, x17, x16
0xffff91428fc8   392  br x17
0xffff91428fcc   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91428fd0   400  d63f03e0       constant
0xffff91428fd4   404  d503201f       constant
0xffff91428fd8   408  91206000       constant
0xffff91428fdc   412  0000ffff       constant


Safepoints (size = 21)
0xffff91428f68   296  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff91428eb4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91428ebc  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91428ecc  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91428f3c  code target (STUB)  (0xffff91406820)
0xffff91428f60  code target (STUB)  (0xffff91406260)
0xffff91428f6c  code target (STUB)  (0xffff914068e0)
0xffff91428f78  constant pool (size 56)
0xffff91428fc0  runtime entry
0xffff91428fcc  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArrayNArgumentsConstructorStub
name = InternalArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 437)
0xffff91428e40     0  movz x16, #0xa00000000
0xffff91428e44     4  sub csp, jssp, #0x10 (16)
0xffff91428e48     8  stp fp, lr, [jssp, #-16]!
0xffff91428e4c    12  mov fp, jssp
0xffff91428e50    16  sub csp, jssp, #0x8 (8)
0xffff91428e54    20  sub jssp, jssp, #0x8 (8)
0xffff91428e58    24  stur x16, [fp, #-8]
0xffff91428e5c    28  movz w16, #0x257f
0xffff91428e60    32  cmp w0, w16, lsl #3
0xffff91428e64    36  b.hs #+0x14c (addr 0xffff91428fb0)
0xffff91428e68    40  lsl x2, x0, #32
0xffff91428e6c    44  lsl w3, w0, #3
0xffff91428e70    48  add w3, w3, #0x10 (16)
0xffff91428e74    52  cmp w3, #0x96000 (614400)
0xffff91428e78    56  b.hs #+0x140 (addr 0xffff91428fb8)
0xffff91428e7c    60  add w3, w3, #0x20 (32)
0xffff91428e80    64  sxtw x3, w3
0xffff91428e84    68  movz x4, #0xf2c0
0xffff91428e88    72  movk x4, #0x4117, lsl #16
0xffff91428e8c    76  ldp x6, x16, [x4]
0xffff91428e90    80  adds x5, x6, x3
0xffff91428e94    84  ccmp x5, x16, #nzCv, lo
0xffff91428e98    88  b.hi #+0x9c (addr 0xffff91428f34)
0xffff91428e9c    92  str x5, [x4]
0xffff91428ea0    96  orr x6, x6, #0x1
0xffff91428ea4   100  movz w3, #0x0
0xffff91428ea8   104  stur x3, [x6, #31]
0xffff91428eac   108  ldur x1, [x1, #23]
0xffff91428eb0   112  stur x1, [x6, #-1]
0xffff91428eb4   116  ldr x1, pc+204 (addr 0x0000ffff91428f80)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91428eb8   120  stur x1, [x6, #7]
0xffff91428ebc   124  ldr x1, pc+204 (addr 0x0000ffff91428f88)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91428ec0   128  stur x1, [x6, #15]
0xffff91428ec4   132  stur x2, [x6, #23]
0xffff91428ec8   136  add x1, x6, #0x20 (32)
0xffff91428ecc   140  ldr x3, pc+196 (addr 0x0000ffff91428f90)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91428ed0   144  stur x3, [x1, #-1]
0xffff91428ed4   148  stur x2, [x1, #7]
0xffff91428ed8   152  stur x1, [x6, #15]
0xffff91428edc   156  ldr x2, [fp]
0xffff91428ee0   160  ldur x3, [x2, #-8]
0xffff91428ee4   164  movz x16, #0xe00000000
0xffff91428ee8   168  cmp x3, x16
0xffff91428eec   172  csel x3, fp, x2, ne
0xffff91428ef0   176  movz x2, #0x0
0xffff91428ef4   180  cmp w0, w2
0xffff91428ef8   184  b.le #+0x20 (addr 0xffff91428f18)
0xffff91428efc   188  sub w4, w0, w2
0xffff91428f00   192  add w4, w4, #0x1 (1)
0xffff91428f04   196  ldr x4, [x3, w4, uxtw #3]
0xffff91428f08   200  add x5, x1, #0xf (15)
0xffff91428f0c   204  str x4, [x5, w2, sxtw #3]
0xffff91428f10   208  add w2, w2, #0x1 (1)
0xffff91428f14   212  b #-0x20 (addr 0xffff91428ef4)
0xffff91428f18   216  add w0, w0, #0x1 (1)
0xffff91428f1c   220  lsl x1, x0, #32
0xffff91428f20   224  mov x0, x6
0xffff91428f24   228  mov jssp, fp
0xffff91428f28   232  ldp fp, lr, [jssp], #16
0xffff91428f2c   236  add jssp, jssp, x1, lsr #29
0xffff91428f30   240  ret
0xffff91428f34   244  movz x6, #0x0
0xffff91428f38   248  mov x16, lr
0xffff91428f3c   252  ldr x17, pc+92 (addr 0x0000ffff91428f98)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91428f40   256  blr x17
0xffff91428f44   260  lsl x0, x3, #32
0xffff91428f48   264  movz x10, #0x0
0xffff91428f4c   268  sub csp, jssp, #0x10 (16)
0xffff91428f50   272  stp x10, x0, [jssp, #-16]!
0xffff91428f54   276  movz x0, #0x2
0xffff91428f58   280  movz x1, #0x5b88
0xffff91428f5c   284  movk x1, #0xe2, lsl #16
0xffff91428f60   288  ldr x16, pc+64 (addr 0x0000ffff91428fa0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91428f64   292  blr x16
0xffff91428f68   296  str x0, [jssp, #48]
0xffff91428f6c   300  ldr x16, pc+60 (addr 0x0000ffff91428fa8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91428f70   304  blr x16
0xffff91428f74   308  b #-0xd0 (addr 0xffff91428ea4)
0xffff91428f78   312  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff91428f7c   316  d63f03e0       constant
0xffff91428f80   320  49b04201       constant
0xffff91428f84   324  00000000       constant
0xffff91428f88   328  49b04201       constant
0xffff91428f8c   332  00000000       constant
0xffff91428f90   336  36404259       constant
0xffff91428f94   340  00000000       constant
0xffff91428f98   344  91406820       constant
0xffff91428f9c   348  0000ffff       constant
0xffff91428fa0   352  91406260       constant
0xffff91428fa4   356  0000ffff       constant
0xffff91428fa8   360  914068e0       constant
0xffff91428fac   364  0000ffff       constant
0xffff91428fb0   368  movz x16, #0x0
0xffff91428fb4   372  bl #+0xc (addr 0xffff91428fc0)
0xffff91428fb8   376  movz x16, #0x8
0xffff91428fbc   380  bl #+0x4 (addr 0xffff91428fc0)
0xffff91428fc0   384  ldr x17, pc+24 (addr 0x0000ffff91428fd8)    ;; lazy deoptimization bailout 0
0xffff91428fc4   388  add x17, x17, x16
0xffff91428fc8   392  br x17
0xffff91428fcc   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91428fd0   400  d63f03e0       constant
0xffff91428fd4   404  d503201f       constant
0xffff91428fd8   408  91206000       constant
0xffff91428fdc   412  0000ffff       constant


Safepoints (size = 21)
0xffff91428f68   296  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff91428eb4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91428ebc  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91428ecc  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91428f3c  code target (STUB)  (0xffff91406820)
0xffff91428f60  code target (STUB)  (0xffff91406260)
0xffff91428f6c  code target (STUB)  (0xffff914068e0)
0xffff91428f78  constant pool (size 56)
0xffff91428fc0  runtime entry
0xffff91428fcc  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 429)
0xffff91429060     0  movz w0, #0x6000
0xffff91429064     4  movk w0, #0x9, lsl #16
0xffff91429068     8  cmp w0, #0x30 (48)
0xffff9142906c    12  b.ls #+0x14c (addr 0xffff914291b8)
0xffff91429070    16  movz x2, #0xf2c0
0xffff91429074    20  movk x2, #0x4117, lsl #16
0xffff91429078    24  ldp x3, x0, [x2]
0xffff9142907c    28  adds x16, x3, #0x50 (80)
0xffff91429080    32  ccmp x16, x0, #nzCv, lo
0xffff91429084    36  b.hi #+0x78 (addr 0xffff914290fc)
0xffff91429088    40  str x16, [x2]
0xffff9142908c    44  orr x3, x3, #0x1
0xffff91429090    48  movz w0, #0x0
0xffff91429094    52  stur x0, [x3, #31]
0xffff91429098    56  ldur x0, [x1, #23]
0xffff9142909c    60  stur x0, [x3, #-1]
0xffff914290a0    64  ldr x0, pc+200 (addr 0x0000ffff91429168)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914290a4    68  stur x0, [x3, #7]
0xffff914290a8    72  ldr x0, pc+200 (addr 0x0000ffff91429170)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914290ac    76  stur x0, [x3, #15]
0xffff914290b0    80  movz x0, #0x0
0xffff914290b4    84  stur x0, [x3, #23]
0xffff914290b8    88  add x0, x3, #0x20 (32)
0xffff914290bc    92  ldr x1, pc+188 (addr 0x0000ffff91429178)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914290c0    96  stur x1, [x0, #-1]
0xffff914290c4   100  movz x1, #0x400000000
0xffff914290c8   104  stur x1, [x0, #7]
0xffff914290cc   108  stur x0, [x3, #15]
0xffff914290d0   112  ldr x1, pc+176 (addr 0x0000ffff91429180)    ;; object: 0x49b04519 <the hole>
0xffff914290d4   116  stur x1, [x0, #15]
0xffff914290d8   120  ldr x1, pc+176 (addr 0x0000ffff91429188)    ;; object: 0x49b04519 <the hole>
0xffff914290dc   124  stur x1, [x0, #23]
0xffff914290e0   128  ldr x1, pc+176 (addr 0x0000ffff91429190)    ;; object: 0x49b04519 <the hole>
0xffff914290e4   132  stur x1, [x0, #31]
0xffff914290e8   136  ldr x1, pc+176 (addr 0x0000ffff91429198)    ;; object: 0x49b04519 <the hole>
0xffff914290ec   140  stur x1, [x0, #39]
0xffff914290f0   144  mov x0, x3
0xffff914290f4   148  add jssp, jssp, #0x8 (8)
0xffff914290f8   152  ret
0xffff914290fc   156  sub csp, jssp, #0x10 (16)
0xffff91429100   160  stp fp, lr, [jssp, #-16]!
0xffff91429104   164  movz fp, #0xa00000000
0xffff91429108   168  sub csp, jssp, #0x8 (8)
0xffff9142910c   172  str fp, [jssp, #-8]!
0xffff91429110   176  add fp, jssp, #0x8 (8)
0xffff91429114   180  movz x3, #0x0
0xffff91429118   184  mov x16, lr
0xffff9142911c   188  ldr x17, pc+132 (addr 0x0000ffff914291a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91429120   192  blr x17
0xffff91429124   196  movz x0, #0x5000000000
0xffff91429128   200  movz x10, #0x0
0xffff9142912c   204  sub csp, jssp, #0x10 (16)
0xffff91429130   208  stp x10, x0, [jssp, #-16]!
0xffff91429134   212  movz x0, #0x2
0xffff91429138   216  movz x1, #0x5b88
0xffff9142913c   220  movk x1, #0xe2, lsl #16
0xffff91429140   224  ldr x16, pc+104 (addr 0x0000ffff914291a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91429144   228  blr x16
0xffff91429148   232  str x0, [jssp, #24]
0xffff9142914c   236  ldr x16, pc+100 (addr 0x0000ffff914291b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91429150   240  blr x16
0xffff91429154   244  ldr lr, [jssp, #16]
0xffff91429158   248  ldp xzr, fp, [jssp], #24
0xffff9142915c   252  b #-0xcc (addr 0xffff91429090)
0xffff91429160   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff91429164   260  d63f03e0       constant
0xffff91429168   264  49b04201       constant
0xffff9142916c   268  00000000       constant
0xffff91429170   272  49b04201       constant
0xffff91429174   276  00000000       constant
0xffff91429178   280  36404259       constant
0xffff9142917c   284  00000000       constant
0xffff91429180   288  49b04519       constant
0xffff91429184   292  00000000       constant
0xffff91429188   296  49b04519       constant
0xffff9142918c   300  00000000       constant
0xffff91429190   304  49b04519       constant
0xffff91429194   308  00000000       constant
0xffff91429198   312  49b04519       constant
0xffff9142919c   316  00000000       constant
0xffff914291a0   320  91406820       constant
0xffff914291a4   324  0000ffff       constant
0xffff914291a8   328  91406260       constant
0xffff914291ac   332  0000ffff       constant
0xffff914291b0   336  914068e0       constant
0xffff914291b4   340  0000ffff       constant
0xffff914291b8   344  movz x16, #0x0
0xffff914291bc   348  sub csp, jssp, #0x10 (16)
0xffff914291c0   352  stp fp, lr, [jssp, #-16]!
0xffff914291c4   356  bl #+0x4 (addr 0xffff914291c8)
0xffff914291c8   360  movz x17, #0xa00000000
0xffff914291cc   364  sub csp, jssp, #0x10 (16)
0xffff914291d0   368  stp x17, cp, [jssp, #-16]!
0xffff914291d4   372  add fp, jssp, #0x10 (16)
0xffff914291d8   376  ldr x17, pc+24 (addr 0x0000ffff914291f0)    ;; lazy deoptimization bailout 0
0xffff914291dc   380  add x17, x17, x16
0xffff914291e0   384  br x17
0xffff914291e4   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914291e8   392  d63f03e0       constant
0xffff914291ec   396  d503201f       constant
0xffff914291f0   400  91206000       constant
0xffff914291f4   404  0000ffff       constant


Safepoints (size = 21)
0xffff91429148   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff914290a0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914290a8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914290bc  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914290d0  embedded object  (0x49b04519 <the hole>)
0xffff914290d8  embedded object  (0x49b04519 <the hole>)
0xffff914290e0  embedded object  (0x49b04519 <the hole>)
0xffff914290e8  embedded object  (0x49b04519 <the hole>)
0xffff9142911c  code target (STUB)  (0xffff91406820)
0xffff91429140  code target (STUB)  (0xffff91406260)
0xffff9142914c  code target (STUB)  (0xffff914068e0)
0xffff91429160  constant pool (size 88)
0xffff914291d8  runtime entry
0xffff914291e4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArrayNoArgumentConstructorStub
name = InternalArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 429)
0xffff91429060     0  movz w0, #0x6000
0xffff91429064     4  movk w0, #0x9, lsl #16
0xffff91429068     8  cmp w0, #0x30 (48)
0xffff9142906c    12  b.ls #+0x14c (addr 0xffff914291b8)
0xffff91429070    16  movz x2, #0xf2c0
0xffff91429074    20  movk x2, #0x4117, lsl #16
0xffff91429078    24  ldp x3, x0, [x2]
0xffff9142907c    28  adds x16, x3, #0x50 (80)
0xffff91429080    32  ccmp x16, x0, #nzCv, lo
0xffff91429084    36  b.hi #+0x78 (addr 0xffff914290fc)
0xffff91429088    40  str x16, [x2]
0xffff9142908c    44  orr x3, x3, #0x1
0xffff91429090    48  movz w0, #0x0
0xffff91429094    52  stur x0, [x3, #31]
0xffff91429098    56  ldur x0, [x1, #23]
0xffff9142909c    60  stur x0, [x3, #-1]
0xffff914290a0    64  ldr x0, pc+200 (addr 0x0000ffff91429168)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914290a4    68  stur x0, [x3, #7]
0xffff914290a8    72  ldr x0, pc+200 (addr 0x0000ffff91429170)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914290ac    76  stur x0, [x3, #15]
0xffff914290b0    80  movz x0, #0x0
0xffff914290b4    84  stur x0, [x3, #23]
0xffff914290b8    88  add x0, x3, #0x20 (32)
0xffff914290bc    92  ldr x1, pc+188 (addr 0x0000ffff91429178)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914290c0    96  stur x1, [x0, #-1]
0xffff914290c4   100  movz x1, #0x400000000
0xffff914290c8   104  stur x1, [x0, #7]
0xffff914290cc   108  stur x0, [x3, #15]
0xffff914290d0   112  ldr x1, pc+176 (addr 0x0000ffff91429180)    ;; object: 0x49b04519 <the hole>
0xffff914290d4   116  stur x1, [x0, #15]
0xffff914290d8   120  ldr x1, pc+176 (addr 0x0000ffff91429188)    ;; object: 0x49b04519 <the hole>
0xffff914290dc   124  stur x1, [x0, #23]
0xffff914290e0   128  ldr x1, pc+176 (addr 0x0000ffff91429190)    ;; object: 0x49b04519 <the hole>
0xffff914290e4   132  stur x1, [x0, #31]
0xffff914290e8   136  ldr x1, pc+176 (addr 0x0000ffff91429198)    ;; object: 0x49b04519 <the hole>
0xffff914290ec   140  stur x1, [x0, #39]
0xffff914290f0   144  mov x0, x3
0xffff914290f4   148  add jssp, jssp, #0x8 (8)
0xffff914290f8   152  ret
0xffff914290fc   156  sub csp, jssp, #0x10 (16)
0xffff91429100   160  stp fp, lr, [jssp, #-16]!
0xffff91429104   164  movz fp, #0xa00000000
0xffff91429108   168  sub csp, jssp, #0x8 (8)
0xffff9142910c   172  str fp, [jssp, #-8]!
0xffff91429110   176  add fp, jssp, #0x8 (8)
0xffff91429114   180  movz x3, #0x0
0xffff91429118   184  mov x16, lr
0xffff9142911c   188  ldr x17, pc+132 (addr 0x0000ffff914291a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91429120   192  blr x17
0xffff91429124   196  movz x0, #0x5000000000
0xffff91429128   200  movz x10, #0x0
0xffff9142912c   204  sub csp, jssp, #0x10 (16)
0xffff91429130   208  stp x10, x0, [jssp, #-16]!
0xffff91429134   212  movz x0, #0x2
0xffff91429138   216  movz x1, #0x5b88
0xffff9142913c   220  movk x1, #0xe2, lsl #16
0xffff91429140   224  ldr x16, pc+104 (addr 0x0000ffff914291a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91429144   228  blr x16
0xffff91429148   232  str x0, [jssp, #24]
0xffff9142914c   236  ldr x16, pc+100 (addr 0x0000ffff914291b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91429150   240  blr x16
0xffff91429154   244  ldr lr, [jssp, #16]
0xffff91429158   248  ldp xzr, fp, [jssp], #24
0xffff9142915c   252  b #-0xcc (addr 0xffff91429090)
0xffff91429160   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff91429164   260  d63f03e0       constant
0xffff91429168   264  49b04201       constant
0xffff9142916c   268  00000000       constant
0xffff91429170   272  49b04201       constant
0xffff91429174   276  00000000       constant
0xffff91429178   280  36404259       constant
0xffff9142917c   284  00000000       constant
0xffff91429180   288  49b04519       constant
0xffff91429184   292  00000000       constant
0xffff91429188   296  49b04519       constant
0xffff9142918c   300  00000000       constant
0xffff91429190   304  49b04519       constant
0xffff91429194   308  00000000       constant
0xffff91429198   312  49b04519       constant
0xffff9142919c   316  00000000       constant
0xffff914291a0   320  91406820       constant
0xffff914291a4   324  0000ffff       constant
0xffff914291a8   328  91406260       constant
0xffff914291ac   332  0000ffff       constant
0xffff914291b0   336  914068e0       constant
0xffff914291b4   340  0000ffff       constant
0xffff914291b8   344  movz x16, #0x0
0xffff914291bc   348  sub csp, jssp, #0x10 (16)
0xffff914291c0   352  stp fp, lr, [jssp, #-16]!
0xffff914291c4   356  bl #+0x4 (addr 0xffff914291c8)
0xffff914291c8   360  movz x17, #0xa00000000
0xffff914291cc   364  sub csp, jssp, #0x10 (16)
0xffff914291d0   368  stp x17, cp, [jssp, #-16]!
0xffff914291d4   372  add fp, jssp, #0x10 (16)
0xffff914291d8   376  ldr x17, pc+24 (addr 0x0000ffff914291f0)    ;; lazy deoptimization bailout 0
0xffff914291dc   380  add x17, x17, x16
0xffff914291e0   384  br x17
0xffff914291e4   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914291e8   392  d63f03e0       constant
0xffff914291ec   396  d503201f       constant
0xffff914291f0   400  91206000       constant
0xffff914291f4   404  0000ffff       constant


Safepoints (size = 21)
0xffff91429148   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff914290a0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914290a8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914290bc  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914290d0  embedded object  (0x49b04519 <the hole>)
0xffff914290d8  embedded object  (0x49b04519 <the hole>)
0xffff914290e0  embedded object  (0x49b04519 <the hole>)
0xffff914290e8  embedded object  (0x49b04519 <the hole>)
0xffff9142911c  code target (STUB)  (0xffff91406820)
0xffff91429140  code target (STUB)  (0xffff91406260)
0xffff9142914c  code target (STUB)  (0xffff914068e0)
0xffff91429160  constant pool (size 88)
0xffff914291d8  runtime entry
0xffff914291e4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 509)
0xffff91429280     0  movz x16, #0xa00000000
0xffff91429284     4  sub csp, jssp, #0x10 (16)
0xffff91429288     8  stp fp, lr, [jssp, #-16]!
0xffff9142928c    12  mov fp, jssp
0xffff91429290    16  sub csp, jssp, #0x8 (8)
0xffff91429294    20  sub jssp, jssp, #0x8 (8)
0xffff91429298    24  stur x16, [fp, #-8]
0xffff9142929c    28  ldr x2, [fp]
0xffff914292a0    32  ldur x3, [x2, #-8]
0xffff914292a4    36  movz x16, #0xe00000000
0xffff914292a8    40  cmp x3, x16
0xffff914292ac    44  csel x3, fp, x2, ne
0xffff914292b0    48  ldr x2, [x3, #16]
0xffff914292b4    52  tbnz w2, #0, #+0xd0 (addr 0xffff91429384)
0xffff914292b8    56  asr x4, x2, #32
0xffff914292bc    60  movz w16, #0x257f
0xffff914292c0    64  cmp w4, w16, lsl #3
0xffff914292c4    68  b.hs #+0x16c (addr 0xffff91429430)
0xffff914292c8    72  cbz w4, #+0xc (addr 0xffff914292d4)
0xffff914292cc    76  mov x2, x4
0xffff914292d0    80  b #+0xc (addr 0xffff914292dc)
0xffff914292d4    84  movz x2, #0x4
0xffff914292d8    88  movz x4, #0x0
0xffff914292dc    92  lsl x3, x2, #32
0xffff914292e0    96  lsl x4, x4, #32
0xffff914292e4   100  lsl w5, w2, #3
0xffff914292e8   104  add w5, w5, #0x10 (16)
0xffff914292ec   108  cmp w5, #0x96000 (614400)
0xffff914292f0   112  b.hs #+0x148 (addr 0xffff91429438)
0xffff914292f4   116  add w0, w5, #0x20 (32)
0xffff914292f8   120  sxtw x0, w0
0xffff914292fc   124  movz x5, #0xf2c0
0xffff91429300   128  movk x5, #0x4117, lsl #16
0xffff91429304   132  ldp x7, x16, [x5]
0xffff91429308   136  adds x6, x7, x0
0xffff9142930c   140  ccmp x6, x16, #nzCv, lo
0xffff91429310   144  b.hi #+0x9c (addr 0xffff914293ac)
0xffff91429314   148  str x6, [x5]
0xffff91429318   152  orr x7, x7, #0x1
0xffff9142931c   156  movz w0, #0x0
0xffff91429320   160  stur x0, [x7, #31]
0xffff91429324   164  ldur x0, [x1, #23]
0xffff91429328   168  stur x0, [x7, #-1]
0xffff9142932c   172  ldr x0, pc+204 (addr 0x0000ffff914293f8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91429330   176  stur x0, [x7, #7]
0xffff91429334   180  ldr x0, pc+204 (addr 0x0000ffff91429400)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91429338   184  stur x0, [x7, #15]
0xffff9142933c   188  stur x4, [x7, #23]
0xffff91429340   192  add x0, x7, #0x20 (32)
0xffff91429344   196  ldr x1, pc+196 (addr 0x0000ffff91429408)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91429348   200  stur x1, [x0, #-1]
0xffff9142934c   204  stur x3, [x0, #7]
0xffff91429350   208  stur x0, [x7, #15]
0xffff91429354   212  cmp w2, #0x0 (0)
0xffff91429358   216  b.le #+0x18 (addr 0xffff91429370)
0xffff9142935c   220  sub w2, w2, #0x1 (1)
0xffff91429360   224  ldr x1, pc+176 (addr 0x0000ffff91429410)    ;; object: 0x49b04519 <the hole>
0xffff91429364   228  add x3, x0, #0xf (15)
0xffff91429368   232  str x1, [x3, w2, sxtw #3]
0xffff9142936c   236  b #-0x18 (addr 0xffff91429354)
0xffff91429370   240  mov x0, x7
0xffff91429374   244  mov jssp, fp
0xffff91429378   248  ldp fp, lr, [jssp], #16
0xffff9142937c   252  add jssp, jssp, #0x10 (16)
0xffff91429380   256  ret
0xffff91429384   260  ldur x16, [x2, #-1]
0xffff91429388   264  ldr x17, [x26, #120]
0xffff9142938c   268  cmp x16, x17
0xffff91429390   272  b.ne #+0xb0 (addr 0xffff91429440)
0xffff91429394   276  ldur d29, [x2, #7]
0xffff91429398   280  fcvtzs w4, d29
0xffff9142939c   284  scvtf d0, w4
0xffff914293a0   288  fcmp d29, d0
0xffff914293a4   292  b.ne #+0x9c (addr 0xffff91429440)
0xffff914293a8   296  b #-0xec (addr 0xffff914292bc)
0xffff914293ac   300  movz x7, #0x0
0xffff914293b0   304  mov x16, lr
0xffff914293b4   308  ldr x17, pc+100 (addr 0x0000ffff91429418)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914293b8   312  blr x17
0xffff914293bc   316  lsl x0, x0, #32
0xffff914293c0   320  movz x10, #0x0
0xffff914293c4   324  sub csp, jssp, #0x10 (16)
0xffff914293c8   328  stp x10, x0, [jssp, #-16]!
0xffff914293cc   332  movz x0, #0x2
0xffff914293d0   336  movz x1, #0x5b88
0xffff914293d4   340  movk x1, #0xe2, lsl #16
0xffff914293d8   344  ldr x16, pc+72 (addr 0x0000ffff91429420)    ;; code: STUB, CEntryStub, minor: 5
0xffff914293dc   348  blr x16
0xffff914293e0   352  str x0, [jssp, #56]
0xffff914293e4   356  ldr x16, pc+68 (addr 0x0000ffff91429428)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914293e8   360  blr x16
0xffff914293ec   364  b #-0xd0 (addr 0xffff9142931c)
0xffff914293f0   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff914293f4   372  d63f03e0       constant
0xffff914293f8   376  49b04201       constant
0xffff914293fc   380  00000000       constant
0xffff91429400   384  49b04201       constant
0xffff91429404   388  00000000       constant
0xffff91429408   392  36404259       constant
0xffff9142940c   396  00000000       constant
0xffff91429410   400  49b04519       constant
0xffff91429414   404  00000000       constant
0xffff91429418   408  91406820       constant
0xffff9142941c   412  0000ffff       constant
0xffff91429420   416  91406260       constant
0xffff91429424   420  0000ffff       constant
0xffff91429428   424  914068e0       constant
0xffff9142942c   428  0000ffff       constant
0xffff91429430   432  movz x16, #0x0
0xffff91429434   436  bl #+0x14 (addr 0xffff91429448)
0xffff91429438   440  movz x16, #0x8
0xffff9142943c   444  bl #+0xc (addr 0xffff91429448)
0xffff91429440   448  movz x16, #0x10
0xffff91429444   452  bl #+0x4 (addr 0xffff91429448)
0xffff91429448   456  ldr x17, pc+24 (addr 0x0000ffff91429460)    ;; lazy deoptimization bailout 0
0xffff9142944c   460  add x17, x17, x16
0xffff91429450   464  br x17
0xffff91429454   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91429458   472  d63f03e0       constant
0xffff9142945c   476  d503201f       constant
0xffff91429460   480  91206000       constant
0xffff91429464   484  0000ffff       constant


Safepoints (size = 21)
0xffff914293e0   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff9142932c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91429334  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91429344  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91429360  embedded object  (0x49b04519 <the hole>)
0xffff914293b4  code target (STUB)  (0xffff91406820)
0xffff914293d8  code target (STUB)  (0xffff91406260)
0xffff914293e4  code target (STUB)  (0xffff914068e0)
0xffff914293f0  constant pool (size 64)
0xffff91429448  runtime entry
0xffff91429454  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArraySingleArgumentConstructorStub
name = InternalArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 509)
0xffff91429280     0  movz x16, #0xa00000000
0xffff91429284     4  sub csp, jssp, #0x10 (16)
0xffff91429288     8  stp fp, lr, [jssp, #-16]!
0xffff9142928c    12  mov fp, jssp
0xffff91429290    16  sub csp, jssp, #0x8 (8)
0xffff91429294    20  sub jssp, jssp, #0x8 (8)
0xffff91429298    24  stur x16, [fp, #-8]
0xffff9142929c    28  ldr x2, [fp]
0xffff914292a0    32  ldur x3, [x2, #-8]
0xffff914292a4    36  movz x16, #0xe00000000
0xffff914292a8    40  cmp x3, x16
0xffff914292ac    44  csel x3, fp, x2, ne
0xffff914292b0    48  ldr x2, [x3, #16]
0xffff914292b4    52  tbnz w2, #0, #+0xd0 (addr 0xffff91429384)
0xffff914292b8    56  asr x4, x2, #32
0xffff914292bc    60  movz w16, #0x257f
0xffff914292c0    64  cmp w4, w16, lsl #3
0xffff914292c4    68  b.hs #+0x16c (addr 0xffff91429430)
0xffff914292c8    72  cbz w4, #+0xc (addr 0xffff914292d4)
0xffff914292cc    76  mov x2, x4
0xffff914292d0    80  b #+0xc (addr 0xffff914292dc)
0xffff914292d4    84  movz x2, #0x4
0xffff914292d8    88  movz x4, #0x0
0xffff914292dc    92  lsl x3, x2, #32
0xffff914292e0    96  lsl x4, x4, #32
0xffff914292e4   100  lsl w5, w2, #3
0xffff914292e8   104  add w5, w5, #0x10 (16)
0xffff914292ec   108  cmp w5, #0x96000 (614400)
0xffff914292f0   112  b.hs #+0x148 (addr 0xffff91429438)
0xffff914292f4   116  add w0, w5, #0x20 (32)
0xffff914292f8   120  sxtw x0, w0
0xffff914292fc   124  movz x5, #0xf2c0
0xffff91429300   128  movk x5, #0x4117, lsl #16
0xffff91429304   132  ldp x7, x16, [x5]
0xffff91429308   136  adds x6, x7, x0
0xffff9142930c   140  ccmp x6, x16, #nzCv, lo
0xffff91429310   144  b.hi #+0x9c (addr 0xffff914293ac)
0xffff91429314   148  str x6, [x5]
0xffff91429318   152  orr x7, x7, #0x1
0xffff9142931c   156  movz w0, #0x0
0xffff91429320   160  stur x0, [x7, #31]
0xffff91429324   164  ldur x0, [x1, #23]
0xffff91429328   168  stur x0, [x7, #-1]
0xffff9142932c   172  ldr x0, pc+204 (addr 0x0000ffff914293f8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91429330   176  stur x0, [x7, #7]
0xffff91429334   180  ldr x0, pc+204 (addr 0x0000ffff91429400)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91429338   184  stur x0, [x7, #15]
0xffff9142933c   188  stur x4, [x7, #23]
0xffff91429340   192  add x0, x7, #0x20 (32)
0xffff91429344   196  ldr x1, pc+196 (addr 0x0000ffff91429408)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91429348   200  stur x1, [x0, #-1]
0xffff9142934c   204  stur x3, [x0, #7]
0xffff91429350   208  stur x0, [x7, #15]
0xffff91429354   212  cmp w2, #0x0 (0)
0xffff91429358   216  b.le #+0x18 (addr 0xffff91429370)
0xffff9142935c   220  sub w2, w2, #0x1 (1)
0xffff91429360   224  ldr x1, pc+176 (addr 0x0000ffff91429410)    ;; object: 0x49b04519 <the hole>
0xffff91429364   228  add x3, x0, #0xf (15)
0xffff91429368   232  str x1, [x3, w2, sxtw #3]
0xffff9142936c   236  b #-0x18 (addr 0xffff91429354)
0xffff91429370   240  mov x0, x7
0xffff91429374   244  mov jssp, fp
0xffff91429378   248  ldp fp, lr, [jssp], #16
0xffff9142937c   252  add jssp, jssp, #0x10 (16)
0xffff91429380   256  ret
0xffff91429384   260  ldur x16, [x2, #-1]
0xffff91429388   264  ldr x17, [x26, #120]
0xffff9142938c   268  cmp x16, x17
0xffff91429390   272  b.ne #+0xb0 (addr 0xffff91429440)
0xffff91429394   276  ldur d29, [x2, #7]
0xffff91429398   280  fcvtzs w4, d29
0xffff9142939c   284  scvtf d0, w4
0xffff914293a0   288  fcmp d29, d0
0xffff914293a4   292  b.ne #+0x9c (addr 0xffff91429440)
0xffff914293a8   296  b #-0xec (addr 0xffff914292bc)
0xffff914293ac   300  movz x7, #0x0
0xffff914293b0   304  mov x16, lr
0xffff914293b4   308  ldr x17, pc+100 (addr 0x0000ffff91429418)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914293b8   312  blr x17
0xffff914293bc   316  lsl x0, x0, #32
0xffff914293c0   320  movz x10, #0x0
0xffff914293c4   324  sub csp, jssp, #0x10 (16)
0xffff914293c8   328  stp x10, x0, [jssp, #-16]!
0xffff914293cc   332  movz x0, #0x2
0xffff914293d0   336  movz x1, #0x5b88
0xffff914293d4   340  movk x1, #0xe2, lsl #16
0xffff914293d8   344  ldr x16, pc+72 (addr 0x0000ffff91429420)    ;; code: STUB, CEntryStub, minor: 5
0xffff914293dc   348  blr x16
0xffff914293e0   352  str x0, [jssp, #56]
0xffff914293e4   356  ldr x16, pc+68 (addr 0x0000ffff91429428)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914293e8   360  blr x16
0xffff914293ec   364  b #-0xd0 (addr 0xffff9142931c)
0xffff914293f0   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff914293f4   372  d63f03e0       constant
0xffff914293f8   376  49b04201       constant
0xffff914293fc   380  00000000       constant
0xffff91429400   384  49b04201       constant
0xffff91429404   388  00000000       constant
0xffff91429408   392  36404259       constant
0xffff9142940c   396  00000000       constant
0xffff91429410   400  49b04519       constant
0xffff91429414   404  00000000       constant
0xffff91429418   408  91406820       constant
0xffff9142941c   412  0000ffff       constant
0xffff91429420   416  91406260       constant
0xffff91429424   420  0000ffff       constant
0xffff91429428   424  914068e0       constant
0xffff9142942c   428  0000ffff       constant
0xffff91429430   432  movz x16, #0x0
0xffff91429434   436  bl #+0x14 (addr 0xffff91429448)
0xffff91429438   440  movz x16, #0x8
0xffff9142943c   444  bl #+0xc (addr 0xffff91429448)
0xffff91429440   448  movz x16, #0x10
0xffff91429444   452  bl #+0x4 (addr 0xffff91429448)
0xffff91429448   456  ldr x17, pc+24 (addr 0x0000ffff91429460)    ;; lazy deoptimization bailout 0
0xffff9142944c   460  add x17, x17, x16
0xffff91429450   464  br x17
0xffff91429454   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91429458   472  d63f03e0       constant
0xffff9142945c   476  d503201f       constant
0xffff91429460   480  91206000       constant
0xffff91429464   484  0000ffff       constant


Safepoints (size = 21)
0xffff914293e0   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff9142932c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91429334  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91429344  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91429360  embedded object  (0x49b04519 <the hole>)
0xffff914293b4  code target (STUB)  (0xffff91406820)
0xffff914293d8  code target (STUB)  (0xffff91406260)
0xffff914293e4  code target (STUB)  (0xffff914068e0)
0xffff914293f0  constant pool (size 64)
0xffff91429448  runtime entry
0xffff91429454  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 437)
0xffff914294e0     0  movz x16, #0xa00000000
0xffff914294e4     4  sub csp, jssp, #0x10 (16)
0xffff914294e8     8  stp fp, lr, [jssp, #-16]!
0xffff914294ec    12  mov fp, jssp
0xffff914294f0    16  sub csp, jssp, #0x8 (8)
0xffff914294f4    20  sub jssp, jssp, #0x8 (8)
0xffff914294f8    24  stur x16, [fp, #-8]
0xffff914294fc    28  movz w16, #0x257f
0xffff91429500    32  cmp w0, w16, lsl #3
0xffff91429504    36  b.hs #+0x14c (addr 0xffff91429650)
0xffff91429508    40  lsl x2, x0, #32
0xffff9142950c    44  lsl w3, w0, #3
0xffff91429510    48  add w3, w3, #0x10 (16)
0xffff91429514    52  cmp w3, #0x96000 (614400)
0xffff91429518    56  b.hs #+0x140 (addr 0xffff91429658)
0xffff9142951c    60  add w3, w3, #0x20 (32)
0xffff91429520    64  sxtw x3, w3
0xffff91429524    68  movz x4, #0xf2c0
0xffff91429528    72  movk x4, #0x4117, lsl #16
0xffff9142952c    76  ldp x6, x16, [x4]
0xffff91429530    80  adds x5, x6, x3
0xffff91429534    84  ccmp x5, x16, #nzCv, lo
0xffff91429538    88  b.hi #+0x9c (addr 0xffff914295d4)
0xffff9142953c    92  str x5, [x4]
0xffff91429540    96  orr x6, x6, #0x1
0xffff91429544   100  movz w3, #0x0
0xffff91429548   104  stur x3, [x6, #31]
0xffff9142954c   108  ldur x1, [x1, #23]
0xffff91429550   112  stur x1, [x6, #-1]
0xffff91429554   116  ldr x1, pc+204 (addr 0x0000ffff91429620)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91429558   120  stur x1, [x6, #7]
0xffff9142955c   124  ldr x1, pc+204 (addr 0x0000ffff91429628)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91429560   128  stur x1, [x6, #15]
0xffff91429564   132  stur x2, [x6, #23]
0xffff91429568   136  add x1, x6, #0x20 (32)
0xffff9142956c   140  ldr x3, pc+196 (addr 0x0000ffff91429630)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91429570   144  stur x3, [x1, #-1]
0xffff91429574   148  stur x2, [x1, #7]
0xffff91429578   152  stur x1, [x6, #15]
0xffff9142957c   156  ldr x2, [fp]
0xffff91429580   160  ldur x3, [x2, #-8]
0xffff91429584   164  movz x16, #0xe00000000
0xffff91429588   168  cmp x3, x16
0xffff9142958c   172  csel x3, fp, x2, ne
0xffff91429590   176  movz x2, #0x0
0xffff91429594   180  cmp w0, w2
0xffff91429598   184  b.le #+0x20 (addr 0xffff914295b8)
0xffff9142959c   188  sub w4, w0, w2
0xffff914295a0   192  add w4, w4, #0x1 (1)
0xffff914295a4   196  ldr x4, [x3, w4, uxtw #3]
0xffff914295a8   200  add x5, x1, #0xf (15)
0xffff914295ac   204  str x4, [x5, w2, sxtw #3]
0xffff914295b0   208  add w2, w2, #0x1 (1)
0xffff914295b4   212  b #-0x20 (addr 0xffff91429594)
0xffff914295b8   216  add w0, w0, #0x1 (1)
0xffff914295bc   220  lsl x1, x0, #32
0xffff914295c0   224  mov x0, x6
0xffff914295c4   228  mov jssp, fp
0xffff914295c8   232  ldp fp, lr, [jssp], #16
0xffff914295cc   236  add jssp, jssp, x1, lsr #29
0xffff914295d0   240  ret
0xffff914295d4   244  movz x6, #0x0
0xffff914295d8   248  mov x16, lr
0xffff914295dc   252  ldr x17, pc+92 (addr 0x0000ffff91429638)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914295e0   256  blr x17
0xffff914295e4   260  lsl x0, x3, #32
0xffff914295e8   264  movz x10, #0x0
0xffff914295ec   268  sub csp, jssp, #0x10 (16)
0xffff914295f0   272  stp x10, x0, [jssp, #-16]!
0xffff914295f4   276  movz x0, #0x2
0xffff914295f8   280  movz x1, #0x5b88
0xffff914295fc   284  movk x1, #0xe2, lsl #16
0xffff91429600   288  ldr x16, pc+64 (addr 0x0000ffff91429640)    ;; code: STUB, CEntryStub, minor: 5
0xffff91429604   292  blr x16
0xffff91429608   296  str x0, [jssp, #48]
0xffff9142960c   300  ldr x16, pc+60 (addr 0x0000ffff91429648)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91429610   304  blr x16
0xffff91429614   308  b #-0xd0 (addr 0xffff91429544)
0xffff91429618   312  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9142961c   316  d63f03e0       constant
0xffff91429620   320  49b04201       constant
0xffff91429624   324  00000000       constant
0xffff91429628   328  49b04201       constant
0xffff9142962c   332  00000000       constant
0xffff91429630   336  36404259       constant
0xffff91429634   340  00000000       constant
0xffff91429638   344  91406820       constant
0xffff9142963c   348  0000ffff       constant
0xffff91429640   352  91406260       constant
0xffff91429644   356  0000ffff       constant
0xffff91429648   360  914068e0       constant
0xffff9142964c   364  0000ffff       constant
0xffff91429650   368  movz x16, #0x0
0xffff91429654   372  bl #+0xc (addr 0xffff91429660)
0xffff91429658   376  movz x16, #0x8
0xffff9142965c   380  bl #+0x4 (addr 0xffff91429660)
0xffff91429660   384  ldr x17, pc+24 (addr 0x0000ffff91429678)    ;; lazy deoptimization bailout 0
0xffff91429664   388  add x17, x17, x16
0xffff91429668   392  br x17
0xffff9142966c   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91429670   400  d63f03e0       constant
0xffff91429674   404  d503201f       constant
0xffff91429678   408  91206000       constant
0xffff9142967c   412  0000ffff       constant


Safepoints (size = 21)
0xffff91429608   296  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff91429554  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9142955c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9142956c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914295dc  code target (STUB)  (0xffff91406820)
0xffff91429600  code target (STUB)  (0xffff91406260)
0xffff9142960c  code target (STUB)  (0xffff914068e0)
0xffff91429618  constant pool (size 56)
0xffff91429660  runtime entry
0xffff9142966c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArrayNArgumentsConstructorStub
name = InternalArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 437)
0xffff914294e0     0  movz x16, #0xa00000000
0xffff914294e4     4  sub csp, jssp, #0x10 (16)
0xffff914294e8     8  stp fp, lr, [jssp, #-16]!
0xffff914294ec    12  mov fp, jssp
0xffff914294f0    16  sub csp, jssp, #0x8 (8)
0xffff914294f4    20  sub jssp, jssp, #0x8 (8)
0xffff914294f8    24  stur x16, [fp, #-8]
0xffff914294fc    28  movz w16, #0x257f
0xffff91429500    32  cmp w0, w16, lsl #3
0xffff91429504    36  b.hs #+0x14c (addr 0xffff91429650)
0xffff91429508    40  lsl x2, x0, #32
0xffff9142950c    44  lsl w3, w0, #3
0xffff91429510    48  add w3, w3, #0x10 (16)
0xffff91429514    52  cmp w3, #0x96000 (614400)
0xffff91429518    56  b.hs #+0x140 (addr 0xffff91429658)
0xffff9142951c    60  add w3, w3, #0x20 (32)
0xffff91429520    64  sxtw x3, w3
0xffff91429524    68  movz x4, #0xf2c0
0xffff91429528    72  movk x4, #0x4117, lsl #16
0xffff9142952c    76  ldp x6, x16, [x4]
0xffff91429530    80  adds x5, x6, x3
0xffff91429534    84  ccmp x5, x16, #nzCv, lo
0xffff91429538    88  b.hi #+0x9c (addr 0xffff914295d4)
0xffff9142953c    92  str x5, [x4]
0xffff91429540    96  orr x6, x6, #0x1
0xffff91429544   100  movz w3, #0x0
0xffff91429548   104  stur x3, [x6, #31]
0xffff9142954c   108  ldur x1, [x1, #23]
0xffff91429550   112  stur x1, [x6, #-1]
0xffff91429554   116  ldr x1, pc+204 (addr 0x0000ffff91429620)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91429558   120  stur x1, [x6, #7]
0xffff9142955c   124  ldr x1, pc+204 (addr 0x0000ffff91429628)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91429560   128  stur x1, [x6, #15]
0xffff91429564   132  stur x2, [x6, #23]
0xffff91429568   136  add x1, x6, #0x20 (32)
0xffff9142956c   140  ldr x3, pc+196 (addr 0x0000ffff91429630)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91429570   144  stur x3, [x1, #-1]
0xffff91429574   148  stur x2, [x1, #7]
0xffff91429578   152  stur x1, [x6, #15]
0xffff9142957c   156  ldr x2, [fp]
0xffff91429580   160  ldur x3, [x2, #-8]
0xffff91429584   164  movz x16, #0xe00000000
0xffff91429588   168  cmp x3, x16
0xffff9142958c   172  csel x3, fp, x2, ne
0xffff91429590   176  movz x2, #0x0
0xffff91429594   180  cmp w0, w2
0xffff91429598   184  b.le #+0x20 (addr 0xffff914295b8)
0xffff9142959c   188  sub w4, w0, w2
0xffff914295a0   192  add w4, w4, #0x1 (1)
0xffff914295a4   196  ldr x4, [x3, w4, uxtw #3]
0xffff914295a8   200  add x5, x1, #0xf (15)
0xffff914295ac   204  str x4, [x5, w2, sxtw #3]
0xffff914295b0   208  add w2, w2, #0x1 (1)
0xffff914295b4   212  b #-0x20 (addr 0xffff91429594)
0xffff914295b8   216  add w0, w0, #0x1 (1)
0xffff914295bc   220  lsl x1, x0, #32
0xffff914295c0   224  mov x0, x6
0xffff914295c4   228  mov jssp, fp
0xffff914295c8   232  ldp fp, lr, [jssp], #16
0xffff914295cc   236  add jssp, jssp, x1, lsr #29
0xffff914295d0   240  ret
0xffff914295d4   244  movz x6, #0x0
0xffff914295d8   248  mov x16, lr
0xffff914295dc   252  ldr x17, pc+92 (addr 0x0000ffff91429638)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914295e0   256  blr x17
0xffff914295e4   260  lsl x0, x3, #32
0xffff914295e8   264  movz x10, #0x0
0xffff914295ec   268  sub csp, jssp, #0x10 (16)
0xffff914295f0   272  stp x10, x0, [jssp, #-16]!
0xffff914295f4   276  movz x0, #0x2
0xffff914295f8   280  movz x1, #0x5b88
0xffff914295fc   284  movk x1, #0xe2, lsl #16
0xffff91429600   288  ldr x16, pc+64 (addr 0x0000ffff91429640)    ;; code: STUB, CEntryStub, minor: 5
0xffff91429604   292  blr x16
0xffff91429608   296  str x0, [jssp, #48]
0xffff9142960c   300  ldr x16, pc+60 (addr 0x0000ffff91429648)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91429610   304  blr x16
0xffff91429614   308  b #-0xd0 (addr 0xffff91429544)
0xffff91429618   312  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9142961c   316  d63f03e0       constant
0xffff91429620   320  49b04201       constant
0xffff91429624   324  00000000       constant
0xffff91429628   328  49b04201       constant
0xffff9142962c   332  00000000       constant
0xffff91429630   336  36404259       constant
0xffff91429634   340  00000000       constant
0xffff91429638   344  91406820       constant
0xffff9142963c   348  0000ffff       constant
0xffff91429640   352  91406260       constant
0xffff91429644   356  0000ffff       constant
0xffff91429648   360  914068e0       constant
0xffff9142964c   364  0000ffff       constant
0xffff91429650   368  movz x16, #0x0
0xffff91429654   372  bl #+0xc (addr 0xffff91429660)
0xffff91429658   376  movz x16, #0x8
0xffff9142965c   380  bl #+0x4 (addr 0xffff91429660)
0xffff91429660   384  ldr x17, pc+24 (addr 0x0000ffff91429678)    ;; lazy deoptimization bailout 0
0xffff91429664   388  add x17, x17, x16
0xffff91429668   392  br x17
0xffff9142966c   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91429670   400  d63f03e0       constant
0xffff91429674   404  d503201f       constant
0xffff91429678   408  91206000       constant
0xffff9142967c   412  0000ffff       constant


Safepoints (size = 21)
0xffff91429608   296  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff91429554  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9142955c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9142956c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914295dc  code target (STUB)  (0xffff91406820)
0xffff91429600  code target (STUB)  (0xffff91406260)
0xffff9142960c  code target (STUB)  (0xffff914068e0)
0xffff91429618  constant pool (size 56)
0xffff91429660  runtime entry
0xffff9142966c  constant pool (size 20)


kind = STUB
major_key = InternalArrayConstructorStub
name = InternalArrayConstructorStub
compiler = unknown
Instructions (size = 176)
0xffff91429700     0  ldur x10, [x1, #23]
0xffff91429704     4  ldrb w3, [x10, #13]
0xffff91429708     8  ubfx w3, w3, #3, #5
0xffff9142970c    12  cmp w3, #0x2 (2)
0xffff91429710    16  b.eq #+0x28 (addr 0xffff91429738)
0xffff91429714    20  cbz x0, #+0x14 (addr 0xffff91429728)
0xffff91429718    24  cmp x0, #0x1 (1)
0xffff9142971c    28  b.ne #+0x14 (addr 0xffff91429730)
0xffff91429720    32  ldr x16, pc+88 (addr 0x0000ffff91429778)    ;; code: STUB, InternalArraySingleArgumentConstructorStub, minor: 3
0xffff91429724    36  br x16
0xffff91429728    40  ldr x16, pc+88 (addr 0x0000ffff91429780)    ;; code: STUB, InternalArrayNoArgumentConstructorStub, minor: 3
0xffff9142972c    44  br x16
0xffff91429730    48  ldr x16, pc+88 (addr 0x0000ffff91429788)    ;; code: STUB, InternalArrayNArgumentsConstructorStub, minor: 3
0xffff91429734    52  br x16
0xffff91429738    56  cbz x0, #+0x24 (addr 0xffff9142975c)
0xffff9142973c    60  cmp x0, #0x1 (1)
0xffff91429740    64  b.ne #+0x24 (addr 0xffff91429764)
0xffff91429744    68  ldr x10, [jssp]
0xffff91429748    72  cbz x10, #+0xc (addr 0xffff91429754)
0xffff9142974c    76  ldr x16, pc+68 (addr 0x0000ffff91429790)    ;; code: STUB, InternalArraySingleArgumentConstructorStub, minor: 3
0xffff91429750    80  br x16
0xffff91429754    84  ldr x16, pc+68 (addr 0x0000ffff91429798)    ;; code: STUB, InternalArraySingleArgumentConstructorStub, minor: 2
0xffff91429758    88  br x16
0xffff9142975c    92  ldr x16, pc+68 (addr 0x0000ffff914297a0)    ;; code: STUB, InternalArrayNoArgumentConstructorStub, minor: 2
0xffff91429760    96  br x16
0xffff91429764   100  ldr x16, pc+68 (addr 0x0000ffff914297a8)    ;; code: STUB, InternalArrayNArgumentsConstructorStub, minor: 2
0xffff91429768   104  br x16
0xffff9142976c   108  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff91429770   112  d63f03e0       constant
0xffff91429774   116  d503201f       constant
0xffff91429778   120  91429280       constant
0xffff9142977c   124  0000ffff       constant
0xffff91429780   128  91429060       constant
0xffff91429784   132  0000ffff       constant
0xffff91429788   136  914294e0       constant
0xffff9142978c   140  0000ffff       constant
0xffff91429790   144  91429280       constant
0xffff91429794   148  0000ffff       constant
0xffff91429798   152  91428be0       constant
0xffff9142979c   156  0000ffff       constant
0xffff914297a0   160  914289c0       constant
0xffff914297a4   164  0000ffff       constant
0xffff914297a8   168  91428e40       constant
0xffff914297ac   172  0000ffff       constant


RelocInfo (size = 13)
0xffff91429720  code target (STUB)  (0xffff91429280)
0xffff91429728  code target (STUB)  (0xffff91429060)
0xffff91429730  code target (STUB)  (0xffff914294e0)
0xffff9142974c  code target (STUB)  (0xffff91429280)
0xffff91429754  code target (STUB)  (0xffff91428be0)
0xffff9142975c  code target (STUB)  (0xffff914289c0)
0xffff91429764  code target (STUB)  (0xffff91428e40)
0xffff9142976c  constant pool (size 68)


kind = STUB
major_key = ArrayConstructorStub
name = ArrayConstructorStub_Any
compiler = unknown
Instructions (size = 768)
0xffff914298c0     0  ldur cp, [x1, #39]
0xffff914298c4     4  cmp x3, x1
0xffff914298c8     8  b.ne #+0x1e0 (addr 0xffff91429aa8)
0xffff914298cc    12  ldr x16, [x26, #40]
0xffff914298d0    16  cmp x2, x16
0xffff914298d4    20  b.eq #+0x1a0 (addr 0xffff91429a74)
0xffff914298d8    24  ldursw x3, [x2, #11]
0xffff914298dc    28  and x3, x3, #0x7fff
0xffff914298e0    32  cbz x0, #+0xa4 (addr 0xffff91429984)
0xffff914298e4    36  cmp x0, #0x1 (1)
0xffff914298e8    40  b.ne #+0x114 (addr 0xffff914299fc)
0xffff914298ec    44  tbnz w3, #0, #+0x20 (addr 0xffff9142990c)
0xffff914298f0    48  ldr x10, [jssp]
0xffff914298f4    52  cbz x10, #+0x18 (addr 0xffff9142990c)
0xffff914298f8    56  orr x3, x3, #0x1
0xffff914298fc    60  ldur x11, [x2, #7]
0xffff91429900    64  movz x16, #0x100000000
0xffff91429904    68  add x11, x11, x16
0xffff91429908    72  stur x11, [x2, #7]
0xffff9142990c    76  cbnz x3, #+0xc (addr 0xffff91429918)
0xffff91429910    80  ldr x16, pc+448 (addr 0x0000ffff91429ad0)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 0
0xffff91429914    84  br x16
0xffff91429918    88  cmp x3, #0x1 (1)
0xffff9142991c    92  b.ne #+0xc (addr 0xffff91429928)
0xffff91429920    96  ldr x16, pc+440 (addr 0x0000ffff91429ad8)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 1
0xffff91429924   100  br x16
0xffff91429928   104  cmp x3, #0x4 (4)
0xffff9142992c   108  b.ne #+0xc (addr 0xffff91429938)
0xffff91429930   112  ldr x16, pc+432 (addr 0x0000ffff91429ae0)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 4
0xffff91429934   116  br x16
0xffff91429938   120  cmp x3, #0x5 (5)
0xffff9142993c   124  b.ne #+0xc (addr 0xffff91429948)
0xffff91429940   128  ldr x16, pc+424 (addr 0x0000ffff91429ae8)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 5
0xffff91429944   132  br x16
0xffff91429948   136  cmp x3, #0x2 (2)
0xffff9142994c   140  b.ne #+0xc (addr 0xffff91429958)
0xffff91429950   144  ldr x16, pc+416 (addr 0x0000ffff91429af0)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 2
0xffff91429954   148  br x16
0xffff91429958   152  cmp x3, #0x3 (3)
0xffff9142995c   156  b.ne #+0xc (addr 0xffff91429968)
0xffff91429960   160  ldr x16, pc+408 (addr 0x0000ffff91429af8)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 3
0xffff91429964   164  br x16
0xffff91429968   168  movz x0, #0x9f00000000
0xffff9142996c   172  sub csp, jssp, #0x8 (8)
0xffff91429970   176  str x0, [jssp, #-8]!
0xffff91429974   180  movz x0, #0x1
0xffff91429978   184  ldr x1, pc+392 (addr 0x0000ffff91429b00)    ;; external reference (Runtime::Abort)
0xffff9142997c   188  ldr x16, pc+396 (addr 0x0000ffff91429b08)    ;; code: STUB, CEntryStub, minor: 4
0xffff91429980   192  blr x16
0xffff91429984   196  cbnz x3, #+0xc (addr 0xffff91429990)
0xffff91429988   200  ldr x16, pc+392 (addr 0x0000ffff91429b10)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 0
0xffff9142998c   204  br x16
0xffff91429990   208  cmp x3, #0x1 (1)
0xffff91429994   212  b.ne #+0xc (addr 0xffff914299a0)
0xffff91429998   216  ldr x16, pc+384 (addr 0x0000ffff91429b18)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 1
0xffff9142999c   220  br x16
0xffff914299a0   224  cmp x3, #0x4 (4)
0xffff914299a4   228  b.ne #+0xc (addr 0xffff914299b0)
0xffff914299a8   232  ldr x16, pc+376 (addr 0x0000ffff91429b20)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 4
0xffff914299ac   236  br x16
0xffff914299b0   240  cmp x3, #0x5 (5)
0xffff914299b4   244  b.ne #+0xc (addr 0xffff914299c0)
0xffff914299b8   248  ldr x16, pc+368 (addr 0x0000ffff91429b28)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 5
0xffff914299bc   252  br x16
0xffff914299c0   256  cmp x3, #0x2 (2)
0xffff914299c4   260  b.ne #+0xc (addr 0xffff914299d0)
0xffff914299c8   264  ldr x16, pc+360 (addr 0x0000ffff91429b30)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 2
0xffff914299cc   268  br x16
0xffff914299d0   272  cmp x3, #0x3 (3)
0xffff914299d4   276  b.ne #+0xc (addr 0xffff914299e0)
0xffff914299d8   280  ldr x16, pc+352 (addr 0x0000ffff91429b38)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 3
0xffff914299dc   284  br x16
0xffff914299e0   288  movz x0, #0x9f00000000
0xffff914299e4   292  sub csp, jssp, #0x8 (8)
0xffff914299e8   296  str x0, [jssp, #-8]!
0xffff914299ec   300  movz x0, #0x1
0xffff914299f0   304  ldr x1, pc+336 (addr 0x0000ffff91429b40)    ;; external reference (Runtime::Abort)
0xffff914299f4   308  ldr x16, pc+340 (addr 0x0000ffff91429b48)    ;; code: STUB, CEntryStub, minor: 4
0xffff914299f8   312  blr x16
0xffff914299fc   316  cbnz x3, #+0xc (addr 0xffff91429a08)
0xffff91429a00   320  ldr x16, pc+336 (addr 0x0000ffff91429b50)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 0
0xffff91429a04   324  br x16
0xffff91429a08   328  cmp x3, #0x1 (1)
0xffff91429a0c   332  b.ne #+0xc (addr 0xffff91429a18)
0xffff91429a10   336  ldr x16, pc+328 (addr 0x0000ffff91429b58)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 1
0xffff91429a14   340  br x16
0xffff91429a18   344  cmp x3, #0x4 (4)
0xffff91429a1c   348  b.ne #+0xc (addr 0xffff91429a28)
0xffff91429a20   352  ldr x16, pc+320 (addr 0x0000ffff91429b60)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 4
0xffff91429a24   356  br x16
0xffff91429a28   360  cmp x3, #0x5 (5)
0xffff91429a2c   364  b.ne #+0xc (addr 0xffff91429a38)
0xffff91429a30   368  ldr x16, pc+312 (addr 0x0000ffff91429b68)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 5
0xffff91429a34   372  br x16
0xffff91429a38   376  cmp x3, #0x2 (2)
0xffff91429a3c   380  b.ne #+0xc (addr 0xffff91429a48)
0xffff91429a40   384  ldr x16, pc+304 (addr 0x0000ffff91429b70)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 2
0xffff91429a44   388  br x16
0xffff91429a48   392  cmp x3, #0x3 (3)
0xffff91429a4c   396  b.ne #+0xc (addr 0xffff91429a58)
0xffff91429a50   400  ldr x16, pc+296 (addr 0x0000ffff91429b78)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 3
0xffff91429a54   404  br x16
0xffff91429a58   408  movz x0, #0x9f00000000
0xffff91429a5c   412  sub csp, jssp, #0x8 (8)
0xffff91429a60   416  str x0, [jssp, #-8]!
0xffff91429a64   420  movz x0, #0x1
0xffff91429a68   424  ldr x1, pc+280 (addr 0x0000ffff91429b80)    ;; external reference (Runtime::Abort)
0xffff91429a6c   428  ldr x16, pc+284 (addr 0x0000ffff91429b88)    ;; code: STUB, CEntryStub, minor: 4
0xffff91429a70   432  blr x16
0xffff91429a74   436  cbz x0, #+0x24 (addr 0xffff91429a98)
0xffff91429a78   440  cmp x0, #0x1 (1)
0xffff91429a7c   444  b.ne #+0x24 (addr 0xffff91429aa0)
0xffff91429a80   448  ldr x10, [jssp]
0xffff91429a84   452  cbz x10, #+0xc (addr 0xffff91429a90)
0xffff91429a88   456  ldr x16, pc+264 (addr 0x0000ffff91429b90)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 257
0xffff91429a8c   460  br x16
0xffff91429a90   464  ldr x16, pc+264 (addr 0x0000ffff91429b98)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 256
0xffff91429a94   468  br x16
0xffff91429a98   472  ldr x16, pc+264 (addr 0x0000ffff91429ba0)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 256
0xffff91429a9c   476  br x16
0xffff91429aa0   480  ldr x16, pc+264 (addr 0x0000ffff91429ba8)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 256
0xffff91429aa4   484  br x16
0xffff91429aa8   488  str x1, [jssp, x0, lsl #3]
0xffff91429aac   492  add x0, x0, #0x3 (3)
0xffff91429ab0   496  sub csp, jssp, #0x10 (16)
0xffff91429ab4   500  stp x2, x3, [jssp, #-16]!
0xffff91429ab8   504  ldr x1, pc+248 (addr 0x0000ffff91429bb0)    ;; external reference (Runtime::NewArray)
0xffff91429abc   508  ldr x16, pc+252 (addr 0x0000ffff91429bb8)    ;; code: STUB, CEntryStub, minor: 4
0xffff91429ac0   512  br x16
0xffff91429ac4   516  580007df       constant pool begin (num_const = 62)    ;; constant pool
0xffff91429ac8   520  d63f03e0       constant
0xffff91429acc   524  d503201f       constant
0xffff91429ad0   528  914082a0       constant
0xffff91429ad4   532  0000ffff       constant
0xffff91429ad8   536  91408840       constant
0xffff91429adc   540  0000ffff       constant
0xffff91429ae0   544  91408e00       constant
0xffff91429ae4   548  0000ffff       constant
0xffff91429ae8   552  91409080       constant
0xffff91429aec   556  0000ffff       constant
0xffff91429af0   560  91409300       constant
0xffff91429af4   564  0000ffff       constant
0xffff91429af8   568  91409580       constant
0xffff91429afc   572  0000ffff       constant
0xffff91429b00   576  00eda820       constant
0xffff91429b04   580  00000000       constant
0xffff91429b08   584  91406060       constant
0xffff91429b0c   588  0000ffff       constant
0xffff91429b10   592  914069a0       constant
0xffff91429b14   596  0000ffff       constant
0xffff91429b18   600  91406e00       constant
0xffff91429b1c   604  0000ffff       constant
0xffff91429b20   608  91407280       constant
0xffff91429b24   612  0000ffff       constant
0xffff91429b28   616  91407480       constant
0xffff91429b2c   620  0000ffff       constant
0xffff91429b30   624  91407680       constant
0xffff91429b34   628  0000ffff       constant
0xffff91429b38   632  914078a0       constant
0xffff91429b3c   636  0000ffff       constant
0xffff91429b40   640  00eda820       constant
0xffff91429b44   644  00000000       constant
0xffff91429b48   648  91406060       constant
0xffff91429b4c   652  0000ffff       constant
0xffff91429b50   656  91409fe0       constant
0xffff91429b54   660  0000ffff       constant
0xffff91429b58   664  9140a560       constant
0xffff91429b5c   668  0000ffff       constant
0xffff91429b60   672  9140aae0       constant
0xffff91429b64   676  0000ffff       constant
0xffff91429b68   680  9140ad40       constant
0xffff91429b6c   684  0000ffff       constant
0xffff91429b70   688  9140afa0       constant
0xffff91429b74   692  0000ffff       constant
0xffff91429b78   696  9140b1e0       constant
0xffff91429b7c   700  0000ffff       constant
0xffff91429b80   704  00eda820       constant
0xffff91429b84   708  00000000       constant
0xffff91429b88   712  91406060       constant
0xffff91429b8c   716  0000ffff       constant
0xffff91429b90   720  91408b80       constant
0xffff91429b94   724  0000ffff       constant
0xffff91429b98   728  914085e0       constant
0xffff91429b9c   732  0000ffff       constant
0xffff91429ba0   736  91406be0       constant
0xffff91429ba4   740  0000ffff       constant
0xffff91429ba8   744  9140a300       constant
0xffff91429bac   748  0000ffff       constant
0xffff91429bb0   752  00de2850       constant
0xffff91429bb4   756  00000000       constant
0xffff91429bb8   760  91406060       constant
0xffff91429bbc   764  0000ffff       constant


RelocInfo (size = 42)
0xffff91429910  code target (STUB)  (0xffff914082a0)
0xffff91429920  code target (STUB)  (0xffff91408840)
0xffff91429930  code target (STUB)  (0xffff91408e00)
0xffff91429940  code target (STUB)  (0xffff91409080)
0xffff91429950  code target (STUB)  (0xffff91409300)
0xffff91429960  code target (STUB)  (0xffff91409580)
0xffff91429978  external reference (Runtime::Abort)  (0xeda820)
0xffff9142997c  code target (STUB)  (0xffff91406060)
0xffff91429988  code target (STUB)  (0xffff914069a0)
0xffff91429998  code target (STUB)  (0xffff91406e00)
0xffff914299a8  code target (STUB)  (0xffff91407280)
0xffff914299b8  code target (STUB)  (0xffff91407480)
0xffff914299c8  code target (STUB)  (0xffff91407680)
0xffff914299d8  code target (STUB)  (0xffff914078a0)
0xffff914299f0  external reference (Runtime::Abort)  (0xeda820)
0xffff914299f4  code target (STUB)  (0xffff91406060)
0xffff91429a00  code target (STUB)  (0xffff91409fe0)
0xffff91429a10  code target (STUB)  (0xffff9140a560)
0xffff91429a20  code target (STUB)  (0xffff9140aae0)
0xffff91429a30  code target (STUB)  (0xffff9140ad40)
0xffff91429a40  code target (STUB)  (0xffff9140afa0)
0xffff91429a50  code target (STUB)  (0xffff9140b1e0)
0xffff91429a68  external reference (Runtime::Abort)  (0xeda820)
0xffff91429a6c  code target (STUB)  (0xffff91406060)
0xffff91429a88  code target (STUB)  (0xffff91408b80)
0xffff91429a90  code target (STUB)  (0xffff914085e0)
0xffff91429a98  code target (STUB)  (0xffff91406be0)
0xffff91429aa0  code target (STUB)  (0xffff9140a300)
0xffff91429ab8  external reference (Runtime::NewArray)  (0xde2850)
0xffff91429abc  code target (STUB)  (0xffff91406060)
0xffff91429ac4  constant pool (size 252)


kind = STUB
major_key = StringToNumberStub
name = StringToNumberStub
compiler = unknown
Instructions (size = 80)
0xffff91429cc0     0  ldur x2, [x0, #7]
0xffff91429cc4     4  movz x16, #0x2
0xffff91429cc8     8  movk x16, #0xe000, lsl #16
0xffff91429ccc    12  tst x2, x16
0xffff91429cd0    16  b.ne #+0x10 (addr 0xffff91429ce0)
0xffff91429cd4    20  ubfx x0, x2, #2, #24
0xffff91429cd8    24  lsl x0, x0, #32
0xffff91429cdc    28  ret
0xffff91429ce0    32  sub csp, jssp, #0x8 (8)
0xffff91429ce4    36  str x0, [jssp, #-8]!
0xffff91429ce8    40  movz x0, #0x1
0xffff91429cec    44  ldr x1, pc+20 (addr 0x0000ffff91429d00)    ;; external reference (Runtime::StringToNumber)
0xffff91429cf0    48  ldr x16, pc+24 (addr 0x0000ffff91429d08)    ;; code: STUB, CEntryStub, minor: 4
0xffff91429cf4    52  br x16
0xffff91429cf8    56  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff91429cfc    60  d63f03e0       constant
0xffff91429d00    64  00e3bf28       constant
0xffff91429d04    68  00000000       constant
0xffff91429d08    72  91406060       constant
0xffff91429d0c    76  0000ffff       constant


RelocInfo (size = 9)
0xffff91429cec  external reference (Runtime::StringToNumber)  (0xe3bf28)
0xffff91429cf0  code target (STUB)  (0xffff91406060)
0xffff91429cf8  constant pool (size 24)


kind = STUB
major_key = NonNumberToNumberStub
name = NonNumberToNumberStub
compiler = unknown
Instructions (size = 96)
0xffff91429d80     0  ldur x1, [x0, #-1]
0xffff91429d84     4  ldrb w1, [x1, #11]
0xffff91429d88     8  cmp x1, #0x80 (128)
0xffff91429d8c    12  b.hs #+0xc (addr 0xffff91429d98)
0xffff91429d90    16  ldr x16, pc+56 (addr 0x0000ffff91429dc8)    ;; code: STUB, StringToNumberStub, minor: 0
0xffff91429d94    20  br x16
0xffff91429d98    24  cmp x1, #0x83 (131)
0xffff91429d9c    28  b.ne #+0xc (addr 0xffff91429da8)
0xffff91429da0    32  ldur x0, [x0, #15]
0xffff91429da4    36  ret
0xffff91429da8    40  sub csp, jssp, #0x8 (8)
0xffff91429dac    44  str x0, [jssp, #-8]!
0xffff91429db0    48  movz x0, #0x1
0xffff91429db4    52  ldr x1, pc+28 (addr 0x0000ffff91429dd0)    ;; external reference (Runtime::ToNumber)
0xffff91429db8    56  ldr x16, pc+32 (addr 0x0000ffff91429dd8)    ;; code: STUB, CEntryStub, minor: 4
0xffff91429dbc    60  br x16
0xffff91429dc0    64  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91429dc4    68  d63f03e0       constant
0xffff91429dc8    72  91429cc0       constant
0xffff91429dcc    76  0000ffff       constant
0xffff91429dd0    80  00e48d48       constant
0xffff91429dd4    84  00000000       constant
0xffff91429dd8    88  91406060       constant
0xffff91429ddc    92  0000ffff       constant


RelocInfo (size = 10)
0xffff91429d90  code target (STUB)  (0xffff91429cc0)
0xffff91429db4  external reference (Runtime::ToNumber)  (0xe48d48)
0xffff91429db8  code target (STUB)  (0xffff91406060)
0xffff91429dc0  constant pool (size 32)


kind = STUB
major_key = ToNumberStub
name = ToNumberStub
compiler = unknown
Instructions (size = 56)
0xffff91429e40     0  tbnz w0, #0, #+0x8 (addr 0xffff91429e48)
0xffff91429e44     4  ret
0xffff91429e48     8  ldur x1, [x0, #-1]
0xffff91429e4c    12  ldrb w1, [x1, #11]
0xffff91429e50    16  cmp x1, #0x81 (129)
0xffff91429e54    20  b.ne #+0x8 (addr 0xffff91429e5c)
0xffff91429e58    24  ret
0xffff91429e5c    28  ldr x16, pc+20 (addr 0x0000ffff91429e70)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff91429e60    32  br x16
0xffff91429e64    36  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91429e68    40  d63f03e0       constant
0xffff91429e6c    44  d503201f       constant
0xffff91429e70    48  91429d80       constant
0xffff91429e74    52  0000ffff       constant


RelocInfo (size = 7)
0xffff91429e5c  code target (STUB)  (0xffff91429d80)
0xffff91429e64  constant pool (size 20)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff9142a3e0     0  sub csp, jssp, #0x10 (16)
0xffff9142a3e4     4  stp x2, x1, [jssp, #-16]!
0xffff9142a3e8     8  ldur x5, [x0, #7]
0xffff9142a3ec    12  ubfx x1, x5, #52, #11
0xffff9142a3f0    16  cmp x1, #0x453 (1107)
0xffff9142a3f4    20  csel x5, xzr, x5, ge
0xffff9142a3f8    24  b.ge #+0x1c (addr 0xffff9142a414)
0xffff9142a3fc    28  ubfx x2, x5, #0, #52
0xffff9142a400    32  orr x2, x2, #0x10000000000000
0xffff9142a404    36  tst x5, #0x8000000000000000
0xffff9142a408    40  cneg x2, x2, ne
0xffff9142a40c    44  sub x1, x1, #0x433 (1075)
0xffff9142a410    48  lsl x5, x2, x1
0xffff9142a414    52  ldp x2, x1, [jssp], #16
0xffff9142a418    56  ret


RelocInfo (size = 0)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = NumberToStringStub
compiler = crankshaft
Instructions (size = 477)
0xffff9142a480     0  movz x16, #0xa00000000
0xffff9142a484     4  sub csp, jssp, #0x10 (16)
0xffff9142a488     8  stp fp, lr, [jssp, #-16]!
0xffff9142a48c    12  mov fp, jssp
0xffff9142a490    16  sub csp, jssp, #0x28 (40)
0xffff9142a494    20  sub jssp, jssp, #0x28 (40)
0xffff9142a498    24  stur x16, [fp, #-8]
0xffff9142a49c    28  str d0, [jssp]
0xffff9142a4a0    32  str d1, [jssp, #8]
0xffff9142a4a4    36  stur x0, [fp, #-16]
0xffff9142a4a8    40  stur cp, [fp, #-24]
0xffff9142a4ac    44  mov x1, cp
0xffff9142a4b0    48  ldr x2, [x26, #368]
0xffff9142a4b4    52  ldur w3, [x2, #11]
0xffff9142a4b8    56  asr w3, w3, #1
0xffff9142a4bc    60  sub w3, w3, #0x1 (1)
0xffff9142a4c0    64  tbz w0, #0, #+0x60 (addr 0xffff9142a520)
0xffff9142a4c4    68  ldur x4, [x0, #-1]
0xffff9142a4c8    72  ldr x16, pc+296 (addr 0x0000ffff9142a5f0)    ;; object: 0x36404411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9142a4cc    76  cmp x4, x16
0xffff9142a4d0    80  b.eq #+0x8 (addr 0xffff9142a4d8)
0xffff9142a4d4    84  b #+0x13c (addr 0xffff9142a610)
0xffff9142a4d8    88  ldur w4, [x0, #7]
0xffff9142a4dc    92  ldur w5, [x0, #11]
0xffff9142a4e0    96  eor w4, w5, w4
0xffff9142a4e4   100  and w3, w4, w3
0xffff9142a4e8   104  lsl w3, w3, #1
0xffff9142a4ec   108  add x4, x2, #0xf (15)
0xffff9142a4f0   112  ldr x5, [x4, w3, sxtw #3]
0xffff9142a4f4   116  tbz w5, #0, #+0x4c (addr 0xffff9142a540)
0xffff9142a4f8   120  ldur x4, [x5, #-1]
0xffff9142a4fc   124  ldr x16, pc+252 (addr 0x0000ffff9142a5f8)    ;; object: 0x36404411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9142a500   128  cmp x4, x16
0xffff9142a504   132  b.ne #+0x3c (addr 0xffff9142a540)
0xffff9142a508   136  ldur d0, [x5, #7]
0xffff9142a50c   140  ldur d1, [x0, #7]
0xffff9142a510   144  fcmp d0, d1
0xffff9142a514   148  b.vs #+0x2c (addr 0xffff9142a540)
0xffff9142a518   152  b.eq #+0x4c (addr 0xffff9142a564)
0xffff9142a51c   156  b #+0x24 (addr 0xffff9142a540)
0xffff9142a520   160  tbnz w0, #0, #+0x68 (addr 0xffff9142a588)
0xffff9142a524   164  asr x5, x0, #32
0xffff9142a528   168  and w3, w5, w3
0xffff9142a52c   172  lsl w3, w3, #1
0xffff9142a530   176  add x4, x2, #0xf (15)
0xffff9142a534   180  ldr x5, [x4, w3, sxtw #3]
0xffff9142a538   184  cmp x0, x5
0xffff9142a53c   188  b.eq #+0x28 (addr 0xffff9142a564)
0xffff9142a540   192  sub csp, jssp, #0x8 (8)
0xffff9142a544   196  str x0, [jssp, #-8]!
0xffff9142a548   200  mov cp, x1
0xffff9142a54c   204  movz x0, #0x1
0xffff9142a550   208  movz x1, #0xce00
0xffff9142a554   212  movk x1, #0xe3, lsl #16
0xffff9142a558   216  ldr x16, pc+168 (addr 0x0000ffff9142a600)    ;; code: STUB, CEntryStub, minor: 4
0xffff9142a55c   220  blr x16
0xffff9142a560   224  b #+0x10 (addr 0xffff9142a570)
0xffff9142a564   228  add x0, x2, #0x17 (23)
0xffff9142a568   232  ldr x1, [x0, w3, sxtw #3]
0xffff9142a56c   236  mov x0, x1
0xffff9142a570   240  ldur cp, [fp, #-24]
0xffff9142a574   244  ldr d0, [jssp]
0xffff9142a578   248  ldr d1, [jssp, #8]
0xffff9142a57c   252  mov jssp, fp
0xffff9142a580   256  ldp fp, lr, [jssp], #16
0xffff9142a584   260  ret
0xffff9142a588   264  ldur x16, [x0, #-1]
0xffff9142a58c   268  ldr x17, [x26, #120]
0xffff9142a590   272  cmp x16, x17
0xffff9142a594   276  b.ne #+0x30 (addr 0xffff9142a5c4)
0xffff9142a598   280  ldur d30, [x0, #7]
0xffff9142a59c   284  fcvtzs x5, d30
0xffff9142a5a0   288  cmp x5, #0x1 (1)
0xffff9142a5a4   292  ccmn x5, #1, #nzcV, vc
0xffff9142a5a8   296  b.vc #+0x18 (addr 0xffff9142a5c0)
0xffff9142a5ac   300  sub csp, jssp, #0x8 (8)
0xffff9142a5b0   304  str lr, [jssp, #-8]!
0xffff9142a5b4   308  ldr x16, pc+84 (addr 0x0000ffff9142a608)    ;; code: STUB, DoubleToIStub, minor: 127296
0xffff9142a5b8   312  blr x16
0xffff9142a5bc   316  ldr lr, [jssp], #8
0xffff9142a5c0   320  b #+0x24 (addr 0xffff9142a5e4)
0xffff9142a5c4   324  ldp x5, x4, [x26, #64]
0xffff9142a5c8   328  cmp x0, x5
0xffff9142a5cc   332  cset x5, eq
0xffff9142a5d0   336  ccmp x0, x4, #nZcv, ne
0xffff9142a5d4   340  b.eq #+0x10 (addr 0xffff9142a5e4)
0xffff9142a5d8   344  ldr x16, [x26, #40]
0xffff9142a5dc   348  cmp x0, x16
0xffff9142a5e0   352  b.ne #+0x38 (addr 0xffff9142a618)
0xffff9142a5e4   356  b #-0xbc (addr 0xffff9142a528)
0xffff9142a5e8   360  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff9142a5ec   364  d63f03e0       constant
0xffff9142a5f0   368  36404411       constant
0xffff9142a5f4   372  00000000       constant
0xffff9142a5f8   376  36404411       constant
0xffff9142a5fc   380  00000000       constant
0xffff9142a600   384  91406060       constant
0xffff9142a604   388  0000ffff       constant
0xffff9142a608   392  9142a3e0       constant
0xffff9142a60c   396  0000ffff       constant
0xffff9142a610   400  movz x16, #0x0
0xffff9142a614   404  bl #+0xc (addr 0xffff9142a620)
0xffff9142a618   408  movz x16, #0x10
0xffff9142a61c   412  bl #+0x4 (addr 0xffff9142a620)
0xffff9142a620   416  ldr d0, [jssp]
0xffff9142a624   420  ldr d1, [jssp, #8]
0xffff9142a628   424  ldr x17, pc+24 (addr 0x0000ffff9142a640)    ;; lazy deoptimization bailout 0
0xffff9142a62c   428  add x17, x17, x16
0xffff9142a630   432  br x17
0xffff9142a634   436  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9142a638   440  d63f03e0       constant
0xffff9142a63c   444  d503201f       constant
0xffff9142a640   448  91206000       constant
0xffff9142a644   452  0000ffff       constant


Safepoints (size = 21)
0xffff9142a560   224  0011000 (sp -> fp)       1

RelocInfo (size = 26)
0xffff9142a4c8  embedded object  (0x36404411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9142a4fc  embedded object  (0x36404411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9142a558  code target (STUB)  (0xffff91406060)
0xffff9142a5b4  code target (STUB)  (0xffff9142a3e0)
0xffff9142a5e8  constant pool (size 40)
0xffff9142a628  runtime entry
0xffff9142a634  constant pool (size 20)

--- End code ---
kind = STUB
major_key = NumberToStringStub
name = NumberToStringStub
compiler = crankshaft
Instructions (size = 477)
0xffff9142a480     0  movz x16, #0xa00000000
0xffff9142a484     4  sub csp, jssp, #0x10 (16)
0xffff9142a488     8  stp fp, lr, [jssp, #-16]!
0xffff9142a48c    12  mov fp, jssp
0xffff9142a490    16  sub csp, jssp, #0x28 (40)
0xffff9142a494    20  sub jssp, jssp, #0x28 (40)
0xffff9142a498    24  stur x16, [fp, #-8]
0xffff9142a49c    28  str d0, [jssp]
0xffff9142a4a0    32  str d1, [jssp, #8]
0xffff9142a4a4    36  stur x0, [fp, #-16]
0xffff9142a4a8    40  stur cp, [fp, #-24]
0xffff9142a4ac    44  mov x1, cp
0xffff9142a4b0    48  ldr x2, [x26, #368]
0xffff9142a4b4    52  ldur w3, [x2, #11]
0xffff9142a4b8    56  asr w3, w3, #1
0xffff9142a4bc    60  sub w3, w3, #0x1 (1)
0xffff9142a4c0    64  tbz w0, #0, #+0x60 (addr 0xffff9142a520)
0xffff9142a4c4    68  ldur x4, [x0, #-1]
0xffff9142a4c8    72  ldr x16, pc+296 (addr 0x0000ffff9142a5f0)    ;; object: 0x36404411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9142a4cc    76  cmp x4, x16
0xffff9142a4d0    80  b.eq #+0x8 (addr 0xffff9142a4d8)
0xffff9142a4d4    84  b #+0x13c (addr 0xffff9142a610)
0xffff9142a4d8    88  ldur w4, [x0, #7]
0xffff9142a4dc    92  ldur w5, [x0, #11]
0xffff9142a4e0    96  eor w4, w5, w4
0xffff9142a4e4   100  and w3, w4, w3
0xffff9142a4e8   104  lsl w3, w3, #1
0xffff9142a4ec   108  add x4, x2, #0xf (15)
0xffff9142a4f0   112  ldr x5, [x4, w3, sxtw #3]
0xffff9142a4f4   116  tbz w5, #0, #+0x4c (addr 0xffff9142a540)
0xffff9142a4f8   120  ldur x4, [x5, #-1]
0xffff9142a4fc   124  ldr x16, pc+252 (addr 0x0000ffff9142a5f8)    ;; object: 0x36404411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9142a500   128  cmp x4, x16
0xffff9142a504   132  b.ne #+0x3c (addr 0xffff9142a540)
0xffff9142a508   136  ldur d0, [x5, #7]
0xffff9142a50c   140  ldur d1, [x0, #7]
0xffff9142a510   144  fcmp d0, d1
0xffff9142a514   148  b.vs #+0x2c (addr 0xffff9142a540)
0xffff9142a518   152  b.eq #+0x4c (addr 0xffff9142a564)
0xffff9142a51c   156  b #+0x24 (addr 0xffff9142a540)
0xffff9142a520   160  tbnz w0, #0, #+0x68 (addr 0xffff9142a588)
0xffff9142a524   164  asr x5, x0, #32
0xffff9142a528   168  and w3, w5, w3
0xffff9142a52c   172  lsl w3, w3, #1
0xffff9142a530   176  add x4, x2, #0xf (15)
0xffff9142a534   180  ldr x5, [x4, w3, sxtw #3]
0xffff9142a538   184  cmp x0, x5
0xffff9142a53c   188  b.eq #+0x28 (addr 0xffff9142a564)
0xffff9142a540   192  sub csp, jssp, #0x8 (8)
0xffff9142a544   196  str x0, [jssp, #-8]!
0xffff9142a548   200  mov cp, x1
0xffff9142a54c   204  movz x0, #0x1
0xffff9142a550   208  movz x1, #0xce00
0xffff9142a554   212  movk x1, #0xe3, lsl #16
0xffff9142a558   216  ldr x16, pc+168 (addr 0x0000ffff9142a600)    ;; code: STUB, CEntryStub, minor: 4
0xffff9142a55c   220  blr x16
0xffff9142a560   224  b #+0x10 (addr 0xffff9142a570)
0xffff9142a564   228  add x0, x2, #0x17 (23)
0xffff9142a568   232  ldr x1, [x0, w3, sxtw #3]
0xffff9142a56c   236  mov x0, x1
0xffff9142a570   240  ldur cp, [fp, #-24]
0xffff9142a574   244  ldr d0, [jssp]
0xffff9142a578   248  ldr d1, [jssp, #8]
0xffff9142a57c   252  mov jssp, fp
0xffff9142a580   256  ldp fp, lr, [jssp], #16
0xffff9142a584   260  ret
0xffff9142a588   264  ldur x16, [x0, #-1]
0xffff9142a58c   268  ldr x17, [x26, #120]
0xffff9142a590   272  cmp x16, x17
0xffff9142a594   276  b.ne #+0x30 (addr 0xffff9142a5c4)
0xffff9142a598   280  ldur d30, [x0, #7]
0xffff9142a59c   284  fcvtzs x5, d30
0xffff9142a5a0   288  cmp x5, #0x1 (1)
0xffff9142a5a4   292  ccmn x5, #1, #nzcV, vc
0xffff9142a5a8   296  b.vc #+0x18 (addr 0xffff9142a5c0)
0xffff9142a5ac   300  sub csp, jssp, #0x8 (8)
0xffff9142a5b0   304  str lr, [jssp, #-8]!
0xffff9142a5b4   308  ldr x16, pc+84 (addr 0x0000ffff9142a608)    ;; code: STUB, DoubleToIStub, minor: 127296
0xffff9142a5b8   312  blr x16
0xffff9142a5bc   316  ldr lr, [jssp], #8
0xffff9142a5c0   320  b #+0x24 (addr 0xffff9142a5e4)
0xffff9142a5c4   324  ldp x5, x4, [x26, #64]
0xffff9142a5c8   328  cmp x0, x5
0xffff9142a5cc   332  cset x5, eq
0xffff9142a5d0   336  ccmp x0, x4, #nZcv, ne
0xffff9142a5d4   340  b.eq #+0x10 (addr 0xffff9142a5e4)
0xffff9142a5d8   344  ldr x16, [x26, #40]
0xffff9142a5dc   348  cmp x0, x16
0xffff9142a5e0   352  b.ne #+0x38 (addr 0xffff9142a618)
0xffff9142a5e4   356  b #-0xbc (addr 0xffff9142a528)
0xffff9142a5e8   360  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff9142a5ec   364  d63f03e0       constant
0xffff9142a5f0   368  36404411       constant
0xffff9142a5f4   372  00000000       constant
0xffff9142a5f8   376  36404411       constant
0xffff9142a5fc   380  00000000       constant
0xffff9142a600   384  91406060       constant
0xffff9142a604   388  0000ffff       constant
0xffff9142a608   392  9142a3e0       constant
0xffff9142a60c   396  0000ffff       constant
0xffff9142a610   400  movz x16, #0x0
0xffff9142a614   404  bl #+0xc (addr 0xffff9142a620)
0xffff9142a618   408  movz x16, #0x10
0xffff9142a61c   412  bl #+0x4 (addr 0xffff9142a620)
0xffff9142a620   416  ldr d0, [jssp]
0xffff9142a624   420  ldr d1, [jssp, #8]
0xffff9142a628   424  ldr x17, pc+24 (addr 0x0000ffff9142a640)    ;; lazy deoptimization bailout 0
0xffff9142a62c   428  add x17, x17, x16
0xffff9142a630   432  br x17
0xffff9142a634   436  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9142a638   440  d63f03e0       constant
0xffff9142a63c   444  d503201f       constant
0xffff9142a640   448  91206000       constant
0xffff9142a644   452  0000ffff       constant


Safepoints (size = 21)
0xffff9142a560   224  0011000 (sp -> fp)       1

RelocInfo (size = 26)
0xffff9142a4c8  embedded object  (0x36404411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9142a4fc  embedded object  (0x36404411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9142a558  code target (STUB)  (0xffff91406060)
0xffff9142a5b4  code target (STUB)  (0xffff9142a3e0)
0xffff9142a5e8  constant pool (size 40)
0xffff9142a628  runtime entry
0xffff9142a634  constant pool (size 20)


kind = STUB
major_key = ToStringStub
name = ToStringStub
compiler = unknown
Instructions (size = 112)
0xffff9142a6c0     0  tbz w0, #0, #+0x20 (addr 0xffff9142a6e0)
0xffff9142a6c4     4  ldur x1, [x0, #-1]
0xffff9142a6c8     8  ldrb w1, [x1, #11]
0xffff9142a6cc    12  cmp x1, #0x80 (128)
0xffff9142a6d0    16  b.hs #+0x8 (addr 0xffff9142a6d8)
0xffff9142a6d4    20  ret
0xffff9142a6d8    24  cmp x1, #0x81 (129)
0xffff9142a6dc    28  b.ne #+0xc (addr 0xffff9142a6e8)
0xffff9142a6e0    32  ldr x16, pc+56 (addr 0x0000ffff9142a718)    ;; code: STUB, NumberToStringStub, minor: 0
0xffff9142a6e4    36  br x16
0xffff9142a6e8    40  cmp x1, #0x83 (131)
0xffff9142a6ec    44  b.ne #+0xc (addr 0xffff9142a6f8)
0xffff9142a6f0    48  ldur x0, [x0, #7]
0xffff9142a6f4    52  ret
0xffff9142a6f8    56  sub csp, jssp, #0x8 (8)
0xffff9142a6fc    60  str x0, [jssp, #-8]!
0xffff9142a700    64  movz x0, #0x1
0xffff9142a704    68  ldr x1, pc+28 (addr 0x0000ffff9142a720)    ;; external reference (Runtime::ToString)
0xffff9142a708    72  ldr x16, pc+32 (addr 0x0000ffff9142a728)    ;; code: STUB, CEntryStub, minor: 4
0xffff9142a70c    76  br x16
0xffff9142a710    80  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9142a714    84  d63f03e0       constant
0xffff9142a718    88  9142a480       constant
0xffff9142a71c    92  0000ffff       constant
0xffff9142a720    96  00e49508       constant
0xffff9142a724   100  00000000       constant
0xffff9142a728   104  91406060       constant
0xffff9142a72c   108  0000ffff       constant


RelocInfo (size = 10)
0xffff9142a6e0  code target (STUB)  (0xffff9142a480)
0xffff9142a704  external reference (Runtime::ToString)  (0xe49508)
0xffff9142a708  code target (STUB)  (0xffff91406060)
0xffff9142a710  constant pool (size 32)


--- Code ---
kind = BUILTIN
name = MathCeil
compiler = turbofan
Instructions (size = 338)
0xffff9142b4a0     0  sub jssp, jssp, #0x20 (32)
0xffff9142b4a4     4  sub csp, csp, #0x20 (32)
0xffff9142b4a8     8  stp x1, cp, [jssp]
0xffff9142b4ac    12  stp fp, lr, [jssp, #16]
0xffff9142b4b0    16  add fp, jssp, #0x10 (16)
0xffff9142b4b4    20  sub csp, jssp, #0x10 (16)
0xffff9142b4b8    24  sub jssp, jssp, #0x10 (16)
0xffff9142b4bc    28  ldr x0, [jssp, #48]
0xffff9142b4c0    32  and x1, x0, #0x1
0xffff9142b4c4    36  cmp x1, #0x0 (0)
0xffff9142b4c8    40  b.eq #+0x98 (addr 0xffff9142b560)
0xffff9142b4cc    44  ldur x1, [x0, #-1]
0xffff9142b4d0    48  ldr x2, [x26, #120]
0xffff9142b4d4    52  cmp x1, x2
0xffff9142b4d8    56  b.ne #+0x8c (addr 0xffff9142b564)
0xffff9142b4dc    60  ldur d0, [x0, #7]
0xffff9142b4e0    64  frintp d0, d0
0xffff9142b4e4    68  fcvtzs w0, d0
0xffff9142b4e8    72  scvtf d1, w0
0xffff9142b4ec    76  fcmp d0, d1
0xffff9142b4f0    80  b.ne #+0x24 (addr 0xffff9142b514)
0xffff9142b4f4    84  fcmp d0, #0.0
0xffff9142b4f8    88  b.ne #+0x14 (addr 0xffff9142b50c)
0xffff9142b4fc    92  fmov x1, d0
0xffff9142b500    96  lsr x1, x1, #32
0xffff9142b504   100  cmp w1, #0x0 (0)
0xffff9142b508   104  b.lt #+0xc (addr 0xffff9142b514)
0xffff9142b50c   108  lsl x0, x0, #32
0xffff9142b510   112  b #+0x40 (addr 0xffff9142b550)
0xffff9142b514   116  movz x0, #0xf2c0
0xffff9142b518   120  movk x0, #0x4117, lsl #16
0xffff9142b51c   124  ldr x1, [x0]
0xffff9142b520   128  movz x2, #0xf2c8
0xffff9142b524   132  movk x2, #0x4117, lsl #16
0xffff9142b528   136  ldr x2, [x2]
0xffff9142b52c   140  sub x2, x2, x1
0xffff9142b530   144  cmp x2, #0x10 (16)
0xffff9142b534   148  b.lt #+0x40 (addr 0xffff9142b574)
0xffff9142b538   152  add x2, x1, #0x10 (16)
0xffff9142b53c   156  str x2, [x0]
0xffff9142b540   160  add x0, x1, #0x1 (1)
0xffff9142b544   164  ldr x1, [x26, #120]
0xffff9142b548   168  stur x1, [x0, #-1]
0xffff9142b54c   172  stur d0, [x0, #7]
0xffff9142b550   176  mov jssp, fp
0xffff9142b554   180  ldp fp, lr, [jssp], #16
0xffff9142b558   184  add jssp, jssp, #0x10 (16)
0xffff9142b55c   188  ret
0xffff9142b560   192  b #-0x10 (addr 0xffff9142b550)
0xffff9142b564   196  ldr cp, [jssp, #24]
0xffff9142b568   200  ldr x16, pc+88 (addr 0x0000ffff9142b5c0)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff9142b56c   204  blr x16
0xffff9142b570   208  b #-0xb0 (addr 0xffff9142b4c0)
0xffff9142b574   212  movz x0, #0x0
0xffff9142b578   216  lsl x0, x0, #32
0xffff9142b57c   220  movz x1, #0x10
0xffff9142b580   224  lsl x1, x1, #32
0xffff9142b584   228  sub csp, jssp, #0x10 (16)
0xffff9142b588   232  sub jssp, jssp, #0x10 (16)
0xffff9142b58c   236  str x1, [jssp, #8]
0xffff9142b590   240  str x0, [jssp]
0xffff9142b594   244  str d0, [jssp, #24]
0xffff9142b598   248  movz x1, #0x5b88
0xffff9142b59c   252  movk x1, #0xe2, lsl #16
0xffff9142b5a0   256  movz x0, #0x2
0xffff9142b5a4   260  movz cp, #0x0
0xffff9142b5a8   264  ldr x16, pc+32 (addr 0x0000ffff9142b5c8)    ;; code: STUB, CEntryStub, minor: 4
0xffff9142b5ac   268  blr x16
0xffff9142b5b0   272  ldr d0, [jssp, #8]
0xffff9142b5b4   276  b #-0x70 (addr 0xffff9142b544)
0xffff9142b5b8   280  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9142b5bc   284  d63f03e0       constant
0xffff9142b5c0   288  91429d80       constant
0xffff9142b5c4   292  0000ffff       constant
0xffff9142b5c8   296  91406060       constant
0xffff9142b5cc   300  0000ffff       constant


Safepoints (size = 34)
0xffff9142b570   208  000000 (sp -> fp)  <none>
0xffff9142b5b0   272  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff9142b568  code target (STUB)  (0xffff91429d80)
0xffff9142b5a8  code target (STUB)  (0xffff91406060)
0xffff9142b5b8  constant pool (size 24)

--- End code ---
kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff9142b660     0  sub csp, jssp, #0x10 (16)
0xffff9142b664     4  stp x2, x1, [jssp, #-16]!
0xffff9142b668     8  ldr x0, [jssp, #16]
0xffff9142b66c    12  ubfx x1, x0, #52, #11
0xffff9142b670    16  cmp x1, #0x453 (1107)
0xffff9142b674    20  csel x0, xzr, x0, ge
0xffff9142b678    24  b.ge #+0x1c (addr 0xffff9142b694)
0xffff9142b67c    28  ubfx x2, x0, #0, #52
0xffff9142b680    32  orr x2, x2, #0x10000000000000
0xffff9142b684    36  tst x0, #0x8000000000000000
0xffff9142b688    40  cneg x2, x2, ne
0xffff9142b68c    44  sub x1, x1, #0x433 (1075)
0xffff9142b690    48  lsl x0, x2, x1
0xffff9142b694    52  ldp x2, x1, [jssp], #16
0xffff9142b698    56  ret


RelocInfo (size = 0)


--- Code ---
kind = BUILTIN
name = MathClz32
compiler = turbofan
Instructions (size = 205)
0xffff9142b700     0  sub jssp, jssp, #0x20 (32)
0xffff9142b704     4  sub csp, csp, #0x20 (32)
0xffff9142b708     8  stp x1, cp, [jssp]
0xffff9142b70c    12  stp fp, lr, [jssp, #16]
0xffff9142b710    16  add fp, jssp, #0x10 (16)
0xffff9142b714    20  ldr x0, [jssp, #32]
0xffff9142b718    24  nop
0xffff9142b71c    28  nop
0xffff9142b720    32  and x1, x0, #0x1
0xffff9142b724    36  cmp x1, #0x0 (0)
0xffff9142b728    40  b.eq #+0x44 (addr 0xffff9142b76c)
0xffff9142b72c    44  ldur x1, [x0, #-1]
0xffff9142b730    48  ldr x2, [x26, #120]
0xffff9142b734    52  cmp x1, x2
0xffff9142b738    56  b.ne #+0x50 (addr 0xffff9142b788)
0xffff9142b73c    60  ldur d0, [x0, #7]
0xffff9142b740    64  fcvtzs x0, d0
0xffff9142b744    68  cmp x0, #0x1 (1)
0xffff9142b748    72  ccmn x0, #1, #nzcV, vc
0xffff9142b74c    76  b.vc #+0x1c (addr 0xffff9142b768)
0xffff9142b750    80  sub csp, jssp, #0x10 (16)
0xffff9142b754    84  str d0, [jssp, #-16]!
0xffff9142b758    88  str lr, [jssp, #8]
0xffff9142b75c    92  ldr x16, pc+76 (addr 0x0000ffff9142b7a8)    ;; code: STUB, DoubleToIStub, minor: 69660
0xffff9142b760    96  blr x16
0xffff9142b764   100  ldp xzr, lr, [jssp], #16
0xffff9142b768   104  b #+0x8 (addr 0xffff9142b770)
0xffff9142b76c   108  lsr x0, x0, #32
0xffff9142b770   112  clz w0, w0
0xffff9142b774   116  lsl x0, x0, #32
0xffff9142b778   120  mov jssp, fp
0xffff9142b77c   124  ldp fp, lr, [jssp], #16
0xffff9142b780   128  add jssp, jssp, #0x10 (16)
0xffff9142b784   132  ret
0xffff9142b788   136  mov x1, cp
0xffff9142b78c   140  str cp, [jssp, #8]
0xffff9142b790   144  ldr x16, pc+32 (addr 0x0000ffff9142b7b0)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff9142b794   148  blr x16
0xffff9142b798   152  ldr cp, [jssp, #8]
0xffff9142b79c   156  b #-0x7c (addr 0xffff9142b720)
0xffff9142b7a0   160  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9142b7a4   164  d63f03e0       constant
0xffff9142b7a8   168  9142b660       constant
0xffff9142b7ac   172  0000ffff       constant
0xffff9142b7b0   176  91429d80       constant
0xffff9142b7b4   180  0000ffff       constant


Safepoints (size = 21)
0xffff9142b798   152  0000 (sp -> fp)  <none>

RelocInfo (size = 10)
0xffff9142b75c  code target (STUB)  (0xffff9142b660)
0xffff9142b790  code target (STUB)  (0xffff91429d80)
0xffff9142b7a0  constant pool (size 24)

--- End code ---
--- Code ---
kind = BUILTIN
name = MathFloor
compiler = turbofan
Instructions (size = 338)
0xffff9142b840     0  sub jssp, jssp, #0x20 (32)
0xffff9142b844     4  sub csp, csp, #0x20 (32)
0xffff9142b848     8  stp x1, cp, [jssp]
0xffff9142b84c    12  stp fp, lr, [jssp, #16]
0xffff9142b850    16  add fp, jssp, #0x10 (16)
0xffff9142b854    20  sub csp, jssp, #0x10 (16)
0xffff9142b858    24  sub jssp, jssp, #0x10 (16)
0xffff9142b85c    28  ldr x0, [jssp, #48]
0xffff9142b860    32  and x1, x0, #0x1
0xffff9142b864    36  cmp x1, #0x0 (0)
0xffff9142b868    40  b.eq #+0x98 (addr 0xffff9142b900)
0xffff9142b86c    44  ldur x1, [x0, #-1]
0xffff9142b870    48  ldr x2, [x26, #120]
0xffff9142b874    52  cmp x1, x2
0xffff9142b878    56  b.ne #+0x8c (addr 0xffff9142b904)
0xffff9142b87c    60  ldur d0, [x0, #7]
0xffff9142b880    64  frintm d0, d0
0xffff9142b884    68  fcvtzs w0, d0
0xffff9142b888    72  scvtf d1, w0
0xffff9142b88c    76  fcmp d0, d1
0xffff9142b890    80  b.ne #+0x24 (addr 0xffff9142b8b4)
0xffff9142b894    84  fcmp d0, #0.0
0xffff9142b898    88  b.ne #+0x14 (addr 0xffff9142b8ac)
0xffff9142b89c    92  fmov x1, d0
0xffff9142b8a0    96  lsr x1, x1, #32
0xffff9142b8a4   100  cmp w1, #0x0 (0)
0xffff9142b8a8   104  b.lt #+0xc (addr 0xffff9142b8b4)
0xffff9142b8ac   108  lsl x0, x0, #32
0xffff9142b8b0   112  b #+0x40 (addr 0xffff9142b8f0)
0xffff9142b8b4   116  movz x0, #0xf2c0
0xffff9142b8b8   120  movk x0, #0x4117, lsl #16
0xffff9142b8bc   124  ldr x1, [x0]
0xffff9142b8c0   128  movz x2, #0xf2c8
0xffff9142b8c4   132  movk x2, #0x4117, lsl #16
0xffff9142b8c8   136  ldr x2, [x2]
0xffff9142b8cc   140  sub x2, x2, x1
0xffff9142b8d0   144  cmp x2, #0x10 (16)
0xffff9142b8d4   148  b.lt #+0x40 (addr 0xffff9142b914)
0xffff9142b8d8   152  add x2, x1, #0x10 (16)
0xffff9142b8dc   156  str x2, [x0]
0xffff9142b8e0   160  add x0, x1, #0x1 (1)
0xffff9142b8e4   164  ldr x1, [x26, #120]
0xffff9142b8e8   168  stur x1, [x0, #-1]
0xffff9142b8ec   172  stur d0, [x0, #7]
0xffff9142b8f0   176  mov jssp, fp
0xffff9142b8f4   180  ldp fp, lr, [jssp], #16
0xffff9142b8f8   184  add jssp, jssp, #0x10 (16)
0xffff9142b8fc   188  ret
0xffff9142b900   192  b #-0x10 (addr 0xffff9142b8f0)
0xffff9142b904   196  ldr cp, [jssp, #24]
0xffff9142b908   200  ldr x16, pc+88 (addr 0x0000ffff9142b960)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff9142b90c   204  blr x16
0xffff9142b910   208  b #-0xb0 (addr 0xffff9142b860)
0xffff9142b914   212  movz x0, #0x0
0xffff9142b918   216  lsl x0, x0, #32
0xffff9142b91c   220  movz x1, #0x10
0xffff9142b920   224  lsl x1, x1, #32
0xffff9142b924   228  sub csp, jssp, #0x10 (16)
0xffff9142b928   232  sub jssp, jssp, #0x10 (16)
0xffff9142b92c   236  str x1, [jssp, #8]
0xffff9142b930   240  str x0, [jssp]
0xffff9142b934   244  str d0, [jssp, #24]
0xffff9142b938   248  movz x1, #0x5b88
0xffff9142b93c   252  movk x1, #0xe2, lsl #16
0xffff9142b940   256  movz x0, #0x2
0xffff9142b944   260  movz cp, #0x0
0xffff9142b948   264  ldr x16, pc+32 (addr 0x0000ffff9142b968)    ;; code: STUB, CEntryStub, minor: 4
0xffff9142b94c   268  blr x16
0xffff9142b950   272  ldr d0, [jssp, #8]
0xffff9142b954   276  b #-0x70 (addr 0xffff9142b8e4)
0xffff9142b958   280  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9142b95c   284  d63f03e0       constant
0xffff9142b960   288  91429d80       constant
0xffff9142b964   292  0000ffff       constant
0xffff9142b968   296  91406060       constant
0xffff9142b96c   300  0000ffff       constant


Safepoints (size = 34)
0xffff9142b910   208  000000 (sp -> fp)  <none>
0xffff9142b950   272  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff9142b908  code target (STUB)  (0xffff91429d80)
0xffff9142b948  code target (STUB)  (0xffff91406060)
0xffff9142b958  constant pool (size 24)

--- End code ---
--- Code ---
kind = BUILTIN
name = MathRound
compiler = turbofan
Instructions (size = 370)
0xffff9142ba00     0  sub jssp, jssp, #0x20 (32)
0xffff9142ba04     4  sub csp, csp, #0x20 (32)
0xffff9142ba08     8  stp x1, cp, [jssp]
0xffff9142ba0c    12  stp fp, lr, [jssp, #16]
0xffff9142ba10    16  add fp, jssp, #0x10 (16)
0xffff9142ba14    20  sub csp, jssp, #0x10 (16)
0xffff9142ba18    24  sub jssp, jssp, #0x10 (16)
0xffff9142ba1c    28  ldr x0, [jssp, #48]
0xffff9142ba20    32  and x1, x0, #0x1
0xffff9142ba24    36  cmp x1, #0x0 (0)
0xffff9142ba28    40  b.eq #+0xb4 (addr 0xffff9142badc)
0xffff9142ba2c    44  ldur x1, [x0, #-1]
0xffff9142ba30    48  ldr x2, [x26, #120]
0xffff9142ba34    52  cmp x1, x2
0xffff9142ba38    56  b.ne #+0xa8 (addr 0xffff9142bae0)
0xffff9142ba3c    60  ldur d0, [x0, #7]
0xffff9142ba40    64  frintp d1, d0
0xffff9142ba44    68  fmov d2, #0x60 (0.5000)
0xffff9142ba48    72  fsub d2, d1, d2
0xffff9142ba4c    76  fcmp d2, d0
0xffff9142ba50    80  b.ls #+0x10 (addr 0xffff9142ba60)
0xffff9142ba54    84  fmov d0, #0x70 (1.0000)
0xffff9142ba58    88  fsub d0, d1, d0
0xffff9142ba5c    92  fmov d1, d0
0xffff9142ba60    96  fcvtzs w0, d1
0xffff9142ba64   100  scvtf d0, w0
0xffff9142ba68   104  fcmp d1, d0
0xffff9142ba6c   108  b.ne #+0x24 (addr 0xffff9142ba90)
0xffff9142ba70   112  fcmp d1, #0.0
0xffff9142ba74   116  b.ne #+0x14 (addr 0xffff9142ba88)
0xffff9142ba78   120  fmov x1, d1
0xffff9142ba7c   124  lsr x1, x1, #32
0xffff9142ba80   128  cmp w1, #0x0 (0)
0xffff9142ba84   132  b.lt #+0xc (addr 0xffff9142ba90)
0xffff9142ba88   136  lsl x0, x0, #32
0xffff9142ba8c   140  b #+0x40 (addr 0xffff9142bacc)
0xffff9142ba90   144  movz x0, #0xf2c0
0xffff9142ba94   148  movk x0, #0x4117, lsl #16
0xffff9142ba98   152  ldr x1, [x0]
0xffff9142ba9c   156  movz x2, #0xf2c8
0xffff9142baa0   160  movk x2, #0x4117, lsl #16
0xffff9142baa4   164  ldr x2, [x2]
0xffff9142baa8   168  sub x2, x2, x1
0xffff9142baac   172  cmp x2, #0x10 (16)
0xffff9142bab0   176  b.lt #+0x40 (addr 0xffff9142baf0)
0xffff9142bab4   180  add x2, x1, #0x10 (16)
0xffff9142bab8   184  str x2, [x0]
0xffff9142babc   188  add x0, x1, #0x1 (1)
0xffff9142bac0   192  ldr x1, [x26, #120]
0xffff9142bac4   196  stur x1, [x0, #-1]
0xffff9142bac8   200  stur d1, [x0, #7]
0xffff9142bacc   204  mov jssp, fp
0xffff9142bad0   208  ldp fp, lr, [jssp], #16
0xffff9142bad4   212  add jssp, jssp, #0x10 (16)
0xffff9142bad8   216  ret
0xffff9142badc   220  b #-0x10 (addr 0xffff9142bacc)
0xffff9142bae0   224  ldr cp, [jssp, #24]
0xffff9142bae4   228  ldr x16, pc+92 (addr 0x0000ffff9142bb40)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff9142bae8   232  blr x16
0xffff9142baec   236  b #-0xcc (addr 0xffff9142ba20)
0xffff9142baf0   240  movz x0, #0x0
0xffff9142baf4   244  lsl x0, x0, #32
0xffff9142baf8   248  movz x1, #0x10
0xffff9142bafc   252  lsl x1, x1, #32
0xffff9142bb00   256  sub csp, jssp, #0x10 (16)
0xffff9142bb04   260  sub jssp, jssp, #0x10 (16)
0xffff9142bb08   264  str x1, [jssp, #8]
0xffff9142bb0c   268  str x0, [jssp]
0xffff9142bb10   272  fmov d0, d1
0xffff9142bb14   276  str d1, [jssp, #24]
0xffff9142bb18   280  movz x1, #0x5b88
0xffff9142bb1c   284  movk x1, #0xe2, lsl #16
0xffff9142bb20   288  movz x0, #0x2
0xffff9142bb24   292  movz cp, #0x0
0xffff9142bb28   296  ldr x16, pc+32 (addr 0x0000ffff9142bb48)    ;; code: STUB, CEntryStub, minor: 4
0xffff9142bb2c   300  blr x16
0xffff9142bb30   304  ldr d1, [jssp, #8]
0xffff9142bb34   308  b #-0x74 (addr 0xffff9142bac0)
0xffff9142bb38   312  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9142bb3c   316  d63f03e0       constant
0xffff9142bb40   320  91429d80       constant
0xffff9142bb44   324  0000ffff       constant
0xffff9142bb48   328  91406060       constant
0xffff9142bb4c   332  0000ffff       constant


Safepoints (size = 34)
0xffff9142baec   236  000000 (sp -> fp)  <none>
0xffff9142bb30   304  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff9142bae4  code target (STUB)  (0xffff91429d80)
0xffff9142bb28  code target (STUB)  (0xffff91406060)
0xffff9142bb38  constant pool (size 24)

--- End code ---
--- Code ---
kind = BUILTIN
name = MathSqrt
compiler = turbofan
Instructions (size = 346)
0xffff9142bbe0     0  sub jssp, jssp, #0x20 (32)
0xffff9142bbe4     4  sub csp, csp, #0x20 (32)
0xffff9142bbe8     8  stp x1, cp, [jssp]
0xffff9142bbec    12  stp fp, lr, [jssp, #16]
0xffff9142bbf0    16  add fp, jssp, #0x10 (16)
0xffff9142bbf4    20  sub csp, jssp, #0x10 (16)
0xffff9142bbf8    24  sub jssp, jssp, #0x10 (16)
0xffff9142bbfc    28  ldr x0, [jssp, #48]
0xffff9142bc00    32  and x1, x0, #0x1
0xffff9142bc04    36  cmp x1, #0x0 (0)
0xffff9142bc08    40  b.eq #+0x1c (addr 0xffff9142bc24)
0xffff9142bc0c    44  ldur x1, [x0, #-1]
0xffff9142bc10    48  ldr x2, [x26, #120]
0xffff9142bc14    52  cmp x1, x2
0xffff9142bc18    56  b.ne #+0x94 (addr 0xffff9142bcac)
0xffff9142bc1c    60  ldur d0, [x0, #7]
0xffff9142bc20    64  b #+0xc (addr 0xffff9142bc2c)
0xffff9142bc24    68  asr x0, x0, #32
0xffff9142bc28    72  scvtf d0, w0
0xffff9142bc2c    76  fsqrt d0, d0
0xffff9142bc30    80  fcvtzs w0, d0
0xffff9142bc34    84  scvtf d1, w0
0xffff9142bc38    88  fcmp d0, d1
0xffff9142bc3c    92  b.ne #+0x24 (addr 0xffff9142bc60)
0xffff9142bc40    96  fcmp d0, #0.0
0xffff9142bc44   100  b.ne #+0x14 (addr 0xffff9142bc58)
0xffff9142bc48   104  fmov x1, d0
0xffff9142bc4c   108  lsr x1, x1, #32
0xffff9142bc50   112  cmp w1, #0x0 (0)
0xffff9142bc54   116  b.lt #+0xc (addr 0xffff9142bc60)
0xffff9142bc58   120  lsl x0, x0, #32
0xffff9142bc5c   124  b #+0x40 (addr 0xffff9142bc9c)
0xffff9142bc60   128  movz x0, #0xf2c0
0xffff9142bc64   132  movk x0, #0x4117, lsl #16
0xffff9142bc68   136  ldr x1, [x0]
0xffff9142bc6c   140  movz x2, #0xf2c8
0xffff9142bc70   144  movk x2, #0x4117, lsl #16
0xffff9142bc74   148  ldr x2, [x2]
0xffff9142bc78   152  sub x2, x2, x1
0xffff9142bc7c   156  cmp x2, #0x10 (16)
0xffff9142bc80   160  b.lt #+0x3c (addr 0xffff9142bcbc)
0xffff9142bc84   164  add x2, x1, #0x10 (16)
0xffff9142bc88   168  str x2, [x0]
0xffff9142bc8c   172  add x0, x1, #0x1 (1)
0xffff9142bc90   176  ldr x1, [x26, #120]
0xffff9142bc94   180  stur x1, [x0, #-1]
0xffff9142bc98   184  stur d0, [x0, #7]
0xffff9142bc9c   188  mov jssp, fp
0xffff9142bca0   192  ldp fp, lr, [jssp], #16
0xffff9142bca4   196  add jssp, jssp, #0x10 (16)
0xffff9142bca8   200  ret
0xffff9142bcac   204  ldr cp, [jssp, #24]
0xffff9142bcb0   208  ldr x16, pc+88 (addr 0x0000ffff9142bd08)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff9142bcb4   212  blr x16
0xffff9142bcb8   216  b #-0xb8 (addr 0xffff9142bc00)
0xffff9142bcbc   220  movz x0, #0x0
0xffff9142bcc0   224  lsl x0, x0, #32
0xffff9142bcc4   228  movz x1, #0x10
0xffff9142bcc8   232  lsl x1, x1, #32
0xffff9142bccc   236  sub csp, jssp, #0x10 (16)
0xffff9142bcd0   240  sub jssp, jssp, #0x10 (16)
0xffff9142bcd4   244  str x1, [jssp, #8]
0xffff9142bcd8   248  str x0, [jssp]
0xffff9142bcdc   252  str d0, [jssp, #24]
0xffff9142bce0   256  movz x1, #0x5b88
0xffff9142bce4   260  movk x1, #0xe2, lsl #16
0xffff9142bce8   264  movz x0, #0x2
0xffff9142bcec   268  movz cp, #0x0
0xffff9142bcf0   272  ldr x16, pc+32 (addr 0x0000ffff9142bd10)    ;; code: STUB, CEntryStub, minor: 4
0xffff9142bcf4   276  blr x16
0xffff9142bcf8   280  ldr d0, [jssp, #8]
0xffff9142bcfc   284  b #-0x6c (addr 0xffff9142bc90)
0xffff9142bd00   288  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9142bd04   292  d63f03e0       constant
0xffff9142bd08   296  91429d80       constant
0xffff9142bd0c   300  0000ffff       constant
0xffff9142bd10   304  91406060       constant
0xffff9142bd14   308  0000ffff       constant


Safepoints (size = 34)
0xffff9142bcb8   216  000000 (sp -> fp)  <none>
0xffff9142bcf8   280  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff9142bcb0  code target (STUB)  (0xffff91429d80)
0xffff9142bcf0  code target (STUB)  (0xffff91406060)
0xffff9142bd00  constant pool (size 24)

--- End code ---
--- Code ---
kind = BUILTIN
name = MathTrunc
compiler = turbofan
Instructions (size = 338)
0xffff9142bda0     0  sub jssp, jssp, #0x20 (32)
0xffff9142bda4     4  sub csp, csp, #0x20 (32)
0xffff9142bda8     8  stp x1, cp, [jssp]
0xffff9142bdac    12  stp fp, lr, [jssp, #16]
0xffff9142bdb0    16  add fp, jssp, #0x10 (16)
0xffff9142bdb4    20  sub csp, jssp, #0x10 (16)
0xffff9142bdb8    24  sub jssp, jssp, #0x10 (16)
0xffff9142bdbc    28  ldr x0, [jssp, #48]
0xffff9142bdc0    32  and x1, x0, #0x1
0xffff9142bdc4    36  cmp x1, #0x0 (0)
0xffff9142bdc8    40  b.eq #+0x98 (addr 0xffff9142be60)
0xffff9142bdcc    44  ldur x1, [x0, #-1]
0xffff9142bdd0    48  ldr x2, [x26, #120]
0xffff9142bdd4    52  cmp x1, x2
0xffff9142bdd8    56  b.ne #+0x8c (addr 0xffff9142be64)
0xffff9142bddc    60  ldur d0, [x0, #7]
0xffff9142bde0    64  frintz d0, d0
0xffff9142bde4    68  fcvtzs w0, d0
0xffff9142bde8    72  scvtf d1, w0
0xffff9142bdec    76  fcmp d0, d1
0xffff9142bdf0    80  b.ne #+0x24 (addr 0xffff9142be14)
0xffff9142bdf4    84  fcmp d0, #0.0
0xffff9142bdf8    88  b.ne #+0x14 (addr 0xffff9142be0c)
0xffff9142bdfc    92  fmov x1, d0
0xffff9142be00    96  lsr x1, x1, #32
0xffff9142be04   100  cmp w1, #0x0 (0)
0xffff9142be08   104  b.lt #+0xc (addr 0xffff9142be14)
0xffff9142be0c   108  lsl x0, x0, #32
0xffff9142be10   112  b #+0x40 (addr 0xffff9142be50)
0xffff9142be14   116  movz x0, #0xf2c0
0xffff9142be18   120  movk x0, #0x4117, lsl #16
0xffff9142be1c   124  ldr x1, [x0]
0xffff9142be20   128  movz x2, #0xf2c8
0xffff9142be24   132  movk x2, #0x4117, lsl #16
0xffff9142be28   136  ldr x2, [x2]
0xffff9142be2c   140  sub x2, x2, x1
0xffff9142be30   144  cmp x2, #0x10 (16)
0xffff9142be34   148  b.lt #+0x40 (addr 0xffff9142be74)
0xffff9142be38   152  add x2, x1, #0x10 (16)
0xffff9142be3c   156  str x2, [x0]
0xffff9142be40   160  add x0, x1, #0x1 (1)
0xffff9142be44   164  ldr x1, [x26, #120]
0xffff9142be48   168  stur x1, [x0, #-1]
0xffff9142be4c   172  stur d0, [x0, #7]
0xffff9142be50   176  mov jssp, fp
0xffff9142be54   180  ldp fp, lr, [jssp], #16
0xffff9142be58   184  add jssp, jssp, #0x10 (16)
0xffff9142be5c   188  ret
0xffff9142be60   192  b #-0x10 (addr 0xffff9142be50)
0xffff9142be64   196  ldr cp, [jssp, #24]
0xffff9142be68   200  ldr x16, pc+88 (addr 0x0000ffff9142bec0)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff9142be6c   204  blr x16
0xffff9142be70   208  b #-0xb0 (addr 0xffff9142bdc0)
0xffff9142be74   212  movz x0, #0x0
0xffff9142be78   216  lsl x0, x0, #32
0xffff9142be7c   220  movz x1, #0x10
0xffff9142be80   224  lsl x1, x1, #32
0xffff9142be84   228  sub csp, jssp, #0x10 (16)
0xffff9142be88   232  sub jssp, jssp, #0x10 (16)
0xffff9142be8c   236  str x1, [jssp, #8]
0xffff9142be90   240  str x0, [jssp]
0xffff9142be94   244  str d0, [jssp, #24]
0xffff9142be98   248  movz x1, #0x5b88
0xffff9142be9c   252  movk x1, #0xe2, lsl #16
0xffff9142bea0   256  movz x0, #0x2
0xffff9142bea4   260  movz cp, #0x0
0xffff9142bea8   264  ldr x16, pc+32 (addr 0x0000ffff9142bec8)    ;; code: STUB, CEntryStub, minor: 4
0xffff9142beac   268  blr x16
0xffff9142beb0   272  ldr d0, [jssp, #8]
0xffff9142beb4   276  b #-0x70 (addr 0xffff9142be44)
0xffff9142beb8   280  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9142bebc   284  d63f03e0       constant
0xffff9142bec0   288  91429d80       constant
0xffff9142bec4   292  0000ffff       constant
0xffff9142bec8   296  91406060       constant
0xffff9142becc   300  0000ffff       constant


Safepoints (size = 34)
0xffff9142be70   208  000000 (sp -> fp)  <none>
0xffff9142beb0   272  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff9142be68  code target (STUB)  (0xffff91429d80)
0xffff9142bea8  code target (STUB)  (0xffff91406060)
0xffff9142beb8  constant pool (size 24)

--- End code ---
--- Code ---
kind = BUILTIN
name = ObjectHasOwnProperty
compiler = turbofan
Instructions (size = 421)
0xffff9142bf60     0  sub jssp, jssp, #0x20 (32)
0xffff9142bf64     4  sub csp, csp, #0x20 (32)
0xffff9142bf68     8  stp x1, cp, [jssp]
0xffff9142bf6c    12  stp fp, lr, [jssp, #16]
0xffff9142bf70    16  add fp, jssp, #0x10 (16)
0xffff9142bf74    20  ldr x0, [jssp, #40]
0xffff9142bf78    24  and x1, x0, #0x1
0xffff9142bf7c    28  cmp x1, #0x0 (0)
0xffff9142bf80    32  b.eq #+0x154 (addr 0xffff9142c0d4)
0xffff9142bf84    36  ldur x1, [x0, #-1]
0xffff9142bf88    40  ldrb w2, [x1, #11]
0xffff9142bf8c    44  ldr x3, [jssp, #32]
0xffff9142bf90    48  and x4, x3, #0x1
0xffff9142bf94    52  cmp x4, #0x0 (0)
0xffff9142bf98    56  b.eq #+0x94 (addr 0xffff9142c02c)
0xffff9142bf9c    60  ldur x4, [x3, #-1]
0xffff9142bfa0    64  ldrb w4, [x4, #11]
0xffff9142bfa4    68  cmp w4, #0x80 (128)
0xffff9142bfa8    72  b.eq #+0x1c (addr 0xffff9142bfc4)
0xffff9142bfac    76  tst x4, #0xc0
0xffff9142bfb0    80  b.ne #+0xf8 (addr 0xffff9142c0a8)
0xffff9142bfb4    84  ldur w4, [x3, #7]
0xffff9142bfb8    88  tbnz w4, #1, #+0xc (addr 0xffff9142bfc4)
0xffff9142bfbc    92  ubfx w4, w4, #2, #24
0xffff9142bfc0    96  b #+0x7c (addr 0xffff9142c03c)
0xffff9142bfc4   100  cmp w2, #0xb3 (179)
0xffff9142bfc8   104  cset x4, le
0xffff9142bfcc   108  cmp w2, #0xb6 (182)
0xffff9142bfd0   112  cset x2, eq
0xffff9142bfd4   116  orr w2, w4, w2
0xffff9142bfd8   120  cbnz w2, #+0xd0 (addr 0xffff9142c0a8)
0xffff9142bfdc   124  ldur w2, [x1, #15]
0xffff9142bfe0   128  ubfx w4, w2, #20, #1
0xffff9142bfe4   132  cbnz w4, #+0xc4 (addr 0xffff9142c0a8)
0xffff9142bfe8   136  ubfx w2, w2, #10, #10
0xffff9142bfec   140  cmp w2, #0x100 (256)
0xffff9142bff0   144  b.gt #+0xb8 (addr 0xffff9142c0a8)
0xffff9142bff4   148  ldur x0, [x1, #47]
0xffff9142bff8   152  movz x1, #0x0
0xffff9142bffc   156  nop
0xffff9142c000   160  cmp w1, w2
0xffff9142c004   164  b.eq #+0xd0 (addr 0xffff9142c0d4)
0xffff9142c008   168  add w4, w1, w1, lsl #1
0xffff9142c00c   172  add w4, w4, #0x2 (2)
0xffff9142c010   176  lsl x4, x4, #3
0xffff9142c014   180  add x4, x4, #0xf (15)
0xffff9142c018   184  ldr x4, [x0, x4]
0xffff9142c01c   188  cmp x4, x3
0xffff9142c020   192  b.eq #+0x70 (addr 0xffff9142c090)
0xffff9142c024   196  add w1, w1, #0x1 (1)
0xffff9142c028   200  b #-0x28 (addr 0xffff9142c000)
0xffff9142c02c   204  and x4, x3, #0x8000000000000001
0xffff9142c030   208  cmp x4, #0x0 (0)
0xffff9142c034   212  b.ne #+0x74 (addr 0xffff9142c0a8)
0xffff9142c038   216  asr x4, x3, #32
0xffff9142c03c   220  cmp w2, #0xb4 (180)
0xffff9142c040   224  cset x5, le
0xffff9142c044   228  cmp w2, #0xb6 (182)
0xffff9142c048   232  cset x2, eq
0xffff9142c04c   236  orr w2, w5, w2
0xffff9142c050   240  cbnz w2, #+0x58 (addr 0xffff9142c0a8)
0xffff9142c054   244  ldrb w1, [x1, #13]
0xffff9142c058   248  ubfx w1, w1, #3, #5
0xffff9142c05c   252  cmp w1, #0x3 (3)
0xffff9142c060   256  b.gt #+0x48 (addr 0xffff9142c0a8)
0xffff9142c064   260  ldur x0, [x0, #15]
0xffff9142c068   264  ldur x1, [x0, #7]
0xffff9142c06c   268  lsr x1, x1, #32
0xffff9142c070   272  cmp w4, w1
0xffff9142c074   276  b.ge #+0x60 (addr 0xffff9142c0d4)
0xffff9142c078   280  lsl x1, x4, #3
0xffff9142c07c   284  add x1, x1, #0xf (15)
0xffff9142c080   288  ldr x0, [x0, x1]
0xffff9142c084   292  ldr x1, [x26, #88]
0xffff9142c088   296  cmp x0, x1
0xffff9142c08c   300  b.eq #+0x48 (addr 0xffff9142c0d4)
0xffff9142c090   304  ldr x0, [x26, #64]
0xffff9142c094   308  mov jssp, fp
0xffff9142c098   312  ldp fp, lr, [jssp], #16
0xffff9142c09c   316  add jssp, jssp, #0x10 (16)
0xffff9142c0a0   320  ret
0xffff9142c0a4   324  b #+0x30 (addr 0xffff9142c0d4)
0xffff9142c0a8   328  sub csp, jssp, #0x10 (16)
0xffff9142c0ac   332  sub jssp, jssp, #0x10 (16)
0xffff9142c0b0   336  str x0, [jssp, #8]
0xffff9142c0b4   340  str x3, [jssp]
0xffff9142c0b8   344  movz x1, #0xf6c8
0xffff9142c0bc   348  movk x1, #0xe3, lsl #16
0xffff9142c0c0   352  movz x0, #0x2
0xffff9142c0c4   356  ldr cp, [jssp, #24]
0xffff9142c0c8   360  ldr x16, pc+32 (addr 0x0000ffff9142c0e8)    ;; code: STUB, CEntryStub, minor: 4
0xffff9142c0cc   364  blr x16
0xffff9142c0d0   368  b #-0x3c (addr 0xffff9142c094)
0xffff9142c0d4   372  ldr x0, [x26, #72]
0xffff9142c0d8   376  b #-0x44 (addr 0xffff9142c094)
0xffff9142c0dc   380  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9142c0e0   384  d63f03e0       constant
0xffff9142c0e4   388  d503201f       constant
0xffff9142c0e8   392  91406060       constant
0xffff9142c0ec   396  0000ffff       constant


Safepoints (size = 21)
0xffff9142c0d0   368  0000 (sp -> fp)  <none>

RelocInfo (size = 9)
0xffff9142c0c8  code target (STUB)  (0xffff91406060)
0xffff9142c0dc  constant pool (size 20)

--- End code ---
kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff9142c580     0  adr xzr, #+0x40 (addr 0xffff9142c5c0)
0xffff9142c584     4  adr xzr, #+0x2a8 (addr 0xffff9142c82c)
0xffff9142c588     8  ldr x16, pc+1368 (addr 0x0000ffff9142cae0)    ;; external reference (store_buffer_top)
0xffff9142c58c    12  ldr x6, [x16]
0xffff9142c590    16  str x7, [x6], #8
0xffff9142c594    20  str x6, [x16]
0xffff9142c598    24  tst x6, #0x1ffff
0xffff9142c59c    28  b.eq #+0x8 (addr 0xffff9142c5a4)
0xffff9142c5a0    32  ret
0xffff9142c5a4    36  sub csp, jssp, #0x8 (8)
0xffff9142c5a8    40  str lr, [jssp, #-8]!
0xffff9142c5ac    44  ldr x17, pc+1340 (addr 0x0000ffff9142cae8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142c5b0    48  blr x17
0xffff9142c5b4    52  ldr lr, [jssp], #8
0xffff9142c5b8    56  ret
0xffff9142c5bc    60  ret
0xffff9142c5c0    64  sub csp, jssp, #0x10 (16)
0xffff9142c5c4    68  stp x1, x0, [jssp, #-16]!
0xffff9142c5c8    72  ldr x6, [x7]
0xffff9142c5cc    76  and x16, x6, #0xfffffffffff00000
0xffff9142c5d0    80  ldr x16, [x16, #8]
0xffff9142c5d4    84  tst x16, #0x18
0xffff9142c5d8    88  b.eq #+0x17c (addr 0xffff9142c754)
0xffff9142c5dc    92  and x16, x5, #0xfffffffffff00000
0xffff9142c5e0    96  ldr x16, [x16, #8]
0xffff9142c5e4   100  tst x16, #0x18
0xffff9142c5e8   104  b.ne #+0x16c (addr 0xffff9142c754)
0xffff9142c5ec   108  and x6, x5, #0xfffffffffff00000
0xffff9142c5f0   112  ldr x0, [x6, #104]
0xffff9142c5f4   116  subs x0, x0, #0x1 (1)
0xffff9142c5f8   120  str x0, [x6, #104]
0xffff9142c5fc   124  b.mi #+0xc4 (addr 0xffff9142c6c0)
0xffff9142c600   128  ubfx x16, x5, #8, #12
0xffff9142c604   132  and x6, x5, #0xfffffffffff00000
0xffff9142c608   136  add x6, x6, x16, lsl #2
0xffff9142c60c   140  ubfx x0, x5, #3, #5
0xffff9142c610   144  ldr x6, [x6, #360]
0xffff9142c614   148  lsr x6, x6, x0
0xffff9142c618   152  tbz w6, #0, #+0x8 (addr 0xffff9142c620)
0xffff9142c61c   156  tbnz w6, #1, #+0x3c (addr 0xffff9142c658)
0xffff9142c620   160  ldp x1, x0, [jssp], #16
0xffff9142c624   164  ldr x16, pc+1228 (addr 0x0000ffff9142caf0)    ;; external reference (store_buffer_top)
0xffff9142c628   168  ldr x6, [x16]
0xffff9142c62c   172  str x7, [x6], #8
0xffff9142c630   176  str x6, [x16]
0xffff9142c634   180  tst x6, #0x1ffff
0xffff9142c638   184  b.eq #+0x8 (addr 0xffff9142c640)
0xffff9142c63c   188  ret
0xffff9142c640   192  sub csp, jssp, #0x8 (8)
0xffff9142c644   196  str lr, [jssp, #-8]!
0xffff9142c648   200  ldr x17, pc+1200 (addr 0x0000ffff9142caf8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142c64c   204  blr x17
0xffff9142c650   208  ldr lr, [jssp], #8
0xffff9142c654   212  ret
0xffff9142c658   216  ldr x6, [x7]
0xffff9142c65c   220  sub csp, jssp, #0x10 (16)
0xffff9142c660   224  stp x5, x7, [jssp, #-16]!
0xffff9142c664   228  ubfx x16, x6, #8, #12
0xffff9142c668   232  and x0, x6, #0xfffffffffff00000
0xffff9142c66c   236  add x0, x0, x16, lsl #2
0xffff9142c670   240  ubfx x5, x6, #3, #5
0xffff9142c674   244  ldr x7, [x0, #360]
0xffff9142c678   248  lsr x7, x7, x5
0xffff9142c67c   252  tbz w7, #0, #+0x40 (addr 0xffff9142c6bc)
0xffff9142c680   256  ldp x5, x7, [jssp], #16
0xffff9142c684   260  ldp x1, x0, [jssp], #16
0xffff9142c688   264  ldr x16, pc+1144 (addr 0x0000ffff9142cb00)    ;; external reference (store_buffer_top)
0xffff9142c68c   268  ldr x6, [x16]
0xffff9142c690   272  str x7, [x6], #8
0xffff9142c694   276  str x6, [x16]
0xffff9142c698   280  tst x6, #0x1ffff
0xffff9142c69c   284  b.eq #+0x8 (addr 0xffff9142c6a4)
0xffff9142c6a0   288  ret
0xffff9142c6a4   292  sub csp, jssp, #0x8 (8)
0xffff9142c6a8   296  str lr, [jssp, #-8]!
0xffff9142c6ac   300  ldr x17, pc+1116 (addr 0x0000ffff9142cb08)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142c6b0   304  blr x17
0xffff9142c6b4   308  ldr lr, [jssp], #8
0xffff9142c6b8   312  ret
0xffff9142c6bc   316  ldp x5, x7, [jssp], #16
0xffff9142c6c0   320  sub csp, jssp, #0x78 (120)
0xffff9142c6c4   324  stp x14, x15, [jssp, #-32]!
0xffff9142c6c8   328  stp x18, lr, [jssp, #16]
0xffff9142c6cc   332  stp x10, x11, [jssp, #-32]!
0xffff9142c6d0   336  stp x12, x13, [jssp, #16]
0xffff9142c6d4   340  stp x5, x7, [jssp, #-32]!
0xffff9142c6d8   344  stp x8, x9, [jssp, #16]
0xffff9142c6dc   348  stp x2, x3, [jssp, #-24]!
0xffff9142c6e0   352  str x4, [jssp, #16]
0xffff9142c6e4   356  mov x0, x5
0xffff9142c6e8   360  mov x1, x7
0xffff9142c6ec   364  ldr x2, pc+1060 (addr 0x0000ffff9142cb10)    ;; external reference (isolate)
0xffff9142c6f0   368  ldr x16, pc+1064 (addr 0x0000ffff9142cb18)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142c6f4   372  and csp, jssp, #0xfffffffffffffff0
0xffff9142c6f8   376  blr x16
0xffff9142c6fc   380  ldp x4, x5, [jssp, #16]
0xffff9142c700   384  ldp x2, x3, [jssp], #32
0xffff9142c704   388  ldp x9, x10, [jssp, #16]
0xffff9142c708   392  ldp x7, x8, [jssp], #32
0xffff9142c70c   396  ldp x13, x14, [jssp, #16]
0xffff9142c710   400  ldp x11, x12, [jssp], #32
0xffff9142c714   404  ldr lr, [jssp, #16]
0xffff9142c718   408  ldp x15, x18, [jssp], #24
0xffff9142c71c   412  ldp x1, x0, [jssp], #16
0xffff9142c720   416  ldr x16, pc+1024 (addr 0x0000ffff9142cb20)    ;; external reference (store_buffer_top)
0xffff9142c724   420  ldr x6, [x16]
0xffff9142c728   424  str x7, [x6], #8
0xffff9142c72c   428  str x6, [x16]
0xffff9142c730   432  tst x6, #0x1ffff
0xffff9142c734   436  b.eq #+0x8 (addr 0xffff9142c73c)
0xffff9142c738   440  ret
0xffff9142c73c   444  sub csp, jssp, #0x8 (8)
0xffff9142c740   448  str lr, [jssp, #-8]!
0xffff9142c744   452  ldr x17, pc+996 (addr 0x0000ffff9142cb28)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142c748   456  blr x17
0xffff9142c74c   460  ldr lr, [jssp], #8
0xffff9142c750   464  ret
0xffff9142c754   468  and x6, x5, #0xfffffffffff00000
0xffff9142c758   472  ldr x0, [x6, #104]
0xffff9142c75c   476  subs x0, x0, #0x1 (1)
0xffff9142c760   480  str x0, [x6, #104]
0xffff9142c764   484  b.mi #+0x64 (addr 0xffff9142c7c8)
0xffff9142c768   488  ubfx x16, x5, #8, #12
0xffff9142c76c   492  and x6, x5, #0xfffffffffff00000
0xffff9142c770   496  add x6, x6, x16, lsl #2
0xffff9142c774   500  ubfx x0, x5, #3, #5
0xffff9142c778   504  ldr x6, [x6, #360]
0xffff9142c77c   508  lsr x6, x6, x0
0xffff9142c780   512  tbz w6, #0, #+0x8 (addr 0xffff9142c788)
0xffff9142c784   516  tbnz w6, #1, #+0xc (addr 0xffff9142c790)
0xffff9142c788   520  ldp x1, x0, [jssp], #16
0xffff9142c78c   524  ret
0xffff9142c790   528  ldr x6, [x7]
0xffff9142c794   532  sub csp, jssp, #0x10 (16)
0xffff9142c798   536  stp x5, x7, [jssp, #-16]!
0xffff9142c79c   540  ubfx x16, x6, #8, #12
0xffff9142c7a0   544  and x0, x6, #0xfffffffffff00000
0xffff9142c7a4   548  add x0, x0, x16, lsl #2
0xffff9142c7a8   552  ubfx x5, x6, #3, #5
0xffff9142c7ac   556  ldr x7, [x0, #360]
0xffff9142c7b0   560  lsr x7, x7, x5
0xffff9142c7b4   564  tbz w7, #0, #+0x10 (addr 0xffff9142c7c4)
0xffff9142c7b8   568  ldp x5, x7, [jssp], #16
0xffff9142c7bc   572  ldp x1, x0, [jssp], #16
0xffff9142c7c0   576  ret
0xffff9142c7c4   580  ldp x5, x7, [jssp], #16
0xffff9142c7c8   584  sub csp, jssp, #0x78 (120)
0xffff9142c7cc   588  stp x14, x15, [jssp, #-32]!
0xffff9142c7d0   592  stp x18, lr, [jssp, #16]
0xffff9142c7d4   596  stp x10, x11, [jssp, #-32]!
0xffff9142c7d8   600  stp x12, x13, [jssp, #16]
0xffff9142c7dc   604  stp x5, x7, [jssp, #-32]!
0xffff9142c7e0   608  stp x8, x9, [jssp, #16]
0xffff9142c7e4   612  stp x2, x3, [jssp, #-24]!
0xffff9142c7e8   616  str x4, [jssp, #16]
0xffff9142c7ec   620  mov x0, x5
0xffff9142c7f0   624  mov x1, x7
0xffff9142c7f4   628  ldr x2, pc+828 (addr 0x0000ffff9142cb30)    ;; external reference (isolate)
0xffff9142c7f8   632  ldr x16, pc+832 (addr 0x0000ffff9142cb38)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142c7fc   636  and csp, jssp, #0xfffffffffffffff0
0xffff9142c800   640  blr x16
0xffff9142c804   644  ldp x4, x5, [jssp, #16]
0xffff9142c808   648  ldp x2, x3, [jssp], #32
0xffff9142c80c   652  ldp x9, x10, [jssp, #16]
0xffff9142c810   656  ldp x7, x8, [jssp], #32
0xffff9142c814   660  ldp x13, x14, [jssp, #16]
0xffff9142c818   664  ldp x11, x12, [jssp], #32
0xffff9142c81c   668  ldr lr, [jssp, #16]
0xffff9142c820   672  ldp x15, x18, [jssp], #24
0xffff9142c824   676  ldp x1, x0, [jssp], #16
0xffff9142c828   680  ret
0xffff9142c82c   684  sub csp, jssp, #0x10 (16)
0xffff9142c830   688  stp x1, x0, [jssp, #-16]!
0xffff9142c834   692  ldr x6, [x7]
0xffff9142c838   696  and x16, x6, #0xfffffffffff00000
0xffff9142c83c   700  ldr x16, [x16, #8]
0xffff9142c840   704  tst x16, #0x18
0xffff9142c844   708  b.eq #+0x19c (addr 0xffff9142c9e0)
0xffff9142c848   712  and x16, x5, #0xfffffffffff00000
0xffff9142c84c   716  ldr x16, [x16, #8]
0xffff9142c850   720  tst x16, #0x18
0xffff9142c854   724  b.ne #+0x18c (addr 0xffff9142c9e0)
0xffff9142c858   728  and x6, x5, #0xfffffffffff00000
0xffff9142c85c   732  ldr x0, [x6, #104]
0xffff9142c860   736  subs x0, x0, #0x1 (1)
0xffff9142c864   740  str x0, [x6, #104]
0xffff9142c868   744  b.mi #+0xe4 (addr 0xffff9142c94c)
0xffff9142c86c   748  ubfx x16, x5, #8, #12
0xffff9142c870   752  and x6, x5, #0xfffffffffff00000
0xffff9142c874   756  add x6, x6, x16, lsl #2
0xffff9142c878   760  ubfx x0, x5, #3, #5
0xffff9142c87c   764  ldr x6, [x6, #360]
0xffff9142c880   768  lsr x6, x6, x0
0xffff9142c884   772  tbz w6, #0, #+0x8 (addr 0xffff9142c88c)
0xffff9142c888   776  tbnz w6, #1, #+0x3c (addr 0xffff9142c8c4)
0xffff9142c88c   780  ldp x1, x0, [jssp], #16
0xffff9142c890   784  ldr x16, pc+688 (addr 0x0000ffff9142cb40)    ;; external reference (store_buffer_top)
0xffff9142c894   788  ldr x6, [x16]
0xffff9142c898   792  str x7, [x6], #8
0xffff9142c89c   796  str x6, [x16]
0xffff9142c8a0   800  tst x6, #0x1ffff
0xffff9142c8a4   804  b.eq #+0x8 (addr 0xffff9142c8ac)
0xffff9142c8a8   808  ret
0xffff9142c8ac   812  sub csp, jssp, #0x8 (8)
0xffff9142c8b0   816  str lr, [jssp, #-8]!
0xffff9142c8b4   820  ldr x17, pc+660 (addr 0x0000ffff9142cb48)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142c8b8   824  blr x17
0xffff9142c8bc   828  ldr lr, [jssp], #8
0xffff9142c8c0   832  ret
0xffff9142c8c4   836  ldr x6, [x7]
0xffff9142c8c8   840  and x0, x6, #0xfffffffffff00000
0xffff9142c8cc   844  ldr x0, [x0, #8]
0xffff9142c8d0   848  tbz w0, #6, #+0x18 (addr 0xffff9142c8e8)
0xffff9142c8d4   852  and x0, x5, #0xfffffffffff00000
0xffff9142c8d8   856  ldr x0, [x0, #8]
0xffff9142c8dc   860  movz x16, #0x58
0xffff9142c8e0   864  tst x0, x16
0xffff9142c8e4   868  b.eq #+0x68 (addr 0xffff9142c94c)
0xffff9142c8e8   872  sub csp, jssp, #0x10 (16)
0xffff9142c8ec   876  stp x5, x7, [jssp, #-16]!
0xffff9142c8f0   880  ubfx x16, x6, #8, #12
0xffff9142c8f4   884  and x0, x6, #0xfffffffffff00000
0xffff9142c8f8   888  add x0, x0, x16, lsl #2
0xffff9142c8fc   892  ubfx x5, x6, #3, #5
0xffff9142c900   896  ldr x7, [x0, #360]
0xffff9142c904   900  lsr x7, x7, x5
0xffff9142c908   904  tbz w7, #0, #+0x40 (addr 0xffff9142c948)
0xffff9142c90c   908  ldp x5, x7, [jssp], #16
0xffff9142c910   912  ldp x1, x0, [jssp], #16
0xffff9142c914   916  ldr x16, pc+572 (addr 0x0000ffff9142cb50)    ;; external reference (store_buffer_top)
0xffff9142c918   920  ldr x6, [x16]
0xffff9142c91c   924  str x7, [x6], #8
0xffff9142c920   928  str x6, [x16]
0xffff9142c924   932  tst x6, #0x1ffff
0xffff9142c928   936  b.eq #+0x8 (addr 0xffff9142c930)
0xffff9142c92c   940  ret
0xffff9142c930   944  sub csp, jssp, #0x8 (8)
0xffff9142c934   948  str lr, [jssp, #-8]!
0xffff9142c938   952  ldr x17, pc+544 (addr 0x0000ffff9142cb58)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142c93c   956  blr x17
0xffff9142c940   960  ldr lr, [jssp], #8
0xffff9142c944   964  ret
0xffff9142c948   968  ldp x5, x7, [jssp], #16
0xffff9142c94c   972  sub csp, jssp, #0x78 (120)
0xffff9142c950   976  stp x14, x15, [jssp, #-32]!
0xffff9142c954   980  stp x18, lr, [jssp, #16]
0xffff9142c958   984  stp x10, x11, [jssp, #-32]!
0xffff9142c95c   988  stp x12, x13, [jssp, #16]
0xffff9142c960   992  stp x5, x7, [jssp, #-32]!
0xffff9142c964   996  stp x8, x9, [jssp, #16]
0xffff9142c968  1000  stp x2, x3, [jssp, #-24]!
0xffff9142c96c  1004  str x4, [jssp, #16]
0xffff9142c970  1008  mov x0, x5
0xffff9142c974  1012  mov x1, x7
0xffff9142c978  1016  ldr x2, pc+488 (addr 0x0000ffff9142cb60)    ;; external reference (isolate)
0xffff9142c97c  1020  ldr x16, pc+492 (addr 0x0000ffff9142cb68)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142c980  1024  and csp, jssp, #0xfffffffffffffff0
0xffff9142c984  1028  blr x16
0xffff9142c988  1032  ldp x4, x5, [jssp, #16]
0xffff9142c98c  1036  ldp x2, x3, [jssp], #32
0xffff9142c990  1040  ldp x9, x10, [jssp, #16]
0xffff9142c994  1044  ldp x7, x8, [jssp], #32
0xffff9142c998  1048  ldp x13, x14, [jssp, #16]
0xffff9142c99c  1052  ldp x11, x12, [jssp], #32
0xffff9142c9a0  1056  ldr lr, [jssp, #16]
0xffff9142c9a4  1060  ldp x15, x18, [jssp], #24
0xffff9142c9a8  1064  ldp x1, x0, [jssp], #16
0xffff9142c9ac  1068  ldr x16, pc+452 (addr 0x0000ffff9142cb70)    ;; external reference (store_buffer_top)
0xffff9142c9b0  1072  ldr x6, [x16]
0xffff9142c9b4  1076  str x7, [x6], #8
0xffff9142c9b8  1080  str x6, [x16]
0xffff9142c9bc  1084  tst x6, #0x1ffff
0xffff9142c9c0  1088  b.eq #+0x8 (addr 0xffff9142c9c8)
0xffff9142c9c4  1092  ret
0xffff9142c9c8  1096  sub csp, jssp, #0x8 (8)
0xffff9142c9cc  1100  str lr, [jssp, #-8]!
0xffff9142c9d0  1104  ldr x17, pc+424 (addr 0x0000ffff9142cb78)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142c9d4  1108  blr x17
0xffff9142c9d8  1112  ldr lr, [jssp], #8
0xffff9142c9dc  1116  ret
0xffff9142c9e0  1120  and x6, x5, #0xfffffffffff00000
0xffff9142c9e4  1124  ldr x0, [x6, #104]
0xffff9142c9e8  1128  subs x0, x0, #0x1 (1)
0xffff9142c9ec  1132  str x0, [x6, #104]
0xffff9142c9f0  1136  b.mi #+0x84 (addr 0xffff9142ca74)
0xffff9142c9f4  1140  ubfx x16, x5, #8, #12
0xffff9142c9f8  1144  and x6, x5, #0xfffffffffff00000
0xffff9142c9fc  1148  add x6, x6, x16, lsl #2
0xffff9142ca00  1152  ubfx x0, x5, #3, #5
0xffff9142ca04  1156  ldr x6, [x6, #360]
0xffff9142ca08  1160  lsr x6, x6, x0
0xffff9142ca0c  1164  tbz w6, #0, #+0x8 (addr 0xffff9142ca14)
0xffff9142ca10  1168  tbnz w6, #1, #+0xc (addr 0xffff9142ca1c)
0xffff9142ca14  1172  ldp x1, x0, [jssp], #16
0xffff9142ca18  1176  ret
0xffff9142ca1c  1180  ldr x6, [x7]
0xffff9142ca20  1184  and x0, x6, #0xfffffffffff00000
0xffff9142ca24  1188  ldr x0, [x0, #8]
0xffff9142ca28  1192  tbz w0, #6, #+0x18 (addr 0xffff9142ca40)
0xffff9142ca2c  1196  and x0, x5, #0xfffffffffff00000
0xffff9142ca30  1200  ldr x0, [x0, #8]
0xffff9142ca34  1204  movz x16, #0x58
0xffff9142ca38  1208  tst x0, x16
0xffff9142ca3c  1212  b.eq #+0x38 (addr 0xffff9142ca74)
0xffff9142ca40  1216  sub csp, jssp, #0x10 (16)
0xffff9142ca44  1220  stp x5, x7, [jssp, #-16]!
0xffff9142ca48  1224  ubfx x16, x6, #8, #12
0xffff9142ca4c  1228  and x0, x6, #0xfffffffffff00000
0xffff9142ca50  1232  add x0, x0, x16, lsl #2
0xffff9142ca54  1236  ubfx x5, x6, #3, #5
0xffff9142ca58  1240  ldr x7, [x0, #360]
0xffff9142ca5c  1244  lsr x7, x7, x5
0xffff9142ca60  1248  tbz w7, #0, #+0x10 (addr 0xffff9142ca70)
0xffff9142ca64  1252  ldp x5, x7, [jssp], #16
0xffff9142ca68  1256  ldp x1, x0, [jssp], #16
0xffff9142ca6c  1260  ret
0xffff9142ca70  1264  ldp x5, x7, [jssp], #16
0xffff9142ca74  1268  sub csp, jssp, #0x78 (120)
0xffff9142ca78  1272  stp x14, x15, [jssp, #-32]!
0xffff9142ca7c  1276  stp x18, lr, [jssp, #16]
0xffff9142ca80  1280  stp x10, x11, [jssp, #-32]!
0xffff9142ca84  1284  stp x12, x13, [jssp, #16]
0xffff9142ca88  1288  stp x5, x7, [jssp, #-32]!
0xffff9142ca8c  1292  stp x8, x9, [jssp, #16]
0xffff9142ca90  1296  stp x2, x3, [jssp, #-24]!
0xffff9142ca94  1300  str x4, [jssp, #16]
0xffff9142ca98  1304  mov x0, x5
0xffff9142ca9c  1308  mov x1, x7
0xffff9142caa0  1312  ldr x2, pc+224 (addr 0x0000ffff9142cb80)    ;; external reference (isolate)
0xffff9142caa4  1316  ldr x16, pc+228 (addr 0x0000ffff9142cb88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142caa8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff9142caac  1324  blr x16
0xffff9142cab0  1328  ldp x4, x5, [jssp, #16]
0xffff9142cab4  1332  ldp x2, x3, [jssp], #32
0xffff9142cab8  1336  ldp x9, x10, [jssp, #16]
0xffff9142cabc  1340  ldp x7, x8, [jssp], #32
0xffff9142cac0  1344  ldp x13, x14, [jssp, #16]
0xffff9142cac4  1348  ldp x11, x12, [jssp], #32
0xffff9142cac8  1352  ldr lr, [jssp, #16]
0xffff9142cacc  1356  ldp x15, x18, [jssp], #24
0xffff9142cad0  1360  ldp x1, x0, [jssp], #16
0xffff9142cad4  1364  ret
0xffff9142cad8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9142cadc  1372  d63f03e0       constant
0xffff9142cae0  1376  4117f8c0       constant
0xffff9142cae4  1380  00000000       constant
0xffff9142cae8  1384  914064c0       constant
0xffff9142caec  1388  0000ffff       constant
0xffff9142caf0  1392  4117f8c0       constant
0xffff9142caf4  1396  00000000       constant
0xffff9142caf8  1400  914064c0       constant
0xffff9142cafc  1404  0000ffff       constant
0xffff9142cb00  1408  4117f8c0       constant
0xffff9142cb04  1412  00000000       constant
0xffff9142cb08  1416  914064c0       constant
0xffff9142cb0c  1420  0000ffff       constant
0xffff9142cb10  1424  4117e2d0       constant
0xffff9142cb14  1428  00000000       constant
0xffff9142cb18  1432  00c2d958       constant
0xffff9142cb1c  1436  00000000       constant
0xffff9142cb20  1440  4117f8c0       constant
0xffff9142cb24  1444  00000000       constant
0xffff9142cb28  1448  914064c0       constant
0xffff9142cb2c  1452  0000ffff       constant
0xffff9142cb30  1456  4117e2d0       constant
0xffff9142cb34  1460  00000000       constant
0xffff9142cb38  1464  00c2d958       constant
0xffff9142cb3c  1468  00000000       constant
0xffff9142cb40  1472  4117f8c0       constant
0xffff9142cb44  1476  00000000       constant
0xffff9142cb48  1480  914064c0       constant
0xffff9142cb4c  1484  0000ffff       constant
0xffff9142cb50  1488  4117f8c0       constant
0xffff9142cb54  1492  00000000       constant
0xffff9142cb58  1496  914064c0       constant
0xffff9142cb5c  1500  0000ffff       constant
0xffff9142cb60  1504  4117e2d0       constant
0xffff9142cb64  1508  00000000       constant
0xffff9142cb68  1512  00c2d958       constant
0xffff9142cb6c  1516  00000000       constant
0xffff9142cb70  1520  4117f8c0       constant
0xffff9142cb74  1524  00000000       constant
0xffff9142cb78  1528  914064c0       constant
0xffff9142cb7c  1532  0000ffff       constant
0xffff9142cb80  1536  4117e2d0       constant
0xffff9142cb84  1540  00000000       constant
0xffff9142cb88  1544  00c2d958       constant
0xffff9142cb8c  1548  00000000       constant


RelocInfo (size = 59)
0xffff9142c588  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142c5ac  code target (STUB)  (0xffff914064c0)
0xffff9142c624  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142c648  code target (STUB)  (0xffff914064c0)
0xffff9142c688  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142c6ac  code target (STUB)  (0xffff914064c0)
0xffff9142c6ec  external reference (isolate)  (0x4117e2d0)
0xffff9142c6f0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142c720  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142c744  code target (STUB)  (0xffff914064c0)
0xffff9142c7f4  external reference (isolate)  (0x4117e2d0)
0xffff9142c7f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142c890  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142c8b4  code target (STUB)  (0xffff914064c0)
0xffff9142c914  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142c938  code target (STUB)  (0xffff914064c0)
0xffff9142c978  external reference (isolate)  (0x4117e2d0)
0xffff9142c97c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142c9ac  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142c9d0  code target (STUB)  (0xffff914064c0)
0xffff9142caa0  external reference (isolate)  (0x4117e2d0)
0xffff9142caa4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142cad8  constant pool (size 184)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 333)
0xffff9142d100     0  movz x2, #0xf2c0
0xffff9142d104     4  movk x2, #0x4117, lsl #16
0xffff9142d108     8  ldp x3, x0, [x2]
0xffff9142d10c    12  adds x16, x3, #0x58 (88)
0xffff9142d110    16  ccmp x16, x0, #nzCv, lo
0xffff9142d114    20  b.hi #+0x64 (addr 0xffff9142d178)
0xffff9142d118    24  str x16, [x2]
0xffff9142d11c    28  orr x3, x3, #0x1
0xffff9142d120    32  ldr x0, pc+200 (addr 0x0000ffff9142d1e8)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9142d124    36  stur x0, [x3, #-1]
0xffff9142d128    40  movz x0, #0x900000000
0xffff9142d12c    44  stur x0, [x3, #7]
0xffff9142d130    48  stur x1, [x3, #15]
0xffff9142d134    52  stur cp, [x3, #23]
0xffff9142d138    56  ldr x0, pc+184 (addr 0x0000ffff9142d1f0)    ;; object: 0x49b04519 <the hole>
0xffff9142d13c    60  stur x0, [x3, #31]
0xffff9142d140    64  ldur x0, [cp, #39]
0xffff9142d144    68  stur x0, [x3, #39]
0xffff9142d148    72  ldr x0, pc+176 (addr 0x0000ffff9142d1f8)    ;; object: 0x49b04241 <undefined>
0xffff9142d14c    76  stur x0, [x3, #47]
0xffff9142d150    80  ldr x0, pc+176 (addr 0x0000ffff9142d200)    ;; object: 0x49b04241 <undefined>
0xffff9142d154    84  stur x0, [x3, #55]
0xffff9142d158    88  ldr x0, pc+176 (addr 0x0000ffff9142d208)    ;; object: 0x49b04241 <undefined>
0xffff9142d15c    92  stur x0, [x3, #63]
0xffff9142d160    96  ldr x0, pc+176 (addr 0x0000ffff9142d210)    ;; object: 0x49b04241 <undefined>
0xffff9142d164   100  stur x0, [x3, #71]
0xffff9142d168   104  ldr x0, pc+176 (addr 0x0000ffff9142d218)    ;; object: 0x49b04241 <undefined>
0xffff9142d16c   108  stur x0, [x3, #79]
0xffff9142d170   112  mov x0, x3
0xffff9142d174   116  ret
0xffff9142d178   120  sub csp, jssp, #0x10 (16)
0xffff9142d17c   124  stp fp, lr, [jssp, #-16]!
0xffff9142d180   128  movz fp, #0xa00000000
0xffff9142d184   132  sub csp, jssp, #0x8 (8)
0xffff9142d188   136  str fp, [jssp, #-8]!
0xffff9142d18c   140  add fp, jssp, #0x8 (8)
0xffff9142d190   144  movz x3, #0x0
0xffff9142d194   148  mov x16, lr
0xffff9142d198   152  ldr x17, pc+136 (addr 0x0000ffff9142d220)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9142d19c   156  blr x17
0xffff9142d1a0   160  movz x0, #0x5800000000
0xffff9142d1a4   164  movz x10, #0x0
0xffff9142d1a8   168  sub csp, jssp, #0x10 (16)
0xffff9142d1ac   172  stp x10, x0, [jssp, #-16]!
0xffff9142d1b0   176  movz x0, #0x2
0xffff9142d1b4   180  movz x1, #0x5b88
0xffff9142d1b8   184  movk x1, #0xe2, lsl #16
0xffff9142d1bc   188  ldr x16, pc+108 (addr 0x0000ffff9142d228)    ;; code: STUB, CEntryStub, minor: 5
0xffff9142d1c0   192  blr x16
0xffff9142d1c4   196  str x0, [jssp, #24]
0xffff9142d1c8   200  ldr x16, pc+104 (addr 0x0000ffff9142d230)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9142d1cc   204  blr x16
0xffff9142d1d0   208  ldr lr, [jssp, #16]
0xffff9142d1d4   212  ldp xzr, fp, [jssp], #24
0xffff9142d1d8   216  b #-0xb8 (addr 0xffff9142d120)
0xffff9142d1dc   220  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff9142d1e0   224  d63f03e0       constant
0xffff9142d1e4   228  d503201f       constant
0xffff9142d1e8   232  36406149       constant
0xffff9142d1ec   236  00000000       constant
0xffff9142d1f0   240  49b04519       constant
0xffff9142d1f4   244  00000000       constant
0xffff9142d1f8   248  49b04241       constant
0xffff9142d1fc   252  00000000       constant
0xffff9142d200   256  49b04241       constant
0xffff9142d204   260  00000000       constant
0xffff9142d208   264  49b04241       constant
0xffff9142d20c   268  00000000       constant
0xffff9142d210   272  49b04241       constant
0xffff9142d214   276  00000000       constant
0xffff9142d218   280  49b04241       constant
0xffff9142d21c   284  00000000       constant
0xffff9142d220   288  91406820       constant
0xffff9142d224   292  0000ffff       constant
0xffff9142d228   296  91406260       constant
0xffff9142d22c   300  0000ffff       constant
0xffff9142d230   304  914068e0       constant
0xffff9142d234   308  0000ffff       constant


Safepoints (size = 21)
0xffff9142d1c4   196  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 16)
0xffff9142d120  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9142d138  embedded object  (0x49b04519 <the hole>)
0xffff9142d148  embedded object  (0x49b04241 <undefined>)
0xffff9142d150  embedded object  (0x49b04241 <undefined>)
0xffff9142d158  embedded object  (0x49b04241 <undefined>)
0xffff9142d160  embedded object  (0x49b04241 <undefined>)
0xffff9142d168  embedded object  (0x49b04241 <undefined>)
0xffff9142d198  code target (STUB)  (0xffff91406820)
0xffff9142d1bc  code target (STUB)  (0xffff91406260)
0xffff9142d1c8  code target (STUB)  (0xffff914068e0)
0xffff9142d1dc  constant pool (size 92)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1904)
0xffff9142d2c0     0  adr xzr, #+0x40 (addr 0xffff9142d300)
0xffff9142d2c4     4  adr xzr, #+0x358 (addr 0xffff9142d61c)
0xffff9142d2c8     8  ldr x16, pc+1720 (addr 0x0000ffff9142d980)    ;; external reference (store_buffer_top)
0xffff9142d2cc    12  ldr x4, [x16]
0xffff9142d2d0    16  str x6, [x4], #8
0xffff9142d2d4    20  str x4, [x16]
0xffff9142d2d8    24  tst x4, #0x1ffff
0xffff9142d2dc    28  b.eq #+0x8 (addr 0xffff9142d2e4)
0xffff9142d2e0    32  ret
0xffff9142d2e4    36  sub csp, jssp, #0x8 (8)
0xffff9142d2e8    40  str lr, [jssp, #-8]!
0xffff9142d2ec    44  ldr x17, pc+1692 (addr 0x0000ffff9142d988)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9142d2f0    48  blr x17
0xffff9142d2f4    52  ldr lr, [jssp], #8
0xffff9142d2f8    56  ret
0xffff9142d2fc    60  ret
0xffff9142d300    64  sub csp, jssp, #0x10 (16)
0xffff9142d304    68  stp x2, x1, [jssp, #-16]!
0xffff9142d308    72  ldr x4, [x6]
0xffff9142d30c    76  and x16, x4, #0xfffffffffff00000
0xffff9142d310    80  ldr x16, [x16, #8]
0xffff9142d314    84  tst x16, #0x18
0xffff9142d318    88  b.eq #+0x1d4 (addr 0xffff9142d4ec)
0xffff9142d31c    92  and x16, x0, #0xfffffffffff00000
0xffff9142d320    96  ldr x16, [x16, #8]
0xffff9142d324   100  tst x16, #0x18
0xffff9142d328   104  b.ne #+0x1c4 (addr 0xffff9142d4ec)
0xffff9142d32c   108  and x4, x0, #0xfffffffffff00000
0xffff9142d330   112  ldr x1, [x4, #104]
0xffff9142d334   116  subs x1, x1, #0x1 (1)
0xffff9142d338   120  str x1, [x4, #104]
0xffff9142d33c   124  b.mi #+0xc4 (addr 0xffff9142d400)
0xffff9142d340   128  ubfx x16, x0, #8, #12
0xffff9142d344   132  and x4, x0, #0xfffffffffff00000
0xffff9142d348   136  add x4, x4, x16, lsl #2
0xffff9142d34c   140  ubfx x1, x0, #3, #5
0xffff9142d350   144  ldr x4, [x4, #360]
0xffff9142d354   148  lsr x4, x4, x1
0xffff9142d358   152  tbz w4, #0, #+0x8 (addr 0xffff9142d360)
0xffff9142d35c   156  tbnz w4, #1, #+0x3c (addr 0xffff9142d398)
0xffff9142d360   160  ldp x2, x1, [jssp], #16
0xffff9142d364   164  ldr x16, pc+1580 (addr 0x0000ffff9142d990)    ;; external reference (store_buffer_top)
0xffff9142d368   168  ldr x4, [x16]
0xffff9142d36c   172  str x6, [x4], #8
0xffff9142d370   176  str x4, [x16]
0xffff9142d374   180  tst x4, #0x1ffff
0xffff9142d378   184  b.eq #+0x8 (addr 0xffff9142d380)
0xffff9142d37c   188  ret
0xffff9142d380   192  sub csp, jssp, #0x8 (8)
0xffff9142d384   196  str lr, [jssp, #-8]!
0xffff9142d388   200  ldr x17, pc+1552 (addr 0x0000ffff9142d998)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9142d38c   204  blr x17
0xffff9142d390   208  ldr lr, [jssp], #8
0xffff9142d394   212  ret
0xffff9142d398   216  ldr x4, [x6]
0xffff9142d39c   220  sub csp, jssp, #0x10 (16)
0xffff9142d3a0   224  stp x0, x6, [jssp, #-16]!
0xffff9142d3a4   228  ubfx x16, x4, #8, #12
0xffff9142d3a8   232  and x1, x4, #0xfffffffffff00000
0xffff9142d3ac   236  add x1, x1, x16, lsl #2
0xffff9142d3b0   240  ubfx x0, x4, #3, #5
0xffff9142d3b4   244  ldr x6, [x1, #360]
0xffff9142d3b8   248  lsr x6, x6, x0
0xffff9142d3bc   252  tbz w6, #0, #+0x40 (addr 0xffff9142d3fc)
0xffff9142d3c0   256  ldp x0, x6, [jssp], #16
0xffff9142d3c4   260  ldp x2, x1, [jssp], #16
0xffff9142d3c8   264  ldr x16, pc+1496 (addr 0x0000ffff9142d9a0)    ;; external reference (store_buffer_top)
0xffff9142d3cc   268  ldr x4, [x16]
0xffff9142d3d0   272  str x6, [x4], #8
0xffff9142d3d4   276  str x4, [x16]
0xffff9142d3d8   280  tst x4, #0x1ffff
0xffff9142d3dc   284  b.eq #+0x8 (addr 0xffff9142d3e4)
0xffff9142d3e0   288  ret
0xffff9142d3e4   292  sub csp, jssp, #0x8 (8)
0xffff9142d3e8   296  str lr, [jssp, #-8]!
0xffff9142d3ec   300  ldr x17, pc+1468 (addr 0x0000ffff9142d9a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9142d3f0   304  blr x17
0xffff9142d3f4   308  ldr lr, [jssp], #8
0xffff9142d3f8   312  ret
0xffff9142d3fc   316  ldp x0, x6, [jssp], #16
0xffff9142d400   320  sub csp, jssp, #0x78 (120)
0xffff9142d404   324  stp x14, x15, [jssp, #-32]!
0xffff9142d408   328  stp x18, lr, [jssp, #16]
0xffff9142d40c   332  stp x10, x11, [jssp, #-32]!
0xffff9142d410   336  stp x12, x13, [jssp, #16]
0xffff9142d414   340  stp x6, x7, [jssp, #-32]!
0xffff9142d418   344  stp x8, x9, [jssp, #16]
0xffff9142d41c   348  stp x0, x3, [jssp, #-24]!
0xffff9142d420   352  str x5, [jssp, #16]
0xffff9142d424   356  sub csp, jssp, #0xb0 (176)
0xffff9142d428   360  stp d26, d27, [jssp, #-32]!
0xffff9142d42c   364  stp d28, d29, [jssp, #16]
0xffff9142d430   368  stp d22, d23, [jssp, #-32]!
0xffff9142d434   372  stp d24, d25, [jssp, #16]
0xffff9142d438   376  stp d18, d19, [jssp, #-32]!
0xffff9142d43c   380  stp d20, d21, [jssp, #16]
0xffff9142d440   384  stp d6, d7, [jssp, #-32]!
0xffff9142d444   388  stp d16, d17, [jssp, #16]
0xffff9142d448   392  stp d2, d3, [jssp, #-32]!
0xffff9142d44c   396  stp d4, d5, [jssp, #16]
0xffff9142d450   400  stp d0, d1, [jssp, #-16]!
0xffff9142d454   404  mov x1, x6
0xffff9142d458   408  ldr x2, pc+1368 (addr 0x0000ffff9142d9b0)    ;; external reference (isolate)
0xffff9142d45c   412  ldr x16, pc+1372 (addr 0x0000ffff9142d9b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142d460   416  and csp, jssp, #0xfffffffffffffff0
0xffff9142d464   420  blr x16
0xffff9142d468   424  ldp d2, d3, [jssp, #16]
0xffff9142d46c   428  ldp d0, d1, [jssp], #32
0xffff9142d470   432  ldp d6, d7, [jssp, #16]
0xffff9142d474   436  ldp d4, d5, [jssp], #32
0xffff9142d478   440  ldp d18, d19, [jssp, #16]
0xffff9142d47c   444  ldp d16, d17, [jssp], #32
0xffff9142d480   448  ldp d22, d23, [jssp, #16]
0xffff9142d484   452  ldp d20, d21, [jssp], #32
0xffff9142d488   456  ldp d26, d27, [jssp, #16]
0xffff9142d48c   460  ldp d24, d25, [jssp], #32
0xffff9142d490   464  ldp d28, d29, [jssp], #16
0xffff9142d494   468  ldp x5, x6, [jssp, #16]
0xffff9142d498   472  ldp x0, x3, [jssp], #32
0xffff9142d49c   476  ldp x9, x10, [jssp, #16]
0xffff9142d4a0   480  ldp x7, x8, [jssp], #32
0xffff9142d4a4   484  ldp x13, x14, [jssp, #16]
0xffff9142d4a8   488  ldp x11, x12, [jssp], #32
0xffff9142d4ac   492  ldr lr, [jssp, #16]
0xffff9142d4b0   496  ldp x15, x18, [jssp], #24
0xffff9142d4b4   500  ldp x2, x1, [jssp], #16
0xffff9142d4b8   504  ldr x16, pc+1288 (addr 0x0000ffff9142d9c0)    ;; external reference (store_buffer_top)
0xffff9142d4bc   508  ldr x4, [x16]
0xffff9142d4c0   512  str x6, [x4], #8
0xffff9142d4c4   516  str x4, [x16]
0xffff9142d4c8   520  tst x4, #0x1ffff
0xffff9142d4cc   524  b.eq #+0x8 (addr 0xffff9142d4d4)
0xffff9142d4d0   528  ret
0xffff9142d4d4   532  sub csp, jssp, #0x8 (8)
0xffff9142d4d8   536  str lr, [jssp, #-8]!
0xffff9142d4dc   540  ldr x17, pc+1260 (addr 0x0000ffff9142d9c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9142d4e0   544  blr x17
0xffff9142d4e4   548  ldr lr, [jssp], #8
0xffff9142d4e8   552  ret
0xffff9142d4ec   556  and x4, x0, #0xfffffffffff00000
0xffff9142d4f0   560  ldr x1, [x4, #104]
0xffff9142d4f4   564  subs x1, x1, #0x1 (1)
0xffff9142d4f8   568  str x1, [x4, #104]
0xffff9142d4fc   572  b.mi #+0x64 (addr 0xffff9142d560)
0xffff9142d500   576  ubfx x16, x0, #8, #12
0xffff9142d504   580  and x4, x0, #0xfffffffffff00000
0xffff9142d508   584  add x4, x4, x16, lsl #2
0xffff9142d50c   588  ubfx x1, x0, #3, #5
0xffff9142d510   592  ldr x4, [x4, #360]
0xffff9142d514   596  lsr x4, x4, x1
0xffff9142d518   600  tbz w4, #0, #+0x8 (addr 0xffff9142d520)
0xffff9142d51c   604  tbnz w4, #1, #+0xc (addr 0xffff9142d528)
0xffff9142d520   608  ldp x2, x1, [jssp], #16
0xffff9142d524   612  ret
0xffff9142d528   616  ldr x4, [x6]
0xffff9142d52c   620  sub csp, jssp, #0x10 (16)
0xffff9142d530   624  stp x0, x6, [jssp, #-16]!
0xffff9142d534   628  ubfx x16, x4, #8, #12
0xffff9142d538   632  and x1, x4, #0xfffffffffff00000
0xffff9142d53c   636  add x1, x1, x16, lsl #2
0xffff9142d540   640  ubfx x0, x4, #3, #5
0xffff9142d544   644  ldr x6, [x1, #360]
0xffff9142d548   648  lsr x6, x6, x0
0xffff9142d54c   652  tbz w6, #0, #+0x10 (addr 0xffff9142d55c)
0xffff9142d550   656  ldp x0, x6, [jssp], #16
0xffff9142d554   660  ldp x2, x1, [jssp], #16
0xffff9142d558   664  ret
0xffff9142d55c   668  ldp x0, x6, [jssp], #16
0xffff9142d560   672  sub csp, jssp, #0x78 (120)
0xffff9142d564   676  stp x14, x15, [jssp, #-32]!
0xffff9142d568   680  stp x18, lr, [jssp, #16]
0xffff9142d56c   684  stp x10, x11, [jssp, #-32]!
0xffff9142d570   688  stp x12, x13, [jssp, #16]
0xffff9142d574   692  stp x6, x7, [jssp, #-32]!
0xffff9142d578   696  stp x8, x9, [jssp, #16]
0xffff9142d57c   700  stp x0, x3, [jssp, #-24]!
0xffff9142d580   704  str x5, [jssp, #16]
0xffff9142d584   708  sub csp, jssp, #0xb0 (176)
0xffff9142d588   712  stp d26, d27, [jssp, #-32]!
0xffff9142d58c   716  stp d28, d29, [jssp, #16]
0xffff9142d590   720  stp d22, d23, [jssp, #-32]!
0xffff9142d594   724  stp d24, d25, [jssp, #16]
0xffff9142d598   728  stp d18, d19, [jssp, #-32]!
0xffff9142d59c   732  stp d20, d21, [jssp, #16]
0xffff9142d5a0   736  stp d6, d7, [jssp, #-32]!
0xffff9142d5a4   740  stp d16, d17, [jssp, #16]
0xffff9142d5a8   744  stp d2, d3, [jssp, #-32]!
0xffff9142d5ac   748  stp d4, d5, [jssp, #16]
0xffff9142d5b0   752  stp d0, d1, [jssp, #-16]!
0xffff9142d5b4   756  mov x1, x6
0xffff9142d5b8   760  ldr x2, pc+1048 (addr 0x0000ffff9142d9d0)    ;; external reference (isolate)
0xffff9142d5bc   764  ldr x16, pc+1052 (addr 0x0000ffff9142d9d8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142d5c0   768  and csp, jssp, #0xfffffffffffffff0
0xffff9142d5c4   772  blr x16
0xffff9142d5c8   776  ldp d2, d3, [jssp, #16]
0xffff9142d5cc   780  ldp d0, d1, [jssp], #32
0xffff9142d5d0   784  ldp d6, d7, [jssp, #16]
0xffff9142d5d4   788  ldp d4, d5, [jssp], #32
0xffff9142d5d8   792  ldp d18, d19, [jssp, #16]
0xffff9142d5dc   796  ldp d16, d17, [jssp], #32
0xffff9142d5e0   800  ldp d22, d23, [jssp, #16]
0xffff9142d5e4   804  ldp d20, d21, [jssp], #32
0xffff9142d5e8   808  ldp d26, d27, [jssp, #16]
0xffff9142d5ec   812  ldp d24, d25, [jssp], #32
0xffff9142d5f0   816  ldp d28, d29, [jssp], #16
0xffff9142d5f4   820  ldp x5, x6, [jssp, #16]
0xffff9142d5f8   824  ldp x0, x3, [jssp], #32
0xffff9142d5fc   828  ldp x9, x10, [jssp, #16]
0xffff9142d600   832  ldp x7, x8, [jssp], #32
0xffff9142d604   836  ldp x13, x14, [jssp, #16]
0xffff9142d608   840  ldp x11, x12, [jssp], #32
0xffff9142d60c   844  ldr lr, [jssp, #16]
0xffff9142d610   848  ldp x15, x18, [jssp], #24
0xffff9142d614   852  ldp x2, x1, [jssp], #16
0xffff9142d618   856  ret
0xffff9142d61c   860  sub csp, jssp, #0x10 (16)
0xffff9142d620   864  stp x2, x1, [jssp, #-16]!
0xffff9142d624   868  ldr x4, [x6]
0xffff9142d628   872  and x16, x4, #0xfffffffffff00000
0xffff9142d62c   876  ldr x16, [x16, #8]
0xffff9142d630   880  tst x16, #0x18
0xffff9142d634   884  b.eq #+0x1f4 (addr 0xffff9142d828)
0xffff9142d638   888  and x16, x0, #0xfffffffffff00000
0xffff9142d63c   892  ldr x16, [x16, #8]
0xffff9142d640   896  tst x16, #0x18
0xffff9142d644   900  b.ne #+0x1e4 (addr 0xffff9142d828)
0xffff9142d648   904  and x4, x0, #0xfffffffffff00000
0xffff9142d64c   908  ldr x1, [x4, #104]
0xffff9142d650   912  subs x1, x1, #0x1 (1)
0xffff9142d654   916  str x1, [x4, #104]
0xffff9142d658   920  b.mi #+0xe4 (addr 0xffff9142d73c)
0xffff9142d65c   924  ubfx x16, x0, #8, #12
0xffff9142d660   928  and x4, x0, #0xfffffffffff00000
0xffff9142d664   932  add x4, x4, x16, lsl #2
0xffff9142d668   936  ubfx x1, x0, #3, #5
0xffff9142d66c   940  ldr x4, [x4, #360]
0xffff9142d670   944  lsr x4, x4, x1
0xffff9142d674   948  tbz w4, #0, #+0x8 (addr 0xffff9142d67c)
0xffff9142d678   952  tbnz w4, #1, #+0x3c (addr 0xffff9142d6b4)
0xffff9142d67c   956  ldp x2, x1, [jssp], #16
0xffff9142d680   960  ldr x16, pc+864 (addr 0x0000ffff9142d9e0)    ;; external reference (store_buffer_top)
0xffff9142d684   964  ldr x4, [x16]
0xffff9142d688   968  str x6, [x4], #8
0xffff9142d68c   972  str x4, [x16]
0xffff9142d690   976  tst x4, #0x1ffff
0xffff9142d694   980  b.eq #+0x8 (addr 0xffff9142d69c)
0xffff9142d698   984  ret
0xffff9142d69c   988  sub csp, jssp, #0x8 (8)
0xffff9142d6a0   992  str lr, [jssp, #-8]!
0xffff9142d6a4   996  ldr x17, pc+836 (addr 0x0000ffff9142d9e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9142d6a8  1000  blr x17
0xffff9142d6ac  1004  ldr lr, [jssp], #8
0xffff9142d6b0  1008  ret
0xffff9142d6b4  1012  ldr x4, [x6]
0xffff9142d6b8  1016  and x1, x4, #0xfffffffffff00000
0xffff9142d6bc  1020  ldr x1, [x1, #8]
0xffff9142d6c0  1024  tbz w1, #6, #+0x18 (addr 0xffff9142d6d8)
0xffff9142d6c4  1028  and x1, x0, #0xfffffffffff00000
0xffff9142d6c8  1032  ldr x1, [x1, #8]
0xffff9142d6cc  1036  movz x16, #0x58
0xffff9142d6d0  1040  tst x1, x16
0xffff9142d6d4  1044  b.eq #+0x68 (addr 0xffff9142d73c)
0xffff9142d6d8  1048  sub csp, jssp, #0x10 (16)
0xffff9142d6dc  1052  stp x0, x6, [jssp, #-16]!
0xffff9142d6e0  1056  ubfx x16, x4, #8, #12
0xffff9142d6e4  1060  and x1, x4, #0xfffffffffff00000
0xffff9142d6e8  1064  add x1, x1, x16, lsl #2
0xffff9142d6ec  1068  ubfx x0, x4, #3, #5
0xffff9142d6f0  1072  ldr x6, [x1, #360]
0xffff9142d6f4  1076  lsr x6, x6, x0
0xffff9142d6f8  1080  tbz w6, #0, #+0x40 (addr 0xffff9142d738)
0xffff9142d6fc  1084  ldp x0, x6, [jssp], #16
0xffff9142d700  1088  ldp x2, x1, [jssp], #16
0xffff9142d704  1092  ldr x16, pc+748 (addr 0x0000ffff9142d9f0)    ;; external reference (store_buffer_top)
0xffff9142d708  1096  ldr x4, [x16]
0xffff9142d70c  1100  str x6, [x4], #8
0xffff9142d710  1104  str x4, [x16]
0xffff9142d714  1108  tst x4, #0x1ffff
0xffff9142d718  1112  b.eq #+0x8 (addr 0xffff9142d720)
0xffff9142d71c  1116  ret
0xffff9142d720  1120  sub csp, jssp, #0x8 (8)
0xffff9142d724  1124  str lr, [jssp, #-8]!
0xffff9142d728  1128  ldr x17, pc+720 (addr 0x0000ffff9142d9f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9142d72c  1132  blr x17
0xffff9142d730  1136  ldr lr, [jssp], #8
0xffff9142d734  1140  ret
0xffff9142d738  1144  ldp x0, x6, [jssp], #16
0xffff9142d73c  1148  sub csp, jssp, #0x78 (120)
0xffff9142d740  1152  stp x14, x15, [jssp, #-32]!
0xffff9142d744  1156  stp x18, lr, [jssp, #16]
0xffff9142d748  1160  stp x10, x11, [jssp, #-32]!
0xffff9142d74c  1164  stp x12, x13, [jssp, #16]
0xffff9142d750  1168  stp x6, x7, [jssp, #-32]!
0xffff9142d754  1172  stp x8, x9, [jssp, #16]
0xffff9142d758  1176  stp x0, x3, [jssp, #-24]!
0xffff9142d75c  1180  str x5, [jssp, #16]
0xffff9142d760  1184  sub csp, jssp, #0xb0 (176)
0xffff9142d764  1188  stp d26, d27, [jssp, #-32]!
0xffff9142d768  1192  stp d28, d29, [jssp, #16]
0xffff9142d76c  1196  stp d22, d23, [jssp, #-32]!
0xffff9142d770  1200  stp d24, d25, [jssp, #16]
0xffff9142d774  1204  stp d18, d19, [jssp, #-32]!
0xffff9142d778  1208  stp d20, d21, [jssp, #16]
0xffff9142d77c  1212  stp d6, d7, [jssp, #-32]!
0xffff9142d780  1216  stp d16, d17, [jssp, #16]
0xffff9142d784  1220  stp d2, d3, [jssp, #-32]!
0xffff9142d788  1224  stp d4, d5, [jssp, #16]
0xffff9142d78c  1228  stp d0, d1, [jssp, #-16]!
0xffff9142d790  1232  mov x1, x6
0xffff9142d794  1236  ldr x2, pc+620 (addr 0x0000ffff9142da00)    ;; external reference (isolate)
0xffff9142d798  1240  ldr x16, pc+624 (addr 0x0000ffff9142da08)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142d79c  1244  and csp, jssp, #0xfffffffffffffff0
0xffff9142d7a0  1248  blr x16
0xffff9142d7a4  1252  ldp d2, d3, [jssp, #16]
0xffff9142d7a8  1256  ldp d0, d1, [jssp], #32
0xffff9142d7ac  1260  ldp d6, d7, [jssp, #16]
0xffff9142d7b0  1264  ldp d4, d5, [jssp], #32
0xffff9142d7b4  1268  ldp d18, d19, [jssp, #16]
0xffff9142d7b8  1272  ldp d16, d17, [jssp], #32
0xffff9142d7bc  1276  ldp d22, d23, [jssp, #16]
0xffff9142d7c0  1280  ldp d20, d21, [jssp], #32
0xffff9142d7c4  1284  ldp d26, d27, [jssp, #16]
0xffff9142d7c8  1288  ldp d24, d25, [jssp], #32
0xffff9142d7cc  1292  ldp d28, d29, [jssp], #16
0xffff9142d7d0  1296  ldp x5, x6, [jssp, #16]
0xffff9142d7d4  1300  ldp x0, x3, [jssp], #32
0xffff9142d7d8  1304  ldp x9, x10, [jssp, #16]
0xffff9142d7dc  1308  ldp x7, x8, [jssp], #32
0xffff9142d7e0  1312  ldp x13, x14, [jssp, #16]
0xffff9142d7e4  1316  ldp x11, x12, [jssp], #32
0xffff9142d7e8  1320  ldr lr, [jssp, #16]
0xffff9142d7ec  1324  ldp x15, x18, [jssp], #24
0xffff9142d7f0  1328  ldp x2, x1, [jssp], #16
0xffff9142d7f4  1332  ldr x16, pc+540 (addr 0x0000ffff9142da10)    ;; external reference (store_buffer_top)
0xffff9142d7f8  1336  ldr x4, [x16]
0xffff9142d7fc  1340  str x6, [x4], #8
0xffff9142d800  1344  str x4, [x16]
0xffff9142d804  1348  tst x4, #0x1ffff
0xffff9142d808  1352  b.eq #+0x8 (addr 0xffff9142d810)
0xffff9142d80c  1356  ret
0xffff9142d810  1360  sub csp, jssp, #0x8 (8)
0xffff9142d814  1364  str lr, [jssp, #-8]!
0xffff9142d818  1368  ldr x17, pc+512 (addr 0x0000ffff9142da18)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9142d81c  1372  blr x17
0xffff9142d820  1376  ldr lr, [jssp], #8
0xffff9142d824  1380  ret
0xffff9142d828  1384  and x4, x0, #0xfffffffffff00000
0xffff9142d82c  1388  ldr x1, [x4, #104]
0xffff9142d830  1392  subs x1, x1, #0x1 (1)
0xffff9142d834  1396  str x1, [x4, #104]
0xffff9142d838  1400  b.mi #+0x84 (addr 0xffff9142d8bc)
0xffff9142d83c  1404  ubfx x16, x0, #8, #12
0xffff9142d840  1408  and x4, x0, #0xfffffffffff00000
0xffff9142d844  1412  add x4, x4, x16, lsl #2
0xffff9142d848  1416  ubfx x1, x0, #3, #5
0xffff9142d84c  1420  ldr x4, [x4, #360]
0xffff9142d850  1424  lsr x4, x4, x1
0xffff9142d854  1428  tbz w4, #0, #+0x8 (addr 0xffff9142d85c)
0xffff9142d858  1432  tbnz w4, #1, #+0xc (addr 0xffff9142d864)
0xffff9142d85c  1436  ldp x2, x1, [jssp], #16
0xffff9142d860  1440  ret
0xffff9142d864  1444  ldr x4, [x6]
0xffff9142d868  1448  and x1, x4, #0xfffffffffff00000
0xffff9142d86c  1452  ldr x1, [x1, #8]
0xffff9142d870  1456  tbz w1, #6, #+0x18 (addr 0xffff9142d888)
0xffff9142d874  1460  and x1, x0, #0xfffffffffff00000
0xffff9142d878  1464  ldr x1, [x1, #8]
0xffff9142d87c  1468  movz x16, #0x58
0xffff9142d880  1472  tst x1, x16
0xffff9142d884  1476  b.eq #+0x38 (addr 0xffff9142d8bc)
0xffff9142d888  1480  sub csp, jssp, #0x10 (16)
0xffff9142d88c  1484  stp x0, x6, [jssp, #-16]!
0xffff9142d890  1488  ubfx x16, x4, #8, #12
0xffff9142d894  1492  and x1, x4, #0xfffffffffff00000
0xffff9142d898  1496  add x1, x1, x16, lsl #2
0xffff9142d89c  1500  ubfx x0, x4, #3, #5
0xffff9142d8a0  1504  ldr x6, [x1, #360]
0xffff9142d8a4  1508  lsr x6, x6, x0
0xffff9142d8a8  1512  tbz w6, #0, #+0x10 (addr 0xffff9142d8b8)
0xffff9142d8ac  1516  ldp x0, x6, [jssp], #16
0xffff9142d8b0  1520  ldp x2, x1, [jssp], #16
0xffff9142d8b4  1524  ret
0xffff9142d8b8  1528  ldp x0, x6, [jssp], #16
0xffff9142d8bc  1532  sub csp, jssp, #0x78 (120)
0xffff9142d8c0  1536  stp x14, x15, [jssp, #-32]!
0xffff9142d8c4  1540  stp x18, lr, [jssp, #16]
0xffff9142d8c8  1544  stp x10, x11, [jssp, #-32]!
0xffff9142d8cc  1548  stp x12, x13, [jssp, #16]
0xffff9142d8d0  1552  stp x6, x7, [jssp, #-32]!
0xffff9142d8d4  1556  stp x8, x9, [jssp, #16]
0xffff9142d8d8  1560  stp x0, x3, [jssp, #-24]!
0xffff9142d8dc  1564  str x5, [jssp, #16]
0xffff9142d8e0  1568  sub csp, jssp, #0xb0 (176)
0xffff9142d8e4  1572  stp d26, d27, [jssp, #-32]!
0xffff9142d8e8  1576  stp d28, d29, [jssp, #16]
0xffff9142d8ec  1580  stp d22, d23, [jssp, #-32]!
0xffff9142d8f0  1584  stp d24, d25, [jssp, #16]
0xffff9142d8f4  1588  stp d18, d19, [jssp, #-32]!
0xffff9142d8f8  1592  stp d20, d21, [jssp, #16]
0xffff9142d8fc  1596  stp d6, d7, [jssp, #-32]!
0xffff9142d900  1600  stp d16, d17, [jssp, #16]
0xffff9142d904  1604  stp d2, d3, [jssp, #-32]!
0xffff9142d908  1608  stp d4, d5, [jssp, #16]
0xffff9142d90c  1612  stp d0, d1, [jssp, #-16]!
0xffff9142d910  1616  mov x1, x6
0xffff9142d914  1620  ldr x2, pc+268 (addr 0x0000ffff9142da20)    ;; external reference (isolate)
0xffff9142d918  1624  ldr x16, pc+272 (addr 0x0000ffff9142da28)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142d91c  1628  and csp, jssp, #0xfffffffffffffff0
0xffff9142d920  1632  blr x16
0xffff9142d924  1636  ldp d2, d3, [jssp, #16]
0xffff9142d928  1640  ldp d0, d1, [jssp], #32
0xffff9142d92c  1644  ldp d6, d7, [jssp, #16]
0xffff9142d930  1648  ldp d4, d5, [jssp], #32
0xffff9142d934  1652  ldp d18, d19, [jssp, #16]
0xffff9142d938  1656  ldp d16, d17, [jssp], #32
0xffff9142d93c  1660  ldp d22, d23, [jssp, #16]
0xffff9142d940  1664  ldp d20, d21, [jssp], #32
0xffff9142d944  1668  ldp d26, d27, [jssp, #16]
0xffff9142d948  1672  ldp d24, d25, [jssp], #32
0xffff9142d94c  1676  ldp d28, d29, [jssp], #16
0xffff9142d950  1680  ldp x5, x6, [jssp, #16]
0xffff9142d954  1684  ldp x0, x3, [jssp], #32
0xffff9142d958  1688  ldp x9, x10, [jssp, #16]
0xffff9142d95c  1692  ldp x7, x8, [jssp], #32
0xffff9142d960  1696  ldp x13, x14, [jssp, #16]
0xffff9142d964  1700  ldp x11, x12, [jssp], #32
0xffff9142d968  1704  ldr lr, [jssp, #16]
0xffff9142d96c  1708  ldp x15, x18, [jssp], #24
0xffff9142d970  1712  ldp x2, x1, [jssp], #16
0xffff9142d974  1716  ret
0xffff9142d978  1720  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9142d97c  1724  d63f03e0       constant
0xffff9142d980  1728  4117f8c0       constant
0xffff9142d984  1732  00000000       constant
0xffff9142d988  1736  914065a0       constant
0xffff9142d98c  1740  0000ffff       constant
0xffff9142d990  1744  4117f8c0       constant
0xffff9142d994  1748  00000000       constant
0xffff9142d998  1752  914065a0       constant
0xffff9142d99c  1756  0000ffff       constant
0xffff9142d9a0  1760  4117f8c0       constant
0xffff9142d9a4  1764  00000000       constant
0xffff9142d9a8  1768  914065a0       constant
0xffff9142d9ac  1772  0000ffff       constant
0xffff9142d9b0  1776  4117e2d0       constant
0xffff9142d9b4  1780  00000000       constant
0xffff9142d9b8  1784  00c2d958       constant
0xffff9142d9bc  1788  00000000       constant
0xffff9142d9c0  1792  4117f8c0       constant
0xffff9142d9c4  1796  00000000       constant
0xffff9142d9c8  1800  914065a0       constant
0xffff9142d9cc  1804  0000ffff       constant
0xffff9142d9d0  1808  4117e2d0       constant
0xffff9142d9d4  1812  00000000       constant
0xffff9142d9d8  1816  00c2d958       constant
0xffff9142d9dc  1820  00000000       constant
0xffff9142d9e0  1824  4117f8c0       constant
0xffff9142d9e4  1828  00000000       constant
0xffff9142d9e8  1832  914065a0       constant
0xffff9142d9ec  1836  0000ffff       constant
0xffff9142d9f0  1840  4117f8c0       constant
0xffff9142d9f4  1844  00000000       constant
0xffff9142d9f8  1848  914065a0       constant
0xffff9142d9fc  1852  0000ffff       constant
0xffff9142da00  1856  4117e2d0       constant
0xffff9142da04  1860  00000000       constant
0xffff9142da08  1864  00c2d958       constant
0xffff9142da0c  1868  00000000       constant
0xffff9142da10  1872  4117f8c0       constant
0xffff9142da14  1876  00000000       constant
0xffff9142da18  1880  914065a0       constant
0xffff9142da1c  1884  0000ffff       constant
0xffff9142da20  1888  4117e2d0       constant
0xffff9142da24  1892  00000000       constant
0xffff9142da28  1896  00c2d958       constant
0xffff9142da2c  1900  00000000       constant


RelocInfo (size = 65)
0xffff9142d2c8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142d2ec  code target (STUB)  (0xffff914065a0)
0xffff9142d364  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142d388  code target (STUB)  (0xffff914065a0)
0xffff9142d3c8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142d3ec  code target (STUB)  (0xffff914065a0)
0xffff9142d458  external reference (isolate)  (0x4117e2d0)
0xffff9142d45c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142d4b8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142d4dc  code target (STUB)  (0xffff914065a0)
0xffff9142d5b8  external reference (isolate)  (0x4117e2d0)
0xffff9142d5bc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142d680  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142d6a4  code target (STUB)  (0xffff914065a0)
0xffff9142d704  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142d728  code target (STUB)  (0xffff914065a0)
0xffff9142d794  external reference (isolate)  (0x4117e2d0)
0xffff9142d798  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142d7f4  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142d818  code target (STUB)  (0xffff914065a0)
0xffff9142d914  external reference (isolate)  (0x4117e2d0)
0xffff9142d918  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142d978  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1904)
0xffff9142daa0     0  adr xzr, #+0x40 (addr 0xffff9142dae0)
0xffff9142daa4     4  adr xzr, #+0x358 (addr 0xffff9142ddfc)
0xffff9142daa8     8  ldr x16, pc+1720 (addr 0x0000ffff9142e160)    ;; external reference (store_buffer_top)
0xffff9142daac    12  ldr x1, [x16]
0xffff9142dab0    16  str x2, [x1], #8
0xffff9142dab4    20  str x1, [x16]
0xffff9142dab8    24  tst x1, #0x1ffff
0xffff9142dabc    28  b.eq #+0x8 (addr 0xffff9142dac4)
0xffff9142dac0    32  ret
0xffff9142dac4    36  sub csp, jssp, #0x8 (8)
0xffff9142dac8    40  str lr, [jssp, #-8]!
0xffff9142dacc    44  ldr x17, pc+1692 (addr 0x0000ffff9142e168)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9142dad0    48  blr x17
0xffff9142dad4    52  ldr lr, [jssp], #8
0xffff9142dad8    56  ret
0xffff9142dadc    60  ret
0xffff9142dae0    64  sub csp, jssp, #0x10 (16)
0xffff9142dae4    68  stp x4, x3, [jssp, #-16]!
0xffff9142dae8    72  ldr x1, [x2]
0xffff9142daec    76  and x16, x1, #0xfffffffffff00000
0xffff9142daf0    80  ldr x16, [x16, #8]
0xffff9142daf4    84  tst x16, #0x18
0xffff9142daf8    88  b.eq #+0x1d4 (addr 0xffff9142dccc)
0xffff9142dafc    92  and x16, x0, #0xfffffffffff00000
0xffff9142db00    96  ldr x16, [x16, #8]
0xffff9142db04   100  tst x16, #0x18
0xffff9142db08   104  b.ne #+0x1c4 (addr 0xffff9142dccc)
0xffff9142db0c   108  and x1, x0, #0xfffffffffff00000
0xffff9142db10   112  ldr x3, [x1, #104]
0xffff9142db14   116  subs x3, x3, #0x1 (1)
0xffff9142db18   120  str x3, [x1, #104]
0xffff9142db1c   124  b.mi #+0xc4 (addr 0xffff9142dbe0)
0xffff9142db20   128  ubfx x16, x0, #8, #12
0xffff9142db24   132  and x1, x0, #0xfffffffffff00000
0xffff9142db28   136  add x1, x1, x16, lsl #2
0xffff9142db2c   140  ubfx x3, x0, #3, #5
0xffff9142db30   144  ldr x1, [x1, #360]
0xffff9142db34   148  lsr x1, x1, x3
0xffff9142db38   152  tbz w1, #0, #+0x8 (addr 0xffff9142db40)
0xffff9142db3c   156  tbnz w1, #1, #+0x3c (addr 0xffff9142db78)
0xffff9142db40   160  ldp x4, x3, [jssp], #16
0xffff9142db44   164  ldr x16, pc+1580 (addr 0x0000ffff9142e170)    ;; external reference (store_buffer_top)
0xffff9142db48   168  ldr x1, [x16]
0xffff9142db4c   172  str x2, [x1], #8
0xffff9142db50   176  str x1, [x16]
0xffff9142db54   180  tst x1, #0x1ffff
0xffff9142db58   184  b.eq #+0x8 (addr 0xffff9142db60)
0xffff9142db5c   188  ret
0xffff9142db60   192  sub csp, jssp, #0x8 (8)
0xffff9142db64   196  str lr, [jssp, #-8]!
0xffff9142db68   200  ldr x17, pc+1552 (addr 0x0000ffff9142e178)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9142db6c   204  blr x17
0xffff9142db70   208  ldr lr, [jssp], #8
0xffff9142db74   212  ret
0xffff9142db78   216  ldr x1, [x2]
0xffff9142db7c   220  sub csp, jssp, #0x10 (16)
0xffff9142db80   224  stp x0, x2, [jssp, #-16]!
0xffff9142db84   228  ubfx x16, x1, #8, #12
0xffff9142db88   232  and x3, x1, #0xfffffffffff00000
0xffff9142db8c   236  add x3, x3, x16, lsl #2
0xffff9142db90   240  ubfx x0, x1, #3, #5
0xffff9142db94   244  ldr x2, [x3, #360]
0xffff9142db98   248  lsr x2, x2, x0
0xffff9142db9c   252  tbz w2, #0, #+0x40 (addr 0xffff9142dbdc)
0xffff9142dba0   256  ldp x0, x2, [jssp], #16
0xffff9142dba4   260  ldp x4, x3, [jssp], #16
0xffff9142dba8   264  ldr x16, pc+1496 (addr 0x0000ffff9142e180)    ;; external reference (store_buffer_top)
0xffff9142dbac   268  ldr x1, [x16]
0xffff9142dbb0   272  str x2, [x1], #8
0xffff9142dbb4   276  str x1, [x16]
0xffff9142dbb8   280  tst x1, #0x1ffff
0xffff9142dbbc   284  b.eq #+0x8 (addr 0xffff9142dbc4)
0xffff9142dbc0   288  ret
0xffff9142dbc4   292  sub csp, jssp, #0x8 (8)
0xffff9142dbc8   296  str lr, [jssp, #-8]!
0xffff9142dbcc   300  ldr x17, pc+1468 (addr 0x0000ffff9142e188)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9142dbd0   304  blr x17
0xffff9142dbd4   308  ldr lr, [jssp], #8
0xffff9142dbd8   312  ret
0xffff9142dbdc   316  ldp x0, x2, [jssp], #16
0xffff9142dbe0   320  sub csp, jssp, #0x78 (120)
0xffff9142dbe4   324  stp x14, x15, [jssp, #-32]!
0xffff9142dbe8   328  stp x18, lr, [jssp, #16]
0xffff9142dbec   332  stp x10, x11, [jssp, #-32]!
0xffff9142dbf0   336  stp x12, x13, [jssp, #16]
0xffff9142dbf4   340  stp x6, x7, [jssp, #-32]!
0xffff9142dbf8   344  stp x8, x9, [jssp, #16]
0xffff9142dbfc   348  stp x0, x2, [jssp, #-24]!
0xffff9142dc00   352  str x5, [jssp, #16]
0xffff9142dc04   356  sub csp, jssp, #0xb0 (176)
0xffff9142dc08   360  stp d26, d27, [jssp, #-32]!
0xffff9142dc0c   364  stp d28, d29, [jssp, #16]
0xffff9142dc10   368  stp d22, d23, [jssp, #-32]!
0xffff9142dc14   372  stp d24, d25, [jssp, #16]
0xffff9142dc18   376  stp d18, d19, [jssp, #-32]!
0xffff9142dc1c   380  stp d20, d21, [jssp, #16]
0xffff9142dc20   384  stp d6, d7, [jssp, #-32]!
0xffff9142dc24   388  stp d16, d17, [jssp, #16]
0xffff9142dc28   392  stp d2, d3, [jssp, #-32]!
0xffff9142dc2c   396  stp d4, d5, [jssp, #16]
0xffff9142dc30   400  stp d0, d1, [jssp, #-16]!
0xffff9142dc34   404  mov x1, x2
0xffff9142dc38   408  ldr x2, pc+1368 (addr 0x0000ffff9142e190)    ;; external reference (isolate)
0xffff9142dc3c   412  ldr x16, pc+1372 (addr 0x0000ffff9142e198)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142dc40   416  and csp, jssp, #0xfffffffffffffff0
0xffff9142dc44   420  blr x16
0xffff9142dc48   424  ldp d2, d3, [jssp, #16]
0xffff9142dc4c   428  ldp d0, d1, [jssp], #32
0xffff9142dc50   432  ldp d6, d7, [jssp, #16]
0xffff9142dc54   436  ldp d4, d5, [jssp], #32
0xffff9142dc58   440  ldp d18, d19, [jssp, #16]
0xffff9142dc5c   444  ldp d16, d17, [jssp], #32
0xffff9142dc60   448  ldp d22, d23, [jssp, #16]
0xffff9142dc64   452  ldp d20, d21, [jssp], #32
0xffff9142dc68   456  ldp d26, d27, [jssp, #16]
0xffff9142dc6c   460  ldp d24, d25, [jssp], #32
0xffff9142dc70   464  ldp d28, d29, [jssp], #16
0xffff9142dc74   468  ldp x5, x6, [jssp, #16]
0xffff9142dc78   472  ldp x0, x2, [jssp], #32
0xffff9142dc7c   476  ldp x9, x10, [jssp, #16]
0xffff9142dc80   480  ldp x7, x8, [jssp], #32
0xffff9142dc84   484  ldp x13, x14, [jssp, #16]
0xffff9142dc88   488  ldp x11, x12, [jssp], #32
0xffff9142dc8c   492  ldr lr, [jssp, #16]
0xffff9142dc90   496  ldp x15, x18, [jssp], #24
0xffff9142dc94   500  ldp x4, x3, [jssp], #16
0xffff9142dc98   504  ldr x16, pc+1288 (addr 0x0000ffff9142e1a0)    ;; external reference (store_buffer_top)
0xffff9142dc9c   508  ldr x1, [x16]
0xffff9142dca0   512  str x2, [x1], #8
0xffff9142dca4   516  str x1, [x16]
0xffff9142dca8   520  tst x1, #0x1ffff
0xffff9142dcac   524  b.eq #+0x8 (addr 0xffff9142dcb4)
0xffff9142dcb0   528  ret
0xffff9142dcb4   532  sub csp, jssp, #0x8 (8)
0xffff9142dcb8   536  str lr, [jssp, #-8]!
0xffff9142dcbc   540  ldr x17, pc+1260 (addr 0x0000ffff9142e1a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9142dcc0   544  blr x17
0xffff9142dcc4   548  ldr lr, [jssp], #8
0xffff9142dcc8   552  ret
0xffff9142dccc   556  and x1, x0, #0xfffffffffff00000
0xffff9142dcd0   560  ldr x3, [x1, #104]
0xffff9142dcd4   564  subs x3, x3, #0x1 (1)
0xffff9142dcd8   568  str x3, [x1, #104]
0xffff9142dcdc   572  b.mi #+0x64 (addr 0xffff9142dd40)
0xffff9142dce0   576  ubfx x16, x0, #8, #12
0xffff9142dce4   580  and x1, x0, #0xfffffffffff00000
0xffff9142dce8   584  add x1, x1, x16, lsl #2
0xffff9142dcec   588  ubfx x3, x0, #3, #5
0xffff9142dcf0   592  ldr x1, [x1, #360]
0xffff9142dcf4   596  lsr x1, x1, x3
0xffff9142dcf8   600  tbz w1, #0, #+0x8 (addr 0xffff9142dd00)
0xffff9142dcfc   604  tbnz w1, #1, #+0xc (addr 0xffff9142dd08)
0xffff9142dd00   608  ldp x4, x3, [jssp], #16
0xffff9142dd04   612  ret
0xffff9142dd08   616  ldr x1, [x2]
0xffff9142dd0c   620  sub csp, jssp, #0x10 (16)
0xffff9142dd10   624  stp x0, x2, [jssp, #-16]!
0xffff9142dd14   628  ubfx x16, x1, #8, #12
0xffff9142dd18   632  and x3, x1, #0xfffffffffff00000
0xffff9142dd1c   636  add x3, x3, x16, lsl #2
0xffff9142dd20   640  ubfx x0, x1, #3, #5
0xffff9142dd24   644  ldr x2, [x3, #360]
0xffff9142dd28   648  lsr x2, x2, x0
0xffff9142dd2c   652  tbz w2, #0, #+0x10 (addr 0xffff9142dd3c)
0xffff9142dd30   656  ldp x0, x2, [jssp], #16
0xffff9142dd34   660  ldp x4, x3, [jssp], #16
0xffff9142dd38   664  ret
0xffff9142dd3c   668  ldp x0, x2, [jssp], #16
0xffff9142dd40   672  sub csp, jssp, #0x78 (120)
0xffff9142dd44   676  stp x14, x15, [jssp, #-32]!
0xffff9142dd48   680  stp x18, lr, [jssp, #16]
0xffff9142dd4c   684  stp x10, x11, [jssp, #-32]!
0xffff9142dd50   688  stp x12, x13, [jssp, #16]
0xffff9142dd54   692  stp x6, x7, [jssp, #-32]!
0xffff9142dd58   696  stp x8, x9, [jssp, #16]
0xffff9142dd5c   700  stp x0, x2, [jssp, #-24]!
0xffff9142dd60   704  str x5, [jssp, #16]
0xffff9142dd64   708  sub csp, jssp, #0xb0 (176)
0xffff9142dd68   712  stp d26, d27, [jssp, #-32]!
0xffff9142dd6c   716  stp d28, d29, [jssp, #16]
0xffff9142dd70   720  stp d22, d23, [jssp, #-32]!
0xffff9142dd74   724  stp d24, d25, [jssp, #16]
0xffff9142dd78   728  stp d18, d19, [jssp, #-32]!
0xffff9142dd7c   732  stp d20, d21, [jssp, #16]
0xffff9142dd80   736  stp d6, d7, [jssp, #-32]!
0xffff9142dd84   740  stp d16, d17, [jssp, #16]
0xffff9142dd88   744  stp d2, d3, [jssp, #-32]!
0xffff9142dd8c   748  stp d4, d5, [jssp, #16]
0xffff9142dd90   752  stp d0, d1, [jssp, #-16]!
0xffff9142dd94   756  mov x1, x2
0xffff9142dd98   760  ldr x2, pc+1048 (addr 0x0000ffff9142e1b0)    ;; external reference (isolate)
0xffff9142dd9c   764  ldr x16, pc+1052 (addr 0x0000ffff9142e1b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142dda0   768  and csp, jssp, #0xfffffffffffffff0
0xffff9142dda4   772  blr x16
0xffff9142dda8   776  ldp d2, d3, [jssp, #16]
0xffff9142ddac   780  ldp d0, d1, [jssp], #32
0xffff9142ddb0   784  ldp d6, d7, [jssp, #16]
0xffff9142ddb4   788  ldp d4, d5, [jssp], #32
0xffff9142ddb8   792  ldp d18, d19, [jssp, #16]
0xffff9142ddbc   796  ldp d16, d17, [jssp], #32
0xffff9142ddc0   800  ldp d22, d23, [jssp, #16]
0xffff9142ddc4   804  ldp d20, d21, [jssp], #32
0xffff9142ddc8   808  ldp d26, d27, [jssp, #16]
0xffff9142ddcc   812  ldp d24, d25, [jssp], #32
0xffff9142ddd0   816  ldp d28, d29, [jssp], #16
0xffff9142ddd4   820  ldp x5, x6, [jssp, #16]
0xffff9142ddd8   824  ldp x0, x2, [jssp], #32
0xffff9142dddc   828  ldp x9, x10, [jssp, #16]
0xffff9142dde0   832  ldp x7, x8, [jssp], #32
0xffff9142dde4   836  ldp x13, x14, [jssp, #16]
0xffff9142dde8   840  ldp x11, x12, [jssp], #32
0xffff9142ddec   844  ldr lr, [jssp, #16]
0xffff9142ddf0   848  ldp x15, x18, [jssp], #24
0xffff9142ddf4   852  ldp x4, x3, [jssp], #16
0xffff9142ddf8   856  ret
0xffff9142ddfc   860  sub csp, jssp, #0x10 (16)
0xffff9142de00   864  stp x4, x3, [jssp, #-16]!
0xffff9142de04   868  ldr x1, [x2]
0xffff9142de08   872  and x16, x1, #0xfffffffffff00000
0xffff9142de0c   876  ldr x16, [x16, #8]
0xffff9142de10   880  tst x16, #0x18
0xffff9142de14   884  b.eq #+0x1f4 (addr 0xffff9142e008)
0xffff9142de18   888  and x16, x0, #0xfffffffffff00000
0xffff9142de1c   892  ldr x16, [x16, #8]
0xffff9142de20   896  tst x16, #0x18
0xffff9142de24   900  b.ne #+0x1e4 (addr 0xffff9142e008)
0xffff9142de28   904  and x1, x0, #0xfffffffffff00000
0xffff9142de2c   908  ldr x3, [x1, #104]
0xffff9142de30   912  subs x3, x3, #0x1 (1)
0xffff9142de34   916  str x3, [x1, #104]
0xffff9142de38   920  b.mi #+0xe4 (addr 0xffff9142df1c)
0xffff9142de3c   924  ubfx x16, x0, #8, #12
0xffff9142de40   928  and x1, x0, #0xfffffffffff00000
0xffff9142de44   932  add x1, x1, x16, lsl #2
0xffff9142de48   936  ubfx x3, x0, #3, #5
0xffff9142de4c   940  ldr x1, [x1, #360]
0xffff9142de50   944  lsr x1, x1, x3
0xffff9142de54   948  tbz w1, #0, #+0x8 (addr 0xffff9142de5c)
0xffff9142de58   952  tbnz w1, #1, #+0x3c (addr 0xffff9142de94)
0xffff9142de5c   956  ldp x4, x3, [jssp], #16
0xffff9142de60   960  ldr x16, pc+864 (addr 0x0000ffff9142e1c0)    ;; external reference (store_buffer_top)
0xffff9142de64   964  ldr x1, [x16]
0xffff9142de68   968  str x2, [x1], #8
0xffff9142de6c   972  str x1, [x16]
0xffff9142de70   976  tst x1, #0x1ffff
0xffff9142de74   980  b.eq #+0x8 (addr 0xffff9142de7c)
0xffff9142de78   984  ret
0xffff9142de7c   988  sub csp, jssp, #0x8 (8)
0xffff9142de80   992  str lr, [jssp, #-8]!
0xffff9142de84   996  ldr x17, pc+836 (addr 0x0000ffff9142e1c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9142de88  1000  blr x17
0xffff9142de8c  1004  ldr lr, [jssp], #8
0xffff9142de90  1008  ret
0xffff9142de94  1012  ldr x1, [x2]
0xffff9142de98  1016  and x3, x1, #0xfffffffffff00000
0xffff9142de9c  1020  ldr x3, [x3, #8]
0xffff9142dea0  1024  tbz w3, #6, #+0x18 (addr 0xffff9142deb8)
0xffff9142dea4  1028  and x3, x0, #0xfffffffffff00000
0xffff9142dea8  1032  ldr x3, [x3, #8]
0xffff9142deac  1036  movz x16, #0x58
0xffff9142deb0  1040  tst x3, x16
0xffff9142deb4  1044  b.eq #+0x68 (addr 0xffff9142df1c)
0xffff9142deb8  1048  sub csp, jssp, #0x10 (16)
0xffff9142debc  1052  stp x0, x2, [jssp, #-16]!
0xffff9142dec0  1056  ubfx x16, x1, #8, #12
0xffff9142dec4  1060  and x3, x1, #0xfffffffffff00000
0xffff9142dec8  1064  add x3, x3, x16, lsl #2
0xffff9142decc  1068  ubfx x0, x1, #3, #5
0xffff9142ded0  1072  ldr x2, [x3, #360]
0xffff9142ded4  1076  lsr x2, x2, x0
0xffff9142ded8  1080  tbz w2, #0, #+0x40 (addr 0xffff9142df18)
0xffff9142dedc  1084  ldp x0, x2, [jssp], #16
0xffff9142dee0  1088  ldp x4, x3, [jssp], #16
0xffff9142dee4  1092  ldr x16, pc+748 (addr 0x0000ffff9142e1d0)    ;; external reference (store_buffer_top)
0xffff9142dee8  1096  ldr x1, [x16]
0xffff9142deec  1100  str x2, [x1], #8
0xffff9142def0  1104  str x1, [x16]
0xffff9142def4  1108  tst x1, #0x1ffff
0xffff9142def8  1112  b.eq #+0x8 (addr 0xffff9142df00)
0xffff9142defc  1116  ret
0xffff9142df00  1120  sub csp, jssp, #0x8 (8)
0xffff9142df04  1124  str lr, [jssp, #-8]!
0xffff9142df08  1128  ldr x17, pc+720 (addr 0x0000ffff9142e1d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9142df0c  1132  blr x17
0xffff9142df10  1136  ldr lr, [jssp], #8
0xffff9142df14  1140  ret
0xffff9142df18  1144  ldp x0, x2, [jssp], #16
0xffff9142df1c  1148  sub csp, jssp, #0x78 (120)
0xffff9142df20  1152  stp x14, x15, [jssp, #-32]!
0xffff9142df24  1156  stp x18, lr, [jssp, #16]
0xffff9142df28  1160  stp x10, x11, [jssp, #-32]!
0xffff9142df2c  1164  stp x12, x13, [jssp, #16]
0xffff9142df30  1168  stp x6, x7, [jssp, #-32]!
0xffff9142df34  1172  stp x8, x9, [jssp, #16]
0xffff9142df38  1176  stp x0, x2, [jssp, #-24]!
0xffff9142df3c  1180  str x5, [jssp, #16]
0xffff9142df40  1184  sub csp, jssp, #0xb0 (176)
0xffff9142df44  1188  stp d26, d27, [jssp, #-32]!
0xffff9142df48  1192  stp d28, d29, [jssp, #16]
0xffff9142df4c  1196  stp d22, d23, [jssp, #-32]!
0xffff9142df50  1200  stp d24, d25, [jssp, #16]
0xffff9142df54  1204  stp d18, d19, [jssp, #-32]!
0xffff9142df58  1208  stp d20, d21, [jssp, #16]
0xffff9142df5c  1212  stp d6, d7, [jssp, #-32]!
0xffff9142df60  1216  stp d16, d17, [jssp, #16]
0xffff9142df64  1220  stp d2, d3, [jssp, #-32]!
0xffff9142df68  1224  stp d4, d5, [jssp, #16]
0xffff9142df6c  1228  stp d0, d1, [jssp, #-16]!
0xffff9142df70  1232  mov x1, x2
0xffff9142df74  1236  ldr x2, pc+620 (addr 0x0000ffff9142e1e0)    ;; external reference (isolate)
0xffff9142df78  1240  ldr x16, pc+624 (addr 0x0000ffff9142e1e8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142df7c  1244  and csp, jssp, #0xfffffffffffffff0
0xffff9142df80  1248  blr x16
0xffff9142df84  1252  ldp d2, d3, [jssp, #16]
0xffff9142df88  1256  ldp d0, d1, [jssp], #32
0xffff9142df8c  1260  ldp d6, d7, [jssp, #16]
0xffff9142df90  1264  ldp d4, d5, [jssp], #32
0xffff9142df94  1268  ldp d18, d19, [jssp, #16]
0xffff9142df98  1272  ldp d16, d17, [jssp], #32
0xffff9142df9c  1276  ldp d22, d23, [jssp, #16]
0xffff9142dfa0  1280  ldp d20, d21, [jssp], #32
0xffff9142dfa4  1284  ldp d26, d27, [jssp, #16]
0xffff9142dfa8  1288  ldp d24, d25, [jssp], #32
0xffff9142dfac  1292  ldp d28, d29, [jssp], #16
0xffff9142dfb0  1296  ldp x5, x6, [jssp, #16]
0xffff9142dfb4  1300  ldp x0, x2, [jssp], #32
0xffff9142dfb8  1304  ldp x9, x10, [jssp, #16]
0xffff9142dfbc  1308  ldp x7, x8, [jssp], #32
0xffff9142dfc0  1312  ldp x13, x14, [jssp, #16]
0xffff9142dfc4  1316  ldp x11, x12, [jssp], #32
0xffff9142dfc8  1320  ldr lr, [jssp, #16]
0xffff9142dfcc  1324  ldp x15, x18, [jssp], #24
0xffff9142dfd0  1328  ldp x4, x3, [jssp], #16
0xffff9142dfd4  1332  ldr x16, pc+540 (addr 0x0000ffff9142e1f0)    ;; external reference (store_buffer_top)
0xffff9142dfd8  1336  ldr x1, [x16]
0xffff9142dfdc  1340  str x2, [x1], #8
0xffff9142dfe0  1344  str x1, [x16]
0xffff9142dfe4  1348  tst x1, #0x1ffff
0xffff9142dfe8  1352  b.eq #+0x8 (addr 0xffff9142dff0)
0xffff9142dfec  1356  ret
0xffff9142dff0  1360  sub csp, jssp, #0x8 (8)
0xffff9142dff4  1364  str lr, [jssp, #-8]!
0xffff9142dff8  1368  ldr x17, pc+512 (addr 0x0000ffff9142e1f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9142dffc  1372  blr x17
0xffff9142e000  1376  ldr lr, [jssp], #8
0xffff9142e004  1380  ret
0xffff9142e008  1384  and x1, x0, #0xfffffffffff00000
0xffff9142e00c  1388  ldr x3, [x1, #104]
0xffff9142e010  1392  subs x3, x3, #0x1 (1)
0xffff9142e014  1396  str x3, [x1, #104]
0xffff9142e018  1400  b.mi #+0x84 (addr 0xffff9142e09c)
0xffff9142e01c  1404  ubfx x16, x0, #8, #12
0xffff9142e020  1408  and x1, x0, #0xfffffffffff00000
0xffff9142e024  1412  add x1, x1, x16, lsl #2
0xffff9142e028  1416  ubfx x3, x0, #3, #5
0xffff9142e02c  1420  ldr x1, [x1, #360]
0xffff9142e030  1424  lsr x1, x1, x3
0xffff9142e034  1428  tbz w1, #0, #+0x8 (addr 0xffff9142e03c)
0xffff9142e038  1432  tbnz w1, #1, #+0xc (addr 0xffff9142e044)
0xffff9142e03c  1436  ldp x4, x3, [jssp], #16
0xffff9142e040  1440  ret
0xffff9142e044  1444  ldr x1, [x2]
0xffff9142e048  1448  and x3, x1, #0xfffffffffff00000
0xffff9142e04c  1452  ldr x3, [x3, #8]
0xffff9142e050  1456  tbz w3, #6, #+0x18 (addr 0xffff9142e068)
0xffff9142e054  1460  and x3, x0, #0xfffffffffff00000
0xffff9142e058  1464  ldr x3, [x3, #8]
0xffff9142e05c  1468  movz x16, #0x58
0xffff9142e060  1472  tst x3, x16
0xffff9142e064  1476  b.eq #+0x38 (addr 0xffff9142e09c)
0xffff9142e068  1480  sub csp, jssp, #0x10 (16)
0xffff9142e06c  1484  stp x0, x2, [jssp, #-16]!
0xffff9142e070  1488  ubfx x16, x1, #8, #12
0xffff9142e074  1492  and x3, x1, #0xfffffffffff00000
0xffff9142e078  1496  add x3, x3, x16, lsl #2
0xffff9142e07c  1500  ubfx x0, x1, #3, #5
0xffff9142e080  1504  ldr x2, [x3, #360]
0xffff9142e084  1508  lsr x2, x2, x0
0xffff9142e088  1512  tbz w2, #0, #+0x10 (addr 0xffff9142e098)
0xffff9142e08c  1516  ldp x0, x2, [jssp], #16
0xffff9142e090  1520  ldp x4, x3, [jssp], #16
0xffff9142e094  1524  ret
0xffff9142e098  1528  ldp x0, x2, [jssp], #16
0xffff9142e09c  1532  sub csp, jssp, #0x78 (120)
0xffff9142e0a0  1536  stp x14, x15, [jssp, #-32]!
0xffff9142e0a4  1540  stp x18, lr, [jssp, #16]
0xffff9142e0a8  1544  stp x10, x11, [jssp, #-32]!
0xffff9142e0ac  1548  stp x12, x13, [jssp, #16]
0xffff9142e0b0  1552  stp x6, x7, [jssp, #-32]!
0xffff9142e0b4  1556  stp x8, x9, [jssp, #16]
0xffff9142e0b8  1560  stp x0, x2, [jssp, #-24]!
0xffff9142e0bc  1564  str x5, [jssp, #16]
0xffff9142e0c0  1568  sub csp, jssp, #0xb0 (176)
0xffff9142e0c4  1572  stp d26, d27, [jssp, #-32]!
0xffff9142e0c8  1576  stp d28, d29, [jssp, #16]
0xffff9142e0cc  1580  stp d22, d23, [jssp, #-32]!
0xffff9142e0d0  1584  stp d24, d25, [jssp, #16]
0xffff9142e0d4  1588  stp d18, d19, [jssp, #-32]!
0xffff9142e0d8  1592  stp d20, d21, [jssp, #16]
0xffff9142e0dc  1596  stp d6, d7, [jssp, #-32]!
0xffff9142e0e0  1600  stp d16, d17, [jssp, #16]
0xffff9142e0e4  1604  stp d2, d3, [jssp, #-32]!
0xffff9142e0e8  1608  stp d4, d5, [jssp, #16]
0xffff9142e0ec  1612  stp d0, d1, [jssp, #-16]!
0xffff9142e0f0  1616  mov x1, x2
0xffff9142e0f4  1620  ldr x2, pc+268 (addr 0x0000ffff9142e200)    ;; external reference (isolate)
0xffff9142e0f8  1624  ldr x16, pc+272 (addr 0x0000ffff9142e208)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142e0fc  1628  and csp, jssp, #0xfffffffffffffff0
0xffff9142e100  1632  blr x16
0xffff9142e104  1636  ldp d2, d3, [jssp, #16]
0xffff9142e108  1640  ldp d0, d1, [jssp], #32
0xffff9142e10c  1644  ldp d6, d7, [jssp, #16]
0xffff9142e110  1648  ldp d4, d5, [jssp], #32
0xffff9142e114  1652  ldp d18, d19, [jssp, #16]
0xffff9142e118  1656  ldp d16, d17, [jssp], #32
0xffff9142e11c  1660  ldp d22, d23, [jssp, #16]
0xffff9142e120  1664  ldp d20, d21, [jssp], #32
0xffff9142e124  1668  ldp d26, d27, [jssp, #16]
0xffff9142e128  1672  ldp d24, d25, [jssp], #32
0xffff9142e12c  1676  ldp d28, d29, [jssp], #16
0xffff9142e130  1680  ldp x5, x6, [jssp, #16]
0xffff9142e134  1684  ldp x0, x2, [jssp], #32
0xffff9142e138  1688  ldp x9, x10, [jssp, #16]
0xffff9142e13c  1692  ldp x7, x8, [jssp], #32
0xffff9142e140  1696  ldp x13, x14, [jssp, #16]
0xffff9142e144  1700  ldp x11, x12, [jssp], #32
0xffff9142e148  1704  ldr lr, [jssp, #16]
0xffff9142e14c  1708  ldp x15, x18, [jssp], #24
0xffff9142e150  1712  ldp x4, x3, [jssp], #16
0xffff9142e154  1716  ret
0xffff9142e158  1720  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9142e15c  1724  d63f03e0       constant
0xffff9142e160  1728  4117f8c0       constant
0xffff9142e164  1732  00000000       constant
0xffff9142e168  1736  914065a0       constant
0xffff9142e16c  1740  0000ffff       constant
0xffff9142e170  1744  4117f8c0       constant
0xffff9142e174  1748  00000000       constant
0xffff9142e178  1752  914065a0       constant
0xffff9142e17c  1756  0000ffff       constant
0xffff9142e180  1760  4117f8c0       constant
0xffff9142e184  1764  00000000       constant
0xffff9142e188  1768  914065a0       constant
0xffff9142e18c  1772  0000ffff       constant
0xffff9142e190  1776  4117e2d0       constant
0xffff9142e194  1780  00000000       constant
0xffff9142e198  1784  00c2d958       constant
0xffff9142e19c  1788  00000000       constant
0xffff9142e1a0  1792  4117f8c0       constant
0xffff9142e1a4  1796  00000000       constant
0xffff9142e1a8  1800  914065a0       constant
0xffff9142e1ac  1804  0000ffff       constant
0xffff9142e1b0  1808  4117e2d0       constant
0xffff9142e1b4  1812  00000000       constant
0xffff9142e1b8  1816  00c2d958       constant
0xffff9142e1bc  1820  00000000       constant
0xffff9142e1c0  1824  4117f8c0       constant
0xffff9142e1c4  1828  00000000       constant
0xffff9142e1c8  1832  914065a0       constant
0xffff9142e1cc  1836  0000ffff       constant
0xffff9142e1d0  1840  4117f8c0       constant
0xffff9142e1d4  1844  00000000       constant
0xffff9142e1d8  1848  914065a0       constant
0xffff9142e1dc  1852  0000ffff       constant
0xffff9142e1e0  1856  4117e2d0       constant
0xffff9142e1e4  1860  00000000       constant
0xffff9142e1e8  1864  00c2d958       constant
0xffff9142e1ec  1868  00000000       constant
0xffff9142e1f0  1872  4117f8c0       constant
0xffff9142e1f4  1876  00000000       constant
0xffff9142e1f8  1880  914065a0       constant
0xffff9142e1fc  1884  0000ffff       constant
0xffff9142e200  1888  4117e2d0       constant
0xffff9142e204  1892  00000000       constant
0xffff9142e208  1896  00c2d958       constant
0xffff9142e20c  1900  00000000       constant


RelocInfo (size = 65)
0xffff9142daa8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142dacc  code target (STUB)  (0xffff914065a0)
0xffff9142db44  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142db68  code target (STUB)  (0xffff914065a0)
0xffff9142dba8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142dbcc  code target (STUB)  (0xffff914065a0)
0xffff9142dc38  external reference (isolate)  (0x4117e2d0)
0xffff9142dc3c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142dc98  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142dcbc  code target (STUB)  (0xffff914065a0)
0xffff9142dd98  external reference (isolate)  (0x4117e2d0)
0xffff9142dd9c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142de60  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142de84  code target (STUB)  (0xffff914065a0)
0xffff9142dee4  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142df08  code target (STUB)  (0xffff914065a0)
0xffff9142df74  external reference (isolate)  (0x4117e2d0)
0xffff9142df78  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142dfd4  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142dff8  code target (STUB)  (0xffff914065a0)
0xffff9142e0f4  external reference (isolate)  (0x4117e2d0)
0xffff9142e0f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142e158  constant pool (size 184)


kind = STUB
major_key = FastNewClosureStub
name = FastNewClosureStub
compiler = crankshaft
Instructions (size = 773)
0xffff9142e280     0  movz x1, #0xf2c0
0xffff9142e284     4  movk x1, #0x4117, lsl #16
0xffff9142e288     8  ldp x3, x0, [x1]
0xffff9142e28c    12  adds x16, x3, #0x48 (72)
0xffff9142e290    16  ccmp x16, x0, #nzCv, lo
0xffff9142e294    20  b.hi #+0x1bc (addr 0xffff9142e450)
0xffff9142e298    24  str x16, [x1]
0xffff9142e29c    28  orr x3, x3, #0x1
0xffff9142e2a0    32  ldur x0, [cp, #39]
0xffff9142e2a4    36  movz x16, #0x2cf
0xffff9142e2a8    40  ldr x1, [x0, x16]
0xffff9142e2ac    44  stur x1, [x3, #-1]
0xffff9142e2b0    48  ldr x1, pc+528 (addr 0x0000ffff9142e4c0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9142e2b4    52  stur x1, [x3, #7]
0xffff9142e2b8    56  ldr x1, pc+528 (addr 0x0000ffff9142e4c8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9142e2bc    60  stur x1, [x3, #15]
0xffff9142e2c0    64  ldr x1, pc+528 (addr 0x0000ffff9142e4d0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9142e2c4    68  stur x1, [x3, #47]
0xffff9142e2c8    72  ldr x1, pc+528 (addr 0x0000ffff9142e4d8)    ;; object: 0x49b04519 <the hole>
0xffff9142e2cc    76  stur x1, [x3, #23]
0xffff9142e2d0    80  stur x2, [x3, #31]
0xffff9142e2d4    84  stur cp, [x3, #39]
0xffff9142e2d8    88  ldur x1, [x2, #23]
0xffff9142e2dc    92  movz x4, #0x0
0xffff9142e2e0    96  cmp x1, x4
0xffff9142e2e4   100  b.eq #+0x150 (addr 0xffff9142e434)
0xffff9142e2e8   104  ldur w4, [x1, #11]
0xffff9142e2ec   108  subs w4, w4, #0x4 (4)
0xffff9142e2f0   112  b.vs #+0x230 (addr 0xffff9142e520)
0xffff9142e2f4   116  mov x5, x4
0xffff9142e2f8   120  cmp w5, #0x1 (1)
0xffff9142e2fc   124  b.lt #+0xb4 (addr 0xffff9142e3b0)
0xffff9142e300   128  add x4, x1, #0xf (15)
0xffff9142e304   132  ldr x6, [x4, w5, sxtw #3]
0xffff9142e308   136  ldur x4, [x6, #7]
0xffff9142e30c   140  add x6, x1, #0x27 (39)
0xffff9142e310   144  ldr x7, [x6, w5, sxtw #3]
0xffff9142e314   148  add x6, x1, #0x17 (23)
0xffff9142e318   152  ldr x8, [x6, w5, sxtw #3]
0xffff9142e31c   156  ldur x6, [x8, #7]
0xffff9142e320   160  cmp x0, x4
0xffff9142e324   164  b.ne #+0x1c (addr 0xffff9142e340)
0xffff9142e328   168  mov x4, #0xffffffff00000000
0xffff9142e32c   172  cmp x7, x4
0xffff9142e330   176  b.ne #+0x10 (addr 0xffff9142e340)
0xffff9142e334   180  movz x4, #0x0
0xffff9142e338   184  cmp x6, x4
0xffff9142e33c   188  b.ne #+0xc (addr 0xffff9142e348)
0xffff9142e340   192  sub w5, w5, #0x4 (4)
0xffff9142e344   196  b #-0x4c (addr 0xffff9142e2f8)
0xffff9142e348   200  add x4, x1, #0x1f (31)
0xffff9142e34c   204  ldr x7, [x4, w5, sxtw #3]
0xffff9142e350   208  ldur x7, [x7, #7]
0xffff9142e354   212  movz x4, #0x0
0xffff9142e358   216  cmp x7, x4
0xffff9142e35c   220  b.eq #+0x50 (addr 0xffff9142e3ac)
0xffff9142e360   224  add x4, x6, #0x5f (95)
0xffff9142e364   228  stur x4, [x3, #55]
0xffff9142e368   232  stur x7, [x3, #47]
0xffff9142e36c   236  movz x16, #0x557
0xffff9142e370   240  ldr x4, [x0, x16]
0xffff9142e374   244  stur x4, [x3, #63]
0xffff9142e378   248  mov x4, x3
0xffff9142e37c   252  movz x16, #0x557
0xffff9142e380   256  str x4, [x0, x16]
0xffff9142e384   260  add x6, x0, #0x557 (1367)
0xffff9142e388   264  and x4, x0, #0xfffffffffff00000
0xffff9142e38c   268  ldr x4, [x4, #8]
0xffff9142e390   272  tbz w4, #2, #+0x18 (addr 0xffff9142e3a8)
0xffff9142e394   276  sub csp, jssp, #0x8 (8)
0xffff9142e398   280  str lr, [jssp, #-8]!
0xffff9142e39c   284  ldr x16, pc+324 (addr 0x0000ffff9142e4e0)    ;; code: STUB, RecordWriteStub, minor: 71808
0xffff9142e3a0   288  blr x16
0xffff9142e3a4   292  ldr lr, [jssp], #8
0xffff9142e3a8   296  b #+0x8 (addr 0xffff9142e3b0)
0xffff9142e3ac   300  b #+0x184 (addr 0xffff9142e530)
0xffff9142e3b0   304  cmp w5, #0x1 (1)
0xffff9142e3b4   308  b.ge #+0x94 (addr 0xffff9142e448)
0xffff9142e3b8   312  ldur x1, [x1, #15]
0xffff9142e3bc   316  ldur x1, [x1, #7]
0xffff9142e3c0   320  movz x4, #0x0
0xffff9142e3c4   324  cmp x1, x4
0xffff9142e3c8   328  b.eq #+0x54 (addr 0xffff9142e41c)
0xffff9142e3cc   332  add x1, x1, #0x5f (95)
0xffff9142e3d0   336  stur x1, [x3, #55]
0xffff9142e3d4   340  ldr x1, pc+276 (addr 0x0000ffff9142e4e8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9142e3d8   344  stur x1, [x3, #47]
0xffff9142e3dc   348  movz x16, #0x557
0xffff9142e3e0   352  ldr x1, [x0, x16]
0xffff9142e3e4   356  stur x1, [x3, #63]
0xffff9142e3e8   360  mov x1, x3
0xffff9142e3ec   364  movz x16, #0x557
0xffff9142e3f0   368  str x1, [x0, x16]
0xffff9142e3f4   372  add x2, x0, #0x557 (1367)
0xffff9142e3f8   376  and x1, x0, #0xfffffffffff00000
0xffff9142e3fc   380  ldr x1, [x1, #8]
0xffff9142e400   384  tbz w1, #2, #+0x18 (addr 0xffff9142e418)
0xffff9142e404   388  sub csp, jssp, #0x8 (8)
0xffff9142e408   392  str lr, [jssp, #-8]!
0xffff9142e40c   396  ldr x16, pc+228 (addr 0x0000ffff9142e4f0)    ;; code: STUB, RecordWriteStub, minor: 67616
0xffff9142e410   400  blr x16
0xffff9142e414   404  ldr lr, [jssp], #8
0xffff9142e418   408  b #+0x30 (addr 0xffff9142e448)
0xffff9142e41c   412  ldr x0, pc+220 (addr 0x0000ffff9142e4f8)    ;; object: 0x49b04241 <undefined>
0xffff9142e420   416  stur x0, [x3, #63]
0xffff9142e424   420  ldur x0, [x2, #15]
0xffff9142e428   424  add x0, x0, #0x5f (95)
0xffff9142e42c   428  stur x0, [x3, #55]
0xffff9142e430   432  b #+0x18 (addr 0xffff9142e448)
0xffff9142e434   436  ldr x0, pc+204 (addr 0x0000ffff9142e500)    ;; object: 0x49b04241 <undefined>
0xffff9142e438   440  stur x0, [x3, #63]
0xffff9142e43c   444  ldur x0, [x2, #15]
0xffff9142e440   448  add x0, x0, #0x5f (95)
0xffff9142e444   452  stur x0, [x3, #55]
0xffff9142e448   456  mov x0, x3
0xffff9142e44c   460  ret
0xffff9142e450   464  sub csp, jssp, #0x10 (16)
0xffff9142e454   468  stp fp, lr, [jssp, #-16]!
0xffff9142e458   472  movz fp, #0xa00000000
0xffff9142e45c   476  sub csp, jssp, #0x8 (8)
0xffff9142e460   480  str fp, [jssp, #-8]!
0xffff9142e464   484  add fp, jssp, #0x8 (8)
0xffff9142e468   488  movz x3, #0x0
0xffff9142e46c   492  mov x16, lr
0xffff9142e470   496  ldr x17, pc+152 (addr 0x0000ffff9142e508)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9142e474   500  blr x17
0xffff9142e478   504  movz x0, #0x4800000000
0xffff9142e47c   508  movz x10, #0x0
0xffff9142e480   512  sub csp, jssp, #0x10 (16)
0xffff9142e484   516  stp x10, x0, [jssp, #-16]!
0xffff9142e488   520  movz x0, #0x2
0xffff9142e48c   524  movz x1, #0x5b88
0xffff9142e490   528  movk x1, #0xe2, lsl #16
0xffff9142e494   532  ldr x16, pc+124 (addr 0x0000ffff9142e510)    ;; code: STUB, CEntryStub, minor: 5
0xffff9142e498   536  blr x16
0xffff9142e49c   540  str x0, [jssp, #24]
0xffff9142e4a0   544  ldr x16, pc+120 (addr 0x0000ffff9142e518)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9142e4a4   548  blr x16
0xffff9142e4a8   552  ldr lr, [jssp, #16]
0xffff9142e4ac   556  ldp xzr, fp, [jssp], #24
0xffff9142e4b0   560  b #-0x210 (addr 0xffff9142e2a0)
0xffff9142e4b4   564  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff9142e4b8   568  d63f03e0       constant
0xffff9142e4bc   572  d503201f       constant
0xffff9142e4c0   576  49b04201       constant
0xffff9142e4c4   580  00000000       constant
0xffff9142e4c8   584  49b04201       constant
0xffff9142e4cc   588  00000000       constant
0xffff9142e4d0   592  49b04201       constant
0xffff9142e4d4   596  00000000       constant
0xffff9142e4d8   600  49b04519       constant
0xffff9142e4dc   604  00000000       constant
0xffff9142e4e0   608  9142d2c0       constant
0xffff9142e4e4   612  0000ffff       constant
0xffff9142e4e8   616  49b04201       constant
0xffff9142e4ec   620  00000000       constant
0xffff9142e4f0   624  9142daa0       constant
0xffff9142e4f4   628  0000ffff       constant
0xffff9142e4f8   632  49b04241       constant
0xffff9142e4fc   636  00000000       constant
0xffff9142e500   640  49b04241       constant
0xffff9142e504   644  00000000       constant
0xffff9142e508   648  91406820       constant
0xffff9142e50c   652  0000ffff       constant
0xffff9142e510   656  91406260       constant
0xffff9142e514   660  0000ffff       constant
0xffff9142e518   664  914068e0       constant
0xffff9142e51c   668  0000ffff       constant
0xffff9142e520   672  movz x16, #0x0
0xffff9142e524   676  sub csp, jssp, #0x10 (16)
0xffff9142e528   680  stp fp, lr, [jssp, #-16]!
0xffff9142e52c   684  bl #+0x14 (addr 0xffff9142e540)
0xffff9142e530   688  movz x16, #0x8
0xffff9142e534   692  sub csp, jssp, #0x10 (16)
0xffff9142e538   696  stp fp, lr, [jssp, #-16]!
0xffff9142e53c   700  bl #+0x4 (addr 0xffff9142e540)
0xffff9142e540   704  movz x17, #0xa00000000
0xffff9142e544   708  sub csp, jssp, #0x10 (16)
0xffff9142e548   712  stp x17, cp, [jssp, #-16]!
0xffff9142e54c   716  add fp, jssp, #0x10 (16)
0xffff9142e550   720  ldr x17, pc+24 (addr 0x0000ffff9142e568)    ;; lazy deoptimization bailout 0
0xffff9142e554   724  add x17, x17, x16
0xffff9142e558   728  br x17
0xffff9142e55c   732  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9142e560   736  d63f03e0       constant
0xffff9142e564   740  d503201f       constant
0xffff9142e568   744  91206000       constant
0xffff9142e56c   748  0000ffff       constant


Safepoints (size = 21)
0xffff9142e49c   540  000 | x2 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff9142e2b0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9142e2b8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9142e2c0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9142e2c8  embedded object  (0x49b04519 <the hole>)
0xffff9142e39c  code target (STUB)  (0xffff9142d2c0)
0xffff9142e3d4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9142e40c  code target (STUB)  (0xffff9142daa0)
0xffff9142e41c  embedded object  (0x49b04241 <undefined>)
0xffff9142e434  embedded object  (0x49b04241 <undefined>)
0xffff9142e470  code target (STUB)  (0xffff91406820)
0xffff9142e494  code target (STUB)  (0xffff91406260)
0xffff9142e4a0  code target (STUB)  (0xffff914068e0)
0xffff9142e4b4  constant pool (size 108)
0xffff9142e550  runtime entry
0xffff9142e55c  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff9142e600     0  adr xzr, #+0x40 (addr 0xffff9142e640)
0xffff9142e604     4  adr xzr, #+0x2a8 (addr 0xffff9142e8ac)
0xffff9142e608     8  ldr x16, pc+1368 (addr 0x0000ffff9142eb60)    ;; external reference (store_buffer_top)
0xffff9142e60c    12  ldr x0, [x16]
0xffff9142e610    16  str x2, [x0], #8
0xffff9142e614    20  str x0, [x16]
0xffff9142e618    24  tst x0, #0x1ffff
0xffff9142e61c    28  b.eq #+0x8 (addr 0xffff9142e624)
0xffff9142e620    32  ret
0xffff9142e624    36  sub csp, jssp, #0x8 (8)
0xffff9142e628    40  str lr, [jssp, #-8]!
0xffff9142e62c    44  ldr x17, pc+1340 (addr 0x0000ffff9142eb68)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142e630    48  blr x17
0xffff9142e634    52  ldr lr, [jssp], #8
0xffff9142e638    56  ret
0xffff9142e63c    60  ret
0xffff9142e640    64  sub csp, jssp, #0x10 (16)
0xffff9142e644    68  stp x3, x1, [jssp, #-16]!
0xffff9142e648    72  ldr x0, [x2]
0xffff9142e64c    76  and x16, x0, #0xfffffffffff00000
0xffff9142e650    80  ldr x16, [x16, #8]
0xffff9142e654    84  tst x16, #0x18
0xffff9142e658    88  b.eq #+0x17c (addr 0xffff9142e7d4)
0xffff9142e65c    92  and x16, cp, #0xfffffffffff00000
0xffff9142e660    96  ldr x16, [x16, #8]
0xffff9142e664   100  tst x16, #0x18
0xffff9142e668   104  b.ne #+0x16c (addr 0xffff9142e7d4)
0xffff9142e66c   108  and x0, cp, #0xfffffffffff00000
0xffff9142e670   112  ldr x1, [x0, #104]
0xffff9142e674   116  subs x1, x1, #0x1 (1)
0xffff9142e678   120  str x1, [x0, #104]
0xffff9142e67c   124  b.mi #+0xc4 (addr 0xffff9142e740)
0xffff9142e680   128  ubfx x16, cp, #8, #12
0xffff9142e684   132  and x0, cp, #0xfffffffffff00000
0xffff9142e688   136  add x0, x0, x16, lsl #2
0xffff9142e68c   140  ubfx x1, cp, #3, #5
0xffff9142e690   144  ldr x0, [x0, #360]
0xffff9142e694   148  lsr x0, x0, x1
0xffff9142e698   152  tbz w0, #0, #+0x8 (addr 0xffff9142e6a0)
0xffff9142e69c   156  tbnz w0, #1, #+0x3c (addr 0xffff9142e6d8)
0xffff9142e6a0   160  ldp x3, x1, [jssp], #16
0xffff9142e6a4   164  ldr x16, pc+1228 (addr 0x0000ffff9142eb70)    ;; external reference (store_buffer_top)
0xffff9142e6a8   168  ldr x0, [x16]
0xffff9142e6ac   172  str x2, [x0], #8
0xffff9142e6b0   176  str x0, [x16]
0xffff9142e6b4   180  tst x0, #0x1ffff
0xffff9142e6b8   184  b.eq #+0x8 (addr 0xffff9142e6c0)
0xffff9142e6bc   188  ret
0xffff9142e6c0   192  sub csp, jssp, #0x8 (8)
0xffff9142e6c4   196  str lr, [jssp, #-8]!
0xffff9142e6c8   200  ldr x17, pc+1200 (addr 0x0000ffff9142eb78)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142e6cc   204  blr x17
0xffff9142e6d0   208  ldr lr, [jssp], #8
0xffff9142e6d4   212  ret
0xffff9142e6d8   216  ldr x0, [x2]
0xffff9142e6dc   220  sub csp, jssp, #0x10 (16)
0xffff9142e6e0   224  stp cp, x2, [jssp, #-16]!
0xffff9142e6e4   228  ubfx x16, x0, #8, #12
0xffff9142e6e8   232  and x1, x0, #0xfffffffffff00000
0xffff9142e6ec   236  add x1, x1, x16, lsl #2
0xffff9142e6f0   240  ubfx cp, x0, #3, #5
0xffff9142e6f4   244  ldr x2, [x1, #360]
0xffff9142e6f8   248  lsr x2, x2, cp
0xffff9142e6fc   252  tbz w2, #0, #+0x40 (addr 0xffff9142e73c)
0xffff9142e700   256  ldp cp, x2, [jssp], #16
0xffff9142e704   260  ldp x3, x1, [jssp], #16
0xffff9142e708   264  ldr x16, pc+1144 (addr 0x0000ffff9142eb80)    ;; external reference (store_buffer_top)
0xffff9142e70c   268  ldr x0, [x16]
0xffff9142e710   272  str x2, [x0], #8
0xffff9142e714   276  str x0, [x16]
0xffff9142e718   280  tst x0, #0x1ffff
0xffff9142e71c   284  b.eq #+0x8 (addr 0xffff9142e724)
0xffff9142e720   288  ret
0xffff9142e724   292  sub csp, jssp, #0x8 (8)
0xffff9142e728   296  str lr, [jssp, #-8]!
0xffff9142e72c   300  ldr x17, pc+1116 (addr 0x0000ffff9142eb88)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142e730   304  blr x17
0xffff9142e734   308  ldr lr, [jssp], #8
0xffff9142e738   312  ret
0xffff9142e73c   316  ldp cp, x2, [jssp], #16
0xffff9142e740   320  sub csp, jssp, #0x78 (120)
0xffff9142e744   324  stp x14, x15, [jssp, #-32]!
0xffff9142e748   328  stp x18, lr, [jssp, #16]
0xffff9142e74c   332  stp x10, x11, [jssp, #-32]!
0xffff9142e750   336  stp x12, x13, [jssp, #16]
0xffff9142e754   340  stp x6, x7, [jssp, #-32]!
0xffff9142e758   344  stp x8, x9, [jssp, #16]
0xffff9142e75c   348  stp x2, x4, [jssp, #-24]!
0xffff9142e760   352  str x5, [jssp, #16]
0xffff9142e764   356  mov x0, cp
0xffff9142e768   360  mov x1, x2
0xffff9142e76c   364  ldr x2, pc+1060 (addr 0x0000ffff9142eb90)    ;; external reference (isolate)
0xffff9142e770   368  ldr x16, pc+1064 (addr 0x0000ffff9142eb98)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142e774   372  and csp, jssp, #0xfffffffffffffff0
0xffff9142e778   376  blr x16
0xffff9142e77c   380  ldp x5, x6, [jssp, #16]
0xffff9142e780   384  ldp x2, x4, [jssp], #32
0xffff9142e784   388  ldp x9, x10, [jssp, #16]
0xffff9142e788   392  ldp x7, x8, [jssp], #32
0xffff9142e78c   396  ldp x13, x14, [jssp, #16]
0xffff9142e790   400  ldp x11, x12, [jssp], #32
0xffff9142e794   404  ldr lr, [jssp, #16]
0xffff9142e798   408  ldp x15, x18, [jssp], #24
0xffff9142e79c   412  ldp x3, x1, [jssp], #16
0xffff9142e7a0   416  ldr x16, pc+1024 (addr 0x0000ffff9142eba0)    ;; external reference (store_buffer_top)
0xffff9142e7a4   420  ldr x0, [x16]
0xffff9142e7a8   424  str x2, [x0], #8
0xffff9142e7ac   428  str x0, [x16]
0xffff9142e7b0   432  tst x0, #0x1ffff
0xffff9142e7b4   436  b.eq #+0x8 (addr 0xffff9142e7bc)
0xffff9142e7b8   440  ret
0xffff9142e7bc   444  sub csp, jssp, #0x8 (8)
0xffff9142e7c0   448  str lr, [jssp, #-8]!
0xffff9142e7c4   452  ldr x17, pc+996 (addr 0x0000ffff9142eba8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142e7c8   456  blr x17
0xffff9142e7cc   460  ldr lr, [jssp], #8
0xffff9142e7d0   464  ret
0xffff9142e7d4   468  and x0, cp, #0xfffffffffff00000
0xffff9142e7d8   472  ldr x1, [x0, #104]
0xffff9142e7dc   476  subs x1, x1, #0x1 (1)
0xffff9142e7e0   480  str x1, [x0, #104]
0xffff9142e7e4   484  b.mi #+0x64 (addr 0xffff9142e848)
0xffff9142e7e8   488  ubfx x16, cp, #8, #12
0xffff9142e7ec   492  and x0, cp, #0xfffffffffff00000
0xffff9142e7f0   496  add x0, x0, x16, lsl #2
0xffff9142e7f4   500  ubfx x1, cp, #3, #5
0xffff9142e7f8   504  ldr x0, [x0, #360]
0xffff9142e7fc   508  lsr x0, x0, x1
0xffff9142e800   512  tbz w0, #0, #+0x8 (addr 0xffff9142e808)
0xffff9142e804   516  tbnz w0, #1, #+0xc (addr 0xffff9142e810)
0xffff9142e808   520  ldp x3, x1, [jssp], #16
0xffff9142e80c   524  ret
0xffff9142e810   528  ldr x0, [x2]
0xffff9142e814   532  sub csp, jssp, #0x10 (16)
0xffff9142e818   536  stp cp, x2, [jssp, #-16]!
0xffff9142e81c   540  ubfx x16, x0, #8, #12
0xffff9142e820   544  and x1, x0, #0xfffffffffff00000
0xffff9142e824   548  add x1, x1, x16, lsl #2
0xffff9142e828   552  ubfx cp, x0, #3, #5
0xffff9142e82c   556  ldr x2, [x1, #360]
0xffff9142e830   560  lsr x2, x2, cp
0xffff9142e834   564  tbz w2, #0, #+0x10 (addr 0xffff9142e844)
0xffff9142e838   568  ldp cp, x2, [jssp], #16
0xffff9142e83c   572  ldp x3, x1, [jssp], #16
0xffff9142e840   576  ret
0xffff9142e844   580  ldp cp, x2, [jssp], #16
0xffff9142e848   584  sub csp, jssp, #0x78 (120)
0xffff9142e84c   588  stp x14, x15, [jssp, #-32]!
0xffff9142e850   592  stp x18, lr, [jssp, #16]
0xffff9142e854   596  stp x10, x11, [jssp, #-32]!
0xffff9142e858   600  stp x12, x13, [jssp, #16]
0xffff9142e85c   604  stp x6, x7, [jssp, #-32]!
0xffff9142e860   608  stp x8, x9, [jssp, #16]
0xffff9142e864   612  stp x2, x4, [jssp, #-24]!
0xffff9142e868   616  str x5, [jssp, #16]
0xffff9142e86c   620  mov x0, cp
0xffff9142e870   624  mov x1, x2
0xffff9142e874   628  ldr x2, pc+828 (addr 0x0000ffff9142ebb0)    ;; external reference (isolate)
0xffff9142e878   632  ldr x16, pc+832 (addr 0x0000ffff9142ebb8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142e87c   636  and csp, jssp, #0xfffffffffffffff0
0xffff9142e880   640  blr x16
0xffff9142e884   644  ldp x5, x6, [jssp, #16]
0xffff9142e888   648  ldp x2, x4, [jssp], #32
0xffff9142e88c   652  ldp x9, x10, [jssp, #16]
0xffff9142e890   656  ldp x7, x8, [jssp], #32
0xffff9142e894   660  ldp x13, x14, [jssp, #16]
0xffff9142e898   664  ldp x11, x12, [jssp], #32
0xffff9142e89c   668  ldr lr, [jssp, #16]
0xffff9142e8a0   672  ldp x15, x18, [jssp], #24
0xffff9142e8a4   676  ldp x3, x1, [jssp], #16
0xffff9142e8a8   680  ret
0xffff9142e8ac   684  sub csp, jssp, #0x10 (16)
0xffff9142e8b0   688  stp x3, x1, [jssp, #-16]!
0xffff9142e8b4   692  ldr x0, [x2]
0xffff9142e8b8   696  and x16, x0, #0xfffffffffff00000
0xffff9142e8bc   700  ldr x16, [x16, #8]
0xffff9142e8c0   704  tst x16, #0x18
0xffff9142e8c4   708  b.eq #+0x19c (addr 0xffff9142ea60)
0xffff9142e8c8   712  and x16, cp, #0xfffffffffff00000
0xffff9142e8cc   716  ldr x16, [x16, #8]
0xffff9142e8d0   720  tst x16, #0x18
0xffff9142e8d4   724  b.ne #+0x18c (addr 0xffff9142ea60)
0xffff9142e8d8   728  and x0, cp, #0xfffffffffff00000
0xffff9142e8dc   732  ldr x1, [x0, #104]
0xffff9142e8e0   736  subs x1, x1, #0x1 (1)
0xffff9142e8e4   740  str x1, [x0, #104]
0xffff9142e8e8   744  b.mi #+0xe4 (addr 0xffff9142e9cc)
0xffff9142e8ec   748  ubfx x16, cp, #8, #12
0xffff9142e8f0   752  and x0, cp, #0xfffffffffff00000
0xffff9142e8f4   756  add x0, x0, x16, lsl #2
0xffff9142e8f8   760  ubfx x1, cp, #3, #5
0xffff9142e8fc   764  ldr x0, [x0, #360]
0xffff9142e900   768  lsr x0, x0, x1
0xffff9142e904   772  tbz w0, #0, #+0x8 (addr 0xffff9142e90c)
0xffff9142e908   776  tbnz w0, #1, #+0x3c (addr 0xffff9142e944)
0xffff9142e90c   780  ldp x3, x1, [jssp], #16
0xffff9142e910   784  ldr x16, pc+688 (addr 0x0000ffff9142ebc0)    ;; external reference (store_buffer_top)
0xffff9142e914   788  ldr x0, [x16]
0xffff9142e918   792  str x2, [x0], #8
0xffff9142e91c   796  str x0, [x16]
0xffff9142e920   800  tst x0, #0x1ffff
0xffff9142e924   804  b.eq #+0x8 (addr 0xffff9142e92c)
0xffff9142e928   808  ret
0xffff9142e92c   812  sub csp, jssp, #0x8 (8)
0xffff9142e930   816  str lr, [jssp, #-8]!
0xffff9142e934   820  ldr x17, pc+660 (addr 0x0000ffff9142ebc8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142e938   824  blr x17
0xffff9142e93c   828  ldr lr, [jssp], #8
0xffff9142e940   832  ret
0xffff9142e944   836  ldr x0, [x2]
0xffff9142e948   840  and x1, x0, #0xfffffffffff00000
0xffff9142e94c   844  ldr x1, [x1, #8]
0xffff9142e950   848  tbz w1, #6, #+0x18 (addr 0xffff9142e968)
0xffff9142e954   852  and x1, cp, #0xfffffffffff00000
0xffff9142e958   856  ldr x1, [x1, #8]
0xffff9142e95c   860  movz x16, #0x58
0xffff9142e960   864  tst x1, x16
0xffff9142e964   868  b.eq #+0x68 (addr 0xffff9142e9cc)
0xffff9142e968   872  sub csp, jssp, #0x10 (16)
0xffff9142e96c   876  stp cp, x2, [jssp, #-16]!
0xffff9142e970   880  ubfx x16, x0, #8, #12
0xffff9142e974   884  and x1, x0, #0xfffffffffff00000
0xffff9142e978   888  add x1, x1, x16, lsl #2
0xffff9142e97c   892  ubfx cp, x0, #3, #5
0xffff9142e980   896  ldr x2, [x1, #360]
0xffff9142e984   900  lsr x2, x2, cp
0xffff9142e988   904  tbz w2, #0, #+0x40 (addr 0xffff9142e9c8)
0xffff9142e98c   908  ldp cp, x2, [jssp], #16
0xffff9142e990   912  ldp x3, x1, [jssp], #16
0xffff9142e994   916  ldr x16, pc+572 (addr 0x0000ffff9142ebd0)    ;; external reference (store_buffer_top)
0xffff9142e998   920  ldr x0, [x16]
0xffff9142e99c   924  str x2, [x0], #8
0xffff9142e9a0   928  str x0, [x16]
0xffff9142e9a4   932  tst x0, #0x1ffff
0xffff9142e9a8   936  b.eq #+0x8 (addr 0xffff9142e9b0)
0xffff9142e9ac   940  ret
0xffff9142e9b0   944  sub csp, jssp, #0x8 (8)
0xffff9142e9b4   948  str lr, [jssp, #-8]!
0xffff9142e9b8   952  ldr x17, pc+544 (addr 0x0000ffff9142ebd8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142e9bc   956  blr x17
0xffff9142e9c0   960  ldr lr, [jssp], #8
0xffff9142e9c4   964  ret
0xffff9142e9c8   968  ldp cp, x2, [jssp], #16
0xffff9142e9cc   972  sub csp, jssp, #0x78 (120)
0xffff9142e9d0   976  stp x14, x15, [jssp, #-32]!
0xffff9142e9d4   980  stp x18, lr, [jssp, #16]
0xffff9142e9d8   984  stp x10, x11, [jssp, #-32]!
0xffff9142e9dc   988  stp x12, x13, [jssp, #16]
0xffff9142e9e0   992  stp x6, x7, [jssp, #-32]!
0xffff9142e9e4   996  stp x8, x9, [jssp, #16]
0xffff9142e9e8  1000  stp x2, x4, [jssp, #-24]!
0xffff9142e9ec  1004  str x5, [jssp, #16]
0xffff9142e9f0  1008  mov x0, cp
0xffff9142e9f4  1012  mov x1, x2
0xffff9142e9f8  1016  ldr x2, pc+488 (addr 0x0000ffff9142ebe0)    ;; external reference (isolate)
0xffff9142e9fc  1020  ldr x16, pc+492 (addr 0x0000ffff9142ebe8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142ea00  1024  and csp, jssp, #0xfffffffffffffff0
0xffff9142ea04  1028  blr x16
0xffff9142ea08  1032  ldp x5, x6, [jssp, #16]
0xffff9142ea0c  1036  ldp x2, x4, [jssp], #32
0xffff9142ea10  1040  ldp x9, x10, [jssp, #16]
0xffff9142ea14  1044  ldp x7, x8, [jssp], #32
0xffff9142ea18  1048  ldp x13, x14, [jssp, #16]
0xffff9142ea1c  1052  ldp x11, x12, [jssp], #32
0xffff9142ea20  1056  ldr lr, [jssp, #16]
0xffff9142ea24  1060  ldp x15, x18, [jssp], #24
0xffff9142ea28  1064  ldp x3, x1, [jssp], #16
0xffff9142ea2c  1068  ldr x16, pc+452 (addr 0x0000ffff9142ebf0)    ;; external reference (store_buffer_top)
0xffff9142ea30  1072  ldr x0, [x16]
0xffff9142ea34  1076  str x2, [x0], #8
0xffff9142ea38  1080  str x0, [x16]
0xffff9142ea3c  1084  tst x0, #0x1ffff
0xffff9142ea40  1088  b.eq #+0x8 (addr 0xffff9142ea48)
0xffff9142ea44  1092  ret
0xffff9142ea48  1096  sub csp, jssp, #0x8 (8)
0xffff9142ea4c  1100  str lr, [jssp, #-8]!
0xffff9142ea50  1104  ldr x17, pc+424 (addr 0x0000ffff9142ebf8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142ea54  1108  blr x17
0xffff9142ea58  1112  ldr lr, [jssp], #8
0xffff9142ea5c  1116  ret
0xffff9142ea60  1120  and x0, cp, #0xfffffffffff00000
0xffff9142ea64  1124  ldr x1, [x0, #104]
0xffff9142ea68  1128  subs x1, x1, #0x1 (1)
0xffff9142ea6c  1132  str x1, [x0, #104]
0xffff9142ea70  1136  b.mi #+0x84 (addr 0xffff9142eaf4)
0xffff9142ea74  1140  ubfx x16, cp, #8, #12
0xffff9142ea78  1144  and x0, cp, #0xfffffffffff00000
0xffff9142ea7c  1148  add x0, x0, x16, lsl #2
0xffff9142ea80  1152  ubfx x1, cp, #3, #5
0xffff9142ea84  1156  ldr x0, [x0, #360]
0xffff9142ea88  1160  lsr x0, x0, x1
0xffff9142ea8c  1164  tbz w0, #0, #+0x8 (addr 0xffff9142ea94)
0xffff9142ea90  1168  tbnz w0, #1, #+0xc (addr 0xffff9142ea9c)
0xffff9142ea94  1172  ldp x3, x1, [jssp], #16
0xffff9142ea98  1176  ret
0xffff9142ea9c  1180  ldr x0, [x2]
0xffff9142eaa0  1184  and x1, x0, #0xfffffffffff00000
0xffff9142eaa4  1188  ldr x1, [x1, #8]
0xffff9142eaa8  1192  tbz w1, #6, #+0x18 (addr 0xffff9142eac0)
0xffff9142eaac  1196  and x1, cp, #0xfffffffffff00000
0xffff9142eab0  1200  ldr x1, [x1, #8]
0xffff9142eab4  1204  movz x16, #0x58
0xffff9142eab8  1208  tst x1, x16
0xffff9142eabc  1212  b.eq #+0x38 (addr 0xffff9142eaf4)
0xffff9142eac0  1216  sub csp, jssp, #0x10 (16)
0xffff9142eac4  1220  stp cp, x2, [jssp, #-16]!
0xffff9142eac8  1224  ubfx x16, x0, #8, #12
0xffff9142eacc  1228  and x1, x0, #0xfffffffffff00000
0xffff9142ead0  1232  add x1, x1, x16, lsl #2
0xffff9142ead4  1236  ubfx cp, x0, #3, #5
0xffff9142ead8  1240  ldr x2, [x1, #360]
0xffff9142eadc  1244  lsr x2, x2, cp
0xffff9142eae0  1248  tbz w2, #0, #+0x10 (addr 0xffff9142eaf0)
0xffff9142eae4  1252  ldp cp, x2, [jssp], #16
0xffff9142eae8  1256  ldp x3, x1, [jssp], #16
0xffff9142eaec  1260  ret
0xffff9142eaf0  1264  ldp cp, x2, [jssp], #16
0xffff9142eaf4  1268  sub csp, jssp, #0x78 (120)
0xffff9142eaf8  1272  stp x14, x15, [jssp, #-32]!
0xffff9142eafc  1276  stp x18, lr, [jssp, #16]
0xffff9142eb00  1280  stp x10, x11, [jssp, #-32]!
0xffff9142eb04  1284  stp x12, x13, [jssp, #16]
0xffff9142eb08  1288  stp x6, x7, [jssp, #-32]!
0xffff9142eb0c  1292  stp x8, x9, [jssp, #16]
0xffff9142eb10  1296  stp x2, x4, [jssp, #-24]!
0xffff9142eb14  1300  str x5, [jssp, #16]
0xffff9142eb18  1304  mov x0, cp
0xffff9142eb1c  1308  mov x1, x2
0xffff9142eb20  1312  ldr x2, pc+224 (addr 0x0000ffff9142ec00)    ;; external reference (isolate)
0xffff9142eb24  1316  ldr x16, pc+228 (addr 0x0000ffff9142ec08)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142eb28  1320  and csp, jssp, #0xfffffffffffffff0
0xffff9142eb2c  1324  blr x16
0xffff9142eb30  1328  ldp x5, x6, [jssp, #16]
0xffff9142eb34  1332  ldp x2, x4, [jssp], #32
0xffff9142eb38  1336  ldp x9, x10, [jssp, #16]
0xffff9142eb3c  1340  ldp x7, x8, [jssp], #32
0xffff9142eb40  1344  ldp x13, x14, [jssp, #16]
0xffff9142eb44  1348  ldp x11, x12, [jssp], #32
0xffff9142eb48  1352  ldr lr, [jssp, #16]
0xffff9142eb4c  1356  ldp x15, x18, [jssp], #24
0xffff9142eb50  1360  ldp x3, x1, [jssp], #16
0xffff9142eb54  1364  ret
0xffff9142eb58  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9142eb5c  1372  d63f03e0       constant
0xffff9142eb60  1376  4117f8c0       constant
0xffff9142eb64  1380  00000000       constant
0xffff9142eb68  1384  914064c0       constant
0xffff9142eb6c  1388  0000ffff       constant
0xffff9142eb70  1392  4117f8c0       constant
0xffff9142eb74  1396  00000000       constant
0xffff9142eb78  1400  914064c0       constant
0xffff9142eb7c  1404  0000ffff       constant
0xffff9142eb80  1408  4117f8c0       constant
0xffff9142eb84  1412  00000000       constant
0xffff9142eb88  1416  914064c0       constant
0xffff9142eb8c  1420  0000ffff       constant
0xffff9142eb90  1424  4117e2d0       constant
0xffff9142eb94  1428  00000000       constant
0xffff9142eb98  1432  00c2d958       constant
0xffff9142eb9c  1436  00000000       constant
0xffff9142eba0  1440  4117f8c0       constant
0xffff9142eba4  1444  00000000       constant
0xffff9142eba8  1448  914064c0       constant
0xffff9142ebac  1452  0000ffff       constant
0xffff9142ebb0  1456  4117e2d0       constant
0xffff9142ebb4  1460  00000000       constant
0xffff9142ebb8  1464  00c2d958       constant
0xffff9142ebbc  1468  00000000       constant
0xffff9142ebc0  1472  4117f8c0       constant
0xffff9142ebc4  1476  00000000       constant
0xffff9142ebc8  1480  914064c0       constant
0xffff9142ebcc  1484  0000ffff       constant
0xffff9142ebd0  1488  4117f8c0       constant
0xffff9142ebd4  1492  00000000       constant
0xffff9142ebd8  1496  914064c0       constant
0xffff9142ebdc  1500  0000ffff       constant
0xffff9142ebe0  1504  4117e2d0       constant
0xffff9142ebe4  1508  00000000       constant
0xffff9142ebe8  1512  00c2d958       constant
0xffff9142ebec  1516  00000000       constant
0xffff9142ebf0  1520  4117f8c0       constant
0xffff9142ebf4  1524  00000000       constant
0xffff9142ebf8  1528  914064c0       constant
0xffff9142ebfc  1532  0000ffff       constant
0xffff9142ec00  1536  4117e2d0       constant
0xffff9142ec04  1540  00000000       constant
0xffff9142ec08  1544  00c2d958       constant
0xffff9142ec0c  1548  00000000       constant


RelocInfo (size = 59)
0xffff9142e608  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142e62c  code target (STUB)  (0xffff914064c0)
0xffff9142e6a4  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142e6c8  code target (STUB)  (0xffff914064c0)
0xffff9142e708  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142e72c  code target (STUB)  (0xffff914064c0)
0xffff9142e76c  external reference (isolate)  (0x4117e2d0)
0xffff9142e770  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142e7a0  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142e7c4  code target (STUB)  (0xffff914064c0)
0xffff9142e874  external reference (isolate)  (0x4117e2d0)
0xffff9142e878  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142e910  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142e934  code target (STUB)  (0xffff914064c0)
0xffff9142e994  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142e9b8  code target (STUB)  (0xffff914064c0)
0xffff9142e9f8  external reference (isolate)  (0x4117e2d0)
0xffff9142e9fc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142ea2c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142ea50  code target (STUB)  (0xffff914064c0)
0xffff9142eb20  external reference (isolate)  (0x4117e2d0)
0xffff9142eb24  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142eb58  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff9142ec80     0  adr xzr, #+0x40 (addr 0xffff9142ecc0)
0xffff9142ec84     4  adr xzr, #+0x2a8 (addr 0xffff9142ef2c)
0xffff9142ec88     8  ldr x16, pc+1368 (addr 0x0000ffff9142f1e0)    ;; external reference (store_buffer_top)
0xffff9142ec8c    12  ldr x10, [x16]
0xffff9142ec90    16  str x11, [x10], #8
0xffff9142ec94    20  str x10, [x16]
0xffff9142ec98    24  tst x10, #0x1ffff
0xffff9142ec9c    28  b.eq #+0x8 (addr 0xffff9142eca4)
0xffff9142eca0    32  ret
0xffff9142eca4    36  sub csp, jssp, #0x8 (8)
0xffff9142eca8    40  str lr, [jssp, #-8]!
0xffff9142ecac    44  ldr x17, pc+1340 (addr 0x0000ffff9142f1e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142ecb0    48  blr x17
0xffff9142ecb4    52  ldr lr, [jssp], #8
0xffff9142ecb8    56  ret
0xffff9142ecbc    60  ret
0xffff9142ecc0    64  sub csp, jssp, #0x10 (16)
0xffff9142ecc4    68  stp x2, x0, [jssp, #-16]!
0xffff9142ecc8    72  ldr x10, [x11]
0xffff9142eccc    76  and x16, x10, #0xfffffffffff00000
0xffff9142ecd0    80  ldr x16, [x16, #8]
0xffff9142ecd4    84  tst x16, #0x18
0xffff9142ecd8    88  b.eq #+0x17c (addr 0xffff9142ee54)
0xffff9142ecdc    92  and x16, x1, #0xfffffffffff00000
0xffff9142ece0    96  ldr x16, [x16, #8]
0xffff9142ece4   100  tst x16, #0x18
0xffff9142ece8   104  b.ne #+0x16c (addr 0xffff9142ee54)
0xffff9142ecec   108  and x10, x1, #0xfffffffffff00000
0xffff9142ecf0   112  ldr x0, [x10, #104]
0xffff9142ecf4   116  subs x0, x0, #0x1 (1)
0xffff9142ecf8   120  str x0, [x10, #104]
0xffff9142ecfc   124  b.mi #+0xc4 (addr 0xffff9142edc0)
0xffff9142ed00   128  ubfx x16, x1, #8, #12
0xffff9142ed04   132  and x10, x1, #0xfffffffffff00000
0xffff9142ed08   136  add x10, x10, x16, lsl #2
0xffff9142ed0c   140  ubfx x0, x1, #3, #5
0xffff9142ed10   144  ldr x10, [x10, #360]
0xffff9142ed14   148  lsr x10, x10, x0
0xffff9142ed18   152  tbz w10, #0, #+0x8 (addr 0xffff9142ed20)
0xffff9142ed1c   156  tbnz w10, #1, #+0x3c (addr 0xffff9142ed58)
0xffff9142ed20   160  ldp x2, x0, [jssp], #16
0xffff9142ed24   164  ldr x16, pc+1228 (addr 0x0000ffff9142f1f0)    ;; external reference (store_buffer_top)
0xffff9142ed28   168  ldr x10, [x16]
0xffff9142ed2c   172  str x11, [x10], #8
0xffff9142ed30   176  str x10, [x16]
0xffff9142ed34   180  tst x10, #0x1ffff
0xffff9142ed38   184  b.eq #+0x8 (addr 0xffff9142ed40)
0xffff9142ed3c   188  ret
0xffff9142ed40   192  sub csp, jssp, #0x8 (8)
0xffff9142ed44   196  str lr, [jssp, #-8]!
0xffff9142ed48   200  ldr x17, pc+1200 (addr 0x0000ffff9142f1f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142ed4c   204  blr x17
0xffff9142ed50   208  ldr lr, [jssp], #8
0xffff9142ed54   212  ret
0xffff9142ed58   216  ldr x10, [x11]
0xffff9142ed5c   220  sub csp, jssp, #0x10 (16)
0xffff9142ed60   224  stp x1, x11, [jssp, #-16]!
0xffff9142ed64   228  ubfx x16, x10, #8, #12
0xffff9142ed68   232  and x0, x10, #0xfffffffffff00000
0xffff9142ed6c   236  add x0, x0, x16, lsl #2
0xffff9142ed70   240  ubfx x1, x10, #3, #5
0xffff9142ed74   244  ldr x11, [x0, #360]
0xffff9142ed78   248  lsr x11, x11, x1
0xffff9142ed7c   252  tbz w11, #0, #+0x40 (addr 0xffff9142edbc)
0xffff9142ed80   256  ldp x1, x11, [jssp], #16
0xffff9142ed84   260  ldp x2, x0, [jssp], #16
0xffff9142ed88   264  ldr x16, pc+1144 (addr 0x0000ffff9142f200)    ;; external reference (store_buffer_top)
0xffff9142ed8c   268  ldr x10, [x16]
0xffff9142ed90   272  str x11, [x10], #8
0xffff9142ed94   276  str x10, [x16]
0xffff9142ed98   280  tst x10, #0x1ffff
0xffff9142ed9c   284  b.eq #+0x8 (addr 0xffff9142eda4)
0xffff9142eda0   288  ret
0xffff9142eda4   292  sub csp, jssp, #0x8 (8)
0xffff9142eda8   296  str lr, [jssp, #-8]!
0xffff9142edac   300  ldr x17, pc+1116 (addr 0x0000ffff9142f208)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142edb0   304  blr x17
0xffff9142edb4   308  ldr lr, [jssp], #8
0xffff9142edb8   312  ret
0xffff9142edbc   316  ldp x1, x11, [jssp], #16
0xffff9142edc0   320  sub csp, jssp, #0x78 (120)
0xffff9142edc4   324  stp x14, x15, [jssp, #-32]!
0xffff9142edc8   328  stp x18, lr, [jssp, #16]
0xffff9142edcc   332  stp x9, x11, [jssp, #-32]!
0xffff9142edd0   336  stp x12, x13, [jssp, #16]
0xffff9142edd4   340  stp x5, x6, [jssp, #-32]!
0xffff9142edd8   344  stp x7, x8, [jssp, #16]
0xffff9142eddc   348  stp x1, x3, [jssp, #-24]!
0xffff9142ede0   352  str x4, [jssp, #16]
0xffff9142ede4   356  mov x0, x1
0xffff9142ede8   360  mov x1, x11
0xffff9142edec   364  ldr x2, pc+1060 (addr 0x0000ffff9142f210)    ;; external reference (isolate)
0xffff9142edf0   368  ldr x16, pc+1064 (addr 0x0000ffff9142f218)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142edf4   372  and csp, jssp, #0xfffffffffffffff0
0xffff9142edf8   376  blr x16
0xffff9142edfc   380  ldp x4, x5, [jssp, #16]
0xffff9142ee00   384  ldp x1, x3, [jssp], #32
0xffff9142ee04   388  ldp x8, x9, [jssp, #16]
0xffff9142ee08   392  ldp x6, x7, [jssp], #32
0xffff9142ee0c   396  ldp x13, x14, [jssp, #16]
0xffff9142ee10   400  ldp x11, x12, [jssp], #32
0xffff9142ee14   404  ldr lr, [jssp, #16]
0xffff9142ee18   408  ldp x15, x18, [jssp], #24
0xffff9142ee1c   412  ldp x2, x0, [jssp], #16
0xffff9142ee20   416  ldr x16, pc+1024 (addr 0x0000ffff9142f220)    ;; external reference (store_buffer_top)
0xffff9142ee24   420  ldr x10, [x16]
0xffff9142ee28   424  str x11, [x10], #8
0xffff9142ee2c   428  str x10, [x16]
0xffff9142ee30   432  tst x10, #0x1ffff
0xffff9142ee34   436  b.eq #+0x8 (addr 0xffff9142ee3c)
0xffff9142ee38   440  ret
0xffff9142ee3c   444  sub csp, jssp, #0x8 (8)
0xffff9142ee40   448  str lr, [jssp, #-8]!
0xffff9142ee44   452  ldr x17, pc+996 (addr 0x0000ffff9142f228)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142ee48   456  blr x17
0xffff9142ee4c   460  ldr lr, [jssp], #8
0xffff9142ee50   464  ret
0xffff9142ee54   468  and x10, x1, #0xfffffffffff00000
0xffff9142ee58   472  ldr x0, [x10, #104]
0xffff9142ee5c   476  subs x0, x0, #0x1 (1)
0xffff9142ee60   480  str x0, [x10, #104]
0xffff9142ee64   484  b.mi #+0x64 (addr 0xffff9142eec8)
0xffff9142ee68   488  ubfx x16, x1, #8, #12
0xffff9142ee6c   492  and x10, x1, #0xfffffffffff00000
0xffff9142ee70   496  add x10, x10, x16, lsl #2
0xffff9142ee74   500  ubfx x0, x1, #3, #5
0xffff9142ee78   504  ldr x10, [x10, #360]
0xffff9142ee7c   508  lsr x10, x10, x0
0xffff9142ee80   512  tbz w10, #0, #+0x8 (addr 0xffff9142ee88)
0xffff9142ee84   516  tbnz w10, #1, #+0xc (addr 0xffff9142ee90)
0xffff9142ee88   520  ldp x2, x0, [jssp], #16
0xffff9142ee8c   524  ret
0xffff9142ee90   528  ldr x10, [x11]
0xffff9142ee94   532  sub csp, jssp, #0x10 (16)
0xffff9142ee98   536  stp x1, x11, [jssp, #-16]!
0xffff9142ee9c   540  ubfx x16, x10, #8, #12
0xffff9142eea0   544  and x0, x10, #0xfffffffffff00000
0xffff9142eea4   548  add x0, x0, x16, lsl #2
0xffff9142eea8   552  ubfx x1, x10, #3, #5
0xffff9142eeac   556  ldr x11, [x0, #360]
0xffff9142eeb0   560  lsr x11, x11, x1
0xffff9142eeb4   564  tbz w11, #0, #+0x10 (addr 0xffff9142eec4)
0xffff9142eeb8   568  ldp x1, x11, [jssp], #16
0xffff9142eebc   572  ldp x2, x0, [jssp], #16
0xffff9142eec0   576  ret
0xffff9142eec4   580  ldp x1, x11, [jssp], #16
0xffff9142eec8   584  sub csp, jssp, #0x78 (120)
0xffff9142eecc   588  stp x14, x15, [jssp, #-32]!
0xffff9142eed0   592  stp x18, lr, [jssp, #16]
0xffff9142eed4   596  stp x9, x11, [jssp, #-32]!
0xffff9142eed8   600  stp x12, x13, [jssp, #16]
0xffff9142eedc   604  stp x5, x6, [jssp, #-32]!
0xffff9142eee0   608  stp x7, x8, [jssp, #16]
0xffff9142eee4   612  stp x1, x3, [jssp, #-24]!
0xffff9142eee8   616  str x4, [jssp, #16]
0xffff9142eeec   620  mov x0, x1
0xffff9142eef0   624  mov x1, x11
0xffff9142eef4   628  ldr x2, pc+828 (addr 0x0000ffff9142f230)    ;; external reference (isolate)
0xffff9142eef8   632  ldr x16, pc+832 (addr 0x0000ffff9142f238)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142eefc   636  and csp, jssp, #0xfffffffffffffff0
0xffff9142ef00   640  blr x16
0xffff9142ef04   644  ldp x4, x5, [jssp, #16]
0xffff9142ef08   648  ldp x1, x3, [jssp], #32
0xffff9142ef0c   652  ldp x8, x9, [jssp, #16]
0xffff9142ef10   656  ldp x6, x7, [jssp], #32
0xffff9142ef14   660  ldp x13, x14, [jssp, #16]
0xffff9142ef18   664  ldp x11, x12, [jssp], #32
0xffff9142ef1c   668  ldr lr, [jssp, #16]
0xffff9142ef20   672  ldp x15, x18, [jssp], #24
0xffff9142ef24   676  ldp x2, x0, [jssp], #16
0xffff9142ef28   680  ret
0xffff9142ef2c   684  sub csp, jssp, #0x10 (16)
0xffff9142ef30   688  stp x2, x0, [jssp, #-16]!
0xffff9142ef34   692  ldr x10, [x11]
0xffff9142ef38   696  and x16, x10, #0xfffffffffff00000
0xffff9142ef3c   700  ldr x16, [x16, #8]
0xffff9142ef40   704  tst x16, #0x18
0xffff9142ef44   708  b.eq #+0x19c (addr 0xffff9142f0e0)
0xffff9142ef48   712  and x16, x1, #0xfffffffffff00000
0xffff9142ef4c   716  ldr x16, [x16, #8]
0xffff9142ef50   720  tst x16, #0x18
0xffff9142ef54   724  b.ne #+0x18c (addr 0xffff9142f0e0)
0xffff9142ef58   728  and x10, x1, #0xfffffffffff00000
0xffff9142ef5c   732  ldr x0, [x10, #104]
0xffff9142ef60   736  subs x0, x0, #0x1 (1)
0xffff9142ef64   740  str x0, [x10, #104]
0xffff9142ef68   744  b.mi #+0xe4 (addr 0xffff9142f04c)
0xffff9142ef6c   748  ubfx x16, x1, #8, #12
0xffff9142ef70   752  and x10, x1, #0xfffffffffff00000
0xffff9142ef74   756  add x10, x10, x16, lsl #2
0xffff9142ef78   760  ubfx x0, x1, #3, #5
0xffff9142ef7c   764  ldr x10, [x10, #360]
0xffff9142ef80   768  lsr x10, x10, x0
0xffff9142ef84   772  tbz w10, #0, #+0x8 (addr 0xffff9142ef8c)
0xffff9142ef88   776  tbnz w10, #1, #+0x3c (addr 0xffff9142efc4)
0xffff9142ef8c   780  ldp x2, x0, [jssp], #16
0xffff9142ef90   784  ldr x16, pc+688 (addr 0x0000ffff9142f240)    ;; external reference (store_buffer_top)
0xffff9142ef94   788  ldr x10, [x16]
0xffff9142ef98   792  str x11, [x10], #8
0xffff9142ef9c   796  str x10, [x16]
0xffff9142efa0   800  tst x10, #0x1ffff
0xffff9142efa4   804  b.eq #+0x8 (addr 0xffff9142efac)
0xffff9142efa8   808  ret
0xffff9142efac   812  sub csp, jssp, #0x8 (8)
0xffff9142efb0   816  str lr, [jssp, #-8]!
0xffff9142efb4   820  ldr x17, pc+660 (addr 0x0000ffff9142f248)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142efb8   824  blr x17
0xffff9142efbc   828  ldr lr, [jssp], #8
0xffff9142efc0   832  ret
0xffff9142efc4   836  ldr x10, [x11]
0xffff9142efc8   840  and x0, x10, #0xfffffffffff00000
0xffff9142efcc   844  ldr x0, [x0, #8]
0xffff9142efd0   848  tbz w0, #6, #+0x18 (addr 0xffff9142efe8)
0xffff9142efd4   852  and x0, x1, #0xfffffffffff00000
0xffff9142efd8   856  ldr x0, [x0, #8]
0xffff9142efdc   860  movz x16, #0x58
0xffff9142efe0   864  tst x0, x16
0xffff9142efe4   868  b.eq #+0x68 (addr 0xffff9142f04c)
0xffff9142efe8   872  sub csp, jssp, #0x10 (16)
0xffff9142efec   876  stp x1, x11, [jssp, #-16]!
0xffff9142eff0   880  ubfx x16, x10, #8, #12
0xffff9142eff4   884  and x0, x10, #0xfffffffffff00000
0xffff9142eff8   888  add x0, x0, x16, lsl #2
0xffff9142effc   892  ubfx x1, x10, #3, #5
0xffff9142f000   896  ldr x11, [x0, #360]
0xffff9142f004   900  lsr x11, x11, x1
0xffff9142f008   904  tbz w11, #0, #+0x40 (addr 0xffff9142f048)
0xffff9142f00c   908  ldp x1, x11, [jssp], #16
0xffff9142f010   912  ldp x2, x0, [jssp], #16
0xffff9142f014   916  ldr x16, pc+572 (addr 0x0000ffff9142f250)    ;; external reference (store_buffer_top)
0xffff9142f018   920  ldr x10, [x16]
0xffff9142f01c   924  str x11, [x10], #8
0xffff9142f020   928  str x10, [x16]
0xffff9142f024   932  tst x10, #0x1ffff
0xffff9142f028   936  b.eq #+0x8 (addr 0xffff9142f030)
0xffff9142f02c   940  ret
0xffff9142f030   944  sub csp, jssp, #0x8 (8)
0xffff9142f034   948  str lr, [jssp, #-8]!
0xffff9142f038   952  ldr x17, pc+544 (addr 0x0000ffff9142f258)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142f03c   956  blr x17
0xffff9142f040   960  ldr lr, [jssp], #8
0xffff9142f044   964  ret
0xffff9142f048   968  ldp x1, x11, [jssp], #16
0xffff9142f04c   972  sub csp, jssp, #0x78 (120)
0xffff9142f050   976  stp x14, x15, [jssp, #-32]!
0xffff9142f054   980  stp x18, lr, [jssp, #16]
0xffff9142f058   984  stp x9, x11, [jssp, #-32]!
0xffff9142f05c   988  stp x12, x13, [jssp, #16]
0xffff9142f060   992  stp x5, x6, [jssp, #-32]!
0xffff9142f064   996  stp x7, x8, [jssp, #16]
0xffff9142f068  1000  stp x1, x3, [jssp, #-24]!
0xffff9142f06c  1004  str x4, [jssp, #16]
0xffff9142f070  1008  mov x0, x1
0xffff9142f074  1012  mov x1, x11
0xffff9142f078  1016  ldr x2, pc+488 (addr 0x0000ffff9142f260)    ;; external reference (isolate)
0xffff9142f07c  1020  ldr x16, pc+492 (addr 0x0000ffff9142f268)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142f080  1024  and csp, jssp, #0xfffffffffffffff0
0xffff9142f084  1028  blr x16
0xffff9142f088  1032  ldp x4, x5, [jssp, #16]
0xffff9142f08c  1036  ldp x1, x3, [jssp], #32
0xffff9142f090  1040  ldp x8, x9, [jssp, #16]
0xffff9142f094  1044  ldp x6, x7, [jssp], #32
0xffff9142f098  1048  ldp x13, x14, [jssp, #16]
0xffff9142f09c  1052  ldp x11, x12, [jssp], #32
0xffff9142f0a0  1056  ldr lr, [jssp, #16]
0xffff9142f0a4  1060  ldp x15, x18, [jssp], #24
0xffff9142f0a8  1064  ldp x2, x0, [jssp], #16
0xffff9142f0ac  1068  ldr x16, pc+452 (addr 0x0000ffff9142f270)    ;; external reference (store_buffer_top)
0xffff9142f0b0  1072  ldr x10, [x16]
0xffff9142f0b4  1076  str x11, [x10], #8
0xffff9142f0b8  1080  str x10, [x16]
0xffff9142f0bc  1084  tst x10, #0x1ffff
0xffff9142f0c0  1088  b.eq #+0x8 (addr 0xffff9142f0c8)
0xffff9142f0c4  1092  ret
0xffff9142f0c8  1096  sub csp, jssp, #0x8 (8)
0xffff9142f0cc  1100  str lr, [jssp, #-8]!
0xffff9142f0d0  1104  ldr x17, pc+424 (addr 0x0000ffff9142f278)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9142f0d4  1108  blr x17
0xffff9142f0d8  1112  ldr lr, [jssp], #8
0xffff9142f0dc  1116  ret
0xffff9142f0e0  1120  and x10, x1, #0xfffffffffff00000
0xffff9142f0e4  1124  ldr x0, [x10, #104]
0xffff9142f0e8  1128  subs x0, x0, #0x1 (1)
0xffff9142f0ec  1132  str x0, [x10, #104]
0xffff9142f0f0  1136  b.mi #+0x84 (addr 0xffff9142f174)
0xffff9142f0f4  1140  ubfx x16, x1, #8, #12
0xffff9142f0f8  1144  and x10, x1, #0xfffffffffff00000
0xffff9142f0fc  1148  add x10, x10, x16, lsl #2
0xffff9142f100  1152  ubfx x0, x1, #3, #5
0xffff9142f104  1156  ldr x10, [x10, #360]
0xffff9142f108  1160  lsr x10, x10, x0
0xffff9142f10c  1164  tbz w10, #0, #+0x8 (addr 0xffff9142f114)
0xffff9142f110  1168  tbnz w10, #1, #+0xc (addr 0xffff9142f11c)
0xffff9142f114  1172  ldp x2, x0, [jssp], #16
0xffff9142f118  1176  ret
0xffff9142f11c  1180  ldr x10, [x11]
0xffff9142f120  1184  and x0, x10, #0xfffffffffff00000
0xffff9142f124  1188  ldr x0, [x0, #8]
0xffff9142f128  1192  tbz w0, #6, #+0x18 (addr 0xffff9142f140)
0xffff9142f12c  1196  and x0, x1, #0xfffffffffff00000
0xffff9142f130  1200  ldr x0, [x0, #8]
0xffff9142f134  1204  movz x16, #0x58
0xffff9142f138  1208  tst x0, x16
0xffff9142f13c  1212  b.eq #+0x38 (addr 0xffff9142f174)
0xffff9142f140  1216  sub csp, jssp, #0x10 (16)
0xffff9142f144  1220  stp x1, x11, [jssp, #-16]!
0xffff9142f148  1224  ubfx x16, x10, #8, #12
0xffff9142f14c  1228  and x0, x10, #0xfffffffffff00000
0xffff9142f150  1232  add x0, x0, x16, lsl #2
0xffff9142f154  1236  ubfx x1, x10, #3, #5
0xffff9142f158  1240  ldr x11, [x0, #360]
0xffff9142f15c  1244  lsr x11, x11, x1
0xffff9142f160  1248  tbz w11, #0, #+0x10 (addr 0xffff9142f170)
0xffff9142f164  1252  ldp x1, x11, [jssp], #16
0xffff9142f168  1256  ldp x2, x0, [jssp], #16
0xffff9142f16c  1260  ret
0xffff9142f170  1264  ldp x1, x11, [jssp], #16
0xffff9142f174  1268  sub csp, jssp, #0x78 (120)
0xffff9142f178  1272  stp x14, x15, [jssp, #-32]!
0xffff9142f17c  1276  stp x18, lr, [jssp, #16]
0xffff9142f180  1280  stp x9, x11, [jssp, #-32]!
0xffff9142f184  1284  stp x12, x13, [jssp, #16]
0xffff9142f188  1288  stp x5, x6, [jssp, #-32]!
0xffff9142f18c  1292  stp x7, x8, [jssp, #16]
0xffff9142f190  1296  stp x1, x3, [jssp, #-24]!
0xffff9142f194  1300  str x4, [jssp, #16]
0xffff9142f198  1304  mov x0, x1
0xffff9142f19c  1308  mov x1, x11
0xffff9142f1a0  1312  ldr x2, pc+224 (addr 0x0000ffff9142f280)    ;; external reference (isolate)
0xffff9142f1a4  1316  ldr x16, pc+228 (addr 0x0000ffff9142f288)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9142f1a8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff9142f1ac  1324  blr x16
0xffff9142f1b0  1328  ldp x4, x5, [jssp, #16]
0xffff9142f1b4  1332  ldp x1, x3, [jssp], #32
0xffff9142f1b8  1336  ldp x8, x9, [jssp, #16]
0xffff9142f1bc  1340  ldp x6, x7, [jssp], #32
0xffff9142f1c0  1344  ldp x13, x14, [jssp, #16]
0xffff9142f1c4  1348  ldp x11, x12, [jssp], #32
0xffff9142f1c8  1352  ldr lr, [jssp, #16]
0xffff9142f1cc  1356  ldp x15, x18, [jssp], #24
0xffff9142f1d0  1360  ldp x2, x0, [jssp], #16
0xffff9142f1d4  1364  ret
0xffff9142f1d8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9142f1dc  1372  d63f03e0       constant
0xffff9142f1e0  1376  4117f8c0       constant
0xffff9142f1e4  1380  00000000       constant
0xffff9142f1e8  1384  914064c0       constant
0xffff9142f1ec  1388  0000ffff       constant
0xffff9142f1f0  1392  4117f8c0       constant
0xffff9142f1f4  1396  00000000       constant
0xffff9142f1f8  1400  914064c0       constant
0xffff9142f1fc  1404  0000ffff       constant
0xffff9142f200  1408  4117f8c0       constant
0xffff9142f204  1412  00000000       constant
0xffff9142f208  1416  914064c0       constant
0xffff9142f20c  1420  0000ffff       constant
0xffff9142f210  1424  4117e2d0       constant
0xffff9142f214  1428  00000000       constant
0xffff9142f218  1432  00c2d958       constant
0xffff9142f21c  1436  00000000       constant
0xffff9142f220  1440  4117f8c0       constant
0xffff9142f224  1444  00000000       constant
0xffff9142f228  1448  914064c0       constant
0xffff9142f22c  1452  0000ffff       constant
0xffff9142f230  1456  4117e2d0       constant
0xffff9142f234  1460  00000000       constant
0xffff9142f238  1464  00c2d958       constant
0xffff9142f23c  1468  00000000       constant
0xffff9142f240  1472  4117f8c0       constant
0xffff9142f244  1476  00000000       constant
0xffff9142f248  1480  914064c0       constant
0xffff9142f24c  1484  0000ffff       constant
0xffff9142f250  1488  4117f8c0       constant
0xffff9142f254  1492  00000000       constant
0xffff9142f258  1496  914064c0       constant
0xffff9142f25c  1500  0000ffff       constant
0xffff9142f260  1504  4117e2d0       constant
0xffff9142f264  1508  00000000       constant
0xffff9142f268  1512  00c2d958       constant
0xffff9142f26c  1516  00000000       constant
0xffff9142f270  1520  4117f8c0       constant
0xffff9142f274  1524  00000000       constant
0xffff9142f278  1528  914064c0       constant
0xffff9142f27c  1532  0000ffff       constant
0xffff9142f280  1536  4117e2d0       constant
0xffff9142f284  1540  00000000       constant
0xffff9142f288  1544  00c2d958       constant
0xffff9142f28c  1548  00000000       constant


RelocInfo (size = 59)
0xffff9142ec88  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142ecac  code target (STUB)  (0xffff914064c0)
0xffff9142ed24  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142ed48  code target (STUB)  (0xffff914064c0)
0xffff9142ed88  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142edac  code target (STUB)  (0xffff914064c0)
0xffff9142edec  external reference (isolate)  (0x4117e2d0)
0xffff9142edf0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142ee20  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142ee44  code target (STUB)  (0xffff914064c0)
0xffff9142eef4  external reference (isolate)  (0x4117e2d0)
0xffff9142eef8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142ef90  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142efb4  code target (STUB)  (0xffff914064c0)
0xffff9142f014  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142f038  code target (STUB)  (0xffff914064c0)
0xffff9142f078  external reference (isolate)  (0x4117e2d0)
0xffff9142f07c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142f0ac  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9142f0d0  code target (STUB)  (0xffff914064c0)
0xffff9142f1a0  external reference (isolate)  (0x4117e2d0)
0xffff9142f1a4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9142f1d8  constant pool (size 184)


kind = STUB
major_key = FastCloneShallowObjectStub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 493)
0xffff9142f300     0  ldur x4, [x3, #47]
0xffff9142f304     4  tbnz w2, #0, #+0xb0 (addr 0xffff9142f3b4)
0xffff9142f308     8  asr x6, x2, #32
0xffff9142f30c    12  add x5, x4, #0x17 (23)
0xffff9142f310    16  ldr x7, [x5, w6, sxtw #3]
0xffff9142f314    20  ldr x4, pc+340 (addr 0x0000ffff9142f468)    ;; object: 0x49b04241 <undefined>
0xffff9142f318    24  cmp x7, x4
0xffff9142f31c    28  b.eq #+0x94 (addr 0xffff9142f3b0)
0xffff9142f320    32  ldur x4, [x7, #7]
0xffff9142f324    36  ldur x5, [x4, #-1]
0xffff9142f328    40  ldrb w6, [x5, #7]
0xffff9142f32c    44  cmp w6, #0x7 (7)
0xffff9142f330    48  b.ne #+0x80 (addr 0xffff9142f3b0)
0xffff9142f334    52  movz x1, #0xf2c0
0xffff9142f338    56  movk x1, #0x4117, lsl #16
0xffff9142f33c    60  ldp x2, x0, [x1]
0xffff9142f340    64  adds x16, x2, #0x48 (72)
0xffff9142f344    68  ccmp x16, x0, #nzCv, lo
0xffff9142f348    72  b.hi #+0xb4 (addr 0xffff9142f3fc)
0xffff9142f34c    76  str x16, [x1]
0xffff9142f350    80  orr x2, x2, #0x1
0xffff9142f354    84  stur x5, [x2, #-1]
0xffff9142f358    88  ldur x0, [x4, #7]
0xffff9142f35c    92  stur x0, [x2, #7]
0xffff9142f360    96  ldur x0, [x4, #15]
0xffff9142f364   100  stur x0, [x2, #15]
0xffff9142f368   104  ldur x0, [x4, #23]
0xffff9142f36c   108  stur x0, [x2, #23]
0xffff9142f370   112  ldur x0, [x4, #31]
0xffff9142f374   116  stur x0, [x2, #31]
0xffff9142f378   120  ldur x0, [x4, #39]
0xffff9142f37c   124  stur x0, [x2, #39]
0xffff9142f380   128  ldur x0, [x4, #47]
0xffff9142f384   132  stur x0, [x2, #47]
0xffff9142f388   136  add x0, x2, #0x38 (56)
0xffff9142f38c   140  ldr x1, pc+228 (addr 0x0000ffff9142f470)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9142f390   144  stur x1, [x0, #-1]
0xffff9142f394   148  stur x7, [x0, #7]
0xffff9142f398   152  ldur w0, [x7, #35]
0xffff9142f39c   156  add w0, w0, #0x1 (1)
0xffff9142f3a0   160  lsl x0, x0, #32
0xffff9142f3a4   164  stur x0, [x7, #31]
0xffff9142f3a8   168  mov x0, x2
0xffff9142f3ac   172  ret
0xffff9142f3b0   176  b #+0xe0 (addr 0xffff9142f490)
0xffff9142f3b4   180  sub csp, jssp, #0x10 (16)
0xffff9142f3b8   184  stp fp, lr, [jssp, #-16]!
0xffff9142f3bc   188  movz fp, #0xa00000000
0xffff9142f3c0   192  sub csp, jssp, #0x8 (8)
0xffff9142f3c4   196  str fp, [jssp, #-8]!
0xffff9142f3c8   200  add fp, jssp, #0x8 (8)
0xffff9142f3cc   204  ldur x16, [x2, #-1]
0xffff9142f3d0   208  ldr x17, [x26, #120]
0xffff9142f3d4   212  cmp x16, x17
0xffff9142f3d8   216  b.ne #+0xc8 (addr 0xffff9142f4a0)
0xffff9142f3dc   220  ldur d29, [x2, #7]
0xffff9142f3e0   224  fcvtzs w6, d29
0xffff9142f3e4   228  scvtf d0, w6
0xffff9142f3e8   232  fcmp d29, d0
0xffff9142f3ec   236  b.ne #+0xb4 (addr 0xffff9142f4a0)
0xffff9142f3f0   240  ldr lr, [jssp, #16]
0xffff9142f3f4   244  ldp xzr, fp, [jssp], #24
0xffff9142f3f8   248  b #-0xec (addr 0xffff9142f30c)
0xffff9142f3fc   252  sub csp, jssp, #0x10 (16)
0xffff9142f400   256  stp fp, lr, [jssp, #-16]!
0xffff9142f404   260  movz fp, #0xa00000000
0xffff9142f408   264  sub csp, jssp, #0x8 (8)
0xffff9142f40c   268  str fp, [jssp, #-8]!
0xffff9142f410   272  add fp, jssp, #0x8 (8)
0xffff9142f414   276  movz x2, #0x0
0xffff9142f418   280  mov x16, lr
0xffff9142f41c   284  ldr x17, pc+92 (addr 0x0000ffff9142f478)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9142f420   288  blr x17
0xffff9142f424   292  movz x0, #0x4800000000
0xffff9142f428   296  movz x10, #0x0
0xffff9142f42c   300  sub csp, jssp, #0x10 (16)
0xffff9142f430   304  stp x10, x0, [jssp, #-16]!
0xffff9142f434   308  movz x0, #0x2
0xffff9142f438   312  movz x1, #0x5b88
0xffff9142f43c   316  movk x1, #0xe2, lsl #16
0xffff9142f440   320  ldr x16, pc+64 (addr 0x0000ffff9142f480)    ;; code: STUB, CEntryStub, minor: 5
0xffff9142f444   324  blr x16
0xffff9142f448   328  str x0, [jssp, #16]
0xffff9142f44c   332  ldr x16, pc+60 (addr 0x0000ffff9142f488)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9142f450   336  blr x16
0xffff9142f454   340  ldr lr, [jssp, #16]
0xffff9142f458   344  ldp xzr, fp, [jssp], #24
0xffff9142f45c   348  b #-0x108 (addr 0xffff9142f354)
0xffff9142f460   352  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff9142f464   356  d63f03e0       constant
0xffff9142f468   360  49b04241       constant
0xffff9142f46c   364  00000000       constant
0xffff9142f470   368  36405d81       constant
0xffff9142f474   372  00000000       constant
0xffff9142f478   376  91406820       constant
0xffff9142f47c   380  0000ffff       constant
0xffff9142f480   384  91406260       constant
0xffff9142f484   388  0000ffff       constant
0xffff9142f488   392  914068e0       constant
0xffff9142f48c   396  0000ffff       constant
0xffff9142f490   400  movz x16, #0x0
0xffff9142f494   404  sub csp, jssp, #0x10 (16)
0xffff9142f498   408  stp fp, lr, [jssp, #-16]!
0xffff9142f49c   412  bl #+0xc (addr 0xffff9142f4a8)
0xffff9142f4a0   416  movz x16, #0x8
0xffff9142f4a4   420  bl #+0x14 (addr 0xffff9142f4b8)
0xffff9142f4a8   424  movz x17, #0xa00000000
0xffff9142f4ac   428  sub csp, jssp, #0x10 (16)
0xffff9142f4b0   432  stp x17, cp, [jssp, #-16]!
0xffff9142f4b4   436  add fp, jssp, #0x10 (16)
0xffff9142f4b8   440  ldr x17, pc+24 (addr 0x0000ffff9142f4d0)    ;; lazy deoptimization bailout 0
0xffff9142f4bc   444  add x17, x17, x16
0xffff9142f4c0   448  br x17
0xffff9142f4c4   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9142f4c8   456  d63f03e0       constant
0xffff9142f4cc   460  d503201f       constant
0xffff9142f4d0   464  91206000       constant
0xffff9142f4d4   468  0000ffff       constant


Safepoints (size = 21)
0xffff9142f448   328  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff9142f314  embedded object  (0x49b04241 <undefined>)
0xffff9142f38c  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9142f41c  code target (STUB)  (0xffff91406820)
0xffff9142f440  code target (STUB)  (0xffff91406260)
0xffff9142f44c  code target (STUB)  (0xffff914068e0)
0xffff9142f460  constant pool (size 48)
0xffff9142f4b8  runtime entry
0xffff9142f4c4  constant pool (size 20)


kind = STORE_IC
major_key = VectorStoreICTrampolineStub
ic_state = GENERIC
extra_ic_state = STRICT
name = VectorStoreICTrampolineStub
compiler = unknown
Instructions (size = 440)
0xffff9142f560     0  ldur x3, [fp, #-16]
0xffff9142f564     4  ldur x3, [x3, #31]
0xffff9142f568     8  ldur x3, [x3, #87]
0xffff9142f56c    12  add x5, x3, x4, asr #29
0xffff9142f570    16  ldur x5, [x5, #15]
0xffff9142f574    20  tbz w1, #0, #+0x174 (addr 0xffff9142f6e8)
0xffff9142f578    24  ldur x6, [x1, #-1]
0xffff9142f57c    28  ldur x7, [x5, #7]
0xffff9142f580    32  cmp x7, x6
0xffff9142f584    36  b.ne #+0x14 (addr 0xffff9142f598)
0xffff9142f588    40  add x5, x3, x4, asr #29
0xffff9142f58c    44  ldur x5, [x5, #23]
0xffff9142f590    48  add x5, x5, #0x5f (95)
0xffff9142f594    52  br x5
0xffff9142f598    56  ldur x7, [x5, #-1]
0xffff9142f59c    60  ldr x16, [x26, #224]
0xffff9142f5a0    64  cmp x7, x16
0xffff9142f5a4    68  b.ne #+0x5c (addr 0xffff9142f600)
0xffff9142f5a8    72  ldur x7, [x5, #15]
0xffff9142f5ac    76  ldur x7, [x7, #7]
0xffff9142f5b0    80  cmp x6, x7
0xffff9142f5b4    84  b.ne #+0x10 (addr 0xffff9142f5c4)
0xffff9142f5b8    88  ldur x5, [x5, #23]
0xffff9142f5bc    92  add x5, x5, #0x5f (95)
0xffff9142f5c0    96  br x5
0xffff9142f5c4   100  ldur x8, [x5, #7]
0xffff9142f5c8   104  add x8, x5, x8, asr #29
0xffff9142f5cc   108  add x8, x8, #0xf (15)
0xffff9142f5d0   112  add x5, x5, #0x1f (31)
0xffff9142f5d4   116  ldr x7, [x5]
0xffff9142f5d8   120  ldur x7, [x7, #7]
0xffff9142f5dc   124  cmp x6, x7
0xffff9142f5e0   128  b.ne #+0x10 (addr 0xffff9142f5f0)
0xffff9142f5e4   132  ldr x5, [x5, #8]
0xffff9142f5e8   136  add x5, x5, #0x5f (95)
0xffff9142f5ec   140  br x5
0xffff9142f5f0   144  add x5, x5, #0x10 (16)
0xffff9142f5f4   148  cmp x5, x8
0xffff9142f5f8   152  b.lt #-0x24 (addr 0xffff9142f5d4)
0xffff9142f5fc   156  b #+0xcc (addr 0xffff9142f6c8)
0xffff9142f600   160  ldr x16, [x26, #2400]
0xffff9142f604   164  cmp x5, x16
0xffff9142f608   168  b.ne #+0xc0 (addr 0xffff9142f6c8)
0xffff9142f60c   172  tbz w1, #0, #+0xbc (addr 0xffff9142f6c8)
0xffff9142f610   176  ldur x5, [x2, #7]
0xffff9142f614   180  ldur x6, [x1, #-1]
0xffff9142f618   184  add x5, x5, x6
0xffff9142f61c   188  movz x16, #0x6902
0xffff9142f620   192  eor x5, x5, x16
0xffff9142f624   196  ubfx x5, x5, #2, #11
0xffff9142f628   200  add x8, x5, x5, lsl #1
0xffff9142f62c   204  ldr x6, pc+204 (addr 0x0000ffff9142f6f8)    ;; external reference (StubCache::primary_->key)
0xffff9142f630   208  add x6, x6, x8, lsl #3
0xffff9142f634   212  ldr x7, [x6]
0xffff9142f638   216  cmp x2, x7
0xffff9142f63c   220  b.ne #+0x34 (addr 0xffff9142f670)
0xffff9142f640   224  ldr x7, [x6, #16]
0xffff9142f644   228  ldur x8, [x1, #-1]
0xffff9142f648   232  cmp x7, x8
0xffff9142f64c   236  b.ne #+0x24 (addr 0xffff9142f670)
0xffff9142f650   240  ldr x6, [x6, #8]
0xffff9142f654   244  ldur w7, [x6, #63]
0xffff9142f658   248  and w7, w7, #0xffffffc7
0xffff9142f65c   252  movz w16, #0x6902
0xffff9142f660   256  cmp w7, w16
0xffff9142f664   260  b.ne #+0xc (addr 0xffff9142f670)
0xffff9142f668   264  add x6, x6, #0x5f (95)
0xffff9142f66c   268  br x6
0xffff9142f670   272  sub x5, x5, x2, lsr #2
0xffff9142f674   276  movz x16, #0x1a40
0xffff9142f678   280  add x5, x5, x16
0xffff9142f67c   284  and x5, x5, #0x1ff
0xffff9142f680   288  add x8, x5, x5, lsl #1
0xffff9142f684   292  ldr x6, pc+124 (addr 0x0000ffff9142f700)    ;; external reference (StubCache::secondary_->key)
0xffff9142f688   296  add x6, x6, x8, lsl #3
0xffff9142f68c   300  ldr x7, [x6]
0xffff9142f690   304  cmp x2, x7
0xffff9142f694   308  b.ne #+0x34 (addr 0xffff9142f6c8)
0xffff9142f698   312  ldr x7, [x6, #16]
0xffff9142f69c   316  ldur x8, [x1, #-1]
0xffff9142f6a0   320  cmp x7, x8
0xffff9142f6a4   324  b.ne #+0x24 (addr 0xffff9142f6c8)
0xffff9142f6a8   328  ldr x6, [x6, #8]
0xffff9142f6ac   332  ldur w7, [x6, #63]
0xffff9142f6b0   336  and w7, w7, #0xffffffc7
0xffff9142f6b4   340  movz w16, #0x6902
0xffff9142f6b8   344  cmp w7, w16
0xffff9142f6bc   348  b.ne #+0xc (addr 0xffff9142f6c8)
0xffff9142f6c0   352  add x6, x6, #0x5f (95)
0xffff9142f6c4   356  br x6
0xffff9142f6c8   360  sub csp, jssp, #0x28 (40)
0xffff9142f6cc   364  stp x4, x0, [jssp, #-32]!
0xffff9142f6d0   368  stp x2, x1, [jssp, #16]
0xffff9142f6d4   372  str x3, [jssp, #-8]!
0xffff9142f6d8   376  movz x0, #0x5
0xffff9142f6dc   380  ldr x1, pc+44 (addr 0x0000ffff9142f708)    ;; external reference (Runtime::StoreIC_Miss)
0xffff9142f6e0   384  ldr x16, pc+48 (addr 0x0000ffff9142f710)    ;; code: STUB, CEntryStub, minor: 4
0xffff9142f6e4   388  br x16
0xffff9142f6e8   392  ldr x6, [x26, #120]
0xffff9142f6ec   396  b #-0x170 (addr 0xffff9142f57c)
0xffff9142f6f0   400  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff9142f6f4   404  d63f03e0       constant
0xffff9142f6f8   408  41199950       constant
0xffff9142f6fc   412  00000000       constant
0xffff9142f700   416  411a5950       constant
0xffff9142f704   420  00000000       constant
0xffff9142f708   424  00c87f60       constant
0xffff9142f70c   428  00000000       constant
0xffff9142f710   432  91406060       constant
0xffff9142f714   436  0000ffff       constant


RelocInfo (size = 19)
0xffff9142f62c  external reference (StubCache::primary_->key)  (0x41199950)
0xffff9142f684  external reference (StubCache::secondary_->key)  (0x411a5950)
0xffff9142f6dc  external reference (Runtime::StoreIC_Miss)  (0xc87f60)
0xffff9142f6e0  code target (STUB)  (0xffff91406060)
0xffff9142f6f0  constant pool (size 40)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 397)
0xffff91430360     0  movz x2, #0xf2c0
0xffff91430364     4  movk x2, #0x4117, lsl #16
0xffff91430368     8  ldp x3, x0, [x2]
0xffff9143036c    12  adds x16, x3, #0x78 (120)
0xffff91430370    16  ccmp x16, x0, #nzCv, lo
0xffff91430374    20  b.hi #+0x84 (addr 0xffff914303f8)
0xffff91430378    24  str x16, [x2]
0xffff9143037c    28  orr x3, x3, #0x1
0xffff91430380    32  ldr x0, pc+232 (addr 0x0000ffff91430468)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91430384    36  stur x0, [x3, #-1]
0xffff91430388    40  movz x0, #0xd00000000
0xffff9143038c    44  stur x0, [x3, #7]
0xffff91430390    48  stur x1, [x3, #15]
0xffff91430394    52  stur cp, [x3, #23]
0xffff91430398    56  ldr x0, pc+216 (addr 0x0000ffff91430470)    ;; object: 0x49b04519 <the hole>
0xffff9143039c    60  stur x0, [x3, #31]
0xffff914303a0    64  ldur x0, [cp, #39]
0xffff914303a4    68  stur x0, [x3, #39]
0xffff914303a8    72  ldr x0, pc+208 (addr 0x0000ffff91430478)    ;; object: 0x49b04241 <undefined>
0xffff914303ac    76  stur x0, [x3, #47]
0xffff914303b0    80  ldr x0, pc+208 (addr 0x0000ffff91430480)    ;; object: 0x49b04241 <undefined>
0xffff914303b4    84  stur x0, [x3, #55]
0xffff914303b8    88  ldr x0, pc+208 (addr 0x0000ffff91430488)    ;; object: 0x49b04241 <undefined>
0xffff914303bc    92  stur x0, [x3, #63]
0xffff914303c0    96  ldr x0, pc+208 (addr 0x0000ffff91430490)    ;; object: 0x49b04241 <undefined>
0xffff914303c4   100  stur x0, [x3, #71]
0xffff914303c8   104  ldr x0, pc+208 (addr 0x0000ffff91430498)    ;; object: 0x49b04241 <undefined>
0xffff914303cc   108  stur x0, [x3, #79]
0xffff914303d0   112  ldr x0, pc+208 (addr 0x0000ffff914304a0)    ;; object: 0x49b04241 <undefined>
0xffff914303d4   116  stur x0, [x3, #87]
0xffff914303d8   120  ldr x0, pc+208 (addr 0x0000ffff914304a8)    ;; object: 0x49b04241 <undefined>
0xffff914303dc   124  stur x0, [x3, #95]
0xffff914303e0   128  ldr x0, pc+208 (addr 0x0000ffff914304b0)    ;; object: 0x49b04241 <undefined>
0xffff914303e4   132  stur x0, [x3, #103]
0xffff914303e8   136  ldr x0, pc+208 (addr 0x0000ffff914304b8)    ;; object: 0x49b04241 <undefined>
0xffff914303ec   140  stur x0, [x3, #111]
0xffff914303f0   144  mov x0, x3
0xffff914303f4   148  ret
0xffff914303f8   152  sub csp, jssp, #0x10 (16)
0xffff914303fc   156  stp fp, lr, [jssp, #-16]!
0xffff91430400   160  movz fp, #0xa00000000
0xffff91430404   164  sub csp, jssp, #0x8 (8)
0xffff91430408   168  str fp, [jssp, #-8]!
0xffff9143040c   172  add fp, jssp, #0x8 (8)
0xffff91430410   176  movz x3, #0x0
0xffff91430414   180  mov x16, lr
0xffff91430418   184  ldr x17, pc+168 (addr 0x0000ffff914304c0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9143041c   188  blr x17
0xffff91430420   192  movz x0, #0x7800000000
0xffff91430424   196  movz x10, #0x0
0xffff91430428   200  sub csp, jssp, #0x10 (16)
0xffff9143042c   204  stp x10, x0, [jssp, #-16]!
0xffff91430430   208  movz x0, #0x2
0xffff91430434   212  movz x1, #0x5b88
0xffff91430438   216  movk x1, #0xe2, lsl #16
0xffff9143043c   220  ldr x16, pc+140 (addr 0x0000ffff914304c8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91430440   224  blr x16
0xffff91430444   228  str x0, [jssp, #24]
0xffff91430448   232  ldr x16, pc+136 (addr 0x0000ffff914304d0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9143044c   236  blr x16
0xffff91430450   240  ldr lr, [jssp, #16]
0xffff91430454   244  ldp xzr, fp, [jssp], #24
0xffff91430458   248  b #-0xd8 (addr 0xffff91430380)
0xffff9143045c   252  580003df       constant pool begin (num_const = 30)    ;; constant pool
0xffff91430460   256  d63f03e0       constant
0xffff91430464   260  d503201f       constant
0xffff91430468   264  36406149       constant
0xffff9143046c   268  00000000       constant
0xffff91430470   272  49b04519       constant
0xffff91430474   276  00000000       constant
0xffff91430478   280  49b04241       constant
0xffff9143047c   284  00000000       constant
0xffff91430480   288  49b04241       constant
0xffff91430484   292  00000000       constant
0xffff91430488   296  49b04241       constant
0xffff9143048c   300  00000000       constant
0xffff91430490   304  49b04241       constant
0xffff91430494   308  00000000       constant
0xffff91430498   312  49b04241       constant
0xffff9143049c   316  00000000       constant
0xffff914304a0   320  49b04241       constant
0xffff914304a4   324  00000000       constant
0xffff914304a8   328  49b04241       constant
0xffff914304ac   332  00000000       constant
0xffff914304b0   336  49b04241       constant
0xffff914304b4   340  00000000       constant
0xffff914304b8   344  49b04241       constant
0xffff914304bc   348  00000000       constant
0xffff914304c0   352  91406820       constant
0xffff914304c4   356  0000ffff       constant
0xffff914304c8   360  91406260       constant
0xffff914304cc   364  0000ffff       constant
0xffff914304d0   368  914068e0       constant
0xffff914304d4   372  0000ffff       constant


Safepoints (size = 21)
0xffff91430444   228  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 20)
0xffff91430380  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91430398  embedded object  (0x49b04519 <the hole>)
0xffff914303a8  embedded object  (0x49b04241 <undefined>)
0xffff914303b0  embedded object  (0x49b04241 <undefined>)
0xffff914303b8  embedded object  (0x49b04241 <undefined>)
0xffff914303c0  embedded object  (0x49b04241 <undefined>)
0xffff914303c8  embedded object  (0x49b04241 <undefined>)
0xffff914303d0  embedded object  (0x49b04241 <undefined>)
0xffff914303d8  embedded object  (0x49b04241 <undefined>)
0xffff914303e0  embedded object  (0x49b04241 <undefined>)
0xffff914303e8  embedded object  (0x49b04241 <undefined>)
0xffff91430418  code target (STUB)  (0xffff91406820)
0xffff9143043c  code target (STUB)  (0xffff91406260)
0xffff91430448  code target (STUB)  (0xffff914068e0)
0xffff9143045c  constant pool (size 124)


kind = STUB
major_key = FastNewClosureStub
name = FastNewClosureStub
compiler = crankshaft
Instructions (size = 773)
0xffff91430560     0  movz x1, #0xf2c0
0xffff91430564     4  movk x1, #0x4117, lsl #16
0xffff91430568     8  ldp x3, x0, [x1]
0xffff9143056c    12  adds x16, x3, #0x48 (72)
0xffff91430570    16  ccmp x16, x0, #nzCv, lo
0xffff91430574    20  b.hi #+0x1bc (addr 0xffff91430730)
0xffff91430578    24  str x16, [x1]
0xffff9143057c    28  orr x3, x3, #0x1
0xffff91430580    32  ldur x0, [cp, #39]
0xffff91430584    36  movz x16, #0x297
0xffff91430588    40  ldr x1, [x0, x16]
0xffff9143058c    44  stur x1, [x3, #-1]
0xffff91430590    48  ldr x1, pc+528 (addr 0x0000ffff914307a0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91430594    52  stur x1, [x3, #7]
0xffff91430598    56  ldr x1, pc+528 (addr 0x0000ffff914307a8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9143059c    60  stur x1, [x3, #15]
0xffff914305a0    64  ldr x1, pc+528 (addr 0x0000ffff914307b0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914305a4    68  stur x1, [x3, #47]
0xffff914305a8    72  ldr x1, pc+528 (addr 0x0000ffff914307b8)    ;; object: 0x49b04519 <the hole>
0xffff914305ac    76  stur x1, [x3, #23]
0xffff914305b0    80  stur x2, [x3, #31]
0xffff914305b4    84  stur cp, [x3, #39]
0xffff914305b8    88  ldur x1, [x2, #23]
0xffff914305bc    92  movz x4, #0x0
0xffff914305c0    96  cmp x1, x4
0xffff914305c4   100  b.eq #+0x150 (addr 0xffff91430714)
0xffff914305c8   104  ldur w4, [x1, #11]
0xffff914305cc   108  subs w4, w4, #0x4 (4)
0xffff914305d0   112  b.vs #+0x230 (addr 0xffff91430800)
0xffff914305d4   116  mov x5, x4
0xffff914305d8   120  cmp w5, #0x1 (1)
0xffff914305dc   124  b.lt #+0xb4 (addr 0xffff91430690)
0xffff914305e0   128  add x4, x1, #0xf (15)
0xffff914305e4   132  ldr x6, [x4, w5, sxtw #3]
0xffff914305e8   136  ldur x4, [x6, #7]
0xffff914305ec   140  add x6, x1, #0x27 (39)
0xffff914305f0   144  ldr x7, [x6, w5, sxtw #3]
0xffff914305f4   148  add x6, x1, #0x17 (23)
0xffff914305f8   152  ldr x8, [x6, w5, sxtw #3]
0xffff914305fc   156  ldur x6, [x8, #7]
0xffff91430600   160  cmp x0, x4
0xffff91430604   164  b.ne #+0x1c (addr 0xffff91430620)
0xffff91430608   168  mov x4, #0xffffffff00000000
0xffff9143060c   172  cmp x7, x4
0xffff91430610   176  b.ne #+0x10 (addr 0xffff91430620)
0xffff91430614   180  movz x4, #0x0
0xffff91430618   184  cmp x6, x4
0xffff9143061c   188  b.ne #+0xc (addr 0xffff91430628)
0xffff91430620   192  sub w5, w5, #0x4 (4)
0xffff91430624   196  b #-0x4c (addr 0xffff914305d8)
0xffff91430628   200  add x4, x1, #0x1f (31)
0xffff9143062c   204  ldr x7, [x4, w5, sxtw #3]
0xffff91430630   208  ldur x7, [x7, #7]
0xffff91430634   212  movz x4, #0x0
0xffff91430638   216  cmp x7, x4
0xffff9143063c   220  b.eq #+0x50 (addr 0xffff9143068c)
0xffff91430640   224  add x4, x6, #0x5f (95)
0xffff91430644   228  stur x4, [x3, #55]
0xffff91430648   232  stur x7, [x3, #47]
0xffff9143064c   236  movz x16, #0x557
0xffff91430650   240  ldr x4, [x0, x16]
0xffff91430654   244  stur x4, [x3, #63]
0xffff91430658   248  mov x4, x3
0xffff9143065c   252  movz x16, #0x557
0xffff91430660   256  str x4, [x0, x16]
0xffff91430664   260  add x6, x0, #0x557 (1367)
0xffff91430668   264  and x4, x0, #0xfffffffffff00000
0xffff9143066c   268  ldr x4, [x4, #8]
0xffff91430670   272  tbz w4, #2, #+0x18 (addr 0xffff91430688)
0xffff91430674   276  sub csp, jssp, #0x8 (8)
0xffff91430678   280  str lr, [jssp, #-8]!
0xffff9143067c   284  ldr x16, pc+324 (addr 0x0000ffff914307c0)    ;; code: STUB, RecordWriteStub, minor: 71808
0xffff91430680   288  blr x16
0xffff91430684   292  ldr lr, [jssp], #8
0xffff91430688   296  b #+0x8 (addr 0xffff91430690)
0xffff9143068c   300  b #+0x184 (addr 0xffff91430810)
0xffff91430690   304  cmp w5, #0x1 (1)
0xffff91430694   308  b.ge #+0x94 (addr 0xffff91430728)
0xffff91430698   312  ldur x1, [x1, #15]
0xffff9143069c   316  ldur x1, [x1, #7]
0xffff914306a0   320  movz x4, #0x0
0xffff914306a4   324  cmp x1, x4
0xffff914306a8   328  b.eq #+0x54 (addr 0xffff914306fc)
0xffff914306ac   332  add x1, x1, #0x5f (95)
0xffff914306b0   336  stur x1, [x3, #55]
0xffff914306b4   340  ldr x1, pc+276 (addr 0x0000ffff914307c8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914306b8   344  stur x1, [x3, #47]
0xffff914306bc   348  movz x16, #0x557
0xffff914306c0   352  ldr x1, [x0, x16]
0xffff914306c4   356  stur x1, [x3, #63]
0xffff914306c8   360  mov x1, x3
0xffff914306cc   364  movz x16, #0x557
0xffff914306d0   368  str x1, [x0, x16]
0xffff914306d4   372  add x2, x0, #0x557 (1367)
0xffff914306d8   376  and x1, x0, #0xfffffffffff00000
0xffff914306dc   380  ldr x1, [x1, #8]
0xffff914306e0   384  tbz w1, #2, #+0x18 (addr 0xffff914306f8)
0xffff914306e4   388  sub csp, jssp, #0x8 (8)
0xffff914306e8   392  str lr, [jssp, #-8]!
0xffff914306ec   396  ldr x16, pc+228 (addr 0x0000ffff914307d0)    ;; code: STUB, RecordWriteStub, minor: 67616
0xffff914306f0   400  blr x16
0xffff914306f4   404  ldr lr, [jssp], #8
0xffff914306f8   408  b #+0x30 (addr 0xffff91430728)
0xffff914306fc   412  ldr x0, pc+220 (addr 0x0000ffff914307d8)    ;; object: 0x49b04241 <undefined>
0xffff91430700   416  stur x0, [x3, #63]
0xffff91430704   420  ldur x0, [x2, #15]
0xffff91430708   424  add x0, x0, #0x5f (95)
0xffff9143070c   428  stur x0, [x3, #55]
0xffff91430710   432  b #+0x18 (addr 0xffff91430728)
0xffff91430714   436  ldr x0, pc+204 (addr 0x0000ffff914307e0)    ;; object: 0x49b04241 <undefined>
0xffff91430718   440  stur x0, [x3, #63]
0xffff9143071c   444  ldur x0, [x2, #15]
0xffff91430720   448  add x0, x0, #0x5f (95)
0xffff91430724   452  stur x0, [x3, #55]
0xffff91430728   456  mov x0, x3
0xffff9143072c   460  ret
0xffff91430730   464  sub csp, jssp, #0x10 (16)
0xffff91430734   468  stp fp, lr, [jssp, #-16]!
0xffff91430738   472  movz fp, #0xa00000000
0xffff9143073c   476  sub csp, jssp, #0x8 (8)
0xffff91430740   480  str fp, [jssp, #-8]!
0xffff91430744   484  add fp, jssp, #0x8 (8)
0xffff91430748   488  movz x3, #0x0
0xffff9143074c   492  mov x16, lr
0xffff91430750   496  ldr x17, pc+152 (addr 0x0000ffff914307e8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91430754   500  blr x17
0xffff91430758   504  movz x0, #0x4800000000
0xffff9143075c   508  movz x10, #0x0
0xffff91430760   512  sub csp, jssp, #0x10 (16)
0xffff91430764   516  stp x10, x0, [jssp, #-16]!
0xffff91430768   520  movz x0, #0x2
0xffff9143076c   524  movz x1, #0x5b88
0xffff91430770   528  movk x1, #0xe2, lsl #16
0xffff91430774   532  ldr x16, pc+124 (addr 0x0000ffff914307f0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91430778   536  blr x16
0xffff9143077c   540  str x0, [jssp, #24]
0xffff91430780   544  ldr x16, pc+120 (addr 0x0000ffff914307f8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91430784   548  blr x16
0xffff91430788   552  ldr lr, [jssp, #16]
0xffff9143078c   556  ldp xzr, fp, [jssp], #24
0xffff91430790   560  b #-0x210 (addr 0xffff91430580)
0xffff91430794   564  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff91430798   568  d63f03e0       constant
0xffff9143079c   572  d503201f       constant
0xffff914307a0   576  49b04201       constant
0xffff914307a4   580  00000000       constant
0xffff914307a8   584  49b04201       constant
0xffff914307ac   588  00000000       constant
0xffff914307b0   592  49b04201       constant
0xffff914307b4   596  00000000       constant
0xffff914307b8   600  49b04519       constant
0xffff914307bc   604  00000000       constant
0xffff914307c0   608  9142d2c0       constant
0xffff914307c4   612  0000ffff       constant
0xffff914307c8   616  49b04201       constant
0xffff914307cc   620  00000000       constant
0xffff914307d0   624  9142daa0       constant
0xffff914307d4   628  0000ffff       constant
0xffff914307d8   632  49b04241       constant
0xffff914307dc   636  00000000       constant
0xffff914307e0   640  49b04241       constant
0xffff914307e4   644  00000000       constant
0xffff914307e8   648  91406820       constant
0xffff914307ec   652  0000ffff       constant
0xffff914307f0   656  91406260       constant
0xffff914307f4   660  0000ffff       constant
0xffff914307f8   664  914068e0       constant
0xffff914307fc   668  0000ffff       constant
0xffff91430800   672  movz x16, #0x0
0xffff91430804   676  sub csp, jssp, #0x10 (16)
0xffff91430808   680  stp fp, lr, [jssp, #-16]!
0xffff9143080c   684  bl #+0x14 (addr 0xffff91430820)
0xffff91430810   688  movz x16, #0x8
0xffff91430814   692  sub csp, jssp, #0x10 (16)
0xffff91430818   696  stp fp, lr, [jssp, #-16]!
0xffff9143081c   700  bl #+0x4 (addr 0xffff91430820)
0xffff91430820   704  movz x17, #0xa00000000
0xffff91430824   708  sub csp, jssp, #0x10 (16)
0xffff91430828   712  stp x17, cp, [jssp, #-16]!
0xffff9143082c   716  add fp, jssp, #0x10 (16)
0xffff91430830   720  ldr x17, pc+24 (addr 0x0000ffff91430848)    ;; lazy deoptimization bailout 0
0xffff91430834   724  add x17, x17, x16
0xffff91430838   728  br x17
0xffff9143083c   732  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91430840   736  d63f03e0       constant
0xffff91430844   740  d503201f       constant
0xffff91430848   744  91206000       constant
0xffff9143084c   748  0000ffff       constant


Safepoints (size = 21)
0xffff9143077c   540  000 | x2 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff91430590  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91430598  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914305a0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914305a8  embedded object  (0x49b04519 <the hole>)
0xffff9143067c  code target (STUB)  (0xffff9142d2c0)
0xffff914306b4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914306ec  code target (STUB)  (0xffff9142daa0)
0xffff914306fc  embedded object  (0x49b04241 <undefined>)
0xffff91430714  embedded object  (0x49b04241 <undefined>)
0xffff91430750  code target (STUB)  (0xffff91406820)
0xffff91430774  code target (STUB)  (0xffff91406260)
0xffff91430780  code target (STUB)  (0xffff914068e0)
0xffff91430794  constant pool (size 108)
0xffff91430830  runtime entry
0xffff9143083c  constant pool (size 20)


kind = LOAD_IC
major_key = LoadICTrampolineStub
ic_state = GENERIC
extra_ic_state = 1
name = LoadICTrampolineStub
compiler = unknown
Instructions (size = 440)
0xffff914308e0     0  ldur x3, [fp, #-16]
0xffff914308e4     4  ldur x3, [x3, #31]
0xffff914308e8     8  ldur x3, [x3, #87]
0xffff914308ec    12  add x4, x3, x0, asr #29
0xffff914308f0    16  ldur x4, [x4, #15]
0xffff914308f4    20  tbz w1, #0, #+0x170 (addr 0xffff91430a64)
0xffff914308f8    24  ldur x5, [x1, #-1]
0xffff914308fc    28  ldur x6, [x4, #7]
0xffff91430900    32  cmp x6, x5
0xffff91430904    36  b.ne #+0x14 (addr 0xffff91430918)
0xffff91430908    40  add x4, x3, x0, asr #29
0xffff9143090c    44  ldur x4, [x4, #23]
0xffff91430910    48  add x4, x4, #0x5f (95)
0xffff91430914    52  br x4
0xffff91430918    56  ldur x6, [x4, #-1]
0xffff9143091c    60  ldr x16, [x26, #224]
0xffff91430920    64  cmp x6, x16
0xffff91430924    68  b.ne #+0x5c (addr 0xffff91430980)
0xffff91430928    72  ldur x6, [x4, #15]
0xffff9143092c    76  ldur x6, [x6, #7]
0xffff91430930    80  cmp x5, x6
0xffff91430934    84  b.ne #+0x10 (addr 0xffff91430944)
0xffff91430938    88  ldur x4, [x4, #23]
0xffff9143093c    92  add x4, x4, #0x5f (95)
0xffff91430940    96  br x4
0xffff91430944   100  ldur x7, [x4, #7]
0xffff91430948   104  add x7, x4, x7, asr #29
0xffff9143094c   108  add x7, x7, #0xf (15)
0xffff91430950   112  add x4, x4, #0x1f (31)
0xffff91430954   116  ldr x6, [x4]
0xffff91430958   120  ldur x6, [x6, #7]
0xffff9143095c   124  cmp x5, x6
0xffff91430960   128  b.ne #+0x10 (addr 0xffff91430970)
0xffff91430964   132  ldr x4, [x4, #8]
0xffff91430968   136  add x4, x4, #0x5f (95)
0xffff9143096c   140  br x4
0xffff91430970   144  add x4, x4, #0x10 (16)
0xffff91430974   148  cmp x4, x7
0xffff91430978   152  b.lt #-0x24 (addr 0xffff91430954)
0xffff9143097c   156  b #+0xcc (addr 0xffff91430a48)
0xffff91430980   160  ldr x16, [x26, #2400]
0xffff91430984   164  cmp x4, x16
0xffff91430988   168  b.ne #+0xc0 (addr 0xffff91430a48)
0xffff9143098c   172  tbz w1, #0, #+0xbc (addr 0xffff91430a48)
0xffff91430990   176  ldur x4, [x2, #7]
0xffff91430994   180  ldur x5, [x1, #-1]
0xffff91430998   184  add x4, x4, x5
0xffff9143099c   188  movz x16, #0x5102
0xffff914309a0   192  eor x4, x4, x16
0xffff914309a4   196  ubfx x4, x4, #2, #11
0xffff914309a8   200  add x7, x4, x4, lsl #1
0xffff914309ac   204  ldr x5, pc+204 (addr 0x0000ffff91430a78)    ;; external reference (StubCache::primary_->key)
0xffff914309b0   208  add x5, x5, x7, lsl #3
0xffff914309b4   212  ldr x6, [x5]
0xffff914309b8   216  cmp x2, x6
0xffff914309bc   220  b.ne #+0x34 (addr 0xffff914309f0)
0xffff914309c0   224  ldr x6, [x5, #16]
0xffff914309c4   228  ldur x7, [x1, #-1]
0xffff914309c8   232  cmp x6, x7
0xffff914309cc   236  b.ne #+0x24 (addr 0xffff914309f0)
0xffff914309d0   240  ldr x5, [x5, #8]
0xffff914309d4   244  ldur w6, [x5, #63]
0xffff914309d8   248  and w6, w6, #0xffffffc7
0xffff914309dc   252  movz w16, #0x5102
0xffff914309e0   256  cmp w6, w16
0xffff914309e4   260  b.ne #+0xc (addr 0xffff914309f0)
0xffff914309e8   264  add x5, x5, #0x5f (95)
0xffff914309ec   268  br x5
0xffff914309f0   272  sub x4, x4, x2, lsr #2
0xffff914309f4   276  movz x16, #0x1440
0xffff914309f8   280  add x4, x4, x16
0xffff914309fc   284  and x4, x4, #0x1ff
0xffff91430a00   288  add x7, x4, x4, lsl #1
0xffff91430a04   292  ldr x5, pc+124 (addr 0x0000ffff91430a80)    ;; external reference (StubCache::secondary_->key)
0xffff91430a08   296  add x5, x5, x7, lsl #3
0xffff91430a0c   300  ldr x6, [x5]
0xffff91430a10   304  cmp x2, x6
0xffff91430a14   308  b.ne #+0x34 (addr 0xffff91430a48)
0xffff91430a18   312  ldr x6, [x5, #16]
0xffff91430a1c   316  ldur x7, [x1, #-1]
0xffff91430a20   320  cmp x6, x7
0xffff91430a24   324  b.ne #+0x24 (addr 0xffff91430a48)
0xffff91430a28   328  ldr x5, [x5, #8]
0xffff91430a2c   332  ldur w6, [x5, #63]
0xffff91430a30   336  and w6, w6, #0xffffffc7
0xffff91430a34   340  movz w16, #0x5102
0xffff91430a38   344  cmp w6, w16
0xffff91430a3c   348  b.ne #+0xc (addr 0xffff91430a48)
0xffff91430a40   352  add x5, x5, #0x5f (95)
0xffff91430a44   356  br x5
0xffff91430a48   360  sub csp, jssp, #0x20 (32)
0xffff91430a4c   364  stp x3, x0, [jssp, #-32]!
0xffff91430a50   368  stp x2, x1, [jssp, #16]
0xffff91430a54   372  movz x0, #0x4
0xffff91430a58   376  ldr x1, pc+48 (addr 0x0000ffff91430a88)    ;; external reference (Runtime::LoadIC_Miss)
0xffff91430a5c   380  ldr x16, pc+52 (addr 0x0000ffff91430a90)    ;; code: STUB, CEntryStub, minor: 4
0xffff91430a60   384  br x16
0xffff91430a64   388  ldr x5, [x26, #120]
0xffff91430a68   392  b #-0x16c (addr 0xffff914308fc)
0xffff91430a6c   396  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff91430a70   400  d63f03e0       constant
0xffff91430a74   404  d503201f       constant
0xffff91430a78   408  41199950       constant
0xffff91430a7c   412  00000000       constant
0xffff91430a80   416  411a5950       constant
0xffff91430a84   420  00000000       constant
0xffff91430a88   424  00c86e20       constant
0xffff91430a8c   428  00000000       constant
0xffff91430a90   432  91406060       constant
0xffff91430a94   436  0000ffff       constant


RelocInfo (size = 19)
0xffff914309ac  external reference (StubCache::primary_->key)  (0x41199950)
0xffff91430a04  external reference (StubCache::secondary_->key)  (0x411a5950)
0xffff91430a58  external reference (Runtime::LoadIC_Miss)  (0xc86e20)
0xffff91430a5c  code target (STUB)  (0xffff91406060)
0xffff91430a6c  constant pool (size 44)


kind = STUB
major_key = ArrayConstructorStub
name = ArrayConstructorStub_One
compiler = unknown
Instructions (size = 344)
0xffff91430b00     0  ldur cp, [x1, #39]
0xffff91430b04     4  cmp x3, x1
0xffff91430b08     8  b.ne #+0xc8 (addr 0xffff91430bd0)
0xffff91430b0c    12  ldr x16, [x26, #40]
0xffff91430b10    16  cmp x2, x16
0xffff91430b14    20  b.eq #+0xa4 (addr 0xffff91430bb8)
0xffff91430b18    24  ldursw x3, [x2, #11]
0xffff91430b1c    28  and x3, x3, #0x7fff
0xffff91430b20    32  tbnz w3, #0, #+0x20 (addr 0xffff91430b40)
0xffff91430b24    36  ldr x10, [jssp]
0xffff91430b28    40  cbz x10, #+0x18 (addr 0xffff91430b40)
0xffff91430b2c    44  orr x3, x3, #0x1
0xffff91430b30    48  ldur x11, [x2, #7]
0xffff91430b34    52  movz x16, #0x100000000
0xffff91430b38    56  add x11, x11, x16
0xffff91430b3c    60  stur x11, [x2, #7]
0xffff91430b40    64  cbnz x3, #+0xc (addr 0xffff91430b4c)
0xffff91430b44    68  ldr x16, pc+180 (addr 0x0000ffff91430bf8)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 0
0xffff91430b48    72  br x16
0xffff91430b4c    76  cmp x3, #0x1 (1)
0xffff91430b50    80  b.ne #+0xc (addr 0xffff91430b5c)
0xffff91430b54    84  ldr x16, pc+172 (addr 0x0000ffff91430c00)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 1
0xffff91430b58    88  br x16
0xffff91430b5c    92  cmp x3, #0x4 (4)
0xffff91430b60    96  b.ne #+0xc (addr 0xffff91430b6c)
0xffff91430b64   100  ldr x16, pc+164 (addr 0x0000ffff91430c08)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 4
0xffff91430b68   104  br x16
0xffff91430b6c   108  cmp x3, #0x5 (5)
0xffff91430b70   112  b.ne #+0xc (addr 0xffff91430b7c)
0xffff91430b74   116  ldr x16, pc+156 (addr 0x0000ffff91430c10)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 5
0xffff91430b78   120  br x16
0xffff91430b7c   124  cmp x3, #0x2 (2)
0xffff91430b80   128  b.ne #+0xc (addr 0xffff91430b8c)
0xffff91430b84   132  ldr x16, pc+148 (addr 0x0000ffff91430c18)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 2
0xffff91430b88   136  br x16
0xffff91430b8c   140  cmp x3, #0x3 (3)
0xffff91430b90   144  b.ne #+0xc (addr 0xffff91430b9c)
0xffff91430b94   148  ldr x16, pc+140 (addr 0x0000ffff91430c20)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 3
0xffff91430b98   152  br x16
0xffff91430b9c   156  movz x0, #0x9f00000000
0xffff91430ba0   160  sub csp, jssp, #0x8 (8)
0xffff91430ba4   164  str x0, [jssp, #-8]!
0xffff91430ba8   168  movz x0, #0x1
0xffff91430bac   172  ldr x1, pc+124 (addr 0x0000ffff91430c28)    ;; external reference (Runtime::Abort)
0xffff91430bb0   176  ldr x16, pc+128 (addr 0x0000ffff91430c30)    ;; code: STUB, CEntryStub, minor: 4
0xffff91430bb4   180  blr x16
0xffff91430bb8   184  ldr x10, [jssp]
0xffff91430bbc   188  cbz x10, #+0xc (addr 0xffff91430bc8)
0xffff91430bc0   192  ldr x16, pc+120 (addr 0x0000ffff91430c38)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 257
0xffff91430bc4   196  br x16
0xffff91430bc8   200  ldr x16, pc+120 (addr 0x0000ffff91430c40)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 256
0xffff91430bcc   204  br x16
0xffff91430bd0   208  str x1, [jssp, #8]
0xffff91430bd4   212  movz x0, #0x4
0xffff91430bd8   216  sub csp, jssp, #0x10 (16)
0xffff91430bdc   220  stp x2, x3, [jssp, #-16]!
0xffff91430be0   224  ldr x1, pc+104 (addr 0x0000ffff91430c48)    ;; external reference (Runtime::NewArray)
0xffff91430be4   228  ldr x16, pc+108 (addr 0x0000ffff91430c50)    ;; code: STUB, CEntryStub, minor: 4
0xffff91430be8   232  br x16
0xffff91430bec   236  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff91430bf0   240  d63f03e0       constant
0xffff91430bf4   244  d503201f       constant
0xffff91430bf8   248  914082a0       constant
0xffff91430bfc   252  0000ffff       constant
0xffff91430c00   256  91408840       constant
0xffff91430c04   260  0000ffff       constant
0xffff91430c08   264  91408e00       constant
0xffff91430c0c   268  0000ffff       constant
0xffff91430c10   272  91409080       constant
0xffff91430c14   276  0000ffff       constant
0xffff91430c18   280  91409300       constant
0xffff91430c1c   284  0000ffff       constant
0xffff91430c20   288  91409580       constant
0xffff91430c24   292  0000ffff       constant
0xffff91430c28   296  00eda820       constant
0xffff91430c2c   300  00000000       constant
0xffff91430c30   304  91406060       constant
0xffff91430c34   308  0000ffff       constant
0xffff91430c38   312  91408b80       constant
0xffff91430c3c   316  0000ffff       constant
0xffff91430c40   320  914085e0       constant
0xffff91430c44   324  0000ffff       constant
0xffff91430c48   328  00de2850       constant
0xffff91430c4c   332  00000000       constant
0xffff91430c50   336  91406060       constant
0xffff91430c54   340  0000ffff       constant


RelocInfo (size = 22)
0xffff91430b44  code target (STUB)  (0xffff914082a0)
0xffff91430b54  code target (STUB)  (0xffff91408840)
0xffff91430b64  code target (STUB)  (0xffff91408e00)
0xffff91430b74  code target (STUB)  (0xffff91409080)
0xffff91430b84  code target (STUB)  (0xffff91409300)
0xffff91430b94  code target (STUB)  (0xffff91409580)
0xffff91430bac  external reference (Runtime::Abort)  (0xeda820)
0xffff91430bb0  code target (STUB)  (0xffff91406060)
0xffff91430bc0  code target (STUB)  (0xffff91408b80)
0xffff91430bc8  code target (STUB)  (0xffff914085e0)
0xffff91430be0  external reference (Runtime::NewArray)  (0xde2850)
0xffff91430be4  code target (STUB)  (0xffff91406060)
0xffff91430bec  constant pool (size 108)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327681
name = CallICStub(args(1), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff91430cc0     0  add x4, x2, x3, asr #29
0xffff91430cc4     4  ldur x4, [x4, #15]
0xffff91430cc8     8  ldur x5, [x4, #7]
0xffff91430ccc    12  cmp x5, x1
0xffff91430cd0    16  b.ne #+0x2c (addr 0xffff91430cfc)
0xffff91430cd4    20  tbz w1, #0, #+0x28 (addr 0xffff91430cfc)
0xffff91430cd8    24  add x2, x2, x3, asr #29
0xffff91430cdc    28  add x2, x2, #0x18 (24)
0xffff91430ce0    32  ldur x3, [x2, #-1]
0xffff91430ce4    36  movz x16, #0x200000000
0xffff91430ce8    40  add x3, x3, x16
0xffff91430cec    44  stur x3, [x2, #-1]
0xffff91430cf0    48  movz x0, #0x1
0xffff91430cf4    52  ldr x16, pc+372 (addr 0x0000ffff91430e68)    ;; code: BUILTIN
0xffff91430cf8    56  br x16
0xffff91430cfc    60  ldr x16, [x26, #2400]
0xffff91430d00    64  cmp x4, x16
0xffff91430d04    68  b.eq #+0x78 (addr 0xffff91430d7c)
0xffff91430d08    72  ldur x5, [x4, #-1]
0xffff91430d0c    76  ldr x16, [x26, #2736]
0xffff91430d10    80  cmp x5, x16
0xffff91430d14    84  b.ne #+0x40 (addr 0xffff91430d54)
0xffff91430d18    88  ldur x5, [cp, #39]
0xffff91430d1c    92  ldur x5, [x5, #95]
0xffff91430d20    96  cmp x1, x5
0xffff91430d24   100  b.ne #+0xec (addr 0xffff91430e10)
0xffff91430d28   104  movz x0, #0x1
0xffff91430d2c   108  add x2, x2, x3, asr #29
0xffff91430d30   112  add x2, x2, #0x18 (24)
0xffff91430d34   116  ldur x3, [x2, #-1]
0xffff91430d38   120  movz x16, #0x200000000
0xffff91430d3c   124  add x3, x3, x16
0xffff91430d40   128  stur x3, [x2, #-1]
0xffff91430d44   132  mov x2, x4
0xffff91430d48   136  mov x3, x1
0xffff91430d4c   140  ldr x16, pc+292 (addr 0x0000ffff91430e70)    ;; code: STUB, ArrayConstructorStub, minor: 2
0xffff91430d50   144  br x16
0xffff91430d54   148  ldr x16, [x26, #2568]
0xffff91430d58   152  cmp x4, x16
0xffff91430d5c   156  b.eq #+0xb4 (addr 0xffff91430e10)
0xffff91430d60   160  ldur x5, [x4, #-1]
0xffff91430d64   164  ldrb w5, [x5, #11]
0xffff91430d68   168  cmp x5, #0xc9 (201)
0xffff91430d6c   172  b.ne #+0xa4 (addr 0xffff91430e10)
0xffff91430d70   176  add x4, x2, x3, asr #29
0xffff91430d74   180  ldr x5, [x26, #2400]
0xffff91430d78   184  stur x5, [x4, #15]
0xffff91430d7c   188  movz x0, #0x1
0xffff91430d80   192  ldr x16, pc+248 (addr 0x0000ffff91430e78)    ;; code: BUILTIN
0xffff91430d84   196  br x16
0xffff91430d88   200  tbz w1, #0, #+0x88 (addr 0xffff91430e10)
0xffff91430d8c   204  ldur x5, [x1, #-1]
0xffff91430d90   208  ldrb w5, [x5, #11]
0xffff91430d94   212  cmp x5, #0xc9 (201)
0xffff91430d98   216  b.ne #+0x78 (addr 0xffff91430e10)
0xffff91430d9c   220  ldur x5, [cp, #39]
0xffff91430da0   224  ldur x5, [x5, #95]
0xffff91430da4   228  cmp x1, x5
0xffff91430da8   232  b.eq #+0x68 (addr 0xffff91430e10)
0xffff91430dac   236  ldur x4, [x1, #39]
0xffff91430db0   240  ldur x4, [x4, #39]
0xffff91430db4   244  ldur x5, [cp, #39]
0xffff91430db8   248  cmp x4, x5
0xffff91430dbc   252  b.ne #+0x54 (addr 0xffff91430e10)
0xffff91430dc0   256  movz x5, #0x200000000
0xffff91430dc4   260  adds x4, x2, x3, asr #29
0xffff91430dc8   264  stur x5, [x4, #23]
0xffff91430dcc   268  movz x16, #0xc00000000
0xffff91430dd0   272  sub csp, jssp, #0x10 (16)
0xffff91430dd4   276  stp fp, lr, [jssp, #-16]!
0xffff91430dd8   280  sub csp, jssp, #0x10 (16)
0xffff91430ddc   284  str x16, [jssp, #-8]!
0xffff91430de0   288  ldr x17, pc+160 (addr 0x0000ffff91430e80)    ;; object: 0xffff91430c61 <Code: CALL_IC>
0xffff91430de4   292  sub csp, jssp, #0x10 (16)
0xffff91430de8   296  str x17, [jssp, #-8]!
0xffff91430dec   300  add fp, jssp, #0x10 (16)
0xffff91430df0   304  sub csp, jssp, #0x8 (8)
0xffff91430df4   308  str x1, [jssp, #-8]!
0xffff91430df8   312  ldr x16, pc+144 (addr 0x0000ffff91430e88)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff91430dfc   316  blr x16
0xffff91430e00   320  ldr x1, [jssp], #8
0xffff91430e04   324  mov jssp, fp
0xffff91430e08   328  ldp fp, lr, [jssp], #16
0xffff91430e0c   332  b #-0x11c (addr 0xffff91430cf0)
0xffff91430e10   336  movz x16, #0xc00000000
0xffff91430e14   340  sub csp, jssp, #0x10 (16)
0xffff91430e18   344  stp fp, lr, [jssp, #-16]!
0xffff91430e1c   348  sub csp, jssp, #0x10 (16)
0xffff91430e20   352  str x16, [jssp, #-8]!
0xffff91430e24   356  ldr x17, pc+108 (addr 0x0000ffff91430e90)    ;; object: 0xffff91430c61 <Code: CALL_IC>
0xffff91430e28   360  sub csp, jssp, #0x10 (16)
0xffff91430e2c   364  str x17, [jssp, #-8]!
0xffff91430e30   368  add fp, jssp, #0x10 (16)
0xffff91430e34   372  sub csp, jssp, #0x18 (24)
0xffff91430e38   376  stp x3, x2, [jssp, #-24]!
0xffff91430e3c   380  str x1, [jssp, #16]
0xffff91430e40   384  movz x0, #0x3
0xffff91430e44   388  ldr x1, pc+84 (addr 0x0000ffff91430e98)    ;; external reference (Runtime::CallIC_Miss)
0xffff91430e48   392  ldr x16, pc+88 (addr 0x0000ffff91430ea0)    ;; code: STUB, CEntryStub, minor: 4
0xffff91430e4c   396  blr x16
0xffff91430e50   400  mov x1, x0
0xffff91430e54   404  mov jssp, fp
0xffff91430e58   408  ldp fp, lr, [jssp], #16
0xffff91430e5c   412  b #-0xe0 (addr 0xffff91430d7c)
0xffff91430e60   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff91430e64   420  d63f03e0       constant
0xffff91430e68   424  9141e600       constant
0xffff91430e6c   428  0000ffff       constant
0xffff91430e70   432  91430b00       constant
0xffff91430e74   436  0000ffff       constant
0xffff91430e78   440  9141f6c0       constant
0xffff91430e7c   444  0000ffff       constant
0xffff91430e80   448  91430c61       constant
0xffff91430e84   452  0000ffff       constant
0xffff91430e88   456  9140ddc0       constant
0xffff91430e8c   460  0000ffff       constant
0xffff91430e90   464  91430c61       constant
0xffff91430e94   468  0000ffff       constant
0xffff91430e98   472  00c86928       constant
0xffff91430e9c   476  00000000       constant
0xffff91430ea0   480  91406060       constant
0xffff91430ea4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff91430cf4  code target (BUILTIN)  (0xffff9141e600)
0xffff91430d4c  code target (STUB)  (0xffff91430b00)
0xffff91430d80  code target (BUILTIN)  (0xffff9141f6c0)
0xffff91430de0  embedded object  (0xffff91430c61 <Code: CALL_IC>)
0xffff91430df8  code target (STUB)  (0xffff9140ddc0)
0xffff91430e24  embedded object  (0xffff91430c61 <Code: CALL_IC>)
0xffff91430e44  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff91430e48  code target (STUB)  (0xffff91406060)
0xffff91430e60  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327681
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff91430f20     0  ldur x2, [fp, #-16]
0xffff91430f24     4  ldur x2, [x2, #31]
0xffff91430f28     8  ldur x2, [x2, #87]
0xffff91430f2c    12  ldr x16, pc+20 (addr 0x0000ffff91430f40)    ;; code: CALL_IC, GENERIC
0xffff91430f30    16  br x16
0xffff91430f34    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91430f38    24  d63f03e0       constant
0xffff91430f3c    28  d503201f       constant
0xffff91430f40    32  91430cc0       constant
0xffff91430f44    36  0000ffff       constant


RelocInfo (size = 7)
0xffff91430f2c  code target (CALL_IC)  (0xffff91430cc0)
0xffff91430f34  constant pool (size 20)


kind = STUB
major_key = CallConstructStub
name = CallConstructStub
compiler = unknown
Instructions (size = 424)
0xffff91430fc0     0  tbz w1, #0, #+0x16c (addr 0xffff9143112c)
0xffff91430fc4     4  ldur x10, [x1, #-1]
0xffff91430fc8     8  ldrb w10, [x10, #11]
0xffff91430fcc    12  cmp x10, #0xc9 (201)
0xffff91430fd0    16  b.ne #+0x15c (addr 0xffff9143112c)
0xffff91430fd4    20  add x5, x2, x3, asr #29
0xffff91430fd8    24  ldur x5, [x5, #15]
0xffff91430fdc    28  ldur x12, [x5, #7]
0xffff91430fe0    32  cmp x1, x12
0xffff91430fe4    36  b.eq #+0x118 (addr 0xffff914310fc)
0xffff91430fe8    40  ldr x16, [x26, #2400]
0xffff91430fec    44  cmp x5, x16
0xffff91430ff0    48  b.eq #+0x10c (addr 0xffff914310fc)
0xffff91430ff4    52  ldur x11, [x5, #-1]
0xffff91430ff8    56  ldr x16, [x26, #264]
0xffff91430ffc    60  cmp x11, x16
0xffff91431000    64  b.ne #+0xc (addr 0xffff9143100c)
0xffff91431004    68  tbz w12, #0, #+0x44 (addr 0xffff91431048)
0xffff91431008    72  b #+0x30 (addr 0xffff91431038)
0xffff9143100c    76  ldr x16, [x26, #2736]
0xffff91431010    80  cmp x11, x16
0xffff91431014    84  b.ne #+0x18 (addr 0xffff9143102c)
0xffff91431018    88  ldur x5, [cp, #39]
0xffff9143101c    92  ldur x5, [x5, #95]
0xffff91431020    96  cmp x1, x5
0xffff91431024   100  b.ne #+0x14 (addr 0xffff91431038)
0xffff91431028   104  b #+0xd4 (addr 0xffff914310fc)
0xffff9143102c   108  ldr x16, [x26, #2568]
0xffff91431030   112  cmp x5, x16
0xffff91431034   116  b.eq #+0x14 (addr 0xffff91431048)
0xffff91431038   120  add x5, x2, x3, asr #29
0xffff9143103c   124  ldr x11, [x26, #2400]
0xffff91431040   128  stur x11, [x5, #15]
0xffff91431044   132  b #+0xb8 (addr 0xffff914310fc)
0xffff91431048   136  ldur x5, [cp, #39]
0xffff9143104c   140  ldur x5, [x5, #95]
0xffff91431050   144  cmp x1, x5
0xffff91431054   148  b.ne #+0x58 (addr 0xffff914310ac)
0xffff91431058   152  movz x16, #0xc00000000
0xffff9143105c   156  sub csp, jssp, #0x10 (16)
0xffff91431060   160  stp fp, lr, [jssp, #-16]!
0xffff91431064   164  sub csp, jssp, #0x10 (16)
0xffff91431068   168  str x16, [jssp, #-8]!
0xffff9143106c   172  ldr x17, pc+212 (addr 0x0000ffff91431140)    ;; object: 0xffff91430f61 <Code: STUB>
0xffff91431070   176  sub csp, jssp, #0x10 (16)
0xffff91431074   180  str x17, [jssp, #-8]!
0xffff91431078   184  add fp, jssp, #0x10 (16)
0xffff9143107c   188  lsl x0, x0, #32
0xffff91431080   192  sub csp, jssp, #0x20 (32)
0xffff91431084   196  stp x3, x2, [jssp, #-32]!
0xffff91431088   200  stp x1, x0, [jssp, #16]
0xffff9143108c   204  ldr x16, pc+188 (addr 0x0000ffff91431148)    ;; code: STUB, CreateAllocationSiteStub, minor: 0
0xffff91431090   208  blr x16
0xffff91431094   212  ldp x1, x0, [jssp, #16]
0xffff91431098   216  ldp x3, x2, [jssp], #32
0xffff9143109c   220  asr x0, x0, #32
0xffff914310a0   224  mov jssp, fp
0xffff914310a4   228  ldp fp, lr, [jssp], #16
0xffff914310a8   232  b #+0x54 (addr 0xffff914310fc)
0xffff914310ac   236  movz x16, #0xc00000000
0xffff914310b0   240  sub csp, jssp, #0x10 (16)
0xffff914310b4   244  stp fp, lr, [jssp, #-16]!
0xffff914310b8   248  sub csp, jssp, #0x10 (16)
0xffff914310bc   252  str x16, [jssp, #-8]!
0xffff914310c0   256  ldr x17, pc+144 (addr 0x0000ffff91431150)    ;; object: 0xffff91430f61 <Code: STUB>
0xffff914310c4   260  sub csp, jssp, #0x10 (16)
0xffff914310c8   264  str x17, [jssp, #-8]!
0xffff914310cc   268  add fp, jssp, #0x10 (16)
0xffff914310d0   272  lsl x0, x0, #32
0xffff914310d4   276  sub csp, jssp, #0x20 (32)
0xffff914310d8   280  stp x3, x2, [jssp, #-32]!
0xffff914310dc   284  stp x1, x0, [jssp, #16]
0xffff914310e0   288  ldr x16, pc+120 (addr 0x0000ffff91431158)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff914310e4   292  blr x16
0xffff914310e8   296  ldp x1, x0, [jssp, #16]
0xffff914310ec   300  ldp x3, x2, [jssp], #32
0xffff914310f0   304  asr x0, x0, #32
0xffff914310f4   308  mov jssp, fp
0xffff914310f8   312  ldp fp, lr, [jssp], #16
0xffff914310fc   316  add x5, x2, x3, asr #29
0xffff91431100   320  ldur x2, [x5, #15]
0xffff91431104   324  ldur x5, [x2, #-1]
0xffff91431108   328  ldr x16, [x26, #2736]
0xffff9143110c   332  cmp x5, x16
0xffff91431110   336  b.eq #+0x8 (addr 0xffff91431118)
0xffff91431114   340  ldr x2, [x26, #40]
0xffff91431118   344  mov x3, x1
0xffff9143111c   348  ldur x4, [x1, #31]
0xffff91431120   352  ldur x4, [x4, #39]
0xffff91431124   356  add x4, x4, #0x5f (95)
0xffff91431128   360  br x4
0xffff9143112c   364  mov x3, x1
0xffff91431130   368  ldr x16, pc+48 (addr 0x0000ffff91431160)    ;; code: BUILTIN
0xffff91431134   372  br x16
0xffff91431138   376  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff9143113c   380  d63f03e0       constant
0xffff91431140   384  91430f61       constant
0xffff91431144   388  0000ffff       constant
0xffff91431148   392  9140cbc0       constant
0xffff9143114c   396  0000ffff       constant
0xffff91431150   400  91430f61       constant
0xffff91431154   404  0000ffff       constant
0xffff91431158   408  9140ddc0       constant
0xffff9143115c   412  0000ffff       constant
0xffff91431160   416  91420180       constant
0xffff91431164   420  0000ffff       constant


RelocInfo (size = 15)
0xffff9143106c  embedded object  (0xffff91430f61 <Code: STUB>)
0xffff9143108c  code target (STUB)  (0xffff9140cbc0)
0xffff914310c0  embedded object  (0xffff91430f61 <Code: STUB>)
0xffff914310e0  code target (STUB)  (0xffff9140ddc0)
0xffff91431130  code target (BUILTIN)  (0xffff91420180)
0xffff91431138  constant pool (size 48)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393217
name = CallICStub(args(1), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff91431c60     0  add x4, x2, x3, asr #29
0xffff91431c64     4  ldur x4, [x4, #15]
0xffff91431c68     8  ldur x5, [x4, #7]
0xffff91431c6c    12  cmp x5, x1
0xffff91431c70    16  b.ne #+0x2c (addr 0xffff91431c9c)
0xffff91431c74    20  tbz w1, #0, #+0x28 (addr 0xffff91431c9c)
0xffff91431c78    24  add x2, x2, x3, asr #29
0xffff91431c7c    28  add x2, x2, #0x18 (24)
0xffff91431c80    32  ldur x3, [x2, #-1]
0xffff91431c84    36  movz x16, #0x200000000
0xffff91431c88    40  add x3, x3, x16
0xffff91431c8c    44  stur x3, [x2, #-1]
0xffff91431c90    48  movz x0, #0x1
0xffff91431c94    52  ldr x16, pc+372 (addr 0x0000ffff91431e08)    ;; code: BUILTIN
0xffff91431c98    56  br x16
0xffff91431c9c    60  ldr x16, [x26, #2400]
0xffff91431ca0    64  cmp x4, x16
0xffff91431ca4    68  b.eq #+0x78 (addr 0xffff91431d1c)
0xffff91431ca8    72  ldur x5, [x4, #-1]
0xffff91431cac    76  ldr x16, [x26, #2736]
0xffff91431cb0    80  cmp x5, x16
0xffff91431cb4    84  b.ne #+0x40 (addr 0xffff91431cf4)
0xffff91431cb8    88  ldur x5, [cp, #39]
0xffff91431cbc    92  ldur x5, [x5, #95]
0xffff91431cc0    96  cmp x1, x5
0xffff91431cc4   100  b.ne #+0xec (addr 0xffff91431db0)
0xffff91431cc8   104  movz x0, #0x1
0xffff91431ccc   108  add x2, x2, x3, asr #29
0xffff91431cd0   112  add x2, x2, #0x18 (24)
0xffff91431cd4   116  ldur x3, [x2, #-1]
0xffff91431cd8   120  movz x16, #0x200000000
0xffff91431cdc   124  add x3, x3, x16
0xffff91431ce0   128  stur x3, [x2, #-1]
0xffff91431ce4   132  mov x2, x4
0xffff91431ce8   136  mov x3, x1
0xffff91431cec   140  ldr x16, pc+292 (addr 0x0000ffff91431e10)    ;; code: STUB, ArrayConstructorStub, minor: 2
0xffff91431cf0   144  br x16
0xffff91431cf4   148  ldr x16, [x26, #2568]
0xffff91431cf8   152  cmp x4, x16
0xffff91431cfc   156  b.eq #+0xb4 (addr 0xffff91431db0)
0xffff91431d00   160  ldur x5, [x4, #-1]
0xffff91431d04   164  ldrb w5, [x5, #11]
0xffff91431d08   168  cmp x5, #0xc9 (201)
0xffff91431d0c   172  b.ne #+0xa4 (addr 0xffff91431db0)
0xffff91431d10   176  add x4, x2, x3, asr #29
0xffff91431d14   180  ldr x5, [x26, #2400]
0xffff91431d18   184  stur x5, [x4, #15]
0xffff91431d1c   188  movz x0, #0x1
0xffff91431d20   192  ldr x16, pc+248 (addr 0x0000ffff91431e18)    ;; code: BUILTIN
0xffff91431d24   196  br x16
0xffff91431d28   200  tbz w1, #0, #+0x88 (addr 0xffff91431db0)
0xffff91431d2c   204  ldur x5, [x1, #-1]
0xffff91431d30   208  ldrb w5, [x5, #11]
0xffff91431d34   212  cmp x5, #0xc9 (201)
0xffff91431d38   216  b.ne #+0x78 (addr 0xffff91431db0)
0xffff91431d3c   220  ldur x5, [cp, #39]
0xffff91431d40   224  ldur x5, [x5, #95]
0xffff91431d44   228  cmp x1, x5
0xffff91431d48   232  b.eq #+0x68 (addr 0xffff91431db0)
0xffff91431d4c   236  ldur x4, [x1, #39]
0xffff91431d50   240  ldur x4, [x4, #39]
0xffff91431d54   244  ldur x5, [cp, #39]
0xffff91431d58   248  cmp x4, x5
0xffff91431d5c   252  b.ne #+0x54 (addr 0xffff91431db0)
0xffff91431d60   256  movz x5, #0x200000000
0xffff91431d64   260  adds x4, x2, x3, asr #29
0xffff91431d68   264  stur x5, [x4, #23]
0xffff91431d6c   268  movz x16, #0xc00000000
0xffff91431d70   272  sub csp, jssp, #0x10 (16)
0xffff91431d74   276  stp fp, lr, [jssp, #-16]!
0xffff91431d78   280  sub csp, jssp, #0x10 (16)
0xffff91431d7c   284  str x16, [jssp, #-8]!
0xffff91431d80   288  ldr x17, pc+160 (addr 0x0000ffff91431e20)    ;; object: 0xffff91431c01 <Code: CALL_IC>
0xffff91431d84   292  sub csp, jssp, #0x10 (16)
0xffff91431d88   296  str x17, [jssp, #-8]!
0xffff91431d8c   300  add fp, jssp, #0x10 (16)
0xffff91431d90   304  sub csp, jssp, #0x8 (8)
0xffff91431d94   308  str x1, [jssp, #-8]!
0xffff91431d98   312  ldr x16, pc+144 (addr 0x0000ffff91431e28)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff91431d9c   316  blr x16
0xffff91431da0   320  ldr x1, [jssp], #8
0xffff91431da4   324  mov jssp, fp
0xffff91431da8   328  ldp fp, lr, [jssp], #16
0xffff91431dac   332  b #-0x11c (addr 0xffff91431c90)
0xffff91431db0   336  movz x16, #0xc00000000
0xffff91431db4   340  sub csp, jssp, #0x10 (16)
0xffff91431db8   344  stp fp, lr, [jssp, #-16]!
0xffff91431dbc   348  sub csp, jssp, #0x10 (16)
0xffff91431dc0   352  str x16, [jssp, #-8]!
0xffff91431dc4   356  ldr x17, pc+108 (addr 0x0000ffff91431e30)    ;; object: 0xffff91431c01 <Code: CALL_IC>
0xffff91431dc8   360  sub csp, jssp, #0x10 (16)
0xffff91431dcc   364  str x17, [jssp, #-8]!
0xffff91431dd0   368  add fp, jssp, #0x10 (16)
0xffff91431dd4   372  sub csp, jssp, #0x18 (24)
0xffff91431dd8   376  stp x3, x2, [jssp, #-24]!
0xffff91431ddc   380  str x1, [jssp, #16]
0xffff91431de0   384  movz x0, #0x3
0xffff91431de4   388  ldr x1, pc+84 (addr 0x0000ffff91431e38)    ;; external reference (Runtime::CallIC_Miss)
0xffff91431de8   392  ldr x16, pc+88 (addr 0x0000ffff91431e40)    ;; code: STUB, CEntryStub, minor: 4
0xffff91431dec   396  blr x16
0xffff91431df0   400  mov x1, x0
0xffff91431df4   404  mov jssp, fp
0xffff91431df8   408  ldp fp, lr, [jssp], #16
0xffff91431dfc   412  b #-0xe0 (addr 0xffff91431d1c)
0xffff91431e00   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff91431e04   420  d63f03e0       constant
0xffff91431e08   424  9141e820       constant
0xffff91431e0c   428  0000ffff       constant
0xffff91431e10   432  91430b00       constant
0xffff91431e14   436  0000ffff       constant
0xffff91431e18   440  9141f820       constant
0xffff91431e1c   444  0000ffff       constant
0xffff91431e20   448  91431c01       constant
0xffff91431e24   452  0000ffff       constant
0xffff91431e28   456  9140ddc0       constant
0xffff91431e2c   460  0000ffff       constant
0xffff91431e30   464  91431c01       constant
0xffff91431e34   468  0000ffff       constant
0xffff91431e38   472  00c86928       constant
0xffff91431e3c   476  00000000       constant
0xffff91431e40   480  91406060       constant
0xffff91431e44   484  0000ffff       constant


RelocInfo (size = 19)
0xffff91431c94  code target (BUILTIN)  (0xffff9141e820)
0xffff91431cec  code target (STUB)  (0xffff91430b00)
0xffff91431d20  code target (BUILTIN)  (0xffff9141f820)
0xffff91431d80  embedded object  (0xffff91431c01 <Code: CALL_IC>)
0xffff91431d98  code target (STUB)  (0xffff9140ddc0)
0xffff91431dc4  embedded object  (0xffff91431c01 <Code: CALL_IC>)
0xffff91431de4  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff91431de8  code target (STUB)  (0xffff91406060)
0xffff91431e00  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393217
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff91431ec0     0  ldur x2, [fp, #-16]
0xffff91431ec4     4  ldur x2, [x2, #31]
0xffff91431ec8     8  ldur x2, [x2, #87]
0xffff91431ecc    12  ldr x16, pc+20 (addr 0x0000ffff91431ee0)    ;; code: CALL_IC, GENERIC
0xffff91431ed0    16  br x16
0xffff91431ed4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91431ed8    24  d63f03e0       constant
0xffff91431edc    28  d503201f       constant
0xffff91431ee0    32  91431c60       constant
0xffff91431ee4    36  0000ffff       constant


RelocInfo (size = 7)
0xffff91431ecc  code target (CALL_IC)  (0xffff91431c60)
0xffff91431ed4  constant pool (size 20)


kind = STORE_IC
major_key = VectorStoreICTrampolineStub
ic_state = GENERIC
extra_ic_state = 0
name = VectorStoreICTrampolineStub
compiler = unknown
Instructions (size = 440)
0xffff914320c0     0  ldur x3, [fp, #-16]
0xffff914320c4     4  ldur x3, [x3, #31]
0xffff914320c8     8  ldur x3, [x3, #87]
0xffff914320cc    12  add x5, x3, x4, asr #29
0xffff914320d0    16  ldur x5, [x5, #15]
0xffff914320d4    20  tbz w1, #0, #+0x174 (addr 0xffff91432248)
0xffff914320d8    24  ldur x6, [x1, #-1]
0xffff914320dc    28  ldur x7, [x5, #7]
0xffff914320e0    32  cmp x7, x6
0xffff914320e4    36  b.ne #+0x14 (addr 0xffff914320f8)
0xffff914320e8    40  add x5, x3, x4, asr #29
0xffff914320ec    44  ldur x5, [x5, #23]
0xffff914320f0    48  add x5, x5, #0x5f (95)
0xffff914320f4    52  br x5
0xffff914320f8    56  ldur x7, [x5, #-1]
0xffff914320fc    60  ldr x16, [x26, #224]
0xffff91432100    64  cmp x7, x16
0xffff91432104    68  b.ne #+0x5c (addr 0xffff91432160)
0xffff91432108    72  ldur x7, [x5, #15]
0xffff9143210c    76  ldur x7, [x7, #7]
0xffff91432110    80  cmp x6, x7
0xffff91432114    84  b.ne #+0x10 (addr 0xffff91432124)
0xffff91432118    88  ldur x5, [x5, #23]
0xffff9143211c    92  add x5, x5, #0x5f (95)
0xffff91432120    96  br x5
0xffff91432124   100  ldur x8, [x5, #7]
0xffff91432128   104  add x8, x5, x8, asr #29
0xffff9143212c   108  add x8, x8, #0xf (15)
0xffff91432130   112  add x5, x5, #0x1f (31)
0xffff91432134   116  ldr x7, [x5]
0xffff91432138   120  ldur x7, [x7, #7]
0xffff9143213c   124  cmp x6, x7
0xffff91432140   128  b.ne #+0x10 (addr 0xffff91432150)
0xffff91432144   132  ldr x5, [x5, #8]
0xffff91432148   136  add x5, x5, #0x5f (95)
0xffff9143214c   140  br x5
0xffff91432150   144  add x5, x5, #0x10 (16)
0xffff91432154   148  cmp x5, x8
0xffff91432158   152  b.lt #-0x24 (addr 0xffff91432134)
0xffff9143215c   156  b #+0xcc (addr 0xffff91432228)
0xffff91432160   160  ldr x16, [x26, #2400]
0xffff91432164   164  cmp x5, x16
0xffff91432168   168  b.ne #+0xc0 (addr 0xffff91432228)
0xffff9143216c   172  tbz w1, #0, #+0xbc (addr 0xffff91432228)
0xffff91432170   176  ldur x5, [x2, #7]
0xffff91432174   180  ldur x6, [x1, #-1]
0xffff91432178   184  add x5, x5, x6
0xffff9143217c   188  movz x16, #0x6902
0xffff91432180   192  eor x5, x5, x16
0xffff91432184   196  ubfx x5, x5, #2, #11
0xffff91432188   200  add x8, x5, x5, lsl #1
0xffff9143218c   204  ldr x6, pc+204 (addr 0x0000ffff91432258)    ;; external reference (StubCache::primary_->key)
0xffff91432190   208  add x6, x6, x8, lsl #3
0xffff91432194   212  ldr x7, [x6]
0xffff91432198   216  cmp x2, x7
0xffff9143219c   220  b.ne #+0x34 (addr 0xffff914321d0)
0xffff914321a0   224  ldr x7, [x6, #16]
0xffff914321a4   228  ldur x8, [x1, #-1]
0xffff914321a8   232  cmp x7, x8
0xffff914321ac   236  b.ne #+0x24 (addr 0xffff914321d0)
0xffff914321b0   240  ldr x6, [x6, #8]
0xffff914321b4   244  ldur w7, [x6, #63]
0xffff914321b8   248  and w7, w7, #0xffffffc7
0xffff914321bc   252  movz w16, #0x6902
0xffff914321c0   256  cmp w7, w16
0xffff914321c4   260  b.ne #+0xc (addr 0xffff914321d0)
0xffff914321c8   264  add x6, x6, #0x5f (95)
0xffff914321cc   268  br x6
0xffff914321d0   272  sub x5, x5, x2, lsr #2
0xffff914321d4   276  movz x16, #0x1a40
0xffff914321d8   280  add x5, x5, x16
0xffff914321dc   284  and x5, x5, #0x1ff
0xffff914321e0   288  add x8, x5, x5, lsl #1
0xffff914321e4   292  ldr x6, pc+124 (addr 0x0000ffff91432260)    ;; external reference (StubCache::secondary_->key)
0xffff914321e8   296  add x6, x6, x8, lsl #3
0xffff914321ec   300  ldr x7, [x6]
0xffff914321f0   304  cmp x2, x7
0xffff914321f4   308  b.ne #+0x34 (addr 0xffff91432228)
0xffff914321f8   312  ldr x7, [x6, #16]
0xffff914321fc   316  ldur x8, [x1, #-1]
0xffff91432200   320  cmp x7, x8
0xffff91432204   324  b.ne #+0x24 (addr 0xffff91432228)
0xffff91432208   328  ldr x6, [x6, #8]
0xffff9143220c   332  ldur w7, [x6, #63]
0xffff91432210   336  and w7, w7, #0xffffffc7
0xffff91432214   340  movz w16, #0x6902
0xffff91432218   344  cmp w7, w16
0xffff9143221c   348  b.ne #+0xc (addr 0xffff91432228)
0xffff91432220   352  add x6, x6, #0x5f (95)
0xffff91432224   356  br x6
0xffff91432228   360  sub csp, jssp, #0x28 (40)
0xffff9143222c   364  stp x4, x0, [jssp, #-32]!
0xffff91432230   368  stp x2, x1, [jssp, #16]
0xffff91432234   372  str x3, [jssp, #-8]!
0xffff91432238   376  movz x0, #0x5
0xffff9143223c   380  ldr x1, pc+44 (addr 0x0000ffff91432268)    ;; external reference (Runtime::StoreIC_Miss)
0xffff91432240   384  ldr x16, pc+48 (addr 0x0000ffff91432270)    ;; code: STUB, CEntryStub, minor: 4
0xffff91432244   388  br x16
0xffff91432248   392  ldr x6, [x26, #120]
0xffff9143224c   396  b #-0x170 (addr 0xffff914320dc)
0xffff91432250   400  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff91432254   404  d63f03e0       constant
0xffff91432258   408  41199950       constant
0xffff9143225c   412  00000000       constant
0xffff91432260   416  411a5950       constant
0xffff91432264   420  00000000       constant
0xffff91432268   424  00c87f60       constant
0xffff9143226c   428  00000000       constant
0xffff91432270   432  91406060       constant
0xffff91432274   436  0000ffff       constant


RelocInfo (size = 19)
0xffff9143218c  external reference (StubCache::primary_->key)  (0x41199950)
0xffff914321e4  external reference (StubCache::secondary_->key)  (0x411a5950)
0xffff9143223c  external reference (Runtime::StoreIC_Miss)  (0xc87f60)
0xffff91432240  code target (STUB)  (0xffff91406060)
0xffff91432250  constant pool (size 40)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 981)
0xffff91432520     0  movz x2, #0xf2c0
0xffff91432524     4  movk x2, #0x4117, lsl #16
0xffff91432528     8  ldp x3, x0, [x2]
0xffff9143252c    12  adds x16, x3, #0x180 (384)
0xffff91432530    16  ccmp x16, x0, #nzCv, lo
0xffff91432534    20  b.hi #+0x1c8 (addr 0xffff914326fc)
0xffff91432538    24  str x16, [x2]
0xffff9143253c    28  orr x3, x3, #0x1
0xffff91432540    32  ldr x0, pc+552 (addr 0x0000ffff91432768)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91432544    36  stur x0, [x3, #-1]
0xffff91432548    40  movz x0, #0x2e00000000
0xffff9143254c    44  stur x0, [x3, #7]
0xffff91432550    48  stur x1, [x3, #15]
0xffff91432554    52  stur cp, [x3, #23]
0xffff91432558    56  ldr x0, pc+536 (addr 0x0000ffff91432770)    ;; object: 0x49b04519 <the hole>
0xffff9143255c    60  stur x0, [x3, #31]
0xffff91432560    64  ldur x0, [cp, #39]
0xffff91432564    68  stur x0, [x3, #39]
0xffff91432568    72  ldr x0, pc+528 (addr 0x0000ffff91432778)    ;; object: 0x49b04241 <undefined>
0xffff9143256c    76  stur x0, [x3, #47]
0xffff91432570    80  ldr x0, pc+528 (addr 0x0000ffff91432780)    ;; object: 0x49b04241 <undefined>
0xffff91432574    84  stur x0, [x3, #55]
0xffff91432578    88  ldr x0, pc+528 (addr 0x0000ffff91432788)    ;; object: 0x49b04241 <undefined>
0xffff9143257c    92  stur x0, [x3, #63]
0xffff91432580    96  ldr x0, pc+528 (addr 0x0000ffff91432790)    ;; object: 0x49b04241 <undefined>
0xffff91432584   100  stur x0, [x3, #71]
0xffff91432588   104  ldr x0, pc+528 (addr 0x0000ffff91432798)    ;; object: 0x49b04241 <undefined>
0xffff9143258c   108  stur x0, [x3, #79]
0xffff91432590   112  ldr x0, pc+528 (addr 0x0000ffff914327a0)    ;; object: 0x49b04241 <undefined>
0xffff91432594   116  stur x0, [x3, #87]
0xffff91432598   120  ldr x0, pc+528 (addr 0x0000ffff914327a8)    ;; object: 0x49b04241 <undefined>
0xffff9143259c   124  stur x0, [x3, #95]
0xffff914325a0   128  ldr x0, pc+528 (addr 0x0000ffff914327b0)    ;; object: 0x49b04241 <undefined>
0xffff914325a4   132  stur x0, [x3, #103]
0xffff914325a8   136  ldr x0, pc+528 (addr 0x0000ffff914327b8)    ;; object: 0x49b04241 <undefined>
0xffff914325ac   140  stur x0, [x3, #111]
0xffff914325b0   144  ldr x0, pc+528 (addr 0x0000ffff914327c0)    ;; object: 0x49b04241 <undefined>
0xffff914325b4   148  stur x0, [x3, #119]
0xffff914325b8   152  ldr x0, pc+528 (addr 0x0000ffff914327c8)    ;; object: 0x49b04241 <undefined>
0xffff914325bc   156  stur x0, [x3, #127]
0xffff914325c0   160  ldr x0, pc+528 (addr 0x0000ffff914327d0)    ;; object: 0x49b04241 <undefined>
0xffff914325c4   164  stur x0, [x3, #135]
0xffff914325c8   168  ldr x0, pc+528 (addr 0x0000ffff914327d8)    ;; object: 0x49b04241 <undefined>
0xffff914325cc   172  stur x0, [x3, #143]
0xffff914325d0   176  ldr x0, pc+528 (addr 0x0000ffff914327e0)    ;; object: 0x49b04241 <undefined>
0xffff914325d4   180  stur x0, [x3, #151]
0xffff914325d8   184  ldr x0, pc+528 (addr 0x0000ffff914327e8)    ;; object: 0x49b04241 <undefined>
0xffff914325dc   188  stur x0, [x3, #159]
0xffff914325e0   192  ldr x0, pc+528 (addr 0x0000ffff914327f0)    ;; object: 0x49b04241 <undefined>
0xffff914325e4   196  stur x0, [x3, #167]
0xffff914325e8   200  ldr x0, pc+528 (addr 0x0000ffff914327f8)    ;; object: 0x49b04241 <undefined>
0xffff914325ec   204  stur x0, [x3, #175]
0xffff914325f0   208  ldr x0, pc+528 (addr 0x0000ffff91432800)    ;; object: 0x49b04241 <undefined>
0xffff914325f4   212  stur x0, [x3, #183]
0xffff914325f8   216  ldr x0, pc+528 (addr 0x0000ffff91432808)    ;; object: 0x49b04241 <undefined>
0xffff914325fc   220  stur x0, [x3, #191]
0xffff91432600   224  ldr x0, pc+528 (addr 0x0000ffff91432810)    ;; object: 0x49b04241 <undefined>
0xffff91432604   228  stur x0, [x3, #199]
0xffff91432608   232  ldr x0, pc+528 (addr 0x0000ffff91432818)    ;; object: 0x49b04241 <undefined>
0xffff9143260c   236  stur x0, [x3, #207]
0xffff91432610   240  ldr x0, pc+528 (addr 0x0000ffff91432820)    ;; object: 0x49b04241 <undefined>
0xffff91432614   244  stur x0, [x3, #215]
0xffff91432618   248  ldr x0, pc+528 (addr 0x0000ffff91432828)    ;; object: 0x49b04241 <undefined>
0xffff9143261c   252  stur x0, [x3, #223]
0xffff91432620   256  ldr x0, pc+528 (addr 0x0000ffff91432830)    ;; object: 0x49b04241 <undefined>
0xffff91432624   260  stur x0, [x3, #231]
0xffff91432628   264  ldr x0, pc+528 (addr 0x0000ffff91432838)    ;; object: 0x49b04241 <undefined>
0xffff9143262c   268  stur x0, [x3, #239]
0xffff91432630   272  ldr x0, pc+528 (addr 0x0000ffff91432840)    ;; object: 0x49b04241 <undefined>
0xffff91432634   276  stur x0, [x3, #247]
0xffff91432638   280  ldr x0, pc+528 (addr 0x0000ffff91432848)    ;; object: 0x49b04241 <undefined>
0xffff9143263c   284  stur x0, [x3, #255]
0xffff91432640   288  ldr x0, pc+528 (addr 0x0000ffff91432850)    ;; object: 0x49b04241 <undefined>
0xffff91432644   292  movz x16, #0x107
0xffff91432648   296  str x0, [x3, x16]
0xffff9143264c   300  ldr x0, pc+524 (addr 0x0000ffff91432858)    ;; object: 0x49b04241 <undefined>
0xffff91432650   304  movz x16, #0x10f
0xffff91432654   308  str x0, [x3, x16]
0xffff91432658   312  ldr x0, pc+520 (addr 0x0000ffff91432860)    ;; object: 0x49b04241 <undefined>
0xffff9143265c   316  movz x16, #0x117
0xffff91432660   320  str x0, [x3, x16]
0xffff91432664   324  ldr x0, pc+516 (addr 0x0000ffff91432868)    ;; object: 0x49b04241 <undefined>
0xffff91432668   328  movz x16, #0x11f
0xffff9143266c   332  str x0, [x3, x16]
0xffff91432670   336  ldr x0, pc+512 (addr 0x0000ffff91432870)    ;; object: 0x49b04241 <undefined>
0xffff91432674   340  movz x16, #0x127
0xffff91432678   344  str x0, [x3, x16]
0xffff9143267c   348  ldr x0, pc+508 (addr 0x0000ffff91432878)    ;; object: 0x49b04241 <undefined>
0xffff91432680   352  movz x16, #0x12f
0xffff91432684   356  str x0, [x3, x16]
0xffff91432688   360  ldr x0, pc+504 (addr 0x0000ffff91432880)    ;; object: 0x49b04241 <undefined>
0xffff9143268c   364  movz x16, #0x137
0xffff91432690   368  str x0, [x3, x16]
0xffff91432694   372  ldr x0, pc+500 (addr 0x0000ffff91432888)    ;; object: 0x49b04241 <undefined>
0xffff91432698   376  movz x16, #0x13f
0xffff9143269c   380  str x0, [x3, x16]
0xffff914326a0   384  ldr x0, pc+496 (addr 0x0000ffff91432890)    ;; object: 0x49b04241 <undefined>
0xffff914326a4   388  movz x16, #0x147
0xffff914326a8   392  str x0, [x3, x16]
0xffff914326ac   396  ldr x0, pc+492 (addr 0x0000ffff91432898)    ;; object: 0x49b04241 <undefined>
0xffff914326b0   400  movz x16, #0x14f
0xffff914326b4   404  str x0, [x3, x16]
0xffff914326b8   408  ldr x0, pc+488 (addr 0x0000ffff914328a0)    ;; object: 0x49b04241 <undefined>
0xffff914326bc   412  movz x16, #0x157
0xffff914326c0   416  str x0, [x3, x16]
0xffff914326c4   420  ldr x0, pc+484 (addr 0x0000ffff914328a8)    ;; object: 0x49b04241 <undefined>
0xffff914326c8   424  movz x16, #0x15f
0xffff914326cc   428  str x0, [x3, x16]
0xffff914326d0   432  ldr x0, pc+480 (addr 0x0000ffff914328b0)    ;; object: 0x49b04241 <undefined>
0xffff914326d4   436  movz x16, #0x167
0xffff914326d8   440  str x0, [x3, x16]
0xffff914326dc   444  ldr x0, pc+476 (addr 0x0000ffff914328b8)    ;; object: 0x49b04241 <undefined>
0xffff914326e0   448  movz x16, #0x16f
0xffff914326e4   452  str x0, [x3, x16]
0xffff914326e8   456  ldr x0, pc+472 (addr 0x0000ffff914328c0)    ;; object: 0x49b04241 <undefined>
0xffff914326ec   460  movz x16, #0x177
0xffff914326f0   464  str x0, [x3, x16]
0xffff914326f4   468  mov x0, x3
0xffff914326f8   472  ret
0xffff914326fc   476  sub csp, jssp, #0x10 (16)
0xffff91432700   480  stp fp, lr, [jssp, #-16]!
0xffff91432704   484  movz fp, #0xa00000000
0xffff91432708   488  sub csp, jssp, #0x8 (8)
0xffff9143270c   492  str fp, [jssp, #-8]!
0xffff91432710   496  add fp, jssp, #0x8 (8)
0xffff91432714   500  movz x3, #0x0
0xffff91432718   504  mov x16, lr
0xffff9143271c   508  ldr x17, pc+428 (addr 0x0000ffff914328c8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91432720   512  blr x17
0xffff91432724   516  movz x0, #0x18000000000
0xffff91432728   520  movz x10, #0x0
0xffff9143272c   524  sub csp, jssp, #0x10 (16)
0xffff91432730   528  stp x10, x0, [jssp, #-16]!
0xffff91432734   532  movz x0, #0x2
0xffff91432738   536  movz x1, #0x5b88
0xffff9143273c   540  movk x1, #0xe2, lsl #16
0xffff91432740   544  ldr x16, pc+400 (addr 0x0000ffff914328d0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91432744   548  blr x16
0xffff91432748   552  str x0, [jssp, #24]
0xffff9143274c   556  ldr x16, pc+396 (addr 0x0000ffff914328d8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91432750   560  blr x16
0xffff91432754   564  ldr lr, [jssp, #16]
0xffff91432758   568  ldp xzr, fp, [jssp], #24
0xffff9143275c   572  b #-0x21c (addr 0xffff91432540)
0xffff91432760   576  58000bff       constant pool begin (num_const = 95)    ;; constant pool
0xffff91432764   580  d63f03e0       constant
0xffff91432768   584  36406149       constant
0xffff9143276c   588  00000000       constant
0xffff91432770   592  49b04519       constant
0xffff91432774   596  00000000       constant
0xffff91432778   600  49b04241       constant
0xffff9143277c   604  00000000       constant
0xffff91432780   608  49b04241       constant
0xffff91432784   612  00000000       constant
0xffff91432788   616  49b04241       constant
0xffff9143278c   620  00000000       constant
0xffff91432790   624  49b04241       constant
0xffff91432794   628  00000000       constant
0xffff91432798   632  49b04241       constant
0xffff9143279c   636  00000000       constant
0xffff914327a0   640  49b04241       constant
0xffff914327a4   644  00000000       constant
0xffff914327a8   648  49b04241       constant
0xffff914327ac   652  00000000       constant
0xffff914327b0   656  49b04241       constant
0xffff914327b4   660  00000000       constant
0xffff914327b8   664  49b04241       constant
0xffff914327bc   668  00000000       constant
0xffff914327c0   672  49b04241       constant
0xffff914327c4   676  00000000       constant
0xffff914327c8   680  49b04241       constant
0xffff914327cc   684  00000000       constant
0xffff914327d0   688  49b04241       constant
0xffff914327d4   692  00000000       constant
0xffff914327d8   696  49b04241       constant
0xffff914327dc   700  00000000       constant
0xffff914327e0   704  49b04241       constant
0xffff914327e4   708  00000000       constant
0xffff914327e8   712  49b04241       constant
0xffff914327ec   716  00000000       constant
0xffff914327f0   720  49b04241       constant
0xffff914327f4   724  00000000       constant
0xffff914327f8   728  49b04241       constant
0xffff914327fc   732  00000000       constant
0xffff91432800   736  49b04241       constant
0xffff91432804   740  00000000       constant
0xffff91432808   744  49b04241       constant
0xffff9143280c   748  00000000       constant
0xffff91432810   752  49b04241       constant
0xffff91432814   756  00000000       constant
0xffff91432818   760  49b04241       constant
0xffff9143281c   764  00000000       constant
0xffff91432820   768  49b04241       constant
0xffff91432824   772  00000000       constant
0xffff91432828   776  49b04241       constant
0xffff9143282c   780  00000000       constant
0xffff91432830   784  49b04241       constant
0xffff91432834   788  00000000       constant
0xffff91432838   792  49b04241       constant
0xffff9143283c   796  00000000       constant
0xffff91432840   800  49b04241       constant
0xffff91432844   804  00000000       constant
0xffff91432848   808  49b04241       constant
0xffff9143284c   812  00000000       constant
0xffff91432850   816  49b04241       constant
0xffff91432854   820  00000000       constant
0xffff91432858   824  49b04241       constant
0xffff9143285c   828  00000000       constant
0xffff91432860   832  49b04241       constant
0xffff91432864   836  00000000       constant
0xffff91432868   840  49b04241       constant
0xffff9143286c   844  00000000       constant
0xffff91432870   848  49b04241       constant
0xffff91432874   852  00000000       constant
0xffff91432878   856  49b04241       constant
0xffff9143287c   860  00000000       constant
0xffff91432880   864  49b04241       constant
0xffff91432884   868  00000000       constant
0xffff91432888   872  49b04241       constant
0xffff9143288c   876  00000000       constant
0xffff91432890   880  49b04241       constant
0xffff91432894   884  00000000       constant
0xffff91432898   888  49b04241       constant
0xffff9143289c   892  00000000       constant
0xffff914328a0   896  49b04241       constant
0xffff914328a4   900  00000000       constant
0xffff914328a8   904  49b04241       constant
0xffff914328ac   908  00000000       constant
0xffff914328b0   912  49b04241       constant
0xffff914328b4   916  00000000       constant
0xffff914328b8   920  49b04241       constant
0xffff914328bc   924  00000000       constant
0xffff914328c0   928  49b04241       constant
0xffff914328c4   932  00000000       constant
0xffff914328c8   936  91406820       constant
0xffff914328cc   940  0000ffff       constant
0xffff914328d0   944  91406260       constant
0xffff914328d4   948  0000ffff       constant
0xffff914328d8   952  914068e0       constant
0xffff914328dc   956  0000ffff       constant


Safepoints (size = 21)
0xffff91432748   552  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 53)
0xffff91432540  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91432558  embedded object  (0x49b04519 <the hole>)
0xffff91432568  embedded object  (0x49b04241 <undefined>)
0xffff91432570  embedded object  (0x49b04241 <undefined>)
0xffff91432578  embedded object  (0x49b04241 <undefined>)
0xffff91432580  embedded object  (0x49b04241 <undefined>)
0xffff91432588  embedded object  (0x49b04241 <undefined>)
0xffff91432590  embedded object  (0x49b04241 <undefined>)
0xffff91432598  embedded object  (0x49b04241 <undefined>)
0xffff914325a0  embedded object  (0x49b04241 <undefined>)
0xffff914325a8  embedded object  (0x49b04241 <undefined>)
0xffff914325b0  embedded object  (0x49b04241 <undefined>)
0xffff914325b8  embedded object  (0x49b04241 <undefined>)
0xffff914325c0  embedded object  (0x49b04241 <undefined>)
0xffff914325c8  embedded object  (0x49b04241 <undefined>)
0xffff914325d0  embedded object  (0x49b04241 <undefined>)
0xffff914325d8  embedded object  (0x49b04241 <undefined>)
0xffff914325e0  embedded object  (0x49b04241 <undefined>)
0xffff914325e8  embedded object  (0x49b04241 <undefined>)
0xffff914325f0  embedded object  (0x49b04241 <undefined>)
0xffff914325f8  embedded object  (0x49b04241 <undefined>)
0xffff91432600  embedded object  (0x49b04241 <undefined>)
0xffff91432608  embedded object  (0x49b04241 <undefined>)
0xffff91432610  embedded object  (0x49b04241 <undefined>)
0xffff91432618  embedded object  (0x49b04241 <undefined>)
0xffff91432620  embedded object  (0x49b04241 <undefined>)
0xffff91432628  embedded object  (0x49b04241 <undefined>)
0xffff91432630  embedded object  (0x49b04241 <undefined>)
0xffff91432638  embedded object  (0x49b04241 <undefined>)
0xffff91432640  embedded object  (0x49b04241 <undefined>)
0xffff9143264c  embedded object  (0x49b04241 <undefined>)
0xffff91432658  embedded object  (0x49b04241 <undefined>)
0xffff91432664  embedded object  (0x49b04241 <undefined>)
0xffff91432670  embedded object  (0x49b04241 <undefined>)
0xffff9143267c  embedded object  (0x49b04241 <undefined>)
0xffff91432688  embedded object  (0x49b04241 <undefined>)
0xffff91432694  embedded object  (0x49b04241 <undefined>)
0xffff914326a0  embedded object  (0x49b04241 <undefined>)
0xffff914326ac  embedded object  (0x49b04241 <undefined>)
0xffff914326b8  embedded object  (0x49b04241 <undefined>)
0xffff914326c4  embedded object  (0x49b04241 <undefined>)
0xffff914326d0  embedded object  (0x49b04241 <undefined>)
0xffff914326dc  embedded object  (0x49b04241 <undefined>)
0xffff914326e8  embedded object  (0x49b04241 <undefined>)
0xffff9143271c  code target (STUB)  (0xffff91406820)
0xffff91432740  code target (STUB)  (0xffff91406260)
0xffff9143274c  code target (STUB)  (0xffff914068e0)
0xffff91432760  constant pool (size 384)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff91432960     0  adr xzr, #+0x40 (addr 0xffff914329a0)
0xffff91432964     4  adr xzr, #+0x360 (addr 0xffff91432cc4)
0xffff91432968     8  ldr x16, pc+1736 (addr 0x0000ffff91433030)    ;; external reference (store_buffer_top)
0xffff9143296c    12  ldr x1, [x16]
0xffff91432970    16  str x2, [x1], #8
0xffff91432974    20  str x1, [x16]
0xffff91432978    24  tst x1, #0x1ffff
0xffff9143297c    28  b.eq #+0x8 (addr 0xffff91432984)
0xffff91432980    32  ret
0xffff91432984    36  sub csp, jssp, #0x8 (8)
0xffff91432988    40  str lr, [jssp, #-8]!
0xffff9143298c    44  ldr x17, pc+1708 (addr 0x0000ffff91433038)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91432990    48  blr x17
0xffff91432994    52  ldr lr, [jssp], #8
0xffff91432998    56  ret
0xffff9143299c    60  ret
0xffff914329a0    64  sub csp, jssp, #0x10 (16)
0xffff914329a4    68  stp x3, x0, [jssp, #-16]!
0xffff914329a8    72  ldr x1, [x2]
0xffff914329ac    76  and x16, x1, #0xfffffffffff00000
0xffff914329b0    80  ldr x16, [x16, #8]
0xffff914329b4    84  tst x16, #0x18
0xffff914329b8    88  b.eq #+0x1d8 (addr 0xffff91432b90)
0xffff914329bc    92  and x16, x4, #0xfffffffffff00000
0xffff914329c0    96  ldr x16, [x16, #8]
0xffff914329c4   100  tst x16, #0x18
0xffff914329c8   104  b.ne #+0x1c8 (addr 0xffff91432b90)
0xffff914329cc   108  and x1, x4, #0xfffffffffff00000
0xffff914329d0   112  ldr x0, [x1, #104]
0xffff914329d4   116  subs x0, x0, #0x1 (1)
0xffff914329d8   120  str x0, [x1, #104]
0xffff914329dc   124  b.mi #+0xc4 (addr 0xffff91432aa0)
0xffff914329e0   128  ubfx x16, x4, #8, #12
0xffff914329e4   132  and x1, x4, #0xfffffffffff00000
0xffff914329e8   136  add x1, x1, x16, lsl #2
0xffff914329ec   140  ubfx x0, x4, #3, #5
0xffff914329f0   144  ldr x1, [x1, #360]
0xffff914329f4   148  lsr x1, x1, x0
0xffff914329f8   152  tbz w1, #0, #+0x8 (addr 0xffff91432a00)
0xffff914329fc   156  tbnz w1, #1, #+0x3c (addr 0xffff91432a38)
0xffff91432a00   160  ldp x3, x0, [jssp], #16
0xffff91432a04   164  ldr x16, pc+1596 (addr 0x0000ffff91433040)    ;; external reference (store_buffer_top)
0xffff91432a08   168  ldr x1, [x16]
0xffff91432a0c   172  str x2, [x1], #8
0xffff91432a10   176  str x1, [x16]
0xffff91432a14   180  tst x1, #0x1ffff
0xffff91432a18   184  b.eq #+0x8 (addr 0xffff91432a20)
0xffff91432a1c   188  ret
0xffff91432a20   192  sub csp, jssp, #0x8 (8)
0xffff91432a24   196  str lr, [jssp, #-8]!
0xffff91432a28   200  ldr x17, pc+1568 (addr 0x0000ffff91433048)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91432a2c   204  blr x17
0xffff91432a30   208  ldr lr, [jssp], #8
0xffff91432a34   212  ret
0xffff91432a38   216  ldr x1, [x2]
0xffff91432a3c   220  sub csp, jssp, #0x10 (16)
0xffff91432a40   224  stp x4, x2, [jssp, #-16]!
0xffff91432a44   228  ubfx x16, x1, #8, #12
0xffff91432a48   232  and x0, x1, #0xfffffffffff00000
0xffff91432a4c   236  add x0, x0, x16, lsl #2
0xffff91432a50   240  ubfx x4, x1, #3, #5
0xffff91432a54   244  ldr x2, [x0, #360]
0xffff91432a58   248  lsr x2, x2, x4
0xffff91432a5c   252  tbz w2, #0, #+0x40 (addr 0xffff91432a9c)
0xffff91432a60   256  ldp x4, x2, [jssp], #16
0xffff91432a64   260  ldp x3, x0, [jssp], #16
0xffff91432a68   264  ldr x16, pc+1512 (addr 0x0000ffff91433050)    ;; external reference (store_buffer_top)
0xffff91432a6c   268  ldr x1, [x16]
0xffff91432a70   272  str x2, [x1], #8
0xffff91432a74   276  str x1, [x16]
0xffff91432a78   280  tst x1, #0x1ffff
0xffff91432a7c   284  b.eq #+0x8 (addr 0xffff91432a84)
0xffff91432a80   288  ret
0xffff91432a84   292  sub csp, jssp, #0x8 (8)
0xffff91432a88   296  str lr, [jssp, #-8]!
0xffff91432a8c   300  ldr x17, pc+1484 (addr 0x0000ffff91433058)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91432a90   304  blr x17
0xffff91432a94   308  ldr lr, [jssp], #8
0xffff91432a98   312  ret
0xffff91432a9c   316  ldp x4, x2, [jssp], #16
0xffff91432aa0   320  sub csp, jssp, #0x78 (120)
0xffff91432aa4   324  stp x14, x15, [jssp, #-32]!
0xffff91432aa8   328  stp x18, lr, [jssp, #16]
0xffff91432aac   332  stp x10, x11, [jssp, #-32]!
0xffff91432ab0   336  stp x12, x13, [jssp, #16]
0xffff91432ab4   340  stp x6, x7, [jssp, #-32]!
0xffff91432ab8   344  stp x8, x9, [jssp, #16]
0xffff91432abc   348  stp x2, x4, [jssp, #-24]!
0xffff91432ac0   352  str x5, [jssp, #16]
0xffff91432ac4   356  sub csp, jssp, #0xb0 (176)
0xffff91432ac8   360  stp d26, d27, [jssp, #-32]!
0xffff91432acc   364  stp d28, d29, [jssp, #16]
0xffff91432ad0   368  stp d22, d23, [jssp, #-32]!
0xffff91432ad4   372  stp d24, d25, [jssp, #16]
0xffff91432ad8   376  stp d18, d19, [jssp, #-32]!
0xffff91432adc   380  stp d20, d21, [jssp, #16]
0xffff91432ae0   384  stp d6, d7, [jssp, #-32]!
0xffff91432ae4   388  stp d16, d17, [jssp, #16]
0xffff91432ae8   392  stp d2, d3, [jssp, #-32]!
0xffff91432aec   396  stp d4, d5, [jssp, #16]
0xffff91432af0   400  stp d0, d1, [jssp, #-16]!
0xffff91432af4   404  mov x0, x4
0xffff91432af8   408  mov x1, x2
0xffff91432afc   412  ldr x2, pc+1380 (addr 0x0000ffff91433060)    ;; external reference (isolate)
0xffff91432b00   416  ldr x16, pc+1384 (addr 0x0000ffff91433068)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91432b04   420  and csp, jssp, #0xfffffffffffffff0
0xffff91432b08   424  blr x16
0xffff91432b0c   428  ldp d2, d3, [jssp, #16]
0xffff91432b10   432  ldp d0, d1, [jssp], #32
0xffff91432b14   436  ldp d6, d7, [jssp, #16]
0xffff91432b18   440  ldp d4, d5, [jssp], #32
0xffff91432b1c   444  ldp d18, d19, [jssp, #16]
0xffff91432b20   448  ldp d16, d17, [jssp], #32
0xffff91432b24   452  ldp d22, d23, [jssp, #16]
0xffff91432b28   456  ldp d20, d21, [jssp], #32
0xffff91432b2c   460  ldp d26, d27, [jssp, #16]
0xffff91432b30   464  ldp d24, d25, [jssp], #32
0xffff91432b34   468  ldp d28, d29, [jssp], #16
0xffff91432b38   472  ldp x5, x6, [jssp, #16]
0xffff91432b3c   476  ldp x2, x4, [jssp], #32
0xffff91432b40   480  ldp x9, x10, [jssp, #16]
0xffff91432b44   484  ldp x7, x8, [jssp], #32
0xffff91432b48   488  ldp x13, x14, [jssp, #16]
0xffff91432b4c   492  ldp x11, x12, [jssp], #32
0xffff91432b50   496  ldr lr, [jssp, #16]
0xffff91432b54   500  ldp x15, x18, [jssp], #24
0xffff91432b58   504  ldp x3, x0, [jssp], #16
0xffff91432b5c   508  ldr x16, pc+1300 (addr 0x0000ffff91433070)    ;; external reference (store_buffer_top)
0xffff91432b60   512  ldr x1, [x16]
0xffff91432b64   516  str x2, [x1], #8
0xffff91432b68   520  str x1, [x16]
0xffff91432b6c   524  tst x1, #0x1ffff
0xffff91432b70   528  b.eq #+0x8 (addr 0xffff91432b78)
0xffff91432b74   532  ret
0xffff91432b78   536  sub csp, jssp, #0x8 (8)
0xffff91432b7c   540  str lr, [jssp, #-8]!
0xffff91432b80   544  ldr x17, pc+1272 (addr 0x0000ffff91433078)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91432b84   548  blr x17
0xffff91432b88   552  ldr lr, [jssp], #8
0xffff91432b8c   556  ret
0xffff91432b90   560  and x1, x4, #0xfffffffffff00000
0xffff91432b94   564  ldr x0, [x1, #104]
0xffff91432b98   568  subs x0, x0, #0x1 (1)
0xffff91432b9c   572  str x0, [x1, #104]
0xffff91432ba0   576  b.mi #+0x64 (addr 0xffff91432c04)
0xffff91432ba4   580  ubfx x16, x4, #8, #12
0xffff91432ba8   584  and x1, x4, #0xfffffffffff00000
0xffff91432bac   588  add x1, x1, x16, lsl #2
0xffff91432bb0   592  ubfx x0, x4, #3, #5
0xffff91432bb4   596  ldr x1, [x1, #360]
0xffff91432bb8   600  lsr x1, x1, x0
0xffff91432bbc   604  tbz w1, #0, #+0x8 (addr 0xffff91432bc4)
0xffff91432bc0   608  tbnz w1, #1, #+0xc (addr 0xffff91432bcc)
0xffff91432bc4   612  ldp x3, x0, [jssp], #16
0xffff91432bc8   616  ret
0xffff91432bcc   620  ldr x1, [x2]
0xffff91432bd0   624  sub csp, jssp, #0x10 (16)
0xffff91432bd4   628  stp x4, x2, [jssp, #-16]!
0xffff91432bd8   632  ubfx x16, x1, #8, #12
0xffff91432bdc   636  and x0, x1, #0xfffffffffff00000
0xffff91432be0   640  add x0, x0, x16, lsl #2
0xffff91432be4   644  ubfx x4, x1, #3, #5
0xffff91432be8   648  ldr x2, [x0, #360]
0xffff91432bec   652  lsr x2, x2, x4
0xffff91432bf0   656  tbz w2, #0, #+0x10 (addr 0xffff91432c00)
0xffff91432bf4   660  ldp x4, x2, [jssp], #16
0xffff91432bf8   664  ldp x3, x0, [jssp], #16
0xffff91432bfc   668  ret
0xffff91432c00   672  ldp x4, x2, [jssp], #16
0xffff91432c04   676  sub csp, jssp, #0x78 (120)
0xffff91432c08   680  stp x14, x15, [jssp, #-32]!
0xffff91432c0c   684  stp x18, lr, [jssp, #16]
0xffff91432c10   688  stp x10, x11, [jssp, #-32]!
0xffff91432c14   692  stp x12, x13, [jssp, #16]
0xffff91432c18   696  stp x6, x7, [jssp, #-32]!
0xffff91432c1c   700  stp x8, x9, [jssp, #16]
0xffff91432c20   704  stp x2, x4, [jssp, #-24]!
0xffff91432c24   708  str x5, [jssp, #16]
0xffff91432c28   712  sub csp, jssp, #0xb0 (176)
0xffff91432c2c   716  stp d26, d27, [jssp, #-32]!
0xffff91432c30   720  stp d28, d29, [jssp, #16]
0xffff91432c34   724  stp d22, d23, [jssp, #-32]!
0xffff91432c38   728  stp d24, d25, [jssp, #16]
0xffff91432c3c   732  stp d18, d19, [jssp, #-32]!
0xffff91432c40   736  stp d20, d21, [jssp, #16]
0xffff91432c44   740  stp d6, d7, [jssp, #-32]!
0xffff91432c48   744  stp d16, d17, [jssp, #16]
0xffff91432c4c   748  stp d2, d3, [jssp, #-32]!
0xffff91432c50   752  stp d4, d5, [jssp, #16]
0xffff91432c54   756  stp d0, d1, [jssp, #-16]!
0xffff91432c58   760  mov x0, x4
0xffff91432c5c   764  mov x1, x2
0xffff91432c60   768  ldr x2, pc+1056 (addr 0x0000ffff91433080)    ;; external reference (isolate)
0xffff91432c64   772  ldr x16, pc+1060 (addr 0x0000ffff91433088)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91432c68   776  and csp, jssp, #0xfffffffffffffff0
0xffff91432c6c   780  blr x16
0xffff91432c70   784  ldp d2, d3, [jssp, #16]
0xffff91432c74   788  ldp d0, d1, [jssp], #32
0xffff91432c78   792  ldp d6, d7, [jssp, #16]
0xffff91432c7c   796  ldp d4, d5, [jssp], #32
0xffff91432c80   800  ldp d18, d19, [jssp, #16]
0xffff91432c84   804  ldp d16, d17, [jssp], #32
0xffff91432c88   808  ldp d22, d23, [jssp, #16]
0xffff91432c8c   812  ldp d20, d21, [jssp], #32
0xffff91432c90   816  ldp d26, d27, [jssp, #16]
0xffff91432c94   820  ldp d24, d25, [jssp], #32
0xffff91432c98   824  ldp d28, d29, [jssp], #16
0xffff91432c9c   828  ldp x5, x6, [jssp, #16]
0xffff91432ca0   832  ldp x2, x4, [jssp], #32
0xffff91432ca4   836  ldp x9, x10, [jssp, #16]
0xffff91432ca8   840  ldp x7, x8, [jssp], #32
0xffff91432cac   844  ldp x13, x14, [jssp, #16]
0xffff91432cb0   848  ldp x11, x12, [jssp], #32
0xffff91432cb4   852  ldr lr, [jssp, #16]
0xffff91432cb8   856  ldp x15, x18, [jssp], #24
0xffff91432cbc   860  ldp x3, x0, [jssp], #16
0xffff91432cc0   864  ret
0xffff91432cc4   868  sub csp, jssp, #0x10 (16)
0xffff91432cc8   872  stp x3, x0, [jssp, #-16]!
0xffff91432ccc   876  ldr x1, [x2]
0xffff91432cd0   880  and x16, x1, #0xfffffffffff00000
0xffff91432cd4   884  ldr x16, [x16, #8]
0xffff91432cd8   888  tst x16, #0x18
0xffff91432cdc   892  b.eq #+0x1f8 (addr 0xffff91432ed4)
0xffff91432ce0   896  and x16, x4, #0xfffffffffff00000
0xffff91432ce4   900  ldr x16, [x16, #8]
0xffff91432ce8   904  tst x16, #0x18
0xffff91432cec   908  b.ne #+0x1e8 (addr 0xffff91432ed4)
0xffff91432cf0   912  and x1, x4, #0xfffffffffff00000
0xffff91432cf4   916  ldr x0, [x1, #104]
0xffff91432cf8   920  subs x0, x0, #0x1 (1)
0xffff91432cfc   924  str x0, [x1, #104]
0xffff91432d00   928  b.mi #+0xe4 (addr 0xffff91432de4)
0xffff91432d04   932  ubfx x16, x4, #8, #12
0xffff91432d08   936  and x1, x4, #0xfffffffffff00000
0xffff91432d0c   940  add x1, x1, x16, lsl #2
0xffff91432d10   944  ubfx x0, x4, #3, #5
0xffff91432d14   948  ldr x1, [x1, #360]
0xffff91432d18   952  lsr x1, x1, x0
0xffff91432d1c   956  tbz w1, #0, #+0x8 (addr 0xffff91432d24)
0xffff91432d20   960  tbnz w1, #1, #+0x3c (addr 0xffff91432d5c)
0xffff91432d24   964  ldp x3, x0, [jssp], #16
0xffff91432d28   968  ldr x16, pc+872 (addr 0x0000ffff91433090)    ;; external reference (store_buffer_top)
0xffff91432d2c   972  ldr x1, [x16]
0xffff91432d30   976  str x2, [x1], #8
0xffff91432d34   980  str x1, [x16]
0xffff91432d38   984  tst x1, #0x1ffff
0xffff91432d3c   988  b.eq #+0x8 (addr 0xffff91432d44)
0xffff91432d40   992  ret
0xffff91432d44   996  sub csp, jssp, #0x8 (8)
0xffff91432d48  1000  str lr, [jssp, #-8]!
0xffff91432d4c  1004  ldr x17, pc+844 (addr 0x0000ffff91433098)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91432d50  1008  blr x17
0xffff91432d54  1012  ldr lr, [jssp], #8
0xffff91432d58  1016  ret
0xffff91432d5c  1020  ldr x1, [x2]
0xffff91432d60  1024  and x0, x1, #0xfffffffffff00000
0xffff91432d64  1028  ldr x0, [x0, #8]
0xffff91432d68  1032  tbz w0, #6, #+0x18 (addr 0xffff91432d80)
0xffff91432d6c  1036  and x0, x4, #0xfffffffffff00000
0xffff91432d70  1040  ldr x0, [x0, #8]
0xffff91432d74  1044  movz x16, #0x58
0xffff91432d78  1048  tst x0, x16
0xffff91432d7c  1052  b.eq #+0x68 (addr 0xffff91432de4)
0xffff91432d80  1056  sub csp, jssp, #0x10 (16)
0xffff91432d84  1060  stp x4, x2, [jssp, #-16]!
0xffff91432d88  1064  ubfx x16, x1, #8, #12
0xffff91432d8c  1068  and x0, x1, #0xfffffffffff00000
0xffff91432d90  1072  add x0, x0, x16, lsl #2
0xffff91432d94  1076  ubfx x4, x1, #3, #5
0xffff91432d98  1080  ldr x2, [x0, #360]
0xffff91432d9c  1084  lsr x2, x2, x4
0xffff91432da0  1088  tbz w2, #0, #+0x40 (addr 0xffff91432de0)
0xffff91432da4  1092  ldp x4, x2, [jssp], #16
0xffff91432da8  1096  ldp x3, x0, [jssp], #16
0xffff91432dac  1100  ldr x16, pc+756 (addr 0x0000ffff914330a0)    ;; external reference (store_buffer_top)
0xffff91432db0  1104  ldr x1, [x16]
0xffff91432db4  1108  str x2, [x1], #8
0xffff91432db8  1112  str x1, [x16]
0xffff91432dbc  1116  tst x1, #0x1ffff
0xffff91432dc0  1120  b.eq #+0x8 (addr 0xffff91432dc8)
0xffff91432dc4  1124  ret
0xffff91432dc8  1128  sub csp, jssp, #0x8 (8)
0xffff91432dcc  1132  str lr, [jssp, #-8]!
0xffff91432dd0  1136  ldr x17, pc+728 (addr 0x0000ffff914330a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91432dd4  1140  blr x17
0xffff91432dd8  1144  ldr lr, [jssp], #8
0xffff91432ddc  1148  ret
0xffff91432de0  1152  ldp x4, x2, [jssp], #16
0xffff91432de4  1156  sub csp, jssp, #0x78 (120)
0xffff91432de8  1160  stp x14, x15, [jssp, #-32]!
0xffff91432dec  1164  stp x18, lr, [jssp, #16]
0xffff91432df0  1168  stp x10, x11, [jssp, #-32]!
0xffff91432df4  1172  stp x12, x13, [jssp, #16]
0xffff91432df8  1176  stp x6, x7, [jssp, #-32]!
0xffff91432dfc  1180  stp x8, x9, [jssp, #16]
0xffff91432e00  1184  stp x2, x4, [jssp, #-24]!
0xffff91432e04  1188  str x5, [jssp, #16]
0xffff91432e08  1192  sub csp, jssp, #0xb0 (176)
0xffff91432e0c  1196  stp d26, d27, [jssp, #-32]!
0xffff91432e10  1200  stp d28, d29, [jssp, #16]
0xffff91432e14  1204  stp d22, d23, [jssp, #-32]!
0xffff91432e18  1208  stp d24, d25, [jssp, #16]
0xffff91432e1c  1212  stp d18, d19, [jssp, #-32]!
0xffff91432e20  1216  stp d20, d21, [jssp, #16]
0xffff91432e24  1220  stp d6, d7, [jssp, #-32]!
0xffff91432e28  1224  stp d16, d17, [jssp, #16]
0xffff91432e2c  1228  stp d2, d3, [jssp, #-32]!
0xffff91432e30  1232  stp d4, d5, [jssp, #16]
0xffff91432e34  1236  stp d0, d1, [jssp, #-16]!
0xffff91432e38  1240  mov x0, x4
0xffff91432e3c  1244  mov x1, x2
0xffff91432e40  1248  ldr x2, pc+624 (addr 0x0000ffff914330b0)    ;; external reference (isolate)
0xffff91432e44  1252  ldr x16, pc+628 (addr 0x0000ffff914330b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91432e48  1256  and csp, jssp, #0xfffffffffffffff0
0xffff91432e4c  1260  blr x16
0xffff91432e50  1264  ldp d2, d3, [jssp, #16]
0xffff91432e54  1268  ldp d0, d1, [jssp], #32
0xffff91432e58  1272  ldp d6, d7, [jssp, #16]
0xffff91432e5c  1276  ldp d4, d5, [jssp], #32
0xffff91432e60  1280  ldp d18, d19, [jssp, #16]
0xffff91432e64  1284  ldp d16, d17, [jssp], #32
0xffff91432e68  1288  ldp d22, d23, [jssp, #16]
0xffff91432e6c  1292  ldp d20, d21, [jssp], #32
0xffff91432e70  1296  ldp d26, d27, [jssp, #16]
0xffff91432e74  1300  ldp d24, d25, [jssp], #32
0xffff91432e78  1304  ldp d28, d29, [jssp], #16
0xffff91432e7c  1308  ldp x5, x6, [jssp, #16]
0xffff91432e80  1312  ldp x2, x4, [jssp], #32
0xffff91432e84  1316  ldp x9, x10, [jssp, #16]
0xffff91432e88  1320  ldp x7, x8, [jssp], #32
0xffff91432e8c  1324  ldp x13, x14, [jssp, #16]
0xffff91432e90  1328  ldp x11, x12, [jssp], #32
0xffff91432e94  1332  ldr lr, [jssp, #16]
0xffff91432e98  1336  ldp x15, x18, [jssp], #24
0xffff91432e9c  1340  ldp x3, x0, [jssp], #16
0xffff91432ea0  1344  ldr x16, pc+544 (addr 0x0000ffff914330c0)    ;; external reference (store_buffer_top)
0xffff91432ea4  1348  ldr x1, [x16]
0xffff91432ea8  1352  str x2, [x1], #8
0xffff91432eac  1356  str x1, [x16]
0xffff91432eb0  1360  tst x1, #0x1ffff
0xffff91432eb4  1364  b.eq #+0x8 (addr 0xffff91432ebc)
0xffff91432eb8  1368  ret
0xffff91432ebc  1372  sub csp, jssp, #0x8 (8)
0xffff91432ec0  1376  str lr, [jssp, #-8]!
0xffff91432ec4  1380  ldr x17, pc+516 (addr 0x0000ffff914330c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91432ec8  1384  blr x17
0xffff91432ecc  1388  ldr lr, [jssp], #8
0xffff91432ed0  1392  ret
0xffff91432ed4  1396  and x1, x4, #0xfffffffffff00000
0xffff91432ed8  1400  ldr x0, [x1, #104]
0xffff91432edc  1404  subs x0, x0, #0x1 (1)
0xffff91432ee0  1408  str x0, [x1, #104]
0xffff91432ee4  1412  b.mi #+0x84 (addr 0xffff91432f68)
0xffff91432ee8  1416  ubfx x16, x4, #8, #12
0xffff91432eec  1420  and x1, x4, #0xfffffffffff00000
0xffff91432ef0  1424  add x1, x1, x16, lsl #2
0xffff91432ef4  1428  ubfx x0, x4, #3, #5
0xffff91432ef8  1432  ldr x1, [x1, #360]
0xffff91432efc  1436  lsr x1, x1, x0
0xffff91432f00  1440  tbz w1, #0, #+0x8 (addr 0xffff91432f08)
0xffff91432f04  1444  tbnz w1, #1, #+0xc (addr 0xffff91432f10)
0xffff91432f08  1448  ldp x3, x0, [jssp], #16
0xffff91432f0c  1452  ret
0xffff91432f10  1456  ldr x1, [x2]
0xffff91432f14  1460  and x0, x1, #0xfffffffffff00000
0xffff91432f18  1464  ldr x0, [x0, #8]
0xffff91432f1c  1468  tbz w0, #6, #+0x18 (addr 0xffff91432f34)
0xffff91432f20  1472  and x0, x4, #0xfffffffffff00000
0xffff91432f24  1476  ldr x0, [x0, #8]
0xffff91432f28  1480  movz x16, #0x58
0xffff91432f2c  1484  tst x0, x16
0xffff91432f30  1488  b.eq #+0x38 (addr 0xffff91432f68)
0xffff91432f34  1492  sub csp, jssp, #0x10 (16)
0xffff91432f38  1496  stp x4, x2, [jssp, #-16]!
0xffff91432f3c  1500  ubfx x16, x1, #8, #12
0xffff91432f40  1504  and x0, x1, #0xfffffffffff00000
0xffff91432f44  1508  add x0, x0, x16, lsl #2
0xffff91432f48  1512  ubfx x4, x1, #3, #5
0xffff91432f4c  1516  ldr x2, [x0, #360]
0xffff91432f50  1520  lsr x2, x2, x4
0xffff91432f54  1524  tbz w2, #0, #+0x10 (addr 0xffff91432f64)
0xffff91432f58  1528  ldp x4, x2, [jssp], #16
0xffff91432f5c  1532  ldp x3, x0, [jssp], #16
0xffff91432f60  1536  ret
0xffff91432f64  1540  ldp x4, x2, [jssp], #16
0xffff91432f68  1544  sub csp, jssp, #0x78 (120)
0xffff91432f6c  1548  stp x14, x15, [jssp, #-32]!
0xffff91432f70  1552  stp x18, lr, [jssp, #16]
0xffff91432f74  1556  stp x10, x11, [jssp, #-32]!
0xffff91432f78  1560  stp x12, x13, [jssp, #16]
0xffff91432f7c  1564  stp x6, x7, [jssp, #-32]!
0xffff91432f80  1568  stp x8, x9, [jssp, #16]
0xffff91432f84  1572  stp x2, x4, [jssp, #-24]!
0xffff91432f88  1576  str x5, [jssp, #16]
0xffff91432f8c  1580  sub csp, jssp, #0xb0 (176)
0xffff91432f90  1584  stp d26, d27, [jssp, #-32]!
0xffff91432f94  1588  stp d28, d29, [jssp, #16]
0xffff91432f98  1592  stp d22, d23, [jssp, #-32]!
0xffff91432f9c  1596  stp d24, d25, [jssp, #16]
0xffff91432fa0  1600  stp d18, d19, [jssp, #-32]!
0xffff91432fa4  1604  stp d20, d21, [jssp, #16]
0xffff91432fa8  1608  stp d6, d7, [jssp, #-32]!
0xffff91432fac  1612  stp d16, d17, [jssp, #16]
0xffff91432fb0  1616  stp d2, d3, [jssp, #-32]!
0xffff91432fb4  1620  stp d4, d5, [jssp, #16]
0xffff91432fb8  1624  stp d0, d1, [jssp, #-16]!
0xffff91432fbc  1628  mov x0, x4
0xffff91432fc0  1632  mov x1, x2
0xffff91432fc4  1636  ldr x2, pc+268 (addr 0x0000ffff914330d0)    ;; external reference (isolate)
0xffff91432fc8  1640  ldr x16, pc+272 (addr 0x0000ffff914330d8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91432fcc  1644  and csp, jssp, #0xfffffffffffffff0
0xffff91432fd0  1648  blr x16
0xffff91432fd4  1652  ldp d2, d3, [jssp, #16]
0xffff91432fd8  1656  ldp d0, d1, [jssp], #32
0xffff91432fdc  1660  ldp d6, d7, [jssp, #16]
0xffff91432fe0  1664  ldp d4, d5, [jssp], #32
0xffff91432fe4  1668  ldp d18, d19, [jssp, #16]
0xffff91432fe8  1672  ldp d16, d17, [jssp], #32
0xffff91432fec  1676  ldp d22, d23, [jssp, #16]
0xffff91432ff0  1680  ldp d20, d21, [jssp], #32
0xffff91432ff4  1684  ldp d26, d27, [jssp, #16]
0xffff91432ff8  1688  ldp d24, d25, [jssp], #32
0xffff91432ffc  1692  ldp d28, d29, [jssp], #16
0xffff91433000  1696  ldp x5, x6, [jssp, #16]
0xffff91433004  1700  ldp x2, x4, [jssp], #32
0xffff91433008  1704  ldp x9, x10, [jssp, #16]
0xffff9143300c  1708  ldp x7, x8, [jssp], #32
0xffff91433010  1712  ldp x13, x14, [jssp, #16]
0xffff91433014  1716  ldp x11, x12, [jssp], #32
0xffff91433018  1720  ldr lr, [jssp, #16]
0xffff9143301c  1724  ldp x15, x18, [jssp], #24
0xffff91433020  1728  ldp x3, x0, [jssp], #16
0xffff91433024  1732  ret
0xffff91433028  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9143302c  1740  d63f03e0       constant
0xffff91433030  1744  4117f8c0       constant
0xffff91433034  1748  00000000       constant
0xffff91433038  1752  914065a0       constant
0xffff9143303c  1756  0000ffff       constant
0xffff91433040  1760  4117f8c0       constant
0xffff91433044  1764  00000000       constant
0xffff91433048  1768  914065a0       constant
0xffff9143304c  1772  0000ffff       constant
0xffff91433050  1776  4117f8c0       constant
0xffff91433054  1780  00000000       constant
0xffff91433058  1784  914065a0       constant
0xffff9143305c  1788  0000ffff       constant
0xffff91433060  1792  4117e2d0       constant
0xffff91433064  1796  00000000       constant
0xffff91433068  1800  00c2d958       constant
0xffff9143306c  1804  00000000       constant
0xffff91433070  1808  4117f8c0       constant
0xffff91433074  1812  00000000       constant
0xffff91433078  1816  914065a0       constant
0xffff9143307c  1820  0000ffff       constant
0xffff91433080  1824  4117e2d0       constant
0xffff91433084  1828  00000000       constant
0xffff91433088  1832  00c2d958       constant
0xffff9143308c  1836  00000000       constant
0xffff91433090  1840  4117f8c0       constant
0xffff91433094  1844  00000000       constant
0xffff91433098  1848  914065a0       constant
0xffff9143309c  1852  0000ffff       constant
0xffff914330a0  1856  4117f8c0       constant
0xffff914330a4  1860  00000000       constant
0xffff914330a8  1864  914065a0       constant
0xffff914330ac  1868  0000ffff       constant
0xffff914330b0  1872  4117e2d0       constant
0xffff914330b4  1876  00000000       constant
0xffff914330b8  1880  00c2d958       constant
0xffff914330bc  1884  00000000       constant
0xffff914330c0  1888  4117f8c0       constant
0xffff914330c4  1892  00000000       constant
0xffff914330c8  1896  914065a0       constant
0xffff914330cc  1900  0000ffff       constant
0xffff914330d0  1904  4117e2d0       constant
0xffff914330d4  1908  00000000       constant
0xffff914330d8  1912  00c2d958       constant
0xffff914330dc  1916  00000000       constant


RelocInfo (size = 65)
0xffff91432968  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9143298c  code target (STUB)  (0xffff914065a0)
0xffff91432a04  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91432a28  code target (STUB)  (0xffff914065a0)
0xffff91432a68  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91432a8c  code target (STUB)  (0xffff914065a0)
0xffff91432afc  external reference (isolate)  (0x4117e2d0)
0xffff91432b00  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91432b5c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91432b80  code target (STUB)  (0xffff914065a0)
0xffff91432c60  external reference (isolate)  (0x4117e2d0)
0xffff91432c64  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91432d28  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91432d4c  code target (STUB)  (0xffff914065a0)
0xffff91432dac  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91432dd0  code target (STUB)  (0xffff914065a0)
0xffff91432e40  external reference (isolate)  (0x4117e2d0)
0xffff91432e44  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91432ea0  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91432ec4  code target (STUB)  (0xffff914065a0)
0xffff91432fc4  external reference (isolate)  (0x4117e2d0)
0xffff91432fc8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91433028  constant pool (size 184)


kind = STUB
major_key = FastCloneShallowArrayStub
name = FastCloneShallowArrayStub
compiler = crankshaft
Instructions (size = 1902)
0xffff91433140     0  ldur x0, [x3, #47]
0xffff91433144     4  asr x4, x2, #32
0xffff91433148     8  add x5, x0, #0x17 (23)
0xffff9143314c    12  ldr x6, [x5, w4, sxtw #3]
0xffff91433150    16  ldr x0, pc+1456 (addr 0x0000ffff91433700)    ;; object: 0x49b04241 <undefined>
0xffff91433154    20  cmp x6, x0
0xffff91433158    24  b.eq #+0x33c (addr 0xffff91433494)
0xffff9143315c    28  ldur x0, [x6, #7]
0xffff91433160    32  ldur x1, [x0, #15]
0xffff91433164    36  ldur w2, [x1, #11]
0xffff91433168    40  cbz w2, #+0x2c0 (addr 0xffff91433428)
0xffff9143316c    44  ldur x3, [x1, #-1]
0xffff91433170    48  ldr x16, pc+1432 (addr 0x0000ffff91433708)    ;; object: 0x36404361 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91433174    52  cmp x3, x16
0xffff91433178    56  b.eq #+0x24c (addr 0xffff914333c4)
0xffff9143317c    60  ldur x1, [x1, #-1]
0xffff91433180    64  ldr x16, pc+1424 (addr 0x0000ffff91433710)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91433184    68  cmp x1, x16
0xffff91433188    72  b.eq #+0x120 (addr 0xffff914332a8)
0xffff9143318c    76  lsl w1, w2, #3
0xffff91433190    80  add w1, w1, #0x10 (16)
0xffff91433194    84  movz x3, #0xf2c0
0xffff91433198    88  movk x3, #0x4117, lsl #16
0xffff9143319c    92  ldp x4, x2, [x3]
0xffff914331a0    96  adds x16, x4, #0x30 (48)
0xffff914331a4   100  ccmp x16, x2, #nzCv, lo
0xffff914331a8   104  b.hi #+0x2f0 (addr 0xffff91433498)
0xffff914331ac   108  str x16, [x3]
0xffff914331b0   112  orr x4, x4, #0x1
0xffff914331b4   116  ldur x2, [x0, #-1]
0xffff914331b8   120  stur x2, [x4, #-1]
0xffff914331bc   124  ldr x2, pc+1372 (addr 0x0000ffff91433718)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914331c0   128  stur x2, [x4, #7]
0xffff914331c4   132  ldr x2, pc+1372 (addr 0x0000ffff91433720)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914331c8   136  stur x2, [x4, #15]
0xffff914331cc   140  movz x2, #0x0
0xffff914331d0   144  stur x2, [x4, #23]
0xffff914331d4   148  add x2, x4, #0x20 (32)
0xffff914331d8   152  ldr x3, pc+1360 (addr 0x0000ffff91433728)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914331dc   156  stur x3, [x2, #-1]
0xffff914331e0   160  stur x6, [x2, #7]
0xffff914331e4   164  ldur w2, [x6, #35]
0xffff914331e8   168  add w2, w2, #0x1 (1)
0xffff914331ec   172  lsl x2, x2, #32
0xffff914331f0   176  stur x2, [x6, #31]
0xffff914331f4   180  sxtw x1, w1
0xffff914331f8   184  movz x2, #0xf2c0
0xffff914331fc   188  movk x2, #0x4117, lsl #16
0xffff91433200   192  ldp x5, x16, [x2]
0xffff91433204   196  adds x3, x5, x1
0xffff91433208   200  ccmp x3, x16, #nzCv, lo
0xffff9143320c   204  b.hi #+0x2f0 (addr 0xffff914334fc)
0xffff91433210   208  str x3, [x2]
0xffff91433214   212  orr x5, x5, #0x1
0xffff91433218   216  mov x1, x5
0xffff9143321c   220  stur x1, [x4, #15]
0xffff91433220   224  add x2, x4, #0xf (15)
0xffff91433224   228  and x1, x4, #0xfffffffffff00000
0xffff91433228   232  ldr x1, [x1, #8]
0xffff9143322c   236  tbz w1, #2, #+0x18 (addr 0xffff91433244)
0xffff91433230   240  sub csp, jssp, #0x8 (8)
0xffff91433234   244  str lr, [jssp, #-8]!
0xffff91433238   248  ldr x16, pc+1272 (addr 0x0000ffff91433730)    ;; code: STUB, RecordWriteStub, minor: 67620
0xffff9143323c   252  blr x16
0xffff91433240   256  ldr lr, [jssp], #8
0xffff91433244   260  ldur x1, [x0, #15]
0xffff91433248   264  ldur x2, [x1, #-1]
0xffff9143324c   268  stur x2, [x5, #-1]
0xffff91433250   272  ldur w2, [x1, #11]
0xffff91433254   276  lsl x2, x2, #32
0xffff91433258   280  stur x2, [x5, #7]
0xffff9143325c   284  ldur w0, [x0, #27]
0xffff91433260   288  lsl x2, x0, #32
0xffff91433264   292  stur x2, [x4, #23]
0xffff91433268   296  ldr d0, pc+1168 (addr 0x0000ffff914336f8)
0xffff9143326c   300  ldur w2, [x5, #11]
0xffff91433270   304  cmp w0, w2
0xffff91433274   308  b.ge #+0x14 (addr 0xffff91433288)
0xffff91433278   312  sub w2, w2, #0x1 (1)
0xffff9143327c   316  add x3, x5, #0xf (15)
0xffff91433280   320  str d0, [x3, w2, sxtw #3]
0xffff91433284   324  b #-0x14 (addr 0xffff91433270)
0xffff91433288   328  cmp w0, #0x0 (0)
0xffff9143328c   332  b.le #+0x200 (addr 0xffff9143348c)
0xffff91433290   336  sub w0, w0, #0x1 (1)
0xffff91433294   340  add x2, x1, #0xf (15)
0xffff91433298   344  ldr d0, [x2, w0, sxtw #3]
0xffff9143329c   348  add x2, x5, #0xf (15)
0xffff914332a0   352  str d0, [x2, w0, sxtw #3]
0xffff914332a4   356  b #-0x1c (addr 0xffff91433288)
0xffff914332a8   360  lsl w1, w2, #3
0xffff914332ac   364  add w1, w1, #0x10 (16)
0xffff914332b0   368  movz x3, #0xf2c0
0xffff914332b4   372  movk x3, #0x4117, lsl #16
0xffff914332b8   376  ldp x4, x2, [x3]
0xffff914332bc   380  adds x16, x4, #0x30 (48)
0xffff914332c0   384  ccmp x16, x2, #nzCv, lo
0xffff914332c4   388  b.hi #+0x29c (addr 0xffff91433560)
0xffff914332c8   392  str x16, [x3]
0xffff914332cc   396  orr x4, x4, #0x1
0xffff914332d0   400  ldur x2, [x0, #-1]
0xffff914332d4   404  stur x2, [x4, #-1]
0xffff914332d8   408  ldr x2, pc+1120 (addr 0x0000ffff91433738)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914332dc   412  stur x2, [x4, #7]
0xffff914332e0   416  ldr x2, pc+1120 (addr 0x0000ffff91433740)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914332e4   420  stur x2, [x4, #15]
0xffff914332e8   424  movz x2, #0x0
0xffff914332ec   428  stur x2, [x4, #23]
0xffff914332f0   432  add x2, x4, #0x20 (32)
0xffff914332f4   436  ldr x3, pc+1108 (addr 0x0000ffff91433748)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914332f8   440  stur x3, [x2, #-1]
0xffff914332fc   444  stur x6, [x2, #7]
0xffff91433300   448  ldur w2, [x6, #35]
0xffff91433304   452  add w2, w2, #0x1 (1)
0xffff91433308   456  lsl x2, x2, #32
0xffff9143330c   460  stur x2, [x6, #31]
0xffff91433310   464  sxtw x1, w1
0xffff91433314   468  movz x2, #0xf2c0
0xffff91433318   472  movk x2, #0x4117, lsl #16
0xffff9143331c   476  ldp x5, x16, [x2]
0xffff91433320   480  adds x3, x5, x1
0xffff91433324   484  ccmp x3, x16, #nzCv, lo
0xffff91433328   488  b.hi #+0x29c (addr 0xffff914335c4)
0xffff9143332c   492  str x3, [x2]
0xffff91433330   496  orr x5, x5, #0x1
0xffff91433334   500  mov x1, x5
0xffff91433338   504  stur x1, [x4, #15]
0xffff9143333c   508  add x2, x4, #0xf (15)
0xffff91433340   512  and x1, x4, #0xfffffffffff00000
0xffff91433344   516  ldr x1, [x1, #8]
0xffff91433348   520  tbz w1, #2, #+0x18 (addr 0xffff91433360)
0xffff9143334c   524  sub csp, jssp, #0x8 (8)
0xffff91433350   528  str lr, [jssp, #-8]!
0xffff91433354   532  ldr x16, pc+1020 (addr 0x0000ffff91433750)    ;; code: STUB, RecordWriteStub, minor: 67620
0xffff91433358   536  blr x16
0xffff9143335c   540  ldr lr, [jssp], #8
0xffff91433360   544  ldur x1, [x0, #15]
0xffff91433364   548  ldur x2, [x1, #-1]
0xffff91433368   552  stur x2, [x5, #-1]
0xffff9143336c   556  ldur w2, [x1, #11]
0xffff91433370   560  lsl x2, x2, #32
0xffff91433374   564  stur x2, [x5, #7]
0xffff91433378   568  ldur w0, [x0, #27]
0xffff9143337c   572  lsl x2, x0, #32
0xffff91433380   576  stur x2, [x4, #23]
0xffff91433384   580  ldur w2, [x5, #11]
0xffff91433388   584  cmp w0, w2
0xffff9143338c   588  b.ge #+0x18 (addr 0xffff914333a4)
0xffff91433390   592  sub w2, w2, #0x1 (1)
0xffff91433394   596  ldr x3, pc+964 (addr 0x0000ffff91433758)    ;; object: 0x49b04519 <the hole>
0xffff91433398   600  add x6, x5, #0xf (15)
0xffff9143339c   604  str x3, [x6, w2, sxtw #3]
0xffff914333a0   608  b #-0x18 (addr 0xffff91433388)
0xffff914333a4   612  cmp w0, #0x0 (0)
0xffff914333a8   616  b.le #+0xe4 (addr 0xffff9143348c)
0xffff914333ac   620  sub w0, w0, #0x1 (1)
0xffff914333b0   624  add x2, x1, #0xf (15)
0xffff914333b4   628  ldr x3, [x2, w0, sxtw #3]
0xffff914333b8   632  add x2, x5, #0xf (15)
0xffff914333bc   636  str x3, [x2, w0, sxtw #3]
0xffff914333c0   640  b #-0x1c (addr 0xffff914333a4)
0xffff914333c4   644  movz x3, #0xf2c0
0xffff914333c8   648  movk x3, #0x4117, lsl #16
0xffff914333cc   652  ldp x4, x2, [x3]
0xffff914333d0   656  adds x16, x4, #0x30 (48)
0xffff914333d4   660  ccmp x16, x2, #nzCv, lo
0xffff914333d8   664  b.hi #+0x250 (addr 0xffff91433628)
0xffff914333dc   668  str x16, [x3]
0xffff914333e0   672  orr x4, x4, #0x1
0xffff914333e4   676  ldur x2, [x0, #-1]
0xffff914333e8   680  ldur w0, [x0, #27]
0xffff914333ec   684  stur x2, [x4, #-1]
0xffff914333f0   688  ldr x2, pc+880 (addr 0x0000ffff91433760)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914333f4   692  stur x2, [x4, #7]
0xffff914333f8   696  stur x1, [x4, #15]
0xffff914333fc   700  lsl x0, x0, #32
0xffff91433400   704  stur x0, [x4, #23]
0xffff91433404   708  add x0, x4, #0x20 (32)
0xffff91433408   712  ldr x1, pc+864 (addr 0x0000ffff91433768)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9143340c   716  stur x1, [x0, #-1]
0xffff91433410   720  stur x6, [x0, #7]
0xffff91433414   724  ldur w0, [x6, #35]
0xffff91433418   728  add w0, w0, #0x1 (1)
0xffff9143341c   732  lsl x0, x0, #32
0xffff91433420   736  stur x0, [x6, #31]
0xffff91433424   740  b #+0x68 (addr 0xffff9143348c)
0xffff91433428   744  movz x2, #0xf2c0
0xffff9143342c   748  movk x2, #0x4117, lsl #16
0xffff91433430   752  ldp x3, x1, [x2]
0xffff91433434   756  adds x16, x3, #0x30 (48)
0xffff91433438   760  ccmp x16, x1, #nzCv, lo
0xffff9143343c   764  b.hi #+0x250 (addr 0xffff9143368c)
0xffff91433440   768  str x16, [x2]
0xffff91433444   772  orr x3, x3, #0x1
0xffff91433448   776  ldur x0, [x0, #-1]
0xffff9143344c   780  stur x0, [x3, #-1]
0xffff91433450   784  ldr x0, pc+800 (addr 0x0000ffff91433770)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91433454   788  stur x0, [x3, #7]
0xffff91433458   792  ldr x0, pc+800 (addr 0x0000ffff91433778)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9143345c   796  stur x0, [x3, #15]
0xffff91433460   800  movz x0, #0x0
0xffff91433464   804  stur x0, [x3, #23]
0xffff91433468   808  add x0, x3, #0x20 (32)
0xffff9143346c   812  ldr x1, pc+788 (addr 0x0000ffff91433780)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91433470   816  stur x1, [x0, #-1]
0xffff91433474   820  stur x6, [x0, #7]
0xffff91433478   824  ldur w0, [x6, #35]
0xffff9143347c   828  add w0, w0, #0x1 (1)
0xffff91433480   832  lsl x0, x0, #32
0xffff91433484   836  stur x0, [x6, #31]
0xffff91433488   840  mov x4, x3
0xffff9143348c   844  mov x0, x4
0xffff91433490   848  ret
0xffff91433494   852  b #+0x384 (addr 0xffff91433818)
0xffff91433498   856  sub csp, jssp, #0x10 (16)
0xffff9143349c   860  stp fp, lr, [jssp, #-16]!
0xffff914334a0   864  movz fp, #0xa00000000
0xffff914334a4   868  sub csp, jssp, #0x8 (8)
0xffff914334a8   872  str fp, [jssp, #-8]!
0xffff914334ac   876  add fp, jssp, #0x8 (8)
0xffff914334b0   880  movz x4, #0x0
0xffff914334b4   884  mov x16, lr
0xffff914334b8   888  ldr x17, pc+720 (addr 0x0000ffff91433788)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914334bc   892  blr x17
0xffff914334c0   896  movz x0, #0x3000000000
0xffff914334c4   900  movz x10, #0x0
0xffff914334c8   904  sub csp, jssp, #0x10 (16)
0xffff914334cc   908  stp x10, x0, [jssp, #-16]!
0xffff914334d0   912  movz x0, #0x2
0xffff914334d4   916  movz x1, #0x5b88
0xffff914334d8   920  movk x1, #0xe2, lsl #16
0xffff914334dc   924  ldr x16, pc+692 (addr 0x0000ffff91433790)    ;; code: STUB, CEntryStub, minor: 5
0xffff914334e0   928  blr x16
0xffff914334e4   932  str x0, [jssp, #32]
0xffff914334e8   936  ldr x16, pc+688 (addr 0x0000ffff91433798)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914334ec   940  blr x16
0xffff914334f0   944  ldr lr, [jssp, #16]
0xffff914334f4   948  ldp xzr, fp, [jssp], #24
0xffff914334f8   952  b #-0x344 (addr 0xffff914331b4)
0xffff914334fc   956  sub csp, jssp, #0x10 (16)
0xffff91433500   960  stp fp, lr, [jssp, #-16]!
0xffff91433504   964  movz fp, #0xa00000000
0xffff91433508   968  sub csp, jssp, #0x8 (8)
0xffff9143350c   972  str fp, [jssp, #-8]!
0xffff91433510   976  add fp, jssp, #0x8 (8)
0xffff91433514   980  movz x5, #0x0
0xffff91433518   984  mov x16, lr
0xffff9143351c   988  ldr x17, pc+644 (addr 0x0000ffff914337a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91433520   992  blr x17
0xffff91433524   996  lsl x0, x1, #32
0xffff91433528  1000  movz x10, #0x100000000
0xffff9143352c  1004  sub csp, jssp, #0x10 (16)
0xffff91433530  1008  stp x10, x0, [jssp, #-16]!
0xffff91433534  1012  movz x0, #0x2
0xffff91433538  1016  movz x1, #0x5b88
0xffff9143353c  1020  movk x1, #0xe2, lsl #16
0xffff91433540  1024  ldr x16, pc+616 (addr 0x0000ffff914337a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91433544  1028  blr x16
0xffff91433548  1032  str x0, [jssp, #40]
0xffff9143354c  1036  ldr x16, pc+612 (addr 0x0000ffff914337b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91433550  1040  blr x16
0xffff91433554  1044  ldr lr, [jssp, #16]
0xffff91433558  1048  ldp xzr, fp, [jssp], #24
0xffff9143355c  1052  b #-0x344 (addr 0xffff91433218)
0xffff91433560  1056  sub csp, jssp, #0x10 (16)
0xffff91433564  1060  stp fp, lr, [jssp, #-16]!
0xffff91433568  1064  movz fp, #0xa00000000
0xffff9143356c  1068  sub csp, jssp, #0x8 (8)
0xffff91433570  1072  str fp, [jssp, #-8]!
0xffff91433574  1076  add fp, jssp, #0x8 (8)
0xffff91433578  1080  movz x4, #0x0
0xffff9143357c  1084  mov x16, lr
0xffff91433580  1088  ldr x17, pc+568 (addr 0x0000ffff914337b8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91433584  1092  blr x17
0xffff91433588  1096  movz x0, #0x3000000000
0xffff9143358c  1100  movz x10, #0x0
0xffff91433590  1104  sub csp, jssp, #0x10 (16)
0xffff91433594  1108  stp x10, x0, [jssp, #-16]!
0xffff91433598  1112  movz x0, #0x2
0xffff9143359c  1116  movz x1, #0x5b88
0xffff914335a0  1120  movk x1, #0xe2, lsl #16
0xffff914335a4  1124  ldr x16, pc+540 (addr 0x0000ffff914337c0)    ;; code: STUB, CEntryStub, minor: 5
0xffff914335a8  1128  blr x16
0xffff914335ac  1132  str x0, [jssp, #32]
0xffff914335b0  1136  ldr x16, pc+536 (addr 0x0000ffff914337c8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914335b4  1140  blr x16
0xffff914335b8  1144  ldr lr, [jssp, #16]
0xffff914335bc  1148  ldp xzr, fp, [jssp], #24
0xffff914335c0  1152  b #-0x2f0 (addr 0xffff914332d0)
0xffff914335c4  1156  sub csp, jssp, #0x10 (16)
0xffff914335c8  1160  stp fp, lr, [jssp, #-16]!
0xffff914335cc  1164  movz fp, #0xa00000000
0xffff914335d0  1168  sub csp, jssp, #0x8 (8)
0xffff914335d4  1172  str fp, [jssp, #-8]!
0xffff914335d8  1176  add fp, jssp, #0x8 (8)
0xffff914335dc  1180  movz x5, #0x0
0xffff914335e0  1184  mov x16, lr
0xffff914335e4  1188  ldr x17, pc+492 (addr 0x0000ffff914337d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914335e8  1192  blr x17
0xffff914335ec  1196  lsl x0, x1, #32
0xffff914335f0  1200  movz x10, #0x0
0xffff914335f4  1204  sub csp, jssp, #0x10 (16)
0xffff914335f8  1208  stp x10, x0, [jssp, #-16]!
0xffff914335fc  1212  movz x0, #0x2
0xffff91433600  1216  movz x1, #0x5b88
0xffff91433604  1220  movk x1, #0xe2, lsl #16
0xffff91433608  1224  ldr x16, pc+464 (addr 0x0000ffff914337d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff9143360c  1228  blr x16
0xffff91433610  1232  str x0, [jssp, #40]
0xffff91433614  1236  ldr x16, pc+460 (addr 0x0000ffff914337e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91433618  1240  blr x16
0xffff9143361c  1244  ldr lr, [jssp, #16]
0xffff91433620  1248  ldp xzr, fp, [jssp], #24
0xffff91433624  1252  b #-0x2f0 (addr 0xffff91433334)
0xffff91433628  1256  sub csp, jssp, #0x10 (16)
0xffff9143362c  1260  stp fp, lr, [jssp, #-16]!
0xffff91433630  1264  movz fp, #0xa00000000
0xffff91433634  1268  sub csp, jssp, #0x8 (8)
0xffff91433638  1272  str fp, [jssp, #-8]!
0xffff9143363c  1276  add fp, jssp, #0x8 (8)
0xffff91433640  1280  movz x4, #0x0
0xffff91433644  1284  mov x16, lr
0xffff91433648  1288  ldr x17, pc+416 (addr 0x0000ffff914337e8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9143364c  1292  blr x17
0xffff91433650  1296  movz x0, #0x3000000000
0xffff91433654  1300  movz x10, #0x0
0xffff91433658  1304  sub csp, jssp, #0x10 (16)
0xffff9143365c  1308  stp x10, x0, [jssp, #-16]!
0xffff91433660  1312  movz x0, #0x2
0xffff91433664  1316  movz x1, #0x5b88
0xffff91433668  1320  movk x1, #0xe2, lsl #16
0xffff9143366c  1324  ldr x16, pc+388 (addr 0x0000ffff914337f0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91433670  1328  blr x16
0xffff91433674  1332  str x0, [jssp, #32]
0xffff91433678  1336  ldr x16, pc+384 (addr 0x0000ffff914337f8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9143367c  1340  blr x16
0xffff91433680  1344  ldr lr, [jssp, #16]
0xffff91433684  1348  ldp xzr, fp, [jssp], #24
0xffff91433688  1352  b #-0x2a4 (addr 0xffff914333e4)
0xffff9143368c  1356  sub csp, jssp, #0x10 (16)
0xffff91433690  1360  stp fp, lr, [jssp, #-16]!
0xffff91433694  1364  movz fp, #0xa00000000
0xffff91433698  1368  sub csp, jssp, #0x8 (8)
0xffff9143369c  1372  str fp, [jssp, #-8]!
0xffff914336a0  1376  add fp, jssp, #0x8 (8)
0xffff914336a4  1380  movz x3, #0x0
0xffff914336a8  1384  mov x16, lr
0xffff914336ac  1388  ldr x17, pc+340 (addr 0x0000ffff91433800)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914336b0  1392  blr x17
0xffff914336b4  1396  movz x0, #0x3000000000
0xffff914336b8  1400  movz x10, #0x0
0xffff914336bc  1404  sub csp, jssp, #0x10 (16)
0xffff914336c0  1408  stp x10, x0, [jssp, #-16]!
0xffff914336c4  1412  movz x0, #0x2
0xffff914336c8  1416  movz x1, #0x5b88
0xffff914336cc  1420  movk x1, #0xe2, lsl #16
0xffff914336d0  1424  ldr x16, pc+312 (addr 0x0000ffff91433808)    ;; code: STUB, CEntryStub, minor: 5
0xffff914336d4  1428  blr x16
0xffff914336d8  1432  str x0, [jssp, #24]
0xffff914336dc  1436  ldr x16, pc+308 (addr 0x0000ffff91433810)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914336e0  1440  blr x16
0xffff914336e4  1444  ldr lr, [jssp, #16]
0xffff914336e8  1448  ldp xzr, fp, [jssp], #24
0xffff914336ec  1452  b #-0x2a4 (addr 0xffff91433448)
0xffff914336f0  1456  5800093f       constant pool begin (num_const = 73)    ;; constant pool
0xffff914336f4  1460  d63f03e0       constant
0xffff914336f8  1464  fff7ffff       constant
0xffff914336fc  1468  fff7ffff       constant
0xffff91433700  1472  49b04241       constant
0xffff91433704  1476  00000000       constant
0xffff91433708  1480  36404361       constant
0xffff9143370c  1484  00000000       constant
0xffff91433710  1488  36404259       constant
0xffff91433714  1492  00000000       constant
0xffff91433718  1496  49b04201       constant
0xffff9143371c  1500  00000000       constant
0xffff91433720  1504  49b04201       constant
0xffff91433724  1508  00000000       constant
0xffff91433728  1512  36405d81       constant
0xffff9143372c  1516  00000000       constant
0xffff91433730  1520  91432960       constant
0xffff91433734  1524  0000ffff       constant
0xffff91433738  1528  49b04201       constant
0xffff9143373c  1532  00000000       constant
0xffff91433740  1536  49b04201       constant
0xffff91433744  1540  00000000       constant
0xffff91433748  1544  36405d81       constant
0xffff9143374c  1548  00000000       constant
0xffff91433750  1552  91432960       constant
0xffff91433754  1556  0000ffff       constant
0xffff91433758  1560  49b04519       constant
0xffff9143375c  1564  00000000       constant
0xffff91433760  1568  49b04201       constant
0xffff91433764  1572  00000000       constant
0xffff91433768  1576  36405d81       constant
0xffff9143376c  1580  00000000       constant
0xffff91433770  1584  49b04201       constant
0xffff91433774  1588  00000000       constant
0xffff91433778  1592  49b04201       constant
0xffff9143377c  1596  00000000       constant
0xffff91433780  1600  36405d81       constant
0xffff91433784  1604  00000000       constant
0xffff91433788  1608  91406820       constant
0xffff9143378c  1612  0000ffff       constant
0xffff91433790  1616  91406260       constant
0xffff91433794  1620  0000ffff       constant
0xffff91433798  1624  914068e0       constant
0xffff9143379c  1628  0000ffff       constant
0xffff914337a0  1632  91406820       constant
0xffff914337a4  1636  0000ffff       constant
0xffff914337a8  1640  91406260       constant
0xffff914337ac  1644  0000ffff       constant
0xffff914337b0  1648  914068e0       constant
0xffff914337b4  1652  0000ffff       constant
0xffff914337b8  1656  91406820       constant
0xffff914337bc  1660  0000ffff       constant
0xffff914337c0  1664  91406260       constant
0xffff914337c4  1668  0000ffff       constant
0xffff914337c8  1672  914068e0       constant
0xffff914337cc  1676  0000ffff       constant
0xffff914337d0  1680  91406820       constant
0xffff914337d4  1684  0000ffff       constant
0xffff914337d8  1688  91406260       constant
0xffff914337dc  1692  0000ffff       constant
0xffff914337e0  1696  914068e0       constant
0xffff914337e4  1700  0000ffff       constant
0xffff914337e8  1704  91406820       constant
0xffff914337ec  1708  0000ffff       constant
0xffff914337f0  1712  91406260       constant
0xffff914337f4  1716  0000ffff       constant
0xffff914337f8  1720  914068e0       constant
0xffff914337fc  1724  0000ffff       constant
0xffff91433800  1728  91406820       constant
0xffff91433804  1732  0000ffff       constant
0xffff91433808  1736  91406260       constant
0xffff9143380c  1740  0000ffff       constant
0xffff91433810  1744  914068e0       constant
0xffff91433814  1748  0000ffff       constant
0xffff91433818  1752  movz x16, #0x0
0xffff9143381c  1756  sub csp, jssp, #0x10 (16)
0xffff91433820  1760  stp fp, lr, [jssp, #-16]!
0xffff91433824  1764  bl #+0x4 (addr 0xffff91433828)
0xffff91433828  1768  movz x17, #0xa00000000
0xffff9143382c  1772  sub csp, jssp, #0x10 (16)
0xffff91433830  1776  stp x17, cp, [jssp, #-16]!
0xffff91433834  1780  add fp, jssp, #0x10 (16)
0xffff91433838  1784  ldr x17, pc+24 (addr 0x0000ffff91433850)    ;; lazy deoptimization bailout 0
0xffff9143383c  1788  add x17, x17, x16
0xffff91433840  1792  br x17
0xffff91433844  1796  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91433848  1800  d63f03e0       constant
0xffff9143384c  1804  d503201f       constant
0xffff91433850  1808  91206000       constant
0xffff91433854  1812  0000ffff       constant


Safepoints (size = 86)
0xffff914334e4   932  000 | x0 | x4 | x6 | x27 (sp -> fp)  <none> argc: 2
0xffff91433548  1032  000 | x0 | x4 | x5 | x27 (sp -> fp)  <none> argc: 2
0xffff914335ac  1132  000 | x0 | x4 | x6 | x27 (sp -> fp)  <none> argc: 2
0xffff91433610  1232  000 | x0 | x4 | x5 | x27 (sp -> fp)  <none> argc: 2
0xffff91433674  1332  000 | x0 | x1 | x4 | x6 | x27 (sp -> fp)  <none> argc: 2
0xffff914336d8  1432  000 | x0 | x3 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 65)
0xffff91433150  embedded object  (0x49b04241 <undefined>)
0xffff91433170  embedded object  (0x36404361 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91433180  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914331bc  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914331c4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914331d8  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91433238  code target (STUB)  (0xffff91432960)
0xffff914332d8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914332e0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914332f4  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91433354  code target (STUB)  (0xffff91432960)
0xffff91433394  embedded object  (0x49b04519 <the hole>)
0xffff914333f0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91433408  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91433450  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91433458  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9143346c  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914334b8  code target (STUB)  (0xffff91406820)
0xffff914334dc  code target (STUB)  (0xffff91406260)
0xffff914334e8  code target (STUB)  (0xffff914068e0)
0xffff9143351c  code target (STUB)  (0xffff91406820)
0xffff91433540  code target (STUB)  (0xffff91406260)
0xffff9143354c  code target (STUB)  (0xffff914068e0)
0xffff91433580  code target (STUB)  (0xffff91406820)
0xffff914335a4  code target (STUB)  (0xffff91406260)
0xffff914335b0  code target (STUB)  (0xffff914068e0)
0xffff914335e4  code target (STUB)  (0xffff91406820)
0xffff91433608  code target (STUB)  (0xffff91406260)
0xffff91433614  code target (STUB)  (0xffff914068e0)
0xffff91433648  code target (STUB)  (0xffff91406820)
0xffff9143366c  code target (STUB)  (0xffff91406260)
0xffff91433678  code target (STUB)  (0xffff914068e0)
0xffff914336ac  code target (STUB)  (0xffff91406820)
0xffff914336d0  code target (STUB)  (0xffff91406260)
0xffff914336dc  code target (STUB)  (0xffff914068e0)
0xffff914336f0  constant pool (size 296)
0xffff91433838  runtime entry
0xffff91433844  constant pool (size 20)


kind = KEYED_STORE_IC
major_key = VectorKeyedStoreICTrampolineStub
ic_state = GENERIC
extra_ic_state = 0
name = VectorKeyedStoreICTrampolineStub
compiler = unknown
Instructions (size = 384)
0xffff91433920     0  ldur x3, [fp, #-16]
0xffff91433924     4  ldur x3, [x3, #31]
0xffff91433928     8  ldur x3, [x3, #87]
0xffff9143392c    12  add x5, x3, x4, asr #29
0xffff91433930    16  ldur x5, [x5, #15]
0xffff91433934    20  tbz w1, #0, #+0x140 (addr 0xffff91433a74)
0xffff91433938    24  ldur x6, [x1, #-1]
0xffff9143393c    28  ldur x7, [x5, #7]
0xffff91433940    32  cmp x7, x6
0xffff91433944    36  b.ne #+0x14 (addr 0xffff91433958)
0xffff91433948    40  add x5, x3, x4, asr #29
0xffff9143394c    44  ldur x5, [x5, #23]
0xffff91433950    48  add x5, x5, #0x5f (95)
0xffff91433954    52  br x5
0xffff91433958    56  ldur x7, [x5, #-1]
0xffff9143395c    60  ldr x16, [x26, #224]
0xffff91433960    64  cmp x7, x16
0xffff91433964    68  b.ne #+0x68 (addr 0xffff914339cc)
0xffff91433968    72  ldur x8, [x5, #7]
0xffff9143396c    76  add x8, x5, x8, asr #29
0xffff91433970    80  add x8, x8, #0xf (15)
0xffff91433974    84  add x5, x5, #0xf (15)
0xffff91433978    88  ldr x7, [x5]
0xffff9143397c    92  ldur x7, [x7, #7]
0xffff91433980    96  cmp x6, x7
0xffff91433984   100  b.ne #+0x38 (addr 0xffff914339bc)
0xffff91433988   104  ldr x8, [x5, #8]
0xffff9143398c   108  ldr x16, [x26, #40]
0xffff91433990   112  cmp x8, x16
0xffff91433994   116  b.ne #+0x10 (addr 0xffff914339a4)
0xffff91433998   120  ldr x5, [x5, #16]
0xffff9143399c   124  add x5, x5, #0x5f (95)
0xffff914339a0   128  br x5
0xffff914339a4   132  ldur x8, [x8, #7]
0xffff914339a8   136  tbz w8, #0, #+0xac (addr 0xffff91433a54)
0xffff914339ac   140  ldr x6, [x5, #16]
0xffff914339b0   144  mov x5, x8
0xffff914339b4   148  add x6, x6, #0x5f (95)
0xffff914339b8   152  br x6
0xffff914339bc   156  add x5, x5, #0x18 (24)
0xffff914339c0   160  cmp x5, x8
0xffff914339c4   164  b.lt #-0x4c (addr 0xffff91433978)
0xffff914339c8   168  b #+0x8c (addr 0xffff91433a54)
0xffff914339cc   172  ldr x16, [x26, #2400]
0xffff914339d0   176  cmp x5, x16
0xffff914339d4   180  b.ne #+0xc (addr 0xffff914339e0)
0xffff914339d8   184  ldr x16, pc+176 (addr 0x0000ffff91433a88)    ;; code: KEYED_STORE_IC, MEGAMORPHIC
0xffff914339dc   188  br x16
0xffff914339e0   192  cmp x2, x5
0xffff914339e4   196  b.ne #+0x70 (addr 0xffff91433a54)
0xffff914339e8   200  add x5, x3, x4, asr #29
0xffff914339ec   204  ldur x5, [x5, #23]
0xffff914339f0   208  ldur x7, [x5, #15]
0xffff914339f4   212  ldur x7, [x7, #7]
0xffff914339f8   216  cmp x6, x7
0xffff914339fc   220  b.ne #+0x10 (addr 0xffff91433a0c)
0xffff91433a00   224  ldur x5, [x5, #23]
0xffff91433a04   228  add x5, x5, #0x5f (95)
0xffff91433a08   232  br x5
0xffff91433a0c   236  ldur x8, [x5, #7]
0xffff91433a10   240  movz x16, #0x200000000
0xffff91433a14   244  cmp x8, x16
0xffff91433a18   248  b.eq #+0x3c (addr 0xffff91433a54)
0xffff91433a1c   252  add x8, x5, x8, asr #29
0xffff91433a20   256  add x8, x8, #0xf (15)
0xffff91433a24   260  add x5, x5, #0x1f (31)
0xffff91433a28   264  ldr x7, [x5]
0xffff91433a2c   268  ldur x7, [x7, #7]
0xffff91433a30   272  cmp x6, x7
0xffff91433a34   276  b.ne #+0x10 (addr 0xffff91433a44)
0xffff91433a38   280  ldr x5, [x5, #8]
0xffff91433a3c   284  add x5, x5, #0x5f (95)
0xffff91433a40   288  br x5
0xffff91433a44   292  add x5, x5, #0x10 (16)
0xffff91433a48   296  cmp x5, x8
0xffff91433a4c   300  b.lt #-0x24 (addr 0xffff91433a28)
0xffff91433a50   304  b #+0x4 (addr 0xffff91433a54)
0xffff91433a54   308  sub csp, jssp, #0x28 (40)
0xffff91433a58   312  stp x4, x0, [jssp, #-32]!
0xffff91433a5c   316  stp x2, x1, [jssp, #16]
0xffff91433a60   320  str x3, [jssp, #-8]!
0xffff91433a64   324  movz x0, #0x5
0xffff91433a68   328  ldr x1, pc+40 (addr 0x0000ffff91433a90)    ;; external reference (Runtime::KeyedStoreIC_Miss)
0xffff91433a6c   332  ldr x16, pc+44 (addr 0x0000ffff91433a98)    ;; code: STUB, CEntryStub, minor: 4
0xffff91433a70   336  br x16
0xffff91433a74   340  ldr x6, [x26, #120]
0xffff91433a78   344  b #-0x13c (addr 0xffff9143393c)
0xffff91433a7c   348  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91433a80   352  d63f03e0       constant
0xffff91433a84   356  d503201f       constant
0xffff91433a88   360  91425500       constant
0xffff91433a8c   364  0000ffff       constant
0xffff91433a90   368  00c88e08       constant
0xffff91433a94   372  00000000       constant
0xffff91433a98   376  91406060       constant
0xffff91433a9c   380  0000ffff       constant


RelocInfo (size = 14)
0xffff914339d8  code target (KEYED_STORE_IC)  (0xffff91425500)
0xffff91433a68  external reference (Runtime::KeyedStoreIC_Miss)  (0xc88e08)
0xffff91433a6c  code target (STUB)  (0xffff91406060)
0xffff91433a7c  constant pool (size 36)


kind = STUB
major_key = ArrayConstructorStub
name = ArrayConstructorStub_More_Than_One
compiler = unknown
Instructions (size = 288)
0xffff91433b00     0  ldur cp, [x1, #39]
0xffff91433b04     4  cmp x3, x1
0xffff91433b08     8  b.ne #+0x98 (addr 0xffff91433ba0)
0xffff91433b0c    12  ldr x16, [x26, #40]
0xffff91433b10    16  cmp x2, x16
0xffff91433b14    20  b.eq #+0x84 (addr 0xffff91433b98)
0xffff91433b18    24  ldursw x3, [x2, #11]
0xffff91433b1c    28  and x3, x3, #0x7fff
0xffff91433b20    32  cbnz x3, #+0xc (addr 0xffff91433b2c)
0xffff91433b24    36  ldr x16, pc+164 (addr 0x0000ffff91433bc8)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 0
0xffff91433b28    40  br x16
0xffff91433b2c    44  cmp x3, #0x1 (1)
0xffff91433b30    48  b.ne #+0xc (addr 0xffff91433b3c)
0xffff91433b34    52  ldr x16, pc+156 (addr 0x0000ffff91433bd0)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 1
0xffff91433b38    56  br x16
0xffff91433b3c    60  cmp x3, #0x4 (4)
0xffff91433b40    64  b.ne #+0xc (addr 0xffff91433b4c)
0xffff91433b44    68  ldr x16, pc+148 (addr 0x0000ffff91433bd8)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 4
0xffff91433b48    72  br x16
0xffff91433b4c    76  cmp x3, #0x5 (5)
0xffff91433b50    80  b.ne #+0xc (addr 0xffff91433b5c)
0xffff91433b54    84  ldr x16, pc+140 (addr 0x0000ffff91433be0)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 5
0xffff91433b58    88  br x16
0xffff91433b5c    92  cmp x3, #0x2 (2)
0xffff91433b60    96  b.ne #+0xc (addr 0xffff91433b6c)
0xffff91433b64   100  ldr x16, pc+132 (addr 0x0000ffff91433be8)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 2
0xffff91433b68   104  br x16
0xffff91433b6c   108  cmp x3, #0x3 (3)
0xffff91433b70   112  b.ne #+0xc (addr 0xffff91433b7c)
0xffff91433b74   116  ldr x16, pc+124 (addr 0x0000ffff91433bf0)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 3
0xffff91433b78   120  br x16
0xffff91433b7c   124  movz x0, #0x9f00000000
0xffff91433b80   128  sub csp, jssp, #0x8 (8)
0xffff91433b84   132  str x0, [jssp, #-8]!
0xffff91433b88   136  movz x0, #0x1
0xffff91433b8c   140  ldr x1, pc+108 (addr 0x0000ffff91433bf8)    ;; external reference (Runtime::Abort)
0xffff91433b90   144  ldr x16, pc+112 (addr 0x0000ffff91433c00)    ;; code: STUB, CEntryStub, minor: 4
0xffff91433b94   148  blr x16
0xffff91433b98   152  ldr x16, pc+112 (addr 0x0000ffff91433c08)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 256
0xffff91433b9c   156  br x16
0xffff91433ba0   160  str x1, [jssp, x0, lsl #3]
0xffff91433ba4   164  add x0, x0, #0x3 (3)
0xffff91433ba8   168  sub csp, jssp, #0x10 (16)
0xffff91433bac   172  stp x2, x3, [jssp, #-16]!
0xffff91433bb0   176  ldr x1, pc+96 (addr 0x0000ffff91433c10)    ;; external reference (Runtime::NewArray)
0xffff91433bb4   180  ldr x16, pc+100 (addr 0x0000ffff91433c18)    ;; code: STUB, CEntryStub, minor: 4
0xffff91433bb8   184  br x16
0xffff91433bbc   188  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff91433bc0   192  d63f03e0       constant
0xffff91433bc4   196  d503201f       constant
0xffff91433bc8   200  91409fe0       constant
0xffff91433bcc   204  0000ffff       constant
0xffff91433bd0   208  9140a560       constant
0xffff91433bd4   212  0000ffff       constant
0xffff91433bd8   216  9140aae0       constant
0xffff91433bdc   220  0000ffff       constant
0xffff91433be0   224  9140ad40       constant
0xffff91433be4   228  0000ffff       constant
0xffff91433be8   232  9140afa0       constant
0xffff91433bec   236  0000ffff       constant
0xffff91433bf0   240  9140b1e0       constant
0xffff91433bf4   244  0000ffff       constant
0xffff91433bf8   248  00eda820       constant
0xffff91433bfc   252  00000000       constant
0xffff91433c00   256  91406060       constant
0xffff91433c04   260  0000ffff       constant
0xffff91433c08   264  9140a300       constant
0xffff91433c0c   268  0000ffff       constant
0xffff91433c10   272  00de2850       constant
0xffff91433c14   276  00000000       constant
0xffff91433c18   280  91406060       constant
0xffff91433c1c   284  0000ffff       constant


RelocInfo (size = 19)
0xffff91433b24  code target (STUB)  (0xffff91409fe0)
0xffff91433b34  code target (STUB)  (0xffff9140a560)
0xffff91433b44  code target (STUB)  (0xffff9140aae0)
0xffff91433b54  code target (STUB)  (0xffff9140ad40)
0xffff91433b64  code target (STUB)  (0xffff9140afa0)
0xffff91433b74  code target (STUB)  (0xffff9140b1e0)
0xffff91433b8c  external reference (Runtime::Abort)  (0xeda820)
0xffff91433b90  code target (STUB)  (0xffff91406060)
0xffff91433b98  code target (STUB)  (0xffff9140a300)
0xffff91433bb0  external reference (Runtime::NewArray)  (0xde2850)
0xffff91433bb4  code target (STUB)  (0xffff91406060)
0xffff91433bbc  constant pool (size 100)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327682
name = CallICStub(args(2), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff91433c80     0  add x4, x2, x3, asr #29
0xffff91433c84     4  ldur x4, [x4, #15]
0xffff91433c88     8  ldur x5, [x4, #7]
0xffff91433c8c    12  cmp x5, x1
0xffff91433c90    16  b.ne #+0x2c (addr 0xffff91433cbc)
0xffff91433c94    20  tbz w1, #0, #+0x28 (addr 0xffff91433cbc)
0xffff91433c98    24  add x2, x2, x3, asr #29
0xffff91433c9c    28  add x2, x2, #0x18 (24)
0xffff91433ca0    32  ldur x3, [x2, #-1]
0xffff91433ca4    36  movz x16, #0x200000000
0xffff91433ca8    40  add x3, x3, x16
0xffff91433cac    44  stur x3, [x2, #-1]
0xffff91433cb0    48  movz x0, #0x2
0xffff91433cb4    52  ldr x16, pc+372 (addr 0x0000ffff91433e28)    ;; code: BUILTIN
0xffff91433cb8    56  br x16
0xffff91433cbc    60  ldr x16, [x26, #2400]
0xffff91433cc0    64  cmp x4, x16
0xffff91433cc4    68  b.eq #+0x78 (addr 0xffff91433d3c)
0xffff91433cc8    72  ldur x5, [x4, #-1]
0xffff91433ccc    76  ldr x16, [x26, #2736]
0xffff91433cd0    80  cmp x5, x16
0xffff91433cd4    84  b.ne #+0x40 (addr 0xffff91433d14)
0xffff91433cd8    88  ldur x5, [cp, #39]
0xffff91433cdc    92  ldur x5, [x5, #95]
0xffff91433ce0    96  cmp x1, x5
0xffff91433ce4   100  b.ne #+0xec (addr 0xffff91433dd0)
0xffff91433ce8   104  movz x0, #0x2
0xffff91433cec   108  add x2, x2, x3, asr #29
0xffff91433cf0   112  add x2, x2, #0x18 (24)
0xffff91433cf4   116  ldur x3, [x2, #-1]
0xffff91433cf8   120  movz x16, #0x200000000
0xffff91433cfc   124  add x3, x3, x16
0xffff91433d00   128  stur x3, [x2, #-1]
0xffff91433d04   132  mov x2, x4
0xffff91433d08   136  mov x3, x1
0xffff91433d0c   140  ldr x16, pc+292 (addr 0x0000ffff91433e30)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff91433d10   144  br x16
0xffff91433d14   148  ldr x16, [x26, #2568]
0xffff91433d18   152  cmp x4, x16
0xffff91433d1c   156  b.eq #+0xb4 (addr 0xffff91433dd0)
0xffff91433d20   160  ldur x5, [x4, #-1]
0xffff91433d24   164  ldrb w5, [x5, #11]
0xffff91433d28   168  cmp x5, #0xc9 (201)
0xffff91433d2c   172  b.ne #+0xa4 (addr 0xffff91433dd0)
0xffff91433d30   176  add x4, x2, x3, asr #29
0xffff91433d34   180  ldr x5, [x26, #2400]
0xffff91433d38   184  stur x5, [x4, #15]
0xffff91433d3c   188  movz x0, #0x2
0xffff91433d40   192  ldr x16, pc+248 (addr 0x0000ffff91433e38)    ;; code: BUILTIN
0xffff91433d44   196  br x16
0xffff91433d48   200  tbz w1, #0, #+0x88 (addr 0xffff91433dd0)
0xffff91433d4c   204  ldur x5, [x1, #-1]
0xffff91433d50   208  ldrb w5, [x5, #11]
0xffff91433d54   212  cmp x5, #0xc9 (201)
0xffff91433d58   216  b.ne #+0x78 (addr 0xffff91433dd0)
0xffff91433d5c   220  ldur x5, [cp, #39]
0xffff91433d60   224  ldur x5, [x5, #95]
0xffff91433d64   228  cmp x1, x5
0xffff91433d68   232  b.eq #+0x68 (addr 0xffff91433dd0)
0xffff91433d6c   236  ldur x4, [x1, #39]
0xffff91433d70   240  ldur x4, [x4, #39]
0xffff91433d74   244  ldur x5, [cp, #39]
0xffff91433d78   248  cmp x4, x5
0xffff91433d7c   252  b.ne #+0x54 (addr 0xffff91433dd0)
0xffff91433d80   256  movz x5, #0x200000000
0xffff91433d84   260  adds x4, x2, x3, asr #29
0xffff91433d88   264  stur x5, [x4, #23]
0xffff91433d8c   268  movz x16, #0xc00000000
0xffff91433d90   272  sub csp, jssp, #0x10 (16)
0xffff91433d94   276  stp fp, lr, [jssp, #-16]!
0xffff91433d98   280  sub csp, jssp, #0x10 (16)
0xffff91433d9c   284  str x16, [jssp, #-8]!
0xffff91433da0   288  ldr x17, pc+160 (addr 0x0000ffff91433e40)    ;; object: 0xffff91433c21 <Code: CALL_IC>
0xffff91433da4   292  sub csp, jssp, #0x10 (16)
0xffff91433da8   296  str x17, [jssp, #-8]!
0xffff91433dac   300  add fp, jssp, #0x10 (16)
0xffff91433db0   304  sub csp, jssp, #0x8 (8)
0xffff91433db4   308  str x1, [jssp, #-8]!
0xffff91433db8   312  ldr x16, pc+144 (addr 0x0000ffff91433e48)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff91433dbc   316  blr x16
0xffff91433dc0   320  ldr x1, [jssp], #8
0xffff91433dc4   324  mov jssp, fp
0xffff91433dc8   328  ldp fp, lr, [jssp], #16
0xffff91433dcc   332  b #-0x11c (addr 0xffff91433cb0)
0xffff91433dd0   336  movz x16, #0xc00000000
0xffff91433dd4   340  sub csp, jssp, #0x10 (16)
0xffff91433dd8   344  stp fp, lr, [jssp, #-16]!
0xffff91433ddc   348  sub csp, jssp, #0x10 (16)
0xffff91433de0   352  str x16, [jssp, #-8]!
0xffff91433de4   356  ldr x17, pc+108 (addr 0x0000ffff91433e50)    ;; object: 0xffff91433c21 <Code: CALL_IC>
0xffff91433de8   360  sub csp, jssp, #0x10 (16)
0xffff91433dec   364  str x17, [jssp, #-8]!
0xffff91433df0   368  add fp, jssp, #0x10 (16)
0xffff91433df4   372  sub csp, jssp, #0x18 (24)
0xffff91433df8   376  stp x3, x2, [jssp, #-24]!
0xffff91433dfc   380  str x1, [jssp, #16]
0xffff91433e00   384  movz x0, #0x3
0xffff91433e04   388  ldr x1, pc+84 (addr 0x0000ffff91433e58)    ;; external reference (Runtime::CallIC_Miss)
0xffff91433e08   392  ldr x16, pc+88 (addr 0x0000ffff91433e60)    ;; code: STUB, CEntryStub, minor: 4
0xffff91433e0c   396  blr x16
0xffff91433e10   400  mov x1, x0
0xffff91433e14   404  mov jssp, fp
0xffff91433e18   408  ldp fp, lr, [jssp], #16
0xffff91433e1c   412  b #-0xe0 (addr 0xffff91433d3c)
0xffff91433e20   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff91433e24   420  d63f03e0       constant
0xffff91433e28   424  9141e600       constant
0xffff91433e2c   428  0000ffff       constant
0xffff91433e30   432  91433b00       constant
0xffff91433e34   436  0000ffff       constant
0xffff91433e38   440  9141f6c0       constant
0xffff91433e3c   444  0000ffff       constant
0xffff91433e40   448  91433c21       constant
0xffff91433e44   452  0000ffff       constant
0xffff91433e48   456  9140ddc0       constant
0xffff91433e4c   460  0000ffff       constant
0xffff91433e50   464  91433c21       constant
0xffff91433e54   468  0000ffff       constant
0xffff91433e58   472  00c86928       constant
0xffff91433e5c   476  00000000       constant
0xffff91433e60   480  91406060       constant
0xffff91433e64   484  0000ffff       constant


RelocInfo (size = 19)
0xffff91433cb4  code target (BUILTIN)  (0xffff9141e600)
0xffff91433d0c  code target (STUB)  (0xffff91433b00)
0xffff91433d40  code target (BUILTIN)  (0xffff9141f6c0)
0xffff91433da0  embedded object  (0xffff91433c21 <Code: CALL_IC>)
0xffff91433db8  code target (STUB)  (0xffff9140ddc0)
0xffff91433de4  embedded object  (0xffff91433c21 <Code: CALL_IC>)
0xffff91433e04  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff91433e08  code target (STUB)  (0xffff91406060)
0xffff91433e20  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327682
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff91433ee0     0  ldur x2, [fp, #-16]
0xffff91433ee4     4  ldur x2, [x2, #31]
0xffff91433ee8     8  ldur x2, [x2, #87]
0xffff91433eec    12  ldr x16, pc+20 (addr 0x0000ffff91433f00)    ;; code: CALL_IC, GENERIC
0xffff91433ef0    16  br x16
0xffff91433ef4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91433ef8    24  d63f03e0       constant
0xffff91433efc    28  d503201f       constant
0xffff91433f00    32  91433c80       constant
0xffff91433f04    36  0000ffff       constant


RelocInfo (size = 7)
0xffff91433eec  code target (CALL_IC)  (0xffff91433c80)
0xffff91433ef4  constant pool (size 20)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327683
name = CallICStub(args(3), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff91433f80     0  add x4, x2, x3, asr #29
0xffff91433f84     4  ldur x4, [x4, #15]
0xffff91433f88     8  ldur x5, [x4, #7]
0xffff91433f8c    12  cmp x5, x1
0xffff91433f90    16  b.ne #+0x2c (addr 0xffff91433fbc)
0xffff91433f94    20  tbz w1, #0, #+0x28 (addr 0xffff91433fbc)
0xffff91433f98    24  add x2, x2, x3, asr #29
0xffff91433f9c    28  add x2, x2, #0x18 (24)
0xffff91433fa0    32  ldur x3, [x2, #-1]
0xffff91433fa4    36  movz x16, #0x200000000
0xffff91433fa8    40  add x3, x3, x16
0xffff91433fac    44  stur x3, [x2, #-1]
0xffff91433fb0    48  movz x0, #0x3
0xffff91433fb4    52  ldr x16, pc+372 (addr 0x0000ffff91434128)    ;; code: BUILTIN
0xffff91433fb8    56  br x16
0xffff91433fbc    60  ldr x16, [x26, #2400]
0xffff91433fc0    64  cmp x4, x16
0xffff91433fc4    68  b.eq #+0x78 (addr 0xffff9143403c)
0xffff91433fc8    72  ldur x5, [x4, #-1]
0xffff91433fcc    76  ldr x16, [x26, #2736]
0xffff91433fd0    80  cmp x5, x16
0xffff91433fd4    84  b.ne #+0x40 (addr 0xffff91434014)
0xffff91433fd8    88  ldur x5, [cp, #39]
0xffff91433fdc    92  ldur x5, [x5, #95]
0xffff91433fe0    96  cmp x1, x5
0xffff91433fe4   100  b.ne #+0xec (addr 0xffff914340d0)
0xffff91433fe8   104  movz x0, #0x3
0xffff91433fec   108  add x2, x2, x3, asr #29
0xffff91433ff0   112  add x2, x2, #0x18 (24)
0xffff91433ff4   116  ldur x3, [x2, #-1]
0xffff91433ff8   120  movz x16, #0x200000000
0xffff91433ffc   124  add x3, x3, x16
0xffff91434000   128  stur x3, [x2, #-1]
0xffff91434004   132  mov x2, x4
0xffff91434008   136  mov x3, x1
0xffff9143400c   140  ldr x16, pc+292 (addr 0x0000ffff91434130)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff91434010   144  br x16
0xffff91434014   148  ldr x16, [x26, #2568]
0xffff91434018   152  cmp x4, x16
0xffff9143401c   156  b.eq #+0xb4 (addr 0xffff914340d0)
0xffff91434020   160  ldur x5, [x4, #-1]
0xffff91434024   164  ldrb w5, [x5, #11]
0xffff91434028   168  cmp x5, #0xc9 (201)
0xffff9143402c   172  b.ne #+0xa4 (addr 0xffff914340d0)
0xffff91434030   176  add x4, x2, x3, asr #29
0xffff91434034   180  ldr x5, [x26, #2400]
0xffff91434038   184  stur x5, [x4, #15]
0xffff9143403c   188  movz x0, #0x3
0xffff91434040   192  ldr x16, pc+248 (addr 0x0000ffff91434138)    ;; code: BUILTIN
0xffff91434044   196  br x16
0xffff91434048   200  tbz w1, #0, #+0x88 (addr 0xffff914340d0)
0xffff9143404c   204  ldur x5, [x1, #-1]
0xffff91434050   208  ldrb w5, [x5, #11]
0xffff91434054   212  cmp x5, #0xc9 (201)
0xffff91434058   216  b.ne #+0x78 (addr 0xffff914340d0)
0xffff9143405c   220  ldur x5, [cp, #39]
0xffff91434060   224  ldur x5, [x5, #95]
0xffff91434064   228  cmp x1, x5
0xffff91434068   232  b.eq #+0x68 (addr 0xffff914340d0)
0xffff9143406c   236  ldur x4, [x1, #39]
0xffff91434070   240  ldur x4, [x4, #39]
0xffff91434074   244  ldur x5, [cp, #39]
0xffff91434078   248  cmp x4, x5
0xffff9143407c   252  b.ne #+0x54 (addr 0xffff914340d0)
0xffff91434080   256  movz x5, #0x200000000
0xffff91434084   260  adds x4, x2, x3, asr #29
0xffff91434088   264  stur x5, [x4, #23]
0xffff9143408c   268  movz x16, #0xc00000000
0xffff91434090   272  sub csp, jssp, #0x10 (16)
0xffff91434094   276  stp fp, lr, [jssp, #-16]!
0xffff91434098   280  sub csp, jssp, #0x10 (16)
0xffff9143409c   284  str x16, [jssp, #-8]!
0xffff914340a0   288  ldr x17, pc+160 (addr 0x0000ffff91434140)    ;; object: 0xffff91433f21 <Code: CALL_IC>
0xffff914340a4   292  sub csp, jssp, #0x10 (16)
0xffff914340a8   296  str x17, [jssp, #-8]!
0xffff914340ac   300  add fp, jssp, #0x10 (16)
0xffff914340b0   304  sub csp, jssp, #0x8 (8)
0xffff914340b4   308  str x1, [jssp, #-8]!
0xffff914340b8   312  ldr x16, pc+144 (addr 0x0000ffff91434148)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff914340bc   316  blr x16
0xffff914340c0   320  ldr x1, [jssp], #8
0xffff914340c4   324  mov jssp, fp
0xffff914340c8   328  ldp fp, lr, [jssp], #16
0xffff914340cc   332  b #-0x11c (addr 0xffff91433fb0)
0xffff914340d0   336  movz x16, #0xc00000000
0xffff914340d4   340  sub csp, jssp, #0x10 (16)
0xffff914340d8   344  stp fp, lr, [jssp, #-16]!
0xffff914340dc   348  sub csp, jssp, #0x10 (16)
0xffff914340e0   352  str x16, [jssp, #-8]!
0xffff914340e4   356  ldr x17, pc+108 (addr 0x0000ffff91434150)    ;; object: 0xffff91433f21 <Code: CALL_IC>
0xffff914340e8   360  sub csp, jssp, #0x10 (16)
0xffff914340ec   364  str x17, [jssp, #-8]!
0xffff914340f0   368  add fp, jssp, #0x10 (16)
0xffff914340f4   372  sub csp, jssp, #0x18 (24)
0xffff914340f8   376  stp x3, x2, [jssp, #-24]!
0xffff914340fc   380  str x1, [jssp, #16]
0xffff91434100   384  movz x0, #0x3
0xffff91434104   388  ldr x1, pc+84 (addr 0x0000ffff91434158)    ;; external reference (Runtime::CallIC_Miss)
0xffff91434108   392  ldr x16, pc+88 (addr 0x0000ffff91434160)    ;; code: STUB, CEntryStub, minor: 4
0xffff9143410c   396  blr x16
0xffff91434110   400  mov x1, x0
0xffff91434114   404  mov jssp, fp
0xffff91434118   408  ldp fp, lr, [jssp], #16
0xffff9143411c   412  b #-0xe0 (addr 0xffff9143403c)
0xffff91434120   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff91434124   420  d63f03e0       constant
0xffff91434128   424  9141e600       constant
0xffff9143412c   428  0000ffff       constant
0xffff91434130   432  91433b00       constant
0xffff91434134   436  0000ffff       constant
0xffff91434138   440  9141f6c0       constant
0xffff9143413c   444  0000ffff       constant
0xffff91434140   448  91433f21       constant
0xffff91434144   452  0000ffff       constant
0xffff91434148   456  9140ddc0       constant
0xffff9143414c   460  0000ffff       constant
0xffff91434150   464  91433f21       constant
0xffff91434154   468  0000ffff       constant
0xffff91434158   472  00c86928       constant
0xffff9143415c   476  00000000       constant
0xffff91434160   480  91406060       constant
0xffff91434164   484  0000ffff       constant


RelocInfo (size = 19)
0xffff91433fb4  code target (BUILTIN)  (0xffff9141e600)
0xffff9143400c  code target (STUB)  (0xffff91433b00)
0xffff91434040  code target (BUILTIN)  (0xffff9141f6c0)
0xffff914340a0  embedded object  (0xffff91433f21 <Code: CALL_IC>)
0xffff914340b8  code target (STUB)  (0xffff9140ddc0)
0xffff914340e4  embedded object  (0xffff91433f21 <Code: CALL_IC>)
0xffff91434104  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff91434108  code target (STUB)  (0xffff91406060)
0xffff91434120  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327683
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff914341e0     0  ldur x2, [fp, #-16]
0xffff914341e4     4  ldur x2, [x2, #31]
0xffff914341e8     8  ldur x2, [x2, #87]
0xffff914341ec    12  ldr x16, pc+20 (addr 0x0000ffff91434200)    ;; code: CALL_IC, GENERIC
0xffff914341f0    16  br x16
0xffff914341f4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914341f8    24  d63f03e0       constant
0xffff914341fc    28  d503201f       constant
0xffff91434200    32  91433f80       constant
0xffff91434204    36  0000ffff       constant


RelocInfo (size = 7)
0xffff914341ec  code target (CALL_IC)  (0xffff91433f80)
0xffff914341f4  constant pool (size 20)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327684
name = CallICStub(args(4), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff91434280     0  add x4, x2, x3, asr #29
0xffff91434284     4  ldur x4, [x4, #15]
0xffff91434288     8  ldur x5, [x4, #7]
0xffff9143428c    12  cmp x5, x1
0xffff91434290    16  b.ne #+0x2c (addr 0xffff914342bc)
0xffff91434294    20  tbz w1, #0, #+0x28 (addr 0xffff914342bc)
0xffff91434298    24  add x2, x2, x3, asr #29
0xffff9143429c    28  add x2, x2, #0x18 (24)
0xffff914342a0    32  ldur x3, [x2, #-1]
0xffff914342a4    36  movz x16, #0x200000000
0xffff914342a8    40  add x3, x3, x16
0xffff914342ac    44  stur x3, [x2, #-1]
0xffff914342b0    48  movz x0, #0x4
0xffff914342b4    52  ldr x16, pc+372 (addr 0x0000ffff91434428)    ;; code: BUILTIN
0xffff914342b8    56  br x16
0xffff914342bc    60  ldr x16, [x26, #2400]
0xffff914342c0    64  cmp x4, x16
0xffff914342c4    68  b.eq #+0x78 (addr 0xffff9143433c)
0xffff914342c8    72  ldur x5, [x4, #-1]
0xffff914342cc    76  ldr x16, [x26, #2736]
0xffff914342d0    80  cmp x5, x16
0xffff914342d4    84  b.ne #+0x40 (addr 0xffff91434314)
0xffff914342d8    88  ldur x5, [cp, #39]
0xffff914342dc    92  ldur x5, [x5, #95]
0xffff914342e0    96  cmp x1, x5
0xffff914342e4   100  b.ne #+0xec (addr 0xffff914343d0)
0xffff914342e8   104  movz x0, #0x4
0xffff914342ec   108  add x2, x2, x3, asr #29
0xffff914342f0   112  add x2, x2, #0x18 (24)
0xffff914342f4   116  ldur x3, [x2, #-1]
0xffff914342f8   120  movz x16, #0x200000000
0xffff914342fc   124  add x3, x3, x16
0xffff91434300   128  stur x3, [x2, #-1]
0xffff91434304   132  mov x2, x4
0xffff91434308   136  mov x3, x1
0xffff9143430c   140  ldr x16, pc+292 (addr 0x0000ffff91434430)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff91434310   144  br x16
0xffff91434314   148  ldr x16, [x26, #2568]
0xffff91434318   152  cmp x4, x16
0xffff9143431c   156  b.eq #+0xb4 (addr 0xffff914343d0)
0xffff91434320   160  ldur x5, [x4, #-1]
0xffff91434324   164  ldrb w5, [x5, #11]
0xffff91434328   168  cmp x5, #0xc9 (201)
0xffff9143432c   172  b.ne #+0xa4 (addr 0xffff914343d0)
0xffff91434330   176  add x4, x2, x3, asr #29
0xffff91434334   180  ldr x5, [x26, #2400]
0xffff91434338   184  stur x5, [x4, #15]
0xffff9143433c   188  movz x0, #0x4
0xffff91434340   192  ldr x16, pc+248 (addr 0x0000ffff91434438)    ;; code: BUILTIN
0xffff91434344   196  br x16
0xffff91434348   200  tbz w1, #0, #+0x88 (addr 0xffff914343d0)
0xffff9143434c   204  ldur x5, [x1, #-1]
0xffff91434350   208  ldrb w5, [x5, #11]
0xffff91434354   212  cmp x5, #0xc9 (201)
0xffff91434358   216  b.ne #+0x78 (addr 0xffff914343d0)
0xffff9143435c   220  ldur x5, [cp, #39]
0xffff91434360   224  ldur x5, [x5, #95]
0xffff91434364   228  cmp x1, x5
0xffff91434368   232  b.eq #+0x68 (addr 0xffff914343d0)
0xffff9143436c   236  ldur x4, [x1, #39]
0xffff91434370   240  ldur x4, [x4, #39]
0xffff91434374   244  ldur x5, [cp, #39]
0xffff91434378   248  cmp x4, x5
0xffff9143437c   252  b.ne #+0x54 (addr 0xffff914343d0)
0xffff91434380   256  movz x5, #0x200000000
0xffff91434384   260  adds x4, x2, x3, asr #29
0xffff91434388   264  stur x5, [x4, #23]
0xffff9143438c   268  movz x16, #0xc00000000
0xffff91434390   272  sub csp, jssp, #0x10 (16)
0xffff91434394   276  stp fp, lr, [jssp, #-16]!
0xffff91434398   280  sub csp, jssp, #0x10 (16)
0xffff9143439c   284  str x16, [jssp, #-8]!
0xffff914343a0   288  ldr x17, pc+160 (addr 0x0000ffff91434440)    ;; object: 0xffff91434221 <Code: CALL_IC>
0xffff914343a4   292  sub csp, jssp, #0x10 (16)
0xffff914343a8   296  str x17, [jssp, #-8]!
0xffff914343ac   300  add fp, jssp, #0x10 (16)
0xffff914343b0   304  sub csp, jssp, #0x8 (8)
0xffff914343b4   308  str x1, [jssp, #-8]!
0xffff914343b8   312  ldr x16, pc+144 (addr 0x0000ffff91434448)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff914343bc   316  blr x16
0xffff914343c0   320  ldr x1, [jssp], #8
0xffff914343c4   324  mov jssp, fp
0xffff914343c8   328  ldp fp, lr, [jssp], #16
0xffff914343cc   332  b #-0x11c (addr 0xffff914342b0)
0xffff914343d0   336  movz x16, #0xc00000000
0xffff914343d4   340  sub csp, jssp, #0x10 (16)
0xffff914343d8   344  stp fp, lr, [jssp, #-16]!
0xffff914343dc   348  sub csp, jssp, #0x10 (16)
0xffff914343e0   352  str x16, [jssp, #-8]!
0xffff914343e4   356  ldr x17, pc+108 (addr 0x0000ffff91434450)    ;; object: 0xffff91434221 <Code: CALL_IC>
0xffff914343e8   360  sub csp, jssp, #0x10 (16)
0xffff914343ec   364  str x17, [jssp, #-8]!
0xffff914343f0   368  add fp, jssp, #0x10 (16)
0xffff914343f4   372  sub csp, jssp, #0x18 (24)
0xffff914343f8   376  stp x3, x2, [jssp, #-24]!
0xffff914343fc   380  str x1, [jssp, #16]
0xffff91434400   384  movz x0, #0x3
0xffff91434404   388  ldr x1, pc+84 (addr 0x0000ffff91434458)    ;; external reference (Runtime::CallIC_Miss)
0xffff91434408   392  ldr x16, pc+88 (addr 0x0000ffff91434460)    ;; code: STUB, CEntryStub, minor: 4
0xffff9143440c   396  blr x16
0xffff91434410   400  mov x1, x0
0xffff91434414   404  mov jssp, fp
0xffff91434418   408  ldp fp, lr, [jssp], #16
0xffff9143441c   412  b #-0xe0 (addr 0xffff9143433c)
0xffff91434420   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff91434424   420  d63f03e0       constant
0xffff91434428   424  9141e600       constant
0xffff9143442c   428  0000ffff       constant
0xffff91434430   432  91433b00       constant
0xffff91434434   436  0000ffff       constant
0xffff91434438   440  9141f6c0       constant
0xffff9143443c   444  0000ffff       constant
0xffff91434440   448  91434221       constant
0xffff91434444   452  0000ffff       constant
0xffff91434448   456  9140ddc0       constant
0xffff9143444c   460  0000ffff       constant
0xffff91434450   464  91434221       constant
0xffff91434454   468  0000ffff       constant
0xffff91434458   472  00c86928       constant
0xffff9143445c   476  00000000       constant
0xffff91434460   480  91406060       constant
0xffff91434464   484  0000ffff       constant


RelocInfo (size = 19)
0xffff914342b4  code target (BUILTIN)  (0xffff9141e600)
0xffff9143430c  code target (STUB)  (0xffff91433b00)
0xffff91434340  code target (BUILTIN)  (0xffff9141f6c0)
0xffff914343a0  embedded object  (0xffff91434221 <Code: CALL_IC>)
0xffff914343b8  code target (STUB)  (0xffff9140ddc0)
0xffff914343e4  embedded object  (0xffff91434221 <Code: CALL_IC>)
0xffff91434404  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff91434408  code target (STUB)  (0xffff91406060)
0xffff91434420  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327684
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff914344e0     0  ldur x2, [fp, #-16]
0xffff914344e4     4  ldur x2, [x2, #31]
0xffff914344e8     8  ldur x2, [x2, #87]
0xffff914344ec    12  ldr x16, pc+20 (addr 0x0000ffff91434500)    ;; code: CALL_IC, GENERIC
0xffff914344f0    16  br x16
0xffff914344f4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914344f8    24  d63f03e0       constant
0xffff914344fc    28  d503201f       constant
0xffff91434500    32  91434280       constant
0xffff91434504    36  0000ffff       constant


RelocInfo (size = 7)
0xffff914344ec  code target (CALL_IC)  (0xffff91434280)
0xffff914344f4  constant pool (size 20)


kind = STUB
major_key = MathPowStub
name = MathPowStub
compiler = unknown
Instructions (size = 344)
0xffff91434580     0  ldp x11, x10, [jssp], #16
0xffff91434584     4  tbz w10, #0, #+0x1c (addr 0xffff914345a0)
0xffff91434588     8  ldur x16, [x10, #-1]
0xffff9143458c    12  ldr x17, [x26, #120]
0xffff91434590    16  cmp x16, x17
0xffff91434594    20  b.ne #+0xd8 (addr 0xffff9143466c)
0xffff91434598    24  ldur d0, [x10, #7]
0xffff9143459c    28  b #+0x8 (addr 0xffff914345a4)
0xffff914345a0    32  scvtf d0, x10, #32
0xffff914345a4    36  tbz w11, #0, #+0x80 (addr 0xffff91434624)
0xffff914345a8    40  ldur x16, [x11, #-1]
0xffff914345ac    44  ldr x17, [x26, #120]
0xffff914345b0    48  cmp x16, x17
0xffff914345b4    52  b.ne #+0xb8 (addr 0xffff9143466c)
0xffff914345b8    56  ldur d1, [x11, #7]
0xffff914345bc    60  fcvtzs x12, d1
0xffff914345c0    64  scvtf d7, x12
0xffff914345c4    68  fcmp d1, d7
0xffff914345c8    72  b.eq #+0x60 (addr 0xffff91434628)
0xffff914345cc    76  fmov d4, #0xe0 (-0.5000)
0xffff914345d0    80  fmov d3, #0x60 (0.5000)
0xffff914345d4    84  fcmp d4, d1
0xffff914345d8    88  fccmp d3, d1, #NZcv, ne
0xffff914345dc    92  b.ne #+0x90 (addr 0xffff9143466c)
0xffff914345e0    96  fadd d0, d0, d15
0xffff914345e4   100  fsub d7, d0, d0
0xffff914345e8   104  fcmp d7, #0.0
0xffff914345ec   108  fabs d6, d0
0xffff914345f0   112  fcsel d0, d6, d0, vs
0xffff914345f4   116  fsqrt d0, d0
0xffff914345f8   120  fcmp d1, #0.0
0xffff914345fc   124  b.ge #+0x88 (addr 0xffff91434684)
0xffff91434600   128  fmov d7, #0x70 (1.0000)
0xffff91434604   132  fdiv d0, d7, d0
0xffff91434608   136  b #+0x7c (addr 0xffff91434684)
0xffff9143460c   140  mov x19, lr
0xffff91434610   144  ldr x16, pc+168 (addr 0x0000ffff914346b8)    ;; external reference (power_double_double_function)
0xffff91434614   148  and csp, jssp, #0xfffffffffffffff0
0xffff91434618   152  blr x16
0xffff9143461c   156  mov lr, x19
0xffff91434620   160  b #+0x64 (addr 0xffff91434684)
0xffff91434624   164  asr x12, x11, #32
0xffff91434628   168  cmp x12, #0x0 (0)
0xffff9143462c   172  cneg x13, x12, mi
0xffff91434630   176  fmov d6, d0
0xffff91434634   180  fmov d2, d0
0xffff91434638   184  fmov d0, #0x70 (1.0000)
0xffff9143463c   188  b #+0x10 (addr 0xffff9143464c)
0xffff91434640   192  fmul d6, d6, d6
0xffff91434644   196  lsr x13, x13, #1
0xffff91434648   200  cbz x13, #+0x10 (addr 0xffff91434658)
0xffff9143464c   204  tbz w13, #0, #-0xc (addr 0xffff91434640)
0xffff91434650   208  fmul d0, d0, d6
0xffff91434654   212  b #-0x14 (addr 0xffff91434640)
0xffff91434658   216  tbz x12, #63, #+0x2c (addr 0xffff91434684)
0xffff9143465c   220  fmov d7, #0x70 (1.0000)
0xffff91434660   224  fdiv d0, d7, d0
0xffff91434664   228  fcmp d0, #0.0
0xffff91434668   232  b.ne #+0x1c (addr 0xffff91434684)
0xffff9143466c   236  sub csp, jssp, #0x10 (16)
0xffff91434670   240  stp x11, x10, [jssp, #-16]!
0xffff91434674   244  movz x0, #0x2
0xffff91434678   248  ldr x1, pc+72 (addr 0x0000ffff914346c0)    ;; external reference (Runtime::MathPowRT)
0xffff9143467c   252  ldr x16, pc+76 (addr 0x0000ffff914346c8)    ;; code: STUB, CEntryStub, minor: 4
0xffff91434680   256  br x16
0xffff91434684   260  ldr x15, pc+76 (addr 0x0000ffff914346d0)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff91434688   264  ldp x0, x14, [x15]
0xffff9143468c   268  adds x16, x0, #0x10 (16)
0xffff91434690   272  ccmp x16, x14, #nzCv, lo
0xffff91434694   276  b.hi #-0x28 (addr 0xffff9143466c)
0xffff91434698   280  str x16, [x15]
0xffff9143469c   284  ldr d30, [x26, #120]
0xffff914346a0   288  stp d30, d0, [x0]
0xffff914346a4   292  orr x0, x0, #0x1
0xffff914346a8   296  ret
0xffff914346ac   300  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff914346b0   304  d63f03e0       constant
0xffff914346b4   308  d503201f       constant
0xffff914346b8   312  009362e0       constant
0xffff914346bc   316  00000000       constant
0xffff914346c0   320  00e39ee8       constant
0xffff914346c4   324  00000000       constant
0xffff914346c8   328  91406060       constant
0xffff914346cc   332  0000ffff       constant
0xffff914346d0   336  4117f2c0       constant
0xffff914346d4   340  00000000       constant


RelocInfo (size = 17)
0xffff91434610  external reference (power_double_double_function)  (0x9362e0)
0xffff91434678  external reference (Runtime::MathPowRT)  (0xe39ee8)
0xffff9143467c  code target (STUB)  (0xffff91406060)
0xffff91434684  external reference (Heap::NewSpaceAllocationTopAddress())  (0x4117f2c0)
0xffff914346ac  constant pool (size 44)


kind = KEYED_LOAD_IC
major_key = KeyedLoadICTrampolineStub
ic_state = GENERIC
extra_ic_state = 0
name = KeyedLoadICTrampolineStub
compiler = unknown
Instructions (size = 368)
0xffff91436c80     0  ldur x3, [fp, #-16]
0xffff91436c84     4  ldur x3, [x3, #31]
0xffff91436c88     8  ldur x3, [x3, #87]
0xffff91436c8c    12  add x4, x3, x0, asr #29
0xffff91436c90    16  ldur x4, [x4, #15]
0xffff91436c94    20  tbz w1, #0, #+0x130 (addr 0xffff91436dc4)
0xffff91436c98    24  ldur x5, [x1, #-1]
0xffff91436c9c    28  ldur x6, [x4, #7]
0xffff91436ca0    32  cmp x6, x5
0xffff91436ca4    36  b.ne #+0x14 (addr 0xffff91436cb8)
0xffff91436ca8    40  add x4, x3, x0, asr #29
0xffff91436cac    44  ldur x4, [x4, #23]
0xffff91436cb0    48  add x4, x4, #0x5f (95)
0xffff91436cb4    52  br x4
0xffff91436cb8    56  ldur x6, [x4, #-1]
0xffff91436cbc    60  ldr x16, [x26, #224]
0xffff91436cc0    64  cmp x6, x16
0xffff91436cc4    68  b.ne #+0x5c (addr 0xffff91436d20)
0xffff91436cc8    72  ldur x6, [x4, #15]
0xffff91436ccc    76  ldur x6, [x6, #7]
0xffff91436cd0    80  cmp x5, x6
0xffff91436cd4    84  b.ne #+0x10 (addr 0xffff91436ce4)
0xffff91436cd8    88  ldur x4, [x4, #23]
0xffff91436cdc    92  add x4, x4, #0x5f (95)
0xffff91436ce0    96  br x4
0xffff91436ce4   100  ldur x7, [x4, #7]
0xffff91436ce8   104  add x7, x4, x7, asr #29
0xffff91436cec   108  add x7, x7, #0xf (15)
0xffff91436cf0   112  add x4, x4, #0x1f (31)
0xffff91436cf4   116  ldr x6, [x4]
0xffff91436cf8   120  ldur x6, [x6, #7]
0xffff91436cfc   124  cmp x5, x6
0xffff91436d00   128  b.ne #+0x10 (addr 0xffff91436d10)
0xffff91436d04   132  ldr x4, [x4, #8]
0xffff91436d08   136  add x4, x4, #0x5f (95)
0xffff91436d0c   140  br x4
0xffff91436d10   144  add x4, x4, #0x10 (16)
0xffff91436d14   148  cmp x4, x7
0xffff91436d18   152  b.lt #-0x24 (addr 0xffff91436cf4)
0xffff91436d1c   156  b #+0x8c (addr 0xffff91436da8)
0xffff91436d20   160  ldr x16, [x26, #2400]
0xffff91436d24   164  cmp x4, x16
0xffff91436d28   168  b.ne #+0xc (addr 0xffff91436d34)
0xffff91436d2c   172  ldr x16, pc+172 (addr 0x0000ffff91436dd8)    ;; code: KEYED_LOAD_IC, MEGAMORPHIC
0xffff91436d30   176  br x16
0xffff91436d34   180  cmp x2, x4
0xffff91436d38   184  b.ne #+0x70 (addr 0xffff91436da8)
0xffff91436d3c   188  add x4, x3, x0, asr #29
0xffff91436d40   192  ldur x4, [x4, #23]
0xffff91436d44   196  ldur x6, [x4, #15]
0xffff91436d48   200  ldur x6, [x6, #7]
0xffff91436d4c   204  cmp x5, x6
0xffff91436d50   208  b.ne #+0x10 (addr 0xffff91436d60)
0xffff91436d54   212  ldur x4, [x4, #23]
0xffff91436d58   216  add x4, x4, #0x5f (95)
0xffff91436d5c   220  br x4
0xffff91436d60   224  ldur x7, [x4, #7]
0xffff91436d64   228  movz x16, #0x200000000
0xffff91436d68   232  cmp x7, x16
0xffff91436d6c   236  b.eq #+0x3c (addr 0xffff91436da8)
0xffff91436d70   240  add x7, x4, x7, asr #29
0xffff91436d74   244  add x7, x7, #0xf (15)
0xffff91436d78   248  add x4, x4, #0x1f (31)
0xffff91436d7c   252  ldr x6, [x4]
0xffff91436d80   256  ldur x6, [x6, #7]
0xffff91436d84   260  cmp x5, x6
0xffff91436d88   264  b.ne #+0x10 (addr 0xffff91436d98)
0xffff91436d8c   268  ldr x4, [x4, #8]
0xffff91436d90   272  add x4, x4, #0x5f (95)
0xffff91436d94   276  br x4
0xffff91436d98   280  add x4, x4, #0x10 (16)
0xffff91436d9c   284  cmp x4, x7
0xffff91436da0   288  b.lt #-0x24 (addr 0xffff91436d7c)
0xffff91436da4   292  b #+0x4 (addr 0xffff91436da8)
0xffff91436da8   296  sub csp, jssp, #0x20 (32)
0xffff91436dac   300  stp x3, x0, [jssp, #-32]!
0xffff91436db0   304  stp x2, x1, [jssp, #16]
0xffff91436db4   308  movz x0, #0x4
0xffff91436db8   312  ldr x1, pc+40 (addr 0x0000ffff91436de0)    ;; external reference (Runtime::KeyedLoadIC_Miss)
0xffff91436dbc   316  ldr x16, pc+44 (addr 0x0000ffff91436de8)    ;; code: STUB, CEntryStub, minor: 4
0xffff91436dc0   320  br x16
0xffff91436dc4   324  ldr x5, [x26, #120]
0xffff91436dc8   328  b #-0x12c (addr 0xffff91436c9c)
0xffff91436dcc   332  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91436dd0   336  d63f03e0       constant
0xffff91436dd4   340  d503201f       constant
0xffff91436dd8   344  91422900       constant
0xffff91436ddc   348  0000ffff       constant
0xffff91436de0   352  00c874c0       constant
0xffff91436de4   356  00000000       constant
0xffff91436de8   360  91406060       constant
0xffff91436dec   364  0000ffff       constant


RelocInfo (size = 14)
0xffff91436d2c  code target (KEYED_LOAD_IC)  (0xffff91422900)
0xffff91436db8  external reference (Runtime::KeyedLoadIC_Miss)  (0xc874c0)
0xffff91436dbc  code target (STUB)  (0xffff91406060)
0xffff91436dcc  constant pool (size 36)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91436fc0     0  ldur x0, [x1, #-1]
0xffff91436fc4     4  ldur x0, [x0, #47]
0xffff91436fc8     8  movz x16, #0x587
0xffff91436fcc    12  ldr x0, [x0, x16]
0xffff91436fd0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff91437040     0  ldur x0, [x1, #7]
0xffff91437044     4  movz x16, #0x1cf
0xffff91437048     8  ldr x0, [x0, x16]
0xffff9143704c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff914370c0     0  adr xzr, #+0x40 (addr 0xffff91437100)
0xffff914370c4     4  adr xzr, #+0x360 (addr 0xffff91437424)
0xffff914370c8     8  ldr x16, pc+1736 (addr 0x0000ffff91437790)    ;; external reference (store_buffer_top)
0xffff914370cc    12  ldr x13, [x16]
0xffff914370d0    16  str x6, [x13], #8
0xffff914370d4    20  str x13, [x16]
0xffff914370d8    24  tst x13, #0x1ffff
0xffff914370dc    28  b.eq #+0x8 (addr 0xffff914370e4)
0xffff914370e0    32  ret
0xffff914370e4    36  sub csp, jssp, #0x8 (8)
0xffff914370e8    40  str lr, [jssp, #-8]!
0xffff914370ec    44  ldr x17, pc+1708 (addr 0x0000ffff91437798)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914370f0    48  blr x17
0xffff914370f4    52  ldr lr, [jssp], #8
0xffff914370f8    56  ret
0xffff914370fc    60  ret
0xffff91437100    64  sub csp, jssp, #0x10 (16)
0xffff91437104    68  stp x2, x0, [jssp, #-16]!
0xffff91437108    72  ldr x13, [x6]
0xffff9143710c    76  and x16, x13, #0xfffffffffff00000
0xffff91437110    80  ldr x16, [x16, #8]
0xffff91437114    84  tst x16, #0x18
0xffff91437118    88  b.eq #+0x1d8 (addr 0xffff914372f0)
0xffff9143711c    92  and x16, x1, #0xfffffffffff00000
0xffff91437120    96  ldr x16, [x16, #8]
0xffff91437124   100  tst x16, #0x18
0xffff91437128   104  b.ne #+0x1c8 (addr 0xffff914372f0)
0xffff9143712c   108  and x13, x1, #0xfffffffffff00000
0xffff91437130   112  ldr x0, [x13, #104]
0xffff91437134   116  subs x0, x0, #0x1 (1)
0xffff91437138   120  str x0, [x13, #104]
0xffff9143713c   124  b.mi #+0xc4 (addr 0xffff91437200)
0xffff91437140   128  ubfx x16, x1, #8, #12
0xffff91437144   132  and x13, x1, #0xfffffffffff00000
0xffff91437148   136  add x13, x13, x16, lsl #2
0xffff9143714c   140  ubfx x0, x1, #3, #5
0xffff91437150   144  ldr x13, [x13, #360]
0xffff91437154   148  lsr x13, x13, x0
0xffff91437158   152  tbz w13, #0, #+0x8 (addr 0xffff91437160)
0xffff9143715c   156  tbnz w13, #1, #+0x3c (addr 0xffff91437198)
0xffff91437160   160  ldp x2, x0, [jssp], #16
0xffff91437164   164  ldr x16, pc+1596 (addr 0x0000ffff914377a0)    ;; external reference (store_buffer_top)
0xffff91437168   168  ldr x13, [x16]
0xffff9143716c   172  str x6, [x13], #8
0xffff91437170   176  str x13, [x16]
0xffff91437174   180  tst x13, #0x1ffff
0xffff91437178   184  b.eq #+0x8 (addr 0xffff91437180)
0xffff9143717c   188  ret
0xffff91437180   192  sub csp, jssp, #0x8 (8)
0xffff91437184   196  str lr, [jssp, #-8]!
0xffff91437188   200  ldr x17, pc+1568 (addr 0x0000ffff914377a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9143718c   204  blr x17
0xffff91437190   208  ldr lr, [jssp], #8
0xffff91437194   212  ret
0xffff91437198   216  ldr x13, [x6]
0xffff9143719c   220  sub csp, jssp, #0x10 (16)
0xffff914371a0   224  stp x1, x6, [jssp, #-16]!
0xffff914371a4   228  ubfx x16, x13, #8, #12
0xffff914371a8   232  and x0, x13, #0xfffffffffff00000
0xffff914371ac   236  add x0, x0, x16, lsl #2
0xffff914371b0   240  ubfx x1, x13, #3, #5
0xffff914371b4   244  ldr x6, [x0, #360]
0xffff914371b8   248  lsr x6, x6, x1
0xffff914371bc   252  tbz w6, #0, #+0x40 (addr 0xffff914371fc)
0xffff914371c0   256  ldp x1, x6, [jssp], #16
0xffff914371c4   260  ldp x2, x0, [jssp], #16
0xffff914371c8   264  ldr x16, pc+1512 (addr 0x0000ffff914377b0)    ;; external reference (store_buffer_top)
0xffff914371cc   268  ldr x13, [x16]
0xffff914371d0   272  str x6, [x13], #8
0xffff914371d4   276  str x13, [x16]
0xffff914371d8   280  tst x13, #0x1ffff
0xffff914371dc   284  b.eq #+0x8 (addr 0xffff914371e4)
0xffff914371e0   288  ret
0xffff914371e4   292  sub csp, jssp, #0x8 (8)
0xffff914371e8   296  str lr, [jssp, #-8]!
0xffff914371ec   300  ldr x17, pc+1484 (addr 0x0000ffff914377b8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914371f0   304  blr x17
0xffff914371f4   308  ldr lr, [jssp], #8
0xffff914371f8   312  ret
0xffff914371fc   316  ldp x1, x6, [jssp], #16
0xffff91437200   320  sub csp, jssp, #0x78 (120)
0xffff91437204   324  stp x14, x15, [jssp, #-32]!
0xffff91437208   328  stp x18, lr, [jssp, #16]
0xffff9143720c   332  stp x9, x10, [jssp, #-32]!
0xffff91437210   336  stp x11, x12, [jssp, #16]
0xffff91437214   340  stp x5, x6, [jssp, #-32]!
0xffff91437218   344  stp x7, x8, [jssp, #16]
0xffff9143721c   348  stp x1, x3, [jssp, #-24]!
0xffff91437220   352  str x4, [jssp, #16]
0xffff91437224   356  sub csp, jssp, #0xb0 (176)
0xffff91437228   360  stp d26, d27, [jssp, #-32]!
0xffff9143722c   364  stp d28, d29, [jssp, #16]
0xffff91437230   368  stp d22, d23, [jssp, #-32]!
0xffff91437234   372  stp d24, d25, [jssp, #16]
0xffff91437238   376  stp d18, d19, [jssp, #-32]!
0xffff9143723c   380  stp d20, d21, [jssp, #16]
0xffff91437240   384  stp d6, d7, [jssp, #-32]!
0xffff91437244   388  stp d16, d17, [jssp, #16]
0xffff91437248   392  stp d2, d3, [jssp, #-32]!
0xffff9143724c   396  stp d4, d5, [jssp, #16]
0xffff91437250   400  stp d0, d1, [jssp, #-16]!
0xffff91437254   404  mov x0, x1
0xffff91437258   408  mov x1, x6
0xffff9143725c   412  ldr x2, pc+1380 (addr 0x0000ffff914377c0)    ;; external reference (isolate)
0xffff91437260   416  ldr x16, pc+1384 (addr 0x0000ffff914377c8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91437264   420  and csp, jssp, #0xfffffffffffffff0
0xffff91437268   424  blr x16
0xffff9143726c   428  ldp d2, d3, [jssp, #16]
0xffff91437270   432  ldp d0, d1, [jssp], #32
0xffff91437274   436  ldp d6, d7, [jssp, #16]
0xffff91437278   440  ldp d4, d5, [jssp], #32
0xffff9143727c   444  ldp d18, d19, [jssp, #16]
0xffff91437280   448  ldp d16, d17, [jssp], #32
0xffff91437284   452  ldp d22, d23, [jssp, #16]
0xffff91437288   456  ldp d20, d21, [jssp], #32
0xffff9143728c   460  ldp d26, d27, [jssp, #16]
0xffff91437290   464  ldp d24, d25, [jssp], #32
0xffff91437294   468  ldp d28, d29, [jssp], #16
0xffff91437298   472  ldp x4, x5, [jssp, #16]
0xffff9143729c   476  ldp x1, x3, [jssp], #32
0xffff914372a0   480  ldp x8, x9, [jssp, #16]
0xffff914372a4   484  ldp x6, x7, [jssp], #32
0xffff914372a8   488  ldp x12, x14, [jssp, #16]
0xffff914372ac   492  ldp x10, x11, [jssp], #32
0xffff914372b0   496  ldr lr, [jssp, #16]
0xffff914372b4   500  ldp x15, x18, [jssp], #24
0xffff914372b8   504  ldp x2, x0, [jssp], #16
0xffff914372bc   508  ldr x16, pc+1300 (addr 0x0000ffff914377d0)    ;; external reference (store_buffer_top)
0xffff914372c0   512  ldr x13, [x16]
0xffff914372c4   516  str x6, [x13], #8
0xffff914372c8   520  str x13, [x16]
0xffff914372cc   524  tst x13, #0x1ffff
0xffff914372d0   528  b.eq #+0x8 (addr 0xffff914372d8)
0xffff914372d4   532  ret
0xffff914372d8   536  sub csp, jssp, #0x8 (8)
0xffff914372dc   540  str lr, [jssp, #-8]!
0xffff914372e0   544  ldr x17, pc+1272 (addr 0x0000ffff914377d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914372e4   548  blr x17
0xffff914372e8   552  ldr lr, [jssp], #8
0xffff914372ec   556  ret
0xffff914372f0   560  and x13, x1, #0xfffffffffff00000
0xffff914372f4   564  ldr x0, [x13, #104]
0xffff914372f8   568  subs x0, x0, #0x1 (1)
0xffff914372fc   572  str x0, [x13, #104]
0xffff91437300   576  b.mi #+0x64 (addr 0xffff91437364)
0xffff91437304   580  ubfx x16, x1, #8, #12
0xffff91437308   584  and x13, x1, #0xfffffffffff00000
0xffff9143730c   588  add x13, x13, x16, lsl #2
0xffff91437310   592  ubfx x0, x1, #3, #5
0xffff91437314   596  ldr x13, [x13, #360]
0xffff91437318   600  lsr x13, x13, x0
0xffff9143731c   604  tbz w13, #0, #+0x8 (addr 0xffff91437324)
0xffff91437320   608  tbnz w13, #1, #+0xc (addr 0xffff9143732c)
0xffff91437324   612  ldp x2, x0, [jssp], #16
0xffff91437328   616  ret
0xffff9143732c   620  ldr x13, [x6]
0xffff91437330   624  sub csp, jssp, #0x10 (16)
0xffff91437334   628  stp x1, x6, [jssp, #-16]!
0xffff91437338   632  ubfx x16, x13, #8, #12
0xffff9143733c   636  and x0, x13, #0xfffffffffff00000
0xffff91437340   640  add x0, x0, x16, lsl #2
0xffff91437344   644  ubfx x1, x13, #3, #5
0xffff91437348   648  ldr x6, [x0, #360]
0xffff9143734c   652  lsr x6, x6, x1
0xffff91437350   656  tbz w6, #0, #+0x10 (addr 0xffff91437360)
0xffff91437354   660  ldp x1, x6, [jssp], #16
0xffff91437358   664  ldp x2, x0, [jssp], #16
0xffff9143735c   668  ret
0xffff91437360   672  ldp x1, x6, [jssp], #16
0xffff91437364   676  sub csp, jssp, #0x78 (120)
0xffff91437368   680  stp x14, x15, [jssp, #-32]!
0xffff9143736c   684  stp x18, lr, [jssp, #16]
0xffff91437370   688  stp x9, x10, [jssp, #-32]!
0xffff91437374   692  stp x11, x12, [jssp, #16]
0xffff91437378   696  stp x5, x6, [jssp, #-32]!
0xffff9143737c   700  stp x7, x8, [jssp, #16]
0xffff91437380   704  stp x1, x3, [jssp, #-24]!
0xffff91437384   708  str x4, [jssp, #16]
0xffff91437388   712  sub csp, jssp, #0xb0 (176)
0xffff9143738c   716  stp d26, d27, [jssp, #-32]!
0xffff91437390   720  stp d28, d29, [jssp, #16]
0xffff91437394   724  stp d22, d23, [jssp, #-32]!
0xffff91437398   728  stp d24, d25, [jssp, #16]
0xffff9143739c   732  stp d18, d19, [jssp, #-32]!
0xffff914373a0   736  stp d20, d21, [jssp, #16]
0xffff914373a4   740  stp d6, d7, [jssp, #-32]!
0xffff914373a8   744  stp d16, d17, [jssp, #16]
0xffff914373ac   748  stp d2, d3, [jssp, #-32]!
0xffff914373b0   752  stp d4, d5, [jssp, #16]
0xffff914373b4   756  stp d0, d1, [jssp, #-16]!
0xffff914373b8   760  mov x0, x1
0xffff914373bc   764  mov x1, x6
0xffff914373c0   768  ldr x2, pc+1056 (addr 0x0000ffff914377e0)    ;; external reference (isolate)
0xffff914373c4   772  ldr x16, pc+1060 (addr 0x0000ffff914377e8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914373c8   776  and csp, jssp, #0xfffffffffffffff0
0xffff914373cc   780  blr x16
0xffff914373d0   784  ldp d2, d3, [jssp, #16]
0xffff914373d4   788  ldp d0, d1, [jssp], #32
0xffff914373d8   792  ldp d6, d7, [jssp, #16]
0xffff914373dc   796  ldp d4, d5, [jssp], #32
0xffff914373e0   800  ldp d18, d19, [jssp, #16]
0xffff914373e4   804  ldp d16, d17, [jssp], #32
0xffff914373e8   808  ldp d22, d23, [jssp, #16]
0xffff914373ec   812  ldp d20, d21, [jssp], #32
0xffff914373f0   816  ldp d26, d27, [jssp, #16]
0xffff914373f4   820  ldp d24, d25, [jssp], #32
0xffff914373f8   824  ldp d28, d29, [jssp], #16
0xffff914373fc   828  ldp x4, x5, [jssp, #16]
0xffff91437400   832  ldp x1, x3, [jssp], #32
0xffff91437404   836  ldp x8, x9, [jssp, #16]
0xffff91437408   840  ldp x6, x7, [jssp], #32
0xffff9143740c   844  ldp x12, x14, [jssp, #16]
0xffff91437410   848  ldp x10, x11, [jssp], #32
0xffff91437414   852  ldr lr, [jssp, #16]
0xffff91437418   856  ldp x15, x18, [jssp], #24
0xffff9143741c   860  ldp x2, x0, [jssp], #16
0xffff91437420   864  ret
0xffff91437424   868  sub csp, jssp, #0x10 (16)
0xffff91437428   872  stp x2, x0, [jssp, #-16]!
0xffff9143742c   876  ldr x13, [x6]
0xffff91437430   880  and x16, x13, #0xfffffffffff00000
0xffff91437434   884  ldr x16, [x16, #8]
0xffff91437438   888  tst x16, #0x18
0xffff9143743c   892  b.eq #+0x1f8 (addr 0xffff91437634)
0xffff91437440   896  and x16, x1, #0xfffffffffff00000
0xffff91437444   900  ldr x16, [x16, #8]
0xffff91437448   904  tst x16, #0x18
0xffff9143744c   908  b.ne #+0x1e8 (addr 0xffff91437634)
0xffff91437450   912  and x13, x1, #0xfffffffffff00000
0xffff91437454   916  ldr x0, [x13, #104]
0xffff91437458   920  subs x0, x0, #0x1 (1)
0xffff9143745c   924  str x0, [x13, #104]
0xffff91437460   928  b.mi #+0xe4 (addr 0xffff91437544)
0xffff91437464   932  ubfx x16, x1, #8, #12
0xffff91437468   936  and x13, x1, #0xfffffffffff00000
0xffff9143746c   940  add x13, x13, x16, lsl #2
0xffff91437470   944  ubfx x0, x1, #3, #5
0xffff91437474   948  ldr x13, [x13, #360]
0xffff91437478   952  lsr x13, x13, x0
0xffff9143747c   956  tbz w13, #0, #+0x8 (addr 0xffff91437484)
0xffff91437480   960  tbnz w13, #1, #+0x3c (addr 0xffff914374bc)
0xffff91437484   964  ldp x2, x0, [jssp], #16
0xffff91437488   968  ldr x16, pc+872 (addr 0x0000ffff914377f0)    ;; external reference (store_buffer_top)
0xffff9143748c   972  ldr x13, [x16]
0xffff91437490   976  str x6, [x13], #8
0xffff91437494   980  str x13, [x16]
0xffff91437498   984  tst x13, #0x1ffff
0xffff9143749c   988  b.eq #+0x8 (addr 0xffff914374a4)
0xffff914374a0   992  ret
0xffff914374a4   996  sub csp, jssp, #0x8 (8)
0xffff914374a8  1000  str lr, [jssp, #-8]!
0xffff914374ac  1004  ldr x17, pc+844 (addr 0x0000ffff914377f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914374b0  1008  blr x17
0xffff914374b4  1012  ldr lr, [jssp], #8
0xffff914374b8  1016  ret
0xffff914374bc  1020  ldr x13, [x6]
0xffff914374c0  1024  and x0, x13, #0xfffffffffff00000
0xffff914374c4  1028  ldr x0, [x0, #8]
0xffff914374c8  1032  tbz w0, #6, #+0x18 (addr 0xffff914374e0)
0xffff914374cc  1036  and x0, x1, #0xfffffffffff00000
0xffff914374d0  1040  ldr x0, [x0, #8]
0xffff914374d4  1044  movz x16, #0x58
0xffff914374d8  1048  tst x0, x16
0xffff914374dc  1052  b.eq #+0x68 (addr 0xffff91437544)
0xffff914374e0  1056  sub csp, jssp, #0x10 (16)
0xffff914374e4  1060  stp x1, x6, [jssp, #-16]!
0xffff914374e8  1064  ubfx x16, x13, #8, #12
0xffff914374ec  1068  and x0, x13, #0xfffffffffff00000
0xffff914374f0  1072  add x0, x0, x16, lsl #2
0xffff914374f4  1076  ubfx x1, x13, #3, #5
0xffff914374f8  1080  ldr x6, [x0, #360]
0xffff914374fc  1084  lsr x6, x6, x1
0xffff91437500  1088  tbz w6, #0, #+0x40 (addr 0xffff91437540)
0xffff91437504  1092  ldp x1, x6, [jssp], #16
0xffff91437508  1096  ldp x2, x0, [jssp], #16
0xffff9143750c  1100  ldr x16, pc+756 (addr 0x0000ffff91437800)    ;; external reference (store_buffer_top)
0xffff91437510  1104  ldr x13, [x16]
0xffff91437514  1108  str x6, [x13], #8
0xffff91437518  1112  str x13, [x16]
0xffff9143751c  1116  tst x13, #0x1ffff
0xffff91437520  1120  b.eq #+0x8 (addr 0xffff91437528)
0xffff91437524  1124  ret
0xffff91437528  1128  sub csp, jssp, #0x8 (8)
0xffff9143752c  1132  str lr, [jssp, #-8]!
0xffff91437530  1136  ldr x17, pc+728 (addr 0x0000ffff91437808)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91437534  1140  blr x17
0xffff91437538  1144  ldr lr, [jssp], #8
0xffff9143753c  1148  ret
0xffff91437540  1152  ldp x1, x6, [jssp], #16
0xffff91437544  1156  sub csp, jssp, #0x78 (120)
0xffff91437548  1160  stp x14, x15, [jssp, #-32]!
0xffff9143754c  1164  stp x18, lr, [jssp, #16]
0xffff91437550  1168  stp x9, x10, [jssp, #-32]!
0xffff91437554  1172  stp x11, x12, [jssp, #16]
0xffff91437558  1176  stp x5, x6, [jssp, #-32]!
0xffff9143755c  1180  stp x7, x8, [jssp, #16]
0xffff91437560  1184  stp x1, x3, [jssp, #-24]!
0xffff91437564  1188  str x4, [jssp, #16]
0xffff91437568  1192  sub csp, jssp, #0xb0 (176)
0xffff9143756c  1196  stp d26, d27, [jssp, #-32]!
0xffff91437570  1200  stp d28, d29, [jssp, #16]
0xffff91437574  1204  stp d22, d23, [jssp, #-32]!
0xffff91437578  1208  stp d24, d25, [jssp, #16]
0xffff9143757c  1212  stp d18, d19, [jssp, #-32]!
0xffff91437580  1216  stp d20, d21, [jssp, #16]
0xffff91437584  1220  stp d6, d7, [jssp, #-32]!
0xffff91437588  1224  stp d16, d17, [jssp, #16]
0xffff9143758c  1228  stp d2, d3, [jssp, #-32]!
0xffff91437590  1232  stp d4, d5, [jssp, #16]
0xffff91437594  1236  stp d0, d1, [jssp, #-16]!
0xffff91437598  1240  mov x0, x1
0xffff9143759c  1244  mov x1, x6
0xffff914375a0  1248  ldr x2, pc+624 (addr 0x0000ffff91437810)    ;; external reference (isolate)
0xffff914375a4  1252  ldr x16, pc+628 (addr 0x0000ffff91437818)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914375a8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff914375ac  1260  blr x16
0xffff914375b0  1264  ldp d2, d3, [jssp, #16]
0xffff914375b4  1268  ldp d0, d1, [jssp], #32
0xffff914375b8  1272  ldp d6, d7, [jssp, #16]
0xffff914375bc  1276  ldp d4, d5, [jssp], #32
0xffff914375c0  1280  ldp d18, d19, [jssp, #16]
0xffff914375c4  1284  ldp d16, d17, [jssp], #32
0xffff914375c8  1288  ldp d22, d23, [jssp, #16]
0xffff914375cc  1292  ldp d20, d21, [jssp], #32
0xffff914375d0  1296  ldp d26, d27, [jssp, #16]
0xffff914375d4  1300  ldp d24, d25, [jssp], #32
0xffff914375d8  1304  ldp d28, d29, [jssp], #16
0xffff914375dc  1308  ldp x4, x5, [jssp, #16]
0xffff914375e0  1312  ldp x1, x3, [jssp], #32
0xffff914375e4  1316  ldp x8, x9, [jssp, #16]
0xffff914375e8  1320  ldp x6, x7, [jssp], #32
0xffff914375ec  1324  ldp x12, x14, [jssp, #16]
0xffff914375f0  1328  ldp x10, x11, [jssp], #32
0xffff914375f4  1332  ldr lr, [jssp, #16]
0xffff914375f8  1336  ldp x15, x18, [jssp], #24
0xffff914375fc  1340  ldp x2, x0, [jssp], #16
0xffff91437600  1344  ldr x16, pc+544 (addr 0x0000ffff91437820)    ;; external reference (store_buffer_top)
0xffff91437604  1348  ldr x13, [x16]
0xffff91437608  1352  str x6, [x13], #8
0xffff9143760c  1356  str x13, [x16]
0xffff91437610  1360  tst x13, #0x1ffff
0xffff91437614  1364  b.eq #+0x8 (addr 0xffff9143761c)
0xffff91437618  1368  ret
0xffff9143761c  1372  sub csp, jssp, #0x8 (8)
0xffff91437620  1376  str lr, [jssp, #-8]!
0xffff91437624  1380  ldr x17, pc+516 (addr 0x0000ffff91437828)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91437628  1384  blr x17
0xffff9143762c  1388  ldr lr, [jssp], #8
0xffff91437630  1392  ret
0xffff91437634  1396  and x13, x1, #0xfffffffffff00000
0xffff91437638  1400  ldr x0, [x13, #104]
0xffff9143763c  1404  subs x0, x0, #0x1 (1)
0xffff91437640  1408  str x0, [x13, #104]
0xffff91437644  1412  b.mi #+0x84 (addr 0xffff914376c8)
0xffff91437648  1416  ubfx x16, x1, #8, #12
0xffff9143764c  1420  and x13, x1, #0xfffffffffff00000
0xffff91437650  1424  add x13, x13, x16, lsl #2
0xffff91437654  1428  ubfx x0, x1, #3, #5
0xffff91437658  1432  ldr x13, [x13, #360]
0xffff9143765c  1436  lsr x13, x13, x0
0xffff91437660  1440  tbz w13, #0, #+0x8 (addr 0xffff91437668)
0xffff91437664  1444  tbnz w13, #1, #+0xc (addr 0xffff91437670)
0xffff91437668  1448  ldp x2, x0, [jssp], #16
0xffff9143766c  1452  ret
0xffff91437670  1456  ldr x13, [x6]
0xffff91437674  1460  and x0, x13, #0xfffffffffff00000
0xffff91437678  1464  ldr x0, [x0, #8]
0xffff9143767c  1468  tbz w0, #6, #+0x18 (addr 0xffff91437694)
0xffff91437680  1472  and x0, x1, #0xfffffffffff00000
0xffff91437684  1476  ldr x0, [x0, #8]
0xffff91437688  1480  movz x16, #0x58
0xffff9143768c  1484  tst x0, x16
0xffff91437690  1488  b.eq #+0x38 (addr 0xffff914376c8)
0xffff91437694  1492  sub csp, jssp, #0x10 (16)
0xffff91437698  1496  stp x1, x6, [jssp, #-16]!
0xffff9143769c  1500  ubfx x16, x13, #8, #12
0xffff914376a0  1504  and x0, x13, #0xfffffffffff00000
0xffff914376a4  1508  add x0, x0, x16, lsl #2
0xffff914376a8  1512  ubfx x1, x13, #3, #5
0xffff914376ac  1516  ldr x6, [x0, #360]
0xffff914376b0  1520  lsr x6, x6, x1
0xffff914376b4  1524  tbz w6, #0, #+0x10 (addr 0xffff914376c4)
0xffff914376b8  1528  ldp x1, x6, [jssp], #16
0xffff914376bc  1532  ldp x2, x0, [jssp], #16
0xffff914376c0  1536  ret
0xffff914376c4  1540  ldp x1, x6, [jssp], #16
0xffff914376c8  1544  sub csp, jssp, #0x78 (120)
0xffff914376cc  1548  stp x14, x15, [jssp, #-32]!
0xffff914376d0  1552  stp x18, lr, [jssp, #16]
0xffff914376d4  1556  stp x9, x10, [jssp, #-32]!
0xffff914376d8  1560  stp x11, x12, [jssp, #16]
0xffff914376dc  1564  stp x5, x6, [jssp, #-32]!
0xffff914376e0  1568  stp x7, x8, [jssp, #16]
0xffff914376e4  1572  stp x1, x3, [jssp, #-24]!
0xffff914376e8  1576  str x4, [jssp, #16]
0xffff914376ec  1580  sub csp, jssp, #0xb0 (176)
0xffff914376f0  1584  stp d26, d27, [jssp, #-32]!
0xffff914376f4  1588  stp d28, d29, [jssp, #16]
0xffff914376f8  1592  stp d22, d23, [jssp, #-32]!
0xffff914376fc  1596  stp d24, d25, [jssp, #16]
0xffff91437700  1600  stp d18, d19, [jssp, #-32]!
0xffff91437704  1604  stp d20, d21, [jssp, #16]
0xffff91437708  1608  stp d6, d7, [jssp, #-32]!
0xffff9143770c  1612  stp d16, d17, [jssp, #16]
0xffff91437710  1616  stp d2, d3, [jssp, #-32]!
0xffff91437714  1620  stp d4, d5, [jssp, #16]
0xffff91437718  1624  stp d0, d1, [jssp, #-16]!
0xffff9143771c  1628  mov x0, x1
0xffff91437720  1632  mov x1, x6
0xffff91437724  1636  ldr x2, pc+268 (addr 0x0000ffff91437830)    ;; external reference (isolate)
0xffff91437728  1640  ldr x16, pc+272 (addr 0x0000ffff91437838)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9143772c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff91437730  1648  blr x16
0xffff91437734  1652  ldp d2, d3, [jssp, #16]
0xffff91437738  1656  ldp d0, d1, [jssp], #32
0xffff9143773c  1660  ldp d6, d7, [jssp, #16]
0xffff91437740  1664  ldp d4, d5, [jssp], #32
0xffff91437744  1668  ldp d18, d19, [jssp, #16]
0xffff91437748  1672  ldp d16, d17, [jssp], #32
0xffff9143774c  1676  ldp d22, d23, [jssp, #16]
0xffff91437750  1680  ldp d20, d21, [jssp], #32
0xffff91437754  1684  ldp d26, d27, [jssp, #16]
0xffff91437758  1688  ldp d24, d25, [jssp], #32
0xffff9143775c  1692  ldp d28, d29, [jssp], #16
0xffff91437760  1696  ldp x4, x5, [jssp, #16]
0xffff91437764  1700  ldp x1, x3, [jssp], #32
0xffff91437768  1704  ldp x8, x9, [jssp, #16]
0xffff9143776c  1708  ldp x6, x7, [jssp], #32
0xffff91437770  1712  ldp x12, x14, [jssp, #16]
0xffff91437774  1716  ldp x10, x11, [jssp], #32
0xffff91437778  1720  ldr lr, [jssp, #16]
0xffff9143777c  1724  ldp x15, x18, [jssp], #24
0xffff91437780  1728  ldp x2, x0, [jssp], #16
0xffff91437784  1732  ret
0xffff91437788  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9143778c  1740  d63f03e0       constant
0xffff91437790  1744  4117f8c0       constant
0xffff91437794  1748  00000000       constant
0xffff91437798  1752  914065a0       constant
0xffff9143779c  1756  0000ffff       constant
0xffff914377a0  1760  4117f8c0       constant
0xffff914377a4  1764  00000000       constant
0xffff914377a8  1768  914065a0       constant
0xffff914377ac  1772  0000ffff       constant
0xffff914377b0  1776  4117f8c0       constant
0xffff914377b4  1780  00000000       constant
0xffff914377b8  1784  914065a0       constant
0xffff914377bc  1788  0000ffff       constant
0xffff914377c0  1792  4117e2d0       constant
0xffff914377c4  1796  00000000       constant
0xffff914377c8  1800  00c2d958       constant
0xffff914377cc  1804  00000000       constant
0xffff914377d0  1808  4117f8c0       constant
0xffff914377d4  1812  00000000       constant
0xffff914377d8  1816  914065a0       constant
0xffff914377dc  1820  0000ffff       constant
0xffff914377e0  1824  4117e2d0       constant
0xffff914377e4  1828  00000000       constant
0xffff914377e8  1832  00c2d958       constant
0xffff914377ec  1836  00000000       constant
0xffff914377f0  1840  4117f8c0       constant
0xffff914377f4  1844  00000000       constant
0xffff914377f8  1848  914065a0       constant
0xffff914377fc  1852  0000ffff       constant
0xffff91437800  1856  4117f8c0       constant
0xffff91437804  1860  00000000       constant
0xffff91437808  1864  914065a0       constant
0xffff9143780c  1868  0000ffff       constant
0xffff91437810  1872  4117e2d0       constant
0xffff91437814  1876  00000000       constant
0xffff91437818  1880  00c2d958       constant
0xffff9143781c  1884  00000000       constant
0xffff91437820  1888  4117f8c0       constant
0xffff91437824  1892  00000000       constant
0xffff91437828  1896  914065a0       constant
0xffff9143782c  1900  0000ffff       constant
0xffff91437830  1904  4117e2d0       constant
0xffff91437834  1908  00000000       constant
0xffff91437838  1912  00c2d958       constant
0xffff9143783c  1916  00000000       constant


RelocInfo (size = 65)
0xffff914370c8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914370ec  code target (STUB)  (0xffff914065a0)
0xffff91437164  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91437188  code target (STUB)  (0xffff914065a0)
0xffff914371c8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914371ec  code target (STUB)  (0xffff914065a0)
0xffff9143725c  external reference (isolate)  (0x4117e2d0)
0xffff91437260  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff914372bc  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914372e0  code target (STUB)  (0xffff914065a0)
0xffff914373c0  external reference (isolate)  (0x4117e2d0)
0xffff914373c4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91437488  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914374ac  code target (STUB)  (0xffff914065a0)
0xffff9143750c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91437530  code target (STUB)  (0xffff914065a0)
0xffff914375a0  external reference (isolate)  (0x4117e2d0)
0xffff914375a4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91437600  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91437624  code target (STUB)  (0xffff914065a0)
0xffff91437724  external reference (isolate)  (0x4117e2d0)
0xffff91437728  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91437788  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff914378a0     0  adr xzr, #+0x40 (addr 0xffff914378e0)
0xffff914378a4     4  adr xzr, #+0x360 (addr 0xffff91437c04)
0xffff914378a8     8  ldr x16, pc+1736 (addr 0x0000ffff91437f70)    ;; external reference (store_buffer_top)
0xffff914378ac    12  ldr x2, [x16]
0xffff914378b0    16  str x3, [x2], #8
0xffff914378b4    20  str x2, [x16]
0xffff914378b8    24  tst x2, #0x1ffff
0xffff914378bc    28  b.eq #+0x8 (addr 0xffff914378c4)
0xffff914378c0    32  ret
0xffff914378c4    36  sub csp, jssp, #0x8 (8)
0xffff914378c8    40  str lr, [jssp, #-8]!
0xffff914378cc    44  ldr x17, pc+1708 (addr 0x0000ffff91437f78)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914378d0    48  blr x17
0xffff914378d4    52  ldr lr, [jssp], #8
0xffff914378d8    56  ret
0xffff914378dc    60  ret
0xffff914378e0    64  sub csp, jssp, #0x10 (16)
0xffff914378e4    68  stp x1, x0, [jssp, #-16]!
0xffff914378e8    72  ldr x2, [x3]
0xffff914378ec    76  and x16, x2, #0xfffffffffff00000
0xffff914378f0    80  ldr x16, [x16, #8]
0xffff914378f4    84  tst x16, #0x18
0xffff914378f8    88  b.eq #+0x1d8 (addr 0xffff91437ad0)
0xffff914378fc    92  and x16, x4, #0xfffffffffff00000
0xffff91437900    96  ldr x16, [x16, #8]
0xffff91437904   100  tst x16, #0x18
0xffff91437908   104  b.ne #+0x1c8 (addr 0xffff91437ad0)
0xffff9143790c   108  and x2, x4, #0xfffffffffff00000
0xffff91437910   112  ldr x0, [x2, #104]
0xffff91437914   116  subs x0, x0, #0x1 (1)
0xffff91437918   120  str x0, [x2, #104]
0xffff9143791c   124  b.mi #+0xc4 (addr 0xffff914379e0)
0xffff91437920   128  ubfx x16, x4, #8, #12
0xffff91437924   132  and x2, x4, #0xfffffffffff00000
0xffff91437928   136  add x2, x2, x16, lsl #2
0xffff9143792c   140  ubfx x0, x4, #3, #5
0xffff91437930   144  ldr x2, [x2, #360]
0xffff91437934   148  lsr x2, x2, x0
0xffff91437938   152  tbz w2, #0, #+0x8 (addr 0xffff91437940)
0xffff9143793c   156  tbnz w2, #1, #+0x3c (addr 0xffff91437978)
0xffff91437940   160  ldp x1, x0, [jssp], #16
0xffff91437944   164  ldr x16, pc+1596 (addr 0x0000ffff91437f80)    ;; external reference (store_buffer_top)
0xffff91437948   168  ldr x2, [x16]
0xffff9143794c   172  str x3, [x2], #8
0xffff91437950   176  str x2, [x16]
0xffff91437954   180  tst x2, #0x1ffff
0xffff91437958   184  b.eq #+0x8 (addr 0xffff91437960)
0xffff9143795c   188  ret
0xffff91437960   192  sub csp, jssp, #0x8 (8)
0xffff91437964   196  str lr, [jssp, #-8]!
0xffff91437968   200  ldr x17, pc+1568 (addr 0x0000ffff91437f88)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9143796c   204  blr x17
0xffff91437970   208  ldr lr, [jssp], #8
0xffff91437974   212  ret
0xffff91437978   216  ldr x2, [x3]
0xffff9143797c   220  sub csp, jssp, #0x10 (16)
0xffff91437980   224  stp x4, x3, [jssp, #-16]!
0xffff91437984   228  ubfx x16, x2, #8, #12
0xffff91437988   232  and x0, x2, #0xfffffffffff00000
0xffff9143798c   236  add x0, x0, x16, lsl #2
0xffff91437990   240  ubfx x4, x2, #3, #5
0xffff91437994   244  ldr x3, [x0, #360]
0xffff91437998   248  lsr x3, x3, x4
0xffff9143799c   252  tbz w3, #0, #+0x40 (addr 0xffff914379dc)
0xffff914379a0   256  ldp x4, x3, [jssp], #16
0xffff914379a4   260  ldp x1, x0, [jssp], #16
0xffff914379a8   264  ldr x16, pc+1512 (addr 0x0000ffff91437f90)    ;; external reference (store_buffer_top)
0xffff914379ac   268  ldr x2, [x16]
0xffff914379b0   272  str x3, [x2], #8
0xffff914379b4   276  str x2, [x16]
0xffff914379b8   280  tst x2, #0x1ffff
0xffff914379bc   284  b.eq #+0x8 (addr 0xffff914379c4)
0xffff914379c0   288  ret
0xffff914379c4   292  sub csp, jssp, #0x8 (8)
0xffff914379c8   296  str lr, [jssp, #-8]!
0xffff914379cc   300  ldr x17, pc+1484 (addr 0x0000ffff91437f98)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914379d0   304  blr x17
0xffff914379d4   308  ldr lr, [jssp], #8
0xffff914379d8   312  ret
0xffff914379dc   316  ldp x4, x3, [jssp], #16
0xffff914379e0   320  sub csp, jssp, #0x78 (120)
0xffff914379e4   324  stp x14, x15, [jssp, #-32]!
0xffff914379e8   328  stp x18, lr, [jssp, #16]
0xffff914379ec   332  stp x10, x11, [jssp, #-32]!
0xffff914379f0   336  stp x12, x13, [jssp, #16]
0xffff914379f4   340  stp x6, x7, [jssp, #-32]!
0xffff914379f8   344  stp x8, x9, [jssp, #16]
0xffff914379fc   348  stp x3, x4, [jssp, #-24]!
0xffff91437a00   352  str x5, [jssp, #16]
0xffff91437a04   356  sub csp, jssp, #0xb0 (176)
0xffff91437a08   360  stp d26, d27, [jssp, #-32]!
0xffff91437a0c   364  stp d28, d29, [jssp, #16]
0xffff91437a10   368  stp d22, d23, [jssp, #-32]!
0xffff91437a14   372  stp d24, d25, [jssp, #16]
0xffff91437a18   376  stp d18, d19, [jssp, #-32]!
0xffff91437a1c   380  stp d20, d21, [jssp, #16]
0xffff91437a20   384  stp d6, d7, [jssp, #-32]!
0xffff91437a24   388  stp d16, d17, [jssp, #16]
0xffff91437a28   392  stp d2, d3, [jssp, #-32]!
0xffff91437a2c   396  stp d4, d5, [jssp, #16]
0xffff91437a30   400  stp d0, d1, [jssp, #-16]!
0xffff91437a34   404  mov x0, x4
0xffff91437a38   408  mov x1, x3
0xffff91437a3c   412  ldr x2, pc+1380 (addr 0x0000ffff91437fa0)    ;; external reference (isolate)
0xffff91437a40   416  ldr x16, pc+1384 (addr 0x0000ffff91437fa8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91437a44   420  and csp, jssp, #0xfffffffffffffff0
0xffff91437a48   424  blr x16
0xffff91437a4c   428  ldp d2, d3, [jssp, #16]
0xffff91437a50   432  ldp d0, d1, [jssp], #32
0xffff91437a54   436  ldp d6, d7, [jssp, #16]
0xffff91437a58   440  ldp d4, d5, [jssp], #32
0xffff91437a5c   444  ldp d18, d19, [jssp, #16]
0xffff91437a60   448  ldp d16, d17, [jssp], #32
0xffff91437a64   452  ldp d22, d23, [jssp, #16]
0xffff91437a68   456  ldp d20, d21, [jssp], #32
0xffff91437a6c   460  ldp d26, d27, [jssp, #16]
0xffff91437a70   464  ldp d24, d25, [jssp], #32
0xffff91437a74   468  ldp d28, d29, [jssp], #16
0xffff91437a78   472  ldp x5, x6, [jssp, #16]
0xffff91437a7c   476  ldp x3, x4, [jssp], #32
0xffff91437a80   480  ldp x9, x10, [jssp, #16]
0xffff91437a84   484  ldp x7, x8, [jssp], #32
0xffff91437a88   488  ldp x13, x14, [jssp, #16]
0xffff91437a8c   492  ldp x11, x12, [jssp], #32
0xffff91437a90   496  ldr lr, [jssp, #16]
0xffff91437a94   500  ldp x15, x18, [jssp], #24
0xffff91437a98   504  ldp x1, x0, [jssp], #16
0xffff91437a9c   508  ldr x16, pc+1300 (addr 0x0000ffff91437fb0)    ;; external reference (store_buffer_top)
0xffff91437aa0   512  ldr x2, [x16]
0xffff91437aa4   516  str x3, [x2], #8
0xffff91437aa8   520  str x2, [x16]
0xffff91437aac   524  tst x2, #0x1ffff
0xffff91437ab0   528  b.eq #+0x8 (addr 0xffff91437ab8)
0xffff91437ab4   532  ret
0xffff91437ab8   536  sub csp, jssp, #0x8 (8)
0xffff91437abc   540  str lr, [jssp, #-8]!
0xffff91437ac0   544  ldr x17, pc+1272 (addr 0x0000ffff91437fb8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91437ac4   548  blr x17
0xffff91437ac8   552  ldr lr, [jssp], #8
0xffff91437acc   556  ret
0xffff91437ad0   560  and x2, x4, #0xfffffffffff00000
0xffff91437ad4   564  ldr x0, [x2, #104]
0xffff91437ad8   568  subs x0, x0, #0x1 (1)
0xffff91437adc   572  str x0, [x2, #104]
0xffff91437ae0   576  b.mi #+0x64 (addr 0xffff91437b44)
0xffff91437ae4   580  ubfx x16, x4, #8, #12
0xffff91437ae8   584  and x2, x4, #0xfffffffffff00000
0xffff91437aec   588  add x2, x2, x16, lsl #2
0xffff91437af0   592  ubfx x0, x4, #3, #5
0xffff91437af4   596  ldr x2, [x2, #360]
0xffff91437af8   600  lsr x2, x2, x0
0xffff91437afc   604  tbz w2, #0, #+0x8 (addr 0xffff91437b04)
0xffff91437b00   608  tbnz w2, #1, #+0xc (addr 0xffff91437b0c)
0xffff91437b04   612  ldp x1, x0, [jssp], #16
0xffff91437b08   616  ret
0xffff91437b0c   620  ldr x2, [x3]
0xffff91437b10   624  sub csp, jssp, #0x10 (16)
0xffff91437b14   628  stp x4, x3, [jssp, #-16]!
0xffff91437b18   632  ubfx x16, x2, #8, #12
0xffff91437b1c   636  and x0, x2, #0xfffffffffff00000
0xffff91437b20   640  add x0, x0, x16, lsl #2
0xffff91437b24   644  ubfx x4, x2, #3, #5
0xffff91437b28   648  ldr x3, [x0, #360]
0xffff91437b2c   652  lsr x3, x3, x4
0xffff91437b30   656  tbz w3, #0, #+0x10 (addr 0xffff91437b40)
0xffff91437b34   660  ldp x4, x3, [jssp], #16
0xffff91437b38   664  ldp x1, x0, [jssp], #16
0xffff91437b3c   668  ret
0xffff91437b40   672  ldp x4, x3, [jssp], #16
0xffff91437b44   676  sub csp, jssp, #0x78 (120)
0xffff91437b48   680  stp x14, x15, [jssp, #-32]!
0xffff91437b4c   684  stp x18, lr, [jssp, #16]
0xffff91437b50   688  stp x10, x11, [jssp, #-32]!
0xffff91437b54   692  stp x12, x13, [jssp, #16]
0xffff91437b58   696  stp x6, x7, [jssp, #-32]!
0xffff91437b5c   700  stp x8, x9, [jssp, #16]
0xffff91437b60   704  stp x3, x4, [jssp, #-24]!
0xffff91437b64   708  str x5, [jssp, #16]
0xffff91437b68   712  sub csp, jssp, #0xb0 (176)
0xffff91437b6c   716  stp d26, d27, [jssp, #-32]!
0xffff91437b70   720  stp d28, d29, [jssp, #16]
0xffff91437b74   724  stp d22, d23, [jssp, #-32]!
0xffff91437b78   728  stp d24, d25, [jssp, #16]
0xffff91437b7c   732  stp d18, d19, [jssp, #-32]!
0xffff91437b80   736  stp d20, d21, [jssp, #16]
0xffff91437b84   740  stp d6, d7, [jssp, #-32]!
0xffff91437b88   744  stp d16, d17, [jssp, #16]
0xffff91437b8c   748  stp d2, d3, [jssp, #-32]!
0xffff91437b90   752  stp d4, d5, [jssp, #16]
0xffff91437b94   756  stp d0, d1, [jssp, #-16]!
0xffff91437b98   760  mov x0, x4
0xffff91437b9c   764  mov x1, x3
0xffff91437ba0   768  ldr x2, pc+1056 (addr 0x0000ffff91437fc0)    ;; external reference (isolate)
0xffff91437ba4   772  ldr x16, pc+1060 (addr 0x0000ffff91437fc8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91437ba8   776  and csp, jssp, #0xfffffffffffffff0
0xffff91437bac   780  blr x16
0xffff91437bb0   784  ldp d2, d3, [jssp, #16]
0xffff91437bb4   788  ldp d0, d1, [jssp], #32
0xffff91437bb8   792  ldp d6, d7, [jssp, #16]
0xffff91437bbc   796  ldp d4, d5, [jssp], #32
0xffff91437bc0   800  ldp d18, d19, [jssp, #16]
0xffff91437bc4   804  ldp d16, d17, [jssp], #32
0xffff91437bc8   808  ldp d22, d23, [jssp, #16]
0xffff91437bcc   812  ldp d20, d21, [jssp], #32
0xffff91437bd0   816  ldp d26, d27, [jssp, #16]
0xffff91437bd4   820  ldp d24, d25, [jssp], #32
0xffff91437bd8   824  ldp d28, d29, [jssp], #16
0xffff91437bdc   828  ldp x5, x6, [jssp, #16]
0xffff91437be0   832  ldp x3, x4, [jssp], #32
0xffff91437be4   836  ldp x9, x10, [jssp, #16]
0xffff91437be8   840  ldp x7, x8, [jssp], #32
0xffff91437bec   844  ldp x13, x14, [jssp, #16]
0xffff91437bf0   848  ldp x11, x12, [jssp], #32
0xffff91437bf4   852  ldr lr, [jssp, #16]
0xffff91437bf8   856  ldp x15, x18, [jssp], #24
0xffff91437bfc   860  ldp x1, x0, [jssp], #16
0xffff91437c00   864  ret
0xffff91437c04   868  sub csp, jssp, #0x10 (16)
0xffff91437c08   872  stp x1, x0, [jssp, #-16]!
0xffff91437c0c   876  ldr x2, [x3]
0xffff91437c10   880  and x16, x2, #0xfffffffffff00000
0xffff91437c14   884  ldr x16, [x16, #8]
0xffff91437c18   888  tst x16, #0x18
0xffff91437c1c   892  b.eq #+0x1f8 (addr 0xffff91437e14)
0xffff91437c20   896  and x16, x4, #0xfffffffffff00000
0xffff91437c24   900  ldr x16, [x16, #8]
0xffff91437c28   904  tst x16, #0x18
0xffff91437c2c   908  b.ne #+0x1e8 (addr 0xffff91437e14)
0xffff91437c30   912  and x2, x4, #0xfffffffffff00000
0xffff91437c34   916  ldr x0, [x2, #104]
0xffff91437c38   920  subs x0, x0, #0x1 (1)
0xffff91437c3c   924  str x0, [x2, #104]
0xffff91437c40   928  b.mi #+0xe4 (addr 0xffff91437d24)
0xffff91437c44   932  ubfx x16, x4, #8, #12
0xffff91437c48   936  and x2, x4, #0xfffffffffff00000
0xffff91437c4c   940  add x2, x2, x16, lsl #2
0xffff91437c50   944  ubfx x0, x4, #3, #5
0xffff91437c54   948  ldr x2, [x2, #360]
0xffff91437c58   952  lsr x2, x2, x0
0xffff91437c5c   956  tbz w2, #0, #+0x8 (addr 0xffff91437c64)
0xffff91437c60   960  tbnz w2, #1, #+0x3c (addr 0xffff91437c9c)
0xffff91437c64   964  ldp x1, x0, [jssp], #16
0xffff91437c68   968  ldr x16, pc+872 (addr 0x0000ffff91437fd0)    ;; external reference (store_buffer_top)
0xffff91437c6c   972  ldr x2, [x16]
0xffff91437c70   976  str x3, [x2], #8
0xffff91437c74   980  str x2, [x16]
0xffff91437c78   984  tst x2, #0x1ffff
0xffff91437c7c   988  b.eq #+0x8 (addr 0xffff91437c84)
0xffff91437c80   992  ret
0xffff91437c84   996  sub csp, jssp, #0x8 (8)
0xffff91437c88  1000  str lr, [jssp, #-8]!
0xffff91437c8c  1004  ldr x17, pc+844 (addr 0x0000ffff91437fd8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91437c90  1008  blr x17
0xffff91437c94  1012  ldr lr, [jssp], #8
0xffff91437c98  1016  ret
0xffff91437c9c  1020  ldr x2, [x3]
0xffff91437ca0  1024  and x0, x2, #0xfffffffffff00000
0xffff91437ca4  1028  ldr x0, [x0, #8]
0xffff91437ca8  1032  tbz w0, #6, #+0x18 (addr 0xffff91437cc0)
0xffff91437cac  1036  and x0, x4, #0xfffffffffff00000
0xffff91437cb0  1040  ldr x0, [x0, #8]
0xffff91437cb4  1044  movz x16, #0x58
0xffff91437cb8  1048  tst x0, x16
0xffff91437cbc  1052  b.eq #+0x68 (addr 0xffff91437d24)
0xffff91437cc0  1056  sub csp, jssp, #0x10 (16)
0xffff91437cc4  1060  stp x4, x3, [jssp, #-16]!
0xffff91437cc8  1064  ubfx x16, x2, #8, #12
0xffff91437ccc  1068  and x0, x2, #0xfffffffffff00000
0xffff91437cd0  1072  add x0, x0, x16, lsl #2
0xffff91437cd4  1076  ubfx x4, x2, #3, #5
0xffff91437cd8  1080  ldr x3, [x0, #360]
0xffff91437cdc  1084  lsr x3, x3, x4
0xffff91437ce0  1088  tbz w3, #0, #+0x40 (addr 0xffff91437d20)
0xffff91437ce4  1092  ldp x4, x3, [jssp], #16
0xffff91437ce8  1096  ldp x1, x0, [jssp], #16
0xffff91437cec  1100  ldr x16, pc+756 (addr 0x0000ffff91437fe0)    ;; external reference (store_buffer_top)
0xffff91437cf0  1104  ldr x2, [x16]
0xffff91437cf4  1108  str x3, [x2], #8
0xffff91437cf8  1112  str x2, [x16]
0xffff91437cfc  1116  tst x2, #0x1ffff
0xffff91437d00  1120  b.eq #+0x8 (addr 0xffff91437d08)
0xffff91437d04  1124  ret
0xffff91437d08  1128  sub csp, jssp, #0x8 (8)
0xffff91437d0c  1132  str lr, [jssp, #-8]!
0xffff91437d10  1136  ldr x17, pc+728 (addr 0x0000ffff91437fe8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91437d14  1140  blr x17
0xffff91437d18  1144  ldr lr, [jssp], #8
0xffff91437d1c  1148  ret
0xffff91437d20  1152  ldp x4, x3, [jssp], #16
0xffff91437d24  1156  sub csp, jssp, #0x78 (120)
0xffff91437d28  1160  stp x14, x15, [jssp, #-32]!
0xffff91437d2c  1164  stp x18, lr, [jssp, #16]
0xffff91437d30  1168  stp x10, x11, [jssp, #-32]!
0xffff91437d34  1172  stp x12, x13, [jssp, #16]
0xffff91437d38  1176  stp x6, x7, [jssp, #-32]!
0xffff91437d3c  1180  stp x8, x9, [jssp, #16]
0xffff91437d40  1184  stp x3, x4, [jssp, #-24]!
0xffff91437d44  1188  str x5, [jssp, #16]
0xffff91437d48  1192  sub csp, jssp, #0xb0 (176)
0xffff91437d4c  1196  stp d26, d27, [jssp, #-32]!
0xffff91437d50  1200  stp d28, d29, [jssp, #16]
0xffff91437d54  1204  stp d22, d23, [jssp, #-32]!
0xffff91437d58  1208  stp d24, d25, [jssp, #16]
0xffff91437d5c  1212  stp d18, d19, [jssp, #-32]!
0xffff91437d60  1216  stp d20, d21, [jssp, #16]
0xffff91437d64  1220  stp d6, d7, [jssp, #-32]!
0xffff91437d68  1224  stp d16, d17, [jssp, #16]
0xffff91437d6c  1228  stp d2, d3, [jssp, #-32]!
0xffff91437d70  1232  stp d4, d5, [jssp, #16]
0xffff91437d74  1236  stp d0, d1, [jssp, #-16]!
0xffff91437d78  1240  mov x0, x4
0xffff91437d7c  1244  mov x1, x3
0xffff91437d80  1248  ldr x2, pc+624 (addr 0x0000ffff91437ff0)    ;; external reference (isolate)
0xffff91437d84  1252  ldr x16, pc+628 (addr 0x0000ffff91437ff8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91437d88  1256  and csp, jssp, #0xfffffffffffffff0
0xffff91437d8c  1260  blr x16
0xffff91437d90  1264  ldp d2, d3, [jssp, #16]
0xffff91437d94  1268  ldp d0, d1, [jssp], #32
0xffff91437d98  1272  ldp d6, d7, [jssp, #16]
0xffff91437d9c  1276  ldp d4, d5, [jssp], #32
0xffff91437da0  1280  ldp d18, d19, [jssp, #16]
0xffff91437da4  1284  ldp d16, d17, [jssp], #32
0xffff91437da8  1288  ldp d22, d23, [jssp, #16]
0xffff91437dac  1292  ldp d20, d21, [jssp], #32
0xffff91437db0  1296  ldp d26, d27, [jssp, #16]
0xffff91437db4  1300  ldp d24, d25, [jssp], #32
0xffff91437db8  1304  ldp d28, d29, [jssp], #16
0xffff91437dbc  1308  ldp x5, x6, [jssp, #16]
0xffff91437dc0  1312  ldp x3, x4, [jssp], #32
0xffff91437dc4  1316  ldp x9, x10, [jssp, #16]
0xffff91437dc8  1320  ldp x7, x8, [jssp], #32
0xffff91437dcc  1324  ldp x13, x14, [jssp, #16]
0xffff91437dd0  1328  ldp x11, x12, [jssp], #32
0xffff91437dd4  1332  ldr lr, [jssp, #16]
0xffff91437dd8  1336  ldp x15, x18, [jssp], #24
0xffff91437ddc  1340  ldp x1, x0, [jssp], #16
0xffff91437de0  1344  ldr x16, pc+544 (addr 0x0000ffff91438000)    ;; external reference (store_buffer_top)
0xffff91437de4  1348  ldr x2, [x16]
0xffff91437de8  1352  str x3, [x2], #8
0xffff91437dec  1356  str x2, [x16]
0xffff91437df0  1360  tst x2, #0x1ffff
0xffff91437df4  1364  b.eq #+0x8 (addr 0xffff91437dfc)
0xffff91437df8  1368  ret
0xffff91437dfc  1372  sub csp, jssp, #0x8 (8)
0xffff91437e00  1376  str lr, [jssp, #-8]!
0xffff91437e04  1380  ldr x17, pc+516 (addr 0x0000ffff91438008)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91437e08  1384  blr x17
0xffff91437e0c  1388  ldr lr, [jssp], #8
0xffff91437e10  1392  ret
0xffff91437e14  1396  and x2, x4, #0xfffffffffff00000
0xffff91437e18  1400  ldr x0, [x2, #104]
0xffff91437e1c  1404  subs x0, x0, #0x1 (1)
0xffff91437e20  1408  str x0, [x2, #104]
0xffff91437e24  1412  b.mi #+0x84 (addr 0xffff91437ea8)
0xffff91437e28  1416  ubfx x16, x4, #8, #12
0xffff91437e2c  1420  and x2, x4, #0xfffffffffff00000
0xffff91437e30  1424  add x2, x2, x16, lsl #2
0xffff91437e34  1428  ubfx x0, x4, #3, #5
0xffff91437e38  1432  ldr x2, [x2, #360]
0xffff91437e3c  1436  lsr x2, x2, x0
0xffff91437e40  1440  tbz w2, #0, #+0x8 (addr 0xffff91437e48)
0xffff91437e44  1444  tbnz w2, #1, #+0xc (addr 0xffff91437e50)
0xffff91437e48  1448  ldp x1, x0, [jssp], #16
0xffff91437e4c  1452  ret
0xffff91437e50  1456  ldr x2, [x3]
0xffff91437e54  1460  and x0, x2, #0xfffffffffff00000
0xffff91437e58  1464  ldr x0, [x0, #8]
0xffff91437e5c  1468  tbz w0, #6, #+0x18 (addr 0xffff91437e74)
0xffff91437e60  1472  and x0, x4, #0xfffffffffff00000
0xffff91437e64  1476  ldr x0, [x0, #8]
0xffff91437e68  1480  movz x16, #0x58
0xffff91437e6c  1484  tst x0, x16
0xffff91437e70  1488  b.eq #+0x38 (addr 0xffff91437ea8)
0xffff91437e74  1492  sub csp, jssp, #0x10 (16)
0xffff91437e78  1496  stp x4, x3, [jssp, #-16]!
0xffff91437e7c  1500  ubfx x16, x2, #8, #12
0xffff91437e80  1504  and x0, x2, #0xfffffffffff00000
0xffff91437e84  1508  add x0, x0, x16, lsl #2
0xffff91437e88  1512  ubfx x4, x2, #3, #5
0xffff91437e8c  1516  ldr x3, [x0, #360]
0xffff91437e90  1520  lsr x3, x3, x4
0xffff91437e94  1524  tbz w3, #0, #+0x10 (addr 0xffff91437ea4)
0xffff91437e98  1528  ldp x4, x3, [jssp], #16
0xffff91437e9c  1532  ldp x1, x0, [jssp], #16
0xffff91437ea0  1536  ret
0xffff91437ea4  1540  ldp x4, x3, [jssp], #16
0xffff91437ea8  1544  sub csp, jssp, #0x78 (120)
0xffff91437eac  1548  stp x14, x15, [jssp, #-32]!
0xffff91437eb0  1552  stp x18, lr, [jssp, #16]
0xffff91437eb4  1556  stp x10, x11, [jssp, #-32]!
0xffff91437eb8  1560  stp x12, x13, [jssp, #16]
0xffff91437ebc  1564  stp x6, x7, [jssp, #-32]!
0xffff91437ec0  1568  stp x8, x9, [jssp, #16]
0xffff91437ec4  1572  stp x3, x4, [jssp, #-24]!
0xffff91437ec8  1576  str x5, [jssp, #16]
0xffff91437ecc  1580  sub csp, jssp, #0xb0 (176)
0xffff91437ed0  1584  stp d26, d27, [jssp, #-32]!
0xffff91437ed4  1588  stp d28, d29, [jssp, #16]
0xffff91437ed8  1592  stp d22, d23, [jssp, #-32]!
0xffff91437edc  1596  stp d24, d25, [jssp, #16]
0xffff91437ee0  1600  stp d18, d19, [jssp, #-32]!
0xffff91437ee4  1604  stp d20, d21, [jssp, #16]
0xffff91437ee8  1608  stp d6, d7, [jssp, #-32]!
0xffff91437eec  1612  stp d16, d17, [jssp, #16]
0xffff91437ef0  1616  stp d2, d3, [jssp, #-32]!
0xffff91437ef4  1620  stp d4, d5, [jssp, #16]
0xffff91437ef8  1624  stp d0, d1, [jssp, #-16]!
0xffff91437efc  1628  mov x0, x4
0xffff91437f00  1632  mov x1, x3
0xffff91437f04  1636  ldr x2, pc+268 (addr 0x0000ffff91438010)    ;; external reference (isolate)
0xffff91437f08  1640  ldr x16, pc+272 (addr 0x0000ffff91438018)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91437f0c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff91437f10  1648  blr x16
0xffff91437f14  1652  ldp d2, d3, [jssp, #16]
0xffff91437f18  1656  ldp d0, d1, [jssp], #32
0xffff91437f1c  1660  ldp d6, d7, [jssp, #16]
0xffff91437f20  1664  ldp d4, d5, [jssp], #32
0xffff91437f24  1668  ldp d18, d19, [jssp, #16]
0xffff91437f28  1672  ldp d16, d17, [jssp], #32
0xffff91437f2c  1676  ldp d22, d23, [jssp, #16]
0xffff91437f30  1680  ldp d20, d21, [jssp], #32
0xffff91437f34  1684  ldp d26, d27, [jssp, #16]
0xffff91437f38  1688  ldp d24, d25, [jssp], #32
0xffff91437f3c  1692  ldp d28, d29, [jssp], #16
0xffff91437f40  1696  ldp x5, x6, [jssp, #16]
0xffff91437f44  1700  ldp x3, x4, [jssp], #32
0xffff91437f48  1704  ldp x9, x10, [jssp, #16]
0xffff91437f4c  1708  ldp x7, x8, [jssp], #32
0xffff91437f50  1712  ldp x13, x14, [jssp, #16]
0xffff91437f54  1716  ldp x11, x12, [jssp], #32
0xffff91437f58  1720  ldr lr, [jssp, #16]
0xffff91437f5c  1724  ldp x15, x18, [jssp], #24
0xffff91437f60  1728  ldp x1, x0, [jssp], #16
0xffff91437f64  1732  ret
0xffff91437f68  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff91437f6c  1740  d63f03e0       constant
0xffff91437f70  1744  4117f8c0       constant
0xffff91437f74  1748  00000000       constant
0xffff91437f78  1752  914065a0       constant
0xffff91437f7c  1756  0000ffff       constant
0xffff91437f80  1760  4117f8c0       constant
0xffff91437f84  1764  00000000       constant
0xffff91437f88  1768  914065a0       constant
0xffff91437f8c  1772  0000ffff       constant
0xffff91437f90  1776  4117f8c0       constant
0xffff91437f94  1780  00000000       constant
0xffff91437f98  1784  914065a0       constant
0xffff91437f9c  1788  0000ffff       constant
0xffff91437fa0  1792  4117e2d0       constant
0xffff91437fa4  1796  00000000       constant
0xffff91437fa8  1800  00c2d958       constant
0xffff91437fac  1804  00000000       constant
0xffff91437fb0  1808  4117f8c0       constant
0xffff91437fb4  1812  00000000       constant
0xffff91437fb8  1816  914065a0       constant
0xffff91437fbc  1820  0000ffff       constant
0xffff91437fc0  1824  4117e2d0       constant
0xffff91437fc4  1828  00000000       constant
0xffff91437fc8  1832  00c2d958       constant
0xffff91437fcc  1836  00000000       constant
0xffff91437fd0  1840  4117f8c0       constant
0xffff91437fd4  1844  00000000       constant
0xffff91437fd8  1848  914065a0       constant
0xffff91437fdc  1852  0000ffff       constant
0xffff91437fe0  1856  4117f8c0       constant
0xffff91437fe4  1860  00000000       constant
0xffff91437fe8  1864  914065a0       constant
0xffff91437fec  1868  0000ffff       constant
0xffff91437ff0  1872  4117e2d0       constant
0xffff91437ff4  1876  00000000       constant
0xffff91437ff8  1880  00c2d958       constant
0xffff91437ffc  1884  00000000       constant
0xffff91438000  1888  4117f8c0       constant
0xffff91438004  1892  00000000       constant
0xffff91438008  1896  914065a0       constant
0xffff9143800c  1900  0000ffff       constant
0xffff91438010  1904  4117e2d0       constant
0xffff91438014  1908  00000000       constant
0xffff91438018  1912  00c2d958       constant
0xffff9143801c  1916  00000000       constant


RelocInfo (size = 65)
0xffff914378a8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914378cc  code target (STUB)  (0xffff914065a0)
0xffff91437944  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91437968  code target (STUB)  (0xffff914065a0)
0xffff914379a8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914379cc  code target (STUB)  (0xffff914065a0)
0xffff91437a3c  external reference (isolate)  (0x4117e2d0)
0xffff91437a40  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91437a9c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91437ac0  code target (STUB)  (0xffff914065a0)
0xffff91437ba0  external reference (isolate)  (0x4117e2d0)
0xffff91437ba4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91437c68  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91437c8c  code target (STUB)  (0xffff914065a0)
0xffff91437cec  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91437d10  code target (STUB)  (0xffff914065a0)
0xffff91437d80  external reference (isolate)  (0x4117e2d0)
0xffff91437d84  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91437de0  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91437e04  code target (STUB)  (0xffff914065a0)
0xffff91437f04  external reference (isolate)  (0x4117e2d0)
0xffff91437f08  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91437f68  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff91438080     0  adr xzr, #+0x40 (addr 0xffff914380c0)
0xffff91438084     4  adr xzr, #+0x360 (addr 0xffff914383e4)
0xffff91438088     8  ldr x16, pc+1736 (addr 0x0000ffff91438750)    ;; external reference (store_buffer_top)
0xffff9143808c    12  ldr x5, [x16]
0xffff91438090    16  str x2, [x5], #8
0xffff91438094    20  str x5, [x16]
0xffff91438098    24  tst x5, #0x1ffff
0xffff9143809c    28  b.eq #+0x8 (addr 0xffff914380a4)
0xffff914380a0    32  ret
0xffff914380a4    36  sub csp, jssp, #0x8 (8)
0xffff914380a8    40  str lr, [jssp, #-8]!
0xffff914380ac    44  ldr x17, pc+1708 (addr 0x0000ffff91438758)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914380b0    48  blr x17
0xffff914380b4    52  ldr lr, [jssp], #8
0xffff914380b8    56  ret
0xffff914380bc    60  ret
0xffff914380c0    64  sub csp, jssp, #0x10 (16)
0xffff914380c4    68  stp x3, x0, [jssp, #-16]!
0xffff914380c8    72  ldr x5, [x2]
0xffff914380cc    76  and x16, x5, #0xfffffffffff00000
0xffff914380d0    80  ldr x16, [x16, #8]
0xffff914380d4    84  tst x16, #0x18
0xffff914380d8    88  b.eq #+0x1d8 (addr 0xffff914382b0)
0xffff914380dc    92  and x16, x1, #0xfffffffffff00000
0xffff914380e0    96  ldr x16, [x16, #8]
0xffff914380e4   100  tst x16, #0x18
0xffff914380e8   104  b.ne #+0x1c8 (addr 0xffff914382b0)
0xffff914380ec   108  and x5, x1, #0xfffffffffff00000
0xffff914380f0   112  ldr x0, [x5, #104]
0xffff914380f4   116  subs x0, x0, #0x1 (1)
0xffff914380f8   120  str x0, [x5, #104]
0xffff914380fc   124  b.mi #+0xc4 (addr 0xffff914381c0)
0xffff91438100   128  ubfx x16, x1, #8, #12
0xffff91438104   132  and x5, x1, #0xfffffffffff00000
0xffff91438108   136  add x5, x5, x16, lsl #2
0xffff9143810c   140  ubfx x0, x1, #3, #5
0xffff91438110   144  ldr x5, [x5, #360]
0xffff91438114   148  lsr x5, x5, x0
0xffff91438118   152  tbz w5, #0, #+0x8 (addr 0xffff91438120)
0xffff9143811c   156  tbnz w5, #1, #+0x3c (addr 0xffff91438158)
0xffff91438120   160  ldp x3, x0, [jssp], #16
0xffff91438124   164  ldr x16, pc+1596 (addr 0x0000ffff91438760)    ;; external reference (store_buffer_top)
0xffff91438128   168  ldr x5, [x16]
0xffff9143812c   172  str x2, [x5], #8
0xffff91438130   176  str x5, [x16]
0xffff91438134   180  tst x5, #0x1ffff
0xffff91438138   184  b.eq #+0x8 (addr 0xffff91438140)
0xffff9143813c   188  ret
0xffff91438140   192  sub csp, jssp, #0x8 (8)
0xffff91438144   196  str lr, [jssp, #-8]!
0xffff91438148   200  ldr x17, pc+1568 (addr 0x0000ffff91438768)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9143814c   204  blr x17
0xffff91438150   208  ldr lr, [jssp], #8
0xffff91438154   212  ret
0xffff91438158   216  ldr x5, [x2]
0xffff9143815c   220  sub csp, jssp, #0x10 (16)
0xffff91438160   224  stp x1, x2, [jssp, #-16]!
0xffff91438164   228  ubfx x16, x5, #8, #12
0xffff91438168   232  and x0, x5, #0xfffffffffff00000
0xffff9143816c   236  add x0, x0, x16, lsl #2
0xffff91438170   240  ubfx x1, x5, #3, #5
0xffff91438174   244  ldr x2, [x0, #360]
0xffff91438178   248  lsr x2, x2, x1
0xffff9143817c   252  tbz w2, #0, #+0x40 (addr 0xffff914381bc)
0xffff91438180   256  ldp x1, x2, [jssp], #16
0xffff91438184   260  ldp x3, x0, [jssp], #16
0xffff91438188   264  ldr x16, pc+1512 (addr 0x0000ffff91438770)    ;; external reference (store_buffer_top)
0xffff9143818c   268  ldr x5, [x16]
0xffff91438190   272  str x2, [x5], #8
0xffff91438194   276  str x5, [x16]
0xffff91438198   280  tst x5, #0x1ffff
0xffff9143819c   284  b.eq #+0x8 (addr 0xffff914381a4)
0xffff914381a0   288  ret
0xffff914381a4   292  sub csp, jssp, #0x8 (8)
0xffff914381a8   296  str lr, [jssp, #-8]!
0xffff914381ac   300  ldr x17, pc+1484 (addr 0x0000ffff91438778)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914381b0   304  blr x17
0xffff914381b4   308  ldr lr, [jssp], #8
0xffff914381b8   312  ret
0xffff914381bc   316  ldp x1, x2, [jssp], #16
0xffff914381c0   320  sub csp, jssp, #0x78 (120)
0xffff914381c4   324  stp x14, x15, [jssp, #-32]!
0xffff914381c8   328  stp x18, lr, [jssp, #16]
0xffff914381cc   332  stp x10, x11, [jssp, #-32]!
0xffff914381d0   336  stp x12, x13, [jssp, #16]
0xffff914381d4   340  stp x6, x7, [jssp, #-32]!
0xffff914381d8   344  stp x8, x9, [jssp, #16]
0xffff914381dc   348  stp x1, x2, [jssp, #-24]!
0xffff914381e0   352  str x4, [jssp, #16]
0xffff914381e4   356  sub csp, jssp, #0xb0 (176)
0xffff914381e8   360  stp d26, d27, [jssp, #-32]!
0xffff914381ec   364  stp d28, d29, [jssp, #16]
0xffff914381f0   368  stp d22, d23, [jssp, #-32]!
0xffff914381f4   372  stp d24, d25, [jssp, #16]
0xffff914381f8   376  stp d18, d19, [jssp, #-32]!
0xffff914381fc   380  stp d20, d21, [jssp, #16]
0xffff91438200   384  stp d6, d7, [jssp, #-32]!
0xffff91438204   388  stp d16, d17, [jssp, #16]
0xffff91438208   392  stp d2, d3, [jssp, #-32]!
0xffff9143820c   396  stp d4, d5, [jssp, #16]
0xffff91438210   400  stp d0, d1, [jssp, #-16]!
0xffff91438214   404  mov x0, x1
0xffff91438218   408  mov x1, x2
0xffff9143821c   412  ldr x2, pc+1380 (addr 0x0000ffff91438780)    ;; external reference (isolate)
0xffff91438220   416  ldr x16, pc+1384 (addr 0x0000ffff91438788)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91438224   420  and csp, jssp, #0xfffffffffffffff0
0xffff91438228   424  blr x16
0xffff9143822c   428  ldp d2, d3, [jssp, #16]
0xffff91438230   432  ldp d0, d1, [jssp], #32
0xffff91438234   436  ldp d6, d7, [jssp, #16]
0xffff91438238   440  ldp d4, d5, [jssp], #32
0xffff9143823c   444  ldp d18, d19, [jssp, #16]
0xffff91438240   448  ldp d16, d17, [jssp], #32
0xffff91438244   452  ldp d22, d23, [jssp, #16]
0xffff91438248   456  ldp d20, d21, [jssp], #32
0xffff9143824c   460  ldp d26, d27, [jssp, #16]
0xffff91438250   464  ldp d24, d25, [jssp], #32
0xffff91438254   468  ldp d28, d29, [jssp], #16
0xffff91438258   472  ldp x4, x6, [jssp, #16]
0xffff9143825c   476  ldp x1, x2, [jssp], #32
0xffff91438260   480  ldp x9, x10, [jssp, #16]
0xffff91438264   484  ldp x7, x8, [jssp], #32
0xffff91438268   488  ldp x13, x14, [jssp, #16]
0xffff9143826c   492  ldp x11, x12, [jssp], #32
0xffff91438270   496  ldr lr, [jssp, #16]
0xffff91438274   500  ldp x15, x18, [jssp], #24
0xffff91438278   504  ldp x3, x0, [jssp], #16
0xffff9143827c   508  ldr x16, pc+1300 (addr 0x0000ffff91438790)    ;; external reference (store_buffer_top)
0xffff91438280   512  ldr x5, [x16]
0xffff91438284   516  str x2, [x5], #8
0xffff91438288   520  str x5, [x16]
0xffff9143828c   524  tst x5, #0x1ffff
0xffff91438290   528  b.eq #+0x8 (addr 0xffff91438298)
0xffff91438294   532  ret
0xffff91438298   536  sub csp, jssp, #0x8 (8)
0xffff9143829c   540  str lr, [jssp, #-8]!
0xffff914382a0   544  ldr x17, pc+1272 (addr 0x0000ffff91438798)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914382a4   548  blr x17
0xffff914382a8   552  ldr lr, [jssp], #8
0xffff914382ac   556  ret
0xffff914382b0   560  and x5, x1, #0xfffffffffff00000
0xffff914382b4   564  ldr x0, [x5, #104]
0xffff914382b8   568  subs x0, x0, #0x1 (1)
0xffff914382bc   572  str x0, [x5, #104]
0xffff914382c0   576  b.mi #+0x64 (addr 0xffff91438324)
0xffff914382c4   580  ubfx x16, x1, #8, #12
0xffff914382c8   584  and x5, x1, #0xfffffffffff00000
0xffff914382cc   588  add x5, x5, x16, lsl #2
0xffff914382d0   592  ubfx x0, x1, #3, #5
0xffff914382d4   596  ldr x5, [x5, #360]
0xffff914382d8   600  lsr x5, x5, x0
0xffff914382dc   604  tbz w5, #0, #+0x8 (addr 0xffff914382e4)
0xffff914382e0   608  tbnz w5, #1, #+0xc (addr 0xffff914382ec)
0xffff914382e4   612  ldp x3, x0, [jssp], #16
0xffff914382e8   616  ret
0xffff914382ec   620  ldr x5, [x2]
0xffff914382f0   624  sub csp, jssp, #0x10 (16)
0xffff914382f4   628  stp x1, x2, [jssp, #-16]!
0xffff914382f8   632  ubfx x16, x5, #8, #12
0xffff914382fc   636  and x0, x5, #0xfffffffffff00000
0xffff91438300   640  add x0, x0, x16, lsl #2
0xffff91438304   644  ubfx x1, x5, #3, #5
0xffff91438308   648  ldr x2, [x0, #360]
0xffff9143830c   652  lsr x2, x2, x1
0xffff91438310   656  tbz w2, #0, #+0x10 (addr 0xffff91438320)
0xffff91438314   660  ldp x1, x2, [jssp], #16
0xffff91438318   664  ldp x3, x0, [jssp], #16
0xffff9143831c   668  ret
0xffff91438320   672  ldp x1, x2, [jssp], #16
0xffff91438324   676  sub csp, jssp, #0x78 (120)
0xffff91438328   680  stp x14, x15, [jssp, #-32]!
0xffff9143832c   684  stp x18, lr, [jssp, #16]
0xffff91438330   688  stp x10, x11, [jssp, #-32]!
0xffff91438334   692  stp x12, x13, [jssp, #16]
0xffff91438338   696  stp x6, x7, [jssp, #-32]!
0xffff9143833c   700  stp x8, x9, [jssp, #16]
0xffff91438340   704  stp x1, x2, [jssp, #-24]!
0xffff91438344   708  str x4, [jssp, #16]
0xffff91438348   712  sub csp, jssp, #0xb0 (176)
0xffff9143834c   716  stp d26, d27, [jssp, #-32]!
0xffff91438350   720  stp d28, d29, [jssp, #16]
0xffff91438354   724  stp d22, d23, [jssp, #-32]!
0xffff91438358   728  stp d24, d25, [jssp, #16]
0xffff9143835c   732  stp d18, d19, [jssp, #-32]!
0xffff91438360   736  stp d20, d21, [jssp, #16]
0xffff91438364   740  stp d6, d7, [jssp, #-32]!
0xffff91438368   744  stp d16, d17, [jssp, #16]
0xffff9143836c   748  stp d2, d3, [jssp, #-32]!
0xffff91438370   752  stp d4, d5, [jssp, #16]
0xffff91438374   756  stp d0, d1, [jssp, #-16]!
0xffff91438378   760  mov x0, x1
0xffff9143837c   764  mov x1, x2
0xffff91438380   768  ldr x2, pc+1056 (addr 0x0000ffff914387a0)    ;; external reference (isolate)
0xffff91438384   772  ldr x16, pc+1060 (addr 0x0000ffff914387a8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91438388   776  and csp, jssp, #0xfffffffffffffff0
0xffff9143838c   780  blr x16
0xffff91438390   784  ldp d2, d3, [jssp, #16]
0xffff91438394   788  ldp d0, d1, [jssp], #32
0xffff91438398   792  ldp d6, d7, [jssp, #16]
0xffff9143839c   796  ldp d4, d5, [jssp], #32
0xffff914383a0   800  ldp d18, d19, [jssp, #16]
0xffff914383a4   804  ldp d16, d17, [jssp], #32
0xffff914383a8   808  ldp d22, d23, [jssp, #16]
0xffff914383ac   812  ldp d20, d21, [jssp], #32
0xffff914383b0   816  ldp d26, d27, [jssp, #16]
0xffff914383b4   820  ldp d24, d25, [jssp], #32
0xffff914383b8   824  ldp d28, d29, [jssp], #16
0xffff914383bc   828  ldp x4, x6, [jssp, #16]
0xffff914383c0   832  ldp x1, x2, [jssp], #32
0xffff914383c4   836  ldp x9, x10, [jssp, #16]
0xffff914383c8   840  ldp x7, x8, [jssp], #32
0xffff914383cc   844  ldp x13, x14, [jssp, #16]
0xffff914383d0   848  ldp x11, x12, [jssp], #32
0xffff914383d4   852  ldr lr, [jssp, #16]
0xffff914383d8   856  ldp x15, x18, [jssp], #24
0xffff914383dc   860  ldp x3, x0, [jssp], #16
0xffff914383e0   864  ret
0xffff914383e4   868  sub csp, jssp, #0x10 (16)
0xffff914383e8   872  stp x3, x0, [jssp, #-16]!
0xffff914383ec   876  ldr x5, [x2]
0xffff914383f0   880  and x16, x5, #0xfffffffffff00000
0xffff914383f4   884  ldr x16, [x16, #8]
0xffff914383f8   888  tst x16, #0x18
0xffff914383fc   892  b.eq #+0x1f8 (addr 0xffff914385f4)
0xffff91438400   896  and x16, x1, #0xfffffffffff00000
0xffff91438404   900  ldr x16, [x16, #8]
0xffff91438408   904  tst x16, #0x18
0xffff9143840c   908  b.ne #+0x1e8 (addr 0xffff914385f4)
0xffff91438410   912  and x5, x1, #0xfffffffffff00000
0xffff91438414   916  ldr x0, [x5, #104]
0xffff91438418   920  subs x0, x0, #0x1 (1)
0xffff9143841c   924  str x0, [x5, #104]
0xffff91438420   928  b.mi #+0xe4 (addr 0xffff91438504)
0xffff91438424   932  ubfx x16, x1, #8, #12
0xffff91438428   936  and x5, x1, #0xfffffffffff00000
0xffff9143842c   940  add x5, x5, x16, lsl #2
0xffff91438430   944  ubfx x0, x1, #3, #5
0xffff91438434   948  ldr x5, [x5, #360]
0xffff91438438   952  lsr x5, x5, x0
0xffff9143843c   956  tbz w5, #0, #+0x8 (addr 0xffff91438444)
0xffff91438440   960  tbnz w5, #1, #+0x3c (addr 0xffff9143847c)
0xffff91438444   964  ldp x3, x0, [jssp], #16
0xffff91438448   968  ldr x16, pc+872 (addr 0x0000ffff914387b0)    ;; external reference (store_buffer_top)
0xffff9143844c   972  ldr x5, [x16]
0xffff91438450   976  str x2, [x5], #8
0xffff91438454   980  str x5, [x16]
0xffff91438458   984  tst x5, #0x1ffff
0xffff9143845c   988  b.eq #+0x8 (addr 0xffff91438464)
0xffff91438460   992  ret
0xffff91438464   996  sub csp, jssp, #0x8 (8)
0xffff91438468  1000  str lr, [jssp, #-8]!
0xffff9143846c  1004  ldr x17, pc+844 (addr 0x0000ffff914387b8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91438470  1008  blr x17
0xffff91438474  1012  ldr lr, [jssp], #8
0xffff91438478  1016  ret
0xffff9143847c  1020  ldr x5, [x2]
0xffff91438480  1024  and x0, x5, #0xfffffffffff00000
0xffff91438484  1028  ldr x0, [x0, #8]
0xffff91438488  1032  tbz w0, #6, #+0x18 (addr 0xffff914384a0)
0xffff9143848c  1036  and x0, x1, #0xfffffffffff00000
0xffff91438490  1040  ldr x0, [x0, #8]
0xffff91438494  1044  movz x16, #0x58
0xffff91438498  1048  tst x0, x16
0xffff9143849c  1052  b.eq #+0x68 (addr 0xffff91438504)
0xffff914384a0  1056  sub csp, jssp, #0x10 (16)
0xffff914384a4  1060  stp x1, x2, [jssp, #-16]!
0xffff914384a8  1064  ubfx x16, x5, #8, #12
0xffff914384ac  1068  and x0, x5, #0xfffffffffff00000
0xffff914384b0  1072  add x0, x0, x16, lsl #2
0xffff914384b4  1076  ubfx x1, x5, #3, #5
0xffff914384b8  1080  ldr x2, [x0, #360]
0xffff914384bc  1084  lsr x2, x2, x1
0xffff914384c0  1088  tbz w2, #0, #+0x40 (addr 0xffff91438500)
0xffff914384c4  1092  ldp x1, x2, [jssp], #16
0xffff914384c8  1096  ldp x3, x0, [jssp], #16
0xffff914384cc  1100  ldr x16, pc+756 (addr 0x0000ffff914387c0)    ;; external reference (store_buffer_top)
0xffff914384d0  1104  ldr x5, [x16]
0xffff914384d4  1108  str x2, [x5], #8
0xffff914384d8  1112  str x5, [x16]
0xffff914384dc  1116  tst x5, #0x1ffff
0xffff914384e0  1120  b.eq #+0x8 (addr 0xffff914384e8)
0xffff914384e4  1124  ret
0xffff914384e8  1128  sub csp, jssp, #0x8 (8)
0xffff914384ec  1132  str lr, [jssp, #-8]!
0xffff914384f0  1136  ldr x17, pc+728 (addr 0x0000ffff914387c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914384f4  1140  blr x17
0xffff914384f8  1144  ldr lr, [jssp], #8
0xffff914384fc  1148  ret
0xffff91438500  1152  ldp x1, x2, [jssp], #16
0xffff91438504  1156  sub csp, jssp, #0x78 (120)
0xffff91438508  1160  stp x14, x15, [jssp, #-32]!
0xffff9143850c  1164  stp x18, lr, [jssp, #16]
0xffff91438510  1168  stp x10, x11, [jssp, #-32]!
0xffff91438514  1172  stp x12, x13, [jssp, #16]
0xffff91438518  1176  stp x6, x7, [jssp, #-32]!
0xffff9143851c  1180  stp x8, x9, [jssp, #16]
0xffff91438520  1184  stp x1, x2, [jssp, #-24]!
0xffff91438524  1188  str x4, [jssp, #16]
0xffff91438528  1192  sub csp, jssp, #0xb0 (176)
0xffff9143852c  1196  stp d26, d27, [jssp, #-32]!
0xffff91438530  1200  stp d28, d29, [jssp, #16]
0xffff91438534  1204  stp d22, d23, [jssp, #-32]!
0xffff91438538  1208  stp d24, d25, [jssp, #16]
0xffff9143853c  1212  stp d18, d19, [jssp, #-32]!
0xffff91438540  1216  stp d20, d21, [jssp, #16]
0xffff91438544  1220  stp d6, d7, [jssp, #-32]!
0xffff91438548  1224  stp d16, d17, [jssp, #16]
0xffff9143854c  1228  stp d2, d3, [jssp, #-32]!
0xffff91438550  1232  stp d4, d5, [jssp, #16]
0xffff91438554  1236  stp d0, d1, [jssp, #-16]!
0xffff91438558  1240  mov x0, x1
0xffff9143855c  1244  mov x1, x2
0xffff91438560  1248  ldr x2, pc+624 (addr 0x0000ffff914387d0)    ;; external reference (isolate)
0xffff91438564  1252  ldr x16, pc+628 (addr 0x0000ffff914387d8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91438568  1256  and csp, jssp, #0xfffffffffffffff0
0xffff9143856c  1260  blr x16
0xffff91438570  1264  ldp d2, d3, [jssp, #16]
0xffff91438574  1268  ldp d0, d1, [jssp], #32
0xffff91438578  1272  ldp d6, d7, [jssp, #16]
0xffff9143857c  1276  ldp d4, d5, [jssp], #32
0xffff91438580  1280  ldp d18, d19, [jssp, #16]
0xffff91438584  1284  ldp d16, d17, [jssp], #32
0xffff91438588  1288  ldp d22, d23, [jssp, #16]
0xffff9143858c  1292  ldp d20, d21, [jssp], #32
0xffff91438590  1296  ldp d26, d27, [jssp, #16]
0xffff91438594  1300  ldp d24, d25, [jssp], #32
0xffff91438598  1304  ldp d28, d29, [jssp], #16
0xffff9143859c  1308  ldp x4, x6, [jssp, #16]
0xffff914385a0  1312  ldp x1, x2, [jssp], #32
0xffff914385a4  1316  ldp x9, x10, [jssp, #16]
0xffff914385a8  1320  ldp x7, x8, [jssp], #32
0xffff914385ac  1324  ldp x13, x14, [jssp, #16]
0xffff914385b0  1328  ldp x11, x12, [jssp], #32
0xffff914385b4  1332  ldr lr, [jssp, #16]
0xffff914385b8  1336  ldp x15, x18, [jssp], #24
0xffff914385bc  1340  ldp x3, x0, [jssp], #16
0xffff914385c0  1344  ldr x16, pc+544 (addr 0x0000ffff914387e0)    ;; external reference (store_buffer_top)
0xffff914385c4  1348  ldr x5, [x16]
0xffff914385c8  1352  str x2, [x5], #8
0xffff914385cc  1356  str x5, [x16]
0xffff914385d0  1360  tst x5, #0x1ffff
0xffff914385d4  1364  b.eq #+0x8 (addr 0xffff914385dc)
0xffff914385d8  1368  ret
0xffff914385dc  1372  sub csp, jssp, #0x8 (8)
0xffff914385e0  1376  str lr, [jssp, #-8]!
0xffff914385e4  1380  ldr x17, pc+516 (addr 0x0000ffff914387e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914385e8  1384  blr x17
0xffff914385ec  1388  ldr lr, [jssp], #8
0xffff914385f0  1392  ret
0xffff914385f4  1396  and x5, x1, #0xfffffffffff00000
0xffff914385f8  1400  ldr x0, [x5, #104]
0xffff914385fc  1404  subs x0, x0, #0x1 (1)
0xffff91438600  1408  str x0, [x5, #104]
0xffff91438604  1412  b.mi #+0x84 (addr 0xffff91438688)
0xffff91438608  1416  ubfx x16, x1, #8, #12
0xffff9143860c  1420  and x5, x1, #0xfffffffffff00000
0xffff91438610  1424  add x5, x5, x16, lsl #2
0xffff91438614  1428  ubfx x0, x1, #3, #5
0xffff91438618  1432  ldr x5, [x5, #360]
0xffff9143861c  1436  lsr x5, x5, x0
0xffff91438620  1440  tbz w5, #0, #+0x8 (addr 0xffff91438628)
0xffff91438624  1444  tbnz w5, #1, #+0xc (addr 0xffff91438630)
0xffff91438628  1448  ldp x3, x0, [jssp], #16
0xffff9143862c  1452  ret
0xffff91438630  1456  ldr x5, [x2]
0xffff91438634  1460  and x0, x5, #0xfffffffffff00000
0xffff91438638  1464  ldr x0, [x0, #8]
0xffff9143863c  1468  tbz w0, #6, #+0x18 (addr 0xffff91438654)
0xffff91438640  1472  and x0, x1, #0xfffffffffff00000
0xffff91438644  1476  ldr x0, [x0, #8]
0xffff91438648  1480  movz x16, #0x58
0xffff9143864c  1484  tst x0, x16
0xffff91438650  1488  b.eq #+0x38 (addr 0xffff91438688)
0xffff91438654  1492  sub csp, jssp, #0x10 (16)
0xffff91438658  1496  stp x1, x2, [jssp, #-16]!
0xffff9143865c  1500  ubfx x16, x5, #8, #12
0xffff91438660  1504  and x0, x5, #0xfffffffffff00000
0xffff91438664  1508  add x0, x0, x16, lsl #2
0xffff91438668  1512  ubfx x1, x5, #3, #5
0xffff9143866c  1516  ldr x2, [x0, #360]
0xffff91438670  1520  lsr x2, x2, x1
0xffff91438674  1524  tbz w2, #0, #+0x10 (addr 0xffff91438684)
0xffff91438678  1528  ldp x1, x2, [jssp], #16
0xffff9143867c  1532  ldp x3, x0, [jssp], #16
0xffff91438680  1536  ret
0xffff91438684  1540  ldp x1, x2, [jssp], #16
0xffff91438688  1544  sub csp, jssp, #0x78 (120)
0xffff9143868c  1548  stp x14, x15, [jssp, #-32]!
0xffff91438690  1552  stp x18, lr, [jssp, #16]
0xffff91438694  1556  stp x10, x11, [jssp, #-32]!
0xffff91438698  1560  stp x12, x13, [jssp, #16]
0xffff9143869c  1564  stp x6, x7, [jssp, #-32]!
0xffff914386a0  1568  stp x8, x9, [jssp, #16]
0xffff914386a4  1572  stp x1, x2, [jssp, #-24]!
0xffff914386a8  1576  str x4, [jssp, #16]
0xffff914386ac  1580  sub csp, jssp, #0xb0 (176)
0xffff914386b0  1584  stp d26, d27, [jssp, #-32]!
0xffff914386b4  1588  stp d28, d29, [jssp, #16]
0xffff914386b8  1592  stp d22, d23, [jssp, #-32]!
0xffff914386bc  1596  stp d24, d25, [jssp, #16]
0xffff914386c0  1600  stp d18, d19, [jssp, #-32]!
0xffff914386c4  1604  stp d20, d21, [jssp, #16]
0xffff914386c8  1608  stp d6, d7, [jssp, #-32]!
0xffff914386cc  1612  stp d16, d17, [jssp, #16]
0xffff914386d0  1616  stp d2, d3, [jssp, #-32]!
0xffff914386d4  1620  stp d4, d5, [jssp, #16]
0xffff914386d8  1624  stp d0, d1, [jssp, #-16]!
0xffff914386dc  1628  mov x0, x1
0xffff914386e0  1632  mov x1, x2
0xffff914386e4  1636  ldr x2, pc+268 (addr 0x0000ffff914387f0)    ;; external reference (isolate)
0xffff914386e8  1640  ldr x16, pc+272 (addr 0x0000ffff914387f8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914386ec  1644  and csp, jssp, #0xfffffffffffffff0
0xffff914386f0  1648  blr x16
0xffff914386f4  1652  ldp d2, d3, [jssp, #16]
0xffff914386f8  1656  ldp d0, d1, [jssp], #32
0xffff914386fc  1660  ldp d6, d7, [jssp, #16]
0xffff91438700  1664  ldp d4, d5, [jssp], #32
0xffff91438704  1668  ldp d18, d19, [jssp, #16]
0xffff91438708  1672  ldp d16, d17, [jssp], #32
0xffff9143870c  1676  ldp d22, d23, [jssp, #16]
0xffff91438710  1680  ldp d20, d21, [jssp], #32
0xffff91438714  1684  ldp d26, d27, [jssp, #16]
0xffff91438718  1688  ldp d24, d25, [jssp], #32
0xffff9143871c  1692  ldp d28, d29, [jssp], #16
0xffff91438720  1696  ldp x4, x6, [jssp, #16]
0xffff91438724  1700  ldp x1, x2, [jssp], #32
0xffff91438728  1704  ldp x9, x10, [jssp, #16]
0xffff9143872c  1708  ldp x7, x8, [jssp], #32
0xffff91438730  1712  ldp x13, x14, [jssp, #16]
0xffff91438734  1716  ldp x11, x12, [jssp], #32
0xffff91438738  1720  ldr lr, [jssp, #16]
0xffff9143873c  1724  ldp x15, x18, [jssp], #24
0xffff91438740  1728  ldp x3, x0, [jssp], #16
0xffff91438744  1732  ret
0xffff91438748  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9143874c  1740  d63f03e0       constant
0xffff91438750  1744  4117f8c0       constant
0xffff91438754  1748  00000000       constant
0xffff91438758  1752  914065a0       constant
0xffff9143875c  1756  0000ffff       constant
0xffff91438760  1760  4117f8c0       constant
0xffff91438764  1764  00000000       constant
0xffff91438768  1768  914065a0       constant
0xffff9143876c  1772  0000ffff       constant
0xffff91438770  1776  4117f8c0       constant
0xffff91438774  1780  00000000       constant
0xffff91438778  1784  914065a0       constant
0xffff9143877c  1788  0000ffff       constant
0xffff91438780  1792  4117e2d0       constant
0xffff91438784  1796  00000000       constant
0xffff91438788  1800  00c2d958       constant
0xffff9143878c  1804  00000000       constant
0xffff91438790  1808  4117f8c0       constant
0xffff91438794  1812  00000000       constant
0xffff91438798  1816  914065a0       constant
0xffff9143879c  1820  0000ffff       constant
0xffff914387a0  1824  4117e2d0       constant
0xffff914387a4  1828  00000000       constant
0xffff914387a8  1832  00c2d958       constant
0xffff914387ac  1836  00000000       constant
0xffff914387b0  1840  4117f8c0       constant
0xffff914387b4  1844  00000000       constant
0xffff914387b8  1848  914065a0       constant
0xffff914387bc  1852  0000ffff       constant
0xffff914387c0  1856  4117f8c0       constant
0xffff914387c4  1860  00000000       constant
0xffff914387c8  1864  914065a0       constant
0xffff914387cc  1868  0000ffff       constant
0xffff914387d0  1872  4117e2d0       constant
0xffff914387d4  1876  00000000       constant
0xffff914387d8  1880  00c2d958       constant
0xffff914387dc  1884  00000000       constant
0xffff914387e0  1888  4117f8c0       constant
0xffff914387e4  1892  00000000       constant
0xffff914387e8  1896  914065a0       constant
0xffff914387ec  1900  0000ffff       constant
0xffff914387f0  1904  4117e2d0       constant
0xffff914387f4  1908  00000000       constant
0xffff914387f8  1912  00c2d958       constant
0xffff914387fc  1916  00000000       constant


RelocInfo (size = 65)
0xffff91438088  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914380ac  code target (STUB)  (0xffff914065a0)
0xffff91438124  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91438148  code target (STUB)  (0xffff914065a0)
0xffff91438188  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914381ac  code target (STUB)  (0xffff914065a0)
0xffff9143821c  external reference (isolate)  (0x4117e2d0)
0xffff91438220  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9143827c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914382a0  code target (STUB)  (0xffff914065a0)
0xffff91438380  external reference (isolate)  (0x4117e2d0)
0xffff91438384  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91438448  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9143846c  code target (STUB)  (0xffff914065a0)
0xffff914384cc  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914384f0  code target (STUB)  (0xffff914065a0)
0xffff91438560  external reference (isolate)  (0x4117e2d0)
0xffff91438564  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff914385c0  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914385e4  code target (STUB)  (0xffff914065a0)
0xffff914386e4  external reference (isolate)  (0x4117e2d0)
0xffff914386e8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91438748  constant pool (size 184)


kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff91438860     0  ldur x6, [x1, #7]
0xffff91438864     4  ldur w7, [x6, #11]
0xffff91438868     8  adds w8, w7, #0x3 (3)
0xffff9143886c    12  b.vs #+0x1dc (addr 0xffff91438a48)
0xffff91438870    16  movz w16, #0x95ff
0xffff91438874    20  cmp w8, w16, lsl #1
0xffff91438878    24  b.hs #+0x1e0 (addr 0xffff91438a58)
0xffff9143887c    28  lsl x9, x8, #32
0xffff91438880    32  lsl w10, w8, #3
0xffff91438884    36  add w10, w10, #0x10 (16)
0xffff91438888    40  sxtw x10, w10
0xffff9143888c    44  movz x11, #0xf2c0
0xffff91438890    48  movk x11, #0x4117, lsl #16
0xffff91438894    52  ldp x13, x16, [x11]
0xffff91438898    56  adds x12, x13, x10
0xffff9143889c    60  ccmp x12, x16, #nzCv, lo
0xffff914388a0    64  b.hi #+0xf8 (addr 0xffff91438998)
0xffff914388a4    68  str x12, [x11]
0xffff914388a8    72  orr x13, x13, #0x1
0xffff914388ac    76  ldr x10, pc+348 (addr 0x0000ffff91438a08)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914388b0    80  stur x10, [x13, #-1]
0xffff914388b4    84  stur x9, [x13, #7]
0xffff914388b8    88  cmp w7, w8
0xffff914388bc    92  b.ge #+0x18 (addr 0xffff914388d4)
0xffff914388c0    96  sub w8, w8, #0x1 (1)
0xffff914388c4   100  ldr x9, pc+332 (addr 0x0000ffff91438a10)    ;; object: 0x49b04241 <undefined>
0xffff914388c8   104  add x10, x13, #0xf (15)
0xffff914388cc   108  str x9, [x10, w8, sxtw #3]
0xffff914388d0   112  b #-0x18 (addr 0xffff914388b8)
0xffff914388d4   116  cmp w7, #0x0 (0)
0xffff914388d8   120  b.le #+0x1c (addr 0xffff914388f4)
0xffff914388dc   124  sub w7, w7, #0x1 (1)
0xffff914388e0   128  add x8, x6, #0xf (15)
0xffff914388e4   132  ldr x9, [x8, w7, sxtw #3]
0xffff914388e8   136  add x8, x13, #0xf (15)
0xffff914388ec   140  str x9, [x8, w7, sxtw #3]
0xffff914388f0   144  b #-0x1c (addr 0xffff914388d4)
0xffff914388f4   148  stur x13, [x1, #7]
0xffff914388f8   152  add x6, x1, #0x7 (7)
0xffff914388fc   156  and x13, x1, #0xfffffffffff00000
0xffff91438900   160  ldr x13, [x13, #8]
0xffff91438904   164  tbz w13, #2, #+0x18 (addr 0xffff9143891c)
0xffff91438908   168  sub csp, jssp, #0x8 (8)
0xffff9143890c   172  str lr, [jssp, #-8]!
0xffff91438910   176  ldr x16, pc+264 (addr 0x0000ffff91438a18)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff91438914   180  blr x16
0xffff91438918   184  ldr lr, [jssp], #8
0xffff9143891c   188  tbz w0, #0, #+0x14c (addr 0xffff91438a68)
0xffff91438920   192  mov x2, x0
0xffff91438924   196  ldur x4, [x1, #7]
0xffff91438928   200  stur x2, [x4, #15]
0xffff9143892c   204  add x3, x4, #0xf (15)
0xffff91438930   208  and x2, x2, #0xfffffffffff00000
0xffff91438934   212  ldr x2, [x2, #8]
0xffff91438938   216  tbz w2, #1, #+0x24 (addr 0xffff9143895c)
0xffff9143893c   220  and x2, x4, #0xfffffffffff00000
0xffff91438940   224  ldr x2, [x2, #8]
0xffff91438944   228  tbz w2, #2, #+0x18 (addr 0xffff9143895c)
0xffff91438948   232  sub csp, jssp, #0x8 (8)
0xffff9143894c   236  str lr, [jssp, #-8]!
0xffff91438950   240  ldr x16, pc+208 (addr 0x0000ffff91438a20)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff91438954   244  blr x16
0xffff91438958   248  ldr lr, [jssp], #8
0xffff9143895c   252  stur x5, [x1, #-1]
0xffff91438960   256  tbz w5, #0, #+0x34 (addr 0xffff91438994)
0xffff91438964   260  sub x2, x1, #0x1 (1)
0xffff91438968   264  and x5, x5, #0xfffffffffff00000
0xffff9143896c   268  ldr x5, [x5, #8]
0xffff91438970   272  tbz w5, #1, #+0x24 (addr 0xffff91438994)
0xffff91438974   276  and x5, x1, #0xfffffffffff00000
0xffff91438978   280  ldr x5, [x5, #8]
0xffff9143897c   284  tbz w5, #2, #+0x18 (addr 0xffff91438994)
0xffff91438980   288  sub csp, jssp, #0x8 (8)
0xffff91438984   292  str lr, [jssp, #-8]!
0xffff91438988   296  ldr x16, pc+160 (addr 0x0000ffff91438a28)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9143898c   300  blr x16
0xffff91438990   304  ldr lr, [jssp], #8
0xffff91438994   308  ret
0xffff91438998   312  sub csp, jssp, #0x10 (16)
0xffff9143899c   316  stp fp, lr, [jssp, #-16]!
0xffff914389a0   320  movz fp, #0xa00000000
0xffff914389a4   324  sub csp, jssp, #0x8 (8)
0xffff914389a8   328  str fp, [jssp, #-8]!
0xffff914389ac   332  add fp, jssp, #0x8 (8)
0xffff914389b0   336  movz x13, #0x0
0xffff914389b4   340  mov x16, lr
0xffff914389b8   344  ldr x17, pc+120 (addr 0x0000ffff91438a30)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914389bc   348  blr x17
0xffff914389c0   352  lsl x0, x10, #32
0xffff914389c4   356  movz x10, #0x0
0xffff914389c8   360  sub csp, jssp, #0x10 (16)
0xffff914389cc   364  stp x10, x0, [jssp, #-16]!
0xffff914389d0   368  movz x0, #0x2
0xffff914389d4   372  movz x1, #0x5b88
0xffff914389d8   376  movk x1, #0xe2, lsl #16
0xffff914389dc   380  ldr x16, pc+92 (addr 0x0000ffff91438a38)    ;; code: STUB, CEntryStub, minor: 5
0xffff914389e0   384  blr x16
0xffff914389e4   388  str x0, [jssp, #104]
0xffff914389e8   392  ldr x16, pc+88 (addr 0x0000ffff91438a40)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914389ec   396  blr x16
0xffff914389f0   400  ldr lr, [jssp, #16]
0xffff914389f4   404  ldp xzr, fp, [jssp], #24
0xffff914389f8   408  b #-0x14c (addr 0xffff914388ac)
0xffff914389fc   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff91438a00   416  d63f03e0       constant
0xffff91438a04   420  d503201f       constant
0xffff91438a08   424  36404259       constant
0xffff91438a0c   428  00000000       constant
0xffff91438a10   432  49b04241       constant
0xffff91438a14   436  00000000       constant
0xffff91438a18   440  914370c0       constant
0xffff91438a1c   444  0000ffff       constant
0xffff91438a20   448  914378a0       constant
0xffff91438a24   452  0000ffff       constant
0xffff91438a28   456  91438080       constant
0xffff91438a2c   460  0000ffff       constant
0xffff91438a30   464  91406820       constant
0xffff91438a34   468  0000ffff       constant
0xffff91438a38   472  91406260       constant
0xffff91438a3c   476  0000ffff       constant
0xffff91438a40   480  914068e0       constant
0xffff91438a44   484  0000ffff       constant
0xffff91438a48   488  movz x16, #0x0
0xffff91438a4c   492  sub csp, jssp, #0x10 (16)
0xffff91438a50   496  stp fp, lr, [jssp, #-16]!
0xffff91438a54   500  bl #+0x24 (addr 0xffff91438a78)
0xffff91438a58   504  movz x16, #0x8
0xffff91438a5c   508  sub csp, jssp, #0x10 (16)
0xffff91438a60   512  stp fp, lr, [jssp, #-16]!
0xffff91438a64   516  bl #+0x14 (addr 0xffff91438a78)
0xffff91438a68   520  movz x16, #0x10
0xffff91438a6c   524  sub csp, jssp, #0x10 (16)
0xffff91438a70   528  stp fp, lr, [jssp, #-16]!
0xffff91438a74   532  bl #+0x4 (addr 0xffff91438a78)
0xffff91438a78   536  movz x17, #0xa00000000
0xffff91438a7c   540  sub csp, jssp, #0x10 (16)
0xffff91438a80   544  stp x17, cp, [jssp, #-16]!
0xffff91438a84   548  add fp, jssp, #0x10 (16)
0xffff91438a88   552  ldr x17, pc+24 (addr 0x0000ffff91438aa0)    ;; lazy deoptimization bailout 0
0xffff91438a8c   556  add x17, x17, x16
0xffff91438a90   560  br x17
0xffff91438a94   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91438a98   568  d63f03e0       constant
0xffff91438a9c   572  d503201f       constant
0xffff91438aa0   576  91206000       constant
0xffff91438aa4   580  0000ffff       constant


Safepoints (size = 21)
0xffff914389e4   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff914388ac  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914388c4  embedded object  (0x49b04241 <undefined>)
0xffff91438910  code target (STUB)  (0xffff914370c0)
0xffff91438950  code target (STUB)  (0xffff914378a0)
0xffff91438988  code target (STUB)  (0xffff91438080)
0xffff914389b8  code target (STUB)  (0xffff91406820)
0xffff914389dc  code target (STUB)  (0xffff91406260)
0xffff914389e8  code target (STUB)  (0xffff914068e0)
0xffff914389fc  constant pool (size 76)
0xffff91438a88  runtime entry
0xffff91438a94  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff91438b20     0  sub csp, jssp, #0x8 (8)
0xffff91438b24     4  str x3, [jssp, #-8]!
0xffff91438b28     8  sub csp, jssp, #0x8 (8)
0xffff91438b2c    12  str x4, [jssp, #-8]!
0xffff91438b30    16  ldr x3, pc+88 (addr 0x0000ffff91438b88)    ;; object: 0x49b57a89 Cell for 0
0xffff91438b34    20  ldur x3, [x3, #7]
0xffff91438b38    24  cmp x3, #0x0 (0)
0xffff91438b3c    28  b.ne #+0x30 (addr 0xffff91438b6c)
0xffff91438b40    32  tbz w0, #0, #+0x2c (addr 0xffff91438b6c)
0xffff91438b44    36  ldr x5, pc+76 (addr 0x0000ffff91438b90)    ;; object: 0x49b57a99 WeakCell for 0x3640b581 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91438b48    40  ldur x5, [x5, #7]
0xffff91438b4c    44  tbz w5, #0, #+0x20 (addr 0xffff91438b6c)
0xffff91438b50    48  ldursw x4, [x5, #15]
0xffff91438b54    52  tbnz w4, #23, #+0x18 (addr 0xffff91438b6c)
0xffff91438b58    56  ldr x4, [jssp], #8
0xffff91438b5c    60  ldr x3, [jssp], #8
0xffff91438b60    64  ldr x2, pc+56 (addr 0x0000ffff91438b98)    ;; object: 0x49b05209 <String[4]: next>
0xffff91438b64    68  ldr x16, pc+60 (addr 0x0000ffff91438ba0)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff91438b68    72  br x16
0xffff91438b6c    76  ldr x2, pc+60 (addr 0x0000ffff91438ba8)    ;; object: 0x49b05209 <String[4]: next>
0xffff91438b70    80  ldr x4, [jssp], #8
0xffff91438b74    84  ldr x3, [jssp], #8
0xffff91438b78    88  ldr x16, pc+56 (addr 0x0000ffff91438bb0)    ;; code: BUILTIN
0xffff91438b7c    92  br x16
0xffff91438b80    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff91438b84   100  d63f03e0       constant
0xffff91438b88   104  49b57a89       constant
0xffff91438b8c   108  00000000       constant
0xffff91438b90   112  49b57a99       constant
0xffff91438b94   116  00000000       constant
0xffff91438b98   120  49b05209       constant
0xffff91438b9c   124  00000000       constant
0xffff91438ba0   128  91438860       constant
0xffff91438ba4   132  0000ffff       constant
0xffff91438ba8   136  49b05209       constant
0xffff91438bac   140  00000000       constant
0xffff91438bb0   144  91422420       constant
0xffff91438bb4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff91438b30  embedded object  (0x49b57a89 Cell for 0)
0xffff91438b44  embedded object  (0x49b57a99 WeakCell for 0x3640b581 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91438b60  embedded object  (0x49b05209 <String[4]: next>)
0xffff91438b64  code target (HANDLER)  (0xffff91438860)
0xffff91438b6c  embedded object  (0x49b05209 <String[4]: next>)
0xffff91438b78  code target (BUILTIN)  (0xffff91422420)
0xffff91438b80  constant pool (size 56)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = LT
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff91438c20     0  movz x16, #0xc00000000
0xffff91438c24     4  sub csp, jssp, #0x10 (16)
0xffff91438c28     8  stp fp, lr, [jssp, #-16]!
0xffff91438c2c    12  sub csp, jssp, #0x10 (16)
0xffff91438c30    16  str x16, [jssp, #-8]!
0xffff91438c34    20  ldr x17, pc+92 (addr 0x0000ffff91438c90)    ;; object: 0xffff91438bc1 <Code: COMPARE_IC>
0xffff91438c38    24  sub csp, jssp, #0x10 (16)
0xffff91438c3c    28  str x17, [jssp, #-8]!
0xffff91438c40    32  add fp, jssp, #0x10 (16)
0xffff91438c44    36  sub csp, jssp, #0x18 (24)
0xffff91438c48    40  stp lr, x0, [jssp, #-24]!
0xffff91438c4c    44  str x1, [jssp, #16]
0xffff91438c50    48  movz x10, #0x3100000000
0xffff91438c54    52  sub csp, jssp, #0x18 (24)
0xffff91438c58    56  stp x10, x0, [jssp, #-24]!
0xffff91438c5c    60  str x1, [jssp, #16]
0xffff91438c60    64  movz x0, #0x3
0xffff91438c64    68  ldr x1, pc+52 (addr 0x0000ffff91438c98)    ;; external reference (Runtime::CompareIC_Miss)
0xffff91438c68    72  ldr x16, pc+56 (addr 0x0000ffff91438ca0)    ;; code: STUB, CEntryStub, minor: 4
0xffff91438c6c    76  blr x16
0xffff91438c70    80  add x11, x0, #0x5f (95)
0xffff91438c74    84  ldr x1, [jssp, #16]
0xffff91438c78    88  ldp lr, x0, [jssp], #24
0xffff91438c7c    92  mov jssp, fp
0xffff91438c80    96  ldp fp, lr, [jssp], #16
0xffff91438c84   100  br x11
0xffff91438c88   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91438c8c   108  d63f03e0       constant
0xffff91438c90   112  91438bc1       constant
0xffff91438c94   116  0000ffff       constant
0xffff91438c98   120  00c8a980       constant
0xffff91438c9c   124  00000000       constant
0xffff91438ca0   128  91406060       constant
0xffff91438ca4   132  0000ffff       constant


RelocInfo (size = 10)
0xffff91438c34  embedded object  (0xffff91438bc1 <Code: COMPARE_IC>)
0xffff91438c64  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff91438c68  code target (STUB)  (0xffff91406060)
0xffff91438c88  constant pool (size 32)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = LT
name = CompareICStub
compiler = unknown
Instructions (size = 160)
0xffff91439120     0  orr x16, x0, x1
0xffff91439124     4  tbnz w16, #0, #+0x10 (addr 0xffff91439134)
0xffff91439128     8  asr x1, x1, #32
0xffff9143912c    12  sub x0, x1, x0, asr #32
0xffff91439130    16  ret
0xffff91439134    20  movz x16, #0xc00000000
0xffff91439138    24  sub csp, jssp, #0x10 (16)
0xffff9143913c    28  stp fp, lr, [jssp, #-16]!
0xffff91439140    32  sub csp, jssp, #0x10 (16)
0xffff91439144    36  str x16, [jssp, #-8]!
0xffff91439148    40  ldr x17, pc+96 (addr 0x0000ffff914391a8)    ;; object: 0xffff914390c1 <Code: COMPARE_IC>
0xffff9143914c    44  sub csp, jssp, #0x10 (16)
0xffff91439150    48  str x17, [jssp, #-8]!
0xffff91439154    52  add fp, jssp, #0x10 (16)
0xffff91439158    56  sub csp, jssp, #0x18 (24)
0xffff9143915c    60  stp lr, x0, [jssp, #-24]!
0xffff91439160    64  str x1, [jssp, #16]
0xffff91439164    68  movz x10, #0x3100000000
0xffff91439168    72  sub csp, jssp, #0x18 (24)
0xffff9143916c    76  stp x10, x0, [jssp, #-24]!
0xffff91439170    80  str x1, [jssp, #16]
0xffff91439174    84  movz x0, #0x3
0xffff91439178    88  ldr x1, pc+56 (addr 0x0000ffff914391b0)    ;; external reference (Runtime::CompareIC_Miss)
0xffff9143917c    92  ldr x16, pc+60 (addr 0x0000ffff914391b8)    ;; code: STUB, CEntryStub, minor: 4
0xffff91439180    96  blr x16
0xffff91439184   100  add x11, x0, #0x5f (95)
0xffff91439188   104  ldr x1, [jssp, #16]
0xffff9143918c   108  ldp lr, x0, [jssp], #24
0xffff91439190   112  mov jssp, fp
0xffff91439194   116  ldp fp, lr, [jssp], #16
0xffff91439198   120  br x11
0xffff9143919c   124  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff914391a0   128  d63f03e0       constant
0xffff914391a4   132  d503201f       constant
0xffff914391a8   136  914390c1       constant
0xffff914391ac   140  0000ffff       constant
0xffff914391b0   144  00c8a980       constant
0xffff914391b4   148  00000000       constant
0xffff914391b8   152  91406060       constant
0xffff914391bc   156  0000ffff       constant


RelocInfo (size = 10)
0xffff91439148  embedded object  (0xffff914390c1 <Code: COMPARE_IC>)
0xffff91439178  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff9143917c  code target (STUB)  (0xffff91406060)
0xffff9143919c  constant pool (size 36)


kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 168)
0xffff91439220     0  ldur x4, [x1, #15]
0xffff91439224     4  ldur w5, [x1, #27]
0xffff91439228     8  tbnz w2, #0, #+0x20 (addr 0xffff91439248)
0xffff9143922c    12  asr x7, x2, #32
0xffff91439230    16  cmp w7, w5
0xffff91439234    20  b.hs #+0x3c (addr 0xffff91439270)
0xffff91439238    24  add x0, x4, #0xf (15)
0xffff9143923c    28  ldr x1, [x0, w7, sxtw #3]
0xffff91439240    32  mov x0, x1
0xffff91439244    36  ret
0xffff91439248    40  ldur x16, [x2, #-1]
0xffff9143924c    44  ldr x17, [x26, #120]
0xffff91439250    48  cmp x16, x17
0xffff91439254    52  b.ne #+0x2c (addr 0xffff91439280)
0xffff91439258    56  ldur d29, [x2, #7]
0xffff9143925c    60  fcvtzs w7, d29
0xffff91439260    64  scvtf d0, w7
0xffff91439264    68  fcmp d29, d0
0xffff91439268    72  b.ne #+0x18 (addr 0xffff91439280)
0xffff9143926c    76  b #-0x3c (addr 0xffff91439230)
0xffff91439270    80  movz x16, #0x0
0xffff91439274    84  sub csp, jssp, #0x10 (16)
0xffff91439278    88  stp fp, lr, [jssp, #-16]!
0xffff9143927c    92  bl #+0x14 (addr 0xffff91439290)
0xffff91439280    96  movz x16, #0x8
0xffff91439284   100  sub csp, jssp, #0x10 (16)
0xffff91439288   104  stp fp, lr, [jssp, #-16]!
0xffff9143928c   108  bl #+0x4 (addr 0xffff91439290)
0xffff91439290   112  movz x17, #0xa00000000
0xffff91439294   116  sub csp, jssp, #0x10 (16)
0xffff91439298   120  stp x17, cp, [jssp, #-16]!
0xffff9143929c   124  add fp, jssp, #0x10 (16)
0xffff914392a0   128  ldr x17, pc+24 (addr 0x0000ffff914392b8)    ;; lazy deoptimization bailout 0
0xffff914392a4   132  add x17, x17, x16
0xffff914392a8   136  br x17
0xffff914392ac   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914392b0   144  d63f03e0       constant
0xffff914392b4   148  d503201f       constant
0xffff914392b8   152  91206000       constant
0xffff914392bc   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914392a0  runtime entry
0xffff914392ac  constant pool (size 20)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff91439340     0  ldur x0, [x1, #23]
0xffff91439344     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393218
name = CallICStub(args(2), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff914393c0     0  add x4, x2, x3, asr #29
0xffff914393c4     4  ldur x4, [x4, #15]
0xffff914393c8     8  ldur x5, [x4, #7]
0xffff914393cc    12  cmp x5, x1
0xffff914393d0    16  b.ne #+0x2c (addr 0xffff914393fc)
0xffff914393d4    20  tbz w1, #0, #+0x28 (addr 0xffff914393fc)
0xffff914393d8    24  add x2, x2, x3, asr #29
0xffff914393dc    28  add x2, x2, #0x18 (24)
0xffff914393e0    32  ldur x3, [x2, #-1]
0xffff914393e4    36  movz x16, #0x200000000
0xffff914393e8    40  add x3, x3, x16
0xffff914393ec    44  stur x3, [x2, #-1]
0xffff914393f0    48  movz x0, #0x2
0xffff914393f4    52  ldr x16, pc+372 (addr 0x0000ffff91439568)    ;; code: BUILTIN
0xffff914393f8    56  br x16
0xffff914393fc    60  ldr x16, [x26, #2400]
0xffff91439400    64  cmp x4, x16
0xffff91439404    68  b.eq #+0x78 (addr 0xffff9143947c)
0xffff91439408    72  ldur x5, [x4, #-1]
0xffff9143940c    76  ldr x16, [x26, #2736]
0xffff91439410    80  cmp x5, x16
0xffff91439414    84  b.ne #+0x40 (addr 0xffff91439454)
0xffff91439418    88  ldur x5, [cp, #39]
0xffff9143941c    92  ldur x5, [x5, #95]
0xffff91439420    96  cmp x1, x5
0xffff91439424   100  b.ne #+0xec (addr 0xffff91439510)
0xffff91439428   104  movz x0, #0x2
0xffff9143942c   108  add x2, x2, x3, asr #29
0xffff91439430   112  add x2, x2, #0x18 (24)
0xffff91439434   116  ldur x3, [x2, #-1]
0xffff91439438   120  movz x16, #0x200000000
0xffff9143943c   124  add x3, x3, x16
0xffff91439440   128  stur x3, [x2, #-1]
0xffff91439444   132  mov x2, x4
0xffff91439448   136  mov x3, x1
0xffff9143944c   140  ldr x16, pc+292 (addr 0x0000ffff91439570)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff91439450   144  br x16
0xffff91439454   148  ldr x16, [x26, #2568]
0xffff91439458   152  cmp x4, x16
0xffff9143945c   156  b.eq #+0xb4 (addr 0xffff91439510)
0xffff91439460   160  ldur x5, [x4, #-1]
0xffff91439464   164  ldrb w5, [x5, #11]
0xffff91439468   168  cmp x5, #0xc9 (201)
0xffff9143946c   172  b.ne #+0xa4 (addr 0xffff91439510)
0xffff91439470   176  add x4, x2, x3, asr #29
0xffff91439474   180  ldr x5, [x26, #2400]
0xffff91439478   184  stur x5, [x4, #15]
0xffff9143947c   188  movz x0, #0x2
0xffff91439480   192  ldr x16, pc+248 (addr 0x0000ffff91439578)    ;; code: BUILTIN
0xffff91439484   196  br x16
0xffff91439488   200  tbz w1, #0, #+0x88 (addr 0xffff91439510)
0xffff9143948c   204  ldur x5, [x1, #-1]
0xffff91439490   208  ldrb w5, [x5, #11]
0xffff91439494   212  cmp x5, #0xc9 (201)
0xffff91439498   216  b.ne #+0x78 (addr 0xffff91439510)
0xffff9143949c   220  ldur x5, [cp, #39]
0xffff914394a0   224  ldur x5, [x5, #95]
0xffff914394a4   228  cmp x1, x5
0xffff914394a8   232  b.eq #+0x68 (addr 0xffff91439510)
0xffff914394ac   236  ldur x4, [x1, #39]
0xffff914394b0   240  ldur x4, [x4, #39]
0xffff914394b4   244  ldur x5, [cp, #39]
0xffff914394b8   248  cmp x4, x5
0xffff914394bc   252  b.ne #+0x54 (addr 0xffff91439510)
0xffff914394c0   256  movz x5, #0x200000000
0xffff914394c4   260  adds x4, x2, x3, asr #29
0xffff914394c8   264  stur x5, [x4, #23]
0xffff914394cc   268  movz x16, #0xc00000000
0xffff914394d0   272  sub csp, jssp, #0x10 (16)
0xffff914394d4   276  stp fp, lr, [jssp, #-16]!
0xffff914394d8   280  sub csp, jssp, #0x10 (16)
0xffff914394dc   284  str x16, [jssp, #-8]!
0xffff914394e0   288  ldr x17, pc+160 (addr 0x0000ffff91439580)    ;; object: 0xffff91439361 <Code: CALL_IC>
0xffff914394e4   292  sub csp, jssp, #0x10 (16)
0xffff914394e8   296  str x17, [jssp, #-8]!
0xffff914394ec   300  add fp, jssp, #0x10 (16)
0xffff914394f0   304  sub csp, jssp, #0x8 (8)
0xffff914394f4   308  str x1, [jssp, #-8]!
0xffff914394f8   312  ldr x16, pc+144 (addr 0x0000ffff91439588)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff914394fc   316  blr x16
0xffff91439500   320  ldr x1, [jssp], #8
0xffff91439504   324  mov jssp, fp
0xffff91439508   328  ldp fp, lr, [jssp], #16
0xffff9143950c   332  b #-0x11c (addr 0xffff914393f0)
0xffff91439510   336  movz x16, #0xc00000000
0xffff91439514   340  sub csp, jssp, #0x10 (16)
0xffff91439518   344  stp fp, lr, [jssp, #-16]!
0xffff9143951c   348  sub csp, jssp, #0x10 (16)
0xffff91439520   352  str x16, [jssp, #-8]!
0xffff91439524   356  ldr x17, pc+108 (addr 0x0000ffff91439590)    ;; object: 0xffff91439361 <Code: CALL_IC>
0xffff91439528   360  sub csp, jssp, #0x10 (16)
0xffff9143952c   364  str x17, [jssp, #-8]!
0xffff91439530   368  add fp, jssp, #0x10 (16)
0xffff91439534   372  sub csp, jssp, #0x18 (24)
0xffff91439538   376  stp x3, x2, [jssp, #-24]!
0xffff9143953c   380  str x1, [jssp, #16]
0xffff91439540   384  movz x0, #0x3
0xffff91439544   388  ldr x1, pc+84 (addr 0x0000ffff91439598)    ;; external reference (Runtime::CallIC_Miss)
0xffff91439548   392  ldr x16, pc+88 (addr 0x0000ffff914395a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9143954c   396  blr x16
0xffff91439550   400  mov x1, x0
0xffff91439554   404  mov jssp, fp
0xffff91439558   408  ldp fp, lr, [jssp], #16
0xffff9143955c   412  b #-0xe0 (addr 0xffff9143947c)
0xffff91439560   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff91439564   420  d63f03e0       constant
0xffff91439568   424  9141e820       constant
0xffff9143956c   428  0000ffff       constant
0xffff91439570   432  91433b00       constant
0xffff91439574   436  0000ffff       constant
0xffff91439578   440  9141f820       constant
0xffff9143957c   444  0000ffff       constant
0xffff91439580   448  91439361       constant
0xffff91439584   452  0000ffff       constant
0xffff91439588   456  9140ddc0       constant
0xffff9143958c   460  0000ffff       constant
0xffff91439590   464  91439361       constant
0xffff91439594   468  0000ffff       constant
0xffff91439598   472  00c86928       constant
0xffff9143959c   476  00000000       constant
0xffff914395a0   480  91406060       constant
0xffff914395a4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff914393f4  code target (BUILTIN)  (0xffff9141e820)
0xffff9143944c  code target (STUB)  (0xffff91433b00)
0xffff91439480  code target (BUILTIN)  (0xffff9141f820)
0xffff914394e0  embedded object  (0xffff91439361 <Code: CALL_IC>)
0xffff914394f8  code target (STUB)  (0xffff9140ddc0)
0xffff91439524  embedded object  (0xffff91439361 <Code: CALL_IC>)
0xffff91439544  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff91439548  code target (STUB)  (0xffff91406060)
0xffff91439560  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393218
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff91439620     0  ldur x2, [fp, #-16]
0xffff91439624     4  ldur x2, [x2, #31]
0xffff91439628     8  ldur x2, [x2, #87]
0xffff9143962c    12  ldr x16, pc+20 (addr 0x0000ffff91439640)    ;; code: CALL_IC, GENERIC
0xffff91439630    16  br x16
0xffff91439634    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91439638    24  d63f03e0       constant
0xffff9143963c    28  d503201f       constant
0xffff91439640    32  914393c0       constant
0xffff91439644    36  0000ffff       constant


RelocInfo (size = 7)
0xffff9143962c  code target (CALL_IC)  (0xffff914393c0)
0xffff91439634  constant pool (size 20)


kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
name = ToBooleanICStub(None)
compiler = unknown
Instructions (size = 104)
0xffff91439e00     0  movz x16, #0xc00000000
0xffff91439e04     4  sub csp, jssp, #0x10 (16)
0xffff91439e08     8  stp fp, lr, [jssp, #-16]!
0xffff91439e0c    12  sub csp, jssp, #0x10 (16)
0xffff91439e10    16  str x16, [jssp, #-8]!
0xffff91439e14    20  ldr x17, pc+60 (addr 0x0000ffff91439e50)    ;; object: 0xffff91439da1 <Code: TO_BOOLEAN_IC>
0xffff91439e18    24  sub csp, jssp, #0x10 (16)
0xffff91439e1c    28  str x17, [jssp, #-8]!
0xffff91439e20    32  add fp, jssp, #0x10 (16)
0xffff91439e24    36  sub csp, jssp, #0x8 (8)
0xffff91439e28    40  str x0, [jssp, #-8]!
0xffff91439e2c    44  movz x0, #0x1
0xffff91439e30    48  ldr x1, pc+40 (addr 0x0000ffff91439e58)    ;; external reference (Runtime::ToBooleanIC_Miss)
0xffff91439e34    52  ldr x16, pc+44 (addr 0x0000ffff91439e60)    ;; code: STUB, CEntryStub, minor: 4
0xffff91439e38    56  blr x16
0xffff91439e3c    60  mov jssp, fp
0xffff91439e40    64  ldp fp, lr, [jssp], #16
0xffff91439e44    68  ret
0xffff91439e48    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91439e4c    76  d63f03e0       constant
0xffff91439e50    80  91439da1       constant
0xffff91439e54    84  0000ffff       constant
0xffff91439e58    88  00c8b000       constant
0xffff91439e5c    92  00000000       constant
0xffff91439e60    96  91406060       constant
0xffff91439e64   100  0000ffff       constant


RelocInfo (size = 10)
0xffff91439e14  embedded object  (0xffff91439da1 <Code: TO_BOOLEAN_IC>)
0xffff91439e30  external reference (Runtime::ToBooleanIC_Miss)  (0xc8b000)
0xffff91439e34  code target (STUB)  (0xffff91406060)
0xffff91439e48  constant pool (size 32)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = GTE
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff91439ee0     0  movz x16, #0xc00000000
0xffff91439ee4     4  sub csp, jssp, #0x10 (16)
0xffff91439ee8     8  stp fp, lr, [jssp, #-16]!
0xffff91439eec    12  sub csp, jssp, #0x10 (16)
0xffff91439ef0    16  str x16, [jssp, #-8]!
0xffff91439ef4    20  ldr x17, pc+92 (addr 0x0000ffff91439f50)    ;; object: 0xffff91439e81 <Code: COMPARE_IC>
0xffff91439ef8    24  sub csp, jssp, #0x10 (16)
0xffff91439efc    28  str x17, [jssp, #-8]!
0xffff91439f00    32  add fp, jssp, #0x10 (16)
0xffff91439f04    36  sub csp, jssp, #0x18 (24)
0xffff91439f08    40  stp lr, x0, [jssp, #-24]!
0xffff91439f0c    44  str x1, [jssp, #16]
0xffff91439f10    48  movz x10, #0x3400000000
0xffff91439f14    52  sub csp, jssp, #0x18 (24)
0xffff91439f18    56  stp x10, x0, [jssp, #-24]!
0xffff91439f1c    60  str x1, [jssp, #16]
0xffff91439f20    64  movz x0, #0x3
0xffff91439f24    68  ldr x1, pc+52 (addr 0x0000ffff91439f58)    ;; external reference (Runtime::CompareIC_Miss)
0xffff91439f28    72  ldr x16, pc+56 (addr 0x0000ffff91439f60)    ;; code: STUB, CEntryStub, minor: 4
0xffff91439f2c    76  blr x16
0xffff91439f30    80  add x11, x0, #0x5f (95)
0xffff91439f34    84  ldr x1, [jssp, #16]
0xffff91439f38    88  ldp lr, x0, [jssp], #24
0xffff91439f3c    92  mov jssp, fp
0xffff91439f40    96  ldp fp, lr, [jssp], #16
0xffff91439f44   100  br x11
0xffff91439f48   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91439f4c   108  d63f03e0       constant
0xffff91439f50   112  91439e81       constant
0xffff91439f54   116  0000ffff       constant
0xffff91439f58   120  00c8a980       constant
0xffff91439f5c   124  00000000       constant
0xffff91439f60   128  91406060       constant
0xffff91439f64   132  0000ffff       constant


RelocInfo (size = 10)
0xffff91439ef4  embedded object  (0xffff91439e81 <Code: COMPARE_IC>)
0xffff91439f24  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff91439f28  code target (STUB)  (0xffff91406060)
0xffff91439f48  constant pool (size 32)


kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 16
type = NORMAL
name = ToBooleanICStub(SpecObject)
compiler = crankshaft
Instructions (size = 144)
0xffff9143a6e0     0  tbz w0, #0, #+0x48 (addr 0xffff9143a728)
0xffff9143a6e4     4  ldur x2, [x0, #-1]
0xffff9143a6e8     8  ldrb w1, [x2, #12]
0xffff9143a6ec    12  tbnz w1, #4, #+0x14 (addr 0xffff9143a700)
0xffff9143a6f0    16  ldrb w1, [x2, #11]
0xffff9143a6f4    20  cmp x1, #0xb1 (177)
0xffff9143a6f8    24  b.ge #+0x10 (addr 0xffff9143a708)
0xffff9143a6fc    28  b #+0x2c (addr 0xffff9143a728)
0xffff9143a700    32  ldr x0, pc+24 (addr 0x0000ffff9143a718)    ;; object: 0x49b042b1 <false>
0xffff9143a704    36  ret
0xffff9143a708    40  ldr x0, pc+24 (addr 0x0000ffff9143a720)    ;; object: 0x49b04281 <true>
0xffff9143a70c    44  ret
0xffff9143a710    48  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9143a714    52  d63f03e0       constant
0xffff9143a718    56  49b042b1       constant
0xffff9143a71c    60  00000000       constant
0xffff9143a720    64  49b04281       constant
0xffff9143a724    68  00000000       constant
0xffff9143a728    72  movz x16, #0x0
0xffff9143a72c    76  sub csp, jssp, #0x10 (16)
0xffff9143a730    80  stp fp, lr, [jssp, #-16]!
0xffff9143a734    84  bl #+0x4 (addr 0xffff9143a738)
0xffff9143a738    88  movz x17, #0xa00000000
0xffff9143a73c    92  sub csp, jssp, #0x10 (16)
0xffff9143a740    96  stp x17, cp, [jssp, #-16]!
0xffff9143a744   100  add fp, jssp, #0x10 (16)
0xffff9143a748   104  ldr x17, pc+24 (addr 0x0000ffff9143a760)    ;; lazy deoptimization bailout 0
0xffff9143a74c   108  add x17, x17, x16
0xffff9143a750   112  br x17
0xffff9143a754   116  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9143a758   120  d63f03e0       constant
0xffff9143a75c   124  d503201f       constant
0xffff9143a760   128  91206000       constant
0xffff9143a764   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff9143a700  embedded object  (0x49b042b1 <false>)
0xffff9143a708  embedded object  (0x49b04281 <true>)
0xffff9143a710  constant pool (size 24)
0xffff9143a748  runtime entry
0xffff9143a754  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = GTE
name = CompareICStub
compiler = unknown
Instructions (size = 160)
0xffff9143a7e0     0  orr x16, x0, x1
0xffff9143a7e4     4  tbnz w16, #0, #+0x10 (addr 0xffff9143a7f4)
0xffff9143a7e8     8  asr x1, x1, #32
0xffff9143a7ec    12  sub x0, x1, x0, asr #32
0xffff9143a7f0    16  ret
0xffff9143a7f4    20  movz x16, #0xc00000000
0xffff9143a7f8    24  sub csp, jssp, #0x10 (16)
0xffff9143a7fc    28  stp fp, lr, [jssp, #-16]!
0xffff9143a800    32  sub csp, jssp, #0x10 (16)
0xffff9143a804    36  str x16, [jssp, #-8]!
0xffff9143a808    40  ldr x17, pc+96 (addr 0x0000ffff9143a868)    ;; object: 0xffff9143a781 <Code: COMPARE_IC>
0xffff9143a80c    44  sub csp, jssp, #0x10 (16)
0xffff9143a810    48  str x17, [jssp, #-8]!
0xffff9143a814    52  add fp, jssp, #0x10 (16)
0xffff9143a818    56  sub csp, jssp, #0x18 (24)
0xffff9143a81c    60  stp lr, x0, [jssp, #-24]!
0xffff9143a820    64  str x1, [jssp, #16]
0xffff9143a824    68  movz x10, #0x3400000000
0xffff9143a828    72  sub csp, jssp, #0x18 (24)
0xffff9143a82c    76  stp x10, x0, [jssp, #-24]!
0xffff9143a830    80  str x1, [jssp, #16]
0xffff9143a834    84  movz x0, #0x3
0xffff9143a838    88  ldr x1, pc+56 (addr 0x0000ffff9143a870)    ;; external reference (Runtime::CompareIC_Miss)
0xffff9143a83c    92  ldr x16, pc+60 (addr 0x0000ffff9143a878)    ;; code: STUB, CEntryStub, minor: 4
0xffff9143a840    96  blr x16
0xffff9143a844   100  add x11, x0, #0x5f (95)
0xffff9143a848   104  ldr x1, [jssp, #16]
0xffff9143a84c   108  ldp lr, x0, [jssp], #24
0xffff9143a850   112  mov jssp, fp
0xffff9143a854   116  ldp fp, lr, [jssp], #16
0xffff9143a858   120  br x11
0xffff9143a85c   124  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff9143a860   128  d63f03e0       constant
0xffff9143a864   132  d503201f       constant
0xffff9143a868   136  9143a781       constant
0xffff9143a86c   140  0000ffff       constant
0xffff9143a870   144  00c8a980       constant
0xffff9143a874   148  00000000       constant
0xffff9143a878   152  91406060       constant
0xffff9143a87c   156  0000ffff       constant


RelocInfo (size = 10)
0xffff9143a808  embedded object  (0xffff9143a781 <Code: COMPARE_IC>)
0xffff9143a838  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff9143a83c  code target (STUB)  (0xffff91406060)
0xffff9143a85c  constant pool (size 36)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = EQ
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff9143a8e0     0  movz x16, #0xc00000000
0xffff9143a8e4     4  sub csp, jssp, #0x10 (16)
0xffff9143a8e8     8  stp fp, lr, [jssp, #-16]!
0xffff9143a8ec    12  sub csp, jssp, #0x10 (16)
0xffff9143a8f0    16  str x16, [jssp, #-8]!
0xffff9143a8f4    20  ldr x17, pc+92 (addr 0x0000ffff9143a950)    ;; object: 0xffff9143a881 <Code: COMPARE_IC>
0xffff9143a8f8    24  sub csp, jssp, #0x10 (16)
0xffff9143a8fc    28  str x17, [jssp, #-8]!
0xffff9143a900    32  add fp, jssp, #0x10 (16)
0xffff9143a904    36  sub csp, jssp, #0x18 (24)
0xffff9143a908    40  stp lr, x0, [jssp, #-24]!
0xffff9143a90c    44  str x1, [jssp, #16]
0xffff9143a910    48  movz x10, #0x2d00000000
0xffff9143a914    52  sub csp, jssp, #0x18 (24)
0xffff9143a918    56  stp x10, x0, [jssp, #-24]!
0xffff9143a91c    60  str x1, [jssp, #16]
0xffff9143a920    64  movz x0, #0x3
0xffff9143a924    68  ldr x1, pc+52 (addr 0x0000ffff9143a958)    ;; external reference (Runtime::CompareIC_Miss)
0xffff9143a928    72  ldr x16, pc+56 (addr 0x0000ffff9143a960)    ;; code: STUB, CEntryStub, minor: 4
0xffff9143a92c    76  blr x16
0xffff9143a930    80  add x11, x0, #0x5f (95)
0xffff9143a934    84  ldr x1, [jssp, #16]
0xffff9143a938    88  ldp lr, x0, [jssp], #24
0xffff9143a93c    92  mov jssp, fp
0xffff9143a940    96  ldp fp, lr, [jssp], #16
0xffff9143a944   100  br x11
0xffff9143a948   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9143a94c   108  d63f03e0       constant
0xffff9143a950   112  9143a881       constant
0xffff9143a954   116  0000ffff       constant
0xffff9143a958   120  00c8a980       constant
0xffff9143a95c   124  00000000       constant
0xffff9143a960   128  91406060       constant
0xffff9143a964   132  0000ffff       constant


RelocInfo (size = 10)
0xffff9143a8f4  embedded object  (0xffff9143a881 <Code: COMPARE_IC>)
0xffff9143a924  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff9143a928  code target (STUB)  (0xffff91406060)
0xffff9143a948  constant pool (size 32)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393219
name = CallICStub(args(3), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff9143ac00     0  add x4, x2, x3, asr #29
0xffff9143ac04     4  ldur x4, [x4, #15]
0xffff9143ac08     8  ldur x5, [x4, #7]
0xffff9143ac0c    12  cmp x5, x1
0xffff9143ac10    16  b.ne #+0x2c (addr 0xffff9143ac3c)
0xffff9143ac14    20  tbz w1, #0, #+0x28 (addr 0xffff9143ac3c)
0xffff9143ac18    24  add x2, x2, x3, asr #29
0xffff9143ac1c    28  add x2, x2, #0x18 (24)
0xffff9143ac20    32  ldur x3, [x2, #-1]
0xffff9143ac24    36  movz x16, #0x200000000
0xffff9143ac28    40  add x3, x3, x16
0xffff9143ac2c    44  stur x3, [x2, #-1]
0xffff9143ac30    48  movz x0, #0x3
0xffff9143ac34    52  ldr x16, pc+372 (addr 0x0000ffff9143ada8)    ;; code: BUILTIN
0xffff9143ac38    56  br x16
0xffff9143ac3c    60  ldr x16, [x26, #2400]
0xffff9143ac40    64  cmp x4, x16
0xffff9143ac44    68  b.eq #+0x78 (addr 0xffff9143acbc)
0xffff9143ac48    72  ldur x5, [x4, #-1]
0xffff9143ac4c    76  ldr x16, [x26, #2736]
0xffff9143ac50    80  cmp x5, x16
0xffff9143ac54    84  b.ne #+0x40 (addr 0xffff9143ac94)
0xffff9143ac58    88  ldur x5, [cp, #39]
0xffff9143ac5c    92  ldur x5, [x5, #95]
0xffff9143ac60    96  cmp x1, x5
0xffff9143ac64   100  b.ne #+0xec (addr 0xffff9143ad50)
0xffff9143ac68   104  movz x0, #0x3
0xffff9143ac6c   108  add x2, x2, x3, asr #29
0xffff9143ac70   112  add x2, x2, #0x18 (24)
0xffff9143ac74   116  ldur x3, [x2, #-1]
0xffff9143ac78   120  movz x16, #0x200000000
0xffff9143ac7c   124  add x3, x3, x16
0xffff9143ac80   128  stur x3, [x2, #-1]
0xffff9143ac84   132  mov x2, x4
0xffff9143ac88   136  mov x3, x1
0xffff9143ac8c   140  ldr x16, pc+292 (addr 0x0000ffff9143adb0)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff9143ac90   144  br x16
0xffff9143ac94   148  ldr x16, [x26, #2568]
0xffff9143ac98   152  cmp x4, x16
0xffff9143ac9c   156  b.eq #+0xb4 (addr 0xffff9143ad50)
0xffff9143aca0   160  ldur x5, [x4, #-1]
0xffff9143aca4   164  ldrb w5, [x5, #11]
0xffff9143aca8   168  cmp x5, #0xc9 (201)
0xffff9143acac   172  b.ne #+0xa4 (addr 0xffff9143ad50)
0xffff9143acb0   176  add x4, x2, x3, asr #29
0xffff9143acb4   180  ldr x5, [x26, #2400]
0xffff9143acb8   184  stur x5, [x4, #15]
0xffff9143acbc   188  movz x0, #0x3
0xffff9143acc0   192  ldr x16, pc+248 (addr 0x0000ffff9143adb8)    ;; code: BUILTIN
0xffff9143acc4   196  br x16
0xffff9143acc8   200  tbz w1, #0, #+0x88 (addr 0xffff9143ad50)
0xffff9143accc   204  ldur x5, [x1, #-1]
0xffff9143acd0   208  ldrb w5, [x5, #11]
0xffff9143acd4   212  cmp x5, #0xc9 (201)
0xffff9143acd8   216  b.ne #+0x78 (addr 0xffff9143ad50)
0xffff9143acdc   220  ldur x5, [cp, #39]
0xffff9143ace0   224  ldur x5, [x5, #95]
0xffff9143ace4   228  cmp x1, x5
0xffff9143ace8   232  b.eq #+0x68 (addr 0xffff9143ad50)
0xffff9143acec   236  ldur x4, [x1, #39]
0xffff9143acf0   240  ldur x4, [x4, #39]
0xffff9143acf4   244  ldur x5, [cp, #39]
0xffff9143acf8   248  cmp x4, x5
0xffff9143acfc   252  b.ne #+0x54 (addr 0xffff9143ad50)
0xffff9143ad00   256  movz x5, #0x200000000
0xffff9143ad04   260  adds x4, x2, x3, asr #29
0xffff9143ad08   264  stur x5, [x4, #23]
0xffff9143ad0c   268  movz x16, #0xc00000000
0xffff9143ad10   272  sub csp, jssp, #0x10 (16)
0xffff9143ad14   276  stp fp, lr, [jssp, #-16]!
0xffff9143ad18   280  sub csp, jssp, #0x10 (16)
0xffff9143ad1c   284  str x16, [jssp, #-8]!
0xffff9143ad20   288  ldr x17, pc+160 (addr 0x0000ffff9143adc0)    ;; object: 0xffff9143aba1 <Code: CALL_IC>
0xffff9143ad24   292  sub csp, jssp, #0x10 (16)
0xffff9143ad28   296  str x17, [jssp, #-8]!
0xffff9143ad2c   300  add fp, jssp, #0x10 (16)
0xffff9143ad30   304  sub csp, jssp, #0x8 (8)
0xffff9143ad34   308  str x1, [jssp, #-8]!
0xffff9143ad38   312  ldr x16, pc+144 (addr 0x0000ffff9143adc8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff9143ad3c   316  blr x16
0xffff9143ad40   320  ldr x1, [jssp], #8
0xffff9143ad44   324  mov jssp, fp
0xffff9143ad48   328  ldp fp, lr, [jssp], #16
0xffff9143ad4c   332  b #-0x11c (addr 0xffff9143ac30)
0xffff9143ad50   336  movz x16, #0xc00000000
0xffff9143ad54   340  sub csp, jssp, #0x10 (16)
0xffff9143ad58   344  stp fp, lr, [jssp, #-16]!
0xffff9143ad5c   348  sub csp, jssp, #0x10 (16)
0xffff9143ad60   352  str x16, [jssp, #-8]!
0xffff9143ad64   356  ldr x17, pc+108 (addr 0x0000ffff9143add0)    ;; object: 0xffff9143aba1 <Code: CALL_IC>
0xffff9143ad68   360  sub csp, jssp, #0x10 (16)
0xffff9143ad6c   364  str x17, [jssp, #-8]!
0xffff9143ad70   368  add fp, jssp, #0x10 (16)
0xffff9143ad74   372  sub csp, jssp, #0x18 (24)
0xffff9143ad78   376  stp x3, x2, [jssp, #-24]!
0xffff9143ad7c   380  str x1, [jssp, #16]
0xffff9143ad80   384  movz x0, #0x3
0xffff9143ad84   388  ldr x1, pc+84 (addr 0x0000ffff9143add8)    ;; external reference (Runtime::CallIC_Miss)
0xffff9143ad88   392  ldr x16, pc+88 (addr 0x0000ffff9143ade0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9143ad8c   396  blr x16
0xffff9143ad90   400  mov x1, x0
0xffff9143ad94   404  mov jssp, fp
0xffff9143ad98   408  ldp fp, lr, [jssp], #16
0xffff9143ad9c   412  b #-0xe0 (addr 0xffff9143acbc)
0xffff9143ada0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff9143ada4   420  d63f03e0       constant
0xffff9143ada8   424  9141e820       constant
0xffff9143adac   428  0000ffff       constant
0xffff9143adb0   432  91433b00       constant
0xffff9143adb4   436  0000ffff       constant
0xffff9143adb8   440  9141f820       constant
0xffff9143adbc   444  0000ffff       constant
0xffff9143adc0   448  9143aba1       constant
0xffff9143adc4   452  0000ffff       constant
0xffff9143adc8   456  9140ddc0       constant
0xffff9143adcc   460  0000ffff       constant
0xffff9143add0   464  9143aba1       constant
0xffff9143add4   468  0000ffff       constant
0xffff9143add8   472  00c86928       constant
0xffff9143addc   476  00000000       constant
0xffff9143ade0   480  91406060       constant
0xffff9143ade4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff9143ac34  code target (BUILTIN)  (0xffff9141e820)
0xffff9143ac8c  code target (STUB)  (0xffff91433b00)
0xffff9143acc0  code target (BUILTIN)  (0xffff9141f820)
0xffff9143ad20  embedded object  (0xffff9143aba1 <Code: CALL_IC>)
0xffff9143ad38  code target (STUB)  (0xffff9140ddc0)
0xffff9143ad64  embedded object  (0xffff9143aba1 <Code: CALL_IC>)
0xffff9143ad84  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff9143ad88  code target (STUB)  (0xffff91406060)
0xffff9143ada0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393219
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff9143ae60     0  ldur x2, [fp, #-16]
0xffff9143ae64     4  ldur x2, [x2, #31]
0xffff9143ae68     8  ldur x2, [x2, #87]
0xffff9143ae6c    12  ldr x16, pc+20 (addr 0x0000ffff9143ae80)    ;; code: CALL_IC, GENERIC
0xffff9143ae70    16  br x16
0xffff9143ae74    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9143ae78    24  d63f03e0       constant
0xffff9143ae7c    28  d503201f       constant
0xffff9143ae80    32  9143ac00       constant
0xffff9143ae84    36  0000ffff       constant


RelocInfo (size = 7)
0xffff9143ae6c  code target (CALL_IC)  (0xffff9143ac00)
0xffff9143ae74  constant pool (size 20)


kind = STUB
major_key = BinaryOpWithAllocationSiteStub
name = BinaryOpWithAllocationSiteStub(ADD_CreateAllocationMementos:String*String->String)
compiler = crankshaft
Instructions (size = 1164)
0xffff9143b220     0  movz x16, #0xa00000000
0xffff9143b224     4  sub csp, jssp, #0x10 (16)
0xffff9143b228     8  stp fp, lr, [jssp, #-16]!
0xffff9143b22c    12  mov fp, jssp
0xffff9143b230    16  sub csp, jssp, #0x28 (40)
0xffff9143b234    20  sub jssp, jssp, #0x28 (40)
0xffff9143b238    24  stur x16, [fp, #-8]
0xffff9143b23c    28  str x2, [jssp, #24]
0xffff9143b240    32  str x1, [jssp, #16]
0xffff9143b244    36  str x0, [jssp, #8]
0xffff9143b248    40  str cp, [jssp]
0xffff9143b24c    44  mov x3, cp
0xffff9143b250    48  tbz w1, #0, #+0x3d8 (addr 0xffff9143b628)
0xffff9143b254    52  ldur x4, [x1, #-1]
0xffff9143b258    56  ldrb w4, [x4, #11]
0xffff9143b25c    60  tbnz w4, #7, #+0x3d4 (addr 0xffff9143b630)
0xffff9143b260    64  tbz w0, #0, #+0x3d8 (addr 0xffff9143b638)
0xffff9143b264    68  ldur x4, [x0, #-1]
0xffff9143b268    72  ldrb w4, [x4, #11]
0xffff9143b26c    76  tbnz w4, #7, #+0x3d4 (addr 0xffff9143b640)
0xffff9143b270    80  ldur w4, [x1, #19]
0xffff9143b274    84  ldur w5, [x0, #19]
0xffff9143b278    88  cbz w4, #+0x288 (addr 0xffff9143b500)
0xffff9143b27c    92  cbz w5, #+0x27c (addr 0xffff9143b4f8)
0xffff9143b280    96  add w6, w4, w5
0xffff9143b284   100  movn w16, #0xe0
0xffff9143b288   104  cmp w6, w16, lsr #4
0xffff9143b28c   108  b.hs #+0x3bc (addr 0xffff9143b648)
0xffff9143b290   112  cmp w6, #0xd (13)
0xffff9143b294   116  b.ge #+0x1c0 (addr 0xffff9143b454)
0xffff9143b298   120  ldur x7, [x1, #-1]
0xffff9143b29c   124  ldrb w7, [x7, #11]
0xffff9143b2a0   128  ldur x8, [x0, #-1]
0xffff9143b2a4   132  ldrb w8, [x8, #11]
0xffff9143b2a8   136  orr w9, w7, w8
0xffff9143b2ac   140  eor w7, w7, w8
0xffff9143b2b0   144  and w7, w7, #0x4
0xffff9143b2b4   148  cbnz w7, #+0xc (addr 0xffff9143b2c0)
0xffff9143b2b8   152  and w7, w9, #0x3
0xffff9143b2bc   156  cbz w7, #+0x28 (addr 0xffff9143b2e4)
0xffff9143b2c0   160  sub csp, jssp, #0x10 (16)
0xffff9143b2c4   164  stp x0, x1, [jssp, #-16]!
0xffff9143b2c8   168  mov cp, x3
0xffff9143b2cc   172  movz x0, #0x2
0xffff9143b2d0   176  movz x1, #0xa6c0
0xffff9143b2d4   180  movk x1, #0xec, lsl #16
0xffff9143b2d8   184  ldr x16, pc+728 (addr 0x0000ffff9143b5b0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9143b2dc   188  blr x16
0xffff9143b2e0   192  b #+0x228 (addr 0xffff9143b508)
0xffff9143b2e4   196  and w0, w9, #0x4
0xffff9143b2e8   200  cbnz w0, #+0x14 (addr 0xffff9143b2fc)
0xffff9143b2ec   204  lsl w0, w6, #1
0xffff9143b2f0   208  mov x1, x0
0xffff9143b2f4   212  ldr x0, pc+708 (addr 0x0000ffff9143b5b8)    ;; object: 0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9143b2f8   216  b #+0xc (addr 0xffff9143b304)
0xffff9143b2fc   220  mov x1, x6
0xffff9143b300   224  ldr x0, pc+704 (addr 0x0000ffff9143b5c0)    ;; object: 0x36404bf9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9143b304   228  add w1, w1, #0x1f (31)
0xffff9143b308   232  and w1, w1, #0xfffffff8
0xffff9143b30c   236  cmp w1, #0x96000 (614400)
0xffff9143b310   240  b.lt #+0x2c (addr 0xffff9143b33c)
0xffff9143b314   244  sub csp, jssp, #0x10 (16)
0xffff9143b318   248  ldp x1, x0, [jssp, #8]
0xffff9143b31c   252  stp x1, x0, [jssp, #-16]!
0xffff9143b320   256  ldr cp, [jssp, #16]
0xffff9143b324   260  movz x0, #0x2
0xffff9143b328   264  movz x1, #0xa6c0
0xffff9143b32c   268  movk x1, #0xec, lsl #16
0xffff9143b330   272  ldr x16, pc+664 (addr 0x0000ffff9143b5c8)    ;; code: STUB, CEntryStub, minor: 4
0xffff9143b334   276  blr x16
0xffff9143b338   280  b #+0x1d0 (addr 0xffff9143b508)
0xffff9143b33c   284  add w2, w1, #0x10 (16)
0xffff9143b340   288  sxtw x2, w2
0xffff9143b344   292  movz x3, #0xf2c0
0xffff9143b348   296  movk x3, #0x4117, lsl #16
0xffff9143b34c   300  ldp x8, x16, [x3]
0xffff9143b350   304  adds x7, x8, x2
0xffff9143b354   308  ccmp x7, x16, #nzCv, lo
0xffff9143b358   312  b.hi #+0x1c0 (addr 0xffff9143b518)
0xffff9143b35c   316  str x7, [x3]
0xffff9143b360   320  orr x8, x8, #0x1
0xffff9143b364   324  add x1, x8, w1, sxtw
0xffff9143b368   328  ldr x2, pc+616 (addr 0x0000ffff9143b5d0)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9143b36c   332  stur x2, [x1, #-1]
0xffff9143b370   336  ldr x2, [jssp, #24]
0xffff9143b374   340  stur x2, [x1, #7]
0xffff9143b378   344  ldur w1, [x2, #35]
0xffff9143b37c   348  add w1, w1, #0x1 (1)
0xffff9143b380   352  lsl x1, x1, #32
0xffff9143b384   356  stur x1, [x2, #31]
0xffff9143b388   360  stur x0, [x8, #-1]
0xffff9143b38c   364  movz w1, #0x3
0xffff9143b390   368  stur w1, [x8, #7]
0xffff9143b394   372  lsl x1, x6, #32
0xffff9143b398   376  stur x1, [x8, #15]
0xffff9143b39c   380  ldr x1, pc+572 (addr 0x0000ffff9143b5d8)    ;; object: 0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9143b3a0   384  cmp x0, x1
0xffff9143b3a4   388  b.eq #+0x58 (addr 0xffff9143b3fc)
0xffff9143b3a8   392  ldr x1, [jssp, #16]
0xffff9143b3ac   396  movz x0, #0x0
0xffff9143b3b0   400  cmp w4, w0
0xffff9143b3b4   404  b.le #+0x1c (addr 0xffff9143b3d0)
0xffff9143b3b8   408  add x2, x1, #0x17 (23)
0xffff9143b3bc   412  ldrb w3, [x2, w0, sxtw]
0xffff9143b3c0   416  add x2, x8, #0x17 (23)
0xffff9143b3c4   420  strb w3, [x2, w0, sxtw]
0xffff9143b3c8   424  add w0, w0, #0x1 (1)
0xffff9143b3cc   428  b #-0x1c (addr 0xffff9143b3b0)
0xffff9143b3d0   432  ldr x3, [jssp, #8]
0xffff9143b3d4   436  movz x0, #0x0
0xffff9143b3d8   440  cmp w5, w0
0xffff9143b3dc   444  b.le #+0x70 (addr 0xffff9143b44c)
0xffff9143b3e0   448  add x1, x3, #0x17 (23)
0xffff9143b3e4   452  ldrb w2, [x1, w0, sxtw]
0xffff9143b3e8   456  add w1, w4, w0
0xffff9143b3ec   460  add x6, x8, #0x17 (23)
0xffff9143b3f0   464  strb w2, [x6, w1, sxtw]
0xffff9143b3f4   468  add w0, w0, #0x1 (1)
0xffff9143b3f8   472  b #-0x20 (addr 0xffff9143b3d8)
0xffff9143b3fc   476  ldp x3, x1, [jssp, #8]
0xffff9143b400   480  movz x0, #0x0
0xffff9143b404   484  cmp w4, w0
0xffff9143b408   488  b.le #+0x1c (addr 0xffff9143b424)
0xffff9143b40c   492  add x2, x1, #0x17 (23)
0xffff9143b410   496  ldrh w6, [x2, w0, sxtw #1]
0xffff9143b414   500  add x2, x8, #0x17 (23)
0xffff9143b418   504  strh w6, [x2, w0, sxtw #1]
0xffff9143b41c   508  add w0, w0, #0x1 (1)
0xffff9143b420   512  b #-0x1c (addr 0xffff9143b404)
0xffff9143b424   516  movz x0, #0x0
0xffff9143b428   520  cmp w5, w0
0xffff9143b42c   524  b.le #+0x20 (addr 0xffff9143b44c)
0xffff9143b430   528  add x1, x3, #0x17 (23)
0xffff9143b434   532  ldrh w2, [x1, w0, sxtw #1]
0xffff9143b438   536  add w1, w4, w0
0xffff9143b43c   540  add x6, x8, #0x17 (23)
0xffff9143b440   544  strh w2, [x6, w1, sxtw #1]
0xffff9143b444   548  add w0, w0, #0x1 (1)
0xffff9143b448   552  b #-0x20 (addr 0xffff9143b428)
0xffff9143b44c   556  mov x0, x8
0xffff9143b450   560  b #+0xb8 (addr 0xffff9143b508)
0xffff9143b454   564  mov x3, x0
0xffff9143b458   568  ldur x0, [x1, #-1]
0xffff9143b45c   572  ldrb w0, [x0, #11]
0xffff9143b460   576  ldur x4, [x3, #-1]
0xffff9143b464   580  ldrb w4, [x4, #11]
0xffff9143b468   584  movz x7, #0xf2c0
0xffff9143b46c   588  movk x7, #0x4117, lsl #16
0xffff9143b470   592  ldp x8, x5, [x7]
0xffff9143b474   596  adds x16, x8, #0x38 (56)
0xffff9143b478   600  ccmp x16, x5, #nzCv, lo
0xffff9143b47c   604  b.hi #+0xe4 (addr 0xffff9143b560)
0xffff9143b480   608  str x16, [x7]
0xffff9143b484   612  orr x8, x8, #0x1
0xffff9143b488   616  add x5, x8, #0x28 (40)
0xffff9143b48c   620  ldr x7, pc+340 (addr 0x0000ffff9143b5e0)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9143b490   624  stur x7, [x5, #-1]
0xffff9143b494   628  stur x2, [x5, #7]
0xffff9143b498   632  ldur w5, [x2, #35]
0xffff9143b49c   636  add w5, w5, #0x1 (1)
0xffff9143b4a0   640  lsl x5, x5, #32
0xffff9143b4a4   644  stur x5, [x2, #31]
0xffff9143b4a8   648  and w2, w0, w4
0xffff9143b4ac   652  eor w0, w0, w4
0xffff9143b4b0   656  and w2, w2, #0xc
0xffff9143b4b4   660  cbnz w2, #+0x1c (addr 0xffff9143b4d0)
0xffff9143b4b8   664  and w0, w0, #0xc
0xffff9143b4bc   668  cmp w0, #0xc (12)
0xffff9143b4c0   672  b.eq #+0x10 (addr 0xffff9143b4d0)
0xffff9143b4c4   676  ldr x0, pc+292 (addr 0x0000ffff9143b5e8)    ;; object: 0x36404c51 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9143b4c8   680  stur x0, [x8, #-1]
0xffff9143b4cc   684  b #+0xc (addr 0xffff9143b4d8)
0xffff9143b4d0   688  ldr x0, pc+288 (addr 0x0000ffff9143b5f0)    ;; object: 0x36404ca9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9143b4d4   692  stur x0, [x8, #-1]
0xffff9143b4d8   696  movz w0, #0x3
0xffff9143b4dc   700  stur w0, [x8, #7]
0xffff9143b4e0   704  lsl x0, x6, #32
0xffff9143b4e4   708  stur x0, [x8, #15]
0xffff9143b4e8   712  stur x1, [x8, #23]
0xffff9143b4ec   716  stur x3, [x8, #31]
0xffff9143b4f0   720  mov x0, x8
0xffff9143b4f4   724  b #+0x14 (addr 0xffff9143b508)
0xffff9143b4f8   728  mov x0, x1
0xffff9143b4fc   732  b #+0xc (addr 0xffff9143b508)
0xffff9143b500   736  mov x3, x0
0xffff9143b504   740  mov x0, x3
0xffff9143b508   744  ldr cp, [jssp]
0xffff9143b50c   748  mov jssp, fp
0xffff9143b510   752  ldp fp, lr, [jssp], #16
0xffff9143b514   756  ret
0xffff9143b518   760  movz x8, #0x0
0xffff9143b51c   764  mov x16, lr
0xffff9143b520   768  ldr x17, pc+216 (addr 0x0000ffff9143b5f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9143b524   772  blr x17
0xffff9143b528   776  lsl x0, x2, #32
0xffff9143b52c   780  movz x10, #0x0
0xffff9143b530   784  sub csp, jssp, #0x10 (16)
0xffff9143b534   788  stp x10, x0, [jssp, #-16]!
0xffff9143b538   792  ldur cp, [fp, #-40]
0xffff9143b53c   796  movz x0, #0x2
0xffff9143b540   800  movz x1, #0x5b88
0xffff9143b544   804  movk x1, #0xe2, lsl #16
0xffff9143b548   808  ldr x16, pc+184 (addr 0x0000ffff9143b600)    ;; code: STUB, CEntryStub, minor: 5
0xffff9143b54c   812  blr x16
0xffff9143b550   816  str x0, [jssp, #64]
0xffff9143b554   820  ldr x16, pc+180 (addr 0x0000ffff9143b608)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9143b558   824  blr x16
0xffff9143b55c   828  b #-0x1f8 (addr 0xffff9143b364)
0xffff9143b560   832  movz x8, #0x0
0xffff9143b564   836  mov x16, lr
0xffff9143b568   840  ldr x17, pc+168 (addr 0x0000ffff9143b610)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9143b56c   844  blr x17
0xffff9143b570   848  movz x0, #0x3800000000
0xffff9143b574   852  movz x10, #0x0
0xffff9143b578   856  sub csp, jssp, #0x10 (16)
0xffff9143b57c   860  stp x10, x0, [jssp, #-16]!
0xffff9143b580   864  ldur cp, [fp, #-40]
0xffff9143b584   868  movz x0, #0x2
0xffff9143b588   872  movz x1, #0x5b88
0xffff9143b58c   876  movk x1, #0xe2, lsl #16
0xffff9143b590   880  ldr x16, pc+136 (addr 0x0000ffff9143b618)    ;; code: STUB, CEntryStub, minor: 5
0xffff9143b594   884  blr x16
0xffff9143b598   888  str x0, [jssp, #64]
0xffff9143b59c   892  ldr x16, pc+132 (addr 0x0000ffff9143b620)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9143b5a0   896  blr x16
0xffff9143b5a4   900  b #-0x11c (addr 0xffff9143b488)
0xffff9143b5a8   904  580003ff       constant pool begin (num_const = 31)    ;; constant pool
0xffff9143b5ac   908  d63f03e0       constant
0xffff9143b5b0   912  91406060       constant
0xffff9143b5b4   916  0000ffff       constant
0xffff9143b5b8   920  36404ba1       constant
0xffff9143b5bc   924  00000000       constant
0xffff9143b5c0   928  36404bf9       constant
0xffff9143b5c4   932  00000000       constant
0xffff9143b5c8   936  91406060       constant
0xffff9143b5cc   940  0000ffff       constant
0xffff9143b5d0   944  36405d81       constant
0xffff9143b5d4   948  00000000       constant
0xffff9143b5d8   952  36404ba1       constant
0xffff9143b5dc   956  00000000       constant
0xffff9143b5e0   960  36405d81       constant
0xffff9143b5e4   964  00000000       constant
0xffff9143b5e8   968  36404c51       constant
0xffff9143b5ec   972  00000000       constant
0xffff9143b5f0   976  36404ca9       constant
0xffff9143b5f4   980  00000000       constant
0xffff9143b5f8   984  91406820       constant
0xffff9143b5fc   988  0000ffff       constant
0xffff9143b600   992  91406260       constant
0xffff9143b604   996  0000ffff       constant
0xffff9143b608  1000  914068e0       constant
0xffff9143b60c  1004  0000ffff       constant
0xffff9143b610  1008  91406820       constant
0xffff9143b614  1012  0000ffff       constant
0xffff9143b618  1016  91406260       constant
0xffff9143b61c  1020  0000ffff       constant
0xffff9143b620  1024  914068e0       constant
0xffff9143b624  1028  0000ffff       constant
0xffff9143b628  1032  movz x16, #0x0
0xffff9143b62c  1036  bl #+0x24 (addr 0xffff9143b650)
0xffff9143b630  1040  movz x16, #0x8
0xffff9143b634  1044  bl #+0x1c (addr 0xffff9143b650)
0xffff9143b638  1048  movz x16, #0x10
0xffff9143b63c  1052  bl #+0x14 (addr 0xffff9143b650)
0xffff9143b640  1056  movz x16, #0x18
0xffff9143b644  1060  bl #+0xc (addr 0xffff9143b650)
0xffff9143b648  1064  movz x16, #0x20
0xffff9143b64c  1068  bl #+0x4 (addr 0xffff9143b650)
0xffff9143b650  1072  ldr x17, pc+24 (addr 0x0000ffff9143b668)    ;; lazy deoptimization bailout 0
0xffff9143b654  1076  add x17, x17, x16
0xffff9143b658  1080  br x17
0xffff9143b65c  1084  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9143b660  1088  d63f03e0       constant
0xffff9143b664  1092  d503201f       constant
0xffff9143b668  1096  91206000       constant
0xffff9143b66c  1100  0000ffff       constant


Safepoints (size = 60)
0xffff9143b2e0   192  1111000 (sp -> fp)       5
0xffff9143b338   280  1111000 (sp -> fp)       6
0xffff9143b550   816  1111000 | x0 | x8 (sp -> fp)  <none> argc: 2
0xffff9143b598   888  1111000 | x1 | x2 | x3 | x8 (sp -> fp)  <none> argc: 2

RelocInfo (size = 37)
0xffff9143b2d8  code target (STUB)  (0xffff91406060)
0xffff9143b2f4  embedded object  (0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9143b300  embedded object  (0x36404bf9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9143b330  code target (STUB)  (0xffff91406060)
0xffff9143b368  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9143b39c  embedded object  (0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9143b48c  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9143b4c4  embedded object  (0x36404c51 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9143b4d0  embedded object  (0x36404ca9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9143b520  code target (STUB)  (0xffff91406820)
0xffff9143b548  code target (STUB)  (0xffff91406260)
0xffff9143b554  code target (STUB)  (0xffff914068e0)
0xffff9143b568  code target (STUB)  (0xffff91406820)
0xffff9143b590  code target (STUB)  (0xffff91406260)
0xffff9143b59c  code target (STUB)  (0xffff914068e0)
0xffff9143b5a8  constant pool (size 128)
0xffff9143b650  runtime entry
0xffff9143b65c  constant pool (size 20)


kind = BINARY_OP_IC
major_key = BinaryOpICWithAllocationSiteStub
ic_state = MONOMORPHIC
extra_ic_state = 8775
type = NORMAL
name = BinaryOpICWithAllocationSiteStub(ADD_CreateAllocationMementos:String*String->String)
compiler = unknown
Instructions (size = 40)
0xffff9143b720     0  ldr x2, pc+24 (addr 0x0000ffff9143b738)    ;; object: 0x49b04241 <undefined>
0xffff9143b724     4  ldr x16, pc+28 (addr 0x0000ffff9143b740)    ;; code: STUB, BinaryOpWithAllocationSiteStub, minor: 8775
0xffff9143b728     8  br x16
0xffff9143b72c    12  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff9143b730    16  d63f03e0       constant
0xffff9143b734    20  d503201f       constant
0xffff9143b738    24  49b04241       constant
0xffff9143b73c    28  00000000       constant
0xffff9143b740    32  9143b220       constant
0xffff9143b744    36  0000ffff       constant


RelocInfo (size = 8)
0xffff9143b720  embedded object  (0x49b04241 <undefined>)
0xffff9143b724  code target (STUB)  (0xffff9143b220)
0xffff9143b72c  constant pool (size 28)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 285)
0xffff9143bc80     0  movz x2, #0xf2c0
0xffff9143bc84     4  movk x2, #0x4117, lsl #16
0xffff9143bc88     8  ldp x3, x0, [x2]
0xffff9143bc8c    12  adds x16, x3, #0x40 (64)
0xffff9143bc90    16  ccmp x16, x0, #nzCv, lo
0xffff9143bc94    20  b.hi #+0x4c (addr 0xffff9143bce0)
0xffff9143bc98    24  str x16, [x2]
0xffff9143bc9c    28  orr x3, x3, #0x1
0xffff9143bca0    32  ldr x0, pc+176 (addr 0x0000ffff9143bd50)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9143bca4    36  stur x0, [x3, #-1]
0xffff9143bca8    40  movz x0, #0x600000000
0xffff9143bcac    44  stur x0, [x3, #7]
0xffff9143bcb0    48  stur x1, [x3, #15]
0xffff9143bcb4    52  stur cp, [x3, #23]
0xffff9143bcb8    56  ldr x0, pc+160 (addr 0x0000ffff9143bd58)    ;; object: 0x49b04519 <the hole>
0xffff9143bcbc    60  stur x0, [x3, #31]
0xffff9143bcc0    64  ldur x0, [cp, #39]
0xffff9143bcc4    68  stur x0, [x3, #39]
0xffff9143bcc8    72  ldr x0, pc+152 (addr 0x0000ffff9143bd60)    ;; object: 0x49b04241 <undefined>
0xffff9143bccc    76  stur x0, [x3, #47]
0xffff9143bcd0    80  ldr x0, pc+152 (addr 0x0000ffff9143bd68)    ;; object: 0x49b04241 <undefined>
0xffff9143bcd4    84  stur x0, [x3, #55]
0xffff9143bcd8    88  mov x0, x3
0xffff9143bcdc    92  ret
0xffff9143bce0    96  sub csp, jssp, #0x10 (16)
0xffff9143bce4   100  stp fp, lr, [jssp, #-16]!
0xffff9143bce8   104  movz fp, #0xa00000000
0xffff9143bcec   108  sub csp, jssp, #0x8 (8)
0xffff9143bcf0   112  str fp, [jssp, #-8]!
0xffff9143bcf4   116  add fp, jssp, #0x8 (8)
0xffff9143bcf8   120  movz x3, #0x0
0xffff9143bcfc   124  mov x16, lr
0xffff9143bd00   128  ldr x17, pc+112 (addr 0x0000ffff9143bd70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9143bd04   132  blr x17
0xffff9143bd08   136  movz x0, #0x4000000000
0xffff9143bd0c   140  movz x10, #0x0
0xffff9143bd10   144  sub csp, jssp, #0x10 (16)
0xffff9143bd14   148  stp x10, x0, [jssp, #-16]!
0xffff9143bd18   152  movz x0, #0x2
0xffff9143bd1c   156  movz x1, #0x5b88
0xffff9143bd20   160  movk x1, #0xe2, lsl #16
0xffff9143bd24   164  ldr x16, pc+84 (addr 0x0000ffff9143bd78)    ;; code: STUB, CEntryStub, minor: 5
0xffff9143bd28   168  blr x16
0xffff9143bd2c   172  str x0, [jssp, #24]
0xffff9143bd30   176  ldr x16, pc+80 (addr 0x0000ffff9143bd80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9143bd34   180  blr x16
0xffff9143bd38   184  ldr lr, [jssp, #16]
0xffff9143bd3c   188  ldp xzr, fp, [jssp], #24
0xffff9143bd40   192  b #-0xa0 (addr 0xffff9143bca0)
0xffff9143bd44   196  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff9143bd48   200  d63f03e0       constant
0xffff9143bd4c   204  d503201f       constant
0xffff9143bd50   208  36406149       constant
0xffff9143bd54   212  00000000       constant
0xffff9143bd58   216  49b04519       constant
0xffff9143bd5c   220  00000000       constant
0xffff9143bd60   224  49b04241       constant
0xffff9143bd64   228  00000000       constant
0xffff9143bd68   232  49b04241       constant
0xffff9143bd6c   236  00000000       constant
0xffff9143bd70   240  91406820       constant
0xffff9143bd74   244  0000ffff       constant
0xffff9143bd78   248  91406260       constant
0xffff9143bd7c   252  0000ffff       constant
0xffff9143bd80   256  914068e0       constant
0xffff9143bd84   260  0000ffff       constant


Safepoints (size = 21)
0xffff9143bd2c   172  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 13)
0xffff9143bca0  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9143bcb8  embedded object  (0x49b04519 <the hole>)
0xffff9143bcc8  embedded object  (0x49b04241 <undefined>)
0xffff9143bcd0  embedded object  (0x49b04241 <undefined>)
0xffff9143bd00  code target (STUB)  (0xffff91406820)
0xffff9143bd24  code target (STUB)  (0xffff91406260)
0xffff9143bd30  code target (STUB)  (0xffff914068e0)
0xffff9143bd44  constant pool (size 68)


kind = KEYED_STORE_IC
major_key = VectorKeyedStoreICTrampolineStub
ic_state = GENERIC
extra_ic_state = STRICT
name = VectorKeyedStoreICTrampolineStub
compiler = unknown
Instructions (size = 384)
0xffff9143be00     0  ldur x3, [fp, #-16]
0xffff9143be04     4  ldur x3, [x3, #31]
0xffff9143be08     8  ldur x3, [x3, #87]
0xffff9143be0c    12  add x5, x3, x4, asr #29
0xffff9143be10    16  ldur x5, [x5, #15]
0xffff9143be14    20  tbz w1, #0, #+0x140 (addr 0xffff9143bf54)
0xffff9143be18    24  ldur x6, [x1, #-1]
0xffff9143be1c    28  ldur x7, [x5, #7]
0xffff9143be20    32  cmp x7, x6
0xffff9143be24    36  b.ne #+0x14 (addr 0xffff9143be38)
0xffff9143be28    40  add x5, x3, x4, asr #29
0xffff9143be2c    44  ldur x5, [x5, #23]
0xffff9143be30    48  add x5, x5, #0x5f (95)
0xffff9143be34    52  br x5
0xffff9143be38    56  ldur x7, [x5, #-1]
0xffff9143be3c    60  ldr x16, [x26, #224]
0xffff9143be40    64  cmp x7, x16
0xffff9143be44    68  b.ne #+0x68 (addr 0xffff9143beac)
0xffff9143be48    72  ldur x8, [x5, #7]
0xffff9143be4c    76  add x8, x5, x8, asr #29
0xffff9143be50    80  add x8, x8, #0xf (15)
0xffff9143be54    84  add x5, x5, #0xf (15)
0xffff9143be58    88  ldr x7, [x5]
0xffff9143be5c    92  ldur x7, [x7, #7]
0xffff9143be60    96  cmp x6, x7
0xffff9143be64   100  b.ne #+0x38 (addr 0xffff9143be9c)
0xffff9143be68   104  ldr x8, [x5, #8]
0xffff9143be6c   108  ldr x16, [x26, #40]
0xffff9143be70   112  cmp x8, x16
0xffff9143be74   116  b.ne #+0x10 (addr 0xffff9143be84)
0xffff9143be78   120  ldr x5, [x5, #16]
0xffff9143be7c   124  add x5, x5, #0x5f (95)
0xffff9143be80   128  br x5
0xffff9143be84   132  ldur x8, [x8, #7]
0xffff9143be88   136  tbz w8, #0, #+0xac (addr 0xffff9143bf34)
0xffff9143be8c   140  ldr x6, [x5, #16]
0xffff9143be90   144  mov x5, x8
0xffff9143be94   148  add x6, x6, #0x5f (95)
0xffff9143be98   152  br x6
0xffff9143be9c   156  add x5, x5, #0x18 (24)
0xffff9143bea0   160  cmp x5, x8
0xffff9143bea4   164  b.lt #-0x4c (addr 0xffff9143be58)
0xffff9143bea8   168  b #+0x8c (addr 0xffff9143bf34)
0xffff9143beac   172  ldr x16, [x26, #2400]
0xffff9143beb0   176  cmp x5, x16
0xffff9143beb4   180  b.ne #+0xc (addr 0xffff9143bec0)
0xffff9143beb8   184  ldr x16, pc+176 (addr 0x0000ffff9143bf68)    ;; code: KEYED_STORE_IC, MEGAMORPHIC
0xffff9143bebc   188  br x16
0xffff9143bec0   192  cmp x2, x5
0xffff9143bec4   196  b.ne #+0x70 (addr 0xffff9143bf34)
0xffff9143bec8   200  add x5, x3, x4, asr #29
0xffff9143becc   204  ldur x5, [x5, #23]
0xffff9143bed0   208  ldur x7, [x5, #15]
0xffff9143bed4   212  ldur x7, [x7, #7]
0xffff9143bed8   216  cmp x6, x7
0xffff9143bedc   220  b.ne #+0x10 (addr 0xffff9143beec)
0xffff9143bee0   224  ldur x5, [x5, #23]
0xffff9143bee4   228  add x5, x5, #0x5f (95)
0xffff9143bee8   232  br x5
0xffff9143beec   236  ldur x8, [x5, #7]
0xffff9143bef0   240  movz x16, #0x200000000
0xffff9143bef4   244  cmp x8, x16
0xffff9143bef8   248  b.eq #+0x3c (addr 0xffff9143bf34)
0xffff9143befc   252  add x8, x5, x8, asr #29
0xffff9143bf00   256  add x8, x8, #0xf (15)
0xffff9143bf04   260  add x5, x5, #0x1f (31)
0xffff9143bf08   264  ldr x7, [x5]
0xffff9143bf0c   268  ldur x7, [x7, #7]
0xffff9143bf10   272  cmp x6, x7
0xffff9143bf14   276  b.ne #+0x10 (addr 0xffff9143bf24)
0xffff9143bf18   280  ldr x5, [x5, #8]
0xffff9143bf1c   284  add x5, x5, #0x5f (95)
0xffff9143bf20   288  br x5
0xffff9143bf24   292  add x5, x5, #0x10 (16)
0xffff9143bf28   296  cmp x5, x8
0xffff9143bf2c   300  b.lt #-0x24 (addr 0xffff9143bf08)
0xffff9143bf30   304  b #+0x4 (addr 0xffff9143bf34)
0xffff9143bf34   308  sub csp, jssp, #0x28 (40)
0xffff9143bf38   312  stp x4, x0, [jssp, #-32]!
0xffff9143bf3c   316  stp x2, x1, [jssp, #16]
0xffff9143bf40   320  str x3, [jssp, #-8]!
0xffff9143bf44   324  movz x0, #0x5
0xffff9143bf48   328  ldr x1, pc+40 (addr 0x0000ffff9143bf70)    ;; external reference (Runtime::KeyedStoreIC_Miss)
0xffff9143bf4c   332  ldr x16, pc+44 (addr 0x0000ffff9143bf78)    ;; code: STUB, CEntryStub, minor: 4
0xffff9143bf50   336  br x16
0xffff9143bf54   340  ldr x6, [x26, #120]
0xffff9143bf58   344  b #-0x13c (addr 0xffff9143be1c)
0xffff9143bf5c   348  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff9143bf60   352  d63f03e0       constant
0xffff9143bf64   356  d503201f       constant
0xffff9143bf68   360  914263a0       constant
0xffff9143bf6c   364  0000ffff       constant
0xffff9143bf70   368  00c88e08       constant
0xffff9143bf74   372  00000000       constant
0xffff9143bf78   376  91406060       constant
0xffff9143bf7c   380  0000ffff       constant


RelocInfo (size = 14)
0xffff9143beb8  code target (KEYED_STORE_IC)  (0xffff914263a0)
0xffff9143bf48  external reference (Runtime::KeyedStoreIC_Miss)  (0xc88e08)
0xffff9143bf4c  code target (STUB)  (0xffff91406060)
0xffff9143bf5c  constant pool (size 36)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff9143cc20     0  ldur x0, [x1, #7]
0xffff9143cc24     4  movz x16, #0x1bf
0xffff9143cc28     8  ldr x0, [x0, x16]
0xffff9143cc2c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff9143cca0     0  ldur x0, [x1, #7]
0xffff9143cca4     4  movz x16, #0x1c7
0xffff9143cca8     8  ldr x0, [x0, x16]
0xffff9143ccac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff9143cd20     0  ldur x0, [x1, #7]
0xffff9143cd24     4  movz x16, #0x17f
0xffff9143cd28     8  ldr x0, [x0, x16]
0xffff9143cd2c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff9143cda0     0  ldur x0, [x1, #7]
0xffff9143cda4     4  movz x16, #0x1af
0xffff9143cda8     8  ldr x0, [x0, x16]
0xffff9143cdac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff9143ce20     0  ldur x0, [x1, #7]
0xffff9143ce24     4  movz x16, #0x1b7
0xffff9143ce28     8  ldr x0, [x0, x16]
0xffff9143ce2c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 88)
0xffff9143cea0     0  stur x5, [x1, #-1]
0xffff9143cea4     4  tbz w5, #0, #+0x34 (addr 0xffff9143ced8)
0xffff9143cea8     8  sub x2, x1, #0x1 (1)
0xffff9143ceac    12  and x5, x5, #0xfffffffffff00000
0xffff9143ceb0    16  ldr x5, [x5, #8]
0xffff9143ceb4    20  tbz w5, #1, #+0x24 (addr 0xffff9143ced8)
0xffff9143ceb8    24  and x5, x1, #0xfffffffffff00000
0xffff9143cebc    28  ldr x5, [x5, #8]
0xffff9143cec0    32  tbz w5, #2, #+0x18 (addr 0xffff9143ced8)
0xffff9143cec4    36  sub csp, jssp, #0x8 (8)
0xffff9143cec8    40  str lr, [jssp, #-8]!
0xffff9143cecc    44  ldr x16, pc+28 (addr 0x0000ffff9143cee8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9143ced0    48  blr x16
0xffff9143ced4    52  ldr lr, [jssp], #8
0xffff9143ced8    56  ret
0xffff9143cedc    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9143cee0    64  d63f03e0       constant
0xffff9143cee4    68  d503201f       constant
0xffff9143cee8    72  91438080       constant
0xffff9143ceec    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 7)
0xffff9143cecc  code target (STUB)  (0xffff91438080)
0xffff9143cedc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 168)
0xffff9143cf60     0  sub csp, jssp, #0x8 (8)
0xffff9143cf64     4  str x3, [jssp, #-8]!
0xffff9143cf68     8  sub csp, jssp, #0x8 (8)
0xffff9143cf6c    12  str x4, [jssp, #-8]!
0xffff9143cf70    16  ldr x3, pc+104 (addr 0x0000ffff9143cfd8)    ;; object: 0x49b5b0f1 Cell for 0
0xffff9143cf74    20  ldur x3, [x3, #7]
0xffff9143cf78    24  cmp x3, #0x0 (0)
0xffff9143cf7c    28  b.ne #+0x3c (addr 0xffff9143cfb8)
0xffff9143cf80    32  ldr x5, pc+96 (addr 0x0000ffff9143cfe0)    ;; object: 0x49b5b101 WeakCell for 0x3640c6b1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9143cf84    36  ldur x5, [x5, #7]
0xffff9143cf88    40  tbz w5, #0, #+0x30 (addr 0xffff9143cfb8)
0xffff9143cf8c    44  ldursw x4, [x5, #15]
0xffff9143cf90    48  tbnz w4, #23, #+0x28 (addr 0xffff9143cfb8)
0xffff9143cf94    52  ldur x4, [x5, #47]
0xffff9143cf98    56  ldur x4, [x4, #119]
0xffff9143cf9c    60  cmp x0, x4
0xffff9143cfa0    64  b.ne #+0x18 (addr 0xffff9143cfb8)
0xffff9143cfa4    68  ldr x4, [jssp], #8
0xffff9143cfa8    72  ldr x3, [jssp], #8
0xffff9143cfac    76  ldr x2, pc+60 (addr 0x0000ffff9143cfe8)    ;; object: 0x49b05209 <String[4]: next>
0xffff9143cfb0    80  ldr x16, pc+64 (addr 0x0000ffff9143cff0)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff9143cfb4    84  br x16
0xffff9143cfb8    88  ldr x2, pc+64 (addr 0x0000ffff9143cff8)    ;; object: 0x49b05209 <String[4]: next>
0xffff9143cfbc    92  ldr x4, [jssp], #8
0xffff9143cfc0    96  ldr x3, [jssp], #8
0xffff9143cfc4   100  ldr x16, pc+60 (addr 0x0000ffff9143d000)    ;; code: BUILTIN
0xffff9143cfc8   104  br x16
0xffff9143cfcc   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff9143cfd0   112  d63f03e0       constant
0xffff9143cfd4   116  d503201f       constant
0xffff9143cfd8   120  49b5b0f1       constant
0xffff9143cfdc   124  00000000       constant
0xffff9143cfe0   128  49b5b101       constant
0xffff9143cfe4   132  00000000       constant
0xffff9143cfe8   136  49b05209       constant
0xffff9143cfec   140  00000000       constant
0xffff9143cff0   144  9143cea0       constant
0xffff9143cff4   148  0000ffff       constant
0xffff9143cff8   152  49b05209       constant
0xffff9143cffc   156  00000000       constant
0xffff9143d000   160  91422420       constant
0xffff9143d004   164  0000ffff       constant


RelocInfo (size = 12)
0xffff9143cf70  embedded object  (0x49b5b0f1 Cell for 0)
0xffff9143cf80  embedded object  (0x49b5b101 WeakCell for 0x3640c6b1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9143cfac  embedded object  (0x49b05209 <String[4]: next>)
0xffff9143cfb0  code target (HANDLER)  (0xffff9143cea0)
0xffff9143cfb8  embedded object  (0x49b05209 <String[4]: next>)
0xffff9143cfc4  code target (BUILTIN)  (0xffff91422420)
0xffff9143cfcc  constant pool (size 60)

kind = STUB
major_key = FastCloneShallowObjectStub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 509)
0xffff9143d320     0  ldur x4, [x3, #47]
0xffff9143d324     4  tbnz w2, #0, #+0xc0 (addr 0xffff9143d3e4)
0xffff9143d328     8  asr x6, x2, #32
0xffff9143d32c    12  add x5, x4, #0x17 (23)
0xffff9143d330    16  ldr x7, [x5, w6, sxtw #3]
0xffff9143d334    20  ldr x4, pc+356 (addr 0x0000ffff9143d498)    ;; object: 0x49b04241 <undefined>
0xffff9143d338    24  cmp x7, x4
0xffff9143d33c    28  b.eq #+0xa4 (addr 0xffff9143d3e0)
0xffff9143d340    32  ldur x4, [x7, #7]
0xffff9143d344    36  ldur x5, [x4, #-1]
0xffff9143d348    40  ldrb w6, [x5, #7]
0xffff9143d34c    44  cmp w6, #0x9 (9)
0xffff9143d350    48  b.ne #+0x90 (addr 0xffff9143d3e0)
0xffff9143d354    52  movz x1, #0xf2c0
0xffff9143d358    56  movk x1, #0x4117, lsl #16
0xffff9143d35c    60  ldp x2, x0, [x1]
0xffff9143d360    64  adds x16, x2, #0x58 (88)
0xffff9143d364    68  ccmp x16, x0, #nzCv, lo
0xffff9143d368    72  b.hi #+0xc4 (addr 0xffff9143d42c)
0xffff9143d36c    76  str x16, [x1]
0xffff9143d370    80  orr x2, x2, #0x1
0xffff9143d374    84  stur x5, [x2, #-1]
0xffff9143d378    88  ldur x0, [x4, #7]
0xffff9143d37c    92  stur x0, [x2, #7]
0xffff9143d380    96  ldur x0, [x4, #15]
0xffff9143d384   100  stur x0, [x2, #15]
0xffff9143d388   104  ldur x0, [x4, #23]
0xffff9143d38c   108  stur x0, [x2, #23]
0xffff9143d390   112  ldur x0, [x4, #31]
0xffff9143d394   116  stur x0, [x2, #31]
0xffff9143d398   120  ldur x0, [x4, #39]
0xffff9143d39c   124  stur x0, [x2, #39]
0xffff9143d3a0   128  ldur x0, [x4, #47]
0xffff9143d3a4   132  stur x0, [x2, #47]
0xffff9143d3a8   136  ldur x0, [x4, #55]
0xffff9143d3ac   140  stur x0, [x2, #55]
0xffff9143d3b0   144  ldur x0, [x4, #63]
0xffff9143d3b4   148  stur x0, [x2, #63]
0xffff9143d3b8   152  add x0, x2, #0x48 (72)
0xffff9143d3bc   156  ldr x1, pc+228 (addr 0x0000ffff9143d4a0)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9143d3c0   160  stur x1, [x0, #-1]
0xffff9143d3c4   164  stur x7, [x0, #7]
0xffff9143d3c8   168  ldur w0, [x7, #35]
0xffff9143d3cc   172  add w0, w0, #0x1 (1)
0xffff9143d3d0   176  lsl x0, x0, #32
0xffff9143d3d4   180  stur x0, [x7, #31]
0xffff9143d3d8   184  mov x0, x2
0xffff9143d3dc   188  ret
0xffff9143d3e0   192  b #+0xe0 (addr 0xffff9143d4c0)
0xffff9143d3e4   196  sub csp, jssp, #0x10 (16)
0xffff9143d3e8   200  stp fp, lr, [jssp, #-16]!
0xffff9143d3ec   204  movz fp, #0xa00000000
0xffff9143d3f0   208  sub csp, jssp, #0x8 (8)
0xffff9143d3f4   212  str fp, [jssp, #-8]!
0xffff9143d3f8   216  add fp, jssp, #0x8 (8)
0xffff9143d3fc   220  ldur x16, [x2, #-1]
0xffff9143d400   224  ldr x17, [x26, #120]
0xffff9143d404   228  cmp x16, x17
0xffff9143d408   232  b.ne #+0xc8 (addr 0xffff9143d4d0)
0xffff9143d40c   236  ldur d29, [x2, #7]
0xffff9143d410   240  fcvtzs w6, d29
0xffff9143d414   244  scvtf d0, w6
0xffff9143d418   248  fcmp d29, d0
0xffff9143d41c   252  b.ne #+0xb4 (addr 0xffff9143d4d0)
0xffff9143d420   256  ldr lr, [jssp, #16]
0xffff9143d424   260  ldp xzr, fp, [jssp], #24
0xffff9143d428   264  b #-0xfc (addr 0xffff9143d32c)
0xffff9143d42c   268  sub csp, jssp, #0x10 (16)
0xffff9143d430   272  stp fp, lr, [jssp, #-16]!
0xffff9143d434   276  movz fp, #0xa00000000
0xffff9143d438   280  sub csp, jssp, #0x8 (8)
0xffff9143d43c   284  str fp, [jssp, #-8]!
0xffff9143d440   288  add fp, jssp, #0x8 (8)
0xffff9143d444   292  movz x2, #0x0
0xffff9143d448   296  mov x16, lr
0xffff9143d44c   300  ldr x17, pc+92 (addr 0x0000ffff9143d4a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9143d450   304  blr x17
0xffff9143d454   308  movz x0, #0x5800000000
0xffff9143d458   312  movz x10, #0x0
0xffff9143d45c   316  sub csp, jssp, #0x10 (16)
0xffff9143d460   320  stp x10, x0, [jssp, #-16]!
0xffff9143d464   324  movz x0, #0x2
0xffff9143d468   328  movz x1, #0x5b88
0xffff9143d46c   332  movk x1, #0xe2, lsl #16
0xffff9143d470   336  ldr x16, pc+64 (addr 0x0000ffff9143d4b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff9143d474   340  blr x16
0xffff9143d478   344  str x0, [jssp, #16]
0xffff9143d47c   348  ldr x16, pc+60 (addr 0x0000ffff9143d4b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9143d480   352  blr x16
0xffff9143d484   356  ldr lr, [jssp, #16]
0xffff9143d488   360  ldp xzr, fp, [jssp], #24
0xffff9143d48c   364  b #-0x118 (addr 0xffff9143d374)
0xffff9143d490   368  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff9143d494   372  d63f03e0       constant
0xffff9143d498   376  49b04241       constant
0xffff9143d49c   380  00000000       constant
0xffff9143d4a0   384  36405d81       constant
0xffff9143d4a4   388  00000000       constant
0xffff9143d4a8   392  91406820       constant
0xffff9143d4ac   396  0000ffff       constant
0xffff9143d4b0   400  91406260       constant
0xffff9143d4b4   404  0000ffff       constant
0xffff9143d4b8   408  914068e0       constant
0xffff9143d4bc   412  0000ffff       constant
0xffff9143d4c0   416  movz x16, #0x0
0xffff9143d4c4   420  sub csp, jssp, #0x10 (16)
0xffff9143d4c8   424  stp fp, lr, [jssp, #-16]!
0xffff9143d4cc   428  bl #+0xc (addr 0xffff9143d4d8)
0xffff9143d4d0   432  movz x16, #0x8
0xffff9143d4d4   436  bl #+0x14 (addr 0xffff9143d4e8)
0xffff9143d4d8   440  movz x17, #0xa00000000
0xffff9143d4dc   444  sub csp, jssp, #0x10 (16)
0xffff9143d4e0   448  stp x17, cp, [jssp, #-16]!
0xffff9143d4e4   452  add fp, jssp, #0x10 (16)
0xffff9143d4e8   456  ldr x17, pc+24 (addr 0x0000ffff9143d500)    ;; lazy deoptimization bailout 0
0xffff9143d4ec   460  add x17, x17, x16
0xffff9143d4f0   464  br x17
0xffff9143d4f4   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9143d4f8   472  d63f03e0       constant
0xffff9143d4fc   476  d503201f       constant
0xffff9143d500   480  91206000       constant
0xffff9143d504   484  0000ffff       constant


Safepoints (size = 21)
0xffff9143d478   344  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff9143d334  embedded object  (0x49b04241 <undefined>)
0xffff9143d3bc  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9143d44c  code target (STUB)  (0xffff91406820)
0xffff9143d470  code target (STUB)  (0xffff91406260)
0xffff9143d47c  code target (STUB)  (0xffff914068e0)
0xffff9143d490  constant pool (size 48)
0xffff9143d4e8  runtime entry
0xffff9143d4f4  constant pool (size 20)


kind = STUB
major_key = ArrayConstructorStub
name = ArrayConstructorStub_None
compiler = unknown
Instructions (size = 288)
0xffff9143d580     0  ldur cp, [x1, #39]
0xffff9143d584     4  cmp x3, x1
0xffff9143d588     8  b.ne #+0x98 (addr 0xffff9143d620)
0xffff9143d58c    12  ldr x16, [x26, #40]
0xffff9143d590    16  cmp x2, x16
0xffff9143d594    20  b.eq #+0x84 (addr 0xffff9143d618)
0xffff9143d598    24  ldursw x3, [x2, #11]
0xffff9143d59c    28  and x3, x3, #0x7fff
0xffff9143d5a0    32  cbnz x3, #+0xc (addr 0xffff9143d5ac)
0xffff9143d5a4    36  ldr x16, pc+164 (addr 0x0000ffff9143d648)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 0
0xffff9143d5a8    40  br x16
0xffff9143d5ac    44  cmp x3, #0x1 (1)
0xffff9143d5b0    48  b.ne #+0xc (addr 0xffff9143d5bc)
0xffff9143d5b4    52  ldr x16, pc+156 (addr 0x0000ffff9143d650)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 1
0xffff9143d5b8    56  br x16
0xffff9143d5bc    60  cmp x3, #0x4 (4)
0xffff9143d5c0    64  b.ne #+0xc (addr 0xffff9143d5cc)
0xffff9143d5c4    68  ldr x16, pc+148 (addr 0x0000ffff9143d658)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 4
0xffff9143d5c8    72  br x16
0xffff9143d5cc    76  cmp x3, #0x5 (5)
0xffff9143d5d0    80  b.ne #+0xc (addr 0xffff9143d5dc)
0xffff9143d5d4    84  ldr x16, pc+140 (addr 0x0000ffff9143d660)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 5
0xffff9143d5d8    88  br x16
0xffff9143d5dc    92  cmp x3, #0x2 (2)
0xffff9143d5e0    96  b.ne #+0xc (addr 0xffff9143d5ec)
0xffff9143d5e4   100  ldr x16, pc+132 (addr 0x0000ffff9143d668)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 2
0xffff9143d5e8   104  br x16
0xffff9143d5ec   108  cmp x3, #0x3 (3)
0xffff9143d5f0   112  b.ne #+0xc (addr 0xffff9143d5fc)
0xffff9143d5f4   116  ldr x16, pc+124 (addr 0x0000ffff9143d670)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 3
0xffff9143d5f8   120  br x16
0xffff9143d5fc   124  movz x0, #0x9f00000000
0xffff9143d600   128  sub csp, jssp, #0x8 (8)
0xffff9143d604   132  str x0, [jssp, #-8]!
0xffff9143d608   136  movz x0, #0x1
0xffff9143d60c   140  ldr x1, pc+108 (addr 0x0000ffff9143d678)    ;; external reference (Runtime::Abort)
0xffff9143d610   144  ldr x16, pc+112 (addr 0x0000ffff9143d680)    ;; code: STUB, CEntryStub, minor: 4
0xffff9143d614   148  blr x16
0xffff9143d618   152  ldr x16, pc+112 (addr 0x0000ffff9143d688)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 256
0xffff9143d61c   156  br x16
0xffff9143d620   160  str x1, [jssp]
0xffff9143d624   164  movz x0, #0x3
0xffff9143d628   168  sub csp, jssp, #0x10 (16)
0xffff9143d62c   172  stp x2, x3, [jssp, #-16]!
0xffff9143d630   176  ldr x1, pc+96 (addr 0x0000ffff9143d690)    ;; external reference (Runtime::NewArray)
0xffff9143d634   180  ldr x16, pc+100 (addr 0x0000ffff9143d698)    ;; code: STUB, CEntryStub, minor: 4
0xffff9143d638   184  br x16
0xffff9143d63c   188  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff9143d640   192  d63f03e0       constant
0xffff9143d644   196  d503201f       constant
0xffff9143d648   200  914069a0       constant
0xffff9143d64c   204  0000ffff       constant
0xffff9143d650   208  91406e00       constant
0xffff9143d654   212  0000ffff       constant
0xffff9143d658   216  91407280       constant
0xffff9143d65c   220  0000ffff       constant
0xffff9143d660   224  91407480       constant
0xffff9143d664   228  0000ffff       constant
0xffff9143d668   232  91407680       constant
0xffff9143d66c   236  0000ffff       constant
0xffff9143d670   240  914078a0       constant
0xffff9143d674   244  0000ffff       constant
0xffff9143d678   248  00eda820       constant
0xffff9143d67c   252  00000000       constant
0xffff9143d680   256  91406060       constant
0xffff9143d684   260  0000ffff       constant
0xffff9143d688   264  91406be0       constant
0xffff9143d68c   268  0000ffff       constant
0xffff9143d690   272  00de2850       constant
0xffff9143d694   276  00000000       constant
0xffff9143d698   280  91406060       constant
0xffff9143d69c   284  0000ffff       constant


RelocInfo (size = 19)
0xffff9143d5a4  code target (STUB)  (0xffff914069a0)
0xffff9143d5b4  code target (STUB)  (0xffff91406e00)
0xffff9143d5c4  code target (STUB)  (0xffff91407280)
0xffff9143d5d4  code target (STUB)  (0xffff91407480)
0xffff9143d5e4  code target (STUB)  (0xffff91407680)
0xffff9143d5f4  code target (STUB)  (0xffff914078a0)
0xffff9143d60c  external reference (Runtime::Abort)  (0xeda820)
0xffff9143d610  code target (STUB)  (0xffff91406060)
0xffff9143d618  code target (STUB)  (0xffff91406be0)
0xffff9143d630  external reference (Runtime::NewArray)  (0xde2850)
0xffff9143d634  code target (STUB)  (0xffff91406060)
0xffff9143d63c  constant pool (size 100)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393216
name = CallICStub(args(0), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff9143d700     0  add x4, x2, x3, asr #29
0xffff9143d704     4  ldur x4, [x4, #15]
0xffff9143d708     8  ldur x5, [x4, #7]
0xffff9143d70c    12  cmp x5, x1
0xffff9143d710    16  b.ne #+0x2c (addr 0xffff9143d73c)
0xffff9143d714    20  tbz w1, #0, #+0x28 (addr 0xffff9143d73c)
0xffff9143d718    24  add x2, x2, x3, asr #29
0xffff9143d71c    28  add x2, x2, #0x18 (24)
0xffff9143d720    32  ldur x3, [x2, #-1]
0xffff9143d724    36  movz x16, #0x200000000
0xffff9143d728    40  add x3, x3, x16
0xffff9143d72c    44  stur x3, [x2, #-1]
0xffff9143d730    48  movz x0, #0x0
0xffff9143d734    52  ldr x16, pc+372 (addr 0x0000ffff9143d8a8)    ;; code: BUILTIN
0xffff9143d738    56  br x16
0xffff9143d73c    60  ldr x16, [x26, #2400]
0xffff9143d740    64  cmp x4, x16
0xffff9143d744    68  b.eq #+0x78 (addr 0xffff9143d7bc)
0xffff9143d748    72  ldur x5, [x4, #-1]
0xffff9143d74c    76  ldr x16, [x26, #2736]
0xffff9143d750    80  cmp x5, x16
0xffff9143d754    84  b.ne #+0x40 (addr 0xffff9143d794)
0xffff9143d758    88  ldur x5, [cp, #39]
0xffff9143d75c    92  ldur x5, [x5, #95]
0xffff9143d760    96  cmp x1, x5
0xffff9143d764   100  b.ne #+0xec (addr 0xffff9143d850)
0xffff9143d768   104  movz x0, #0x0
0xffff9143d76c   108  add x2, x2, x3, asr #29
0xffff9143d770   112  add x2, x2, #0x18 (24)
0xffff9143d774   116  ldur x3, [x2, #-1]
0xffff9143d778   120  movz x16, #0x200000000
0xffff9143d77c   124  add x3, x3, x16
0xffff9143d780   128  stur x3, [x2, #-1]
0xffff9143d784   132  mov x2, x4
0xffff9143d788   136  mov x3, x1
0xffff9143d78c   140  ldr x16, pc+292 (addr 0x0000ffff9143d8b0)    ;; code: STUB, ArrayConstructorStub, minor: 1
0xffff9143d790   144  br x16
0xffff9143d794   148  ldr x16, [x26, #2568]
0xffff9143d798   152  cmp x4, x16
0xffff9143d79c   156  b.eq #+0xb4 (addr 0xffff9143d850)
0xffff9143d7a0   160  ldur x5, [x4, #-1]
0xffff9143d7a4   164  ldrb w5, [x5, #11]
0xffff9143d7a8   168  cmp x5, #0xc9 (201)
0xffff9143d7ac   172  b.ne #+0xa4 (addr 0xffff9143d850)
0xffff9143d7b0   176  add x4, x2, x3, asr #29
0xffff9143d7b4   180  ldr x5, [x26, #2400]
0xffff9143d7b8   184  stur x5, [x4, #15]
0xffff9143d7bc   188  movz x0, #0x0
0xffff9143d7c0   192  ldr x16, pc+248 (addr 0x0000ffff9143d8b8)    ;; code: BUILTIN
0xffff9143d7c4   196  br x16
0xffff9143d7c8   200  tbz w1, #0, #+0x88 (addr 0xffff9143d850)
0xffff9143d7cc   204  ldur x5, [x1, #-1]
0xffff9143d7d0   208  ldrb w5, [x5, #11]
0xffff9143d7d4   212  cmp x5, #0xc9 (201)
0xffff9143d7d8   216  b.ne #+0x78 (addr 0xffff9143d850)
0xffff9143d7dc   220  ldur x5, [cp, #39]
0xffff9143d7e0   224  ldur x5, [x5, #95]
0xffff9143d7e4   228  cmp x1, x5
0xffff9143d7e8   232  b.eq #+0x68 (addr 0xffff9143d850)
0xffff9143d7ec   236  ldur x4, [x1, #39]
0xffff9143d7f0   240  ldur x4, [x4, #39]
0xffff9143d7f4   244  ldur x5, [cp, #39]
0xffff9143d7f8   248  cmp x4, x5
0xffff9143d7fc   252  b.ne #+0x54 (addr 0xffff9143d850)
0xffff9143d800   256  movz x5, #0x200000000
0xffff9143d804   260  adds x4, x2, x3, asr #29
0xffff9143d808   264  stur x5, [x4, #23]
0xffff9143d80c   268  movz x16, #0xc00000000
0xffff9143d810   272  sub csp, jssp, #0x10 (16)
0xffff9143d814   276  stp fp, lr, [jssp, #-16]!
0xffff9143d818   280  sub csp, jssp, #0x10 (16)
0xffff9143d81c   284  str x16, [jssp, #-8]!
0xffff9143d820   288  ldr x17, pc+160 (addr 0x0000ffff9143d8c0)    ;; object: 0xffff9143d6a1 <Code: CALL_IC>
0xffff9143d824   292  sub csp, jssp, #0x10 (16)
0xffff9143d828   296  str x17, [jssp, #-8]!
0xffff9143d82c   300  add fp, jssp, #0x10 (16)
0xffff9143d830   304  sub csp, jssp, #0x8 (8)
0xffff9143d834   308  str x1, [jssp, #-8]!
0xffff9143d838   312  ldr x16, pc+144 (addr 0x0000ffff9143d8c8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff9143d83c   316  blr x16
0xffff9143d840   320  ldr x1, [jssp], #8
0xffff9143d844   324  mov jssp, fp
0xffff9143d848   328  ldp fp, lr, [jssp], #16
0xffff9143d84c   332  b #-0x11c (addr 0xffff9143d730)
0xffff9143d850   336  movz x16, #0xc00000000
0xffff9143d854   340  sub csp, jssp, #0x10 (16)
0xffff9143d858   344  stp fp, lr, [jssp, #-16]!
0xffff9143d85c   348  sub csp, jssp, #0x10 (16)
0xffff9143d860   352  str x16, [jssp, #-8]!
0xffff9143d864   356  ldr x17, pc+108 (addr 0x0000ffff9143d8d0)    ;; object: 0xffff9143d6a1 <Code: CALL_IC>
0xffff9143d868   360  sub csp, jssp, #0x10 (16)
0xffff9143d86c   364  str x17, [jssp, #-8]!
0xffff9143d870   368  add fp, jssp, #0x10 (16)
0xffff9143d874   372  sub csp, jssp, #0x18 (24)
0xffff9143d878   376  stp x3, x2, [jssp, #-24]!
0xffff9143d87c   380  str x1, [jssp, #16]
0xffff9143d880   384  movz x0, #0x3
0xffff9143d884   388  ldr x1, pc+84 (addr 0x0000ffff9143d8d8)    ;; external reference (Runtime::CallIC_Miss)
0xffff9143d888   392  ldr x16, pc+88 (addr 0x0000ffff9143d8e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9143d88c   396  blr x16
0xffff9143d890   400  mov x1, x0
0xffff9143d894   404  mov jssp, fp
0xffff9143d898   408  ldp fp, lr, [jssp], #16
0xffff9143d89c   412  b #-0xe0 (addr 0xffff9143d7bc)
0xffff9143d8a0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff9143d8a4   420  d63f03e0       constant
0xffff9143d8a8   424  9141e820       constant
0xffff9143d8ac   428  0000ffff       constant
0xffff9143d8b0   432  9143d580       constant
0xffff9143d8b4   436  0000ffff       constant
0xffff9143d8b8   440  9141f820       constant
0xffff9143d8bc   444  0000ffff       constant
0xffff9143d8c0   448  9143d6a1       constant
0xffff9143d8c4   452  0000ffff       constant
0xffff9143d8c8   456  9140ddc0       constant
0xffff9143d8cc   460  0000ffff       constant
0xffff9143d8d0   464  9143d6a1       constant
0xffff9143d8d4   468  0000ffff       constant
0xffff9143d8d8   472  00c86928       constant
0xffff9143d8dc   476  00000000       constant
0xffff9143d8e0   480  91406060       constant
0xffff9143d8e4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff9143d734  code target (BUILTIN)  (0xffff9141e820)
0xffff9143d78c  code target (STUB)  (0xffff9143d580)
0xffff9143d7c0  code target (BUILTIN)  (0xffff9141f820)
0xffff9143d820  embedded object  (0xffff9143d6a1 <Code: CALL_IC>)
0xffff9143d838  code target (STUB)  (0xffff9140ddc0)
0xffff9143d864  embedded object  (0xffff9143d6a1 <Code: CALL_IC>)
0xffff9143d884  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff9143d888  code target (STUB)  (0xffff91406060)
0xffff9143d8a0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393216
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff9143d960     0  ldur x2, [fp, #-16]
0xffff9143d964     4  ldur x2, [x2, #31]
0xffff9143d968     8  ldur x2, [x2, #87]
0xffff9143d96c    12  ldr x16, pc+20 (addr 0x0000ffff9143d980)    ;; code: CALL_IC, GENERIC
0xffff9143d970    16  br x16
0xffff9143d974    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9143d978    24  d63f03e0       constant
0xffff9143d97c    28  d503201f       constant
0xffff9143d980    32  9143d700       constant
0xffff9143d984    36  0000ffff       constant


RelocInfo (size = 7)
0xffff9143d96c  code target (CALL_IC)  (0xffff9143d700)
0xffff9143d974  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff914411c0     0  sub csp, jssp, #0x8 (8)
0xffff914411c4     4  str x3, [jssp, #-8]!
0xffff914411c8     8  sub csp, jssp, #0x8 (8)
0xffff914411cc    12  str x4, [jssp, #-8]!
0xffff914411d0    16  ldr x3, pc+88 (addr 0x0000ffff91441228)    ;; object: 0x49b5b0f1 Cell for 0
0xffff914411d4    20  ldur x3, [x3, #7]
0xffff914411d8    24  cmp x3, #0x0 (0)
0xffff914411dc    28  b.ne #+0x30 (addr 0xffff9144120c)
0xffff914411e0    32  tbz w0, #0, #+0x2c (addr 0xffff9144120c)
0xffff914411e4    36  ldr x5, pc+76 (addr 0x0000ffff91441230)    ;; object: 0x49b62a21 WeakCell for 0x3640c9c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914411e8    40  ldur x5, [x5, #7]
0xffff914411ec    44  tbz w5, #0, #+0x20 (addr 0xffff9144120c)
0xffff914411f0    48  ldursw x4, [x5, #15]
0xffff914411f4    52  tbnz w4, #23, #+0x18 (addr 0xffff9144120c)
0xffff914411f8    56  ldr x4, [jssp], #8
0xffff914411fc    60  ldr x3, [jssp], #8
0xffff91441200    64  ldr x2, pc+56 (addr 0x0000ffff91441238)    ;; object: 0x49b05209 <String[4]: next>
0xffff91441204    68  ldr x16, pc+60 (addr 0x0000ffff91441240)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff91441208    72  br x16
0xffff9144120c    76  ldr x2, pc+60 (addr 0x0000ffff91441248)    ;; object: 0x49b05209 <String[4]: next>
0xffff91441210    80  ldr x4, [jssp], #8
0xffff91441214    84  ldr x3, [jssp], #8
0xffff91441218    88  ldr x16, pc+56 (addr 0x0000ffff91441250)    ;; code: BUILTIN
0xffff9144121c    92  br x16
0xffff91441220    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff91441224   100  d63f03e0       constant
0xffff91441228   104  49b5b0f1       constant
0xffff9144122c   108  00000000       constant
0xffff91441230   112  49b62a21       constant
0xffff91441234   116  00000000       constant
0xffff91441238   120  49b05209       constant
0xffff9144123c   124  00000000       constant
0xffff91441240   128  91438860       constant
0xffff91441244   132  0000ffff       constant
0xffff91441248   136  49b05209       constant
0xffff9144124c   140  00000000       constant
0xffff91441250   144  91422420       constant
0xffff91441254   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914411d0  embedded object  (0x49b5b0f1 Cell for 0)
0xffff914411e4  embedded object  (0x49b62a21 WeakCell for 0x3640c9c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91441200  embedded object  (0x49b05209 <String[4]: next>)
0xffff91441204  code target (HANDLER)  (0xffff91438860)
0xffff9144120c  embedded object  (0x49b05209 <String[4]: next>)
0xffff91441218  code target (BUILTIN)  (0xffff91422420)
0xffff91441220  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff914412c0     0  sub csp, jssp, #0x8 (8)
0xffff914412c4     4  str x3, [jssp, #-8]!
0xffff914412c8     8  sub csp, jssp, #0x8 (8)
0xffff914412cc    12  str x4, [jssp, #-8]!
0xffff914412d0    16  ldr x3, pc+88 (addr 0x0000ffff91441328)    ;; object: 0x49b5b0f1 Cell for 0
0xffff914412d4    20  ldur x3, [x3, #7]
0xffff914412d8    24  cmp x3, #0x0 (0)
0xffff914412dc    28  b.ne #+0x30 (addr 0xffff9144130c)
0xffff914412e0    32  tbz w0, #0, #+0x2c (addr 0xffff9144130c)
0xffff914412e4    36  ldr x5, pc+76 (addr 0x0000ffff91441330)    ;; object: 0x49b62a21 WeakCell for 0x3640c9c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914412e8    40  ldur x5, [x5, #7]
0xffff914412ec    44  tbz w5, #0, #+0x20 (addr 0xffff9144130c)
0xffff914412f0    48  ldursw x4, [x5, #15]
0xffff914412f4    52  tbnz w4, #23, #+0x18 (addr 0xffff9144130c)
0xffff914412f8    56  ldr x4, [jssp], #8
0xffff914412fc    60  ldr x3, [jssp], #8
0xffff91441300    64  ldr x2, pc+56 (addr 0x0000ffff91441338)    ;; object: 0x49b05209 <String[4]: next>
0xffff91441304    68  ldr x16, pc+60 (addr 0x0000ffff91441340)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff91441308    72  br x16
0xffff9144130c    76  ldr x2, pc+60 (addr 0x0000ffff91441348)    ;; object: 0x49b05209 <String[4]: next>
0xffff91441310    80  ldr x4, [jssp], #8
0xffff91441314    84  ldr x3, [jssp], #8
0xffff91441318    88  ldr x16, pc+56 (addr 0x0000ffff91441350)    ;; code: BUILTIN
0xffff9144131c    92  br x16
0xffff91441320    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff91441324   100  d63f03e0       constant
0xffff91441328   104  49b5b0f1       constant
0xffff9144132c   108  00000000       constant
0xffff91441330   112  49b62a21       constant
0xffff91441334   116  00000000       constant
0xffff91441338   120  49b05209       constant
0xffff9144133c   124  00000000       constant
0xffff91441340   128  91438860       constant
0xffff91441344   132  0000ffff       constant
0xffff91441348   136  49b05209       constant
0xffff9144134c   140  00000000       constant
0xffff91441350   144  91422420       constant
0xffff91441354   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914412d0  embedded object  (0x49b5b0f1 Cell for 0)
0xffff914412e4  embedded object  (0x49b62a21 WeakCell for 0x3640c9c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91441300  embedded object  (0x49b05209 <String[4]: next>)
0xffff91441304  code target (HANDLER)  (0xffff91438860)
0xffff9144130c  embedded object  (0x49b05209 <String[4]: next>)
0xffff91441318  code target (BUILTIN)  (0xffff91422420)
0xffff91441320  constant pool (size 56)

kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff91441580     0  adr xzr, #+0x40 (addr 0xffff914415c0)
0xffff91441584     4  adr xzr, #+0x360 (addr 0xffff914418e4)
0xffff91441588     8  ldr x16, pc+1736 (addr 0x0000ffff91441c50)    ;; external reference (store_buffer_top)
0xffff9144158c    12  ldr x6, [x16]
0xffff91441590    16  str x7, [x6], #8
0xffff91441594    20  str x6, [x16]
0xffff91441598    24  tst x6, #0x1ffff
0xffff9144159c    28  b.eq #+0x8 (addr 0xffff914415a4)
0xffff914415a0    32  ret
0xffff914415a4    36  sub csp, jssp, #0x8 (8)
0xffff914415a8    40  str lr, [jssp, #-8]!
0xffff914415ac    44  ldr x17, pc+1708 (addr 0x0000ffff91441c58)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914415b0    48  blr x17
0xffff914415b4    52  ldr lr, [jssp], #8
0xffff914415b8    56  ret
0xffff914415bc    60  ret
0xffff914415c0    64  sub csp, jssp, #0x10 (16)
0xffff914415c4    68  stp x2, x0, [jssp, #-16]!
0xffff914415c8    72  ldr x6, [x7]
0xffff914415cc    76  and x16, x6, #0xfffffffffff00000
0xffff914415d0    80  ldr x16, [x16, #8]
0xffff914415d4    84  tst x16, #0x18
0xffff914415d8    88  b.eq #+0x1d8 (addr 0xffff914417b0)
0xffff914415dc    92  and x16, x1, #0xfffffffffff00000
0xffff914415e0    96  ldr x16, [x16, #8]
0xffff914415e4   100  tst x16, #0x18
0xffff914415e8   104  b.ne #+0x1c8 (addr 0xffff914417b0)
0xffff914415ec   108  and x6, x1, #0xfffffffffff00000
0xffff914415f0   112  ldr x0, [x6, #104]
0xffff914415f4   116  subs x0, x0, #0x1 (1)
0xffff914415f8   120  str x0, [x6, #104]
0xffff914415fc   124  b.mi #+0xc4 (addr 0xffff914416c0)
0xffff91441600   128  ubfx x16, x1, #8, #12
0xffff91441604   132  and x6, x1, #0xfffffffffff00000
0xffff91441608   136  add x6, x6, x16, lsl #2
0xffff9144160c   140  ubfx x0, x1, #3, #5
0xffff91441610   144  ldr x6, [x6, #360]
0xffff91441614   148  lsr x6, x6, x0
0xffff91441618   152  tbz w6, #0, #+0x8 (addr 0xffff91441620)
0xffff9144161c   156  tbnz w6, #1, #+0x3c (addr 0xffff91441658)
0xffff91441620   160  ldp x2, x0, [jssp], #16
0xffff91441624   164  ldr x16, pc+1596 (addr 0x0000ffff91441c60)    ;; external reference (store_buffer_top)
0xffff91441628   168  ldr x6, [x16]
0xffff9144162c   172  str x7, [x6], #8
0xffff91441630   176  str x6, [x16]
0xffff91441634   180  tst x6, #0x1ffff
0xffff91441638   184  b.eq #+0x8 (addr 0xffff91441640)
0xffff9144163c   188  ret
0xffff91441640   192  sub csp, jssp, #0x8 (8)
0xffff91441644   196  str lr, [jssp, #-8]!
0xffff91441648   200  ldr x17, pc+1568 (addr 0x0000ffff91441c68)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff9144164c   204  blr x17
0xffff91441650   208  ldr lr, [jssp], #8
0xffff91441654   212  ret
0xffff91441658   216  ldr x6, [x7]
0xffff9144165c   220  sub csp, jssp, #0x10 (16)
0xffff91441660   224  stp x1, x7, [jssp, #-16]!
0xffff91441664   228  ubfx x16, x6, #8, #12
0xffff91441668   232  and x0, x6, #0xfffffffffff00000
0xffff9144166c   236  add x0, x0, x16, lsl #2
0xffff91441670   240  ubfx x1, x6, #3, #5
0xffff91441674   244  ldr x7, [x0, #360]
0xffff91441678   248  lsr x7, x7, x1
0xffff9144167c   252  tbz w7, #0, #+0x40 (addr 0xffff914416bc)
0xffff91441680   256  ldp x1, x7, [jssp], #16
0xffff91441684   260  ldp x2, x0, [jssp], #16
0xffff91441688   264  ldr x16, pc+1512 (addr 0x0000ffff91441c70)    ;; external reference (store_buffer_top)
0xffff9144168c   268  ldr x6, [x16]
0xffff91441690   272  str x7, [x6], #8
0xffff91441694   276  str x6, [x16]
0xffff91441698   280  tst x6, #0x1ffff
0xffff9144169c   284  b.eq #+0x8 (addr 0xffff914416a4)
0xffff914416a0   288  ret
0xffff914416a4   292  sub csp, jssp, #0x8 (8)
0xffff914416a8   296  str lr, [jssp, #-8]!
0xffff914416ac   300  ldr x17, pc+1484 (addr 0x0000ffff91441c78)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914416b0   304  blr x17
0xffff914416b4   308  ldr lr, [jssp], #8
0xffff914416b8   312  ret
0xffff914416bc   316  ldp x1, x7, [jssp], #16
0xffff914416c0   320  sub csp, jssp, #0x78 (120)
0xffff914416c4   324  stp x14, x15, [jssp, #-32]!
0xffff914416c8   328  stp x18, lr, [jssp, #16]
0xffff914416cc   332  stp x10, x11, [jssp, #-32]!
0xffff914416d0   336  stp x12, x13, [jssp, #16]
0xffff914416d4   340  stp x5, x7, [jssp, #-32]!
0xffff914416d8   344  stp x8, x9, [jssp, #16]
0xffff914416dc   348  stp x1, x3, [jssp, #-24]!
0xffff914416e0   352  str x4, [jssp, #16]
0xffff914416e4   356  sub csp, jssp, #0xb0 (176)
0xffff914416e8   360  stp d26, d27, [jssp, #-32]!
0xffff914416ec   364  stp d28, d29, [jssp, #16]
0xffff914416f0   368  stp d22, d23, [jssp, #-32]!
0xffff914416f4   372  stp d24, d25, [jssp, #16]
0xffff914416f8   376  stp d18, d19, [jssp, #-32]!
0xffff914416fc   380  stp d20, d21, [jssp, #16]
0xffff91441700   384  stp d6, d7, [jssp, #-32]!
0xffff91441704   388  stp d16, d17, [jssp, #16]
0xffff91441708   392  stp d2, d3, [jssp, #-32]!
0xffff9144170c   396  stp d4, d5, [jssp, #16]
0xffff91441710   400  stp d0, d1, [jssp, #-16]!
0xffff91441714   404  mov x0, x1
0xffff91441718   408  mov x1, x7
0xffff9144171c   412  ldr x2, pc+1380 (addr 0x0000ffff91441c80)    ;; external reference (isolate)
0xffff91441720   416  ldr x16, pc+1384 (addr 0x0000ffff91441c88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91441724   420  and csp, jssp, #0xfffffffffffffff0
0xffff91441728   424  blr x16
0xffff9144172c   428  ldp d2, d3, [jssp, #16]
0xffff91441730   432  ldp d0, d1, [jssp], #32
0xffff91441734   436  ldp d6, d7, [jssp, #16]
0xffff91441738   440  ldp d4, d5, [jssp], #32
0xffff9144173c   444  ldp d18, d19, [jssp, #16]
0xffff91441740   448  ldp d16, d17, [jssp], #32
0xffff91441744   452  ldp d22, d23, [jssp, #16]
0xffff91441748   456  ldp d20, d21, [jssp], #32
0xffff9144174c   460  ldp d26, d27, [jssp, #16]
0xffff91441750   464  ldp d24, d25, [jssp], #32
0xffff91441754   468  ldp d28, d29, [jssp], #16
0xffff91441758   472  ldp x4, x5, [jssp, #16]
0xffff9144175c   476  ldp x1, x3, [jssp], #32
0xffff91441760   480  ldp x9, x10, [jssp, #16]
0xffff91441764   484  ldp x7, x8, [jssp], #32
0xffff91441768   488  ldp x13, x14, [jssp, #16]
0xffff9144176c   492  ldp x11, x12, [jssp], #32
0xffff91441770   496  ldr lr, [jssp, #16]
0xffff91441774   500  ldp x15, x18, [jssp], #24
0xffff91441778   504  ldp x2, x0, [jssp], #16
0xffff9144177c   508  ldr x16, pc+1300 (addr 0x0000ffff91441c90)    ;; external reference (store_buffer_top)
0xffff91441780   512  ldr x6, [x16]
0xffff91441784   516  str x7, [x6], #8
0xffff91441788   520  str x6, [x16]
0xffff9144178c   524  tst x6, #0x1ffff
0xffff91441790   528  b.eq #+0x8 (addr 0xffff91441798)
0xffff91441794   532  ret
0xffff91441798   536  sub csp, jssp, #0x8 (8)
0xffff9144179c   540  str lr, [jssp, #-8]!
0xffff914417a0   544  ldr x17, pc+1272 (addr 0x0000ffff91441c98)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914417a4   548  blr x17
0xffff914417a8   552  ldr lr, [jssp], #8
0xffff914417ac   556  ret
0xffff914417b0   560  and x6, x1, #0xfffffffffff00000
0xffff914417b4   564  ldr x0, [x6, #104]
0xffff914417b8   568  subs x0, x0, #0x1 (1)
0xffff914417bc   572  str x0, [x6, #104]
0xffff914417c0   576  b.mi #+0x64 (addr 0xffff91441824)
0xffff914417c4   580  ubfx x16, x1, #8, #12
0xffff914417c8   584  and x6, x1, #0xfffffffffff00000
0xffff914417cc   588  add x6, x6, x16, lsl #2
0xffff914417d0   592  ubfx x0, x1, #3, #5
0xffff914417d4   596  ldr x6, [x6, #360]
0xffff914417d8   600  lsr x6, x6, x0
0xffff914417dc   604  tbz w6, #0, #+0x8 (addr 0xffff914417e4)
0xffff914417e0   608  tbnz w6, #1, #+0xc (addr 0xffff914417ec)
0xffff914417e4   612  ldp x2, x0, [jssp], #16
0xffff914417e8   616  ret
0xffff914417ec   620  ldr x6, [x7]
0xffff914417f0   624  sub csp, jssp, #0x10 (16)
0xffff914417f4   628  stp x1, x7, [jssp, #-16]!
0xffff914417f8   632  ubfx x16, x6, #8, #12
0xffff914417fc   636  and x0, x6, #0xfffffffffff00000
0xffff91441800   640  add x0, x0, x16, lsl #2
0xffff91441804   644  ubfx x1, x6, #3, #5
0xffff91441808   648  ldr x7, [x0, #360]
0xffff9144180c   652  lsr x7, x7, x1
0xffff91441810   656  tbz w7, #0, #+0x10 (addr 0xffff91441820)
0xffff91441814   660  ldp x1, x7, [jssp], #16
0xffff91441818   664  ldp x2, x0, [jssp], #16
0xffff9144181c   668  ret
0xffff91441820   672  ldp x1, x7, [jssp], #16
0xffff91441824   676  sub csp, jssp, #0x78 (120)
0xffff91441828   680  stp x14, x15, [jssp, #-32]!
0xffff9144182c   684  stp x18, lr, [jssp, #16]
0xffff91441830   688  stp x10, x11, [jssp, #-32]!
0xffff91441834   692  stp x12, x13, [jssp, #16]
0xffff91441838   696  stp x5, x7, [jssp, #-32]!
0xffff9144183c   700  stp x8, x9, [jssp, #16]
0xffff91441840   704  stp x1, x3, [jssp, #-24]!
0xffff91441844   708  str x4, [jssp, #16]
0xffff91441848   712  sub csp, jssp, #0xb0 (176)
0xffff9144184c   716  stp d26, d27, [jssp, #-32]!
0xffff91441850   720  stp d28, d29, [jssp, #16]
0xffff91441854   724  stp d22, d23, [jssp, #-32]!
0xffff91441858   728  stp d24, d25, [jssp, #16]
0xffff9144185c   732  stp d18, d19, [jssp, #-32]!
0xffff91441860   736  stp d20, d21, [jssp, #16]
0xffff91441864   740  stp d6, d7, [jssp, #-32]!
0xffff91441868   744  stp d16, d17, [jssp, #16]
0xffff9144186c   748  stp d2, d3, [jssp, #-32]!
0xffff91441870   752  stp d4, d5, [jssp, #16]
0xffff91441874   756  stp d0, d1, [jssp, #-16]!
0xffff91441878   760  mov x0, x1
0xffff9144187c   764  mov x1, x7
0xffff91441880   768  ldr x2, pc+1056 (addr 0x0000ffff91441ca0)    ;; external reference (isolate)
0xffff91441884   772  ldr x16, pc+1060 (addr 0x0000ffff91441ca8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91441888   776  and csp, jssp, #0xfffffffffffffff0
0xffff9144188c   780  blr x16
0xffff91441890   784  ldp d2, d3, [jssp, #16]
0xffff91441894   788  ldp d0, d1, [jssp], #32
0xffff91441898   792  ldp d6, d7, [jssp, #16]
0xffff9144189c   796  ldp d4, d5, [jssp], #32
0xffff914418a0   800  ldp d18, d19, [jssp, #16]
0xffff914418a4   804  ldp d16, d17, [jssp], #32
0xffff914418a8   808  ldp d22, d23, [jssp, #16]
0xffff914418ac   812  ldp d20, d21, [jssp], #32
0xffff914418b0   816  ldp d26, d27, [jssp, #16]
0xffff914418b4   820  ldp d24, d25, [jssp], #32
0xffff914418b8   824  ldp d28, d29, [jssp], #16
0xffff914418bc   828  ldp x4, x5, [jssp, #16]
0xffff914418c0   832  ldp x1, x3, [jssp], #32
0xffff914418c4   836  ldp x9, x10, [jssp, #16]
0xffff914418c8   840  ldp x7, x8, [jssp], #32
0xffff914418cc   844  ldp x13, x14, [jssp, #16]
0xffff914418d0   848  ldp x11, x12, [jssp], #32
0xffff914418d4   852  ldr lr, [jssp, #16]
0xffff914418d8   856  ldp x15, x18, [jssp], #24
0xffff914418dc   860  ldp x2, x0, [jssp], #16
0xffff914418e0   864  ret
0xffff914418e4   868  sub csp, jssp, #0x10 (16)
0xffff914418e8   872  stp x2, x0, [jssp, #-16]!
0xffff914418ec   876  ldr x6, [x7]
0xffff914418f0   880  and x16, x6, #0xfffffffffff00000
0xffff914418f4   884  ldr x16, [x16, #8]
0xffff914418f8   888  tst x16, #0x18
0xffff914418fc   892  b.eq #+0x1f8 (addr 0xffff91441af4)
0xffff91441900   896  and x16, x1, #0xfffffffffff00000
0xffff91441904   900  ldr x16, [x16, #8]
0xffff91441908   904  tst x16, #0x18
0xffff9144190c   908  b.ne #+0x1e8 (addr 0xffff91441af4)
0xffff91441910   912  and x6, x1, #0xfffffffffff00000
0xffff91441914   916  ldr x0, [x6, #104]
0xffff91441918   920  subs x0, x0, #0x1 (1)
0xffff9144191c   924  str x0, [x6, #104]
0xffff91441920   928  b.mi #+0xe4 (addr 0xffff91441a04)
0xffff91441924   932  ubfx x16, x1, #8, #12
0xffff91441928   936  and x6, x1, #0xfffffffffff00000
0xffff9144192c   940  add x6, x6, x16, lsl #2
0xffff91441930   944  ubfx x0, x1, #3, #5
0xffff91441934   948  ldr x6, [x6, #360]
0xffff91441938   952  lsr x6, x6, x0
0xffff9144193c   956  tbz w6, #0, #+0x8 (addr 0xffff91441944)
0xffff91441940   960  tbnz w6, #1, #+0x3c (addr 0xffff9144197c)
0xffff91441944   964  ldp x2, x0, [jssp], #16
0xffff91441948   968  ldr x16, pc+872 (addr 0x0000ffff91441cb0)    ;; external reference (store_buffer_top)
0xffff9144194c   972  ldr x6, [x16]
0xffff91441950   976  str x7, [x6], #8
0xffff91441954   980  str x6, [x16]
0xffff91441958   984  tst x6, #0x1ffff
0xffff9144195c   988  b.eq #+0x8 (addr 0xffff91441964)
0xffff91441960   992  ret
0xffff91441964   996  sub csp, jssp, #0x8 (8)
0xffff91441968  1000  str lr, [jssp, #-8]!
0xffff9144196c  1004  ldr x17, pc+844 (addr 0x0000ffff91441cb8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91441970  1008  blr x17
0xffff91441974  1012  ldr lr, [jssp], #8
0xffff91441978  1016  ret
0xffff9144197c  1020  ldr x6, [x7]
0xffff91441980  1024  and x0, x6, #0xfffffffffff00000
0xffff91441984  1028  ldr x0, [x0, #8]
0xffff91441988  1032  tbz w0, #6, #+0x18 (addr 0xffff914419a0)
0xffff9144198c  1036  and x0, x1, #0xfffffffffff00000
0xffff91441990  1040  ldr x0, [x0, #8]
0xffff91441994  1044  movz x16, #0x58
0xffff91441998  1048  tst x0, x16
0xffff9144199c  1052  b.eq #+0x68 (addr 0xffff91441a04)
0xffff914419a0  1056  sub csp, jssp, #0x10 (16)
0xffff914419a4  1060  stp x1, x7, [jssp, #-16]!
0xffff914419a8  1064  ubfx x16, x6, #8, #12
0xffff914419ac  1068  and x0, x6, #0xfffffffffff00000
0xffff914419b0  1072  add x0, x0, x16, lsl #2
0xffff914419b4  1076  ubfx x1, x6, #3, #5
0xffff914419b8  1080  ldr x7, [x0, #360]
0xffff914419bc  1084  lsr x7, x7, x1
0xffff914419c0  1088  tbz w7, #0, #+0x40 (addr 0xffff91441a00)
0xffff914419c4  1092  ldp x1, x7, [jssp], #16
0xffff914419c8  1096  ldp x2, x0, [jssp], #16
0xffff914419cc  1100  ldr x16, pc+756 (addr 0x0000ffff91441cc0)    ;; external reference (store_buffer_top)
0xffff914419d0  1104  ldr x6, [x16]
0xffff914419d4  1108  str x7, [x6], #8
0xffff914419d8  1112  str x6, [x16]
0xffff914419dc  1116  tst x6, #0x1ffff
0xffff914419e0  1120  b.eq #+0x8 (addr 0xffff914419e8)
0xffff914419e4  1124  ret
0xffff914419e8  1128  sub csp, jssp, #0x8 (8)
0xffff914419ec  1132  str lr, [jssp, #-8]!
0xffff914419f0  1136  ldr x17, pc+728 (addr 0x0000ffff91441cc8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914419f4  1140  blr x17
0xffff914419f8  1144  ldr lr, [jssp], #8
0xffff914419fc  1148  ret
0xffff91441a00  1152  ldp x1, x7, [jssp], #16
0xffff91441a04  1156  sub csp, jssp, #0x78 (120)
0xffff91441a08  1160  stp x14, x15, [jssp, #-32]!
0xffff91441a0c  1164  stp x18, lr, [jssp, #16]
0xffff91441a10  1168  stp x10, x11, [jssp, #-32]!
0xffff91441a14  1172  stp x12, x13, [jssp, #16]
0xffff91441a18  1176  stp x5, x7, [jssp, #-32]!
0xffff91441a1c  1180  stp x8, x9, [jssp, #16]
0xffff91441a20  1184  stp x1, x3, [jssp, #-24]!
0xffff91441a24  1188  str x4, [jssp, #16]
0xffff91441a28  1192  sub csp, jssp, #0xb0 (176)
0xffff91441a2c  1196  stp d26, d27, [jssp, #-32]!
0xffff91441a30  1200  stp d28, d29, [jssp, #16]
0xffff91441a34  1204  stp d22, d23, [jssp, #-32]!
0xffff91441a38  1208  stp d24, d25, [jssp, #16]
0xffff91441a3c  1212  stp d18, d19, [jssp, #-32]!
0xffff91441a40  1216  stp d20, d21, [jssp, #16]
0xffff91441a44  1220  stp d6, d7, [jssp, #-32]!
0xffff91441a48  1224  stp d16, d17, [jssp, #16]
0xffff91441a4c  1228  stp d2, d3, [jssp, #-32]!
0xffff91441a50  1232  stp d4, d5, [jssp, #16]
0xffff91441a54  1236  stp d0, d1, [jssp, #-16]!
0xffff91441a58  1240  mov x0, x1
0xffff91441a5c  1244  mov x1, x7
0xffff91441a60  1248  ldr x2, pc+624 (addr 0x0000ffff91441cd0)    ;; external reference (isolate)
0xffff91441a64  1252  ldr x16, pc+628 (addr 0x0000ffff91441cd8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91441a68  1256  and csp, jssp, #0xfffffffffffffff0
0xffff91441a6c  1260  blr x16
0xffff91441a70  1264  ldp d2, d3, [jssp, #16]
0xffff91441a74  1268  ldp d0, d1, [jssp], #32
0xffff91441a78  1272  ldp d6, d7, [jssp, #16]
0xffff91441a7c  1276  ldp d4, d5, [jssp], #32
0xffff91441a80  1280  ldp d18, d19, [jssp, #16]
0xffff91441a84  1284  ldp d16, d17, [jssp], #32
0xffff91441a88  1288  ldp d22, d23, [jssp, #16]
0xffff91441a8c  1292  ldp d20, d21, [jssp], #32
0xffff91441a90  1296  ldp d26, d27, [jssp, #16]
0xffff91441a94  1300  ldp d24, d25, [jssp], #32
0xffff91441a98  1304  ldp d28, d29, [jssp], #16
0xffff91441a9c  1308  ldp x4, x5, [jssp, #16]
0xffff91441aa0  1312  ldp x1, x3, [jssp], #32
0xffff91441aa4  1316  ldp x9, x10, [jssp, #16]
0xffff91441aa8  1320  ldp x7, x8, [jssp], #32
0xffff91441aac  1324  ldp x13, x14, [jssp, #16]
0xffff91441ab0  1328  ldp x11, x12, [jssp], #32
0xffff91441ab4  1332  ldr lr, [jssp, #16]
0xffff91441ab8  1336  ldp x15, x18, [jssp], #24
0xffff91441abc  1340  ldp x2, x0, [jssp], #16
0xffff91441ac0  1344  ldr x16, pc+544 (addr 0x0000ffff91441ce0)    ;; external reference (store_buffer_top)
0xffff91441ac4  1348  ldr x6, [x16]
0xffff91441ac8  1352  str x7, [x6], #8
0xffff91441acc  1356  str x6, [x16]
0xffff91441ad0  1360  tst x6, #0x1ffff
0xffff91441ad4  1364  b.eq #+0x8 (addr 0xffff91441adc)
0xffff91441ad8  1368  ret
0xffff91441adc  1372  sub csp, jssp, #0x8 (8)
0xffff91441ae0  1376  str lr, [jssp, #-8]!
0xffff91441ae4  1380  ldr x17, pc+516 (addr 0x0000ffff91441ce8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91441ae8  1384  blr x17
0xffff91441aec  1388  ldr lr, [jssp], #8
0xffff91441af0  1392  ret
0xffff91441af4  1396  and x6, x1, #0xfffffffffff00000
0xffff91441af8  1400  ldr x0, [x6, #104]
0xffff91441afc  1404  subs x0, x0, #0x1 (1)
0xffff91441b00  1408  str x0, [x6, #104]
0xffff91441b04  1412  b.mi #+0x84 (addr 0xffff91441b88)
0xffff91441b08  1416  ubfx x16, x1, #8, #12
0xffff91441b0c  1420  and x6, x1, #0xfffffffffff00000
0xffff91441b10  1424  add x6, x6, x16, lsl #2
0xffff91441b14  1428  ubfx x0, x1, #3, #5
0xffff91441b18  1432  ldr x6, [x6, #360]
0xffff91441b1c  1436  lsr x6, x6, x0
0xffff91441b20  1440  tbz w6, #0, #+0x8 (addr 0xffff91441b28)
0xffff91441b24  1444  tbnz w6, #1, #+0xc (addr 0xffff91441b30)
0xffff91441b28  1448  ldp x2, x0, [jssp], #16
0xffff91441b2c  1452  ret
0xffff91441b30  1456  ldr x6, [x7]
0xffff91441b34  1460  and x0, x6, #0xfffffffffff00000
0xffff91441b38  1464  ldr x0, [x0, #8]
0xffff91441b3c  1468  tbz w0, #6, #+0x18 (addr 0xffff91441b54)
0xffff91441b40  1472  and x0, x1, #0xfffffffffff00000
0xffff91441b44  1476  ldr x0, [x0, #8]
0xffff91441b48  1480  movz x16, #0x58
0xffff91441b4c  1484  tst x0, x16
0xffff91441b50  1488  b.eq #+0x38 (addr 0xffff91441b88)
0xffff91441b54  1492  sub csp, jssp, #0x10 (16)
0xffff91441b58  1496  stp x1, x7, [jssp, #-16]!
0xffff91441b5c  1500  ubfx x16, x6, #8, #12
0xffff91441b60  1504  and x0, x6, #0xfffffffffff00000
0xffff91441b64  1508  add x0, x0, x16, lsl #2
0xffff91441b68  1512  ubfx x1, x6, #3, #5
0xffff91441b6c  1516  ldr x7, [x0, #360]
0xffff91441b70  1520  lsr x7, x7, x1
0xffff91441b74  1524  tbz w7, #0, #+0x10 (addr 0xffff91441b84)
0xffff91441b78  1528  ldp x1, x7, [jssp], #16
0xffff91441b7c  1532  ldp x2, x0, [jssp], #16
0xffff91441b80  1536  ret
0xffff91441b84  1540  ldp x1, x7, [jssp], #16
0xffff91441b88  1544  sub csp, jssp, #0x78 (120)
0xffff91441b8c  1548  stp x14, x15, [jssp, #-32]!
0xffff91441b90  1552  stp x18, lr, [jssp, #16]
0xffff91441b94  1556  stp x10, x11, [jssp, #-32]!
0xffff91441b98  1560  stp x12, x13, [jssp, #16]
0xffff91441b9c  1564  stp x5, x7, [jssp, #-32]!
0xffff91441ba0  1568  stp x8, x9, [jssp, #16]
0xffff91441ba4  1572  stp x1, x3, [jssp, #-24]!
0xffff91441ba8  1576  str x4, [jssp, #16]
0xffff91441bac  1580  sub csp, jssp, #0xb0 (176)
0xffff91441bb0  1584  stp d26, d27, [jssp, #-32]!
0xffff91441bb4  1588  stp d28, d29, [jssp, #16]
0xffff91441bb8  1592  stp d22, d23, [jssp, #-32]!
0xffff91441bbc  1596  stp d24, d25, [jssp, #16]
0xffff91441bc0  1600  stp d18, d19, [jssp, #-32]!
0xffff91441bc4  1604  stp d20, d21, [jssp, #16]
0xffff91441bc8  1608  stp d6, d7, [jssp, #-32]!
0xffff91441bcc  1612  stp d16, d17, [jssp, #16]
0xffff91441bd0  1616  stp d2, d3, [jssp, #-32]!
0xffff91441bd4  1620  stp d4, d5, [jssp, #16]
0xffff91441bd8  1624  stp d0, d1, [jssp, #-16]!
0xffff91441bdc  1628  mov x0, x1
0xffff91441be0  1632  mov x1, x7
0xffff91441be4  1636  ldr x2, pc+268 (addr 0x0000ffff91441cf0)    ;; external reference (isolate)
0xffff91441be8  1640  ldr x16, pc+272 (addr 0x0000ffff91441cf8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91441bec  1644  and csp, jssp, #0xfffffffffffffff0
0xffff91441bf0  1648  blr x16
0xffff91441bf4  1652  ldp d2, d3, [jssp, #16]
0xffff91441bf8  1656  ldp d0, d1, [jssp], #32
0xffff91441bfc  1660  ldp d6, d7, [jssp, #16]
0xffff91441c00  1664  ldp d4, d5, [jssp], #32
0xffff91441c04  1668  ldp d18, d19, [jssp, #16]
0xffff91441c08  1672  ldp d16, d17, [jssp], #32
0xffff91441c0c  1676  ldp d22, d23, [jssp, #16]
0xffff91441c10  1680  ldp d20, d21, [jssp], #32
0xffff91441c14  1684  ldp d26, d27, [jssp, #16]
0xffff91441c18  1688  ldp d24, d25, [jssp], #32
0xffff91441c1c  1692  ldp d28, d29, [jssp], #16
0xffff91441c20  1696  ldp x4, x5, [jssp, #16]
0xffff91441c24  1700  ldp x1, x3, [jssp], #32
0xffff91441c28  1704  ldp x9, x10, [jssp, #16]
0xffff91441c2c  1708  ldp x7, x8, [jssp], #32
0xffff91441c30  1712  ldp x13, x14, [jssp, #16]
0xffff91441c34  1716  ldp x11, x12, [jssp], #32
0xffff91441c38  1720  ldr lr, [jssp, #16]
0xffff91441c3c  1724  ldp x15, x18, [jssp], #24
0xffff91441c40  1728  ldp x2, x0, [jssp], #16
0xffff91441c44  1732  ret
0xffff91441c48  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff91441c4c  1740  d63f03e0       constant
0xffff91441c50  1744  4117f8c0       constant
0xffff91441c54  1748  00000000       constant
0xffff91441c58  1752  914065a0       constant
0xffff91441c5c  1756  0000ffff       constant
0xffff91441c60  1760  4117f8c0       constant
0xffff91441c64  1764  00000000       constant
0xffff91441c68  1768  914065a0       constant
0xffff91441c6c  1772  0000ffff       constant
0xffff91441c70  1776  4117f8c0       constant
0xffff91441c74  1780  00000000       constant
0xffff91441c78  1784  914065a0       constant
0xffff91441c7c  1788  0000ffff       constant
0xffff91441c80  1792  4117e2d0       constant
0xffff91441c84  1796  00000000       constant
0xffff91441c88  1800  00c2d958       constant
0xffff91441c8c  1804  00000000       constant
0xffff91441c90  1808  4117f8c0       constant
0xffff91441c94  1812  00000000       constant
0xffff91441c98  1816  914065a0       constant
0xffff91441c9c  1820  0000ffff       constant
0xffff91441ca0  1824  4117e2d0       constant
0xffff91441ca4  1828  00000000       constant
0xffff91441ca8  1832  00c2d958       constant
0xffff91441cac  1836  00000000       constant
0xffff91441cb0  1840  4117f8c0       constant
0xffff91441cb4  1844  00000000       constant
0xffff91441cb8  1848  914065a0       constant
0xffff91441cbc  1852  0000ffff       constant
0xffff91441cc0  1856  4117f8c0       constant
0xffff91441cc4  1860  00000000       constant
0xffff91441cc8  1864  914065a0       constant
0xffff91441ccc  1868  0000ffff       constant
0xffff91441cd0  1872  4117e2d0       constant
0xffff91441cd4  1876  00000000       constant
0xffff91441cd8  1880  00c2d958       constant
0xffff91441cdc  1884  00000000       constant
0xffff91441ce0  1888  4117f8c0       constant
0xffff91441ce4  1892  00000000       constant
0xffff91441ce8  1896  914065a0       constant
0xffff91441cec  1900  0000ffff       constant
0xffff91441cf0  1904  4117e2d0       constant
0xffff91441cf4  1908  00000000       constant
0xffff91441cf8  1912  00c2d958       constant
0xffff91441cfc  1916  00000000       constant


RelocInfo (size = 65)
0xffff91441588  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914415ac  code target (STUB)  (0xffff914065a0)
0xffff91441624  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91441648  code target (STUB)  (0xffff914065a0)
0xffff91441688  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914416ac  code target (STUB)  (0xffff914065a0)
0xffff9144171c  external reference (isolate)  (0x4117e2d0)
0xffff91441720  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff9144177c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914417a0  code target (STUB)  (0xffff914065a0)
0xffff91441880  external reference (isolate)  (0x4117e2d0)
0xffff91441884  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91441948  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9144196c  code target (STUB)  (0xffff914065a0)
0xffff914419cc  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914419f0  code target (STUB)  (0xffff914065a0)
0xffff91441a60  external reference (isolate)  (0x4117e2d0)
0xffff91441a64  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91441ac0  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91441ae4  code target (STUB)  (0xffff914065a0)
0xffff91441be4  external reference (isolate)  (0x4117e2d0)
0xffff91441be8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91441c48  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff91441d60     0  adr xzr, #+0x40 (addr 0xffff91441da0)
0xffff91441d64     4  adr xzr, #+0x360 (addr 0xffff914420c4)
0xffff91441d68     8  ldr x16, pc+1736 (addr 0x0000ffff91442430)    ;; external reference (store_buffer_top)
0xffff91441d6c    12  ldr x5, [x16]
0xffff91441d70    16  str x9, [x5], #8
0xffff91441d74    20  str x5, [x16]
0xffff91441d78    24  tst x5, #0x1ffff
0xffff91441d7c    28  b.eq #+0x8 (addr 0xffff91441d84)
0xffff91441d80    32  ret
0xffff91441d84    36  sub csp, jssp, #0x8 (8)
0xffff91441d88    40  str lr, [jssp, #-8]!
0xffff91441d8c    44  ldr x17, pc+1708 (addr 0x0000ffff91442438)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91441d90    48  blr x17
0xffff91441d94    52  ldr lr, [jssp], #8
0xffff91441d98    56  ret
0xffff91441d9c    60  ret
0xffff91441da0    64  sub csp, jssp, #0x10 (16)
0xffff91441da4    68  stp x1, x0, [jssp, #-16]!
0xffff91441da8    72  ldr x5, [x9]
0xffff91441dac    76  and x16, x5, #0xfffffffffff00000
0xffff91441db0    80  ldr x16, [x16, #8]
0xffff91441db4    84  tst x16, #0x18
0xffff91441db8    88  b.eq #+0x1d8 (addr 0xffff91441f90)
0xffff91441dbc    92  and x16, x8, #0xfffffffffff00000
0xffff91441dc0    96  ldr x16, [x16, #8]
0xffff91441dc4   100  tst x16, #0x18
0xffff91441dc8   104  b.ne #+0x1c8 (addr 0xffff91441f90)
0xffff91441dcc   108  and x5, x8, #0xfffffffffff00000
0xffff91441dd0   112  ldr x0, [x5, #104]
0xffff91441dd4   116  subs x0, x0, #0x1 (1)
0xffff91441dd8   120  str x0, [x5, #104]
0xffff91441ddc   124  b.mi #+0xc4 (addr 0xffff91441ea0)
0xffff91441de0   128  ubfx x16, x8, #8, #12
0xffff91441de4   132  and x5, x8, #0xfffffffffff00000
0xffff91441de8   136  add x5, x5, x16, lsl #2
0xffff91441dec   140  ubfx x0, x8, #3, #5
0xffff91441df0   144  ldr x5, [x5, #360]
0xffff91441df4   148  lsr x5, x5, x0
0xffff91441df8   152  tbz w5, #0, #+0x8 (addr 0xffff91441e00)
0xffff91441dfc   156  tbnz w5, #1, #+0x3c (addr 0xffff91441e38)
0xffff91441e00   160  ldp x1, x0, [jssp], #16
0xffff91441e04   164  ldr x16, pc+1596 (addr 0x0000ffff91442440)    ;; external reference (store_buffer_top)
0xffff91441e08   168  ldr x5, [x16]
0xffff91441e0c   172  str x9, [x5], #8
0xffff91441e10   176  str x5, [x16]
0xffff91441e14   180  tst x5, #0x1ffff
0xffff91441e18   184  b.eq #+0x8 (addr 0xffff91441e20)
0xffff91441e1c   188  ret
0xffff91441e20   192  sub csp, jssp, #0x8 (8)
0xffff91441e24   196  str lr, [jssp, #-8]!
0xffff91441e28   200  ldr x17, pc+1568 (addr 0x0000ffff91442448)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91441e2c   204  blr x17
0xffff91441e30   208  ldr lr, [jssp], #8
0xffff91441e34   212  ret
0xffff91441e38   216  ldr x5, [x9]
0xffff91441e3c   220  sub csp, jssp, #0x10 (16)
0xffff91441e40   224  stp x8, x9, [jssp, #-16]!
0xffff91441e44   228  ubfx x16, x5, #8, #12
0xffff91441e48   232  and x0, x5, #0xfffffffffff00000
0xffff91441e4c   236  add x0, x0, x16, lsl #2
0xffff91441e50   240  ubfx x8, x5, #3, #5
0xffff91441e54   244  ldr x9, [x0, #360]
0xffff91441e58   248  lsr x9, x9, x8
0xffff91441e5c   252  tbz w9, #0, #+0x40 (addr 0xffff91441e9c)
0xffff91441e60   256  ldp x8, x9, [jssp], #16
0xffff91441e64   260  ldp x1, x0, [jssp], #16
0xffff91441e68   264  ldr x16, pc+1512 (addr 0x0000ffff91442450)    ;; external reference (store_buffer_top)
0xffff91441e6c   268  ldr x5, [x16]
0xffff91441e70   272  str x9, [x5], #8
0xffff91441e74   276  str x5, [x16]
0xffff91441e78   280  tst x5, #0x1ffff
0xffff91441e7c   284  b.eq #+0x8 (addr 0xffff91441e84)
0xffff91441e80   288  ret
0xffff91441e84   292  sub csp, jssp, #0x8 (8)
0xffff91441e88   296  str lr, [jssp, #-8]!
0xffff91441e8c   300  ldr x17, pc+1484 (addr 0x0000ffff91442458)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91441e90   304  blr x17
0xffff91441e94   308  ldr lr, [jssp], #8
0xffff91441e98   312  ret
0xffff91441e9c   316  ldp x8, x9, [jssp], #16
0xffff91441ea0   320  sub csp, jssp, #0x78 (120)
0xffff91441ea4   324  stp x14, x15, [jssp, #-32]!
0xffff91441ea8   328  stp x18, lr, [jssp, #16]
0xffff91441eac   332  stp x10, x11, [jssp, #-32]!
0xffff91441eb0   336  stp x12, x13, [jssp, #16]
0xffff91441eb4   340  stp x6, x7, [jssp, #-32]!
0xffff91441eb8   344  stp x8, x9, [jssp, #16]
0xffff91441ebc   348  stp x2, x3, [jssp, #-24]!
0xffff91441ec0   352  str x4, [jssp, #16]
0xffff91441ec4   356  sub csp, jssp, #0xb0 (176)
0xffff91441ec8   360  stp d26, d27, [jssp, #-32]!
0xffff91441ecc   364  stp d28, d29, [jssp, #16]
0xffff91441ed0   368  stp d22, d23, [jssp, #-32]!
0xffff91441ed4   372  stp d24, d25, [jssp, #16]
0xffff91441ed8   376  stp d18, d19, [jssp, #-32]!
0xffff91441edc   380  stp d20, d21, [jssp, #16]
0xffff91441ee0   384  stp d6, d7, [jssp, #-32]!
0xffff91441ee4   388  stp d16, d17, [jssp, #16]
0xffff91441ee8   392  stp d2, d3, [jssp, #-32]!
0xffff91441eec   396  stp d4, d5, [jssp, #16]
0xffff91441ef0   400  stp d0, d1, [jssp, #-16]!
0xffff91441ef4   404  mov x0, x8
0xffff91441ef8   408  mov x1, x9
0xffff91441efc   412  ldr x2, pc+1380 (addr 0x0000ffff91442460)    ;; external reference (isolate)
0xffff91441f00   416  ldr x16, pc+1384 (addr 0x0000ffff91442468)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91441f04   420  and csp, jssp, #0xfffffffffffffff0
0xffff91441f08   424  blr x16
0xffff91441f0c   428  ldp d2, d3, [jssp, #16]
0xffff91441f10   432  ldp d0, d1, [jssp], #32
0xffff91441f14   436  ldp d6, d7, [jssp, #16]
0xffff91441f18   440  ldp d4, d5, [jssp], #32
0xffff91441f1c   444  ldp d18, d19, [jssp, #16]
0xffff91441f20   448  ldp d16, d17, [jssp], #32
0xffff91441f24   452  ldp d22, d23, [jssp, #16]
0xffff91441f28   456  ldp d20, d21, [jssp], #32
0xffff91441f2c   460  ldp d26, d27, [jssp, #16]
0xffff91441f30   464  ldp d24, d25, [jssp], #32
0xffff91441f34   468  ldp d28, d29, [jssp], #16
0xffff91441f38   472  ldp x4, x6, [jssp, #16]
0xffff91441f3c   476  ldp x2, x3, [jssp], #32
0xffff91441f40   480  ldp x9, x10, [jssp, #16]
0xffff91441f44   484  ldp x7, x8, [jssp], #32
0xffff91441f48   488  ldp x13, x14, [jssp, #16]
0xffff91441f4c   492  ldp x11, x12, [jssp], #32
0xffff91441f50   496  ldr lr, [jssp, #16]
0xffff91441f54   500  ldp x15, x18, [jssp], #24
0xffff91441f58   504  ldp x1, x0, [jssp], #16
0xffff91441f5c   508  ldr x16, pc+1300 (addr 0x0000ffff91442470)    ;; external reference (store_buffer_top)
0xffff91441f60   512  ldr x5, [x16]
0xffff91441f64   516  str x9, [x5], #8
0xffff91441f68   520  str x5, [x16]
0xffff91441f6c   524  tst x5, #0x1ffff
0xffff91441f70   528  b.eq #+0x8 (addr 0xffff91441f78)
0xffff91441f74   532  ret
0xffff91441f78   536  sub csp, jssp, #0x8 (8)
0xffff91441f7c   540  str lr, [jssp, #-8]!
0xffff91441f80   544  ldr x17, pc+1272 (addr 0x0000ffff91442478)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91441f84   548  blr x17
0xffff91441f88   552  ldr lr, [jssp], #8
0xffff91441f8c   556  ret
0xffff91441f90   560  and x5, x8, #0xfffffffffff00000
0xffff91441f94   564  ldr x0, [x5, #104]
0xffff91441f98   568  subs x0, x0, #0x1 (1)
0xffff91441f9c   572  str x0, [x5, #104]
0xffff91441fa0   576  b.mi #+0x64 (addr 0xffff91442004)
0xffff91441fa4   580  ubfx x16, x8, #8, #12
0xffff91441fa8   584  and x5, x8, #0xfffffffffff00000
0xffff91441fac   588  add x5, x5, x16, lsl #2
0xffff91441fb0   592  ubfx x0, x8, #3, #5
0xffff91441fb4   596  ldr x5, [x5, #360]
0xffff91441fb8   600  lsr x5, x5, x0
0xffff91441fbc   604  tbz w5, #0, #+0x8 (addr 0xffff91441fc4)
0xffff91441fc0   608  tbnz w5, #1, #+0xc (addr 0xffff91441fcc)
0xffff91441fc4   612  ldp x1, x0, [jssp], #16
0xffff91441fc8   616  ret
0xffff91441fcc   620  ldr x5, [x9]
0xffff91441fd0   624  sub csp, jssp, #0x10 (16)
0xffff91441fd4   628  stp x8, x9, [jssp, #-16]!
0xffff91441fd8   632  ubfx x16, x5, #8, #12
0xffff91441fdc   636  and x0, x5, #0xfffffffffff00000
0xffff91441fe0   640  add x0, x0, x16, lsl #2
0xffff91441fe4   644  ubfx x8, x5, #3, #5
0xffff91441fe8   648  ldr x9, [x0, #360]
0xffff91441fec   652  lsr x9, x9, x8
0xffff91441ff0   656  tbz w9, #0, #+0x10 (addr 0xffff91442000)
0xffff91441ff4   660  ldp x8, x9, [jssp], #16
0xffff91441ff8   664  ldp x1, x0, [jssp], #16
0xffff91441ffc   668  ret
0xffff91442000   672  ldp x8, x9, [jssp], #16
0xffff91442004   676  sub csp, jssp, #0x78 (120)
0xffff91442008   680  stp x14, x15, [jssp, #-32]!
0xffff9144200c   684  stp x18, lr, [jssp, #16]
0xffff91442010   688  stp x10, x11, [jssp, #-32]!
0xffff91442014   692  stp x12, x13, [jssp, #16]
0xffff91442018   696  stp x6, x7, [jssp, #-32]!
0xffff9144201c   700  stp x8, x9, [jssp, #16]
0xffff91442020   704  stp x2, x3, [jssp, #-24]!
0xffff91442024   708  str x4, [jssp, #16]
0xffff91442028   712  sub csp, jssp, #0xb0 (176)
0xffff9144202c   716  stp d26, d27, [jssp, #-32]!
0xffff91442030   720  stp d28, d29, [jssp, #16]
0xffff91442034   724  stp d22, d23, [jssp, #-32]!
0xffff91442038   728  stp d24, d25, [jssp, #16]
0xffff9144203c   732  stp d18, d19, [jssp, #-32]!
0xffff91442040   736  stp d20, d21, [jssp, #16]
0xffff91442044   740  stp d6, d7, [jssp, #-32]!
0xffff91442048   744  stp d16, d17, [jssp, #16]
0xffff9144204c   748  stp d2, d3, [jssp, #-32]!
0xffff91442050   752  stp d4, d5, [jssp, #16]
0xffff91442054   756  stp d0, d1, [jssp, #-16]!
0xffff91442058   760  mov x0, x8
0xffff9144205c   764  mov x1, x9
0xffff91442060   768  ldr x2, pc+1056 (addr 0x0000ffff91442480)    ;; external reference (isolate)
0xffff91442064   772  ldr x16, pc+1060 (addr 0x0000ffff91442488)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91442068   776  and csp, jssp, #0xfffffffffffffff0
0xffff9144206c   780  blr x16
0xffff91442070   784  ldp d2, d3, [jssp, #16]
0xffff91442074   788  ldp d0, d1, [jssp], #32
0xffff91442078   792  ldp d6, d7, [jssp, #16]
0xffff9144207c   796  ldp d4, d5, [jssp], #32
0xffff91442080   800  ldp d18, d19, [jssp, #16]
0xffff91442084   804  ldp d16, d17, [jssp], #32
0xffff91442088   808  ldp d22, d23, [jssp, #16]
0xffff9144208c   812  ldp d20, d21, [jssp], #32
0xffff91442090   816  ldp d26, d27, [jssp, #16]
0xffff91442094   820  ldp d24, d25, [jssp], #32
0xffff91442098   824  ldp d28, d29, [jssp], #16
0xffff9144209c   828  ldp x4, x6, [jssp, #16]
0xffff914420a0   832  ldp x2, x3, [jssp], #32
0xffff914420a4   836  ldp x9, x10, [jssp, #16]
0xffff914420a8   840  ldp x7, x8, [jssp], #32
0xffff914420ac   844  ldp x13, x14, [jssp, #16]
0xffff914420b0   848  ldp x11, x12, [jssp], #32
0xffff914420b4   852  ldr lr, [jssp, #16]
0xffff914420b8   856  ldp x15, x18, [jssp], #24
0xffff914420bc   860  ldp x1, x0, [jssp], #16
0xffff914420c0   864  ret
0xffff914420c4   868  sub csp, jssp, #0x10 (16)
0xffff914420c8   872  stp x1, x0, [jssp, #-16]!
0xffff914420cc   876  ldr x5, [x9]
0xffff914420d0   880  and x16, x5, #0xfffffffffff00000
0xffff914420d4   884  ldr x16, [x16, #8]
0xffff914420d8   888  tst x16, #0x18
0xffff914420dc   892  b.eq #+0x1f8 (addr 0xffff914422d4)
0xffff914420e0   896  and x16, x8, #0xfffffffffff00000
0xffff914420e4   900  ldr x16, [x16, #8]
0xffff914420e8   904  tst x16, #0x18
0xffff914420ec   908  b.ne #+0x1e8 (addr 0xffff914422d4)
0xffff914420f0   912  and x5, x8, #0xfffffffffff00000
0xffff914420f4   916  ldr x0, [x5, #104]
0xffff914420f8   920  subs x0, x0, #0x1 (1)
0xffff914420fc   924  str x0, [x5, #104]
0xffff91442100   928  b.mi #+0xe4 (addr 0xffff914421e4)
0xffff91442104   932  ubfx x16, x8, #8, #12
0xffff91442108   936  and x5, x8, #0xfffffffffff00000
0xffff9144210c   940  add x5, x5, x16, lsl #2
0xffff91442110   944  ubfx x0, x8, #3, #5
0xffff91442114   948  ldr x5, [x5, #360]
0xffff91442118   952  lsr x5, x5, x0
0xffff9144211c   956  tbz w5, #0, #+0x8 (addr 0xffff91442124)
0xffff91442120   960  tbnz w5, #1, #+0x3c (addr 0xffff9144215c)
0xffff91442124   964  ldp x1, x0, [jssp], #16
0xffff91442128   968  ldr x16, pc+872 (addr 0x0000ffff91442490)    ;; external reference (store_buffer_top)
0xffff9144212c   972  ldr x5, [x16]
0xffff91442130   976  str x9, [x5], #8
0xffff91442134   980  str x5, [x16]
0xffff91442138   984  tst x5, #0x1ffff
0xffff9144213c   988  b.eq #+0x8 (addr 0xffff91442144)
0xffff91442140   992  ret
0xffff91442144   996  sub csp, jssp, #0x8 (8)
0xffff91442148  1000  str lr, [jssp, #-8]!
0xffff9144214c  1004  ldr x17, pc+844 (addr 0x0000ffff91442498)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91442150  1008  blr x17
0xffff91442154  1012  ldr lr, [jssp], #8
0xffff91442158  1016  ret
0xffff9144215c  1020  ldr x5, [x9]
0xffff91442160  1024  and x0, x5, #0xfffffffffff00000
0xffff91442164  1028  ldr x0, [x0, #8]
0xffff91442168  1032  tbz w0, #6, #+0x18 (addr 0xffff91442180)
0xffff9144216c  1036  and x0, x8, #0xfffffffffff00000
0xffff91442170  1040  ldr x0, [x0, #8]
0xffff91442174  1044  movz x16, #0x58
0xffff91442178  1048  tst x0, x16
0xffff9144217c  1052  b.eq #+0x68 (addr 0xffff914421e4)
0xffff91442180  1056  sub csp, jssp, #0x10 (16)
0xffff91442184  1060  stp x8, x9, [jssp, #-16]!
0xffff91442188  1064  ubfx x16, x5, #8, #12
0xffff9144218c  1068  and x0, x5, #0xfffffffffff00000
0xffff91442190  1072  add x0, x0, x16, lsl #2
0xffff91442194  1076  ubfx x8, x5, #3, #5
0xffff91442198  1080  ldr x9, [x0, #360]
0xffff9144219c  1084  lsr x9, x9, x8
0xffff914421a0  1088  tbz w9, #0, #+0x40 (addr 0xffff914421e0)
0xffff914421a4  1092  ldp x8, x9, [jssp], #16
0xffff914421a8  1096  ldp x1, x0, [jssp], #16
0xffff914421ac  1100  ldr x16, pc+756 (addr 0x0000ffff914424a0)    ;; external reference (store_buffer_top)
0xffff914421b0  1104  ldr x5, [x16]
0xffff914421b4  1108  str x9, [x5], #8
0xffff914421b8  1112  str x5, [x16]
0xffff914421bc  1116  tst x5, #0x1ffff
0xffff914421c0  1120  b.eq #+0x8 (addr 0xffff914421c8)
0xffff914421c4  1124  ret
0xffff914421c8  1128  sub csp, jssp, #0x8 (8)
0xffff914421cc  1132  str lr, [jssp, #-8]!
0xffff914421d0  1136  ldr x17, pc+728 (addr 0x0000ffff914424a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914421d4  1140  blr x17
0xffff914421d8  1144  ldr lr, [jssp], #8
0xffff914421dc  1148  ret
0xffff914421e0  1152  ldp x8, x9, [jssp], #16
0xffff914421e4  1156  sub csp, jssp, #0x78 (120)
0xffff914421e8  1160  stp x14, x15, [jssp, #-32]!
0xffff914421ec  1164  stp x18, lr, [jssp, #16]
0xffff914421f0  1168  stp x10, x11, [jssp, #-32]!
0xffff914421f4  1172  stp x12, x13, [jssp, #16]
0xffff914421f8  1176  stp x6, x7, [jssp, #-32]!
0xffff914421fc  1180  stp x8, x9, [jssp, #16]
0xffff91442200  1184  stp x2, x3, [jssp, #-24]!
0xffff91442204  1188  str x4, [jssp, #16]
0xffff91442208  1192  sub csp, jssp, #0xb0 (176)
0xffff9144220c  1196  stp d26, d27, [jssp, #-32]!
0xffff91442210  1200  stp d28, d29, [jssp, #16]
0xffff91442214  1204  stp d22, d23, [jssp, #-32]!
0xffff91442218  1208  stp d24, d25, [jssp, #16]
0xffff9144221c  1212  stp d18, d19, [jssp, #-32]!
0xffff91442220  1216  stp d20, d21, [jssp, #16]
0xffff91442224  1220  stp d6, d7, [jssp, #-32]!
0xffff91442228  1224  stp d16, d17, [jssp, #16]
0xffff9144222c  1228  stp d2, d3, [jssp, #-32]!
0xffff91442230  1232  stp d4, d5, [jssp, #16]
0xffff91442234  1236  stp d0, d1, [jssp, #-16]!
0xffff91442238  1240  mov x0, x8
0xffff9144223c  1244  mov x1, x9
0xffff91442240  1248  ldr x2, pc+624 (addr 0x0000ffff914424b0)    ;; external reference (isolate)
0xffff91442244  1252  ldr x16, pc+628 (addr 0x0000ffff914424b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91442248  1256  and csp, jssp, #0xfffffffffffffff0
0xffff9144224c  1260  blr x16
0xffff91442250  1264  ldp d2, d3, [jssp, #16]
0xffff91442254  1268  ldp d0, d1, [jssp], #32
0xffff91442258  1272  ldp d6, d7, [jssp, #16]
0xffff9144225c  1276  ldp d4, d5, [jssp], #32
0xffff91442260  1280  ldp d18, d19, [jssp, #16]
0xffff91442264  1284  ldp d16, d17, [jssp], #32
0xffff91442268  1288  ldp d22, d23, [jssp, #16]
0xffff9144226c  1292  ldp d20, d21, [jssp], #32
0xffff91442270  1296  ldp d26, d27, [jssp, #16]
0xffff91442274  1300  ldp d24, d25, [jssp], #32
0xffff91442278  1304  ldp d28, d29, [jssp], #16
0xffff9144227c  1308  ldp x4, x6, [jssp, #16]
0xffff91442280  1312  ldp x2, x3, [jssp], #32
0xffff91442284  1316  ldp x9, x10, [jssp, #16]
0xffff91442288  1320  ldp x7, x8, [jssp], #32
0xffff9144228c  1324  ldp x13, x14, [jssp, #16]
0xffff91442290  1328  ldp x11, x12, [jssp], #32
0xffff91442294  1332  ldr lr, [jssp, #16]
0xffff91442298  1336  ldp x15, x18, [jssp], #24
0xffff9144229c  1340  ldp x1, x0, [jssp], #16
0xffff914422a0  1344  ldr x16, pc+544 (addr 0x0000ffff914424c0)    ;; external reference (store_buffer_top)
0xffff914422a4  1348  ldr x5, [x16]
0xffff914422a8  1352  str x9, [x5], #8
0xffff914422ac  1356  str x5, [x16]
0xffff914422b0  1360  tst x5, #0x1ffff
0xffff914422b4  1364  b.eq #+0x8 (addr 0xffff914422bc)
0xffff914422b8  1368  ret
0xffff914422bc  1372  sub csp, jssp, #0x8 (8)
0xffff914422c0  1376  str lr, [jssp, #-8]!
0xffff914422c4  1380  ldr x17, pc+516 (addr 0x0000ffff914424c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff914422c8  1384  blr x17
0xffff914422cc  1388  ldr lr, [jssp], #8
0xffff914422d0  1392  ret
0xffff914422d4  1396  and x5, x8, #0xfffffffffff00000
0xffff914422d8  1400  ldr x0, [x5, #104]
0xffff914422dc  1404  subs x0, x0, #0x1 (1)
0xffff914422e0  1408  str x0, [x5, #104]
0xffff914422e4  1412  b.mi #+0x84 (addr 0xffff91442368)
0xffff914422e8  1416  ubfx x16, x8, #8, #12
0xffff914422ec  1420  and x5, x8, #0xfffffffffff00000
0xffff914422f0  1424  add x5, x5, x16, lsl #2
0xffff914422f4  1428  ubfx x0, x8, #3, #5
0xffff914422f8  1432  ldr x5, [x5, #360]
0xffff914422fc  1436  lsr x5, x5, x0
0xffff91442300  1440  tbz w5, #0, #+0x8 (addr 0xffff91442308)
0xffff91442304  1444  tbnz w5, #1, #+0xc (addr 0xffff91442310)
0xffff91442308  1448  ldp x1, x0, [jssp], #16
0xffff9144230c  1452  ret
0xffff91442310  1456  ldr x5, [x9]
0xffff91442314  1460  and x0, x5, #0xfffffffffff00000
0xffff91442318  1464  ldr x0, [x0, #8]
0xffff9144231c  1468  tbz w0, #6, #+0x18 (addr 0xffff91442334)
0xffff91442320  1472  and x0, x8, #0xfffffffffff00000
0xffff91442324  1476  ldr x0, [x0, #8]
0xffff91442328  1480  movz x16, #0x58
0xffff9144232c  1484  tst x0, x16
0xffff91442330  1488  b.eq #+0x38 (addr 0xffff91442368)
0xffff91442334  1492  sub csp, jssp, #0x10 (16)
0xffff91442338  1496  stp x8, x9, [jssp, #-16]!
0xffff9144233c  1500  ubfx x16, x5, #8, #12
0xffff91442340  1504  and x0, x5, #0xfffffffffff00000
0xffff91442344  1508  add x0, x0, x16, lsl #2
0xffff91442348  1512  ubfx x8, x5, #3, #5
0xffff9144234c  1516  ldr x9, [x0, #360]
0xffff91442350  1520  lsr x9, x9, x8
0xffff91442354  1524  tbz w9, #0, #+0x10 (addr 0xffff91442364)
0xffff91442358  1528  ldp x8, x9, [jssp], #16
0xffff9144235c  1532  ldp x1, x0, [jssp], #16
0xffff91442360  1536  ret
0xffff91442364  1540  ldp x8, x9, [jssp], #16
0xffff91442368  1544  sub csp, jssp, #0x78 (120)
0xffff9144236c  1548  stp x14, x15, [jssp, #-32]!
0xffff91442370  1552  stp x18, lr, [jssp, #16]
0xffff91442374  1556  stp x10, x11, [jssp, #-32]!
0xffff91442378  1560  stp x12, x13, [jssp, #16]
0xffff9144237c  1564  stp x6, x7, [jssp, #-32]!
0xffff91442380  1568  stp x8, x9, [jssp, #16]
0xffff91442384  1572  stp x2, x3, [jssp, #-24]!
0xffff91442388  1576  str x4, [jssp, #16]
0xffff9144238c  1580  sub csp, jssp, #0xb0 (176)
0xffff91442390  1584  stp d26, d27, [jssp, #-32]!
0xffff91442394  1588  stp d28, d29, [jssp, #16]
0xffff91442398  1592  stp d22, d23, [jssp, #-32]!
0xffff9144239c  1596  stp d24, d25, [jssp, #16]
0xffff914423a0  1600  stp d18, d19, [jssp, #-32]!
0xffff914423a4  1604  stp d20, d21, [jssp, #16]
0xffff914423a8  1608  stp d6, d7, [jssp, #-32]!
0xffff914423ac  1612  stp d16, d17, [jssp, #16]
0xffff914423b0  1616  stp d2, d3, [jssp, #-32]!
0xffff914423b4  1620  stp d4, d5, [jssp, #16]
0xffff914423b8  1624  stp d0, d1, [jssp, #-16]!
0xffff914423bc  1628  mov x0, x8
0xffff914423c0  1632  mov x1, x9
0xffff914423c4  1636  ldr x2, pc+268 (addr 0x0000ffff914424d0)    ;; external reference (isolate)
0xffff914423c8  1640  ldr x16, pc+272 (addr 0x0000ffff914424d8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914423cc  1644  and csp, jssp, #0xfffffffffffffff0
0xffff914423d0  1648  blr x16
0xffff914423d4  1652  ldp d2, d3, [jssp, #16]
0xffff914423d8  1656  ldp d0, d1, [jssp], #32
0xffff914423dc  1660  ldp d6, d7, [jssp, #16]
0xffff914423e0  1664  ldp d4, d5, [jssp], #32
0xffff914423e4  1668  ldp d18, d19, [jssp, #16]
0xffff914423e8  1672  ldp d16, d17, [jssp], #32
0xffff914423ec  1676  ldp d22, d23, [jssp, #16]
0xffff914423f0  1680  ldp d20, d21, [jssp], #32
0xffff914423f4  1684  ldp d26, d27, [jssp, #16]
0xffff914423f8  1688  ldp d24, d25, [jssp], #32
0xffff914423fc  1692  ldp d28, d29, [jssp], #16
0xffff91442400  1696  ldp x4, x6, [jssp, #16]
0xffff91442404  1700  ldp x2, x3, [jssp], #32
0xffff91442408  1704  ldp x9, x10, [jssp, #16]
0xffff9144240c  1708  ldp x7, x8, [jssp], #32
0xffff91442410  1712  ldp x13, x14, [jssp, #16]
0xffff91442414  1716  ldp x11, x12, [jssp], #32
0xffff91442418  1720  ldr lr, [jssp, #16]
0xffff9144241c  1724  ldp x15, x18, [jssp], #24
0xffff91442420  1728  ldp x1, x0, [jssp], #16
0xffff91442424  1732  ret
0xffff91442428  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff9144242c  1740  d63f03e0       constant
0xffff91442430  1744  4117f8c0       constant
0xffff91442434  1748  00000000       constant
0xffff91442438  1752  914065a0       constant
0xffff9144243c  1756  0000ffff       constant
0xffff91442440  1760  4117f8c0       constant
0xffff91442444  1764  00000000       constant
0xffff91442448  1768  914065a0       constant
0xffff9144244c  1772  0000ffff       constant
0xffff91442450  1776  4117f8c0       constant
0xffff91442454  1780  00000000       constant
0xffff91442458  1784  914065a0       constant
0xffff9144245c  1788  0000ffff       constant
0xffff91442460  1792  4117e2d0       constant
0xffff91442464  1796  00000000       constant
0xffff91442468  1800  00c2d958       constant
0xffff9144246c  1804  00000000       constant
0xffff91442470  1808  4117f8c0       constant
0xffff91442474  1812  00000000       constant
0xffff91442478  1816  914065a0       constant
0xffff9144247c  1820  0000ffff       constant
0xffff91442480  1824  4117e2d0       constant
0xffff91442484  1828  00000000       constant
0xffff91442488  1832  00c2d958       constant
0xffff9144248c  1836  00000000       constant
0xffff91442490  1840  4117f8c0       constant
0xffff91442494  1844  00000000       constant
0xffff91442498  1848  914065a0       constant
0xffff9144249c  1852  0000ffff       constant
0xffff914424a0  1856  4117f8c0       constant
0xffff914424a4  1860  00000000       constant
0xffff914424a8  1864  914065a0       constant
0xffff914424ac  1868  0000ffff       constant
0xffff914424b0  1872  4117e2d0       constant
0xffff914424b4  1876  00000000       constant
0xffff914424b8  1880  00c2d958       constant
0xffff914424bc  1884  00000000       constant
0xffff914424c0  1888  4117f8c0       constant
0xffff914424c4  1892  00000000       constant
0xffff914424c8  1896  914065a0       constant
0xffff914424cc  1900  0000ffff       constant
0xffff914424d0  1904  4117e2d0       constant
0xffff914424d4  1908  00000000       constant
0xffff914424d8  1912  00c2d958       constant
0xffff914424dc  1916  00000000       constant


RelocInfo (size = 65)
0xffff91441d68  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91441d8c  code target (STUB)  (0xffff914065a0)
0xffff91441e04  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91441e28  code target (STUB)  (0xffff914065a0)
0xffff91441e68  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91441e8c  code target (STUB)  (0xffff914065a0)
0xffff91441efc  external reference (isolate)  (0x4117e2d0)
0xffff91441f00  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91441f5c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91441f80  code target (STUB)  (0xffff914065a0)
0xffff91442060  external reference (isolate)  (0x4117e2d0)
0xffff91442064  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91442128  external reference (store_buffer_top)  (0x4117f8c0)
0xffff9144214c  code target (STUB)  (0xffff914065a0)
0xffff914421ac  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914421d0  code target (STUB)  (0xffff914065a0)
0xffff91442240  external reference (isolate)  (0x4117e2d0)
0xffff91442244  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff914422a0  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914422c4  code target (STUB)  (0xffff914065a0)
0xffff914423c4  external reference (isolate)  (0x4117e2d0)
0xffff914423c8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91442428  constant pool (size 184)


kind = STUB
major_key = FastArrayPushStub
name = FastArrayPushStub
compiler = crankshaft
Instructions (size = 2199)
0xffff91442540     0  movz x16, #0xa00000000
0xffff91442544     4  sub csp, jssp, #0x10 (16)
0xffff91442548     8  stp fp, lr, [jssp, #-16]!
0xffff9144254c    12  mov fp, jssp
0xffff91442550    16  sub csp, jssp, #0x8 (8)
0xffff91442554    20  sub jssp, jssp, #0x8 (8)
0xffff91442558    24  stur x16, [fp, #-8]
0xffff9144255c    28  mov x2, fp
0xffff91442560    32  add w1, w0, #0x2 (2)
0xffff91442564    36  ldr x1, [x2, w1, uxtw #3]
0xffff91442568    40  tbz w1, #0, #+0x758 (addr 0xffff91442cc0)
0xffff9144256c    44  ldur x3, [x1, #-1]
0xffff91442570    48  ldur x4, [x1, #-1]
0xffff91442574    52  ldrb w4, [x4, #11]
0xffff91442578    56  cmp x4, #0xbc (188)
0xffff9144257c    60  b.ne #+0x74c (addr 0xffff91442cc8)
0xffff91442580    64  ldrb w4, [x3, #13]
0xffff91442584    68  movz w16, #0x5
0xffff91442588    72  and w5, w4, w16
0xffff9144258c    76  cmp w5, #0x1 (1)
0xffff91442590    80  b.ne #+0x568 (addr 0xffff91442af8)
0xffff91442594    84  ldrb w5, [x3, #12]
0xffff91442598    88  and w5, w5, #0x20
0xffff9144259c    92  cmp w5, #0x20 (32)
0xffff914425a0    96  b.eq #+0x550 (addr 0xffff91442af0)
0xffff914425a4   100  ldur w5, [x3, #15]
0xffff914425a8   104  and w5, w5, #0x100000
0xffff914425ac   108  cmp w5, #0x100000 (1048576)
0xffff914425b0   112  b.eq #+0x538 (addr 0xffff91442ae8)
0xffff914425b4   116  ldur x5, [x3, #47]
0xffff914425b8   120  ldur w6, [x5, #43]
0xffff914425bc   124  and w5, w6, #0x4
0xffff914425c0   128  cmp w5, #0x4 (4)
0xffff914425c4   132  b.eq #+0x51c (addr 0xffff91442ae0)
0xffff914425c8   136  ldr x5, [x26, #56]
0xffff914425cc   140  ldr x6, [x26, #304]
0xffff914425d0   144  ldur x3, [x3, #23]
0xffff914425d4   148  cmp x3, x5
0xffff914425d8   152  b.eq #+0x40 (addr 0xffff91442618)
0xffff914425dc   156  ldur x7, [x3, #-1]
0xffff914425e0   160  ldrb w8, [x7, #11]
0xffff914425e4   164  cmp w8, #0xb4 (180)
0xffff914425e8   168  b.le #+0x20 (addr 0xffff91442608)
0xffff914425ec   172  cmp w8, #0xb6 (182)
0xffff914425f0   176  b.eq #+0x18 (addr 0xffff91442608)
0xffff914425f4   180  ldur x3, [x3, #15]
0xffff914425f8   184  cmp x3, x6
0xffff914425fc   188  b.ne #+0x14 (addr 0xffff91442610)
0xffff91442600   192  mov x3, x7
0xffff91442604   196  b #-0x34 (addr 0xffff914425d0)
0xffff91442608   200  ldr x16, pc+1488 (addr 0x0000ffff91442bd8)    ;; lazy deoptimization bailout 2
0xffff9144260c   204  blr x16
0xffff91442610   208  ldr x16, pc+1488 (addr 0x0000ffff91442be0)    ;; lazy deoptimization bailout 3
0xffff91442614   212  blr x16
0xffff91442618   216  and w3, w4, #0xf8
0xffff9144261c   220  lsr w3, w3, #3
0xffff91442620   224  cmp w3, #0x1 (1)
0xffff91442624   228  b.le #+0x330 (addr 0xffff91442954)
0xffff91442628   232  cmp w3, #0x3 (3)
0xffff9144262c   236  b.le #+0x1b8 (addr 0xffff914427e4)
0xffff91442630   240  cmp w3, #0x5 (5)
0xffff91442634   244  b.le #+0xc (addr 0xffff91442640)
0xffff91442638   248  ldr x16, pc+1456 (addr 0x0000ffff91442be8)    ;; lazy deoptimization bailout 4
0xffff9144263c   252  blr x16
0xffff91442640   256  movz x3, #0x0
0xffff91442644   260  cmp w0, w3
0xffff91442648   264  b.le #+0x34 (addr 0xffff9144267c)
0xffff9144264c   268  sub w4, w0, w3
0xffff91442650   272  add w4, w4, #0x1 (1)
0xffff91442654   276  ldr x4, [x2, w4, uxtw #3]
0xffff91442658   280  tbz w4, #0, #+0x14 (addr 0xffff9144266c)
0xffff9144265c   284  ldur x4, [x4, #-1]
0xffff91442660   288  ldr x16, pc+1480 (addr 0x0000ffff91442c28)    ;; object: 0x36404411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91442664   292  cmp x4, x16
0xffff91442668   296  b.ne #+0xc (addr 0xffff91442674)
0xffff9144266c   300  add w3, w3, #0x1 (1)
0xffff91442670   304  b #-0x2c (addr 0xffff91442644)
0xffff91442674   308  ldr x16, pc+1404 (addr 0x0000ffff91442bf0)    ;; lazy deoptimization bailout 5
0xffff91442678   312  blr x16
0xffff9144267c   316  ldur w3, [x1, #27]
0xffff91442680   320  adds w4, w3, w0
0xffff91442684   324  b.vs #+0x64c (addr 0xffff91442cd0)
0xffff91442688   328  subs w5, w4, #0x1 (1)
0xffff9144268c   332  b.vs #+0x64c (addr 0xffff91442cd8)
0xffff91442690   336  ldur x6, [x1, #15]
0xffff91442694   340  cmp w3, w5
0xffff91442698   344  b.le #+0x10 (addr 0xffff914426a8)
0xffff9144269c   348  cmp w5, w3
0xffff914426a0   352  b.hs #+0x640 (addr 0xffff91442ce0)
0xffff914426a4   356  b #+0xe4 (addr 0xffff91442788)
0xffff914426a8   360  ldur w7, [x6, #11]
0xffff914426ac   364  cmp w7, w5
0xffff914426b0   368  b.gt #+0xcc (addr 0xffff9144277c)
0xffff914426b4   372  adds w7, w7, #0x400 (1024)
0xffff914426b8   376  b.vs #+0x630 (addr 0xffff91442ce8)
0xffff914426bc   380  cmp w5, w7
0xffff914426c0   384  b.hs #+0x630 (addr 0xffff91442cf0)
0xffff914426c4   388  add w7, w5, w5, lsr #1
0xffff914426c8   392  add w7, w7, #0x10 (16)
0xffff914426cc   396  movz w16, #0x95ff
0xffff914426d0   400  cmp w7, w16, lsl #1
0xffff914426d4   404  b.hs #+0x624 (addr 0xffff91442cf8)
0xffff914426d8   408  lsl x8, x7, #32
0xffff914426dc   412  lsl w9, w7, #3
0xffff914426e0   416  add w7, w9, #0x10 (16)
0xffff914426e4   420  sxtw x7, w7
0xffff914426e8   424  movz x9, #0xf2c0
0xffff914426ec   428  movk x9, #0x4117, lsl #16
0xffff914426f0   432  ldp x11, x16, [x9]
0xffff914426f4   436  adds x10, x11, x7
0xffff914426f8   440  ccmp x10, x16, #nzCv, lo
0xffff914426fc   444  b.hi #+0x404 (addr 0xffff91442b00)
0xffff91442700   448  str x10, [x9]
0xffff91442704   452  orr x11, x11, #0x1
0xffff91442708   456  ldr x7, pc+1320 (addr 0x0000ffff91442c30)    ;; object: 0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9144270c   460  stur x7, [x11, #-1]
0xffff91442710   464  stur x8, [x11, #7]
0xffff91442714   468  ldr d0, pc+1292 (addr 0x0000ffff91442c20)
0xffff91442718   472  ldur w7, [x11, #11]
0xffff9144271c   476  cmp w3, w7
0xffff91442720   480  b.ge #+0x14 (addr 0xffff91442734)
0xffff91442724   484  sub w7, w7, #0x1 (1)
0xffff91442728   488  add x8, x11, #0xf (15)
0xffff9144272c   492  str d0, [x8, w7, sxtw #3]
0xffff91442730   496  b #-0x14 (addr 0xffff9144271c)
0xffff91442734   500  mov x7, x3
0xffff91442738   504  cmp w7, #0x0 (0)
0xffff9144273c   508  b.le #+0x1c (addr 0xffff91442758)
0xffff91442740   512  sub w7, w7, #0x1 (1)
0xffff91442744   516  add x8, x6, #0xf (15)
0xffff91442748   520  ldr d0, [x8, w7, sxtw #3]
0xffff9144274c   524  add x8, x11, #0xf (15)
0xffff91442750   528  str d0, [x8, w7, sxtw #3]
0xffff91442754   532  b #-0x1c (addr 0xffff91442738)
0xffff91442758   536  mov x6, x11
0xffff9144275c   540  stur x6, [x1, #15]
0xffff91442760   544  add x7, x1, #0xf (15)
0xffff91442764   548  and x6, x1, #0xfffffffffff00000
0xffff91442768   552  ldr x6, [x6, #8]
0xffff9144276c   556  tbz w6, #2, #+0xc (addr 0xffff91442778)
0xffff91442770   560  ldr x16, pc+1224 (addr 0x0000ffff91442c38)    ;; code: STUB, RecordWriteStub, minor: 72897
0xffff91442774   564  blr x16
0xffff91442778   568  mov x6, x11
0xffff9144277c   572  add w5, w5, #0x1 (1)
0xffff91442780   576  lsl x5, x5, #32
0xffff91442784   580  stur x5, [x1, #23]
0xffff91442788   584  movz x1, #0x0
0xffff9144278c   588  cmp w0, w1
0xffff91442790   592  b.le #+0x4c (addr 0xffff914427dc)
0xffff91442794   596  sub w5, w0, w1
0xffff91442798   600  add w5, w5, #0x1 (1)
0xffff9144279c   604  ldr x5, [x2, w5, uxtw #3]
0xffff914427a0   608  adds w7, w1, w3
0xffff914427a4   612  b.vs #+0x55c (addr 0xffff91442d00)
0xffff914427a8   616  tbz w5, #0, #+0x1c (addr 0xffff914427c4)
0xffff914427ac   620  ldur x16, [x5, #-1]
0xffff914427b0   624  ldr x17, [x26, #120]
0xffff914427b4   628  cmp x16, x17
0xffff914427b8   632  b.ne #+0x550 (addr 0xffff91442d08)
0xffff914427bc   636  ldur d0, [x5, #7]
0xffff914427c0   640  b #+0x8 (addr 0xffff914427c8)
0xffff914427c4   644  scvtf d0, x5, #32
0xffff914427c8   648  add x5, x6, #0xf (15)
0xffff914427cc   652  fsub d29, d0, d15
0xffff914427d0   656  str d29, [x5, w7, sxtw #3]
0xffff914427d4   660  add w1, w1, #0x1 (1)
0xffff914427d8   664  b #-0x4c (addr 0xffff9144278c)
0xffff914427dc   668  lsl x1, x4, #32
0xffff914427e0   672  b #+0x2e4 (addr 0xffff91442ac4)
0xffff914427e4   676  ldur w3, [x1, #27]
0xffff914427e8   680  adds w4, w3, w0
0xffff914427ec   684  b.vs #+0x524 (addr 0xffff91442d10)
0xffff914427f0   688  subs w5, w4, #0x1 (1)
0xffff914427f4   692  b.vs #+0x524 (addr 0xffff91442d18)
0xffff914427f8   696  ldur x6, [x1, #15]
0xffff914427fc   700  cmp w3, w5
0xffff91442800   704  b.le #+0x10 (addr 0xffff91442810)
0xffff91442804   708  cmp w5, w3
0xffff91442808   712  b.hs #+0x518 (addr 0xffff91442d20)
0xffff9144280c   716  b #+0xe4 (addr 0xffff914428f0)
0xffff91442810   720  ldur w7, [x6, #11]
0xffff91442814   724  cmp w7, w5
0xffff91442818   728  b.gt #+0xcc (addr 0xffff914428e4)
0xffff9144281c   732  adds w7, w7, #0x400 (1024)
0xffff91442820   736  b.vs #+0x508 (addr 0xffff91442d28)
0xffff91442824   740  cmp w5, w7
0xffff91442828   744  b.hs #+0x508 (addr 0xffff91442d30)
0xffff9144282c   748  add w7, w5, w5, lsr #1
0xffff91442830   752  add w7, w7, #0x10 (16)
0xffff91442834   756  movz w16, #0x95ff
0xffff91442838   760  cmp w7, w16, lsl #1
0xffff9144283c   764  b.hs #+0x4fc (addr 0xffff91442d38)
0xffff91442840   768  lsl x8, x7, #32
0xffff91442844   772  lsl w9, w7, #3
0xffff91442848   776  add w7, w9, #0x10 (16)
0xffff9144284c   780  sxtw x7, w7
0xffff91442850   784  movz x9, #0xf2c0
0xffff91442854   788  movk x9, #0x4117, lsl #16
0xffff91442858   792  ldp x11, x16, [x9]
0xffff9144285c   796  adds x10, x11, x7
0xffff91442860   800  ccmp x10, x16, #nzCv, lo
0xffff91442864   804  b.hi #+0x2e0 (addr 0xffff91442b44)
0xffff91442868   808  str x10, [x9]
0xffff9144286c   812  orr x11, x11, #0x1
0xffff91442870   816  ldr x7, pc+976 (addr 0x0000ffff91442c40)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91442874   820  stur x7, [x11, #-1]
0xffff91442878   824  stur x8, [x11, #7]
0xffff9144287c   828  ldur w7, [x11, #11]
0xffff91442880   832  cmp w3, w7
0xffff91442884   836  b.ge #+0x18 (addr 0xffff9144289c)
0xffff91442888   840  sub w7, w7, #0x1 (1)
0xffff9144288c   844  ldr x8, pc+956 (addr 0x0000ffff91442c48)    ;; object: 0x49b04519 <the hole>
0xffff91442890   848  add x9, x11, #0xf (15)
0xffff91442894   852  str x8, [x9, w7, sxtw #3]
0xffff91442898   856  b #-0x18 (addr 0xffff91442880)
0xffff9144289c   860  mov x7, x3
0xffff914428a0   864  cmp w7, #0x0 (0)
0xffff914428a4   868  b.le #+0x1c (addr 0xffff914428c0)
0xffff914428a8   872  sub w7, w7, #0x1 (1)
0xffff914428ac   876  add x8, x6, #0xf (15)
0xffff914428b0   880  ldr x9, [x8, w7, sxtw #3]
0xffff914428b4   884  add x8, x11, #0xf (15)
0xffff914428b8   888  str x9, [x8, w7, sxtw #3]
0xffff914428bc   892  b #-0x1c (addr 0xffff914428a0)
0xffff914428c0   896  mov x6, x11
0xffff914428c4   900  stur x6, [x1, #15]
0xffff914428c8   904  add x7, x1, #0xf (15)
0xffff914428cc   908  and x6, x1, #0xfffffffffff00000
0xffff914428d0   912  ldr x6, [x6, #8]
0xffff914428d4   916  tbz w6, #2, #+0xc (addr 0xffff914428e0)
0xffff914428d8   920  ldr x16, pc+888 (addr 0x0000ffff91442c50)    ;; code: STUB, RecordWriteStub, minor: 72897
0xffff914428dc   924  blr x16
0xffff914428e0   928  mov x6, x11
0xffff914428e4   932  add w5, w5, #0x1 (1)
0xffff914428e8   936  lsl x5, x5, #32
0xffff914428ec   940  stur x5, [x1, #23]
0xffff914428f0   944  movz x1, #0x0
0xffff914428f4   948  cmp w0, w1
0xffff914428f8   952  b.le #+0x54 (addr 0xffff9144294c)
0xffff914428fc   956  sub w5, w0, w1
0xffff91442900   960  add w5, w5, #0x1 (1)
0xffff91442904   964  ldr x5, [x2, w5, uxtw #3]
0xffff91442908   968  adds w7, w1, w3
0xffff9144290c   972  b.vs #+0x434 (addr 0xffff91442d40)
0xffff91442910   976  mov x8, x6
0xffff91442914   980  add x9, x8, #0xf (15)
0xffff91442918   984  str x5, [x9, w7, sxtw #3]
0xffff9144291c   988  add x9, x9, w7, sxtw #3
0xffff91442920   992  tbz w5, #0, #+0x24 (addr 0xffff91442944)
0xffff91442924   996  and x5, x5, #0xfffffffffff00000
0xffff91442928  1000  ldr x5, [x5, #8]
0xffff9144292c  1004  tbz w5, #1, #+0x18 (addr 0xffff91442944)
0xffff91442930  1008  and x5, x8, #0xfffffffffff00000
0xffff91442934  1012  ldr x5, [x5, #8]
0xffff91442938  1016  tbz w5, #2, #+0xc (addr 0xffff91442944)
0xffff9144293c  1020  ldr x16, pc+796 (addr 0x0000ffff91442c58)    ;; code: STUB, RecordWriteStub, minor: 74920
0xffff91442940  1024  blr x16
0xffff91442944  1028  add w1, w1, #0x1 (1)
0xffff91442948  1032  b #-0x54 (addr 0xffff914428f4)
0xffff9144294c  1036  lsl x1, x4, #32
0xffff91442950  1040  b #+0x174 (addr 0xffff91442ac4)
0xffff91442954  1044  movz x3, #0x0
0xffff91442958  1048  cmp w0, w3
0xffff9144295c  1052  b.le #+0x24 (addr 0xffff91442980)
0xffff91442960  1056  sub w4, w0, w3
0xffff91442964  1060  add w4, w4, #0x1 (1)
0xffff91442968  1064  ldr x4, [x2, w4, uxtw #3]
0xffff9144296c  1068  tbnz w4, #0, #+0xc (addr 0xffff91442978)
0xffff91442970  1072  add w3, w3, #0x1 (1)
0xffff91442974  1076  b #-0x1c (addr 0xffff91442958)
0xffff91442978  1080  ldr x16, pc+640 (addr 0x0000ffff91442bf8)    ;; lazy deoptimization bailout 21
0xffff9144297c  1084  blr x16
0xffff91442980  1088  ldur w3, [x1, #27]
0xffff91442984  1092  adds w4, w3, w0
0xffff91442988  1096  b.vs #+0x3c0 (addr 0xffff91442d48)
0xffff9144298c  1100  subs w5, w4, #0x1 (1)
0xffff91442990  1104  b.vs #+0x3c0 (addr 0xffff91442d50)
0xffff91442994  1108  ldur x6, [x1, #15]
0xffff91442998  1112  cmp w3, w5
0xffff9144299c  1116  b.le #+0x10 (addr 0xffff914429ac)
0xffff914429a0  1120  cmp w5, w3
0xffff914429a4  1124  b.hs #+0x3b4 (addr 0xffff91442d58)
0xffff914429a8  1128  b #+0xe4 (addr 0xffff91442a8c)
0xffff914429ac  1132  ldur w7, [x6, #11]
0xffff914429b0  1136  cmp w7, w5
0xffff914429b4  1140  b.gt #+0xcc (addr 0xffff91442a80)
0xffff914429b8  1144  adds w7, w7, #0x400 (1024)
0xffff914429bc  1148  b.vs #+0x3a4 (addr 0xffff91442d60)
0xffff914429c0  1152  cmp w5, w7
0xffff914429c4  1156  b.hs #+0x3a4 (addr 0xffff91442d68)
0xffff914429c8  1160  add w7, w5, w5, lsr #1
0xffff914429cc  1164  add w7, w7, #0x10 (16)
0xffff914429d0  1168  movz w16, #0x95ff
0xffff914429d4  1172  cmp w7, w16, lsl #1
0xffff914429d8  1176  b.hs #+0x398 (addr 0xffff91442d70)
0xffff914429dc  1180  lsl x8, x7, #32
0xffff914429e0  1184  lsl w9, w7, #3
0xffff914429e4  1188  add w7, w9, #0x10 (16)
0xffff914429e8  1192  sxtw x7, w7
0xffff914429ec  1196  movz x9, #0xf2c0
0xffff914429f0  1200  movk x9, #0x4117, lsl #16
0xffff914429f4  1204  ldp x11, x16, [x9]
0xffff914429f8  1208  adds x10, x11, x7
0xffff914429fc  1212  ccmp x10, x16, #nzCv, lo
0xffff91442a00  1216  b.hi #+0x188 (addr 0xffff91442b88)
0xffff91442a04  1220  str x10, [x9]
0xffff91442a08  1224  orr x11, x11, #0x1
0xffff91442a0c  1228  ldr x7, pc+596 (addr 0x0000ffff91442c60)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91442a10  1232  stur x7, [x11, #-1]
0xffff91442a14  1236  stur x8, [x11, #7]
0xffff91442a18  1240  ldur w7, [x11, #11]
0xffff91442a1c  1244  cmp w3, w7
0xffff91442a20  1248  b.ge #+0x18 (addr 0xffff91442a38)
0xffff91442a24  1252  sub w7, w7, #0x1 (1)
0xffff91442a28  1256  ldr x8, pc+576 (addr 0x0000ffff91442c68)    ;; object: 0x49b04519 <the hole>
0xffff91442a2c  1260  add x9, x11, #0xf (15)
0xffff91442a30  1264  str x8, [x9, w7, sxtw #3]
0xffff91442a34  1268  b #-0x18 (addr 0xffff91442a1c)
0xffff91442a38  1272  mov x7, x3
0xffff91442a3c  1276  cmp w7, #0x0 (0)
0xffff91442a40  1280  b.le #+0x1c (addr 0xffff91442a5c)
0xffff91442a44  1284  sub w7, w7, #0x1 (1)
0xffff91442a48  1288  add x8, x6, #0xf (15)
0xffff91442a4c  1292  ldr x9, [x8, w7, sxtw #3]
0xffff91442a50  1296  add x8, x11, #0xf (15)
0xffff91442a54  1300  str x9, [x8, w7, sxtw #3]
0xffff91442a58  1304  b #-0x1c (addr 0xffff91442a3c)
0xffff91442a5c  1308  mov x6, x11
0xffff91442a60  1312  stur x6, [x1, #15]
0xffff91442a64  1316  add x7, x1, #0xf (15)
0xffff91442a68  1320  and x6, x1, #0xfffffffffff00000
0xffff91442a6c  1324  ldr x6, [x6, #8]
0xffff91442a70  1328  tbz w6, #2, #+0xc (addr 0xffff91442a7c)
0xffff91442a74  1332  ldr x16, pc+508 (addr 0x0000ffff91442c70)    ;; code: STUB, RecordWriteStub, minor: 72897
0xffff91442a78  1336  blr x16
0xffff91442a7c  1340  mov x6, x11
0xffff91442a80  1344  add w5, w5, #0x1 (1)
0xffff91442a84  1348  lsl x5, x5, #32
0xffff91442a88  1352  stur x5, [x1, #23]
0xffff91442a8c  1356  movz x1, #0x0
0xffff91442a90  1360  cmp w0, w1
0xffff91442a94  1364  b.le #+0x2c (addr 0xffff91442ac0)
0xffff91442a98  1368  sub w5, w0, w1
0xffff91442a9c  1372  add w5, w5, #0x1 (1)
0xffff91442aa0  1376  ldr x5, [x2, w5, uxtw #3]
0xffff91442aa4  1380  adds w7, w1, w3
0xffff91442aa8  1384  b.vs #+0x2d0 (addr 0xffff91442d78)
0xffff91442aac  1388  tbnz w5, #0, #+0x2d4 (addr 0xffff91442d80)
0xffff91442ab0  1392  add x8, x6, #0xf (15)
0xffff91442ab4  1396  str x5, [x8, w7, sxtw #3]
0xffff91442ab8  1400  add w1, w1, #0x1 (1)
0xffff91442abc  1404  b #-0x2c (addr 0xffff91442a90)
0xffff91442ac0  1408  lsl x1, x4, #32
0xffff91442ac4  1412  add w0, w0, #0x1 (1)
0xffff91442ac8  1416  lsl x2, x0, #32
0xffff91442acc  1420  mov x0, x1
0xffff91442ad0  1424  mov jssp, fp
0xffff91442ad4  1428  ldp fp, lr, [jssp], #16
0xffff91442ad8  1432  add jssp, jssp, x2, lsr #29
0xffff91442adc  1436  ret
0xffff91442ae0  1440  ldr x16, pc+288 (addr 0x0000ffff91442c00)    ;; lazy deoptimization bailout 30
0xffff91442ae4  1444  blr x16
0xffff91442ae8  1448  ldr x16, pc+288 (addr 0x0000ffff91442c08)    ;; lazy deoptimization bailout 31
0xffff91442aec  1452  blr x16
0xffff91442af0  1456  ldr x16, pc+288 (addr 0x0000ffff91442c10)    ;; lazy deoptimization bailout 32
0xffff91442af4  1460  blr x16
0xffff91442af8  1464  ldr x16, pc+288 (addr 0x0000ffff91442c18)    ;; lazy deoptimization bailout 33
0xffff91442afc  1468  blr x16
0xffff91442b00  1472  movz x11, #0x0
0xffff91442b04  1476  mov x16, lr
0xffff91442b08  1480  ldr x17, pc+368 (addr 0x0000ffff91442c78)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91442b0c  1484  blr x17
0xffff91442b10  1488  lsl x0, x7, #32
0xffff91442b14  1492  movz x10, #0x100000000
0xffff91442b18  1496  sub csp, jssp, #0x10 (16)
0xffff91442b1c  1500  stp x10, x0, [jssp, #-16]!
0xffff91442b20  1504  movz x0, #0x2
0xffff91442b24  1508  movz x1, #0x5b88
0xffff91442b28  1512  movk x1, #0xe2, lsl #16
0xffff91442b2c  1516  ldr x16, pc+340 (addr 0x0000ffff91442c80)    ;; code: STUB, CEntryStub, minor: 5
0xffff91442b30  1520  blr x16
0xffff91442b34  1524  str x0, [jssp, #88]
0xffff91442b38  1528  ldr x16, pc+336 (addr 0x0000ffff91442c88)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91442b3c  1532  blr x16
0xffff91442b40  1536  b #-0x438 (addr 0xffff91442708)
0xffff91442b44  1540  movz x11, #0x0
0xffff91442b48  1544  mov x16, lr
0xffff91442b4c  1548  ldr x17, pc+324 (addr 0x0000ffff91442c90)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91442b50  1552  blr x17
0xffff91442b54  1556  lsl x0, x7, #32
0xffff91442b58  1560  movz x10, #0x0
0xffff91442b5c  1564  sub csp, jssp, #0x10 (16)
0xffff91442b60  1568  stp x10, x0, [jssp, #-16]!
0xffff91442b64  1572  movz x0, #0x2
0xffff91442b68  1576  movz x1, #0x5b88
0xffff91442b6c  1580  movk x1, #0xe2, lsl #16
0xffff91442b70  1584  ldr x16, pc+296 (addr 0x0000ffff91442c98)    ;; code: STUB, CEntryStub, minor: 5
0xffff91442b74  1588  blr x16
0xffff91442b78  1592  str x0, [jssp, #88]
0xffff91442b7c  1596  ldr x16, pc+292 (addr 0x0000ffff91442ca0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91442b80  1600  blr x16
0xffff91442b84  1604  b #-0x314 (addr 0xffff91442870)
0xffff91442b88  1608  movz x11, #0x0
0xffff91442b8c  1612  mov x16, lr
0xffff91442b90  1616  ldr x17, pc+280 (addr 0x0000ffff91442ca8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91442b94  1620  blr x17
0xffff91442b98  1624  lsl x0, x7, #32
0xffff91442b9c  1628  movz x10, #0x0
0xffff91442ba0  1632  sub csp, jssp, #0x10 (16)
0xffff91442ba4  1636  stp x10, x0, [jssp, #-16]!
0xffff91442ba8  1640  movz x0, #0x2
0xffff91442bac  1644  movz x1, #0x5b88
0xffff91442bb0  1648  movk x1, #0xe2, lsl #16
0xffff91442bb4  1652  ldr x16, pc+252 (addr 0x0000ffff91442cb0)    ;; code: STUB, CEntryStub, minor: 5
0xffff91442bb8  1656  blr x16
0xffff91442bbc  1660  str x0, [jssp, #88]
0xffff91442bc0  1664  ldr x16, pc+248 (addr 0x0000ffff91442cb8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91442bc4  1668  blr x16
0xffff91442bc8  1672  b #-0x1bc (addr 0xffff91442a0c)
0xffff91442bcc  1676  5800079f       constant pool begin (num_const = 60)    ;; constant pool
0xffff91442bd0  1680  d63f03e0       constant
0xffff91442bd4  1684  d503201f       constant
0xffff91442bd8  1688  91206010       constant
0xffff91442bdc  1692  0000ffff       constant
0xffff91442be0  1696  91206018       constant
0xffff91442be4  1700  0000ffff       constant
0xffff91442be8  1704  91206020       constant
0xffff91442bec  1708  0000ffff       constant
0xffff91442bf0  1712  91206028       constant
0xffff91442bf4  1716  0000ffff       constant
0xffff91442bf8  1720  912060a8       constant
0xffff91442bfc  1724  0000ffff       constant
0xffff91442c00  1728  912060f0       constant
0xffff91442c04  1732  0000ffff       constant
0xffff91442c08  1736  912060f8       constant
0xffff91442c0c  1740  0000ffff       constant
0xffff91442c10  1744  91206100       constant
0xffff91442c14  1748  0000ffff       constant
0xffff91442c18  1752  91206108       constant
0xffff91442c1c  1756  0000ffff       constant
0xffff91442c20  1760  fff7ffff       constant
0xffff91442c24  1764  fff7ffff       constant
0xffff91442c28  1768  36404411       constant
0xffff91442c2c  1772  00000000       constant
0xffff91442c30  1776  364052d9       constant
0xffff91442c34  1780  00000000       constant
0xffff91442c38  1784  91441580       constant
0xffff91442c3c  1788  0000ffff       constant
0xffff91442c40  1792  36404259       constant
0xffff91442c44  1796  00000000       constant
0xffff91442c48  1800  49b04519       constant
0xffff91442c4c  1804  00000000       constant
0xffff91442c50  1808  91441580       constant
0xffff91442c54  1812  0000ffff       constant
0xffff91442c58  1816  91441d60       constant
0xffff91442c5c  1820  0000ffff       constant
0xffff91442c60  1824  36404259       constant
0xffff91442c64  1828  00000000       constant
0xffff91442c68  1832  49b04519       constant
0xffff91442c6c  1836  00000000       constant
0xffff91442c70  1840  91441580       constant
0xffff91442c74  1844  0000ffff       constant
0xffff91442c78  1848  91406820       constant
0xffff91442c7c  1852  0000ffff       constant
0xffff91442c80  1856  91406260       constant
0xffff91442c84  1860  0000ffff       constant
0xffff91442c88  1864  914068e0       constant
0xffff91442c8c  1868  0000ffff       constant
0xffff91442c90  1872  91406820       constant
0xffff91442c94  1876  0000ffff       constant
0xffff91442c98  1880  91406260       constant
0xffff91442c9c  1884  0000ffff       constant
0xffff91442ca0  1888  914068e0       constant
0xffff91442ca4  1892  0000ffff       constant
0xffff91442ca8  1896  91406820       constant
0xffff91442cac  1900  0000ffff       constant
0xffff91442cb0  1904  91406260       constant
0xffff91442cb4  1908  0000ffff       constant
0xffff91442cb8  1912  914068e0       constant
0xffff91442cbc  1916  0000ffff       constant
0xffff91442cc0  1920  movz x16, #0x0
0xffff91442cc4  1924  bl #+0xc4 (addr 0xffff91442d88)
0xffff91442cc8  1928  movz x16, #0x8
0xffff91442ccc  1932  bl #+0xbc (addr 0xffff91442d88)
0xffff91442cd0  1936  movz x16, #0x30
0xffff91442cd4  1940  bl #+0xb4 (addr 0xffff91442d88)
0xffff91442cd8  1944  movz x16, #0x38
0xffff91442cdc  1948  bl #+0xac (addr 0xffff91442d88)
0xffff91442ce0  1952  movz x16, #0x40
0xffff91442ce4  1956  bl #+0xa4 (addr 0xffff91442d88)
0xffff91442ce8  1960  movz x16, #0x48
0xffff91442cec  1964  bl #+0x9c (addr 0xffff91442d88)
0xffff91442cf0  1968  movz x16, #0x50
0xffff91442cf4  1972  bl #+0x94 (addr 0xffff91442d88)
0xffff91442cf8  1976  movz x16, #0x58
0xffff91442cfc  1980  bl #+0x8c (addr 0xffff91442d88)
0xffff91442d00  1984  movz x16, #0x60
0xffff91442d04  1988  bl #+0x84 (addr 0xffff91442d88)
0xffff91442d08  1992  movz x16, #0x68
0xffff91442d0c  1996  bl #+0x7c (addr 0xffff91442d88)
0xffff91442d10  2000  movz x16, #0x70
0xffff91442d14  2004  bl #+0x74 (addr 0xffff91442d88)
0xffff91442d18  2008  movz x16, #0x78
0xffff91442d1c  2012  bl #+0x6c (addr 0xffff91442d88)
0xffff91442d20  2016  movz x16, #0x80
0xffff91442d24  2020  bl #+0x64 (addr 0xffff91442d88)
0xffff91442d28  2024  movz x16, #0x88
0xffff91442d2c  2028  bl #+0x5c (addr 0xffff91442d88)
0xffff91442d30  2032  movz x16, #0x90
0xffff91442d34  2036  bl #+0x54 (addr 0xffff91442d88)
0xffff91442d38  2040  movz x16, #0x98
0xffff91442d3c  2044  bl #+0x4c (addr 0xffff91442d88)
0xffff91442d40  2048  movz x16, #0xa0
0xffff91442d44  2052  bl #+0x44 (addr 0xffff91442d88)
0xffff91442d48  2056  movz x16, #0xb0
0xffff91442d4c  2060  bl #+0x3c (addr 0xffff91442d88)
0xffff91442d50  2064  movz x16, #0xb8
0xffff91442d54  2068  bl #+0x34 (addr 0xffff91442d88)
0xffff91442d58  2072  movz x16, #0xc0
0xffff91442d5c  2076  bl #+0x2c (addr 0xffff91442d88)
0xffff91442d60  2080  movz x16, #0xc8
0xffff91442d64  2084  bl #+0x24 (addr 0xffff91442d88)
0xffff91442d68  2088  movz x16, #0xd0
0xffff91442d6c  2092  bl #+0x1c (addr 0xffff91442d88)
0xffff91442d70  2096  movz x16, #0xd8
0xffff91442d74  2100  bl #+0x14 (addr 0xffff91442d88)
0xffff91442d78  2104  movz x16, #0xe0
0xffff91442d7c  2108  bl #+0xc (addr 0xffff91442d88)
0xffff91442d80  2112  movz x16, #0xe8
0xffff91442d84  2116  bl #+0x4 (addr 0xffff91442d88)
0xffff91442d88  2120  ldr x17, pc+24 (addr 0x0000ffff91442da0)    ;; lazy deoptimization bailout 0
0xffff91442d8c  2124  add x17, x17, x16
0xffff91442d90  2128  br x17
0xffff91442d94  2132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91442d98  2136  d63f03e0       constant
0xffff91442d9c  2140  d503201f       constant
0xffff91442da0  2144  91206000       constant
0xffff91442da4  2148  0000ffff       constant


Safepoints (size = 47)
0xffff91442b34  1524  000 | x1 | x2 | x6 | x11 | x27 (sp -> fp)  <none> argc: 2
0xffff91442b78  1592  000 | x1 | x2 | x6 | x11 | x27 (sp -> fp)  <none> argc: 2
0xffff91442bbc  1660  000 | x1 | x2 | x6 | x11 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 71)
0xffff91442608  runtime entry
0xffff91442610  runtime entry
0xffff91442638  runtime entry
0xffff91442660  embedded object  (0x36404411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91442674  runtime entry
0xffff91442708  embedded object  (0x364052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91442770  code target (STUB)  (0xffff91441580)
0xffff91442870  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9144288c  embedded object  (0x49b04519 <the hole>)
0xffff914428d8  code target (STUB)  (0xffff91441580)
0xffff9144293c  code target (STUB)  (0xffff91441d60)
0xffff91442978  runtime entry
0xffff91442a0c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff91442a28  embedded object  (0x49b04519 <the hole>)
0xffff91442a74  code target (STUB)  (0xffff91441580)
0xffff91442ae0  runtime entry
0xffff91442ae8  runtime entry
0xffff91442af0  runtime entry
0xffff91442af8  runtime entry
0xffff91442b08  code target (STUB)  (0xffff91406820)
0xffff91442b2c  code target (STUB)  (0xffff91406260)
0xffff91442b38  code target (STUB)  (0xffff914068e0)
0xffff91442b4c  code target (STUB)  (0xffff91406820)
0xffff91442b70  code target (STUB)  (0xffff91406260)
0xffff91442b7c  code target (STUB)  (0xffff914068e0)
0xffff91442b90  code target (STUB)  (0xffff91406820)
0xffff91442bb4  code target (STUB)  (0xffff91406260)
0xffff91442bc0  code target (STUB)  (0xffff914068e0)
0xffff91442bcc  constant pool (size 244)
0xffff91442d88  runtime entry
0xffff91442d94  constant pool (size 20)


kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 2
type = NORMAL
name = ToBooleanICStub(Bool)
compiler = crankshaft
Instructions (size = 144)
0xffff914430a0     0  ldr x16, [x26, #64]
0xffff914430a4     4  cmp x0, x16
0xffff914430a8     8  b.eq #+0x1c (addr 0xffff914430c4)
0xffff914430ac    12  ldr x16, [x26, #72]
0xffff914430b0    16  cmp x0, x16
0xffff914430b4    20  b.eq #+0x8 (addr 0xffff914430bc)
0xffff914430b8    24  b #+0x30 (addr 0xffff914430e8)
0xffff914430bc    28  ldr x0, pc+28 (addr 0x0000ffff914430d8)    ;; object: 0x49b042b1 <false>
0xffff914430c0    32  ret
0xffff914430c4    36  ldr x0, pc+28 (addr 0x0000ffff914430e0)    ;; object: 0x49b04281 <true>
0xffff914430c8    40  ret
0xffff914430cc    44  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914430d0    48  d63f03e0       constant
0xffff914430d4    52  d503201f       constant
0xffff914430d8    56  49b042b1       constant
0xffff914430dc    60  00000000       constant
0xffff914430e0    64  49b04281       constant
0xffff914430e4    68  00000000       constant
0xffff914430e8    72  movz x16, #0x0
0xffff914430ec    76  sub csp, jssp, #0x10 (16)
0xffff914430f0    80  stp fp, lr, [jssp, #-16]!
0xffff914430f4    84  bl #+0x4 (addr 0xffff914430f8)
0xffff914430f8    88  movz x17, #0xa00000000
0xffff914430fc    92  sub csp, jssp, #0x10 (16)
0xffff91443100    96  stp x17, cp, [jssp, #-16]!
0xffff91443104   100  add fp, jssp, #0x10 (16)
0xffff91443108   104  ldr x17, pc+24 (addr 0x0000ffff91443120)    ;; lazy deoptimization bailout 0
0xffff9144310c   108  add x17, x17, x16
0xffff91443110   112  br x17
0xffff91443114   116  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91443118   120  d63f03e0       constant
0xffff9144311c   124  d503201f       constant
0xffff91443120   128  91206000       constant
0xffff91443124   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914430bc  embedded object  (0x49b042b1 <false>)
0xffff914430c4  embedded object  (0x49b04281 <true>)
0xffff914430cc  constant pool (size 28)
0xffff91443108  runtime entry
0xffff91443114  constant pool (size 20)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff914431a0     0  ldur x0, [x1, #-1]
0xffff914431a4     4  ldur x0, [x0, #47]
0xffff914431a8     8  ldur x0, [x0, #47]
0xffff914431ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = hasOwnProperty
compiler = unknown
Instructions (size = 120)
0xffff91443220     0  sub csp, jssp, #0x8 (8)
0xffff91443224     4  str x3, [jssp, #-8]!
0xffff91443228     8  sub csp, jssp, #0x8 (8)
0xffff9144322c    12  str x0, [jssp, #-8]!
0xffff91443230    16  ldr x0, pc+72 (addr 0x0000ffff91443278)    ;; object: 0x49b63e59 Cell for 0
0xffff91443234    20  ldur x0, [x0, #7]
0xffff91443238    24  cmp x0, #0x0 (0)
0xffff9144323c    28  b.ne #+0x14 (addr 0xffff91443250)
0xffff91443240    32  ldr x3, pc+64 (addr 0x0000ffff91443280)    ;; object: 0x49b63e69 WeakCell for 0x49b3ff39 <an Object with map 0x3640c081>
0xffff91443244    36  ldur x3, [x3, #7]
0xffff91443248    40  tbz w3, #0, #+0x8 (addr 0xffff91443250)
0xffff9144324c    44  b #+0x14 (addr 0xffff91443260)
0xffff91443250    48  ldr x0, [jssp], #8
0xffff91443254    52  ldr x3, [jssp], #8
0xffff91443258    56  ldr x16, pc+48 (addr 0x0000ffff91443288)    ;; code: BUILTIN
0xffff9144325c    60  br x16
0xffff91443260    64  add jssp, jssp, #0x10 (16)
0xffff91443264    68  mov x1, x3
0xffff91443268    72  ldr x16, pc+40 (addr 0x0000ffff91443290)    ;; code: HANDLER, LoadConstantStub, minor: 0
0xffff9144326c    76  br x16
0xffff91443270    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff91443274    84  d63f03e0       constant
0xffff91443278    88  49b63e59       constant
0xffff9144327c    92  00000000       constant
0xffff91443280    96  49b63e69       constant
0xffff91443284   100  00000000       constant
0xffff91443288   104  914222e0       constant
0xffff9144328c   108  0000ffff       constant
0xffff91443290   112  914431a0       constant
0xffff91443294   116  0000ffff       constant


RelocInfo (size = 10)
0xffff91443230  embedded object  (0x49b63e59 Cell for 0)
0xffff91443240  embedded object  (0x49b63e69 WeakCell for 0x49b3ff39 <an Object with map 0x3640c081>)
0xffff91443258  code target (BUILTIN)  (0xffff914222e0)
0xffff91443268  code target (HANDLER)  (0xffff914431a0)
0xffff91443270  constant pool (size 40)

kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff91443300     0  ldur x0, [x1, #-1]
0xffff91443304     4  ldur x0, [x0, #47]
0xffff91443308     8  ldur x0, [x0, #71]
0xffff9144330c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff91443380     0  ldur x0, [x1, #-1]
0xffff91443384     4  ldur x0, [x0, #47]
0xffff91443388     8  ldur x0, [x0, #95]
0xffff9144338c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff91443400     0  ldur x0, [x1, #-1]
0xffff91443404     4  ldur x0, [x0, #47]
0xffff91443408     8  ldur x0, [x0, #119]
0xffff9144340c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff91443480     0  ldur x0, [x1, #-1]
0xffff91443484     4  ldur x0, [x0, #47]
0xffff91443488     8  ldur x0, [x0, #143]
0xffff9144348c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff91443500     0  ldur x0, [x1, #-1]
0xffff91443504     4  ldur x0, [x0, #47]
0xffff91443508     8  ldur x0, [x0, #167]
0xffff9144350c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = FunctionPrototypeStub
name = FunctionPrototypeStub
compiler = unknown
Instructions (size = 72)
0xffff91443580     0  ldur x10, [x1, #23]
0xffff91443584     4  ldr x16, [x26, #88]
0xffff91443588     8  cmp x10, x16
0xffff9144358c    12  b.eq #+0x20 (addr 0xffff914435ac)
0xffff91443590    16  ldur x11, [x10, #-1]
0xffff91443594    20  ldrb w11, [x11, #11]
0xffff91443598    24  cmp x11, #0x84 (132)
0xffff9144359c    28  b.ne #+0x8 (addr 0xffff914435a4)
0xffff914435a0    32  ldur x10, [x10, #23]
0xffff914435a4    36  mov x0, x10
0xffff914435a8    40  ret
0xffff914435ac    44  ldr x16, pc+20 (addr 0x0000ffff914435c0)    ;; code: BUILTIN
0xffff914435b0    48  br x16
0xffff914435b4    52  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914435b8    56  d63f03e0       constant
0xffff914435bc    60  d503201f       constant
0xffff914435c0    64  914222e0       constant
0xffff914435c4    68  0000ffff       constant


RelocInfo (size = 7)
0xffff914435ac  code target (BUILTIN)  (0xffff914222e0)
0xffff914435b4  constant pool (size 20)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 653)
0xffff91443d60     0  movz x2, #0xf2c0
0xffff91443d64     4  movk x2, #0x4117, lsl #16
0xffff91443d68     8  ldp x3, x0, [x2]
0xffff91443d6c    12  adds x16, x3, #0xf8 (248)
0xffff91443d70    16  ccmp x16, x0, #nzCv, lo
0xffff91443d74    20  b.hi #+0x104 (addr 0xffff91443e78)
0xffff91443d78    24  str x16, [x2]
0xffff91443d7c    28  orr x3, x3, #0x1
0xffff91443d80    32  ldr x0, pc+360 (addr 0x0000ffff91443ee8)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91443d84    36  stur x0, [x3, #-1]
0xffff91443d88    40  movz x0, #0x1d00000000
0xffff91443d8c    44  stur x0, [x3, #7]
0xffff91443d90    48  stur x1, [x3, #15]
0xffff91443d94    52  stur cp, [x3, #23]
0xffff91443d98    56  ldr x0, pc+344 (addr 0x0000ffff91443ef0)    ;; object: 0x49b04519 <the hole>
0xffff91443d9c    60  stur x0, [x3, #31]
0xffff91443da0    64  ldur x0, [cp, #39]
0xffff91443da4    68  stur x0, [x3, #39]
0xffff91443da8    72  ldr x0, pc+336 (addr 0x0000ffff91443ef8)    ;; object: 0x49b04241 <undefined>
0xffff91443dac    76  stur x0, [x3, #47]
0xffff91443db0    80  ldr x0, pc+336 (addr 0x0000ffff91443f00)    ;; object: 0x49b04241 <undefined>
0xffff91443db4    84  stur x0, [x3, #55]
0xffff91443db8    88  ldr x0, pc+336 (addr 0x0000ffff91443f08)    ;; object: 0x49b04241 <undefined>
0xffff91443dbc    92  stur x0, [x3, #63]
0xffff91443dc0    96  ldr x0, pc+336 (addr 0x0000ffff91443f10)    ;; object: 0x49b04241 <undefined>
0xffff91443dc4   100  stur x0, [x3, #71]
0xffff91443dc8   104  ldr x0, pc+336 (addr 0x0000ffff91443f18)    ;; object: 0x49b04241 <undefined>
0xffff91443dcc   108  stur x0, [x3, #79]
0xffff91443dd0   112  ldr x0, pc+336 (addr 0x0000ffff91443f20)    ;; object: 0x49b04241 <undefined>
0xffff91443dd4   116  stur x0, [x3, #87]
0xffff91443dd8   120  ldr x0, pc+336 (addr 0x0000ffff91443f28)    ;; object: 0x49b04241 <undefined>
0xffff91443ddc   124  stur x0, [x3, #95]
0xffff91443de0   128  ldr x0, pc+336 (addr 0x0000ffff91443f30)    ;; object: 0x49b04241 <undefined>
0xffff91443de4   132  stur x0, [x3, #103]
0xffff91443de8   136  ldr x0, pc+336 (addr 0x0000ffff91443f38)    ;; object: 0x49b04241 <undefined>
0xffff91443dec   140  stur x0, [x3, #111]
0xffff91443df0   144  ldr x0, pc+336 (addr 0x0000ffff91443f40)    ;; object: 0x49b04241 <undefined>
0xffff91443df4   148  stur x0, [x3, #119]
0xffff91443df8   152  ldr x0, pc+336 (addr 0x0000ffff91443f48)    ;; object: 0x49b04241 <undefined>
0xffff91443dfc   156  stur x0, [x3, #127]
0xffff91443e00   160  ldr x0, pc+336 (addr 0x0000ffff91443f50)    ;; object: 0x49b04241 <undefined>
0xffff91443e04   164  stur x0, [x3, #135]
0xffff91443e08   168  ldr x0, pc+336 (addr 0x0000ffff91443f58)    ;; object: 0x49b04241 <undefined>
0xffff91443e0c   172  stur x0, [x3, #143]
0xffff91443e10   176  ldr x0, pc+336 (addr 0x0000ffff91443f60)    ;; object: 0x49b04241 <undefined>
0xffff91443e14   180  stur x0, [x3, #151]
0xffff91443e18   184  ldr x0, pc+336 (addr 0x0000ffff91443f68)    ;; object: 0x49b04241 <undefined>
0xffff91443e1c   188  stur x0, [x3, #159]
0xffff91443e20   192  ldr x0, pc+336 (addr 0x0000ffff91443f70)    ;; object: 0x49b04241 <undefined>
0xffff91443e24   196  stur x0, [x3, #167]
0xffff91443e28   200  ldr x0, pc+336 (addr 0x0000ffff91443f78)    ;; object: 0x49b04241 <undefined>
0xffff91443e2c   204  stur x0, [x3, #175]
0xffff91443e30   208  ldr x0, pc+336 (addr 0x0000ffff91443f80)    ;; object: 0x49b04241 <undefined>
0xffff91443e34   212  stur x0, [x3, #183]
0xffff91443e38   216  ldr x0, pc+336 (addr 0x0000ffff91443f88)    ;; object: 0x49b04241 <undefined>
0xffff91443e3c   220  stur x0, [x3, #191]
0xffff91443e40   224  ldr x0, pc+336 (addr 0x0000ffff91443f90)    ;; object: 0x49b04241 <undefined>
0xffff91443e44   228  stur x0, [x3, #199]
0xffff91443e48   232  ldr x0, pc+336 (addr 0x0000ffff91443f98)    ;; object: 0x49b04241 <undefined>
0xffff91443e4c   236  stur x0, [x3, #207]
0xffff91443e50   240  ldr x0, pc+336 (addr 0x0000ffff91443fa0)    ;; object: 0x49b04241 <undefined>
0xffff91443e54   244  stur x0, [x3, #215]
0xffff91443e58   248  ldr x0, pc+336 (addr 0x0000ffff91443fa8)    ;; object: 0x49b04241 <undefined>
0xffff91443e5c   252  stur x0, [x3, #223]
0xffff91443e60   256  ldr x0, pc+336 (addr 0x0000ffff91443fb0)    ;; object: 0x49b04241 <undefined>
0xffff91443e64   260  stur x0, [x3, #231]
0xffff91443e68   264  ldr x0, pc+336 (addr 0x0000ffff91443fb8)    ;; object: 0x49b04241 <undefined>
0xffff91443e6c   268  stur x0, [x3, #239]
0xffff91443e70   272  mov x0, x3
0xffff91443e74   276  ret
0xffff91443e78   280  sub csp, jssp, #0x10 (16)
0xffff91443e7c   284  stp fp, lr, [jssp, #-16]!
0xffff91443e80   288  movz fp, #0xa00000000
0xffff91443e84   292  sub csp, jssp, #0x8 (8)
0xffff91443e88   296  str fp, [jssp, #-8]!
0xffff91443e8c   300  add fp, jssp, #0x8 (8)
0xffff91443e90   304  movz x3, #0x0
0xffff91443e94   308  mov x16, lr
0xffff91443e98   312  ldr x17, pc+296 (addr 0x0000ffff91443fc0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91443e9c   316  blr x17
0xffff91443ea0   320  movz x0, #0xf800000000
0xffff91443ea4   324  movz x10, #0x0
0xffff91443ea8   328  sub csp, jssp, #0x10 (16)
0xffff91443eac   332  stp x10, x0, [jssp, #-16]!
0xffff91443eb0   336  movz x0, #0x2
0xffff91443eb4   340  movz x1, #0x5b88
0xffff91443eb8   344  movk x1, #0xe2, lsl #16
0xffff91443ebc   348  ldr x16, pc+268 (addr 0x0000ffff91443fc8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91443ec0   352  blr x16
0xffff91443ec4   356  str x0, [jssp, #24]
0xffff91443ec8   360  ldr x16, pc+264 (addr 0x0000ffff91443fd0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91443ecc   364  blr x16
0xffff91443ed0   368  ldr lr, [jssp, #16]
0xffff91443ed4   372  ldp xzr, fp, [jssp], #24
0xffff91443ed8   376  b #-0x158 (addr 0xffff91443d80)
0xffff91443edc   380  580007df       constant pool begin (num_const = 62)    ;; constant pool
0xffff91443ee0   384  d63f03e0       constant
0xffff91443ee4   388  d503201f       constant
0xffff91443ee8   392  36406149       constant
0xffff91443eec   396  00000000       constant
0xffff91443ef0   400  49b04519       constant
0xffff91443ef4   404  00000000       constant
0xffff91443ef8   408  49b04241       constant
0xffff91443efc   412  00000000       constant
0xffff91443f00   416  49b04241       constant
0xffff91443f04   420  00000000       constant
0xffff91443f08   424  49b04241       constant
0xffff91443f0c   428  00000000       constant
0xffff91443f10   432  49b04241       constant
0xffff91443f14   436  00000000       constant
0xffff91443f18   440  49b04241       constant
0xffff91443f1c   444  00000000       constant
0xffff91443f20   448  49b04241       constant
0xffff91443f24   452  00000000       constant
0xffff91443f28   456  49b04241       constant
0xffff91443f2c   460  00000000       constant
0xffff91443f30   464  49b04241       constant
0xffff91443f34   468  00000000       constant
0xffff91443f38   472  49b04241       constant
0xffff91443f3c   476  00000000       constant
0xffff91443f40   480  49b04241       constant
0xffff91443f44   484  00000000       constant
0xffff91443f48   488  49b04241       constant
0xffff91443f4c   492  00000000       constant
0xffff91443f50   496  49b04241       constant
0xffff91443f54   500  00000000       constant
0xffff91443f58   504  49b04241       constant
0xffff91443f5c   508  00000000       constant
0xffff91443f60   512  49b04241       constant
0xffff91443f64   516  00000000       constant
0xffff91443f68   520  49b04241       constant
0xffff91443f6c   524  00000000       constant
0xffff91443f70   528  49b04241       constant
0xffff91443f74   532  00000000       constant
0xffff91443f78   536  49b04241       constant
0xffff91443f7c   540  00000000       constant
0xffff91443f80   544  49b04241       constant
0xffff91443f84   548  00000000       constant
0xffff91443f88   552  49b04241       constant
0xffff91443f8c   556  00000000       constant
0xffff91443f90   560  49b04241       constant
0xffff91443f94   564  00000000       constant
0xffff91443f98   568  49b04241       constant
0xffff91443f9c   572  00000000       constant
0xffff91443fa0   576  49b04241       constant
0xffff91443fa4   580  00000000       constant
0xffff91443fa8   584  49b04241       constant
0xffff91443fac   588  00000000       constant
0xffff91443fb0   592  49b04241       constant
0xffff91443fb4   596  00000000       constant
0xffff91443fb8   600  49b04241       constant
0xffff91443fbc   604  00000000       constant
0xffff91443fc0   608  91406820       constant
0xffff91443fc4   612  0000ffff       constant
0xffff91443fc8   616  91406260       constant
0xffff91443fcc   620  0000ffff       constant
0xffff91443fd0   624  914068e0       constant
0xffff91443fd4   628  0000ffff       constant


Safepoints (size = 21)
0xffff91443ec4   356  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 36)
0xffff91443d80  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91443d98  embedded object  (0x49b04519 <the hole>)
0xffff91443da8  embedded object  (0x49b04241 <undefined>)
0xffff91443db0  embedded object  (0x49b04241 <undefined>)
0xffff91443db8  embedded object  (0x49b04241 <undefined>)
0xffff91443dc0  embedded object  (0x49b04241 <undefined>)
0xffff91443dc8  embedded object  (0x49b04241 <undefined>)
0xffff91443dd0  embedded object  (0x49b04241 <undefined>)
0xffff91443dd8  embedded object  (0x49b04241 <undefined>)
0xffff91443de0  embedded object  (0x49b04241 <undefined>)
0xffff91443de8  embedded object  (0x49b04241 <undefined>)
0xffff91443df0  embedded object  (0x49b04241 <undefined>)
0xffff91443df8  embedded object  (0x49b04241 <undefined>)
0xffff91443e00  embedded object  (0x49b04241 <undefined>)
0xffff91443e08  embedded object  (0x49b04241 <undefined>)
0xffff91443e10  embedded object  (0x49b04241 <undefined>)
0xffff91443e18  embedded object  (0x49b04241 <undefined>)
0xffff91443e20  embedded object  (0x49b04241 <undefined>)
0xffff91443e28  embedded object  (0x49b04241 <undefined>)
0xffff91443e30  embedded object  (0x49b04241 <undefined>)
0xffff91443e38  embedded object  (0x49b04241 <undefined>)
0xffff91443e40  embedded object  (0x49b04241 <undefined>)
0xffff91443e48  embedded object  (0x49b04241 <undefined>)
0xffff91443e50  embedded object  (0x49b04241 <undefined>)
0xffff91443e58  embedded object  (0x49b04241 <undefined>)
0xffff91443e60  embedded object  (0x49b04241 <undefined>)
0xffff91443e68  embedded object  (0x49b04241 <undefined>)
0xffff91443e98  code target (STUB)  (0xffff91406820)
0xffff91443ebc  code target (STUB)  (0xffff91406260)
0xffff91443ec8  code target (STUB)  (0xffff914068e0)
0xffff91443edc  constant pool (size 252)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff91445980     0  ldur x0, [x1, #7]
0xffff91445984     4  movz x16, #0x187
0xffff91445988     8  ldr x0, [x0, x16]
0xffff9144598c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff91445a00     0  ldur x0, [x1, #7]
0xffff91445a04     4  movz x16, #0x18f
0xffff91445a08     8  ldr x0, [x0, x16]
0xffff91445a0c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff91445a80     0  ldur x0, [x1, #7]
0xffff91445a84     4  movz x16, #0x197
0xffff91445a88     8  ldr x0, [x0, x16]
0xffff91445a8c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff91445b00     0  ldur x0, [x1, #7]
0xffff91445b04     4  movz x16, #0x1a7
0xffff91445b08     8  ldr x0, [x0, x16]
0xffff91445b0c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff91445b80     0  sub csp, jssp, #0x8 (8)
0xffff91445b84     4  str x3, [jssp, #-8]!
0xffff91445b88     8  sub csp, jssp, #0x8 (8)
0xffff91445b8c    12  str x4, [jssp, #-8]!
0xffff91445b90    16  ldr x3, pc+88 (addr 0x0000ffff91445be8)    ;; object: 0x49b5b0f1 Cell for 0
0xffff91445b94    20  ldur x3, [x3, #7]
0xffff91445b98    24  cmp x3, #0x0 (0)
0xffff91445b9c    28  b.ne #+0x30 (addr 0xffff91445bcc)
0xffff91445ba0    32  tbz w0, #0, #+0x2c (addr 0xffff91445bcc)
0xffff91445ba4    36  ldr x5, pc+76 (addr 0x0000ffff91445bf0)    ;; object: 0x49b57a99 WeakCell for 0x3640b581 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91445ba8    40  ldur x5, [x5, #7]
0xffff91445bac    44  tbz w5, #0, #+0x20 (addr 0xffff91445bcc)
0xffff91445bb0    48  ldursw x4, [x5, #15]
0xffff91445bb4    52  tbnz w4, #23, #+0x18 (addr 0xffff91445bcc)
0xffff91445bb8    56  ldr x4, [jssp], #8
0xffff91445bbc    60  ldr x3, [jssp], #8
0xffff91445bc0    64  ldr x2, pc+56 (addr 0x0000ffff91445bf8)    ;; object: 0x49b05209 <String[4]: next>
0xffff91445bc4    68  ldr x16, pc+60 (addr 0x0000ffff91445c00)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff91445bc8    72  br x16
0xffff91445bcc    76  ldr x2, pc+60 (addr 0x0000ffff91445c08)    ;; object: 0x49b05209 <String[4]: next>
0xffff91445bd0    80  ldr x4, [jssp], #8
0xffff91445bd4    84  ldr x3, [jssp], #8
0xffff91445bd8    88  ldr x16, pc+56 (addr 0x0000ffff91445c10)    ;; code: BUILTIN
0xffff91445bdc    92  br x16
0xffff91445be0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff91445be4   100  d63f03e0       constant
0xffff91445be8   104  49b5b0f1       constant
0xffff91445bec   108  00000000       constant
0xffff91445bf0   112  49b57a99       constant
0xffff91445bf4   116  00000000       constant
0xffff91445bf8   120  49b05209       constant
0xffff91445bfc   124  00000000       constant
0xffff91445c00   128  91438860       constant
0xffff91445c04   132  0000ffff       constant
0xffff91445c08   136  49b05209       constant
0xffff91445c0c   140  00000000       constant
0xffff91445c10   144  91422420       constant
0xffff91445c14   148  0000ffff       constant


RelocInfo (size = 12)
0xffff91445b90  embedded object  (0x49b5b0f1 Cell for 0)
0xffff91445ba4  embedded object  (0x49b57a99 WeakCell for 0x3640b581 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91445bc0  embedded object  (0x49b05209 <String[4]: next>)
0xffff91445bc4  code target (HANDLER)  (0xffff91438860)
0xffff91445bcc  embedded object  (0x49b05209 <String[4]: next>)
0xffff91445bd8  code target (BUILTIN)  (0xffff91422420)
0xffff91445be0  constant pool (size 56)

kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 461)
0xffff91445fc0     0  movz x2, #0xf2c0
0xffff91445fc4     4  movk x2, #0x4117, lsl #16
0xffff91445fc8     8  ldp x3, x0, [x2]
0xffff91445fcc    12  adds x16, x3, #0x98 (152)
0xffff91445fd0    16  ccmp x16, x0, #nzCv, lo
0xffff91445fd4    20  b.hi #+0xa4 (addr 0xffff91446078)
0xffff91445fd8    24  str x16, [x2]
0xffff91445fdc    28  orr x3, x3, #0x1
0xffff91445fe0    32  ldr x0, pc+264 (addr 0x0000ffff914460e8)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91445fe4    36  stur x0, [x3, #-1]
0xffff91445fe8    40  movz x0, #0x1100000000
0xffff91445fec    44  stur x0, [x3, #7]
0xffff91445ff0    48  stur x1, [x3, #15]
0xffff91445ff4    52  stur cp, [x3, #23]
0xffff91445ff8    56  ldr x0, pc+248 (addr 0x0000ffff914460f0)    ;; object: 0x49b04519 <the hole>
0xffff91445ffc    60  stur x0, [x3, #31]
0xffff91446000    64  ldur x0, [cp, #39]
0xffff91446004    68  stur x0, [x3, #39]
0xffff91446008    72  ldr x0, pc+240 (addr 0x0000ffff914460f8)    ;; object: 0x49b04241 <undefined>
0xffff9144600c    76  stur x0, [x3, #47]
0xffff91446010    80  ldr x0, pc+240 (addr 0x0000ffff91446100)    ;; object: 0x49b04241 <undefined>
0xffff91446014    84  stur x0, [x3, #55]
0xffff91446018    88  ldr x0, pc+240 (addr 0x0000ffff91446108)    ;; object: 0x49b04241 <undefined>
0xffff9144601c    92  stur x0, [x3, #63]
0xffff91446020    96  ldr x0, pc+240 (addr 0x0000ffff91446110)    ;; object: 0x49b04241 <undefined>
0xffff91446024   100  stur x0, [x3, #71]
0xffff91446028   104  ldr x0, pc+240 (addr 0x0000ffff91446118)    ;; object: 0x49b04241 <undefined>
0xffff9144602c   108  stur x0, [x3, #79]
0xffff91446030   112  ldr x0, pc+240 (addr 0x0000ffff91446120)    ;; object: 0x49b04241 <undefined>
0xffff91446034   116  stur x0, [x3, #87]
0xffff91446038   120  ldr x0, pc+240 (addr 0x0000ffff91446128)    ;; object: 0x49b04241 <undefined>
0xffff9144603c   124  stur x0, [x3, #95]
0xffff91446040   128  ldr x0, pc+240 (addr 0x0000ffff91446130)    ;; object: 0x49b04241 <undefined>
0xffff91446044   132  stur x0, [x3, #103]
0xffff91446048   136  ldr x0, pc+240 (addr 0x0000ffff91446138)    ;; object: 0x49b04241 <undefined>
0xffff9144604c   140  stur x0, [x3, #111]
0xffff91446050   144  ldr x0, pc+240 (addr 0x0000ffff91446140)    ;; object: 0x49b04241 <undefined>
0xffff91446054   148  stur x0, [x3, #119]
0xffff91446058   152  ldr x0, pc+240 (addr 0x0000ffff91446148)    ;; object: 0x49b04241 <undefined>
0xffff9144605c   156  stur x0, [x3, #127]
0xffff91446060   160  ldr x0, pc+240 (addr 0x0000ffff91446150)    ;; object: 0x49b04241 <undefined>
0xffff91446064   164  stur x0, [x3, #135]
0xffff91446068   168  ldr x0, pc+240 (addr 0x0000ffff91446158)    ;; object: 0x49b04241 <undefined>
0xffff9144606c   172  stur x0, [x3, #143]
0xffff91446070   176  mov x0, x3
0xffff91446074   180  ret
0xffff91446078   184  sub csp, jssp, #0x10 (16)
0xffff9144607c   188  stp fp, lr, [jssp, #-16]!
0xffff91446080   192  movz fp, #0xa00000000
0xffff91446084   196  sub csp, jssp, #0x8 (8)
0xffff91446088   200  str fp, [jssp, #-8]!
0xffff9144608c   204  add fp, jssp, #0x8 (8)
0xffff91446090   208  movz x3, #0x0
0xffff91446094   212  mov x16, lr
0xffff91446098   216  ldr x17, pc+200 (addr 0x0000ffff91446160)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9144609c   220  blr x17
0xffff914460a0   224  movz x0, #0x9800000000
0xffff914460a4   228  movz x10, #0x0
0xffff914460a8   232  sub csp, jssp, #0x10 (16)
0xffff914460ac   236  stp x10, x0, [jssp, #-16]!
0xffff914460b0   240  movz x0, #0x2
0xffff914460b4   244  movz x1, #0x5b88
0xffff914460b8   248  movk x1, #0xe2, lsl #16
0xffff914460bc   252  ldr x16, pc+172 (addr 0x0000ffff91446168)    ;; code: STUB, CEntryStub, minor: 5
0xffff914460c0   256  blr x16
0xffff914460c4   260  str x0, [jssp, #24]
0xffff914460c8   264  ldr x16, pc+168 (addr 0x0000ffff91446170)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914460cc   268  blr x16
0xffff914460d0   272  ldr lr, [jssp, #16]
0xffff914460d4   276  ldp xzr, fp, [jssp], #24
0xffff914460d8   280  b #-0xf8 (addr 0xffff91445fe0)
0xffff914460dc   284  580004df       constant pool begin (num_const = 38)    ;; constant pool
0xffff914460e0   288  d63f03e0       constant
0xffff914460e4   292  d503201f       constant
0xffff914460e8   296  36406149       constant
0xffff914460ec   300  00000000       constant
0xffff914460f0   304  49b04519       constant
0xffff914460f4   308  00000000       constant
0xffff914460f8   312  49b04241       constant
0xffff914460fc   316  00000000       constant
0xffff91446100   320  49b04241       constant
0xffff91446104   324  00000000       constant
0xffff91446108   328  49b04241       constant
0xffff9144610c   332  00000000       constant
0xffff91446110   336  49b04241       constant
0xffff91446114   340  00000000       constant
0xffff91446118   344  49b04241       constant
0xffff9144611c   348  00000000       constant
0xffff91446120   352  49b04241       constant
0xffff91446124   356  00000000       constant
0xffff91446128   360  49b04241       constant
0xffff9144612c   364  00000000       constant
0xffff91446130   368  49b04241       constant
0xffff91446134   372  00000000       constant
0xffff91446138   376  49b04241       constant
0xffff9144613c   380  00000000       constant
0xffff91446140   384  49b04241       constant
0xffff91446144   388  00000000       constant
0xffff91446148   392  49b04241       constant
0xffff9144614c   396  00000000       constant
0xffff91446150   400  49b04241       constant
0xffff91446154   404  00000000       constant
0xffff91446158   408  49b04241       constant
0xffff9144615c   412  00000000       constant
0xffff91446160   416  91406820       constant
0xffff91446164   420  0000ffff       constant
0xffff91446168   424  91406260       constant
0xffff9144616c   428  0000ffff       constant
0xffff91446170   432  914068e0       constant
0xffff91446174   436  0000ffff       constant


Safepoints (size = 21)
0xffff914460c4   260  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 24)
0xffff91445fe0  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91445ff8  embedded object  (0x49b04519 <the hole>)
0xffff91446008  embedded object  (0x49b04241 <undefined>)
0xffff91446010  embedded object  (0x49b04241 <undefined>)
0xffff91446018  embedded object  (0x49b04241 <undefined>)
0xffff91446020  embedded object  (0x49b04241 <undefined>)
0xffff91446028  embedded object  (0x49b04241 <undefined>)
0xffff91446030  embedded object  (0x49b04241 <undefined>)
0xffff91446038  embedded object  (0x49b04241 <undefined>)
0xffff91446040  embedded object  (0x49b04241 <undefined>)
0xffff91446048  embedded object  (0x49b04241 <undefined>)
0xffff91446050  embedded object  (0x49b04241 <undefined>)
0xffff91446058  embedded object  (0x49b04241 <undefined>)
0xffff91446060  embedded object  (0x49b04241 <undefined>)
0xffff91446068  embedded object  (0x49b04241 <undefined>)
0xffff91446098  code target (STUB)  (0xffff91406820)
0xffff914460bc  code target (STUB)  (0xffff91406260)
0xffff914460c8  code target (STUB)  (0xffff914068e0)
0xffff914460dc  constant pool (size 156)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 381)
0xffff91446b40     0  movz x2, #0xf2c0
0xffff91446b44     4  movk x2, #0x4117, lsl #16
0xffff91446b48     8  ldp x3, x0, [x2]
0xffff91446b4c    12  adds x16, x3, #0x70 (112)
0xffff91446b50    16  ccmp x16, x0, #nzCv, lo
0xffff91446b54    20  b.hi #+0x7c (addr 0xffff91446bd0)
0xffff91446b58    24  str x16, [x2]
0xffff91446b5c    28  orr x3, x3, #0x1
0xffff91446b60    32  ldr x0, pc+224 (addr 0x0000ffff91446c40)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91446b64    36  stur x0, [x3, #-1]
0xffff91446b68    40  movz x0, #0xc00000000
0xffff91446b6c    44  stur x0, [x3, #7]
0xffff91446b70    48  stur x1, [x3, #15]
0xffff91446b74    52  stur cp, [x3, #23]
0xffff91446b78    56  ldr x0, pc+208 (addr 0x0000ffff91446c48)    ;; object: 0x49b04519 <the hole>
0xffff91446b7c    60  stur x0, [x3, #31]
0xffff91446b80    64  ldur x0, [cp, #39]
0xffff91446b84    68  stur x0, [x3, #39]
0xffff91446b88    72  ldr x0, pc+200 (addr 0x0000ffff91446c50)    ;; object: 0x49b04241 <undefined>
0xffff91446b8c    76  stur x0, [x3, #47]
0xffff91446b90    80  ldr x0, pc+200 (addr 0x0000ffff91446c58)    ;; object: 0x49b04241 <undefined>
0xffff91446b94    84  stur x0, [x3, #55]
0xffff91446b98    88  ldr x0, pc+200 (addr 0x0000ffff91446c60)    ;; object: 0x49b04241 <undefined>
0xffff91446b9c    92  stur x0, [x3, #63]
0xffff91446ba0    96  ldr x0, pc+200 (addr 0x0000ffff91446c68)    ;; object: 0x49b04241 <undefined>
0xffff91446ba4   100  stur x0, [x3, #71]
0xffff91446ba8   104  ldr x0, pc+200 (addr 0x0000ffff91446c70)    ;; object: 0x49b04241 <undefined>
0xffff91446bac   108  stur x0, [x3, #79]
0xffff91446bb0   112  ldr x0, pc+200 (addr 0x0000ffff91446c78)    ;; object: 0x49b04241 <undefined>
0xffff91446bb4   116  stur x0, [x3, #87]
0xffff91446bb8   120  ldr x0, pc+200 (addr 0x0000ffff91446c80)    ;; object: 0x49b04241 <undefined>
0xffff91446bbc   124  stur x0, [x3, #95]
0xffff91446bc0   128  ldr x0, pc+200 (addr 0x0000ffff91446c88)    ;; object: 0x49b04241 <undefined>
0xffff91446bc4   132  stur x0, [x3, #103]
0xffff91446bc8   136  mov x0, x3
0xffff91446bcc   140  ret
0xffff91446bd0   144  sub csp, jssp, #0x10 (16)
0xffff91446bd4   148  stp fp, lr, [jssp, #-16]!
0xffff91446bd8   152  movz fp, #0xa00000000
0xffff91446bdc   156  sub csp, jssp, #0x8 (8)
0xffff91446be0   160  str fp, [jssp, #-8]!
0xffff91446be4   164  add fp, jssp, #0x8 (8)
0xffff91446be8   168  movz x3, #0x0
0xffff91446bec   172  mov x16, lr
0xffff91446bf0   176  ldr x17, pc+160 (addr 0x0000ffff91446c90)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91446bf4   180  blr x17
0xffff91446bf8   184  movz x0, #0x7000000000
0xffff91446bfc   188  movz x10, #0x0
0xffff91446c00   192  sub csp, jssp, #0x10 (16)
0xffff91446c04   196  stp x10, x0, [jssp, #-16]!
0xffff91446c08   200  movz x0, #0x2
0xffff91446c0c   204  movz x1, #0x5b88
0xffff91446c10   208  movk x1, #0xe2, lsl #16
0xffff91446c14   212  ldr x16, pc+132 (addr 0x0000ffff91446c98)    ;; code: STUB, CEntryStub, minor: 5
0xffff91446c18   216  blr x16
0xffff91446c1c   220  str x0, [jssp, #24]
0xffff91446c20   224  ldr x16, pc+128 (addr 0x0000ffff91446ca0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91446c24   228  blr x16
0xffff91446c28   232  ldr lr, [jssp, #16]
0xffff91446c2c   236  ldp xzr, fp, [jssp], #24
0xffff91446c30   240  b #-0xd0 (addr 0xffff91446b60)
0xffff91446c34   244  5800039f       constant pool begin (num_const = 28)    ;; constant pool
0xffff91446c38   248  d63f03e0       constant
0xffff91446c3c   252  d503201f       constant
0xffff91446c40   256  36406149       constant
0xffff91446c44   260  00000000       constant
0xffff91446c48   264  49b04519       constant
0xffff91446c4c   268  00000000       constant
0xffff91446c50   272  49b04241       constant
0xffff91446c54   276  00000000       constant
0xffff91446c58   280  49b04241       constant
0xffff91446c5c   284  00000000       constant
0xffff91446c60   288  49b04241       constant
0xffff91446c64   292  00000000       constant
0xffff91446c68   296  49b04241       constant
0xffff91446c6c   300  00000000       constant
0xffff91446c70   304  49b04241       constant
0xffff91446c74   308  00000000       constant
0xffff91446c78   312  49b04241       constant
0xffff91446c7c   316  00000000       constant
0xffff91446c80   320  49b04241       constant
0xffff91446c84   324  00000000       constant
0xffff91446c88   328  49b04241       constant
0xffff91446c8c   332  00000000       constant
0xffff91446c90   336  91406820       constant
0xffff91446c94   340  0000ffff       constant
0xffff91446c98   344  91406260       constant
0xffff91446c9c   348  0000ffff       constant
0xffff91446ca0   352  914068e0       constant
0xffff91446ca4   356  0000ffff       constant


Safepoints (size = 21)
0xffff91446c1c   220  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 19)
0xffff91446b60  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91446b78  embedded object  (0x49b04519 <the hole>)
0xffff91446b88  embedded object  (0x49b04241 <undefined>)
0xffff91446b90  embedded object  (0x49b04241 <undefined>)
0xffff91446b98  embedded object  (0x49b04241 <undefined>)
0xffff91446ba0  embedded object  (0x49b04241 <undefined>)
0xffff91446ba8  embedded object  (0x49b04241 <undefined>)
0xffff91446bb0  embedded object  (0x49b04241 <undefined>)
0xffff91446bb8  embedded object  (0x49b04241 <undefined>)
0xffff91446bc0  embedded object  (0x49b04241 <undefined>)
0xffff91446bf0  code target (STUB)  (0xffff91406820)
0xffff91446c14  code target (STUB)  (0xffff91406260)
0xffff91446c20  code target (STUB)  (0xffff914068e0)
0xffff91446c34  constant pool (size 116)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327685
name = CallICStub(args(5), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff91448400     0  add x4, x2, x3, asr #29
0xffff91448404     4  ldur x4, [x4, #15]
0xffff91448408     8  ldur x5, [x4, #7]
0xffff9144840c    12  cmp x5, x1
0xffff91448410    16  b.ne #+0x2c (addr 0xffff9144843c)
0xffff91448414    20  tbz w1, #0, #+0x28 (addr 0xffff9144843c)
0xffff91448418    24  add x2, x2, x3, asr #29
0xffff9144841c    28  add x2, x2, #0x18 (24)
0xffff91448420    32  ldur x3, [x2, #-1]
0xffff91448424    36  movz x16, #0x200000000
0xffff91448428    40  add x3, x3, x16
0xffff9144842c    44  stur x3, [x2, #-1]
0xffff91448430    48  movz x0, #0x5
0xffff91448434    52  ldr x16, pc+372 (addr 0x0000ffff914485a8)    ;; code: BUILTIN
0xffff91448438    56  br x16
0xffff9144843c    60  ldr x16, [x26, #2400]
0xffff91448440    64  cmp x4, x16
0xffff91448444    68  b.eq #+0x78 (addr 0xffff914484bc)
0xffff91448448    72  ldur x5, [x4, #-1]
0xffff9144844c    76  ldr x16, [x26, #2736]
0xffff91448450    80  cmp x5, x16
0xffff91448454    84  b.ne #+0x40 (addr 0xffff91448494)
0xffff91448458    88  ldur x5, [cp, #39]
0xffff9144845c    92  ldur x5, [x5, #95]
0xffff91448460    96  cmp x1, x5
0xffff91448464   100  b.ne #+0xec (addr 0xffff91448550)
0xffff91448468   104  movz x0, #0x5
0xffff9144846c   108  add x2, x2, x3, asr #29
0xffff91448470   112  add x2, x2, #0x18 (24)
0xffff91448474   116  ldur x3, [x2, #-1]
0xffff91448478   120  movz x16, #0x200000000
0xffff9144847c   124  add x3, x3, x16
0xffff91448480   128  stur x3, [x2, #-1]
0xffff91448484   132  mov x2, x4
0xffff91448488   136  mov x3, x1
0xffff9144848c   140  ldr x16, pc+292 (addr 0x0000ffff914485b0)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff91448490   144  br x16
0xffff91448494   148  ldr x16, [x26, #2568]
0xffff91448498   152  cmp x4, x16
0xffff9144849c   156  b.eq #+0xb4 (addr 0xffff91448550)
0xffff914484a0   160  ldur x5, [x4, #-1]
0xffff914484a4   164  ldrb w5, [x5, #11]
0xffff914484a8   168  cmp x5, #0xc9 (201)
0xffff914484ac   172  b.ne #+0xa4 (addr 0xffff91448550)
0xffff914484b0   176  add x4, x2, x3, asr #29
0xffff914484b4   180  ldr x5, [x26, #2400]
0xffff914484b8   184  stur x5, [x4, #15]
0xffff914484bc   188  movz x0, #0x5
0xffff914484c0   192  ldr x16, pc+248 (addr 0x0000ffff914485b8)    ;; code: BUILTIN
0xffff914484c4   196  br x16
0xffff914484c8   200  tbz w1, #0, #+0x88 (addr 0xffff91448550)
0xffff914484cc   204  ldur x5, [x1, #-1]
0xffff914484d0   208  ldrb w5, [x5, #11]
0xffff914484d4   212  cmp x5, #0xc9 (201)
0xffff914484d8   216  b.ne #+0x78 (addr 0xffff91448550)
0xffff914484dc   220  ldur x5, [cp, #39]
0xffff914484e0   224  ldur x5, [x5, #95]
0xffff914484e4   228  cmp x1, x5
0xffff914484e8   232  b.eq #+0x68 (addr 0xffff91448550)
0xffff914484ec   236  ldur x4, [x1, #39]
0xffff914484f0   240  ldur x4, [x4, #39]
0xffff914484f4   244  ldur x5, [cp, #39]
0xffff914484f8   248  cmp x4, x5
0xffff914484fc   252  b.ne #+0x54 (addr 0xffff91448550)
0xffff91448500   256  movz x5, #0x200000000
0xffff91448504   260  adds x4, x2, x3, asr #29
0xffff91448508   264  stur x5, [x4, #23]
0xffff9144850c   268  movz x16, #0xc00000000
0xffff91448510   272  sub csp, jssp, #0x10 (16)
0xffff91448514   276  stp fp, lr, [jssp, #-16]!
0xffff91448518   280  sub csp, jssp, #0x10 (16)
0xffff9144851c   284  str x16, [jssp, #-8]!
0xffff91448520   288  ldr x17, pc+160 (addr 0x0000ffff914485c0)    ;; object: 0xffff914483a1 <Code: CALL_IC>
0xffff91448524   292  sub csp, jssp, #0x10 (16)
0xffff91448528   296  str x17, [jssp, #-8]!
0xffff9144852c   300  add fp, jssp, #0x10 (16)
0xffff91448530   304  sub csp, jssp, #0x8 (8)
0xffff91448534   308  str x1, [jssp, #-8]!
0xffff91448538   312  ldr x16, pc+144 (addr 0x0000ffff914485c8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff9144853c   316  blr x16
0xffff91448540   320  ldr x1, [jssp], #8
0xffff91448544   324  mov jssp, fp
0xffff91448548   328  ldp fp, lr, [jssp], #16
0xffff9144854c   332  b #-0x11c (addr 0xffff91448430)
0xffff91448550   336  movz x16, #0xc00000000
0xffff91448554   340  sub csp, jssp, #0x10 (16)
0xffff91448558   344  stp fp, lr, [jssp, #-16]!
0xffff9144855c   348  sub csp, jssp, #0x10 (16)
0xffff91448560   352  str x16, [jssp, #-8]!
0xffff91448564   356  ldr x17, pc+108 (addr 0x0000ffff914485d0)    ;; object: 0xffff914483a1 <Code: CALL_IC>
0xffff91448568   360  sub csp, jssp, #0x10 (16)
0xffff9144856c   364  str x17, [jssp, #-8]!
0xffff91448570   368  add fp, jssp, #0x10 (16)
0xffff91448574   372  sub csp, jssp, #0x18 (24)
0xffff91448578   376  stp x3, x2, [jssp, #-24]!
0xffff9144857c   380  str x1, [jssp, #16]
0xffff91448580   384  movz x0, #0x3
0xffff91448584   388  ldr x1, pc+84 (addr 0x0000ffff914485d8)    ;; external reference (Runtime::CallIC_Miss)
0xffff91448588   392  ldr x16, pc+88 (addr 0x0000ffff914485e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9144858c   396  blr x16
0xffff91448590   400  mov x1, x0
0xffff91448594   404  mov jssp, fp
0xffff91448598   408  ldp fp, lr, [jssp], #16
0xffff9144859c   412  b #-0xe0 (addr 0xffff914484bc)
0xffff914485a0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff914485a4   420  d63f03e0       constant
0xffff914485a8   424  9141e600       constant
0xffff914485ac   428  0000ffff       constant
0xffff914485b0   432  91433b00       constant
0xffff914485b4   436  0000ffff       constant
0xffff914485b8   440  9141f6c0       constant
0xffff914485bc   444  0000ffff       constant
0xffff914485c0   448  914483a1       constant
0xffff914485c4   452  0000ffff       constant
0xffff914485c8   456  9140ddc0       constant
0xffff914485cc   460  0000ffff       constant
0xffff914485d0   464  914483a1       constant
0xffff914485d4   468  0000ffff       constant
0xffff914485d8   472  00c86928       constant
0xffff914485dc   476  00000000       constant
0xffff914485e0   480  91406060       constant
0xffff914485e4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff91448434  code target (BUILTIN)  (0xffff9141e600)
0xffff9144848c  code target (STUB)  (0xffff91433b00)
0xffff914484c0  code target (BUILTIN)  (0xffff9141f6c0)
0xffff91448520  embedded object  (0xffff914483a1 <Code: CALL_IC>)
0xffff91448538  code target (STUB)  (0xffff9140ddc0)
0xffff91448564  embedded object  (0xffff914483a1 <Code: CALL_IC>)
0xffff91448584  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff91448588  code target (STUB)  (0xffff91406060)
0xffff914485a0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327685
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff91448660     0  ldur x2, [fp, #-16]
0xffff91448664     4  ldur x2, [x2, #31]
0xffff91448668     8  ldur x2, [x2, #87]
0xffff9144866c    12  ldr x16, pc+20 (addr 0x0000ffff91448680)    ;; code: CALL_IC, GENERIC
0xffff91448670    16  br x16
0xffff91448674    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91448678    24  d63f03e0       constant
0xffff9144867c    28  d503201f       constant
0xffff91448680    32  91448400       constant
0xffff91448684    36  0000ffff       constant


RelocInfo (size = 7)
0xffff9144866c  code target (CALL_IC)  (0xffff91448400)
0xffff91448674  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = RECEIVER*RECEIVER -> KNOWN_RECEIVER
compare_operation = EQ
name = CompareICStub
compiler = unknown
Instructions (size = 192)
0xffff9144ad80     0  and x16, x0, x1
0xffff9144ad84     4  tbz w16, #0, #+0x2c (addr 0xffff9144adb0)
0xffff9144ad88     8  ldr x12, pc+152 (addr 0x0000ffff9144ae20)    ;; object: 0x49b747c1 WeakCell for 0x3640c131 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9144ad8c    12  ldur x12, [x12, #7]
0xffff9144ad90    16  ldur x10, [x0, #-1]
0xffff9144ad94    20  ldur x11, [x1, #-1]
0xffff9144ad98    24  cmp x10, x12
0xffff9144ad9c    28  b.ne #+0x14 (addr 0xffff9144adb0)
0xffff9144ada0    32  cmp x11, x12
0xffff9144ada4    36  b.ne #+0xc (addr 0xffff9144adb0)
0xffff9144ada8    40  sub x0, x0, x1
0xffff9144adac    44  ret
0xffff9144adb0    48  movz x16, #0xc00000000
0xffff9144adb4    52  sub csp, jssp, #0x10 (16)
0xffff9144adb8    56  stp fp, lr, [jssp, #-16]!
0xffff9144adbc    60  sub csp, jssp, #0x10 (16)
0xffff9144adc0    64  str x16, [jssp, #-8]!
0xffff9144adc4    68  ldr x17, pc+100 (addr 0x0000ffff9144ae28)    ;; object: 0xffff9144ad21 <Code: COMPARE_IC>
0xffff9144adc8    72  sub csp, jssp, #0x10 (16)
0xffff9144adcc    76  str x17, [jssp, #-8]!
0xffff9144add0    80  add fp, jssp, #0x10 (16)
0xffff9144add4    84  sub csp, jssp, #0x18 (24)
0xffff9144add8    88  stp lr, x0, [jssp, #-24]!
0xffff9144addc    92  str x1, [jssp, #16]
0xffff9144ade0    96  movz x10, #0x2d00000000
0xffff9144ade4   100  sub csp, jssp, #0x18 (24)
0xffff9144ade8   104  stp x10, x0, [jssp, #-24]!
0xffff9144adec   108  str x1, [jssp, #16]
0xffff9144adf0   112  movz x0, #0x3
0xffff9144adf4   116  ldr x1, pc+60 (addr 0x0000ffff9144ae30)    ;; external reference (Runtime::CompareIC_Miss)
0xffff9144adf8   120  ldr x16, pc+64 (addr 0x0000ffff9144ae38)    ;; code: STUB, CEntryStub, minor: 4
0xffff9144adfc   124  blr x16
0xffff9144ae00   128  add x11, x0, #0x5f (95)
0xffff9144ae04   132  ldr x1, [jssp, #16]
0xffff9144ae08   136  ldp lr, x0, [jssp], #24
0xffff9144ae0c   140  mov jssp, fp
0xffff9144ae10   144  ldp fp, lr, [jssp], #16
0xffff9144ae14   148  br x11
0xffff9144ae18   152  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff9144ae1c   156  d63f03e0       constant
0xffff9144ae20   160  49b747c1       constant
0xffff9144ae24   164  00000000       constant
0xffff9144ae28   168  9144ad21       constant
0xffff9144ae2c   172  0000ffff       constant
0xffff9144ae30   176  00c8a980       constant
0xffff9144ae34   180  00000000       constant
0xffff9144ae38   184  91406060       constant
0xffff9144ae3c   188  0000ffff       constant


RelocInfo (size = 11)
0xffff9144ad88  embedded object  (0x49b747c1 WeakCell for 0x3640c131 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9144adc4  embedded object  (0xffff9144ad21 <Code: COMPARE_IC>)
0xffff9144adf4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff9144adf8  code target (STUB)  (0xffff91406060)
0xffff9144ae18  constant pool (size 40)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff9144aea0     0  movz x16, #0xc00000000
0xffff9144aea4     4  sub csp, jssp, #0x10 (16)
0xffff9144aea8     8  stp fp, lr, [jssp, #-16]!
0xffff9144aeac    12  sub csp, jssp, #0x10 (16)
0xffff9144aeb0    16  str x16, [jssp, #-8]!
0xffff9144aeb4    20  ldr x17, pc+92 (addr 0x0000ffff9144af10)    ;; object: 0xffff9144ae41 <Code: COMPARE_IC>
0xffff9144aeb8    24  sub csp, jssp, #0x10 (16)
0xffff9144aebc    28  str x17, [jssp, #-8]!
0xffff9144aec0    32  add fp, jssp, #0x10 (16)
0xffff9144aec4    36  sub csp, jssp, #0x18 (24)
0xffff9144aec8    40  stp lr, x0, [jssp, #-24]!
0xffff9144aecc    44  str x1, [jssp, #16]
0xffff9144aed0    48  movz x10, #0x2f00000000
0xffff9144aed4    52  sub csp, jssp, #0x18 (24)
0xffff9144aed8    56  stp x10, x0, [jssp, #-24]!
0xffff9144aedc    60  str x1, [jssp, #16]
0xffff9144aee0    64  movz x0, #0x3
0xffff9144aee4    68  ldr x1, pc+52 (addr 0x0000ffff9144af18)    ;; external reference (Runtime::CompareIC_Miss)
0xffff9144aee8    72  ldr x16, pc+56 (addr 0x0000ffff9144af20)    ;; code: STUB, CEntryStub, minor: 4
0xffff9144aeec    76  blr x16
0xffff9144aef0    80  add x11, x0, #0x5f (95)
0xffff9144aef4    84  ldr x1, [jssp, #16]
0xffff9144aef8    88  ldp lr, x0, [jssp], #24
0xffff9144aefc    92  mov jssp, fp
0xffff9144af00    96  ldp fp, lr, [jssp], #16
0xffff9144af04   100  br x11
0xffff9144af08   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9144af0c   108  d63f03e0       constant
0xffff9144af10   112  9144ae41       constant
0xffff9144af14   116  0000ffff       constant
0xffff9144af18   120  00c8a980       constant
0xffff9144af1c   124  00000000       constant
0xffff9144af20   128  91406060       constant
0xffff9144af24   132  0000ffff       constant


RelocInfo (size = 10)
0xffff9144aeb4  embedded object  (0xffff9144ae41 <Code: COMPARE_IC>)
0xffff9144aee4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff9144aee8  code target (STUB)  (0xffff91406060)
0xffff9144af08  constant pool (size 32)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff9144b6c0     0  sub csp, jssp, #0x10 (16)
0xffff9144b6c4     4  stp x2, x1, [jssp, #-16]!
0xffff9144b6c8     8  ldur x7, [x0, #7]
0xffff9144b6cc    12  ubfx x1, x7, #52, #11
0xffff9144b6d0    16  cmp x1, #0x453 (1107)
0xffff9144b6d4    20  csel x7, xzr, x7, ge
0xffff9144b6d8    24  b.ge #+0x1c (addr 0xffff9144b6f4)
0xffff9144b6dc    28  ubfx x2, x7, #0, #52
0xffff9144b6e0    32  orr x2, x2, #0x10000000000000
0xffff9144b6e4    36  tst x7, #0x8000000000000000
0xffff9144b6e8    40  cneg x2, x2, ne
0xffff9144b6ec    44  sub x1, x1, #0x433 (1075)
0xffff9144b6f0    48  lsl x7, x2, x1
0xffff9144b6f4    52  ldp x2, x1, [jssp], #16
0xffff9144b6f8    56  ret


RelocInfo (size = 0)


kind = STUB
major_key = BinaryOpWithAllocationSiteStub
name = BinaryOpWithAllocationSiteStub(ADD_CreateAllocationMementos:String*Smi->String)
compiler = crankshaft
Instructions (size = 1377)
0xffff9144b760     0  movz x16, #0xa00000000
0xffff9144b764     4  sub csp, jssp, #0x10 (16)
0xffff9144b768     8  stp fp, lr, [jssp, #-16]!
0xffff9144b76c    12  mov fp, jssp
0xffff9144b770    16  sub csp, jssp, #0x28 (40)
0xffff9144b774    20  sub jssp, jssp, #0x28 (40)
0xffff9144b778    24  stur x16, [fp, #-8]
0xffff9144b77c    28  str x2, [jssp, #24]
0xffff9144b780    32  str x1, [jssp, #16]
0xffff9144b784    36  str x0, [jssp, #8]
0xffff9144b788    40  str cp, [jssp]
0xffff9144b78c    44  mov x3, cp
0xffff9144b790    48  tbz w1, #0, #+0x4a8 (addr 0xffff9144bc38)
0xffff9144b794    52  ldur x4, [x1, #-1]
0xffff9144b798    56  ldrb w4, [x4, #11]
0xffff9144b79c    60  tbnz w4, #7, #+0x4a4 (addr 0xffff9144bc40)
0xffff9144b7a0    64  ldr x4, [x26, #368]
0xffff9144b7a4    68  ldur w5, [x4, #11]
0xffff9144b7a8    72  asr w5, w5, #1
0xffff9144b7ac    76  sub w5, w5, #0x1 (1)
0xffff9144b7b0    80  tbz w0, #0, #+0xc (addr 0xffff9144b7bc)
0xffff9144b7b4    84  ldr x16, pc+1012 (addr 0x0000ffff9144bba8)    ;; lazy deoptimization bailout 2
0xffff9144b7b8    88  blr x16
0xffff9144b7bc    92  tbnz w0, #0, #+0x2f4 (addr 0xffff9144bab0)
0xffff9144b7c0    96  asr x7, x0, #32
0xffff9144b7c4   100  and w5, w5, w7
0xffff9144b7c8   104  lsl w5, w5, #1
0xffff9144b7cc   108  add x6, x4, #0xf (15)
0xffff9144b7d0   112  ldr x7, [x6, w5, sxtw #3]
0xffff9144b7d4   116  cmp x0, x7
0xffff9144b7d8   120  b.eq #+0x28 (addr 0xffff9144b800)
0xffff9144b7dc   124  sub csp, jssp, #0x8 (8)
0xffff9144b7e0   128  str x0, [jssp, #-8]!
0xffff9144b7e4   132  mov cp, x3
0xffff9144b7e8   136  movz x0, #0x1
0xffff9144b7ec   140  movz x1, #0xce00
0xffff9144b7f0   144  movk x1, #0xe3, lsl #16
0xffff9144b7f4   148  ldr x16, pc+956 (addr 0x0000ffff9144bbb0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9144b7f8   152  blr x16
0xffff9144b7fc   156  b #+0x10 (addr 0xffff9144b80c)
0xffff9144b800   160  add x0, x4, #0x17 (23)
0xffff9144b804   164  ldr x1, [x0, w5, sxtw #3]
0xffff9144b808   168  mov x0, x1
0xffff9144b80c   172  ldr x1, [jssp, #16]
0xffff9144b810   176  ldur w2, [x1, #19]
0xffff9144b814   180  ldur w3, [x0, #19]
0xffff9144b818   184  cbz w2, #+0x288 (addr 0xffff9144baa0)
0xffff9144b81c   188  cbz w3, #+0x27c (addr 0xffff9144ba98)
0xffff9144b820   192  add w4, w2, w3
0xffff9144b824   196  movn w16, #0xe0
0xffff9144b828   200  cmp w4, w16, lsr #4
0xffff9144b82c   204  b.hs #+0x41c (addr 0xffff9144bc48)
0xffff9144b830   208  cmp w4, #0xd (13)
0xffff9144b834   212  b.ge #+0x1bc (addr 0xffff9144b9f0)
0xffff9144b838   216  ldur x5, [x1, #-1]
0xffff9144b83c   220  ldrb w5, [x5, #11]
0xffff9144b840   224  ldur x6, [x0, #-1]
0xffff9144b844   228  ldrb w6, [x6, #11]
0xffff9144b848   232  orr w7, w5, w6
0xffff9144b84c   236  eor w5, w5, w6
0xffff9144b850   240  and w5, w5, #0x4
0xffff9144b854   244  cbnz w5, #+0xc (addr 0xffff9144b860)
0xffff9144b858   248  and w5, w7, #0x3
0xffff9144b85c   252  cbz w5, #+0x28 (addr 0xffff9144b884)
0xffff9144b860   256  sub csp, jssp, #0x10 (16)
0xffff9144b864   260  stp x0, x1, [jssp, #-16]!
0xffff9144b868   264  ldr cp, [jssp, #16]
0xffff9144b86c   268  movz x0, #0x2
0xffff9144b870   272  movz x1, #0xa6c0
0xffff9144b874   276  movk x1, #0xec, lsl #16
0xffff9144b878   280  ldr x16, pc+832 (addr 0x0000ffff9144bbb8)    ;; code: STUB, CEntryStub, minor: 4
0xffff9144b87c   284  blr x16
0xffff9144b880   288  b #+0x220 (addr 0xffff9144baa0)
0xffff9144b884   292  and w1, w7, #0x4
0xffff9144b888   296  cbnz w1, #+0x14 (addr 0xffff9144b89c)
0xffff9144b88c   300  lsl w1, w4, #1
0xffff9144b890   304  mov x5, x1
0xffff9144b894   308  ldr x1, pc+812 (addr 0x0000ffff9144bbc0)    ;; object: 0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9144b898   312  b #+0xc (addr 0xffff9144b8a4)
0xffff9144b89c   316  mov x5, x4
0xffff9144b8a0   320  ldr x1, pc+808 (addr 0x0000ffff9144bbc8)    ;; object: 0x36404bf9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9144b8a4   324  add w5, w5, #0x1f (31)
0xffff9144b8a8   328  and w5, w5, #0xfffffff8
0xffff9144b8ac   332  cmp w5, #0x96000 (614400)
0xffff9144b8b0   336  b.lt #+0x2c (addr 0xffff9144b8dc)
0xffff9144b8b4   340  sub csp, jssp, #0x10 (16)
0xffff9144b8b8   344  ldr x1, [jssp, #16]
0xffff9144b8bc   348  stp x0, x1, [jssp, #-16]!
0xffff9144b8c0   352  ldr cp, [jssp, #16]
0xffff9144b8c4   356  movz x0, #0x2
0xffff9144b8c8   360  movz x1, #0xa6c0
0xffff9144b8cc   364  movk x1, #0xec, lsl #16
0xffff9144b8d0   368  ldr x16, pc+768 (addr 0x0000ffff9144bbd0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9144b8d4   372  blr x16
0xffff9144b8d8   376  b #+0x1c8 (addr 0xffff9144baa0)
0xffff9144b8dc   380  add w6, w5, #0x10 (16)
0xffff9144b8e0   384  sxtw x6, w6
0xffff9144b8e4   388  movz x7, #0xf2c0
0xffff9144b8e8   392  movk x7, #0x4117, lsl #16
0xffff9144b8ec   396  ldp x9, x16, [x7]
0xffff9144b8f0   400  adds x8, x9, x6
0xffff9144b8f4   404  ccmp x8, x16, #nzCv, lo
0xffff9144b8f8   408  b.hi #+0x218 (addr 0xffff9144bb10)
0xffff9144b8fc   412  str x8, [x7]
0xffff9144b900   416  orr x9, x9, #0x1
0xffff9144b904   420  add x5, x9, w5, sxtw
0xffff9144b908   424  ldr x6, pc+720 (addr 0x0000ffff9144bbd8)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9144b90c   428  stur x6, [x5, #-1]
0xffff9144b910   432  ldr x6, [jssp, #24]
0xffff9144b914   436  stur x6, [x5, #7]
0xffff9144b918   440  ldur w5, [x6, #35]
0xffff9144b91c   444  add w5, w5, #0x1 (1)
0xffff9144b920   448  lsl x5, x5, #32
0xffff9144b924   452  stur x5, [x6, #31]
0xffff9144b928   456  stur x1, [x9, #-1]
0xffff9144b92c   460  movz w5, #0x3
0xffff9144b930   464  stur w5, [x9, #7]
0xffff9144b934   468  lsl x4, x4, #32
0xffff9144b938   472  stur x4, [x9, #15]
0xffff9144b93c   476  ldr x4, pc+676 (addr 0x0000ffff9144bbe0)    ;; object: 0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9144b940   480  cmp x1, x4
0xffff9144b944   484  b.eq #+0x54 (addr 0xffff9144b998)
0xffff9144b948   488  ldr x5, [jssp, #16]
0xffff9144b94c   492  movz x1, #0x0
0xffff9144b950   496  cmp w2, w1
0xffff9144b954   500  b.le #+0x1c (addr 0xffff9144b970)
0xffff9144b958   504  add x4, x5, #0x17 (23)
0xffff9144b95c   508  ldrb w6, [x4, w1, sxtw]
0xffff9144b960   512  add x4, x9, #0x17 (23)
0xffff9144b964   516  strb w6, [x4, w1, sxtw]
0xffff9144b968   520  add w1, w1, #0x1 (1)
0xffff9144b96c   524  b #-0x1c (addr 0xffff9144b950)
0xffff9144b970   528  movz x1, #0x0
0xffff9144b974   532  cmp w3, w1
0xffff9144b978   536  b.le #+0x70 (addr 0xffff9144b9e8)
0xffff9144b97c   540  add x4, x0, #0x17 (23)
0xffff9144b980   544  ldrb w5, [x4, w1, sxtw]
0xffff9144b984   548  add w4, w2, w1
0xffff9144b988   552  add x6, x9, #0x17 (23)
0xffff9144b98c   556  strb w5, [x6, w4, sxtw]
0xffff9144b990   560  add w1, w1, #0x1 (1)
0xffff9144b994   564  b #-0x20 (addr 0xffff9144b974)
0xffff9144b998   568  ldr x5, [jssp, #16]
0xffff9144b99c   572  movz x1, #0x0
0xffff9144b9a0   576  cmp w2, w1
0xffff9144b9a4   580  b.le #+0x1c (addr 0xffff9144b9c0)
0xffff9144b9a8   584  add x4, x5, #0x17 (23)
0xffff9144b9ac   588  ldrh w6, [x4, w1, sxtw #1]
0xffff9144b9b0   592  add x4, x9, #0x17 (23)
0xffff9144b9b4   596  strh w6, [x4, w1, sxtw #1]
0xffff9144b9b8   600  add w1, w1, #0x1 (1)
0xffff9144b9bc   604  b #-0x1c (addr 0xffff9144b9a0)
0xffff9144b9c0   608  movz x1, #0x0
0xffff9144b9c4   612  cmp w3, w1
0xffff9144b9c8   616  b.le #+0x20 (addr 0xffff9144b9e8)
0xffff9144b9cc   620  add x4, x0, #0x17 (23)
0xffff9144b9d0   624  ldrh w5, [x4, w1, sxtw #1]
0xffff9144b9d4   628  add w4, w2, w1
0xffff9144b9d8   632  add x6, x9, #0x17 (23)
0xffff9144b9dc   636  strh w5, [x6, w4, sxtw #1]
0xffff9144b9e0   640  add w1, w1, #0x1 (1)
0xffff9144b9e4   644  b #-0x20 (addr 0xffff9144b9c4)
0xffff9144b9e8   648  mov x0, x9
0xffff9144b9ec   652  b #+0xb4 (addr 0xffff9144baa0)
0xffff9144b9f0   656  ldr x6, [jssp, #24]
0xffff9144b9f4   660  mov x5, x1
0xffff9144b9f8   664  ldur x1, [x5, #-1]
0xffff9144b9fc   668  ldrb w1, [x1, #11]
0xffff9144ba00   672  ldur x2, [x0, #-1]
0xffff9144ba04   676  ldrb w2, [x2, #11]
0xffff9144ba08   680  movz x7, #0xf2c0
0xffff9144ba0c   684  movk x7, #0x4117, lsl #16
0xffff9144ba10   688  ldp x8, x3, [x7]
0xffff9144ba14   692  adds x16, x8, #0x38 (56)
0xffff9144ba18   696  ccmp x16, x3, #nzCv, lo
0xffff9144ba1c   700  b.hi #+0x13c (addr 0xffff9144bb58)
0xffff9144ba20   704  str x16, [x7]
0xffff9144ba24   708  orr x8, x8, #0x1
0xffff9144ba28   712  add x3, x8, #0x28 (40)
0xffff9144ba2c   716  ldr x7, pc+444 (addr 0x0000ffff9144bbe8)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9144ba30   720  stur x7, [x3, #-1]
0xffff9144ba34   724  stur x6, [x3, #7]
0xffff9144ba38   728  ldur w3, [x6, #35]
0xffff9144ba3c   732  add w3, w3, #0x1 (1)
0xffff9144ba40   736  lsl x3, x3, #32
0xffff9144ba44   740  stur x3, [x6, #31]
0xffff9144ba48   744  and w3, w1, w2
0xffff9144ba4c   748  eor w1, w1, w2
0xffff9144ba50   752  and w2, w3, #0xc
0xffff9144ba54   756  cbnz w2, #+0x1c (addr 0xffff9144ba70)
0xffff9144ba58   760  and w1, w1, #0xc
0xffff9144ba5c   764  cmp w1, #0xc (12)
0xffff9144ba60   768  b.eq #+0x10 (addr 0xffff9144ba70)
0xffff9144ba64   772  ldr x1, pc+396 (addr 0x0000ffff9144bbf0)    ;; object: 0x36404c51 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9144ba68   776  stur x1, [x8, #-1]
0xffff9144ba6c   780  b #+0xc (addr 0xffff9144ba78)
0xffff9144ba70   784  ldr x1, pc+392 (addr 0x0000ffff9144bbf8)    ;; object: 0x36404ca9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9144ba74   788  stur x1, [x8, #-1]
0xffff9144ba78   792  movz w1, #0x3
0xffff9144ba7c   796  stur w1, [x8, #7]
0xffff9144ba80   800  lsl x1, x4, #32
0xffff9144ba84   804  stur x1, [x8, #15]
0xffff9144ba88   808  stur x5, [x8, #23]
0xffff9144ba8c   812  stur x0, [x8, #31]
0xffff9144ba90   816  mov x0, x8
0xffff9144ba94   820  b #+0xc (addr 0xffff9144baa0)
0xffff9144ba98   824  mov x5, x1
0xffff9144ba9c   828  mov x0, x5
0xffff9144baa0   832  ldr cp, [jssp]
0xffff9144baa4   836  mov jssp, fp
0xffff9144baa8   840  ldp fp, lr, [jssp], #16
0xffff9144baac   844  ret
0xffff9144bab0   848  ldur x16, [x0, #-1]
0xffff9144bab4   852  ldr x17, [x26, #120]
0xffff9144bab8   856  cmp x16, x17
0xffff9144babc   860  b.ne #+0x30 (addr 0xffff9144baec)
0xffff9144bac0   864  ldur d30, [x0, #7]
0xffff9144bac4   868  fcvtzs x7, d30
0xffff9144bac8   872  cmp x7, #0x1 (1)
0xffff9144bacc   876  ccmn x7, #1, #nzcV, vc
0xffff9144bad0   880  b.vc #+0x18 (addr 0xffff9144bae8)
0xffff9144bad4   884  sub csp, jssp, #0x8 (8)
0xffff9144bad8   888  str lr, [jssp, #-8]!
0xffff9144badc   892  ldr x16, pc+292 (addr 0x0000ffff9144bc00)    ;; code: STUB, DoubleToIStub, minor: 127424
0xffff9144bae0   896  blr x16
0xffff9144bae4   900  ldr lr, [jssp], #8
0xffff9144bae8   904  b #+0x24 (addr 0xffff9144bb0c)
0xffff9144baec   908  ldp x7, x6, [x26, #64]
0xffff9144baf0   912  cmp x0, x7
0xffff9144baf4   916  cset x7, eq
0xffff9144baf8   920  ccmp x0, x6, #nZcv, ne
0xffff9144bafc   924  b.eq #+0x10 (addr 0xffff9144bb0c)
0xffff9144bb00   928  ldr x16, [x26, #40]
0xffff9144bb04   932  cmp x0, x16
0xffff9144bb08   936  b.ne #+0x148 (addr 0xffff9144bc50)
0xffff9144bb0c   940  b #-0x348 (addr 0xffff9144b7c4)
0xffff9144bb10   944  movz x9, #0x0
0xffff9144bb14   948  mov x16, lr
0xffff9144bb18   952  ldr x17, pc+240 (addr 0x0000ffff9144bc08)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9144bb1c   956  blr x17
0xffff9144bb20   960  lsl x0, x6, #32
0xffff9144bb24   964  movz x10, #0x0
0xffff9144bb28   968  sub csp, jssp, #0x10 (16)
0xffff9144bb2c   972  stp x10, x0, [jssp, #-16]!
0xffff9144bb30   976  ldur cp, [fp, #-40]
0xffff9144bb34   980  movz x0, #0x2
0xffff9144bb38   984  movz x1, #0x5b88
0xffff9144bb3c   988  movk x1, #0xe2, lsl #16
0xffff9144bb40   992  ldr x16, pc+208 (addr 0x0000ffff9144bc10)    ;; code: STUB, CEntryStub, minor: 5
0xffff9144bb44   996  blr x16
0xffff9144bb48  1000  str x0, [jssp, #72]
0xffff9144bb4c  1004  ldr x16, pc+204 (addr 0x0000ffff9144bc18)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9144bb50  1008  blr x16
0xffff9144bb54  1012  b #-0x250 (addr 0xffff9144b904)
0xffff9144bb58  1016  movz x8, #0x0
0xffff9144bb5c  1020  mov x16, lr
0xffff9144bb60  1024  ldr x17, pc+192 (addr 0x0000ffff9144bc20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9144bb64  1028  blr x17
0xffff9144bb68  1032  movz x0, #0x3800000000
0xffff9144bb6c  1036  movz x10, #0x0
0xffff9144bb70  1040  sub csp, jssp, #0x10 (16)
0xffff9144bb74  1044  stp x10, x0, [jssp, #-16]!
0xffff9144bb78  1048  ldur cp, [fp, #-40]
0xffff9144bb7c  1052  movz x0, #0x2
0xffff9144bb80  1056  movz x1, #0x5b88
0xffff9144bb84  1060  movk x1, #0xe2, lsl #16
0xffff9144bb88  1064  ldr x16, pc+160 (addr 0x0000ffff9144bc28)    ;; code: STUB, CEntryStub, minor: 5
0xffff9144bb8c  1068  blr x16
0xffff9144bb90  1072  str x0, [jssp, #64]
0xffff9144bb94  1076  ldr x16, pc+156 (addr 0x0000ffff9144bc30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9144bb98  1080  blr x16
0xffff9144bb9c  1084  b #-0x174 (addr 0xffff9144ba28)
0xffff9144bba0  1088  580004bf       constant pool begin (num_const = 37)    ;; constant pool
0xffff9144bba4  1092  d63f03e0       constant
0xffff9144bba8  1096  91206010       constant
0xffff9144bbac  1100  0000ffff       constant
0xffff9144bbb0  1104  91406060       constant
0xffff9144bbb4  1108  0000ffff       constant
0xffff9144bbb8  1112  91406060       constant
0xffff9144bbbc  1116  0000ffff       constant
0xffff9144bbc0  1120  36404ba1       constant
0xffff9144bbc4  1124  00000000       constant
0xffff9144bbc8  1128  36404bf9       constant
0xffff9144bbcc  1132  00000000       constant
0xffff9144bbd0  1136  91406060       constant
0xffff9144bbd4  1140  0000ffff       constant
0xffff9144bbd8  1144  36405d81       constant
0xffff9144bbdc  1148  00000000       constant
0xffff9144bbe0  1152  36404ba1       constant
0xffff9144bbe4  1156  00000000       constant
0xffff9144bbe8  1160  36405d81       constant
0xffff9144bbec  1164  00000000       constant
0xffff9144bbf0  1168  36404c51       constant
0xffff9144bbf4  1172  00000000       constant
0xffff9144bbf8  1176  36404ca9       constant
0xffff9144bbfc  1180  00000000       constant
0xffff9144bc00  1184  9144b6c0       constant
0xffff9144bc04  1188  0000ffff       constant
0xffff9144bc08  1192  91406820       constant
0xffff9144bc0c  1196  0000ffff       constant
0xffff9144bc10  1200  91406260       constant
0xffff9144bc14  1204  0000ffff       constant
0xffff9144bc18  1208  914068e0       constant
0xffff9144bc1c  1212  0000ffff       constant
0xffff9144bc20  1216  91406820       constant
0xffff9144bc24  1220  0000ffff       constant
0xffff9144bc28  1224  91406260       constant
0xffff9144bc2c  1228  0000ffff       constant
0xffff9144bc30  1232  914068e0       constant
0xffff9144bc34  1236  0000ffff       constant
0xffff9144bc38  1240  movz x16, #0x0
0xffff9144bc3c  1244  bl #+0x1c (addr 0xffff9144bc58)
0xffff9144bc40  1248  movz x16, #0x8
0xffff9144bc44  1252  bl #+0x14 (addr 0xffff9144bc58)
0xffff9144bc48  1256  movz x16, #0x20
0xffff9144bc4c  1260  bl #+0xc (addr 0xffff9144bc58)
0xffff9144bc50  1264  movz x16, #0x38
0xffff9144bc54  1268  bl #+0x4 (addr 0xffff9144bc58)
0xffff9144bc58  1272  ldr x17, pc+24 (addr 0x0000ffff9144bc70)    ;; lazy deoptimization bailout 0
0xffff9144bc5c  1276  add x17, x17, x16
0xffff9144bc60  1280  br x17
0xffff9144bc64  1284  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9144bc68  1288  d63f03e0       constant
0xffff9144bc6c  1292  d503201f       constant
0xffff9144bc70  1296  91206000       constant
0xffff9144bc74  1300  0000ffff       constant


Safepoints (size = 73)
0xffff9144b7fc   156  1111000 (sp -> fp)       3
0xffff9144b880   288  1111000 (sp -> fp)       5
0xffff9144b8d8   376  1111000 (sp -> fp)       6
0xffff9144bb48  1000  1011000 | x0 | x1 | x9 (sp -> fp)  <none> argc: 2
0xffff9144bb90  1072  1011000 | x0 | x5 | x6 | x8 (sp -> fp)  <none> argc: 2

RelocInfo (size = 45)
0xffff9144b7b4  runtime entry
0xffff9144b7f4  code target (STUB)  (0xffff91406060)
0xffff9144b878  code target (STUB)  (0xffff91406060)
0xffff9144b894  embedded object  (0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9144b8a0  embedded object  (0x36404bf9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9144b8d0  code target (STUB)  (0xffff91406060)
0xffff9144b908  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9144b93c  embedded object  (0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9144ba2c  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9144ba64  embedded object  (0x36404c51 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9144ba70  embedded object  (0x36404ca9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9144badc  code target (STUB)  (0xffff9144b6c0)
0xffff9144bb18  code target (STUB)  (0xffff91406820)
0xffff9144bb40  code target (STUB)  (0xffff91406260)
0xffff9144bb4c  code target (STUB)  (0xffff914068e0)
0xffff9144bb60  code target (STUB)  (0xffff91406820)
0xffff9144bb88  code target (STUB)  (0xffff91406260)
0xffff9144bb94  code target (STUB)  (0xffff914068e0)
0xffff9144bba0  constant pool (size 152)
0xffff9144bc58  runtime entry
0xffff9144bc64  constant pool (size 20)


kind = BINARY_OP_IC
major_key = BinaryOpICWithAllocationSiteStub
ic_state = MONOMORPHIC
extra_ic_state = 2631
type = NORMAL
name = BinaryOpICWithAllocationSiteStub(ADD_CreateAllocationMementos:String*Smi->String)
compiler = unknown
Instructions (size = 40)
0xffff9144bd40     0  ldr x2, pc+24 (addr 0x0000ffff9144bd58)    ;; object: 0x49b04241 <undefined>
0xffff9144bd44     4  ldr x16, pc+28 (addr 0x0000ffff9144bd60)    ;; code: STUB, BinaryOpWithAllocationSiteStub, minor: 2631
0xffff9144bd48     8  br x16
0xffff9144bd4c    12  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff9144bd50    16  d63f03e0       constant
0xffff9144bd54    20  d503201f       constant
0xffff9144bd58    24  49b04241       constant
0xffff9144bd5c    28  00000000       constant
0xffff9144bd60    32  9144b760       constant
0xffff9144bd64    36  0000ffff       constant


RelocInfo (size = 8)
0xffff9144bd40  embedded object  (0x49b04241 <undefined>)
0xffff9144bd44  code target (STUB)  (0xffff9144b760)
0xffff9144bd4c  constant pool (size 28)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 269)
0xffff9144be80     0  movz x2, #0xf2c0
0xffff9144be84     4  movk x2, #0x4117, lsl #16
0xffff9144be88     8  ldp x3, x0, [x2]
0xffff9144be8c    12  adds x16, x3, #0x38 (56)
0xffff9144be90    16  ccmp x16, x0, #nzCv, lo
0xffff9144be94    20  b.hi #+0x44 (addr 0xffff9144bed8)
0xffff9144be98    24  str x16, [x2]
0xffff9144be9c    28  orr x3, x3, #0x1
0xffff9144bea0    32  ldr x0, pc+168 (addr 0x0000ffff9144bf48)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9144bea4    36  stur x0, [x3, #-1]
0xffff9144bea8    40  movz x0, #0x500000000
0xffff9144beac    44  stur x0, [x3, #7]
0xffff9144beb0    48  stur x1, [x3, #15]
0xffff9144beb4    52  stur cp, [x3, #23]
0xffff9144beb8    56  ldr x0, pc+152 (addr 0x0000ffff9144bf50)    ;; object: 0x49b04519 <the hole>
0xffff9144bebc    60  stur x0, [x3, #31]
0xffff9144bec0    64  ldur x0, [cp, #39]
0xffff9144bec4    68  stur x0, [x3, #39]
0xffff9144bec8    72  ldr x0, pc+144 (addr 0x0000ffff9144bf58)    ;; object: 0x49b04241 <undefined>
0xffff9144becc    76  stur x0, [x3, #47]
0xffff9144bed0    80  mov x0, x3
0xffff9144bed4    84  ret
0xffff9144bed8    88  sub csp, jssp, #0x10 (16)
0xffff9144bedc    92  stp fp, lr, [jssp, #-16]!
0xffff9144bee0    96  movz fp, #0xa00000000
0xffff9144bee4   100  sub csp, jssp, #0x8 (8)
0xffff9144bee8   104  str fp, [jssp, #-8]!
0xffff9144beec   108  add fp, jssp, #0x8 (8)
0xffff9144bef0   112  movz x3, #0x0
0xffff9144bef4   116  mov x16, lr
0xffff9144bef8   120  ldr x17, pc+104 (addr 0x0000ffff9144bf60)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9144befc   124  blr x17
0xffff9144bf00   128  movz x0, #0x3800000000
0xffff9144bf04   132  movz x10, #0x0
0xffff9144bf08   136  sub csp, jssp, #0x10 (16)
0xffff9144bf0c   140  stp x10, x0, [jssp, #-16]!
0xffff9144bf10   144  movz x0, #0x2
0xffff9144bf14   148  movz x1, #0x5b88
0xffff9144bf18   152  movk x1, #0xe2, lsl #16
0xffff9144bf1c   156  ldr x16, pc+76 (addr 0x0000ffff9144bf68)    ;; code: STUB, CEntryStub, minor: 5
0xffff9144bf20   160  blr x16
0xffff9144bf24   164  str x0, [jssp, #24]
0xffff9144bf28   168  ldr x16, pc+72 (addr 0x0000ffff9144bf70)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9144bf2c   172  blr x16
0xffff9144bf30   176  ldr lr, [jssp, #16]
0xffff9144bf34   180  ldp xzr, fp, [jssp], #24
0xffff9144bf38   184  b #-0x98 (addr 0xffff9144bea0)
0xffff9144bf3c   188  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff9144bf40   192  d63f03e0       constant
0xffff9144bf44   196  d503201f       constant
0xffff9144bf48   200  36406149       constant
0xffff9144bf4c   204  00000000       constant
0xffff9144bf50   208  49b04519       constant
0xffff9144bf54   212  00000000       constant
0xffff9144bf58   216  49b04241       constant
0xffff9144bf5c   220  00000000       constant
0xffff9144bf60   224  91406820       constant
0xffff9144bf64   228  0000ffff       constant
0xffff9144bf68   232  91406260       constant
0xffff9144bf6c   236  0000ffff       constant
0xffff9144bf70   240  914068e0       constant
0xffff9144bf74   244  0000ffff       constant


Safepoints (size = 21)
0xffff9144bf24   164  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 12)
0xffff9144bea0  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9144beb8  embedded object  (0x49b04519 <the hole>)
0xffff9144bec8  embedded object  (0x49b04241 <undefined>)
0xffff9144bef8  code target (STUB)  (0xffff91406820)
0xffff9144bf1c  code target (STUB)  (0xffff91406260)
0xffff9144bf28  code target (STUB)  (0xffff914068e0)
0xffff9144bf3c  constant pool (size 60)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff9144c160     0  ldur x0, [x1, #-1]
0xffff9144c164     4  ldur x0, [x0, #47]
0xffff9144c168     8  ldur x0, [x0, #239]
0xffff9144c16c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91452500     0  ldur x0, [x1, #-1]
0xffff91452504     4  ldur x0, [x0, #47]
0xffff91452508     8  movz x16, #0x7f7
0xffff9145250c    12  ldr x0, [x0, x16]
0xffff91452510    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393220
name = CallICStub(args(4), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff91452580     0  add x4, x2, x3, asr #29
0xffff91452584     4  ldur x4, [x4, #15]
0xffff91452588     8  ldur x5, [x4, #7]
0xffff9145258c    12  cmp x5, x1
0xffff91452590    16  b.ne #+0x2c (addr 0xffff914525bc)
0xffff91452594    20  tbz w1, #0, #+0x28 (addr 0xffff914525bc)
0xffff91452598    24  add x2, x2, x3, asr #29
0xffff9145259c    28  add x2, x2, #0x18 (24)
0xffff914525a0    32  ldur x3, [x2, #-1]
0xffff914525a4    36  movz x16, #0x200000000
0xffff914525a8    40  add x3, x3, x16
0xffff914525ac    44  stur x3, [x2, #-1]
0xffff914525b0    48  movz x0, #0x4
0xffff914525b4    52  ldr x16, pc+372 (addr 0x0000ffff91452728)    ;; code: BUILTIN
0xffff914525b8    56  br x16
0xffff914525bc    60  ldr x16, [x26, #2400]
0xffff914525c0    64  cmp x4, x16
0xffff914525c4    68  b.eq #+0x78 (addr 0xffff9145263c)
0xffff914525c8    72  ldur x5, [x4, #-1]
0xffff914525cc    76  ldr x16, [x26, #2736]
0xffff914525d0    80  cmp x5, x16
0xffff914525d4    84  b.ne #+0x40 (addr 0xffff91452614)
0xffff914525d8    88  ldur x5, [cp, #39]
0xffff914525dc    92  ldur x5, [x5, #95]
0xffff914525e0    96  cmp x1, x5
0xffff914525e4   100  b.ne #+0xec (addr 0xffff914526d0)
0xffff914525e8   104  movz x0, #0x4
0xffff914525ec   108  add x2, x2, x3, asr #29
0xffff914525f0   112  add x2, x2, #0x18 (24)
0xffff914525f4   116  ldur x3, [x2, #-1]
0xffff914525f8   120  movz x16, #0x200000000
0xffff914525fc   124  add x3, x3, x16
0xffff91452600   128  stur x3, [x2, #-1]
0xffff91452604   132  mov x2, x4
0xffff91452608   136  mov x3, x1
0xffff9145260c   140  ldr x16, pc+292 (addr 0x0000ffff91452730)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff91452610   144  br x16
0xffff91452614   148  ldr x16, [x26, #2568]
0xffff91452618   152  cmp x4, x16
0xffff9145261c   156  b.eq #+0xb4 (addr 0xffff914526d0)
0xffff91452620   160  ldur x5, [x4, #-1]
0xffff91452624   164  ldrb w5, [x5, #11]
0xffff91452628   168  cmp x5, #0xc9 (201)
0xffff9145262c   172  b.ne #+0xa4 (addr 0xffff914526d0)
0xffff91452630   176  add x4, x2, x3, asr #29
0xffff91452634   180  ldr x5, [x26, #2400]
0xffff91452638   184  stur x5, [x4, #15]
0xffff9145263c   188  movz x0, #0x4
0xffff91452640   192  ldr x16, pc+248 (addr 0x0000ffff91452738)    ;; code: BUILTIN
0xffff91452644   196  br x16
0xffff91452648   200  tbz w1, #0, #+0x88 (addr 0xffff914526d0)
0xffff9145264c   204  ldur x5, [x1, #-1]
0xffff91452650   208  ldrb w5, [x5, #11]
0xffff91452654   212  cmp x5, #0xc9 (201)
0xffff91452658   216  b.ne #+0x78 (addr 0xffff914526d0)
0xffff9145265c   220  ldur x5, [cp, #39]
0xffff91452660   224  ldur x5, [x5, #95]
0xffff91452664   228  cmp x1, x5
0xffff91452668   232  b.eq #+0x68 (addr 0xffff914526d0)
0xffff9145266c   236  ldur x4, [x1, #39]
0xffff91452670   240  ldur x4, [x4, #39]
0xffff91452674   244  ldur x5, [cp, #39]
0xffff91452678   248  cmp x4, x5
0xffff9145267c   252  b.ne #+0x54 (addr 0xffff914526d0)
0xffff91452680   256  movz x5, #0x200000000
0xffff91452684   260  adds x4, x2, x3, asr #29
0xffff91452688   264  stur x5, [x4, #23]
0xffff9145268c   268  movz x16, #0xc00000000
0xffff91452690   272  sub csp, jssp, #0x10 (16)
0xffff91452694   276  stp fp, lr, [jssp, #-16]!
0xffff91452698   280  sub csp, jssp, #0x10 (16)
0xffff9145269c   284  str x16, [jssp, #-8]!
0xffff914526a0   288  ldr x17, pc+160 (addr 0x0000ffff91452740)    ;; object: 0xffff91452521 <Code: CALL_IC>
0xffff914526a4   292  sub csp, jssp, #0x10 (16)
0xffff914526a8   296  str x17, [jssp, #-8]!
0xffff914526ac   300  add fp, jssp, #0x10 (16)
0xffff914526b0   304  sub csp, jssp, #0x8 (8)
0xffff914526b4   308  str x1, [jssp, #-8]!
0xffff914526b8   312  ldr x16, pc+144 (addr 0x0000ffff91452748)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff914526bc   316  blr x16
0xffff914526c0   320  ldr x1, [jssp], #8
0xffff914526c4   324  mov jssp, fp
0xffff914526c8   328  ldp fp, lr, [jssp], #16
0xffff914526cc   332  b #-0x11c (addr 0xffff914525b0)
0xffff914526d0   336  movz x16, #0xc00000000
0xffff914526d4   340  sub csp, jssp, #0x10 (16)
0xffff914526d8   344  stp fp, lr, [jssp, #-16]!
0xffff914526dc   348  sub csp, jssp, #0x10 (16)
0xffff914526e0   352  str x16, [jssp, #-8]!
0xffff914526e4   356  ldr x17, pc+108 (addr 0x0000ffff91452750)    ;; object: 0xffff91452521 <Code: CALL_IC>
0xffff914526e8   360  sub csp, jssp, #0x10 (16)
0xffff914526ec   364  str x17, [jssp, #-8]!
0xffff914526f0   368  add fp, jssp, #0x10 (16)
0xffff914526f4   372  sub csp, jssp, #0x18 (24)
0xffff914526f8   376  stp x3, x2, [jssp, #-24]!
0xffff914526fc   380  str x1, [jssp, #16]
0xffff91452700   384  movz x0, #0x3
0xffff91452704   388  ldr x1, pc+84 (addr 0x0000ffff91452758)    ;; external reference (Runtime::CallIC_Miss)
0xffff91452708   392  ldr x16, pc+88 (addr 0x0000ffff91452760)    ;; code: STUB, CEntryStub, minor: 4
0xffff9145270c   396  blr x16
0xffff91452710   400  mov x1, x0
0xffff91452714   404  mov jssp, fp
0xffff91452718   408  ldp fp, lr, [jssp], #16
0xffff9145271c   412  b #-0xe0 (addr 0xffff9145263c)
0xffff91452720   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff91452724   420  d63f03e0       constant
0xffff91452728   424  9141e820       constant
0xffff9145272c   428  0000ffff       constant
0xffff91452730   432  91433b00       constant
0xffff91452734   436  0000ffff       constant
0xffff91452738   440  9141f820       constant
0xffff9145273c   444  0000ffff       constant
0xffff91452740   448  91452521       constant
0xffff91452744   452  0000ffff       constant
0xffff91452748   456  9140ddc0       constant
0xffff9145274c   460  0000ffff       constant
0xffff91452750   464  91452521       constant
0xffff91452754   468  0000ffff       constant
0xffff91452758   472  00c86928       constant
0xffff9145275c   476  00000000       constant
0xffff91452760   480  91406060       constant
0xffff91452764   484  0000ffff       constant


RelocInfo (size = 19)
0xffff914525b4  code target (BUILTIN)  (0xffff9141e820)
0xffff9145260c  code target (STUB)  (0xffff91433b00)
0xffff91452640  code target (BUILTIN)  (0xffff9141f820)
0xffff914526a0  embedded object  (0xffff91452521 <Code: CALL_IC>)
0xffff914526b8  code target (STUB)  (0xffff9140ddc0)
0xffff914526e4  embedded object  (0xffff91452521 <Code: CALL_IC>)
0xffff91452704  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff91452708  code target (STUB)  (0xffff91406060)
0xffff91452720  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393220
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff914527e0     0  ldur x2, [fp, #-16]
0xffff914527e4     4  ldur x2, [x2, #31]
0xffff914527e8     8  ldur x2, [x2, #87]
0xffff914527ec    12  ldr x16, pc+20 (addr 0x0000ffff91452800)    ;; code: CALL_IC, GENERIC
0xffff914527f0    16  br x16
0xffff914527f4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914527f8    24  d63f03e0       constant
0xffff914527fc    28  d503201f       constant
0xffff91452800    32  91452580       constant
0xffff91452804    36  0000ffff       constant


RelocInfo (size = 7)
0xffff914527ec  code target (CALL_IC)  (0xffff91452580)
0xffff914527f4  constant pool (size 20)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914569e0     0  ldur x0, [x1, #7]
0xffff914569e4     4  movz x16, #0x1d7
0xffff914569e8     8  ldr x0, [x0, x16]
0xffff914569ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff91457320     0  ldur x0, [x1, #7]
0xffff91457324     4  movz x16, #0x1df
0xffff91457328     8  ldr x0, [x0, x16]
0xffff9145732c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914573a0     0  ldur x0, [x1, #-1]
0xffff914573a4     4  ldur x0, [x0, #47]
0xffff914573a8     8  movz x16, #0x5cf
0xffff914573ac    12  ldr x0, [x0, x16]
0xffff914573b0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 1165)
0xffff91457420     0  movz x2, #0xf2c0
0xffff91457424     4  movk x2, #0x4117, lsl #16
0xffff91457428     8  ldp x3, x0, [x2]
0xffff9145742c    12  adds x16, x3, #0x1c8 (456)
0xffff91457430    16  ccmp x16, x0, #nzCv, lo
0xffff91457434    20  b.hi #+0x234 (addr 0xffff91457668)
0xffff91457438    24  str x16, [x2]
0xffff9145743c    28  orr x3, x3, #0x1
0xffff91457440    32  ldr x0, pc+664 (addr 0x0000ffff914576d8)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91457444    36  stur x0, [x3, #-1]
0xffff91457448    40  movz x0, #0x3700000000
0xffff9145744c    44  stur x0, [x3, #7]
0xffff91457450    48  stur x1, [x3, #15]
0xffff91457454    52  stur cp, [x3, #23]
0xffff91457458    56  ldr x0, pc+648 (addr 0x0000ffff914576e0)    ;; object: 0x49b04519 <the hole>
0xffff9145745c    60  stur x0, [x3, #31]
0xffff91457460    64  ldur x0, [cp, #39]
0xffff91457464    68  stur x0, [x3, #39]
0xffff91457468    72  ldr x0, pc+640 (addr 0x0000ffff914576e8)    ;; object: 0x49b04241 <undefined>
0xffff9145746c    76  stur x0, [x3, #47]
0xffff91457470    80  ldr x0, pc+640 (addr 0x0000ffff914576f0)    ;; object: 0x49b04241 <undefined>
0xffff91457474    84  stur x0, [x3, #55]
0xffff91457478    88  ldr x0, pc+640 (addr 0x0000ffff914576f8)    ;; object: 0x49b04241 <undefined>
0xffff9145747c    92  stur x0, [x3, #63]
0xffff91457480    96  ldr x0, pc+640 (addr 0x0000ffff91457700)    ;; object: 0x49b04241 <undefined>
0xffff91457484   100  stur x0, [x3, #71]
0xffff91457488   104  ldr x0, pc+640 (addr 0x0000ffff91457708)    ;; object: 0x49b04241 <undefined>
0xffff9145748c   108  stur x0, [x3, #79]
0xffff91457490   112  ldr x0, pc+640 (addr 0x0000ffff91457710)    ;; object: 0x49b04241 <undefined>
0xffff91457494   116  stur x0, [x3, #87]
0xffff91457498   120  ldr x0, pc+640 (addr 0x0000ffff91457718)    ;; object: 0x49b04241 <undefined>
0xffff9145749c   124  stur x0, [x3, #95]
0xffff914574a0   128  ldr x0, pc+640 (addr 0x0000ffff91457720)    ;; object: 0x49b04241 <undefined>
0xffff914574a4   132  stur x0, [x3, #103]
0xffff914574a8   136  ldr x0, pc+640 (addr 0x0000ffff91457728)    ;; object: 0x49b04241 <undefined>
0xffff914574ac   140  stur x0, [x3, #111]
0xffff914574b0   144  ldr x0, pc+640 (addr 0x0000ffff91457730)    ;; object: 0x49b04241 <undefined>
0xffff914574b4   148  stur x0, [x3, #119]
0xffff914574b8   152  ldr x0, pc+640 (addr 0x0000ffff91457738)    ;; object: 0x49b04241 <undefined>
0xffff914574bc   156  stur x0, [x3, #127]
0xffff914574c0   160  ldr x0, pc+640 (addr 0x0000ffff91457740)    ;; object: 0x49b04241 <undefined>
0xffff914574c4   164  stur x0, [x3, #135]
0xffff914574c8   168  ldr x0, pc+640 (addr 0x0000ffff91457748)    ;; object: 0x49b04241 <undefined>
0xffff914574cc   172  stur x0, [x3, #143]
0xffff914574d0   176  ldr x0, pc+640 (addr 0x0000ffff91457750)    ;; object: 0x49b04241 <undefined>
0xffff914574d4   180  stur x0, [x3, #151]
0xffff914574d8   184  ldr x0, pc+640 (addr 0x0000ffff91457758)    ;; object: 0x49b04241 <undefined>
0xffff914574dc   188  stur x0, [x3, #159]
0xffff914574e0   192  ldr x0, pc+640 (addr 0x0000ffff91457760)    ;; object: 0x49b04241 <undefined>
0xffff914574e4   196  stur x0, [x3, #167]
0xffff914574e8   200  ldr x0, pc+640 (addr 0x0000ffff91457768)    ;; object: 0x49b04241 <undefined>
0xffff914574ec   204  stur x0, [x3, #175]
0xffff914574f0   208  ldr x0, pc+640 (addr 0x0000ffff91457770)    ;; object: 0x49b04241 <undefined>
0xffff914574f4   212  stur x0, [x3, #183]
0xffff914574f8   216  ldr x0, pc+640 (addr 0x0000ffff91457778)    ;; object: 0x49b04241 <undefined>
0xffff914574fc   220  stur x0, [x3, #191]
0xffff91457500   224  ldr x0, pc+640 (addr 0x0000ffff91457780)    ;; object: 0x49b04241 <undefined>
0xffff91457504   228  stur x0, [x3, #199]
0xffff91457508   232  ldr x0, pc+640 (addr 0x0000ffff91457788)    ;; object: 0x49b04241 <undefined>
0xffff9145750c   236  stur x0, [x3, #207]
0xffff91457510   240  ldr x0, pc+640 (addr 0x0000ffff91457790)    ;; object: 0x49b04241 <undefined>
0xffff91457514   244  stur x0, [x3, #215]
0xffff91457518   248  ldr x0, pc+640 (addr 0x0000ffff91457798)    ;; object: 0x49b04241 <undefined>
0xffff9145751c   252  stur x0, [x3, #223]
0xffff91457520   256  ldr x0, pc+640 (addr 0x0000ffff914577a0)    ;; object: 0x49b04241 <undefined>
0xffff91457524   260  stur x0, [x3, #231]
0xffff91457528   264  ldr x0, pc+640 (addr 0x0000ffff914577a8)    ;; object: 0x49b04241 <undefined>
0xffff9145752c   268  stur x0, [x3, #239]
0xffff91457530   272  ldr x0, pc+640 (addr 0x0000ffff914577b0)    ;; object: 0x49b04241 <undefined>
0xffff91457534   276  stur x0, [x3, #247]
0xffff91457538   280  ldr x0, pc+640 (addr 0x0000ffff914577b8)    ;; object: 0x49b04241 <undefined>
0xffff9145753c   284  stur x0, [x3, #255]
0xffff91457540   288  ldr x0, pc+640 (addr 0x0000ffff914577c0)    ;; object: 0x49b04241 <undefined>
0xffff91457544   292  movz x16, #0x107
0xffff91457548   296  str x0, [x3, x16]
0xffff9145754c   300  ldr x0, pc+636 (addr 0x0000ffff914577c8)    ;; object: 0x49b04241 <undefined>
0xffff91457550   304  movz x16, #0x10f
0xffff91457554   308  str x0, [x3, x16]
0xffff91457558   312  ldr x0, pc+632 (addr 0x0000ffff914577d0)    ;; object: 0x49b04241 <undefined>
0xffff9145755c   316  movz x16, #0x117
0xffff91457560   320  str x0, [x3, x16]
0xffff91457564   324  ldr x0, pc+628 (addr 0x0000ffff914577d8)    ;; object: 0x49b04241 <undefined>
0xffff91457568   328  movz x16, #0x11f
0xffff9145756c   332  str x0, [x3, x16]
0xffff91457570   336  ldr x0, pc+624 (addr 0x0000ffff914577e0)    ;; object: 0x49b04241 <undefined>
0xffff91457574   340  movz x16, #0x127
0xffff91457578   344  str x0, [x3, x16]
0xffff9145757c   348  ldr x0, pc+620 (addr 0x0000ffff914577e8)    ;; object: 0x49b04241 <undefined>
0xffff91457580   352  movz x16, #0x12f
0xffff91457584   356  str x0, [x3, x16]
0xffff91457588   360  ldr x0, pc+616 (addr 0x0000ffff914577f0)    ;; object: 0x49b04241 <undefined>
0xffff9145758c   364  movz x16, #0x137
0xffff91457590   368  str x0, [x3, x16]
0xffff91457594   372  ldr x0, pc+612 (addr 0x0000ffff914577f8)    ;; object: 0x49b04241 <undefined>
0xffff91457598   376  movz x16, #0x13f
0xffff9145759c   380  str x0, [x3, x16]
0xffff914575a0   384  ldr x0, pc+608 (addr 0x0000ffff91457800)    ;; object: 0x49b04241 <undefined>
0xffff914575a4   388  movz x16, #0x147
0xffff914575a8   392  str x0, [x3, x16]
0xffff914575ac   396  ldr x0, pc+604 (addr 0x0000ffff91457808)    ;; object: 0x49b04241 <undefined>
0xffff914575b0   400  movz x16, #0x14f
0xffff914575b4   404  str x0, [x3, x16]
0xffff914575b8   408  ldr x0, pc+600 (addr 0x0000ffff91457810)    ;; object: 0x49b04241 <undefined>
0xffff914575bc   412  movz x16, #0x157
0xffff914575c0   416  str x0, [x3, x16]
0xffff914575c4   420  ldr x0, pc+596 (addr 0x0000ffff91457818)    ;; object: 0x49b04241 <undefined>
0xffff914575c8   424  movz x16, #0x15f
0xffff914575cc   428  str x0, [x3, x16]
0xffff914575d0   432  ldr x0, pc+592 (addr 0x0000ffff91457820)    ;; object: 0x49b04241 <undefined>
0xffff914575d4   436  movz x16, #0x167
0xffff914575d8   440  str x0, [x3, x16]
0xffff914575dc   444  ldr x0, pc+588 (addr 0x0000ffff91457828)    ;; object: 0x49b04241 <undefined>
0xffff914575e0   448  movz x16, #0x16f
0xffff914575e4   452  str x0, [x3, x16]
0xffff914575e8   456  ldr x0, pc+584 (addr 0x0000ffff91457830)    ;; object: 0x49b04241 <undefined>
0xffff914575ec   460  movz x16, #0x177
0xffff914575f0   464  str x0, [x3, x16]
0xffff914575f4   468  ldr x0, pc+580 (addr 0x0000ffff91457838)    ;; object: 0x49b04241 <undefined>
0xffff914575f8   472  movz x16, #0x17f
0xffff914575fc   476  str x0, [x3, x16]
0xffff91457600   480  ldr x0, pc+576 (addr 0x0000ffff91457840)    ;; object: 0x49b04241 <undefined>
0xffff91457604   484  movz x16, #0x187
0xffff91457608   488  str x0, [x3, x16]
0xffff9145760c   492  ldr x0, pc+572 (addr 0x0000ffff91457848)    ;; object: 0x49b04241 <undefined>
0xffff91457610   496  movz x16, #0x18f
0xffff91457614   500  str x0, [x3, x16]
0xffff91457618   504  ldr x0, pc+568 (addr 0x0000ffff91457850)    ;; object: 0x49b04241 <undefined>
0xffff9145761c   508  movz x16, #0x197
0xffff91457620   512  str x0, [x3, x16]
0xffff91457624   516  ldr x0, pc+564 (addr 0x0000ffff91457858)    ;; object: 0x49b04241 <undefined>
0xffff91457628   520  movz x16, #0x19f
0xffff9145762c   524  str x0, [x3, x16]
0xffff91457630   528  ldr x0, pc+560 (addr 0x0000ffff91457860)    ;; object: 0x49b04241 <undefined>
0xffff91457634   532  movz x16, #0x1a7
0xffff91457638   536  str x0, [x3, x16]
0xffff9145763c   540  ldr x0, pc+556 (addr 0x0000ffff91457868)    ;; object: 0x49b04241 <undefined>
0xffff91457640   544  movz x16, #0x1af
0xffff91457644   548  str x0, [x3, x16]
0xffff91457648   552  ldr x0, pc+552 (addr 0x0000ffff91457870)    ;; object: 0x49b04241 <undefined>
0xffff9145764c   556  movz x16, #0x1b7
0xffff91457650   560  str x0, [x3, x16]
0xffff91457654   564  ldr x0, pc+548 (addr 0x0000ffff91457878)    ;; object: 0x49b04241 <undefined>
0xffff91457658   568  movz x16, #0x1bf
0xffff9145765c   572  str x0, [x3, x16]
0xffff91457660   576  mov x0, x3
0xffff91457664   580  ret
0xffff91457668   584  sub csp, jssp, #0x10 (16)
0xffff9145766c   588  stp fp, lr, [jssp, #-16]!
0xffff91457670   592  movz fp, #0xa00000000
0xffff91457674   596  sub csp, jssp, #0x8 (8)
0xffff91457678   600  str fp, [jssp, #-8]!
0xffff9145767c   604  add fp, jssp, #0x8 (8)
0xffff91457680   608  movz x3, #0x0
0xffff91457684   612  mov x16, lr
0xffff91457688   616  ldr x17, pc+504 (addr 0x0000ffff91457880)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9145768c   620  blr x17
0xffff91457690   624  movz x0, #0x1c800000000
0xffff91457694   628  movz x10, #0x0
0xffff91457698   632  sub csp, jssp, #0x10 (16)
0xffff9145769c   636  stp x10, x0, [jssp, #-16]!
0xffff914576a0   640  movz x0, #0x2
0xffff914576a4   644  movz x1, #0x5b88
0xffff914576a8   648  movk x1, #0xe2, lsl #16
0xffff914576ac   652  ldr x16, pc+476 (addr 0x0000ffff91457888)    ;; code: STUB, CEntryStub, minor: 5
0xffff914576b0   656  blr x16
0xffff914576b4   660  str x0, [jssp, #24]
0xffff914576b8   664  ldr x16, pc+472 (addr 0x0000ffff91457890)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914576bc   668  blr x16
0xffff914576c0   672  ldr lr, [jssp, #16]
0xffff914576c4   676  ldp xzr, fp, [jssp], #24
0xffff914576c8   680  b #-0x288 (addr 0xffff91457440)
0xffff914576cc   684  58000e5f       constant pool begin (num_const = 114)    ;; constant pool
0xffff914576d0   688  d63f03e0       constant
0xffff914576d4   692  d503201f       constant
0xffff914576d8   696  36406149       constant
0xffff914576dc   700  00000000       constant
0xffff914576e0   704  49b04519       constant
0xffff914576e4   708  00000000       constant
0xffff914576e8   712  49b04241       constant
0xffff914576ec   716  00000000       constant
0xffff914576f0   720  49b04241       constant
0xffff914576f4   724  00000000       constant
0xffff914576f8   728  49b04241       constant
0xffff914576fc   732  00000000       constant
0xffff91457700   736  49b04241       constant
0xffff91457704   740  00000000       constant
0xffff91457708   744  49b04241       constant
0xffff9145770c   748  00000000       constant
0xffff91457710   752  49b04241       constant
0xffff91457714   756  00000000       constant
0xffff91457718   760  49b04241       constant
0xffff9145771c   764  00000000       constant
0xffff91457720   768  49b04241       constant
0xffff91457724   772  00000000       constant
0xffff91457728   776  49b04241       constant
0xffff9145772c   780  00000000       constant
0xffff91457730   784  49b04241       constant
0xffff91457734   788  00000000       constant
0xffff91457738   792  49b04241       constant
0xffff9145773c   796  00000000       constant
0xffff91457740   800  49b04241       constant
0xffff91457744   804  00000000       constant
0xffff91457748   808  49b04241       constant
0xffff9145774c   812  00000000       constant
0xffff91457750   816  49b04241       constant
0xffff91457754   820  00000000       constant
0xffff91457758   824  49b04241       constant
0xffff9145775c   828  00000000       constant
0xffff91457760   832  49b04241       constant
0xffff91457764   836  00000000       constant
0xffff91457768   840  49b04241       constant
0xffff9145776c   844  00000000       constant
0xffff91457770   848  49b04241       constant
0xffff91457774   852  00000000       constant
0xffff91457778   856  49b04241       constant
0xffff9145777c   860  00000000       constant
0xffff91457780   864  49b04241       constant
0xffff91457784   868  00000000       constant
0xffff91457788   872  49b04241       constant
0xffff9145778c   876  00000000       constant
0xffff91457790   880  49b04241       constant
0xffff91457794   884  00000000       constant
0xffff91457798   888  49b04241       constant
0xffff9145779c   892  00000000       constant
0xffff914577a0   896  49b04241       constant
0xffff914577a4   900  00000000       constant
0xffff914577a8   904  49b04241       constant
0xffff914577ac   908  00000000       constant
0xffff914577b0   912  49b04241       constant
0xffff914577b4   916  00000000       constant
0xffff914577b8   920  49b04241       constant
0xffff914577bc   924  00000000       constant
0xffff914577c0   928  49b04241       constant
0xffff914577c4   932  00000000       constant
0xffff914577c8   936  49b04241       constant
0xffff914577cc   940  00000000       constant
0xffff914577d0   944  49b04241       constant
0xffff914577d4   948  00000000       constant
0xffff914577d8   952  49b04241       constant
0xffff914577dc   956  00000000       constant
0xffff914577e0   960  49b04241       constant
0xffff914577e4   964  00000000       constant
0xffff914577e8   968  49b04241       constant
0xffff914577ec   972  00000000       constant
0xffff914577f0   976  49b04241       constant
0xffff914577f4   980  00000000       constant
0xffff914577f8   984  49b04241       constant
0xffff914577fc   988  00000000       constant
0xffff91457800   992  49b04241       constant
0xffff91457804   996  00000000       constant
0xffff91457808  1000  49b04241       constant
0xffff9145780c  1004  00000000       constant
0xffff91457810  1008  49b04241       constant
0xffff91457814  1012  00000000       constant
0xffff91457818  1016  49b04241       constant
0xffff9145781c  1020  00000000       constant
0xffff91457820  1024  49b04241       constant
0xffff91457824  1028  00000000       constant
0xffff91457828  1032  49b04241       constant
0xffff9145782c  1036  00000000       constant
0xffff91457830  1040  49b04241       constant
0xffff91457834  1044  00000000       constant
0xffff91457838  1048  49b04241       constant
0xffff9145783c  1052  00000000       constant
0xffff91457840  1056  49b04241       constant
0xffff91457844  1060  00000000       constant
0xffff91457848  1064  49b04241       constant
0xffff9145784c  1068  00000000       constant
0xffff91457850  1072  49b04241       constant
0xffff91457854  1076  00000000       constant
0xffff91457858  1080  49b04241       constant
0xffff9145785c  1084  00000000       constant
0xffff91457860  1088  49b04241       constant
0xffff91457864  1092  00000000       constant
0xffff91457868  1096  49b04241       constant
0xffff9145786c  1100  00000000       constant
0xffff91457870  1104  49b04241       constant
0xffff91457874  1108  00000000       constant
0xffff91457878  1112  49b04241       constant
0xffff9145787c  1116  00000000       constant
0xffff91457880  1120  91406820       constant
0xffff91457884  1124  0000ffff       constant
0xffff91457888  1128  91406260       constant
0xffff9145788c  1132  0000ffff       constant
0xffff91457890  1136  914068e0       constant
0xffff91457894  1140  0000ffff       constant


Safepoints (size = 21)
0xffff914576b4   660  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 62)
0xffff91457440  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91457458  embedded object  (0x49b04519 <the hole>)
0xffff91457468  embedded object  (0x49b04241 <undefined>)
0xffff91457470  embedded object  (0x49b04241 <undefined>)
0xffff91457478  embedded object  (0x49b04241 <undefined>)
0xffff91457480  embedded object  (0x49b04241 <undefined>)
0xffff91457488  embedded object  (0x49b04241 <undefined>)
0xffff91457490  embedded object  (0x49b04241 <undefined>)
0xffff91457498  embedded object  (0x49b04241 <undefined>)
0xffff914574a0  embedded object  (0x49b04241 <undefined>)
0xffff914574a8  embedded object  (0x49b04241 <undefined>)
0xffff914574b0  embedded object  (0x49b04241 <undefined>)
0xffff914574b8  embedded object  (0x49b04241 <undefined>)
0xffff914574c0  embedded object  (0x49b04241 <undefined>)
0xffff914574c8  embedded object  (0x49b04241 <undefined>)
0xffff914574d0  embedded object  (0x49b04241 <undefined>)
0xffff914574d8  embedded object  (0x49b04241 <undefined>)
0xffff914574e0  embedded object  (0x49b04241 <undefined>)
0xffff914574e8  embedded object  (0x49b04241 <undefined>)
0xffff914574f0  embedded object  (0x49b04241 <undefined>)
0xffff914574f8  embedded object  (0x49b04241 <undefined>)
0xffff91457500  embedded object  (0x49b04241 <undefined>)
0xffff91457508  embedded object  (0x49b04241 <undefined>)
0xffff91457510  embedded object  (0x49b04241 <undefined>)
0xffff91457518  embedded object  (0x49b04241 <undefined>)
0xffff91457520  embedded object  (0x49b04241 <undefined>)
0xffff91457528  embedded object  (0x49b04241 <undefined>)
0xffff91457530  embedded object  (0x49b04241 <undefined>)
0xffff91457538  embedded object  (0x49b04241 <undefined>)
0xffff91457540  embedded object  (0x49b04241 <undefined>)
0xffff9145754c  embedded object  (0x49b04241 <undefined>)
0xffff91457558  embedded object  (0x49b04241 <undefined>)
0xffff91457564  embedded object  (0x49b04241 <undefined>)
0xffff91457570  embedded object  (0x49b04241 <undefined>)
0xffff9145757c  embedded object  (0x49b04241 <undefined>)
0xffff91457588  embedded object  (0x49b04241 <undefined>)
0xffff91457594  embedded object  (0x49b04241 <undefined>)
0xffff914575a0  embedded object  (0x49b04241 <undefined>)
0xffff914575ac  embedded object  (0x49b04241 <undefined>)
0xffff914575b8  embedded object  (0x49b04241 <undefined>)
0xffff914575c4  embedded object  (0x49b04241 <undefined>)
0xffff914575d0  embedded object  (0x49b04241 <undefined>)
0xffff914575dc  embedded object  (0x49b04241 <undefined>)
0xffff914575e8  embedded object  (0x49b04241 <undefined>)
0xffff914575f4  embedded object  (0x49b04241 <undefined>)
0xffff91457600  embedded object  (0x49b04241 <undefined>)
0xffff9145760c  embedded object  (0x49b04241 <undefined>)
0xffff91457618  embedded object  (0x49b04241 <undefined>)
0xffff91457624  embedded object  (0x49b04241 <undefined>)
0xffff91457630  embedded object  (0x49b04241 <undefined>)
0xffff9145763c  embedded object  (0x49b04241 <undefined>)
0xffff91457648  embedded object  (0x49b04241 <undefined>)
0xffff91457654  embedded object  (0x49b04241 <undefined>)
0xffff91457688  code target (STUB)  (0xffff91406820)
0xffff914576ac  code target (STUB)  (0xffff91406260)
0xffff914576b8  code target (STUB)  (0xffff914068e0)
0xffff914576cc  constant pool (size 460)


kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff91459c60     0  mov x6, x0
0xffff91459c64     4  tbnz w6, #0, #+0x5c (addr 0xffff91459cc0)
0xffff91459c68     8  ldur x3, [x1, #7]
0xffff91459c6c    12  stur x6, [x3, #23]
0xffff91459c70    16  stur x5, [x1, #-1]
0xffff91459c74    20  tbz w5, #0, #+0x34 (addr 0xffff91459ca8)
0xffff91459c78    24  sub x2, x1, #0x1 (1)
0xffff91459c7c    28  and x5, x5, #0xfffffffffff00000
0xffff91459c80    32  ldr x5, [x5, #8]
0xffff91459c84    36  tbz w5, #1, #+0x24 (addr 0xffff91459ca8)
0xffff91459c88    40  and x5, x1, #0xfffffffffff00000
0xffff91459c8c    44  ldr x5, [x5, #8]
0xffff91459c90    48  tbz w5, #2, #+0x18 (addr 0xffff91459ca8)
0xffff91459c94    52  sub csp, jssp, #0x8 (8)
0xffff91459c98    56  str lr, [jssp, #-8]!
0xffff91459c9c    60  ldr x16, pc+28 (addr 0x0000ffff91459cb8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff91459ca0    64  blr x16
0xffff91459ca4    68  ldr lr, [jssp], #8
0xffff91459ca8    72  ret
0xffff91459cac    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91459cb0    80  d63f03e0       constant
0xffff91459cb4    84  d503201f       constant
0xffff91459cb8    88  91438080       constant
0xffff91459cbc    92  0000ffff       constant
0xffff91459cc0    96  movz x16, #0x0
0xffff91459cc4   100  sub csp, jssp, #0x10 (16)
0xffff91459cc8   104  stp fp, lr, [jssp, #-16]!
0xffff91459ccc   108  bl #+0x4 (addr 0xffff91459cd0)
0xffff91459cd0   112  movz x17, #0xa00000000
0xffff91459cd4   116  sub csp, jssp, #0x10 (16)
0xffff91459cd8   120  stp x17, cp, [jssp, #-16]!
0xffff91459cdc   124  add fp, jssp, #0x10 (16)
0xffff91459ce0   128  ldr x17, pc+24 (addr 0x0000ffff91459cf8)    ;; lazy deoptimization bailout 0
0xffff91459ce4   132  add x17, x17, x16
0xffff91459ce8   136  br x17
0xffff91459cec   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91459cf0   144  d63f03e0       constant
0xffff91459cf4   148  d503201f       constant
0xffff91459cf8   152  91206000       constant
0xffff91459cfc   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff91459c9c  code target (STUB)  (0xffff91438080)
0xffff91459cac  constant pool (size 20)
0xffff91459ce0  runtime entry
0xffff91459cec  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = update
compiler = unknown
Instructions (size = 128)
0xffff91459d80     0  sub csp, jssp, #0x8 (8)
0xffff91459d84     4  str x3, [jssp, #-8]!
0xffff91459d88     8  sub csp, jssp, #0x8 (8)
0xffff91459d8c    12  str x4, [jssp, #-8]!
0xffff91459d90    16  ldr x5, pc+72 (addr 0x0000ffff91459dd8)    ;; object: 0x49b88701 WeakCell for 0x36410d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91459d94    20  ldur x5, [x5, #7]
0xffff91459d98    24  tbz w5, #0, #+0x20 (addr 0xffff91459db8)
0xffff91459d9c    28  ldursw x4, [x5, #15]
0xffff91459da0    32  tbnz w4, #23, #+0x18 (addr 0xffff91459db8)
0xffff91459da4    36  ldr x4, [jssp], #8
0xffff91459da8    40  ldr x3, [jssp], #8
0xffff91459dac    44  ldr x2, pc+52 (addr 0x0000ffff91459de0)    ;; object: 0x49b83a31 <String[6]: update>
0xffff91459db0    48  ldr x16, pc+56 (addr 0x0000ffff91459de8)    ;; code: HANDLER, StoreTransitionStub, minor: 172035
0xffff91459db4    52  br x16
0xffff91459db8    56  ldr x2, pc+56 (addr 0x0000ffff91459df0)    ;; object: 0x49b83a31 <String[6]: update>
0xffff91459dbc    60  ldr x4, [jssp], #8
0xffff91459dc0    64  ldr x3, [jssp], #8
0xffff91459dc4    68  ldr x16, pc+52 (addr 0x0000ffff91459df8)    ;; code: BUILTIN
0xffff91459dc8    72  br x16
0xffff91459dcc    76  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff91459dd0    80  d63f03e0       constant
0xffff91459dd4    84  d503201f       constant
0xffff91459dd8    88  49b88701       constant
0xffff91459ddc    92  00000000       constant
0xffff91459de0    96  49b83a31       constant
0xffff91459de4   100  00000000       constant
0xffff91459de8   104  91459c60       constant
0xffff91459dec   108  0000ffff       constant
0xffff91459df0   112  49b83a31       constant
0xffff91459df4   116  00000000       constant
0xffff91459df8   120  91422420       constant
0xffff91459dfc   124  0000ffff       constant


RelocInfo (size = 11)
0xffff91459d90  embedded object  (0x49b88701 WeakCell for 0x36410d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91459dac  embedded object  (0x49b83a31 <String[6]: update>)
0xffff91459db0  code target (HANDLER)  (0xffff91459c60)
0xffff91459db8  embedded object  (0x49b83a31 <String[6]: update>)
0xffff91459dc4  code target (BUILTIN)  (0xffff91422420)
0xffff91459dcc  constant pool (size 52)

kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff91459e60     0  mov x6, x0
0xffff91459e64     4  tbnz w6, #0, #+0x5c (addr 0xffff91459ec0)
0xffff91459e68     8  ldur x3, [x1, #7]
0xffff91459e6c    12  stur x6, [x3, #31]
0xffff91459e70    16  stur x5, [x1, #-1]
0xffff91459e74    20  tbz w5, #0, #+0x34 (addr 0xffff91459ea8)
0xffff91459e78    24  sub x2, x1, #0x1 (1)
0xffff91459e7c    28  and x5, x5, #0xfffffffffff00000
0xffff91459e80    32  ldr x5, [x5, #8]
0xffff91459e84    36  tbz w5, #1, #+0x24 (addr 0xffff91459ea8)
0xffff91459e88    40  and x5, x1, #0xfffffffffff00000
0xffff91459e8c    44  ldr x5, [x5, #8]
0xffff91459e90    48  tbz w5, #2, #+0x18 (addr 0xffff91459ea8)
0xffff91459e94    52  sub csp, jssp, #0x8 (8)
0xffff91459e98    56  str lr, [jssp, #-8]!
0xffff91459e9c    60  ldr x16, pc+28 (addr 0x0000ffff91459eb8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff91459ea0    64  blr x16
0xffff91459ea4    68  ldr lr, [jssp], #8
0xffff91459ea8    72  ret
0xffff91459eac    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91459eb0    80  d63f03e0       constant
0xffff91459eb4    84  d503201f       constant
0xffff91459eb8    88  91438080       constant
0xffff91459ebc    92  0000ffff       constant
0xffff91459ec0    96  movz x16, #0x0
0xffff91459ec4   100  sub csp, jssp, #0x10 (16)
0xffff91459ec8   104  stp fp, lr, [jssp, #-16]!
0xffff91459ecc   108  bl #+0x4 (addr 0xffff91459ed0)
0xffff91459ed0   112  movz x17, #0xa00000000
0xffff91459ed4   116  sub csp, jssp, #0x10 (16)
0xffff91459ed8   120  stp x17, cp, [jssp, #-16]!
0xffff91459edc   124  add fp, jssp, #0x10 (16)
0xffff91459ee0   128  ldr x17, pc+24 (addr 0x0000ffff91459ef8)    ;; lazy deoptimization bailout 0
0xffff91459ee4   132  add x17, x17, x16
0xffff91459ee8   136  br x17
0xffff91459eec   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91459ef0   144  d63f03e0       constant
0xffff91459ef4   148  d503201f       constant
0xffff91459ef8   152  91206000       constant
0xffff91459efc   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff91459e9c  code target (STUB)  (0xffff91438080)
0xffff91459eac  constant pool (size 20)
0xffff91459ee0  runtime entry
0xffff91459eec  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = delete
compiler = unknown
Instructions (size = 128)
0xffff91459f80     0  sub csp, jssp, #0x8 (8)
0xffff91459f84     4  str x3, [jssp, #-8]!
0xffff91459f88     8  sub csp, jssp, #0x8 (8)
0xffff91459f8c    12  str x4, [jssp, #-8]!
0xffff91459f90    16  ldr x5, pc+72 (addr 0x0000ffff91459fd8)    ;; object: 0x49b88809 WeakCell for 0x36410dd9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91459f94    20  ldur x5, [x5, #7]
0xffff91459f98    24  tbz w5, #0, #+0x20 (addr 0xffff91459fb8)
0xffff91459f9c    28  ldursw x4, [x5, #15]
0xffff91459fa0    32  tbnz w4, #23, #+0x18 (addr 0xffff91459fb8)
0xffff91459fa4    36  ldr x4, [jssp], #8
0xffff91459fa8    40  ldr x3, [jssp], #8
0xffff91459fac    44  ldr x2, pc+52 (addr 0x0000ffff91459fe0)    ;; object: 0x49b83a51 <String[6]: delete>
0xffff91459fb0    48  ldr x16, pc+56 (addr 0x0000ffff91459fe8)    ;; code: HANDLER, StoreTransitionStub, minor: 172036
0xffff91459fb4    52  br x16
0xffff91459fb8    56  ldr x2, pc+56 (addr 0x0000ffff91459ff0)    ;; object: 0x49b83a51 <String[6]: delete>
0xffff91459fbc    60  ldr x4, [jssp], #8
0xffff91459fc0    64  ldr x3, [jssp], #8
0xffff91459fc4    68  ldr x16, pc+52 (addr 0x0000ffff91459ff8)    ;; code: BUILTIN
0xffff91459fc8    72  br x16
0xffff91459fcc    76  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff91459fd0    80  d63f03e0       constant
0xffff91459fd4    84  d503201f       constant
0xffff91459fd8    88  49b88809       constant
0xffff91459fdc    92  00000000       constant
0xffff91459fe0    96  49b83a51       constant
0xffff91459fe4   100  00000000       constant
0xffff91459fe8   104  91459e60       constant
0xffff91459fec   108  0000ffff       constant
0xffff91459ff0   112  49b83a51       constant
0xffff91459ff4   116  00000000       constant
0xffff91459ff8   120  91422420       constant
0xffff91459ffc   124  0000ffff       constant


RelocInfo (size = 11)
0xffff91459f90  embedded object  (0x49b88809 WeakCell for 0x36410dd9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91459fac  embedded object  (0x49b83a51 <String[6]: delete>)
0xffff91459fb0  code target (HANDLER)  (0xffff91459e60)
0xffff91459fb8  embedded object  (0x49b83a51 <String[6]: delete>)
0xffff91459fc4  code target (BUILTIN)  (0xffff91422420)
0xffff91459fcc  constant pool (size 52)

kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 549)
0xffff9145a060     0  ldur x6, [x1, #7]
0xffff9145a064     4  ldur w7, [x6, #11]
0xffff9145a068     8  adds w8, w7, #0x3 (3)
0xffff9145a06c    12  b.vs #+0x1a4 (addr 0xffff9145a210)
0xffff9145a070    16  movz w16, #0x95ff
0xffff9145a074    20  cmp w8, w16, lsl #1
0xffff9145a078    24  b.hs #+0x1a8 (addr 0xffff9145a220)
0xffff9145a07c    28  lsl x9, x8, #32
0xffff9145a080    32  lsl w10, w8, #3
0xffff9145a084    36  add w10, w10, #0x10 (16)
0xffff9145a088    40  sxtw x10, w10
0xffff9145a08c    44  movz x11, #0xf2c0
0xffff9145a090    48  movk x11, #0x4117, lsl #16
0xffff9145a094    52  ldp x13, x16, [x11]
0xffff9145a098    56  adds x12, x13, x10
0xffff9145a09c    60  ccmp x12, x16, #nzCv, lo
0xffff9145a0a0    64  b.hi #+0xc8 (addr 0xffff9145a168)
0xffff9145a0a4    68  str x12, [x11]
0xffff9145a0a8    72  orr x13, x13, #0x1
0xffff9145a0ac    76  ldr x10, pc+300 (addr 0x0000ffff9145a1d8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9145a0b0    80  stur x10, [x13, #-1]
0xffff9145a0b4    84  stur x9, [x13, #7]
0xffff9145a0b8    88  cmp w7, w8
0xffff9145a0bc    92  b.ge #+0x18 (addr 0xffff9145a0d4)
0xffff9145a0c0    96  sub w8, w8, #0x1 (1)
0xffff9145a0c4   100  ldr x9, pc+284 (addr 0x0000ffff9145a1e0)    ;; object: 0x49b04241 <undefined>
0xffff9145a0c8   104  add x10, x13, #0xf (15)
0xffff9145a0cc   108  str x9, [x10, w8, sxtw #3]
0xffff9145a0d0   112  b #-0x18 (addr 0xffff9145a0b8)
0xffff9145a0d4   116  cmp w7, #0x0 (0)
0xffff9145a0d8   120  b.le #+0x1c (addr 0xffff9145a0f4)
0xffff9145a0dc   124  sub w7, w7, #0x1 (1)
0xffff9145a0e0   128  add x8, x6, #0xf (15)
0xffff9145a0e4   132  ldr x9, [x8, w7, sxtw #3]
0xffff9145a0e8   136  add x8, x13, #0xf (15)
0xffff9145a0ec   140  str x9, [x8, w7, sxtw #3]
0xffff9145a0f0   144  b #-0x1c (addr 0xffff9145a0d4)
0xffff9145a0f4   148  stur x13, [x1, #7]
0xffff9145a0f8   152  add x6, x1, #0x7 (7)
0xffff9145a0fc   156  and x13, x1, #0xfffffffffff00000
0xffff9145a100   160  ldr x13, [x13, #8]
0xffff9145a104   164  tbz w13, #2, #+0x18 (addr 0xffff9145a11c)
0xffff9145a108   168  sub csp, jssp, #0x8 (8)
0xffff9145a10c   172  str lr, [jssp, #-8]!
0xffff9145a110   176  ldr x16, pc+216 (addr 0x0000ffff9145a1e8)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff9145a114   180  blr x16
0xffff9145a118   184  ldr lr, [jssp], #8
0xffff9145a11c   188  mov x6, x0
0xffff9145a120   192  tbnz w6, #0, #+0x110 (addr 0xffff9145a230)
0xffff9145a124   196  ldur x3, [x1, #7]
0xffff9145a128   200  stur x6, [x3, #39]
0xffff9145a12c   204  stur x5, [x1, #-1]
0xffff9145a130   208  tbz w5, #0, #+0x34 (addr 0xffff9145a164)
0xffff9145a134   212  sub x2, x1, #0x1 (1)
0xffff9145a138   216  and x5, x5, #0xfffffffffff00000
0xffff9145a13c   220  ldr x5, [x5, #8]
0xffff9145a140   224  tbz w5, #1, #+0x24 (addr 0xffff9145a164)
0xffff9145a144   228  and x5, x1, #0xfffffffffff00000
0xffff9145a148   232  ldr x5, [x5, #8]
0xffff9145a14c   236  tbz w5, #2, #+0x18 (addr 0xffff9145a164)
0xffff9145a150   240  sub csp, jssp, #0x8 (8)
0xffff9145a154   244  str lr, [jssp, #-8]!
0xffff9145a158   248  ldr x16, pc+152 (addr 0x0000ffff9145a1f0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9145a15c   252  blr x16
0xffff9145a160   256  ldr lr, [jssp], #8
0xffff9145a164   260  ret
0xffff9145a168   264  sub csp, jssp, #0x10 (16)
0xffff9145a16c   268  stp fp, lr, [jssp, #-16]!
0xffff9145a170   272  movz fp, #0xa00000000
0xffff9145a174   276  sub csp, jssp, #0x8 (8)
0xffff9145a178   280  str fp, [jssp, #-8]!
0xffff9145a17c   284  add fp, jssp, #0x8 (8)
0xffff9145a180   288  movz x13, #0x0
0xffff9145a184   292  mov x16, lr
0xffff9145a188   296  ldr x17, pc+112 (addr 0x0000ffff9145a1f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9145a18c   300  blr x17
0xffff9145a190   304  lsl x0, x10, #32
0xffff9145a194   308  movz x10, #0x0
0xffff9145a198   312  sub csp, jssp, #0x10 (16)
0xffff9145a19c   316  stp x10, x0, [jssp, #-16]!
0xffff9145a1a0   320  movz x0, #0x2
0xffff9145a1a4   324  movz x1, #0x5b88
0xffff9145a1a8   328  movk x1, #0xe2, lsl #16
0xffff9145a1ac   332  ldr x16, pc+84 (addr 0x0000ffff9145a200)    ;; code: STUB, CEntryStub, minor: 5
0xffff9145a1b0   336  blr x16
0xffff9145a1b4   340  str x0, [jssp, #104]
0xffff9145a1b8   344  ldr x16, pc+80 (addr 0x0000ffff9145a208)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9145a1bc   348  blr x16
0xffff9145a1c0   352  ldr lr, [jssp, #16]
0xffff9145a1c4   356  ldp xzr, fp, [jssp], #24
0xffff9145a1c8   360  b #-0x11c (addr 0xffff9145a0ac)
0xffff9145a1cc   364  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff9145a1d0   368  d63f03e0       constant
0xffff9145a1d4   372  d503201f       constant
0xffff9145a1d8   376  36404259       constant
0xffff9145a1dc   380  00000000       constant
0xffff9145a1e0   384  49b04241       constant
0xffff9145a1e4   388  00000000       constant
0xffff9145a1e8   392  914370c0       constant
0xffff9145a1ec   396  0000ffff       constant
0xffff9145a1f0   400  91438080       constant
0xffff9145a1f4   404  0000ffff       constant
0xffff9145a1f8   408  91406820       constant
0xffff9145a1fc   412  0000ffff       constant
0xffff9145a200   416  91406260       constant
0xffff9145a204   420  0000ffff       constant
0xffff9145a208   424  914068e0       constant
0xffff9145a20c   428  0000ffff       constant
0xffff9145a210   432  movz x16, #0x0
0xffff9145a214   436  sub csp, jssp, #0x10 (16)
0xffff9145a218   440  stp fp, lr, [jssp, #-16]!
0xffff9145a21c   444  bl #+0x24 (addr 0xffff9145a240)
0xffff9145a220   448  movz x16, #0x8
0xffff9145a224   452  sub csp, jssp, #0x10 (16)
0xffff9145a228   456  stp fp, lr, [jssp, #-16]!
0xffff9145a22c   460  bl #+0x14 (addr 0xffff9145a240)
0xffff9145a230   464  movz x16, #0x10
0xffff9145a234   468  sub csp, jssp, #0x10 (16)
0xffff9145a238   472  stp fp, lr, [jssp, #-16]!
0xffff9145a23c   476  bl #+0x4 (addr 0xffff9145a240)
0xffff9145a240   480  movz x17, #0xa00000000
0xffff9145a244   484  sub csp, jssp, #0x10 (16)
0xffff9145a248   488  stp x17, cp, [jssp, #-16]!
0xffff9145a24c   492  add fp, jssp, #0x10 (16)
0xffff9145a250   496  ldr x17, pc+24 (addr 0x0000ffff9145a268)    ;; lazy deoptimization bailout 0
0xffff9145a254   500  add x17, x17, x16
0xffff9145a258   504  br x17
0xffff9145a25c   508  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9145a260   512  d63f03e0       constant
0xffff9145a264   516  d503201f       constant
0xffff9145a268   520  91206000       constant
0xffff9145a26c   524  0000ffff       constant


Safepoints (size = 21)
0xffff9145a1b4   340  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 29)
0xffff9145a0ac  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9145a0c4  embedded object  (0x49b04241 <undefined>)
0xffff9145a110  code target (STUB)  (0xffff914370c0)
0xffff9145a158  code target (STUB)  (0xffff91438080)
0xffff9145a188  code target (STUB)  (0xffff91406820)
0xffff9145a1ac  code target (STUB)  (0xffff91406260)
0xffff9145a1b8  code target (STUB)  (0xffff914068e0)
0xffff9145a1cc  constant pool (size 68)
0xffff9145a250  runtime entry
0xffff9145a25c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = setPrototype
compiler = unknown
Instructions (size = 128)
0xffff9145a300     0  sub csp, jssp, #0x8 (8)
0xffff9145a304     4  str x3, [jssp, #-8]!
0xffff9145a308     8  sub csp, jssp, #0x8 (8)
0xffff9145a30c    12  str x4, [jssp, #-8]!
0xffff9145a310    16  ldr x5, pc+72 (addr 0x0000ffff9145a358)    ;; object: 0x49b88911 WeakCell for 0x36410e31 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9145a314    20  ldur x5, [x5, #7]
0xffff9145a318    24  tbz w5, #0, #+0x20 (addr 0xffff9145a338)
0xffff9145a31c    28  ldursw x4, [x5, #15]
0xffff9145a320    32  tbnz w4, #23, #+0x18 (addr 0xffff9145a338)
0xffff9145a324    36  ldr x4, [jssp], #8
0xffff9145a328    40  ldr x3, [jssp], #8
0xffff9145a32c    44  ldr x2, pc+52 (addr 0x0000ffff9145a360)    ;; object: 0x49b83a71 <String[12]: setPrototype>
0xffff9145a330    48  ldr x16, pc+56 (addr 0x0000ffff9145a368)    ;; code: HANDLER, StoreTransitionStub, minor: 303109
0xffff9145a334    52  br x16
0xffff9145a338    56  ldr x2, pc+56 (addr 0x0000ffff9145a370)    ;; object: 0x49b83a71 <String[12]: setPrototype>
0xffff9145a33c    60  ldr x4, [jssp], #8
0xffff9145a340    64  ldr x3, [jssp], #8
0xffff9145a344    68  ldr x16, pc+52 (addr 0x0000ffff9145a378)    ;; code: BUILTIN
0xffff9145a348    72  br x16
0xffff9145a34c    76  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff9145a350    80  d63f03e0       constant
0xffff9145a354    84  d503201f       constant
0xffff9145a358    88  49b88911       constant
0xffff9145a35c    92  00000000       constant
0xffff9145a360    96  49b83a71       constant
0xffff9145a364   100  00000000       constant
0xffff9145a368   104  9145a060       constant
0xffff9145a36c   108  0000ffff       constant
0xffff9145a370   112  49b83a71       constant
0xffff9145a374   116  00000000       constant
0xffff9145a378   120  91422420       constant
0xffff9145a37c   124  0000ffff       constant


RelocInfo (size = 11)
0xffff9145a310  embedded object  (0x49b88911 WeakCell for 0x36410e31 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9145a32c  embedded object  (0x49b83a71 <String[12]: setPrototype>)
0xffff9145a330  code target (HANDLER)  (0xffff9145a060)
0xffff9145a338  embedded object  (0x49b83a71 <String[12]: setPrototype>)
0xffff9145a344  code target (BUILTIN)  (0xffff91422420)
0xffff9145a34c  constant pool (size 52)

kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff9145a3e0     0  mov x6, x0
0xffff9145a3e4     4  tbnz w6, #0, #+0x5c (addr 0xffff9145a440)
0xffff9145a3e8     8  ldur x3, [x1, #7]
0xffff9145a3ec    12  stur x6, [x3, #47]
0xffff9145a3f0    16  stur x5, [x1, #-1]
0xffff9145a3f4    20  tbz w5, #0, #+0x34 (addr 0xffff9145a428)
0xffff9145a3f8    24  sub x2, x1, #0x1 (1)
0xffff9145a3fc    28  and x5, x5, #0xfffffffffff00000
0xffff9145a400    32  ldr x5, [x5, #8]
0xffff9145a404    36  tbz w5, #1, #+0x24 (addr 0xffff9145a428)
0xffff9145a408    40  and x5, x1, #0xfffffffffff00000
0xffff9145a40c    44  ldr x5, [x5, #8]
0xffff9145a410    48  tbz w5, #2, #+0x18 (addr 0xffff9145a428)
0xffff9145a414    52  sub csp, jssp, #0x8 (8)
0xffff9145a418    56  str lr, [jssp, #-8]!
0xffff9145a41c    60  ldr x16, pc+28 (addr 0x0000ffff9145a438)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9145a420    64  blr x16
0xffff9145a424    68  ldr lr, [jssp], #8
0xffff9145a428    72  ret
0xffff9145a42c    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9145a430    80  d63f03e0       constant
0xffff9145a434    84  d503201f       constant
0xffff9145a438    88  91438080       constant
0xffff9145a43c    92  0000ffff       constant
0xffff9145a440    96  movz x16, #0x0
0xffff9145a444   100  sub csp, jssp, #0x10 (16)
0xffff9145a448   104  stp fp, lr, [jssp, #-16]!
0xffff9145a44c   108  bl #+0x4 (addr 0xffff9145a450)
0xffff9145a450   112  movz x17, #0xa00000000
0xffff9145a454   116  sub csp, jssp, #0x10 (16)
0xffff9145a458   120  stp x17, cp, [jssp, #-16]!
0xffff9145a45c   124  add fp, jssp, #0x10 (16)
0xffff9145a460   128  ldr x17, pc+24 (addr 0x0000ffff9145a478)    ;; lazy deoptimization bailout 0
0xffff9145a464   132  add x17, x17, x16
0xffff9145a468   136  br x17
0xffff9145a46c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9145a470   144  d63f03e0       constant
0xffff9145a474   148  d503201f       constant
0xffff9145a478   152  91206000       constant
0xffff9145a47c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff9145a41c  code target (STUB)  (0xffff91438080)
0xffff9145a42c  constant pool (size 20)
0xffff9145a460  runtime entry
0xffff9145a46c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = reconfigure
compiler = unknown
Instructions (size = 128)
0xffff9145a500     0  sub csp, jssp, #0x8 (8)
0xffff9145a504     4  str x3, [jssp, #-8]!
0xffff9145a508     8  sub csp, jssp, #0x8 (8)
0xffff9145a50c    12  str x4, [jssp, #-8]!
0xffff9145a510    16  ldr x5, pc+72 (addr 0x0000ffff9145a558)    ;; object: 0x49b88a91 WeakCell for 0x36410e89 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9145a514    20  ldur x5, [x5, #7]
0xffff9145a518    24  tbz w5, #0, #+0x20 (addr 0xffff9145a538)
0xffff9145a51c    28  ldursw x4, [x5, #15]
0xffff9145a520    32  tbnz w4, #23, #+0x18 (addr 0xffff9145a538)
0xffff9145a524    36  ldr x4, [jssp], #8
0xffff9145a528    40  ldr x3, [jssp], #8
0xffff9145a52c    44  ldr x2, pc+52 (addr 0x0000ffff9145a560)    ;; object: 0x49b83a99 <String[11]: reconfigure>
0xffff9145a530    48  ldr x16, pc+56 (addr 0x0000ffff9145a568)    ;; code: HANDLER, StoreTransitionStub, minor: 172038
0xffff9145a534    52  br x16
0xffff9145a538    56  ldr x2, pc+56 (addr 0x0000ffff9145a570)    ;; object: 0x49b83a99 <String[11]: reconfigure>
0xffff9145a53c    60  ldr x4, [jssp], #8
0xffff9145a540    64  ldr x3, [jssp], #8
0xffff9145a544    68  ldr x16, pc+52 (addr 0x0000ffff9145a578)    ;; code: BUILTIN
0xffff9145a548    72  br x16
0xffff9145a54c    76  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff9145a550    80  d63f03e0       constant
0xffff9145a554    84  d503201f       constant
0xffff9145a558    88  49b88a91       constant
0xffff9145a55c    92  00000000       constant
0xffff9145a560    96  49b83a99       constant
0xffff9145a564   100  00000000       constant
0xffff9145a568   104  9145a3e0       constant
0xffff9145a56c   108  0000ffff       constant
0xffff9145a570   112  49b83a99       constant
0xffff9145a574   116  00000000       constant
0xffff9145a578   120  91422420       constant
0xffff9145a57c   124  0000ffff       constant


RelocInfo (size = 11)
0xffff9145a510  embedded object  (0x49b88a91 WeakCell for 0x36410e89 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9145a52c  embedded object  (0x49b83a99 <String[11]: reconfigure>)
0xffff9145a530  code target (HANDLER)  (0xffff9145a3e0)
0xffff9145a538  embedded object  (0x49b83a99 <String[11]: reconfigure>)
0xffff9145a544  code target (BUILTIN)  (0xffff91422420)
0xffff9145a54c  constant pool (size 52)

kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff9145a5e0     0  mov x6, x0
0xffff9145a5e4     4  tbnz w6, #0, #+0x5c (addr 0xffff9145a640)
0xffff9145a5e8     8  ldur x3, [x1, #7]
0xffff9145a5ec    12  stur x6, [x3, #55]
0xffff9145a5f0    16  stur x5, [x1, #-1]
0xffff9145a5f4    20  tbz w5, #0, #+0x34 (addr 0xffff9145a628)
0xffff9145a5f8    24  sub x2, x1, #0x1 (1)
0xffff9145a5fc    28  and x5, x5, #0xfffffffffff00000
0xffff9145a600    32  ldr x5, [x5, #8]
0xffff9145a604    36  tbz w5, #1, #+0x24 (addr 0xffff9145a628)
0xffff9145a608    40  and x5, x1, #0xfffffffffff00000
0xffff9145a60c    44  ldr x5, [x5, #8]
0xffff9145a610    48  tbz w5, #2, #+0x18 (addr 0xffff9145a628)
0xffff9145a614    52  sub csp, jssp, #0x8 (8)
0xffff9145a618    56  str lr, [jssp, #-8]!
0xffff9145a61c    60  ldr x16, pc+28 (addr 0x0000ffff9145a638)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9145a620    64  blr x16
0xffff9145a624    68  ldr lr, [jssp], #8
0xffff9145a628    72  ret
0xffff9145a62c    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9145a630    80  d63f03e0       constant
0xffff9145a634    84  d503201f       constant
0xffff9145a638    88  91438080       constant
0xffff9145a63c    92  0000ffff       constant
0xffff9145a640    96  movz x16, #0x0
0xffff9145a644   100  sub csp, jssp, #0x10 (16)
0xffff9145a648   104  stp fp, lr, [jssp, #-16]!
0xffff9145a64c   108  bl #+0x4 (addr 0xffff9145a650)
0xffff9145a650   112  movz x17, #0xa00000000
0xffff9145a654   116  sub csp, jssp, #0x10 (16)
0xffff9145a658   120  stp x17, cp, [jssp, #-16]!
0xffff9145a65c   124  add fp, jssp, #0x10 (16)
0xffff9145a660   128  ldr x17, pc+24 (addr 0x0000ffff9145a678)    ;; lazy deoptimization bailout 0
0xffff9145a664   132  add x17, x17, x16
0xffff9145a668   136  br x17
0xffff9145a66c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9145a670   144  d63f03e0       constant
0xffff9145a674   148  d503201f       constant
0xffff9145a678   152  91206000       constant
0xffff9145a67c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff9145a61c  code target (STUB)  (0xffff91438080)
0xffff9145a62c  constant pool (size 20)
0xffff9145a660  runtime entry
0xffff9145a66c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = preventExtensions
compiler = unknown
Instructions (size = 128)
0xffff9145a700     0  sub csp, jssp, #0x8 (8)
0xffff9145a704     4  str x3, [jssp, #-8]!
0xffff9145a708     8  sub csp, jssp, #0x8 (8)
0xffff9145a70c    12  str x4, [jssp, #-8]!
0xffff9145a710    16  ldr x5, pc+72 (addr 0x0000ffff9145a758)    ;; object: 0x49b88b99 WeakCell for 0x36410ee1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9145a714    20  ldur x5, [x5, #7]
0xffff9145a718    24  tbz w5, #0, #+0x20 (addr 0xffff9145a738)
0xffff9145a71c    28  ldursw x4, [x5, #15]
0xffff9145a720    32  tbnz w4, #23, #+0x18 (addr 0xffff9145a738)
0xffff9145a724    36  ldr x4, [jssp], #8
0xffff9145a728    40  ldr x3, [jssp], #8
0xffff9145a72c    44  ldr x2, pc+52 (addr 0x0000ffff9145a760)    ;; object: 0x49b052d1 <String[17]: preventExtensions>
0xffff9145a730    48  ldr x16, pc+56 (addr 0x0000ffff9145a768)    ;; code: HANDLER, StoreTransitionStub, minor: 172039
0xffff9145a734    52  br x16
0xffff9145a738    56  ldr x2, pc+56 (addr 0x0000ffff9145a770)    ;; object: 0x49b052d1 <String[17]: preventExtensions>
0xffff9145a73c    60  ldr x4, [jssp], #8
0xffff9145a740    64  ldr x3, [jssp], #8
0xffff9145a744    68  ldr x16, pc+52 (addr 0x0000ffff9145a778)    ;; code: BUILTIN
0xffff9145a748    72  br x16
0xffff9145a74c    76  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff9145a750    80  d63f03e0       constant
0xffff9145a754    84  d503201f       constant
0xffff9145a758    88  49b88b99       constant
0xffff9145a75c    92  00000000       constant
0xffff9145a760    96  49b052d1       constant
0xffff9145a764   100  00000000       constant
0xffff9145a768   104  9145a5e0       constant
0xffff9145a76c   108  0000ffff       constant
0xffff9145a770   112  49b052d1       constant
0xffff9145a774   116  00000000       constant
0xffff9145a778   120  91422420       constant
0xffff9145a77c   124  0000ffff       constant


RelocInfo (size = 11)
0xffff9145a710  embedded object  (0x49b88b99 WeakCell for 0x36410ee1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9145a72c  embedded object  (0x49b052d1 <String[17]: preventExtensions>)
0xffff9145a730  code target (HANDLER)  (0xffff9145a5e0)
0xffff9145a738  embedded object  (0x49b052d1 <String[17]: preventExtensions>)
0xffff9145a744  code target (BUILTIN)  (0xffff91422420)
0xffff9145a74c  constant pool (size 52)

kind = STUB
major_key = ToLengthStub
name = ToLengthStub
compiler = turbofan
Instructions (size = 442)
0xffff9145a7e0     0  and x1, x0, #0x8000000000000001
0xffff9145a7e4     4  cmp x1, #0x0 (0)
0xffff9145a7e8     8  b.eq #+0xb0 (addr 0xffff9145a898)
0xffff9145a7ec    12  and x1, x0, #0x1
0xffff9145a7f0    16  cmp x1, #0x0 (0)
0xffff9145a7f4    20  b.eq #+0x154 (addr 0xffff9145a948)
0xffff9145a7f8    24  ldur x1, [x0, #-1]
0xffff9145a7fc    28  ldr x2, [x26, #120]
0xffff9145a800    32  cmp x1, x2
0xffff9145a804    36  b.ne #+0x98 (addr 0xffff9145a89c)
0xffff9145a808    40  ldur d0, [x0, #7]
0xffff9145a80c    44  fcmp d0, #0.0
0xffff9145a810    48  b.le #+0x138 (addr 0xffff9145a948)
0xffff9145a814    52  ldr d1, pc+324 (addr 0x0000ffff9145a958)
0xffff9145a818    56  fcmp d1, d0
0xffff9145a81c    60  b.ls #+0x124 (addr 0xffff9145a940)
0xffff9145a820    64  frintm d0, d0
0xffff9145a824    68  fcvtzs w0, d0
0xffff9145a828    72  scvtf d1, w0
0xffff9145a82c    76  fcmp d0, d1
0xffff9145a830    80  b.ne #+0x24 (addr 0xffff9145a854)
0xffff9145a834    84  fcmp d0, #0.0
0xffff9145a838    88  b.ne #+0x14 (addr 0xffff9145a84c)
0xffff9145a83c    92  fmov x1, d0
0xffff9145a840    96  lsr x1, x1, #32
0xffff9145a844   100  cmp w1, #0x0 (0)
0xffff9145a848   104  b.lt #+0xc (addr 0xffff9145a854)
0xffff9145a84c   108  lsl x0, x0, #32
0xffff9145a850   112  b #+0x40 (addr 0xffff9145a890)
0xffff9145a854   116  movz x0, #0xf2c0
0xffff9145a858   120  movk x0, #0x4117, lsl #16
0xffff9145a85c   124  ldr x1, [x0]
0xffff9145a860   128  movz x2, #0xf2c8
0xffff9145a864   132  movk x2, #0x4117, lsl #16
0xffff9145a868   136  ldr x2, [x2]
0xffff9145a86c   140  sub x2, x2, x1
0xffff9145a870   144  cmp x2, #0x10 (16)
0xffff9145a874   148  b.lt #+0x64 (addr 0xffff9145a8d8)
0xffff9145a878   152  add x2, x1, #0x10 (16)
0xffff9145a87c   156  str x2, [x0]
0xffff9145a880   160  add x0, x1, #0x1 (1)
0xffff9145a884   164  ldr x1, [x26, #120]
0xffff9145a888   168  stur x1, [x0, #-1]
0xffff9145a88c   172  stur d0, [x0, #7]
0xffff9145a890   176  ret
0xffff9145a894   180  b #+0xb4 (addr 0xffff9145a948)
0xffff9145a898   184  ret
0xffff9145a89c   188  movz x16, #0xa00000000
0xffff9145a8a0   192  sub csp, jssp, #0x10 (16)
0xffff9145a8a4   196  stp fp, lr, [jssp, #-16]!
0xffff9145a8a8   200  mov fp, jssp
0xffff9145a8ac   204  sub csp, jssp, #0x20 (32)
0xffff9145a8b0   208  sub jssp, jssp, #0x20 (32)
0xffff9145a8b4   212  stur x16, [fp, #-8]
0xffff9145a8b8   216  mov x1, cp
0xffff9145a8bc   220  str cp, [jssp, #8]
0xffff9145a8c0   224  ldr x16, pc+160 (addr 0x0000ffff9145a960)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff9145a8c4   228  blr x16
0xffff9145a8c8   232  ldr cp, [jssp, #8]
0xffff9145a8cc   236  mov jssp, fp
0xffff9145a8d0   240  ldp fp, lr, [jssp], #16
0xffff9145a8d4   244  b #-0xf4 (addr 0xffff9145a7e0)
0xffff9145a8d8   248  movz x16, #0xa00000000
0xffff9145a8dc   252  sub csp, jssp, #0x10 (16)
0xffff9145a8e0   256  stp fp, lr, [jssp, #-16]!
0xffff9145a8e4   260  mov fp, jssp
0xffff9145a8e8   264  sub csp, jssp, #0x20 (32)
0xffff9145a8ec   268  sub jssp, jssp, #0x20 (32)
0xffff9145a8f0   272  stur x16, [fp, #-8]
0xffff9145a8f4   276  movz x0, #0x0
0xffff9145a8f8   280  lsl x0, x0, #32
0xffff9145a8fc   284  movz x1, #0x10
0xffff9145a900   288  lsl x1, x1, #32
0xffff9145a904   292  sub csp, jssp, #0x10 (16)
0xffff9145a908   296  sub jssp, jssp, #0x10 (16)
0xffff9145a90c   300  str x1, [jssp, #8]
0xffff9145a910   304  str x0, [jssp]
0xffff9145a914   308  str d0, [jssp, #32]
0xffff9145a918   312  movz x1, #0x5b88
0xffff9145a91c   316  movk x1, #0xe2, lsl #16
0xffff9145a920   320  movz x0, #0x2
0xffff9145a924   324  movz cp, #0x0
0xffff9145a928   328  ldr x16, pc+64 (addr 0x0000ffff9145a968)    ;; code: STUB, CEntryStub, minor: 4
0xffff9145a92c   332  blr x16
0xffff9145a930   336  ldr d0, [jssp, #16]
0xffff9145a934   340  mov jssp, fp
0xffff9145a938   344  ldp fp, lr, [jssp], #16
0xffff9145a93c   348  b #-0xb8 (addr 0xffff9145a884)
0xffff9145a940   352  ldr x0, pc+48 (addr 0x0000ffff9145a970)    ;; object: 0x49b88e41 <Number: 9.0072e+15>
0xffff9145a944   356  ret
0xffff9145a948   360  movz x0, #0x0
0xffff9145a94c   364  ret
0xffff9145a950   368  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff9145a954   372  d63f03e0       constant
0xffff9145a958   376  ffffffff       constant
0xffff9145a95c   380  433fffff       constant
0xffff9145a960   384  91429d80       constant
0xffff9145a964   388  0000ffff       constant
0xffff9145a968   392  91406060       constant
0xffff9145a96c   396  0000ffff       constant
0xffff9145a970   400  49b88e41       constant
0xffff9145a974   404  00000000       constant


Safepoints (size = 34)
0xffff9145a8c8   232  010000 (sp -> fp)  <none>
0xffff9145a930   336  000000 (sp -> fp)  <none>

RelocInfo (size = 13)
0xffff9145a8c0  code target (STUB)  (0xffff91429d80)
0xffff9145a928  code target (STUB)  (0xffff91406060)
0xffff9145a940  embedded object  (0x49b88e41 <Number: 9.0072e+15>)
0xffff9145a950  constant pool (size 40)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 152)
0xffff9145b5e0     0  orr x16, x0, x1
0xffff9145b5e4     4  tbnz w16, #0, #+0xc (addr 0xffff9145b5f0)
0xffff9145b5e8     8  sub x0, x0, x1
0xffff9145b5ec    12  ret
0xffff9145b5f0    16  movz x16, #0xc00000000
0xffff9145b5f4    20  sub csp, jssp, #0x10 (16)
0xffff9145b5f8    24  stp fp, lr, [jssp, #-16]!
0xffff9145b5fc    28  sub csp, jssp, #0x10 (16)
0xffff9145b600    32  str x16, [jssp, #-8]!
0xffff9145b604    36  ldr x17, pc+92 (addr 0x0000ffff9145b660)    ;; object: 0xffff9145b581 <Code: COMPARE_IC>
0xffff9145b608    40  sub csp, jssp, #0x10 (16)
0xffff9145b60c    44  str x17, [jssp, #-8]!
0xffff9145b610    48  add fp, jssp, #0x10 (16)
0xffff9145b614    52  sub csp, jssp, #0x18 (24)
0xffff9145b618    56  stp lr, x0, [jssp, #-24]!
0xffff9145b61c    60  str x1, [jssp, #16]
0xffff9145b620    64  movz x10, #0x2f00000000
0xffff9145b624    68  sub csp, jssp, #0x18 (24)
0xffff9145b628    72  stp x10, x0, [jssp, #-24]!
0xffff9145b62c    76  str x1, [jssp, #16]
0xffff9145b630    80  movz x0, #0x3
0xffff9145b634    84  ldr x1, pc+52 (addr 0x0000ffff9145b668)    ;; external reference (Runtime::CompareIC_Miss)
0xffff9145b638    88  ldr x16, pc+56 (addr 0x0000ffff9145b670)    ;; code: STUB, CEntryStub, minor: 4
0xffff9145b63c    92  blr x16
0xffff9145b640    96  add x11, x0, #0x5f (95)
0xffff9145b644   100  ldr x1, [jssp, #16]
0xffff9145b648   104  ldp lr, x0, [jssp], #24
0xffff9145b64c   108  mov jssp, fp
0xffff9145b650   112  ldp fp, lr, [jssp], #16
0xffff9145b654   116  br x11
0xffff9145b658   120  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9145b65c   124  d63f03e0       constant
0xffff9145b660   128  9145b581       constant
0xffff9145b664   132  0000ffff       constant
0xffff9145b668   136  00c8a980       constant
0xffff9145b66c   140  00000000       constant
0xffff9145b670   144  91406060       constant
0xffff9145b674   148  0000ffff       constant


RelocInfo (size = 10)
0xffff9145b604  embedded object  (0xffff9145b581 <Code: COMPARE_IC>)
0xffff9145b634  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff9145b638  code target (STUB)  (0xffff91406060)
0xffff9145b658  constant pool (size 32)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 445)
0xffff9145b920     0  movz x2, #0xf2c0
0xffff9145b924     4  movk x2, #0x4117, lsl #16
0xffff9145b928     8  ldp x3, x0, [x2]
0xffff9145b92c    12  adds x16, x3, #0x90 (144)
0xffff9145b930    16  ccmp x16, x0, #nzCv, lo
0xffff9145b934    20  b.hi #+0x9c (addr 0xffff9145b9d0)
0xffff9145b938    24  str x16, [x2]
0xffff9145b93c    28  orr x3, x3, #0x1
0xffff9145b940    32  ldr x0, pc+256 (addr 0x0000ffff9145ba40)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9145b944    36  stur x0, [x3, #-1]
0xffff9145b948    40  movz x0, #0x1000000000
0xffff9145b94c    44  stur x0, [x3, #7]
0xffff9145b950    48  stur x1, [x3, #15]
0xffff9145b954    52  stur cp, [x3, #23]
0xffff9145b958    56  ldr x0, pc+240 (addr 0x0000ffff9145ba48)    ;; object: 0x49b04519 <the hole>
0xffff9145b95c    60  stur x0, [x3, #31]
0xffff9145b960    64  ldur x0, [cp, #39]
0xffff9145b964    68  stur x0, [x3, #39]
0xffff9145b968    72  ldr x0, pc+232 (addr 0x0000ffff9145ba50)    ;; object: 0x49b04241 <undefined>
0xffff9145b96c    76  stur x0, [x3, #47]
0xffff9145b970    80  ldr x0, pc+232 (addr 0x0000ffff9145ba58)    ;; object: 0x49b04241 <undefined>
0xffff9145b974    84  stur x0, [x3, #55]
0xffff9145b978    88  ldr x0, pc+232 (addr 0x0000ffff9145ba60)    ;; object: 0x49b04241 <undefined>
0xffff9145b97c    92  stur x0, [x3, #63]
0xffff9145b980    96  ldr x0, pc+232 (addr 0x0000ffff9145ba68)    ;; object: 0x49b04241 <undefined>
0xffff9145b984   100  stur x0, [x3, #71]
0xffff9145b988   104  ldr x0, pc+232 (addr 0x0000ffff9145ba70)    ;; object: 0x49b04241 <undefined>
0xffff9145b98c   108  stur x0, [x3, #79]
0xffff9145b990   112  ldr x0, pc+232 (addr 0x0000ffff9145ba78)    ;; object: 0x49b04241 <undefined>
0xffff9145b994   116  stur x0, [x3, #87]
0xffff9145b998   120  ldr x0, pc+232 (addr 0x0000ffff9145ba80)    ;; object: 0x49b04241 <undefined>
0xffff9145b99c   124  stur x0, [x3, #95]
0xffff9145b9a0   128  ldr x0, pc+232 (addr 0x0000ffff9145ba88)    ;; object: 0x49b04241 <undefined>
0xffff9145b9a4   132  stur x0, [x3, #103]
0xffff9145b9a8   136  ldr x0, pc+232 (addr 0x0000ffff9145ba90)    ;; object: 0x49b04241 <undefined>
0xffff9145b9ac   140  stur x0, [x3, #111]
0xffff9145b9b0   144  ldr x0, pc+232 (addr 0x0000ffff9145ba98)    ;; object: 0x49b04241 <undefined>
0xffff9145b9b4   148  stur x0, [x3, #119]
0xffff9145b9b8   152  ldr x0, pc+232 (addr 0x0000ffff9145baa0)    ;; object: 0x49b04241 <undefined>
0xffff9145b9bc   156  stur x0, [x3, #127]
0xffff9145b9c0   160  ldr x0, pc+232 (addr 0x0000ffff9145baa8)    ;; object: 0x49b04241 <undefined>
0xffff9145b9c4   164  stur x0, [x3, #135]
0xffff9145b9c8   168  mov x0, x3
0xffff9145b9cc   172  ret
0xffff9145b9d0   176  sub csp, jssp, #0x10 (16)
0xffff9145b9d4   180  stp fp, lr, [jssp, #-16]!
0xffff9145b9d8   184  movz fp, #0xa00000000
0xffff9145b9dc   188  sub csp, jssp, #0x8 (8)
0xffff9145b9e0   192  str fp, [jssp, #-8]!
0xffff9145b9e4   196  add fp, jssp, #0x8 (8)
0xffff9145b9e8   200  movz x3, #0x0
0xffff9145b9ec   204  mov x16, lr
0xffff9145b9f0   208  ldr x17, pc+192 (addr 0x0000ffff9145bab0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9145b9f4   212  blr x17
0xffff9145b9f8   216  movz x0, #0x9000000000
0xffff9145b9fc   220  movz x10, #0x0
0xffff9145ba00   224  sub csp, jssp, #0x10 (16)
0xffff9145ba04   228  stp x10, x0, [jssp, #-16]!
0xffff9145ba08   232  movz x0, #0x2
0xffff9145ba0c   236  movz x1, #0x5b88
0xffff9145ba10   240  movk x1, #0xe2, lsl #16
0xffff9145ba14   244  ldr x16, pc+164 (addr 0x0000ffff9145bab8)    ;; code: STUB, CEntryStub, minor: 5
0xffff9145ba18   248  blr x16
0xffff9145ba1c   252  str x0, [jssp, #24]
0xffff9145ba20   256  ldr x16, pc+160 (addr 0x0000ffff9145bac0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9145ba24   260  blr x16
0xffff9145ba28   264  ldr lr, [jssp, #16]
0xffff9145ba2c   268  ldp xzr, fp, [jssp], #24
0xffff9145ba30   272  b #-0xf0 (addr 0xffff9145b940)
0xffff9145ba34   276  5800049f       constant pool begin (num_const = 36)    ;; constant pool
0xffff9145ba38   280  d63f03e0       constant
0xffff9145ba3c   284  d503201f       constant
0xffff9145ba40   288  36406149       constant
0xffff9145ba44   292  00000000       constant
0xffff9145ba48   296  49b04519       constant
0xffff9145ba4c   300  00000000       constant
0xffff9145ba50   304  49b04241       constant
0xffff9145ba54   308  00000000       constant
0xffff9145ba58   312  49b04241       constant
0xffff9145ba5c   316  00000000       constant
0xffff9145ba60   320  49b04241       constant
0xffff9145ba64   324  00000000       constant
0xffff9145ba68   328  49b04241       constant
0xffff9145ba6c   332  00000000       constant
0xffff9145ba70   336  49b04241       constant
0xffff9145ba74   340  00000000       constant
0xffff9145ba78   344  49b04241       constant
0xffff9145ba7c   348  00000000       constant
0xffff9145ba80   352  49b04241       constant
0xffff9145ba84   356  00000000       constant
0xffff9145ba88   360  49b04241       constant
0xffff9145ba8c   364  00000000       constant
0xffff9145ba90   368  49b04241       constant
0xffff9145ba94   372  00000000       constant
0xffff9145ba98   376  49b04241       constant
0xffff9145ba9c   380  00000000       constant
0xffff9145baa0   384  49b04241       constant
0xffff9145baa4   388  00000000       constant
0xffff9145baa8   392  49b04241       constant
0xffff9145baac   396  00000000       constant
0xffff9145bab0   400  91406820       constant
0xffff9145bab4   404  0000ffff       constant
0xffff9145bab8   408  91406260       constant
0xffff9145babc   412  0000ffff       constant
0xffff9145bac0   416  914068e0       constant
0xffff9145bac4   420  0000ffff       constant


Safepoints (size = 21)
0xffff9145ba1c   252  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 23)
0xffff9145b940  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9145b958  embedded object  (0x49b04519 <the hole>)
0xffff9145b968  embedded object  (0x49b04241 <undefined>)
0xffff9145b970  embedded object  (0x49b04241 <undefined>)
0xffff9145b978  embedded object  (0x49b04241 <undefined>)
0xffff9145b980  embedded object  (0x49b04241 <undefined>)
0xffff9145b988  embedded object  (0x49b04241 <undefined>)
0xffff9145b990  embedded object  (0x49b04241 <undefined>)
0xffff9145b998  embedded object  (0x49b04241 <undefined>)
0xffff9145b9a0  embedded object  (0x49b04241 <undefined>)
0xffff9145b9a8  embedded object  (0x49b04241 <undefined>)
0xffff9145b9b0  embedded object  (0x49b04241 <undefined>)
0xffff9145b9b8  embedded object  (0x49b04241 <undefined>)
0xffff9145b9c0  embedded object  (0x49b04241 <undefined>)
0xffff9145b9f0  code target (STUB)  (0xffff91406820)
0xffff9145ba14  code target (STUB)  (0xffff91406260)
0xffff9145ba20  code target (STUB)  (0xffff914068e0)
0xffff9145ba34  constant pool (size 148)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff9145cee0     0  ldur x0, [x1, #7]
0xffff9145cee4     4  ldur x0, [x0, #143]
0xffff9145cee8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327680
name = CallICStub(args(0), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff9145cf60     0  add x4, x2, x3, asr #29
0xffff9145cf64     4  ldur x4, [x4, #15]
0xffff9145cf68     8  ldur x5, [x4, #7]
0xffff9145cf6c    12  cmp x5, x1
0xffff9145cf70    16  b.ne #+0x2c (addr 0xffff9145cf9c)
0xffff9145cf74    20  tbz w1, #0, #+0x28 (addr 0xffff9145cf9c)
0xffff9145cf78    24  add x2, x2, x3, asr #29
0xffff9145cf7c    28  add x2, x2, #0x18 (24)
0xffff9145cf80    32  ldur x3, [x2, #-1]
0xffff9145cf84    36  movz x16, #0x200000000
0xffff9145cf88    40  add x3, x3, x16
0xffff9145cf8c    44  stur x3, [x2, #-1]
0xffff9145cf90    48  movz x0, #0x0
0xffff9145cf94    52  ldr x16, pc+372 (addr 0x0000ffff9145d108)    ;; code: BUILTIN
0xffff9145cf98    56  br x16
0xffff9145cf9c    60  ldr x16, [x26, #2400]
0xffff9145cfa0    64  cmp x4, x16
0xffff9145cfa4    68  b.eq #+0x78 (addr 0xffff9145d01c)
0xffff9145cfa8    72  ldur x5, [x4, #-1]
0xffff9145cfac    76  ldr x16, [x26, #2736]
0xffff9145cfb0    80  cmp x5, x16
0xffff9145cfb4    84  b.ne #+0x40 (addr 0xffff9145cff4)
0xffff9145cfb8    88  ldur x5, [cp, #39]
0xffff9145cfbc    92  ldur x5, [x5, #95]
0xffff9145cfc0    96  cmp x1, x5
0xffff9145cfc4   100  b.ne #+0xec (addr 0xffff9145d0b0)
0xffff9145cfc8   104  movz x0, #0x0
0xffff9145cfcc   108  add x2, x2, x3, asr #29
0xffff9145cfd0   112  add x2, x2, #0x18 (24)
0xffff9145cfd4   116  ldur x3, [x2, #-1]
0xffff9145cfd8   120  movz x16, #0x200000000
0xffff9145cfdc   124  add x3, x3, x16
0xffff9145cfe0   128  stur x3, [x2, #-1]
0xffff9145cfe4   132  mov x2, x4
0xffff9145cfe8   136  mov x3, x1
0xffff9145cfec   140  ldr x16, pc+292 (addr 0x0000ffff9145d110)    ;; code: STUB, ArrayConstructorStub, minor: 1
0xffff9145cff0   144  br x16
0xffff9145cff4   148  ldr x16, [x26, #2568]
0xffff9145cff8   152  cmp x4, x16
0xffff9145cffc   156  b.eq #+0xb4 (addr 0xffff9145d0b0)
0xffff9145d000   160  ldur x5, [x4, #-1]
0xffff9145d004   164  ldrb w5, [x5, #11]
0xffff9145d008   168  cmp x5, #0xc9 (201)
0xffff9145d00c   172  b.ne #+0xa4 (addr 0xffff9145d0b0)
0xffff9145d010   176  add x4, x2, x3, asr #29
0xffff9145d014   180  ldr x5, [x26, #2400]
0xffff9145d018   184  stur x5, [x4, #15]
0xffff9145d01c   188  movz x0, #0x0
0xffff9145d020   192  ldr x16, pc+248 (addr 0x0000ffff9145d118)    ;; code: BUILTIN
0xffff9145d024   196  br x16
0xffff9145d028   200  tbz w1, #0, #+0x88 (addr 0xffff9145d0b0)
0xffff9145d02c   204  ldur x5, [x1, #-1]
0xffff9145d030   208  ldrb w5, [x5, #11]
0xffff9145d034   212  cmp x5, #0xc9 (201)
0xffff9145d038   216  b.ne #+0x78 (addr 0xffff9145d0b0)
0xffff9145d03c   220  ldur x5, [cp, #39]
0xffff9145d040   224  ldur x5, [x5, #95]
0xffff9145d044   228  cmp x1, x5
0xffff9145d048   232  b.eq #+0x68 (addr 0xffff9145d0b0)
0xffff9145d04c   236  ldur x4, [x1, #39]
0xffff9145d050   240  ldur x4, [x4, #39]
0xffff9145d054   244  ldur x5, [cp, #39]
0xffff9145d058   248  cmp x4, x5
0xffff9145d05c   252  b.ne #+0x54 (addr 0xffff9145d0b0)
0xffff9145d060   256  movz x5, #0x200000000
0xffff9145d064   260  adds x4, x2, x3, asr #29
0xffff9145d068   264  stur x5, [x4, #23]
0xffff9145d06c   268  movz x16, #0xc00000000
0xffff9145d070   272  sub csp, jssp, #0x10 (16)
0xffff9145d074   276  stp fp, lr, [jssp, #-16]!
0xffff9145d078   280  sub csp, jssp, #0x10 (16)
0xffff9145d07c   284  str x16, [jssp, #-8]!
0xffff9145d080   288  ldr x17, pc+160 (addr 0x0000ffff9145d120)    ;; object: 0xffff9145cf01 <Code: CALL_IC>
0xffff9145d084   292  sub csp, jssp, #0x10 (16)
0xffff9145d088   296  str x17, [jssp, #-8]!
0xffff9145d08c   300  add fp, jssp, #0x10 (16)
0xffff9145d090   304  sub csp, jssp, #0x8 (8)
0xffff9145d094   308  str x1, [jssp, #-8]!
0xffff9145d098   312  ldr x16, pc+144 (addr 0x0000ffff9145d128)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff9145d09c   316  blr x16
0xffff9145d0a0   320  ldr x1, [jssp], #8
0xffff9145d0a4   324  mov jssp, fp
0xffff9145d0a8   328  ldp fp, lr, [jssp], #16
0xffff9145d0ac   332  b #-0x11c (addr 0xffff9145cf90)
0xffff9145d0b0   336  movz x16, #0xc00000000
0xffff9145d0b4   340  sub csp, jssp, #0x10 (16)
0xffff9145d0b8   344  stp fp, lr, [jssp, #-16]!
0xffff9145d0bc   348  sub csp, jssp, #0x10 (16)
0xffff9145d0c0   352  str x16, [jssp, #-8]!
0xffff9145d0c4   356  ldr x17, pc+108 (addr 0x0000ffff9145d130)    ;; object: 0xffff9145cf01 <Code: CALL_IC>
0xffff9145d0c8   360  sub csp, jssp, #0x10 (16)
0xffff9145d0cc   364  str x17, [jssp, #-8]!
0xffff9145d0d0   368  add fp, jssp, #0x10 (16)
0xffff9145d0d4   372  sub csp, jssp, #0x18 (24)
0xffff9145d0d8   376  stp x3, x2, [jssp, #-24]!
0xffff9145d0dc   380  str x1, [jssp, #16]
0xffff9145d0e0   384  movz x0, #0x3
0xffff9145d0e4   388  ldr x1, pc+84 (addr 0x0000ffff9145d138)    ;; external reference (Runtime::CallIC_Miss)
0xffff9145d0e8   392  ldr x16, pc+88 (addr 0x0000ffff9145d140)    ;; code: STUB, CEntryStub, minor: 4
0xffff9145d0ec   396  blr x16
0xffff9145d0f0   400  mov x1, x0
0xffff9145d0f4   404  mov jssp, fp
0xffff9145d0f8   408  ldp fp, lr, [jssp], #16
0xffff9145d0fc   412  b #-0xe0 (addr 0xffff9145d01c)
0xffff9145d100   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff9145d104   420  d63f03e0       constant
0xffff9145d108   424  9141e600       constant
0xffff9145d10c   428  0000ffff       constant
0xffff9145d110   432  9143d580       constant
0xffff9145d114   436  0000ffff       constant
0xffff9145d118   440  9141f6c0       constant
0xffff9145d11c   444  0000ffff       constant
0xffff9145d120   448  9145cf01       constant
0xffff9145d124   452  0000ffff       constant
0xffff9145d128   456  9140ddc0       constant
0xffff9145d12c   460  0000ffff       constant
0xffff9145d130   464  9145cf01       constant
0xffff9145d134   468  0000ffff       constant
0xffff9145d138   472  00c86928       constant
0xffff9145d13c   476  00000000       constant
0xffff9145d140   480  91406060       constant
0xffff9145d144   484  0000ffff       constant


RelocInfo (size = 19)
0xffff9145cf94  code target (BUILTIN)  (0xffff9141e600)
0xffff9145cfec  code target (STUB)  (0xffff9143d580)
0xffff9145d020  code target (BUILTIN)  (0xffff9141f6c0)
0xffff9145d080  embedded object  (0xffff9145cf01 <Code: CALL_IC>)
0xffff9145d098  code target (STUB)  (0xffff9140ddc0)
0xffff9145d0c4  embedded object  (0xffff9145cf01 <Code: CALL_IC>)
0xffff9145d0e4  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff9145d0e8  code target (STUB)  (0xffff91406060)
0xffff9145d100  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327680
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff9145d1c0     0  ldur x2, [fp, #-16]
0xffff9145d1c4     4  ldur x2, [x2, #31]
0xffff9145d1c8     8  ldur x2, [x2, #87]
0xffff9145d1cc    12  ldr x16, pc+20 (addr 0x0000ffff9145d1e0)    ;; code: CALL_IC, GENERIC
0xffff9145d1d0    16  br x16
0xffff9145d1d4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9145d1d8    24  d63f03e0       constant
0xffff9145d1dc    28  d503201f       constant
0xffff9145d1e0    32  9145cf60       constant
0xffff9145d1e4    36  0000ffff       constant


RelocInfo (size = 7)
0xffff9145d1cc  code target (CALL_IC)  (0xffff9145cf60)
0xffff9145d1d4  constant pool (size 20)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 301)
0xffff9145e860     0  movz x2, #0xf2c0
0xffff9145e864     4  movk x2, #0x4117, lsl #16
0xffff9145e868     8  ldp x3, x0, [x2]
0xffff9145e86c    12  adds x16, x3, #0x48 (72)
0xffff9145e870    16  ccmp x16, x0, #nzCv, lo
0xffff9145e874    20  b.hi #+0x54 (addr 0xffff9145e8c8)
0xffff9145e878    24  str x16, [x2]
0xffff9145e87c    28  orr x3, x3, #0x1
0xffff9145e880    32  ldr x0, pc+184 (addr 0x0000ffff9145e938)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9145e884    36  stur x0, [x3, #-1]
0xffff9145e888    40  movz x0, #0x700000000
0xffff9145e88c    44  stur x0, [x3, #7]
0xffff9145e890    48  stur x1, [x3, #15]
0xffff9145e894    52  stur cp, [x3, #23]
0xffff9145e898    56  ldr x0, pc+168 (addr 0x0000ffff9145e940)    ;; object: 0x49b04519 <the hole>
0xffff9145e89c    60  stur x0, [x3, #31]
0xffff9145e8a0    64  ldur x0, [cp, #39]
0xffff9145e8a4    68  stur x0, [x3, #39]
0xffff9145e8a8    72  ldr x0, pc+160 (addr 0x0000ffff9145e948)    ;; object: 0x49b04241 <undefined>
0xffff9145e8ac    76  stur x0, [x3, #47]
0xffff9145e8b0    80  ldr x0, pc+160 (addr 0x0000ffff9145e950)    ;; object: 0x49b04241 <undefined>
0xffff9145e8b4    84  stur x0, [x3, #55]
0xffff9145e8b8    88  ldr x0, pc+160 (addr 0x0000ffff9145e958)    ;; object: 0x49b04241 <undefined>
0xffff9145e8bc    92  stur x0, [x3, #63]
0xffff9145e8c0    96  mov x0, x3
0xffff9145e8c4   100  ret
0xffff9145e8c8   104  sub csp, jssp, #0x10 (16)
0xffff9145e8cc   108  stp fp, lr, [jssp, #-16]!
0xffff9145e8d0   112  movz fp, #0xa00000000
0xffff9145e8d4   116  sub csp, jssp, #0x8 (8)
0xffff9145e8d8   120  str fp, [jssp, #-8]!
0xffff9145e8dc   124  add fp, jssp, #0x8 (8)
0xffff9145e8e0   128  movz x3, #0x0
0xffff9145e8e4   132  mov x16, lr
0xffff9145e8e8   136  ldr x17, pc+120 (addr 0x0000ffff9145e960)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9145e8ec   140  blr x17
0xffff9145e8f0   144  movz x0, #0x4800000000
0xffff9145e8f4   148  movz x10, #0x0
0xffff9145e8f8   152  sub csp, jssp, #0x10 (16)
0xffff9145e8fc   156  stp x10, x0, [jssp, #-16]!
0xffff9145e900   160  movz x0, #0x2
0xffff9145e904   164  movz x1, #0x5b88
0xffff9145e908   168  movk x1, #0xe2, lsl #16
0xffff9145e90c   172  ldr x16, pc+92 (addr 0x0000ffff9145e968)    ;; code: STUB, CEntryStub, minor: 5
0xffff9145e910   176  blr x16
0xffff9145e914   180  str x0, [jssp, #24]
0xffff9145e918   184  ldr x16, pc+88 (addr 0x0000ffff9145e970)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9145e91c   188  blr x16
0xffff9145e920   192  ldr lr, [jssp, #16]
0xffff9145e924   196  ldp xzr, fp, [jssp], #24
0xffff9145e928   200  b #-0xa8 (addr 0xffff9145e880)
0xffff9145e92c   204  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff9145e930   208  d63f03e0       constant
0xffff9145e934   212  d503201f       constant
0xffff9145e938   216  36406149       constant
0xffff9145e93c   220  00000000       constant
0xffff9145e940   224  49b04519       constant
0xffff9145e944   228  00000000       constant
0xffff9145e948   232  49b04241       constant
0xffff9145e94c   236  00000000       constant
0xffff9145e950   240  49b04241       constant
0xffff9145e954   244  00000000       constant
0xffff9145e958   248  49b04241       constant
0xffff9145e95c   252  00000000       constant
0xffff9145e960   256  91406820       constant
0xffff9145e964   260  0000ffff       constant
0xffff9145e968   264  91406260       constant
0xffff9145e96c   268  0000ffff       constant
0xffff9145e970   272  914068e0       constant
0xffff9145e974   276  0000ffff       constant


Safepoints (size = 21)
0xffff9145e914   180  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 14)
0xffff9145e880  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9145e898  embedded object  (0x49b04519 <the hole>)
0xffff9145e8a8  embedded object  (0x49b04241 <undefined>)
0xffff9145e8b0  embedded object  (0x49b04241 <undefined>)
0xffff9145e8b8  embedded object  (0x49b04241 <undefined>)
0xffff9145e8e8  code target (STUB)  (0xffff91406820)
0xffff9145e90c  code target (STUB)  (0xffff91406260)
0xffff9145e918  code target (STUB)  (0xffff914068e0)
0xffff9145e92c  constant pool (size 76)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 365)
0xffff914609e0     0  movz x2, #0xf2c0
0xffff914609e4     4  movk x2, #0x4117, lsl #16
0xffff914609e8     8  ldp x3, x0, [x2]
0xffff914609ec    12  adds x16, x3, #0x68 (104)
0xffff914609f0    16  ccmp x16, x0, #nzCv, lo
0xffff914609f4    20  b.hi #+0x74 (addr 0xffff91460a68)
0xffff914609f8    24  str x16, [x2]
0xffff914609fc    28  orr x3, x3, #0x1
0xffff91460a00    32  ldr x0, pc+216 (addr 0x0000ffff91460ad8)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91460a04    36  stur x0, [x3, #-1]
0xffff91460a08    40  movz x0, #0xb00000000
0xffff91460a0c    44  stur x0, [x3, #7]
0xffff91460a10    48  stur x1, [x3, #15]
0xffff91460a14    52  stur cp, [x3, #23]
0xffff91460a18    56  ldr x0, pc+200 (addr 0x0000ffff91460ae0)    ;; object: 0x49b04519 <the hole>
0xffff91460a1c    60  stur x0, [x3, #31]
0xffff91460a20    64  ldur x0, [cp, #39]
0xffff91460a24    68  stur x0, [x3, #39]
0xffff91460a28    72  ldr x0, pc+192 (addr 0x0000ffff91460ae8)    ;; object: 0x49b04241 <undefined>
0xffff91460a2c    76  stur x0, [x3, #47]
0xffff91460a30    80  ldr x0, pc+192 (addr 0x0000ffff91460af0)    ;; object: 0x49b04241 <undefined>
0xffff91460a34    84  stur x0, [x3, #55]
0xffff91460a38    88  ldr x0, pc+192 (addr 0x0000ffff91460af8)    ;; object: 0x49b04241 <undefined>
0xffff91460a3c    92  stur x0, [x3, #63]
0xffff91460a40    96  ldr x0, pc+192 (addr 0x0000ffff91460b00)    ;; object: 0x49b04241 <undefined>
0xffff91460a44   100  stur x0, [x3, #71]
0xffff91460a48   104  ldr x0, pc+192 (addr 0x0000ffff91460b08)    ;; object: 0x49b04241 <undefined>
0xffff91460a4c   108  stur x0, [x3, #79]
0xffff91460a50   112  ldr x0, pc+192 (addr 0x0000ffff91460b10)    ;; object: 0x49b04241 <undefined>
0xffff91460a54   116  stur x0, [x3, #87]
0xffff91460a58   120  ldr x0, pc+192 (addr 0x0000ffff91460b18)    ;; object: 0x49b04241 <undefined>
0xffff91460a5c   124  stur x0, [x3, #95]
0xffff91460a60   128  mov x0, x3
0xffff91460a64   132  ret
0xffff91460a68   136  sub csp, jssp, #0x10 (16)
0xffff91460a6c   140  stp fp, lr, [jssp, #-16]!
0xffff91460a70   144  movz fp, #0xa00000000
0xffff91460a74   148  sub csp, jssp, #0x8 (8)
0xffff91460a78   152  str fp, [jssp, #-8]!
0xffff91460a7c   156  add fp, jssp, #0x8 (8)
0xffff91460a80   160  movz x3, #0x0
0xffff91460a84   164  mov x16, lr
0xffff91460a88   168  ldr x17, pc+152 (addr 0x0000ffff91460b20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91460a8c   172  blr x17
0xffff91460a90   176  movz x0, #0x6800000000
0xffff91460a94   180  movz x10, #0x0
0xffff91460a98   184  sub csp, jssp, #0x10 (16)
0xffff91460a9c   188  stp x10, x0, [jssp, #-16]!
0xffff91460aa0   192  movz x0, #0x2
0xffff91460aa4   196  movz x1, #0x5b88
0xffff91460aa8   200  movk x1, #0xe2, lsl #16
0xffff91460aac   204  ldr x16, pc+124 (addr 0x0000ffff91460b28)    ;; code: STUB, CEntryStub, minor: 5
0xffff91460ab0   208  blr x16
0xffff91460ab4   212  str x0, [jssp, #24]
0xffff91460ab8   216  ldr x16, pc+120 (addr 0x0000ffff91460b30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91460abc   220  blr x16
0xffff91460ac0   224  ldr lr, [jssp, #16]
0xffff91460ac4   228  ldp xzr, fp, [jssp], #24
0xffff91460ac8   232  b #-0xc8 (addr 0xffff91460a00)
0xffff91460acc   236  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff91460ad0   240  d63f03e0       constant
0xffff91460ad4   244  d503201f       constant
0xffff91460ad8   248  36406149       constant
0xffff91460adc   252  00000000       constant
0xffff91460ae0   256  49b04519       constant
0xffff91460ae4   260  00000000       constant
0xffff91460ae8   264  49b04241       constant
0xffff91460aec   268  00000000       constant
0xffff91460af0   272  49b04241       constant
0xffff91460af4   276  00000000       constant
0xffff91460af8   280  49b04241       constant
0xffff91460afc   284  00000000       constant
0xffff91460b00   288  49b04241       constant
0xffff91460b04   292  00000000       constant
0xffff91460b08   296  49b04241       constant
0xffff91460b0c   300  00000000       constant
0xffff91460b10   304  49b04241       constant
0xffff91460b14   308  00000000       constant
0xffff91460b18   312  49b04241       constant
0xffff91460b1c   316  00000000       constant
0xffff91460b20   320  91406820       constant
0xffff91460b24   324  0000ffff       constant
0xffff91460b28   328  91406260       constant
0xffff91460b2c   332  0000ffff       constant
0xffff91460b30   336  914068e0       constant
0xffff91460b34   340  0000ffff       constant


Safepoints (size = 21)
0xffff91460ab4   212  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 18)
0xffff91460a00  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91460a18  embedded object  (0x49b04519 <the hole>)
0xffff91460a28  embedded object  (0x49b04241 <undefined>)
0xffff91460a30  embedded object  (0x49b04241 <undefined>)
0xffff91460a38  embedded object  (0x49b04241 <undefined>)
0xffff91460a40  embedded object  (0x49b04241 <undefined>)
0xffff91460a48  embedded object  (0x49b04241 <undefined>)
0xffff91460a50  embedded object  (0x49b04241 <undefined>)
0xffff91460a58  embedded object  (0x49b04241 <undefined>)
0xffff91460a88  code target (STUB)  (0xffff91406820)
0xffff91460aac  code target (STUB)  (0xffff91406260)
0xffff91460ab8  code target (STUB)  (0xffff914068e0)
0xffff91460acc  constant pool (size 108)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91461b20     0  ldur x0, [x1, #-1]
0xffff91461b24     4  ldur x0, [x0, #47]
0xffff91461b28     8  movz x16, #0x5ff
0xffff91461b2c    12  ldr x0, [x0, x16]
0xffff91461b30    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91461ba0     0  ldur x0, [x1, #-1]
0xffff91461ba4     4  ldur x0, [x0, #47]
0xffff91461ba8     8  movz x16, #0x5e7
0xffff91461bac    12  ldr x0, [x0, x16]
0xffff91461bb0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 821)
0xffff914620e0     0  movz x2, #0xf2c0
0xffff914620e4     4  movk x2, #0x4117, lsl #16
0xffff914620e8     8  ldp x3, x0, [x2]
0xffff914620ec    12  adds x16, x3, #0x140 (320)
0xffff914620f0    16  ccmp x16, x0, #nzCv, lo
0xffff914620f4    20  b.hi #+0x168 (addr 0xffff9146225c)
0xffff914620f8    24  str x16, [x2]
0xffff914620fc    28  orr x3, x3, #0x1
0xffff91462100    32  ldr x0, pc+456 (addr 0x0000ffff914622c8)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91462104    36  stur x0, [x3, #-1]
0xffff91462108    40  movz x0, #0x2600000000
0xffff9146210c    44  stur x0, [x3, #7]
0xffff91462110    48  stur x1, [x3, #15]
0xffff91462114    52  stur cp, [x3, #23]
0xffff91462118    56  ldr x0, pc+440 (addr 0x0000ffff914622d0)    ;; object: 0x49b04519 <the hole>
0xffff9146211c    60  stur x0, [x3, #31]
0xffff91462120    64  ldur x0, [cp, #39]
0xffff91462124    68  stur x0, [x3, #39]
0xffff91462128    72  ldr x0, pc+432 (addr 0x0000ffff914622d8)    ;; object: 0x49b04241 <undefined>
0xffff9146212c    76  stur x0, [x3, #47]
0xffff91462130    80  ldr x0, pc+432 (addr 0x0000ffff914622e0)    ;; object: 0x49b04241 <undefined>
0xffff91462134    84  stur x0, [x3, #55]
0xffff91462138    88  ldr x0, pc+432 (addr 0x0000ffff914622e8)    ;; object: 0x49b04241 <undefined>
0xffff9146213c    92  stur x0, [x3, #63]
0xffff91462140    96  ldr x0, pc+432 (addr 0x0000ffff914622f0)    ;; object: 0x49b04241 <undefined>
0xffff91462144   100  stur x0, [x3, #71]
0xffff91462148   104  ldr x0, pc+432 (addr 0x0000ffff914622f8)    ;; object: 0x49b04241 <undefined>
0xffff9146214c   108  stur x0, [x3, #79]
0xffff91462150   112  ldr x0, pc+432 (addr 0x0000ffff91462300)    ;; object: 0x49b04241 <undefined>
0xffff91462154   116  stur x0, [x3, #87]
0xffff91462158   120  ldr x0, pc+432 (addr 0x0000ffff91462308)    ;; object: 0x49b04241 <undefined>
0xffff9146215c   124  stur x0, [x3, #95]
0xffff91462160   128  ldr x0, pc+432 (addr 0x0000ffff91462310)    ;; object: 0x49b04241 <undefined>
0xffff91462164   132  stur x0, [x3, #103]
0xffff91462168   136  ldr x0, pc+432 (addr 0x0000ffff91462318)    ;; object: 0x49b04241 <undefined>
0xffff9146216c   140  stur x0, [x3, #111]
0xffff91462170   144  ldr x0, pc+432 (addr 0x0000ffff91462320)    ;; object: 0x49b04241 <undefined>
0xffff91462174   148  stur x0, [x3, #119]
0xffff91462178   152  ldr x0, pc+432 (addr 0x0000ffff91462328)    ;; object: 0x49b04241 <undefined>
0xffff9146217c   156  stur x0, [x3, #127]
0xffff91462180   160  ldr x0, pc+432 (addr 0x0000ffff91462330)    ;; object: 0x49b04241 <undefined>
0xffff91462184   164  stur x0, [x3, #135]
0xffff91462188   168  ldr x0, pc+432 (addr 0x0000ffff91462338)    ;; object: 0x49b04241 <undefined>
0xffff9146218c   172  stur x0, [x3, #143]
0xffff91462190   176  ldr x0, pc+432 (addr 0x0000ffff91462340)    ;; object: 0x49b04241 <undefined>
0xffff91462194   180  stur x0, [x3, #151]
0xffff91462198   184  ldr x0, pc+432 (addr 0x0000ffff91462348)    ;; object: 0x49b04241 <undefined>
0xffff9146219c   188  stur x0, [x3, #159]
0xffff914621a0   192  ldr x0, pc+432 (addr 0x0000ffff91462350)    ;; object: 0x49b04241 <undefined>
0xffff914621a4   196  stur x0, [x3, #167]
0xffff914621a8   200  ldr x0, pc+432 (addr 0x0000ffff91462358)    ;; object: 0x49b04241 <undefined>
0xffff914621ac   204  stur x0, [x3, #175]
0xffff914621b0   208  ldr x0, pc+432 (addr 0x0000ffff91462360)    ;; object: 0x49b04241 <undefined>
0xffff914621b4   212  stur x0, [x3, #183]
0xffff914621b8   216  ldr x0, pc+432 (addr 0x0000ffff91462368)    ;; object: 0x49b04241 <undefined>
0xffff914621bc   220  stur x0, [x3, #191]
0xffff914621c0   224  ldr x0, pc+432 (addr 0x0000ffff91462370)    ;; object: 0x49b04241 <undefined>
0xffff914621c4   228  stur x0, [x3, #199]
0xffff914621c8   232  ldr x0, pc+432 (addr 0x0000ffff91462378)    ;; object: 0x49b04241 <undefined>
0xffff914621cc   236  stur x0, [x3, #207]
0xffff914621d0   240  ldr x0, pc+432 (addr 0x0000ffff91462380)    ;; object: 0x49b04241 <undefined>
0xffff914621d4   244  stur x0, [x3, #215]
0xffff914621d8   248  ldr x0, pc+432 (addr 0x0000ffff91462388)    ;; object: 0x49b04241 <undefined>
0xffff914621dc   252  stur x0, [x3, #223]
0xffff914621e0   256  ldr x0, pc+432 (addr 0x0000ffff91462390)    ;; object: 0x49b04241 <undefined>
0xffff914621e4   260  stur x0, [x3, #231]
0xffff914621e8   264  ldr x0, pc+432 (addr 0x0000ffff91462398)    ;; object: 0x49b04241 <undefined>
0xffff914621ec   268  stur x0, [x3, #239]
0xffff914621f0   272  ldr x0, pc+432 (addr 0x0000ffff914623a0)    ;; object: 0x49b04241 <undefined>
0xffff914621f4   276  stur x0, [x3, #247]
0xffff914621f8   280  ldr x0, pc+432 (addr 0x0000ffff914623a8)    ;; object: 0x49b04241 <undefined>
0xffff914621fc   284  stur x0, [x3, #255]
0xffff91462200   288  ldr x0, pc+432 (addr 0x0000ffff914623b0)    ;; object: 0x49b04241 <undefined>
0xffff91462204   292  movz x16, #0x107
0xffff91462208   296  str x0, [x3, x16]
0xffff9146220c   300  ldr x0, pc+428 (addr 0x0000ffff914623b8)    ;; object: 0x49b04241 <undefined>
0xffff91462210   304  movz x16, #0x10f
0xffff91462214   308  str x0, [x3, x16]
0xffff91462218   312  ldr x0, pc+424 (addr 0x0000ffff914623c0)    ;; object: 0x49b04241 <undefined>
0xffff9146221c   316  movz x16, #0x117
0xffff91462220   320  str x0, [x3, x16]
0xffff91462224   324  ldr x0, pc+420 (addr 0x0000ffff914623c8)    ;; object: 0x49b04241 <undefined>
0xffff91462228   328  movz x16, #0x11f
0xffff9146222c   332  str x0, [x3, x16]
0xffff91462230   336  ldr x0, pc+416 (addr 0x0000ffff914623d0)    ;; object: 0x49b04241 <undefined>
0xffff91462234   340  movz x16, #0x127
0xffff91462238   344  str x0, [x3, x16]
0xffff9146223c   348  ldr x0, pc+412 (addr 0x0000ffff914623d8)    ;; object: 0x49b04241 <undefined>
0xffff91462240   352  movz x16, #0x12f
0xffff91462244   356  str x0, [x3, x16]
0xffff91462248   360  ldr x0, pc+408 (addr 0x0000ffff914623e0)    ;; object: 0x49b04241 <undefined>
0xffff9146224c   364  movz x16, #0x137
0xffff91462250   368  str x0, [x3, x16]
0xffff91462254   372  mov x0, x3
0xffff91462258   376  ret
0xffff9146225c   380  sub csp, jssp, #0x10 (16)
0xffff91462260   384  stp fp, lr, [jssp, #-16]!
0xffff91462264   388  movz fp, #0xa00000000
0xffff91462268   392  sub csp, jssp, #0x8 (8)
0xffff9146226c   396  str fp, [jssp, #-8]!
0xffff91462270   400  add fp, jssp, #0x8 (8)
0xffff91462274   404  movz x3, #0x0
0xffff91462278   408  mov x16, lr
0xffff9146227c   412  ldr x17, pc+364 (addr 0x0000ffff914623e8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91462280   416  blr x17
0xffff91462284   420  movz x0, #0x14000000000
0xffff91462288   424  movz x10, #0x0
0xffff9146228c   428  sub csp, jssp, #0x10 (16)
0xffff91462290   432  stp x10, x0, [jssp, #-16]!
0xffff91462294   436  movz x0, #0x2
0xffff91462298   440  movz x1, #0x5b88
0xffff9146229c   444  movk x1, #0xe2, lsl #16
0xffff914622a0   448  ldr x16, pc+336 (addr 0x0000ffff914623f0)    ;; code: STUB, CEntryStub, minor: 5
0xffff914622a4   452  blr x16
0xffff914622a8   456  str x0, [jssp, #24]
0xffff914622ac   460  ldr x16, pc+332 (addr 0x0000ffff914623f8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914622b0   464  blr x16
0xffff914622b4   468  ldr lr, [jssp, #16]
0xffff914622b8   472  ldp xzr, fp, [jssp], #24
0xffff914622bc   476  b #-0x1bc (addr 0xffff91462100)
0xffff914622c0   480  580009ff       constant pool begin (num_const = 79)    ;; constant pool
0xffff914622c4   484  d63f03e0       constant
0xffff914622c8   488  36406149       constant
0xffff914622cc   492  00000000       constant
0xffff914622d0   496  49b04519       constant
0xffff914622d4   500  00000000       constant
0xffff914622d8   504  49b04241       constant
0xffff914622dc   508  00000000       constant
0xffff914622e0   512  49b04241       constant
0xffff914622e4   516  00000000       constant
0xffff914622e8   520  49b04241       constant
0xffff914622ec   524  00000000       constant
0xffff914622f0   528  49b04241       constant
0xffff914622f4   532  00000000       constant
0xffff914622f8   536  49b04241       constant
0xffff914622fc   540  00000000       constant
0xffff91462300   544  49b04241       constant
0xffff91462304   548  00000000       constant
0xffff91462308   552  49b04241       constant
0xffff9146230c   556  00000000       constant
0xffff91462310   560  49b04241       constant
0xffff91462314   564  00000000       constant
0xffff91462318   568  49b04241       constant
0xffff9146231c   572  00000000       constant
0xffff91462320   576  49b04241       constant
0xffff91462324   580  00000000       constant
0xffff91462328   584  49b04241       constant
0xffff9146232c   588  00000000       constant
0xffff91462330   592  49b04241       constant
0xffff91462334   596  00000000       constant
0xffff91462338   600  49b04241       constant
0xffff9146233c   604  00000000       constant
0xffff91462340   608  49b04241       constant
0xffff91462344   612  00000000       constant
0xffff91462348   616  49b04241       constant
0xffff9146234c   620  00000000       constant
0xffff91462350   624  49b04241       constant
0xffff91462354   628  00000000       constant
0xffff91462358   632  49b04241       constant
0xffff9146235c   636  00000000       constant
0xffff91462360   640  49b04241       constant
0xffff91462364   644  00000000       constant
0xffff91462368   648  49b04241       constant
0xffff9146236c   652  00000000       constant
0xffff91462370   656  49b04241       constant
0xffff91462374   660  00000000       constant
0xffff91462378   664  49b04241       constant
0xffff9146237c   668  00000000       constant
0xffff91462380   672  49b04241       constant
0xffff91462384   676  00000000       constant
0xffff91462388   680  49b04241       constant
0xffff9146238c   684  00000000       constant
0xffff91462390   688  49b04241       constant
0xffff91462394   692  00000000       constant
0xffff91462398   696  49b04241       constant
0xffff9146239c   700  00000000       constant
0xffff914623a0   704  49b04241       constant
0xffff914623a4   708  00000000       constant
0xffff914623a8   712  49b04241       constant
0xffff914623ac   716  00000000       constant
0xffff914623b0   720  49b04241       constant
0xffff914623b4   724  00000000       constant
0xffff914623b8   728  49b04241       constant
0xffff914623bc   732  00000000       constant
0xffff914623c0   736  49b04241       constant
0xffff914623c4   740  00000000       constant
0xffff914623c8   744  49b04241       constant
0xffff914623cc   748  00000000       constant
0xffff914623d0   752  49b04241       constant
0xffff914623d4   756  00000000       constant
0xffff914623d8   760  49b04241       constant
0xffff914623dc   764  00000000       constant
0xffff914623e0   768  49b04241       constant
0xffff914623e4   772  00000000       constant
0xffff914623e8   776  91406820       constant
0xffff914623ec   780  0000ffff       constant
0xffff914623f0   784  91406260       constant
0xffff914623f4   788  0000ffff       constant
0xffff914623f8   792  914068e0       constant
0xffff914623fc   796  0000ffff       constant


Safepoints (size = 21)
0xffff914622a8   456  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 45)
0xffff91462100  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91462118  embedded object  (0x49b04519 <the hole>)
0xffff91462128  embedded object  (0x49b04241 <undefined>)
0xffff91462130  embedded object  (0x49b04241 <undefined>)
0xffff91462138  embedded object  (0x49b04241 <undefined>)
0xffff91462140  embedded object  (0x49b04241 <undefined>)
0xffff91462148  embedded object  (0x49b04241 <undefined>)
0xffff91462150  embedded object  (0x49b04241 <undefined>)
0xffff91462158  embedded object  (0x49b04241 <undefined>)
0xffff91462160  embedded object  (0x49b04241 <undefined>)
0xffff91462168  embedded object  (0x49b04241 <undefined>)
0xffff91462170  embedded object  (0x49b04241 <undefined>)
0xffff91462178  embedded object  (0x49b04241 <undefined>)
0xffff91462180  embedded object  (0x49b04241 <undefined>)
0xffff91462188  embedded object  (0x49b04241 <undefined>)
0xffff91462190  embedded object  (0x49b04241 <undefined>)
0xffff91462198  embedded object  (0x49b04241 <undefined>)
0xffff914621a0  embedded object  (0x49b04241 <undefined>)
0xffff914621a8  embedded object  (0x49b04241 <undefined>)
0xffff914621b0  embedded object  (0x49b04241 <undefined>)
0xffff914621b8  embedded object  (0x49b04241 <undefined>)
0xffff914621c0  embedded object  (0x49b04241 <undefined>)
0xffff914621c8  embedded object  (0x49b04241 <undefined>)
0xffff914621d0  embedded object  (0x49b04241 <undefined>)
0xffff914621d8  embedded object  (0x49b04241 <undefined>)
0xffff914621e0  embedded object  (0x49b04241 <undefined>)
0xffff914621e8  embedded object  (0x49b04241 <undefined>)
0xffff914621f0  embedded object  (0x49b04241 <undefined>)
0xffff914621f8  embedded object  (0x49b04241 <undefined>)
0xffff91462200  embedded object  (0x49b04241 <undefined>)
0xffff9146220c  embedded object  (0x49b04241 <undefined>)
0xffff91462218  embedded object  (0x49b04241 <undefined>)
0xffff91462224  embedded object  (0x49b04241 <undefined>)
0xffff91462230  embedded object  (0x49b04241 <undefined>)
0xffff9146223c  embedded object  (0x49b04241 <undefined>)
0xffff91462248  embedded object  (0x49b04241 <undefined>)
0xffff9146227c  code target (STUB)  (0xffff91406820)
0xffff914622a0  code target (STUB)  (0xffff91406260)
0xffff914622ac  code target (STUB)  (0xffff914068e0)
0xffff914622c0  constant pool (size 320)


kind = STUB
major_key = FastNewClosureStub
name = FastNewClosureStub
compiler = crankshaft
Instructions (size = 773)
0xffff91462480     0  movz x1, #0xf2c0
0xffff91462484     4  movk x1, #0x4117, lsl #16
0xffff91462488     8  ldp x3, x0, [x1]
0xffff9146248c    12  adds x16, x3, #0x48 (72)
0xffff91462490    16  ccmp x16, x0, #nzCv, lo
0xffff91462494    20  b.hi #+0x1bc (addr 0xffff91462650)
0xffff91462498    24  str x16, [x1]
0xffff9146249c    28  orr x3, x3, #0x1
0xffff914624a0    32  ldur x0, [cp, #39]
0xffff914624a4    36  movz x16, #0x2d7
0xffff914624a8    40  ldr x1, [x0, x16]
0xffff914624ac    44  stur x1, [x3, #-1]
0xffff914624b0    48  ldr x1, pc+528 (addr 0x0000ffff914626c0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914624b4    52  stur x1, [x3, #7]
0xffff914624b8    56  ldr x1, pc+528 (addr 0x0000ffff914626c8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914624bc    60  stur x1, [x3, #15]
0xffff914624c0    64  ldr x1, pc+528 (addr 0x0000ffff914626d0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914624c4    68  stur x1, [x3, #47]
0xffff914624c8    72  ldr x1, pc+528 (addr 0x0000ffff914626d8)    ;; object: 0x49b04519 <the hole>
0xffff914624cc    76  stur x1, [x3, #23]
0xffff914624d0    80  stur x2, [x3, #31]
0xffff914624d4    84  stur cp, [x3, #39]
0xffff914624d8    88  ldur x1, [x2, #23]
0xffff914624dc    92  movz x4, #0x0
0xffff914624e0    96  cmp x1, x4
0xffff914624e4   100  b.eq #+0x150 (addr 0xffff91462634)
0xffff914624e8   104  ldur w4, [x1, #11]
0xffff914624ec   108  subs w4, w4, #0x4 (4)
0xffff914624f0   112  b.vs #+0x230 (addr 0xffff91462720)
0xffff914624f4   116  mov x5, x4
0xffff914624f8   120  cmp w5, #0x1 (1)
0xffff914624fc   124  b.lt #+0xb4 (addr 0xffff914625b0)
0xffff91462500   128  add x4, x1, #0xf (15)
0xffff91462504   132  ldr x6, [x4, w5, sxtw #3]
0xffff91462508   136  ldur x4, [x6, #7]
0xffff9146250c   140  add x6, x1, #0x27 (39)
0xffff91462510   144  ldr x7, [x6, w5, sxtw #3]
0xffff91462514   148  add x6, x1, #0x17 (23)
0xffff91462518   152  ldr x8, [x6, w5, sxtw #3]
0xffff9146251c   156  ldur x6, [x8, #7]
0xffff91462520   160  cmp x0, x4
0xffff91462524   164  b.ne #+0x1c (addr 0xffff91462540)
0xffff91462528   168  mov x4, #0xffffffff00000000
0xffff9146252c   172  cmp x7, x4
0xffff91462530   176  b.ne #+0x10 (addr 0xffff91462540)
0xffff91462534   180  movz x4, #0x0
0xffff91462538   184  cmp x6, x4
0xffff9146253c   188  b.ne #+0xc (addr 0xffff91462548)
0xffff91462540   192  sub w5, w5, #0x4 (4)
0xffff91462544   196  b #-0x4c (addr 0xffff914624f8)
0xffff91462548   200  add x4, x1, #0x1f (31)
0xffff9146254c   204  ldr x7, [x4, w5, sxtw #3]
0xffff91462550   208  ldur x7, [x7, #7]
0xffff91462554   212  movz x4, #0x0
0xffff91462558   216  cmp x7, x4
0xffff9146255c   220  b.eq #+0x50 (addr 0xffff914625ac)
0xffff91462560   224  add x4, x6, #0x5f (95)
0xffff91462564   228  stur x4, [x3, #55]
0xffff91462568   232  stur x7, [x3, #47]
0xffff9146256c   236  movz x16, #0x557
0xffff91462570   240  ldr x4, [x0, x16]
0xffff91462574   244  stur x4, [x3, #63]
0xffff91462578   248  mov x4, x3
0xffff9146257c   252  movz x16, #0x557
0xffff91462580   256  str x4, [x0, x16]
0xffff91462584   260  add x6, x0, #0x557 (1367)
0xffff91462588   264  and x4, x0, #0xfffffffffff00000
0xffff9146258c   268  ldr x4, [x4, #8]
0xffff91462590   272  tbz w4, #2, #+0x18 (addr 0xffff914625a8)
0xffff91462594   276  sub csp, jssp, #0x8 (8)
0xffff91462598   280  str lr, [jssp, #-8]!
0xffff9146259c   284  ldr x16, pc+324 (addr 0x0000ffff914626e0)    ;; code: STUB, RecordWriteStub, minor: 71808
0xffff914625a0   288  blr x16
0xffff914625a4   292  ldr lr, [jssp], #8
0xffff914625a8   296  b #+0x8 (addr 0xffff914625b0)
0xffff914625ac   300  b #+0x184 (addr 0xffff91462730)
0xffff914625b0   304  cmp w5, #0x1 (1)
0xffff914625b4   308  b.ge #+0x94 (addr 0xffff91462648)
0xffff914625b8   312  ldur x1, [x1, #15]
0xffff914625bc   316  ldur x1, [x1, #7]
0xffff914625c0   320  movz x4, #0x0
0xffff914625c4   324  cmp x1, x4
0xffff914625c8   328  b.eq #+0x54 (addr 0xffff9146261c)
0xffff914625cc   332  add x1, x1, #0x5f (95)
0xffff914625d0   336  stur x1, [x3, #55]
0xffff914625d4   340  ldr x1, pc+276 (addr 0x0000ffff914626e8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914625d8   344  stur x1, [x3, #47]
0xffff914625dc   348  movz x16, #0x557
0xffff914625e0   352  ldr x1, [x0, x16]
0xffff914625e4   356  stur x1, [x3, #63]
0xffff914625e8   360  mov x1, x3
0xffff914625ec   364  movz x16, #0x557
0xffff914625f0   368  str x1, [x0, x16]
0xffff914625f4   372  add x2, x0, #0x557 (1367)
0xffff914625f8   376  and x1, x0, #0xfffffffffff00000
0xffff914625fc   380  ldr x1, [x1, #8]
0xffff91462600   384  tbz w1, #2, #+0x18 (addr 0xffff91462618)
0xffff91462604   388  sub csp, jssp, #0x8 (8)
0xffff91462608   392  str lr, [jssp, #-8]!
0xffff9146260c   396  ldr x16, pc+228 (addr 0x0000ffff914626f0)    ;; code: STUB, RecordWriteStub, minor: 67616
0xffff91462610   400  blr x16
0xffff91462614   404  ldr lr, [jssp], #8
0xffff91462618   408  b #+0x30 (addr 0xffff91462648)
0xffff9146261c   412  ldr x0, pc+220 (addr 0x0000ffff914626f8)    ;; object: 0x49b04241 <undefined>
0xffff91462620   416  stur x0, [x3, #63]
0xffff91462624   420  ldur x0, [x2, #15]
0xffff91462628   424  add x0, x0, #0x5f (95)
0xffff9146262c   428  stur x0, [x3, #55]
0xffff91462630   432  b #+0x18 (addr 0xffff91462648)
0xffff91462634   436  ldr x0, pc+204 (addr 0x0000ffff91462700)    ;; object: 0x49b04241 <undefined>
0xffff91462638   440  stur x0, [x3, #63]
0xffff9146263c   444  ldur x0, [x2, #15]
0xffff91462640   448  add x0, x0, #0x5f (95)
0xffff91462644   452  stur x0, [x3, #55]
0xffff91462648   456  mov x0, x3
0xffff9146264c   460  ret
0xffff91462650   464  sub csp, jssp, #0x10 (16)
0xffff91462654   468  stp fp, lr, [jssp, #-16]!
0xffff91462658   472  movz fp, #0xa00000000
0xffff9146265c   476  sub csp, jssp, #0x8 (8)
0xffff91462660   480  str fp, [jssp, #-8]!
0xffff91462664   484  add fp, jssp, #0x8 (8)
0xffff91462668   488  movz x3, #0x0
0xffff9146266c   492  mov x16, lr
0xffff91462670   496  ldr x17, pc+152 (addr 0x0000ffff91462708)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91462674   500  blr x17
0xffff91462678   504  movz x0, #0x4800000000
0xffff9146267c   508  movz x10, #0x0
0xffff91462680   512  sub csp, jssp, #0x10 (16)
0xffff91462684   516  stp x10, x0, [jssp, #-16]!
0xffff91462688   520  movz x0, #0x2
0xffff9146268c   524  movz x1, #0x5b88
0xffff91462690   528  movk x1, #0xe2, lsl #16
0xffff91462694   532  ldr x16, pc+124 (addr 0x0000ffff91462710)    ;; code: STUB, CEntryStub, minor: 5
0xffff91462698   536  blr x16
0xffff9146269c   540  str x0, [jssp, #24]
0xffff914626a0   544  ldr x16, pc+120 (addr 0x0000ffff91462718)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914626a4   548  blr x16
0xffff914626a8   552  ldr lr, [jssp, #16]
0xffff914626ac   556  ldp xzr, fp, [jssp], #24
0xffff914626b0   560  b #-0x210 (addr 0xffff914624a0)
0xffff914626b4   564  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff914626b8   568  d63f03e0       constant
0xffff914626bc   572  d503201f       constant
0xffff914626c0   576  49b04201       constant
0xffff914626c4   580  00000000       constant
0xffff914626c8   584  49b04201       constant
0xffff914626cc   588  00000000       constant
0xffff914626d0   592  49b04201       constant
0xffff914626d4   596  00000000       constant
0xffff914626d8   600  49b04519       constant
0xffff914626dc   604  00000000       constant
0xffff914626e0   608  9142d2c0       constant
0xffff914626e4   612  0000ffff       constant
0xffff914626e8   616  49b04201       constant
0xffff914626ec   620  00000000       constant
0xffff914626f0   624  9142daa0       constant
0xffff914626f4   628  0000ffff       constant
0xffff914626f8   632  49b04241       constant
0xffff914626fc   636  00000000       constant
0xffff91462700   640  49b04241       constant
0xffff91462704   644  00000000       constant
0xffff91462708   648  91406820       constant
0xffff9146270c   652  0000ffff       constant
0xffff91462710   656  91406260       constant
0xffff91462714   660  0000ffff       constant
0xffff91462718   664  914068e0       constant
0xffff9146271c   668  0000ffff       constant
0xffff91462720   672  movz x16, #0x0
0xffff91462724   676  sub csp, jssp, #0x10 (16)
0xffff91462728   680  stp fp, lr, [jssp, #-16]!
0xffff9146272c   684  bl #+0x14 (addr 0xffff91462740)
0xffff91462730   688  movz x16, #0x8
0xffff91462734   692  sub csp, jssp, #0x10 (16)
0xffff91462738   696  stp fp, lr, [jssp, #-16]!
0xffff9146273c   700  bl #+0x4 (addr 0xffff91462740)
0xffff91462740   704  movz x17, #0xa00000000
0xffff91462744   708  sub csp, jssp, #0x10 (16)
0xffff91462748   712  stp x17, cp, [jssp, #-16]!
0xffff9146274c   716  add fp, jssp, #0x10 (16)
0xffff91462750   720  ldr x17, pc+24 (addr 0x0000ffff91462768)    ;; lazy deoptimization bailout 0
0xffff91462754   724  add x17, x17, x16
0xffff91462758   728  br x17
0xffff9146275c   732  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91462760   736  d63f03e0       constant
0xffff91462764   740  d503201f       constant
0xffff91462768   744  91206000       constant
0xffff9146276c   748  0000ffff       constant


Safepoints (size = 21)
0xffff9146269c   540  000 | x2 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff914624b0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914624b8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914624c0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914624c8  embedded object  (0x49b04519 <the hole>)
0xffff9146259c  code target (STUB)  (0xffff9142d2c0)
0xffff914625d4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9146260c  code target (STUB)  (0xffff9142daa0)
0xffff9146261c  embedded object  (0x49b04241 <undefined>)
0xffff91462634  embedded object  (0x49b04241 <undefined>)
0xffff91462670  code target (STUB)  (0xffff91406820)
0xffff91462694  code target (STUB)  (0xffff91406260)
0xffff914626a0  code target (STUB)  (0xffff914068e0)
0xffff914626b4  constant pool (size 108)
0xffff91462750  runtime entry
0xffff9146275c  constant pool (size 20)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff91464020     0  ldur x0, [x1, #7]
0xffff91464024     4  movz x16, #0x10f
0xffff91464028     8  ldr x0, [x0, x16]
0xffff9146402c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914640a0     0  ldur x0, [x1, #7]
0xffff914640a4     4  movz x16, #0x11f
0xffff914640a8     8  ldr x0, [x0, x16]
0xffff914640ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff91464120     0  ldur x0, [x1, #7]
0xffff91464124     4  movz x16, #0x12f
0xffff91464128     8  ldr x0, [x0, x16]
0xffff9146412c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914641a0     0  ldur x0, [x1, #7]
0xffff914641a4     4  movz x16, #0x127
0xffff914641a8     8  ldr x0, [x0, x16]
0xffff914641ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff91464220     0  ldur x0, [x1, #7]
0xffff91464224     4  movz x16, #0x137
0xffff91464228     8  ldr x0, [x0, x16]
0xffff9146422c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914642a0     0  ldur x0, [x1, #7]
0xffff914642a4     4  movz x16, #0x13f
0xffff914642a8     8  ldr x0, [x0, x16]
0xffff914642ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff91464320     0  ldur x0, [x1, #7]
0xffff91464324     4  movz x16, #0x147
0xffff91464328     8  ldr x0, [x0, x16]
0xffff9146432c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 1301)
0xffff914646a0     0  movz x2, #0xf2c0
0xffff914646a4     4  movk x2, #0x4117, lsl #16
0xffff914646a8     8  ldp x3, x0, [x2]
0xffff914646ac    12  adds x16, x3, #0x200 (512)
0xffff914646b0    16  ccmp x16, x0, #nzCv, lo
0xffff914646b4    20  b.hi #+0x288 (addr 0xffff9146493c)
0xffff914646b8    24  str x16, [x2]
0xffff914646bc    28  orr x3, x3, #0x1
0xffff914646c0    32  ldr x0, pc+744 (addr 0x0000ffff914649a8)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914646c4    36  stur x0, [x3, #-1]
0xffff914646c8    40  movz x0, #0x3e00000000
0xffff914646cc    44  stur x0, [x3, #7]
0xffff914646d0    48  stur x1, [x3, #15]
0xffff914646d4    52  stur cp, [x3, #23]
0xffff914646d8    56  ldr x0, pc+728 (addr 0x0000ffff914649b0)    ;; object: 0x49b04519 <the hole>
0xffff914646dc    60  stur x0, [x3, #31]
0xffff914646e0    64  ldur x0, [cp, #39]
0xffff914646e4    68  stur x0, [x3, #39]
0xffff914646e8    72  ldr x0, pc+720 (addr 0x0000ffff914649b8)    ;; object: 0x49b04241 <undefined>
0xffff914646ec    76  stur x0, [x3, #47]
0xffff914646f0    80  ldr x0, pc+720 (addr 0x0000ffff914649c0)    ;; object: 0x49b04241 <undefined>
0xffff914646f4    84  stur x0, [x3, #55]
0xffff914646f8    88  ldr x0, pc+720 (addr 0x0000ffff914649c8)    ;; object: 0x49b04241 <undefined>
0xffff914646fc    92  stur x0, [x3, #63]
0xffff91464700    96  ldr x0, pc+720 (addr 0x0000ffff914649d0)    ;; object: 0x49b04241 <undefined>
0xffff91464704   100  stur x0, [x3, #71]
0xffff91464708   104  ldr x0, pc+720 (addr 0x0000ffff914649d8)    ;; object: 0x49b04241 <undefined>
0xffff9146470c   108  stur x0, [x3, #79]
0xffff91464710   112  ldr x0, pc+720 (addr 0x0000ffff914649e0)    ;; object: 0x49b04241 <undefined>
0xffff91464714   116  stur x0, [x3, #87]
0xffff91464718   120  ldr x0, pc+720 (addr 0x0000ffff914649e8)    ;; object: 0x49b04241 <undefined>
0xffff9146471c   124  stur x0, [x3, #95]
0xffff91464720   128  ldr x0, pc+720 (addr 0x0000ffff914649f0)    ;; object: 0x49b04241 <undefined>
0xffff91464724   132  stur x0, [x3, #103]
0xffff91464728   136  ldr x0, pc+720 (addr 0x0000ffff914649f8)    ;; object: 0x49b04241 <undefined>
0xffff9146472c   140  stur x0, [x3, #111]
0xffff91464730   144  ldr x0, pc+720 (addr 0x0000ffff91464a00)    ;; object: 0x49b04241 <undefined>
0xffff91464734   148  stur x0, [x3, #119]
0xffff91464738   152  ldr x0, pc+720 (addr 0x0000ffff91464a08)    ;; object: 0x49b04241 <undefined>
0xffff9146473c   156  stur x0, [x3, #127]
0xffff91464740   160  ldr x0, pc+720 (addr 0x0000ffff91464a10)    ;; object: 0x49b04241 <undefined>
0xffff91464744   164  stur x0, [x3, #135]
0xffff91464748   168  ldr x0, pc+720 (addr 0x0000ffff91464a18)    ;; object: 0x49b04241 <undefined>
0xffff9146474c   172  stur x0, [x3, #143]
0xffff91464750   176  ldr x0, pc+720 (addr 0x0000ffff91464a20)    ;; object: 0x49b04241 <undefined>
0xffff91464754   180  stur x0, [x3, #151]
0xffff91464758   184  ldr x0, pc+720 (addr 0x0000ffff91464a28)    ;; object: 0x49b04241 <undefined>
0xffff9146475c   188  stur x0, [x3, #159]
0xffff91464760   192  ldr x0, pc+720 (addr 0x0000ffff91464a30)    ;; object: 0x49b04241 <undefined>
0xffff91464764   196  stur x0, [x3, #167]
0xffff91464768   200  ldr x0, pc+720 (addr 0x0000ffff91464a38)    ;; object: 0x49b04241 <undefined>
0xffff9146476c   204  stur x0, [x3, #175]
0xffff91464770   208  ldr x0, pc+720 (addr 0x0000ffff91464a40)    ;; object: 0x49b04241 <undefined>
0xffff91464774   212  stur x0, [x3, #183]
0xffff91464778   216  ldr x0, pc+720 (addr 0x0000ffff91464a48)    ;; object: 0x49b04241 <undefined>
0xffff9146477c   220  stur x0, [x3, #191]
0xffff91464780   224  ldr x0, pc+720 (addr 0x0000ffff91464a50)    ;; object: 0x49b04241 <undefined>
0xffff91464784   228  stur x0, [x3, #199]
0xffff91464788   232  ldr x0, pc+720 (addr 0x0000ffff91464a58)    ;; object: 0x49b04241 <undefined>
0xffff9146478c   236  stur x0, [x3, #207]
0xffff91464790   240  ldr x0, pc+720 (addr 0x0000ffff91464a60)    ;; object: 0x49b04241 <undefined>
0xffff91464794   244  stur x0, [x3, #215]
0xffff91464798   248  ldr x0, pc+720 (addr 0x0000ffff91464a68)    ;; object: 0x49b04241 <undefined>
0xffff9146479c   252  stur x0, [x3, #223]
0xffff914647a0   256  ldr x0, pc+720 (addr 0x0000ffff91464a70)    ;; object: 0x49b04241 <undefined>
0xffff914647a4   260  stur x0, [x3, #231]
0xffff914647a8   264  ldr x0, pc+720 (addr 0x0000ffff91464a78)    ;; object: 0x49b04241 <undefined>
0xffff914647ac   268  stur x0, [x3, #239]
0xffff914647b0   272  ldr x0, pc+720 (addr 0x0000ffff91464a80)    ;; object: 0x49b04241 <undefined>
0xffff914647b4   276  stur x0, [x3, #247]
0xffff914647b8   280  ldr x0, pc+720 (addr 0x0000ffff91464a88)    ;; object: 0x49b04241 <undefined>
0xffff914647bc   284  stur x0, [x3, #255]
0xffff914647c0   288  ldr x0, pc+720 (addr 0x0000ffff91464a90)    ;; object: 0x49b04241 <undefined>
0xffff914647c4   292  movz x16, #0x107
0xffff914647c8   296  str x0, [x3, x16]
0xffff914647cc   300  ldr x0, pc+716 (addr 0x0000ffff91464a98)    ;; object: 0x49b04241 <undefined>
0xffff914647d0   304  movz x16, #0x10f
0xffff914647d4   308  str x0, [x3, x16]
0xffff914647d8   312  ldr x0, pc+712 (addr 0x0000ffff91464aa0)    ;; object: 0x49b04241 <undefined>
0xffff914647dc   316  movz x16, #0x117
0xffff914647e0   320  str x0, [x3, x16]
0xffff914647e4   324  ldr x0, pc+708 (addr 0x0000ffff91464aa8)    ;; object: 0x49b04241 <undefined>
0xffff914647e8   328  movz x16, #0x11f
0xffff914647ec   332  str x0, [x3, x16]
0xffff914647f0   336  ldr x0, pc+704 (addr 0x0000ffff91464ab0)    ;; object: 0x49b04241 <undefined>
0xffff914647f4   340  movz x16, #0x127
0xffff914647f8   344  str x0, [x3, x16]
0xffff914647fc   348  ldr x0, pc+700 (addr 0x0000ffff91464ab8)    ;; object: 0x49b04241 <undefined>
0xffff91464800   352  movz x16, #0x12f
0xffff91464804   356  str x0, [x3, x16]
0xffff91464808   360  ldr x0, pc+696 (addr 0x0000ffff91464ac0)    ;; object: 0x49b04241 <undefined>
0xffff9146480c   364  movz x16, #0x137
0xffff91464810   368  str x0, [x3, x16]
0xffff91464814   372  ldr x0, pc+692 (addr 0x0000ffff91464ac8)    ;; object: 0x49b04241 <undefined>
0xffff91464818   376  movz x16, #0x13f
0xffff9146481c   380  str x0, [x3, x16]
0xffff91464820   384  ldr x0, pc+688 (addr 0x0000ffff91464ad0)    ;; object: 0x49b04241 <undefined>
0xffff91464824   388  movz x16, #0x147
0xffff91464828   392  str x0, [x3, x16]
0xffff9146482c   396  ldr x0, pc+684 (addr 0x0000ffff91464ad8)    ;; object: 0x49b04241 <undefined>
0xffff91464830   400  movz x16, #0x14f
0xffff91464834   404  str x0, [x3, x16]
0xffff91464838   408  ldr x0, pc+680 (addr 0x0000ffff91464ae0)    ;; object: 0x49b04241 <undefined>
0xffff9146483c   412  movz x16, #0x157
0xffff91464840   416  str x0, [x3, x16]
0xffff91464844   420  ldr x0, pc+676 (addr 0x0000ffff91464ae8)    ;; object: 0x49b04241 <undefined>
0xffff91464848   424  movz x16, #0x15f
0xffff9146484c   428  str x0, [x3, x16]
0xffff91464850   432  ldr x0, pc+672 (addr 0x0000ffff91464af0)    ;; object: 0x49b04241 <undefined>
0xffff91464854   436  movz x16, #0x167
0xffff91464858   440  str x0, [x3, x16]
0xffff9146485c   444  ldr x0, pc+668 (addr 0x0000ffff91464af8)    ;; object: 0x49b04241 <undefined>
0xffff91464860   448  movz x16, #0x16f
0xffff91464864   452  str x0, [x3, x16]
0xffff91464868   456  ldr x0, pc+664 (addr 0x0000ffff91464b00)    ;; object: 0x49b04241 <undefined>
0xffff9146486c   460  movz x16, #0x177
0xffff91464870   464  str x0, [x3, x16]
0xffff91464874   468  ldr x0, pc+660 (addr 0x0000ffff91464b08)    ;; object: 0x49b04241 <undefined>
0xffff91464878   472  movz x16, #0x17f
0xffff9146487c   476  str x0, [x3, x16]
0xffff91464880   480  ldr x0, pc+656 (addr 0x0000ffff91464b10)    ;; object: 0x49b04241 <undefined>
0xffff91464884   484  movz x16, #0x187
0xffff91464888   488  str x0, [x3, x16]
0xffff9146488c   492  ldr x0, pc+652 (addr 0x0000ffff91464b18)    ;; object: 0x49b04241 <undefined>
0xffff91464890   496  movz x16, #0x18f
0xffff91464894   500  str x0, [x3, x16]
0xffff91464898   504  ldr x0, pc+648 (addr 0x0000ffff91464b20)    ;; object: 0x49b04241 <undefined>
0xffff9146489c   508  movz x16, #0x197
0xffff914648a0   512  str x0, [x3, x16]
0xffff914648a4   516  ldr x0, pc+644 (addr 0x0000ffff91464b28)    ;; object: 0x49b04241 <undefined>
0xffff914648a8   520  movz x16, #0x19f
0xffff914648ac   524  str x0, [x3, x16]
0xffff914648b0   528  ldr x0, pc+640 (addr 0x0000ffff91464b30)    ;; object: 0x49b04241 <undefined>
0xffff914648b4   532  movz x16, #0x1a7
0xffff914648b8   536  str x0, [x3, x16]
0xffff914648bc   540  ldr x0, pc+636 (addr 0x0000ffff91464b38)    ;; object: 0x49b04241 <undefined>
0xffff914648c0   544  movz x16, #0x1af
0xffff914648c4   548  str x0, [x3, x16]
0xffff914648c8   552  ldr x0, pc+632 (addr 0x0000ffff91464b40)    ;; object: 0x49b04241 <undefined>
0xffff914648cc   556  movz x16, #0x1b7
0xffff914648d0   560  str x0, [x3, x16]
0xffff914648d4   564  ldr x0, pc+628 (addr 0x0000ffff91464b48)    ;; object: 0x49b04241 <undefined>
0xffff914648d8   568  movz x16, #0x1bf
0xffff914648dc   572  str x0, [x3, x16]
0xffff914648e0   576  ldr x0, pc+624 (addr 0x0000ffff91464b50)    ;; object: 0x49b04241 <undefined>
0xffff914648e4   580  movz x16, #0x1c7
0xffff914648e8   584  str x0, [x3, x16]
0xffff914648ec   588  ldr x0, pc+620 (addr 0x0000ffff91464b58)    ;; object: 0x49b04241 <undefined>
0xffff914648f0   592  movz x16, #0x1cf
0xffff914648f4   596  str x0, [x3, x16]
0xffff914648f8   600  ldr x0, pc+616 (addr 0x0000ffff91464b60)    ;; object: 0x49b04241 <undefined>
0xffff914648fc   604  movz x16, #0x1d7
0xffff91464900   608  str x0, [x3, x16]
0xffff91464904   612  ldr x0, pc+612 (addr 0x0000ffff91464b68)    ;; object: 0x49b04241 <undefined>
0xffff91464908   616  movz x16, #0x1df
0xffff9146490c   620  str x0, [x3, x16]
0xffff91464910   624  ldr x0, pc+608 (addr 0x0000ffff91464b70)    ;; object: 0x49b04241 <undefined>
0xffff91464914   628  movz x16, #0x1e7
0xffff91464918   632  str x0, [x3, x16]
0xffff9146491c   636  ldr x0, pc+604 (addr 0x0000ffff91464b78)    ;; object: 0x49b04241 <undefined>
0xffff91464920   640  movz x16, #0x1ef
0xffff91464924   644  str x0, [x3, x16]
0xffff91464928   648  ldr x0, pc+600 (addr 0x0000ffff91464b80)    ;; object: 0x49b04241 <undefined>
0xffff9146492c   652  movz x16, #0x1f7
0xffff91464930   656  str x0, [x3, x16]
0xffff91464934   660  mov x0, x3
0xffff91464938   664  ret
0xffff9146493c   668  sub csp, jssp, #0x10 (16)
0xffff91464940   672  stp fp, lr, [jssp, #-16]!
0xffff91464944   676  movz fp, #0xa00000000
0xffff91464948   680  sub csp, jssp, #0x8 (8)
0xffff9146494c   684  str fp, [jssp, #-8]!
0xffff91464950   688  add fp, jssp, #0x8 (8)
0xffff91464954   692  movz x3, #0x0
0xffff91464958   696  mov x16, lr
0xffff9146495c   700  ldr x17, pc+556 (addr 0x0000ffff91464b88)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91464960   704  blr x17
0xffff91464964   708  movz x0, #0x20000000000
0xffff91464968   712  movz x10, #0x0
0xffff9146496c   716  sub csp, jssp, #0x10 (16)
0xffff91464970   720  stp x10, x0, [jssp, #-16]!
0xffff91464974   724  movz x0, #0x2
0xffff91464978   728  movz x1, #0x5b88
0xffff9146497c   732  movk x1, #0xe2, lsl #16
0xffff91464980   736  ldr x16, pc+528 (addr 0x0000ffff91464b90)    ;; code: STUB, CEntryStub, minor: 5
0xffff91464984   740  blr x16
0xffff91464988   744  str x0, [jssp, #24]
0xffff9146498c   748  ldr x16, pc+524 (addr 0x0000ffff91464b98)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91464990   752  blr x16
0xffff91464994   756  ldr lr, [jssp, #16]
0xffff91464998   760  ldp xzr, fp, [jssp], #24
0xffff9146499c   764  b #-0x2dc (addr 0xffff914646c0)
0xffff914649a0   768  58000fff       constant pool begin (num_const = 127)    ;; constant pool
0xffff914649a4   772  d63f03e0       constant
0xffff914649a8   776  36406149       constant
0xffff914649ac   780  00000000       constant
0xffff914649b0   784  49b04519       constant
0xffff914649b4   788  00000000       constant
0xffff914649b8   792  49b04241       constant
0xffff914649bc   796  00000000       constant
0xffff914649c0   800  49b04241       constant
0xffff914649c4   804  00000000       constant
0xffff914649c8   808  49b04241       constant
0xffff914649cc   812  00000000       constant
0xffff914649d0   816  49b04241       constant
0xffff914649d4   820  00000000       constant
0xffff914649d8   824  49b04241       constant
0xffff914649dc   828  00000000       constant
0xffff914649e0   832  49b04241       constant
0xffff914649e4   836  00000000       constant
0xffff914649e8   840  49b04241       constant
0xffff914649ec   844  00000000       constant
0xffff914649f0   848  49b04241       constant
0xffff914649f4   852  00000000       constant
0xffff914649f8   856  49b04241       constant
0xffff914649fc   860  00000000       constant
0xffff91464a00   864  49b04241       constant
0xffff91464a04   868  00000000       constant
0xffff91464a08   872  49b04241       constant
0xffff91464a0c   876  00000000       constant
0xffff91464a10   880  49b04241       constant
0xffff91464a14   884  00000000       constant
0xffff91464a18   888  49b04241       constant
0xffff91464a1c   892  00000000       constant
0xffff91464a20   896  49b04241       constant
0xffff91464a24   900  00000000       constant
0xffff91464a28   904  49b04241       constant
0xffff91464a2c   908  00000000       constant
0xffff91464a30   912  49b04241       constant
0xffff91464a34   916  00000000       constant
0xffff91464a38   920  49b04241       constant
0xffff91464a3c   924  00000000       constant
0xffff91464a40   928  49b04241       constant
0xffff91464a44   932  00000000       constant
0xffff91464a48   936  49b04241       constant
0xffff91464a4c   940  00000000       constant
0xffff91464a50   944  49b04241       constant
0xffff91464a54   948  00000000       constant
0xffff91464a58   952  49b04241       constant
0xffff91464a5c   956  00000000       constant
0xffff91464a60   960  49b04241       constant
0xffff91464a64   964  00000000       constant
0xffff91464a68   968  49b04241       constant
0xffff91464a6c   972  00000000       constant
0xffff91464a70   976  49b04241       constant
0xffff91464a74   980  00000000       constant
0xffff91464a78   984  49b04241       constant
0xffff91464a7c   988  00000000       constant
0xffff91464a80   992  49b04241       constant
0xffff91464a84   996  00000000       constant
0xffff91464a88  1000  49b04241       constant
0xffff91464a8c  1004  00000000       constant
0xffff91464a90  1008  49b04241       constant
0xffff91464a94  1012  00000000       constant
0xffff91464a98  1016  49b04241       constant
0xffff91464a9c  1020  00000000       constant
0xffff91464aa0  1024  49b04241       constant
0xffff91464aa4  1028  00000000       constant
0xffff91464aa8  1032  49b04241       constant
0xffff91464aac  1036  00000000       constant
0xffff91464ab0  1040  49b04241       constant
0xffff91464ab4  1044  00000000       constant
0xffff91464ab8  1048  49b04241       constant
0xffff91464abc  1052  00000000       constant
0xffff91464ac0  1056  49b04241       constant
0xffff91464ac4  1060  00000000       constant
0xffff91464ac8  1064  49b04241       constant
0xffff91464acc  1068  00000000       constant
0xffff91464ad0  1072  49b04241       constant
0xffff91464ad4  1076  00000000       constant
0xffff91464ad8  1080  49b04241       constant
0xffff91464adc  1084  00000000       constant
0xffff91464ae0  1088  49b04241       constant
0xffff91464ae4  1092  00000000       constant
0xffff91464ae8  1096  49b04241       constant
0xffff91464aec  1100  00000000       constant
0xffff91464af0  1104  49b04241       constant
0xffff91464af4  1108  00000000       constant
0xffff91464af8  1112  49b04241       constant
0xffff91464afc  1116  00000000       constant
0xffff91464b00  1120  49b04241       constant
0xffff91464b04  1124  00000000       constant
0xffff91464b08  1128  49b04241       constant
0xffff91464b0c  1132  00000000       constant
0xffff91464b10  1136  49b04241       constant
0xffff91464b14  1140  00000000       constant
0xffff91464b18  1144  49b04241       constant
0xffff91464b1c  1148  00000000       constant
0xffff91464b20  1152  49b04241       constant
0xffff91464b24  1156  00000000       constant
0xffff91464b28  1160  49b04241       constant
0xffff91464b2c  1164  00000000       constant
0xffff91464b30  1168  49b04241       constant
0xffff91464b34  1172  00000000       constant
0xffff91464b38  1176  49b04241       constant
0xffff91464b3c  1180  00000000       constant
0xffff91464b40  1184  49b04241       constant
0xffff91464b44  1188  00000000       constant
0xffff91464b48  1192  49b04241       constant
0xffff91464b4c  1196  00000000       constant
0xffff91464b50  1200  49b04241       constant
0xffff91464b54  1204  00000000       constant
0xffff91464b58  1208  49b04241       constant
0xffff91464b5c  1212  00000000       constant
0xffff91464b60  1216  49b04241       constant
0xffff91464b64  1220  00000000       constant
0xffff91464b68  1224  49b04241       constant
0xffff91464b6c  1228  00000000       constant
0xffff91464b70  1232  49b04241       constant
0xffff91464b74  1236  00000000       constant
0xffff91464b78  1240  49b04241       constant
0xffff91464b7c  1244  00000000       constant
0xffff91464b80  1248  49b04241       constant
0xffff91464b84  1252  00000000       constant
0xffff91464b88  1256  91406820       constant
0xffff91464b8c  1260  0000ffff       constant
0xffff91464b90  1264  91406260       constant
0xffff91464b94  1268  0000ffff       constant
0xffff91464b98  1272  914068e0       constant
0xffff91464b9c  1276  0000ffff       constant


Safepoints (size = 21)
0xffff91464988   744  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 69)
0xffff914646c0  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914646d8  embedded object  (0x49b04519 <the hole>)
0xffff914646e8  embedded object  (0x49b04241 <undefined>)
0xffff914646f0  embedded object  (0x49b04241 <undefined>)
0xffff914646f8  embedded object  (0x49b04241 <undefined>)
0xffff91464700  embedded object  (0x49b04241 <undefined>)
0xffff91464708  embedded object  (0x49b04241 <undefined>)
0xffff91464710  embedded object  (0x49b04241 <undefined>)
0xffff91464718  embedded object  (0x49b04241 <undefined>)
0xffff91464720  embedded object  (0x49b04241 <undefined>)
0xffff91464728  embedded object  (0x49b04241 <undefined>)
0xffff91464730  embedded object  (0x49b04241 <undefined>)
0xffff91464738  embedded object  (0x49b04241 <undefined>)
0xffff91464740  embedded object  (0x49b04241 <undefined>)
0xffff91464748  embedded object  (0x49b04241 <undefined>)
0xffff91464750  embedded object  (0x49b04241 <undefined>)
0xffff91464758  embedded object  (0x49b04241 <undefined>)
0xffff91464760  embedded object  (0x49b04241 <undefined>)
0xffff91464768  embedded object  (0x49b04241 <undefined>)
0xffff91464770  embedded object  (0x49b04241 <undefined>)
0xffff91464778  embedded object  (0x49b04241 <undefined>)
0xffff91464780  embedded object  (0x49b04241 <undefined>)
0xffff91464788  embedded object  (0x49b04241 <undefined>)
0xffff91464790  embedded object  (0x49b04241 <undefined>)
0xffff91464798  embedded object  (0x49b04241 <undefined>)
0xffff914647a0  embedded object  (0x49b04241 <undefined>)
0xffff914647a8  embedded object  (0x49b04241 <undefined>)
0xffff914647b0  embedded object  (0x49b04241 <undefined>)
0xffff914647b8  embedded object  (0x49b04241 <undefined>)
0xffff914647c0  embedded object  (0x49b04241 <undefined>)
0xffff914647cc  embedded object  (0x49b04241 <undefined>)
0xffff914647d8  embedded object  (0x49b04241 <undefined>)
0xffff914647e4  embedded object  (0x49b04241 <undefined>)
0xffff914647f0  embedded object  (0x49b04241 <undefined>)
0xffff914647fc  embedded object  (0x49b04241 <undefined>)
0xffff91464808  embedded object  (0x49b04241 <undefined>)
0xffff91464814  embedded object  (0x49b04241 <undefined>)
0xffff91464820  embedded object  (0x49b04241 <undefined>)
0xffff9146482c  embedded object  (0x49b04241 <undefined>)
0xffff91464838  embedded object  (0x49b04241 <undefined>)
0xffff91464844  embedded object  (0x49b04241 <undefined>)
0xffff91464850  embedded object  (0x49b04241 <undefined>)
0xffff9146485c  embedded object  (0x49b04241 <undefined>)
0xffff91464868  embedded object  (0x49b04241 <undefined>)
0xffff91464874  embedded object  (0x49b04241 <undefined>)
0xffff91464880  embedded object  (0x49b04241 <undefined>)
0xffff9146488c  embedded object  (0x49b04241 <undefined>)
0xffff91464898  embedded object  (0x49b04241 <undefined>)
0xffff914648a4  embedded object  (0x49b04241 <undefined>)
0xffff914648b0  embedded object  (0x49b04241 <undefined>)
0xffff914648bc  embedded object  (0x49b04241 <undefined>)
0xffff914648c8  embedded object  (0x49b04241 <undefined>)
0xffff914648d4  embedded object  (0x49b04241 <undefined>)
0xffff914648e0  embedded object  (0x49b04241 <undefined>)
0xffff914648ec  embedded object  (0x49b04241 <undefined>)
0xffff914648f8  embedded object  (0x49b04241 <undefined>)
0xffff91464904  embedded object  (0x49b04241 <undefined>)
0xffff91464910  embedded object  (0x49b04241 <undefined>)
0xffff9146491c  embedded object  (0x49b04241 <undefined>)
0xffff91464928  embedded object  (0x49b04241 <undefined>)
0xffff9146495c  code target (STUB)  (0xffff91406820)
0xffff91464980  code target (STUB)  (0xffff91406260)
0xffff9146498c  code target (STUB)  (0xffff914068e0)
0xffff914649a0  constant pool (size 512)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff91467340     0  ldur x0, [x1, #7]
0xffff91467344     4  ldur x0, [x0, #55]
0xffff91467348     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914673c0     0  ldur x0, [x1, #7]
0xffff914673c4     4  ldur x0, [x0, #39]
0xffff914673c8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff91467440     0  ldur x0, [x1, #7]
0xffff91467444     4  ldur x0, [x0, #47]
0xffff91467448     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914674c0     0  ldur x0, [x1, #7]
0xffff914674c4     4  ldur x0, [x0, #63]
0xffff914674c8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff91467540     0  ldur x0, [x1, #7]
0xffff91467544     4  ldur x0, [x0, #127]
0xffff91467548     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914675c0     0  ldur x0, [x1, #7]
0xffff914675c4     4  ldur x0, [x0, #167]
0xffff914675c8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91467640     0  ldur x0, [x1, #-1]
0xffff91467644     4  ldur x0, [x0, #47]
0xffff91467648     8  movz x16, #0x617
0xffff9146764c    12  ldr x0, [x0, x16]
0xffff91467650    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914676c0     0  ldur x0, [x1, #7]
0xffff914676c4     4  movz x16, #0x157
0xffff914676c8     8  ldr x0, [x0, x16]
0xffff914676cc    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = INTERNALIZED_STRING*INTERNALIZED_STRING -> INTERNALIZED_STRING
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 184)
0xffff91467de0     0  and x16, x1, x0
0xffff91467de4     4  tbz w16, #0, #+0x2c (addr 0xffff91467e10)
0xffff91467de8     8  ldur x11, [x1, #-1]
0xffff91467dec    12  ldur x10, [x0, #-1]
0xffff91467df0    16  ldrb w11, [x11, #11]
0xffff91467df4    20  ldrb w10, [x10, #11]
0xffff91467df8    24  orr x12, x11, x10
0xffff91467dfc    28  tst x12, #0xc0
0xffff91467e00    32  b.ne #+0x10 (addr 0xffff91467e10)
0xffff91467e04    36  cmp x1, x0
0xffff91467e08    40  cset x0, ne
0xffff91467e0c    44  ret
0xffff91467e10    48  movz x16, #0xc00000000
0xffff91467e14    52  sub csp, jssp, #0x10 (16)
0xffff91467e18    56  stp fp, lr, [jssp, #-16]!
0xffff91467e1c    60  sub csp, jssp, #0x10 (16)
0xffff91467e20    64  str x16, [jssp, #-8]!
0xffff91467e24    68  ldr x17, pc+92 (addr 0x0000ffff91467e80)    ;; object: 0xffff91467d81 <Code: COMPARE_IC>
0xffff91467e28    72  sub csp, jssp, #0x10 (16)
0xffff91467e2c    76  str x17, [jssp, #-8]!
0xffff91467e30    80  add fp, jssp, #0x10 (16)
0xffff91467e34    84  sub csp, jssp, #0x18 (24)
0xffff91467e38    88  stp lr, x0, [jssp, #-24]!
0xffff91467e3c    92  str x1, [jssp, #16]
0xffff91467e40    96  movz x10, #0x2f00000000
0xffff91467e44   100  sub csp, jssp, #0x18 (24)
0xffff91467e48   104  stp x10, x0, [jssp, #-24]!
0xffff91467e4c   108  str x1, [jssp, #16]
0xffff91467e50   112  movz x0, #0x3
0xffff91467e54   116  ldr x1, pc+52 (addr 0x0000ffff91467e88)    ;; external reference (Runtime::CompareIC_Miss)
0xffff91467e58   120  ldr x16, pc+56 (addr 0x0000ffff91467e90)    ;; code: STUB, CEntryStub, minor: 4
0xffff91467e5c   124  blr x16
0xffff91467e60   128  add x11, x0, #0x5f (95)
0xffff91467e64   132  ldr x1, [jssp, #16]
0xffff91467e68   136  ldp lr, x0, [jssp], #24
0xffff91467e6c   140  mov jssp, fp
0xffff91467e70   144  ldp fp, lr, [jssp], #16
0xffff91467e74   148  br x11
0xffff91467e78   152  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91467e7c   156  d63f03e0       constant
0xffff91467e80   160  91467d81       constant
0xffff91467e84   164  0000ffff       constant
0xffff91467e88   168  00c8a980       constant
0xffff91467e8c   172  00000000       constant
0xffff91467e90   176  91406060       constant
0xffff91467e94   180  0000ffff       constant


RelocInfo (size = 12)
0xffff91467e24  embedded object  (0xffff91467d81 <Code: COMPARE_IC>)
0xffff91467e54  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff91467e58  code target (STUB)  (0xffff91406060)
0xffff91467e78  constant pool (size 32)


kind = STUB
major_key = DirectCEntryStub
name = DirectCEntryStub
compiler = unknown
Instructions (size = 16)
0xffff91468200     0  str lr, [csp]
0xffff91468204     4  blr x10
0xffff91468208     8  ldr lr, [csp]
0xffff9146820c    12  ret


RelocInfo (size = 0)


kind = STUB
major_key = CallApiGetterStub
name = CallApiGetterStub
compiler = unknown
Instructions (size = 440)
0xffff91468280     0  mov x0, jssp
0xffff91468284     4  add x1, x0, #0x8 (8)
0xffff91468288     8  sub csp, jssp, #0x10 (16)
0xffff9146828c    12  stp fp, lr, [jssp, #-16]!
0xffff91468290    16  mov fp, jssp
0xffff91468294    20  movz x10, #0x300000000
0xffff91468298    24  sub csp, jssp, #0x8 (8)
0xffff9146829c    28  str x10, [jssp, #-8]!
0xffff914682a0    32  sub csp, jssp, #0x8 (8)
0xffff914682a4    36  str xzr, [jssp, #-8]!
0xffff914682a8    40  ldr x10, pc+288 (addr 0x0000ffff914683c8)    ;; object: 0xffff91468221 <Code: STUB>
0xffff914682ac    44  sub csp, jssp, #0x8 (8)
0xffff914682b0    48  str x10, [jssp, #-8]!
0xffff914682b4    52  ldr x10, pc+284 (addr 0x0000ffff914683d0)    ;; external reference (Isolate::c_entry_fp_address)
0xffff914682b8    56  str fp, [x10]
0xffff914682bc    60  ldr x10, pc+284 (addr 0x0000ffff914683d8)    ;; external reference (Isolate::context_address)
0xffff914682c0    64  str cp, [x10]
0xffff914682c4    68  sub csp, jssp, #0x30 (48)
0xffff914682c8    72  sub jssp, jssp, #0x30 (48)
0xffff914682cc    76  and csp, jssp, #0xfffffffffffffff0
0xffff914682d0    80  add x10, csp, #0x8 (8)
0xffff914682d4    84  stur x10, [fp, #-16]
0xffff914682d8    88  str x1, [csp, #8]
0xffff914682dc    92  add x1, csp, #0x8 (8)
0xffff914682e0    96  ldr x10, pc+256 (addr 0x0000ffff914683e0)    ;; external reference (CpuProfiler::is_profiling)
0xffff914682e4   100  ldrb w10, [x10]
0xffff914682e8   104  cbz w10, #+0xc (addr 0xffff914682f4)
0xffff914682ec   108  ldr x3, pc+252 (addr 0x0000ffff914683e8)    ;; external reference (InvokeAccessorGetterCallback)
0xffff914682f0   112  b #+0x8 (addr 0xffff914682f8)
0xffff914682f4   116  mov x3, x2
0xffff914682f8   120  str x19, [csp, #16]
0xffff914682fc   124  str x20, [csp, #24]
0xffff91468300   128  str x21, [csp, #32]
0xffff91468304   132  str x22, [csp, #40]
0xffff91468308   136  ldr x22, pc+232 (addr 0x0000ffff914683f0)    ;; external reference (HandleScope::next)
0xffff9146830c   140  ldr x19, [x22]
0xffff91468310   144  ldr x20, [x22, #8]
0xffff91468314   148  ldr w21, [x22, #16]
0xffff91468318   152  add w21, w21, #0x1 (1)
0xffff9146831c   156  str w21, [x22, #16]
0xffff91468320   160  ldr lr, pc+216 (addr 0x0000ffff914683f8)    ;; code: STUB, DirectCEntryStub, minor: 0
0xffff91468324   164  mov x10, x3
0xffff91468328   168  blr lr
0xffff9146832c   172  ldr x0, [fp, #56]
0xffff91468330   176  str x19, [x22]
0xffff91468334   180  sub w21, w21, #0x1 (1)
0xffff91468338   184  str w21, [x22, #16]
0xffff9146833c   188  ldr x1, [x22, #8]
0xffff91468340   192  cmp x20, x1
0xffff91468344   196  b.ne #+0x58 (addr 0xffff9146839c)
0xffff91468348   200  ldr x19, [csp, #16]
0xffff9146834c   204  ldr x20, [csp, #24]
0xffff91468350   208  ldr x21, [csp, #32]
0xffff91468354   212  ldr x22, [csp, #40]
0xffff91468358   216  ldr x1, pc+168 (addr 0x0000ffff91468400)    ;; external reference (Isolate::context_address)
0xffff9146835c   220  ldr cp, [x1]
0xffff91468360   224  ldr x1, pc+168 (addr 0x0000ffff91468408)    ;; external reference (Isolate::c_entry_fp_address)
0xffff91468364   228  str xzr, [x1]
0xffff91468368   232  mov jssp, fp
0xffff9146836c   236  ldp fp, lr, [jssp], #16
0xffff91468370   240  ldr x5, pc+160 (addr 0x0000ffff91468410)    ;; external reference (Isolate::scheduled_exception)
0xffff91468374   244  ldr x5, [x5]
0xffff91468378   248  ldr x16, [x26, #88]
0xffff9146837c   252  cmp x5, x16
0xffff91468380   256  b.ne #+0xc (addr 0xffff9146838c)
0xffff91468384   260  add jssp, jssp, #0x40 (64)
0xffff91468388   264  ret
0xffff9146838c   268  movz x0, #0x0
0xffff91468390   272  ldr x1, pc+136 (addr 0x0000ffff91468418)    ;; external reference (Runtime::PromoteScheduledException)
0xffff91468394   276  ldr x16, pc+140 (addr 0x0000ffff91468420)    ;; code: STUB, CEntryStub, minor: 4
0xffff91468398   280  br x16
0xffff9146839c   284  str x20, [x22, #8]
0xffff914683a0   288  mov x19, x0
0xffff914683a4   292  ldr x0, pc+132 (addr 0x0000ffff91468428)    ;; external reference (isolate)
0xffff914683a8   296  ldr x16, pc+136 (addr 0x0000ffff91468430)    ;; external reference (HandleScope::DeleteExtensions)
0xffff914683ac   300  and csp, jssp, #0xfffffffffffffff0
0xffff914683b0   304  blr x16
0xffff914683b4   308  mov x0, x19
0xffff914683b8   312  b #-0x70 (addr 0xffff91468348)
0xffff914683bc   316  580003df       constant pool begin (num_const = 30)    ;; constant pool
0xffff914683c0   320  d63f03e0       constant
0xffff914683c4   324  d503201f       constant
0xffff914683c8   328  91468221       constant
0xffff914683cc   332  0000ffff       constant
0xffff914683d0   336  4117fdf8       constant
0xffff914683d4   340  00000000       constant
0xffff914683d8   344  4117fd90       constant
0xffff914683dc   348  00000000       constant
0xffff914683e0   352  411a95e1       constant
0xffff914683e4   356  00000000       constant
0xffff914683e8   360  009274e0       constant
0xffff914683ec   364  00000000       constant
0xffff914683f0   368  4117fe70       constant
0xffff914683f4   372  00000000       constant
0xffff914683f8   376  91468200       constant
0xffff914683fc   380  0000ffff       constant
0xffff91468400   384  4117fd90       constant
0xffff91468404   388  00000000       constant
0xffff91468408   392  4117fdf8       constant
0xffff9146840c   396  00000000       constant
0xffff91468410   400  4117fde0       constant
0xffff91468414   404  00000000       constant
0xffff91468418   408  00e234b8       constant
0xffff9146841c   412  00000000       constant
0xffff91468420   416  91406060       constant
0xffff91468424   420  0000ffff       constant
0xffff91468428   424  4117e2d0       constant
0xffff9146842c   428  00000000       constant
0xffff91468430   432  00c05c20       constant
0xffff91468434   436  00000000       constant


RelocInfo (size = 31)
0xffff914682a8  embedded object  (0xffff91468221 <Code: STUB>)
0xffff914682b4  external reference (Isolate::c_entry_fp_address)  (0x4117fdf8)
0xffff914682bc  external reference (Isolate::context_address)  (0x4117fd90)
0xffff914682e0  external reference (CpuProfiler::is_profiling)  (0x411a95e1)
0xffff914682ec  external reference (InvokeAccessorGetterCallback)  (0x9274e0)
0xffff91468308  external reference (HandleScope::next)  (0x4117fe70)
0xffff91468320  code target (STUB)  (0xffff91468200)
0xffff91468358  external reference (Isolate::context_address)  (0x4117fd90)
0xffff91468360  external reference (Isolate::c_entry_fp_address)  (0x4117fdf8)
0xffff91468370  external reference (Isolate::scheduled_exception)  (0x4117fde0)
0xffff91468390  external reference (Runtime::PromoteScheduledException)  (0xe234b8)
0xffff91468394  code target (STUB)  (0xffff91406060)
0xffff914683a4  external reference (isolate)  (0x4117e2d0)
0xffff914683a8  external reference (HandleScope::DeleteExtensions)  (0xc05c20)
0xffff914683bc  constant pool (size 124)


kind = HANDLER
major_key = <NoCache>Stub
name = name
compiler = unknown
Instructions (size = 184)
0xffff914684a0     0  sub csp, jssp, #0x8 (8)
0xffff914684a4     4  str x3, [jssp, #-8]!
0xffff914684a8     8  sub csp, jssp, #0x8 (8)
0xffff914684ac    12  str x0, [jssp, #-8]!
0xffff914684b0    16  ldr x0, pc+120 (addr 0x0000ffff91468528)    ;; object: 0x49b5b0f1 Cell for 0
0xffff914684b4    20  ldur x0, [x0, #7]
0xffff914684b8    24  cmp x0, #0x0 (0)
0xffff914684bc    28  b.ne #+0x8 (addr 0xffff914684c4)
0xffff914684c0    32  b #+0x14 (addr 0xffff914684d4)
0xffff914684c4    36  ldr x0, [jssp], #8
0xffff914684c8    40  ldr x3, [jssp], #8
0xffff914684cc    44  ldr x16, pc+100 (addr 0x0000ffff91468530)    ;; code: BUILTIN
0xffff914684d0    48  br x16
0xffff914684d4    52  add jssp, jssp, #0x10 (16)
0xffff914684d8    56  sub csp, jssp, #0x8 (8)
0xffff914684dc    60  str x1, [jssp, #-8]!
0xffff914684e0    64  ldr x4, pc+88 (addr 0x0000ffff91468538)    ;; object: 0x49b04241 <undefined>
0xffff914684e4    68  ldr x5, [x26, #40]
0xffff914684e8    72  ldr x0, pc+88 (addr 0x0000ffff91468540)    ;; external reference (isolate)
0xffff914684ec    76  sub csp, jssp, #0x28 (40)
0xffff914684f0    80  stp x0, x5, [jssp, #-32]!
0xffff914684f4    84  stp x5, x4, [jssp, #16]
0xffff914684f8    88  str x1, [jssp, #-8]!
0xffff914684fc    92  movz x16, #0x0
0xffff91468500    96  sub csp, jssp, #0x8 (8)
0xffff91468504   100  str x16, [jssp, #-8]!
0xffff91468508   104  sub csp, jssp, #0x8 (8)
0xffff9146850c   108  str x2, [jssp, #-8]!
0xffff91468510   112  ldr x2, pc+56 (addr 0x0000ffff91468548)    ;; external reference (Accessors::FunctionNameGetter)
0xffff91468514   116  ldr x16, pc+60 (addr 0x0000ffff91468550)    ;; code: STUB, CallApiGetterStub, minor: 0
0xffff91468518   120  br x16
0xffff9146851c   124  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff91468520   128  d63f03e0       constant
0xffff91468524   132  d503201f       constant
0xffff91468528   136  49b5b0f1       constant
0xffff9146852c   140  00000000       constant
0xffff91468530   144  914222e0       constant
0xffff91468534   148  0000ffff       constant
0xffff91468538   152  49b04241       constant
0xffff9146853c   156  00000000       constant
0xffff91468540   160  4117e2d0       constant
0xffff91468544   164  00000000       constant
0xffff91468548   168  008fefd8       constant
0xffff9146854c   172  00000000       constant
0xffff91468550   176  91468280       constant
0xffff91468554   180  0000ffff       constant


RelocInfo (size = 14)
0xffff914684b0  embedded object  (0x49b5b0f1 Cell for 0)
0xffff914684cc  code target (BUILTIN)  (0xffff914222e0)
0xffff914684e0  embedded object  (0x49b04241 <undefined>)
0xffff914684e8  external reference (isolate)  (0x4117e2d0)
0xffff91468510  external reference (Accessors::FunctionNameGetter)  (0x8fefd8)
0xffff91468514  code target (STUB)  (0xffff91468280)
0xffff9146851c  constant pool (size 60)

kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393221
name = CallICStub(args(5), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff914685c0     0  add x4, x2, x3, asr #29
0xffff914685c4     4  ldur x4, [x4, #15]
0xffff914685c8     8  ldur x5, [x4, #7]
0xffff914685cc    12  cmp x5, x1
0xffff914685d0    16  b.ne #+0x2c (addr 0xffff914685fc)
0xffff914685d4    20  tbz w1, #0, #+0x28 (addr 0xffff914685fc)
0xffff914685d8    24  add x2, x2, x3, asr #29
0xffff914685dc    28  add x2, x2, #0x18 (24)
0xffff914685e0    32  ldur x3, [x2, #-1]
0xffff914685e4    36  movz x16, #0x200000000
0xffff914685e8    40  add x3, x3, x16
0xffff914685ec    44  stur x3, [x2, #-1]
0xffff914685f0    48  movz x0, #0x5
0xffff914685f4    52  ldr x16, pc+372 (addr 0x0000ffff91468768)    ;; code: BUILTIN
0xffff914685f8    56  br x16
0xffff914685fc    60  ldr x16, [x26, #2400]
0xffff91468600    64  cmp x4, x16
0xffff91468604    68  b.eq #+0x78 (addr 0xffff9146867c)
0xffff91468608    72  ldur x5, [x4, #-1]
0xffff9146860c    76  ldr x16, [x26, #2736]
0xffff91468610    80  cmp x5, x16
0xffff91468614    84  b.ne #+0x40 (addr 0xffff91468654)
0xffff91468618    88  ldur x5, [cp, #39]
0xffff9146861c    92  ldur x5, [x5, #95]
0xffff91468620    96  cmp x1, x5
0xffff91468624   100  b.ne #+0xec (addr 0xffff91468710)
0xffff91468628   104  movz x0, #0x5
0xffff9146862c   108  add x2, x2, x3, asr #29
0xffff91468630   112  add x2, x2, #0x18 (24)
0xffff91468634   116  ldur x3, [x2, #-1]
0xffff91468638   120  movz x16, #0x200000000
0xffff9146863c   124  add x3, x3, x16
0xffff91468640   128  stur x3, [x2, #-1]
0xffff91468644   132  mov x2, x4
0xffff91468648   136  mov x3, x1
0xffff9146864c   140  ldr x16, pc+292 (addr 0x0000ffff91468770)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff91468650   144  br x16
0xffff91468654   148  ldr x16, [x26, #2568]
0xffff91468658   152  cmp x4, x16
0xffff9146865c   156  b.eq #+0xb4 (addr 0xffff91468710)
0xffff91468660   160  ldur x5, [x4, #-1]
0xffff91468664   164  ldrb w5, [x5, #11]
0xffff91468668   168  cmp x5, #0xc9 (201)
0xffff9146866c   172  b.ne #+0xa4 (addr 0xffff91468710)
0xffff91468670   176  add x4, x2, x3, asr #29
0xffff91468674   180  ldr x5, [x26, #2400]
0xffff91468678   184  stur x5, [x4, #15]
0xffff9146867c   188  movz x0, #0x5
0xffff91468680   192  ldr x16, pc+248 (addr 0x0000ffff91468778)    ;; code: BUILTIN
0xffff91468684   196  br x16
0xffff91468688   200  tbz w1, #0, #+0x88 (addr 0xffff91468710)
0xffff9146868c   204  ldur x5, [x1, #-1]
0xffff91468690   208  ldrb w5, [x5, #11]
0xffff91468694   212  cmp x5, #0xc9 (201)
0xffff91468698   216  b.ne #+0x78 (addr 0xffff91468710)
0xffff9146869c   220  ldur x5, [cp, #39]
0xffff914686a0   224  ldur x5, [x5, #95]
0xffff914686a4   228  cmp x1, x5
0xffff914686a8   232  b.eq #+0x68 (addr 0xffff91468710)
0xffff914686ac   236  ldur x4, [x1, #39]
0xffff914686b0   240  ldur x4, [x4, #39]
0xffff914686b4   244  ldur x5, [cp, #39]
0xffff914686b8   248  cmp x4, x5
0xffff914686bc   252  b.ne #+0x54 (addr 0xffff91468710)
0xffff914686c0   256  movz x5, #0x200000000
0xffff914686c4   260  adds x4, x2, x3, asr #29
0xffff914686c8   264  stur x5, [x4, #23]
0xffff914686cc   268  movz x16, #0xc00000000
0xffff914686d0   272  sub csp, jssp, #0x10 (16)
0xffff914686d4   276  stp fp, lr, [jssp, #-16]!
0xffff914686d8   280  sub csp, jssp, #0x10 (16)
0xffff914686dc   284  str x16, [jssp, #-8]!
0xffff914686e0   288  ldr x17, pc+160 (addr 0x0000ffff91468780)    ;; object: 0xffff91468561 <Code: CALL_IC>
0xffff914686e4   292  sub csp, jssp, #0x10 (16)
0xffff914686e8   296  str x17, [jssp, #-8]!
0xffff914686ec   300  add fp, jssp, #0x10 (16)
0xffff914686f0   304  sub csp, jssp, #0x8 (8)
0xffff914686f4   308  str x1, [jssp, #-8]!
0xffff914686f8   312  ldr x16, pc+144 (addr 0x0000ffff91468788)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff914686fc   316  blr x16
0xffff91468700   320  ldr x1, [jssp], #8
0xffff91468704   324  mov jssp, fp
0xffff91468708   328  ldp fp, lr, [jssp], #16
0xffff9146870c   332  b #-0x11c (addr 0xffff914685f0)
0xffff91468710   336  movz x16, #0xc00000000
0xffff91468714   340  sub csp, jssp, #0x10 (16)
0xffff91468718   344  stp fp, lr, [jssp, #-16]!
0xffff9146871c   348  sub csp, jssp, #0x10 (16)
0xffff91468720   352  str x16, [jssp, #-8]!
0xffff91468724   356  ldr x17, pc+108 (addr 0x0000ffff91468790)    ;; object: 0xffff91468561 <Code: CALL_IC>
0xffff91468728   360  sub csp, jssp, #0x10 (16)
0xffff9146872c   364  str x17, [jssp, #-8]!
0xffff91468730   368  add fp, jssp, #0x10 (16)
0xffff91468734   372  sub csp, jssp, #0x18 (24)
0xffff91468738   376  stp x3, x2, [jssp, #-24]!
0xffff9146873c   380  str x1, [jssp, #16]
0xffff91468740   384  movz x0, #0x3
0xffff91468744   388  ldr x1, pc+84 (addr 0x0000ffff91468798)    ;; external reference (Runtime::CallIC_Miss)
0xffff91468748   392  ldr x16, pc+88 (addr 0x0000ffff914687a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9146874c   396  blr x16
0xffff91468750   400  mov x1, x0
0xffff91468754   404  mov jssp, fp
0xffff91468758   408  ldp fp, lr, [jssp], #16
0xffff9146875c   412  b #-0xe0 (addr 0xffff9146867c)
0xffff91468760   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff91468764   420  d63f03e0       constant
0xffff91468768   424  9141e820       constant
0xffff9146876c   428  0000ffff       constant
0xffff91468770   432  91433b00       constant
0xffff91468774   436  0000ffff       constant
0xffff91468778   440  9141f820       constant
0xffff9146877c   444  0000ffff       constant
0xffff91468780   448  91468561       constant
0xffff91468784   452  0000ffff       constant
0xffff91468788   456  9140ddc0       constant
0xffff9146878c   460  0000ffff       constant
0xffff91468790   464  91468561       constant
0xffff91468794   468  0000ffff       constant
0xffff91468798   472  00c86928       constant
0xffff9146879c   476  00000000       constant
0xffff914687a0   480  91406060       constant
0xffff914687a4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff914685f4  code target (BUILTIN)  (0xffff9141e820)
0xffff9146864c  code target (STUB)  (0xffff91433b00)
0xffff91468680  code target (BUILTIN)  (0xffff9141f820)
0xffff914686e0  embedded object  (0xffff91468561 <Code: CALL_IC>)
0xffff914686f8  code target (STUB)  (0xffff9140ddc0)
0xffff91468724  embedded object  (0xffff91468561 <Code: CALL_IC>)
0xffff91468744  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff91468748  code target (STUB)  (0xffff91406060)
0xffff91468760  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393221
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff91468820     0  ldur x2, [fp, #-16]
0xffff91468824     4  ldur x2, [x2, #31]
0xffff91468828     8  ldur x2, [x2, #87]
0xffff9146882c    12  ldr x16, pc+20 (addr 0x0000ffff91468840)    ;; code: CALL_IC, GENERIC
0xffff91468830    16  br x16
0xffff91468834    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91468838    24  d63f03e0       constant
0xffff9146883c    28  d503201f       constant
0xffff91468840    32  914685c0       constant
0xffff91468844    36  0000ffff       constant


RelocInfo (size = 7)
0xffff9146882c  code target (CALL_IC)  (0xffff914685c0)
0xffff91468834  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = GT
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff91468f60     0  movz x16, #0xc00000000
0xffff91468f64     4  sub csp, jssp, #0x10 (16)
0xffff91468f68     8  stp fp, lr, [jssp, #-16]!
0xffff91468f6c    12  sub csp, jssp, #0x10 (16)
0xffff91468f70    16  str x16, [jssp, #-8]!
0xffff91468f74    20  ldr x17, pc+92 (addr 0x0000ffff91468fd0)    ;; object: 0xffff91468f01 <Code: COMPARE_IC>
0xffff91468f78    24  sub csp, jssp, #0x10 (16)
0xffff91468f7c    28  str x17, [jssp, #-8]!
0xffff91468f80    32  add fp, jssp, #0x10 (16)
0xffff91468f84    36  sub csp, jssp, #0x18 (24)
0xffff91468f88    40  stp lr, x0, [jssp, #-24]!
0xffff91468f8c    44  str x1, [jssp, #16]
0xffff91468f90    48  movz x10, #0x3200000000
0xffff91468f94    52  sub csp, jssp, #0x18 (24)
0xffff91468f98    56  stp x10, x0, [jssp, #-24]!
0xffff91468f9c    60  str x1, [jssp, #16]
0xffff91468fa0    64  movz x0, #0x3
0xffff91468fa4    68  ldr x1, pc+52 (addr 0x0000ffff91468fd8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff91468fa8    72  ldr x16, pc+56 (addr 0x0000ffff91468fe0)    ;; code: STUB, CEntryStub, minor: 4
0xffff91468fac    76  blr x16
0xffff91468fb0    80  add x11, x0, #0x5f (95)
0xffff91468fb4    84  ldr x1, [jssp, #16]
0xffff91468fb8    88  ldp lr, x0, [jssp], #24
0xffff91468fbc    92  mov jssp, fp
0xffff91468fc0    96  ldp fp, lr, [jssp], #16
0xffff91468fc4   100  br x11
0xffff91468fc8   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91468fcc   108  d63f03e0       constant
0xffff91468fd0   112  91468f01       constant
0xffff91468fd4   116  0000ffff       constant
0xffff91468fd8   120  00c8a980       constant
0xffff91468fdc   124  00000000       constant
0xffff91468fe0   128  91406060       constant
0xffff91468fe4   132  0000ffff       constant


RelocInfo (size = 10)
0xffff91468f74  embedded object  (0xffff91468f01 <Code: COMPARE_IC>)
0xffff91468fa4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff91468fa8  code target (STUB)  (0xffff91406060)
0xffff91468fc8  constant pool (size 32)


kind = STUB
major_key = SubStringStub
name = SubStringStub
compiler = unknown
Instructions (size = 824)
0xffff91469060     0  ldr x0, [jssp]
0xffff91469064     4  ldr x15, [jssp, #8]
0xffff91469068     8  orr x16, x15, x0
0xffff9146906c    12  tbnz w16, #0, #+0x228 (addr 0xffff91469294)
0xffff91469070    16  asr x15, x15, #32
0xffff91469074    20  asr x0, x0, #32
0xffff91469078    24  subs x1, x0, x15
0xffff9146907c    28  b.mi #+0x218 (addr 0xffff91469294)
0xffff91469080    32  tbnz w15, #31, #+0x214 (addr 0xffff91469294)
0xffff91469084    36  ldr x10, [jssp, #16]
0xffff91469088    40  tbz w10, #0, #+0x20c (addr 0xffff91469294)
0xffff9146908c    44  ldur x12, [x10, #-1]
0xffff91469090    48  ldrb w12, [x12, #11]
0xffff91469094    52  tbnz w12, #7, #+0x200 (addr 0xffff91469294)
0xffff91469098    56  cmp x1, #0x1 (1)
0xffff9146909c    60  b.eq #+0x208 (addr 0xffff914692a4)
0xffff914690a0    64  ldursw x11, [x10, #19]
0xffff914690a4    68  cmp x1, x11
0xffff914690a8    72  csel x0, x10, x0, eq
0xffff914690ac    76  b.eq #+0x1e0 (addr 0xffff9146928c)
0xffff914690b0    80  b.hi #+0x1e4 (addr 0xffff91469294)
0xffff914690b4    84  tst x12, #0x1
0xffff914690b8    88  b.eq #+0x38 (addr 0xffff914690f0)
0xffff914690bc    92  tst x12, #0x2
0xffff914690c0    96  b.ne #+0x1c (addr 0xffff914690dc)
0xffff914690c4   100  ldur x3, [x10, #31]
0xffff914690c8   104  ldr x16, [x26, #80]
0xffff914690cc   108  cmp x3, x16
0xffff914690d0   112  b.ne #+0x1c4 (addr 0xffff91469294)
0xffff914690d4   116  ldur x10, [x10, #23]
0xffff914690d8   120  b #+0x10 (addr 0xffff914690e8)
0xffff914690dc   124  ldursw x3, [x10, #35]
0xffff914690e0   128  add x15, x15, x3
0xffff914690e4   132  ldur x10, [x10, #23]
0xffff914690e8   136  ldur x3, [x10, #-1]
0xffff914690ec   140  ldrb w12, [x3, #11]
0xffff914690f0   144  cmp x1, #0xd (13)
0xffff914690f4   148  b.lt #+0x84 (addr 0xffff91469178)
0xffff914690f8   152  tbz w12, #2, #+0x3c (addr 0xffff91469134)
0xffff914690fc   156  ldr x3, pc+620 (addr 0x0000ffff91469368)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff91469100   160  ldp x0, x4, [x3]
0xffff91469104   164  adds x16, x0, #0x28 (40)
0xffff91469108   168  ccmp x16, x4, #nzCv, lo
0xffff9146910c   172  b.hi #+0x188 (addr 0xffff91469294)
0xffff91469110   176  str x16, [x3]
0xffff91469114   180  orr x0, x0, #0x1
0xffff91469118   184  ldr x4, [x26, #488]
0xffff9146911c   188  lsl x3, x1, #32
0xffff91469120   192  stur x4, [x0, #-1]
0xffff91469124   196  movz x4, #0x3
0xffff91469128   200  stur x3, [x0, #15]
0xffff9146912c   204  stur x4, [x0, #7]
0xffff91469130   208  b #+0x38 (addr 0xffff91469168)
0xffff91469134   212  ldr x3, pc+572 (addr 0x0000ffff91469370)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff91469138   216  ldp x0, x4, [x3]
0xffff9146913c   220  adds x16, x0, #0x28 (40)
0xffff91469140   224  ccmp x16, x4, #nzCv, lo
0xffff91469144   228  b.hi #+0x150 (addr 0xffff91469294)
0xffff91469148   232  str x16, [x3]
0xffff9146914c   236  orr x0, x0, #0x1
0xffff91469150   240  ldr x4, [x26, #480]
0xffff91469154   244  lsl x3, x1, #32
0xffff91469158   248  stur x4, [x0, #-1]
0xffff9146915c   252  movz x4, #0x3
0xffff91469160   256  stur x3, [x0, #15]
0xffff91469164   260  stur x4, [x0, #7]
0xffff91469168   264  lsl x15, x15, #32
0xffff9146916c   268  stur x15, [x0, #31]
0xffff91469170   272  stur x10, [x0, #23]
0xffff91469174   276  b #+0x118 (addr 0xffff9146928c)
0xffff91469178   280  tst x12, #0x2
0xffff9146917c   284  b.eq #+0x14 (addr 0xffff91469190)
0xffff91469180   288  tst x12, #0x10
0xffff91469184   292  b.ne #+0x110 (addr 0xffff91469294)
0xffff91469188   296  ldur x13, [x10, #31]
0xffff9146918c   300  b #+0x8 (addr 0xffff91469194)
0xffff91469190   304  add x13, x10, #0x17 (23)
0xffff91469194   308  tbz w12, #2, #+0x7c (addr 0xffff91469210)
0xffff91469198   312  add x3, x1, #0x1f (31)
0xffff9146919c   316  and x3, x3, #0xfffffffffffffff8
0xffff914691a0   320  ldr x5, pc+472 (addr 0x0000ffff91469378)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff914691a4   324  ldp x0, x16, [x5]
0xffff914691a8   328  adds x4, x0, x3
0xffff914691ac   332  ccmp x4, x16, #nzCv, lo
0xffff914691b0   336  b.hi #+0xe4 (addr 0xffff91469294)
0xffff914691b4   340  str x4, [x5]
0xffff914691b8   344  orr x0, x0, #0x1
0xffff914691bc   348  ldr x4, [x26, #280]
0xffff914691c0   352  lsl x3, x1, #32
0xffff914691c4   356  stur x4, [x0, #-1]
0xffff914691c8   360  movz x4, #0x3
0xffff914691cc   364  stur x3, [x0, #15]
0xffff914691d0   368  stur x4, [x0, #7]
0xffff914691d4   372  add x13, x13, x15
0xffff914691d8   376  add x14, x0, #0x17 (23)
0xffff914691dc   380  and x3, x1, #0xfffffffffffffff0
0xffff914691e0   384  cbz x3, #+0x18 (addr 0xffff914691f8)
0xffff914691e4   388  sub x3, x3, #0x10 (16)
0xffff914691e8   392  ldp x16, x17, [x13], #16
0xffff914691ec   396  stp x16, x17, [x14], #16
0xffff914691f0   400  cbnz x3, #-0xc (addr 0xffff914691e4)
0xffff914691f4   404  and x1, x1, #0xf
0xffff914691f8   408  cbz x1, #+0x14 (addr 0xffff9146920c)
0xffff914691fc   412  sub x1, x1, #0x1 (1)
0xffff91469200   416  ldrb w16, [x13], #1
0xffff91469204   420  strb w16, [x14], #1
0xffff91469208   424  cbnz x1, #-0xc (addr 0xffff914691fc)
0xffff9146920c   428  b #+0x80 (addr 0xffff9146928c)
0xffff91469210   432  add x3, x1, x1
0xffff91469214   436  add x3, x3, #0x1f (31)
0xffff91469218   440  and x3, x3, #0xfffffffffffffff8
0xffff9146921c   444  ldr x5, pc+356 (addr 0x0000ffff91469380)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff91469220   448  ldp x0, x16, [x5]
0xffff91469224   452  adds x4, x0, x3
0xffff91469228   456  ccmp x4, x16, #nzCv, lo
0xffff9146922c   460  b.hi #+0x68 (addr 0xffff91469294)
0xffff91469230   464  str x4, [x5]
0xffff91469234   468  orr x0, x0, #0x1
0xffff91469238   472  ldr x4, [x26, #456]
0xffff9146923c   476  lsl x3, x1, #32
0xffff91469240   480  stur x4, [x0, #-1]
0xffff91469244   484  movz x4, #0x3
0xffff91469248   488  stur x3, [x0, #15]
0xffff9146924c   492  stur x4, [x0, #7]
0xffff91469250   496  add x13, x13, x15, lsl #1
0xffff91469254   500  add x14, x0, #0x17 (23)
0xffff91469258   504  add x1, x1, x1
0xffff9146925c   508  and x3, x1, #0xfffffffffffffff0
0xffff91469260   512  cbz x3, #+0x18 (addr 0xffff91469278)
0xffff91469264   516  sub x3, x3, #0x10 (16)
0xffff91469268   520  ldp x16, x17, [x13], #16
0xffff9146926c   524  stp x16, x17, [x14], #16
0xffff91469270   528  cbnz x3, #-0xc (addr 0xffff91469264)
0xffff91469274   532  and x1, x1, #0xf
0xffff91469278   536  cbz x1, #+0x14 (addr 0xffff9146928c)
0xffff9146927c   540  sub x1, x1, #0x1 (1)
0xffff91469280   544  ldrb w16, [x13], #1
0xffff91469284   548  strb w16, [x14], #1
0xffff91469288   552  cbnz x1, #-0xc (addr 0xffff9146927c)
0xffff9146928c   556  add jssp, jssp, #0x18 (24)
0xffff91469290   560  ret
0xffff91469294   564  movz x0, #0x3
0xffff91469298   568  ldr x1, pc+240 (addr 0x0000ffff91469388)    ;; external reference (Runtime::SubString)
0xffff9146929c   572  ldr x16, pc+244 (addr 0x0000ffff91469390)    ;; code: STUB, CEntryStub, minor: 4
0xffff914692a0   576  br x16
0xffff914692a4   580  lsl x15, x15, #32
0xffff914692a8   584  tbnz w15, #0, #+0xb0 (addr 0xffff91469358)
0xffff914692ac   588  ldursw x1, [x10, #19]
0xffff914692b0   592  cmp x1, x15, asr #32
0xffff914692b4   596  b.ls #-0x20 (addr 0xffff91469294)
0xffff914692b8   600  asr x15, x15, #32
0xffff914692bc   604  ldur x1, [x10, #-1]
0xffff914692c0   608  ldrb w1, [x1, #11]
0xffff914692c4   612  tbz w1, #0, #+0x34 (addr 0xffff914692f8)
0xffff914692c8   616  tbz w1, #1, #+0x14 (addr 0xffff914692dc)
0xffff914692cc   620  ldur w1, [x10, #35]
0xffff914692d0   624  ldur x10, [x10, #23]
0xffff914692d4   628  add w15, w15, w1
0xffff914692d8   632  b #+0x18 (addr 0xffff914692f0)
0xffff914692dc   636  ldur x1, [x10, #31]
0xffff914692e0   640  ldr x16, [x26, #80]
0xffff914692e4   644  cmp x1, x16
0xffff914692e8   648  b.ne #+0x70 (addr 0xffff91469358)
0xffff914692ec   652  ldur x10, [x10, #23]
0xffff914692f0   656  ldur x1, [x10, #-1]
0xffff914692f4   660  ldrb w1, [x1, #11]
0xffff914692f8   664  tst x1, #0x3
0xffff914692fc   668  b.ne #+0xc (addr 0xffff91469308)
0xffff91469300   672  add x10, x10, #0x17 (23)
0xffff91469304   676  b #+0x10 (addr 0xffff91469314)
0xffff91469308   680  tst x1, #0x10
0xffff9146930c   684  b.ne #+0x4c (addr 0xffff91469358)
0xffff91469310   688  ldur x10, [x10, #31]
0xffff91469314   692  tbnz w1, #2, #+0xc (addr 0xffff91469320)
0xffff91469318   696  ldrh w1, [x10, w15, sxtw #1]
0xffff9146931c   700  b #+0x8 (addr 0xffff91469324)
0xffff91469320   704  ldrb w1, [x10, w15, sxtw]
0xffff91469324   708  lsl x1, x1, #32
0xffff91469328   712  tbnz w1, #0, #+0x34 (addr 0xffff9146935c)
0xffff9146932c   716  movz x16, #0xff00000000
0xffff91469330   720  cmp x1, x16
0xffff91469334   724  b.hi #+0x28 (addr 0xffff9146935c)
0xffff91469338   728  ldr x0, [x26, #400]
0xffff9146933c   732  add x0, x0, x1, asr #29
0xffff91469340   736  ldur x0, [x0, #15]
0xffff91469344   740  ldr x16, [x26, #40]
0xffff91469348   744  cmp x0, x16
0xffff9146934c   748  b.eq #+0x10 (addr 0xffff9146935c)
0xffff91469350   752  add jssp, jssp, #0x18 (24)
0xffff91469354   756  ret
0xffff91469358   760  b #-0xc4 (addr 0xffff91469294)
0xffff9146935c   764  b #-0xc8 (addr 0xffff91469294)
0xffff91469360   768  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff91469364   772  d63f03e0       constant
0xffff91469368   776  4117f2c0       constant
0xffff9146936c   780  00000000       constant
0xffff91469370   784  4117f2c0       constant
0xffff91469374   788  00000000       constant
0xffff91469378   792  4117f2c0       constant
0xffff9146937c   796  00000000       constant
0xffff91469380   800  4117f2c0       constant
0xffff91469384   804  00000000       constant
0xffff91469388   808  00eca0d8       constant
0xffff9146938c   812  00000000       constant
0xffff91469390   816  91406060       constant
0xffff91469394   820  0000ffff       constant


RelocInfo (size = 27)
0xffff914690fc  external reference (Heap::NewSpaceAllocationTopAddress())  (0x4117f2c0)
0xffff91469134  external reference (Heap::NewSpaceAllocationTopAddress())  (0x4117f2c0)
0xffff914691a0  external reference (Heap::NewSpaceAllocationTopAddress())  (0x4117f2c0)
0xffff9146921c  external reference (Heap::NewSpaceAllocationTopAddress())  (0x4117f2c0)
0xffff91469298  external reference (Runtime::SubString)  (0xeca0d8)
0xffff9146929c  code target (STUB)  (0xffff91406060)
0xffff91469360  constant pool (size 56)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 493)
0xffff9146a5e0     0  movz x2, #0xf2c0
0xffff9146a5e4     4  movk x2, #0x4117, lsl #16
0xffff9146a5e8     8  ldp x3, x0, [x2]
0xffff9146a5ec    12  adds x16, x3, #0xa8 (168)
0xffff9146a5f0    16  ccmp x16, x0, #nzCv, lo
0xffff9146a5f4    20  b.hi #+0xb4 (addr 0xffff9146a6a8)
0xffff9146a5f8    24  str x16, [x2]
0xffff9146a5fc    28  orr x3, x3, #0x1
0xffff9146a600    32  ldr x0, pc+280 (addr 0x0000ffff9146a718)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9146a604    36  stur x0, [x3, #-1]
0xffff9146a608    40  movz x0, #0x1300000000
0xffff9146a60c    44  stur x0, [x3, #7]
0xffff9146a610    48  stur x1, [x3, #15]
0xffff9146a614    52  stur cp, [x3, #23]
0xffff9146a618    56  ldr x0, pc+264 (addr 0x0000ffff9146a720)    ;; object: 0x49b04519 <the hole>
0xffff9146a61c    60  stur x0, [x3, #31]
0xffff9146a620    64  ldur x0, [cp, #39]
0xffff9146a624    68  stur x0, [x3, #39]
0xffff9146a628    72  ldr x0, pc+256 (addr 0x0000ffff9146a728)    ;; object: 0x49b04241 <undefined>
0xffff9146a62c    76  stur x0, [x3, #47]
0xffff9146a630    80  ldr x0, pc+256 (addr 0x0000ffff9146a730)    ;; object: 0x49b04241 <undefined>
0xffff9146a634    84  stur x0, [x3, #55]
0xffff9146a638    88  ldr x0, pc+256 (addr 0x0000ffff9146a738)    ;; object: 0x49b04241 <undefined>
0xffff9146a63c    92  stur x0, [x3, #63]
0xffff9146a640    96  ldr x0, pc+256 (addr 0x0000ffff9146a740)    ;; object: 0x49b04241 <undefined>
0xffff9146a644   100  stur x0, [x3, #71]
0xffff9146a648   104  ldr x0, pc+256 (addr 0x0000ffff9146a748)    ;; object: 0x49b04241 <undefined>
0xffff9146a64c   108  stur x0, [x3, #79]
0xffff9146a650   112  ldr x0, pc+256 (addr 0x0000ffff9146a750)    ;; object: 0x49b04241 <undefined>
0xffff9146a654   116  stur x0, [x3, #87]
0xffff9146a658   120  ldr x0, pc+256 (addr 0x0000ffff9146a758)    ;; object: 0x49b04241 <undefined>
0xffff9146a65c   124  stur x0, [x3, #95]
0xffff9146a660   128  ldr x0, pc+256 (addr 0x0000ffff9146a760)    ;; object: 0x49b04241 <undefined>
0xffff9146a664   132  stur x0, [x3, #103]
0xffff9146a668   136  ldr x0, pc+256 (addr 0x0000ffff9146a768)    ;; object: 0x49b04241 <undefined>
0xffff9146a66c   140  stur x0, [x3, #111]
0xffff9146a670   144  ldr x0, pc+256 (addr 0x0000ffff9146a770)    ;; object: 0x49b04241 <undefined>
0xffff9146a674   148  stur x0, [x3, #119]
0xffff9146a678   152  ldr x0, pc+256 (addr 0x0000ffff9146a778)    ;; object: 0x49b04241 <undefined>
0xffff9146a67c   156  stur x0, [x3, #127]
0xffff9146a680   160  ldr x0, pc+256 (addr 0x0000ffff9146a780)    ;; object: 0x49b04241 <undefined>
0xffff9146a684   164  stur x0, [x3, #135]
0xffff9146a688   168  ldr x0, pc+256 (addr 0x0000ffff9146a788)    ;; object: 0x49b04241 <undefined>
0xffff9146a68c   172  stur x0, [x3, #143]
0xffff9146a690   176  ldr x0, pc+256 (addr 0x0000ffff9146a790)    ;; object: 0x49b04241 <undefined>
0xffff9146a694   180  stur x0, [x3, #151]
0xffff9146a698   184  ldr x0, pc+256 (addr 0x0000ffff9146a798)    ;; object: 0x49b04241 <undefined>
0xffff9146a69c   188  stur x0, [x3, #159]
0xffff9146a6a0   192  mov x0, x3
0xffff9146a6a4   196  ret
0xffff9146a6a8   200  sub csp, jssp, #0x10 (16)
0xffff9146a6ac   204  stp fp, lr, [jssp, #-16]!
0xffff9146a6b0   208  movz fp, #0xa00000000
0xffff9146a6b4   212  sub csp, jssp, #0x8 (8)
0xffff9146a6b8   216  str fp, [jssp, #-8]!
0xffff9146a6bc   220  add fp, jssp, #0x8 (8)
0xffff9146a6c0   224  movz x3, #0x0
0xffff9146a6c4   228  mov x16, lr
0xffff9146a6c8   232  ldr x17, pc+216 (addr 0x0000ffff9146a7a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9146a6cc   236  blr x17
0xffff9146a6d0   240  movz x0, #0xa800000000
0xffff9146a6d4   244  movz x10, #0x0
0xffff9146a6d8   248  sub csp, jssp, #0x10 (16)
0xffff9146a6dc   252  stp x10, x0, [jssp, #-16]!
0xffff9146a6e0   256  movz x0, #0x2
0xffff9146a6e4   260  movz x1, #0x5b88
0xffff9146a6e8   264  movk x1, #0xe2, lsl #16
0xffff9146a6ec   268  ldr x16, pc+188 (addr 0x0000ffff9146a7a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff9146a6f0   272  blr x16
0xffff9146a6f4   276  str x0, [jssp, #24]
0xffff9146a6f8   280  ldr x16, pc+184 (addr 0x0000ffff9146a7b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9146a6fc   284  blr x16
0xffff9146a700   288  ldr lr, [jssp, #16]
0xffff9146a704   292  ldp xzr, fp, [jssp], #24
0xffff9146a708   296  b #-0x108 (addr 0xffff9146a600)
0xffff9146a70c   300  5800055f       constant pool begin (num_const = 42)    ;; constant pool
0xffff9146a710   304  d63f03e0       constant
0xffff9146a714   308  d503201f       constant
0xffff9146a718   312  36406149       constant
0xffff9146a71c   316  00000000       constant
0xffff9146a720   320  49b04519       constant
0xffff9146a724   324  00000000       constant
0xffff9146a728   328  49b04241       constant
0xffff9146a72c   332  00000000       constant
0xffff9146a730   336  49b04241       constant
0xffff9146a734   340  00000000       constant
0xffff9146a738   344  49b04241       constant
0xffff9146a73c   348  00000000       constant
0xffff9146a740   352  49b04241       constant
0xffff9146a744   356  00000000       constant
0xffff9146a748   360  49b04241       constant
0xffff9146a74c   364  00000000       constant
0xffff9146a750   368  49b04241       constant
0xffff9146a754   372  00000000       constant
0xffff9146a758   376  49b04241       constant
0xffff9146a75c   380  00000000       constant
0xffff9146a760   384  49b04241       constant
0xffff9146a764   388  00000000       constant
0xffff9146a768   392  49b04241       constant
0xffff9146a76c   396  00000000       constant
0xffff9146a770   400  49b04241       constant
0xffff9146a774   404  00000000       constant
0xffff9146a778   408  49b04241       constant
0xffff9146a77c   412  00000000       constant
0xffff9146a780   416  49b04241       constant
0xffff9146a784   420  00000000       constant
0xffff9146a788   424  49b04241       constant
0xffff9146a78c   428  00000000       constant
0xffff9146a790   432  49b04241       constant
0xffff9146a794   436  00000000       constant
0xffff9146a798   440  49b04241       constant
0xffff9146a79c   444  00000000       constant
0xffff9146a7a0   448  91406820       constant
0xffff9146a7a4   452  0000ffff       constant
0xffff9146a7a8   456  91406260       constant
0xffff9146a7ac   460  0000ffff       constant
0xffff9146a7b0   464  914068e0       constant
0xffff9146a7b4   468  0000ffff       constant


Safepoints (size = 21)
0xffff9146a6f4   276  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff9146a600  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9146a618  embedded object  (0x49b04519 <the hole>)
0xffff9146a628  embedded object  (0x49b04241 <undefined>)
0xffff9146a630  embedded object  (0x49b04241 <undefined>)
0xffff9146a638  embedded object  (0x49b04241 <undefined>)
0xffff9146a640  embedded object  (0x49b04241 <undefined>)
0xffff9146a648  embedded object  (0x49b04241 <undefined>)
0xffff9146a650  embedded object  (0x49b04241 <undefined>)
0xffff9146a658  embedded object  (0x49b04241 <undefined>)
0xffff9146a660  embedded object  (0x49b04241 <undefined>)
0xffff9146a668  embedded object  (0x49b04241 <undefined>)
0xffff9146a670  embedded object  (0x49b04241 <undefined>)
0xffff9146a678  embedded object  (0x49b04241 <undefined>)
0xffff9146a680  embedded object  (0x49b04241 <undefined>)
0xffff9146a688  embedded object  (0x49b04241 <undefined>)
0xffff9146a690  embedded object  (0x49b04241 <undefined>)
0xffff9146a698  embedded object  (0x49b04241 <undefined>)
0xffff9146a6c8  code target (STUB)  (0xffff91406820)
0xffff9146a6ec  code target (STUB)  (0xffff91406260)
0xffff9146a6f8  code target (STUB)  (0xffff914068e0)
0xffff9146a70c  constant pool (size 172)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff9146c260     0  ldur x0, [x1, #7]
0xffff9146c264     4  ldur x0, [x0, #15]
0xffff9146c268     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff9146c2e0     0  ldur x0, [x1, #7]
0xffff9146c2e4     4  ldur x0, [x0, #23]
0xffff9146c2e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff9146c360     0  ldur x0, [x1, #7]
0xffff9146c364     4  ldur x0, [x0, #31]
0xffff9146c368     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff9146d0c0     0  ldur x0, [x1, #7]
0xffff9146d0c4     4  movz x16, #0x167
0xffff9146d0c8     8  ldr x0, [x0, x16]
0xffff9146d0cc    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff9146d140     0  ldur x0, [x1, #7]
0xffff9146d144     4  movz x16, #0x16f
0xffff9146d148     8  ldr x0, [x0, x16]
0xffff9146d14c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = FastNewClosureStub
name = FastNewClosureStub
compiler = crankshaft
Instructions (size = 773)
0xffff9146e060     0  movz x1, #0xf2c0
0xffff9146e064     4  movk x1, #0x4117, lsl #16
0xffff9146e068     8  ldp x3, x0, [x1]
0xffff9146e06c    12  adds x16, x3, #0x48 (72)
0xffff9146e070    16  ccmp x16, x0, #nzCv, lo
0xffff9146e074    20  b.hi #+0x1bc (addr 0xffff9146e230)
0xffff9146e078    24  str x16, [x1]
0xffff9146e07c    28  orr x3, x3, #0x1
0xffff9146e080    32  ldur x0, [cp, #39]
0xffff9146e084    36  movz x16, #0x2d7
0xffff9146e088    40  ldr x1, [x0, x16]
0xffff9146e08c    44  stur x1, [x3, #-1]
0xffff9146e090    48  ldr x1, pc+528 (addr 0x0000ffff9146e2a0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9146e094    52  stur x1, [x3, #7]
0xffff9146e098    56  ldr x1, pc+528 (addr 0x0000ffff9146e2a8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9146e09c    60  stur x1, [x3, #15]
0xffff9146e0a0    64  ldr x1, pc+528 (addr 0x0000ffff9146e2b0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9146e0a4    68  stur x1, [x3, #47]
0xffff9146e0a8    72  ldr x1, pc+528 (addr 0x0000ffff9146e2b8)    ;; object: 0x49b04519 <the hole>
0xffff9146e0ac    76  stur x1, [x3, #23]
0xffff9146e0b0    80  stur x2, [x3, #31]
0xffff9146e0b4    84  stur cp, [x3, #39]
0xffff9146e0b8    88  ldur x1, [x2, #23]
0xffff9146e0bc    92  movz x4, #0x0
0xffff9146e0c0    96  cmp x1, x4
0xffff9146e0c4   100  b.eq #+0x150 (addr 0xffff9146e214)
0xffff9146e0c8   104  ldur w4, [x1, #11]
0xffff9146e0cc   108  subs w4, w4, #0x4 (4)
0xffff9146e0d0   112  b.vs #+0x230 (addr 0xffff9146e300)
0xffff9146e0d4   116  mov x5, x4
0xffff9146e0d8   120  cmp w5, #0x1 (1)
0xffff9146e0dc   124  b.lt #+0xb4 (addr 0xffff9146e190)
0xffff9146e0e0   128  add x4, x1, #0xf (15)
0xffff9146e0e4   132  ldr x6, [x4, w5, sxtw #3]
0xffff9146e0e8   136  ldur x4, [x6, #7]
0xffff9146e0ec   140  add x6, x1, #0x27 (39)
0xffff9146e0f0   144  ldr x7, [x6, w5, sxtw #3]
0xffff9146e0f4   148  add x6, x1, #0x17 (23)
0xffff9146e0f8   152  ldr x8, [x6, w5, sxtw #3]
0xffff9146e0fc   156  ldur x6, [x8, #7]
0xffff9146e100   160  cmp x0, x4
0xffff9146e104   164  b.ne #+0x1c (addr 0xffff9146e120)
0xffff9146e108   168  mov x4, #0xffffffff00000000
0xffff9146e10c   172  cmp x7, x4
0xffff9146e110   176  b.ne #+0x10 (addr 0xffff9146e120)
0xffff9146e114   180  movz x4, #0x0
0xffff9146e118   184  cmp x6, x4
0xffff9146e11c   188  b.ne #+0xc (addr 0xffff9146e128)
0xffff9146e120   192  sub w5, w5, #0x4 (4)
0xffff9146e124   196  b #-0x4c (addr 0xffff9146e0d8)
0xffff9146e128   200  add x4, x1, #0x1f (31)
0xffff9146e12c   204  ldr x7, [x4, w5, sxtw #3]
0xffff9146e130   208  ldur x7, [x7, #7]
0xffff9146e134   212  movz x4, #0x0
0xffff9146e138   216  cmp x7, x4
0xffff9146e13c   220  b.eq #+0x50 (addr 0xffff9146e18c)
0xffff9146e140   224  add x4, x6, #0x5f (95)
0xffff9146e144   228  stur x4, [x3, #55]
0xffff9146e148   232  stur x7, [x3, #47]
0xffff9146e14c   236  movz x16, #0x557
0xffff9146e150   240  ldr x4, [x0, x16]
0xffff9146e154   244  stur x4, [x3, #63]
0xffff9146e158   248  mov x4, x3
0xffff9146e15c   252  movz x16, #0x557
0xffff9146e160   256  str x4, [x0, x16]
0xffff9146e164   260  add x6, x0, #0x557 (1367)
0xffff9146e168   264  and x4, x0, #0xfffffffffff00000
0xffff9146e16c   268  ldr x4, [x4, #8]
0xffff9146e170   272  tbz w4, #2, #+0x18 (addr 0xffff9146e188)
0xffff9146e174   276  sub csp, jssp, #0x8 (8)
0xffff9146e178   280  str lr, [jssp, #-8]!
0xffff9146e17c   284  ldr x16, pc+324 (addr 0x0000ffff9146e2c0)    ;; code: STUB, RecordWriteStub, minor: 71808
0xffff9146e180   288  blr x16
0xffff9146e184   292  ldr lr, [jssp], #8
0xffff9146e188   296  b #+0x8 (addr 0xffff9146e190)
0xffff9146e18c   300  b #+0x184 (addr 0xffff9146e310)
0xffff9146e190   304  cmp w5, #0x1 (1)
0xffff9146e194   308  b.ge #+0x94 (addr 0xffff9146e228)
0xffff9146e198   312  ldur x1, [x1, #15]
0xffff9146e19c   316  ldur x1, [x1, #7]
0xffff9146e1a0   320  movz x4, #0x0
0xffff9146e1a4   324  cmp x1, x4
0xffff9146e1a8   328  b.eq #+0x54 (addr 0xffff9146e1fc)
0xffff9146e1ac   332  add x1, x1, #0x5f (95)
0xffff9146e1b0   336  stur x1, [x3, #55]
0xffff9146e1b4   340  ldr x1, pc+276 (addr 0x0000ffff9146e2c8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff9146e1b8   344  stur x1, [x3, #47]
0xffff9146e1bc   348  movz x16, #0x557
0xffff9146e1c0   352  ldr x1, [x0, x16]
0xffff9146e1c4   356  stur x1, [x3, #63]
0xffff9146e1c8   360  mov x1, x3
0xffff9146e1cc   364  movz x16, #0x557
0xffff9146e1d0   368  str x1, [x0, x16]
0xffff9146e1d4   372  add x2, x0, #0x557 (1367)
0xffff9146e1d8   376  and x1, x0, #0xfffffffffff00000
0xffff9146e1dc   380  ldr x1, [x1, #8]
0xffff9146e1e0   384  tbz w1, #2, #+0x18 (addr 0xffff9146e1f8)
0xffff9146e1e4   388  sub csp, jssp, #0x8 (8)
0xffff9146e1e8   392  str lr, [jssp, #-8]!
0xffff9146e1ec   396  ldr x16, pc+228 (addr 0x0000ffff9146e2d0)    ;; code: STUB, RecordWriteStub, minor: 67616
0xffff9146e1f0   400  blr x16
0xffff9146e1f4   404  ldr lr, [jssp], #8
0xffff9146e1f8   408  b #+0x30 (addr 0xffff9146e228)
0xffff9146e1fc   412  ldr x0, pc+220 (addr 0x0000ffff9146e2d8)    ;; object: 0x49b04241 <undefined>
0xffff9146e200   416  stur x0, [x3, #63]
0xffff9146e204   420  ldur x0, [x2, #15]
0xffff9146e208   424  add x0, x0, #0x5f (95)
0xffff9146e20c   428  stur x0, [x3, #55]
0xffff9146e210   432  b #+0x18 (addr 0xffff9146e228)
0xffff9146e214   436  ldr x0, pc+204 (addr 0x0000ffff9146e2e0)    ;; object: 0x49b04241 <undefined>
0xffff9146e218   440  stur x0, [x3, #63]
0xffff9146e21c   444  ldur x0, [x2, #15]
0xffff9146e220   448  add x0, x0, #0x5f (95)
0xffff9146e224   452  stur x0, [x3, #55]
0xffff9146e228   456  mov x0, x3
0xffff9146e22c   460  ret
0xffff9146e230   464  sub csp, jssp, #0x10 (16)
0xffff9146e234   468  stp fp, lr, [jssp, #-16]!
0xffff9146e238   472  movz fp, #0xa00000000
0xffff9146e23c   476  sub csp, jssp, #0x8 (8)
0xffff9146e240   480  str fp, [jssp, #-8]!
0xffff9146e244   484  add fp, jssp, #0x8 (8)
0xffff9146e248   488  movz x3, #0x0
0xffff9146e24c   492  mov x16, lr
0xffff9146e250   496  ldr x17, pc+152 (addr 0x0000ffff9146e2e8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9146e254   500  blr x17
0xffff9146e258   504  movz x0, #0x4800000000
0xffff9146e25c   508  movz x10, #0x0
0xffff9146e260   512  sub csp, jssp, #0x10 (16)
0xffff9146e264   516  stp x10, x0, [jssp, #-16]!
0xffff9146e268   520  movz x0, #0x2
0xffff9146e26c   524  movz x1, #0x5b88
0xffff9146e270   528  movk x1, #0xe2, lsl #16
0xffff9146e274   532  ldr x16, pc+124 (addr 0x0000ffff9146e2f0)    ;; code: STUB, CEntryStub, minor: 5
0xffff9146e278   536  blr x16
0xffff9146e27c   540  str x0, [jssp, #24]
0xffff9146e280   544  ldr x16, pc+120 (addr 0x0000ffff9146e2f8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9146e284   548  blr x16
0xffff9146e288   552  ldr lr, [jssp, #16]
0xffff9146e28c   556  ldp xzr, fp, [jssp], #24
0xffff9146e290   560  b #-0x210 (addr 0xffff9146e080)
0xffff9146e294   564  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff9146e298   568  d63f03e0       constant
0xffff9146e29c   572  d503201f       constant
0xffff9146e2a0   576  49b04201       constant
0xffff9146e2a4   580  00000000       constant
0xffff9146e2a8   584  49b04201       constant
0xffff9146e2ac   588  00000000       constant
0xffff9146e2b0   592  49b04201       constant
0xffff9146e2b4   596  00000000       constant
0xffff9146e2b8   600  49b04519       constant
0xffff9146e2bc   604  00000000       constant
0xffff9146e2c0   608  9142d2c0       constant
0xffff9146e2c4   612  0000ffff       constant
0xffff9146e2c8   616  49b04201       constant
0xffff9146e2cc   620  00000000       constant
0xffff9146e2d0   624  9142daa0       constant
0xffff9146e2d4   628  0000ffff       constant
0xffff9146e2d8   632  49b04241       constant
0xffff9146e2dc   636  00000000       constant
0xffff9146e2e0   640  49b04241       constant
0xffff9146e2e4   644  00000000       constant
0xffff9146e2e8   648  91406820       constant
0xffff9146e2ec   652  0000ffff       constant
0xffff9146e2f0   656  91406260       constant
0xffff9146e2f4   660  0000ffff       constant
0xffff9146e2f8   664  914068e0       constant
0xffff9146e2fc   668  0000ffff       constant
0xffff9146e300   672  movz x16, #0x0
0xffff9146e304   676  sub csp, jssp, #0x10 (16)
0xffff9146e308   680  stp fp, lr, [jssp, #-16]!
0xffff9146e30c   684  bl #+0x14 (addr 0xffff9146e320)
0xffff9146e310   688  movz x16, #0x8
0xffff9146e314   692  sub csp, jssp, #0x10 (16)
0xffff9146e318   696  stp fp, lr, [jssp, #-16]!
0xffff9146e31c   700  bl #+0x4 (addr 0xffff9146e320)
0xffff9146e320   704  movz x17, #0xa00000000
0xffff9146e324   708  sub csp, jssp, #0x10 (16)
0xffff9146e328   712  stp x17, cp, [jssp, #-16]!
0xffff9146e32c   716  add fp, jssp, #0x10 (16)
0xffff9146e330   720  ldr x17, pc+24 (addr 0x0000ffff9146e348)    ;; lazy deoptimization bailout 0
0xffff9146e334   724  add x17, x17, x16
0xffff9146e338   728  br x17
0xffff9146e33c   732  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9146e340   736  d63f03e0       constant
0xffff9146e344   740  d503201f       constant
0xffff9146e348   744  91206000       constant
0xffff9146e34c   748  0000ffff       constant


Safepoints (size = 21)
0xffff9146e27c   540  000 | x2 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff9146e090  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9146e098  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9146e0a0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9146e0a8  embedded object  (0x49b04519 <the hole>)
0xffff9146e17c  code target (STUB)  (0xffff9142d2c0)
0xffff9146e1b4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9146e1ec  code target (STUB)  (0xffff9142daa0)
0xffff9146e1fc  embedded object  (0x49b04241 <undefined>)
0xffff9146e214  embedded object  (0x49b04241 <undefined>)
0xffff9146e250  code target (STUB)  (0xffff91406820)
0xffff9146e274  code target (STUB)  (0xffff91406260)
0xffff9146e280  code target (STUB)  (0xffff914068e0)
0xffff9146e294  constant pool (size 108)
0xffff9146e330  runtime entry
0xffff9146e33c  constant pool (size 20)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91471c60     0  ldur x0, [x1, #-1]
0xffff91471c64     4  ldur x0, [x0, #47]
0xffff91471c68     8  movz x16, #0x737
0xffff91471c6c    12  ldr x0, [x0, x16]
0xffff91471c70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91471ce0     0  ldur x0, [x1, #-1]
0xffff91471ce4     4  ldur x0, [x0, #47]
0xffff91471ce8     8  movz x16, #0x74f
0xffff91471cec    12  ldr x0, [x0, x16]
0xffff91471cf0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91471d60     0  ldur x0, [x1, #-1]
0xffff91471d64     4  ldur x0, [x0, #47]
0xffff91471d68     8  movz x16, #0x767
0xffff91471d6c    12  ldr x0, [x0, x16]
0xffff91471d70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff91471de0     0  ldur x0, [x1, #7]
0xffff91471de4     4  ldur x0, [x0, #191]
0xffff91471de8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff91471e60     0  ldur x0, [x1, #7]
0xffff91471e64     4  ldur x0, [x0, #199]
0xffff91471e68     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 317)
0xffff914722e0     0  movz x2, #0xf2c0
0xffff914722e4     4  movk x2, #0x4117, lsl #16
0xffff914722e8     8  ldp x3, x0, [x2]
0xffff914722ec    12  adds x16, x3, #0x50 (80)
0xffff914722f0    16  ccmp x16, x0, #nzCv, lo
0xffff914722f4    20  b.hi #+0x5c (addr 0xffff91472350)
0xffff914722f8    24  str x16, [x2]
0xffff914722fc    28  orr x3, x3, #0x1
0xffff91472300    32  ldr x0, pc+192 (addr 0x0000ffff914723c0)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91472304    36  stur x0, [x3, #-1]
0xffff91472308    40  movz x0, #0x800000000
0xffff9147230c    44  stur x0, [x3, #7]
0xffff91472310    48  stur x1, [x3, #15]
0xffff91472314    52  stur cp, [x3, #23]
0xffff91472318    56  ldr x0, pc+176 (addr 0x0000ffff914723c8)    ;; object: 0x49b04519 <the hole>
0xffff9147231c    60  stur x0, [x3, #31]
0xffff91472320    64  ldur x0, [cp, #39]
0xffff91472324    68  stur x0, [x3, #39]
0xffff91472328    72  ldr x0, pc+168 (addr 0x0000ffff914723d0)    ;; object: 0x49b04241 <undefined>
0xffff9147232c    76  stur x0, [x3, #47]
0xffff91472330    80  ldr x0, pc+168 (addr 0x0000ffff914723d8)    ;; object: 0x49b04241 <undefined>
0xffff91472334    84  stur x0, [x3, #55]
0xffff91472338    88  ldr x0, pc+168 (addr 0x0000ffff914723e0)    ;; object: 0x49b04241 <undefined>
0xffff9147233c    92  stur x0, [x3, #63]
0xffff91472340    96  ldr x0, pc+168 (addr 0x0000ffff914723e8)    ;; object: 0x49b04241 <undefined>
0xffff91472344   100  stur x0, [x3, #71]
0xffff91472348   104  mov x0, x3
0xffff9147234c   108  ret
0xffff91472350   112  sub csp, jssp, #0x10 (16)
0xffff91472354   116  stp fp, lr, [jssp, #-16]!
0xffff91472358   120  movz fp, #0xa00000000
0xffff9147235c   124  sub csp, jssp, #0x8 (8)
0xffff91472360   128  str fp, [jssp, #-8]!
0xffff91472364   132  add fp, jssp, #0x8 (8)
0xffff91472368   136  movz x3, #0x0
0xffff9147236c   140  mov x16, lr
0xffff91472370   144  ldr x17, pc+128 (addr 0x0000ffff914723f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91472374   148  blr x17
0xffff91472378   152  movz x0, #0x5000000000
0xffff9147237c   156  movz x10, #0x0
0xffff91472380   160  sub csp, jssp, #0x10 (16)
0xffff91472384   164  stp x10, x0, [jssp, #-16]!
0xffff91472388   168  movz x0, #0x2
0xffff9147238c   172  movz x1, #0x5b88
0xffff91472390   176  movk x1, #0xe2, lsl #16
0xffff91472394   180  ldr x16, pc+100 (addr 0x0000ffff914723f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91472398   184  blr x16
0xffff9147239c   188  str x0, [jssp, #24]
0xffff914723a0   192  ldr x16, pc+96 (addr 0x0000ffff91472400)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914723a4   196  blr x16
0xffff914723a8   200  ldr lr, [jssp, #16]
0xffff914723ac   204  ldp xzr, fp, [jssp], #24
0xffff914723b0   208  b #-0xb0 (addr 0xffff91472300)
0xffff914723b4   212  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff914723b8   216  d63f03e0       constant
0xffff914723bc   220  d503201f       constant
0xffff914723c0   224  36406149       constant
0xffff914723c4   228  00000000       constant
0xffff914723c8   232  49b04519       constant
0xffff914723cc   236  00000000       constant
0xffff914723d0   240  49b04241       constant
0xffff914723d4   244  00000000       constant
0xffff914723d8   248  49b04241       constant
0xffff914723dc   252  00000000       constant
0xffff914723e0   256  49b04241       constant
0xffff914723e4   260  00000000       constant
0xffff914723e8   264  49b04241       constant
0xffff914723ec   268  00000000       constant
0xffff914723f0   272  91406820       constant
0xffff914723f4   276  0000ffff       constant
0xffff914723f8   280  91406260       constant
0xffff914723fc   284  0000ffff       constant
0xffff91472400   288  914068e0       constant
0xffff91472404   292  0000ffff       constant


Safepoints (size = 21)
0xffff9147239c   188  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 15)
0xffff91472300  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91472318  embedded object  (0x49b04519 <the hole>)
0xffff91472328  embedded object  (0x49b04241 <undefined>)
0xffff91472330  embedded object  (0x49b04241 <undefined>)
0xffff91472338  embedded object  (0x49b04241 <undefined>)
0xffff91472340  embedded object  (0x49b04241 <undefined>)
0xffff91472370  code target (STUB)  (0xffff91406820)
0xffff91472394  code target (STUB)  (0xffff91406260)
0xffff914723a0  code target (STUB)  (0xffff914068e0)
0xffff914723b4  constant pool (size 84)


kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 1
type = NORMAL
name = ToBooleanICStub(Undefined)
compiler = crankshaft
Instructions (size = 128)
0xffff914729c0     0  ldr x16, [x26, #40]
0xffff914729c4     4  cmp x0, x16
0xffff914729c8     8  b.eq #+0x8 (addr 0xffff914729d0)
0xffff914729cc    12  b #+0x2c (addr 0xffff914729f8)
0xffff914729d0    16  ldr x0, pc+24 (addr 0x0000ffff914729e8)    ;; object: 0x49b042b1 <false>
0xffff914729d4    20  ret
0xffff914729d8    24  ldr x0, pc+24 (addr 0x0000ffff914729f0)    ;; object: 0x49b04281 <true>
0xffff914729dc    28  ret
0xffff914729e0    32  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914729e4    36  d63f03e0       constant
0xffff914729e8    40  49b042b1       constant
0xffff914729ec    44  00000000       constant
0xffff914729f0    48  49b04281       constant
0xffff914729f4    52  00000000       constant
0xffff914729f8    56  movz x16, #0x0
0xffff914729fc    60  sub csp, jssp, #0x10 (16)
0xffff91472a00    64  stp fp, lr, [jssp, #-16]!
0xffff91472a04    68  bl #+0x4 (addr 0xffff91472a08)
0xffff91472a08    72  movz x17, #0xa00000000
0xffff91472a0c    76  sub csp, jssp, #0x10 (16)
0xffff91472a10    80  stp x17, cp, [jssp, #-16]!
0xffff91472a14    84  add fp, jssp, #0x10 (16)
0xffff91472a18    88  ldr x17, pc+24 (addr 0x0000ffff91472a30)    ;; lazy deoptimization bailout 0
0xffff91472a1c    92  add x17, x17, x16
0xffff91472a20    96  br x17
0xffff91472a24   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91472a28   104  d63f03e0       constant
0xffff91472a2c   108  d503201f       constant
0xffff91472a30   112  91206000       constant
0xffff91472a34   116  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914729d0  embedded object  (0x49b042b1 <false>)
0xffff914729d8  embedded object  (0x49b04281 <true>)
0xffff914729e0  constant pool (size 24)
0xffff91472a18  runtime entry
0xffff91472a24  constant pool (size 20)


kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff91472aa0     0  mov x2, x0
0xffff91472aa4     4  stur x2, [x1, #23]
0xffff91472aa8     8  tbz w2, #0, #+0x34 (addr 0xffff91472adc)
0xffff91472aac    12  add x3, x1, #0x17 (23)
0xffff91472ab0    16  and x2, x2, #0xfffffffffff00000
0xffff91472ab4    20  ldr x2, [x2, #8]
0xffff91472ab8    24  tbz w2, #1, #+0x24 (addr 0xffff91472adc)
0xffff91472abc    28  and x2, x1, #0xfffffffffff00000
0xffff91472ac0    32  ldr x2, [x2, #8]
0xffff91472ac4    36  tbz w2, #2, #+0x18 (addr 0xffff91472adc)
0xffff91472ac8    40  sub csp, jssp, #0x8 (8)
0xffff91472acc    44  str lr, [jssp, #-8]!
0xffff91472ad0    48  ldr x16, pc+24 (addr 0x0000ffff91472ae8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff91472ad4    52  blr x16
0xffff91472ad8    56  ldr lr, [jssp], #8
0xffff91472adc    60  ret
0xffff91472ae0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91472ae4    68  d63f03e0       constant
0xffff91472ae8    72  914170c0       constant
0xffff91472aec    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 7)
0xffff91472ad0  code target (STUB)  (0xffff914170c0)
0xffff91472ae0  constant pool (size 16)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = EQ
name = CompareICStub
compiler = unknown
Instructions (size = 152)
0xffff91478bc0     0  orr x16, x0, x1
0xffff91478bc4     4  tbnz w16, #0, #+0xc (addr 0xffff91478bd0)
0xffff91478bc8     8  sub x0, x0, x1
0xffff91478bcc    12  ret
0xffff91478bd0    16  movz x16, #0xc00000000
0xffff91478bd4    20  sub csp, jssp, #0x10 (16)
0xffff91478bd8    24  stp fp, lr, [jssp, #-16]!
0xffff91478bdc    28  sub csp, jssp, #0x10 (16)
0xffff91478be0    32  str x16, [jssp, #-8]!
0xffff91478be4    36  ldr x17, pc+92 (addr 0x0000ffff91478c40)    ;; object: 0xffff91478b61 <Code: COMPARE_IC>
0xffff91478be8    40  sub csp, jssp, #0x10 (16)
0xffff91478bec    44  str x17, [jssp, #-8]!
0xffff91478bf0    48  add fp, jssp, #0x10 (16)
0xffff91478bf4    52  sub csp, jssp, #0x18 (24)
0xffff91478bf8    56  stp lr, x0, [jssp, #-24]!
0xffff91478bfc    60  str x1, [jssp, #16]
0xffff91478c00    64  movz x10, #0x2d00000000
0xffff91478c04    68  sub csp, jssp, #0x18 (24)
0xffff91478c08    72  stp x10, x0, [jssp, #-24]!
0xffff91478c0c    76  str x1, [jssp, #16]
0xffff91478c10    80  movz x0, #0x3
0xffff91478c14    84  ldr x1, pc+52 (addr 0x0000ffff91478c48)    ;; external reference (Runtime::CompareIC_Miss)
0xffff91478c18    88  ldr x16, pc+56 (addr 0x0000ffff91478c50)    ;; code: STUB, CEntryStub, minor: 4
0xffff91478c1c    92  blr x16
0xffff91478c20    96  add x11, x0, #0x5f (95)
0xffff91478c24   100  ldr x1, [jssp, #16]
0xffff91478c28   104  ldp lr, x0, [jssp], #24
0xffff91478c2c   108  mov jssp, fp
0xffff91478c30   112  ldp fp, lr, [jssp], #16
0xffff91478c34   116  br x11
0xffff91478c38   120  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91478c3c   124  d63f03e0       constant
0xffff91478c40   128  91478b61       constant
0xffff91478c44   132  0000ffff       constant
0xffff91478c48   136  00c8a980       constant
0xffff91478c4c   140  00000000       constant
0xffff91478c50   144  91406060       constant
0xffff91478c54   148  0000ffff       constant


RelocInfo (size = 10)
0xffff91478be4  embedded object  (0xffff91478b61 <Code: COMPARE_IC>)
0xffff91478c14  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff91478c18  code target (STUB)  (0xffff91406060)
0xffff91478c38  constant pool (size 32)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 120)
0xffff91478cc0     0  sub csp, jssp, #0x8 (8)
0xffff91478cc4     4  str x3, [jssp, #-8]!
0xffff91478cc8     8  sub csp, jssp, #0x8 (8)
0xffff91478ccc    12  str x0, [jssp, #-8]!
0xffff91478cd0    16  ldr x0, pc+72 (addr 0x0000ffff91478d18)    ;; object: 0x49bad1b1 Cell for 0
0xffff91478cd4    20  ldur x0, [x0, #7]
0xffff91478cd8    24  cmp x0, #0x0 (0)
0xffff91478cdc    28  b.ne #+0x14 (addr 0xffff91478cf0)
0xffff91478ce0    32  ldr x3, pc+64 (addr 0x0000ffff91478d20)    ;; object: 0x49bad1c1 WeakCell for 0x26a7bb31 <an Object with map 0x36413f01>
0xffff91478ce4    36  ldur x3, [x3, #7]
0xffff91478ce8    40  tbz w3, #0, #+0x8 (addr 0xffff91478cf0)
0xffff91478cec    44  b #+0x14 (addr 0xffff91478d00)
0xffff91478cf0    48  ldr x0, [jssp], #8
0xffff91478cf4    52  ldr x3, [jssp], #8
0xffff91478cf8    56  ldr x16, pc+48 (addr 0x0000ffff91478d28)    ;; code: BUILTIN
0xffff91478cfc    60  br x16
0xffff91478d00    64  add jssp, jssp, #0x10 (16)
0xffff91478d04    68  mov x1, x3
0xffff91478d08    72  ldr x16, pc+40 (addr 0x0000ffff91478d30)    ;; code: HANDLER, LoadConstantStub, minor: 0
0xffff91478d0c    76  br x16
0xffff91478d10    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff91478d14    84  d63f03e0       constant
0xffff91478d18    88  49bad1b1       constant
0xffff91478d1c    92  00000000       constant
0xffff91478d20    96  49bad1c1       constant
0xffff91478d24   100  00000000       constant
0xffff91478d28   104  914222e0       constant
0xffff91478d2c   108  0000ffff       constant
0xffff91478d30   112  914431a0       constant
0xffff91478d34   116  0000ffff       constant


RelocInfo (size = 10)
0xffff91478cd0  embedded object  (0x49bad1b1 Cell for 0)
0xffff91478ce0  embedded object  (0x49bad1c1 WeakCell for 0x26a7bb31 <an Object with map 0x36413f01>)
0xffff91478cf8  code target (BUILTIN)  (0xffff914222e0)
0xffff91478d08  code target (HANDLER)  (0xffff914431a0)
0xffff91478d10  constant pool (size 40)

kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff91478da0     0  ldur x0, [x1, #31]
0xffff91478da4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff91478e20     0  ldur x0, [x1, #39]
0xffff91478e24     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff91478ea0     0  mov x5, x0
0xffff91478ea4     4  tbnz w5, #0, #+0xc (addr 0xffff91478eb0)
0xffff91478ea8     8  stur x5, [x1, #31]
0xffff91478eac    12  ret
0xffff91478eb0    16  movz x16, #0x0
0xffff91478eb4    20  sub csp, jssp, #0x10 (16)
0xffff91478eb8    24  stp fp, lr, [jssp, #-16]!
0xffff91478ebc    28  bl #+0x4 (addr 0xffff91478ec0)
0xffff91478ec0    32  movz x17, #0xa00000000
0xffff91478ec4    36  sub csp, jssp, #0x10 (16)
0xffff91478ec8    40  stp x17, cp, [jssp, #-16]!
0xffff91478ecc    44  add fp, jssp, #0x10 (16)
0xffff91478ed0    48  ldr x17, pc+24 (addr 0x0000ffff91478ee8)    ;; lazy deoptimization bailout 0
0xffff91478ed4    52  add x17, x17, x16
0xffff91478ed8    56  br x17
0xffff91478edc    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91478ee0    64  d63f03e0       constant
0xffff91478ee4    68  d503201f       constant
0xffff91478ee8    72  91206000       constant
0xffff91478eec    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff91478ed0  runtime entry
0xffff91478edc  constant pool (size 20)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91478f60     0  ldur x0, [x1, #-1]
0xffff91478f64     4  ldur x0, [x0, #47]
0xffff91478f68     8  movz x16, #0xdc7
0xffff91478f6c    12  ldr x0, [x0, x16]
0xffff91478f70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91478fe0     0  ldur x0, [x1, #-1]
0xffff91478fe4     4  ldur x0, [x0, #47]
0xffff91478fe8     8  movz x16, #0x6a7
0xffff91478fec    12  ldr x0, [x0, x16]
0xffff91478ff0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91479060     0  ldur x0, [x1, #-1]
0xffff91479064     4  ldur x0, [x0, #47]
0xffff91479068     8  movz x16, #0x6bf
0xffff9147906c    12  ldr x0, [x0, x16]
0xffff91479070    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914790e0     0  ldur x0, [x1, #-1]
0xffff914790e4     4  ldur x0, [x0, #47]
0xffff914790e8     8  movz x16, #0x6ef
0xffff914790ec    12  ldr x0, [x0, x16]
0xffff914790f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91479160     0  ldur x0, [x1, #-1]
0xffff91479164     4  ldur x0, [x0, #47]
0xffff91479168     8  movz x16, #0xddf
0xffff9147916c    12  ldr x0, [x0, x16]
0xffff91479170    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914791e0     0  ldur x0, [x1, #-1]
0xffff914791e4     4  ldur x0, [x0, #47]
0xffff914791e8     8  movz x16, #0xdf7
0xffff914791ec    12  ldr x0, [x0, x16]
0xffff914791f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91479260     0  ldur x0, [x1, #-1]
0xffff91479264     4  ldur x0, [x0, #47]
0xffff91479268     8  movz x16, #0xe27
0xffff9147926c    12  ldr x0, [x0, x16]
0xffff91479270    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914792e0     0  ldur x0, [x1, #-1]
0xffff914792e4     4  ldur x0, [x0, #47]
0xffff914792e8     8  movz x16, #0xd1f
0xffff914792ec    12  ldr x0, [x0, x16]
0xffff914792f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91479360     0  ldur x0, [x1, #-1]
0xffff91479364     4  ldur x0, [x0, #47]
0xffff91479368     8  movz x16, #0xd37
0xffff9147936c    12  ldr x0, [x0, x16]
0xffff91479370    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914793e0     0  ldur x0, [x1, #-1]
0xffff914793e4     4  ldur x0, [x0, #47]
0xffff914793e8     8  movz x16, #0x647
0xffff914793ec    12  ldr x0, [x0, x16]
0xffff914793f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91479460     0  ldur x0, [x1, #-1]
0xffff91479464     4  ldur x0, [x0, #47]
0xffff91479468     8  movz x16, #0x65f
0xffff9147946c    12  ldr x0, [x0, x16]
0xffff91479470    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914794e0     0  ldur x0, [x1, #-1]
0xffff914794e4     4  ldur x0, [x0, #47]
0xffff914794e8     8  movz x16, #0x71f
0xffff914794ec    12  ldr x0, [x0, x16]
0xffff914794f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff91479560     0  ldur x0, [x1, #7]
0xffff91479564     4  movz x16, #0x1ef
0xffff91479568     8  ldr x0, [x0, x16]
0xffff9147956c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914795e0     0  ldur x0, [x1, #7]
0xffff914795e4     4  movz x16, #0x1f7
0xffff914795e8     8  ldr x0, [x0, x16]
0xffff914795ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91479660     0  ldur x0, [x1, #-1]
0xffff91479664     4  ldur x0, [x0, #47]
0xffff91479668     8  movz x16, #0xd7f
0xffff9147966c    12  ldr x0, [x0, x16]
0xffff91479670    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914796e0     0  ldur x0, [x1, #-1]
0xffff914796e4     4  ldur x0, [x0, #47]
0xffff914796e8     8  movz x16, #0xd97
0xffff914796ec    12  ldr x0, [x0, x16]
0xffff914796f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91479760     0  ldur x0, [x1, #-1]
0xffff91479764     4  ldur x0, [x0, #47]
0xffff91479768     8  movz x16, #0xdaf
0xffff9147976c    12  ldr x0, [x0, x16]
0xffff91479770    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914797e0     0  ldur x0, [x1, #-1]
0xffff914797e4     4  ldur x0, [x0, #47]
0xffff914797e8     8  movz x16, #0xbcf
0xffff914797ec    12  ldr x0, [x0, x16]
0xffff914797f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91479860     0  ldur x0, [x1, #-1]
0xffff91479864     4  ldur x0, [x0, #47]
0xffff91479868     8  movz x16, #0xbe7
0xffff9147986c    12  ldr x0, [x0, x16]
0xffff91479870    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914798e0     0  ldur x0, [x1, #-1]
0xffff914798e4     4  ldur x0, [x0, #47]
0xffff914798e8     8  movz x16, #0xbff
0xffff914798ec    12  ldr x0, [x0, x16]
0xffff914798f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91479960     0  ldur x0, [x1, #-1]
0xffff91479964     4  ldur x0, [x0, #47]
0xffff91479968     8  movz x16, #0xc17
0xffff9147996c    12  ldr x0, [x0, x16]
0xffff91479970    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914799e0     0  ldur x0, [x1, #-1]
0xffff914799e4     4  ldur x0, [x0, #47]
0xffff914799e8     8  movz x16, #0xc2f
0xffff914799ec    12  ldr x0, [x0, x16]
0xffff914799f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91479a60     0  ldur x0, [x1, #-1]
0xffff91479a64     4  ldur x0, [x0, #47]
0xffff91479a68     8  movz x16, #0xc47
0xffff91479a6c    12  ldr x0, [x0, x16]
0xffff91479a70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91479ae0     0  ldur x0, [x1, #-1]
0xffff91479ae4     4  ldur x0, [x0, #47]
0xffff91479ae8     8  movz x16, #0xd4f
0xffff91479aec    12  ldr x0, [x0, x16]
0xffff91479af0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91479b60     0  ldur x0, [x1, #-1]
0xffff91479b64     4  ldur x0, [x0, #47]
0xffff91479b68     8  movz x16, #0xd67
0xffff91479b6c    12  ldr x0, [x0, x16]
0xffff91479b70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91479be0     0  ldur x0, [x1, #-1]
0xffff91479be4     4  ldur x0, [x0, #47]
0xffff91479be8     8  movz x16, #0x77f
0xffff91479bec    12  ldr x0, [x0, x16]
0xffff91479bf0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff91479c60     0  ldur x0, [x1, #-1]
0xffff91479c64     4  ldur x0, [x0, #47]
0xffff91479c68     8  movz x16, #0x677
0xffff91479c6c    12  ldr x0, [x0, x16]
0xffff91479c70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff91479ce0     0  ldur x0, [x1, #7]
0xffff91479ce4     4  movz x16, #0x19f
0xffff91479ce8     8  ldr x0, [x0, x16]
0xffff91479cec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff9147b1c0     0  ldur x0, [x1, #-1]
0xffff9147b1c4     4  ldur x0, [x0, #47]
0xffff9147b1c8     8  movz x16, #0x20f
0xffff9147b1cc    12  ldr x0, [x0, x16]
0xffff9147b1d0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff9147b240     0  ldur x0, [x1, #-1]
0xffff9147b244     4  ldur x0, [x0, #47]
0xffff9147b248     8  movz x16, #0x227
0xffff9147b24c    12  ldr x0, [x0, x16]
0xffff9147b250    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff9147b2c0     0  ldur x0, [x1, #-1]
0xffff9147b2c4     4  ldur x0, [x0, #47]
0xffff9147b2c8     8  movz x16, #0x23f
0xffff9147b2cc    12  ldr x0, [x0, x16]
0xffff9147b2d0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff9147b340     0  ldur x0, [x1, #-1]
0xffff9147b344     4  ldur x0, [x0, #47]
0xffff9147b348     8  movz x16, #0x257
0xffff9147b34c    12  ldr x0, [x0, x16]
0xffff9147b350    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff9147b3c0     0  ldur x0, [x1, #-1]
0xffff9147b3c4     4  ldur x0, [x0, #47]
0xffff9147b3c8     8  movz x16, #0x26f
0xffff9147b3cc    12  ldr x0, [x0, x16]
0xffff9147b3d0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff9147b440     0  ldur x0, [x1, #-1]
0xffff9147b444     4  ldur x0, [x0, #47]
0xffff9147b448     8  movz x16, #0x287
0xffff9147b44c    12  ldr x0, [x0, x16]
0xffff9147b450    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff9147b4c0     0  ldur x0, [x1, #7]
0xffff9147b4c4     4  ldur x0, [x0, #135]
0xffff9147b4c8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff9147b540     0  ldur x0, [x1, #7]
0xffff9147b544     4  ldur x0, [x0, #151]
0xffff9147b548     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 3
type = NORMAL
name = ToBooleanICStub(Undefined,Bool)
compiler = crankshaft
Instructions (size = 152)
0xffff9147b5c0     0  ldr x16, [x26, #40]
0xffff9147b5c4     4  cmp x0, x16
0xffff9147b5c8     8  b.eq #+0x20 (addr 0xffff9147b5e8)
0xffff9147b5cc    12  ldr x16, [x26, #64]
0xffff9147b5d0    16  cmp x0, x16
0xffff9147b5d4    20  b.eq #+0x1c (addr 0xffff9147b5f0)
0xffff9147b5d8    24  ldr x16, [x26, #72]
0xffff9147b5dc    28  cmp x0, x16
0xffff9147b5e0    32  b.eq #+0x8 (addr 0xffff9147b5e8)
0xffff9147b5e4    36  b #+0x2c (addr 0xffff9147b610)
0xffff9147b5e8    40  ldr x0, pc+24 (addr 0x0000ffff9147b600)    ;; object: 0x49b042b1 <false>
0xffff9147b5ec    44  ret
0xffff9147b5f0    48  ldr x0, pc+24 (addr 0x0000ffff9147b608)    ;; object: 0x49b04281 <true>
0xffff9147b5f4    52  ret
0xffff9147b5f8    56  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9147b5fc    60  d63f03e0       constant
0xffff9147b600    64  49b042b1       constant
0xffff9147b604    68  00000000       constant
0xffff9147b608    72  49b04281       constant
0xffff9147b60c    76  00000000       constant
0xffff9147b610    80  movz x16, #0x0
0xffff9147b614    84  sub csp, jssp, #0x10 (16)
0xffff9147b618    88  stp fp, lr, [jssp, #-16]!
0xffff9147b61c    92  bl #+0x4 (addr 0xffff9147b620)
0xffff9147b620    96  movz x17, #0xa00000000
0xffff9147b624   100  sub csp, jssp, #0x10 (16)
0xffff9147b628   104  stp x17, cp, [jssp, #-16]!
0xffff9147b62c   108  add fp, jssp, #0x10 (16)
0xffff9147b630   112  ldr x17, pc+24 (addr 0x0000ffff9147b648)    ;; lazy deoptimization bailout 0
0xffff9147b634   116  add x17, x17, x16
0xffff9147b638   120  br x17
0xffff9147b63c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9147b640   128  d63f03e0       constant
0xffff9147b644   132  d503201f       constant
0xffff9147b648   136  91206000       constant
0xffff9147b64c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff9147b5e8  embedded object  (0x49b042b1 <false>)
0xffff9147b5f0  embedded object  (0x49b04281 <true>)
0xffff9147b5f8  constant pool (size 24)
0xffff9147b630  runtime entry
0xffff9147b63c  constant pool (size 20)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff9147c000     0  ldur x0, [x1, #7]
0xffff9147c004     4  ldur x0, [x0, #119]
0xffff9147c008     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff9147c540     0  sub csp, jssp, #0x8 (8)
0xffff9147c544     4  str x3, [jssp, #-8]!
0xffff9147c548     8  sub csp, jssp, #0x8 (8)
0xffff9147c54c    12  str x4, [jssp, #-8]!
0xffff9147c550    16  ldr x3, pc+88 (addr 0x0000ffff9147c5a8)    ;; object: 0x49b5b0f1 Cell for 0
0xffff9147c554    20  ldur x3, [x3, #7]
0xffff9147c558    24  cmp x3, #0x0 (0)
0xffff9147c55c    28  b.ne #+0x30 (addr 0xffff9147c58c)
0xffff9147c560    32  tbz w0, #0, #+0x2c (addr 0xffff9147c58c)
0xffff9147c564    36  ldr x5, pc+76 (addr 0x0000ffff9147c5b0)    ;; object: 0x49bb0739 WeakCell for 0x36416479 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9147c568    40  ldur x5, [x5, #7]
0xffff9147c56c    44  tbz w5, #0, #+0x20 (addr 0xffff9147c58c)
0xffff9147c570    48  ldursw x4, [x5, #15]
0xffff9147c574    52  tbnz w4, #23, #+0x18 (addr 0xffff9147c58c)
0xffff9147c578    56  ldr x4, [jssp], #8
0xffff9147c57c    60  ldr x3, [jssp], #8
0xffff9147c580    64  ldr x2, pc+56 (addr 0x0000ffff9147c5b8)    ;; object: 0x49b05209 <String[4]: next>
0xffff9147c584    68  ldr x16, pc+60 (addr 0x0000ffff9147c5c0)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff9147c588    72  br x16
0xffff9147c58c    76  ldr x2, pc+60 (addr 0x0000ffff9147c5c8)    ;; object: 0x49b05209 <String[4]: next>
0xffff9147c590    80  ldr x4, [jssp], #8
0xffff9147c594    84  ldr x3, [jssp], #8
0xffff9147c598    88  ldr x16, pc+56 (addr 0x0000ffff9147c5d0)    ;; code: BUILTIN
0xffff9147c59c    92  br x16
0xffff9147c5a0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9147c5a4   100  d63f03e0       constant
0xffff9147c5a8   104  49b5b0f1       constant
0xffff9147c5ac   108  00000000       constant
0xffff9147c5b0   112  49bb0739       constant
0xffff9147c5b4   116  00000000       constant
0xffff9147c5b8   120  49b05209       constant
0xffff9147c5bc   124  00000000       constant
0xffff9147c5c0   128  91438860       constant
0xffff9147c5c4   132  0000ffff       constant
0xffff9147c5c8   136  49b05209       constant
0xffff9147c5cc   140  00000000       constant
0xffff9147c5d0   144  91422420       constant
0xffff9147c5d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff9147c550  embedded object  (0x49b5b0f1 Cell for 0)
0xffff9147c564  embedded object  (0x49bb0739 WeakCell for 0x36416479 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9147c580  embedded object  (0x49b05209 <String[4]: next>)
0xffff9147c584  code target (HANDLER)  (0xffff91438860)
0xffff9147c58c  embedded object  (0x49b05209 <String[4]: next>)
0xffff9147c598  code target (BUILTIN)  (0xffff91422420)
0xffff9147c5a0  constant pool (size 56)

kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff9147cc40     0  ldur x0, [x1, #-1]
0xffff9147cc44     4  ldur x0, [x0, #47]
0xffff9147cc48     8  movz x16, #0x1c7
0xffff9147cc4c    12  ldr x0, [x0, x16]
0xffff9147cc50    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff9147ccc0     0  ldur x0, [x1, #-1]
0xffff9147ccc4     4  ldur x0, [x0, #47]
0xffff9147ccc8     8  movz x16, #0x1df
0xffff9147cccc    12  ldr x0, [x0, x16]
0xffff9147ccd0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff9147cd40     0  ldur x0, [x1, #-1]
0xffff9147cd44     4  ldur x0, [x0, #47]
0xffff9147cd48     8  movz x16, #0x1f7
0xffff9147cd4c    12  ldr x0, [x0, x16]
0xffff9147cd50    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*INTERNALIZED_STRING -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff9147d920     0  orr x16, x1, x0
0xffff9147d924     4  tbnz w16, #0, #+0x10 (addr 0xffff9147d934)
0xffff9147d928     8  asr x1, x1, #32
0xffff9147d92c    12  sub x0, x1, x0, asr #32
0xffff9147d930    16  ret
0xffff9147d934    20  cmp x0, x1
0xffff9147d938    24  b.ne #+0x30 (addr 0xffff9147d968)
0xffff9147d93c    28  ldur x16, [x0, #-1]
0xffff9147d940    32  ldr x17, [x26, #120]
0xffff9147d944    36  cmp x16, x17
0xffff9147d948    40  b.eq #+0xc (addr 0xffff9147d954)
0xffff9147d94c    44  movz x0, #0x0
0xffff9147d950    48  ret
0xffff9147d954    52  ldur d0, [x0, #7]
0xffff9147d958    56  fcmp d0, d0
0xffff9147d95c    60  b.vc #-0x10 (addr 0xffff9147d94c)
0xffff9147d960    64  movn x0, #0x0
0xffff9147d964    68  ret
0xffff9147d968    72  and x16, x1, x0
0xffff9147d96c    76  tbnz w16, #0, #+0x64 (addr 0xffff9147d9d0)
0xffff9147d970    80  tbz w0, #0, #+0x24 (addr 0xffff9147d994)
0xffff9147d974    84  ldur x16, [x0, #-1]
0xffff9147d978    88  ldr x17, [x26, #120]
0xffff9147d97c    92  cmp x16, x17
0xffff9147d980    96  b.eq #+0x8 (addr 0xffff9147d988)
0xffff9147d984   100  ret
0xffff9147d988   104  ldur d0, [x0, #7]
0xffff9147d98c   108  scvtf d1, x1, #32
0xffff9147d990   112  b #+0x24 (addr 0xffff9147d9b4)
0xffff9147d994   116  ldur x16, [x1, #-1]
0xffff9147d998   120  ldr x17, [x26, #120]
0xffff9147d99c   124  cmp x16, x17
0xffff9147d9a0   128  b.eq #+0xc (addr 0xffff9147d9ac)
0xffff9147d9a4   132  movz x0, #0x1
0xffff9147d9a8   136  ret
0xffff9147d9ac   140  ldur d1, [x1, #7]
0xffff9147d9b0   144  scvtf d0, x0, #32
0xffff9147d9b4   148  fcmp d1, d0
0xffff9147d9b8   152  b.vs #+0x10 (addr 0xffff9147d9c8)
0xffff9147d9bc   156  cset x0, gt
0xffff9147d9c0   160  csinv x0, x0, xzr, ge
0xffff9147d9c4   164  ret
0xffff9147d9c8   168  movn x0, #0x0
0xffff9147d9cc   172  ret
0xffff9147d9d0   176  ldur x10, [x0, #-1]
0xffff9147d9d4   180  ldur x12, [x1, #-1]
0xffff9147d9d8   184  ldrb w11, [x10, #11]
0xffff9147d9dc   188  ldrb w13, [x12, #11]
0xffff9147d9e0   192  cmp x11, #0xb1 (177)
0xffff9147d9e4   196  b.lt #+0x8 (addr 0xffff9147d9ec)
0xffff9147d9e8   200  ret
0xffff9147d9ec   204  cmp x11, #0x83 (131)
0xffff9147d9f0   208  movz x16, #0x83
0xffff9147d9f4   212  ccmp x13, x16, #nZcv, ne
0xffff9147d9f8   216  movz x16, #0xb1
0xffff9147d9fc   220  ccmp x13, x16, #NzcV, ne
0xffff9147da00   224  b.ge #-0x18 (addr 0xffff9147d9e8)
0xffff9147da04   228  orr x14, x13, x11
0xffff9147da08   232  tst x14, #0xc0
0xffff9147da0c   236  b.eq #-0x24 (addr 0xffff9147d9e8)
0xffff9147da10   240  cmp x11, #0x81 (129)
0xffff9147da14   244  b.ne #+0x18 (addr 0xffff9147da2c)
0xffff9147da18   248  cmp x12, x10
0xffff9147da1c   252  b.ne #+0x10 (addr 0xffff9147da2c)
0xffff9147da20   256  ldur d1, [x1, #7]
0xffff9147da24   260  ldur d0, [x0, #7]
0xffff9147da28   264  b #-0x74 (addr 0xffff9147d9b4)
0xffff9147da2c   268  movz x16, #0x87
0xffff9147da30   272  and x14, x13, x16
0xffff9147da34   276  movz x16, #0x87
0xffff9147da38   280  and x15, x11, x16
0xffff9147da3c   284  cmp x14, #0x4 (4)
0xffff9147da40   288  ccmp x15, #4, #nzcv, eq
0xffff9147da44   292  b.ne #+0x5c (addr 0xffff9147daa0)
0xffff9147da48   296  ldur x10, [x1, #15]
0xffff9147da4c   300  ldur x11, [x0, #15]
0xffff9147da50   304  cmp x10, x11
0xffff9147da54   308  b.eq #+0xc (addr 0xffff9147da60)
0xffff9147da58   312  movz x0, #0x100000000
0xffff9147da5c   316  ret
0xffff9147da60   320  cbnz x10, #+0xc (addr 0xffff9147da6c)
0xffff9147da64   324  movz x0, #0x0
0xffff9147da68   328  ret
0xffff9147da6c   332  asr x10, x10, #32
0xffff9147da70   336  add x11, x10, #0x17 (23)
0xffff9147da74   340  add x1, x1, x11
0xffff9147da78   344  add x0, x0, x11
0xffff9147da7c   348  neg x10, x10
0xffff9147da80   352  ldrb w11, [x1, x10]
0xffff9147da84   356  ldrb w12, [x0, x10]
0xffff9147da88   360  cmp x11, x12
0xffff9147da8c   364  b.ne #-0x34 (addr 0xffff9147da58)
0xffff9147da90   368  add x10, x10, #0x1 (1)
0xffff9147da94   372  cbnz x10, #-0x14 (addr 0xffff9147da80)
0xffff9147da98   376  movz x0, #0x0
0xffff9147da9c   380  ret
0xffff9147daa0   384  movz x16, #0xc00000000
0xffff9147daa4   388  sub csp, jssp, #0x10 (16)
0xffff9147daa8   392  stp fp, lr, [jssp, #-16]!
0xffff9147daac   396  sub csp, jssp, #0x10 (16)
0xffff9147dab0   400  str x16, [jssp, #-8]!
0xffff9147dab4   404  ldr x17, pc+172 (addr 0x0000ffff9147db60)    ;; object: 0xffff9147d8c1 <Code: COMPARE_IC>
0xffff9147dab8   408  sub csp, jssp, #0x10 (16)
0xffff9147dabc   412  str x17, [jssp, #-8]!
0xffff9147dac0   416  add fp, jssp, #0x10 (16)
0xffff9147dac4   420  sub csp, jssp, #0x10 (16)
0xffff9147dac8   424  stp x0, x1, [jssp, #-16]!
0xffff9147dacc   428  movz x0, #0x2
0xffff9147dad0   432  ldr x1, pc+152 (addr 0x0000ffff9147db68)    ;; external reference (Runtime::StrictEqual)
0xffff9147dad4   436  ldr x16, pc+156 (addr 0x0000ffff9147db70)    ;; code: STUB, CEntryStub, minor: 4
0xffff9147dad8   440  blr x16
0xffff9147dadc   444  mov jssp, fp
0xffff9147dae0   448  ldp fp, lr, [jssp], #16
0xffff9147dae4   452  ldr x1, [x26, #64]
0xffff9147dae8   456  sub x0, x0, x1
0xffff9147daec   460  ret
0xffff9147daf0   464  movz x16, #0xc00000000
0xffff9147daf4   468  sub csp, jssp, #0x10 (16)
0xffff9147daf8   472  stp fp, lr, [jssp, #-16]!
0xffff9147dafc   476  sub csp, jssp, #0x10 (16)
0xffff9147db00   480  str x16, [jssp, #-8]!
0xffff9147db04   484  ldr x17, pc+116 (addr 0x0000ffff9147db78)    ;; object: 0xffff9147d8c1 <Code: COMPARE_IC>
0xffff9147db08   488  sub csp, jssp, #0x10 (16)
0xffff9147db0c   492  str x17, [jssp, #-8]!
0xffff9147db10   496  add fp, jssp, #0x10 (16)
0xffff9147db14   500  sub csp, jssp, #0x18 (24)
0xffff9147db18   504  stp lr, x0, [jssp, #-24]!
0xffff9147db1c   508  str x1, [jssp, #16]
0xffff9147db20   512  movz x10, #0x2f00000000
0xffff9147db24   516  sub csp, jssp, #0x18 (24)
0xffff9147db28   520  stp x10, x0, [jssp, #-24]!
0xffff9147db2c   524  str x1, [jssp, #16]
0xffff9147db30   528  movz x0, #0x3
0xffff9147db34   532  ldr x1, pc+76 (addr 0x0000ffff9147db80)    ;; external reference (Runtime::CompareIC_Miss)
0xffff9147db38   536  ldr x16, pc+80 (addr 0x0000ffff9147db88)    ;; code: STUB, CEntryStub, minor: 4
0xffff9147db3c   540  blr x16
0xffff9147db40   544  add x11, x0, #0x5f (95)
0xffff9147db44   548  ldr x1, [jssp, #16]
0xffff9147db48   552  ldp lr, x0, [jssp], #24
0xffff9147db4c   556  mov jssp, fp
0xffff9147db50   560  ldp fp, lr, [jssp], #16
0xffff9147db54   564  br x11
0xffff9147db58   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9147db5c   572  d63f03e0       constant
0xffff9147db60   576  9147d8c1       constant
0xffff9147db64   580  0000ffff       constant
0xffff9147db68   584  00e50928       constant
0xffff9147db6c   588  00000000       constant
0xffff9147db70   592  91406060       constant
0xffff9147db74   596  0000ffff       constant
0xffff9147db78   600  9147d8c1       constant
0xffff9147db7c   604  0000ffff       constant
0xffff9147db80   608  00c8a980       constant
0xffff9147db84   612  00000000       constant
0xffff9147db88   616  91406060       constant
0xffff9147db8c   620  0000ffff       constant


RelocInfo (size = 16)
0xffff9147dab4  embedded object  (0xffff9147d8c1 <Code: COMPARE_IC>)
0xffff9147dad0  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff9147dad4  code target (STUB)  (0xffff91406060)
0xffff9147db04  embedded object  (0xffff9147d8c1 <Code: COMPARE_IC>)
0xffff9147db34  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff9147db38  code target (STUB)  (0xffff91406060)
0xffff9147db58  constant pool (size 56)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = GT
name = CompareICStub
compiler = unknown
Instructions (size = 160)
0xffff9147e240     0  orr x16, x0, x1
0xffff9147e244     4  tbnz w16, #0, #+0x10 (addr 0xffff9147e254)
0xffff9147e248     8  asr x1, x1, #32
0xffff9147e24c    12  sub x0, x1, x0, asr #32
0xffff9147e250    16  ret
0xffff9147e254    20  movz x16, #0xc00000000
0xffff9147e258    24  sub csp, jssp, #0x10 (16)
0xffff9147e25c    28  stp fp, lr, [jssp, #-16]!
0xffff9147e260    32  sub csp, jssp, #0x10 (16)
0xffff9147e264    36  str x16, [jssp, #-8]!
0xffff9147e268    40  ldr x17, pc+96 (addr 0x0000ffff9147e2c8)    ;; object: 0xffff9147e1e1 <Code: COMPARE_IC>
0xffff9147e26c    44  sub csp, jssp, #0x10 (16)
0xffff9147e270    48  str x17, [jssp, #-8]!
0xffff9147e274    52  add fp, jssp, #0x10 (16)
0xffff9147e278    56  sub csp, jssp, #0x18 (24)
0xffff9147e27c    60  stp lr, x0, [jssp, #-24]!
0xffff9147e280    64  str x1, [jssp, #16]
0xffff9147e284    68  movz x10, #0x3200000000
0xffff9147e288    72  sub csp, jssp, #0x18 (24)
0xffff9147e28c    76  stp x10, x0, [jssp, #-24]!
0xffff9147e290    80  str x1, [jssp, #16]
0xffff9147e294    84  movz x0, #0x3
0xffff9147e298    88  ldr x1, pc+56 (addr 0x0000ffff9147e2d0)    ;; external reference (Runtime::CompareIC_Miss)
0xffff9147e29c    92  ldr x16, pc+60 (addr 0x0000ffff9147e2d8)    ;; code: STUB, CEntryStub, minor: 4
0xffff9147e2a0    96  blr x16
0xffff9147e2a4   100  add x11, x0, #0x5f (95)
0xffff9147e2a8   104  ldr x1, [jssp, #16]
0xffff9147e2ac   108  ldp lr, x0, [jssp], #24
0xffff9147e2b0   112  mov jssp, fp
0xffff9147e2b4   116  ldp fp, lr, [jssp], #16
0xffff9147e2b8   120  br x11
0xffff9147e2bc   124  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff9147e2c0   128  d63f03e0       constant
0xffff9147e2c4   132  d503201f       constant
0xffff9147e2c8   136  9147e1e1       constant
0xffff9147e2cc   140  0000ffff       constant
0xffff9147e2d0   144  00c8a980       constant
0xffff9147e2d4   148  00000000       constant
0xffff9147e2d8   152  91406060       constant
0xffff9147e2dc   156  0000ffff       constant


RelocInfo (size = 10)
0xffff9147e268  embedded object  (0xffff9147e1e1 <Code: COMPARE_IC>)
0xffff9147e298  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff9147e29c  code target (STUB)  (0xffff91406060)
0xffff9147e2bc  constant pool (size 36)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff9147f9e0     0  ldur x4, [x1, #15]
0xffff9147f9e4     4  ldur w5, [x1, #27]
0xffff9147f9e8     8  tbnz w2, #0, #+0x44 (addr 0xffff9147fa2c)
0xffff9147f9ec    12  asr x7, x2, #32
0xffff9147f9f0    16  cmp w7, w5
0xffff9147f9f4    20  b.hs #+0x60 (addr 0xffff9147fa54)
0xffff9147f9f8    24  add x5, x4, #0xf (15)
0xffff9147f9fc    28  ldr x6, [x5, w7, sxtw #3]
0xffff9147fa00    32  ldr x16, [x26, #88]
0xffff9147fa04    36  cmp x6, x16
0xffff9147fa08    40  b.ne #+0x1c (addr 0xffff9147fa24)
0xffff9147fa0c    44  ldr x6, [x26, #1160]
0xffff9147fa10    48  ldur x6, [x6, #7]
0xffff9147fa14    52  movz x16, #0x100000000
0xffff9147fa18    56  cmp x6, x16
0xffff9147fa1c    60  b.ne #+0x48 (addr 0xffff9147fa64)
0xffff9147fa20    64  ldr x6, [x26, #40]
0xffff9147fa24    68  mov x0, x6
0xffff9147fa28    72  ret
0xffff9147fa2c    76  ldur x16, [x2, #-1]
0xffff9147fa30    80  ldr x17, [x26, #120]
0xffff9147fa34    84  cmp x16, x17
0xffff9147fa38    88  b.ne #+0x3c (addr 0xffff9147fa74)
0xffff9147fa3c    92  ldur d29, [x2, #7]
0xffff9147fa40    96  fcvtzs w7, d29
0xffff9147fa44   100  scvtf d0, w7
0xffff9147fa48   104  fcmp d29, d0
0xffff9147fa4c   108  b.ne #+0x28 (addr 0xffff9147fa74)
0xffff9147fa50   112  b #-0x60 (addr 0xffff9147f9f0)
0xffff9147fa54   116  movz x16, #0x0
0xffff9147fa58   120  sub csp, jssp, #0x10 (16)
0xffff9147fa5c   124  stp fp, lr, [jssp, #-16]!
0xffff9147fa60   128  bl #+0x24 (addr 0xffff9147fa84)
0xffff9147fa64   132  movz x16, #0x8
0xffff9147fa68   136  sub csp, jssp, #0x10 (16)
0xffff9147fa6c   140  stp fp, lr, [jssp, #-16]!
0xffff9147fa70   144  bl #+0x14 (addr 0xffff9147fa84)
0xffff9147fa74   148  movz x16, #0x10
0xffff9147fa78   152  sub csp, jssp, #0x10 (16)
0xffff9147fa7c   156  stp fp, lr, [jssp, #-16]!
0xffff9147fa80   160  bl #+0x4 (addr 0xffff9147fa84)
0xffff9147fa84   164  movz x17, #0xa00000000
0xffff9147fa88   168  sub csp, jssp, #0x10 (16)
0xffff9147fa8c   172  stp x17, cp, [jssp, #-16]!
0xffff9147fa90   176  add fp, jssp, #0x10 (16)
0xffff9147fa94   180  ldr x17, pc+20 (addr 0x0000ffff9147faa8)    ;; lazy deoptimization bailout 0
0xffff9147fa98   184  add x17, x17, x16
0xffff9147fa9c   188  br x17
0xffff9147faa0   192  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff9147faa4   196  d63f03e0       constant
0xffff9147faa8   200  91206000       constant
0xffff9147faac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9147fa94  runtime entry
0xffff9147faa0  constant pool (size 16)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff9147f9e0     0  ldur x4, [x1, #15]
0xffff9147f9e4     4  ldur w5, [x1, #27]
0xffff9147f9e8     8  tbnz w2, #0, #+0x44 (addr 0xffff9147fa2c)
0xffff9147f9ec    12  asr x7, x2, #32
0xffff9147f9f0    16  cmp w7, w5
0xffff9147f9f4    20  b.hs #+0x60 (addr 0xffff9147fa54)
0xffff9147f9f8    24  add x5, x4, #0xf (15)
0xffff9147f9fc    28  ldr x6, [x5, w7, sxtw #3]
0xffff9147fa00    32  ldr x16, [x26, #88]
0xffff9147fa04    36  cmp x6, x16
0xffff9147fa08    40  b.ne #+0x1c (addr 0xffff9147fa24)
0xffff9147fa0c    44  ldr x6, [x26, #1160]
0xffff9147fa10    48  ldur x6, [x6, #7]
0xffff9147fa14    52  movz x16, #0x100000000
0xffff9147fa18    56  cmp x6, x16
0xffff9147fa1c    60  b.ne #+0x48 (addr 0xffff9147fa64)
0xffff9147fa20    64  ldr x6, [x26, #40]
0xffff9147fa24    68  mov x0, x6
0xffff9147fa28    72  ret
0xffff9147fa2c    76  ldur x16, [x2, #-1]
0xffff9147fa30    80  ldr x17, [x26, #120]
0xffff9147fa34    84  cmp x16, x17
0xffff9147fa38    88  b.ne #+0x3c (addr 0xffff9147fa74)
0xffff9147fa3c    92  ldur d29, [x2, #7]
0xffff9147fa40    96  fcvtzs w7, d29
0xffff9147fa44   100  scvtf d0, w7
0xffff9147fa48   104  fcmp d29, d0
0xffff9147fa4c   108  b.ne #+0x28 (addr 0xffff9147fa74)
0xffff9147fa50   112  b #-0x60 (addr 0xffff9147f9f0)
0xffff9147fa54   116  movz x16, #0x0
0xffff9147fa58   120  sub csp, jssp, #0x10 (16)
0xffff9147fa5c   124  stp fp, lr, [jssp, #-16]!
0xffff9147fa60   128  bl #+0x24 (addr 0xffff9147fa84)
0xffff9147fa64   132  movz x16, #0x8
0xffff9147fa68   136  sub csp, jssp, #0x10 (16)
0xffff9147fa6c   140  stp fp, lr, [jssp, #-16]!
0xffff9147fa70   144  bl #+0x14 (addr 0xffff9147fa84)
0xffff9147fa74   148  movz x16, #0x10
0xffff9147fa78   152  sub csp, jssp, #0x10 (16)
0xffff9147fa7c   156  stp fp, lr, [jssp, #-16]!
0xffff9147fa80   160  bl #+0x4 (addr 0xffff9147fa84)
0xffff9147fa84   164  movz x17, #0xa00000000
0xffff9147fa88   168  sub csp, jssp, #0x10 (16)
0xffff9147fa8c   172  stp x17, cp, [jssp, #-16]!
0xffff9147fa90   176  add fp, jssp, #0x10 (16)
0xffff9147fa94   180  ldr x17, pc+20 (addr 0x0000ffff9147faa8)    ;; lazy deoptimization bailout 0
0xffff9147fa98   184  add x17, x17, x16
0xffff9147fa9c   188  br x17
0xffff9147faa0   192  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff9147faa4   196  d63f03e0       constant
0xffff9147faa8   200  91206000       constant
0xffff9147faac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff9147fa94  runtime entry
0xffff9147faa0  constant pool (size 16)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastCloneRegExpStub
compiler = crankshaft
Instructions (size = 357)
0xffff9147fb20     0  ldur x4, [x3, #47]
0xffff9147fb24     4  asr x5, x2, #32
0xffff9147fb28     8  add x6, x4, #0x17 (23)
0xffff9147fb2c    12  ldr x7, [x6, w5, sxtw #3]
0xffff9147fb30    16  ldr x4, pc+224 (addr 0x0000ffff9147fc10)    ;; object: 0x49b04241 <undefined>
0xffff9147fb34    20  cmp x7, x4
0xffff9147fb38    24  b.eq #+0x64 (addr 0xffff9147fb9c)
0xffff9147fb3c    28  movz x1, #0xf2c0
0xffff9147fb40    32  movk x1, #0x4117, lsl #16
0xffff9147fb44    36  ldp x2, x0, [x1]
0xffff9147fb48    40  adds x16, x2, #0x38 (56)
0xffff9147fb4c    44  ccmp x16, x0, #nzCv, lo
0xffff9147fb50    48  b.hi #+0x50 (addr 0xffff9147fba0)
0xffff9147fb54    52  str x16, [x1]
0xffff9147fb58    56  orr x2, x2, #0x1
0xffff9147fb5c    60  ldur x0, [x7, #-1]
0xffff9147fb60    64  stur x0, [x2, #-1]
0xffff9147fb64    68  ldur x0, [x7, #7]
0xffff9147fb68    72  stur x0, [x2, #7]
0xffff9147fb6c    76  ldur x0, [x7, #15]
0xffff9147fb70    80  stur x0, [x2, #15]
0xffff9147fb74    84  ldur x0, [x7, #23]
0xffff9147fb78    88  stur x0, [x2, #23]
0xffff9147fb7c    92  ldur x0, [x7, #31]
0xffff9147fb80    96  stur x0, [x2, #31]
0xffff9147fb84   100  ldur x0, [x7, #39]
0xffff9147fb88   104  stur x0, [x2, #39]
0xffff9147fb8c   108  ldur x0, [x7, #47]
0xffff9147fb90   112  stur x0, [x2, #47]
0xffff9147fb94   116  mov x0, x2
0xffff9147fb98   120  ret
0xffff9147fb9c   124  b #+0x94 (addr 0xffff9147fc30)
0xffff9147fba0   128  sub csp, jssp, #0x10 (16)
0xffff9147fba4   132  stp fp, lr, [jssp, #-16]!
0xffff9147fba8   136  movz fp, #0xa00000000
0xffff9147fbac   140  sub csp, jssp, #0x8 (8)
0xffff9147fbb0   144  str fp, [jssp, #-8]!
0xffff9147fbb4   148  add fp, jssp, #0x8 (8)
0xffff9147fbb8   152  movz x2, #0x0
0xffff9147fbbc   156  mov x16, lr
0xffff9147fbc0   160  ldr x17, pc+88 (addr 0x0000ffff9147fc18)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9147fbc4   164  blr x17
0xffff9147fbc8   168  movz x0, #0x3800000000
0xffff9147fbcc   172  movz x10, #0x0
0xffff9147fbd0   176  sub csp, jssp, #0x10 (16)
0xffff9147fbd4   180  stp x10, x0, [jssp, #-16]!
0xffff9147fbd8   184  movz x0, #0x2
0xffff9147fbdc   188  movz x1, #0x5b88
0xffff9147fbe0   192  movk x1, #0xe2, lsl #16
0xffff9147fbe4   196  ldr x16, pc+60 (addr 0x0000ffff9147fc20)    ;; code: STUB, CEntryStub, minor: 5
0xffff9147fbe8   200  blr x16
0xffff9147fbec   204  str x0, [jssp, #16]
0xffff9147fbf0   208  ldr x16, pc+56 (addr 0x0000ffff9147fc28)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9147fbf4   212  blr x16
0xffff9147fbf8   216  ldr lr, [jssp, #16]
0xffff9147fbfc   220  ldp xzr, fp, [jssp], #24
0xffff9147fc00   224  b #-0xa4 (addr 0xffff9147fb5c)
0xffff9147fc04   228  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff9147fc08   232  d63f03e0       constant
0xffff9147fc0c   236  d503201f       constant
0xffff9147fc10   240  49b04241       constant
0xffff9147fc14   244  00000000       constant
0xffff9147fc18   248  91406820       constant
0xffff9147fc1c   252  0000ffff       constant
0xffff9147fc20   256  91406260       constant
0xffff9147fc24   260  0000ffff       constant
0xffff9147fc28   264  914068e0       constant
0xffff9147fc2c   268  0000ffff       constant
0xffff9147fc30   272  movz x16, #0x0
0xffff9147fc34   276  sub csp, jssp, #0x10 (16)
0xffff9147fc38   280  stp fp, lr, [jssp, #-16]!
0xffff9147fc3c   284  bl #+0x4 (addr 0xffff9147fc40)
0xffff9147fc40   288  movz x17, #0xa00000000
0xffff9147fc44   292  sub csp, jssp, #0x10 (16)
0xffff9147fc48   296  stp x17, cp, [jssp, #-16]!
0xffff9147fc4c   300  add fp, jssp, #0x10 (16)
0xffff9147fc50   304  ldr x17, pc+24 (addr 0x0000ffff9147fc68)    ;; lazy deoptimization bailout 0
0xffff9147fc54   308  add x17, x17, x16
0xffff9147fc58   312  br x17
0xffff9147fc5c   316  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9147fc60   320  d63f03e0       constant
0xffff9147fc64   324  d503201f       constant
0xffff9147fc68   328  91206000       constant
0xffff9147fc6c   332  0000ffff       constant


Safepoints (size = 21)
0xffff9147fbec   204  000 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 22)
0xffff9147fb30  embedded object  (0x49b04241 <undefined>)
0xffff9147fbc0  code target (STUB)  (0xffff91406820)
0xffff9147fbe4  code target (STUB)  (0xffff91406260)
0xffff9147fbf0  code target (STUB)  (0xffff914068e0)
0xffff9147fc04  constant pool (size 44)
0xffff9147fc50  runtime entry
0xffff9147fc5c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = FastCloneRegExpStub
name = FastCloneRegExpStub
compiler = crankshaft
Instructions (size = 357)
0xffff9147fb20     0  ldur x4, [x3, #47]
0xffff9147fb24     4  asr x5, x2, #32
0xffff9147fb28     8  add x6, x4, #0x17 (23)
0xffff9147fb2c    12  ldr x7, [x6, w5, sxtw #3]
0xffff9147fb30    16  ldr x4, pc+224 (addr 0x0000ffff9147fc10)    ;; object: 0x49b04241 <undefined>
0xffff9147fb34    20  cmp x7, x4
0xffff9147fb38    24  b.eq #+0x64 (addr 0xffff9147fb9c)
0xffff9147fb3c    28  movz x1, #0xf2c0
0xffff9147fb40    32  movk x1, #0x4117, lsl #16
0xffff9147fb44    36  ldp x2, x0, [x1]
0xffff9147fb48    40  adds x16, x2, #0x38 (56)
0xffff9147fb4c    44  ccmp x16, x0, #nzCv, lo
0xffff9147fb50    48  b.hi #+0x50 (addr 0xffff9147fba0)
0xffff9147fb54    52  str x16, [x1]
0xffff9147fb58    56  orr x2, x2, #0x1
0xffff9147fb5c    60  ldur x0, [x7, #-1]
0xffff9147fb60    64  stur x0, [x2, #-1]
0xffff9147fb64    68  ldur x0, [x7, #7]
0xffff9147fb68    72  stur x0, [x2, #7]
0xffff9147fb6c    76  ldur x0, [x7, #15]
0xffff9147fb70    80  stur x0, [x2, #15]
0xffff9147fb74    84  ldur x0, [x7, #23]
0xffff9147fb78    88  stur x0, [x2, #23]
0xffff9147fb7c    92  ldur x0, [x7, #31]
0xffff9147fb80    96  stur x0, [x2, #31]
0xffff9147fb84   100  ldur x0, [x7, #39]
0xffff9147fb88   104  stur x0, [x2, #39]
0xffff9147fb8c   108  ldur x0, [x7, #47]
0xffff9147fb90   112  stur x0, [x2, #47]
0xffff9147fb94   116  mov x0, x2
0xffff9147fb98   120  ret
0xffff9147fb9c   124  b #+0x94 (addr 0xffff9147fc30)
0xffff9147fba0   128  sub csp, jssp, #0x10 (16)
0xffff9147fba4   132  stp fp, lr, [jssp, #-16]!
0xffff9147fba8   136  movz fp, #0xa00000000
0xffff9147fbac   140  sub csp, jssp, #0x8 (8)
0xffff9147fbb0   144  str fp, [jssp, #-8]!
0xffff9147fbb4   148  add fp, jssp, #0x8 (8)
0xffff9147fbb8   152  movz x2, #0x0
0xffff9147fbbc   156  mov x16, lr
0xffff9147fbc0   160  ldr x17, pc+88 (addr 0x0000ffff9147fc18)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9147fbc4   164  blr x17
0xffff9147fbc8   168  movz x0, #0x3800000000
0xffff9147fbcc   172  movz x10, #0x0
0xffff9147fbd0   176  sub csp, jssp, #0x10 (16)
0xffff9147fbd4   180  stp x10, x0, [jssp, #-16]!
0xffff9147fbd8   184  movz x0, #0x2
0xffff9147fbdc   188  movz x1, #0x5b88
0xffff9147fbe0   192  movk x1, #0xe2, lsl #16
0xffff9147fbe4   196  ldr x16, pc+60 (addr 0x0000ffff9147fc20)    ;; code: STUB, CEntryStub, minor: 5
0xffff9147fbe8   200  blr x16
0xffff9147fbec   204  str x0, [jssp, #16]
0xffff9147fbf0   208  ldr x16, pc+56 (addr 0x0000ffff9147fc28)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9147fbf4   212  blr x16
0xffff9147fbf8   216  ldr lr, [jssp, #16]
0xffff9147fbfc   220  ldp xzr, fp, [jssp], #24
0xffff9147fc00   224  b #-0xa4 (addr 0xffff9147fb5c)
0xffff9147fc04   228  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff9147fc08   232  d63f03e0       constant
0xffff9147fc0c   236  d503201f       constant
0xffff9147fc10   240  49b04241       constant
0xffff9147fc14   244  00000000       constant
0xffff9147fc18   248  91406820       constant
0xffff9147fc1c   252  0000ffff       constant
0xffff9147fc20   256  91406260       constant
0xffff9147fc24   260  0000ffff       constant
0xffff9147fc28   264  914068e0       constant
0xffff9147fc2c   268  0000ffff       constant
0xffff9147fc30   272  movz x16, #0x0
0xffff9147fc34   276  sub csp, jssp, #0x10 (16)
0xffff9147fc38   280  stp fp, lr, [jssp, #-16]!
0xffff9147fc3c   284  bl #+0x4 (addr 0xffff9147fc40)
0xffff9147fc40   288  movz x17, #0xa00000000
0xffff9147fc44   292  sub csp, jssp, #0x10 (16)
0xffff9147fc48   296  stp x17, cp, [jssp, #-16]!
0xffff9147fc4c   300  add fp, jssp, #0x10 (16)
0xffff9147fc50   304  ldr x17, pc+24 (addr 0x0000ffff9147fc68)    ;; lazy deoptimization bailout 0
0xffff9147fc54   308  add x17, x17, x16
0xffff9147fc58   312  br x17
0xffff9147fc5c   316  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9147fc60   320  d63f03e0       constant
0xffff9147fc64   324  d503201f       constant
0xffff9147fc68   328  91206000       constant
0xffff9147fc6c   332  0000ffff       constant


Safepoints (size = 21)
0xffff9147fbec   204  000 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 22)
0xffff9147fb30  embedded object  (0x49b04241 <undefined>)
0xffff9147fbc0  code target (STUB)  (0xffff91406820)
0xffff9147fbe4  code target (STUB)  (0xffff91406260)
0xffff9147fbf0  code target (STUB)  (0xffff914068e0)
0xffff9147fc04  constant pool (size 44)
0xffff9147fc50  runtime entry
0xffff9147fc5c  constant pool (size 20)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 8
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 128)
0xffff91480ba0     0  cbz x0, #+0xc (addr 0xffff91480bac)
0xffff91480ba4     4  tbz w0, #0, #+0x10 (addr 0xffff91480bb4)
0xffff91480ba8     8  b #+0x30 (addr 0xffff91480bd8)
0xffff91480bac    12  ldr x0, pc+28 (addr 0x0000ffff91480bc8)    ;; object: 0x49b042b1 <false>
0xffff91480bb0    16  ret
0xffff91480bb4    20  ldr x0, pc+28 (addr 0x0000ffff91480bd0)    ;; object: 0x49b04281 <true>
0xffff91480bb8    24  ret
0xffff91480bbc    28  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff91480bc0    32  d63f03e0       constant
0xffff91480bc4    36  d503201f       constant
0xffff91480bc8    40  49b042b1       constant
0xffff91480bcc    44  00000000       constant
0xffff91480bd0    48  49b04281       constant
0xffff91480bd4    52  00000000       constant
0xffff91480bd8    56  movz x16, #0x0
0xffff91480bdc    60  sub csp, jssp, #0x10 (16)
0xffff91480be0    64  stp fp, lr, [jssp, #-16]!
0xffff91480be4    68  bl #+0x4 (addr 0xffff91480be8)
0xffff91480be8    72  movz x17, #0xa00000000
0xffff91480bec    76  sub csp, jssp, #0x10 (16)
0xffff91480bf0    80  stp x17, cp, [jssp, #-16]!
0xffff91480bf4    84  add fp, jssp, #0x10 (16)
0xffff91480bf8    88  ldr x17, pc+24 (addr 0x0000ffff91480c10)    ;; lazy deoptimization bailout 0
0xffff91480bfc    92  add x17, x17, x16
0xffff91480c00    96  br x17
0xffff91480c04   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91480c08   104  d63f03e0       constant
0xffff91480c0c   108  d503201f       constant
0xffff91480c10   112  91206000       constant
0xffff91480c14   116  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff91480bac  embedded object  (0x49b042b1 <false>)
0xffff91480bb4  embedded object  (0x49b04281 <true>)
0xffff91480bbc  constant pool (size 28)
0xffff91480bf8  runtime entry
0xffff91480c04  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 8
type = NORMAL
name = ToBooleanICStub(Smi)
compiler = crankshaft
Instructions (size = 128)
0xffff91480ba0     0  cbz x0, #+0xc (addr 0xffff91480bac)
0xffff91480ba4     4  tbz w0, #0, #+0x10 (addr 0xffff91480bb4)
0xffff91480ba8     8  b #+0x30 (addr 0xffff91480bd8)
0xffff91480bac    12  ldr x0, pc+28 (addr 0x0000ffff91480bc8)    ;; object: 0x49b042b1 <false>
0xffff91480bb0    16  ret
0xffff91480bb4    20  ldr x0, pc+28 (addr 0x0000ffff91480bd0)    ;; object: 0x49b04281 <true>
0xffff91480bb8    24  ret
0xffff91480bbc    28  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff91480bc0    32  d63f03e0       constant
0xffff91480bc4    36  d503201f       constant
0xffff91480bc8    40  49b042b1       constant
0xffff91480bcc    44  00000000       constant
0xffff91480bd0    48  49b04281       constant
0xffff91480bd4    52  00000000       constant
0xffff91480bd8    56  movz x16, #0x0
0xffff91480bdc    60  sub csp, jssp, #0x10 (16)
0xffff91480be0    64  stp fp, lr, [jssp, #-16]!
0xffff91480be4    68  bl #+0x4 (addr 0xffff91480be8)
0xffff91480be8    72  movz x17, #0xa00000000
0xffff91480bec    76  sub csp, jssp, #0x10 (16)
0xffff91480bf0    80  stp x17, cp, [jssp, #-16]!
0xffff91480bf4    84  add fp, jssp, #0x10 (16)
0xffff91480bf8    88  ldr x17, pc+24 (addr 0x0000ffff91480c10)    ;; lazy deoptimization bailout 0
0xffff91480bfc    92  add x17, x17, x16
0xffff91480c00    96  br x17
0xffff91480c04   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91480c08   104  d63f03e0       constant
0xffff91480c0c   108  d503201f       constant
0xffff91480c10   112  91206000       constant
0xffff91480c14   116  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff91480bac  embedded object  (0x49b042b1 <false>)
0xffff91480bb4  embedded object  (0x49b04281 <true>)
0xffff91480bbc  constant pool (size 28)
0xffff91480bf8  runtime entry
0xffff91480c04  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff91480f80     0  adr xzr, #+0x40 (addr 0xffff91480fc0)
0xffff91480f84     4  adr xzr, #+0x2a8 (addr 0xffff9148122c)
0xffff91480f88     8  ldr x16, pc+1368 (addr 0x0000ffff914814e0)    ;; external reference (store_buffer_top)
0xffff91480f8c    12  ldr x10, [x16]
0xffff91480f90    16  str x11, [x10], #8
0xffff91480f94    20  str x10, [x16]
0xffff91480f98    24  tst x10, #0x1ffff
0xffff91480f9c    28  b.eq #+0x8 (addr 0xffff91480fa4)
0xffff91480fa0    32  ret
0xffff91480fa4    36  sub csp, jssp, #0x8 (8)
0xffff91480fa8    40  str lr, [jssp, #-8]!
0xffff91480fac    44  ldr x17, pc+1340 (addr 0x0000ffff914814e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91480fb0    48  blr x17
0xffff91480fb4    52  ldr lr, [jssp], #8
0xffff91480fb8    56  ret
0xffff91480fbc    60  ret
0xffff91480fc0    64  sub csp, jssp, #0x10 (16)
0xffff91480fc4    68  stp x1, x0, [jssp, #-16]!
0xffff91480fc8    72  ldr x10, [x11]
0xffff91480fcc    76  and x16, x10, #0xfffffffffff00000
0xffff91480fd0    80  ldr x16, [x16, #8]
0xffff91480fd4    84  tst x16, #0x18
0xffff91480fd8    88  b.eq #+0x17c (addr 0xffff91481154)
0xffff91480fdc    92  and x16, x21, #0xfffffffffff00000
0xffff91480fe0    96  ldr x16, [x16, #8]
0xffff91480fe4   100  tst x16, #0x18
0xffff91480fe8   104  b.ne #+0x16c (addr 0xffff91481154)
0xffff91480fec   108  and x10, x21, #0xfffffffffff00000
0xffff91480ff0   112  ldr x0, [x10, #104]
0xffff91480ff4   116  subs x0, x0, #0x1 (1)
0xffff91480ff8   120  str x0, [x10, #104]
0xffff91480ffc   124  b.mi #+0xc4 (addr 0xffff914810c0)
0xffff91481000   128  ubfx x16, x21, #8, #12
0xffff91481004   132  and x10, x21, #0xfffffffffff00000
0xffff91481008   136  add x10, x10, x16, lsl #2
0xffff9148100c   140  ubfx x0, x21, #3, #5
0xffff91481010   144  ldr x10, [x10, #360]
0xffff91481014   148  lsr x10, x10, x0
0xffff91481018   152  tbz w10, #0, #+0x8 (addr 0xffff91481020)
0xffff9148101c   156  tbnz w10, #1, #+0x3c (addr 0xffff91481058)
0xffff91481020   160  ldp x1, x0, [jssp], #16
0xffff91481024   164  ldr x16, pc+1228 (addr 0x0000ffff914814f0)    ;; external reference (store_buffer_top)
0xffff91481028   168  ldr x10, [x16]
0xffff9148102c   172  str x11, [x10], #8
0xffff91481030   176  str x10, [x16]
0xffff91481034   180  tst x10, #0x1ffff
0xffff91481038   184  b.eq #+0x8 (addr 0xffff91481040)
0xffff9148103c   188  ret
0xffff91481040   192  sub csp, jssp, #0x8 (8)
0xffff91481044   196  str lr, [jssp, #-8]!
0xffff91481048   200  ldr x17, pc+1200 (addr 0x0000ffff914814f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9148104c   204  blr x17
0xffff91481050   208  ldr lr, [jssp], #8
0xffff91481054   212  ret
0xffff91481058   216  ldr x10, [x11]
0xffff9148105c   220  sub csp, jssp, #0x10 (16)
0xffff91481060   224  stp x21, x11, [jssp, #-16]!
0xffff91481064   228  ubfx x16, x10, #8, #12
0xffff91481068   232  and x0, x10, #0xfffffffffff00000
0xffff9148106c   236  add x0, x0, x16, lsl #2
0xffff91481070   240  ubfx x21, x10, #3, #5
0xffff91481074   244  ldr x11, [x0, #360]
0xffff91481078   248  lsr x11, x11, x21
0xffff9148107c   252  tbz w11, #0, #+0x40 (addr 0xffff914810bc)
0xffff91481080   256  ldp x21, x11, [jssp], #16
0xffff91481084   260  ldp x1, x0, [jssp], #16
0xffff91481088   264  ldr x16, pc+1144 (addr 0x0000ffff91481500)    ;; external reference (store_buffer_top)
0xffff9148108c   268  ldr x10, [x16]
0xffff91481090   272  str x11, [x10], #8
0xffff91481094   276  str x10, [x16]
0xffff91481098   280  tst x10, #0x1ffff
0xffff9148109c   284  b.eq #+0x8 (addr 0xffff914810a4)
0xffff914810a0   288  ret
0xffff914810a4   292  sub csp, jssp, #0x8 (8)
0xffff914810a8   296  str lr, [jssp, #-8]!
0xffff914810ac   300  ldr x17, pc+1116 (addr 0x0000ffff91481508)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff914810b0   304  blr x17
0xffff914810b4   308  ldr lr, [jssp], #8
0xffff914810b8   312  ret
0xffff914810bc   316  ldp x21, x11, [jssp], #16
0xffff914810c0   320  sub csp, jssp, #0x78 (120)
0xffff914810c4   324  stp x14, x15, [jssp, #-32]!
0xffff914810c8   328  stp x18, lr, [jssp, #16]
0xffff914810cc   332  stp x9, x11, [jssp, #-32]!
0xffff914810d0   336  stp x12, x13, [jssp, #16]
0xffff914810d4   340  stp x5, x6, [jssp, #-32]!
0xffff914810d8   344  stp x7, x8, [jssp, #16]
0xffff914810dc   348  stp x2, x3, [jssp, #-24]!
0xffff914810e0   352  str x4, [jssp, #16]
0xffff914810e4   356  mov x0, x21
0xffff914810e8   360  mov x1, x11
0xffff914810ec   364  ldr x2, pc+1060 (addr 0x0000ffff91481510)    ;; external reference (isolate)
0xffff914810f0   368  ldr x16, pc+1064 (addr 0x0000ffff91481518)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914810f4   372  and csp, jssp, #0xfffffffffffffff0
0xffff914810f8   376  blr x16
0xffff914810fc   380  ldp x4, x5, [jssp, #16]
0xffff91481100   384  ldp x2, x3, [jssp], #32
0xffff91481104   388  ldp x8, x9, [jssp, #16]
0xffff91481108   392  ldp x6, x7, [jssp], #32
0xffff9148110c   396  ldp x13, x14, [jssp, #16]
0xffff91481110   400  ldp x11, x12, [jssp], #32
0xffff91481114   404  ldr lr, [jssp, #16]
0xffff91481118   408  ldp x15, x18, [jssp], #24
0xffff9148111c   412  ldp x1, x0, [jssp], #16
0xffff91481120   416  ldr x16, pc+1024 (addr 0x0000ffff91481520)    ;; external reference (store_buffer_top)
0xffff91481124   420  ldr x10, [x16]
0xffff91481128   424  str x11, [x10], #8
0xffff9148112c   428  str x10, [x16]
0xffff91481130   432  tst x10, #0x1ffff
0xffff91481134   436  b.eq #+0x8 (addr 0xffff9148113c)
0xffff91481138   440  ret
0xffff9148113c   444  sub csp, jssp, #0x8 (8)
0xffff91481140   448  str lr, [jssp, #-8]!
0xffff91481144   452  ldr x17, pc+996 (addr 0x0000ffff91481528)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff91481148   456  blr x17
0xffff9148114c   460  ldr lr, [jssp], #8
0xffff91481150   464  ret
0xffff91481154   468  and x10, x21, #0xfffffffffff00000
0xffff91481158   472  ldr x0, [x10, #104]
0xffff9148115c   476  subs x0, x0, #0x1 (1)
0xffff91481160   480  str x0, [x10, #104]
0xffff91481164   484  b.mi #+0x64 (addr 0xffff914811c8)
0xffff91481168   488  ubfx x16, x21, #8, #12
0xffff9148116c   492  and x10, x21, #0xfffffffffff00000
0xffff91481170   496  add x10, x10, x16, lsl #2
0xffff91481174   500  ubfx x0, x21, #3, #5
0xffff91481178   504  ldr x10, [x10, #360]
0xffff9148117c   508  lsr x10, x10, x0
0xffff91481180   512  tbz w10, #0, #+0x8 (addr 0xffff91481188)
0xffff91481184   516  tbnz w10, #1, #+0xc (addr 0xffff91481190)
0xffff91481188   520  ldp x1, x0, [jssp], #16
0xffff9148118c   524  ret
0xffff91481190   528  ldr x10, [x11]
0xffff91481194   532  sub csp, jssp, #0x10 (16)
0xffff91481198   536  stp x21, x11, [jssp, #-16]!
0xffff9148119c   540  ubfx x16, x10, #8, #12
0xffff914811a0   544  and x0, x10, #0xfffffffffff00000
0xffff914811a4   548  add x0, x0, x16, lsl #2
0xffff914811a8   552  ubfx x21, x10, #3, #5
0xffff914811ac   556  ldr x11, [x0, #360]
0xffff914811b0   560  lsr x11, x11, x21
0xffff914811b4   564  tbz w11, #0, #+0x10 (addr 0xffff914811c4)
0xffff914811b8   568  ldp x21, x11, [jssp], #16
0xffff914811bc   572  ldp x1, x0, [jssp], #16
0xffff914811c0   576  ret
0xffff914811c4   580  ldp x21, x11, [jssp], #16
0xffff914811c8   584  sub csp, jssp, #0x78 (120)
0xffff914811cc   588  stp x14, x15, [jssp, #-32]!
0xffff914811d0   592  stp x18, lr, [jssp, #16]
0xffff914811d4   596  stp x9, x11, [jssp, #-32]!
0xffff914811d8   600  stp x12, x13, [jssp, #16]
0xffff914811dc   604  stp x5, x6, [jssp, #-32]!
0xffff914811e0   608  stp x7, x8, [jssp, #16]
0xffff914811e4   612  stp x2, x3, [jssp, #-24]!
0xffff914811e8   616  str x4, [jssp, #16]
0xffff914811ec   620  mov x0, x21
0xffff914811f0   624  mov x1, x11
0xffff914811f4   628  ldr x2, pc+828 (addr 0x0000ffff91481530)    ;; external reference (isolate)
0xffff914811f8   632  ldr x16, pc+832 (addr 0x0000ffff91481538)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914811fc   636  and csp, jssp, #0xfffffffffffffff0
0xffff91481200   640  blr x16
0xffff91481204   644  ldp x4, x5, [jssp, #16]
0xffff91481208   648  ldp x2, x3, [jssp], #32
0xffff9148120c   652  ldp x8, x9, [jssp, #16]
0xffff91481210   656  ldp x6, x7, [jssp], #32
0xffff91481214   660  ldp x13, x14, [jssp, #16]
0xffff91481218   664  ldp x11, x12, [jssp], #32
0xffff9148121c   668  ldr lr, [jssp, #16]
0xffff91481220   672  ldp x15, x18, [jssp], #24
0xffff91481224   676  ldp x1, x0, [jssp], #16
0xffff91481228   680  ret
0xffff9148122c   684  sub csp, jssp, #0x10 (16)
0xffff91481230   688  stp x1, x0, [jssp, #-16]!
0xffff91481234   692  ldr x10, [x11]
0xffff91481238   696  and x16, x10, #0xfffffffffff00000
0xffff9148123c   700  ldr x16, [x16, #8]
0xffff91481240   704  tst x16, #0x18
0xffff91481244   708  b.eq #+0x19c (addr 0xffff914813e0)
0xffff91481248   712  and x16, x21, #0xfffffffffff00000
0xffff9148124c   716  ldr x16, [x16, #8]
0xffff91481250   720  tst x16, #0x18
0xffff91481254   724  b.ne #+0x18c (addr 0xffff914813e0)
0xffff91481258   728  and x10, x21, #0xfffffffffff00000
0xffff9148125c   732  ldr x0, [x10, #104]
0xffff91481260   736  subs x0, x0, #0x1 (1)
0xffff91481264   740  str x0, [x10, #104]
0xffff91481268   744  b.mi #+0xe4 (addr 0xffff9148134c)
0xffff9148126c   748  ubfx x16, x21, #8, #12
0xffff91481270   752  and x10, x21, #0xfffffffffff00000
0xffff91481274   756  add x10, x10, x16, lsl #2
0xffff91481278   760  ubfx x0, x21, #3, #5
0xffff9148127c   764  ldr x10, [x10, #360]
0xffff91481280   768  lsr x10, x10, x0
0xffff91481284   772  tbz w10, #0, #+0x8 (addr 0xffff9148128c)
0xffff91481288   776  tbnz w10, #1, #+0x3c (addr 0xffff914812c4)
0xffff9148128c   780  ldp x1, x0, [jssp], #16
0xffff91481290   784  ldr x16, pc+688 (addr 0x0000ffff91481540)    ;; external reference (store_buffer_top)
0xffff91481294   788  ldr x10, [x16]
0xffff91481298   792  str x11, [x10], #8
0xffff9148129c   796  str x10, [x16]
0xffff914812a0   800  tst x10, #0x1ffff
0xffff914812a4   804  b.eq #+0x8 (addr 0xffff914812ac)
0xffff914812a8   808  ret
0xffff914812ac   812  sub csp, jssp, #0x8 (8)
0xffff914812b0   816  str lr, [jssp, #-8]!
0xffff914812b4   820  ldr x17, pc+660 (addr 0x0000ffff91481548)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff914812b8   824  blr x17
0xffff914812bc   828  ldr lr, [jssp], #8
0xffff914812c0   832  ret
0xffff914812c4   836  ldr x10, [x11]
0xffff914812c8   840  and x0, x10, #0xfffffffffff00000
0xffff914812cc   844  ldr x0, [x0, #8]
0xffff914812d0   848  tbz w0, #6, #+0x18 (addr 0xffff914812e8)
0xffff914812d4   852  and x0, x21, #0xfffffffffff00000
0xffff914812d8   856  ldr x0, [x0, #8]
0xffff914812dc   860  movz x16, #0x58
0xffff914812e0   864  tst x0, x16
0xffff914812e4   868  b.eq #+0x68 (addr 0xffff9148134c)
0xffff914812e8   872  sub csp, jssp, #0x10 (16)
0xffff914812ec   876  stp x21, x11, [jssp, #-16]!
0xffff914812f0   880  ubfx x16, x10, #8, #12
0xffff914812f4   884  and x0, x10, #0xfffffffffff00000
0xffff914812f8   888  add x0, x0, x16, lsl #2
0xffff914812fc   892  ubfx x21, x10, #3, #5
0xffff91481300   896  ldr x11, [x0, #360]
0xffff91481304   900  lsr x11, x11, x21
0xffff91481308   904  tbz w11, #0, #+0x40 (addr 0xffff91481348)
0xffff9148130c   908  ldp x21, x11, [jssp], #16
0xffff91481310   912  ldp x1, x0, [jssp], #16
0xffff91481314   916  ldr x16, pc+572 (addr 0x0000ffff91481550)    ;; external reference (store_buffer_top)
0xffff91481318   920  ldr x10, [x16]
0xffff9148131c   924  str x11, [x10], #8
0xffff91481320   928  str x10, [x16]
0xffff91481324   932  tst x10, #0x1ffff
0xffff91481328   936  b.eq #+0x8 (addr 0xffff91481330)
0xffff9148132c   940  ret
0xffff91481330   944  sub csp, jssp, #0x8 (8)
0xffff91481334   948  str lr, [jssp, #-8]!
0xffff91481338   952  ldr x17, pc+544 (addr 0x0000ffff91481558)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff9148133c   956  blr x17
0xffff91481340   960  ldr lr, [jssp], #8
0xffff91481344   964  ret
0xffff91481348   968  ldp x21, x11, [jssp], #16
0xffff9148134c   972  sub csp, jssp, #0x78 (120)
0xffff91481350   976  stp x14, x15, [jssp, #-32]!
0xffff91481354   980  stp x18, lr, [jssp, #16]
0xffff91481358   984  stp x9, x11, [jssp, #-32]!
0xffff9148135c   988  stp x12, x13, [jssp, #16]
0xffff91481360   992  stp x5, x6, [jssp, #-32]!
0xffff91481364   996  stp x7, x8, [jssp, #16]
0xffff91481368  1000  stp x2, x3, [jssp, #-24]!
0xffff9148136c  1004  str x4, [jssp, #16]
0xffff91481370  1008  mov x0, x21
0xffff91481374  1012  mov x1, x11
0xffff91481378  1016  ldr x2, pc+488 (addr 0x0000ffff91481560)    ;; external reference (isolate)
0xffff9148137c  1020  ldr x16, pc+492 (addr 0x0000ffff91481568)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91481380  1024  and csp, jssp, #0xfffffffffffffff0
0xffff91481384  1028  blr x16
0xffff91481388  1032  ldp x4, x5, [jssp, #16]
0xffff9148138c  1036  ldp x2, x3, [jssp], #32
0xffff91481390  1040  ldp x8, x9, [jssp, #16]
0xffff91481394  1044  ldp x6, x7, [jssp], #32
0xffff91481398  1048  ldp x13, x14, [jssp, #16]
0xffff9148139c  1052  ldp x11, x12, [jssp], #32
0xffff914813a0  1056  ldr lr, [jssp, #16]
0xffff914813a4  1060  ldp x15, x18, [jssp], #24
0xffff914813a8  1064  ldp x1, x0, [jssp], #16
0xffff914813ac  1068  ldr x16, pc+452 (addr 0x0000ffff91481570)    ;; external reference (store_buffer_top)
0xffff914813b0  1072  ldr x10, [x16]
0xffff914813b4  1076  str x11, [x10], #8
0xffff914813b8  1080  str x10, [x16]
0xffff914813bc  1084  tst x10, #0x1ffff
0xffff914813c0  1088  b.eq #+0x8 (addr 0xffff914813c8)
0xffff914813c4  1092  ret
0xffff914813c8  1096  sub csp, jssp, #0x8 (8)
0xffff914813cc  1100  str lr, [jssp, #-8]!
0xffff914813d0  1104  ldr x17, pc+424 (addr 0x0000ffff91481578)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff914813d4  1108  blr x17
0xffff914813d8  1112  ldr lr, [jssp], #8
0xffff914813dc  1116  ret
0xffff914813e0  1120  and x10, x21, #0xfffffffffff00000
0xffff914813e4  1124  ldr x0, [x10, #104]
0xffff914813e8  1128  subs x0, x0, #0x1 (1)
0xffff914813ec  1132  str x0, [x10, #104]
0xffff914813f0  1136  b.mi #+0x84 (addr 0xffff91481474)
0xffff914813f4  1140  ubfx x16, x21, #8, #12
0xffff914813f8  1144  and x10, x21, #0xfffffffffff00000
0xffff914813fc  1148  add x10, x10, x16, lsl #2
0xffff91481400  1152  ubfx x0, x21, #3, #5
0xffff91481404  1156  ldr x10, [x10, #360]
0xffff91481408  1160  lsr x10, x10, x0
0xffff9148140c  1164  tbz w10, #0, #+0x8 (addr 0xffff91481414)
0xffff91481410  1168  tbnz w10, #1, #+0xc (addr 0xffff9148141c)
0xffff91481414  1172  ldp x1, x0, [jssp], #16
0xffff91481418  1176  ret
0xffff9148141c  1180  ldr x10, [x11]
0xffff91481420  1184  and x0, x10, #0xfffffffffff00000
0xffff91481424  1188  ldr x0, [x0, #8]
0xffff91481428  1192  tbz w0, #6, #+0x18 (addr 0xffff91481440)
0xffff9148142c  1196  and x0, x21, #0xfffffffffff00000
0xffff91481430  1200  ldr x0, [x0, #8]
0xffff91481434  1204  movz x16, #0x58
0xffff91481438  1208  tst x0, x16
0xffff9148143c  1212  b.eq #+0x38 (addr 0xffff91481474)
0xffff91481440  1216  sub csp, jssp, #0x10 (16)
0xffff91481444  1220  stp x21, x11, [jssp, #-16]!
0xffff91481448  1224  ubfx x16, x10, #8, #12
0xffff9148144c  1228  and x0, x10, #0xfffffffffff00000
0xffff91481450  1232  add x0, x0, x16, lsl #2
0xffff91481454  1236  ubfx x21, x10, #3, #5
0xffff91481458  1240  ldr x11, [x0, #360]
0xffff9148145c  1244  lsr x11, x11, x21
0xffff91481460  1248  tbz w11, #0, #+0x10 (addr 0xffff91481470)
0xffff91481464  1252  ldp x21, x11, [jssp], #16
0xffff91481468  1256  ldp x1, x0, [jssp], #16
0xffff9148146c  1260  ret
0xffff91481470  1264  ldp x21, x11, [jssp], #16
0xffff91481474  1268  sub csp, jssp, #0x78 (120)
0xffff91481478  1272  stp x14, x15, [jssp, #-32]!
0xffff9148147c  1276  stp x18, lr, [jssp, #16]
0xffff91481480  1280  stp x9, x11, [jssp, #-32]!
0xffff91481484  1284  stp x12, x13, [jssp, #16]
0xffff91481488  1288  stp x5, x6, [jssp, #-32]!
0xffff9148148c  1292  stp x7, x8, [jssp, #16]
0xffff91481490  1296  stp x2, x3, [jssp, #-24]!
0xffff91481494  1300  str x4, [jssp, #16]
0xffff91481498  1304  mov x0, x21
0xffff9148149c  1308  mov x1, x11
0xffff914814a0  1312  ldr x2, pc+224 (addr 0x0000ffff91481580)    ;; external reference (isolate)
0xffff914814a4  1316  ldr x16, pc+228 (addr 0x0000ffff91481588)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff914814a8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff914814ac  1324  blr x16
0xffff914814b0  1328  ldp x4, x5, [jssp, #16]
0xffff914814b4  1332  ldp x2, x3, [jssp], #32
0xffff914814b8  1336  ldp x8, x9, [jssp, #16]
0xffff914814bc  1340  ldp x6, x7, [jssp], #32
0xffff914814c0  1344  ldp x13, x14, [jssp, #16]
0xffff914814c4  1348  ldp x11, x12, [jssp], #32
0xffff914814c8  1352  ldr lr, [jssp, #16]
0xffff914814cc  1356  ldp x15, x18, [jssp], #24
0xffff914814d0  1360  ldp x1, x0, [jssp], #16
0xffff914814d4  1364  ret
0xffff914814d8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff914814dc  1372  d63f03e0       constant
0xffff914814e0  1376  4117f8c0       constant
0xffff914814e4  1380  00000000       constant
0xffff914814e8  1384  914064c0       constant
0xffff914814ec  1388  0000ffff       constant
0xffff914814f0  1392  4117f8c0       constant
0xffff914814f4  1396  00000000       constant
0xffff914814f8  1400  914064c0       constant
0xffff914814fc  1404  0000ffff       constant
0xffff91481500  1408  4117f8c0       constant
0xffff91481504  1412  00000000       constant
0xffff91481508  1416  914064c0       constant
0xffff9148150c  1420  0000ffff       constant
0xffff91481510  1424  4117e2d0       constant
0xffff91481514  1428  00000000       constant
0xffff91481518  1432  00c2d958       constant
0xffff9148151c  1436  00000000       constant
0xffff91481520  1440  4117f8c0       constant
0xffff91481524  1444  00000000       constant
0xffff91481528  1448  914064c0       constant
0xffff9148152c  1452  0000ffff       constant
0xffff91481530  1456  4117e2d0       constant
0xffff91481534  1460  00000000       constant
0xffff91481538  1464  00c2d958       constant
0xffff9148153c  1468  00000000       constant
0xffff91481540  1472  4117f8c0       constant
0xffff91481544  1476  00000000       constant
0xffff91481548  1480  914064c0       constant
0xffff9148154c  1484  0000ffff       constant
0xffff91481550  1488  4117f8c0       constant
0xffff91481554  1492  00000000       constant
0xffff91481558  1496  914064c0       constant
0xffff9148155c  1500  0000ffff       constant
0xffff91481560  1504  4117e2d0       constant
0xffff91481564  1508  00000000       constant
0xffff91481568  1512  00c2d958       constant
0xffff9148156c  1516  00000000       constant
0xffff91481570  1520  4117f8c0       constant
0xffff91481574  1524  00000000       constant
0xffff91481578  1528  914064c0       constant
0xffff9148157c  1532  0000ffff       constant
0xffff91481580  1536  4117e2d0       constant
0xffff91481584  1540  00000000       constant
0xffff91481588  1544  00c2d958       constant
0xffff9148158c  1548  00000000       constant


RelocInfo (size = 59)
0xffff91480f88  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91480fac  code target (STUB)  (0xffff914064c0)
0xffff91481024  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91481048  code target (STUB)  (0xffff914064c0)
0xffff91481088  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914810ac  code target (STUB)  (0xffff914064c0)
0xffff914810ec  external reference (isolate)  (0x4117e2d0)
0xffff914810f0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91481120  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91481144  code target (STUB)  (0xffff914064c0)
0xffff914811f4  external reference (isolate)  (0x4117e2d0)
0xffff914811f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91481290  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914812b4  code target (STUB)  (0xffff914064c0)
0xffff91481314  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91481338  code target (STUB)  (0xffff914064c0)
0xffff91481378  external reference (isolate)  (0x4117e2d0)
0xffff9148137c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff914813ac  external reference (store_buffer_top)  (0x4117f8c0)
0xffff914813d0  code target (STUB)  (0xffff914064c0)
0xffff914814a0  external reference (isolate)  (0x4117e2d0)
0xffff914814a4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff914814d8  constant pool (size 184)


kind = STUB
major_key = RegExpExecStub
name = RegExpExecStub
compiler = unknown
Instructions (size = 944)
0xffff91481600     0  ldr x10, pc+776 (addr 0x0000ffff91481908)    ;; external reference (RegExpStack::memory_size())
0xffff91481604     4  ldr x10, [x10]
0xffff91481608     8  cbz x10, #+0x2c0 (addr 0xffff914818c8)
0xffff9148160c    12  ldr x3, [jssp, #24]
0xffff91481610    16  tbz w3, #0, #+0x2b8 (addr 0xffff914818c8)
0xffff91481614    20  ldur x10, [x3, #-1]
0xffff91481618    24  ldrb w10, [x10, #11]
0xffff9148161c    28  cmp x10, #0xc7 (199)
0xffff91481620    32  b.ne #+0x2a8 (addr 0xffff914818c8)
0xffff91481624    36  ldur x20, [x3, #23]
0xffff91481628    40  ldur x10, [x20, #15]
0xffff9148162c    44  movz x16, #0x200000000
0xffff91481630    48  cmp x10, x16
0xffff91481634    52  b.ne #+0x294 (addr 0xffff914818c8)
0xffff91481638    56  ldursw x10, [x20, #83]
0xffff9148163c    60  add x10, x10, x10
0xffff91481640    64  cmp x10, #0x7e (126)
0xffff91481644    68  b.hi #+0x284 (addr 0xffff914818c8)
0xffff91481648    72  movz w5, #0x0
0xffff9148164c    76  ldr x19, [jssp, #16]
0xffff91481650    80  tbz w19, #0, #+0x278 (addr 0xffff914818c8)
0xffff91481654    84  ldur x2, [x19, #15]
0xffff91481658    88  ldur x10, [x19, #-1]
0xffff9148165c    92  ldrb w0, [x10, #11]
0xffff91481660    96  movz w16, #0x93
0xffff91481664   100  and w6, w0, w16
0xffff91481668   104  cbz w6, #+0x24 (addr 0xffff9148168c)
0xffff9148166c   108  cmp w6, #0x2 (2)
0xffff91481670   112  b.ge #+0x268 (addr 0xffff914818d8)
0xffff91481674   116  ldur x10, [x19, #31]
0xffff91481678   120  ldr x16, [x26, #80]
0xffff9148167c   124  cmp x10, x16
0xffff91481680   128  b.ne #+0x248 (addr 0xffff914818c8)
0xffff91481684   132  ldur x19, [x19, #23]
0xffff91481688   136  b #-0x30 (addr 0xffff91481658)
0xffff9148168c   140  ldr x10, [jssp, #8]
0xffff91481690   144  tbnz w10, #0, #+0x238 (addr 0xffff914818c8)
0xffff91481694   148  cmp x2, x10
0xffff91481698   152  b.ls #+0x230 (addr 0xffff914818c8)
0xffff9148169c   156  asr x1, x10, #32
0xffff914816a0   160  movz x10, #0x8
0xffff914816a4   164  ands w4, w0, #0x4
0xffff914816a8   168  csel x10, xzr, x10, ne
0xffff914816ac   172  add x10, x20, x10
0xffff914816b0   176  ldur x22, [x10, #39]
0xffff914816b4   180  tbz w22, #0, #+0x214 (addr 0xffff914818c8)
0xffff914816b8   184  sub csp, jssp, #0x10 (16)
0xffff914816bc   188  stp fp, lr, [jssp, #-16]!
0xffff914816c0   192  mov fp, jssp
0xffff914816c4   196  movz x10, #0x300000000
0xffff914816c8   200  sub csp, jssp, #0x8 (8)
0xffff914816cc   204  str x10, [jssp, #-8]!
0xffff914816d0   208  sub csp, jssp, #0x8 (8)
0xffff914816d4   212  str xzr, [jssp, #-8]!
0xffff914816d8   216  ldr x10, pc+568 (addr 0x0000ffff91481910)    ;; object: 0xffff914815a1 <Code: STUB>
0xffff914816dc   220  sub csp, jssp, #0x8 (8)
0xffff914816e0   224  str x10, [jssp, #-8]!
0xffff914816e4   228  ldr x10, pc+564 (addr 0x0000ffff91481918)    ;; external reference (Isolate::c_entry_fp_address)
0xffff914816e8   232  str fp, [x10]
0xffff914816ec   236  ldr x10, pc+564 (addr 0x0000ffff91481920)    ;; external reference (Isolate::context_address)
0xffff914816f0   240  str cp, [x10]
0xffff914816f4   244  sub csp, jssp, #0x10 (16)
0xffff914816f8   248  sub jssp, jssp, #0x10 (16)
0xffff914816fc   252  and csp, jssp, #0xfffffffffffffff0
0xffff91481700   256  add x10, csp, #0x8 (8)
0xffff91481704   260  stur x10, [fp, #-16]
0xffff91481708   264  ldr x10, pc+544 (addr 0x0000ffff91481928)    ;; external reference (isolate)
0xffff9148170c   268  str x10, [csp, #8]
0xffff91481710   272  add x13, x19, #0x17 (23)
0xffff91481714   276  ldr x19, [fp, #32]
0xffff91481718   280  ldur w11, [x19, #19]
0xffff9148171c   284  ubfx w4, w4, #2, #1
0xffff91481720   288  eor w4, w4, #0x1
0xffff91481724   292  lsl w12, w1, w4
0xffff91481728   296  lsl w11, w11, w4
0xffff9148172c   300  lsl w5, w5, w4
0xffff91481730   304  mov x0, x19
0xffff91481734   308  add w10, w12, w5
0xffff91481738   312  add x2, x13, w10, uxtw
0xffff9148173c   316  sub w10, w11, w12
0xffff91481740   320  add x3, x2, w10, uxtw
0xffff91481744   324  ldr x4, pc+492 (addr 0x0000ffff91481930)    ;; external reference (OffsetsVector::static_offsets_vector)
0xffff91481748   328  movz x5, #0x0
0xffff9148174c   332  ldr x10, pc+492 (addr 0x0000ffff91481938)    ;; external reference (RegExpStack::memory_address())
0xffff91481750   336  ldr x10, [x10]
0xffff91481754   340  ldr x11, pc+492 (addr 0x0000ffff91481940)    ;; external reference (RegExpStack::memory_size())
0xffff91481758   344  ldr x11, [x11]
0xffff9148175c   348  add x6, x10, x11
0xffff91481760   352  movz x7, #0x1
0xffff91481764   356  add x22, x22, #0x5f (95)
0xffff91481768   360  ldr lr, pc+480 (addr 0x0000ffff91481948)    ;; code: STUB, DirectCEntryStub, minor: 0
0xffff9148176c   364  mov x10, x22
0xffff91481770   368  blr lr
0xffff91481774   372  ldr x10, pc+476 (addr 0x0000ffff91481950)    ;; external reference (Isolate::context_address)
0xffff91481778   376  ldr cp, [x10]
0xffff9148177c   380  ldr x10, pc+476 (addr 0x0000ffff91481958)    ;; external reference (Isolate::c_entry_fp_address)
0xffff91481780   384  str xzr, [x10]
0xffff91481784   388  mov jssp, fp
0xffff91481788   392  ldp fp, lr, [jssp], #16
0xffff9148178c   396  cbz w0, #+0x130 (addr 0xffff914818bc)
0xffff91481790   400  cmn w0, #0x1 (1)
0xffff91481794   404  b.eq #+0x104 (addr 0xffff91481898)
0xffff91481798   408  cmn w0, #0x2 (2)
0xffff9148179c   412  b.eq #+0x12c (addr 0xffff914818c8)
0xffff914817a0   416  ldursw x10, [x20, #83]
0xffff914817a4   420  add x10, x10, x10
0xffff914817a8   424  add x12, x10, #0x2 (2)
0xffff914817ac   428  ldr x10, [jssp]
0xffff914817b0   432  tbz w10, #0, #+0x118 (addr 0xffff914818c8)
0xffff914817b4   436  ldur x11, [x10, #-1]
0xffff914817b8   440  ldrb w11, [x11, #11]
0xffff914817bc   444  cmp x11, #0xbc (188)
0xffff914817c0   448  b.ne #+0x108 (addr 0xffff914818c8)
0xffff914817c4   452  ldur x21, [x10, #15]
0xffff914817c8   456  ldur x10, [x21, #-1]
0xffff914817cc   460  ldr x16, [x26, #224]
0xffff914817d0   464  cmp x10, x16
0xffff914817d4   468  b.ne #+0xf4 (addr 0xffff914818c8)
0xffff914817d8   472  ldursw x10, [x21, #11]
0xffff914817dc   476  add x11, x12, #0x3 (3)
0xffff914817e0   480  cmp x11, x10
0xffff914817e4   484  b.gt #+0xe4 (addr 0xffff914818c8)
0xffff914817e8   488  lsl x10, x12, #32
0xffff914817ec   492  stur x10, [x21, #15]
0xffff914817f0   496  stur x19, [x21, #23]
0xffff914817f4   500  mov x10, x19
0xffff914817f8   504  tbz w10, #0, #+0x34 (addr 0xffff9148182c)
0xffff914817fc   508  add x11, x21, #0x17 (23)
0xffff91481800   512  and x10, x10, #0xfffffffffff00000
0xffff91481804   516  ldr x10, [x10, #8]
0xffff91481808   520  tbz w10, #1, #+0x24 (addr 0xffff9148182c)
0xffff9148180c   524  and x10, x21, #0xfffffffffff00000
0xffff91481810   528  ldr x10, [x10, #8]
0xffff91481814   532  tbz w10, #2, #+0x18 (addr 0xffff9148182c)
0xffff91481818   536  sub csp, jssp, #0x8 (8)
0xffff9148181c   540  str lr, [jssp, #-8]!
0xffff91481820   544  ldr x16, pc+320 (addr 0x0000ffff91481960)    ;; code: STUB, RecordWriteStub, minor: 11605
0xffff91481824   548  blr x16
0xffff91481828   552  ldr lr, [jssp], #8
0xffff9148182c   556  stur x19, [x21, #31]
0xffff91481830   560  mov x10, x19
0xffff91481834   564  tbz w10, #0, #+0x34 (addr 0xffff91481868)
0xffff91481838   568  add x11, x21, #0x1f (31)
0xffff9148183c   572  and x10, x10, #0xfffffffffff00000
0xffff91481840   576  ldr x10, [x10, #8]
0xffff91481844   580  tbz w10, #1, #+0x24 (addr 0xffff91481868)
0xffff91481848   584  and x10, x21, #0xfffffffffff00000
0xffff9148184c   588  ldr x10, [x10, #8]
0xffff91481850   592  tbz w10, #2, #+0x18 (addr 0xffff91481868)
0xffff91481854   596  sub csp, jssp, #0x8 (8)
0xffff91481858   600  str lr, [jssp, #-8]!
0xffff9148185c   604  ldr x16, pc+268 (addr 0x0000ffff91481968)    ;; code: STUB, RecordWriteStub, minor: 11605
0xffff91481860   608  blr x16
0xffff91481864   612  ldr lr, [jssp], #8
0xffff91481868   616  ldr x14, pc+264 (addr 0x0000ffff91481970)    ;; external reference (OffsetsVector::static_offsets_vector)
0xffff9148186c   620  add x13, x21, #0x27 (39)
0xffff91481870   624  subs x12, x12, #0x2 (2)
0xffff91481874   628  b.mi #+0x18 (addr 0xffff9148188c)
0xffff91481878   632  ldr x15, [x14], #8
0xffff9148187c   636  lsl x10, x15, #32
0xffff91481880   640  and x11, x15, #0xffffffff00000000
0xffff91481884   644  stp x10, x11, [x13], #16
0xffff91481888   648  b #-0x18 (addr 0xffff91481870)
0xffff9148188c   652  ldr x0, [jssp]
0xffff91481890   656  add jssp, jssp, #0x20 (32)
0xffff91481894   660  ret
0xffff91481898   664  ldr x10, pc+224 (addr 0x0000ffff91481978)    ;; object: 0x49b04519 <the hole>
0xffff9148189c   668  ldr x11, pc+228 (addr 0x0000ffff91481980)    ;; external reference (Isolate::pending_exception_address)
0xffff914818a0   672  ldr x0, [x11]
0xffff914818a4   676  cmp x10, x0
0xffff914818a8   680  b.eq #+0x20 (addr 0xffff914818c8)
0xffff914818ac   684  movz x0, #0x4
0xffff914818b0   688  ldr x1, pc+216 (addr 0x0000ffff91481988)    ;; external reference (Runtime::RegExpExecReThrow)
0xffff914818b4   692  ldr x16, pc+220 (addr 0x0000ffff91481990)    ;; code: STUB, CEntryStub, minor: 4
0xffff914818b8   696  br x16
0xffff914818bc   700  ldr x0, pc+220 (addr 0x0000ffff91481998)    ;; object: 0x49b04211 <null>
0xffff914818c0   704  add jssp, jssp, #0x20 (32)
0xffff914818c4   708  ret
0xffff914818c8   712  movz x0, #0x4
0xffff914818cc   716  ldr x1, pc+212 (addr 0x0000ffff914819a0)    ;; external reference (Runtime::RegExpExec)
0xffff914818d0   720  ldr x16, pc+216 (addr 0x0000ffff914819a8)    ;; code: STUB, CEntryStub, minor: 4
0xffff914818d4   724  br x16
0xffff914818d8   728  b.ne #+0x10 (addr 0xffff914818e8)
0xffff914818dc   732  ldur x19, [x19, #31]
0xffff914818e0   736  sub x19, x19, #0x17 (23)
0xffff914818e4   740  b #-0x258 (addr 0xffff9148168c)
0xffff914818e8   744  movz w16, #0x90
0xffff914818ec   748  tst w6, w16
0xffff914818f0   752  b.ne #-0x28 (addr 0xffff914818c8)
0xffff914818f4   756  ldur w5, [x19, #35]
0xffff914818f8   760  ldur x19, [x19, #23]
0xffff914818fc   764  b #-0x2a4 (addr 0xffff91481658)
0xffff91481900   768  5800057f       constant pool begin (num_const = 43)    ;; constant pool
0xffff91481904   772  d63f03e0       constant
0xffff91481908   776  411a8988       constant
0xffff9148190c   780  00000000       constant
0xffff91481910   784  914815a1       constant
0xffff91481914   788  0000ffff       constant
0xffff91481918   792  4117fdf8       constant
0xffff9148191c   796  00000000       constant
0xffff91481920   800  4117fd90       constant
0xffff91481924   804  00000000       constant
0xffff91481928   808  4117e2d0       constant
0xffff9148192c   812  00000000       constant
0xffff91481930   816  41182e28       constant
0xffff91481934   820  00000000       constant
0xffff91481938   824  411a8980       constant
0xffff9148193c   828  00000000       constant
0xffff91481940   832  411a8988       constant
0xffff91481944   836  00000000       constant
0xffff91481948   840  91468200       constant
0xffff9148194c   844  0000ffff       constant
0xffff91481950   848  4117fd90       constant
0xffff91481954   852  00000000       constant
0xffff91481958   856  4117fdf8       constant
0xffff9148195c   860  00000000       constant
0xffff91481960   864  91480f80       constant
0xffff91481964   868  0000ffff       constant
0xffff91481968   872  91480f80       constant
0xffff9148196c   876  0000ffff       constant
0xffff91481970   880  41182e28       constant
0xffff91481974   884  00000000       constant
0xffff91481978   888  49b04519       constant
0xffff9148197c   892  00000000       constant
0xffff91481980   896  4117fda0       constant
0xffff91481984   900  00000000       constant
0xffff91481988   904  00e59010       constant
0xffff9148198c   908  00000000       constant
0xffff91481990   912  91406060       constant
0xffff91481994   916  0000ffff       constant
0xffff91481998   920  49b04211       constant
0xffff9148199c   924  00000000       constant
0xffff914819a0   928  00e57200       constant
0xffff914819a4   932  00000000       constant
0xffff914819a8   936  91406060       constant
0xffff914819ac   940  0000ffff       constant


RelocInfo (size = 44)
0xffff91481600  external reference (RegExpStack::memory_size())  (0x411a8988)
0xffff914816d8  embedded object  (0xffff914815a1 <Code: STUB>)
0xffff914816e4  external reference (Isolate::c_entry_fp_address)  (0x4117fdf8)
0xffff914816ec  external reference (Isolate::context_address)  (0x4117fd90)
0xffff91481708  external reference (isolate)  (0x4117e2d0)
0xffff91481744  external reference (OffsetsVector::static_offsets_vector)  (0x41182e28)
0xffff9148174c  external reference (RegExpStack::memory_address())  (0x411a8980)
0xffff91481754  external reference (RegExpStack::memory_size())  (0x411a8988)
0xffff91481768  code target (STUB)  (0xffff91468200)
0xffff91481774  external reference (Isolate::context_address)  (0x4117fd90)
0xffff9148177c  external reference (Isolate::c_entry_fp_address)  (0x4117fdf8)
0xffff91481820  code target (STUB)  (0xffff91480f80)
0xffff9148185c  code target (STUB)  (0xffff91480f80)
0xffff91481868  external reference (OffsetsVector::static_offsets_vector)  (0x41182e28)
0xffff91481898  embedded object  (0x49b04519 <the hole>)
0xffff9148189c  external reference (Isolate::pending_exception_address)  (0x4117fda0)
0xffff914818b0  external reference (Runtime::RegExpExecReThrow)  (0xe59010)
0xffff914818b4  code target (STUB)  (0xffff91406060)
0xffff914818bc  embedded object  (0x49b04211 <null>)
0xffff914818cc  external reference (Runtime::RegExpExec)  (0xe57200)
0xffff914818d0  code target (STUB)  (0xffff91406060)
0xffff91481900  constant pool (size 176)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff91481a20     0  adr xzr, #+0x40 (addr 0xffff91481a60)
0xffff91481a24     4  adr xzr, #+0x360 (addr 0xffff91481d84)
0xffff91481a28     8  ldr x16, pc+1736 (addr 0x0000ffff914820f0)    ;; external reference (store_buffer_top)
0xffff91481a2c    12  ldr x3, [x16]
0xffff91481a30    16  str x4, [x3], #8
0xffff91481a34    20  str x3, [x16]
0xffff91481a38    24  tst x3, #0x1ffff
0xffff91481a3c    28  b.eq #+0x8 (addr 0xffff91481a44)
0xffff91481a40    32  ret
0xffff91481a44    36  sub csp, jssp, #0x8 (8)
0xffff91481a48    40  str lr, [jssp, #-8]!
0xffff91481a4c    44  ldr x17, pc+1708 (addr 0x0000ffff914820f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91481a50    48  blr x17
0xffff91481a54    52  ldr lr, [jssp], #8
0xffff91481a58    56  ret
0xffff91481a5c    60  ret
0xffff91481a60    64  sub csp, jssp, #0x10 (16)
0xffff91481a64    68  stp x1, x0, [jssp, #-16]!
0xffff91481a68    72  ldr x3, [x4]
0xffff91481a6c    76  and x16, x3, #0xfffffffffff00000
0xffff91481a70    80  ldr x16, [x16, #8]
0xffff91481a74    84  tst x16, #0x18
0xffff91481a78    88  b.eq #+0x1d8 (addr 0xffff91481c50)
0xffff91481a7c    92  and x16, x6, #0xfffffffffff00000
0xffff91481a80    96  ldr x16, [x16, #8]
0xffff91481a84   100  tst x16, #0x18
0xffff91481a88   104  b.ne #+0x1c8 (addr 0xffff91481c50)
0xffff91481a8c   108  and x3, x6, #0xfffffffffff00000
0xffff91481a90   112  ldr x0, [x3, #104]
0xffff91481a94   116  subs x0, x0, #0x1 (1)
0xffff91481a98   120  str x0, [x3, #104]
0xffff91481a9c   124  b.mi #+0xc4 (addr 0xffff91481b60)
0xffff91481aa0   128  ubfx x16, x6, #8, #12
0xffff91481aa4   132  and x3, x6, #0xfffffffffff00000
0xffff91481aa8   136  add x3, x3, x16, lsl #2
0xffff91481aac   140  ubfx x0, x6, #3, #5
0xffff91481ab0   144  ldr x3, [x3, #360]
0xffff91481ab4   148  lsr x3, x3, x0
0xffff91481ab8   152  tbz w3, #0, #+0x8 (addr 0xffff91481ac0)
0xffff91481abc   156  tbnz w3, #1, #+0x3c (addr 0xffff91481af8)
0xffff91481ac0   160  ldp x1, x0, [jssp], #16
0xffff91481ac4   164  ldr x16, pc+1596 (addr 0x0000ffff91482100)    ;; external reference (store_buffer_top)
0xffff91481ac8   168  ldr x3, [x16]
0xffff91481acc   172  str x4, [x3], #8
0xffff91481ad0   176  str x3, [x16]
0xffff91481ad4   180  tst x3, #0x1ffff
0xffff91481ad8   184  b.eq #+0x8 (addr 0xffff91481ae0)
0xffff91481adc   188  ret
0xffff91481ae0   192  sub csp, jssp, #0x8 (8)
0xffff91481ae4   196  str lr, [jssp, #-8]!
0xffff91481ae8   200  ldr x17, pc+1568 (addr 0x0000ffff91482108)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91481aec   204  blr x17
0xffff91481af0   208  ldr lr, [jssp], #8
0xffff91481af4   212  ret
0xffff91481af8   216  ldr x3, [x4]
0xffff91481afc   220  sub csp, jssp, #0x10 (16)
0xffff91481b00   224  stp x6, x4, [jssp, #-16]!
0xffff91481b04   228  ubfx x16, x3, #8, #12
0xffff91481b08   232  and x0, x3, #0xfffffffffff00000
0xffff91481b0c   236  add x0, x0, x16, lsl #2
0xffff91481b10   240  ubfx x6, x3, #3, #5
0xffff91481b14   244  ldr x4, [x0, #360]
0xffff91481b18   248  lsr x4, x4, x6
0xffff91481b1c   252  tbz w4, #0, #+0x40 (addr 0xffff91481b5c)
0xffff91481b20   256  ldp x6, x4, [jssp], #16
0xffff91481b24   260  ldp x1, x0, [jssp], #16
0xffff91481b28   264  ldr x16, pc+1512 (addr 0x0000ffff91482110)    ;; external reference (store_buffer_top)
0xffff91481b2c   268  ldr x3, [x16]
0xffff91481b30   272  str x4, [x3], #8
0xffff91481b34   276  str x3, [x16]
0xffff91481b38   280  tst x3, #0x1ffff
0xffff91481b3c   284  b.eq #+0x8 (addr 0xffff91481b44)
0xffff91481b40   288  ret
0xffff91481b44   292  sub csp, jssp, #0x8 (8)
0xffff91481b48   296  str lr, [jssp, #-8]!
0xffff91481b4c   300  ldr x17, pc+1484 (addr 0x0000ffff91482118)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91481b50   304  blr x17
0xffff91481b54   308  ldr lr, [jssp], #8
0xffff91481b58   312  ret
0xffff91481b5c   316  ldp x6, x4, [jssp], #16
0xffff91481b60   320  sub csp, jssp, #0x78 (120)
0xffff91481b64   324  stp x14, x15, [jssp, #-32]!
0xffff91481b68   328  stp x18, lr, [jssp, #16]
0xffff91481b6c   332  stp x10, x11, [jssp, #-32]!
0xffff91481b70   336  stp x12, x13, [jssp, #16]
0xffff91481b74   340  stp x6, x7, [jssp, #-32]!
0xffff91481b78   344  stp x8, x9, [jssp, #16]
0xffff91481b7c   348  stp x2, x4, [jssp, #-24]!
0xffff91481b80   352  str x5, [jssp, #16]
0xffff91481b84   356  sub csp, jssp, #0xb0 (176)
0xffff91481b88   360  stp d26, d27, [jssp, #-32]!
0xffff91481b8c   364  stp d28, d29, [jssp, #16]
0xffff91481b90   368  stp d22, d23, [jssp, #-32]!
0xffff91481b94   372  stp d24, d25, [jssp, #16]
0xffff91481b98   376  stp d18, d19, [jssp, #-32]!
0xffff91481b9c   380  stp d20, d21, [jssp, #16]
0xffff91481ba0   384  stp d6, d7, [jssp, #-32]!
0xffff91481ba4   388  stp d16, d17, [jssp, #16]
0xffff91481ba8   392  stp d2, d3, [jssp, #-32]!
0xffff91481bac   396  stp d4, d5, [jssp, #16]
0xffff91481bb0   400  stp d0, d1, [jssp, #-16]!
0xffff91481bb4   404  mov x0, x6
0xffff91481bb8   408  mov x1, x4
0xffff91481bbc   412  ldr x2, pc+1380 (addr 0x0000ffff91482120)    ;; external reference (isolate)
0xffff91481bc0   416  ldr x16, pc+1384 (addr 0x0000ffff91482128)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91481bc4   420  and csp, jssp, #0xfffffffffffffff0
0xffff91481bc8   424  blr x16
0xffff91481bcc   428  ldp d2, d3, [jssp, #16]
0xffff91481bd0   432  ldp d0, d1, [jssp], #32
0xffff91481bd4   436  ldp d6, d7, [jssp, #16]
0xffff91481bd8   440  ldp d4, d5, [jssp], #32
0xffff91481bdc   444  ldp d18, d19, [jssp, #16]
0xffff91481be0   448  ldp d16, d17, [jssp], #32
0xffff91481be4   452  ldp d22, d23, [jssp, #16]
0xffff91481be8   456  ldp d20, d21, [jssp], #32
0xffff91481bec   460  ldp d26, d27, [jssp, #16]
0xffff91481bf0   464  ldp d24, d25, [jssp], #32
0xffff91481bf4   468  ldp d28, d29, [jssp], #16
0xffff91481bf8   472  ldp x5, x6, [jssp, #16]
0xffff91481bfc   476  ldp x2, x4, [jssp], #32
0xffff91481c00   480  ldp x9, x10, [jssp, #16]
0xffff91481c04   484  ldp x7, x8, [jssp], #32
0xffff91481c08   488  ldp x13, x14, [jssp, #16]
0xffff91481c0c   492  ldp x11, x12, [jssp], #32
0xffff91481c10   496  ldr lr, [jssp, #16]
0xffff91481c14   500  ldp x15, x18, [jssp], #24
0xffff91481c18   504  ldp x1, x0, [jssp], #16
0xffff91481c1c   508  ldr x16, pc+1300 (addr 0x0000ffff91482130)    ;; external reference (store_buffer_top)
0xffff91481c20   512  ldr x3, [x16]
0xffff91481c24   516  str x4, [x3], #8
0xffff91481c28   520  str x3, [x16]
0xffff91481c2c   524  tst x3, #0x1ffff
0xffff91481c30   528  b.eq #+0x8 (addr 0xffff91481c38)
0xffff91481c34   532  ret
0xffff91481c38   536  sub csp, jssp, #0x8 (8)
0xffff91481c3c   540  str lr, [jssp, #-8]!
0xffff91481c40   544  ldr x17, pc+1272 (addr 0x0000ffff91482138)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91481c44   548  blr x17
0xffff91481c48   552  ldr lr, [jssp], #8
0xffff91481c4c   556  ret
0xffff91481c50   560  and x3, x6, #0xfffffffffff00000
0xffff91481c54   564  ldr x0, [x3, #104]
0xffff91481c58   568  subs x0, x0, #0x1 (1)
0xffff91481c5c   572  str x0, [x3, #104]
0xffff91481c60   576  b.mi #+0x64 (addr 0xffff91481cc4)
0xffff91481c64   580  ubfx x16, x6, #8, #12
0xffff91481c68   584  and x3, x6, #0xfffffffffff00000
0xffff91481c6c   588  add x3, x3, x16, lsl #2
0xffff91481c70   592  ubfx x0, x6, #3, #5
0xffff91481c74   596  ldr x3, [x3, #360]
0xffff91481c78   600  lsr x3, x3, x0
0xffff91481c7c   604  tbz w3, #0, #+0x8 (addr 0xffff91481c84)
0xffff91481c80   608  tbnz w3, #1, #+0xc (addr 0xffff91481c8c)
0xffff91481c84   612  ldp x1, x0, [jssp], #16
0xffff91481c88   616  ret
0xffff91481c8c   620  ldr x3, [x4]
0xffff91481c90   624  sub csp, jssp, #0x10 (16)
0xffff91481c94   628  stp x6, x4, [jssp, #-16]!
0xffff91481c98   632  ubfx x16, x3, #8, #12
0xffff91481c9c   636  and x0, x3, #0xfffffffffff00000
0xffff91481ca0   640  add x0, x0, x16, lsl #2
0xffff91481ca4   644  ubfx x6, x3, #3, #5
0xffff91481ca8   648  ldr x4, [x0, #360]
0xffff91481cac   652  lsr x4, x4, x6
0xffff91481cb0   656  tbz w4, #0, #+0x10 (addr 0xffff91481cc0)
0xffff91481cb4   660  ldp x6, x4, [jssp], #16
0xffff91481cb8   664  ldp x1, x0, [jssp], #16
0xffff91481cbc   668  ret
0xffff91481cc0   672  ldp x6, x4, [jssp], #16
0xffff91481cc4   676  sub csp, jssp, #0x78 (120)
0xffff91481cc8   680  stp x14, x15, [jssp, #-32]!
0xffff91481ccc   684  stp x18, lr, [jssp, #16]
0xffff91481cd0   688  stp x10, x11, [jssp, #-32]!
0xffff91481cd4   692  stp x12, x13, [jssp, #16]
0xffff91481cd8   696  stp x6, x7, [jssp, #-32]!
0xffff91481cdc   700  stp x8, x9, [jssp, #16]
0xffff91481ce0   704  stp x2, x4, [jssp, #-24]!
0xffff91481ce4   708  str x5, [jssp, #16]
0xffff91481ce8   712  sub csp, jssp, #0xb0 (176)
0xffff91481cec   716  stp d26, d27, [jssp, #-32]!
0xffff91481cf0   720  stp d28, d29, [jssp, #16]
0xffff91481cf4   724  stp d22, d23, [jssp, #-32]!
0xffff91481cf8   728  stp d24, d25, [jssp, #16]
0xffff91481cfc   732  stp d18, d19, [jssp, #-32]!
0xffff91481d00   736  stp d20, d21, [jssp, #16]
0xffff91481d04   740  stp d6, d7, [jssp, #-32]!
0xffff91481d08   744  stp d16, d17, [jssp, #16]
0xffff91481d0c   748  stp d2, d3, [jssp, #-32]!
0xffff91481d10   752  stp d4, d5, [jssp, #16]
0xffff91481d14   756  stp d0, d1, [jssp, #-16]!
0xffff91481d18   760  mov x0, x6
0xffff91481d1c   764  mov x1, x4
0xffff91481d20   768  ldr x2, pc+1056 (addr 0x0000ffff91482140)    ;; external reference (isolate)
0xffff91481d24   772  ldr x16, pc+1060 (addr 0x0000ffff91482148)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91481d28   776  and csp, jssp, #0xfffffffffffffff0
0xffff91481d2c   780  blr x16
0xffff91481d30   784  ldp d2, d3, [jssp, #16]
0xffff91481d34   788  ldp d0, d1, [jssp], #32
0xffff91481d38   792  ldp d6, d7, [jssp, #16]
0xffff91481d3c   796  ldp d4, d5, [jssp], #32
0xffff91481d40   800  ldp d18, d19, [jssp, #16]
0xffff91481d44   804  ldp d16, d17, [jssp], #32
0xffff91481d48   808  ldp d22, d23, [jssp, #16]
0xffff91481d4c   812  ldp d20, d21, [jssp], #32
0xffff91481d50   816  ldp d26, d27, [jssp, #16]
0xffff91481d54   820  ldp d24, d25, [jssp], #32
0xffff91481d58   824  ldp d28, d29, [jssp], #16
0xffff91481d5c   828  ldp x5, x6, [jssp, #16]
0xffff91481d60   832  ldp x2, x4, [jssp], #32
0xffff91481d64   836  ldp x9, x10, [jssp, #16]
0xffff91481d68   840  ldp x7, x8, [jssp], #32
0xffff91481d6c   844  ldp x13, x14, [jssp, #16]
0xffff91481d70   848  ldp x11, x12, [jssp], #32
0xffff91481d74   852  ldr lr, [jssp, #16]
0xffff91481d78   856  ldp x15, x18, [jssp], #24
0xffff91481d7c   860  ldp x1, x0, [jssp], #16
0xffff91481d80   864  ret
0xffff91481d84   868  sub csp, jssp, #0x10 (16)
0xffff91481d88   872  stp x1, x0, [jssp, #-16]!
0xffff91481d8c   876  ldr x3, [x4]
0xffff91481d90   880  and x16, x3, #0xfffffffffff00000
0xffff91481d94   884  ldr x16, [x16, #8]
0xffff91481d98   888  tst x16, #0x18
0xffff91481d9c   892  b.eq #+0x1f8 (addr 0xffff91481f94)
0xffff91481da0   896  and x16, x6, #0xfffffffffff00000
0xffff91481da4   900  ldr x16, [x16, #8]
0xffff91481da8   904  tst x16, #0x18
0xffff91481dac   908  b.ne #+0x1e8 (addr 0xffff91481f94)
0xffff91481db0   912  and x3, x6, #0xfffffffffff00000
0xffff91481db4   916  ldr x0, [x3, #104]
0xffff91481db8   920  subs x0, x0, #0x1 (1)
0xffff91481dbc   924  str x0, [x3, #104]
0xffff91481dc0   928  b.mi #+0xe4 (addr 0xffff91481ea4)
0xffff91481dc4   932  ubfx x16, x6, #8, #12
0xffff91481dc8   936  and x3, x6, #0xfffffffffff00000
0xffff91481dcc   940  add x3, x3, x16, lsl #2
0xffff91481dd0   944  ubfx x0, x6, #3, #5
0xffff91481dd4   948  ldr x3, [x3, #360]
0xffff91481dd8   952  lsr x3, x3, x0
0xffff91481ddc   956  tbz w3, #0, #+0x8 (addr 0xffff91481de4)
0xffff91481de0   960  tbnz w3, #1, #+0x3c (addr 0xffff91481e1c)
0xffff91481de4   964  ldp x1, x0, [jssp], #16
0xffff91481de8   968  ldr x16, pc+872 (addr 0x0000ffff91482150)    ;; external reference (store_buffer_top)
0xffff91481dec   972  ldr x3, [x16]
0xffff91481df0   976  str x4, [x3], #8
0xffff91481df4   980  str x3, [x16]
0xffff91481df8   984  tst x3, #0x1ffff
0xffff91481dfc   988  b.eq #+0x8 (addr 0xffff91481e04)
0xffff91481e00   992  ret
0xffff91481e04   996  sub csp, jssp, #0x8 (8)
0xffff91481e08  1000  str lr, [jssp, #-8]!
0xffff91481e0c  1004  ldr x17, pc+844 (addr 0x0000ffff91482158)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91481e10  1008  blr x17
0xffff91481e14  1012  ldr lr, [jssp], #8
0xffff91481e18  1016  ret
0xffff91481e1c  1020  ldr x3, [x4]
0xffff91481e20  1024  and x0, x3, #0xfffffffffff00000
0xffff91481e24  1028  ldr x0, [x0, #8]
0xffff91481e28  1032  tbz w0, #6, #+0x18 (addr 0xffff91481e40)
0xffff91481e2c  1036  and x0, x6, #0xfffffffffff00000
0xffff91481e30  1040  ldr x0, [x0, #8]
0xffff91481e34  1044  movz x16, #0x58
0xffff91481e38  1048  tst x0, x16
0xffff91481e3c  1052  b.eq #+0x68 (addr 0xffff91481ea4)
0xffff91481e40  1056  sub csp, jssp, #0x10 (16)
0xffff91481e44  1060  stp x6, x4, [jssp, #-16]!
0xffff91481e48  1064  ubfx x16, x3, #8, #12
0xffff91481e4c  1068  and x0, x3, #0xfffffffffff00000
0xffff91481e50  1072  add x0, x0, x16, lsl #2
0xffff91481e54  1076  ubfx x6, x3, #3, #5
0xffff91481e58  1080  ldr x4, [x0, #360]
0xffff91481e5c  1084  lsr x4, x4, x6
0xffff91481e60  1088  tbz w4, #0, #+0x40 (addr 0xffff91481ea0)
0xffff91481e64  1092  ldp x6, x4, [jssp], #16
0xffff91481e68  1096  ldp x1, x0, [jssp], #16
0xffff91481e6c  1100  ldr x16, pc+756 (addr 0x0000ffff91482160)    ;; external reference (store_buffer_top)
0xffff91481e70  1104  ldr x3, [x16]
0xffff91481e74  1108  str x4, [x3], #8
0xffff91481e78  1112  str x3, [x16]
0xffff91481e7c  1116  tst x3, #0x1ffff
0xffff91481e80  1120  b.eq #+0x8 (addr 0xffff91481e88)
0xffff91481e84  1124  ret
0xffff91481e88  1128  sub csp, jssp, #0x8 (8)
0xffff91481e8c  1132  str lr, [jssp, #-8]!
0xffff91481e90  1136  ldr x17, pc+728 (addr 0x0000ffff91482168)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91481e94  1140  blr x17
0xffff91481e98  1144  ldr lr, [jssp], #8
0xffff91481e9c  1148  ret
0xffff91481ea0  1152  ldp x6, x4, [jssp], #16
0xffff91481ea4  1156  sub csp, jssp, #0x78 (120)
0xffff91481ea8  1160  stp x14, x15, [jssp, #-32]!
0xffff91481eac  1164  stp x18, lr, [jssp, #16]
0xffff91481eb0  1168  stp x10, x11, [jssp, #-32]!
0xffff91481eb4  1172  stp x12, x13, [jssp, #16]
0xffff91481eb8  1176  stp x6, x7, [jssp, #-32]!
0xffff91481ebc  1180  stp x8, x9, [jssp, #16]
0xffff91481ec0  1184  stp x2, x4, [jssp, #-24]!
0xffff91481ec4  1188  str x5, [jssp, #16]
0xffff91481ec8  1192  sub csp, jssp, #0xb0 (176)
0xffff91481ecc  1196  stp d26, d27, [jssp, #-32]!
0xffff91481ed0  1200  stp d28, d29, [jssp, #16]
0xffff91481ed4  1204  stp d22, d23, [jssp, #-32]!
0xffff91481ed8  1208  stp d24, d25, [jssp, #16]
0xffff91481edc  1212  stp d18, d19, [jssp, #-32]!
0xffff91481ee0  1216  stp d20, d21, [jssp, #16]
0xffff91481ee4  1220  stp d6, d7, [jssp, #-32]!
0xffff91481ee8  1224  stp d16, d17, [jssp, #16]
0xffff91481eec  1228  stp d2, d3, [jssp, #-32]!
0xffff91481ef0  1232  stp d4, d5, [jssp, #16]
0xffff91481ef4  1236  stp d0, d1, [jssp, #-16]!
0xffff91481ef8  1240  mov x0, x6
0xffff91481efc  1244  mov x1, x4
0xffff91481f00  1248  ldr x2, pc+624 (addr 0x0000ffff91482170)    ;; external reference (isolate)
0xffff91481f04  1252  ldr x16, pc+628 (addr 0x0000ffff91482178)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff91481f08  1256  and csp, jssp, #0xfffffffffffffff0
0xffff91481f0c  1260  blr x16
0xffff91481f10  1264  ldp d2, d3, [jssp, #16]
0xffff91481f14  1268  ldp d0, d1, [jssp], #32
0xffff91481f18  1272  ldp d6, d7, [jssp, #16]
0xffff91481f1c  1276  ldp d4, d5, [jssp], #32
0xffff91481f20  1280  ldp d18, d19, [jssp, #16]
0xffff91481f24  1284  ldp d16, d17, [jssp], #32
0xffff91481f28  1288  ldp d22, d23, [jssp, #16]
0xffff91481f2c  1292  ldp d20, d21, [jssp], #32
0xffff91481f30  1296  ldp d26, d27, [jssp, #16]
0xffff91481f34  1300  ldp d24, d25, [jssp], #32
0xffff91481f38  1304  ldp d28, d29, [jssp], #16
0xffff91481f3c  1308  ldp x5, x6, [jssp, #16]
0xffff91481f40  1312  ldp x2, x4, [jssp], #32
0xffff91481f44  1316  ldp x9, x10, [jssp, #16]
0xffff91481f48  1320  ldp x7, x8, [jssp], #32
0xffff91481f4c  1324  ldp x13, x14, [jssp, #16]
0xffff91481f50  1328  ldp x11, x12, [jssp], #32
0xffff91481f54  1332  ldr lr, [jssp, #16]
0xffff91481f58  1336  ldp x15, x18, [jssp], #24
0xffff91481f5c  1340  ldp x1, x0, [jssp], #16
0xffff91481f60  1344  ldr x16, pc+544 (addr 0x0000ffff91482180)    ;; external reference (store_buffer_top)
0xffff91481f64  1348  ldr x3, [x16]
0xffff91481f68  1352  str x4, [x3], #8
0xffff91481f6c  1356  str x3, [x16]
0xffff91481f70  1360  tst x3, #0x1ffff
0xffff91481f74  1364  b.eq #+0x8 (addr 0xffff91481f7c)
0xffff91481f78  1368  ret
0xffff91481f7c  1372  sub csp, jssp, #0x8 (8)
0xffff91481f80  1376  str lr, [jssp, #-8]!
0xffff91481f84  1380  ldr x17, pc+516 (addr 0x0000ffff91482188)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff91481f88  1384  blr x17
0xffff91481f8c  1388  ldr lr, [jssp], #8
0xffff91481f90  1392  ret
0xffff91481f94  1396  and x3, x6, #0xfffffffffff00000
0xffff91481f98  1400  ldr x0, [x3, #104]
0xffff91481f9c  1404  subs x0, x0, #0x1 (1)
0xffff91481fa0  1408  str x0, [x3, #104]
0xffff91481fa4  1412  b.mi #+0x84 (addr 0xffff91482028)
0xffff91481fa8  1416  ubfx x16, x6, #8, #12
0xffff91481fac  1420  and x3, x6, #0xfffffffffff00000
0xffff91481fb0  1424  add x3, x3, x16, lsl #2
0xffff91481fb4  1428  ubfx x0, x6, #3, #5
0xffff91481fb8  1432  ldr x3, [x3, #360]
0xffff91481fbc  1436  lsr x3, x3, x0
0xffff91481fc0  1440  tbz w3, #0, #+0x8 (addr 0xffff91481fc8)
0xffff91481fc4  1444  tbnz w3, #1, #+0xc (addr 0xffff91481fd0)
0xffff91481fc8  1448  ldp x1, x0, [jssp], #16
0xffff91481fcc  1452  ret
0xffff91481fd0  1456  ldr x3, [x4]
0xffff91481fd4  1460  and x0, x3, #0xfffffffffff00000
0xffff91481fd8  1464  ldr x0, [x0, #8]
0xffff91481fdc  1468  tbz w0, #6, #+0x18 (addr 0xffff91481ff4)
0xffff91481fe0  1472  and x0, x6, #0xfffffffffff00000
0xffff91481fe4  1476  ldr x0, [x0, #8]
0xffff91481fe8  1480  movz x16, #0x58
0xffff91481fec  1484  tst x0, x16
0xffff91481ff0  1488  b.eq #+0x38 (addr 0xffff91482028)
0xffff91481ff4  1492  sub csp, jssp, #0x10 (16)
0xffff91481ff8  1496  stp x6, x4, [jssp, #-16]!
0xffff91481ffc  1500  ubfx x16, x3, #8, #12
0xffff91482000  1504  and x0, x3, #0xfffffffffff00000
0xffff91482004  1508  add x0, x0, x16, lsl #2
0xffff91482008  1512  ubfx x6, x3, #3, #5
0xffff9148200c  1516  ldr x4, [x0, #360]
0xffff91482010  1520  lsr x4, x4, x6
0xffff91482014  1524  tbz w4, #0, #+0x10 (addr 0xffff91482024)
0xffff91482018  1528  ldp x6, x4, [jssp], #16
0xffff9148201c  1532  ldp x1, x0, [jssp], #16
0xffff91482020  1536  ret
0xffff91482024  1540  ldp x6, x4, [jssp], #16
0xffff91482028  1544  sub csp, jssp, #0x78 (120)
0xffff9148202c  1548  stp x14, x15, [jssp, #-32]!
0xffff91482030  1552  stp x18, lr, [jssp, #16]
0xffff91482034  1556  stp x10, x11, [jssp, #-32]!
0xffff91482038  1560  stp x12, x13, [jssp, #16]
0xffff9148203c  1564  stp x6, x7, [jssp, #-32]!
0xffff91482040  1568  stp x8, x9, [jssp, #16]
0xffff91482044  1572  stp x2, x4, [jssp, #-24]!
0xffff91482048  1576  str x5, [jssp, #16]
0xffff9148204c  1580  sub csp, jssp, #0xb0 (176)
0xffff91482050  1584  stp d26, d27, [jssp, #-32]!
0xffff91482054  1588  stp d28, d29, [jssp, #16]
0xffff91482058  1592  stp d22, d23, [jssp, #-32]!
0xffff9148205c  1596  stp d24, d25, [jssp, #16]
0xffff91482060  1600  stp d18, d19, [jssp, #-32]!
0xffff91482064  1604  stp d20, d21, [jssp, #16]
0xffff91482068  1608  stp d6, d7, [jssp, #-32]!
0xffff9148206c  1612  stp d16, d17, [jssp, #16]
0xffff91482070  1616  stp d2, d3, [jssp, #-32]!
0xffff91482074  1620  stp d4, d5, [jssp, #16]
0xffff91482078  1624  stp d0, d1, [jssp, #-16]!
0xffff9148207c  1628  mov x0, x6
0xffff91482080  1632  mov x1, x4
0xffff91482084  1636  ldr x2, pc+268 (addr 0x0000ffff91482190)    ;; external reference (isolate)
0xffff91482088  1640  ldr x16, pc+272 (addr 0x0000ffff91482198)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff9148208c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff91482090  1648  blr x16
0xffff91482094  1652  ldp d2, d3, [jssp, #16]
0xffff91482098  1656  ldp d0, d1, [jssp], #32
0xffff9148209c  1660  ldp d6, d7, [jssp, #16]
0xffff914820a0  1664  ldp d4, d5, [jssp], #32
0xffff914820a4  1668  ldp d18, d19, [jssp, #16]
0xffff914820a8  1672  ldp d16, d17, [jssp], #32
0xffff914820ac  1676  ldp d22, d23, [jssp, #16]
0xffff914820b0  1680  ldp d20, d21, [jssp], #32
0xffff914820b4  1684  ldp d26, d27, [jssp, #16]
0xffff914820b8  1688  ldp d24, d25, [jssp], #32
0xffff914820bc  1692  ldp d28, d29, [jssp], #16
0xffff914820c0  1696  ldp x5, x6, [jssp, #16]
0xffff914820c4  1700  ldp x2, x4, [jssp], #32
0xffff914820c8  1704  ldp x9, x10, [jssp, #16]
0xffff914820cc  1708  ldp x7, x8, [jssp], #32
0xffff914820d0  1712  ldp x13, x14, [jssp, #16]
0xffff914820d4  1716  ldp x11, x12, [jssp], #32
0xffff914820d8  1720  ldr lr, [jssp, #16]
0xffff914820dc  1724  ldp x15, x18, [jssp], #24
0xffff914820e0  1728  ldp x1, x0, [jssp], #16
0xffff914820e4  1732  ret
0xffff914820e8  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff914820ec  1740  d63f03e0       constant
0xffff914820f0  1744  4117f8c0       constant
0xffff914820f4  1748  00000000       constant
0xffff914820f8  1752  914065a0       constant
0xffff914820fc  1756  0000ffff       constant
0xffff91482100  1760  4117f8c0       constant
0xffff91482104  1764  00000000       constant
0xffff91482108  1768  914065a0       constant
0xffff9148210c  1772  0000ffff       constant
0xffff91482110  1776  4117f8c0       constant
0xffff91482114  1780  00000000       constant
0xffff91482118  1784  914065a0       constant
0xffff9148211c  1788  0000ffff       constant
0xffff91482120  1792  4117e2d0       constant
0xffff91482124  1796  00000000       constant
0xffff91482128  1800  00c2d958       constant
0xffff9148212c  1804  00000000       constant
0xffff91482130  1808  4117f8c0       constant
0xffff91482134  1812  00000000       constant
0xffff91482138  1816  914065a0       constant
0xffff9148213c  1820  0000ffff       constant
0xffff91482140  1824  4117e2d0       constant
0xffff91482144  1828  00000000       constant
0xffff91482148  1832  00c2d958       constant
0xffff9148214c  1836  00000000       constant
0xffff91482150  1840  4117f8c0       constant
0xffff91482154  1844  00000000       constant
0xffff91482158  1848  914065a0       constant
0xffff9148215c  1852  0000ffff       constant
0xffff91482160  1856  4117f8c0       constant
0xffff91482164  1860  00000000       constant
0xffff91482168  1864  914065a0       constant
0xffff9148216c  1868  0000ffff       constant
0xffff91482170  1872  4117e2d0       constant
0xffff91482174  1876  00000000       constant
0xffff91482178  1880  00c2d958       constant
0xffff9148217c  1884  00000000       constant
0xffff91482180  1888  4117f8c0       constant
0xffff91482184  1892  00000000       constant
0xffff91482188  1896  914065a0       constant
0xffff9148218c  1900  0000ffff       constant
0xffff91482190  1904  4117e2d0       constant
0xffff91482194  1908  00000000       constant
0xffff91482198  1912  00c2d958       constant
0xffff9148219c  1916  00000000       constant


RelocInfo (size = 65)
0xffff91481a28  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91481a4c  code target (STUB)  (0xffff914065a0)
0xffff91481ac4  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91481ae8  code target (STUB)  (0xffff914065a0)
0xffff91481b28  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91481b4c  code target (STUB)  (0xffff914065a0)
0xffff91481bbc  external reference (isolate)  (0x4117e2d0)
0xffff91481bc0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91481c1c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91481c40  code target (STUB)  (0xffff914065a0)
0xffff91481d20  external reference (isolate)  (0x4117e2d0)
0xffff91481d24  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91481de8  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91481e0c  code target (STUB)  (0xffff914065a0)
0xffff91481e6c  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91481e90  code target (STUB)  (0xffff914065a0)
0xffff91481f00  external reference (isolate)  (0x4117e2d0)
0xffff91481f04  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff91481f60  external reference (store_buffer_top)  (0x4117f8c0)
0xffff91481f84  code target (STUB)  (0xffff914065a0)
0xffff91482084  external reference (isolate)  (0x4117e2d0)
0xffff91482088  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff914820e8  constant pool (size 184)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = RegExpConstructResultStub
compiler = crankshaft
Instructions (size = 826)
0xffff91482200     0  tbnz w2, #0, #+0x100 (addr 0xffff91482300)
0xffff91482204     4  asr x4, x2, #32
0xffff91482208     8  movz w16, #0x257f
0xffff9148220c    12  cmp w4, w16, lsl #3
0xffff91482210    16  b.hs #+0x2a8 (addr 0xffff914824b8)
0xffff91482214    20  lsl w3, w4, #3
0xffff91482218    24  add w3, w3, #0x10 (16)
0xffff9148221c    28  movz x5, #0xf2c0
0xffff91482220    32  movk x5, #0x4117, lsl #16
0xffff91482224    36  ldp x6, x4, [x5]
0xffff91482228    40  adds x16, x6, #0x30 (48)
0xffff9148222c    44  ccmp x16, x4, #nzCv, lo
0xffff91482230    48  b.hi #+0x118 (addr 0xffff91482348)
0xffff91482234    52  str x16, [x5]
0xffff91482238    56  orr x6, x6, #0x1
0xffff9148223c    60  ldur x4, [cp, #39]
0xffff91482240    64  movz x16, #0x257
0xffff91482244    68  ldr x4, [x4, x16]
0xffff91482248    72  stur x4, [x6, #-1]
0xffff9148224c    76  ldr x4, pc+532 (addr 0x0000ffff91482460)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91482250    80  stur x4, [x6, #7]
0xffff91482254    84  ldr x4, pc+532 (addr 0x0000ffff91482468)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91482258    88  stur x4, [x6, #15]
0xffff9148225c    92  stur x2, [x6, #23]
0xffff91482260    96  stur x1, [x6, #31]
0xffff91482264   100  stur x0, [x6, #39]
0xffff91482268   104  sxtw x3, w3
0xffff9148226c   108  movz x4, #0xf2c0
0xffff91482270   112  movk x4, #0x4117, lsl #16
0xffff91482274   116  ldp x7, x16, [x4]
0xffff91482278   120  adds x5, x7, x3
0xffff9148227c   124  ccmp x5, x16, #nzCv, lo
0xffff91482280   128  b.hi #+0x12c (addr 0xffff914823ac)
0xffff91482284   132  str x5, [x4]
0xffff91482288   136  orr x7, x7, #0x1
0xffff9148228c   140  ldr x3, pc+484 (addr 0x0000ffff91482470)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91482290   144  stur x3, [x7, #-1]
0xffff91482294   148  mov x3, x2
0xffff91482298   152  tbnz w3, #0, #+0x230 (addr 0xffff914824c8)
0xffff9148229c   156  stur x3, [x7, #7]
0xffff914822a0   160  mov x3, x7
0xffff914822a4   164  stur x3, [x6, #15]
0xffff914822a8   168  add x4, x6, #0xf (15)
0xffff914822ac   172  and x3, x6, #0xfffffffffff00000
0xffff914822b0   176  ldr x3, [x3, #8]
0xffff914822b4   180  tbz w3, #2, #+0x18 (addr 0xffff914822cc)
0xffff914822b8   184  sub csp, jssp, #0x8 (8)
0xffff914822bc   188  str lr, [jssp, #-8]!
0xffff914822c0   192  ldr x16, pc+440 (addr 0x0000ffff91482478)    ;; code: STUB, RecordWriteStub, minor: 69734
0xffff914822c4   196  blr x16
0xffff914822c8   200  ldr lr, [jssp], #8
0xffff914822cc   204  mov x3, x2
0xffff914822d0   208  tbnz w3, #0, #+0x140 (addr 0xffff91482410)
0xffff914822d4   212  asr x5, x3, #32
0xffff914822d8   216  cmp w5, #0x0 (0)
0xffff914822dc   220  b.le #+0x1c (addr 0xffff914822f8)
0xffff914822e0   224  sub w3, w5, #0x1 (1)
0xffff914822e4   228  ldr x4, pc+412 (addr 0x0000ffff91482480)    ;; object: 0x49b04241 <undefined>
0xffff914822e8   232  add x5, x7, #0xf (15)
0xffff914822ec   236  str x4, [x5, w3, sxtw #3]
0xffff914822f0   240  lsl x3, x3, #32
0xffff914822f4   244  b #-0x24 (addr 0xffff914822d0)
0xffff914822f8   248  mov x0, x6
0xffff914822fc   252  ret
0xffff91482300   256  sub csp, jssp, #0x10 (16)
0xffff91482304   260  stp fp, lr, [jssp, #-16]!
0xffff91482308   264  movz fp, #0xa00000000
0xffff9148230c   268  sub csp, jssp, #0x8 (8)
0xffff91482310   272  str fp, [jssp, #-8]!
0xffff91482314   276  add fp, jssp, #0x8 (8)
0xffff91482318   280  ldur x16, [x2, #-1]
0xffff9148231c   284  ldr x17, [x26, #120]
0xffff91482320   288  cmp x16, x17
0xffff91482324   292  b.ne #+0x1b4 (addr 0xffff914824d8)
0xffff91482328   296  ldur d29, [x2, #7]
0xffff9148232c   300  fcvtzs w4, d29
0xffff91482330   304  scvtf d0, w4
0xffff91482334   308  fcmp d29, d0
0xffff91482338   312  b.ne #+0x1a0 (addr 0xffff914824d8)
0xffff9148233c   316  ldr lr, [jssp, #16]
0xffff91482340   320  ldp xzr, fp, [jssp], #24
0xffff91482344   324  b #-0x13c (addr 0xffff91482208)
0xffff91482348   328  sub csp, jssp, #0x10 (16)
0xffff9148234c   332  stp fp, lr, [jssp, #-16]!
0xffff91482350   336  movz fp, #0xa00000000
0xffff91482354   340  sub csp, jssp, #0x8 (8)
0xffff91482358   344  str fp, [jssp, #-8]!
0xffff9148235c   348  add fp, jssp, #0x8 (8)
0xffff91482360   352  movz x6, #0x0
0xffff91482364   356  mov x16, lr
0xffff91482368   360  ldr x17, pc+288 (addr 0x0000ffff91482488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9148236c   364  blr x17
0xffff91482370   368  movz x0, #0x3000000000
0xffff91482374   372  movz x10, #0x0
0xffff91482378   376  sub csp, jssp, #0x10 (16)
0xffff9148237c   380  stp x10, x0, [jssp, #-16]!
0xffff91482380   384  movz x0, #0x2
0xffff91482384   388  movz x1, #0x5b88
0xffff91482388   392  movk x1, #0xe2, lsl #16
0xffff9148238c   396  ldr x16, pc+260 (addr 0x0000ffff91482490)    ;; code: STUB, CEntryStub, minor: 5
0xffff91482390   400  blr x16
0xffff91482394   404  str x0, [jssp, #48]
0xffff91482398   408  ldr x16, pc+256 (addr 0x0000ffff91482498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9148239c   412  blr x16
0xffff914823a0   416  ldr lr, [jssp, #16]
0xffff914823a4   420  ldp xzr, fp, [jssp], #24
0xffff914823a8   424  b #-0x16c (addr 0xffff9148223c)
0xffff914823ac   428  sub csp, jssp, #0x10 (16)
0xffff914823b0   432  stp fp, lr, [jssp, #-16]!
0xffff914823b4   436  movz fp, #0xa00000000
0xffff914823b8   440  sub csp, jssp, #0x8 (8)
0xffff914823bc   444  str fp, [jssp, #-8]!
0xffff914823c0   448  add fp, jssp, #0x8 (8)
0xffff914823c4   452  movz x7, #0x0
0xffff914823c8   456  mov x16, lr
0xffff914823cc   460  ldr x17, pc+212 (addr 0x0000ffff914824a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914823d0   464  blr x17
0xffff914823d4   468  lsl x0, x3, #32
0xffff914823d8   472  movz x10, #0x0
0xffff914823dc   476  sub csp, jssp, #0x10 (16)
0xffff914823e0   480  stp x10, x0, [jssp, #-16]!
0xffff914823e4   484  movz x0, #0x2
0xffff914823e8   488  movz x1, #0x5b88
0xffff914823ec   492  movk x1, #0xe2, lsl #16
0xffff914823f0   496  ldr x16, pc+184 (addr 0x0000ffff914824a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff914823f4   500  blr x16
0xffff914823f8   504  str x0, [jssp, #56]
0xffff914823fc   508  ldr x16, pc+180 (addr 0x0000ffff914824b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91482400   512  blr x16
0xffff91482404   516  ldr lr, [jssp, #16]
0xffff91482408   520  ldp xzr, fp, [jssp], #24
0xffff9148240c   524  b #-0x180 (addr 0xffff9148228c)
0xffff91482410   528  sub csp, jssp, #0x10 (16)
0xffff91482414   532  stp fp, lr, [jssp, #-16]!
0xffff91482418   536  movz fp, #0xa00000000
0xffff9148241c   540  sub csp, jssp, #0x8 (8)
0xffff91482420   544  str fp, [jssp, #-8]!
0xffff91482424   548  add fp, jssp, #0x8 (8)
0xffff91482428   552  ldur x16, [x3, #-1]
0xffff9148242c   556  ldr x17, [x26, #120]
0xffff91482430   560  cmp x16, x17
0xffff91482434   564  b.ne #+0xac (addr 0xffff914824e0)
0xffff91482438   568  ldur d29, [x3, #7]
0xffff9148243c   572  fcvtzs w5, d29
0xffff91482440   576  scvtf d0, w5
0xffff91482444   580  fcmp d29, d0
0xffff91482448   584  b.ne #+0x98 (addr 0xffff914824e0)
0xffff9148244c   588  ldr lr, [jssp, #16]
0xffff91482450   592  ldp xzr, fp, [jssp], #24
0xffff91482454   596  b #-0x17c (addr 0xffff914822d8)
0xffff91482458   600  580002ff       constant pool begin (num_const = 23)    ;; constant pool
0xffff9148245c   604  d63f03e0       constant
0xffff91482460   608  49b04201       constant
0xffff91482464   612  00000000       constant
0xffff91482468   616  49b04201       constant
0xffff9148246c   620  00000000       constant
0xffff91482470   624  36404259       constant
0xffff91482474   628  00000000       constant
0xffff91482478   632  91481a20       constant
0xffff9148247c   636  0000ffff       constant
0xffff91482480   640  49b04241       constant
0xffff91482484   644  00000000       constant
0xffff91482488   648  91406820       constant
0xffff9148248c   652  0000ffff       constant
0xffff91482490   656  91406260       constant
0xffff91482494   660  0000ffff       constant
0xffff91482498   664  914068e0       constant
0xffff9148249c   668  0000ffff       constant
0xffff914824a0   672  91406820       constant
0xffff914824a4   676  0000ffff       constant
0xffff914824a8   680  91406260       constant
0xffff914824ac   684  0000ffff       constant
0xffff914824b0   688  914068e0       constant
0xffff914824b4   692  0000ffff       constant
0xffff914824b8   696  movz x16, #0x0
0xffff914824bc   700  sub csp, jssp, #0x10 (16)
0xffff914824c0   704  stp fp, lr, [jssp, #-16]!
0xffff914824c4   708  bl #+0x24 (addr 0xffff914824e8)
0xffff914824c8   712  movz x16, #0x8
0xffff914824cc   716  sub csp, jssp, #0x10 (16)
0xffff914824d0   720  stp fp, lr, [jssp, #-16]!
0xffff914824d4   724  bl #+0x14 (addr 0xffff914824e8)
0xffff914824d8   728  movz x16, #0x10
0xffff914824dc   732  bl #+0x1c (addr 0xffff914824f8)
0xffff914824e0   736  movz x16, #0x18
0xffff914824e4   740  bl #+0x14 (addr 0xffff914824f8)
0xffff914824e8   744  movz x17, #0xa00000000
0xffff914824ec   748  sub csp, jssp, #0x10 (16)
0xffff914824f0   752  stp x17, cp, [jssp, #-16]!
0xffff914824f4   756  add fp, jssp, #0x10 (16)
0xffff914824f8   760  ldr x17, pc+24 (addr 0x0000ffff91482510)    ;; lazy deoptimization bailout 0
0xffff914824fc   764  add x17, x17, x16
0xffff91482500   768  br x17
0xffff91482504   772  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91482508   776  d63f03e0       constant
0xffff9148250c   780  d503201f       constant
0xffff91482510   784  91206000       constant
0xffff91482514   788  0000ffff       constant


Safepoints (size = 34)
0xffff91482394   404  000 | x0 | x1 | x2 | x6 | x27 (sp -> fp)  <none> argc: 2
0xffff914823f8   504  000 | x0 | x1 | x2 | x6 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 33)
0xffff9148224c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91482254  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9148228c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914822c0  code target (STUB)  (0xffff91481a20)
0xffff914822e4  embedded object  (0x49b04241 <undefined>)
0xffff91482368  code target (STUB)  (0xffff91406820)
0xffff9148238c  code target (STUB)  (0xffff91406260)
0xffff91482398  code target (STUB)  (0xffff914068e0)
0xffff914823cc  code target (STUB)  (0xffff91406820)
0xffff914823f0  code target (STUB)  (0xffff91406260)
0xffff914823fc  code target (STUB)  (0xffff914068e0)
0xffff91482458  constant pool (size 96)
0xffff914824f8  runtime entry
0xffff91482504  constant pool (size 20)

--- End code ---
kind = STUB
major_key = RegExpConstructResultStub
name = RegExpConstructResultStub
compiler = crankshaft
Instructions (size = 826)
0xffff91482200     0  tbnz w2, #0, #+0x100 (addr 0xffff91482300)
0xffff91482204     4  asr x4, x2, #32
0xffff91482208     8  movz w16, #0x257f
0xffff9148220c    12  cmp w4, w16, lsl #3
0xffff91482210    16  b.hs #+0x2a8 (addr 0xffff914824b8)
0xffff91482214    20  lsl w3, w4, #3
0xffff91482218    24  add w3, w3, #0x10 (16)
0xffff9148221c    28  movz x5, #0xf2c0
0xffff91482220    32  movk x5, #0x4117, lsl #16
0xffff91482224    36  ldp x6, x4, [x5]
0xffff91482228    40  adds x16, x6, #0x30 (48)
0xffff9148222c    44  ccmp x16, x4, #nzCv, lo
0xffff91482230    48  b.hi #+0x118 (addr 0xffff91482348)
0xffff91482234    52  str x16, [x5]
0xffff91482238    56  orr x6, x6, #0x1
0xffff9148223c    60  ldur x4, [cp, #39]
0xffff91482240    64  movz x16, #0x257
0xffff91482244    68  ldr x4, [x4, x16]
0xffff91482248    72  stur x4, [x6, #-1]
0xffff9148224c    76  ldr x4, pc+532 (addr 0x0000ffff91482460)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91482250    80  stur x4, [x6, #7]
0xffff91482254    84  ldr x4, pc+532 (addr 0x0000ffff91482468)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff91482258    88  stur x4, [x6, #15]
0xffff9148225c    92  stur x2, [x6, #23]
0xffff91482260    96  stur x1, [x6, #31]
0xffff91482264   100  stur x0, [x6, #39]
0xffff91482268   104  sxtw x3, w3
0xffff9148226c   108  movz x4, #0xf2c0
0xffff91482270   112  movk x4, #0x4117, lsl #16
0xffff91482274   116  ldp x7, x16, [x4]
0xffff91482278   120  adds x5, x7, x3
0xffff9148227c   124  ccmp x5, x16, #nzCv, lo
0xffff91482280   128  b.hi #+0x12c (addr 0xffff914823ac)
0xffff91482284   132  str x5, [x4]
0xffff91482288   136  orr x7, x7, #0x1
0xffff9148228c   140  ldr x3, pc+484 (addr 0x0000ffff91482470)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff91482290   144  stur x3, [x7, #-1]
0xffff91482294   148  mov x3, x2
0xffff91482298   152  tbnz w3, #0, #+0x230 (addr 0xffff914824c8)
0xffff9148229c   156  stur x3, [x7, #7]
0xffff914822a0   160  mov x3, x7
0xffff914822a4   164  stur x3, [x6, #15]
0xffff914822a8   168  add x4, x6, #0xf (15)
0xffff914822ac   172  and x3, x6, #0xfffffffffff00000
0xffff914822b0   176  ldr x3, [x3, #8]
0xffff914822b4   180  tbz w3, #2, #+0x18 (addr 0xffff914822cc)
0xffff914822b8   184  sub csp, jssp, #0x8 (8)
0xffff914822bc   188  str lr, [jssp, #-8]!
0xffff914822c0   192  ldr x16, pc+440 (addr 0x0000ffff91482478)    ;; code: STUB, RecordWriteStub, minor: 69734
0xffff914822c4   196  blr x16
0xffff914822c8   200  ldr lr, [jssp], #8
0xffff914822cc   204  mov x3, x2
0xffff914822d0   208  tbnz w3, #0, #+0x140 (addr 0xffff91482410)
0xffff914822d4   212  asr x5, x3, #32
0xffff914822d8   216  cmp w5, #0x0 (0)
0xffff914822dc   220  b.le #+0x1c (addr 0xffff914822f8)
0xffff914822e0   224  sub w3, w5, #0x1 (1)
0xffff914822e4   228  ldr x4, pc+412 (addr 0x0000ffff91482480)    ;; object: 0x49b04241 <undefined>
0xffff914822e8   232  add x5, x7, #0xf (15)
0xffff914822ec   236  str x4, [x5, w3, sxtw #3]
0xffff914822f0   240  lsl x3, x3, #32
0xffff914822f4   244  b #-0x24 (addr 0xffff914822d0)
0xffff914822f8   248  mov x0, x6
0xffff914822fc   252  ret
0xffff91482300   256  sub csp, jssp, #0x10 (16)
0xffff91482304   260  stp fp, lr, [jssp, #-16]!
0xffff91482308   264  movz fp, #0xa00000000
0xffff9148230c   268  sub csp, jssp, #0x8 (8)
0xffff91482310   272  str fp, [jssp, #-8]!
0xffff91482314   276  add fp, jssp, #0x8 (8)
0xffff91482318   280  ldur x16, [x2, #-1]
0xffff9148231c   284  ldr x17, [x26, #120]
0xffff91482320   288  cmp x16, x17
0xffff91482324   292  b.ne #+0x1b4 (addr 0xffff914824d8)
0xffff91482328   296  ldur d29, [x2, #7]
0xffff9148232c   300  fcvtzs w4, d29
0xffff91482330   304  scvtf d0, w4
0xffff91482334   308  fcmp d29, d0
0xffff91482338   312  b.ne #+0x1a0 (addr 0xffff914824d8)
0xffff9148233c   316  ldr lr, [jssp, #16]
0xffff91482340   320  ldp xzr, fp, [jssp], #24
0xffff91482344   324  b #-0x13c (addr 0xffff91482208)
0xffff91482348   328  sub csp, jssp, #0x10 (16)
0xffff9148234c   332  stp fp, lr, [jssp, #-16]!
0xffff91482350   336  movz fp, #0xa00000000
0xffff91482354   340  sub csp, jssp, #0x8 (8)
0xffff91482358   344  str fp, [jssp, #-8]!
0xffff9148235c   348  add fp, jssp, #0x8 (8)
0xffff91482360   352  movz x6, #0x0
0xffff91482364   356  mov x16, lr
0xffff91482368   360  ldr x17, pc+288 (addr 0x0000ffff91482488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9148236c   364  blr x17
0xffff91482370   368  movz x0, #0x3000000000
0xffff91482374   372  movz x10, #0x0
0xffff91482378   376  sub csp, jssp, #0x10 (16)
0xffff9148237c   380  stp x10, x0, [jssp, #-16]!
0xffff91482380   384  movz x0, #0x2
0xffff91482384   388  movz x1, #0x5b88
0xffff91482388   392  movk x1, #0xe2, lsl #16
0xffff9148238c   396  ldr x16, pc+260 (addr 0x0000ffff91482490)    ;; code: STUB, CEntryStub, minor: 5
0xffff91482390   400  blr x16
0xffff91482394   404  str x0, [jssp, #48]
0xffff91482398   408  ldr x16, pc+256 (addr 0x0000ffff91482498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9148239c   412  blr x16
0xffff914823a0   416  ldr lr, [jssp, #16]
0xffff914823a4   420  ldp xzr, fp, [jssp], #24
0xffff914823a8   424  b #-0x16c (addr 0xffff9148223c)
0xffff914823ac   428  sub csp, jssp, #0x10 (16)
0xffff914823b0   432  stp fp, lr, [jssp, #-16]!
0xffff914823b4   436  movz fp, #0xa00000000
0xffff914823b8   440  sub csp, jssp, #0x8 (8)
0xffff914823bc   444  str fp, [jssp, #-8]!
0xffff914823c0   448  add fp, jssp, #0x8 (8)
0xffff914823c4   452  movz x7, #0x0
0xffff914823c8   456  mov x16, lr
0xffff914823cc   460  ldr x17, pc+212 (addr 0x0000ffff914824a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914823d0   464  blr x17
0xffff914823d4   468  lsl x0, x3, #32
0xffff914823d8   472  movz x10, #0x0
0xffff914823dc   476  sub csp, jssp, #0x10 (16)
0xffff914823e0   480  stp x10, x0, [jssp, #-16]!
0xffff914823e4   484  movz x0, #0x2
0xffff914823e8   488  movz x1, #0x5b88
0xffff914823ec   492  movk x1, #0xe2, lsl #16
0xffff914823f0   496  ldr x16, pc+184 (addr 0x0000ffff914824a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff914823f4   500  blr x16
0xffff914823f8   504  str x0, [jssp, #56]
0xffff914823fc   508  ldr x16, pc+180 (addr 0x0000ffff914824b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91482400   512  blr x16
0xffff91482404   516  ldr lr, [jssp, #16]
0xffff91482408   520  ldp xzr, fp, [jssp], #24
0xffff9148240c   524  b #-0x180 (addr 0xffff9148228c)
0xffff91482410   528  sub csp, jssp, #0x10 (16)
0xffff91482414   532  stp fp, lr, [jssp, #-16]!
0xffff91482418   536  movz fp, #0xa00000000
0xffff9148241c   540  sub csp, jssp, #0x8 (8)
0xffff91482420   544  str fp, [jssp, #-8]!
0xffff91482424   548  add fp, jssp, #0x8 (8)
0xffff91482428   552  ldur x16, [x3, #-1]
0xffff9148242c   556  ldr x17, [x26, #120]
0xffff91482430   560  cmp x16, x17
0xffff91482434   564  b.ne #+0xac (addr 0xffff914824e0)
0xffff91482438   568  ldur d29, [x3, #7]
0xffff9148243c   572  fcvtzs w5, d29
0xffff91482440   576  scvtf d0, w5
0xffff91482444   580  fcmp d29, d0
0xffff91482448   584  b.ne #+0x98 (addr 0xffff914824e0)
0xffff9148244c   588  ldr lr, [jssp, #16]
0xffff91482450   592  ldp xzr, fp, [jssp], #24
0xffff91482454   596  b #-0x17c (addr 0xffff914822d8)
0xffff91482458   600  580002ff       constant pool begin (num_const = 23)    ;; constant pool
0xffff9148245c   604  d63f03e0       constant
0xffff91482460   608  49b04201       constant
0xffff91482464   612  00000000       constant
0xffff91482468   616  49b04201       constant
0xffff9148246c   620  00000000       constant
0xffff91482470   624  36404259       constant
0xffff91482474   628  00000000       constant
0xffff91482478   632  91481a20       constant
0xffff9148247c   636  0000ffff       constant
0xffff91482480   640  49b04241       constant
0xffff91482484   644  00000000       constant
0xffff91482488   648  91406820       constant
0xffff9148248c   652  0000ffff       constant
0xffff91482490   656  91406260       constant
0xffff91482494   660  0000ffff       constant
0xffff91482498   664  914068e0       constant
0xffff9148249c   668  0000ffff       constant
0xffff914824a0   672  91406820       constant
0xffff914824a4   676  0000ffff       constant
0xffff914824a8   680  91406260       constant
0xffff914824ac   684  0000ffff       constant
0xffff914824b0   688  914068e0       constant
0xffff914824b4   692  0000ffff       constant
0xffff914824b8   696  movz x16, #0x0
0xffff914824bc   700  sub csp, jssp, #0x10 (16)
0xffff914824c0   704  stp fp, lr, [jssp, #-16]!
0xffff914824c4   708  bl #+0x24 (addr 0xffff914824e8)
0xffff914824c8   712  movz x16, #0x8
0xffff914824cc   716  sub csp, jssp, #0x10 (16)
0xffff914824d0   720  stp fp, lr, [jssp, #-16]!
0xffff914824d4   724  bl #+0x14 (addr 0xffff914824e8)
0xffff914824d8   728  movz x16, #0x10
0xffff914824dc   732  bl #+0x1c (addr 0xffff914824f8)
0xffff914824e0   736  movz x16, #0x18
0xffff914824e4   740  bl #+0x14 (addr 0xffff914824f8)
0xffff914824e8   744  movz x17, #0xa00000000
0xffff914824ec   748  sub csp, jssp, #0x10 (16)
0xffff914824f0   752  stp x17, cp, [jssp, #-16]!
0xffff914824f4   756  add fp, jssp, #0x10 (16)
0xffff914824f8   760  ldr x17, pc+24 (addr 0x0000ffff91482510)    ;; lazy deoptimization bailout 0
0xffff914824fc   764  add x17, x17, x16
0xffff91482500   768  br x17
0xffff91482504   772  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91482508   776  d63f03e0       constant
0xffff9148250c   780  d503201f       constant
0xffff91482510   784  91206000       constant
0xffff91482514   788  0000ffff       constant


Safepoints (size = 34)
0xffff91482394   404  000 | x0 | x1 | x2 | x6 | x27 (sp -> fp)  <none> argc: 2
0xffff914823f8   504  000 | x0 | x1 | x2 | x6 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 33)
0xffff9148224c  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff91482254  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff9148228c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914822c0  code target (STUB)  (0xffff91481a20)
0xffff914822e4  embedded object  (0x49b04241 <undefined>)
0xffff91482368  code target (STUB)  (0xffff91406820)
0xffff9148238c  code target (STUB)  (0xffff91406260)
0xffff91482398  code target (STUB)  (0xffff914068e0)
0xffff914823cc  code target (STUB)  (0xffff91406820)
0xffff914823f0  code target (STUB)  (0xffff91406260)
0xffff914823fc  code target (STUB)  (0xffff914068e0)
0xffff91482458  constant pool (size 96)
0xffff914824f8  runtime entry
0xffff91482504  constant pool (size 20)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 128)
0xffff914834a0     0  ldr x16, [x26, #56]
0xffff914834a4     4  cmp x0, x16
0xffff914834a8     8  b.eq #+0x8 (addr 0xffff914834b0)
0xffff914834ac    12  b #+0x2c (addr 0xffff914834d8)
0xffff914834b0    16  ldr x0, pc+24 (addr 0x0000ffff914834c8)    ;; object: 0x49b042b1 <false>
0xffff914834b4    20  ret
0xffff914834b8    24  ldr x0, pc+24 (addr 0x0000ffff914834d0)    ;; object: 0x49b04281 <true>
0xffff914834bc    28  ret
0xffff914834c0    32  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914834c4    36  d63f03e0       constant
0xffff914834c8    40  49b042b1       constant
0xffff914834cc    44  00000000       constant
0xffff914834d0    48  49b04281       constant
0xffff914834d4    52  00000000       constant
0xffff914834d8    56  movz x16, #0x0
0xffff914834dc    60  sub csp, jssp, #0x10 (16)
0xffff914834e0    64  stp fp, lr, [jssp, #-16]!
0xffff914834e4    68  bl #+0x4 (addr 0xffff914834e8)
0xffff914834e8    72  movz x17, #0xa00000000
0xffff914834ec    76  sub csp, jssp, #0x10 (16)
0xffff914834f0    80  stp x17, cp, [jssp, #-16]!
0xffff914834f4    84  add fp, jssp, #0x10 (16)
0xffff914834f8    88  ldr x17, pc+24 (addr 0x0000ffff91483510)    ;; lazy deoptimization bailout 0
0xffff914834fc    92  add x17, x17, x16
0xffff91483500    96  br x17
0xffff91483504   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91483508   104  d63f03e0       constant
0xffff9148350c   108  d503201f       constant
0xffff91483510   112  91206000       constant
0xffff91483514   116  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914834b0  embedded object  (0x49b042b1 <false>)
0xffff914834b8  embedded object  (0x49b04281 <true>)
0xffff914834c0  constant pool (size 24)
0xffff914834f8  runtime entry
0xffff91483504  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 4
type = NORMAL
name = ToBooleanICStub(Null)
compiler = crankshaft
Instructions (size = 128)
0xffff914834a0     0  ldr x16, [x26, #56]
0xffff914834a4     4  cmp x0, x16
0xffff914834a8     8  b.eq #+0x8 (addr 0xffff914834b0)
0xffff914834ac    12  b #+0x2c (addr 0xffff914834d8)
0xffff914834b0    16  ldr x0, pc+24 (addr 0x0000ffff914834c8)    ;; object: 0x49b042b1 <false>
0xffff914834b4    20  ret
0xffff914834b8    24  ldr x0, pc+24 (addr 0x0000ffff914834d0)    ;; object: 0x49b04281 <true>
0xffff914834bc    28  ret
0xffff914834c0    32  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914834c4    36  d63f03e0       constant
0xffff914834c8    40  49b042b1       constant
0xffff914834cc    44  00000000       constant
0xffff914834d0    48  49b04281       constant
0xffff914834d4    52  00000000       constant
0xffff914834d8    56  movz x16, #0x0
0xffff914834dc    60  sub csp, jssp, #0x10 (16)
0xffff914834e0    64  stp fp, lr, [jssp, #-16]!
0xffff914834e4    68  bl #+0x4 (addr 0xffff914834e8)
0xffff914834e8    72  movz x17, #0xa00000000
0xffff914834ec    76  sub csp, jssp, #0x10 (16)
0xffff914834f0    80  stp x17, cp, [jssp, #-16]!
0xffff914834f4    84  add fp, jssp, #0x10 (16)
0xffff914834f8    88  ldr x17, pc+24 (addr 0x0000ffff91483510)    ;; lazy deoptimization bailout 0
0xffff914834fc    92  add x17, x17, x16
0xffff91483500    96  br x17
0xffff91483504   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91483508   104  d63f03e0       constant
0xffff9148350c   108  d503201f       constant
0xffff91483510   112  91206000       constant
0xffff91483514   116  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914834b0  embedded object  (0x49b042b1 <false>)
0xffff914834b8  embedded object  (0x49b04281 <true>)
0xffff914834c0  constant pool (size 24)
0xffff914834f8  runtime entry
0xffff91483504  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 509)
0xffff91487c00     0  movz x2, #0xf2c0
0xffff91487c04     4  movk x2, #0x4117, lsl #16
0xffff91487c08     8  ldp x3, x0, [x2]
0xffff91487c0c    12  adds x16, x3, #0xb0 (176)
0xffff91487c10    16  ccmp x16, x0, #nzCv, lo
0xffff91487c14    20  b.hi #+0xbc (addr 0xffff91487cd0)
0xffff91487c18    24  str x16, [x2]
0xffff91487c1c    28  orr x3, x3, #0x1
0xffff91487c20    32  ldr x0, pc+288 (addr 0x0000ffff91487d40)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91487c24    36  stur x0, [x3, #-1]
0xffff91487c28    40  movz x0, #0x1400000000
0xffff91487c2c    44  stur x0, [x3, #7]
0xffff91487c30    48  stur x1, [x3, #15]
0xffff91487c34    52  stur cp, [x3, #23]
0xffff91487c38    56  ldr x0, pc+272 (addr 0x0000ffff91487d48)    ;; object: 0x49b04519 <the hole>
0xffff91487c3c    60  stur x0, [x3, #31]
0xffff91487c40    64  ldur x0, [cp, #39]
0xffff91487c44    68  stur x0, [x3, #39]
0xffff91487c48    72  ldr x0, pc+264 (addr 0x0000ffff91487d50)    ;; object: 0x49b04241 <undefined>
0xffff91487c4c    76  stur x0, [x3, #47]
0xffff91487c50    80  ldr x0, pc+264 (addr 0x0000ffff91487d58)    ;; object: 0x49b04241 <undefined>
0xffff91487c54    84  stur x0, [x3, #55]
0xffff91487c58    88  ldr x0, pc+264 (addr 0x0000ffff91487d60)    ;; object: 0x49b04241 <undefined>
0xffff91487c5c    92  stur x0, [x3, #63]
0xffff91487c60    96  ldr x0, pc+264 (addr 0x0000ffff91487d68)    ;; object: 0x49b04241 <undefined>
0xffff91487c64   100  stur x0, [x3, #71]
0xffff91487c68   104  ldr x0, pc+264 (addr 0x0000ffff91487d70)    ;; object: 0x49b04241 <undefined>
0xffff91487c6c   108  stur x0, [x3, #79]
0xffff91487c70   112  ldr x0, pc+264 (addr 0x0000ffff91487d78)    ;; object: 0x49b04241 <undefined>
0xffff91487c74   116  stur x0, [x3, #87]
0xffff91487c78   120  ldr x0, pc+264 (addr 0x0000ffff91487d80)    ;; object: 0x49b04241 <undefined>
0xffff91487c7c   124  stur x0, [x3, #95]
0xffff91487c80   128  ldr x0, pc+264 (addr 0x0000ffff91487d88)    ;; object: 0x49b04241 <undefined>
0xffff91487c84   132  stur x0, [x3, #103]
0xffff91487c88   136  ldr x0, pc+264 (addr 0x0000ffff91487d90)    ;; object: 0x49b04241 <undefined>
0xffff91487c8c   140  stur x0, [x3, #111]
0xffff91487c90   144  ldr x0, pc+264 (addr 0x0000ffff91487d98)    ;; object: 0x49b04241 <undefined>
0xffff91487c94   148  stur x0, [x3, #119]
0xffff91487c98   152  ldr x0, pc+264 (addr 0x0000ffff91487da0)    ;; object: 0x49b04241 <undefined>
0xffff91487c9c   156  stur x0, [x3, #127]
0xffff91487ca0   160  ldr x0, pc+264 (addr 0x0000ffff91487da8)    ;; object: 0x49b04241 <undefined>
0xffff91487ca4   164  stur x0, [x3, #135]
0xffff91487ca8   168  ldr x0, pc+264 (addr 0x0000ffff91487db0)    ;; object: 0x49b04241 <undefined>
0xffff91487cac   172  stur x0, [x3, #143]
0xffff91487cb0   176  ldr x0, pc+264 (addr 0x0000ffff91487db8)    ;; object: 0x49b04241 <undefined>
0xffff91487cb4   180  stur x0, [x3, #151]
0xffff91487cb8   184  ldr x0, pc+264 (addr 0x0000ffff91487dc0)    ;; object: 0x49b04241 <undefined>
0xffff91487cbc   188  stur x0, [x3, #159]
0xffff91487cc0   192  ldr x0, pc+264 (addr 0x0000ffff91487dc8)    ;; object: 0x49b04241 <undefined>
0xffff91487cc4   196  stur x0, [x3, #167]
0xffff91487cc8   200  mov x0, x3
0xffff91487ccc   204  ret
0xffff91487cd0   208  sub csp, jssp, #0x10 (16)
0xffff91487cd4   212  stp fp, lr, [jssp, #-16]!
0xffff91487cd8   216  movz fp, #0xa00000000
0xffff91487cdc   220  sub csp, jssp, #0x8 (8)
0xffff91487ce0   224  str fp, [jssp, #-8]!
0xffff91487ce4   228  add fp, jssp, #0x8 (8)
0xffff91487ce8   232  movz x3, #0x0
0xffff91487cec   236  mov x16, lr
0xffff91487cf0   240  ldr x17, pc+224 (addr 0x0000ffff91487dd0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91487cf4   244  blr x17
0xffff91487cf8   248  movz x0, #0xb000000000
0xffff91487cfc   252  movz x10, #0x0
0xffff91487d00   256  sub csp, jssp, #0x10 (16)
0xffff91487d04   260  stp x10, x0, [jssp, #-16]!
0xffff91487d08   264  movz x0, #0x2
0xffff91487d0c   268  movz x1, #0x5b88
0xffff91487d10   272  movk x1, #0xe2, lsl #16
0xffff91487d14   276  ldr x16, pc+196 (addr 0x0000ffff91487dd8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91487d18   280  blr x16
0xffff91487d1c   284  str x0, [jssp, #24]
0xffff91487d20   288  ldr x16, pc+192 (addr 0x0000ffff91487de0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91487d24   292  blr x16
0xffff91487d28   296  ldr lr, [jssp, #16]
0xffff91487d2c   300  ldp xzr, fp, [jssp], #24
0xffff91487d30   304  b #-0x110 (addr 0xffff91487c20)
0xffff91487d34   308  5800059f       constant pool begin (num_const = 44)    ;; constant pool
0xffff91487d38   312  d63f03e0       constant
0xffff91487d3c   316  d503201f       constant
0xffff91487d40   320  36406149       constant
0xffff91487d44   324  00000000       constant
0xffff91487d48   328  49b04519       constant
0xffff91487d4c   332  00000000       constant
0xffff91487d50   336  49b04241       constant
0xffff91487d54   340  00000000       constant
0xffff91487d58   344  49b04241       constant
0xffff91487d5c   348  00000000       constant
0xffff91487d60   352  49b04241       constant
0xffff91487d64   356  00000000       constant
0xffff91487d68   360  49b04241       constant
0xffff91487d6c   364  00000000       constant
0xffff91487d70   368  49b04241       constant
0xffff91487d74   372  00000000       constant
0xffff91487d78   376  49b04241       constant
0xffff91487d7c   380  00000000       constant
0xffff91487d80   384  49b04241       constant
0xffff91487d84   388  00000000       constant
0xffff91487d88   392  49b04241       constant
0xffff91487d8c   396  00000000       constant
0xffff91487d90   400  49b04241       constant
0xffff91487d94   404  00000000       constant
0xffff91487d98   408  49b04241       constant
0xffff91487d9c   412  00000000       constant
0xffff91487da0   416  49b04241       constant
0xffff91487da4   420  00000000       constant
0xffff91487da8   424  49b04241       constant
0xffff91487dac   428  00000000       constant
0xffff91487db0   432  49b04241       constant
0xffff91487db4   436  00000000       constant
0xffff91487db8   440  49b04241       constant
0xffff91487dbc   444  00000000       constant
0xffff91487dc0   448  49b04241       constant
0xffff91487dc4   452  00000000       constant
0xffff91487dc8   456  49b04241       constant
0xffff91487dcc   460  00000000       constant
0xffff91487dd0   464  91406820       constant
0xffff91487dd4   468  0000ffff       constant
0xffff91487dd8   472  91406260       constant
0xffff91487ddc   476  0000ffff       constant
0xffff91487de0   480  914068e0       constant
0xffff91487de4   484  0000ffff       constant


Safepoints (size = 21)
0xffff91487d1c   284  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff91487c20  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91487c38  embedded object  (0x49b04519 <the hole>)
0xffff91487c48  embedded object  (0x49b04241 <undefined>)
0xffff91487c50  embedded object  (0x49b04241 <undefined>)
0xffff91487c58  embedded object  (0x49b04241 <undefined>)
0xffff91487c60  embedded object  (0x49b04241 <undefined>)
0xffff91487c68  embedded object  (0x49b04241 <undefined>)
0xffff91487c70  embedded object  (0x49b04241 <undefined>)
0xffff91487c78  embedded object  (0x49b04241 <undefined>)
0xffff91487c80  embedded object  (0x49b04241 <undefined>)
0xffff91487c88  embedded object  (0x49b04241 <undefined>)
0xffff91487c90  embedded object  (0x49b04241 <undefined>)
0xffff91487c98  embedded object  (0x49b04241 <undefined>)
0xffff91487ca0  embedded object  (0x49b04241 <undefined>)
0xffff91487ca8  embedded object  (0x49b04241 <undefined>)
0xffff91487cb0  embedded object  (0x49b04241 <undefined>)
0xffff91487cb8  embedded object  (0x49b04241 <undefined>)
0xffff91487cc0  embedded object  (0x49b04241 <undefined>)
0xffff91487cf0  code target (STUB)  (0xffff91406820)
0xffff91487d14  code target (STUB)  (0xffff91406260)
0xffff91487d20  code target (STUB)  (0xffff914068e0)
0xffff91487d34  constant pool (size 180)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 509)
0xffff91487c00     0  movz x2, #0xf2c0
0xffff91487c04     4  movk x2, #0x4117, lsl #16
0xffff91487c08     8  ldp x3, x0, [x2]
0xffff91487c0c    12  adds x16, x3, #0xb0 (176)
0xffff91487c10    16  ccmp x16, x0, #nzCv, lo
0xffff91487c14    20  b.hi #+0xbc (addr 0xffff91487cd0)
0xffff91487c18    24  str x16, [x2]
0xffff91487c1c    28  orr x3, x3, #0x1
0xffff91487c20    32  ldr x0, pc+288 (addr 0x0000ffff91487d40)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91487c24    36  stur x0, [x3, #-1]
0xffff91487c28    40  movz x0, #0x1400000000
0xffff91487c2c    44  stur x0, [x3, #7]
0xffff91487c30    48  stur x1, [x3, #15]
0xffff91487c34    52  stur cp, [x3, #23]
0xffff91487c38    56  ldr x0, pc+272 (addr 0x0000ffff91487d48)    ;; object: 0x49b04519 <the hole>
0xffff91487c3c    60  stur x0, [x3, #31]
0xffff91487c40    64  ldur x0, [cp, #39]
0xffff91487c44    68  stur x0, [x3, #39]
0xffff91487c48    72  ldr x0, pc+264 (addr 0x0000ffff91487d50)    ;; object: 0x49b04241 <undefined>
0xffff91487c4c    76  stur x0, [x3, #47]
0xffff91487c50    80  ldr x0, pc+264 (addr 0x0000ffff91487d58)    ;; object: 0x49b04241 <undefined>
0xffff91487c54    84  stur x0, [x3, #55]
0xffff91487c58    88  ldr x0, pc+264 (addr 0x0000ffff91487d60)    ;; object: 0x49b04241 <undefined>
0xffff91487c5c    92  stur x0, [x3, #63]
0xffff91487c60    96  ldr x0, pc+264 (addr 0x0000ffff91487d68)    ;; object: 0x49b04241 <undefined>
0xffff91487c64   100  stur x0, [x3, #71]
0xffff91487c68   104  ldr x0, pc+264 (addr 0x0000ffff91487d70)    ;; object: 0x49b04241 <undefined>
0xffff91487c6c   108  stur x0, [x3, #79]
0xffff91487c70   112  ldr x0, pc+264 (addr 0x0000ffff91487d78)    ;; object: 0x49b04241 <undefined>
0xffff91487c74   116  stur x0, [x3, #87]
0xffff91487c78   120  ldr x0, pc+264 (addr 0x0000ffff91487d80)    ;; object: 0x49b04241 <undefined>
0xffff91487c7c   124  stur x0, [x3, #95]
0xffff91487c80   128  ldr x0, pc+264 (addr 0x0000ffff91487d88)    ;; object: 0x49b04241 <undefined>
0xffff91487c84   132  stur x0, [x3, #103]
0xffff91487c88   136  ldr x0, pc+264 (addr 0x0000ffff91487d90)    ;; object: 0x49b04241 <undefined>
0xffff91487c8c   140  stur x0, [x3, #111]
0xffff91487c90   144  ldr x0, pc+264 (addr 0x0000ffff91487d98)    ;; object: 0x49b04241 <undefined>
0xffff91487c94   148  stur x0, [x3, #119]
0xffff91487c98   152  ldr x0, pc+264 (addr 0x0000ffff91487da0)    ;; object: 0x49b04241 <undefined>
0xffff91487c9c   156  stur x0, [x3, #127]
0xffff91487ca0   160  ldr x0, pc+264 (addr 0x0000ffff91487da8)    ;; object: 0x49b04241 <undefined>
0xffff91487ca4   164  stur x0, [x3, #135]
0xffff91487ca8   168  ldr x0, pc+264 (addr 0x0000ffff91487db0)    ;; object: 0x49b04241 <undefined>
0xffff91487cac   172  stur x0, [x3, #143]
0xffff91487cb0   176  ldr x0, pc+264 (addr 0x0000ffff91487db8)    ;; object: 0x49b04241 <undefined>
0xffff91487cb4   180  stur x0, [x3, #151]
0xffff91487cb8   184  ldr x0, pc+264 (addr 0x0000ffff91487dc0)    ;; object: 0x49b04241 <undefined>
0xffff91487cbc   188  stur x0, [x3, #159]
0xffff91487cc0   192  ldr x0, pc+264 (addr 0x0000ffff91487dc8)    ;; object: 0x49b04241 <undefined>
0xffff91487cc4   196  stur x0, [x3, #167]
0xffff91487cc8   200  mov x0, x3
0xffff91487ccc   204  ret
0xffff91487cd0   208  sub csp, jssp, #0x10 (16)
0xffff91487cd4   212  stp fp, lr, [jssp, #-16]!
0xffff91487cd8   216  movz fp, #0xa00000000
0xffff91487cdc   220  sub csp, jssp, #0x8 (8)
0xffff91487ce0   224  str fp, [jssp, #-8]!
0xffff91487ce4   228  add fp, jssp, #0x8 (8)
0xffff91487ce8   232  movz x3, #0x0
0xffff91487cec   236  mov x16, lr
0xffff91487cf0   240  ldr x17, pc+224 (addr 0x0000ffff91487dd0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91487cf4   244  blr x17
0xffff91487cf8   248  movz x0, #0xb000000000
0xffff91487cfc   252  movz x10, #0x0
0xffff91487d00   256  sub csp, jssp, #0x10 (16)
0xffff91487d04   260  stp x10, x0, [jssp, #-16]!
0xffff91487d08   264  movz x0, #0x2
0xffff91487d0c   268  movz x1, #0x5b88
0xffff91487d10   272  movk x1, #0xe2, lsl #16
0xffff91487d14   276  ldr x16, pc+196 (addr 0x0000ffff91487dd8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91487d18   280  blr x16
0xffff91487d1c   284  str x0, [jssp, #24]
0xffff91487d20   288  ldr x16, pc+192 (addr 0x0000ffff91487de0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91487d24   292  blr x16
0xffff91487d28   296  ldr lr, [jssp, #16]
0xffff91487d2c   300  ldp xzr, fp, [jssp], #24
0xffff91487d30   304  b #-0x110 (addr 0xffff91487c20)
0xffff91487d34   308  5800059f       constant pool begin (num_const = 44)    ;; constant pool
0xffff91487d38   312  d63f03e0       constant
0xffff91487d3c   316  d503201f       constant
0xffff91487d40   320  36406149       constant
0xffff91487d44   324  00000000       constant
0xffff91487d48   328  49b04519       constant
0xffff91487d4c   332  00000000       constant
0xffff91487d50   336  49b04241       constant
0xffff91487d54   340  00000000       constant
0xffff91487d58   344  49b04241       constant
0xffff91487d5c   348  00000000       constant
0xffff91487d60   352  49b04241       constant
0xffff91487d64   356  00000000       constant
0xffff91487d68   360  49b04241       constant
0xffff91487d6c   364  00000000       constant
0xffff91487d70   368  49b04241       constant
0xffff91487d74   372  00000000       constant
0xffff91487d78   376  49b04241       constant
0xffff91487d7c   380  00000000       constant
0xffff91487d80   384  49b04241       constant
0xffff91487d84   388  00000000       constant
0xffff91487d88   392  49b04241       constant
0xffff91487d8c   396  00000000       constant
0xffff91487d90   400  49b04241       constant
0xffff91487d94   404  00000000       constant
0xffff91487d98   408  49b04241       constant
0xffff91487d9c   412  00000000       constant
0xffff91487da0   416  49b04241       constant
0xffff91487da4   420  00000000       constant
0xffff91487da8   424  49b04241       constant
0xffff91487dac   428  00000000       constant
0xffff91487db0   432  49b04241       constant
0xffff91487db4   436  00000000       constant
0xffff91487db8   440  49b04241       constant
0xffff91487dbc   444  00000000       constant
0xffff91487dc0   448  49b04241       constant
0xffff91487dc4   452  00000000       constant
0xffff91487dc8   456  49b04241       constant
0xffff91487dcc   460  00000000       constant
0xffff91487dd0   464  91406820       constant
0xffff91487dd4   468  0000ffff       constant
0xffff91487dd8   472  91406260       constant
0xffff91487ddc   476  0000ffff       constant
0xffff91487de0   480  914068e0       constant
0xffff91487de4   484  0000ffff       constant


Safepoints (size = 21)
0xffff91487d1c   284  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff91487c20  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91487c38  embedded object  (0x49b04519 <the hole>)
0xffff91487c48  embedded object  (0x49b04241 <undefined>)
0xffff91487c50  embedded object  (0x49b04241 <undefined>)
0xffff91487c58  embedded object  (0x49b04241 <undefined>)
0xffff91487c60  embedded object  (0x49b04241 <undefined>)
0xffff91487c68  embedded object  (0x49b04241 <undefined>)
0xffff91487c70  embedded object  (0x49b04241 <undefined>)
0xffff91487c78  embedded object  (0x49b04241 <undefined>)
0xffff91487c80  embedded object  (0x49b04241 <undefined>)
0xffff91487c88  embedded object  (0x49b04241 <undefined>)
0xffff91487c90  embedded object  (0x49b04241 <undefined>)
0xffff91487c98  embedded object  (0x49b04241 <undefined>)
0xffff91487ca0  embedded object  (0x49b04241 <undefined>)
0xffff91487ca8  embedded object  (0x49b04241 <undefined>)
0xffff91487cb0  embedded object  (0x49b04241 <undefined>)
0xffff91487cb8  embedded object  (0x49b04241 <undefined>)
0xffff91487cc0  embedded object  (0x49b04241 <undefined>)
0xffff91487cf0  code target (STUB)  (0xffff91406820)
0xffff91487d14  code target (STUB)  (0xffff91406260)
0xffff91487d20  code target (STUB)  (0xffff914068e0)
0xffff91487d34  constant pool (size 180)


kind = HANDLER
major_key = <NoCache>Stub
name = undefined
compiler = unknown
Instructions (size = 112)
0xffff91489140     0  sub csp, jssp, #0x8 (8)
0xffff91489144     4  str x3, [jssp, #-8]!
0xffff91489148     8  sub csp, jssp, #0x8 (8)
0xffff9148914c    12  str x0, [jssp, #-8]!
0xffff91489150    16  ldr x0, pc+72 (addr 0x0000ffff91489198)    ;; object: 0x49bc5d51 Cell for 0
0xffff91489154    20  ldur x0, [x0, #7]
0xffff91489158    24  cmp x0, #0x0 (0)
0xffff9148915c    28  b.ne #+0x20 (addr 0xffff9148917c)
0xffff91489160    32  ldr x0, pc+64 (addr 0x0000ffff914891a0)    ;; object: 0x49bc5d61 WeakCell for 0x49b58101 PropertyCell for 0x49b04241 <undefined>
0xffff91489164    36  ldur x0, [x0, #7]
0xffff91489168    40  tbz w0, #0, #+0x14 (addr 0xffff9148917c)
0xffff9148916c    44  ldur x0, [x0, #15]
0xffff91489170    48  add jssp, jssp, #0x10 (16)
0xffff91489174    52  ret
0xffff91489178    56  b #+0x14 (addr 0xffff9148918c)
0xffff9148917c    60  ldr x0, [jssp], #8
0xffff91489180    64  ldr x3, [jssp], #8
0xffff91489184    68  ldr x16, pc+36 (addr 0x0000ffff914891a8)    ;; code: BUILTIN
0xffff91489188    72  br x16
0xffff9148918c    76  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91489190    80  d63f03e0       constant
0xffff91489194    84  d503201f       constant
0xffff91489198    88  49bc5d51       constant
0xffff9148919c    92  00000000       constant
0xffff914891a0    96  49bc5d61       constant
0xffff914891a4   100  00000000       constant
0xffff914891a8   104  914222e0       constant
0xffff914891ac   108  0000ffff       constant


RelocInfo (size = 9)
0xffff91489150  embedded object  (0x49bc5d51 Cell for 0)
0xffff91489160  embedded object  (0x49bc5d61 WeakCell for 0x49b58101 PropertyCell for 0x49b04241 <undefined>)
0xffff91489184  code target (BUILTIN)  (0xffff914222e0)
0xffff9148918c  constant pool (size 36)

kind = HANDLER
major_key = <NoCache>Stub
name = Object
compiler = unknown
Instructions (size = 120)
0xffff91489220     0  sub csp, jssp, #0x8 (8)
0xffff91489224     4  str x3, [jssp, #-8]!
0xffff91489228     8  sub csp, jssp, #0x8 (8)
0xffff9148922c    12  str x0, [jssp, #-8]!
0xffff91489230    16  ldr x0, pc+80 (addr 0x0000ffff91489280)    ;; object: 0x49bc5d51 Cell for 0
0xffff91489234    20  ldur x0, [x0, #7]
0xffff91489238    24  cmp x0, #0x0 (0)
0xffff9148923c    28  b.ne #+0x2c (addr 0xffff91489268)
0xffff91489240    32  ldr x0, pc+72 (addr 0x0000ffff91489288)    ;; object: 0x49bc5dc9 WeakCell for 0x49b40909 PropertyCell for 0x49b3fef1 <JS Function Object (SharedFunctionInfo 0x49b3fe49)>
0xffff91489244    36  ldur x0, [x0, #7]
0xffff91489248    40  tbz w0, #0, #+0x20 (addr 0xffff91489268)
0xffff9148924c    44  ldur x0, [x0, #15]
0xffff91489250    48  ldr x16, [x26, #88]
0xffff91489254    52  cmp x0, x16
0xffff91489258    56  b.eq #+0x10 (addr 0xffff91489268)
0xffff9148925c    60  add jssp, jssp, #0x10 (16)
0xffff91489260    64  ret
0xffff91489264    68  b #+0x14 (addr 0xffff91489278)
0xffff91489268    72  ldr x0, [jssp], #8
0xffff9148926c    76  ldr x3, [jssp], #8
0xffff91489270    80  ldr x16, pc+32 (addr 0x0000ffff91489290)    ;; code: BUILTIN
0xffff91489274    84  br x16
0xffff91489278    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9148927c    92  d63f03e0       constant
0xffff91489280    96  49bc5d51       constant
0xffff91489284   100  00000000       constant
0xffff91489288   104  49bc5dc9       constant
0xffff9148928c   108  00000000       constant
0xffff91489290   112  914222e0       constant
0xffff91489294   116  0000ffff       constant


RelocInfo (size = 9)
0xffff91489230  embedded object  (0x49bc5d51 Cell for 0)
0xffff91489240  embedded object  (0x49bc5dc9 WeakCell for 0x49b40909 PropertyCell for 0x49b3fef1 <JS Function Object (SharedFunctionInfo 0x49b3fe49)>)
0xffff91489270  code target (BUILTIN)  (0xffff914222e0)
0xffff91489278  constant pool (size 32)

kind = STUB
major_key = ToNameStub
name = ToNameStub
compiler = unknown
Instructions (size = 112)
0xffff91489300     0  tbz w0, #0, #+0x20 (addr 0xffff91489320)
0xffff91489304     4  ldur x1, [x0, #-1]
0xffff91489308     8  ldrb w1, [x1, #11]
0xffff9148930c    12  cmp x1, #0x80 (128)
0xffff91489310    16  b.hi #+0x8 (addr 0xffff91489318)
0xffff91489314    20  ret
0xffff91489318    24  cmp x1, #0x81 (129)
0xffff9148931c    28  b.ne #+0xc (addr 0xffff91489328)
0xffff91489320    32  ldr x16, pc+56 (addr 0x0000ffff91489358)    ;; code: STUB, NumberToStringStub, minor: 0
0xffff91489324    36  br x16
0xffff91489328    40  cmp x1, #0x83 (131)
0xffff9148932c    44  b.ne #+0xc (addr 0xffff91489338)
0xffff91489330    48  ldur x0, [x0, #7]
0xffff91489334    52  ret
0xffff91489338    56  sub csp, jssp, #0x8 (8)
0xffff9148933c    60  str x0, [jssp, #-8]!
0xffff91489340    64  movz x0, #0x1
0xffff91489344    68  ldr x1, pc+28 (addr 0x0000ffff91489360)    ;; external reference (Runtime::ToName)
0xffff91489348    72  ldr x16, pc+32 (addr 0x0000ffff91489368)    ;; code: STUB, CEntryStub, minor: 4
0xffff9148934c    76  br x16
0xffff91489350    80  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91489354    84  d63f03e0       constant
0xffff91489358    88  9142a480       constant
0xffff9148935c    92  0000ffff       constant
0xffff91489360    96  00e497a0       constant
0xffff91489364   100  00000000       constant
0xffff91489368   104  91406060       constant
0xffff9148936c   108  0000ffff       constant


RelocInfo (size = 10)
0xffff91489320  code target (STUB)  (0xffff9142a480)
0xffff91489344  external reference (Runtime::ToName)  (0xe497a0)
0xffff91489348  code target (STUB)  (0xffff91406060)
0xffff91489350  constant pool (size 32)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = RECEIVER*GENERIC -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff9148a5a0     0  orr x16, x1, x0
0xffff9148a5a4     4  tbnz w16, #0, #+0x10 (addr 0xffff9148a5b4)
0xffff9148a5a8     8  asr x1, x1, #32
0xffff9148a5ac    12  sub x0, x1, x0, asr #32
0xffff9148a5b0    16  ret
0xffff9148a5b4    20  cmp x0, x1
0xffff9148a5b8    24  b.ne #+0x30 (addr 0xffff9148a5e8)
0xffff9148a5bc    28  ldur x16, [x0, #-1]
0xffff9148a5c0    32  ldr x17, [x26, #120]
0xffff9148a5c4    36  cmp x16, x17
0xffff9148a5c8    40  b.eq #+0xc (addr 0xffff9148a5d4)
0xffff9148a5cc    44  movz x0, #0x0
0xffff9148a5d0    48  ret
0xffff9148a5d4    52  ldur d0, [x0, #7]
0xffff9148a5d8    56  fcmp d0, d0
0xffff9148a5dc    60  b.vc #-0x10 (addr 0xffff9148a5cc)
0xffff9148a5e0    64  movn x0, #0x0
0xffff9148a5e4    68  ret
0xffff9148a5e8    72  and x16, x1, x0
0xffff9148a5ec    76  tbnz w16, #0, #+0x64 (addr 0xffff9148a650)
0xffff9148a5f0    80  tbz w0, #0, #+0x24 (addr 0xffff9148a614)
0xffff9148a5f4    84  ldur x16, [x0, #-1]
0xffff9148a5f8    88  ldr x17, [x26, #120]
0xffff9148a5fc    92  cmp x16, x17
0xffff9148a600    96  b.eq #+0x8 (addr 0xffff9148a608)
0xffff9148a604   100  ret
0xffff9148a608   104  ldur d0, [x0, #7]
0xffff9148a60c   108  scvtf d1, x1, #32
0xffff9148a610   112  b #+0x24 (addr 0xffff9148a634)
0xffff9148a614   116  ldur x16, [x1, #-1]
0xffff9148a618   120  ldr x17, [x26, #120]
0xffff9148a61c   124  cmp x16, x17
0xffff9148a620   128  b.eq #+0xc (addr 0xffff9148a62c)
0xffff9148a624   132  movz x0, #0x1
0xffff9148a628   136  ret
0xffff9148a62c   140  ldur d1, [x1, #7]
0xffff9148a630   144  scvtf d0, x0, #32
0xffff9148a634   148  fcmp d1, d0
0xffff9148a638   152  b.vs #+0x10 (addr 0xffff9148a648)
0xffff9148a63c   156  cset x0, gt
0xffff9148a640   160  csinv x0, x0, xzr, ge
0xffff9148a644   164  ret
0xffff9148a648   168  movn x0, #0x0
0xffff9148a64c   172  ret
0xffff9148a650   176  ldur x10, [x0, #-1]
0xffff9148a654   180  ldur x12, [x1, #-1]
0xffff9148a658   184  ldrb w11, [x10, #11]
0xffff9148a65c   188  ldrb w13, [x12, #11]
0xffff9148a660   192  cmp x11, #0xb1 (177)
0xffff9148a664   196  b.lt #+0x8 (addr 0xffff9148a66c)
0xffff9148a668   200  ret
0xffff9148a66c   204  cmp x11, #0x83 (131)
0xffff9148a670   208  movz x16, #0x83
0xffff9148a674   212  ccmp x13, x16, #nZcv, ne
0xffff9148a678   216  movz x16, #0xb1
0xffff9148a67c   220  ccmp x13, x16, #NzcV, ne
0xffff9148a680   224  b.ge #-0x18 (addr 0xffff9148a668)
0xffff9148a684   228  orr x14, x13, x11
0xffff9148a688   232  tst x14, #0xc0
0xffff9148a68c   236  b.eq #-0x24 (addr 0xffff9148a668)
0xffff9148a690   240  cmp x11, #0x81 (129)
0xffff9148a694   244  b.ne #+0x18 (addr 0xffff9148a6ac)
0xffff9148a698   248  cmp x12, x10
0xffff9148a69c   252  b.ne #+0x10 (addr 0xffff9148a6ac)
0xffff9148a6a0   256  ldur d1, [x1, #7]
0xffff9148a6a4   260  ldur d0, [x0, #7]
0xffff9148a6a8   264  b #-0x74 (addr 0xffff9148a634)
0xffff9148a6ac   268  movz x16, #0x87
0xffff9148a6b0   272  and x14, x13, x16
0xffff9148a6b4   276  movz x16, #0x87
0xffff9148a6b8   280  and x15, x11, x16
0xffff9148a6bc   284  cmp x14, #0x4 (4)
0xffff9148a6c0   288  ccmp x15, #4, #nzcv, eq
0xffff9148a6c4   292  b.ne #+0x5c (addr 0xffff9148a720)
0xffff9148a6c8   296  ldur x10, [x1, #15]
0xffff9148a6cc   300  ldur x11, [x0, #15]
0xffff9148a6d0   304  cmp x10, x11
0xffff9148a6d4   308  b.eq #+0xc (addr 0xffff9148a6e0)
0xffff9148a6d8   312  movz x0, #0x100000000
0xffff9148a6dc   316  ret
0xffff9148a6e0   320  cbnz x10, #+0xc (addr 0xffff9148a6ec)
0xffff9148a6e4   324  movz x0, #0x0
0xffff9148a6e8   328  ret
0xffff9148a6ec   332  asr x10, x10, #32
0xffff9148a6f0   336  add x11, x10, #0x17 (23)
0xffff9148a6f4   340  add x1, x1, x11
0xffff9148a6f8   344  add x0, x0, x11
0xffff9148a6fc   348  neg x10, x10
0xffff9148a700   352  ldrb w11, [x1, x10]
0xffff9148a704   356  ldrb w12, [x0, x10]
0xffff9148a708   360  cmp x11, x12
0xffff9148a70c   364  b.ne #-0x34 (addr 0xffff9148a6d8)
0xffff9148a710   368  add x10, x10, #0x1 (1)
0xffff9148a714   372  cbnz x10, #-0x14 (addr 0xffff9148a700)
0xffff9148a718   376  movz x0, #0x0
0xffff9148a71c   380  ret
0xffff9148a720   384  movz x16, #0xc00000000
0xffff9148a724   388  sub csp, jssp, #0x10 (16)
0xffff9148a728   392  stp fp, lr, [jssp, #-16]!
0xffff9148a72c   396  sub csp, jssp, #0x10 (16)
0xffff9148a730   400  str x16, [jssp, #-8]!
0xffff9148a734   404  ldr x17, pc+172 (addr 0x0000ffff9148a7e0)    ;; object: 0xffff9148a541 <Code: COMPARE_IC>
0xffff9148a738   408  sub csp, jssp, #0x10 (16)
0xffff9148a73c   412  str x17, [jssp, #-8]!
0xffff9148a740   416  add fp, jssp, #0x10 (16)
0xffff9148a744   420  sub csp, jssp, #0x10 (16)
0xffff9148a748   424  stp x0, x1, [jssp, #-16]!
0xffff9148a74c   428  movz x0, #0x2
0xffff9148a750   432  ldr x1, pc+152 (addr 0x0000ffff9148a7e8)    ;; external reference (Runtime::StrictEqual)
0xffff9148a754   436  ldr x16, pc+156 (addr 0x0000ffff9148a7f0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9148a758   440  blr x16
0xffff9148a75c   444  mov jssp, fp
0xffff9148a760   448  ldp fp, lr, [jssp], #16
0xffff9148a764   452  ldr x1, [x26, #64]
0xffff9148a768   456  sub x0, x0, x1
0xffff9148a76c   460  ret
0xffff9148a770   464  movz x16, #0xc00000000
0xffff9148a774   468  sub csp, jssp, #0x10 (16)
0xffff9148a778   472  stp fp, lr, [jssp, #-16]!
0xffff9148a77c   476  sub csp, jssp, #0x10 (16)
0xffff9148a780   480  str x16, [jssp, #-8]!
0xffff9148a784   484  ldr x17, pc+116 (addr 0x0000ffff9148a7f8)    ;; object: 0xffff9148a541 <Code: COMPARE_IC>
0xffff9148a788   488  sub csp, jssp, #0x10 (16)
0xffff9148a78c   492  str x17, [jssp, #-8]!
0xffff9148a790   496  add fp, jssp, #0x10 (16)
0xffff9148a794   500  sub csp, jssp, #0x18 (24)
0xffff9148a798   504  stp lr, x0, [jssp, #-24]!
0xffff9148a79c   508  str x1, [jssp, #16]
0xffff9148a7a0   512  movz x10, #0x2f00000000
0xffff9148a7a4   516  sub csp, jssp, #0x18 (24)
0xffff9148a7a8   520  stp x10, x0, [jssp, #-24]!
0xffff9148a7ac   524  str x1, [jssp, #16]
0xffff9148a7b0   528  movz x0, #0x3
0xffff9148a7b4   532  ldr x1, pc+76 (addr 0x0000ffff9148a800)    ;; external reference (Runtime::CompareIC_Miss)
0xffff9148a7b8   536  ldr x16, pc+80 (addr 0x0000ffff9148a808)    ;; code: STUB, CEntryStub, minor: 4
0xffff9148a7bc   540  blr x16
0xffff9148a7c0   544  add x11, x0, #0x5f (95)
0xffff9148a7c4   548  ldr x1, [jssp, #16]
0xffff9148a7c8   552  ldp lr, x0, [jssp], #24
0xffff9148a7cc   556  mov jssp, fp
0xffff9148a7d0   560  ldp fp, lr, [jssp], #16
0xffff9148a7d4   564  br x11
0xffff9148a7d8   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9148a7dc   572  d63f03e0       constant
0xffff9148a7e0   576  9148a541       constant
0xffff9148a7e4   580  0000ffff       constant
0xffff9148a7e8   584  00e50928       constant
0xffff9148a7ec   588  00000000       constant
0xffff9148a7f0   592  91406060       constant
0xffff9148a7f4   596  0000ffff       constant
0xffff9148a7f8   600  9148a541       constant
0xffff9148a7fc   604  0000ffff       constant
0xffff9148a800   608  00c8a980       constant
0xffff9148a804   612  00000000       constant
0xffff9148a808   616  91406060       constant
0xffff9148a80c   620  0000ffff       constant


RelocInfo (size = 16)
0xffff9148a734  embedded object  (0xffff9148a541 <Code: COMPARE_IC>)
0xffff9148a750  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff9148a754  code target (STUB)  (0xffff91406060)
0xffff9148a784  embedded object  (0xffff9148a541 <Code: COMPARE_IC>)
0xffff9148a7b4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff9148a7b8  code target (STUB)  (0xffff91406060)
0xffff9148a7d8  constant pool (size 56)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff9148b020     0  ldur x0, [x1, #-1]
0xffff9148b024     4  ldur x0, [x0, #47]
0xffff9148b028     8  ldur x0, [x0, #191]
0xffff9148b02c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff9148b020     0  ldur x0, [x1, #-1]
0xffff9148b024     4  ldur x0, [x0, #47]
0xffff9148b028     8  ldur x0, [x0, #191]
0xffff9148b02c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff9148b0a0     0  ldur x0, [x1, #-1]
0xffff9148b0a4     4  ldur x0, [x0, #47]
0xffff9148b0a8     8  ldur x0, [x0, #215]
0xffff9148b0ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff9148b0a0     0  ldur x0, [x1, #-1]
0xffff9148b0a4     4  ldur x0, [x0, #47]
0xffff9148b0a8     8  ldur x0, [x0, #215]
0xffff9148b0ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = NameDictionaryLookupStub
name = NameDictionaryLookupStub
compiler = unknown
Instructions (size = 968)
0xffff9148b120     0  ldursw x3, [x0, #35]
0xffff9148b124     4  sub x3, x3, #0x1 (1)
0xffff9148b128     8  ldur x4, [x1, #7]
0xffff9148b12c    12  ldr x5, [x26, #40]
0xffff9148b130    16  add x2, x4, #0x28 (40)
0xffff9148b134    20  and x2, x3, x2, lsr #2
0xffff9148b138    24  add x2, x2, x2, lsl #1
0xffff9148b13c    28  add x2, x0, x2, lsl #3
0xffff9148b140    32  ldur x6, [x2, #55]
0xffff9148b144    36  cmp x6, x5
0xffff9148b148    40  b.eq #+0x398 (addr 0xffff9148b4e0)
0xffff9148b14c    44  cmp x6, x1
0xffff9148b150    48  b.eq #+0x388 (addr 0xffff9148b4d8)
0xffff9148b154    52  ldur x6, [x6, #-1]
0xffff9148b158    56  ldrb w6, [x6, #11]
0xffff9148b15c    60  tst x6, #0xc0
0xffff9148b160    64  movz x16, #0x80
0xffff9148b164    68  ccmp x6, x16, #nZcv, ne
0xffff9148b168    72  b.ne #+0x370 (addr 0xffff9148b4d8)
0xffff9148b16c    76  add x2, x4, #0x3c (60)
0xffff9148b170    80  and x2, x3, x2, lsr #2
0xffff9148b174    84  add x2, x2, x2, lsl #1
0xffff9148b178    88  add x2, x0, x2, lsl #3
0xffff9148b17c    92  ldur x6, [x2, #55]
0xffff9148b180    96  cmp x6, x5
0xffff9148b184   100  b.eq #+0x35c (addr 0xffff9148b4e0)
0xffff9148b188   104  cmp x6, x1
0xffff9148b18c   108  b.eq #+0x34c (addr 0xffff9148b4d8)
0xffff9148b190   112  ldur x6, [x6, #-1]
0xffff9148b194   116  ldrb w6, [x6, #11]
0xffff9148b198   120  tst x6, #0xc0
0xffff9148b19c   124  movz x16, #0x80
0xffff9148b1a0   128  ccmp x6, x16, #nZcv, ne
0xffff9148b1a4   132  b.ne #+0x334 (addr 0xffff9148b4d8)
0xffff9148b1a8   136  add x2, x4, #0x54 (84)
0xffff9148b1ac   140  and x2, x3, x2, lsr #2
0xffff9148b1b0   144  add x2, x2, x2, lsl #1
0xffff9148b1b4   148  add x2, x0, x2, lsl #3
0xffff9148b1b8   152  ldur x6, [x2, #55]
0xffff9148b1bc   156  cmp x6, x5
0xffff9148b1c0   160  b.eq #+0x320 (addr 0xffff9148b4e0)
0xffff9148b1c4   164  cmp x6, x1
0xffff9148b1c8   168  b.eq #+0x310 (addr 0xffff9148b4d8)
0xffff9148b1cc   172  ldur x6, [x6, #-1]
0xffff9148b1d0   176  ldrb w6, [x6, #11]
0xffff9148b1d4   180  tst x6, #0xc0
0xffff9148b1d8   184  movz x16, #0x80
0xffff9148b1dc   188  ccmp x6, x16, #nZcv, ne
0xffff9148b1e0   192  b.ne #+0x2f8 (addr 0xffff9148b4d8)
0xffff9148b1e4   196  add x2, x4, #0x70 (112)
0xffff9148b1e8   200  and x2, x3, x2, lsr #2
0xffff9148b1ec   204  add x2, x2, x2, lsl #1
0xffff9148b1f0   208  add x2, x0, x2, lsl #3
0xffff9148b1f4   212  ldur x6, [x2, #55]
0xffff9148b1f8   216  cmp x6, x5
0xffff9148b1fc   220  b.eq #+0x2e4 (addr 0xffff9148b4e0)
0xffff9148b200   224  cmp x6, x1
0xffff9148b204   228  b.eq #+0x2d4 (addr 0xffff9148b4d8)
0xffff9148b208   232  ldur x6, [x6, #-1]
0xffff9148b20c   236  ldrb w6, [x6, #11]
0xffff9148b210   240  tst x6, #0xc0
0xffff9148b214   244  movz x16, #0x80
0xffff9148b218   248  ccmp x6, x16, #nZcv, ne
0xffff9148b21c   252  b.ne #+0x2bc (addr 0xffff9148b4d8)
0xffff9148b220   256  add x2, x4, #0x90 (144)
0xffff9148b224   260  and x2, x3, x2, lsr #2
0xffff9148b228   264  add x2, x2, x2, lsl #1
0xffff9148b22c   268  add x2, x0, x2, lsl #3
0xffff9148b230   272  ldur x6, [x2, #55]
0xffff9148b234   276  cmp x6, x5
0xffff9148b238   280  b.eq #+0x2a8 (addr 0xffff9148b4e0)
0xffff9148b23c   284  cmp x6, x1
0xffff9148b240   288  b.eq #+0x298 (addr 0xffff9148b4d8)
0xffff9148b244   292  ldur x6, [x6, #-1]
0xffff9148b248   296  ldrb w6, [x6, #11]
0xffff9148b24c   300  tst x6, #0xc0
0xffff9148b250   304  movz x16, #0x80
0xffff9148b254   308  ccmp x6, x16, #nZcv, ne
0xffff9148b258   312  b.ne #+0x280 (addr 0xffff9148b4d8)
0xffff9148b25c   316  add x2, x4, #0xb4 (180)
0xffff9148b260   320  and x2, x3, x2, lsr #2
0xffff9148b264   324  add x2, x2, x2, lsl #1
0xffff9148b268   328  add x2, x0, x2, lsl #3
0xffff9148b26c   332  ldur x6, [x2, #55]
0xffff9148b270   336  cmp x6, x5
0xffff9148b274   340  b.eq #+0x26c (addr 0xffff9148b4e0)
0xffff9148b278   344  cmp x6, x1
0xffff9148b27c   348  b.eq #+0x25c (addr 0xffff9148b4d8)
0xffff9148b280   352  ldur x6, [x6, #-1]
0xffff9148b284   356  ldrb w6, [x6, #11]
0xffff9148b288   360  tst x6, #0xc0
0xffff9148b28c   364  movz x16, #0x80
0xffff9148b290   368  ccmp x6, x16, #nZcv, ne
0xffff9148b294   372  b.ne #+0x244 (addr 0xffff9148b4d8)
0xffff9148b298   376  add x2, x4, #0xdc (220)
0xffff9148b29c   380  and x2, x3, x2, lsr #2
0xffff9148b2a0   384  add x2, x2, x2, lsl #1
0xffff9148b2a4   388  add x2, x0, x2, lsl #3
0xffff9148b2a8   392  ldur x6, [x2, #55]
0xffff9148b2ac   396  cmp x6, x5
0xffff9148b2b0   400  b.eq #+0x230 (addr 0xffff9148b4e0)
0xffff9148b2b4   404  cmp x6, x1
0xffff9148b2b8   408  b.eq #+0x220 (addr 0xffff9148b4d8)
0xffff9148b2bc   412  ldur x6, [x6, #-1]
0xffff9148b2c0   416  ldrb w6, [x6, #11]
0xffff9148b2c4   420  tst x6, #0xc0
0xffff9148b2c8   424  movz x16, #0x80
0xffff9148b2cc   428  ccmp x6, x16, #nZcv, ne
0xffff9148b2d0   432  b.ne #+0x208 (addr 0xffff9148b4d8)
0xffff9148b2d4   436  add x2, x4, #0x108 (264)
0xffff9148b2d8   440  and x2, x3, x2, lsr #2
0xffff9148b2dc   444  add x2, x2, x2, lsl #1
0xffff9148b2e0   448  add x2, x0, x2, lsl #3
0xffff9148b2e4   452  ldur x6, [x2, #55]
0xffff9148b2e8   456  cmp x6, x5
0xffff9148b2ec   460  b.eq #+0x1f4 (addr 0xffff9148b4e0)
0xffff9148b2f0   464  cmp x6, x1
0xffff9148b2f4   468  b.eq #+0x1e4 (addr 0xffff9148b4d8)
0xffff9148b2f8   472  ldur x6, [x6, #-1]
0xffff9148b2fc   476  ldrb w6, [x6, #11]
0xffff9148b300   480  tst x6, #0xc0
0xffff9148b304   484  movz x16, #0x80
0xffff9148b308   488  ccmp x6, x16, #nZcv, ne
0xffff9148b30c   492  b.ne #+0x1cc (addr 0xffff9148b4d8)
0xffff9148b310   496  add x2, x4, #0x138 (312)
0xffff9148b314   500  and x2, x3, x2, lsr #2
0xffff9148b318   504  add x2, x2, x2, lsl #1
0xffff9148b31c   508  add x2, x0, x2, lsl #3
0xffff9148b320   512  ldur x6, [x2, #55]
0xffff9148b324   516  cmp x6, x5
0xffff9148b328   520  b.eq #+0x1b8 (addr 0xffff9148b4e0)
0xffff9148b32c   524  cmp x6, x1
0xffff9148b330   528  b.eq #+0x1a8 (addr 0xffff9148b4d8)
0xffff9148b334   532  ldur x6, [x6, #-1]
0xffff9148b338   536  ldrb w6, [x6, #11]
0xffff9148b33c   540  tst x6, #0xc0
0xffff9148b340   544  movz x16, #0x80
0xffff9148b344   548  ccmp x6, x16, #nZcv, ne
0xffff9148b348   552  b.ne #+0x190 (addr 0xffff9148b4d8)
0xffff9148b34c   556  add x2, x4, #0x16c (364)
0xffff9148b350   560  and x2, x3, x2, lsr #2
0xffff9148b354   564  add x2, x2, x2, lsl #1
0xffff9148b358   568  add x2, x0, x2, lsl #3
0xffff9148b35c   572  ldur x6, [x2, #55]
0xffff9148b360   576  cmp x6, x5
0xffff9148b364   580  b.eq #+0x17c (addr 0xffff9148b4e0)
0xffff9148b368   584  cmp x6, x1
0xffff9148b36c   588  b.eq #+0x16c (addr 0xffff9148b4d8)
0xffff9148b370   592  ldur x6, [x6, #-1]
0xffff9148b374   596  ldrb w6, [x6, #11]
0xffff9148b378   600  tst x6, #0xc0
0xffff9148b37c   604  movz x16, #0x80
0xffff9148b380   608  ccmp x6, x16, #nZcv, ne
0xffff9148b384   612  b.ne #+0x154 (addr 0xffff9148b4d8)
0xffff9148b388   616  add x2, x4, #0x1a4 (420)
0xffff9148b38c   620  and x2, x3, x2, lsr #2
0xffff9148b390   624  add x2, x2, x2, lsl #1
0xffff9148b394   628  add x2, x0, x2, lsl #3
0xffff9148b398   632  ldur x6, [x2, #55]
0xffff9148b39c   636  cmp x6, x5
0xffff9148b3a0   640  b.eq #+0x140 (addr 0xffff9148b4e0)
0xffff9148b3a4   644  cmp x6, x1
0xffff9148b3a8   648  b.eq #+0x130 (addr 0xffff9148b4d8)
0xffff9148b3ac   652  ldur x6, [x6, #-1]
0xffff9148b3b0   656  ldrb w6, [x6, #11]
0xffff9148b3b4   660  tst x6, #0xc0
0xffff9148b3b8   664  movz x16, #0x80
0xffff9148b3bc   668  ccmp x6, x16, #nZcv, ne
0xffff9148b3c0   672  b.ne #+0x118 (addr 0xffff9148b4d8)
0xffff9148b3c4   676  add x2, x4, #0x1e0 (480)
0xffff9148b3c8   680  and x2, x3, x2, lsr #2
0xffff9148b3cc   684  add x2, x2, x2, lsl #1
0xffff9148b3d0   688  add x2, x0, x2, lsl #3
0xffff9148b3d4   692  ldur x6, [x2, #55]
0xffff9148b3d8   696  cmp x6, x5
0xffff9148b3dc   700  b.eq #+0x104 (addr 0xffff9148b4e0)
0xffff9148b3e0   704  cmp x6, x1
0xffff9148b3e4   708  b.eq #+0xf4 (addr 0xffff9148b4d8)
0xffff9148b3e8   712  ldur x6, [x6, #-1]
0xffff9148b3ec   716  ldrb w6, [x6, #11]
0xffff9148b3f0   720  tst x6, #0xc0
0xffff9148b3f4   724  movz x16, #0x80
0xffff9148b3f8   728  ccmp x6, x16, #nZcv, ne
0xffff9148b3fc   732  b.ne #+0xdc (addr 0xffff9148b4d8)
0xffff9148b400   736  add x2, x4, #0x220 (544)
0xffff9148b404   740  and x2, x3, x2, lsr #2
0xffff9148b408   744  add x2, x2, x2, lsl #1
0xffff9148b40c   748  add x2, x0, x2, lsl #3
0xffff9148b410   752  ldur x6, [x2, #55]
0xffff9148b414   756  cmp x6, x5
0xffff9148b418   760  b.eq #+0xc8 (addr 0xffff9148b4e0)
0xffff9148b41c   764  cmp x6, x1
0xffff9148b420   768  b.eq #+0xb8 (addr 0xffff9148b4d8)
0xffff9148b424   772  ldur x6, [x6, #-1]
0xffff9148b428   776  ldrb w6, [x6, #11]
0xffff9148b42c   780  tst x6, #0xc0
0xffff9148b430   784  movz x16, #0x80
0xffff9148b434   788  ccmp x6, x16, #nZcv, ne
0xffff9148b438   792  b.ne #+0xa0 (addr 0xffff9148b4d8)
0xffff9148b43c   796  add x2, x4, #0x264 (612)
0xffff9148b440   800  and x2, x3, x2, lsr #2
0xffff9148b444   804  add x2, x2, x2, lsl #1
0xffff9148b448   808  add x2, x0, x2, lsl #3
0xffff9148b44c   812  ldur x6, [x2, #55]
0xffff9148b450   816  cmp x6, x5
0xffff9148b454   820  b.eq #+0x8c (addr 0xffff9148b4e0)
0xffff9148b458   824  cmp x6, x1
0xffff9148b45c   828  b.eq #+0x7c (addr 0xffff9148b4d8)
0xffff9148b460   832  ldur x6, [x6, #-1]
0xffff9148b464   836  ldrb w6, [x6, #11]
0xffff9148b468   840  tst x6, #0xc0
0xffff9148b46c   844  movz x16, #0x80
0xffff9148b470   848  ccmp x6, x16, #nZcv, ne
0xffff9148b474   852  b.ne #+0x64 (addr 0xffff9148b4d8)
0xffff9148b478   856  add x2, x4, #0x2ac (684)
0xffff9148b47c   860  and x2, x3, x2, lsr #2
0xffff9148b480   864  add x2, x2, x2, lsl #1
0xffff9148b484   868  add x2, x0, x2, lsl #3
0xffff9148b488   872  ldur x6, [x2, #55]
0xffff9148b48c   876  cmp x6, x5
0xffff9148b490   880  b.eq #+0x50 (addr 0xffff9148b4e0)
0xffff9148b494   884  cmp x6, x1
0xffff9148b498   888  b.eq #+0x40 (addr 0xffff9148b4d8)
0xffff9148b49c   892  ldur x6, [x6, #-1]
0xffff9148b4a0   896  ldrb w6, [x6, #11]
0xffff9148b4a4   900  tst x6, #0xc0
0xffff9148b4a8   904  movz x16, #0x80
0xffff9148b4ac   908  ccmp x6, x16, #nZcv, ne
0xffff9148b4b0   912  b.ne #+0x28 (addr 0xffff9148b4d8)
0xffff9148b4b4   916  add x2, x4, #0x2f8 (760)
0xffff9148b4b8   920  and x2, x3, x2, lsr #2
0xffff9148b4bc   924  add x2, x2, x2, lsl #1
0xffff9148b4c0   928  add x2, x0, x2, lsl #3
0xffff9148b4c4   932  ldur x6, [x2, #55]
0xffff9148b4c8   936  cmp x6, x5
0xffff9148b4cc   940  b.eq #+0x14 (addr 0xffff9148b4e0)
0xffff9148b4d0   944  cmp x6, x1
0xffff9148b4d4   948  b.eq #+0x4 (addr 0xffff9148b4d8)
0xffff9148b4d8   952  movz x0, #0x1
0xffff9148b4dc   956  ret
0xffff9148b4e0   960  movz x0, #0x0
0xffff9148b4e4   964  ret


RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = hasOwnProperty
compiler = unknown
Instructions (size = 656)
0xffff9148b560     0  sub csp, jssp, #0x8 (8)
0xffff9148b564     4  str x3, [jssp, #-8]!
0xffff9148b568     8  sub csp, jssp, #0x8 (8)
0xffff9148b56c    12  str x0, [jssp, #-8]!
0xffff9148b570    16  ldr x0, pc+560 (addr 0x0000ffff9148b7a0)    ;; object: 0x49b63e59 Cell for 0
0xffff9148b574    20  ldur x0, [x0, #7]
0xffff9148b578    24  cmp x0, #0x0 (0)
0xffff9148b57c    28  b.ne #+0x1f8 (addr 0xffff9148b774)
0xffff9148b580    32  ldur x4, [x1, #-1]
0xffff9148b584    36  ldrb w0, [x4, #12]
0xffff9148b588    40  movz x16, #0x44
0xffff9148b58c    44  tst x0, x16
0xffff9148b590    48  b.ne #+0x1e4 (addr 0xffff9148b774)
0xffff9148b594    52  ldrb w0, [x4, #11]
0xffff9148b598    56  cmp x0, #0xb1 (177)
0xffff9148b59c    60  b.lt #+0x1d8 (addr 0xffff9148b774)
0xffff9148b5a0    64  ldur x0, [x1, #7]
0xffff9148b5a4    68  ldur x4, [x0, #-1]
0xffff9148b5a8    72  ldr x16, [x26, #432]
0xffff9148b5ac    76  cmp x4, x16
0xffff9148b5b0    80  b.ne #+0x1c4 (addr 0xffff9148b774)
0xffff9148b5b4    84  ldursw x4, [x0, #35]
0xffff9148b5b8    88  sub x4, x4, #0x1 (1)
0xffff9148b5bc    92  movz x16, #0x991
0xffff9148b5c0    96  movk x16, #0x2e46, lsl #16
0xffff9148b5c4   100  and x4, x4, x16
0xffff9148b5c8   104  add x4, x4, x4, lsl #1
0xffff9148b5cc   108  add x4, x0, x4, lsl #3
0xffff9148b5d0   112  ldur x4, [x4, #55]
0xffff9148b5d4   116  ldr x16, [x26, #40]
0xffff9148b5d8   120  cmp x4, x16
0xffff9148b5dc   124  b.eq #+0x188 (addr 0xffff9148b764)
0xffff9148b5e0   128  ldr x16, pc+456 (addr 0x0000ffff9148b7a8)    ;; object: 0x49b417b1 <String[14]: hasOwnProperty>
0xffff9148b5e4   132  cmp x4, x16
0xffff9148b5e8   136  b.eq #+0x18c (addr 0xffff9148b774)
0xffff9148b5ec   140  ldr x16, [x26, #88]
0xffff9148b5f0   144  cmp x4, x16
0xffff9148b5f4   148  b.eq #+0x1c (addr 0xffff9148b610)
0xffff9148b5f8   152  ldur x4, [x4, #-1]
0xffff9148b5fc   156  ldrb w4, [x4, #11]
0xffff9148b600   160  tst x4, #0xc0
0xffff9148b604   164  movz x16, #0x80
0xffff9148b608   168  ccmp x4, x16, #nZcv, ne
0xffff9148b60c   172  b.ne #+0x168 (addr 0xffff9148b774)
0xffff9148b610   176  ldursw x4, [x0, #35]
0xffff9148b614   180  sub x4, x4, #0x1 (1)
0xffff9148b618   184  movz x16, #0x992
0xffff9148b61c   188  movk x16, #0x2e46, lsl #16
0xffff9148b620   192  and x4, x4, x16
0xffff9148b624   196  add x4, x4, x4, lsl #1
0xffff9148b628   200  add x4, x0, x4, lsl #3
0xffff9148b62c   204  ldur x4, [x4, #55]
0xffff9148b630   208  ldr x16, [x26, #40]
0xffff9148b634   212  cmp x4, x16
0xffff9148b638   216  b.eq #+0x12c (addr 0xffff9148b764)
0xffff9148b63c   220  ldr x16, pc+372 (addr 0x0000ffff9148b7b0)    ;; object: 0x49b417b1 <String[14]: hasOwnProperty>
0xffff9148b640   224  cmp x4, x16
0xffff9148b644   228  b.eq #+0x130 (addr 0xffff9148b774)
0xffff9148b648   232  ldr x16, [x26, #88]
0xffff9148b64c   236  cmp x4, x16
0xffff9148b650   240  b.eq #+0x1c (addr 0xffff9148b66c)
0xffff9148b654   244  ldur x4, [x4, #-1]
0xffff9148b658   248  ldrb w4, [x4, #11]
0xffff9148b65c   252  tst x4, #0xc0
0xffff9148b660   256  movz x16, #0x80
0xffff9148b664   260  ccmp x4, x16, #nZcv, ne
0xffff9148b668   264  b.ne #+0x10c (addr 0xffff9148b774)
0xffff9148b66c   268  ldursw x4, [x0, #35]
0xffff9148b670   272  sub x4, x4, #0x1 (1)
0xffff9148b674   276  movz x16, #0x994
0xffff9148b678   280  movk x16, #0x2e46, lsl #16
0xffff9148b67c   284  and x4, x4, x16
0xffff9148b680   288  add x4, x4, x4, lsl #1
0xffff9148b684   292  add x4, x0, x4, lsl #3
0xffff9148b688   296  ldur x4, [x4, #55]
0xffff9148b68c   300  ldr x16, [x26, #40]
0xffff9148b690   304  cmp x4, x16
0xffff9148b694   308  b.eq #+0xd0 (addr 0xffff9148b764)
0xffff9148b698   312  ldr x16, pc+288 (addr 0x0000ffff9148b7b8)    ;; object: 0x49b417b1 <String[14]: hasOwnProperty>
0xffff9148b69c   316  cmp x4, x16
0xffff9148b6a0   320  b.eq #+0xd4 (addr 0xffff9148b774)
0xffff9148b6a4   324  ldr x16, [x26, #88]
0xffff9148b6a8   328  cmp x4, x16
0xffff9148b6ac   332  b.eq #+0x1c (addr 0xffff9148b6c8)
0xffff9148b6b0   336  ldur x4, [x4, #-1]
0xffff9148b6b4   340  ldrb w4, [x4, #11]
0xffff9148b6b8   344  tst x4, #0xc0
0xffff9148b6bc   348  movz x16, #0x80
0xffff9148b6c0   352  ccmp x4, x16, #nZcv, ne
0xffff9148b6c4   356  b.ne #+0xb0 (addr 0xffff9148b774)
0xffff9148b6c8   360  ldursw x4, [x0, #35]
0xffff9148b6cc   364  sub x4, x4, #0x1 (1)
0xffff9148b6d0   368  movz x16, #0x997
0xffff9148b6d4   372  movk x16, #0x2e46, lsl #16
0xffff9148b6d8   376  and x4, x4, x16
0xffff9148b6dc   380  add x4, x4, x4, lsl #1
0xffff9148b6e0   384  add x4, x0, x4, lsl #3
0xffff9148b6e4   388  ldur x4, [x4, #55]
0xffff9148b6e8   392  ldr x16, [x26, #40]
0xffff9148b6ec   396  cmp x4, x16
0xffff9148b6f0   400  b.eq #+0x74 (addr 0xffff9148b764)
0xffff9148b6f4   404  ldr x16, pc+204 (addr 0x0000ffff9148b7c0)    ;; object: 0x49b417b1 <String[14]: hasOwnProperty>
0xffff9148b6f8   408  cmp x4, x16
0xffff9148b6fc   412  b.eq #+0x78 (addr 0xffff9148b774)
0xffff9148b700   416  ldr x16, [x26, #88]
0xffff9148b704   420  cmp x4, x16
0xffff9148b708   424  b.eq #+0x1c (addr 0xffff9148b724)
0xffff9148b70c   428  ldur x4, [x4, #-1]
0xffff9148b710   432  ldrb w4, [x4, #11]
0xffff9148b714   436  tst x4, #0xc0
0xffff9148b718   440  movz x16, #0x80
0xffff9148b71c   444  ccmp x4, x16, #nZcv, ne
0xffff9148b720   448  b.ne #+0x54 (addr 0xffff9148b774)
0xffff9148b724   452  sub csp, jssp, #0x38 (56)
0xffff9148b728   456  stp x3, x5, [jssp, #-32]!
0xffff9148b72c   460  stp x6, lr, [jssp, #16]
0xffff9148b730   464  stp x0, x1, [jssp, #-24]!
0xffff9148b734   468  str x2, [jssp, #16]
0xffff9148b738   472  ldur x0, [x1, #7]
0xffff9148b73c   476  ldr x1, pc+140 (addr 0x0000ffff9148b7c8)    ;; object: 0x49b417b1 <String[14]: hasOwnProperty>
0xffff9148b740   480  ldr x16, pc+144 (addr 0x0000ffff9148b7d0)    ;; code: STUB, NameDictionaryLookupStub, minor: 1
0xffff9148b744   484  blr x16
0xffff9148b748   488  mov x4, x0
0xffff9148b74c   492  ldp x2, x3, [jssp, #16]
0xffff9148b750   496  ldp x0, x1, [jssp], #32
0xffff9148b754   500  ldr lr, [jssp, #16]
0xffff9148b758   504  ldp x5, x6, [jssp], #24
0xffff9148b75c   508  cbz x4, #+0x8 (addr 0xffff9148b764)
0xffff9148b760   512  b #+0x14 (addr 0xffff9148b774)
0xffff9148b764   516  ldr x3, pc+116 (addr 0x0000ffff9148b7d8)    ;; object: 0x49bc7a51 WeakCell for 0x49b3ff39 <an Object with map 0x3640c081>
0xffff9148b768   520  ldur x3, [x3, #7]
0xffff9148b76c   524  tbz w3, #0, #+0x8 (addr 0xffff9148b774)
0xffff9148b770   528  b #+0x14 (addr 0xffff9148b784)
0xffff9148b774   532  ldr x0, [jssp], #8
0xffff9148b778   536  ldr x3, [jssp], #8
0xffff9148b77c   540  ldr x16, pc+100 (addr 0x0000ffff9148b7e0)    ;; code: BUILTIN
0xffff9148b780   544  br x16
0xffff9148b784   548  add jssp, jssp, #0x10 (16)
0xffff9148b788   552  mov x1, x3
0xffff9148b78c   556  ldr x16, pc+92 (addr 0x0000ffff9148b7e8)    ;; code: HANDLER, LoadConstantStub, minor: 0
0xffff9148b790   560  br x16
0xffff9148b794   564  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff9148b798   568  d63f03e0       constant
0xffff9148b79c   572  d503201f       constant
0xffff9148b7a0   576  49b63e59       constant
0xffff9148b7a4   580  00000000       constant
0xffff9148b7a8   584  49b417b1       constant
0xffff9148b7ac   588  00000000       constant
0xffff9148b7b0   592  49b417b1       constant
0xffff9148b7b4   596  00000000       constant
0xffff9148b7b8   600  49b417b1       constant
0xffff9148b7bc   604  00000000       constant
0xffff9148b7c0   608  49b417b1       constant
0xffff9148b7c4   612  00000000       constant
0xffff9148b7c8   616  49b417b1       constant
0xffff9148b7cc   620  00000000       constant
0xffff9148b7d0   624  9148b120       constant
0xffff9148b7d4   628  0000ffff       constant
0xffff9148b7d8   632  49bc7a51       constant
0xffff9148b7dc   636  00000000       constant
0xffff9148b7e0   640  914222e0       constant
0xffff9148b7e4   644  0000ffff       constant
0xffff9148b7e8   648  914431a0       constant
0xffff9148b7ec   652  0000ffff       constant


RelocInfo (size = 26)
0xffff9148b570  embedded object  (0x49b63e59 Cell for 0)
0xffff9148b5e0  embedded object  (0x49b417b1 <String[14]: hasOwnProperty>)
0xffff9148b63c  embedded object  (0x49b417b1 <String[14]: hasOwnProperty>)
0xffff9148b698  embedded object  (0x49b417b1 <String[14]: hasOwnProperty>)
0xffff9148b6f4  embedded object  (0x49b417b1 <String[14]: hasOwnProperty>)
0xffff9148b73c  embedded object  (0x49b417b1 <String[14]: hasOwnProperty>)
0xffff9148b740  code target (STUB)  (0xffff9148b120)
0xffff9148b764  embedded object  (0x49bc7a51 WeakCell for 0x49b3ff39 <an Object with map 0x3640c081>)
0xffff9148b77c  code target (BUILTIN)  (0xffff914222e0)
0xffff9148b78c  code target (HANDLER)  (0xffff914431a0)
0xffff9148b794  constant pool (size 92)

kind = HANDLER
major_key = <NoCache>Stub
name = push
compiler = unknown
Instructions (size = 120)
0xffff9148b860     0  sub csp, jssp, #0x8 (8)
0xffff9148b864     4  str x3, [jssp, #-8]!
0xffff9148b868     8  sub csp, jssp, #0x8 (8)
0xffff9148b86c    12  str x0, [jssp, #-8]!
0xffff9148b870    16  ldr x0, pc+72 (addr 0x0000ffff9148b8b8)    ;; object: 0x49bc7b09 Cell for 0
0xffff9148b874    20  ldur x0, [x0, #7]
0xffff9148b878    24  cmp x0, #0x0 (0)
0xffff9148b87c    28  b.ne #+0x14 (addr 0xffff9148b890)
0xffff9148b880    32  ldr x3, pc+64 (addr 0x0000ffff9148b8c0)    ;; object: 0x49bc7b19 WeakCell for 0x26a26419 <JS Array[0]>
0xffff9148b884    36  ldur x3, [x3, #7]
0xffff9148b888    40  tbz w3, #0, #+0x8 (addr 0xffff9148b890)
0xffff9148b88c    44  b #+0x14 (addr 0xffff9148b8a0)
0xffff9148b890    48  ldr x0, [jssp], #8
0xffff9148b894    52  ldr x3, [jssp], #8
0xffff9148b898    56  ldr x16, pc+48 (addr 0x0000ffff9148b8c8)    ;; code: BUILTIN
0xffff9148b89c    60  br x16
0xffff9148b8a0    64  add jssp, jssp, #0x10 (16)
0xffff9148b8a4    68  mov x1, x3
0xffff9148b8a8    72  ldr x16, pc+40 (addr 0x0000ffff9148b8d0)    ;; code: HANDLER, LoadConstantStub, minor: 7
0xffff9148b8ac    76  br x16
0xffff9148b8b0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff9148b8b4    84  d63f03e0       constant
0xffff9148b8b8    88  49bc7b09       constant
0xffff9148b8bc    92  00000000       constant
0xffff9148b8c0    96  49bc7b19       constant
0xffff9148b8c4   100  00000000       constant
0xffff9148b8c8   104  914222e0       constant
0xffff9148b8cc   108  0000ffff       constant
0xffff9148b8d0   112  9148b0a0       constant
0xffff9148b8d4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff9148b870  embedded object  (0x49bc7b09 Cell for 0)
0xffff9148b880  embedded object  (0x49bc7b19 WeakCell for 0x26a26419 <JS Array[0]>)
0xffff9148b898  code target (BUILTIN)  (0xffff914222e0)
0xffff9148b8a8  code target (HANDLER)  (0xffff9148b0a0)
0xffff9148b8b0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff9148b940     0  tbz w0, #0, #+0x90 (addr 0xffff9148b9d0)
0xffff9148b944     4  mov x2, x0
0xffff9148b948     8  stur x2, [x1, #23]
0xffff9148b94c    12  add x3, x1, #0x17 (23)
0xffff9148b950    16  and x2, x2, #0xfffffffffff00000
0xffff9148b954    20  ldr x2, [x2, #8]
0xffff9148b958    24  tbz w2, #1, #+0x24 (addr 0xffff9148b97c)
0xffff9148b95c    28  and x2, x1, #0xfffffffffff00000
0xffff9148b960    32  ldr x2, [x2, #8]
0xffff9148b964    36  tbz w2, #2, #+0x18 (addr 0xffff9148b97c)
0xffff9148b968    40  sub csp, jssp, #0x8 (8)
0xffff9148b96c    44  str lr, [jssp, #-8]!
0xffff9148b970    48  ldr x16, pc+80 (addr 0x0000ffff9148b9c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9148b974    52  blr x16
0xffff9148b978    56  ldr lr, [jssp], #8
0xffff9148b97c    60  stur x5, [x1, #-1]
0xffff9148b980    64  tbz w5, #0, #+0x34 (addr 0xffff9148b9b4)
0xffff9148b984    68  sub x2, x1, #0x1 (1)
0xffff9148b988    72  and x5, x5, #0xfffffffffff00000
0xffff9148b98c    76  ldr x5, [x5, #8]
0xffff9148b990    80  tbz w5, #1, #+0x24 (addr 0xffff9148b9b4)
0xffff9148b994    84  and x5, x1, #0xfffffffffff00000
0xffff9148b998    88  ldr x5, [x5, #8]
0xffff9148b99c    92  tbz w5, #2, #+0x18 (addr 0xffff9148b9b4)
0xffff9148b9a0    96  sub csp, jssp, #0x8 (8)
0xffff9148b9a4   100  str lr, [jssp, #-8]!
0xffff9148b9a8   104  ldr x16, pc+32 (addr 0x0000ffff9148b9c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9148b9ac   108  blr x16
0xffff9148b9b0   112  ldr lr, [jssp], #8
0xffff9148b9b4   116  ret
0xffff9148b9b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9148b9bc   124  d63f03e0       constant
0xffff9148b9c0   128  914170c0       constant
0xffff9148b9c4   132  0000ffff       constant
0xffff9148b9c8   136  91438080       constant
0xffff9148b9cc   140  0000ffff       constant
0xffff9148b9d0   144  movz x16, #0x0
0xffff9148b9d4   148  sub csp, jssp, #0x10 (16)
0xffff9148b9d8   152  stp fp, lr, [jssp, #-16]!
0xffff9148b9dc   156  bl #+0x4 (addr 0xffff9148b9e0)
0xffff9148b9e0   160  movz x17, #0xa00000000
0xffff9148b9e4   164  sub csp, jssp, #0x10 (16)
0xffff9148b9e8   168  stp x17, cp, [jssp, #-16]!
0xffff9148b9ec   172  add fp, jssp, #0x10 (16)
0xffff9148b9f0   176  ldr x17, pc+24 (addr 0x0000ffff9148ba08)    ;; lazy deoptimization bailout 0
0xffff9148b9f4   180  add x17, x17, x16
0xffff9148b9f8   184  br x17
0xffff9148b9fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9148ba00   192  d63f03e0       constant
0xffff9148ba04   196  d503201f       constant
0xffff9148ba08   200  91206000       constant
0xffff9148ba0c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff9148b970  code target (STUB)  (0xffff914170c0)
0xffff9148b9a8  code target (STUB)  (0xffff91438080)
0xffff9148b9b8  constant pool (size 24)
0xffff9148b9f0  runtime entry
0xffff9148b9fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff9148b940     0  tbz w0, #0, #+0x90 (addr 0xffff9148b9d0)
0xffff9148b944     4  mov x2, x0
0xffff9148b948     8  stur x2, [x1, #23]
0xffff9148b94c    12  add x3, x1, #0x17 (23)
0xffff9148b950    16  and x2, x2, #0xfffffffffff00000
0xffff9148b954    20  ldr x2, [x2, #8]
0xffff9148b958    24  tbz w2, #1, #+0x24 (addr 0xffff9148b97c)
0xffff9148b95c    28  and x2, x1, #0xfffffffffff00000
0xffff9148b960    32  ldr x2, [x2, #8]
0xffff9148b964    36  tbz w2, #2, #+0x18 (addr 0xffff9148b97c)
0xffff9148b968    40  sub csp, jssp, #0x8 (8)
0xffff9148b96c    44  str lr, [jssp, #-8]!
0xffff9148b970    48  ldr x16, pc+80 (addr 0x0000ffff9148b9c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9148b974    52  blr x16
0xffff9148b978    56  ldr lr, [jssp], #8
0xffff9148b97c    60  stur x5, [x1, #-1]
0xffff9148b980    64  tbz w5, #0, #+0x34 (addr 0xffff9148b9b4)
0xffff9148b984    68  sub x2, x1, #0x1 (1)
0xffff9148b988    72  and x5, x5, #0xfffffffffff00000
0xffff9148b98c    76  ldr x5, [x5, #8]
0xffff9148b990    80  tbz w5, #1, #+0x24 (addr 0xffff9148b9b4)
0xffff9148b994    84  and x5, x1, #0xfffffffffff00000
0xffff9148b998    88  ldr x5, [x5, #8]
0xffff9148b99c    92  tbz w5, #2, #+0x18 (addr 0xffff9148b9b4)
0xffff9148b9a0    96  sub csp, jssp, #0x8 (8)
0xffff9148b9a4   100  str lr, [jssp, #-8]!
0xffff9148b9a8   104  ldr x16, pc+32 (addr 0x0000ffff9148b9c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9148b9ac   108  blr x16
0xffff9148b9b0   112  ldr lr, [jssp], #8
0xffff9148b9b4   116  ret
0xffff9148b9b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9148b9bc   124  d63f03e0       constant
0xffff9148b9c0   128  914170c0       constant
0xffff9148b9c4   132  0000ffff       constant
0xffff9148b9c8   136  91438080       constant
0xffff9148b9cc   140  0000ffff       constant
0xffff9148b9d0   144  movz x16, #0x0
0xffff9148b9d4   148  sub csp, jssp, #0x10 (16)
0xffff9148b9d8   152  stp fp, lr, [jssp, #-16]!
0xffff9148b9dc   156  bl #+0x4 (addr 0xffff9148b9e0)
0xffff9148b9e0   160  movz x17, #0xa00000000
0xffff9148b9e4   164  sub csp, jssp, #0x10 (16)
0xffff9148b9e8   168  stp x17, cp, [jssp, #-16]!
0xffff9148b9ec   172  add fp, jssp, #0x10 (16)
0xffff9148b9f0   176  ldr x17, pc+24 (addr 0x0000ffff9148ba08)    ;; lazy deoptimization bailout 0
0xffff9148b9f4   180  add x17, x17, x16
0xffff9148b9f8   184  br x17
0xffff9148b9fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9148ba00   192  d63f03e0       constant
0xffff9148ba04   196  d503201f       constant
0xffff9148ba08   200  91206000       constant
0xffff9148ba0c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff9148b970  code target (STUB)  (0xffff914170c0)
0xffff9148b9a8  code target (STUB)  (0xffff91438080)
0xffff9148b9b8  constant pool (size 24)
0xffff9148b9f0  runtime entry
0xffff9148b9fc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = filename
compiler = unknown
Instructions (size = 152)
0xffff9148ba80     0  sub csp, jssp, #0x8 (8)
0xffff9148ba84     4  str x3, [jssp, #-8]!
0xffff9148ba88     8  sub csp, jssp, #0x8 (8)
0xffff9148ba8c    12  str x4, [jssp, #-8]!
0xffff9148ba90    16  ldr x3, pc+88 (addr 0x0000ffff9148bae8)    ;; object: 0x49bc7ba9 Cell for 0
0xffff9148ba94    20  ldur x3, [x3, #7]
0xffff9148ba98    24  cmp x3, #0x0 (0)
0xffff9148ba9c    28  b.ne #+0x30 (addr 0xffff9148bacc)
0xffff9148baa0    32  tbz w0, #0, #+0x2c (addr 0xffff9148bacc)
0xffff9148baa4    36  ldr x5, pc+76 (addr 0x0000ffff9148baf0)    ;; object: 0x49bc2219 WeakCell for 0x3641b2d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9148baa8    40  ldur x5, [x5, #7]
0xffff9148baac    44  tbz w5, #0, #+0x20 (addr 0xffff9148bacc)
0xffff9148bab0    48  ldursw x4, [x5, #15]
0xffff9148bab4    52  tbnz w4, #23, #+0x18 (addr 0xffff9148bacc)
0xffff9148bab8    56  ldr x4, [jssp], #8
0xffff9148babc    60  ldr x3, [jssp], #8
0xffff9148bac0    64  ldr x2, pc+56 (addr 0x0000ffff9148baf8)    ;; object: 0x49bb9cf1 <String[8]: filename>
0xffff9148bac4    68  ldr x16, pc+60 (addr 0x0000ffff9148bb00)    ;; code: HANDLER, StoreTransitionStub, minor: 198659
0xffff9148bac8    72  br x16
0xffff9148bacc    76  ldr x2, pc+60 (addr 0x0000ffff9148bb08)    ;; object: 0x49bb9cf1 <String[8]: filename>
0xffff9148bad0    80  ldr x4, [jssp], #8
0xffff9148bad4    84  ldr x3, [jssp], #8
0xffff9148bad8    88  ldr x16, pc+56 (addr 0x0000ffff9148bb10)    ;; code: BUILTIN
0xffff9148badc    92  br x16
0xffff9148bae0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9148bae4   100  d63f03e0       constant
0xffff9148bae8   104  49bc7ba9       constant
0xffff9148baec   108  00000000       constant
0xffff9148baf0   112  49bc2219       constant
0xffff9148baf4   116  00000000       constant
0xffff9148baf8   120  49bb9cf1       constant
0xffff9148bafc   124  00000000       constant
0xffff9148bb00   128  9148b940       constant
0xffff9148bb04   132  0000ffff       constant
0xffff9148bb08   136  49bb9cf1       constant
0xffff9148bb0c   140  00000000       constant
0xffff9148bb10   144  91422420       constant
0xffff9148bb14   148  0000ffff       constant


RelocInfo (size = 12)
0xffff9148ba90  embedded object  (0x49bc7ba9 Cell for 0)
0xffff9148baa4  embedded object  (0x49bc2219 WeakCell for 0x3641b2d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9148bac0  embedded object  (0x49bb9cf1 <String[8]: filename>)
0xffff9148bac4  code target (HANDLER)  (0xffff9148b940)
0xffff9148bacc  embedded object  (0x49bb9cf1 <String[8]: filename>)
0xffff9148bad8  code target (BUILTIN)  (0xffff91422420)
0xffff9148bae0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff9148bb80     0  tbz w0, #0, #+0x90 (addr 0xffff9148bc10)
0xffff9148bb84     4  mov x2, x0
0xffff9148bb88     8  stur x2, [x1, #31]
0xffff9148bb8c    12  add x3, x1, #0x1f (31)
0xffff9148bb90    16  and x2, x2, #0xfffffffffff00000
0xffff9148bb94    20  ldr x2, [x2, #8]
0xffff9148bb98    24  tbz w2, #1, #+0x24 (addr 0xffff9148bbbc)
0xffff9148bb9c    28  and x2, x1, #0xfffffffffff00000
0xffff9148bba0    32  ldr x2, [x2, #8]
0xffff9148bba4    36  tbz w2, #2, #+0x18 (addr 0xffff9148bbbc)
0xffff9148bba8    40  sub csp, jssp, #0x8 (8)
0xffff9148bbac    44  str lr, [jssp, #-8]!
0xffff9148bbb0    48  ldr x16, pc+80 (addr 0x0000ffff9148bc00)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9148bbb4    52  blr x16
0xffff9148bbb8    56  ldr lr, [jssp], #8
0xffff9148bbbc    60  stur x5, [x1, #-1]
0xffff9148bbc0    64  tbz w5, #0, #+0x34 (addr 0xffff9148bbf4)
0xffff9148bbc4    68  sub x2, x1, #0x1 (1)
0xffff9148bbc8    72  and x5, x5, #0xfffffffffff00000
0xffff9148bbcc    76  ldr x5, [x5, #8]
0xffff9148bbd0    80  tbz w5, #1, #+0x24 (addr 0xffff9148bbf4)
0xffff9148bbd4    84  and x5, x1, #0xfffffffffff00000
0xffff9148bbd8    88  ldr x5, [x5, #8]
0xffff9148bbdc    92  tbz w5, #2, #+0x18 (addr 0xffff9148bbf4)
0xffff9148bbe0    96  sub csp, jssp, #0x8 (8)
0xffff9148bbe4   100  str lr, [jssp, #-8]!
0xffff9148bbe8   104  ldr x16, pc+32 (addr 0x0000ffff9148bc08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9148bbec   108  blr x16
0xffff9148bbf0   112  ldr lr, [jssp], #8
0xffff9148bbf4   116  ret
0xffff9148bbf8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9148bbfc   124  d63f03e0       constant
0xffff9148bc00   128  914170c0       constant
0xffff9148bc04   132  0000ffff       constant
0xffff9148bc08   136  91438080       constant
0xffff9148bc0c   140  0000ffff       constant
0xffff9148bc10   144  movz x16, #0x0
0xffff9148bc14   148  sub csp, jssp, #0x10 (16)
0xffff9148bc18   152  stp fp, lr, [jssp, #-16]!
0xffff9148bc1c   156  bl #+0x4 (addr 0xffff9148bc20)
0xffff9148bc20   160  movz x17, #0xa00000000
0xffff9148bc24   164  sub csp, jssp, #0x10 (16)
0xffff9148bc28   168  stp x17, cp, [jssp, #-16]!
0xffff9148bc2c   172  add fp, jssp, #0x10 (16)
0xffff9148bc30   176  ldr x17, pc+24 (addr 0x0000ffff9148bc48)    ;; lazy deoptimization bailout 0
0xffff9148bc34   180  add x17, x17, x16
0xffff9148bc38   184  br x17
0xffff9148bc3c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9148bc40   192  d63f03e0       constant
0xffff9148bc44   196  d503201f       constant
0xffff9148bc48   200  91206000       constant
0xffff9148bc4c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff9148bbb0  code target (STUB)  (0xffff914170c0)
0xffff9148bbe8  code target (STUB)  (0xffff91438080)
0xffff9148bbf8  constant pool (size 24)
0xffff9148bc30  runtime entry
0xffff9148bc3c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff9148bb80     0  tbz w0, #0, #+0x90 (addr 0xffff9148bc10)
0xffff9148bb84     4  mov x2, x0
0xffff9148bb88     8  stur x2, [x1, #31]
0xffff9148bb8c    12  add x3, x1, #0x1f (31)
0xffff9148bb90    16  and x2, x2, #0xfffffffffff00000
0xffff9148bb94    20  ldr x2, [x2, #8]
0xffff9148bb98    24  tbz w2, #1, #+0x24 (addr 0xffff9148bbbc)
0xffff9148bb9c    28  and x2, x1, #0xfffffffffff00000
0xffff9148bba0    32  ldr x2, [x2, #8]
0xffff9148bba4    36  tbz w2, #2, #+0x18 (addr 0xffff9148bbbc)
0xffff9148bba8    40  sub csp, jssp, #0x8 (8)
0xffff9148bbac    44  str lr, [jssp, #-8]!
0xffff9148bbb0    48  ldr x16, pc+80 (addr 0x0000ffff9148bc00)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9148bbb4    52  blr x16
0xffff9148bbb8    56  ldr lr, [jssp], #8
0xffff9148bbbc    60  stur x5, [x1, #-1]
0xffff9148bbc0    64  tbz w5, #0, #+0x34 (addr 0xffff9148bbf4)
0xffff9148bbc4    68  sub x2, x1, #0x1 (1)
0xffff9148bbc8    72  and x5, x5, #0xfffffffffff00000
0xffff9148bbcc    76  ldr x5, [x5, #8]
0xffff9148bbd0    80  tbz w5, #1, #+0x24 (addr 0xffff9148bbf4)
0xffff9148bbd4    84  and x5, x1, #0xfffffffffff00000
0xffff9148bbd8    88  ldr x5, [x5, #8]
0xffff9148bbdc    92  tbz w5, #2, #+0x18 (addr 0xffff9148bbf4)
0xffff9148bbe0    96  sub csp, jssp, #0x8 (8)
0xffff9148bbe4   100  str lr, [jssp, #-8]!
0xffff9148bbe8   104  ldr x16, pc+32 (addr 0x0000ffff9148bc08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9148bbec   108  blr x16
0xffff9148bbf0   112  ldr lr, [jssp], #8
0xffff9148bbf4   116  ret
0xffff9148bbf8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9148bbfc   124  d63f03e0       constant
0xffff9148bc00   128  914170c0       constant
0xffff9148bc04   132  0000ffff       constant
0xffff9148bc08   136  91438080       constant
0xffff9148bc0c   140  0000ffff       constant
0xffff9148bc10   144  movz x16, #0x0
0xffff9148bc14   148  sub csp, jssp, #0x10 (16)
0xffff9148bc18   152  stp fp, lr, [jssp, #-16]!
0xffff9148bc1c   156  bl #+0x4 (addr 0xffff9148bc20)
0xffff9148bc20   160  movz x17, #0xa00000000
0xffff9148bc24   164  sub csp, jssp, #0x10 (16)
0xffff9148bc28   168  stp x17, cp, [jssp, #-16]!
0xffff9148bc2c   172  add fp, jssp, #0x10 (16)
0xffff9148bc30   176  ldr x17, pc+24 (addr 0x0000ffff9148bc48)    ;; lazy deoptimization bailout 0
0xffff9148bc34   180  add x17, x17, x16
0xffff9148bc38   184  br x17
0xffff9148bc3c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9148bc40   192  d63f03e0       constant
0xffff9148bc44   196  d503201f       constant
0xffff9148bc48   200  91206000       constant
0xffff9148bc4c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff9148bbb0  code target (STUB)  (0xffff914170c0)
0xffff9148bbe8  code target (STUB)  (0xffff91438080)
0xffff9148bbf8  constant pool (size 24)
0xffff9148bc30  runtime entry
0xffff9148bc3c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = id
compiler = unknown
Instructions (size = 152)
0xffff9148bcc0     0  sub csp, jssp, #0x8 (8)
0xffff9148bcc4     4  str x3, [jssp, #-8]!
0xffff9148bcc8     8  sub csp, jssp, #0x8 (8)
0xffff9148bccc    12  str x4, [jssp, #-8]!
0xffff9148bcd0    16  ldr x3, pc+88 (addr 0x0000ffff9148bd28)    ;; object: 0x49bc7ba9 Cell for 0
0xffff9148bcd4    20  ldur x3, [x3, #7]
0xffff9148bcd8    24  cmp x3, #0x0 (0)
0xffff9148bcdc    28  b.ne #+0x30 (addr 0xffff9148bd0c)
0xffff9148bce0    32  tbz w0, #0, #+0x2c (addr 0xffff9148bd0c)
0xffff9148bce4    36  ldr x5, pc+76 (addr 0x0000ffff9148bd30)    ;; object: 0x49bc2231 WeakCell for 0x3641b331 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9148bce8    40  ldur x5, [x5, #7]
0xffff9148bcec    44  tbz w5, #0, #+0x20 (addr 0xffff9148bd0c)
0xffff9148bcf0    48  ldursw x4, [x5, #15]
0xffff9148bcf4    52  tbnz w4, #23, #+0x18 (addr 0xffff9148bd0c)
0xffff9148bcf8    56  ldr x4, [jssp], #8
0xffff9148bcfc    60  ldr x3, [jssp], #8
0xffff9148bd00    64  ldr x2, pc+56 (addr 0x0000ffff9148bd38)    ;; object: 0x49b4e919 <String[2]: id>
0xffff9148bd04    68  ldr x16, pc+60 (addr 0x0000ffff9148bd40)    ;; code: HANDLER, StoreTransitionStub, minor: 198660
0xffff9148bd08    72  br x16
0xffff9148bd0c    76  ldr x2, pc+60 (addr 0x0000ffff9148bd48)    ;; object: 0x49b4e919 <String[2]: id>
0xffff9148bd10    80  ldr x4, [jssp], #8
0xffff9148bd14    84  ldr x3, [jssp], #8
0xffff9148bd18    88  ldr x16, pc+56 (addr 0x0000ffff9148bd50)    ;; code: BUILTIN
0xffff9148bd1c    92  br x16
0xffff9148bd20    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9148bd24   100  d63f03e0       constant
0xffff9148bd28   104  49bc7ba9       constant
0xffff9148bd2c   108  00000000       constant
0xffff9148bd30   112  49bc2231       constant
0xffff9148bd34   116  00000000       constant
0xffff9148bd38   120  49b4e919       constant
0xffff9148bd3c   124  00000000       constant
0xffff9148bd40   128  9148bb80       constant
0xffff9148bd44   132  0000ffff       constant
0xffff9148bd48   136  49b4e919       constant
0xffff9148bd4c   140  00000000       constant
0xffff9148bd50   144  91422420       constant
0xffff9148bd54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff9148bcd0  embedded object  (0x49bc7ba9 Cell for 0)
0xffff9148bce4  embedded object  (0x49bc2231 WeakCell for 0x3641b331 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9148bd00  embedded object  (0x49b4e919 <String[2]: id>)
0xffff9148bd04  code target (HANDLER)  (0xffff9148bb80)
0xffff9148bd0c  embedded object  (0x49b4e919 <String[2]: id>)
0xffff9148bd18  code target (BUILTIN)  (0xffff91422420)
0xffff9148bd20  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff9148bdc0     0  tbz w0, #0, #+0x90 (addr 0xffff9148be50)
0xffff9148bdc4     4  mov x2, x0
0xffff9148bdc8     8  stur x2, [x1, #39]
0xffff9148bdcc    12  add x3, x1, #0x27 (39)
0xffff9148bdd0    16  and x2, x2, #0xfffffffffff00000
0xffff9148bdd4    20  ldr x2, [x2, #8]
0xffff9148bdd8    24  tbz w2, #1, #+0x24 (addr 0xffff9148bdfc)
0xffff9148bddc    28  and x2, x1, #0xfffffffffff00000
0xffff9148bde0    32  ldr x2, [x2, #8]
0xffff9148bde4    36  tbz w2, #2, #+0x18 (addr 0xffff9148bdfc)
0xffff9148bde8    40  sub csp, jssp, #0x8 (8)
0xffff9148bdec    44  str lr, [jssp, #-8]!
0xffff9148bdf0    48  ldr x16, pc+80 (addr 0x0000ffff9148be40)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9148bdf4    52  blr x16
0xffff9148bdf8    56  ldr lr, [jssp], #8
0xffff9148bdfc    60  stur x5, [x1, #-1]
0xffff9148be00    64  tbz w5, #0, #+0x34 (addr 0xffff9148be34)
0xffff9148be04    68  sub x2, x1, #0x1 (1)
0xffff9148be08    72  and x5, x5, #0xfffffffffff00000
0xffff9148be0c    76  ldr x5, [x5, #8]
0xffff9148be10    80  tbz w5, #1, #+0x24 (addr 0xffff9148be34)
0xffff9148be14    84  and x5, x1, #0xfffffffffff00000
0xffff9148be18    88  ldr x5, [x5, #8]
0xffff9148be1c    92  tbz w5, #2, #+0x18 (addr 0xffff9148be34)
0xffff9148be20    96  sub csp, jssp, #0x8 (8)
0xffff9148be24   100  str lr, [jssp, #-8]!
0xffff9148be28   104  ldr x16, pc+32 (addr 0x0000ffff9148be48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9148be2c   108  blr x16
0xffff9148be30   112  ldr lr, [jssp], #8
0xffff9148be34   116  ret
0xffff9148be38   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9148be3c   124  d63f03e0       constant
0xffff9148be40   128  914170c0       constant
0xffff9148be44   132  0000ffff       constant
0xffff9148be48   136  91438080       constant
0xffff9148be4c   140  0000ffff       constant
0xffff9148be50   144  movz x16, #0x0
0xffff9148be54   148  sub csp, jssp, #0x10 (16)
0xffff9148be58   152  stp fp, lr, [jssp, #-16]!
0xffff9148be5c   156  bl #+0x4 (addr 0xffff9148be60)
0xffff9148be60   160  movz x17, #0xa00000000
0xffff9148be64   164  sub csp, jssp, #0x10 (16)
0xffff9148be68   168  stp x17, cp, [jssp, #-16]!
0xffff9148be6c   172  add fp, jssp, #0x10 (16)
0xffff9148be70   176  ldr x17, pc+24 (addr 0x0000ffff9148be88)    ;; lazy deoptimization bailout 0
0xffff9148be74   180  add x17, x17, x16
0xffff9148be78   184  br x17
0xffff9148be7c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9148be80   192  d63f03e0       constant
0xffff9148be84   196  d503201f       constant
0xffff9148be88   200  91206000       constant
0xffff9148be8c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff9148bdf0  code target (STUB)  (0xffff914170c0)
0xffff9148be28  code target (STUB)  (0xffff91438080)
0xffff9148be38  constant pool (size 24)
0xffff9148be70  runtime entry
0xffff9148be7c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff9148bdc0     0  tbz w0, #0, #+0x90 (addr 0xffff9148be50)
0xffff9148bdc4     4  mov x2, x0
0xffff9148bdc8     8  stur x2, [x1, #39]
0xffff9148bdcc    12  add x3, x1, #0x27 (39)
0xffff9148bdd0    16  and x2, x2, #0xfffffffffff00000
0xffff9148bdd4    20  ldr x2, [x2, #8]
0xffff9148bdd8    24  tbz w2, #1, #+0x24 (addr 0xffff9148bdfc)
0xffff9148bddc    28  and x2, x1, #0xfffffffffff00000
0xffff9148bde0    32  ldr x2, [x2, #8]
0xffff9148bde4    36  tbz w2, #2, #+0x18 (addr 0xffff9148bdfc)
0xffff9148bde8    40  sub csp, jssp, #0x8 (8)
0xffff9148bdec    44  str lr, [jssp, #-8]!
0xffff9148bdf0    48  ldr x16, pc+80 (addr 0x0000ffff9148be40)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9148bdf4    52  blr x16
0xffff9148bdf8    56  ldr lr, [jssp], #8
0xffff9148bdfc    60  stur x5, [x1, #-1]
0xffff9148be00    64  tbz w5, #0, #+0x34 (addr 0xffff9148be34)
0xffff9148be04    68  sub x2, x1, #0x1 (1)
0xffff9148be08    72  and x5, x5, #0xfffffffffff00000
0xffff9148be0c    76  ldr x5, [x5, #8]
0xffff9148be10    80  tbz w5, #1, #+0x24 (addr 0xffff9148be34)
0xffff9148be14    84  and x5, x1, #0xfffffffffff00000
0xffff9148be18    88  ldr x5, [x5, #8]
0xffff9148be1c    92  tbz w5, #2, #+0x18 (addr 0xffff9148be34)
0xffff9148be20    96  sub csp, jssp, #0x8 (8)
0xffff9148be24   100  str lr, [jssp, #-8]!
0xffff9148be28   104  ldr x16, pc+32 (addr 0x0000ffff9148be48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9148be2c   108  blr x16
0xffff9148be30   112  ldr lr, [jssp], #8
0xffff9148be34   116  ret
0xffff9148be38   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9148be3c   124  d63f03e0       constant
0xffff9148be40   128  914170c0       constant
0xffff9148be44   132  0000ffff       constant
0xffff9148be48   136  91438080       constant
0xffff9148be4c   140  0000ffff       constant
0xffff9148be50   144  movz x16, #0x0
0xffff9148be54   148  sub csp, jssp, #0x10 (16)
0xffff9148be58   152  stp fp, lr, [jssp, #-16]!
0xffff9148be5c   156  bl #+0x4 (addr 0xffff9148be60)
0xffff9148be60   160  movz x17, #0xa00000000
0xffff9148be64   164  sub csp, jssp, #0x10 (16)
0xffff9148be68   168  stp x17, cp, [jssp, #-16]!
0xffff9148be6c   172  add fp, jssp, #0x10 (16)
0xffff9148be70   176  ldr x17, pc+24 (addr 0x0000ffff9148be88)    ;; lazy deoptimization bailout 0
0xffff9148be74   180  add x17, x17, x16
0xffff9148be78   184  br x17
0xffff9148be7c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9148be80   192  d63f03e0       constant
0xffff9148be84   196  d503201f       constant
0xffff9148be88   200  91206000       constant
0xffff9148be8c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff9148bdf0  code target (STUB)  (0xffff914170c0)
0xffff9148be28  code target (STUB)  (0xffff91438080)
0xffff9148be38  constant pool (size 24)
0xffff9148be70  runtime entry
0xffff9148be7c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = exports
compiler = unknown
Instructions (size = 152)
0xffff9148bf00     0  sub csp, jssp, #0x8 (8)
0xffff9148bf04     4  str x3, [jssp, #-8]!
0xffff9148bf08     8  sub csp, jssp, #0x8 (8)
0xffff9148bf0c    12  str x4, [jssp, #-8]!
0xffff9148bf10    16  ldr x3, pc+88 (addr 0x0000ffff9148bf68)    ;; object: 0x49bc7ba9 Cell for 0
0xffff9148bf14    20  ldur x3, [x3, #7]
0xffff9148bf18    24  cmp x3, #0x0 (0)
0xffff9148bf1c    28  b.ne #+0x30 (addr 0xffff9148bf4c)
0xffff9148bf20    32  tbz w0, #0, #+0x2c (addr 0xffff9148bf4c)
0xffff9148bf24    36  ldr x5, pc+76 (addr 0x0000ffff9148bf70)    ;; object: 0x49bc2281 WeakCell for 0x3641b389 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9148bf28    40  ldur x5, [x5, #7]
0xffff9148bf2c    44  tbz w5, #0, #+0x20 (addr 0xffff9148bf4c)
0xffff9148bf30    48  ldursw x4, [x5, #15]
0xffff9148bf34    52  tbnz w4, #23, #+0x18 (addr 0xffff9148bf4c)
0xffff9148bf38    56  ldr x4, [jssp], #8
0xffff9148bf3c    60  ldr x3, [jssp], #8
0xffff9148bf40    64  ldr x2, pc+56 (addr 0x0000ffff9148bf78)    ;; object: 0x49bb2651 <String[7]: exports>
0xffff9148bf44    68  ldr x16, pc+60 (addr 0x0000ffff9148bf80)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff9148bf48    72  br x16
0xffff9148bf4c    76  ldr x2, pc+60 (addr 0x0000ffff9148bf88)    ;; object: 0x49bb2651 <String[7]: exports>
0xffff9148bf50    80  ldr x4, [jssp], #8
0xffff9148bf54    84  ldr x3, [jssp], #8
0xffff9148bf58    88  ldr x16, pc+56 (addr 0x0000ffff9148bf90)    ;; code: BUILTIN
0xffff9148bf5c    92  br x16
0xffff9148bf60    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9148bf64   100  d63f03e0       constant
0xffff9148bf68   104  49bc7ba9       constant
0xffff9148bf6c   108  00000000       constant
0xffff9148bf70   112  49bc2281       constant
0xffff9148bf74   116  00000000       constant
0xffff9148bf78   120  49bb2651       constant
0xffff9148bf7c   124  00000000       constant
0xffff9148bf80   128  9148bdc0       constant
0xffff9148bf84   132  0000ffff       constant
0xffff9148bf88   136  49bb2651       constant
0xffff9148bf8c   140  00000000       constant
0xffff9148bf90   144  91422420       constant
0xffff9148bf94   148  0000ffff       constant


RelocInfo (size = 12)
0xffff9148bf10  embedded object  (0x49bc7ba9 Cell for 0)
0xffff9148bf24  embedded object  (0x49bc2281 WeakCell for 0x3641b389 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9148bf40  embedded object  (0x49bb2651 <String[7]: exports>)
0xffff9148bf44  code target (HANDLER)  (0xffff9148bdc0)
0xffff9148bf4c  embedded object  (0x49bb2651 <String[7]: exports>)
0xffff9148bf58  code target (BUILTIN)  (0xffff91422420)
0xffff9148bf60  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff9148c000     0  tbz w0, #0, #+0x90 (addr 0xffff9148c090)
0xffff9148c004     4  mov x2, x0
0xffff9148c008     8  stur x2, [x1, #47]
0xffff9148c00c    12  add x3, x1, #0x2f (47)
0xffff9148c010    16  and x2, x2, #0xfffffffffff00000
0xffff9148c014    20  ldr x2, [x2, #8]
0xffff9148c018    24  tbz w2, #1, #+0x24 (addr 0xffff9148c03c)
0xffff9148c01c    28  and x2, x1, #0xfffffffffff00000
0xffff9148c020    32  ldr x2, [x2, #8]
0xffff9148c024    36  tbz w2, #2, #+0x18 (addr 0xffff9148c03c)
0xffff9148c028    40  sub csp, jssp, #0x8 (8)
0xffff9148c02c    44  str lr, [jssp, #-8]!
0xffff9148c030    48  ldr x16, pc+80 (addr 0x0000ffff9148c080)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9148c034    52  blr x16
0xffff9148c038    56  ldr lr, [jssp], #8
0xffff9148c03c    60  stur x5, [x1, #-1]
0xffff9148c040    64  tbz w5, #0, #+0x34 (addr 0xffff9148c074)
0xffff9148c044    68  sub x2, x1, #0x1 (1)
0xffff9148c048    72  and x5, x5, #0xfffffffffff00000
0xffff9148c04c    76  ldr x5, [x5, #8]
0xffff9148c050    80  tbz w5, #1, #+0x24 (addr 0xffff9148c074)
0xffff9148c054    84  and x5, x1, #0xfffffffffff00000
0xffff9148c058    88  ldr x5, [x5, #8]
0xffff9148c05c    92  tbz w5, #2, #+0x18 (addr 0xffff9148c074)
0xffff9148c060    96  sub csp, jssp, #0x8 (8)
0xffff9148c064   100  str lr, [jssp, #-8]!
0xffff9148c068   104  ldr x16, pc+32 (addr 0x0000ffff9148c088)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9148c06c   108  blr x16
0xffff9148c070   112  ldr lr, [jssp], #8
0xffff9148c074   116  ret
0xffff9148c078   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9148c07c   124  d63f03e0       constant
0xffff9148c080   128  914170c0       constant
0xffff9148c084   132  0000ffff       constant
0xffff9148c088   136  91438080       constant
0xffff9148c08c   140  0000ffff       constant
0xffff9148c090   144  movz x16, #0x0
0xffff9148c094   148  sub csp, jssp, #0x10 (16)
0xffff9148c098   152  stp fp, lr, [jssp, #-16]!
0xffff9148c09c   156  bl #+0x4 (addr 0xffff9148c0a0)
0xffff9148c0a0   160  movz x17, #0xa00000000
0xffff9148c0a4   164  sub csp, jssp, #0x10 (16)
0xffff9148c0a8   168  stp x17, cp, [jssp, #-16]!
0xffff9148c0ac   172  add fp, jssp, #0x10 (16)
0xffff9148c0b0   176  ldr x17, pc+24 (addr 0x0000ffff9148c0c8)    ;; lazy deoptimization bailout 0
0xffff9148c0b4   180  add x17, x17, x16
0xffff9148c0b8   184  br x17
0xffff9148c0bc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9148c0c0   192  d63f03e0       constant
0xffff9148c0c4   196  d503201f       constant
0xffff9148c0c8   200  91206000       constant
0xffff9148c0cc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff9148c030  code target (STUB)  (0xffff914170c0)
0xffff9148c068  code target (STUB)  (0xffff91438080)
0xffff9148c078  constant pool (size 24)
0xffff9148c0b0  runtime entry
0xffff9148c0bc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff9148c000     0  tbz w0, #0, #+0x90 (addr 0xffff9148c090)
0xffff9148c004     4  mov x2, x0
0xffff9148c008     8  stur x2, [x1, #47]
0xffff9148c00c    12  add x3, x1, #0x2f (47)
0xffff9148c010    16  and x2, x2, #0xfffffffffff00000
0xffff9148c014    20  ldr x2, [x2, #8]
0xffff9148c018    24  tbz w2, #1, #+0x24 (addr 0xffff9148c03c)
0xffff9148c01c    28  and x2, x1, #0xfffffffffff00000
0xffff9148c020    32  ldr x2, [x2, #8]
0xffff9148c024    36  tbz w2, #2, #+0x18 (addr 0xffff9148c03c)
0xffff9148c028    40  sub csp, jssp, #0x8 (8)
0xffff9148c02c    44  str lr, [jssp, #-8]!
0xffff9148c030    48  ldr x16, pc+80 (addr 0x0000ffff9148c080)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9148c034    52  blr x16
0xffff9148c038    56  ldr lr, [jssp], #8
0xffff9148c03c    60  stur x5, [x1, #-1]
0xffff9148c040    64  tbz w5, #0, #+0x34 (addr 0xffff9148c074)
0xffff9148c044    68  sub x2, x1, #0x1 (1)
0xffff9148c048    72  and x5, x5, #0xfffffffffff00000
0xffff9148c04c    76  ldr x5, [x5, #8]
0xffff9148c050    80  tbz w5, #1, #+0x24 (addr 0xffff9148c074)
0xffff9148c054    84  and x5, x1, #0xfffffffffff00000
0xffff9148c058    88  ldr x5, [x5, #8]
0xffff9148c05c    92  tbz w5, #2, #+0x18 (addr 0xffff9148c074)
0xffff9148c060    96  sub csp, jssp, #0x8 (8)
0xffff9148c064   100  str lr, [jssp, #-8]!
0xffff9148c068   104  ldr x16, pc+32 (addr 0x0000ffff9148c088)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9148c06c   108  blr x16
0xffff9148c070   112  ldr lr, [jssp], #8
0xffff9148c074   116  ret
0xffff9148c078   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9148c07c   124  d63f03e0       constant
0xffff9148c080   128  914170c0       constant
0xffff9148c084   132  0000ffff       constant
0xffff9148c088   136  91438080       constant
0xffff9148c08c   140  0000ffff       constant
0xffff9148c090   144  movz x16, #0x0
0xffff9148c094   148  sub csp, jssp, #0x10 (16)
0xffff9148c098   152  stp fp, lr, [jssp, #-16]!
0xffff9148c09c   156  bl #+0x4 (addr 0xffff9148c0a0)
0xffff9148c0a0   160  movz x17, #0xa00000000
0xffff9148c0a4   164  sub csp, jssp, #0x10 (16)
0xffff9148c0a8   168  stp x17, cp, [jssp, #-16]!
0xffff9148c0ac   172  add fp, jssp, #0x10 (16)
0xffff9148c0b0   176  ldr x17, pc+24 (addr 0x0000ffff9148c0c8)    ;; lazy deoptimization bailout 0
0xffff9148c0b4   180  add x17, x17, x16
0xffff9148c0b8   184  br x17
0xffff9148c0bc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9148c0c0   192  d63f03e0       constant
0xffff9148c0c4   196  d503201f       constant
0xffff9148c0c8   200  91206000       constant
0xffff9148c0cc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff9148c030  code target (STUB)  (0xffff914170c0)
0xffff9148c068  code target (STUB)  (0xffff91438080)
0xffff9148c078  constant pool (size 24)
0xffff9148c0b0  runtime entry
0xffff9148c0bc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = loaded
compiler = unknown
Instructions (size = 152)
0xffff9148c140     0  sub csp, jssp, #0x8 (8)
0xffff9148c144     4  str x3, [jssp, #-8]!
0xffff9148c148     8  sub csp, jssp, #0x8 (8)
0xffff9148c14c    12  str x4, [jssp, #-8]!
0xffff9148c150    16  ldr x3, pc+88 (addr 0x0000ffff9148c1a8)    ;; object: 0x49bc7ba9 Cell for 0
0xffff9148c154    20  ldur x3, [x3, #7]
0xffff9148c158    24  cmp x3, #0x0 (0)
0xffff9148c15c    28  b.ne #+0x30 (addr 0xffff9148c18c)
0xffff9148c160    32  tbz w0, #0, #+0x2c (addr 0xffff9148c18c)
0xffff9148c164    36  ldr x5, pc+76 (addr 0x0000ffff9148c1b0)    ;; object: 0x49bc2299 WeakCell for 0x3641b3e1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9148c168    40  ldur x5, [x5, #7]
0xffff9148c16c    44  tbz w5, #0, #+0x20 (addr 0xffff9148c18c)
0xffff9148c170    48  ldursw x4, [x5, #15]
0xffff9148c174    52  tbnz w4, #23, #+0x18 (addr 0xffff9148c18c)
0xffff9148c178    56  ldr x4, [jssp], #8
0xffff9148c17c    60  ldr x3, [jssp], #8
0xffff9148c180    64  ldr x2, pc+56 (addr 0x0000ffff9148c1b8)    ;; object: 0x49bba9e1 <String[6]: loaded>
0xffff9148c184    68  ldr x16, pc+60 (addr 0x0000ffff9148c1c0)    ;; code: HANDLER, StoreTransitionStub, minor: 198662
0xffff9148c188    72  br x16
0xffff9148c18c    76  ldr x2, pc+60 (addr 0x0000ffff9148c1c8)    ;; object: 0x49bba9e1 <String[6]: loaded>
0xffff9148c190    80  ldr x4, [jssp], #8
0xffff9148c194    84  ldr x3, [jssp], #8
0xffff9148c198    88  ldr x16, pc+56 (addr 0x0000ffff9148c1d0)    ;; code: BUILTIN
0xffff9148c19c    92  br x16
0xffff9148c1a0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9148c1a4   100  d63f03e0       constant
0xffff9148c1a8   104  49bc7ba9       constant
0xffff9148c1ac   108  00000000       constant
0xffff9148c1b0   112  49bc2299       constant
0xffff9148c1b4   116  00000000       constant
0xffff9148c1b8   120  49bba9e1       constant
0xffff9148c1bc   124  00000000       constant
0xffff9148c1c0   128  9148c000       constant
0xffff9148c1c4   132  0000ffff       constant
0xffff9148c1c8   136  49bba9e1       constant
0xffff9148c1cc   140  00000000       constant
0xffff9148c1d0   144  91422420       constant
0xffff9148c1d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff9148c150  embedded object  (0x49bc7ba9 Cell for 0)
0xffff9148c164  embedded object  (0x49bc2299 WeakCell for 0x3641b3e1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9148c180  embedded object  (0x49bba9e1 <String[6]: loaded>)
0xffff9148c184  code target (HANDLER)  (0xffff9148c000)
0xffff9148c18c  embedded object  (0x49bba9e1 <String[6]: loaded>)
0xffff9148c198  code target (BUILTIN)  (0xffff91422420)
0xffff9148c1a0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff9148c240     0  tbz w0, #0, #+0x90 (addr 0xffff9148c2d0)
0xffff9148c244     4  mov x2, x0
0xffff9148c248     8  stur x2, [x1, #55]
0xffff9148c24c    12  add x3, x1, #0x37 (55)
0xffff9148c250    16  and x2, x2, #0xfffffffffff00000
0xffff9148c254    20  ldr x2, [x2, #8]
0xffff9148c258    24  tbz w2, #1, #+0x24 (addr 0xffff9148c27c)
0xffff9148c25c    28  and x2, x1, #0xfffffffffff00000
0xffff9148c260    32  ldr x2, [x2, #8]
0xffff9148c264    36  tbz w2, #2, #+0x18 (addr 0xffff9148c27c)
0xffff9148c268    40  sub csp, jssp, #0x8 (8)
0xffff9148c26c    44  str lr, [jssp, #-8]!
0xffff9148c270    48  ldr x16, pc+80 (addr 0x0000ffff9148c2c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9148c274    52  blr x16
0xffff9148c278    56  ldr lr, [jssp], #8
0xffff9148c27c    60  stur x5, [x1, #-1]
0xffff9148c280    64  tbz w5, #0, #+0x34 (addr 0xffff9148c2b4)
0xffff9148c284    68  sub x2, x1, #0x1 (1)
0xffff9148c288    72  and x5, x5, #0xfffffffffff00000
0xffff9148c28c    76  ldr x5, [x5, #8]
0xffff9148c290    80  tbz w5, #1, #+0x24 (addr 0xffff9148c2b4)
0xffff9148c294    84  and x5, x1, #0xfffffffffff00000
0xffff9148c298    88  ldr x5, [x5, #8]
0xffff9148c29c    92  tbz w5, #2, #+0x18 (addr 0xffff9148c2b4)
0xffff9148c2a0    96  sub csp, jssp, #0x8 (8)
0xffff9148c2a4   100  str lr, [jssp, #-8]!
0xffff9148c2a8   104  ldr x16, pc+32 (addr 0x0000ffff9148c2c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9148c2ac   108  blr x16
0xffff9148c2b0   112  ldr lr, [jssp], #8
0xffff9148c2b4   116  ret
0xffff9148c2b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9148c2bc   124  d63f03e0       constant
0xffff9148c2c0   128  914170c0       constant
0xffff9148c2c4   132  0000ffff       constant
0xffff9148c2c8   136  91438080       constant
0xffff9148c2cc   140  0000ffff       constant
0xffff9148c2d0   144  movz x16, #0x0
0xffff9148c2d4   148  sub csp, jssp, #0x10 (16)
0xffff9148c2d8   152  stp fp, lr, [jssp, #-16]!
0xffff9148c2dc   156  bl #+0x4 (addr 0xffff9148c2e0)
0xffff9148c2e0   160  movz x17, #0xa00000000
0xffff9148c2e4   164  sub csp, jssp, #0x10 (16)
0xffff9148c2e8   168  stp x17, cp, [jssp, #-16]!
0xffff9148c2ec   172  add fp, jssp, #0x10 (16)
0xffff9148c2f0   176  ldr x17, pc+24 (addr 0x0000ffff9148c308)    ;; lazy deoptimization bailout 0
0xffff9148c2f4   180  add x17, x17, x16
0xffff9148c2f8   184  br x17
0xffff9148c2fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9148c300   192  d63f03e0       constant
0xffff9148c304   196  d503201f       constant
0xffff9148c308   200  91206000       constant
0xffff9148c30c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff9148c270  code target (STUB)  (0xffff914170c0)
0xffff9148c2a8  code target (STUB)  (0xffff91438080)
0xffff9148c2b8  constant pool (size 24)
0xffff9148c2f0  runtime entry
0xffff9148c2fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff9148c240     0  tbz w0, #0, #+0x90 (addr 0xffff9148c2d0)
0xffff9148c244     4  mov x2, x0
0xffff9148c248     8  stur x2, [x1, #55]
0xffff9148c24c    12  add x3, x1, #0x37 (55)
0xffff9148c250    16  and x2, x2, #0xfffffffffff00000
0xffff9148c254    20  ldr x2, [x2, #8]
0xffff9148c258    24  tbz w2, #1, #+0x24 (addr 0xffff9148c27c)
0xffff9148c25c    28  and x2, x1, #0xfffffffffff00000
0xffff9148c260    32  ldr x2, [x2, #8]
0xffff9148c264    36  tbz w2, #2, #+0x18 (addr 0xffff9148c27c)
0xffff9148c268    40  sub csp, jssp, #0x8 (8)
0xffff9148c26c    44  str lr, [jssp, #-8]!
0xffff9148c270    48  ldr x16, pc+80 (addr 0x0000ffff9148c2c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9148c274    52  blr x16
0xffff9148c278    56  ldr lr, [jssp], #8
0xffff9148c27c    60  stur x5, [x1, #-1]
0xffff9148c280    64  tbz w5, #0, #+0x34 (addr 0xffff9148c2b4)
0xffff9148c284    68  sub x2, x1, #0x1 (1)
0xffff9148c288    72  and x5, x5, #0xfffffffffff00000
0xffff9148c28c    76  ldr x5, [x5, #8]
0xffff9148c290    80  tbz w5, #1, #+0x24 (addr 0xffff9148c2b4)
0xffff9148c294    84  and x5, x1, #0xfffffffffff00000
0xffff9148c298    88  ldr x5, [x5, #8]
0xffff9148c29c    92  tbz w5, #2, #+0x18 (addr 0xffff9148c2b4)
0xffff9148c2a0    96  sub csp, jssp, #0x8 (8)
0xffff9148c2a4   100  str lr, [jssp, #-8]!
0xffff9148c2a8   104  ldr x16, pc+32 (addr 0x0000ffff9148c2c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9148c2ac   108  blr x16
0xffff9148c2b0   112  ldr lr, [jssp], #8
0xffff9148c2b4   116  ret
0xffff9148c2b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff9148c2bc   124  d63f03e0       constant
0xffff9148c2c0   128  914170c0       constant
0xffff9148c2c4   132  0000ffff       constant
0xffff9148c2c8   136  91438080       constant
0xffff9148c2cc   140  0000ffff       constant
0xffff9148c2d0   144  movz x16, #0x0
0xffff9148c2d4   148  sub csp, jssp, #0x10 (16)
0xffff9148c2d8   152  stp fp, lr, [jssp, #-16]!
0xffff9148c2dc   156  bl #+0x4 (addr 0xffff9148c2e0)
0xffff9148c2e0   160  movz x17, #0xa00000000
0xffff9148c2e4   164  sub csp, jssp, #0x10 (16)
0xffff9148c2e8   168  stp x17, cp, [jssp, #-16]!
0xffff9148c2ec   172  add fp, jssp, #0x10 (16)
0xffff9148c2f0   176  ldr x17, pc+24 (addr 0x0000ffff9148c308)    ;; lazy deoptimization bailout 0
0xffff9148c2f4   180  add x17, x17, x16
0xffff9148c2f8   184  br x17
0xffff9148c2fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9148c300   192  d63f03e0       constant
0xffff9148c304   196  d503201f       constant
0xffff9148c308   200  91206000       constant
0xffff9148c30c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff9148c270  code target (STUB)  (0xffff914170c0)
0xffff9148c2a8  code target (STUB)  (0xffff91438080)
0xffff9148c2b8  constant pool (size 24)
0xffff9148c2f0  runtime entry
0xffff9148c2fc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = loading
compiler = unknown
Instructions (size = 152)
0xffff9148c380     0  sub csp, jssp, #0x8 (8)
0xffff9148c384     4  str x3, [jssp, #-8]!
0xffff9148c388     8  sub csp, jssp, #0x8 (8)
0xffff9148c38c    12  str x4, [jssp, #-8]!
0xffff9148c390    16  ldr x3, pc+88 (addr 0x0000ffff9148c3e8)    ;; object: 0x49bc7ba9 Cell for 0
0xffff9148c394    20  ldur x3, [x3, #7]
0xffff9148c398    24  cmp x3, #0x0 (0)
0xffff9148c39c    28  b.ne #+0x30 (addr 0xffff9148c3cc)
0xffff9148c3a0    32  tbz w0, #0, #+0x2c (addr 0xffff9148c3cc)
0xffff9148c3a4    36  ldr x5, pc+76 (addr 0x0000ffff9148c3f0)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9148c3a8    40  ldur x5, [x5, #7]
0xffff9148c3ac    44  tbz w5, #0, #+0x20 (addr 0xffff9148c3cc)
0xffff9148c3b0    48  ldursw x4, [x5, #15]
0xffff9148c3b4    52  tbnz w4, #23, #+0x18 (addr 0xffff9148c3cc)
0xffff9148c3b8    56  ldr x4, [jssp], #8
0xffff9148c3bc    60  ldr x3, [jssp], #8
0xffff9148c3c0    64  ldr x2, pc+56 (addr 0x0000ffff9148c3f8)    ;; object: 0x49bbaa01 <String[7]: loading>
0xffff9148c3c4    68  ldr x16, pc+60 (addr 0x0000ffff9148c400)    ;; code: HANDLER, StoreTransitionStub, minor: 198663
0xffff9148c3c8    72  br x16
0xffff9148c3cc    76  ldr x2, pc+60 (addr 0x0000ffff9148c408)    ;; object: 0x49bbaa01 <String[7]: loading>
0xffff9148c3d0    80  ldr x4, [jssp], #8
0xffff9148c3d4    84  ldr x3, [jssp], #8
0xffff9148c3d8    88  ldr x16, pc+56 (addr 0x0000ffff9148c410)    ;; code: BUILTIN
0xffff9148c3dc    92  br x16
0xffff9148c3e0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9148c3e4   100  d63f03e0       constant
0xffff9148c3e8   104  49bc7ba9       constant
0xffff9148c3ec   108  00000000       constant
0xffff9148c3f0   112  49bc22b1       constant
0xffff9148c3f4   116  00000000       constant
0xffff9148c3f8   120  49bbaa01       constant
0xffff9148c3fc   124  00000000       constant
0xffff9148c400   128  9148c240       constant
0xffff9148c404   132  0000ffff       constant
0xffff9148c408   136  49bbaa01       constant
0xffff9148c40c   140  00000000       constant
0xffff9148c410   144  91422420       constant
0xffff9148c414   148  0000ffff       constant


RelocInfo (size = 12)
0xffff9148c390  embedded object  (0x49bc7ba9 Cell for 0)
0xffff9148c3a4  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9148c3c0  embedded object  (0x49bbaa01 <String[7]: loading>)
0xffff9148c3c4  code target (HANDLER)  (0xffff9148c240)
0xffff9148c3cc  embedded object  (0x49bbaa01 <String[7]: loading>)
0xffff9148c3d8  code target (BUILTIN)  (0xffff91422420)
0xffff9148c3e0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = cache
compiler = unknown
Instructions (size = 120)
0xffff9148c480     0  sub csp, jssp, #0x8 (8)
0xffff9148c484     4  str x3, [jssp, #-8]!
0xffff9148c488     8  sub csp, jssp, #0x8 (8)
0xffff9148c48c    12  str x0, [jssp, #-8]!
0xffff9148c490    16  ldr x0, pc+72 (addr 0x0000ffff9148c4d8)    ;; object: 0x49bc7ba9 Cell for 0
0xffff9148c494    20  ldur x0, [x0, #7]
0xffff9148c498    24  cmp x0, #0x0 (0)
0xffff9148c49c    28  b.ne #+0x14 (addr 0xffff9148c4b0)
0xffff9148c4a0    32  ldr x3, pc+64 (addr 0x0000ffff9148c4e0)    ;; object: 0x49bc8009 WeakCell for 0x26aa3531 <an Object with map 0x3641b229>
0xffff9148c4a4    36  ldur x3, [x3, #7]
0xffff9148c4a8    40  tbz w3, #0, #+0x8 (addr 0xffff9148c4b0)
0xffff9148c4ac    44  b #+0x14 (addr 0xffff9148c4c0)
0xffff9148c4b0    48  ldr x0, [jssp], #8
0xffff9148c4b4    52  ldr x3, [jssp], #8
0xffff9148c4b8    56  ldr x16, pc+48 (addr 0x0000ffff9148c4e8)    ;; code: BUILTIN
0xffff9148c4bc    60  br x16
0xffff9148c4c0    64  add jssp, jssp, #0x10 (16)
0xffff9148c4c4    68  mov x1, x3
0xffff9148c4c8    72  ldr x16, pc+40 (addr 0x0000ffff9148c4f0)    ;; code: HANDLER, LoadConstantStub, minor: 2
0xffff9148c4cc    76  br x16
0xffff9148c4d0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff9148c4d4    84  d63f03e0       constant
0xffff9148c4d8    88  49bc7ba9       constant
0xffff9148c4dc    92  00000000       constant
0xffff9148c4e0    96  49bc8009       constant
0xffff9148c4e4   100  00000000       constant
0xffff9148c4e8   104  914222e0       constant
0xffff9148c4ec   108  0000ffff       constant
0xffff9148c4f0   112  91443380       constant
0xffff9148c4f4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff9148c490  embedded object  (0x49bc7ba9 Cell for 0)
0xffff9148c4a0  embedded object  (0x49bc8009 WeakCell for 0x26aa3531 <an Object with map 0x3641b229>)
0xffff9148c4b8  code target (BUILTIN)  (0xffff914222e0)
0xffff9148c4c8  code target (HANDLER)  (0xffff91443380)
0xffff9148c4d0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = util
compiler = unknown
Instructions (size = 184)
0xffff9148c560     0  sub csp, jssp, #0x8 (8)
0xffff9148c564     4  str x3, [jssp, #-8]!
0xffff9148c568     8  sub csp, jssp, #0x8 (8)
0xffff9148c56c    12  str x4, [jssp, #-8]!
0xffff9148c570    16  ldr x3, pc+112 (addr 0x0000ffff9148c5e0)    ;; object: 0x49b63e59 Cell for 0
0xffff9148c574    20  ldur x3, [x3, #7]
0xffff9148c578    24  cmp x3, #0x0 (0)
0xffff9148c57c    28  b.ne #+0x44 (addr 0xffff9148c5c0)
0xffff9148c580    32  tbz w0, #0, #+0x40 (addr 0xffff9148c5c0)
0xffff9148c584    36  ldur x3, [x0, #-1]
0xffff9148c588    40  ldr x4, pc+96 (addr 0x0000ffff9148c5e8)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9148c58c    44  ldur x4, [x4, #7]
0xffff9148c590    48  cmp x3, x4
0xffff9148c594    52  b.ne #+0x2c (addr 0xffff9148c5c0)
0xffff9148c598    56  ldr x5, pc+88 (addr 0x0000ffff9148c5f0)    ;; object: 0x49bc8071 WeakCell for 0x3641c1f9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9148c59c    60  ldur x5, [x5, #7]
0xffff9148c5a0    64  tbz w5, #0, #+0x20 (addr 0xffff9148c5c0)
0xffff9148c5a4    68  ldursw x4, [x5, #15]
0xffff9148c5a8    72  tbnz w4, #23, #+0x18 (addr 0xffff9148c5c0)
0xffff9148c5ac    76  ldr x4, [jssp], #8
0xffff9148c5b0    80  ldr x3, [jssp], #8
0xffff9148c5b4    84  ldr x2, pc+68 (addr 0x0000ffff9148c5f8)    ;; object: 0x49bba081 <String[4]: util>
0xffff9148c5b8    88  ldr x16, pc+72 (addr 0x0000ffff9148c600)    ;; code: HANDLER, StoreTransitionStub, minor: 198660
0xffff9148c5bc    92  br x16
0xffff9148c5c0    96  ldr x2, pc+72 (addr 0x0000ffff9148c608)    ;; object: 0x49bba081 <String[4]: util>
0xffff9148c5c4   100  ldr x4, [jssp], #8
0xffff9148c5c8   104  ldr x3, [jssp], #8
0xffff9148c5cc   108  ldr x16, pc+68 (addr 0x0000ffff9148c610)    ;; code: BUILTIN
0xffff9148c5d0   112  br x16
0xffff9148c5d4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff9148c5d8   120  d63f03e0       constant
0xffff9148c5dc   124  d503201f       constant
0xffff9148c5e0   128  49b63e59       constant
0xffff9148c5e4   132  00000000       constant
0xffff9148c5e8   136  49bc22b1       constant
0xffff9148c5ec   140  00000000       constant
0xffff9148c5f0   144  49bc8071       constant
0xffff9148c5f4   148  00000000       constant
0xffff9148c5f8   152  49bba081       constant
0xffff9148c5fc   156  00000000       constant
0xffff9148c600   160  9148bb80       constant
0xffff9148c604   164  0000ffff       constant
0xffff9148c608   168  49bba081       constant
0xffff9148c60c   172  00000000       constant
0xffff9148c610   176  91422420       constant
0xffff9148c614   180  0000ffff       constant


RelocInfo (size = 13)
0xffff9148c570  embedded object  (0x49b63e59 Cell for 0)
0xffff9148c588  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9148c598  embedded object  (0x49bc8071 WeakCell for 0x3641c1f9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9148c5b4  embedded object  (0x49bba081 <String[4]: util>)
0xffff9148c5b8  code target (HANDLER)  (0xffff9148bb80)
0xffff9148c5c0  embedded object  (0x49bba081 <String[4]: util>)
0xffff9148c5cc  code target (BUILTIN)  (0xffff91422420)
0xffff9148c5d4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = compile
compiler = unknown
Instructions (size = 120)
0xffff9148c680     0  sub csp, jssp, #0x8 (8)
0xffff9148c684     4  str x3, [jssp, #-8]!
0xffff9148c688     8  sub csp, jssp, #0x8 (8)
0xffff9148c68c    12  str x0, [jssp, #-8]!
0xffff9148c690    16  ldr x0, pc+72 (addr 0x0000ffff9148c6d8)    ;; object: 0x49bc7ba9 Cell for 0
0xffff9148c694    20  ldur x0, [x0, #7]
0xffff9148c698    24  cmp x0, #0x0 (0)
0xffff9148c69c    28  b.ne #+0x14 (addr 0xffff9148c6b0)
0xffff9148c6a0    32  ldr x3, pc+64 (addr 0x0000ffff9148c6e0)    ;; object: 0x49bc80a9 WeakCell for 0x26aa3531 <an Object with map 0x3641b229>
0xffff9148c6a4    36  ldur x3, [x3, #7]
0xffff9148c6a8    40  tbz w3, #0, #+0x8 (addr 0xffff9148c6b0)
0xffff9148c6ac    44  b #+0x14 (addr 0xffff9148c6c0)
0xffff9148c6b0    48  ldr x0, [jssp], #8
0xffff9148c6b4    52  ldr x3, [jssp], #8
0xffff9148c6b8    56  ldr x16, pc+48 (addr 0x0000ffff9148c6e8)    ;; code: BUILTIN
0xffff9148c6bc    60  br x16
0xffff9148c6c0    64  add jssp, jssp, #0x10 (16)
0xffff9148c6c4    68  mov x1, x3
0xffff9148c6c8    72  ldr x16, pc+40 (addr 0x0000ffff9148c6f0)    ;; code: HANDLER, LoadConstantStub, minor: 1
0xffff9148c6cc    76  br x16
0xffff9148c6d0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff9148c6d4    84  d63f03e0       constant
0xffff9148c6d8    88  49bc7ba9       constant
0xffff9148c6dc    92  00000000       constant
0xffff9148c6e0    96  49bc80a9       constant
0xffff9148c6e4   100  00000000       constant
0xffff9148c6e8   104  914222e0       constant
0xffff9148c6ec   108  0000ffff       constant
0xffff9148c6f0   112  91443300       constant
0xffff9148c6f4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff9148c690  embedded object  (0x49bc7ba9 Cell for 0)
0xffff9148c6a0  embedded object  (0x49bc80a9 WeakCell for 0x26aa3531 <an Object with map 0x3641b229>)
0xffff9148c6b8  code target (BUILTIN)  (0xffff914222e0)
0xffff9148c6c8  code target (HANDLER)  (0xffff91443300)
0xffff9148c6d0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff9148c760     0  ldur x0, [x1, #-1]
0xffff9148c764     4  ldur x0, [x0, #47]
0xffff9148c768     8  movz x16, #0x11f
0xffff9148c76c    12  ldr x0, [x0, x16]
0xffff9148c770    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff9148c760     0  ldur x0, [x1, #-1]
0xffff9148c764     4  ldur x0, [x0, #47]
0xffff9148c768     8  movz x16, #0x11f
0xffff9148c76c    12  ldr x0, [x0, x16]
0xffff9148c770    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff9148c7e0     0  ldur x0, [x1, #-1]
0xffff9148c7e4     4  ldur x0, [x0, #47]
0xffff9148c7e8     8  movz x16, #0x137
0xffff9148c7ec    12  ldr x0, [x0, x16]
0xffff9148c7f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff9148c7e0     0  ldur x0, [x1, #-1]
0xffff9148c7e4     4  ldur x0, [x0, #47]
0xffff9148c7e8     8  movz x16, #0x137
0xffff9148c7ec    12  ldr x0, [x0, x16]
0xffff9148c7f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff9148c860     0  tbz w0, #0, #+0x50 (addr 0xffff9148c8b0)
0xffff9148c864     4  mov x2, x0
0xffff9148c868     8  stur x2, [x1, #55]
0xffff9148c86c    12  add x3, x1, #0x37 (55)
0xffff9148c870    16  and x2, x2, #0xfffffffffff00000
0xffff9148c874    20  ldr x2, [x2, #8]
0xffff9148c878    24  tbz w2, #1, #+0x24 (addr 0xffff9148c89c)
0xffff9148c87c    28  and x2, x1, #0xfffffffffff00000
0xffff9148c880    32  ldr x2, [x2, #8]
0xffff9148c884    36  tbz w2, #2, #+0x18 (addr 0xffff9148c89c)
0xffff9148c888    40  sub csp, jssp, #0x8 (8)
0xffff9148c88c    44  str lr, [jssp, #-8]!
0xffff9148c890    48  ldr x16, pc+24 (addr 0x0000ffff9148c8a8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9148c894    52  blr x16
0xffff9148c898    56  ldr lr, [jssp], #8
0xffff9148c89c    60  ret
0xffff9148c8a0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff9148c8a4    68  d63f03e0       constant
0xffff9148c8a8    72  914170c0       constant
0xffff9148c8ac    76  0000ffff       constant
0xffff9148c8b0    80  movz x16, #0x0
0xffff9148c8b4    84  sub csp, jssp, #0x10 (16)
0xffff9148c8b8    88  stp fp, lr, [jssp, #-16]!
0xffff9148c8bc    92  bl #+0x4 (addr 0xffff9148c8c0)
0xffff9148c8c0    96  movz x17, #0xa00000000
0xffff9148c8c4   100  sub csp, jssp, #0x10 (16)
0xffff9148c8c8   104  stp x17, cp, [jssp, #-16]!
0xffff9148c8cc   108  add fp, jssp, #0x10 (16)
0xffff9148c8d0   112  ldr x17, pc+24 (addr 0x0000ffff9148c8e8)    ;; lazy deoptimization bailout 0
0xffff9148c8d4   116  add x17, x17, x16
0xffff9148c8d8   120  br x17
0xffff9148c8dc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9148c8e0   128  d63f03e0       constant
0xffff9148c8e4   132  d503201f       constant
0xffff9148c8e8   136  91206000       constant
0xffff9148c8ec   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff9148c890  code target (STUB)  (0xffff914170c0)
0xffff9148c8a0  constant pool (size 16)
0xffff9148c8d0  runtime entry
0xffff9148c8dc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff9148c860     0  tbz w0, #0, #+0x50 (addr 0xffff9148c8b0)
0xffff9148c864     4  mov x2, x0
0xffff9148c868     8  stur x2, [x1, #55]
0xffff9148c86c    12  add x3, x1, #0x37 (55)
0xffff9148c870    16  and x2, x2, #0xfffffffffff00000
0xffff9148c874    20  ldr x2, [x2, #8]
0xffff9148c878    24  tbz w2, #1, #+0x24 (addr 0xffff9148c89c)
0xffff9148c87c    28  and x2, x1, #0xfffffffffff00000
0xffff9148c880    32  ldr x2, [x2, #8]
0xffff9148c884    36  tbz w2, #2, #+0x18 (addr 0xffff9148c89c)
0xffff9148c888    40  sub csp, jssp, #0x8 (8)
0xffff9148c88c    44  str lr, [jssp, #-8]!
0xffff9148c890    48  ldr x16, pc+24 (addr 0x0000ffff9148c8a8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9148c894    52  blr x16
0xffff9148c898    56  ldr lr, [jssp], #8
0xffff9148c89c    60  ret
0xffff9148c8a0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff9148c8a4    68  d63f03e0       constant
0xffff9148c8a8    72  914170c0       constant
0xffff9148c8ac    76  0000ffff       constant
0xffff9148c8b0    80  movz x16, #0x0
0xffff9148c8b4    84  sub csp, jssp, #0x10 (16)
0xffff9148c8b8    88  stp fp, lr, [jssp, #-16]!
0xffff9148c8bc    92  bl #+0x4 (addr 0xffff9148c8c0)
0xffff9148c8c0    96  movz x17, #0xa00000000
0xffff9148c8c4   100  sub csp, jssp, #0x10 (16)
0xffff9148c8c8   104  stp x17, cp, [jssp, #-16]!
0xffff9148c8cc   108  add fp, jssp, #0x10 (16)
0xffff9148c8d0   112  ldr x17, pc+24 (addr 0x0000ffff9148c8e8)    ;; lazy deoptimization bailout 0
0xffff9148c8d4   116  add x17, x17, x16
0xffff9148c8d8   120  br x17
0xffff9148c8dc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9148c8e0   128  d63f03e0       constant
0xffff9148c8e4   132  d503201f       constant
0xffff9148c8e8   136  91206000       constant
0xffff9148c8ec   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff9148c890  code target (STUB)  (0xffff914170c0)
0xffff9148c8a0  constant pool (size 16)
0xffff9148c8d0  runtime entry
0xffff9148c8dc  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff9148c960     0  tbz w0, #0, #+0x50 (addr 0xffff9148c9b0)
0xffff9148c964     4  mov x2, x0
0xffff9148c968     8  stur x2, [x1, #23]
0xffff9148c96c    12  add x3, x1, #0x17 (23)
0xffff9148c970    16  and x2, x2, #0xfffffffffff00000
0xffff9148c974    20  ldr x2, [x2, #8]
0xffff9148c978    24  tbz w2, #1, #+0x24 (addr 0xffff9148c99c)
0xffff9148c97c    28  and x2, x1, #0xfffffffffff00000
0xffff9148c980    32  ldr x2, [x2, #8]
0xffff9148c984    36  tbz w2, #2, #+0x18 (addr 0xffff9148c99c)
0xffff9148c988    40  sub csp, jssp, #0x8 (8)
0xffff9148c98c    44  str lr, [jssp, #-8]!
0xffff9148c990    48  ldr x16, pc+24 (addr 0x0000ffff9148c9a8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9148c994    52  blr x16
0xffff9148c998    56  ldr lr, [jssp], #8
0xffff9148c99c    60  ret
0xffff9148c9a0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff9148c9a4    68  d63f03e0       constant
0xffff9148c9a8    72  914170c0       constant
0xffff9148c9ac    76  0000ffff       constant
0xffff9148c9b0    80  movz x16, #0x0
0xffff9148c9b4    84  sub csp, jssp, #0x10 (16)
0xffff9148c9b8    88  stp fp, lr, [jssp, #-16]!
0xffff9148c9bc    92  bl #+0x4 (addr 0xffff9148c9c0)
0xffff9148c9c0    96  movz x17, #0xa00000000
0xffff9148c9c4   100  sub csp, jssp, #0x10 (16)
0xffff9148c9c8   104  stp x17, cp, [jssp, #-16]!
0xffff9148c9cc   108  add fp, jssp, #0x10 (16)
0xffff9148c9d0   112  ldr x17, pc+24 (addr 0x0000ffff9148c9e8)    ;; lazy deoptimization bailout 0
0xffff9148c9d4   116  add x17, x17, x16
0xffff9148c9d8   120  br x17
0xffff9148c9dc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9148c9e0   128  d63f03e0       constant
0xffff9148c9e4   132  d503201f       constant
0xffff9148c9e8   136  91206000       constant
0xffff9148c9ec   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff9148c990  code target (STUB)  (0xffff914170c0)
0xffff9148c9a0  constant pool (size 16)
0xffff9148c9d0  runtime entry
0xffff9148c9dc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff9148c960     0  tbz w0, #0, #+0x50 (addr 0xffff9148c9b0)
0xffff9148c964     4  mov x2, x0
0xffff9148c968     8  stur x2, [x1, #23]
0xffff9148c96c    12  add x3, x1, #0x17 (23)
0xffff9148c970    16  and x2, x2, #0xfffffffffff00000
0xffff9148c974    20  ldr x2, [x2, #8]
0xffff9148c978    24  tbz w2, #1, #+0x24 (addr 0xffff9148c99c)
0xffff9148c97c    28  and x2, x1, #0xfffffffffff00000
0xffff9148c980    32  ldr x2, [x2, #8]
0xffff9148c984    36  tbz w2, #2, #+0x18 (addr 0xffff9148c99c)
0xffff9148c988    40  sub csp, jssp, #0x8 (8)
0xffff9148c98c    44  str lr, [jssp, #-8]!
0xffff9148c990    48  ldr x16, pc+24 (addr 0x0000ffff9148c9a8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9148c994    52  blr x16
0xffff9148c998    56  ldr lr, [jssp], #8
0xffff9148c99c    60  ret
0xffff9148c9a0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff9148c9a4    68  d63f03e0       constant
0xffff9148c9a8    72  914170c0       constant
0xffff9148c9ac    76  0000ffff       constant
0xffff9148c9b0    80  movz x16, #0x0
0xffff9148c9b4    84  sub csp, jssp, #0x10 (16)
0xffff9148c9b8    88  stp fp, lr, [jssp, #-16]!
0xffff9148c9bc    92  bl #+0x4 (addr 0xffff9148c9c0)
0xffff9148c9c0    96  movz x17, #0xa00000000
0xffff9148c9c4   100  sub csp, jssp, #0x10 (16)
0xffff9148c9c8   104  stp x17, cp, [jssp, #-16]!
0xffff9148c9cc   108  add fp, jssp, #0x10 (16)
0xffff9148c9d0   112  ldr x17, pc+24 (addr 0x0000ffff9148c9e8)    ;; lazy deoptimization bailout 0
0xffff9148c9d4   116  add x17, x17, x16
0xffff9148c9d8   120  br x17
0xffff9148c9dc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9148c9e0   128  d63f03e0       constant
0xffff9148c9e4   132  d503201f       constant
0xffff9148c9e8   136  91206000       constant
0xffff9148c9ec   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff9148c990  code target (STUB)  (0xffff914170c0)
0xffff9148c9a0  constant pool (size 16)
0xffff9148c9d0  runtime entry
0xffff9148c9dc  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 941)
0xffff9148ca60     0  movz x2, #0xf2c0
0xffff9148ca64     4  movk x2, #0x4117, lsl #16
0xffff9148ca68     8  ldp x3, x0, [x2]
0xffff9148ca6c    12  adds x16, x3, #0x170 (368)
0xffff9148ca70    16  ccmp x16, x0, #nzCv, lo
0xffff9148ca74    20  b.hi #+0x1b0 (addr 0xffff9148cc24)
0xffff9148ca78    24  str x16, [x2]
0xffff9148ca7c    28  orr x3, x3, #0x1
0xffff9148ca80    32  ldr x0, pc+528 (addr 0x0000ffff9148cc90)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9148ca84    36  stur x0, [x3, #-1]
0xffff9148ca88    40  movz x0, #0x2c00000000
0xffff9148ca8c    44  stur x0, [x3, #7]
0xffff9148ca90    48  stur x1, [x3, #15]
0xffff9148ca94    52  stur cp, [x3, #23]
0xffff9148ca98    56  ldr x0, pc+512 (addr 0x0000ffff9148cc98)    ;; object: 0x49b04519 <the hole>
0xffff9148ca9c    60  stur x0, [x3, #31]
0xffff9148caa0    64  ldur x0, [cp, #39]
0xffff9148caa4    68  stur x0, [x3, #39]
0xffff9148caa8    72  ldr x0, pc+504 (addr 0x0000ffff9148cca0)    ;; object: 0x49b04241 <undefined>
0xffff9148caac    76  stur x0, [x3, #47]
0xffff9148cab0    80  ldr x0, pc+504 (addr 0x0000ffff9148cca8)    ;; object: 0x49b04241 <undefined>
0xffff9148cab4    84  stur x0, [x3, #55]
0xffff9148cab8    88  ldr x0, pc+504 (addr 0x0000ffff9148ccb0)    ;; object: 0x49b04241 <undefined>
0xffff9148cabc    92  stur x0, [x3, #63]
0xffff9148cac0    96  ldr x0, pc+504 (addr 0x0000ffff9148ccb8)    ;; object: 0x49b04241 <undefined>
0xffff9148cac4   100  stur x0, [x3, #71]
0xffff9148cac8   104  ldr x0, pc+504 (addr 0x0000ffff9148ccc0)    ;; object: 0x49b04241 <undefined>
0xffff9148cacc   108  stur x0, [x3, #79]
0xffff9148cad0   112  ldr x0, pc+504 (addr 0x0000ffff9148ccc8)    ;; object: 0x49b04241 <undefined>
0xffff9148cad4   116  stur x0, [x3, #87]
0xffff9148cad8   120  ldr x0, pc+504 (addr 0x0000ffff9148ccd0)    ;; object: 0x49b04241 <undefined>
0xffff9148cadc   124  stur x0, [x3, #95]
0xffff9148cae0   128  ldr x0, pc+504 (addr 0x0000ffff9148ccd8)    ;; object: 0x49b04241 <undefined>
0xffff9148cae4   132  stur x0, [x3, #103]
0xffff9148cae8   136  ldr x0, pc+504 (addr 0x0000ffff9148cce0)    ;; object: 0x49b04241 <undefined>
0xffff9148caec   140  stur x0, [x3, #111]
0xffff9148caf0   144  ldr x0, pc+504 (addr 0x0000ffff9148cce8)    ;; object: 0x49b04241 <undefined>
0xffff9148caf4   148  stur x0, [x3, #119]
0xffff9148caf8   152  ldr x0, pc+504 (addr 0x0000ffff9148ccf0)    ;; object: 0x49b04241 <undefined>
0xffff9148cafc   156  stur x0, [x3, #127]
0xffff9148cb00   160  ldr x0, pc+504 (addr 0x0000ffff9148ccf8)    ;; object: 0x49b04241 <undefined>
0xffff9148cb04   164  stur x0, [x3, #135]
0xffff9148cb08   168  ldr x0, pc+504 (addr 0x0000ffff9148cd00)    ;; object: 0x49b04241 <undefined>
0xffff9148cb0c   172  stur x0, [x3, #143]
0xffff9148cb10   176  ldr x0, pc+504 (addr 0x0000ffff9148cd08)    ;; object: 0x49b04241 <undefined>
0xffff9148cb14   180  stur x0, [x3, #151]
0xffff9148cb18   184  ldr x0, pc+504 (addr 0x0000ffff9148cd10)    ;; object: 0x49b04241 <undefined>
0xffff9148cb1c   188  stur x0, [x3, #159]
0xffff9148cb20   192  ldr x0, pc+504 (addr 0x0000ffff9148cd18)    ;; object: 0x49b04241 <undefined>
0xffff9148cb24   196  stur x0, [x3, #167]
0xffff9148cb28   200  ldr x0, pc+504 (addr 0x0000ffff9148cd20)    ;; object: 0x49b04241 <undefined>
0xffff9148cb2c   204  stur x0, [x3, #175]
0xffff9148cb30   208  ldr x0, pc+504 (addr 0x0000ffff9148cd28)    ;; object: 0x49b04241 <undefined>
0xffff9148cb34   212  stur x0, [x3, #183]
0xffff9148cb38   216  ldr x0, pc+504 (addr 0x0000ffff9148cd30)    ;; object: 0x49b04241 <undefined>
0xffff9148cb3c   220  stur x0, [x3, #191]
0xffff9148cb40   224  ldr x0, pc+504 (addr 0x0000ffff9148cd38)    ;; object: 0x49b04241 <undefined>
0xffff9148cb44   228  stur x0, [x3, #199]
0xffff9148cb48   232  ldr x0, pc+504 (addr 0x0000ffff9148cd40)    ;; object: 0x49b04241 <undefined>
0xffff9148cb4c   236  stur x0, [x3, #207]
0xffff9148cb50   240  ldr x0, pc+504 (addr 0x0000ffff9148cd48)    ;; object: 0x49b04241 <undefined>
0xffff9148cb54   244  stur x0, [x3, #215]
0xffff9148cb58   248  ldr x0, pc+504 (addr 0x0000ffff9148cd50)    ;; object: 0x49b04241 <undefined>
0xffff9148cb5c   252  stur x0, [x3, #223]
0xffff9148cb60   256  ldr x0, pc+504 (addr 0x0000ffff9148cd58)    ;; object: 0x49b04241 <undefined>
0xffff9148cb64   260  stur x0, [x3, #231]
0xffff9148cb68   264  ldr x0, pc+504 (addr 0x0000ffff9148cd60)    ;; object: 0x49b04241 <undefined>
0xffff9148cb6c   268  stur x0, [x3, #239]
0xffff9148cb70   272  ldr x0, pc+504 (addr 0x0000ffff9148cd68)    ;; object: 0x49b04241 <undefined>
0xffff9148cb74   276  stur x0, [x3, #247]
0xffff9148cb78   280  ldr x0, pc+504 (addr 0x0000ffff9148cd70)    ;; object: 0x49b04241 <undefined>
0xffff9148cb7c   284  stur x0, [x3, #255]
0xffff9148cb80   288  ldr x0, pc+504 (addr 0x0000ffff9148cd78)    ;; object: 0x49b04241 <undefined>
0xffff9148cb84   292  movz x16, #0x107
0xffff9148cb88   296  str x0, [x3, x16]
0xffff9148cb8c   300  ldr x0, pc+500 (addr 0x0000ffff9148cd80)    ;; object: 0x49b04241 <undefined>
0xffff9148cb90   304  movz x16, #0x10f
0xffff9148cb94   308  str x0, [x3, x16]
0xffff9148cb98   312  ldr x0, pc+496 (addr 0x0000ffff9148cd88)    ;; object: 0x49b04241 <undefined>
0xffff9148cb9c   316  movz x16, #0x117
0xffff9148cba0   320  str x0, [x3, x16]
0xffff9148cba4   324  ldr x0, pc+492 (addr 0x0000ffff9148cd90)    ;; object: 0x49b04241 <undefined>
0xffff9148cba8   328  movz x16, #0x11f
0xffff9148cbac   332  str x0, [x3, x16]
0xffff9148cbb0   336  ldr x0, pc+488 (addr 0x0000ffff9148cd98)    ;; object: 0x49b04241 <undefined>
0xffff9148cbb4   340  movz x16, #0x127
0xffff9148cbb8   344  str x0, [x3, x16]
0xffff9148cbbc   348  ldr x0, pc+484 (addr 0x0000ffff9148cda0)    ;; object: 0x49b04241 <undefined>
0xffff9148cbc0   352  movz x16, #0x12f
0xffff9148cbc4   356  str x0, [x3, x16]
0xffff9148cbc8   360  ldr x0, pc+480 (addr 0x0000ffff9148cda8)    ;; object: 0x49b04241 <undefined>
0xffff9148cbcc   364  movz x16, #0x137
0xffff9148cbd0   368  str x0, [x3, x16]
0xffff9148cbd4   372  ldr x0, pc+476 (addr 0x0000ffff9148cdb0)    ;; object: 0x49b04241 <undefined>
0xffff9148cbd8   376  movz x16, #0x13f
0xffff9148cbdc   380  str x0, [x3, x16]
0xffff9148cbe0   384  ldr x0, pc+472 (addr 0x0000ffff9148cdb8)    ;; object: 0x49b04241 <undefined>
0xffff9148cbe4   388  movz x16, #0x147
0xffff9148cbe8   392  str x0, [x3, x16]
0xffff9148cbec   396  ldr x0, pc+468 (addr 0x0000ffff9148cdc0)    ;; object: 0x49b04241 <undefined>
0xffff9148cbf0   400  movz x16, #0x14f
0xffff9148cbf4   404  str x0, [x3, x16]
0xffff9148cbf8   408  ldr x0, pc+464 (addr 0x0000ffff9148cdc8)    ;; object: 0x49b04241 <undefined>
0xffff9148cbfc   412  movz x16, #0x157
0xffff9148cc00   416  str x0, [x3, x16]
0xffff9148cc04   420  ldr x0, pc+460 (addr 0x0000ffff9148cdd0)    ;; object: 0x49b04241 <undefined>
0xffff9148cc08   424  movz x16, #0x15f
0xffff9148cc0c   428  str x0, [x3, x16]
0xffff9148cc10   432  ldr x0, pc+456 (addr 0x0000ffff9148cdd8)    ;; object: 0x49b04241 <undefined>
0xffff9148cc14   436  movz x16, #0x167
0xffff9148cc18   440  str x0, [x3, x16]
0xffff9148cc1c   444  mov x0, x3
0xffff9148cc20   448  ret
0xffff9148cc24   452  sub csp, jssp, #0x10 (16)
0xffff9148cc28   456  stp fp, lr, [jssp, #-16]!
0xffff9148cc2c   460  movz fp, #0xa00000000
0xffff9148cc30   464  sub csp, jssp, #0x8 (8)
0xffff9148cc34   468  str fp, [jssp, #-8]!
0xffff9148cc38   472  add fp, jssp, #0x8 (8)
0xffff9148cc3c   476  movz x3, #0x0
0xffff9148cc40   480  mov x16, lr
0xffff9148cc44   484  ldr x17, pc+412 (addr 0x0000ffff9148cde0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9148cc48   488  blr x17
0xffff9148cc4c   492  movz x0, #0x17000000000
0xffff9148cc50   496  movz x10, #0x0
0xffff9148cc54   500  sub csp, jssp, #0x10 (16)
0xffff9148cc58   504  stp x10, x0, [jssp, #-16]!
0xffff9148cc5c   508  movz x0, #0x2
0xffff9148cc60   512  movz x1, #0x5b88
0xffff9148cc64   516  movk x1, #0xe2, lsl #16
0xffff9148cc68   520  ldr x16, pc+384 (addr 0x0000ffff9148cde8)    ;; code: STUB, CEntryStub, minor: 5
0xffff9148cc6c   524  blr x16
0xffff9148cc70   528  str x0, [jssp, #24]
0xffff9148cc74   532  ldr x16, pc+380 (addr 0x0000ffff9148cdf0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9148cc78   536  blr x16
0xffff9148cc7c   540  ldr lr, [jssp, #16]
0xffff9148cc80   544  ldp xzr, fp, [jssp], #24
0xffff9148cc84   548  b #-0x204 (addr 0xffff9148ca80)
0xffff9148cc88   552  58000b7f       constant pool begin (num_const = 91)    ;; constant pool
0xffff9148cc8c   556  d63f03e0       constant
0xffff9148cc90   560  36406149       constant
0xffff9148cc94   564  00000000       constant
0xffff9148cc98   568  49b04519       constant
0xffff9148cc9c   572  00000000       constant
0xffff9148cca0   576  49b04241       constant
0xffff9148cca4   580  00000000       constant
0xffff9148cca8   584  49b04241       constant
0xffff9148ccac   588  00000000       constant
0xffff9148ccb0   592  49b04241       constant
0xffff9148ccb4   596  00000000       constant
0xffff9148ccb8   600  49b04241       constant
0xffff9148ccbc   604  00000000       constant
0xffff9148ccc0   608  49b04241       constant
0xffff9148ccc4   612  00000000       constant
0xffff9148ccc8   616  49b04241       constant
0xffff9148cccc   620  00000000       constant
0xffff9148ccd0   624  49b04241       constant
0xffff9148ccd4   628  00000000       constant
0xffff9148ccd8   632  49b04241       constant
0xffff9148ccdc   636  00000000       constant
0xffff9148cce0   640  49b04241       constant
0xffff9148cce4   644  00000000       constant
0xffff9148cce8   648  49b04241       constant
0xffff9148ccec   652  00000000       constant
0xffff9148ccf0   656  49b04241       constant
0xffff9148ccf4   660  00000000       constant
0xffff9148ccf8   664  49b04241       constant
0xffff9148ccfc   668  00000000       constant
0xffff9148cd00   672  49b04241       constant
0xffff9148cd04   676  00000000       constant
0xffff9148cd08   680  49b04241       constant
0xffff9148cd0c   684  00000000       constant
0xffff9148cd10   688  49b04241       constant
0xffff9148cd14   692  00000000       constant
0xffff9148cd18   696  49b04241       constant
0xffff9148cd1c   700  00000000       constant
0xffff9148cd20   704  49b04241       constant
0xffff9148cd24   708  00000000       constant
0xffff9148cd28   712  49b04241       constant
0xffff9148cd2c   716  00000000       constant
0xffff9148cd30   720  49b04241       constant
0xffff9148cd34   724  00000000       constant
0xffff9148cd38   728  49b04241       constant
0xffff9148cd3c   732  00000000       constant
0xffff9148cd40   736  49b04241       constant
0xffff9148cd44   740  00000000       constant
0xffff9148cd48   744  49b04241       constant
0xffff9148cd4c   748  00000000       constant
0xffff9148cd50   752  49b04241       constant
0xffff9148cd54   756  00000000       constant
0xffff9148cd58   760  49b04241       constant
0xffff9148cd5c   764  00000000       constant
0xffff9148cd60   768  49b04241       constant
0xffff9148cd64   772  00000000       constant
0xffff9148cd68   776  49b04241       constant
0xffff9148cd6c   780  00000000       constant
0xffff9148cd70   784  49b04241       constant
0xffff9148cd74   788  00000000       constant
0xffff9148cd78   792  49b04241       constant
0xffff9148cd7c   796  00000000       constant
0xffff9148cd80   800  49b04241       constant
0xffff9148cd84   804  00000000       constant
0xffff9148cd88   808  49b04241       constant
0xffff9148cd8c   812  00000000       constant
0xffff9148cd90   816  49b04241       constant
0xffff9148cd94   820  00000000       constant
0xffff9148cd98   824  49b04241       constant
0xffff9148cd9c   828  00000000       constant
0xffff9148cda0   832  49b04241       constant
0xffff9148cda4   836  00000000       constant
0xffff9148cda8   840  49b04241       constant
0xffff9148cdac   844  00000000       constant
0xffff9148cdb0   848  49b04241       constant
0xffff9148cdb4   852  00000000       constant
0xffff9148cdb8   856  49b04241       constant
0xffff9148cdbc   860  00000000       constant
0xffff9148cdc0   864  49b04241       constant
0xffff9148cdc4   868  00000000       constant
0xffff9148cdc8   872  49b04241       constant
0xffff9148cdcc   876  00000000       constant
0xffff9148cdd0   880  49b04241       constant
0xffff9148cdd4   884  00000000       constant
0xffff9148cdd8   888  49b04241       constant
0xffff9148cddc   892  00000000       constant
0xffff9148cde0   896  91406820       constant
0xffff9148cde4   900  0000ffff       constant
0xffff9148cde8   904  91406260       constant
0xffff9148cdec   908  0000ffff       constant
0xffff9148cdf0   912  914068e0       constant
0xffff9148cdf4   916  0000ffff       constant


Safepoints (size = 21)
0xffff9148cc70   528  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 51)
0xffff9148ca80  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9148ca98  embedded object  (0x49b04519 <the hole>)
0xffff9148caa8  embedded object  (0x49b04241 <undefined>)
0xffff9148cab0  embedded object  (0x49b04241 <undefined>)
0xffff9148cab8  embedded object  (0x49b04241 <undefined>)
0xffff9148cac0  embedded object  (0x49b04241 <undefined>)
0xffff9148cac8  embedded object  (0x49b04241 <undefined>)
0xffff9148cad0  embedded object  (0x49b04241 <undefined>)
0xffff9148cad8  embedded object  (0x49b04241 <undefined>)
0xffff9148cae0  embedded object  (0x49b04241 <undefined>)
0xffff9148cae8  embedded object  (0x49b04241 <undefined>)
0xffff9148caf0  embedded object  (0x49b04241 <undefined>)
0xffff9148caf8  embedded object  (0x49b04241 <undefined>)
0xffff9148cb00  embedded object  (0x49b04241 <undefined>)
0xffff9148cb08  embedded object  (0x49b04241 <undefined>)
0xffff9148cb10  embedded object  (0x49b04241 <undefined>)
0xffff9148cb18  embedded object  (0x49b04241 <undefined>)
0xffff9148cb20  embedded object  (0x49b04241 <undefined>)
0xffff9148cb28  embedded object  (0x49b04241 <undefined>)
0xffff9148cb30  embedded object  (0x49b04241 <undefined>)
0xffff9148cb38  embedded object  (0x49b04241 <undefined>)
0xffff9148cb40  embedded object  (0x49b04241 <undefined>)
0xffff9148cb48  embedded object  (0x49b04241 <undefined>)
0xffff9148cb50  embedded object  (0x49b04241 <undefined>)
0xffff9148cb58  embedded object  (0x49b04241 <undefined>)
0xffff9148cb60  embedded object  (0x49b04241 <undefined>)
0xffff9148cb68  embedded object  (0x49b04241 <undefined>)
0xffff9148cb70  embedded object  (0x49b04241 <undefined>)
0xffff9148cb78  embedded object  (0x49b04241 <undefined>)
0xffff9148cb80  embedded object  (0x49b04241 <undefined>)
0xffff9148cb8c  embedded object  (0x49b04241 <undefined>)
0xffff9148cb98  embedded object  (0x49b04241 <undefined>)
0xffff9148cba4  embedded object  (0x49b04241 <undefined>)
0xffff9148cbb0  embedded object  (0x49b04241 <undefined>)
0xffff9148cbbc  embedded object  (0x49b04241 <undefined>)
0xffff9148cbc8  embedded object  (0x49b04241 <undefined>)
0xffff9148cbd4  embedded object  (0x49b04241 <undefined>)
0xffff9148cbe0  embedded object  (0x49b04241 <undefined>)
0xffff9148cbec  embedded object  (0x49b04241 <undefined>)
0xffff9148cbf8  embedded object  (0x49b04241 <undefined>)
0xffff9148cc04  embedded object  (0x49b04241 <undefined>)
0xffff9148cc10  embedded object  (0x49b04241 <undefined>)
0xffff9148cc44  code target (STUB)  (0xffff91406820)
0xffff9148cc68  code target (STUB)  (0xffff91406260)
0xffff9148cc74  code target (STUB)  (0xffff914068e0)
0xffff9148cc88  constant pool (size 368)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 941)
0xffff9148ca60     0  movz x2, #0xf2c0
0xffff9148ca64     4  movk x2, #0x4117, lsl #16
0xffff9148ca68     8  ldp x3, x0, [x2]
0xffff9148ca6c    12  adds x16, x3, #0x170 (368)
0xffff9148ca70    16  ccmp x16, x0, #nzCv, lo
0xffff9148ca74    20  b.hi #+0x1b0 (addr 0xffff9148cc24)
0xffff9148ca78    24  str x16, [x2]
0xffff9148ca7c    28  orr x3, x3, #0x1
0xffff9148ca80    32  ldr x0, pc+528 (addr 0x0000ffff9148cc90)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9148ca84    36  stur x0, [x3, #-1]
0xffff9148ca88    40  movz x0, #0x2c00000000
0xffff9148ca8c    44  stur x0, [x3, #7]
0xffff9148ca90    48  stur x1, [x3, #15]
0xffff9148ca94    52  stur cp, [x3, #23]
0xffff9148ca98    56  ldr x0, pc+512 (addr 0x0000ffff9148cc98)    ;; object: 0x49b04519 <the hole>
0xffff9148ca9c    60  stur x0, [x3, #31]
0xffff9148caa0    64  ldur x0, [cp, #39]
0xffff9148caa4    68  stur x0, [x3, #39]
0xffff9148caa8    72  ldr x0, pc+504 (addr 0x0000ffff9148cca0)    ;; object: 0x49b04241 <undefined>
0xffff9148caac    76  stur x0, [x3, #47]
0xffff9148cab0    80  ldr x0, pc+504 (addr 0x0000ffff9148cca8)    ;; object: 0x49b04241 <undefined>
0xffff9148cab4    84  stur x0, [x3, #55]
0xffff9148cab8    88  ldr x0, pc+504 (addr 0x0000ffff9148ccb0)    ;; object: 0x49b04241 <undefined>
0xffff9148cabc    92  stur x0, [x3, #63]
0xffff9148cac0    96  ldr x0, pc+504 (addr 0x0000ffff9148ccb8)    ;; object: 0x49b04241 <undefined>
0xffff9148cac4   100  stur x0, [x3, #71]
0xffff9148cac8   104  ldr x0, pc+504 (addr 0x0000ffff9148ccc0)    ;; object: 0x49b04241 <undefined>
0xffff9148cacc   108  stur x0, [x3, #79]
0xffff9148cad0   112  ldr x0, pc+504 (addr 0x0000ffff9148ccc8)    ;; object: 0x49b04241 <undefined>
0xffff9148cad4   116  stur x0, [x3, #87]
0xffff9148cad8   120  ldr x0, pc+504 (addr 0x0000ffff9148ccd0)    ;; object: 0x49b04241 <undefined>
0xffff9148cadc   124  stur x0, [x3, #95]
0xffff9148cae0   128  ldr x0, pc+504 (addr 0x0000ffff9148ccd8)    ;; object: 0x49b04241 <undefined>
0xffff9148cae4   132  stur x0, [x3, #103]
0xffff9148cae8   136  ldr x0, pc+504 (addr 0x0000ffff9148cce0)    ;; object: 0x49b04241 <undefined>
0xffff9148caec   140  stur x0, [x3, #111]
0xffff9148caf0   144  ldr x0, pc+504 (addr 0x0000ffff9148cce8)    ;; object: 0x49b04241 <undefined>
0xffff9148caf4   148  stur x0, [x3, #119]
0xffff9148caf8   152  ldr x0, pc+504 (addr 0x0000ffff9148ccf0)    ;; object: 0x49b04241 <undefined>
0xffff9148cafc   156  stur x0, [x3, #127]
0xffff9148cb00   160  ldr x0, pc+504 (addr 0x0000ffff9148ccf8)    ;; object: 0x49b04241 <undefined>
0xffff9148cb04   164  stur x0, [x3, #135]
0xffff9148cb08   168  ldr x0, pc+504 (addr 0x0000ffff9148cd00)    ;; object: 0x49b04241 <undefined>
0xffff9148cb0c   172  stur x0, [x3, #143]
0xffff9148cb10   176  ldr x0, pc+504 (addr 0x0000ffff9148cd08)    ;; object: 0x49b04241 <undefined>
0xffff9148cb14   180  stur x0, [x3, #151]
0xffff9148cb18   184  ldr x0, pc+504 (addr 0x0000ffff9148cd10)    ;; object: 0x49b04241 <undefined>
0xffff9148cb1c   188  stur x0, [x3, #159]
0xffff9148cb20   192  ldr x0, pc+504 (addr 0x0000ffff9148cd18)    ;; object: 0x49b04241 <undefined>
0xffff9148cb24   196  stur x0, [x3, #167]
0xffff9148cb28   200  ldr x0, pc+504 (addr 0x0000ffff9148cd20)    ;; object: 0x49b04241 <undefined>
0xffff9148cb2c   204  stur x0, [x3, #175]
0xffff9148cb30   208  ldr x0, pc+504 (addr 0x0000ffff9148cd28)    ;; object: 0x49b04241 <undefined>
0xffff9148cb34   212  stur x0, [x3, #183]
0xffff9148cb38   216  ldr x0, pc+504 (addr 0x0000ffff9148cd30)    ;; object: 0x49b04241 <undefined>
0xffff9148cb3c   220  stur x0, [x3, #191]
0xffff9148cb40   224  ldr x0, pc+504 (addr 0x0000ffff9148cd38)    ;; object: 0x49b04241 <undefined>
0xffff9148cb44   228  stur x0, [x3, #199]
0xffff9148cb48   232  ldr x0, pc+504 (addr 0x0000ffff9148cd40)    ;; object: 0x49b04241 <undefined>
0xffff9148cb4c   236  stur x0, [x3, #207]
0xffff9148cb50   240  ldr x0, pc+504 (addr 0x0000ffff9148cd48)    ;; object: 0x49b04241 <undefined>
0xffff9148cb54   244  stur x0, [x3, #215]
0xffff9148cb58   248  ldr x0, pc+504 (addr 0x0000ffff9148cd50)    ;; object: 0x49b04241 <undefined>
0xffff9148cb5c   252  stur x0, [x3, #223]
0xffff9148cb60   256  ldr x0, pc+504 (addr 0x0000ffff9148cd58)    ;; object: 0x49b04241 <undefined>
0xffff9148cb64   260  stur x0, [x3, #231]
0xffff9148cb68   264  ldr x0, pc+504 (addr 0x0000ffff9148cd60)    ;; object: 0x49b04241 <undefined>
0xffff9148cb6c   268  stur x0, [x3, #239]
0xffff9148cb70   272  ldr x0, pc+504 (addr 0x0000ffff9148cd68)    ;; object: 0x49b04241 <undefined>
0xffff9148cb74   276  stur x0, [x3, #247]
0xffff9148cb78   280  ldr x0, pc+504 (addr 0x0000ffff9148cd70)    ;; object: 0x49b04241 <undefined>
0xffff9148cb7c   284  stur x0, [x3, #255]
0xffff9148cb80   288  ldr x0, pc+504 (addr 0x0000ffff9148cd78)    ;; object: 0x49b04241 <undefined>
0xffff9148cb84   292  movz x16, #0x107
0xffff9148cb88   296  str x0, [x3, x16]
0xffff9148cb8c   300  ldr x0, pc+500 (addr 0x0000ffff9148cd80)    ;; object: 0x49b04241 <undefined>
0xffff9148cb90   304  movz x16, #0x10f
0xffff9148cb94   308  str x0, [x3, x16]
0xffff9148cb98   312  ldr x0, pc+496 (addr 0x0000ffff9148cd88)    ;; object: 0x49b04241 <undefined>
0xffff9148cb9c   316  movz x16, #0x117
0xffff9148cba0   320  str x0, [x3, x16]
0xffff9148cba4   324  ldr x0, pc+492 (addr 0x0000ffff9148cd90)    ;; object: 0x49b04241 <undefined>
0xffff9148cba8   328  movz x16, #0x11f
0xffff9148cbac   332  str x0, [x3, x16]
0xffff9148cbb0   336  ldr x0, pc+488 (addr 0x0000ffff9148cd98)    ;; object: 0x49b04241 <undefined>
0xffff9148cbb4   340  movz x16, #0x127
0xffff9148cbb8   344  str x0, [x3, x16]
0xffff9148cbbc   348  ldr x0, pc+484 (addr 0x0000ffff9148cda0)    ;; object: 0x49b04241 <undefined>
0xffff9148cbc0   352  movz x16, #0x12f
0xffff9148cbc4   356  str x0, [x3, x16]
0xffff9148cbc8   360  ldr x0, pc+480 (addr 0x0000ffff9148cda8)    ;; object: 0x49b04241 <undefined>
0xffff9148cbcc   364  movz x16, #0x137
0xffff9148cbd0   368  str x0, [x3, x16]
0xffff9148cbd4   372  ldr x0, pc+476 (addr 0x0000ffff9148cdb0)    ;; object: 0x49b04241 <undefined>
0xffff9148cbd8   376  movz x16, #0x13f
0xffff9148cbdc   380  str x0, [x3, x16]
0xffff9148cbe0   384  ldr x0, pc+472 (addr 0x0000ffff9148cdb8)    ;; object: 0x49b04241 <undefined>
0xffff9148cbe4   388  movz x16, #0x147
0xffff9148cbe8   392  str x0, [x3, x16]
0xffff9148cbec   396  ldr x0, pc+468 (addr 0x0000ffff9148cdc0)    ;; object: 0x49b04241 <undefined>
0xffff9148cbf0   400  movz x16, #0x14f
0xffff9148cbf4   404  str x0, [x3, x16]
0xffff9148cbf8   408  ldr x0, pc+464 (addr 0x0000ffff9148cdc8)    ;; object: 0x49b04241 <undefined>
0xffff9148cbfc   412  movz x16, #0x157
0xffff9148cc00   416  str x0, [x3, x16]
0xffff9148cc04   420  ldr x0, pc+460 (addr 0x0000ffff9148cdd0)    ;; object: 0x49b04241 <undefined>
0xffff9148cc08   424  movz x16, #0x15f
0xffff9148cc0c   428  str x0, [x3, x16]
0xffff9148cc10   432  ldr x0, pc+456 (addr 0x0000ffff9148cdd8)    ;; object: 0x49b04241 <undefined>
0xffff9148cc14   436  movz x16, #0x167
0xffff9148cc18   440  str x0, [x3, x16]
0xffff9148cc1c   444  mov x0, x3
0xffff9148cc20   448  ret
0xffff9148cc24   452  sub csp, jssp, #0x10 (16)
0xffff9148cc28   456  stp fp, lr, [jssp, #-16]!
0xffff9148cc2c   460  movz fp, #0xa00000000
0xffff9148cc30   464  sub csp, jssp, #0x8 (8)
0xffff9148cc34   468  str fp, [jssp, #-8]!
0xffff9148cc38   472  add fp, jssp, #0x8 (8)
0xffff9148cc3c   476  movz x3, #0x0
0xffff9148cc40   480  mov x16, lr
0xffff9148cc44   484  ldr x17, pc+412 (addr 0x0000ffff9148cde0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9148cc48   488  blr x17
0xffff9148cc4c   492  movz x0, #0x17000000000
0xffff9148cc50   496  movz x10, #0x0
0xffff9148cc54   500  sub csp, jssp, #0x10 (16)
0xffff9148cc58   504  stp x10, x0, [jssp, #-16]!
0xffff9148cc5c   508  movz x0, #0x2
0xffff9148cc60   512  movz x1, #0x5b88
0xffff9148cc64   516  movk x1, #0xe2, lsl #16
0xffff9148cc68   520  ldr x16, pc+384 (addr 0x0000ffff9148cde8)    ;; code: STUB, CEntryStub, minor: 5
0xffff9148cc6c   524  blr x16
0xffff9148cc70   528  str x0, [jssp, #24]
0xffff9148cc74   532  ldr x16, pc+380 (addr 0x0000ffff9148cdf0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9148cc78   536  blr x16
0xffff9148cc7c   540  ldr lr, [jssp, #16]
0xffff9148cc80   544  ldp xzr, fp, [jssp], #24
0xffff9148cc84   548  b #-0x204 (addr 0xffff9148ca80)
0xffff9148cc88   552  58000b7f       constant pool begin (num_const = 91)    ;; constant pool
0xffff9148cc8c   556  d63f03e0       constant
0xffff9148cc90   560  36406149       constant
0xffff9148cc94   564  00000000       constant
0xffff9148cc98   568  49b04519       constant
0xffff9148cc9c   572  00000000       constant
0xffff9148cca0   576  49b04241       constant
0xffff9148cca4   580  00000000       constant
0xffff9148cca8   584  49b04241       constant
0xffff9148ccac   588  00000000       constant
0xffff9148ccb0   592  49b04241       constant
0xffff9148ccb4   596  00000000       constant
0xffff9148ccb8   600  49b04241       constant
0xffff9148ccbc   604  00000000       constant
0xffff9148ccc0   608  49b04241       constant
0xffff9148ccc4   612  00000000       constant
0xffff9148ccc8   616  49b04241       constant
0xffff9148cccc   620  00000000       constant
0xffff9148ccd0   624  49b04241       constant
0xffff9148ccd4   628  00000000       constant
0xffff9148ccd8   632  49b04241       constant
0xffff9148ccdc   636  00000000       constant
0xffff9148cce0   640  49b04241       constant
0xffff9148cce4   644  00000000       constant
0xffff9148cce8   648  49b04241       constant
0xffff9148ccec   652  00000000       constant
0xffff9148ccf0   656  49b04241       constant
0xffff9148ccf4   660  00000000       constant
0xffff9148ccf8   664  49b04241       constant
0xffff9148ccfc   668  00000000       constant
0xffff9148cd00   672  49b04241       constant
0xffff9148cd04   676  00000000       constant
0xffff9148cd08   680  49b04241       constant
0xffff9148cd0c   684  00000000       constant
0xffff9148cd10   688  49b04241       constant
0xffff9148cd14   692  00000000       constant
0xffff9148cd18   696  49b04241       constant
0xffff9148cd1c   700  00000000       constant
0xffff9148cd20   704  49b04241       constant
0xffff9148cd24   708  00000000       constant
0xffff9148cd28   712  49b04241       constant
0xffff9148cd2c   716  00000000       constant
0xffff9148cd30   720  49b04241       constant
0xffff9148cd34   724  00000000       constant
0xffff9148cd38   728  49b04241       constant
0xffff9148cd3c   732  00000000       constant
0xffff9148cd40   736  49b04241       constant
0xffff9148cd44   740  00000000       constant
0xffff9148cd48   744  49b04241       constant
0xffff9148cd4c   748  00000000       constant
0xffff9148cd50   752  49b04241       constant
0xffff9148cd54   756  00000000       constant
0xffff9148cd58   760  49b04241       constant
0xffff9148cd5c   764  00000000       constant
0xffff9148cd60   768  49b04241       constant
0xffff9148cd64   772  00000000       constant
0xffff9148cd68   776  49b04241       constant
0xffff9148cd6c   780  00000000       constant
0xffff9148cd70   784  49b04241       constant
0xffff9148cd74   788  00000000       constant
0xffff9148cd78   792  49b04241       constant
0xffff9148cd7c   796  00000000       constant
0xffff9148cd80   800  49b04241       constant
0xffff9148cd84   804  00000000       constant
0xffff9148cd88   808  49b04241       constant
0xffff9148cd8c   812  00000000       constant
0xffff9148cd90   816  49b04241       constant
0xffff9148cd94   820  00000000       constant
0xffff9148cd98   824  49b04241       constant
0xffff9148cd9c   828  00000000       constant
0xffff9148cda0   832  49b04241       constant
0xffff9148cda4   836  00000000       constant
0xffff9148cda8   840  49b04241       constant
0xffff9148cdac   844  00000000       constant
0xffff9148cdb0   848  49b04241       constant
0xffff9148cdb4   852  00000000       constant
0xffff9148cdb8   856  49b04241       constant
0xffff9148cdbc   860  00000000       constant
0xffff9148cdc0   864  49b04241       constant
0xffff9148cdc4   868  00000000       constant
0xffff9148cdc8   872  49b04241       constant
0xffff9148cdcc   876  00000000       constant
0xffff9148cdd0   880  49b04241       constant
0xffff9148cdd4   884  00000000       constant
0xffff9148cdd8   888  49b04241       constant
0xffff9148cddc   892  00000000       constant
0xffff9148cde0   896  91406820       constant
0xffff9148cde4   900  0000ffff       constant
0xffff9148cde8   904  91406260       constant
0xffff9148cdec   908  0000ffff       constant
0xffff9148cdf0   912  914068e0       constant
0xffff9148cdf4   916  0000ffff       constant


Safepoints (size = 21)
0xffff9148cc70   528  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 51)
0xffff9148ca80  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9148ca98  embedded object  (0x49b04519 <the hole>)
0xffff9148caa8  embedded object  (0x49b04241 <undefined>)
0xffff9148cab0  embedded object  (0x49b04241 <undefined>)
0xffff9148cab8  embedded object  (0x49b04241 <undefined>)
0xffff9148cac0  embedded object  (0x49b04241 <undefined>)
0xffff9148cac8  embedded object  (0x49b04241 <undefined>)
0xffff9148cad0  embedded object  (0x49b04241 <undefined>)
0xffff9148cad8  embedded object  (0x49b04241 <undefined>)
0xffff9148cae0  embedded object  (0x49b04241 <undefined>)
0xffff9148cae8  embedded object  (0x49b04241 <undefined>)
0xffff9148caf0  embedded object  (0x49b04241 <undefined>)
0xffff9148caf8  embedded object  (0x49b04241 <undefined>)
0xffff9148cb00  embedded object  (0x49b04241 <undefined>)
0xffff9148cb08  embedded object  (0x49b04241 <undefined>)
0xffff9148cb10  embedded object  (0x49b04241 <undefined>)
0xffff9148cb18  embedded object  (0x49b04241 <undefined>)
0xffff9148cb20  embedded object  (0x49b04241 <undefined>)
0xffff9148cb28  embedded object  (0x49b04241 <undefined>)
0xffff9148cb30  embedded object  (0x49b04241 <undefined>)
0xffff9148cb38  embedded object  (0x49b04241 <undefined>)
0xffff9148cb40  embedded object  (0x49b04241 <undefined>)
0xffff9148cb48  embedded object  (0x49b04241 <undefined>)
0xffff9148cb50  embedded object  (0x49b04241 <undefined>)
0xffff9148cb58  embedded object  (0x49b04241 <undefined>)
0xffff9148cb60  embedded object  (0x49b04241 <undefined>)
0xffff9148cb68  embedded object  (0x49b04241 <undefined>)
0xffff9148cb70  embedded object  (0x49b04241 <undefined>)
0xffff9148cb78  embedded object  (0x49b04241 <undefined>)
0xffff9148cb80  embedded object  (0x49b04241 <undefined>)
0xffff9148cb8c  embedded object  (0x49b04241 <undefined>)
0xffff9148cb98  embedded object  (0x49b04241 <undefined>)
0xffff9148cba4  embedded object  (0x49b04241 <undefined>)
0xffff9148cbb0  embedded object  (0x49b04241 <undefined>)
0xffff9148cbbc  embedded object  (0x49b04241 <undefined>)
0xffff9148cbc8  embedded object  (0x49b04241 <undefined>)
0xffff9148cbd4  embedded object  (0x49b04241 <undefined>)
0xffff9148cbe0  embedded object  (0x49b04241 <undefined>)
0xffff9148cbec  embedded object  (0x49b04241 <undefined>)
0xffff9148cbf8  embedded object  (0x49b04241 <undefined>)
0xffff9148cc04  embedded object  (0x49b04241 <undefined>)
0xffff9148cc10  embedded object  (0x49b04241 <undefined>)
0xffff9148cc44  code target (STUB)  (0xffff91406820)
0xffff9148cc68  code target (STUB)  (0xffff91406260)
0xffff9148cc74  code target (STUB)  (0xffff914068e0)
0xffff9148cc88  constant pool (size 368)


kind = HANDLER
major_key = <NoCache>Stub
name = runInThisContext
compiler = unknown
Instructions (size = 120)
0xffff9148f420     0  sub csp, jssp, #0x8 (8)
0xffff9148f424     4  str x3, [jssp, #-8]!
0xffff9148f428     8  sub csp, jssp, #0x8 (8)
0xffff9148f42c    12  str x0, [jssp, #-8]!
0xffff9148f430    16  ldr x0, pc+72 (addr 0x0000ffff9148f478)    ;; object: 0x49bcde09 Cell for 0
0xffff9148f434    20  ldur x0, [x0, #7]
0xffff9148f438    24  cmp x0, #0x0 (0)
0xffff9148f43c    28  b.ne #+0x14 (addr 0xffff9148f450)
0xffff9148f440    32  ldr x3, pc+64 (addr 0x0000ffff9148f480)    ;; object: 0x49bcde19 WeakCell for 0x26a9cef9 <an Object with map 0x3641a571>
0xffff9148f444    36  ldur x3, [x3, #7]
0xffff9148f448    40  tbz w3, #0, #+0x8 (addr 0xffff9148f450)
0xffff9148f44c    44  b #+0x14 (addr 0xffff9148f460)
0xffff9148f450    48  ldr x0, [jssp], #8
0xffff9148f454    52  ldr x3, [jssp], #8
0xffff9148f458    56  ldr x16, pc+48 (addr 0x0000ffff9148f488)    ;; code: BUILTIN
0xffff9148f45c    60  br x16
0xffff9148f460    64  add jssp, jssp, #0x10 (16)
0xffff9148f464    68  mov x1, x3
0xffff9148f468    72  ldr x16, pc+40 (addr 0x0000ffff9148f490)    ;; code: HANDLER, LoadConstantStub, minor: 1
0xffff9148f46c    76  br x16
0xffff9148f470    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff9148f474    84  d63f03e0       constant
0xffff9148f478    88  49bcde09       constant
0xffff9148f47c    92  00000000       constant
0xffff9148f480    96  49bcde19       constant
0xffff9148f484   100  00000000       constant
0xffff9148f488   104  914222e0       constant
0xffff9148f48c   108  0000ffff       constant
0xffff9148f490   112  91443300       constant
0xffff9148f494   116  0000ffff       constant


RelocInfo (size = 10)
0xffff9148f430  embedded object  (0x49bcde09 Cell for 0)
0xffff9148f440  embedded object  (0x49bcde19 WeakCell for 0x26a9cef9 <an Object with map 0x3641a571>)
0xffff9148f458  code target (BUILTIN)  (0xffff914222e0)
0xffff9148f468  code target (HANDLER)  (0xffff91443300)
0xffff9148f470  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = buffer
compiler = unknown
Instructions (size = 184)
0xffff9148f500     0  sub csp, jssp, #0x8 (8)
0xffff9148f504     4  str x3, [jssp, #-8]!
0xffff9148f508     8  sub csp, jssp, #0x8 (8)
0xffff9148f50c    12  str x4, [jssp, #-8]!
0xffff9148f510    16  ldr x3, pc+112 (addr 0x0000ffff9148f580)    ;; object: 0x49b63e59 Cell for 0
0xffff9148f514    20  ldur x3, [x3, #7]
0xffff9148f518    24  cmp x3, #0x0 (0)
0xffff9148f51c    28  b.ne #+0x44 (addr 0xffff9148f560)
0xffff9148f520    32  tbz w0, #0, #+0x40 (addr 0xffff9148f560)
0xffff9148f524    36  ldur x3, [x0, #-1]
0xffff9148f528    40  ldr x4, pc+96 (addr 0x0000ffff9148f588)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9148f52c    44  ldur x4, [x4, #7]
0xffff9148f530    48  cmp x3, x4
0xffff9148f534    52  b.ne #+0x2c (addr 0xffff9148f560)
0xffff9148f538    56  ldr x5, pc+88 (addr 0x0000ffff9148f590)    ;; object: 0x49bcf261 WeakCell for 0x3641ca91 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9148f53c    60  ldur x5, [x5, #7]
0xffff9148f540    64  tbz w5, #0, #+0x20 (addr 0xffff9148f560)
0xffff9148f544    68  ldursw x4, [x5, #15]
0xffff9148f548    72  tbnz w4, #23, #+0x18 (addr 0xffff9148f560)
0xffff9148f54c    76  ldr x4, [jssp], #8
0xffff9148f550    80  ldr x3, [jssp], #8
0xffff9148f554    84  ldr x2, pc+68 (addr 0x0000ffff9148f598)    ;; object: 0x49b780a9 <String[6]: buffer>
0xffff9148f558    88  ldr x16, pc+72 (addr 0x0000ffff9148f5a0)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff9148f55c    92  br x16
0xffff9148f560    96  ldr x2, pc+72 (addr 0x0000ffff9148f5a8)    ;; object: 0x49b780a9 <String[6]: buffer>
0xffff9148f564   100  ldr x4, [jssp], #8
0xffff9148f568   104  ldr x3, [jssp], #8
0xffff9148f56c   108  ldr x16, pc+68 (addr 0x0000ffff9148f5b0)    ;; code: BUILTIN
0xffff9148f570   112  br x16
0xffff9148f574   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff9148f578   120  d63f03e0       constant
0xffff9148f57c   124  d503201f       constant
0xffff9148f580   128  49b63e59       constant
0xffff9148f584   132  00000000       constant
0xffff9148f588   136  49bc22b1       constant
0xffff9148f58c   140  00000000       constant
0xffff9148f590   144  49bcf261       constant
0xffff9148f594   148  00000000       constant
0xffff9148f598   152  49b780a9       constant
0xffff9148f59c   156  00000000       constant
0xffff9148f5a0   160  9148bdc0       constant
0xffff9148f5a4   164  0000ffff       constant
0xffff9148f5a8   168  49b780a9       constant
0xffff9148f5ac   172  00000000       constant
0xffff9148f5b0   176  91422420       constant
0xffff9148f5b4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff9148f510  embedded object  (0x49b63e59 Cell for 0)
0xffff9148f528  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9148f538  embedded object  (0x49bcf261 WeakCell for 0x3641ca91 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9148f554  embedded object  (0x49b780a9 <String[6]: buffer>)
0xffff9148f558  code target (HANDLER)  (0xffff9148bdc0)
0xffff9148f560  embedded object  (0x49b780a9 <String[6]: buffer>)
0xffff9148f56c  code target (BUILTIN)  (0xffff91422420)
0xffff9148f574  constant pool (size 68)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 861)
0xffff9148f620     0  movz x2, #0xf2c0
0xffff9148f624     4  movk x2, #0x4117, lsl #16
0xffff9148f628     8  ldp x3, x0, [x2]
0xffff9148f62c    12  adds x16, x3, #0x150 (336)
0xffff9148f630    16  ccmp x16, x0, #nzCv, lo
0xffff9148f634    20  b.hi #+0x180 (addr 0xffff9148f7b4)
0xffff9148f638    24  str x16, [x2]
0xffff9148f63c    28  orr x3, x3, #0x1
0xffff9148f640    32  ldr x0, pc+480 (addr 0x0000ffff9148f820)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9148f644    36  stur x0, [x3, #-1]
0xffff9148f648    40  movz x0, #0x2800000000
0xffff9148f64c    44  stur x0, [x3, #7]
0xffff9148f650    48  stur x1, [x3, #15]
0xffff9148f654    52  stur cp, [x3, #23]
0xffff9148f658    56  ldr x0, pc+464 (addr 0x0000ffff9148f828)    ;; object: 0x49b04519 <the hole>
0xffff9148f65c    60  stur x0, [x3, #31]
0xffff9148f660    64  ldur x0, [cp, #39]
0xffff9148f664    68  stur x0, [x3, #39]
0xffff9148f668    72  ldr x0, pc+456 (addr 0x0000ffff9148f830)    ;; object: 0x49b04241 <undefined>
0xffff9148f66c    76  stur x0, [x3, #47]
0xffff9148f670    80  ldr x0, pc+456 (addr 0x0000ffff9148f838)    ;; object: 0x49b04241 <undefined>
0xffff9148f674    84  stur x0, [x3, #55]
0xffff9148f678    88  ldr x0, pc+456 (addr 0x0000ffff9148f840)    ;; object: 0x49b04241 <undefined>
0xffff9148f67c    92  stur x0, [x3, #63]
0xffff9148f680    96  ldr x0, pc+456 (addr 0x0000ffff9148f848)    ;; object: 0x49b04241 <undefined>
0xffff9148f684   100  stur x0, [x3, #71]
0xffff9148f688   104  ldr x0, pc+456 (addr 0x0000ffff9148f850)    ;; object: 0x49b04241 <undefined>
0xffff9148f68c   108  stur x0, [x3, #79]
0xffff9148f690   112  ldr x0, pc+456 (addr 0x0000ffff9148f858)    ;; object: 0x49b04241 <undefined>
0xffff9148f694   116  stur x0, [x3, #87]
0xffff9148f698   120  ldr x0, pc+456 (addr 0x0000ffff9148f860)    ;; object: 0x49b04241 <undefined>
0xffff9148f69c   124  stur x0, [x3, #95]
0xffff9148f6a0   128  ldr x0, pc+456 (addr 0x0000ffff9148f868)    ;; object: 0x49b04241 <undefined>
0xffff9148f6a4   132  stur x0, [x3, #103]
0xffff9148f6a8   136  ldr x0, pc+456 (addr 0x0000ffff9148f870)    ;; object: 0x49b04241 <undefined>
0xffff9148f6ac   140  stur x0, [x3, #111]
0xffff9148f6b0   144  ldr x0, pc+456 (addr 0x0000ffff9148f878)    ;; object: 0x49b04241 <undefined>
0xffff9148f6b4   148  stur x0, [x3, #119]
0xffff9148f6b8   152  ldr x0, pc+456 (addr 0x0000ffff9148f880)    ;; object: 0x49b04241 <undefined>
0xffff9148f6bc   156  stur x0, [x3, #127]
0xffff9148f6c0   160  ldr x0, pc+456 (addr 0x0000ffff9148f888)    ;; object: 0x49b04241 <undefined>
0xffff9148f6c4   164  stur x0, [x3, #135]
0xffff9148f6c8   168  ldr x0, pc+456 (addr 0x0000ffff9148f890)    ;; object: 0x49b04241 <undefined>
0xffff9148f6cc   172  stur x0, [x3, #143]
0xffff9148f6d0   176  ldr x0, pc+456 (addr 0x0000ffff9148f898)    ;; object: 0x49b04241 <undefined>
0xffff9148f6d4   180  stur x0, [x3, #151]
0xffff9148f6d8   184  ldr x0, pc+456 (addr 0x0000ffff9148f8a0)    ;; object: 0x49b04241 <undefined>
0xffff9148f6dc   188  stur x0, [x3, #159]
0xffff9148f6e0   192  ldr x0, pc+456 (addr 0x0000ffff9148f8a8)    ;; object: 0x49b04241 <undefined>
0xffff9148f6e4   196  stur x0, [x3, #167]
0xffff9148f6e8   200  ldr x0, pc+456 (addr 0x0000ffff9148f8b0)    ;; object: 0x49b04241 <undefined>
0xffff9148f6ec   204  stur x0, [x3, #175]
0xffff9148f6f0   208  ldr x0, pc+456 (addr 0x0000ffff9148f8b8)    ;; object: 0x49b04241 <undefined>
0xffff9148f6f4   212  stur x0, [x3, #183]
0xffff9148f6f8   216  ldr x0, pc+456 (addr 0x0000ffff9148f8c0)    ;; object: 0x49b04241 <undefined>
0xffff9148f6fc   220  stur x0, [x3, #191]
0xffff9148f700   224  ldr x0, pc+456 (addr 0x0000ffff9148f8c8)    ;; object: 0x49b04241 <undefined>
0xffff9148f704   228  stur x0, [x3, #199]
0xffff9148f708   232  ldr x0, pc+456 (addr 0x0000ffff9148f8d0)    ;; object: 0x49b04241 <undefined>
0xffff9148f70c   236  stur x0, [x3, #207]
0xffff9148f710   240  ldr x0, pc+456 (addr 0x0000ffff9148f8d8)    ;; object: 0x49b04241 <undefined>
0xffff9148f714   244  stur x0, [x3, #215]
0xffff9148f718   248  ldr x0, pc+456 (addr 0x0000ffff9148f8e0)    ;; object: 0x49b04241 <undefined>
0xffff9148f71c   252  stur x0, [x3, #223]
0xffff9148f720   256  ldr x0, pc+456 (addr 0x0000ffff9148f8e8)    ;; object: 0x49b04241 <undefined>
0xffff9148f724   260  stur x0, [x3, #231]
0xffff9148f728   264  ldr x0, pc+456 (addr 0x0000ffff9148f8f0)    ;; object: 0x49b04241 <undefined>
0xffff9148f72c   268  stur x0, [x3, #239]
0xffff9148f730   272  ldr x0, pc+456 (addr 0x0000ffff9148f8f8)    ;; object: 0x49b04241 <undefined>
0xffff9148f734   276  stur x0, [x3, #247]
0xffff9148f738   280  ldr x0, pc+456 (addr 0x0000ffff9148f900)    ;; object: 0x49b04241 <undefined>
0xffff9148f73c   284  stur x0, [x3, #255]
0xffff9148f740   288  ldr x0, pc+456 (addr 0x0000ffff9148f908)    ;; object: 0x49b04241 <undefined>
0xffff9148f744   292  movz x16, #0x107
0xffff9148f748   296  str x0, [x3, x16]
0xffff9148f74c   300  ldr x0, pc+452 (addr 0x0000ffff9148f910)    ;; object: 0x49b04241 <undefined>
0xffff9148f750   304  movz x16, #0x10f
0xffff9148f754   308  str x0, [x3, x16]
0xffff9148f758   312  ldr x0, pc+448 (addr 0x0000ffff9148f918)    ;; object: 0x49b04241 <undefined>
0xffff9148f75c   316  movz x16, #0x117
0xffff9148f760   320  str x0, [x3, x16]
0xffff9148f764   324  ldr x0, pc+444 (addr 0x0000ffff9148f920)    ;; object: 0x49b04241 <undefined>
0xffff9148f768   328  movz x16, #0x11f
0xffff9148f76c   332  str x0, [x3, x16]
0xffff9148f770   336  ldr x0, pc+440 (addr 0x0000ffff9148f928)    ;; object: 0x49b04241 <undefined>
0xffff9148f774   340  movz x16, #0x127
0xffff9148f778   344  str x0, [x3, x16]
0xffff9148f77c   348  ldr x0, pc+436 (addr 0x0000ffff9148f930)    ;; object: 0x49b04241 <undefined>
0xffff9148f780   352  movz x16, #0x12f
0xffff9148f784   356  str x0, [x3, x16]
0xffff9148f788   360  ldr x0, pc+432 (addr 0x0000ffff9148f938)    ;; object: 0x49b04241 <undefined>
0xffff9148f78c   364  movz x16, #0x137
0xffff9148f790   368  str x0, [x3, x16]
0xffff9148f794   372  ldr x0, pc+428 (addr 0x0000ffff9148f940)    ;; object: 0x49b04241 <undefined>
0xffff9148f798   376  movz x16, #0x13f
0xffff9148f79c   380  str x0, [x3, x16]
0xffff9148f7a0   384  ldr x0, pc+424 (addr 0x0000ffff9148f948)    ;; object: 0x49b04241 <undefined>
0xffff9148f7a4   388  movz x16, #0x147
0xffff9148f7a8   392  str x0, [x3, x16]
0xffff9148f7ac   396  mov x0, x3
0xffff9148f7b0   400  ret
0xffff9148f7b4   404  sub csp, jssp, #0x10 (16)
0xffff9148f7b8   408  stp fp, lr, [jssp, #-16]!
0xffff9148f7bc   412  movz fp, #0xa00000000
0xffff9148f7c0   416  sub csp, jssp, #0x8 (8)
0xffff9148f7c4   420  str fp, [jssp, #-8]!
0xffff9148f7c8   424  add fp, jssp, #0x8 (8)
0xffff9148f7cc   428  movz x3, #0x0
0xffff9148f7d0   432  mov x16, lr
0xffff9148f7d4   436  ldr x17, pc+380 (addr 0x0000ffff9148f950)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9148f7d8   440  blr x17
0xffff9148f7dc   444  movz x0, #0x15000000000
0xffff9148f7e0   448  movz x10, #0x0
0xffff9148f7e4   452  sub csp, jssp, #0x10 (16)
0xffff9148f7e8   456  stp x10, x0, [jssp, #-16]!
0xffff9148f7ec   460  movz x0, #0x2
0xffff9148f7f0   464  movz x1, #0x5b88
0xffff9148f7f4   468  movk x1, #0xe2, lsl #16
0xffff9148f7f8   472  ldr x16, pc+352 (addr 0x0000ffff9148f958)    ;; code: STUB, CEntryStub, minor: 5
0xffff9148f7fc   476  blr x16
0xffff9148f800   480  str x0, [jssp, #24]
0xffff9148f804   484  ldr x16, pc+348 (addr 0x0000ffff9148f960)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9148f808   488  blr x16
0xffff9148f80c   492  ldr lr, [jssp, #16]
0xffff9148f810   496  ldp xzr, fp, [jssp], #24
0xffff9148f814   500  b #-0x1d4 (addr 0xffff9148f640)
0xffff9148f818   504  58000a7f       constant pool begin (num_const = 83)    ;; constant pool
0xffff9148f81c   508  d63f03e0       constant
0xffff9148f820   512  36406149       constant
0xffff9148f824   516  00000000       constant
0xffff9148f828   520  49b04519       constant
0xffff9148f82c   524  00000000       constant
0xffff9148f830   528  49b04241       constant
0xffff9148f834   532  00000000       constant
0xffff9148f838   536  49b04241       constant
0xffff9148f83c   540  00000000       constant
0xffff9148f840   544  49b04241       constant
0xffff9148f844   548  00000000       constant
0xffff9148f848   552  49b04241       constant
0xffff9148f84c   556  00000000       constant
0xffff9148f850   560  49b04241       constant
0xffff9148f854   564  00000000       constant
0xffff9148f858   568  49b04241       constant
0xffff9148f85c   572  00000000       constant
0xffff9148f860   576  49b04241       constant
0xffff9148f864   580  00000000       constant
0xffff9148f868   584  49b04241       constant
0xffff9148f86c   588  00000000       constant
0xffff9148f870   592  49b04241       constant
0xffff9148f874   596  00000000       constant
0xffff9148f878   600  49b04241       constant
0xffff9148f87c   604  00000000       constant
0xffff9148f880   608  49b04241       constant
0xffff9148f884   612  00000000       constant
0xffff9148f888   616  49b04241       constant
0xffff9148f88c   620  00000000       constant
0xffff9148f890   624  49b04241       constant
0xffff9148f894   628  00000000       constant
0xffff9148f898   632  49b04241       constant
0xffff9148f89c   636  00000000       constant
0xffff9148f8a0   640  49b04241       constant
0xffff9148f8a4   644  00000000       constant
0xffff9148f8a8   648  49b04241       constant
0xffff9148f8ac   652  00000000       constant
0xffff9148f8b0   656  49b04241       constant
0xffff9148f8b4   660  00000000       constant
0xffff9148f8b8   664  49b04241       constant
0xffff9148f8bc   668  00000000       constant
0xffff9148f8c0   672  49b04241       constant
0xffff9148f8c4   676  00000000       constant
0xffff9148f8c8   680  49b04241       constant
0xffff9148f8cc   684  00000000       constant
0xffff9148f8d0   688  49b04241       constant
0xffff9148f8d4   692  00000000       constant
0xffff9148f8d8   696  49b04241       constant
0xffff9148f8dc   700  00000000       constant
0xffff9148f8e0   704  49b04241       constant
0xffff9148f8e4   708  00000000       constant
0xffff9148f8e8   712  49b04241       constant
0xffff9148f8ec   716  00000000       constant
0xffff9148f8f0   720  49b04241       constant
0xffff9148f8f4   724  00000000       constant
0xffff9148f8f8   728  49b04241       constant
0xffff9148f8fc   732  00000000       constant
0xffff9148f900   736  49b04241       constant
0xffff9148f904   740  00000000       constant
0xffff9148f908   744  49b04241       constant
0xffff9148f90c   748  00000000       constant
0xffff9148f910   752  49b04241       constant
0xffff9148f914   756  00000000       constant
0xffff9148f918   760  49b04241       constant
0xffff9148f91c   764  00000000       constant
0xffff9148f920   768  49b04241       constant
0xffff9148f924   772  00000000       constant
0xffff9148f928   776  49b04241       constant
0xffff9148f92c   780  00000000       constant
0xffff9148f930   784  49b04241       constant
0xffff9148f934   788  00000000       constant
0xffff9148f938   792  49b04241       constant
0xffff9148f93c   796  00000000       constant
0xffff9148f940   800  49b04241       constant
0xffff9148f944   804  00000000       constant
0xffff9148f948   808  49b04241       constant
0xffff9148f94c   812  00000000       constant
0xffff9148f950   816  91406820       constant
0xffff9148f954   820  0000ffff       constant
0xffff9148f958   824  91406260       constant
0xffff9148f95c   828  0000ffff       constant
0xffff9148f960   832  914068e0       constant
0xffff9148f964   836  0000ffff       constant


Safepoints (size = 21)
0xffff9148f800   480  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 47)
0xffff9148f640  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9148f658  embedded object  (0x49b04519 <the hole>)
0xffff9148f668  embedded object  (0x49b04241 <undefined>)
0xffff9148f670  embedded object  (0x49b04241 <undefined>)
0xffff9148f678  embedded object  (0x49b04241 <undefined>)
0xffff9148f680  embedded object  (0x49b04241 <undefined>)
0xffff9148f688  embedded object  (0x49b04241 <undefined>)
0xffff9148f690  embedded object  (0x49b04241 <undefined>)
0xffff9148f698  embedded object  (0x49b04241 <undefined>)
0xffff9148f6a0  embedded object  (0x49b04241 <undefined>)
0xffff9148f6a8  embedded object  (0x49b04241 <undefined>)
0xffff9148f6b0  embedded object  (0x49b04241 <undefined>)
0xffff9148f6b8  embedded object  (0x49b04241 <undefined>)
0xffff9148f6c0  embedded object  (0x49b04241 <undefined>)
0xffff9148f6c8  embedded object  (0x49b04241 <undefined>)
0xffff9148f6d0  embedded object  (0x49b04241 <undefined>)
0xffff9148f6d8  embedded object  (0x49b04241 <undefined>)
0xffff9148f6e0  embedded object  (0x49b04241 <undefined>)
0xffff9148f6e8  embedded object  (0x49b04241 <undefined>)
0xffff9148f6f0  embedded object  (0x49b04241 <undefined>)
0xffff9148f6f8  embedded object  (0x49b04241 <undefined>)
0xffff9148f700  embedded object  (0x49b04241 <undefined>)
0xffff9148f708  embedded object  (0x49b04241 <undefined>)
0xffff9148f710  embedded object  (0x49b04241 <undefined>)
0xffff9148f718  embedded object  (0x49b04241 <undefined>)
0xffff9148f720  embedded object  (0x49b04241 <undefined>)
0xffff9148f728  embedded object  (0x49b04241 <undefined>)
0xffff9148f730  embedded object  (0x49b04241 <undefined>)
0xffff9148f738  embedded object  (0x49b04241 <undefined>)
0xffff9148f740  embedded object  (0x49b04241 <undefined>)
0xffff9148f74c  embedded object  (0x49b04241 <undefined>)
0xffff9148f758  embedded object  (0x49b04241 <undefined>)
0xffff9148f764  embedded object  (0x49b04241 <undefined>)
0xffff9148f770  embedded object  (0x49b04241 <undefined>)
0xffff9148f77c  embedded object  (0x49b04241 <undefined>)
0xffff9148f788  embedded object  (0x49b04241 <undefined>)
0xffff9148f794  embedded object  (0x49b04241 <undefined>)
0xffff9148f7a0  embedded object  (0x49b04241 <undefined>)
0xffff9148f7d4  code target (STUB)  (0xffff91406820)
0xffff9148f7f8  code target (STUB)  (0xffff91406260)
0xffff9148f804  code target (STUB)  (0xffff914068e0)
0xffff9148f818  constant pool (size 336)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 861)
0xffff9148f620     0  movz x2, #0xf2c0
0xffff9148f624     4  movk x2, #0x4117, lsl #16
0xffff9148f628     8  ldp x3, x0, [x2]
0xffff9148f62c    12  adds x16, x3, #0x150 (336)
0xffff9148f630    16  ccmp x16, x0, #nzCv, lo
0xffff9148f634    20  b.hi #+0x180 (addr 0xffff9148f7b4)
0xffff9148f638    24  str x16, [x2]
0xffff9148f63c    28  orr x3, x3, #0x1
0xffff9148f640    32  ldr x0, pc+480 (addr 0x0000ffff9148f820)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9148f644    36  stur x0, [x3, #-1]
0xffff9148f648    40  movz x0, #0x2800000000
0xffff9148f64c    44  stur x0, [x3, #7]
0xffff9148f650    48  stur x1, [x3, #15]
0xffff9148f654    52  stur cp, [x3, #23]
0xffff9148f658    56  ldr x0, pc+464 (addr 0x0000ffff9148f828)    ;; object: 0x49b04519 <the hole>
0xffff9148f65c    60  stur x0, [x3, #31]
0xffff9148f660    64  ldur x0, [cp, #39]
0xffff9148f664    68  stur x0, [x3, #39]
0xffff9148f668    72  ldr x0, pc+456 (addr 0x0000ffff9148f830)    ;; object: 0x49b04241 <undefined>
0xffff9148f66c    76  stur x0, [x3, #47]
0xffff9148f670    80  ldr x0, pc+456 (addr 0x0000ffff9148f838)    ;; object: 0x49b04241 <undefined>
0xffff9148f674    84  stur x0, [x3, #55]
0xffff9148f678    88  ldr x0, pc+456 (addr 0x0000ffff9148f840)    ;; object: 0x49b04241 <undefined>
0xffff9148f67c    92  stur x0, [x3, #63]
0xffff9148f680    96  ldr x0, pc+456 (addr 0x0000ffff9148f848)    ;; object: 0x49b04241 <undefined>
0xffff9148f684   100  stur x0, [x3, #71]
0xffff9148f688   104  ldr x0, pc+456 (addr 0x0000ffff9148f850)    ;; object: 0x49b04241 <undefined>
0xffff9148f68c   108  stur x0, [x3, #79]
0xffff9148f690   112  ldr x0, pc+456 (addr 0x0000ffff9148f858)    ;; object: 0x49b04241 <undefined>
0xffff9148f694   116  stur x0, [x3, #87]
0xffff9148f698   120  ldr x0, pc+456 (addr 0x0000ffff9148f860)    ;; object: 0x49b04241 <undefined>
0xffff9148f69c   124  stur x0, [x3, #95]
0xffff9148f6a0   128  ldr x0, pc+456 (addr 0x0000ffff9148f868)    ;; object: 0x49b04241 <undefined>
0xffff9148f6a4   132  stur x0, [x3, #103]
0xffff9148f6a8   136  ldr x0, pc+456 (addr 0x0000ffff9148f870)    ;; object: 0x49b04241 <undefined>
0xffff9148f6ac   140  stur x0, [x3, #111]
0xffff9148f6b0   144  ldr x0, pc+456 (addr 0x0000ffff9148f878)    ;; object: 0x49b04241 <undefined>
0xffff9148f6b4   148  stur x0, [x3, #119]
0xffff9148f6b8   152  ldr x0, pc+456 (addr 0x0000ffff9148f880)    ;; object: 0x49b04241 <undefined>
0xffff9148f6bc   156  stur x0, [x3, #127]
0xffff9148f6c0   160  ldr x0, pc+456 (addr 0x0000ffff9148f888)    ;; object: 0x49b04241 <undefined>
0xffff9148f6c4   164  stur x0, [x3, #135]
0xffff9148f6c8   168  ldr x0, pc+456 (addr 0x0000ffff9148f890)    ;; object: 0x49b04241 <undefined>
0xffff9148f6cc   172  stur x0, [x3, #143]
0xffff9148f6d0   176  ldr x0, pc+456 (addr 0x0000ffff9148f898)    ;; object: 0x49b04241 <undefined>
0xffff9148f6d4   180  stur x0, [x3, #151]
0xffff9148f6d8   184  ldr x0, pc+456 (addr 0x0000ffff9148f8a0)    ;; object: 0x49b04241 <undefined>
0xffff9148f6dc   188  stur x0, [x3, #159]
0xffff9148f6e0   192  ldr x0, pc+456 (addr 0x0000ffff9148f8a8)    ;; object: 0x49b04241 <undefined>
0xffff9148f6e4   196  stur x0, [x3, #167]
0xffff9148f6e8   200  ldr x0, pc+456 (addr 0x0000ffff9148f8b0)    ;; object: 0x49b04241 <undefined>
0xffff9148f6ec   204  stur x0, [x3, #175]
0xffff9148f6f0   208  ldr x0, pc+456 (addr 0x0000ffff9148f8b8)    ;; object: 0x49b04241 <undefined>
0xffff9148f6f4   212  stur x0, [x3, #183]
0xffff9148f6f8   216  ldr x0, pc+456 (addr 0x0000ffff9148f8c0)    ;; object: 0x49b04241 <undefined>
0xffff9148f6fc   220  stur x0, [x3, #191]
0xffff9148f700   224  ldr x0, pc+456 (addr 0x0000ffff9148f8c8)    ;; object: 0x49b04241 <undefined>
0xffff9148f704   228  stur x0, [x3, #199]
0xffff9148f708   232  ldr x0, pc+456 (addr 0x0000ffff9148f8d0)    ;; object: 0x49b04241 <undefined>
0xffff9148f70c   236  stur x0, [x3, #207]
0xffff9148f710   240  ldr x0, pc+456 (addr 0x0000ffff9148f8d8)    ;; object: 0x49b04241 <undefined>
0xffff9148f714   244  stur x0, [x3, #215]
0xffff9148f718   248  ldr x0, pc+456 (addr 0x0000ffff9148f8e0)    ;; object: 0x49b04241 <undefined>
0xffff9148f71c   252  stur x0, [x3, #223]
0xffff9148f720   256  ldr x0, pc+456 (addr 0x0000ffff9148f8e8)    ;; object: 0x49b04241 <undefined>
0xffff9148f724   260  stur x0, [x3, #231]
0xffff9148f728   264  ldr x0, pc+456 (addr 0x0000ffff9148f8f0)    ;; object: 0x49b04241 <undefined>
0xffff9148f72c   268  stur x0, [x3, #239]
0xffff9148f730   272  ldr x0, pc+456 (addr 0x0000ffff9148f8f8)    ;; object: 0x49b04241 <undefined>
0xffff9148f734   276  stur x0, [x3, #247]
0xffff9148f738   280  ldr x0, pc+456 (addr 0x0000ffff9148f900)    ;; object: 0x49b04241 <undefined>
0xffff9148f73c   284  stur x0, [x3, #255]
0xffff9148f740   288  ldr x0, pc+456 (addr 0x0000ffff9148f908)    ;; object: 0x49b04241 <undefined>
0xffff9148f744   292  movz x16, #0x107
0xffff9148f748   296  str x0, [x3, x16]
0xffff9148f74c   300  ldr x0, pc+452 (addr 0x0000ffff9148f910)    ;; object: 0x49b04241 <undefined>
0xffff9148f750   304  movz x16, #0x10f
0xffff9148f754   308  str x0, [x3, x16]
0xffff9148f758   312  ldr x0, pc+448 (addr 0x0000ffff9148f918)    ;; object: 0x49b04241 <undefined>
0xffff9148f75c   316  movz x16, #0x117
0xffff9148f760   320  str x0, [x3, x16]
0xffff9148f764   324  ldr x0, pc+444 (addr 0x0000ffff9148f920)    ;; object: 0x49b04241 <undefined>
0xffff9148f768   328  movz x16, #0x11f
0xffff9148f76c   332  str x0, [x3, x16]
0xffff9148f770   336  ldr x0, pc+440 (addr 0x0000ffff9148f928)    ;; object: 0x49b04241 <undefined>
0xffff9148f774   340  movz x16, #0x127
0xffff9148f778   344  str x0, [x3, x16]
0xffff9148f77c   348  ldr x0, pc+436 (addr 0x0000ffff9148f930)    ;; object: 0x49b04241 <undefined>
0xffff9148f780   352  movz x16, #0x12f
0xffff9148f784   356  str x0, [x3, x16]
0xffff9148f788   360  ldr x0, pc+432 (addr 0x0000ffff9148f938)    ;; object: 0x49b04241 <undefined>
0xffff9148f78c   364  movz x16, #0x137
0xffff9148f790   368  str x0, [x3, x16]
0xffff9148f794   372  ldr x0, pc+428 (addr 0x0000ffff9148f940)    ;; object: 0x49b04241 <undefined>
0xffff9148f798   376  movz x16, #0x13f
0xffff9148f79c   380  str x0, [x3, x16]
0xffff9148f7a0   384  ldr x0, pc+424 (addr 0x0000ffff9148f948)    ;; object: 0x49b04241 <undefined>
0xffff9148f7a4   388  movz x16, #0x147
0xffff9148f7a8   392  str x0, [x3, x16]
0xffff9148f7ac   396  mov x0, x3
0xffff9148f7b0   400  ret
0xffff9148f7b4   404  sub csp, jssp, #0x10 (16)
0xffff9148f7b8   408  stp fp, lr, [jssp, #-16]!
0xffff9148f7bc   412  movz fp, #0xa00000000
0xffff9148f7c0   416  sub csp, jssp, #0x8 (8)
0xffff9148f7c4   420  str fp, [jssp, #-8]!
0xffff9148f7c8   424  add fp, jssp, #0x8 (8)
0xffff9148f7cc   428  movz x3, #0x0
0xffff9148f7d0   432  mov x16, lr
0xffff9148f7d4   436  ldr x17, pc+380 (addr 0x0000ffff9148f950)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9148f7d8   440  blr x17
0xffff9148f7dc   444  movz x0, #0x15000000000
0xffff9148f7e0   448  movz x10, #0x0
0xffff9148f7e4   452  sub csp, jssp, #0x10 (16)
0xffff9148f7e8   456  stp x10, x0, [jssp, #-16]!
0xffff9148f7ec   460  movz x0, #0x2
0xffff9148f7f0   464  movz x1, #0x5b88
0xffff9148f7f4   468  movk x1, #0xe2, lsl #16
0xffff9148f7f8   472  ldr x16, pc+352 (addr 0x0000ffff9148f958)    ;; code: STUB, CEntryStub, minor: 5
0xffff9148f7fc   476  blr x16
0xffff9148f800   480  str x0, [jssp, #24]
0xffff9148f804   484  ldr x16, pc+348 (addr 0x0000ffff9148f960)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9148f808   488  blr x16
0xffff9148f80c   492  ldr lr, [jssp, #16]
0xffff9148f810   496  ldp xzr, fp, [jssp], #24
0xffff9148f814   500  b #-0x1d4 (addr 0xffff9148f640)
0xffff9148f818   504  58000a7f       constant pool begin (num_const = 83)    ;; constant pool
0xffff9148f81c   508  d63f03e0       constant
0xffff9148f820   512  36406149       constant
0xffff9148f824   516  00000000       constant
0xffff9148f828   520  49b04519       constant
0xffff9148f82c   524  00000000       constant
0xffff9148f830   528  49b04241       constant
0xffff9148f834   532  00000000       constant
0xffff9148f838   536  49b04241       constant
0xffff9148f83c   540  00000000       constant
0xffff9148f840   544  49b04241       constant
0xffff9148f844   548  00000000       constant
0xffff9148f848   552  49b04241       constant
0xffff9148f84c   556  00000000       constant
0xffff9148f850   560  49b04241       constant
0xffff9148f854   564  00000000       constant
0xffff9148f858   568  49b04241       constant
0xffff9148f85c   572  00000000       constant
0xffff9148f860   576  49b04241       constant
0xffff9148f864   580  00000000       constant
0xffff9148f868   584  49b04241       constant
0xffff9148f86c   588  00000000       constant
0xffff9148f870   592  49b04241       constant
0xffff9148f874   596  00000000       constant
0xffff9148f878   600  49b04241       constant
0xffff9148f87c   604  00000000       constant
0xffff9148f880   608  49b04241       constant
0xffff9148f884   612  00000000       constant
0xffff9148f888   616  49b04241       constant
0xffff9148f88c   620  00000000       constant
0xffff9148f890   624  49b04241       constant
0xffff9148f894   628  00000000       constant
0xffff9148f898   632  49b04241       constant
0xffff9148f89c   636  00000000       constant
0xffff9148f8a0   640  49b04241       constant
0xffff9148f8a4   644  00000000       constant
0xffff9148f8a8   648  49b04241       constant
0xffff9148f8ac   652  00000000       constant
0xffff9148f8b0   656  49b04241       constant
0xffff9148f8b4   660  00000000       constant
0xffff9148f8b8   664  49b04241       constant
0xffff9148f8bc   668  00000000       constant
0xffff9148f8c0   672  49b04241       constant
0xffff9148f8c4   676  00000000       constant
0xffff9148f8c8   680  49b04241       constant
0xffff9148f8cc   684  00000000       constant
0xffff9148f8d0   688  49b04241       constant
0xffff9148f8d4   692  00000000       constant
0xffff9148f8d8   696  49b04241       constant
0xffff9148f8dc   700  00000000       constant
0xffff9148f8e0   704  49b04241       constant
0xffff9148f8e4   708  00000000       constant
0xffff9148f8e8   712  49b04241       constant
0xffff9148f8ec   716  00000000       constant
0xffff9148f8f0   720  49b04241       constant
0xffff9148f8f4   724  00000000       constant
0xffff9148f8f8   728  49b04241       constant
0xffff9148f8fc   732  00000000       constant
0xffff9148f900   736  49b04241       constant
0xffff9148f904   740  00000000       constant
0xffff9148f908   744  49b04241       constant
0xffff9148f90c   748  00000000       constant
0xffff9148f910   752  49b04241       constant
0xffff9148f914   756  00000000       constant
0xffff9148f918   760  49b04241       constant
0xffff9148f91c   764  00000000       constant
0xffff9148f920   768  49b04241       constant
0xffff9148f924   772  00000000       constant
0xffff9148f928   776  49b04241       constant
0xffff9148f92c   780  00000000       constant
0xffff9148f930   784  49b04241       constant
0xffff9148f934   788  00000000       constant
0xffff9148f938   792  49b04241       constant
0xffff9148f93c   796  00000000       constant
0xffff9148f940   800  49b04241       constant
0xffff9148f944   804  00000000       constant
0xffff9148f948   808  49b04241       constant
0xffff9148f94c   812  00000000       constant
0xffff9148f950   816  91406820       constant
0xffff9148f954   820  0000ffff       constant
0xffff9148f958   824  91406260       constant
0xffff9148f95c   828  0000ffff       constant
0xffff9148f960   832  914068e0       constant
0xffff9148f964   836  0000ffff       constant


Safepoints (size = 21)
0xffff9148f800   480  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 47)
0xffff9148f640  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9148f658  embedded object  (0x49b04519 <the hole>)
0xffff9148f668  embedded object  (0x49b04241 <undefined>)
0xffff9148f670  embedded object  (0x49b04241 <undefined>)
0xffff9148f678  embedded object  (0x49b04241 <undefined>)
0xffff9148f680  embedded object  (0x49b04241 <undefined>)
0xffff9148f688  embedded object  (0x49b04241 <undefined>)
0xffff9148f690  embedded object  (0x49b04241 <undefined>)
0xffff9148f698  embedded object  (0x49b04241 <undefined>)
0xffff9148f6a0  embedded object  (0x49b04241 <undefined>)
0xffff9148f6a8  embedded object  (0x49b04241 <undefined>)
0xffff9148f6b0  embedded object  (0x49b04241 <undefined>)
0xffff9148f6b8  embedded object  (0x49b04241 <undefined>)
0xffff9148f6c0  embedded object  (0x49b04241 <undefined>)
0xffff9148f6c8  embedded object  (0x49b04241 <undefined>)
0xffff9148f6d0  embedded object  (0x49b04241 <undefined>)
0xffff9148f6d8  embedded object  (0x49b04241 <undefined>)
0xffff9148f6e0  embedded object  (0x49b04241 <undefined>)
0xffff9148f6e8  embedded object  (0x49b04241 <undefined>)
0xffff9148f6f0  embedded object  (0x49b04241 <undefined>)
0xffff9148f6f8  embedded object  (0x49b04241 <undefined>)
0xffff9148f700  embedded object  (0x49b04241 <undefined>)
0xffff9148f708  embedded object  (0x49b04241 <undefined>)
0xffff9148f710  embedded object  (0x49b04241 <undefined>)
0xffff9148f718  embedded object  (0x49b04241 <undefined>)
0xffff9148f720  embedded object  (0x49b04241 <undefined>)
0xffff9148f728  embedded object  (0x49b04241 <undefined>)
0xffff9148f730  embedded object  (0x49b04241 <undefined>)
0xffff9148f738  embedded object  (0x49b04241 <undefined>)
0xffff9148f740  embedded object  (0x49b04241 <undefined>)
0xffff9148f74c  embedded object  (0x49b04241 <undefined>)
0xffff9148f758  embedded object  (0x49b04241 <undefined>)
0xffff9148f764  embedded object  (0x49b04241 <undefined>)
0xffff9148f770  embedded object  (0x49b04241 <undefined>)
0xffff9148f77c  embedded object  (0x49b04241 <undefined>)
0xffff9148f788  embedded object  (0x49b04241 <undefined>)
0xffff9148f794  embedded object  (0x49b04241 <undefined>)
0xffff9148f7a0  embedded object  (0x49b04241 <undefined>)
0xffff9148f7d4  code target (STUB)  (0xffff91406820)
0xffff9148f7f8  code target (STUB)  (0xffff91406260)
0xffff9148f804  code target (STUB)  (0xffff914068e0)
0xffff9148f818  constant pool (size 336)


kind = HANDLER
major_key = <NoCache>Stub
name = process
compiler = unknown
Instructions (size = 120)
0xffff91493300     0  sub csp, jssp, #0x8 (8)
0xffff91493304     4  str x3, [jssp, #-8]!
0xffff91493308     8  sub csp, jssp, #0x8 (8)
0xffff9149330c    12  str x0, [jssp, #-8]!
0xffff91493310    16  ldr x0, pc+80 (addr 0x0000ffff91493360)    ;; object: 0x49bc5d51 Cell for 0
0xffff91493314    20  ldur x0, [x0, #7]
0xffff91493318    24  cmp x0, #0x0 (0)
0xffff9149331c    28  b.ne #+0x2c (addr 0xffff91493348)
0xffff91493320    32  ldr x0, pc+72 (addr 0x0000ffff91493368)    ;; object: 0x49bd89f9 WeakCell for 0x49bc79b9 PropertyCell for 0x26a92ce9 <a process with map 0x3641c0f1>
0xffff91493324    36  ldur x0, [x0, #7]
0xffff91493328    40  tbz w0, #0, #+0x20 (addr 0xffff91493348)
0xffff9149332c    44  ldur x0, [x0, #15]
0xffff91493330    48  ldr x16, [x26, #88]
0xffff91493334    52  cmp x0, x16
0xffff91493338    56  b.eq #+0x10 (addr 0xffff91493348)
0xffff9149333c    60  add jssp, jssp, #0x10 (16)
0xffff91493340    64  ret
0xffff91493344    68  b #+0x14 (addr 0xffff91493358)
0xffff91493348    72  ldr x0, [jssp], #8
0xffff9149334c    76  ldr x3, [jssp], #8
0xffff91493350    80  ldr x16, pc+32 (addr 0x0000ffff91493370)    ;; code: BUILTIN
0xffff91493354    84  br x16
0xffff91493358    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9149335c    92  d63f03e0       constant
0xffff91493360    96  49bc5d51       constant
0xffff91493364   100  00000000       constant
0xffff91493368   104  49bd89f9       constant
0xffff9149336c   108  00000000       constant
0xffff91493370   112  914222e0       constant
0xffff91493374   116  0000ffff       constant


RelocInfo (size = 9)
0xffff91493310  embedded object  (0x49bc5d51 Cell for 0)
0xffff91493320  embedded object  (0x49bd89f9 WeakCell for 0x49bc79b9 PropertyCell for 0x26a92ce9 <a process with map 0x3641c0f1>)
0xffff91493350  code target (BUILTIN)  (0xffff914222e0)
0xffff91493358  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = internal/util
compiler = unknown
Instructions (size = 184)
0xffff914933e0     0  sub csp, jssp, #0x8 (8)
0xffff914933e4     4  str x3, [jssp, #-8]!
0xffff914933e8     8  sub csp, jssp, #0x8 (8)
0xffff914933ec    12  str x4, [jssp, #-8]!
0xffff914933f0    16  ldr x3, pc+112 (addr 0x0000ffff91493460)    ;; object: 0x49b63e59 Cell for 0
0xffff914933f4    20  ldur x3, [x3, #7]
0xffff914933f8    24  cmp x3, #0x0 (0)
0xffff914933fc    28  b.ne #+0x44 (addr 0xffff91493440)
0xffff91493400    32  tbz w0, #0, #+0x40 (addr 0xffff91493440)
0xffff91493404    36  ldur x3, [x0, #-1]
0xffff91493408    40  ldr x4, pc+96 (addr 0x0000ffff91493468)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9149340c    44  ldur x4, [x4, #7]
0xffff91493410    48  cmp x3, x4
0xffff91493414    52  b.ne #+0x2c (addr 0xffff91493440)
0xffff91493418    56  ldr x5, pc+88 (addr 0x0000ffff91493470)    ;; object: 0x49bdacf1 WeakCell for 0x3641f2c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9149341c    60  ldur x5, [x5, #7]
0xffff91493420    64  tbz w5, #0, #+0x20 (addr 0xffff91493440)
0xffff91493424    68  ldursw x4, [x5, #15]
0xffff91493428    72  tbnz w4, #23, #+0x18 (addr 0xffff91493440)
0xffff9149342c    76  ldr x4, [jssp], #8
0xffff91493430    80  ldr x3, [jssp], #8
0xffff91493434    84  ldr x2, pc+68 (addr 0x0000ffff91493478)    ;; object: 0x49bb9451 <String[13]: internal/util>
0xffff91493438    88  ldr x16, pc+72 (addr 0x0000ffff91493480)    ;; code: HANDLER, StoreTransitionStub, minor: 198662
0xffff9149343c    92  br x16
0xffff91493440    96  ldr x2, pc+72 (addr 0x0000ffff91493488)    ;; object: 0x49bb9451 <String[13]: internal/util>
0xffff91493444   100  ldr x4, [jssp], #8
0xffff91493448   104  ldr x3, [jssp], #8
0xffff9149344c   108  ldr x16, pc+68 (addr 0x0000ffff91493490)    ;; code: BUILTIN
0xffff91493450   112  br x16
0xffff91493454   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff91493458   120  d63f03e0       constant
0xffff9149345c   124  d503201f       constant
0xffff91493460   128  49b63e59       constant
0xffff91493464   132  00000000       constant
0xffff91493468   136  49bc22b1       constant
0xffff9149346c   140  00000000       constant
0xffff91493470   144  49bdacf1       constant
0xffff91493474   148  00000000       constant
0xffff91493478   152  49bb9451       constant
0xffff9149347c   156  00000000       constant
0xffff91493480   160  9148c000       constant
0xffff91493484   164  0000ffff       constant
0xffff91493488   168  49bb9451       constant
0xffff9149348c   172  00000000       constant
0xffff91493490   176  91422420       constant
0xffff91493494   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914933f0  embedded object  (0x49b63e59 Cell for 0)
0xffff91493408  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91493418  embedded object  (0x49bdacf1 WeakCell for 0x3641f2c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91493434  embedded object  (0x49bb9451 <String[13]: internal/util>)
0xffff91493438  code target (HANDLER)  (0xffff9148c000)
0xffff91493440  embedded object  (0x49bb9451 <String[13]: internal/util>)
0xffff9149344c  code target (BUILTIN)  (0xffff91422420)
0xffff91493454  constant pool (size 68)

kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 262145
name = CallICStub(args(1), NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff91493500     0  add x4, x2, x3, asr #29
0xffff91493504     4  ldur x4, [x4, #15]
0xffff91493508     8  ldur x5, [x4, #7]
0xffff9149350c    12  cmp x5, x1
0xffff91493510    16  b.ne #+0x2c (addr 0xffff9149353c)
0xffff91493514    20  tbz w1, #0, #+0x28 (addr 0xffff9149353c)
0xffff91493518    24  add x2, x2, x3, asr #29
0xffff9149351c    28  add x2, x2, #0x18 (24)
0xffff91493520    32  ldur x3, [x2, #-1]
0xffff91493524    36  movz x16, #0x200000000
0xffff91493528    40  add x3, x3, x16
0xffff9149352c    44  stur x3, [x2, #-1]
0xffff91493530    48  movz x0, #0x1
0xffff91493534    52  ldr x16, pc+372 (addr 0x0000ffff914936a8)    ;; code: BUILTIN
0xffff91493538    56  br x16
0xffff9149353c    60  ldr x16, [x26, #2400]
0xffff91493540    64  cmp x4, x16
0xffff91493544    68  b.eq #+0x78 (addr 0xffff914935bc)
0xffff91493548    72  ldur x5, [x4, #-1]
0xffff9149354c    76  ldr x16, [x26, #2736]
0xffff91493550    80  cmp x5, x16
0xffff91493554    84  b.ne #+0x40 (addr 0xffff91493594)
0xffff91493558    88  ldur x5, [cp, #39]
0xffff9149355c    92  ldur x5, [x5, #95]
0xffff91493560    96  cmp x1, x5
0xffff91493564   100  b.ne #+0xec (addr 0xffff91493650)
0xffff91493568   104  movz x0, #0x1
0xffff9149356c   108  add x2, x2, x3, asr #29
0xffff91493570   112  add x2, x2, #0x18 (24)
0xffff91493574   116  ldur x3, [x2, #-1]
0xffff91493578   120  movz x16, #0x200000000
0xffff9149357c   124  add x3, x3, x16
0xffff91493580   128  stur x3, [x2, #-1]
0xffff91493584   132  mov x2, x4
0xffff91493588   136  mov x3, x1
0xffff9149358c   140  ldr x16, pc+292 (addr 0x0000ffff914936b0)    ;; code: STUB, ArrayConstructorStub, minor: 2
0xffff91493590   144  br x16
0xffff91493594   148  ldr x16, [x26, #2568]
0xffff91493598   152  cmp x4, x16
0xffff9149359c   156  b.eq #+0xb4 (addr 0xffff91493650)
0xffff914935a0   160  ldur x5, [x4, #-1]
0xffff914935a4   164  ldrb w5, [x5, #11]
0xffff914935a8   168  cmp x5, #0xc9 (201)
0xffff914935ac   172  b.ne #+0xa4 (addr 0xffff91493650)
0xffff914935b0   176  add x4, x2, x3, asr #29
0xffff914935b4   180  ldr x5, [x26, #2400]
0xffff914935b8   184  stur x5, [x4, #15]
0xffff914935bc   188  movz x0, #0x1
0xffff914935c0   192  ldr x16, pc+248 (addr 0x0000ffff914936b8)    ;; code: BUILTIN
0xffff914935c4   196  br x16
0xffff914935c8   200  tbz w1, #0, #+0x88 (addr 0xffff91493650)
0xffff914935cc   204  ldur x5, [x1, #-1]
0xffff914935d0   208  ldrb w5, [x5, #11]
0xffff914935d4   212  cmp x5, #0xc9 (201)
0xffff914935d8   216  b.ne #+0x78 (addr 0xffff91493650)
0xffff914935dc   220  ldur x5, [cp, #39]
0xffff914935e0   224  ldur x5, [x5, #95]
0xffff914935e4   228  cmp x1, x5
0xffff914935e8   232  b.eq #+0x68 (addr 0xffff91493650)
0xffff914935ec   236  ldur x4, [x1, #39]
0xffff914935f0   240  ldur x4, [x4, #39]
0xffff914935f4   244  ldur x5, [cp, #39]
0xffff914935f8   248  cmp x4, x5
0xffff914935fc   252  b.ne #+0x54 (addr 0xffff91493650)
0xffff91493600   256  movz x5, #0x200000000
0xffff91493604   260  adds x4, x2, x3, asr #29
0xffff91493608   264  stur x5, [x4, #23]
0xffff9149360c   268  movz x16, #0xc00000000
0xffff91493610   272  sub csp, jssp, #0x10 (16)
0xffff91493614   276  stp fp, lr, [jssp, #-16]!
0xffff91493618   280  sub csp, jssp, #0x10 (16)
0xffff9149361c   284  str x16, [jssp, #-8]!
0xffff91493620   288  ldr x17, pc+160 (addr 0x0000ffff914936c0)    ;; object: 0xffff914934a1 <Code: CALL_IC>
0xffff91493624   292  sub csp, jssp, #0x10 (16)
0xffff91493628   296  str x17, [jssp, #-8]!
0xffff9149362c   300  add fp, jssp, #0x10 (16)
0xffff91493630   304  sub csp, jssp, #0x8 (8)
0xffff91493634   308  str x1, [jssp, #-8]!
0xffff91493638   312  ldr x16, pc+144 (addr 0x0000ffff914936c8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff9149363c   316  blr x16
0xffff91493640   320  ldr x1, [jssp], #8
0xffff91493644   324  mov jssp, fp
0xffff91493648   328  ldp fp, lr, [jssp], #16
0xffff9149364c   332  b #-0x11c (addr 0xffff91493530)
0xffff91493650   336  movz x16, #0xc00000000
0xffff91493654   340  sub csp, jssp, #0x10 (16)
0xffff91493658   344  stp fp, lr, [jssp, #-16]!
0xffff9149365c   348  sub csp, jssp, #0x10 (16)
0xffff91493660   352  str x16, [jssp, #-8]!
0xffff91493664   356  ldr x17, pc+108 (addr 0x0000ffff914936d0)    ;; object: 0xffff914934a1 <Code: CALL_IC>
0xffff91493668   360  sub csp, jssp, #0x10 (16)
0xffff9149366c   364  str x17, [jssp, #-8]!
0xffff91493670   368  add fp, jssp, #0x10 (16)
0xffff91493674   372  sub csp, jssp, #0x18 (24)
0xffff91493678   376  stp x3, x2, [jssp, #-24]!
0xffff9149367c   380  str x1, [jssp, #16]
0xffff91493680   384  movz x0, #0x3
0xffff91493684   388  ldr x1, pc+84 (addr 0x0000ffff914936d8)    ;; external reference (Runtime::CallIC_Miss)
0xffff91493688   392  ldr x16, pc+88 (addr 0x0000ffff914936e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9149368c   396  blr x16
0xffff91493690   400  mov x1, x0
0xffff91493694   404  mov jssp, fp
0xffff91493698   408  ldp fp, lr, [jssp], #16
0xffff9149369c   412  b #-0xe0 (addr 0xffff914935bc)
0xffff914936a0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff914936a4   420  d63f03e0       constant
0xffff914936a8   424  9141e280       constant
0xffff914936ac   428  0000ffff       constant
0xffff914936b0   432  91430b00       constant
0xffff914936b4   436  0000ffff       constant
0xffff914936b8   440  9141f560       constant
0xffff914936bc   444  0000ffff       constant
0xffff914936c0   448  914934a1       constant
0xffff914936c4   452  0000ffff       constant
0xffff914936c8   456  9140ddc0       constant
0xffff914936cc   460  0000ffff       constant
0xffff914936d0   464  914934a1       constant
0xffff914936d4   468  0000ffff       constant
0xffff914936d8   472  00c86928       constant
0xffff914936dc   476  00000000       constant
0xffff914936e0   480  91406060       constant
0xffff914936e4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff91493534  code target (BUILTIN)  (0xffff9141e280)
0xffff9149358c  code target (STUB)  (0xffff91430b00)
0xffff914935c0  code target (BUILTIN)  (0xffff9141f560)
0xffff91493620  embedded object  (0xffff914934a1 <Code: CALL_IC>)
0xffff91493638  code target (STUB)  (0xffff9140ddc0)
0xffff91493664  embedded object  (0xffff914934a1 <Code: CALL_IC>)
0xffff91493684  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff91493688  code target (STUB)  (0xffff91406060)
0xffff914936a0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 262145
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff91493760     0  ldur x2, [fp, #-16]
0xffff91493764     4  ldur x2, [x2, #31]
0xffff91493768     8  ldur x2, [x2, #87]
0xffff9149376c    12  ldr x16, pc+20 (addr 0x0000ffff91493780)    ;; code: CALL_IC, GENERIC
0xffff91493770    16  br x16
0xffff91493774    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91493778    24  d63f03e0       constant
0xffff9149377c    28  d503201f       constant
0xffff91493780    32  91493500       constant
0xffff91493784    36  0000ffff       constant


RelocInfo (size = 7)
0xffff9149376c  code target (CALL_IC)  (0xffff91493500)
0xffff91493774  constant pool (size 20)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 32
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 152)
0xffff91494840     0  tbz w0, #0, #+0x50 (addr 0xffff91494890)
0xffff91494844     4  ldur x2, [x0, #-1]
0xffff91494848     8  ldrb w1, [x2, #11]
0xffff9149484c    12  cmp x1, #0x80 (128)
0xffff91494850    16  b.ge #+0x10 (addr 0xffff91494860)
0xffff91494854    20  ldur x1, [x0, #15]
0xffff91494858    24  cbz x1, #+0xc (addr 0xffff91494864)
0xffff9149485c    28  b #+0x10 (addr 0xffff9149486c)
0xffff91494860    32  b #+0x30 (addr 0xffff91494890)
0xffff91494864    36  ldr x0, pc+28 (addr 0x0000ffff91494880)    ;; object: 0x49b042b1 <false>
0xffff91494868    40  ret
0xffff9149486c    44  ldr x0, pc+28 (addr 0x0000ffff91494888)    ;; object: 0x49b04281 <true>
0xffff91494870    48  ret
0xffff91494874    52  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff91494878    56  d63f03e0       constant
0xffff9149487c    60  d503201f       constant
0xffff91494880    64  49b042b1       constant
0xffff91494884    68  00000000       constant
0xffff91494888    72  49b04281       constant
0xffff9149488c    76  00000000       constant
0xffff91494890    80  movz x16, #0x0
0xffff91494894    84  sub csp, jssp, #0x10 (16)
0xffff91494898    88  stp fp, lr, [jssp, #-16]!
0xffff9149489c    92  bl #+0x4 (addr 0xffff914948a0)
0xffff914948a0    96  movz x17, #0xa00000000
0xffff914948a4   100  sub csp, jssp, #0x10 (16)
0xffff914948a8   104  stp x17, cp, [jssp, #-16]!
0xffff914948ac   108  add fp, jssp, #0x10 (16)
0xffff914948b0   112  ldr x17, pc+24 (addr 0x0000ffff914948c8)    ;; lazy deoptimization bailout 0
0xffff914948b4   116  add x17, x17, x16
0xffff914948b8   120  br x17
0xffff914948bc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914948c0   128  d63f03e0       constant
0xffff914948c4   132  d503201f       constant
0xffff914948c8   136  91206000       constant
0xffff914948cc   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff91494864  embedded object  (0x49b042b1 <false>)
0xffff9149486c  embedded object  (0x49b04281 <true>)
0xffff91494874  constant pool (size 28)
0xffff914948b0  runtime entry
0xffff914948bc  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 32
type = NORMAL
name = ToBooleanICStub(String)
compiler = crankshaft
Instructions (size = 152)
0xffff91494840     0  tbz w0, #0, #+0x50 (addr 0xffff91494890)
0xffff91494844     4  ldur x2, [x0, #-1]
0xffff91494848     8  ldrb w1, [x2, #11]
0xffff9149484c    12  cmp x1, #0x80 (128)
0xffff91494850    16  b.ge #+0x10 (addr 0xffff91494860)
0xffff91494854    20  ldur x1, [x0, #15]
0xffff91494858    24  cbz x1, #+0xc (addr 0xffff91494864)
0xffff9149485c    28  b #+0x10 (addr 0xffff9149486c)
0xffff91494860    32  b #+0x30 (addr 0xffff91494890)
0xffff91494864    36  ldr x0, pc+28 (addr 0x0000ffff91494880)    ;; object: 0x49b042b1 <false>
0xffff91494868    40  ret
0xffff9149486c    44  ldr x0, pc+28 (addr 0x0000ffff91494888)    ;; object: 0x49b04281 <true>
0xffff91494870    48  ret
0xffff91494874    52  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff91494878    56  d63f03e0       constant
0xffff9149487c    60  d503201f       constant
0xffff91494880    64  49b042b1       constant
0xffff91494884    68  00000000       constant
0xffff91494888    72  49b04281       constant
0xffff9149488c    76  00000000       constant
0xffff91494890    80  movz x16, #0x0
0xffff91494894    84  sub csp, jssp, #0x10 (16)
0xffff91494898    88  stp fp, lr, [jssp, #-16]!
0xffff9149489c    92  bl #+0x4 (addr 0xffff914948a0)
0xffff914948a0    96  movz x17, #0xa00000000
0xffff914948a4   100  sub csp, jssp, #0x10 (16)
0xffff914948a8   104  stp x17, cp, [jssp, #-16]!
0xffff914948ac   108  add fp, jssp, #0x10 (16)
0xffff914948b0   112  ldr x17, pc+24 (addr 0x0000ffff914948c8)    ;; lazy deoptimization bailout 0
0xffff914948b4   116  add x17, x17, x16
0xffff914948b8   120  br x17
0xffff914948bc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914948c0   128  d63f03e0       constant
0xffff914948c4   132  d503201f       constant
0xffff914948c8   136  91206000       constant
0xffff914948cc   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff91494864  embedded object  (0x49b042b1 <false>)
0xffff9149486c  embedded object  (0x49b04281 <true>)
0xffff91494874  constant pool (size 28)
0xffff914948b0  runtime entry
0xffff914948bc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = Symbol
compiler = unknown
Instructions (size = 120)
0xffff91494940     0  sub csp, jssp, #0x8 (8)
0xffff91494944     4  str x3, [jssp, #-8]!
0xffff91494948     8  sub csp, jssp, #0x8 (8)
0xffff9149494c    12  str x0, [jssp, #-8]!
0xffff91494950    16  ldr x0, pc+80 (addr 0x0000ffff914949a0)    ;; object: 0x49bc5d51 Cell for 0
0xffff91494954    20  ldur x0, [x0, #7]
0xffff91494958    24  cmp x0, #0x0 (0)
0xffff9149495c    28  b.ne #+0x2c (addr 0xffff91494988)
0xffff91494960    32  ldr x0, pc+72 (addr 0x0000ffff914949a8)    ;; object: 0x49bdd079 WeakCell for 0x49b42b39 PropertyCell for 0x49b42ad1 <JS Function Symbol (SharedFunctionInfo 0x49b42a29)>
0xffff91494964    36  ldur x0, [x0, #7]
0xffff91494968    40  tbz w0, #0, #+0x20 (addr 0xffff91494988)
0xffff9149496c    44  ldur x0, [x0, #15]
0xffff91494970    48  ldr x16, [x26, #88]
0xffff91494974    52  cmp x0, x16
0xffff91494978    56  b.eq #+0x10 (addr 0xffff91494988)
0xffff9149497c    60  add jssp, jssp, #0x10 (16)
0xffff91494980    64  ret
0xffff91494984    68  b #+0x14 (addr 0xffff91494998)
0xffff91494988    72  ldr x0, [jssp], #8
0xffff9149498c    76  ldr x3, [jssp], #8
0xffff91494990    80  ldr x16, pc+32 (addr 0x0000ffff914949b0)    ;; code: BUILTIN
0xffff91494994    84  br x16
0xffff91494998    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9149499c    92  d63f03e0       constant
0xffff914949a0    96  49bc5d51       constant
0xffff914949a4   100  00000000       constant
0xffff914949a8   104  49bdd079       constant
0xffff914949ac   108  00000000       constant
0xffff914949b0   112  914222e0       constant
0xffff914949b4   116  0000ffff       constant


RelocInfo (size = 9)
0xffff91494950  embedded object  (0x49bc5d51 Cell for 0)
0xffff91494960  embedded object  (0x49bdd079 WeakCell for 0x49b42b39 PropertyCell for 0x49b42ad1 <JS Function Symbol (SharedFunctionInfo 0x49b42a29)>)
0xffff91494990  code target (BUILTIN)  (0xffff914222e0)
0xffff91494998  constant pool (size 32)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff91494a20     0  tbz w0, #0, #+0x50 (addr 0xffff91494a70)
0xffff91494a24     4  mov x2, x0
0xffff91494a28     8  stur x2, [x1, #47]
0xffff91494a2c    12  add x3, x1, #0x2f (47)
0xffff91494a30    16  and x2, x2, #0xfffffffffff00000
0xffff91494a34    20  ldr x2, [x2, #8]
0xffff91494a38    24  tbz w2, #1, #+0x24 (addr 0xffff91494a5c)
0xffff91494a3c    28  and x2, x1, #0xfffffffffff00000
0xffff91494a40    32  ldr x2, [x2, #8]
0xffff91494a44    36  tbz w2, #2, #+0x18 (addr 0xffff91494a5c)
0xffff91494a48    40  sub csp, jssp, #0x8 (8)
0xffff91494a4c    44  str lr, [jssp, #-8]!
0xffff91494a50    48  ldr x16, pc+24 (addr 0x0000ffff91494a68)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff91494a54    52  blr x16
0xffff91494a58    56  ldr lr, [jssp], #8
0xffff91494a5c    60  ret
0xffff91494a60    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91494a64    68  d63f03e0       constant
0xffff91494a68    72  914170c0       constant
0xffff91494a6c    76  0000ffff       constant
0xffff91494a70    80  movz x16, #0x0
0xffff91494a74    84  sub csp, jssp, #0x10 (16)
0xffff91494a78    88  stp fp, lr, [jssp, #-16]!
0xffff91494a7c    92  bl #+0x4 (addr 0xffff91494a80)
0xffff91494a80    96  movz x17, #0xa00000000
0xffff91494a84   100  sub csp, jssp, #0x10 (16)
0xffff91494a88   104  stp x17, cp, [jssp, #-16]!
0xffff91494a8c   108  add fp, jssp, #0x10 (16)
0xffff91494a90   112  ldr x17, pc+24 (addr 0x0000ffff91494aa8)    ;; lazy deoptimization bailout 0
0xffff91494a94   116  add x17, x17, x16
0xffff91494a98   120  br x17
0xffff91494a9c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91494aa0   128  d63f03e0       constant
0xffff91494aa4   132  d503201f       constant
0xffff91494aa8   136  91206000       constant
0xffff91494aac   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff91494a50  code target (STUB)  (0xffff914170c0)
0xffff91494a60  constant pool (size 16)
0xffff91494a90  runtime entry
0xffff91494a9c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff91494a20     0  tbz w0, #0, #+0x50 (addr 0xffff91494a70)
0xffff91494a24     4  mov x2, x0
0xffff91494a28     8  stur x2, [x1, #47]
0xffff91494a2c    12  add x3, x1, #0x2f (47)
0xffff91494a30    16  and x2, x2, #0xfffffffffff00000
0xffff91494a34    20  ldr x2, [x2, #8]
0xffff91494a38    24  tbz w2, #1, #+0x24 (addr 0xffff91494a5c)
0xffff91494a3c    28  and x2, x1, #0xfffffffffff00000
0xffff91494a40    32  ldr x2, [x2, #8]
0xffff91494a44    36  tbz w2, #2, #+0x18 (addr 0xffff91494a5c)
0xffff91494a48    40  sub csp, jssp, #0x8 (8)
0xffff91494a4c    44  str lr, [jssp, #-8]!
0xffff91494a50    48  ldr x16, pc+24 (addr 0x0000ffff91494a68)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff91494a54    52  blr x16
0xffff91494a58    56  ldr lr, [jssp], #8
0xffff91494a5c    60  ret
0xffff91494a60    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff91494a64    68  d63f03e0       constant
0xffff91494a68    72  914170c0       constant
0xffff91494a6c    76  0000ffff       constant
0xffff91494a70    80  movz x16, #0x0
0xffff91494a74    84  sub csp, jssp, #0x10 (16)
0xffff91494a78    88  stp fp, lr, [jssp, #-16]!
0xffff91494a7c    92  bl #+0x4 (addr 0xffff91494a80)
0xffff91494a80    96  movz x17, #0xa00000000
0xffff91494a84   100  sub csp, jssp, #0x10 (16)
0xffff91494a88   104  stp x17, cp, [jssp, #-16]!
0xffff91494a8c   108  add fp, jssp, #0x10 (16)
0xffff91494a90   112  ldr x17, pc+24 (addr 0x0000ffff91494aa8)    ;; lazy deoptimization bailout 0
0xffff91494a94   116  add x17, x17, x16
0xffff91494a98   120  br x17
0xffff91494a9c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91494aa0   128  d63f03e0       constant
0xffff91494aa4   132  d503201f       constant
0xffff91494aa8   136  91206000       constant
0xffff91494aac   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff91494a50  code target (STUB)  (0xffff914170c0)
0xffff91494a60  constant pool (size 16)
0xffff91494a90  runtime entry
0xffff91494a9c  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 344)
0xffff914951e0     0  ldur x5, [x1, #15]
0xffff914951e4     4  ldur w6, [x5, #11]
0xffff914951e8     8  ldur x16, [x1, #23]
0xffff914951ec    12  ldur x16, [x16, #39]
0xffff914951f0    16  tst x16, #0x8
0xffff914951f4    20  b.ne #+0xcc (addr 0xffff914952c0)
0xffff914951f8    24  ldur x7, [x5, #23]
0xffff914951fc    28  ldur x5, [x5, #15]
0xffff91495200    32  add x5, x7, x5
0xffff91495204    36  tbnz w2, #0, #+0x20 (addr 0xffff91495224)
0xffff91495208    40  asr x8, x2, #32
0xffff9149520c    44  cmp w8, w6
0xffff91495210    48  b.hs #+0xc0 (addr 0xffff914952d0)
0xffff91495214    52  tbnz w0, #0, #+0x38 (addr 0xffff9149524c)
0xffff91495218    56  asr x7, x0, #32
0xffff9149521c    60  str w7, [x5, w8, sxtw #2]
0xffff91495220    64  ret
0xffff91495224    68  ldur x16, [x2, #-1]
0xffff91495228    72  ldr x17, [x26, #120]
0xffff9149522c    76  cmp x16, x17
0xffff91495230    80  b.ne #+0xb0 (addr 0xffff914952e0)
0xffff91495234    84  ldur d29, [x2, #7]
0xffff91495238    88  fcvtzs w8, d29
0xffff9149523c    92  scvtf d0, w8
0xffff91495240    96  fcmp d29, d0
0xffff91495244   100  b.ne #+0x9c (addr 0xffff914952e0)
0xffff91495248   104  b #-0x3c (addr 0xffff9149520c)
0xffff9149524c   108  ldur x16, [x0, #-1]
0xffff91495250   112  ldr x17, [x26, #120]
0xffff91495254   116  cmp x16, x17
0xffff91495258   120  b.ne #+0x30 (addr 0xffff91495288)
0xffff9149525c   124  ldur d30, [x0, #7]
0xffff91495260   128  fcvtzs x7, d30
0xffff91495264   132  cmp x7, #0x1 (1)
0xffff91495268   136  ccmn x7, #1, #nzcV, vc
0xffff9149526c   140  b.vc #+0x18 (addr 0xffff91495284)
0xffff91495270   144  sub csp, jssp, #0x8 (8)
0xffff91495274   148  str lr, [jssp, #-8]!
0xffff91495278   152  ldr x16, pc+64 (addr 0x0000ffff914952b8)    ;; code: STUB, DoubleToIStub, minor: 127424
0xffff9149527c   156  blr x16
0xffff91495280   160  ldr lr, [jssp], #8
0xffff91495284   164  b #+0x24 (addr 0xffff914952a8)
0xffff91495288   168  ldp x7, x6, [x26, #64]
0xffff9149528c   172  cmp x0, x7
0xffff91495290   176  cset x7, eq
0xffff91495294   180  ccmp x0, x6, #nZcv, ne
0xffff91495298   184  b.eq #+0x10 (addr 0xffff914952a8)
0xffff9149529c   188  ldr x16, [x26, #40]
0xffff914952a0   192  cmp x0, x16
0xffff914952a4   196  b.ne #+0x4c (addr 0xffff914952f0)
0xffff914952a8   200  b #-0x8c (addr 0xffff9149521c)
0xffff914952ac   204  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914952b0   208  d63f03e0       constant
0xffff914952b4   212  d503201f       constant
0xffff914952b8   216  9144b6c0       constant
0xffff914952bc   220  0000ffff       constant
0xffff914952c0   224  movz x16, #0x0
0xffff914952c4   228  sub csp, jssp, #0x10 (16)
0xffff914952c8   232  stp fp, lr, [jssp, #-16]!
0xffff914952cc   236  bl #+0x34 (addr 0xffff91495300)
0xffff914952d0   240  movz x16, #0x8
0xffff914952d4   244  sub csp, jssp, #0x10 (16)
0xffff914952d8   248  stp fp, lr, [jssp, #-16]!
0xffff914952dc   252  bl #+0x24 (addr 0xffff91495300)
0xffff914952e0   256  movz x16, #0x10
0xffff914952e4   260  sub csp, jssp, #0x10 (16)
0xffff914952e8   264  stp fp, lr, [jssp, #-16]!
0xffff914952ec   268  bl #+0x14 (addr 0xffff91495300)
0xffff914952f0   272  movz x16, #0x18
0xffff914952f4   276  sub csp, jssp, #0x10 (16)
0xffff914952f8   280  stp fp, lr, [jssp, #-16]!
0xffff914952fc   284  bl #+0x4 (addr 0xffff91495300)
0xffff91495300   288  movz x17, #0xa00000000
0xffff91495304   292  sub csp, jssp, #0x10 (16)
0xffff91495308   296  stp x17, cp, [jssp, #-16]!
0xffff9149530c   300  add fp, jssp, #0x10 (16)
0xffff91495310   304  ldr x17, pc+24 (addr 0x0000ffff91495328)    ;; lazy deoptimization bailout 0
0xffff91495314   308  add x17, x17, x16
0xffff91495318   312  br x17
0xffff9149531c   316  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91495320   320  d63f03e0       constant
0xffff91495324   324  d503201f       constant
0xffff91495328   328  91206000       constant
0xffff9149532c   332  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff91495278  code target (STUB)  (0xffff9144b6c0)
0xffff914952ac  constant pool (size 20)
0xffff91495310  runtime entry
0xffff9149531c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 344)
0xffff914951e0     0  ldur x5, [x1, #15]
0xffff914951e4     4  ldur w6, [x5, #11]
0xffff914951e8     8  ldur x16, [x1, #23]
0xffff914951ec    12  ldur x16, [x16, #39]
0xffff914951f0    16  tst x16, #0x8
0xffff914951f4    20  b.ne #+0xcc (addr 0xffff914952c0)
0xffff914951f8    24  ldur x7, [x5, #23]
0xffff914951fc    28  ldur x5, [x5, #15]
0xffff91495200    32  add x5, x7, x5
0xffff91495204    36  tbnz w2, #0, #+0x20 (addr 0xffff91495224)
0xffff91495208    40  asr x8, x2, #32
0xffff9149520c    44  cmp w8, w6
0xffff91495210    48  b.hs #+0xc0 (addr 0xffff914952d0)
0xffff91495214    52  tbnz w0, #0, #+0x38 (addr 0xffff9149524c)
0xffff91495218    56  asr x7, x0, #32
0xffff9149521c    60  str w7, [x5, w8, sxtw #2]
0xffff91495220    64  ret
0xffff91495224    68  ldur x16, [x2, #-1]
0xffff91495228    72  ldr x17, [x26, #120]
0xffff9149522c    76  cmp x16, x17
0xffff91495230    80  b.ne #+0xb0 (addr 0xffff914952e0)
0xffff91495234    84  ldur d29, [x2, #7]
0xffff91495238    88  fcvtzs w8, d29
0xffff9149523c    92  scvtf d0, w8
0xffff91495240    96  fcmp d29, d0
0xffff91495244   100  b.ne #+0x9c (addr 0xffff914952e0)
0xffff91495248   104  b #-0x3c (addr 0xffff9149520c)
0xffff9149524c   108  ldur x16, [x0, #-1]
0xffff91495250   112  ldr x17, [x26, #120]
0xffff91495254   116  cmp x16, x17
0xffff91495258   120  b.ne #+0x30 (addr 0xffff91495288)
0xffff9149525c   124  ldur d30, [x0, #7]
0xffff91495260   128  fcvtzs x7, d30
0xffff91495264   132  cmp x7, #0x1 (1)
0xffff91495268   136  ccmn x7, #1, #nzcV, vc
0xffff9149526c   140  b.vc #+0x18 (addr 0xffff91495284)
0xffff91495270   144  sub csp, jssp, #0x8 (8)
0xffff91495274   148  str lr, [jssp, #-8]!
0xffff91495278   152  ldr x16, pc+64 (addr 0x0000ffff914952b8)    ;; code: STUB, DoubleToIStub, minor: 127424
0xffff9149527c   156  blr x16
0xffff91495280   160  ldr lr, [jssp], #8
0xffff91495284   164  b #+0x24 (addr 0xffff914952a8)
0xffff91495288   168  ldp x7, x6, [x26, #64]
0xffff9149528c   172  cmp x0, x7
0xffff91495290   176  cset x7, eq
0xffff91495294   180  ccmp x0, x6, #nZcv, ne
0xffff91495298   184  b.eq #+0x10 (addr 0xffff914952a8)
0xffff9149529c   188  ldr x16, [x26, #40]
0xffff914952a0   192  cmp x0, x16
0xffff914952a4   196  b.ne #+0x4c (addr 0xffff914952f0)
0xffff914952a8   200  b #-0x8c (addr 0xffff9149521c)
0xffff914952ac   204  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914952b0   208  d63f03e0       constant
0xffff914952b4   212  d503201f       constant
0xffff914952b8   216  9144b6c0       constant
0xffff914952bc   220  0000ffff       constant
0xffff914952c0   224  movz x16, #0x0
0xffff914952c4   228  sub csp, jssp, #0x10 (16)
0xffff914952c8   232  stp fp, lr, [jssp, #-16]!
0xffff914952cc   236  bl #+0x34 (addr 0xffff91495300)
0xffff914952d0   240  movz x16, #0x8
0xffff914952d4   244  sub csp, jssp, #0x10 (16)
0xffff914952d8   248  stp fp, lr, [jssp, #-16]!
0xffff914952dc   252  bl #+0x24 (addr 0xffff91495300)
0xffff914952e0   256  movz x16, #0x10
0xffff914952e4   260  sub csp, jssp, #0x10 (16)
0xffff914952e8   264  stp fp, lr, [jssp, #-16]!
0xffff914952ec   268  bl #+0x14 (addr 0xffff91495300)
0xffff914952f0   272  movz x16, #0x18
0xffff914952f4   276  sub csp, jssp, #0x10 (16)
0xffff914952f8   280  stp fp, lr, [jssp, #-16]!
0xffff914952fc   284  bl #+0x4 (addr 0xffff91495300)
0xffff91495300   288  movz x17, #0xa00000000
0xffff91495304   292  sub csp, jssp, #0x10 (16)
0xffff91495308   296  stp x17, cp, [jssp, #-16]!
0xffff9149530c   300  add fp, jssp, #0x10 (16)
0xffff91495310   304  ldr x17, pc+24 (addr 0x0000ffff91495328)    ;; lazy deoptimization bailout 0
0xffff91495314   308  add x17, x17, x16
0xffff91495318   312  br x17
0xffff9149531c   316  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91495320   320  d63f03e0       constant
0xffff91495324   324  d503201f       constant
0xffff91495328   328  91206000       constant
0xffff9149532c   332  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff91495278  code target (STUB)  (0xffff9144b6c0)
0xffff914952ac  constant pool (size 20)
0xffff91495310  runtime entry
0xffff9149531c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = Uint8Array
compiler = unknown
Instructions (size = 120)
0xffff914959e0     0  sub csp, jssp, #0x8 (8)
0xffff914959e4     4  str x3, [jssp, #-8]!
0xffff914959e8     8  sub csp, jssp, #0x8 (8)
0xffff914959ec    12  str x0, [jssp, #-8]!
0xffff914959f0    16  ldr x0, pc+80 (addr 0x0000ffff91495a40)    ;; object: 0x49bc5d51 Cell for 0
0xffff914959f4    20  ldur x0, [x0, #7]
0xffff914959f8    24  cmp x0, #0x0 (0)
0xffff914959fc    28  b.ne #+0x2c (addr 0xffff91495a28)
0xffff91495a00    32  ldr x0, pc+72 (addr 0x0000ffff91495a48)    ;; object: 0x49bdf5c9 WeakCell for 0x49b48251 PropertyCell for 0x49b481e9 <JS Function Uint8Array (SharedFunctionInfo 0x49b48141)>
0xffff91495a04    36  ldur x0, [x0, #7]
0xffff91495a08    40  tbz w0, #0, #+0x20 (addr 0xffff91495a28)
0xffff91495a0c    44  ldur x0, [x0, #15]
0xffff91495a10    48  ldr x16, [x26, #88]
0xffff91495a14    52  cmp x0, x16
0xffff91495a18    56  b.eq #+0x10 (addr 0xffff91495a28)
0xffff91495a1c    60  add jssp, jssp, #0x10 (16)
0xffff91495a20    64  ret
0xffff91495a24    68  b #+0x14 (addr 0xffff91495a38)
0xffff91495a28    72  ldr x0, [jssp], #8
0xffff91495a2c    76  ldr x3, [jssp], #8
0xffff91495a30    80  ldr x16, pc+32 (addr 0x0000ffff91495a50)    ;; code: BUILTIN
0xffff91495a34    84  br x16
0xffff91495a38    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff91495a3c    92  d63f03e0       constant
0xffff91495a40    96  49bc5d51       constant
0xffff91495a44   100  00000000       constant
0xffff91495a48   104  49bdf5c9       constant
0xffff91495a4c   108  00000000       constant
0xffff91495a50   112  914222e0       constant
0xffff91495a54   116  0000ffff       constant


RelocInfo (size = 9)
0xffff914959f0  embedded object  (0x49bc5d51 Cell for 0)
0xffff91495a00  embedded object  (0x49bdf5c9 WeakCell for 0x49b48251 PropertyCell for 0x49b481e9 <JS Function Uint8Array (SharedFunctionInfo 0x49b48141)>)
0xffff91495a30  code target (BUILTIN)  (0xffff914222e0)
0xffff91495a38  constant pool (size 32)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff91495ac0     0  ldur x0, [x1, #47]
0xffff91495ac4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff91495ac0     0  ldur x0, [x1, #47]
0xffff91495ac4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 17
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 160)
0xffff91495b40     0  ldr x16, [x26, #40]
0xffff91495b44     4  cmp x0, x16
0xffff91495b48     8  b.eq #+0x24 (addr 0xffff91495b6c)
0xffff91495b4c    12  tbz w0, #0, #+0x4c (addr 0xffff91495b98)
0xffff91495b50    16  ldur x2, [x0, #-1]
0xffff91495b54    20  ldrb w1, [x2, #12]
0xffff91495b58    24  tbnz w1, #4, #+0x14 (addr 0xffff91495b6c)
0xffff91495b5c    28  ldrb w1, [x2, #11]
0xffff91495b60    32  cmp x1, #0xb1 (177)
0xffff91495b64    36  b.ge #+0x10 (addr 0xffff91495b74)
0xffff91495b68    40  b #+0x30 (addr 0xffff91495b98)
0xffff91495b6c    44  ldr x0, pc+28 (addr 0x0000ffff91495b88)    ;; object: 0x49b042b1 <false>
0xffff91495b70    48  ret
0xffff91495b74    52  ldr x0, pc+28 (addr 0x0000ffff91495b90)    ;; object: 0x49b04281 <true>
0xffff91495b78    56  ret
0xffff91495b7c    60  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff91495b80    64  d63f03e0       constant
0xffff91495b84    68  d503201f       constant
0xffff91495b88    72  49b042b1       constant
0xffff91495b8c    76  00000000       constant
0xffff91495b90    80  49b04281       constant
0xffff91495b94    84  00000000       constant
0xffff91495b98    88  movz x16, #0x0
0xffff91495b9c    92  sub csp, jssp, #0x10 (16)
0xffff91495ba0    96  stp fp, lr, [jssp, #-16]!
0xffff91495ba4   100  bl #+0x4 (addr 0xffff91495ba8)
0xffff91495ba8   104  movz x17, #0xa00000000
0xffff91495bac   108  sub csp, jssp, #0x10 (16)
0xffff91495bb0   112  stp x17, cp, [jssp, #-16]!
0xffff91495bb4   116  add fp, jssp, #0x10 (16)
0xffff91495bb8   120  ldr x17, pc+24 (addr 0x0000ffff91495bd0)    ;; lazy deoptimization bailout 0
0xffff91495bbc   124  add x17, x17, x16
0xffff91495bc0   128  br x17
0xffff91495bc4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91495bc8   136  d63f03e0       constant
0xffff91495bcc   140  d503201f       constant
0xffff91495bd0   144  91206000       constant
0xffff91495bd4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff91495b6c  embedded object  (0x49b042b1 <false>)
0xffff91495b74  embedded object  (0x49b04281 <true>)
0xffff91495b7c  constant pool (size 28)
0xffff91495bb8  runtime entry
0xffff91495bc4  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 17
type = NORMAL
name = ToBooleanICStub(Undefined,SpecObject)
compiler = crankshaft
Instructions (size = 160)
0xffff91495b40     0  ldr x16, [x26, #40]
0xffff91495b44     4  cmp x0, x16
0xffff91495b48     8  b.eq #+0x24 (addr 0xffff91495b6c)
0xffff91495b4c    12  tbz w0, #0, #+0x4c (addr 0xffff91495b98)
0xffff91495b50    16  ldur x2, [x0, #-1]
0xffff91495b54    20  ldrb w1, [x2, #12]
0xffff91495b58    24  tbnz w1, #4, #+0x14 (addr 0xffff91495b6c)
0xffff91495b5c    28  ldrb w1, [x2, #11]
0xffff91495b60    32  cmp x1, #0xb1 (177)
0xffff91495b64    36  b.ge #+0x10 (addr 0xffff91495b74)
0xffff91495b68    40  b #+0x30 (addr 0xffff91495b98)
0xffff91495b6c    44  ldr x0, pc+28 (addr 0x0000ffff91495b88)    ;; object: 0x49b042b1 <false>
0xffff91495b70    48  ret
0xffff91495b74    52  ldr x0, pc+28 (addr 0x0000ffff91495b90)    ;; object: 0x49b04281 <true>
0xffff91495b78    56  ret
0xffff91495b7c    60  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff91495b80    64  d63f03e0       constant
0xffff91495b84    68  d503201f       constant
0xffff91495b88    72  49b042b1       constant
0xffff91495b8c    76  00000000       constant
0xffff91495b90    80  49b04281       constant
0xffff91495b94    84  00000000       constant
0xffff91495b98    88  movz x16, #0x0
0xffff91495b9c    92  sub csp, jssp, #0x10 (16)
0xffff91495ba0    96  stp fp, lr, [jssp, #-16]!
0xffff91495ba4   100  bl #+0x4 (addr 0xffff91495ba8)
0xffff91495ba8   104  movz x17, #0xa00000000
0xffff91495bac   108  sub csp, jssp, #0x10 (16)
0xffff91495bb0   112  stp x17, cp, [jssp, #-16]!
0xffff91495bb4   116  add fp, jssp, #0x10 (16)
0xffff91495bb8   120  ldr x17, pc+24 (addr 0x0000ffff91495bd0)    ;; lazy deoptimization bailout 0
0xffff91495bbc   124  add x17, x17, x16
0xffff91495bc0   128  br x17
0xffff91495bc4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91495bc8   136  d63f03e0       constant
0xffff91495bcc   140  d503201f       constant
0xffff91495bd0   144  91206000       constant
0xffff91495bd4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff91495b6c  embedded object  (0x49b042b1 <false>)
0xffff91495b74  embedded object  (0x49b04281 <true>)
0xffff91495b7c  constant pool (size 28)
0xffff91495bb8  runtime entry
0xffff91495bc4  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*BOOLEAN -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff91496240     0  orr x16, x1, x0
0xffff91496244     4  tbnz w16, #0, #+0x10 (addr 0xffff91496254)
0xffff91496248     8  asr x1, x1, #32
0xffff9149624c    12  sub x0, x1, x0, asr #32
0xffff91496250    16  ret
0xffff91496254    20  cmp x0, x1
0xffff91496258    24  b.ne #+0x30 (addr 0xffff91496288)
0xffff9149625c    28  ldur x16, [x0, #-1]
0xffff91496260    32  ldr x17, [x26, #120]
0xffff91496264    36  cmp x16, x17
0xffff91496268    40  b.eq #+0xc (addr 0xffff91496274)
0xffff9149626c    44  movz x0, #0x0
0xffff91496270    48  ret
0xffff91496274    52  ldur d0, [x0, #7]
0xffff91496278    56  fcmp d0, d0
0xffff9149627c    60  b.vc #-0x10 (addr 0xffff9149626c)
0xffff91496280    64  movn x0, #0x0
0xffff91496284    68  ret
0xffff91496288    72  and x16, x1, x0
0xffff9149628c    76  tbnz w16, #0, #+0x64 (addr 0xffff914962f0)
0xffff91496290    80  tbz w0, #0, #+0x24 (addr 0xffff914962b4)
0xffff91496294    84  ldur x16, [x0, #-1]
0xffff91496298    88  ldr x17, [x26, #120]
0xffff9149629c    92  cmp x16, x17
0xffff914962a0    96  b.eq #+0x8 (addr 0xffff914962a8)
0xffff914962a4   100  ret
0xffff914962a8   104  ldur d0, [x0, #7]
0xffff914962ac   108  scvtf d1, x1, #32
0xffff914962b0   112  b #+0x24 (addr 0xffff914962d4)
0xffff914962b4   116  ldur x16, [x1, #-1]
0xffff914962b8   120  ldr x17, [x26, #120]
0xffff914962bc   124  cmp x16, x17
0xffff914962c0   128  b.eq #+0xc (addr 0xffff914962cc)
0xffff914962c4   132  movz x0, #0x1
0xffff914962c8   136  ret
0xffff914962cc   140  ldur d1, [x1, #7]
0xffff914962d0   144  scvtf d0, x0, #32
0xffff914962d4   148  fcmp d1, d0
0xffff914962d8   152  b.vs #+0x10 (addr 0xffff914962e8)
0xffff914962dc   156  cset x0, gt
0xffff914962e0   160  csinv x0, x0, xzr, ge
0xffff914962e4   164  ret
0xffff914962e8   168  movn x0, #0x0
0xffff914962ec   172  ret
0xffff914962f0   176  ldur x10, [x0, #-1]
0xffff914962f4   180  ldur x12, [x1, #-1]
0xffff914962f8   184  ldrb w11, [x10, #11]
0xffff914962fc   188  ldrb w13, [x12, #11]
0xffff91496300   192  cmp x11, #0xb1 (177)
0xffff91496304   196  b.lt #+0x8 (addr 0xffff9149630c)
0xffff91496308   200  ret
0xffff9149630c   204  cmp x11, #0x83 (131)
0xffff91496310   208  movz x16, #0x83
0xffff91496314   212  ccmp x13, x16, #nZcv, ne
0xffff91496318   216  movz x16, #0xb1
0xffff9149631c   220  ccmp x13, x16, #NzcV, ne
0xffff91496320   224  b.ge #-0x18 (addr 0xffff91496308)
0xffff91496324   228  orr x14, x13, x11
0xffff91496328   232  tst x14, #0xc0
0xffff9149632c   236  b.eq #-0x24 (addr 0xffff91496308)
0xffff91496330   240  cmp x11, #0x81 (129)
0xffff91496334   244  b.ne #+0x18 (addr 0xffff9149634c)
0xffff91496338   248  cmp x12, x10
0xffff9149633c   252  b.ne #+0x10 (addr 0xffff9149634c)
0xffff91496340   256  ldur d1, [x1, #7]
0xffff91496344   260  ldur d0, [x0, #7]
0xffff91496348   264  b #-0x74 (addr 0xffff914962d4)
0xffff9149634c   268  movz x16, #0x87
0xffff91496350   272  and x14, x13, x16
0xffff91496354   276  movz x16, #0x87
0xffff91496358   280  and x15, x11, x16
0xffff9149635c   284  cmp x14, #0x4 (4)
0xffff91496360   288  ccmp x15, #4, #nzcv, eq
0xffff91496364   292  b.ne #+0x5c (addr 0xffff914963c0)
0xffff91496368   296  ldur x10, [x1, #15]
0xffff9149636c   300  ldur x11, [x0, #15]
0xffff91496370   304  cmp x10, x11
0xffff91496374   308  b.eq #+0xc (addr 0xffff91496380)
0xffff91496378   312  movz x0, #0x100000000
0xffff9149637c   316  ret
0xffff91496380   320  cbnz x10, #+0xc (addr 0xffff9149638c)
0xffff91496384   324  movz x0, #0x0
0xffff91496388   328  ret
0xffff9149638c   332  asr x10, x10, #32
0xffff91496390   336  add x11, x10, #0x17 (23)
0xffff91496394   340  add x1, x1, x11
0xffff91496398   344  add x0, x0, x11
0xffff9149639c   348  neg x10, x10
0xffff914963a0   352  ldrb w11, [x1, x10]
0xffff914963a4   356  ldrb w12, [x0, x10]
0xffff914963a8   360  cmp x11, x12
0xffff914963ac   364  b.ne #-0x34 (addr 0xffff91496378)
0xffff914963b0   368  add x10, x10, #0x1 (1)
0xffff914963b4   372  cbnz x10, #-0x14 (addr 0xffff914963a0)
0xffff914963b8   376  movz x0, #0x0
0xffff914963bc   380  ret
0xffff914963c0   384  movz x16, #0xc00000000
0xffff914963c4   388  sub csp, jssp, #0x10 (16)
0xffff914963c8   392  stp fp, lr, [jssp, #-16]!
0xffff914963cc   396  sub csp, jssp, #0x10 (16)
0xffff914963d0   400  str x16, [jssp, #-8]!
0xffff914963d4   404  ldr x17, pc+172 (addr 0x0000ffff91496480)    ;; object: 0xffff914961e1 <Code: COMPARE_IC>
0xffff914963d8   408  sub csp, jssp, #0x10 (16)
0xffff914963dc   412  str x17, [jssp, #-8]!
0xffff914963e0   416  add fp, jssp, #0x10 (16)
0xffff914963e4   420  sub csp, jssp, #0x10 (16)
0xffff914963e8   424  stp x0, x1, [jssp, #-16]!
0xffff914963ec   428  movz x0, #0x2
0xffff914963f0   432  ldr x1, pc+152 (addr 0x0000ffff91496488)    ;; external reference (Runtime::StrictEqual)
0xffff914963f4   436  ldr x16, pc+156 (addr 0x0000ffff91496490)    ;; code: STUB, CEntryStub, minor: 4
0xffff914963f8   440  blr x16
0xffff914963fc   444  mov jssp, fp
0xffff91496400   448  ldp fp, lr, [jssp], #16
0xffff91496404   452  ldr x1, [x26, #64]
0xffff91496408   456  sub x0, x0, x1
0xffff9149640c   460  ret
0xffff91496410   464  movz x16, #0xc00000000
0xffff91496414   468  sub csp, jssp, #0x10 (16)
0xffff91496418   472  stp fp, lr, [jssp, #-16]!
0xffff9149641c   476  sub csp, jssp, #0x10 (16)
0xffff91496420   480  str x16, [jssp, #-8]!
0xffff91496424   484  ldr x17, pc+116 (addr 0x0000ffff91496498)    ;; object: 0xffff914961e1 <Code: COMPARE_IC>
0xffff91496428   488  sub csp, jssp, #0x10 (16)
0xffff9149642c   492  str x17, [jssp, #-8]!
0xffff91496430   496  add fp, jssp, #0x10 (16)
0xffff91496434   500  sub csp, jssp, #0x18 (24)
0xffff91496438   504  stp lr, x0, [jssp, #-24]!
0xffff9149643c   508  str x1, [jssp, #16]
0xffff91496440   512  movz x10, #0x2f00000000
0xffff91496444   516  sub csp, jssp, #0x18 (24)
0xffff91496448   520  stp x10, x0, [jssp, #-24]!
0xffff9149644c   524  str x1, [jssp, #16]
0xffff91496450   528  movz x0, #0x3
0xffff91496454   532  ldr x1, pc+76 (addr 0x0000ffff914964a0)    ;; external reference (Runtime::CompareIC_Miss)
0xffff91496458   536  ldr x16, pc+80 (addr 0x0000ffff914964a8)    ;; code: STUB, CEntryStub, minor: 4
0xffff9149645c   540  blr x16
0xffff91496460   544  add x11, x0, #0x5f (95)
0xffff91496464   548  ldr x1, [jssp, #16]
0xffff91496468   552  ldp lr, x0, [jssp], #24
0xffff9149646c   556  mov jssp, fp
0xffff91496470   560  ldp fp, lr, [jssp], #16
0xffff91496474   564  br x11
0xffff91496478   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9149647c   572  d63f03e0       constant
0xffff91496480   576  914961e1       constant
0xffff91496484   580  0000ffff       constant
0xffff91496488   584  00e50928       constant
0xffff9149648c   588  00000000       constant
0xffff91496490   592  91406060       constant
0xffff91496494   596  0000ffff       constant
0xffff91496498   600  914961e1       constant
0xffff9149649c   604  0000ffff       constant
0xffff914964a0   608  00c8a980       constant
0xffff914964a4   612  00000000       constant
0xffff914964a8   616  91406060       constant
0xffff914964ac   620  0000ffff       constant


RelocInfo (size = 16)
0xffff914963d4  embedded object  (0xffff914961e1 <Code: COMPARE_IC>)
0xffff914963f0  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff914963f4  code target (STUB)  (0xffff91406060)
0xffff91496424  embedded object  (0xffff914961e1 <Code: COMPARE_IC>)
0xffff91496454  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff91496458  code target (STUB)  (0xffff91406060)
0xffff91496478  constant pool (size 56)


kind = HANDLER
major_key = <NoCache>Stub
name = global
compiler = unknown
Instructions (size = 120)
0xffff91496520     0  sub csp, jssp, #0x8 (8)
0xffff91496524     4  str x3, [jssp, #-8]!
0xffff91496528     8  sub csp, jssp, #0x8 (8)
0xffff9149652c    12  str x0, [jssp, #-8]!
0xffff91496530    16  ldr x0, pc+80 (addr 0x0000ffff91496580)    ;; object: 0x49bc5d51 Cell for 0
0xffff91496534    20  ldur x0, [x0, #7]
0xffff91496538    24  cmp x0, #0x0 (0)
0xffff9149653c    28  b.ne #+0x2c (addr 0xffff91496568)
0xffff91496540    32  ldr x0, pc+72 (addr 0x0000ffff91496588)    ;; object: 0x49be35c9 WeakCell for 0x49bbca39 PropertyCell for 0x26a153b9 <JS Global Object>
0xffff91496544    36  ldur x0, [x0, #7]
0xffff91496548    40  tbz w0, #0, #+0x20 (addr 0xffff91496568)
0xffff9149654c    44  ldur x0, [x0, #15]
0xffff91496550    48  ldr x16, [x26, #88]
0xffff91496554    52  cmp x0, x16
0xffff91496558    56  b.eq #+0x10 (addr 0xffff91496568)
0xffff9149655c    60  add jssp, jssp, #0x10 (16)
0xffff91496560    64  ret
0xffff91496564    68  b #+0x14 (addr 0xffff91496578)
0xffff91496568    72  ldr x0, [jssp], #8
0xffff9149656c    76  ldr x3, [jssp], #8
0xffff91496570    80  ldr x16, pc+32 (addr 0x0000ffff91496590)    ;; code: BUILTIN
0xffff91496574    84  br x16
0xffff91496578    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9149657c    92  d63f03e0       constant
0xffff91496580    96  49bc5d51       constant
0xffff91496584   100  00000000       constant
0xffff91496588   104  49be35c9       constant
0xffff9149658c   108  00000000       constant
0xffff91496590   112  914222e0       constant
0xffff91496594   116  0000ffff       constant


RelocInfo (size = 9)
0xffff91496530  embedded object  (0x49bc5d51 Cell for 0)
0xffff91496540  embedded object  (0x49be35c9 WeakCell for 0x49bbca39 PropertyCell for 0x26a153b9 <JS Global Object>)
0xffff91496570  code target (BUILTIN)  (0xffff914222e0)
0xffff91496578  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = process
compiler = unknown
Instructions (size = 184)
0xffff91496600     0  sub csp, jssp, #0x8 (8)
0xffff91496604     4  str x3, [jssp, #-8]!
0xffff91496608     8  sub csp, jssp, #0x8 (8)
0xffff9149660c    12  str x0, [jssp, #-8]!
0xffff91496610    16  ldr x0, pc+144 (addr 0x0000ffff914966a0)    ;; object: 0x49be3629 Cell for 0
0xffff91496614    20  ldur x0, [x0, #7]
0xffff91496618    24  cmp x0, #0x0 (0)
0xffff9149661c    28  b.ne #+0x68 (addr 0xffff91496684)
0xffff91496620    32  mov x16, fp
0xffff91496624    36  ldur x4, [x16, #-8]
0xffff91496628    40  tbnz w4, #0, #+0xc (addr 0xffff91496634)
0xffff9149662c    44  ldr x16, [x16]
0xffff91496630    48  b #-0xc (addr 0xffff91496624)
0xffff91496634    52  ldur x4, [x4, #39]
0xffff91496638    56  ldur x16, [x1, #23]
0xffff9149663c    60  cmp x4, x16
0xffff91496640    64  b.eq #+0x1c (addr 0xffff9149665c)
0xffff91496644    68  movz x17, #0x26f
0xffff91496648    72  ldr x4, [x4, x17]
0xffff9149664c    76  movz x17, #0x26f
0xffff91496650    80  ldr x16, [x16, x17]
0xffff91496654    84  cmp x4, x16
0xffff91496658    88  b.ne #+0x2c (addr 0xffff91496684)
0xffff9149665c    92  ldr x0, pc+76 (addr 0x0000ffff914966a8)    ;; object: 0x49be3639 WeakCell for 0x49bc79b9 PropertyCell for 0x26a92ce9 <a process with map 0x3641c0f1>
0xffff91496660    96  ldur x0, [x0, #7]
0xffff91496664   100  tbz w0, #0, #+0x20 (addr 0xffff91496684)
0xffff91496668   104  ldur x0, [x0, #15]
0xffff9149666c   108  ldr x16, [x26, #88]
0xffff91496670   112  cmp x0, x16
0xffff91496674   116  b.eq #+0x10 (addr 0xffff91496684)
0xffff91496678   120  add jssp, jssp, #0x10 (16)
0xffff9149667c   124  ret
0xffff91496680   128  b #+0x14 (addr 0xffff91496694)
0xffff91496684   132  ldr x0, [jssp], #8
0xffff91496688   136  ldr x3, [jssp], #8
0xffff9149668c   140  ldr x16, pc+36 (addr 0x0000ffff914966b0)    ;; code: BUILTIN
0xffff91496690   144  br x16
0xffff91496694   148  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff91496698   152  d63f03e0       constant
0xffff9149669c   156  d503201f       constant
0xffff914966a0   160  49be3629       constant
0xffff914966a4   164  00000000       constant
0xffff914966a8   168  49be3639       constant
0xffff914966ac   172  00000000       constant
0xffff914966b0   176  914222e0       constant
0xffff914966b4   180  0000ffff       constant


RelocInfo (size = 11)
0xffff91496610  embedded object  (0x49be3629 Cell for 0)
0xffff9149665c  embedded object  (0x49be3639 WeakCell for 0x49bc79b9 PropertyCell for 0x26a92ce9 <a process with map 0x3641c0f1>)
0xffff9149668c  code target (BUILTIN)  (0xffff914222e0)
0xffff91496694  constant pool (size 36)

kind = HANDLER
major_key = <NoCache>Stub
name = noDeprecation
compiler = unknown
Instructions (size = 632)
0xffff91496720     0  sub csp, jssp, #0x8 (8)
0xffff91496724     4  str x3, [jssp, #-8]!
0xffff91496728     8  sub csp, jssp, #0x8 (8)
0xffff9149672c    12  str x0, [jssp, #-8]!
0xffff91496730    16  ldr x0, pc+544 (addr 0x0000ffff91496950)    ;; object: 0x49be3709 Cell for 0
0xffff91496734    20  ldur x0, [x0, #7]
0xffff91496738    24  cmp x0, #0x0 (0)
0xffff9149673c    28  b.ne #+0x1f8 (addr 0xffff91496934)
0xffff91496740    32  ldur x4, [x1, #-1]
0xffff91496744    36  ldrb w0, [x4, #12]
0xffff91496748    40  movz x16, #0x44
0xffff9149674c    44  tst x0, x16
0xffff91496750    48  b.ne #+0x1e4 (addr 0xffff91496934)
0xffff91496754    52  ldrb w0, [x4, #11]
0xffff91496758    56  cmp x0, #0xb1 (177)
0xffff9149675c    60  b.lt #+0x1d8 (addr 0xffff91496934)
0xffff91496760    64  ldur x0, [x1, #7]
0xffff91496764    68  ldur x4, [x0, #-1]
0xffff91496768    72  ldr x16, [x26, #432]
0xffff9149676c    76  cmp x4, x16
0xffff91496770    80  b.ne #+0x1c4 (addr 0xffff91496934)
0xffff91496774    84  ldursw x4, [x0, #35]
0xffff91496778    88  sub x4, x4, #0x1 (1)
0xffff9149677c    92  movz x16, #0x19b4
0xffff91496780    96  movk x16, #0xcfa, lsl #16
0xffff91496784   100  and x4, x4, x16
0xffff91496788   104  add x4, x4, x4, lsl #1
0xffff9149678c   108  add x4, x0, x4, lsl #3
0xffff91496790   112  ldur x4, [x4, #55]
0xffff91496794   116  ldr x16, [x26, #40]
0xffff91496798   120  cmp x4, x16
0xffff9149679c   124  b.eq #+0x188 (addr 0xffff91496924)
0xffff914967a0   128  ldr x16, pc+440 (addr 0x0000ffff91496958)    ;; object: 0x49bdae31 <String[13]: noDeprecation>
0xffff914967a4   132  cmp x4, x16
0xffff914967a8   136  b.eq #+0x18c (addr 0xffff91496934)
0xffff914967ac   140  ldr x16, [x26, #88]
0xffff914967b0   144  cmp x4, x16
0xffff914967b4   148  b.eq #+0x1c (addr 0xffff914967d0)
0xffff914967b8   152  ldur x4, [x4, #-1]
0xffff914967bc   156  ldrb w4, [x4, #11]
0xffff914967c0   160  tst x4, #0xc0
0xffff914967c4   164  movz x16, #0x80
0xffff914967c8   168  ccmp x4, x16, #nZcv, ne
0xffff914967cc   172  b.ne #+0x168 (addr 0xffff91496934)
0xffff914967d0   176  ldursw x4, [x0, #35]
0xffff914967d4   180  sub x4, x4, #0x1 (1)
0xffff914967d8   184  movz x16, #0x19b5
0xffff914967dc   188  movk x16, #0xcfa, lsl #16
0xffff914967e0   192  and x4, x4, x16
0xffff914967e4   196  add x4, x4, x4, lsl #1
0xffff914967e8   200  add x4, x0, x4, lsl #3
0xffff914967ec   204  ldur x4, [x4, #55]
0xffff914967f0   208  ldr x16, [x26, #40]
0xffff914967f4   212  cmp x4, x16
0xffff914967f8   216  b.eq #+0x12c (addr 0xffff91496924)
0xffff914967fc   220  ldr x16, pc+356 (addr 0x0000ffff91496960)    ;; object: 0x49bdae31 <String[13]: noDeprecation>
0xffff91496800   224  cmp x4, x16
0xffff91496804   228  b.eq #+0x130 (addr 0xffff91496934)
0xffff91496808   232  ldr x16, [x26, #88]
0xffff9149680c   236  cmp x4, x16
0xffff91496810   240  b.eq #+0x1c (addr 0xffff9149682c)
0xffff91496814   244  ldur x4, [x4, #-1]
0xffff91496818   248  ldrb w4, [x4, #11]
0xffff9149681c   252  tst x4, #0xc0
0xffff91496820   256  movz x16, #0x80
0xffff91496824   260  ccmp x4, x16, #nZcv, ne
0xffff91496828   264  b.ne #+0x10c (addr 0xffff91496934)
0xffff9149682c   268  ldursw x4, [x0, #35]
0xffff91496830   272  sub x4, x4, #0x1 (1)
0xffff91496834   276  movz x16, #0x19b7
0xffff91496838   280  movk x16, #0xcfa, lsl #16
0xffff9149683c   284  and x4, x4, x16
0xffff91496840   288  add x4, x4, x4, lsl #1
0xffff91496844   292  add x4, x0, x4, lsl #3
0xffff91496848   296  ldur x4, [x4, #55]
0xffff9149684c   300  ldr x16, [x26, #40]
0xffff91496850   304  cmp x4, x16
0xffff91496854   308  b.eq #+0xd0 (addr 0xffff91496924)
0xffff91496858   312  ldr x16, pc+272 (addr 0x0000ffff91496968)    ;; object: 0x49bdae31 <String[13]: noDeprecation>
0xffff9149685c   316  cmp x4, x16
0xffff91496860   320  b.eq #+0xd4 (addr 0xffff91496934)
0xffff91496864   324  ldr x16, [x26, #88]
0xffff91496868   328  cmp x4, x16
0xffff9149686c   332  b.eq #+0x1c (addr 0xffff91496888)
0xffff91496870   336  ldur x4, [x4, #-1]
0xffff91496874   340  ldrb w4, [x4, #11]
0xffff91496878   344  tst x4, #0xc0
0xffff9149687c   348  movz x16, #0x80
0xffff91496880   352  ccmp x4, x16, #nZcv, ne
0xffff91496884   356  b.ne #+0xb0 (addr 0xffff91496934)
0xffff91496888   360  ldursw x4, [x0, #35]
0xffff9149688c   364  sub x4, x4, #0x1 (1)
0xffff91496890   368  movz x16, #0x19ba
0xffff91496894   372  movk x16, #0xcfa, lsl #16
0xffff91496898   376  and x4, x4, x16
0xffff9149689c   380  add x4, x4, x4, lsl #1
0xffff914968a0   384  add x4, x0, x4, lsl #3
0xffff914968a4   388  ldur x4, [x4, #55]
0xffff914968a8   392  ldr x16, [x26, #40]
0xffff914968ac   396  cmp x4, x16
0xffff914968b0   400  b.eq #+0x74 (addr 0xffff91496924)
0xffff914968b4   404  ldr x16, pc+188 (addr 0x0000ffff91496970)    ;; object: 0x49bdae31 <String[13]: noDeprecation>
0xffff914968b8   408  cmp x4, x16
0xffff914968bc   412  b.eq #+0x78 (addr 0xffff91496934)
0xffff914968c0   416  ldr x16, [x26, #88]
0xffff914968c4   420  cmp x4, x16
0xffff914968c8   424  b.eq #+0x1c (addr 0xffff914968e4)
0xffff914968cc   428  ldur x4, [x4, #-1]
0xffff914968d0   432  ldrb w4, [x4, #11]
0xffff914968d4   436  tst x4, #0xc0
0xffff914968d8   440  movz x16, #0x80
0xffff914968dc   444  ccmp x4, x16, #nZcv, ne
0xffff914968e0   448  b.ne #+0x54 (addr 0xffff91496934)
0xffff914968e4   452  sub csp, jssp, #0x38 (56)
0xffff914968e8   456  stp x3, x5, [jssp, #-32]!
0xffff914968ec   460  stp x6, lr, [jssp, #16]
0xffff914968f0   464  stp x0, x1, [jssp, #-24]!
0xffff914968f4   468  str x2, [jssp, #16]
0xffff914968f8   472  ldur x0, [x1, #7]
0xffff914968fc   476  ldr x1, pc+124 (addr 0x0000ffff91496978)    ;; object: 0x49bdae31 <String[13]: noDeprecation>
0xffff91496900   480  ldr x16, pc+128 (addr 0x0000ffff91496980)    ;; code: STUB, NameDictionaryLookupStub, minor: 1
0xffff91496904   484  blr x16
0xffff91496908   488  mov x4, x0
0xffff9149690c   492  ldp x2, x3, [jssp, #16]
0xffff91496910   496  ldp x0, x1, [jssp], #32
0xffff91496914   500  ldr lr, [jssp, #16]
0xffff91496918   504  ldp x5, x6, [jssp], #24
0xffff9149691c   508  cbz x4, #+0x8 (addr 0xffff91496924)
0xffff91496920   512  b #+0x14 (addr 0xffff91496934)
0xffff91496924   516  add jssp, jssp, #0x10 (16)
0xffff91496928   520  ldr x0, pc+96 (addr 0x0000ffff91496988)    ;; object: 0x49b04241 <undefined>
0xffff9149692c   524  ret
0xffff91496930   528  b #+0x14 (addr 0xffff91496944)
0xffff91496934   532  ldr x0, [jssp], #8
0xffff91496938   536  ldr x3, [jssp], #8
0xffff9149693c   540  ldr x16, pc+84 (addr 0x0000ffff91496990)    ;; code: BUILTIN
0xffff91496940   544  br x16
0xffff91496944   548  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff91496948   552  d63f03e0       constant
0xffff9149694c   556  d503201f       constant
0xffff91496950   560  49be3709       constant
0xffff91496954   564  00000000       constant
0xffff91496958   568  49bdae31       constant
0xffff9149695c   572  00000000       constant
0xffff91496960   576  49bdae31       constant
0xffff91496964   580  00000000       constant
0xffff91496968   584  49bdae31       constant
0xffff9149696c   588  00000000       constant
0xffff91496970   592  49bdae31       constant
0xffff91496974   596  00000000       constant
0xffff91496978   600  49bdae31       constant
0xffff9149697c   604  00000000       constant
0xffff91496980   608  9148b120       constant
0xffff91496984   612  0000ffff       constant
0xffff91496988   616  49b04241       constant
0xffff9149698c   620  00000000       constant
0xffff91496990   624  914222e0       constant
0xffff91496994   628  0000ffff       constant


RelocInfo (size = 25)
0xffff91496730  embedded object  (0x49be3709 Cell for 0)
0xffff914967a0  embedded object  (0x49bdae31 <String[13]: noDeprecation>)
0xffff914967fc  embedded object  (0x49bdae31 <String[13]: noDeprecation>)
0xffff91496858  embedded object  (0x49bdae31 <String[13]: noDeprecation>)
0xffff914968b4  embedded object  (0x49bdae31 <String[13]: noDeprecation>)
0xffff914968fc  embedded object  (0x49bdae31 <String[13]: noDeprecation>)
0xffff91496900  code target (STUB)  (0xffff9148b120)
0xffff91496928  embedded object  (0x49b04241 <undefined>)
0xffff9149693c  code target (BUILTIN)  (0xffff914222e0)
0xffff91496944  constant pool (size 84)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff91496a00     0  sub csp, jssp, #0x8 (8)
0xffff91496a04     4  str x3, [jssp, #-8]!
0xffff91496a08     8  sub csp, jssp, #0x8 (8)
0xffff91496a0c    12  str x4, [jssp, #-8]!
0xffff91496a10    16  ldr x3, pc+104 (addr 0x0000ffff91496a78)    ;; object: 0x49be3839 Cell for 0
0xffff91496a14    20  ldur x3, [x3, #7]
0xffff91496a18    24  cmp x3, #0x0 (0)
0xffff91496a1c    28  b.ne #+0x8 (addr 0xffff91496a24)
0xffff91496a20    32  b #+0x18 (addr 0xffff91496a38)
0xffff91496a24    36  ldr x2, pc+92 (addr 0x0000ffff91496a80)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff91496a28    40  ldr x4, [jssp], #8
0xffff91496a2c    44  ldr x3, [jssp], #8
0xffff91496a30    48  ldr x16, pc+88 (addr 0x0000ffff91496a88)    ;; code: BUILTIN
0xffff91496a34    52  br x16
0xffff91496a38    56  add jssp, jssp, #0x10 (16)
0xffff91496a3c    60  ldr x3, pc+84 (addr 0x0000ffff91496a90)    ;; object: 0x49b404a9 <AccessorInfo>
0xffff91496a40    64  ldr x4, pc+88 (addr 0x0000ffff91496a98)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff91496a44    68  sub csp, jssp, #0x28 (40)
0xffff91496a48    72  stp x4, x3, [jssp, #-32]!
0xffff91496a4c    76  stp x1, x1, [jssp, #16]
0xffff91496a50    80  str x0, [jssp, #-8]!
0xffff91496a54    84  movz x16, #0x100000000
0xffff91496a58    88  sub csp, jssp, #0x8 (8)
0xffff91496a5c    92  str x16, [jssp, #-8]!
0xffff91496a60    96  movz x0, #0x6
0xffff91496a64   100  ldr x1, pc+60 (addr 0x0000ffff91496aa0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff91496a68   104  ldr x16, pc+64 (addr 0x0000ffff91496aa8)    ;; code: STUB, CEntryStub, minor: 4
0xffff91496a6c   108  br x16
0xffff91496a70   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff91496a74   116  d63f03e0       constant
0xffff91496a78   120  49be3839       constant
0xffff91496a7c   124  00000000       constant
0xffff91496a80   128  49b05371       constant
0xffff91496a84   132  00000000       constant
0xffff91496a88   136  91422420       constant
0xffff91496a8c   140  0000ffff       constant
0xffff91496a90   144  49b404a9       constant
0xffff91496a94   148  00000000       constant
0xffff91496a98   152  49b05371       constant
0xffff91496a9c   156  00000000       constant
0xffff91496aa0   160  00c8b560       constant
0xffff91496aa4   164  00000000       constant
0xffff91496aa8   168  91406060       constant
0xffff91496aac   172  0000ffff       constant


RelocInfo (size = 14)
0xffff91496a10  embedded object  (0x49be3839 Cell for 0)
0xffff91496a24  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff91496a30  code target (BUILTIN)  (0xffff91422420)
0xffff91496a3c  embedded object  (0x49b404a9 <AccessorInfo>)
0xffff91496a40  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff91496a64  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff91496a68  code target (STUB)  (0xffff91406060)
0xffff91496a70  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff91496b20     0  sub csp, jssp, #0x8 (8)
0xffff91496b24     4  str x3, [jssp, #-8]!
0xffff91496b28     8  sub csp, jssp, #0x8 (8)
0xffff91496b2c    12  str x4, [jssp, #-8]!
0xffff91496b30    16  ldr x3, pc+104 (addr 0x0000ffff91496b98)    ;; object: 0x49be3941 Cell for 0
0xffff91496b34    20  ldur x3, [x3, #7]
0xffff91496b38    24  cmp x3, #0x0 (0)
0xffff91496b3c    28  b.ne #+0x8 (addr 0xffff91496b44)
0xffff91496b40    32  b #+0x18 (addr 0xffff91496b58)
0xffff91496b44    36  ldr x2, pc+92 (addr 0x0000ffff91496ba0)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff91496b48    40  ldr x4, [jssp], #8
0xffff91496b4c    44  ldr x3, [jssp], #8
0xffff91496b50    48  ldr x16, pc+88 (addr 0x0000ffff91496ba8)    ;; code: BUILTIN
0xffff91496b54    52  br x16
0xffff91496b58    56  add jssp, jssp, #0x10 (16)
0xffff91496b5c    60  ldr x3, pc+84 (addr 0x0000ffff91496bb0)    ;; object: 0x49b404a9 <AccessorInfo>
0xffff91496b60    64  ldr x4, pc+88 (addr 0x0000ffff91496bb8)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff91496b64    68  sub csp, jssp, #0x28 (40)
0xffff91496b68    72  stp x4, x3, [jssp, #-32]!
0xffff91496b6c    76  stp x1, x1, [jssp, #16]
0xffff91496b70    80  str x0, [jssp, #-8]!
0xffff91496b74    84  movz x16, #0x100000000
0xffff91496b78    88  sub csp, jssp, #0x8 (8)
0xffff91496b7c    92  str x16, [jssp, #-8]!
0xffff91496b80    96  movz x0, #0x6
0xffff91496b84   100  ldr x1, pc+60 (addr 0x0000ffff91496bc0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff91496b88   104  ldr x16, pc+64 (addr 0x0000ffff91496bc8)    ;; code: STUB, CEntryStub, minor: 4
0xffff91496b8c   108  br x16
0xffff91496b90   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff91496b94   116  d63f03e0       constant
0xffff91496b98   120  49be3941       constant
0xffff91496b9c   124  00000000       constant
0xffff91496ba0   128  49b05371       constant
0xffff91496ba4   132  00000000       constant
0xffff91496ba8   136  91422420       constant
0xffff91496bac   140  0000ffff       constant
0xffff91496bb0   144  49b404a9       constant
0xffff91496bb4   148  00000000       constant
0xffff91496bb8   152  49b05371       constant
0xffff91496bbc   156  00000000       constant
0xffff91496bc0   160  00c8b560       constant
0xffff91496bc4   164  00000000       constant
0xffff91496bc8   168  91406060       constant
0xffff91496bcc   172  0000ffff       constant


RelocInfo (size = 14)
0xffff91496b30  embedded object  (0x49be3941 Cell for 0)
0xffff91496b44  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff91496b50  code target (BUILTIN)  (0xffff91422420)
0xffff91496b5c  embedded object  (0x49b404a9 <AccessorInfo>)
0xffff91496b60  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff91496b84  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff91496b88  code target (STUB)  (0xffff91406060)
0xffff91496b90  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff91496c40     0  sub csp, jssp, #0x8 (8)
0xffff91496c44     4  str x3, [jssp, #-8]!
0xffff91496c48     8  sub csp, jssp, #0x8 (8)
0xffff91496c4c    12  str x4, [jssp, #-8]!
0xffff91496c50    16  ldr x3, pc+104 (addr 0x0000ffff91496cb8)    ;; object: 0x49be3a49 Cell for 0
0xffff91496c54    20  ldur x3, [x3, #7]
0xffff91496c58    24  cmp x3, #0x0 (0)
0xffff91496c5c    28  b.ne #+0x8 (addr 0xffff91496c64)
0xffff91496c60    32  b #+0x18 (addr 0xffff91496c78)
0xffff91496c64    36  ldr x2, pc+92 (addr 0x0000ffff91496cc0)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff91496c68    40  ldr x4, [jssp], #8
0xffff91496c6c    44  ldr x3, [jssp], #8
0xffff91496c70    48  ldr x16, pc+88 (addr 0x0000ffff91496cc8)    ;; code: BUILTIN
0xffff91496c74    52  br x16
0xffff91496c78    56  add jssp, jssp, #0x10 (16)
0xffff91496c7c    60  ldr x3, pc+84 (addr 0x0000ffff91496cd0)    ;; object: 0x49b404a9 <AccessorInfo>
0xffff91496c80    64  ldr x4, pc+88 (addr 0x0000ffff91496cd8)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff91496c84    68  sub csp, jssp, #0x28 (40)
0xffff91496c88    72  stp x4, x3, [jssp, #-32]!
0xffff91496c8c    76  stp x1, x1, [jssp, #16]
0xffff91496c90    80  str x0, [jssp, #-8]!
0xffff91496c94    84  movz x16, #0x100000000
0xffff91496c98    88  sub csp, jssp, #0x8 (8)
0xffff91496c9c    92  str x16, [jssp, #-8]!
0xffff91496ca0    96  movz x0, #0x6
0xffff91496ca4   100  ldr x1, pc+60 (addr 0x0000ffff91496ce0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff91496ca8   104  ldr x16, pc+64 (addr 0x0000ffff91496ce8)    ;; code: STUB, CEntryStub, minor: 4
0xffff91496cac   108  br x16
0xffff91496cb0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff91496cb4   116  d63f03e0       constant
0xffff91496cb8   120  49be3a49       constant
0xffff91496cbc   124  00000000       constant
0xffff91496cc0   128  49b05371       constant
0xffff91496cc4   132  00000000       constant
0xffff91496cc8   136  91422420       constant
0xffff91496ccc   140  0000ffff       constant
0xffff91496cd0   144  49b404a9       constant
0xffff91496cd4   148  00000000       constant
0xffff91496cd8   152  49b05371       constant
0xffff91496cdc   156  00000000       constant
0xffff91496ce0   160  00c8b560       constant
0xffff91496ce4   164  00000000       constant
0xffff91496ce8   168  91406060       constant
0xffff91496cec   172  0000ffff       constant


RelocInfo (size = 14)
0xffff91496c50  embedded object  (0x49be3a49 Cell for 0)
0xffff91496c64  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff91496c70  code target (BUILTIN)  (0xffff91422420)
0xffff91496c7c  embedded object  (0x49b404a9 <AccessorInfo>)
0xffff91496c80  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff91496ca4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff91496ca8  code target (STUB)  (0xffff91406060)
0xffff91496cb0  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff914973e0     0  sub csp, jssp, #0x8 (8)
0xffff914973e4     4  str x3, [jssp, #-8]!
0xffff914973e8     8  sub csp, jssp, #0x8 (8)
0xffff914973ec    12  str x4, [jssp, #-8]!
0xffff914973f0    16  ldr x3, pc+104 (addr 0x0000ffff91497458)    ;; object: 0x49be41d1 Cell for 0
0xffff914973f4    20  ldur x3, [x3, #7]
0xffff914973f8    24  cmp x3, #0x0 (0)
0xffff914973fc    28  b.ne #+0x8 (addr 0xffff91497404)
0xffff91497400    32  b #+0x18 (addr 0xffff91497418)
0xffff91497404    36  ldr x2, pc+92 (addr 0x0000ffff91497460)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff91497408    40  ldr x4, [jssp], #8
0xffff9149740c    44  ldr x3, [jssp], #8
0xffff91497410    48  ldr x16, pc+88 (addr 0x0000ffff91497468)    ;; code: BUILTIN
0xffff91497414    52  br x16
0xffff91497418    56  add jssp, jssp, #0x10 (16)
0xffff9149741c    60  ldr x3, pc+84 (addr 0x0000ffff91497470)    ;; object: 0x49b404a9 <AccessorInfo>
0xffff91497420    64  ldr x4, pc+88 (addr 0x0000ffff91497478)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff91497424    68  sub csp, jssp, #0x28 (40)
0xffff91497428    72  stp x4, x3, [jssp, #-32]!
0xffff9149742c    76  stp x1, x1, [jssp, #16]
0xffff91497430    80  str x0, [jssp, #-8]!
0xffff91497434    84  movz x16, #0x100000000
0xffff91497438    88  sub csp, jssp, #0x8 (8)
0xffff9149743c    92  str x16, [jssp, #-8]!
0xffff91497440    96  movz x0, #0x6
0xffff91497444   100  ldr x1, pc+60 (addr 0x0000ffff91497480)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff91497448   104  ldr x16, pc+64 (addr 0x0000ffff91497488)    ;; code: STUB, CEntryStub, minor: 4
0xffff9149744c   108  br x16
0xffff91497450   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff91497454   116  d63f03e0       constant
0xffff91497458   120  49be41d1       constant
0xffff9149745c   124  00000000       constant
0xffff91497460   128  49b05371       constant
0xffff91497464   132  00000000       constant
0xffff91497468   136  91422420       constant
0xffff9149746c   140  0000ffff       constant
0xffff91497470   144  49b404a9       constant
0xffff91497474   148  00000000       constant
0xffff91497478   152  49b05371       constant
0xffff9149747c   156  00000000       constant
0xffff91497480   160  00c8b560       constant
0xffff91497484   164  00000000       constant
0xffff91497488   168  91406060       constant
0xffff9149748c   172  0000ffff       constant


RelocInfo (size = 14)
0xffff914973f0  embedded object  (0x49be41d1 Cell for 0)
0xffff91497404  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff91497410  code target (BUILTIN)  (0xffff91422420)
0xffff9149741c  embedded object  (0x49b404a9 <AccessorInfo>)
0xffff91497420  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff91497444  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff91497448  code target (STUB)  (0xffff91406060)
0xffff91497450  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff91497640     0  sub csp, jssp, #0x8 (8)
0xffff91497644     4  str x3, [jssp, #-8]!
0xffff91497648     8  sub csp, jssp, #0x8 (8)
0xffff9149764c    12  str x4, [jssp, #-8]!
0xffff91497650    16  ldr x3, pc+104 (addr 0x0000ffff914976b8)    ;; object: 0x49be4409 Cell for 0
0xffff91497654    20  ldur x3, [x3, #7]
0xffff91497658    24  cmp x3, #0x0 (0)
0xffff9149765c    28  b.ne #+0x8 (addr 0xffff91497664)
0xffff91497660    32  b #+0x18 (addr 0xffff91497678)
0xffff91497664    36  ldr x2, pc+92 (addr 0x0000ffff914976c0)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff91497668    40  ldr x4, [jssp], #8
0xffff9149766c    44  ldr x3, [jssp], #8
0xffff91497670    48  ldr x16, pc+88 (addr 0x0000ffff914976c8)    ;; code: BUILTIN
0xffff91497674    52  br x16
0xffff91497678    56  add jssp, jssp, #0x10 (16)
0xffff9149767c    60  ldr x3, pc+84 (addr 0x0000ffff914976d0)    ;; object: 0x49b404a9 <AccessorInfo>
0xffff91497680    64  ldr x4, pc+88 (addr 0x0000ffff914976d8)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff91497684    68  sub csp, jssp, #0x28 (40)
0xffff91497688    72  stp x4, x3, [jssp, #-32]!
0xffff9149768c    76  stp x1, x1, [jssp, #16]
0xffff91497690    80  str x0, [jssp, #-8]!
0xffff91497694    84  movz x16, #0x100000000
0xffff91497698    88  sub csp, jssp, #0x8 (8)
0xffff9149769c    92  str x16, [jssp, #-8]!
0xffff914976a0    96  movz x0, #0x6
0xffff914976a4   100  ldr x1, pc+60 (addr 0x0000ffff914976e0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff914976a8   104  ldr x16, pc+64 (addr 0x0000ffff914976e8)    ;; code: STUB, CEntryStub, minor: 4
0xffff914976ac   108  br x16
0xffff914976b0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff914976b4   116  d63f03e0       constant
0xffff914976b8   120  49be4409       constant
0xffff914976bc   124  00000000       constant
0xffff914976c0   128  49b05371       constant
0xffff914976c4   132  00000000       constant
0xffff914976c8   136  91422420       constant
0xffff914976cc   140  0000ffff       constant
0xffff914976d0   144  49b404a9       constant
0xffff914976d4   148  00000000       constant
0xffff914976d8   152  49b05371       constant
0xffff914976dc   156  00000000       constant
0xffff914976e0   160  00c8b560       constant
0xffff914976e4   164  00000000       constant
0xffff914976e8   168  91406060       constant
0xffff914976ec   172  0000ffff       constant


RelocInfo (size = 14)
0xffff91497650  embedded object  (0x49be4409 Cell for 0)
0xffff91497664  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff91497670  code target (BUILTIN)  (0xffff91422420)
0xffff9149767c  embedded object  (0x49b404a9 <AccessorInfo>)
0xffff91497680  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff914976a4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff914976a8  code target (STUB)  (0xffff91406060)
0xffff914976b0  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff91497760     0  sub csp, jssp, #0x8 (8)
0xffff91497764     4  str x3, [jssp, #-8]!
0xffff91497768     8  sub csp, jssp, #0x8 (8)
0xffff9149776c    12  str x4, [jssp, #-8]!
0xffff91497770    16  ldr x3, pc+104 (addr 0x0000ffff914977d8)    ;; object: 0x49be4631 Cell for 0
0xffff91497774    20  ldur x3, [x3, #7]
0xffff91497778    24  cmp x3, #0x0 (0)
0xffff9149777c    28  b.ne #+0x8 (addr 0xffff91497784)
0xffff91497780    32  b #+0x18 (addr 0xffff91497798)
0xffff91497784    36  ldr x2, pc+92 (addr 0x0000ffff914977e0)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff91497788    40  ldr x4, [jssp], #8
0xffff9149778c    44  ldr x3, [jssp], #8
0xffff91497790    48  ldr x16, pc+88 (addr 0x0000ffff914977e8)    ;; code: BUILTIN
0xffff91497794    52  br x16
0xffff91497798    56  add jssp, jssp, #0x10 (16)
0xffff9149779c    60  ldr x3, pc+84 (addr 0x0000ffff914977f0)    ;; object: 0x49b404a9 <AccessorInfo>
0xffff914977a0    64  ldr x4, pc+88 (addr 0x0000ffff914977f8)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff914977a4    68  sub csp, jssp, #0x28 (40)
0xffff914977a8    72  stp x4, x3, [jssp, #-32]!
0xffff914977ac    76  stp x1, x1, [jssp, #16]
0xffff914977b0    80  str x0, [jssp, #-8]!
0xffff914977b4    84  movz x16, #0x100000000
0xffff914977b8    88  sub csp, jssp, #0x8 (8)
0xffff914977bc    92  str x16, [jssp, #-8]!
0xffff914977c0    96  movz x0, #0x6
0xffff914977c4   100  ldr x1, pc+60 (addr 0x0000ffff91497800)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff914977c8   104  ldr x16, pc+64 (addr 0x0000ffff91497808)    ;; code: STUB, CEntryStub, minor: 4
0xffff914977cc   108  br x16
0xffff914977d0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff914977d4   116  d63f03e0       constant
0xffff914977d8   120  49be4631       constant
0xffff914977dc   124  00000000       constant
0xffff914977e0   128  49b05371       constant
0xffff914977e4   132  00000000       constant
0xffff914977e8   136  91422420       constant
0xffff914977ec   140  0000ffff       constant
0xffff914977f0   144  49b404a9       constant
0xffff914977f4   148  00000000       constant
0xffff914977f8   152  49b05371       constant
0xffff914977fc   156  00000000       constant
0xffff91497800   160  00c8b560       constant
0xffff91497804   164  00000000       constant
0xffff91497808   168  91406060       constant
0xffff9149780c   172  0000ffff       constant


RelocInfo (size = 14)
0xffff91497770  embedded object  (0x49be4631 Cell for 0)
0xffff91497784  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff91497790  code target (BUILTIN)  (0xffff91422420)
0xffff9149779c  embedded object  (0x49b404a9 <AccessorInfo>)
0xffff914977a0  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff914977c4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff914977c8  code target (STUB)  (0xffff91406060)
0xffff914977d0  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff91497880     0  sub csp, jssp, #0x8 (8)
0xffff91497884     4  str x3, [jssp, #-8]!
0xffff91497888     8  sub csp, jssp, #0x8 (8)
0xffff9149788c    12  str x4, [jssp, #-8]!
0xffff91497890    16  ldr x3, pc+104 (addr 0x0000ffff914978f8)    ;; object: 0x49be4709 Cell for 0
0xffff91497894    20  ldur x3, [x3, #7]
0xffff91497898    24  cmp x3, #0x0 (0)
0xffff9149789c    28  b.ne #+0x8 (addr 0xffff914978a4)
0xffff914978a0    32  b #+0x18 (addr 0xffff914978b8)
0xffff914978a4    36  ldr x2, pc+92 (addr 0x0000ffff91497900)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff914978a8    40  ldr x4, [jssp], #8
0xffff914978ac    44  ldr x3, [jssp], #8
0xffff914978b0    48  ldr x16, pc+88 (addr 0x0000ffff91497908)    ;; code: BUILTIN
0xffff914978b4    52  br x16
0xffff914978b8    56  add jssp, jssp, #0x10 (16)
0xffff914978bc    60  ldr x3, pc+84 (addr 0x0000ffff91497910)    ;; object: 0x49b404a9 <AccessorInfo>
0xffff914978c0    64  ldr x4, pc+88 (addr 0x0000ffff91497918)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff914978c4    68  sub csp, jssp, #0x28 (40)
0xffff914978c8    72  stp x4, x3, [jssp, #-32]!
0xffff914978cc    76  stp x1, x1, [jssp, #16]
0xffff914978d0    80  str x0, [jssp, #-8]!
0xffff914978d4    84  movz x16, #0x100000000
0xffff914978d8    88  sub csp, jssp, #0x8 (8)
0xffff914978dc    92  str x16, [jssp, #-8]!
0xffff914978e0    96  movz x0, #0x6
0xffff914978e4   100  ldr x1, pc+60 (addr 0x0000ffff91497920)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff914978e8   104  ldr x16, pc+64 (addr 0x0000ffff91497928)    ;; code: STUB, CEntryStub, minor: 4
0xffff914978ec   108  br x16
0xffff914978f0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff914978f4   116  d63f03e0       constant
0xffff914978f8   120  49be4709       constant
0xffff914978fc   124  00000000       constant
0xffff91497900   128  49b05371       constant
0xffff91497904   132  00000000       constant
0xffff91497908   136  91422420       constant
0xffff9149790c   140  0000ffff       constant
0xffff91497910   144  49b404a9       constant
0xffff91497914   148  00000000       constant
0xffff91497918   152  49b05371       constant
0xffff9149791c   156  00000000       constant
0xffff91497920   160  00c8b560       constant
0xffff91497924   164  00000000       constant
0xffff91497928   168  91406060       constant
0xffff9149792c   172  0000ffff       constant


RelocInfo (size = 14)
0xffff91497890  embedded object  (0x49be4709 Cell for 0)
0xffff914978a4  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff914978b0  code target (BUILTIN)  (0xffff91422420)
0xffff914978bc  embedded object  (0x49b404a9 <AccessorInfo>)
0xffff914978c0  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff914978e4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff914978e8  code target (STUB)  (0xffff91406060)
0xffff914978f0  constant pool (size 64)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff914979a0     0  tbz w0, #0, #+0x50 (addr 0xffff914979f0)
0xffff914979a4     4  mov x2, x0
0xffff914979a8     8  stur x2, [x1, #31]
0xffff914979ac    12  add x3, x1, #0x1f (31)
0xffff914979b0    16  and x2, x2, #0xfffffffffff00000
0xffff914979b4    20  ldr x2, [x2, #8]
0xffff914979b8    24  tbz w2, #1, #+0x24 (addr 0xffff914979dc)
0xffff914979bc    28  and x2, x1, #0xfffffffffff00000
0xffff914979c0    32  ldr x2, [x2, #8]
0xffff914979c4    36  tbz w2, #2, #+0x18 (addr 0xffff914979dc)
0xffff914979c8    40  sub csp, jssp, #0x8 (8)
0xffff914979cc    44  str lr, [jssp, #-8]!
0xffff914979d0    48  ldr x16, pc+24 (addr 0x0000ffff914979e8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914979d4    52  blr x16
0xffff914979d8    56  ldr lr, [jssp], #8
0xffff914979dc    60  ret
0xffff914979e0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914979e4    68  d63f03e0       constant
0xffff914979e8    72  914170c0       constant
0xffff914979ec    76  0000ffff       constant
0xffff914979f0    80  movz x16, #0x0
0xffff914979f4    84  sub csp, jssp, #0x10 (16)
0xffff914979f8    88  stp fp, lr, [jssp, #-16]!
0xffff914979fc    92  bl #+0x4 (addr 0xffff91497a00)
0xffff91497a00    96  movz x17, #0xa00000000
0xffff91497a04   100  sub csp, jssp, #0x10 (16)
0xffff91497a08   104  stp x17, cp, [jssp, #-16]!
0xffff91497a0c   108  add fp, jssp, #0x10 (16)
0xffff91497a10   112  ldr x17, pc+24 (addr 0x0000ffff91497a28)    ;; lazy deoptimization bailout 0
0xffff91497a14   116  add x17, x17, x16
0xffff91497a18   120  br x17
0xffff91497a1c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91497a20   128  d63f03e0       constant
0xffff91497a24   132  d503201f       constant
0xffff91497a28   136  91206000       constant
0xffff91497a2c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914979d0  code target (STUB)  (0xffff914170c0)
0xffff914979e0  constant pool (size 16)
0xffff91497a10  runtime entry
0xffff91497a1c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff914979a0     0  tbz w0, #0, #+0x50 (addr 0xffff914979f0)
0xffff914979a4     4  mov x2, x0
0xffff914979a8     8  stur x2, [x1, #31]
0xffff914979ac    12  add x3, x1, #0x1f (31)
0xffff914979b0    16  and x2, x2, #0xfffffffffff00000
0xffff914979b4    20  ldr x2, [x2, #8]
0xffff914979b8    24  tbz w2, #1, #+0x24 (addr 0xffff914979dc)
0xffff914979bc    28  and x2, x1, #0xfffffffffff00000
0xffff914979c0    32  ldr x2, [x2, #8]
0xffff914979c4    36  tbz w2, #2, #+0x18 (addr 0xffff914979dc)
0xffff914979c8    40  sub csp, jssp, #0x8 (8)
0xffff914979cc    44  str lr, [jssp, #-8]!
0xffff914979d0    48  ldr x16, pc+24 (addr 0x0000ffff914979e8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914979d4    52  blr x16
0xffff914979d8    56  ldr lr, [jssp], #8
0xffff914979dc    60  ret
0xffff914979e0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914979e4    68  d63f03e0       constant
0xffff914979e8    72  914170c0       constant
0xffff914979ec    76  0000ffff       constant
0xffff914979f0    80  movz x16, #0x0
0xffff914979f4    84  sub csp, jssp, #0x10 (16)
0xffff914979f8    88  stp fp, lr, [jssp, #-16]!
0xffff914979fc    92  bl #+0x4 (addr 0xffff91497a00)
0xffff91497a00    96  movz x17, #0xa00000000
0xffff91497a04   100  sub csp, jssp, #0x10 (16)
0xffff91497a08   104  stp x17, cp, [jssp, #-16]!
0xffff91497a0c   108  add fp, jssp, #0x10 (16)
0xffff91497a10   112  ldr x17, pc+24 (addr 0x0000ffff91497a28)    ;; lazy deoptimization bailout 0
0xffff91497a14   116  add x17, x17, x16
0xffff91497a18   120  br x17
0xffff91497a1c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91497a20   128  d63f03e0       constant
0xffff91497a24   132  d503201f       constant
0xffff91497a28   136  91206000       constant
0xffff91497a2c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914979d0  code target (STUB)  (0xffff914170c0)
0xffff914979e0  constant pool (size 16)
0xffff91497a10  runtime entry
0xffff91497a1c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = timers
compiler = unknown
Instructions (size = 184)
0xffff91497f40     0  sub csp, jssp, #0x8 (8)
0xffff91497f44     4  str x3, [jssp, #-8]!
0xffff91497f48     8  sub csp, jssp, #0x8 (8)
0xffff91497f4c    12  str x4, [jssp, #-8]!
0xffff91497f50    16  ldr x3, pc+112 (addr 0x0000ffff91497fc0)    ;; object: 0x49b63e59 Cell for 0
0xffff91497f54    20  ldur x3, [x3, #7]
0xffff91497f58    24  cmp x3, #0x0 (0)
0xffff91497f5c    28  b.ne #+0x44 (addr 0xffff91497fa0)
0xffff91497f60    32  tbz w0, #0, #+0x40 (addr 0xffff91497fa0)
0xffff91497f64    36  ldur x3, [x0, #-1]
0xffff91497f68    40  ldr x4, pc+96 (addr 0x0000ffff91497fc8)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91497f6c    44  ldur x4, [x4, #7]
0xffff91497f70    48  cmp x3, x4
0xffff91497f74    52  b.ne #+0x2c (addr 0xffff91497fa0)
0xffff91497f78    56  ldr x5, pc+88 (addr 0x0000ffff91497fd0)    ;; object: 0x49be4b41 WeakCell for 0x36424441 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91497f7c    60  ldur x5, [x5, #7]
0xffff91497f80    64  tbz w5, #0, #+0x20 (addr 0xffff91497fa0)
0xffff91497f84    68  ldursw x4, [x5, #15]
0xffff91497f88    72  tbnz w4, #23, #+0x18 (addr 0xffff91497fa0)
0xffff91497f8c    76  ldr x4, [jssp], #8
0xffff91497f90    80  ldr x3, [jssp], #8
0xffff91497f94    84  ldr x2, pc+68 (addr 0x0000ffff91497fd8)    ;; object: 0x49bba181 <String[6]: timers>
0xffff91497f98    88  ldr x16, pc+72 (addr 0x0000ffff91497fe0)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff91497f9c    92  br x16
0xffff91497fa0    96  ldr x2, pc+72 (addr 0x0000ffff91497fe8)    ;; object: 0x49bba181 <String[6]: timers>
0xffff91497fa4   100  ldr x4, [jssp], #8
0xffff91497fa8   104  ldr x3, [jssp], #8
0xffff91497fac   108  ldr x16, pc+68 (addr 0x0000ffff91497ff0)    ;; code: BUILTIN
0xffff91497fb0   112  br x16
0xffff91497fb4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff91497fb8   120  d63f03e0       constant
0xffff91497fbc   124  d503201f       constant
0xffff91497fc0   128  49b63e59       constant
0xffff91497fc4   132  00000000       constant
0xffff91497fc8   136  49bc22b1       constant
0xffff91497fcc   140  00000000       constant
0xffff91497fd0   144  49be4b41       constant
0xffff91497fd4   148  00000000       constant
0xffff91497fd8   152  49bba181       constant
0xffff91497fdc   156  00000000       constant
0xffff91497fe0   160  91438860       constant
0xffff91497fe4   164  0000ffff       constant
0xffff91497fe8   168  49bba181       constant
0xffff91497fec   172  00000000       constant
0xffff91497ff0   176  91422420       constant
0xffff91497ff4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff91497f50  embedded object  (0x49b63e59 Cell for 0)
0xffff91497f68  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91497f78  embedded object  (0x49be4b41 WeakCell for 0x36424441 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91497f94  embedded object  (0x49bba181 <String[6]: timers>)
0xffff91497f98  code target (HANDLER)  (0xffff91438860)
0xffff91497fa0  embedded object  (0x49bba181 <String[6]: timers>)
0xffff91497fac  code target (BUILTIN)  (0xffff91422420)
0xffff91497fb4  constant pool (size 68)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 741)
0xffff91498060     0  movz x2, #0xf2c0
0xffff91498064     4  movk x2, #0x4117, lsl #16
0xffff91498068     8  ldp x3, x0, [x2]
0xffff9149806c    12  adds x16, x3, #0x120 (288)
0xffff91498070    16  ccmp x16, x0, #nzCv, lo
0xffff91498074    20  b.hi #+0x138 (addr 0xffff914981ac)
0xffff91498078    24  str x16, [x2]
0xffff9149807c    28  orr x3, x3, #0x1
0xffff91498080    32  ldr x0, pc+408 (addr 0x0000ffff91498218)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91498084    36  stur x0, [x3, #-1]
0xffff91498088    40  movz x0, #0x2200000000
0xffff9149808c    44  stur x0, [x3, #7]
0xffff91498090    48  stur x1, [x3, #15]
0xffff91498094    52  stur cp, [x3, #23]
0xffff91498098    56  ldr x0, pc+392 (addr 0x0000ffff91498220)    ;; object: 0x49b04519 <the hole>
0xffff9149809c    60  stur x0, [x3, #31]
0xffff914980a0    64  ldur x0, [cp, #39]
0xffff914980a4    68  stur x0, [x3, #39]
0xffff914980a8    72  ldr x0, pc+384 (addr 0x0000ffff91498228)    ;; object: 0x49b04241 <undefined>
0xffff914980ac    76  stur x0, [x3, #47]
0xffff914980b0    80  ldr x0, pc+384 (addr 0x0000ffff91498230)    ;; object: 0x49b04241 <undefined>
0xffff914980b4    84  stur x0, [x3, #55]
0xffff914980b8    88  ldr x0, pc+384 (addr 0x0000ffff91498238)    ;; object: 0x49b04241 <undefined>
0xffff914980bc    92  stur x0, [x3, #63]
0xffff914980c0    96  ldr x0, pc+384 (addr 0x0000ffff91498240)    ;; object: 0x49b04241 <undefined>
0xffff914980c4   100  stur x0, [x3, #71]
0xffff914980c8   104  ldr x0, pc+384 (addr 0x0000ffff91498248)    ;; object: 0x49b04241 <undefined>
0xffff914980cc   108  stur x0, [x3, #79]
0xffff914980d0   112  ldr x0, pc+384 (addr 0x0000ffff91498250)    ;; object: 0x49b04241 <undefined>
0xffff914980d4   116  stur x0, [x3, #87]
0xffff914980d8   120  ldr x0, pc+384 (addr 0x0000ffff91498258)    ;; object: 0x49b04241 <undefined>
0xffff914980dc   124  stur x0, [x3, #95]
0xffff914980e0   128  ldr x0, pc+384 (addr 0x0000ffff91498260)    ;; object: 0x49b04241 <undefined>
0xffff914980e4   132  stur x0, [x3, #103]
0xffff914980e8   136  ldr x0, pc+384 (addr 0x0000ffff91498268)    ;; object: 0x49b04241 <undefined>
0xffff914980ec   140  stur x0, [x3, #111]
0xffff914980f0   144  ldr x0, pc+384 (addr 0x0000ffff91498270)    ;; object: 0x49b04241 <undefined>
0xffff914980f4   148  stur x0, [x3, #119]
0xffff914980f8   152  ldr x0, pc+384 (addr 0x0000ffff91498278)    ;; object: 0x49b04241 <undefined>
0xffff914980fc   156  stur x0, [x3, #127]
0xffff91498100   160  ldr x0, pc+384 (addr 0x0000ffff91498280)    ;; object: 0x49b04241 <undefined>
0xffff91498104   164  stur x0, [x3, #135]
0xffff91498108   168  ldr x0, pc+384 (addr 0x0000ffff91498288)    ;; object: 0x49b04241 <undefined>
0xffff9149810c   172  stur x0, [x3, #143]
0xffff91498110   176  ldr x0, pc+384 (addr 0x0000ffff91498290)    ;; object: 0x49b04241 <undefined>
0xffff91498114   180  stur x0, [x3, #151]
0xffff91498118   184  ldr x0, pc+384 (addr 0x0000ffff91498298)    ;; object: 0x49b04241 <undefined>
0xffff9149811c   188  stur x0, [x3, #159]
0xffff91498120   192  ldr x0, pc+384 (addr 0x0000ffff914982a0)    ;; object: 0x49b04241 <undefined>
0xffff91498124   196  stur x0, [x3, #167]
0xffff91498128   200  ldr x0, pc+384 (addr 0x0000ffff914982a8)    ;; object: 0x49b04241 <undefined>
0xffff9149812c   204  stur x0, [x3, #175]
0xffff91498130   208  ldr x0, pc+384 (addr 0x0000ffff914982b0)    ;; object: 0x49b04241 <undefined>
0xffff91498134   212  stur x0, [x3, #183]
0xffff91498138   216  ldr x0, pc+384 (addr 0x0000ffff914982b8)    ;; object: 0x49b04241 <undefined>
0xffff9149813c   220  stur x0, [x3, #191]
0xffff91498140   224  ldr x0, pc+384 (addr 0x0000ffff914982c0)    ;; object: 0x49b04241 <undefined>
0xffff91498144   228  stur x0, [x3, #199]
0xffff91498148   232  ldr x0, pc+384 (addr 0x0000ffff914982c8)    ;; object: 0x49b04241 <undefined>
0xffff9149814c   236  stur x0, [x3, #207]
0xffff91498150   240  ldr x0, pc+384 (addr 0x0000ffff914982d0)    ;; object: 0x49b04241 <undefined>
0xffff91498154   244  stur x0, [x3, #215]
0xffff91498158   248  ldr x0, pc+384 (addr 0x0000ffff914982d8)    ;; object: 0x49b04241 <undefined>
0xffff9149815c   252  stur x0, [x3, #223]
0xffff91498160   256  ldr x0, pc+384 (addr 0x0000ffff914982e0)    ;; object: 0x49b04241 <undefined>
0xffff91498164   260  stur x0, [x3, #231]
0xffff91498168   264  ldr x0, pc+384 (addr 0x0000ffff914982e8)    ;; object: 0x49b04241 <undefined>
0xffff9149816c   268  stur x0, [x3, #239]
0xffff91498170   272  ldr x0, pc+384 (addr 0x0000ffff914982f0)    ;; object: 0x49b04241 <undefined>
0xffff91498174   276  stur x0, [x3, #247]
0xffff91498178   280  ldr x0, pc+384 (addr 0x0000ffff914982f8)    ;; object: 0x49b04241 <undefined>
0xffff9149817c   284  stur x0, [x3, #255]
0xffff91498180   288  ldr x0, pc+384 (addr 0x0000ffff91498300)    ;; object: 0x49b04241 <undefined>
0xffff91498184   292  movz x16, #0x107
0xffff91498188   296  str x0, [x3, x16]
0xffff9149818c   300  ldr x0, pc+380 (addr 0x0000ffff91498308)    ;; object: 0x49b04241 <undefined>
0xffff91498190   304  movz x16, #0x10f
0xffff91498194   308  str x0, [x3, x16]
0xffff91498198   312  ldr x0, pc+376 (addr 0x0000ffff91498310)    ;; object: 0x49b04241 <undefined>
0xffff9149819c   316  movz x16, #0x117
0xffff914981a0   320  str x0, [x3, x16]
0xffff914981a4   324  mov x0, x3
0xffff914981a8   328  ret
0xffff914981ac   332  sub csp, jssp, #0x10 (16)
0xffff914981b0   336  stp fp, lr, [jssp, #-16]!
0xffff914981b4   340  movz fp, #0xa00000000
0xffff914981b8   344  sub csp, jssp, #0x8 (8)
0xffff914981bc   348  str fp, [jssp, #-8]!
0xffff914981c0   352  add fp, jssp, #0x8 (8)
0xffff914981c4   356  movz x3, #0x0
0xffff914981c8   360  mov x16, lr
0xffff914981cc   364  ldr x17, pc+332 (addr 0x0000ffff91498318)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914981d0   368  blr x17
0xffff914981d4   372  movz x0, #0x12000000000
0xffff914981d8   376  movz x10, #0x0
0xffff914981dc   380  sub csp, jssp, #0x10 (16)
0xffff914981e0   384  stp x10, x0, [jssp, #-16]!
0xffff914981e4   388  movz x0, #0x2
0xffff914981e8   392  movz x1, #0x5b88
0xffff914981ec   396  movk x1, #0xe2, lsl #16
0xffff914981f0   400  ldr x16, pc+304 (addr 0x0000ffff91498320)    ;; code: STUB, CEntryStub, minor: 5
0xffff914981f4   404  blr x16
0xffff914981f8   408  str x0, [jssp, #24]
0xffff914981fc   412  ldr x16, pc+300 (addr 0x0000ffff91498328)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91498200   416  blr x16
0xffff91498204   420  ldr lr, [jssp, #16]
0xffff91498208   424  ldp xzr, fp, [jssp], #24
0xffff9149820c   428  b #-0x18c (addr 0xffff91498080)
0xffff91498210   432  580008ff       constant pool begin (num_const = 71)    ;; constant pool
0xffff91498214   436  d63f03e0       constant
0xffff91498218   440  36406149       constant
0xffff9149821c   444  00000000       constant
0xffff91498220   448  49b04519       constant
0xffff91498224   452  00000000       constant
0xffff91498228   456  49b04241       constant
0xffff9149822c   460  00000000       constant
0xffff91498230   464  49b04241       constant
0xffff91498234   468  00000000       constant
0xffff91498238   472  49b04241       constant
0xffff9149823c   476  00000000       constant
0xffff91498240   480  49b04241       constant
0xffff91498244   484  00000000       constant
0xffff91498248   488  49b04241       constant
0xffff9149824c   492  00000000       constant
0xffff91498250   496  49b04241       constant
0xffff91498254   500  00000000       constant
0xffff91498258   504  49b04241       constant
0xffff9149825c   508  00000000       constant
0xffff91498260   512  49b04241       constant
0xffff91498264   516  00000000       constant
0xffff91498268   520  49b04241       constant
0xffff9149826c   524  00000000       constant
0xffff91498270   528  49b04241       constant
0xffff91498274   532  00000000       constant
0xffff91498278   536  49b04241       constant
0xffff9149827c   540  00000000       constant
0xffff91498280   544  49b04241       constant
0xffff91498284   548  00000000       constant
0xffff91498288   552  49b04241       constant
0xffff9149828c   556  00000000       constant
0xffff91498290   560  49b04241       constant
0xffff91498294   564  00000000       constant
0xffff91498298   568  49b04241       constant
0xffff9149829c   572  00000000       constant
0xffff914982a0   576  49b04241       constant
0xffff914982a4   580  00000000       constant
0xffff914982a8   584  49b04241       constant
0xffff914982ac   588  00000000       constant
0xffff914982b0   592  49b04241       constant
0xffff914982b4   596  00000000       constant
0xffff914982b8   600  49b04241       constant
0xffff914982bc   604  00000000       constant
0xffff914982c0   608  49b04241       constant
0xffff914982c4   612  00000000       constant
0xffff914982c8   616  49b04241       constant
0xffff914982cc   620  00000000       constant
0xffff914982d0   624  49b04241       constant
0xffff914982d4   628  00000000       constant
0xffff914982d8   632  49b04241       constant
0xffff914982dc   636  00000000       constant
0xffff914982e0   640  49b04241       constant
0xffff914982e4   644  00000000       constant
0xffff914982e8   648  49b04241       constant
0xffff914982ec   652  00000000       constant
0xffff914982f0   656  49b04241       constant
0xffff914982f4   660  00000000       constant
0xffff914982f8   664  49b04241       constant
0xffff914982fc   668  00000000       constant
0xffff91498300   672  49b04241       constant
0xffff91498304   676  00000000       constant
0xffff91498308   680  49b04241       constant
0xffff9149830c   684  00000000       constant
0xffff91498310   688  49b04241       constant
0xffff91498314   692  00000000       constant
0xffff91498318   696  91406820       constant
0xffff9149831c   700  0000ffff       constant
0xffff91498320   704  91406260       constant
0xffff91498324   708  0000ffff       constant
0xffff91498328   712  914068e0       constant
0xffff9149832c   716  0000ffff       constant


Safepoints (size = 21)
0xffff914981f8   408  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 41)
0xffff91498080  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91498098  embedded object  (0x49b04519 <the hole>)
0xffff914980a8  embedded object  (0x49b04241 <undefined>)
0xffff914980b0  embedded object  (0x49b04241 <undefined>)
0xffff914980b8  embedded object  (0x49b04241 <undefined>)
0xffff914980c0  embedded object  (0x49b04241 <undefined>)
0xffff914980c8  embedded object  (0x49b04241 <undefined>)
0xffff914980d0  embedded object  (0x49b04241 <undefined>)
0xffff914980d8  embedded object  (0x49b04241 <undefined>)
0xffff914980e0  embedded object  (0x49b04241 <undefined>)
0xffff914980e8  embedded object  (0x49b04241 <undefined>)
0xffff914980f0  embedded object  (0x49b04241 <undefined>)
0xffff914980f8  embedded object  (0x49b04241 <undefined>)
0xffff91498100  embedded object  (0x49b04241 <undefined>)
0xffff91498108  embedded object  (0x49b04241 <undefined>)
0xffff91498110  embedded object  (0x49b04241 <undefined>)
0xffff91498118  embedded object  (0x49b04241 <undefined>)
0xffff91498120  embedded object  (0x49b04241 <undefined>)
0xffff91498128  embedded object  (0x49b04241 <undefined>)
0xffff91498130  embedded object  (0x49b04241 <undefined>)
0xffff91498138  embedded object  (0x49b04241 <undefined>)
0xffff91498140  embedded object  (0x49b04241 <undefined>)
0xffff91498148  embedded object  (0x49b04241 <undefined>)
0xffff91498150  embedded object  (0x49b04241 <undefined>)
0xffff91498158  embedded object  (0x49b04241 <undefined>)
0xffff91498160  embedded object  (0x49b04241 <undefined>)
0xffff91498168  embedded object  (0x49b04241 <undefined>)
0xffff91498170  embedded object  (0x49b04241 <undefined>)
0xffff91498178  embedded object  (0x49b04241 <undefined>)
0xffff91498180  embedded object  (0x49b04241 <undefined>)
0xffff9149818c  embedded object  (0x49b04241 <undefined>)
0xffff91498198  embedded object  (0x49b04241 <undefined>)
0xffff914981cc  code target (STUB)  (0xffff91406820)
0xffff914981f0  code target (STUB)  (0xffff91406260)
0xffff914981fc  code target (STUB)  (0xffff914068e0)
0xffff91498210  constant pool (size 288)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 741)
0xffff91498060     0  movz x2, #0xf2c0
0xffff91498064     4  movk x2, #0x4117, lsl #16
0xffff91498068     8  ldp x3, x0, [x2]
0xffff9149806c    12  adds x16, x3, #0x120 (288)
0xffff91498070    16  ccmp x16, x0, #nzCv, lo
0xffff91498074    20  b.hi #+0x138 (addr 0xffff914981ac)
0xffff91498078    24  str x16, [x2]
0xffff9149807c    28  orr x3, x3, #0x1
0xffff91498080    32  ldr x0, pc+408 (addr 0x0000ffff91498218)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91498084    36  stur x0, [x3, #-1]
0xffff91498088    40  movz x0, #0x2200000000
0xffff9149808c    44  stur x0, [x3, #7]
0xffff91498090    48  stur x1, [x3, #15]
0xffff91498094    52  stur cp, [x3, #23]
0xffff91498098    56  ldr x0, pc+392 (addr 0x0000ffff91498220)    ;; object: 0x49b04519 <the hole>
0xffff9149809c    60  stur x0, [x3, #31]
0xffff914980a0    64  ldur x0, [cp, #39]
0xffff914980a4    68  stur x0, [x3, #39]
0xffff914980a8    72  ldr x0, pc+384 (addr 0x0000ffff91498228)    ;; object: 0x49b04241 <undefined>
0xffff914980ac    76  stur x0, [x3, #47]
0xffff914980b0    80  ldr x0, pc+384 (addr 0x0000ffff91498230)    ;; object: 0x49b04241 <undefined>
0xffff914980b4    84  stur x0, [x3, #55]
0xffff914980b8    88  ldr x0, pc+384 (addr 0x0000ffff91498238)    ;; object: 0x49b04241 <undefined>
0xffff914980bc    92  stur x0, [x3, #63]
0xffff914980c0    96  ldr x0, pc+384 (addr 0x0000ffff91498240)    ;; object: 0x49b04241 <undefined>
0xffff914980c4   100  stur x0, [x3, #71]
0xffff914980c8   104  ldr x0, pc+384 (addr 0x0000ffff91498248)    ;; object: 0x49b04241 <undefined>
0xffff914980cc   108  stur x0, [x3, #79]
0xffff914980d0   112  ldr x0, pc+384 (addr 0x0000ffff91498250)    ;; object: 0x49b04241 <undefined>
0xffff914980d4   116  stur x0, [x3, #87]
0xffff914980d8   120  ldr x0, pc+384 (addr 0x0000ffff91498258)    ;; object: 0x49b04241 <undefined>
0xffff914980dc   124  stur x0, [x3, #95]
0xffff914980e0   128  ldr x0, pc+384 (addr 0x0000ffff91498260)    ;; object: 0x49b04241 <undefined>
0xffff914980e4   132  stur x0, [x3, #103]
0xffff914980e8   136  ldr x0, pc+384 (addr 0x0000ffff91498268)    ;; object: 0x49b04241 <undefined>
0xffff914980ec   140  stur x0, [x3, #111]
0xffff914980f0   144  ldr x0, pc+384 (addr 0x0000ffff91498270)    ;; object: 0x49b04241 <undefined>
0xffff914980f4   148  stur x0, [x3, #119]
0xffff914980f8   152  ldr x0, pc+384 (addr 0x0000ffff91498278)    ;; object: 0x49b04241 <undefined>
0xffff914980fc   156  stur x0, [x3, #127]
0xffff91498100   160  ldr x0, pc+384 (addr 0x0000ffff91498280)    ;; object: 0x49b04241 <undefined>
0xffff91498104   164  stur x0, [x3, #135]
0xffff91498108   168  ldr x0, pc+384 (addr 0x0000ffff91498288)    ;; object: 0x49b04241 <undefined>
0xffff9149810c   172  stur x0, [x3, #143]
0xffff91498110   176  ldr x0, pc+384 (addr 0x0000ffff91498290)    ;; object: 0x49b04241 <undefined>
0xffff91498114   180  stur x0, [x3, #151]
0xffff91498118   184  ldr x0, pc+384 (addr 0x0000ffff91498298)    ;; object: 0x49b04241 <undefined>
0xffff9149811c   188  stur x0, [x3, #159]
0xffff91498120   192  ldr x0, pc+384 (addr 0x0000ffff914982a0)    ;; object: 0x49b04241 <undefined>
0xffff91498124   196  stur x0, [x3, #167]
0xffff91498128   200  ldr x0, pc+384 (addr 0x0000ffff914982a8)    ;; object: 0x49b04241 <undefined>
0xffff9149812c   204  stur x0, [x3, #175]
0xffff91498130   208  ldr x0, pc+384 (addr 0x0000ffff914982b0)    ;; object: 0x49b04241 <undefined>
0xffff91498134   212  stur x0, [x3, #183]
0xffff91498138   216  ldr x0, pc+384 (addr 0x0000ffff914982b8)    ;; object: 0x49b04241 <undefined>
0xffff9149813c   220  stur x0, [x3, #191]
0xffff91498140   224  ldr x0, pc+384 (addr 0x0000ffff914982c0)    ;; object: 0x49b04241 <undefined>
0xffff91498144   228  stur x0, [x3, #199]
0xffff91498148   232  ldr x0, pc+384 (addr 0x0000ffff914982c8)    ;; object: 0x49b04241 <undefined>
0xffff9149814c   236  stur x0, [x3, #207]
0xffff91498150   240  ldr x0, pc+384 (addr 0x0000ffff914982d0)    ;; object: 0x49b04241 <undefined>
0xffff91498154   244  stur x0, [x3, #215]
0xffff91498158   248  ldr x0, pc+384 (addr 0x0000ffff914982d8)    ;; object: 0x49b04241 <undefined>
0xffff9149815c   252  stur x0, [x3, #223]
0xffff91498160   256  ldr x0, pc+384 (addr 0x0000ffff914982e0)    ;; object: 0x49b04241 <undefined>
0xffff91498164   260  stur x0, [x3, #231]
0xffff91498168   264  ldr x0, pc+384 (addr 0x0000ffff914982e8)    ;; object: 0x49b04241 <undefined>
0xffff9149816c   268  stur x0, [x3, #239]
0xffff91498170   272  ldr x0, pc+384 (addr 0x0000ffff914982f0)    ;; object: 0x49b04241 <undefined>
0xffff91498174   276  stur x0, [x3, #247]
0xffff91498178   280  ldr x0, pc+384 (addr 0x0000ffff914982f8)    ;; object: 0x49b04241 <undefined>
0xffff9149817c   284  stur x0, [x3, #255]
0xffff91498180   288  ldr x0, pc+384 (addr 0x0000ffff91498300)    ;; object: 0x49b04241 <undefined>
0xffff91498184   292  movz x16, #0x107
0xffff91498188   296  str x0, [x3, x16]
0xffff9149818c   300  ldr x0, pc+380 (addr 0x0000ffff91498308)    ;; object: 0x49b04241 <undefined>
0xffff91498190   304  movz x16, #0x10f
0xffff91498194   308  str x0, [x3, x16]
0xffff91498198   312  ldr x0, pc+376 (addr 0x0000ffff91498310)    ;; object: 0x49b04241 <undefined>
0xffff9149819c   316  movz x16, #0x117
0xffff914981a0   320  str x0, [x3, x16]
0xffff914981a4   324  mov x0, x3
0xffff914981a8   328  ret
0xffff914981ac   332  sub csp, jssp, #0x10 (16)
0xffff914981b0   336  stp fp, lr, [jssp, #-16]!
0xffff914981b4   340  movz fp, #0xa00000000
0xffff914981b8   344  sub csp, jssp, #0x8 (8)
0xffff914981bc   348  str fp, [jssp, #-8]!
0xffff914981c0   352  add fp, jssp, #0x8 (8)
0xffff914981c4   356  movz x3, #0x0
0xffff914981c8   360  mov x16, lr
0xffff914981cc   364  ldr x17, pc+332 (addr 0x0000ffff91498318)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914981d0   368  blr x17
0xffff914981d4   372  movz x0, #0x12000000000
0xffff914981d8   376  movz x10, #0x0
0xffff914981dc   380  sub csp, jssp, #0x10 (16)
0xffff914981e0   384  stp x10, x0, [jssp, #-16]!
0xffff914981e4   388  movz x0, #0x2
0xffff914981e8   392  movz x1, #0x5b88
0xffff914981ec   396  movk x1, #0xe2, lsl #16
0xffff914981f0   400  ldr x16, pc+304 (addr 0x0000ffff91498320)    ;; code: STUB, CEntryStub, minor: 5
0xffff914981f4   404  blr x16
0xffff914981f8   408  str x0, [jssp, #24]
0xffff914981fc   412  ldr x16, pc+300 (addr 0x0000ffff91498328)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91498200   416  blr x16
0xffff91498204   420  ldr lr, [jssp, #16]
0xffff91498208   424  ldp xzr, fp, [jssp], #24
0xffff9149820c   428  b #-0x18c (addr 0xffff91498080)
0xffff91498210   432  580008ff       constant pool begin (num_const = 71)    ;; constant pool
0xffff91498214   436  d63f03e0       constant
0xffff91498218   440  36406149       constant
0xffff9149821c   444  00000000       constant
0xffff91498220   448  49b04519       constant
0xffff91498224   452  00000000       constant
0xffff91498228   456  49b04241       constant
0xffff9149822c   460  00000000       constant
0xffff91498230   464  49b04241       constant
0xffff91498234   468  00000000       constant
0xffff91498238   472  49b04241       constant
0xffff9149823c   476  00000000       constant
0xffff91498240   480  49b04241       constant
0xffff91498244   484  00000000       constant
0xffff91498248   488  49b04241       constant
0xffff9149824c   492  00000000       constant
0xffff91498250   496  49b04241       constant
0xffff91498254   500  00000000       constant
0xffff91498258   504  49b04241       constant
0xffff9149825c   508  00000000       constant
0xffff91498260   512  49b04241       constant
0xffff91498264   516  00000000       constant
0xffff91498268   520  49b04241       constant
0xffff9149826c   524  00000000       constant
0xffff91498270   528  49b04241       constant
0xffff91498274   532  00000000       constant
0xffff91498278   536  49b04241       constant
0xffff9149827c   540  00000000       constant
0xffff91498280   544  49b04241       constant
0xffff91498284   548  00000000       constant
0xffff91498288   552  49b04241       constant
0xffff9149828c   556  00000000       constant
0xffff91498290   560  49b04241       constant
0xffff91498294   564  00000000       constant
0xffff91498298   568  49b04241       constant
0xffff9149829c   572  00000000       constant
0xffff914982a0   576  49b04241       constant
0xffff914982a4   580  00000000       constant
0xffff914982a8   584  49b04241       constant
0xffff914982ac   588  00000000       constant
0xffff914982b0   592  49b04241       constant
0xffff914982b4   596  00000000       constant
0xffff914982b8   600  49b04241       constant
0xffff914982bc   604  00000000       constant
0xffff914982c0   608  49b04241       constant
0xffff914982c4   612  00000000       constant
0xffff914982c8   616  49b04241       constant
0xffff914982cc   620  00000000       constant
0xffff914982d0   624  49b04241       constant
0xffff914982d4   628  00000000       constant
0xffff914982d8   632  49b04241       constant
0xffff914982dc   636  00000000       constant
0xffff914982e0   640  49b04241       constant
0xffff914982e4   644  00000000       constant
0xffff914982e8   648  49b04241       constant
0xffff914982ec   652  00000000       constant
0xffff914982f0   656  49b04241       constant
0xffff914982f4   660  00000000       constant
0xffff914982f8   664  49b04241       constant
0xffff914982fc   668  00000000       constant
0xffff91498300   672  49b04241       constant
0xffff91498304   676  00000000       constant
0xffff91498308   680  49b04241       constant
0xffff9149830c   684  00000000       constant
0xffff91498310   688  49b04241       constant
0xffff91498314   692  00000000       constant
0xffff91498318   696  91406820       constant
0xffff9149831c   700  0000ffff       constant
0xffff91498320   704  91406260       constant
0xffff91498324   708  0000ffff       constant
0xffff91498328   712  914068e0       constant
0xffff9149832c   716  0000ffff       constant


Safepoints (size = 21)
0xffff914981f8   408  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 41)
0xffff91498080  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91498098  embedded object  (0x49b04519 <the hole>)
0xffff914980a8  embedded object  (0x49b04241 <undefined>)
0xffff914980b0  embedded object  (0x49b04241 <undefined>)
0xffff914980b8  embedded object  (0x49b04241 <undefined>)
0xffff914980c0  embedded object  (0x49b04241 <undefined>)
0xffff914980c8  embedded object  (0x49b04241 <undefined>)
0xffff914980d0  embedded object  (0x49b04241 <undefined>)
0xffff914980d8  embedded object  (0x49b04241 <undefined>)
0xffff914980e0  embedded object  (0x49b04241 <undefined>)
0xffff914980e8  embedded object  (0x49b04241 <undefined>)
0xffff914980f0  embedded object  (0x49b04241 <undefined>)
0xffff914980f8  embedded object  (0x49b04241 <undefined>)
0xffff91498100  embedded object  (0x49b04241 <undefined>)
0xffff91498108  embedded object  (0x49b04241 <undefined>)
0xffff91498110  embedded object  (0x49b04241 <undefined>)
0xffff91498118  embedded object  (0x49b04241 <undefined>)
0xffff91498120  embedded object  (0x49b04241 <undefined>)
0xffff91498128  embedded object  (0x49b04241 <undefined>)
0xffff91498130  embedded object  (0x49b04241 <undefined>)
0xffff91498138  embedded object  (0x49b04241 <undefined>)
0xffff91498140  embedded object  (0x49b04241 <undefined>)
0xffff91498148  embedded object  (0x49b04241 <undefined>)
0xffff91498150  embedded object  (0x49b04241 <undefined>)
0xffff91498158  embedded object  (0x49b04241 <undefined>)
0xffff91498160  embedded object  (0x49b04241 <undefined>)
0xffff91498168  embedded object  (0x49b04241 <undefined>)
0xffff91498170  embedded object  (0x49b04241 <undefined>)
0xffff91498178  embedded object  (0x49b04241 <undefined>)
0xffff91498180  embedded object  (0x49b04241 <undefined>)
0xffff9149818c  embedded object  (0x49b04241 <undefined>)
0xffff91498198  embedded object  (0x49b04241 <undefined>)
0xffff914981cc  code target (STUB)  (0xffff91406820)
0xffff914981f0  code target (STUB)  (0xffff91406260)
0xffff914981fc  code target (STUB)  (0xffff914068e0)
0xffff91498210  constant pool (size 288)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff91499940     0  tbz w0, #0, #+0x98 (addr 0xffff914999d8)
0xffff91499944     4  mov x2, x0
0xffff91499948     8  ldur x4, [x1, #7]
0xffff9149994c    12  stur x2, [x4, #23]
0xffff91499950    16  add x3, x4, #0x17 (23)
0xffff91499954    20  and x2, x2, #0xfffffffffff00000
0xffff91499958    24  ldr x2, [x2, #8]
0xffff9149995c    28  tbz w2, #1, #+0x24 (addr 0xffff91499980)
0xffff91499960    32  and x2, x4, #0xfffffffffff00000
0xffff91499964    36  ldr x2, [x2, #8]
0xffff91499968    40  tbz w2, #2, #+0x18 (addr 0xffff91499980)
0xffff9149996c    44  sub csp, jssp, #0x8 (8)
0xffff91499970    48  str lr, [jssp, #-8]!
0xffff91499974    52  ldr x16, pc+84 (addr 0x0000ffff914999c8)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff91499978    56  blr x16
0xffff9149997c    60  ldr lr, [jssp], #8
0xffff91499980    64  stur x5, [x1, #-1]
0xffff91499984    68  tbz w5, #0, #+0x34 (addr 0xffff914999b8)
0xffff91499988    72  sub x2, x1, #0x1 (1)
0xffff9149998c    76  and x5, x5, #0xfffffffffff00000
0xffff91499990    80  ldr x5, [x5, #8]
0xffff91499994    84  tbz w5, #1, #+0x24 (addr 0xffff914999b8)
0xffff91499998    88  and x5, x1, #0xfffffffffff00000
0xffff9149999c    92  ldr x5, [x5, #8]
0xffff914999a0    96  tbz w5, #2, #+0x18 (addr 0xffff914999b8)
0xffff914999a4   100  sub csp, jssp, #0x8 (8)
0xffff914999a8   104  str lr, [jssp, #-8]!
0xffff914999ac   108  ldr x16, pc+36 (addr 0x0000ffff914999d0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914999b0   112  blr x16
0xffff914999b4   116  ldr lr, [jssp], #8
0xffff914999b8   120  ret
0xffff914999bc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914999c0   128  d63f03e0       constant
0xffff914999c4   132  d503201f       constant
0xffff914999c8   136  914378a0       constant
0xffff914999cc   140  0000ffff       constant
0xffff914999d0   144  91438080       constant
0xffff914999d4   148  0000ffff       constant
0xffff914999d8   152  movz x16, #0x0
0xffff914999dc   156  sub csp, jssp, #0x10 (16)
0xffff914999e0   160  stp fp, lr, [jssp, #-16]!
0xffff914999e4   164  bl #+0x4 (addr 0xffff914999e8)
0xffff914999e8   168  movz x17, #0xa00000000
0xffff914999ec   172  sub csp, jssp, #0x10 (16)
0xffff914999f0   176  stp x17, cp, [jssp, #-16]!
0xffff914999f4   180  add fp, jssp, #0x10 (16)
0xffff914999f8   184  ldr x17, pc+24 (addr 0x0000ffff91499a10)    ;; lazy deoptimization bailout 0
0xffff914999fc   188  add x17, x17, x16
0xffff91499a00   192  br x17
0xffff91499a04   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91499a08   200  d63f03e0       constant
0xffff91499a0c   204  d503201f       constant
0xffff91499a10   208  91206000       constant
0xffff91499a14   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff91499974  code target (STUB)  (0xffff914378a0)
0xffff914999ac  code target (STUB)  (0xffff91438080)
0xffff914999bc  constant pool (size 28)
0xffff914999f8  runtime entry
0xffff91499a04  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff91499940     0  tbz w0, #0, #+0x98 (addr 0xffff914999d8)
0xffff91499944     4  mov x2, x0
0xffff91499948     8  ldur x4, [x1, #7]
0xffff9149994c    12  stur x2, [x4, #23]
0xffff91499950    16  add x3, x4, #0x17 (23)
0xffff91499954    20  and x2, x2, #0xfffffffffff00000
0xffff91499958    24  ldr x2, [x2, #8]
0xffff9149995c    28  tbz w2, #1, #+0x24 (addr 0xffff91499980)
0xffff91499960    32  and x2, x4, #0xfffffffffff00000
0xffff91499964    36  ldr x2, [x2, #8]
0xffff91499968    40  tbz w2, #2, #+0x18 (addr 0xffff91499980)
0xffff9149996c    44  sub csp, jssp, #0x8 (8)
0xffff91499970    48  str lr, [jssp, #-8]!
0xffff91499974    52  ldr x16, pc+84 (addr 0x0000ffff914999c8)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff91499978    56  blr x16
0xffff9149997c    60  ldr lr, [jssp], #8
0xffff91499980    64  stur x5, [x1, #-1]
0xffff91499984    68  tbz w5, #0, #+0x34 (addr 0xffff914999b8)
0xffff91499988    72  sub x2, x1, #0x1 (1)
0xffff9149998c    76  and x5, x5, #0xfffffffffff00000
0xffff91499990    80  ldr x5, [x5, #8]
0xffff91499994    84  tbz w5, #1, #+0x24 (addr 0xffff914999b8)
0xffff91499998    88  and x5, x1, #0xfffffffffff00000
0xffff9149999c    92  ldr x5, [x5, #8]
0xffff914999a0    96  tbz w5, #2, #+0x18 (addr 0xffff914999b8)
0xffff914999a4   100  sub csp, jssp, #0x8 (8)
0xffff914999a8   104  str lr, [jssp, #-8]!
0xffff914999ac   108  ldr x16, pc+36 (addr 0x0000ffff914999d0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914999b0   112  blr x16
0xffff914999b4   116  ldr lr, [jssp], #8
0xffff914999b8   120  ret
0xffff914999bc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914999c0   128  d63f03e0       constant
0xffff914999c4   132  d503201f       constant
0xffff914999c8   136  914378a0       constant
0xffff914999cc   140  0000ffff       constant
0xffff914999d0   144  91438080       constant
0xffff914999d4   148  0000ffff       constant
0xffff914999d8   152  movz x16, #0x0
0xffff914999dc   156  sub csp, jssp, #0x10 (16)
0xffff914999e0   160  stp fp, lr, [jssp, #-16]!
0xffff914999e4   164  bl #+0x4 (addr 0xffff914999e8)
0xffff914999e8   168  movz x17, #0xa00000000
0xffff914999ec   172  sub csp, jssp, #0x10 (16)
0xffff914999f0   176  stp x17, cp, [jssp, #-16]!
0xffff914999f4   180  add fp, jssp, #0x10 (16)
0xffff914999f8   184  ldr x17, pc+24 (addr 0x0000ffff91499a10)    ;; lazy deoptimization bailout 0
0xffff914999fc   188  add x17, x17, x16
0xffff91499a00   192  br x17
0xffff91499a04   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91499a08   200  d63f03e0       constant
0xffff91499a0c   204  d503201f       constant
0xffff91499a10   208  91206000       constant
0xffff91499a14   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff91499974  code target (STUB)  (0xffff914378a0)
0xffff914999ac  code target (STUB)  (0xffff91438080)
0xffff914999bc  constant pool (size 28)
0xffff914999f8  runtime entry
0xffff91499a04  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/linkedlist
compiler = unknown
Instructions (size = 184)
0xffff91499a80     0  sub csp, jssp, #0x8 (8)
0xffff91499a84     4  str x3, [jssp, #-8]!
0xffff91499a88     8  sub csp, jssp, #0x8 (8)
0xffff91499a8c    12  str x4, [jssp, #-8]!
0xffff91499a90    16  ldr x3, pc+112 (addr 0x0000ffff91499b00)    ;; object: 0x49b63e59 Cell for 0
0xffff91499a94    20  ldur x3, [x3, #7]
0xffff91499a98    24  cmp x3, #0x0 (0)
0xffff91499a9c    28  b.ne #+0x44 (addr 0xffff91499ae0)
0xffff91499aa0    32  tbz w0, #0, #+0x40 (addr 0xffff91499ae0)
0xffff91499aa4    36  ldur x3, [x0, #-1]
0xffff91499aa8    40  ldr x4, pc+96 (addr 0x0000ffff91499b08)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91499aac    44  ldur x4, [x4, #7]
0xffff91499ab0    48  cmp x3, x4
0xffff91499ab4    52  b.ne #+0x2c (addr 0xffff91499ae0)
0xffff91499ab8    56  ldr x5, pc+88 (addr 0x0000ffff91499b10)    ;; object: 0x49be8e49 WeakCell for 0x36424de1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91499abc    60  ldur x5, [x5, #7]
0xffff91499ac0    64  tbz w5, #0, #+0x20 (addr 0xffff91499ae0)
0xffff91499ac4    68  ldursw x4, [x5, #15]
0xffff91499ac8    72  tbnz w4, #23, #+0x18 (addr 0xffff91499ae0)
0xffff91499acc    76  ldr x4, [jssp], #8
0xffff91499ad0    80  ldr x3, [jssp], #8
0xffff91499ad4    84  ldr x2, pc+68 (addr 0x0000ffff91499b18)    ;; object: 0x49bbe2f9 <String[19]: internal/linkedlist>
0xffff91499ad8    88  ldr x16, pc+72 (addr 0x0000ffff91499b20)    ;; code: HANDLER, StoreTransitionStub, minor: 196611
0xffff91499adc    92  br x16
0xffff91499ae0    96  ldr x2, pc+72 (addr 0x0000ffff91499b28)    ;; object: 0x49bbe2f9 <String[19]: internal/linkedlist>
0xffff91499ae4   100  ldr x4, [jssp], #8
0xffff91499ae8   104  ldr x3, [jssp], #8
0xffff91499aec   108  ldr x16, pc+68 (addr 0x0000ffff91499b30)    ;; code: BUILTIN
0xffff91499af0   112  br x16
0xffff91499af4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff91499af8   120  d63f03e0       constant
0xffff91499afc   124  d503201f       constant
0xffff91499b00   128  49b63e59       constant
0xffff91499b04   132  00000000       constant
0xffff91499b08   136  49bc22b1       constant
0xffff91499b0c   140  00000000       constant
0xffff91499b10   144  49be8e49       constant
0xffff91499b14   148  00000000       constant
0xffff91499b18   152  49bbe2f9       constant
0xffff91499b1c   156  00000000       constant
0xffff91499b20   160  91499940       constant
0xffff91499b24   164  0000ffff       constant
0xffff91499b28   168  49bbe2f9       constant
0xffff91499b2c   172  00000000       constant
0xffff91499b30   176  91422420       constant
0xffff91499b34   180  0000ffff       constant


RelocInfo (size = 13)
0xffff91499a90  embedded object  (0x49b63e59 Cell for 0)
0xffff91499aa8  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91499ab8  embedded object  (0x49be8e49 WeakCell for 0x36424de1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91499ad4  embedded object  (0x49bbe2f9 <String[19]: internal/linkedlist>)
0xffff91499ad8  code target (HANDLER)  (0xffff91499940)
0xffff91499ae0  embedded object  (0x49bbe2f9 <String[19]: internal/linkedlist>)
0xffff91499aec  code target (BUILTIN)  (0xffff91422420)
0xffff91499af4  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff9149a100     0  tbz w0, #0, #+0x98 (addr 0xffff9149a198)
0xffff9149a104     4  mov x2, x0
0xffff9149a108     8  ldur x4, [x1, #7]
0xffff9149a10c    12  stur x2, [x4, #31]
0xffff9149a110    16  add x3, x4, #0x1f (31)
0xffff9149a114    20  and x2, x2, #0xfffffffffff00000
0xffff9149a118    24  ldr x2, [x2, #8]
0xffff9149a11c    28  tbz w2, #1, #+0x24 (addr 0xffff9149a140)
0xffff9149a120    32  and x2, x4, #0xfffffffffff00000
0xffff9149a124    36  ldr x2, [x2, #8]
0xffff9149a128    40  tbz w2, #2, #+0x18 (addr 0xffff9149a140)
0xffff9149a12c    44  sub csp, jssp, #0x8 (8)
0xffff9149a130    48  str lr, [jssp, #-8]!
0xffff9149a134    52  ldr x16, pc+84 (addr 0x0000ffff9149a188)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff9149a138    56  blr x16
0xffff9149a13c    60  ldr lr, [jssp], #8
0xffff9149a140    64  stur x5, [x1, #-1]
0xffff9149a144    68  tbz w5, #0, #+0x34 (addr 0xffff9149a178)
0xffff9149a148    72  sub x2, x1, #0x1 (1)
0xffff9149a14c    76  and x5, x5, #0xfffffffffff00000
0xffff9149a150    80  ldr x5, [x5, #8]
0xffff9149a154    84  tbz w5, #1, #+0x24 (addr 0xffff9149a178)
0xffff9149a158    88  and x5, x1, #0xfffffffffff00000
0xffff9149a15c    92  ldr x5, [x5, #8]
0xffff9149a160    96  tbz w5, #2, #+0x18 (addr 0xffff9149a178)
0xffff9149a164   100  sub csp, jssp, #0x8 (8)
0xffff9149a168   104  str lr, [jssp, #-8]!
0xffff9149a16c   108  ldr x16, pc+36 (addr 0x0000ffff9149a190)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9149a170   112  blr x16
0xffff9149a174   116  ldr lr, [jssp], #8
0xffff9149a178   120  ret
0xffff9149a17c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff9149a180   128  d63f03e0       constant
0xffff9149a184   132  d503201f       constant
0xffff9149a188   136  914378a0       constant
0xffff9149a18c   140  0000ffff       constant
0xffff9149a190   144  91438080       constant
0xffff9149a194   148  0000ffff       constant
0xffff9149a198   152  movz x16, #0x0
0xffff9149a19c   156  sub csp, jssp, #0x10 (16)
0xffff9149a1a0   160  stp fp, lr, [jssp, #-16]!
0xffff9149a1a4   164  bl #+0x4 (addr 0xffff9149a1a8)
0xffff9149a1a8   168  movz x17, #0xa00000000
0xffff9149a1ac   172  sub csp, jssp, #0x10 (16)
0xffff9149a1b0   176  stp x17, cp, [jssp, #-16]!
0xffff9149a1b4   180  add fp, jssp, #0x10 (16)
0xffff9149a1b8   184  ldr x17, pc+24 (addr 0x0000ffff9149a1d0)    ;; lazy deoptimization bailout 0
0xffff9149a1bc   188  add x17, x17, x16
0xffff9149a1c0   192  br x17
0xffff9149a1c4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9149a1c8   200  d63f03e0       constant
0xffff9149a1cc   204  d503201f       constant
0xffff9149a1d0   208  91206000       constant
0xffff9149a1d4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff9149a134  code target (STUB)  (0xffff914378a0)
0xffff9149a16c  code target (STUB)  (0xffff91438080)
0xffff9149a17c  constant pool (size 28)
0xffff9149a1b8  runtime entry
0xffff9149a1c4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff9149a100     0  tbz w0, #0, #+0x98 (addr 0xffff9149a198)
0xffff9149a104     4  mov x2, x0
0xffff9149a108     8  ldur x4, [x1, #7]
0xffff9149a10c    12  stur x2, [x4, #31]
0xffff9149a110    16  add x3, x4, #0x1f (31)
0xffff9149a114    20  and x2, x2, #0xfffffffffff00000
0xffff9149a118    24  ldr x2, [x2, #8]
0xffff9149a11c    28  tbz w2, #1, #+0x24 (addr 0xffff9149a140)
0xffff9149a120    32  and x2, x4, #0xfffffffffff00000
0xffff9149a124    36  ldr x2, [x2, #8]
0xffff9149a128    40  tbz w2, #2, #+0x18 (addr 0xffff9149a140)
0xffff9149a12c    44  sub csp, jssp, #0x8 (8)
0xffff9149a130    48  str lr, [jssp, #-8]!
0xffff9149a134    52  ldr x16, pc+84 (addr 0x0000ffff9149a188)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff9149a138    56  blr x16
0xffff9149a13c    60  ldr lr, [jssp], #8
0xffff9149a140    64  stur x5, [x1, #-1]
0xffff9149a144    68  tbz w5, #0, #+0x34 (addr 0xffff9149a178)
0xffff9149a148    72  sub x2, x1, #0x1 (1)
0xffff9149a14c    76  and x5, x5, #0xfffffffffff00000
0xffff9149a150    80  ldr x5, [x5, #8]
0xffff9149a154    84  tbz w5, #1, #+0x24 (addr 0xffff9149a178)
0xffff9149a158    88  and x5, x1, #0xfffffffffff00000
0xffff9149a15c    92  ldr x5, [x5, #8]
0xffff9149a160    96  tbz w5, #2, #+0x18 (addr 0xffff9149a178)
0xffff9149a164   100  sub csp, jssp, #0x8 (8)
0xffff9149a168   104  str lr, [jssp, #-8]!
0xffff9149a16c   108  ldr x16, pc+36 (addr 0x0000ffff9149a190)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9149a170   112  blr x16
0xffff9149a174   116  ldr lr, [jssp], #8
0xffff9149a178   120  ret
0xffff9149a17c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff9149a180   128  d63f03e0       constant
0xffff9149a184   132  d503201f       constant
0xffff9149a188   136  914378a0       constant
0xffff9149a18c   140  0000ffff       constant
0xffff9149a190   144  91438080       constant
0xffff9149a194   148  0000ffff       constant
0xffff9149a198   152  movz x16, #0x0
0xffff9149a19c   156  sub csp, jssp, #0x10 (16)
0xffff9149a1a0   160  stp fp, lr, [jssp, #-16]!
0xffff9149a1a4   164  bl #+0x4 (addr 0xffff9149a1a8)
0xffff9149a1a8   168  movz x17, #0xa00000000
0xffff9149a1ac   172  sub csp, jssp, #0x10 (16)
0xffff9149a1b0   176  stp x17, cp, [jssp, #-16]!
0xffff9149a1b4   180  add fp, jssp, #0x10 (16)
0xffff9149a1b8   184  ldr x17, pc+24 (addr 0x0000ffff9149a1d0)    ;; lazy deoptimization bailout 0
0xffff9149a1bc   188  add x17, x17, x16
0xffff9149a1c0   192  br x17
0xffff9149a1c4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9149a1c8   200  d63f03e0       constant
0xffff9149a1cc   204  d503201f       constant
0xffff9149a1d0   208  91206000       constant
0xffff9149a1d4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff9149a134  code target (STUB)  (0xffff914378a0)
0xffff9149a16c  code target (STUB)  (0xffff91438080)
0xffff9149a17c  constant pool (size 28)
0xffff9149a1b8  runtime entry
0xffff9149a1c4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = assert
compiler = unknown
Instructions (size = 184)
0xffff9149a240     0  sub csp, jssp, #0x8 (8)
0xffff9149a244     4  str x3, [jssp, #-8]!
0xffff9149a248     8  sub csp, jssp, #0x8 (8)
0xffff9149a24c    12  str x4, [jssp, #-8]!
0xffff9149a250    16  ldr x3, pc+112 (addr 0x0000ffff9149a2c0)    ;; object: 0x49b63e59 Cell for 0
0xffff9149a254    20  ldur x3, [x3, #7]
0xffff9149a258    24  cmp x3, #0x0 (0)
0xffff9149a25c    28  b.ne #+0x44 (addr 0xffff9149a2a0)
0xffff9149a260    32  tbz w0, #0, #+0x40 (addr 0xffff9149a2a0)
0xffff9149a264    36  ldur x3, [x0, #-1]
0xffff9149a268    40  ldr x4, pc+96 (addr 0x0000ffff9149a2c8)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9149a26c    44  ldur x4, [x4, #7]
0xffff9149a270    48  cmp x3, x4
0xffff9149a274    52  b.ne #+0x2c (addr 0xffff9149a2a0)
0xffff9149a278    56  ldr x5, pc+88 (addr 0x0000ffff9149a2d0)    ;; object: 0x49be9b51 WeakCell for 0x364250a1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9149a27c    60  ldur x5, [x5, #7]
0xffff9149a280    64  tbz w5, #0, #+0x20 (addr 0xffff9149a2a0)
0xffff9149a284    68  ldursw x4, [x5, #15]
0xffff9149a288    72  tbnz w4, #23, #+0x18 (addr 0xffff9149a2a0)
0xffff9149a28c    76  ldr x4, [jssp], #8
0xffff9149a290    80  ldr x3, [jssp], #8
0xffff9149a294    84  ldr x2, pc+68 (addr 0x0000ffff9149a2d8)    ;; object: 0x49bbdc41 <String[6]: assert>
0xffff9149a298    88  ldr x16, pc+72 (addr 0x0000ffff9149a2e0)    ;; code: HANDLER, StoreTransitionStub, minor: 196612
0xffff9149a29c    92  br x16
0xffff9149a2a0    96  ldr x2, pc+72 (addr 0x0000ffff9149a2e8)    ;; object: 0x49bbdc41 <String[6]: assert>
0xffff9149a2a4   100  ldr x4, [jssp], #8
0xffff9149a2a8   104  ldr x3, [jssp], #8
0xffff9149a2ac   108  ldr x16, pc+68 (addr 0x0000ffff9149a2f0)    ;; code: BUILTIN
0xffff9149a2b0   112  br x16
0xffff9149a2b4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff9149a2b8   120  d63f03e0       constant
0xffff9149a2bc   124  d503201f       constant
0xffff9149a2c0   128  49b63e59       constant
0xffff9149a2c4   132  00000000       constant
0xffff9149a2c8   136  49bc22b1       constant
0xffff9149a2cc   140  00000000       constant
0xffff9149a2d0   144  49be9b51       constant
0xffff9149a2d4   148  00000000       constant
0xffff9149a2d8   152  49bbdc41       constant
0xffff9149a2dc   156  00000000       constant
0xffff9149a2e0   160  9149a100       constant
0xffff9149a2e4   164  0000ffff       constant
0xffff9149a2e8   168  49bbdc41       constant
0xffff9149a2ec   172  00000000       constant
0xffff9149a2f0   176  91422420       constant
0xffff9149a2f4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff9149a250  embedded object  (0x49b63e59 Cell for 0)
0xffff9149a268  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9149a278  embedded object  (0x49be9b51 WeakCell for 0x364250a1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9149a294  embedded object  (0x49bbdc41 <String[6]: assert>)
0xffff9149a298  code target (HANDLER)  (0xffff9149a100)
0xffff9149a2a0  embedded object  (0x49bbdc41 <String[6]: assert>)
0xffff9149a2ac  code target (BUILTIN)  (0xffff91422420)
0xffff9149a2b4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = exec
compiler = unknown
Instructions (size = 120)
0xffff9149c7a0     0  sub csp, jssp, #0x8 (8)
0xffff9149c7a4     4  str x3, [jssp, #-8]!
0xffff9149c7a8     8  sub csp, jssp, #0x8 (8)
0xffff9149c7ac    12  str x0, [jssp, #-8]!
0xffff9149c7b0    16  ldr x0, pc+72 (addr 0x0000ffff9149c7f8)    ;; object: 0x49bed491 Cell for 0
0xffff9149c7b4    20  ldur x0, [x0, #7]
0xffff9149c7b8    24  cmp x0, #0x0 (0)
0xffff9149c7bc    28  b.ne #+0x14 (addr 0xffff9149c7d0)
0xffff9149c7c0    32  ldr x3, pc+64 (addr 0x0000ffff9149c800)    ;; object: 0x49bed4a1 WeakCell for 0x26a5ea99 <an Object with map 0x364164d1>
0xffff9149c7c4    36  ldur x3, [x3, #7]
0xffff9149c7c8    40  tbz w3, #0, #+0x8 (addr 0xffff9149c7d0)
0xffff9149c7cc    44  b #+0x14 (addr 0xffff9149c7e0)
0xffff9149c7d0    48  ldr x0, [jssp], #8
0xffff9149c7d4    52  ldr x3, [jssp], #8
0xffff9149c7d8    56  ldr x16, pc+48 (addr 0x0000ffff9149c808)    ;; code: BUILTIN
0xffff9149c7dc    60  br x16
0xffff9149c7e0    64  add jssp, jssp, #0x10 (16)
0xffff9149c7e4    68  mov x1, x3
0xffff9149c7e8    72  ldr x16, pc+40 (addr 0x0000ffff9149c810)    ;; code: HANDLER, LoadFieldStub, minor: 2
0xffff9149c7ec    76  br x16
0xffff9149c7f0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff9149c7f4    84  d63f03e0       constant
0xffff9149c7f8    88  49bed491       constant
0xffff9149c7fc    92  00000000       constant
0xffff9149c800    96  49bed4a1       constant
0xffff9149c804   100  00000000       constant
0xffff9149c808   104  914222e0       constant
0xffff9149c80c   108  0000ffff       constant
0xffff9149c810   112  9146c260       constant
0xffff9149c814   116  0000ffff       constant


RelocInfo (size = 10)
0xffff9149c7b0  embedded object  (0x49bed491 Cell for 0)
0xffff9149c7c0  embedded object  (0x49bed4a1 WeakCell for 0x26a5ea99 <an Object with map 0x364164d1>)
0xffff9149c7d8  code target (BUILTIN)  (0xffff914222e0)
0xffff9149c7e8  code target (HANDLER)  (0xffff9146c260)
0xffff9149c7f0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff9149cd40     0  mov x2, x0
0xffff9149cd44     4  stur x2, [x1, #47]
0xffff9149cd48     8  tbz w2, #0, #+0x34 (addr 0xffff9149cd7c)
0xffff9149cd4c    12  add x3, x1, #0x2f (47)
0xffff9149cd50    16  and x2, x2, #0xfffffffffff00000
0xffff9149cd54    20  ldr x2, [x2, #8]
0xffff9149cd58    24  tbz w2, #1, #+0x24 (addr 0xffff9149cd7c)
0xffff9149cd5c    28  and x2, x1, #0xfffffffffff00000
0xffff9149cd60    32  ldr x2, [x2, #8]
0xffff9149cd64    36  tbz w2, #2, #+0x18 (addr 0xffff9149cd7c)
0xffff9149cd68    40  sub csp, jssp, #0x8 (8)
0xffff9149cd6c    44  str lr, [jssp, #-8]!
0xffff9149cd70    48  ldr x16, pc+24 (addr 0x0000ffff9149cd88)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9149cd74    52  blr x16
0xffff9149cd78    56  ldr lr, [jssp], #8
0xffff9149cd7c    60  ret
0xffff9149cd80    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff9149cd84    68  d63f03e0       constant
0xffff9149cd88    72  914170c0       constant
0xffff9149cd8c    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 7)
0xffff9149cd70  code target (STUB)  (0xffff914170c0)
0xffff9149cd80  constant pool (size 16)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff9149cd40     0  mov x2, x0
0xffff9149cd44     4  stur x2, [x1, #47]
0xffff9149cd48     8  tbz w2, #0, #+0x34 (addr 0xffff9149cd7c)
0xffff9149cd4c    12  add x3, x1, #0x2f (47)
0xffff9149cd50    16  and x2, x2, #0xfffffffffff00000
0xffff9149cd54    20  ldr x2, [x2, #8]
0xffff9149cd58    24  tbz w2, #1, #+0x24 (addr 0xffff9149cd7c)
0xffff9149cd5c    28  and x2, x1, #0xfffffffffff00000
0xffff9149cd60    32  ldr x2, [x2, #8]
0xffff9149cd64    36  tbz w2, #2, #+0x18 (addr 0xffff9149cd7c)
0xffff9149cd68    40  sub csp, jssp, #0x8 (8)
0xffff9149cd6c    44  str lr, [jssp, #-8]!
0xffff9149cd70    48  ldr x16, pc+24 (addr 0x0000ffff9149cd88)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff9149cd74    52  blr x16
0xffff9149cd78    56  ldr lr, [jssp], #8
0xffff9149cd7c    60  ret
0xffff9149cd80    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff9149cd84    68  d63f03e0       constant
0xffff9149cd88    72  914170c0       constant
0xffff9149cd8c    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 7)
0xffff9149cd70  code target (STUB)  (0xffff914170c0)
0xffff9149cd80  constant pool (size 16)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff9149d3c0     0  ldur x6, [x1, #7]
0xffff9149d3c4     4  ldur w7, [x6, #11]
0xffff9149d3c8     8  adds w8, w7, #0x3 (3)
0xffff9149d3cc    12  b.vs #+0x1dc (addr 0xffff9149d5a8)
0xffff9149d3d0    16  movz w16, #0x95ff
0xffff9149d3d4    20  cmp w8, w16, lsl #1
0xffff9149d3d8    24  b.hs #+0x1e0 (addr 0xffff9149d5b8)
0xffff9149d3dc    28  lsl x9, x8, #32
0xffff9149d3e0    32  lsl w10, w8, #3
0xffff9149d3e4    36  add w10, w10, #0x10 (16)
0xffff9149d3e8    40  sxtw x10, w10
0xffff9149d3ec    44  movz x11, #0xf2c0
0xffff9149d3f0    48  movk x11, #0x4117, lsl #16
0xffff9149d3f4    52  ldp x13, x16, [x11]
0xffff9149d3f8    56  adds x12, x13, x10
0xffff9149d3fc    60  ccmp x12, x16, #nzCv, lo
0xffff9149d400    64  b.hi #+0xf8 (addr 0xffff9149d4f8)
0xffff9149d404    68  str x12, [x11]
0xffff9149d408    72  orr x13, x13, #0x1
0xffff9149d40c    76  ldr x10, pc+348 (addr 0x0000ffff9149d568)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9149d410    80  stur x10, [x13, #-1]
0xffff9149d414    84  stur x9, [x13, #7]
0xffff9149d418    88  cmp w7, w8
0xffff9149d41c    92  b.ge #+0x18 (addr 0xffff9149d434)
0xffff9149d420    96  sub w8, w8, #0x1 (1)
0xffff9149d424   100  ldr x9, pc+332 (addr 0x0000ffff9149d570)    ;; object: 0x49b04241 <undefined>
0xffff9149d428   104  add x10, x13, #0xf (15)
0xffff9149d42c   108  str x9, [x10, w8, sxtw #3]
0xffff9149d430   112  b #-0x18 (addr 0xffff9149d418)
0xffff9149d434   116  cmp w7, #0x0 (0)
0xffff9149d438   120  b.le #+0x1c (addr 0xffff9149d454)
0xffff9149d43c   124  sub w7, w7, #0x1 (1)
0xffff9149d440   128  add x8, x6, #0xf (15)
0xffff9149d444   132  ldr x9, [x8, w7, sxtw #3]
0xffff9149d448   136  add x8, x13, #0xf (15)
0xffff9149d44c   140  str x9, [x8, w7, sxtw #3]
0xffff9149d450   144  b #-0x1c (addr 0xffff9149d434)
0xffff9149d454   148  stur x13, [x1, #7]
0xffff9149d458   152  add x6, x1, #0x7 (7)
0xffff9149d45c   156  and x13, x1, #0xfffffffffff00000
0xffff9149d460   160  ldr x13, [x13, #8]
0xffff9149d464   164  tbz w13, #2, #+0x18 (addr 0xffff9149d47c)
0xffff9149d468   168  sub csp, jssp, #0x8 (8)
0xffff9149d46c   172  str lr, [jssp, #-8]!
0xffff9149d470   176  ldr x16, pc+264 (addr 0x0000ffff9149d578)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff9149d474   180  blr x16
0xffff9149d478   184  ldr lr, [jssp], #8
0xffff9149d47c   188  tbz w0, #0, #+0x14c (addr 0xffff9149d5c8)
0xffff9149d480   192  mov x2, x0
0xffff9149d484   196  ldur x4, [x1, #7]
0xffff9149d488   200  stur x2, [x4, #39]
0xffff9149d48c   204  add x3, x4, #0x27 (39)
0xffff9149d490   208  and x2, x2, #0xfffffffffff00000
0xffff9149d494   212  ldr x2, [x2, #8]
0xffff9149d498   216  tbz w2, #1, #+0x24 (addr 0xffff9149d4bc)
0xffff9149d49c   220  and x2, x4, #0xfffffffffff00000
0xffff9149d4a0   224  ldr x2, [x2, #8]
0xffff9149d4a4   228  tbz w2, #2, #+0x18 (addr 0xffff9149d4bc)
0xffff9149d4a8   232  sub csp, jssp, #0x8 (8)
0xffff9149d4ac   236  str lr, [jssp, #-8]!
0xffff9149d4b0   240  ldr x16, pc+208 (addr 0x0000ffff9149d580)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff9149d4b4   244  blr x16
0xffff9149d4b8   248  ldr lr, [jssp], #8
0xffff9149d4bc   252  stur x5, [x1, #-1]
0xffff9149d4c0   256  tbz w5, #0, #+0x34 (addr 0xffff9149d4f4)
0xffff9149d4c4   260  sub x2, x1, #0x1 (1)
0xffff9149d4c8   264  and x5, x5, #0xfffffffffff00000
0xffff9149d4cc   268  ldr x5, [x5, #8]
0xffff9149d4d0   272  tbz w5, #1, #+0x24 (addr 0xffff9149d4f4)
0xffff9149d4d4   276  and x5, x1, #0xfffffffffff00000
0xffff9149d4d8   280  ldr x5, [x5, #8]
0xffff9149d4dc   284  tbz w5, #2, #+0x18 (addr 0xffff9149d4f4)
0xffff9149d4e0   288  sub csp, jssp, #0x8 (8)
0xffff9149d4e4   292  str lr, [jssp, #-8]!
0xffff9149d4e8   296  ldr x16, pc+160 (addr 0x0000ffff9149d588)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9149d4ec   300  blr x16
0xffff9149d4f0   304  ldr lr, [jssp], #8
0xffff9149d4f4   308  ret
0xffff9149d4f8   312  sub csp, jssp, #0x10 (16)
0xffff9149d4fc   316  stp fp, lr, [jssp, #-16]!
0xffff9149d500   320  movz fp, #0xa00000000
0xffff9149d504   324  sub csp, jssp, #0x8 (8)
0xffff9149d508   328  str fp, [jssp, #-8]!
0xffff9149d50c   332  add fp, jssp, #0x8 (8)
0xffff9149d510   336  movz x13, #0x0
0xffff9149d514   340  mov x16, lr
0xffff9149d518   344  ldr x17, pc+120 (addr 0x0000ffff9149d590)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9149d51c   348  blr x17
0xffff9149d520   352  lsl x0, x10, #32
0xffff9149d524   356  movz x10, #0x0
0xffff9149d528   360  sub csp, jssp, #0x10 (16)
0xffff9149d52c   364  stp x10, x0, [jssp, #-16]!
0xffff9149d530   368  movz x0, #0x2
0xffff9149d534   372  movz x1, #0x5b88
0xffff9149d538   376  movk x1, #0xe2, lsl #16
0xffff9149d53c   380  ldr x16, pc+92 (addr 0x0000ffff9149d598)    ;; code: STUB, CEntryStub, minor: 5
0xffff9149d540   384  blr x16
0xffff9149d544   388  str x0, [jssp, #104]
0xffff9149d548   392  ldr x16, pc+88 (addr 0x0000ffff9149d5a0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9149d54c   396  blr x16
0xffff9149d550   400  ldr lr, [jssp, #16]
0xffff9149d554   404  ldp xzr, fp, [jssp], #24
0xffff9149d558   408  b #-0x14c (addr 0xffff9149d40c)
0xffff9149d55c   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff9149d560   416  d63f03e0       constant
0xffff9149d564   420  d503201f       constant
0xffff9149d568   424  36404259       constant
0xffff9149d56c   428  00000000       constant
0xffff9149d570   432  49b04241       constant
0xffff9149d574   436  00000000       constant
0xffff9149d578   440  914370c0       constant
0xffff9149d57c   444  0000ffff       constant
0xffff9149d580   448  914378a0       constant
0xffff9149d584   452  0000ffff       constant
0xffff9149d588   456  91438080       constant
0xffff9149d58c   460  0000ffff       constant
0xffff9149d590   464  91406820       constant
0xffff9149d594   468  0000ffff       constant
0xffff9149d598   472  91406260       constant
0xffff9149d59c   476  0000ffff       constant
0xffff9149d5a0   480  914068e0       constant
0xffff9149d5a4   484  0000ffff       constant
0xffff9149d5a8   488  movz x16, #0x0
0xffff9149d5ac   492  sub csp, jssp, #0x10 (16)
0xffff9149d5b0   496  stp fp, lr, [jssp, #-16]!
0xffff9149d5b4   500  bl #+0x24 (addr 0xffff9149d5d8)
0xffff9149d5b8   504  movz x16, #0x8
0xffff9149d5bc   508  sub csp, jssp, #0x10 (16)
0xffff9149d5c0   512  stp fp, lr, [jssp, #-16]!
0xffff9149d5c4   516  bl #+0x14 (addr 0xffff9149d5d8)
0xffff9149d5c8   520  movz x16, #0x10
0xffff9149d5cc   524  sub csp, jssp, #0x10 (16)
0xffff9149d5d0   528  stp fp, lr, [jssp, #-16]!
0xffff9149d5d4   532  bl #+0x4 (addr 0xffff9149d5d8)
0xffff9149d5d8   536  movz x17, #0xa00000000
0xffff9149d5dc   540  sub csp, jssp, #0x10 (16)
0xffff9149d5e0   544  stp x17, cp, [jssp, #-16]!
0xffff9149d5e4   548  add fp, jssp, #0x10 (16)
0xffff9149d5e8   552  ldr x17, pc+24 (addr 0x0000ffff9149d600)    ;; lazy deoptimization bailout 0
0xffff9149d5ec   556  add x17, x17, x16
0xffff9149d5f0   560  br x17
0xffff9149d5f4   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9149d5f8   568  d63f03e0       constant
0xffff9149d5fc   572  d503201f       constant
0xffff9149d600   576  91206000       constant
0xffff9149d604   580  0000ffff       constant


Safepoints (size = 21)
0xffff9149d544   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff9149d40c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9149d424  embedded object  (0x49b04241 <undefined>)
0xffff9149d470  code target (STUB)  (0xffff914370c0)
0xffff9149d4b0  code target (STUB)  (0xffff914378a0)
0xffff9149d4e8  code target (STUB)  (0xffff91438080)
0xffff9149d518  code target (STUB)  (0xffff91406820)
0xffff9149d53c  code target (STUB)  (0xffff91406260)
0xffff9149d548  code target (STUB)  (0xffff914068e0)
0xffff9149d55c  constant pool (size 76)
0xffff9149d5e8  runtime entry
0xffff9149d5f4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff9149d3c0     0  ldur x6, [x1, #7]
0xffff9149d3c4     4  ldur w7, [x6, #11]
0xffff9149d3c8     8  adds w8, w7, #0x3 (3)
0xffff9149d3cc    12  b.vs #+0x1dc (addr 0xffff9149d5a8)
0xffff9149d3d0    16  movz w16, #0x95ff
0xffff9149d3d4    20  cmp w8, w16, lsl #1
0xffff9149d3d8    24  b.hs #+0x1e0 (addr 0xffff9149d5b8)
0xffff9149d3dc    28  lsl x9, x8, #32
0xffff9149d3e0    32  lsl w10, w8, #3
0xffff9149d3e4    36  add w10, w10, #0x10 (16)
0xffff9149d3e8    40  sxtw x10, w10
0xffff9149d3ec    44  movz x11, #0xf2c0
0xffff9149d3f0    48  movk x11, #0x4117, lsl #16
0xffff9149d3f4    52  ldp x13, x16, [x11]
0xffff9149d3f8    56  adds x12, x13, x10
0xffff9149d3fc    60  ccmp x12, x16, #nzCv, lo
0xffff9149d400    64  b.hi #+0xf8 (addr 0xffff9149d4f8)
0xffff9149d404    68  str x12, [x11]
0xffff9149d408    72  orr x13, x13, #0x1
0xffff9149d40c    76  ldr x10, pc+348 (addr 0x0000ffff9149d568)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff9149d410    80  stur x10, [x13, #-1]
0xffff9149d414    84  stur x9, [x13, #7]
0xffff9149d418    88  cmp w7, w8
0xffff9149d41c    92  b.ge #+0x18 (addr 0xffff9149d434)
0xffff9149d420    96  sub w8, w8, #0x1 (1)
0xffff9149d424   100  ldr x9, pc+332 (addr 0x0000ffff9149d570)    ;; object: 0x49b04241 <undefined>
0xffff9149d428   104  add x10, x13, #0xf (15)
0xffff9149d42c   108  str x9, [x10, w8, sxtw #3]
0xffff9149d430   112  b #-0x18 (addr 0xffff9149d418)
0xffff9149d434   116  cmp w7, #0x0 (0)
0xffff9149d438   120  b.le #+0x1c (addr 0xffff9149d454)
0xffff9149d43c   124  sub w7, w7, #0x1 (1)
0xffff9149d440   128  add x8, x6, #0xf (15)
0xffff9149d444   132  ldr x9, [x8, w7, sxtw #3]
0xffff9149d448   136  add x8, x13, #0xf (15)
0xffff9149d44c   140  str x9, [x8, w7, sxtw #3]
0xffff9149d450   144  b #-0x1c (addr 0xffff9149d434)
0xffff9149d454   148  stur x13, [x1, #7]
0xffff9149d458   152  add x6, x1, #0x7 (7)
0xffff9149d45c   156  and x13, x1, #0xfffffffffff00000
0xffff9149d460   160  ldr x13, [x13, #8]
0xffff9149d464   164  tbz w13, #2, #+0x18 (addr 0xffff9149d47c)
0xffff9149d468   168  sub csp, jssp, #0x8 (8)
0xffff9149d46c   172  str lr, [jssp, #-8]!
0xffff9149d470   176  ldr x16, pc+264 (addr 0x0000ffff9149d578)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff9149d474   180  blr x16
0xffff9149d478   184  ldr lr, [jssp], #8
0xffff9149d47c   188  tbz w0, #0, #+0x14c (addr 0xffff9149d5c8)
0xffff9149d480   192  mov x2, x0
0xffff9149d484   196  ldur x4, [x1, #7]
0xffff9149d488   200  stur x2, [x4, #39]
0xffff9149d48c   204  add x3, x4, #0x27 (39)
0xffff9149d490   208  and x2, x2, #0xfffffffffff00000
0xffff9149d494   212  ldr x2, [x2, #8]
0xffff9149d498   216  tbz w2, #1, #+0x24 (addr 0xffff9149d4bc)
0xffff9149d49c   220  and x2, x4, #0xfffffffffff00000
0xffff9149d4a0   224  ldr x2, [x2, #8]
0xffff9149d4a4   228  tbz w2, #2, #+0x18 (addr 0xffff9149d4bc)
0xffff9149d4a8   232  sub csp, jssp, #0x8 (8)
0xffff9149d4ac   236  str lr, [jssp, #-8]!
0xffff9149d4b0   240  ldr x16, pc+208 (addr 0x0000ffff9149d580)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff9149d4b4   244  blr x16
0xffff9149d4b8   248  ldr lr, [jssp], #8
0xffff9149d4bc   252  stur x5, [x1, #-1]
0xffff9149d4c0   256  tbz w5, #0, #+0x34 (addr 0xffff9149d4f4)
0xffff9149d4c4   260  sub x2, x1, #0x1 (1)
0xffff9149d4c8   264  and x5, x5, #0xfffffffffff00000
0xffff9149d4cc   268  ldr x5, [x5, #8]
0xffff9149d4d0   272  tbz w5, #1, #+0x24 (addr 0xffff9149d4f4)
0xffff9149d4d4   276  and x5, x1, #0xfffffffffff00000
0xffff9149d4d8   280  ldr x5, [x5, #8]
0xffff9149d4dc   284  tbz w5, #2, #+0x18 (addr 0xffff9149d4f4)
0xffff9149d4e0   288  sub csp, jssp, #0x8 (8)
0xffff9149d4e4   292  str lr, [jssp, #-8]!
0xffff9149d4e8   296  ldr x16, pc+160 (addr 0x0000ffff9149d588)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff9149d4ec   300  blr x16
0xffff9149d4f0   304  ldr lr, [jssp], #8
0xffff9149d4f4   308  ret
0xffff9149d4f8   312  sub csp, jssp, #0x10 (16)
0xffff9149d4fc   316  stp fp, lr, [jssp, #-16]!
0xffff9149d500   320  movz fp, #0xa00000000
0xffff9149d504   324  sub csp, jssp, #0x8 (8)
0xffff9149d508   328  str fp, [jssp, #-8]!
0xffff9149d50c   332  add fp, jssp, #0x8 (8)
0xffff9149d510   336  movz x13, #0x0
0xffff9149d514   340  mov x16, lr
0xffff9149d518   344  ldr x17, pc+120 (addr 0x0000ffff9149d590)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff9149d51c   348  blr x17
0xffff9149d520   352  lsl x0, x10, #32
0xffff9149d524   356  movz x10, #0x0
0xffff9149d528   360  sub csp, jssp, #0x10 (16)
0xffff9149d52c   364  stp x10, x0, [jssp, #-16]!
0xffff9149d530   368  movz x0, #0x2
0xffff9149d534   372  movz x1, #0x5b88
0xffff9149d538   376  movk x1, #0xe2, lsl #16
0xffff9149d53c   380  ldr x16, pc+92 (addr 0x0000ffff9149d598)    ;; code: STUB, CEntryStub, minor: 5
0xffff9149d540   384  blr x16
0xffff9149d544   388  str x0, [jssp, #104]
0xffff9149d548   392  ldr x16, pc+88 (addr 0x0000ffff9149d5a0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9149d54c   396  blr x16
0xffff9149d550   400  ldr lr, [jssp, #16]
0xffff9149d554   404  ldp xzr, fp, [jssp], #24
0xffff9149d558   408  b #-0x14c (addr 0xffff9149d40c)
0xffff9149d55c   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff9149d560   416  d63f03e0       constant
0xffff9149d564   420  d503201f       constant
0xffff9149d568   424  36404259       constant
0xffff9149d56c   428  00000000       constant
0xffff9149d570   432  49b04241       constant
0xffff9149d574   436  00000000       constant
0xffff9149d578   440  914370c0       constant
0xffff9149d57c   444  0000ffff       constant
0xffff9149d580   448  914378a0       constant
0xffff9149d584   452  0000ffff       constant
0xffff9149d588   456  91438080       constant
0xffff9149d58c   460  0000ffff       constant
0xffff9149d590   464  91406820       constant
0xffff9149d594   468  0000ffff       constant
0xffff9149d598   472  91406260       constant
0xffff9149d59c   476  0000ffff       constant
0xffff9149d5a0   480  914068e0       constant
0xffff9149d5a4   484  0000ffff       constant
0xffff9149d5a8   488  movz x16, #0x0
0xffff9149d5ac   492  sub csp, jssp, #0x10 (16)
0xffff9149d5b0   496  stp fp, lr, [jssp, #-16]!
0xffff9149d5b4   500  bl #+0x24 (addr 0xffff9149d5d8)
0xffff9149d5b8   504  movz x16, #0x8
0xffff9149d5bc   508  sub csp, jssp, #0x10 (16)
0xffff9149d5c0   512  stp fp, lr, [jssp, #-16]!
0xffff9149d5c4   516  bl #+0x14 (addr 0xffff9149d5d8)
0xffff9149d5c8   520  movz x16, #0x10
0xffff9149d5cc   524  sub csp, jssp, #0x10 (16)
0xffff9149d5d0   528  stp fp, lr, [jssp, #-16]!
0xffff9149d5d4   532  bl #+0x4 (addr 0xffff9149d5d8)
0xffff9149d5d8   536  movz x17, #0xa00000000
0xffff9149d5dc   540  sub csp, jssp, #0x10 (16)
0xffff9149d5e0   544  stp x17, cp, [jssp, #-16]!
0xffff9149d5e4   548  add fp, jssp, #0x10 (16)
0xffff9149d5e8   552  ldr x17, pc+24 (addr 0x0000ffff9149d600)    ;; lazy deoptimization bailout 0
0xffff9149d5ec   556  add x17, x17, x16
0xffff9149d5f0   560  br x17
0xffff9149d5f4   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9149d5f8   568  d63f03e0       constant
0xffff9149d5fc   572  d503201f       constant
0xffff9149d600   576  91206000       constant
0xffff9149d604   580  0000ffff       constant


Safepoints (size = 21)
0xffff9149d544   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff9149d40c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff9149d424  embedded object  (0x49b04241 <undefined>)
0xffff9149d470  code target (STUB)  (0xffff914370c0)
0xffff9149d4b0  code target (STUB)  (0xffff914378a0)
0xffff9149d4e8  code target (STUB)  (0xffff91438080)
0xffff9149d518  code target (STUB)  (0xffff91406820)
0xffff9149d53c  code target (STUB)  (0xffff91406260)
0xffff9149d548  code target (STUB)  (0xffff914068e0)
0xffff9149d55c  constant pool (size 76)
0xffff9149d5e8  runtime entry
0xffff9149d5f4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/process
compiler = unknown
Instructions (size = 184)
0xffff9149d680     0  sub csp, jssp, #0x8 (8)
0xffff9149d684     4  str x3, [jssp, #-8]!
0xffff9149d688     8  sub csp, jssp, #0x8 (8)
0xffff9149d68c    12  str x4, [jssp, #-8]!
0xffff9149d690    16  ldr x3, pc+112 (addr 0x0000ffff9149d700)    ;; object: 0x49b63e59 Cell for 0
0xffff9149d694    20  ldur x3, [x3, #7]
0xffff9149d698    24  cmp x3, #0x0 (0)
0xffff9149d69c    28  b.ne #+0x44 (addr 0xffff9149d6e0)
0xffff9149d6a0    32  tbz w0, #0, #+0x40 (addr 0xffff9149d6e0)
0xffff9149d6a4    36  ldur x3, [x0, #-1]
0xffff9149d6a8    40  ldr x4, pc+96 (addr 0x0000ffff9149d708)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9149d6ac    44  ldur x4, [x4, #7]
0xffff9149d6b0    48  cmp x3, x4
0xffff9149d6b4    52  b.ne #+0x2c (addr 0xffff9149d6e0)
0xffff9149d6b8    56  ldr x5, pc+88 (addr 0x0000ffff9149d710)    ;; object: 0x49bee969 WeakCell for 0x36425f11 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9149d6bc    60  ldur x5, [x5, #7]
0xffff9149d6c0    64  tbz w5, #0, #+0x20 (addr 0xffff9149d6e0)
0xffff9149d6c4    68  ldursw x4, [x5, #15]
0xffff9149d6c8    72  tbnz w4, #23, #+0x18 (addr 0xffff9149d6e0)
0xffff9149d6cc    76  ldr x4, [jssp], #8
0xffff9149d6d0    80  ldr x3, [jssp], #8
0xffff9149d6d4    84  ldr x2, pc+68 (addr 0x0000ffff9149d718)    ;; object: 0x49bb9649 <String[16]: internal/process>
0xffff9149d6d8    88  ldr x16, pc+72 (addr 0x0000ffff9149d720)    ;; code: HANDLER, StoreTransitionStub, minor: 327685
0xffff9149d6dc    92  br x16
0xffff9149d6e0    96  ldr x2, pc+72 (addr 0x0000ffff9149d728)    ;; object: 0x49bb9649 <String[16]: internal/process>
0xffff9149d6e4   100  ldr x4, [jssp], #8
0xffff9149d6e8   104  ldr x3, [jssp], #8
0xffff9149d6ec   108  ldr x16, pc+68 (addr 0x0000ffff9149d730)    ;; code: BUILTIN
0xffff9149d6f0   112  br x16
0xffff9149d6f4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff9149d6f8   120  d63f03e0       constant
0xffff9149d6fc   124  d503201f       constant
0xffff9149d700   128  49b63e59       constant
0xffff9149d704   132  00000000       constant
0xffff9149d708   136  49bc22b1       constant
0xffff9149d70c   140  00000000       constant
0xffff9149d710   144  49bee969       constant
0xffff9149d714   148  00000000       constant
0xffff9149d718   152  49bb9649       constant
0xffff9149d71c   156  00000000       constant
0xffff9149d720   160  9149d3c0       constant
0xffff9149d724   164  0000ffff       constant
0xffff9149d728   168  49bb9649       constant
0xffff9149d72c   172  00000000       constant
0xffff9149d730   176  91422420       constant
0xffff9149d734   180  0000ffff       constant


RelocInfo (size = 13)
0xffff9149d690  embedded object  (0x49b63e59 Cell for 0)
0xffff9149d6a8  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9149d6b8  embedded object  (0x49bee969 WeakCell for 0x36425f11 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff9149d6d4  embedded object  (0x49bb9649 <String[16]: internal/process>)
0xffff9149d6d8  code target (HANDLER)  (0xffff9149d3c0)
0xffff9149d6e0  embedded object  (0x49bb9649 <String[16]: internal/process>)
0xffff9149d6ec  code target (BUILTIN)  (0xffff91422420)
0xffff9149d6f4  constant pool (size 68)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*GENERIC -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff9149faa0     0  orr x16, x1, x0
0xffff9149faa4     4  tbnz w16, #0, #+0x10 (addr 0xffff9149fab4)
0xffff9149faa8     8  asr x1, x1, #32
0xffff9149faac    12  sub x0, x1, x0, asr #32
0xffff9149fab0    16  ret
0xffff9149fab4    20  cmp x0, x1
0xffff9149fab8    24  b.ne #+0x30 (addr 0xffff9149fae8)
0xffff9149fabc    28  ldur x16, [x0, #-1]
0xffff9149fac0    32  ldr x17, [x26, #120]
0xffff9149fac4    36  cmp x16, x17
0xffff9149fac8    40  b.eq #+0xc (addr 0xffff9149fad4)
0xffff9149facc    44  movz x0, #0x0
0xffff9149fad0    48  ret
0xffff9149fad4    52  ldur d0, [x0, #7]
0xffff9149fad8    56  fcmp d0, d0
0xffff9149fadc    60  b.vc #-0x10 (addr 0xffff9149facc)
0xffff9149fae0    64  movn x0, #0x0
0xffff9149fae4    68  ret
0xffff9149fae8    72  and x16, x1, x0
0xffff9149faec    76  tbnz w16, #0, #+0x64 (addr 0xffff9149fb50)
0xffff9149faf0    80  tbz w0, #0, #+0x24 (addr 0xffff9149fb14)
0xffff9149faf4    84  ldur x16, [x0, #-1]
0xffff9149faf8    88  ldr x17, [x26, #120]
0xffff9149fafc    92  cmp x16, x17
0xffff9149fb00    96  b.eq #+0x8 (addr 0xffff9149fb08)
0xffff9149fb04   100  ret
0xffff9149fb08   104  ldur d0, [x0, #7]
0xffff9149fb0c   108  scvtf d1, x1, #32
0xffff9149fb10   112  b #+0x24 (addr 0xffff9149fb34)
0xffff9149fb14   116  ldur x16, [x1, #-1]
0xffff9149fb18   120  ldr x17, [x26, #120]
0xffff9149fb1c   124  cmp x16, x17
0xffff9149fb20   128  b.eq #+0xc (addr 0xffff9149fb2c)
0xffff9149fb24   132  movz x0, #0x1
0xffff9149fb28   136  ret
0xffff9149fb2c   140  ldur d1, [x1, #7]
0xffff9149fb30   144  scvtf d0, x0, #32
0xffff9149fb34   148  fcmp d1, d0
0xffff9149fb38   152  b.vs #+0x10 (addr 0xffff9149fb48)
0xffff9149fb3c   156  cset x0, gt
0xffff9149fb40   160  csinv x0, x0, xzr, ge
0xffff9149fb44   164  ret
0xffff9149fb48   168  movn x0, #0x0
0xffff9149fb4c   172  ret
0xffff9149fb50   176  ldur x10, [x0, #-1]
0xffff9149fb54   180  ldur x12, [x1, #-1]
0xffff9149fb58   184  ldrb w11, [x10, #11]
0xffff9149fb5c   188  ldrb w13, [x12, #11]
0xffff9149fb60   192  cmp x11, #0xb1 (177)
0xffff9149fb64   196  b.lt #+0x8 (addr 0xffff9149fb6c)
0xffff9149fb68   200  ret
0xffff9149fb6c   204  cmp x11, #0x83 (131)
0xffff9149fb70   208  movz x16, #0x83
0xffff9149fb74   212  ccmp x13, x16, #nZcv, ne
0xffff9149fb78   216  movz x16, #0xb1
0xffff9149fb7c   220  ccmp x13, x16, #NzcV, ne
0xffff9149fb80   224  b.ge #-0x18 (addr 0xffff9149fb68)
0xffff9149fb84   228  orr x14, x13, x11
0xffff9149fb88   232  tst x14, #0xc0
0xffff9149fb8c   236  b.eq #-0x24 (addr 0xffff9149fb68)
0xffff9149fb90   240  cmp x11, #0x81 (129)
0xffff9149fb94   244  b.ne #+0x18 (addr 0xffff9149fbac)
0xffff9149fb98   248  cmp x12, x10
0xffff9149fb9c   252  b.ne #+0x10 (addr 0xffff9149fbac)
0xffff9149fba0   256  ldur d1, [x1, #7]
0xffff9149fba4   260  ldur d0, [x0, #7]
0xffff9149fba8   264  b #-0x74 (addr 0xffff9149fb34)
0xffff9149fbac   268  movz x16, #0x87
0xffff9149fbb0   272  and x14, x13, x16
0xffff9149fbb4   276  movz x16, #0x87
0xffff9149fbb8   280  and x15, x11, x16
0xffff9149fbbc   284  cmp x14, #0x4 (4)
0xffff9149fbc0   288  ccmp x15, #4, #nzcv, eq
0xffff9149fbc4   292  b.ne #+0x5c (addr 0xffff9149fc20)
0xffff9149fbc8   296  ldur x10, [x1, #15]
0xffff9149fbcc   300  ldur x11, [x0, #15]
0xffff9149fbd0   304  cmp x10, x11
0xffff9149fbd4   308  b.eq #+0xc (addr 0xffff9149fbe0)
0xffff9149fbd8   312  movz x0, #0x100000000
0xffff9149fbdc   316  ret
0xffff9149fbe0   320  cbnz x10, #+0xc (addr 0xffff9149fbec)
0xffff9149fbe4   324  movz x0, #0x0
0xffff9149fbe8   328  ret
0xffff9149fbec   332  asr x10, x10, #32
0xffff9149fbf0   336  add x11, x10, #0x17 (23)
0xffff9149fbf4   340  add x1, x1, x11
0xffff9149fbf8   344  add x0, x0, x11
0xffff9149fbfc   348  neg x10, x10
0xffff9149fc00   352  ldrb w11, [x1, x10]
0xffff9149fc04   356  ldrb w12, [x0, x10]
0xffff9149fc08   360  cmp x11, x12
0xffff9149fc0c   364  b.ne #-0x34 (addr 0xffff9149fbd8)
0xffff9149fc10   368  add x10, x10, #0x1 (1)
0xffff9149fc14   372  cbnz x10, #-0x14 (addr 0xffff9149fc00)
0xffff9149fc18   376  movz x0, #0x0
0xffff9149fc1c   380  ret
0xffff9149fc20   384  movz x16, #0xc00000000
0xffff9149fc24   388  sub csp, jssp, #0x10 (16)
0xffff9149fc28   392  stp fp, lr, [jssp, #-16]!
0xffff9149fc2c   396  sub csp, jssp, #0x10 (16)
0xffff9149fc30   400  str x16, [jssp, #-8]!
0xffff9149fc34   404  ldr x17, pc+172 (addr 0x0000ffff9149fce0)    ;; object: 0xffff9149fa41 <Code: COMPARE_IC>
0xffff9149fc38   408  sub csp, jssp, #0x10 (16)
0xffff9149fc3c   412  str x17, [jssp, #-8]!
0xffff9149fc40   416  add fp, jssp, #0x10 (16)
0xffff9149fc44   420  sub csp, jssp, #0x10 (16)
0xffff9149fc48   424  stp x0, x1, [jssp, #-16]!
0xffff9149fc4c   428  movz x0, #0x2
0xffff9149fc50   432  ldr x1, pc+152 (addr 0x0000ffff9149fce8)    ;; external reference (Runtime::StrictEqual)
0xffff9149fc54   436  ldr x16, pc+156 (addr 0x0000ffff9149fcf0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9149fc58   440  blr x16
0xffff9149fc5c   444  mov jssp, fp
0xffff9149fc60   448  ldp fp, lr, [jssp], #16
0xffff9149fc64   452  ldr x1, [x26, #64]
0xffff9149fc68   456  sub x0, x0, x1
0xffff9149fc6c   460  ret
0xffff9149fc70   464  movz x16, #0xc00000000
0xffff9149fc74   468  sub csp, jssp, #0x10 (16)
0xffff9149fc78   472  stp fp, lr, [jssp, #-16]!
0xffff9149fc7c   476  sub csp, jssp, #0x10 (16)
0xffff9149fc80   480  str x16, [jssp, #-8]!
0xffff9149fc84   484  ldr x17, pc+116 (addr 0x0000ffff9149fcf8)    ;; object: 0xffff9149fa41 <Code: COMPARE_IC>
0xffff9149fc88   488  sub csp, jssp, #0x10 (16)
0xffff9149fc8c   492  str x17, [jssp, #-8]!
0xffff9149fc90   496  add fp, jssp, #0x10 (16)
0xffff9149fc94   500  sub csp, jssp, #0x18 (24)
0xffff9149fc98   504  stp lr, x0, [jssp, #-24]!
0xffff9149fc9c   508  str x1, [jssp, #16]
0xffff9149fca0   512  movz x10, #0x2f00000000
0xffff9149fca4   516  sub csp, jssp, #0x18 (24)
0xffff9149fca8   520  stp x10, x0, [jssp, #-24]!
0xffff9149fcac   524  str x1, [jssp, #16]
0xffff9149fcb0   528  movz x0, #0x3
0xffff9149fcb4   532  ldr x1, pc+76 (addr 0x0000ffff9149fd00)    ;; external reference (Runtime::CompareIC_Miss)
0xffff9149fcb8   536  ldr x16, pc+80 (addr 0x0000ffff9149fd08)    ;; code: STUB, CEntryStub, minor: 4
0xffff9149fcbc   540  blr x16
0xffff9149fcc0   544  add x11, x0, #0x5f (95)
0xffff9149fcc4   548  ldr x1, [jssp, #16]
0xffff9149fcc8   552  ldp lr, x0, [jssp], #24
0xffff9149fccc   556  mov jssp, fp
0xffff9149fcd0   560  ldp fp, lr, [jssp], #16
0xffff9149fcd4   564  br x11
0xffff9149fcd8   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9149fcdc   572  d63f03e0       constant
0xffff9149fce0   576  9149fa41       constant
0xffff9149fce4   580  0000ffff       constant
0xffff9149fce8   584  00e50928       constant
0xffff9149fcec   588  00000000       constant
0xffff9149fcf0   592  91406060       constant
0xffff9149fcf4   596  0000ffff       constant
0xffff9149fcf8   600  9149fa41       constant
0xffff9149fcfc   604  0000ffff       constant
0xffff9149fd00   608  00c8a980       constant
0xffff9149fd04   612  00000000       constant
0xffff9149fd08   616  91406060       constant
0xffff9149fd0c   620  0000ffff       constant


RelocInfo (size = 16)
0xffff9149fc34  embedded object  (0xffff9149fa41 <Code: COMPARE_IC>)
0xffff9149fc50  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff9149fc54  code target (STUB)  (0xffff91406060)
0xffff9149fc84  embedded object  (0xffff9149fa41 <Code: COMPARE_IC>)
0xffff9149fcb4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff9149fcb8  code target (STUB)  (0xffff91406060)
0xffff9149fcd8  constant pool (size 56)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = NUMBER*SMI -> NUMBER
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 232)
0xffff9149fd80     0  tbnz w0, #0, #+0x58 (addr 0xffff9149fdd8)
0xffff9149fd84     4  scvtf d0, x0, #32
0xffff9149fd88     8  scvtf d1, x1, #32
0xffff9149fd8c    12  tbz w0, #0, #+0x18 (addr 0xffff9149fda4)
0xffff9149fd90    16  ldur x16, [x0, #-1]
0xffff9149fd94    20  ldr x17, [x26, #120]
0xffff9149fd98    24  cmp x16, x17
0xffff9149fd9c    28  b.ne #+0x3c (addr 0xffff9149fdd8)
0xffff9149fda0    32  ldur d0, [x0, #7]
0xffff9149fda4    36  tbz w1, #0, #+0x18 (addr 0xffff9149fdbc)
0xffff9149fda8    40  ldur x16, [x1, #-1]
0xffff9149fdac    44  ldr x17, [x26, #120]
0xffff9149fdb0    48  cmp x16, x17
0xffff9149fdb4    52  b.ne #+0x24 (addr 0xffff9149fdd8)
0xffff9149fdb8    56  ldur d1, [x1, #7]
0xffff9149fdbc    60  fcmp d1, d0
0xffff9149fdc0    64  b.vs #+0x10 (addr 0xffff9149fdd0)
0xffff9149fdc4    68  cset x0, gt
0xffff9149fdc8    72  csinv x0, x0, xzr, ge
0xffff9149fdcc    76  ret
0xffff9149fdd0    80  ldr x16, pc+120 (addr 0x0000ffff9149fe48)    ;; code: COMPARE_IC, GENERIC
0xffff9149fdd4    84  br x16
0xffff9149fdd8    88  movz x16, #0xc00000000
0xffff9149fddc    92  sub csp, jssp, #0x10 (16)
0xffff9149fde0    96  stp fp, lr, [jssp, #-16]!
0xffff9149fde4   100  sub csp, jssp, #0x10 (16)
0xffff9149fde8   104  str x16, [jssp, #-8]!
0xffff9149fdec   108  ldr x17, pc+100 (addr 0x0000ffff9149fe50)    ;; object: 0xffff9149fd21 <Code: COMPARE_IC>
0xffff9149fdf0   112  sub csp, jssp, #0x10 (16)
0xffff9149fdf4   116  str x17, [jssp, #-8]!
0xffff9149fdf8   120  add fp, jssp, #0x10 (16)
0xffff9149fdfc   124  sub csp, jssp, #0x18 (24)
0xffff9149fe00   128  stp lr, x0, [jssp, #-24]!
0xffff9149fe04   132  str x1, [jssp, #16]
0xffff9149fe08   136  movz x10, #0x2f00000000
0xffff9149fe0c   140  sub csp, jssp, #0x18 (24)
0xffff9149fe10   144  stp x10, x0, [jssp, #-24]!
0xffff9149fe14   148  str x1, [jssp, #16]
0xffff9149fe18   152  movz x0, #0x3
0xffff9149fe1c   156  ldr x1, pc+60 (addr 0x0000ffff9149fe58)    ;; external reference (Runtime::CompareIC_Miss)
0xffff9149fe20   160  ldr x16, pc+64 (addr 0x0000ffff9149fe60)    ;; code: STUB, CEntryStub, minor: 4
0xffff9149fe24   164  blr x16
0xffff9149fe28   168  add x11, x0, #0x5f (95)
0xffff9149fe2c   172  ldr x1, [jssp, #16]
0xffff9149fe30   176  ldp lr, x0, [jssp], #24
0xffff9149fe34   180  mov jssp, fp
0xffff9149fe38   184  ldp fp, lr, [jssp], #16
0xffff9149fe3c   188  br x11
0xffff9149fe40   192  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff9149fe44   196  d63f03e0       constant
0xffff9149fe48   200  9149faa0       constant
0xffff9149fe4c   204  0000ffff       constant
0xffff9149fe50   208  9149fd21       constant
0xffff9149fe54   212  0000ffff       constant
0xffff9149fe58   216  00c8a980       constant
0xffff9149fe5c   220  00000000       constant
0xffff9149fe60   224  91406060       constant
0xffff9149fe64   228  0000ffff       constant


RelocInfo (size = 13)
0xffff9149fdd0  code target (COMPARE_IC)  (0xffff9149faa0)
0xffff9149fdec  embedded object  (0xffff9149fd21 <Code: COMPARE_IC>)
0xffff9149fe1c  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff9149fe20  code target (STUB)  (0xffff91406060)
0xffff9149fe40  constant pool (size 40)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ToIntegerStub
compiler = turbofan
Instructions (size = 386)
0xffff914a28a0     0  and x1, x0, #0x1
0xffff914a28a4     4  cmp x1, #0x0 (0)
0xffff914a28a8     8  b.eq #+0x90 (addr 0xffff914a2938)
0xffff914a28ac    12  ldur x1, [x0, #-1]
0xffff914a28b0    16  ldr x2, [x26, #120]
0xffff914a28b4    20  cmp x1, x2
0xffff914a28b8    24  b.ne #+0x84 (addr 0xffff914a293c)
0xffff914a28bc    28  ldur d0, [x0, #7]
0xffff914a28c0    32  fcmp d0, d0
0xffff914a28c4    36  b.ne #+0xb4 (addr 0xffff914a2978)
0xffff914a28c8    40  frintz d0, d0
0xffff914a28cc    44  fcvtzs w0, d0
0xffff914a28d0    48  scvtf d1, w0
0xffff914a28d4    52  fcmp d0, d1
0xffff914a28d8    56  b.ne #+0x24 (addr 0xffff914a28fc)
0xffff914a28dc    60  fcmp d0, #0.0
0xffff914a28e0    64  b.ne #+0x14 (addr 0xffff914a28f4)
0xffff914a28e4    68  fmov x1, d0
0xffff914a28e8    72  lsr x1, x1, #32
0xffff914a28ec    76  cmp w1, #0x0 (0)
0xffff914a28f0    80  b.lt #+0xc (addr 0xffff914a28fc)
0xffff914a28f4    84  lsl x0, x0, #32
0xffff914a28f8    88  b #+0x40 (addr 0xffff914a2938)
0xffff914a28fc    92  movz x0, #0xf2c0
0xffff914a2900    96  movk x0, #0x4117, lsl #16
0xffff914a2904   100  ldr x1, [x0]
0xffff914a2908   104  movz x2, #0xf2c8
0xffff914a290c   108  movk x2, #0x4117, lsl #16
0xffff914a2910   112  ldr x2, [x2]
0xffff914a2914   116  sub x2, x2, x1
0xffff914a2918   120  cmp x2, #0x10 (16)
0xffff914a291c   124  b.lt #+0x64 (addr 0xffff914a2980)
0xffff914a2920   128  add x2, x1, #0x10 (16)
0xffff914a2924   132  str x2, [x0]
0xffff914a2928   136  add x0, x1, #0x1 (1)
0xffff914a292c   140  ldr x1, [x26, #120]
0xffff914a2930   144  stur x1, [x0, #-1]
0xffff914a2934   148  stur d0, [x0, #7]
0xffff914a2938   152  ret
0xffff914a293c   156  movz x16, #0xa00000000
0xffff914a2940   160  sub csp, jssp, #0x10 (16)
0xffff914a2944   164  stp fp, lr, [jssp, #-16]!
0xffff914a2948   168  mov fp, jssp
0xffff914a294c   172  sub csp, jssp, #0x20 (32)
0xffff914a2950   176  sub jssp, jssp, #0x20 (32)
0xffff914a2954   180  stur x16, [fp, #-8]
0xffff914a2958   184  mov x1, cp
0xffff914a295c   188  str cp, [jssp, #8]
0xffff914a2960   192  ldr x16, pc+144 (addr 0x0000ffff914a29f0)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff914a2964   196  blr x16
0xffff914a2968   200  ldr cp, [jssp, #8]
0xffff914a296c   204  mov jssp, fp
0xffff914a2970   208  ldp fp, lr, [jssp], #16
0xffff914a2974   212  b #-0xd4 (addr 0xffff914a28a0)
0xffff914a2978   216  movz x0, #0x0
0xffff914a297c   220  ret
0xffff914a2980   224  movz x16, #0xa00000000
0xffff914a2984   228  sub csp, jssp, #0x10 (16)
0xffff914a2988   232  stp fp, lr, [jssp, #-16]!
0xffff914a298c   236  mov fp, jssp
0xffff914a2990   240  sub csp, jssp, #0x20 (32)
0xffff914a2994   244  sub jssp, jssp, #0x20 (32)
0xffff914a2998   248  stur x16, [fp, #-8]
0xffff914a299c   252  movz x0, #0x0
0xffff914a29a0   256  lsl x0, x0, #32
0xffff914a29a4   260  movz x1, #0x10
0xffff914a29a8   264  lsl x1, x1, #32
0xffff914a29ac   268  sub csp, jssp, #0x10 (16)
0xffff914a29b0   272  sub jssp, jssp, #0x10 (16)
0xffff914a29b4   276  str x1, [jssp, #8]
0xffff914a29b8   280  str x0, [jssp]
0xffff914a29bc   284  str d0, [jssp, #32]
0xffff914a29c0   288  movz x1, #0x5b88
0xffff914a29c4   292  movk x1, #0xe2, lsl #16
0xffff914a29c8   296  movz x0, #0x2
0xffff914a29cc   300  movz cp, #0x0
0xffff914a29d0   304  ldr x16, pc+40 (addr 0x0000ffff914a29f8)    ;; code: STUB, CEntryStub, minor: 4
0xffff914a29d4   308  blr x16
0xffff914a29d8   312  ldr d0, [jssp, #16]
0xffff914a29dc   316  mov jssp, fp
0xffff914a29e0   320  ldp fp, lr, [jssp], #16
0xffff914a29e4   324  b #-0xb8 (addr 0xffff914a292c)
0xffff914a29e8   328  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914a29ec   332  d63f03e0       constant
0xffff914a29f0   336  91429d80       constant
0xffff914a29f4   340  0000ffff       constant
0xffff914a29f8   344  91406060       constant
0xffff914a29fc   348  0000ffff       constant


Safepoints (size = 34)
0xffff914a2968   200  010000 (sp -> fp)  <none>
0xffff914a29d8   312  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff914a2960  code target (STUB)  (0xffff91429d80)
0xffff914a29d0  code target (STUB)  (0xffff91406060)
0xffff914a29e8  constant pool (size 24)

--- End code ---
kind = STUB
major_key = ToIntegerStub
name = ToIntegerStub
compiler = turbofan
Instructions (size = 386)
0xffff914a28a0     0  and x1, x0, #0x1
0xffff914a28a4     4  cmp x1, #0x0 (0)
0xffff914a28a8     8  b.eq #+0x90 (addr 0xffff914a2938)
0xffff914a28ac    12  ldur x1, [x0, #-1]
0xffff914a28b0    16  ldr x2, [x26, #120]
0xffff914a28b4    20  cmp x1, x2
0xffff914a28b8    24  b.ne #+0x84 (addr 0xffff914a293c)
0xffff914a28bc    28  ldur d0, [x0, #7]
0xffff914a28c0    32  fcmp d0, d0
0xffff914a28c4    36  b.ne #+0xb4 (addr 0xffff914a2978)
0xffff914a28c8    40  frintz d0, d0
0xffff914a28cc    44  fcvtzs w0, d0
0xffff914a28d0    48  scvtf d1, w0
0xffff914a28d4    52  fcmp d0, d1
0xffff914a28d8    56  b.ne #+0x24 (addr 0xffff914a28fc)
0xffff914a28dc    60  fcmp d0, #0.0
0xffff914a28e0    64  b.ne #+0x14 (addr 0xffff914a28f4)
0xffff914a28e4    68  fmov x1, d0
0xffff914a28e8    72  lsr x1, x1, #32
0xffff914a28ec    76  cmp w1, #0x0 (0)
0xffff914a28f0    80  b.lt #+0xc (addr 0xffff914a28fc)
0xffff914a28f4    84  lsl x0, x0, #32
0xffff914a28f8    88  b #+0x40 (addr 0xffff914a2938)
0xffff914a28fc    92  movz x0, #0xf2c0
0xffff914a2900    96  movk x0, #0x4117, lsl #16
0xffff914a2904   100  ldr x1, [x0]
0xffff914a2908   104  movz x2, #0xf2c8
0xffff914a290c   108  movk x2, #0x4117, lsl #16
0xffff914a2910   112  ldr x2, [x2]
0xffff914a2914   116  sub x2, x2, x1
0xffff914a2918   120  cmp x2, #0x10 (16)
0xffff914a291c   124  b.lt #+0x64 (addr 0xffff914a2980)
0xffff914a2920   128  add x2, x1, #0x10 (16)
0xffff914a2924   132  str x2, [x0]
0xffff914a2928   136  add x0, x1, #0x1 (1)
0xffff914a292c   140  ldr x1, [x26, #120]
0xffff914a2930   144  stur x1, [x0, #-1]
0xffff914a2934   148  stur d0, [x0, #7]
0xffff914a2938   152  ret
0xffff914a293c   156  movz x16, #0xa00000000
0xffff914a2940   160  sub csp, jssp, #0x10 (16)
0xffff914a2944   164  stp fp, lr, [jssp, #-16]!
0xffff914a2948   168  mov fp, jssp
0xffff914a294c   172  sub csp, jssp, #0x20 (32)
0xffff914a2950   176  sub jssp, jssp, #0x20 (32)
0xffff914a2954   180  stur x16, [fp, #-8]
0xffff914a2958   184  mov x1, cp
0xffff914a295c   188  str cp, [jssp, #8]
0xffff914a2960   192  ldr x16, pc+144 (addr 0x0000ffff914a29f0)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff914a2964   196  blr x16
0xffff914a2968   200  ldr cp, [jssp, #8]
0xffff914a296c   204  mov jssp, fp
0xffff914a2970   208  ldp fp, lr, [jssp], #16
0xffff914a2974   212  b #-0xd4 (addr 0xffff914a28a0)
0xffff914a2978   216  movz x0, #0x0
0xffff914a297c   220  ret
0xffff914a2980   224  movz x16, #0xa00000000
0xffff914a2984   228  sub csp, jssp, #0x10 (16)
0xffff914a2988   232  stp fp, lr, [jssp, #-16]!
0xffff914a298c   236  mov fp, jssp
0xffff914a2990   240  sub csp, jssp, #0x20 (32)
0xffff914a2994   244  sub jssp, jssp, #0x20 (32)
0xffff914a2998   248  stur x16, [fp, #-8]
0xffff914a299c   252  movz x0, #0x0
0xffff914a29a0   256  lsl x0, x0, #32
0xffff914a29a4   260  movz x1, #0x10
0xffff914a29a8   264  lsl x1, x1, #32
0xffff914a29ac   268  sub csp, jssp, #0x10 (16)
0xffff914a29b0   272  sub jssp, jssp, #0x10 (16)
0xffff914a29b4   276  str x1, [jssp, #8]
0xffff914a29b8   280  str x0, [jssp]
0xffff914a29bc   284  str d0, [jssp, #32]
0xffff914a29c0   288  movz x1, #0x5b88
0xffff914a29c4   292  movk x1, #0xe2, lsl #16
0xffff914a29c8   296  movz x0, #0x2
0xffff914a29cc   300  movz cp, #0x0
0xffff914a29d0   304  ldr x16, pc+40 (addr 0x0000ffff914a29f8)    ;; code: STUB, CEntryStub, minor: 4
0xffff914a29d4   308  blr x16
0xffff914a29d8   312  ldr d0, [jssp, #16]
0xffff914a29dc   316  mov jssp, fp
0xffff914a29e0   320  ldp fp, lr, [jssp], #16
0xffff914a29e4   324  b #-0xb8 (addr 0xffff914a292c)
0xffff914a29e8   328  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914a29ec   332  d63f03e0       constant
0xffff914a29f0   336  91429d80       constant
0xffff914a29f4   340  0000ffff       constant
0xffff914a29f8   344  91406060       constant
0xffff914a29fc   348  0000ffff       constant


Safepoints (size = 34)
0xffff914a2968   200  010000 (sp -> fp)  <none>
0xffff914a29d8   312  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff914a2960  code target (STUB)  (0xffff91429d80)
0xffff914a29d0  code target (STUB)  (0xffff91406060)
0xffff914a29e8  constant pool (size 24)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = RECEIVER*RECEIVER -> KNOWN_RECEIVER
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 192)
0xffff914a3fe0     0  and x16, x0, x1
0xffff914a3fe4     4  tbz w16, #0, #+0x2c (addr 0xffff914a4010)
0xffff914a3fe8     8  ldr x12, pc+152 (addr 0x0000ffff914a4080)    ;; object: 0x49bf2f21 WeakCell for 0x36406671 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914a3fec    12  ldur x12, [x12, #7]
0xffff914a3ff0    16  ldur x10, [x0, #-1]
0xffff914a3ff4    20  ldur x11, [x1, #-1]
0xffff914a3ff8    24  cmp x10, x12
0xffff914a3ffc    28  b.ne #+0x14 (addr 0xffff914a4010)
0xffff914a4000    32  cmp x11, x12
0xffff914a4004    36  b.ne #+0xc (addr 0xffff914a4010)
0xffff914a4008    40  sub x0, x0, x1
0xffff914a400c    44  ret
0xffff914a4010    48  movz x16, #0xc00000000
0xffff914a4014    52  sub csp, jssp, #0x10 (16)
0xffff914a4018    56  stp fp, lr, [jssp, #-16]!
0xffff914a401c    60  sub csp, jssp, #0x10 (16)
0xffff914a4020    64  str x16, [jssp, #-8]!
0xffff914a4024    68  ldr x17, pc+100 (addr 0x0000ffff914a4088)    ;; object: 0xffff914a3f81 <Code: COMPARE_IC>
0xffff914a4028    72  sub csp, jssp, #0x10 (16)
0xffff914a402c    76  str x17, [jssp, #-8]!
0xffff914a4030    80  add fp, jssp, #0x10 (16)
0xffff914a4034    84  sub csp, jssp, #0x18 (24)
0xffff914a4038    88  stp lr, x0, [jssp, #-24]!
0xffff914a403c    92  str x1, [jssp, #16]
0xffff914a4040    96  movz x10, #0x2f00000000
0xffff914a4044   100  sub csp, jssp, #0x18 (24)
0xffff914a4048   104  stp x10, x0, [jssp, #-24]!
0xffff914a404c   108  str x1, [jssp, #16]
0xffff914a4050   112  movz x0, #0x3
0xffff914a4054   116  ldr x1, pc+60 (addr 0x0000ffff914a4090)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914a4058   120  ldr x16, pc+64 (addr 0x0000ffff914a4098)    ;; code: STUB, CEntryStub, minor: 4
0xffff914a405c   124  blr x16
0xffff914a4060   128  add x11, x0, #0x5f (95)
0xffff914a4064   132  ldr x1, [jssp, #16]
0xffff914a4068   136  ldp lr, x0, [jssp], #24
0xffff914a406c   140  mov jssp, fp
0xffff914a4070   144  ldp fp, lr, [jssp], #16
0xffff914a4074   148  br x11
0xffff914a4078   152  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914a407c   156  d63f03e0       constant
0xffff914a4080   160  49bf2f21       constant
0xffff914a4084   164  00000000       constant
0xffff914a4088   168  914a3f81       constant
0xffff914a408c   172  0000ffff       constant
0xffff914a4090   176  00c8a980       constant
0xffff914a4094   180  00000000       constant
0xffff914a4098   184  91406060       constant
0xffff914a409c   188  0000ffff       constant


RelocInfo (size = 11)
0xffff914a3fe8  embedded object  (0x49bf2f21 WeakCell for 0x36406671 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914a4024  embedded object  (0xffff914a3f81 <Code: COMPARE_IC>)
0xffff914a4054  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914a4058  code target (STUB)  (0xffff91406060)
0xffff914a4078  constant pool (size 40)


kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 120)
0xffff914a4900     0  sub csp, jssp, #0x8 (8)
0xffff914a4904     4  str x3, [jssp, #-8]!
0xffff914a4908     8  sub csp, jssp, #0x8 (8)
0xffff914a490c    12  str x0, [jssp, #-8]!
0xffff914a4910    16  ldr x0, pc+72 (addr 0x0000ffff914a4958)    ;; object: 0x49bed491 Cell for 0
0xffff914a4914    20  ldur x0, [x0, #7]
0xffff914a4918    24  cmp x0, #0x0 (0)
0xffff914a491c    28  b.ne #+0x14 (addr 0xffff914a4930)
0xffff914a4920    32  ldr x3, pc+64 (addr 0x0000ffff914a4960)    ;; object: 0x49bf3289 WeakCell for 0x26a5ea99 <an Object with map 0x364164d1>
0xffff914a4924    36  ldur x3, [x3, #7]
0xffff914a4928    40  tbz w3, #0, #+0x8 (addr 0xffff914a4930)
0xffff914a492c    44  b #+0x14 (addr 0xffff914a4940)
0xffff914a4930    48  ldr x0, [jssp], #8
0xffff914a4934    52  ldr x3, [jssp], #8
0xffff914a4938    56  ldr x16, pc+48 (addr 0x0000ffff914a4968)    ;; code: BUILTIN
0xffff914a493c    60  br x16
0xffff914a4940    64  add jssp, jssp, #0x10 (16)
0xffff914a4944    68  mov x1, x3
0xffff914a4948    72  ldr x16, pc+40 (addr 0x0000ffff914a4970)    ;; code: HANDLER, LoadFieldStub, minor: 4
0xffff914a494c    76  br x16
0xffff914a4950    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914a4954    84  d63f03e0       constant
0xffff914a4958    88  49bed491       constant
0xffff914a495c    92  00000000       constant
0xffff914a4960    96  49bf3289       constant
0xffff914a4964   100  00000000       constant
0xffff914a4968   104  914222e0       constant
0xffff914a496c   108  0000ffff       constant
0xffff914a4970   112  9146c360       constant
0xffff914a4974   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914a4910  embedded object  (0x49bed491 Cell for 0)
0xffff914a4920  embedded object  (0x49bf3289 WeakCell for 0x26a5ea99 <an Object with map 0x364164d1>)
0xffff914a4938  code target (BUILTIN)  (0xffff914222e0)
0xffff914a4948  code target (HANDLER)  (0xffff9146c360)
0xffff914a4950  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff914a49e0     0  ldur x0, [x1, #15]
0xffff914a49e4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff914a49e0     0  ldur x0, [x1, #15]
0xffff914a49e4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = global
compiler = unknown
Instructions (size = 216)
0xffff914a4a60     0  sub csp, jssp, #0x8 (8)
0xffff914a4a64     4  str x3, [jssp, #-8]!
0xffff914a4a68     8  sub csp, jssp, #0x8 (8)
0xffff914a4a6c    12  str x0, [jssp, #-8]!
0xffff914a4a70    16  ldr x0, pc+160 (addr 0x0000ffff914a4b10)    ;; object: 0x49bed491 Cell for 0
0xffff914a4a74    20  ldur x0, [x0, #7]
0xffff914a4a78    24  cmp x0, #0x0 (0)
0xffff914a4a7c    28  b.ne #+0x14 (addr 0xffff914a4a90)
0xffff914a4a80    32  ldr x3, pc+152 (addr 0x0000ffff914a4b18)    ;; object: 0x49bf32e9 WeakCell for 0x26a5ea99 <an Object with map 0x364164d1>
0xffff914a4a84    36  ldur x3, [x3, #7]
0xffff914a4a88    40  tbz w3, #0, #+0x8 (addr 0xffff914a4a90)
0xffff914a4a8c    44  b #+0x14 (addr 0xffff914a4aa0)
0xffff914a4a90    48  ldr x0, [jssp], #8
0xffff914a4a94    52  ldr x3, [jssp], #8
0xffff914a4a98    56  ldr x16, pc+136 (addr 0x0000ffff914a4b20)    ;; code: BUILTIN
0xffff914a4a9c    60  br x16
0xffff914a4aa0    64  add jssp, jssp, #0x10 (16)
0xffff914a4aa4    68  movz x16, #0xc00000000
0xffff914a4aa8    72  sub csp, jssp, #0x10 (16)
0xffff914a4aac    76  stp fp, lr, [jssp, #-16]!
0xffff914a4ab0    80  sub csp, jssp, #0x10 (16)
0xffff914a4ab4    84  str x16, [jssp, #-8]!
0xffff914a4ab8    88  ldr x17, pc+112 (addr 0x0000ffff914a4b28)    ;; object: 0xffff914a4a01 <Code: HANDLER>
0xffff914a4abc    92  sub csp, jssp, #0x10 (16)
0xffff914a4ac0    96  str x17, [jssp, #-8]!
0xffff914a4ac4   100  add fp, jssp, #0x10 (16)
0xffff914a4ac8   104  sub csp, jssp, #0x8 (8)
0xffff914a4acc   108  str cp, [jssp, #-8]!
0xffff914a4ad0   112  sub csp, jssp, #0x8 (8)
0xffff914a4ad4   116  str x1, [jssp, #-8]!
0xffff914a4ad8   120  ldur x1, [x3, #-1]
0xffff914a4adc   124  ldur x1, [x1, #47]
0xffff914a4ae0   128  movz x16, #0x11f
0xffff914a4ae4   132  ldr x1, [x1, x16]
0xffff914a4ae8   136  ldur x1, [x1, #7]
0xffff914a4aec   140  movz x0, #0x0
0xffff914a4af0   144  ldr x16, pc+64 (addr 0x0000ffff914a4b30)    ;; code: BUILTIN
0xffff914a4af4   148  blr x16
0xffff914a4af8   152  ldr cp, [jssp], #8
0xffff914a4afc   156  mov jssp, fp
0xffff914a4b00   160  ldp fp, lr, [jssp], #16
0xffff914a4b04   164  ret
0xffff914a4b08   168  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff914a4b0c   172  d63f03e0       constant
0xffff914a4b10   176  49bed491       constant
0xffff914a4b14   180  00000000       constant
0xffff914a4b18   184  49bf32e9       constant
0xffff914a4b1c   188  00000000       constant
0xffff914a4b20   192  914222e0       constant
0xffff914a4b24   196  0000ffff       constant
0xffff914a4b28   200  914a4a01       constant
0xffff914a4b2c   204  0000ffff       constant
0xffff914a4b30   208  9141e600       constant
0xffff914a4b34   212  0000ffff       constant


RelocInfo (size = 11)
0xffff914a4a70  embedded object  (0x49bed491 Cell for 0)
0xffff914a4a80  embedded object  (0x49bf32e9 WeakCell for 0x26a5ea99 <an Object with map 0x364164d1>)
0xffff914a4a98  code target (BUILTIN)  (0xffff914222e0)
0xffff914a4ab8  embedded object  (0xffff914a4a01 <Code: HANDLER>)
0xffff914a4af0  code target (BUILTIN)  (0xffff9141e600)
0xffff914a4b08  constant pool (size 48)

kind = HANDLER
major_key = <NoCache>Stub
name = unicode
compiler = unknown
Instructions (size = 216)
0xffff914a4ba0     0  sub csp, jssp, #0x8 (8)
0xffff914a4ba4     4  str x3, [jssp, #-8]!
0xffff914a4ba8     8  sub csp, jssp, #0x8 (8)
0xffff914a4bac    12  str x0, [jssp, #-8]!
0xffff914a4bb0    16  ldr x0, pc+160 (addr 0x0000ffff914a4c50)    ;; object: 0x49bed491 Cell for 0
0xffff914a4bb4    20  ldur x0, [x0, #7]
0xffff914a4bb8    24  cmp x0, #0x0 (0)
0xffff914a4bbc    28  b.ne #+0x14 (addr 0xffff914a4bd0)
0xffff914a4bc0    32  ldr x3, pc+152 (addr 0x0000ffff914a4c58)    ;; object: 0x49bf3321 WeakCell for 0x26a5ea99 <an Object with map 0x364164d1>
0xffff914a4bc4    36  ldur x3, [x3, #7]
0xffff914a4bc8    40  tbz w3, #0, #+0x8 (addr 0xffff914a4bd0)
0xffff914a4bcc    44  b #+0x14 (addr 0xffff914a4be0)
0xffff914a4bd0    48  ldr x0, [jssp], #8
0xffff914a4bd4    52  ldr x3, [jssp], #8
0xffff914a4bd8    56  ldr x16, pc+136 (addr 0x0000ffff914a4c60)    ;; code: BUILTIN
0xffff914a4bdc    60  br x16
0xffff914a4be0    64  add jssp, jssp, #0x10 (16)
0xffff914a4be4    68  movz x16, #0xc00000000
0xffff914a4be8    72  sub csp, jssp, #0x10 (16)
0xffff914a4bec    76  stp fp, lr, [jssp, #-16]!
0xffff914a4bf0    80  sub csp, jssp, #0x10 (16)
0xffff914a4bf4    84  str x16, [jssp, #-8]!
0xffff914a4bf8    88  ldr x17, pc+112 (addr 0x0000ffff914a4c68)    ;; object: 0xffff914a4b41 <Code: HANDLER>
0xffff914a4bfc    92  sub csp, jssp, #0x10 (16)
0xffff914a4c00    96  str x17, [jssp, #-8]!
0xffff914a4c04   100  add fp, jssp, #0x10 (16)
0xffff914a4c08   104  sub csp, jssp, #0x8 (8)
0xffff914a4c0c   108  str cp, [jssp, #-8]!
0xffff914a4c10   112  sub csp, jssp, #0x8 (8)
0xffff914a4c14   116  str x1, [jssp, #-8]!
0xffff914a4c18   120  ldur x1, [x3, #-1]
0xffff914a4c1c   124  ldur x1, [x1, #47]
0xffff914a4c20   128  movz x16, #0x197
0xffff914a4c24   132  ldr x1, [x1, x16]
0xffff914a4c28   136  ldur x1, [x1, #7]
0xffff914a4c2c   140  movz x0, #0x0
0xffff914a4c30   144  ldr x16, pc+64 (addr 0x0000ffff914a4c70)    ;; code: BUILTIN
0xffff914a4c34   148  blr x16
0xffff914a4c38   152  ldr cp, [jssp], #8
0xffff914a4c3c   156  mov jssp, fp
0xffff914a4c40   160  ldp fp, lr, [jssp], #16
0xffff914a4c44   164  ret
0xffff914a4c48   168  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff914a4c4c   172  d63f03e0       constant
0xffff914a4c50   176  49bed491       constant
0xffff914a4c54   180  00000000       constant
0xffff914a4c58   184  49bf3321       constant
0xffff914a4c5c   188  00000000       constant
0xffff914a4c60   192  914222e0       constant
0xffff914a4c64   196  0000ffff       constant
0xffff914a4c68   200  914a4b41       constant
0xffff914a4c6c   204  0000ffff       constant
0xffff914a4c70   208  9141e600       constant
0xffff914a4c74   212  0000ffff       constant


RelocInfo (size = 11)
0xffff914a4bb0  embedded object  (0x49bed491 Cell for 0)
0xffff914a4bc0  embedded object  (0x49bf3321 WeakCell for 0x26a5ea99 <an Object with map 0x364164d1>)
0xffff914a4bd8  code target (BUILTIN)  (0xffff914222e0)
0xffff914a4bf8  embedded object  (0xffff914a4b41 <Code: HANDLER>)
0xffff914a4c30  code target (BUILTIN)  (0xffff9141e600)
0xffff914a4c48  constant pool (size 48)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = RECEIVER*INTERNALIZED_STRING -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff914a5900     0  orr x16, x1, x0
0xffff914a5904     4  tbnz w16, #0, #+0x10 (addr 0xffff914a5914)
0xffff914a5908     8  asr x1, x1, #32
0xffff914a590c    12  sub x0, x1, x0, asr #32
0xffff914a5910    16  ret
0xffff914a5914    20  cmp x0, x1
0xffff914a5918    24  b.ne #+0x30 (addr 0xffff914a5948)
0xffff914a591c    28  ldur x16, [x0, #-1]
0xffff914a5920    32  ldr x17, [x26, #120]
0xffff914a5924    36  cmp x16, x17
0xffff914a5928    40  b.eq #+0xc (addr 0xffff914a5934)
0xffff914a592c    44  movz x0, #0x0
0xffff914a5930    48  ret
0xffff914a5934    52  ldur d0, [x0, #7]
0xffff914a5938    56  fcmp d0, d0
0xffff914a593c    60  b.vc #-0x10 (addr 0xffff914a592c)
0xffff914a5940    64  movn x0, #0x0
0xffff914a5944    68  ret
0xffff914a5948    72  and x16, x1, x0
0xffff914a594c    76  tbnz w16, #0, #+0x64 (addr 0xffff914a59b0)
0xffff914a5950    80  tbz w0, #0, #+0x24 (addr 0xffff914a5974)
0xffff914a5954    84  ldur x16, [x0, #-1]
0xffff914a5958    88  ldr x17, [x26, #120]
0xffff914a595c    92  cmp x16, x17
0xffff914a5960    96  b.eq #+0x8 (addr 0xffff914a5968)
0xffff914a5964   100  ret
0xffff914a5968   104  ldur d0, [x0, #7]
0xffff914a596c   108  scvtf d1, x1, #32
0xffff914a5970   112  b #+0x24 (addr 0xffff914a5994)
0xffff914a5974   116  ldur x16, [x1, #-1]
0xffff914a5978   120  ldr x17, [x26, #120]
0xffff914a597c   124  cmp x16, x17
0xffff914a5980   128  b.eq #+0xc (addr 0xffff914a598c)
0xffff914a5984   132  movz x0, #0x1
0xffff914a5988   136  ret
0xffff914a598c   140  ldur d1, [x1, #7]
0xffff914a5990   144  scvtf d0, x0, #32
0xffff914a5994   148  fcmp d1, d0
0xffff914a5998   152  b.vs #+0x10 (addr 0xffff914a59a8)
0xffff914a599c   156  cset x0, gt
0xffff914a59a0   160  csinv x0, x0, xzr, ge
0xffff914a59a4   164  ret
0xffff914a59a8   168  movn x0, #0x0
0xffff914a59ac   172  ret
0xffff914a59b0   176  ldur x10, [x0, #-1]
0xffff914a59b4   180  ldur x12, [x1, #-1]
0xffff914a59b8   184  ldrb w11, [x10, #11]
0xffff914a59bc   188  ldrb w13, [x12, #11]
0xffff914a59c0   192  cmp x11, #0xb1 (177)
0xffff914a59c4   196  b.lt #+0x8 (addr 0xffff914a59cc)
0xffff914a59c8   200  ret
0xffff914a59cc   204  cmp x11, #0x83 (131)
0xffff914a59d0   208  movz x16, #0x83
0xffff914a59d4   212  ccmp x13, x16, #nZcv, ne
0xffff914a59d8   216  movz x16, #0xb1
0xffff914a59dc   220  ccmp x13, x16, #NzcV, ne
0xffff914a59e0   224  b.ge #-0x18 (addr 0xffff914a59c8)
0xffff914a59e4   228  orr x14, x13, x11
0xffff914a59e8   232  tst x14, #0xc0
0xffff914a59ec   236  b.eq #-0x24 (addr 0xffff914a59c8)
0xffff914a59f0   240  cmp x11, #0x81 (129)
0xffff914a59f4   244  b.ne #+0x18 (addr 0xffff914a5a0c)
0xffff914a59f8   248  cmp x12, x10
0xffff914a59fc   252  b.ne #+0x10 (addr 0xffff914a5a0c)
0xffff914a5a00   256  ldur d1, [x1, #7]
0xffff914a5a04   260  ldur d0, [x0, #7]
0xffff914a5a08   264  b #-0x74 (addr 0xffff914a5994)
0xffff914a5a0c   268  movz x16, #0x87
0xffff914a5a10   272  and x14, x13, x16
0xffff914a5a14   276  movz x16, #0x87
0xffff914a5a18   280  and x15, x11, x16
0xffff914a5a1c   284  cmp x14, #0x4 (4)
0xffff914a5a20   288  ccmp x15, #4, #nzcv, eq
0xffff914a5a24   292  b.ne #+0x5c (addr 0xffff914a5a80)
0xffff914a5a28   296  ldur x10, [x1, #15]
0xffff914a5a2c   300  ldur x11, [x0, #15]
0xffff914a5a30   304  cmp x10, x11
0xffff914a5a34   308  b.eq #+0xc (addr 0xffff914a5a40)
0xffff914a5a38   312  movz x0, #0x100000000
0xffff914a5a3c   316  ret
0xffff914a5a40   320  cbnz x10, #+0xc (addr 0xffff914a5a4c)
0xffff914a5a44   324  movz x0, #0x0
0xffff914a5a48   328  ret
0xffff914a5a4c   332  asr x10, x10, #32
0xffff914a5a50   336  add x11, x10, #0x17 (23)
0xffff914a5a54   340  add x1, x1, x11
0xffff914a5a58   344  add x0, x0, x11
0xffff914a5a5c   348  neg x10, x10
0xffff914a5a60   352  ldrb w11, [x1, x10]
0xffff914a5a64   356  ldrb w12, [x0, x10]
0xffff914a5a68   360  cmp x11, x12
0xffff914a5a6c   364  b.ne #-0x34 (addr 0xffff914a5a38)
0xffff914a5a70   368  add x10, x10, #0x1 (1)
0xffff914a5a74   372  cbnz x10, #-0x14 (addr 0xffff914a5a60)
0xffff914a5a78   376  movz x0, #0x0
0xffff914a5a7c   380  ret
0xffff914a5a80   384  movz x16, #0xc00000000
0xffff914a5a84   388  sub csp, jssp, #0x10 (16)
0xffff914a5a88   392  stp fp, lr, [jssp, #-16]!
0xffff914a5a8c   396  sub csp, jssp, #0x10 (16)
0xffff914a5a90   400  str x16, [jssp, #-8]!
0xffff914a5a94   404  ldr x17, pc+172 (addr 0x0000ffff914a5b40)    ;; object: 0xffff914a58a1 <Code: COMPARE_IC>
0xffff914a5a98   408  sub csp, jssp, #0x10 (16)
0xffff914a5a9c   412  str x17, [jssp, #-8]!
0xffff914a5aa0   416  add fp, jssp, #0x10 (16)
0xffff914a5aa4   420  sub csp, jssp, #0x10 (16)
0xffff914a5aa8   424  stp x0, x1, [jssp, #-16]!
0xffff914a5aac   428  movz x0, #0x2
0xffff914a5ab0   432  ldr x1, pc+152 (addr 0x0000ffff914a5b48)    ;; external reference (Runtime::StrictEqual)
0xffff914a5ab4   436  ldr x16, pc+156 (addr 0x0000ffff914a5b50)    ;; code: STUB, CEntryStub, minor: 4
0xffff914a5ab8   440  blr x16
0xffff914a5abc   444  mov jssp, fp
0xffff914a5ac0   448  ldp fp, lr, [jssp], #16
0xffff914a5ac4   452  ldr x1, [x26, #64]
0xffff914a5ac8   456  sub x0, x0, x1
0xffff914a5acc   460  ret
0xffff914a5ad0   464  movz x16, #0xc00000000
0xffff914a5ad4   468  sub csp, jssp, #0x10 (16)
0xffff914a5ad8   472  stp fp, lr, [jssp, #-16]!
0xffff914a5adc   476  sub csp, jssp, #0x10 (16)
0xffff914a5ae0   480  str x16, [jssp, #-8]!
0xffff914a5ae4   484  ldr x17, pc+116 (addr 0x0000ffff914a5b58)    ;; object: 0xffff914a58a1 <Code: COMPARE_IC>
0xffff914a5ae8   488  sub csp, jssp, #0x10 (16)
0xffff914a5aec   492  str x17, [jssp, #-8]!
0xffff914a5af0   496  add fp, jssp, #0x10 (16)
0xffff914a5af4   500  sub csp, jssp, #0x18 (24)
0xffff914a5af8   504  stp lr, x0, [jssp, #-24]!
0xffff914a5afc   508  str x1, [jssp, #16]
0xffff914a5b00   512  movz x10, #0x2f00000000
0xffff914a5b04   516  sub csp, jssp, #0x18 (24)
0xffff914a5b08   520  stp x10, x0, [jssp, #-24]!
0xffff914a5b0c   524  str x1, [jssp, #16]
0xffff914a5b10   528  movz x0, #0x3
0xffff914a5b14   532  ldr x1, pc+76 (addr 0x0000ffff914a5b60)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914a5b18   536  ldr x16, pc+80 (addr 0x0000ffff914a5b68)    ;; code: STUB, CEntryStub, minor: 4
0xffff914a5b1c   540  blr x16
0xffff914a5b20   544  add x11, x0, #0x5f (95)
0xffff914a5b24   548  ldr x1, [jssp, #16]
0xffff914a5b28   552  ldp lr, x0, [jssp], #24
0xffff914a5b2c   556  mov jssp, fp
0xffff914a5b30   560  ldp fp, lr, [jssp], #16
0xffff914a5b34   564  br x11
0xffff914a5b38   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914a5b3c   572  d63f03e0       constant
0xffff914a5b40   576  914a58a1       constant
0xffff914a5b44   580  0000ffff       constant
0xffff914a5b48   584  00e50928       constant
0xffff914a5b4c   588  00000000       constant
0xffff914a5b50   592  91406060       constant
0xffff914a5b54   596  0000ffff       constant
0xffff914a5b58   600  914a58a1       constant
0xffff914a5b5c   604  0000ffff       constant
0xffff914a5b60   608  00c8a980       constant
0xffff914a5b64   612  00000000       constant
0xffff914a5b68   616  91406060       constant
0xffff914a5b6c   620  0000ffff       constant


RelocInfo (size = 16)
0xffff914a5a94  embedded object  (0xffff914a58a1 <Code: COMPARE_IC>)
0xffff914a5ab0  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff914a5ab4  code target (STUB)  (0xffff91406060)
0xffff914a5ae4  embedded object  (0xffff914a58a1 <Code: COMPARE_IC>)
0xffff914a5b14  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914a5b18  code target (STUB)  (0xffff91406060)
0xffff914a5b38  constant pool (size 56)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a5de0     0  ldur x0, [x1, #7]
0xffff914a5de4     4  ldur x0, [x0, #71]
0xffff914a5de8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a5de0     0  ldur x0, [x1, #7]
0xffff914a5de4     4  ldur x0, [x0, #71]
0xffff914a5de8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a5e60     0  ldur x0, [x1, #7]
0xffff914a5e64     4  ldur x0, [x0, #79]
0xffff914a5e68     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a5e60     0  ldur x0, [x1, #7]
0xffff914a5e64     4  ldur x0, [x0, #79]
0xffff914a5e68     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a5ee0     0  ldur x0, [x1, #7]
0xffff914a5ee4     4  ldur x0, [x0, #87]
0xffff914a5ee8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a5ee0     0  ldur x0, [x1, #7]
0xffff914a5ee4     4  ldur x0, [x0, #87]
0xffff914a5ee8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a5f60     0  ldur x0, [x1, #7]
0xffff914a5f64     4  ldur x0, [x0, #95]
0xffff914a5f68     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a5f60     0  ldur x0, [x1, #7]
0xffff914a5f64     4  ldur x0, [x0, #95]
0xffff914a5f68     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a5fe0     0  ldur x0, [x1, #7]
0xffff914a5fe4     4  ldur x0, [x0, #103]
0xffff914a5fe8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a5fe0     0  ldur x0, [x1, #7]
0xffff914a5fe4     4  ldur x0, [x0, #103]
0xffff914a5fe8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a6060     0  ldur x0, [x1, #7]
0xffff914a6064     4  ldur x0, [x0, #111]
0xffff914a6068     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a6060     0  ldur x0, [x1, #7]
0xffff914a6064     4  ldur x0, [x0, #111]
0xffff914a6068     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a60e0     0  ldur x0, [x1, #7]
0xffff914a60e4     4  ldur x0, [x0, #159]
0xffff914a60e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a60e0     0  ldur x0, [x1, #7]
0xffff914a60e4     4  ldur x0, [x0, #159]
0xffff914a60e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a6160     0  ldur x0, [x1, #7]
0xffff914a6164     4  ldur x0, [x0, #175]
0xffff914a6168     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a6160     0  ldur x0, [x1, #7]
0xffff914a6164     4  ldur x0, [x0, #175]
0xffff914a6168     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a61e0     0  ldur x0, [x1, #7]
0xffff914a61e4     4  ldur x0, [x0, #183]
0xffff914a61e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a61e0     0  ldur x0, [x1, #7]
0xffff914a61e4     4  ldur x0, [x0, #183]
0xffff914a61e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a6260     0  ldur x0, [x1, #7]
0xffff914a6264     4  ldur x0, [x0, #207]
0xffff914a6268     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a6260     0  ldur x0, [x1, #7]
0xffff914a6264     4  ldur x0, [x0, #207]
0xffff914a6268     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a62e0     0  ldur x0, [x1, #7]
0xffff914a62e4     4  ldur x0, [x0, #215]
0xffff914a62e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a62e0     0  ldur x0, [x1, #7]
0xffff914a62e4     4  ldur x0, [x0, #215]
0xffff914a62e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a6360     0  ldur x0, [x1, #7]
0xffff914a6364     4  ldur x0, [x0, #223]
0xffff914a6368     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a6360     0  ldur x0, [x1, #7]
0xffff914a6364     4  ldur x0, [x0, #223]
0xffff914a6368     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a63e0     0  ldur x0, [x1, #7]
0xffff914a63e4     4  ldur x0, [x0, #231]
0xffff914a63e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a63e0     0  ldur x0, [x1, #7]
0xffff914a63e4     4  ldur x0, [x0, #231]
0xffff914a63e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a6460     0  ldur x0, [x1, #7]
0xffff914a6464     4  ldur x0, [x0, #239]
0xffff914a6468     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a6460     0  ldur x0, [x1, #7]
0xffff914a6464     4  ldur x0, [x0, #239]
0xffff914a6468     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a64e0     0  ldur x0, [x1, #7]
0xffff914a64e4     4  ldur x0, [x0, #247]
0xffff914a64e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a64e0     0  ldur x0, [x1, #7]
0xffff914a64e4     4  ldur x0, [x0, #247]
0xffff914a64e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a6560     0  ldur x0, [x1, #7]
0xffff914a6564     4  ldur x0, [x0, #255]
0xffff914a6568     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff914a6560     0  ldur x0, [x1, #7]
0xffff914a6564     4  ldur x0, [x0, #255]
0xffff914a6568     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914a65e0     0  ldur x0, [x1, #7]
0xffff914a65e4     4  movz x16, #0x107
0xffff914a65e8     8  ldr x0, [x0, x16]
0xffff914a65ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914a65e0     0  ldur x0, [x1, #7]
0xffff914a65e4     4  movz x16, #0x107
0xffff914a65e8     8  ldr x0, [x0, x16]
0xffff914a65ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914a6660     0  ldur x0, [x1, #7]
0xffff914a6664     4  movz x16, #0x117
0xffff914a6668     8  ldr x0, [x0, x16]
0xffff914a666c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914a6660     0  ldur x0, [x1, #7]
0xffff914a6664     4  movz x16, #0x117
0xffff914a6668     8  ldr x0, [x0, x16]
0xffff914a666c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914a66e0     0  ldur x0, [x1, #7]
0xffff914a66e4     4  movz x16, #0x14f
0xffff914a66e8     8  ldr x0, [x0, x16]
0xffff914a66ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914a66e0     0  ldur x0, [x1, #7]
0xffff914a66e4     4  movz x16, #0x14f
0xffff914a66e8     8  ldr x0, [x0, x16]
0xffff914a66ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914a6760     0  ldur x0, [x1, #7]
0xffff914a6764     4  movz x16, #0x15f
0xffff914a6768     8  ldr x0, [x0, x16]
0xffff914a676c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914a6760     0  ldur x0, [x1, #7]
0xffff914a6764     4  movz x16, #0x15f
0xffff914a6768     8  ldr x0, [x0, x16]
0xffff914a676c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914a67e0     0  ldur x0, [x1, #7]
0xffff914a67e4     4  movz x16, #0x177
0xffff914a67e8     8  ldr x0, [x0, x16]
0xffff914a67ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff914a67e0     0  ldur x0, [x1, #7]
0xffff914a67e4     4  movz x16, #0x177
0xffff914a67e8     8  ldr x0, [x0, x16]
0xffff914a67ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = Intl
compiler = unknown
Instructions (size = 120)
0xffff914a6860     0  sub csp, jssp, #0x8 (8)
0xffff914a6864     4  str x3, [jssp, #-8]!
0xffff914a6868     8  sub csp, jssp, #0x8 (8)
0xffff914a686c    12  str x0, [jssp, #-8]!
0xffff914a6870    16  ldr x0, pc+80 (addr 0x0000ffff914a68c0)    ;; object: 0x49bc5d51 Cell for 0
0xffff914a6874    20  ldur x0, [x0, #7]
0xffff914a6878    24  cmp x0, #0x0 (0)
0xffff914a687c    28  b.ne #+0x2c (addr 0xffff914a68a8)
0xffff914a6880    32  ldr x0, pc+72 (addr 0x0000ffff914a68c8)    ;; object: 0x49bf4e89 WeakCell for 0x49ba8f41 PropertyCell for 0x51d43859 <an Object with map 0x36415031>
0xffff914a6884    36  ldur x0, [x0, #7]
0xffff914a6888    40  tbz w0, #0, #+0x20 (addr 0xffff914a68a8)
0xffff914a688c    44  ldur x0, [x0, #15]
0xffff914a6890    48  ldr x16, [x26, #88]
0xffff914a6894    52  cmp x0, x16
0xffff914a6898    56  b.eq #+0x10 (addr 0xffff914a68a8)
0xffff914a689c    60  add jssp, jssp, #0x10 (16)
0xffff914a68a0    64  ret
0xffff914a68a4    68  b #+0x14 (addr 0xffff914a68b8)
0xffff914a68a8    72  ldr x0, [jssp], #8
0xffff914a68ac    76  ldr x3, [jssp], #8
0xffff914a68b0    80  ldr x16, pc+32 (addr 0x0000ffff914a68d0)    ;; code: BUILTIN
0xffff914a68b4    84  br x16
0xffff914a68b8    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914a68bc    92  d63f03e0       constant
0xffff914a68c0    96  49bc5d51       constant
0xffff914a68c4   100  00000000       constant
0xffff914a68c8   104  49bf4e89       constant
0xffff914a68cc   108  00000000       constant
0xffff914a68d0   112  914222e0       constant
0xffff914a68d4   116  0000ffff       constant


RelocInfo (size = 9)
0xffff914a6870  embedded object  (0x49bc5d51 Cell for 0)
0xffff914a6880  embedded object  (0x49bf4e89 WeakCell for 0x49ba8f41 PropertyCell for 0x51d43859 <an Object with map 0x36415031>)
0xffff914a68b0  code target (BUILTIN)  (0xffff914222e0)
0xffff914a68b8  constant pool (size 32)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914a6940     0  tbz w0, #0, #+0x98 (addr 0xffff914a69d8)
0xffff914a6944     4  mov x2, x0
0xffff914a6948     8  ldur x4, [x1, #7]
0xffff914a694c    12  stur x2, [x4, #47]
0xffff914a6950    16  add x3, x4, #0x2f (47)
0xffff914a6954    20  and x2, x2, #0xfffffffffff00000
0xffff914a6958    24  ldr x2, [x2, #8]
0xffff914a695c    28  tbz w2, #1, #+0x24 (addr 0xffff914a6980)
0xffff914a6960    32  and x2, x4, #0xfffffffffff00000
0xffff914a6964    36  ldr x2, [x2, #8]
0xffff914a6968    40  tbz w2, #2, #+0x18 (addr 0xffff914a6980)
0xffff914a696c    44  sub csp, jssp, #0x8 (8)
0xffff914a6970    48  str lr, [jssp, #-8]!
0xffff914a6974    52  ldr x16, pc+84 (addr 0x0000ffff914a69c8)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914a6978    56  blr x16
0xffff914a697c    60  ldr lr, [jssp], #8
0xffff914a6980    64  stur x5, [x1, #-1]
0xffff914a6984    68  tbz w5, #0, #+0x34 (addr 0xffff914a69b8)
0xffff914a6988    72  sub x2, x1, #0x1 (1)
0xffff914a698c    76  and x5, x5, #0xfffffffffff00000
0xffff914a6990    80  ldr x5, [x5, #8]
0xffff914a6994    84  tbz w5, #1, #+0x24 (addr 0xffff914a69b8)
0xffff914a6998    88  and x5, x1, #0xfffffffffff00000
0xffff914a699c    92  ldr x5, [x5, #8]
0xffff914a69a0    96  tbz w5, #2, #+0x18 (addr 0xffff914a69b8)
0xffff914a69a4   100  sub csp, jssp, #0x8 (8)
0xffff914a69a8   104  str lr, [jssp, #-8]!
0xffff914a69ac   108  ldr x16, pc+36 (addr 0x0000ffff914a69d0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914a69b0   112  blr x16
0xffff914a69b4   116  ldr lr, [jssp], #8
0xffff914a69b8   120  ret
0xffff914a69bc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914a69c0   128  d63f03e0       constant
0xffff914a69c4   132  d503201f       constant
0xffff914a69c8   136  914378a0       constant
0xffff914a69cc   140  0000ffff       constant
0xffff914a69d0   144  91438080       constant
0xffff914a69d4   148  0000ffff       constant
0xffff914a69d8   152  movz x16, #0x0
0xffff914a69dc   156  sub csp, jssp, #0x10 (16)
0xffff914a69e0   160  stp fp, lr, [jssp, #-16]!
0xffff914a69e4   164  bl #+0x4 (addr 0xffff914a69e8)
0xffff914a69e8   168  movz x17, #0xa00000000
0xffff914a69ec   172  sub csp, jssp, #0x10 (16)
0xffff914a69f0   176  stp x17, cp, [jssp, #-16]!
0xffff914a69f4   180  add fp, jssp, #0x10 (16)
0xffff914a69f8   184  ldr x17, pc+24 (addr 0x0000ffff914a6a10)    ;; lazy deoptimization bailout 0
0xffff914a69fc   188  add x17, x17, x16
0xffff914a6a00   192  br x17
0xffff914a6a04   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914a6a08   200  d63f03e0       constant
0xffff914a6a0c   204  d503201f       constant
0xffff914a6a10   208  91206000       constant
0xffff914a6a14   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914a6974  code target (STUB)  (0xffff914378a0)
0xffff914a69ac  code target (STUB)  (0xffff91438080)
0xffff914a69bc  constant pool (size 28)
0xffff914a69f8  runtime entry
0xffff914a6a04  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914a6940     0  tbz w0, #0, #+0x98 (addr 0xffff914a69d8)
0xffff914a6944     4  mov x2, x0
0xffff914a6948     8  ldur x4, [x1, #7]
0xffff914a694c    12  stur x2, [x4, #47]
0xffff914a6950    16  add x3, x4, #0x2f (47)
0xffff914a6954    20  and x2, x2, #0xfffffffffff00000
0xffff914a6958    24  ldr x2, [x2, #8]
0xffff914a695c    28  tbz w2, #1, #+0x24 (addr 0xffff914a6980)
0xffff914a6960    32  and x2, x4, #0xfffffffffff00000
0xffff914a6964    36  ldr x2, [x2, #8]
0xffff914a6968    40  tbz w2, #2, #+0x18 (addr 0xffff914a6980)
0xffff914a696c    44  sub csp, jssp, #0x8 (8)
0xffff914a6970    48  str lr, [jssp, #-8]!
0xffff914a6974    52  ldr x16, pc+84 (addr 0x0000ffff914a69c8)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914a6978    56  blr x16
0xffff914a697c    60  ldr lr, [jssp], #8
0xffff914a6980    64  stur x5, [x1, #-1]
0xffff914a6984    68  tbz w5, #0, #+0x34 (addr 0xffff914a69b8)
0xffff914a6988    72  sub x2, x1, #0x1 (1)
0xffff914a698c    76  and x5, x5, #0xfffffffffff00000
0xffff914a6990    80  ldr x5, [x5, #8]
0xffff914a6994    84  tbz w5, #1, #+0x24 (addr 0xffff914a69b8)
0xffff914a6998    88  and x5, x1, #0xfffffffffff00000
0xffff914a699c    92  ldr x5, [x5, #8]
0xffff914a69a0    96  tbz w5, #2, #+0x18 (addr 0xffff914a69b8)
0xffff914a69a4   100  sub csp, jssp, #0x8 (8)
0xffff914a69a8   104  str lr, [jssp, #-8]!
0xffff914a69ac   108  ldr x16, pc+36 (addr 0x0000ffff914a69d0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914a69b0   112  blr x16
0xffff914a69b4   116  ldr lr, [jssp], #8
0xffff914a69b8   120  ret
0xffff914a69bc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914a69c0   128  d63f03e0       constant
0xffff914a69c4   132  d503201f       constant
0xffff914a69c8   136  914378a0       constant
0xffff914a69cc   140  0000ffff       constant
0xffff914a69d0   144  91438080       constant
0xffff914a69d4   148  0000ffff       constant
0xffff914a69d8   152  movz x16, #0x0
0xffff914a69dc   156  sub csp, jssp, #0x10 (16)
0xffff914a69e0   160  stp fp, lr, [jssp, #-16]!
0xffff914a69e4   164  bl #+0x4 (addr 0xffff914a69e8)
0xffff914a69e8   168  movz x17, #0xa00000000
0xffff914a69ec   172  sub csp, jssp, #0x10 (16)
0xffff914a69f0   176  stp x17, cp, [jssp, #-16]!
0xffff914a69f4   180  add fp, jssp, #0x10 (16)
0xffff914a69f8   184  ldr x17, pc+24 (addr 0x0000ffff914a6a10)    ;; lazy deoptimization bailout 0
0xffff914a69fc   188  add x17, x17, x16
0xffff914a6a00   192  br x17
0xffff914a6a04   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914a6a08   200  d63f03e0       constant
0xffff914a6a0c   204  d503201f       constant
0xffff914a6a10   208  91206000       constant
0xffff914a6a14   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914a6974  code target (STUB)  (0xffff914378a0)
0xffff914a69ac  code target (STUB)  (0xffff91438080)
0xffff914a69bc  constant pool (size 28)
0xffff914a69f8  runtime entry
0xffff914a6a04  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/process/warning
compiler = unknown
Instructions (size = 184)
0xffff914a6a80     0  sub csp, jssp, #0x8 (8)
0xffff914a6a84     4  str x3, [jssp, #-8]!
0xffff914a6a88     8  sub csp, jssp, #0x8 (8)
0xffff914a6a8c    12  str x4, [jssp, #-8]!
0xffff914a6a90    16  ldr x3, pc+112 (addr 0x0000ffff914a6b00)    ;; object: 0x49b63e59 Cell for 0
0xffff914a6a94    20  ldur x3, [x3, #7]
0xffff914a6a98    24  cmp x3, #0x0 (0)
0xffff914a6a9c    28  b.ne #+0x44 (addr 0xffff914a6ae0)
0xffff914a6aa0    32  tbz w0, #0, #+0x40 (addr 0xffff914a6ae0)
0xffff914a6aa4    36  ldur x3, [x0, #-1]
0xffff914a6aa8    40  ldr x4, pc+96 (addr 0x0000ffff914a6b08)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914a6aac    44  ldur x4, [x4, #7]
0xffff914a6ab0    48  cmp x3, x4
0xffff914a6ab4    52  b.ne #+0x2c (addr 0xffff914a6ae0)
0xffff914a6ab8    56  ldr x5, pc+88 (addr 0x0000ffff914a6b10)    ;; object: 0x49bf4fd1 WeakCell for 0x36427a91 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914a6abc    60  ldur x5, [x5, #7]
0xffff914a6ac0    64  tbz w5, #0, #+0x20 (addr 0xffff914a6ae0)
0xffff914a6ac4    68  ldursw x4, [x5, #15]
0xffff914a6ac8    72  tbnz w4, #23, #+0x18 (addr 0xffff914a6ae0)
0xffff914a6acc    76  ldr x4, [jssp], #8
0xffff914a6ad0    80  ldr x3, [jssp], #8
0xffff914a6ad4    84  ldr x2, pc+68 (addr 0x0000ffff914a6b18)    ;; object: 0x49bb9731 <String[24]: internal/process/warning>
0xffff914a6ad8    88  ldr x16, pc+72 (addr 0x0000ffff914a6b20)    ;; code: HANDLER, StoreTransitionStub, minor: 196614
0xffff914a6adc    92  br x16
0xffff914a6ae0    96  ldr x2, pc+72 (addr 0x0000ffff914a6b28)    ;; object: 0x49bb9731 <String[24]: internal/process/warning>
0xffff914a6ae4   100  ldr x4, [jssp], #8
0xffff914a6ae8   104  ldr x3, [jssp], #8
0xffff914a6aec   108  ldr x16, pc+68 (addr 0x0000ffff914a6b30)    ;; code: BUILTIN
0xffff914a6af0   112  br x16
0xffff914a6af4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914a6af8   120  d63f03e0       constant
0xffff914a6afc   124  d503201f       constant
0xffff914a6b00   128  49b63e59       constant
0xffff914a6b04   132  00000000       constant
0xffff914a6b08   136  49bc22b1       constant
0xffff914a6b0c   140  00000000       constant
0xffff914a6b10   144  49bf4fd1       constant
0xffff914a6b14   148  00000000       constant
0xffff914a6b18   152  49bb9731       constant
0xffff914a6b1c   156  00000000       constant
0xffff914a6b20   160  914a6940       constant
0xffff914a6b24   164  0000ffff       constant
0xffff914a6b28   168  49bb9731       constant
0xffff914a6b2c   172  00000000       constant
0xffff914a6b30   176  91422420       constant
0xffff914a6b34   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914a6a90  embedded object  (0x49b63e59 Cell for 0)
0xffff914a6aa8  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914a6ab8  embedded object  (0x49bf4fd1 WeakCell for 0x36427a91 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914a6ad4  embedded object  (0x49bb9731 <String[24]: internal/process/warning>)
0xffff914a6ad8  code target (HANDLER)  (0xffff914a6940)
0xffff914a6ae0  embedded object  (0x49bb9731 <String[24]: internal/process/warning>)
0xffff914a6aec  code target (BUILTIN)  (0xffff91422420)
0xffff914a6af4  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914a87a0     0  tbz w0, #0, #+0x98 (addr 0xffff914a8838)
0xffff914a87a4     4  mov x2, x0
0xffff914a87a8     8  ldur x4, [x1, #7]
0xffff914a87ac    12  stur x2, [x4, #55]
0xffff914a87b0    16  add x3, x4, #0x37 (55)
0xffff914a87b4    20  and x2, x2, #0xfffffffffff00000
0xffff914a87b8    24  ldr x2, [x2, #8]
0xffff914a87bc    28  tbz w2, #1, #+0x24 (addr 0xffff914a87e0)
0xffff914a87c0    32  and x2, x4, #0xfffffffffff00000
0xffff914a87c4    36  ldr x2, [x2, #8]
0xffff914a87c8    40  tbz w2, #2, #+0x18 (addr 0xffff914a87e0)
0xffff914a87cc    44  sub csp, jssp, #0x8 (8)
0xffff914a87d0    48  str lr, [jssp, #-8]!
0xffff914a87d4    52  ldr x16, pc+84 (addr 0x0000ffff914a8828)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914a87d8    56  blr x16
0xffff914a87dc    60  ldr lr, [jssp], #8
0xffff914a87e0    64  stur x5, [x1, #-1]
0xffff914a87e4    68  tbz w5, #0, #+0x34 (addr 0xffff914a8818)
0xffff914a87e8    72  sub x2, x1, #0x1 (1)
0xffff914a87ec    76  and x5, x5, #0xfffffffffff00000
0xffff914a87f0    80  ldr x5, [x5, #8]
0xffff914a87f4    84  tbz w5, #1, #+0x24 (addr 0xffff914a8818)
0xffff914a87f8    88  and x5, x1, #0xfffffffffff00000
0xffff914a87fc    92  ldr x5, [x5, #8]
0xffff914a8800    96  tbz w5, #2, #+0x18 (addr 0xffff914a8818)
0xffff914a8804   100  sub csp, jssp, #0x8 (8)
0xffff914a8808   104  str lr, [jssp, #-8]!
0xffff914a880c   108  ldr x16, pc+36 (addr 0x0000ffff914a8830)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914a8810   112  blr x16
0xffff914a8814   116  ldr lr, [jssp], #8
0xffff914a8818   120  ret
0xffff914a881c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914a8820   128  d63f03e0       constant
0xffff914a8824   132  d503201f       constant
0xffff914a8828   136  914378a0       constant
0xffff914a882c   140  0000ffff       constant
0xffff914a8830   144  91438080       constant
0xffff914a8834   148  0000ffff       constant
0xffff914a8838   152  movz x16, #0x0
0xffff914a883c   156  sub csp, jssp, #0x10 (16)
0xffff914a8840   160  stp fp, lr, [jssp, #-16]!
0xffff914a8844   164  bl #+0x4 (addr 0xffff914a8848)
0xffff914a8848   168  movz x17, #0xa00000000
0xffff914a884c   172  sub csp, jssp, #0x10 (16)
0xffff914a8850   176  stp x17, cp, [jssp, #-16]!
0xffff914a8854   180  add fp, jssp, #0x10 (16)
0xffff914a8858   184  ldr x17, pc+24 (addr 0x0000ffff914a8870)    ;; lazy deoptimization bailout 0
0xffff914a885c   188  add x17, x17, x16
0xffff914a8860   192  br x17
0xffff914a8864   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914a8868   200  d63f03e0       constant
0xffff914a886c   204  d503201f       constant
0xffff914a8870   208  91206000       constant
0xffff914a8874   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914a87d4  code target (STUB)  (0xffff914378a0)
0xffff914a880c  code target (STUB)  (0xffff91438080)
0xffff914a881c  constant pool (size 28)
0xffff914a8858  runtime entry
0xffff914a8864  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914a87a0     0  tbz w0, #0, #+0x98 (addr 0xffff914a8838)
0xffff914a87a4     4  mov x2, x0
0xffff914a87a8     8  ldur x4, [x1, #7]
0xffff914a87ac    12  stur x2, [x4, #55]
0xffff914a87b0    16  add x3, x4, #0x37 (55)
0xffff914a87b4    20  and x2, x2, #0xfffffffffff00000
0xffff914a87b8    24  ldr x2, [x2, #8]
0xffff914a87bc    28  tbz w2, #1, #+0x24 (addr 0xffff914a87e0)
0xffff914a87c0    32  and x2, x4, #0xfffffffffff00000
0xffff914a87c4    36  ldr x2, [x2, #8]
0xffff914a87c8    40  tbz w2, #2, #+0x18 (addr 0xffff914a87e0)
0xffff914a87cc    44  sub csp, jssp, #0x8 (8)
0xffff914a87d0    48  str lr, [jssp, #-8]!
0xffff914a87d4    52  ldr x16, pc+84 (addr 0x0000ffff914a8828)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914a87d8    56  blr x16
0xffff914a87dc    60  ldr lr, [jssp], #8
0xffff914a87e0    64  stur x5, [x1, #-1]
0xffff914a87e4    68  tbz w5, #0, #+0x34 (addr 0xffff914a8818)
0xffff914a87e8    72  sub x2, x1, #0x1 (1)
0xffff914a87ec    76  and x5, x5, #0xfffffffffff00000
0xffff914a87f0    80  ldr x5, [x5, #8]
0xffff914a87f4    84  tbz w5, #1, #+0x24 (addr 0xffff914a8818)
0xffff914a87f8    88  and x5, x1, #0xfffffffffff00000
0xffff914a87fc    92  ldr x5, [x5, #8]
0xffff914a8800    96  tbz w5, #2, #+0x18 (addr 0xffff914a8818)
0xffff914a8804   100  sub csp, jssp, #0x8 (8)
0xffff914a8808   104  str lr, [jssp, #-8]!
0xffff914a880c   108  ldr x16, pc+36 (addr 0x0000ffff914a8830)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914a8810   112  blr x16
0xffff914a8814   116  ldr lr, [jssp], #8
0xffff914a8818   120  ret
0xffff914a881c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914a8820   128  d63f03e0       constant
0xffff914a8824   132  d503201f       constant
0xffff914a8828   136  914378a0       constant
0xffff914a882c   140  0000ffff       constant
0xffff914a8830   144  91438080       constant
0xffff914a8834   148  0000ffff       constant
0xffff914a8838   152  movz x16, #0x0
0xffff914a883c   156  sub csp, jssp, #0x10 (16)
0xffff914a8840   160  stp fp, lr, [jssp, #-16]!
0xffff914a8844   164  bl #+0x4 (addr 0xffff914a8848)
0xffff914a8848   168  movz x17, #0xa00000000
0xffff914a884c   172  sub csp, jssp, #0x10 (16)
0xffff914a8850   176  stp x17, cp, [jssp, #-16]!
0xffff914a8854   180  add fp, jssp, #0x10 (16)
0xffff914a8858   184  ldr x17, pc+24 (addr 0x0000ffff914a8870)    ;; lazy deoptimization bailout 0
0xffff914a885c   188  add x17, x17, x16
0xffff914a8860   192  br x17
0xffff914a8864   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914a8868   200  d63f03e0       constant
0xffff914a886c   204  d503201f       constant
0xffff914a8870   208  91206000       constant
0xffff914a8874   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914a87d4  code target (STUB)  (0xffff914378a0)
0xffff914a880c  code target (STUB)  (0xffff91438080)
0xffff914a881c  constant pool (size 28)
0xffff914a8858  runtime entry
0xffff914a8864  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/process/next_tick
compiler = unknown
Instructions (size = 184)
0xffff914a88e0     0  sub csp, jssp, #0x8 (8)
0xffff914a88e4     4  str x3, [jssp, #-8]!
0xffff914a88e8     8  sub csp, jssp, #0x8 (8)
0xffff914a88ec    12  str x4, [jssp, #-8]!
0xffff914a88f0    16  ldr x3, pc+112 (addr 0x0000ffff914a8960)    ;; object: 0x49b63e59 Cell for 0
0xffff914a88f4    20  ldur x3, [x3, #7]
0xffff914a88f8    24  cmp x3, #0x0 (0)
0xffff914a88fc    28  b.ne #+0x44 (addr 0xffff914a8940)
0xffff914a8900    32  tbz w0, #0, #+0x40 (addr 0xffff914a8940)
0xffff914a8904    36  ldur x3, [x0, #-1]
0xffff914a8908    40  ldr x4, pc+96 (addr 0x0000ffff914a8968)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914a890c    44  ldur x4, [x4, #7]
0xffff914a8910    48  cmp x3, x4
0xffff914a8914    52  b.ne #+0x2c (addr 0xffff914a8940)
0xffff914a8918    56  ldr x5, pc+88 (addr 0x0000ffff914a8970)    ;; object: 0x49bf6569 WeakCell for 0x36427b99 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914a891c    60  ldur x5, [x5, #7]
0xffff914a8920    64  tbz w5, #0, #+0x20 (addr 0xffff914a8940)
0xffff914a8924    68  ldursw x4, [x5, #15]
0xffff914a8928    72  tbnz w4, #23, #+0x18 (addr 0xffff914a8940)
0xffff914a892c    76  ldr x4, [jssp], #8
0xffff914a8930    80  ldr x3, [jssp], #8
0xffff914a8934    84  ldr x2, pc+68 (addr 0x0000ffff914a8978)    ;; object: 0x49bb9781 <String[26]: internal/process/next_tick>
0xffff914a8938    88  ldr x16, pc+72 (addr 0x0000ffff914a8980)    ;; code: HANDLER, StoreTransitionStub, minor: 196615
0xffff914a893c    92  br x16
0xffff914a8940    96  ldr x2, pc+72 (addr 0x0000ffff914a8988)    ;; object: 0x49bb9781 <String[26]: internal/process/next_tick>
0xffff914a8944   100  ldr x4, [jssp], #8
0xffff914a8948   104  ldr x3, [jssp], #8
0xffff914a894c   108  ldr x16, pc+68 (addr 0x0000ffff914a8990)    ;; code: BUILTIN
0xffff914a8950   112  br x16
0xffff914a8954   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914a8958   120  d63f03e0       constant
0xffff914a895c   124  d503201f       constant
0xffff914a8960   128  49b63e59       constant
0xffff914a8964   132  00000000       constant
0xffff914a8968   136  49bc22b1       constant
0xffff914a896c   140  00000000       constant
0xffff914a8970   144  49bf6569       constant
0xffff914a8974   148  00000000       constant
0xffff914a8978   152  49bb9781       constant
0xffff914a897c   156  00000000       constant
0xffff914a8980   160  914a87a0       constant
0xffff914a8984   164  0000ffff       constant
0xffff914a8988   168  49bb9781       constant
0xffff914a898c   172  00000000       constant
0xffff914a8990   176  91422420       constant
0xffff914a8994   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914a88f0  embedded object  (0x49b63e59 Cell for 0)
0xffff914a8908  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914a8918  embedded object  (0x49bf6569 WeakCell for 0x36427b99 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914a8934  embedded object  (0x49bb9781 <String[26]: internal/process/next_tick>)
0xffff914a8938  code target (HANDLER)  (0xffff914a87a0)
0xffff914a8940  embedded object  (0x49bb9781 <String[26]: internal/process/next_tick>)
0xffff914a894c  code target (BUILTIN)  (0xffff91422420)
0xffff914a8954  constant pool (size 68)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 429)
0xffff914a8d60     0  movz x2, #0xf2c0
0xffff914a8d64     4  movk x2, #0x4117, lsl #16
0xffff914a8d68     8  ldp x3, x0, [x2]
0xffff914a8d6c    12  adds x16, x3, #0x88 (136)
0xffff914a8d70    16  ccmp x16, x0, #nzCv, lo
0xffff914a8d74    20  b.hi #+0x94 (addr 0xffff914a8e08)
0xffff914a8d78    24  str x16, [x2]
0xffff914a8d7c    28  orr x3, x3, #0x1
0xffff914a8d80    32  ldr x0, pc+248 (addr 0x0000ffff914a8e78)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914a8d84    36  stur x0, [x3, #-1]
0xffff914a8d88    40  movz x0, #0xf00000000
0xffff914a8d8c    44  stur x0, [x3, #7]
0xffff914a8d90    48  stur x1, [x3, #15]
0xffff914a8d94    52  stur cp, [x3, #23]
0xffff914a8d98    56  ldr x0, pc+232 (addr 0x0000ffff914a8e80)    ;; object: 0x49b04519 <the hole>
0xffff914a8d9c    60  stur x0, [x3, #31]
0xffff914a8da0    64  ldur x0, [cp, #39]
0xffff914a8da4    68  stur x0, [x3, #39]
0xffff914a8da8    72  ldr x0, pc+224 (addr 0x0000ffff914a8e88)    ;; object: 0x49b04241 <undefined>
0xffff914a8dac    76  stur x0, [x3, #47]
0xffff914a8db0    80  ldr x0, pc+224 (addr 0x0000ffff914a8e90)    ;; object: 0x49b04241 <undefined>
0xffff914a8db4    84  stur x0, [x3, #55]
0xffff914a8db8    88  ldr x0, pc+224 (addr 0x0000ffff914a8e98)    ;; object: 0x49b04241 <undefined>
0xffff914a8dbc    92  stur x0, [x3, #63]
0xffff914a8dc0    96  ldr x0, pc+224 (addr 0x0000ffff914a8ea0)    ;; object: 0x49b04241 <undefined>
0xffff914a8dc4   100  stur x0, [x3, #71]
0xffff914a8dc8   104  ldr x0, pc+224 (addr 0x0000ffff914a8ea8)    ;; object: 0x49b04241 <undefined>
0xffff914a8dcc   108  stur x0, [x3, #79]
0xffff914a8dd0   112  ldr x0, pc+224 (addr 0x0000ffff914a8eb0)    ;; object: 0x49b04241 <undefined>
0xffff914a8dd4   116  stur x0, [x3, #87]
0xffff914a8dd8   120  ldr x0, pc+224 (addr 0x0000ffff914a8eb8)    ;; object: 0x49b04241 <undefined>
0xffff914a8ddc   124  stur x0, [x3, #95]
0xffff914a8de0   128  ldr x0, pc+224 (addr 0x0000ffff914a8ec0)    ;; object: 0x49b04241 <undefined>
0xffff914a8de4   132  stur x0, [x3, #103]
0xffff914a8de8   136  ldr x0, pc+224 (addr 0x0000ffff914a8ec8)    ;; object: 0x49b04241 <undefined>
0xffff914a8dec   140  stur x0, [x3, #111]
0xffff914a8df0   144  ldr x0, pc+224 (addr 0x0000ffff914a8ed0)    ;; object: 0x49b04241 <undefined>
0xffff914a8df4   148  stur x0, [x3, #119]
0xffff914a8df8   152  ldr x0, pc+224 (addr 0x0000ffff914a8ed8)    ;; object: 0x49b04241 <undefined>
0xffff914a8dfc   156  stur x0, [x3, #127]
0xffff914a8e00   160  mov x0, x3
0xffff914a8e04   164  ret
0xffff914a8e08   168  sub csp, jssp, #0x10 (16)
0xffff914a8e0c   172  stp fp, lr, [jssp, #-16]!
0xffff914a8e10   176  movz fp, #0xa00000000
0xffff914a8e14   180  sub csp, jssp, #0x8 (8)
0xffff914a8e18   184  str fp, [jssp, #-8]!
0xffff914a8e1c   188  add fp, jssp, #0x8 (8)
0xffff914a8e20   192  movz x3, #0x0
0xffff914a8e24   196  mov x16, lr
0xffff914a8e28   200  ldr x17, pc+184 (addr 0x0000ffff914a8ee0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914a8e2c   204  blr x17
0xffff914a8e30   208  movz x0, #0x8800000000
0xffff914a8e34   212  movz x10, #0x0
0xffff914a8e38   216  sub csp, jssp, #0x10 (16)
0xffff914a8e3c   220  stp x10, x0, [jssp, #-16]!
0xffff914a8e40   224  movz x0, #0x2
0xffff914a8e44   228  movz x1, #0x5b88
0xffff914a8e48   232  movk x1, #0xe2, lsl #16
0xffff914a8e4c   236  ldr x16, pc+156 (addr 0x0000ffff914a8ee8)    ;; code: STUB, CEntryStub, minor: 5
0xffff914a8e50   240  blr x16
0xffff914a8e54   244  str x0, [jssp, #24]
0xffff914a8e58   248  ldr x16, pc+152 (addr 0x0000ffff914a8ef0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914a8e5c   252  blr x16
0xffff914a8e60   256  ldr lr, [jssp, #16]
0xffff914a8e64   260  ldp xzr, fp, [jssp], #24
0xffff914a8e68   264  b #-0xe8 (addr 0xffff914a8d80)
0xffff914a8e6c   268  5800045f       constant pool begin (num_const = 34)    ;; constant pool
0xffff914a8e70   272  d63f03e0       constant
0xffff914a8e74   276  d503201f       constant
0xffff914a8e78   280  36406149       constant
0xffff914a8e7c   284  00000000       constant
0xffff914a8e80   288  49b04519       constant
0xffff914a8e84   292  00000000       constant
0xffff914a8e88   296  49b04241       constant
0xffff914a8e8c   300  00000000       constant
0xffff914a8e90   304  49b04241       constant
0xffff914a8e94   308  00000000       constant
0xffff914a8e98   312  49b04241       constant
0xffff914a8e9c   316  00000000       constant
0xffff914a8ea0   320  49b04241       constant
0xffff914a8ea4   324  00000000       constant
0xffff914a8ea8   328  49b04241       constant
0xffff914a8eac   332  00000000       constant
0xffff914a8eb0   336  49b04241       constant
0xffff914a8eb4   340  00000000       constant
0xffff914a8eb8   344  49b04241       constant
0xffff914a8ebc   348  00000000       constant
0xffff914a8ec0   352  49b04241       constant
0xffff914a8ec4   356  00000000       constant
0xffff914a8ec8   360  49b04241       constant
0xffff914a8ecc   364  00000000       constant
0xffff914a8ed0   368  49b04241       constant
0xffff914a8ed4   372  00000000       constant
0xffff914a8ed8   376  49b04241       constant
0xffff914a8edc   380  00000000       constant
0xffff914a8ee0   384  91406820       constant
0xffff914a8ee4   388  0000ffff       constant
0xffff914a8ee8   392  91406260       constant
0xffff914a8eec   396  0000ffff       constant
0xffff914a8ef0   400  914068e0       constant
0xffff914a8ef4   404  0000ffff       constant


Safepoints (size = 21)
0xffff914a8e54   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 22)
0xffff914a8d80  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914a8d98  embedded object  (0x49b04519 <the hole>)
0xffff914a8da8  embedded object  (0x49b04241 <undefined>)
0xffff914a8db0  embedded object  (0x49b04241 <undefined>)
0xffff914a8db8  embedded object  (0x49b04241 <undefined>)
0xffff914a8dc0  embedded object  (0x49b04241 <undefined>)
0xffff914a8dc8  embedded object  (0x49b04241 <undefined>)
0xffff914a8dd0  embedded object  (0x49b04241 <undefined>)
0xffff914a8dd8  embedded object  (0x49b04241 <undefined>)
0xffff914a8de0  embedded object  (0x49b04241 <undefined>)
0xffff914a8de8  embedded object  (0x49b04241 <undefined>)
0xffff914a8df0  embedded object  (0x49b04241 <undefined>)
0xffff914a8df8  embedded object  (0x49b04241 <undefined>)
0xffff914a8e28  code target (STUB)  (0xffff91406820)
0xffff914a8e4c  code target (STUB)  (0xffff91406260)
0xffff914a8e58  code target (STUB)  (0xffff914068e0)
0xffff914a8e6c  constant pool (size 140)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 429)
0xffff914a8d60     0  movz x2, #0xf2c0
0xffff914a8d64     4  movk x2, #0x4117, lsl #16
0xffff914a8d68     8  ldp x3, x0, [x2]
0xffff914a8d6c    12  adds x16, x3, #0x88 (136)
0xffff914a8d70    16  ccmp x16, x0, #nzCv, lo
0xffff914a8d74    20  b.hi #+0x94 (addr 0xffff914a8e08)
0xffff914a8d78    24  str x16, [x2]
0xffff914a8d7c    28  orr x3, x3, #0x1
0xffff914a8d80    32  ldr x0, pc+248 (addr 0x0000ffff914a8e78)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914a8d84    36  stur x0, [x3, #-1]
0xffff914a8d88    40  movz x0, #0xf00000000
0xffff914a8d8c    44  stur x0, [x3, #7]
0xffff914a8d90    48  stur x1, [x3, #15]
0xffff914a8d94    52  stur cp, [x3, #23]
0xffff914a8d98    56  ldr x0, pc+232 (addr 0x0000ffff914a8e80)    ;; object: 0x49b04519 <the hole>
0xffff914a8d9c    60  stur x0, [x3, #31]
0xffff914a8da0    64  ldur x0, [cp, #39]
0xffff914a8da4    68  stur x0, [x3, #39]
0xffff914a8da8    72  ldr x0, pc+224 (addr 0x0000ffff914a8e88)    ;; object: 0x49b04241 <undefined>
0xffff914a8dac    76  stur x0, [x3, #47]
0xffff914a8db0    80  ldr x0, pc+224 (addr 0x0000ffff914a8e90)    ;; object: 0x49b04241 <undefined>
0xffff914a8db4    84  stur x0, [x3, #55]
0xffff914a8db8    88  ldr x0, pc+224 (addr 0x0000ffff914a8e98)    ;; object: 0x49b04241 <undefined>
0xffff914a8dbc    92  stur x0, [x3, #63]
0xffff914a8dc0    96  ldr x0, pc+224 (addr 0x0000ffff914a8ea0)    ;; object: 0x49b04241 <undefined>
0xffff914a8dc4   100  stur x0, [x3, #71]
0xffff914a8dc8   104  ldr x0, pc+224 (addr 0x0000ffff914a8ea8)    ;; object: 0x49b04241 <undefined>
0xffff914a8dcc   108  stur x0, [x3, #79]
0xffff914a8dd0   112  ldr x0, pc+224 (addr 0x0000ffff914a8eb0)    ;; object: 0x49b04241 <undefined>
0xffff914a8dd4   116  stur x0, [x3, #87]
0xffff914a8dd8   120  ldr x0, pc+224 (addr 0x0000ffff914a8eb8)    ;; object: 0x49b04241 <undefined>
0xffff914a8ddc   124  stur x0, [x3, #95]
0xffff914a8de0   128  ldr x0, pc+224 (addr 0x0000ffff914a8ec0)    ;; object: 0x49b04241 <undefined>
0xffff914a8de4   132  stur x0, [x3, #103]
0xffff914a8de8   136  ldr x0, pc+224 (addr 0x0000ffff914a8ec8)    ;; object: 0x49b04241 <undefined>
0xffff914a8dec   140  stur x0, [x3, #111]
0xffff914a8df0   144  ldr x0, pc+224 (addr 0x0000ffff914a8ed0)    ;; object: 0x49b04241 <undefined>
0xffff914a8df4   148  stur x0, [x3, #119]
0xffff914a8df8   152  ldr x0, pc+224 (addr 0x0000ffff914a8ed8)    ;; object: 0x49b04241 <undefined>
0xffff914a8dfc   156  stur x0, [x3, #127]
0xffff914a8e00   160  mov x0, x3
0xffff914a8e04   164  ret
0xffff914a8e08   168  sub csp, jssp, #0x10 (16)
0xffff914a8e0c   172  stp fp, lr, [jssp, #-16]!
0xffff914a8e10   176  movz fp, #0xa00000000
0xffff914a8e14   180  sub csp, jssp, #0x8 (8)
0xffff914a8e18   184  str fp, [jssp, #-8]!
0xffff914a8e1c   188  add fp, jssp, #0x8 (8)
0xffff914a8e20   192  movz x3, #0x0
0xffff914a8e24   196  mov x16, lr
0xffff914a8e28   200  ldr x17, pc+184 (addr 0x0000ffff914a8ee0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914a8e2c   204  blr x17
0xffff914a8e30   208  movz x0, #0x8800000000
0xffff914a8e34   212  movz x10, #0x0
0xffff914a8e38   216  sub csp, jssp, #0x10 (16)
0xffff914a8e3c   220  stp x10, x0, [jssp, #-16]!
0xffff914a8e40   224  movz x0, #0x2
0xffff914a8e44   228  movz x1, #0x5b88
0xffff914a8e48   232  movk x1, #0xe2, lsl #16
0xffff914a8e4c   236  ldr x16, pc+156 (addr 0x0000ffff914a8ee8)    ;; code: STUB, CEntryStub, minor: 5
0xffff914a8e50   240  blr x16
0xffff914a8e54   244  str x0, [jssp, #24]
0xffff914a8e58   248  ldr x16, pc+152 (addr 0x0000ffff914a8ef0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914a8e5c   252  blr x16
0xffff914a8e60   256  ldr lr, [jssp, #16]
0xffff914a8e64   260  ldp xzr, fp, [jssp], #24
0xffff914a8e68   264  b #-0xe8 (addr 0xffff914a8d80)
0xffff914a8e6c   268  5800045f       constant pool begin (num_const = 34)    ;; constant pool
0xffff914a8e70   272  d63f03e0       constant
0xffff914a8e74   276  d503201f       constant
0xffff914a8e78   280  36406149       constant
0xffff914a8e7c   284  00000000       constant
0xffff914a8e80   288  49b04519       constant
0xffff914a8e84   292  00000000       constant
0xffff914a8e88   296  49b04241       constant
0xffff914a8e8c   300  00000000       constant
0xffff914a8e90   304  49b04241       constant
0xffff914a8e94   308  00000000       constant
0xffff914a8e98   312  49b04241       constant
0xffff914a8e9c   316  00000000       constant
0xffff914a8ea0   320  49b04241       constant
0xffff914a8ea4   324  00000000       constant
0xffff914a8ea8   328  49b04241       constant
0xffff914a8eac   332  00000000       constant
0xffff914a8eb0   336  49b04241       constant
0xffff914a8eb4   340  00000000       constant
0xffff914a8eb8   344  49b04241       constant
0xffff914a8ebc   348  00000000       constant
0xffff914a8ec0   352  49b04241       constant
0xffff914a8ec4   356  00000000       constant
0xffff914a8ec8   360  49b04241       constant
0xffff914a8ecc   364  00000000       constant
0xffff914a8ed0   368  49b04241       constant
0xffff914a8ed4   372  00000000       constant
0xffff914a8ed8   376  49b04241       constant
0xffff914a8edc   380  00000000       constant
0xffff914a8ee0   384  91406820       constant
0xffff914a8ee4   388  0000ffff       constant
0xffff914a8ee8   392  91406260       constant
0xffff914a8eec   396  0000ffff       constant
0xffff914a8ef0   400  914068e0       constant
0xffff914a8ef4   404  0000ffff       constant


Safepoints (size = 21)
0xffff914a8e54   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 22)
0xffff914a8d80  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914a8d98  embedded object  (0x49b04519 <the hole>)
0xffff914a8da8  embedded object  (0x49b04241 <undefined>)
0xffff914a8db0  embedded object  (0x49b04241 <undefined>)
0xffff914a8db8  embedded object  (0x49b04241 <undefined>)
0xffff914a8dc0  embedded object  (0x49b04241 <undefined>)
0xffff914a8dc8  embedded object  (0x49b04241 <undefined>)
0xffff914a8dd0  embedded object  (0x49b04241 <undefined>)
0xffff914a8dd8  embedded object  (0x49b04241 <undefined>)
0xffff914a8de0  embedded object  (0x49b04241 <undefined>)
0xffff914a8de8  embedded object  (0x49b04241 <undefined>)
0xffff914a8df0  embedded object  (0x49b04241 <undefined>)
0xffff914a8df8  embedded object  (0x49b04241 <undefined>)
0xffff914a8e28  code target (STUB)  (0xffff91406820)
0xffff914a8e4c  code target (STUB)  (0xffff91406260)
0xffff914a8e58  code target (STUB)  (0xffff914068e0)
0xffff914a8e6c  constant pool (size 140)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff914a9780     0  ldur x6, [x1, #7]
0xffff914a9784     4  ldur w7, [x6, #11]
0xffff914a9788     8  adds w8, w7, #0x3 (3)
0xffff914a978c    12  b.vs #+0x1dc (addr 0xffff914a9968)
0xffff914a9790    16  movz w16, #0x95ff
0xffff914a9794    20  cmp w8, w16, lsl #1
0xffff914a9798    24  b.hs #+0x1e0 (addr 0xffff914a9978)
0xffff914a979c    28  lsl x9, x8, #32
0xffff914a97a0    32  lsl w10, w8, #3
0xffff914a97a4    36  add w10, w10, #0x10 (16)
0xffff914a97a8    40  sxtw x10, w10
0xffff914a97ac    44  movz x11, #0xf2c0
0xffff914a97b0    48  movk x11, #0x4117, lsl #16
0xffff914a97b4    52  ldp x13, x16, [x11]
0xffff914a97b8    56  adds x12, x13, x10
0xffff914a97bc    60  ccmp x12, x16, #nzCv, lo
0xffff914a97c0    64  b.hi #+0xf8 (addr 0xffff914a98b8)
0xffff914a97c4    68  str x12, [x11]
0xffff914a97c8    72  orr x13, x13, #0x1
0xffff914a97cc    76  ldr x10, pc+348 (addr 0x0000ffff914a9928)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914a97d0    80  stur x10, [x13, #-1]
0xffff914a97d4    84  stur x9, [x13, #7]
0xffff914a97d8    88  cmp w7, w8
0xffff914a97dc    92  b.ge #+0x18 (addr 0xffff914a97f4)
0xffff914a97e0    96  sub w8, w8, #0x1 (1)
0xffff914a97e4   100  ldr x9, pc+332 (addr 0x0000ffff914a9930)    ;; object: 0x49b04241 <undefined>
0xffff914a97e8   104  add x10, x13, #0xf (15)
0xffff914a97ec   108  str x9, [x10, w8, sxtw #3]
0xffff914a97f0   112  b #-0x18 (addr 0xffff914a97d8)
0xffff914a97f4   116  cmp w7, #0x0 (0)
0xffff914a97f8   120  b.le #+0x1c (addr 0xffff914a9814)
0xffff914a97fc   124  sub w7, w7, #0x1 (1)
0xffff914a9800   128  add x8, x6, #0xf (15)
0xffff914a9804   132  ldr x9, [x8, w7, sxtw #3]
0xffff914a9808   136  add x8, x13, #0xf (15)
0xffff914a980c   140  str x9, [x8, w7, sxtw #3]
0xffff914a9810   144  b #-0x1c (addr 0xffff914a97f4)
0xffff914a9814   148  stur x13, [x1, #7]
0xffff914a9818   152  add x6, x1, #0x7 (7)
0xffff914a981c   156  and x13, x1, #0xfffffffffff00000
0xffff914a9820   160  ldr x13, [x13, #8]
0xffff914a9824   164  tbz w13, #2, #+0x18 (addr 0xffff914a983c)
0xffff914a9828   168  sub csp, jssp, #0x8 (8)
0xffff914a982c   172  str lr, [jssp, #-8]!
0xffff914a9830   176  ldr x16, pc+264 (addr 0x0000ffff914a9938)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff914a9834   180  blr x16
0xffff914a9838   184  ldr lr, [jssp], #8
0xffff914a983c   188  tbz w0, #0, #+0x14c (addr 0xffff914a9988)
0xffff914a9840   192  mov x2, x0
0xffff914a9844   196  ldur x4, [x1, #7]
0xffff914a9848   200  stur x2, [x4, #63]
0xffff914a984c   204  add x3, x4, #0x3f (63)
0xffff914a9850   208  and x2, x2, #0xfffffffffff00000
0xffff914a9854   212  ldr x2, [x2, #8]
0xffff914a9858   216  tbz w2, #1, #+0x24 (addr 0xffff914a987c)
0xffff914a985c   220  and x2, x4, #0xfffffffffff00000
0xffff914a9860   224  ldr x2, [x2, #8]
0xffff914a9864   228  tbz w2, #2, #+0x18 (addr 0xffff914a987c)
0xffff914a9868   232  sub csp, jssp, #0x8 (8)
0xffff914a986c   236  str lr, [jssp, #-8]!
0xffff914a9870   240  ldr x16, pc+208 (addr 0x0000ffff914a9940)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914a9874   244  blr x16
0xffff914a9878   248  ldr lr, [jssp], #8
0xffff914a987c   252  stur x5, [x1, #-1]
0xffff914a9880   256  tbz w5, #0, #+0x34 (addr 0xffff914a98b4)
0xffff914a9884   260  sub x2, x1, #0x1 (1)
0xffff914a9888   264  and x5, x5, #0xfffffffffff00000
0xffff914a988c   268  ldr x5, [x5, #8]
0xffff914a9890   272  tbz w5, #1, #+0x24 (addr 0xffff914a98b4)
0xffff914a9894   276  and x5, x1, #0xfffffffffff00000
0xffff914a9898   280  ldr x5, [x5, #8]
0xffff914a989c   284  tbz w5, #2, #+0x18 (addr 0xffff914a98b4)
0xffff914a98a0   288  sub csp, jssp, #0x8 (8)
0xffff914a98a4   292  str lr, [jssp, #-8]!
0xffff914a98a8   296  ldr x16, pc+160 (addr 0x0000ffff914a9948)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914a98ac   300  blr x16
0xffff914a98b0   304  ldr lr, [jssp], #8
0xffff914a98b4   308  ret
0xffff914a98b8   312  sub csp, jssp, #0x10 (16)
0xffff914a98bc   316  stp fp, lr, [jssp, #-16]!
0xffff914a98c0   320  movz fp, #0xa00000000
0xffff914a98c4   324  sub csp, jssp, #0x8 (8)
0xffff914a98c8   328  str fp, [jssp, #-8]!
0xffff914a98cc   332  add fp, jssp, #0x8 (8)
0xffff914a98d0   336  movz x13, #0x0
0xffff914a98d4   340  mov x16, lr
0xffff914a98d8   344  ldr x17, pc+120 (addr 0x0000ffff914a9950)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914a98dc   348  blr x17
0xffff914a98e0   352  lsl x0, x10, #32
0xffff914a98e4   356  movz x10, #0x0
0xffff914a98e8   360  sub csp, jssp, #0x10 (16)
0xffff914a98ec   364  stp x10, x0, [jssp, #-16]!
0xffff914a98f0   368  movz x0, #0x2
0xffff914a98f4   372  movz x1, #0x5b88
0xffff914a98f8   376  movk x1, #0xe2, lsl #16
0xffff914a98fc   380  ldr x16, pc+92 (addr 0x0000ffff914a9958)    ;; code: STUB, CEntryStub, minor: 5
0xffff914a9900   384  blr x16
0xffff914a9904   388  str x0, [jssp, #104]
0xffff914a9908   392  ldr x16, pc+88 (addr 0x0000ffff914a9960)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914a990c   396  blr x16
0xffff914a9910   400  ldr lr, [jssp, #16]
0xffff914a9914   404  ldp xzr, fp, [jssp], #24
0xffff914a9918   408  b #-0x14c (addr 0xffff914a97cc)
0xffff914a991c   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff914a9920   416  d63f03e0       constant
0xffff914a9924   420  d503201f       constant
0xffff914a9928   424  36404259       constant
0xffff914a992c   428  00000000       constant
0xffff914a9930   432  49b04241       constant
0xffff914a9934   436  00000000       constant
0xffff914a9938   440  914370c0       constant
0xffff914a993c   444  0000ffff       constant
0xffff914a9940   448  914378a0       constant
0xffff914a9944   452  0000ffff       constant
0xffff914a9948   456  91438080       constant
0xffff914a994c   460  0000ffff       constant
0xffff914a9950   464  91406820       constant
0xffff914a9954   468  0000ffff       constant
0xffff914a9958   472  91406260       constant
0xffff914a995c   476  0000ffff       constant
0xffff914a9960   480  914068e0       constant
0xffff914a9964   484  0000ffff       constant
0xffff914a9968   488  movz x16, #0x0
0xffff914a996c   492  sub csp, jssp, #0x10 (16)
0xffff914a9970   496  stp fp, lr, [jssp, #-16]!
0xffff914a9974   500  bl #+0x24 (addr 0xffff914a9998)
0xffff914a9978   504  movz x16, #0x8
0xffff914a997c   508  sub csp, jssp, #0x10 (16)
0xffff914a9980   512  stp fp, lr, [jssp, #-16]!
0xffff914a9984   516  bl #+0x14 (addr 0xffff914a9998)
0xffff914a9988   520  movz x16, #0x10
0xffff914a998c   524  sub csp, jssp, #0x10 (16)
0xffff914a9990   528  stp fp, lr, [jssp, #-16]!
0xffff914a9994   532  bl #+0x4 (addr 0xffff914a9998)
0xffff914a9998   536  movz x17, #0xa00000000
0xffff914a999c   540  sub csp, jssp, #0x10 (16)
0xffff914a99a0   544  stp x17, cp, [jssp, #-16]!
0xffff914a99a4   548  add fp, jssp, #0x10 (16)
0xffff914a99a8   552  ldr x17, pc+24 (addr 0x0000ffff914a99c0)    ;; lazy deoptimization bailout 0
0xffff914a99ac   556  add x17, x17, x16
0xffff914a99b0   560  br x17
0xffff914a99b4   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914a99b8   568  d63f03e0       constant
0xffff914a99bc   572  d503201f       constant
0xffff914a99c0   576  91206000       constant
0xffff914a99c4   580  0000ffff       constant


Safepoints (size = 21)
0xffff914a9904   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff914a97cc  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914a97e4  embedded object  (0x49b04241 <undefined>)
0xffff914a9830  code target (STUB)  (0xffff914370c0)
0xffff914a9870  code target (STUB)  (0xffff914378a0)
0xffff914a98a8  code target (STUB)  (0xffff91438080)
0xffff914a98d8  code target (STUB)  (0xffff91406820)
0xffff914a98fc  code target (STUB)  (0xffff91406260)
0xffff914a9908  code target (STUB)  (0xffff914068e0)
0xffff914a991c  constant pool (size 76)
0xffff914a99a8  runtime entry
0xffff914a99b4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff914a9780     0  ldur x6, [x1, #7]
0xffff914a9784     4  ldur w7, [x6, #11]
0xffff914a9788     8  adds w8, w7, #0x3 (3)
0xffff914a978c    12  b.vs #+0x1dc (addr 0xffff914a9968)
0xffff914a9790    16  movz w16, #0x95ff
0xffff914a9794    20  cmp w8, w16, lsl #1
0xffff914a9798    24  b.hs #+0x1e0 (addr 0xffff914a9978)
0xffff914a979c    28  lsl x9, x8, #32
0xffff914a97a0    32  lsl w10, w8, #3
0xffff914a97a4    36  add w10, w10, #0x10 (16)
0xffff914a97a8    40  sxtw x10, w10
0xffff914a97ac    44  movz x11, #0xf2c0
0xffff914a97b0    48  movk x11, #0x4117, lsl #16
0xffff914a97b4    52  ldp x13, x16, [x11]
0xffff914a97b8    56  adds x12, x13, x10
0xffff914a97bc    60  ccmp x12, x16, #nzCv, lo
0xffff914a97c0    64  b.hi #+0xf8 (addr 0xffff914a98b8)
0xffff914a97c4    68  str x12, [x11]
0xffff914a97c8    72  orr x13, x13, #0x1
0xffff914a97cc    76  ldr x10, pc+348 (addr 0x0000ffff914a9928)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914a97d0    80  stur x10, [x13, #-1]
0xffff914a97d4    84  stur x9, [x13, #7]
0xffff914a97d8    88  cmp w7, w8
0xffff914a97dc    92  b.ge #+0x18 (addr 0xffff914a97f4)
0xffff914a97e0    96  sub w8, w8, #0x1 (1)
0xffff914a97e4   100  ldr x9, pc+332 (addr 0x0000ffff914a9930)    ;; object: 0x49b04241 <undefined>
0xffff914a97e8   104  add x10, x13, #0xf (15)
0xffff914a97ec   108  str x9, [x10, w8, sxtw #3]
0xffff914a97f0   112  b #-0x18 (addr 0xffff914a97d8)
0xffff914a97f4   116  cmp w7, #0x0 (0)
0xffff914a97f8   120  b.le #+0x1c (addr 0xffff914a9814)
0xffff914a97fc   124  sub w7, w7, #0x1 (1)
0xffff914a9800   128  add x8, x6, #0xf (15)
0xffff914a9804   132  ldr x9, [x8, w7, sxtw #3]
0xffff914a9808   136  add x8, x13, #0xf (15)
0xffff914a980c   140  str x9, [x8, w7, sxtw #3]
0xffff914a9810   144  b #-0x1c (addr 0xffff914a97f4)
0xffff914a9814   148  stur x13, [x1, #7]
0xffff914a9818   152  add x6, x1, #0x7 (7)
0xffff914a981c   156  and x13, x1, #0xfffffffffff00000
0xffff914a9820   160  ldr x13, [x13, #8]
0xffff914a9824   164  tbz w13, #2, #+0x18 (addr 0xffff914a983c)
0xffff914a9828   168  sub csp, jssp, #0x8 (8)
0xffff914a982c   172  str lr, [jssp, #-8]!
0xffff914a9830   176  ldr x16, pc+264 (addr 0x0000ffff914a9938)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff914a9834   180  blr x16
0xffff914a9838   184  ldr lr, [jssp], #8
0xffff914a983c   188  tbz w0, #0, #+0x14c (addr 0xffff914a9988)
0xffff914a9840   192  mov x2, x0
0xffff914a9844   196  ldur x4, [x1, #7]
0xffff914a9848   200  stur x2, [x4, #63]
0xffff914a984c   204  add x3, x4, #0x3f (63)
0xffff914a9850   208  and x2, x2, #0xfffffffffff00000
0xffff914a9854   212  ldr x2, [x2, #8]
0xffff914a9858   216  tbz w2, #1, #+0x24 (addr 0xffff914a987c)
0xffff914a985c   220  and x2, x4, #0xfffffffffff00000
0xffff914a9860   224  ldr x2, [x2, #8]
0xffff914a9864   228  tbz w2, #2, #+0x18 (addr 0xffff914a987c)
0xffff914a9868   232  sub csp, jssp, #0x8 (8)
0xffff914a986c   236  str lr, [jssp, #-8]!
0xffff914a9870   240  ldr x16, pc+208 (addr 0x0000ffff914a9940)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914a9874   244  blr x16
0xffff914a9878   248  ldr lr, [jssp], #8
0xffff914a987c   252  stur x5, [x1, #-1]
0xffff914a9880   256  tbz w5, #0, #+0x34 (addr 0xffff914a98b4)
0xffff914a9884   260  sub x2, x1, #0x1 (1)
0xffff914a9888   264  and x5, x5, #0xfffffffffff00000
0xffff914a988c   268  ldr x5, [x5, #8]
0xffff914a9890   272  tbz w5, #1, #+0x24 (addr 0xffff914a98b4)
0xffff914a9894   276  and x5, x1, #0xfffffffffff00000
0xffff914a9898   280  ldr x5, [x5, #8]
0xffff914a989c   284  tbz w5, #2, #+0x18 (addr 0xffff914a98b4)
0xffff914a98a0   288  sub csp, jssp, #0x8 (8)
0xffff914a98a4   292  str lr, [jssp, #-8]!
0xffff914a98a8   296  ldr x16, pc+160 (addr 0x0000ffff914a9948)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914a98ac   300  blr x16
0xffff914a98b0   304  ldr lr, [jssp], #8
0xffff914a98b4   308  ret
0xffff914a98b8   312  sub csp, jssp, #0x10 (16)
0xffff914a98bc   316  stp fp, lr, [jssp, #-16]!
0xffff914a98c0   320  movz fp, #0xa00000000
0xffff914a98c4   324  sub csp, jssp, #0x8 (8)
0xffff914a98c8   328  str fp, [jssp, #-8]!
0xffff914a98cc   332  add fp, jssp, #0x8 (8)
0xffff914a98d0   336  movz x13, #0x0
0xffff914a98d4   340  mov x16, lr
0xffff914a98d8   344  ldr x17, pc+120 (addr 0x0000ffff914a9950)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914a98dc   348  blr x17
0xffff914a98e0   352  lsl x0, x10, #32
0xffff914a98e4   356  movz x10, #0x0
0xffff914a98e8   360  sub csp, jssp, #0x10 (16)
0xffff914a98ec   364  stp x10, x0, [jssp, #-16]!
0xffff914a98f0   368  movz x0, #0x2
0xffff914a98f4   372  movz x1, #0x5b88
0xffff914a98f8   376  movk x1, #0xe2, lsl #16
0xffff914a98fc   380  ldr x16, pc+92 (addr 0x0000ffff914a9958)    ;; code: STUB, CEntryStub, minor: 5
0xffff914a9900   384  blr x16
0xffff914a9904   388  str x0, [jssp, #104]
0xffff914a9908   392  ldr x16, pc+88 (addr 0x0000ffff914a9960)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914a990c   396  blr x16
0xffff914a9910   400  ldr lr, [jssp, #16]
0xffff914a9914   404  ldp xzr, fp, [jssp], #24
0xffff914a9918   408  b #-0x14c (addr 0xffff914a97cc)
0xffff914a991c   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff914a9920   416  d63f03e0       constant
0xffff914a9924   420  d503201f       constant
0xffff914a9928   424  36404259       constant
0xffff914a992c   428  00000000       constant
0xffff914a9930   432  49b04241       constant
0xffff914a9934   436  00000000       constant
0xffff914a9938   440  914370c0       constant
0xffff914a993c   444  0000ffff       constant
0xffff914a9940   448  914378a0       constant
0xffff914a9944   452  0000ffff       constant
0xffff914a9948   456  91438080       constant
0xffff914a994c   460  0000ffff       constant
0xffff914a9950   464  91406820       constant
0xffff914a9954   468  0000ffff       constant
0xffff914a9958   472  91406260       constant
0xffff914a995c   476  0000ffff       constant
0xffff914a9960   480  914068e0       constant
0xffff914a9964   484  0000ffff       constant
0xffff914a9968   488  movz x16, #0x0
0xffff914a996c   492  sub csp, jssp, #0x10 (16)
0xffff914a9970   496  stp fp, lr, [jssp, #-16]!
0xffff914a9974   500  bl #+0x24 (addr 0xffff914a9998)
0xffff914a9978   504  movz x16, #0x8
0xffff914a997c   508  sub csp, jssp, #0x10 (16)
0xffff914a9980   512  stp fp, lr, [jssp, #-16]!
0xffff914a9984   516  bl #+0x14 (addr 0xffff914a9998)
0xffff914a9988   520  movz x16, #0x10
0xffff914a998c   524  sub csp, jssp, #0x10 (16)
0xffff914a9990   528  stp fp, lr, [jssp, #-16]!
0xffff914a9994   532  bl #+0x4 (addr 0xffff914a9998)
0xffff914a9998   536  movz x17, #0xa00000000
0xffff914a999c   540  sub csp, jssp, #0x10 (16)
0xffff914a99a0   544  stp x17, cp, [jssp, #-16]!
0xffff914a99a4   548  add fp, jssp, #0x10 (16)
0xffff914a99a8   552  ldr x17, pc+24 (addr 0x0000ffff914a99c0)    ;; lazy deoptimization bailout 0
0xffff914a99ac   556  add x17, x17, x16
0xffff914a99b0   560  br x17
0xffff914a99b4   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914a99b8   568  d63f03e0       constant
0xffff914a99bc   572  d503201f       constant
0xffff914a99c0   576  91206000       constant
0xffff914a99c4   580  0000ffff       constant


Safepoints (size = 21)
0xffff914a9904   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff914a97cc  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914a97e4  embedded object  (0x49b04241 <undefined>)
0xffff914a9830  code target (STUB)  (0xffff914370c0)
0xffff914a9870  code target (STUB)  (0xffff914378a0)
0xffff914a98a8  code target (STUB)  (0xffff91438080)
0xffff914a98d8  code target (STUB)  (0xffff91406820)
0xffff914a98fc  code target (STUB)  (0xffff91406260)
0xffff914a9908  code target (STUB)  (0xffff914068e0)
0xffff914a991c  constant pool (size 76)
0xffff914a99a8  runtime entry
0xffff914a99b4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/process/promises
compiler = unknown
Instructions (size = 184)
0xffff914a9a40     0  sub csp, jssp, #0x8 (8)
0xffff914a9a44     4  str x3, [jssp, #-8]!
0xffff914a9a48     8  sub csp, jssp, #0x8 (8)
0xffff914a9a4c    12  str x4, [jssp, #-8]!
0xffff914a9a50    16  ldr x3, pc+112 (addr 0x0000ffff914a9ac0)    ;; object: 0x49b63e59 Cell for 0
0xffff914a9a54    20  ldur x3, [x3, #7]
0xffff914a9a58    24  cmp x3, #0x0 (0)
0xffff914a9a5c    28  b.ne #+0x44 (addr 0xffff914a9aa0)
0xffff914a9a60    32  tbz w0, #0, #+0x40 (addr 0xffff914a9aa0)
0xffff914a9a64    36  ldur x3, [x0, #-1]
0xffff914a9a68    40  ldr x4, pc+96 (addr 0x0000ffff914a9ac8)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914a9a6c    44  ldur x4, [x4, #7]
0xffff914a9a70    48  cmp x3, x4
0xffff914a9a74    52  b.ne #+0x2c (addr 0xffff914a9aa0)
0xffff914a9a78    56  ldr x5, pc+88 (addr 0x0000ffff914a9ad0)    ;; object: 0x49bf78b1 WeakCell for 0x36427c49 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914a9a7c    60  ldur x5, [x5, #7]
0xffff914a9a80    64  tbz w5, #0, #+0x20 (addr 0xffff914a9aa0)
0xffff914a9a84    68  ldursw x4, [x5, #15]
0xffff914a9a88    72  tbnz w4, #23, #+0x18 (addr 0xffff914a9aa0)
0xffff914a9a8c    76  ldr x4, [jssp], #8
0xffff914a9a90    80  ldr x3, [jssp], #8
0xffff914a9a94    84  ldr x2, pc+68 (addr 0x0000ffff914a9ad8)    ;; object: 0x49bbe351 <String[25]: internal/process/promises>
0xffff914a9a98    88  ldr x16, pc+72 (addr 0x0000ffff914a9ae0)    ;; code: HANDLER, StoreTransitionStub, minor: 327688
0xffff914a9a9c    92  br x16
0xffff914a9aa0    96  ldr x2, pc+72 (addr 0x0000ffff914a9ae8)    ;; object: 0x49bbe351 <String[25]: internal/process/promises>
0xffff914a9aa4   100  ldr x4, [jssp], #8
0xffff914a9aa8   104  ldr x3, [jssp], #8
0xffff914a9aac   108  ldr x16, pc+68 (addr 0x0000ffff914a9af0)    ;; code: BUILTIN
0xffff914a9ab0   112  br x16
0xffff914a9ab4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914a9ab8   120  d63f03e0       constant
0xffff914a9abc   124  d503201f       constant
0xffff914a9ac0   128  49b63e59       constant
0xffff914a9ac4   132  00000000       constant
0xffff914a9ac8   136  49bc22b1       constant
0xffff914a9acc   140  00000000       constant
0xffff914a9ad0   144  49bf78b1       constant
0xffff914a9ad4   148  00000000       constant
0xffff914a9ad8   152  49bbe351       constant
0xffff914a9adc   156  00000000       constant
0xffff914a9ae0   160  914a9780       constant
0xffff914a9ae4   164  0000ffff       constant
0xffff914a9ae8   168  49bbe351       constant
0xffff914a9aec   172  00000000       constant
0xffff914a9af0   176  91422420       constant
0xffff914a9af4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914a9a50  embedded object  (0x49b63e59 Cell for 0)
0xffff914a9a68  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914a9a78  embedded object  (0x49bf78b1 WeakCell for 0x36427c49 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914a9a94  embedded object  (0x49bbe351 <String[25]: internal/process/promises>)
0xffff914a9a98  code target (HANDLER)  (0xffff914a9780)
0xffff914a9aa0  embedded object  (0x49bbe351 <String[25]: internal/process/promises>)
0xffff914a9aac  code target (BUILTIN)  (0xffff91422420)
0xffff914a9ab4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = WeakMap
compiler = unknown
Instructions (size = 120)
0xffff914aa120     0  sub csp, jssp, #0x8 (8)
0xffff914aa124     4  str x3, [jssp, #-8]!
0xffff914aa128     8  sub csp, jssp, #0x8 (8)
0xffff914aa12c    12  str x0, [jssp, #-8]!
0xffff914aa130    16  ldr x0, pc+80 (addr 0x0000ffff914aa180)    ;; object: 0x49bc5d51 Cell for 0
0xffff914aa134    20  ldur x0, [x0, #7]
0xffff914aa138    24  cmp x0, #0x0 (0)
0xffff914aa13c    28  b.ne #+0x2c (addr 0xffff914aa168)
0xffff914aa140    32  ldr x0, pc+72 (addr 0x0000ffff914aa188)    ;; object: 0x49bf8569 WeakCell for 0x49b491f9 PropertyCell for 0x49b49191 <JS Function WeakMap (SharedFunctionInfo 0x49b490e9)>
0xffff914aa144    36  ldur x0, [x0, #7]
0xffff914aa148    40  tbz w0, #0, #+0x20 (addr 0xffff914aa168)
0xffff914aa14c    44  ldur x0, [x0, #15]
0xffff914aa150    48  ldr x16, [x26, #88]
0xffff914aa154    52  cmp x0, x16
0xffff914aa158    56  b.eq #+0x10 (addr 0xffff914aa168)
0xffff914aa15c    60  add jssp, jssp, #0x10 (16)
0xffff914aa160    64  ret
0xffff914aa164    68  b #+0x14 (addr 0xffff914aa178)
0xffff914aa168    72  ldr x0, [jssp], #8
0xffff914aa16c    76  ldr x3, [jssp], #8
0xffff914aa170    80  ldr x16, pc+32 (addr 0x0000ffff914aa190)    ;; code: BUILTIN
0xffff914aa174    84  br x16
0xffff914aa178    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914aa17c    92  d63f03e0       constant
0xffff914aa180    96  49bc5d51       constant
0xffff914aa184   100  00000000       constant
0xffff914aa188   104  49bf8569       constant
0xffff914aa18c   108  00000000       constant
0xffff914aa190   112  914222e0       constant
0xffff914aa194   116  0000ffff       constant


RelocInfo (size = 9)
0xffff914aa130  embedded object  (0x49bc5d51 Cell for 0)
0xffff914aa140  embedded object  (0x49bf8569 WeakCell for 0x49b491f9 PropertyCell for 0x49b49191 <JS Function WeakMap (SharedFunctionInfo 0x49b490e9)>)
0xffff914aa170  code target (BUILTIN)  (0xffff914222e0)
0xffff914aa178  constant pool (size 32)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914aa500     0  tbz w0, #0, #+0x98 (addr 0xffff914aa598)
0xffff914aa504     4  mov x2, x0
0xffff914aa508     8  ldur x4, [x1, #7]
0xffff914aa50c    12  stur x2, [x4, #71]
0xffff914aa510    16  add x3, x4, #0x47 (71)
0xffff914aa514    20  and x2, x2, #0xfffffffffff00000
0xffff914aa518    24  ldr x2, [x2, #8]
0xffff914aa51c    28  tbz w2, #1, #+0x24 (addr 0xffff914aa540)
0xffff914aa520    32  and x2, x4, #0xfffffffffff00000
0xffff914aa524    36  ldr x2, [x2, #8]
0xffff914aa528    40  tbz w2, #2, #+0x18 (addr 0xffff914aa540)
0xffff914aa52c    44  sub csp, jssp, #0x8 (8)
0xffff914aa530    48  str lr, [jssp, #-8]!
0xffff914aa534    52  ldr x16, pc+84 (addr 0x0000ffff914aa588)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914aa538    56  blr x16
0xffff914aa53c    60  ldr lr, [jssp], #8
0xffff914aa540    64  stur x5, [x1, #-1]
0xffff914aa544    68  tbz w5, #0, #+0x34 (addr 0xffff914aa578)
0xffff914aa548    72  sub x2, x1, #0x1 (1)
0xffff914aa54c    76  and x5, x5, #0xfffffffffff00000
0xffff914aa550    80  ldr x5, [x5, #8]
0xffff914aa554    84  tbz w5, #1, #+0x24 (addr 0xffff914aa578)
0xffff914aa558    88  and x5, x1, #0xfffffffffff00000
0xffff914aa55c    92  ldr x5, [x5, #8]
0xffff914aa560    96  tbz w5, #2, #+0x18 (addr 0xffff914aa578)
0xffff914aa564   100  sub csp, jssp, #0x8 (8)
0xffff914aa568   104  str lr, [jssp, #-8]!
0xffff914aa56c   108  ldr x16, pc+36 (addr 0x0000ffff914aa590)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914aa570   112  blr x16
0xffff914aa574   116  ldr lr, [jssp], #8
0xffff914aa578   120  ret
0xffff914aa57c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914aa580   128  d63f03e0       constant
0xffff914aa584   132  d503201f       constant
0xffff914aa588   136  914378a0       constant
0xffff914aa58c   140  0000ffff       constant
0xffff914aa590   144  91438080       constant
0xffff914aa594   148  0000ffff       constant
0xffff914aa598   152  movz x16, #0x0
0xffff914aa59c   156  sub csp, jssp, #0x10 (16)
0xffff914aa5a0   160  stp fp, lr, [jssp, #-16]!
0xffff914aa5a4   164  bl #+0x4 (addr 0xffff914aa5a8)
0xffff914aa5a8   168  movz x17, #0xa00000000
0xffff914aa5ac   172  sub csp, jssp, #0x10 (16)
0xffff914aa5b0   176  stp x17, cp, [jssp, #-16]!
0xffff914aa5b4   180  add fp, jssp, #0x10 (16)
0xffff914aa5b8   184  ldr x17, pc+24 (addr 0x0000ffff914aa5d0)    ;; lazy deoptimization bailout 0
0xffff914aa5bc   188  add x17, x17, x16
0xffff914aa5c0   192  br x17
0xffff914aa5c4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914aa5c8   200  d63f03e0       constant
0xffff914aa5cc   204  d503201f       constant
0xffff914aa5d0   208  91206000       constant
0xffff914aa5d4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914aa534  code target (STUB)  (0xffff914378a0)
0xffff914aa56c  code target (STUB)  (0xffff91438080)
0xffff914aa57c  constant pool (size 28)
0xffff914aa5b8  runtime entry
0xffff914aa5c4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914aa500     0  tbz w0, #0, #+0x98 (addr 0xffff914aa598)
0xffff914aa504     4  mov x2, x0
0xffff914aa508     8  ldur x4, [x1, #7]
0xffff914aa50c    12  stur x2, [x4, #71]
0xffff914aa510    16  add x3, x4, #0x47 (71)
0xffff914aa514    20  and x2, x2, #0xfffffffffff00000
0xffff914aa518    24  ldr x2, [x2, #8]
0xffff914aa51c    28  tbz w2, #1, #+0x24 (addr 0xffff914aa540)
0xffff914aa520    32  and x2, x4, #0xfffffffffff00000
0xffff914aa524    36  ldr x2, [x2, #8]
0xffff914aa528    40  tbz w2, #2, #+0x18 (addr 0xffff914aa540)
0xffff914aa52c    44  sub csp, jssp, #0x8 (8)
0xffff914aa530    48  str lr, [jssp, #-8]!
0xffff914aa534    52  ldr x16, pc+84 (addr 0x0000ffff914aa588)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914aa538    56  blr x16
0xffff914aa53c    60  ldr lr, [jssp], #8
0xffff914aa540    64  stur x5, [x1, #-1]
0xffff914aa544    68  tbz w5, #0, #+0x34 (addr 0xffff914aa578)
0xffff914aa548    72  sub x2, x1, #0x1 (1)
0xffff914aa54c    76  and x5, x5, #0xfffffffffff00000
0xffff914aa550    80  ldr x5, [x5, #8]
0xffff914aa554    84  tbz w5, #1, #+0x24 (addr 0xffff914aa578)
0xffff914aa558    88  and x5, x1, #0xfffffffffff00000
0xffff914aa55c    92  ldr x5, [x5, #8]
0xffff914aa560    96  tbz w5, #2, #+0x18 (addr 0xffff914aa578)
0xffff914aa564   100  sub csp, jssp, #0x8 (8)
0xffff914aa568   104  str lr, [jssp, #-8]!
0xffff914aa56c   108  ldr x16, pc+36 (addr 0x0000ffff914aa590)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914aa570   112  blr x16
0xffff914aa574   116  ldr lr, [jssp], #8
0xffff914aa578   120  ret
0xffff914aa57c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914aa580   128  d63f03e0       constant
0xffff914aa584   132  d503201f       constant
0xffff914aa588   136  914378a0       constant
0xffff914aa58c   140  0000ffff       constant
0xffff914aa590   144  91438080       constant
0xffff914aa594   148  0000ffff       constant
0xffff914aa598   152  movz x16, #0x0
0xffff914aa59c   156  sub csp, jssp, #0x10 (16)
0xffff914aa5a0   160  stp fp, lr, [jssp, #-16]!
0xffff914aa5a4   164  bl #+0x4 (addr 0xffff914aa5a8)
0xffff914aa5a8   168  movz x17, #0xa00000000
0xffff914aa5ac   172  sub csp, jssp, #0x10 (16)
0xffff914aa5b0   176  stp x17, cp, [jssp, #-16]!
0xffff914aa5b4   180  add fp, jssp, #0x10 (16)
0xffff914aa5b8   184  ldr x17, pc+24 (addr 0x0000ffff914aa5d0)    ;; lazy deoptimization bailout 0
0xffff914aa5bc   188  add x17, x17, x16
0xffff914aa5c0   192  br x17
0xffff914aa5c4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914aa5c8   200  d63f03e0       constant
0xffff914aa5cc   204  d503201f       constant
0xffff914aa5d0   208  91206000       constant
0xffff914aa5d4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914aa534  code target (STUB)  (0xffff914378a0)
0xffff914aa56c  code target (STUB)  (0xffff91438080)
0xffff914aa57c  constant pool (size 28)
0xffff914aa5b8  runtime entry
0xffff914aa5c4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/process/stdio
compiler = unknown
Instructions (size = 184)
0xffff914aa640     0  sub csp, jssp, #0x8 (8)
0xffff914aa644     4  str x3, [jssp, #-8]!
0xffff914aa648     8  sub csp, jssp, #0x8 (8)
0xffff914aa64c    12  str x4, [jssp, #-8]!
0xffff914aa650    16  ldr x3, pc+112 (addr 0x0000ffff914aa6c0)    ;; object: 0x49b63e59 Cell for 0
0xffff914aa654    20  ldur x3, [x3, #7]
0xffff914aa658    24  cmp x3, #0x0 (0)
0xffff914aa65c    28  b.ne #+0x44 (addr 0xffff914aa6a0)
0xffff914aa660    32  tbz w0, #0, #+0x40 (addr 0xffff914aa6a0)
0xffff914aa664    36  ldur x3, [x0, #-1]
0xffff914aa668    40  ldr x4, pc+96 (addr 0x0000ffff914aa6c8)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914aa66c    44  ldur x4, [x4, #7]
0xffff914aa670    48  cmp x3, x4
0xffff914aa674    52  b.ne #+0x2c (addr 0xffff914aa6a0)
0xffff914aa678    56  ldr x5, pc+88 (addr 0x0000ffff914aa6d0)    ;; object: 0x49bf8dd1 WeakCell for 0x36427da9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914aa67c    60  ldur x5, [x5, #7]
0xffff914aa680    64  tbz w5, #0, #+0x20 (addr 0xffff914aa6a0)
0xffff914aa684    68  ldursw x4, [x5, #15]
0xffff914aa688    72  tbnz w4, #23, #+0x18 (addr 0xffff914aa6a0)
0xffff914aa68c    76  ldr x4, [jssp], #8
0xffff914aa690    80  ldr x3, [jssp], #8
0xffff914aa694    84  ldr x2, pc+68 (addr 0x0000ffff914aa6d8)    ;; object: 0x49bb97b9 <String[22]: internal/process/stdio>
0xffff914aa698    88  ldr x16, pc+72 (addr 0x0000ffff914aa6e0)    ;; code: HANDLER, StoreTransitionStub, minor: 196617
0xffff914aa69c    92  br x16
0xffff914aa6a0    96  ldr x2, pc+72 (addr 0x0000ffff914aa6e8)    ;; object: 0x49bb97b9 <String[22]: internal/process/stdio>
0xffff914aa6a4   100  ldr x4, [jssp], #8
0xffff914aa6a8   104  ldr x3, [jssp], #8
0xffff914aa6ac   108  ldr x16, pc+68 (addr 0x0000ffff914aa6f0)    ;; code: BUILTIN
0xffff914aa6b0   112  br x16
0xffff914aa6b4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914aa6b8   120  d63f03e0       constant
0xffff914aa6bc   124  d503201f       constant
0xffff914aa6c0   128  49b63e59       constant
0xffff914aa6c4   132  00000000       constant
0xffff914aa6c8   136  49bc22b1       constant
0xffff914aa6cc   140  00000000       constant
0xffff914aa6d0   144  49bf8dd1       constant
0xffff914aa6d4   148  00000000       constant
0xffff914aa6d8   152  49bb97b9       constant
0xffff914aa6dc   156  00000000       constant
0xffff914aa6e0   160  914aa500       constant
0xffff914aa6e4   164  0000ffff       constant
0xffff914aa6e8   168  49bb97b9       constant
0xffff914aa6ec   172  00000000       constant
0xffff914aa6f0   176  91422420       constant
0xffff914aa6f4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914aa650  embedded object  (0x49b63e59 Cell for 0)
0xffff914aa668  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914aa678  embedded object  (0x49bf8dd1 WeakCell for 0x36427da9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914aa694  embedded object  (0x49bb97b9 <String[22]: internal/process/stdio>)
0xffff914aa698  code target (HANDLER)  (0xffff914aa500)
0xffff914aa6a0  embedded object  (0x49bb97b9 <String[22]: internal/process/stdio>)
0xffff914aa6ac  code target (BUILTIN)  (0xffff91422420)
0xffff914aa6b4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = newListener
compiler = unknown
Instructions (size = 144)
0xffff914ab640     0  sub csp, jssp, #0x8 (8)
0xffff914ab644     4  str x3, [jssp, #-8]!
0xffff914ab648     8  sub csp, jssp, #0x8 (8)
0xffff914ab64c    12  str x4, [jssp, #-8]!
0xffff914ab650    16  ldr x5, pc+88 (addr 0x0000ffff914ab6a8)    ;; object: 0x49bfabf9 WeakCell for 0x36427e01 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914ab654    20  ldur x5, [x5, #7]
0xffff914ab658    24  tbz w5, #0, #+0x30 (addr 0xffff914ab688)
0xffff914ab65c    28  ldursw x4, [x5, #15]
0xffff914ab660    32  tbnz w4, #23, #+0x28 (addr 0xffff914ab688)
0xffff914ab664    36  ldur x4, [x5, #47]
0xffff914ab668    40  ldur x4, [x4, #71]
0xffff914ab66c    44  cmp x0, x4
0xffff914ab670    48  b.ne #+0x18 (addr 0xffff914ab688)
0xffff914ab674    52  ldr x4, [jssp], #8
0xffff914ab678    56  ldr x3, [jssp], #8
0xffff914ab67c    60  ldr x2, pc+52 (addr 0x0000ffff914ab6b0)    ;; object: 0x49bc3819 <String[11]: newListener>
0xffff914ab680    64  ldr x16, pc+56 (addr 0x0000ffff914ab6b8)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff914ab684    68  br x16
0xffff914ab688    72  ldr x2, pc+56 (addr 0x0000ffff914ab6c0)    ;; object: 0x49bc3819 <String[11]: newListener>
0xffff914ab68c    76  ldr x4, [jssp], #8
0xffff914ab690    80  ldr x3, [jssp], #8
0xffff914ab694    84  ldr x16, pc+52 (addr 0x0000ffff914ab6c8)    ;; code: BUILTIN
0xffff914ab698    88  br x16
0xffff914ab69c    92  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff914ab6a0    96  d63f03e0       constant
0xffff914ab6a4   100  d503201f       constant
0xffff914ab6a8   104  49bfabf9       constant
0xffff914ab6ac   108  00000000       constant
0xffff914ab6b0   112  49bc3819       constant
0xffff914ab6b4   116  00000000       constant
0xffff914ab6b8   120  9143cea0       constant
0xffff914ab6bc   124  0000ffff       constant
0xffff914ab6c0   128  49bc3819       constant
0xffff914ab6c4   132  00000000       constant
0xffff914ab6c8   136  91422420       constant
0xffff914ab6cc   140  0000ffff       constant


RelocInfo (size = 11)
0xffff914ab650  embedded object  (0x49bfabf9 WeakCell for 0x36427e01 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914ab67c  embedded object  (0x49bc3819 <String[11]: newListener>)
0xffff914ab680  code target (HANDLER)  (0xffff9143cea0)
0xffff914ab688  embedded object  (0x49bc3819 <String[11]: newListener>)
0xffff914ab694  code target (BUILTIN)  (0xffff91422420)
0xffff914ab69c  constant pool (size 52)

kind = STUB
major_key = FastNewStrictArgumentsStub
name = FastNewStrictArgumentsStub
compiler = unknown
Instructions (size = 336)
0xffff914ab740     0  mov x2, fp
0xffff914ab744     4  b #+0x8 (addr 0xffff914ab74c)
0xffff914ab748     8  ldr x2, [x2]
0xffff914ab74c    12  ldur x3, [x2, #-16]
0xffff914ab750    16  cmp x3, x1
0xffff914ab754    20  b.ne #-0xc (addr 0xffff914ab748)
0xffff914ab758    24  ldr x3, [x2]
0xffff914ab75c    28  ldur x4, [x3, #-8]
0xffff914ab760    32  movz x16, #0xe00000000
0xffff914ab764    36  cmp x4, x16
0xffff914ab768    40  b.eq #+0x18 (addr 0xffff914ab780)
0xffff914ab76c    44  ldur x1, [x1, #31]
0xffff914ab770    48  ldursw x0, [x1, #99]
0xffff914ab774    52  add x2, x2, x0, lsl #3
0xffff914ab778    56  add x2, x2, #0x8 (8)
0xffff914ab77c    60  b #+0x10 (addr 0xffff914ab78c)
0xffff914ab780    64  ldursw x0, [x3, #-20]
0xffff914ab784    68  add x2, x3, x0, lsl #3
0xffff914ab788    72  add x2, x2, #0x8 (8)
0xffff914ab78c    76  movz x1, #0x30
0xffff914ab790    80  add x1, x1, x0, lsl #3
0xffff914ab794    84  ldr x5, pc+220 (addr 0x0000ffff914ab870)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff914ab798    88  ldp x3, x16, [x5]
0xffff914ab79c    92  adds x4, x3, x1
0xffff914ab7a0    96  ccmp x4, x16, #nzCv, lo
0xffff914ab7a4   100  b.hi #+0x64 (addr 0xffff914ab808)
0xffff914ab7a8   104  str x4, [x5]
0xffff914ab7ac   108  orr x3, x3, #0x1
0xffff914ab7b0   112  lsl x6, x0, #32
0xffff914ab7b4   116  ldr x1, [x26, #224]
0xffff914ab7b8   120  stur x1, [x3, #-1]
0xffff914ab7bc   124  stur x6, [x3, #7]
0xffff914ab7c0   128  add x4, x3, #0x10 (16)
0xffff914ab7c4   132  add x0, x4, x0, lsl #3
0xffff914ab7c8   136  cmp x4, x0
0xffff914ab7cc   140  b.eq #+0x18 (addr 0xffff914ab7e4)
0xffff914ab7d0   144  ldr x5, [x2]
0xffff914ab7d4   148  stur x5, [x4, #-1]
0xffff914ab7d8   152  sub x2, x2, #0x8 (8)
0xffff914ab7dc   156  add x4, x4, #0x8 (8)
0xffff914ab7e0   160  b #-0x18 (addr 0xffff914ab7c8)
0xffff914ab7e4   164  ldur x1, [cp, #39]
0xffff914ab7e8   168  movz x16, #0x2c7
0xffff914ab7ec   172  ldr x1, [x1, x16]
0xffff914ab7f0   176  stur x1, [x0, #-1]
0xffff914ab7f4   180  ldr x1, [x26, #304]
0xffff914ab7f8   184  stur x1, [x0, #7]
0xffff914ab7fc   188  stur x3, [x0, #15]
0xffff914ab800   192  stur x6, [x0, #23]
0xffff914ab804   196  ret
0xffff914ab808   200  movz x16, #0xc00000000
0xffff914ab80c   204  sub csp, jssp, #0x10 (16)
0xffff914ab810   208  stp fp, lr, [jssp, #-16]!
0xffff914ab814   212  sub csp, jssp, #0x10 (16)
0xffff914ab818   216  str x16, [jssp, #-8]!
0xffff914ab81c   220  ldr x17, pc+92 (addr 0x0000ffff914ab878)    ;; object: 0xffff914ab6e1 <Code: STUB>
0xffff914ab820   224  sub csp, jssp, #0x10 (16)
0xffff914ab824   228  str x17, [jssp, #-8]!
0xffff914ab828   232  add fp, jssp, #0x10 (16)
0xffff914ab82c   236  lsl x0, x0, #32
0xffff914ab830   240  lsl x1, x1, #32
0xffff914ab834   244  sub csp, jssp, #0x18 (24)
0xffff914ab838   248  stp x1, x2, [jssp, #-24]!
0xffff914ab83c   252  str x0, [jssp, #16]
0xffff914ab840   256  movz x0, #0x1
0xffff914ab844   260  ldr x1, pc+60 (addr 0x0000ffff914ab880)    ;; external reference (Runtime::AllocateInNewSpace)
0xffff914ab848   264  ldr x16, pc+64 (addr 0x0000ffff914ab888)    ;; code: STUB, CEntryStub, minor: 4
0xffff914ab84c   268  blr x16
0xffff914ab850   272  mov x3, x0
0xffff914ab854   276  ldp x2, x0, [jssp], #16
0xffff914ab858   280  asr x0, x0, #32
0xffff914ab85c   284  mov jssp, fp
0xffff914ab860   288  ldp fp, lr, [jssp], #16
0xffff914ab864   292  b #-0xb4 (addr 0xffff914ab7b0)
0xffff914ab868   296  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914ab86c   300  d63f03e0       constant
0xffff914ab870   304  4117f2c0       constant
0xffff914ab874   308  00000000       constant
0xffff914ab878   312  914ab6e1       constant
0xffff914ab87c   316  0000ffff       constant
0xffff914ab880   320  00e25898       constant
0xffff914ab884   324  00000000       constant
0xffff914ab888   328  91406060       constant
0xffff914ab88c   332  0000ffff       constant


RelocInfo (size = 16)
0xffff914ab794  external reference (Heap::NewSpaceAllocationTopAddress())  (0x4117f2c0)
0xffff914ab81c  embedded object  (0xffff914ab6e1 <Code: STUB>)
0xffff914ab844  external reference (Runtime::AllocateInNewSpace)  (0xe25898)
0xffff914ab848  code target (STUB)  (0xffff91406060)
0xffff914ab868  constant pool (size 40)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393222
name = CallICStub(args(6), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff914ab900     0  add x4, x2, x3, asr #29
0xffff914ab904     4  ldur x4, [x4, #15]
0xffff914ab908     8  ldur x5, [x4, #7]
0xffff914ab90c    12  cmp x5, x1
0xffff914ab910    16  b.ne #+0x2c (addr 0xffff914ab93c)
0xffff914ab914    20  tbz w1, #0, #+0x28 (addr 0xffff914ab93c)
0xffff914ab918    24  add x2, x2, x3, asr #29
0xffff914ab91c    28  add x2, x2, #0x18 (24)
0xffff914ab920    32  ldur x3, [x2, #-1]
0xffff914ab924    36  movz x16, #0x200000000
0xffff914ab928    40  add x3, x3, x16
0xffff914ab92c    44  stur x3, [x2, #-1]
0xffff914ab930    48  movz x0, #0x6
0xffff914ab934    52  ldr x16, pc+372 (addr 0x0000ffff914abaa8)    ;; code: BUILTIN
0xffff914ab938    56  br x16
0xffff914ab93c    60  ldr x16, [x26, #2400]
0xffff914ab940    64  cmp x4, x16
0xffff914ab944    68  b.eq #+0x78 (addr 0xffff914ab9bc)
0xffff914ab948    72  ldur x5, [x4, #-1]
0xffff914ab94c    76  ldr x16, [x26, #2736]
0xffff914ab950    80  cmp x5, x16
0xffff914ab954    84  b.ne #+0x40 (addr 0xffff914ab994)
0xffff914ab958    88  ldur x5, [cp, #39]
0xffff914ab95c    92  ldur x5, [x5, #95]
0xffff914ab960    96  cmp x1, x5
0xffff914ab964   100  b.ne #+0xec (addr 0xffff914aba50)
0xffff914ab968   104  movz x0, #0x6
0xffff914ab96c   108  add x2, x2, x3, asr #29
0xffff914ab970   112  add x2, x2, #0x18 (24)
0xffff914ab974   116  ldur x3, [x2, #-1]
0xffff914ab978   120  movz x16, #0x200000000
0xffff914ab97c   124  add x3, x3, x16
0xffff914ab980   128  stur x3, [x2, #-1]
0xffff914ab984   132  mov x2, x4
0xffff914ab988   136  mov x3, x1
0xffff914ab98c   140  ldr x16, pc+292 (addr 0x0000ffff914abab0)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff914ab990   144  br x16
0xffff914ab994   148  ldr x16, [x26, #2568]
0xffff914ab998   152  cmp x4, x16
0xffff914ab99c   156  b.eq #+0xb4 (addr 0xffff914aba50)
0xffff914ab9a0   160  ldur x5, [x4, #-1]
0xffff914ab9a4   164  ldrb w5, [x5, #11]
0xffff914ab9a8   168  cmp x5, #0xc9 (201)
0xffff914ab9ac   172  b.ne #+0xa4 (addr 0xffff914aba50)
0xffff914ab9b0   176  add x4, x2, x3, asr #29
0xffff914ab9b4   180  ldr x5, [x26, #2400]
0xffff914ab9b8   184  stur x5, [x4, #15]
0xffff914ab9bc   188  movz x0, #0x6
0xffff914ab9c0   192  ldr x16, pc+248 (addr 0x0000ffff914abab8)    ;; code: BUILTIN
0xffff914ab9c4   196  br x16
0xffff914ab9c8   200  tbz w1, #0, #+0x88 (addr 0xffff914aba50)
0xffff914ab9cc   204  ldur x5, [x1, #-1]
0xffff914ab9d0   208  ldrb w5, [x5, #11]
0xffff914ab9d4   212  cmp x5, #0xc9 (201)
0xffff914ab9d8   216  b.ne #+0x78 (addr 0xffff914aba50)
0xffff914ab9dc   220  ldur x5, [cp, #39]
0xffff914ab9e0   224  ldur x5, [x5, #95]
0xffff914ab9e4   228  cmp x1, x5
0xffff914ab9e8   232  b.eq #+0x68 (addr 0xffff914aba50)
0xffff914ab9ec   236  ldur x4, [x1, #39]
0xffff914ab9f0   240  ldur x4, [x4, #39]
0xffff914ab9f4   244  ldur x5, [cp, #39]
0xffff914ab9f8   248  cmp x4, x5
0xffff914ab9fc   252  b.ne #+0x54 (addr 0xffff914aba50)
0xffff914aba00   256  movz x5, #0x200000000
0xffff914aba04   260  adds x4, x2, x3, asr #29
0xffff914aba08   264  stur x5, [x4, #23]
0xffff914aba0c   268  movz x16, #0xc00000000
0xffff914aba10   272  sub csp, jssp, #0x10 (16)
0xffff914aba14   276  stp fp, lr, [jssp, #-16]!
0xffff914aba18   280  sub csp, jssp, #0x10 (16)
0xffff914aba1c   284  str x16, [jssp, #-8]!
0xffff914aba20   288  ldr x17, pc+160 (addr 0x0000ffff914abac0)    ;; object: 0xffff914ab8a1 <Code: CALL_IC>
0xffff914aba24   292  sub csp, jssp, #0x10 (16)
0xffff914aba28   296  str x17, [jssp, #-8]!
0xffff914aba2c   300  add fp, jssp, #0x10 (16)
0xffff914aba30   304  sub csp, jssp, #0x8 (8)
0xffff914aba34   308  str x1, [jssp, #-8]!
0xffff914aba38   312  ldr x16, pc+144 (addr 0x0000ffff914abac8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff914aba3c   316  blr x16
0xffff914aba40   320  ldr x1, [jssp], #8
0xffff914aba44   324  mov jssp, fp
0xffff914aba48   328  ldp fp, lr, [jssp], #16
0xffff914aba4c   332  b #-0x11c (addr 0xffff914ab930)
0xffff914aba50   336  movz x16, #0xc00000000
0xffff914aba54   340  sub csp, jssp, #0x10 (16)
0xffff914aba58   344  stp fp, lr, [jssp, #-16]!
0xffff914aba5c   348  sub csp, jssp, #0x10 (16)
0xffff914aba60   352  str x16, [jssp, #-8]!
0xffff914aba64   356  ldr x17, pc+108 (addr 0x0000ffff914abad0)    ;; object: 0xffff914ab8a1 <Code: CALL_IC>
0xffff914aba68   360  sub csp, jssp, #0x10 (16)
0xffff914aba6c   364  str x17, [jssp, #-8]!
0xffff914aba70   368  add fp, jssp, #0x10 (16)
0xffff914aba74   372  sub csp, jssp, #0x18 (24)
0xffff914aba78   376  stp x3, x2, [jssp, #-24]!
0xffff914aba7c   380  str x1, [jssp, #16]
0xffff914aba80   384  movz x0, #0x3
0xffff914aba84   388  ldr x1, pc+84 (addr 0x0000ffff914abad8)    ;; external reference (Runtime::CallIC_Miss)
0xffff914aba88   392  ldr x16, pc+88 (addr 0x0000ffff914abae0)    ;; code: STUB, CEntryStub, minor: 4
0xffff914aba8c   396  blr x16
0xffff914aba90   400  mov x1, x0
0xffff914aba94   404  mov jssp, fp
0xffff914aba98   408  ldp fp, lr, [jssp], #16
0xffff914aba9c   412  b #-0xe0 (addr 0xffff914ab9bc)
0xffff914abaa0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff914abaa4   420  d63f03e0       constant
0xffff914abaa8   424  9141e820       constant
0xffff914abaac   428  0000ffff       constant
0xffff914abab0   432  91433b00       constant
0xffff914abab4   436  0000ffff       constant
0xffff914abab8   440  9141f820       constant
0xffff914ababc   444  0000ffff       constant
0xffff914abac0   448  914ab8a1       constant
0xffff914abac4   452  0000ffff       constant
0xffff914abac8   456  9140ddc0       constant
0xffff914abacc   460  0000ffff       constant
0xffff914abad0   464  914ab8a1       constant
0xffff914abad4   468  0000ffff       constant
0xffff914abad8   472  00c86928       constant
0xffff914abadc   476  00000000       constant
0xffff914abae0   480  91406060       constant
0xffff914abae4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff914ab934  code target (BUILTIN)  (0xffff9141e820)
0xffff914ab98c  code target (STUB)  (0xffff91433b00)
0xffff914ab9c0  code target (BUILTIN)  (0xffff9141f820)
0xffff914aba20  embedded object  (0xffff914ab8a1 <Code: CALL_IC>)
0xffff914aba38  code target (STUB)  (0xffff9140ddc0)
0xffff914aba64  embedded object  (0xffff914ab8a1 <Code: CALL_IC>)
0xffff914aba84  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff914aba88  code target (STUB)  (0xffff91406060)
0xffff914abaa0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393222
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff914abb60     0  ldur x2, [fp, #-16]
0xffff914abb64     4  ldur x2, [x2, #31]
0xffff914abb68     8  ldur x2, [x2, #87]
0xffff914abb6c    12  ldr x16, pc+20 (addr 0x0000ffff914abb80)    ;; code: CALL_IC, GENERIC
0xffff914abb70    16  br x16
0xffff914abb74    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914abb78    24  d63f03e0       constant
0xffff914abb7c    28  d503201f       constant
0xffff914abb80    32  914ab900       constant
0xffff914abb84    36  0000ffff       constant


RelocInfo (size = 7)
0xffff914abb6c  code target (CALL_IC)  (0xffff914ab900)
0xffff914abb74  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 168)
0xffff914acde0     0  ldur x4, [x1, #15]
0xffff914acde4     4  ldur w5, [x4, #11]
0xffff914acde8     8  tbnz w2, #0, #+0x20 (addr 0xffff914ace08)
0xffff914acdec    12  asr x7, x2, #32
0xffff914acdf0    16  cmp w7, w5
0xffff914acdf4    20  b.hs #+0x3c (addr 0xffff914ace30)
0xffff914acdf8    24  add x0, x4, #0xf (15)
0xffff914acdfc    28  ldr x1, [x0, w7, sxtw #3]
0xffff914ace00    32  mov x0, x1
0xffff914ace04    36  ret
0xffff914ace08    40  ldur x16, [x2, #-1]
0xffff914ace0c    44  ldr x17, [x26, #120]
0xffff914ace10    48  cmp x16, x17
0xffff914ace14    52  b.ne #+0x2c (addr 0xffff914ace40)
0xffff914ace18    56  ldur d29, [x2, #7]
0xffff914ace1c    60  fcvtzs w7, d29
0xffff914ace20    64  scvtf d0, w7
0xffff914ace24    68  fcmp d29, d0
0xffff914ace28    72  b.ne #+0x18 (addr 0xffff914ace40)
0xffff914ace2c    76  b #-0x3c (addr 0xffff914acdf0)
0xffff914ace30    80  movz x16, #0x0
0xffff914ace34    84  sub csp, jssp, #0x10 (16)
0xffff914ace38    88  stp fp, lr, [jssp, #-16]!
0xffff914ace3c    92  bl #+0x14 (addr 0xffff914ace50)
0xffff914ace40    96  movz x16, #0x8
0xffff914ace44   100  sub csp, jssp, #0x10 (16)
0xffff914ace48   104  stp fp, lr, [jssp, #-16]!
0xffff914ace4c   108  bl #+0x4 (addr 0xffff914ace50)
0xffff914ace50   112  movz x17, #0xa00000000
0xffff914ace54   116  sub csp, jssp, #0x10 (16)
0xffff914ace58   120  stp x17, cp, [jssp, #-16]!
0xffff914ace5c   124  add fp, jssp, #0x10 (16)
0xffff914ace60   128  ldr x17, pc+24 (addr 0x0000ffff914ace78)    ;; lazy deoptimization bailout 0
0xffff914ace64   132  add x17, x17, x16
0xffff914ace68   136  br x17
0xffff914ace6c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914ace70   144  d63f03e0       constant
0xffff914ace74   148  d503201f       constant
0xffff914ace78   152  91206000       constant
0xffff914ace7c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914ace60  runtime entry
0xffff914ace6c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 168)
0xffff914acde0     0  ldur x4, [x1, #15]
0xffff914acde4     4  ldur w5, [x4, #11]
0xffff914acde8     8  tbnz w2, #0, #+0x20 (addr 0xffff914ace08)
0xffff914acdec    12  asr x7, x2, #32
0xffff914acdf0    16  cmp w7, w5
0xffff914acdf4    20  b.hs #+0x3c (addr 0xffff914ace30)
0xffff914acdf8    24  add x0, x4, #0xf (15)
0xffff914acdfc    28  ldr x1, [x0, w7, sxtw #3]
0xffff914ace00    32  mov x0, x1
0xffff914ace04    36  ret
0xffff914ace08    40  ldur x16, [x2, #-1]
0xffff914ace0c    44  ldr x17, [x26, #120]
0xffff914ace10    48  cmp x16, x17
0xffff914ace14    52  b.ne #+0x2c (addr 0xffff914ace40)
0xffff914ace18    56  ldur d29, [x2, #7]
0xffff914ace1c    60  fcvtzs w7, d29
0xffff914ace20    64  scvtf d0, w7
0xffff914ace24    68  fcmp d29, d0
0xffff914ace28    72  b.ne #+0x18 (addr 0xffff914ace40)
0xffff914ace2c    76  b #-0x3c (addr 0xffff914acdf0)
0xffff914ace30    80  movz x16, #0x0
0xffff914ace34    84  sub csp, jssp, #0x10 (16)
0xffff914ace38    88  stp fp, lr, [jssp, #-16]!
0xffff914ace3c    92  bl #+0x14 (addr 0xffff914ace50)
0xffff914ace40    96  movz x16, #0x8
0xffff914ace44   100  sub csp, jssp, #0x10 (16)
0xffff914ace48   104  stp fp, lr, [jssp, #-16]!
0xffff914ace4c   108  bl #+0x4 (addr 0xffff914ace50)
0xffff914ace50   112  movz x17, #0xa00000000
0xffff914ace54   116  sub csp, jssp, #0x10 (16)
0xffff914ace58   120  stp x17, cp, [jssp, #-16]!
0xffff914ace5c   124  add fp, jssp, #0x10 (16)
0xffff914ace60   128  ldr x17, pc+24 (addr 0x0000ffff914ace78)    ;; lazy deoptimization bailout 0
0xffff914ace64   132  add x17, x17, x16
0xffff914ace68   136  br x17
0xffff914ace6c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914ace70   144  d63f03e0       constant
0xffff914ace74   148  d503201f       constant
0xffff914ace78   152  91206000       constant
0xffff914ace7c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914ace60  runtime entry
0xffff914ace6c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = removeListener
compiler = unknown
Instructions (size = 144)
0xffff914ade80     0  sub csp, jssp, #0x8 (8)
0xffff914ade84     4  str x3, [jssp, #-8]!
0xffff914ade88     8  sub csp, jssp, #0x8 (8)
0xffff914ade8c    12  str x4, [jssp, #-8]!
0xffff914ade90    16  ldr x5, pc+88 (addr 0x0000ffff914adee8)    ;; object: 0x49bff459 WeakCell for 0x3642caa9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914ade94    20  ldur x5, [x5, #7]
0xffff914ade98    24  tbz w5, #0, #+0x30 (addr 0xffff914adec8)
0xffff914ade9c    28  ldursw x4, [x5, #15]
0xffff914adea0    32  tbnz w4, #23, #+0x28 (addr 0xffff914adec8)
0xffff914adea4    36  ldur x4, [x5, #47]
0xffff914adea8    40  ldur x4, [x4, #95]
0xffff914adeac    44  cmp x0, x4
0xffff914adeb0    48  b.ne #+0x18 (addr 0xffff914adec8)
0xffff914adeb4    52  ldr x4, [jssp], #8
0xffff914adeb8    56  ldr x3, [jssp], #8
0xffff914adebc    60  ldr x2, pc+52 (addr 0x0000ffff914adef0)    ;; object: 0x49bc3a59 <String[14]: removeListener>
0xffff914adec0    64  ldr x16, pc+56 (addr 0x0000ffff914adef8)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff914adec4    68  br x16
0xffff914adec8    72  ldr x2, pc+56 (addr 0x0000ffff914adf00)    ;; object: 0x49bc3a59 <String[14]: removeListener>
0xffff914adecc    76  ldr x4, [jssp], #8
0xffff914aded0    80  ldr x3, [jssp], #8
0xffff914aded4    84  ldr x16, pc+52 (addr 0x0000ffff914adf08)    ;; code: BUILTIN
0xffff914aded8    88  br x16
0xffff914adedc    92  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff914adee0    96  d63f03e0       constant
0xffff914adee4   100  d503201f       constant
0xffff914adee8   104  49bff459       constant
0xffff914adeec   108  00000000       constant
0xffff914adef0   112  49bc3a59       constant
0xffff914adef4   116  00000000       constant
0xffff914adef8   120  9143cea0       constant
0xffff914adefc   124  0000ffff       constant
0xffff914adf00   128  49bc3a59       constant
0xffff914adf04   132  00000000       constant
0xffff914adf08   136  91422420       constant
0xffff914adf0c   140  0000ffff       constant


RelocInfo (size = 11)
0xffff914ade90  embedded object  (0x49bff459 WeakCell for 0x3642caa9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914adebc  embedded object  (0x49bc3a59 <String[14]: removeListener>)
0xffff914adec0  code target (HANDLER)  (0xffff9143cea0)
0xffff914adec8  embedded object  (0x49bc3a59 <String[14]: removeListener>)
0xffff914aded4  code target (BUILTIN)  (0xffff91422420)
0xffff914adedc  constant pool (size 52)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = STRING*INTERNALIZED_STRING -> STRING
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 416)
0xffff914adf80     0  and x16, x0, x1
0xffff914adf84     4  tbz w16, #0, #+0xfc (addr 0xffff914ae080)
0xffff914adf88     8  ldur x11, [x1, #-1]
0xffff914adf8c    12  ldur x10, [x0, #-1]
0xffff914adf90    16  ldrb w11, [x11, #11]
0xffff914adf94    20  ldrb w10, [x10, #11]
0xffff914adf98    24  orr x12, x11, x10
0xffff914adf9c    28  tbnz w12, #7, #+0xe4 (addr 0xffff914ae080)
0xffff914adfa0    32  cmp x1, x0
0xffff914adfa4    36  b.ne #+0xc (addr 0xffff914adfb0)
0xffff914adfa8    40  movz x0, #0x0
0xffff914adfac    44  ret
0xffff914adfb0    48  orr x12, x11, x10
0xffff914adfb4    52  tbnz w12, #6, #+0x8 (addr 0xffff914adfbc)
0xffff914adfb8    56  ret
0xffff914adfbc    60  movz x16, #0x87
0xffff914adfc0    64  and x12, x11, x16
0xffff914adfc4    68  movz x16, #0x87
0xffff914adfc8    72  and x13, x10, x16
0xffff914adfcc    76  cmp x12, #0x4 (4)
0xffff914adfd0    80  ccmp x13, #4, #nzcv, eq
0xffff914adfd4    84  b.ne #+0x5c (addr 0xffff914ae030)
0xffff914adfd8    88  ldur x10, [x1, #15]
0xffff914adfdc    92  ldur x11, [x0, #15]
0xffff914adfe0    96  cmp x10, x11
0xffff914adfe4   100  b.eq #+0xc (addr 0xffff914adff0)
0xffff914adfe8   104  movz x0, #0x100000000
0xffff914adfec   108  ret
0xffff914adff0   112  cbnz x10, #+0xc (addr 0xffff914adffc)
0xffff914adff4   116  movz x0, #0x0
0xffff914adff8   120  ret
0xffff914adffc   124  asr x10, x10, #32
0xffff914ae000   128  add x11, x10, #0x17 (23)
0xffff914ae004   132  add x1, x1, x11
0xffff914ae008   136  add x0, x0, x11
0xffff914ae00c   140  neg x10, x10
0xffff914ae010   144  ldrb w11, [x1, x10]
0xffff914ae014   148  ldrb w12, [x0, x10]
0xffff914ae018   152  cmp x11, x12
0xffff914ae01c   156  b.ne #-0x34 (addr 0xffff914adfe8)
0xffff914ae020   160  add x10, x10, #0x1 (1)
0xffff914ae024   164  cbnz x10, #-0x14 (addr 0xffff914ae010)
0xffff914ae028   168  movz x0, #0x0
0xffff914ae02c   172  ret
0xffff914ae030   176  movz x16, #0xc00000000
0xffff914ae034   180  sub csp, jssp, #0x10 (16)
0xffff914ae038   184  stp fp, lr, [jssp, #-16]!
0xffff914ae03c   188  sub csp, jssp, #0x10 (16)
0xffff914ae040   192  str x16, [jssp, #-8]!
0xffff914ae044   196  ldr x17, pc+172 (addr 0x0000ffff914ae0f0)    ;; object: 0xffff914adf21 <Code: COMPARE_IC>
0xffff914ae048   200  sub csp, jssp, #0x10 (16)
0xffff914ae04c   204  str x17, [jssp, #-8]!
0xffff914ae050   208  add fp, jssp, #0x10 (16)
0xffff914ae054   212  sub csp, jssp, #0x10 (16)
0xffff914ae058   216  stp x0, x1, [jssp, #-16]!
0xffff914ae05c   220  movz x0, #0x2
0xffff914ae060   224  ldr x1, pc+152 (addr 0x0000ffff914ae0f8)    ;; external reference (Runtime::StringEqual)
0xffff914ae064   228  ldr x16, pc+156 (addr 0x0000ffff914ae100)    ;; code: STUB, CEntryStub, minor: 4
0xffff914ae068   232  blr x16
0xffff914ae06c   236  mov jssp, fp
0xffff914ae070   240  ldp fp, lr, [jssp], #16
0xffff914ae074   244  ldr x1, [x26, #64]
0xffff914ae078   248  sub x0, x0, x1
0xffff914ae07c   252  ret
0xffff914ae080   256  movz x16, #0xc00000000
0xffff914ae084   260  sub csp, jssp, #0x10 (16)
0xffff914ae088   264  stp fp, lr, [jssp, #-16]!
0xffff914ae08c   268  sub csp, jssp, #0x10 (16)
0xffff914ae090   272  str x16, [jssp, #-8]!
0xffff914ae094   276  ldr x17, pc+116 (addr 0x0000ffff914ae108)    ;; object: 0xffff914adf21 <Code: COMPARE_IC>
0xffff914ae098   280  sub csp, jssp, #0x10 (16)
0xffff914ae09c   284  str x17, [jssp, #-8]!
0xffff914ae0a0   288  add fp, jssp, #0x10 (16)
0xffff914ae0a4   292  sub csp, jssp, #0x18 (24)
0xffff914ae0a8   296  stp lr, x0, [jssp, #-24]!
0xffff914ae0ac   300  str x1, [jssp, #16]
0xffff914ae0b0   304  movz x10, #0x2f00000000
0xffff914ae0b4   308  sub csp, jssp, #0x18 (24)
0xffff914ae0b8   312  stp x10, x0, [jssp, #-24]!
0xffff914ae0bc   316  str x1, [jssp, #16]
0xffff914ae0c0   320  movz x0, #0x3
0xffff914ae0c4   324  ldr x1, pc+76 (addr 0x0000ffff914ae110)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914ae0c8   328  ldr x16, pc+80 (addr 0x0000ffff914ae118)    ;; code: STUB, CEntryStub, minor: 4
0xffff914ae0cc   332  blr x16
0xffff914ae0d0   336  add x11, x0, #0x5f (95)
0xffff914ae0d4   340  ldr x1, [jssp, #16]
0xffff914ae0d8   344  ldp lr, x0, [jssp], #24
0xffff914ae0dc   348  mov jssp, fp
0xffff914ae0e0   352  ldp fp, lr, [jssp], #16
0xffff914ae0e4   356  br x11
0xffff914ae0e8   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914ae0ec   364  d63f03e0       constant
0xffff914ae0f0   368  914adf21       constant
0xffff914ae0f4   372  0000ffff       constant
0xffff914ae0f8   376  00ed0748       constant
0xffff914ae0fc   380  00000000       constant
0xffff914ae100   384  91406060       constant
0xffff914ae104   388  0000ffff       constant
0xffff914ae108   392  914adf21       constant
0xffff914ae10c   396  0000ffff       constant
0xffff914ae110   400  00c8a980       constant
0xffff914ae114   404  00000000       constant
0xffff914ae118   408  91406060       constant
0xffff914ae11c   412  0000ffff       constant


RelocInfo (size = 16)
0xffff914ae044  embedded object  (0xffff914adf21 <Code: COMPARE_IC>)
0xffff914ae060  external reference (Runtime::StringEqual)  (0xed0748)
0xffff914ae064  code target (STUB)  (0xffff91406060)
0xffff914ae094  embedded object  (0xffff914adf21 <Code: COMPARE_IC>)
0xffff914ae0c4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914ae0c8  code target (STUB)  (0xffff91406060)
0xffff914ae0e8  constant pool (size 56)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 262146
name = CallICStub(args(2), NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff914ae180     0  add x4, x2, x3, asr #29
0xffff914ae184     4  ldur x4, [x4, #15]
0xffff914ae188     8  ldur x5, [x4, #7]
0xffff914ae18c    12  cmp x5, x1
0xffff914ae190    16  b.ne #+0x2c (addr 0xffff914ae1bc)
0xffff914ae194    20  tbz w1, #0, #+0x28 (addr 0xffff914ae1bc)
0xffff914ae198    24  add x2, x2, x3, asr #29
0xffff914ae19c    28  add x2, x2, #0x18 (24)
0xffff914ae1a0    32  ldur x3, [x2, #-1]
0xffff914ae1a4    36  movz x16, #0x200000000
0xffff914ae1a8    40  add x3, x3, x16
0xffff914ae1ac    44  stur x3, [x2, #-1]
0xffff914ae1b0    48  movz x0, #0x2
0xffff914ae1b4    52  ldr x16, pc+372 (addr 0x0000ffff914ae328)    ;; code: BUILTIN
0xffff914ae1b8    56  br x16
0xffff914ae1bc    60  ldr x16, [x26, #2400]
0xffff914ae1c0    64  cmp x4, x16
0xffff914ae1c4    68  b.eq #+0x78 (addr 0xffff914ae23c)
0xffff914ae1c8    72  ldur x5, [x4, #-1]
0xffff914ae1cc    76  ldr x16, [x26, #2736]
0xffff914ae1d0    80  cmp x5, x16
0xffff914ae1d4    84  b.ne #+0x40 (addr 0xffff914ae214)
0xffff914ae1d8    88  ldur x5, [cp, #39]
0xffff914ae1dc    92  ldur x5, [x5, #95]
0xffff914ae1e0    96  cmp x1, x5
0xffff914ae1e4   100  b.ne #+0xec (addr 0xffff914ae2d0)
0xffff914ae1e8   104  movz x0, #0x2
0xffff914ae1ec   108  add x2, x2, x3, asr #29
0xffff914ae1f0   112  add x2, x2, #0x18 (24)
0xffff914ae1f4   116  ldur x3, [x2, #-1]
0xffff914ae1f8   120  movz x16, #0x200000000
0xffff914ae1fc   124  add x3, x3, x16
0xffff914ae200   128  stur x3, [x2, #-1]
0xffff914ae204   132  mov x2, x4
0xffff914ae208   136  mov x3, x1
0xffff914ae20c   140  ldr x16, pc+292 (addr 0x0000ffff914ae330)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff914ae210   144  br x16
0xffff914ae214   148  ldr x16, [x26, #2568]
0xffff914ae218   152  cmp x4, x16
0xffff914ae21c   156  b.eq #+0xb4 (addr 0xffff914ae2d0)
0xffff914ae220   160  ldur x5, [x4, #-1]
0xffff914ae224   164  ldrb w5, [x5, #11]
0xffff914ae228   168  cmp x5, #0xc9 (201)
0xffff914ae22c   172  b.ne #+0xa4 (addr 0xffff914ae2d0)
0xffff914ae230   176  add x4, x2, x3, asr #29
0xffff914ae234   180  ldr x5, [x26, #2400]
0xffff914ae238   184  stur x5, [x4, #15]
0xffff914ae23c   188  movz x0, #0x2
0xffff914ae240   192  ldr x16, pc+248 (addr 0x0000ffff914ae338)    ;; code: BUILTIN
0xffff914ae244   196  br x16
0xffff914ae248   200  tbz w1, #0, #+0x88 (addr 0xffff914ae2d0)
0xffff914ae24c   204  ldur x5, [x1, #-1]
0xffff914ae250   208  ldrb w5, [x5, #11]
0xffff914ae254   212  cmp x5, #0xc9 (201)
0xffff914ae258   216  b.ne #+0x78 (addr 0xffff914ae2d0)
0xffff914ae25c   220  ldur x5, [cp, #39]
0xffff914ae260   224  ldur x5, [x5, #95]
0xffff914ae264   228  cmp x1, x5
0xffff914ae268   232  b.eq #+0x68 (addr 0xffff914ae2d0)
0xffff914ae26c   236  ldur x4, [x1, #39]
0xffff914ae270   240  ldur x4, [x4, #39]
0xffff914ae274   244  ldur x5, [cp, #39]
0xffff914ae278   248  cmp x4, x5
0xffff914ae27c   252  b.ne #+0x54 (addr 0xffff914ae2d0)
0xffff914ae280   256  movz x5, #0x200000000
0xffff914ae284   260  adds x4, x2, x3, asr #29
0xffff914ae288   264  stur x5, [x4, #23]
0xffff914ae28c   268  movz x16, #0xc00000000
0xffff914ae290   272  sub csp, jssp, #0x10 (16)
0xffff914ae294   276  stp fp, lr, [jssp, #-16]!
0xffff914ae298   280  sub csp, jssp, #0x10 (16)
0xffff914ae29c   284  str x16, [jssp, #-8]!
0xffff914ae2a0   288  ldr x17, pc+160 (addr 0x0000ffff914ae340)    ;; object: 0xffff914ae121 <Code: CALL_IC>
0xffff914ae2a4   292  sub csp, jssp, #0x10 (16)
0xffff914ae2a8   296  str x17, [jssp, #-8]!
0xffff914ae2ac   300  add fp, jssp, #0x10 (16)
0xffff914ae2b0   304  sub csp, jssp, #0x8 (8)
0xffff914ae2b4   308  str x1, [jssp, #-8]!
0xffff914ae2b8   312  ldr x16, pc+144 (addr 0x0000ffff914ae348)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff914ae2bc   316  blr x16
0xffff914ae2c0   320  ldr x1, [jssp], #8
0xffff914ae2c4   324  mov jssp, fp
0xffff914ae2c8   328  ldp fp, lr, [jssp], #16
0xffff914ae2cc   332  b #-0x11c (addr 0xffff914ae1b0)
0xffff914ae2d0   336  movz x16, #0xc00000000
0xffff914ae2d4   340  sub csp, jssp, #0x10 (16)
0xffff914ae2d8   344  stp fp, lr, [jssp, #-16]!
0xffff914ae2dc   348  sub csp, jssp, #0x10 (16)
0xffff914ae2e0   352  str x16, [jssp, #-8]!
0xffff914ae2e4   356  ldr x17, pc+108 (addr 0x0000ffff914ae350)    ;; object: 0xffff914ae121 <Code: CALL_IC>
0xffff914ae2e8   360  sub csp, jssp, #0x10 (16)
0xffff914ae2ec   364  str x17, [jssp, #-8]!
0xffff914ae2f0   368  add fp, jssp, #0x10 (16)
0xffff914ae2f4   372  sub csp, jssp, #0x18 (24)
0xffff914ae2f8   376  stp x3, x2, [jssp, #-24]!
0xffff914ae2fc   380  str x1, [jssp, #16]
0xffff914ae300   384  movz x0, #0x3
0xffff914ae304   388  ldr x1, pc+84 (addr 0x0000ffff914ae358)    ;; external reference (Runtime::CallIC_Miss)
0xffff914ae308   392  ldr x16, pc+88 (addr 0x0000ffff914ae360)    ;; code: STUB, CEntryStub, minor: 4
0xffff914ae30c   396  blr x16
0xffff914ae310   400  mov x1, x0
0xffff914ae314   404  mov jssp, fp
0xffff914ae318   408  ldp fp, lr, [jssp], #16
0xffff914ae31c   412  b #-0xe0 (addr 0xffff914ae23c)
0xffff914ae320   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff914ae324   420  d63f03e0       constant
0xffff914ae328   424  9141e280       constant
0xffff914ae32c   428  0000ffff       constant
0xffff914ae330   432  91433b00       constant
0xffff914ae334   436  0000ffff       constant
0xffff914ae338   440  9141f560       constant
0xffff914ae33c   444  0000ffff       constant
0xffff914ae340   448  914ae121       constant
0xffff914ae344   452  0000ffff       constant
0xffff914ae348   456  9140ddc0       constant
0xffff914ae34c   460  0000ffff       constant
0xffff914ae350   464  914ae121       constant
0xffff914ae354   468  0000ffff       constant
0xffff914ae358   472  00c86928       constant
0xffff914ae35c   476  00000000       constant
0xffff914ae360   480  91406060       constant
0xffff914ae364   484  0000ffff       constant


RelocInfo (size = 19)
0xffff914ae1b4  code target (BUILTIN)  (0xffff9141e280)
0xffff914ae20c  code target (STUB)  (0xffff91433b00)
0xffff914ae240  code target (BUILTIN)  (0xffff9141f560)
0xffff914ae2a0  embedded object  (0xffff914ae121 <Code: CALL_IC>)
0xffff914ae2b8  code target (STUB)  (0xffff9140ddc0)
0xffff914ae2e4  embedded object  (0xffff914ae121 <Code: CALL_IC>)
0xffff914ae304  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff914ae308  code target (STUB)  (0xffff91406060)
0xffff914ae320  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 262146
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff914ae3e0     0  ldur x2, [fp, #-16]
0xffff914ae3e4     4  ldur x2, [x2, #31]
0xffff914ae3e8     8  ldur x2, [x2, #87]
0xffff914ae3ec    12  ldr x16, pc+20 (addr 0x0000ffff914ae400)    ;; code: CALL_IC, GENERIC
0xffff914ae3f0    16  br x16
0xffff914ae3f4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914ae3f8    24  d63f03e0       constant
0xffff914ae3fc    28  d503201f       constant
0xffff914ae400    32  914ae180       constant
0xffff914ae404    36  0000ffff       constant


RelocInfo (size = 7)
0xffff914ae3ec  code target (CALL_IC)  (0xffff914ae180)
0xffff914ae3f4  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914aed80     0  tbz w0, #0, #+0x98 (addr 0xffff914aee18)
0xffff914aed84     4  mov x2, x0
0xffff914aed88     8  ldur x4, [x1, #7]
0xffff914aed8c    12  stur x2, [x4, #79]
0xffff914aed90    16  add x3, x4, #0x4f (79)
0xffff914aed94    20  and x2, x2, #0xfffffffffff00000
0xffff914aed98    24  ldr x2, [x2, #8]
0xffff914aed9c    28  tbz w2, #1, #+0x24 (addr 0xffff914aedc0)
0xffff914aeda0    32  and x2, x4, #0xfffffffffff00000
0xffff914aeda4    36  ldr x2, [x2, #8]
0xffff914aeda8    40  tbz w2, #2, #+0x18 (addr 0xffff914aedc0)
0xffff914aedac    44  sub csp, jssp, #0x8 (8)
0xffff914aedb0    48  str lr, [jssp, #-8]!
0xffff914aedb4    52  ldr x16, pc+84 (addr 0x0000ffff914aee08)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914aedb8    56  blr x16
0xffff914aedbc    60  ldr lr, [jssp], #8
0xffff914aedc0    64  stur x5, [x1, #-1]
0xffff914aedc4    68  tbz w5, #0, #+0x34 (addr 0xffff914aedf8)
0xffff914aedc8    72  sub x2, x1, #0x1 (1)
0xffff914aedcc    76  and x5, x5, #0xfffffffffff00000
0xffff914aedd0    80  ldr x5, [x5, #8]
0xffff914aedd4    84  tbz w5, #1, #+0x24 (addr 0xffff914aedf8)
0xffff914aedd8    88  and x5, x1, #0xfffffffffff00000
0xffff914aeddc    92  ldr x5, [x5, #8]
0xffff914aede0    96  tbz w5, #2, #+0x18 (addr 0xffff914aedf8)
0xffff914aede4   100  sub csp, jssp, #0x8 (8)
0xffff914aede8   104  str lr, [jssp, #-8]!
0xffff914aedec   108  ldr x16, pc+36 (addr 0x0000ffff914aee10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914aedf0   112  blr x16
0xffff914aedf4   116  ldr lr, [jssp], #8
0xffff914aedf8   120  ret
0xffff914aedfc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914aee00   128  d63f03e0       constant
0xffff914aee04   132  d503201f       constant
0xffff914aee08   136  914378a0       constant
0xffff914aee0c   140  0000ffff       constant
0xffff914aee10   144  91438080       constant
0xffff914aee14   148  0000ffff       constant
0xffff914aee18   152  movz x16, #0x0
0xffff914aee1c   156  sub csp, jssp, #0x10 (16)
0xffff914aee20   160  stp fp, lr, [jssp, #-16]!
0xffff914aee24   164  bl #+0x4 (addr 0xffff914aee28)
0xffff914aee28   168  movz x17, #0xa00000000
0xffff914aee2c   172  sub csp, jssp, #0x10 (16)
0xffff914aee30   176  stp x17, cp, [jssp, #-16]!
0xffff914aee34   180  add fp, jssp, #0x10 (16)
0xffff914aee38   184  ldr x17, pc+24 (addr 0x0000ffff914aee50)    ;; lazy deoptimization bailout 0
0xffff914aee3c   188  add x17, x17, x16
0xffff914aee40   192  br x17
0xffff914aee44   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914aee48   200  d63f03e0       constant
0xffff914aee4c   204  d503201f       constant
0xffff914aee50   208  91206000       constant
0xffff914aee54   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914aedb4  code target (STUB)  (0xffff914378a0)
0xffff914aedec  code target (STUB)  (0xffff91438080)
0xffff914aedfc  constant pool (size 28)
0xffff914aee38  runtime entry
0xffff914aee44  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914aed80     0  tbz w0, #0, #+0x98 (addr 0xffff914aee18)
0xffff914aed84     4  mov x2, x0
0xffff914aed88     8  ldur x4, [x1, #7]
0xffff914aed8c    12  stur x2, [x4, #79]
0xffff914aed90    16  add x3, x4, #0x4f (79)
0xffff914aed94    20  and x2, x2, #0xfffffffffff00000
0xffff914aed98    24  ldr x2, [x2, #8]
0xffff914aed9c    28  tbz w2, #1, #+0x24 (addr 0xffff914aedc0)
0xffff914aeda0    32  and x2, x4, #0xfffffffffff00000
0xffff914aeda4    36  ldr x2, [x2, #8]
0xffff914aeda8    40  tbz w2, #2, #+0x18 (addr 0xffff914aedc0)
0xffff914aedac    44  sub csp, jssp, #0x8 (8)
0xffff914aedb0    48  str lr, [jssp, #-8]!
0xffff914aedb4    52  ldr x16, pc+84 (addr 0x0000ffff914aee08)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914aedb8    56  blr x16
0xffff914aedbc    60  ldr lr, [jssp], #8
0xffff914aedc0    64  stur x5, [x1, #-1]
0xffff914aedc4    68  tbz w5, #0, #+0x34 (addr 0xffff914aedf8)
0xffff914aedc8    72  sub x2, x1, #0x1 (1)
0xffff914aedcc    76  and x5, x5, #0xfffffffffff00000
0xffff914aedd0    80  ldr x5, [x5, #8]
0xffff914aedd4    84  tbz w5, #1, #+0x24 (addr 0xffff914aedf8)
0xffff914aedd8    88  and x5, x1, #0xfffffffffff00000
0xffff914aeddc    92  ldr x5, [x5, #8]
0xffff914aede0    96  tbz w5, #2, #+0x18 (addr 0xffff914aedf8)
0xffff914aede4   100  sub csp, jssp, #0x8 (8)
0xffff914aede8   104  str lr, [jssp, #-8]!
0xffff914aedec   108  ldr x16, pc+36 (addr 0x0000ffff914aee10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914aedf0   112  blr x16
0xffff914aedf4   116  ldr lr, [jssp], #8
0xffff914aedf8   120  ret
0xffff914aedfc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914aee00   128  d63f03e0       constant
0xffff914aee04   132  d503201f       constant
0xffff914aee08   136  914378a0       constant
0xffff914aee0c   140  0000ffff       constant
0xffff914aee10   144  91438080       constant
0xffff914aee14   148  0000ffff       constant
0xffff914aee18   152  movz x16, #0x0
0xffff914aee1c   156  sub csp, jssp, #0x10 (16)
0xffff914aee20   160  stp fp, lr, [jssp, #-16]!
0xffff914aee24   164  bl #+0x4 (addr 0xffff914aee28)
0xffff914aee28   168  movz x17, #0xa00000000
0xffff914aee2c   172  sub csp, jssp, #0x10 (16)
0xffff914aee30   176  stp x17, cp, [jssp, #-16]!
0xffff914aee34   180  add fp, jssp, #0x10 (16)
0xffff914aee38   184  ldr x17, pc+24 (addr 0x0000ffff914aee50)    ;; lazy deoptimization bailout 0
0xffff914aee3c   188  add x17, x17, x16
0xffff914aee40   192  br x17
0xffff914aee44   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914aee48   200  d63f03e0       constant
0xffff914aee4c   204  d503201f       constant
0xffff914aee50   208  91206000       constant
0xffff914aee54   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914aedb4  code target (STUB)  (0xffff914378a0)
0xffff914aedec  code target (STUB)  (0xffff91438080)
0xffff914aedfc  constant pool (size 28)
0xffff914aee38  runtime entry
0xffff914aee44  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = path
compiler = unknown
Instructions (size = 184)
0xffff914aeec0     0  sub csp, jssp, #0x8 (8)
0xffff914aeec4     4  str x3, [jssp, #-8]!
0xffff914aeec8     8  sub csp, jssp, #0x8 (8)
0xffff914aeecc    12  str x4, [jssp, #-8]!
0xffff914aeed0    16  ldr x3, pc+112 (addr 0x0000ffff914aef40)    ;; object: 0x49b63e59 Cell for 0
0xffff914aeed4    20  ldur x3, [x3, #7]
0xffff914aeed8    24  cmp x3, #0x0 (0)
0xffff914aeedc    28  b.ne #+0x44 (addr 0xffff914aef20)
0xffff914aeee0    32  tbz w0, #0, #+0x40 (addr 0xffff914aef20)
0xffff914aeee4    36  ldur x3, [x0, #-1]
0xffff914aeee8    40  ldr x4, pc+96 (addr 0x0000ffff914aef48)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914aeeec    44  ldur x4, [x4, #7]
0xffff914aeef0    48  cmp x3, x4
0xffff914aeef4    52  b.ne #+0x2c (addr 0xffff914aef20)
0xffff914aeef8    56  ldr x5, pc+88 (addr 0x0000ffff914aef50)    ;; object: 0x49bffb89 WeakCell for 0x3642cbb1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914aeefc    60  ldur x5, [x5, #7]
0xffff914aef00    64  tbz w5, #0, #+0x20 (addr 0xffff914aef20)
0xffff914aef04    68  ldursw x4, [x5, #15]
0xffff914aef08    72  tbnz w4, #23, #+0x18 (addr 0xffff914aef20)
0xffff914aef0c    76  ldr x4, [jssp], #8
0xffff914aef10    80  ldr x3, [jssp], #8
0xffff914aef14    84  ldr x2, pc+68 (addr 0x0000ffff914aef58)    ;; object: 0x49bb2e69 <String[4]: path>
0xffff914aef18    88  ldr x16, pc+72 (addr 0x0000ffff914aef60)    ;; code: HANDLER, StoreTransitionStub, minor: 196618
0xffff914aef1c    92  br x16
0xffff914aef20    96  ldr x2, pc+72 (addr 0x0000ffff914aef68)    ;; object: 0x49bb2e69 <String[4]: path>
0xffff914aef24   100  ldr x4, [jssp], #8
0xffff914aef28   104  ldr x3, [jssp], #8
0xffff914aef2c   108  ldr x16, pc+68 (addr 0x0000ffff914aef70)    ;; code: BUILTIN
0xffff914aef30   112  br x16
0xffff914aef34   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914aef38   120  d63f03e0       constant
0xffff914aef3c   124  d503201f       constant
0xffff914aef40   128  49b63e59       constant
0xffff914aef44   132  00000000       constant
0xffff914aef48   136  49bc22b1       constant
0xffff914aef4c   140  00000000       constant
0xffff914aef50   144  49bffb89       constant
0xffff914aef54   148  00000000       constant
0xffff914aef58   152  49bb2e69       constant
0xffff914aef5c   156  00000000       constant
0xffff914aef60   160  914aed80       constant
0xffff914aef64   164  0000ffff       constant
0xffff914aef68   168  49bb2e69       constant
0xffff914aef6c   172  00000000       constant
0xffff914aef70   176  91422420       constant
0xffff914aef74   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914aeed0  embedded object  (0x49b63e59 Cell for 0)
0xffff914aeee8  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914aeef8  embedded object  (0x49bffb89 WeakCell for 0x3642cbb1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914aef14  embedded object  (0x49bb2e69 <String[4]: path>)
0xffff914aef18  code target (HANDLER)  (0xffff914aed80)
0xffff914aef20  embedded object  (0x49bb2e69 <String[4]: path>)
0xffff914aef2c  code target (BUILTIN)  (0xffff91422420)
0xffff914aef34  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = charCodeAt
compiler = unknown
Instructions (size = 152)
0xffff914b0e00     0  sub csp, jssp, #0x8 (8)
0xffff914b0e04     4  str x3, [jssp, #-8]!
0xffff914b0e08     8  sub csp, jssp, #0x8 (8)
0xffff914b0e0c    12  str x0, [jssp, #-8]!
0xffff914b0e10    16  ldur x3, [cp, #39]
0xffff914b0e14    20  movz x16, #0x2e7
0xffff914b0e18    24  ldr x3, [x3, x16]
0xffff914b0e1c    28  ldur x3, [x3, #23]
0xffff914b0e20    32  ldur x3, [x3, #23]
0xffff914b0e24    36  ldr x0, pc+84 (addr 0x0000ffff914b0e78)    ;; object: 0x49b63e59 Cell for 0
0xffff914b0e28    40  ldur x0, [x0, #7]
0xffff914b0e2c    44  cmp x0, #0x0 (0)
0xffff914b0e30    48  b.ne #+0x1c (addr 0xffff914b0e4c)
0xffff914b0e34    52  ldur x0, [x3, #-1]
0xffff914b0e38    56  ldr x4, pc+72 (addr 0x0000ffff914b0e80)    ;; object: 0x40806e39 WeakCell for 0x364156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff914b0e3c    60  ldur x4, [x4, #7]
0xffff914b0e40    64  cmp x0, x4
0xffff914b0e44    68  b.ne #+0x8 (addr 0xffff914b0e4c)
0xffff914b0e48    72  b #+0x14 (addr 0xffff914b0e5c)
0xffff914b0e4c    76  ldr x0, [jssp], #8
0xffff914b0e50    80  ldr x3, [jssp], #8
0xffff914b0e54    84  ldr x16, pc+52 (addr 0x0000ffff914b0e88)    ;; code: BUILTIN
0xffff914b0e58    88  br x16
0xffff914b0e5c    92  add jssp, jssp, #0x10 (16)
0xffff914b0e60    96  mov x1, x3
0xffff914b0e64   100  ldr x16, pc+44 (addr 0x0000ffff914b0e90)    ;; code: HANDLER, LoadConstantStub, minor: 5
0xffff914b0e68   104  br x16
0xffff914b0e6c   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff914b0e70   112  d63f03e0       constant
0xffff914b0e74   116  d503201f       constant
0xffff914b0e78   120  49b63e59       constant
0xffff914b0e7c   124  00000000       constant
0xffff914b0e80   128  40806e39       constant
0xffff914b0e84   132  00000000       constant
0xffff914b0e88   136  914222e0       constant
0xffff914b0e8c   140  0000ffff       constant
0xffff914b0e90   144  91443500       constant
0xffff914b0e94   148  0000ffff       constant


RelocInfo (size = 10)
0xffff914b0e24  embedded object  (0x49b63e59 Cell for 0)
0xffff914b0e38  embedded object  (0x40806e39 WeakCell for 0x364156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff914b0e54  code target (BUILTIN)  (0xffff914222e0)
0xffff914b0e64  code target (HANDLER)  (0xffff91443500)
0xffff914b0e6c  constant pool (size 44)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = LTE
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff914b0f00     0  movz x16, #0xc00000000
0xffff914b0f04     4  sub csp, jssp, #0x10 (16)
0xffff914b0f08     8  stp fp, lr, [jssp, #-16]!
0xffff914b0f0c    12  sub csp, jssp, #0x10 (16)
0xffff914b0f10    16  str x16, [jssp, #-8]!
0xffff914b0f14    20  ldr x17, pc+92 (addr 0x0000ffff914b0f70)    ;; object: 0xffff914b0ea1 <Code: COMPARE_IC>
0xffff914b0f18    24  sub csp, jssp, #0x10 (16)
0xffff914b0f1c    28  str x17, [jssp, #-8]!
0xffff914b0f20    32  add fp, jssp, #0x10 (16)
0xffff914b0f24    36  sub csp, jssp, #0x18 (24)
0xffff914b0f28    40  stp lr, x0, [jssp, #-24]!
0xffff914b0f2c    44  str x1, [jssp, #16]
0xffff914b0f30    48  movz x10, #0x3300000000
0xffff914b0f34    52  sub csp, jssp, #0x18 (24)
0xffff914b0f38    56  stp x10, x0, [jssp, #-24]!
0xffff914b0f3c    60  str x1, [jssp, #16]
0xffff914b0f40    64  movz x0, #0x3
0xffff914b0f44    68  ldr x1, pc+52 (addr 0x0000ffff914b0f78)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914b0f48    72  ldr x16, pc+56 (addr 0x0000ffff914b0f80)    ;; code: STUB, CEntryStub, minor: 4
0xffff914b0f4c    76  blr x16
0xffff914b0f50    80  add x11, x0, #0x5f (95)
0xffff914b0f54    84  ldr x1, [jssp, #16]
0xffff914b0f58    88  ldp lr, x0, [jssp], #24
0xffff914b0f5c    92  mov jssp, fp
0xffff914b0f60    96  ldp fp, lr, [jssp], #16
0xffff914b0f64   100  br x11
0xffff914b0f68   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914b0f6c   108  d63f03e0       constant
0xffff914b0f70   112  914b0ea1       constant
0xffff914b0f74   116  0000ffff       constant
0xffff914b0f78   120  00c8a980       constant
0xffff914b0f7c   124  00000000       constant
0xffff914b0f80   128  91406060       constant
0xffff914b0f84   132  0000ffff       constant


RelocInfo (size = 10)
0xffff914b0f14  embedded object  (0xffff914b0ea1 <Code: COMPARE_IC>)
0xffff914b0f44  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914b0f48  code target (STUB)  (0xffff91406060)
0xffff914b0f68  constant pool (size 32)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = LTE
name = CompareICStub
compiler = unknown
Instructions (size = 160)
0xffff914b2220     0  orr x16, x0, x1
0xffff914b2224     4  tbnz w16, #0, #+0x10 (addr 0xffff914b2234)
0xffff914b2228     8  asr x1, x1, #32
0xffff914b222c    12  sub x0, x1, x0, asr #32
0xffff914b2230    16  ret
0xffff914b2234    20  movz x16, #0xc00000000
0xffff914b2238    24  sub csp, jssp, #0x10 (16)
0xffff914b223c    28  stp fp, lr, [jssp, #-16]!
0xffff914b2240    32  sub csp, jssp, #0x10 (16)
0xffff914b2244    36  str x16, [jssp, #-8]!
0xffff914b2248    40  ldr x17, pc+96 (addr 0x0000ffff914b22a8)    ;; object: 0xffff914b21c1 <Code: COMPARE_IC>
0xffff914b224c    44  sub csp, jssp, #0x10 (16)
0xffff914b2250    48  str x17, [jssp, #-8]!
0xffff914b2254    52  add fp, jssp, #0x10 (16)
0xffff914b2258    56  sub csp, jssp, #0x18 (24)
0xffff914b225c    60  stp lr, x0, [jssp, #-24]!
0xffff914b2260    64  str x1, [jssp, #16]
0xffff914b2264    68  movz x10, #0x3300000000
0xffff914b2268    72  sub csp, jssp, #0x18 (24)
0xffff914b226c    76  stp x10, x0, [jssp, #-24]!
0xffff914b2270    80  str x1, [jssp, #16]
0xffff914b2274    84  movz x0, #0x3
0xffff914b2278    88  ldr x1, pc+56 (addr 0x0000ffff914b22b0)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914b227c    92  ldr x16, pc+60 (addr 0x0000ffff914b22b8)    ;; code: STUB, CEntryStub, minor: 4
0xffff914b2280    96  blr x16
0xffff914b2284   100  add x11, x0, #0x5f (95)
0xffff914b2288   104  ldr x1, [jssp, #16]
0xffff914b228c   108  ldp lr, x0, [jssp], #24
0xffff914b2290   112  mov jssp, fp
0xffff914b2294   116  ldp fp, lr, [jssp], #16
0xffff914b2298   120  br x11
0xffff914b229c   124  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff914b22a0   128  d63f03e0       constant
0xffff914b22a4   132  d503201f       constant
0xffff914b22a8   136  914b21c1       constant
0xffff914b22ac   140  0000ffff       constant
0xffff914b22b0   144  00c8a980       constant
0xffff914b22b4   148  00000000       constant
0xffff914b22b8   152  91406060       constant
0xffff914b22bc   156  0000ffff       constant


RelocInfo (size = 10)
0xffff914b2248  embedded object  (0xffff914b21c1 <Code: COMPARE_IC>)
0xffff914b2278  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914b227c  code target (STUB)  (0xffff91406060)
0xffff914b229c  constant pool (size 36)


kind = HANDLER
major_key = <NoCache>Stub
name = slice
compiler = unknown
Instructions (size = 152)
0xffff914b29a0     0  sub csp, jssp, #0x8 (8)
0xffff914b29a4     4  str x3, [jssp, #-8]!
0xffff914b29a8     8  sub csp, jssp, #0x8 (8)
0xffff914b29ac    12  str x0, [jssp, #-8]!
0xffff914b29b0    16  ldur x3, [cp, #39]
0xffff914b29b4    20  movz x16, #0x2e7
0xffff914b29b8    24  ldr x3, [x3, x16]
0xffff914b29bc    28  ldur x3, [x3, #23]
0xffff914b29c0    32  ldur x3, [x3, #23]
0xffff914b29c4    36  ldr x0, pc+84 (addr 0x0000ffff914b2a18)    ;; object: 0x49b63e59 Cell for 0
0xffff914b29c8    40  ldur x0, [x0, #7]
0xffff914b29cc    44  cmp x0, #0x0 (0)
0xffff914b29d0    48  b.ne #+0x1c (addr 0xffff914b29ec)
0xffff914b29d4    52  ldur x0, [x3, #-1]
0xffff914b29d8    56  ldr x4, pc+72 (addr 0x0000ffff914b2a20)    ;; object: 0x40806e39 WeakCell for 0x364156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff914b29dc    60  ldur x4, [x4, #7]
0xffff914b29e0    64  cmp x0, x4
0xffff914b29e4    68  b.ne #+0x8 (addr 0xffff914b29ec)
0xffff914b29e8    72  b #+0x14 (addr 0xffff914b29fc)
0xffff914b29ec    76  ldr x0, [jssp], #8
0xffff914b29f0    80  ldr x3, [jssp], #8
0xffff914b29f4    84  ldr x16, pc+52 (addr 0x0000ffff914b2a28)    ;; code: BUILTIN
0xffff914b29f8    88  br x16
0xffff914b29fc    92  add jssp, jssp, #0x10 (16)
0xffff914b2a00    96  mov x1, x3
0xffff914b2a04   100  ldr x16, pc+44 (addr 0x0000ffff914b2a30)    ;; code: HANDLER, LoadConstantStub, minor: 18
0xffff914b2a08   104  br x16
0xffff914b2a0c   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff914b2a10   112  d63f03e0       constant
0xffff914b2a14   116  d503201f       constant
0xffff914b2a18   120  49b63e59       constant
0xffff914b2a1c   124  00000000       constant
0xffff914b2a20   128  40806e39       constant
0xffff914b2a24   132  00000000       constant
0xffff914b2a28   136  914222e0       constant
0xffff914b2a2c   140  0000ffff       constant
0xffff914b2a30   144  9147ccc0       constant
0xffff914b2a34   148  0000ffff       constant


RelocInfo (size = 10)
0xffff914b29c4  embedded object  (0x49b63e59 Cell for 0)
0xffff914b29d8  embedded object  (0x40806e39 WeakCell for 0x364156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff914b29f4  code target (BUILTIN)  (0xffff914222e0)
0xffff914b2a04  code target (HANDLER)  (0xffff9147ccc0)
0xffff914b2a0c  constant pool (size 44)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff914b2b40     0  ldur x6, [x1, #7]
0xffff914b2b44     4  ldur w7, [x6, #11]
0xffff914b2b48     8  adds w8, w7, #0x3 (3)
0xffff914b2b4c    12  b.vs #+0x1dc (addr 0xffff914b2d28)
0xffff914b2b50    16  movz w16, #0x95ff
0xffff914b2b54    20  cmp w8, w16, lsl #1
0xffff914b2b58    24  b.hs #+0x1e0 (addr 0xffff914b2d38)
0xffff914b2b5c    28  lsl x9, x8, #32
0xffff914b2b60    32  lsl w10, w8, #3
0xffff914b2b64    36  add w10, w10, #0x10 (16)
0xffff914b2b68    40  sxtw x10, w10
0xffff914b2b6c    44  movz x11, #0xf2c0
0xffff914b2b70    48  movk x11, #0x4117, lsl #16
0xffff914b2b74    52  ldp x13, x16, [x11]
0xffff914b2b78    56  adds x12, x13, x10
0xffff914b2b7c    60  ccmp x12, x16, #nzCv, lo
0xffff914b2b80    64  b.hi #+0xf8 (addr 0xffff914b2c78)
0xffff914b2b84    68  str x12, [x11]
0xffff914b2b88    72  orr x13, x13, #0x1
0xffff914b2b8c    76  ldr x10, pc+348 (addr 0x0000ffff914b2ce8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914b2b90    80  stur x10, [x13, #-1]
0xffff914b2b94    84  stur x9, [x13, #7]
0xffff914b2b98    88  cmp w7, w8
0xffff914b2b9c    92  b.ge #+0x18 (addr 0xffff914b2bb4)
0xffff914b2ba0    96  sub w8, w8, #0x1 (1)
0xffff914b2ba4   100  ldr x9, pc+332 (addr 0x0000ffff914b2cf0)    ;; object: 0x49b04241 <undefined>
0xffff914b2ba8   104  add x10, x13, #0xf (15)
0xffff914b2bac   108  str x9, [x10, w8, sxtw #3]
0xffff914b2bb0   112  b #-0x18 (addr 0xffff914b2b98)
0xffff914b2bb4   116  cmp w7, #0x0 (0)
0xffff914b2bb8   120  b.le #+0x1c (addr 0xffff914b2bd4)
0xffff914b2bbc   124  sub w7, w7, #0x1 (1)
0xffff914b2bc0   128  add x8, x6, #0xf (15)
0xffff914b2bc4   132  ldr x9, [x8, w7, sxtw #3]
0xffff914b2bc8   136  add x8, x13, #0xf (15)
0xffff914b2bcc   140  str x9, [x8, w7, sxtw #3]
0xffff914b2bd0   144  b #-0x1c (addr 0xffff914b2bb4)
0xffff914b2bd4   148  stur x13, [x1, #7]
0xffff914b2bd8   152  add x6, x1, #0x7 (7)
0xffff914b2bdc   156  and x13, x1, #0xfffffffffff00000
0xffff914b2be0   160  ldr x13, [x13, #8]
0xffff914b2be4   164  tbz w13, #2, #+0x18 (addr 0xffff914b2bfc)
0xffff914b2be8   168  sub csp, jssp, #0x8 (8)
0xffff914b2bec   172  str lr, [jssp, #-8]!
0xffff914b2bf0   176  ldr x16, pc+264 (addr 0x0000ffff914b2cf8)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff914b2bf4   180  blr x16
0xffff914b2bf8   184  ldr lr, [jssp], #8
0xffff914b2bfc   188  tbz w0, #0, #+0x14c (addr 0xffff914b2d48)
0xffff914b2c00   192  mov x2, x0
0xffff914b2c04   196  ldur x4, [x1, #7]
0xffff914b2c08   200  stur x2, [x4, #87]
0xffff914b2c0c   204  add x3, x4, #0x57 (87)
0xffff914b2c10   208  and x2, x2, #0xfffffffffff00000
0xffff914b2c14   212  ldr x2, [x2, #8]
0xffff914b2c18   216  tbz w2, #1, #+0x24 (addr 0xffff914b2c3c)
0xffff914b2c1c   220  and x2, x4, #0xfffffffffff00000
0xffff914b2c20   224  ldr x2, [x2, #8]
0xffff914b2c24   228  tbz w2, #2, #+0x18 (addr 0xffff914b2c3c)
0xffff914b2c28   232  sub csp, jssp, #0x8 (8)
0xffff914b2c2c   236  str lr, [jssp, #-8]!
0xffff914b2c30   240  ldr x16, pc+208 (addr 0x0000ffff914b2d00)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914b2c34   244  blr x16
0xffff914b2c38   248  ldr lr, [jssp], #8
0xffff914b2c3c   252  stur x5, [x1, #-1]
0xffff914b2c40   256  tbz w5, #0, #+0x34 (addr 0xffff914b2c74)
0xffff914b2c44   260  sub x2, x1, #0x1 (1)
0xffff914b2c48   264  and x5, x5, #0xfffffffffff00000
0xffff914b2c4c   268  ldr x5, [x5, #8]
0xffff914b2c50   272  tbz w5, #1, #+0x24 (addr 0xffff914b2c74)
0xffff914b2c54   276  and x5, x1, #0xfffffffffff00000
0xffff914b2c58   280  ldr x5, [x5, #8]
0xffff914b2c5c   284  tbz w5, #2, #+0x18 (addr 0xffff914b2c74)
0xffff914b2c60   288  sub csp, jssp, #0x8 (8)
0xffff914b2c64   292  str lr, [jssp, #-8]!
0xffff914b2c68   296  ldr x16, pc+160 (addr 0x0000ffff914b2d08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914b2c6c   300  blr x16
0xffff914b2c70   304  ldr lr, [jssp], #8
0xffff914b2c74   308  ret
0xffff914b2c78   312  sub csp, jssp, #0x10 (16)
0xffff914b2c7c   316  stp fp, lr, [jssp, #-16]!
0xffff914b2c80   320  movz fp, #0xa00000000
0xffff914b2c84   324  sub csp, jssp, #0x8 (8)
0xffff914b2c88   328  str fp, [jssp, #-8]!
0xffff914b2c8c   332  add fp, jssp, #0x8 (8)
0xffff914b2c90   336  movz x13, #0x0
0xffff914b2c94   340  mov x16, lr
0xffff914b2c98   344  ldr x17, pc+120 (addr 0x0000ffff914b2d10)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914b2c9c   348  blr x17
0xffff914b2ca0   352  lsl x0, x10, #32
0xffff914b2ca4   356  movz x10, #0x0
0xffff914b2ca8   360  sub csp, jssp, #0x10 (16)
0xffff914b2cac   364  stp x10, x0, [jssp, #-16]!
0xffff914b2cb0   368  movz x0, #0x2
0xffff914b2cb4   372  movz x1, #0x5b88
0xffff914b2cb8   376  movk x1, #0xe2, lsl #16
0xffff914b2cbc   380  ldr x16, pc+92 (addr 0x0000ffff914b2d18)    ;; code: STUB, CEntryStub, minor: 5
0xffff914b2cc0   384  blr x16
0xffff914b2cc4   388  str x0, [jssp, #104]
0xffff914b2cc8   392  ldr x16, pc+88 (addr 0x0000ffff914b2d20)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914b2ccc   396  blr x16
0xffff914b2cd0   400  ldr lr, [jssp, #16]
0xffff914b2cd4   404  ldp xzr, fp, [jssp], #24
0xffff914b2cd8   408  b #-0x14c (addr 0xffff914b2b8c)
0xffff914b2cdc   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff914b2ce0   416  d63f03e0       constant
0xffff914b2ce4   420  d503201f       constant
0xffff914b2ce8   424  36404259       constant
0xffff914b2cec   428  00000000       constant
0xffff914b2cf0   432  49b04241       constant
0xffff914b2cf4   436  00000000       constant
0xffff914b2cf8   440  914370c0       constant
0xffff914b2cfc   444  0000ffff       constant
0xffff914b2d00   448  914378a0       constant
0xffff914b2d04   452  0000ffff       constant
0xffff914b2d08   456  91438080       constant
0xffff914b2d0c   460  0000ffff       constant
0xffff914b2d10   464  91406820       constant
0xffff914b2d14   468  0000ffff       constant
0xffff914b2d18   472  91406260       constant
0xffff914b2d1c   476  0000ffff       constant
0xffff914b2d20   480  914068e0       constant
0xffff914b2d24   484  0000ffff       constant
0xffff914b2d28   488  movz x16, #0x0
0xffff914b2d2c   492  sub csp, jssp, #0x10 (16)
0xffff914b2d30   496  stp fp, lr, [jssp, #-16]!
0xffff914b2d34   500  bl #+0x24 (addr 0xffff914b2d58)
0xffff914b2d38   504  movz x16, #0x8
0xffff914b2d3c   508  sub csp, jssp, #0x10 (16)
0xffff914b2d40   512  stp fp, lr, [jssp, #-16]!
0xffff914b2d44   516  bl #+0x14 (addr 0xffff914b2d58)
0xffff914b2d48   520  movz x16, #0x10
0xffff914b2d4c   524  sub csp, jssp, #0x10 (16)
0xffff914b2d50   528  stp fp, lr, [jssp, #-16]!
0xffff914b2d54   532  bl #+0x4 (addr 0xffff914b2d58)
0xffff914b2d58   536  movz x17, #0xa00000000
0xffff914b2d5c   540  sub csp, jssp, #0x10 (16)
0xffff914b2d60   544  stp x17, cp, [jssp, #-16]!
0xffff914b2d64   548  add fp, jssp, #0x10 (16)
0xffff914b2d68   552  ldr x17, pc+24 (addr 0x0000ffff914b2d80)    ;; lazy deoptimization bailout 0
0xffff914b2d6c   556  add x17, x17, x16
0xffff914b2d70   560  br x17
0xffff914b2d74   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914b2d78   568  d63f03e0       constant
0xffff914b2d7c   572  d503201f       constant
0xffff914b2d80   576  91206000       constant
0xffff914b2d84   580  0000ffff       constant


Safepoints (size = 21)
0xffff914b2cc4   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff914b2b8c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914b2ba4  embedded object  (0x49b04241 <undefined>)
0xffff914b2bf0  code target (STUB)  (0xffff914370c0)
0xffff914b2c30  code target (STUB)  (0xffff914378a0)
0xffff914b2c68  code target (STUB)  (0xffff91438080)
0xffff914b2c98  code target (STUB)  (0xffff91406820)
0xffff914b2cbc  code target (STUB)  (0xffff91406260)
0xffff914b2cc8  code target (STUB)  (0xffff914068e0)
0xffff914b2cdc  constant pool (size 76)
0xffff914b2d68  runtime entry
0xffff914b2d74  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff914b2b40     0  ldur x6, [x1, #7]
0xffff914b2b44     4  ldur w7, [x6, #11]
0xffff914b2b48     8  adds w8, w7, #0x3 (3)
0xffff914b2b4c    12  b.vs #+0x1dc (addr 0xffff914b2d28)
0xffff914b2b50    16  movz w16, #0x95ff
0xffff914b2b54    20  cmp w8, w16, lsl #1
0xffff914b2b58    24  b.hs #+0x1e0 (addr 0xffff914b2d38)
0xffff914b2b5c    28  lsl x9, x8, #32
0xffff914b2b60    32  lsl w10, w8, #3
0xffff914b2b64    36  add w10, w10, #0x10 (16)
0xffff914b2b68    40  sxtw x10, w10
0xffff914b2b6c    44  movz x11, #0xf2c0
0xffff914b2b70    48  movk x11, #0x4117, lsl #16
0xffff914b2b74    52  ldp x13, x16, [x11]
0xffff914b2b78    56  adds x12, x13, x10
0xffff914b2b7c    60  ccmp x12, x16, #nzCv, lo
0xffff914b2b80    64  b.hi #+0xf8 (addr 0xffff914b2c78)
0xffff914b2b84    68  str x12, [x11]
0xffff914b2b88    72  orr x13, x13, #0x1
0xffff914b2b8c    76  ldr x10, pc+348 (addr 0x0000ffff914b2ce8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914b2b90    80  stur x10, [x13, #-1]
0xffff914b2b94    84  stur x9, [x13, #7]
0xffff914b2b98    88  cmp w7, w8
0xffff914b2b9c    92  b.ge #+0x18 (addr 0xffff914b2bb4)
0xffff914b2ba0    96  sub w8, w8, #0x1 (1)
0xffff914b2ba4   100  ldr x9, pc+332 (addr 0x0000ffff914b2cf0)    ;; object: 0x49b04241 <undefined>
0xffff914b2ba8   104  add x10, x13, #0xf (15)
0xffff914b2bac   108  str x9, [x10, w8, sxtw #3]
0xffff914b2bb0   112  b #-0x18 (addr 0xffff914b2b98)
0xffff914b2bb4   116  cmp w7, #0x0 (0)
0xffff914b2bb8   120  b.le #+0x1c (addr 0xffff914b2bd4)
0xffff914b2bbc   124  sub w7, w7, #0x1 (1)
0xffff914b2bc0   128  add x8, x6, #0xf (15)
0xffff914b2bc4   132  ldr x9, [x8, w7, sxtw #3]
0xffff914b2bc8   136  add x8, x13, #0xf (15)
0xffff914b2bcc   140  str x9, [x8, w7, sxtw #3]
0xffff914b2bd0   144  b #-0x1c (addr 0xffff914b2bb4)
0xffff914b2bd4   148  stur x13, [x1, #7]
0xffff914b2bd8   152  add x6, x1, #0x7 (7)
0xffff914b2bdc   156  and x13, x1, #0xfffffffffff00000
0xffff914b2be0   160  ldr x13, [x13, #8]
0xffff914b2be4   164  tbz w13, #2, #+0x18 (addr 0xffff914b2bfc)
0xffff914b2be8   168  sub csp, jssp, #0x8 (8)
0xffff914b2bec   172  str lr, [jssp, #-8]!
0xffff914b2bf0   176  ldr x16, pc+264 (addr 0x0000ffff914b2cf8)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff914b2bf4   180  blr x16
0xffff914b2bf8   184  ldr lr, [jssp], #8
0xffff914b2bfc   188  tbz w0, #0, #+0x14c (addr 0xffff914b2d48)
0xffff914b2c00   192  mov x2, x0
0xffff914b2c04   196  ldur x4, [x1, #7]
0xffff914b2c08   200  stur x2, [x4, #87]
0xffff914b2c0c   204  add x3, x4, #0x57 (87)
0xffff914b2c10   208  and x2, x2, #0xfffffffffff00000
0xffff914b2c14   212  ldr x2, [x2, #8]
0xffff914b2c18   216  tbz w2, #1, #+0x24 (addr 0xffff914b2c3c)
0xffff914b2c1c   220  and x2, x4, #0xfffffffffff00000
0xffff914b2c20   224  ldr x2, [x2, #8]
0xffff914b2c24   228  tbz w2, #2, #+0x18 (addr 0xffff914b2c3c)
0xffff914b2c28   232  sub csp, jssp, #0x8 (8)
0xffff914b2c2c   236  str lr, [jssp, #-8]!
0xffff914b2c30   240  ldr x16, pc+208 (addr 0x0000ffff914b2d00)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914b2c34   244  blr x16
0xffff914b2c38   248  ldr lr, [jssp], #8
0xffff914b2c3c   252  stur x5, [x1, #-1]
0xffff914b2c40   256  tbz w5, #0, #+0x34 (addr 0xffff914b2c74)
0xffff914b2c44   260  sub x2, x1, #0x1 (1)
0xffff914b2c48   264  and x5, x5, #0xfffffffffff00000
0xffff914b2c4c   268  ldr x5, [x5, #8]
0xffff914b2c50   272  tbz w5, #1, #+0x24 (addr 0xffff914b2c74)
0xffff914b2c54   276  and x5, x1, #0xfffffffffff00000
0xffff914b2c58   280  ldr x5, [x5, #8]
0xffff914b2c5c   284  tbz w5, #2, #+0x18 (addr 0xffff914b2c74)
0xffff914b2c60   288  sub csp, jssp, #0x8 (8)
0xffff914b2c64   292  str lr, [jssp, #-8]!
0xffff914b2c68   296  ldr x16, pc+160 (addr 0x0000ffff914b2d08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914b2c6c   300  blr x16
0xffff914b2c70   304  ldr lr, [jssp], #8
0xffff914b2c74   308  ret
0xffff914b2c78   312  sub csp, jssp, #0x10 (16)
0xffff914b2c7c   316  stp fp, lr, [jssp, #-16]!
0xffff914b2c80   320  movz fp, #0xa00000000
0xffff914b2c84   324  sub csp, jssp, #0x8 (8)
0xffff914b2c88   328  str fp, [jssp, #-8]!
0xffff914b2c8c   332  add fp, jssp, #0x8 (8)
0xffff914b2c90   336  movz x13, #0x0
0xffff914b2c94   340  mov x16, lr
0xffff914b2c98   344  ldr x17, pc+120 (addr 0x0000ffff914b2d10)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914b2c9c   348  blr x17
0xffff914b2ca0   352  lsl x0, x10, #32
0xffff914b2ca4   356  movz x10, #0x0
0xffff914b2ca8   360  sub csp, jssp, #0x10 (16)
0xffff914b2cac   364  stp x10, x0, [jssp, #-16]!
0xffff914b2cb0   368  movz x0, #0x2
0xffff914b2cb4   372  movz x1, #0x5b88
0xffff914b2cb8   376  movk x1, #0xe2, lsl #16
0xffff914b2cbc   380  ldr x16, pc+92 (addr 0x0000ffff914b2d18)    ;; code: STUB, CEntryStub, minor: 5
0xffff914b2cc0   384  blr x16
0xffff914b2cc4   388  str x0, [jssp, #104]
0xffff914b2cc8   392  ldr x16, pc+88 (addr 0x0000ffff914b2d20)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914b2ccc   396  blr x16
0xffff914b2cd0   400  ldr lr, [jssp, #16]
0xffff914b2cd4   404  ldp xzr, fp, [jssp], #24
0xffff914b2cd8   408  b #-0x14c (addr 0xffff914b2b8c)
0xffff914b2cdc   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff914b2ce0   416  d63f03e0       constant
0xffff914b2ce4   420  d503201f       constant
0xffff914b2ce8   424  36404259       constant
0xffff914b2cec   428  00000000       constant
0xffff914b2cf0   432  49b04241       constant
0xffff914b2cf4   436  00000000       constant
0xffff914b2cf8   440  914370c0       constant
0xffff914b2cfc   444  0000ffff       constant
0xffff914b2d00   448  914378a0       constant
0xffff914b2d04   452  0000ffff       constant
0xffff914b2d08   456  91438080       constant
0xffff914b2d0c   460  0000ffff       constant
0xffff914b2d10   464  91406820       constant
0xffff914b2d14   468  0000ffff       constant
0xffff914b2d18   472  91406260       constant
0xffff914b2d1c   476  0000ffff       constant
0xffff914b2d20   480  914068e0       constant
0xffff914b2d24   484  0000ffff       constant
0xffff914b2d28   488  movz x16, #0x0
0xffff914b2d2c   492  sub csp, jssp, #0x10 (16)
0xffff914b2d30   496  stp fp, lr, [jssp, #-16]!
0xffff914b2d34   500  bl #+0x24 (addr 0xffff914b2d58)
0xffff914b2d38   504  movz x16, #0x8
0xffff914b2d3c   508  sub csp, jssp, #0x10 (16)
0xffff914b2d40   512  stp fp, lr, [jssp, #-16]!
0xffff914b2d44   516  bl #+0x14 (addr 0xffff914b2d58)
0xffff914b2d48   520  movz x16, #0x10
0xffff914b2d4c   524  sub csp, jssp, #0x10 (16)
0xffff914b2d50   528  stp fp, lr, [jssp, #-16]!
0xffff914b2d54   532  bl #+0x4 (addr 0xffff914b2d58)
0xffff914b2d58   536  movz x17, #0xa00000000
0xffff914b2d5c   540  sub csp, jssp, #0x10 (16)
0xffff914b2d60   544  stp x17, cp, [jssp, #-16]!
0xffff914b2d64   548  add fp, jssp, #0x10 (16)
0xffff914b2d68   552  ldr x17, pc+24 (addr 0x0000ffff914b2d80)    ;; lazy deoptimization bailout 0
0xffff914b2d6c   556  add x17, x17, x16
0xffff914b2d70   560  br x17
0xffff914b2d74   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914b2d78   568  d63f03e0       constant
0xffff914b2d7c   572  d503201f       constant
0xffff914b2d80   576  91206000       constant
0xffff914b2d84   580  0000ffff       constant


Safepoints (size = 21)
0xffff914b2cc4   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff914b2b8c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914b2ba4  embedded object  (0x49b04241 <undefined>)
0xffff914b2bf0  code target (STUB)  (0xffff914370c0)
0xffff914b2c30  code target (STUB)  (0xffff914378a0)
0xffff914b2c68  code target (STUB)  (0xffff91438080)
0xffff914b2c98  code target (STUB)  (0xffff91406820)
0xffff914b2cbc  code target (STUB)  (0xffff91406260)
0xffff914b2cc8  code target (STUB)  (0xffff914068e0)
0xffff914b2cdc  constant pool (size 76)
0xffff914b2d68  runtime entry
0xffff914b2d74  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = module
compiler = unknown
Instructions (size = 184)
0xffff914b2e00     0  sub csp, jssp, #0x8 (8)
0xffff914b2e04     4  str x3, [jssp, #-8]!
0xffff914b2e08     8  sub csp, jssp, #0x8 (8)
0xffff914b2e0c    12  str x4, [jssp, #-8]!
0xffff914b2e10    16  ldr x3, pc+112 (addr 0x0000ffff914b2e80)    ;; object: 0x49b63e59 Cell for 0
0xffff914b2e14    20  ldur x3, [x3, #7]
0xffff914b2e18    24  cmp x3, #0x0 (0)
0xffff914b2e1c    28  b.ne #+0x44 (addr 0xffff914b2e60)
0xffff914b2e20    32  tbz w0, #0, #+0x40 (addr 0xffff914b2e60)
0xffff914b2e24    36  ldur x3, [x0, #-1]
0xffff914b2e28    40  ldr x4, pc+96 (addr 0x0000ffff914b2e88)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914b2e2c    44  ldur x4, [x4, #7]
0xffff914b2e30    48  cmp x3, x4
0xffff914b2e34    52  b.ne #+0x2c (addr 0xffff914b2e60)
0xffff914b2e38    56  ldr x5, pc+88 (addr 0x0000ffff914b2e90)    ;; object: 0x40807701 WeakCell for 0x3642d189 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914b2e3c    60  ldur x5, [x5, #7]
0xffff914b2e40    64  tbz w5, #0, #+0x20 (addr 0xffff914b2e60)
0xffff914b2e44    68  ldursw x4, [x5, #15]
0xffff914b2e48    72  tbnz w4, #23, #+0x18 (addr 0xffff914b2e60)
0xffff914b2e4c    76  ldr x4, [jssp], #8
0xffff914b2e50    80  ldr x3, [jssp], #8
0xffff914b2e54    84  ldr x2, pc+68 (addr 0x0000ffff914b2e98)    ;; object: 0x49bb9c61 <String[6]: module>
0xffff914b2e58    88  ldr x16, pc+72 (addr 0x0000ffff914b2ea0)    ;; code: HANDLER, StoreTransitionStub, minor: 327691
0xffff914b2e5c    92  br x16
0xffff914b2e60    96  ldr x2, pc+72 (addr 0x0000ffff914b2ea8)    ;; object: 0x49bb9c61 <String[6]: module>
0xffff914b2e64   100  ldr x4, [jssp], #8
0xffff914b2e68   104  ldr x3, [jssp], #8
0xffff914b2e6c   108  ldr x16, pc+68 (addr 0x0000ffff914b2eb0)    ;; code: BUILTIN
0xffff914b2e70   112  br x16
0xffff914b2e74   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914b2e78   120  d63f03e0       constant
0xffff914b2e7c   124  d503201f       constant
0xffff914b2e80   128  49b63e59       constant
0xffff914b2e84   132  00000000       constant
0xffff914b2e88   136  49bc22b1       constant
0xffff914b2e8c   140  00000000       constant
0xffff914b2e90   144  40807701       constant
0xffff914b2e94   148  00000000       constant
0xffff914b2e98   152  49bb9c61       constant
0xffff914b2e9c   156  00000000       constant
0xffff914b2ea0   160  914b2b40       constant
0xffff914b2ea4   164  0000ffff       constant
0xffff914b2ea8   168  49bb9c61       constant
0xffff914b2eac   172  00000000       constant
0xffff914b2eb0   176  91422420       constant
0xffff914b2eb4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914b2e10  embedded object  (0x49b63e59 Cell for 0)
0xffff914b2e28  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914b2e38  embedded object  (0x40807701 WeakCell for 0x3642d189 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914b2e54  embedded object  (0x49bb9c61 <String[6]: module>)
0xffff914b2e58  code target (HANDLER)  (0xffff914b2b40)
0xffff914b2e60  embedded object  (0x49bb9c61 <String[6]: module>)
0xffff914b2e6c  code target (BUILTIN)  (0xffff91422420)
0xffff914b2e74  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914b4c80     0  tbz w0, #0, #+0x98 (addr 0xffff914b4d18)
0xffff914b4c84     4  mov x2, x0
0xffff914b4c88     8  ldur x4, [x1, #7]
0xffff914b4c8c    12  stur x2, [x4, #95]
0xffff914b4c90    16  add x3, x4, #0x5f (95)
0xffff914b4c94    20  and x2, x2, #0xfffffffffff00000
0xffff914b4c98    24  ldr x2, [x2, #8]
0xffff914b4c9c    28  tbz w2, #1, #+0x24 (addr 0xffff914b4cc0)
0xffff914b4ca0    32  and x2, x4, #0xfffffffffff00000
0xffff914b4ca4    36  ldr x2, [x2, #8]
0xffff914b4ca8    40  tbz w2, #2, #+0x18 (addr 0xffff914b4cc0)
0xffff914b4cac    44  sub csp, jssp, #0x8 (8)
0xffff914b4cb0    48  str lr, [jssp, #-8]!
0xffff914b4cb4    52  ldr x16, pc+84 (addr 0x0000ffff914b4d08)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914b4cb8    56  blr x16
0xffff914b4cbc    60  ldr lr, [jssp], #8
0xffff914b4cc0    64  stur x5, [x1, #-1]
0xffff914b4cc4    68  tbz w5, #0, #+0x34 (addr 0xffff914b4cf8)
0xffff914b4cc8    72  sub x2, x1, #0x1 (1)
0xffff914b4ccc    76  and x5, x5, #0xfffffffffff00000
0xffff914b4cd0    80  ldr x5, [x5, #8]
0xffff914b4cd4    84  tbz w5, #1, #+0x24 (addr 0xffff914b4cf8)
0xffff914b4cd8    88  and x5, x1, #0xfffffffffff00000
0xffff914b4cdc    92  ldr x5, [x5, #8]
0xffff914b4ce0    96  tbz w5, #2, #+0x18 (addr 0xffff914b4cf8)
0xffff914b4ce4   100  sub csp, jssp, #0x8 (8)
0xffff914b4ce8   104  str lr, [jssp, #-8]!
0xffff914b4cec   108  ldr x16, pc+36 (addr 0x0000ffff914b4d10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914b4cf0   112  blr x16
0xffff914b4cf4   116  ldr lr, [jssp], #8
0xffff914b4cf8   120  ret
0xffff914b4cfc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914b4d00   128  d63f03e0       constant
0xffff914b4d04   132  d503201f       constant
0xffff914b4d08   136  914378a0       constant
0xffff914b4d0c   140  0000ffff       constant
0xffff914b4d10   144  91438080       constant
0xffff914b4d14   148  0000ffff       constant
0xffff914b4d18   152  movz x16, #0x0
0xffff914b4d1c   156  sub csp, jssp, #0x10 (16)
0xffff914b4d20   160  stp fp, lr, [jssp, #-16]!
0xffff914b4d24   164  bl #+0x4 (addr 0xffff914b4d28)
0xffff914b4d28   168  movz x17, #0xa00000000
0xffff914b4d2c   172  sub csp, jssp, #0x10 (16)
0xffff914b4d30   176  stp x17, cp, [jssp, #-16]!
0xffff914b4d34   180  add fp, jssp, #0x10 (16)
0xffff914b4d38   184  ldr x17, pc+24 (addr 0x0000ffff914b4d50)    ;; lazy deoptimization bailout 0
0xffff914b4d3c   188  add x17, x17, x16
0xffff914b4d40   192  br x17
0xffff914b4d44   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914b4d48   200  d63f03e0       constant
0xffff914b4d4c   204  d503201f       constant
0xffff914b4d50   208  91206000       constant
0xffff914b4d54   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914b4cb4  code target (STUB)  (0xffff914378a0)
0xffff914b4cec  code target (STUB)  (0xffff91438080)
0xffff914b4cfc  constant pool (size 28)
0xffff914b4d38  runtime entry
0xffff914b4d44  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914b4c80     0  tbz w0, #0, #+0x98 (addr 0xffff914b4d18)
0xffff914b4c84     4  mov x2, x0
0xffff914b4c88     8  ldur x4, [x1, #7]
0xffff914b4c8c    12  stur x2, [x4, #95]
0xffff914b4c90    16  add x3, x4, #0x5f (95)
0xffff914b4c94    20  and x2, x2, #0xfffffffffff00000
0xffff914b4c98    24  ldr x2, [x2, #8]
0xffff914b4c9c    28  tbz w2, #1, #+0x24 (addr 0xffff914b4cc0)
0xffff914b4ca0    32  and x2, x4, #0xfffffffffff00000
0xffff914b4ca4    36  ldr x2, [x2, #8]
0xffff914b4ca8    40  tbz w2, #2, #+0x18 (addr 0xffff914b4cc0)
0xffff914b4cac    44  sub csp, jssp, #0x8 (8)
0xffff914b4cb0    48  str lr, [jssp, #-8]!
0xffff914b4cb4    52  ldr x16, pc+84 (addr 0x0000ffff914b4d08)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914b4cb8    56  blr x16
0xffff914b4cbc    60  ldr lr, [jssp], #8
0xffff914b4cc0    64  stur x5, [x1, #-1]
0xffff914b4cc4    68  tbz w5, #0, #+0x34 (addr 0xffff914b4cf8)
0xffff914b4cc8    72  sub x2, x1, #0x1 (1)
0xffff914b4ccc    76  and x5, x5, #0xfffffffffff00000
0xffff914b4cd0    80  ldr x5, [x5, #8]
0xffff914b4cd4    84  tbz w5, #1, #+0x24 (addr 0xffff914b4cf8)
0xffff914b4cd8    88  and x5, x1, #0xfffffffffff00000
0xffff914b4cdc    92  ldr x5, [x5, #8]
0xffff914b4ce0    96  tbz w5, #2, #+0x18 (addr 0xffff914b4cf8)
0xffff914b4ce4   100  sub csp, jssp, #0x8 (8)
0xffff914b4ce8   104  str lr, [jssp, #-8]!
0xffff914b4cec   108  ldr x16, pc+36 (addr 0x0000ffff914b4d10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914b4cf0   112  blr x16
0xffff914b4cf4   116  ldr lr, [jssp], #8
0xffff914b4cf8   120  ret
0xffff914b4cfc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914b4d00   128  d63f03e0       constant
0xffff914b4d04   132  d503201f       constant
0xffff914b4d08   136  914378a0       constant
0xffff914b4d0c   140  0000ffff       constant
0xffff914b4d10   144  91438080       constant
0xffff914b4d14   148  0000ffff       constant
0xffff914b4d18   152  movz x16, #0x0
0xffff914b4d1c   156  sub csp, jssp, #0x10 (16)
0xffff914b4d20   160  stp fp, lr, [jssp, #-16]!
0xffff914b4d24   164  bl #+0x4 (addr 0xffff914b4d28)
0xffff914b4d28   168  movz x17, #0xa00000000
0xffff914b4d2c   172  sub csp, jssp, #0x10 (16)
0xffff914b4d30   176  stp x17, cp, [jssp, #-16]!
0xffff914b4d34   180  add fp, jssp, #0x10 (16)
0xffff914b4d38   184  ldr x17, pc+24 (addr 0x0000ffff914b4d50)    ;; lazy deoptimization bailout 0
0xffff914b4d3c   188  add x17, x17, x16
0xffff914b4d40   192  br x17
0xffff914b4d44   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914b4d48   200  d63f03e0       constant
0xffff914b4d4c   204  d503201f       constant
0xffff914b4d50   208  91206000       constant
0xffff914b4d54   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914b4cb4  code target (STUB)  (0xffff914378a0)
0xffff914b4cec  code target (STUB)  (0xffff91438080)
0xffff914b4cfc  constant pool (size 28)
0xffff914b4d38  runtime entry
0xffff914b4d44  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/module
compiler = unknown
Instructions (size = 184)
0xffff914b4dc0     0  sub csp, jssp, #0x8 (8)
0xffff914b4dc4     4  str x3, [jssp, #-8]!
0xffff914b4dc8     8  sub csp, jssp, #0x8 (8)
0xffff914b4dcc    12  str x4, [jssp, #-8]!
0xffff914b4dd0    16  ldr x3, pc+112 (addr 0x0000ffff914b4e40)    ;; object: 0x49b63e59 Cell for 0
0xffff914b4dd4    20  ldur x3, [x3, #7]
0xffff914b4dd8    24  cmp x3, #0x0 (0)
0xffff914b4ddc    28  b.ne #+0x44 (addr 0xffff914b4e20)
0xffff914b4de0    32  tbz w0, #0, #+0x40 (addr 0xffff914b4e20)
0xffff914b4de4    36  ldur x3, [x0, #-1]
0xffff914b4de8    40  ldr x4, pc+96 (addr 0x0000ffff914b4e48)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914b4dec    44  ldur x4, [x4, #7]
0xffff914b4df0    48  cmp x3, x4
0xffff914b4df4    52  b.ne #+0x2c (addr 0xffff914b4e20)
0xffff914b4df8    56  ldr x5, pc+88 (addr 0x0000ffff914b4e50)    ;; object: 0x4080a861 WeakCell for 0x3642d1e1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914b4dfc    60  ldur x5, [x5, #7]
0xffff914b4e00    64  tbz w5, #0, #+0x20 (addr 0xffff914b4e20)
0xffff914b4e04    68  ldursw x4, [x5, #15]
0xffff914b4e08    72  tbnz w4, #23, #+0x18 (addr 0xffff914b4e20)
0xffff914b4e0c    76  ldr x4, [jssp], #8
0xffff914b4e10    80  ldr x3, [jssp], #8
0xffff914b4e14    84  ldr x2, pc+68 (addr 0x0000ffff914b4e58)    ;; object: 0x49bb9b81 <String[15]: internal/module>
0xffff914b4e18    88  ldr x16, pc+72 (addr 0x0000ffff914b4e60)    ;; code: HANDLER, StoreTransitionStub, minor: 196620
0xffff914b4e1c    92  br x16
0xffff914b4e20    96  ldr x2, pc+72 (addr 0x0000ffff914b4e68)    ;; object: 0x49bb9b81 <String[15]: internal/module>
0xffff914b4e24   100  ldr x4, [jssp], #8
0xffff914b4e28   104  ldr x3, [jssp], #8
0xffff914b4e2c   108  ldr x16, pc+68 (addr 0x0000ffff914b4e70)    ;; code: BUILTIN
0xffff914b4e30   112  br x16
0xffff914b4e34   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914b4e38   120  d63f03e0       constant
0xffff914b4e3c   124  d503201f       constant
0xffff914b4e40   128  49b63e59       constant
0xffff914b4e44   132  00000000       constant
0xffff914b4e48   136  49bc22b1       constant
0xffff914b4e4c   140  00000000       constant
0xffff914b4e50   144  4080a861       constant
0xffff914b4e54   148  00000000       constant
0xffff914b4e58   152  49bb9b81       constant
0xffff914b4e5c   156  00000000       constant
0xffff914b4e60   160  914b4c80       constant
0xffff914b4e64   164  0000ffff       constant
0xffff914b4e68   168  49bb9b81       constant
0xffff914b4e6c   172  00000000       constant
0xffff914b4e70   176  91422420       constant
0xffff914b4e74   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914b4dd0  embedded object  (0x49b63e59 Cell for 0)
0xffff914b4de8  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914b4df8  embedded object  (0x4080a861 WeakCell for 0x3642d1e1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914b4e14  embedded object  (0x49bb9b81 <String[15]: internal/module>)
0xffff914b4e18  code target (HANDLER)  (0xffff914b4c80)
0xffff914b4e20  embedded object  (0x49bb9b81 <String[15]: internal/module>)
0xffff914b4e2c  code target (BUILTIN)  (0xffff91422420)
0xffff914b4e34  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914b53c0     0  tbz w0, #0, #+0x98 (addr 0xffff914b5458)
0xffff914b53c4     4  mov x2, x0
0xffff914b53c8     8  ldur x4, [x1, #7]
0xffff914b53cc    12  stur x2, [x4, #103]
0xffff914b53d0    16  add x3, x4, #0x67 (103)
0xffff914b53d4    20  and x2, x2, #0xfffffffffff00000
0xffff914b53d8    24  ldr x2, [x2, #8]
0xffff914b53dc    28  tbz w2, #1, #+0x24 (addr 0xffff914b5400)
0xffff914b53e0    32  and x2, x4, #0xfffffffffff00000
0xffff914b53e4    36  ldr x2, [x2, #8]
0xffff914b53e8    40  tbz w2, #2, #+0x18 (addr 0xffff914b5400)
0xffff914b53ec    44  sub csp, jssp, #0x8 (8)
0xffff914b53f0    48  str lr, [jssp, #-8]!
0xffff914b53f4    52  ldr x16, pc+84 (addr 0x0000ffff914b5448)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914b53f8    56  blr x16
0xffff914b53fc    60  ldr lr, [jssp], #8
0xffff914b5400    64  stur x5, [x1, #-1]
0xffff914b5404    68  tbz w5, #0, #+0x34 (addr 0xffff914b5438)
0xffff914b5408    72  sub x2, x1, #0x1 (1)
0xffff914b540c    76  and x5, x5, #0xfffffffffff00000
0xffff914b5410    80  ldr x5, [x5, #8]
0xffff914b5414    84  tbz w5, #1, #+0x24 (addr 0xffff914b5438)
0xffff914b5418    88  and x5, x1, #0xfffffffffff00000
0xffff914b541c    92  ldr x5, [x5, #8]
0xffff914b5420    96  tbz w5, #2, #+0x18 (addr 0xffff914b5438)
0xffff914b5424   100  sub csp, jssp, #0x8 (8)
0xffff914b5428   104  str lr, [jssp, #-8]!
0xffff914b542c   108  ldr x16, pc+36 (addr 0x0000ffff914b5450)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914b5430   112  blr x16
0xffff914b5434   116  ldr lr, [jssp], #8
0xffff914b5438   120  ret
0xffff914b543c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914b5440   128  d63f03e0       constant
0xffff914b5444   132  d503201f       constant
0xffff914b5448   136  914378a0       constant
0xffff914b544c   140  0000ffff       constant
0xffff914b5450   144  91438080       constant
0xffff914b5454   148  0000ffff       constant
0xffff914b5458   152  movz x16, #0x0
0xffff914b545c   156  sub csp, jssp, #0x10 (16)
0xffff914b5460   160  stp fp, lr, [jssp, #-16]!
0xffff914b5464   164  bl #+0x4 (addr 0xffff914b5468)
0xffff914b5468   168  movz x17, #0xa00000000
0xffff914b546c   172  sub csp, jssp, #0x10 (16)
0xffff914b5470   176  stp x17, cp, [jssp, #-16]!
0xffff914b5474   180  add fp, jssp, #0x10 (16)
0xffff914b5478   184  ldr x17, pc+24 (addr 0x0000ffff914b5490)    ;; lazy deoptimization bailout 0
0xffff914b547c   188  add x17, x17, x16
0xffff914b5480   192  br x17
0xffff914b5484   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914b5488   200  d63f03e0       constant
0xffff914b548c   204  d503201f       constant
0xffff914b5490   208  91206000       constant
0xffff914b5494   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914b53f4  code target (STUB)  (0xffff914378a0)
0xffff914b542c  code target (STUB)  (0xffff91438080)
0xffff914b543c  constant pool (size 28)
0xffff914b5478  runtime entry
0xffff914b5484  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914b53c0     0  tbz w0, #0, #+0x98 (addr 0xffff914b5458)
0xffff914b53c4     4  mov x2, x0
0xffff914b53c8     8  ldur x4, [x1, #7]
0xffff914b53cc    12  stur x2, [x4, #103]
0xffff914b53d0    16  add x3, x4, #0x67 (103)
0xffff914b53d4    20  and x2, x2, #0xfffffffffff00000
0xffff914b53d8    24  ldr x2, [x2, #8]
0xffff914b53dc    28  tbz w2, #1, #+0x24 (addr 0xffff914b5400)
0xffff914b53e0    32  and x2, x4, #0xfffffffffff00000
0xffff914b53e4    36  ldr x2, [x2, #8]
0xffff914b53e8    40  tbz w2, #2, #+0x18 (addr 0xffff914b5400)
0xffff914b53ec    44  sub csp, jssp, #0x8 (8)
0xffff914b53f0    48  str lr, [jssp, #-8]!
0xffff914b53f4    52  ldr x16, pc+84 (addr 0x0000ffff914b5448)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914b53f8    56  blr x16
0xffff914b53fc    60  ldr lr, [jssp], #8
0xffff914b5400    64  stur x5, [x1, #-1]
0xffff914b5404    68  tbz w5, #0, #+0x34 (addr 0xffff914b5438)
0xffff914b5408    72  sub x2, x1, #0x1 (1)
0xffff914b540c    76  and x5, x5, #0xfffffffffff00000
0xffff914b5410    80  ldr x5, [x5, #8]
0xffff914b5414    84  tbz w5, #1, #+0x24 (addr 0xffff914b5438)
0xffff914b5418    88  and x5, x1, #0xfffffffffff00000
0xffff914b541c    92  ldr x5, [x5, #8]
0xffff914b5420    96  tbz w5, #2, #+0x18 (addr 0xffff914b5438)
0xffff914b5424   100  sub csp, jssp, #0x8 (8)
0xffff914b5428   104  str lr, [jssp, #-8]!
0xffff914b542c   108  ldr x16, pc+36 (addr 0x0000ffff914b5450)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914b5430   112  blr x16
0xffff914b5434   116  ldr lr, [jssp], #8
0xffff914b5438   120  ret
0xffff914b543c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914b5440   128  d63f03e0       constant
0xffff914b5444   132  d503201f       constant
0xffff914b5448   136  914378a0       constant
0xffff914b544c   140  0000ffff       constant
0xffff914b5450   144  91438080       constant
0xffff914b5454   148  0000ffff       constant
0xffff914b5458   152  movz x16, #0x0
0xffff914b545c   156  sub csp, jssp, #0x10 (16)
0xffff914b5460   160  stp fp, lr, [jssp, #-16]!
0xffff914b5464   164  bl #+0x4 (addr 0xffff914b5468)
0xffff914b5468   168  movz x17, #0xa00000000
0xffff914b546c   172  sub csp, jssp, #0x10 (16)
0xffff914b5470   176  stp x17, cp, [jssp, #-16]!
0xffff914b5474   180  add fp, jssp, #0x10 (16)
0xffff914b5478   184  ldr x17, pc+24 (addr 0x0000ffff914b5490)    ;; lazy deoptimization bailout 0
0xffff914b547c   188  add x17, x17, x16
0xffff914b5480   192  br x17
0xffff914b5484   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914b5488   200  d63f03e0       constant
0xffff914b548c   204  d503201f       constant
0xffff914b5490   208  91206000       constant
0xffff914b5494   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914b53f4  code target (STUB)  (0xffff914378a0)
0xffff914b542c  code target (STUB)  (0xffff91438080)
0xffff914b543c  constant pool (size 28)
0xffff914b5478  runtime entry
0xffff914b5484  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = vm
compiler = unknown
Instructions (size = 184)
0xffff914b5500     0  sub csp, jssp, #0x8 (8)
0xffff914b5504     4  str x3, [jssp, #-8]!
0xffff914b5508     8  sub csp, jssp, #0x8 (8)
0xffff914b550c    12  str x4, [jssp, #-8]!
0xffff914b5510    16  ldr x3, pc+112 (addr 0x0000ffff914b5580)    ;; object: 0x49b63e59 Cell for 0
0xffff914b5514    20  ldur x3, [x3, #7]
0xffff914b5518    24  cmp x3, #0x0 (0)
0xffff914b551c    28  b.ne #+0x44 (addr 0xffff914b5560)
0xffff914b5520    32  tbz w0, #0, #+0x40 (addr 0xffff914b5560)
0xffff914b5524    36  ldur x3, [x0, #-1]
0xffff914b5528    40  ldr x4, pc+96 (addr 0x0000ffff914b5588)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914b552c    44  ldur x4, [x4, #7]
0xffff914b5530    48  cmp x3, x4
0xffff914b5534    52  b.ne #+0x2c (addr 0xffff914b5560)
0xffff914b5538    56  ldr x5, pc+88 (addr 0x0000ffff914b5590)    ;; object: 0x4080b391 WeakCell for 0x3642d3f1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914b553c    60  ldur x5, [x5, #7]
0xffff914b5540    64  tbz w5, #0, #+0x20 (addr 0xffff914b5560)
0xffff914b5544    68  ldursw x4, [x5, #15]
0xffff914b5548    72  tbnz w4, #23, #+0x18 (addr 0xffff914b5560)
0xffff914b554c    76  ldr x4, [jssp], #8
0xffff914b5550    80  ldr x3, [jssp], #8
0xffff914b5554    84  ldr x2, pc+68 (addr 0x0000ffff914b5598)    ;; object: 0x49bb9cb1 <String[2]: vm>
0xffff914b5558    88  ldr x16, pc+72 (addr 0x0000ffff914b55a0)    ;; code: HANDLER, StoreTransitionStub, minor: 196621
0xffff914b555c    92  br x16
0xffff914b5560    96  ldr x2, pc+72 (addr 0x0000ffff914b55a8)    ;; object: 0x49bb9cb1 <String[2]: vm>
0xffff914b5564   100  ldr x4, [jssp], #8
0xffff914b5568   104  ldr x3, [jssp], #8
0xffff914b556c   108  ldr x16, pc+68 (addr 0x0000ffff914b55b0)    ;; code: BUILTIN
0xffff914b5570   112  br x16
0xffff914b5574   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914b5578   120  d63f03e0       constant
0xffff914b557c   124  d503201f       constant
0xffff914b5580   128  49b63e59       constant
0xffff914b5584   132  00000000       constant
0xffff914b5588   136  49bc22b1       constant
0xffff914b558c   140  00000000       constant
0xffff914b5590   144  4080b391       constant
0xffff914b5594   148  00000000       constant
0xffff914b5598   152  49bb9cb1       constant
0xffff914b559c   156  00000000       constant
0xffff914b55a0   160  914b53c0       constant
0xffff914b55a4   164  0000ffff       constant
0xffff914b55a8   168  49bb9cb1       constant
0xffff914b55ac   172  00000000       constant
0xffff914b55b0   176  91422420       constant
0xffff914b55b4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914b5510  embedded object  (0x49b63e59 Cell for 0)
0xffff914b5528  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914b5538  embedded object  (0x4080b391 WeakCell for 0x3642d3f1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914b5554  embedded object  (0x49bb9cb1 <String[2]: vm>)
0xffff914b5558  code target (HANDLER)  (0xffff914b53c0)
0xffff914b5560  embedded object  (0x49bb9cb1 <String[2]: vm>)
0xffff914b556c  code target (BUILTIN)  (0xffff91422420)
0xffff914b5574  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff914b6040     0  ldur x6, [x1, #7]
0xffff914b6044     4  ldur w7, [x6, #11]
0xffff914b6048     8  adds w8, w7, #0x3 (3)
0xffff914b604c    12  b.vs #+0x1dc (addr 0xffff914b6228)
0xffff914b6050    16  movz w16, #0x95ff
0xffff914b6054    20  cmp w8, w16, lsl #1
0xffff914b6058    24  b.hs #+0x1e0 (addr 0xffff914b6238)
0xffff914b605c    28  lsl x9, x8, #32
0xffff914b6060    32  lsl w10, w8, #3
0xffff914b6064    36  add w10, w10, #0x10 (16)
0xffff914b6068    40  sxtw x10, w10
0xffff914b606c    44  movz x11, #0xf2c0
0xffff914b6070    48  movk x11, #0x4117, lsl #16
0xffff914b6074    52  ldp x13, x16, [x11]
0xffff914b6078    56  adds x12, x13, x10
0xffff914b607c    60  ccmp x12, x16, #nzCv, lo
0xffff914b6080    64  b.hi #+0xf8 (addr 0xffff914b6178)
0xffff914b6084    68  str x12, [x11]
0xffff914b6088    72  orr x13, x13, #0x1
0xffff914b608c    76  ldr x10, pc+348 (addr 0x0000ffff914b61e8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914b6090    80  stur x10, [x13, #-1]
0xffff914b6094    84  stur x9, [x13, #7]
0xffff914b6098    88  cmp w7, w8
0xffff914b609c    92  b.ge #+0x18 (addr 0xffff914b60b4)
0xffff914b60a0    96  sub w8, w8, #0x1 (1)
0xffff914b60a4   100  ldr x9, pc+332 (addr 0x0000ffff914b61f0)    ;; object: 0x49b04241 <undefined>
0xffff914b60a8   104  add x10, x13, #0xf (15)
0xffff914b60ac   108  str x9, [x10, w8, sxtw #3]
0xffff914b60b0   112  b #-0x18 (addr 0xffff914b6098)
0xffff914b60b4   116  cmp w7, #0x0 (0)
0xffff914b60b8   120  b.le #+0x1c (addr 0xffff914b60d4)
0xffff914b60bc   124  sub w7, w7, #0x1 (1)
0xffff914b60c0   128  add x8, x6, #0xf (15)
0xffff914b60c4   132  ldr x9, [x8, w7, sxtw #3]
0xffff914b60c8   136  add x8, x13, #0xf (15)
0xffff914b60cc   140  str x9, [x8, w7, sxtw #3]
0xffff914b60d0   144  b #-0x1c (addr 0xffff914b60b4)
0xffff914b60d4   148  stur x13, [x1, #7]
0xffff914b60d8   152  add x6, x1, #0x7 (7)
0xffff914b60dc   156  and x13, x1, #0xfffffffffff00000
0xffff914b60e0   160  ldr x13, [x13, #8]
0xffff914b60e4   164  tbz w13, #2, #+0x18 (addr 0xffff914b60fc)
0xffff914b60e8   168  sub csp, jssp, #0x8 (8)
0xffff914b60ec   172  str lr, [jssp, #-8]!
0xffff914b60f0   176  ldr x16, pc+264 (addr 0x0000ffff914b61f8)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff914b60f4   180  blr x16
0xffff914b60f8   184  ldr lr, [jssp], #8
0xffff914b60fc   188  tbz w0, #0, #+0x14c (addr 0xffff914b6248)
0xffff914b6100   192  mov x2, x0
0xffff914b6104   196  ldur x4, [x1, #7]
0xffff914b6108   200  stur x2, [x4, #111]
0xffff914b610c   204  add x3, x4, #0x6f (111)
0xffff914b6110   208  and x2, x2, #0xfffffffffff00000
0xffff914b6114   212  ldr x2, [x2, #8]
0xffff914b6118   216  tbz w2, #1, #+0x24 (addr 0xffff914b613c)
0xffff914b611c   220  and x2, x4, #0xfffffffffff00000
0xffff914b6120   224  ldr x2, [x2, #8]
0xffff914b6124   228  tbz w2, #2, #+0x18 (addr 0xffff914b613c)
0xffff914b6128   232  sub csp, jssp, #0x8 (8)
0xffff914b612c   236  str lr, [jssp, #-8]!
0xffff914b6130   240  ldr x16, pc+208 (addr 0x0000ffff914b6200)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914b6134   244  blr x16
0xffff914b6138   248  ldr lr, [jssp], #8
0xffff914b613c   252  stur x5, [x1, #-1]
0xffff914b6140   256  tbz w5, #0, #+0x34 (addr 0xffff914b6174)
0xffff914b6144   260  sub x2, x1, #0x1 (1)
0xffff914b6148   264  and x5, x5, #0xfffffffffff00000
0xffff914b614c   268  ldr x5, [x5, #8]
0xffff914b6150   272  tbz w5, #1, #+0x24 (addr 0xffff914b6174)
0xffff914b6154   276  and x5, x1, #0xfffffffffff00000
0xffff914b6158   280  ldr x5, [x5, #8]
0xffff914b615c   284  tbz w5, #2, #+0x18 (addr 0xffff914b6174)
0xffff914b6160   288  sub csp, jssp, #0x8 (8)
0xffff914b6164   292  str lr, [jssp, #-8]!
0xffff914b6168   296  ldr x16, pc+160 (addr 0x0000ffff914b6208)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914b616c   300  blr x16
0xffff914b6170   304  ldr lr, [jssp], #8
0xffff914b6174   308  ret
0xffff914b6178   312  sub csp, jssp, #0x10 (16)
0xffff914b617c   316  stp fp, lr, [jssp, #-16]!
0xffff914b6180   320  movz fp, #0xa00000000
0xffff914b6184   324  sub csp, jssp, #0x8 (8)
0xffff914b6188   328  str fp, [jssp, #-8]!
0xffff914b618c   332  add fp, jssp, #0x8 (8)
0xffff914b6190   336  movz x13, #0x0
0xffff914b6194   340  mov x16, lr
0xffff914b6198   344  ldr x17, pc+120 (addr 0x0000ffff914b6210)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914b619c   348  blr x17
0xffff914b61a0   352  lsl x0, x10, #32
0xffff914b61a4   356  movz x10, #0x0
0xffff914b61a8   360  sub csp, jssp, #0x10 (16)
0xffff914b61ac   364  stp x10, x0, [jssp, #-16]!
0xffff914b61b0   368  movz x0, #0x2
0xffff914b61b4   372  movz x1, #0x5b88
0xffff914b61b8   376  movk x1, #0xe2, lsl #16
0xffff914b61bc   380  ldr x16, pc+92 (addr 0x0000ffff914b6218)    ;; code: STUB, CEntryStub, minor: 5
0xffff914b61c0   384  blr x16
0xffff914b61c4   388  str x0, [jssp, #104]
0xffff914b61c8   392  ldr x16, pc+88 (addr 0x0000ffff914b6220)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914b61cc   396  blr x16
0xffff914b61d0   400  ldr lr, [jssp, #16]
0xffff914b61d4   404  ldp xzr, fp, [jssp], #24
0xffff914b61d8   408  b #-0x14c (addr 0xffff914b608c)
0xffff914b61dc   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff914b61e0   416  d63f03e0       constant
0xffff914b61e4   420  d503201f       constant
0xffff914b61e8   424  36404259       constant
0xffff914b61ec   428  00000000       constant
0xffff914b61f0   432  49b04241       constant
0xffff914b61f4   436  00000000       constant
0xffff914b61f8   440  914370c0       constant
0xffff914b61fc   444  0000ffff       constant
0xffff914b6200   448  914378a0       constant
0xffff914b6204   452  0000ffff       constant
0xffff914b6208   456  91438080       constant
0xffff914b620c   460  0000ffff       constant
0xffff914b6210   464  91406820       constant
0xffff914b6214   468  0000ffff       constant
0xffff914b6218   472  91406260       constant
0xffff914b621c   476  0000ffff       constant
0xffff914b6220   480  914068e0       constant
0xffff914b6224   484  0000ffff       constant
0xffff914b6228   488  movz x16, #0x0
0xffff914b622c   492  sub csp, jssp, #0x10 (16)
0xffff914b6230   496  stp fp, lr, [jssp, #-16]!
0xffff914b6234   500  bl #+0x24 (addr 0xffff914b6258)
0xffff914b6238   504  movz x16, #0x8
0xffff914b623c   508  sub csp, jssp, #0x10 (16)
0xffff914b6240   512  stp fp, lr, [jssp, #-16]!
0xffff914b6244   516  bl #+0x14 (addr 0xffff914b6258)
0xffff914b6248   520  movz x16, #0x10
0xffff914b624c   524  sub csp, jssp, #0x10 (16)
0xffff914b6250   528  stp fp, lr, [jssp, #-16]!
0xffff914b6254   532  bl #+0x4 (addr 0xffff914b6258)
0xffff914b6258   536  movz x17, #0xa00000000
0xffff914b625c   540  sub csp, jssp, #0x10 (16)
0xffff914b6260   544  stp x17, cp, [jssp, #-16]!
0xffff914b6264   548  add fp, jssp, #0x10 (16)
0xffff914b6268   552  ldr x17, pc+24 (addr 0x0000ffff914b6280)    ;; lazy deoptimization bailout 0
0xffff914b626c   556  add x17, x17, x16
0xffff914b6270   560  br x17
0xffff914b6274   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914b6278   568  d63f03e0       constant
0xffff914b627c   572  d503201f       constant
0xffff914b6280   576  91206000       constant
0xffff914b6284   580  0000ffff       constant


Safepoints (size = 21)
0xffff914b61c4   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff914b608c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914b60a4  embedded object  (0x49b04241 <undefined>)
0xffff914b60f0  code target (STUB)  (0xffff914370c0)
0xffff914b6130  code target (STUB)  (0xffff914378a0)
0xffff914b6168  code target (STUB)  (0xffff91438080)
0xffff914b6198  code target (STUB)  (0xffff91406820)
0xffff914b61bc  code target (STUB)  (0xffff91406260)
0xffff914b61c8  code target (STUB)  (0xffff914068e0)
0xffff914b61dc  constant pool (size 76)
0xffff914b6268  runtime entry
0xffff914b6274  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff914b6040     0  ldur x6, [x1, #7]
0xffff914b6044     4  ldur w7, [x6, #11]
0xffff914b6048     8  adds w8, w7, #0x3 (3)
0xffff914b604c    12  b.vs #+0x1dc (addr 0xffff914b6228)
0xffff914b6050    16  movz w16, #0x95ff
0xffff914b6054    20  cmp w8, w16, lsl #1
0xffff914b6058    24  b.hs #+0x1e0 (addr 0xffff914b6238)
0xffff914b605c    28  lsl x9, x8, #32
0xffff914b6060    32  lsl w10, w8, #3
0xffff914b6064    36  add w10, w10, #0x10 (16)
0xffff914b6068    40  sxtw x10, w10
0xffff914b606c    44  movz x11, #0xf2c0
0xffff914b6070    48  movk x11, #0x4117, lsl #16
0xffff914b6074    52  ldp x13, x16, [x11]
0xffff914b6078    56  adds x12, x13, x10
0xffff914b607c    60  ccmp x12, x16, #nzCv, lo
0xffff914b6080    64  b.hi #+0xf8 (addr 0xffff914b6178)
0xffff914b6084    68  str x12, [x11]
0xffff914b6088    72  orr x13, x13, #0x1
0xffff914b608c    76  ldr x10, pc+348 (addr 0x0000ffff914b61e8)    ;; object: 0x36404259 <Map(FAST_SMI_ELEMENTS)>
0xffff914b6090    80  stur x10, [x13, #-1]
0xffff914b6094    84  stur x9, [x13, #7]
0xffff914b6098    88  cmp w7, w8
0xffff914b609c    92  b.ge #+0x18 (addr 0xffff914b60b4)
0xffff914b60a0    96  sub w8, w8, #0x1 (1)
0xffff914b60a4   100  ldr x9, pc+332 (addr 0x0000ffff914b61f0)    ;; object: 0x49b04241 <undefined>
0xffff914b60a8   104  add x10, x13, #0xf (15)
0xffff914b60ac   108  str x9, [x10, w8, sxtw #3]
0xffff914b60b0   112  b #-0x18 (addr 0xffff914b6098)
0xffff914b60b4   116  cmp w7, #0x0 (0)
0xffff914b60b8   120  b.le #+0x1c (addr 0xffff914b60d4)
0xffff914b60bc   124  sub w7, w7, #0x1 (1)
0xffff914b60c0   128  add x8, x6, #0xf (15)
0xffff914b60c4   132  ldr x9, [x8, w7, sxtw #3]
0xffff914b60c8   136  add x8, x13, #0xf (15)
0xffff914b60cc   140  str x9, [x8, w7, sxtw #3]
0xffff914b60d0   144  b #-0x1c (addr 0xffff914b60b4)
0xffff914b60d4   148  stur x13, [x1, #7]
0xffff914b60d8   152  add x6, x1, #0x7 (7)
0xffff914b60dc   156  and x13, x1, #0xfffffffffff00000
0xffff914b60e0   160  ldr x13, [x13, #8]
0xffff914b60e4   164  tbz w13, #2, #+0x18 (addr 0xffff914b60fc)
0xffff914b60e8   168  sub csp, jssp, #0x8 (8)
0xffff914b60ec   172  str lr, [jssp, #-8]!
0xffff914b60f0   176  ldr x16, pc+264 (addr 0x0000ffff914b61f8)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff914b60f4   180  blr x16
0xffff914b60f8   184  ldr lr, [jssp], #8
0xffff914b60fc   188  tbz w0, #0, #+0x14c (addr 0xffff914b6248)
0xffff914b6100   192  mov x2, x0
0xffff914b6104   196  ldur x4, [x1, #7]
0xffff914b6108   200  stur x2, [x4, #111]
0xffff914b610c   204  add x3, x4, #0x6f (111)
0xffff914b6110   208  and x2, x2, #0xfffffffffff00000
0xffff914b6114   212  ldr x2, [x2, #8]
0xffff914b6118   216  tbz w2, #1, #+0x24 (addr 0xffff914b613c)
0xffff914b611c   220  and x2, x4, #0xfffffffffff00000
0xffff914b6120   224  ldr x2, [x2, #8]
0xffff914b6124   228  tbz w2, #2, #+0x18 (addr 0xffff914b613c)
0xffff914b6128   232  sub csp, jssp, #0x8 (8)
0xffff914b612c   236  str lr, [jssp, #-8]!
0xffff914b6130   240  ldr x16, pc+208 (addr 0x0000ffff914b6200)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914b6134   244  blr x16
0xffff914b6138   248  ldr lr, [jssp], #8
0xffff914b613c   252  stur x5, [x1, #-1]
0xffff914b6140   256  tbz w5, #0, #+0x34 (addr 0xffff914b6174)
0xffff914b6144   260  sub x2, x1, #0x1 (1)
0xffff914b6148   264  and x5, x5, #0xfffffffffff00000
0xffff914b614c   268  ldr x5, [x5, #8]
0xffff914b6150   272  tbz w5, #1, #+0x24 (addr 0xffff914b6174)
0xffff914b6154   276  and x5, x1, #0xfffffffffff00000
0xffff914b6158   280  ldr x5, [x5, #8]
0xffff914b615c   284  tbz w5, #2, #+0x18 (addr 0xffff914b6174)
0xffff914b6160   288  sub csp, jssp, #0x8 (8)
0xffff914b6164   292  str lr, [jssp, #-8]!
0xffff914b6168   296  ldr x16, pc+160 (addr 0x0000ffff914b6208)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914b616c   300  blr x16
0xffff914b6170   304  ldr lr, [jssp], #8
0xffff914b6174   308  ret
0xffff914b6178   312  sub csp, jssp, #0x10 (16)
0xffff914b617c   316  stp fp, lr, [jssp, #-16]!
0xffff914b6180   320  movz fp, #0xa00000000
0xffff914b6184   324  sub csp, jssp, #0x8 (8)
0xffff914b6188   328  str fp, [jssp, #-8]!
0xffff914b618c   332  add fp, jssp, #0x8 (8)
0xffff914b6190   336  movz x13, #0x0
0xffff914b6194   340  mov x16, lr
0xffff914b6198   344  ldr x17, pc+120 (addr 0x0000ffff914b6210)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914b619c   348  blr x17
0xffff914b61a0   352  lsl x0, x10, #32
0xffff914b61a4   356  movz x10, #0x0
0xffff914b61a8   360  sub csp, jssp, #0x10 (16)
0xffff914b61ac   364  stp x10, x0, [jssp, #-16]!
0xffff914b61b0   368  movz x0, #0x2
0xffff914b61b4   372  movz x1, #0x5b88
0xffff914b61b8   376  movk x1, #0xe2, lsl #16
0xffff914b61bc   380  ldr x16, pc+92 (addr 0x0000ffff914b6218)    ;; code: STUB, CEntryStub, minor: 5
0xffff914b61c0   384  blr x16
0xffff914b61c4   388  str x0, [jssp, #104]
0xffff914b61c8   392  ldr x16, pc+88 (addr 0x0000ffff914b6220)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914b61cc   396  blr x16
0xffff914b61d0   400  ldr lr, [jssp, #16]
0xffff914b61d4   404  ldp xzr, fp, [jssp], #24
0xffff914b61d8   408  b #-0x14c (addr 0xffff914b608c)
0xffff914b61dc   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff914b61e0   416  d63f03e0       constant
0xffff914b61e4   420  d503201f       constant
0xffff914b61e8   424  36404259       constant
0xffff914b61ec   428  00000000       constant
0xffff914b61f0   432  49b04241       constant
0xffff914b61f4   436  00000000       constant
0xffff914b61f8   440  914370c0       constant
0xffff914b61fc   444  0000ffff       constant
0xffff914b6200   448  914378a0       constant
0xffff914b6204   452  0000ffff       constant
0xffff914b6208   456  91438080       constant
0xffff914b620c   460  0000ffff       constant
0xffff914b6210   464  91406820       constant
0xffff914b6214   468  0000ffff       constant
0xffff914b6218   472  91406260       constant
0xffff914b621c   476  0000ffff       constant
0xffff914b6220   480  914068e0       constant
0xffff914b6224   484  0000ffff       constant
0xffff914b6228   488  movz x16, #0x0
0xffff914b622c   492  sub csp, jssp, #0x10 (16)
0xffff914b6230   496  stp fp, lr, [jssp, #-16]!
0xffff914b6234   500  bl #+0x24 (addr 0xffff914b6258)
0xffff914b6238   504  movz x16, #0x8
0xffff914b623c   508  sub csp, jssp, #0x10 (16)
0xffff914b6240   512  stp fp, lr, [jssp, #-16]!
0xffff914b6244   516  bl #+0x14 (addr 0xffff914b6258)
0xffff914b6248   520  movz x16, #0x10
0xffff914b624c   524  sub csp, jssp, #0x10 (16)
0xffff914b6250   528  stp fp, lr, [jssp, #-16]!
0xffff914b6254   532  bl #+0x4 (addr 0xffff914b6258)
0xffff914b6258   536  movz x17, #0xa00000000
0xffff914b625c   540  sub csp, jssp, #0x10 (16)
0xffff914b6260   544  stp x17, cp, [jssp, #-16]!
0xffff914b6264   548  add fp, jssp, #0x10 (16)
0xffff914b6268   552  ldr x17, pc+24 (addr 0x0000ffff914b6280)    ;; lazy deoptimization bailout 0
0xffff914b626c   556  add x17, x17, x16
0xffff914b6270   560  br x17
0xffff914b6274   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914b6278   568  d63f03e0       constant
0xffff914b627c   572  d503201f       constant
0xffff914b6280   576  91206000       constant
0xffff914b6284   580  0000ffff       constant


Safepoints (size = 21)
0xffff914b61c4   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff914b608c  embedded object  (0x36404259 <Map(FAST_SMI_ELEMENTS)>)
0xffff914b60a4  embedded object  (0x49b04241 <undefined>)
0xffff914b60f0  code target (STUB)  (0xffff914370c0)
0xffff914b6130  code target (STUB)  (0xffff914378a0)
0xffff914b6168  code target (STUB)  (0xffff91438080)
0xffff914b6198  code target (STUB)  (0xffff91406820)
0xffff914b61bc  code target (STUB)  (0xffff91406260)
0xffff914b61c8  code target (STUB)  (0xffff914068e0)
0xffff914b61dc  constant pool (size 76)
0xffff914b6268  runtime entry
0xffff914b6274  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = fs
compiler = unknown
Instructions (size = 184)
0xffff914b6300     0  sub csp, jssp, #0x8 (8)
0xffff914b6304     4  str x3, [jssp, #-8]!
0xffff914b6308     8  sub csp, jssp, #0x8 (8)
0xffff914b630c    12  str x4, [jssp, #-8]!
0xffff914b6310    16  ldr x3, pc+112 (addr 0x0000ffff914b6380)    ;; object: 0x49b63e59 Cell for 0
0xffff914b6314    20  ldur x3, [x3, #7]
0xffff914b6318    24  cmp x3, #0x0 (0)
0xffff914b631c    28  b.ne #+0x44 (addr 0xffff914b6360)
0xffff914b6320    32  tbz w0, #0, #+0x40 (addr 0xffff914b6360)
0xffff914b6324    36  ldur x3, [x0, #-1]
0xffff914b6328    40  ldr x4, pc+96 (addr 0x0000ffff914b6388)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914b632c    44  ldur x4, [x4, #7]
0xffff914b6330    48  cmp x3, x4
0xffff914b6334    52  b.ne #+0x2c (addr 0xffff914b6360)
0xffff914b6338    56  ldr x5, pc+88 (addr 0x0000ffff914b6390)    ;; object: 0x4080ca39 WeakCell for 0x3642d869 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914b633c    60  ldur x5, [x5, #7]
0xffff914b6340    64  tbz w5, #0, #+0x20 (addr 0xffff914b6360)
0xffff914b6344    68  ldursw x4, [x5, #15]
0xffff914b6348    72  tbnz w4, #23, #+0x18 (addr 0xffff914b6360)
0xffff914b634c    76  ldr x4, [jssp], #8
0xffff914b6350    80  ldr x3, [jssp], #8
0xffff914b6354    84  ldr x2, pc+68 (addr 0x0000ffff914b6398)    ;; object: 0x49bb9cd1 <String[2]: fs>
0xffff914b6358    88  ldr x16, pc+72 (addr 0x0000ffff914b63a0)    ;; code: HANDLER, StoreTransitionStub, minor: 327694
0xffff914b635c    92  br x16
0xffff914b6360    96  ldr x2, pc+72 (addr 0x0000ffff914b63a8)    ;; object: 0x49bb9cd1 <String[2]: fs>
0xffff914b6364   100  ldr x4, [jssp], #8
0xffff914b6368   104  ldr x3, [jssp], #8
0xffff914b636c   108  ldr x16, pc+68 (addr 0x0000ffff914b63b0)    ;; code: BUILTIN
0xffff914b6370   112  br x16
0xffff914b6374   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914b6378   120  d63f03e0       constant
0xffff914b637c   124  d503201f       constant
0xffff914b6380   128  49b63e59       constant
0xffff914b6384   132  00000000       constant
0xffff914b6388   136  49bc22b1       constant
0xffff914b638c   140  00000000       constant
0xffff914b6390   144  4080ca39       constant
0xffff914b6394   148  00000000       constant
0xffff914b6398   152  49bb9cd1       constant
0xffff914b639c   156  00000000       constant
0xffff914b63a0   160  914b6040       constant
0xffff914b63a4   164  0000ffff       constant
0xffff914b63a8   168  49bb9cd1       constant
0xffff914b63ac   172  00000000       constant
0xffff914b63b0   176  91422420       constant
0xffff914b63b4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914b6310  embedded object  (0x49b63e59 Cell for 0)
0xffff914b6328  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914b6338  embedded object  (0x4080ca39 WeakCell for 0x3642d869 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914b6354  embedded object  (0x49bb9cd1 <String[2]: fs>)
0xffff914b6358  code target (HANDLER)  (0xffff914b6040)
0xffff914b6360  embedded object  (0x49bb9cd1 <String[2]: fs>)
0xffff914b636c  code target (BUILTIN)  (0xffff91422420)
0xffff914b6374  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = runInThisContext
compiler = unknown
Instructions (size = 120)
0xffff914bc220     0  sub csp, jssp, #0x8 (8)
0xffff914bc224     4  str x3, [jssp, #-8]!
0xffff914bc228     8  sub csp, jssp, #0x8 (8)
0xffff914bc22c    12  str x0, [jssp, #-8]!
0xffff914bc230    16  ldr x0, pc+72 (addr 0x0000ffff914bc278)    ;; object: 0x40817749 Cell for 0
0xffff914bc234    20  ldur x0, [x0, #7]
0xffff914bc238    24  cmp x0, #0x0 (0)
0xffff914bc23c    28  b.ne #+0x14 (addr 0xffff914bc250)
0xffff914bc240    32  ldr x3, pc+64 (addr 0x0000ffff914bc280)    ;; object: 0x40817759 WeakCell for 0x51d51f71 <an Object with map 0x3642d4f9>
0xffff914bc244    36  ldur x3, [x3, #7]
0xffff914bc248    40  tbz w3, #0, #+0x8 (addr 0xffff914bc250)
0xffff914bc24c    44  b #+0x14 (addr 0xffff914bc260)
0xffff914bc250    48  ldr x0, [jssp], #8
0xffff914bc254    52  ldr x3, [jssp], #8
0xffff914bc258    56  ldr x16, pc+48 (addr 0x0000ffff914bc288)    ;; code: BUILTIN
0xffff914bc25c    60  br x16
0xffff914bc260    64  add jssp, jssp, #0x10 (16)
0xffff914bc264    68  mov x1, x3
0xffff914bc268    72  ldr x16, pc+40 (addr 0x0000ffff914bc290)    ;; code: HANDLER, LoadFieldStub, minor: 2051
0xffff914bc26c    76  br x16
0xffff914bc270    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914bc274    84  d63f03e0       constant
0xffff914bc278    88  40817749       constant
0xffff914bc27c    92  00000000       constant
0xffff914bc280    96  40817759       constant
0xffff914bc284   100  00000000       constant
0xffff914bc288   104  914222e0       constant
0xffff914bc28c   108  0000ffff       constant
0xffff914bc290   112  91439340       constant
0xffff914bc294   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914bc230  embedded object  (0x40817749 Cell for 0)
0xffff914bc240  embedded object  (0x40817759 WeakCell for 0x51d51f71 <an Object with map 0x3642d4f9>)
0xffff914bc258  code target (BUILTIN)  (0xffff914222e0)
0xffff914bc268  code target (HANDLER)  (0xffff91439340)
0xffff914bc270  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914bc5e0     0  tbz w0, #0, #+0x98 (addr 0xffff914bc678)
0xffff914bc5e4     4  mov x2, x0
0xffff914bc5e8     8  ldur x4, [x1, #7]
0xffff914bc5ec    12  stur x2, [x4, #119]
0xffff914bc5f0    16  add x3, x4, #0x77 (119)
0xffff914bc5f4    20  and x2, x2, #0xfffffffffff00000
0xffff914bc5f8    24  ldr x2, [x2, #8]
0xffff914bc5fc    28  tbz w2, #1, #+0x24 (addr 0xffff914bc620)
0xffff914bc600    32  and x2, x4, #0xfffffffffff00000
0xffff914bc604    36  ldr x2, [x2, #8]
0xffff914bc608    40  tbz w2, #2, #+0x18 (addr 0xffff914bc620)
0xffff914bc60c    44  sub csp, jssp, #0x8 (8)
0xffff914bc610    48  str lr, [jssp, #-8]!
0xffff914bc614    52  ldr x16, pc+84 (addr 0x0000ffff914bc668)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914bc618    56  blr x16
0xffff914bc61c    60  ldr lr, [jssp], #8
0xffff914bc620    64  stur x5, [x1, #-1]
0xffff914bc624    68  tbz w5, #0, #+0x34 (addr 0xffff914bc658)
0xffff914bc628    72  sub x2, x1, #0x1 (1)
0xffff914bc62c    76  and x5, x5, #0xfffffffffff00000
0xffff914bc630    80  ldr x5, [x5, #8]
0xffff914bc634    84  tbz w5, #1, #+0x24 (addr 0xffff914bc658)
0xffff914bc638    88  and x5, x1, #0xfffffffffff00000
0xffff914bc63c    92  ldr x5, [x5, #8]
0xffff914bc640    96  tbz w5, #2, #+0x18 (addr 0xffff914bc658)
0xffff914bc644   100  sub csp, jssp, #0x8 (8)
0xffff914bc648   104  str lr, [jssp, #-8]!
0xffff914bc64c   108  ldr x16, pc+36 (addr 0x0000ffff914bc670)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914bc650   112  blr x16
0xffff914bc654   116  ldr lr, [jssp], #8
0xffff914bc658   120  ret
0xffff914bc65c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914bc660   128  d63f03e0       constant
0xffff914bc664   132  d503201f       constant
0xffff914bc668   136  914378a0       constant
0xffff914bc66c   140  0000ffff       constant
0xffff914bc670   144  91438080       constant
0xffff914bc674   148  0000ffff       constant
0xffff914bc678   152  movz x16, #0x0
0xffff914bc67c   156  sub csp, jssp, #0x10 (16)
0xffff914bc680   160  stp fp, lr, [jssp, #-16]!
0xffff914bc684   164  bl #+0x4 (addr 0xffff914bc688)
0xffff914bc688   168  movz x17, #0xa00000000
0xffff914bc68c   172  sub csp, jssp, #0x10 (16)
0xffff914bc690   176  stp x17, cp, [jssp, #-16]!
0xffff914bc694   180  add fp, jssp, #0x10 (16)
0xffff914bc698   184  ldr x17, pc+24 (addr 0x0000ffff914bc6b0)    ;; lazy deoptimization bailout 0
0xffff914bc69c   188  add x17, x17, x16
0xffff914bc6a0   192  br x17
0xffff914bc6a4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914bc6a8   200  d63f03e0       constant
0xffff914bc6ac   204  d503201f       constant
0xffff914bc6b0   208  91206000       constant
0xffff914bc6b4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914bc614  code target (STUB)  (0xffff914378a0)
0xffff914bc64c  code target (STUB)  (0xffff91438080)
0xffff914bc65c  constant pool (size 28)
0xffff914bc698  runtime entry
0xffff914bc6a4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914bc5e0     0  tbz w0, #0, #+0x98 (addr 0xffff914bc678)
0xffff914bc5e4     4  mov x2, x0
0xffff914bc5e8     8  ldur x4, [x1, #7]
0xffff914bc5ec    12  stur x2, [x4, #119]
0xffff914bc5f0    16  add x3, x4, #0x77 (119)
0xffff914bc5f4    20  and x2, x2, #0xfffffffffff00000
0xffff914bc5f8    24  ldr x2, [x2, #8]
0xffff914bc5fc    28  tbz w2, #1, #+0x24 (addr 0xffff914bc620)
0xffff914bc600    32  and x2, x4, #0xfffffffffff00000
0xffff914bc604    36  ldr x2, [x2, #8]
0xffff914bc608    40  tbz w2, #2, #+0x18 (addr 0xffff914bc620)
0xffff914bc60c    44  sub csp, jssp, #0x8 (8)
0xffff914bc610    48  str lr, [jssp, #-8]!
0xffff914bc614    52  ldr x16, pc+84 (addr 0x0000ffff914bc668)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914bc618    56  blr x16
0xffff914bc61c    60  ldr lr, [jssp], #8
0xffff914bc620    64  stur x5, [x1, #-1]
0xffff914bc624    68  tbz w5, #0, #+0x34 (addr 0xffff914bc658)
0xffff914bc628    72  sub x2, x1, #0x1 (1)
0xffff914bc62c    76  and x5, x5, #0xfffffffffff00000
0xffff914bc630    80  ldr x5, [x5, #8]
0xffff914bc634    84  tbz w5, #1, #+0x24 (addr 0xffff914bc658)
0xffff914bc638    88  and x5, x1, #0xfffffffffff00000
0xffff914bc63c    92  ldr x5, [x5, #8]
0xffff914bc640    96  tbz w5, #2, #+0x18 (addr 0xffff914bc658)
0xffff914bc644   100  sub csp, jssp, #0x8 (8)
0xffff914bc648   104  str lr, [jssp, #-8]!
0xffff914bc64c   108  ldr x16, pc+36 (addr 0x0000ffff914bc670)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914bc650   112  blr x16
0xffff914bc654   116  ldr lr, [jssp], #8
0xffff914bc658   120  ret
0xffff914bc65c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914bc660   128  d63f03e0       constant
0xffff914bc664   132  d503201f       constant
0xffff914bc668   136  914378a0       constant
0xffff914bc66c   140  0000ffff       constant
0xffff914bc670   144  91438080       constant
0xffff914bc674   148  0000ffff       constant
0xffff914bc678   152  movz x16, #0x0
0xffff914bc67c   156  sub csp, jssp, #0x10 (16)
0xffff914bc680   160  stp fp, lr, [jssp, #-16]!
0xffff914bc684   164  bl #+0x4 (addr 0xffff914bc688)
0xffff914bc688   168  movz x17, #0xa00000000
0xffff914bc68c   172  sub csp, jssp, #0x10 (16)
0xffff914bc690   176  stp x17, cp, [jssp, #-16]!
0xffff914bc694   180  add fp, jssp, #0x10 (16)
0xffff914bc698   184  ldr x17, pc+24 (addr 0x0000ffff914bc6b0)    ;; lazy deoptimization bailout 0
0xffff914bc69c   188  add x17, x17, x16
0xffff914bc6a0   192  br x17
0xffff914bc6a4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914bc6a8   200  d63f03e0       constant
0xffff914bc6ac   204  d503201f       constant
0xffff914bc6b0   208  91206000       constant
0xffff914bc6b4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914bc614  code target (STUB)  (0xffff914378a0)
0xffff914bc64c  code target (STUB)  (0xffff91438080)
0xffff914bc65c  constant pool (size 28)
0xffff914bc698  runtime entry
0xffff914bc6a4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = stream
compiler = unknown
Instructions (size = 184)
0xffff914bc720     0  sub csp, jssp, #0x8 (8)
0xffff914bc724     4  str x3, [jssp, #-8]!
0xffff914bc728     8  sub csp, jssp, #0x8 (8)
0xffff914bc72c    12  str x4, [jssp, #-8]!
0xffff914bc730    16  ldr x3, pc+112 (addr 0x0000ffff914bc7a0)    ;; object: 0x49b63e59 Cell for 0
0xffff914bc734    20  ldur x3, [x3, #7]
0xffff914bc738    24  cmp x3, #0x0 (0)
0xffff914bc73c    28  b.ne #+0x44 (addr 0xffff914bc780)
0xffff914bc740    32  tbz w0, #0, #+0x40 (addr 0xffff914bc780)
0xffff914bc744    36  ldur x3, [x0, #-1]
0xffff914bc748    40  ldr x4, pc+96 (addr 0x0000ffff914bc7a8)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914bc74c    44  ldur x4, [x4, #7]
0xffff914bc750    48  cmp x3, x4
0xffff914bc754    52  b.ne #+0x2c (addr 0xffff914bc780)
0xffff914bc758    56  ldr x5, pc+88 (addr 0x0000ffff914bc7b0)    ;; object: 0x4081c4a9 WeakCell for 0x3642fe91 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914bc75c    60  ldur x5, [x5, #7]
0xffff914bc760    64  tbz w5, #0, #+0x20 (addr 0xffff914bc780)
0xffff914bc764    68  ldursw x4, [x5, #15]
0xffff914bc768    72  tbnz w4, #23, #+0x18 (addr 0xffff914bc780)
0xffff914bc76c    76  ldr x4, [jssp], #8
0xffff914bc770    80  ldr x3, [jssp], #8
0xffff914bc774    84  ldr x2, pc+68 (addr 0x0000ffff914bc7b8)    ;; object: 0x49bbe091 <String[6]: stream>
0xffff914bc778    88  ldr x16, pc+72 (addr 0x0000ffff914bc7c0)    ;; code: HANDLER, StoreTransitionStub, minor: 196623
0xffff914bc77c    92  br x16
0xffff914bc780    96  ldr x2, pc+72 (addr 0x0000ffff914bc7c8)    ;; object: 0x49bbe091 <String[6]: stream>
0xffff914bc784   100  ldr x4, [jssp], #8
0xffff914bc788   104  ldr x3, [jssp], #8
0xffff914bc78c   108  ldr x16, pc+68 (addr 0x0000ffff914bc7d0)    ;; code: BUILTIN
0xffff914bc790   112  br x16
0xffff914bc794   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914bc798   120  d63f03e0       constant
0xffff914bc79c   124  d503201f       constant
0xffff914bc7a0   128  49b63e59       constant
0xffff914bc7a4   132  00000000       constant
0xffff914bc7a8   136  49bc22b1       constant
0xffff914bc7ac   140  00000000       constant
0xffff914bc7b0   144  4081c4a9       constant
0xffff914bc7b4   148  00000000       constant
0xffff914bc7b8   152  49bbe091       constant
0xffff914bc7bc   156  00000000       constant
0xffff914bc7c0   160  914bc5e0       constant
0xffff914bc7c4   164  0000ffff       constant
0xffff914bc7c8   168  49bbe091       constant
0xffff914bc7cc   172  00000000       constant
0xffff914bc7d0   176  91422420       constant
0xffff914bc7d4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914bc730  embedded object  (0x49b63e59 Cell for 0)
0xffff914bc748  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914bc758  embedded object  (0x4081c4a9 WeakCell for 0x3642fe91 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914bc774  embedded object  (0x49bbe091 <String[6]: stream>)
0xffff914bc778  code target (HANDLER)  (0xffff914bc5e0)
0xffff914bc780  embedded object  (0x49bbe091 <String[6]: stream>)
0xffff914bc78c  code target (BUILTIN)  (0xffff91422420)
0xffff914bc794  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = call
compiler = unknown
Instructions (size = 120)
0xffff914bce00     0  sub csp, jssp, #0x8 (8)
0xffff914bce04     4  str x3, [jssp, #-8]!
0xffff914bce08     8  sub csp, jssp, #0x8 (8)
0xffff914bce0c    12  str x0, [jssp, #-8]!
0xffff914bce10    16  ldr x0, pc+72 (addr 0x0000ffff914bce58)    ;; object: 0x49b5b0f1 Cell for 0
0xffff914bce14    20  ldur x0, [x0, #7]
0xffff914bce18    24  cmp x0, #0x0 (0)
0xffff914bce1c    28  b.ne #+0x14 (addr 0xffff914bce30)
0xffff914bce20    32  ldr x3, pc+64 (addr 0x0000ffff914bce60)    ;; object: 0x4081cb01 WeakCell for 0x49b40019 <JS Function (SharedFunctionInfo 0x49b3ff71)>
0xffff914bce24    36  ldur x3, [x3, #7]
0xffff914bce28    40  tbz w3, #0, #+0x8 (addr 0xffff914bce30)
0xffff914bce2c    44  b #+0x14 (addr 0xffff914bce40)
0xffff914bce30    48  ldr x0, [jssp], #8
0xffff914bce34    52  ldr x3, [jssp], #8
0xffff914bce38    56  ldr x16, pc+48 (addr 0x0000ffff914bce68)    ;; code: BUILTIN
0xffff914bce3c    60  br x16
0xffff914bce40    64  add jssp, jssp, #0x10 (16)
0xffff914bce44    68  mov x1, x3
0xffff914bce48    72  ldr x16, pc+40 (addr 0x0000ffff914bce70)    ;; code: HANDLER, LoadConstantStub, minor: 6
0xffff914bce4c    76  br x16
0xffff914bce50    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914bce54    84  d63f03e0       constant
0xffff914bce58    88  49b5b0f1       constant
0xffff914bce5c    92  00000000       constant
0xffff914bce60    96  4081cb01       constant
0xffff914bce64   100  00000000       constant
0xffff914bce68   104  914222e0       constant
0xffff914bce6c   108  0000ffff       constant
0xffff914bce70   112  9148b020       constant
0xffff914bce74   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914bce10  embedded object  (0x49b5b0f1 Cell for 0)
0xffff914bce20  embedded object  (0x4081cb01 WeakCell for 0x49b40019 <JS Function (SharedFunctionInfo 0x49b3ff71)>)
0xffff914bce38  code target (BUILTIN)  (0xffff914222e0)
0xffff914bce48  code target (HANDLER)  (0xffff9148b020)
0xffff914bce50  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914bcee0     0  tbz w0, #0, #+0x98 (addr 0xffff914bcf78)
0xffff914bcee4     4  mov x2, x0
0xffff914bcee8     8  ldur x4, [x1, #7]
0xffff914bceec    12  stur x2, [x4, #127]
0xffff914bcef0    16  add x3, x4, #0x7f (127)
0xffff914bcef4    20  and x2, x2, #0xfffffffffff00000
0xffff914bcef8    24  ldr x2, [x2, #8]
0xffff914bcefc    28  tbz w2, #1, #+0x24 (addr 0xffff914bcf20)
0xffff914bcf00    32  and x2, x4, #0xfffffffffff00000
0xffff914bcf04    36  ldr x2, [x2, #8]
0xffff914bcf08    40  tbz w2, #2, #+0x18 (addr 0xffff914bcf20)
0xffff914bcf0c    44  sub csp, jssp, #0x8 (8)
0xffff914bcf10    48  str lr, [jssp, #-8]!
0xffff914bcf14    52  ldr x16, pc+84 (addr 0x0000ffff914bcf68)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914bcf18    56  blr x16
0xffff914bcf1c    60  ldr lr, [jssp], #8
0xffff914bcf20    64  stur x5, [x1, #-1]
0xffff914bcf24    68  tbz w5, #0, #+0x34 (addr 0xffff914bcf58)
0xffff914bcf28    72  sub x2, x1, #0x1 (1)
0xffff914bcf2c    76  and x5, x5, #0xfffffffffff00000
0xffff914bcf30    80  ldr x5, [x5, #8]
0xffff914bcf34    84  tbz w5, #1, #+0x24 (addr 0xffff914bcf58)
0xffff914bcf38    88  and x5, x1, #0xfffffffffff00000
0xffff914bcf3c    92  ldr x5, [x5, #8]
0xffff914bcf40    96  tbz w5, #2, #+0x18 (addr 0xffff914bcf58)
0xffff914bcf44   100  sub csp, jssp, #0x8 (8)
0xffff914bcf48   104  str lr, [jssp, #-8]!
0xffff914bcf4c   108  ldr x16, pc+36 (addr 0x0000ffff914bcf70)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914bcf50   112  blr x16
0xffff914bcf54   116  ldr lr, [jssp], #8
0xffff914bcf58   120  ret
0xffff914bcf5c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914bcf60   128  d63f03e0       constant
0xffff914bcf64   132  d503201f       constant
0xffff914bcf68   136  914378a0       constant
0xffff914bcf6c   140  0000ffff       constant
0xffff914bcf70   144  91438080       constant
0xffff914bcf74   148  0000ffff       constant
0xffff914bcf78   152  movz x16, #0x0
0xffff914bcf7c   156  sub csp, jssp, #0x10 (16)
0xffff914bcf80   160  stp fp, lr, [jssp, #-16]!
0xffff914bcf84   164  bl #+0x4 (addr 0xffff914bcf88)
0xffff914bcf88   168  movz x17, #0xa00000000
0xffff914bcf8c   172  sub csp, jssp, #0x10 (16)
0xffff914bcf90   176  stp x17, cp, [jssp, #-16]!
0xffff914bcf94   180  add fp, jssp, #0x10 (16)
0xffff914bcf98   184  ldr x17, pc+24 (addr 0x0000ffff914bcfb0)    ;; lazy deoptimization bailout 0
0xffff914bcf9c   188  add x17, x17, x16
0xffff914bcfa0   192  br x17
0xffff914bcfa4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914bcfa8   200  d63f03e0       constant
0xffff914bcfac   204  d503201f       constant
0xffff914bcfb0   208  91206000       constant
0xffff914bcfb4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914bcf14  code target (STUB)  (0xffff914378a0)
0xffff914bcf4c  code target (STUB)  (0xffff91438080)
0xffff914bcf5c  constant pool (size 28)
0xffff914bcf98  runtime entry
0xffff914bcfa4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914bcee0     0  tbz w0, #0, #+0x98 (addr 0xffff914bcf78)
0xffff914bcee4     4  mov x2, x0
0xffff914bcee8     8  ldur x4, [x1, #7]
0xffff914bceec    12  stur x2, [x4, #127]
0xffff914bcef0    16  add x3, x4, #0x7f (127)
0xffff914bcef4    20  and x2, x2, #0xfffffffffff00000
0xffff914bcef8    24  ldr x2, [x2, #8]
0xffff914bcefc    28  tbz w2, #1, #+0x24 (addr 0xffff914bcf20)
0xffff914bcf00    32  and x2, x4, #0xfffffffffff00000
0xffff914bcf04    36  ldr x2, [x2, #8]
0xffff914bcf08    40  tbz w2, #2, #+0x18 (addr 0xffff914bcf20)
0xffff914bcf0c    44  sub csp, jssp, #0x8 (8)
0xffff914bcf10    48  str lr, [jssp, #-8]!
0xffff914bcf14    52  ldr x16, pc+84 (addr 0x0000ffff914bcf68)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914bcf18    56  blr x16
0xffff914bcf1c    60  ldr lr, [jssp], #8
0xffff914bcf20    64  stur x5, [x1, #-1]
0xffff914bcf24    68  tbz w5, #0, #+0x34 (addr 0xffff914bcf58)
0xffff914bcf28    72  sub x2, x1, #0x1 (1)
0xffff914bcf2c    76  and x5, x5, #0xfffffffffff00000
0xffff914bcf30    80  ldr x5, [x5, #8]
0xffff914bcf34    84  tbz w5, #1, #+0x24 (addr 0xffff914bcf58)
0xffff914bcf38    88  and x5, x1, #0xfffffffffff00000
0xffff914bcf3c    92  ldr x5, [x5, #8]
0xffff914bcf40    96  tbz w5, #2, #+0x18 (addr 0xffff914bcf58)
0xffff914bcf44   100  sub csp, jssp, #0x8 (8)
0xffff914bcf48   104  str lr, [jssp, #-8]!
0xffff914bcf4c   108  ldr x16, pc+36 (addr 0x0000ffff914bcf70)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914bcf50   112  blr x16
0xffff914bcf54   116  ldr lr, [jssp], #8
0xffff914bcf58   120  ret
0xffff914bcf5c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914bcf60   128  d63f03e0       constant
0xffff914bcf64   132  d503201f       constant
0xffff914bcf68   136  914378a0       constant
0xffff914bcf6c   140  0000ffff       constant
0xffff914bcf70   144  91438080       constant
0xffff914bcf74   148  0000ffff       constant
0xffff914bcf78   152  movz x16, #0x0
0xffff914bcf7c   156  sub csp, jssp, #0x10 (16)
0xffff914bcf80   160  stp fp, lr, [jssp, #-16]!
0xffff914bcf84   164  bl #+0x4 (addr 0xffff914bcf88)
0xffff914bcf88   168  movz x17, #0xa00000000
0xffff914bcf8c   172  sub csp, jssp, #0x10 (16)
0xffff914bcf90   176  stp x17, cp, [jssp, #-16]!
0xffff914bcf94   180  add fp, jssp, #0x10 (16)
0xffff914bcf98   184  ldr x17, pc+24 (addr 0x0000ffff914bcfb0)    ;; lazy deoptimization bailout 0
0xffff914bcf9c   188  add x17, x17, x16
0xffff914bcfa0   192  br x17
0xffff914bcfa4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914bcfa8   200  d63f03e0       constant
0xffff914bcfac   204  d503201f       constant
0xffff914bcfb0   208  91206000       constant
0xffff914bcfb4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914bcf14  code target (STUB)  (0xffff914378a0)
0xffff914bcf4c  code target (STUB)  (0xffff91438080)
0xffff914bcf5c  constant pool (size 28)
0xffff914bcf98  runtime entry
0xffff914bcfa4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/streams/legacy
compiler = unknown
Instructions (size = 184)
0xffff914bd020     0  sub csp, jssp, #0x8 (8)
0xffff914bd024     4  str x3, [jssp, #-8]!
0xffff914bd028     8  sub csp, jssp, #0x8 (8)
0xffff914bd02c    12  str x4, [jssp, #-8]!
0xffff914bd030    16  ldr x3, pc+112 (addr 0x0000ffff914bd0a0)    ;; object: 0x49b63e59 Cell for 0
0xffff914bd034    20  ldur x3, [x3, #7]
0xffff914bd038    24  cmp x3, #0x0 (0)
0xffff914bd03c    28  b.ne #+0x44 (addr 0xffff914bd080)
0xffff914bd040    32  tbz w0, #0, #+0x40 (addr 0xffff914bd080)
0xffff914bd044    36  ldur x3, [x0, #-1]
0xffff914bd048    40  ldr x4, pc+96 (addr 0x0000ffff914bd0a8)    ;; object: 0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914bd04c    44  ldur x4, [x4, #7]
0xffff914bd050    48  cmp x3, x4
0xffff914bd054    52  b.ne #+0x2c (addr 0xffff914bd080)
0xffff914bd058    56  ldr x5, pc+88 (addr 0x0000ffff914bd0b0)    ;; object: 0x4081cc81 WeakCell for 0x3642fee9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914bd05c    60  ldur x5, [x5, #7]
0xffff914bd060    64  tbz w5, #0, #+0x20 (addr 0xffff914bd080)
0xffff914bd064    68  ldursw x4, [x5, #15]
0xffff914bd068    72  tbnz w4, #23, #+0x18 (addr 0xffff914bd080)
0xffff914bd06c    76  ldr x4, [jssp], #8
0xffff914bd070    80  ldr x3, [jssp], #8
0xffff914bd074    84  ldr x2, pc+68 (addr 0x0000ffff914bd0b8)    ;; object: 0x49bbe491 <String[23]: internal/streams/legacy>
0xffff914bd078    88  ldr x16, pc+72 (addr 0x0000ffff914bd0c0)    ;; code: HANDLER, StoreTransitionStub, minor: 196624
0xffff914bd07c    92  br x16
0xffff914bd080    96  ldr x2, pc+72 (addr 0x0000ffff914bd0c8)    ;; object: 0x49bbe491 <String[23]: internal/streams/legacy>
0xffff914bd084   100  ldr x4, [jssp], #8
0xffff914bd088   104  ldr x3, [jssp], #8
0xffff914bd08c   108  ldr x16, pc+68 (addr 0x0000ffff914bd0d0)    ;; code: BUILTIN
0xffff914bd090   112  br x16
0xffff914bd094   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914bd098   120  d63f03e0       constant
0xffff914bd09c   124  d503201f       constant
0xffff914bd0a0   128  49b63e59       constant
0xffff914bd0a4   132  00000000       constant
0xffff914bd0a8   136  49bc22b1       constant
0xffff914bd0ac   140  00000000       constant
0xffff914bd0b0   144  4081cc81       constant
0xffff914bd0b4   148  00000000       constant
0xffff914bd0b8   152  49bbe491       constant
0xffff914bd0bc   156  00000000       constant
0xffff914bd0c0   160  914bcee0       constant
0xffff914bd0c4   164  0000ffff       constant
0xffff914bd0c8   168  49bbe491       constant
0xffff914bd0cc   172  00000000       constant
0xffff914bd0d0   176  91422420       constant
0xffff914bd0d4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914bd030  embedded object  (0x49b63e59 Cell for 0)
0xffff914bd048  embedded object  (0x49bc22b1 WeakCell for 0x3641b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914bd058  embedded object  (0x4081cc81 WeakCell for 0x3642fee9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914bd074  embedded object  (0x49bbe491 <String[23]: internal/streams/legacy>)
0xffff914bd078  code target (HANDLER)  (0xffff914bcee0)
0xffff914bd080  embedded object  (0x49bbe491 <String[23]: internal/streams/legacy>)
0xffff914bd08c  code target (BUILTIN)  (0xffff91422420)
0xffff914bd094  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = super_
compiler = unknown
Instructions (size = 152)
0xffff914bd620     0  sub csp, jssp, #0x8 (8)
0xffff914bd624     4  str x3, [jssp, #-8]!
0xffff914bd628     8  sub csp, jssp, #0x8 (8)
0xffff914bd62c    12  str x4, [jssp, #-8]!
0xffff914bd630    16  ldr x3, pc+88 (addr 0x0000ffff914bd688)    ;; object: 0x49b5b0f1 Cell for 0
0xffff914bd634    20  ldur x3, [x3, #7]
0xffff914bd638    24  cmp x3, #0x0 (0)
0xffff914bd63c    28  b.ne #+0x30 (addr 0xffff914bd66c)
0xffff914bd640    32  tbz w0, #0, #+0x2c (addr 0xffff914bd66c)
0xffff914bd644    36  ldr x5, pc+76 (addr 0x0000ffff914bd690)    ;; object: 0x4081d5d9 WeakCell for 0x3642ff41 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914bd648    40  ldur x5, [x5, #7]
0xffff914bd64c    44  tbz w5, #0, #+0x20 (addr 0xffff914bd66c)
0xffff914bd650    48  ldursw x4, [x5, #15]
0xffff914bd654    52  tbnz w4, #23, #+0x18 (addr 0xffff914bd66c)
0xffff914bd658    56  ldr x4, [jssp], #8
0xffff914bd65c    60  ldr x3, [jssp], #8
0xffff914bd660    64  ldr x2, pc+56 (addr 0x0000ffff914bd698)    ;; object: 0x49bc9f09 <String[6]: super_>
0xffff914bd664    68  ldr x16, pc+60 (addr 0x0000ffff914bd6a0)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff914bd668    72  br x16
0xffff914bd66c    76  ldr x2, pc+60 (addr 0x0000ffff914bd6a8)    ;; object: 0x49bc9f09 <String[6]: super_>
0xffff914bd670    80  ldr x4, [jssp], #8
0xffff914bd674    84  ldr x3, [jssp], #8
0xffff914bd678    88  ldr x16, pc+56 (addr 0x0000ffff914bd6b0)    ;; code: BUILTIN
0xffff914bd67c    92  br x16
0xffff914bd680    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914bd684   100  d63f03e0       constant
0xffff914bd688   104  49b5b0f1       constant
0xffff914bd68c   108  00000000       constant
0xffff914bd690   112  4081d5d9       constant
0xffff914bd694   116  00000000       constant
0xffff914bd698   120  49bc9f09       constant
0xffff914bd69c   124  00000000       constant
0xffff914bd6a0   128  91438860       constant
0xffff914bd6a4   132  0000ffff       constant
0xffff914bd6a8   136  49bc9f09       constant
0xffff914bd6ac   140  00000000       constant
0xffff914bd6b0   144  91422420       constant
0xffff914bd6b4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914bd630  embedded object  (0x49b5b0f1 Cell for 0)
0xffff914bd644  embedded object  (0x4081d5d9 WeakCell for 0x3642ff41 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914bd660  embedded object  (0x49bc9f09 <String[6]: super_>)
0xffff914bd664  code target (HANDLER)  (0xffff91438860)
0xffff914bd66c  embedded object  (0x49bc9f09 <String[6]: super_>)
0xffff914bd678  code target (BUILTIN)  (0xffff91422420)
0xffff914bd680  constant pool (size 56)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 781)
0xffff914bd720     0  movz x2, #0xf2c0
0xffff914bd724     4  movk x2, #0x4117, lsl #16
0xffff914bd728     8  ldp x3, x0, [x2]
0xffff914bd72c    12  adds x16, x3, #0x130 (304)
0xffff914bd730    16  ccmp x16, x0, #nzCv, lo
0xffff914bd734    20  b.hi #+0x150 (addr 0xffff914bd884)
0xffff914bd738    24  str x16, [x2]
0xffff914bd73c    28  orr x3, x3, #0x1
0xffff914bd740    32  ldr x0, pc+432 (addr 0x0000ffff914bd8f0)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914bd744    36  stur x0, [x3, #-1]
0xffff914bd748    40  movz x0, #0x2400000000
0xffff914bd74c    44  stur x0, [x3, #7]
0xffff914bd750    48  stur x1, [x3, #15]
0xffff914bd754    52  stur cp, [x3, #23]
0xffff914bd758    56  ldr x0, pc+416 (addr 0x0000ffff914bd8f8)    ;; object: 0x49b04519 <the hole>
0xffff914bd75c    60  stur x0, [x3, #31]
0xffff914bd760    64  ldur x0, [cp, #39]
0xffff914bd764    68  stur x0, [x3, #39]
0xffff914bd768    72  ldr x0, pc+408 (addr 0x0000ffff914bd900)    ;; object: 0x49b04241 <undefined>
0xffff914bd76c    76  stur x0, [x3, #47]
0xffff914bd770    80  ldr x0, pc+408 (addr 0x0000ffff914bd908)    ;; object: 0x49b04241 <undefined>
0xffff914bd774    84  stur x0, [x3, #55]
0xffff914bd778    88  ldr x0, pc+408 (addr 0x0000ffff914bd910)    ;; object: 0x49b04241 <undefined>
0xffff914bd77c    92  stur x0, [x3, #63]
0xffff914bd780    96  ldr x0, pc+408 (addr 0x0000ffff914bd918)    ;; object: 0x49b04241 <undefined>
0xffff914bd784   100  stur x0, [x3, #71]
0xffff914bd788   104  ldr x0, pc+408 (addr 0x0000ffff914bd920)    ;; object: 0x49b04241 <undefined>
0xffff914bd78c   108  stur x0, [x3, #79]
0xffff914bd790   112  ldr x0, pc+408 (addr 0x0000ffff914bd928)    ;; object: 0x49b04241 <undefined>
0xffff914bd794   116  stur x0, [x3, #87]
0xffff914bd798   120  ldr x0, pc+408 (addr 0x0000ffff914bd930)    ;; object: 0x49b04241 <undefined>
0xffff914bd79c   124  stur x0, [x3, #95]
0xffff914bd7a0   128  ldr x0, pc+408 (addr 0x0000ffff914bd938)    ;; object: 0x49b04241 <undefined>
0xffff914bd7a4   132  stur x0, [x3, #103]
0xffff914bd7a8   136  ldr x0, pc+408 (addr 0x0000ffff914bd940)    ;; object: 0x49b04241 <undefined>
0xffff914bd7ac   140  stur x0, [x3, #111]
0xffff914bd7b0   144  ldr x0, pc+408 (addr 0x0000ffff914bd948)    ;; object: 0x49b04241 <undefined>
0xffff914bd7b4   148  stur x0, [x3, #119]
0xffff914bd7b8   152  ldr x0, pc+408 (addr 0x0000ffff914bd950)    ;; object: 0x49b04241 <undefined>
0xffff914bd7bc   156  stur x0, [x3, #127]
0xffff914bd7c0   160  ldr x0, pc+408 (addr 0x0000ffff914bd958)    ;; object: 0x49b04241 <undefined>
0xffff914bd7c4   164  stur x0, [x3, #135]
0xffff914bd7c8   168  ldr x0, pc+408 (addr 0x0000ffff914bd960)    ;; object: 0x49b04241 <undefined>
0xffff914bd7cc   172  stur x0, [x3, #143]
0xffff914bd7d0   176  ldr x0, pc+408 (addr 0x0000ffff914bd968)    ;; object: 0x49b04241 <undefined>
0xffff914bd7d4   180  stur x0, [x3, #151]
0xffff914bd7d8   184  ldr x0, pc+408 (addr 0x0000ffff914bd970)    ;; object: 0x49b04241 <undefined>
0xffff914bd7dc   188  stur x0, [x3, #159]
0xffff914bd7e0   192  ldr x0, pc+408 (addr 0x0000ffff914bd978)    ;; object: 0x49b04241 <undefined>
0xffff914bd7e4   196  stur x0, [x3, #167]
0xffff914bd7e8   200  ldr x0, pc+408 (addr 0x0000ffff914bd980)    ;; object: 0x49b04241 <undefined>
0xffff914bd7ec   204  stur x0, [x3, #175]
0xffff914bd7f0   208  ldr x0, pc+408 (addr 0x0000ffff914bd988)    ;; object: 0x49b04241 <undefined>
0xffff914bd7f4   212  stur x0, [x3, #183]
0xffff914bd7f8   216  ldr x0, pc+408 (addr 0x0000ffff914bd990)    ;; object: 0x49b04241 <undefined>
0xffff914bd7fc   220  stur x0, [x3, #191]
0xffff914bd800   224  ldr x0, pc+408 (addr 0x0000ffff914bd998)    ;; object: 0x49b04241 <undefined>
0xffff914bd804   228  stur x0, [x3, #199]
0xffff914bd808   232  ldr x0, pc+408 (addr 0x0000ffff914bd9a0)    ;; object: 0x49b04241 <undefined>
0xffff914bd80c   236  stur x0, [x3, #207]
0xffff914bd810   240  ldr x0, pc+408 (addr 0x0000ffff914bd9a8)    ;; object: 0x49b04241 <undefined>
0xffff914bd814   244  stur x0, [x3, #215]
0xffff914bd818   248  ldr x0, pc+408 (addr 0x0000ffff914bd9b0)    ;; object: 0x49b04241 <undefined>
0xffff914bd81c   252  stur x0, [x3, #223]
0xffff914bd820   256  ldr x0, pc+408 (addr 0x0000ffff914bd9b8)    ;; object: 0x49b04241 <undefined>
0xffff914bd824   260  stur x0, [x3, #231]
0xffff914bd828   264  ldr x0, pc+408 (addr 0x0000ffff914bd9c0)    ;; object: 0x49b04241 <undefined>
0xffff914bd82c   268  stur x0, [x3, #239]
0xffff914bd830   272  ldr x0, pc+408 (addr 0x0000ffff914bd9c8)    ;; object: 0x49b04241 <undefined>
0xffff914bd834   276  stur x0, [x3, #247]
0xffff914bd838   280  ldr x0, pc+408 (addr 0x0000ffff914bd9d0)    ;; object: 0x49b04241 <undefined>
0xffff914bd83c   284  stur x0, [x3, #255]
0xffff914bd840   288  ldr x0, pc+408 (addr 0x0000ffff914bd9d8)    ;; object: 0x49b04241 <undefined>
0xffff914bd844   292  movz x16, #0x107
0xffff914bd848   296  str x0, [x3, x16]
0xffff914bd84c   300  ldr x0, pc+404 (addr 0x0000ffff914bd9e0)    ;; object: 0x49b04241 <undefined>
0xffff914bd850   304  movz x16, #0x10f
0xffff914bd854   308  str x0, [x3, x16]
0xffff914bd858   312  ldr x0, pc+400 (addr 0x0000ffff914bd9e8)    ;; object: 0x49b04241 <undefined>
0xffff914bd85c   316  movz x16, #0x117
0xffff914bd860   320  str x0, [x3, x16]
0xffff914bd864   324  ldr x0, pc+396 (addr 0x0000ffff914bd9f0)    ;; object: 0x49b04241 <undefined>
0xffff914bd868   328  movz x16, #0x11f
0xffff914bd86c   332  str x0, [x3, x16]
0xffff914bd870   336  ldr x0, pc+392 (addr 0x0000ffff914bd9f8)    ;; object: 0x49b04241 <undefined>
0xffff914bd874   340  movz x16, #0x127
0xffff914bd878   344  str x0, [x3, x16]
0xffff914bd87c   348  mov x0, x3
0xffff914bd880   352  ret
0xffff914bd884   356  sub csp, jssp, #0x10 (16)
0xffff914bd888   360  stp fp, lr, [jssp, #-16]!
0xffff914bd88c   364  movz fp, #0xa00000000
0xffff914bd890   368  sub csp, jssp, #0x8 (8)
0xffff914bd894   372  str fp, [jssp, #-8]!
0xffff914bd898   376  add fp, jssp, #0x8 (8)
0xffff914bd89c   380  movz x3, #0x0
0xffff914bd8a0   384  mov x16, lr
0xffff914bd8a4   388  ldr x17, pc+348 (addr 0x0000ffff914bda00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914bd8a8   392  blr x17
0xffff914bd8ac   396  movz x0, #0x13000000000
0xffff914bd8b0   400  movz x10, #0x0
0xffff914bd8b4   404  sub csp, jssp, #0x10 (16)
0xffff914bd8b8   408  stp x10, x0, [jssp, #-16]!
0xffff914bd8bc   412  movz x0, #0x2
0xffff914bd8c0   416  movz x1, #0x5b88
0xffff914bd8c4   420  movk x1, #0xe2, lsl #16
0xffff914bd8c8   424  ldr x16, pc+320 (addr 0x0000ffff914bda08)    ;; code: STUB, CEntryStub, minor: 5
0xffff914bd8cc   428  blr x16
0xffff914bd8d0   432  str x0, [jssp, #24]
0xffff914bd8d4   436  ldr x16, pc+316 (addr 0x0000ffff914bda10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914bd8d8   440  blr x16
0xffff914bd8dc   444  ldr lr, [jssp, #16]
0xffff914bd8e0   448  ldp xzr, fp, [jssp], #24
0xffff914bd8e4   452  b #-0x1a4 (addr 0xffff914bd740)
0xffff914bd8e8   456  5800097f       constant pool begin (num_const = 75)    ;; constant pool
0xffff914bd8ec   460  d63f03e0       constant
0xffff914bd8f0   464  36406149       constant
0xffff914bd8f4   468  00000000       constant
0xffff914bd8f8   472  49b04519       constant
0xffff914bd8fc   476  00000000       constant
0xffff914bd900   480  49b04241       constant
0xffff914bd904   484  00000000       constant
0xffff914bd908   488  49b04241       constant
0xffff914bd90c   492  00000000       constant
0xffff914bd910   496  49b04241       constant
0xffff914bd914   500  00000000       constant
0xffff914bd918   504  49b04241       constant
0xffff914bd91c   508  00000000       constant
0xffff914bd920   512  49b04241       constant
0xffff914bd924   516  00000000       constant
0xffff914bd928   520  49b04241       constant
0xffff914bd92c   524  00000000       constant
0xffff914bd930   528  49b04241       constant
0xffff914bd934   532  00000000       constant
0xffff914bd938   536  49b04241       constant
0xffff914bd93c   540  00000000       constant
0xffff914bd940   544  49b04241       constant
0xffff914bd944   548  00000000       constant
0xffff914bd948   552  49b04241       constant
0xffff914bd94c   556  00000000       constant
0xffff914bd950   560  49b04241       constant
0xffff914bd954   564  00000000       constant
0xffff914bd958   568  49b04241       constant
0xffff914bd95c   572  00000000       constant
0xffff914bd960   576  49b04241       constant
0xffff914bd964   580  00000000       constant
0xffff914bd968   584  49b04241       constant
0xffff914bd96c   588  00000000       constant
0xffff914bd970   592  49b04241       constant
0xffff914bd974   596  00000000       constant
0xffff914bd978   600  49b04241       constant
0xffff914bd97c   604  00000000       constant
0xffff914bd980   608  49b04241       constant
0xffff914bd984   612  00000000       constant
0xffff914bd988   616  49b04241       constant
0xffff914bd98c   620  00000000       constant
0xffff914bd990   624  49b04241       constant
0xffff914bd994   628  00000000       constant
0xffff914bd998   632  49b04241       constant
0xffff914bd99c   636  00000000       constant
0xffff914bd9a0   640  49b04241       constant
0xffff914bd9a4   644  00000000       constant
0xffff914bd9a8   648  49b04241       constant
0xffff914bd9ac   652  00000000       constant
0xffff914bd9b0   656  49b04241       constant
0xffff914bd9b4   660  00000000       constant
0xffff914bd9b8   664  49b04241       constant
0xffff914bd9bc   668  00000000       constant
0xffff914bd9c0   672  49b04241       constant
0xffff914bd9c4   676  00000000       constant
0xffff914bd9c8   680  49b04241       constant
0xffff914bd9cc   684  00000000       constant
0xffff914bd9d0   688  49b04241       constant
0xffff914bd9d4   692  00000000       constant
0xffff914bd9d8   696  49b04241       constant
0xffff914bd9dc   700  00000000       constant
0xffff914bd9e0   704  49b04241       constant
0xffff914bd9e4   708  00000000       constant
0xffff914bd9e8   712  49b04241       constant
0xffff914bd9ec   716  00000000       constant
0xffff914bd9f0   720  49b04241       constant
0xffff914bd9f4   724  00000000       constant
0xffff914bd9f8   728  49b04241       constant
0xffff914bd9fc   732  00000000       constant
0xffff914bda00   736  91406820       constant
0xffff914bda04   740  0000ffff       constant
0xffff914bda08   744  91406260       constant
0xffff914bda0c   748  0000ffff       constant
0xffff914bda10   752  914068e0       constant
0xffff914bda14   756  0000ffff       constant


Safepoints (size = 21)
0xffff914bd8d0   432  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 43)
0xffff914bd740  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914bd758  embedded object  (0x49b04519 <the hole>)
0xffff914bd768  embedded object  (0x49b04241 <undefined>)
0xffff914bd770  embedded object  (0x49b04241 <undefined>)
0xffff914bd778  embedded object  (0x49b04241 <undefined>)
0xffff914bd780  embedded object  (0x49b04241 <undefined>)
0xffff914bd788  embedded object  (0x49b04241 <undefined>)
0xffff914bd790  embedded object  (0x49b04241 <undefined>)
0xffff914bd798  embedded object  (0x49b04241 <undefined>)
0xffff914bd7a0  embedded object  (0x49b04241 <undefined>)
0xffff914bd7a8  embedded object  (0x49b04241 <undefined>)
0xffff914bd7b0  embedded object  (0x49b04241 <undefined>)
0xffff914bd7b8  embedded object  (0x49b04241 <undefined>)
0xffff914bd7c0  embedded object  (0x49b04241 <undefined>)
0xffff914bd7c8  embedded object  (0x49b04241 <undefined>)
0xffff914bd7d0  embedded object  (0x49b04241 <undefined>)
0xffff914bd7d8  embedded object  (0x49b04241 <undefined>)
0xffff914bd7e0  embedded object  (0x49b04241 <undefined>)
0xffff914bd7e8  embedded object  (0x49b04241 <undefined>)
0xffff914bd7f0  embedded object  (0x49b04241 <undefined>)
0xffff914bd7f8  embedded object  (0x49b04241 <undefined>)
0xffff914bd800  embedded object  (0x49b04241 <undefined>)
0xffff914bd808  embedded object  (0x49b04241 <undefined>)
0xffff914bd810  embedded object  (0x49b04241 <undefined>)
0xffff914bd818  embedded object  (0x49b04241 <undefined>)
0xffff914bd820  embedded object  (0x49b04241 <undefined>)
0xffff914bd828  embedded object  (0x49b04241 <undefined>)
0xffff914bd830  embedded object  (0x49b04241 <undefined>)
0xffff914bd838  embedded object  (0x49b04241 <undefined>)
0xffff914bd840  embedded object  (0x49b04241 <undefined>)
0xffff914bd84c  embedded object  (0x49b04241 <undefined>)
0xffff914bd858  embedded object  (0x49b04241 <undefined>)
0xffff914bd864  embedded object  (0x49b04241 <undefined>)
0xffff914bd870  embedded object  (0x49b04241 <undefined>)
0xffff914bd8a4  code target (STUB)  (0xffff91406820)
0xffff914bd8c8  code target (STUB)  (0xffff91406260)
0xffff914bd8d4  code target (STUB)  (0xffff914068e0)
0xffff914bd8e8  constant pool (size 304)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 781)
0xffff914bd720     0  movz x2, #0xf2c0
0xffff914bd724     4  movk x2, #0x4117, lsl #16
0xffff914bd728     8  ldp x3, x0, [x2]
0xffff914bd72c    12  adds x16, x3, #0x130 (304)
0xffff914bd730    16  ccmp x16, x0, #nzCv, lo
0xffff914bd734    20  b.hi #+0x150 (addr 0xffff914bd884)
0xffff914bd738    24  str x16, [x2]
0xffff914bd73c    28  orr x3, x3, #0x1
0xffff914bd740    32  ldr x0, pc+432 (addr 0x0000ffff914bd8f0)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914bd744    36  stur x0, [x3, #-1]
0xffff914bd748    40  movz x0, #0x2400000000
0xffff914bd74c    44  stur x0, [x3, #7]
0xffff914bd750    48  stur x1, [x3, #15]
0xffff914bd754    52  stur cp, [x3, #23]
0xffff914bd758    56  ldr x0, pc+416 (addr 0x0000ffff914bd8f8)    ;; object: 0x49b04519 <the hole>
0xffff914bd75c    60  stur x0, [x3, #31]
0xffff914bd760    64  ldur x0, [cp, #39]
0xffff914bd764    68  stur x0, [x3, #39]
0xffff914bd768    72  ldr x0, pc+408 (addr 0x0000ffff914bd900)    ;; object: 0x49b04241 <undefined>
0xffff914bd76c    76  stur x0, [x3, #47]
0xffff914bd770    80  ldr x0, pc+408 (addr 0x0000ffff914bd908)    ;; object: 0x49b04241 <undefined>
0xffff914bd774    84  stur x0, [x3, #55]
0xffff914bd778    88  ldr x0, pc+408 (addr 0x0000ffff914bd910)    ;; object: 0x49b04241 <undefined>
0xffff914bd77c    92  stur x0, [x3, #63]
0xffff914bd780    96  ldr x0, pc+408 (addr 0x0000ffff914bd918)    ;; object: 0x49b04241 <undefined>
0xffff914bd784   100  stur x0, [x3, #71]
0xffff914bd788   104  ldr x0, pc+408 (addr 0x0000ffff914bd920)    ;; object: 0x49b04241 <undefined>
0xffff914bd78c   108  stur x0, [x3, #79]
0xffff914bd790   112  ldr x0, pc+408 (addr 0x0000ffff914bd928)    ;; object: 0x49b04241 <undefined>
0xffff914bd794   116  stur x0, [x3, #87]
0xffff914bd798   120  ldr x0, pc+408 (addr 0x0000ffff914bd930)    ;; object: 0x49b04241 <undefined>
0xffff914bd79c   124  stur x0, [x3, #95]
0xffff914bd7a0   128  ldr x0, pc+408 (addr 0x0000ffff914bd938)    ;; object: 0x49b04241 <undefined>
0xffff914bd7a4   132  stur x0, [x3, #103]
0xffff914bd7a8   136  ldr x0, pc+408 (addr 0x0000ffff914bd940)    ;; object: 0x49b04241 <undefined>
0xffff914bd7ac   140  stur x0, [x3, #111]
0xffff914bd7b0   144  ldr x0, pc+408 (addr 0x0000ffff914bd948)    ;; object: 0x49b04241 <undefined>
0xffff914bd7b4   148  stur x0, [x3, #119]
0xffff914bd7b8   152  ldr x0, pc+408 (addr 0x0000ffff914bd950)    ;; object: 0x49b04241 <undefined>
0xffff914bd7bc   156  stur x0, [x3, #127]
0xffff914bd7c0   160  ldr x0, pc+408 (addr 0x0000ffff914bd958)    ;; object: 0x49b04241 <undefined>
0xffff914bd7c4   164  stur x0, [x3, #135]
0xffff914bd7c8   168  ldr x0, pc+408 (addr 0x0000ffff914bd960)    ;; object: 0x49b04241 <undefined>
0xffff914bd7cc   172  stur x0, [x3, #143]
0xffff914bd7d0   176  ldr x0, pc+408 (addr 0x0000ffff914bd968)    ;; object: 0x49b04241 <undefined>
0xffff914bd7d4   180  stur x0, [x3, #151]
0xffff914bd7d8   184  ldr x0, pc+408 (addr 0x0000ffff914bd970)    ;; object: 0x49b04241 <undefined>
0xffff914bd7dc   188  stur x0, [x3, #159]
0xffff914bd7e0   192  ldr x0, pc+408 (addr 0x0000ffff914bd978)    ;; object: 0x49b04241 <undefined>
0xffff914bd7e4   196  stur x0, [x3, #167]
0xffff914bd7e8   200  ldr x0, pc+408 (addr 0x0000ffff914bd980)    ;; object: 0x49b04241 <undefined>
0xffff914bd7ec   204  stur x0, [x3, #175]
0xffff914bd7f0   208  ldr x0, pc+408 (addr 0x0000ffff914bd988)    ;; object: 0x49b04241 <undefined>
0xffff914bd7f4   212  stur x0, [x3, #183]
0xffff914bd7f8   216  ldr x0, pc+408 (addr 0x0000ffff914bd990)    ;; object: 0x49b04241 <undefined>
0xffff914bd7fc   220  stur x0, [x3, #191]
0xffff914bd800   224  ldr x0, pc+408 (addr 0x0000ffff914bd998)    ;; object: 0x49b04241 <undefined>
0xffff914bd804   228  stur x0, [x3, #199]
0xffff914bd808   232  ldr x0, pc+408 (addr 0x0000ffff914bd9a0)    ;; object: 0x49b04241 <undefined>
0xffff914bd80c   236  stur x0, [x3, #207]
0xffff914bd810   240  ldr x0, pc+408 (addr 0x0000ffff914bd9a8)    ;; object: 0x49b04241 <undefined>
0xffff914bd814   244  stur x0, [x3, #215]
0xffff914bd818   248  ldr x0, pc+408 (addr 0x0000ffff914bd9b0)    ;; object: 0x49b04241 <undefined>
0xffff914bd81c   252  stur x0, [x3, #223]
0xffff914bd820   256  ldr x0, pc+408 (addr 0x0000ffff914bd9b8)    ;; object: 0x49b04241 <undefined>
0xffff914bd824   260  stur x0, [x3, #231]
0xffff914bd828   264  ldr x0, pc+408 (addr 0x0000ffff914bd9c0)    ;; object: 0x49b04241 <undefined>
0xffff914bd82c   268  stur x0, [x3, #239]
0xffff914bd830   272  ldr x0, pc+408 (addr 0x0000ffff914bd9c8)    ;; object: 0x49b04241 <undefined>
0xffff914bd834   276  stur x0, [x3, #247]
0xffff914bd838   280  ldr x0, pc+408 (addr 0x0000ffff914bd9d0)    ;; object: 0x49b04241 <undefined>
0xffff914bd83c   284  stur x0, [x3, #255]
0xffff914bd840   288  ldr x0, pc+408 (addr 0x0000ffff914bd9d8)    ;; object: 0x49b04241 <undefined>
0xffff914bd844   292  movz x16, #0x107
0xffff914bd848   296  str x0, [x3, x16]
0xffff914bd84c   300  ldr x0, pc+404 (addr 0x0000ffff914bd9e0)    ;; object: 0x49b04241 <undefined>
0xffff914bd850   304  movz x16, #0x10f
0xffff914bd854   308  str x0, [x3, x16]
0xffff914bd858   312  ldr x0, pc+400 (addr 0x0000ffff914bd9e8)    ;; object: 0x49b04241 <undefined>
0xffff914bd85c   316  movz x16, #0x117
0xffff914bd860   320  str x0, [x3, x16]
0xffff914bd864   324  ldr x0, pc+396 (addr 0x0000ffff914bd9f0)    ;; object: 0x49b04241 <undefined>
0xffff914bd868   328  movz x16, #0x11f
0xffff914bd86c   332  str x0, [x3, x16]
0xffff914bd870   336  ldr x0, pc+392 (addr 0x0000ffff914bd9f8)    ;; object: 0x49b04241 <undefined>
0xffff914bd874   340  movz x16, #0x127
0xffff914bd878   344  str x0, [x3, x16]
0xffff914bd87c   348  mov x0, x3
0xffff914bd880   352  ret
0xffff914bd884   356  sub csp, jssp, #0x10 (16)
0xffff914bd888   360  stp fp, lr, [jssp, #-16]!
0xffff914bd88c   364  movz fp, #0xa00000000
0xffff914bd890   368  sub csp, jssp, #0x8 (8)
0xffff914bd894   372  str fp, [jssp, #-8]!
0xffff914bd898   376  add fp, jssp, #0x8 (8)
0xffff914bd89c   380  movz x3, #0x0
0xffff914bd8a0   384  mov x16, lr
0xffff914bd8a4   388  ldr x17, pc+348 (addr 0x0000ffff914bda00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914bd8a8   392  blr x17
0xffff914bd8ac   396  movz x0, #0x13000000000
0xffff914bd8b0   400  movz x10, #0x0
0xffff914bd8b4   404  sub csp, jssp, #0x10 (16)
0xffff914bd8b8   408  stp x10, x0, [jssp, #-16]!
0xffff914bd8bc   412  movz x0, #0x2
0xffff914bd8c0   416  movz x1, #0x5b88
0xffff914bd8c4   420  movk x1, #0xe2, lsl #16
0xffff914bd8c8   424  ldr x16, pc+320 (addr 0x0000ffff914bda08)    ;; code: STUB, CEntryStub, minor: 5
0xffff914bd8cc   428  blr x16
0xffff914bd8d0   432  str x0, [jssp, #24]
0xffff914bd8d4   436  ldr x16, pc+316 (addr 0x0000ffff914bda10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914bd8d8   440  blr x16
0xffff914bd8dc   444  ldr lr, [jssp, #16]
0xffff914bd8e0   448  ldp xzr, fp, [jssp], #24
0xffff914bd8e4   452  b #-0x1a4 (addr 0xffff914bd740)
0xffff914bd8e8   456  5800097f       constant pool begin (num_const = 75)    ;; constant pool
0xffff914bd8ec   460  d63f03e0       constant
0xffff914bd8f0   464  36406149       constant
0xffff914bd8f4   468  00000000       constant
0xffff914bd8f8   472  49b04519       constant
0xffff914bd8fc   476  00000000       constant
0xffff914bd900   480  49b04241       constant
0xffff914bd904   484  00000000       constant
0xffff914bd908   488  49b04241       constant
0xffff914bd90c   492  00000000       constant
0xffff914bd910   496  49b04241       constant
0xffff914bd914   500  00000000       constant
0xffff914bd918   504  49b04241       constant
0xffff914bd91c   508  00000000       constant
0xffff914bd920   512  49b04241       constant
0xffff914bd924   516  00000000       constant
0xffff914bd928   520  49b04241       constant
0xffff914bd92c   524  00000000       constant
0xffff914bd930   528  49b04241       constant
0xffff914bd934   532  00000000       constant
0xffff914bd938   536  49b04241       constant
0xffff914bd93c   540  00000000       constant
0xffff914bd940   544  49b04241       constant
0xffff914bd944   548  00000000       constant
0xffff914bd948   552  49b04241       constant
0xffff914bd94c   556  00000000       constant
0xffff914bd950   560  49b04241       constant
0xffff914bd954   564  00000000       constant
0xffff914bd958   568  49b04241       constant
0xffff914bd95c   572  00000000       constant
0xffff914bd960   576  49b04241       constant
0xffff914bd964   580  00000000       constant
0xffff914bd968   584  49b04241       constant
0xffff914bd96c   588  00000000       constant
0xffff914bd970   592  49b04241       constant
0xffff914bd974   596  00000000       constant
0xffff914bd978   600  49b04241       constant
0xffff914bd97c   604  00000000       constant
0xffff914bd980   608  49b04241       constant
0xffff914bd984   612  00000000       constant
0xffff914bd988   616  49b04241       constant
0xffff914bd98c   620  00000000       constant
0xffff914bd990   624  49b04241       constant
0xffff914bd994   628  00000000       constant
0xffff914bd998   632  49b04241       constant
0xffff914bd99c   636  00000000       constant
0xffff914bd9a0   640  49b04241       constant
0xffff914bd9a4   644  00000000       constant
0xffff914bd9a8   648  49b04241       constant
0xffff914bd9ac   652  00000000       constant
0xffff914bd9b0   656  49b04241       constant
0xffff914bd9b4   660  00000000       constant
0xffff914bd9b8   664  49b04241       constant
0xffff914bd9bc   668  00000000       constant
0xffff914bd9c0   672  49b04241       constant
0xffff914bd9c4   676  00000000       constant
0xffff914bd9c8   680  49b04241       constant
0xffff914bd9cc   684  00000000       constant
0xffff914bd9d0   688  49b04241       constant
0xffff914bd9d4   692  00000000       constant
0xffff914bd9d8   696  49b04241       constant
0xffff914bd9dc   700  00000000       constant
0xffff914bd9e0   704  49b04241       constant
0xffff914bd9e4   708  00000000       constant
0xffff914bd9e8   712  49b04241       constant
0xffff914bd9ec   716  00000000       constant
0xffff914bd9f0   720  49b04241       constant
0xffff914bd9f4   724  00000000       constant
0xffff914bd9f8   728  49b04241       constant
0xffff914bd9fc   732  00000000       constant
0xffff914bda00   736  91406820       constant
0xffff914bda04   740  0000ffff       constant
0xffff914bda08   744  91406260       constant
0xffff914bda0c   748  0000ffff       constant
0xffff914bda10   752  914068e0       constant
0xffff914bda14   756  0000ffff       constant


Safepoints (size = 21)
0xffff914bd8d0   432  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 43)
0xffff914bd740  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914bd758  embedded object  (0x49b04519 <the hole>)
0xffff914bd768  embedded object  (0x49b04241 <undefined>)
0xffff914bd770  embedded object  (0x49b04241 <undefined>)
0xffff914bd778  embedded object  (0x49b04241 <undefined>)
0xffff914bd780  embedded object  (0x49b04241 <undefined>)
0xffff914bd788  embedded object  (0x49b04241 <undefined>)
0xffff914bd790  embedded object  (0x49b04241 <undefined>)
0xffff914bd798  embedded object  (0x49b04241 <undefined>)
0xffff914bd7a0  embedded object  (0x49b04241 <undefined>)
0xffff914bd7a8  embedded object  (0x49b04241 <undefined>)
0xffff914bd7b0  embedded object  (0x49b04241 <undefined>)
0xffff914bd7b8  embedded object  (0x49b04241 <undefined>)
0xffff914bd7c0  embedded object  (0x49b04241 <undefined>)
0xffff914bd7c8  embedded object  (0x49b04241 <undefined>)
0xffff914bd7d0  embedded object  (0x49b04241 <undefined>)
0xffff914bd7d8  embedded object  (0x49b04241 <undefined>)
0xffff914bd7e0  embedded object  (0x49b04241 <undefined>)
0xffff914bd7e8  embedded object  (0x49b04241 <undefined>)
0xffff914bd7f0  embedded object  (0x49b04241 <undefined>)
0xffff914bd7f8  embedded object  (0x49b04241 <undefined>)
0xffff914bd800  embedded object  (0x49b04241 <undefined>)
0xffff914bd808  embedded object  (0x49b04241 <undefined>)
0xffff914bd810  embedded object  (0x49b04241 <undefined>)
0xffff914bd818  embedded object  (0x49b04241 <undefined>)
0xffff914bd820  embedded object  (0x49b04241 <undefined>)
0xffff914bd828  embedded object  (0x49b04241 <undefined>)
0xffff914bd830  embedded object  (0x49b04241 <undefined>)
0xffff914bd838  embedded object  (0x49b04241 <undefined>)
0xffff914bd840  embedded object  (0x49b04241 <undefined>)
0xffff914bd84c  embedded object  (0x49b04241 <undefined>)
0xffff914bd858  embedded object  (0x49b04241 <undefined>)
0xffff914bd864  embedded object  (0x49b04241 <undefined>)
0xffff914bd870  embedded object  (0x49b04241 <undefined>)
0xffff914bd8a4  code target (STUB)  (0xffff91406820)
0xffff914bd8c8  code target (STUB)  (0xffff91406260)
0xffff914bd8d4  code target (STUB)  (0xffff914068e0)
0xffff914bd8e8  constant pool (size 304)


kind = HANDLER
major_key = <NoCache>Stub
name = toUpperCase
compiler = unknown
Instructions (size = 152)
0xffff914bf0a0     0  sub csp, jssp, #0x8 (8)
0xffff914bf0a4     4  str x3, [jssp, #-8]!
0xffff914bf0a8     8  sub csp, jssp, #0x8 (8)
0xffff914bf0ac    12  str x0, [jssp, #-8]!
0xffff914bf0b0    16  ldur x3, [cp, #39]
0xffff914bf0b4    20  movz x16, #0x2e7
0xffff914bf0b8    24  ldr x3, [x3, x16]
0xffff914bf0bc    28  ldur x3, [x3, #23]
0xffff914bf0c0    32  ldur x3, [x3, #23]
0xffff914bf0c4    36  ldr x0, pc+84 (addr 0x0000ffff914bf118)    ;; object: 0x49b63e59 Cell for 0
0xffff914bf0c8    40  ldur x0, [x0, #7]
0xffff914bf0cc    44  cmp x0, #0x0 (0)
0xffff914bf0d0    48  b.ne #+0x1c (addr 0xffff914bf0ec)
0xffff914bf0d4    52  ldur x0, [x3, #-1]
0xffff914bf0d8    56  ldr x4, pc+72 (addr 0x0000ffff914bf120)    ;; object: 0x40806e39 WeakCell for 0x364156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff914bf0dc    60  ldur x4, [x4, #7]
0xffff914bf0e0    64  cmp x0, x4
0xffff914bf0e4    68  b.ne #+0x8 (addr 0xffff914bf0ec)
0xffff914bf0e8    72  b #+0x14 (addr 0xffff914bf0fc)
0xffff914bf0ec    76  ldr x0, [jssp], #8
0xffff914bf0f0    80  ldr x3, [jssp], #8
0xffff914bf0f4    84  ldr x16, pc+52 (addr 0x0000ffff914bf128)    ;; code: BUILTIN
0xffff914bf0f8    88  br x16
0xffff914bf0fc    92  add jssp, jssp, #0x10 (16)
0xffff914bf100    96  mov x1, x3
0xffff914bf104   100  ldr x16, pc+44 (addr 0x0000ffff914bf130)    ;; code: HANDLER, LoadConstantStub, minor: 25
0xffff914bf108   104  br x16
0xffff914bf10c   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff914bf110   112  d63f03e0       constant
0xffff914bf114   116  d503201f       constant
0xffff914bf118   120  49b63e59       constant
0xffff914bf11c   124  00000000       constant
0xffff914bf120   128  40806e39       constant
0xffff914bf124   132  00000000       constant
0xffff914bf128   136  914222e0       constant
0xffff914bf12c   140  0000ffff       constant
0xffff914bf130   144  9147b440       constant
0xffff914bf134   148  0000ffff       constant


RelocInfo (size = 10)
0xffff914bf0c4  embedded object  (0x49b63e59 Cell for 0)
0xffff914bf0d8  embedded object  (0x40806e39 WeakCell for 0x364156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff914bf0f4  code target (BUILTIN)  (0xffff914222e0)
0xffff914bf104  code target (HANDLER)  (0xffff9147b440)
0xffff914bf10c  constant pool (size 44)

kind = HANDLER
major_key = <NoCache>Stub
name = RegExp
compiler = unknown
Instructions (size = 120)
0xffff914bf1a0     0  sub csp, jssp, #0x8 (8)
0xffff914bf1a4     4  str x3, [jssp, #-8]!
0xffff914bf1a8     8  sub csp, jssp, #0x8 (8)
0xffff914bf1ac    12  str x0, [jssp, #-8]!
0xffff914bf1b0    16  ldr x0, pc+80 (addr 0x0000ffff914bf200)    ;; object: 0x49bc5d51 Cell for 0
0xffff914bf1b4    20  ldur x0, [x0, #7]
0xffff914bf1b8    24  cmp x0, #0x0 (0)
0xffff914bf1bc    28  b.ne #+0x2c (addr 0xffff914bf1e8)
0xffff914bf1c0    32  ldr x0, pc+72 (addr 0x0000ffff914bf208)    ;; object: 0x40820c49 WeakCell for 0x49b46281 PropertyCell for 0x49b46219 <JS Function RegExp (SharedFunctionInfo 0x49b46171)>
0xffff914bf1c4    36  ldur x0, [x0, #7]
0xffff914bf1c8    40  tbz w0, #0, #+0x20 (addr 0xffff914bf1e8)
0xffff914bf1cc    44  ldur x0, [x0, #15]
0xffff914bf1d0    48  ldr x16, [x26, #88]
0xffff914bf1d4    52  cmp x0, x16
0xffff914bf1d8    56  b.eq #+0x10 (addr 0xffff914bf1e8)
0xffff914bf1dc    60  add jssp, jssp, #0x10 (16)
0xffff914bf1e0    64  ret
0xffff914bf1e4    68  b #+0x14 (addr 0xffff914bf1f8)
0xffff914bf1e8    72  ldr x0, [jssp], #8
0xffff914bf1ec    76  ldr x3, [jssp], #8
0xffff914bf1f0    80  ldr x16, pc+32 (addr 0x0000ffff914bf210)    ;; code: BUILTIN
0xffff914bf1f4    84  br x16
0xffff914bf1f8    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914bf1fc    92  d63f03e0       constant
0xffff914bf200    96  49bc5d51       constant
0xffff914bf204   100  00000000       constant
0xffff914bf208   104  40820c49       constant
0xffff914bf20c   108  00000000       constant
0xffff914bf210   112  914222e0       constant
0xffff914bf214   116  0000ffff       constant


RelocInfo (size = 9)
0xffff914bf1b0  embedded object  (0x49bc5d51 Cell for 0)
0xffff914bf1c0  embedded object  (0x40820c49 WeakCell for 0x49b46281 PropertyCell for 0x49b46219 <JS Function RegExp (SharedFunctionInfo 0x49b46171)>)
0xffff914bf1f0  code target (BUILTIN)  (0xffff914222e0)
0xffff914bf1f8  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = test
compiler = unknown
Instructions (size = 120)
0xffff914bf280     0  sub csp, jssp, #0x8 (8)
0xffff914bf284     4  str x3, [jssp, #-8]!
0xffff914bf288     8  sub csp, jssp, #0x8 (8)
0xffff914bf28c    12  str x0, [jssp, #-8]!
0xffff914bf290    16  ldr x0, pc+72 (addr 0x0000ffff914bf2d8)    ;; object: 0x49bed491 Cell for 0
0xffff914bf294    20  ldur x0, [x0, #7]
0xffff914bf298    24  cmp x0, #0x0 (0)
0xffff914bf29c    28  b.ne #+0x14 (addr 0xffff914bf2b0)
0xffff914bf2a0    32  ldr x3, pc+64 (addr 0x0000ffff914bf2e0)    ;; object: 0x40820c81 WeakCell for 0x51d6ca81 <an Object with map 0x364164d1>
0xffff914bf2a4    36  ldur x3, [x3, #7]
0xffff914bf2a8    40  tbz w3, #0, #+0x8 (addr 0xffff914bf2b0)
0xffff914bf2ac    44  b #+0x14 (addr 0xffff914bf2c0)
0xffff914bf2b0    48  ldr x0, [jssp], #8
0xffff914bf2b4    52  ldr x3, [jssp], #8
0xffff914bf2b8    56  ldr x16, pc+48 (addr 0x0000ffff914bf2e8)    ;; code: BUILTIN
0xffff914bf2bc    60  br x16
0xffff914bf2c0    64  add jssp, jssp, #0x10 (16)
0xffff914bf2c4    68  mov x1, x3
0xffff914bf2c8    72  ldr x16, pc+40 (addr 0x0000ffff914bf2f0)    ;; code: HANDLER, LoadFieldStub, minor: 7
0xffff914bf2cc    76  br x16
0xffff914bf2d0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914bf2d4    84  d63f03e0       constant
0xffff914bf2d8    88  49bed491       constant
0xffff914bf2dc    92  00000000       constant
0xffff914bf2e0    96  40820c81       constant
0xffff914bf2e4   100  00000000       constant
0xffff914bf2e8   104  914222e0       constant
0xffff914bf2ec   108  0000ffff       constant
0xffff914bf2f0   112  91467340       constant
0xffff914bf2f4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914bf290  embedded object  (0x49bed491 Cell for 0)
0xffff914bf2a0  embedded object  (0x40820c81 WeakCell for 0x51d6ca81 <an Object with map 0x364164d1>)
0xffff914bf2b8  code target (BUILTIN)  (0xffff914222e0)
0xffff914bf2c8  code target (HANDLER)  (0xffff91467340)
0xffff914bf2d0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = super_
compiler = unknown
Instructions (size = 168)
0xffff914bff00     0  sub csp, jssp, #0x8 (8)
0xffff914bff04     4  str x3, [jssp, #-8]!
0xffff914bff08     8  sub csp, jssp, #0x8 (8)
0xffff914bff0c    12  str x4, [jssp, #-8]!
0xffff914bff10    16  ldr x3, pc+104 (addr 0x0000ffff914bff78)    ;; object: 0x49b5b0f1 Cell for 0
0xffff914bff14    20  ldur x3, [x3, #7]
0xffff914bff18    24  cmp x3, #0x0 (0)
0xffff914bff1c    28  b.ne #+0x3c (addr 0xffff914bff58)
0xffff914bff20    32  ldr x5, pc+96 (addr 0x0000ffff914bff80)    ;; object: 0x40821e39 WeakCell for 0x36430469 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914bff24    36  ldur x5, [x5, #7]
0xffff914bff28    40  tbz w5, #0, #+0x30 (addr 0xffff914bff58)
0xffff914bff2c    44  ldursw x4, [x5, #15]
0xffff914bff30    48  tbnz w4, #23, #+0x28 (addr 0xffff914bff58)
0xffff914bff34    52  ldur x4, [x5, #47]
0xffff914bff38    56  ldur x4, [x4, #143]
0xffff914bff3c    60  cmp x0, x4
0xffff914bff40    64  b.ne #+0x18 (addr 0xffff914bff58)
0xffff914bff44    68  ldr x4, [jssp], #8
0xffff914bff48    72  ldr x3, [jssp], #8
0xffff914bff4c    76  ldr x2, pc+60 (addr 0x0000ffff914bff88)    ;; object: 0x49bc9f09 <String[6]: super_>
0xffff914bff50    80  ldr x16, pc+64 (addr 0x0000ffff914bff90)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff914bff54    84  br x16
0xffff914bff58    88  ldr x2, pc+64 (addr 0x0000ffff914bff98)    ;; object: 0x49bc9f09 <String[6]: super_>
0xffff914bff5c    92  ldr x4, [jssp], #8
0xffff914bff60    96  ldr x3, [jssp], #8
0xffff914bff64   100  ldr x16, pc+60 (addr 0x0000ffff914bffa0)    ;; code: BUILTIN
0xffff914bff68   104  br x16
0xffff914bff6c   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914bff70   112  d63f03e0       constant
0xffff914bff74   116  d503201f       constant
0xffff914bff78   120  49b5b0f1       constant
0xffff914bff7c   124  00000000       constant
0xffff914bff80   128  40821e39       constant
0xffff914bff84   132  00000000       constant
0xffff914bff88   136  49bc9f09       constant
0xffff914bff8c   140  00000000       constant
0xffff914bff90   144  9143cea0       constant
0xffff914bff94   148  0000ffff       constant
0xffff914bff98   152  49bc9f09       constant
0xffff914bff9c   156  00000000       constant
0xffff914bffa0   160  91422420       constant
0xffff914bffa4   164  0000ffff       constant


RelocInfo (size = 12)
0xffff914bff10  embedded object  (0x49b5b0f1 Cell for 0)
0xffff914bff20  embedded object  (0x40821e39 WeakCell for 0x36430469 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914bff4c  embedded object  (0x49bc9f09 <String[6]: super_>)
0xffff914bff50  code target (HANDLER)  (0xffff9143cea0)
0xffff914bff58  embedded object  (0x49bc9f09 <String[6]: super_>)
0xffff914bff64  code target (BUILTIN)  (0xffff91422420)
0xffff914bff6c  constant pool (size 60)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 621)
0xffff914c0020     0  movz x2, #0xf2c0
0xffff914c0024     4  movk x2, #0x4117, lsl #16
0xffff914c0028     8  ldp x3, x0, [x2]
0xffff914c002c    12  adds x16, x3, #0xe8 (232)
0xffff914c0030    16  ccmp x16, x0, #nzCv, lo
0xffff914c0034    20  b.hi #+0xf4 (addr 0xffff914c0128)
0xffff914c0038    24  str x16, [x2]
0xffff914c003c    28  orr x3, x3, #0x1
0xffff914c0040    32  ldr x0, pc+344 (addr 0x0000ffff914c0198)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914c0044    36  stur x0, [x3, #-1]
0xffff914c0048    40  movz x0, #0x1b00000000
0xffff914c004c    44  stur x0, [x3, #7]
0xffff914c0050    48  stur x1, [x3, #15]
0xffff914c0054    52  stur cp, [x3, #23]
0xffff914c0058    56  ldr x0, pc+328 (addr 0x0000ffff914c01a0)    ;; object: 0x49b04519 <the hole>
0xffff914c005c    60  stur x0, [x3, #31]
0xffff914c0060    64  ldur x0, [cp, #39]
0xffff914c0064    68  stur x0, [x3, #39]
0xffff914c0068    72  ldr x0, pc+320 (addr 0x0000ffff914c01a8)    ;; object: 0x49b04241 <undefined>
0xffff914c006c    76  stur x0, [x3, #47]
0xffff914c0070    80  ldr x0, pc+320 (addr 0x0000ffff914c01b0)    ;; object: 0x49b04241 <undefined>
0xffff914c0074    84  stur x0, [x3, #55]
0xffff914c0078    88  ldr x0, pc+320 (addr 0x0000ffff914c01b8)    ;; object: 0x49b04241 <undefined>
0xffff914c007c    92  stur x0, [x3, #63]
0xffff914c0080    96  ldr x0, pc+320 (addr 0x0000ffff914c01c0)    ;; object: 0x49b04241 <undefined>
0xffff914c0084   100  stur x0, [x3, #71]
0xffff914c0088   104  ldr x0, pc+320 (addr 0x0000ffff914c01c8)    ;; object: 0x49b04241 <undefined>
0xffff914c008c   108  stur x0, [x3, #79]
0xffff914c0090   112  ldr x0, pc+320 (addr 0x0000ffff914c01d0)    ;; object: 0x49b04241 <undefined>
0xffff914c0094   116  stur x0, [x3, #87]
0xffff914c0098   120  ldr x0, pc+320 (addr 0x0000ffff914c01d8)    ;; object: 0x49b04241 <undefined>
0xffff914c009c   124  stur x0, [x3, #95]
0xffff914c00a0   128  ldr x0, pc+320 (addr 0x0000ffff914c01e0)    ;; object: 0x49b04241 <undefined>
0xffff914c00a4   132  stur x0, [x3, #103]
0xffff914c00a8   136  ldr x0, pc+320 (addr 0x0000ffff914c01e8)    ;; object: 0x49b04241 <undefined>
0xffff914c00ac   140  stur x0, [x3, #111]
0xffff914c00b0   144  ldr x0, pc+320 (addr 0x0000ffff914c01f0)    ;; object: 0x49b04241 <undefined>
0xffff914c00b4   148  stur x0, [x3, #119]
0xffff914c00b8   152  ldr x0, pc+320 (addr 0x0000ffff914c01f8)    ;; object: 0x49b04241 <undefined>
0xffff914c00bc   156  stur x0, [x3, #127]
0xffff914c00c0   160  ldr x0, pc+320 (addr 0x0000ffff914c0200)    ;; object: 0x49b04241 <undefined>
0xffff914c00c4   164  stur x0, [x3, #135]
0xffff914c00c8   168  ldr x0, pc+320 (addr 0x0000ffff914c0208)    ;; object: 0x49b04241 <undefined>
0xffff914c00cc   172  stur x0, [x3, #143]
0xffff914c00d0   176  ldr x0, pc+320 (addr 0x0000ffff914c0210)    ;; object: 0x49b04241 <undefined>
0xffff914c00d4   180  stur x0, [x3, #151]
0xffff914c00d8   184  ldr x0, pc+320 (addr 0x0000ffff914c0218)    ;; object: 0x49b04241 <undefined>
0xffff914c00dc   188  stur x0, [x3, #159]
0xffff914c00e0   192  ldr x0, pc+320 (addr 0x0000ffff914c0220)    ;; object: 0x49b04241 <undefined>
0xffff914c00e4   196  stur x0, [x3, #167]
0xffff914c00e8   200  ldr x0, pc+320 (addr 0x0000ffff914c0228)    ;; object: 0x49b04241 <undefined>
0xffff914c00ec   204  stur x0, [x3, #175]
0xffff914c00f0   208  ldr x0, pc+320 (addr 0x0000ffff914c0230)    ;; object: 0x49b04241 <undefined>
0xffff914c00f4   212  stur x0, [x3, #183]
0xffff914c00f8   216  ldr x0, pc+320 (addr 0x0000ffff914c0238)    ;; object: 0x49b04241 <undefined>
0xffff914c00fc   220  stur x0, [x3, #191]
0xffff914c0100   224  ldr x0, pc+320 (addr 0x0000ffff914c0240)    ;; object: 0x49b04241 <undefined>
0xffff914c0104   228  stur x0, [x3, #199]
0xffff914c0108   232  ldr x0, pc+320 (addr 0x0000ffff914c0248)    ;; object: 0x49b04241 <undefined>
0xffff914c010c   236  stur x0, [x3, #207]
0xffff914c0110   240  ldr x0, pc+320 (addr 0x0000ffff914c0250)    ;; object: 0x49b04241 <undefined>
0xffff914c0114   244  stur x0, [x3, #215]
0xffff914c0118   248  ldr x0, pc+320 (addr 0x0000ffff914c0258)    ;; object: 0x49b04241 <undefined>
0xffff914c011c   252  stur x0, [x3, #223]
0xffff914c0120   256  mov x0, x3
0xffff914c0124   260  ret
0xffff914c0128   264  sub csp, jssp, #0x10 (16)
0xffff914c012c   268  stp fp, lr, [jssp, #-16]!
0xffff914c0130   272  movz fp, #0xa00000000
0xffff914c0134   276  sub csp, jssp, #0x8 (8)
0xffff914c0138   280  str fp, [jssp, #-8]!
0xffff914c013c   284  add fp, jssp, #0x8 (8)
0xffff914c0140   288  movz x3, #0x0
0xffff914c0144   292  mov x16, lr
0xffff914c0148   296  ldr x17, pc+280 (addr 0x0000ffff914c0260)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914c014c   300  blr x17
0xffff914c0150   304  movz x0, #0xe800000000
0xffff914c0154   308  movz x10, #0x0
0xffff914c0158   312  sub csp, jssp, #0x10 (16)
0xffff914c015c   316  stp x10, x0, [jssp, #-16]!
0xffff914c0160   320  movz x0, #0x2
0xffff914c0164   324  movz x1, #0x5b88
0xffff914c0168   328  movk x1, #0xe2, lsl #16
0xffff914c016c   332  ldr x16, pc+252 (addr 0x0000ffff914c0268)    ;; code: STUB, CEntryStub, minor: 5
0xffff914c0170   336  blr x16
0xffff914c0174   340  str x0, [jssp, #24]
0xffff914c0178   344  ldr x16, pc+248 (addr 0x0000ffff914c0270)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914c017c   348  blr x16
0xffff914c0180   352  ldr lr, [jssp, #16]
0xffff914c0184   356  ldp xzr, fp, [jssp], #24
0xffff914c0188   360  b #-0x148 (addr 0xffff914c0040)
0xffff914c018c   364  5800075f       constant pool begin (num_const = 58)    ;; constant pool
0xffff914c0190   368  d63f03e0       constant
0xffff914c0194   372  d503201f       constant
0xffff914c0198   376  36406149       constant
0xffff914c019c   380  00000000       constant
0xffff914c01a0   384  49b04519       constant
0xffff914c01a4   388  00000000       constant
0xffff914c01a8   392  49b04241       constant
0xffff914c01ac   396  00000000       constant
0xffff914c01b0   400  49b04241       constant
0xffff914c01b4   404  00000000       constant
0xffff914c01b8   408  49b04241       constant
0xffff914c01bc   412  00000000       constant
0xffff914c01c0   416  49b04241       constant
0xffff914c01c4   420  00000000       constant
0xffff914c01c8   424  49b04241       constant
0xffff914c01cc   428  00000000       constant
0xffff914c01d0   432  49b04241       constant
0xffff914c01d4   436  00000000       constant
0xffff914c01d8   440  49b04241       constant
0xffff914c01dc   444  00000000       constant
0xffff914c01e0   448  49b04241       constant
0xffff914c01e4   452  00000000       constant
0xffff914c01e8   456  49b04241       constant
0xffff914c01ec   460  00000000       constant
0xffff914c01f0   464  49b04241       constant
0xffff914c01f4   468  00000000       constant
0xffff914c01f8   472  49b04241       constant
0xffff914c01fc   476  00000000       constant
0xffff914c0200   480  49b04241       constant
0xffff914c0204   484  00000000       constant
0xffff914c0208   488  49b04241       constant
0xffff914c020c   492  00000000       constant
0xffff914c0210   496  49b04241       constant
0xffff914c0214   500  00000000       constant
0xffff914c0218   504  49b04241       constant
0xffff914c021c   508  00000000       constant
0xffff914c0220   512  49b04241       constant
0xffff914c0224   516  00000000       constant
0xffff914c0228   520  49b04241       constant
0xffff914c022c   524  00000000       constant
0xffff914c0230   528  49b04241       constant
0xffff914c0234   532  00000000       constant
0xffff914c0238   536  49b04241       constant
0xffff914c023c   540  00000000       constant
0xffff914c0240   544  49b04241       constant
0xffff914c0244   548  00000000       constant
0xffff914c0248   552  49b04241       constant
0xffff914c024c   556  00000000       constant
0xffff914c0250   560  49b04241       constant
0xffff914c0254   564  00000000       constant
0xffff914c0258   568  49b04241       constant
0xffff914c025c   572  00000000       constant
0xffff914c0260   576  91406820       constant
0xffff914c0264   580  0000ffff       constant
0xffff914c0268   584  91406260       constant
0xffff914c026c   588  0000ffff       constant
0xffff914c0270   592  914068e0       constant
0xffff914c0274   596  0000ffff       constant


Safepoints (size = 21)
0xffff914c0174   340  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff914c0040  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914c0058  embedded object  (0x49b04519 <the hole>)
0xffff914c0068  embedded object  (0x49b04241 <undefined>)
0xffff914c0070  embedded object  (0x49b04241 <undefined>)
0xffff914c0078  embedded object  (0x49b04241 <undefined>)
0xffff914c0080  embedded object  (0x49b04241 <undefined>)
0xffff914c0088  embedded object  (0x49b04241 <undefined>)
0xffff914c0090  embedded object  (0x49b04241 <undefined>)
0xffff914c0098  embedded object  (0x49b04241 <undefined>)
0xffff914c00a0  embedded object  (0x49b04241 <undefined>)
0xffff914c00a8  embedded object  (0x49b04241 <undefined>)
0xffff914c00b0  embedded object  (0x49b04241 <undefined>)
0xffff914c00b8  embedded object  (0x49b04241 <undefined>)
0xffff914c00c0  embedded object  (0x49b04241 <undefined>)
0xffff914c00c8  embedded object  (0x49b04241 <undefined>)
0xffff914c00d0  embedded object  (0x49b04241 <undefined>)
0xffff914c00d8  embedded object  (0x49b04241 <undefined>)
0xffff914c00e0  embedded object  (0x49b04241 <undefined>)
0xffff914c00e8  embedded object  (0x49b04241 <undefined>)
0xffff914c00f0  embedded object  (0x49b04241 <undefined>)
0xffff914c00f8  embedded object  (0x49b04241 <undefined>)
0xffff914c0100  embedded object  (0x49b04241 <undefined>)
0xffff914c0108  embedded object  (0x49b04241 <undefined>)
0xffff914c0110  embedded object  (0x49b04241 <undefined>)
0xffff914c0118  embedded object  (0x49b04241 <undefined>)
0xffff914c0148  code target (STUB)  (0xffff91406820)
0xffff914c016c  code target (STUB)  (0xffff91406260)
0xffff914c0178  code target (STUB)  (0xffff914068e0)
0xffff914c018c  constant pool (size 236)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 621)
0xffff914c0020     0  movz x2, #0xf2c0
0xffff914c0024     4  movk x2, #0x4117, lsl #16
0xffff914c0028     8  ldp x3, x0, [x2]
0xffff914c002c    12  adds x16, x3, #0xe8 (232)
0xffff914c0030    16  ccmp x16, x0, #nzCv, lo
0xffff914c0034    20  b.hi #+0xf4 (addr 0xffff914c0128)
0xffff914c0038    24  str x16, [x2]
0xffff914c003c    28  orr x3, x3, #0x1
0xffff914c0040    32  ldr x0, pc+344 (addr 0x0000ffff914c0198)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914c0044    36  stur x0, [x3, #-1]
0xffff914c0048    40  movz x0, #0x1b00000000
0xffff914c004c    44  stur x0, [x3, #7]
0xffff914c0050    48  stur x1, [x3, #15]
0xffff914c0054    52  stur cp, [x3, #23]
0xffff914c0058    56  ldr x0, pc+328 (addr 0x0000ffff914c01a0)    ;; object: 0x49b04519 <the hole>
0xffff914c005c    60  stur x0, [x3, #31]
0xffff914c0060    64  ldur x0, [cp, #39]
0xffff914c0064    68  stur x0, [x3, #39]
0xffff914c0068    72  ldr x0, pc+320 (addr 0x0000ffff914c01a8)    ;; object: 0x49b04241 <undefined>
0xffff914c006c    76  stur x0, [x3, #47]
0xffff914c0070    80  ldr x0, pc+320 (addr 0x0000ffff914c01b0)    ;; object: 0x49b04241 <undefined>
0xffff914c0074    84  stur x0, [x3, #55]
0xffff914c0078    88  ldr x0, pc+320 (addr 0x0000ffff914c01b8)    ;; object: 0x49b04241 <undefined>
0xffff914c007c    92  stur x0, [x3, #63]
0xffff914c0080    96  ldr x0, pc+320 (addr 0x0000ffff914c01c0)    ;; object: 0x49b04241 <undefined>
0xffff914c0084   100  stur x0, [x3, #71]
0xffff914c0088   104  ldr x0, pc+320 (addr 0x0000ffff914c01c8)    ;; object: 0x49b04241 <undefined>
0xffff914c008c   108  stur x0, [x3, #79]
0xffff914c0090   112  ldr x0, pc+320 (addr 0x0000ffff914c01d0)    ;; object: 0x49b04241 <undefined>
0xffff914c0094   116  stur x0, [x3, #87]
0xffff914c0098   120  ldr x0, pc+320 (addr 0x0000ffff914c01d8)    ;; object: 0x49b04241 <undefined>
0xffff914c009c   124  stur x0, [x3, #95]
0xffff914c00a0   128  ldr x0, pc+320 (addr 0x0000ffff914c01e0)    ;; object: 0x49b04241 <undefined>
0xffff914c00a4   132  stur x0, [x3, #103]
0xffff914c00a8   136  ldr x0, pc+320 (addr 0x0000ffff914c01e8)    ;; object: 0x49b04241 <undefined>
0xffff914c00ac   140  stur x0, [x3, #111]
0xffff914c00b0   144  ldr x0, pc+320 (addr 0x0000ffff914c01f0)    ;; object: 0x49b04241 <undefined>
0xffff914c00b4   148  stur x0, [x3, #119]
0xffff914c00b8   152  ldr x0, pc+320 (addr 0x0000ffff914c01f8)    ;; object: 0x49b04241 <undefined>
0xffff914c00bc   156  stur x0, [x3, #127]
0xffff914c00c0   160  ldr x0, pc+320 (addr 0x0000ffff914c0200)    ;; object: 0x49b04241 <undefined>
0xffff914c00c4   164  stur x0, [x3, #135]
0xffff914c00c8   168  ldr x0, pc+320 (addr 0x0000ffff914c0208)    ;; object: 0x49b04241 <undefined>
0xffff914c00cc   172  stur x0, [x3, #143]
0xffff914c00d0   176  ldr x0, pc+320 (addr 0x0000ffff914c0210)    ;; object: 0x49b04241 <undefined>
0xffff914c00d4   180  stur x0, [x3, #151]
0xffff914c00d8   184  ldr x0, pc+320 (addr 0x0000ffff914c0218)    ;; object: 0x49b04241 <undefined>
0xffff914c00dc   188  stur x0, [x3, #159]
0xffff914c00e0   192  ldr x0, pc+320 (addr 0x0000ffff914c0220)    ;; object: 0x49b04241 <undefined>
0xffff914c00e4   196  stur x0, [x3, #167]
0xffff914c00e8   200  ldr x0, pc+320 (addr 0x0000ffff914c0228)    ;; object: 0x49b04241 <undefined>
0xffff914c00ec   204  stur x0, [x3, #175]
0xffff914c00f0   208  ldr x0, pc+320 (addr 0x0000ffff914c0230)    ;; object: 0x49b04241 <undefined>
0xffff914c00f4   212  stur x0, [x3, #183]
0xffff914c00f8   216  ldr x0, pc+320 (addr 0x0000ffff914c0238)    ;; object: 0x49b04241 <undefined>
0xffff914c00fc   220  stur x0, [x3, #191]
0xffff914c0100   224  ldr x0, pc+320 (addr 0x0000ffff914c0240)    ;; object: 0x49b04241 <undefined>
0xffff914c0104   228  stur x0, [x3, #199]
0xffff914c0108   232  ldr x0, pc+320 (addr 0x0000ffff914c0248)    ;; object: 0x49b04241 <undefined>
0xffff914c010c   236  stur x0, [x3, #207]
0xffff914c0110   240  ldr x0, pc+320 (addr 0x0000ffff914c0250)    ;; object: 0x49b04241 <undefined>
0xffff914c0114   244  stur x0, [x3, #215]
0xffff914c0118   248  ldr x0, pc+320 (addr 0x0000ffff914c0258)    ;; object: 0x49b04241 <undefined>
0xffff914c011c   252  stur x0, [x3, #223]
0xffff914c0120   256  mov x0, x3
0xffff914c0124   260  ret
0xffff914c0128   264  sub csp, jssp, #0x10 (16)
0xffff914c012c   268  stp fp, lr, [jssp, #-16]!
0xffff914c0130   272  movz fp, #0xa00000000
0xffff914c0134   276  sub csp, jssp, #0x8 (8)
0xffff914c0138   280  str fp, [jssp, #-8]!
0xffff914c013c   284  add fp, jssp, #0x8 (8)
0xffff914c0140   288  movz x3, #0x0
0xffff914c0144   292  mov x16, lr
0xffff914c0148   296  ldr x17, pc+280 (addr 0x0000ffff914c0260)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914c014c   300  blr x17
0xffff914c0150   304  movz x0, #0xe800000000
0xffff914c0154   308  movz x10, #0x0
0xffff914c0158   312  sub csp, jssp, #0x10 (16)
0xffff914c015c   316  stp x10, x0, [jssp, #-16]!
0xffff914c0160   320  movz x0, #0x2
0xffff914c0164   324  movz x1, #0x5b88
0xffff914c0168   328  movk x1, #0xe2, lsl #16
0xffff914c016c   332  ldr x16, pc+252 (addr 0x0000ffff914c0268)    ;; code: STUB, CEntryStub, minor: 5
0xffff914c0170   336  blr x16
0xffff914c0174   340  str x0, [jssp, #24]
0xffff914c0178   344  ldr x16, pc+248 (addr 0x0000ffff914c0270)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914c017c   348  blr x16
0xffff914c0180   352  ldr lr, [jssp, #16]
0xffff914c0184   356  ldp xzr, fp, [jssp], #24
0xffff914c0188   360  b #-0x148 (addr 0xffff914c0040)
0xffff914c018c   364  5800075f       constant pool begin (num_const = 58)    ;; constant pool
0xffff914c0190   368  d63f03e0       constant
0xffff914c0194   372  d503201f       constant
0xffff914c0198   376  36406149       constant
0xffff914c019c   380  00000000       constant
0xffff914c01a0   384  49b04519       constant
0xffff914c01a4   388  00000000       constant
0xffff914c01a8   392  49b04241       constant
0xffff914c01ac   396  00000000       constant
0xffff914c01b0   400  49b04241       constant
0xffff914c01b4   404  00000000       constant
0xffff914c01b8   408  49b04241       constant
0xffff914c01bc   412  00000000       constant
0xffff914c01c0   416  49b04241       constant
0xffff914c01c4   420  00000000       constant
0xffff914c01c8   424  49b04241       constant
0xffff914c01cc   428  00000000       constant
0xffff914c01d0   432  49b04241       constant
0xffff914c01d4   436  00000000       constant
0xffff914c01d8   440  49b04241       constant
0xffff914c01dc   444  00000000       constant
0xffff914c01e0   448  49b04241       constant
0xffff914c01e4   452  00000000       constant
0xffff914c01e8   456  49b04241       constant
0xffff914c01ec   460  00000000       constant
0xffff914c01f0   464  49b04241       constant
0xffff914c01f4   468  00000000       constant
0xffff914c01f8   472  49b04241       constant
0xffff914c01fc   476  00000000       constant
0xffff914c0200   480  49b04241       constant
0xffff914c0204   484  00000000       constant
0xffff914c0208   488  49b04241       constant
0xffff914c020c   492  00000000       constant
0xffff914c0210   496  49b04241       constant
0xffff914c0214   500  00000000       constant
0xffff914c0218   504  49b04241       constant
0xffff914c021c   508  00000000       constant
0xffff914c0220   512  49b04241       constant
0xffff914c0224   516  00000000       constant
0xffff914c0228   520  49b04241       constant
0xffff914c022c   524  00000000       constant
0xffff914c0230   528  49b04241       constant
0xffff914c0234   532  00000000       constant
0xffff914c0238   536  49b04241       constant
0xffff914c023c   540  00000000       constant
0xffff914c0240   544  49b04241       constant
0xffff914c0244   548  00000000       constant
0xffff914c0248   552  49b04241       constant
0xffff914c024c   556  00000000       constant
0xffff914c0250   560  49b04241       constant
0xffff914c0254   564  00000000       constant
0xffff914c0258   568  49b04241       constant
0xffff914c025c   572  00000000       constant
0xffff914c0260   576  91406820       constant
0xffff914c0264   580  0000ffff       constant
0xffff914c0268   584  91406260       constant
0xffff914c026c   588  0000ffff       constant
0xffff914c0270   592  914068e0       constant
0xffff914c0274   596  0000ffff       constant


Safepoints (size = 21)
0xffff914c0174   340  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff914c0040  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914c0058  embedded object  (0x49b04519 <the hole>)
0xffff914c0068  embedded object  (0x49b04241 <undefined>)
0xffff914c0070  embedded object  (0x49b04241 <undefined>)
0xffff914c0078  embedded object  (0x49b04241 <undefined>)
0xffff914c0080  embedded object  (0x49b04241 <undefined>)
0xffff914c0088  embedded object  (0x49b04241 <undefined>)
0xffff914c0090  embedded object  (0x49b04241 <undefined>)
0xffff914c0098  embedded object  (0x49b04241 <undefined>)
0xffff914c00a0  embedded object  (0x49b04241 <undefined>)
0xffff914c00a8  embedded object  (0x49b04241 <undefined>)
0xffff914c00b0  embedded object  (0x49b04241 <undefined>)
0xffff914c00b8  embedded object  (0x49b04241 <undefined>)
0xffff914c00c0  embedded object  (0x49b04241 <undefined>)
0xffff914c00c8  embedded object  (0x49b04241 <undefined>)
0xffff914c00d0  embedded object  (0x49b04241 <undefined>)
0xffff914c00d8  embedded object  (0x49b04241 <undefined>)
0xffff914c00e0  embedded object  (0x49b04241 <undefined>)
0xffff914c00e8  embedded object  (0x49b04241 <undefined>)
0xffff914c00f0  embedded object  (0x49b04241 <undefined>)
0xffff914c00f8  embedded object  (0x49b04241 <undefined>)
0xffff914c0100  embedded object  (0x49b04241 <undefined>)
0xffff914c0108  embedded object  (0x49b04241 <undefined>)
0xffff914c0110  embedded object  (0x49b04241 <undefined>)
0xffff914c0118  embedded object  (0x49b04241 <undefined>)
0xffff914c0148  code target (STUB)  (0xffff91406820)
0xffff914c016c  code target (STUB)  (0xffff91406260)
0xffff914c0178  code target (STUB)  (0xffff914068e0)
0xffff914c018c  constant pool (size 236)


kind = LOAD_IC
major_key = LoadICTrampolineStub
ic_state = GENERIC
extra_ic_state = 0
name = LoadICTrampolineStub
compiler = unknown
Instructions (size = 440)
0xffff914c0300     0  ldur x3, [fp, #-16]
0xffff914c0304     4  ldur x3, [x3, #31]
0xffff914c0308     8  ldur x3, [x3, #87]
0xffff914c030c    12  add x4, x3, x0, asr #29
0xffff914c0310    16  ldur x4, [x4, #15]
0xffff914c0314    20  tbz w1, #0, #+0x170 (addr 0xffff914c0484)
0xffff914c0318    24  ldur x5, [x1, #-1]
0xffff914c031c    28  ldur x6, [x4, #7]
0xffff914c0320    32  cmp x6, x5
0xffff914c0324    36  b.ne #+0x14 (addr 0xffff914c0338)
0xffff914c0328    40  add x4, x3, x0, asr #29
0xffff914c032c    44  ldur x4, [x4, #23]
0xffff914c0330    48  add x4, x4, #0x5f (95)
0xffff914c0334    52  br x4
0xffff914c0338    56  ldur x6, [x4, #-1]
0xffff914c033c    60  ldr x16, [x26, #224]
0xffff914c0340    64  cmp x6, x16
0xffff914c0344    68  b.ne #+0x5c (addr 0xffff914c03a0)
0xffff914c0348    72  ldur x6, [x4, #15]
0xffff914c034c    76  ldur x6, [x6, #7]
0xffff914c0350    80  cmp x5, x6
0xffff914c0354    84  b.ne #+0x10 (addr 0xffff914c0364)
0xffff914c0358    88  ldur x4, [x4, #23]
0xffff914c035c    92  add x4, x4, #0x5f (95)
0xffff914c0360    96  br x4
0xffff914c0364   100  ldur x7, [x4, #7]
0xffff914c0368   104  add x7, x4, x7, asr #29
0xffff914c036c   108  add x7, x7, #0xf (15)
0xffff914c0370   112  add x4, x4, #0x1f (31)
0xffff914c0374   116  ldr x6, [x4]
0xffff914c0378   120  ldur x6, [x6, #7]
0xffff914c037c   124  cmp x5, x6
0xffff914c0380   128  b.ne #+0x10 (addr 0xffff914c0390)
0xffff914c0384   132  ldr x4, [x4, #8]
0xffff914c0388   136  add x4, x4, #0x5f (95)
0xffff914c038c   140  br x4
0xffff914c0390   144  add x4, x4, #0x10 (16)
0xffff914c0394   148  cmp x4, x7
0xffff914c0398   152  b.lt #-0x24 (addr 0xffff914c0374)
0xffff914c039c   156  b #+0xcc (addr 0xffff914c0468)
0xffff914c03a0   160  ldr x16, [x26, #2400]
0xffff914c03a4   164  cmp x4, x16
0xffff914c03a8   168  b.ne #+0xc0 (addr 0xffff914c0468)
0xffff914c03ac   172  tbz w1, #0, #+0xbc (addr 0xffff914c0468)
0xffff914c03b0   176  ldur x4, [x2, #7]
0xffff914c03b4   180  ldur x5, [x1, #-1]
0xffff914c03b8   184  add x4, x4, x5
0xffff914c03bc   188  movz x16, #0x5102
0xffff914c03c0   192  eor x4, x4, x16
0xffff914c03c4   196  ubfx x4, x4, #2, #11
0xffff914c03c8   200  add x7, x4, x4, lsl #1
0xffff914c03cc   204  ldr x5, pc+204 (addr 0x0000ffff914c0498)    ;; external reference (StubCache::primary_->key)
0xffff914c03d0   208  add x5, x5, x7, lsl #3
0xffff914c03d4   212  ldr x6, [x5]
0xffff914c03d8   216  cmp x2, x6
0xffff914c03dc   220  b.ne #+0x34 (addr 0xffff914c0410)
0xffff914c03e0   224  ldr x6, [x5, #16]
0xffff914c03e4   228  ldur x7, [x1, #-1]
0xffff914c03e8   232  cmp x6, x7
0xffff914c03ec   236  b.ne #+0x24 (addr 0xffff914c0410)
0xffff914c03f0   240  ldr x5, [x5, #8]
0xffff914c03f4   244  ldur w6, [x5, #63]
0xffff914c03f8   248  and w6, w6, #0xffffffc7
0xffff914c03fc   252  movz w16, #0x5102
0xffff914c0400   256  cmp w6, w16
0xffff914c0404   260  b.ne #+0xc (addr 0xffff914c0410)
0xffff914c0408   264  add x5, x5, #0x5f (95)
0xffff914c040c   268  br x5
0xffff914c0410   272  sub x4, x4, x2, lsr #2
0xffff914c0414   276  movz x16, #0x1440
0xffff914c0418   280  add x4, x4, x16
0xffff914c041c   284  and x4, x4, #0x1ff
0xffff914c0420   288  add x7, x4, x4, lsl #1
0xffff914c0424   292  ldr x5, pc+124 (addr 0x0000ffff914c04a0)    ;; external reference (StubCache::secondary_->key)
0xffff914c0428   296  add x5, x5, x7, lsl #3
0xffff914c042c   300  ldr x6, [x5]
0xffff914c0430   304  cmp x2, x6
0xffff914c0434   308  b.ne #+0x34 (addr 0xffff914c0468)
0xffff914c0438   312  ldr x6, [x5, #16]
0xffff914c043c   316  ldur x7, [x1, #-1]
0xffff914c0440   320  cmp x6, x7
0xffff914c0444   324  b.ne #+0x24 (addr 0xffff914c0468)
0xffff914c0448   328  ldr x5, [x5, #8]
0xffff914c044c   332  ldur w6, [x5, #63]
0xffff914c0450   336  and w6, w6, #0xffffffc7
0xffff914c0454   340  movz w16, #0x5102
0xffff914c0458   344  cmp w6, w16
0xffff914c045c   348  b.ne #+0xc (addr 0xffff914c0468)
0xffff914c0460   352  add x5, x5, #0x5f (95)
0xffff914c0464   356  br x5
0xffff914c0468   360  sub csp, jssp, #0x20 (32)
0xffff914c046c   364  stp x3, x0, [jssp, #-32]!
0xffff914c0470   368  stp x2, x1, [jssp, #16]
0xffff914c0474   372  movz x0, #0x4
0xffff914c0478   376  ldr x1, pc+48 (addr 0x0000ffff914c04a8)    ;; external reference (Runtime::LoadIC_Miss)
0xffff914c047c   380  ldr x16, pc+52 (addr 0x0000ffff914c04b0)    ;; code: STUB, CEntryStub, minor: 4
0xffff914c0480   384  br x16
0xffff914c0484   388  ldr x5, [x26, #120]
0xffff914c0488   392  b #-0x16c (addr 0xffff914c031c)
0xffff914c048c   396  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff914c0490   400  d63f03e0       constant
0xffff914c0494   404  d503201f       constant
0xffff914c0498   408  41199950       constant
0xffff914c049c   412  00000000       constant
0xffff914c04a0   416  411a5950       constant
0xffff914c04a4   420  00000000       constant
0xffff914c04a8   424  00c86e20       constant
0xffff914c04ac   428  00000000       constant
0xffff914c04b0   432  91406060       constant
0xffff914c04b4   436  0000ffff       constant


RelocInfo (size = 19)
0xffff914c03cc  external reference (StubCache::primary_->key)  (0x41199950)
0xffff914c0424  external reference (StubCache::secondary_->key)  (0x411a5950)
0xffff914c0478  external reference (Runtime::LoadIC_Miss)  (0xc86e20)
0xffff914c047c  code target (STUB)  (0xffff91406060)
0xffff914c048c  constant pool (size 44)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff914c1ac0     0  ldur x0, [x1, #55]
0xffff914c1ac4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff914c1ac0     0  ldur x0, [x1, #55]
0xffff914c1ac4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = super_
compiler = unknown
Instructions (size = 168)
0xffff914c1b40     0  sub csp, jssp, #0x8 (8)
0xffff914c1b44     4  str x3, [jssp, #-8]!
0xffff914c1b48     8  sub csp, jssp, #0x8 (8)
0xffff914c1b4c    12  str x4, [jssp, #-8]!
0xffff914c1b50    16  ldr x3, pc+104 (addr 0x0000ffff914c1bb8)    ;; object: 0x49b5b0f1 Cell for 0
0xffff914c1b54    20  ldur x3, [x3, #7]
0xffff914c1b58    24  cmp x3, #0x0 (0)
0xffff914c1b5c    28  b.ne #+0x3c (addr 0xffff914c1b98)
0xffff914c1b60    32  ldr x5, pc+96 (addr 0x0000ffff914c1bc0)    ;; object: 0x40825349 WeakCell for 0x36430af1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914c1b64    36  ldur x5, [x5, #7]
0xffff914c1b68    40  tbz w5, #0, #+0x30 (addr 0xffff914c1b98)
0xffff914c1b6c    44  ldursw x4, [x5, #15]
0xffff914c1b70    48  tbnz w4, #23, #+0x28 (addr 0xffff914c1b98)
0xffff914c1b74    52  ldur x4, [x5, #47]
0xffff914c1b78    56  ldur x4, [x4, #143]
0xffff914c1b7c    60  cmp x0, x4
0xffff914c1b80    64  b.ne #+0x18 (addr 0xffff914c1b98)
0xffff914c1b84    68  ldr x4, [jssp], #8
0xffff914c1b88    72  ldr x3, [jssp], #8
0xffff914c1b8c    76  ldr x2, pc+60 (addr 0x0000ffff914c1bc8)    ;; object: 0x49bc9f09 <String[6]: super_>
0xffff914c1b90    80  ldr x16, pc+64 (addr 0x0000ffff914c1bd0)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff914c1b94    84  br x16
0xffff914c1b98    88  ldr x2, pc+64 (addr 0x0000ffff914c1bd8)    ;; object: 0x49bc9f09 <String[6]: super_>
0xffff914c1b9c    92  ldr x4, [jssp], #8
0xffff914c1ba0    96  ldr x3, [jssp], #8
0xffff914c1ba4   100  ldr x16, pc+60 (addr 0x0000ffff914c1be0)    ;; code: BUILTIN
0xffff914c1ba8   104  br x16
0xffff914c1bac   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914c1bb0   112  d63f03e0       constant
0xffff914c1bb4   116  d503201f       constant
0xffff914c1bb8   120  49b5b0f1       constant
0xffff914c1bbc   124  00000000       constant
0xffff914c1bc0   128  40825349       constant
0xffff914c1bc4   132  00000000       constant
0xffff914c1bc8   136  49bc9f09       constant
0xffff914c1bcc   140  00000000       constant
0xffff914c1bd0   144  9143cea0       constant
0xffff914c1bd4   148  0000ffff       constant
0xffff914c1bd8   152  49bc9f09       constant
0xffff914c1bdc   156  00000000       constant
0xffff914c1be0   160  91422420       constant
0xffff914c1be4   164  0000ffff       constant


RelocInfo (size = 12)
0xffff914c1b50  embedded object  (0x49b5b0f1 Cell for 0)
0xffff914c1b60  embedded object  (0x40825349 WeakCell for 0x36430af1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914c1b8c  embedded object  (0x49bc9f09 <String[6]: super_>)
0xffff914c1b90  code target (HANDLER)  (0xffff9143cea0)
0xffff914c1b98  embedded object  (0x49bc9f09 <String[6]: super_>)
0xffff914c1ba4  code target (BUILTIN)  (0xffff91422420)
0xffff914c1bac  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff914c1d00     0  sub csp, jssp, #0x8 (8)
0xffff914c1d04     4  str x3, [jssp, #-8]!
0xffff914c1d08     8  sub csp, jssp, #0x8 (8)
0xffff914c1d0c    12  str x4, [jssp, #-8]!
0xffff914c1d10    16  ldr x3, pc+104 (addr 0x0000ffff914c1d78)    ;; object: 0x408255d9 Cell for 0
0xffff914c1d14    20  ldur x3, [x3, #7]
0xffff914c1d18    24  cmp x3, #0x0 (0)
0xffff914c1d1c    28  b.ne #+0x8 (addr 0xffff914c1d24)
0xffff914c1d20    32  b #+0x18 (addr 0xffff914c1d38)
0xffff914c1d24    36  ldr x2, pc+92 (addr 0x0000ffff914c1d80)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff914c1d28    40  ldr x4, [jssp], #8
0xffff914c1d2c    44  ldr x3, [jssp], #8
0xffff914c1d30    48  ldr x16, pc+88 (addr 0x0000ffff914c1d88)    ;; code: BUILTIN
0xffff914c1d34    52  br x16
0xffff914c1d38    56  add jssp, jssp, #0x10 (16)
0xffff914c1d3c    60  ldr x3, pc+84 (addr 0x0000ffff914c1d90)    ;; object: 0x49b404a9 <AccessorInfo>
0xffff914c1d40    64  ldr x4, pc+88 (addr 0x0000ffff914c1d98)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff914c1d44    68  sub csp, jssp, #0x28 (40)
0xffff914c1d48    72  stp x4, x3, [jssp, #-32]!
0xffff914c1d4c    76  stp x1, x1, [jssp, #16]
0xffff914c1d50    80  str x0, [jssp, #-8]!
0xffff914c1d54    84  movz x16, #0x100000000
0xffff914c1d58    88  sub csp, jssp, #0x8 (8)
0xffff914c1d5c    92  str x16, [jssp, #-8]!
0xffff914c1d60    96  movz x0, #0x6
0xffff914c1d64   100  ldr x1, pc+60 (addr 0x0000ffff914c1da0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff914c1d68   104  ldr x16, pc+64 (addr 0x0000ffff914c1da8)    ;; code: STUB, CEntryStub, minor: 4
0xffff914c1d6c   108  br x16
0xffff914c1d70   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff914c1d74   116  d63f03e0       constant
0xffff914c1d78   120  408255d9       constant
0xffff914c1d7c   124  00000000       constant
0xffff914c1d80   128  49b05371       constant
0xffff914c1d84   132  00000000       constant
0xffff914c1d88   136  91422420       constant
0xffff914c1d8c   140  0000ffff       constant
0xffff914c1d90   144  49b404a9       constant
0xffff914c1d94   148  00000000       constant
0xffff914c1d98   152  49b05371       constant
0xffff914c1d9c   156  00000000       constant
0xffff914c1da0   160  00c8b560       constant
0xffff914c1da4   164  00000000       constant
0xffff914c1da8   168  91406060       constant
0xffff914c1dac   172  0000ffff       constant


RelocInfo (size = 14)
0xffff914c1d10  embedded object  (0x408255d9 Cell for 0)
0xffff914c1d24  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff914c1d30  code target (BUILTIN)  (0xffff91422420)
0xffff914c1d3c  embedded object  (0x49b404a9 <AccessorInfo>)
0xffff914c1d40  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff914c1d64  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff914c1d68  code target (STUB)  (0xffff91406060)
0xffff914c1d70  constant pool (size 64)

--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 64
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 136)
0xffff914c1e20     0  tbz w0, #0, #+0x40 (addr 0xffff914c1e60)
0xffff914c1e24     4  ldur x2, [x0, #-1]
0xffff914c1e28     8  ldrb w1, [x2, #11]
0xffff914c1e2c    12  cmp x1, #0x80 (128)
0xffff914c1e30    16  b.eq #+0x10 (addr 0xffff914c1e40)
0xffff914c1e34    20  b #+0x2c (addr 0xffff914c1e60)
0xffff914c1e38    24  ldr x0, pc+24 (addr 0x0000ffff914c1e50)    ;; object: 0x49b042b1 <false>
0xffff914c1e3c    28  ret
0xffff914c1e40    32  ldr x0, pc+24 (addr 0x0000ffff914c1e58)    ;; object: 0x49b04281 <true>
0xffff914c1e44    36  ret
0xffff914c1e48    40  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914c1e4c    44  d63f03e0       constant
0xffff914c1e50    48  49b042b1       constant
0xffff914c1e54    52  00000000       constant
0xffff914c1e58    56  49b04281       constant
0xffff914c1e5c    60  00000000       constant
0xffff914c1e60    64  movz x16, #0x0
0xffff914c1e64    68  sub csp, jssp, #0x10 (16)
0xffff914c1e68    72  stp fp, lr, [jssp, #-16]!
0xffff914c1e6c    76  bl #+0x4 (addr 0xffff914c1e70)
0xffff914c1e70    80  movz x17, #0xa00000000
0xffff914c1e74    84  sub csp, jssp, #0x10 (16)
0xffff914c1e78    88  stp x17, cp, [jssp, #-16]!
0xffff914c1e7c    92  add fp, jssp, #0x10 (16)
0xffff914c1e80    96  ldr x17, pc+24 (addr 0x0000ffff914c1e98)    ;; lazy deoptimization bailout 0
0xffff914c1e84   100  add x17, x17, x16
0xffff914c1e88   104  br x17
0xffff914c1e8c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914c1e90   112  d63f03e0       constant
0xffff914c1e94   116  d503201f       constant
0xffff914c1e98   120  91206000       constant
0xffff914c1e9c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914c1e38  embedded object  (0x49b042b1 <false>)
0xffff914c1e40  embedded object  (0x49b04281 <true>)
0xffff914c1e48  constant pool (size 24)
0xffff914c1e80  runtime entry
0xffff914c1e8c  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 64
type = NORMAL
name = ToBooleanICStub(Symbol)
compiler = crankshaft
Instructions (size = 136)
0xffff914c1e20     0  tbz w0, #0, #+0x40 (addr 0xffff914c1e60)
0xffff914c1e24     4  ldur x2, [x0, #-1]
0xffff914c1e28     8  ldrb w1, [x2, #11]
0xffff914c1e2c    12  cmp x1, #0x80 (128)
0xffff914c1e30    16  b.eq #+0x10 (addr 0xffff914c1e40)
0xffff914c1e34    20  b #+0x2c (addr 0xffff914c1e60)
0xffff914c1e38    24  ldr x0, pc+24 (addr 0x0000ffff914c1e50)    ;; object: 0x49b042b1 <false>
0xffff914c1e3c    28  ret
0xffff914c1e40    32  ldr x0, pc+24 (addr 0x0000ffff914c1e58)    ;; object: 0x49b04281 <true>
0xffff914c1e44    36  ret
0xffff914c1e48    40  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914c1e4c    44  d63f03e0       constant
0xffff914c1e50    48  49b042b1       constant
0xffff914c1e54    52  00000000       constant
0xffff914c1e58    56  49b04281       constant
0xffff914c1e5c    60  00000000       constant
0xffff914c1e60    64  movz x16, #0x0
0xffff914c1e64    68  sub csp, jssp, #0x10 (16)
0xffff914c1e68    72  stp fp, lr, [jssp, #-16]!
0xffff914c1e6c    76  bl #+0x4 (addr 0xffff914c1e70)
0xffff914c1e70    80  movz x17, #0xa00000000
0xffff914c1e74    84  sub csp, jssp, #0x10 (16)
0xffff914c1e78    88  stp x17, cp, [jssp, #-16]!
0xffff914c1e7c    92  add fp, jssp, #0x10 (16)
0xffff914c1e80    96  ldr x17, pc+24 (addr 0x0000ffff914c1e98)    ;; lazy deoptimization bailout 0
0xffff914c1e84   100  add x17, x17, x16
0xffff914c1e88   104  br x17
0xffff914c1e8c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914c1e90   112  d63f03e0       constant
0xffff914c1e94   116  d503201f       constant
0xffff914c1e98   120  91206000       constant
0xffff914c1e9c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914c1e38  embedded object  (0x49b042b1 <false>)
0xffff914c1e40  embedded object  (0x49b04281 <true>)
0xffff914c1e48  constant pool (size 24)
0xffff914c1e80  runtime entry
0xffff914c1e8c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff914c3c80     0  sub csp, jssp, #0x8 (8)
0xffff914c3c84     4  str x3, [jssp, #-8]!
0xffff914c3c88     8  sub csp, jssp, #0x8 (8)
0xffff914c3c8c    12  str x4, [jssp, #-8]!
0xffff914c3c90    16  ldr x3, pc+104 (addr 0x0000ffff914c3cf8)    ;; object: 0x4082e999 Cell for 0
0xffff914c3c94    20  ldur x3, [x3, #7]
0xffff914c3c98    24  cmp x3, #0x0 (0)
0xffff914c3c9c    28  b.ne #+0x8 (addr 0xffff914c3ca4)
0xffff914c3ca0    32  b #+0x18 (addr 0xffff914c3cb8)
0xffff914c3ca4    36  ldr x2, pc+92 (addr 0x0000ffff914c3d00)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff914c3ca8    40  ldr x4, [jssp], #8
0xffff914c3cac    44  ldr x3, [jssp], #8
0xffff914c3cb0    48  ldr x16, pc+88 (addr 0x0000ffff914c3d08)    ;; code: BUILTIN
0xffff914c3cb4    52  br x16
0xffff914c3cb8    56  add jssp, jssp, #0x10 (16)
0xffff914c3cbc    60  ldr x3, pc+84 (addr 0x0000ffff914c3d10)    ;; object: 0x49b404a9 <AccessorInfo>
0xffff914c3cc0    64  ldr x4, pc+88 (addr 0x0000ffff914c3d18)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff914c3cc4    68  sub csp, jssp, #0x28 (40)
0xffff914c3cc8    72  stp x4, x3, [jssp, #-32]!
0xffff914c3ccc    76  stp x1, x1, [jssp, #16]
0xffff914c3cd0    80  str x0, [jssp, #-8]!
0xffff914c3cd4    84  movz x16, #0x100000000
0xffff914c3cd8    88  sub csp, jssp, #0x8 (8)
0xffff914c3cdc    92  str x16, [jssp, #-8]!
0xffff914c3ce0    96  movz x0, #0x6
0xffff914c3ce4   100  ldr x1, pc+60 (addr 0x0000ffff914c3d20)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff914c3ce8   104  ldr x16, pc+64 (addr 0x0000ffff914c3d28)    ;; code: STUB, CEntryStub, minor: 4
0xffff914c3cec   108  br x16
0xffff914c3cf0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff914c3cf4   116  d63f03e0       constant
0xffff914c3cf8   120  4082e999       constant
0xffff914c3cfc   124  00000000       constant
0xffff914c3d00   128  49b05371       constant
0xffff914c3d04   132  00000000       constant
0xffff914c3d08   136  91422420       constant
0xffff914c3d0c   140  0000ffff       constant
0xffff914c3d10   144  49b404a9       constant
0xffff914c3d14   148  00000000       constant
0xffff914c3d18   152  49b05371       constant
0xffff914c3d1c   156  00000000       constant
0xffff914c3d20   160  00c8b560       constant
0xffff914c3d24   164  00000000       constant
0xffff914c3d28   168  91406060       constant
0xffff914c3d2c   172  0000ffff       constant


RelocInfo (size = 14)
0xffff914c3c90  embedded object  (0x4082e999 Cell for 0)
0xffff914c3ca4  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff914c3cb0  code target (BUILTIN)  (0xffff91422420)
0xffff914c3cbc  embedded object  (0x49b404a9 <AccessorInfo>)
0xffff914c3cc0  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff914c3ce4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff914c3ce8  code target (STUB)  (0xffff91406060)
0xffff914c3cf0  constant pool (size 64)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 349)
0xffff914cb800     0  movz x2, #0xf2c0
0xffff914cb804     4  movk x2, #0x4117, lsl #16
0xffff914cb808     8  ldp x3, x0, [x2]
0xffff914cb80c    12  adds x16, x3, #0x60 (96)
0xffff914cb810    16  ccmp x16, x0, #nzCv, lo
0xffff914cb814    20  b.hi #+0x6c (addr 0xffff914cb880)
0xffff914cb818    24  str x16, [x2]
0xffff914cb81c    28  orr x3, x3, #0x1
0xffff914cb820    32  ldr x0, pc+208 (addr 0x0000ffff914cb8f0)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914cb824    36  stur x0, [x3, #-1]
0xffff914cb828    40  movz x0, #0xa00000000
0xffff914cb82c    44  stur x0, [x3, #7]
0xffff914cb830    48  stur x1, [x3, #15]
0xffff914cb834    52  stur cp, [x3, #23]
0xffff914cb838    56  ldr x0, pc+192 (addr 0x0000ffff914cb8f8)    ;; object: 0x49b04519 <the hole>
0xffff914cb83c    60  stur x0, [x3, #31]
0xffff914cb840    64  ldur x0, [cp, #39]
0xffff914cb844    68  stur x0, [x3, #39]
0xffff914cb848    72  ldr x0, pc+184 (addr 0x0000ffff914cb900)    ;; object: 0x49b04241 <undefined>
0xffff914cb84c    76  stur x0, [x3, #47]
0xffff914cb850    80  ldr x0, pc+184 (addr 0x0000ffff914cb908)    ;; object: 0x49b04241 <undefined>
0xffff914cb854    84  stur x0, [x3, #55]
0xffff914cb858    88  ldr x0, pc+184 (addr 0x0000ffff914cb910)    ;; object: 0x49b04241 <undefined>
0xffff914cb85c    92  stur x0, [x3, #63]
0xffff914cb860    96  ldr x0, pc+184 (addr 0x0000ffff914cb918)    ;; object: 0x49b04241 <undefined>
0xffff914cb864   100  stur x0, [x3, #71]
0xffff914cb868   104  ldr x0, pc+184 (addr 0x0000ffff914cb920)    ;; object: 0x49b04241 <undefined>
0xffff914cb86c   108  stur x0, [x3, #79]
0xffff914cb870   112  ldr x0, pc+184 (addr 0x0000ffff914cb928)    ;; object: 0x49b04241 <undefined>
0xffff914cb874   116  stur x0, [x3, #87]
0xffff914cb878   120  mov x0, x3
0xffff914cb87c   124  ret
0xffff914cb880   128  sub csp, jssp, #0x10 (16)
0xffff914cb884   132  stp fp, lr, [jssp, #-16]!
0xffff914cb888   136  movz fp, #0xa00000000
0xffff914cb88c   140  sub csp, jssp, #0x8 (8)
0xffff914cb890   144  str fp, [jssp, #-8]!
0xffff914cb894   148  add fp, jssp, #0x8 (8)
0xffff914cb898   152  movz x3, #0x0
0xffff914cb89c   156  mov x16, lr
0xffff914cb8a0   160  ldr x17, pc+144 (addr 0x0000ffff914cb930)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914cb8a4   164  blr x17
0xffff914cb8a8   168  movz x0, #0x6000000000
0xffff914cb8ac   172  movz x10, #0x0
0xffff914cb8b0   176  sub csp, jssp, #0x10 (16)
0xffff914cb8b4   180  stp x10, x0, [jssp, #-16]!
0xffff914cb8b8   184  movz x0, #0x2
0xffff914cb8bc   188  movz x1, #0x5b88
0xffff914cb8c0   192  movk x1, #0xe2, lsl #16
0xffff914cb8c4   196  ldr x16, pc+116 (addr 0x0000ffff914cb938)    ;; code: STUB, CEntryStub, minor: 5
0xffff914cb8c8   200  blr x16
0xffff914cb8cc   204  str x0, [jssp, #24]
0xffff914cb8d0   208  ldr x16, pc+112 (addr 0x0000ffff914cb940)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914cb8d4   212  blr x16
0xffff914cb8d8   216  ldr lr, [jssp, #16]
0xffff914cb8dc   220  ldp xzr, fp, [jssp], #24
0xffff914cb8e0   224  b #-0xc0 (addr 0xffff914cb820)
0xffff914cb8e4   228  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff914cb8e8   232  d63f03e0       constant
0xffff914cb8ec   236  d503201f       constant
0xffff914cb8f0   240  36406149       constant
0xffff914cb8f4   244  00000000       constant
0xffff914cb8f8   248  49b04519       constant
0xffff914cb8fc   252  00000000       constant
0xffff914cb900   256  49b04241       constant
0xffff914cb904   260  00000000       constant
0xffff914cb908   264  49b04241       constant
0xffff914cb90c   268  00000000       constant
0xffff914cb910   272  49b04241       constant
0xffff914cb914   276  00000000       constant
0xffff914cb918   280  49b04241       constant
0xffff914cb91c   284  00000000       constant
0xffff914cb920   288  49b04241       constant
0xffff914cb924   292  00000000       constant
0xffff914cb928   296  49b04241       constant
0xffff914cb92c   300  00000000       constant
0xffff914cb930   304  91406820       constant
0xffff914cb934   308  0000ffff       constant
0xffff914cb938   312  91406260       constant
0xffff914cb93c   316  0000ffff       constant
0xffff914cb940   320  914068e0       constant
0xffff914cb944   324  0000ffff       constant


Safepoints (size = 21)
0xffff914cb8cc   204  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 17)
0xffff914cb820  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914cb838  embedded object  (0x49b04519 <the hole>)
0xffff914cb848  embedded object  (0x49b04241 <undefined>)
0xffff914cb850  embedded object  (0x49b04241 <undefined>)
0xffff914cb858  embedded object  (0x49b04241 <undefined>)
0xffff914cb860  embedded object  (0x49b04241 <undefined>)
0xffff914cb868  embedded object  (0x49b04241 <undefined>)
0xffff914cb870  embedded object  (0x49b04241 <undefined>)
0xffff914cb8a0  code target (STUB)  (0xffff91406820)
0xffff914cb8c4  code target (STUB)  (0xffff91406260)
0xffff914cb8d0  code target (STUB)  (0xffff914068e0)
0xffff914cb8e4  constant pool (size 100)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 349)
0xffff914cb800     0  movz x2, #0xf2c0
0xffff914cb804     4  movk x2, #0x4117, lsl #16
0xffff914cb808     8  ldp x3, x0, [x2]
0xffff914cb80c    12  adds x16, x3, #0x60 (96)
0xffff914cb810    16  ccmp x16, x0, #nzCv, lo
0xffff914cb814    20  b.hi #+0x6c (addr 0xffff914cb880)
0xffff914cb818    24  str x16, [x2]
0xffff914cb81c    28  orr x3, x3, #0x1
0xffff914cb820    32  ldr x0, pc+208 (addr 0x0000ffff914cb8f0)    ;; object: 0x36406149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914cb824    36  stur x0, [x3, #-1]
0xffff914cb828    40  movz x0, #0xa00000000
0xffff914cb82c    44  stur x0, [x3, #7]
0xffff914cb830    48  stur x1, [x3, #15]
0xffff914cb834    52  stur cp, [x3, #23]
0xffff914cb838    56  ldr x0, pc+192 (addr 0x0000ffff914cb8f8)    ;; object: 0x49b04519 <the hole>
0xffff914cb83c    60  stur x0, [x3, #31]
0xffff914cb840    64  ldur x0, [cp, #39]
0xffff914cb844    68  stur x0, [x3, #39]
0xffff914cb848    72  ldr x0, pc+184 (addr 0x0000ffff914cb900)    ;; object: 0x49b04241 <undefined>
0xffff914cb84c    76  stur x0, [x3, #47]
0xffff914cb850    80  ldr x0, pc+184 (addr 0x0000ffff914cb908)    ;; object: 0x49b04241 <undefined>
0xffff914cb854    84  stur x0, [x3, #55]
0xffff914cb858    88  ldr x0, pc+184 (addr 0x0000ffff914cb910)    ;; object: 0x49b04241 <undefined>
0xffff914cb85c    92  stur x0, [x3, #63]
0xffff914cb860    96  ldr x0, pc+184 (addr 0x0000ffff914cb918)    ;; object: 0x49b04241 <undefined>
0xffff914cb864   100  stur x0, [x3, #71]
0xffff914cb868   104  ldr x0, pc+184 (addr 0x0000ffff914cb920)    ;; object: 0x49b04241 <undefined>
0xffff914cb86c   108  stur x0, [x3, #79]
0xffff914cb870   112  ldr x0, pc+184 (addr 0x0000ffff914cb928)    ;; object: 0x49b04241 <undefined>
0xffff914cb874   116  stur x0, [x3, #87]
0xffff914cb878   120  mov x0, x3
0xffff914cb87c   124  ret
0xffff914cb880   128  sub csp, jssp, #0x10 (16)
0xffff914cb884   132  stp fp, lr, [jssp, #-16]!
0xffff914cb888   136  movz fp, #0xa00000000
0xffff914cb88c   140  sub csp, jssp, #0x8 (8)
0xffff914cb890   144  str fp, [jssp, #-8]!
0xffff914cb894   148  add fp, jssp, #0x8 (8)
0xffff914cb898   152  movz x3, #0x0
0xffff914cb89c   156  mov x16, lr
0xffff914cb8a0   160  ldr x17, pc+144 (addr 0x0000ffff914cb930)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914cb8a4   164  blr x17
0xffff914cb8a8   168  movz x0, #0x6000000000
0xffff914cb8ac   172  movz x10, #0x0
0xffff914cb8b0   176  sub csp, jssp, #0x10 (16)
0xffff914cb8b4   180  stp x10, x0, [jssp, #-16]!
0xffff914cb8b8   184  movz x0, #0x2
0xffff914cb8bc   188  movz x1, #0x5b88
0xffff914cb8c0   192  movk x1, #0xe2, lsl #16
0xffff914cb8c4   196  ldr x16, pc+116 (addr 0x0000ffff914cb938)    ;; code: STUB, CEntryStub, minor: 5
0xffff914cb8c8   200  blr x16
0xffff914cb8cc   204  str x0, [jssp, #24]
0xffff914cb8d0   208  ldr x16, pc+112 (addr 0x0000ffff914cb940)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914cb8d4   212  blr x16
0xffff914cb8d8   216  ldr lr, [jssp, #16]
0xffff914cb8dc   220  ldp xzr, fp, [jssp], #24
0xffff914cb8e0   224  b #-0xc0 (addr 0xffff914cb820)
0xffff914cb8e4   228  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff914cb8e8   232  d63f03e0       constant
0xffff914cb8ec   236  d503201f       constant
0xffff914cb8f0   240  36406149       constant
0xffff914cb8f4   244  00000000       constant
0xffff914cb8f8   248  49b04519       constant
0xffff914cb8fc   252  00000000       constant
0xffff914cb900   256  49b04241       constant
0xffff914cb904   260  00000000       constant
0xffff914cb908   264  49b04241       constant
0xffff914cb90c   268  00000000       constant
0xffff914cb910   272  49b04241       constant
0xffff914cb914   276  00000000       constant
0xffff914cb918   280  49b04241       constant
0xffff914cb91c   284  00000000       constant
0xffff914cb920   288  49b04241       constant
0xffff914cb924   292  00000000       constant
0xffff914cb928   296  49b04241       constant
0xffff914cb92c   300  00000000       constant
0xffff914cb930   304  91406820       constant
0xffff914cb934   308  0000ffff       constant
0xffff914cb938   312  91406260       constant
0xffff914cb93c   316  0000ffff       constant
0xffff914cb940   320  914068e0       constant
0xffff914cb944   324  0000ffff       constant


Safepoints (size = 21)
0xffff914cb8cc   204  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 17)
0xffff914cb820  embedded object  (0x36406149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914cb838  embedded object  (0x49b04519 <the hole>)
0xffff914cb848  embedded object  (0x49b04241 <undefined>)
0xffff914cb850  embedded object  (0x49b04241 <undefined>)
0xffff914cb858  embedded object  (0x49b04241 <undefined>)
0xffff914cb860  embedded object  (0x49b04241 <undefined>)
0xffff914cb868  embedded object  (0x49b04241 <undefined>)
0xffff914cb870  embedded object  (0x49b04241 <undefined>)
0xffff914cb8a0  code target (STUB)  (0xffff91406820)
0xffff914cb8c4  code target (STUB)  (0xffff91406260)
0xffff914cb8d0  code target (STUB)  (0xffff914068e0)
0xffff914cb8e4  constant pool (size 100)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 192)
0xffff914cfa60     0  ldur x4, [x1, #15]
0xffff914cfa64     4  ldur w5, [x1, #27]
0xffff914cfa68     8  tbnz w2, #0, #+0x2c (addr 0xffff914cfa94)
0xffff914cfa6c    12  asr x7, x2, #32
0xffff914cfa70    16  cmp w7, w5
0xffff914cfa74    20  b.hs #+0x48 (addr 0xffff914cfabc)
0xffff914cfa78    24  add x5, x4, #0xf (15)
0xffff914cfa7c    28  ldr x6, [x5, w7, sxtw #3]
0xffff914cfa80    32  ldr x16, [x26, #88]
0xffff914cfa84    36  cmp x6, x16
0xffff914cfa88    40  b.eq #+0x44 (addr 0xffff914cfacc)
0xffff914cfa8c    44  mov x0, x6
0xffff914cfa90    48  ret
0xffff914cfa94    52  ldur x16, [x2, #-1]
0xffff914cfa98    56  ldr x17, [x26, #120]
0xffff914cfa9c    60  cmp x16, x17
0xffff914cfaa0    64  b.ne #+0x3c (addr 0xffff914cfadc)
0xffff914cfaa4    68  ldur d29, [x2, #7]
0xffff914cfaa8    72  fcvtzs w7, d29
0xffff914cfaac    76  scvtf d0, w7
0xffff914cfab0    80  fcmp d29, d0
0xffff914cfab4    84  b.ne #+0x28 (addr 0xffff914cfadc)
0xffff914cfab8    88  b #-0x48 (addr 0xffff914cfa70)
0xffff914cfabc    92  movz x16, #0x0
0xffff914cfac0    96  sub csp, jssp, #0x10 (16)
0xffff914cfac4   100  stp fp, lr, [jssp, #-16]!
0xffff914cfac8   104  bl #+0x24 (addr 0xffff914cfaec)
0xffff914cfacc   108  movz x16, #0x8
0xffff914cfad0   112  sub csp, jssp, #0x10 (16)
0xffff914cfad4   116  stp fp, lr, [jssp, #-16]!
0xffff914cfad8   120  bl #+0x14 (addr 0xffff914cfaec)
0xffff914cfadc   124  movz x16, #0x10
0xffff914cfae0   128  sub csp, jssp, #0x10 (16)
0xffff914cfae4   132  stp fp, lr, [jssp, #-16]!
0xffff914cfae8   136  bl #+0x4 (addr 0xffff914cfaec)
0xffff914cfaec   140  movz x17, #0xa00000000
0xffff914cfaf0   144  sub csp, jssp, #0x10 (16)
0xffff914cfaf4   148  stp x17, cp, [jssp, #-16]!
0xffff914cfaf8   152  add fp, jssp, #0x10 (16)
0xffff914cfafc   156  ldr x17, pc+20 (addr 0x0000ffff914cfb10)    ;; lazy deoptimization bailout 0
0xffff914cfb00   160  add x17, x17, x16
0xffff914cfb04   164  br x17
0xffff914cfb08   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914cfb0c   172  d63f03e0       constant
0xffff914cfb10   176  91206000       constant
0xffff914cfb14   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914cfafc  runtime entry
0xffff914cfb08  constant pool (size 16)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 192)
0xffff914cfa60     0  ldur x4, [x1, #15]
0xffff914cfa64     4  ldur w5, [x1, #27]
0xffff914cfa68     8  tbnz w2, #0, #+0x2c (addr 0xffff914cfa94)
0xffff914cfa6c    12  asr x7, x2, #32
0xffff914cfa70    16  cmp w7, w5
0xffff914cfa74    20  b.hs #+0x48 (addr 0xffff914cfabc)
0xffff914cfa78    24  add x5, x4, #0xf (15)
0xffff914cfa7c    28  ldr x6, [x5, w7, sxtw #3]
0xffff914cfa80    32  ldr x16, [x26, #88]
0xffff914cfa84    36  cmp x6, x16
0xffff914cfa88    40  b.eq #+0x44 (addr 0xffff914cfacc)
0xffff914cfa8c    44  mov x0, x6
0xffff914cfa90    48  ret
0xffff914cfa94    52  ldur x16, [x2, #-1]
0xffff914cfa98    56  ldr x17, [x26, #120]
0xffff914cfa9c    60  cmp x16, x17
0xffff914cfaa0    64  b.ne #+0x3c (addr 0xffff914cfadc)
0xffff914cfaa4    68  ldur d29, [x2, #7]
0xffff914cfaa8    72  fcvtzs w7, d29
0xffff914cfaac    76  scvtf d0, w7
0xffff914cfab0    80  fcmp d29, d0
0xffff914cfab4    84  b.ne #+0x28 (addr 0xffff914cfadc)
0xffff914cfab8    88  b #-0x48 (addr 0xffff914cfa70)
0xffff914cfabc    92  movz x16, #0x0
0xffff914cfac0    96  sub csp, jssp, #0x10 (16)
0xffff914cfac4   100  stp fp, lr, [jssp, #-16]!
0xffff914cfac8   104  bl #+0x24 (addr 0xffff914cfaec)
0xffff914cfacc   108  movz x16, #0x8
0xffff914cfad0   112  sub csp, jssp, #0x10 (16)
0xffff914cfad4   116  stp fp, lr, [jssp, #-16]!
0xffff914cfad8   120  bl #+0x14 (addr 0xffff914cfaec)
0xffff914cfadc   124  movz x16, #0x10
0xffff914cfae0   128  sub csp, jssp, #0x10 (16)
0xffff914cfae4   132  stp fp, lr, [jssp, #-16]!
0xffff914cfae8   136  bl #+0x4 (addr 0xffff914cfaec)
0xffff914cfaec   140  movz x17, #0xa00000000
0xffff914cfaf0   144  sub csp, jssp, #0x10 (16)
0xffff914cfaf4   148  stp x17, cp, [jssp, #-16]!
0xffff914cfaf8   152  add fp, jssp, #0x10 (16)
0xffff914cfafc   156  ldr x17, pc+20 (addr 0x0000ffff914cfb10)    ;; lazy deoptimization bailout 0
0xffff914cfb00   160  add x17, x17, x16
0xffff914cfb04   164  br x17
0xffff914cfb08   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914cfb0c   172  d63f03e0       constant
0xffff914cfb10   176  91206000       constant
0xffff914cfb14   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914cfafc  runtime entry
0xffff914cfb08  constant pool (size 16)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*STRING -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff914d0200     0  orr x16, x1, x0
0xffff914d0204     4  tbnz w16, #0, #+0x10 (addr 0xffff914d0214)
0xffff914d0208     8  asr x1, x1, #32
0xffff914d020c    12  sub x0, x1, x0, asr #32
0xffff914d0210    16  ret
0xffff914d0214    20  cmp x0, x1
0xffff914d0218    24  b.ne #+0x30 (addr 0xffff914d0248)
0xffff914d021c    28  ldur x16, [x0, #-1]
0xffff914d0220    32  ldr x17, [x26, #120]
0xffff914d0224    36  cmp x16, x17
0xffff914d0228    40  b.eq #+0xc (addr 0xffff914d0234)
0xffff914d022c    44  movz x0, #0x0
0xffff914d0230    48  ret
0xffff914d0234    52  ldur d0, [x0, #7]
0xffff914d0238    56  fcmp d0, d0
0xffff914d023c    60  b.vc #-0x10 (addr 0xffff914d022c)
0xffff914d0240    64  movn x0, #0x0
0xffff914d0244    68  ret
0xffff914d0248    72  and x16, x1, x0
0xffff914d024c    76  tbnz w16, #0, #+0x64 (addr 0xffff914d02b0)
0xffff914d0250    80  tbz w0, #0, #+0x24 (addr 0xffff914d0274)
0xffff914d0254    84  ldur x16, [x0, #-1]
0xffff914d0258    88  ldr x17, [x26, #120]
0xffff914d025c    92  cmp x16, x17
0xffff914d0260    96  b.eq #+0x8 (addr 0xffff914d0268)
0xffff914d0264   100  ret
0xffff914d0268   104  ldur d0, [x0, #7]
0xffff914d026c   108  scvtf d1, x1, #32
0xffff914d0270   112  b #+0x24 (addr 0xffff914d0294)
0xffff914d0274   116  ldur x16, [x1, #-1]
0xffff914d0278   120  ldr x17, [x26, #120]
0xffff914d027c   124  cmp x16, x17
0xffff914d0280   128  b.eq #+0xc (addr 0xffff914d028c)
0xffff914d0284   132  movz x0, #0x1
0xffff914d0288   136  ret
0xffff914d028c   140  ldur d1, [x1, #7]
0xffff914d0290   144  scvtf d0, x0, #32
0xffff914d0294   148  fcmp d1, d0
0xffff914d0298   152  b.vs #+0x10 (addr 0xffff914d02a8)
0xffff914d029c   156  cset x0, gt
0xffff914d02a0   160  csinv x0, x0, xzr, ge
0xffff914d02a4   164  ret
0xffff914d02a8   168  movn x0, #0x0
0xffff914d02ac   172  ret
0xffff914d02b0   176  ldur x10, [x0, #-1]
0xffff914d02b4   180  ldur x12, [x1, #-1]
0xffff914d02b8   184  ldrb w11, [x10, #11]
0xffff914d02bc   188  ldrb w13, [x12, #11]
0xffff914d02c0   192  cmp x11, #0xb1 (177)
0xffff914d02c4   196  b.lt #+0x8 (addr 0xffff914d02cc)
0xffff914d02c8   200  ret
0xffff914d02cc   204  cmp x11, #0x83 (131)
0xffff914d02d0   208  movz x16, #0x83
0xffff914d02d4   212  ccmp x13, x16, #nZcv, ne
0xffff914d02d8   216  movz x16, #0xb1
0xffff914d02dc   220  ccmp x13, x16, #NzcV, ne
0xffff914d02e0   224  b.ge #-0x18 (addr 0xffff914d02c8)
0xffff914d02e4   228  orr x14, x13, x11
0xffff914d02e8   232  tst x14, #0xc0
0xffff914d02ec   236  b.eq #-0x24 (addr 0xffff914d02c8)
0xffff914d02f0   240  cmp x11, #0x81 (129)
0xffff914d02f4   244  b.ne #+0x18 (addr 0xffff914d030c)
0xffff914d02f8   248  cmp x12, x10
0xffff914d02fc   252  b.ne #+0x10 (addr 0xffff914d030c)
0xffff914d0300   256  ldur d1, [x1, #7]
0xffff914d0304   260  ldur d0, [x0, #7]
0xffff914d0308   264  b #-0x74 (addr 0xffff914d0294)
0xffff914d030c   268  movz x16, #0x87
0xffff914d0310   272  and x14, x13, x16
0xffff914d0314   276  movz x16, #0x87
0xffff914d0318   280  and x15, x11, x16
0xffff914d031c   284  cmp x14, #0x4 (4)
0xffff914d0320   288  ccmp x15, #4, #nzcv, eq
0xffff914d0324   292  b.ne #+0x5c (addr 0xffff914d0380)
0xffff914d0328   296  ldur x10, [x1, #15]
0xffff914d032c   300  ldur x11, [x0, #15]
0xffff914d0330   304  cmp x10, x11
0xffff914d0334   308  b.eq #+0xc (addr 0xffff914d0340)
0xffff914d0338   312  movz x0, #0x100000000
0xffff914d033c   316  ret
0xffff914d0340   320  cbnz x10, #+0xc (addr 0xffff914d034c)
0xffff914d0344   324  movz x0, #0x0
0xffff914d0348   328  ret
0xffff914d034c   332  asr x10, x10, #32
0xffff914d0350   336  add x11, x10, #0x17 (23)
0xffff914d0354   340  add x1, x1, x11
0xffff914d0358   344  add x0, x0, x11
0xffff914d035c   348  neg x10, x10
0xffff914d0360   352  ldrb w11, [x1, x10]
0xffff914d0364   356  ldrb w12, [x0, x10]
0xffff914d0368   360  cmp x11, x12
0xffff914d036c   364  b.ne #-0x34 (addr 0xffff914d0338)
0xffff914d0370   368  add x10, x10, #0x1 (1)
0xffff914d0374   372  cbnz x10, #-0x14 (addr 0xffff914d0360)
0xffff914d0378   376  movz x0, #0x0
0xffff914d037c   380  ret
0xffff914d0380   384  movz x16, #0xc00000000
0xffff914d0384   388  sub csp, jssp, #0x10 (16)
0xffff914d0388   392  stp fp, lr, [jssp, #-16]!
0xffff914d038c   396  sub csp, jssp, #0x10 (16)
0xffff914d0390   400  str x16, [jssp, #-8]!
0xffff914d0394   404  ldr x17, pc+172 (addr 0x0000ffff914d0440)    ;; object: 0xffff914d01a1 <Code: COMPARE_IC>
0xffff914d0398   408  sub csp, jssp, #0x10 (16)
0xffff914d039c   412  str x17, [jssp, #-8]!
0xffff914d03a0   416  add fp, jssp, #0x10 (16)
0xffff914d03a4   420  sub csp, jssp, #0x10 (16)
0xffff914d03a8   424  stp x0, x1, [jssp, #-16]!
0xffff914d03ac   428  movz x0, #0x2
0xffff914d03b0   432  ldr x1, pc+152 (addr 0x0000ffff914d0448)    ;; external reference (Runtime::StrictEqual)
0xffff914d03b4   436  ldr x16, pc+156 (addr 0x0000ffff914d0450)    ;; code: STUB, CEntryStub, minor: 4
0xffff914d03b8   440  blr x16
0xffff914d03bc   444  mov jssp, fp
0xffff914d03c0   448  ldp fp, lr, [jssp], #16
0xffff914d03c4   452  ldr x1, [x26, #64]
0xffff914d03c8   456  sub x0, x0, x1
0xffff914d03cc   460  ret
0xffff914d03d0   464  movz x16, #0xc00000000
0xffff914d03d4   468  sub csp, jssp, #0x10 (16)
0xffff914d03d8   472  stp fp, lr, [jssp, #-16]!
0xffff914d03dc   476  sub csp, jssp, #0x10 (16)
0xffff914d03e0   480  str x16, [jssp, #-8]!
0xffff914d03e4   484  ldr x17, pc+116 (addr 0x0000ffff914d0458)    ;; object: 0xffff914d01a1 <Code: COMPARE_IC>
0xffff914d03e8   488  sub csp, jssp, #0x10 (16)
0xffff914d03ec   492  str x17, [jssp, #-8]!
0xffff914d03f0   496  add fp, jssp, #0x10 (16)
0xffff914d03f4   500  sub csp, jssp, #0x18 (24)
0xffff914d03f8   504  stp lr, x0, [jssp, #-24]!
0xffff914d03fc   508  str x1, [jssp, #16]
0xffff914d0400   512  movz x10, #0x2f00000000
0xffff914d0404   516  sub csp, jssp, #0x18 (24)
0xffff914d0408   520  stp x10, x0, [jssp, #-24]!
0xffff914d040c   524  str x1, [jssp, #16]
0xffff914d0410   528  movz x0, #0x3
0xffff914d0414   532  ldr x1, pc+76 (addr 0x0000ffff914d0460)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914d0418   536  ldr x16, pc+80 (addr 0x0000ffff914d0468)    ;; code: STUB, CEntryStub, minor: 4
0xffff914d041c   540  blr x16
0xffff914d0420   544  add x11, x0, #0x5f (95)
0xffff914d0424   548  ldr x1, [jssp, #16]
0xffff914d0428   552  ldp lr, x0, [jssp], #24
0xffff914d042c   556  mov jssp, fp
0xffff914d0430   560  ldp fp, lr, [jssp], #16
0xffff914d0434   564  br x11
0xffff914d0438   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914d043c   572  d63f03e0       constant
0xffff914d0440   576  914d01a1       constant
0xffff914d0444   580  0000ffff       constant
0xffff914d0448   584  00e50928       constant
0xffff914d044c   588  00000000       constant
0xffff914d0450   592  91406060       constant
0xffff914d0454   596  0000ffff       constant
0xffff914d0458   600  914d01a1       constant
0xffff914d045c   604  0000ffff       constant
0xffff914d0460   608  00c8a980       constant
0xffff914d0464   612  00000000       constant
0xffff914d0468   616  91406060       constant
0xffff914d046c   620  0000ffff       constant


RelocInfo (size = 16)
0xffff914d0394  embedded object  (0xffff914d01a1 <Code: COMPARE_IC>)
0xffff914d03b0  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff914d03b4  code target (STUB)  (0xffff91406060)
0xffff914d03e4  embedded object  (0xffff914d01a1 <Code: COMPARE_IC>)
0xffff914d0414  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914d0418  code target (STUB)  (0xffff91406060)
0xffff914d0438  constant pool (size 56)


kind = HANDLER
major_key = <NoCache>Stub
name = indexOf
compiler = unknown
Instructions (size = 152)
0xffff914d0820     0  sub csp, jssp, #0x8 (8)
0xffff914d0824     4  str x3, [jssp, #-8]!
0xffff914d0828     8  sub csp, jssp, #0x8 (8)
0xffff914d082c    12  str x0, [jssp, #-8]!
0xffff914d0830    16  ldur x3, [cp, #39]
0xffff914d0834    20  movz x16, #0x2e7
0xffff914d0838    24  ldr x3, [x3, x16]
0xffff914d083c    28  ldur x3, [x3, #23]
0xffff914d0840    32  ldur x3, [x3, #23]
0xffff914d0844    36  ldr x0, pc+84 (addr 0x0000ffff914d0898)    ;; object: 0x49b63e59 Cell for 0
0xffff914d0848    40  ldur x0, [x0, #7]
0xffff914d084c    44  cmp x0, #0x0 (0)
0xffff914d0850    48  b.ne #+0x1c (addr 0xffff914d086c)
0xffff914d0854    52  ldur x0, [x3, #-1]
0xffff914d0858    56  ldr x4, pc+72 (addr 0x0000ffff914d08a0)    ;; object: 0x40806e39 WeakCell for 0x364156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff914d085c    60  ldur x4, [x4, #7]
0xffff914d0860    64  cmp x0, x4
0xffff914d0864    68  b.ne #+0x8 (addr 0xffff914d086c)
0xffff914d0868    72  b #+0x14 (addr 0xffff914d087c)
0xffff914d086c    76  ldr x0, [jssp], #8
0xffff914d0870    80  ldr x3, [jssp], #8
0xffff914d0874    84  ldr x16, pc+52 (addr 0x0000ffff914d08a8)    ;; code: BUILTIN
0xffff914d0878    88  br x16
0xffff914d087c    92  add jssp, jssp, #0x10 (16)
0xffff914d0880    96  mov x1, x3
0xffff914d0884   100  ldr x16, pc+44 (addr 0x0000ffff914d08b0)    ;; code: HANDLER, LoadConstantStub, minor: 10
0xffff914d0888   104  br x16
0xffff914d088c   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff914d0890   112  d63f03e0       constant
0xffff914d0894   116  d503201f       constant
0xffff914d0898   120  49b63e59       constant
0xffff914d089c   124  00000000       constant
0xffff914d08a0   128  40806e39       constant
0xffff914d08a4   132  00000000       constant
0xffff914d08a8   136  914222e0       constant
0xffff914d08ac   140  0000ffff       constant
0xffff914d08b0   144  9148c760       constant
0xffff914d08b4   148  0000ffff       constant


RelocInfo (size = 10)
0xffff914d0844  embedded object  (0x49b63e59 Cell for 0)
0xffff914d0858  embedded object  (0x40806e39 WeakCell for 0x364156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff914d0874  code target (BUILTIN)  (0xffff914222e0)
0xffff914d0884  code target (HANDLER)  (0xffff9148c760)
0xffff914d088c  constant pool (size 44)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 413)
0xffff914d12e0     0  ldur x4, [x1, #15]
0xffff914d12e4     4  ldur w5, [x4, #11]
0xffff914d12e8     8  ldur x16, [x1, #23]
0xffff914d12ec    12  ldur x16, [x16, #39]
0xffff914d12f0    16  tst x16, #0x8
0xffff914d12f4    20  b.ne #+0x11c (addr 0xffff914d1410)
0xffff914d12f8    24  ldur x6, [x4, #23]
0xffff914d12fc    28  ldur x4, [x4, #15]
0xffff914d1300    32  add x4, x6, x4
0xffff914d1304    36  tbnz w2, #0, #+0x48 (addr 0xffff914d134c)
0xffff914d1308    40  asr x7, x2, #32
0xffff914d130c    44  cmp w7, w5
0xffff914d1310    48  b.hs #+0x110 (addr 0xffff914d1420)
0xffff914d1314    52  ldr d0, [x4, w7, sxtw #3]
0xffff914d1318    56  movz x1, #0xf2c0
0xffff914d131c    60  movk x1, #0x4117, lsl #16
0xffff914d1320    64  ldp x2, x0, [x1]
0xffff914d1324    68  adds x16, x2, #0x10 (16)
0xffff914d1328    72  ccmp x16, x0, #nzCv, lo
0xffff914d132c    76  b.hi #+0x68 (addr 0xffff914d1394)
0xffff914d1330    80  str x16, [x1]
0xffff914d1334    84  ldr x1, [x26, #120]
0xffff914d1338    88  str x1, [x2]
0xffff914d133c    92  orr x2, x2, #0x1
0xffff914d1340    96  stur d0, [x2, #7]
0xffff914d1344   100  mov x0, x2
0xffff914d1348   104  ret
0xffff914d134c   108  sub csp, jssp, #0x10 (16)
0xffff914d1350   112  stp fp, lr, [jssp, #-16]!
0xffff914d1354   116  movz fp, #0xa00000000
0xffff914d1358   120  sub csp, jssp, #0x8 (8)
0xffff914d135c   124  str fp, [jssp, #-8]!
0xffff914d1360   128  add fp, jssp, #0x8 (8)
0xffff914d1364   132  ldur x16, [x2, #-1]
0xffff914d1368   136  ldr x17, [x26, #120]
0xffff914d136c   140  cmp x16, x17
0xffff914d1370   144  b.ne #+0xc0 (addr 0xffff914d1430)
0xffff914d1374   148  ldur d29, [x2, #7]
0xffff914d1378   152  fcvtzs w7, d29
0xffff914d137c   156  scvtf d0, w7
0xffff914d1380   160  fcmp d29, d0
0xffff914d1384   164  b.ne #+0xac (addr 0xffff914d1430)
0xffff914d1388   168  ldr lr, [jssp, #16]
0xffff914d138c   172  ldp xzr, fp, [jssp], #24
0xffff914d1390   176  b #-0x84 (addr 0xffff914d130c)
0xffff914d1394   180  sub csp, jssp, #0x10 (16)
0xffff914d1398   184  stp fp, lr, [jssp, #-16]!
0xffff914d139c   188  movz fp, #0xa00000000
0xffff914d13a0   192  sub csp, jssp, #0x8 (8)
0xffff914d13a4   196  str fp, [jssp, #-8]!
0xffff914d13a8   200  add fp, jssp, #0x8 (8)
0xffff914d13ac   204  movz x2, #0x0
0xffff914d13b0   208  mov x16, lr
0xffff914d13b4   212  ldr x17, pc+68 (addr 0x0000ffff914d13f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914d13b8   216  blr x17
0xffff914d13bc   220  ldur cp, [fp, #-8]
0xffff914d13c0   224  movz x0, #0x0
0xffff914d13c4   228  movz x1, #0x4b48
0xffff914d13c8   232  movk x1, #0xe4, lsl #16
0xffff914d13cc   236  ldr x16, pc+52 (addr 0x0000ffff914d1400)    ;; code: STUB, CEntryStub, minor: 5
0xffff914d13d0   240  blr x16
0xffff914d13d4   244  str x0, [jssp, #16]
0xffff914d13d8   248  ldr x16, pc+48 (addr 0x0000ffff914d1408)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914d13dc   252  blr x16
0xffff914d13e0   256  ldr lr, [jssp, #16]
0xffff914d13e4   260  ldp xzr, fp, [jssp], #24
0xffff914d13e8   264  b #-0xa8 (addr 0xffff914d1340)
0xffff914d13ec   268  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff914d13f0   272  d63f03e0       constant
0xffff914d13f4   276  d503201f       constant
0xffff914d13f8   280  91406820       constant
0xffff914d13fc   284  0000ffff       constant
0xffff914d1400   288  91406260       constant
0xffff914d1404   292  0000ffff       constant
0xffff914d1408   296  914068e0       constant
0xffff914d140c   300  0000ffff       constant
0xffff914d1410   304  movz x16, #0x0
0xffff914d1414   308  sub csp, jssp, #0x10 (16)
0xffff914d1418   312  stp fp, lr, [jssp, #-16]!
0xffff914d141c   316  bl #+0x1c (addr 0xffff914d1438)
0xffff914d1420   320  movz x16, #0x8
0xffff914d1424   324  sub csp, jssp, #0x10 (16)
0xffff914d1428   328  stp fp, lr, [jssp, #-16]!
0xffff914d142c   332  bl #+0xc (addr 0xffff914d1438)
0xffff914d1430   336  movz x16, #0x10
0xffff914d1434   340  bl #+0x14 (addr 0xffff914d1448)
0xffff914d1438   344  movz x17, #0xa00000000
0xffff914d143c   348  sub csp, jssp, #0x10 (16)
0xffff914d1440   352  stp x17, cp, [jssp, #-16]!
0xffff914d1444   356  add fp, jssp, #0x10 (16)
0xffff914d1448   360  ldr x17, pc+24 (addr 0x0000ffff914d1460)    ;; lazy deoptimization bailout 0
0xffff914d144c   364  add x17, x17, x16
0xffff914d1450   368  br x17
0xffff914d1454   372  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d1458   376  d63f03e0       constant
0xffff914d145c   380  d503201f       constant
0xffff914d1460   384  91206000       constant
0xffff914d1464   388  0000ffff       constant


Safepoints (size = 21)
0xffff914d13d4   244  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff914d13b4  code target (STUB)  (0xffff91406820)
0xffff914d13cc  code target (STUB)  (0xffff91406260)
0xffff914d13d8  code target (STUB)  (0xffff914068e0)
0xffff914d13ec  constant pool (size 36)
0xffff914d1448  runtime entry
0xffff914d1454  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 413)
0xffff914d12e0     0  ldur x4, [x1, #15]
0xffff914d12e4     4  ldur w5, [x4, #11]
0xffff914d12e8     8  ldur x16, [x1, #23]
0xffff914d12ec    12  ldur x16, [x16, #39]
0xffff914d12f0    16  tst x16, #0x8
0xffff914d12f4    20  b.ne #+0x11c (addr 0xffff914d1410)
0xffff914d12f8    24  ldur x6, [x4, #23]
0xffff914d12fc    28  ldur x4, [x4, #15]
0xffff914d1300    32  add x4, x6, x4
0xffff914d1304    36  tbnz w2, #0, #+0x48 (addr 0xffff914d134c)
0xffff914d1308    40  asr x7, x2, #32
0xffff914d130c    44  cmp w7, w5
0xffff914d1310    48  b.hs #+0x110 (addr 0xffff914d1420)
0xffff914d1314    52  ldr d0, [x4, w7, sxtw #3]
0xffff914d1318    56  movz x1, #0xf2c0
0xffff914d131c    60  movk x1, #0x4117, lsl #16
0xffff914d1320    64  ldp x2, x0, [x1]
0xffff914d1324    68  adds x16, x2, #0x10 (16)
0xffff914d1328    72  ccmp x16, x0, #nzCv, lo
0xffff914d132c    76  b.hi #+0x68 (addr 0xffff914d1394)
0xffff914d1330    80  str x16, [x1]
0xffff914d1334    84  ldr x1, [x26, #120]
0xffff914d1338    88  str x1, [x2]
0xffff914d133c    92  orr x2, x2, #0x1
0xffff914d1340    96  stur d0, [x2, #7]
0xffff914d1344   100  mov x0, x2
0xffff914d1348   104  ret
0xffff914d134c   108  sub csp, jssp, #0x10 (16)
0xffff914d1350   112  stp fp, lr, [jssp, #-16]!
0xffff914d1354   116  movz fp, #0xa00000000
0xffff914d1358   120  sub csp, jssp, #0x8 (8)
0xffff914d135c   124  str fp, [jssp, #-8]!
0xffff914d1360   128  add fp, jssp, #0x8 (8)
0xffff914d1364   132  ldur x16, [x2, #-1]
0xffff914d1368   136  ldr x17, [x26, #120]
0xffff914d136c   140  cmp x16, x17
0xffff914d1370   144  b.ne #+0xc0 (addr 0xffff914d1430)
0xffff914d1374   148  ldur d29, [x2, #7]
0xffff914d1378   152  fcvtzs w7, d29
0xffff914d137c   156  scvtf d0, w7
0xffff914d1380   160  fcmp d29, d0
0xffff914d1384   164  b.ne #+0xac (addr 0xffff914d1430)
0xffff914d1388   168  ldr lr, [jssp, #16]
0xffff914d138c   172  ldp xzr, fp, [jssp], #24
0xffff914d1390   176  b #-0x84 (addr 0xffff914d130c)
0xffff914d1394   180  sub csp, jssp, #0x10 (16)
0xffff914d1398   184  stp fp, lr, [jssp, #-16]!
0xffff914d139c   188  movz fp, #0xa00000000
0xffff914d13a0   192  sub csp, jssp, #0x8 (8)
0xffff914d13a4   196  str fp, [jssp, #-8]!
0xffff914d13a8   200  add fp, jssp, #0x8 (8)
0xffff914d13ac   204  movz x2, #0x0
0xffff914d13b0   208  mov x16, lr
0xffff914d13b4   212  ldr x17, pc+68 (addr 0x0000ffff914d13f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914d13b8   216  blr x17
0xffff914d13bc   220  ldur cp, [fp, #-8]
0xffff914d13c0   224  movz x0, #0x0
0xffff914d13c4   228  movz x1, #0x4b48
0xffff914d13c8   232  movk x1, #0xe4, lsl #16
0xffff914d13cc   236  ldr x16, pc+52 (addr 0x0000ffff914d1400)    ;; code: STUB, CEntryStub, minor: 5
0xffff914d13d0   240  blr x16
0xffff914d13d4   244  str x0, [jssp, #16]
0xffff914d13d8   248  ldr x16, pc+48 (addr 0x0000ffff914d1408)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914d13dc   252  blr x16
0xffff914d13e0   256  ldr lr, [jssp, #16]
0xffff914d13e4   260  ldp xzr, fp, [jssp], #24
0xffff914d13e8   264  b #-0xa8 (addr 0xffff914d1340)
0xffff914d13ec   268  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff914d13f0   272  d63f03e0       constant
0xffff914d13f4   276  d503201f       constant
0xffff914d13f8   280  91406820       constant
0xffff914d13fc   284  0000ffff       constant
0xffff914d1400   288  91406260       constant
0xffff914d1404   292  0000ffff       constant
0xffff914d1408   296  914068e0       constant
0xffff914d140c   300  0000ffff       constant
0xffff914d1410   304  movz x16, #0x0
0xffff914d1414   308  sub csp, jssp, #0x10 (16)
0xffff914d1418   312  stp fp, lr, [jssp, #-16]!
0xffff914d141c   316  bl #+0x1c (addr 0xffff914d1438)
0xffff914d1420   320  movz x16, #0x8
0xffff914d1424   324  sub csp, jssp, #0x10 (16)
0xffff914d1428   328  stp fp, lr, [jssp, #-16]!
0xffff914d142c   332  bl #+0xc (addr 0xffff914d1438)
0xffff914d1430   336  movz x16, #0x10
0xffff914d1434   340  bl #+0x14 (addr 0xffff914d1448)
0xffff914d1438   344  movz x17, #0xa00000000
0xffff914d143c   348  sub csp, jssp, #0x10 (16)
0xffff914d1440   352  stp x17, cp, [jssp, #-16]!
0xffff914d1444   356  add fp, jssp, #0x10 (16)
0xffff914d1448   360  ldr x17, pc+24 (addr 0x0000ffff914d1460)    ;; lazy deoptimization bailout 0
0xffff914d144c   364  add x17, x17, x16
0xffff914d1450   368  br x17
0xffff914d1454   372  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d1458   376  d63f03e0       constant
0xffff914d145c   380  d503201f       constant
0xffff914d1460   384  91206000       constant
0xffff914d1464   388  0000ffff       constant


Safepoints (size = 21)
0xffff914d13d4   244  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff914d13b4  code target (STUB)  (0xffff91406820)
0xffff914d13cc  code target (STUB)  (0xffff91406260)
0xffff914d13d8  code target (STUB)  (0xffff914068e0)
0xffff914d13ec  constant pool (size 36)
0xffff914d1448  runtime entry
0xffff914d1454  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = Date
compiler = unknown
Instructions (size = 120)
0xffff914d1a60     0  sub csp, jssp, #0x8 (8)
0xffff914d1a64     4  str x3, [jssp, #-8]!
0xffff914d1a68     8  sub csp, jssp, #0x8 (8)
0xffff914d1a6c    12  str x0, [jssp, #-8]!
0xffff914d1a70    16  ldr x0, pc+80 (addr 0x0000ffff914d1ac0)    ;; object: 0x49bc5d51 Cell for 0
0xffff914d1a74    20  ldur x0, [x0, #7]
0xffff914d1a78    24  cmp x0, #0x0 (0)
0xffff914d1a7c    28  b.ne #+0x2c (addr 0xffff914d1aa8)
0xffff914d1a80    32  ldr x0, pc+72 (addr 0x0000ffff914d1ac8)    ;; object: 0x40834939 WeakCell for 0x49b42ca1 PropertyCell for 0x49b42c39 <JS Function Date (SharedFunctionInfo 0x49b42b91)>
0xffff914d1a84    36  ldur x0, [x0, #7]
0xffff914d1a88    40  tbz w0, #0, #+0x20 (addr 0xffff914d1aa8)
0xffff914d1a8c    44  ldur x0, [x0, #15]
0xffff914d1a90    48  ldr x16, [x26, #88]
0xffff914d1a94    52  cmp x0, x16
0xffff914d1a98    56  b.eq #+0x10 (addr 0xffff914d1aa8)
0xffff914d1a9c    60  add jssp, jssp, #0x10 (16)
0xffff914d1aa0    64  ret
0xffff914d1aa4    68  b #+0x14 (addr 0xffff914d1ab8)
0xffff914d1aa8    72  ldr x0, [jssp], #8
0xffff914d1aac    76  ldr x3, [jssp], #8
0xffff914d1ab0    80  ldr x16, pc+32 (addr 0x0000ffff914d1ad0)    ;; code: BUILTIN
0xffff914d1ab4    84  br x16
0xffff914d1ab8    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914d1abc    92  d63f03e0       constant
0xffff914d1ac0    96  49bc5d51       constant
0xffff914d1ac4   100  00000000       constant
0xffff914d1ac8   104  40834939       constant
0xffff914d1acc   108  00000000       constant
0xffff914d1ad0   112  914222e0       constant
0xffff914d1ad4   116  0000ffff       constant


RelocInfo (size = 9)
0xffff914d1a70  embedded object  (0x49bc5d51 Cell for 0)
0xffff914d1a80  embedded object  (0x40834939 WeakCell for 0x49b42ca1 PropertyCell for 0x49b42c39 <JS Function Date (SharedFunctionInfo 0x49b42b91)>)
0xffff914d1ab0  code target (BUILTIN)  (0xffff914222e0)
0xffff914d1ab8  constant pool (size 32)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = STRING*SMI -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 632)
0xffff914d2a40     0  tbnz w0, #0, #+0x1d4 (addr 0xffff914d2c14)
0xffff914d2a44     4  orr x16, x1, x0
0xffff914d2a48     8  tbnz w16, #0, #+0x10 (addr 0xffff914d2a58)
0xffff914d2a4c    12  asr x1, x1, #32
0xffff914d2a50    16  sub x0, x1, x0, asr #32
0xffff914d2a54    20  ret
0xffff914d2a58    24  cmp x0, x1
0xffff914d2a5c    28  b.ne #+0x30 (addr 0xffff914d2a8c)
0xffff914d2a60    32  ldur x16, [x0, #-1]
0xffff914d2a64    36  ldr x17, [x26, #120]
0xffff914d2a68    40  cmp x16, x17
0xffff914d2a6c    44  b.eq #+0xc (addr 0xffff914d2a78)
0xffff914d2a70    48  movz x0, #0x0
0xffff914d2a74    52  ret
0xffff914d2a78    56  ldur d0, [x0, #7]
0xffff914d2a7c    60  fcmp d0, d0
0xffff914d2a80    64  b.vc #-0x10 (addr 0xffff914d2a70)
0xffff914d2a84    68  movn x0, #0x0
0xffff914d2a88    72  ret
0xffff914d2a8c    76  and x16, x1, x0
0xffff914d2a90    80  tbnz w16, #0, #+0x64 (addr 0xffff914d2af4)
0xffff914d2a94    84  tbz w0, #0, #+0x24 (addr 0xffff914d2ab8)
0xffff914d2a98    88  ldur x16, [x0, #-1]
0xffff914d2a9c    92  ldr x17, [x26, #120]
0xffff914d2aa0    96  cmp x16, x17
0xffff914d2aa4   100  b.eq #+0x8 (addr 0xffff914d2aac)
0xffff914d2aa8   104  ret
0xffff914d2aac   108  ldur d0, [x0, #7]
0xffff914d2ab0   112  scvtf d1, x1, #32
0xffff914d2ab4   116  b #+0x24 (addr 0xffff914d2ad8)
0xffff914d2ab8   120  ldur x16, [x1, #-1]
0xffff914d2abc   124  ldr x17, [x26, #120]
0xffff914d2ac0   128  cmp x16, x17
0xffff914d2ac4   132  b.eq #+0xc (addr 0xffff914d2ad0)
0xffff914d2ac8   136  movz x0, #0x1
0xffff914d2acc   140  ret
0xffff914d2ad0   144  ldur d1, [x1, #7]
0xffff914d2ad4   148  scvtf d0, x0, #32
0xffff914d2ad8   152  fcmp d1, d0
0xffff914d2adc   156  b.vs #+0x10 (addr 0xffff914d2aec)
0xffff914d2ae0   160  cset x0, gt
0xffff914d2ae4   164  csinv x0, x0, xzr, ge
0xffff914d2ae8   168  ret
0xffff914d2aec   172  movn x0, #0x0
0xffff914d2af0   176  ret
0xffff914d2af4   180  ldur x10, [x0, #-1]
0xffff914d2af8   184  ldur x12, [x1, #-1]
0xffff914d2afc   188  ldrb w11, [x10, #11]
0xffff914d2b00   192  ldrb w13, [x12, #11]
0xffff914d2b04   196  cmp x11, #0xb1 (177)
0xffff914d2b08   200  b.lt #+0x8 (addr 0xffff914d2b10)
0xffff914d2b0c   204  ret
0xffff914d2b10   208  cmp x11, #0x83 (131)
0xffff914d2b14   212  movz x16, #0x83
0xffff914d2b18   216  ccmp x13, x16, #nZcv, ne
0xffff914d2b1c   220  movz x16, #0xb1
0xffff914d2b20   224  ccmp x13, x16, #NzcV, ne
0xffff914d2b24   228  b.ge #-0x18 (addr 0xffff914d2b0c)
0xffff914d2b28   232  orr x14, x13, x11
0xffff914d2b2c   236  tst x14, #0xc0
0xffff914d2b30   240  b.eq #-0x24 (addr 0xffff914d2b0c)
0xffff914d2b34   244  cmp x11, #0x81 (129)
0xffff914d2b38   248  b.ne #+0x18 (addr 0xffff914d2b50)
0xffff914d2b3c   252  cmp x12, x10
0xffff914d2b40   256  b.ne #+0x10 (addr 0xffff914d2b50)
0xffff914d2b44   260  ldur d1, [x1, #7]
0xffff914d2b48   264  ldur d0, [x0, #7]
0xffff914d2b4c   268  b #-0x74 (addr 0xffff914d2ad8)
0xffff914d2b50   272  movz x16, #0x87
0xffff914d2b54   276  and x14, x13, x16
0xffff914d2b58   280  movz x16, #0x87
0xffff914d2b5c   284  and x15, x11, x16
0xffff914d2b60   288  cmp x14, #0x4 (4)
0xffff914d2b64   292  ccmp x15, #4, #nzcv, eq
0xffff914d2b68   296  b.ne #+0x5c (addr 0xffff914d2bc4)
0xffff914d2b6c   300  ldur x10, [x1, #15]
0xffff914d2b70   304  ldur x11, [x0, #15]
0xffff914d2b74   308  cmp x10, x11
0xffff914d2b78   312  b.eq #+0xc (addr 0xffff914d2b84)
0xffff914d2b7c   316  movz x0, #0x100000000
0xffff914d2b80   320  ret
0xffff914d2b84   324  cbnz x10, #+0xc (addr 0xffff914d2b90)
0xffff914d2b88   328  movz x0, #0x0
0xffff914d2b8c   332  ret
0xffff914d2b90   336  asr x10, x10, #32
0xffff914d2b94   340  add x11, x10, #0x17 (23)
0xffff914d2b98   344  add x1, x1, x11
0xffff914d2b9c   348  add x0, x0, x11
0xffff914d2ba0   352  neg x10, x10
0xffff914d2ba4   356  ldrb w11, [x1, x10]
0xffff914d2ba8   360  ldrb w12, [x0, x10]
0xffff914d2bac   364  cmp x11, x12
0xffff914d2bb0   368  b.ne #-0x34 (addr 0xffff914d2b7c)
0xffff914d2bb4   372  add x10, x10, #0x1 (1)
0xffff914d2bb8   376  cbnz x10, #-0x14 (addr 0xffff914d2ba4)
0xffff914d2bbc   380  movz x0, #0x0
0xffff914d2bc0   384  ret
0xffff914d2bc4   388  movz x16, #0xc00000000
0xffff914d2bc8   392  sub csp, jssp, #0x10 (16)
0xffff914d2bcc   396  stp fp, lr, [jssp, #-16]!
0xffff914d2bd0   400  sub csp, jssp, #0x10 (16)
0xffff914d2bd4   404  str x16, [jssp, #-8]!
0xffff914d2bd8   408  ldr x17, pc+176 (addr 0x0000ffff914d2c88)    ;; object: 0xffff914d29e1 <Code: COMPARE_IC>
0xffff914d2bdc   412  sub csp, jssp, #0x10 (16)
0xffff914d2be0   416  str x17, [jssp, #-8]!
0xffff914d2be4   420  add fp, jssp, #0x10 (16)
0xffff914d2be8   424  sub csp, jssp, #0x10 (16)
0xffff914d2bec   428  stp x0, x1, [jssp, #-16]!
0xffff914d2bf0   432  movz x0, #0x2
0xffff914d2bf4   436  ldr x1, pc+156 (addr 0x0000ffff914d2c90)    ;; external reference (Runtime::StrictEqual)
0xffff914d2bf8   440  ldr x16, pc+160 (addr 0x0000ffff914d2c98)    ;; code: STUB, CEntryStub, minor: 4
0xffff914d2bfc   444  blr x16
0xffff914d2c00   448  mov jssp, fp
0xffff914d2c04   452  ldp fp, lr, [jssp], #16
0xffff914d2c08   456  ldr x1, [x26, #64]
0xffff914d2c0c   460  sub x0, x0, x1
0xffff914d2c10   464  ret
0xffff914d2c14   468  movz x16, #0xc00000000
0xffff914d2c18   472  sub csp, jssp, #0x10 (16)
0xffff914d2c1c   476  stp fp, lr, [jssp, #-16]!
0xffff914d2c20   480  sub csp, jssp, #0x10 (16)
0xffff914d2c24   484  str x16, [jssp, #-8]!
0xffff914d2c28   488  ldr x17, pc+120 (addr 0x0000ffff914d2ca0)    ;; object: 0xffff914d29e1 <Code: COMPARE_IC>
0xffff914d2c2c   492  sub csp, jssp, #0x10 (16)
0xffff914d2c30   496  str x17, [jssp, #-8]!
0xffff914d2c34   500  add fp, jssp, #0x10 (16)
0xffff914d2c38   504  sub csp, jssp, #0x18 (24)
0xffff914d2c3c   508  stp lr, x0, [jssp, #-24]!
0xffff914d2c40   512  str x1, [jssp, #16]
0xffff914d2c44   516  movz x10, #0x2f00000000
0xffff914d2c48   520  sub csp, jssp, #0x18 (24)
0xffff914d2c4c   524  stp x10, x0, [jssp, #-24]!
0xffff914d2c50   528  str x1, [jssp, #16]
0xffff914d2c54   532  movz x0, #0x3
0xffff914d2c58   536  ldr x1, pc+80 (addr 0x0000ffff914d2ca8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914d2c5c   540  ldr x16, pc+84 (addr 0x0000ffff914d2cb0)    ;; code: STUB, CEntryStub, minor: 4
0xffff914d2c60   544  blr x16
0xffff914d2c64   548  add x11, x0, #0x5f (95)
0xffff914d2c68   552  ldr x1, [jssp, #16]
0xffff914d2c6c   556  ldp lr, x0, [jssp], #24
0xffff914d2c70   560  mov jssp, fp
0xffff914d2c74   564  ldp fp, lr, [jssp], #16
0xffff914d2c78   568  br x11
0xffff914d2c7c   572  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914d2c80   576  d63f03e0       constant
0xffff914d2c84   580  d503201f       constant
0xffff914d2c88   584  914d29e1       constant
0xffff914d2c8c   588  0000ffff       constant
0xffff914d2c90   592  00e50928       constant
0xffff914d2c94   596  00000000       constant
0xffff914d2c98   600  91406060       constant
0xffff914d2c9c   604  0000ffff       constant
0xffff914d2ca0   608  914d29e1       constant
0xffff914d2ca4   612  0000ffff       constant
0xffff914d2ca8   616  00c8a980       constant
0xffff914d2cac   620  00000000       constant
0xffff914d2cb0   624  91406060       constant
0xffff914d2cb4   628  0000ffff       constant


RelocInfo (size = 16)
0xffff914d2bd8  embedded object  (0xffff914d29e1 <Code: COMPARE_IC>)
0xffff914d2bf4  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff914d2bf8  code target (STUB)  (0xffff91406060)
0xffff914d2c28  embedded object  (0xffff914d29e1 <Code: COMPARE_IC>)
0xffff914d2c58  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914d2c5c  code target (STUB)  (0xffff91406060)
0xffff914d2c7c  constant pool (size 60)


kind = HANDLER
major_key = <NoCache>Stub
name = get
compiler = unknown
Instructions (size = 120)
0xffff914d2fa0     0  sub csp, jssp, #0x8 (8)
0xffff914d2fa4     4  str x3, [jssp, #-8]!
0xffff914d2fa8     8  sub csp, jssp, #0x8 (8)
0xffff914d2fac    12  str x0, [jssp, #-8]!
0xffff914d2fb0    16  ldr x0, pc+72 (addr 0x0000ffff914d2ff8)    ;; object: 0x40835189 Cell for 0
0xffff914d2fb4    20  ldur x0, [x0, #7]
0xffff914d2fb8    24  cmp x0, #0x0 (0)
0xffff914d2fbc    28  b.ne #+0x14 (addr 0xffff914d2fd0)
0xffff914d2fc0    32  ldr x3, pc+64 (addr 0x0000ffff914d3000)    ;; object: 0x40835199 WeakCell for 0x51d757c1 <an Object with map 0x36411eb1>
0xffff914d2fc4    36  ldur x3, [x3, #7]
0xffff914d2fc8    40  tbz w3, #0, #+0x8 (addr 0xffff914d2fd0)
0xffff914d2fcc    44  b #+0x14 (addr 0xffff914d2fe0)
0xffff914d2fd0    48  ldr x0, [jssp], #8
0xffff914d2fd4    52  ldr x3, [jssp], #8
0xffff914d2fd8    56  ldr x16, pc+48 (addr 0x0000ffff914d3008)    ;; code: BUILTIN
0xffff914d2fdc    60  br x16
0xffff914d2fe0    64  add jssp, jssp, #0x10 (16)
0xffff914d2fe4    68  mov x1, x3
0xffff914d2fe8    72  ldr x16, pc+40 (addr 0x0000ffff914d3010)    ;; code: HANDLER, LoadConstantStub, minor: 3
0xffff914d2fec    76  br x16
0xffff914d2ff0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914d2ff4    84  d63f03e0       constant
0xffff914d2ff8    88  40835189       constant
0xffff914d2ffc    92  00000000       constant
0xffff914d3000    96  40835199       constant
0xffff914d3004   100  00000000       constant
0xffff914d3008   104  914222e0       constant
0xffff914d300c   108  0000ffff       constant
0xffff914d3010   112  91443400       constant
0xffff914d3014   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914d2fb0  embedded object  (0x40835189 Cell for 0)
0xffff914d2fc0  embedded object  (0x40835199 WeakCell for 0x51d757c1 <an Object with map 0x36411eb1>)
0xffff914d2fd8  code target (BUILTIN)  (0xffff914222e0)
0xffff914d2fe8  code target (HANDLER)  (0xffff91443400)
0xffff914d2ff0  constant pool (size 40)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = STRING*STRING -> STRING
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 416)
0xffff914d3080     0  and x16, x0, x1
0xffff914d3084     4  tbz w16, #0, #+0xfc (addr 0xffff914d3180)
0xffff914d3088     8  ldur x11, [x1, #-1]
0xffff914d308c    12  ldur x10, [x0, #-1]
0xffff914d3090    16  ldrb w11, [x11, #11]
0xffff914d3094    20  ldrb w10, [x10, #11]
0xffff914d3098    24  orr x12, x11, x10
0xffff914d309c    28  tbnz w12, #7, #+0xe4 (addr 0xffff914d3180)
0xffff914d30a0    32  cmp x1, x0
0xffff914d30a4    36  b.ne #+0xc (addr 0xffff914d30b0)
0xffff914d30a8    40  movz x0, #0x0
0xffff914d30ac    44  ret
0xffff914d30b0    48  orr x12, x11, x10
0xffff914d30b4    52  tbnz w12, #6, #+0x8 (addr 0xffff914d30bc)
0xffff914d30b8    56  ret
0xffff914d30bc    60  movz x16, #0x87
0xffff914d30c0    64  and x12, x11, x16
0xffff914d30c4    68  movz x16, #0x87
0xffff914d30c8    72  and x13, x10, x16
0xffff914d30cc    76  cmp x12, #0x4 (4)
0xffff914d30d0    80  ccmp x13, #4, #nzcv, eq
0xffff914d30d4    84  b.ne #+0x5c (addr 0xffff914d3130)
0xffff914d30d8    88  ldur x10, [x1, #15]
0xffff914d30dc    92  ldur x11, [x0, #15]
0xffff914d30e0    96  cmp x10, x11
0xffff914d30e4   100  b.eq #+0xc (addr 0xffff914d30f0)
0xffff914d30e8   104  movz x0, #0x100000000
0xffff914d30ec   108  ret
0xffff914d30f0   112  cbnz x10, #+0xc (addr 0xffff914d30fc)
0xffff914d30f4   116  movz x0, #0x0
0xffff914d30f8   120  ret
0xffff914d30fc   124  asr x10, x10, #32
0xffff914d3100   128  add x11, x10, #0x17 (23)
0xffff914d3104   132  add x1, x1, x11
0xffff914d3108   136  add x0, x0, x11
0xffff914d310c   140  neg x10, x10
0xffff914d3110   144  ldrb w11, [x1, x10]
0xffff914d3114   148  ldrb w12, [x0, x10]
0xffff914d3118   152  cmp x11, x12
0xffff914d311c   156  b.ne #-0x34 (addr 0xffff914d30e8)
0xffff914d3120   160  add x10, x10, #0x1 (1)
0xffff914d3124   164  cbnz x10, #-0x14 (addr 0xffff914d3110)
0xffff914d3128   168  movz x0, #0x0
0xffff914d312c   172  ret
0xffff914d3130   176  movz x16, #0xc00000000
0xffff914d3134   180  sub csp, jssp, #0x10 (16)
0xffff914d3138   184  stp fp, lr, [jssp, #-16]!
0xffff914d313c   188  sub csp, jssp, #0x10 (16)
0xffff914d3140   192  str x16, [jssp, #-8]!
0xffff914d3144   196  ldr x17, pc+172 (addr 0x0000ffff914d31f0)    ;; object: 0xffff914d3021 <Code: COMPARE_IC>
0xffff914d3148   200  sub csp, jssp, #0x10 (16)
0xffff914d314c   204  str x17, [jssp, #-8]!
0xffff914d3150   208  add fp, jssp, #0x10 (16)
0xffff914d3154   212  sub csp, jssp, #0x10 (16)
0xffff914d3158   216  stp x0, x1, [jssp, #-16]!
0xffff914d315c   220  movz x0, #0x2
0xffff914d3160   224  ldr x1, pc+152 (addr 0x0000ffff914d31f8)    ;; external reference (Runtime::StringEqual)
0xffff914d3164   228  ldr x16, pc+156 (addr 0x0000ffff914d3200)    ;; code: STUB, CEntryStub, minor: 4
0xffff914d3168   232  blr x16
0xffff914d316c   236  mov jssp, fp
0xffff914d3170   240  ldp fp, lr, [jssp], #16
0xffff914d3174   244  ldr x1, [x26, #64]
0xffff914d3178   248  sub x0, x0, x1
0xffff914d317c   252  ret
0xffff914d3180   256  movz x16, #0xc00000000
0xffff914d3184   260  sub csp, jssp, #0x10 (16)
0xffff914d3188   264  stp fp, lr, [jssp, #-16]!
0xffff914d318c   268  sub csp, jssp, #0x10 (16)
0xffff914d3190   272  str x16, [jssp, #-8]!
0xffff914d3194   276  ldr x17, pc+116 (addr 0x0000ffff914d3208)    ;; object: 0xffff914d3021 <Code: COMPARE_IC>
0xffff914d3198   280  sub csp, jssp, #0x10 (16)
0xffff914d319c   284  str x17, [jssp, #-8]!
0xffff914d31a0   288  add fp, jssp, #0x10 (16)
0xffff914d31a4   292  sub csp, jssp, #0x18 (24)
0xffff914d31a8   296  stp lr, x0, [jssp, #-24]!
0xffff914d31ac   300  str x1, [jssp, #16]
0xffff914d31b0   304  movz x10, #0x2f00000000
0xffff914d31b4   308  sub csp, jssp, #0x18 (24)
0xffff914d31b8   312  stp x10, x0, [jssp, #-24]!
0xffff914d31bc   316  str x1, [jssp, #16]
0xffff914d31c0   320  movz x0, #0x3
0xffff914d31c4   324  ldr x1, pc+76 (addr 0x0000ffff914d3210)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914d31c8   328  ldr x16, pc+80 (addr 0x0000ffff914d3218)    ;; code: STUB, CEntryStub, minor: 4
0xffff914d31cc   332  blr x16
0xffff914d31d0   336  add x11, x0, #0x5f (95)
0xffff914d31d4   340  ldr x1, [jssp, #16]
0xffff914d31d8   344  ldp lr, x0, [jssp], #24
0xffff914d31dc   348  mov jssp, fp
0xffff914d31e0   352  ldp fp, lr, [jssp], #16
0xffff914d31e4   356  br x11
0xffff914d31e8   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914d31ec   364  d63f03e0       constant
0xffff914d31f0   368  914d3021       constant
0xffff914d31f4   372  0000ffff       constant
0xffff914d31f8   376  00ed0748       constant
0xffff914d31fc   380  00000000       constant
0xffff914d3200   384  91406060       constant
0xffff914d3204   388  0000ffff       constant
0xffff914d3208   392  914d3021       constant
0xffff914d320c   396  0000ffff       constant
0xffff914d3210   400  00c8a980       constant
0xffff914d3214   404  00000000       constant
0xffff914d3218   408  91406060       constant
0xffff914d321c   412  0000ffff       constant


RelocInfo (size = 16)
0xffff914d3144  embedded object  (0xffff914d3021 <Code: COMPARE_IC>)
0xffff914d3160  external reference (Runtime::StringEqual)  (0xed0748)
0xffff914d3164  code target (STUB)  (0xffff91406060)
0xffff914d3194  embedded object  (0xffff914d3021 <Code: COMPARE_IC>)
0xffff914d31c4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914d31c8  code target (STUB)  (0xffff91406060)
0xffff914d31e8  constant pool (size 56)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914d34a0     0  ldur x0, [x1, #-1]
0xffff914d34a4     4  ldur x0, [x0, #47]
0xffff914d34a8     8  movz x16, #0x197
0xffff914d34ac    12  ldr x0, [x0, x16]
0xffff914d34b0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914d34a0     0  ldur x0, [x1, #-1]
0xffff914d34a4     4  ldur x0, [x0, #47]
0xffff914d34a8     8  movz x16, #0x197
0xffff914d34ac    12  ldr x0, [x0, x16]
0xffff914d34b0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff914d3520     0  ldur x0, [x1, #63]
0xffff914d3524     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff914d3520     0  ldur x0, [x1, #63]
0xffff914d3524     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*GENERIC -> GENERIC
compare_operation = LT
name = CompareICStub
compiler = unknown
Instructions (size = 512)
0xffff914d35a0     0  orr x16, x1, x0
0xffff914d35a4     4  tbnz w16, #0, #+0x10 (addr 0xffff914d35b4)
0xffff914d35a8     8  asr x1, x1, #32
0xffff914d35ac    12  sub x0, x1, x0, asr #32
0xffff914d35b0    16  ret
0xffff914d35b4    20  cmp x0, x1
0xffff914d35b8    24  b.ne #+0x2c (addr 0xffff914d35e4)
0xffff914d35bc    28  ldur x10, [x0, #-1]
0xffff914d35c0    32  ldrb w10, [x10, #11]
0xffff914d35c4    36  cmp x10, #0xb1 (177)
0xffff914d35c8    40  b.ge #+0x118 (addr 0xffff914d36e0)
0xffff914d35cc    44  cmp x10, #0x80 (128)
0xffff914d35d0    48  b.eq #+0x110 (addr 0xffff914d36e0)
0xffff914d35d4    52  cmp x10, #0x82 (130)
0xffff914d35d8    56  b.eq #+0x108 (addr 0xffff914d36e0)
0xffff914d35dc    60  movz x0, #0x1
0xffff914d35e0    64  ret
0xffff914d35e4    68  and x16, x1, x0
0xffff914d35e8    72  tbnz w16, #0, #+0x58 (addr 0xffff914d3640)
0xffff914d35ec    76  tbz w0, #0, #+0x20 (addr 0xffff914d360c)
0xffff914d35f0    80  ldur x16, [x0, #-1]
0xffff914d35f4    84  ldr x17, [x26, #120]
0xffff914d35f8    88  cmp x16, x17
0xffff914d35fc    92  b.ne #+0xe4 (addr 0xffff914d36e0)
0xffff914d3600    96  ldur d0, [x0, #7]
0xffff914d3604   100  scvtf d1, x1, #32
0xffff914d3608   104  b #+0x1c (addr 0xffff914d3624)
0xffff914d360c   108  ldur x16, [x1, #-1]
0xffff914d3610   112  ldr x17, [x26, #120]
0xffff914d3614   116  cmp x16, x17
0xffff914d3618   120  b.ne #+0xc8 (addr 0xffff914d36e0)
0xffff914d361c   124  ldur d1, [x1, #7]
0xffff914d3620   128  scvtf d0, x0, #32
0xffff914d3624   132  fcmp d1, d0
0xffff914d3628   136  b.vs #+0x10 (addr 0xffff914d3638)
0xffff914d362c   140  cset x0, gt
0xffff914d3630   144  csinv x0, x0, xzr, ge
0xffff914d3634   148  ret
0xffff914d3638   152  movz x0, #0x1
0xffff914d363c   156  ret
0xffff914d3640   160  ldur x10, [x0, #-1]
0xffff914d3644   164  ldur x12, [x1, #-1]
0xffff914d3648   168  ldrb w11, [x10, #11]
0xffff914d364c   172  ldrb w13, [x12, #11]
0xffff914d3650   176  cmp x11, #0x81 (129)
0xffff914d3654   180  b.ne #+0x18 (addr 0xffff914d366c)
0xffff914d3658   184  cmp x12, x10
0xffff914d365c   188  b.ne #+0x10 (addr 0xffff914d366c)
0xffff914d3660   192  ldur d1, [x1, #7]
0xffff914d3664   196  ldur d0, [x0, #7]
0xffff914d3668   200  b #-0x44 (addr 0xffff914d3624)
0xffff914d366c   204  movz x16, #0x87
0xffff914d3670   208  and x14, x13, x16
0xffff914d3674   212  movz x16, #0x87
0xffff914d3678   216  and x15, x11, x16
0xffff914d367c   220  cmp x14, #0x4 (4)
0xffff914d3680   224  ccmp x15, #4, #nzcv, eq
0xffff914d3684   228  b.ne #+0x5c (addr 0xffff914d36e0)
0xffff914d3688   232  ldur x10, [x1, #15]
0xffff914d368c   236  ldur x11, [x0, #15]
0xffff914d3690   240  subs x12, x10, x11
0xffff914d3694   244  csel x10, x11, x10, gt
0xffff914d3698   248  cbz x10, #+0x30 (addr 0xffff914d36c8)
0xffff914d369c   252  asr x10, x10, #32
0xffff914d36a0   256  add x11, x10, #0x17 (23)
0xffff914d36a4   260  add x1, x1, x11
0xffff914d36a8   264  add x0, x0, x11
0xffff914d36ac   268  neg x10, x10
0xffff914d36b0   272  ldrb w11, [x1, x10]
0xffff914d36b4   276  ldrb w13, [x0, x10]
0xffff914d36b8   280  cmp x11, x13
0xffff914d36bc   284  b.ne #+0x10 (addr 0xffff914d36cc)
0xffff914d36c0   288  add x10, x10, #0x1 (1)
0xffff914d36c4   292  cbnz x10, #-0x14 (addr 0xffff914d36b0)
0xffff914d36c8   296  subs x0, x12, #0x0 (0)
0xffff914d36cc   300  movz x10, #0x100000000
0xffff914d36d0   304  mov x11, #0xffffffff00000000
0xffff914d36d4   308  csel x0, x10, x0, gt
0xffff914d36d8   312  csel x0, x11, x0, lt
0xffff914d36dc   316  ret
0xffff914d36e0   320  sub csp, jssp, #0x10 (16)
0xffff914d36e4   324  stp x0, x1, [jssp, #-16]!
0xffff914d36e8   328  movz x10, #0x100000000
0xffff914d36ec   332  sub csp, jssp, #0x8 (8)
0xffff914d36f0   336  str x10, [jssp, #-8]!
0xffff914d36f4   340  movz x0, #0x3
0xffff914d36f8   344  ldr x1, pc+128 (addr 0x0000ffff914d3778)    ;; external reference (Runtime::Compare)
0xffff914d36fc   348  ldr x16, pc+132 (addr 0x0000ffff914d3780)    ;; code: STUB, CEntryStub, minor: 4
0xffff914d3700   352  br x16
0xffff914d3704   356  movz x16, #0xc00000000
0xffff914d3708   360  sub csp, jssp, #0x10 (16)
0xffff914d370c   364  stp fp, lr, [jssp, #-16]!
0xffff914d3710   368  sub csp, jssp, #0x10 (16)
0xffff914d3714   372  str x16, [jssp, #-8]!
0xffff914d3718   376  ldr x17, pc+112 (addr 0x0000ffff914d3788)    ;; object: 0xffff914d3541 <Code: COMPARE_IC>
0xffff914d371c   380  sub csp, jssp, #0x10 (16)
0xffff914d3720   384  str x17, [jssp, #-8]!
0xffff914d3724   388  add fp, jssp, #0x10 (16)
0xffff914d3728   392  sub csp, jssp, #0x18 (24)
0xffff914d372c   396  stp lr, x0, [jssp, #-24]!
0xffff914d3730   400  str x1, [jssp, #16]
0xffff914d3734   404  movz x10, #0x3100000000
0xffff914d3738   408  sub csp, jssp, #0x18 (24)
0xffff914d373c   412  stp x10, x0, [jssp, #-24]!
0xffff914d3740   416  str x1, [jssp, #16]
0xffff914d3744   420  movz x0, #0x3
0xffff914d3748   424  ldr x1, pc+72 (addr 0x0000ffff914d3790)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914d374c   428  ldr x16, pc+76 (addr 0x0000ffff914d3798)    ;; code: STUB, CEntryStub, minor: 4
0xffff914d3750   432  blr x16
0xffff914d3754   436  add x11, x0, #0x5f (95)
0xffff914d3758   440  ldr x1, [jssp, #16]
0xffff914d375c   444  ldp lr, x0, [jssp], #24
0xffff914d3760   448  mov jssp, fp
0xffff914d3764   452  ldp fp, lr, [jssp], #16
0xffff914d3768   456  br x11
0xffff914d376c   460  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff914d3770   464  d63f03e0       constant
0xffff914d3774   468  d503201f       constant
0xffff914d3778   472  00e49ea8       constant
0xffff914d377c   476  00000000       constant
0xffff914d3780   480  91406060       constant
0xffff914d3784   484  0000ffff       constant
0xffff914d3788   488  914d3541       constant
0xffff914d378c   492  0000ffff       constant
0xffff914d3790   496  00c8a980       constant
0xffff914d3794   500  00000000       constant
0xffff914d3798   504  91406060       constant
0xffff914d379c   508  0000ffff       constant


RelocInfo (size = 15)
0xffff914d36f8  external reference (Runtime::Compare)  (0xe49ea8)
0xffff914d36fc  code target (STUB)  (0xffff91406060)
0xffff914d3718  embedded object  (0xffff914d3541 <Code: COMPARE_IC>)
0xffff914d3748  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914d374c  code target (STUB)  (0xffff91406060)
0xffff914d376c  constant pool (size 52)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = NUMBER*SMI -> NUMBER
compare_operation = LT
name = CompareICStub
compiler = unknown
Instructions (size = 280)
0xffff914d3800     0  tbnz w0, #0, #+0x88 (addr 0xffff914d3888)
0xffff914d3804     4  scvtf d0, x0, #32
0xffff914d3808     8  scvtf d1, x1, #32
0xffff914d380c    12  tbz w0, #0, #+0x18 (addr 0xffff914d3824)
0xffff914d3810    16  ldur x16, [x0, #-1]
0xffff914d3814    20  ldr x17, [x26, #120]
0xffff914d3818    24  cmp x16, x17
0xffff914d381c    28  b.ne #+0x3c (addr 0xffff914d3858)
0xffff914d3820    32  ldur d0, [x0, #7]
0xffff914d3824    36  tbz w1, #0, #+0x18 (addr 0xffff914d383c)
0xffff914d3828    40  ldur x16, [x1, #-1]
0xffff914d382c    44  ldr x17, [x26, #120]
0xffff914d3830    48  cmp x16, x17
0xffff914d3834    52  b.ne #+0x48 (addr 0xffff914d387c)
0xffff914d3838    56  ldur d1, [x1, #7]
0xffff914d383c    60  fcmp d1, d0
0xffff914d3840    64  b.vs #+0x10 (addr 0xffff914d3850)
0xffff914d3844    68  cset x0, gt
0xffff914d3848    72  csinv x0, x0, xzr, ge
0xffff914d384c    76  ret
0xffff914d3850    80  ldr x16, pc+168 (addr 0x0000ffff914d38f8)    ;; code: COMPARE_IC, GENERIC
0xffff914d3854    84  br x16
0xffff914d3858    88  ldr x16, [x26, #40]
0xffff914d385c    92  cmp x0, x16
0xffff914d3860    96  b.ne #+0x28 (addr 0xffff914d3888)
0xffff914d3864   100  tbz w1, #0, #-0x14 (addr 0xffff914d3850)
0xffff914d3868   104  ldur x16, [x1, #-1]
0xffff914d386c   108  ldr x17, [x26, #120]
0xffff914d3870   112  cmp x16, x17
0xffff914d3874   116  b.ne #+0x8 (addr 0xffff914d387c)
0xffff914d3878   120  b #-0x28 (addr 0xffff914d3850)
0xffff914d387c   124  ldr x16, [x26, #40]
0xffff914d3880   128  cmp x1, x16
0xffff914d3884   132  b.eq #-0x34 (addr 0xffff914d3850)
0xffff914d3888   136  movz x16, #0xc00000000
0xffff914d388c   140  sub csp, jssp, #0x10 (16)
0xffff914d3890   144  stp fp, lr, [jssp, #-16]!
0xffff914d3894   148  sub csp, jssp, #0x10 (16)
0xffff914d3898   152  str x16, [jssp, #-8]!
0xffff914d389c   156  ldr x17, pc+100 (addr 0x0000ffff914d3900)    ;; object: 0xffff914d37a1 <Code: COMPARE_IC>
0xffff914d38a0   160  sub csp, jssp, #0x10 (16)
0xffff914d38a4   164  str x17, [jssp, #-8]!
0xffff914d38a8   168  add fp, jssp, #0x10 (16)
0xffff914d38ac   172  sub csp, jssp, #0x18 (24)
0xffff914d38b0   176  stp lr, x0, [jssp, #-24]!
0xffff914d38b4   180  str x1, [jssp, #16]
0xffff914d38b8   184  movz x10, #0x3100000000
0xffff914d38bc   188  sub csp, jssp, #0x18 (24)
0xffff914d38c0   192  stp x10, x0, [jssp, #-24]!
0xffff914d38c4   196  str x1, [jssp, #16]
0xffff914d38c8   200  movz x0, #0x3
0xffff914d38cc   204  ldr x1, pc+60 (addr 0x0000ffff914d3908)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914d38d0   208  ldr x16, pc+64 (addr 0x0000ffff914d3910)    ;; code: STUB, CEntryStub, minor: 4
0xffff914d38d4   212  blr x16
0xffff914d38d8   216  add x11, x0, #0x5f (95)
0xffff914d38dc   220  ldr x1, [jssp, #16]
0xffff914d38e0   224  ldp lr, x0, [jssp], #24
0xffff914d38e4   228  mov jssp, fp
0xffff914d38e8   232  ldp fp, lr, [jssp], #16
0xffff914d38ec   236  br x11
0xffff914d38f0   240  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914d38f4   244  d63f03e0       constant
0xffff914d38f8   248  914d35a0       constant
0xffff914d38fc   252  0000ffff       constant
0xffff914d3900   256  914d37a1       constant
0xffff914d3904   260  0000ffff       constant
0xffff914d3908   264  00c8a980       constant
0xffff914d390c   268  00000000       constant
0xffff914d3910   272  91406060       constant
0xffff914d3914   276  0000ffff       constant


RelocInfo (size = 15)
0xffff914d3850  code target (COMPARE_IC)  (0xffff914d35a0)
0xffff914d389c  embedded object  (0xffff914d37a1 <Code: COMPARE_IC>)
0xffff914d38cc  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914d38d0  code target (STUB)  (0xffff91406060)
0xffff914d38f0  constant pool (size 40)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d3980     0  tbz w0, #0, #+0x1c (addr 0xffff914d399c)
0xffff914d3984     4  ldur x16, [x0, #-1]
0xffff914d3988     8  ldr x17, [x26, #120]
0xffff914d398c    12  cmp x16, x17
0xffff914d3990    16  b.ne #+0x60 (addr 0xffff914d39f0)
0xffff914d3994    20  ldur d0, [x0, #7]
0xffff914d3998    24  b #+0x8 (addr 0xffff914d39a0)
0xffff914d399c    28  scvtf d0, x0, #32
0xffff914d39a0    32  stur d0, [x1, #23]
0xffff914d39a4    36  stur x5, [x1, #-1]
0xffff914d39a8    40  tbz w5, #0, #+0x34 (addr 0xffff914d39dc)
0xffff914d39ac    44  sub x2, x1, #0x1 (1)
0xffff914d39b0    48  and x5, x5, #0xfffffffffff00000
0xffff914d39b4    52  ldr x5, [x5, #8]
0xffff914d39b8    56  tbz w5, #1, #+0x24 (addr 0xffff914d39dc)
0xffff914d39bc    60  and x5, x1, #0xfffffffffff00000
0xffff914d39c0    64  ldr x5, [x5, #8]
0xffff914d39c4    68  tbz w5, #2, #+0x18 (addr 0xffff914d39dc)
0xffff914d39c8    72  sub csp, jssp, #0x8 (8)
0xffff914d39cc    76  str lr, [jssp, #-8]!
0xffff914d39d0    80  ldr x16, pc+24 (addr 0x0000ffff914d39e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d39d4    84  blr x16
0xffff914d39d8    88  ldr lr, [jssp], #8
0xffff914d39dc    92  ret
0xffff914d39e0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d39e4   100  d63f03e0       constant
0xffff914d39e8   104  91438080       constant
0xffff914d39ec   108  0000ffff       constant
0xffff914d39f0   112  movz x16, #0x0
0xffff914d39f4   116  sub csp, jssp, #0x10 (16)
0xffff914d39f8   120  stp fp, lr, [jssp, #-16]!
0xffff914d39fc   124  bl #+0x4 (addr 0xffff914d3a00)
0xffff914d3a00   128  movz x17, #0xa00000000
0xffff914d3a04   132  sub csp, jssp, #0x10 (16)
0xffff914d3a08   136  stp x17, cp, [jssp, #-16]!
0xffff914d3a0c   140  add fp, jssp, #0x10 (16)
0xffff914d3a10   144  ldr x17, pc+24 (addr 0x0000ffff914d3a28)    ;; lazy deoptimization bailout 0
0xffff914d3a14   148  add x17, x17, x16
0xffff914d3a18   152  br x17
0xffff914d3a1c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d3a20   160  d63f03e0       constant
0xffff914d3a24   164  d503201f       constant
0xffff914d3a28   168  91206000       constant
0xffff914d3a2c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d39d0  code target (STUB)  (0xffff91438080)
0xffff914d39e0  constant pool (size 16)
0xffff914d3a10  runtime entry
0xffff914d3a1c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d3980     0  tbz w0, #0, #+0x1c (addr 0xffff914d399c)
0xffff914d3984     4  ldur x16, [x0, #-1]
0xffff914d3988     8  ldr x17, [x26, #120]
0xffff914d398c    12  cmp x16, x17
0xffff914d3990    16  b.ne #+0x60 (addr 0xffff914d39f0)
0xffff914d3994    20  ldur d0, [x0, #7]
0xffff914d3998    24  b #+0x8 (addr 0xffff914d39a0)
0xffff914d399c    28  scvtf d0, x0, #32
0xffff914d39a0    32  stur d0, [x1, #23]
0xffff914d39a4    36  stur x5, [x1, #-1]
0xffff914d39a8    40  tbz w5, #0, #+0x34 (addr 0xffff914d39dc)
0xffff914d39ac    44  sub x2, x1, #0x1 (1)
0xffff914d39b0    48  and x5, x5, #0xfffffffffff00000
0xffff914d39b4    52  ldr x5, [x5, #8]
0xffff914d39b8    56  tbz w5, #1, #+0x24 (addr 0xffff914d39dc)
0xffff914d39bc    60  and x5, x1, #0xfffffffffff00000
0xffff914d39c0    64  ldr x5, [x5, #8]
0xffff914d39c4    68  tbz w5, #2, #+0x18 (addr 0xffff914d39dc)
0xffff914d39c8    72  sub csp, jssp, #0x8 (8)
0xffff914d39cc    76  str lr, [jssp, #-8]!
0xffff914d39d0    80  ldr x16, pc+24 (addr 0x0000ffff914d39e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d39d4    84  blr x16
0xffff914d39d8    88  ldr lr, [jssp], #8
0xffff914d39dc    92  ret
0xffff914d39e0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d39e4   100  d63f03e0       constant
0xffff914d39e8   104  91438080       constant
0xffff914d39ec   108  0000ffff       constant
0xffff914d39f0   112  movz x16, #0x0
0xffff914d39f4   116  sub csp, jssp, #0x10 (16)
0xffff914d39f8   120  stp fp, lr, [jssp, #-16]!
0xffff914d39fc   124  bl #+0x4 (addr 0xffff914d3a00)
0xffff914d3a00   128  movz x17, #0xa00000000
0xffff914d3a04   132  sub csp, jssp, #0x10 (16)
0xffff914d3a08   136  stp x17, cp, [jssp, #-16]!
0xffff914d3a0c   140  add fp, jssp, #0x10 (16)
0xffff914d3a10   144  ldr x17, pc+24 (addr 0x0000ffff914d3a28)    ;; lazy deoptimization bailout 0
0xffff914d3a14   148  add x17, x17, x16
0xffff914d3a18   152  br x17
0xffff914d3a1c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d3a20   160  d63f03e0       constant
0xffff914d3a24   164  d503201f       constant
0xffff914d3a28   168  91206000       constant
0xffff914d3a2c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d39d0  code target (STUB)  (0xffff91438080)
0xffff914d39e0  constant pool (size 16)
0xffff914d3a10  runtime entry
0xffff914d3a1c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = dev
compiler = unknown
Instructions (size = 152)
0xffff914d3aa0     0  sub csp, jssp, #0x8 (8)
0xffff914d3aa4     4  str x3, [jssp, #-8]!
0xffff914d3aa8     8  sub csp, jssp, #0x8 (8)
0xffff914d3aac    12  str x4, [jssp, #-8]!
0xffff914d3ab0    16  ldr x3, pc+88 (addr 0x0000ffff914d3b08)    ;; object: 0x408353d1 Cell for 0
0xffff914d3ab4    20  ldur x3, [x3, #7]
0xffff914d3ab8    24  cmp x3, #0x0 (0)
0xffff914d3abc    28  b.ne #+0x2c (addr 0xffff914d3ae8)
0xffff914d3ac0    32  ldr x5, pc+80 (addr 0x0000ffff914d3b10)    ;; object: 0x40835379 WeakCell for 0x36435c11 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d3ac4    36  ldur x5, [x5, #7]
0xffff914d3ac8    40  tbz w5, #0, #+0x20 (addr 0xffff914d3ae8)
0xffff914d3acc    44  ldursw x4, [x5, #15]
0xffff914d3ad0    48  tbnz w4, #23, #+0x18 (addr 0xffff914d3ae8)
0xffff914d3ad4    52  ldr x4, [jssp], #8
0xffff914d3ad8    56  ldr x3, [jssp], #8
0xffff914d3adc    60  ldr x2, pc+60 (addr 0x0000ffff914d3b18)    ;; object: 0x4080d0c9 <String[3]: dev>
0xffff914d3ae0    64  ldr x16, pc+64 (addr 0x0000ffff914d3b20)    ;; code: HANDLER, StoreTransitionStub, minor: 194563
0xffff914d3ae4    68  br x16
0xffff914d3ae8    72  ldr x2, pc+64 (addr 0x0000ffff914d3b28)    ;; object: 0x4080d0c9 <String[3]: dev>
0xffff914d3aec    76  ldr x4, [jssp], #8
0xffff914d3af0    80  ldr x3, [jssp], #8
0xffff914d3af4    84  ldr x16, pc+60 (addr 0x0000ffff914d3b30)    ;; code: BUILTIN
0xffff914d3af8    88  br x16
0xffff914d3afc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914d3b00    96  d63f03e0       constant
0xffff914d3b04   100  d503201f       constant
0xffff914d3b08   104  408353d1       constant
0xffff914d3b0c   108  00000000       constant
0xffff914d3b10   112  40835379       constant
0xffff914d3b14   116  00000000       constant
0xffff914d3b18   120  4080d0c9       constant
0xffff914d3b1c   124  00000000       constant
0xffff914d3b20   128  914d3980       constant
0xffff914d3b24   132  0000ffff       constant
0xffff914d3b28   136  4080d0c9       constant
0xffff914d3b2c   140  00000000       constant
0xffff914d3b30   144  91422420       constant
0xffff914d3b34   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914d3ab0  embedded object  (0x408353d1 Cell for 0)
0xffff914d3ac0  embedded object  (0x40835379 WeakCell for 0x36435c11 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d3adc  embedded object  (0x4080d0c9 <String[3]: dev>)
0xffff914d3ae0  code target (HANDLER)  (0xffff914d3980)
0xffff914d3ae8  embedded object  (0x4080d0c9 <String[3]: dev>)
0xffff914d3af4  code target (BUILTIN)  (0xffff91422420)
0xffff914d3afc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d3ba0     0  tbz w0, #0, #+0x1c (addr 0xffff914d3bbc)
0xffff914d3ba4     4  ldur x16, [x0, #-1]
0xffff914d3ba8     8  ldr x17, [x26, #120]
0xffff914d3bac    12  cmp x16, x17
0xffff914d3bb0    16  b.ne #+0x60 (addr 0xffff914d3c10)
0xffff914d3bb4    20  ldur d0, [x0, #7]
0xffff914d3bb8    24  b #+0x8 (addr 0xffff914d3bc0)
0xffff914d3bbc    28  scvtf d0, x0, #32
0xffff914d3bc0    32  stur d0, [x1, #31]
0xffff914d3bc4    36  stur x5, [x1, #-1]
0xffff914d3bc8    40  tbz w5, #0, #+0x34 (addr 0xffff914d3bfc)
0xffff914d3bcc    44  sub x2, x1, #0x1 (1)
0xffff914d3bd0    48  and x5, x5, #0xfffffffffff00000
0xffff914d3bd4    52  ldr x5, [x5, #8]
0xffff914d3bd8    56  tbz w5, #1, #+0x24 (addr 0xffff914d3bfc)
0xffff914d3bdc    60  and x5, x1, #0xfffffffffff00000
0xffff914d3be0    64  ldr x5, [x5, #8]
0xffff914d3be4    68  tbz w5, #2, #+0x18 (addr 0xffff914d3bfc)
0xffff914d3be8    72  sub csp, jssp, #0x8 (8)
0xffff914d3bec    76  str lr, [jssp, #-8]!
0xffff914d3bf0    80  ldr x16, pc+24 (addr 0x0000ffff914d3c08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d3bf4    84  blr x16
0xffff914d3bf8    88  ldr lr, [jssp], #8
0xffff914d3bfc    92  ret
0xffff914d3c00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d3c04   100  d63f03e0       constant
0xffff914d3c08   104  91438080       constant
0xffff914d3c0c   108  0000ffff       constant
0xffff914d3c10   112  movz x16, #0x0
0xffff914d3c14   116  sub csp, jssp, #0x10 (16)
0xffff914d3c18   120  stp fp, lr, [jssp, #-16]!
0xffff914d3c1c   124  bl #+0x4 (addr 0xffff914d3c20)
0xffff914d3c20   128  movz x17, #0xa00000000
0xffff914d3c24   132  sub csp, jssp, #0x10 (16)
0xffff914d3c28   136  stp x17, cp, [jssp, #-16]!
0xffff914d3c2c   140  add fp, jssp, #0x10 (16)
0xffff914d3c30   144  ldr x17, pc+24 (addr 0x0000ffff914d3c48)    ;; lazy deoptimization bailout 0
0xffff914d3c34   148  add x17, x17, x16
0xffff914d3c38   152  br x17
0xffff914d3c3c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d3c40   160  d63f03e0       constant
0xffff914d3c44   164  d503201f       constant
0xffff914d3c48   168  91206000       constant
0xffff914d3c4c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d3bf0  code target (STUB)  (0xffff91438080)
0xffff914d3c00  constant pool (size 16)
0xffff914d3c30  runtime entry
0xffff914d3c3c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d3ba0     0  tbz w0, #0, #+0x1c (addr 0xffff914d3bbc)
0xffff914d3ba4     4  ldur x16, [x0, #-1]
0xffff914d3ba8     8  ldr x17, [x26, #120]
0xffff914d3bac    12  cmp x16, x17
0xffff914d3bb0    16  b.ne #+0x60 (addr 0xffff914d3c10)
0xffff914d3bb4    20  ldur d0, [x0, #7]
0xffff914d3bb8    24  b #+0x8 (addr 0xffff914d3bc0)
0xffff914d3bbc    28  scvtf d0, x0, #32
0xffff914d3bc0    32  stur d0, [x1, #31]
0xffff914d3bc4    36  stur x5, [x1, #-1]
0xffff914d3bc8    40  tbz w5, #0, #+0x34 (addr 0xffff914d3bfc)
0xffff914d3bcc    44  sub x2, x1, #0x1 (1)
0xffff914d3bd0    48  and x5, x5, #0xfffffffffff00000
0xffff914d3bd4    52  ldr x5, [x5, #8]
0xffff914d3bd8    56  tbz w5, #1, #+0x24 (addr 0xffff914d3bfc)
0xffff914d3bdc    60  and x5, x1, #0xfffffffffff00000
0xffff914d3be0    64  ldr x5, [x5, #8]
0xffff914d3be4    68  tbz w5, #2, #+0x18 (addr 0xffff914d3bfc)
0xffff914d3be8    72  sub csp, jssp, #0x8 (8)
0xffff914d3bec    76  str lr, [jssp, #-8]!
0xffff914d3bf0    80  ldr x16, pc+24 (addr 0x0000ffff914d3c08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d3bf4    84  blr x16
0xffff914d3bf8    88  ldr lr, [jssp], #8
0xffff914d3bfc    92  ret
0xffff914d3c00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d3c04   100  d63f03e0       constant
0xffff914d3c08   104  91438080       constant
0xffff914d3c0c   108  0000ffff       constant
0xffff914d3c10   112  movz x16, #0x0
0xffff914d3c14   116  sub csp, jssp, #0x10 (16)
0xffff914d3c18   120  stp fp, lr, [jssp, #-16]!
0xffff914d3c1c   124  bl #+0x4 (addr 0xffff914d3c20)
0xffff914d3c20   128  movz x17, #0xa00000000
0xffff914d3c24   132  sub csp, jssp, #0x10 (16)
0xffff914d3c28   136  stp x17, cp, [jssp, #-16]!
0xffff914d3c2c   140  add fp, jssp, #0x10 (16)
0xffff914d3c30   144  ldr x17, pc+24 (addr 0x0000ffff914d3c48)    ;; lazy deoptimization bailout 0
0xffff914d3c34   148  add x17, x17, x16
0xffff914d3c38   152  br x17
0xffff914d3c3c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d3c40   160  d63f03e0       constant
0xffff914d3c44   164  d503201f       constant
0xffff914d3c48   168  91206000       constant
0xffff914d3c4c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d3bf0  code target (STUB)  (0xffff91438080)
0xffff914d3c00  constant pool (size 16)
0xffff914d3c30  runtime entry
0xffff914d3c3c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = mode
compiler = unknown
Instructions (size = 152)
0xffff914d3cc0     0  sub csp, jssp, #0x8 (8)
0xffff914d3cc4     4  str x3, [jssp, #-8]!
0xffff914d3cc8     8  sub csp, jssp, #0x8 (8)
0xffff914d3ccc    12  str x4, [jssp, #-8]!
0xffff914d3cd0    16  ldr x3, pc+88 (addr 0x0000ffff914d3d28)    ;; object: 0x408353d1 Cell for 0
0xffff914d3cd4    20  ldur x3, [x3, #7]
0xffff914d3cd8    24  cmp x3, #0x0 (0)
0xffff914d3cdc    28  b.ne #+0x2c (addr 0xffff914d3d08)
0xffff914d3ce0    32  ldr x5, pc+80 (addr 0x0000ffff914d3d30)    ;; object: 0x408354d9 WeakCell for 0x36435c69 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d3ce4    36  ldur x5, [x5, #7]
0xffff914d3ce8    40  tbz w5, #0, #+0x20 (addr 0xffff914d3d08)
0xffff914d3cec    44  ldursw x4, [x5, #15]
0xffff914d3cf0    48  tbnz w4, #23, #+0x18 (addr 0xffff914d3d08)
0xffff914d3cf4    52  ldr x4, [jssp], #8
0xffff914d3cf8    56  ldr x3, [jssp], #8
0xffff914d3cfc    60  ldr x2, pc+60 (addr 0x0000ffff914d3d38)    ;; object: 0x4080d0e9 <String[4]: mode>
0xffff914d3d00    64  ldr x16, pc+64 (addr 0x0000ffff914d3d40)    ;; code: HANDLER, StoreTransitionStub, minor: 194564
0xffff914d3d04    68  br x16
0xffff914d3d08    72  ldr x2, pc+64 (addr 0x0000ffff914d3d48)    ;; object: 0x4080d0e9 <String[4]: mode>
0xffff914d3d0c    76  ldr x4, [jssp], #8
0xffff914d3d10    80  ldr x3, [jssp], #8
0xffff914d3d14    84  ldr x16, pc+60 (addr 0x0000ffff914d3d50)    ;; code: BUILTIN
0xffff914d3d18    88  br x16
0xffff914d3d1c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914d3d20    96  d63f03e0       constant
0xffff914d3d24   100  d503201f       constant
0xffff914d3d28   104  408353d1       constant
0xffff914d3d2c   108  00000000       constant
0xffff914d3d30   112  408354d9       constant
0xffff914d3d34   116  00000000       constant
0xffff914d3d38   120  4080d0e9       constant
0xffff914d3d3c   124  00000000       constant
0xffff914d3d40   128  914d3ba0       constant
0xffff914d3d44   132  0000ffff       constant
0xffff914d3d48   136  4080d0e9       constant
0xffff914d3d4c   140  00000000       constant
0xffff914d3d50   144  91422420       constant
0xffff914d3d54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914d3cd0  embedded object  (0x408353d1 Cell for 0)
0xffff914d3ce0  embedded object  (0x408354d9 WeakCell for 0x36435c69 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d3cfc  embedded object  (0x4080d0e9 <String[4]: mode>)
0xffff914d3d00  code target (HANDLER)  (0xffff914d3ba0)
0xffff914d3d08  embedded object  (0x4080d0e9 <String[4]: mode>)
0xffff914d3d14  code target (BUILTIN)  (0xffff91422420)
0xffff914d3d1c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d3dc0     0  tbz w0, #0, #+0x1c (addr 0xffff914d3ddc)
0xffff914d3dc4     4  ldur x16, [x0, #-1]
0xffff914d3dc8     8  ldr x17, [x26, #120]
0xffff914d3dcc    12  cmp x16, x17
0xffff914d3dd0    16  b.ne #+0x60 (addr 0xffff914d3e30)
0xffff914d3dd4    20  ldur d0, [x0, #7]
0xffff914d3dd8    24  b #+0x8 (addr 0xffff914d3de0)
0xffff914d3ddc    28  scvtf d0, x0, #32
0xffff914d3de0    32  stur d0, [x1, #39]
0xffff914d3de4    36  stur x5, [x1, #-1]
0xffff914d3de8    40  tbz w5, #0, #+0x34 (addr 0xffff914d3e1c)
0xffff914d3dec    44  sub x2, x1, #0x1 (1)
0xffff914d3df0    48  and x5, x5, #0xfffffffffff00000
0xffff914d3df4    52  ldr x5, [x5, #8]
0xffff914d3df8    56  tbz w5, #1, #+0x24 (addr 0xffff914d3e1c)
0xffff914d3dfc    60  and x5, x1, #0xfffffffffff00000
0xffff914d3e00    64  ldr x5, [x5, #8]
0xffff914d3e04    68  tbz w5, #2, #+0x18 (addr 0xffff914d3e1c)
0xffff914d3e08    72  sub csp, jssp, #0x8 (8)
0xffff914d3e0c    76  str lr, [jssp, #-8]!
0xffff914d3e10    80  ldr x16, pc+24 (addr 0x0000ffff914d3e28)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d3e14    84  blr x16
0xffff914d3e18    88  ldr lr, [jssp], #8
0xffff914d3e1c    92  ret
0xffff914d3e20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d3e24   100  d63f03e0       constant
0xffff914d3e28   104  91438080       constant
0xffff914d3e2c   108  0000ffff       constant
0xffff914d3e30   112  movz x16, #0x0
0xffff914d3e34   116  sub csp, jssp, #0x10 (16)
0xffff914d3e38   120  stp fp, lr, [jssp, #-16]!
0xffff914d3e3c   124  bl #+0x4 (addr 0xffff914d3e40)
0xffff914d3e40   128  movz x17, #0xa00000000
0xffff914d3e44   132  sub csp, jssp, #0x10 (16)
0xffff914d3e48   136  stp x17, cp, [jssp, #-16]!
0xffff914d3e4c   140  add fp, jssp, #0x10 (16)
0xffff914d3e50   144  ldr x17, pc+24 (addr 0x0000ffff914d3e68)    ;; lazy deoptimization bailout 0
0xffff914d3e54   148  add x17, x17, x16
0xffff914d3e58   152  br x17
0xffff914d3e5c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d3e60   160  d63f03e0       constant
0xffff914d3e64   164  d503201f       constant
0xffff914d3e68   168  91206000       constant
0xffff914d3e6c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d3e10  code target (STUB)  (0xffff91438080)
0xffff914d3e20  constant pool (size 16)
0xffff914d3e50  runtime entry
0xffff914d3e5c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d3dc0     0  tbz w0, #0, #+0x1c (addr 0xffff914d3ddc)
0xffff914d3dc4     4  ldur x16, [x0, #-1]
0xffff914d3dc8     8  ldr x17, [x26, #120]
0xffff914d3dcc    12  cmp x16, x17
0xffff914d3dd0    16  b.ne #+0x60 (addr 0xffff914d3e30)
0xffff914d3dd4    20  ldur d0, [x0, #7]
0xffff914d3dd8    24  b #+0x8 (addr 0xffff914d3de0)
0xffff914d3ddc    28  scvtf d0, x0, #32
0xffff914d3de0    32  stur d0, [x1, #39]
0xffff914d3de4    36  stur x5, [x1, #-1]
0xffff914d3de8    40  tbz w5, #0, #+0x34 (addr 0xffff914d3e1c)
0xffff914d3dec    44  sub x2, x1, #0x1 (1)
0xffff914d3df0    48  and x5, x5, #0xfffffffffff00000
0xffff914d3df4    52  ldr x5, [x5, #8]
0xffff914d3df8    56  tbz w5, #1, #+0x24 (addr 0xffff914d3e1c)
0xffff914d3dfc    60  and x5, x1, #0xfffffffffff00000
0xffff914d3e00    64  ldr x5, [x5, #8]
0xffff914d3e04    68  tbz w5, #2, #+0x18 (addr 0xffff914d3e1c)
0xffff914d3e08    72  sub csp, jssp, #0x8 (8)
0xffff914d3e0c    76  str lr, [jssp, #-8]!
0xffff914d3e10    80  ldr x16, pc+24 (addr 0x0000ffff914d3e28)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d3e14    84  blr x16
0xffff914d3e18    88  ldr lr, [jssp], #8
0xffff914d3e1c    92  ret
0xffff914d3e20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d3e24   100  d63f03e0       constant
0xffff914d3e28   104  91438080       constant
0xffff914d3e2c   108  0000ffff       constant
0xffff914d3e30   112  movz x16, #0x0
0xffff914d3e34   116  sub csp, jssp, #0x10 (16)
0xffff914d3e38   120  stp fp, lr, [jssp, #-16]!
0xffff914d3e3c   124  bl #+0x4 (addr 0xffff914d3e40)
0xffff914d3e40   128  movz x17, #0xa00000000
0xffff914d3e44   132  sub csp, jssp, #0x10 (16)
0xffff914d3e48   136  stp x17, cp, [jssp, #-16]!
0xffff914d3e4c   140  add fp, jssp, #0x10 (16)
0xffff914d3e50   144  ldr x17, pc+24 (addr 0x0000ffff914d3e68)    ;; lazy deoptimization bailout 0
0xffff914d3e54   148  add x17, x17, x16
0xffff914d3e58   152  br x17
0xffff914d3e5c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d3e60   160  d63f03e0       constant
0xffff914d3e64   164  d503201f       constant
0xffff914d3e68   168  91206000       constant
0xffff914d3e6c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d3e10  code target (STUB)  (0xffff91438080)
0xffff914d3e20  constant pool (size 16)
0xffff914d3e50  runtime entry
0xffff914d3e5c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = nlink
compiler = unknown
Instructions (size = 152)
0xffff914d3ee0     0  sub csp, jssp, #0x8 (8)
0xffff914d3ee4     4  str x3, [jssp, #-8]!
0xffff914d3ee8     8  sub csp, jssp, #0x8 (8)
0xffff914d3eec    12  str x4, [jssp, #-8]!
0xffff914d3ef0    16  ldr x3, pc+88 (addr 0x0000ffff914d3f48)    ;; object: 0x408353d1 Cell for 0
0xffff914d3ef4    20  ldur x3, [x3, #7]
0xffff914d3ef8    24  cmp x3, #0x0 (0)
0xffff914d3efc    28  b.ne #+0x2c (addr 0xffff914d3f28)
0xffff914d3f00    32  ldr x5, pc+80 (addr 0x0000ffff914d3f50)    ;; object: 0x408355d1 WeakCell for 0x36435cc1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d3f04    36  ldur x5, [x5, #7]
0xffff914d3f08    40  tbz w5, #0, #+0x20 (addr 0xffff914d3f28)
0xffff914d3f0c    44  ldursw x4, [x5, #15]
0xffff914d3f10    48  tbnz w4, #23, #+0x18 (addr 0xffff914d3f28)
0xffff914d3f14    52  ldr x4, [jssp], #8
0xffff914d3f18    56  ldr x3, [jssp], #8
0xffff914d3f1c    60  ldr x2, pc+60 (addr 0x0000ffff914d3f58)    ;; object: 0x4080d109 <String[5]: nlink>
0xffff914d3f20    64  ldr x16, pc+64 (addr 0x0000ffff914d3f60)    ;; code: HANDLER, StoreTransitionStub, minor: 194565
0xffff914d3f24    68  br x16
0xffff914d3f28    72  ldr x2, pc+64 (addr 0x0000ffff914d3f68)    ;; object: 0x4080d109 <String[5]: nlink>
0xffff914d3f2c    76  ldr x4, [jssp], #8
0xffff914d3f30    80  ldr x3, [jssp], #8
0xffff914d3f34    84  ldr x16, pc+60 (addr 0x0000ffff914d3f70)    ;; code: BUILTIN
0xffff914d3f38    88  br x16
0xffff914d3f3c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914d3f40    96  d63f03e0       constant
0xffff914d3f44   100  d503201f       constant
0xffff914d3f48   104  408353d1       constant
0xffff914d3f4c   108  00000000       constant
0xffff914d3f50   112  408355d1       constant
0xffff914d3f54   116  00000000       constant
0xffff914d3f58   120  4080d109       constant
0xffff914d3f5c   124  00000000       constant
0xffff914d3f60   128  914d3dc0       constant
0xffff914d3f64   132  0000ffff       constant
0xffff914d3f68   136  4080d109       constant
0xffff914d3f6c   140  00000000       constant
0xffff914d3f70   144  91422420       constant
0xffff914d3f74   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914d3ef0  embedded object  (0x408353d1 Cell for 0)
0xffff914d3f00  embedded object  (0x408355d1 WeakCell for 0x36435cc1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d3f1c  embedded object  (0x4080d109 <String[5]: nlink>)
0xffff914d3f20  code target (HANDLER)  (0xffff914d3dc0)
0xffff914d3f28  embedded object  (0x4080d109 <String[5]: nlink>)
0xffff914d3f34  code target (BUILTIN)  (0xffff91422420)
0xffff914d3f3c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d3fe0     0  tbz w0, #0, #+0x1c (addr 0xffff914d3ffc)
0xffff914d3fe4     4  ldur x16, [x0, #-1]
0xffff914d3fe8     8  ldr x17, [x26, #120]
0xffff914d3fec    12  cmp x16, x17
0xffff914d3ff0    16  b.ne #+0x60 (addr 0xffff914d4050)
0xffff914d3ff4    20  ldur d0, [x0, #7]
0xffff914d3ff8    24  b #+0x8 (addr 0xffff914d4000)
0xffff914d3ffc    28  scvtf d0, x0, #32
0xffff914d4000    32  stur d0, [x1, #47]
0xffff914d4004    36  stur x5, [x1, #-1]
0xffff914d4008    40  tbz w5, #0, #+0x34 (addr 0xffff914d403c)
0xffff914d400c    44  sub x2, x1, #0x1 (1)
0xffff914d4010    48  and x5, x5, #0xfffffffffff00000
0xffff914d4014    52  ldr x5, [x5, #8]
0xffff914d4018    56  tbz w5, #1, #+0x24 (addr 0xffff914d403c)
0xffff914d401c    60  and x5, x1, #0xfffffffffff00000
0xffff914d4020    64  ldr x5, [x5, #8]
0xffff914d4024    68  tbz w5, #2, #+0x18 (addr 0xffff914d403c)
0xffff914d4028    72  sub csp, jssp, #0x8 (8)
0xffff914d402c    76  str lr, [jssp, #-8]!
0xffff914d4030    80  ldr x16, pc+24 (addr 0x0000ffff914d4048)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d4034    84  blr x16
0xffff914d4038    88  ldr lr, [jssp], #8
0xffff914d403c    92  ret
0xffff914d4040    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d4044   100  d63f03e0       constant
0xffff914d4048   104  91438080       constant
0xffff914d404c   108  0000ffff       constant
0xffff914d4050   112  movz x16, #0x0
0xffff914d4054   116  sub csp, jssp, #0x10 (16)
0xffff914d4058   120  stp fp, lr, [jssp, #-16]!
0xffff914d405c   124  bl #+0x4 (addr 0xffff914d4060)
0xffff914d4060   128  movz x17, #0xa00000000
0xffff914d4064   132  sub csp, jssp, #0x10 (16)
0xffff914d4068   136  stp x17, cp, [jssp, #-16]!
0xffff914d406c   140  add fp, jssp, #0x10 (16)
0xffff914d4070   144  ldr x17, pc+24 (addr 0x0000ffff914d4088)    ;; lazy deoptimization bailout 0
0xffff914d4074   148  add x17, x17, x16
0xffff914d4078   152  br x17
0xffff914d407c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d4080   160  d63f03e0       constant
0xffff914d4084   164  d503201f       constant
0xffff914d4088   168  91206000       constant
0xffff914d408c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d4030  code target (STUB)  (0xffff91438080)
0xffff914d4040  constant pool (size 16)
0xffff914d4070  runtime entry
0xffff914d407c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d3fe0     0  tbz w0, #0, #+0x1c (addr 0xffff914d3ffc)
0xffff914d3fe4     4  ldur x16, [x0, #-1]
0xffff914d3fe8     8  ldr x17, [x26, #120]
0xffff914d3fec    12  cmp x16, x17
0xffff914d3ff0    16  b.ne #+0x60 (addr 0xffff914d4050)
0xffff914d3ff4    20  ldur d0, [x0, #7]
0xffff914d3ff8    24  b #+0x8 (addr 0xffff914d4000)
0xffff914d3ffc    28  scvtf d0, x0, #32
0xffff914d4000    32  stur d0, [x1, #47]
0xffff914d4004    36  stur x5, [x1, #-1]
0xffff914d4008    40  tbz w5, #0, #+0x34 (addr 0xffff914d403c)
0xffff914d400c    44  sub x2, x1, #0x1 (1)
0xffff914d4010    48  and x5, x5, #0xfffffffffff00000
0xffff914d4014    52  ldr x5, [x5, #8]
0xffff914d4018    56  tbz w5, #1, #+0x24 (addr 0xffff914d403c)
0xffff914d401c    60  and x5, x1, #0xfffffffffff00000
0xffff914d4020    64  ldr x5, [x5, #8]
0xffff914d4024    68  tbz w5, #2, #+0x18 (addr 0xffff914d403c)
0xffff914d4028    72  sub csp, jssp, #0x8 (8)
0xffff914d402c    76  str lr, [jssp, #-8]!
0xffff914d4030    80  ldr x16, pc+24 (addr 0x0000ffff914d4048)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d4034    84  blr x16
0xffff914d4038    88  ldr lr, [jssp], #8
0xffff914d403c    92  ret
0xffff914d4040    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d4044   100  d63f03e0       constant
0xffff914d4048   104  91438080       constant
0xffff914d404c   108  0000ffff       constant
0xffff914d4050   112  movz x16, #0x0
0xffff914d4054   116  sub csp, jssp, #0x10 (16)
0xffff914d4058   120  stp fp, lr, [jssp, #-16]!
0xffff914d405c   124  bl #+0x4 (addr 0xffff914d4060)
0xffff914d4060   128  movz x17, #0xa00000000
0xffff914d4064   132  sub csp, jssp, #0x10 (16)
0xffff914d4068   136  stp x17, cp, [jssp, #-16]!
0xffff914d406c   140  add fp, jssp, #0x10 (16)
0xffff914d4070   144  ldr x17, pc+24 (addr 0x0000ffff914d4088)    ;; lazy deoptimization bailout 0
0xffff914d4074   148  add x17, x17, x16
0xffff914d4078   152  br x17
0xffff914d407c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d4080   160  d63f03e0       constant
0xffff914d4084   164  d503201f       constant
0xffff914d4088   168  91206000       constant
0xffff914d408c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d4030  code target (STUB)  (0xffff91438080)
0xffff914d4040  constant pool (size 16)
0xffff914d4070  runtime entry
0xffff914d407c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = uid
compiler = unknown
Instructions (size = 152)
0xffff914d4100     0  sub csp, jssp, #0x8 (8)
0xffff914d4104     4  str x3, [jssp, #-8]!
0xffff914d4108     8  sub csp, jssp, #0x8 (8)
0xffff914d410c    12  str x4, [jssp, #-8]!
0xffff914d4110    16  ldr x3, pc+88 (addr 0x0000ffff914d4168)    ;; object: 0x408353d1 Cell for 0
0xffff914d4114    20  ldur x3, [x3, #7]
0xffff914d4118    24  cmp x3, #0x0 (0)
0xffff914d411c    28  b.ne #+0x2c (addr 0xffff914d4148)
0xffff914d4120    32  ldr x5, pc+80 (addr 0x0000ffff914d4170)    ;; object: 0x408356c9 WeakCell for 0x36435d19 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d4124    36  ldur x5, [x5, #7]
0xffff914d4128    40  tbz w5, #0, #+0x20 (addr 0xffff914d4148)
0xffff914d412c    44  ldursw x4, [x5, #15]
0xffff914d4130    48  tbnz w4, #23, #+0x18 (addr 0xffff914d4148)
0xffff914d4134    52  ldr x4, [jssp], #8
0xffff914d4138    56  ldr x3, [jssp], #8
0xffff914d413c    60  ldr x2, pc+60 (addr 0x0000ffff914d4178)    ;; object: 0x49bb33a9 <String[3]: uid>
0xffff914d4140    64  ldr x16, pc+64 (addr 0x0000ffff914d4180)    ;; code: HANDLER, StoreTransitionStub, minor: 194566
0xffff914d4144    68  br x16
0xffff914d4148    72  ldr x2, pc+64 (addr 0x0000ffff914d4188)    ;; object: 0x49bb33a9 <String[3]: uid>
0xffff914d414c    76  ldr x4, [jssp], #8
0xffff914d4150    80  ldr x3, [jssp], #8
0xffff914d4154    84  ldr x16, pc+60 (addr 0x0000ffff914d4190)    ;; code: BUILTIN
0xffff914d4158    88  br x16
0xffff914d415c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914d4160    96  d63f03e0       constant
0xffff914d4164   100  d503201f       constant
0xffff914d4168   104  408353d1       constant
0xffff914d416c   108  00000000       constant
0xffff914d4170   112  408356c9       constant
0xffff914d4174   116  00000000       constant
0xffff914d4178   120  49bb33a9       constant
0xffff914d417c   124  00000000       constant
0xffff914d4180   128  914d3fe0       constant
0xffff914d4184   132  0000ffff       constant
0xffff914d4188   136  49bb33a9       constant
0xffff914d418c   140  00000000       constant
0xffff914d4190   144  91422420       constant
0xffff914d4194   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914d4110  embedded object  (0x408353d1 Cell for 0)
0xffff914d4120  embedded object  (0x408356c9 WeakCell for 0x36435d19 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d413c  embedded object  (0x49bb33a9 <String[3]: uid>)
0xffff914d4140  code target (HANDLER)  (0xffff914d3fe0)
0xffff914d4148  embedded object  (0x49bb33a9 <String[3]: uid>)
0xffff914d4154  code target (BUILTIN)  (0xffff91422420)
0xffff914d415c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d4200     0  tbz w0, #0, #+0x1c (addr 0xffff914d421c)
0xffff914d4204     4  ldur x16, [x0, #-1]
0xffff914d4208     8  ldr x17, [x26, #120]
0xffff914d420c    12  cmp x16, x17
0xffff914d4210    16  b.ne #+0x60 (addr 0xffff914d4270)
0xffff914d4214    20  ldur d0, [x0, #7]
0xffff914d4218    24  b #+0x8 (addr 0xffff914d4220)
0xffff914d421c    28  scvtf d0, x0, #32
0xffff914d4220    32  stur d0, [x1, #55]
0xffff914d4224    36  stur x5, [x1, #-1]
0xffff914d4228    40  tbz w5, #0, #+0x34 (addr 0xffff914d425c)
0xffff914d422c    44  sub x2, x1, #0x1 (1)
0xffff914d4230    48  and x5, x5, #0xfffffffffff00000
0xffff914d4234    52  ldr x5, [x5, #8]
0xffff914d4238    56  tbz w5, #1, #+0x24 (addr 0xffff914d425c)
0xffff914d423c    60  and x5, x1, #0xfffffffffff00000
0xffff914d4240    64  ldr x5, [x5, #8]
0xffff914d4244    68  tbz w5, #2, #+0x18 (addr 0xffff914d425c)
0xffff914d4248    72  sub csp, jssp, #0x8 (8)
0xffff914d424c    76  str lr, [jssp, #-8]!
0xffff914d4250    80  ldr x16, pc+24 (addr 0x0000ffff914d4268)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d4254    84  blr x16
0xffff914d4258    88  ldr lr, [jssp], #8
0xffff914d425c    92  ret
0xffff914d4260    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d4264   100  d63f03e0       constant
0xffff914d4268   104  91438080       constant
0xffff914d426c   108  0000ffff       constant
0xffff914d4270   112  movz x16, #0x0
0xffff914d4274   116  sub csp, jssp, #0x10 (16)
0xffff914d4278   120  stp fp, lr, [jssp, #-16]!
0xffff914d427c   124  bl #+0x4 (addr 0xffff914d4280)
0xffff914d4280   128  movz x17, #0xa00000000
0xffff914d4284   132  sub csp, jssp, #0x10 (16)
0xffff914d4288   136  stp x17, cp, [jssp, #-16]!
0xffff914d428c   140  add fp, jssp, #0x10 (16)
0xffff914d4290   144  ldr x17, pc+24 (addr 0x0000ffff914d42a8)    ;; lazy deoptimization bailout 0
0xffff914d4294   148  add x17, x17, x16
0xffff914d4298   152  br x17
0xffff914d429c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d42a0   160  d63f03e0       constant
0xffff914d42a4   164  d503201f       constant
0xffff914d42a8   168  91206000       constant
0xffff914d42ac   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d4250  code target (STUB)  (0xffff91438080)
0xffff914d4260  constant pool (size 16)
0xffff914d4290  runtime entry
0xffff914d429c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d4200     0  tbz w0, #0, #+0x1c (addr 0xffff914d421c)
0xffff914d4204     4  ldur x16, [x0, #-1]
0xffff914d4208     8  ldr x17, [x26, #120]
0xffff914d420c    12  cmp x16, x17
0xffff914d4210    16  b.ne #+0x60 (addr 0xffff914d4270)
0xffff914d4214    20  ldur d0, [x0, #7]
0xffff914d4218    24  b #+0x8 (addr 0xffff914d4220)
0xffff914d421c    28  scvtf d0, x0, #32
0xffff914d4220    32  stur d0, [x1, #55]
0xffff914d4224    36  stur x5, [x1, #-1]
0xffff914d4228    40  tbz w5, #0, #+0x34 (addr 0xffff914d425c)
0xffff914d422c    44  sub x2, x1, #0x1 (1)
0xffff914d4230    48  and x5, x5, #0xfffffffffff00000
0xffff914d4234    52  ldr x5, [x5, #8]
0xffff914d4238    56  tbz w5, #1, #+0x24 (addr 0xffff914d425c)
0xffff914d423c    60  and x5, x1, #0xfffffffffff00000
0xffff914d4240    64  ldr x5, [x5, #8]
0xffff914d4244    68  tbz w5, #2, #+0x18 (addr 0xffff914d425c)
0xffff914d4248    72  sub csp, jssp, #0x8 (8)
0xffff914d424c    76  str lr, [jssp, #-8]!
0xffff914d4250    80  ldr x16, pc+24 (addr 0x0000ffff914d4268)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d4254    84  blr x16
0xffff914d4258    88  ldr lr, [jssp], #8
0xffff914d425c    92  ret
0xffff914d4260    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d4264   100  d63f03e0       constant
0xffff914d4268   104  91438080       constant
0xffff914d426c   108  0000ffff       constant
0xffff914d4270   112  movz x16, #0x0
0xffff914d4274   116  sub csp, jssp, #0x10 (16)
0xffff914d4278   120  stp fp, lr, [jssp, #-16]!
0xffff914d427c   124  bl #+0x4 (addr 0xffff914d4280)
0xffff914d4280   128  movz x17, #0xa00000000
0xffff914d4284   132  sub csp, jssp, #0x10 (16)
0xffff914d4288   136  stp x17, cp, [jssp, #-16]!
0xffff914d428c   140  add fp, jssp, #0x10 (16)
0xffff914d4290   144  ldr x17, pc+24 (addr 0x0000ffff914d42a8)    ;; lazy deoptimization bailout 0
0xffff914d4294   148  add x17, x17, x16
0xffff914d4298   152  br x17
0xffff914d429c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d42a0   160  d63f03e0       constant
0xffff914d42a4   164  d503201f       constant
0xffff914d42a8   168  91206000       constant
0xffff914d42ac   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d4250  code target (STUB)  (0xffff91438080)
0xffff914d4260  constant pool (size 16)
0xffff914d4290  runtime entry
0xffff914d429c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = gid
compiler = unknown
Instructions (size = 152)
0xffff914d4320     0  sub csp, jssp, #0x8 (8)
0xffff914d4324     4  str x3, [jssp, #-8]!
0xffff914d4328     8  sub csp, jssp, #0x8 (8)
0xffff914d432c    12  str x4, [jssp, #-8]!
0xffff914d4330    16  ldr x3, pc+88 (addr 0x0000ffff914d4388)    ;; object: 0x408353d1 Cell for 0
0xffff914d4334    20  ldur x3, [x3, #7]
0xffff914d4338    24  cmp x3, #0x0 (0)
0xffff914d433c    28  b.ne #+0x2c (addr 0xffff914d4368)
0xffff914d4340    32  ldr x5, pc+80 (addr 0x0000ffff914d4390)    ;; object: 0x408357c1 WeakCell for 0x36435d71 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d4344    36  ldur x5, [x5, #7]
0xffff914d4348    40  tbz w5, #0, #+0x20 (addr 0xffff914d4368)
0xffff914d434c    44  ldursw x4, [x5, #15]
0xffff914d4350    48  tbnz w4, #23, #+0x18 (addr 0xffff914d4368)
0xffff914d4354    52  ldr x4, [jssp], #8
0xffff914d4358    56  ldr x3, [jssp], #8
0xffff914d435c    60  ldr x2, pc+60 (addr 0x0000ffff914d4398)    ;; object: 0x49bb2771 <String[3]: gid>
0xffff914d4360    64  ldr x16, pc+64 (addr 0x0000ffff914d43a0)    ;; code: HANDLER, StoreTransitionStub, minor: 194567
0xffff914d4364    68  br x16
0xffff914d4368    72  ldr x2, pc+64 (addr 0x0000ffff914d43a8)    ;; object: 0x49bb2771 <String[3]: gid>
0xffff914d436c    76  ldr x4, [jssp], #8
0xffff914d4370    80  ldr x3, [jssp], #8
0xffff914d4374    84  ldr x16, pc+60 (addr 0x0000ffff914d43b0)    ;; code: BUILTIN
0xffff914d4378    88  br x16
0xffff914d437c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914d4380    96  d63f03e0       constant
0xffff914d4384   100  d503201f       constant
0xffff914d4388   104  408353d1       constant
0xffff914d438c   108  00000000       constant
0xffff914d4390   112  408357c1       constant
0xffff914d4394   116  00000000       constant
0xffff914d4398   120  49bb2771       constant
0xffff914d439c   124  00000000       constant
0xffff914d43a0   128  914d4200       constant
0xffff914d43a4   132  0000ffff       constant
0xffff914d43a8   136  49bb2771       constant
0xffff914d43ac   140  00000000       constant
0xffff914d43b0   144  91422420       constant
0xffff914d43b4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914d4330  embedded object  (0x408353d1 Cell for 0)
0xffff914d4340  embedded object  (0x408357c1 WeakCell for 0x36435d71 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d435c  embedded object  (0x49bb2771 <String[3]: gid>)
0xffff914d4360  code target (HANDLER)  (0xffff914d4200)
0xffff914d4368  embedded object  (0x49bb2771 <String[3]: gid>)
0xffff914d4374  code target (BUILTIN)  (0xffff91422420)
0xffff914d437c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d4420     0  tbz w0, #0, #+0x1c (addr 0xffff914d443c)
0xffff914d4424     4  ldur x16, [x0, #-1]
0xffff914d4428     8  ldr x17, [x26, #120]
0xffff914d442c    12  cmp x16, x17
0xffff914d4430    16  b.ne #+0x60 (addr 0xffff914d4490)
0xffff914d4434    20  ldur d0, [x0, #7]
0xffff914d4438    24  b #+0x8 (addr 0xffff914d4440)
0xffff914d443c    28  scvtf d0, x0, #32
0xffff914d4440    32  stur d0, [x1, #63]
0xffff914d4444    36  stur x5, [x1, #-1]
0xffff914d4448    40  tbz w5, #0, #+0x34 (addr 0xffff914d447c)
0xffff914d444c    44  sub x2, x1, #0x1 (1)
0xffff914d4450    48  and x5, x5, #0xfffffffffff00000
0xffff914d4454    52  ldr x5, [x5, #8]
0xffff914d4458    56  tbz w5, #1, #+0x24 (addr 0xffff914d447c)
0xffff914d445c    60  and x5, x1, #0xfffffffffff00000
0xffff914d4460    64  ldr x5, [x5, #8]
0xffff914d4464    68  tbz w5, #2, #+0x18 (addr 0xffff914d447c)
0xffff914d4468    72  sub csp, jssp, #0x8 (8)
0xffff914d446c    76  str lr, [jssp, #-8]!
0xffff914d4470    80  ldr x16, pc+24 (addr 0x0000ffff914d4488)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d4474    84  blr x16
0xffff914d4478    88  ldr lr, [jssp], #8
0xffff914d447c    92  ret
0xffff914d4480    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d4484   100  d63f03e0       constant
0xffff914d4488   104  91438080       constant
0xffff914d448c   108  0000ffff       constant
0xffff914d4490   112  movz x16, #0x0
0xffff914d4494   116  sub csp, jssp, #0x10 (16)
0xffff914d4498   120  stp fp, lr, [jssp, #-16]!
0xffff914d449c   124  bl #+0x4 (addr 0xffff914d44a0)
0xffff914d44a0   128  movz x17, #0xa00000000
0xffff914d44a4   132  sub csp, jssp, #0x10 (16)
0xffff914d44a8   136  stp x17, cp, [jssp, #-16]!
0xffff914d44ac   140  add fp, jssp, #0x10 (16)
0xffff914d44b0   144  ldr x17, pc+24 (addr 0x0000ffff914d44c8)    ;; lazy deoptimization bailout 0
0xffff914d44b4   148  add x17, x17, x16
0xffff914d44b8   152  br x17
0xffff914d44bc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d44c0   160  d63f03e0       constant
0xffff914d44c4   164  d503201f       constant
0xffff914d44c8   168  91206000       constant
0xffff914d44cc   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d4470  code target (STUB)  (0xffff91438080)
0xffff914d4480  constant pool (size 16)
0xffff914d44b0  runtime entry
0xffff914d44bc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d4420     0  tbz w0, #0, #+0x1c (addr 0xffff914d443c)
0xffff914d4424     4  ldur x16, [x0, #-1]
0xffff914d4428     8  ldr x17, [x26, #120]
0xffff914d442c    12  cmp x16, x17
0xffff914d4430    16  b.ne #+0x60 (addr 0xffff914d4490)
0xffff914d4434    20  ldur d0, [x0, #7]
0xffff914d4438    24  b #+0x8 (addr 0xffff914d4440)
0xffff914d443c    28  scvtf d0, x0, #32
0xffff914d4440    32  stur d0, [x1, #63]
0xffff914d4444    36  stur x5, [x1, #-1]
0xffff914d4448    40  tbz w5, #0, #+0x34 (addr 0xffff914d447c)
0xffff914d444c    44  sub x2, x1, #0x1 (1)
0xffff914d4450    48  and x5, x5, #0xfffffffffff00000
0xffff914d4454    52  ldr x5, [x5, #8]
0xffff914d4458    56  tbz w5, #1, #+0x24 (addr 0xffff914d447c)
0xffff914d445c    60  and x5, x1, #0xfffffffffff00000
0xffff914d4460    64  ldr x5, [x5, #8]
0xffff914d4464    68  tbz w5, #2, #+0x18 (addr 0xffff914d447c)
0xffff914d4468    72  sub csp, jssp, #0x8 (8)
0xffff914d446c    76  str lr, [jssp, #-8]!
0xffff914d4470    80  ldr x16, pc+24 (addr 0x0000ffff914d4488)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d4474    84  blr x16
0xffff914d4478    88  ldr lr, [jssp], #8
0xffff914d447c    92  ret
0xffff914d4480    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d4484   100  d63f03e0       constant
0xffff914d4488   104  91438080       constant
0xffff914d448c   108  0000ffff       constant
0xffff914d4490   112  movz x16, #0x0
0xffff914d4494   116  sub csp, jssp, #0x10 (16)
0xffff914d4498   120  stp fp, lr, [jssp, #-16]!
0xffff914d449c   124  bl #+0x4 (addr 0xffff914d44a0)
0xffff914d44a0   128  movz x17, #0xa00000000
0xffff914d44a4   132  sub csp, jssp, #0x10 (16)
0xffff914d44a8   136  stp x17, cp, [jssp, #-16]!
0xffff914d44ac   140  add fp, jssp, #0x10 (16)
0xffff914d44b0   144  ldr x17, pc+24 (addr 0x0000ffff914d44c8)    ;; lazy deoptimization bailout 0
0xffff914d44b4   148  add x17, x17, x16
0xffff914d44b8   152  br x17
0xffff914d44bc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d44c0   160  d63f03e0       constant
0xffff914d44c4   164  d503201f       constant
0xffff914d44c8   168  91206000       constant
0xffff914d44cc   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d4470  code target (STUB)  (0xffff91438080)
0xffff914d4480  constant pool (size 16)
0xffff914d44b0  runtime entry
0xffff914d44bc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = rdev
compiler = unknown
Instructions (size = 152)
0xffff914d4540     0  sub csp, jssp, #0x8 (8)
0xffff914d4544     4  str x3, [jssp, #-8]!
0xffff914d4548     8  sub csp, jssp, #0x8 (8)
0xffff914d454c    12  str x4, [jssp, #-8]!
0xffff914d4550    16  ldr x3, pc+88 (addr 0x0000ffff914d45a8)    ;; object: 0x408353d1 Cell for 0
0xffff914d4554    20  ldur x3, [x3, #7]
0xffff914d4558    24  cmp x3, #0x0 (0)
0xffff914d455c    28  b.ne #+0x2c (addr 0xffff914d4588)
0xffff914d4560    32  ldr x5, pc+80 (addr 0x0000ffff914d45b0)    ;; object: 0x408358b9 WeakCell for 0x36435dc9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d4564    36  ldur x5, [x5, #7]
0xffff914d4568    40  tbz w5, #0, #+0x20 (addr 0xffff914d4588)
0xffff914d456c    44  ldursw x4, [x5, #15]
0xffff914d4570    48  tbnz w4, #23, #+0x18 (addr 0xffff914d4588)
0xffff914d4574    52  ldr x4, [jssp], #8
0xffff914d4578    56  ldr x3, [jssp], #8
0xffff914d457c    60  ldr x2, pc+60 (addr 0x0000ffff914d45b8)    ;; object: 0x4080d129 <String[4]: rdev>
0xffff914d4580    64  ldr x16, pc+64 (addr 0x0000ffff914d45c0)    ;; code: HANDLER, StoreTransitionStub, minor: 194568
0xffff914d4584    68  br x16
0xffff914d4588    72  ldr x2, pc+64 (addr 0x0000ffff914d45c8)    ;; object: 0x4080d129 <String[4]: rdev>
0xffff914d458c    76  ldr x4, [jssp], #8
0xffff914d4590    80  ldr x3, [jssp], #8
0xffff914d4594    84  ldr x16, pc+60 (addr 0x0000ffff914d45d0)    ;; code: BUILTIN
0xffff914d4598    88  br x16
0xffff914d459c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914d45a0    96  d63f03e0       constant
0xffff914d45a4   100  d503201f       constant
0xffff914d45a8   104  408353d1       constant
0xffff914d45ac   108  00000000       constant
0xffff914d45b0   112  408358b9       constant
0xffff914d45b4   116  00000000       constant
0xffff914d45b8   120  4080d129       constant
0xffff914d45bc   124  00000000       constant
0xffff914d45c0   128  914d4420       constant
0xffff914d45c4   132  0000ffff       constant
0xffff914d45c8   136  4080d129       constant
0xffff914d45cc   140  00000000       constant
0xffff914d45d0   144  91422420       constant
0xffff914d45d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914d4550  embedded object  (0x408353d1 Cell for 0)
0xffff914d4560  embedded object  (0x408358b9 WeakCell for 0x36435dc9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d457c  embedded object  (0x4080d129 <String[4]: rdev>)
0xffff914d4580  code target (HANDLER)  (0xffff914d4420)
0xffff914d4588  embedded object  (0x4080d129 <String[4]: rdev>)
0xffff914d4594  code target (BUILTIN)  (0xffff91422420)
0xffff914d459c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d4640     0  tbz w0, #0, #+0x1c (addr 0xffff914d465c)
0xffff914d4644     4  ldur x16, [x0, #-1]
0xffff914d4648     8  ldr x17, [x26, #120]
0xffff914d464c    12  cmp x16, x17
0xffff914d4650    16  b.ne #+0x60 (addr 0xffff914d46b0)
0xffff914d4654    20  ldur d0, [x0, #7]
0xffff914d4658    24  b #+0x8 (addr 0xffff914d4660)
0xffff914d465c    28  scvtf d0, x0, #32
0xffff914d4660    32  stur d0, [x1, #71]
0xffff914d4664    36  stur x5, [x1, #-1]
0xffff914d4668    40  tbz w5, #0, #+0x34 (addr 0xffff914d469c)
0xffff914d466c    44  sub x2, x1, #0x1 (1)
0xffff914d4670    48  and x5, x5, #0xfffffffffff00000
0xffff914d4674    52  ldr x5, [x5, #8]
0xffff914d4678    56  tbz w5, #1, #+0x24 (addr 0xffff914d469c)
0xffff914d467c    60  and x5, x1, #0xfffffffffff00000
0xffff914d4680    64  ldr x5, [x5, #8]
0xffff914d4684    68  tbz w5, #2, #+0x18 (addr 0xffff914d469c)
0xffff914d4688    72  sub csp, jssp, #0x8 (8)
0xffff914d468c    76  str lr, [jssp, #-8]!
0xffff914d4690    80  ldr x16, pc+24 (addr 0x0000ffff914d46a8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d4694    84  blr x16
0xffff914d4698    88  ldr lr, [jssp], #8
0xffff914d469c    92  ret
0xffff914d46a0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d46a4   100  d63f03e0       constant
0xffff914d46a8   104  91438080       constant
0xffff914d46ac   108  0000ffff       constant
0xffff914d46b0   112  movz x16, #0x0
0xffff914d46b4   116  sub csp, jssp, #0x10 (16)
0xffff914d46b8   120  stp fp, lr, [jssp, #-16]!
0xffff914d46bc   124  bl #+0x4 (addr 0xffff914d46c0)
0xffff914d46c0   128  movz x17, #0xa00000000
0xffff914d46c4   132  sub csp, jssp, #0x10 (16)
0xffff914d46c8   136  stp x17, cp, [jssp, #-16]!
0xffff914d46cc   140  add fp, jssp, #0x10 (16)
0xffff914d46d0   144  ldr x17, pc+24 (addr 0x0000ffff914d46e8)    ;; lazy deoptimization bailout 0
0xffff914d46d4   148  add x17, x17, x16
0xffff914d46d8   152  br x17
0xffff914d46dc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d46e0   160  d63f03e0       constant
0xffff914d46e4   164  d503201f       constant
0xffff914d46e8   168  91206000       constant
0xffff914d46ec   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d4690  code target (STUB)  (0xffff91438080)
0xffff914d46a0  constant pool (size 16)
0xffff914d46d0  runtime entry
0xffff914d46dc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d4640     0  tbz w0, #0, #+0x1c (addr 0xffff914d465c)
0xffff914d4644     4  ldur x16, [x0, #-1]
0xffff914d4648     8  ldr x17, [x26, #120]
0xffff914d464c    12  cmp x16, x17
0xffff914d4650    16  b.ne #+0x60 (addr 0xffff914d46b0)
0xffff914d4654    20  ldur d0, [x0, #7]
0xffff914d4658    24  b #+0x8 (addr 0xffff914d4660)
0xffff914d465c    28  scvtf d0, x0, #32
0xffff914d4660    32  stur d0, [x1, #71]
0xffff914d4664    36  stur x5, [x1, #-1]
0xffff914d4668    40  tbz w5, #0, #+0x34 (addr 0xffff914d469c)
0xffff914d466c    44  sub x2, x1, #0x1 (1)
0xffff914d4670    48  and x5, x5, #0xfffffffffff00000
0xffff914d4674    52  ldr x5, [x5, #8]
0xffff914d4678    56  tbz w5, #1, #+0x24 (addr 0xffff914d469c)
0xffff914d467c    60  and x5, x1, #0xfffffffffff00000
0xffff914d4680    64  ldr x5, [x5, #8]
0xffff914d4684    68  tbz w5, #2, #+0x18 (addr 0xffff914d469c)
0xffff914d4688    72  sub csp, jssp, #0x8 (8)
0xffff914d468c    76  str lr, [jssp, #-8]!
0xffff914d4690    80  ldr x16, pc+24 (addr 0x0000ffff914d46a8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d4694    84  blr x16
0xffff914d4698    88  ldr lr, [jssp], #8
0xffff914d469c    92  ret
0xffff914d46a0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d46a4   100  d63f03e0       constant
0xffff914d46a8   104  91438080       constant
0xffff914d46ac   108  0000ffff       constant
0xffff914d46b0   112  movz x16, #0x0
0xffff914d46b4   116  sub csp, jssp, #0x10 (16)
0xffff914d46b8   120  stp fp, lr, [jssp, #-16]!
0xffff914d46bc   124  bl #+0x4 (addr 0xffff914d46c0)
0xffff914d46c0   128  movz x17, #0xa00000000
0xffff914d46c4   132  sub csp, jssp, #0x10 (16)
0xffff914d46c8   136  stp x17, cp, [jssp, #-16]!
0xffff914d46cc   140  add fp, jssp, #0x10 (16)
0xffff914d46d0   144  ldr x17, pc+24 (addr 0x0000ffff914d46e8)    ;; lazy deoptimization bailout 0
0xffff914d46d4   148  add x17, x17, x16
0xffff914d46d8   152  br x17
0xffff914d46dc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d46e0   160  d63f03e0       constant
0xffff914d46e4   164  d503201f       constant
0xffff914d46e8   168  91206000       constant
0xffff914d46ec   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d4690  code target (STUB)  (0xffff91438080)
0xffff914d46a0  constant pool (size 16)
0xffff914d46d0  runtime entry
0xffff914d46dc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = blksize
compiler = unknown
Instructions (size = 152)
0xffff914d4760     0  sub csp, jssp, #0x8 (8)
0xffff914d4764     4  str x3, [jssp, #-8]!
0xffff914d4768     8  sub csp, jssp, #0x8 (8)
0xffff914d476c    12  str x4, [jssp, #-8]!
0xffff914d4770    16  ldr x3, pc+88 (addr 0x0000ffff914d47c8)    ;; object: 0x408353d1 Cell for 0
0xffff914d4774    20  ldur x3, [x3, #7]
0xffff914d4778    24  cmp x3, #0x0 (0)
0xffff914d477c    28  b.ne #+0x2c (addr 0xffff914d47a8)
0xffff914d4780    32  ldr x5, pc+80 (addr 0x0000ffff914d47d0)    ;; object: 0x408359b1 WeakCell for 0x36435e21 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d4784    36  ldur x5, [x5, #7]
0xffff914d4788    40  tbz w5, #0, #+0x20 (addr 0xffff914d47a8)
0xffff914d478c    44  ldursw x4, [x5, #15]
0xffff914d4790    48  tbnz w4, #23, #+0x18 (addr 0xffff914d47a8)
0xffff914d4794    52  ldr x4, [jssp], #8
0xffff914d4798    56  ldr x3, [jssp], #8
0xffff914d479c    60  ldr x2, pc+60 (addr 0x0000ffff914d47d8)    ;; object: 0x4080d149 <String[7]: blksize>
0xffff914d47a0    64  ldr x16, pc+64 (addr 0x0000ffff914d47e0)    ;; code: HANDLER, StoreTransitionStub, minor: 194569
0xffff914d47a4    68  br x16
0xffff914d47a8    72  ldr x2, pc+64 (addr 0x0000ffff914d47e8)    ;; object: 0x4080d149 <String[7]: blksize>
0xffff914d47ac    76  ldr x4, [jssp], #8
0xffff914d47b0    80  ldr x3, [jssp], #8
0xffff914d47b4    84  ldr x16, pc+60 (addr 0x0000ffff914d47f0)    ;; code: BUILTIN
0xffff914d47b8    88  br x16
0xffff914d47bc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914d47c0    96  d63f03e0       constant
0xffff914d47c4   100  d503201f       constant
0xffff914d47c8   104  408353d1       constant
0xffff914d47cc   108  00000000       constant
0xffff914d47d0   112  408359b1       constant
0xffff914d47d4   116  00000000       constant
0xffff914d47d8   120  4080d149       constant
0xffff914d47dc   124  00000000       constant
0xffff914d47e0   128  914d4640       constant
0xffff914d47e4   132  0000ffff       constant
0xffff914d47e8   136  4080d149       constant
0xffff914d47ec   140  00000000       constant
0xffff914d47f0   144  91422420       constant
0xffff914d47f4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914d4770  embedded object  (0x408353d1 Cell for 0)
0xffff914d4780  embedded object  (0x408359b1 WeakCell for 0x36435e21 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d479c  embedded object  (0x4080d149 <String[7]: blksize>)
0xffff914d47a0  code target (HANDLER)  (0xffff914d4640)
0xffff914d47a8  embedded object  (0x4080d149 <String[7]: blksize>)
0xffff914d47b4  code target (BUILTIN)  (0xffff91422420)
0xffff914d47bc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d4860     0  tbz w0, #0, #+0x1c (addr 0xffff914d487c)
0xffff914d4864     4  ldur x16, [x0, #-1]
0xffff914d4868     8  ldr x17, [x26, #120]
0xffff914d486c    12  cmp x16, x17
0xffff914d4870    16  b.ne #+0x60 (addr 0xffff914d48d0)
0xffff914d4874    20  ldur d0, [x0, #7]
0xffff914d4878    24  b #+0x8 (addr 0xffff914d4880)
0xffff914d487c    28  scvtf d0, x0, #32
0xffff914d4880    32  stur d0, [x1, #79]
0xffff914d4884    36  stur x5, [x1, #-1]
0xffff914d4888    40  tbz w5, #0, #+0x34 (addr 0xffff914d48bc)
0xffff914d488c    44  sub x2, x1, #0x1 (1)
0xffff914d4890    48  and x5, x5, #0xfffffffffff00000
0xffff914d4894    52  ldr x5, [x5, #8]
0xffff914d4898    56  tbz w5, #1, #+0x24 (addr 0xffff914d48bc)
0xffff914d489c    60  and x5, x1, #0xfffffffffff00000
0xffff914d48a0    64  ldr x5, [x5, #8]
0xffff914d48a4    68  tbz w5, #2, #+0x18 (addr 0xffff914d48bc)
0xffff914d48a8    72  sub csp, jssp, #0x8 (8)
0xffff914d48ac    76  str lr, [jssp, #-8]!
0xffff914d48b0    80  ldr x16, pc+24 (addr 0x0000ffff914d48c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d48b4    84  blr x16
0xffff914d48b8    88  ldr lr, [jssp], #8
0xffff914d48bc    92  ret
0xffff914d48c0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d48c4   100  d63f03e0       constant
0xffff914d48c8   104  91438080       constant
0xffff914d48cc   108  0000ffff       constant
0xffff914d48d0   112  movz x16, #0x0
0xffff914d48d4   116  sub csp, jssp, #0x10 (16)
0xffff914d48d8   120  stp fp, lr, [jssp, #-16]!
0xffff914d48dc   124  bl #+0x4 (addr 0xffff914d48e0)
0xffff914d48e0   128  movz x17, #0xa00000000
0xffff914d48e4   132  sub csp, jssp, #0x10 (16)
0xffff914d48e8   136  stp x17, cp, [jssp, #-16]!
0xffff914d48ec   140  add fp, jssp, #0x10 (16)
0xffff914d48f0   144  ldr x17, pc+24 (addr 0x0000ffff914d4908)    ;; lazy deoptimization bailout 0
0xffff914d48f4   148  add x17, x17, x16
0xffff914d48f8   152  br x17
0xffff914d48fc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d4900   160  d63f03e0       constant
0xffff914d4904   164  d503201f       constant
0xffff914d4908   168  91206000       constant
0xffff914d490c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d48b0  code target (STUB)  (0xffff91438080)
0xffff914d48c0  constant pool (size 16)
0xffff914d48f0  runtime entry
0xffff914d48fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d4860     0  tbz w0, #0, #+0x1c (addr 0xffff914d487c)
0xffff914d4864     4  ldur x16, [x0, #-1]
0xffff914d4868     8  ldr x17, [x26, #120]
0xffff914d486c    12  cmp x16, x17
0xffff914d4870    16  b.ne #+0x60 (addr 0xffff914d48d0)
0xffff914d4874    20  ldur d0, [x0, #7]
0xffff914d4878    24  b #+0x8 (addr 0xffff914d4880)
0xffff914d487c    28  scvtf d0, x0, #32
0xffff914d4880    32  stur d0, [x1, #79]
0xffff914d4884    36  stur x5, [x1, #-1]
0xffff914d4888    40  tbz w5, #0, #+0x34 (addr 0xffff914d48bc)
0xffff914d488c    44  sub x2, x1, #0x1 (1)
0xffff914d4890    48  and x5, x5, #0xfffffffffff00000
0xffff914d4894    52  ldr x5, [x5, #8]
0xffff914d4898    56  tbz w5, #1, #+0x24 (addr 0xffff914d48bc)
0xffff914d489c    60  and x5, x1, #0xfffffffffff00000
0xffff914d48a0    64  ldr x5, [x5, #8]
0xffff914d48a4    68  tbz w5, #2, #+0x18 (addr 0xffff914d48bc)
0xffff914d48a8    72  sub csp, jssp, #0x8 (8)
0xffff914d48ac    76  str lr, [jssp, #-8]!
0xffff914d48b0    80  ldr x16, pc+24 (addr 0x0000ffff914d48c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d48b4    84  blr x16
0xffff914d48b8    88  ldr lr, [jssp], #8
0xffff914d48bc    92  ret
0xffff914d48c0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d48c4   100  d63f03e0       constant
0xffff914d48c8   104  91438080       constant
0xffff914d48cc   108  0000ffff       constant
0xffff914d48d0   112  movz x16, #0x0
0xffff914d48d4   116  sub csp, jssp, #0x10 (16)
0xffff914d48d8   120  stp fp, lr, [jssp, #-16]!
0xffff914d48dc   124  bl #+0x4 (addr 0xffff914d48e0)
0xffff914d48e0   128  movz x17, #0xa00000000
0xffff914d48e4   132  sub csp, jssp, #0x10 (16)
0xffff914d48e8   136  stp x17, cp, [jssp, #-16]!
0xffff914d48ec   140  add fp, jssp, #0x10 (16)
0xffff914d48f0   144  ldr x17, pc+24 (addr 0x0000ffff914d4908)    ;; lazy deoptimization bailout 0
0xffff914d48f4   148  add x17, x17, x16
0xffff914d48f8   152  br x17
0xffff914d48fc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d4900   160  d63f03e0       constant
0xffff914d4904   164  d503201f       constant
0xffff914d4908   168  91206000       constant
0xffff914d490c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d48b0  code target (STUB)  (0xffff91438080)
0xffff914d48c0  constant pool (size 16)
0xffff914d48f0  runtime entry
0xffff914d48fc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = ino
compiler = unknown
Instructions (size = 152)
0xffff914d4980     0  sub csp, jssp, #0x8 (8)
0xffff914d4984     4  str x3, [jssp, #-8]!
0xffff914d4988     8  sub csp, jssp, #0x8 (8)
0xffff914d498c    12  str x4, [jssp, #-8]!
0xffff914d4990    16  ldr x3, pc+88 (addr 0x0000ffff914d49e8)    ;; object: 0x408353d1 Cell for 0
0xffff914d4994    20  ldur x3, [x3, #7]
0xffff914d4998    24  cmp x3, #0x0 (0)
0xffff914d499c    28  b.ne #+0x2c (addr 0xffff914d49c8)
0xffff914d49a0    32  ldr x5, pc+80 (addr 0x0000ffff914d49f0)    ;; object: 0x40835aa9 WeakCell for 0x36435e79 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d49a4    36  ldur x5, [x5, #7]
0xffff914d49a8    40  tbz w5, #0, #+0x20 (addr 0xffff914d49c8)
0xffff914d49ac    44  ldursw x4, [x5, #15]
0xffff914d49b0    48  tbnz w4, #23, #+0x18 (addr 0xffff914d49c8)
0xffff914d49b4    52  ldr x4, [jssp], #8
0xffff914d49b8    56  ldr x3, [jssp], #8
0xffff914d49bc    60  ldr x2, pc+60 (addr 0x0000ffff914d49f8)    ;; object: 0x4080d169 <String[3]: ino>
0xffff914d49c0    64  ldr x16, pc+64 (addr 0x0000ffff914d4a00)    ;; code: HANDLER, StoreTransitionStub, minor: 194570
0xffff914d49c4    68  br x16
0xffff914d49c8    72  ldr x2, pc+64 (addr 0x0000ffff914d4a08)    ;; object: 0x4080d169 <String[3]: ino>
0xffff914d49cc    76  ldr x4, [jssp], #8
0xffff914d49d0    80  ldr x3, [jssp], #8
0xffff914d49d4    84  ldr x16, pc+60 (addr 0x0000ffff914d4a10)    ;; code: BUILTIN
0xffff914d49d8    88  br x16
0xffff914d49dc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914d49e0    96  d63f03e0       constant
0xffff914d49e4   100  d503201f       constant
0xffff914d49e8   104  408353d1       constant
0xffff914d49ec   108  00000000       constant
0xffff914d49f0   112  40835aa9       constant
0xffff914d49f4   116  00000000       constant
0xffff914d49f8   120  4080d169       constant
0xffff914d49fc   124  00000000       constant
0xffff914d4a00   128  914d4860       constant
0xffff914d4a04   132  0000ffff       constant
0xffff914d4a08   136  4080d169       constant
0xffff914d4a0c   140  00000000       constant
0xffff914d4a10   144  91422420       constant
0xffff914d4a14   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914d4990  embedded object  (0x408353d1 Cell for 0)
0xffff914d49a0  embedded object  (0x40835aa9 WeakCell for 0x36435e79 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d49bc  embedded object  (0x4080d169 <String[3]: ino>)
0xffff914d49c0  code target (HANDLER)  (0xffff914d4860)
0xffff914d49c8  embedded object  (0x4080d169 <String[3]: ino>)
0xffff914d49d4  code target (BUILTIN)  (0xffff91422420)
0xffff914d49dc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d4a80     0  tbz w0, #0, #+0x1c (addr 0xffff914d4a9c)
0xffff914d4a84     4  ldur x16, [x0, #-1]
0xffff914d4a88     8  ldr x17, [x26, #120]
0xffff914d4a8c    12  cmp x16, x17
0xffff914d4a90    16  b.ne #+0x60 (addr 0xffff914d4af0)
0xffff914d4a94    20  ldur d0, [x0, #7]
0xffff914d4a98    24  b #+0x8 (addr 0xffff914d4aa0)
0xffff914d4a9c    28  scvtf d0, x0, #32
0xffff914d4aa0    32  stur d0, [x1, #87]
0xffff914d4aa4    36  stur x5, [x1, #-1]
0xffff914d4aa8    40  tbz w5, #0, #+0x34 (addr 0xffff914d4adc)
0xffff914d4aac    44  sub x2, x1, #0x1 (1)
0xffff914d4ab0    48  and x5, x5, #0xfffffffffff00000
0xffff914d4ab4    52  ldr x5, [x5, #8]
0xffff914d4ab8    56  tbz w5, #1, #+0x24 (addr 0xffff914d4adc)
0xffff914d4abc    60  and x5, x1, #0xfffffffffff00000
0xffff914d4ac0    64  ldr x5, [x5, #8]
0xffff914d4ac4    68  tbz w5, #2, #+0x18 (addr 0xffff914d4adc)
0xffff914d4ac8    72  sub csp, jssp, #0x8 (8)
0xffff914d4acc    76  str lr, [jssp, #-8]!
0xffff914d4ad0    80  ldr x16, pc+24 (addr 0x0000ffff914d4ae8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d4ad4    84  blr x16
0xffff914d4ad8    88  ldr lr, [jssp], #8
0xffff914d4adc    92  ret
0xffff914d4ae0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d4ae4   100  d63f03e0       constant
0xffff914d4ae8   104  91438080       constant
0xffff914d4aec   108  0000ffff       constant
0xffff914d4af0   112  movz x16, #0x0
0xffff914d4af4   116  sub csp, jssp, #0x10 (16)
0xffff914d4af8   120  stp fp, lr, [jssp, #-16]!
0xffff914d4afc   124  bl #+0x4 (addr 0xffff914d4b00)
0xffff914d4b00   128  movz x17, #0xa00000000
0xffff914d4b04   132  sub csp, jssp, #0x10 (16)
0xffff914d4b08   136  stp x17, cp, [jssp, #-16]!
0xffff914d4b0c   140  add fp, jssp, #0x10 (16)
0xffff914d4b10   144  ldr x17, pc+24 (addr 0x0000ffff914d4b28)    ;; lazy deoptimization bailout 0
0xffff914d4b14   148  add x17, x17, x16
0xffff914d4b18   152  br x17
0xffff914d4b1c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d4b20   160  d63f03e0       constant
0xffff914d4b24   164  d503201f       constant
0xffff914d4b28   168  91206000       constant
0xffff914d4b2c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d4ad0  code target (STUB)  (0xffff91438080)
0xffff914d4ae0  constant pool (size 16)
0xffff914d4b10  runtime entry
0xffff914d4b1c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d4a80     0  tbz w0, #0, #+0x1c (addr 0xffff914d4a9c)
0xffff914d4a84     4  ldur x16, [x0, #-1]
0xffff914d4a88     8  ldr x17, [x26, #120]
0xffff914d4a8c    12  cmp x16, x17
0xffff914d4a90    16  b.ne #+0x60 (addr 0xffff914d4af0)
0xffff914d4a94    20  ldur d0, [x0, #7]
0xffff914d4a98    24  b #+0x8 (addr 0xffff914d4aa0)
0xffff914d4a9c    28  scvtf d0, x0, #32
0xffff914d4aa0    32  stur d0, [x1, #87]
0xffff914d4aa4    36  stur x5, [x1, #-1]
0xffff914d4aa8    40  tbz w5, #0, #+0x34 (addr 0xffff914d4adc)
0xffff914d4aac    44  sub x2, x1, #0x1 (1)
0xffff914d4ab0    48  and x5, x5, #0xfffffffffff00000
0xffff914d4ab4    52  ldr x5, [x5, #8]
0xffff914d4ab8    56  tbz w5, #1, #+0x24 (addr 0xffff914d4adc)
0xffff914d4abc    60  and x5, x1, #0xfffffffffff00000
0xffff914d4ac0    64  ldr x5, [x5, #8]
0xffff914d4ac4    68  tbz w5, #2, #+0x18 (addr 0xffff914d4adc)
0xffff914d4ac8    72  sub csp, jssp, #0x8 (8)
0xffff914d4acc    76  str lr, [jssp, #-8]!
0xffff914d4ad0    80  ldr x16, pc+24 (addr 0x0000ffff914d4ae8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d4ad4    84  blr x16
0xffff914d4ad8    88  ldr lr, [jssp], #8
0xffff914d4adc    92  ret
0xffff914d4ae0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d4ae4   100  d63f03e0       constant
0xffff914d4ae8   104  91438080       constant
0xffff914d4aec   108  0000ffff       constant
0xffff914d4af0   112  movz x16, #0x0
0xffff914d4af4   116  sub csp, jssp, #0x10 (16)
0xffff914d4af8   120  stp fp, lr, [jssp, #-16]!
0xffff914d4afc   124  bl #+0x4 (addr 0xffff914d4b00)
0xffff914d4b00   128  movz x17, #0xa00000000
0xffff914d4b04   132  sub csp, jssp, #0x10 (16)
0xffff914d4b08   136  stp x17, cp, [jssp, #-16]!
0xffff914d4b0c   140  add fp, jssp, #0x10 (16)
0xffff914d4b10   144  ldr x17, pc+24 (addr 0x0000ffff914d4b28)    ;; lazy deoptimization bailout 0
0xffff914d4b14   148  add x17, x17, x16
0xffff914d4b18   152  br x17
0xffff914d4b1c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d4b20   160  d63f03e0       constant
0xffff914d4b24   164  d503201f       constant
0xffff914d4b28   168  91206000       constant
0xffff914d4b2c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d4ad0  code target (STUB)  (0xffff91438080)
0xffff914d4ae0  constant pool (size 16)
0xffff914d4b10  runtime entry
0xffff914d4b1c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = size
compiler = unknown
Instructions (size = 152)
0xffff914d4ba0     0  sub csp, jssp, #0x8 (8)
0xffff914d4ba4     4  str x3, [jssp, #-8]!
0xffff914d4ba8     8  sub csp, jssp, #0x8 (8)
0xffff914d4bac    12  str x4, [jssp, #-8]!
0xffff914d4bb0    16  ldr x3, pc+88 (addr 0x0000ffff914d4c08)    ;; object: 0x408353d1 Cell for 0
0xffff914d4bb4    20  ldur x3, [x3, #7]
0xffff914d4bb8    24  cmp x3, #0x0 (0)
0xffff914d4bbc    28  b.ne #+0x2c (addr 0xffff914d4be8)
0xffff914d4bc0    32  ldr x5, pc+80 (addr 0x0000ffff914d4c10)    ;; object: 0x40835ba1 WeakCell for 0x36435ed1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d4bc4    36  ldur x5, [x5, #7]
0xffff914d4bc8    40  tbz w5, #0, #+0x20 (addr 0xffff914d4be8)
0xffff914d4bcc    44  ldursw x4, [x5, #15]
0xffff914d4bd0    48  tbnz w4, #23, #+0x18 (addr 0xffff914d4be8)
0xffff914d4bd4    52  ldr x4, [jssp], #8
0xffff914d4bd8    56  ldr x3, [jssp], #8
0xffff914d4bdc    60  ldr x2, pc+60 (addr 0x0000ffff914d4c18)    ;; object: 0x49b89861 <String[4]: size>
0xffff914d4be0    64  ldr x16, pc+64 (addr 0x0000ffff914d4c20)    ;; code: HANDLER, StoreTransitionStub, minor: 194571
0xffff914d4be4    68  br x16
0xffff914d4be8    72  ldr x2, pc+64 (addr 0x0000ffff914d4c28)    ;; object: 0x49b89861 <String[4]: size>
0xffff914d4bec    76  ldr x4, [jssp], #8
0xffff914d4bf0    80  ldr x3, [jssp], #8
0xffff914d4bf4    84  ldr x16, pc+60 (addr 0x0000ffff914d4c30)    ;; code: BUILTIN
0xffff914d4bf8    88  br x16
0xffff914d4bfc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914d4c00    96  d63f03e0       constant
0xffff914d4c04   100  d503201f       constant
0xffff914d4c08   104  408353d1       constant
0xffff914d4c0c   108  00000000       constant
0xffff914d4c10   112  40835ba1       constant
0xffff914d4c14   116  00000000       constant
0xffff914d4c18   120  49b89861       constant
0xffff914d4c1c   124  00000000       constant
0xffff914d4c20   128  914d4a80       constant
0xffff914d4c24   132  0000ffff       constant
0xffff914d4c28   136  49b89861       constant
0xffff914d4c2c   140  00000000       constant
0xffff914d4c30   144  91422420       constant
0xffff914d4c34   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914d4bb0  embedded object  (0x408353d1 Cell for 0)
0xffff914d4bc0  embedded object  (0x40835ba1 WeakCell for 0x36435ed1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d4bdc  embedded object  (0x49b89861 <String[4]: size>)
0xffff914d4be0  code target (HANDLER)  (0xffff914d4a80)
0xffff914d4be8  embedded object  (0x49b89861 <String[4]: size>)
0xffff914d4bf4  code target (BUILTIN)  (0xffff91422420)
0xffff914d4bfc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d4ca0     0  tbz w0, #0, #+0x1c (addr 0xffff914d4cbc)
0xffff914d4ca4     4  ldur x16, [x0, #-1]
0xffff914d4ca8     8  ldr x17, [x26, #120]
0xffff914d4cac    12  cmp x16, x17
0xffff914d4cb0    16  b.ne #+0x60 (addr 0xffff914d4d10)
0xffff914d4cb4    20  ldur d0, [x0, #7]
0xffff914d4cb8    24  b #+0x8 (addr 0xffff914d4cc0)
0xffff914d4cbc    28  scvtf d0, x0, #32
0xffff914d4cc0    32  stur d0, [x1, #95]
0xffff914d4cc4    36  stur x5, [x1, #-1]
0xffff914d4cc8    40  tbz w5, #0, #+0x34 (addr 0xffff914d4cfc)
0xffff914d4ccc    44  sub x2, x1, #0x1 (1)
0xffff914d4cd0    48  and x5, x5, #0xfffffffffff00000
0xffff914d4cd4    52  ldr x5, [x5, #8]
0xffff914d4cd8    56  tbz w5, #1, #+0x24 (addr 0xffff914d4cfc)
0xffff914d4cdc    60  and x5, x1, #0xfffffffffff00000
0xffff914d4ce0    64  ldr x5, [x5, #8]
0xffff914d4ce4    68  tbz w5, #2, #+0x18 (addr 0xffff914d4cfc)
0xffff914d4ce8    72  sub csp, jssp, #0x8 (8)
0xffff914d4cec    76  str lr, [jssp, #-8]!
0xffff914d4cf0    80  ldr x16, pc+24 (addr 0x0000ffff914d4d08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d4cf4    84  blr x16
0xffff914d4cf8    88  ldr lr, [jssp], #8
0xffff914d4cfc    92  ret
0xffff914d4d00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d4d04   100  d63f03e0       constant
0xffff914d4d08   104  91438080       constant
0xffff914d4d0c   108  0000ffff       constant
0xffff914d4d10   112  movz x16, #0x0
0xffff914d4d14   116  sub csp, jssp, #0x10 (16)
0xffff914d4d18   120  stp fp, lr, [jssp, #-16]!
0xffff914d4d1c   124  bl #+0x4 (addr 0xffff914d4d20)
0xffff914d4d20   128  movz x17, #0xa00000000
0xffff914d4d24   132  sub csp, jssp, #0x10 (16)
0xffff914d4d28   136  stp x17, cp, [jssp, #-16]!
0xffff914d4d2c   140  add fp, jssp, #0x10 (16)
0xffff914d4d30   144  ldr x17, pc+24 (addr 0x0000ffff914d4d48)    ;; lazy deoptimization bailout 0
0xffff914d4d34   148  add x17, x17, x16
0xffff914d4d38   152  br x17
0xffff914d4d3c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d4d40   160  d63f03e0       constant
0xffff914d4d44   164  d503201f       constant
0xffff914d4d48   168  91206000       constant
0xffff914d4d4c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d4cf0  code target (STUB)  (0xffff91438080)
0xffff914d4d00  constant pool (size 16)
0xffff914d4d30  runtime entry
0xffff914d4d3c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff914d4ca0     0  tbz w0, #0, #+0x1c (addr 0xffff914d4cbc)
0xffff914d4ca4     4  ldur x16, [x0, #-1]
0xffff914d4ca8     8  ldr x17, [x26, #120]
0xffff914d4cac    12  cmp x16, x17
0xffff914d4cb0    16  b.ne #+0x60 (addr 0xffff914d4d10)
0xffff914d4cb4    20  ldur d0, [x0, #7]
0xffff914d4cb8    24  b #+0x8 (addr 0xffff914d4cc0)
0xffff914d4cbc    28  scvtf d0, x0, #32
0xffff914d4cc0    32  stur d0, [x1, #95]
0xffff914d4cc4    36  stur x5, [x1, #-1]
0xffff914d4cc8    40  tbz w5, #0, #+0x34 (addr 0xffff914d4cfc)
0xffff914d4ccc    44  sub x2, x1, #0x1 (1)
0xffff914d4cd0    48  and x5, x5, #0xfffffffffff00000
0xffff914d4cd4    52  ldr x5, [x5, #8]
0xffff914d4cd8    56  tbz w5, #1, #+0x24 (addr 0xffff914d4cfc)
0xffff914d4cdc    60  and x5, x1, #0xfffffffffff00000
0xffff914d4ce0    64  ldr x5, [x5, #8]
0xffff914d4ce4    68  tbz w5, #2, #+0x18 (addr 0xffff914d4cfc)
0xffff914d4ce8    72  sub csp, jssp, #0x8 (8)
0xffff914d4cec    76  str lr, [jssp, #-8]!
0xffff914d4cf0    80  ldr x16, pc+24 (addr 0x0000ffff914d4d08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d4cf4    84  blr x16
0xffff914d4cf8    88  ldr lr, [jssp], #8
0xffff914d4cfc    92  ret
0xffff914d4d00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914d4d04   100  d63f03e0       constant
0xffff914d4d08   104  91438080       constant
0xffff914d4d0c   108  0000ffff       constant
0xffff914d4d10   112  movz x16, #0x0
0xffff914d4d14   116  sub csp, jssp, #0x10 (16)
0xffff914d4d18   120  stp fp, lr, [jssp, #-16]!
0xffff914d4d1c   124  bl #+0x4 (addr 0xffff914d4d20)
0xffff914d4d20   128  movz x17, #0xa00000000
0xffff914d4d24   132  sub csp, jssp, #0x10 (16)
0xffff914d4d28   136  stp x17, cp, [jssp, #-16]!
0xffff914d4d2c   140  add fp, jssp, #0x10 (16)
0xffff914d4d30   144  ldr x17, pc+24 (addr 0x0000ffff914d4d48)    ;; lazy deoptimization bailout 0
0xffff914d4d34   148  add x17, x17, x16
0xffff914d4d38   152  br x17
0xffff914d4d3c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d4d40   160  d63f03e0       constant
0xffff914d4d44   164  d503201f       constant
0xffff914d4d48   168  91206000       constant
0xffff914d4d4c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff914d4cf0  code target (STUB)  (0xffff91438080)
0xffff914d4d00  constant pool (size 16)
0xffff914d4d30  runtime entry
0xffff914d4d3c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = blocks
compiler = unknown
Instructions (size = 152)
0xffff914d4dc0     0  sub csp, jssp, #0x8 (8)
0xffff914d4dc4     4  str x3, [jssp, #-8]!
0xffff914d4dc8     8  sub csp, jssp, #0x8 (8)
0xffff914d4dcc    12  str x4, [jssp, #-8]!
0xffff914d4dd0    16  ldr x3, pc+88 (addr 0x0000ffff914d4e28)    ;; object: 0x408353d1 Cell for 0
0xffff914d4dd4    20  ldur x3, [x3, #7]
0xffff914d4dd8    24  cmp x3, #0x0 (0)
0xffff914d4ddc    28  b.ne #+0x2c (addr 0xffff914d4e08)
0xffff914d4de0    32  ldr x5, pc+80 (addr 0x0000ffff914d4e30)    ;; object: 0x40835c99 WeakCell for 0x36435f29 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d4de4    36  ldur x5, [x5, #7]
0xffff914d4de8    40  tbz w5, #0, #+0x20 (addr 0xffff914d4e08)
0xffff914d4dec    44  ldursw x4, [x5, #15]
0xffff914d4df0    48  tbnz w4, #23, #+0x18 (addr 0xffff914d4e08)
0xffff914d4df4    52  ldr x4, [jssp], #8
0xffff914d4df8    56  ldr x3, [jssp], #8
0xffff914d4dfc    60  ldr x2, pc+60 (addr 0x0000ffff914d4e38)    ;; object: 0x4080d189 <String[6]: blocks>
0xffff914d4e00    64  ldr x16, pc+64 (addr 0x0000ffff914d4e40)    ;; code: HANDLER, StoreTransitionStub, minor: 194572
0xffff914d4e04    68  br x16
0xffff914d4e08    72  ldr x2, pc+64 (addr 0x0000ffff914d4e48)    ;; object: 0x4080d189 <String[6]: blocks>
0xffff914d4e0c    76  ldr x4, [jssp], #8
0xffff914d4e10    80  ldr x3, [jssp], #8
0xffff914d4e14    84  ldr x16, pc+60 (addr 0x0000ffff914d4e50)    ;; code: BUILTIN
0xffff914d4e18    88  br x16
0xffff914d4e1c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914d4e20    96  d63f03e0       constant
0xffff914d4e24   100  d503201f       constant
0xffff914d4e28   104  408353d1       constant
0xffff914d4e2c   108  00000000       constant
0xffff914d4e30   112  40835c99       constant
0xffff914d4e34   116  00000000       constant
0xffff914d4e38   120  4080d189       constant
0xffff914d4e3c   124  00000000       constant
0xffff914d4e40   128  914d4ca0       constant
0xffff914d4e44   132  0000ffff       constant
0xffff914d4e48   136  4080d189       constant
0xffff914d4e4c   140  00000000       constant
0xffff914d4e50   144  91422420       constant
0xffff914d4e54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914d4dd0  embedded object  (0x408353d1 Cell for 0)
0xffff914d4de0  embedded object  (0x40835c99 WeakCell for 0x36435f29 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d4dfc  embedded object  (0x4080d189 <String[6]: blocks>)
0xffff914d4e00  code target (HANDLER)  (0xffff914d4ca0)
0xffff914d4e08  embedded object  (0x4080d189 <String[6]: blocks>)
0xffff914d4e14  code target (BUILTIN)  (0xffff91422420)
0xffff914d4e1c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914d4ec0     0  tbz w0, #0, #+0x90 (addr 0xffff914d4f50)
0xffff914d4ec4     4  mov x2, x0
0xffff914d4ec8     8  stur x2, [x1, #103]
0xffff914d4ecc    12  add x3, x1, #0x67 (103)
0xffff914d4ed0    16  and x2, x2, #0xfffffffffff00000
0xffff914d4ed4    20  ldr x2, [x2, #8]
0xffff914d4ed8    24  tbz w2, #1, #+0x24 (addr 0xffff914d4efc)
0xffff914d4edc    28  and x2, x1, #0xfffffffffff00000
0xffff914d4ee0    32  ldr x2, [x2, #8]
0xffff914d4ee4    36  tbz w2, #2, #+0x18 (addr 0xffff914d4efc)
0xffff914d4ee8    40  sub csp, jssp, #0x8 (8)
0xffff914d4eec    44  str lr, [jssp, #-8]!
0xffff914d4ef0    48  ldr x16, pc+80 (addr 0x0000ffff914d4f40)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914d4ef4    52  blr x16
0xffff914d4ef8    56  ldr lr, [jssp], #8
0xffff914d4efc    60  stur x5, [x1, #-1]
0xffff914d4f00    64  tbz w5, #0, #+0x34 (addr 0xffff914d4f34)
0xffff914d4f04    68  sub x2, x1, #0x1 (1)
0xffff914d4f08    72  and x5, x5, #0xfffffffffff00000
0xffff914d4f0c    76  ldr x5, [x5, #8]
0xffff914d4f10    80  tbz w5, #1, #+0x24 (addr 0xffff914d4f34)
0xffff914d4f14    84  and x5, x1, #0xfffffffffff00000
0xffff914d4f18    88  ldr x5, [x5, #8]
0xffff914d4f1c    92  tbz w5, #2, #+0x18 (addr 0xffff914d4f34)
0xffff914d4f20    96  sub csp, jssp, #0x8 (8)
0xffff914d4f24   100  str lr, [jssp, #-8]!
0xffff914d4f28   104  ldr x16, pc+32 (addr 0x0000ffff914d4f48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d4f2c   108  blr x16
0xffff914d4f30   112  ldr lr, [jssp], #8
0xffff914d4f34   116  ret
0xffff914d4f38   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914d4f3c   124  d63f03e0       constant
0xffff914d4f40   128  914170c0       constant
0xffff914d4f44   132  0000ffff       constant
0xffff914d4f48   136  91438080       constant
0xffff914d4f4c   140  0000ffff       constant
0xffff914d4f50   144  movz x16, #0x0
0xffff914d4f54   148  sub csp, jssp, #0x10 (16)
0xffff914d4f58   152  stp fp, lr, [jssp, #-16]!
0xffff914d4f5c   156  bl #+0x4 (addr 0xffff914d4f60)
0xffff914d4f60   160  movz x17, #0xa00000000
0xffff914d4f64   164  sub csp, jssp, #0x10 (16)
0xffff914d4f68   168  stp x17, cp, [jssp, #-16]!
0xffff914d4f6c   172  add fp, jssp, #0x10 (16)
0xffff914d4f70   176  ldr x17, pc+24 (addr 0x0000ffff914d4f88)    ;; lazy deoptimization bailout 0
0xffff914d4f74   180  add x17, x17, x16
0xffff914d4f78   184  br x17
0xffff914d4f7c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d4f80   192  d63f03e0       constant
0xffff914d4f84   196  d503201f       constant
0xffff914d4f88   200  91206000       constant
0xffff914d4f8c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914d4ef0  code target (STUB)  (0xffff914170c0)
0xffff914d4f28  code target (STUB)  (0xffff91438080)
0xffff914d4f38  constant pool (size 24)
0xffff914d4f70  runtime entry
0xffff914d4f7c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914d4ec0     0  tbz w0, #0, #+0x90 (addr 0xffff914d4f50)
0xffff914d4ec4     4  mov x2, x0
0xffff914d4ec8     8  stur x2, [x1, #103]
0xffff914d4ecc    12  add x3, x1, #0x67 (103)
0xffff914d4ed0    16  and x2, x2, #0xfffffffffff00000
0xffff914d4ed4    20  ldr x2, [x2, #8]
0xffff914d4ed8    24  tbz w2, #1, #+0x24 (addr 0xffff914d4efc)
0xffff914d4edc    28  and x2, x1, #0xfffffffffff00000
0xffff914d4ee0    32  ldr x2, [x2, #8]
0xffff914d4ee4    36  tbz w2, #2, #+0x18 (addr 0xffff914d4efc)
0xffff914d4ee8    40  sub csp, jssp, #0x8 (8)
0xffff914d4eec    44  str lr, [jssp, #-8]!
0xffff914d4ef0    48  ldr x16, pc+80 (addr 0x0000ffff914d4f40)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914d4ef4    52  blr x16
0xffff914d4ef8    56  ldr lr, [jssp], #8
0xffff914d4efc    60  stur x5, [x1, #-1]
0xffff914d4f00    64  tbz w5, #0, #+0x34 (addr 0xffff914d4f34)
0xffff914d4f04    68  sub x2, x1, #0x1 (1)
0xffff914d4f08    72  and x5, x5, #0xfffffffffff00000
0xffff914d4f0c    76  ldr x5, [x5, #8]
0xffff914d4f10    80  tbz w5, #1, #+0x24 (addr 0xffff914d4f34)
0xffff914d4f14    84  and x5, x1, #0xfffffffffff00000
0xffff914d4f18    88  ldr x5, [x5, #8]
0xffff914d4f1c    92  tbz w5, #2, #+0x18 (addr 0xffff914d4f34)
0xffff914d4f20    96  sub csp, jssp, #0x8 (8)
0xffff914d4f24   100  str lr, [jssp, #-8]!
0xffff914d4f28   104  ldr x16, pc+32 (addr 0x0000ffff914d4f48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d4f2c   108  blr x16
0xffff914d4f30   112  ldr lr, [jssp], #8
0xffff914d4f34   116  ret
0xffff914d4f38   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914d4f3c   124  d63f03e0       constant
0xffff914d4f40   128  914170c0       constant
0xffff914d4f44   132  0000ffff       constant
0xffff914d4f48   136  91438080       constant
0xffff914d4f4c   140  0000ffff       constant
0xffff914d4f50   144  movz x16, #0x0
0xffff914d4f54   148  sub csp, jssp, #0x10 (16)
0xffff914d4f58   152  stp fp, lr, [jssp, #-16]!
0xffff914d4f5c   156  bl #+0x4 (addr 0xffff914d4f60)
0xffff914d4f60   160  movz x17, #0xa00000000
0xffff914d4f64   164  sub csp, jssp, #0x10 (16)
0xffff914d4f68   168  stp x17, cp, [jssp, #-16]!
0xffff914d4f6c   172  add fp, jssp, #0x10 (16)
0xffff914d4f70   176  ldr x17, pc+24 (addr 0x0000ffff914d4f88)    ;; lazy deoptimization bailout 0
0xffff914d4f74   180  add x17, x17, x16
0xffff914d4f78   184  br x17
0xffff914d4f7c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d4f80   192  d63f03e0       constant
0xffff914d4f84   196  d503201f       constant
0xffff914d4f88   200  91206000       constant
0xffff914d4f8c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914d4ef0  code target (STUB)  (0xffff914170c0)
0xffff914d4f28  code target (STUB)  (0xffff91438080)
0xffff914d4f38  constant pool (size 24)
0xffff914d4f70  runtime entry
0xffff914d4f7c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = atime
compiler = unknown
Instructions (size = 184)
0xffff914d5000     0  sub csp, jssp, #0x8 (8)
0xffff914d5004     4  str x3, [jssp, #-8]!
0xffff914d5008     8  sub csp, jssp, #0x8 (8)
0xffff914d500c    12  str x4, [jssp, #-8]!
0xffff914d5010    16  ldr x3, pc+112 (addr 0x0000ffff914d5080)    ;; object: 0x408353d1 Cell for 0
0xffff914d5014    20  ldur x3, [x3, #7]
0xffff914d5018    24  cmp x3, #0x0 (0)
0xffff914d501c    28  b.ne #+0x44 (addr 0xffff914d5060)
0xffff914d5020    32  tbz w0, #0, #+0x40 (addr 0xffff914d5060)
0xffff914d5024    36  ldur x3, [x0, #-1]
0xffff914d5028    40  ldr x4, pc+96 (addr 0x0000ffff914d5088)    ;; object: 0x40834909 WeakCell for 0x36407e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>
0xffff914d502c    44  ldur x4, [x4, #7]
0xffff914d5030    48  cmp x3, x4
0xffff914d5034    52  b.ne #+0x2c (addr 0xffff914d5060)
0xffff914d5038    56  ldr x5, pc+88 (addr 0x0000ffff914d5090)    ;; object: 0x40835d91 WeakCell for 0x36435f81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d503c    60  ldur x5, [x5, #7]
0xffff914d5040    64  tbz w5, #0, #+0x20 (addr 0xffff914d5060)
0xffff914d5044    68  ldursw x4, [x5, #15]
0xffff914d5048    72  tbnz w4, #23, #+0x18 (addr 0xffff914d5060)
0xffff914d504c    76  ldr x4, [jssp], #8
0xffff914d5050    80  ldr x3, [jssp], #8
0xffff914d5054    84  ldr x2, pc+68 (addr 0x0000ffff914d5098)    ;; object: 0x4080d249 <String[5]: atime>
0xffff914d5058    88  ldr x16, pc+72 (addr 0x0000ffff914d50a0)    ;; code: HANDLER, StoreTransitionStub, minor: 198669
0xffff914d505c    92  br x16
0xffff914d5060    96  ldr x2, pc+72 (addr 0x0000ffff914d50a8)    ;; object: 0x4080d249 <String[5]: atime>
0xffff914d5064   100  ldr x4, [jssp], #8
0xffff914d5068   104  ldr x3, [jssp], #8
0xffff914d506c   108  ldr x16, pc+68 (addr 0x0000ffff914d50b0)    ;; code: BUILTIN
0xffff914d5070   112  br x16
0xffff914d5074   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914d5078   120  d63f03e0       constant
0xffff914d507c   124  d503201f       constant
0xffff914d5080   128  408353d1       constant
0xffff914d5084   132  00000000       constant
0xffff914d5088   136  40834909       constant
0xffff914d508c   140  00000000       constant
0xffff914d5090   144  40835d91       constant
0xffff914d5094   148  00000000       constant
0xffff914d5098   152  4080d249       constant
0xffff914d509c   156  00000000       constant
0xffff914d50a0   160  914d4ec0       constant
0xffff914d50a4   164  0000ffff       constant
0xffff914d50a8   168  4080d249       constant
0xffff914d50ac   172  00000000       constant
0xffff914d50b0   176  91422420       constant
0xffff914d50b4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914d5010  embedded object  (0x408353d1 Cell for 0)
0xffff914d5028  embedded object  (0x40834909 WeakCell for 0x36407e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>)
0xffff914d5038  embedded object  (0x40835d91 WeakCell for 0x36435f81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d5054  embedded object  (0x4080d249 <String[5]: atime>)
0xffff914d5058  code target (HANDLER)  (0xffff914d4ec0)
0xffff914d5060  embedded object  (0x4080d249 <String[5]: atime>)
0xffff914d506c  code target (BUILTIN)  (0xffff91422420)
0xffff914d5074  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914d5120     0  tbz w0, #0, #+0x90 (addr 0xffff914d51b0)
0xffff914d5124     4  mov x2, x0
0xffff914d5128     8  stur x2, [x1, #111]
0xffff914d512c    12  add x3, x1, #0x6f (111)
0xffff914d5130    16  and x2, x2, #0xfffffffffff00000
0xffff914d5134    20  ldr x2, [x2, #8]
0xffff914d5138    24  tbz w2, #1, #+0x24 (addr 0xffff914d515c)
0xffff914d513c    28  and x2, x1, #0xfffffffffff00000
0xffff914d5140    32  ldr x2, [x2, #8]
0xffff914d5144    36  tbz w2, #2, #+0x18 (addr 0xffff914d515c)
0xffff914d5148    40  sub csp, jssp, #0x8 (8)
0xffff914d514c    44  str lr, [jssp, #-8]!
0xffff914d5150    48  ldr x16, pc+80 (addr 0x0000ffff914d51a0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914d5154    52  blr x16
0xffff914d5158    56  ldr lr, [jssp], #8
0xffff914d515c    60  stur x5, [x1, #-1]
0xffff914d5160    64  tbz w5, #0, #+0x34 (addr 0xffff914d5194)
0xffff914d5164    68  sub x2, x1, #0x1 (1)
0xffff914d5168    72  and x5, x5, #0xfffffffffff00000
0xffff914d516c    76  ldr x5, [x5, #8]
0xffff914d5170    80  tbz w5, #1, #+0x24 (addr 0xffff914d5194)
0xffff914d5174    84  and x5, x1, #0xfffffffffff00000
0xffff914d5178    88  ldr x5, [x5, #8]
0xffff914d517c    92  tbz w5, #2, #+0x18 (addr 0xffff914d5194)
0xffff914d5180    96  sub csp, jssp, #0x8 (8)
0xffff914d5184   100  str lr, [jssp, #-8]!
0xffff914d5188   104  ldr x16, pc+32 (addr 0x0000ffff914d51a8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d518c   108  blr x16
0xffff914d5190   112  ldr lr, [jssp], #8
0xffff914d5194   116  ret
0xffff914d5198   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914d519c   124  d63f03e0       constant
0xffff914d51a0   128  914170c0       constant
0xffff914d51a4   132  0000ffff       constant
0xffff914d51a8   136  91438080       constant
0xffff914d51ac   140  0000ffff       constant
0xffff914d51b0   144  movz x16, #0x0
0xffff914d51b4   148  sub csp, jssp, #0x10 (16)
0xffff914d51b8   152  stp fp, lr, [jssp, #-16]!
0xffff914d51bc   156  bl #+0x4 (addr 0xffff914d51c0)
0xffff914d51c0   160  movz x17, #0xa00000000
0xffff914d51c4   164  sub csp, jssp, #0x10 (16)
0xffff914d51c8   168  stp x17, cp, [jssp, #-16]!
0xffff914d51cc   172  add fp, jssp, #0x10 (16)
0xffff914d51d0   176  ldr x17, pc+24 (addr 0x0000ffff914d51e8)    ;; lazy deoptimization bailout 0
0xffff914d51d4   180  add x17, x17, x16
0xffff914d51d8   184  br x17
0xffff914d51dc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d51e0   192  d63f03e0       constant
0xffff914d51e4   196  d503201f       constant
0xffff914d51e8   200  91206000       constant
0xffff914d51ec   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914d5150  code target (STUB)  (0xffff914170c0)
0xffff914d5188  code target (STUB)  (0xffff91438080)
0xffff914d5198  constant pool (size 24)
0xffff914d51d0  runtime entry
0xffff914d51dc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914d5120     0  tbz w0, #0, #+0x90 (addr 0xffff914d51b0)
0xffff914d5124     4  mov x2, x0
0xffff914d5128     8  stur x2, [x1, #111]
0xffff914d512c    12  add x3, x1, #0x6f (111)
0xffff914d5130    16  and x2, x2, #0xfffffffffff00000
0xffff914d5134    20  ldr x2, [x2, #8]
0xffff914d5138    24  tbz w2, #1, #+0x24 (addr 0xffff914d515c)
0xffff914d513c    28  and x2, x1, #0xfffffffffff00000
0xffff914d5140    32  ldr x2, [x2, #8]
0xffff914d5144    36  tbz w2, #2, #+0x18 (addr 0xffff914d515c)
0xffff914d5148    40  sub csp, jssp, #0x8 (8)
0xffff914d514c    44  str lr, [jssp, #-8]!
0xffff914d5150    48  ldr x16, pc+80 (addr 0x0000ffff914d51a0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914d5154    52  blr x16
0xffff914d5158    56  ldr lr, [jssp], #8
0xffff914d515c    60  stur x5, [x1, #-1]
0xffff914d5160    64  tbz w5, #0, #+0x34 (addr 0xffff914d5194)
0xffff914d5164    68  sub x2, x1, #0x1 (1)
0xffff914d5168    72  and x5, x5, #0xfffffffffff00000
0xffff914d516c    76  ldr x5, [x5, #8]
0xffff914d5170    80  tbz w5, #1, #+0x24 (addr 0xffff914d5194)
0xffff914d5174    84  and x5, x1, #0xfffffffffff00000
0xffff914d5178    88  ldr x5, [x5, #8]
0xffff914d517c    92  tbz w5, #2, #+0x18 (addr 0xffff914d5194)
0xffff914d5180    96  sub csp, jssp, #0x8 (8)
0xffff914d5184   100  str lr, [jssp, #-8]!
0xffff914d5188   104  ldr x16, pc+32 (addr 0x0000ffff914d51a8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d518c   108  blr x16
0xffff914d5190   112  ldr lr, [jssp], #8
0xffff914d5194   116  ret
0xffff914d5198   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914d519c   124  d63f03e0       constant
0xffff914d51a0   128  914170c0       constant
0xffff914d51a4   132  0000ffff       constant
0xffff914d51a8   136  91438080       constant
0xffff914d51ac   140  0000ffff       constant
0xffff914d51b0   144  movz x16, #0x0
0xffff914d51b4   148  sub csp, jssp, #0x10 (16)
0xffff914d51b8   152  stp fp, lr, [jssp, #-16]!
0xffff914d51bc   156  bl #+0x4 (addr 0xffff914d51c0)
0xffff914d51c0   160  movz x17, #0xa00000000
0xffff914d51c4   164  sub csp, jssp, #0x10 (16)
0xffff914d51c8   168  stp x17, cp, [jssp, #-16]!
0xffff914d51cc   172  add fp, jssp, #0x10 (16)
0xffff914d51d0   176  ldr x17, pc+24 (addr 0x0000ffff914d51e8)    ;; lazy deoptimization bailout 0
0xffff914d51d4   180  add x17, x17, x16
0xffff914d51d8   184  br x17
0xffff914d51dc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d51e0   192  d63f03e0       constant
0xffff914d51e4   196  d503201f       constant
0xffff914d51e8   200  91206000       constant
0xffff914d51ec   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914d5150  code target (STUB)  (0xffff914170c0)
0xffff914d5188  code target (STUB)  (0xffff91438080)
0xffff914d5198  constant pool (size 24)
0xffff914d51d0  runtime entry
0xffff914d51dc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = mtime
compiler = unknown
Instructions (size = 184)
0xffff914d5260     0  sub csp, jssp, #0x8 (8)
0xffff914d5264     4  str x3, [jssp, #-8]!
0xffff914d5268     8  sub csp, jssp, #0x8 (8)
0xffff914d526c    12  str x4, [jssp, #-8]!
0xffff914d5270    16  ldr x3, pc+112 (addr 0x0000ffff914d52e0)    ;; object: 0x408353d1 Cell for 0
0xffff914d5274    20  ldur x3, [x3, #7]
0xffff914d5278    24  cmp x3, #0x0 (0)
0xffff914d527c    28  b.ne #+0x44 (addr 0xffff914d52c0)
0xffff914d5280    32  tbz w0, #0, #+0x40 (addr 0xffff914d52c0)
0xffff914d5284    36  ldur x3, [x0, #-1]
0xffff914d5288    40  ldr x4, pc+96 (addr 0x0000ffff914d52e8)    ;; object: 0x40834909 WeakCell for 0x36407e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>
0xffff914d528c    44  ldur x4, [x4, #7]
0xffff914d5290    48  cmp x3, x4
0xffff914d5294    52  b.ne #+0x2c (addr 0xffff914d52c0)
0xffff914d5298    56  ldr x5, pc+88 (addr 0x0000ffff914d52f0)    ;; object: 0x40835e81 WeakCell for 0x36435fd9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d529c    60  ldur x5, [x5, #7]
0xffff914d52a0    64  tbz w5, #0, #+0x20 (addr 0xffff914d52c0)
0xffff914d52a4    68  ldursw x4, [x5, #15]
0xffff914d52a8    72  tbnz w4, #23, #+0x18 (addr 0xffff914d52c0)
0xffff914d52ac    76  ldr x4, [jssp], #8
0xffff914d52b0    80  ldr x3, [jssp], #8
0xffff914d52b4    84  ldr x2, pc+68 (addr 0x0000ffff914d52f8)    ;; object: 0x4080d269 <String[5]: mtime>
0xffff914d52b8    88  ldr x16, pc+72 (addr 0x0000ffff914d5300)    ;; code: HANDLER, StoreTransitionStub, minor: 198670
0xffff914d52bc    92  br x16
0xffff914d52c0    96  ldr x2, pc+72 (addr 0x0000ffff914d5308)    ;; object: 0x4080d269 <String[5]: mtime>
0xffff914d52c4   100  ldr x4, [jssp], #8
0xffff914d52c8   104  ldr x3, [jssp], #8
0xffff914d52cc   108  ldr x16, pc+68 (addr 0x0000ffff914d5310)    ;; code: BUILTIN
0xffff914d52d0   112  br x16
0xffff914d52d4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914d52d8   120  d63f03e0       constant
0xffff914d52dc   124  d503201f       constant
0xffff914d52e0   128  408353d1       constant
0xffff914d52e4   132  00000000       constant
0xffff914d52e8   136  40834909       constant
0xffff914d52ec   140  00000000       constant
0xffff914d52f0   144  40835e81       constant
0xffff914d52f4   148  00000000       constant
0xffff914d52f8   152  4080d269       constant
0xffff914d52fc   156  00000000       constant
0xffff914d5300   160  914d5120       constant
0xffff914d5304   164  0000ffff       constant
0xffff914d5308   168  4080d269       constant
0xffff914d530c   172  00000000       constant
0xffff914d5310   176  91422420       constant
0xffff914d5314   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914d5270  embedded object  (0x408353d1 Cell for 0)
0xffff914d5288  embedded object  (0x40834909 WeakCell for 0x36407e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>)
0xffff914d5298  embedded object  (0x40835e81 WeakCell for 0x36435fd9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d52b4  embedded object  (0x4080d269 <String[5]: mtime>)
0xffff914d52b8  code target (HANDLER)  (0xffff914d5120)
0xffff914d52c0  embedded object  (0x4080d269 <String[5]: mtime>)
0xffff914d52cc  code target (BUILTIN)  (0xffff91422420)
0xffff914d52d4  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914d5380     0  tbz w0, #0, #+0x90 (addr 0xffff914d5410)
0xffff914d5384     4  mov x2, x0
0xffff914d5388     8  stur x2, [x1, #119]
0xffff914d538c    12  add x3, x1, #0x77 (119)
0xffff914d5390    16  and x2, x2, #0xfffffffffff00000
0xffff914d5394    20  ldr x2, [x2, #8]
0xffff914d5398    24  tbz w2, #1, #+0x24 (addr 0xffff914d53bc)
0xffff914d539c    28  and x2, x1, #0xfffffffffff00000
0xffff914d53a0    32  ldr x2, [x2, #8]
0xffff914d53a4    36  tbz w2, #2, #+0x18 (addr 0xffff914d53bc)
0xffff914d53a8    40  sub csp, jssp, #0x8 (8)
0xffff914d53ac    44  str lr, [jssp, #-8]!
0xffff914d53b0    48  ldr x16, pc+80 (addr 0x0000ffff914d5400)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914d53b4    52  blr x16
0xffff914d53b8    56  ldr lr, [jssp], #8
0xffff914d53bc    60  stur x5, [x1, #-1]
0xffff914d53c0    64  tbz w5, #0, #+0x34 (addr 0xffff914d53f4)
0xffff914d53c4    68  sub x2, x1, #0x1 (1)
0xffff914d53c8    72  and x5, x5, #0xfffffffffff00000
0xffff914d53cc    76  ldr x5, [x5, #8]
0xffff914d53d0    80  tbz w5, #1, #+0x24 (addr 0xffff914d53f4)
0xffff914d53d4    84  and x5, x1, #0xfffffffffff00000
0xffff914d53d8    88  ldr x5, [x5, #8]
0xffff914d53dc    92  tbz w5, #2, #+0x18 (addr 0xffff914d53f4)
0xffff914d53e0    96  sub csp, jssp, #0x8 (8)
0xffff914d53e4   100  str lr, [jssp, #-8]!
0xffff914d53e8   104  ldr x16, pc+32 (addr 0x0000ffff914d5408)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d53ec   108  blr x16
0xffff914d53f0   112  ldr lr, [jssp], #8
0xffff914d53f4   116  ret
0xffff914d53f8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914d53fc   124  d63f03e0       constant
0xffff914d5400   128  914170c0       constant
0xffff914d5404   132  0000ffff       constant
0xffff914d5408   136  91438080       constant
0xffff914d540c   140  0000ffff       constant
0xffff914d5410   144  movz x16, #0x0
0xffff914d5414   148  sub csp, jssp, #0x10 (16)
0xffff914d5418   152  stp fp, lr, [jssp, #-16]!
0xffff914d541c   156  bl #+0x4 (addr 0xffff914d5420)
0xffff914d5420   160  movz x17, #0xa00000000
0xffff914d5424   164  sub csp, jssp, #0x10 (16)
0xffff914d5428   168  stp x17, cp, [jssp, #-16]!
0xffff914d542c   172  add fp, jssp, #0x10 (16)
0xffff914d5430   176  ldr x17, pc+24 (addr 0x0000ffff914d5448)    ;; lazy deoptimization bailout 0
0xffff914d5434   180  add x17, x17, x16
0xffff914d5438   184  br x17
0xffff914d543c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d5440   192  d63f03e0       constant
0xffff914d5444   196  d503201f       constant
0xffff914d5448   200  91206000       constant
0xffff914d544c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914d53b0  code target (STUB)  (0xffff914170c0)
0xffff914d53e8  code target (STUB)  (0xffff91438080)
0xffff914d53f8  constant pool (size 24)
0xffff914d5430  runtime entry
0xffff914d543c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914d5380     0  tbz w0, #0, #+0x90 (addr 0xffff914d5410)
0xffff914d5384     4  mov x2, x0
0xffff914d5388     8  stur x2, [x1, #119]
0xffff914d538c    12  add x3, x1, #0x77 (119)
0xffff914d5390    16  and x2, x2, #0xfffffffffff00000
0xffff914d5394    20  ldr x2, [x2, #8]
0xffff914d5398    24  tbz w2, #1, #+0x24 (addr 0xffff914d53bc)
0xffff914d539c    28  and x2, x1, #0xfffffffffff00000
0xffff914d53a0    32  ldr x2, [x2, #8]
0xffff914d53a4    36  tbz w2, #2, #+0x18 (addr 0xffff914d53bc)
0xffff914d53a8    40  sub csp, jssp, #0x8 (8)
0xffff914d53ac    44  str lr, [jssp, #-8]!
0xffff914d53b0    48  ldr x16, pc+80 (addr 0x0000ffff914d5400)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914d53b4    52  blr x16
0xffff914d53b8    56  ldr lr, [jssp], #8
0xffff914d53bc    60  stur x5, [x1, #-1]
0xffff914d53c0    64  tbz w5, #0, #+0x34 (addr 0xffff914d53f4)
0xffff914d53c4    68  sub x2, x1, #0x1 (1)
0xffff914d53c8    72  and x5, x5, #0xfffffffffff00000
0xffff914d53cc    76  ldr x5, [x5, #8]
0xffff914d53d0    80  tbz w5, #1, #+0x24 (addr 0xffff914d53f4)
0xffff914d53d4    84  and x5, x1, #0xfffffffffff00000
0xffff914d53d8    88  ldr x5, [x5, #8]
0xffff914d53dc    92  tbz w5, #2, #+0x18 (addr 0xffff914d53f4)
0xffff914d53e0    96  sub csp, jssp, #0x8 (8)
0xffff914d53e4   100  str lr, [jssp, #-8]!
0xffff914d53e8   104  ldr x16, pc+32 (addr 0x0000ffff914d5408)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d53ec   108  blr x16
0xffff914d53f0   112  ldr lr, [jssp], #8
0xffff914d53f4   116  ret
0xffff914d53f8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914d53fc   124  d63f03e0       constant
0xffff914d5400   128  914170c0       constant
0xffff914d5404   132  0000ffff       constant
0xffff914d5408   136  91438080       constant
0xffff914d540c   140  0000ffff       constant
0xffff914d5410   144  movz x16, #0x0
0xffff914d5414   148  sub csp, jssp, #0x10 (16)
0xffff914d5418   152  stp fp, lr, [jssp, #-16]!
0xffff914d541c   156  bl #+0x4 (addr 0xffff914d5420)
0xffff914d5420   160  movz x17, #0xa00000000
0xffff914d5424   164  sub csp, jssp, #0x10 (16)
0xffff914d5428   168  stp x17, cp, [jssp, #-16]!
0xffff914d542c   172  add fp, jssp, #0x10 (16)
0xffff914d5430   176  ldr x17, pc+24 (addr 0x0000ffff914d5448)    ;; lazy deoptimization bailout 0
0xffff914d5434   180  add x17, x17, x16
0xffff914d5438   184  br x17
0xffff914d543c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d5440   192  d63f03e0       constant
0xffff914d5444   196  d503201f       constant
0xffff914d5448   200  91206000       constant
0xffff914d544c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914d53b0  code target (STUB)  (0xffff914170c0)
0xffff914d53e8  code target (STUB)  (0xffff91438080)
0xffff914d53f8  constant pool (size 24)
0xffff914d5430  runtime entry
0xffff914d543c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = ctime
compiler = unknown
Instructions (size = 184)
0xffff914d54c0     0  sub csp, jssp, #0x8 (8)
0xffff914d54c4     4  str x3, [jssp, #-8]!
0xffff914d54c8     8  sub csp, jssp, #0x8 (8)
0xffff914d54cc    12  str x4, [jssp, #-8]!
0xffff914d54d0    16  ldr x3, pc+112 (addr 0x0000ffff914d5540)    ;; object: 0x408353d1 Cell for 0
0xffff914d54d4    20  ldur x3, [x3, #7]
0xffff914d54d8    24  cmp x3, #0x0 (0)
0xffff914d54dc    28  b.ne #+0x44 (addr 0xffff914d5520)
0xffff914d54e0    32  tbz w0, #0, #+0x40 (addr 0xffff914d5520)
0xffff914d54e4    36  ldur x3, [x0, #-1]
0xffff914d54e8    40  ldr x4, pc+96 (addr 0x0000ffff914d5548)    ;; object: 0x40834909 WeakCell for 0x36407e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>
0xffff914d54ec    44  ldur x4, [x4, #7]
0xffff914d54f0    48  cmp x3, x4
0xffff914d54f4    52  b.ne #+0x2c (addr 0xffff914d5520)
0xffff914d54f8    56  ldr x5, pc+88 (addr 0x0000ffff914d5550)    ;; object: 0x40835f71 WeakCell for 0x36436031 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d54fc    60  ldur x5, [x5, #7]
0xffff914d5500    64  tbz w5, #0, #+0x20 (addr 0xffff914d5520)
0xffff914d5504    68  ldursw x4, [x5, #15]
0xffff914d5508    72  tbnz w4, #23, #+0x18 (addr 0xffff914d5520)
0xffff914d550c    76  ldr x4, [jssp], #8
0xffff914d5510    80  ldr x3, [jssp], #8
0xffff914d5514    84  ldr x2, pc+68 (addr 0x0000ffff914d5558)    ;; object: 0x4080d289 <String[5]: ctime>
0xffff914d5518    88  ldr x16, pc+72 (addr 0x0000ffff914d5560)    ;; code: HANDLER, StoreTransitionStub, minor: 198671
0xffff914d551c    92  br x16
0xffff914d5520    96  ldr x2, pc+72 (addr 0x0000ffff914d5568)    ;; object: 0x4080d289 <String[5]: ctime>
0xffff914d5524   100  ldr x4, [jssp], #8
0xffff914d5528   104  ldr x3, [jssp], #8
0xffff914d552c   108  ldr x16, pc+68 (addr 0x0000ffff914d5570)    ;; code: BUILTIN
0xffff914d5530   112  br x16
0xffff914d5534   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914d5538   120  d63f03e0       constant
0xffff914d553c   124  d503201f       constant
0xffff914d5540   128  408353d1       constant
0xffff914d5544   132  00000000       constant
0xffff914d5548   136  40834909       constant
0xffff914d554c   140  00000000       constant
0xffff914d5550   144  40835f71       constant
0xffff914d5554   148  00000000       constant
0xffff914d5558   152  4080d289       constant
0xffff914d555c   156  00000000       constant
0xffff914d5560   160  914d5380       constant
0xffff914d5564   164  0000ffff       constant
0xffff914d5568   168  4080d289       constant
0xffff914d556c   172  00000000       constant
0xffff914d5570   176  91422420       constant
0xffff914d5574   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914d54d0  embedded object  (0x408353d1 Cell for 0)
0xffff914d54e8  embedded object  (0x40834909 WeakCell for 0x36407e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>)
0xffff914d54f8  embedded object  (0x40835f71 WeakCell for 0x36436031 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d5514  embedded object  (0x4080d289 <String[5]: ctime>)
0xffff914d5518  code target (HANDLER)  (0xffff914d5380)
0xffff914d5520  embedded object  (0x4080d289 <String[5]: ctime>)
0xffff914d552c  code target (BUILTIN)  (0xffff91422420)
0xffff914d5534  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914d55e0     0  tbz w0, #0, #+0x90 (addr 0xffff914d5670)
0xffff914d55e4     4  mov x2, x0
0xffff914d55e8     8  stur x2, [x1, #127]
0xffff914d55ec    12  add x3, x1, #0x7f (127)
0xffff914d55f0    16  and x2, x2, #0xfffffffffff00000
0xffff914d55f4    20  ldr x2, [x2, #8]
0xffff914d55f8    24  tbz w2, #1, #+0x24 (addr 0xffff914d561c)
0xffff914d55fc    28  and x2, x1, #0xfffffffffff00000
0xffff914d5600    32  ldr x2, [x2, #8]
0xffff914d5604    36  tbz w2, #2, #+0x18 (addr 0xffff914d561c)
0xffff914d5608    40  sub csp, jssp, #0x8 (8)
0xffff914d560c    44  str lr, [jssp, #-8]!
0xffff914d5610    48  ldr x16, pc+80 (addr 0x0000ffff914d5660)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914d5614    52  blr x16
0xffff914d5618    56  ldr lr, [jssp], #8
0xffff914d561c    60  stur x5, [x1, #-1]
0xffff914d5620    64  tbz w5, #0, #+0x34 (addr 0xffff914d5654)
0xffff914d5624    68  sub x2, x1, #0x1 (1)
0xffff914d5628    72  and x5, x5, #0xfffffffffff00000
0xffff914d562c    76  ldr x5, [x5, #8]
0xffff914d5630    80  tbz w5, #1, #+0x24 (addr 0xffff914d5654)
0xffff914d5634    84  and x5, x1, #0xfffffffffff00000
0xffff914d5638    88  ldr x5, [x5, #8]
0xffff914d563c    92  tbz w5, #2, #+0x18 (addr 0xffff914d5654)
0xffff914d5640    96  sub csp, jssp, #0x8 (8)
0xffff914d5644   100  str lr, [jssp, #-8]!
0xffff914d5648   104  ldr x16, pc+32 (addr 0x0000ffff914d5668)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d564c   108  blr x16
0xffff914d5650   112  ldr lr, [jssp], #8
0xffff914d5654   116  ret
0xffff914d5658   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914d565c   124  d63f03e0       constant
0xffff914d5660   128  914170c0       constant
0xffff914d5664   132  0000ffff       constant
0xffff914d5668   136  91438080       constant
0xffff914d566c   140  0000ffff       constant
0xffff914d5670   144  movz x16, #0x0
0xffff914d5674   148  sub csp, jssp, #0x10 (16)
0xffff914d5678   152  stp fp, lr, [jssp, #-16]!
0xffff914d567c   156  bl #+0x4 (addr 0xffff914d5680)
0xffff914d5680   160  movz x17, #0xa00000000
0xffff914d5684   164  sub csp, jssp, #0x10 (16)
0xffff914d5688   168  stp x17, cp, [jssp, #-16]!
0xffff914d568c   172  add fp, jssp, #0x10 (16)
0xffff914d5690   176  ldr x17, pc+24 (addr 0x0000ffff914d56a8)    ;; lazy deoptimization bailout 0
0xffff914d5694   180  add x17, x17, x16
0xffff914d5698   184  br x17
0xffff914d569c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d56a0   192  d63f03e0       constant
0xffff914d56a4   196  d503201f       constant
0xffff914d56a8   200  91206000       constant
0xffff914d56ac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914d5610  code target (STUB)  (0xffff914170c0)
0xffff914d5648  code target (STUB)  (0xffff91438080)
0xffff914d5658  constant pool (size 24)
0xffff914d5690  runtime entry
0xffff914d569c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914d55e0     0  tbz w0, #0, #+0x90 (addr 0xffff914d5670)
0xffff914d55e4     4  mov x2, x0
0xffff914d55e8     8  stur x2, [x1, #127]
0xffff914d55ec    12  add x3, x1, #0x7f (127)
0xffff914d55f0    16  and x2, x2, #0xfffffffffff00000
0xffff914d55f4    20  ldr x2, [x2, #8]
0xffff914d55f8    24  tbz w2, #1, #+0x24 (addr 0xffff914d561c)
0xffff914d55fc    28  and x2, x1, #0xfffffffffff00000
0xffff914d5600    32  ldr x2, [x2, #8]
0xffff914d5604    36  tbz w2, #2, #+0x18 (addr 0xffff914d561c)
0xffff914d5608    40  sub csp, jssp, #0x8 (8)
0xffff914d560c    44  str lr, [jssp, #-8]!
0xffff914d5610    48  ldr x16, pc+80 (addr 0x0000ffff914d5660)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914d5614    52  blr x16
0xffff914d5618    56  ldr lr, [jssp], #8
0xffff914d561c    60  stur x5, [x1, #-1]
0xffff914d5620    64  tbz w5, #0, #+0x34 (addr 0xffff914d5654)
0xffff914d5624    68  sub x2, x1, #0x1 (1)
0xffff914d5628    72  and x5, x5, #0xfffffffffff00000
0xffff914d562c    76  ldr x5, [x5, #8]
0xffff914d5630    80  tbz w5, #1, #+0x24 (addr 0xffff914d5654)
0xffff914d5634    84  and x5, x1, #0xfffffffffff00000
0xffff914d5638    88  ldr x5, [x5, #8]
0xffff914d563c    92  tbz w5, #2, #+0x18 (addr 0xffff914d5654)
0xffff914d5640    96  sub csp, jssp, #0x8 (8)
0xffff914d5644   100  str lr, [jssp, #-8]!
0xffff914d5648   104  ldr x16, pc+32 (addr 0x0000ffff914d5668)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914d564c   108  blr x16
0xffff914d5650   112  ldr lr, [jssp], #8
0xffff914d5654   116  ret
0xffff914d5658   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914d565c   124  d63f03e0       constant
0xffff914d5660   128  914170c0       constant
0xffff914d5664   132  0000ffff       constant
0xffff914d5668   136  91438080       constant
0xffff914d566c   140  0000ffff       constant
0xffff914d5670   144  movz x16, #0x0
0xffff914d5674   148  sub csp, jssp, #0x10 (16)
0xffff914d5678   152  stp fp, lr, [jssp, #-16]!
0xffff914d567c   156  bl #+0x4 (addr 0xffff914d5680)
0xffff914d5680   160  movz x17, #0xa00000000
0xffff914d5684   164  sub csp, jssp, #0x10 (16)
0xffff914d5688   168  stp x17, cp, [jssp, #-16]!
0xffff914d568c   172  add fp, jssp, #0x10 (16)
0xffff914d5690   176  ldr x17, pc+24 (addr 0x0000ffff914d56a8)    ;; lazy deoptimization bailout 0
0xffff914d5694   180  add x17, x17, x16
0xffff914d5698   184  br x17
0xffff914d569c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d56a0   192  d63f03e0       constant
0xffff914d56a4   196  d503201f       constant
0xffff914d56a8   200  91206000       constant
0xffff914d56ac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914d5610  code target (STUB)  (0xffff914170c0)
0xffff914d5648  code target (STUB)  (0xffff91438080)
0xffff914d5658  constant pool (size 24)
0xffff914d5690  runtime entry
0xffff914d569c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = birthtime
compiler = unknown
Instructions (size = 184)
0xffff914d5720     0  sub csp, jssp, #0x8 (8)
0xffff914d5724     4  str x3, [jssp, #-8]!
0xffff914d5728     8  sub csp, jssp, #0x8 (8)
0xffff914d572c    12  str x4, [jssp, #-8]!
0xffff914d5730    16  ldr x3, pc+112 (addr 0x0000ffff914d57a0)    ;; object: 0x408353d1 Cell for 0
0xffff914d5734    20  ldur x3, [x3, #7]
0xffff914d5738    24  cmp x3, #0x0 (0)
0xffff914d573c    28  b.ne #+0x44 (addr 0xffff914d5780)
0xffff914d5740    32  tbz w0, #0, #+0x40 (addr 0xffff914d5780)
0xffff914d5744    36  ldur x3, [x0, #-1]
0xffff914d5748    40  ldr x4, pc+96 (addr 0x0000ffff914d57a8)    ;; object: 0x40834909 WeakCell for 0x36407e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>
0xffff914d574c    44  ldur x4, [x4, #7]
0xffff914d5750    48  cmp x3, x4
0xffff914d5754    52  b.ne #+0x2c (addr 0xffff914d5780)
0xffff914d5758    56  ldr x5, pc+88 (addr 0x0000ffff914d57b0)    ;; object: 0x40836061 WeakCell for 0x36436089 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d575c    60  ldur x5, [x5, #7]
0xffff914d5760    64  tbz w5, #0, #+0x20 (addr 0xffff914d5780)
0xffff914d5764    68  ldursw x4, [x5, #15]
0xffff914d5768    72  tbnz w4, #23, #+0x18 (addr 0xffff914d5780)
0xffff914d576c    76  ldr x4, [jssp], #8
0xffff914d5770    80  ldr x3, [jssp], #8
0xffff914d5774    84  ldr x2, pc+68 (addr 0x0000ffff914d57b8)    ;; object: 0x4080d2a9 <String[9]: birthtime>
0xffff914d5778    88  ldr x16, pc+72 (addr 0x0000ffff914d57c0)    ;; code: HANDLER, StoreTransitionStub, minor: 198672
0xffff914d577c    92  br x16
0xffff914d5780    96  ldr x2, pc+72 (addr 0x0000ffff914d57c8)    ;; object: 0x4080d2a9 <String[9]: birthtime>
0xffff914d5784   100  ldr x4, [jssp], #8
0xffff914d5788   104  ldr x3, [jssp], #8
0xffff914d578c   108  ldr x16, pc+68 (addr 0x0000ffff914d57d0)    ;; code: BUILTIN
0xffff914d5790   112  br x16
0xffff914d5794   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914d5798   120  d63f03e0       constant
0xffff914d579c   124  d503201f       constant
0xffff914d57a0   128  408353d1       constant
0xffff914d57a4   132  00000000       constant
0xffff914d57a8   136  40834909       constant
0xffff914d57ac   140  00000000       constant
0xffff914d57b0   144  40836061       constant
0xffff914d57b4   148  00000000       constant
0xffff914d57b8   152  4080d2a9       constant
0xffff914d57bc   156  00000000       constant
0xffff914d57c0   160  914d55e0       constant
0xffff914d57c4   164  0000ffff       constant
0xffff914d57c8   168  4080d2a9       constant
0xffff914d57cc   172  00000000       constant
0xffff914d57d0   176  91422420       constant
0xffff914d57d4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914d5730  embedded object  (0x408353d1 Cell for 0)
0xffff914d5748  embedded object  (0x40834909 WeakCell for 0x36407e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>)
0xffff914d5758  embedded object  (0x40836061 WeakCell for 0x36436089 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d5774  embedded object  (0x4080d2a9 <String[9]: birthtime>)
0xffff914d5778  code target (HANDLER)  (0xffff914d55e0)
0xffff914d5780  embedded object  (0x4080d2a9 <String[9]: birthtime>)
0xffff914d578c  code target (BUILTIN)  (0xffff91422420)
0xffff914d5794  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = isSymbolicLink
compiler = unknown
Instructions (size = 120)
0xffff914d5840     0  sub csp, jssp, #0x8 (8)
0xffff914d5844     4  str x3, [jssp, #-8]!
0xffff914d5848     8  sub csp, jssp, #0x8 (8)
0xffff914d584c    12  str x0, [jssp, #-8]!
0xffff914d5850    16  ldr x0, pc+72 (addr 0x0000ffff914d5898)    ;; object: 0x408353d1 Cell for 0
0xffff914d5854    20  ldur x0, [x0, #7]
0xffff914d5858    24  cmp x0, #0x0 (0)
0xffff914d585c    28  b.ne #+0x14 (addr 0xffff914d5870)
0xffff914d5860    32  ldr x3, pc+64 (addr 0x0000ffff914d58a0)    ;; object: 0x40836151 WeakCell for 0x51df2831 <an Object with map 0x364320f1>
0xffff914d5864    36  ldur x3, [x3, #7]
0xffff914d5868    40  tbz w3, #0, #+0x8 (addr 0xffff914d5870)
0xffff914d586c    44  b #+0x14 (addr 0xffff914d5880)
0xffff914d5870    48  ldr x0, [jssp], #8
0xffff914d5874    52  ldr x3, [jssp], #8
0xffff914d5878    56  ldr x16, pc+48 (addr 0x0000ffff914d58a8)    ;; code: BUILTIN
0xffff914d587c    60  br x16
0xffff914d5880    64  add jssp, jssp, #0x10 (16)
0xffff914d5884    68  mov x1, x3
0xffff914d5888    72  ldr x16, pc+40 (addr 0x0000ffff914d58b0)    ;; code: HANDLER, LoadConstantStub, minor: 6
0xffff914d588c    76  br x16
0xffff914d5890    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914d5894    84  d63f03e0       constant
0xffff914d5898    88  408353d1       constant
0xffff914d589c    92  00000000       constant
0xffff914d58a0    96  40836151       constant
0xffff914d58a4   100  00000000       constant
0xffff914d58a8   104  914222e0       constant
0xffff914d58ac   108  0000ffff       constant
0xffff914d58b0   112  9148b020       constant
0xffff914d58b4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914d5850  embedded object  (0x408353d1 Cell for 0)
0xffff914d5860  embedded object  (0x40836151 WeakCell for 0x51df2831 <an Object with map 0x364320f1>)
0xffff914d5878  code target (BUILTIN)  (0xffff914222e0)
0xffff914d5888  code target (HANDLER)  (0xffff9148b020)
0xffff914d5890  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _checkModeProperty
compiler = unknown
Instructions (size = 120)
0xffff914d5920     0  sub csp, jssp, #0x8 (8)
0xffff914d5924     4  str x3, [jssp, #-8]!
0xffff914d5928     8  sub csp, jssp, #0x8 (8)
0xffff914d592c    12  str x0, [jssp, #-8]!
0xffff914d5930    16  ldr x0, pc+72 (addr 0x0000ffff914d5978)    ;; object: 0x408353d1 Cell for 0
0xffff914d5934    20  ldur x0, [x0, #7]
0xffff914d5938    24  cmp x0, #0x0 (0)
0xffff914d593c    28  b.ne #+0x14 (addr 0xffff914d5950)
0xffff914d5940    32  ldr x3, pc+64 (addr 0x0000ffff914d5980)    ;; object: 0x408361a1 WeakCell for 0x51df2831 <an Object with map 0x364320f1>
0xffff914d5944    36  ldur x3, [x3, #7]
0xffff914d5948    40  tbz w3, #0, #+0x8 (addr 0xffff914d5950)
0xffff914d594c    44  b #+0x14 (addr 0xffff914d5960)
0xffff914d5950    48  ldr x0, [jssp], #8
0xffff914d5954    52  ldr x3, [jssp], #8
0xffff914d5958    56  ldr x16, pc+48 (addr 0x0000ffff914d5988)    ;; code: BUILTIN
0xffff914d595c    60  br x16
0xffff914d5960    64  add jssp, jssp, #0x10 (16)
0xffff914d5964    68  mov x1, x3
0xffff914d5968    72  ldr x16, pc+40 (addr 0x0000ffff914d5990)    ;; code: HANDLER, LoadConstantStub, minor: 1
0xffff914d596c    76  br x16
0xffff914d5970    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914d5974    84  d63f03e0       constant
0xffff914d5978    88  408353d1       constant
0xffff914d597c    92  00000000       constant
0xffff914d5980    96  408361a1       constant
0xffff914d5984   100  00000000       constant
0xffff914d5988   104  914222e0       constant
0xffff914d598c   108  0000ffff       constant
0xffff914d5990   112  91443300       constant
0xffff914d5994   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914d5930  embedded object  (0x408353d1 Cell for 0)
0xffff914d5940  embedded object  (0x408361a1 WeakCell for 0x51df2831 <an Object with map 0x364320f1>)
0xffff914d5958  code target (BUILTIN)  (0xffff914222e0)
0xffff914d5968  code target (HANDLER)  (0xffff91443300)
0xffff914d5970  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 197)
0xffff914d5a00     0  ldur d0, [x1, #31]
0xffff914d5a04     4  movz x1, #0xf2c0
0xffff914d5a08     8  movk x1, #0x4117, lsl #16
0xffff914d5a0c    12  ldp x2, x0, [x1]
0xffff914d5a10    16  adds x16, x2, #0x10 (16)
0xffff914d5a14    20  ccmp x16, x0, #nzCv, lo
0xffff914d5a18    24  b.hi #+0x20 (addr 0xffff914d5a38)
0xffff914d5a1c    28  str x16, [x1]
0xffff914d5a20    32  ldr x1, [x26, #120]
0xffff914d5a24    36  str x1, [x2]
0xffff914d5a28    40  orr x2, x2, #0x1
0xffff914d5a2c    44  stur d0, [x2, #7]
0xffff914d5a30    48  mov x0, x2
0xffff914d5a34    52  ret
0xffff914d5a38    56  sub csp, jssp, #0x10 (16)
0xffff914d5a3c    60  stp fp, lr, [jssp, #-16]!
0xffff914d5a40    64  movz fp, #0xa00000000
0xffff914d5a44    68  sub csp, jssp, #0x8 (8)
0xffff914d5a48    72  str fp, [jssp, #-8]!
0xffff914d5a4c    76  add fp, jssp, #0x8 (8)
0xffff914d5a50    80  movz x2, #0x0
0xffff914d5a54    84  mov x16, lr
0xffff914d5a58    88  ldr x17, pc+64 (addr 0x0000ffff914d5a98)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914d5a5c    92  blr x17
0xffff914d5a60    96  ldur cp, [fp, #-8]
0xffff914d5a64   100  movz x0, #0x0
0xffff914d5a68   104  movz x1, #0x4b48
0xffff914d5a6c   108  movk x1, #0xe4, lsl #16
0xffff914d5a70   112  ldr x16, pc+48 (addr 0x0000ffff914d5aa0)    ;; code: STUB, CEntryStub, minor: 5
0xffff914d5a74   116  blr x16
0xffff914d5a78   120  str x0, [jssp, #16]
0xffff914d5a7c   124  ldr x16, pc+44 (addr 0x0000ffff914d5aa8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914d5a80   128  blr x16
0xffff914d5a84   132  ldr lr, [jssp, #16]
0xffff914d5a88   136  ldp xzr, fp, [jssp], #24
0xffff914d5a8c   140  b #-0x60 (addr 0xffff914d5a2c)
0xffff914d5a90   144  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914d5a94   148  d63f03e0       constant
0xffff914d5a98   152  91406820       constant
0xffff914d5a9c   156  0000ffff       constant
0xffff914d5aa0   160  91406260       constant
0xffff914d5aa4   164  0000ffff       constant
0xffff914d5aa8   168  914068e0       constant
0xffff914d5aac   172  0000ffff       constant


Safepoints (size = 21)
0xffff914d5a78   120  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 11)
0xffff914d5a58  code target (STUB)  (0xffff91406820)
0xffff914d5a70  code target (STUB)  (0xffff91406260)
0xffff914d5a7c  code target (STUB)  (0xffff914068e0)
0xffff914d5a90  constant pool (size 32)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 197)
0xffff914d5a00     0  ldur d0, [x1, #31]
0xffff914d5a04     4  movz x1, #0xf2c0
0xffff914d5a08     8  movk x1, #0x4117, lsl #16
0xffff914d5a0c    12  ldp x2, x0, [x1]
0xffff914d5a10    16  adds x16, x2, #0x10 (16)
0xffff914d5a14    20  ccmp x16, x0, #nzCv, lo
0xffff914d5a18    24  b.hi #+0x20 (addr 0xffff914d5a38)
0xffff914d5a1c    28  str x16, [x1]
0xffff914d5a20    32  ldr x1, [x26, #120]
0xffff914d5a24    36  str x1, [x2]
0xffff914d5a28    40  orr x2, x2, #0x1
0xffff914d5a2c    44  stur d0, [x2, #7]
0xffff914d5a30    48  mov x0, x2
0xffff914d5a34    52  ret
0xffff914d5a38    56  sub csp, jssp, #0x10 (16)
0xffff914d5a3c    60  stp fp, lr, [jssp, #-16]!
0xffff914d5a40    64  movz fp, #0xa00000000
0xffff914d5a44    68  sub csp, jssp, #0x8 (8)
0xffff914d5a48    72  str fp, [jssp, #-8]!
0xffff914d5a4c    76  add fp, jssp, #0x8 (8)
0xffff914d5a50    80  movz x2, #0x0
0xffff914d5a54    84  mov x16, lr
0xffff914d5a58    88  ldr x17, pc+64 (addr 0x0000ffff914d5a98)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914d5a5c    92  blr x17
0xffff914d5a60    96  ldur cp, [fp, #-8]
0xffff914d5a64   100  movz x0, #0x0
0xffff914d5a68   104  movz x1, #0x4b48
0xffff914d5a6c   108  movk x1, #0xe4, lsl #16
0xffff914d5a70   112  ldr x16, pc+48 (addr 0x0000ffff914d5aa0)    ;; code: STUB, CEntryStub, minor: 5
0xffff914d5a74   116  blr x16
0xffff914d5a78   120  str x0, [jssp, #16]
0xffff914d5a7c   124  ldr x16, pc+44 (addr 0x0000ffff914d5aa8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914d5a80   128  blr x16
0xffff914d5a84   132  ldr lr, [jssp, #16]
0xffff914d5a88   136  ldp xzr, fp, [jssp], #24
0xffff914d5a8c   140  b #-0x60 (addr 0xffff914d5a2c)
0xffff914d5a90   144  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914d5a94   148  d63f03e0       constant
0xffff914d5a98   152  91406820       constant
0xffff914d5a9c   156  0000ffff       constant
0xffff914d5aa0   160  91406260       constant
0xffff914d5aa4   164  0000ffff       constant
0xffff914d5aa8   168  914068e0       constant
0xffff914d5aac   172  0000ffff       constant


Safepoints (size = 21)
0xffff914d5a78   120  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 11)
0xffff914d5a58  code target (STUB)  (0xffff91406820)
0xffff914d5a70  code target (STUB)  (0xffff91406260)
0xffff914d5a7c  code target (STUB)  (0xffff914068e0)
0xffff914d5a90  constant pool (size 32)


kind = HANDLER
major_key = <NoCache>Stub
name = set
compiler = unknown
Instructions (size = 120)
0xffff914d5b40     0  sub csp, jssp, #0x8 (8)
0xffff914d5b44     4  str x3, [jssp, #-8]!
0xffff914d5b48     8  sub csp, jssp, #0x8 (8)
0xffff914d5b4c    12  str x0, [jssp, #-8]!
0xffff914d5b50    16  ldr x0, pc+72 (addr 0x0000ffff914d5b98)    ;; object: 0x40835189 Cell for 0
0xffff914d5b54    20  ldur x0, [x0, #7]
0xffff914d5b58    24  cmp x0, #0x0 (0)
0xffff914d5b5c    28  b.ne #+0x14 (addr 0xffff914d5b70)
0xffff914d5b60    32  ldr x3, pc+64 (addr 0x0000ffff914d5ba0)    ;; object: 0x40836229 WeakCell for 0x51d757c1 <an Object with map 0x36411eb1>
0xffff914d5b64    36  ldur x3, [x3, #7]
0xffff914d5b68    40  tbz w3, #0, #+0x8 (addr 0xffff914d5b70)
0xffff914d5b6c    44  b #+0x14 (addr 0xffff914d5b80)
0xffff914d5b70    48  ldr x0, [jssp], #8
0xffff914d5b74    52  ldr x3, [jssp], #8
0xffff914d5b78    56  ldr x16, pc+48 (addr 0x0000ffff914d5ba8)    ;; code: BUILTIN
0xffff914d5b7c    60  br x16
0xffff914d5b80    64  add jssp, jssp, #0x10 (16)
0xffff914d5b84    68  mov x1, x3
0xffff914d5b88    72  ldr x16, pc+40 (addr 0x0000ffff914d5bb0)    ;; code: HANDLER, LoadConstantStub, minor: 4
0xffff914d5b8c    76  br x16
0xffff914d5b90    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914d5b94    84  d63f03e0       constant
0xffff914d5b98    88  40835189       constant
0xffff914d5b9c    92  00000000       constant
0xffff914d5ba0    96  40836229       constant
0xffff914d5ba4   100  00000000       constant
0xffff914d5ba8   104  914222e0       constant
0xffff914d5bac   108  0000ffff       constant
0xffff914d5bb0   112  91443480       constant
0xffff914d5bb4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914d5b50  embedded object  (0x40835189 Cell for 0)
0xffff914d5b60  embedded object  (0x40836229 WeakCell for 0x51d757c1 <an Object with map 0x36411eb1>)
0xffff914d5b78  code target (BUILTIN)  (0xffff914222e0)
0xffff914d5b88  code target (HANDLER)  (0xffff91443480)
0xffff914d5b90  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 192)
0xffff914d7d60     0  ldur x4, [x1, #15]
0xffff914d7d64     4  ldur w5, [x1, #27]
0xffff914d7d68     8  tbnz w2, #0, #+0x20 (addr 0xffff914d7d88)
0xffff914d7d6c    12  asr x7, x2, #32
0xffff914d7d70    16  cmp w7, w5
0xffff914d7d74    20  b.hs #+0x5c (addr 0xffff914d7dd0)
0xffff914d7d78    24  add x0, x4, w7, sxtw #3
0xffff914d7d7c    28  ldur w1, [x0, #19]
0xffff914d7d80    32  lsl x0, x1, #32
0xffff914d7d84    36  ret
0xffff914d7d88    40  sub csp, jssp, #0x10 (16)
0xffff914d7d8c    44  stp fp, lr, [jssp, #-16]!
0xffff914d7d90    48  movz fp, #0xa00000000
0xffff914d7d94    52  sub csp, jssp, #0x8 (8)
0xffff914d7d98    56  str fp, [jssp, #-8]!
0xffff914d7d9c    60  add fp, jssp, #0x8 (8)
0xffff914d7da0    64  ldur x16, [x2, #-1]
0xffff914d7da4    68  ldr x17, [x26, #120]
0xffff914d7da8    72  cmp x16, x17
0xffff914d7dac    76  b.ne #+0x34 (addr 0xffff914d7de0)
0xffff914d7db0    80  ldur d29, [x2, #7]
0xffff914d7db4    84  fcvtzs w7, d29
0xffff914d7db8    88  scvtf d0, w7
0xffff914d7dbc    92  fcmp d29, d0
0xffff914d7dc0    96  b.ne #+0x20 (addr 0xffff914d7de0)
0xffff914d7dc4   100  ldr lr, [jssp, #16]
0xffff914d7dc8   104  ldp xzr, fp, [jssp], #24
0xffff914d7dcc   108  b #-0x5c (addr 0xffff914d7d70)
0xffff914d7dd0   112  movz x16, #0x0
0xffff914d7dd4   116  sub csp, jssp, #0x10 (16)
0xffff914d7dd8   120  stp fp, lr, [jssp, #-16]!
0xffff914d7ddc   124  bl #+0xc (addr 0xffff914d7de8)
0xffff914d7de0   128  movz x16, #0x8
0xffff914d7de4   132  bl #+0x14 (addr 0xffff914d7df8)
0xffff914d7de8   136  movz x17, #0xa00000000
0xffff914d7dec   140  sub csp, jssp, #0x10 (16)
0xffff914d7df0   144  stp x17, cp, [jssp, #-16]!
0xffff914d7df4   148  add fp, jssp, #0x10 (16)
0xffff914d7df8   152  ldr x17, pc+24 (addr 0x0000ffff914d7e10)    ;; lazy deoptimization bailout 0
0xffff914d7dfc   156  add x17, x17, x16
0xffff914d7e00   160  br x17
0xffff914d7e04   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d7e08   168  d63f03e0       constant
0xffff914d7e0c   172  d503201f       constant
0xffff914d7e10   176  91206000       constant
0xffff914d7e14   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914d7df8  runtime entry
0xffff914d7e04  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 192)
0xffff914d7d60     0  ldur x4, [x1, #15]
0xffff914d7d64     4  ldur w5, [x1, #27]
0xffff914d7d68     8  tbnz w2, #0, #+0x20 (addr 0xffff914d7d88)
0xffff914d7d6c    12  asr x7, x2, #32
0xffff914d7d70    16  cmp w7, w5
0xffff914d7d74    20  b.hs #+0x5c (addr 0xffff914d7dd0)
0xffff914d7d78    24  add x0, x4, w7, sxtw #3
0xffff914d7d7c    28  ldur w1, [x0, #19]
0xffff914d7d80    32  lsl x0, x1, #32
0xffff914d7d84    36  ret
0xffff914d7d88    40  sub csp, jssp, #0x10 (16)
0xffff914d7d8c    44  stp fp, lr, [jssp, #-16]!
0xffff914d7d90    48  movz fp, #0xa00000000
0xffff914d7d94    52  sub csp, jssp, #0x8 (8)
0xffff914d7d98    56  str fp, [jssp, #-8]!
0xffff914d7d9c    60  add fp, jssp, #0x8 (8)
0xffff914d7da0    64  ldur x16, [x2, #-1]
0xffff914d7da4    68  ldr x17, [x26, #120]
0xffff914d7da8    72  cmp x16, x17
0xffff914d7dac    76  b.ne #+0x34 (addr 0xffff914d7de0)
0xffff914d7db0    80  ldur d29, [x2, #7]
0xffff914d7db4    84  fcvtzs w7, d29
0xffff914d7db8    88  scvtf d0, w7
0xffff914d7dbc    92  fcmp d29, d0
0xffff914d7dc0    96  b.ne #+0x20 (addr 0xffff914d7de0)
0xffff914d7dc4   100  ldr lr, [jssp, #16]
0xffff914d7dc8   104  ldp xzr, fp, [jssp], #24
0xffff914d7dcc   108  b #-0x5c (addr 0xffff914d7d70)
0xffff914d7dd0   112  movz x16, #0x0
0xffff914d7dd4   116  sub csp, jssp, #0x10 (16)
0xffff914d7dd8   120  stp fp, lr, [jssp, #-16]!
0xffff914d7ddc   124  bl #+0xc (addr 0xffff914d7de8)
0xffff914d7de0   128  movz x16, #0x8
0xffff914d7de4   132  bl #+0x14 (addr 0xffff914d7df8)
0xffff914d7de8   136  movz x17, #0xa00000000
0xffff914d7dec   140  sub csp, jssp, #0x10 (16)
0xffff914d7df0   144  stp x17, cp, [jssp, #-16]!
0xffff914d7df4   148  add fp, jssp, #0x10 (16)
0xffff914d7df8   152  ldr x17, pc+24 (addr 0x0000ffff914d7e10)    ;; lazy deoptimization bailout 0
0xffff914d7dfc   156  add x17, x17, x16
0xffff914d7e00   160  br x17
0xffff914d7e04   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d7e08   168  d63f03e0       constant
0xffff914d7e0c   172  d503201f       constant
0xffff914d7e10   176  91206000       constant
0xffff914d7e14   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914d7df8  runtime entry
0xffff914d7e04  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 477)
0xffff914d8ac0     0  ldur x4, [x3, #47]
0xffff914d8ac4     4  tbnz w2, #0, #+0xa0 (addr 0xffff914d8b64)
0xffff914d8ac8     8  asr x6, x2, #32
0xffff914d8acc    12  add x5, x4, #0x17 (23)
0xffff914d8ad0    16  ldr x7, [x5, w6, sxtw #3]
0xffff914d8ad4    20  ldr x4, pc+324 (addr 0x0000ffff914d8c18)    ;; object: 0x49b04241 <undefined>
0xffff914d8ad8    24  cmp x7, x4
0xffff914d8adc    28  b.eq #+0x84 (addr 0xffff914d8b60)
0xffff914d8ae0    32  ldur x4, [x7, #7]
0xffff914d8ae4    36  ldur x5, [x4, #-1]
0xffff914d8ae8    40  ldrb w6, [x5, #7]
0xffff914d8aec    44  cmp w6, #0x5 (5)
0xffff914d8af0    48  b.ne #+0x70 (addr 0xffff914d8b60)
0xffff914d8af4    52  movz x1, #0xf2c0
0xffff914d8af8    56  movk x1, #0x4117, lsl #16
0xffff914d8afc    60  ldp x2, x0, [x1]
0xffff914d8b00    64  adds x16, x2, #0x38 (56)
0xffff914d8b04    68  ccmp x16, x0, #nzCv, lo
0xffff914d8b08    72  b.hi #+0xa4 (addr 0xffff914d8bac)
0xffff914d8b0c    76  str x16, [x1]
0xffff914d8b10    80  orr x2, x2, #0x1
0xffff914d8b14    84  stur x5, [x2, #-1]
0xffff914d8b18    88  ldur x0, [x4, #7]
0xffff914d8b1c    92  stur x0, [x2, #7]
0xffff914d8b20    96  ldur x0, [x4, #15]
0xffff914d8b24   100  stur x0, [x2, #15]
0xffff914d8b28   104  ldur x0, [x4, #23]
0xffff914d8b2c   108  stur x0, [x2, #23]
0xffff914d8b30   112  ldur x0, [x4, #31]
0xffff914d8b34   116  stur x0, [x2, #31]
0xffff914d8b38   120  add x0, x2, #0x28 (40)
0xffff914d8b3c   124  ldr x1, pc+228 (addr 0x0000ffff914d8c20)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d8b40   128  stur x1, [x0, #-1]
0xffff914d8b44   132  stur x7, [x0, #7]
0xffff914d8b48   136  ldur w0, [x7, #35]
0xffff914d8b4c   140  add w0, w0, #0x1 (1)
0xffff914d8b50   144  lsl x0, x0, #32
0xffff914d8b54   148  stur x0, [x7, #31]
0xffff914d8b58   152  mov x0, x2
0xffff914d8b5c   156  ret
0xffff914d8b60   160  b #+0xe0 (addr 0xffff914d8c40)
0xffff914d8b64   164  sub csp, jssp, #0x10 (16)
0xffff914d8b68   168  stp fp, lr, [jssp, #-16]!
0xffff914d8b6c   172  movz fp, #0xa00000000
0xffff914d8b70   176  sub csp, jssp, #0x8 (8)
0xffff914d8b74   180  str fp, [jssp, #-8]!
0xffff914d8b78   184  add fp, jssp, #0x8 (8)
0xffff914d8b7c   188  ldur x16, [x2, #-1]
0xffff914d8b80   192  ldr x17, [x26, #120]
0xffff914d8b84   196  cmp x16, x17
0xffff914d8b88   200  b.ne #+0xc8 (addr 0xffff914d8c50)
0xffff914d8b8c   204  ldur d29, [x2, #7]
0xffff914d8b90   208  fcvtzs w6, d29
0xffff914d8b94   212  scvtf d0, w6
0xffff914d8b98   216  fcmp d29, d0
0xffff914d8b9c   220  b.ne #+0xb4 (addr 0xffff914d8c50)
0xffff914d8ba0   224  ldr lr, [jssp, #16]
0xffff914d8ba4   228  ldp xzr, fp, [jssp], #24
0xffff914d8ba8   232  b #-0xdc (addr 0xffff914d8acc)
0xffff914d8bac   236  sub csp, jssp, #0x10 (16)
0xffff914d8bb0   240  stp fp, lr, [jssp, #-16]!
0xffff914d8bb4   244  movz fp, #0xa00000000
0xffff914d8bb8   248  sub csp, jssp, #0x8 (8)
0xffff914d8bbc   252  str fp, [jssp, #-8]!
0xffff914d8bc0   256  add fp, jssp, #0x8 (8)
0xffff914d8bc4   260  movz x2, #0x0
0xffff914d8bc8   264  mov x16, lr
0xffff914d8bcc   268  ldr x17, pc+92 (addr 0x0000ffff914d8c28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914d8bd0   272  blr x17
0xffff914d8bd4   276  movz x0, #0x3800000000
0xffff914d8bd8   280  movz x10, #0x0
0xffff914d8bdc   284  sub csp, jssp, #0x10 (16)
0xffff914d8be0   288  stp x10, x0, [jssp, #-16]!
0xffff914d8be4   292  movz x0, #0x2
0xffff914d8be8   296  movz x1, #0x5b88
0xffff914d8bec   300  movk x1, #0xe2, lsl #16
0xffff914d8bf0   304  ldr x16, pc+64 (addr 0x0000ffff914d8c30)    ;; code: STUB, CEntryStub, minor: 5
0xffff914d8bf4   308  blr x16
0xffff914d8bf8   312  str x0, [jssp, #16]
0xffff914d8bfc   316  ldr x16, pc+60 (addr 0x0000ffff914d8c38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914d8c00   320  blr x16
0xffff914d8c04   324  ldr lr, [jssp, #16]
0xffff914d8c08   328  ldp xzr, fp, [jssp], #24
0xffff914d8c0c   332  b #-0xf8 (addr 0xffff914d8b14)
0xffff914d8c10   336  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff914d8c14   340  d63f03e0       constant
0xffff914d8c18   344  49b04241       constant
0xffff914d8c1c   348  00000000       constant
0xffff914d8c20   352  36405d81       constant
0xffff914d8c24   356  00000000       constant
0xffff914d8c28   360  91406820       constant
0xffff914d8c2c   364  0000ffff       constant
0xffff914d8c30   368  91406260       constant
0xffff914d8c34   372  0000ffff       constant
0xffff914d8c38   376  914068e0       constant
0xffff914d8c3c   380  0000ffff       constant
0xffff914d8c40   384  movz x16, #0x0
0xffff914d8c44   388  sub csp, jssp, #0x10 (16)
0xffff914d8c48   392  stp fp, lr, [jssp, #-16]!
0xffff914d8c4c   396  bl #+0xc (addr 0xffff914d8c58)
0xffff914d8c50   400  movz x16, #0x8
0xffff914d8c54   404  bl #+0x14 (addr 0xffff914d8c68)
0xffff914d8c58   408  movz x17, #0xa00000000
0xffff914d8c5c   412  sub csp, jssp, #0x10 (16)
0xffff914d8c60   416  stp x17, cp, [jssp, #-16]!
0xffff914d8c64   420  add fp, jssp, #0x10 (16)
0xffff914d8c68   424  ldr x17, pc+24 (addr 0x0000ffff914d8c80)    ;; lazy deoptimization bailout 0
0xffff914d8c6c   428  add x17, x17, x16
0xffff914d8c70   432  br x17
0xffff914d8c74   436  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d8c78   440  d63f03e0       constant
0xffff914d8c7c   444  d503201f       constant
0xffff914d8c80   448  91206000       constant
0xffff914d8c84   452  0000ffff       constant


Safepoints (size = 21)
0xffff914d8bf8   312  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff914d8ad4  embedded object  (0x49b04241 <undefined>)
0xffff914d8b3c  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d8bcc  code target (STUB)  (0xffff91406820)
0xffff914d8bf0  code target (STUB)  (0xffff91406260)
0xffff914d8bfc  code target (STUB)  (0xffff914068e0)
0xffff914d8c10  constant pool (size 48)
0xffff914d8c68  runtime entry
0xffff914d8c74  constant pool (size 20)

--- End code ---
kind = STUB
major_key = FastCloneShallowObjectStub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 477)
0xffff914d8ac0     0  ldur x4, [x3, #47]
0xffff914d8ac4     4  tbnz w2, #0, #+0xa0 (addr 0xffff914d8b64)
0xffff914d8ac8     8  asr x6, x2, #32
0xffff914d8acc    12  add x5, x4, #0x17 (23)
0xffff914d8ad0    16  ldr x7, [x5, w6, sxtw #3]
0xffff914d8ad4    20  ldr x4, pc+324 (addr 0x0000ffff914d8c18)    ;; object: 0x49b04241 <undefined>
0xffff914d8ad8    24  cmp x7, x4
0xffff914d8adc    28  b.eq #+0x84 (addr 0xffff914d8b60)
0xffff914d8ae0    32  ldur x4, [x7, #7]
0xffff914d8ae4    36  ldur x5, [x4, #-1]
0xffff914d8ae8    40  ldrb w6, [x5, #7]
0xffff914d8aec    44  cmp w6, #0x5 (5)
0xffff914d8af0    48  b.ne #+0x70 (addr 0xffff914d8b60)
0xffff914d8af4    52  movz x1, #0xf2c0
0xffff914d8af8    56  movk x1, #0x4117, lsl #16
0xffff914d8afc    60  ldp x2, x0, [x1]
0xffff914d8b00    64  adds x16, x2, #0x38 (56)
0xffff914d8b04    68  ccmp x16, x0, #nzCv, lo
0xffff914d8b08    72  b.hi #+0xa4 (addr 0xffff914d8bac)
0xffff914d8b0c    76  str x16, [x1]
0xffff914d8b10    80  orr x2, x2, #0x1
0xffff914d8b14    84  stur x5, [x2, #-1]
0xffff914d8b18    88  ldur x0, [x4, #7]
0xffff914d8b1c    92  stur x0, [x2, #7]
0xffff914d8b20    96  ldur x0, [x4, #15]
0xffff914d8b24   100  stur x0, [x2, #15]
0xffff914d8b28   104  ldur x0, [x4, #23]
0xffff914d8b2c   108  stur x0, [x2, #23]
0xffff914d8b30   112  ldur x0, [x4, #31]
0xffff914d8b34   116  stur x0, [x2, #31]
0xffff914d8b38   120  add x0, x2, #0x28 (40)
0xffff914d8b3c   124  ldr x1, pc+228 (addr 0x0000ffff914d8c20)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914d8b40   128  stur x1, [x0, #-1]
0xffff914d8b44   132  stur x7, [x0, #7]
0xffff914d8b48   136  ldur w0, [x7, #35]
0xffff914d8b4c   140  add w0, w0, #0x1 (1)
0xffff914d8b50   144  lsl x0, x0, #32
0xffff914d8b54   148  stur x0, [x7, #31]
0xffff914d8b58   152  mov x0, x2
0xffff914d8b5c   156  ret
0xffff914d8b60   160  b #+0xe0 (addr 0xffff914d8c40)
0xffff914d8b64   164  sub csp, jssp, #0x10 (16)
0xffff914d8b68   168  stp fp, lr, [jssp, #-16]!
0xffff914d8b6c   172  movz fp, #0xa00000000
0xffff914d8b70   176  sub csp, jssp, #0x8 (8)
0xffff914d8b74   180  str fp, [jssp, #-8]!
0xffff914d8b78   184  add fp, jssp, #0x8 (8)
0xffff914d8b7c   188  ldur x16, [x2, #-1]
0xffff914d8b80   192  ldr x17, [x26, #120]
0xffff914d8b84   196  cmp x16, x17
0xffff914d8b88   200  b.ne #+0xc8 (addr 0xffff914d8c50)
0xffff914d8b8c   204  ldur d29, [x2, #7]
0xffff914d8b90   208  fcvtzs w6, d29
0xffff914d8b94   212  scvtf d0, w6
0xffff914d8b98   216  fcmp d29, d0
0xffff914d8b9c   220  b.ne #+0xb4 (addr 0xffff914d8c50)
0xffff914d8ba0   224  ldr lr, [jssp, #16]
0xffff914d8ba4   228  ldp xzr, fp, [jssp], #24
0xffff914d8ba8   232  b #-0xdc (addr 0xffff914d8acc)
0xffff914d8bac   236  sub csp, jssp, #0x10 (16)
0xffff914d8bb0   240  stp fp, lr, [jssp, #-16]!
0xffff914d8bb4   244  movz fp, #0xa00000000
0xffff914d8bb8   248  sub csp, jssp, #0x8 (8)
0xffff914d8bbc   252  str fp, [jssp, #-8]!
0xffff914d8bc0   256  add fp, jssp, #0x8 (8)
0xffff914d8bc4   260  movz x2, #0x0
0xffff914d8bc8   264  mov x16, lr
0xffff914d8bcc   268  ldr x17, pc+92 (addr 0x0000ffff914d8c28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914d8bd0   272  blr x17
0xffff914d8bd4   276  movz x0, #0x3800000000
0xffff914d8bd8   280  movz x10, #0x0
0xffff914d8bdc   284  sub csp, jssp, #0x10 (16)
0xffff914d8be0   288  stp x10, x0, [jssp, #-16]!
0xffff914d8be4   292  movz x0, #0x2
0xffff914d8be8   296  movz x1, #0x5b88
0xffff914d8bec   300  movk x1, #0xe2, lsl #16
0xffff914d8bf0   304  ldr x16, pc+64 (addr 0x0000ffff914d8c30)    ;; code: STUB, CEntryStub, minor: 5
0xffff914d8bf4   308  blr x16
0xffff914d8bf8   312  str x0, [jssp, #16]
0xffff914d8bfc   316  ldr x16, pc+60 (addr 0x0000ffff914d8c38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914d8c00   320  blr x16
0xffff914d8c04   324  ldr lr, [jssp, #16]
0xffff914d8c08   328  ldp xzr, fp, [jssp], #24
0xffff914d8c0c   332  b #-0xf8 (addr 0xffff914d8b14)
0xffff914d8c10   336  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff914d8c14   340  d63f03e0       constant
0xffff914d8c18   344  49b04241       constant
0xffff914d8c1c   348  00000000       constant
0xffff914d8c20   352  36405d81       constant
0xffff914d8c24   356  00000000       constant
0xffff914d8c28   360  91406820       constant
0xffff914d8c2c   364  0000ffff       constant
0xffff914d8c30   368  91406260       constant
0xffff914d8c34   372  0000ffff       constant
0xffff914d8c38   376  914068e0       constant
0xffff914d8c3c   380  0000ffff       constant
0xffff914d8c40   384  movz x16, #0x0
0xffff914d8c44   388  sub csp, jssp, #0x10 (16)
0xffff914d8c48   392  stp fp, lr, [jssp, #-16]!
0xffff914d8c4c   396  bl #+0xc (addr 0xffff914d8c58)
0xffff914d8c50   400  movz x16, #0x8
0xffff914d8c54   404  bl #+0x14 (addr 0xffff914d8c68)
0xffff914d8c58   408  movz x17, #0xa00000000
0xffff914d8c5c   412  sub csp, jssp, #0x10 (16)
0xffff914d8c60   416  stp x17, cp, [jssp, #-16]!
0xffff914d8c64   420  add fp, jssp, #0x10 (16)
0xffff914d8c68   424  ldr x17, pc+24 (addr 0x0000ffff914d8c80)    ;; lazy deoptimization bailout 0
0xffff914d8c6c   428  add x17, x17, x16
0xffff914d8c70   432  br x17
0xffff914d8c74   436  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914d8c78   440  d63f03e0       constant
0xffff914d8c7c   444  d503201f       constant
0xffff914d8c80   448  91206000       constant
0xffff914d8c84   452  0000ffff       constant


Safepoints (size = 21)
0xffff914d8bf8   312  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff914d8ad4  embedded object  (0x49b04241 <undefined>)
0xffff914d8b3c  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914d8bcc  code target (STUB)  (0xffff91406820)
0xffff914d8bf0  code target (STUB)  (0xffff91406260)
0xffff914d8bfc  code target (STUB)  (0xffff914068e0)
0xffff914d8c10  constant pool (size 48)
0xffff914d8c68  runtime entry
0xffff914d8c74  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MEGAMORPHIC
extra_ic_state = 2709
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 181)
0xffff914daa00     0  movz x16, #0xa00000000
0xffff914daa04     4  sub csp, jssp, #0x10 (16)
0xffff914daa08     8  stp fp, lr, [jssp, #-16]!
0xffff914daa0c    12  mov fp, jssp
0xffff914daa10    16  sub csp, jssp, #0x20 (32)
0xffff914daa14    20  sub jssp, jssp, #0x20 (32)
0xffff914daa18    24  stur x16, [fp, #-8]
0xffff914daa1c    28  str x1, [jssp, #16]
0xffff914daa20    32  str x0, [jssp, #8]
0xffff914daa24    36  str cp, [jssp]
0xffff914daa28    40  mov x3, cp
0xffff914daa2c    44  mov x2, x0
0xffff914daa30    48  tbnz w2, #0, #+0x48 (addr 0xffff914daa78)
0xffff914daa34    52  sub csp, jssp, #0x10 (16)
0xffff914daa38    56  stp x2, x1, [jssp, #-16]!
0xffff914daa3c    60  mov cp, x3
0xffff914daa40    64  movz x0, #0x2
0xffff914daa44    68  movz x1, #0xf938
0xffff914daa48    72  movk x1, #0xe4, lsl #16
0xffff914daa4c    76  ldr x16, pc+36 (addr 0x0000ffff914daa70)    ;; code: STUB, CEntryStub, minor: 4
0xffff914daa50    80  blr x16
0xffff914daa54    84  ldr cp, [jssp]
0xffff914daa58    88  mov jssp, fp
0xffff914daa5c    92  ldp fp, lr, [jssp], #16
0xffff914daa60    96  ret
0xffff914daa64   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914daa68   104  d63f03e0       constant
0xffff914daa6c   108  d503201f       constant
0xffff914daa70   112  91406060       constant
0xffff914daa74   116  0000ffff       constant
0xffff914daa78   120  movz x16, #0x0
0xffff914daa7c   124  bl #+0x4 (addr 0xffff914daa80)
0xffff914daa80   128  ldr x17, pc+24 (addr 0x0000ffff914daa98)    ;; lazy deoptimization bailout 0
0xffff914daa84   132  add x17, x17, x16
0xffff914daa88   136  br x17
0xffff914daa8c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914daa90   144  d63f03e0       constant
0xffff914daa94   148  d503201f       constant
0xffff914daa98   152  91206000       constant
0xffff914daa9c   156  0000ffff       constant


Safepoints (size = 21)
0xffff914daa54    84  111000 (sp -> fp)       1

RelocInfo (size = 17)
0xffff914daa4c  code target (STUB)  (0xffff91406060)
0xffff914daa64  constant pool (size 20)
0xffff914daa80  runtime entry
0xffff914daa8c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MEGAMORPHIC
extra_ic_state = 2709
name = BinaryOpICStub(SHR:Generic*Smi->Smi)
compiler = crankshaft
Instructions (size = 181)
0xffff914daa00     0  movz x16, #0xa00000000
0xffff914daa04     4  sub csp, jssp, #0x10 (16)
0xffff914daa08     8  stp fp, lr, [jssp, #-16]!
0xffff914daa0c    12  mov fp, jssp
0xffff914daa10    16  sub csp, jssp, #0x20 (32)
0xffff914daa14    20  sub jssp, jssp, #0x20 (32)
0xffff914daa18    24  stur x16, [fp, #-8]
0xffff914daa1c    28  str x1, [jssp, #16]
0xffff914daa20    32  str x0, [jssp, #8]
0xffff914daa24    36  str cp, [jssp]
0xffff914daa28    40  mov x3, cp
0xffff914daa2c    44  mov x2, x0
0xffff914daa30    48  tbnz w2, #0, #+0x48 (addr 0xffff914daa78)
0xffff914daa34    52  sub csp, jssp, #0x10 (16)
0xffff914daa38    56  stp x2, x1, [jssp, #-16]!
0xffff914daa3c    60  mov cp, x3
0xffff914daa40    64  movz x0, #0x2
0xffff914daa44    68  movz x1, #0xf938
0xffff914daa48    72  movk x1, #0xe4, lsl #16
0xffff914daa4c    76  ldr x16, pc+36 (addr 0x0000ffff914daa70)    ;; code: STUB, CEntryStub, minor: 4
0xffff914daa50    80  blr x16
0xffff914daa54    84  ldr cp, [jssp]
0xffff914daa58    88  mov jssp, fp
0xffff914daa5c    92  ldp fp, lr, [jssp], #16
0xffff914daa60    96  ret
0xffff914daa64   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914daa68   104  d63f03e0       constant
0xffff914daa6c   108  d503201f       constant
0xffff914daa70   112  91406060       constant
0xffff914daa74   116  0000ffff       constant
0xffff914daa78   120  movz x16, #0x0
0xffff914daa7c   124  bl #+0x4 (addr 0xffff914daa80)
0xffff914daa80   128  ldr x17, pc+24 (addr 0x0000ffff914daa98)    ;; lazy deoptimization bailout 0
0xffff914daa84   132  add x17, x17, x16
0xffff914daa88   136  br x17
0xffff914daa8c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914daa90   144  d63f03e0       constant
0xffff914daa94   148  d503201f       constant
0xffff914daa98   152  91206000       constant
0xffff914daa9c   156  0000ffff       constant


Safepoints (size = 21)
0xffff914daa54    84  111000 (sp -> fp)       1

RelocInfo (size = 17)
0xffff914daa4c  code target (STUB)  (0xffff91406060)
0xffff914daa64  constant pool (size 20)
0xffff914daa80  runtime entry
0xffff914daa8c  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*STRING -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 632)
0xffff914dab20     0  tbnz w1, #0, #+0x1d4 (addr 0xffff914dacf4)
0xffff914dab24     4  orr x16, x1, x0
0xffff914dab28     8  tbnz w16, #0, #+0x10 (addr 0xffff914dab38)
0xffff914dab2c    12  asr x1, x1, #32
0xffff914dab30    16  sub x0, x1, x0, asr #32
0xffff914dab34    20  ret
0xffff914dab38    24  cmp x0, x1
0xffff914dab3c    28  b.ne #+0x30 (addr 0xffff914dab6c)
0xffff914dab40    32  ldur x16, [x0, #-1]
0xffff914dab44    36  ldr x17, [x26, #120]
0xffff914dab48    40  cmp x16, x17
0xffff914dab4c    44  b.eq #+0xc (addr 0xffff914dab58)
0xffff914dab50    48  movz x0, #0x0
0xffff914dab54    52  ret
0xffff914dab58    56  ldur d0, [x0, #7]
0xffff914dab5c    60  fcmp d0, d0
0xffff914dab60    64  b.vc #-0x10 (addr 0xffff914dab50)
0xffff914dab64    68  movn x0, #0x0
0xffff914dab68    72  ret
0xffff914dab6c    76  and x16, x1, x0
0xffff914dab70    80  tbnz w16, #0, #+0x64 (addr 0xffff914dabd4)
0xffff914dab74    84  tbz w0, #0, #+0x24 (addr 0xffff914dab98)
0xffff914dab78    88  ldur x16, [x0, #-1]
0xffff914dab7c    92  ldr x17, [x26, #120]
0xffff914dab80    96  cmp x16, x17
0xffff914dab84   100  b.eq #+0x8 (addr 0xffff914dab8c)
0xffff914dab88   104  ret
0xffff914dab8c   108  ldur d0, [x0, #7]
0xffff914dab90   112  scvtf d1, x1, #32
0xffff914dab94   116  b #+0x24 (addr 0xffff914dabb8)
0xffff914dab98   120  ldur x16, [x1, #-1]
0xffff914dab9c   124  ldr x17, [x26, #120]
0xffff914daba0   128  cmp x16, x17
0xffff914daba4   132  b.eq #+0xc (addr 0xffff914dabb0)
0xffff914daba8   136  movz x0, #0x1
0xffff914dabac   140  ret
0xffff914dabb0   144  ldur d1, [x1, #7]
0xffff914dabb4   148  scvtf d0, x0, #32
0xffff914dabb8   152  fcmp d1, d0
0xffff914dabbc   156  b.vs #+0x10 (addr 0xffff914dabcc)
0xffff914dabc0   160  cset x0, gt
0xffff914dabc4   164  csinv x0, x0, xzr, ge
0xffff914dabc8   168  ret
0xffff914dabcc   172  movn x0, #0x0
0xffff914dabd0   176  ret
0xffff914dabd4   180  ldur x10, [x0, #-1]
0xffff914dabd8   184  ldur x12, [x1, #-1]
0xffff914dabdc   188  ldrb w11, [x10, #11]
0xffff914dabe0   192  ldrb w13, [x12, #11]
0xffff914dabe4   196  cmp x11, #0xb1 (177)
0xffff914dabe8   200  b.lt #+0x8 (addr 0xffff914dabf0)
0xffff914dabec   204  ret
0xffff914dabf0   208  cmp x11, #0x83 (131)
0xffff914dabf4   212  movz x16, #0x83
0xffff914dabf8   216  ccmp x13, x16, #nZcv, ne
0xffff914dabfc   220  movz x16, #0xb1
0xffff914dac00   224  ccmp x13, x16, #NzcV, ne
0xffff914dac04   228  b.ge #-0x18 (addr 0xffff914dabec)
0xffff914dac08   232  orr x14, x13, x11
0xffff914dac0c   236  tst x14, #0xc0
0xffff914dac10   240  b.eq #-0x24 (addr 0xffff914dabec)
0xffff914dac14   244  cmp x11, #0x81 (129)
0xffff914dac18   248  b.ne #+0x18 (addr 0xffff914dac30)
0xffff914dac1c   252  cmp x12, x10
0xffff914dac20   256  b.ne #+0x10 (addr 0xffff914dac30)
0xffff914dac24   260  ldur d1, [x1, #7]
0xffff914dac28   264  ldur d0, [x0, #7]
0xffff914dac2c   268  b #-0x74 (addr 0xffff914dabb8)
0xffff914dac30   272  movz x16, #0x87
0xffff914dac34   276  and x14, x13, x16
0xffff914dac38   280  movz x16, #0x87
0xffff914dac3c   284  and x15, x11, x16
0xffff914dac40   288  cmp x14, #0x4 (4)
0xffff914dac44   292  ccmp x15, #4, #nzcv, eq
0xffff914dac48   296  b.ne #+0x5c (addr 0xffff914daca4)
0xffff914dac4c   300  ldur x10, [x1, #15]
0xffff914dac50   304  ldur x11, [x0, #15]
0xffff914dac54   308  cmp x10, x11
0xffff914dac58   312  b.eq #+0xc (addr 0xffff914dac64)
0xffff914dac5c   316  movz x0, #0x100000000
0xffff914dac60   320  ret
0xffff914dac64   324  cbnz x10, #+0xc (addr 0xffff914dac70)
0xffff914dac68   328  movz x0, #0x0
0xffff914dac6c   332  ret
0xffff914dac70   336  asr x10, x10, #32
0xffff914dac74   340  add x11, x10, #0x17 (23)
0xffff914dac78   344  add x1, x1, x11
0xffff914dac7c   348  add x0, x0, x11
0xffff914dac80   352  neg x10, x10
0xffff914dac84   356  ldrb w11, [x1, x10]
0xffff914dac88   360  ldrb w12, [x0, x10]
0xffff914dac8c   364  cmp x11, x12
0xffff914dac90   368  b.ne #-0x34 (addr 0xffff914dac5c)
0xffff914dac94   372  add x10, x10, #0x1 (1)
0xffff914dac98   376  cbnz x10, #-0x14 (addr 0xffff914dac84)
0xffff914dac9c   380  movz x0, #0x0
0xffff914daca0   384  ret
0xffff914daca4   388  movz x16, #0xc00000000
0xffff914daca8   392  sub csp, jssp, #0x10 (16)
0xffff914dacac   396  stp fp, lr, [jssp, #-16]!
0xffff914dacb0   400  sub csp, jssp, #0x10 (16)
0xffff914dacb4   404  str x16, [jssp, #-8]!
0xffff914dacb8   408  ldr x17, pc+176 (addr 0x0000ffff914dad68)    ;; object: 0xffff914daac1 <Code: COMPARE_IC>
0xffff914dacbc   412  sub csp, jssp, #0x10 (16)
0xffff914dacc0   416  str x17, [jssp, #-8]!
0xffff914dacc4   420  add fp, jssp, #0x10 (16)
0xffff914dacc8   424  sub csp, jssp, #0x10 (16)
0xffff914daccc   428  stp x0, x1, [jssp, #-16]!
0xffff914dacd0   432  movz x0, #0x2
0xffff914dacd4   436  ldr x1, pc+156 (addr 0x0000ffff914dad70)    ;; external reference (Runtime::StrictEqual)
0xffff914dacd8   440  ldr x16, pc+160 (addr 0x0000ffff914dad78)    ;; code: STUB, CEntryStub, minor: 4
0xffff914dacdc   444  blr x16
0xffff914dace0   448  mov jssp, fp
0xffff914dace4   452  ldp fp, lr, [jssp], #16
0xffff914dace8   456  ldr x1, [x26, #64]
0xffff914dacec   460  sub x0, x0, x1
0xffff914dacf0   464  ret
0xffff914dacf4   468  movz x16, #0xc00000000
0xffff914dacf8   472  sub csp, jssp, #0x10 (16)
0xffff914dacfc   476  stp fp, lr, [jssp, #-16]!
0xffff914dad00   480  sub csp, jssp, #0x10 (16)
0xffff914dad04   484  str x16, [jssp, #-8]!
0xffff914dad08   488  ldr x17, pc+120 (addr 0x0000ffff914dad80)    ;; object: 0xffff914daac1 <Code: COMPARE_IC>
0xffff914dad0c   492  sub csp, jssp, #0x10 (16)
0xffff914dad10   496  str x17, [jssp, #-8]!
0xffff914dad14   500  add fp, jssp, #0x10 (16)
0xffff914dad18   504  sub csp, jssp, #0x18 (24)
0xffff914dad1c   508  stp lr, x0, [jssp, #-24]!
0xffff914dad20   512  str x1, [jssp, #16]
0xffff914dad24   516  movz x10, #0x2f00000000
0xffff914dad28   520  sub csp, jssp, #0x18 (24)
0xffff914dad2c   524  stp x10, x0, [jssp, #-24]!
0xffff914dad30   528  str x1, [jssp, #16]
0xffff914dad34   532  movz x0, #0x3
0xffff914dad38   536  ldr x1, pc+80 (addr 0x0000ffff914dad88)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914dad3c   540  ldr x16, pc+84 (addr 0x0000ffff914dad90)    ;; code: STUB, CEntryStub, minor: 4
0xffff914dad40   544  blr x16
0xffff914dad44   548  add x11, x0, #0x5f (95)
0xffff914dad48   552  ldr x1, [jssp, #16]
0xffff914dad4c   556  ldp lr, x0, [jssp], #24
0xffff914dad50   560  mov jssp, fp
0xffff914dad54   564  ldp fp, lr, [jssp], #16
0xffff914dad58   568  br x11
0xffff914dad5c   572  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914dad60   576  d63f03e0       constant
0xffff914dad64   580  d503201f       constant
0xffff914dad68   584  914daac1       constant
0xffff914dad6c   588  0000ffff       constant
0xffff914dad70   592  00e50928       constant
0xffff914dad74   596  00000000       constant
0xffff914dad78   600  91406060       constant
0xffff914dad7c   604  0000ffff       constant
0xffff914dad80   608  914daac1       constant
0xffff914dad84   612  0000ffff       constant
0xffff914dad88   616  00c8a980       constant
0xffff914dad8c   620  00000000       constant
0xffff914dad90   624  91406060       constant
0xffff914dad94   628  0000ffff       constant


RelocInfo (size = 16)
0xffff914dacb8  embedded object  (0xffff914daac1 <Code: COMPARE_IC>)
0xffff914dacd4  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff914dacd8  code target (STUB)  (0xffff91406060)
0xffff914dad08  embedded object  (0xffff914daac1 <Code: COMPARE_IC>)
0xffff914dad38  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914dad3c  code target (STUB)  (0xffff91406060)
0xffff914dad5c  constant pool (size 60)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*GENERIC -> GENERIC
compare_operation = LTE
name = CompareICStub
compiler = unknown
Instructions (size = 568)
0xffff914ddba0     0  orr x16, x1, x0
0xffff914ddba4     4  tbnz w16, #0, #+0x10 (addr 0xffff914ddbb4)
0xffff914ddba8     8  asr x1, x1, #32
0xffff914ddbac    12  sub x0, x1, x0, asr #32
0xffff914ddbb0    16  ret
0xffff914ddbb4    20  cmp x0, x1
0xffff914ddbb8    24  b.ne #+0x64 (addr 0xffff914ddc1c)
0xffff914ddbbc    28  ldur x10, [x0, #-1]
0xffff914ddbc0    32  ldrb w10, [x10, #11]
0xffff914ddbc4    36  cmp x10, #0x81 (129)
0xffff914ddbc8    40  b.eq #+0x40 (addr 0xffff914ddc08)
0xffff914ddbcc    44  cmp x10, #0xb1 (177)
0xffff914ddbd0    48  b.ge #+0x148 (addr 0xffff914ddd18)
0xffff914ddbd4    52  cmp x10, #0x80 (128)
0xffff914ddbd8    56  b.eq #+0x140 (addr 0xffff914ddd18)
0xffff914ddbdc    60  cmp x10, #0x82 (130)
0xffff914ddbe0    64  b.eq #+0x138 (addr 0xffff914ddd18)
0xffff914ddbe4    68  cmp x10, #0x83 (131)
0xffff914ddbe8    72  b.ne #+0x18 (addr 0xffff914ddc00)
0xffff914ddbec    76  ldr x16, [x26, #40]
0xffff914ddbf0    80  cmp x0, x16
0xffff914ddbf4    84  b.ne #+0xc (addr 0xffff914ddc00)
0xffff914ddbf8    88  movz x0, #0x1
0xffff914ddbfc    92  ret
0xffff914ddc00    96  movz x0, #0x0
0xffff914ddc04   100  ret
0xffff914ddc08   104  ldur d0, [x0, #7]
0xffff914ddc0c   108  fcmp d0, d0
0xffff914ddc10   112  b.vc #-0x10 (addr 0xffff914ddc00)
0xffff914ddc14   116  movz x0, #0x1
0xffff914ddc18   120  ret
0xffff914ddc1c   124  and x16, x1, x0
0xffff914ddc20   128  tbnz w16, #0, #+0x58 (addr 0xffff914ddc78)
0xffff914ddc24   132  tbz w0, #0, #+0x20 (addr 0xffff914ddc44)
0xffff914ddc28   136  ldur x16, [x0, #-1]
0xffff914ddc2c   140  ldr x17, [x26, #120]
0xffff914ddc30   144  cmp x16, x17
0xffff914ddc34   148  b.ne #+0xe4 (addr 0xffff914ddd18)
0xffff914ddc38   152  ldur d0, [x0, #7]
0xffff914ddc3c   156  scvtf d1, x1, #32
0xffff914ddc40   160  b #+0x1c (addr 0xffff914ddc5c)
0xffff914ddc44   164  ldur x16, [x1, #-1]
0xffff914ddc48   168  ldr x17, [x26, #120]
0xffff914ddc4c   172  cmp x16, x17
0xffff914ddc50   176  b.ne #+0xc8 (addr 0xffff914ddd18)
0xffff914ddc54   180  ldur d1, [x1, #7]
0xffff914ddc58   184  scvtf d0, x0, #32
0xffff914ddc5c   188  fcmp d1, d0
0xffff914ddc60   192  b.vs #+0x10 (addr 0xffff914ddc70)
0xffff914ddc64   196  cset x0, gt
0xffff914ddc68   200  csinv x0, x0, xzr, ge
0xffff914ddc6c   204  ret
0xffff914ddc70   208  movz x0, #0x1
0xffff914ddc74   212  ret
0xffff914ddc78   216  ldur x10, [x0, #-1]
0xffff914ddc7c   220  ldur x12, [x1, #-1]
0xffff914ddc80   224  ldrb w11, [x10, #11]
0xffff914ddc84   228  ldrb w13, [x12, #11]
0xffff914ddc88   232  cmp x11, #0x81 (129)
0xffff914ddc8c   236  b.ne #+0x18 (addr 0xffff914ddca4)
0xffff914ddc90   240  cmp x12, x10
0xffff914ddc94   244  b.ne #+0x10 (addr 0xffff914ddca4)
0xffff914ddc98   248  ldur d1, [x1, #7]
0xffff914ddc9c   252  ldur d0, [x0, #7]
0xffff914ddca0   256  b #-0x44 (addr 0xffff914ddc5c)
0xffff914ddca4   260  movz x16, #0x87
0xffff914ddca8   264  and x14, x13, x16
0xffff914ddcac   268  movz x16, #0x87
0xffff914ddcb0   272  and x15, x11, x16
0xffff914ddcb4   276  cmp x14, #0x4 (4)
0xffff914ddcb8   280  ccmp x15, #4, #nzcv, eq
0xffff914ddcbc   284  b.ne #+0x5c (addr 0xffff914ddd18)
0xffff914ddcc0   288  ldur x10, [x1, #15]
0xffff914ddcc4   292  ldur x11, [x0, #15]
0xffff914ddcc8   296  subs x12, x10, x11
0xffff914ddccc   300  csel x10, x11, x10, gt
0xffff914ddcd0   304  cbz x10, #+0x30 (addr 0xffff914ddd00)
0xffff914ddcd4   308  asr x10, x10, #32
0xffff914ddcd8   312  add x11, x10, #0x17 (23)
0xffff914ddcdc   316  add x1, x1, x11
0xffff914ddce0   320  add x0, x0, x11
0xffff914ddce4   324  neg x10, x10
0xffff914ddce8   328  ldrb w11, [x1, x10]
0xffff914ddcec   332  ldrb w13, [x0, x10]
0xffff914ddcf0   336  cmp x11, x13
0xffff914ddcf4   340  b.ne #+0x10 (addr 0xffff914ddd04)
0xffff914ddcf8   344  add x10, x10, #0x1 (1)
0xffff914ddcfc   348  cbnz x10, #-0x14 (addr 0xffff914ddce8)
0xffff914ddd00   352  subs x0, x12, #0x0 (0)
0xffff914ddd04   356  movz x10, #0x100000000
0xffff914ddd08   360  mov x11, #0xffffffff00000000
0xffff914ddd0c   364  csel x0, x10, x0, gt
0xffff914ddd10   368  csel x0, x11, x0, lt
0xffff914ddd14   372  ret
0xffff914ddd18   376  sub csp, jssp, #0x10 (16)
0xffff914ddd1c   380  stp x0, x1, [jssp, #-16]!
0xffff914ddd20   384  movz x10, #0x100000000
0xffff914ddd24   388  sub csp, jssp, #0x8 (8)
0xffff914ddd28   392  str x10, [jssp, #-8]!
0xffff914ddd2c   396  movz x0, #0x3
0xffff914ddd30   400  ldr x1, pc+128 (addr 0x0000ffff914dddb0)    ;; external reference (Runtime::Compare)
0xffff914ddd34   404  ldr x16, pc+132 (addr 0x0000ffff914dddb8)    ;; code: STUB, CEntryStub, minor: 4
0xffff914ddd38   408  br x16
0xffff914ddd3c   412  movz x16, #0xc00000000
0xffff914ddd40   416  sub csp, jssp, #0x10 (16)
0xffff914ddd44   420  stp fp, lr, [jssp, #-16]!
0xffff914ddd48   424  sub csp, jssp, #0x10 (16)
0xffff914ddd4c   428  str x16, [jssp, #-8]!
0xffff914ddd50   432  ldr x17, pc+112 (addr 0x0000ffff914dddc0)    ;; object: 0xffff914ddb41 <Code: COMPARE_IC>
0xffff914ddd54   436  sub csp, jssp, #0x10 (16)
0xffff914ddd58   440  str x17, [jssp, #-8]!
0xffff914ddd5c   444  add fp, jssp, #0x10 (16)
0xffff914ddd60   448  sub csp, jssp, #0x18 (24)
0xffff914ddd64   452  stp lr, x0, [jssp, #-24]!
0xffff914ddd68   456  str x1, [jssp, #16]
0xffff914ddd6c   460  movz x10, #0x3300000000
0xffff914ddd70   464  sub csp, jssp, #0x18 (24)
0xffff914ddd74   468  stp x10, x0, [jssp, #-24]!
0xffff914ddd78   472  str x1, [jssp, #16]
0xffff914ddd7c   476  movz x0, #0x3
0xffff914ddd80   480  ldr x1, pc+72 (addr 0x0000ffff914dddc8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914ddd84   484  ldr x16, pc+76 (addr 0x0000ffff914dddd0)    ;; code: STUB, CEntryStub, minor: 4
0xffff914ddd88   488  blr x16
0xffff914ddd8c   492  add x11, x0, #0x5f (95)
0xffff914ddd90   496  ldr x1, [jssp, #16]
0xffff914ddd94   500  ldp lr, x0, [jssp], #24
0xffff914ddd98   504  mov jssp, fp
0xffff914ddd9c   508  ldp fp, lr, [jssp], #16
0xffff914ddda0   512  br x11
0xffff914ddda4   516  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff914ddda8   520  d63f03e0       constant
0xffff914dddac   524  d503201f       constant
0xffff914dddb0   528  00e49ea8       constant
0xffff914dddb4   532  00000000       constant
0xffff914dddb8   536  91406060       constant
0xffff914dddbc   540  0000ffff       constant
0xffff914dddc0   544  914ddb41       constant
0xffff914dddc4   548  0000ffff       constant
0xffff914dddc8   552  00c8a980       constant
0xffff914dddcc   556  00000000       constant
0xffff914dddd0   560  91406060       constant
0xffff914dddd4   564  0000ffff       constant


RelocInfo (size = 15)
0xffff914ddd30  external reference (Runtime::Compare)  (0xe49ea8)
0xffff914ddd34  code target (STUB)  (0xffff91406060)
0xffff914ddd50  embedded object  (0xffff914ddb41 <Code: COMPARE_IC>)
0xffff914ddd80  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914ddd84  code target (STUB)  (0xffff91406060)
0xffff914ddda4  constant pool (size 52)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = NUMBER*SMI -> NUMBER
compare_operation = LTE
name = CompareICStub
compiler = unknown
Instructions (size = 280)
0xffff914dde40     0  tbnz w0, #0, #+0x88 (addr 0xffff914ddec8)
0xffff914dde44     4  scvtf d0, x0, #32
0xffff914dde48     8  scvtf d1, x1, #32
0xffff914dde4c    12  tbz w0, #0, #+0x18 (addr 0xffff914dde64)
0xffff914dde50    16  ldur x16, [x0, #-1]
0xffff914dde54    20  ldr x17, [x26, #120]
0xffff914dde58    24  cmp x16, x17
0xffff914dde5c    28  b.ne #+0x3c (addr 0xffff914dde98)
0xffff914dde60    32  ldur d0, [x0, #7]
0xffff914dde64    36  tbz w1, #0, #+0x18 (addr 0xffff914dde7c)
0xffff914dde68    40  ldur x16, [x1, #-1]
0xffff914dde6c    44  ldr x17, [x26, #120]
0xffff914dde70    48  cmp x16, x17
0xffff914dde74    52  b.ne #+0x48 (addr 0xffff914ddebc)
0xffff914dde78    56  ldur d1, [x1, #7]
0xffff914dde7c    60  fcmp d1, d0
0xffff914dde80    64  b.vs #+0x10 (addr 0xffff914dde90)
0xffff914dde84    68  cset x0, gt
0xffff914dde88    72  csinv x0, x0, xzr, ge
0xffff914dde8c    76  ret
0xffff914dde90    80  ldr x16, pc+168 (addr 0x0000ffff914ddf38)    ;; code: COMPARE_IC, GENERIC
0xffff914dde94    84  br x16
0xffff914dde98    88  ldr x16, [x26, #40]
0xffff914dde9c    92  cmp x0, x16
0xffff914ddea0    96  b.ne #+0x28 (addr 0xffff914ddec8)
0xffff914ddea4   100  tbz w1, #0, #-0x14 (addr 0xffff914dde90)
0xffff914ddea8   104  ldur x16, [x1, #-1]
0xffff914ddeac   108  ldr x17, [x26, #120]
0xffff914ddeb0   112  cmp x16, x17
0xffff914ddeb4   116  b.ne #+0x8 (addr 0xffff914ddebc)
0xffff914ddeb8   120  b #-0x28 (addr 0xffff914dde90)
0xffff914ddebc   124  ldr x16, [x26, #40]
0xffff914ddec0   128  cmp x1, x16
0xffff914ddec4   132  b.eq #-0x34 (addr 0xffff914dde90)
0xffff914ddec8   136  movz x16, #0xc00000000
0xffff914ddecc   140  sub csp, jssp, #0x10 (16)
0xffff914dded0   144  stp fp, lr, [jssp, #-16]!
0xffff914dded4   148  sub csp, jssp, #0x10 (16)
0xffff914dded8   152  str x16, [jssp, #-8]!
0xffff914ddedc   156  ldr x17, pc+100 (addr 0x0000ffff914ddf40)    ;; object: 0xffff914ddde1 <Code: COMPARE_IC>
0xffff914ddee0   160  sub csp, jssp, #0x10 (16)
0xffff914ddee4   164  str x17, [jssp, #-8]!
0xffff914ddee8   168  add fp, jssp, #0x10 (16)
0xffff914ddeec   172  sub csp, jssp, #0x18 (24)
0xffff914ddef0   176  stp lr, x0, [jssp, #-24]!
0xffff914ddef4   180  str x1, [jssp, #16]
0xffff914ddef8   184  movz x10, #0x3300000000
0xffff914ddefc   188  sub csp, jssp, #0x18 (24)
0xffff914ddf00   192  stp x10, x0, [jssp, #-24]!
0xffff914ddf04   196  str x1, [jssp, #16]
0xffff914ddf08   200  movz x0, #0x3
0xffff914ddf0c   204  ldr x1, pc+60 (addr 0x0000ffff914ddf48)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914ddf10   208  ldr x16, pc+64 (addr 0x0000ffff914ddf50)    ;; code: STUB, CEntryStub, minor: 4
0xffff914ddf14   212  blr x16
0xffff914ddf18   216  add x11, x0, #0x5f (95)
0xffff914ddf1c   220  ldr x1, [jssp, #16]
0xffff914ddf20   224  ldp lr, x0, [jssp], #24
0xffff914ddf24   228  mov jssp, fp
0xffff914ddf28   232  ldp fp, lr, [jssp], #16
0xffff914ddf2c   236  br x11
0xffff914ddf30   240  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914ddf34   244  d63f03e0       constant
0xffff914ddf38   248  914ddba0       constant
0xffff914ddf3c   252  0000ffff       constant
0xffff914ddf40   256  914ddde1       constant
0xffff914ddf44   260  0000ffff       constant
0xffff914ddf48   264  00c8a980       constant
0xffff914ddf4c   268  00000000       constant
0xffff914ddf50   272  91406060       constant
0xffff914ddf54   276  0000ffff       constant


RelocInfo (size = 15)
0xffff914dde90  code target (COMPARE_IC)  (0xffff914ddba0)
0xffff914ddedc  embedded object  (0xffff914ddde1 <Code: COMPARE_IC>)
0xffff914ddf0c  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914ddf10  code target (STUB)  (0xffff91406060)
0xffff914ddf30  constant pool (size 40)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*GENERIC -> GENERIC
compare_operation = GT
name = CompareICStub
compiler = unknown
Instructions (size = 512)
0xffff914ddfc0     0  orr x16, x1, x0
0xffff914ddfc4     4  tbnz w16, #0, #+0x10 (addr 0xffff914ddfd4)
0xffff914ddfc8     8  asr x1, x1, #32
0xffff914ddfcc    12  sub x0, x1, x0, asr #32
0xffff914ddfd0    16  ret
0xffff914ddfd4    20  cmp x0, x1
0xffff914ddfd8    24  b.ne #+0x2c (addr 0xffff914de004)
0xffff914ddfdc    28  ldur x10, [x0, #-1]
0xffff914ddfe0    32  ldrb w10, [x10, #11]
0xffff914ddfe4    36  cmp x10, #0xb1 (177)
0xffff914ddfe8    40  b.ge #+0x118 (addr 0xffff914de100)
0xffff914ddfec    44  cmp x10, #0x80 (128)
0xffff914ddff0    48  b.eq #+0x110 (addr 0xffff914de100)
0xffff914ddff4    52  cmp x10, #0x82 (130)
0xffff914ddff8    56  b.eq #+0x108 (addr 0xffff914de100)
0xffff914ddffc    60  movn x0, #0x0
0xffff914de000    64  ret
0xffff914de004    68  and x16, x1, x0
0xffff914de008    72  tbnz w16, #0, #+0x58 (addr 0xffff914de060)
0xffff914de00c    76  tbz w0, #0, #+0x20 (addr 0xffff914de02c)
0xffff914de010    80  ldur x16, [x0, #-1]
0xffff914de014    84  ldr x17, [x26, #120]
0xffff914de018    88  cmp x16, x17
0xffff914de01c    92  b.ne #+0xe4 (addr 0xffff914de100)
0xffff914de020    96  ldur d0, [x0, #7]
0xffff914de024   100  scvtf d1, x1, #32
0xffff914de028   104  b #+0x1c (addr 0xffff914de044)
0xffff914de02c   108  ldur x16, [x1, #-1]
0xffff914de030   112  ldr x17, [x26, #120]
0xffff914de034   116  cmp x16, x17
0xffff914de038   120  b.ne #+0xc8 (addr 0xffff914de100)
0xffff914de03c   124  ldur d1, [x1, #7]
0xffff914de040   128  scvtf d0, x0, #32
0xffff914de044   132  fcmp d1, d0
0xffff914de048   136  b.vs #+0x10 (addr 0xffff914de058)
0xffff914de04c   140  cset x0, gt
0xffff914de050   144  csinv x0, x0, xzr, ge
0xffff914de054   148  ret
0xffff914de058   152  movn x0, #0x0
0xffff914de05c   156  ret
0xffff914de060   160  ldur x10, [x0, #-1]
0xffff914de064   164  ldur x12, [x1, #-1]
0xffff914de068   168  ldrb w11, [x10, #11]
0xffff914de06c   172  ldrb w13, [x12, #11]
0xffff914de070   176  cmp x11, #0x81 (129)
0xffff914de074   180  b.ne #+0x18 (addr 0xffff914de08c)
0xffff914de078   184  cmp x12, x10
0xffff914de07c   188  b.ne #+0x10 (addr 0xffff914de08c)
0xffff914de080   192  ldur d1, [x1, #7]
0xffff914de084   196  ldur d0, [x0, #7]
0xffff914de088   200  b #-0x44 (addr 0xffff914de044)
0xffff914de08c   204  movz x16, #0x87
0xffff914de090   208  and x14, x13, x16
0xffff914de094   212  movz x16, #0x87
0xffff914de098   216  and x15, x11, x16
0xffff914de09c   220  cmp x14, #0x4 (4)
0xffff914de0a0   224  ccmp x15, #4, #nzcv, eq
0xffff914de0a4   228  b.ne #+0x5c (addr 0xffff914de100)
0xffff914de0a8   232  ldur x10, [x1, #15]
0xffff914de0ac   236  ldur x11, [x0, #15]
0xffff914de0b0   240  subs x12, x10, x11
0xffff914de0b4   244  csel x10, x11, x10, gt
0xffff914de0b8   248  cbz x10, #+0x30 (addr 0xffff914de0e8)
0xffff914de0bc   252  asr x10, x10, #32
0xffff914de0c0   256  add x11, x10, #0x17 (23)
0xffff914de0c4   260  add x1, x1, x11
0xffff914de0c8   264  add x0, x0, x11
0xffff914de0cc   268  neg x10, x10
0xffff914de0d0   272  ldrb w11, [x1, x10]
0xffff914de0d4   276  ldrb w13, [x0, x10]
0xffff914de0d8   280  cmp x11, x13
0xffff914de0dc   284  b.ne #+0x10 (addr 0xffff914de0ec)
0xffff914de0e0   288  add x10, x10, #0x1 (1)
0xffff914de0e4   292  cbnz x10, #-0x14 (addr 0xffff914de0d0)
0xffff914de0e8   296  subs x0, x12, #0x0 (0)
0xffff914de0ec   300  movz x10, #0x100000000
0xffff914de0f0   304  mov x11, #0xffffffff00000000
0xffff914de0f4   308  csel x0, x10, x0, gt
0xffff914de0f8   312  csel x0, x11, x0, lt
0xffff914de0fc   316  ret
0xffff914de100   320  sub csp, jssp, #0x10 (16)
0xffff914de104   324  stp x0, x1, [jssp, #-16]!
0xffff914de108   328  mov x10, #0xffffffff00000000
0xffff914de10c   332  sub csp, jssp, #0x8 (8)
0xffff914de110   336  str x10, [jssp, #-8]!
0xffff914de114   340  movz x0, #0x3
0xffff914de118   344  ldr x1, pc+128 (addr 0x0000ffff914de198)    ;; external reference (Runtime::Compare)
0xffff914de11c   348  ldr x16, pc+132 (addr 0x0000ffff914de1a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff914de120   352  br x16
0xffff914de124   356  movz x16, #0xc00000000
0xffff914de128   360  sub csp, jssp, #0x10 (16)
0xffff914de12c   364  stp fp, lr, [jssp, #-16]!
0xffff914de130   368  sub csp, jssp, #0x10 (16)
0xffff914de134   372  str x16, [jssp, #-8]!
0xffff914de138   376  ldr x17, pc+112 (addr 0x0000ffff914de1a8)    ;; object: 0xffff914ddf61 <Code: COMPARE_IC>
0xffff914de13c   380  sub csp, jssp, #0x10 (16)
0xffff914de140   384  str x17, [jssp, #-8]!
0xffff914de144   388  add fp, jssp, #0x10 (16)
0xffff914de148   392  sub csp, jssp, #0x18 (24)
0xffff914de14c   396  stp lr, x0, [jssp, #-24]!
0xffff914de150   400  str x1, [jssp, #16]
0xffff914de154   404  movz x10, #0x3200000000
0xffff914de158   408  sub csp, jssp, #0x18 (24)
0xffff914de15c   412  stp x10, x0, [jssp, #-24]!
0xffff914de160   416  str x1, [jssp, #16]
0xffff914de164   420  movz x0, #0x3
0xffff914de168   424  ldr x1, pc+72 (addr 0x0000ffff914de1b0)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914de16c   428  ldr x16, pc+76 (addr 0x0000ffff914de1b8)    ;; code: STUB, CEntryStub, minor: 4
0xffff914de170   432  blr x16
0xffff914de174   436  add x11, x0, #0x5f (95)
0xffff914de178   440  ldr x1, [jssp, #16]
0xffff914de17c   444  ldp lr, x0, [jssp], #24
0xffff914de180   448  mov jssp, fp
0xffff914de184   452  ldp fp, lr, [jssp], #16
0xffff914de188   456  br x11
0xffff914de18c   460  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff914de190   464  d63f03e0       constant
0xffff914de194   468  d503201f       constant
0xffff914de198   472  00e49ea8       constant
0xffff914de19c   476  00000000       constant
0xffff914de1a0   480  91406060       constant
0xffff914de1a4   484  0000ffff       constant
0xffff914de1a8   488  914ddf61       constant
0xffff914de1ac   492  0000ffff       constant
0xffff914de1b0   496  00c8a980       constant
0xffff914de1b4   500  00000000       constant
0xffff914de1b8   504  91406060       constant
0xffff914de1bc   508  0000ffff       constant


RelocInfo (size = 15)
0xffff914de118  external reference (Runtime::Compare)  (0xe49ea8)
0xffff914de11c  code target (STUB)  (0xffff91406060)
0xffff914de138  embedded object  (0xffff914ddf61 <Code: COMPARE_IC>)
0xffff914de168  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914de16c  code target (STUB)  (0xffff91406060)
0xffff914de18c  constant pool (size 52)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = NUMBER*SMI -> NUMBER
compare_operation = GT
name = CompareICStub
compiler = unknown
Instructions (size = 280)
0xffff914de220     0  tbnz w0, #0, #+0x88 (addr 0xffff914de2a8)
0xffff914de224     4  scvtf d0, x0, #32
0xffff914de228     8  scvtf d1, x1, #32
0xffff914de22c    12  tbz w0, #0, #+0x18 (addr 0xffff914de244)
0xffff914de230    16  ldur x16, [x0, #-1]
0xffff914de234    20  ldr x17, [x26, #120]
0xffff914de238    24  cmp x16, x17
0xffff914de23c    28  b.ne #+0x3c (addr 0xffff914de278)
0xffff914de240    32  ldur d0, [x0, #7]
0xffff914de244    36  tbz w1, #0, #+0x18 (addr 0xffff914de25c)
0xffff914de248    40  ldur x16, [x1, #-1]
0xffff914de24c    44  ldr x17, [x26, #120]
0xffff914de250    48  cmp x16, x17
0xffff914de254    52  b.ne #+0x48 (addr 0xffff914de29c)
0xffff914de258    56  ldur d1, [x1, #7]
0xffff914de25c    60  fcmp d1, d0
0xffff914de260    64  b.vs #+0x10 (addr 0xffff914de270)
0xffff914de264    68  cset x0, gt
0xffff914de268    72  csinv x0, x0, xzr, ge
0xffff914de26c    76  ret
0xffff914de270    80  ldr x16, pc+168 (addr 0x0000ffff914de318)    ;; code: COMPARE_IC, GENERIC
0xffff914de274    84  br x16
0xffff914de278    88  ldr x16, [x26, #40]
0xffff914de27c    92  cmp x0, x16
0xffff914de280    96  b.ne #+0x28 (addr 0xffff914de2a8)
0xffff914de284   100  tbz w1, #0, #-0x14 (addr 0xffff914de270)
0xffff914de288   104  ldur x16, [x1, #-1]
0xffff914de28c   108  ldr x17, [x26, #120]
0xffff914de290   112  cmp x16, x17
0xffff914de294   116  b.ne #+0x8 (addr 0xffff914de29c)
0xffff914de298   120  b #-0x28 (addr 0xffff914de270)
0xffff914de29c   124  ldr x16, [x26, #40]
0xffff914de2a0   128  cmp x1, x16
0xffff914de2a4   132  b.eq #-0x34 (addr 0xffff914de270)
0xffff914de2a8   136  movz x16, #0xc00000000
0xffff914de2ac   140  sub csp, jssp, #0x10 (16)
0xffff914de2b0   144  stp fp, lr, [jssp, #-16]!
0xffff914de2b4   148  sub csp, jssp, #0x10 (16)
0xffff914de2b8   152  str x16, [jssp, #-8]!
0xffff914de2bc   156  ldr x17, pc+100 (addr 0x0000ffff914de320)    ;; object: 0xffff914de1c1 <Code: COMPARE_IC>
0xffff914de2c0   160  sub csp, jssp, #0x10 (16)
0xffff914de2c4   164  str x17, [jssp, #-8]!
0xffff914de2c8   168  add fp, jssp, #0x10 (16)
0xffff914de2cc   172  sub csp, jssp, #0x18 (24)
0xffff914de2d0   176  stp lr, x0, [jssp, #-24]!
0xffff914de2d4   180  str x1, [jssp, #16]
0xffff914de2d8   184  movz x10, #0x3200000000
0xffff914de2dc   188  sub csp, jssp, #0x18 (24)
0xffff914de2e0   192  stp x10, x0, [jssp, #-24]!
0xffff914de2e4   196  str x1, [jssp, #16]
0xffff914de2e8   200  movz x0, #0x3
0xffff914de2ec   204  ldr x1, pc+60 (addr 0x0000ffff914de328)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914de2f0   208  ldr x16, pc+64 (addr 0x0000ffff914de330)    ;; code: STUB, CEntryStub, minor: 4
0xffff914de2f4   212  blr x16
0xffff914de2f8   216  add x11, x0, #0x5f (95)
0xffff914de2fc   220  ldr x1, [jssp, #16]
0xffff914de300   224  ldp lr, x0, [jssp], #24
0xffff914de304   228  mov jssp, fp
0xffff914de308   232  ldp fp, lr, [jssp], #16
0xffff914de30c   236  br x11
0xffff914de310   240  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914de314   244  d63f03e0       constant
0xffff914de318   248  914ddfc0       constant
0xffff914de31c   252  0000ffff       constant
0xffff914de320   256  914de1c1       constant
0xffff914de324   260  0000ffff       constant
0xffff914de328   264  00c8a980       constant
0xffff914de32c   268  00000000       constant
0xffff914de330   272  91406060       constant
0xffff914de334   276  0000ffff       constant


RelocInfo (size = 15)
0xffff914de270  code target (COMPARE_IC)  (0xffff914ddfc0)
0xffff914de2bc  embedded object  (0xffff914de1c1 <Code: COMPARE_IC>)
0xffff914de2ec  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914de2f0  code target (STUB)  (0xffff91406060)
0xffff914de310  constant pool (size 40)


kind = HANDLER
major_key = <NoCache>Stub
name = Math
compiler = unknown
Instructions (size = 120)
0xffff914ded40     0  sub csp, jssp, #0x8 (8)
0xffff914ded44     4  str x3, [jssp, #-8]!
0xffff914ded48     8  sub csp, jssp, #0x8 (8)
0xffff914ded4c    12  str x0, [jssp, #-8]!
0xffff914ded50    16  ldr x0, pc+80 (addr 0x0000ffff914deda0)    ;; object: 0x49bc5d51 Cell for 0
0xffff914ded54    20  ldur x0, [x0, #7]
0xffff914ded58    24  cmp x0, #0x0 (0)
0xffff914ded5c    28  b.ne #+0x2c (addr 0xffff914ded88)
0xffff914ded60    32  ldr x0, pc+72 (addr 0x0000ffff914deda8)    ;; object: 0x408c7bf9 WeakCell for 0x49b46e89 PropertyCell for 0x49b46e51 <a Math with map 0x3640e5a1>
0xffff914ded64    36  ldur x0, [x0, #7]
0xffff914ded68    40  tbz w0, #0, #+0x20 (addr 0xffff914ded88)
0xffff914ded6c    44  ldur x0, [x0, #15]
0xffff914ded70    48  ldr x16, [x26, #88]
0xffff914ded74    52  cmp x0, x16
0xffff914ded78    56  b.eq #+0x10 (addr 0xffff914ded88)
0xffff914ded7c    60  add jssp, jssp, #0x10 (16)
0xffff914ded80    64  ret
0xffff914ded84    68  b #+0x14 (addr 0xffff914ded98)
0xffff914ded88    72  ldr x0, [jssp], #8
0xffff914ded8c    76  ldr x3, [jssp], #8
0xffff914ded90    80  ldr x16, pc+32 (addr 0x0000ffff914dedb0)    ;; code: BUILTIN
0xffff914ded94    84  br x16
0xffff914ded98    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914ded9c    92  d63f03e0       constant
0xffff914deda0    96  49bc5d51       constant
0xffff914deda4   100  00000000       constant
0xffff914deda8   104  408c7bf9       constant
0xffff914dedac   108  00000000       constant
0xffff914dedb0   112  914222e0       constant
0xffff914dedb4   116  0000ffff       constant


RelocInfo (size = 9)
0xffff914ded50  embedded object  (0x49bc5d51 Cell for 0)
0xffff914ded60  embedded object  (0x408c7bf9 WeakCell for 0x49b46e89 PropertyCell for 0x49b46e51 <a Math with map 0x3640e5a1>)
0xffff914ded90  code target (BUILTIN)  (0xffff914222e0)
0xffff914ded98  constant pool (size 32)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914dee20     0  ldur x0, [x1, #-1]
0xffff914dee24     4  ldur x0, [x0, #47]
0xffff914dee28     8  movz x16, #0x14f
0xffff914dee2c    12  ldr x0, [x0, x16]
0xffff914dee30    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914dee20     0  ldur x0, [x1, #-1]
0xffff914dee24     4  ldur x0, [x0, #47]
0xffff914dee28     8  movz x16, #0x14f
0xffff914dee2c    12  ldr x0, [x0, x16]
0xffff914dee30    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 1179
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff914dfa20     0  mov x2, x1
0xffff914dfa24     4  tbnz w2, #0, #+0x44 (addr 0xffff914dfa68)
0xffff914dfa28     8  mov x3, x0
0xffff914dfa2c    12  tbnz w3, #0, #+0x4c (addr 0xffff914dfa78)
0xffff914dfa30    16  asr x3, x3, #32
0xffff914dfa34    20  cmp w3, #0x1 (1)
0xffff914dfa38    24  b.eq #+0x8 (addr 0xffff914dfa40)
0xffff914dfa3c    28  b #+0x4c (addr 0xffff914dfa88)
0xffff914dfa40    32  asr x2, x2, #32
0xffff914dfa44    36  tbz w2, #31, #+0x18 (addr 0xffff914dfa5c)
0xffff914dfa48    40  neg w2, w2
0xffff914dfa4c    44  movz w2, #0x0
0xffff914dfa50    48  negs w2, w2
0xffff914dfa54    52  b.eq #+0x44 (addr 0xffff914dfa98)
0xffff914dfa58    56  b #+0x8 (addr 0xffff914dfa60)
0xffff914dfa5c    60  movz w2, #0x0
0xffff914dfa60    64  lsl x0, x2, #32
0xffff914dfa64    68  ret
0xffff914dfa68    72  movz x16, #0x0
0xffff914dfa6c    76  sub csp, jssp, #0x10 (16)
0xffff914dfa70    80  stp fp, lr, [jssp, #-16]!
0xffff914dfa74    84  bl #+0x34 (addr 0xffff914dfaa8)
0xffff914dfa78    88  movz x16, #0x8
0xffff914dfa7c    92  sub csp, jssp, #0x10 (16)
0xffff914dfa80    96  stp fp, lr, [jssp, #-16]!
0xffff914dfa84   100  bl #+0x24 (addr 0xffff914dfaa8)
0xffff914dfa88   104  movz x16, #0x10
0xffff914dfa8c   108  sub csp, jssp, #0x10 (16)
0xffff914dfa90   112  stp fp, lr, [jssp, #-16]!
0xffff914dfa94   116  bl #+0x14 (addr 0xffff914dfaa8)
0xffff914dfa98   120  movz x16, #0x18
0xffff914dfa9c   124  sub csp, jssp, #0x10 (16)
0xffff914dfaa0   128  stp fp, lr, [jssp, #-16]!
0xffff914dfaa4   132  bl #+0x4 (addr 0xffff914dfaa8)
0xffff914dfaa8   136  movz x17, #0xa00000000
0xffff914dfaac   140  sub csp, jssp, #0x10 (16)
0xffff914dfab0   144  stp x17, cp, [jssp, #-16]!
0xffff914dfab4   148  add fp, jssp, #0x10 (16)
0xffff914dfab8   152  ldr x17, pc+24 (addr 0x0000ffff914dfad0)    ;; lazy deoptimization bailout 0
0xffff914dfabc   156  add x17, x17, x16
0xffff914dfac0   160  br x17
0xffff914dfac4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914dfac8   168  d63f03e0       constant
0xffff914dfacc   172  d503201f       constant
0xffff914dfad0   176  91206000       constant
0xffff914dfad4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914dfab8  runtime entry
0xffff914dfac4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 1179
type = NORMAL
name = BinaryOpICStub(MOD:Smi*1->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff914dfa20     0  mov x2, x1
0xffff914dfa24     4  tbnz w2, #0, #+0x44 (addr 0xffff914dfa68)
0xffff914dfa28     8  mov x3, x0
0xffff914dfa2c    12  tbnz w3, #0, #+0x4c (addr 0xffff914dfa78)
0xffff914dfa30    16  asr x3, x3, #32
0xffff914dfa34    20  cmp w3, #0x1 (1)
0xffff914dfa38    24  b.eq #+0x8 (addr 0xffff914dfa40)
0xffff914dfa3c    28  b #+0x4c (addr 0xffff914dfa88)
0xffff914dfa40    32  asr x2, x2, #32
0xffff914dfa44    36  tbz w2, #31, #+0x18 (addr 0xffff914dfa5c)
0xffff914dfa48    40  neg w2, w2
0xffff914dfa4c    44  movz w2, #0x0
0xffff914dfa50    48  negs w2, w2
0xffff914dfa54    52  b.eq #+0x44 (addr 0xffff914dfa98)
0xffff914dfa58    56  b #+0x8 (addr 0xffff914dfa60)
0xffff914dfa5c    60  movz w2, #0x0
0xffff914dfa60    64  lsl x0, x2, #32
0xffff914dfa64    68  ret
0xffff914dfa68    72  movz x16, #0x0
0xffff914dfa6c    76  sub csp, jssp, #0x10 (16)
0xffff914dfa70    80  stp fp, lr, [jssp, #-16]!
0xffff914dfa74    84  bl #+0x34 (addr 0xffff914dfaa8)
0xffff914dfa78    88  movz x16, #0x8
0xffff914dfa7c    92  sub csp, jssp, #0x10 (16)
0xffff914dfa80    96  stp fp, lr, [jssp, #-16]!
0xffff914dfa84   100  bl #+0x24 (addr 0xffff914dfaa8)
0xffff914dfa88   104  movz x16, #0x10
0xffff914dfa8c   108  sub csp, jssp, #0x10 (16)
0xffff914dfa90   112  stp fp, lr, [jssp, #-16]!
0xffff914dfa94   116  bl #+0x14 (addr 0xffff914dfaa8)
0xffff914dfa98   120  movz x16, #0x18
0xffff914dfa9c   124  sub csp, jssp, #0x10 (16)
0xffff914dfaa0   128  stp fp, lr, [jssp, #-16]!
0xffff914dfaa4   132  bl #+0x4 (addr 0xffff914dfaa8)
0xffff914dfaa8   136  movz x17, #0xa00000000
0xffff914dfaac   140  sub csp, jssp, #0x10 (16)
0xffff914dfab0   144  stp x17, cp, [jssp, #-16]!
0xffff914dfab4   148  add fp, jssp, #0x10 (16)
0xffff914dfab8   152  ldr x17, pc+24 (addr 0x0000ffff914dfad0)    ;; lazy deoptimization bailout 0
0xffff914dfabc   156  add x17, x17, x16
0xffff914dfac0   160  br x17
0xffff914dfac4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914dfac8   168  d63f03e0       constant
0xffff914dfacc   172  d503201f       constant
0xffff914dfad0   176  91206000       constant
0xffff914dfad4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914dfab8  runtime entry
0xffff914dfac4  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*NUMBER -> NUMBER
compare_operation = LT
name = CompareICStub
compiler = unknown
Instructions (size = 280)
0xffff914e0ae0     0  tbnz w1, #0, #+0x88 (addr 0xffff914e0b68)
0xffff914e0ae4     4  scvtf d0, x0, #32
0xffff914e0ae8     8  scvtf d1, x1, #32
0xffff914e0aec    12  tbz w0, #0, #+0x18 (addr 0xffff914e0b04)
0xffff914e0af0    16  ldur x16, [x0, #-1]
0xffff914e0af4    20  ldr x17, [x26, #120]
0xffff914e0af8    24  cmp x16, x17
0xffff914e0afc    28  b.ne #+0x3c (addr 0xffff914e0b38)
0xffff914e0b00    32  ldur d0, [x0, #7]
0xffff914e0b04    36  tbz w1, #0, #+0x18 (addr 0xffff914e0b1c)
0xffff914e0b08    40  ldur x16, [x1, #-1]
0xffff914e0b0c    44  ldr x17, [x26, #120]
0xffff914e0b10    48  cmp x16, x17
0xffff914e0b14    52  b.ne #+0x48 (addr 0xffff914e0b5c)
0xffff914e0b18    56  ldur d1, [x1, #7]
0xffff914e0b1c    60  fcmp d1, d0
0xffff914e0b20    64  b.vs #+0x10 (addr 0xffff914e0b30)
0xffff914e0b24    68  cset x0, gt
0xffff914e0b28    72  csinv x0, x0, xzr, ge
0xffff914e0b2c    76  ret
0xffff914e0b30    80  ldr x16, pc+168 (addr 0x0000ffff914e0bd8)    ;; code: COMPARE_IC, GENERIC
0xffff914e0b34    84  br x16
0xffff914e0b38    88  ldr x16, [x26, #40]
0xffff914e0b3c    92  cmp x0, x16
0xffff914e0b40    96  b.ne #+0x28 (addr 0xffff914e0b68)
0xffff914e0b44   100  tbz w1, #0, #-0x14 (addr 0xffff914e0b30)
0xffff914e0b48   104  ldur x16, [x1, #-1]
0xffff914e0b4c   108  ldr x17, [x26, #120]
0xffff914e0b50   112  cmp x16, x17
0xffff914e0b54   116  b.ne #+0x8 (addr 0xffff914e0b5c)
0xffff914e0b58   120  b #-0x28 (addr 0xffff914e0b30)
0xffff914e0b5c   124  ldr x16, [x26, #40]
0xffff914e0b60   128  cmp x1, x16
0xffff914e0b64   132  b.eq #-0x34 (addr 0xffff914e0b30)
0xffff914e0b68   136  movz x16, #0xc00000000
0xffff914e0b6c   140  sub csp, jssp, #0x10 (16)
0xffff914e0b70   144  stp fp, lr, [jssp, #-16]!
0xffff914e0b74   148  sub csp, jssp, #0x10 (16)
0xffff914e0b78   152  str x16, [jssp, #-8]!
0xffff914e0b7c   156  ldr x17, pc+100 (addr 0x0000ffff914e0be0)    ;; object: 0xffff914e0a81 <Code: COMPARE_IC>
0xffff914e0b80   160  sub csp, jssp, #0x10 (16)
0xffff914e0b84   164  str x17, [jssp, #-8]!
0xffff914e0b88   168  add fp, jssp, #0x10 (16)
0xffff914e0b8c   172  sub csp, jssp, #0x18 (24)
0xffff914e0b90   176  stp lr, x0, [jssp, #-24]!
0xffff914e0b94   180  str x1, [jssp, #16]
0xffff914e0b98   184  movz x10, #0x3100000000
0xffff914e0b9c   188  sub csp, jssp, #0x18 (24)
0xffff914e0ba0   192  stp x10, x0, [jssp, #-24]!
0xffff914e0ba4   196  str x1, [jssp, #16]
0xffff914e0ba8   200  movz x0, #0x3
0xffff914e0bac   204  ldr x1, pc+60 (addr 0x0000ffff914e0be8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914e0bb0   208  ldr x16, pc+64 (addr 0x0000ffff914e0bf0)    ;; code: STUB, CEntryStub, minor: 4
0xffff914e0bb4   212  blr x16
0xffff914e0bb8   216  add x11, x0, #0x5f (95)
0xffff914e0bbc   220  ldr x1, [jssp, #16]
0xffff914e0bc0   224  ldp lr, x0, [jssp], #24
0xffff914e0bc4   228  mov jssp, fp
0xffff914e0bc8   232  ldp fp, lr, [jssp], #16
0xffff914e0bcc   236  br x11
0xffff914e0bd0   240  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914e0bd4   244  d63f03e0       constant
0xffff914e0bd8   248  914d35a0       constant
0xffff914e0bdc   252  0000ffff       constant
0xffff914e0be0   256  914e0a81       constant
0xffff914e0be4   260  0000ffff       constant
0xffff914e0be8   264  00c8a980       constant
0xffff914e0bec   268  00000000       constant
0xffff914e0bf0   272  91406060       constant
0xffff914e0bf4   276  0000ffff       constant


RelocInfo (size = 15)
0xffff914e0b30  code target (COMPARE_IC)  (0xffff914d35a0)
0xffff914e0b7c  embedded object  (0xffff914e0a81 <Code: COMPARE_IC>)
0xffff914e0bac  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914e0bb0  code target (STUB)  (0xffff91406060)
0xffff914e0bd0  constant pool (size 40)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewClosureStub
compiler = crankshaft
Instructions (size = 773)
0xffff914e3680     0  movz x1, #0xf2c0
0xffff914e3684     4  movk x1, #0x4117, lsl #16
0xffff914e3688     8  ldp x3, x0, [x1]
0xffff914e368c    12  adds x16, x3, #0x48 (72)
0xffff914e3690    16  ccmp x16, x0, #nzCv, lo
0xffff914e3694    20  b.hi #+0x1bc (addr 0xffff914e3850)
0xffff914e3698    24  str x16, [x1]
0xffff914e369c    28  orr x3, x3, #0x1
0xffff914e36a0    32  ldur x0, [cp, #39]
0xffff914e36a4    36  movz x16, #0x2d7
0xffff914e36a8    40  ldr x1, [x0, x16]
0xffff914e36ac    44  stur x1, [x3, #-1]
0xffff914e36b0    48  ldr x1, pc+528 (addr 0x0000ffff914e38c0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914e36b4    52  stur x1, [x3, #7]
0xffff914e36b8    56  ldr x1, pc+528 (addr 0x0000ffff914e38c8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914e36bc    60  stur x1, [x3, #15]
0xffff914e36c0    64  ldr x1, pc+528 (addr 0x0000ffff914e38d0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914e36c4    68  stur x1, [x3, #47]
0xffff914e36c8    72  ldr x1, pc+528 (addr 0x0000ffff914e38d8)    ;; object: 0x49b04519 <the hole>
0xffff914e36cc    76  stur x1, [x3, #23]
0xffff914e36d0    80  stur x2, [x3, #31]
0xffff914e36d4    84  stur cp, [x3, #39]
0xffff914e36d8    88  ldur x1, [x2, #23]
0xffff914e36dc    92  movz x4, #0x0
0xffff914e36e0    96  cmp x1, x4
0xffff914e36e4   100  b.eq #+0x150 (addr 0xffff914e3834)
0xffff914e36e8   104  ldur w4, [x1, #11]
0xffff914e36ec   108  subs w4, w4, #0x4 (4)
0xffff914e36f0   112  b.vs #+0x230 (addr 0xffff914e3920)
0xffff914e36f4   116  mov x5, x4
0xffff914e36f8   120  cmp w5, #0x1 (1)
0xffff914e36fc   124  b.lt #+0xb4 (addr 0xffff914e37b0)
0xffff914e3700   128  add x4, x1, #0xf (15)
0xffff914e3704   132  ldr x6, [x4, w5, sxtw #3]
0xffff914e3708   136  ldur x4, [x6, #7]
0xffff914e370c   140  add x6, x1, #0x27 (39)
0xffff914e3710   144  ldr x7, [x6, w5, sxtw #3]
0xffff914e3714   148  add x6, x1, #0x17 (23)
0xffff914e3718   152  ldr x8, [x6, w5, sxtw #3]
0xffff914e371c   156  ldur x6, [x8, #7]
0xffff914e3720   160  cmp x0, x4
0xffff914e3724   164  b.ne #+0x1c (addr 0xffff914e3740)
0xffff914e3728   168  mov x4, #0xffffffff00000000
0xffff914e372c   172  cmp x7, x4
0xffff914e3730   176  b.ne #+0x10 (addr 0xffff914e3740)
0xffff914e3734   180  movz x4, #0x0
0xffff914e3738   184  cmp x6, x4
0xffff914e373c   188  b.ne #+0xc (addr 0xffff914e3748)
0xffff914e3740   192  sub w5, w5, #0x4 (4)
0xffff914e3744   196  b #-0x4c (addr 0xffff914e36f8)
0xffff914e3748   200  add x4, x1, #0x1f (31)
0xffff914e374c   204  ldr x7, [x4, w5, sxtw #3]
0xffff914e3750   208  ldur x7, [x7, #7]
0xffff914e3754   212  movz x4, #0x0
0xffff914e3758   216  cmp x7, x4
0xffff914e375c   220  b.eq #+0x50 (addr 0xffff914e37ac)
0xffff914e3760   224  add x4, x6, #0x5f (95)
0xffff914e3764   228  stur x4, [x3, #55]
0xffff914e3768   232  stur x7, [x3, #47]
0xffff914e376c   236  movz x16, #0x557
0xffff914e3770   240  ldr x4, [x0, x16]
0xffff914e3774   244  stur x4, [x3, #63]
0xffff914e3778   248  mov x4, x3
0xffff914e377c   252  movz x16, #0x557
0xffff914e3780   256  str x4, [x0, x16]
0xffff914e3784   260  add x6, x0, #0x557 (1367)
0xffff914e3788   264  and x4, x0, #0xfffffffffff00000
0xffff914e378c   268  ldr x4, [x4, #8]
0xffff914e3790   272  tbz w4, #2, #+0x18 (addr 0xffff914e37a8)
0xffff914e3794   276  sub csp, jssp, #0x8 (8)
0xffff914e3798   280  str lr, [jssp, #-8]!
0xffff914e379c   284  ldr x16, pc+324 (addr 0x0000ffff914e38e0)    ;; code: STUB, RecordWriteStub, minor: 71808
0xffff914e37a0   288  blr x16
0xffff914e37a4   292  ldr lr, [jssp], #8
0xffff914e37a8   296  b #+0x8 (addr 0xffff914e37b0)
0xffff914e37ac   300  b #+0x184 (addr 0xffff914e3930)
0xffff914e37b0   304  cmp w5, #0x1 (1)
0xffff914e37b4   308  b.ge #+0x94 (addr 0xffff914e3848)
0xffff914e37b8   312  ldur x1, [x1, #15]
0xffff914e37bc   316  ldur x1, [x1, #7]
0xffff914e37c0   320  movz x4, #0x0
0xffff914e37c4   324  cmp x1, x4
0xffff914e37c8   328  b.eq #+0x54 (addr 0xffff914e381c)
0xffff914e37cc   332  add x1, x1, #0x5f (95)
0xffff914e37d0   336  stur x1, [x3, #55]
0xffff914e37d4   340  ldr x1, pc+276 (addr 0x0000ffff914e38e8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914e37d8   344  stur x1, [x3, #47]
0xffff914e37dc   348  movz x16, #0x557
0xffff914e37e0   352  ldr x1, [x0, x16]
0xffff914e37e4   356  stur x1, [x3, #63]
0xffff914e37e8   360  mov x1, x3
0xffff914e37ec   364  movz x16, #0x557
0xffff914e37f0   368  str x1, [x0, x16]
0xffff914e37f4   372  add x2, x0, #0x557 (1367)
0xffff914e37f8   376  and x1, x0, #0xfffffffffff00000
0xffff914e37fc   380  ldr x1, [x1, #8]
0xffff914e3800   384  tbz w1, #2, #+0x18 (addr 0xffff914e3818)
0xffff914e3804   388  sub csp, jssp, #0x8 (8)
0xffff914e3808   392  str lr, [jssp, #-8]!
0xffff914e380c   396  ldr x16, pc+228 (addr 0x0000ffff914e38f0)    ;; code: STUB, RecordWriteStub, minor: 67616
0xffff914e3810   400  blr x16
0xffff914e3814   404  ldr lr, [jssp], #8
0xffff914e3818   408  b #+0x30 (addr 0xffff914e3848)
0xffff914e381c   412  ldr x0, pc+220 (addr 0x0000ffff914e38f8)    ;; object: 0x49b04241 <undefined>
0xffff914e3820   416  stur x0, [x3, #63]
0xffff914e3824   420  ldur x0, [x2, #15]
0xffff914e3828   424  add x0, x0, #0x5f (95)
0xffff914e382c   428  stur x0, [x3, #55]
0xffff914e3830   432  b #+0x18 (addr 0xffff914e3848)
0xffff914e3834   436  ldr x0, pc+204 (addr 0x0000ffff914e3900)    ;; object: 0x49b04241 <undefined>
0xffff914e3838   440  stur x0, [x3, #63]
0xffff914e383c   444  ldur x0, [x2, #15]
0xffff914e3840   448  add x0, x0, #0x5f (95)
0xffff914e3844   452  stur x0, [x3, #55]
0xffff914e3848   456  mov x0, x3
0xffff914e384c   460  ret
0xffff914e3850   464  sub csp, jssp, #0x10 (16)
0xffff914e3854   468  stp fp, lr, [jssp, #-16]!
0xffff914e3858   472  movz fp, #0xa00000000
0xffff914e385c   476  sub csp, jssp, #0x8 (8)
0xffff914e3860   480  str fp, [jssp, #-8]!
0xffff914e3864   484  add fp, jssp, #0x8 (8)
0xffff914e3868   488  movz x3, #0x0
0xffff914e386c   492  mov x16, lr
0xffff914e3870   496  ldr x17, pc+152 (addr 0x0000ffff914e3908)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914e3874   500  blr x17
0xffff914e3878   504  movz x0, #0x4800000000
0xffff914e387c   508  movz x10, #0x0
0xffff914e3880   512  sub csp, jssp, #0x10 (16)
0xffff914e3884   516  stp x10, x0, [jssp, #-16]!
0xffff914e3888   520  movz x0, #0x2
0xffff914e388c   524  movz x1, #0x5b88
0xffff914e3890   528  movk x1, #0xe2, lsl #16
0xffff914e3894   532  ldr x16, pc+124 (addr 0x0000ffff914e3910)    ;; code: STUB, CEntryStub, minor: 5
0xffff914e3898   536  blr x16
0xffff914e389c   540  str x0, [jssp, #24]
0xffff914e38a0   544  ldr x16, pc+120 (addr 0x0000ffff914e3918)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914e38a4   548  blr x16
0xffff914e38a8   552  ldr lr, [jssp, #16]
0xffff914e38ac   556  ldp xzr, fp, [jssp], #24
0xffff914e38b0   560  b #-0x210 (addr 0xffff914e36a0)
0xffff914e38b4   564  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff914e38b8   568  d63f03e0       constant
0xffff914e38bc   572  d503201f       constant
0xffff914e38c0   576  49b04201       constant
0xffff914e38c4   580  00000000       constant
0xffff914e38c8   584  49b04201       constant
0xffff914e38cc   588  00000000       constant
0xffff914e38d0   592  49b04201       constant
0xffff914e38d4   596  00000000       constant
0xffff914e38d8   600  49b04519       constant
0xffff914e38dc   604  00000000       constant
0xffff914e38e0   608  9142d2c0       constant
0xffff914e38e4   612  0000ffff       constant
0xffff914e38e8   616  49b04201       constant
0xffff914e38ec   620  00000000       constant
0xffff914e38f0   624  9142daa0       constant
0xffff914e38f4   628  0000ffff       constant
0xffff914e38f8   632  49b04241       constant
0xffff914e38fc   636  00000000       constant
0xffff914e3900   640  49b04241       constant
0xffff914e3904   644  00000000       constant
0xffff914e3908   648  91406820       constant
0xffff914e390c   652  0000ffff       constant
0xffff914e3910   656  91406260       constant
0xffff914e3914   660  0000ffff       constant
0xffff914e3918   664  914068e0       constant
0xffff914e391c   668  0000ffff       constant
0xffff914e3920   672  movz x16, #0x0
0xffff914e3924   676  sub csp, jssp, #0x10 (16)
0xffff914e3928   680  stp fp, lr, [jssp, #-16]!
0xffff914e392c   684  bl #+0x14 (addr 0xffff914e3940)
0xffff914e3930   688  movz x16, #0x8
0xffff914e3934   692  sub csp, jssp, #0x10 (16)
0xffff914e3938   696  stp fp, lr, [jssp, #-16]!
0xffff914e393c   700  bl #+0x4 (addr 0xffff914e3940)
0xffff914e3940   704  movz x17, #0xa00000000
0xffff914e3944   708  sub csp, jssp, #0x10 (16)
0xffff914e3948   712  stp x17, cp, [jssp, #-16]!
0xffff914e394c   716  add fp, jssp, #0x10 (16)
0xffff914e3950   720  ldr x17, pc+24 (addr 0x0000ffff914e3968)    ;; lazy deoptimization bailout 0
0xffff914e3954   724  add x17, x17, x16
0xffff914e3958   728  br x17
0xffff914e395c   732  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914e3960   736  d63f03e0       constant
0xffff914e3964   740  d503201f       constant
0xffff914e3968   744  91206000       constant
0xffff914e396c   748  0000ffff       constant


Safepoints (size = 21)
0xffff914e389c   540  000 | x2 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff914e36b0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914e36b8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914e36c0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914e36c8  embedded object  (0x49b04519 <the hole>)
0xffff914e379c  code target (STUB)  (0xffff9142d2c0)
0xffff914e37d4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914e380c  code target (STUB)  (0xffff9142daa0)
0xffff914e381c  embedded object  (0x49b04241 <undefined>)
0xffff914e3834  embedded object  (0x49b04241 <undefined>)
0xffff914e3870  code target (STUB)  (0xffff91406820)
0xffff914e3894  code target (STUB)  (0xffff91406260)
0xffff914e38a0  code target (STUB)  (0xffff914068e0)
0xffff914e38b4  constant pool (size 108)
0xffff914e3950  runtime entry
0xffff914e395c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = FastNewClosureStub
name = FastNewClosureStub
compiler = crankshaft
Instructions (size = 773)
0xffff914e3680     0  movz x1, #0xf2c0
0xffff914e3684     4  movk x1, #0x4117, lsl #16
0xffff914e3688     8  ldp x3, x0, [x1]
0xffff914e368c    12  adds x16, x3, #0x48 (72)
0xffff914e3690    16  ccmp x16, x0, #nzCv, lo
0xffff914e3694    20  b.hi #+0x1bc (addr 0xffff914e3850)
0xffff914e3698    24  str x16, [x1]
0xffff914e369c    28  orr x3, x3, #0x1
0xffff914e36a0    32  ldur x0, [cp, #39]
0xffff914e36a4    36  movz x16, #0x2d7
0xffff914e36a8    40  ldr x1, [x0, x16]
0xffff914e36ac    44  stur x1, [x3, #-1]
0xffff914e36b0    48  ldr x1, pc+528 (addr 0x0000ffff914e38c0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914e36b4    52  stur x1, [x3, #7]
0xffff914e36b8    56  ldr x1, pc+528 (addr 0x0000ffff914e38c8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914e36bc    60  stur x1, [x3, #15]
0xffff914e36c0    64  ldr x1, pc+528 (addr 0x0000ffff914e38d0)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914e36c4    68  stur x1, [x3, #47]
0xffff914e36c8    72  ldr x1, pc+528 (addr 0x0000ffff914e38d8)    ;; object: 0x49b04519 <the hole>
0xffff914e36cc    76  stur x1, [x3, #23]
0xffff914e36d0    80  stur x2, [x3, #31]
0xffff914e36d4    84  stur cp, [x3, #39]
0xffff914e36d8    88  ldur x1, [x2, #23]
0xffff914e36dc    92  movz x4, #0x0
0xffff914e36e0    96  cmp x1, x4
0xffff914e36e4   100  b.eq #+0x150 (addr 0xffff914e3834)
0xffff914e36e8   104  ldur w4, [x1, #11]
0xffff914e36ec   108  subs w4, w4, #0x4 (4)
0xffff914e36f0   112  b.vs #+0x230 (addr 0xffff914e3920)
0xffff914e36f4   116  mov x5, x4
0xffff914e36f8   120  cmp w5, #0x1 (1)
0xffff914e36fc   124  b.lt #+0xb4 (addr 0xffff914e37b0)
0xffff914e3700   128  add x4, x1, #0xf (15)
0xffff914e3704   132  ldr x6, [x4, w5, sxtw #3]
0xffff914e3708   136  ldur x4, [x6, #7]
0xffff914e370c   140  add x6, x1, #0x27 (39)
0xffff914e3710   144  ldr x7, [x6, w5, sxtw #3]
0xffff914e3714   148  add x6, x1, #0x17 (23)
0xffff914e3718   152  ldr x8, [x6, w5, sxtw #3]
0xffff914e371c   156  ldur x6, [x8, #7]
0xffff914e3720   160  cmp x0, x4
0xffff914e3724   164  b.ne #+0x1c (addr 0xffff914e3740)
0xffff914e3728   168  mov x4, #0xffffffff00000000
0xffff914e372c   172  cmp x7, x4
0xffff914e3730   176  b.ne #+0x10 (addr 0xffff914e3740)
0xffff914e3734   180  movz x4, #0x0
0xffff914e3738   184  cmp x6, x4
0xffff914e373c   188  b.ne #+0xc (addr 0xffff914e3748)
0xffff914e3740   192  sub w5, w5, #0x4 (4)
0xffff914e3744   196  b #-0x4c (addr 0xffff914e36f8)
0xffff914e3748   200  add x4, x1, #0x1f (31)
0xffff914e374c   204  ldr x7, [x4, w5, sxtw #3]
0xffff914e3750   208  ldur x7, [x7, #7]
0xffff914e3754   212  movz x4, #0x0
0xffff914e3758   216  cmp x7, x4
0xffff914e375c   220  b.eq #+0x50 (addr 0xffff914e37ac)
0xffff914e3760   224  add x4, x6, #0x5f (95)
0xffff914e3764   228  stur x4, [x3, #55]
0xffff914e3768   232  stur x7, [x3, #47]
0xffff914e376c   236  movz x16, #0x557
0xffff914e3770   240  ldr x4, [x0, x16]
0xffff914e3774   244  stur x4, [x3, #63]
0xffff914e3778   248  mov x4, x3
0xffff914e377c   252  movz x16, #0x557
0xffff914e3780   256  str x4, [x0, x16]
0xffff914e3784   260  add x6, x0, #0x557 (1367)
0xffff914e3788   264  and x4, x0, #0xfffffffffff00000
0xffff914e378c   268  ldr x4, [x4, #8]
0xffff914e3790   272  tbz w4, #2, #+0x18 (addr 0xffff914e37a8)
0xffff914e3794   276  sub csp, jssp, #0x8 (8)
0xffff914e3798   280  str lr, [jssp, #-8]!
0xffff914e379c   284  ldr x16, pc+324 (addr 0x0000ffff914e38e0)    ;; code: STUB, RecordWriteStub, minor: 71808
0xffff914e37a0   288  blr x16
0xffff914e37a4   292  ldr lr, [jssp], #8
0xffff914e37a8   296  b #+0x8 (addr 0xffff914e37b0)
0xffff914e37ac   300  b #+0x184 (addr 0xffff914e3930)
0xffff914e37b0   304  cmp w5, #0x1 (1)
0xffff914e37b4   308  b.ge #+0x94 (addr 0xffff914e3848)
0xffff914e37b8   312  ldur x1, [x1, #15]
0xffff914e37bc   316  ldur x1, [x1, #7]
0xffff914e37c0   320  movz x4, #0x0
0xffff914e37c4   324  cmp x1, x4
0xffff914e37c8   328  b.eq #+0x54 (addr 0xffff914e381c)
0xffff914e37cc   332  add x1, x1, #0x5f (95)
0xffff914e37d0   336  stur x1, [x3, #55]
0xffff914e37d4   340  ldr x1, pc+276 (addr 0x0000ffff914e38e8)    ;; object: 0x49b04201 <FixedArray[0]>
0xffff914e37d8   344  stur x1, [x3, #47]
0xffff914e37dc   348  movz x16, #0x557
0xffff914e37e0   352  ldr x1, [x0, x16]
0xffff914e37e4   356  stur x1, [x3, #63]
0xffff914e37e8   360  mov x1, x3
0xffff914e37ec   364  movz x16, #0x557
0xffff914e37f0   368  str x1, [x0, x16]
0xffff914e37f4   372  add x2, x0, #0x557 (1367)
0xffff914e37f8   376  and x1, x0, #0xfffffffffff00000
0xffff914e37fc   380  ldr x1, [x1, #8]
0xffff914e3800   384  tbz w1, #2, #+0x18 (addr 0xffff914e3818)
0xffff914e3804   388  sub csp, jssp, #0x8 (8)
0xffff914e3808   392  str lr, [jssp, #-8]!
0xffff914e380c   396  ldr x16, pc+228 (addr 0x0000ffff914e38f0)    ;; code: STUB, RecordWriteStub, minor: 67616
0xffff914e3810   400  blr x16
0xffff914e3814   404  ldr lr, [jssp], #8
0xffff914e3818   408  b #+0x30 (addr 0xffff914e3848)
0xffff914e381c   412  ldr x0, pc+220 (addr 0x0000ffff914e38f8)    ;; object: 0x49b04241 <undefined>
0xffff914e3820   416  stur x0, [x3, #63]
0xffff914e3824   420  ldur x0, [x2, #15]
0xffff914e3828   424  add x0, x0, #0x5f (95)
0xffff914e382c   428  stur x0, [x3, #55]
0xffff914e3830   432  b #+0x18 (addr 0xffff914e3848)
0xffff914e3834   436  ldr x0, pc+204 (addr 0x0000ffff914e3900)    ;; object: 0x49b04241 <undefined>
0xffff914e3838   440  stur x0, [x3, #63]
0xffff914e383c   444  ldur x0, [x2, #15]
0xffff914e3840   448  add x0, x0, #0x5f (95)
0xffff914e3844   452  stur x0, [x3, #55]
0xffff914e3848   456  mov x0, x3
0xffff914e384c   460  ret
0xffff914e3850   464  sub csp, jssp, #0x10 (16)
0xffff914e3854   468  stp fp, lr, [jssp, #-16]!
0xffff914e3858   472  movz fp, #0xa00000000
0xffff914e385c   476  sub csp, jssp, #0x8 (8)
0xffff914e3860   480  str fp, [jssp, #-8]!
0xffff914e3864   484  add fp, jssp, #0x8 (8)
0xffff914e3868   488  movz x3, #0x0
0xffff914e386c   492  mov x16, lr
0xffff914e3870   496  ldr x17, pc+152 (addr 0x0000ffff914e3908)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914e3874   500  blr x17
0xffff914e3878   504  movz x0, #0x4800000000
0xffff914e387c   508  movz x10, #0x0
0xffff914e3880   512  sub csp, jssp, #0x10 (16)
0xffff914e3884   516  stp x10, x0, [jssp, #-16]!
0xffff914e3888   520  movz x0, #0x2
0xffff914e388c   524  movz x1, #0x5b88
0xffff914e3890   528  movk x1, #0xe2, lsl #16
0xffff914e3894   532  ldr x16, pc+124 (addr 0x0000ffff914e3910)    ;; code: STUB, CEntryStub, minor: 5
0xffff914e3898   536  blr x16
0xffff914e389c   540  str x0, [jssp, #24]
0xffff914e38a0   544  ldr x16, pc+120 (addr 0x0000ffff914e3918)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914e38a4   548  blr x16
0xffff914e38a8   552  ldr lr, [jssp, #16]
0xffff914e38ac   556  ldp xzr, fp, [jssp], #24
0xffff914e38b0   560  b #-0x210 (addr 0xffff914e36a0)
0xffff914e38b4   564  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff914e38b8   568  d63f03e0       constant
0xffff914e38bc   572  d503201f       constant
0xffff914e38c0   576  49b04201       constant
0xffff914e38c4   580  00000000       constant
0xffff914e38c8   584  49b04201       constant
0xffff914e38cc   588  00000000       constant
0xffff914e38d0   592  49b04201       constant
0xffff914e38d4   596  00000000       constant
0xffff914e38d8   600  49b04519       constant
0xffff914e38dc   604  00000000       constant
0xffff914e38e0   608  9142d2c0       constant
0xffff914e38e4   612  0000ffff       constant
0xffff914e38e8   616  49b04201       constant
0xffff914e38ec   620  00000000       constant
0xffff914e38f0   624  9142daa0       constant
0xffff914e38f4   628  0000ffff       constant
0xffff914e38f8   632  49b04241       constant
0xffff914e38fc   636  00000000       constant
0xffff914e3900   640  49b04241       constant
0xffff914e3904   644  00000000       constant
0xffff914e3908   648  91406820       constant
0xffff914e390c   652  0000ffff       constant
0xffff914e3910   656  91406260       constant
0xffff914e3914   660  0000ffff       constant
0xffff914e3918   664  914068e0       constant
0xffff914e391c   668  0000ffff       constant
0xffff914e3920   672  movz x16, #0x0
0xffff914e3924   676  sub csp, jssp, #0x10 (16)
0xffff914e3928   680  stp fp, lr, [jssp, #-16]!
0xffff914e392c   684  bl #+0x14 (addr 0xffff914e3940)
0xffff914e3930   688  movz x16, #0x8
0xffff914e3934   692  sub csp, jssp, #0x10 (16)
0xffff914e3938   696  stp fp, lr, [jssp, #-16]!
0xffff914e393c   700  bl #+0x4 (addr 0xffff914e3940)
0xffff914e3940   704  movz x17, #0xa00000000
0xffff914e3944   708  sub csp, jssp, #0x10 (16)
0xffff914e3948   712  stp x17, cp, [jssp, #-16]!
0xffff914e394c   716  add fp, jssp, #0x10 (16)
0xffff914e3950   720  ldr x17, pc+24 (addr 0x0000ffff914e3968)    ;; lazy deoptimization bailout 0
0xffff914e3954   724  add x17, x17, x16
0xffff914e3958   728  br x17
0xffff914e395c   732  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914e3960   736  d63f03e0       constant
0xffff914e3964   740  d503201f       constant
0xffff914e3968   744  91206000       constant
0xffff914e396c   748  0000ffff       constant


Safepoints (size = 21)
0xffff914e389c   540  000 | x2 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff914e36b0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914e36b8  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914e36c0  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914e36c8  embedded object  (0x49b04519 <the hole>)
0xffff914e379c  code target (STUB)  (0xffff9142d2c0)
0xffff914e37d4  embedded object  (0x49b04201 <FixedArray[0]>)
0xffff914e380c  code target (STUB)  (0xffff9142daa0)
0xffff914e381c  embedded object  (0x49b04241 <undefined>)
0xffff914e3834  embedded object  (0x49b04241 <undefined>)
0xffff914e3870  code target (STUB)  (0xffff91406820)
0xffff914e3894  code target (STUB)  (0xffff91406260)
0xffff914e38a0  code target (STUB)  (0xffff914068e0)
0xffff914e38b4  constant pool (size 108)
0xffff914e3950  runtime entry
0xffff914e395c  constant pool (size 20)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 34
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 176)
0xffff914e4820     0  ldr x16, [x26, #64]
0xffff914e4824     4  cmp x0, x16
0xffff914e4828     8  b.eq #+0x3c (addr 0xffff914e4864)
0xffff914e482c    12  ldr x16, [x26, #72]
0xffff914e4830    16  cmp x0, x16
0xffff914e4834    20  b.eq #+0x28 (addr 0xffff914e485c)
0xffff914e4838    24  tbz w0, #0, #+0x50 (addr 0xffff914e4888)
0xffff914e483c    28  ldur x2, [x0, #-1]
0xffff914e4840    32  ldrb w1, [x2, #11]
0xffff914e4844    36  cmp x1, #0x80 (128)
0xffff914e4848    40  b.ge #+0x10 (addr 0xffff914e4858)
0xffff914e484c    44  ldur x1, [x0, #15]
0xffff914e4850    48  cbz x1, #+0xc (addr 0xffff914e485c)
0xffff914e4854    52  b #+0x10 (addr 0xffff914e4864)
0xffff914e4858    56  b #+0x30 (addr 0xffff914e4888)
0xffff914e485c    60  ldr x0, pc+28 (addr 0x0000ffff914e4878)    ;; object: 0x49b042b1 <false>
0xffff914e4860    64  ret
0xffff914e4864    68  ldr x0, pc+28 (addr 0x0000ffff914e4880)    ;; object: 0x49b04281 <true>
0xffff914e4868    72  ret
0xffff914e486c    76  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914e4870    80  d63f03e0       constant
0xffff914e4874    84  d503201f       constant
0xffff914e4878    88  49b042b1       constant
0xffff914e487c    92  00000000       constant
0xffff914e4880    96  49b04281       constant
0xffff914e4884   100  00000000       constant
0xffff914e4888   104  movz x16, #0x0
0xffff914e488c   108  sub csp, jssp, #0x10 (16)
0xffff914e4890   112  stp fp, lr, [jssp, #-16]!
0xffff914e4894   116  bl #+0x4 (addr 0xffff914e4898)
0xffff914e4898   120  movz x17, #0xa00000000
0xffff914e489c   124  sub csp, jssp, #0x10 (16)
0xffff914e48a0   128  stp x17, cp, [jssp, #-16]!
0xffff914e48a4   132  add fp, jssp, #0x10 (16)
0xffff914e48a8   136  ldr x17, pc+24 (addr 0x0000ffff914e48c0)    ;; lazy deoptimization bailout 0
0xffff914e48ac   140  add x17, x17, x16
0xffff914e48b0   144  br x17
0xffff914e48b4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914e48b8   152  d63f03e0       constant
0xffff914e48bc   156  d503201f       constant
0xffff914e48c0   160  91206000       constant
0xffff914e48c4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914e485c  embedded object  (0x49b042b1 <false>)
0xffff914e4864  embedded object  (0x49b04281 <true>)
0xffff914e486c  constant pool (size 28)
0xffff914e48a8  runtime entry
0xffff914e48b4  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 34
type = NORMAL
name = ToBooleanICStub(Bool,String)
compiler = crankshaft
Instructions (size = 176)
0xffff914e4820     0  ldr x16, [x26, #64]
0xffff914e4824     4  cmp x0, x16
0xffff914e4828     8  b.eq #+0x3c (addr 0xffff914e4864)
0xffff914e482c    12  ldr x16, [x26, #72]
0xffff914e4830    16  cmp x0, x16
0xffff914e4834    20  b.eq #+0x28 (addr 0xffff914e485c)
0xffff914e4838    24  tbz w0, #0, #+0x50 (addr 0xffff914e4888)
0xffff914e483c    28  ldur x2, [x0, #-1]
0xffff914e4840    32  ldrb w1, [x2, #11]
0xffff914e4844    36  cmp x1, #0x80 (128)
0xffff914e4848    40  b.ge #+0x10 (addr 0xffff914e4858)
0xffff914e484c    44  ldur x1, [x0, #15]
0xffff914e4850    48  cbz x1, #+0xc (addr 0xffff914e485c)
0xffff914e4854    52  b #+0x10 (addr 0xffff914e4864)
0xffff914e4858    56  b #+0x30 (addr 0xffff914e4888)
0xffff914e485c    60  ldr x0, pc+28 (addr 0x0000ffff914e4878)    ;; object: 0x49b042b1 <false>
0xffff914e4860    64  ret
0xffff914e4864    68  ldr x0, pc+28 (addr 0x0000ffff914e4880)    ;; object: 0x49b04281 <true>
0xffff914e4868    72  ret
0xffff914e486c    76  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914e4870    80  d63f03e0       constant
0xffff914e4874    84  d503201f       constant
0xffff914e4878    88  49b042b1       constant
0xffff914e487c    92  00000000       constant
0xffff914e4880    96  49b04281       constant
0xffff914e4884   100  00000000       constant
0xffff914e4888   104  movz x16, #0x0
0xffff914e488c   108  sub csp, jssp, #0x10 (16)
0xffff914e4890   112  stp fp, lr, [jssp, #-16]!
0xffff914e4894   116  bl #+0x4 (addr 0xffff914e4898)
0xffff914e4898   120  movz x17, #0xa00000000
0xffff914e489c   124  sub csp, jssp, #0x10 (16)
0xffff914e48a0   128  stp x17, cp, [jssp, #-16]!
0xffff914e48a4   132  add fp, jssp, #0x10 (16)
0xffff914e48a8   136  ldr x17, pc+24 (addr 0x0000ffff914e48c0)    ;; lazy deoptimization bailout 0
0xffff914e48ac   140  add x17, x17, x16
0xffff914e48b0   144  br x17
0xffff914e48b4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914e48b8   152  d63f03e0       constant
0xffff914e48bc   156  d503201f       constant
0xffff914e48c0   160  91206000       constant
0xffff914e48c4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914e485c  embedded object  (0x49b042b1 <false>)
0xffff914e4864  embedded object  (0x49b04281 <true>)
0xffff914e486c  constant pool (size 28)
0xffff914e48a8  runtime entry
0xffff914e48b4  constant pool (size 20)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 20
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 160)
0xffff914e4940     0  ldr x16, [x26, #56]
0xffff914e4944     4  cmp x0, x16
0xffff914e4948     8  b.eq #+0x24 (addr 0xffff914e496c)
0xffff914e494c    12  tbz w0, #0, #+0x4c (addr 0xffff914e4998)
0xffff914e4950    16  ldur x2, [x0, #-1]
0xffff914e4954    20  ldrb w1, [x2, #12]
0xffff914e4958    24  tbnz w1, #4, #+0x14 (addr 0xffff914e496c)
0xffff914e495c    28  ldrb w1, [x2, #11]
0xffff914e4960    32  cmp x1, #0xb1 (177)
0xffff914e4964    36  b.ge #+0x10 (addr 0xffff914e4974)
0xffff914e4968    40  b #+0x30 (addr 0xffff914e4998)
0xffff914e496c    44  ldr x0, pc+28 (addr 0x0000ffff914e4988)    ;; object: 0x49b042b1 <false>
0xffff914e4970    48  ret
0xffff914e4974    52  ldr x0, pc+28 (addr 0x0000ffff914e4990)    ;; object: 0x49b04281 <true>
0xffff914e4978    56  ret
0xffff914e497c    60  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914e4980    64  d63f03e0       constant
0xffff914e4984    68  d503201f       constant
0xffff914e4988    72  49b042b1       constant
0xffff914e498c    76  00000000       constant
0xffff914e4990    80  49b04281       constant
0xffff914e4994    84  00000000       constant
0xffff914e4998    88  movz x16, #0x0
0xffff914e499c    92  sub csp, jssp, #0x10 (16)
0xffff914e49a0    96  stp fp, lr, [jssp, #-16]!
0xffff914e49a4   100  bl #+0x4 (addr 0xffff914e49a8)
0xffff914e49a8   104  movz x17, #0xa00000000
0xffff914e49ac   108  sub csp, jssp, #0x10 (16)
0xffff914e49b0   112  stp x17, cp, [jssp, #-16]!
0xffff914e49b4   116  add fp, jssp, #0x10 (16)
0xffff914e49b8   120  ldr x17, pc+24 (addr 0x0000ffff914e49d0)    ;; lazy deoptimization bailout 0
0xffff914e49bc   124  add x17, x17, x16
0xffff914e49c0   128  br x17
0xffff914e49c4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914e49c8   136  d63f03e0       constant
0xffff914e49cc   140  d503201f       constant
0xffff914e49d0   144  91206000       constant
0xffff914e49d4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914e496c  embedded object  (0x49b042b1 <false>)
0xffff914e4974  embedded object  (0x49b04281 <true>)
0xffff914e497c  constant pool (size 28)
0xffff914e49b8  runtime entry
0xffff914e49c4  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 20
type = NORMAL
name = ToBooleanICStub(Null,SpecObject)
compiler = crankshaft
Instructions (size = 160)
0xffff914e4940     0  ldr x16, [x26, #56]
0xffff914e4944     4  cmp x0, x16
0xffff914e4948     8  b.eq #+0x24 (addr 0xffff914e496c)
0xffff914e494c    12  tbz w0, #0, #+0x4c (addr 0xffff914e4998)
0xffff914e4950    16  ldur x2, [x0, #-1]
0xffff914e4954    20  ldrb w1, [x2, #12]
0xffff914e4958    24  tbnz w1, #4, #+0x14 (addr 0xffff914e496c)
0xffff914e495c    28  ldrb w1, [x2, #11]
0xffff914e4960    32  cmp x1, #0xb1 (177)
0xffff914e4964    36  b.ge #+0x10 (addr 0xffff914e4974)
0xffff914e4968    40  b #+0x30 (addr 0xffff914e4998)
0xffff914e496c    44  ldr x0, pc+28 (addr 0x0000ffff914e4988)    ;; object: 0x49b042b1 <false>
0xffff914e4970    48  ret
0xffff914e4974    52  ldr x0, pc+28 (addr 0x0000ffff914e4990)    ;; object: 0x49b04281 <true>
0xffff914e4978    56  ret
0xffff914e497c    60  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914e4980    64  d63f03e0       constant
0xffff914e4984    68  d503201f       constant
0xffff914e4988    72  49b042b1       constant
0xffff914e498c    76  00000000       constant
0xffff914e4990    80  49b04281       constant
0xffff914e4994    84  00000000       constant
0xffff914e4998    88  movz x16, #0x0
0xffff914e499c    92  sub csp, jssp, #0x10 (16)
0xffff914e49a0    96  stp fp, lr, [jssp, #-16]!
0xffff914e49a4   100  bl #+0x4 (addr 0xffff914e49a8)
0xffff914e49a8   104  movz x17, #0xa00000000
0xffff914e49ac   108  sub csp, jssp, #0x10 (16)
0xffff914e49b0   112  stp x17, cp, [jssp, #-16]!
0xffff914e49b4   116  add fp, jssp, #0x10 (16)
0xffff914e49b8   120  ldr x17, pc+24 (addr 0x0000ffff914e49d0)    ;; lazy deoptimization bailout 0
0xffff914e49bc   124  add x17, x17, x16
0xffff914e49c0   128  br x17
0xffff914e49c4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914e49c8   136  d63f03e0       constant
0xffff914e49cc   140  d503201f       constant
0xffff914e49d0   144  91206000       constant
0xffff914e49d4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914e496c  embedded object  (0x49b042b1 <false>)
0xffff914e4974  embedded object  (0x49b04281 <true>)
0xffff914e497c  constant pool (size 28)
0xffff914e49b8  runtime entry
0xffff914e49c4  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914e4a40     0  ldur x0, [x1, #-1]
0xffff914e4a44     4  ldur x0, [x0, #47]
0xffff914e4a48     8  movz x16, #0x17f
0xffff914e4a4c    12  ldr x0, [x0, x16]
0xffff914e4a50    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914e4a40     0  ldur x0, [x1, #-1]
0xffff914e4a44     4  ldur x0, [x0, #47]
0xffff914e4a48     8  movz x16, #0x17f
0xffff914e4a4c    12  ldr x0, [x0, x16]
0xffff914e4a50    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = JSON
compiler = unknown
Instructions (size = 120)
0xffff914e59a0     0  sub csp, jssp, #0x8 (8)
0xffff914e59a4     4  str x3, [jssp, #-8]!
0xffff914e59a8     8  sub csp, jssp, #0x8 (8)
0xffff914e59ac    12  str x0, [jssp, #-8]!
0xffff914e59b0    16  ldr x0, pc+80 (addr 0x0000ffff914e5a00)    ;; object: 0x49bc5d51 Cell for 0
0xffff914e59b4    20  ldur x0, [x0, #7]
0xffff914e59b8    24  cmp x0, #0x0 (0)
0xffff914e59bc    28  b.ne #+0x2c (addr 0xffff914e59e8)
0xffff914e59c0    32  ldr x0, pc+72 (addr 0x0000ffff914e5a08)    ;; object: 0x408cb391 WeakCell for 0x49b46d21 PropertyCell for 0x49b46ce9 <a JSON with map 0x36413b91>
0xffff914e59c4    36  ldur x0, [x0, #7]
0xffff914e59c8    40  tbz w0, #0, #+0x20 (addr 0xffff914e59e8)
0xffff914e59cc    44  ldur x0, [x0, #15]
0xffff914e59d0    48  ldr x16, [x26, #88]
0xffff914e59d4    52  cmp x0, x16
0xffff914e59d8    56  b.eq #+0x10 (addr 0xffff914e59e8)
0xffff914e59dc    60  add jssp, jssp, #0x10 (16)
0xffff914e59e0    64  ret
0xffff914e59e4    68  b #+0x14 (addr 0xffff914e59f8)
0xffff914e59e8    72  ldr x0, [jssp], #8
0xffff914e59ec    76  ldr x3, [jssp], #8
0xffff914e59f0    80  ldr x16, pc+32 (addr 0x0000ffff914e5a10)    ;; code: BUILTIN
0xffff914e59f4    84  br x16
0xffff914e59f8    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914e59fc    92  d63f03e0       constant
0xffff914e5a00    96  49bc5d51       constant
0xffff914e5a04   100  00000000       constant
0xffff914e5a08   104  408cb391       constant
0xffff914e5a0c   108  00000000       constant
0xffff914e5a10   112  914222e0       constant
0xffff914e5a14   116  0000ffff       constant


RelocInfo (size = 9)
0xffff914e59b0  embedded object  (0x49bc5d51 Cell for 0)
0xffff914e59c0  embedded object  (0x408cb391 WeakCell for 0x49b46d21 PropertyCell for 0x49b46ce9 <a JSON with map 0x36413b91>)
0xffff914e59f0  code target (BUILTIN)  (0xffff914222e0)
0xffff914e59f8  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = toString
compiler = unknown
Instructions (size = 152)
0xffff914e5a80     0  sub csp, jssp, #0x8 (8)
0xffff914e5a84     4  str x3, [jssp, #-8]!
0xffff914e5a88     8  sub csp, jssp, #0x8 (8)
0xffff914e5a8c    12  str x0, [jssp, #-8]!
0xffff914e5a90    16  ldur x3, [cp, #39]
0xffff914e5a94    20  movz x16, #0x2e7
0xffff914e5a98    24  ldr x3, [x3, x16]
0xffff914e5a9c    28  ldur x3, [x3, #23]
0xffff914e5aa0    32  ldur x3, [x3, #23]
0xffff914e5aa4    36  ldr x0, pc+84 (addr 0x0000ffff914e5af8)    ;; object: 0x49b63e59 Cell for 0
0xffff914e5aa8    40  ldur x0, [x0, #7]
0xffff914e5aac    44  cmp x0, #0x0 (0)
0xffff914e5ab0    48  b.ne #+0x1c (addr 0xffff914e5acc)
0xffff914e5ab4    52  ldur x0, [x3, #-1]
0xffff914e5ab8    56  ldr x4, pc+72 (addr 0x0000ffff914e5b00)    ;; object: 0x40806e39 WeakCell for 0x364156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff914e5abc    60  ldur x4, [x4, #7]
0xffff914e5ac0    64  cmp x0, x4
0xffff914e5ac4    68  b.ne #+0x8 (addr 0xffff914e5acc)
0xffff914e5ac8    72  b #+0x14 (addr 0xffff914e5adc)
0xffff914e5acc    76  ldr x0, [jssp], #8
0xffff914e5ad0    80  ldr x3, [jssp], #8
0xffff914e5ad4    84  ldr x16, pc+52 (addr 0x0000ffff914e5b08)    ;; code: BUILTIN
0xffff914e5ad8    88  br x16
0xffff914e5adc    92  add jssp, jssp, #0x10 (16)
0xffff914e5ae0    96  mov x1, x3
0xffff914e5ae4   100  ldr x16, pc+44 (addr 0x0000ffff914e5b10)    ;; code: HANDLER, LoadConstantStub, minor: 3
0xffff914e5ae8   104  br x16
0xffff914e5aec   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff914e5af0   112  d63f03e0       constant
0xffff914e5af4   116  d503201f       constant
0xffff914e5af8   120  49b63e59       constant
0xffff914e5afc   124  00000000       constant
0xffff914e5b00   128  40806e39       constant
0xffff914e5b04   132  00000000       constant
0xffff914e5b08   136  914222e0       constant
0xffff914e5b0c   140  0000ffff       constant
0xffff914e5b10   144  91443400       constant
0xffff914e5b14   148  0000ffff       constant


RelocInfo (size = 10)
0xffff914e5aa4  embedded object  (0x49b63e59 Cell for 0)
0xffff914e5ab8  embedded object  (0x40806e39 WeakCell for 0x364156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff914e5ad4  code target (BUILTIN)  (0xffff914222e0)
0xffff914e5ae4  code target (HANDLER)  (0xffff91443400)
0xffff914e5aec  constant pool (size 44)

kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 96)
0xffff914e5b80     0  sub csp, jssp, #0x8 (8)
0xffff914e5b84     4  str x3, [jssp, #-8]!
0xffff914e5b88     8  sub csp, jssp, #0x8 (8)
0xffff914e5b8c    12  str x0, [jssp, #-8]!
0xffff914e5b90    16  ldr x0, pc+56 (addr 0x0000ffff914e5bc8)    ;; object: 0x49b63e59 Cell for 0
0xffff914e5b94    20  ldur x0, [x0, #7]
0xffff914e5b98    24  cmp x0, #0x0 (0)
0xffff914e5b9c    28  b.ne #+0x14 (addr 0xffff914e5bb0)
0xffff914e5ba0    32  add jssp, jssp, #0x10 (16)
0xffff914e5ba4    36  ldr x0, pc+44 (addr 0x0000ffff914e5bd0)    ;; object: 0x49b04241 <undefined>
0xffff914e5ba8    40  ret
0xffff914e5bac    44  b #+0x14 (addr 0xffff914e5bc0)
0xffff914e5bb0    48  ldr x0, [jssp], #8
0xffff914e5bb4    52  ldr x3, [jssp], #8
0xffff914e5bb8    56  ldr x16, pc+32 (addr 0x0000ffff914e5bd8)    ;; code: BUILTIN
0xffff914e5bbc    60  br x16
0xffff914e5bc0    64  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914e5bc4    68  d63f03e0       constant
0xffff914e5bc8    72  49b63e59       constant
0xffff914e5bcc    76  00000000       constant
0xffff914e5bd0    80  49b04241       constant
0xffff914e5bd4    84  00000000       constant
0xffff914e5bd8    88  914222e0       constant
0xffff914e5bdc    92  0000ffff       constant


RelocInfo (size = 9)
0xffff914e5b90  embedded object  (0x49b63e59 Cell for 0)
0xffff914e5ba4  embedded object  (0x49b04241 <undefined>)
0xffff914e5bb8  code target (BUILTIN)  (0xffff914222e0)
0xffff914e5bc0  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = id
compiler = unknown
Instructions (size = 152)
0xffff914e5c40     0  sub csp, jssp, #0x8 (8)
0xffff914e5c44     4  str x3, [jssp, #-8]!
0xffff914e5c48     8  sub csp, jssp, #0x8 (8)
0xffff914e5c4c    12  str x4, [jssp, #-8]!
0xffff914e5c50    16  ldr x3, pc+88 (addr 0x0000ffff914e5ca8)    ;; object: 0x408cb5d9 Cell for 0
0xffff914e5c54    20  ldur x3, [x3, #7]
0xffff914e5c58    24  cmp x3, #0x0 (0)
0xffff914e5c5c    28  b.ne #+0x30 (addr 0xffff914e5c8c)
0xffff914e5c60    32  tbz w0, #0, #+0x2c (addr 0xffff914e5c8c)
0xffff914e5c64    36  ldr x5, pc+76 (addr 0x0000ffff914e5cb0)    ;; object: 0x40836b19 WeakCell for 0x364362f1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e5c68    40  ldur x5, [x5, #7]
0xffff914e5c6c    44  tbz w5, #0, #+0x20 (addr 0xffff914e5c8c)
0xffff914e5c70    48  ldursw x4, [x5, #15]
0xffff914e5c74    52  tbnz w4, #23, #+0x18 (addr 0xffff914e5c8c)
0xffff914e5c78    56  ldr x4, [jssp], #8
0xffff914e5c7c    60  ldr x3, [jssp], #8
0xffff914e5c80    64  ldr x2, pc+56 (addr 0x0000ffff914e5cb8)    ;; object: 0x49b4e919 <String[2]: id>
0xffff914e5c84    68  ldr x16, pc+60 (addr 0x0000ffff914e5cc0)    ;; code: HANDLER, StoreTransitionStub, minor: 198659
0xffff914e5c88    72  br x16
0xffff914e5c8c    76  ldr x2, pc+60 (addr 0x0000ffff914e5cc8)    ;; object: 0x49b4e919 <String[2]: id>
0xffff914e5c90    80  ldr x4, [jssp], #8
0xffff914e5c94    84  ldr x3, [jssp], #8
0xffff914e5c98    88  ldr x16, pc+56 (addr 0x0000ffff914e5cd0)    ;; code: BUILTIN
0xffff914e5c9c    92  br x16
0xffff914e5ca0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914e5ca4   100  d63f03e0       constant
0xffff914e5ca8   104  408cb5d9       constant
0xffff914e5cac   108  00000000       constant
0xffff914e5cb0   112  40836b19       constant
0xffff914e5cb4   116  00000000       constant
0xffff914e5cb8   120  49b4e919       constant
0xffff914e5cbc   124  00000000       constant
0xffff914e5cc0   128  9148b940       constant
0xffff914e5cc4   132  0000ffff       constant
0xffff914e5cc8   136  49b4e919       constant
0xffff914e5ccc   140  00000000       constant
0xffff914e5cd0   144  91422420       constant
0xffff914e5cd4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914e5c50  embedded object  (0x408cb5d9 Cell for 0)
0xffff914e5c64  embedded object  (0x40836b19 WeakCell for 0x364362f1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e5c80  embedded object  (0x49b4e919 <String[2]: id>)
0xffff914e5c84  code target (HANDLER)  (0xffff9148b940)
0xffff914e5c8c  embedded object  (0x49b4e919 <String[2]: id>)
0xffff914e5c98  code target (BUILTIN)  (0xffff91422420)
0xffff914e5ca0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = exports
compiler = unknown
Instructions (size = 152)
0xffff914e5d40     0  sub csp, jssp, #0x8 (8)
0xffff914e5d44     4  str x3, [jssp, #-8]!
0xffff914e5d48     8  sub csp, jssp, #0x8 (8)
0xffff914e5d4c    12  str x4, [jssp, #-8]!
0xffff914e5d50    16  ldr x3, pc+88 (addr 0x0000ffff914e5da8)    ;; object: 0x408cb5d9 Cell for 0
0xffff914e5d54    20  ldur x3, [x3, #7]
0xffff914e5d58    24  cmp x3, #0x0 (0)
0xffff914e5d5c    28  b.ne #+0x30 (addr 0xffff914e5d8c)
0xffff914e5d60    32  tbz w0, #0, #+0x2c (addr 0xffff914e5d8c)
0xffff914e5d64    36  ldr x5, pc+76 (addr 0x0000ffff914e5db0)    ;; object: 0x40836b69 WeakCell for 0x36436349 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e5d68    40  ldur x5, [x5, #7]
0xffff914e5d6c    44  tbz w5, #0, #+0x20 (addr 0xffff914e5d8c)
0xffff914e5d70    48  ldursw x4, [x5, #15]
0xffff914e5d74    52  tbnz w4, #23, #+0x18 (addr 0xffff914e5d8c)
0xffff914e5d78    56  ldr x4, [jssp], #8
0xffff914e5d7c    60  ldr x3, [jssp], #8
0xffff914e5d80    64  ldr x2, pc+56 (addr 0x0000ffff914e5db8)    ;; object: 0x49bb2651 <String[7]: exports>
0xffff914e5d84    68  ldr x16, pc+60 (addr 0x0000ffff914e5dc0)    ;; code: HANDLER, StoreTransitionStub, minor: 198660
0xffff914e5d88    72  br x16
0xffff914e5d8c    76  ldr x2, pc+60 (addr 0x0000ffff914e5dc8)    ;; object: 0x49bb2651 <String[7]: exports>
0xffff914e5d90    80  ldr x4, [jssp], #8
0xffff914e5d94    84  ldr x3, [jssp], #8
0xffff914e5d98    88  ldr x16, pc+56 (addr 0x0000ffff914e5dd0)    ;; code: BUILTIN
0xffff914e5d9c    92  br x16
0xffff914e5da0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914e5da4   100  d63f03e0       constant
0xffff914e5da8   104  408cb5d9       constant
0xffff914e5dac   108  00000000       constant
0xffff914e5db0   112  40836b69       constant
0xffff914e5db4   116  00000000       constant
0xffff914e5db8   120  49bb2651       constant
0xffff914e5dbc   124  00000000       constant
0xffff914e5dc0   128  9148bb80       constant
0xffff914e5dc4   132  0000ffff       constant
0xffff914e5dc8   136  49bb2651       constant
0xffff914e5dcc   140  00000000       constant
0xffff914e5dd0   144  91422420       constant
0xffff914e5dd4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914e5d50  embedded object  (0x408cb5d9 Cell for 0)
0xffff914e5d64  embedded object  (0x40836b69 WeakCell for 0x36436349 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e5d80  embedded object  (0x49bb2651 <String[7]: exports>)
0xffff914e5d84  code target (HANDLER)  (0xffff9148bb80)
0xffff914e5d8c  embedded object  (0x49bb2651 <String[7]: exports>)
0xffff914e5d98  code target (BUILTIN)  (0xffff91422420)
0xffff914e5da0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = parent
compiler = unknown
Instructions (size = 152)
0xffff914e5e40     0  sub csp, jssp, #0x8 (8)
0xffff914e5e44     4  str x3, [jssp, #-8]!
0xffff914e5e48     8  sub csp, jssp, #0x8 (8)
0xffff914e5e4c    12  str x4, [jssp, #-8]!
0xffff914e5e50    16  ldr x3, pc+88 (addr 0x0000ffff914e5ea8)    ;; object: 0x408cb5d9 Cell for 0
0xffff914e5e54    20  ldur x3, [x3, #7]
0xffff914e5e58    24  cmp x3, #0x0 (0)
0xffff914e5e5c    28  b.ne #+0x30 (addr 0xffff914e5e8c)
0xffff914e5e60    32  tbz w0, #0, #+0x2c (addr 0xffff914e5e8c)
0xffff914e5e64    36  ldr x5, pc+76 (addr 0x0000ffff914e5eb0)    ;; object: 0x40836b81 WeakCell for 0x364363a1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e5e68    40  ldur x5, [x5, #7]
0xffff914e5e6c    44  tbz w5, #0, #+0x20 (addr 0xffff914e5e8c)
0xffff914e5e70    48  ldursw x4, [x5, #15]
0xffff914e5e74    52  tbnz w4, #23, #+0x18 (addr 0xffff914e5e8c)
0xffff914e5e78    56  ldr x4, [jssp], #8
0xffff914e5e7c    60  ldr x3, [jssp], #8
0xffff914e5e80    64  ldr x2, pc+56 (addr 0x0000ffff914e5eb8)    ;; object: 0x49bcfca1 <String[6]: parent>
0xffff914e5e84    68  ldr x16, pc+60 (addr 0x0000ffff914e5ec0)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff914e5e88    72  br x16
0xffff914e5e8c    76  ldr x2, pc+60 (addr 0x0000ffff914e5ec8)    ;; object: 0x49bcfca1 <String[6]: parent>
0xffff914e5e90    80  ldr x4, [jssp], #8
0xffff914e5e94    84  ldr x3, [jssp], #8
0xffff914e5e98    88  ldr x16, pc+56 (addr 0x0000ffff914e5ed0)    ;; code: BUILTIN
0xffff914e5e9c    92  br x16
0xffff914e5ea0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914e5ea4   100  d63f03e0       constant
0xffff914e5ea8   104  408cb5d9       constant
0xffff914e5eac   108  00000000       constant
0xffff914e5eb0   112  40836b81       constant
0xffff914e5eb4   116  00000000       constant
0xffff914e5eb8   120  49bcfca1       constant
0xffff914e5ebc   124  00000000       constant
0xffff914e5ec0   128  9148bdc0       constant
0xffff914e5ec4   132  0000ffff       constant
0xffff914e5ec8   136  49bcfca1       constant
0xffff914e5ecc   140  00000000       constant
0xffff914e5ed0   144  91422420       constant
0xffff914e5ed4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914e5e50  embedded object  (0x408cb5d9 Cell for 0)
0xffff914e5e64  embedded object  (0x40836b81 WeakCell for 0x364363a1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e5e80  embedded object  (0x49bcfca1 <String[6]: parent>)
0xffff914e5e84  code target (HANDLER)  (0xffff9148bdc0)
0xffff914e5e8c  embedded object  (0x49bcfca1 <String[6]: parent>)
0xffff914e5e98  code target (BUILTIN)  (0xffff91422420)
0xffff914e5ea0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = filename
compiler = unknown
Instructions (size = 152)
0xffff914e5f40     0  sub csp, jssp, #0x8 (8)
0xffff914e5f44     4  str x3, [jssp, #-8]!
0xffff914e5f48     8  sub csp, jssp, #0x8 (8)
0xffff914e5f4c    12  str x4, [jssp, #-8]!
0xffff914e5f50    16  ldr x3, pc+88 (addr 0x0000ffff914e5fa8)    ;; object: 0x408cb5d9 Cell for 0
0xffff914e5f54    20  ldur x3, [x3, #7]
0xffff914e5f58    24  cmp x3, #0x0 (0)
0xffff914e5f5c    28  b.ne #+0x30 (addr 0xffff914e5f8c)
0xffff914e5f60    32  tbz w0, #0, #+0x2c (addr 0xffff914e5f8c)
0xffff914e5f64    36  ldr x5, pc+76 (addr 0x0000ffff914e5fb0)    ;; object: 0x40836b99 WeakCell for 0x364363f9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e5f68    40  ldur x5, [x5, #7]
0xffff914e5f6c    44  tbz w5, #0, #+0x20 (addr 0xffff914e5f8c)
0xffff914e5f70    48  ldursw x4, [x5, #15]
0xffff914e5f74    52  tbnz w4, #23, #+0x18 (addr 0xffff914e5f8c)
0xffff914e5f78    56  ldr x4, [jssp], #8
0xffff914e5f7c    60  ldr x3, [jssp], #8
0xffff914e5f80    64  ldr x2, pc+56 (addr 0x0000ffff914e5fb8)    ;; object: 0x49bb9cf1 <String[8]: filename>
0xffff914e5f84    68  ldr x16, pc+60 (addr 0x0000ffff914e5fc0)    ;; code: HANDLER, StoreTransitionStub, minor: 198662
0xffff914e5f88    72  br x16
0xffff914e5f8c    76  ldr x2, pc+60 (addr 0x0000ffff914e5fc8)    ;; object: 0x49bb9cf1 <String[8]: filename>
0xffff914e5f90    80  ldr x4, [jssp], #8
0xffff914e5f94    84  ldr x3, [jssp], #8
0xffff914e5f98    88  ldr x16, pc+56 (addr 0x0000ffff914e5fd0)    ;; code: BUILTIN
0xffff914e5f9c    92  br x16
0xffff914e5fa0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914e5fa4   100  d63f03e0       constant
0xffff914e5fa8   104  408cb5d9       constant
0xffff914e5fac   108  00000000       constant
0xffff914e5fb0   112  40836b99       constant
0xffff914e5fb4   116  00000000       constant
0xffff914e5fb8   120  49bb9cf1       constant
0xffff914e5fbc   124  00000000       constant
0xffff914e5fc0   128  9148c000       constant
0xffff914e5fc4   132  0000ffff       constant
0xffff914e5fc8   136  49bb9cf1       constant
0xffff914e5fcc   140  00000000       constant
0xffff914e5fd0   144  91422420       constant
0xffff914e5fd4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914e5f50  embedded object  (0x408cb5d9 Cell for 0)
0xffff914e5f64  embedded object  (0x40836b99 WeakCell for 0x364363f9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e5f80  embedded object  (0x49bb9cf1 <String[8]: filename>)
0xffff914e5f84  code target (HANDLER)  (0xffff9148c000)
0xffff914e5f8c  embedded object  (0x49bb9cf1 <String[8]: filename>)
0xffff914e5f98  code target (BUILTIN)  (0xffff91422420)
0xffff914e5fa0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = loaded
compiler = unknown
Instructions (size = 152)
0xffff914e6040     0  sub csp, jssp, #0x8 (8)
0xffff914e6044     4  str x3, [jssp, #-8]!
0xffff914e6048     8  sub csp, jssp, #0x8 (8)
0xffff914e604c    12  str x4, [jssp, #-8]!
0xffff914e6050    16  ldr x3, pc+88 (addr 0x0000ffff914e60a8)    ;; object: 0x408cb5d9 Cell for 0
0xffff914e6054    20  ldur x3, [x3, #7]
0xffff914e6058    24  cmp x3, #0x0 (0)
0xffff914e605c    28  b.ne #+0x30 (addr 0xffff914e608c)
0xffff914e6060    32  tbz w0, #0, #+0x2c (addr 0xffff914e608c)
0xffff914e6064    36  ldr x5, pc+76 (addr 0x0000ffff914e60b0)    ;; object: 0x40836bb1 WeakCell for 0x36436451 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e6068    40  ldur x5, [x5, #7]
0xffff914e606c    44  tbz w5, #0, #+0x20 (addr 0xffff914e608c)
0xffff914e6070    48  ldursw x4, [x5, #15]
0xffff914e6074    52  tbnz w4, #23, #+0x18 (addr 0xffff914e608c)
0xffff914e6078    56  ldr x4, [jssp], #8
0xffff914e607c    60  ldr x3, [jssp], #8
0xffff914e6080    64  ldr x2, pc+56 (addr 0x0000ffff914e60b8)    ;; object: 0x49bba9e1 <String[6]: loaded>
0xffff914e6084    68  ldr x16, pc+60 (addr 0x0000ffff914e60c0)    ;; code: HANDLER, StoreTransitionStub, minor: 198663
0xffff914e6088    72  br x16
0xffff914e608c    76  ldr x2, pc+60 (addr 0x0000ffff914e60c8)    ;; object: 0x49bba9e1 <String[6]: loaded>
0xffff914e6090    80  ldr x4, [jssp], #8
0xffff914e6094    84  ldr x3, [jssp], #8
0xffff914e6098    88  ldr x16, pc+56 (addr 0x0000ffff914e60d0)    ;; code: BUILTIN
0xffff914e609c    92  br x16
0xffff914e60a0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914e60a4   100  d63f03e0       constant
0xffff914e60a8   104  408cb5d9       constant
0xffff914e60ac   108  00000000       constant
0xffff914e60b0   112  40836bb1       constant
0xffff914e60b4   116  00000000       constant
0xffff914e60b8   120  49bba9e1       constant
0xffff914e60bc   124  00000000       constant
0xffff914e60c0   128  9148c240       constant
0xffff914e60c4   132  0000ffff       constant
0xffff914e60c8   136  49bba9e1       constant
0xffff914e60cc   140  00000000       constant
0xffff914e60d0   144  91422420       constant
0xffff914e60d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914e6050  embedded object  (0x408cb5d9 Cell for 0)
0xffff914e6064  embedded object  (0x40836bb1 WeakCell for 0x36436451 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e6080  embedded object  (0x49bba9e1 <String[6]: loaded>)
0xffff914e6084  code target (HANDLER)  (0xffff9148c240)
0xffff914e608c  embedded object  (0x49bba9e1 <String[6]: loaded>)
0xffff914e6098  code target (BUILTIN)  (0xffff91422420)
0xffff914e60a0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914e6140     0  tbz w0, #0, #+0x90 (addr 0xffff914e61d0)
0xffff914e6144     4  mov x2, x0
0xffff914e6148     8  stur x2, [x1, #63]
0xffff914e614c    12  add x3, x1, #0x3f (63)
0xffff914e6150    16  and x2, x2, #0xfffffffffff00000
0xffff914e6154    20  ldr x2, [x2, #8]
0xffff914e6158    24  tbz w2, #1, #+0x24 (addr 0xffff914e617c)
0xffff914e615c    28  and x2, x1, #0xfffffffffff00000
0xffff914e6160    32  ldr x2, [x2, #8]
0xffff914e6164    36  tbz w2, #2, #+0x18 (addr 0xffff914e617c)
0xffff914e6168    40  sub csp, jssp, #0x8 (8)
0xffff914e616c    44  str lr, [jssp, #-8]!
0xffff914e6170    48  ldr x16, pc+80 (addr 0x0000ffff914e61c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914e6174    52  blr x16
0xffff914e6178    56  ldr lr, [jssp], #8
0xffff914e617c    60  stur x5, [x1, #-1]
0xffff914e6180    64  tbz w5, #0, #+0x34 (addr 0xffff914e61b4)
0xffff914e6184    68  sub x2, x1, #0x1 (1)
0xffff914e6188    72  and x5, x5, #0xfffffffffff00000
0xffff914e618c    76  ldr x5, [x5, #8]
0xffff914e6190    80  tbz w5, #1, #+0x24 (addr 0xffff914e61b4)
0xffff914e6194    84  and x5, x1, #0xfffffffffff00000
0xffff914e6198    88  ldr x5, [x5, #8]
0xffff914e619c    92  tbz w5, #2, #+0x18 (addr 0xffff914e61b4)
0xffff914e61a0    96  sub csp, jssp, #0x8 (8)
0xffff914e61a4   100  str lr, [jssp, #-8]!
0xffff914e61a8   104  ldr x16, pc+32 (addr 0x0000ffff914e61c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914e61ac   108  blr x16
0xffff914e61b0   112  ldr lr, [jssp], #8
0xffff914e61b4   116  ret
0xffff914e61b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914e61bc   124  d63f03e0       constant
0xffff914e61c0   128  914170c0       constant
0xffff914e61c4   132  0000ffff       constant
0xffff914e61c8   136  91438080       constant
0xffff914e61cc   140  0000ffff       constant
0xffff914e61d0   144  movz x16, #0x0
0xffff914e61d4   148  sub csp, jssp, #0x10 (16)
0xffff914e61d8   152  stp fp, lr, [jssp, #-16]!
0xffff914e61dc   156  bl #+0x4 (addr 0xffff914e61e0)
0xffff914e61e0   160  movz x17, #0xa00000000
0xffff914e61e4   164  sub csp, jssp, #0x10 (16)
0xffff914e61e8   168  stp x17, cp, [jssp, #-16]!
0xffff914e61ec   172  add fp, jssp, #0x10 (16)
0xffff914e61f0   176  ldr x17, pc+24 (addr 0x0000ffff914e6208)    ;; lazy deoptimization bailout 0
0xffff914e61f4   180  add x17, x17, x16
0xffff914e61f8   184  br x17
0xffff914e61fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914e6200   192  d63f03e0       constant
0xffff914e6204   196  d503201f       constant
0xffff914e6208   200  91206000       constant
0xffff914e620c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914e6170  code target (STUB)  (0xffff914170c0)
0xffff914e61a8  code target (STUB)  (0xffff91438080)
0xffff914e61b8  constant pool (size 24)
0xffff914e61f0  runtime entry
0xffff914e61fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914e6140     0  tbz w0, #0, #+0x90 (addr 0xffff914e61d0)
0xffff914e6144     4  mov x2, x0
0xffff914e6148     8  stur x2, [x1, #63]
0xffff914e614c    12  add x3, x1, #0x3f (63)
0xffff914e6150    16  and x2, x2, #0xfffffffffff00000
0xffff914e6154    20  ldr x2, [x2, #8]
0xffff914e6158    24  tbz w2, #1, #+0x24 (addr 0xffff914e617c)
0xffff914e615c    28  and x2, x1, #0xfffffffffff00000
0xffff914e6160    32  ldr x2, [x2, #8]
0xffff914e6164    36  tbz w2, #2, #+0x18 (addr 0xffff914e617c)
0xffff914e6168    40  sub csp, jssp, #0x8 (8)
0xffff914e616c    44  str lr, [jssp, #-8]!
0xffff914e6170    48  ldr x16, pc+80 (addr 0x0000ffff914e61c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914e6174    52  blr x16
0xffff914e6178    56  ldr lr, [jssp], #8
0xffff914e617c    60  stur x5, [x1, #-1]
0xffff914e6180    64  tbz w5, #0, #+0x34 (addr 0xffff914e61b4)
0xffff914e6184    68  sub x2, x1, #0x1 (1)
0xffff914e6188    72  and x5, x5, #0xfffffffffff00000
0xffff914e618c    76  ldr x5, [x5, #8]
0xffff914e6190    80  tbz w5, #1, #+0x24 (addr 0xffff914e61b4)
0xffff914e6194    84  and x5, x1, #0xfffffffffff00000
0xffff914e6198    88  ldr x5, [x5, #8]
0xffff914e619c    92  tbz w5, #2, #+0x18 (addr 0xffff914e61b4)
0xffff914e61a0    96  sub csp, jssp, #0x8 (8)
0xffff914e61a4   100  str lr, [jssp, #-8]!
0xffff914e61a8   104  ldr x16, pc+32 (addr 0x0000ffff914e61c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914e61ac   108  blr x16
0xffff914e61b0   112  ldr lr, [jssp], #8
0xffff914e61b4   116  ret
0xffff914e61b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914e61bc   124  d63f03e0       constant
0xffff914e61c0   128  914170c0       constant
0xffff914e61c4   132  0000ffff       constant
0xffff914e61c8   136  91438080       constant
0xffff914e61cc   140  0000ffff       constant
0xffff914e61d0   144  movz x16, #0x0
0xffff914e61d4   148  sub csp, jssp, #0x10 (16)
0xffff914e61d8   152  stp fp, lr, [jssp, #-16]!
0xffff914e61dc   156  bl #+0x4 (addr 0xffff914e61e0)
0xffff914e61e0   160  movz x17, #0xa00000000
0xffff914e61e4   164  sub csp, jssp, #0x10 (16)
0xffff914e61e8   168  stp x17, cp, [jssp, #-16]!
0xffff914e61ec   172  add fp, jssp, #0x10 (16)
0xffff914e61f0   176  ldr x17, pc+24 (addr 0x0000ffff914e6208)    ;; lazy deoptimization bailout 0
0xffff914e61f4   180  add x17, x17, x16
0xffff914e61f8   184  br x17
0xffff914e61fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914e6200   192  d63f03e0       constant
0xffff914e6204   196  d503201f       constant
0xffff914e6208   200  91206000       constant
0xffff914e620c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914e6170  code target (STUB)  (0xffff914170c0)
0xffff914e61a8  code target (STUB)  (0xffff91438080)
0xffff914e61b8  constant pool (size 24)
0xffff914e61f0  runtime entry
0xffff914e61fc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = children
compiler = unknown
Instructions (size = 152)
0xffff914e6280     0  sub csp, jssp, #0x8 (8)
0xffff914e6284     4  str x3, [jssp, #-8]!
0xffff914e6288     8  sub csp, jssp, #0x8 (8)
0xffff914e628c    12  str x4, [jssp, #-8]!
0xffff914e6290    16  ldr x3, pc+88 (addr 0x0000ffff914e62e8)    ;; object: 0x408cb5d9 Cell for 0
0xffff914e6294    20  ldur x3, [x3, #7]
0xffff914e6298    24  cmp x3, #0x0 (0)
0xffff914e629c    28  b.ne #+0x30 (addr 0xffff914e62cc)
0xffff914e62a0    32  tbz w0, #0, #+0x2c (addr 0xffff914e62cc)
0xffff914e62a4    36  ldr x5, pc+76 (addr 0x0000ffff914e62f0)    ;; object: 0x40836c01 WeakCell for 0x364364a9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e62a8    40  ldur x5, [x5, #7]
0xffff914e62ac    44  tbz w5, #0, #+0x20 (addr 0xffff914e62cc)
0xffff914e62b0    48  ldursw x4, [x5, #15]
0xffff914e62b4    52  tbnz w4, #23, #+0x18 (addr 0xffff914e62cc)
0xffff914e62b8    56  ldr x4, [jssp], #8
0xffff914e62bc    60  ldr x3, [jssp], #8
0xffff914e62c0    64  ldr x2, pc+56 (addr 0x0000ffff914e62f8)    ;; object: 0x408079a9 <String[8]: children>
0xffff914e62c4    68  ldr x16, pc+60 (addr 0x0000ffff914e6300)    ;; code: HANDLER, StoreTransitionStub, minor: 198664
0xffff914e62c8    72  br x16
0xffff914e62cc    76  ldr x2, pc+60 (addr 0x0000ffff914e6308)    ;; object: 0x408079a9 <String[8]: children>
0xffff914e62d0    80  ldr x4, [jssp], #8
0xffff914e62d4    84  ldr x3, [jssp], #8
0xffff914e62d8    88  ldr x16, pc+56 (addr 0x0000ffff914e6310)    ;; code: BUILTIN
0xffff914e62dc    92  br x16
0xffff914e62e0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914e62e4   100  d63f03e0       constant
0xffff914e62e8   104  408cb5d9       constant
0xffff914e62ec   108  00000000       constant
0xffff914e62f0   112  40836c01       constant
0xffff914e62f4   116  00000000       constant
0xffff914e62f8   120  408079a9       constant
0xffff914e62fc   124  00000000       constant
0xffff914e6300   128  914e6140       constant
0xffff914e6304   132  0000ffff       constant
0xffff914e6308   136  408079a9       constant
0xffff914e630c   140  00000000       constant
0xffff914e6310   144  91422420       constant
0xffff914e6314   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914e6290  embedded object  (0x408cb5d9 Cell for 0)
0xffff914e62a4  embedded object  (0x40836c01 WeakCell for 0x364364a9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e62c0  embedded object  (0x408079a9 <String[8]: children>)
0xffff914e62c4  code target (HANDLER)  (0xffff914e6140)
0xffff914e62cc  embedded object  (0x408079a9 <String[8]: children>)
0xffff914e62d8  code target (BUILTIN)  (0xffff91422420)
0xffff914e62e0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = load
compiler = unknown
Instructions (size = 120)
0xffff914e6380     0  sub csp, jssp, #0x8 (8)
0xffff914e6384     4  str x3, [jssp, #-8]!
0xffff914e6388     8  sub csp, jssp, #0x8 (8)
0xffff914e638c    12  str x0, [jssp, #-8]!
0xffff914e6390    16  ldr x0, pc+72 (addr 0x0000ffff914e63d8)    ;; object: 0x408cb5d9 Cell for 0
0xffff914e6394    20  ldur x0, [x0, #7]
0xffff914e6398    24  cmp x0, #0x0 (0)
0xffff914e639c    28  b.ne #+0x14 (addr 0xffff914e63b0)
0xffff914e63a0    32  ldr x3, pc+64 (addr 0x0000ffff914e63e0)    ;; object: 0x408cb7a9 WeakCell for 0x26a40649 <an Object with map 0x36435009>
0xffff914e63a4    36  ldur x3, [x3, #7]
0xffff914e63a8    40  tbz w3, #0, #+0x8 (addr 0xffff914e63b0)
0xffff914e63ac    44  b #+0x14 (addr 0xffff914e63c0)
0xffff914e63b0    48  ldr x0, [jssp], #8
0xffff914e63b4    52  ldr x3, [jssp], #8
0xffff914e63b8    56  ldr x16, pc+48 (addr 0x0000ffff914e63e8)    ;; code: BUILTIN
0xffff914e63bc    60  br x16
0xffff914e63c0    64  add jssp, jssp, #0x10 (16)
0xffff914e63c4    68  mov x1, x3
0xffff914e63c8    72  ldr x16, pc+40 (addr 0x0000ffff914e63f0)    ;; code: HANDLER, LoadConstantStub, minor: 1
0xffff914e63cc    76  br x16
0xffff914e63d0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914e63d4    84  d63f03e0       constant
0xffff914e63d8    88  408cb5d9       constant
0xffff914e63dc    92  00000000       constant
0xffff914e63e0    96  408cb7a9       constant
0xffff914e63e4   100  00000000       constant
0xffff914e63e8   104  914222e0       constant
0xffff914e63ec   108  0000ffff       constant
0xffff914e63f0   112  91443300       constant
0xffff914e63f4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914e6390  embedded object  (0x408cb5d9 Cell for 0)
0xffff914e63a0  embedded object  (0x408cb7a9 WeakCell for 0x26a40649 <an Object with map 0x36435009>)
0xffff914e63b8  code target (BUILTIN)  (0xffff914222e0)
0xffff914e63c8  code target (HANDLER)  (0xffff91443300)
0xffff914e63d0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff914e6460     0  ldur x0, [x1, #71]
0xffff914e6464     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff914e6460     0  ldur x0, [x1, #71]
0xffff914e6464     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914e64e0     0  tbz w0, #0, #+0x90 (addr 0xffff914e6570)
0xffff914e64e4     4  mov x2, x0
0xffff914e64e8     8  stur x2, [x1, #71]
0xffff914e64ec    12  add x3, x1, #0x47 (71)
0xffff914e64f0    16  and x2, x2, #0xfffffffffff00000
0xffff914e64f4    20  ldr x2, [x2, #8]
0xffff914e64f8    24  tbz w2, #1, #+0x24 (addr 0xffff914e651c)
0xffff914e64fc    28  and x2, x1, #0xfffffffffff00000
0xffff914e6500    32  ldr x2, [x2, #8]
0xffff914e6504    36  tbz w2, #2, #+0x18 (addr 0xffff914e651c)
0xffff914e6508    40  sub csp, jssp, #0x8 (8)
0xffff914e650c    44  str lr, [jssp, #-8]!
0xffff914e6510    48  ldr x16, pc+80 (addr 0x0000ffff914e6560)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914e6514    52  blr x16
0xffff914e6518    56  ldr lr, [jssp], #8
0xffff914e651c    60  stur x5, [x1, #-1]
0xffff914e6520    64  tbz w5, #0, #+0x34 (addr 0xffff914e6554)
0xffff914e6524    68  sub x2, x1, #0x1 (1)
0xffff914e6528    72  and x5, x5, #0xfffffffffff00000
0xffff914e652c    76  ldr x5, [x5, #8]
0xffff914e6530    80  tbz w5, #1, #+0x24 (addr 0xffff914e6554)
0xffff914e6534    84  and x5, x1, #0xfffffffffff00000
0xffff914e6538    88  ldr x5, [x5, #8]
0xffff914e653c    92  tbz w5, #2, #+0x18 (addr 0xffff914e6554)
0xffff914e6540    96  sub csp, jssp, #0x8 (8)
0xffff914e6544   100  str lr, [jssp, #-8]!
0xffff914e6548   104  ldr x16, pc+32 (addr 0x0000ffff914e6568)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914e654c   108  blr x16
0xffff914e6550   112  ldr lr, [jssp], #8
0xffff914e6554   116  ret
0xffff914e6558   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914e655c   124  d63f03e0       constant
0xffff914e6560   128  914170c0       constant
0xffff914e6564   132  0000ffff       constant
0xffff914e6568   136  91438080       constant
0xffff914e656c   140  0000ffff       constant
0xffff914e6570   144  movz x16, #0x0
0xffff914e6574   148  sub csp, jssp, #0x10 (16)
0xffff914e6578   152  stp fp, lr, [jssp, #-16]!
0xffff914e657c   156  bl #+0x4 (addr 0xffff914e6580)
0xffff914e6580   160  movz x17, #0xa00000000
0xffff914e6584   164  sub csp, jssp, #0x10 (16)
0xffff914e6588   168  stp x17, cp, [jssp, #-16]!
0xffff914e658c   172  add fp, jssp, #0x10 (16)
0xffff914e6590   176  ldr x17, pc+24 (addr 0x0000ffff914e65a8)    ;; lazy deoptimization bailout 0
0xffff914e6594   180  add x17, x17, x16
0xffff914e6598   184  br x17
0xffff914e659c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914e65a0   192  d63f03e0       constant
0xffff914e65a4   196  d503201f       constant
0xffff914e65a8   200  91206000       constant
0xffff914e65ac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914e6510  code target (STUB)  (0xffff914170c0)
0xffff914e6548  code target (STUB)  (0xffff91438080)
0xffff914e6558  constant pool (size 24)
0xffff914e6590  runtime entry
0xffff914e659c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914e64e0     0  tbz w0, #0, #+0x90 (addr 0xffff914e6570)
0xffff914e64e4     4  mov x2, x0
0xffff914e64e8     8  stur x2, [x1, #71]
0xffff914e64ec    12  add x3, x1, #0x47 (71)
0xffff914e64f0    16  and x2, x2, #0xfffffffffff00000
0xffff914e64f4    20  ldr x2, [x2, #8]
0xffff914e64f8    24  tbz w2, #1, #+0x24 (addr 0xffff914e651c)
0xffff914e64fc    28  and x2, x1, #0xfffffffffff00000
0xffff914e6500    32  ldr x2, [x2, #8]
0xffff914e6504    36  tbz w2, #2, #+0x18 (addr 0xffff914e651c)
0xffff914e6508    40  sub csp, jssp, #0x8 (8)
0xffff914e650c    44  str lr, [jssp, #-8]!
0xffff914e6510    48  ldr x16, pc+80 (addr 0x0000ffff914e6560)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914e6514    52  blr x16
0xffff914e6518    56  ldr lr, [jssp], #8
0xffff914e651c    60  stur x5, [x1, #-1]
0xffff914e6520    64  tbz w5, #0, #+0x34 (addr 0xffff914e6554)
0xffff914e6524    68  sub x2, x1, #0x1 (1)
0xffff914e6528    72  and x5, x5, #0xfffffffffff00000
0xffff914e652c    76  ldr x5, [x5, #8]
0xffff914e6530    80  tbz w5, #1, #+0x24 (addr 0xffff914e6554)
0xffff914e6534    84  and x5, x1, #0xfffffffffff00000
0xffff914e6538    88  ldr x5, [x5, #8]
0xffff914e653c    92  tbz w5, #2, #+0x18 (addr 0xffff914e6554)
0xffff914e6540    96  sub csp, jssp, #0x8 (8)
0xffff914e6544   100  str lr, [jssp, #-8]!
0xffff914e6548   104  ldr x16, pc+32 (addr 0x0000ffff914e6568)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914e654c   108  blr x16
0xffff914e6550   112  ldr lr, [jssp], #8
0xffff914e6554   116  ret
0xffff914e6558   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914e655c   124  d63f03e0       constant
0xffff914e6560   128  914170c0       constant
0xffff914e6564   132  0000ffff       constant
0xffff914e6568   136  91438080       constant
0xffff914e656c   140  0000ffff       constant
0xffff914e6570   144  movz x16, #0x0
0xffff914e6574   148  sub csp, jssp, #0x10 (16)
0xffff914e6578   152  stp fp, lr, [jssp, #-16]!
0xffff914e657c   156  bl #+0x4 (addr 0xffff914e6580)
0xffff914e6580   160  movz x17, #0xa00000000
0xffff914e6584   164  sub csp, jssp, #0x10 (16)
0xffff914e6588   168  stp x17, cp, [jssp, #-16]!
0xffff914e658c   172  add fp, jssp, #0x10 (16)
0xffff914e6590   176  ldr x17, pc+24 (addr 0x0000ffff914e65a8)    ;; lazy deoptimization bailout 0
0xffff914e6594   180  add x17, x17, x16
0xffff914e6598   184  br x17
0xffff914e659c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914e65a0   192  d63f03e0       constant
0xffff914e65a4   196  d503201f       constant
0xffff914e65a8   200  91206000       constant
0xffff914e65ac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914e6510  code target (STUB)  (0xffff914170c0)
0xffff914e6548  code target (STUB)  (0xffff91438080)
0xffff914e6558  constant pool (size 24)
0xffff914e6590  runtime entry
0xffff914e659c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = paths
compiler = unknown
Instructions (size = 152)
0xffff914e6620     0  sub csp, jssp, #0x8 (8)
0xffff914e6624     4  str x3, [jssp, #-8]!
0xffff914e6628     8  sub csp, jssp, #0x8 (8)
0xffff914e662c    12  str x4, [jssp, #-8]!
0xffff914e6630    16  ldr x3, pc+88 (addr 0x0000ffff914e6688)    ;; object: 0x408cb5d9 Cell for 0
0xffff914e6634    20  ldur x3, [x3, #7]
0xffff914e6638    24  cmp x3, #0x0 (0)
0xffff914e663c    28  b.ne #+0x30 (addr 0xffff914e666c)
0xffff914e6640    32  tbz w0, #0, #+0x2c (addr 0xffff914e666c)
0xffff914e6644    36  ldr x5, pc+76 (addr 0x0000ffff914e6690)    ;; object: 0x408c5369 WeakCell for 0x36436559 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e6648    40  ldur x5, [x5, #7]
0xffff914e664c    44  tbz w5, #0, #+0x20 (addr 0xffff914e666c)
0xffff914e6650    48  ldursw x4, [x5, #15]
0xffff914e6654    52  tbnz w4, #23, #+0x18 (addr 0xffff914e666c)
0xffff914e6658    56  ldr x4, [jssp], #8
0xffff914e665c    60  ldr x3, [jssp], #8
0xffff914e6660    64  ldr x2, pc+56 (addr 0x0000ffff914e6698)    ;; object: 0x49bba4c1 <String[5]: paths>
0xffff914e6664    68  ldr x16, pc+60 (addr 0x0000ffff914e66a0)    ;; code: HANDLER, StoreTransitionStub, minor: 198665
0xffff914e6668    72  br x16
0xffff914e666c    76  ldr x2, pc+60 (addr 0x0000ffff914e66a8)    ;; object: 0x49bba4c1 <String[5]: paths>
0xffff914e6670    80  ldr x4, [jssp], #8
0xffff914e6674    84  ldr x3, [jssp], #8
0xffff914e6678    88  ldr x16, pc+56 (addr 0x0000ffff914e66b0)    ;; code: BUILTIN
0xffff914e667c    92  br x16
0xffff914e6680    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914e6684   100  d63f03e0       constant
0xffff914e6688   104  408cb5d9       constant
0xffff914e668c   108  00000000       constant
0xffff914e6690   112  408c5369       constant
0xffff914e6694   116  00000000       constant
0xffff914e6698   120  49bba4c1       constant
0xffff914e669c   124  00000000       constant
0xffff914e66a0   128  914e64e0       constant
0xffff914e66a4   132  0000ffff       constant
0xffff914e66a8   136  49bba4c1       constant
0xffff914e66ac   140  00000000       constant
0xffff914e66b0   144  91422420       constant
0xffff914e66b4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914e6630  embedded object  (0x408cb5d9 Cell for 0)
0xffff914e6644  embedded object  (0x408c5369 WeakCell for 0x36436559 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e6660  embedded object  (0x49bba4c1 <String[5]: paths>)
0xffff914e6664  code target (HANDLER)  (0xffff914e64e0)
0xffff914e666c  embedded object  (0x49bba4c1 <String[5]: paths>)
0xffff914e6678  code target (BUILTIN)  (0xffff91422420)
0xffff914e6680  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff914e6720     0  ldur x0, [x1, #87]
0xffff914e6724     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff914e6720     0  ldur x0, [x1, #87]
0xffff914e6724     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914e67a0     0  ldur x0, [x1, #-1]
0xffff914e67a4     4  ldur x0, [x0, #47]
0xffff914e67a8     8  movz x16, #0x1af
0xffff914e67ac    12  ldr x0, [x0, x16]
0xffff914e67b0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914e67a0     0  ldur x0, [x1, #-1]
0xffff914e67a4     4  ldur x0, [x0, #47]
0xffff914e67a8     8  movz x16, #0x1af
0xffff914e67ac    12  ldr x0, [x0, x16]
0xffff914e67b0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = isFile
compiler = unknown
Instructions (size = 120)
0xffff914e6820     0  sub csp, jssp, #0x8 (8)
0xffff914e6824     4  str x3, [jssp, #-8]!
0xffff914e6828     8  sub csp, jssp, #0x8 (8)
0xffff914e682c    12  str x0, [jssp, #-8]!
0xffff914e6830    16  ldr x0, pc+72 (addr 0x0000ffff914e6878)    ;; object: 0x408353d1 Cell for 0
0xffff914e6834    20  ldur x0, [x0, #7]
0xffff914e6838    24  cmp x0, #0x0 (0)
0xffff914e683c    28  b.ne #+0x14 (addr 0xffff914e6850)
0xffff914e6840    32  ldr x3, pc+64 (addr 0x0000ffff914e6880)    ;; object: 0x408cb949 WeakCell for 0x26a3b061 <an Object with map 0x364320f1>
0xffff914e6844    36  ldur x3, [x3, #7]
0xffff914e6848    40  tbz w3, #0, #+0x8 (addr 0xffff914e6850)
0xffff914e684c    44  b #+0x14 (addr 0xffff914e6860)
0xffff914e6850    48  ldr x0, [jssp], #8
0xffff914e6854    52  ldr x3, [jssp], #8
0xffff914e6858    56  ldr x16, pc+48 (addr 0x0000ffff914e6888)    ;; code: BUILTIN
0xffff914e685c    60  br x16
0xffff914e6860    64  add jssp, jssp, #0x10 (16)
0xffff914e6864    68  mov x1, x3
0xffff914e6868    72  ldr x16, pc+40 (addr 0x0000ffff914e6890)    ;; code: HANDLER, LoadConstantStub, minor: 3
0xffff914e686c    76  br x16
0xffff914e6870    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914e6874    84  d63f03e0       constant
0xffff914e6878    88  408353d1       constant
0xffff914e687c    92  00000000       constant
0xffff914e6880    96  408cb949       constant
0xffff914e6884   100  00000000       constant
0xffff914e6888   104  914222e0       constant
0xffff914e688c   108  0000ffff       constant
0xffff914e6890   112  91443400       constant
0xffff914e6894   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914e6830  embedded object  (0x408353d1 Cell for 0)
0xffff914e6840  embedded object  (0x408cb949 WeakCell for 0x26a3b061 <an Object with map 0x364320f1>)
0xffff914e6858  code target (BUILTIN)  (0xffff914222e0)
0xffff914e6868  code target (HANDLER)  (0xffff91443400)
0xffff914e6870  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 197)
0xffff914e6900     0  ldur d0, [x1, #87]
0xffff914e6904     4  movz x1, #0xf2c0
0xffff914e6908     8  movk x1, #0x4117, lsl #16
0xffff914e690c    12  ldp x2, x0, [x1]
0xffff914e6910    16  adds x16, x2, #0x10 (16)
0xffff914e6914    20  ccmp x16, x0, #nzCv, lo
0xffff914e6918    24  b.hi #+0x20 (addr 0xffff914e6938)
0xffff914e691c    28  str x16, [x1]
0xffff914e6920    32  ldr x1, [x26, #120]
0xffff914e6924    36  str x1, [x2]
0xffff914e6928    40  orr x2, x2, #0x1
0xffff914e692c    44  stur d0, [x2, #7]
0xffff914e6930    48  mov x0, x2
0xffff914e6934    52  ret
0xffff914e6938    56  sub csp, jssp, #0x10 (16)
0xffff914e693c    60  stp fp, lr, [jssp, #-16]!
0xffff914e6940    64  movz fp, #0xa00000000
0xffff914e6944    68  sub csp, jssp, #0x8 (8)
0xffff914e6948    72  str fp, [jssp, #-8]!
0xffff914e694c    76  add fp, jssp, #0x8 (8)
0xffff914e6950    80  movz x2, #0x0
0xffff914e6954    84  mov x16, lr
0xffff914e6958    88  ldr x17, pc+64 (addr 0x0000ffff914e6998)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914e695c    92  blr x17
0xffff914e6960    96  ldur cp, [fp, #-8]
0xffff914e6964   100  movz x0, #0x0
0xffff914e6968   104  movz x1, #0x4b48
0xffff914e696c   108  movk x1, #0xe4, lsl #16
0xffff914e6970   112  ldr x16, pc+48 (addr 0x0000ffff914e69a0)    ;; code: STUB, CEntryStub, minor: 5
0xffff914e6974   116  blr x16
0xffff914e6978   120  str x0, [jssp, #16]
0xffff914e697c   124  ldr x16, pc+44 (addr 0x0000ffff914e69a8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914e6980   128  blr x16
0xffff914e6984   132  ldr lr, [jssp, #16]
0xffff914e6988   136  ldp xzr, fp, [jssp], #24
0xffff914e698c   140  b #-0x60 (addr 0xffff914e692c)
0xffff914e6990   144  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914e6994   148  d63f03e0       constant
0xffff914e6998   152  91406820       constant
0xffff914e699c   156  0000ffff       constant
0xffff914e69a0   160  91406260       constant
0xffff914e69a4   164  0000ffff       constant
0xffff914e69a8   168  914068e0       constant
0xffff914e69ac   172  0000ffff       constant


Safepoints (size = 21)
0xffff914e6978   120  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 11)
0xffff914e6958  code target (STUB)  (0xffff91406820)
0xffff914e6970  code target (STUB)  (0xffff91406260)
0xffff914e697c  code target (STUB)  (0xffff914068e0)
0xffff914e6990  constant pool (size 32)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 197)
0xffff914e6900     0  ldur d0, [x1, #87]
0xffff914e6904     4  movz x1, #0xf2c0
0xffff914e6908     8  movk x1, #0x4117, lsl #16
0xffff914e690c    12  ldp x2, x0, [x1]
0xffff914e6910    16  adds x16, x2, #0x10 (16)
0xffff914e6914    20  ccmp x16, x0, #nzCv, lo
0xffff914e6918    24  b.hi #+0x20 (addr 0xffff914e6938)
0xffff914e691c    28  str x16, [x1]
0xffff914e6920    32  ldr x1, [x26, #120]
0xffff914e6924    36  str x1, [x2]
0xffff914e6928    40  orr x2, x2, #0x1
0xffff914e692c    44  stur d0, [x2, #7]
0xffff914e6930    48  mov x0, x2
0xffff914e6934    52  ret
0xffff914e6938    56  sub csp, jssp, #0x10 (16)
0xffff914e693c    60  stp fp, lr, [jssp, #-16]!
0xffff914e6940    64  movz fp, #0xa00000000
0xffff914e6944    68  sub csp, jssp, #0x8 (8)
0xffff914e6948    72  str fp, [jssp, #-8]!
0xffff914e694c    76  add fp, jssp, #0x8 (8)
0xffff914e6950    80  movz x2, #0x0
0xffff914e6954    84  mov x16, lr
0xffff914e6958    88  ldr x17, pc+64 (addr 0x0000ffff914e6998)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914e695c    92  blr x17
0xffff914e6960    96  ldur cp, [fp, #-8]
0xffff914e6964   100  movz x0, #0x0
0xffff914e6968   104  movz x1, #0x4b48
0xffff914e696c   108  movk x1, #0xe4, lsl #16
0xffff914e6970   112  ldr x16, pc+48 (addr 0x0000ffff914e69a0)    ;; code: STUB, CEntryStub, minor: 5
0xffff914e6974   116  blr x16
0xffff914e6978   120  str x0, [jssp, #16]
0xffff914e697c   124  ldr x16, pc+44 (addr 0x0000ffff914e69a8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914e6980   128  blr x16
0xffff914e6984   132  ldr lr, [jssp, #16]
0xffff914e6988   136  ldp xzr, fp, [jssp], #24
0xffff914e698c   140  b #-0x60 (addr 0xffff914e692c)
0xffff914e6990   144  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914e6994   148  d63f03e0       constant
0xffff914e6998   152  91406820       constant
0xffff914e699c   156  0000ffff       constant
0xffff914e69a0   160  91406260       constant
0xffff914e69a4   164  0000ffff       constant
0xffff914e69a8   168  914068e0       constant
0xffff914e69ac   172  0000ffff       constant


Safepoints (size = 21)
0xffff914e6978   120  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 11)
0xffff914e6958  code target (STUB)  (0xffff91406820)
0xffff914e6970  code target (STUB)  (0xffff91406260)
0xffff914e697c  code target (STUB)  (0xffff914068e0)
0xffff914e6990  constant pool (size 32)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914e6a40     0  ldur x0, [x1, #-1]
0xffff914e6a44     4  ldur x0, [x0, #47]
0xffff914e6a48     8  movz x16, #0x2b7
0xffff914e6a4c    12  ldr x0, [x0, x16]
0xffff914e6a50    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914e6a40     0  ldur x0, [x1, #-1]
0xffff914e6a44     4  ldur x0, [x0, #47]
0xffff914e6a48     8  movz x16, #0x2b7
0xffff914e6a4c    12  ldr x0, [x0, x16]
0xffff914e6a50    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = slice
compiler = unknown
Instructions (size = 120)
0xffff914e6ac0     0  sub csp, jssp, #0x8 (8)
0xffff914e6ac4     4  str x3, [jssp, #-8]!
0xffff914e6ac8     8  sub csp, jssp, #0x8 (8)
0xffff914e6acc    12  str x0, [jssp, #-8]!
0xffff914e6ad0    16  ldr x0, pc+72 (addr 0x0000ffff914e6b18)    ;; object: 0x408cba61 Cell for 0
0xffff914e6ad4    20  ldur x0, [x0, #7]
0xffff914e6ad8    24  cmp x0, #0x0 (0)
0xffff914e6adc    28  b.ne #+0x14 (addr 0xffff914e6af0)
0xffff914e6ae0    32  ldr x3, pc+64 (addr 0x0000ffff914e6b20)    ;; object: 0x408cba71 WeakCell for 0x40840bf9 <a FastBuffer with map 0x36422341>
0xffff914e6ae4    36  ldur x3, [x3, #7]
0xffff914e6ae8    40  tbz w3, #0, #+0x8 (addr 0xffff914e6af0)
0xffff914e6aec    44  b #+0x14 (addr 0xffff914e6b00)
0xffff914e6af0    48  ldr x0, [jssp], #8
0xffff914e6af4    52  ldr x3, [jssp], #8
0xffff914e6af8    56  ldr x16, pc+48 (addr 0x0000ffff914e6b28)    ;; code: BUILTIN
0xffff914e6afc    60  br x16
0xffff914e6b00    64  add jssp, jssp, #0x10 (16)
0xffff914e6b04    68  mov x1, x3
0xffff914e6b08    72  ldr x16, pc+40 (addr 0x0000ffff914e6b30)    ;; code: HANDLER, LoadConstantStub, minor: 27
0xffff914e6b0c    76  br x16
0xffff914e6b10    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914e6b14    84  d63f03e0       constant
0xffff914e6b18    88  408cba61       constant
0xffff914e6b1c    92  00000000       constant
0xffff914e6b20    96  408cba71       constant
0xffff914e6b24   100  00000000       constant
0xffff914e6b28   104  914222e0       constant
0xffff914e6b2c   108  0000ffff       constant
0xffff914e6b30   112  914e6a40       constant
0xffff914e6b34   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914e6ad0  embedded object  (0x408cba61 Cell for 0)
0xffff914e6ae0  embedded object  (0x408cba71 WeakCell for 0x40840bf9 <a FastBuffer with map 0x36422341>)
0xffff914e6af8  code target (BUILTIN)  (0xffff914222e0)
0xffff914e6b08  code target (HANDLER)  (0xffff914e6a40)
0xffff914e6b10  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = length
compiler = unknown
Instructions (size = 216)
0xffff914e6ba0     0  sub csp, jssp, #0x8 (8)
0xffff914e6ba4     4  str x3, [jssp, #-8]!
0xffff914e6ba8     8  sub csp, jssp, #0x8 (8)
0xffff914e6bac    12  str x0, [jssp, #-8]!
0xffff914e6bb0    16  ldr x0, pc+160 (addr 0x0000ffff914e6c50)    ;; object: 0x408cba61 Cell for 0
0xffff914e6bb4    20  ldur x0, [x0, #7]
0xffff914e6bb8    24  cmp x0, #0x0 (0)
0xffff914e6bbc    28  b.ne #+0x14 (addr 0xffff914e6bd0)
0xffff914e6bc0    32  ldr x3, pc+152 (addr 0x0000ffff914e6c58)    ;; object: 0x408cbae9 WeakCell for 0x408a7121 <an Object with map 0x36414111>
0xffff914e6bc4    36  ldur x3, [x3, #7]
0xffff914e6bc8    40  tbz w3, #0, #+0x8 (addr 0xffff914e6bd0)
0xffff914e6bcc    44  b #+0x14 (addr 0xffff914e6be0)
0xffff914e6bd0    48  ldr x0, [jssp], #8
0xffff914e6bd4    52  ldr x3, [jssp], #8
0xffff914e6bd8    56  ldr x16, pc+136 (addr 0x0000ffff914e6c60)    ;; code: BUILTIN
0xffff914e6bdc    60  br x16
0xffff914e6be0    64  add jssp, jssp, #0x10 (16)
0xffff914e6be4    68  movz x16, #0xc00000000
0xffff914e6be8    72  sub csp, jssp, #0x10 (16)
0xffff914e6bec    76  stp fp, lr, [jssp, #-16]!
0xffff914e6bf0    80  sub csp, jssp, #0x10 (16)
0xffff914e6bf4    84  str x16, [jssp, #-8]!
0xffff914e6bf8    88  ldr x17, pc+112 (addr 0x0000ffff914e6c68)    ;; object: 0xffff914e6b41 <Code: HANDLER>
0xffff914e6bfc    92  sub csp, jssp, #0x10 (16)
0xffff914e6c00    96  str x17, [jssp, #-8]!
0xffff914e6c04   100  add fp, jssp, #0x10 (16)
0xffff914e6c08   104  sub csp, jssp, #0x8 (8)
0xffff914e6c0c   108  str cp, [jssp, #-8]!
0xffff914e6c10   112  sub csp, jssp, #0x8 (8)
0xffff914e6c14   116  str x1, [jssp, #-8]!
0xffff914e6c18   120  ldur x1, [x3, #-1]
0xffff914e6c1c   124  ldur x1, [x1, #47]
0xffff914e6c20   128  ldur x1, [x1, #143]
0xffff914e6c24   132  ldur x1, [x1, #7]
0xffff914e6c28   136  movz x0, #0x0
0xffff914e6c2c   140  ldr x16, pc+68 (addr 0x0000ffff914e6c70)    ;; code: BUILTIN
0xffff914e6c30   144  blr x16
0xffff914e6c34   148  ldr cp, [jssp], #8
0xffff914e6c38   152  mov jssp, fp
0xffff914e6c3c   156  ldp fp, lr, [jssp], #16
0xffff914e6c40   160  ret
0xffff914e6c44   164  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff914e6c48   168  d63f03e0       constant
0xffff914e6c4c   172  d503201f       constant
0xffff914e6c50   176  408cba61       constant
0xffff914e6c54   180  00000000       constant
0xffff914e6c58   184  408cbae9       constant
0xffff914e6c5c   188  00000000       constant
0xffff914e6c60   192  914222e0       constant
0xffff914e6c64   196  0000ffff       constant
0xffff914e6c68   200  914e6b41       constant
0xffff914e6c6c   204  0000ffff       constant
0xffff914e6c70   208  9141e600       constant
0xffff914e6c74   212  0000ffff       constant


RelocInfo (size = 11)
0xffff914e6bb0  embedded object  (0x408cba61 Cell for 0)
0xffff914e6bc0  embedded object  (0x408cbae9 WeakCell for 0x408a7121 <an Object with map 0x36414111>)
0xffff914e6bd8  code target (BUILTIN)  (0xffff914222e0)
0xffff914e6bf8  embedded object  (0xffff914e6b41 <Code: HANDLER>)
0xffff914e6c2c  code target (BUILTIN)  (0xffff9141e600)
0xffff914e6c44  constant pool (size 52)

kind = HANDLER
major_key = <NoCache>Stub
name = Number
compiler = unknown
Instructions (size = 120)
0xffff914e6ce0     0  sub csp, jssp, #0x8 (8)
0xffff914e6ce4     4  str x3, [jssp, #-8]!
0xffff914e6ce8     8  sub csp, jssp, #0x8 (8)
0xffff914e6cec    12  str x0, [jssp, #-8]!
0xffff914e6cf0    16  ldr x0, pc+80 (addr 0x0000ffff914e6d40)    ;; object: 0x49bc5d51 Cell for 0
0xffff914e6cf4    20  ldur x0, [x0, #7]
0xffff914e6cf8    24  cmp x0, #0x0 (0)
0xffff914e6cfc    28  b.ne #+0x2c (addr 0xffff914e6d28)
0xffff914e6d00    32  ldr x0, pc+72 (addr 0x0000ffff914e6d48)    ;; object: 0x408cbb21 WeakCell for 0x49b423d9 PropertyCell for 0x49b42371 <JS Function Number (SharedFunctionInfo 0x49b422c9)>
0xffff914e6d04    36  ldur x0, [x0, #7]
0xffff914e6d08    40  tbz w0, #0, #+0x20 (addr 0xffff914e6d28)
0xffff914e6d0c    44  ldur x0, [x0, #15]
0xffff914e6d10    48  ldr x16, [x26, #88]
0xffff914e6d14    52  cmp x0, x16
0xffff914e6d18    56  b.eq #+0x10 (addr 0xffff914e6d28)
0xffff914e6d1c    60  add jssp, jssp, #0x10 (16)
0xffff914e6d20    64  ret
0xffff914e6d24    68  b #+0x14 (addr 0xffff914e6d38)
0xffff914e6d28    72  ldr x0, [jssp], #8
0xffff914e6d2c    76  ldr x3, [jssp], #8
0xffff914e6d30    80  ldr x16, pc+32 (addr 0x0000ffff914e6d50)    ;; code: BUILTIN
0xffff914e6d34    84  br x16
0xffff914e6d38    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914e6d3c    92  d63f03e0       constant
0xffff914e6d40    96  49bc5d51       constant
0xffff914e6d44   100  00000000       constant
0xffff914e6d48   104  408cbb21       constant
0xffff914e6d4c   108  00000000       constant
0xffff914e6d50   112  914222e0       constant
0xffff914e6d54   116  0000ffff       constant


RelocInfo (size = 9)
0xffff914e6cf0  embedded object  (0x49bc5d51 Cell for 0)
0xffff914e6d00  embedded object  (0x408cbb21 WeakCell for 0x49b423d9 PropertyCell for 0x49b42371 <JS Function Number (SharedFunctionInfo 0x49b422c9)>)
0xffff914e6d30  code target (BUILTIN)  (0xffff914222e0)
0xffff914e6d38  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = buffer
compiler = unknown
Instructions (size = 216)
0xffff914e6dc0     0  sub csp, jssp, #0x8 (8)
0xffff914e6dc4     4  str x3, [jssp, #-8]!
0xffff914e6dc8     8  sub csp, jssp, #0x8 (8)
0xffff914e6dcc    12  str x0, [jssp, #-8]!
0xffff914e6dd0    16  ldr x0, pc+160 (addr 0x0000ffff914e6e70)    ;; object: 0x408cba61 Cell for 0
0xffff914e6dd4    20  ldur x0, [x0, #7]
0xffff914e6dd8    24  cmp x0, #0x0 (0)
0xffff914e6ddc    28  b.ne #+0x14 (addr 0xffff914e6df0)
0xffff914e6de0    32  ldr x3, pc+152 (addr 0x0000ffff914e6e78)    ;; object: 0x408cbb89 WeakCell for 0x408a7121 <an Object with map 0x36414111>
0xffff914e6de4    36  ldur x3, [x3, #7]
0xffff914e6de8    40  tbz w3, #0, #+0x8 (addr 0xffff914e6df0)
0xffff914e6dec    44  b #+0x14 (addr 0xffff914e6e00)
0xffff914e6df0    48  ldr x0, [jssp], #8
0xffff914e6df4    52  ldr x3, [jssp], #8
0xffff914e6df8    56  ldr x16, pc+136 (addr 0x0000ffff914e6e80)    ;; code: BUILTIN
0xffff914e6dfc    60  br x16
0xffff914e6e00    64  add jssp, jssp, #0x10 (16)
0xffff914e6e04    68  movz x16, #0xc00000000
0xffff914e6e08    72  sub csp, jssp, #0x10 (16)
0xffff914e6e0c    76  stp fp, lr, [jssp, #-16]!
0xffff914e6e10    80  sub csp, jssp, #0x10 (16)
0xffff914e6e14    84  str x16, [jssp, #-8]!
0xffff914e6e18    88  ldr x17, pc+112 (addr 0x0000ffff914e6e88)    ;; object: 0xffff914e6d61 <Code: HANDLER>
0xffff914e6e1c    92  sub csp, jssp, #0x10 (16)
0xffff914e6e20    96  str x17, [jssp, #-8]!
0xffff914e6e24   100  add fp, jssp, #0x10 (16)
0xffff914e6e28   104  sub csp, jssp, #0x8 (8)
0xffff914e6e2c   108  str cp, [jssp, #-8]!
0xffff914e6e30   112  sub csp, jssp, #0x8 (8)
0xffff914e6e34   116  str x1, [jssp, #-8]!
0xffff914e6e38   120  ldur x1, [x3, #-1]
0xffff914e6e3c   124  ldur x1, [x1, #47]
0xffff914e6e40   128  ldur x1, [x1, #71]
0xffff914e6e44   132  ldur x1, [x1, #7]
0xffff914e6e48   136  movz x0, #0x0
0xffff914e6e4c   140  ldr x16, pc+68 (addr 0x0000ffff914e6e90)    ;; code: BUILTIN
0xffff914e6e50   144  blr x16
0xffff914e6e54   148  ldr cp, [jssp], #8
0xffff914e6e58   152  mov jssp, fp
0xffff914e6e5c   156  ldp fp, lr, [jssp], #16
0xffff914e6e60   160  ret
0xffff914e6e64   164  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff914e6e68   168  d63f03e0       constant
0xffff914e6e6c   172  d503201f       constant
0xffff914e6e70   176  408cba61       constant
0xffff914e6e74   180  00000000       constant
0xffff914e6e78   184  408cbb89       constant
0xffff914e6e7c   188  00000000       constant
0xffff914e6e80   192  914222e0       constant
0xffff914e6e84   196  0000ffff       constant
0xffff914e6e88   200  914e6d61       constant
0xffff914e6e8c   204  0000ffff       constant
0xffff914e6e90   208  9141e600       constant
0xffff914e6e94   212  0000ffff       constant


RelocInfo (size = 11)
0xffff914e6dd0  embedded object  (0x408cba61 Cell for 0)
0xffff914e6de0  embedded object  (0x408cbb89 WeakCell for 0x408a7121 <an Object with map 0x36414111>)
0xffff914e6df8  code target (BUILTIN)  (0xffff914222e0)
0xffff914e6e18  embedded object  (0xffff914e6d61 <Code: HANDLER>)
0xffff914e6e4c  code target (BUILTIN)  (0xffff9141e600)
0xffff914e6e64  constant pool (size 52)

kind = HANDLER
major_key = <NoCache>Stub
name = byteOffset
compiler = unknown
Instructions (size = 216)
0xffff914e6f00     0  sub csp, jssp, #0x8 (8)
0xffff914e6f04     4  str x3, [jssp, #-8]!
0xffff914e6f08     8  sub csp, jssp, #0x8 (8)
0xffff914e6f0c    12  str x0, [jssp, #-8]!
0xffff914e6f10    16  ldr x0, pc+160 (addr 0x0000ffff914e6fb0)    ;; object: 0x408cba61 Cell for 0
0xffff914e6f14    20  ldur x0, [x0, #7]
0xffff914e6f18    24  cmp x0, #0x0 (0)
0xffff914e6f1c    28  b.ne #+0x14 (addr 0xffff914e6f30)
0xffff914e6f20    32  ldr x3, pc+152 (addr 0x0000ffff914e6fb8)    ;; object: 0x408cbbc1 WeakCell for 0x408a7121 <an Object with map 0x36414111>
0xffff914e6f24    36  ldur x3, [x3, #7]
0xffff914e6f28    40  tbz w3, #0, #+0x8 (addr 0xffff914e6f30)
0xffff914e6f2c    44  b #+0x14 (addr 0xffff914e6f40)
0xffff914e6f30    48  ldr x0, [jssp], #8
0xffff914e6f34    52  ldr x3, [jssp], #8
0xffff914e6f38    56  ldr x16, pc+136 (addr 0x0000ffff914e6fc0)    ;; code: BUILTIN
0xffff914e6f3c    60  br x16
0xffff914e6f40    64  add jssp, jssp, #0x10 (16)
0xffff914e6f44    68  movz x16, #0xc00000000
0xffff914e6f48    72  sub csp, jssp, #0x10 (16)
0xffff914e6f4c    76  stp fp, lr, [jssp, #-16]!
0xffff914e6f50    80  sub csp, jssp, #0x10 (16)
0xffff914e6f54    84  str x16, [jssp, #-8]!
0xffff914e6f58    88  ldr x17, pc+112 (addr 0x0000ffff914e6fc8)    ;; object: 0xffff914e6ea1 <Code: HANDLER>
0xffff914e6f5c    92  sub csp, jssp, #0x10 (16)
0xffff914e6f60    96  str x17, [jssp, #-8]!
0xffff914e6f64   100  add fp, jssp, #0x10 (16)
0xffff914e6f68   104  sub csp, jssp, #0x8 (8)
0xffff914e6f6c   108  str cp, [jssp, #-8]!
0xffff914e6f70   112  sub csp, jssp, #0x8 (8)
0xffff914e6f74   116  str x1, [jssp, #-8]!
0xffff914e6f78   120  ldur x1, [x3, #-1]
0xffff914e6f7c   124  ldur x1, [x1, #47]
0xffff914e6f80   128  ldur x1, [x1, #95]
0xffff914e6f84   132  ldur x1, [x1, #7]
0xffff914e6f88   136  movz x0, #0x0
0xffff914e6f8c   140  ldr x16, pc+68 (addr 0x0000ffff914e6fd0)    ;; code: BUILTIN
0xffff914e6f90   144  blr x16
0xffff914e6f94   148  ldr cp, [jssp], #8
0xffff914e6f98   152  mov jssp, fp
0xffff914e6f9c   156  ldp fp, lr, [jssp], #16
0xffff914e6fa0   160  ret
0xffff914e6fa4   164  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff914e6fa8   168  d63f03e0       constant
0xffff914e6fac   172  d503201f       constant
0xffff914e6fb0   176  408cba61       constant
0xffff914e6fb4   180  00000000       constant
0xffff914e6fb8   184  408cbbc1       constant
0xffff914e6fbc   188  00000000       constant
0xffff914e6fc0   192  914222e0       constant
0xffff914e6fc4   196  0000ffff       constant
0xffff914e6fc8   200  914e6ea1       constant
0xffff914e6fcc   204  0000ffff       constant
0xffff914e6fd0   208  9141e600       constant
0xffff914e6fd4   212  0000ffff       constant


RelocInfo (size = 11)
0xffff914e6f10  embedded object  (0x408cba61 Cell for 0)
0xffff914e6f20  embedded object  (0x408cbbc1 WeakCell for 0x408a7121 <an Object with map 0x36414111>)
0xffff914e6f38  code target (BUILTIN)  (0xffff914222e0)
0xffff914e6f58  embedded object  (0xffff914e6ea1 <Code: HANDLER>)
0xffff914e6f8c  code target (BUILTIN)  (0xffff9141e600)
0xffff914e6fa4  constant pool (size 52)

kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 120)
0xffff914e7040     0  sub csp, jssp, #0x8 (8)
0xffff914e7044     4  str x3, [jssp, #-8]!
0xffff914e7048     8  sub csp, jssp, #0x8 (8)
0xffff914e704c    12  str x0, [jssp, #-8]!
0xffff914e7050    16  ldr x0, pc+72 (addr 0x0000ffff914e7098)    ;; object: 0x408cbc79 Cell for 0
0xffff914e7054    20  ldur x0, [x0, #7]
0xffff914e7058    24  cmp x0, #0x0 (0)
0xffff914e705c    28  b.ne #+0x14 (addr 0xffff914e7070)
0xffff914e7060    32  ldr x3, pc+64 (addr 0x0000ffff914e70a0)    ;; object: 0x408cbc89 WeakCell for 0x49b40019 <JS Function (SharedFunctionInfo 0x49b3ff71)>
0xffff914e7064    36  ldur x3, [x3, #7]
0xffff914e7068    40  tbz w3, #0, #+0x8 (addr 0xffff914e7070)
0xffff914e706c    44  b #+0x14 (addr 0xffff914e7080)
0xffff914e7070    48  ldr x0, [jssp], #8
0xffff914e7074    52  ldr x3, [jssp], #8
0xffff914e7078    56  ldr x16, pc+48 (addr 0x0000ffff914e70a8)    ;; code: BUILTIN
0xffff914e707c    60  br x16
0xffff914e7080    64  add jssp, jssp, #0x10 (16)
0xffff914e7084    68  mov x1, x3
0xffff914e7088    72  ldr x16, pc+40 (addr 0x0000ffff914e70b0)    ;; code: HANDLER, LoadConstantStub, minor: 8
0xffff914e708c    76  br x16
0xffff914e7090    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914e7094    84  d63f03e0       constant
0xffff914e7098    88  408cbc79       constant
0xffff914e709c    92  00000000       constant
0xffff914e70a0    96  408cbc89       constant
0xffff914e70a4   100  00000000       constant
0xffff914e70a8   104  914222e0       constant
0xffff914e70ac   108  0000ffff       constant
0xffff914e70b0   112  9144c160       constant
0xffff914e70b4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914e7050  embedded object  (0x408cbc79 Cell for 0)
0xffff914e7060  embedded object  (0x408cbc89 WeakCell for 0x49b40019 <JS Function (SharedFunctionInfo 0x49b3ff71)>)
0xffff914e7078  code target (BUILTIN)  (0xffff914222e0)
0xffff914e7088  code target (HANDLER)  (0xffff9144c160)
0xffff914e7090  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = toString
compiler = unknown
Instructions (size = 120)
0xffff914e7120     0  sub csp, jssp, #0x8 (8)
0xffff914e7124     4  str x3, [jssp, #-8]!
0xffff914e7128     8  sub csp, jssp, #0x8 (8)
0xffff914e712c    12  str x0, [jssp, #-8]!
0xffff914e7130    16  ldr x0, pc+72 (addr 0x0000ffff914e7178)    ;; object: 0x408cba61 Cell for 0
0xffff914e7134    20  ldur x0, [x0, #7]
0xffff914e7138    24  cmp x0, #0x0 (0)
0xffff914e713c    28  b.ne #+0x14 (addr 0xffff914e7150)
0xffff914e7140    32  ldr x3, pc+64 (addr 0x0000ffff914e7180)    ;; object: 0x408cbcd9 WeakCell for 0x40840bf9 <a FastBuffer with map 0x36422341>
0xffff914e7144    36  ldur x3, [x3, #7]
0xffff914e7148    40  tbz w3, #0, #+0x8 (addr 0xffff914e7150)
0xffff914e714c    44  b #+0x14 (addr 0xffff914e7160)
0xffff914e7150    48  ldr x0, [jssp], #8
0xffff914e7154    52  ldr x3, [jssp], #8
0xffff914e7158    56  ldr x16, pc+48 (addr 0x0000ffff914e7188)    ;; code: BUILTIN
0xffff914e715c    60  br x16
0xffff914e7160    64  add jssp, jssp, #0x10 (16)
0xffff914e7164    68  mov x1, x3
0xffff914e7168    72  ldr x16, pc+40 (addr 0x0000ffff914e7190)    ;; code: HANDLER, LoadConstantStub, minor: 16
0xffff914e716c    76  br x16
0xffff914e7170    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914e7174    84  d63f03e0       constant
0xffff914e7178    88  408cba61       constant
0xffff914e717c    92  00000000       constant
0xffff914e7180    96  408cbcd9       constant
0xffff914e7184   100  00000000       constant
0xffff914e7188   104  914222e0       constant
0xffff914e718c   108  0000ffff       constant
0xffff914e7190   112  914e67a0       constant
0xffff914e7194   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914e7130  embedded object  (0x408cba61 Cell for 0)
0xffff914e7140  embedded object  (0x408cbcd9 WeakCell for 0x40840bf9 <a FastBuffer with map 0x36422341>)
0xffff914e7158  code target (BUILTIN)  (0xffff914222e0)
0xffff914e7168  code target (HANDLER)  (0xffff914e67a0)
0xffff914e7170  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = apply
compiler = unknown
Instructions (size = 120)
0xffff914e7200     0  sub csp, jssp, #0x8 (8)
0xffff914e7204     4  str x3, [jssp, #-8]!
0xffff914e7208     8  sub csp, jssp, #0x8 (8)
0xffff914e720c    12  str x0, [jssp, #-8]!
0xffff914e7210    16  ldr x0, pc+72 (addr 0x0000ffff914e7258)    ;; object: 0x49b5b0f1 Cell for 0
0xffff914e7214    20  ldur x0, [x0, #7]
0xffff914e7218    24  cmp x0, #0x0 (0)
0xffff914e721c    28  b.ne #+0x14 (addr 0xffff914e7230)
0xffff914e7220    32  ldr x3, pc+64 (addr 0x0000ffff914e7260)    ;; object: 0x408cbd11 WeakCell for 0x49b40019 <JS Function (SharedFunctionInfo 0x49b3ff71)>
0xffff914e7224    36  ldur x3, [x3, #7]
0xffff914e7228    40  tbz w3, #0, #+0x8 (addr 0xffff914e7230)
0xffff914e722c    44  b #+0x14 (addr 0xffff914e7240)
0xffff914e7230    48  ldr x0, [jssp], #8
0xffff914e7234    52  ldr x3, [jssp], #8
0xffff914e7238    56  ldr x16, pc+48 (addr 0x0000ffff914e7268)    ;; code: BUILTIN
0xffff914e723c    60  br x16
0xffff914e7240    64  add jssp, jssp, #0x10 (16)
0xffff914e7244    68  mov x1, x3
0xffff914e7248    72  ldr x16, pc+40 (addr 0x0000ffff914e7270)    ;; code: HANDLER, LoadConstantStub, minor: 4
0xffff914e724c    76  br x16
0xffff914e7250    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914e7254    84  d63f03e0       constant
0xffff914e7258    88  49b5b0f1       constant
0xffff914e725c    92  00000000       constant
0xffff914e7260    96  408cbd11       constant
0xffff914e7264   100  00000000       constant
0xffff914e7268   104  914222e0       constant
0xffff914e726c   108  0000ffff       constant
0xffff914e7270   112  91443480       constant
0xffff914e7274   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914e7210  embedded object  (0x49b5b0f1 Cell for 0)
0xffff914e7220  embedded object  (0x408cbd11 WeakCell for 0x49b40019 <JS Function (SharedFunctionInfo 0x49b3ff71)>)
0xffff914e7238  code target (BUILTIN)  (0xffff914222e0)
0xffff914e7248  code target (HANDLER)  (0xffff91443480)
0xffff914e7250  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = utf8Slice
compiler = unknown
Instructions (size = 120)
0xffff914e72e0     0  sub csp, jssp, #0x8 (8)
0xffff914e72e4     4  str x3, [jssp, #-8]!
0xffff914e72e8     8  sub csp, jssp, #0x8 (8)
0xffff914e72ec    12  str x0, [jssp, #-8]!
0xffff914e72f0    16  ldr x0, pc+72 (addr 0x0000ffff914e7338)    ;; object: 0x408cba61 Cell for 0
0xffff914e72f4    20  ldur x0, [x0, #7]
0xffff914e72f8    24  cmp x0, #0x0 (0)
0xffff914e72fc    28  b.ne #+0x14 (addr 0xffff914e7310)
0xffff914e7300    32  ldr x3, pc+64 (addr 0x0000ffff914e7340)    ;; object: 0x408cbd49 WeakCell for 0x40840bf9 <a FastBuffer with map 0x36422341>
0xffff914e7304    36  ldur x3, [x3, #7]
0xffff914e7308    40  tbz w3, #0, #+0x8 (addr 0xffff914e7310)
0xffff914e730c    44  b #+0x14 (addr 0xffff914e7320)
0xffff914e7310    48  ldr x0, [jssp], #8
0xffff914e7314    52  ldr x3, [jssp], #8
0xffff914e7318    56  ldr x16, pc+48 (addr 0x0000ffff914e7348)    ;; code: BUILTIN
0xffff914e731c    60  br x16
0xffff914e7320    64  add jssp, jssp, #0x10 (16)
0xffff914e7324    68  mov x1, x3
0xffff914e7328    72  ldr x16, pc+40 (addr 0x0000ffff914e7350)    ;; code: HANDLER, LoadConstantStub, minor: 6
0xffff914e732c    76  br x16
0xffff914e7330    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914e7334    84  d63f03e0       constant
0xffff914e7338    88  408cba61       constant
0xffff914e733c    92  00000000       constant
0xffff914e7340    96  408cbd49       constant
0xffff914e7344   100  00000000       constant
0xffff914e7348   104  914222e0       constant
0xffff914e734c   108  0000ffff       constant
0xffff914e7350   112  9148b020       constant
0xffff914e7354   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914e72f0  embedded object  (0x408cba61 Cell for 0)
0xffff914e7300  embedded object  (0x408cbd49 WeakCell for 0x40840bf9 <a FastBuffer with map 0x36422341>)
0xffff914e7318  code target (BUILTIN)  (0xffff914222e0)
0xffff914e7328  code target (HANDLER)  (0xffff9148b020)
0xffff914e7330  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _compile
compiler = unknown
Instructions (size = 120)
0xffff914e73c0     0  sub csp, jssp, #0x8 (8)
0xffff914e73c4     4  str x3, [jssp, #-8]!
0xffff914e73c8     8  sub csp, jssp, #0x8 (8)
0xffff914e73cc    12  str x0, [jssp, #-8]!
0xffff914e73d0    16  ldr x0, pc+72 (addr 0x0000ffff914e7418)    ;; object: 0x408cb5d9 Cell for 0
0xffff914e73d4    20  ldur x0, [x0, #7]
0xffff914e73d8    24  cmp x0, #0x0 (0)
0xffff914e73dc    28  b.ne #+0x14 (addr 0xffff914e73f0)
0xffff914e73e0    32  ldr x3, pc+64 (addr 0x0000ffff914e7420)    ;; object: 0x408cbd81 WeakCell for 0x26a40649 <an Object with map 0x36435009>
0xffff914e73e4    36  ldur x3, [x3, #7]
0xffff914e73e8    40  tbz w3, #0, #+0x8 (addr 0xffff914e73f0)
0xffff914e73ec    44  b #+0x14 (addr 0xffff914e7400)
0xffff914e73f0    48  ldr x0, [jssp], #8
0xffff914e73f4    52  ldr x3, [jssp], #8
0xffff914e73f8    56  ldr x16, pc+48 (addr 0x0000ffff914e7428)    ;; code: BUILTIN
0xffff914e73fc    60  br x16
0xffff914e7400    64  add jssp, jssp, #0x10 (16)
0xffff914e7404    68  mov x1, x3
0xffff914e7408    72  ldr x16, pc+40 (addr 0x0000ffff914e7430)    ;; code: HANDLER, LoadConstantStub, minor: 3
0xffff914e740c    76  br x16
0xffff914e7410    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914e7414    84  d63f03e0       constant
0xffff914e7418    88  408cb5d9       constant
0xffff914e741c    92  00000000       constant
0xffff914e7420    96  408cbd81       constant
0xffff914e7424   100  00000000       constant
0xffff914e7428   104  914222e0       constant
0xffff914e742c   108  0000ffff       constant
0xffff914e7430   112  91443400       constant
0xffff914e7434   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914e73d0  embedded object  (0x408cb5d9 Cell for 0)
0xffff914e73e0  embedded object  (0x408cbd81 WeakCell for 0x26a40649 <an Object with map 0x36435009>)
0xffff914e73f8  code target (BUILTIN)  (0xffff914222e0)
0xffff914e7408  code target (HANDLER)  (0xffff91443400)
0xffff914e7410  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _debugWaitConnect
compiler = unknown
Instructions (size = 632)
0xffff914e7800     0  sub csp, jssp, #0x8 (8)
0xffff914e7804     4  str x3, [jssp, #-8]!
0xffff914e7808     8  sub csp, jssp, #0x8 (8)
0xffff914e780c    12  str x0, [jssp, #-8]!
0xffff914e7810    16  ldr x0, pc+544 (addr 0x0000ffff914e7a30)    ;; object: 0x49be3709 Cell for 0
0xffff914e7814    20  ldur x0, [x0, #7]
0xffff914e7818    24  cmp x0, #0x0 (0)
0xffff914e781c    28  b.ne #+0x1f8 (addr 0xffff914e7a14)
0xffff914e7820    32  ldur x4, [x1, #-1]
0xffff914e7824    36  ldrb w0, [x4, #12]
0xffff914e7828    40  movz x16, #0x44
0xffff914e782c    44  tst x0, x16
0xffff914e7830    48  b.ne #+0x1e4 (addr 0xffff914e7a14)
0xffff914e7834    52  ldrb w0, [x4, #11]
0xffff914e7838    56  cmp x0, #0xb1 (177)
0xffff914e783c    60  b.lt #+0x1d8 (addr 0xffff914e7a14)
0xffff914e7840    64  ldur x0, [x1, #7]
0xffff914e7844    68  ldur x4, [x0, #-1]
0xffff914e7848    72  ldr x16, [x26, #432]
0xffff914e784c    76  cmp x4, x16
0xffff914e7850    80  b.ne #+0x1c4 (addr 0xffff914e7a14)
0xffff914e7854    84  ldursw x4, [x0, #35]
0xffff914e7858    88  sub x4, x4, #0x1 (1)
0xffff914e785c    92  movz x16, #0x21ed
0xffff914e7860    96  movk x16, #0x301e, lsl #16
0xffff914e7864   100  and x4, x4, x16
0xffff914e7868   104  add x4, x4, x4, lsl #1
0xffff914e786c   108  add x4, x0, x4, lsl #3
0xffff914e7870   112  ldur x4, [x4, #55]
0xffff914e7874   116  ldr x16, [x26, #40]
0xffff914e7878   120  cmp x4, x16
0xffff914e787c   124  b.eq #+0x188 (addr 0xffff914e7a04)
0xffff914e7880   128  ldr x16, pc+440 (addr 0x0000ffff914e7a38)    ;; object: 0x49bba8a1 <String[17]: _debugWaitConnect>
0xffff914e7884   132  cmp x4, x16
0xffff914e7888   136  b.eq #+0x18c (addr 0xffff914e7a14)
0xffff914e788c   140  ldr x16, [x26, #88]
0xffff914e7890   144  cmp x4, x16
0xffff914e7894   148  b.eq #+0x1c (addr 0xffff914e78b0)
0xffff914e7898   152  ldur x4, [x4, #-1]
0xffff914e789c   156  ldrb w4, [x4, #11]
0xffff914e78a0   160  tst x4, #0xc0
0xffff914e78a4   164  movz x16, #0x80
0xffff914e78a8   168  ccmp x4, x16, #nZcv, ne
0xffff914e78ac   172  b.ne #+0x168 (addr 0xffff914e7a14)
0xffff914e78b0   176  ldursw x4, [x0, #35]
0xffff914e78b4   180  sub x4, x4, #0x1 (1)
0xffff914e78b8   184  movz x16, #0x21ee
0xffff914e78bc   188  movk x16, #0x301e, lsl #16
0xffff914e78c0   192  and x4, x4, x16
0xffff914e78c4   196  add x4, x4, x4, lsl #1
0xffff914e78c8   200  add x4, x0, x4, lsl #3
0xffff914e78cc   204  ldur x4, [x4, #55]
0xffff914e78d0   208  ldr x16, [x26, #40]
0xffff914e78d4   212  cmp x4, x16
0xffff914e78d8   216  b.eq #+0x12c (addr 0xffff914e7a04)
0xffff914e78dc   220  ldr x16, pc+356 (addr 0x0000ffff914e7a40)    ;; object: 0x49bba8a1 <String[17]: _debugWaitConnect>
0xffff914e78e0   224  cmp x4, x16
0xffff914e78e4   228  b.eq #+0x130 (addr 0xffff914e7a14)
0xffff914e78e8   232  ldr x16, [x26, #88]
0xffff914e78ec   236  cmp x4, x16
0xffff914e78f0   240  b.eq #+0x1c (addr 0xffff914e790c)
0xffff914e78f4   244  ldur x4, [x4, #-1]
0xffff914e78f8   248  ldrb w4, [x4, #11]
0xffff914e78fc   252  tst x4, #0xc0
0xffff914e7900   256  movz x16, #0x80
0xffff914e7904   260  ccmp x4, x16, #nZcv, ne
0xffff914e7908   264  b.ne #+0x10c (addr 0xffff914e7a14)
0xffff914e790c   268  ldursw x4, [x0, #35]
0xffff914e7910   272  sub x4, x4, #0x1 (1)
0xffff914e7914   276  movz x16, #0x21f0
0xffff914e7918   280  movk x16, #0x301e, lsl #16
0xffff914e791c   284  and x4, x4, x16
0xffff914e7920   288  add x4, x4, x4, lsl #1
0xffff914e7924   292  add x4, x0, x4, lsl #3
0xffff914e7928   296  ldur x4, [x4, #55]
0xffff914e792c   300  ldr x16, [x26, #40]
0xffff914e7930   304  cmp x4, x16
0xffff914e7934   308  b.eq #+0xd0 (addr 0xffff914e7a04)
0xffff914e7938   312  ldr x16, pc+272 (addr 0x0000ffff914e7a48)    ;; object: 0x49bba8a1 <String[17]: _debugWaitConnect>
0xffff914e793c   316  cmp x4, x16
0xffff914e7940   320  b.eq #+0xd4 (addr 0xffff914e7a14)
0xffff914e7944   324  ldr x16, [x26, #88]
0xffff914e7948   328  cmp x4, x16
0xffff914e794c   332  b.eq #+0x1c (addr 0xffff914e7968)
0xffff914e7950   336  ldur x4, [x4, #-1]
0xffff914e7954   340  ldrb w4, [x4, #11]
0xffff914e7958   344  tst x4, #0xc0
0xffff914e795c   348  movz x16, #0x80
0xffff914e7960   352  ccmp x4, x16, #nZcv, ne
0xffff914e7964   356  b.ne #+0xb0 (addr 0xffff914e7a14)
0xffff914e7968   360  ldursw x4, [x0, #35]
0xffff914e796c   364  sub x4, x4, #0x1 (1)
0xffff914e7970   368  movz x16, #0x21f3
0xffff914e7974   372  movk x16, #0x301e, lsl #16
0xffff914e7978   376  and x4, x4, x16
0xffff914e797c   380  add x4, x4, x4, lsl #1
0xffff914e7980   384  add x4, x0, x4, lsl #3
0xffff914e7984   388  ldur x4, [x4, #55]
0xffff914e7988   392  ldr x16, [x26, #40]
0xffff914e798c   396  cmp x4, x16
0xffff914e7990   400  b.eq #+0x74 (addr 0xffff914e7a04)
0xffff914e7994   404  ldr x16, pc+188 (addr 0x0000ffff914e7a50)    ;; object: 0x49bba8a1 <String[17]: _debugWaitConnect>
0xffff914e7998   408  cmp x4, x16
0xffff914e799c   412  b.eq #+0x78 (addr 0xffff914e7a14)
0xffff914e79a0   416  ldr x16, [x26, #88]
0xffff914e79a4   420  cmp x4, x16
0xffff914e79a8   424  b.eq #+0x1c (addr 0xffff914e79c4)
0xffff914e79ac   428  ldur x4, [x4, #-1]
0xffff914e79b0   432  ldrb w4, [x4, #11]
0xffff914e79b4   436  tst x4, #0xc0
0xffff914e79b8   440  movz x16, #0x80
0xffff914e79bc   444  ccmp x4, x16, #nZcv, ne
0xffff914e79c0   448  b.ne #+0x54 (addr 0xffff914e7a14)
0xffff914e79c4   452  sub csp, jssp, #0x38 (56)
0xffff914e79c8   456  stp x3, x5, [jssp, #-32]!
0xffff914e79cc   460  stp x6, lr, [jssp, #16]
0xffff914e79d0   464  stp x0, x1, [jssp, #-24]!
0xffff914e79d4   468  str x2, [jssp, #16]
0xffff914e79d8   472  ldur x0, [x1, #7]
0xffff914e79dc   476  ldr x1, pc+124 (addr 0x0000ffff914e7a58)    ;; object: 0x49bba8a1 <String[17]: _debugWaitConnect>
0xffff914e79e0   480  ldr x16, pc+128 (addr 0x0000ffff914e7a60)    ;; code: STUB, NameDictionaryLookupStub, minor: 1
0xffff914e79e4   484  blr x16
0xffff914e79e8   488  mov x4, x0
0xffff914e79ec   492  ldp x2, x3, [jssp, #16]
0xffff914e79f0   496  ldp x0, x1, [jssp], #32
0xffff914e79f4   500  ldr lr, [jssp, #16]
0xffff914e79f8   504  ldp x5, x6, [jssp], #24
0xffff914e79fc   508  cbz x4, #+0x8 (addr 0xffff914e7a04)
0xffff914e7a00   512  b #+0x14 (addr 0xffff914e7a14)
0xffff914e7a04   516  add jssp, jssp, #0x10 (16)
0xffff914e7a08   520  ldr x0, pc+96 (addr 0x0000ffff914e7a68)    ;; object: 0x49b04241 <undefined>
0xffff914e7a0c   524  ret
0xffff914e7a10   528  b #+0x14 (addr 0xffff914e7a24)
0xffff914e7a14   532  ldr x0, [jssp], #8
0xffff914e7a18   536  ldr x3, [jssp], #8
0xffff914e7a1c   540  ldr x16, pc+84 (addr 0x0000ffff914e7a70)    ;; code: BUILTIN
0xffff914e7a20   544  br x16
0xffff914e7a24   548  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff914e7a28   552  d63f03e0       constant
0xffff914e7a2c   556  d503201f       constant
0xffff914e7a30   560  49be3709       constant
0xffff914e7a34   564  00000000       constant
0xffff914e7a38   568  49bba8a1       constant
0xffff914e7a3c   572  00000000       constant
0xffff914e7a40   576  49bba8a1       constant
0xffff914e7a44   580  00000000       constant
0xffff914e7a48   584  49bba8a1       constant
0xffff914e7a4c   588  00000000       constant
0xffff914e7a50   592  49bba8a1       constant
0xffff914e7a54   596  00000000       constant
0xffff914e7a58   600  49bba8a1       constant
0xffff914e7a5c   604  00000000       constant
0xffff914e7a60   608  9148b120       constant
0xffff914e7a64   612  0000ffff       constant
0xffff914e7a68   616  49b04241       constant
0xffff914e7a6c   620  00000000       constant
0xffff914e7a70   624  914222e0       constant
0xffff914e7a74   628  0000ffff       constant


RelocInfo (size = 25)
0xffff914e7810  embedded object  (0x49be3709 Cell for 0)
0xffff914e7880  embedded object  (0x49bba8a1 <String[17]: _debugWaitConnect>)
0xffff914e78dc  embedded object  (0x49bba8a1 <String[17]: _debugWaitConnect>)
0xffff914e7938  embedded object  (0x49bba8a1 <String[17]: _debugWaitConnect>)
0xffff914e7994  embedded object  (0x49bba8a1 <String[17]: _debugWaitConnect>)
0xffff914e79dc  embedded object  (0x49bba8a1 <String[17]: _debugWaitConnect>)
0xffff914e79e0  code target (STUB)  (0xffff9148b120)
0xffff914e7a08  embedded object  (0x49b04241 <undefined>)
0xffff914e7a1c  code target (BUILTIN)  (0xffff914222e0)
0xffff914e7a24  constant pool (size 84)

kind = HANDLER
major_key = <NoCache>Stub
name = constructor
compiler = unknown
Instructions (size = 120)
0xffff914e7ae0     0  sub csp, jssp, #0x8 (8)
0xffff914e7ae4     4  str x3, [jssp, #-8]!
0xffff914e7ae8     8  sub csp, jssp, #0x8 (8)
0xffff914e7aec    12  str x0, [jssp, #-8]!
0xffff914e7af0    16  ldr x0, pc+72 (addr 0x0000ffff914e7b38)    ;; object: 0x408cb5d9 Cell for 0
0xffff914e7af4    20  ldur x0, [x0, #7]
0xffff914e7af8    24  cmp x0, #0x0 (0)
0xffff914e7afc    28  b.ne #+0x14 (addr 0xffff914e7b10)
0xffff914e7b00    32  ldr x3, pc+64 (addr 0x0000ffff914e7b40)    ;; object: 0x408cc321 WeakCell for 0x26a40649 <an Object with map 0x36435009>
0xffff914e7b04    36  ldur x3, [x3, #7]
0xffff914e7b08    40  tbz w3, #0, #+0x8 (addr 0xffff914e7b10)
0xffff914e7b0c    44  b #+0x14 (addr 0xffff914e7b20)
0xffff914e7b10    48  ldr x0, [jssp], #8
0xffff914e7b14    52  ldr x3, [jssp], #8
0xffff914e7b18    56  ldr x16, pc+48 (addr 0x0000ffff914e7b48)    ;; code: BUILTIN
0xffff914e7b1c    60  br x16
0xffff914e7b20    64  add jssp, jssp, #0x10 (16)
0xffff914e7b24    68  mov x1, x3
0xffff914e7b28    72  ldr x16, pc+40 (addr 0x0000ffff914e7b50)    ;; code: HANDLER, LoadConstantStub, minor: 0
0xffff914e7b2c    76  br x16
0xffff914e7b30    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914e7b34    84  d63f03e0       constant
0xffff914e7b38    88  408cb5d9       constant
0xffff914e7b3c    92  00000000       constant
0xffff914e7b40    96  408cc321       constant
0xffff914e7b44   100  00000000       constant
0xffff914e7b48   104  914222e0       constant
0xffff914e7b4c   108  0000ffff       constant
0xffff914e7b50   112  914431a0       constant
0xffff914e7b54   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914e7af0  embedded object  (0x408cb5d9 Cell for 0)
0xffff914e7b00  embedded object  (0x408cc321 WeakCell for 0x26a40649 <an Object with map 0x36435009>)
0xffff914e7b18  code target (BUILTIN)  (0xffff914222e0)
0xffff914e7b28  code target (HANDLER)  (0xffff914431a0)
0xffff914e7b30  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = resolve
compiler = unknown
Instructions (size = 152)
0xffff914e7bc0     0  sub csp, jssp, #0x8 (8)
0xffff914e7bc4     4  str x3, [jssp, #-8]!
0xffff914e7bc8     8  sub csp, jssp, #0x8 (8)
0xffff914e7bcc    12  str x4, [jssp, #-8]!
0xffff914e7bd0    16  ldr x3, pc+88 (addr 0x0000ffff914e7c28)    ;; object: 0x49b5b0f1 Cell for 0
0xffff914e7bd4    20  ldur x3, [x3, #7]
0xffff914e7bd8    24  cmp x3, #0x0 (0)
0xffff914e7bdc    28  b.ne #+0x30 (addr 0xffff914e7c0c)
0xffff914e7be0    32  tbz w0, #0, #+0x2c (addr 0xffff914e7c0c)
0xffff914e7be4    36  ldr x5, pc+76 (addr 0x0000ffff914e7c30)    ;; object: 0x408cc359 WeakCell for 0x364368c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e7be8    40  ldur x5, [x5, #7]
0xffff914e7bec    44  tbz w5, #0, #+0x20 (addr 0xffff914e7c0c)
0xffff914e7bf0    48  ldursw x4, [x5, #15]
0xffff914e7bf4    52  tbnz w4, #23, #+0x18 (addr 0xffff914e7c0c)
0xffff914e7bf8    56  ldr x4, [jssp], #8
0xffff914e7bfc    60  ldr x3, [jssp], #8
0xffff914e7c00    64  ldr x2, pc+56 (addr 0x0000ffff914e7c38)    ;; object: 0x49b8fcd9 <String[7]: resolve>
0xffff914e7c04    68  ldr x16, pc+60 (addr 0x0000ffff914e7c40)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff914e7c08    72  br x16
0xffff914e7c0c    76  ldr x2, pc+60 (addr 0x0000ffff914e7c48)    ;; object: 0x49b8fcd9 <String[7]: resolve>
0xffff914e7c10    80  ldr x4, [jssp], #8
0xffff914e7c14    84  ldr x3, [jssp], #8
0xffff914e7c18    88  ldr x16, pc+56 (addr 0x0000ffff914e7c50)    ;; code: BUILTIN
0xffff914e7c1c    92  br x16
0xffff914e7c20    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914e7c24   100  d63f03e0       constant
0xffff914e7c28   104  49b5b0f1       constant
0xffff914e7c2c   108  00000000       constant
0xffff914e7c30   112  408cc359       constant
0xffff914e7c34   116  00000000       constant
0xffff914e7c38   120  49b8fcd9       constant
0xffff914e7c3c   124  00000000       constant
0xffff914e7c40   128  91438860       constant
0xffff914e7c44   132  0000ffff       constant
0xffff914e7c48   136  49b8fcd9       constant
0xffff914e7c4c   140  00000000       constant
0xffff914e7c50   144  91422420       constant
0xffff914e7c54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914e7bd0  embedded object  (0x49b5b0f1 Cell for 0)
0xffff914e7be4  embedded object  (0x408cc359 WeakCell for 0x364368c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e7c00  embedded object  (0x49b8fcd9 <String[7]: resolve>)
0xffff914e7c04  code target (HANDLER)  (0xffff91438860)
0xffff914e7c0c  embedded object  (0x49b8fcd9 <String[7]: resolve>)
0xffff914e7c18  code target (BUILTIN)  (0xffff91422420)
0xffff914e7c20  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = main
compiler = unknown
Instructions (size = 184)
0xffff914e7cc0     0  sub csp, jssp, #0x8 (8)
0xffff914e7cc4     4  str x3, [jssp, #-8]!
0xffff914e7cc8     8  sub csp, jssp, #0x8 (8)
0xffff914e7ccc    12  str x4, [jssp, #-8]!
0xffff914e7cd0    16  ldr x3, pc+112 (addr 0x0000ffff914e7d40)    ;; object: 0x49b5b0f1 Cell for 0
0xffff914e7cd4    20  ldur x3, [x3, #7]
0xffff914e7cd8    24  cmp x3, #0x0 (0)
0xffff914e7cdc    28  b.ne #+0x44 (addr 0xffff914e7d20)
0xffff914e7ce0    32  tbz w0, #0, #+0x40 (addr 0xffff914e7d20)
0xffff914e7ce4    36  ldur x3, [x0, #-1]
0xffff914e7ce8    40  ldr x4, pc+96 (addr 0x0000ffff914e7d48)    ;; object: 0x408c5369 WeakCell for 0x36436559 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e7cec    44  ldur x4, [x4, #7]
0xffff914e7cf0    48  cmp x3, x4
0xffff914e7cf4    52  b.ne #+0x2c (addr 0xffff914e7d20)
0xffff914e7cf8    56  ldr x5, pc+88 (addr 0x0000ffff914e7d50)    ;; object: 0x408cc391 WeakCell for 0x36436921 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e7cfc    60  ldur x5, [x5, #7]
0xffff914e7d00    64  tbz w5, #0, #+0x20 (addr 0xffff914e7d20)
0xffff914e7d04    68  ldursw x4, [x5, #15]
0xffff914e7d08    72  tbnz w4, #23, #+0x18 (addr 0xffff914e7d20)
0xffff914e7d0c    76  ldr x4, [jssp], #8
0xffff914e7d10    80  ldr x3, [jssp], #8
0xffff914e7d14    84  ldr x2, pc+68 (addr 0x0000ffff914e7d58)    ;; object: 0x40807b89 <String[4]: main>
0xffff914e7d18    88  ldr x16, pc+72 (addr 0x0000ffff914e7d60)    ;; code: HANDLER, StoreTransitionStub, minor: 196611
0xffff914e7d1c    92  br x16
0xffff914e7d20    96  ldr x2, pc+72 (addr 0x0000ffff914e7d68)    ;; object: 0x40807b89 <String[4]: main>
0xffff914e7d24   100  ldr x4, [jssp], #8
0xffff914e7d28   104  ldr x3, [jssp], #8
0xffff914e7d2c   108  ldr x16, pc+68 (addr 0x0000ffff914e7d70)    ;; code: BUILTIN
0xffff914e7d30   112  br x16
0xffff914e7d34   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914e7d38   120  d63f03e0       constant
0xffff914e7d3c   124  d503201f       constant
0xffff914e7d40   128  49b5b0f1       constant
0xffff914e7d44   132  00000000       constant
0xffff914e7d48   136  408c5369       constant
0xffff914e7d4c   140  00000000       constant
0xffff914e7d50   144  408cc391       constant
0xffff914e7d54   148  00000000       constant
0xffff914e7d58   152  40807b89       constant
0xffff914e7d5c   156  00000000       constant
0xffff914e7d60   160  91499940       constant
0xffff914e7d64   164  0000ffff       constant
0xffff914e7d68   168  40807b89       constant
0xffff914e7d6c   172  00000000       constant
0xffff914e7d70   176  91422420       constant
0xffff914e7d74   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914e7cd0  embedded object  (0x49b5b0f1 Cell for 0)
0xffff914e7ce8  embedded object  (0x408c5369 WeakCell for 0x36436559 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e7cf8  embedded object  (0x408cc391 WeakCell for 0x36436921 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e7d14  embedded object  (0x40807b89 <String[4]: main>)
0xffff914e7d18  code target (HANDLER)  (0xffff91499940)
0xffff914e7d20  embedded object  (0x40807b89 <String[4]: main>)
0xffff914e7d2c  code target (BUILTIN)  (0xffff91422420)
0xffff914e7d34  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = extensions
compiler = unknown
Instructions (size = 184)
0xffff914e7de0     0  sub csp, jssp, #0x8 (8)
0xffff914e7de4     4  str x3, [jssp, #-8]!
0xffff914e7de8     8  sub csp, jssp, #0x8 (8)
0xffff914e7dec    12  str x4, [jssp, #-8]!
0xffff914e7df0    16  ldr x3, pc+112 (addr 0x0000ffff914e7e60)    ;; object: 0x49b5b0f1 Cell for 0
0xffff914e7df4    20  ldur x3, [x3, #7]
0xffff914e7df8    24  cmp x3, #0x0 (0)
0xffff914e7dfc    28  b.ne #+0x44 (addr 0xffff914e7e40)
0xffff914e7e00    32  tbz w0, #0, #+0x40 (addr 0xffff914e7e40)
0xffff914e7e04    36  ldur x3, [x0, #-1]
0xffff914e7e08    40  ldr x4, pc+96 (addr 0x0000ffff914e7e68)    ;; object: 0x4082e741 WeakCell for 0x36435111 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e7e0c    44  ldur x4, [x4, #7]
0xffff914e7e10    48  cmp x3, x4
0xffff914e7e14    52  b.ne #+0x2c (addr 0xffff914e7e40)
0xffff914e7e18    56  ldr x5, pc+88 (addr 0x0000ffff914e7e70)    ;; object: 0x408cc3c9 WeakCell for 0x36436979 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e7e1c    60  ldur x5, [x5, #7]
0xffff914e7e20    64  tbz w5, #0, #+0x20 (addr 0xffff914e7e40)
0xffff914e7e24    68  ldursw x4, [x5, #15]
0xffff914e7e28    72  tbnz w4, #23, #+0x18 (addr 0xffff914e7e40)
0xffff914e7e2c    76  ldr x4, [jssp], #8
0xffff914e7e30    80  ldr x3, [jssp], #8
0xffff914e7e34    84  ldr x2, pc+68 (addr 0x0000ffff914e7e78)    ;; object: 0x4080a9e9 <String[10]: extensions>
0xffff914e7e38    88  ldr x16, pc+72 (addr 0x0000ffff914e7e80)    ;; code: HANDLER, StoreTransitionStub, minor: 196612
0xffff914e7e3c    92  br x16
0xffff914e7e40    96  ldr x2, pc+72 (addr 0x0000ffff914e7e88)    ;; object: 0x4080a9e9 <String[10]: extensions>
0xffff914e7e44   100  ldr x4, [jssp], #8
0xffff914e7e48   104  ldr x3, [jssp], #8
0xffff914e7e4c   108  ldr x16, pc+68 (addr 0x0000ffff914e7e90)    ;; code: BUILTIN
0xffff914e7e50   112  br x16
0xffff914e7e54   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914e7e58   120  d63f03e0       constant
0xffff914e7e5c   124  d503201f       constant
0xffff914e7e60   128  49b5b0f1       constant
0xffff914e7e64   132  00000000       constant
0xffff914e7e68   136  4082e741       constant
0xffff914e7e6c   140  00000000       constant
0xffff914e7e70   144  408cc3c9       constant
0xffff914e7e74   148  00000000       constant
0xffff914e7e78   152  4080a9e9       constant
0xffff914e7e7c   156  00000000       constant
0xffff914e7e80   160  9149a100       constant
0xffff914e7e84   164  0000ffff       constant
0xffff914e7e88   168  4080a9e9       constant
0xffff914e7e8c   172  00000000       constant
0xffff914e7e90   176  91422420       constant
0xffff914e7e94   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914e7df0  embedded object  (0x49b5b0f1 Cell for 0)
0xffff914e7e08  embedded object  (0x4082e741 WeakCell for 0x36435111 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e7e18  embedded object  (0x408cc3c9 WeakCell for 0x36436979 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e7e34  embedded object  (0x4080a9e9 <String[10]: extensions>)
0xffff914e7e38  code target (HANDLER)  (0xffff9149a100)
0xffff914e7e40  embedded object  (0x4080a9e9 <String[10]: extensions>)
0xffff914e7e4c  code target (BUILTIN)  (0xffff91422420)
0xffff914e7e54  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = cache
compiler = unknown
Instructions (size = 184)
0xffff914e7f00     0  sub csp, jssp, #0x8 (8)
0xffff914e7f04     4  str x3, [jssp, #-8]!
0xffff914e7f08     8  sub csp, jssp, #0x8 (8)
0xffff914e7f0c    12  str x4, [jssp, #-8]!
0xffff914e7f10    16  ldr x3, pc+112 (addr 0x0000ffff914e7f80)    ;; object: 0x49b5b0f1 Cell for 0
0xffff914e7f14    20  ldur x3, [x3, #7]
0xffff914e7f18    24  cmp x3, #0x0 (0)
0xffff914e7f1c    28  b.ne #+0x44 (addr 0xffff914e7f60)
0xffff914e7f20    32  tbz w0, #0, #+0x40 (addr 0xffff914e7f60)
0xffff914e7f24    36  ldur x3, [x0, #-1]
0xffff914e7f28    40  ldr x4, pc+96 (addr 0x0000ffff914e7f88)    ;; object: 0x408cb791 WeakCell for 0x36436871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e7f2c    44  ldur x4, [x4, #7]
0xffff914e7f30    48  cmp x3, x4
0xffff914e7f34    52  b.ne #+0x2c (addr 0xffff914e7f60)
0xffff914e7f38    56  ldr x5, pc+88 (addr 0x0000ffff914e7f90)    ;; object: 0x408cc401 WeakCell for 0x364369d1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e7f3c    60  ldur x5, [x5, #7]
0xffff914e7f40    64  tbz w5, #0, #+0x20 (addr 0xffff914e7f60)
0xffff914e7f44    68  ldursw x4, [x5, #15]
0xffff914e7f48    72  tbnz w4, #23, #+0x18 (addr 0xffff914e7f60)
0xffff914e7f4c    76  ldr x4, [jssp], #8
0xffff914e7f50    80  ldr x3, [jssp], #8
0xffff914e7f54    84  ldr x2, pc+68 (addr 0x0000ffff914e7f98)    ;; object: 0x49bbab51 <String[5]: cache>
0xffff914e7f58    88  ldr x16, pc+72 (addr 0x0000ffff914e7fa0)    ;; code: HANDLER, StoreTransitionStub, minor: 327685
0xffff914e7f5c    92  br x16
0xffff914e7f60    96  ldr x2, pc+72 (addr 0x0000ffff914e7fa8)    ;; object: 0x49bbab51 <String[5]: cache>
0xffff914e7f64   100  ldr x4, [jssp], #8
0xffff914e7f68   104  ldr x3, [jssp], #8
0xffff914e7f6c   108  ldr x16, pc+68 (addr 0x0000ffff914e7fb0)    ;; code: BUILTIN
0xffff914e7f70   112  br x16
0xffff914e7f74   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914e7f78   120  d63f03e0       constant
0xffff914e7f7c   124  d503201f       constant
0xffff914e7f80   128  49b5b0f1       constant
0xffff914e7f84   132  00000000       constant
0xffff914e7f88   136  408cb791       constant
0xffff914e7f8c   140  00000000       constant
0xffff914e7f90   144  408cc401       constant
0xffff914e7f94   148  00000000       constant
0xffff914e7f98   152  49bbab51       constant
0xffff914e7f9c   156  00000000       constant
0xffff914e7fa0   160  9149d3c0       constant
0xffff914e7fa4   164  0000ffff       constant
0xffff914e7fa8   168  49bbab51       constant
0xffff914e7fac   172  00000000       constant
0xffff914e7fb0   176  91422420       constant
0xffff914e7fb4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914e7f10  embedded object  (0x49b5b0f1 Cell for 0)
0xffff914e7f28  embedded object  (0x408cb791 WeakCell for 0x36436871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e7f38  embedded object  (0x408cc401 WeakCell for 0x364369d1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e7f54  embedded object  (0x49bbab51 <String[5]: cache>)
0xffff914e7f58  code target (HANDLER)  (0xffff9149d3c0)
0xffff914e7f60  embedded object  (0x49bbab51 <String[5]: cache>)
0xffff914e7f6c  code target (BUILTIN)  (0xffff91422420)
0xffff914e7f74  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff914e8020     0  mov x5, x0
0xffff914e8024     4  tbnz w5, #0, #+0x10 (addr 0xffff914e8034)
0xffff914e8028     8  ldur x3, [x1, #7]
0xffff914e802c    12  stur x5, [x3, #15]
0xffff914e8030    16  ret
0xffff914e8034    20  movz x16, #0x0
0xffff914e8038    24  sub csp, jssp, #0x10 (16)
0xffff914e803c    28  stp fp, lr, [jssp, #-16]!
0xffff914e8040    32  bl #+0x4 (addr 0xffff914e8044)
0xffff914e8044    36  movz x17, #0xa00000000
0xffff914e8048    40  sub csp, jssp, #0x10 (16)
0xffff914e804c    44  stp x17, cp, [jssp, #-16]!
0xffff914e8050    48  add fp, jssp, #0x10 (16)
0xffff914e8054    52  ldr x17, pc+20 (addr 0x0000ffff914e8068)    ;; lazy deoptimization bailout 0
0xffff914e8058    56  add x17, x17, x16
0xffff914e805c    60  br x17
0xffff914e8060    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914e8064    68  d63f03e0       constant
0xffff914e8068    72  91206000       constant
0xffff914e806c    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff914e8054  runtime entry
0xffff914e8060  constant pool (size 16)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff914e8020     0  mov x5, x0
0xffff914e8024     4  tbnz w5, #0, #+0x10 (addr 0xffff914e8034)
0xffff914e8028     8  ldur x3, [x1, #7]
0xffff914e802c    12  stur x5, [x3, #15]
0xffff914e8030    16  ret
0xffff914e8034    20  movz x16, #0x0
0xffff914e8038    24  sub csp, jssp, #0x10 (16)
0xffff914e803c    28  stp fp, lr, [jssp, #-16]!
0xffff914e8040    32  bl #+0x4 (addr 0xffff914e8044)
0xffff914e8044    36  movz x17, #0xa00000000
0xffff914e8048    40  sub csp, jssp, #0x10 (16)
0xffff914e804c    44  stp x17, cp, [jssp, #-16]!
0xffff914e8050    48  add fp, jssp, #0x10 (16)
0xffff914e8054    52  ldr x17, pc+20 (addr 0x0000ffff914e8068)    ;; lazy deoptimization bailout 0
0xffff914e8058    56  add x17, x17, x16
0xffff914e805c    60  br x17
0xffff914e8060    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914e8064    68  d63f03e0       constant
0xffff914e8068    72  91206000       constant
0xffff914e806c    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff914e8054  runtime entry
0xffff914e8060  constant pool (size 16)


kind = HANDLER
major_key = <NoCache>Stub
name = require
compiler = unknown
Instructions (size = 120)
0xffff914e80e0     0  sub csp, jssp, #0x8 (8)
0xffff914e80e4     4  str x3, [jssp, #-8]!
0xffff914e80e8     8  sub csp, jssp, #0x8 (8)
0xffff914e80ec    12  str x0, [jssp, #-8]!
0xffff914e80f0    16  ldr x0, pc+72 (addr 0x0000ffff914e8138)    ;; object: 0x408cb5d9 Cell for 0
0xffff914e80f4    20  ldur x0, [x0, #7]
0xffff914e80f8    24  cmp x0, #0x0 (0)
0xffff914e80fc    28  b.ne #+0x14 (addr 0xffff914e8110)
0xffff914e8100    32  ldr x3, pc+64 (addr 0x0000ffff914e8140)    ;; object: 0x408cc519 WeakCell for 0x26a40649 <an Object with map 0x36435009>
0xffff914e8104    36  ldur x3, [x3, #7]
0xffff914e8108    40  tbz w3, #0, #+0x8 (addr 0xffff914e8110)
0xffff914e810c    44  b #+0x14 (addr 0xffff914e8120)
0xffff914e8110    48  ldr x0, [jssp], #8
0xffff914e8114    52  ldr x3, [jssp], #8
0xffff914e8118    56  ldr x16, pc+48 (addr 0x0000ffff914e8148)    ;; code: BUILTIN
0xffff914e811c    60  br x16
0xffff914e8120    64  add jssp, jssp, #0x10 (16)
0xffff914e8124    68  mov x1, x3
0xffff914e8128    72  ldr x16, pc+40 (addr 0x0000ffff914e8150)    ;; code: HANDLER, LoadConstantStub, minor: 2
0xffff914e812c    76  br x16
0xffff914e8130    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914e8134    84  d63f03e0       constant
0xffff914e8138    88  408cb5d9       constant
0xffff914e813c    92  00000000       constant
0xffff914e8140    96  408cc519       constant
0xffff914e8144   100  00000000       constant
0xffff914e8148   104  914222e0       constant
0xffff914e814c   108  0000ffff       constant
0xffff914e8150   112  91443380       constant
0xffff914e8154   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914e80f0  embedded object  (0x408cb5d9 Cell for 0)
0xffff914e8100  embedded object  (0x408cc519 WeakCell for 0x26a40649 <an Object with map 0x36435009>)
0xffff914e8118  code target (BUILTIN)  (0xffff914222e0)
0xffff914e8128  code target (HANDLER)  (0xffff91443380)
0xffff914e8130  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914e81c0     0  ldur x0, [x1, #-1]
0xffff914e81c4     4  ldur x0, [x0, #47]
0xffff914e81c8     8  movz x16, #0x167
0xffff914e81cc    12  ldr x0, [x0, x16]
0xffff914e81d0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914e81c0     0  ldur x0, [x1, #-1]
0xffff914e81c4     4  ldur x0, [x0, #47]
0xffff914e81c8     8  movz x16, #0x167
0xffff914e81cc    12  ldr x0, [x0, x16]
0xffff914e81d0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914e8c00     0  ldur x0, [x1, #-1]
0xffff914e8c04     4  ldur x0, [x0, #47]
0xffff914e8c08     8  movz x16, #0x107
0xffff914e8c0c    12  ldr x0, [x0, x16]
0xffff914e8c10    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff914e8c00     0  ldur x0, [x1, #-1]
0xffff914e8c04     4  ldur x0, [x0, #47]
0xffff914e8c08     8  movz x16, #0x107
0xffff914e8c0c    12  ldr x0, [x0, x16]
0xffff914e8c10    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = startsWith
compiler = unknown
Instructions (size = 152)
0xffff914e8c80     0  sub csp, jssp, #0x8 (8)
0xffff914e8c84     4  str x3, [jssp, #-8]!
0xffff914e8c88     8  sub csp, jssp, #0x8 (8)
0xffff914e8c8c    12  str x0, [jssp, #-8]!
0xffff914e8c90    16  ldur x3, [cp, #39]
0xffff914e8c94    20  movz x16, #0x2e7
0xffff914e8c98    24  ldr x3, [x3, x16]
0xffff914e8c9c    28  ldur x3, [x3, #23]
0xffff914e8ca0    32  ldur x3, [x3, #23]
0xffff914e8ca4    36  ldr x0, pc+84 (addr 0x0000ffff914e8cf8)    ;; object: 0x49b63e59 Cell for 0
0xffff914e8ca8    40  ldur x0, [x0, #7]
0xffff914e8cac    44  cmp x0, #0x0 (0)
0xffff914e8cb0    48  b.ne #+0x1c (addr 0xffff914e8ccc)
0xffff914e8cb4    52  ldur x0, [x3, #-1]
0xffff914e8cb8    56  ldr x4, pc+72 (addr 0x0000ffff914e8d00)    ;; object: 0x40806e39 WeakCell for 0x364156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff914e8cbc    60  ldur x4, [x4, #7]
0xffff914e8cc0    64  cmp x0, x4
0xffff914e8cc4    68  b.ne #+0x8 (addr 0xffff914e8ccc)
0xffff914e8cc8    72  b #+0x14 (addr 0xffff914e8cdc)
0xffff914e8ccc    76  ldr x0, [jssp], #8
0xffff914e8cd0    80  ldr x3, [jssp], #8
0xffff914e8cd4    84  ldr x16, pc+52 (addr 0x0000ffff914e8d08)    ;; code: BUILTIN
0xffff914e8cd8    88  br x16
0xffff914e8cdc    92  add jssp, jssp, #0x10 (16)
0xffff914e8ce0    96  mov x1, x3
0xffff914e8ce4   100  ldr x16, pc+44 (addr 0x0000ffff914e8d10)    ;; code: HANDLER, LoadConstantStub, minor: 22
0xffff914e8ce8   104  br x16
0xffff914e8cec   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff914e8cf0   112  d63f03e0       constant
0xffff914e8cf4   116  d503201f       constant
0xffff914e8cf8   120  49b63e59       constant
0xffff914e8cfc   124  00000000       constant
0xffff914e8d00   128  40806e39       constant
0xffff914e8d04   132  00000000       constant
0xffff914e8d08   136  914222e0       constant
0xffff914e8d0c   140  0000ffff       constant
0xffff914e8d10   144  9147b2c0       constant
0xffff914e8d14   148  0000ffff       constant


RelocInfo (size = 10)
0xffff914e8ca4  embedded object  (0x49b63e59 Cell for 0)
0xffff914e8cb8  embedded object  (0x40806e39 WeakCell for 0x364156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff914e8cd4  code target (BUILTIN)  (0xffff914222e0)
0xffff914e8ce4  code target (HANDLER)  (0xffff9147b2c0)
0xffff914e8cec  constant pool (size 44)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 469)
0xffff914e9d60     0  ldur x4, [x3, #47]
0xffff914e9d64     4  tbnz w2, #0, #+0x98 (addr 0xffff914e9dfc)
0xffff914e9d68     8  asr x6, x2, #32
0xffff914e9d6c    12  add x5, x4, #0x17 (23)
0xffff914e9d70    16  ldr x7, [x5, w6, sxtw #3]
0xffff914e9d74    20  ldr x4, pc+316 (addr 0x0000ffff914e9eb0)    ;; object: 0x49b04241 <undefined>
0xffff914e9d78    24  cmp x7, x4
0xffff914e9d7c    28  b.eq #+0x7c (addr 0xffff914e9df8)
0xffff914e9d80    32  ldur x4, [x7, #7]
0xffff914e9d84    36  ldur x5, [x4, #-1]
0xffff914e9d88    40  ldrb w6, [x5, #7]
0xffff914e9d8c    44  cmp w6, #0x4 (4)
0xffff914e9d90    48  b.ne #+0x68 (addr 0xffff914e9df8)
0xffff914e9d94    52  movz x1, #0xf2c0
0xffff914e9d98    56  movk x1, #0x4117, lsl #16
0xffff914e9d9c    60  ldp x2, x0, [x1]
0xffff914e9da0    64  adds x16, x2, #0x30 (48)
0xffff914e9da4    68  ccmp x16, x0, #nzCv, lo
0xffff914e9da8    72  b.hi #+0x9c (addr 0xffff914e9e44)
0xffff914e9dac    76  str x16, [x1]
0xffff914e9db0    80  orr x2, x2, #0x1
0xffff914e9db4    84  stur x5, [x2, #-1]
0xffff914e9db8    88  ldur x0, [x4, #7]
0xffff914e9dbc    92  stur x0, [x2, #7]
0xffff914e9dc0    96  ldur x0, [x4, #15]
0xffff914e9dc4   100  stur x0, [x2, #15]
0xffff914e9dc8   104  ldur x0, [x4, #23]
0xffff914e9dcc   108  stur x0, [x2, #23]
0xffff914e9dd0   112  add x0, x2, #0x20 (32)
0xffff914e9dd4   116  ldr x1, pc+228 (addr 0x0000ffff914e9eb8)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e9dd8   120  stur x1, [x0, #-1]
0xffff914e9ddc   124  stur x7, [x0, #7]
0xffff914e9de0   128  ldur w0, [x7, #35]
0xffff914e9de4   132  add w0, w0, #0x1 (1)
0xffff914e9de8   136  lsl x0, x0, #32
0xffff914e9dec   140  stur x0, [x7, #31]
0xffff914e9df0   144  mov x0, x2
0xffff914e9df4   148  ret
0xffff914e9df8   152  b #+0xe0 (addr 0xffff914e9ed8)
0xffff914e9dfc   156  sub csp, jssp, #0x10 (16)
0xffff914e9e00   160  stp fp, lr, [jssp, #-16]!
0xffff914e9e04   164  movz fp, #0xa00000000
0xffff914e9e08   168  sub csp, jssp, #0x8 (8)
0xffff914e9e0c   172  str fp, [jssp, #-8]!
0xffff914e9e10   176  add fp, jssp, #0x8 (8)
0xffff914e9e14   180  ldur x16, [x2, #-1]
0xffff914e9e18   184  ldr x17, [x26, #120]
0xffff914e9e1c   188  cmp x16, x17
0xffff914e9e20   192  b.ne #+0xc8 (addr 0xffff914e9ee8)
0xffff914e9e24   196  ldur d29, [x2, #7]
0xffff914e9e28   200  fcvtzs w6, d29
0xffff914e9e2c   204  scvtf d0, w6
0xffff914e9e30   208  fcmp d29, d0
0xffff914e9e34   212  b.ne #+0xb4 (addr 0xffff914e9ee8)
0xffff914e9e38   216  ldr lr, [jssp, #16]
0xffff914e9e3c   220  ldp xzr, fp, [jssp], #24
0xffff914e9e40   224  b #-0xd4 (addr 0xffff914e9d6c)
0xffff914e9e44   228  sub csp, jssp, #0x10 (16)
0xffff914e9e48   232  stp fp, lr, [jssp, #-16]!
0xffff914e9e4c   236  movz fp, #0xa00000000
0xffff914e9e50   240  sub csp, jssp, #0x8 (8)
0xffff914e9e54   244  str fp, [jssp, #-8]!
0xffff914e9e58   248  add fp, jssp, #0x8 (8)
0xffff914e9e5c   252  movz x2, #0x0
0xffff914e9e60   256  mov x16, lr
0xffff914e9e64   260  ldr x17, pc+92 (addr 0x0000ffff914e9ec0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914e9e68   264  blr x17
0xffff914e9e6c   268  movz x0, #0x3000000000
0xffff914e9e70   272  movz x10, #0x0
0xffff914e9e74   276  sub csp, jssp, #0x10 (16)
0xffff914e9e78   280  stp x10, x0, [jssp, #-16]!
0xffff914e9e7c   284  movz x0, #0x2
0xffff914e9e80   288  movz x1, #0x5b88
0xffff914e9e84   292  movk x1, #0xe2, lsl #16
0xffff914e9e88   296  ldr x16, pc+64 (addr 0x0000ffff914e9ec8)    ;; code: STUB, CEntryStub, minor: 5
0xffff914e9e8c   300  blr x16
0xffff914e9e90   304  str x0, [jssp, #16]
0xffff914e9e94   308  ldr x16, pc+60 (addr 0x0000ffff914e9ed0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914e9e98   312  blr x16
0xffff914e9e9c   316  ldr lr, [jssp, #16]
0xffff914e9ea0   320  ldp xzr, fp, [jssp], #24
0xffff914e9ea4   324  b #-0xf0 (addr 0xffff914e9db4)
0xffff914e9ea8   328  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff914e9eac   332  d63f03e0       constant
0xffff914e9eb0   336  49b04241       constant
0xffff914e9eb4   340  00000000       constant
0xffff914e9eb8   344  36405d81       constant
0xffff914e9ebc   348  00000000       constant
0xffff914e9ec0   352  91406820       constant
0xffff914e9ec4   356  0000ffff       constant
0xffff914e9ec8   360  91406260       constant
0xffff914e9ecc   364  0000ffff       constant
0xffff914e9ed0   368  914068e0       constant
0xffff914e9ed4   372  0000ffff       constant
0xffff914e9ed8   376  movz x16, #0x0
0xffff914e9edc   380  sub csp, jssp, #0x10 (16)
0xffff914e9ee0   384  stp fp, lr, [jssp, #-16]!
0xffff914e9ee4   388  bl #+0xc (addr 0xffff914e9ef0)
0xffff914e9ee8   392  movz x16, #0x8
0xffff914e9eec   396  bl #+0x14 (addr 0xffff914e9f00)
0xffff914e9ef0   400  movz x17, #0xa00000000
0xffff914e9ef4   404  sub csp, jssp, #0x10 (16)
0xffff914e9ef8   408  stp x17, cp, [jssp, #-16]!
0xffff914e9efc   412  add fp, jssp, #0x10 (16)
0xffff914e9f00   416  ldr x17, pc+24 (addr 0x0000ffff914e9f18)    ;; lazy deoptimization bailout 0
0xffff914e9f04   420  add x17, x17, x16
0xffff914e9f08   424  br x17
0xffff914e9f0c   428  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914e9f10   432  d63f03e0       constant
0xffff914e9f14   436  d503201f       constant
0xffff914e9f18   440  91206000       constant
0xffff914e9f1c   444  0000ffff       constant


Safepoints (size = 21)
0xffff914e9e90   304  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff914e9d74  embedded object  (0x49b04241 <undefined>)
0xffff914e9dd4  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e9e64  code target (STUB)  (0xffff91406820)
0xffff914e9e88  code target (STUB)  (0xffff91406260)
0xffff914e9e94  code target (STUB)  (0xffff914068e0)
0xffff914e9ea8  constant pool (size 48)
0xffff914e9f00  runtime entry
0xffff914e9f0c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = FastCloneShallowObjectStub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 469)
0xffff914e9d60     0  ldur x4, [x3, #47]
0xffff914e9d64     4  tbnz w2, #0, #+0x98 (addr 0xffff914e9dfc)
0xffff914e9d68     8  asr x6, x2, #32
0xffff914e9d6c    12  add x5, x4, #0x17 (23)
0xffff914e9d70    16  ldr x7, [x5, w6, sxtw #3]
0xffff914e9d74    20  ldr x4, pc+316 (addr 0x0000ffff914e9eb0)    ;; object: 0x49b04241 <undefined>
0xffff914e9d78    24  cmp x7, x4
0xffff914e9d7c    28  b.eq #+0x7c (addr 0xffff914e9df8)
0xffff914e9d80    32  ldur x4, [x7, #7]
0xffff914e9d84    36  ldur x5, [x4, #-1]
0xffff914e9d88    40  ldrb w6, [x5, #7]
0xffff914e9d8c    44  cmp w6, #0x4 (4)
0xffff914e9d90    48  b.ne #+0x68 (addr 0xffff914e9df8)
0xffff914e9d94    52  movz x1, #0xf2c0
0xffff914e9d98    56  movk x1, #0x4117, lsl #16
0xffff914e9d9c    60  ldp x2, x0, [x1]
0xffff914e9da0    64  adds x16, x2, #0x30 (48)
0xffff914e9da4    68  ccmp x16, x0, #nzCv, lo
0xffff914e9da8    72  b.hi #+0x9c (addr 0xffff914e9e44)
0xffff914e9dac    76  str x16, [x1]
0xffff914e9db0    80  orr x2, x2, #0x1
0xffff914e9db4    84  stur x5, [x2, #-1]
0xffff914e9db8    88  ldur x0, [x4, #7]
0xffff914e9dbc    92  stur x0, [x2, #7]
0xffff914e9dc0    96  ldur x0, [x4, #15]
0xffff914e9dc4   100  stur x0, [x2, #15]
0xffff914e9dc8   104  ldur x0, [x4, #23]
0xffff914e9dcc   108  stur x0, [x2, #23]
0xffff914e9dd0   112  add x0, x2, #0x20 (32)
0xffff914e9dd4   116  ldr x1, pc+228 (addr 0x0000ffff914e9eb8)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914e9dd8   120  stur x1, [x0, #-1]
0xffff914e9ddc   124  stur x7, [x0, #7]
0xffff914e9de0   128  ldur w0, [x7, #35]
0xffff914e9de4   132  add w0, w0, #0x1 (1)
0xffff914e9de8   136  lsl x0, x0, #32
0xffff914e9dec   140  stur x0, [x7, #31]
0xffff914e9df0   144  mov x0, x2
0xffff914e9df4   148  ret
0xffff914e9df8   152  b #+0xe0 (addr 0xffff914e9ed8)
0xffff914e9dfc   156  sub csp, jssp, #0x10 (16)
0xffff914e9e00   160  stp fp, lr, [jssp, #-16]!
0xffff914e9e04   164  movz fp, #0xa00000000
0xffff914e9e08   168  sub csp, jssp, #0x8 (8)
0xffff914e9e0c   172  str fp, [jssp, #-8]!
0xffff914e9e10   176  add fp, jssp, #0x8 (8)
0xffff914e9e14   180  ldur x16, [x2, #-1]
0xffff914e9e18   184  ldr x17, [x26, #120]
0xffff914e9e1c   188  cmp x16, x17
0xffff914e9e20   192  b.ne #+0xc8 (addr 0xffff914e9ee8)
0xffff914e9e24   196  ldur d29, [x2, #7]
0xffff914e9e28   200  fcvtzs w6, d29
0xffff914e9e2c   204  scvtf d0, w6
0xffff914e9e30   208  fcmp d29, d0
0xffff914e9e34   212  b.ne #+0xb4 (addr 0xffff914e9ee8)
0xffff914e9e38   216  ldr lr, [jssp, #16]
0xffff914e9e3c   220  ldp xzr, fp, [jssp], #24
0xffff914e9e40   224  b #-0xd4 (addr 0xffff914e9d6c)
0xffff914e9e44   228  sub csp, jssp, #0x10 (16)
0xffff914e9e48   232  stp fp, lr, [jssp, #-16]!
0xffff914e9e4c   236  movz fp, #0xa00000000
0xffff914e9e50   240  sub csp, jssp, #0x8 (8)
0xffff914e9e54   244  str fp, [jssp, #-8]!
0xffff914e9e58   248  add fp, jssp, #0x8 (8)
0xffff914e9e5c   252  movz x2, #0x0
0xffff914e9e60   256  mov x16, lr
0xffff914e9e64   260  ldr x17, pc+92 (addr 0x0000ffff914e9ec0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914e9e68   264  blr x17
0xffff914e9e6c   268  movz x0, #0x3000000000
0xffff914e9e70   272  movz x10, #0x0
0xffff914e9e74   276  sub csp, jssp, #0x10 (16)
0xffff914e9e78   280  stp x10, x0, [jssp, #-16]!
0xffff914e9e7c   284  movz x0, #0x2
0xffff914e9e80   288  movz x1, #0x5b88
0xffff914e9e84   292  movk x1, #0xe2, lsl #16
0xffff914e9e88   296  ldr x16, pc+64 (addr 0x0000ffff914e9ec8)    ;; code: STUB, CEntryStub, minor: 5
0xffff914e9e8c   300  blr x16
0xffff914e9e90   304  str x0, [jssp, #16]
0xffff914e9e94   308  ldr x16, pc+60 (addr 0x0000ffff914e9ed0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914e9e98   312  blr x16
0xffff914e9e9c   316  ldr lr, [jssp, #16]
0xffff914e9ea0   320  ldp xzr, fp, [jssp], #24
0xffff914e9ea4   324  b #-0xf0 (addr 0xffff914e9db4)
0xffff914e9ea8   328  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff914e9eac   332  d63f03e0       constant
0xffff914e9eb0   336  49b04241       constant
0xffff914e9eb4   340  00000000       constant
0xffff914e9eb8   344  36405d81       constant
0xffff914e9ebc   348  00000000       constant
0xffff914e9ec0   352  91406820       constant
0xffff914e9ec4   356  0000ffff       constant
0xffff914e9ec8   360  91406260       constant
0xffff914e9ecc   364  0000ffff       constant
0xffff914e9ed0   368  914068e0       constant
0xffff914e9ed4   372  0000ffff       constant
0xffff914e9ed8   376  movz x16, #0x0
0xffff914e9edc   380  sub csp, jssp, #0x10 (16)
0xffff914e9ee0   384  stp fp, lr, [jssp, #-16]!
0xffff914e9ee4   388  bl #+0xc (addr 0xffff914e9ef0)
0xffff914e9ee8   392  movz x16, #0x8
0xffff914e9eec   396  bl #+0x14 (addr 0xffff914e9f00)
0xffff914e9ef0   400  movz x17, #0xa00000000
0xffff914e9ef4   404  sub csp, jssp, #0x10 (16)
0xffff914e9ef8   408  stp x17, cp, [jssp, #-16]!
0xffff914e9efc   412  add fp, jssp, #0x10 (16)
0xffff914e9f00   416  ldr x17, pc+24 (addr 0x0000ffff914e9f18)    ;; lazy deoptimization bailout 0
0xffff914e9f04   420  add x17, x17, x16
0xffff914e9f08   424  br x17
0xffff914e9f0c   428  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914e9f10   432  d63f03e0       constant
0xffff914e9f14   436  d503201f       constant
0xffff914e9f18   440  91206000       constant
0xffff914e9f1c   444  0000ffff       constant


Safepoints (size = 21)
0xffff914e9e90   304  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff914e9d74  embedded object  (0x49b04241 <undefined>)
0xffff914e9dd4  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914e9e64  code target (STUB)  (0xffff91406820)
0xffff914e9e88  code target (STUB)  (0xffff91406260)
0xffff914e9e94  code target (STUB)  (0xffff914068e0)
0xffff914e9ea8  constant pool (size 48)
0xffff914e9f00  runtime entry
0xffff914e9f0c  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*SMI -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 632)
0xffff914ec220     0  tbnz w0, #0, #+0x1d4 (addr 0xffff914ec3f4)
0xffff914ec224     4  orr x16, x1, x0
0xffff914ec228     8  tbnz w16, #0, #+0x10 (addr 0xffff914ec238)
0xffff914ec22c    12  asr x1, x1, #32
0xffff914ec230    16  sub x0, x1, x0, asr #32
0xffff914ec234    20  ret
0xffff914ec238    24  cmp x0, x1
0xffff914ec23c    28  b.ne #+0x30 (addr 0xffff914ec26c)
0xffff914ec240    32  ldur x16, [x0, #-1]
0xffff914ec244    36  ldr x17, [x26, #120]
0xffff914ec248    40  cmp x16, x17
0xffff914ec24c    44  b.eq #+0xc (addr 0xffff914ec258)
0xffff914ec250    48  movz x0, #0x0
0xffff914ec254    52  ret
0xffff914ec258    56  ldur d0, [x0, #7]
0xffff914ec25c    60  fcmp d0, d0
0xffff914ec260    64  b.vc #-0x10 (addr 0xffff914ec250)
0xffff914ec264    68  movn x0, #0x0
0xffff914ec268    72  ret
0xffff914ec26c    76  and x16, x1, x0
0xffff914ec270    80  tbnz w16, #0, #+0x64 (addr 0xffff914ec2d4)
0xffff914ec274    84  tbz w0, #0, #+0x24 (addr 0xffff914ec298)
0xffff914ec278    88  ldur x16, [x0, #-1]
0xffff914ec27c    92  ldr x17, [x26, #120]
0xffff914ec280    96  cmp x16, x17
0xffff914ec284   100  b.eq #+0x8 (addr 0xffff914ec28c)
0xffff914ec288   104  ret
0xffff914ec28c   108  ldur d0, [x0, #7]
0xffff914ec290   112  scvtf d1, x1, #32
0xffff914ec294   116  b #+0x24 (addr 0xffff914ec2b8)
0xffff914ec298   120  ldur x16, [x1, #-1]
0xffff914ec29c   124  ldr x17, [x26, #120]
0xffff914ec2a0   128  cmp x16, x17
0xffff914ec2a4   132  b.eq #+0xc (addr 0xffff914ec2b0)
0xffff914ec2a8   136  movz x0, #0x1
0xffff914ec2ac   140  ret
0xffff914ec2b0   144  ldur d1, [x1, #7]
0xffff914ec2b4   148  scvtf d0, x0, #32
0xffff914ec2b8   152  fcmp d1, d0
0xffff914ec2bc   156  b.vs #+0x10 (addr 0xffff914ec2cc)
0xffff914ec2c0   160  cset x0, gt
0xffff914ec2c4   164  csinv x0, x0, xzr, ge
0xffff914ec2c8   168  ret
0xffff914ec2cc   172  movn x0, #0x0
0xffff914ec2d0   176  ret
0xffff914ec2d4   180  ldur x10, [x0, #-1]
0xffff914ec2d8   184  ldur x12, [x1, #-1]
0xffff914ec2dc   188  ldrb w11, [x10, #11]
0xffff914ec2e0   192  ldrb w13, [x12, #11]
0xffff914ec2e4   196  cmp x11, #0xb1 (177)
0xffff914ec2e8   200  b.lt #+0x8 (addr 0xffff914ec2f0)
0xffff914ec2ec   204  ret
0xffff914ec2f0   208  cmp x11, #0x83 (131)
0xffff914ec2f4   212  movz x16, #0x83
0xffff914ec2f8   216  ccmp x13, x16, #nZcv, ne
0xffff914ec2fc   220  movz x16, #0xb1
0xffff914ec300   224  ccmp x13, x16, #NzcV, ne
0xffff914ec304   228  b.ge #-0x18 (addr 0xffff914ec2ec)
0xffff914ec308   232  orr x14, x13, x11
0xffff914ec30c   236  tst x14, #0xc0
0xffff914ec310   240  b.eq #-0x24 (addr 0xffff914ec2ec)
0xffff914ec314   244  cmp x11, #0x81 (129)
0xffff914ec318   248  b.ne #+0x18 (addr 0xffff914ec330)
0xffff914ec31c   252  cmp x12, x10
0xffff914ec320   256  b.ne #+0x10 (addr 0xffff914ec330)
0xffff914ec324   260  ldur d1, [x1, #7]
0xffff914ec328   264  ldur d0, [x0, #7]
0xffff914ec32c   268  b #-0x74 (addr 0xffff914ec2b8)
0xffff914ec330   272  movz x16, #0x87
0xffff914ec334   276  and x14, x13, x16
0xffff914ec338   280  movz x16, #0x87
0xffff914ec33c   284  and x15, x11, x16
0xffff914ec340   288  cmp x14, #0x4 (4)
0xffff914ec344   292  ccmp x15, #4, #nzcv, eq
0xffff914ec348   296  b.ne #+0x5c (addr 0xffff914ec3a4)
0xffff914ec34c   300  ldur x10, [x1, #15]
0xffff914ec350   304  ldur x11, [x0, #15]
0xffff914ec354   308  cmp x10, x11
0xffff914ec358   312  b.eq #+0xc (addr 0xffff914ec364)
0xffff914ec35c   316  movz x0, #0x100000000
0xffff914ec360   320  ret
0xffff914ec364   324  cbnz x10, #+0xc (addr 0xffff914ec370)
0xffff914ec368   328  movz x0, #0x0
0xffff914ec36c   332  ret
0xffff914ec370   336  asr x10, x10, #32
0xffff914ec374   340  add x11, x10, #0x17 (23)
0xffff914ec378   344  add x1, x1, x11
0xffff914ec37c   348  add x0, x0, x11
0xffff914ec380   352  neg x10, x10
0xffff914ec384   356  ldrb w11, [x1, x10]
0xffff914ec388   360  ldrb w12, [x0, x10]
0xffff914ec38c   364  cmp x11, x12
0xffff914ec390   368  b.ne #-0x34 (addr 0xffff914ec35c)
0xffff914ec394   372  add x10, x10, #0x1 (1)
0xffff914ec398   376  cbnz x10, #-0x14 (addr 0xffff914ec384)
0xffff914ec39c   380  movz x0, #0x0
0xffff914ec3a0   384  ret
0xffff914ec3a4   388  movz x16, #0xc00000000
0xffff914ec3a8   392  sub csp, jssp, #0x10 (16)
0xffff914ec3ac   396  stp fp, lr, [jssp, #-16]!
0xffff914ec3b0   400  sub csp, jssp, #0x10 (16)
0xffff914ec3b4   404  str x16, [jssp, #-8]!
0xffff914ec3b8   408  ldr x17, pc+176 (addr 0x0000ffff914ec468)    ;; object: 0xffff914ec1c1 <Code: COMPARE_IC>
0xffff914ec3bc   412  sub csp, jssp, #0x10 (16)
0xffff914ec3c0   416  str x17, [jssp, #-8]!
0xffff914ec3c4   420  add fp, jssp, #0x10 (16)
0xffff914ec3c8   424  sub csp, jssp, #0x10 (16)
0xffff914ec3cc   428  stp x0, x1, [jssp, #-16]!
0xffff914ec3d0   432  movz x0, #0x2
0xffff914ec3d4   436  ldr x1, pc+156 (addr 0x0000ffff914ec470)    ;; external reference (Runtime::StrictEqual)
0xffff914ec3d8   440  ldr x16, pc+160 (addr 0x0000ffff914ec478)    ;; code: STUB, CEntryStub, minor: 4
0xffff914ec3dc   444  blr x16
0xffff914ec3e0   448  mov jssp, fp
0xffff914ec3e4   452  ldp fp, lr, [jssp], #16
0xffff914ec3e8   456  ldr x1, [x26, #64]
0xffff914ec3ec   460  sub x0, x0, x1
0xffff914ec3f0   464  ret
0xffff914ec3f4   468  movz x16, #0xc00000000
0xffff914ec3f8   472  sub csp, jssp, #0x10 (16)
0xffff914ec3fc   476  stp fp, lr, [jssp, #-16]!
0xffff914ec400   480  sub csp, jssp, #0x10 (16)
0xffff914ec404   484  str x16, [jssp, #-8]!
0xffff914ec408   488  ldr x17, pc+120 (addr 0x0000ffff914ec480)    ;; object: 0xffff914ec1c1 <Code: COMPARE_IC>
0xffff914ec40c   492  sub csp, jssp, #0x10 (16)
0xffff914ec410   496  str x17, [jssp, #-8]!
0xffff914ec414   500  add fp, jssp, #0x10 (16)
0xffff914ec418   504  sub csp, jssp, #0x18 (24)
0xffff914ec41c   508  stp lr, x0, [jssp, #-24]!
0xffff914ec420   512  str x1, [jssp, #16]
0xffff914ec424   516  movz x10, #0x2f00000000
0xffff914ec428   520  sub csp, jssp, #0x18 (24)
0xffff914ec42c   524  stp x10, x0, [jssp, #-24]!
0xffff914ec430   528  str x1, [jssp, #16]
0xffff914ec434   532  movz x0, #0x3
0xffff914ec438   536  ldr x1, pc+80 (addr 0x0000ffff914ec488)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914ec43c   540  ldr x16, pc+84 (addr 0x0000ffff914ec490)    ;; code: STUB, CEntryStub, minor: 4
0xffff914ec440   544  blr x16
0xffff914ec444   548  add x11, x0, #0x5f (95)
0xffff914ec448   552  ldr x1, [jssp, #16]
0xffff914ec44c   556  ldp lr, x0, [jssp], #24
0xffff914ec450   560  mov jssp, fp
0xffff914ec454   564  ldp fp, lr, [jssp], #16
0xffff914ec458   568  br x11
0xffff914ec45c   572  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914ec460   576  d63f03e0       constant
0xffff914ec464   580  d503201f       constant
0xffff914ec468   584  914ec1c1       constant
0xffff914ec46c   588  0000ffff       constant
0xffff914ec470   592  00e50928       constant
0xffff914ec474   596  00000000       constant
0xffff914ec478   600  91406060       constant
0xffff914ec47c   604  0000ffff       constant
0xffff914ec480   608  914ec1c1       constant
0xffff914ec484   612  0000ffff       constant
0xffff914ec488   616  00c8a980       constant
0xffff914ec48c   620  00000000       constant
0xffff914ec490   624  91406060       constant
0xffff914ec494   628  0000ffff       constant


RelocInfo (size = 16)
0xffff914ec3b8  embedded object  (0xffff914ec1c1 <Code: COMPARE_IC>)
0xffff914ec3d4  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff914ec3d8  code target (STUB)  (0xffff91406060)
0xffff914ec408  embedded object  (0xffff914ec1c1 <Code: COMPARE_IC>)
0xffff914ec438  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914ec43c  code target (STUB)  (0xffff91406060)
0xffff914ec45c  constant pool (size 60)


kind = HANDLER
major_key = <NoCache>Stub
name = domain
compiler = unknown
Instructions (size = 152)
0xffff914ec8e0     0  sub csp, jssp, #0x8 (8)
0xffff914ec8e4     4  str x3, [jssp, #-8]!
0xffff914ec8e8     8  sub csp, jssp, #0x8 (8)
0xffff914ec8ec    12  str x4, [jssp, #-8]!
0xffff914ec8f0    16  ldr x3, pc+88 (addr 0x0000ffff914ec948)    ;; object: 0x408d22a1 Cell for 0
0xffff914ec8f4    20  ldur x3, [x3, #7]
0xffff914ec8f8    24  cmp x3, #0x0 (0)
0xffff914ec8fc    28  b.ne #+0x30 (addr 0xffff914ec92c)
0xffff914ec900    32  tbz w0, #0, #+0x2c (addr 0xffff914ec92c)
0xffff914ec904    36  ldr x5, pc+76 (addr 0x0000ffff914ec950)    ;; object: 0x408d21e1 WeakCell for 0x36438a21 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914ec908    40  ldur x5, [x5, #7]
0xffff914ec90c    44  tbz w5, #0, #+0x20 (addr 0xffff914ec92c)
0xffff914ec910    48  ldursw x4, [x5, #15]
0xffff914ec914    52  tbnz w4, #23, #+0x18 (addr 0xffff914ec92c)
0xffff914ec918    56  ldr x4, [jssp], #8
0xffff914ec91c    60  ldr x3, [jssp], #8
0xffff914ec920    64  ldr x2, pc+56 (addr 0x0000ffff914ec958)    ;; object: 0x49bb2439 <String[6]: domain>
0xffff914ec924    68  ldr x16, pc+60 (addr 0x0000ffff914ec960)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff914ec928    72  br x16
0xffff914ec92c    76  ldr x2, pc+60 (addr 0x0000ffff914ec968)    ;; object: 0x49bb2439 <String[6]: domain>
0xffff914ec930    80  ldr x4, [jssp], #8
0xffff914ec934    84  ldr x3, [jssp], #8
0xffff914ec938    88  ldr x16, pc+56 (addr 0x0000ffff914ec970)    ;; code: BUILTIN
0xffff914ec93c    92  br x16
0xffff914ec940    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914ec944   100  d63f03e0       constant
0xffff914ec948   104  408d22a1       constant
0xffff914ec94c   108  00000000       constant
0xffff914ec950   112  408d21e1       constant
0xffff914ec954   116  00000000       constant
0xffff914ec958   120  49bb2439       constant
0xffff914ec95c   124  00000000       constant
0xffff914ec960   128  9148bdc0       constant
0xffff914ec964   132  0000ffff       constant
0xffff914ec968   136  49bb2439       constant
0xffff914ec96c   140  00000000       constant
0xffff914ec970   144  91422420       constant
0xffff914ec974   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914ec8f0  embedded object  (0x408d22a1 Cell for 0)
0xffff914ec904  embedded object  (0x408d21e1 WeakCell for 0x36438a21 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914ec920  embedded object  (0x49bb2439 <String[6]: domain>)
0xffff914ec924  code target (HANDLER)  (0xffff9148bdc0)
0xffff914ec92c  embedded object  (0x49bb2439 <String[6]: domain>)
0xffff914ec938  code target (BUILTIN)  (0xffff91422420)
0xffff914ec940  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = _events
compiler = unknown
Instructions (size = 120)
0xffff914ec9e0     0  sub csp, jssp, #0x8 (8)
0xffff914ec9e4     4  str x3, [jssp, #-8]!
0xffff914ec9e8     8  sub csp, jssp, #0x8 (8)
0xffff914ec9ec    12  str x0, [jssp, #-8]!
0xffff914ec9f0    16  ldr x0, pc+72 (addr 0x0000ffff914eca38)    ;; object: 0x408d22a1 Cell for 0
0xffff914ec9f4    20  ldur x0, [x0, #7]
0xffff914ec9f8    24  cmp x0, #0x0 (0)
0xffff914ec9fc    28  b.ne #+0x14 (addr 0xffff914eca10)
0xffff914eca00    32  ldr x3, pc+64 (addr 0x0000ffff914eca40)    ;; object: 0x408d22d1 WeakCell for 0x408acf51 <an Object with map 0x3641bf39>
0xffff914eca04    36  ldur x3, [x3, #7]
0xffff914eca08    40  tbz w3, #0, #+0x8 (addr 0xffff914eca10)
0xffff914eca0c    44  b #+0x14 (addr 0xffff914eca20)
0xffff914eca10    48  ldr x0, [jssp], #8
0xffff914eca14    52  ldr x3, [jssp], #8
0xffff914eca18    56  ldr x16, pc+48 (addr 0x0000ffff914eca48)    ;; code: BUILTIN
0xffff914eca1c    60  br x16
0xffff914eca20    64  add jssp, jssp, #0x10 (16)
0xffff914eca24    68  mov x1, x3
0xffff914eca28    72  ldr x16, pc+40 (addr 0x0000ffff914eca50)    ;; code: HANDLER, LoadFieldStub, minor: 2052
0xffff914eca2c    76  br x16
0xffff914eca30    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914eca34    84  d63f03e0       constant
0xffff914eca38    88  408d22a1       constant
0xffff914eca3c    92  00000000       constant
0xffff914eca40    96  408d22d1       constant
0xffff914eca44   100  00000000       constant
0xffff914eca48   104  914222e0       constant
0xffff914eca4c   108  0000ffff       constant
0xffff914eca50   112  91478da0       constant
0xffff914eca54   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914ec9f0  embedded object  (0x408d22a1 Cell for 0)
0xffff914eca00  embedded object  (0x408d22d1 WeakCell for 0x408acf51 <an Object with map 0x3641bf39>)
0xffff914eca18  code target (BUILTIN)  (0xffff914222e0)
0xffff914eca28  code target (HANDLER)  (0xffff91478da0)
0xffff914eca30  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _maxListeners
compiler = unknown
Instructions (size = 120)
0xffff914ecbe0     0  sub csp, jssp, #0x8 (8)
0xffff914ecbe4     4  str x3, [jssp, #-8]!
0xffff914ecbe8     8  sub csp, jssp, #0x8 (8)
0xffff914ecbec    12  str x0, [jssp, #-8]!
0xffff914ecbf0    16  ldr x0, pc+72 (addr 0x0000ffff914ecc38)    ;; object: 0x408d22a1 Cell for 0
0xffff914ecbf4    20  ldur x0, [x0, #7]
0xffff914ecbf8    24  cmp x0, #0x0 (0)
0xffff914ecbfc    28  b.ne #+0x14 (addr 0xffff914ecc10)
0xffff914ecc00    32  ldr x3, pc+64 (addr 0x0000ffff914ecc40)    ;; object: 0x408d2419 WeakCell for 0x408acf51 <an Object with map 0x3641bf39>
0xffff914ecc04    36  ldur x3, [x3, #7]
0xffff914ecc08    40  tbz w3, #0, #+0x8 (addr 0xffff914ecc10)
0xffff914ecc0c    44  b #+0x14 (addr 0xffff914ecc20)
0xffff914ecc10    48  ldr x0, [jssp], #8
0xffff914ecc14    52  ldr x3, [jssp], #8
0xffff914ecc18    56  ldr x16, pc+48 (addr 0x0000ffff914ecc48)    ;; code: BUILTIN
0xffff914ecc1c    60  br x16
0xffff914ecc20    64  add jssp, jssp, #0x10 (16)
0xffff914ecc24    68  mov x1, x3
0xffff914ecc28    72  ldr x16, pc+40 (addr 0x0000ffff914ecc50)    ;; code: HANDLER, LoadFieldStub, minor: 2053
0xffff914ecc2c    76  br x16
0xffff914ecc30    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914ecc34    84  d63f03e0       constant
0xffff914ecc38    88  408d22a1       constant
0xffff914ecc3c    92  00000000       constant
0xffff914ecc40    96  408d2419       constant
0xffff914ecc44   100  00000000       constant
0xffff914ecc48   104  914222e0       constant
0xffff914ecc4c   108  0000ffff       constant
0xffff914ecc50   112  91478e20       constant
0xffff914ecc54   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914ecbf0  embedded object  (0x408d22a1 Cell for 0)
0xffff914ecc00  embedded object  (0x408d2419 WeakCell for 0x408acf51 <an Object with map 0x3641bf39>)
0xffff914ecc18  code target (BUILTIN)  (0xffff914222e0)
0xffff914ecc28  code target (HANDLER)  (0xffff91478e20)
0xffff914ecc30  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _maxListeners
compiler = unknown
Instructions (size = 152)
0xffff914eccc0     0  sub csp, jssp, #0x8 (8)
0xffff914eccc4     4  str x3, [jssp, #-8]!
0xffff914eccc8     8  sub csp, jssp, #0x8 (8)
0xffff914ecccc    12  str x4, [jssp, #-8]!
0xffff914eccd0    16  ldr x3, pc+88 (addr 0x0000ffff914ecd28)    ;; object: 0x408d22a1 Cell for 0
0xffff914eccd4    20  ldur x3, [x3, #7]
0xffff914eccd8    24  cmp x3, #0x0 (0)
0xffff914eccdc    28  b.ne #+0x30 (addr 0xffff914ecd0c)
0xffff914ecce0    32  tbz w0, #0, #+0x2c (addr 0xffff914ecd0c)
0xffff914ecce4    36  ldr x5, pc+76 (addr 0x0000ffff914ecd30)    ;; object: 0x408d2451 WeakCell for 0x36438b81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914ecce8    40  ldur x5, [x5, #7]
0xffff914eccec    44  tbz w5, #0, #+0x20 (addr 0xffff914ecd0c)
0xffff914eccf0    48  ldursw x4, [x5, #15]
0xffff914eccf4    52  tbnz w4, #23, #+0x18 (addr 0xffff914ecd0c)
0xffff914eccf8    56  ldr x4, [jssp], #8
0xffff914eccfc    60  ldr x3, [jssp], #8
0xffff914ecd00    64  ldr x2, pc+56 (addr 0x0000ffff914ecd38)    ;; object: 0x49bc32b1 <String[13]: _maxListeners>
0xffff914ecd04    68  ldr x16, pc+60 (addr 0x0000ffff914ecd40)    ;; code: HANDLER, StoreTransitionStub, minor: 198664
0xffff914ecd08    72  br x16
0xffff914ecd0c    76  ldr x2, pc+60 (addr 0x0000ffff914ecd48)    ;; object: 0x49bc32b1 <String[13]: _maxListeners>
0xffff914ecd10    80  ldr x4, [jssp], #8
0xffff914ecd14    84  ldr x3, [jssp], #8
0xffff914ecd18    88  ldr x16, pc+56 (addr 0x0000ffff914ecd50)    ;; code: BUILTIN
0xffff914ecd1c    92  br x16
0xffff914ecd20    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914ecd24   100  d63f03e0       constant
0xffff914ecd28   104  408d22a1       constant
0xffff914ecd2c   108  00000000       constant
0xffff914ecd30   112  408d2451       constant
0xffff914ecd34   116  00000000       constant
0xffff914ecd38   120  49bc32b1       constant
0xffff914ecd3c   124  00000000       constant
0xffff914ecd40   128  914e6140       constant
0xffff914ecd44   132  0000ffff       constant
0xffff914ecd48   136  49bc32b1       constant
0xffff914ecd4c   140  00000000       constant
0xffff914ecd50   144  91422420       constant
0xffff914ecd54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914eccd0  embedded object  (0x408d22a1 Cell for 0)
0xffff914ecce4  embedded object  (0x408d2451 WeakCell for 0x36438b81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914ecd00  embedded object  (0x49bc32b1 <String[13]: _maxListeners>)
0xffff914ecd04  code target (HANDLER)  (0xffff914e6140)
0xffff914ecd0c  embedded object  (0x49bc32b1 <String[13]: _maxListeners>)
0xffff914ecd18  code target (BUILTIN)  (0xffff91422420)
0xffff914ecd20  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 96)
0xffff914ecdc0     0  sub csp, jssp, #0x8 (8)
0xffff914ecdc4     4  str x3, [jssp, #-8]!
0xffff914ecdc8     8  sub csp, jssp, #0x8 (8)
0xffff914ecdcc    12  str x0, [jssp, #-8]!
0xffff914ecdd0    16  ldr x0, pc+56 (addr 0x0000ffff914ece08)    ;; object: 0x408d2529 Cell for 0
0xffff914ecdd4    20  ldur x0, [x0, #7]
0xffff914ecdd8    24  cmp x0, #0x0 (0)
0xffff914ecddc    28  b.ne #+0x14 (addr 0xffff914ecdf0)
0xffff914ecde0    32  add jssp, jssp, #0x10 (16)
0xffff914ecde4    36  ldr x0, pc+44 (addr 0x0000ffff914ece10)    ;; object: 0x49b04241 <undefined>
0xffff914ecde8    40  ret
0xffff914ecdec    44  b #+0x14 (addr 0xffff914ece00)
0xffff914ecdf0    48  ldr x0, [jssp], #8
0xffff914ecdf4    52  ldr x3, [jssp], #8
0xffff914ecdf8    56  ldr x16, pc+32 (addr 0x0000ffff914ece18)    ;; code: BUILTIN
0xffff914ecdfc    60  br x16
0xffff914ece00    64  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914ece04    68  d63f03e0       constant
0xffff914ece08    72  408d2529       constant
0xffff914ece0c    76  00000000       constant
0xffff914ece10    80  49b04241       constant
0xffff914ece14    84  00000000       constant
0xffff914ece18    88  914222e0       constant
0xffff914ece1c    92  0000ffff       constant


RelocInfo (size = 9)
0xffff914ecdd0  embedded object  (0x408d2529 Cell for 0)
0xffff914ecde4  embedded object  (0x49b04241 <undefined>)
0xffff914ecdf8  code target (BUILTIN)  (0xffff914222e0)
0xffff914ece00  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = end
compiler = unknown
Instructions (size = 168)
0xffff914ece80     0  sub csp, jssp, #0x8 (8)
0xffff914ece84     4  str x3, [jssp, #-8]!
0xffff914ece88     8  sub csp, jssp, #0x8 (8)
0xffff914ece8c    12  str x4, [jssp, #-8]!
0xffff914ece90    16  ldr x3, pc+104 (addr 0x0000ffff914ecef8)    ;; object: 0x408d2529 Cell for 0
0xffff914ece94    20  ldur x3, [x3, #7]
0xffff914ece98    24  cmp x3, #0x0 (0)
0xffff914ece9c    28  b.ne #+0x3c (addr 0xffff914eced8)
0xffff914ecea0    32  ldr x5, pc+96 (addr 0x0000ffff914ecf00)    ;; object: 0x408d2571 WeakCell for 0x36438ce1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914ecea4    36  ldur x5, [x5, #7]
0xffff914ecea8    40  tbz w5, #0, #+0x30 (addr 0xffff914eced8)
0xffff914eceac    44  ldursw x4, [x5, #15]
0xffff914eceb0    48  tbnz w4, #23, #+0x28 (addr 0xffff914eced8)
0xffff914eceb4    52  ldur x4, [x5, #47]
0xffff914eceb8    56  ldur x4, [x4, #47]
0xffff914ecebc    60  cmp x0, x4
0xffff914ecec0    64  b.ne #+0x18 (addr 0xffff914eced8)
0xffff914ecec4    68  ldr x4, [jssp], #8
0xffff914ecec8    72  ldr x3, [jssp], #8
0xffff914ececc    76  ldr x2, pc+60 (addr 0x0000ffff914ecf08)    ;; object: 0x49b93989 <String[3]: end>
0xffff914eced0    80  ldr x16, pc+64 (addr 0x0000ffff914ecf10)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff914eced4    84  br x16
0xffff914eced8    88  ldr x2, pc+64 (addr 0x0000ffff914ecf18)    ;; object: 0x49b93989 <String[3]: end>
0xffff914ecedc    92  ldr x4, [jssp], #8
0xffff914ecee0    96  ldr x3, [jssp], #8
0xffff914ecee4   100  ldr x16, pc+60 (addr 0x0000ffff914ecf20)    ;; code: BUILTIN
0xffff914ecee8   104  br x16
0xffff914eceec   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914ecef0   112  d63f03e0       constant
0xffff914ecef4   116  d503201f       constant
0xffff914ecef8   120  408d2529       constant
0xffff914ecefc   124  00000000       constant
0xffff914ecf00   128  408d2571       constant
0xffff914ecf04   132  00000000       constant
0xffff914ecf08   136  49b93989       constant
0xffff914ecf0c   140  00000000       constant
0xffff914ecf10   144  9143cea0       constant
0xffff914ecf14   148  0000ffff       constant
0xffff914ecf18   152  49b93989       constant
0xffff914ecf1c   156  00000000       constant
0xffff914ecf20   160  91422420       constant
0xffff914ecf24   164  0000ffff       constant


RelocInfo (size = 12)
0xffff914ece90  embedded object  (0x408d2529 Cell for 0)
0xffff914ecea0  embedded object  (0x408d2571 WeakCell for 0x36438ce1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914ececc  embedded object  (0x49b93989 <String[3]: end>)
0xffff914eced0  code target (HANDLER)  (0xffff9143cea0)
0xffff914eced8  embedded object  (0x49b93989 <String[3]: end>)
0xffff914ecee4  code target (BUILTIN)  (0xffff91422420)
0xffff914eceec  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff914ecfa0     0  mov x5, x0
0xffff914ecfa4     4  tbnz w5, #0, #+0xc (addr 0xffff914ecfb0)
0xffff914ecfa8     8  stur x5, [x1, #55]
0xffff914ecfac    12  ret
0xffff914ecfb0    16  movz x16, #0x0
0xffff914ecfb4    20  sub csp, jssp, #0x10 (16)
0xffff914ecfb8    24  stp fp, lr, [jssp, #-16]!
0xffff914ecfbc    28  bl #+0x4 (addr 0xffff914ecfc0)
0xffff914ecfc0    32  movz x17, #0xa00000000
0xffff914ecfc4    36  sub csp, jssp, #0x10 (16)
0xffff914ecfc8    40  stp x17, cp, [jssp, #-16]!
0xffff914ecfcc    44  add fp, jssp, #0x10 (16)
0xffff914ecfd0    48  ldr x17, pc+24 (addr 0x0000ffff914ecfe8)    ;; lazy deoptimization bailout 0
0xffff914ecfd4    52  add x17, x17, x16
0xffff914ecfd8    56  br x17
0xffff914ecfdc    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914ecfe0    64  d63f03e0       constant
0xffff914ecfe4    68  d503201f       constant
0xffff914ecfe8    72  91206000       constant
0xffff914ecfec    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff914ecfd0  runtime entry
0xffff914ecfdc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff914ecfa0     0  mov x5, x0
0xffff914ecfa4     4  tbnz w5, #0, #+0xc (addr 0xffff914ecfb0)
0xffff914ecfa8     8  stur x5, [x1, #55]
0xffff914ecfac    12  ret
0xffff914ecfb0    16  movz x16, #0x0
0xffff914ecfb4    20  sub csp, jssp, #0x10 (16)
0xffff914ecfb8    24  stp fp, lr, [jssp, #-16]!
0xffff914ecfbc    28  bl #+0x4 (addr 0xffff914ecfc0)
0xffff914ecfc0    32  movz x17, #0xa00000000
0xffff914ecfc4    36  sub csp, jssp, #0x10 (16)
0xffff914ecfc8    40  stp x17, cp, [jssp, #-16]!
0xffff914ecfcc    44  add fp, jssp, #0x10 (16)
0xffff914ecfd0    48  ldr x17, pc+24 (addr 0x0000ffff914ecfe8)    ;; lazy deoptimization bailout 0
0xffff914ecfd4    52  add x17, x17, x16
0xffff914ecfd8    56  br x17
0xffff914ecfdc    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914ecfe0    64  d63f03e0       constant
0xffff914ecfe4    68  d503201f       constant
0xffff914ecfe8    72  91206000       constant
0xffff914ecfec    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff914ecfd0  runtime entry
0xffff914ecfdc  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff914f27a0     0  tbz w0, #0, #+0x50 (addr 0xffff914f27f0)
0xffff914f27a4     4  mov x2, x0
0xffff914f27a8     8  stur x2, [x1, #39]
0xffff914f27ac    12  add x3, x1, #0x27 (39)
0xffff914f27b0    16  and x2, x2, #0xfffffffffff00000
0xffff914f27b4    20  ldr x2, [x2, #8]
0xffff914f27b8    24  tbz w2, #1, #+0x24 (addr 0xffff914f27dc)
0xffff914f27bc    28  and x2, x1, #0xfffffffffff00000
0xffff914f27c0    32  ldr x2, [x2, #8]
0xffff914f27c4    36  tbz w2, #2, #+0x18 (addr 0xffff914f27dc)
0xffff914f27c8    40  sub csp, jssp, #0x8 (8)
0xffff914f27cc    44  str lr, [jssp, #-8]!
0xffff914f27d0    48  ldr x16, pc+24 (addr 0x0000ffff914f27e8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f27d4    52  blr x16
0xffff914f27d8    56  ldr lr, [jssp], #8
0xffff914f27dc    60  ret
0xffff914f27e0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f27e4    68  d63f03e0       constant
0xffff914f27e8    72  914170c0       constant
0xffff914f27ec    76  0000ffff       constant
0xffff914f27f0    80  movz x16, #0x0
0xffff914f27f4    84  sub csp, jssp, #0x10 (16)
0xffff914f27f8    88  stp fp, lr, [jssp, #-16]!
0xffff914f27fc    92  bl #+0x4 (addr 0xffff914f2800)
0xffff914f2800    96  movz x17, #0xa00000000
0xffff914f2804   100  sub csp, jssp, #0x10 (16)
0xffff914f2808   104  stp x17, cp, [jssp, #-16]!
0xffff914f280c   108  add fp, jssp, #0x10 (16)
0xffff914f2810   112  ldr x17, pc+24 (addr 0x0000ffff914f2828)    ;; lazy deoptimization bailout 0
0xffff914f2814   116  add x17, x17, x16
0xffff914f2818   120  br x17
0xffff914f281c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f2820   128  d63f03e0       constant
0xffff914f2824   132  d503201f       constant
0xffff914f2828   136  91206000       constant
0xffff914f282c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f27d0  code target (STUB)  (0xffff914170c0)
0xffff914f27e0  constant pool (size 16)
0xffff914f2810  runtime entry
0xffff914f281c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff914f27a0     0  tbz w0, #0, #+0x50 (addr 0xffff914f27f0)
0xffff914f27a4     4  mov x2, x0
0xffff914f27a8     8  stur x2, [x1, #39]
0xffff914f27ac    12  add x3, x1, #0x27 (39)
0xffff914f27b0    16  and x2, x2, #0xfffffffffff00000
0xffff914f27b4    20  ldr x2, [x2, #8]
0xffff914f27b8    24  tbz w2, #1, #+0x24 (addr 0xffff914f27dc)
0xffff914f27bc    28  and x2, x1, #0xfffffffffff00000
0xffff914f27c0    32  ldr x2, [x2, #8]
0xffff914f27c4    36  tbz w2, #2, #+0x18 (addr 0xffff914f27dc)
0xffff914f27c8    40  sub csp, jssp, #0x8 (8)
0xffff914f27cc    44  str lr, [jssp, #-8]!
0xffff914f27d0    48  ldr x16, pc+24 (addr 0x0000ffff914f27e8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f27d4    52  blr x16
0xffff914f27d8    56  ldr lr, [jssp], #8
0xffff914f27dc    60  ret
0xffff914f27e0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f27e4    68  d63f03e0       constant
0xffff914f27e8    72  914170c0       constant
0xffff914f27ec    76  0000ffff       constant
0xffff914f27f0    80  movz x16, #0x0
0xffff914f27f4    84  sub csp, jssp, #0x10 (16)
0xffff914f27f8    88  stp fp, lr, [jssp, #-16]!
0xffff914f27fc    92  bl #+0x4 (addr 0xffff914f2800)
0xffff914f2800    96  movz x17, #0xa00000000
0xffff914f2804   100  sub csp, jssp, #0x10 (16)
0xffff914f2808   104  stp x17, cp, [jssp, #-16]!
0xffff914f280c   108  add fp, jssp, #0x10 (16)
0xffff914f2810   112  ldr x17, pc+24 (addr 0x0000ffff914f2828)    ;; lazy deoptimization bailout 0
0xffff914f2814   116  add x17, x17, x16
0xffff914f2818   120  br x17
0xffff914f281c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f2820   128  d63f03e0       constant
0xffff914f2824   132  d503201f       constant
0xffff914f2828   136  91206000       constant
0xffff914f282c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f27d0  code target (STUB)  (0xffff914170c0)
0xffff914f27e0  constant pool (size 16)
0xffff914f2810  runtime entry
0xffff914f281c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff914f28a0     0  sub csp, jssp, #0x8 (8)
0xffff914f28a4     4  str x3, [jssp, #-8]!
0xffff914f28a8     8  sub csp, jssp, #0x8 (8)
0xffff914f28ac    12  str x4, [jssp, #-8]!
0xffff914f28b0    16  ldr x3, pc+104 (addr 0x0000ffff914f2918)    ;; object: 0x408e6ec1 Cell for 0
0xffff914f28b4    20  ldur x3, [x3, #7]
0xffff914f28b8    24  cmp x3, #0x0 (0)
0xffff914f28bc    28  b.ne #+0x8 (addr 0xffff914f28c4)
0xffff914f28c0    32  b #+0x18 (addr 0xffff914f28d8)
0xffff914f28c4    36  ldr x2, pc+92 (addr 0x0000ffff914f2920)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff914f28c8    40  ldr x4, [jssp], #8
0xffff914f28cc    44  ldr x3, [jssp], #8
0xffff914f28d0    48  ldr x16, pc+88 (addr 0x0000ffff914f2928)    ;; code: BUILTIN
0xffff914f28d4    52  br x16
0xffff914f28d8    56  add jssp, jssp, #0x10 (16)
0xffff914f28dc    60  ldr x3, pc+84 (addr 0x0000ffff914f2930)    ;; object: 0x49b404a9 <AccessorInfo>
0xffff914f28e0    64  ldr x4, pc+88 (addr 0x0000ffff914f2938)    ;; object: 0x49b05371 <String[9]: prototype>
0xffff914f28e4    68  sub csp, jssp, #0x28 (40)
0xffff914f28e8    72  stp x4, x3, [jssp, #-32]!
0xffff914f28ec    76  stp x1, x1, [jssp, #16]
0xffff914f28f0    80  str x0, [jssp, #-8]!
0xffff914f28f4    84  movz x16, #0x100000000
0xffff914f28f8    88  sub csp, jssp, #0x8 (8)
0xffff914f28fc    92  str x16, [jssp, #-8]!
0xffff914f2900    96  movz x0, #0x6
0xffff914f2904   100  ldr x1, pc+60 (addr 0x0000ffff914f2940)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff914f2908   104  ldr x16, pc+64 (addr 0x0000ffff914f2948)    ;; code: STUB, CEntryStub, minor: 4
0xffff914f290c   108  br x16
0xffff914f2910   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff914f2914   116  d63f03e0       constant
0xffff914f2918   120  408e6ec1       constant
0xffff914f291c   124  00000000       constant
0xffff914f2920   128  49b05371       constant
0xffff914f2924   132  00000000       constant
0xffff914f2928   136  91422420       constant
0xffff914f292c   140  0000ffff       constant
0xffff914f2930   144  49b404a9       constant
0xffff914f2934   148  00000000       constant
0xffff914f2938   152  49b05371       constant
0xffff914f293c   156  00000000       constant
0xffff914f2940   160  00c8b560       constant
0xffff914f2944   164  00000000       constant
0xffff914f2948   168  91406060       constant
0xffff914f294c   172  0000ffff       constant


RelocInfo (size = 14)
0xffff914f28b0  embedded object  (0x408e6ec1 Cell for 0)
0xffff914f28c4  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff914f28d0  code target (BUILTIN)  (0xffff91422420)
0xffff914f28dc  embedded object  (0x49b404a9 <AccessorInfo>)
0xffff914f28e0  embedded object  (0x49b05371 <String[9]: prototype>)
0xffff914f2904  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff914f2908  code target (STUB)  (0xffff91406060)
0xffff914f2910  constant pool (size 64)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f6940     0  tbz w0, #0, #+0x90 (addr 0xffff914f69d0)
0xffff914f6944     4  mov x2, x0
0xffff914f6948     8  stur x2, [x1, #79]
0xffff914f694c    12  add x3, x1, #0x4f (79)
0xffff914f6950    16  and x2, x2, #0xfffffffffff00000
0xffff914f6954    20  ldr x2, [x2, #8]
0xffff914f6958    24  tbz w2, #1, #+0x24 (addr 0xffff914f697c)
0xffff914f695c    28  and x2, x1, #0xfffffffffff00000
0xffff914f6960    32  ldr x2, [x2, #8]
0xffff914f6964    36  tbz w2, #2, #+0x18 (addr 0xffff914f697c)
0xffff914f6968    40  sub csp, jssp, #0x8 (8)
0xffff914f696c    44  str lr, [jssp, #-8]!
0xffff914f6970    48  ldr x16, pc+80 (addr 0x0000ffff914f69c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f6974    52  blr x16
0xffff914f6978    56  ldr lr, [jssp], #8
0xffff914f697c    60  stur x5, [x1, #-1]
0xffff914f6980    64  tbz w5, #0, #+0x34 (addr 0xffff914f69b4)
0xffff914f6984    68  sub x2, x1, #0x1 (1)
0xffff914f6988    72  and x5, x5, #0xfffffffffff00000
0xffff914f698c    76  ldr x5, [x5, #8]
0xffff914f6990    80  tbz w5, #1, #+0x24 (addr 0xffff914f69b4)
0xffff914f6994    84  and x5, x1, #0xfffffffffff00000
0xffff914f6998    88  ldr x5, [x5, #8]
0xffff914f699c    92  tbz w5, #2, #+0x18 (addr 0xffff914f69b4)
0xffff914f69a0    96  sub csp, jssp, #0x8 (8)
0xffff914f69a4   100  str lr, [jssp, #-8]!
0xffff914f69a8   104  ldr x16, pc+32 (addr 0x0000ffff914f69c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f69ac   108  blr x16
0xffff914f69b0   112  ldr lr, [jssp], #8
0xffff914f69b4   116  ret
0xffff914f69b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f69bc   124  d63f03e0       constant
0xffff914f69c0   128  914170c0       constant
0xffff914f69c4   132  0000ffff       constant
0xffff914f69c8   136  91438080       constant
0xffff914f69cc   140  0000ffff       constant
0xffff914f69d0   144  movz x16, #0x0
0xffff914f69d4   148  sub csp, jssp, #0x10 (16)
0xffff914f69d8   152  stp fp, lr, [jssp, #-16]!
0xffff914f69dc   156  bl #+0x4 (addr 0xffff914f69e0)
0xffff914f69e0   160  movz x17, #0xa00000000
0xffff914f69e4   164  sub csp, jssp, #0x10 (16)
0xffff914f69e8   168  stp x17, cp, [jssp, #-16]!
0xffff914f69ec   172  add fp, jssp, #0x10 (16)
0xffff914f69f0   176  ldr x17, pc+24 (addr 0x0000ffff914f6a08)    ;; lazy deoptimization bailout 0
0xffff914f69f4   180  add x17, x17, x16
0xffff914f69f8   184  br x17
0xffff914f69fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f6a00   192  d63f03e0       constant
0xffff914f6a04   196  d503201f       constant
0xffff914f6a08   200  91206000       constant
0xffff914f6a0c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f6970  code target (STUB)  (0xffff914170c0)
0xffff914f69a8  code target (STUB)  (0xffff91438080)
0xffff914f69b8  constant pool (size 24)
0xffff914f69f0  runtime entry
0xffff914f69fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f6940     0  tbz w0, #0, #+0x90 (addr 0xffff914f69d0)
0xffff914f6944     4  mov x2, x0
0xffff914f6948     8  stur x2, [x1, #79]
0xffff914f694c    12  add x3, x1, #0x4f (79)
0xffff914f6950    16  and x2, x2, #0xfffffffffff00000
0xffff914f6954    20  ldr x2, [x2, #8]
0xffff914f6958    24  tbz w2, #1, #+0x24 (addr 0xffff914f697c)
0xffff914f695c    28  and x2, x1, #0xfffffffffff00000
0xffff914f6960    32  ldr x2, [x2, #8]
0xffff914f6964    36  tbz w2, #2, #+0x18 (addr 0xffff914f697c)
0xffff914f6968    40  sub csp, jssp, #0x8 (8)
0xffff914f696c    44  str lr, [jssp, #-8]!
0xffff914f6970    48  ldr x16, pc+80 (addr 0x0000ffff914f69c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f6974    52  blr x16
0xffff914f6978    56  ldr lr, [jssp], #8
0xffff914f697c    60  stur x5, [x1, #-1]
0xffff914f6980    64  tbz w5, #0, #+0x34 (addr 0xffff914f69b4)
0xffff914f6984    68  sub x2, x1, #0x1 (1)
0xffff914f6988    72  and x5, x5, #0xfffffffffff00000
0xffff914f698c    76  ldr x5, [x5, #8]
0xffff914f6990    80  tbz w5, #1, #+0x24 (addr 0xffff914f69b4)
0xffff914f6994    84  and x5, x1, #0xfffffffffff00000
0xffff914f6998    88  ldr x5, [x5, #8]
0xffff914f699c    92  tbz w5, #2, #+0x18 (addr 0xffff914f69b4)
0xffff914f69a0    96  sub csp, jssp, #0x8 (8)
0xffff914f69a4   100  str lr, [jssp, #-8]!
0xffff914f69a8   104  ldr x16, pc+32 (addr 0x0000ffff914f69c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f69ac   108  blr x16
0xffff914f69b0   112  ldr lr, [jssp], #8
0xffff914f69b4   116  ret
0xffff914f69b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f69bc   124  d63f03e0       constant
0xffff914f69c0   128  914170c0       constant
0xffff914f69c4   132  0000ffff       constant
0xffff914f69c8   136  91438080       constant
0xffff914f69cc   140  0000ffff       constant
0xffff914f69d0   144  movz x16, #0x0
0xffff914f69d4   148  sub csp, jssp, #0x10 (16)
0xffff914f69d8   152  stp fp, lr, [jssp, #-16]!
0xffff914f69dc   156  bl #+0x4 (addr 0xffff914f69e0)
0xffff914f69e0   160  movz x17, #0xa00000000
0xffff914f69e4   164  sub csp, jssp, #0x10 (16)
0xffff914f69e8   168  stp x17, cp, [jssp, #-16]!
0xffff914f69ec   172  add fp, jssp, #0x10 (16)
0xffff914f69f0   176  ldr x17, pc+24 (addr 0x0000ffff914f6a08)    ;; lazy deoptimization bailout 0
0xffff914f69f4   180  add x17, x17, x16
0xffff914f69f8   184  br x17
0xffff914f69fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f6a00   192  d63f03e0       constant
0xffff914f6a04   196  d503201f       constant
0xffff914f6a08   200  91206000       constant
0xffff914f6a0c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f6970  code target (STUB)  (0xffff914170c0)
0xffff914f69a8  code target (STUB)  (0xffff91438080)
0xffff914f69b8  constant pool (size 24)
0xffff914f69f0  runtime entry
0xffff914f69fc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = domain
compiler = unknown
Instructions (size = 152)
0xffff914f6a80     0  sub csp, jssp, #0x8 (8)
0xffff914f6a84     4  str x3, [jssp, #-8]!
0xffff914f6a88     8  sub csp, jssp, #0x8 (8)
0xffff914f6a8c    12  str x4, [jssp, #-8]!
0xffff914f6a90    16  ldr x3, pc+88 (addr 0x0000ffff914f6ae8)    ;; object: 0x408e95a9 Cell for 0
0xffff914f6a94    20  ldur x3, [x3, #7]
0xffff914f6a98    24  cmp x3, #0x0 (0)
0xffff914f6a9c    28  b.ne #+0x30 (addr 0xffff914f6acc)
0xffff914f6aa0    32  tbz w0, #0, #+0x2c (addr 0xffff914f6acc)
0xffff914f6aa4    36  ldr x5, pc+76 (addr 0x0000ffff914f6af0)    ;; object: 0x408e9491 WeakCell for 0x36440429 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f6aa8    40  ldur x5, [x5, #7]
0xffff914f6aac    44  tbz w5, #0, #+0x20 (addr 0xffff914f6acc)
0xffff914f6ab0    48  ldursw x4, [x5, #15]
0xffff914f6ab4    52  tbnz w4, #23, #+0x18 (addr 0xffff914f6acc)
0xffff914f6ab8    56  ldr x4, [jssp], #8
0xffff914f6abc    60  ldr x3, [jssp], #8
0xffff914f6ac0    64  ldr x2, pc+56 (addr 0x0000ffff914f6af8)    ;; object: 0x49bb2439 <String[6]: domain>
0xffff914f6ac4    68  ldr x16, pc+60 (addr 0x0000ffff914f6b00)    ;; code: HANDLER, StoreTransitionStub, minor: 198666
0xffff914f6ac8    72  br x16
0xffff914f6acc    76  ldr x2, pc+60 (addr 0x0000ffff914f6b08)    ;; object: 0x49bb2439 <String[6]: domain>
0xffff914f6ad0    80  ldr x4, [jssp], #8
0xffff914f6ad4    84  ldr x3, [jssp], #8
0xffff914f6ad8    88  ldr x16, pc+56 (addr 0x0000ffff914f6b10)    ;; code: BUILTIN
0xffff914f6adc    92  br x16
0xffff914f6ae0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f6ae4   100  d63f03e0       constant
0xffff914f6ae8   104  408e95a9       constant
0xffff914f6aec   108  00000000       constant
0xffff914f6af0   112  408e9491       constant
0xffff914f6af4   116  00000000       constant
0xffff914f6af8   120  49bb2439       constant
0xffff914f6afc   124  00000000       constant
0xffff914f6b00   128  914f6940       constant
0xffff914f6b04   132  0000ffff       constant
0xffff914f6b08   136  49bb2439       constant
0xffff914f6b0c   140  00000000       constant
0xffff914f6b10   144  91422420       constant
0xffff914f6b14   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f6a90  embedded object  (0x408e95a9 Cell for 0)
0xffff914f6aa4  embedded object  (0x408e9491 WeakCell for 0x36440429 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f6ac0  embedded object  (0x49bb2439 <String[6]: domain>)
0xffff914f6ac4  code target (HANDLER)  (0xffff914f6940)
0xffff914f6acc  embedded object  (0x49bb2439 <String[6]: domain>)
0xffff914f6ad8  code target (BUILTIN)  (0xffff91422420)
0xffff914f6ae0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = _events
compiler = unknown
Instructions (size = 120)
0xffff914f6b80     0  sub csp, jssp, #0x8 (8)
0xffff914f6b84     4  str x3, [jssp, #-8]!
0xffff914f6b88     8  sub csp, jssp, #0x8 (8)
0xffff914f6b8c    12  str x0, [jssp, #-8]!
0xffff914f6b90    16  ldr x0, pc+72 (addr 0x0000ffff914f6bd8)    ;; object: 0x408e95a9 Cell for 0
0xffff914f6b94    20  ldur x0, [x0, #7]
0xffff914f6b98    24  cmp x0, #0x0 (0)
0xffff914f6b9c    28  b.ne #+0x14 (addr 0xffff914f6bb0)
0xffff914f6ba0    32  ldr x3, pc+64 (addr 0x0000ffff914f6be0)    ;; object: 0x408e9691 WeakCell for 0x408acf51 <an Object with map 0x3641bf39>
0xffff914f6ba4    36  ldur x3, [x3, #7]
0xffff914f6ba8    40  tbz w3, #0, #+0x8 (addr 0xffff914f6bb0)
0xffff914f6bac    44  b #+0x14 (addr 0xffff914f6bc0)
0xffff914f6bb0    48  ldr x0, [jssp], #8
0xffff914f6bb4    52  ldr x3, [jssp], #8
0xffff914f6bb8    56  ldr x16, pc+48 (addr 0x0000ffff914f6be8)    ;; code: BUILTIN
0xffff914f6bbc    60  br x16
0xffff914f6bc0    64  add jssp, jssp, #0x10 (16)
0xffff914f6bc4    68  mov x1, x3
0xffff914f6bc8    72  ldr x16, pc+40 (addr 0x0000ffff914f6bf0)    ;; code: HANDLER, LoadFieldStub, minor: 2052
0xffff914f6bcc    76  br x16
0xffff914f6bd0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914f6bd4    84  d63f03e0       constant
0xffff914f6bd8    88  408e95a9       constant
0xffff914f6bdc    92  00000000       constant
0xffff914f6be0    96  408e9691       constant
0xffff914f6be4   100  00000000       constant
0xffff914f6be8   104  914222e0       constant
0xffff914f6bec   108  0000ffff       constant
0xffff914f6bf0   112  91478da0       constant
0xffff914f6bf4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914f6b90  embedded object  (0x408e95a9 Cell for 0)
0xffff914f6ba0  embedded object  (0x408e9691 WeakCell for 0x408acf51 <an Object with map 0x3641bf39>)
0xffff914f6bb8  code target (BUILTIN)  (0xffff914222e0)
0xffff914f6bc8  code target (HANDLER)  (0xffff91478da0)
0xffff914f6bd0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f6c60     0  tbz w0, #0, #+0x90 (addr 0xffff914f6cf0)
0xffff914f6c64     4  mov x2, x0
0xffff914f6c68     8  stur x2, [x1, #87]
0xffff914f6c6c    12  add x3, x1, #0x57 (87)
0xffff914f6c70    16  and x2, x2, #0xfffffffffff00000
0xffff914f6c74    20  ldr x2, [x2, #8]
0xffff914f6c78    24  tbz w2, #1, #+0x24 (addr 0xffff914f6c9c)
0xffff914f6c7c    28  and x2, x1, #0xfffffffffff00000
0xffff914f6c80    32  ldr x2, [x2, #8]
0xffff914f6c84    36  tbz w2, #2, #+0x18 (addr 0xffff914f6c9c)
0xffff914f6c88    40  sub csp, jssp, #0x8 (8)
0xffff914f6c8c    44  str lr, [jssp, #-8]!
0xffff914f6c90    48  ldr x16, pc+80 (addr 0x0000ffff914f6ce0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f6c94    52  blr x16
0xffff914f6c98    56  ldr lr, [jssp], #8
0xffff914f6c9c    60  stur x5, [x1, #-1]
0xffff914f6ca0    64  tbz w5, #0, #+0x34 (addr 0xffff914f6cd4)
0xffff914f6ca4    68  sub x2, x1, #0x1 (1)
0xffff914f6ca8    72  and x5, x5, #0xfffffffffff00000
0xffff914f6cac    76  ldr x5, [x5, #8]
0xffff914f6cb0    80  tbz w5, #1, #+0x24 (addr 0xffff914f6cd4)
0xffff914f6cb4    84  and x5, x1, #0xfffffffffff00000
0xffff914f6cb8    88  ldr x5, [x5, #8]
0xffff914f6cbc    92  tbz w5, #2, #+0x18 (addr 0xffff914f6cd4)
0xffff914f6cc0    96  sub csp, jssp, #0x8 (8)
0xffff914f6cc4   100  str lr, [jssp, #-8]!
0xffff914f6cc8   104  ldr x16, pc+32 (addr 0x0000ffff914f6ce8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f6ccc   108  blr x16
0xffff914f6cd0   112  ldr lr, [jssp], #8
0xffff914f6cd4   116  ret
0xffff914f6cd8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f6cdc   124  d63f03e0       constant
0xffff914f6ce0   128  914170c0       constant
0xffff914f6ce4   132  0000ffff       constant
0xffff914f6ce8   136  91438080       constant
0xffff914f6cec   140  0000ffff       constant
0xffff914f6cf0   144  movz x16, #0x0
0xffff914f6cf4   148  sub csp, jssp, #0x10 (16)
0xffff914f6cf8   152  stp fp, lr, [jssp, #-16]!
0xffff914f6cfc   156  bl #+0x4 (addr 0xffff914f6d00)
0xffff914f6d00   160  movz x17, #0xa00000000
0xffff914f6d04   164  sub csp, jssp, #0x10 (16)
0xffff914f6d08   168  stp x17, cp, [jssp, #-16]!
0xffff914f6d0c   172  add fp, jssp, #0x10 (16)
0xffff914f6d10   176  ldr x17, pc+24 (addr 0x0000ffff914f6d28)    ;; lazy deoptimization bailout 0
0xffff914f6d14   180  add x17, x17, x16
0xffff914f6d18   184  br x17
0xffff914f6d1c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f6d20   192  d63f03e0       constant
0xffff914f6d24   196  d503201f       constant
0xffff914f6d28   200  91206000       constant
0xffff914f6d2c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f6c90  code target (STUB)  (0xffff914170c0)
0xffff914f6cc8  code target (STUB)  (0xffff91438080)
0xffff914f6cd8  constant pool (size 24)
0xffff914f6d10  runtime entry
0xffff914f6d1c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f6c60     0  tbz w0, #0, #+0x90 (addr 0xffff914f6cf0)
0xffff914f6c64     4  mov x2, x0
0xffff914f6c68     8  stur x2, [x1, #87]
0xffff914f6c6c    12  add x3, x1, #0x57 (87)
0xffff914f6c70    16  and x2, x2, #0xfffffffffff00000
0xffff914f6c74    20  ldr x2, [x2, #8]
0xffff914f6c78    24  tbz w2, #1, #+0x24 (addr 0xffff914f6c9c)
0xffff914f6c7c    28  and x2, x1, #0xfffffffffff00000
0xffff914f6c80    32  ldr x2, [x2, #8]
0xffff914f6c84    36  tbz w2, #2, #+0x18 (addr 0xffff914f6c9c)
0xffff914f6c88    40  sub csp, jssp, #0x8 (8)
0xffff914f6c8c    44  str lr, [jssp, #-8]!
0xffff914f6c90    48  ldr x16, pc+80 (addr 0x0000ffff914f6ce0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f6c94    52  blr x16
0xffff914f6c98    56  ldr lr, [jssp], #8
0xffff914f6c9c    60  stur x5, [x1, #-1]
0xffff914f6ca0    64  tbz w5, #0, #+0x34 (addr 0xffff914f6cd4)
0xffff914f6ca4    68  sub x2, x1, #0x1 (1)
0xffff914f6ca8    72  and x5, x5, #0xfffffffffff00000
0xffff914f6cac    76  ldr x5, [x5, #8]
0xffff914f6cb0    80  tbz w5, #1, #+0x24 (addr 0xffff914f6cd4)
0xffff914f6cb4    84  and x5, x1, #0xfffffffffff00000
0xffff914f6cb8    88  ldr x5, [x5, #8]
0xffff914f6cbc    92  tbz w5, #2, #+0x18 (addr 0xffff914f6cd4)
0xffff914f6cc0    96  sub csp, jssp, #0x8 (8)
0xffff914f6cc4   100  str lr, [jssp, #-8]!
0xffff914f6cc8   104  ldr x16, pc+32 (addr 0x0000ffff914f6ce8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f6ccc   108  blr x16
0xffff914f6cd0   112  ldr lr, [jssp], #8
0xffff914f6cd4   116  ret
0xffff914f6cd8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f6cdc   124  d63f03e0       constant
0xffff914f6ce0   128  914170c0       constant
0xffff914f6ce4   132  0000ffff       constant
0xffff914f6ce8   136  91438080       constant
0xffff914f6cec   140  0000ffff       constant
0xffff914f6cf0   144  movz x16, #0x0
0xffff914f6cf4   148  sub csp, jssp, #0x10 (16)
0xffff914f6cf8   152  stp fp, lr, [jssp, #-16]!
0xffff914f6cfc   156  bl #+0x4 (addr 0xffff914f6d00)
0xffff914f6d00   160  movz x17, #0xa00000000
0xffff914f6d04   164  sub csp, jssp, #0x10 (16)
0xffff914f6d08   168  stp x17, cp, [jssp, #-16]!
0xffff914f6d0c   172  add fp, jssp, #0x10 (16)
0xffff914f6d10   176  ldr x17, pc+24 (addr 0x0000ffff914f6d28)    ;; lazy deoptimization bailout 0
0xffff914f6d14   180  add x17, x17, x16
0xffff914f6d18   184  br x17
0xffff914f6d1c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f6d20   192  d63f03e0       constant
0xffff914f6d24   196  d503201f       constant
0xffff914f6d28   200  91206000       constant
0xffff914f6d2c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f6c90  code target (STUB)  (0xffff914170c0)
0xffff914f6cc8  code target (STUB)  (0xffff91438080)
0xffff914f6cd8  constant pool (size 24)
0xffff914f6d10  runtime entry
0xffff914f6d1c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = _events
compiler = unknown
Instructions (size = 152)
0xffff914f6da0     0  sub csp, jssp, #0x8 (8)
0xffff914f6da4     4  str x3, [jssp, #-8]!
0xffff914f6da8     8  sub csp, jssp, #0x8 (8)
0xffff914f6dac    12  str x4, [jssp, #-8]!
0xffff914f6db0    16  ldr x3, pc+88 (addr 0x0000ffff914f6e08)    ;; object: 0x408e95a9 Cell for 0
0xffff914f6db4    20  ldur x3, [x3, #7]
0xffff914f6db8    24  cmp x3, #0x0 (0)
0xffff914f6dbc    28  b.ne #+0x30 (addr 0xffff914f6dec)
0xffff914f6dc0    32  tbz w0, #0, #+0x2c (addr 0xffff914f6dec)
0xffff914f6dc4    36  ldr x5, pc+76 (addr 0x0000ffff914f6e10)    ;; object: 0x408e96e1 WeakCell for 0x36440481 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f6dc8    40  ldur x5, [x5, #7]
0xffff914f6dcc    44  tbz w5, #0, #+0x20 (addr 0xffff914f6dec)
0xffff914f6dd0    48  ldursw x4, [x5, #15]
0xffff914f6dd4    52  tbnz w4, #23, #+0x18 (addr 0xffff914f6dec)
0xffff914f6dd8    56  ldr x4, [jssp], #8
0xffff914f6ddc    60  ldr x3, [jssp], #8
0xffff914f6de0    64  ldr x2, pc+56 (addr 0x0000ffff914f6e18)    ;; object: 0x49bb2591 <String[7]: _events>
0xffff914f6de4    68  ldr x16, pc+60 (addr 0x0000ffff914f6e20)    ;; code: HANDLER, StoreTransitionStub, minor: 198667
0xffff914f6de8    72  br x16
0xffff914f6dec    76  ldr x2, pc+60 (addr 0x0000ffff914f6e28)    ;; object: 0x49bb2591 <String[7]: _events>
0xffff914f6df0    80  ldr x4, [jssp], #8
0xffff914f6df4    84  ldr x3, [jssp], #8
0xffff914f6df8    88  ldr x16, pc+56 (addr 0x0000ffff914f6e30)    ;; code: BUILTIN
0xffff914f6dfc    92  br x16
0xffff914f6e00    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f6e04   100  d63f03e0       constant
0xffff914f6e08   104  408e95a9       constant
0xffff914f6e0c   108  00000000       constant
0xffff914f6e10   112  408e96e1       constant
0xffff914f6e14   116  00000000       constant
0xffff914f6e18   120  49bb2591       constant
0xffff914f6e1c   124  00000000       constant
0xffff914f6e20   128  914f6c60       constant
0xffff914f6e24   132  0000ffff       constant
0xffff914f6e28   136  49bb2591       constant
0xffff914f6e2c   140  00000000       constant
0xffff914f6e30   144  91422420       constant
0xffff914f6e34   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f6db0  embedded object  (0x408e95a9 Cell for 0)
0xffff914f6dc4  embedded object  (0x408e96e1 WeakCell for 0x36440481 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f6de0  embedded object  (0x49bb2591 <String[7]: _events>)
0xffff914f6de4  code target (HANDLER)  (0xffff914f6c60)
0xffff914f6dec  embedded object  (0x49bb2591 <String[7]: _events>)
0xffff914f6df8  code target (BUILTIN)  (0xffff91422420)
0xffff914f6e00  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff914f6ea0     0  mov x6, x0
0xffff914f6ea4     4  tbnz w6, #0, #+0x54 (addr 0xffff914f6ef8)
0xffff914f6ea8     8  stur x6, [x1, #95]
0xffff914f6eac    12  stur x5, [x1, #-1]
0xffff914f6eb0    16  tbz w5, #0, #+0x34 (addr 0xffff914f6ee4)
0xffff914f6eb4    20  sub x2, x1, #0x1 (1)
0xffff914f6eb8    24  and x5, x5, #0xfffffffffff00000
0xffff914f6ebc    28  ldr x5, [x5, #8]
0xffff914f6ec0    32  tbz w5, #1, #+0x24 (addr 0xffff914f6ee4)
0xffff914f6ec4    36  and x5, x1, #0xfffffffffff00000
0xffff914f6ec8    40  ldr x5, [x5, #8]
0xffff914f6ecc    44  tbz w5, #2, #+0x18 (addr 0xffff914f6ee4)
0xffff914f6ed0    48  sub csp, jssp, #0x8 (8)
0xffff914f6ed4    52  str lr, [jssp, #-8]!
0xffff914f6ed8    56  ldr x16, pc+24 (addr 0x0000ffff914f6ef0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f6edc    60  blr x16
0xffff914f6ee0    64  ldr lr, [jssp], #8
0xffff914f6ee4    68  ret
0xffff914f6ee8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f6eec    76  d63f03e0       constant
0xffff914f6ef0    80  91438080       constant
0xffff914f6ef4    84  0000ffff       constant
0xffff914f6ef8    88  movz x16, #0x0
0xffff914f6efc    92  sub csp, jssp, #0x10 (16)
0xffff914f6f00    96  stp fp, lr, [jssp, #-16]!
0xffff914f6f04   100  bl #+0x4 (addr 0xffff914f6f08)
0xffff914f6f08   104  movz x17, #0xa00000000
0xffff914f6f0c   108  sub csp, jssp, #0x10 (16)
0xffff914f6f10   112  stp x17, cp, [jssp, #-16]!
0xffff914f6f14   116  add fp, jssp, #0x10 (16)
0xffff914f6f18   120  ldr x17, pc+24 (addr 0x0000ffff914f6f30)    ;; lazy deoptimization bailout 0
0xffff914f6f1c   124  add x17, x17, x16
0xffff914f6f20   128  br x17
0xffff914f6f24   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f6f28   136  d63f03e0       constant
0xffff914f6f2c   140  d503201f       constant
0xffff914f6f30   144  91206000       constant
0xffff914f6f34   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f6ed8  code target (STUB)  (0xffff91438080)
0xffff914f6ee8  constant pool (size 16)
0xffff914f6f18  runtime entry
0xffff914f6f24  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff914f6ea0     0  mov x6, x0
0xffff914f6ea4     4  tbnz w6, #0, #+0x54 (addr 0xffff914f6ef8)
0xffff914f6ea8     8  stur x6, [x1, #95]
0xffff914f6eac    12  stur x5, [x1, #-1]
0xffff914f6eb0    16  tbz w5, #0, #+0x34 (addr 0xffff914f6ee4)
0xffff914f6eb4    20  sub x2, x1, #0x1 (1)
0xffff914f6eb8    24  and x5, x5, #0xfffffffffff00000
0xffff914f6ebc    28  ldr x5, [x5, #8]
0xffff914f6ec0    32  tbz w5, #1, #+0x24 (addr 0xffff914f6ee4)
0xffff914f6ec4    36  and x5, x1, #0xfffffffffff00000
0xffff914f6ec8    40  ldr x5, [x5, #8]
0xffff914f6ecc    44  tbz w5, #2, #+0x18 (addr 0xffff914f6ee4)
0xffff914f6ed0    48  sub csp, jssp, #0x8 (8)
0xffff914f6ed4    52  str lr, [jssp, #-8]!
0xffff914f6ed8    56  ldr x16, pc+24 (addr 0x0000ffff914f6ef0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f6edc    60  blr x16
0xffff914f6ee0    64  ldr lr, [jssp], #8
0xffff914f6ee4    68  ret
0xffff914f6ee8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f6eec    76  d63f03e0       constant
0xffff914f6ef0    80  91438080       constant
0xffff914f6ef4    84  0000ffff       constant
0xffff914f6ef8    88  movz x16, #0x0
0xffff914f6efc    92  sub csp, jssp, #0x10 (16)
0xffff914f6f00    96  stp fp, lr, [jssp, #-16]!
0xffff914f6f04   100  bl #+0x4 (addr 0xffff914f6f08)
0xffff914f6f08   104  movz x17, #0xa00000000
0xffff914f6f0c   108  sub csp, jssp, #0x10 (16)
0xffff914f6f10   112  stp x17, cp, [jssp, #-16]!
0xffff914f6f14   116  add fp, jssp, #0x10 (16)
0xffff914f6f18   120  ldr x17, pc+24 (addr 0x0000ffff914f6f30)    ;; lazy deoptimization bailout 0
0xffff914f6f1c   124  add x17, x17, x16
0xffff914f6f20   128  br x17
0xffff914f6f24   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f6f28   136  d63f03e0       constant
0xffff914f6f2c   140  d503201f       constant
0xffff914f6f30   144  91206000       constant
0xffff914f6f34   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f6ed8  code target (STUB)  (0xffff91438080)
0xffff914f6ee8  constant pool (size 16)
0xffff914f6f18  runtime entry
0xffff914f6f24  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = _eventsCount
compiler = unknown
Instructions (size = 152)
0xffff914f6fa0     0  sub csp, jssp, #0x8 (8)
0xffff914f6fa4     4  str x3, [jssp, #-8]!
0xffff914f6fa8     8  sub csp, jssp, #0x8 (8)
0xffff914f6fac    12  str x4, [jssp, #-8]!
0xffff914f6fb0    16  ldr x3, pc+88 (addr 0x0000ffff914f7008)    ;; object: 0x408e95a9 Cell for 0
0xffff914f6fb4    20  ldur x3, [x3, #7]
0xffff914f6fb8    24  cmp x3, #0x0 (0)
0xffff914f6fbc    28  b.ne #+0x2c (addr 0xffff914f6fe8)
0xffff914f6fc0    32  ldr x5, pc+80 (addr 0x0000ffff914f7010)    ;; object: 0x408e97d1 WeakCell for 0x364404d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f6fc4    36  ldur x5, [x5, #7]
0xffff914f6fc8    40  tbz w5, #0, #+0x20 (addr 0xffff914f6fe8)
0xffff914f6fcc    44  ldursw x4, [x5, #15]
0xffff914f6fd0    48  tbnz w4, #23, #+0x18 (addr 0xffff914f6fe8)
0xffff914f6fd4    52  ldr x4, [jssp], #8
0xffff914f6fd8    56  ldr x3, [jssp], #8
0xffff914f6fdc    60  ldr x2, pc+60 (addr 0x0000ffff914f7018)    ;; object: 0x49bb93b9 <String[12]: _eventsCount>
0xffff914f6fe0    64  ldr x16, pc+64 (addr 0x0000ffff914f7020)    ;; code: HANDLER, StoreTransitionStub, minor: 174092
0xffff914f6fe4    68  br x16
0xffff914f6fe8    72  ldr x2, pc+64 (addr 0x0000ffff914f7028)    ;; object: 0x49bb93b9 <String[12]: _eventsCount>
0xffff914f6fec    76  ldr x4, [jssp], #8
0xffff914f6ff0    80  ldr x3, [jssp], #8
0xffff914f6ff4    84  ldr x16, pc+60 (addr 0x0000ffff914f7030)    ;; code: BUILTIN
0xffff914f6ff8    88  br x16
0xffff914f6ffc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914f7000    96  d63f03e0       constant
0xffff914f7004   100  d503201f       constant
0xffff914f7008   104  408e95a9       constant
0xffff914f700c   108  00000000       constant
0xffff914f7010   112  408e97d1       constant
0xffff914f7014   116  00000000       constant
0xffff914f7018   120  49bb93b9       constant
0xffff914f701c   124  00000000       constant
0xffff914f7020   128  914f6ea0       constant
0xffff914f7024   132  0000ffff       constant
0xffff914f7028   136  49bb93b9       constant
0xffff914f702c   140  00000000       constant
0xffff914f7030   144  91422420       constant
0xffff914f7034   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f6fb0  embedded object  (0x408e95a9 Cell for 0)
0xffff914f6fc0  embedded object  (0x408e97d1 WeakCell for 0x364404d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f6fdc  embedded object  (0x49bb93b9 <String[12]: _eventsCount>)
0xffff914f6fe0  code target (HANDLER)  (0xffff914f6ea0)
0xffff914f6fe8  embedded object  (0x49bb93b9 <String[12]: _eventsCount>)
0xffff914f6ff4  code target (BUILTIN)  (0xffff91422420)
0xffff914f6ffc  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = _maxListeners
compiler = unknown
Instructions (size = 120)
0xffff914f70a0     0  sub csp, jssp, #0x8 (8)
0xffff914f70a4     4  str x3, [jssp, #-8]!
0xffff914f70a8     8  sub csp, jssp, #0x8 (8)
0xffff914f70ac    12  str x0, [jssp, #-8]!
0xffff914f70b0    16  ldr x0, pc+72 (addr 0x0000ffff914f70f8)    ;; object: 0x408e95a9 Cell for 0
0xffff914f70b4    20  ldur x0, [x0, #7]
0xffff914f70b8    24  cmp x0, #0x0 (0)
0xffff914f70bc    28  b.ne #+0x14 (addr 0xffff914f70d0)
0xffff914f70c0    32  ldr x3, pc+64 (addr 0x0000ffff914f7100)    ;; object: 0x408e98c1 WeakCell for 0x408acf51 <an Object with map 0x3641bf39>
0xffff914f70c4    36  ldur x3, [x3, #7]
0xffff914f70c8    40  tbz w3, #0, #+0x8 (addr 0xffff914f70d0)
0xffff914f70cc    44  b #+0x14 (addr 0xffff914f70e0)
0xffff914f70d0    48  ldr x0, [jssp], #8
0xffff914f70d4    52  ldr x3, [jssp], #8
0xffff914f70d8    56  ldr x16, pc+48 (addr 0x0000ffff914f7108)    ;; code: BUILTIN
0xffff914f70dc    60  br x16
0xffff914f70e0    64  add jssp, jssp, #0x10 (16)
0xffff914f70e4    68  mov x1, x3
0xffff914f70e8    72  ldr x16, pc+40 (addr 0x0000ffff914f7110)    ;; code: HANDLER, LoadFieldStub, minor: 2053
0xffff914f70ec    76  br x16
0xffff914f70f0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914f70f4    84  d63f03e0       constant
0xffff914f70f8    88  408e95a9       constant
0xffff914f70fc    92  00000000       constant
0xffff914f7100    96  408e98c1       constant
0xffff914f7104   100  00000000       constant
0xffff914f7108   104  914222e0       constant
0xffff914f710c   108  0000ffff       constant
0xffff914f7110   112  91478e20       constant
0xffff914f7114   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914f70b0  embedded object  (0x408e95a9 Cell for 0)
0xffff914f70c0  embedded object  (0x408e98c1 WeakCell for 0x408acf51 <an Object with map 0x3641bf39>)
0xffff914f70d8  code target (BUILTIN)  (0xffff914222e0)
0xffff914f70e8  code target (HANDLER)  (0xffff91478e20)
0xffff914f70f0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _maxListeners
compiler = unknown
Instructions (size = 152)
0xffff914f7180     0  sub csp, jssp, #0x8 (8)
0xffff914f7184     4  str x3, [jssp, #-8]!
0xffff914f7188     8  sub csp, jssp, #0x8 (8)
0xffff914f718c    12  str x4, [jssp, #-8]!
0xffff914f7190    16  ldr x3, pc+88 (addr 0x0000ffff914f71e8)    ;; object: 0x408e95a9 Cell for 0
0xffff914f7194    20  ldur x3, [x3, #7]
0xffff914f7198    24  cmp x3, #0x0 (0)
0xffff914f719c    28  b.ne #+0x30 (addr 0xffff914f71cc)
0xffff914f71a0    32  tbz w0, #0, #+0x2c (addr 0xffff914f71cc)
0xffff914f71a4    36  ldr x5, pc+76 (addr 0x0000ffff914f71f0)    ;; object: 0x408e98f9 WeakCell for 0x36440531 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f71a8    40  ldur x5, [x5, #7]
0xffff914f71ac    44  tbz w5, #0, #+0x20 (addr 0xffff914f71cc)
0xffff914f71b0    48  ldursw x4, [x5, #15]
0xffff914f71b4    52  tbnz w4, #23, #+0x18 (addr 0xffff914f71cc)
0xffff914f71b8    56  ldr x4, [jssp], #8
0xffff914f71bc    60  ldr x3, [jssp], #8
0xffff914f71c0    64  ldr x2, pc+56 (addr 0x0000ffff914f71f8)    ;; object: 0x49bc32b1 <String[13]: _maxListeners>
0xffff914f71c4    68  ldr x16, pc+60 (addr 0x0000ffff914f7200)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff914f71c8    72  br x16
0xffff914f71cc    76  ldr x2, pc+60 (addr 0x0000ffff914f7208)    ;; object: 0x49bc32b1 <String[13]: _maxListeners>
0xffff914f71d0    80  ldr x4, [jssp], #8
0xffff914f71d4    84  ldr x3, [jssp], #8
0xffff914f71d8    88  ldr x16, pc+56 (addr 0x0000ffff914f7210)    ;; code: BUILTIN
0xffff914f71dc    92  br x16
0xffff914f71e0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f71e4   100  d63f03e0       constant
0xffff914f71e8   104  408e95a9       constant
0xffff914f71ec   108  00000000       constant
0xffff914f71f0   112  408e98f9       constant
0xffff914f71f4   116  00000000       constant
0xffff914f71f8   120  49bc32b1       constant
0xffff914f71fc   124  00000000       constant
0xffff914f7200   128  91438860       constant
0xffff914f7204   132  0000ffff       constant
0xffff914f7208   136  49bc32b1       constant
0xffff914f720c   140  00000000       constant
0xffff914f7210   144  91422420       constant
0xffff914f7214   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f7190  embedded object  (0x408e95a9 Cell for 0)
0xffff914f71a4  embedded object  (0x408e98f9 WeakCell for 0x36440531 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f71c0  embedded object  (0x49bc32b1 <String[13]: _maxListeners>)
0xffff914f71c4  code target (HANDLER)  (0xffff91438860)
0xffff914f71cc  embedded object  (0x49bc32b1 <String[13]: _maxListeners>)
0xffff914f71d8  code target (BUILTIN)  (0xffff91422420)
0xffff914f71e0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = objectMode
compiler = unknown
Instructions (size = 152)
0xffff914f7280     0  sub csp, jssp, #0x8 (8)
0xffff914f7284     4  str x3, [jssp, #-8]!
0xffff914f7288     8  sub csp, jssp, #0x8 (8)
0xffff914f728c    12  str x4, [jssp, #-8]!
0xffff914f7290    16  ldr x3, pc+88 (addr 0x0000ffff914f72e8)    ;; object: 0x408e9989 Cell for 0
0xffff914f7294    20  ldur x3, [x3, #7]
0xffff914f7298    24  cmp x3, #0x0 (0)
0xffff914f729c    28  b.ne #+0x30 (addr 0xffff914f72cc)
0xffff914f72a0    32  tbz w0, #0, #+0x2c (addr 0xffff914f72cc)
0xffff914f72a4    36  ldr x5, pc+76 (addr 0x0000ffff914f72f0)    ;; object: 0x408d1a19 WeakCell for 0x36437fd1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f72a8    40  ldur x5, [x5, #7]
0xffff914f72ac    44  tbz w5, #0, #+0x20 (addr 0xffff914f72cc)
0xffff914f72b0    48  ldursw x4, [x5, #15]
0xffff914f72b4    52  tbnz w4, #23, #+0x18 (addr 0xffff914f72cc)
0xffff914f72b8    56  ldr x4, [jssp], #8
0xffff914f72bc    60  ldr x3, [jssp], #8
0xffff914f72c0    64  ldr x2, pc+56 (addr 0x0000ffff914f72f8)    ;; object: 0x4081d821 <String[10]: objectMode>
0xffff914f72c4    68  ldr x16, pc+60 (addr 0x0000ffff914f7300)    ;; code: HANDLER, StoreTransitionStub, minor: 198659
0xffff914f72c8    72  br x16
0xffff914f72cc    76  ldr x2, pc+60 (addr 0x0000ffff914f7308)    ;; object: 0x4081d821 <String[10]: objectMode>
0xffff914f72d0    80  ldr x4, [jssp], #8
0xffff914f72d4    84  ldr x3, [jssp], #8
0xffff914f72d8    88  ldr x16, pc+56 (addr 0x0000ffff914f7310)    ;; code: BUILTIN
0xffff914f72dc    92  br x16
0xffff914f72e0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f72e4   100  d63f03e0       constant
0xffff914f72e8   104  408e9989       constant
0xffff914f72ec   108  00000000       constant
0xffff914f72f0   112  408d1a19       constant
0xffff914f72f4   116  00000000       constant
0xffff914f72f8   120  4081d821       constant
0xffff914f72fc   124  00000000       constant
0xffff914f7300   128  9148b940       constant
0xffff914f7304   132  0000ffff       constant
0xffff914f7308   136  4081d821       constant
0xffff914f730c   140  00000000       constant
0xffff914f7310   144  91422420       constant
0xffff914f7314   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f7290  embedded object  (0x408e9989 Cell for 0)
0xffff914f72a4  embedded object  (0x408d1a19 WeakCell for 0x36437fd1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f72c0  embedded object  (0x4081d821 <String[10]: objectMode>)
0xffff914f72c4  code target (HANDLER)  (0xffff9148b940)
0xffff914f72cc  embedded object  (0x4081d821 <String[10]: objectMode>)
0xffff914f72d8  code target (BUILTIN)  (0xffff91422420)
0xffff914f72e0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 120)
0xffff914f7380     0  sub csp, jssp, #0x8 (8)
0xffff914f7384     4  str x3, [jssp, #-8]!
0xffff914f7388     8  sub csp, jssp, #0x8 (8)
0xffff914f738c    12  str x0, [jssp, #-8]!
0xffff914f7390    16  ldr x0, pc+72 (addr 0x0000ffff914f73d8)    ;; object: 0x49b5b0f1 Cell for 0
0xffff914f7394    20  ldur x0, [x0, #7]
0xffff914f7398    24  cmp x0, #0x0 (0)
0xffff914f739c    28  b.ne #+0x14 (addr 0xffff914f73b0)
0xffff914f73a0    32  ldr x3, pc+64 (addr 0x0000ffff914f73e0)    ;; object: 0x408e99e9 WeakCell for 0x49b40019 <JS Function (SharedFunctionInfo 0x49b3ff71)>
0xffff914f73a4    36  ldur x3, [x3, #7]
0xffff914f73a8    40  tbz w3, #0, #+0x8 (addr 0xffff914f73b0)
0xffff914f73ac    44  b #+0x14 (addr 0xffff914f73c0)
0xffff914f73b0    48  ldr x0, [jssp], #8
0xffff914f73b4    52  ldr x3, [jssp], #8
0xffff914f73b8    56  ldr x16, pc+48 (addr 0x0000ffff914f73e8)    ;; code: BUILTIN
0xffff914f73bc    60  br x16
0xffff914f73c0    64  add jssp, jssp, #0x10 (16)
0xffff914f73c4    68  mov x1, x3
0xffff914f73c8    72  ldr x16, pc+40 (addr 0x0000ffff914f73f0)    ;; code: HANDLER, LoadConstantStub, minor: 8
0xffff914f73cc    76  br x16
0xffff914f73d0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914f73d4    84  d63f03e0       constant
0xffff914f73d8    88  49b5b0f1       constant
0xffff914f73dc    92  00000000       constant
0xffff914f73e0    96  408e99e9       constant
0xffff914f73e4   100  00000000       constant
0xffff914f73e8   104  914222e0       constant
0xffff914f73ec   108  0000ffff       constant
0xffff914f73f0   112  9144c160       constant
0xffff914f73f4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914f7390  embedded object  (0x49b5b0f1 Cell for 0)
0xffff914f73a0  embedded object  (0x408e99e9 WeakCell for 0x49b40019 <JS Function (SharedFunctionInfo 0x49b3ff71)>)
0xffff914f73b8  code target (BUILTIN)  (0xffff914222e0)
0xffff914f73c8  code target (HANDLER)  (0xffff9144c160)
0xffff914f73d0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff914f7460     0  mov x6, x0
0xffff914f7464     4  tbnz w6, #0, #+0x54 (addr 0xffff914f74b8)
0xffff914f7468     8  stur x6, [x1, #31]
0xffff914f746c    12  stur x5, [x1, #-1]
0xffff914f7470    16  tbz w5, #0, #+0x34 (addr 0xffff914f74a4)
0xffff914f7474    20  sub x2, x1, #0x1 (1)
0xffff914f7478    24  and x5, x5, #0xfffffffffff00000
0xffff914f747c    28  ldr x5, [x5, #8]
0xffff914f7480    32  tbz w5, #1, #+0x24 (addr 0xffff914f74a4)
0xffff914f7484    36  and x5, x1, #0xfffffffffff00000
0xffff914f7488    40  ldr x5, [x5, #8]
0xffff914f748c    44  tbz w5, #2, #+0x18 (addr 0xffff914f74a4)
0xffff914f7490    48  sub csp, jssp, #0x8 (8)
0xffff914f7494    52  str lr, [jssp, #-8]!
0xffff914f7498    56  ldr x16, pc+24 (addr 0x0000ffff914f74b0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f749c    60  blr x16
0xffff914f74a0    64  ldr lr, [jssp], #8
0xffff914f74a4    68  ret
0xffff914f74a8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f74ac    76  d63f03e0       constant
0xffff914f74b0    80  91438080       constant
0xffff914f74b4    84  0000ffff       constant
0xffff914f74b8    88  movz x16, #0x0
0xffff914f74bc    92  sub csp, jssp, #0x10 (16)
0xffff914f74c0    96  stp fp, lr, [jssp, #-16]!
0xffff914f74c4   100  bl #+0x4 (addr 0xffff914f74c8)
0xffff914f74c8   104  movz x17, #0xa00000000
0xffff914f74cc   108  sub csp, jssp, #0x10 (16)
0xffff914f74d0   112  stp x17, cp, [jssp, #-16]!
0xffff914f74d4   116  add fp, jssp, #0x10 (16)
0xffff914f74d8   120  ldr x17, pc+24 (addr 0x0000ffff914f74f0)    ;; lazy deoptimization bailout 0
0xffff914f74dc   124  add x17, x17, x16
0xffff914f74e0   128  br x17
0xffff914f74e4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f74e8   136  d63f03e0       constant
0xffff914f74ec   140  d503201f       constant
0xffff914f74f0   144  91206000       constant
0xffff914f74f4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f7498  code target (STUB)  (0xffff91438080)
0xffff914f74a8  constant pool (size 16)
0xffff914f74d8  runtime entry
0xffff914f74e4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff914f7460     0  mov x6, x0
0xffff914f7464     4  tbnz w6, #0, #+0x54 (addr 0xffff914f74b8)
0xffff914f7468     8  stur x6, [x1, #31]
0xffff914f746c    12  stur x5, [x1, #-1]
0xffff914f7470    16  tbz w5, #0, #+0x34 (addr 0xffff914f74a4)
0xffff914f7474    20  sub x2, x1, #0x1 (1)
0xffff914f7478    24  and x5, x5, #0xfffffffffff00000
0xffff914f747c    28  ldr x5, [x5, #8]
0xffff914f7480    32  tbz w5, #1, #+0x24 (addr 0xffff914f74a4)
0xffff914f7484    36  and x5, x1, #0xfffffffffff00000
0xffff914f7488    40  ldr x5, [x5, #8]
0xffff914f748c    44  tbz w5, #2, #+0x18 (addr 0xffff914f74a4)
0xffff914f7490    48  sub csp, jssp, #0x8 (8)
0xffff914f7494    52  str lr, [jssp, #-8]!
0xffff914f7498    56  ldr x16, pc+24 (addr 0x0000ffff914f74b0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f749c    60  blr x16
0xffff914f74a0    64  ldr lr, [jssp], #8
0xffff914f74a4    68  ret
0xffff914f74a8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f74ac    76  d63f03e0       constant
0xffff914f74b0    80  91438080       constant
0xffff914f74b4    84  0000ffff       constant
0xffff914f74b8    88  movz x16, #0x0
0xffff914f74bc    92  sub csp, jssp, #0x10 (16)
0xffff914f74c0    96  stp fp, lr, [jssp, #-16]!
0xffff914f74c4   100  bl #+0x4 (addr 0xffff914f74c8)
0xffff914f74c8   104  movz x17, #0xa00000000
0xffff914f74cc   108  sub csp, jssp, #0x10 (16)
0xffff914f74d0   112  stp x17, cp, [jssp, #-16]!
0xffff914f74d4   116  add fp, jssp, #0x10 (16)
0xffff914f74d8   120  ldr x17, pc+24 (addr 0x0000ffff914f74f0)    ;; lazy deoptimization bailout 0
0xffff914f74dc   124  add x17, x17, x16
0xffff914f74e0   128  br x17
0xffff914f74e4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f74e8   136  d63f03e0       constant
0xffff914f74ec   140  d503201f       constant
0xffff914f74f0   144  91206000       constant
0xffff914f74f4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f7498  code target (STUB)  (0xffff91438080)
0xffff914f74a8  constant pool (size 16)
0xffff914f74d8  runtime entry
0xffff914f74e4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = highWaterMark
compiler = unknown
Instructions (size = 152)
0xffff914f7560     0  sub csp, jssp, #0x8 (8)
0xffff914f7564     4  str x3, [jssp, #-8]!
0xffff914f7568     8  sub csp, jssp, #0x8 (8)
0xffff914f756c    12  str x4, [jssp, #-8]!
0xffff914f7570    16  ldr x3, pc+88 (addr 0x0000ffff914f75c8)    ;; object: 0x408e9989 Cell for 0
0xffff914f7574    20  ldur x3, [x3, #7]
0xffff914f7578    24  cmp x3, #0x0 (0)
0xffff914f757c    28  b.ne #+0x2c (addr 0xffff914f75a8)
0xffff914f7580    32  ldr x5, pc+80 (addr 0x0000ffff914f75d0)    ;; object: 0x408d1a51 WeakCell for 0x36438029 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f7584    36  ldur x5, [x5, #7]
0xffff914f7588    40  tbz w5, #0, #+0x20 (addr 0xffff914f75a8)
0xffff914f758c    44  ldursw x4, [x5, #15]
0xffff914f7590    48  tbnz w4, #23, #+0x18 (addr 0xffff914f75a8)
0xffff914f7594    52  ldr x4, [jssp], #8
0xffff914f7598    56  ldr x3, [jssp], #8
0xffff914f759c    60  ldr x2, pc+60 (addr 0x0000ffff914f75d8)    ;; object: 0x49bf91d9 <String[13]: highWaterMark>
0xffff914f75a0    64  ldr x16, pc+64 (addr 0x0000ffff914f75e0)    ;; code: HANDLER, StoreTransitionStub, minor: 174084
0xffff914f75a4    68  br x16
0xffff914f75a8    72  ldr x2, pc+64 (addr 0x0000ffff914f75e8)    ;; object: 0x49bf91d9 <String[13]: highWaterMark>
0xffff914f75ac    76  ldr x4, [jssp], #8
0xffff914f75b0    80  ldr x3, [jssp], #8
0xffff914f75b4    84  ldr x16, pc+60 (addr 0x0000ffff914f75f0)    ;; code: BUILTIN
0xffff914f75b8    88  br x16
0xffff914f75bc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914f75c0    96  d63f03e0       constant
0xffff914f75c4   100  d503201f       constant
0xffff914f75c8   104  408e9989       constant
0xffff914f75cc   108  00000000       constant
0xffff914f75d0   112  408d1a51       constant
0xffff914f75d4   116  00000000       constant
0xffff914f75d8   120  49bf91d9       constant
0xffff914f75dc   124  00000000       constant
0xffff914f75e0   128  914f7460       constant
0xffff914f75e4   132  0000ffff       constant
0xffff914f75e8   136  49bf91d9       constant
0xffff914f75ec   140  00000000       constant
0xffff914f75f0   144  91422420       constant
0xffff914f75f4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f7570  embedded object  (0x408e9989 Cell for 0)
0xffff914f7580  embedded object  (0x408d1a51 WeakCell for 0x36438029 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f759c  embedded object  (0x49bf91d9 <String[13]: highWaterMark>)
0xffff914f75a0  code target (HANDLER)  (0xffff914f7460)
0xffff914f75a8  embedded object  (0x49bf91d9 <String[13]: highWaterMark>)
0xffff914f75b4  code target (BUILTIN)  (0xffff91422420)
0xffff914f75bc  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = needDrain
compiler = unknown
Instructions (size = 152)
0xffff914f7660     0  sub csp, jssp, #0x8 (8)
0xffff914f7664     4  str x3, [jssp, #-8]!
0xffff914f7668     8  sub csp, jssp, #0x8 (8)
0xffff914f766c    12  str x4, [jssp, #-8]!
0xffff914f7670    16  ldr x3, pc+88 (addr 0x0000ffff914f76c8)    ;; object: 0x408e9989 Cell for 0
0xffff914f7674    20  ldur x3, [x3, #7]
0xffff914f7678    24  cmp x3, #0x0 (0)
0xffff914f767c    28  b.ne #+0x30 (addr 0xffff914f76ac)
0xffff914f7680    32  tbz w0, #0, #+0x2c (addr 0xffff914f76ac)
0xffff914f7684    36  ldr x5, pc+76 (addr 0x0000ffff914f76d0)    ;; object: 0x408d1a69 WeakCell for 0x36438081 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f7688    40  ldur x5, [x5, #7]
0xffff914f768c    44  tbz w5, #0, #+0x20 (addr 0xffff914f76ac)
0xffff914f7690    48  ldursw x4, [x5, #15]
0xffff914f7694    52  tbnz w4, #23, #+0x18 (addr 0xffff914f76ac)
0xffff914f7698    56  ldr x4, [jssp], #8
0xffff914f769c    60  ldr x3, [jssp], #8
0xffff914f76a0    64  ldr x2, pc+56 (addr 0x0000ffff914f76d8)    ;; object: 0x4081e111 <String[9]: needDrain>
0xffff914f76a4    68  ldr x16, pc+60 (addr 0x0000ffff914f76e0)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff914f76a8    72  br x16
0xffff914f76ac    76  ldr x2, pc+60 (addr 0x0000ffff914f76e8)    ;; object: 0x4081e111 <String[9]: needDrain>
0xffff914f76b0    80  ldr x4, [jssp], #8
0xffff914f76b4    84  ldr x3, [jssp], #8
0xffff914f76b8    88  ldr x16, pc+56 (addr 0x0000ffff914f76f0)    ;; code: BUILTIN
0xffff914f76bc    92  br x16
0xffff914f76c0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f76c4   100  d63f03e0       constant
0xffff914f76c8   104  408e9989       constant
0xffff914f76cc   108  00000000       constant
0xffff914f76d0   112  408d1a69       constant
0xffff914f76d4   116  00000000       constant
0xffff914f76d8   120  4081e111       constant
0xffff914f76dc   124  00000000       constant
0xffff914f76e0   128  9148bdc0       constant
0xffff914f76e4   132  0000ffff       constant
0xffff914f76e8   136  4081e111       constant
0xffff914f76ec   140  00000000       constant
0xffff914f76f0   144  91422420       constant
0xffff914f76f4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f7670  embedded object  (0x408e9989 Cell for 0)
0xffff914f7684  embedded object  (0x408d1a69 WeakCell for 0x36438081 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f76a0  embedded object  (0x4081e111 <String[9]: needDrain>)
0xffff914f76a4  code target (HANDLER)  (0xffff9148bdc0)
0xffff914f76ac  embedded object  (0x4081e111 <String[9]: needDrain>)
0xffff914f76b8  code target (BUILTIN)  (0xffff91422420)
0xffff914f76c0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = ending
compiler = unknown
Instructions (size = 152)
0xffff914f7760     0  sub csp, jssp, #0x8 (8)
0xffff914f7764     4  str x3, [jssp, #-8]!
0xffff914f7768     8  sub csp, jssp, #0x8 (8)
0xffff914f776c    12  str x4, [jssp, #-8]!
0xffff914f7770    16  ldr x3, pc+88 (addr 0x0000ffff914f77c8)    ;; object: 0x408e9989 Cell for 0
0xffff914f7774    20  ldur x3, [x3, #7]
0xffff914f7778    24  cmp x3, #0x0 (0)
0xffff914f777c    28  b.ne #+0x30 (addr 0xffff914f77ac)
0xffff914f7780    32  tbz w0, #0, #+0x2c (addr 0xffff914f77ac)
0xffff914f7784    36  ldr x5, pc+76 (addr 0x0000ffff914f77d0)    ;; object: 0x408d1a81 WeakCell for 0x364380d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f7788    40  ldur x5, [x5, #7]
0xffff914f778c    44  tbz w5, #0, #+0x20 (addr 0xffff914f77ac)
0xffff914f7790    48  ldursw x4, [x5, #15]
0xffff914f7794    52  tbnz w4, #23, #+0x18 (addr 0xffff914f77ac)
0xffff914f7798    56  ldr x4, [jssp], #8
0xffff914f779c    60  ldr x3, [jssp], #8
0xffff914f77a0    64  ldr x2, pc+56 (addr 0x0000ffff914f77d8)    ;; object: 0x40822889 <String[6]: ending>
0xffff914f77a4    68  ldr x16, pc+60 (addr 0x0000ffff914f77e0)    ;; code: HANDLER, StoreTransitionStub, minor: 198662
0xffff914f77a8    72  br x16
0xffff914f77ac    76  ldr x2, pc+60 (addr 0x0000ffff914f77e8)    ;; object: 0x40822889 <String[6]: ending>
0xffff914f77b0    80  ldr x4, [jssp], #8
0xffff914f77b4    84  ldr x3, [jssp], #8
0xffff914f77b8    88  ldr x16, pc+56 (addr 0x0000ffff914f77f0)    ;; code: BUILTIN
0xffff914f77bc    92  br x16
0xffff914f77c0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f77c4   100  d63f03e0       constant
0xffff914f77c8   104  408e9989       constant
0xffff914f77cc   108  00000000       constant
0xffff914f77d0   112  408d1a81       constant
0xffff914f77d4   116  00000000       constant
0xffff914f77d8   120  40822889       constant
0xffff914f77dc   124  00000000       constant
0xffff914f77e0   128  9148c000       constant
0xffff914f77e4   132  0000ffff       constant
0xffff914f77e8   136  40822889       constant
0xffff914f77ec   140  00000000       constant
0xffff914f77f0   144  91422420       constant
0xffff914f77f4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f7770  embedded object  (0x408e9989 Cell for 0)
0xffff914f7784  embedded object  (0x408d1a81 WeakCell for 0x364380d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f77a0  embedded object  (0x40822889 <String[6]: ending>)
0xffff914f77a4  code target (HANDLER)  (0xffff9148c000)
0xffff914f77ac  embedded object  (0x40822889 <String[6]: ending>)
0xffff914f77b8  code target (BUILTIN)  (0xffff91422420)
0xffff914f77c0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = ended
compiler = unknown
Instructions (size = 152)
0xffff914f7860     0  sub csp, jssp, #0x8 (8)
0xffff914f7864     4  str x3, [jssp, #-8]!
0xffff914f7868     8  sub csp, jssp, #0x8 (8)
0xffff914f786c    12  str x4, [jssp, #-8]!
0xffff914f7870    16  ldr x3, pc+88 (addr 0x0000ffff914f78c8)    ;; object: 0x408e9989 Cell for 0
0xffff914f7874    20  ldur x3, [x3, #7]
0xffff914f7878    24  cmp x3, #0x0 (0)
0xffff914f787c    28  b.ne #+0x30 (addr 0xffff914f78ac)
0xffff914f7880    32  tbz w0, #0, #+0x2c (addr 0xffff914f78ac)
0xffff914f7884    36  ldr x5, pc+76 (addr 0x0000ffff914f78d0)    ;; object: 0x408d1a99 WeakCell for 0x36438131 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f7888    40  ldur x5, [x5, #7]
0xffff914f788c    44  tbz w5, #0, #+0x20 (addr 0xffff914f78ac)
0xffff914f7890    48  ldursw x4, [x5, #15]
0xffff914f7894    52  tbnz w4, #23, #+0x18 (addr 0xffff914f78ac)
0xffff914f7898    56  ldr x4, [jssp], #8
0xffff914f789c    60  ldr x3, [jssp], #8
0xffff914f78a0    64  ldr x2, pc+56 (addr 0x0000ffff914f78d8)    ;; object: 0x49bf92f1 <String[5]: ended>
0xffff914f78a4    68  ldr x16, pc+60 (addr 0x0000ffff914f78e0)    ;; code: HANDLER, StoreTransitionStub, minor: 198663
0xffff914f78a8    72  br x16
0xffff914f78ac    76  ldr x2, pc+60 (addr 0x0000ffff914f78e8)    ;; object: 0x49bf92f1 <String[5]: ended>
0xffff914f78b0    80  ldr x4, [jssp], #8
0xffff914f78b4    84  ldr x3, [jssp], #8
0xffff914f78b8    88  ldr x16, pc+56 (addr 0x0000ffff914f78f0)    ;; code: BUILTIN
0xffff914f78bc    92  br x16
0xffff914f78c0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f78c4   100  d63f03e0       constant
0xffff914f78c8   104  408e9989       constant
0xffff914f78cc   108  00000000       constant
0xffff914f78d0   112  408d1a99       constant
0xffff914f78d4   116  00000000       constant
0xffff914f78d8   120  49bf92f1       constant
0xffff914f78dc   124  00000000       constant
0xffff914f78e0   128  9148c240       constant
0xffff914f78e4   132  0000ffff       constant
0xffff914f78e8   136  49bf92f1       constant
0xffff914f78ec   140  00000000       constant
0xffff914f78f0   144  91422420       constant
0xffff914f78f4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f7870  embedded object  (0x408e9989 Cell for 0)
0xffff914f7884  embedded object  (0x408d1a99 WeakCell for 0x36438131 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f78a0  embedded object  (0x49bf92f1 <String[5]: ended>)
0xffff914f78a4  code target (HANDLER)  (0xffff9148c240)
0xffff914f78ac  embedded object  (0x49bf92f1 <String[5]: ended>)
0xffff914f78b8  code target (BUILTIN)  (0xffff91422420)
0xffff914f78c0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = finished
compiler = unknown
Instructions (size = 152)
0xffff914f7960     0  sub csp, jssp, #0x8 (8)
0xffff914f7964     4  str x3, [jssp, #-8]!
0xffff914f7968     8  sub csp, jssp, #0x8 (8)
0xffff914f796c    12  str x4, [jssp, #-8]!
0xffff914f7970    16  ldr x3, pc+88 (addr 0x0000ffff914f79c8)    ;; object: 0x408e9989 Cell for 0
0xffff914f7974    20  ldur x3, [x3, #7]
0xffff914f7978    24  cmp x3, #0x0 (0)
0xffff914f797c    28  b.ne #+0x30 (addr 0xffff914f79ac)
0xffff914f7980    32  tbz w0, #0, #+0x2c (addr 0xffff914f79ac)
0xffff914f7984    36  ldr x5, pc+76 (addr 0x0000ffff914f79d0)    ;; object: 0x408d1ab1 WeakCell for 0x36438189 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f7988    40  ldur x5, [x5, #7]
0xffff914f798c    44  tbz w5, #0, #+0x20 (addr 0xffff914f79ac)
0xffff914f7990    48  ldursw x4, [x5, #15]
0xffff914f7994    52  tbnz w4, #23, #+0x18 (addr 0xffff914f79ac)
0xffff914f7998    56  ldr x4, [jssp], #8
0xffff914f799c    60  ldr x3, [jssp], #8
0xffff914f79a0    64  ldr x2, pc+56 (addr 0x0000ffff914f79d8)    ;; object: 0x408228a9 <String[8]: finished>
0xffff914f79a4    68  ldr x16, pc+60 (addr 0x0000ffff914f79e0)    ;; code: HANDLER, StoreTransitionStub, minor: 198664
0xffff914f79a8    72  br x16
0xffff914f79ac    76  ldr x2, pc+60 (addr 0x0000ffff914f79e8)    ;; object: 0x408228a9 <String[8]: finished>
0xffff914f79b0    80  ldr x4, [jssp], #8
0xffff914f79b4    84  ldr x3, [jssp], #8
0xffff914f79b8    88  ldr x16, pc+56 (addr 0x0000ffff914f79f0)    ;; code: BUILTIN
0xffff914f79bc    92  br x16
0xffff914f79c0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f79c4   100  d63f03e0       constant
0xffff914f79c8   104  408e9989       constant
0xffff914f79cc   108  00000000       constant
0xffff914f79d0   112  408d1ab1       constant
0xffff914f79d4   116  00000000       constant
0xffff914f79d8   120  408228a9       constant
0xffff914f79dc   124  00000000       constant
0xffff914f79e0   128  914e6140       constant
0xffff914f79e4   132  0000ffff       constant
0xffff914f79e8   136  408228a9       constant
0xffff914f79ec   140  00000000       constant
0xffff914f79f0   144  91422420       constant
0xffff914f79f4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f7970  embedded object  (0x408e9989 Cell for 0)
0xffff914f7984  embedded object  (0x408d1ab1 WeakCell for 0x36438189 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f79a0  embedded object  (0x408228a9 <String[8]: finished>)
0xffff914f79a4  code target (HANDLER)  (0xffff914e6140)
0xffff914f79ac  embedded object  (0x408228a9 <String[8]: finished>)
0xffff914f79b8  code target (BUILTIN)  (0xffff91422420)
0xffff914f79c0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = decodeStrings
compiler = unknown
Instructions (size = 152)
0xffff914f7a60     0  sub csp, jssp, #0x8 (8)
0xffff914f7a64     4  str x3, [jssp, #-8]!
0xffff914f7a68     8  sub csp, jssp, #0x8 (8)
0xffff914f7a6c    12  str x4, [jssp, #-8]!
0xffff914f7a70    16  ldr x3, pc+88 (addr 0x0000ffff914f7ac8)    ;; object: 0x408e9989 Cell for 0
0xffff914f7a74    20  ldur x3, [x3, #7]
0xffff914f7a78    24  cmp x3, #0x0 (0)
0xffff914f7a7c    28  b.ne #+0x30 (addr 0xffff914f7aac)
0xffff914f7a80    32  tbz w0, #0, #+0x2c (addr 0xffff914f7aac)
0xffff914f7a84    36  ldr x5, pc+76 (addr 0x0000ffff914f7ad0)    ;; object: 0x408d1ac9 WeakCell for 0x364381e1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f7a88    40  ldur x5, [x5, #7]
0xffff914f7a8c    44  tbz w5, #0, #+0x20 (addr 0xffff914f7aac)
0xffff914f7a90    48  ldursw x4, [x5, #15]
0xffff914f7a94    52  tbnz w4, #23, #+0x18 (addr 0xffff914f7aac)
0xffff914f7a98    56  ldr x4, [jssp], #8
0xffff914f7a9c    60  ldr x3, [jssp], #8
0xffff914f7aa0    64  ldr x2, pc+56 (addr 0x0000ffff914f7ad8)    ;; object: 0x408228e9 <String[13]: decodeStrings>
0xffff914f7aa4    68  ldr x16, pc+60 (addr 0x0000ffff914f7ae0)    ;; code: HANDLER, StoreTransitionStub, minor: 198665
0xffff914f7aa8    72  br x16
0xffff914f7aac    76  ldr x2, pc+60 (addr 0x0000ffff914f7ae8)    ;; object: 0x408228e9 <String[13]: decodeStrings>
0xffff914f7ab0    80  ldr x4, [jssp], #8
0xffff914f7ab4    84  ldr x3, [jssp], #8
0xffff914f7ab8    88  ldr x16, pc+56 (addr 0x0000ffff914f7af0)    ;; code: BUILTIN
0xffff914f7abc    92  br x16
0xffff914f7ac0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f7ac4   100  d63f03e0       constant
0xffff914f7ac8   104  408e9989       constant
0xffff914f7acc   108  00000000       constant
0xffff914f7ad0   112  408d1ac9       constant
0xffff914f7ad4   116  00000000       constant
0xffff914f7ad8   120  408228e9       constant
0xffff914f7adc   124  00000000       constant
0xffff914f7ae0   128  914e64e0       constant
0xffff914f7ae4   132  0000ffff       constant
0xffff914f7ae8   136  408228e9       constant
0xffff914f7aec   140  00000000       constant
0xffff914f7af0   144  91422420       constant
0xffff914f7af4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f7a70  embedded object  (0x408e9989 Cell for 0)
0xffff914f7a84  embedded object  (0x408d1ac9 WeakCell for 0x364381e1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f7aa0  embedded object  (0x408228e9 <String[13]: decodeStrings>)
0xffff914f7aa4  code target (HANDLER)  (0xffff914e64e0)
0xffff914f7aac  embedded object  (0x408228e9 <String[13]: decodeStrings>)
0xffff914f7ab8  code target (BUILTIN)  (0xffff91422420)
0xffff914f7ac0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = defaultEncoding
compiler = unknown
Instructions (size = 152)
0xffff914f7b60     0  sub csp, jssp, #0x8 (8)
0xffff914f7b64     4  str x3, [jssp, #-8]!
0xffff914f7b68     8  sub csp, jssp, #0x8 (8)
0xffff914f7b6c    12  str x4, [jssp, #-8]!
0xffff914f7b70    16  ldr x3, pc+88 (addr 0x0000ffff914f7bc8)    ;; object: 0x408e9989 Cell for 0
0xffff914f7b74    20  ldur x3, [x3, #7]
0xffff914f7b78    24  cmp x3, #0x0 (0)
0xffff914f7b7c    28  b.ne #+0x30 (addr 0xffff914f7bac)
0xffff914f7b80    32  tbz w0, #0, #+0x2c (addr 0xffff914f7bac)
0xffff914f7b84    36  ldr x5, pc+76 (addr 0x0000ffff914f7bd0)    ;; object: 0x408d1ae1 WeakCell for 0x36438239 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f7b88    40  ldur x5, [x5, #7]
0xffff914f7b8c    44  tbz w5, #0, #+0x20 (addr 0xffff914f7bac)
0xffff914f7b90    48  ldursw x4, [x5, #15]
0xffff914f7b94    52  tbnz w4, #23, #+0x18 (addr 0xffff914f7bac)
0xffff914f7b98    56  ldr x4, [jssp], #8
0xffff914f7b9c    60  ldr x3, [jssp], #8
0xffff914f7ba0    64  ldr x2, pc+56 (addr 0x0000ffff914f7bd8)    ;; object: 0x4081da19 <String[15]: defaultEncoding>
0xffff914f7ba4    68  ldr x16, pc+60 (addr 0x0000ffff914f7be0)    ;; code: HANDLER, StoreTransitionStub, minor: 198666
0xffff914f7ba8    72  br x16
0xffff914f7bac    76  ldr x2, pc+60 (addr 0x0000ffff914f7be8)    ;; object: 0x4081da19 <String[15]: defaultEncoding>
0xffff914f7bb0    80  ldr x4, [jssp], #8
0xffff914f7bb4    84  ldr x3, [jssp], #8
0xffff914f7bb8    88  ldr x16, pc+56 (addr 0x0000ffff914f7bf0)    ;; code: BUILTIN
0xffff914f7bbc    92  br x16
0xffff914f7bc0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f7bc4   100  d63f03e0       constant
0xffff914f7bc8   104  408e9989       constant
0xffff914f7bcc   108  00000000       constant
0xffff914f7bd0   112  408d1ae1       constant
0xffff914f7bd4   116  00000000       constant
0xffff914f7bd8   120  4081da19       constant
0xffff914f7bdc   124  00000000       constant
0xffff914f7be0   128  914f6940       constant
0xffff914f7be4   132  0000ffff       constant
0xffff914f7be8   136  4081da19       constant
0xffff914f7bec   140  00000000       constant
0xffff914f7bf0   144  91422420       constant
0xffff914f7bf4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f7b70  embedded object  (0x408e9989 Cell for 0)
0xffff914f7b84  embedded object  (0x408d1ae1 WeakCell for 0x36438239 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f7ba0  embedded object  (0x4081da19 <String[15]: defaultEncoding>)
0xffff914f7ba4  code target (HANDLER)  (0xffff914f6940)
0xffff914f7bac  embedded object  (0x4081da19 <String[15]: defaultEncoding>)
0xffff914f7bb8  code target (BUILTIN)  (0xffff91422420)
0xffff914f7bc0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff914f7c60     0  mov x6, x0
0xffff914f7c64     4  tbnz w6, #0, #+0x54 (addr 0xffff914f7cb8)
0xffff914f7c68     8  stur x6, [x1, #87]
0xffff914f7c6c    12  stur x5, [x1, #-1]
0xffff914f7c70    16  tbz w5, #0, #+0x34 (addr 0xffff914f7ca4)
0xffff914f7c74    20  sub x2, x1, #0x1 (1)
0xffff914f7c78    24  and x5, x5, #0xfffffffffff00000
0xffff914f7c7c    28  ldr x5, [x5, #8]
0xffff914f7c80    32  tbz w5, #1, #+0x24 (addr 0xffff914f7ca4)
0xffff914f7c84    36  and x5, x1, #0xfffffffffff00000
0xffff914f7c88    40  ldr x5, [x5, #8]
0xffff914f7c8c    44  tbz w5, #2, #+0x18 (addr 0xffff914f7ca4)
0xffff914f7c90    48  sub csp, jssp, #0x8 (8)
0xffff914f7c94    52  str lr, [jssp, #-8]!
0xffff914f7c98    56  ldr x16, pc+24 (addr 0x0000ffff914f7cb0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f7c9c    60  blr x16
0xffff914f7ca0    64  ldr lr, [jssp], #8
0xffff914f7ca4    68  ret
0xffff914f7ca8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f7cac    76  d63f03e0       constant
0xffff914f7cb0    80  91438080       constant
0xffff914f7cb4    84  0000ffff       constant
0xffff914f7cb8    88  movz x16, #0x0
0xffff914f7cbc    92  sub csp, jssp, #0x10 (16)
0xffff914f7cc0    96  stp fp, lr, [jssp, #-16]!
0xffff914f7cc4   100  bl #+0x4 (addr 0xffff914f7cc8)
0xffff914f7cc8   104  movz x17, #0xa00000000
0xffff914f7ccc   108  sub csp, jssp, #0x10 (16)
0xffff914f7cd0   112  stp x17, cp, [jssp, #-16]!
0xffff914f7cd4   116  add fp, jssp, #0x10 (16)
0xffff914f7cd8   120  ldr x17, pc+24 (addr 0x0000ffff914f7cf0)    ;; lazy deoptimization bailout 0
0xffff914f7cdc   124  add x17, x17, x16
0xffff914f7ce0   128  br x17
0xffff914f7ce4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f7ce8   136  d63f03e0       constant
0xffff914f7cec   140  d503201f       constant
0xffff914f7cf0   144  91206000       constant
0xffff914f7cf4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f7c98  code target (STUB)  (0xffff91438080)
0xffff914f7ca8  constant pool (size 16)
0xffff914f7cd8  runtime entry
0xffff914f7ce4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff914f7c60     0  mov x6, x0
0xffff914f7c64     4  tbnz w6, #0, #+0x54 (addr 0xffff914f7cb8)
0xffff914f7c68     8  stur x6, [x1, #87]
0xffff914f7c6c    12  stur x5, [x1, #-1]
0xffff914f7c70    16  tbz w5, #0, #+0x34 (addr 0xffff914f7ca4)
0xffff914f7c74    20  sub x2, x1, #0x1 (1)
0xffff914f7c78    24  and x5, x5, #0xfffffffffff00000
0xffff914f7c7c    28  ldr x5, [x5, #8]
0xffff914f7c80    32  tbz w5, #1, #+0x24 (addr 0xffff914f7ca4)
0xffff914f7c84    36  and x5, x1, #0xfffffffffff00000
0xffff914f7c88    40  ldr x5, [x5, #8]
0xffff914f7c8c    44  tbz w5, #2, #+0x18 (addr 0xffff914f7ca4)
0xffff914f7c90    48  sub csp, jssp, #0x8 (8)
0xffff914f7c94    52  str lr, [jssp, #-8]!
0xffff914f7c98    56  ldr x16, pc+24 (addr 0x0000ffff914f7cb0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f7c9c    60  blr x16
0xffff914f7ca0    64  ldr lr, [jssp], #8
0xffff914f7ca4    68  ret
0xffff914f7ca8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f7cac    76  d63f03e0       constant
0xffff914f7cb0    80  91438080       constant
0xffff914f7cb4    84  0000ffff       constant
0xffff914f7cb8    88  movz x16, #0x0
0xffff914f7cbc    92  sub csp, jssp, #0x10 (16)
0xffff914f7cc0    96  stp fp, lr, [jssp, #-16]!
0xffff914f7cc4   100  bl #+0x4 (addr 0xffff914f7cc8)
0xffff914f7cc8   104  movz x17, #0xa00000000
0xffff914f7ccc   108  sub csp, jssp, #0x10 (16)
0xffff914f7cd0   112  stp x17, cp, [jssp, #-16]!
0xffff914f7cd4   116  add fp, jssp, #0x10 (16)
0xffff914f7cd8   120  ldr x17, pc+24 (addr 0x0000ffff914f7cf0)    ;; lazy deoptimization bailout 0
0xffff914f7cdc   124  add x17, x17, x16
0xffff914f7ce0   128  br x17
0xffff914f7ce4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f7ce8   136  d63f03e0       constant
0xffff914f7cec   140  d503201f       constant
0xffff914f7cf0   144  91206000       constant
0xffff914f7cf4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f7c98  code target (STUB)  (0xffff91438080)
0xffff914f7ca8  constant pool (size 16)
0xffff914f7cd8  runtime entry
0xffff914f7ce4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = length
compiler = unknown
Instructions (size = 152)
0xffff914f7d60     0  sub csp, jssp, #0x8 (8)
0xffff914f7d64     4  str x3, [jssp, #-8]!
0xffff914f7d68     8  sub csp, jssp, #0x8 (8)
0xffff914f7d6c    12  str x4, [jssp, #-8]!
0xffff914f7d70    16  ldr x3, pc+88 (addr 0x0000ffff914f7dc8)    ;; object: 0x408e9989 Cell for 0
0xffff914f7d74    20  ldur x3, [x3, #7]
0xffff914f7d78    24  cmp x3, #0x0 (0)
0xffff914f7d7c    28  b.ne #+0x2c (addr 0xffff914f7da8)
0xffff914f7d80    32  ldr x5, pc+80 (addr 0x0000ffff914f7dd0)    ;; object: 0x408d1af9 WeakCell for 0x36438291 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f7d84    36  ldur x5, [x5, #7]
0xffff914f7d88    40  tbz w5, #0, #+0x20 (addr 0xffff914f7da8)
0xffff914f7d8c    44  ldursw x4, [x5, #15]
0xffff914f7d90    48  tbnz w4, #23, #+0x18 (addr 0xffff914f7da8)
0xffff914f7d94    52  ldr x4, [jssp], #8
0xffff914f7d98    56  ldr x3, [jssp], #8
0xffff914f7d9c    60  ldr x2, pc+60 (addr 0x0000ffff914f7dd8)    ;; object: 0x49b05141 <String[6]: length>
0xffff914f7da0    64  ldr x16, pc+64 (addr 0x0000ffff914f7de0)    ;; code: HANDLER, StoreTransitionStub, minor: 174091
0xffff914f7da4    68  br x16
0xffff914f7da8    72  ldr x2, pc+64 (addr 0x0000ffff914f7de8)    ;; object: 0x49b05141 <String[6]: length>
0xffff914f7dac    76  ldr x4, [jssp], #8
0xffff914f7db0    80  ldr x3, [jssp], #8
0xffff914f7db4    84  ldr x16, pc+60 (addr 0x0000ffff914f7df0)    ;; code: BUILTIN
0xffff914f7db8    88  br x16
0xffff914f7dbc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914f7dc0    96  d63f03e0       constant
0xffff914f7dc4   100  d503201f       constant
0xffff914f7dc8   104  408e9989       constant
0xffff914f7dcc   108  00000000       constant
0xffff914f7dd0   112  408d1af9       constant
0xffff914f7dd4   116  00000000       constant
0xffff914f7dd8   120  49b05141       constant
0xffff914f7ddc   124  00000000       constant
0xffff914f7de0   128  914f7c60       constant
0xffff914f7de4   132  0000ffff       constant
0xffff914f7de8   136  49b05141       constant
0xffff914f7dec   140  00000000       constant
0xffff914f7df0   144  91422420       constant
0xffff914f7df4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f7d70  embedded object  (0x408e9989 Cell for 0)
0xffff914f7d80  embedded object  (0x408d1af9 WeakCell for 0x36438291 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f7d9c  embedded object  (0x49b05141 <String[6]: length>)
0xffff914f7da0  code target (HANDLER)  (0xffff914f7c60)
0xffff914f7da8  embedded object  (0x49b05141 <String[6]: length>)
0xffff914f7db4  code target (BUILTIN)  (0xffff91422420)
0xffff914f7dbc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f7e60     0  tbz w0, #0, #+0x90 (addr 0xffff914f7ef0)
0xffff914f7e64     4  mov x2, x0
0xffff914f7e68     8  stur x2, [x1, #95]
0xffff914f7e6c    12  add x3, x1, #0x5f (95)
0xffff914f7e70    16  and x2, x2, #0xfffffffffff00000
0xffff914f7e74    20  ldr x2, [x2, #8]
0xffff914f7e78    24  tbz w2, #1, #+0x24 (addr 0xffff914f7e9c)
0xffff914f7e7c    28  and x2, x1, #0xfffffffffff00000
0xffff914f7e80    32  ldr x2, [x2, #8]
0xffff914f7e84    36  tbz w2, #2, #+0x18 (addr 0xffff914f7e9c)
0xffff914f7e88    40  sub csp, jssp, #0x8 (8)
0xffff914f7e8c    44  str lr, [jssp, #-8]!
0xffff914f7e90    48  ldr x16, pc+80 (addr 0x0000ffff914f7ee0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f7e94    52  blr x16
0xffff914f7e98    56  ldr lr, [jssp], #8
0xffff914f7e9c    60  stur x5, [x1, #-1]
0xffff914f7ea0    64  tbz w5, #0, #+0x34 (addr 0xffff914f7ed4)
0xffff914f7ea4    68  sub x2, x1, #0x1 (1)
0xffff914f7ea8    72  and x5, x5, #0xfffffffffff00000
0xffff914f7eac    76  ldr x5, [x5, #8]
0xffff914f7eb0    80  tbz w5, #1, #+0x24 (addr 0xffff914f7ed4)
0xffff914f7eb4    84  and x5, x1, #0xfffffffffff00000
0xffff914f7eb8    88  ldr x5, [x5, #8]
0xffff914f7ebc    92  tbz w5, #2, #+0x18 (addr 0xffff914f7ed4)
0xffff914f7ec0    96  sub csp, jssp, #0x8 (8)
0xffff914f7ec4   100  str lr, [jssp, #-8]!
0xffff914f7ec8   104  ldr x16, pc+32 (addr 0x0000ffff914f7ee8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f7ecc   108  blr x16
0xffff914f7ed0   112  ldr lr, [jssp], #8
0xffff914f7ed4   116  ret
0xffff914f7ed8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f7edc   124  d63f03e0       constant
0xffff914f7ee0   128  914170c0       constant
0xffff914f7ee4   132  0000ffff       constant
0xffff914f7ee8   136  91438080       constant
0xffff914f7eec   140  0000ffff       constant
0xffff914f7ef0   144  movz x16, #0x0
0xffff914f7ef4   148  sub csp, jssp, #0x10 (16)
0xffff914f7ef8   152  stp fp, lr, [jssp, #-16]!
0xffff914f7efc   156  bl #+0x4 (addr 0xffff914f7f00)
0xffff914f7f00   160  movz x17, #0xa00000000
0xffff914f7f04   164  sub csp, jssp, #0x10 (16)
0xffff914f7f08   168  stp x17, cp, [jssp, #-16]!
0xffff914f7f0c   172  add fp, jssp, #0x10 (16)
0xffff914f7f10   176  ldr x17, pc+24 (addr 0x0000ffff914f7f28)    ;; lazy deoptimization bailout 0
0xffff914f7f14   180  add x17, x17, x16
0xffff914f7f18   184  br x17
0xffff914f7f1c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f7f20   192  d63f03e0       constant
0xffff914f7f24   196  d503201f       constant
0xffff914f7f28   200  91206000       constant
0xffff914f7f2c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f7e90  code target (STUB)  (0xffff914170c0)
0xffff914f7ec8  code target (STUB)  (0xffff91438080)
0xffff914f7ed8  constant pool (size 24)
0xffff914f7f10  runtime entry
0xffff914f7f1c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f7e60     0  tbz w0, #0, #+0x90 (addr 0xffff914f7ef0)
0xffff914f7e64     4  mov x2, x0
0xffff914f7e68     8  stur x2, [x1, #95]
0xffff914f7e6c    12  add x3, x1, #0x5f (95)
0xffff914f7e70    16  and x2, x2, #0xfffffffffff00000
0xffff914f7e74    20  ldr x2, [x2, #8]
0xffff914f7e78    24  tbz w2, #1, #+0x24 (addr 0xffff914f7e9c)
0xffff914f7e7c    28  and x2, x1, #0xfffffffffff00000
0xffff914f7e80    32  ldr x2, [x2, #8]
0xffff914f7e84    36  tbz w2, #2, #+0x18 (addr 0xffff914f7e9c)
0xffff914f7e88    40  sub csp, jssp, #0x8 (8)
0xffff914f7e8c    44  str lr, [jssp, #-8]!
0xffff914f7e90    48  ldr x16, pc+80 (addr 0x0000ffff914f7ee0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f7e94    52  blr x16
0xffff914f7e98    56  ldr lr, [jssp], #8
0xffff914f7e9c    60  stur x5, [x1, #-1]
0xffff914f7ea0    64  tbz w5, #0, #+0x34 (addr 0xffff914f7ed4)
0xffff914f7ea4    68  sub x2, x1, #0x1 (1)
0xffff914f7ea8    72  and x5, x5, #0xfffffffffff00000
0xffff914f7eac    76  ldr x5, [x5, #8]
0xffff914f7eb0    80  tbz w5, #1, #+0x24 (addr 0xffff914f7ed4)
0xffff914f7eb4    84  and x5, x1, #0xfffffffffff00000
0xffff914f7eb8    88  ldr x5, [x5, #8]
0xffff914f7ebc    92  tbz w5, #2, #+0x18 (addr 0xffff914f7ed4)
0xffff914f7ec0    96  sub csp, jssp, #0x8 (8)
0xffff914f7ec4   100  str lr, [jssp, #-8]!
0xffff914f7ec8   104  ldr x16, pc+32 (addr 0x0000ffff914f7ee8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f7ecc   108  blr x16
0xffff914f7ed0   112  ldr lr, [jssp], #8
0xffff914f7ed4   116  ret
0xffff914f7ed8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f7edc   124  d63f03e0       constant
0xffff914f7ee0   128  914170c0       constant
0xffff914f7ee4   132  0000ffff       constant
0xffff914f7ee8   136  91438080       constant
0xffff914f7eec   140  0000ffff       constant
0xffff914f7ef0   144  movz x16, #0x0
0xffff914f7ef4   148  sub csp, jssp, #0x10 (16)
0xffff914f7ef8   152  stp fp, lr, [jssp, #-16]!
0xffff914f7efc   156  bl #+0x4 (addr 0xffff914f7f00)
0xffff914f7f00   160  movz x17, #0xa00000000
0xffff914f7f04   164  sub csp, jssp, #0x10 (16)
0xffff914f7f08   168  stp x17, cp, [jssp, #-16]!
0xffff914f7f0c   172  add fp, jssp, #0x10 (16)
0xffff914f7f10   176  ldr x17, pc+24 (addr 0x0000ffff914f7f28)    ;; lazy deoptimization bailout 0
0xffff914f7f14   180  add x17, x17, x16
0xffff914f7f18   184  br x17
0xffff914f7f1c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f7f20   192  d63f03e0       constant
0xffff914f7f24   196  d503201f       constant
0xffff914f7f28   200  91206000       constant
0xffff914f7f2c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f7e90  code target (STUB)  (0xffff914170c0)
0xffff914f7ec8  code target (STUB)  (0xffff91438080)
0xffff914f7ed8  constant pool (size 24)
0xffff914f7f10  runtime entry
0xffff914f7f1c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = writing
compiler = unknown
Instructions (size = 152)
0xffff914f7fa0     0  sub csp, jssp, #0x8 (8)
0xffff914f7fa4     4  str x3, [jssp, #-8]!
0xffff914f7fa8     8  sub csp, jssp, #0x8 (8)
0xffff914f7fac    12  str x4, [jssp, #-8]!
0xffff914f7fb0    16  ldr x3, pc+88 (addr 0x0000ffff914f8008)    ;; object: 0x408e9989 Cell for 0
0xffff914f7fb4    20  ldur x3, [x3, #7]
0xffff914f7fb8    24  cmp x3, #0x0 (0)
0xffff914f7fbc    28  b.ne #+0x30 (addr 0xffff914f7fec)
0xffff914f7fc0    32  tbz w0, #0, #+0x2c (addr 0xffff914f7fec)
0xffff914f7fc4    36  ldr x5, pc+76 (addr 0x0000ffff914f8010)    ;; object: 0x408d1b11 WeakCell for 0x364382e9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f7fc8    40  ldur x5, [x5, #7]
0xffff914f7fcc    44  tbz w5, #0, #+0x20 (addr 0xffff914f7fec)
0xffff914f7fd0    48  ldursw x4, [x5, #15]
0xffff914f7fd4    52  tbnz w4, #23, #+0x18 (addr 0xffff914f7fec)
0xffff914f7fd8    56  ldr x4, [jssp], #8
0xffff914f7fdc    60  ldr x3, [jssp], #8
0xffff914f7fe0    64  ldr x2, pc+56 (addr 0x0000ffff914f8018)    ;; object: 0x40822911 <String[7]: writing>
0xffff914f7fe4    68  ldr x16, pc+60 (addr 0x0000ffff914f8020)    ;; code: HANDLER, StoreTransitionStub, minor: 198668
0xffff914f7fe8    72  br x16
0xffff914f7fec    76  ldr x2, pc+60 (addr 0x0000ffff914f8028)    ;; object: 0x40822911 <String[7]: writing>
0xffff914f7ff0    80  ldr x4, [jssp], #8
0xffff914f7ff4    84  ldr x3, [jssp], #8
0xffff914f7ff8    88  ldr x16, pc+56 (addr 0x0000ffff914f8030)    ;; code: BUILTIN
0xffff914f7ffc    92  br x16
0xffff914f8000    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f8004   100  d63f03e0       constant
0xffff914f8008   104  408e9989       constant
0xffff914f800c   108  00000000       constant
0xffff914f8010   112  408d1b11       constant
0xffff914f8014   116  00000000       constant
0xffff914f8018   120  40822911       constant
0xffff914f801c   124  00000000       constant
0xffff914f8020   128  914f7e60       constant
0xffff914f8024   132  0000ffff       constant
0xffff914f8028   136  40822911       constant
0xffff914f802c   140  00000000       constant
0xffff914f8030   144  91422420       constant
0xffff914f8034   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f7fb0  embedded object  (0x408e9989 Cell for 0)
0xffff914f7fc4  embedded object  (0x408d1b11 WeakCell for 0x364382e9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f7fe0  embedded object  (0x40822911 <String[7]: writing>)
0xffff914f7fe4  code target (HANDLER)  (0xffff914f7e60)
0xffff914f7fec  embedded object  (0x40822911 <String[7]: writing>)
0xffff914f7ff8  code target (BUILTIN)  (0xffff91422420)
0xffff914f8000  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff914f80a0     0  mov x6, x0
0xffff914f80a4     4  tbnz w6, #0, #+0x54 (addr 0xffff914f80f8)
0xffff914f80a8     8  stur x6, [x1, #103]
0xffff914f80ac    12  stur x5, [x1, #-1]
0xffff914f80b0    16  tbz w5, #0, #+0x34 (addr 0xffff914f80e4)
0xffff914f80b4    20  sub x2, x1, #0x1 (1)
0xffff914f80b8    24  and x5, x5, #0xfffffffffff00000
0xffff914f80bc    28  ldr x5, [x5, #8]
0xffff914f80c0    32  tbz w5, #1, #+0x24 (addr 0xffff914f80e4)
0xffff914f80c4    36  and x5, x1, #0xfffffffffff00000
0xffff914f80c8    40  ldr x5, [x5, #8]
0xffff914f80cc    44  tbz w5, #2, #+0x18 (addr 0xffff914f80e4)
0xffff914f80d0    48  sub csp, jssp, #0x8 (8)
0xffff914f80d4    52  str lr, [jssp, #-8]!
0xffff914f80d8    56  ldr x16, pc+24 (addr 0x0000ffff914f80f0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f80dc    60  blr x16
0xffff914f80e0    64  ldr lr, [jssp], #8
0xffff914f80e4    68  ret
0xffff914f80e8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f80ec    76  d63f03e0       constant
0xffff914f80f0    80  91438080       constant
0xffff914f80f4    84  0000ffff       constant
0xffff914f80f8    88  movz x16, #0x0
0xffff914f80fc    92  sub csp, jssp, #0x10 (16)
0xffff914f8100    96  stp fp, lr, [jssp, #-16]!
0xffff914f8104   100  bl #+0x4 (addr 0xffff914f8108)
0xffff914f8108   104  movz x17, #0xa00000000
0xffff914f810c   108  sub csp, jssp, #0x10 (16)
0xffff914f8110   112  stp x17, cp, [jssp, #-16]!
0xffff914f8114   116  add fp, jssp, #0x10 (16)
0xffff914f8118   120  ldr x17, pc+24 (addr 0x0000ffff914f8130)    ;; lazy deoptimization bailout 0
0xffff914f811c   124  add x17, x17, x16
0xffff914f8120   128  br x17
0xffff914f8124   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f8128   136  d63f03e0       constant
0xffff914f812c   140  d503201f       constant
0xffff914f8130   144  91206000       constant
0xffff914f8134   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f80d8  code target (STUB)  (0xffff91438080)
0xffff914f80e8  constant pool (size 16)
0xffff914f8118  runtime entry
0xffff914f8124  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff914f80a0     0  mov x6, x0
0xffff914f80a4     4  tbnz w6, #0, #+0x54 (addr 0xffff914f80f8)
0xffff914f80a8     8  stur x6, [x1, #103]
0xffff914f80ac    12  stur x5, [x1, #-1]
0xffff914f80b0    16  tbz w5, #0, #+0x34 (addr 0xffff914f80e4)
0xffff914f80b4    20  sub x2, x1, #0x1 (1)
0xffff914f80b8    24  and x5, x5, #0xfffffffffff00000
0xffff914f80bc    28  ldr x5, [x5, #8]
0xffff914f80c0    32  tbz w5, #1, #+0x24 (addr 0xffff914f80e4)
0xffff914f80c4    36  and x5, x1, #0xfffffffffff00000
0xffff914f80c8    40  ldr x5, [x5, #8]
0xffff914f80cc    44  tbz w5, #2, #+0x18 (addr 0xffff914f80e4)
0xffff914f80d0    48  sub csp, jssp, #0x8 (8)
0xffff914f80d4    52  str lr, [jssp, #-8]!
0xffff914f80d8    56  ldr x16, pc+24 (addr 0x0000ffff914f80f0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f80dc    60  blr x16
0xffff914f80e0    64  ldr lr, [jssp], #8
0xffff914f80e4    68  ret
0xffff914f80e8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f80ec    76  d63f03e0       constant
0xffff914f80f0    80  91438080       constant
0xffff914f80f4    84  0000ffff       constant
0xffff914f80f8    88  movz x16, #0x0
0xffff914f80fc    92  sub csp, jssp, #0x10 (16)
0xffff914f8100    96  stp fp, lr, [jssp, #-16]!
0xffff914f8104   100  bl #+0x4 (addr 0xffff914f8108)
0xffff914f8108   104  movz x17, #0xa00000000
0xffff914f810c   108  sub csp, jssp, #0x10 (16)
0xffff914f8110   112  stp x17, cp, [jssp, #-16]!
0xffff914f8114   116  add fp, jssp, #0x10 (16)
0xffff914f8118   120  ldr x17, pc+24 (addr 0x0000ffff914f8130)    ;; lazy deoptimization bailout 0
0xffff914f811c   124  add x17, x17, x16
0xffff914f8120   128  br x17
0xffff914f8124   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f8128   136  d63f03e0       constant
0xffff914f812c   140  d503201f       constant
0xffff914f8130   144  91206000       constant
0xffff914f8134   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f80d8  code target (STUB)  (0xffff91438080)
0xffff914f80e8  constant pool (size 16)
0xffff914f8118  runtime entry
0xffff914f8124  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = corked
compiler = unknown
Instructions (size = 152)
0xffff914f81a0     0  sub csp, jssp, #0x8 (8)
0xffff914f81a4     4  str x3, [jssp, #-8]!
0xffff914f81a8     8  sub csp, jssp, #0x8 (8)
0xffff914f81ac    12  str x4, [jssp, #-8]!
0xffff914f81b0    16  ldr x3, pc+88 (addr 0x0000ffff914f8208)    ;; object: 0x408e9989 Cell for 0
0xffff914f81b4    20  ldur x3, [x3, #7]
0xffff914f81b8    24  cmp x3, #0x0 (0)
0xffff914f81bc    28  b.ne #+0x2c (addr 0xffff914f81e8)
0xffff914f81c0    32  ldr x5, pc+80 (addr 0x0000ffff914f8210)    ;; object: 0x408d1b29 WeakCell for 0x36438341 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f81c4    36  ldur x5, [x5, #7]
0xffff914f81c8    40  tbz w5, #0, #+0x20 (addr 0xffff914f81e8)
0xffff914f81cc    44  ldursw x4, [x5, #15]
0xffff914f81d0    48  tbnz w4, #23, #+0x18 (addr 0xffff914f81e8)
0xffff914f81d4    52  ldr x4, [jssp], #8
0xffff914f81d8    56  ldr x3, [jssp], #8
0xffff914f81dc    60  ldr x2, pc+60 (addr 0x0000ffff914f8218)    ;; object: 0x40822931 <String[6]: corked>
0xffff914f81e0    64  ldr x16, pc+64 (addr 0x0000ffff914f8220)    ;; code: HANDLER, StoreTransitionStub, minor: 174093
0xffff914f81e4    68  br x16
0xffff914f81e8    72  ldr x2, pc+64 (addr 0x0000ffff914f8228)    ;; object: 0x40822931 <String[6]: corked>
0xffff914f81ec    76  ldr x4, [jssp], #8
0xffff914f81f0    80  ldr x3, [jssp], #8
0xffff914f81f4    84  ldr x16, pc+60 (addr 0x0000ffff914f8230)    ;; code: BUILTIN
0xffff914f81f8    88  br x16
0xffff914f81fc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914f8200    96  d63f03e0       constant
0xffff914f8204   100  d503201f       constant
0xffff914f8208   104  408e9989       constant
0xffff914f820c   108  00000000       constant
0xffff914f8210   112  408d1b29       constant
0xffff914f8214   116  00000000       constant
0xffff914f8218   120  40822931       constant
0xffff914f821c   124  00000000       constant
0xffff914f8220   128  914f80a0       constant
0xffff914f8224   132  0000ffff       constant
0xffff914f8228   136  40822931       constant
0xffff914f822c   140  00000000       constant
0xffff914f8230   144  91422420       constant
0xffff914f8234   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f81b0  embedded object  (0x408e9989 Cell for 0)
0xffff914f81c0  embedded object  (0x408d1b29 WeakCell for 0x36438341 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f81dc  embedded object  (0x40822931 <String[6]: corked>)
0xffff914f81e0  code target (HANDLER)  (0xffff914f80a0)
0xffff914f81e8  embedded object  (0x40822931 <String[6]: corked>)
0xffff914f81f4  code target (BUILTIN)  (0xffff91422420)
0xffff914f81fc  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = sync
compiler = unknown
Instructions (size = 152)
0xffff914f82a0     0  sub csp, jssp, #0x8 (8)
0xffff914f82a4     4  str x3, [jssp, #-8]!
0xffff914f82a8     8  sub csp, jssp, #0x8 (8)
0xffff914f82ac    12  str x4, [jssp, #-8]!
0xffff914f82b0    16  ldr x3, pc+88 (addr 0x0000ffff914f8308)    ;; object: 0x408e9989 Cell for 0
0xffff914f82b4    20  ldur x3, [x3, #7]
0xffff914f82b8    24  cmp x3, #0x0 (0)
0xffff914f82bc    28  b.ne #+0x30 (addr 0xffff914f82ec)
0xffff914f82c0    32  tbz w0, #0, #+0x2c (addr 0xffff914f82ec)
0xffff914f82c4    36  ldr x5, pc+76 (addr 0x0000ffff914f8310)    ;; object: 0x408d1b41 WeakCell for 0x36438399 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f82c8    40  ldur x5, [x5, #7]
0xffff914f82cc    44  tbz w5, #0, #+0x20 (addr 0xffff914f82ec)
0xffff914f82d0    48  ldursw x4, [x5, #15]
0xffff914f82d4    52  tbnz w4, #23, #+0x18 (addr 0xffff914f82ec)
0xffff914f82d8    56  ldr x4, [jssp], #8
0xffff914f82dc    60  ldr x3, [jssp], #8
0xffff914f82e0    64  ldr x2, pc+56 (addr 0x0000ffff914f8318)    ;; object: 0x4081d951 <String[4]: sync>
0xffff914f82e4    68  ldr x16, pc+60 (addr 0x0000ffff914f8320)    ;; code: HANDLER, StoreTransitionStub, minor: 198670
0xffff914f82e8    72  br x16
0xffff914f82ec    76  ldr x2, pc+60 (addr 0x0000ffff914f8328)    ;; object: 0x4081d951 <String[4]: sync>
0xffff914f82f0    80  ldr x4, [jssp], #8
0xffff914f82f4    84  ldr x3, [jssp], #8
0xffff914f82f8    88  ldr x16, pc+56 (addr 0x0000ffff914f8330)    ;; code: BUILTIN
0xffff914f82fc    92  br x16
0xffff914f8300    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f8304   100  d63f03e0       constant
0xffff914f8308   104  408e9989       constant
0xffff914f830c   108  00000000       constant
0xffff914f8310   112  408d1b41       constant
0xffff914f8314   116  00000000       constant
0xffff914f8318   120  4081d951       constant
0xffff914f831c   124  00000000       constant
0xffff914f8320   128  914d5120       constant
0xffff914f8324   132  0000ffff       constant
0xffff914f8328   136  4081d951       constant
0xffff914f832c   140  00000000       constant
0xffff914f8330   144  91422420       constant
0xffff914f8334   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f82b0  embedded object  (0x408e9989 Cell for 0)
0xffff914f82c4  embedded object  (0x408d1b41 WeakCell for 0x36438399 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f82e0  embedded object  (0x4081d951 <String[4]: sync>)
0xffff914f82e4  code target (HANDLER)  (0xffff914d5120)
0xffff914f82ec  embedded object  (0x4081d951 <String[4]: sync>)
0xffff914f82f8  code target (BUILTIN)  (0xffff91422420)
0xffff914f8300  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = bufferProcessing
compiler = unknown
Instructions (size = 152)
0xffff914f83a0     0  sub csp, jssp, #0x8 (8)
0xffff914f83a4     4  str x3, [jssp, #-8]!
0xffff914f83a8     8  sub csp, jssp, #0x8 (8)
0xffff914f83ac    12  str x4, [jssp, #-8]!
0xffff914f83b0    16  ldr x3, pc+88 (addr 0x0000ffff914f8408)    ;; object: 0x408e9989 Cell for 0
0xffff914f83b4    20  ldur x3, [x3, #7]
0xffff914f83b8    24  cmp x3, #0x0 (0)
0xffff914f83bc    28  b.ne #+0x30 (addr 0xffff914f83ec)
0xffff914f83c0    32  tbz w0, #0, #+0x2c (addr 0xffff914f83ec)
0xffff914f83c4    36  ldr x5, pc+76 (addr 0x0000ffff914f8410)    ;; object: 0x408d1b59 WeakCell for 0x364383f1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f83c8    40  ldur x5, [x5, #7]
0xffff914f83cc    44  tbz w5, #0, #+0x20 (addr 0xffff914f83ec)
0xffff914f83d0    48  ldursw x4, [x5, #15]
0xffff914f83d4    52  tbnz w4, #23, #+0x18 (addr 0xffff914f83ec)
0xffff914f83d8    56  ldr x4, [jssp], #8
0xffff914f83dc    60  ldr x3, [jssp], #8
0xffff914f83e0    64  ldr x2, pc+56 (addr 0x0000ffff914f8418)    ;; object: 0x40822951 <String[16]: bufferProcessing>
0xffff914f83e4    68  ldr x16, pc+60 (addr 0x0000ffff914f8420)    ;; code: HANDLER, StoreTransitionStub, minor: 198671
0xffff914f83e8    72  br x16
0xffff914f83ec    76  ldr x2, pc+60 (addr 0x0000ffff914f8428)    ;; object: 0x40822951 <String[16]: bufferProcessing>
0xffff914f83f0    80  ldr x4, [jssp], #8
0xffff914f83f4    84  ldr x3, [jssp], #8
0xffff914f83f8    88  ldr x16, pc+56 (addr 0x0000ffff914f8430)    ;; code: BUILTIN
0xffff914f83fc    92  br x16
0xffff914f8400    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f8404   100  d63f03e0       constant
0xffff914f8408   104  408e9989       constant
0xffff914f840c   108  00000000       constant
0xffff914f8410   112  408d1b59       constant
0xffff914f8414   116  00000000       constant
0xffff914f8418   120  40822951       constant
0xffff914f841c   124  00000000       constant
0xffff914f8420   128  914d5380       constant
0xffff914f8424   132  0000ffff       constant
0xffff914f8428   136  40822951       constant
0xffff914f842c   140  00000000       constant
0xffff914f8430   144  91422420       constant
0xffff914f8434   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f83b0  embedded object  (0x408e9989 Cell for 0)
0xffff914f83c4  embedded object  (0x408d1b59 WeakCell for 0x364383f1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f83e0  embedded object  (0x40822951 <String[16]: bufferProcessing>)
0xffff914f83e4  code target (HANDLER)  (0xffff914d5380)
0xffff914f83ec  embedded object  (0x40822951 <String[16]: bufferProcessing>)
0xffff914f83f8  code target (BUILTIN)  (0xffff91422420)
0xffff914f8400  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = onwrite
compiler = unknown
Instructions (size = 152)
0xffff914f84a0     0  sub csp, jssp, #0x8 (8)
0xffff914f84a4     4  str x3, [jssp, #-8]!
0xffff914f84a8     8  sub csp, jssp, #0x8 (8)
0xffff914f84ac    12  str x4, [jssp, #-8]!
0xffff914f84b0    16  ldr x3, pc+88 (addr 0x0000ffff914f8508)    ;; object: 0x408e9989 Cell for 0
0xffff914f84b4    20  ldur x3, [x3, #7]
0xffff914f84b8    24  cmp x3, #0x0 (0)
0xffff914f84bc    28  b.ne #+0x30 (addr 0xffff914f84ec)
0xffff914f84c0    32  tbz w0, #0, #+0x2c (addr 0xffff914f84ec)
0xffff914f84c4    36  ldr x5, pc+76 (addr 0x0000ffff914f8510)    ;; object: 0x408e9ef9 WeakCell for 0x36440589 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f84c8    40  ldur x5, [x5, #7]
0xffff914f84cc    44  tbz w5, #0, #+0x20 (addr 0xffff914f84ec)
0xffff914f84d0    48  ldursw x4, [x5, #15]
0xffff914f84d4    52  tbnz w4, #23, #+0x18 (addr 0xffff914f84ec)
0xffff914f84d8    56  ldr x4, [jssp], #8
0xffff914f84dc    60  ldr x3, [jssp], #8
0xffff914f84e0    64  ldr x2, pc+56 (addr 0x0000ffff914f8518)    ;; object: 0x49bb2dc1 <String[7]: onwrite>
0xffff914f84e4    68  ldr x16, pc+60 (addr 0x0000ffff914f8520)    ;; code: HANDLER, StoreTransitionStub, minor: 198672
0xffff914f84e8    72  br x16
0xffff914f84ec    76  ldr x2, pc+60 (addr 0x0000ffff914f8528)    ;; object: 0x49bb2dc1 <String[7]: onwrite>
0xffff914f84f0    80  ldr x4, [jssp], #8
0xffff914f84f4    84  ldr x3, [jssp], #8
0xffff914f84f8    88  ldr x16, pc+56 (addr 0x0000ffff914f8530)    ;; code: BUILTIN
0xffff914f84fc    92  br x16
0xffff914f8500    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f8504   100  d63f03e0       constant
0xffff914f8508   104  408e9989       constant
0xffff914f850c   108  00000000       constant
0xffff914f8510   112  408e9ef9       constant
0xffff914f8514   116  00000000       constant
0xffff914f8518   120  49bb2dc1       constant
0xffff914f851c   124  00000000       constant
0xffff914f8520   128  914d55e0       constant
0xffff914f8524   132  0000ffff       constant
0xffff914f8528   136  49bb2dc1       constant
0xffff914f852c   140  00000000       constant
0xffff914f8530   144  91422420       constant
0xffff914f8534   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f84b0  embedded object  (0x408e9989 Cell for 0)
0xffff914f84c4  embedded object  (0x408e9ef9 WeakCell for 0x36440589 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f84e0  embedded object  (0x49bb2dc1 <String[7]: onwrite>)
0xffff914f84e4  code target (HANDLER)  (0xffff914d55e0)
0xffff914f84ec  embedded object  (0x49bb2dc1 <String[7]: onwrite>)
0xffff914f84f8  code target (BUILTIN)  (0xffff91422420)
0xffff914f8500  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f85a0     0  tbz w0, #0, #+0x90 (addr 0xffff914f8630)
0xffff914f85a4     4  mov x2, x0
0xffff914f85a8     8  stur x2, [x1, #135]
0xffff914f85ac    12  add x3, x1, #0x87 (135)
0xffff914f85b0    16  and x2, x2, #0xfffffffffff00000
0xffff914f85b4    20  ldr x2, [x2, #8]
0xffff914f85b8    24  tbz w2, #1, #+0x24 (addr 0xffff914f85dc)
0xffff914f85bc    28  and x2, x1, #0xfffffffffff00000
0xffff914f85c0    32  ldr x2, [x2, #8]
0xffff914f85c4    36  tbz w2, #2, #+0x18 (addr 0xffff914f85dc)
0xffff914f85c8    40  sub csp, jssp, #0x8 (8)
0xffff914f85cc    44  str lr, [jssp, #-8]!
0xffff914f85d0    48  ldr x16, pc+80 (addr 0x0000ffff914f8620)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f85d4    52  blr x16
0xffff914f85d8    56  ldr lr, [jssp], #8
0xffff914f85dc    60  stur x5, [x1, #-1]
0xffff914f85e0    64  tbz w5, #0, #+0x34 (addr 0xffff914f8614)
0xffff914f85e4    68  sub x2, x1, #0x1 (1)
0xffff914f85e8    72  and x5, x5, #0xfffffffffff00000
0xffff914f85ec    76  ldr x5, [x5, #8]
0xffff914f85f0    80  tbz w5, #1, #+0x24 (addr 0xffff914f8614)
0xffff914f85f4    84  and x5, x1, #0xfffffffffff00000
0xffff914f85f8    88  ldr x5, [x5, #8]
0xffff914f85fc    92  tbz w5, #2, #+0x18 (addr 0xffff914f8614)
0xffff914f8600    96  sub csp, jssp, #0x8 (8)
0xffff914f8604   100  str lr, [jssp, #-8]!
0xffff914f8608   104  ldr x16, pc+32 (addr 0x0000ffff914f8628)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f860c   108  blr x16
0xffff914f8610   112  ldr lr, [jssp], #8
0xffff914f8614   116  ret
0xffff914f8618   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f861c   124  d63f03e0       constant
0xffff914f8620   128  914170c0       constant
0xffff914f8624   132  0000ffff       constant
0xffff914f8628   136  91438080       constant
0xffff914f862c   140  0000ffff       constant
0xffff914f8630   144  movz x16, #0x0
0xffff914f8634   148  sub csp, jssp, #0x10 (16)
0xffff914f8638   152  stp fp, lr, [jssp, #-16]!
0xffff914f863c   156  bl #+0x4 (addr 0xffff914f8640)
0xffff914f8640   160  movz x17, #0xa00000000
0xffff914f8644   164  sub csp, jssp, #0x10 (16)
0xffff914f8648   168  stp x17, cp, [jssp, #-16]!
0xffff914f864c   172  add fp, jssp, #0x10 (16)
0xffff914f8650   176  ldr x17, pc+24 (addr 0x0000ffff914f8668)    ;; lazy deoptimization bailout 0
0xffff914f8654   180  add x17, x17, x16
0xffff914f8658   184  br x17
0xffff914f865c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f8660   192  d63f03e0       constant
0xffff914f8664   196  d503201f       constant
0xffff914f8668   200  91206000       constant
0xffff914f866c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f85d0  code target (STUB)  (0xffff914170c0)
0xffff914f8608  code target (STUB)  (0xffff91438080)
0xffff914f8618  constant pool (size 24)
0xffff914f8650  runtime entry
0xffff914f865c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f85a0     0  tbz w0, #0, #+0x90 (addr 0xffff914f8630)
0xffff914f85a4     4  mov x2, x0
0xffff914f85a8     8  stur x2, [x1, #135]
0xffff914f85ac    12  add x3, x1, #0x87 (135)
0xffff914f85b0    16  and x2, x2, #0xfffffffffff00000
0xffff914f85b4    20  ldr x2, [x2, #8]
0xffff914f85b8    24  tbz w2, #1, #+0x24 (addr 0xffff914f85dc)
0xffff914f85bc    28  and x2, x1, #0xfffffffffff00000
0xffff914f85c0    32  ldr x2, [x2, #8]
0xffff914f85c4    36  tbz w2, #2, #+0x18 (addr 0xffff914f85dc)
0xffff914f85c8    40  sub csp, jssp, #0x8 (8)
0xffff914f85cc    44  str lr, [jssp, #-8]!
0xffff914f85d0    48  ldr x16, pc+80 (addr 0x0000ffff914f8620)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f85d4    52  blr x16
0xffff914f85d8    56  ldr lr, [jssp], #8
0xffff914f85dc    60  stur x5, [x1, #-1]
0xffff914f85e0    64  tbz w5, #0, #+0x34 (addr 0xffff914f8614)
0xffff914f85e4    68  sub x2, x1, #0x1 (1)
0xffff914f85e8    72  and x5, x5, #0xfffffffffff00000
0xffff914f85ec    76  ldr x5, [x5, #8]
0xffff914f85f0    80  tbz w5, #1, #+0x24 (addr 0xffff914f8614)
0xffff914f85f4    84  and x5, x1, #0xfffffffffff00000
0xffff914f85f8    88  ldr x5, [x5, #8]
0xffff914f85fc    92  tbz w5, #2, #+0x18 (addr 0xffff914f8614)
0xffff914f8600    96  sub csp, jssp, #0x8 (8)
0xffff914f8604   100  str lr, [jssp, #-8]!
0xffff914f8608   104  ldr x16, pc+32 (addr 0x0000ffff914f8628)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f860c   108  blr x16
0xffff914f8610   112  ldr lr, [jssp], #8
0xffff914f8614   116  ret
0xffff914f8618   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f861c   124  d63f03e0       constant
0xffff914f8620   128  914170c0       constant
0xffff914f8624   132  0000ffff       constant
0xffff914f8628   136  91438080       constant
0xffff914f862c   140  0000ffff       constant
0xffff914f8630   144  movz x16, #0x0
0xffff914f8634   148  sub csp, jssp, #0x10 (16)
0xffff914f8638   152  stp fp, lr, [jssp, #-16]!
0xffff914f863c   156  bl #+0x4 (addr 0xffff914f8640)
0xffff914f8640   160  movz x17, #0xa00000000
0xffff914f8644   164  sub csp, jssp, #0x10 (16)
0xffff914f8648   168  stp x17, cp, [jssp, #-16]!
0xffff914f864c   172  add fp, jssp, #0x10 (16)
0xffff914f8650   176  ldr x17, pc+24 (addr 0x0000ffff914f8668)    ;; lazy deoptimization bailout 0
0xffff914f8654   180  add x17, x17, x16
0xffff914f8658   184  br x17
0xffff914f865c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f8660   192  d63f03e0       constant
0xffff914f8664   196  d503201f       constant
0xffff914f8668   200  91206000       constant
0xffff914f866c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f85d0  code target (STUB)  (0xffff914170c0)
0xffff914f8608  code target (STUB)  (0xffff91438080)
0xffff914f8618  constant pool (size 24)
0xffff914f8650  runtime entry
0xffff914f865c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = writecb
compiler = unknown
Instructions (size = 152)
0xffff914f86e0     0  sub csp, jssp, #0x8 (8)
0xffff914f86e4     4  str x3, [jssp, #-8]!
0xffff914f86e8     8  sub csp, jssp, #0x8 (8)
0xffff914f86ec    12  str x4, [jssp, #-8]!
0xffff914f86f0    16  ldr x3, pc+88 (addr 0x0000ffff914f8748)    ;; object: 0x408e9989 Cell for 0
0xffff914f86f4    20  ldur x3, [x3, #7]
0xffff914f86f8    24  cmp x3, #0x0 (0)
0xffff914f86fc    28  b.ne #+0x30 (addr 0xffff914f872c)
0xffff914f8700    32  tbz w0, #0, #+0x2c (addr 0xffff914f872c)
0xffff914f8704    36  ldr x5, pc+76 (addr 0x0000ffff914f8750)    ;; object: 0x408e9f31 WeakCell for 0x364405e1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f8708    40  ldur x5, [x5, #7]
0xffff914f870c    44  tbz w5, #0, #+0x20 (addr 0xffff914f872c)
0xffff914f8710    48  ldursw x4, [x5, #15]
0xffff914f8714    52  tbnz w4, #23, #+0x18 (addr 0xffff914f872c)
0xffff914f8718    56  ldr x4, [jssp], #8
0xffff914f871c    60  ldr x3, [jssp], #8
0xffff914f8720    64  ldr x2, pc+56 (addr 0x0000ffff914f8758)    ;; object: 0x40822979 <String[7]: writecb>
0xffff914f8724    68  ldr x16, pc+60 (addr 0x0000ffff914f8760)    ;; code: HANDLER, StoreTransitionStub, minor: 198673
0xffff914f8728    72  br x16
0xffff914f872c    76  ldr x2, pc+60 (addr 0x0000ffff914f8768)    ;; object: 0x40822979 <String[7]: writecb>
0xffff914f8730    80  ldr x4, [jssp], #8
0xffff914f8734    84  ldr x3, [jssp], #8
0xffff914f8738    88  ldr x16, pc+56 (addr 0x0000ffff914f8770)    ;; code: BUILTIN
0xffff914f873c    92  br x16
0xffff914f8740    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f8744   100  d63f03e0       constant
0xffff914f8748   104  408e9989       constant
0xffff914f874c   108  00000000       constant
0xffff914f8750   112  408e9f31       constant
0xffff914f8754   116  00000000       constant
0xffff914f8758   120  40822979       constant
0xffff914f875c   124  00000000       constant
0xffff914f8760   128  914f85a0       constant
0xffff914f8764   132  0000ffff       constant
0xffff914f8768   136  40822979       constant
0xffff914f876c   140  00000000       constant
0xffff914f8770   144  91422420       constant
0xffff914f8774   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f86f0  embedded object  (0x408e9989 Cell for 0)
0xffff914f8704  embedded object  (0x408e9f31 WeakCell for 0x364405e1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f8720  embedded object  (0x40822979 <String[7]: writecb>)
0xffff914f8724  code target (HANDLER)  (0xffff914f85a0)
0xffff914f872c  embedded object  (0x40822979 <String[7]: writecb>)
0xffff914f8738  code target (BUILTIN)  (0xffff91422420)
0xffff914f8740  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff914f87e0     0  mov x6, x0
0xffff914f87e4     4  tbnz w6, #0, #+0x54 (addr 0xffff914f8838)
0xffff914f87e8     8  stur x6, [x1, #143]
0xffff914f87ec    12  stur x5, [x1, #-1]
0xffff914f87f0    16  tbz w5, #0, #+0x34 (addr 0xffff914f8824)
0xffff914f87f4    20  sub x2, x1, #0x1 (1)
0xffff914f87f8    24  and x5, x5, #0xfffffffffff00000
0xffff914f87fc    28  ldr x5, [x5, #8]
0xffff914f8800    32  tbz w5, #1, #+0x24 (addr 0xffff914f8824)
0xffff914f8804    36  and x5, x1, #0xfffffffffff00000
0xffff914f8808    40  ldr x5, [x5, #8]
0xffff914f880c    44  tbz w5, #2, #+0x18 (addr 0xffff914f8824)
0xffff914f8810    48  sub csp, jssp, #0x8 (8)
0xffff914f8814    52  str lr, [jssp, #-8]!
0xffff914f8818    56  ldr x16, pc+24 (addr 0x0000ffff914f8830)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f881c    60  blr x16
0xffff914f8820    64  ldr lr, [jssp], #8
0xffff914f8824    68  ret
0xffff914f8828    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f882c    76  d63f03e0       constant
0xffff914f8830    80  91438080       constant
0xffff914f8834    84  0000ffff       constant
0xffff914f8838    88  movz x16, #0x0
0xffff914f883c    92  sub csp, jssp, #0x10 (16)
0xffff914f8840    96  stp fp, lr, [jssp, #-16]!
0xffff914f8844   100  bl #+0x4 (addr 0xffff914f8848)
0xffff914f8848   104  movz x17, #0xa00000000
0xffff914f884c   108  sub csp, jssp, #0x10 (16)
0xffff914f8850   112  stp x17, cp, [jssp, #-16]!
0xffff914f8854   116  add fp, jssp, #0x10 (16)
0xffff914f8858   120  ldr x17, pc+24 (addr 0x0000ffff914f8870)    ;; lazy deoptimization bailout 0
0xffff914f885c   124  add x17, x17, x16
0xffff914f8860   128  br x17
0xffff914f8864   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f8868   136  d63f03e0       constant
0xffff914f886c   140  d503201f       constant
0xffff914f8870   144  91206000       constant
0xffff914f8874   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f8818  code target (STUB)  (0xffff91438080)
0xffff914f8828  constant pool (size 16)
0xffff914f8858  runtime entry
0xffff914f8864  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff914f87e0     0  mov x6, x0
0xffff914f87e4     4  tbnz w6, #0, #+0x54 (addr 0xffff914f8838)
0xffff914f87e8     8  stur x6, [x1, #143]
0xffff914f87ec    12  stur x5, [x1, #-1]
0xffff914f87f0    16  tbz w5, #0, #+0x34 (addr 0xffff914f8824)
0xffff914f87f4    20  sub x2, x1, #0x1 (1)
0xffff914f87f8    24  and x5, x5, #0xfffffffffff00000
0xffff914f87fc    28  ldr x5, [x5, #8]
0xffff914f8800    32  tbz w5, #1, #+0x24 (addr 0xffff914f8824)
0xffff914f8804    36  and x5, x1, #0xfffffffffff00000
0xffff914f8808    40  ldr x5, [x5, #8]
0xffff914f880c    44  tbz w5, #2, #+0x18 (addr 0xffff914f8824)
0xffff914f8810    48  sub csp, jssp, #0x8 (8)
0xffff914f8814    52  str lr, [jssp, #-8]!
0xffff914f8818    56  ldr x16, pc+24 (addr 0x0000ffff914f8830)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f881c    60  blr x16
0xffff914f8820    64  ldr lr, [jssp], #8
0xffff914f8824    68  ret
0xffff914f8828    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f882c    76  d63f03e0       constant
0xffff914f8830    80  91438080       constant
0xffff914f8834    84  0000ffff       constant
0xffff914f8838    88  movz x16, #0x0
0xffff914f883c    92  sub csp, jssp, #0x10 (16)
0xffff914f8840    96  stp fp, lr, [jssp, #-16]!
0xffff914f8844   100  bl #+0x4 (addr 0xffff914f8848)
0xffff914f8848   104  movz x17, #0xa00000000
0xffff914f884c   108  sub csp, jssp, #0x10 (16)
0xffff914f8850   112  stp x17, cp, [jssp, #-16]!
0xffff914f8854   116  add fp, jssp, #0x10 (16)
0xffff914f8858   120  ldr x17, pc+24 (addr 0x0000ffff914f8870)    ;; lazy deoptimization bailout 0
0xffff914f885c   124  add x17, x17, x16
0xffff914f8860   128  br x17
0xffff914f8864   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f8868   136  d63f03e0       constant
0xffff914f886c   140  d503201f       constant
0xffff914f8870   144  91206000       constant
0xffff914f8874   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f8818  code target (STUB)  (0xffff91438080)
0xffff914f8828  constant pool (size 16)
0xffff914f8858  runtime entry
0xffff914f8864  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = writelen
compiler = unknown
Instructions (size = 152)
0xffff914f88e0     0  sub csp, jssp, #0x8 (8)
0xffff914f88e4     4  str x3, [jssp, #-8]!
0xffff914f88e8     8  sub csp, jssp, #0x8 (8)
0xffff914f88ec    12  str x4, [jssp, #-8]!
0xffff914f88f0    16  ldr x3, pc+88 (addr 0x0000ffff914f8948)    ;; object: 0x408e9989 Cell for 0
0xffff914f88f4    20  ldur x3, [x3, #7]
0xffff914f88f8    24  cmp x3, #0x0 (0)
0xffff914f88fc    28  b.ne #+0x2c (addr 0xffff914f8928)
0xffff914f8900    32  ldr x5, pc+80 (addr 0x0000ffff914f8950)    ;; object: 0x408ea021 WeakCell for 0x36440639 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f8904    36  ldur x5, [x5, #7]
0xffff914f8908    40  tbz w5, #0, #+0x20 (addr 0xffff914f8928)
0xffff914f890c    44  ldursw x4, [x5, #15]
0xffff914f8910    48  tbnz w4, #23, #+0x18 (addr 0xffff914f8928)
0xffff914f8914    52  ldr x4, [jssp], #8
0xffff914f8918    56  ldr x3, [jssp], #8
0xffff914f891c    60  ldr x2, pc+60 (addr 0x0000ffff914f8958)    ;; object: 0x40822999 <String[8]: writelen>
0xffff914f8920    64  ldr x16, pc+64 (addr 0x0000ffff914f8960)    ;; code: HANDLER, StoreTransitionStub, minor: 174098
0xffff914f8924    68  br x16
0xffff914f8928    72  ldr x2, pc+64 (addr 0x0000ffff914f8968)    ;; object: 0x40822999 <String[8]: writelen>
0xffff914f892c    76  ldr x4, [jssp], #8
0xffff914f8930    80  ldr x3, [jssp], #8
0xffff914f8934    84  ldr x16, pc+60 (addr 0x0000ffff914f8970)    ;; code: BUILTIN
0xffff914f8938    88  br x16
0xffff914f893c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914f8940    96  d63f03e0       constant
0xffff914f8944   100  d503201f       constant
0xffff914f8948   104  408e9989       constant
0xffff914f894c   108  00000000       constant
0xffff914f8950   112  408ea021       constant
0xffff914f8954   116  00000000       constant
0xffff914f8958   120  40822999       constant
0xffff914f895c   124  00000000       constant
0xffff914f8960   128  914f87e0       constant
0xffff914f8964   132  0000ffff       constant
0xffff914f8968   136  40822999       constant
0xffff914f896c   140  00000000       constant
0xffff914f8970   144  91422420       constant
0xffff914f8974   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f88f0  embedded object  (0x408e9989 Cell for 0)
0xffff914f8900  embedded object  (0x408ea021 WeakCell for 0x36440639 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f891c  embedded object  (0x40822999 <String[8]: writelen>)
0xffff914f8920  code target (HANDLER)  (0xffff914f87e0)
0xffff914f8928  embedded object  (0x40822999 <String[8]: writelen>)
0xffff914f8934  code target (BUILTIN)  (0xffff91422420)
0xffff914f893c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f89e0     0  tbz w0, #0, #+0x90 (addr 0xffff914f8a70)
0xffff914f89e4     4  mov x2, x0
0xffff914f89e8     8  stur x2, [x1, #151]
0xffff914f89ec    12  add x3, x1, #0x97 (151)
0xffff914f89f0    16  and x2, x2, #0xfffffffffff00000
0xffff914f89f4    20  ldr x2, [x2, #8]
0xffff914f89f8    24  tbz w2, #1, #+0x24 (addr 0xffff914f8a1c)
0xffff914f89fc    28  and x2, x1, #0xfffffffffff00000
0xffff914f8a00    32  ldr x2, [x2, #8]
0xffff914f8a04    36  tbz w2, #2, #+0x18 (addr 0xffff914f8a1c)
0xffff914f8a08    40  sub csp, jssp, #0x8 (8)
0xffff914f8a0c    44  str lr, [jssp, #-8]!
0xffff914f8a10    48  ldr x16, pc+80 (addr 0x0000ffff914f8a60)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f8a14    52  blr x16
0xffff914f8a18    56  ldr lr, [jssp], #8
0xffff914f8a1c    60  stur x5, [x1, #-1]
0xffff914f8a20    64  tbz w5, #0, #+0x34 (addr 0xffff914f8a54)
0xffff914f8a24    68  sub x2, x1, #0x1 (1)
0xffff914f8a28    72  and x5, x5, #0xfffffffffff00000
0xffff914f8a2c    76  ldr x5, [x5, #8]
0xffff914f8a30    80  tbz w5, #1, #+0x24 (addr 0xffff914f8a54)
0xffff914f8a34    84  and x5, x1, #0xfffffffffff00000
0xffff914f8a38    88  ldr x5, [x5, #8]
0xffff914f8a3c    92  tbz w5, #2, #+0x18 (addr 0xffff914f8a54)
0xffff914f8a40    96  sub csp, jssp, #0x8 (8)
0xffff914f8a44   100  str lr, [jssp, #-8]!
0xffff914f8a48   104  ldr x16, pc+32 (addr 0x0000ffff914f8a68)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f8a4c   108  blr x16
0xffff914f8a50   112  ldr lr, [jssp], #8
0xffff914f8a54   116  ret
0xffff914f8a58   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f8a5c   124  d63f03e0       constant
0xffff914f8a60   128  914170c0       constant
0xffff914f8a64   132  0000ffff       constant
0xffff914f8a68   136  91438080       constant
0xffff914f8a6c   140  0000ffff       constant
0xffff914f8a70   144  movz x16, #0x0
0xffff914f8a74   148  sub csp, jssp, #0x10 (16)
0xffff914f8a78   152  stp fp, lr, [jssp, #-16]!
0xffff914f8a7c   156  bl #+0x4 (addr 0xffff914f8a80)
0xffff914f8a80   160  movz x17, #0xa00000000
0xffff914f8a84   164  sub csp, jssp, #0x10 (16)
0xffff914f8a88   168  stp x17, cp, [jssp, #-16]!
0xffff914f8a8c   172  add fp, jssp, #0x10 (16)
0xffff914f8a90   176  ldr x17, pc+24 (addr 0x0000ffff914f8aa8)    ;; lazy deoptimization bailout 0
0xffff914f8a94   180  add x17, x17, x16
0xffff914f8a98   184  br x17
0xffff914f8a9c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f8aa0   192  d63f03e0       constant
0xffff914f8aa4   196  d503201f       constant
0xffff914f8aa8   200  91206000       constant
0xffff914f8aac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f8a10  code target (STUB)  (0xffff914170c0)
0xffff914f8a48  code target (STUB)  (0xffff91438080)
0xffff914f8a58  constant pool (size 24)
0xffff914f8a90  runtime entry
0xffff914f8a9c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f89e0     0  tbz w0, #0, #+0x90 (addr 0xffff914f8a70)
0xffff914f89e4     4  mov x2, x0
0xffff914f89e8     8  stur x2, [x1, #151]
0xffff914f89ec    12  add x3, x1, #0x97 (151)
0xffff914f89f0    16  and x2, x2, #0xfffffffffff00000
0xffff914f89f4    20  ldr x2, [x2, #8]
0xffff914f89f8    24  tbz w2, #1, #+0x24 (addr 0xffff914f8a1c)
0xffff914f89fc    28  and x2, x1, #0xfffffffffff00000
0xffff914f8a00    32  ldr x2, [x2, #8]
0xffff914f8a04    36  tbz w2, #2, #+0x18 (addr 0xffff914f8a1c)
0xffff914f8a08    40  sub csp, jssp, #0x8 (8)
0xffff914f8a0c    44  str lr, [jssp, #-8]!
0xffff914f8a10    48  ldr x16, pc+80 (addr 0x0000ffff914f8a60)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f8a14    52  blr x16
0xffff914f8a18    56  ldr lr, [jssp], #8
0xffff914f8a1c    60  stur x5, [x1, #-1]
0xffff914f8a20    64  tbz w5, #0, #+0x34 (addr 0xffff914f8a54)
0xffff914f8a24    68  sub x2, x1, #0x1 (1)
0xffff914f8a28    72  and x5, x5, #0xfffffffffff00000
0xffff914f8a2c    76  ldr x5, [x5, #8]
0xffff914f8a30    80  tbz w5, #1, #+0x24 (addr 0xffff914f8a54)
0xffff914f8a34    84  and x5, x1, #0xfffffffffff00000
0xffff914f8a38    88  ldr x5, [x5, #8]
0xffff914f8a3c    92  tbz w5, #2, #+0x18 (addr 0xffff914f8a54)
0xffff914f8a40    96  sub csp, jssp, #0x8 (8)
0xffff914f8a44   100  str lr, [jssp, #-8]!
0xffff914f8a48   104  ldr x16, pc+32 (addr 0x0000ffff914f8a68)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f8a4c   108  blr x16
0xffff914f8a50   112  ldr lr, [jssp], #8
0xffff914f8a54   116  ret
0xffff914f8a58   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f8a5c   124  d63f03e0       constant
0xffff914f8a60   128  914170c0       constant
0xffff914f8a64   132  0000ffff       constant
0xffff914f8a68   136  91438080       constant
0xffff914f8a6c   140  0000ffff       constant
0xffff914f8a70   144  movz x16, #0x0
0xffff914f8a74   148  sub csp, jssp, #0x10 (16)
0xffff914f8a78   152  stp fp, lr, [jssp, #-16]!
0xffff914f8a7c   156  bl #+0x4 (addr 0xffff914f8a80)
0xffff914f8a80   160  movz x17, #0xa00000000
0xffff914f8a84   164  sub csp, jssp, #0x10 (16)
0xffff914f8a88   168  stp x17, cp, [jssp, #-16]!
0xffff914f8a8c   172  add fp, jssp, #0x10 (16)
0xffff914f8a90   176  ldr x17, pc+24 (addr 0x0000ffff914f8aa8)    ;; lazy deoptimization bailout 0
0xffff914f8a94   180  add x17, x17, x16
0xffff914f8a98   184  br x17
0xffff914f8a9c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f8aa0   192  d63f03e0       constant
0xffff914f8aa4   196  d503201f       constant
0xffff914f8aa8   200  91206000       constant
0xffff914f8aac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f8a10  code target (STUB)  (0xffff914170c0)
0xffff914f8a48  code target (STUB)  (0xffff91438080)
0xffff914f8a58  constant pool (size 24)
0xffff914f8a90  runtime entry
0xffff914f8a9c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = bufferedRequest
compiler = unknown
Instructions (size = 152)
0xffff914f8b20     0  sub csp, jssp, #0x8 (8)
0xffff914f8b24     4  str x3, [jssp, #-8]!
0xffff914f8b28     8  sub csp, jssp, #0x8 (8)
0xffff914f8b2c    12  str x4, [jssp, #-8]!
0xffff914f8b30    16  ldr x3, pc+88 (addr 0x0000ffff914f8b88)    ;; object: 0x408e9989 Cell for 0
0xffff914f8b34    20  ldur x3, [x3, #7]
0xffff914f8b38    24  cmp x3, #0x0 (0)
0xffff914f8b3c    28  b.ne #+0x30 (addr 0xffff914f8b6c)
0xffff914f8b40    32  tbz w0, #0, #+0x2c (addr 0xffff914f8b6c)
0xffff914f8b44    36  ldr x5, pc+76 (addr 0x0000ffff914f8b90)    ;; object: 0x408ea111 WeakCell for 0x36440691 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f8b48    40  ldur x5, [x5, #7]
0xffff914f8b4c    44  tbz w5, #0, #+0x20 (addr 0xffff914f8b6c)
0xffff914f8b50    48  ldursw x4, [x5, #15]
0xffff914f8b54    52  tbnz w4, #23, #+0x18 (addr 0xffff914f8b6c)
0xffff914f8b58    56  ldr x4, [jssp], #8
0xffff914f8b5c    60  ldr x3, [jssp], #8
0xffff914f8b60    64  ldr x2, pc+56 (addr 0x0000ffff914f8b98)    ;; object: 0x408229b9 <String[15]: bufferedRequest>
0xffff914f8b64    68  ldr x16, pc+60 (addr 0x0000ffff914f8ba0)    ;; code: HANDLER, StoreTransitionStub, minor: 198675
0xffff914f8b68    72  br x16
0xffff914f8b6c    76  ldr x2, pc+60 (addr 0x0000ffff914f8ba8)    ;; object: 0x408229b9 <String[15]: bufferedRequest>
0xffff914f8b70    80  ldr x4, [jssp], #8
0xffff914f8b74    84  ldr x3, [jssp], #8
0xffff914f8b78    88  ldr x16, pc+56 (addr 0x0000ffff914f8bb0)    ;; code: BUILTIN
0xffff914f8b7c    92  br x16
0xffff914f8b80    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f8b84   100  d63f03e0       constant
0xffff914f8b88   104  408e9989       constant
0xffff914f8b8c   108  00000000       constant
0xffff914f8b90   112  408ea111       constant
0xffff914f8b94   116  00000000       constant
0xffff914f8b98   120  408229b9       constant
0xffff914f8b9c   124  00000000       constant
0xffff914f8ba0   128  914f89e0       constant
0xffff914f8ba4   132  0000ffff       constant
0xffff914f8ba8   136  408229b9       constant
0xffff914f8bac   140  00000000       constant
0xffff914f8bb0   144  91422420       constant
0xffff914f8bb4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f8b30  embedded object  (0x408e9989 Cell for 0)
0xffff914f8b44  embedded object  (0x408ea111 WeakCell for 0x36440691 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f8b60  embedded object  (0x408229b9 <String[15]: bufferedRequest>)
0xffff914f8b64  code target (HANDLER)  (0xffff914f89e0)
0xffff914f8b6c  embedded object  (0x408229b9 <String[15]: bufferedRequest>)
0xffff914f8b78  code target (BUILTIN)  (0xffff91422420)
0xffff914f8b80  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f8c20     0  tbz w0, #0, #+0x90 (addr 0xffff914f8cb0)
0xffff914f8c24     4  mov x2, x0
0xffff914f8c28     8  stur x2, [x1, #159]
0xffff914f8c2c    12  add x3, x1, #0x9f (159)
0xffff914f8c30    16  and x2, x2, #0xfffffffffff00000
0xffff914f8c34    20  ldr x2, [x2, #8]
0xffff914f8c38    24  tbz w2, #1, #+0x24 (addr 0xffff914f8c5c)
0xffff914f8c3c    28  and x2, x1, #0xfffffffffff00000
0xffff914f8c40    32  ldr x2, [x2, #8]
0xffff914f8c44    36  tbz w2, #2, #+0x18 (addr 0xffff914f8c5c)
0xffff914f8c48    40  sub csp, jssp, #0x8 (8)
0xffff914f8c4c    44  str lr, [jssp, #-8]!
0xffff914f8c50    48  ldr x16, pc+80 (addr 0x0000ffff914f8ca0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f8c54    52  blr x16
0xffff914f8c58    56  ldr lr, [jssp], #8
0xffff914f8c5c    60  stur x5, [x1, #-1]
0xffff914f8c60    64  tbz w5, #0, #+0x34 (addr 0xffff914f8c94)
0xffff914f8c64    68  sub x2, x1, #0x1 (1)
0xffff914f8c68    72  and x5, x5, #0xfffffffffff00000
0xffff914f8c6c    76  ldr x5, [x5, #8]
0xffff914f8c70    80  tbz w5, #1, #+0x24 (addr 0xffff914f8c94)
0xffff914f8c74    84  and x5, x1, #0xfffffffffff00000
0xffff914f8c78    88  ldr x5, [x5, #8]
0xffff914f8c7c    92  tbz w5, #2, #+0x18 (addr 0xffff914f8c94)
0xffff914f8c80    96  sub csp, jssp, #0x8 (8)
0xffff914f8c84   100  str lr, [jssp, #-8]!
0xffff914f8c88   104  ldr x16, pc+32 (addr 0x0000ffff914f8ca8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f8c8c   108  blr x16
0xffff914f8c90   112  ldr lr, [jssp], #8
0xffff914f8c94   116  ret
0xffff914f8c98   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f8c9c   124  d63f03e0       constant
0xffff914f8ca0   128  914170c0       constant
0xffff914f8ca4   132  0000ffff       constant
0xffff914f8ca8   136  91438080       constant
0xffff914f8cac   140  0000ffff       constant
0xffff914f8cb0   144  movz x16, #0x0
0xffff914f8cb4   148  sub csp, jssp, #0x10 (16)
0xffff914f8cb8   152  stp fp, lr, [jssp, #-16]!
0xffff914f8cbc   156  bl #+0x4 (addr 0xffff914f8cc0)
0xffff914f8cc0   160  movz x17, #0xa00000000
0xffff914f8cc4   164  sub csp, jssp, #0x10 (16)
0xffff914f8cc8   168  stp x17, cp, [jssp, #-16]!
0xffff914f8ccc   172  add fp, jssp, #0x10 (16)
0xffff914f8cd0   176  ldr x17, pc+24 (addr 0x0000ffff914f8ce8)    ;; lazy deoptimization bailout 0
0xffff914f8cd4   180  add x17, x17, x16
0xffff914f8cd8   184  br x17
0xffff914f8cdc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f8ce0   192  d63f03e0       constant
0xffff914f8ce4   196  d503201f       constant
0xffff914f8ce8   200  91206000       constant
0xffff914f8cec   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f8c50  code target (STUB)  (0xffff914170c0)
0xffff914f8c88  code target (STUB)  (0xffff91438080)
0xffff914f8c98  constant pool (size 24)
0xffff914f8cd0  runtime entry
0xffff914f8cdc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f8c20     0  tbz w0, #0, #+0x90 (addr 0xffff914f8cb0)
0xffff914f8c24     4  mov x2, x0
0xffff914f8c28     8  stur x2, [x1, #159]
0xffff914f8c2c    12  add x3, x1, #0x9f (159)
0xffff914f8c30    16  and x2, x2, #0xfffffffffff00000
0xffff914f8c34    20  ldr x2, [x2, #8]
0xffff914f8c38    24  tbz w2, #1, #+0x24 (addr 0xffff914f8c5c)
0xffff914f8c3c    28  and x2, x1, #0xfffffffffff00000
0xffff914f8c40    32  ldr x2, [x2, #8]
0xffff914f8c44    36  tbz w2, #2, #+0x18 (addr 0xffff914f8c5c)
0xffff914f8c48    40  sub csp, jssp, #0x8 (8)
0xffff914f8c4c    44  str lr, [jssp, #-8]!
0xffff914f8c50    48  ldr x16, pc+80 (addr 0x0000ffff914f8ca0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f8c54    52  blr x16
0xffff914f8c58    56  ldr lr, [jssp], #8
0xffff914f8c5c    60  stur x5, [x1, #-1]
0xffff914f8c60    64  tbz w5, #0, #+0x34 (addr 0xffff914f8c94)
0xffff914f8c64    68  sub x2, x1, #0x1 (1)
0xffff914f8c68    72  and x5, x5, #0xfffffffffff00000
0xffff914f8c6c    76  ldr x5, [x5, #8]
0xffff914f8c70    80  tbz w5, #1, #+0x24 (addr 0xffff914f8c94)
0xffff914f8c74    84  and x5, x1, #0xfffffffffff00000
0xffff914f8c78    88  ldr x5, [x5, #8]
0xffff914f8c7c    92  tbz w5, #2, #+0x18 (addr 0xffff914f8c94)
0xffff914f8c80    96  sub csp, jssp, #0x8 (8)
0xffff914f8c84   100  str lr, [jssp, #-8]!
0xffff914f8c88   104  ldr x16, pc+32 (addr 0x0000ffff914f8ca8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f8c8c   108  blr x16
0xffff914f8c90   112  ldr lr, [jssp], #8
0xffff914f8c94   116  ret
0xffff914f8c98   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f8c9c   124  d63f03e0       constant
0xffff914f8ca0   128  914170c0       constant
0xffff914f8ca4   132  0000ffff       constant
0xffff914f8ca8   136  91438080       constant
0xffff914f8cac   140  0000ffff       constant
0xffff914f8cb0   144  movz x16, #0x0
0xffff914f8cb4   148  sub csp, jssp, #0x10 (16)
0xffff914f8cb8   152  stp fp, lr, [jssp, #-16]!
0xffff914f8cbc   156  bl #+0x4 (addr 0xffff914f8cc0)
0xffff914f8cc0   160  movz x17, #0xa00000000
0xffff914f8cc4   164  sub csp, jssp, #0x10 (16)
0xffff914f8cc8   168  stp x17, cp, [jssp, #-16]!
0xffff914f8ccc   172  add fp, jssp, #0x10 (16)
0xffff914f8cd0   176  ldr x17, pc+24 (addr 0x0000ffff914f8ce8)    ;; lazy deoptimization bailout 0
0xffff914f8cd4   180  add x17, x17, x16
0xffff914f8cd8   184  br x17
0xffff914f8cdc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f8ce0   192  d63f03e0       constant
0xffff914f8ce4   196  d503201f       constant
0xffff914f8ce8   200  91206000       constant
0xffff914f8cec   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f8c50  code target (STUB)  (0xffff914170c0)
0xffff914f8c88  code target (STUB)  (0xffff91438080)
0xffff914f8c98  constant pool (size 24)
0xffff914f8cd0  runtime entry
0xffff914f8cdc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = lastBufferedRequest
compiler = unknown
Instructions (size = 152)
0xffff914f8d60     0  sub csp, jssp, #0x8 (8)
0xffff914f8d64     4  str x3, [jssp, #-8]!
0xffff914f8d68     8  sub csp, jssp, #0x8 (8)
0xffff914f8d6c    12  str x4, [jssp, #-8]!
0xffff914f8d70    16  ldr x3, pc+88 (addr 0x0000ffff914f8dc8)    ;; object: 0x408e9989 Cell for 0
0xffff914f8d74    20  ldur x3, [x3, #7]
0xffff914f8d78    24  cmp x3, #0x0 (0)
0xffff914f8d7c    28  b.ne #+0x30 (addr 0xffff914f8dac)
0xffff914f8d80    32  tbz w0, #0, #+0x2c (addr 0xffff914f8dac)
0xffff914f8d84    36  ldr x5, pc+76 (addr 0x0000ffff914f8dd0)    ;; object: 0x408ea201 WeakCell for 0x364406e9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f8d88    40  ldur x5, [x5, #7]
0xffff914f8d8c    44  tbz w5, #0, #+0x20 (addr 0xffff914f8dac)
0xffff914f8d90    48  ldursw x4, [x5, #15]
0xffff914f8d94    52  tbnz w4, #23, #+0x18 (addr 0xffff914f8dac)
0xffff914f8d98    56  ldr x4, [jssp], #8
0xffff914f8d9c    60  ldr x3, [jssp], #8
0xffff914f8da0    64  ldr x2, pc+56 (addr 0x0000ffff914f8dd8)    ;; object: 0x408229e1 <String[19]: lastBufferedRequest>
0xffff914f8da4    68  ldr x16, pc+60 (addr 0x0000ffff914f8de0)    ;; code: HANDLER, StoreTransitionStub, minor: 198676
0xffff914f8da8    72  br x16
0xffff914f8dac    76  ldr x2, pc+60 (addr 0x0000ffff914f8de8)    ;; object: 0x408229e1 <String[19]: lastBufferedRequest>
0xffff914f8db0    80  ldr x4, [jssp], #8
0xffff914f8db4    84  ldr x3, [jssp], #8
0xffff914f8db8    88  ldr x16, pc+56 (addr 0x0000ffff914f8df0)    ;; code: BUILTIN
0xffff914f8dbc    92  br x16
0xffff914f8dc0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f8dc4   100  d63f03e0       constant
0xffff914f8dc8   104  408e9989       constant
0xffff914f8dcc   108  00000000       constant
0xffff914f8dd0   112  408ea201       constant
0xffff914f8dd4   116  00000000       constant
0xffff914f8dd8   120  408229e1       constant
0xffff914f8ddc   124  00000000       constant
0xffff914f8de0   128  914f8c20       constant
0xffff914f8de4   132  0000ffff       constant
0xffff914f8de8   136  408229e1       constant
0xffff914f8dec   140  00000000       constant
0xffff914f8df0   144  91422420       constant
0xffff914f8df4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f8d70  embedded object  (0x408e9989 Cell for 0)
0xffff914f8d84  embedded object  (0x408ea201 WeakCell for 0x364406e9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f8da0  embedded object  (0x408229e1 <String[19]: lastBufferedRequest>)
0xffff914f8da4  code target (HANDLER)  (0xffff914f8c20)
0xffff914f8dac  embedded object  (0x408229e1 <String[19]: lastBufferedRequest>)
0xffff914f8db8  code target (BUILTIN)  (0xffff91422420)
0xffff914f8dc0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff914f8e60     0  mov x6, x0
0xffff914f8e64     4  tbnz w6, #0, #+0x54 (addr 0xffff914f8eb8)
0xffff914f8e68     8  stur x6, [x1, #167]
0xffff914f8e6c    12  stur x5, [x1, #-1]
0xffff914f8e70    16  tbz w5, #0, #+0x34 (addr 0xffff914f8ea4)
0xffff914f8e74    20  sub x2, x1, #0x1 (1)
0xffff914f8e78    24  and x5, x5, #0xfffffffffff00000
0xffff914f8e7c    28  ldr x5, [x5, #8]
0xffff914f8e80    32  tbz w5, #1, #+0x24 (addr 0xffff914f8ea4)
0xffff914f8e84    36  and x5, x1, #0xfffffffffff00000
0xffff914f8e88    40  ldr x5, [x5, #8]
0xffff914f8e8c    44  tbz w5, #2, #+0x18 (addr 0xffff914f8ea4)
0xffff914f8e90    48  sub csp, jssp, #0x8 (8)
0xffff914f8e94    52  str lr, [jssp, #-8]!
0xffff914f8e98    56  ldr x16, pc+24 (addr 0x0000ffff914f8eb0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f8e9c    60  blr x16
0xffff914f8ea0    64  ldr lr, [jssp], #8
0xffff914f8ea4    68  ret
0xffff914f8ea8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f8eac    76  d63f03e0       constant
0xffff914f8eb0    80  91438080       constant
0xffff914f8eb4    84  0000ffff       constant
0xffff914f8eb8    88  movz x16, #0x0
0xffff914f8ebc    92  sub csp, jssp, #0x10 (16)
0xffff914f8ec0    96  stp fp, lr, [jssp, #-16]!
0xffff914f8ec4   100  bl #+0x4 (addr 0xffff914f8ec8)
0xffff914f8ec8   104  movz x17, #0xa00000000
0xffff914f8ecc   108  sub csp, jssp, #0x10 (16)
0xffff914f8ed0   112  stp x17, cp, [jssp, #-16]!
0xffff914f8ed4   116  add fp, jssp, #0x10 (16)
0xffff914f8ed8   120  ldr x17, pc+24 (addr 0x0000ffff914f8ef0)    ;; lazy deoptimization bailout 0
0xffff914f8edc   124  add x17, x17, x16
0xffff914f8ee0   128  br x17
0xffff914f8ee4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f8ee8   136  d63f03e0       constant
0xffff914f8eec   140  d503201f       constant
0xffff914f8ef0   144  91206000       constant
0xffff914f8ef4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f8e98  code target (STUB)  (0xffff91438080)
0xffff914f8ea8  constant pool (size 16)
0xffff914f8ed8  runtime entry
0xffff914f8ee4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff914f8e60     0  mov x6, x0
0xffff914f8e64     4  tbnz w6, #0, #+0x54 (addr 0xffff914f8eb8)
0xffff914f8e68     8  stur x6, [x1, #167]
0xffff914f8e6c    12  stur x5, [x1, #-1]
0xffff914f8e70    16  tbz w5, #0, #+0x34 (addr 0xffff914f8ea4)
0xffff914f8e74    20  sub x2, x1, #0x1 (1)
0xffff914f8e78    24  and x5, x5, #0xfffffffffff00000
0xffff914f8e7c    28  ldr x5, [x5, #8]
0xffff914f8e80    32  tbz w5, #1, #+0x24 (addr 0xffff914f8ea4)
0xffff914f8e84    36  and x5, x1, #0xfffffffffff00000
0xffff914f8e88    40  ldr x5, [x5, #8]
0xffff914f8e8c    44  tbz w5, #2, #+0x18 (addr 0xffff914f8ea4)
0xffff914f8e90    48  sub csp, jssp, #0x8 (8)
0xffff914f8e94    52  str lr, [jssp, #-8]!
0xffff914f8e98    56  ldr x16, pc+24 (addr 0x0000ffff914f8eb0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f8e9c    60  blr x16
0xffff914f8ea0    64  ldr lr, [jssp], #8
0xffff914f8ea4    68  ret
0xffff914f8ea8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f8eac    76  d63f03e0       constant
0xffff914f8eb0    80  91438080       constant
0xffff914f8eb4    84  0000ffff       constant
0xffff914f8eb8    88  movz x16, #0x0
0xffff914f8ebc    92  sub csp, jssp, #0x10 (16)
0xffff914f8ec0    96  stp fp, lr, [jssp, #-16]!
0xffff914f8ec4   100  bl #+0x4 (addr 0xffff914f8ec8)
0xffff914f8ec8   104  movz x17, #0xa00000000
0xffff914f8ecc   108  sub csp, jssp, #0x10 (16)
0xffff914f8ed0   112  stp x17, cp, [jssp, #-16]!
0xffff914f8ed4   116  add fp, jssp, #0x10 (16)
0xffff914f8ed8   120  ldr x17, pc+24 (addr 0x0000ffff914f8ef0)    ;; lazy deoptimization bailout 0
0xffff914f8edc   124  add x17, x17, x16
0xffff914f8ee0   128  br x17
0xffff914f8ee4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f8ee8   136  d63f03e0       constant
0xffff914f8eec   140  d503201f       constant
0xffff914f8ef0   144  91206000       constant
0xffff914f8ef4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f8e98  code target (STUB)  (0xffff91438080)
0xffff914f8ea8  constant pool (size 16)
0xffff914f8ed8  runtime entry
0xffff914f8ee4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = pendingcb
compiler = unknown
Instructions (size = 152)
0xffff914f8f60     0  sub csp, jssp, #0x8 (8)
0xffff914f8f64     4  str x3, [jssp, #-8]!
0xffff914f8f68     8  sub csp, jssp, #0x8 (8)
0xffff914f8f6c    12  str x4, [jssp, #-8]!
0xffff914f8f70    16  ldr x3, pc+88 (addr 0x0000ffff914f8fc8)    ;; object: 0x408e9989 Cell for 0
0xffff914f8f74    20  ldur x3, [x3, #7]
0xffff914f8f78    24  cmp x3, #0x0 (0)
0xffff914f8f7c    28  b.ne #+0x2c (addr 0xffff914f8fa8)
0xffff914f8f80    32  ldr x5, pc+80 (addr 0x0000ffff914f8fd0)    ;; object: 0x408ea2f1 WeakCell for 0x36440741 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f8f84    36  ldur x5, [x5, #7]
0xffff914f8f88    40  tbz w5, #0, #+0x20 (addr 0xffff914f8fa8)
0xffff914f8f8c    44  ldursw x4, [x5, #15]
0xffff914f8f90    48  tbnz w4, #23, #+0x18 (addr 0xffff914f8fa8)
0xffff914f8f94    52  ldr x4, [jssp], #8
0xffff914f8f98    56  ldr x3, [jssp], #8
0xffff914f8f9c    60  ldr x2, pc+60 (addr 0x0000ffff914f8fd8)    ;; object: 0x40822a11 <String[9]: pendingcb>
0xffff914f8fa0    64  ldr x16, pc+64 (addr 0x0000ffff914f8fe0)    ;; code: HANDLER, StoreTransitionStub, minor: 174101
0xffff914f8fa4    68  br x16
0xffff914f8fa8    72  ldr x2, pc+64 (addr 0x0000ffff914f8fe8)    ;; object: 0x40822a11 <String[9]: pendingcb>
0xffff914f8fac    76  ldr x4, [jssp], #8
0xffff914f8fb0    80  ldr x3, [jssp], #8
0xffff914f8fb4    84  ldr x16, pc+60 (addr 0x0000ffff914f8ff0)    ;; code: BUILTIN
0xffff914f8fb8    88  br x16
0xffff914f8fbc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914f8fc0    96  d63f03e0       constant
0xffff914f8fc4   100  d503201f       constant
0xffff914f8fc8   104  408e9989       constant
0xffff914f8fcc   108  00000000       constant
0xffff914f8fd0   112  408ea2f1       constant
0xffff914f8fd4   116  00000000       constant
0xffff914f8fd8   120  40822a11       constant
0xffff914f8fdc   124  00000000       constant
0xffff914f8fe0   128  914f8e60       constant
0xffff914f8fe4   132  0000ffff       constant
0xffff914f8fe8   136  40822a11       constant
0xffff914f8fec   140  00000000       constant
0xffff914f8ff0   144  91422420       constant
0xffff914f8ff4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f8f70  embedded object  (0x408e9989 Cell for 0)
0xffff914f8f80  embedded object  (0x408ea2f1 WeakCell for 0x36440741 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f8f9c  embedded object  (0x40822a11 <String[9]: pendingcb>)
0xffff914f8fa0  code target (HANDLER)  (0xffff914f8e60)
0xffff914f8fa8  embedded object  (0x40822a11 <String[9]: pendingcb>)
0xffff914f8fb4  code target (BUILTIN)  (0xffff91422420)
0xffff914f8fbc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f9060     0  tbz w0, #0, #+0x90 (addr 0xffff914f90f0)
0xffff914f9064     4  mov x2, x0
0xffff914f9068     8  stur x2, [x1, #175]
0xffff914f906c    12  add x3, x1, #0xaf (175)
0xffff914f9070    16  and x2, x2, #0xfffffffffff00000
0xffff914f9074    20  ldr x2, [x2, #8]
0xffff914f9078    24  tbz w2, #1, #+0x24 (addr 0xffff914f909c)
0xffff914f907c    28  and x2, x1, #0xfffffffffff00000
0xffff914f9080    32  ldr x2, [x2, #8]
0xffff914f9084    36  tbz w2, #2, #+0x18 (addr 0xffff914f909c)
0xffff914f9088    40  sub csp, jssp, #0x8 (8)
0xffff914f908c    44  str lr, [jssp, #-8]!
0xffff914f9090    48  ldr x16, pc+80 (addr 0x0000ffff914f90e0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f9094    52  blr x16
0xffff914f9098    56  ldr lr, [jssp], #8
0xffff914f909c    60  stur x5, [x1, #-1]
0xffff914f90a0    64  tbz w5, #0, #+0x34 (addr 0xffff914f90d4)
0xffff914f90a4    68  sub x2, x1, #0x1 (1)
0xffff914f90a8    72  and x5, x5, #0xfffffffffff00000
0xffff914f90ac    76  ldr x5, [x5, #8]
0xffff914f90b0    80  tbz w5, #1, #+0x24 (addr 0xffff914f90d4)
0xffff914f90b4    84  and x5, x1, #0xfffffffffff00000
0xffff914f90b8    88  ldr x5, [x5, #8]
0xffff914f90bc    92  tbz w5, #2, #+0x18 (addr 0xffff914f90d4)
0xffff914f90c0    96  sub csp, jssp, #0x8 (8)
0xffff914f90c4   100  str lr, [jssp, #-8]!
0xffff914f90c8   104  ldr x16, pc+32 (addr 0x0000ffff914f90e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f90cc   108  blr x16
0xffff914f90d0   112  ldr lr, [jssp], #8
0xffff914f90d4   116  ret
0xffff914f90d8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f90dc   124  d63f03e0       constant
0xffff914f90e0   128  914170c0       constant
0xffff914f90e4   132  0000ffff       constant
0xffff914f90e8   136  91438080       constant
0xffff914f90ec   140  0000ffff       constant
0xffff914f90f0   144  movz x16, #0x0
0xffff914f90f4   148  sub csp, jssp, #0x10 (16)
0xffff914f90f8   152  stp fp, lr, [jssp, #-16]!
0xffff914f90fc   156  bl #+0x4 (addr 0xffff914f9100)
0xffff914f9100   160  movz x17, #0xa00000000
0xffff914f9104   164  sub csp, jssp, #0x10 (16)
0xffff914f9108   168  stp x17, cp, [jssp, #-16]!
0xffff914f910c   172  add fp, jssp, #0x10 (16)
0xffff914f9110   176  ldr x17, pc+24 (addr 0x0000ffff914f9128)    ;; lazy deoptimization bailout 0
0xffff914f9114   180  add x17, x17, x16
0xffff914f9118   184  br x17
0xffff914f911c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f9120   192  d63f03e0       constant
0xffff914f9124   196  d503201f       constant
0xffff914f9128   200  91206000       constant
0xffff914f912c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f9090  code target (STUB)  (0xffff914170c0)
0xffff914f90c8  code target (STUB)  (0xffff91438080)
0xffff914f90d8  constant pool (size 24)
0xffff914f9110  runtime entry
0xffff914f911c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f9060     0  tbz w0, #0, #+0x90 (addr 0xffff914f90f0)
0xffff914f9064     4  mov x2, x0
0xffff914f9068     8  stur x2, [x1, #175]
0xffff914f906c    12  add x3, x1, #0xaf (175)
0xffff914f9070    16  and x2, x2, #0xfffffffffff00000
0xffff914f9074    20  ldr x2, [x2, #8]
0xffff914f9078    24  tbz w2, #1, #+0x24 (addr 0xffff914f909c)
0xffff914f907c    28  and x2, x1, #0xfffffffffff00000
0xffff914f9080    32  ldr x2, [x2, #8]
0xffff914f9084    36  tbz w2, #2, #+0x18 (addr 0xffff914f909c)
0xffff914f9088    40  sub csp, jssp, #0x8 (8)
0xffff914f908c    44  str lr, [jssp, #-8]!
0xffff914f9090    48  ldr x16, pc+80 (addr 0x0000ffff914f90e0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f9094    52  blr x16
0xffff914f9098    56  ldr lr, [jssp], #8
0xffff914f909c    60  stur x5, [x1, #-1]
0xffff914f90a0    64  tbz w5, #0, #+0x34 (addr 0xffff914f90d4)
0xffff914f90a4    68  sub x2, x1, #0x1 (1)
0xffff914f90a8    72  and x5, x5, #0xfffffffffff00000
0xffff914f90ac    76  ldr x5, [x5, #8]
0xffff914f90b0    80  tbz w5, #1, #+0x24 (addr 0xffff914f90d4)
0xffff914f90b4    84  and x5, x1, #0xfffffffffff00000
0xffff914f90b8    88  ldr x5, [x5, #8]
0xffff914f90bc    92  tbz w5, #2, #+0x18 (addr 0xffff914f90d4)
0xffff914f90c0    96  sub csp, jssp, #0x8 (8)
0xffff914f90c4   100  str lr, [jssp, #-8]!
0xffff914f90c8   104  ldr x16, pc+32 (addr 0x0000ffff914f90e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f90cc   108  blr x16
0xffff914f90d0   112  ldr lr, [jssp], #8
0xffff914f90d4   116  ret
0xffff914f90d8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f90dc   124  d63f03e0       constant
0xffff914f90e0   128  914170c0       constant
0xffff914f90e4   132  0000ffff       constant
0xffff914f90e8   136  91438080       constant
0xffff914f90ec   140  0000ffff       constant
0xffff914f90f0   144  movz x16, #0x0
0xffff914f90f4   148  sub csp, jssp, #0x10 (16)
0xffff914f90f8   152  stp fp, lr, [jssp, #-16]!
0xffff914f90fc   156  bl #+0x4 (addr 0xffff914f9100)
0xffff914f9100   160  movz x17, #0xa00000000
0xffff914f9104   164  sub csp, jssp, #0x10 (16)
0xffff914f9108   168  stp x17, cp, [jssp, #-16]!
0xffff914f910c   172  add fp, jssp, #0x10 (16)
0xffff914f9110   176  ldr x17, pc+24 (addr 0x0000ffff914f9128)    ;; lazy deoptimization bailout 0
0xffff914f9114   180  add x17, x17, x16
0xffff914f9118   184  br x17
0xffff914f911c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f9120   192  d63f03e0       constant
0xffff914f9124   196  d503201f       constant
0xffff914f9128   200  91206000       constant
0xffff914f912c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f9090  code target (STUB)  (0xffff914170c0)
0xffff914f90c8  code target (STUB)  (0xffff91438080)
0xffff914f90d8  constant pool (size 24)
0xffff914f9110  runtime entry
0xffff914f911c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = prefinished
compiler = unknown
Instructions (size = 152)
0xffff914f91a0     0  sub csp, jssp, #0x8 (8)
0xffff914f91a4     4  str x3, [jssp, #-8]!
0xffff914f91a8     8  sub csp, jssp, #0x8 (8)
0xffff914f91ac    12  str x4, [jssp, #-8]!
0xffff914f91b0    16  ldr x3, pc+88 (addr 0x0000ffff914f9208)    ;; object: 0x408e9989 Cell for 0
0xffff914f91b4    20  ldur x3, [x3, #7]
0xffff914f91b8    24  cmp x3, #0x0 (0)
0xffff914f91bc    28  b.ne #+0x30 (addr 0xffff914f91ec)
0xffff914f91c0    32  tbz w0, #0, #+0x2c (addr 0xffff914f91ec)
0xffff914f91c4    36  ldr x5, pc+76 (addr 0x0000ffff914f9210)    ;; object: 0x408ea3e1 WeakCell for 0x36440799 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f91c8    40  ldur x5, [x5, #7]
0xffff914f91cc    44  tbz w5, #0, #+0x20 (addr 0xffff914f91ec)
0xffff914f91d0    48  ldursw x4, [x5, #15]
0xffff914f91d4    52  tbnz w4, #23, #+0x18 (addr 0xffff914f91ec)
0xffff914f91d8    56  ldr x4, [jssp], #8
0xffff914f91dc    60  ldr x3, [jssp], #8
0xffff914f91e0    64  ldr x2, pc+56 (addr 0x0000ffff914f9218)    ;; object: 0x40822a39 <String[11]: prefinished>
0xffff914f91e4    68  ldr x16, pc+60 (addr 0x0000ffff914f9220)    ;; code: HANDLER, StoreTransitionStub, minor: 198678
0xffff914f91e8    72  br x16
0xffff914f91ec    76  ldr x2, pc+60 (addr 0x0000ffff914f9228)    ;; object: 0x40822a39 <String[11]: prefinished>
0xffff914f91f0    80  ldr x4, [jssp], #8
0xffff914f91f4    84  ldr x3, [jssp], #8
0xffff914f91f8    88  ldr x16, pc+56 (addr 0x0000ffff914f9230)    ;; code: BUILTIN
0xffff914f91fc    92  br x16
0xffff914f9200    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f9204   100  d63f03e0       constant
0xffff914f9208   104  408e9989       constant
0xffff914f920c   108  00000000       constant
0xffff914f9210   112  408ea3e1       constant
0xffff914f9214   116  00000000       constant
0xffff914f9218   120  40822a39       constant
0xffff914f921c   124  00000000       constant
0xffff914f9220   128  914f9060       constant
0xffff914f9224   132  0000ffff       constant
0xffff914f9228   136  40822a39       constant
0xffff914f922c   140  00000000       constant
0xffff914f9230   144  91422420       constant
0xffff914f9234   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f91b0  embedded object  (0x408e9989 Cell for 0)
0xffff914f91c4  embedded object  (0x408ea3e1 WeakCell for 0x36440799 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f91e0  embedded object  (0x40822a39 <String[11]: prefinished>)
0xffff914f91e4  code target (HANDLER)  (0xffff914f9060)
0xffff914f91ec  embedded object  (0x40822a39 <String[11]: prefinished>)
0xffff914f91f8  code target (BUILTIN)  (0xffff91422420)
0xffff914f9200  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f92a0     0  tbz w0, #0, #+0x90 (addr 0xffff914f9330)
0xffff914f92a4     4  mov x2, x0
0xffff914f92a8     8  stur x2, [x1, #183]
0xffff914f92ac    12  add x3, x1, #0xb7 (183)
0xffff914f92b0    16  and x2, x2, #0xfffffffffff00000
0xffff914f92b4    20  ldr x2, [x2, #8]
0xffff914f92b8    24  tbz w2, #1, #+0x24 (addr 0xffff914f92dc)
0xffff914f92bc    28  and x2, x1, #0xfffffffffff00000
0xffff914f92c0    32  ldr x2, [x2, #8]
0xffff914f92c4    36  tbz w2, #2, #+0x18 (addr 0xffff914f92dc)
0xffff914f92c8    40  sub csp, jssp, #0x8 (8)
0xffff914f92cc    44  str lr, [jssp, #-8]!
0xffff914f92d0    48  ldr x16, pc+80 (addr 0x0000ffff914f9320)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f92d4    52  blr x16
0xffff914f92d8    56  ldr lr, [jssp], #8
0xffff914f92dc    60  stur x5, [x1, #-1]
0xffff914f92e0    64  tbz w5, #0, #+0x34 (addr 0xffff914f9314)
0xffff914f92e4    68  sub x2, x1, #0x1 (1)
0xffff914f92e8    72  and x5, x5, #0xfffffffffff00000
0xffff914f92ec    76  ldr x5, [x5, #8]
0xffff914f92f0    80  tbz w5, #1, #+0x24 (addr 0xffff914f9314)
0xffff914f92f4    84  and x5, x1, #0xfffffffffff00000
0xffff914f92f8    88  ldr x5, [x5, #8]
0xffff914f92fc    92  tbz w5, #2, #+0x18 (addr 0xffff914f9314)
0xffff914f9300    96  sub csp, jssp, #0x8 (8)
0xffff914f9304   100  str lr, [jssp, #-8]!
0xffff914f9308   104  ldr x16, pc+32 (addr 0x0000ffff914f9328)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f930c   108  blr x16
0xffff914f9310   112  ldr lr, [jssp], #8
0xffff914f9314   116  ret
0xffff914f9318   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f931c   124  d63f03e0       constant
0xffff914f9320   128  914170c0       constant
0xffff914f9324   132  0000ffff       constant
0xffff914f9328   136  91438080       constant
0xffff914f932c   140  0000ffff       constant
0xffff914f9330   144  movz x16, #0x0
0xffff914f9334   148  sub csp, jssp, #0x10 (16)
0xffff914f9338   152  stp fp, lr, [jssp, #-16]!
0xffff914f933c   156  bl #+0x4 (addr 0xffff914f9340)
0xffff914f9340   160  movz x17, #0xa00000000
0xffff914f9344   164  sub csp, jssp, #0x10 (16)
0xffff914f9348   168  stp x17, cp, [jssp, #-16]!
0xffff914f934c   172  add fp, jssp, #0x10 (16)
0xffff914f9350   176  ldr x17, pc+24 (addr 0x0000ffff914f9368)    ;; lazy deoptimization bailout 0
0xffff914f9354   180  add x17, x17, x16
0xffff914f9358   184  br x17
0xffff914f935c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f9360   192  d63f03e0       constant
0xffff914f9364   196  d503201f       constant
0xffff914f9368   200  91206000       constant
0xffff914f936c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f92d0  code target (STUB)  (0xffff914170c0)
0xffff914f9308  code target (STUB)  (0xffff91438080)
0xffff914f9318  constant pool (size 24)
0xffff914f9350  runtime entry
0xffff914f935c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f92a0     0  tbz w0, #0, #+0x90 (addr 0xffff914f9330)
0xffff914f92a4     4  mov x2, x0
0xffff914f92a8     8  stur x2, [x1, #183]
0xffff914f92ac    12  add x3, x1, #0xb7 (183)
0xffff914f92b0    16  and x2, x2, #0xfffffffffff00000
0xffff914f92b4    20  ldr x2, [x2, #8]
0xffff914f92b8    24  tbz w2, #1, #+0x24 (addr 0xffff914f92dc)
0xffff914f92bc    28  and x2, x1, #0xfffffffffff00000
0xffff914f92c0    32  ldr x2, [x2, #8]
0xffff914f92c4    36  tbz w2, #2, #+0x18 (addr 0xffff914f92dc)
0xffff914f92c8    40  sub csp, jssp, #0x8 (8)
0xffff914f92cc    44  str lr, [jssp, #-8]!
0xffff914f92d0    48  ldr x16, pc+80 (addr 0x0000ffff914f9320)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f92d4    52  blr x16
0xffff914f92d8    56  ldr lr, [jssp], #8
0xffff914f92dc    60  stur x5, [x1, #-1]
0xffff914f92e0    64  tbz w5, #0, #+0x34 (addr 0xffff914f9314)
0xffff914f92e4    68  sub x2, x1, #0x1 (1)
0xffff914f92e8    72  and x5, x5, #0xfffffffffff00000
0xffff914f92ec    76  ldr x5, [x5, #8]
0xffff914f92f0    80  tbz w5, #1, #+0x24 (addr 0xffff914f9314)
0xffff914f92f4    84  and x5, x1, #0xfffffffffff00000
0xffff914f92f8    88  ldr x5, [x5, #8]
0xffff914f92fc    92  tbz w5, #2, #+0x18 (addr 0xffff914f9314)
0xffff914f9300    96  sub csp, jssp, #0x8 (8)
0xffff914f9304   100  str lr, [jssp, #-8]!
0xffff914f9308   104  ldr x16, pc+32 (addr 0x0000ffff914f9328)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f930c   108  blr x16
0xffff914f9310   112  ldr lr, [jssp], #8
0xffff914f9314   116  ret
0xffff914f9318   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f931c   124  d63f03e0       constant
0xffff914f9320   128  914170c0       constant
0xffff914f9324   132  0000ffff       constant
0xffff914f9328   136  91438080       constant
0xffff914f932c   140  0000ffff       constant
0xffff914f9330   144  movz x16, #0x0
0xffff914f9334   148  sub csp, jssp, #0x10 (16)
0xffff914f9338   152  stp fp, lr, [jssp, #-16]!
0xffff914f933c   156  bl #+0x4 (addr 0xffff914f9340)
0xffff914f9340   160  movz x17, #0xa00000000
0xffff914f9344   164  sub csp, jssp, #0x10 (16)
0xffff914f9348   168  stp x17, cp, [jssp, #-16]!
0xffff914f934c   172  add fp, jssp, #0x10 (16)
0xffff914f9350   176  ldr x17, pc+24 (addr 0x0000ffff914f9368)    ;; lazy deoptimization bailout 0
0xffff914f9354   180  add x17, x17, x16
0xffff914f9358   184  br x17
0xffff914f935c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f9360   192  d63f03e0       constant
0xffff914f9364   196  d503201f       constant
0xffff914f9368   200  91206000       constant
0xffff914f936c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f92d0  code target (STUB)  (0xffff914170c0)
0xffff914f9308  code target (STUB)  (0xffff91438080)
0xffff914f9318  constant pool (size 24)
0xffff914f9350  runtime entry
0xffff914f935c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = errorEmitted
compiler = unknown
Instructions (size = 152)
0xffff914f93e0     0  sub csp, jssp, #0x8 (8)
0xffff914f93e4     4  str x3, [jssp, #-8]!
0xffff914f93e8     8  sub csp, jssp, #0x8 (8)
0xffff914f93ec    12  str x4, [jssp, #-8]!
0xffff914f93f0    16  ldr x3, pc+88 (addr 0x0000ffff914f9448)    ;; object: 0x408e9989 Cell for 0
0xffff914f93f4    20  ldur x3, [x3, #7]
0xffff914f93f8    24  cmp x3, #0x0 (0)
0xffff914f93fc    28  b.ne #+0x30 (addr 0xffff914f942c)
0xffff914f9400    32  tbz w0, #0, #+0x2c (addr 0xffff914f942c)
0xffff914f9404    36  ldr x5, pc+76 (addr 0x0000ffff914f9450)    ;; object: 0x408ea4d1 WeakCell for 0x364407f1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f9408    40  ldur x5, [x5, #7]
0xffff914f940c    44  tbz w5, #0, #+0x20 (addr 0xffff914f942c)
0xffff914f9410    48  ldursw x4, [x5, #15]
0xffff914f9414    52  tbnz w4, #23, #+0x18 (addr 0xffff914f942c)
0xffff914f9418    56  ldr x4, [jssp], #8
0xffff914f941c    60  ldr x3, [jssp], #8
0xffff914f9420    64  ldr x2, pc+56 (addr 0x0000ffff914f9458)    ;; object: 0x40822a61 <String[12]: errorEmitted>
0xffff914f9424    68  ldr x16, pc+60 (addr 0x0000ffff914f9460)    ;; code: HANDLER, StoreTransitionStub, minor: 198679
0xffff914f9428    72  br x16
0xffff914f942c    76  ldr x2, pc+60 (addr 0x0000ffff914f9468)    ;; object: 0x40822a61 <String[12]: errorEmitted>
0xffff914f9430    80  ldr x4, [jssp], #8
0xffff914f9434    84  ldr x3, [jssp], #8
0xffff914f9438    88  ldr x16, pc+56 (addr 0x0000ffff914f9470)    ;; code: BUILTIN
0xffff914f943c    92  br x16
0xffff914f9440    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f9444   100  d63f03e0       constant
0xffff914f9448   104  408e9989       constant
0xffff914f944c   108  00000000       constant
0xffff914f9450   112  408ea4d1       constant
0xffff914f9454   116  00000000       constant
0xffff914f9458   120  40822a61       constant
0xffff914f945c   124  00000000       constant
0xffff914f9460   128  914f92a0       constant
0xffff914f9464   132  0000ffff       constant
0xffff914f9468   136  40822a61       constant
0xffff914f946c   140  00000000       constant
0xffff914f9470   144  91422420       constant
0xffff914f9474   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f93f0  embedded object  (0x408e9989 Cell for 0)
0xffff914f9404  embedded object  (0x408ea4d1 WeakCell for 0x364407f1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f9420  embedded object  (0x40822a61 <String[12]: errorEmitted>)
0xffff914f9424  code target (HANDLER)  (0xffff914f92a0)
0xffff914f942c  embedded object  (0x40822a61 <String[12]: errorEmitted>)
0xffff914f9438  code target (BUILTIN)  (0xffff91422420)
0xffff914f9440  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff914f94e0     0  mov x6, x0
0xffff914f94e4     4  tbnz w6, #0, #+0x54 (addr 0xffff914f9538)
0xffff914f94e8     8  stur x6, [x1, #191]
0xffff914f94ec    12  stur x5, [x1, #-1]
0xffff914f94f0    16  tbz w5, #0, #+0x34 (addr 0xffff914f9524)
0xffff914f94f4    20  sub x2, x1, #0x1 (1)
0xffff914f94f8    24  and x5, x5, #0xfffffffffff00000
0xffff914f94fc    28  ldr x5, [x5, #8]
0xffff914f9500    32  tbz w5, #1, #+0x24 (addr 0xffff914f9524)
0xffff914f9504    36  and x5, x1, #0xfffffffffff00000
0xffff914f9508    40  ldr x5, [x5, #8]
0xffff914f950c    44  tbz w5, #2, #+0x18 (addr 0xffff914f9524)
0xffff914f9510    48  sub csp, jssp, #0x8 (8)
0xffff914f9514    52  str lr, [jssp, #-8]!
0xffff914f9518    56  ldr x16, pc+24 (addr 0x0000ffff914f9530)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f951c    60  blr x16
0xffff914f9520    64  ldr lr, [jssp], #8
0xffff914f9524    68  ret
0xffff914f9528    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f952c    76  d63f03e0       constant
0xffff914f9530    80  91438080       constant
0xffff914f9534    84  0000ffff       constant
0xffff914f9538    88  movz x16, #0x0
0xffff914f953c    92  sub csp, jssp, #0x10 (16)
0xffff914f9540    96  stp fp, lr, [jssp, #-16]!
0xffff914f9544   100  bl #+0x4 (addr 0xffff914f9548)
0xffff914f9548   104  movz x17, #0xa00000000
0xffff914f954c   108  sub csp, jssp, #0x10 (16)
0xffff914f9550   112  stp x17, cp, [jssp, #-16]!
0xffff914f9554   116  add fp, jssp, #0x10 (16)
0xffff914f9558   120  ldr x17, pc+24 (addr 0x0000ffff914f9570)    ;; lazy deoptimization bailout 0
0xffff914f955c   124  add x17, x17, x16
0xffff914f9560   128  br x17
0xffff914f9564   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f9568   136  d63f03e0       constant
0xffff914f956c   140  d503201f       constant
0xffff914f9570   144  91206000       constant
0xffff914f9574   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f9518  code target (STUB)  (0xffff91438080)
0xffff914f9528  constant pool (size 16)
0xffff914f9558  runtime entry
0xffff914f9564  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff914f94e0     0  mov x6, x0
0xffff914f94e4     4  tbnz w6, #0, #+0x54 (addr 0xffff914f9538)
0xffff914f94e8     8  stur x6, [x1, #191]
0xffff914f94ec    12  stur x5, [x1, #-1]
0xffff914f94f0    16  tbz w5, #0, #+0x34 (addr 0xffff914f9524)
0xffff914f94f4    20  sub x2, x1, #0x1 (1)
0xffff914f94f8    24  and x5, x5, #0xfffffffffff00000
0xffff914f94fc    28  ldr x5, [x5, #8]
0xffff914f9500    32  tbz w5, #1, #+0x24 (addr 0xffff914f9524)
0xffff914f9504    36  and x5, x1, #0xfffffffffff00000
0xffff914f9508    40  ldr x5, [x5, #8]
0xffff914f950c    44  tbz w5, #2, #+0x18 (addr 0xffff914f9524)
0xffff914f9510    48  sub csp, jssp, #0x8 (8)
0xffff914f9514    52  str lr, [jssp, #-8]!
0xffff914f9518    56  ldr x16, pc+24 (addr 0x0000ffff914f9530)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f951c    60  blr x16
0xffff914f9520    64  ldr lr, [jssp], #8
0xffff914f9524    68  ret
0xffff914f9528    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f952c    76  d63f03e0       constant
0xffff914f9530    80  91438080       constant
0xffff914f9534    84  0000ffff       constant
0xffff914f9538    88  movz x16, #0x0
0xffff914f953c    92  sub csp, jssp, #0x10 (16)
0xffff914f9540    96  stp fp, lr, [jssp, #-16]!
0xffff914f9544   100  bl #+0x4 (addr 0xffff914f9548)
0xffff914f9548   104  movz x17, #0xa00000000
0xffff914f954c   108  sub csp, jssp, #0x10 (16)
0xffff914f9550   112  stp x17, cp, [jssp, #-16]!
0xffff914f9554   116  add fp, jssp, #0x10 (16)
0xffff914f9558   120  ldr x17, pc+24 (addr 0x0000ffff914f9570)    ;; lazy deoptimization bailout 0
0xffff914f955c   124  add x17, x17, x16
0xffff914f9560   128  br x17
0xffff914f9564   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f9568   136  d63f03e0       constant
0xffff914f956c   140  d503201f       constant
0xffff914f9570   144  91206000       constant
0xffff914f9574   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f9518  code target (STUB)  (0xffff91438080)
0xffff914f9528  constant pool (size 16)
0xffff914f9558  runtime entry
0xffff914f9564  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = bufferedRequestCount
compiler = unknown
Instructions (size = 152)
0xffff914f95e0     0  sub csp, jssp, #0x8 (8)
0xffff914f95e4     4  str x3, [jssp, #-8]!
0xffff914f95e8     8  sub csp, jssp, #0x8 (8)
0xffff914f95ec    12  str x4, [jssp, #-8]!
0xffff914f95f0    16  ldr x3, pc+88 (addr 0x0000ffff914f9648)    ;; object: 0x408e9989 Cell for 0
0xffff914f95f4    20  ldur x3, [x3, #7]
0xffff914f95f8    24  cmp x3, #0x0 (0)
0xffff914f95fc    28  b.ne #+0x2c (addr 0xffff914f9628)
0xffff914f9600    32  ldr x5, pc+80 (addr 0x0000ffff914f9650)    ;; object: 0x408ea5c1 WeakCell for 0x36440849 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f9604    36  ldur x5, [x5, #7]
0xffff914f9608    40  tbz w5, #0, #+0x20 (addr 0xffff914f9628)
0xffff914f960c    44  ldursw x4, [x5, #15]
0xffff914f9610    48  tbnz w4, #23, #+0x18 (addr 0xffff914f9628)
0xffff914f9614    52  ldr x4, [jssp], #8
0xffff914f9618    56  ldr x3, [jssp], #8
0xffff914f961c    60  ldr x2, pc+60 (addr 0x0000ffff914f9658)    ;; object: 0x40822a89 <String[20]: bufferedRequestCount>
0xffff914f9620    64  ldr x16, pc+64 (addr 0x0000ffff914f9660)    ;; code: HANDLER, StoreTransitionStub, minor: 174104
0xffff914f9624    68  br x16
0xffff914f9628    72  ldr x2, pc+64 (addr 0x0000ffff914f9668)    ;; object: 0x40822a89 <String[20]: bufferedRequestCount>
0xffff914f962c    76  ldr x4, [jssp], #8
0xffff914f9630    80  ldr x3, [jssp], #8
0xffff914f9634    84  ldr x16, pc+60 (addr 0x0000ffff914f9670)    ;; code: BUILTIN
0xffff914f9638    88  br x16
0xffff914f963c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914f9640    96  d63f03e0       constant
0xffff914f9644   100  d503201f       constant
0xffff914f9648   104  408e9989       constant
0xffff914f964c   108  00000000       constant
0xffff914f9650   112  408ea5c1       constant
0xffff914f9654   116  00000000       constant
0xffff914f9658   120  40822a89       constant
0xffff914f965c   124  00000000       constant
0xffff914f9660   128  914f94e0       constant
0xffff914f9664   132  0000ffff       constant
0xffff914f9668   136  40822a89       constant
0xffff914f966c   140  00000000       constant
0xffff914f9670   144  91422420       constant
0xffff914f9674   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f95f0  embedded object  (0x408e9989 Cell for 0)
0xffff914f9600  embedded object  (0x408ea5c1 WeakCell for 0x36440849 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f961c  embedded object  (0x40822a89 <String[20]: bufferedRequestCount>)
0xffff914f9620  code target (HANDLER)  (0xffff914f94e0)
0xffff914f9628  embedded object  (0x40822a89 <String[20]: bufferedRequestCount>)
0xffff914f9634  code target (BUILTIN)  (0xffff91422420)
0xffff914f963c  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff914f96e0     0  sub csp, jssp, #0x8 (8)
0xffff914f96e4     4  str x3, [jssp, #-8]!
0xffff914f96e8     8  sub csp, jssp, #0x8 (8)
0xffff914f96ec    12  str x4, [jssp, #-8]!
0xffff914f96f0    16  ldr x3, pc+88 (addr 0x0000ffff914f9748)    ;; object: 0x408ea6f1 Cell for 0
0xffff914f96f4    20  ldur x3, [x3, #7]
0xffff914f96f8    24  cmp x3, #0x0 (0)
0xffff914f96fc    28  b.ne #+0x30 (addr 0xffff914f972c)
0xffff914f9700    32  tbz w0, #0, #+0x2c (addr 0xffff914f972c)
0xffff914f9704    36  ldr x5, pc+76 (addr 0x0000ffff914f9750)    ;; object: 0x408d1f59 WeakCell for 0x36438811 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f9708    40  ldur x5, [x5, #7]
0xffff914f970c    44  tbz w5, #0, #+0x20 (addr 0xffff914f972c)
0xffff914f9710    48  ldursw x4, [x5, #15]
0xffff914f9714    52  tbnz w4, #23, #+0x18 (addr 0xffff914f972c)
0xffff914f9718    56  ldr x4, [jssp], #8
0xffff914f971c    60  ldr x3, [jssp], #8
0xffff914f9720    64  ldr x2, pc+56 (addr 0x0000ffff914f9758)    ;; object: 0x49b05209 <String[4]: next>
0xffff914f9724    68  ldr x16, pc+60 (addr 0x0000ffff914f9760)    ;; code: HANDLER, StoreTransitionStub, minor: 198659
0xffff914f9728    72  br x16
0xffff914f972c    76  ldr x2, pc+60 (addr 0x0000ffff914f9768)    ;; object: 0x49b05209 <String[4]: next>
0xffff914f9730    80  ldr x4, [jssp], #8
0xffff914f9734    84  ldr x3, [jssp], #8
0xffff914f9738    88  ldr x16, pc+56 (addr 0x0000ffff914f9770)    ;; code: BUILTIN
0xffff914f973c    92  br x16
0xffff914f9740    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f9744   100  d63f03e0       constant
0xffff914f9748   104  408ea6f1       constant
0xffff914f974c   108  00000000       constant
0xffff914f9750   112  408d1f59       constant
0xffff914f9754   116  00000000       constant
0xffff914f9758   120  49b05209       constant
0xffff914f975c   124  00000000       constant
0xffff914f9760   128  9148b940       constant
0xffff914f9764   132  0000ffff       constant
0xffff914f9768   136  49b05209       constant
0xffff914f976c   140  00000000       constant
0xffff914f9770   144  91422420       constant
0xffff914f9774   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f96f0  embedded object  (0x408ea6f1 Cell for 0)
0xffff914f9704  embedded object  (0x408d1f59 WeakCell for 0x36438811 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f9720  embedded object  (0x49b05209 <String[4]: next>)
0xffff914f9724  code target (HANDLER)  (0xffff9148b940)
0xffff914f972c  embedded object  (0x49b05209 <String[4]: next>)
0xffff914f9738  code target (BUILTIN)  (0xffff91422420)
0xffff914f9740  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = entry
compiler = unknown
Instructions (size = 152)
0xffff914f97e0     0  sub csp, jssp, #0x8 (8)
0xffff914f97e4     4  str x3, [jssp, #-8]!
0xffff914f97e8     8  sub csp, jssp, #0x8 (8)
0xffff914f97ec    12  str x4, [jssp, #-8]!
0xffff914f97f0    16  ldr x3, pc+88 (addr 0x0000ffff914f9848)    ;; object: 0x408ea6f1 Cell for 0
0xffff914f97f4    20  ldur x3, [x3, #7]
0xffff914f97f8    24  cmp x3, #0x0 (0)
0xffff914f97fc    28  b.ne #+0x30 (addr 0xffff914f982c)
0xffff914f9800    32  tbz w0, #0, #+0x2c (addr 0xffff914f982c)
0xffff914f9804    36  ldr x5, pc+76 (addr 0x0000ffff914f9850)    ;; object: 0x408d1f71 WeakCell for 0x36438869 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f9808    40  ldur x5, [x5, #7]
0xffff914f980c    44  tbz w5, #0, #+0x20 (addr 0xffff914f982c)
0xffff914f9810    48  ldursw x4, [x5, #15]
0xffff914f9814    52  tbnz w4, #23, #+0x18 (addr 0xffff914f982c)
0xffff914f9818    56  ldr x4, [jssp], #8
0xffff914f981c    60  ldr x3, [jssp], #8
0xffff914f9820    64  ldr x2, pc+56 (addr 0x0000ffff914f9858)    ;; object: 0x40820e89 <String[5]: entry>
0xffff914f9824    68  ldr x16, pc+60 (addr 0x0000ffff914f9860)    ;; code: HANDLER, StoreTransitionStub, minor: 198660
0xffff914f9828    72  br x16
0xffff914f982c    76  ldr x2, pc+60 (addr 0x0000ffff914f9868)    ;; object: 0x40820e89 <String[5]: entry>
0xffff914f9830    80  ldr x4, [jssp], #8
0xffff914f9834    84  ldr x3, [jssp], #8
0xffff914f9838    88  ldr x16, pc+56 (addr 0x0000ffff914f9870)    ;; code: BUILTIN
0xffff914f983c    92  br x16
0xffff914f9840    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f9844   100  d63f03e0       constant
0xffff914f9848   104  408ea6f1       constant
0xffff914f984c   108  00000000       constant
0xffff914f9850   112  408d1f71       constant
0xffff914f9854   116  00000000       constant
0xffff914f9858   120  40820e89       constant
0xffff914f985c   124  00000000       constant
0xffff914f9860   128  9148bb80       constant
0xffff914f9864   132  0000ffff       constant
0xffff914f9868   136  40820e89       constant
0xffff914f986c   140  00000000       constant
0xffff914f9870   144  91422420       constant
0xffff914f9874   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f97f0  embedded object  (0x408ea6f1 Cell for 0)
0xffff914f9804  embedded object  (0x408d1f71 WeakCell for 0x36438869 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f9820  embedded object  (0x40820e89 <String[5]: entry>)
0xffff914f9824  code target (HANDLER)  (0xffff9148bb80)
0xffff914f982c  embedded object  (0x40820e89 <String[5]: entry>)
0xffff914f9838  code target (BUILTIN)  (0xffff91422420)
0xffff914f9840  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = finish
compiler = unknown
Instructions (size = 184)
0xffff914f98e0     0  sub csp, jssp, #0x8 (8)
0xffff914f98e4     4  str x3, [jssp, #-8]!
0xffff914f98e8     8  sub csp, jssp, #0x8 (8)
0xffff914f98ec    12  str x4, [jssp, #-8]!
0xffff914f98f0    16  ldr x3, pc+112 (addr 0x0000ffff914f9960)    ;; object: 0x408ea6f1 Cell for 0
0xffff914f98f4    20  ldur x3, [x3, #7]
0xffff914f98f8    24  cmp x3, #0x0 (0)
0xffff914f98fc    28  b.ne #+0x44 (addr 0xffff914f9940)
0xffff914f9900    32  tbz w0, #0, #+0x40 (addr 0xffff914f9940)
0xffff914f9904    36  ldur x3, [x0, #-1]
0xffff914f9908    40  ldr x4, pc+96 (addr 0x0000ffff914f9968)    ;; object: 0x49bc71e1 WeakCell for 0x36406989 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f990c    44  ldur x4, [x4, #7]
0xffff914f9910    48  cmp x3, x4
0xffff914f9914    52  b.ne #+0x2c (addr 0xffff914f9940)
0xffff914f9918    56  ldr x5, pc+88 (addr 0x0000ffff914f9970)    ;; object: 0x408ea7a1 WeakCell for 0x364408a1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f991c    60  ldur x5, [x5, #7]
0xffff914f9920    64  tbz w5, #0, #+0x20 (addr 0xffff914f9940)
0xffff914f9924    68  ldursw x4, [x5, #15]
0xffff914f9928    72  tbnz w4, #23, #+0x18 (addr 0xffff914f9940)
0xffff914f992c    76  ldr x4, [jssp], #8
0xffff914f9930    80  ldr x3, [jssp], #8
0xffff914f9934    84  ldr x2, pc+68 (addr 0x0000ffff914f9978)    ;; object: 0x4080f0e9 <String[6]: finish>
0xffff914f9938    88  ldr x16, pc+72 (addr 0x0000ffff914f9980)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff914f993c    92  br x16
0xffff914f9940    96  ldr x2, pc+72 (addr 0x0000ffff914f9988)    ;; object: 0x4080f0e9 <String[6]: finish>
0xffff914f9944   100  ldr x4, [jssp], #8
0xffff914f9948   104  ldr x3, [jssp], #8
0xffff914f994c   108  ldr x16, pc+68 (addr 0x0000ffff914f9990)    ;; code: BUILTIN
0xffff914f9950   112  br x16
0xffff914f9954   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914f9958   120  d63f03e0       constant
0xffff914f995c   124  d503201f       constant
0xffff914f9960   128  408ea6f1       constant
0xffff914f9964   132  00000000       constant
0xffff914f9968   136  49bc71e1       constant
0xffff914f996c   140  00000000       constant
0xffff914f9970   144  408ea7a1       constant
0xffff914f9974   148  00000000       constant
0xffff914f9978   152  4080f0e9       constant
0xffff914f997c   156  00000000       constant
0xffff914f9980   160  9148bdc0       constant
0xffff914f9984   164  0000ffff       constant
0xffff914f9988   168  4080f0e9       constant
0xffff914f998c   172  00000000       constant
0xffff914f9990   176  91422420       constant
0xffff914f9994   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914f98f0  embedded object  (0x408ea6f1 Cell for 0)
0xffff914f9908  embedded object  (0x49bc71e1 WeakCell for 0x36406989 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f9918  embedded object  (0x408ea7a1 WeakCell for 0x364408a1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f9934  embedded object  (0x4080f0e9 <String[6]: finish>)
0xffff914f9938  code target (HANDLER)  (0xffff9148bdc0)
0xffff914f9940  embedded object  (0x4080f0e9 <String[6]: finish>)
0xffff914f994c  code target (BUILTIN)  (0xffff91422420)
0xffff914f9954  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f9a00     0  tbz w0, #0, #+0x90 (addr 0xffff914f9a90)
0xffff914f9a04     4  mov x2, x0
0xffff914f9a08     8  stur x2, [x1, #199]
0xffff914f9a0c    12  add x3, x1, #0xc7 (199)
0xffff914f9a10    16  and x2, x2, #0xfffffffffff00000
0xffff914f9a14    20  ldr x2, [x2, #8]
0xffff914f9a18    24  tbz w2, #1, #+0x24 (addr 0xffff914f9a3c)
0xffff914f9a1c    28  and x2, x1, #0xfffffffffff00000
0xffff914f9a20    32  ldr x2, [x2, #8]
0xffff914f9a24    36  tbz w2, #2, #+0x18 (addr 0xffff914f9a3c)
0xffff914f9a28    40  sub csp, jssp, #0x8 (8)
0xffff914f9a2c    44  str lr, [jssp, #-8]!
0xffff914f9a30    48  ldr x16, pc+80 (addr 0x0000ffff914f9a80)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f9a34    52  blr x16
0xffff914f9a38    56  ldr lr, [jssp], #8
0xffff914f9a3c    60  stur x5, [x1, #-1]
0xffff914f9a40    64  tbz w5, #0, #+0x34 (addr 0xffff914f9a74)
0xffff914f9a44    68  sub x2, x1, #0x1 (1)
0xffff914f9a48    72  and x5, x5, #0xfffffffffff00000
0xffff914f9a4c    76  ldr x5, [x5, #8]
0xffff914f9a50    80  tbz w5, #1, #+0x24 (addr 0xffff914f9a74)
0xffff914f9a54    84  and x5, x1, #0xfffffffffff00000
0xffff914f9a58    88  ldr x5, [x5, #8]
0xffff914f9a5c    92  tbz w5, #2, #+0x18 (addr 0xffff914f9a74)
0xffff914f9a60    96  sub csp, jssp, #0x8 (8)
0xffff914f9a64   100  str lr, [jssp, #-8]!
0xffff914f9a68   104  ldr x16, pc+32 (addr 0x0000ffff914f9a88)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f9a6c   108  blr x16
0xffff914f9a70   112  ldr lr, [jssp], #8
0xffff914f9a74   116  ret
0xffff914f9a78   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f9a7c   124  d63f03e0       constant
0xffff914f9a80   128  914170c0       constant
0xffff914f9a84   132  0000ffff       constant
0xffff914f9a88   136  91438080       constant
0xffff914f9a8c   140  0000ffff       constant
0xffff914f9a90   144  movz x16, #0x0
0xffff914f9a94   148  sub csp, jssp, #0x10 (16)
0xffff914f9a98   152  stp fp, lr, [jssp, #-16]!
0xffff914f9a9c   156  bl #+0x4 (addr 0xffff914f9aa0)
0xffff914f9aa0   160  movz x17, #0xa00000000
0xffff914f9aa4   164  sub csp, jssp, #0x10 (16)
0xffff914f9aa8   168  stp x17, cp, [jssp, #-16]!
0xffff914f9aac   172  add fp, jssp, #0x10 (16)
0xffff914f9ab0   176  ldr x17, pc+24 (addr 0x0000ffff914f9ac8)    ;; lazy deoptimization bailout 0
0xffff914f9ab4   180  add x17, x17, x16
0xffff914f9ab8   184  br x17
0xffff914f9abc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f9ac0   192  d63f03e0       constant
0xffff914f9ac4   196  d503201f       constant
0xffff914f9ac8   200  91206000       constant
0xffff914f9acc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f9a30  code target (STUB)  (0xffff914170c0)
0xffff914f9a68  code target (STUB)  (0xffff91438080)
0xffff914f9a78  constant pool (size 24)
0xffff914f9ab0  runtime entry
0xffff914f9abc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff914f9a00     0  tbz w0, #0, #+0x90 (addr 0xffff914f9a90)
0xffff914f9a04     4  mov x2, x0
0xffff914f9a08     8  stur x2, [x1, #199]
0xffff914f9a0c    12  add x3, x1, #0xc7 (199)
0xffff914f9a10    16  and x2, x2, #0xfffffffffff00000
0xffff914f9a14    20  ldr x2, [x2, #8]
0xffff914f9a18    24  tbz w2, #1, #+0x24 (addr 0xffff914f9a3c)
0xffff914f9a1c    28  and x2, x1, #0xfffffffffff00000
0xffff914f9a20    32  ldr x2, [x2, #8]
0xffff914f9a24    36  tbz w2, #2, #+0x18 (addr 0xffff914f9a3c)
0xffff914f9a28    40  sub csp, jssp, #0x8 (8)
0xffff914f9a2c    44  str lr, [jssp, #-8]!
0xffff914f9a30    48  ldr x16, pc+80 (addr 0x0000ffff914f9a80)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f9a34    52  blr x16
0xffff914f9a38    56  ldr lr, [jssp], #8
0xffff914f9a3c    60  stur x5, [x1, #-1]
0xffff914f9a40    64  tbz w5, #0, #+0x34 (addr 0xffff914f9a74)
0xffff914f9a44    68  sub x2, x1, #0x1 (1)
0xffff914f9a48    72  and x5, x5, #0xfffffffffff00000
0xffff914f9a4c    76  ldr x5, [x5, #8]
0xffff914f9a50    80  tbz w5, #1, #+0x24 (addr 0xffff914f9a74)
0xffff914f9a54    84  and x5, x1, #0xfffffffffff00000
0xffff914f9a58    88  ldr x5, [x5, #8]
0xffff914f9a5c    92  tbz w5, #2, #+0x18 (addr 0xffff914f9a74)
0xffff914f9a60    96  sub csp, jssp, #0x8 (8)
0xffff914f9a64   100  str lr, [jssp, #-8]!
0xffff914f9a68   104  ldr x16, pc+32 (addr 0x0000ffff914f9a88)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914f9a6c   108  blr x16
0xffff914f9a70   112  ldr lr, [jssp], #8
0xffff914f9a74   116  ret
0xffff914f9a78   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff914f9a7c   124  d63f03e0       constant
0xffff914f9a80   128  914170c0       constant
0xffff914f9a84   132  0000ffff       constant
0xffff914f9a88   136  91438080       constant
0xffff914f9a8c   140  0000ffff       constant
0xffff914f9a90   144  movz x16, #0x0
0xffff914f9a94   148  sub csp, jssp, #0x10 (16)
0xffff914f9a98   152  stp fp, lr, [jssp, #-16]!
0xffff914f9a9c   156  bl #+0x4 (addr 0xffff914f9aa0)
0xffff914f9aa0   160  movz x17, #0xa00000000
0xffff914f9aa4   164  sub csp, jssp, #0x10 (16)
0xffff914f9aa8   168  stp x17, cp, [jssp, #-16]!
0xffff914f9aac   172  add fp, jssp, #0x10 (16)
0xffff914f9ab0   176  ldr x17, pc+24 (addr 0x0000ffff914f9ac8)    ;; lazy deoptimization bailout 0
0xffff914f9ab4   180  add x17, x17, x16
0xffff914f9ab8   184  br x17
0xffff914f9abc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f9ac0   192  d63f03e0       constant
0xffff914f9ac4   196  d503201f       constant
0xffff914f9ac8   200  91206000       constant
0xffff914f9acc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914f9a30  code target (STUB)  (0xffff914170c0)
0xffff914f9a68  code target (STUB)  (0xffff91438080)
0xffff914f9a78  constant pool (size 24)
0xffff914f9ab0  runtime entry
0xffff914f9abc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = corkedRequestsFree
compiler = unknown
Instructions (size = 184)
0xffff914f9b40     0  sub csp, jssp, #0x8 (8)
0xffff914f9b44     4  str x3, [jssp, #-8]!
0xffff914f9b48     8  sub csp, jssp, #0x8 (8)
0xffff914f9b4c    12  str x4, [jssp, #-8]!
0xffff914f9b50    16  ldr x3, pc+112 (addr 0x0000ffff914f9bc0)    ;; object: 0x408e9989 Cell for 0
0xffff914f9b54    20  ldur x3, [x3, #7]
0xffff914f9b58    24  cmp x3, #0x0 (0)
0xffff914f9b5c    28  b.ne #+0x44 (addr 0xffff914f9ba0)
0xffff914f9b60    32  tbz w0, #0, #+0x40 (addr 0xffff914f9ba0)
0xffff914f9b64    36  ldur x3, [x0, #-1]
0xffff914f9b68    40  ldr x4, pc+96 (addr 0x0000ffff914f9bc8)    ;; object: 0x408ea7a1 WeakCell for 0x364408a1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f9b6c    44  ldur x4, [x4, #7]
0xffff914f9b70    48  cmp x3, x4
0xffff914f9b74    52  b.ne #+0x2c (addr 0xffff914f9ba0)
0xffff914f9b78    56  ldr x5, pc+88 (addr 0x0000ffff914f9bd0)    ;; object: 0x408ea7d9 WeakCell for 0x364408f9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f9b7c    60  ldur x5, [x5, #7]
0xffff914f9b80    64  tbz w5, #0, #+0x20 (addr 0xffff914f9ba0)
0xffff914f9b84    68  ldursw x4, [x5, #15]
0xffff914f9b88    72  tbnz w4, #23, #+0x18 (addr 0xffff914f9ba0)
0xffff914f9b8c    76  ldr x4, [jssp], #8
0xffff914f9b90    80  ldr x3, [jssp], #8
0xffff914f9b94    84  ldr x2, pc+68 (addr 0x0000ffff914f9bd8)    ;; object: 0x40822ab9 <String[18]: corkedRequestsFree>
0xffff914f9b98    88  ldr x16, pc+72 (addr 0x0000ffff914f9be0)    ;; code: HANDLER, StoreTransitionStub, minor: 198681
0xffff914f9b9c    92  br x16
0xffff914f9ba0    96  ldr x2, pc+72 (addr 0x0000ffff914f9be8)    ;; object: 0x40822ab9 <String[18]: corkedRequestsFree>
0xffff914f9ba4   100  ldr x4, [jssp], #8
0xffff914f9ba8   104  ldr x3, [jssp], #8
0xffff914f9bac   108  ldr x16, pc+68 (addr 0x0000ffff914f9bf0)    ;; code: BUILTIN
0xffff914f9bb0   112  br x16
0xffff914f9bb4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914f9bb8   120  d63f03e0       constant
0xffff914f9bbc   124  d503201f       constant
0xffff914f9bc0   128  408e9989       constant
0xffff914f9bc4   132  00000000       constant
0xffff914f9bc8   136  408ea7a1       constant
0xffff914f9bcc   140  00000000       constant
0xffff914f9bd0   144  408ea7d9       constant
0xffff914f9bd4   148  00000000       constant
0xffff914f9bd8   152  40822ab9       constant
0xffff914f9bdc   156  00000000       constant
0xffff914f9be0   160  914f9a00       constant
0xffff914f9be4   164  0000ffff       constant
0xffff914f9be8   168  40822ab9       constant
0xffff914f9bec   172  00000000       constant
0xffff914f9bf0   176  91422420       constant
0xffff914f9bf4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914f9b50  embedded object  (0x408e9989 Cell for 0)
0xffff914f9b68  embedded object  (0x408ea7a1 WeakCell for 0x364408a1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f9b78  embedded object  (0x408ea7d9 WeakCell for 0x364408f9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f9b94  embedded object  (0x40822ab9 <String[18]: corkedRequestsFree>)
0xffff914f9b98  code target (HANDLER)  (0xffff914f9a00)
0xffff914f9ba0  embedded object  (0x40822ab9 <String[18]: corkedRequestsFree>)
0xffff914f9bac  code target (BUILTIN)  (0xffff91422420)
0xffff914f9bb4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = _writableState
compiler = unknown
Instructions (size = 184)
0xffff914f9c60     0  sub csp, jssp, #0x8 (8)
0xffff914f9c64     4  str x3, [jssp, #-8]!
0xffff914f9c68     8  sub csp, jssp, #0x8 (8)
0xffff914f9c6c    12  str x4, [jssp, #-8]!
0xffff914f9c70    16  ldr x3, pc+112 (addr 0x0000ffff914f9ce0)    ;; object: 0x408e95a9 Cell for 0
0xffff914f9c74    20  ldur x3, [x3, #7]
0xffff914f9c78    24  cmp x3, #0x0 (0)
0xffff914f9c7c    28  b.ne #+0x44 (addr 0xffff914f9cc0)
0xffff914f9c80    32  tbz w0, #0, #+0x40 (addr 0xffff914f9cc0)
0xffff914f9c84    36  ldur x3, [x0, #-1]
0xffff914f9c88    40  ldr x4, pc+96 (addr 0x0000ffff914f9ce8)    ;; object: 0x408ea7d9 WeakCell for 0x364408f9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f9c8c    44  ldur x4, [x4, #7]
0xffff914f9c90    48  cmp x3, x4
0xffff914f9c94    52  b.ne #+0x2c (addr 0xffff914f9cc0)
0xffff914f9c98    56  ldr x5, pc+88 (addr 0x0000ffff914f9cf0)    ;; object: 0x408ea8c9 WeakCell for 0x36440951 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f9c9c    60  ldur x5, [x5, #7]
0xffff914f9ca0    64  tbz w5, #0, #+0x20 (addr 0xffff914f9cc0)
0xffff914f9ca4    68  ldursw x4, [x5, #15]
0xffff914f9ca8    72  tbnz w4, #23, #+0x18 (addr 0xffff914f9cc0)
0xffff914f9cac    76  ldr x4, [jssp], #8
0xffff914f9cb0    80  ldr x3, [jssp], #8
0xffff914f9cb4    84  ldr x2, pc+68 (addr 0x0000ffff914f9cf8)    ;; object: 0x49bf92c9 <String[14]: _writableState>
0xffff914f9cb8    88  ldr x16, pc+72 (addr 0x0000ffff914f9d00)    ;; code: HANDLER, StoreTransitionStub, minor: 196611
0xffff914f9cbc    92  br x16
0xffff914f9cc0    96  ldr x2, pc+72 (addr 0x0000ffff914f9d08)    ;; object: 0x49bf92c9 <String[14]: _writableState>
0xffff914f9cc4   100  ldr x4, [jssp], #8
0xffff914f9cc8   104  ldr x3, [jssp], #8
0xffff914f9ccc   108  ldr x16, pc+68 (addr 0x0000ffff914f9d10)    ;; code: BUILTIN
0xffff914f9cd0   112  br x16
0xffff914f9cd4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914f9cd8   120  d63f03e0       constant
0xffff914f9cdc   124  d503201f       constant
0xffff914f9ce0   128  408e95a9       constant
0xffff914f9ce4   132  00000000       constant
0xffff914f9ce8   136  408ea7d9       constant
0xffff914f9cec   140  00000000       constant
0xffff914f9cf0   144  408ea8c9       constant
0xffff914f9cf4   148  00000000       constant
0xffff914f9cf8   152  49bf92c9       constant
0xffff914f9cfc   156  00000000       constant
0xffff914f9d00   160  91499940       constant
0xffff914f9d04   164  0000ffff       constant
0xffff914f9d08   168  49bf92c9       constant
0xffff914f9d0c   172  00000000       constant
0xffff914f9d10   176  91422420       constant
0xffff914f9d14   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914f9c70  embedded object  (0x408e95a9 Cell for 0)
0xffff914f9c88  embedded object  (0x408ea7d9 WeakCell for 0x364408f9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f9c98  embedded object  (0x408ea8c9 WeakCell for 0x36440951 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f9cb4  embedded object  (0x49bf92c9 <String[14]: _writableState>)
0xffff914f9cb8  code target (HANDLER)  (0xffff91499940)
0xffff914f9cc0  embedded object  (0x49bf92c9 <String[14]: _writableState>)
0xffff914f9ccc  code target (BUILTIN)  (0xffff91422420)
0xffff914f9cd4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = writable
compiler = unknown
Instructions (size = 152)
0xffff914f9d80     0  sub csp, jssp, #0x8 (8)
0xffff914f9d84     4  str x3, [jssp, #-8]!
0xffff914f9d88     8  sub csp, jssp, #0x8 (8)
0xffff914f9d8c    12  str x4, [jssp, #-8]!
0xffff914f9d90    16  ldr x3, pc+88 (addr 0x0000ffff914f9de8)    ;; object: 0x408e95a9 Cell for 0
0xffff914f9d94    20  ldur x3, [x3, #7]
0xffff914f9d98    24  cmp x3, #0x0 (0)
0xffff914f9d9c    28  b.ne #+0x30 (addr 0xffff914f9dcc)
0xffff914f9da0    32  tbz w0, #0, #+0x2c (addr 0xffff914f9dcc)
0xffff914f9da4    36  ldr x5, pc+76 (addr 0x0000ffff914f9df0)    ;; object: 0x408ea901 WeakCell for 0x364409a9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914f9da8    40  ldur x5, [x5, #7]
0xffff914f9dac    44  tbz w5, #0, #+0x20 (addr 0xffff914f9dcc)
0xffff914f9db0    48  ldursw x4, [x5, #15]
0xffff914f9db4    52  tbnz w4, #23, #+0x18 (addr 0xffff914f9dcc)
0xffff914f9db8    56  ldr x4, [jssp], #8
0xffff914f9dbc    60  ldr x3, [jssp], #8
0xffff914f9dc0    64  ldr x2, pc+56 (addr 0x0000ffff914f9df8)    ;; object: 0x49b057a9 <String[8]: writable>
0xffff914f9dc4    68  ldr x16, pc+60 (addr 0x0000ffff914f9e00)    ;; code: HANDLER, StoreTransitionStub, minor: 196612
0xffff914f9dc8    72  br x16
0xffff914f9dcc    76  ldr x2, pc+60 (addr 0x0000ffff914f9e08)    ;; object: 0x49b057a9 <String[8]: writable>
0xffff914f9dd0    80  ldr x4, [jssp], #8
0xffff914f9dd4    84  ldr x3, [jssp], #8
0xffff914f9dd8    88  ldr x16, pc+56 (addr 0x0000ffff914f9e10)    ;; code: BUILTIN
0xffff914f9ddc    92  br x16
0xffff914f9de0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914f9de4   100  d63f03e0       constant
0xffff914f9de8   104  408e95a9       constant
0xffff914f9dec   108  00000000       constant
0xffff914f9df0   112  408ea901       constant
0xffff914f9df4   116  00000000       constant
0xffff914f9df8   120  49b057a9       constant
0xffff914f9dfc   124  00000000       constant
0xffff914f9e00   128  9149a100       constant
0xffff914f9e04   132  0000ffff       constant
0xffff914f9e08   136  49b057a9       constant
0xffff914f9e0c   140  00000000       constant
0xffff914f9e10   144  91422420       constant
0xffff914f9e14   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914f9d90  embedded object  (0x408e95a9 Cell for 0)
0xffff914f9da4  embedded object  (0x408ea901 WeakCell for 0x364409a9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914f9dc0  embedded object  (0x49b057a9 <String[8]: writable>)
0xffff914f9dc4  code target (HANDLER)  (0xffff9149a100)
0xffff914f9dcc  embedded object  (0x49b057a9 <String[8]: writable>)
0xffff914f9dd8  code target (BUILTIN)  (0xffff91422420)
0xffff914f9de0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff914f9e80     0  tbz w0, #0, #+0x50 (addr 0xffff914f9ed0)
0xffff914f9e84     4  mov x2, x0
0xffff914f9e88     8  stur x2, [x1, #79]
0xffff914f9e8c    12  add x3, x1, #0x4f (79)
0xffff914f9e90    16  and x2, x2, #0xfffffffffff00000
0xffff914f9e94    20  ldr x2, [x2, #8]
0xffff914f9e98    24  tbz w2, #1, #+0x24 (addr 0xffff914f9ebc)
0xffff914f9e9c    28  and x2, x1, #0xfffffffffff00000
0xffff914f9ea0    32  ldr x2, [x2, #8]
0xffff914f9ea4    36  tbz w2, #2, #+0x18 (addr 0xffff914f9ebc)
0xffff914f9ea8    40  sub csp, jssp, #0x8 (8)
0xffff914f9eac    44  str lr, [jssp, #-8]!
0xffff914f9eb0    48  ldr x16, pc+24 (addr 0x0000ffff914f9ec8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f9eb4    52  blr x16
0xffff914f9eb8    56  ldr lr, [jssp], #8
0xffff914f9ebc    60  ret
0xffff914f9ec0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f9ec4    68  d63f03e0       constant
0xffff914f9ec8    72  914170c0       constant
0xffff914f9ecc    76  0000ffff       constant
0xffff914f9ed0    80  movz x16, #0x0
0xffff914f9ed4    84  sub csp, jssp, #0x10 (16)
0xffff914f9ed8    88  stp fp, lr, [jssp, #-16]!
0xffff914f9edc    92  bl #+0x4 (addr 0xffff914f9ee0)
0xffff914f9ee0    96  movz x17, #0xa00000000
0xffff914f9ee4   100  sub csp, jssp, #0x10 (16)
0xffff914f9ee8   104  stp x17, cp, [jssp, #-16]!
0xffff914f9eec   108  add fp, jssp, #0x10 (16)
0xffff914f9ef0   112  ldr x17, pc+24 (addr 0x0000ffff914f9f08)    ;; lazy deoptimization bailout 0
0xffff914f9ef4   116  add x17, x17, x16
0xffff914f9ef8   120  br x17
0xffff914f9efc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f9f00   128  d63f03e0       constant
0xffff914f9f04   132  d503201f       constant
0xffff914f9f08   136  91206000       constant
0xffff914f9f0c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f9eb0  code target (STUB)  (0xffff914170c0)
0xffff914f9ec0  constant pool (size 16)
0xffff914f9ef0  runtime entry
0xffff914f9efc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff914f9e80     0  tbz w0, #0, #+0x50 (addr 0xffff914f9ed0)
0xffff914f9e84     4  mov x2, x0
0xffff914f9e88     8  stur x2, [x1, #79]
0xffff914f9e8c    12  add x3, x1, #0x4f (79)
0xffff914f9e90    16  and x2, x2, #0xfffffffffff00000
0xffff914f9e94    20  ldr x2, [x2, #8]
0xffff914f9e98    24  tbz w2, #1, #+0x24 (addr 0xffff914f9ebc)
0xffff914f9e9c    28  and x2, x1, #0xfffffffffff00000
0xffff914f9ea0    32  ldr x2, [x2, #8]
0xffff914f9ea4    36  tbz w2, #2, #+0x18 (addr 0xffff914f9ebc)
0xffff914f9ea8    40  sub csp, jssp, #0x8 (8)
0xffff914f9eac    44  str lr, [jssp, #-8]!
0xffff914f9eb0    48  ldr x16, pc+24 (addr 0x0000ffff914f9ec8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff914f9eb4    52  blr x16
0xffff914f9eb8    56  ldr lr, [jssp], #8
0xffff914f9ebc    60  ret
0xffff914f9ec0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914f9ec4    68  d63f03e0       constant
0xffff914f9ec8    72  914170c0       constant
0xffff914f9ecc    76  0000ffff       constant
0xffff914f9ed0    80  movz x16, #0x0
0xffff914f9ed4    84  sub csp, jssp, #0x10 (16)
0xffff914f9ed8    88  stp fp, lr, [jssp, #-16]!
0xffff914f9edc    92  bl #+0x4 (addr 0xffff914f9ee0)
0xffff914f9ee0    96  movz x17, #0xa00000000
0xffff914f9ee4   100  sub csp, jssp, #0x10 (16)
0xffff914f9ee8   104  stp x17, cp, [jssp, #-16]!
0xffff914f9eec   108  add fp, jssp, #0x10 (16)
0xffff914f9ef0   112  ldr x17, pc+24 (addr 0x0000ffff914f9f08)    ;; lazy deoptimization bailout 0
0xffff914f9ef4   116  add x17, x17, x16
0xffff914f9ef8   120  br x17
0xffff914f9efc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914f9f00   128  d63f03e0       constant
0xffff914f9f04   132  d503201f       constant
0xffff914f9f08   136  91206000       constant
0xffff914f9f0c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914f9eb0  code target (STUB)  (0xffff914170c0)
0xffff914f9ec0  constant pool (size 16)
0xffff914f9ef0  runtime entry
0xffff914f9efc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = _events
compiler = unknown
Instructions (size = 120)
0xffff914f9f80     0  sub csp, jssp, #0x8 (8)
0xffff914f9f84     4  str x3, [jssp, #-8]!
0xffff914f9f88     8  sub csp, jssp, #0x8 (8)
0xffff914f9f8c    12  str x0, [jssp, #-8]!
0xffff914f9f90    16  ldr x0, pc+72 (addr 0x0000ffff914f9fd8)    ;; object: 0x408eaa09 Cell for 0
0xffff914f9f94    20  ldur x0, [x0, #7]
0xffff914f9f98    24  cmp x0, #0x0 (0)
0xffff914f9f9c    28  b.ne #+0x14 (addr 0xffff914f9fb0)
0xffff914f9fa0    32  ldr x3, pc+64 (addr 0x0000ffff914f9fe0)    ;; object: 0x408eaa19 WeakCell for 0x408acf51 <an Object with map 0x3641bf39>
0xffff914f9fa4    36  ldur x3, [x3, #7]
0xffff914f9fa8    40  tbz w3, #0, #+0x8 (addr 0xffff914f9fb0)
0xffff914f9fac    44  b #+0x14 (addr 0xffff914f9fc0)
0xffff914f9fb0    48  ldr x0, [jssp], #8
0xffff914f9fb4    52  ldr x3, [jssp], #8
0xffff914f9fb8    56  ldr x16, pc+48 (addr 0x0000ffff914f9fe8)    ;; code: BUILTIN
0xffff914f9fbc    60  br x16
0xffff914f9fc0    64  add jssp, jssp, #0x10 (16)
0xffff914f9fc4    68  mov x1, x3
0xffff914f9fc8    72  ldr x16, pc+40 (addr 0x0000ffff914f9ff0)    ;; code: HANDLER, LoadFieldStub, minor: 2052
0xffff914f9fcc    76  br x16
0xffff914f9fd0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914f9fd4    84  d63f03e0       constant
0xffff914f9fd8    88  408eaa09       constant
0xffff914f9fdc    92  00000000       constant
0xffff914f9fe0    96  408eaa19       constant
0xffff914f9fe4   100  00000000       constant
0xffff914f9fe8   104  914222e0       constant
0xffff914f9fec   108  0000ffff       constant
0xffff914f9ff0   112  91478da0       constant
0xffff914f9ff4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914f9f90  embedded object  (0x408eaa09 Cell for 0)
0xffff914f9fa0  embedded object  (0x408eaa19 WeakCell for 0x408acf51 <an Object with map 0x3641bf39>)
0xffff914f9fb8  code target (BUILTIN)  (0xffff914222e0)
0xffff914f9fc8  code target (HANDLER)  (0xffff91478da0)
0xffff914f9fd0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 160)
0xffff914fa060     0  tbz w0, #0, #+0x58 (addr 0xffff914fa0b8)
0xffff914fa064     4  mov x2, x0
0xffff914fa068     8  ldur x4, [x1, #7]
0xffff914fa06c    12  stur x2, [x4, #15]
0xffff914fa070    16  add x3, x4, #0xf (15)
0xffff914fa074    20  and x2, x2, #0xfffffffffff00000
0xffff914fa078    24  ldr x2, [x2, #8]
0xffff914fa07c    28  tbz w2, #1, #+0x24 (addr 0xffff914fa0a0)
0xffff914fa080    32  and x2, x4, #0xfffffffffff00000
0xffff914fa084    36  ldr x2, [x2, #8]
0xffff914fa088    40  tbz w2, #2, #+0x18 (addr 0xffff914fa0a0)
0xffff914fa08c    44  sub csp, jssp, #0x8 (8)
0xffff914fa090    48  str lr, [jssp, #-8]!
0xffff914fa094    52  ldr x16, pc+28 (addr 0x0000ffff914fa0b0)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914fa098    56  blr x16
0xffff914fa09c    60  ldr lr, [jssp], #8
0xffff914fa0a0    64  ret
0xffff914fa0a4    68  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914fa0a8    72  d63f03e0       constant
0xffff914fa0ac    76  d503201f       constant
0xffff914fa0b0    80  914378a0       constant
0xffff914fa0b4    84  0000ffff       constant
0xffff914fa0b8    88  movz x16, #0x0
0xffff914fa0bc    92  sub csp, jssp, #0x10 (16)
0xffff914fa0c0    96  stp fp, lr, [jssp, #-16]!
0xffff914fa0c4   100  bl #+0x4 (addr 0xffff914fa0c8)
0xffff914fa0c8   104  movz x17, #0xa00000000
0xffff914fa0cc   108  sub csp, jssp, #0x10 (16)
0xffff914fa0d0   112  stp x17, cp, [jssp, #-16]!
0xffff914fa0d4   116  add fp, jssp, #0x10 (16)
0xffff914fa0d8   120  ldr x17, pc+24 (addr 0x0000ffff914fa0f0)    ;; lazy deoptimization bailout 0
0xffff914fa0dc   124  add x17, x17, x16
0xffff914fa0e0   128  br x17
0xffff914fa0e4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914fa0e8   136  d63f03e0       constant
0xffff914fa0ec   140  d503201f       constant
0xffff914fa0f0   144  91206000       constant
0xffff914fa0f4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914fa094  code target (STUB)  (0xffff914378a0)
0xffff914fa0a4  constant pool (size 20)
0xffff914fa0d8  runtime entry
0xffff914fa0e4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 160)
0xffff914fa060     0  tbz w0, #0, #+0x58 (addr 0xffff914fa0b8)
0xffff914fa064     4  mov x2, x0
0xffff914fa068     8  ldur x4, [x1, #7]
0xffff914fa06c    12  stur x2, [x4, #15]
0xffff914fa070    16  add x3, x4, #0xf (15)
0xffff914fa074    20  and x2, x2, #0xfffffffffff00000
0xffff914fa078    24  ldr x2, [x2, #8]
0xffff914fa07c    28  tbz w2, #1, #+0x24 (addr 0xffff914fa0a0)
0xffff914fa080    32  and x2, x4, #0xfffffffffff00000
0xffff914fa084    36  ldr x2, [x2, #8]
0xffff914fa088    40  tbz w2, #2, #+0x18 (addr 0xffff914fa0a0)
0xffff914fa08c    44  sub csp, jssp, #0x8 (8)
0xffff914fa090    48  str lr, [jssp, #-8]!
0xffff914fa094    52  ldr x16, pc+28 (addr 0x0000ffff914fa0b0)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914fa098    56  blr x16
0xffff914fa09c    60  ldr lr, [jssp], #8
0xffff914fa0a0    64  ret
0xffff914fa0a4    68  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914fa0a8    72  d63f03e0       constant
0xffff914fa0ac    76  d503201f       constant
0xffff914fa0b0    80  914378a0       constant
0xffff914fa0b4    84  0000ffff       constant
0xffff914fa0b8    88  movz x16, #0x0
0xffff914fa0bc    92  sub csp, jssp, #0x10 (16)
0xffff914fa0c0    96  stp fp, lr, [jssp, #-16]!
0xffff914fa0c4   100  bl #+0x4 (addr 0xffff914fa0c8)
0xffff914fa0c8   104  movz x17, #0xa00000000
0xffff914fa0cc   108  sub csp, jssp, #0x10 (16)
0xffff914fa0d0   112  stp x17, cp, [jssp, #-16]!
0xffff914fa0d4   116  add fp, jssp, #0x10 (16)
0xffff914fa0d8   120  ldr x17, pc+24 (addr 0x0000ffff914fa0f0)    ;; lazy deoptimization bailout 0
0xffff914fa0dc   124  add x17, x17, x16
0xffff914fa0e0   128  br x17
0xffff914fa0e4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914fa0e8   136  d63f03e0       constant
0xffff914fa0ec   140  d503201f       constant
0xffff914fa0f0   144  91206000       constant
0xffff914fa0f4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914fa094  code target (STUB)  (0xffff914378a0)
0xffff914fa0a4  constant pool (size 20)
0xffff914fa0d8  runtime entry
0xffff914fa0e4  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = BOOLEAN*BOOLEAN -> BOOLEAN
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 184)
0xffff914fa160     0  tbz w1, #0, #+0x30 (addr 0xffff914fa190)
0xffff914fa164     4  ldur x2, [x1, #-1]
0xffff914fa168     8  ldr x16, [x26, #840]
0xffff914fa16c    12  cmp x2, x16
0xffff914fa170    16  b.ne #+0x20 (addr 0xffff914fa190)
0xffff914fa174    20  tbz w0, #0, #+0x1c (addr 0xffff914fa190)
0xffff914fa178    24  ldur x3, [x0, #-1]
0xffff914fa17c    28  ldr x16, [x26, #840]
0xffff914fa180    32  cmp x3, x16
0xffff914fa184    36  b.ne #+0xc (addr 0xffff914fa190)
0xffff914fa188    40  sub x0, x1, x0
0xffff914fa18c    44  ret
0xffff914fa190    48  movz x16, #0xc00000000
0xffff914fa194    52  sub csp, jssp, #0x10 (16)
0xffff914fa198    56  stp fp, lr, [jssp, #-16]!
0xffff914fa19c    60  sub csp, jssp, #0x10 (16)
0xffff914fa1a0    64  str x16, [jssp, #-8]!
0xffff914fa1a4    68  ldr x17, pc+92 (addr 0x0000ffff914fa200)    ;; object: 0xffff914fa101 <Code: COMPARE_IC>
0xffff914fa1a8    72  sub csp, jssp, #0x10 (16)
0xffff914fa1ac    76  str x17, [jssp, #-8]!
0xffff914fa1b0    80  add fp, jssp, #0x10 (16)
0xffff914fa1b4    84  sub csp, jssp, #0x18 (24)
0xffff914fa1b8    88  stp lr, x0, [jssp, #-24]!
0xffff914fa1bc    92  str x1, [jssp, #16]
0xffff914fa1c0    96  movz x10, #0x2f00000000
0xffff914fa1c4   100  sub csp, jssp, #0x18 (24)
0xffff914fa1c8   104  stp x10, x0, [jssp, #-24]!
0xffff914fa1cc   108  str x1, [jssp, #16]
0xffff914fa1d0   112  movz x0, #0x3
0xffff914fa1d4   116  ldr x1, pc+52 (addr 0x0000ffff914fa208)    ;; external reference (Runtime::CompareIC_Miss)
0xffff914fa1d8   120  ldr x16, pc+56 (addr 0x0000ffff914fa210)    ;; code: STUB, CEntryStub, minor: 4
0xffff914fa1dc   124  blr x16
0xffff914fa1e0   128  add x11, x0, #0x5f (95)
0xffff914fa1e4   132  ldr x1, [jssp, #16]
0xffff914fa1e8   136  ldp lr, x0, [jssp], #24
0xffff914fa1ec   140  mov jssp, fp
0xffff914fa1f0   144  ldp fp, lr, [jssp], #16
0xffff914fa1f4   148  br x11
0xffff914fa1f8   152  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914fa1fc   156  d63f03e0       constant
0xffff914fa200   160  914fa101       constant
0xffff914fa204   164  0000ffff       constant
0xffff914fa208   168  00c8a980       constant
0xffff914fa20c   172  00000000       constant
0xffff914fa210   176  91406060       constant
0xffff914fa214   180  0000ffff       constant


RelocInfo (size = 12)
0xffff914fa1a4  embedded object  (0xffff914fa101 <Code: COMPARE_IC>)
0xffff914fa1d4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff914fa1d8  code target (STUB)  (0xffff91406060)
0xffff914fa1f8  constant pool (size 32)


kind = HANDLER
major_key = <NoCache>Stub
name = end
compiler = unknown
Instructions (size = 152)
0xffff914fae20     0  sub csp, jssp, #0x8 (8)
0xffff914fae24     4  str x3, [jssp, #-8]!
0xffff914fae28     8  sub csp, jssp, #0x8 (8)
0xffff914fae2c    12  str x4, [jssp, #-8]!
0xffff914fae30    16  ldr x3, pc+88 (addr 0x0000ffff914fae88)    ;; object: 0x408d2529 Cell for 0
0xffff914fae34    20  ldur x3, [x3, #7]
0xffff914fae38    24  cmp x3, #0x0 (0)
0xffff914fae3c    28  b.ne #+0x30 (addr 0xffff914fae6c)
0xffff914fae40    32  tbz w0, #0, #+0x2c (addr 0xffff914fae6c)
0xffff914fae44    36  ldr x5, pc+76 (addr 0x0000ffff914fae90)    ;; object: 0x408eb271 WeakCell for 0x36440ab1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fae48    40  ldur x5, [x5, #7]
0xffff914fae4c    44  tbz w5, #0, #+0x20 (addr 0xffff914fae6c)
0xffff914fae50    48  ldursw x4, [x5, #15]
0xffff914fae54    52  tbnz w4, #23, #+0x18 (addr 0xffff914fae6c)
0xffff914fae58    56  ldr x4, [jssp], #8
0xffff914fae5c    60  ldr x3, [jssp], #8
0xffff914fae60    64  ldr x2, pc+56 (addr 0x0000ffff914fae98)    ;; object: 0x49b93989 <String[3]: end>
0xffff914fae64    68  ldr x16, pc+60 (addr 0x0000ffff914faea0)    ;; code: HANDLER, StoreTransitionStub, minor: 198659
0xffff914fae68    72  br x16
0xffff914fae6c    76  ldr x2, pc+60 (addr 0x0000ffff914faea8)    ;; object: 0x49b93989 <String[3]: end>
0xffff914fae70    80  ldr x4, [jssp], #8
0xffff914fae74    84  ldr x3, [jssp], #8
0xffff914fae78    88  ldr x16, pc+56 (addr 0x0000ffff914faeb0)    ;; code: BUILTIN
0xffff914fae7c    92  br x16
0xffff914fae80    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914fae84   100  d63f03e0       constant
0xffff914fae88   104  408d2529       constant
0xffff914fae8c   108  00000000       constant
0xffff914fae90   112  408eb271       constant
0xffff914fae94   116  00000000       constant
0xffff914fae98   120  49b93989       constant
0xffff914fae9c   124  00000000       constant
0xffff914faea0   128  9148b940       constant
0xffff914faea4   132  0000ffff       constant
0xffff914faea8   136  49b93989       constant
0xffff914faeac   140  00000000       constant
0xffff914faeb0   144  91422420       constant
0xffff914faeb4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914fae30  embedded object  (0x408d2529 Cell for 0)
0xffff914fae44  embedded object  (0x408eb271 WeakCell for 0x36440ab1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fae60  embedded object  (0x49b93989 <String[3]: end>)
0xffff914fae64  code target (HANDLER)  (0xffff9148b940)
0xffff914fae6c  embedded object  (0x49b93989 <String[3]: end>)
0xffff914fae78  code target (BUILTIN)  (0xffff91422420)
0xffff914fae80  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff914faf20     0  ldur x0, [x1, #95]
0xffff914faf24     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff914faf20     0  ldur x0, [x1, #95]
0xffff914faf24     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff914fafa0     0  mov x5, x0
0xffff914fafa4     4  tbnz w5, #0, #+0xc (addr 0xffff914fafb0)
0xffff914fafa8     8  stur x5, [x1, #95]
0xffff914fafac    12  ret
0xffff914fafb0    16  movz x16, #0x0
0xffff914fafb4    20  sub csp, jssp, #0x10 (16)
0xffff914fafb8    24  stp fp, lr, [jssp, #-16]!
0xffff914fafbc    28  bl #+0x4 (addr 0xffff914fafc0)
0xffff914fafc0    32  movz x17, #0xa00000000
0xffff914fafc4    36  sub csp, jssp, #0x10 (16)
0xffff914fafc8    40  stp x17, cp, [jssp, #-16]!
0xffff914fafcc    44  add fp, jssp, #0x10 (16)
0xffff914fafd0    48  ldr x17, pc+24 (addr 0x0000ffff914fafe8)    ;; lazy deoptimization bailout 0
0xffff914fafd4    52  add x17, x17, x16
0xffff914fafd8    56  br x17
0xffff914fafdc    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914fafe0    64  d63f03e0       constant
0xffff914fafe4    68  d503201f       constant
0xffff914fafe8    72  91206000       constant
0xffff914fafec    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff914fafd0  runtime entry
0xffff914fafdc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff914fafa0     0  mov x5, x0
0xffff914fafa4     4  tbnz w5, #0, #+0xc (addr 0xffff914fafb0)
0xffff914fafa8     8  stur x5, [x1, #95]
0xffff914fafac    12  ret
0xffff914fafb0    16  movz x16, #0x0
0xffff914fafb4    20  sub csp, jssp, #0x10 (16)
0xffff914fafb8    24  stp fp, lr, [jssp, #-16]!
0xffff914fafbc    28  bl #+0x4 (addr 0xffff914fafc0)
0xffff914fafc0    32  movz x17, #0xa00000000
0xffff914fafc4    36  sub csp, jssp, #0x10 (16)
0xffff914fafc8    40  stp x17, cp, [jssp, #-16]!
0xffff914fafcc    44  add fp, jssp, #0x10 (16)
0xffff914fafd0    48  ldr x17, pc+24 (addr 0x0000ffff914fafe8)    ;; lazy deoptimization bailout 0
0xffff914fafd4    52  add x17, x17, x16
0xffff914fafd8    56  br x17
0xffff914fafdc    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914fafe0    64  d63f03e0       constant
0xffff914fafe4    68  d503201f       constant
0xffff914fafe8    72  91206000       constant
0xffff914fafec    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff914fafd0  runtime entry
0xffff914fafdc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = on
compiler = unknown
Instructions (size = 120)
0xffff914fb060     0  sub csp, jssp, #0x8 (8)
0xffff914fb064     4  str x3, [jssp, #-8]!
0xffff914fb068     8  sub csp, jssp, #0x8 (8)
0xffff914fb06c    12  str x0, [jssp, #-8]!
0xffff914fb070    16  ldr x0, pc+72 (addr 0x0000ffff914fb0b8)    ;; object: 0x408eb381 Cell for 0
0xffff914fb074    20  ldur x0, [x0, #7]
0xffff914fb078    24  cmp x0, #0x0 (0)
0xffff914fb07c    28  b.ne #+0x14 (addr 0xffff914fb090)
0xffff914fb080    32  ldr x3, pc+64 (addr 0x0000ffff914fb0c0)    ;; object: 0x408eb391 WeakCell for 0x408acf51 <an Object with map 0x3641bf39>
0xffff914fb084    36  ldur x3, [x3, #7]
0xffff914fb088    40  tbz w3, #0, #+0x8 (addr 0xffff914fb090)
0xffff914fb08c    44  b #+0x14 (addr 0xffff914fb0a0)
0xffff914fb090    48  ldr x0, [jssp], #8
0xffff914fb094    52  ldr x3, [jssp], #8
0xffff914fb098    56  ldr x16, pc+48 (addr 0x0000ffff914fb0c8)    ;; code: BUILTIN
0xffff914fb09c    60  br x16
0xffff914fb0a0    64  add jssp, jssp, #0x10 (16)
0xffff914fb0a4    68  mov x1, x3
0xffff914fb0a8    72  ldr x16, pc+40 (addr 0x0000ffff914fb0d0)    ;; code: HANDLER, LoadConstantStub, minor: 8
0xffff914fb0ac    76  br x16
0xffff914fb0b0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914fb0b4    84  d63f03e0       constant
0xffff914fb0b8    88  408eb381       constant
0xffff914fb0bc    92  00000000       constant
0xffff914fb0c0    96  408eb391       constant
0xffff914fb0c4   100  00000000       constant
0xffff914fb0c8   104  914222e0       constant
0xffff914fb0cc   108  0000ffff       constant
0xffff914fb0d0   112  9144c160       constant
0xffff914fb0d4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914fb070  embedded object  (0x408eb381 Cell for 0)
0xffff914fb080  embedded object  (0x408eb391 WeakCell for 0x408acf51 <an Object with map 0x3641bf39>)
0xffff914fb098  code target (BUILTIN)  (0xffff914222e0)
0xffff914fb0a8  code target (HANDLER)  (0xffff9144c160)
0xffff914fb0b0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = finish
compiler = unknown
Instructions (size = 168)
0xffff914fb140     0  sub csp, jssp, #0x8 (8)
0xffff914fb144     4  str x3, [jssp, #-8]!
0xffff914fb148     8  sub csp, jssp, #0x8 (8)
0xffff914fb14c    12  str x4, [jssp, #-8]!
0xffff914fb150    16  ldr x3, pc+104 (addr 0x0000ffff914fb1b8)    ;; object: 0x408d2529 Cell for 0
0xffff914fb154    20  ldur x3, [x3, #7]
0xffff914fb158    24  cmp x3, #0x0 (0)
0xffff914fb15c    28  b.ne #+0x3c (addr 0xffff914fb198)
0xffff914fb160    32  ldr x5, pc+96 (addr 0x0000ffff914fb1c0)    ;; object: 0x408eb3e1 WeakCell for 0x36440b09 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fb164    36  ldur x5, [x5, #7]
0xffff914fb168    40  tbz w5, #0, #+0x30 (addr 0xffff914fb198)
0xffff914fb16c    44  ldursw x4, [x5, #15]
0xffff914fb170    48  tbnz w4, #23, #+0x28 (addr 0xffff914fb198)
0xffff914fb174    52  ldur x4, [x5, #47]
0xffff914fb178    56  ldur x4, [x4, #71]
0xffff914fb17c    60  cmp x0, x4
0xffff914fb180    64  b.ne #+0x18 (addr 0xffff914fb198)
0xffff914fb184    68  ldr x4, [jssp], #8
0xffff914fb188    72  ldr x3, [jssp], #8
0xffff914fb18c    76  ldr x2, pc+60 (addr 0x0000ffff914fb1c8)    ;; object: 0x4080f0e9 <String[6]: finish>
0xffff914fb190    80  ldr x16, pc+64 (addr 0x0000ffff914fb1d0)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff914fb194    84  br x16
0xffff914fb198    88  ldr x2, pc+64 (addr 0x0000ffff914fb1d8)    ;; object: 0x4080f0e9 <String[6]: finish>
0xffff914fb19c    92  ldr x4, [jssp], #8
0xffff914fb1a0    96  ldr x3, [jssp], #8
0xffff914fb1a4   100  ldr x16, pc+60 (addr 0x0000ffff914fb1e0)    ;; code: BUILTIN
0xffff914fb1a8   104  br x16
0xffff914fb1ac   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914fb1b0   112  d63f03e0       constant
0xffff914fb1b4   116  d503201f       constant
0xffff914fb1b8   120  408d2529       constant
0xffff914fb1bc   124  00000000       constant
0xffff914fb1c0   128  408eb3e1       constant
0xffff914fb1c4   132  00000000       constant
0xffff914fb1c8   136  4080f0e9       constant
0xffff914fb1cc   140  00000000       constant
0xffff914fb1d0   144  9143cea0       constant
0xffff914fb1d4   148  0000ffff       constant
0xffff914fb1d8   152  4080f0e9       constant
0xffff914fb1dc   156  00000000       constant
0xffff914fb1e0   160  91422420       constant
0xffff914fb1e4   164  0000ffff       constant


RelocInfo (size = 12)
0xffff914fb150  embedded object  (0x408d2529 Cell for 0)
0xffff914fb160  embedded object  (0x408eb3e1 WeakCell for 0x36440b09 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fb18c  embedded object  (0x4080f0e9 <String[6]: finish>)
0xffff914fb190  code target (HANDLER)  (0xffff9143cea0)
0xffff914fb198  embedded object  (0x4080f0e9 <String[6]: finish>)
0xffff914fb1a4  code target (BUILTIN)  (0xffff91422420)
0xffff914fb1ac  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = _socketEnd
compiler = unknown
Instructions (size = 168)
0xffff914fb260     0  sub csp, jssp, #0x8 (8)
0xffff914fb264     4  str x3, [jssp, #-8]!
0xffff914fb268     8  sub csp, jssp, #0x8 (8)
0xffff914fb26c    12  str x4, [jssp, #-8]!
0xffff914fb270    16  ldr x3, pc+104 (addr 0x0000ffff914fb2d8)    ;; object: 0x408d2529 Cell for 0
0xffff914fb274    20  ldur x3, [x3, #7]
0xffff914fb278    24  cmp x3, #0x0 (0)
0xffff914fb27c    28  b.ne #+0x3c (addr 0xffff914fb2b8)
0xffff914fb280    32  ldr x5, pc+96 (addr 0x0000ffff914fb2e0)    ;; object: 0x408eb431 WeakCell for 0x36440b61 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fb284    36  ldur x5, [x5, #7]
0xffff914fb288    40  tbz w5, #0, #+0x30 (addr 0xffff914fb2b8)
0xffff914fb28c    44  ldursw x4, [x5, #15]
0xffff914fb290    48  tbnz w4, #23, #+0x28 (addr 0xffff914fb2b8)
0xffff914fb294    52  ldur x4, [x5, #47]
0xffff914fb298    56  ldur x4, [x4, #95]
0xffff914fb29c    60  cmp x0, x4
0xffff914fb2a0    64  b.ne #+0x18 (addr 0xffff914fb2b8)
0xffff914fb2a4    68  ldr x4, [jssp], #8
0xffff914fb2a8    72  ldr x3, [jssp], #8
0xffff914fb2ac    76  ldr x2, pc+60 (addr 0x0000ffff914fb2e8)    ;; object: 0x408d4401 <String[10]: _socketEnd>
0xffff914fb2b0    80  ldr x16, pc+64 (addr 0x0000ffff914fb2f0)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff914fb2b4    84  br x16
0xffff914fb2b8    88  ldr x2, pc+64 (addr 0x0000ffff914fb2f8)    ;; object: 0x408d4401 <String[10]: _socketEnd>
0xffff914fb2bc    92  ldr x4, [jssp], #8
0xffff914fb2c0    96  ldr x3, [jssp], #8
0xffff914fb2c4   100  ldr x16, pc+60 (addr 0x0000ffff914fb300)    ;; code: BUILTIN
0xffff914fb2c8   104  br x16
0xffff914fb2cc   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914fb2d0   112  d63f03e0       constant
0xffff914fb2d4   116  d503201f       constant
0xffff914fb2d8   120  408d2529       constant
0xffff914fb2dc   124  00000000       constant
0xffff914fb2e0   128  408eb431       constant
0xffff914fb2e4   132  00000000       constant
0xffff914fb2e8   136  408d4401       constant
0xffff914fb2ec   140  00000000       constant
0xffff914fb2f0   144  9143cea0       constant
0xffff914fb2f4   148  0000ffff       constant
0xffff914fb2f8   152  408d4401       constant
0xffff914fb2fc   156  00000000       constant
0xffff914fb300   160  91422420       constant
0xffff914fb304   164  0000ffff       constant


RelocInfo (size = 12)
0xffff914fb270  embedded object  (0x408d2529 Cell for 0)
0xffff914fb280  embedded object  (0x408eb431 WeakCell for 0x36440b61 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fb2ac  embedded object  (0x408d4401 <String[10]: _socketEnd>)
0xffff914fb2b0  code target (HANDLER)  (0xffff9143cea0)
0xffff914fb2b8  embedded object  (0x408d4401 <String[10]: _socketEnd>)
0xffff914fb2c4  code target (BUILTIN)  (0xffff91422420)
0xffff914fb2cc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 184)
0xffff914fb6e0     0  ldur x4, [x1, #15]
0xffff914fb6e4     4  ldur w5, [x1, #27]
0xffff914fb6e8     8  tbnz w2, #0, #+0x24 (addr 0xffff914fb70c)
0xffff914fb6ec    12  asr x7, x2, #32
0xffff914fb6f0    16  cmp w7, w5
0xffff914fb6f4    20  b.hs #+0x40 (addr 0xffff914fb734)
0xffff914fb6f8    24  add x5, x4, #0xf (15)
0xffff914fb6fc    28  ldr x6, [x5, w7, sxtw #3]
0xffff914fb700    32  tbnz w6, #0, #+0x44 (addr 0xffff914fb744)
0xffff914fb704    36  mov x0, x6
0xffff914fb708    40  ret
0xffff914fb70c    44  ldur x16, [x2, #-1]
0xffff914fb710    48  ldr x17, [x26, #120]
0xffff914fb714    52  cmp x16, x17
0xffff914fb718    56  b.ne #+0x3c (addr 0xffff914fb754)
0xffff914fb71c    60  ldur d29, [x2, #7]
0xffff914fb720    64  fcvtzs w7, d29
0xffff914fb724    68  scvtf d0, w7
0xffff914fb728    72  fcmp d29, d0
0xffff914fb72c    76  b.ne #+0x28 (addr 0xffff914fb754)
0xffff914fb730    80  b #-0x40 (addr 0xffff914fb6f0)
0xffff914fb734    84  movz x16, #0x0
0xffff914fb738    88  sub csp, jssp, #0x10 (16)
0xffff914fb73c    92  stp fp, lr, [jssp, #-16]!
0xffff914fb740    96  bl #+0x24 (addr 0xffff914fb764)
0xffff914fb744   100  movz x16, #0x8
0xffff914fb748   104  sub csp, jssp, #0x10 (16)
0xffff914fb74c   108  stp fp, lr, [jssp, #-16]!
0xffff914fb750   112  bl #+0x14 (addr 0xffff914fb764)
0xffff914fb754   116  movz x16, #0x10
0xffff914fb758   120  sub csp, jssp, #0x10 (16)
0xffff914fb75c   124  stp fp, lr, [jssp, #-16]!
0xffff914fb760   128  bl #+0x4 (addr 0xffff914fb764)
0xffff914fb764   132  movz x17, #0xa00000000
0xffff914fb768   136  sub csp, jssp, #0x10 (16)
0xffff914fb76c   140  stp x17, cp, [jssp, #-16]!
0xffff914fb770   144  add fp, jssp, #0x10 (16)
0xffff914fb774   148  ldr x17, pc+20 (addr 0x0000ffff914fb788)    ;; lazy deoptimization bailout 0
0xffff914fb778   152  add x17, x17, x16
0xffff914fb77c   156  br x17
0xffff914fb780   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914fb784   164  d63f03e0       constant
0xffff914fb788   168  91206000       constant
0xffff914fb78c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914fb774  runtime entry
0xffff914fb780  constant pool (size 16)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 184)
0xffff914fb6e0     0  ldur x4, [x1, #15]
0xffff914fb6e4     4  ldur w5, [x1, #27]
0xffff914fb6e8     8  tbnz w2, #0, #+0x24 (addr 0xffff914fb70c)
0xffff914fb6ec    12  asr x7, x2, #32
0xffff914fb6f0    16  cmp w7, w5
0xffff914fb6f4    20  b.hs #+0x40 (addr 0xffff914fb734)
0xffff914fb6f8    24  add x5, x4, #0xf (15)
0xffff914fb6fc    28  ldr x6, [x5, w7, sxtw #3]
0xffff914fb700    32  tbnz w6, #0, #+0x44 (addr 0xffff914fb744)
0xffff914fb704    36  mov x0, x6
0xffff914fb708    40  ret
0xffff914fb70c    44  ldur x16, [x2, #-1]
0xffff914fb710    48  ldr x17, [x26, #120]
0xffff914fb714    52  cmp x16, x17
0xffff914fb718    56  b.ne #+0x3c (addr 0xffff914fb754)
0xffff914fb71c    60  ldur d29, [x2, #7]
0xffff914fb720    64  fcvtzs w7, d29
0xffff914fb724    68  scvtf d0, w7
0xffff914fb728    72  fcmp d29, d0
0xffff914fb72c    76  b.ne #+0x28 (addr 0xffff914fb754)
0xffff914fb730    80  b #-0x40 (addr 0xffff914fb6f0)
0xffff914fb734    84  movz x16, #0x0
0xffff914fb738    88  sub csp, jssp, #0x10 (16)
0xffff914fb73c    92  stp fp, lr, [jssp, #-16]!
0xffff914fb740    96  bl #+0x24 (addr 0xffff914fb764)
0xffff914fb744   100  movz x16, #0x8
0xffff914fb748   104  sub csp, jssp, #0x10 (16)
0xffff914fb74c   108  stp fp, lr, [jssp, #-16]!
0xffff914fb750   112  bl #+0x14 (addr 0xffff914fb764)
0xffff914fb754   116  movz x16, #0x10
0xffff914fb758   120  sub csp, jssp, #0x10 (16)
0xffff914fb75c   124  stp fp, lr, [jssp, #-16]!
0xffff914fb760   128  bl #+0x4 (addr 0xffff914fb764)
0xffff914fb764   132  movz x17, #0xa00000000
0xffff914fb768   136  sub csp, jssp, #0x10 (16)
0xffff914fb76c   140  stp x17, cp, [jssp, #-16]!
0xffff914fb770   144  add fp, jssp, #0x10 (16)
0xffff914fb774   148  ldr x17, pc+20 (addr 0x0000ffff914fb788)    ;; lazy deoptimization bailout 0
0xffff914fb778   152  add x17, x17, x16
0xffff914fb77c   156  br x17
0xffff914fb780   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff914fb784   164  d63f03e0       constant
0xffff914fb788   168  91206000       constant
0xffff914fb78c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff914fb774  runtime entry
0xffff914fb780  constant pool (size 16)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff914fb800     0  mov x6, x0
0xffff914fb804     4  tbnz w6, #0, #+0x5c (addr 0xffff914fb860)
0xffff914fb808     8  ldur x3, [x1, #7]
0xffff914fb80c    12  stur x6, [x3, #143]
0xffff914fb810    16  stur x5, [x1, #-1]
0xffff914fb814    20  tbz w5, #0, #+0x34 (addr 0xffff914fb848)
0xffff914fb818    24  sub x2, x1, #0x1 (1)
0xffff914fb81c    28  and x5, x5, #0xfffffffffff00000
0xffff914fb820    32  ldr x5, [x5, #8]
0xffff914fb824    36  tbz w5, #1, #+0x24 (addr 0xffff914fb848)
0xffff914fb828    40  and x5, x1, #0xfffffffffff00000
0xffff914fb82c    44  ldr x5, [x5, #8]
0xffff914fb830    48  tbz w5, #2, #+0x18 (addr 0xffff914fb848)
0xffff914fb834    52  sub csp, jssp, #0x8 (8)
0xffff914fb838    56  str lr, [jssp, #-8]!
0xffff914fb83c    60  ldr x16, pc+28 (addr 0x0000ffff914fb858)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914fb840    64  blr x16
0xffff914fb844    68  ldr lr, [jssp], #8
0xffff914fb848    72  ret
0xffff914fb84c    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914fb850    80  d63f03e0       constant
0xffff914fb854    84  d503201f       constant
0xffff914fb858    88  91438080       constant
0xffff914fb85c    92  0000ffff       constant
0xffff914fb860    96  movz x16, #0x0
0xffff914fb864   100  sub csp, jssp, #0x10 (16)
0xffff914fb868   104  stp fp, lr, [jssp, #-16]!
0xffff914fb86c   108  bl #+0x4 (addr 0xffff914fb870)
0xffff914fb870   112  movz x17, #0xa00000000
0xffff914fb874   116  sub csp, jssp, #0x10 (16)
0xffff914fb878   120  stp x17, cp, [jssp, #-16]!
0xffff914fb87c   124  add fp, jssp, #0x10 (16)
0xffff914fb880   128  ldr x17, pc+24 (addr 0x0000ffff914fb898)    ;; lazy deoptimization bailout 0
0xffff914fb884   132  add x17, x17, x16
0xffff914fb888   136  br x17
0xffff914fb88c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914fb890   144  d63f03e0       constant
0xffff914fb894   148  d503201f       constant
0xffff914fb898   152  91206000       constant
0xffff914fb89c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914fb83c  code target (STUB)  (0xffff91438080)
0xffff914fb84c  constant pool (size 20)
0xffff914fb880  runtime entry
0xffff914fb88c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff914fb800     0  mov x6, x0
0xffff914fb804     4  tbnz w6, #0, #+0x5c (addr 0xffff914fb860)
0xffff914fb808     8  ldur x3, [x1, #7]
0xffff914fb80c    12  stur x6, [x3, #143]
0xffff914fb810    16  stur x5, [x1, #-1]
0xffff914fb814    20  tbz w5, #0, #+0x34 (addr 0xffff914fb848)
0xffff914fb818    24  sub x2, x1, #0x1 (1)
0xffff914fb81c    28  and x5, x5, #0xfffffffffff00000
0xffff914fb820    32  ldr x5, [x5, #8]
0xffff914fb824    36  tbz w5, #1, #+0x24 (addr 0xffff914fb848)
0xffff914fb828    40  and x5, x1, #0xfffffffffff00000
0xffff914fb82c    44  ldr x5, [x5, #8]
0xffff914fb830    48  tbz w5, #2, #+0x18 (addr 0xffff914fb848)
0xffff914fb834    52  sub csp, jssp, #0x8 (8)
0xffff914fb838    56  str lr, [jssp, #-8]!
0xffff914fb83c    60  ldr x16, pc+28 (addr 0x0000ffff914fb858)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914fb840    64  blr x16
0xffff914fb844    68  ldr lr, [jssp], #8
0xffff914fb848    72  ret
0xffff914fb84c    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914fb850    80  d63f03e0       constant
0xffff914fb854    84  d503201f       constant
0xffff914fb858    88  91438080       constant
0xffff914fb85c    92  0000ffff       constant
0xffff914fb860    96  movz x16, #0x0
0xffff914fb864   100  sub csp, jssp, #0x10 (16)
0xffff914fb868   104  stp fp, lr, [jssp, #-16]!
0xffff914fb86c   108  bl #+0x4 (addr 0xffff914fb870)
0xffff914fb870   112  movz x17, #0xa00000000
0xffff914fb874   116  sub csp, jssp, #0x10 (16)
0xffff914fb878   120  stp x17, cp, [jssp, #-16]!
0xffff914fb87c   124  add fp, jssp, #0x10 (16)
0xffff914fb880   128  ldr x17, pc+24 (addr 0x0000ffff914fb898)    ;; lazy deoptimization bailout 0
0xffff914fb884   132  add x17, x17, x16
0xffff914fb888   136  br x17
0xffff914fb88c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914fb890   144  d63f03e0       constant
0xffff914fb894   148  d503201f       constant
0xffff914fb898   152  91206000       constant
0xffff914fb89c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff914fb83c  code target (STUB)  (0xffff91438080)
0xffff914fb84c  constant pool (size 20)
0xffff914fb880  runtime entry
0xffff914fb88c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = fd
compiler = unknown
Instructions (size = 152)
0xffff914fb920     0  sub csp, jssp, #0x8 (8)
0xffff914fb924     4  str x3, [jssp, #-8]!
0xffff914fb928     8  sub csp, jssp, #0x8 (8)
0xffff914fb92c    12  str x4, [jssp, #-8]!
0xffff914fb930    16  ldr x3, pc+88 (addr 0x0000ffff914fb988)    ;; object: 0x408e95a9 Cell for 0
0xffff914fb934    20  ldur x3, [x3, #7]
0xffff914fb938    24  cmp x3, #0x0 (0)
0xffff914fb93c    28  b.ne #+0x2c (addr 0xffff914fb968)
0xffff914fb940    32  ldr x5, pc+80 (addr 0x0000ffff914fb990)    ;; object: 0x408eb961 WeakCell for 0x36441089 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fb944    36  ldur x5, [x5, #7]
0xffff914fb948    40  tbz w5, #0, #+0x20 (addr 0xffff914fb968)
0xffff914fb94c    44  ldursw x4, [x5, #15]
0xffff914fb950    48  tbnz w4, #23, #+0x18 (addr 0xffff914fb968)
0xffff914fb954    52  ldr x4, [jssp], #8
0xffff914fb958    56  ldr x3, [jssp], #8
0xffff914fb95c    60  ldr x2, pc+60 (addr 0x0000ffff914fb998)    ;; object: 0x49bb2709 <String[2]: fd>
0xffff914fb960    64  ldr x16, pc+64 (addr 0x0000ffff914fb9a0)    ;; code: HANDLER, StoreTransitionStub, minor: 172050
0xffff914fb964    68  br x16
0xffff914fb968    72  ldr x2, pc+64 (addr 0x0000ffff914fb9a8)    ;; object: 0x49bb2709 <String[2]: fd>
0xffff914fb96c    76  ldr x4, [jssp], #8
0xffff914fb970    80  ldr x3, [jssp], #8
0xffff914fb974    84  ldr x16, pc+60 (addr 0x0000ffff914fb9b0)    ;; code: BUILTIN
0xffff914fb978    88  br x16
0xffff914fb97c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff914fb980    96  d63f03e0       constant
0xffff914fb984   100  d503201f       constant
0xffff914fb988   104  408e95a9       constant
0xffff914fb98c   108  00000000       constant
0xffff914fb990   112  408eb961       constant
0xffff914fb994   116  00000000       constant
0xffff914fb998   120  49bb2709       constant
0xffff914fb99c   124  00000000       constant
0xffff914fb9a0   128  914fb800       constant
0xffff914fb9a4   132  0000ffff       constant
0xffff914fb9a8   136  49bb2709       constant
0xffff914fb9ac   140  00000000       constant
0xffff914fb9b0   144  91422420       constant
0xffff914fb9b4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914fb930  embedded object  (0x408e95a9 Cell for 0)
0xffff914fb940  embedded object  (0x408eb961 WeakCell for 0x36441089 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fb95c  embedded object  (0x49bb2709 <String[2]: fd>)
0xffff914fb960  code target (HANDLER)  (0xffff914fb800)
0xffff914fb968  embedded object  (0x49bb2709 <String[2]: fd>)
0xffff914fb974  code target (BUILTIN)  (0xffff91422420)
0xffff914fb97c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914fba20     0  tbz w0, #0, #+0x98 (addr 0xffff914fbab8)
0xffff914fba24     4  mov x2, x0
0xffff914fba28     8  ldur x4, [x1, #7]
0xffff914fba2c    12  stur x2, [x4, #151]
0xffff914fba30    16  add x3, x4, #0x97 (151)
0xffff914fba34    20  and x2, x2, #0xfffffffffff00000
0xffff914fba38    24  ldr x2, [x2, #8]
0xffff914fba3c    28  tbz w2, #1, #+0x24 (addr 0xffff914fba60)
0xffff914fba40    32  and x2, x4, #0xfffffffffff00000
0xffff914fba44    36  ldr x2, [x2, #8]
0xffff914fba48    40  tbz w2, #2, #+0x18 (addr 0xffff914fba60)
0xffff914fba4c    44  sub csp, jssp, #0x8 (8)
0xffff914fba50    48  str lr, [jssp, #-8]!
0xffff914fba54    52  ldr x16, pc+84 (addr 0x0000ffff914fbaa8)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914fba58    56  blr x16
0xffff914fba5c    60  ldr lr, [jssp], #8
0xffff914fba60    64  stur x5, [x1, #-1]
0xffff914fba64    68  tbz w5, #0, #+0x34 (addr 0xffff914fba98)
0xffff914fba68    72  sub x2, x1, #0x1 (1)
0xffff914fba6c    76  and x5, x5, #0xfffffffffff00000
0xffff914fba70    80  ldr x5, [x5, #8]
0xffff914fba74    84  tbz w5, #1, #+0x24 (addr 0xffff914fba98)
0xffff914fba78    88  and x5, x1, #0xfffffffffff00000
0xffff914fba7c    92  ldr x5, [x5, #8]
0xffff914fba80    96  tbz w5, #2, #+0x18 (addr 0xffff914fba98)
0xffff914fba84   100  sub csp, jssp, #0x8 (8)
0xffff914fba88   104  str lr, [jssp, #-8]!
0xffff914fba8c   108  ldr x16, pc+36 (addr 0x0000ffff914fbab0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914fba90   112  blr x16
0xffff914fba94   116  ldr lr, [jssp], #8
0xffff914fba98   120  ret
0xffff914fba9c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914fbaa0   128  d63f03e0       constant
0xffff914fbaa4   132  d503201f       constant
0xffff914fbaa8   136  914378a0       constant
0xffff914fbaac   140  0000ffff       constant
0xffff914fbab0   144  91438080       constant
0xffff914fbab4   148  0000ffff       constant
0xffff914fbab8   152  movz x16, #0x0
0xffff914fbabc   156  sub csp, jssp, #0x10 (16)
0xffff914fbac0   160  stp fp, lr, [jssp, #-16]!
0xffff914fbac4   164  bl #+0x4 (addr 0xffff914fbac8)
0xffff914fbac8   168  movz x17, #0xa00000000
0xffff914fbacc   172  sub csp, jssp, #0x10 (16)
0xffff914fbad0   176  stp x17, cp, [jssp, #-16]!
0xffff914fbad4   180  add fp, jssp, #0x10 (16)
0xffff914fbad8   184  ldr x17, pc+24 (addr 0x0000ffff914fbaf0)    ;; lazy deoptimization bailout 0
0xffff914fbadc   188  add x17, x17, x16
0xffff914fbae0   192  br x17
0xffff914fbae4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914fbae8   200  d63f03e0       constant
0xffff914fbaec   204  d503201f       constant
0xffff914fbaf0   208  91206000       constant
0xffff914fbaf4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914fba54  code target (STUB)  (0xffff914378a0)
0xffff914fba8c  code target (STUB)  (0xffff91438080)
0xffff914fba9c  constant pool (size 28)
0xffff914fbad8  runtime entry
0xffff914fbae4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff914fba20     0  tbz w0, #0, #+0x98 (addr 0xffff914fbab8)
0xffff914fba24     4  mov x2, x0
0xffff914fba28     8  ldur x4, [x1, #7]
0xffff914fba2c    12  stur x2, [x4, #151]
0xffff914fba30    16  add x3, x4, #0x97 (151)
0xffff914fba34    20  and x2, x2, #0xfffffffffff00000
0xffff914fba38    24  ldr x2, [x2, #8]
0xffff914fba3c    28  tbz w2, #1, #+0x24 (addr 0xffff914fba60)
0xffff914fba40    32  and x2, x4, #0xfffffffffff00000
0xffff914fba44    36  ldr x2, [x2, #8]
0xffff914fba48    40  tbz w2, #2, #+0x18 (addr 0xffff914fba60)
0xffff914fba4c    44  sub csp, jssp, #0x8 (8)
0xffff914fba50    48  str lr, [jssp, #-8]!
0xffff914fba54    52  ldr x16, pc+84 (addr 0x0000ffff914fbaa8)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff914fba58    56  blr x16
0xffff914fba5c    60  ldr lr, [jssp], #8
0xffff914fba60    64  stur x5, [x1, #-1]
0xffff914fba64    68  tbz w5, #0, #+0x34 (addr 0xffff914fba98)
0xffff914fba68    72  sub x2, x1, #0x1 (1)
0xffff914fba6c    76  and x5, x5, #0xfffffffffff00000
0xffff914fba70    80  ldr x5, [x5, #8]
0xffff914fba74    84  tbz w5, #1, #+0x24 (addr 0xffff914fba98)
0xffff914fba78    88  and x5, x1, #0xfffffffffff00000
0xffff914fba7c    92  ldr x5, [x5, #8]
0xffff914fba80    96  tbz w5, #2, #+0x18 (addr 0xffff914fba98)
0xffff914fba84   100  sub csp, jssp, #0x8 (8)
0xffff914fba88   104  str lr, [jssp, #-8]!
0xffff914fba8c   108  ldr x16, pc+36 (addr 0x0000ffff914fbab0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff914fba90   112  blr x16
0xffff914fba94   116  ldr lr, [jssp], #8
0xffff914fba98   120  ret
0xffff914fba9c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff914fbaa0   128  d63f03e0       constant
0xffff914fbaa4   132  d503201f       constant
0xffff914fbaa8   136  914378a0       constant
0xffff914fbaac   140  0000ffff       constant
0xffff914fbab0   144  91438080       constant
0xffff914fbab4   148  0000ffff       constant
0xffff914fbab8   152  movz x16, #0x0
0xffff914fbabc   156  sub csp, jssp, #0x10 (16)
0xffff914fbac0   160  stp fp, lr, [jssp, #-16]!
0xffff914fbac4   164  bl #+0x4 (addr 0xffff914fbac8)
0xffff914fbac8   168  movz x17, #0xa00000000
0xffff914fbacc   172  sub csp, jssp, #0x10 (16)
0xffff914fbad0   176  stp x17, cp, [jssp, #-16]!
0xffff914fbad4   180  add fp, jssp, #0x10 (16)
0xffff914fbad8   184  ldr x17, pc+24 (addr 0x0000ffff914fbaf0)    ;; lazy deoptimization bailout 0
0xffff914fbadc   188  add x17, x17, x16
0xffff914fbae0   192  br x17
0xffff914fbae4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914fbae8   200  d63f03e0       constant
0xffff914fbaec   204  d503201f       constant
0xffff914fbaf0   208  91206000       constant
0xffff914fbaf4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff914fba54  code target (STUB)  (0xffff914378a0)
0xffff914fba8c  code target (STUB)  (0xffff91438080)
0xffff914fba9c  constant pool (size 28)
0xffff914fbad8  runtime entry
0xffff914fbae4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = _isStdio
compiler = unknown
Instructions (size = 152)
0xffff914fbb60     0  sub csp, jssp, #0x8 (8)
0xffff914fbb64     4  str x3, [jssp, #-8]!
0xffff914fbb68     8  sub csp, jssp, #0x8 (8)
0xffff914fbb6c    12  str x4, [jssp, #-8]!
0xffff914fbb70    16  ldr x3, pc+88 (addr 0x0000ffff914fbbc8)    ;; object: 0x408e95a9 Cell for 0
0xffff914fbb74    20  ldur x3, [x3, #7]
0xffff914fbb78    24  cmp x3, #0x0 (0)
0xffff914fbb7c    28  b.ne #+0x30 (addr 0xffff914fbbac)
0xffff914fbb80    32  tbz w0, #0, #+0x2c (addr 0xffff914fbbac)
0xffff914fbb84    36  ldr x5, pc+76 (addr 0x0000ffff914fbbd0)    ;; object: 0x408eba51 WeakCell for 0x364410e1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fbb88    40  ldur x5, [x5, #7]
0xffff914fbb8c    44  tbz w5, #0, #+0x20 (addr 0xffff914fbbac)
0xffff914fbb90    48  ldursw x4, [x5, #15]
0xffff914fbb94    52  tbnz w4, #23, #+0x18 (addr 0xffff914fbbac)
0xffff914fbb98    56  ldr x4, [jssp], #8
0xffff914fbb9c    60  ldr x3, [jssp], #8
0xffff914fbba0    64  ldr x2, pc+56 (addr 0x0000ffff914fbbd8)    ;; object: 0x49bf94b1 <String[8]: _isStdio>
0xffff914fbba4    68  ldr x16, pc+60 (addr 0x0000ffff914fbbe0)    ;; code: HANDLER, StoreTransitionStub, minor: 196627
0xffff914fbba8    72  br x16
0xffff914fbbac    76  ldr x2, pc+60 (addr 0x0000ffff914fbbe8)    ;; object: 0x49bf94b1 <String[8]: _isStdio>
0xffff914fbbb0    80  ldr x4, [jssp], #8
0xffff914fbbb4    84  ldr x3, [jssp], #8
0xffff914fbbb8    88  ldr x16, pc+56 (addr 0x0000ffff914fbbf0)    ;; code: BUILTIN
0xffff914fbbbc    92  br x16
0xffff914fbbc0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff914fbbc4   100  d63f03e0       constant
0xffff914fbbc8   104  408e95a9       constant
0xffff914fbbcc   108  00000000       constant
0xffff914fbbd0   112  408eba51       constant
0xffff914fbbd4   116  00000000       constant
0xffff914fbbd8   120  49bf94b1       constant
0xffff914fbbdc   124  00000000       constant
0xffff914fbbe0   128  914fba20       constant
0xffff914fbbe4   132  0000ffff       constant
0xffff914fbbe8   136  49bf94b1       constant
0xffff914fbbec   140  00000000       constant
0xffff914fbbf0   144  91422420       constant
0xffff914fbbf4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff914fbb70  embedded object  (0x408e95a9 Cell for 0)
0xffff914fbb84  embedded object  (0x408eba51 WeakCell for 0x364410e1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fbba0  embedded object  (0x49bf94b1 <String[8]: _isStdio>)
0xffff914fbba4  code target (HANDLER)  (0xffff914fba20)
0xffff914fbbac  embedded object  (0x49bf94b1 <String[8]: _isStdio>)
0xffff914fbbb8  code target (BUILTIN)  (0xffff91422420)
0xffff914fbbc0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = emit
compiler = unknown
Instructions (size = 656)
0xffff914fbc60     0  sub csp, jssp, #0x8 (8)
0xffff914fbc64     4  str x3, [jssp, #-8]!
0xffff914fbc68     8  sub csp, jssp, #0x8 (8)
0xffff914fbc6c    12  str x0, [jssp, #-8]!
0xffff914fbc70    16  ldr x0, pc+560 (addr 0x0000ffff914fbea0)    ;; object: 0x49be3709 Cell for 0
0xffff914fbc74    20  ldur x0, [x0, #7]
0xffff914fbc78    24  cmp x0, #0x0 (0)
0xffff914fbc7c    28  b.ne #+0x1f8 (addr 0xffff914fbe74)
0xffff914fbc80    32  ldur x4, [x1, #-1]
0xffff914fbc84    36  ldrb w0, [x4, #12]
0xffff914fbc88    40  movz x16, #0x44
0xffff914fbc8c    44  tst x0, x16
0xffff914fbc90    48  b.ne #+0x1e4 (addr 0xffff914fbe74)
0xffff914fbc94    52  ldrb w0, [x4, #11]
0xffff914fbc98    56  cmp x0, #0xb1 (177)
0xffff914fbc9c    60  b.lt #+0x1d8 (addr 0xffff914fbe74)
0xffff914fbca0    64  ldur x0, [x1, #7]
0xffff914fbca4    68  ldur x4, [x0, #-1]
0xffff914fbca8    72  ldr x16, [x26, #432]
0xffff914fbcac    76  cmp x4, x16
0xffff914fbcb0    80  b.ne #+0x1c4 (addr 0xffff914fbe74)
0xffff914fbcb4    84  ldursw x4, [x0, #35]
0xffff914fbcb8    88  sub x4, x4, #0x1 (1)
0xffff914fbcbc    92  movz x16, #0x9e7
0xffff914fbcc0    96  movk x16, #0x3643, lsl #16
0xffff914fbcc4   100  and x4, x4, x16
0xffff914fbcc8   104  add x4, x4, x4, lsl #1
0xffff914fbccc   108  add x4, x0, x4, lsl #3
0xffff914fbcd0   112  ldur x4, [x4, #55]
0xffff914fbcd4   116  ldr x16, [x26, #40]
0xffff914fbcd8   120  cmp x4, x16
0xffff914fbcdc   124  b.eq #+0x188 (addr 0xffff914fbe64)
0xffff914fbce0   128  ldr x16, pc+456 (addr 0x0000ffff914fbea8)    ;; object: 0x49bba409 <String[4]: emit>
0xffff914fbce4   132  cmp x4, x16
0xffff914fbce8   136  b.eq #+0x18c (addr 0xffff914fbe74)
0xffff914fbcec   140  ldr x16, [x26, #88]
0xffff914fbcf0   144  cmp x4, x16
0xffff914fbcf4   148  b.eq #+0x1c (addr 0xffff914fbd10)
0xffff914fbcf8   152  ldur x4, [x4, #-1]
0xffff914fbcfc   156  ldrb w4, [x4, #11]
0xffff914fbd00   160  tst x4, #0xc0
0xffff914fbd04   164  movz x16, #0x80
0xffff914fbd08   168  ccmp x4, x16, #nZcv, ne
0xffff914fbd0c   172  b.ne #+0x168 (addr 0xffff914fbe74)
0xffff914fbd10   176  ldursw x4, [x0, #35]
0xffff914fbd14   180  sub x4, x4, #0x1 (1)
0xffff914fbd18   184  movz x16, #0x9e8
0xffff914fbd1c   188  movk x16, #0x3643, lsl #16
0xffff914fbd20   192  and x4, x4, x16
0xffff914fbd24   196  add x4, x4, x4, lsl #1
0xffff914fbd28   200  add x4, x0, x4, lsl #3
0xffff914fbd2c   204  ldur x4, [x4, #55]
0xffff914fbd30   208  ldr x16, [x26, #40]
0xffff914fbd34   212  cmp x4, x16
0xffff914fbd38   216  b.eq #+0x12c (addr 0xffff914fbe64)
0xffff914fbd3c   220  ldr x16, pc+372 (addr 0x0000ffff914fbeb0)    ;; object: 0x49bba409 <String[4]: emit>
0xffff914fbd40   224  cmp x4, x16
0xffff914fbd44   228  b.eq #+0x130 (addr 0xffff914fbe74)
0xffff914fbd48   232  ldr x16, [x26, #88]
0xffff914fbd4c   236  cmp x4, x16
0xffff914fbd50   240  b.eq #+0x1c (addr 0xffff914fbd6c)
0xffff914fbd54   244  ldur x4, [x4, #-1]
0xffff914fbd58   248  ldrb w4, [x4, #11]
0xffff914fbd5c   252  tst x4, #0xc0
0xffff914fbd60   256  movz x16, #0x80
0xffff914fbd64   260  ccmp x4, x16, #nZcv, ne
0xffff914fbd68   264  b.ne #+0x10c (addr 0xffff914fbe74)
0xffff914fbd6c   268  ldursw x4, [x0, #35]
0xffff914fbd70   272  sub x4, x4, #0x1 (1)
0xffff914fbd74   276  movz x16, #0x9ea
0xffff914fbd78   280  movk x16, #0x3643, lsl #16
0xffff914fbd7c   284  and x4, x4, x16
0xffff914fbd80   288  add x4, x4, x4, lsl #1
0xffff914fbd84   292  add x4, x0, x4, lsl #3
0xffff914fbd88   296  ldur x4, [x4, #55]
0xffff914fbd8c   300  ldr x16, [x26, #40]
0xffff914fbd90   304  cmp x4, x16
0xffff914fbd94   308  b.eq #+0xd0 (addr 0xffff914fbe64)
0xffff914fbd98   312  ldr x16, pc+288 (addr 0x0000ffff914fbeb8)    ;; object: 0x49bba409 <String[4]: emit>
0xffff914fbd9c   316  cmp x4, x16
0xffff914fbda0   320  b.eq #+0xd4 (addr 0xffff914fbe74)
0xffff914fbda4   324  ldr x16, [x26, #88]
0xffff914fbda8   328  cmp x4, x16
0xffff914fbdac   332  b.eq #+0x1c (addr 0xffff914fbdc8)
0xffff914fbdb0   336  ldur x4, [x4, #-1]
0xffff914fbdb4   340  ldrb w4, [x4, #11]
0xffff914fbdb8   344  tst x4, #0xc0
0xffff914fbdbc   348  movz x16, #0x80
0xffff914fbdc0   352  ccmp x4, x16, #nZcv, ne
0xffff914fbdc4   356  b.ne #+0xb0 (addr 0xffff914fbe74)
0xffff914fbdc8   360  ldursw x4, [x0, #35]
0xffff914fbdcc   364  sub x4, x4, #0x1 (1)
0xffff914fbdd0   368  movz x16, #0x9ed
0xffff914fbdd4   372  movk x16, #0x3643, lsl #16
0xffff914fbdd8   376  and x4, x4, x16
0xffff914fbddc   380  add x4, x4, x4, lsl #1
0xffff914fbde0   384  add x4, x0, x4, lsl #3
0xffff914fbde4   388  ldur x4, [x4, #55]
0xffff914fbde8   392  ldr x16, [x26, #40]
0xffff914fbdec   396  cmp x4, x16
0xffff914fbdf0   400  b.eq #+0x74 (addr 0xffff914fbe64)
0xffff914fbdf4   404  ldr x16, pc+204 (addr 0x0000ffff914fbec0)    ;; object: 0x49bba409 <String[4]: emit>
0xffff914fbdf8   408  cmp x4, x16
0xffff914fbdfc   412  b.eq #+0x78 (addr 0xffff914fbe74)
0xffff914fbe00   416  ldr x16, [x26, #88]
0xffff914fbe04   420  cmp x4, x16
0xffff914fbe08   424  b.eq #+0x1c (addr 0xffff914fbe24)
0xffff914fbe0c   428  ldur x4, [x4, #-1]
0xffff914fbe10   432  ldrb w4, [x4, #11]
0xffff914fbe14   436  tst x4, #0xc0
0xffff914fbe18   440  movz x16, #0x80
0xffff914fbe1c   444  ccmp x4, x16, #nZcv, ne
0xffff914fbe20   448  b.ne #+0x54 (addr 0xffff914fbe74)
0xffff914fbe24   452  sub csp, jssp, #0x38 (56)
0xffff914fbe28   456  stp x3, x5, [jssp, #-32]!
0xffff914fbe2c   460  stp x6, lr, [jssp, #16]
0xffff914fbe30   464  stp x0, x1, [jssp, #-24]!
0xffff914fbe34   468  str x2, [jssp, #16]
0xffff914fbe38   472  ldur x0, [x1, #7]
0xffff914fbe3c   476  ldr x1, pc+140 (addr 0x0000ffff914fbec8)    ;; object: 0x49bba409 <String[4]: emit>
0xffff914fbe40   480  ldr x16, pc+144 (addr 0x0000ffff914fbed0)    ;; code: STUB, NameDictionaryLookupStub, minor: 1
0xffff914fbe44   484  blr x16
0xffff914fbe48   488  mov x4, x0
0xffff914fbe4c   492  ldp x2, x3, [jssp, #16]
0xffff914fbe50   496  ldp x0, x1, [jssp], #32
0xffff914fbe54   500  ldr lr, [jssp, #16]
0xffff914fbe58   504  ldp x5, x6, [jssp], #24
0xffff914fbe5c   508  cbz x4, #+0x8 (addr 0xffff914fbe64)
0xffff914fbe60   512  b #+0x14 (addr 0xffff914fbe74)
0xffff914fbe64   516  ldr x3, pc+116 (addr 0x0000ffff914fbed8)    ;; object: 0x408ebc51 WeakCell for 0x408acf51 <an Object with map 0x3641bf39>
0xffff914fbe68   520  ldur x3, [x3, #7]
0xffff914fbe6c   524  tbz w3, #0, #+0x8 (addr 0xffff914fbe74)
0xffff914fbe70   528  b #+0x14 (addr 0xffff914fbe84)
0xffff914fbe74   532  ldr x0, [jssp], #8
0xffff914fbe78   536  ldr x3, [jssp], #8
0xffff914fbe7c   540  ldr x16, pc+100 (addr 0x0000ffff914fbee0)    ;; code: BUILTIN
0xffff914fbe80   544  br x16
0xffff914fbe84   548  add jssp, jssp, #0x10 (16)
0xffff914fbe88   552  mov x1, x3
0xffff914fbe8c   556  ldr x16, pc+92 (addr 0x0000ffff914fbee8)    ;; code: HANDLER, LoadConstantStub, minor: 6
0xffff914fbe90   560  br x16
0xffff914fbe94   564  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff914fbe98   568  d63f03e0       constant
0xffff914fbe9c   572  d503201f       constant
0xffff914fbea0   576  49be3709       constant
0xffff914fbea4   580  00000000       constant
0xffff914fbea8   584  49bba409       constant
0xffff914fbeac   588  00000000       constant
0xffff914fbeb0   592  49bba409       constant
0xffff914fbeb4   596  00000000       constant
0xffff914fbeb8   600  49bba409       constant
0xffff914fbebc   604  00000000       constant
0xffff914fbec0   608  49bba409       constant
0xffff914fbec4   612  00000000       constant
0xffff914fbec8   616  49bba409       constant
0xffff914fbecc   620  00000000       constant
0xffff914fbed0   624  9148b120       constant
0xffff914fbed4   628  0000ffff       constant
0xffff914fbed8   632  408ebc51       constant
0xffff914fbedc   636  00000000       constant
0xffff914fbee0   640  914222e0       constant
0xffff914fbee4   644  0000ffff       constant
0xffff914fbee8   648  9148b020       constant
0xffff914fbeec   652  0000ffff       constant


RelocInfo (size = 26)
0xffff914fbc70  embedded object  (0x49be3709 Cell for 0)
0xffff914fbce0  embedded object  (0x49bba409 <String[4]: emit>)
0xffff914fbd3c  embedded object  (0x49bba409 <String[4]: emit>)
0xffff914fbd98  embedded object  (0x49bba409 <String[4]: emit>)
0xffff914fbdf4  embedded object  (0x49bba409 <String[4]: emit>)
0xffff914fbe3c  embedded object  (0x49bba409 <String[4]: emit>)
0xffff914fbe40  code target (STUB)  (0xffff9148b120)
0xffff914fbe64  embedded object  (0x408ebc51 WeakCell for 0x408acf51 <an Object with map 0x3641bf39>)
0xffff914fbe7c  code target (BUILTIN)  (0xffff914222e0)
0xffff914fbe8c  code target (HANDLER)  (0xffff9148b020)
0xffff914fbe94  constant pool (size 92)

kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 96)
0xffff914fbf60     0  sub csp, jssp, #0x8 (8)
0xffff914fbf64     4  str x3, [jssp, #-8]!
0xffff914fbf68     8  sub csp, jssp, #0x8 (8)
0xffff914fbf6c    12  str x0, [jssp, #-8]!
0xffff914fbf70    16  ldr x0, pc+56 (addr 0x0000ffff914fbfa8)    ;; object: 0x49b5b0f1 Cell for 0
0xffff914fbf74    20  ldur x0, [x0, #7]
0xffff914fbf78    24  cmp x0, #0x0 (0)
0xffff914fbf7c    28  b.ne #+0x14 (addr 0xffff914fbf90)
0xffff914fbf80    32  add jssp, jssp, #0x10 (16)
0xffff914fbf84    36  ldr x0, pc+44 (addr 0x0000ffff914fbfb0)    ;; object: 0x49b04241 <undefined>
0xffff914fbf88    40  ret
0xffff914fbf8c    44  b #+0x14 (addr 0xffff914fbfa0)
0xffff914fbf90    48  ldr x0, [jssp], #8
0xffff914fbf94    52  ldr x3, [jssp], #8
0xffff914fbf98    56  ldr x16, pc+32 (addr 0x0000ffff914fbfb8)    ;; code: BUILTIN
0xffff914fbf9c    60  br x16
0xffff914fbfa0    64  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff914fbfa4    68  d63f03e0       constant
0xffff914fbfa8    72  49b5b0f1       constant
0xffff914fbfac    76  00000000       constant
0xffff914fbfb0    80  49b04241       constant
0xffff914fbfb4    84  00000000       constant
0xffff914fbfb8    88  914222e0       constant
0xffff914fbfbc    92  0000ffff       constant


RelocInfo (size = 9)
0xffff914fbf70  embedded object  (0x49b5b0f1 Cell for 0)
0xffff914fbf84  embedded object  (0x49b04241 <undefined>)
0xffff914fbf98  code target (BUILTIN)  (0xffff914222e0)
0xffff914fbfa0  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = SIGWINCH
compiler = unknown
Instructions (size = 144)
0xffff914fc020     0  sub csp, jssp, #0x8 (8)
0xffff914fc024     4  str x3, [jssp, #-8]!
0xffff914fc028     8  sub csp, jssp, #0x8 (8)
0xffff914fc02c    12  str x4, [jssp, #-8]!
0xffff914fc030    16  ldr x5, pc+88 (addr 0x0000ffff914fc088)    ;; object: 0x408eccf9 WeakCell for 0x36441a29 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fc034    20  ldur x5, [x5, #7]
0xffff914fc038    24  tbz w5, #0, #+0x30 (addr 0xffff914fc068)
0xffff914fc03c    28  ldursw x4, [x5, #15]
0xffff914fc040    32  tbnz w4, #23, #+0x28 (addr 0xffff914fc068)
0xffff914fc044    36  ldur x4, [x5, #47]
0xffff914fc048    40  ldur x4, [x4, #119]
0xffff914fc04c    44  cmp x0, x4
0xffff914fc050    48  b.ne #+0x18 (addr 0xffff914fc068)
0xffff914fc054    52  ldr x4, [jssp], #8
0xffff914fc058    56  ldr x3, [jssp], #8
0xffff914fc05c    60  ldr x2, pc+52 (addr 0x0000ffff914fc090)    ;; object: 0x49bf9081 <String[8]: SIGWINCH>
0xffff914fc060    64  ldr x16, pc+56 (addr 0x0000ffff914fc098)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff914fc064    68  br x16
0xffff914fc068    72  ldr x2, pc+56 (addr 0x0000ffff914fc0a0)    ;; object: 0x49bf9081 <String[8]: SIGWINCH>
0xffff914fc06c    76  ldr x4, [jssp], #8
0xffff914fc070    80  ldr x3, [jssp], #8
0xffff914fc074    84  ldr x16, pc+52 (addr 0x0000ffff914fc0a8)    ;; code: BUILTIN
0xffff914fc078    88  br x16
0xffff914fc07c    92  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff914fc080    96  d63f03e0       constant
0xffff914fc084   100  d503201f       constant
0xffff914fc088   104  408eccf9       constant
0xffff914fc08c   108  00000000       constant
0xffff914fc090   112  49bf9081       constant
0xffff914fc094   116  00000000       constant
0xffff914fc098   120  9143cea0       constant
0xffff914fc09c   124  0000ffff       constant
0xffff914fc0a0   128  49bf9081       constant
0xffff914fc0a4   132  00000000       constant
0xffff914fc0a8   136  91422420       constant
0xffff914fc0ac   140  0000ffff       constant


RelocInfo (size = 11)
0xffff914fc030  embedded object  (0x408eccf9 WeakCell for 0x36441a29 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fc05c  embedded object  (0x49bf9081 <String[8]: SIGWINCH>)
0xffff914fc060  code target (HANDLER)  (0xffff9143cea0)
0xffff914fc068  embedded object  (0x49bf9081 <String[8]: SIGWINCH>)
0xffff914fc074  code target (BUILTIN)  (0xffff91422420)
0xffff914fc07c  constant pool (size 52)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 485)
0xffff914fc120     0  ldur x4, [x3, #47]
0xffff914fc124     4  tbnz w2, #0, #+0xa8 (addr 0xffff914fc1cc)
0xffff914fc128     8  asr x6, x2, #32
0xffff914fc12c    12  add x5, x4, #0x17 (23)
0xffff914fc130    16  ldr x7, [x5, w6, sxtw #3]
0xffff914fc134    20  ldr x4, pc+332 (addr 0x0000ffff914fc280)    ;; object: 0x49b04241 <undefined>
0xffff914fc138    24  cmp x7, x4
0xffff914fc13c    28  b.eq #+0x8c (addr 0xffff914fc1c8)
0xffff914fc140    32  ldur x4, [x7, #7]
0xffff914fc144    36  ldur x5, [x4, #-1]
0xffff914fc148    40  ldrb w6, [x5, #7]
0xffff914fc14c    44  cmp w6, #0x6 (6)
0xffff914fc150    48  b.ne #+0x78 (addr 0xffff914fc1c8)
0xffff914fc154    52  movz x1, #0xf2c0
0xffff914fc158    56  movk x1, #0x4117, lsl #16
0xffff914fc15c    60  ldp x2, x0, [x1]
0xffff914fc160    64  adds x16, x2, #0x40 (64)
0xffff914fc164    68  ccmp x16, x0, #nzCv, lo
0xffff914fc168    72  b.hi #+0xac (addr 0xffff914fc214)
0xffff914fc16c    76  str x16, [x1]
0xffff914fc170    80  orr x2, x2, #0x1
0xffff914fc174    84  stur x5, [x2, #-1]
0xffff914fc178    88  ldur x0, [x4, #7]
0xffff914fc17c    92  stur x0, [x2, #7]
0xffff914fc180    96  ldur x0, [x4, #15]
0xffff914fc184   100  stur x0, [x2, #15]
0xffff914fc188   104  ldur x0, [x4, #23]
0xffff914fc18c   108  stur x0, [x2, #23]
0xffff914fc190   112  ldur x0, [x4, #31]
0xffff914fc194   116  stur x0, [x2, #31]
0xffff914fc198   120  ldur x0, [x4, #39]
0xffff914fc19c   124  stur x0, [x2, #39]
0xffff914fc1a0   128  add x0, x2, #0x30 (48)
0xffff914fc1a4   132  ldr x1, pc+228 (addr 0x0000ffff914fc288)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fc1a8   136  stur x1, [x0, #-1]
0xffff914fc1ac   140  stur x7, [x0, #7]
0xffff914fc1b0   144  ldur w0, [x7, #35]
0xffff914fc1b4   148  add w0, w0, #0x1 (1)
0xffff914fc1b8   152  lsl x0, x0, #32
0xffff914fc1bc   156  stur x0, [x7, #31]
0xffff914fc1c0   160  mov x0, x2
0xffff914fc1c4   164  ret
0xffff914fc1c8   168  b #+0xe0 (addr 0xffff914fc2a8)
0xffff914fc1cc   172  sub csp, jssp, #0x10 (16)
0xffff914fc1d0   176  stp fp, lr, [jssp, #-16]!
0xffff914fc1d4   180  movz fp, #0xa00000000
0xffff914fc1d8   184  sub csp, jssp, #0x8 (8)
0xffff914fc1dc   188  str fp, [jssp, #-8]!
0xffff914fc1e0   192  add fp, jssp, #0x8 (8)
0xffff914fc1e4   196  ldur x16, [x2, #-1]
0xffff914fc1e8   200  ldr x17, [x26, #120]
0xffff914fc1ec   204  cmp x16, x17
0xffff914fc1f0   208  b.ne #+0xc8 (addr 0xffff914fc2b8)
0xffff914fc1f4   212  ldur d29, [x2, #7]
0xffff914fc1f8   216  fcvtzs w6, d29
0xffff914fc1fc   220  scvtf d0, w6
0xffff914fc200   224  fcmp d29, d0
0xffff914fc204   228  b.ne #+0xb4 (addr 0xffff914fc2b8)
0xffff914fc208   232  ldr lr, [jssp, #16]
0xffff914fc20c   236  ldp xzr, fp, [jssp], #24
0xffff914fc210   240  b #-0xe4 (addr 0xffff914fc12c)
0xffff914fc214   244  sub csp, jssp, #0x10 (16)
0xffff914fc218   248  stp fp, lr, [jssp, #-16]!
0xffff914fc21c   252  movz fp, #0xa00000000
0xffff914fc220   256  sub csp, jssp, #0x8 (8)
0xffff914fc224   260  str fp, [jssp, #-8]!
0xffff914fc228   264  add fp, jssp, #0x8 (8)
0xffff914fc22c   268  movz x2, #0x0
0xffff914fc230   272  mov x16, lr
0xffff914fc234   276  ldr x17, pc+92 (addr 0x0000ffff914fc290)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914fc238   280  blr x17
0xffff914fc23c   284  movz x0, #0x4000000000
0xffff914fc240   288  movz x10, #0x0
0xffff914fc244   292  sub csp, jssp, #0x10 (16)
0xffff914fc248   296  stp x10, x0, [jssp, #-16]!
0xffff914fc24c   300  movz x0, #0x2
0xffff914fc250   304  movz x1, #0x5b88
0xffff914fc254   308  movk x1, #0xe2, lsl #16
0xffff914fc258   312  ldr x16, pc+64 (addr 0x0000ffff914fc298)    ;; code: STUB, CEntryStub, minor: 5
0xffff914fc25c   316  blr x16
0xffff914fc260   320  str x0, [jssp, #16]
0xffff914fc264   324  ldr x16, pc+60 (addr 0x0000ffff914fc2a0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914fc268   328  blr x16
0xffff914fc26c   332  ldr lr, [jssp, #16]
0xffff914fc270   336  ldp xzr, fp, [jssp], #24
0xffff914fc274   340  b #-0x100 (addr 0xffff914fc174)
0xffff914fc278   344  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff914fc27c   348  d63f03e0       constant
0xffff914fc280   352  49b04241       constant
0xffff914fc284   356  00000000       constant
0xffff914fc288   360  36405d81       constant
0xffff914fc28c   364  00000000       constant
0xffff914fc290   368  91406820       constant
0xffff914fc294   372  0000ffff       constant
0xffff914fc298   376  91406260       constant
0xffff914fc29c   380  0000ffff       constant
0xffff914fc2a0   384  914068e0       constant
0xffff914fc2a4   388  0000ffff       constant
0xffff914fc2a8   392  movz x16, #0x0
0xffff914fc2ac   396  sub csp, jssp, #0x10 (16)
0xffff914fc2b0   400  stp fp, lr, [jssp, #-16]!
0xffff914fc2b4   404  bl #+0xc (addr 0xffff914fc2c0)
0xffff914fc2b8   408  movz x16, #0x8
0xffff914fc2bc   412  bl #+0x14 (addr 0xffff914fc2d0)
0xffff914fc2c0   416  movz x17, #0xa00000000
0xffff914fc2c4   420  sub csp, jssp, #0x10 (16)
0xffff914fc2c8   424  stp x17, cp, [jssp, #-16]!
0xffff914fc2cc   428  add fp, jssp, #0x10 (16)
0xffff914fc2d0   432  ldr x17, pc+24 (addr 0x0000ffff914fc2e8)    ;; lazy deoptimization bailout 0
0xffff914fc2d4   436  add x17, x17, x16
0xffff914fc2d8   440  br x17
0xffff914fc2dc   444  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914fc2e0   448  d63f03e0       constant
0xffff914fc2e4   452  d503201f       constant
0xffff914fc2e8   456  91206000       constant
0xffff914fc2ec   460  0000ffff       constant


Safepoints (size = 21)
0xffff914fc260   320  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff914fc134  embedded object  (0x49b04241 <undefined>)
0xffff914fc1a4  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fc234  code target (STUB)  (0xffff91406820)
0xffff914fc258  code target (STUB)  (0xffff91406260)
0xffff914fc264  code target (STUB)  (0xffff914068e0)
0xffff914fc278  constant pool (size 48)
0xffff914fc2d0  runtime entry
0xffff914fc2dc  constant pool (size 20)

--- End code ---
kind = STUB
major_key = FastCloneShallowObjectStub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 485)
0xffff914fc120     0  ldur x4, [x3, #47]
0xffff914fc124     4  tbnz w2, #0, #+0xa8 (addr 0xffff914fc1cc)
0xffff914fc128     8  asr x6, x2, #32
0xffff914fc12c    12  add x5, x4, #0x17 (23)
0xffff914fc130    16  ldr x7, [x5, w6, sxtw #3]
0xffff914fc134    20  ldr x4, pc+332 (addr 0x0000ffff914fc280)    ;; object: 0x49b04241 <undefined>
0xffff914fc138    24  cmp x7, x4
0xffff914fc13c    28  b.eq #+0x8c (addr 0xffff914fc1c8)
0xffff914fc140    32  ldur x4, [x7, #7]
0xffff914fc144    36  ldur x5, [x4, #-1]
0xffff914fc148    40  ldrb w6, [x5, #7]
0xffff914fc14c    44  cmp w6, #0x6 (6)
0xffff914fc150    48  b.ne #+0x78 (addr 0xffff914fc1c8)
0xffff914fc154    52  movz x1, #0xf2c0
0xffff914fc158    56  movk x1, #0x4117, lsl #16
0xffff914fc15c    60  ldp x2, x0, [x1]
0xffff914fc160    64  adds x16, x2, #0x40 (64)
0xffff914fc164    68  ccmp x16, x0, #nzCv, lo
0xffff914fc168    72  b.hi #+0xac (addr 0xffff914fc214)
0xffff914fc16c    76  str x16, [x1]
0xffff914fc170    80  orr x2, x2, #0x1
0xffff914fc174    84  stur x5, [x2, #-1]
0xffff914fc178    88  ldur x0, [x4, #7]
0xffff914fc17c    92  stur x0, [x2, #7]
0xffff914fc180    96  ldur x0, [x4, #15]
0xffff914fc184   100  stur x0, [x2, #15]
0xffff914fc188   104  ldur x0, [x4, #23]
0xffff914fc18c   108  stur x0, [x2, #23]
0xffff914fc190   112  ldur x0, [x4, #31]
0xffff914fc194   116  stur x0, [x2, #31]
0xffff914fc198   120  ldur x0, [x4, #39]
0xffff914fc19c   124  stur x0, [x2, #39]
0xffff914fc1a0   128  add x0, x2, #0x30 (48)
0xffff914fc1a4   132  ldr x1, pc+228 (addr 0x0000ffff914fc288)    ;; object: 0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fc1a8   136  stur x1, [x0, #-1]
0xffff914fc1ac   140  stur x7, [x0, #7]
0xffff914fc1b0   144  ldur w0, [x7, #35]
0xffff914fc1b4   148  add w0, w0, #0x1 (1)
0xffff914fc1b8   152  lsl x0, x0, #32
0xffff914fc1bc   156  stur x0, [x7, #31]
0xffff914fc1c0   160  mov x0, x2
0xffff914fc1c4   164  ret
0xffff914fc1c8   168  b #+0xe0 (addr 0xffff914fc2a8)
0xffff914fc1cc   172  sub csp, jssp, #0x10 (16)
0xffff914fc1d0   176  stp fp, lr, [jssp, #-16]!
0xffff914fc1d4   180  movz fp, #0xa00000000
0xffff914fc1d8   184  sub csp, jssp, #0x8 (8)
0xffff914fc1dc   188  str fp, [jssp, #-8]!
0xffff914fc1e0   192  add fp, jssp, #0x8 (8)
0xffff914fc1e4   196  ldur x16, [x2, #-1]
0xffff914fc1e8   200  ldr x17, [x26, #120]
0xffff914fc1ec   204  cmp x16, x17
0xffff914fc1f0   208  b.ne #+0xc8 (addr 0xffff914fc2b8)
0xffff914fc1f4   212  ldur d29, [x2, #7]
0xffff914fc1f8   216  fcvtzs w6, d29
0xffff914fc1fc   220  scvtf d0, w6
0xffff914fc200   224  fcmp d29, d0
0xffff914fc204   228  b.ne #+0xb4 (addr 0xffff914fc2b8)
0xffff914fc208   232  ldr lr, [jssp, #16]
0xffff914fc20c   236  ldp xzr, fp, [jssp], #24
0xffff914fc210   240  b #-0xe4 (addr 0xffff914fc12c)
0xffff914fc214   244  sub csp, jssp, #0x10 (16)
0xffff914fc218   248  stp fp, lr, [jssp, #-16]!
0xffff914fc21c   252  movz fp, #0xa00000000
0xffff914fc220   256  sub csp, jssp, #0x8 (8)
0xffff914fc224   260  str fp, [jssp, #-8]!
0xffff914fc228   264  add fp, jssp, #0x8 (8)
0xffff914fc22c   268  movz x2, #0x0
0xffff914fc230   272  mov x16, lr
0xffff914fc234   276  ldr x17, pc+92 (addr 0x0000ffff914fc290)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff914fc238   280  blr x17
0xffff914fc23c   284  movz x0, #0x4000000000
0xffff914fc240   288  movz x10, #0x0
0xffff914fc244   292  sub csp, jssp, #0x10 (16)
0xffff914fc248   296  stp x10, x0, [jssp, #-16]!
0xffff914fc24c   300  movz x0, #0x2
0xffff914fc250   304  movz x1, #0x5b88
0xffff914fc254   308  movk x1, #0xe2, lsl #16
0xffff914fc258   312  ldr x16, pc+64 (addr 0x0000ffff914fc298)    ;; code: STUB, CEntryStub, minor: 5
0xffff914fc25c   316  blr x16
0xffff914fc260   320  str x0, [jssp, #16]
0xffff914fc264   324  ldr x16, pc+60 (addr 0x0000ffff914fc2a0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff914fc268   328  blr x16
0xffff914fc26c   332  ldr lr, [jssp, #16]
0xffff914fc270   336  ldp xzr, fp, [jssp], #24
0xffff914fc274   340  b #-0x100 (addr 0xffff914fc174)
0xffff914fc278   344  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff914fc27c   348  d63f03e0       constant
0xffff914fc280   352  49b04241       constant
0xffff914fc284   356  00000000       constant
0xffff914fc288   360  36405d81       constant
0xffff914fc28c   364  00000000       constant
0xffff914fc290   368  91406820       constant
0xffff914fc294   372  0000ffff       constant
0xffff914fc298   376  91406260       constant
0xffff914fc29c   380  0000ffff       constant
0xffff914fc2a0   384  914068e0       constant
0xffff914fc2a4   388  0000ffff       constant
0xffff914fc2a8   392  movz x16, #0x0
0xffff914fc2ac   396  sub csp, jssp, #0x10 (16)
0xffff914fc2b0   400  stp fp, lr, [jssp, #-16]!
0xffff914fc2b4   404  bl #+0xc (addr 0xffff914fc2c0)
0xffff914fc2b8   408  movz x16, #0x8
0xffff914fc2bc   412  bl #+0x14 (addr 0xffff914fc2d0)
0xffff914fc2c0   416  movz x17, #0xa00000000
0xffff914fc2c4   420  sub csp, jssp, #0x10 (16)
0xffff914fc2c8   424  stp x17, cp, [jssp, #-16]!
0xffff914fc2cc   428  add fp, jssp, #0x10 (16)
0xffff914fc2d0   432  ldr x17, pc+24 (addr 0x0000ffff914fc2e8)    ;; lazy deoptimization bailout 0
0xffff914fc2d4   436  add x17, x17, x16
0xffff914fc2d8   440  br x17
0xffff914fc2dc   444  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff914fc2e0   448  d63f03e0       constant
0xffff914fc2e4   452  d503201f       constant
0xffff914fc2e8   456  91206000       constant
0xffff914fc2ec   460  0000ffff       constant


Safepoints (size = 21)
0xffff914fc260   320  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff914fc134  embedded object  (0x49b04241 <undefined>)
0xffff914fc1a4  embedded object  (0x36405d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fc234  code target (STUB)  (0xffff91406820)
0xffff914fc258  code target (STUB)  (0xffff91406260)
0xffff914fc264  code target (STUB)  (0xffff914068e0)
0xffff914fc278  constant pool (size 48)
0xffff914fc2d0  runtime entry
0xffff914fc2dc  constant pool (size 20)


kind = STUB
major_key = FastNewRestParameterStub
name = FastNewRestParameterStub
compiler = unknown
Instructions (size = 512)
0xffff914fcfc0     0  mov x2, fp
0xffff914fcfc4     4  b #+0x8 (addr 0xffff914fcfcc)
0xffff914fcfc8     8  ldr x2, [x2]
0xffff914fcfcc    12  ldur x3, [x2, #-16]
0xffff914fcfd0    16  cmp x3, x1
0xffff914fcfd4    20  b.ne #-0xc (addr 0xffff914fcfc8)
0xffff914fcfd8    24  ldr x2, [x2]
0xffff914fcfdc    28  ldur x3, [x2, #-8]
0xffff914fcfe0    32  movz x16, #0xe00000000
0xffff914fcfe4    36  cmp x3, x16
0xffff914fcfe8    40  b.ne #+0x18 (addr 0xffff914fd000)
0xffff914fcfec    44  ldursw x0, [x2, #-20]
0xffff914fcff0    48  ldur x1, [x1, #31]
0xffff914fcff4    52  ldursw x1, [x1, #99]
0xffff914fcff8    56  subs x0, x0, x1
0xffff914fcffc    60  b.gt #+0x94 (addr 0xffff914fd090)
0xffff914fd000    64  ldr x1, pc+384 (addr 0x0000ffff914fd180)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff914fd004    68  ldp x0, x2, [x1]
0xffff914fd008    72  adds x16, x0, #0x20 (32)
0xffff914fd00c    76  ccmp x16, x2, #nzCv, lo
0xffff914fd010    80  b.hi #+0x34 (addr 0xffff914fd044)
0xffff914fd014    84  str x16, [x1]
0xffff914fd018    88  orr x0, x0, #0x1
0xffff914fd01c    92  ldur x1, [cp, #39]
0xffff914fd020    96  movz x16, #0x187
0xffff914fd024   100  ldr x1, [x1, x16]
0xffff914fd028   104  stur x1, [x0, #-1]
0xffff914fd02c   108  ldr x1, [x26, #304]
0xffff914fd030   112  stur x1, [x0, #7]
0xffff914fd034   116  stur x1, [x0, #15]
0xffff914fd038   120  movz x1, #0x0
0xffff914fd03c   124  stur x1, [x0, #23]
0xffff914fd040   128  ret
0xffff914fd044   132  movz x16, #0xc00000000
0xffff914fd048   136  sub csp, jssp, #0x10 (16)
0xffff914fd04c   140  stp fp, lr, [jssp, #-16]!
0xffff914fd050   144  sub csp, jssp, #0x10 (16)
0xffff914fd054   148  str x16, [jssp, #-8]!
0xffff914fd058   152  ldr x17, pc+304 (addr 0x0000ffff914fd188)    ;; object: 0xffff914fcf61 <Code: STUB>
0xffff914fd05c   156  sub csp, jssp, #0x10 (16)
0xffff914fd060   160  str x17, [jssp, #-8]!
0xffff914fd064   164  add fp, jssp, #0x10 (16)
0xffff914fd068   168  movz x16, #0x2000000000
0xffff914fd06c   172  sub csp, jssp, #0x8 (8)
0xffff914fd070   176  str x16, [jssp, #-8]!
0xffff914fd074   180  movz x0, #0x1
0xffff914fd078   184  ldr x1, pc+280 (addr 0x0000ffff914fd190)    ;; external reference (Runtime::AllocateInNewSpace)
0xffff914fd07c   188  ldr x16, pc+284 (addr 0x0000ffff914fd198)    ;; code: STUB, CEntryStub, minor: 4
0xffff914fd080   192  blr x16
0xffff914fd084   196  mov jssp, fp
0xffff914fd088   200  ldp fp, lr, [jssp], #16
0xffff914fd08c   204  b #-0x70 (addr 0xffff914fd01c)
0xffff914fd090   208  add x2, x2, x0, lsl #3
0xffff914fd094   212  add x2, x2, #0x8 (8)
0xffff914fd098   216  movz x1, #0x30
0xffff914fd09c   220  add x1, x1, x0, lsl #3
0xffff914fd0a0   224  ldr x5, pc+256 (addr 0x0000ffff914fd1a0)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff914fd0a4   228  ldp x3, x16, [x5]
0xffff914fd0a8   232  adds x4, x3, x1
0xffff914fd0ac   236  ccmp x4, x16, #nzCv, lo
0xffff914fd0b0   240  b.hi #+0x64 (addr 0xffff914fd114)
0xffff914fd0b4   244  str x4, [x5]
0xffff914fd0b8   248  orr x3, x3, #0x1
0xffff914fd0bc   252  lsl x6, x0, #32
0xffff914fd0c0   256  ldr x1, [x26, #224]
0xffff914fd0c4   260  stur x1, [x3, #-1]
0xffff914fd0c8   264  stur x6, [x3, #7]
0xffff914fd0cc   268  add x4, x3, #0x10 (16)
0xffff914fd0d0   272  add x0, x4, x0, lsl #3
0xffff914fd0d4   276  cmp x4, x0
0xffff914fd0d8   280  b.eq #+0x18 (addr 0xffff914fd0f0)
0xffff914fd0dc   284  ldr x5, [x2]
0xffff914fd0e0   288  stur x5, [x4, #-1]
0xffff914fd0e4   292  sub x2, x2, #0x8 (8)
0xffff914fd0e8   296  add x4, x4, #0x8 (8)
0xffff914fd0ec   300  b #-0x18 (addr 0xffff914fd0d4)
0xffff914fd0f0   304  ldur x1, [cp, #39]
0xffff914fd0f4   308  movz x16, #0x187
0xffff914fd0f8   312  ldr x1, [x1, x16]
0xffff914fd0fc   316  stur x1, [x0, #-1]
0xffff914fd100   320  ldr x1, [x26, #304]
0xffff914fd104   324  stur x1, [x0, #7]
0xffff914fd108   328  stur x3, [x0, #15]
0xffff914fd10c   332  stur x6, [x0, #23]
0xffff914fd110   336  ret
0xffff914fd114   340  movz x16, #0xc00000000
0xffff914fd118   344  sub csp, jssp, #0x10 (16)
0xffff914fd11c   348  stp fp, lr, [jssp, #-16]!
0xffff914fd120   352  sub csp, jssp, #0x10 (16)
0xffff914fd124   356  str x16, [jssp, #-8]!
0xffff914fd128   360  ldr x17, pc+128 (addr 0x0000ffff914fd1a8)    ;; object: 0xffff914fcf61 <Code: STUB>
0xffff914fd12c   364  sub csp, jssp, #0x10 (16)
0xffff914fd130   368  str x17, [jssp, #-8]!
0xffff914fd134   372  add fp, jssp, #0x10 (16)
0xffff914fd138   376  lsl x0, x0, #32
0xffff914fd13c   380  lsl x1, x1, #32
0xffff914fd140   384  sub csp, jssp, #0x18 (24)
0xffff914fd144   388  stp x1, x2, [jssp, #-24]!
0xffff914fd148   392  str x0, [jssp, #16]
0xffff914fd14c   396  movz x0, #0x1
0xffff914fd150   400  ldr x1, pc+96 (addr 0x0000ffff914fd1b0)    ;; external reference (Runtime::AllocateInNewSpace)
0xffff914fd154   404  ldr x16, pc+100 (addr 0x0000ffff914fd1b8)    ;; code: STUB, CEntryStub, minor: 4
0xffff914fd158   408  blr x16
0xffff914fd15c   412  mov x3, x0
0xffff914fd160   416  ldp x2, x0, [jssp], #16
0xffff914fd164   420  asr x0, x0, #32
0xffff914fd168   424  mov jssp, fp
0xffff914fd16c   428  ldp fp, lr, [jssp], #16
0xffff914fd170   432  b #-0xb4 (addr 0xffff914fd0bc)
0xffff914fd174   436  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff914fd178   440  d63f03e0       constant
0xffff914fd17c   444  d503201f       constant
0xffff914fd180   448  4117f2c0       constant
0xffff914fd184   452  00000000       constant
0xffff914fd188   456  914fcf61       constant
0xffff914fd18c   460  0000ffff       constant
0xffff914fd190   464  00e25898       constant
0xffff914fd194   468  00000000       constant
0xffff914fd198   472  91406060       constant
0xffff914fd19c   476  0000ffff       constant
0xffff914fd1a0   480  4117f2c0       constant
0xffff914fd1a4   484  00000000       constant
0xffff914fd1a8   488  914fcf61       constant
0xffff914fd1ac   492  0000ffff       constant
0xffff914fd1b0   496  00e25898       constant
0xffff914fd1b4   500  00000000       constant
0xffff914fd1b8   504  91406060       constant
0xffff914fd1bc   508  0000ffff       constant


RelocInfo (size = 24)
0xffff914fd000  external reference (Heap::NewSpaceAllocationTopAddress())  (0x4117f2c0)
0xffff914fd058  embedded object  (0xffff914fcf61 <Code: STUB>)
0xffff914fd078  external reference (Runtime::AllocateInNewSpace)  (0xe25898)
0xffff914fd07c  code target (STUB)  (0xffff91406060)
0xffff914fd0a0  external reference (Heap::NewSpaceAllocationTopAddress())  (0x4117f2c0)
0xffff914fd128  embedded object  (0xffff914fcf61 <Code: STUB>)
0xffff914fd150  external reference (Runtime::AllocateInNewSpace)  (0xe25898)
0xffff914fd154  code target (STUB)  (0xffff91406060)
0xffff914fd174  constant pool (size 76)


kind = HANDLER
major_key = <NoCache>Stub
name = info
compiler = unknown
Instructions (size = 120)
0xffff914fd540     0  sub csp, jssp, #0x8 (8)
0xffff914fd544     4  str x3, [jssp, #-8]!
0xffff914fd548     8  sub csp, jssp, #0x8 (8)
0xffff914fd54c    12  str x0, [jssp, #-8]!
0xffff914fd550    16  ldr x0, pc+72 (addr 0x0000ffff914fd598)    ;; object: 0x408ed6b1 Cell for 0
0xffff914fd554    20  ldur x0, [x0, #7]
0xffff914fd558    24  cmp x0, #0x0 (0)
0xffff914fd55c    28  b.ne #+0x14 (addr 0xffff914fd570)
0xffff914fd560    32  ldr x3, pc+64 (addr 0x0000ffff914fd5a0)    ;; object: 0x408ed6c1 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>
0xffff914fd564    36  ldur x3, [x3, #7]
0xffff914fd568    40  tbz w3, #0, #+0x8 (addr 0xffff914fd570)
0xffff914fd56c    44  b #+0x14 (addr 0xffff914fd580)
0xffff914fd570    48  ldr x0, [jssp], #8
0xffff914fd574    52  ldr x3, [jssp], #8
0xffff914fd578    56  ldr x16, pc+48 (addr 0x0000ffff914fd5a8)    ;; code: BUILTIN
0xffff914fd57c    60  br x16
0xffff914fd580    64  add jssp, jssp, #0x10 (16)
0xffff914fd584    68  mov x1, x3
0xffff914fd588    72  ldr x16, pc+40 (addr 0x0000ffff914fd5b0)    ;; code: HANDLER, LoadConstantStub, minor: 2
0xffff914fd58c    76  br x16
0xffff914fd590    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914fd594    84  d63f03e0       constant
0xffff914fd598    88  408ed6b1       constant
0xffff914fd59c    92  00000000       constant
0xffff914fd5a0    96  408ed6c1       constant
0xffff914fd5a4   100  00000000       constant
0xffff914fd5a8   104  914222e0       constant
0xffff914fd5ac   108  0000ffff       constant
0xffff914fd5b0   112  91443380       constant
0xffff914fd5b4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914fd550  embedded object  (0x408ed6b1 Cell for 0)
0xffff914fd560  embedded object  (0x408ed6c1 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>)
0xffff914fd578  code target (BUILTIN)  (0xffff914222e0)
0xffff914fd588  code target (HANDLER)  (0xffff91443380)
0xffff914fd590  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = bind
compiler = unknown
Instructions (size = 120)
0xffff914fd620     0  sub csp, jssp, #0x8 (8)
0xffff914fd624     4  str x3, [jssp, #-8]!
0xffff914fd628     8  sub csp, jssp, #0x8 (8)
0xffff914fd62c    12  str x0, [jssp, #-8]!
0xffff914fd630    16  ldr x0, pc+72 (addr 0x0000ffff914fd678)    ;; object: 0x49b5b0f1 Cell for 0
0xffff914fd634    20  ldur x0, [x0, #7]
0xffff914fd638    24  cmp x0, #0x0 (0)
0xffff914fd63c    28  b.ne #+0x14 (addr 0xffff914fd650)
0xffff914fd640    32  ldr x3, pc+64 (addr 0x0000ffff914fd680)    ;; object: 0x408ed711 WeakCell for 0x49b40019 <JS Function (SharedFunctionInfo 0x49b3ff71)>
0xffff914fd644    36  ldur x3, [x3, #7]
0xffff914fd648    40  tbz w3, #0, #+0x8 (addr 0xffff914fd650)
0xffff914fd64c    44  b #+0x14 (addr 0xffff914fd660)
0xffff914fd650    48  ldr x0, [jssp], #8
0xffff914fd654    52  ldr x3, [jssp], #8
0xffff914fd658    56  ldr x16, pc+48 (addr 0x0000ffff914fd688)    ;; code: BUILTIN
0xffff914fd65c    60  br x16
0xffff914fd660    64  add jssp, jssp, #0x10 (16)
0xffff914fd664    68  mov x1, x3
0xffff914fd668    72  ldr x16, pc+40 (addr 0x0000ffff914fd690)    ;; code: HANDLER, LoadConstantStub, minor: 5
0xffff914fd66c    76  br x16
0xffff914fd670    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914fd674    84  d63f03e0       constant
0xffff914fd678    88  49b5b0f1       constant
0xffff914fd67c    92  00000000       constant
0xffff914fd680    96  408ed711       constant
0xffff914fd684   100  00000000       constant
0xffff914fd688   104  914222e0       constant
0xffff914fd68c   108  0000ffff       constant
0xffff914fd690   112  91443500       constant
0xffff914fd694   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914fd630  embedded object  (0x49b5b0f1 Cell for 0)
0xffff914fd640  embedded object  (0x408ed711 WeakCell for 0x49b40019 <JS Function (SharedFunctionInfo 0x49b3ff71)>)
0xffff914fd658  code target (BUILTIN)  (0xffff914222e0)
0xffff914fd668  code target (HANDLER)  (0xffff91443500)
0xffff914fd670  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = info
compiler = unknown
Instructions (size = 184)
0xffff914fd700     0  sub csp, jssp, #0x8 (8)
0xffff914fd704     4  str x3, [jssp, #-8]!
0xffff914fd708     8  sub csp, jssp, #0x8 (8)
0xffff914fd70c    12  str x4, [jssp, #-8]!
0xffff914fd710    16  ldr x3, pc+112 (addr 0x0000ffff914fd780)    ;; object: 0x408ed6b1 Cell for 0
0xffff914fd714    20  ldur x3, [x3, #7]
0xffff914fd718    24  cmp x3, #0x0 (0)
0xffff914fd71c    28  b.ne #+0x44 (addr 0xffff914fd760)
0xffff914fd720    32  tbz w0, #0, #+0x40 (addr 0xffff914fd760)
0xffff914fd724    36  ldur x3, [x0, #-1]
0xffff914fd728    40  ldr x4, pc+96 (addr 0x0000ffff914fd788)    ;; object: 0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fd72c    44  ldur x4, [x4, #7]
0xffff914fd730    48  cmp x3, x4
0xffff914fd734    52  b.ne #+0x2c (addr 0xffff914fd760)
0xffff914fd738    56  ldr x5, pc+88 (addr 0x0000ffff914fd790)    ;; object: 0x408ed749 WeakCell for 0x36441d99 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fd73c    60  ldur x5, [x5, #7]
0xffff914fd740    64  tbz w5, #0, #+0x20 (addr 0xffff914fd760)
0xffff914fd744    68  ldursw x4, [x5, #15]
0xffff914fd748    72  tbnz w4, #23, #+0x18 (addr 0xffff914fd760)
0xffff914fd74c    76  ldr x4, [jssp], #8
0xffff914fd750    80  ldr x3, [jssp], #8
0xffff914fd754    84  ldr x2, pc+68 (addr 0x0000ffff914fd798)    ;; object: 0x408ccdb1 <String[4]: info>
0xffff914fd758    88  ldr x16, pc+72 (addr 0x0000ffff914fd7a0)    ;; code: HANDLER, StoreTransitionStub, minor: 198663
0xffff914fd75c    92  br x16
0xffff914fd760    96  ldr x2, pc+72 (addr 0x0000ffff914fd7a8)    ;; object: 0x408ccdb1 <String[4]: info>
0xffff914fd764   100  ldr x4, [jssp], #8
0xffff914fd768   104  ldr x3, [jssp], #8
0xffff914fd76c   108  ldr x16, pc+68 (addr 0x0000ffff914fd7b0)    ;; code: BUILTIN
0xffff914fd770   112  br x16
0xffff914fd774   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914fd778   120  d63f03e0       constant
0xffff914fd77c   124  d503201f       constant
0xffff914fd780   128  408ed6b1       constant
0xffff914fd784   132  00000000       constant
0xffff914fd788   136  408ed641       constant
0xffff914fd78c   140  00000000       constant
0xffff914fd790   144  408ed749       constant
0xffff914fd794   148  00000000       constant
0xffff914fd798   152  408ccdb1       constant
0xffff914fd79c   156  00000000       constant
0xffff914fd7a0   160  9148c240       constant
0xffff914fd7a4   164  0000ffff       constant
0xffff914fd7a8   168  408ccdb1       constant
0xffff914fd7ac   172  00000000       constant
0xffff914fd7b0   176  91422420       constant
0xffff914fd7b4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914fd710  embedded object  (0x408ed6b1 Cell for 0)
0xffff914fd728  embedded object  (0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fd738  embedded object  (0x408ed749 WeakCell for 0x36441d99 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fd754  embedded object  (0x408ccdb1 <String[4]: info>)
0xffff914fd758  code target (HANDLER)  (0xffff9148c240)
0xffff914fd760  embedded object  (0x408ccdb1 <String[4]: info>)
0xffff914fd76c  code target (BUILTIN)  (0xffff91422420)
0xffff914fd774  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = warn
compiler = unknown
Instructions (size = 120)
0xffff914fd820     0  sub csp, jssp, #0x8 (8)
0xffff914fd824     4  str x3, [jssp, #-8]!
0xffff914fd828     8  sub csp, jssp, #0x8 (8)
0xffff914fd82c    12  str x0, [jssp, #-8]!
0xffff914fd830    16  ldr x0, pc+72 (addr 0x0000ffff914fd878)    ;; object: 0x408ed6b1 Cell for 0
0xffff914fd834    20  ldur x0, [x0, #7]
0xffff914fd838    24  cmp x0, #0x0 (0)
0xffff914fd83c    28  b.ne #+0x14 (addr 0xffff914fd850)
0xffff914fd840    32  ldr x3, pc+64 (addr 0x0000ffff914fd880)    ;; object: 0x408ed781 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>
0xffff914fd844    36  ldur x3, [x3, #7]
0xffff914fd848    40  tbz w3, #0, #+0x8 (addr 0xffff914fd850)
0xffff914fd84c    44  b #+0x14 (addr 0xffff914fd860)
0xffff914fd850    48  ldr x0, [jssp], #8
0xffff914fd854    52  ldr x3, [jssp], #8
0xffff914fd858    56  ldr x16, pc+48 (addr 0x0000ffff914fd888)    ;; code: BUILTIN
0xffff914fd85c    60  br x16
0xffff914fd860    64  add jssp, jssp, #0x10 (16)
0xffff914fd864    68  mov x1, x3
0xffff914fd868    72  ldr x16, pc+40 (addr 0x0000ffff914fd890)    ;; code: HANDLER, LoadConstantStub, minor: 3
0xffff914fd86c    76  br x16
0xffff914fd870    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914fd874    84  d63f03e0       constant
0xffff914fd878    88  408ed6b1       constant
0xffff914fd87c    92  00000000       constant
0xffff914fd880    96  408ed781       constant
0xffff914fd884   100  00000000       constant
0xffff914fd888   104  914222e0       constant
0xffff914fd88c   108  0000ffff       constant
0xffff914fd890   112  91443400       constant
0xffff914fd894   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914fd830  embedded object  (0x408ed6b1 Cell for 0)
0xffff914fd840  embedded object  (0x408ed781 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>)
0xffff914fd858  code target (BUILTIN)  (0xffff914222e0)
0xffff914fd868  code target (HANDLER)  (0xffff91443400)
0xffff914fd870  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = warn
compiler = unknown
Instructions (size = 184)
0xffff914fdc20     0  sub csp, jssp, #0x8 (8)
0xffff914fdc24     4  str x3, [jssp, #-8]!
0xffff914fdc28     8  sub csp, jssp, #0x8 (8)
0xffff914fdc2c    12  str x4, [jssp, #-8]!
0xffff914fdc30    16  ldr x3, pc+112 (addr 0x0000ffff914fdca0)    ;; object: 0x408ed6b1 Cell for 0
0xffff914fdc34    20  ldur x3, [x3, #7]
0xffff914fdc38    24  cmp x3, #0x0 (0)
0xffff914fdc3c    28  b.ne #+0x44 (addr 0xffff914fdc80)
0xffff914fdc40    32  tbz w0, #0, #+0x40 (addr 0xffff914fdc80)
0xffff914fdc44    36  ldur x3, [x0, #-1]
0xffff914fdc48    40  ldr x4, pc+96 (addr 0x0000ffff914fdca8)    ;; object: 0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fdc4c    44  ldur x4, [x4, #7]
0xffff914fdc50    48  cmp x3, x4
0xffff914fdc54    52  b.ne #+0x2c (addr 0xffff914fdc80)
0xffff914fdc58    56  ldr x5, pc+88 (addr 0x0000ffff914fdcb0)    ;; object: 0x408ed931 WeakCell for 0x36441df1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fdc5c    60  ldur x5, [x5, #7]
0xffff914fdc60    64  tbz w5, #0, #+0x20 (addr 0xffff914fdc80)
0xffff914fdc64    68  ldursw x4, [x5, #15]
0xffff914fdc68    72  tbnz w4, #23, #+0x18 (addr 0xffff914fdc80)
0xffff914fdc6c    76  ldr x4, [jssp], #8
0xffff914fdc70    80  ldr x3, [jssp], #8
0xffff914fdc74    84  ldr x2, pc+68 (addr 0x0000ffff914fdcb8)    ;; object: 0x408ccdd1 <String[4]: warn>
0xffff914fdc78    88  ldr x16, pc+72 (addr 0x0000ffff914fdcc0)    ;; code: HANDLER, StoreTransitionStub, minor: 198664
0xffff914fdc7c    92  br x16
0xffff914fdc80    96  ldr x2, pc+72 (addr 0x0000ffff914fdcc8)    ;; object: 0x408ccdd1 <String[4]: warn>
0xffff914fdc84   100  ldr x4, [jssp], #8
0xffff914fdc88   104  ldr x3, [jssp], #8
0xffff914fdc8c   108  ldr x16, pc+68 (addr 0x0000ffff914fdcd0)    ;; code: BUILTIN
0xffff914fdc90   112  br x16
0xffff914fdc94   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914fdc98   120  d63f03e0       constant
0xffff914fdc9c   124  d503201f       constant
0xffff914fdca0   128  408ed6b1       constant
0xffff914fdca4   132  00000000       constant
0xffff914fdca8   136  408ed641       constant
0xffff914fdcac   140  00000000       constant
0xffff914fdcb0   144  408ed931       constant
0xffff914fdcb4   148  00000000       constant
0xffff914fdcb8   152  408ccdd1       constant
0xffff914fdcbc   156  00000000       constant
0xffff914fdcc0   160  914e6140       constant
0xffff914fdcc4   164  0000ffff       constant
0xffff914fdcc8   168  408ccdd1       constant
0xffff914fdccc   172  00000000       constant
0xffff914fdcd0   176  91422420       constant
0xffff914fdcd4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914fdc30  embedded object  (0x408ed6b1 Cell for 0)
0xffff914fdc48  embedded object  (0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fdc58  embedded object  (0x408ed931 WeakCell for 0x36441df1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fdc74  embedded object  (0x408ccdd1 <String[4]: warn>)
0xffff914fdc78  code target (HANDLER)  (0xffff914e6140)
0xffff914fdc80  embedded object  (0x408ccdd1 <String[4]: warn>)
0xffff914fdc8c  code target (BUILTIN)  (0xffff91422420)
0xffff914fdc94  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = error
compiler = unknown
Instructions (size = 120)
0xffff914fdd40     0  sub csp, jssp, #0x8 (8)
0xffff914fdd44     4  str x3, [jssp, #-8]!
0xffff914fdd48     8  sub csp, jssp, #0x8 (8)
0xffff914fdd4c    12  str x0, [jssp, #-8]!
0xffff914fdd50    16  ldr x0, pc+72 (addr 0x0000ffff914fdd98)    ;; object: 0x408ed6b1 Cell for 0
0xffff914fdd54    20  ldur x0, [x0, #7]
0xffff914fdd58    24  cmp x0, #0x0 (0)
0xffff914fdd5c    28  b.ne #+0x14 (addr 0xffff914fdd70)
0xffff914fdd60    32  ldr x3, pc+64 (addr 0x0000ffff914fdda0)    ;; object: 0x408ed969 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>
0xffff914fdd64    36  ldur x3, [x3, #7]
0xffff914fdd68    40  tbz w3, #0, #+0x8 (addr 0xffff914fdd70)
0xffff914fdd6c    44  b #+0x14 (addr 0xffff914fdd80)
0xffff914fdd70    48  ldr x0, [jssp], #8
0xffff914fdd74    52  ldr x3, [jssp], #8
0xffff914fdd78    56  ldr x16, pc+48 (addr 0x0000ffff914fdda8)    ;; code: BUILTIN
0xffff914fdd7c    60  br x16
0xffff914fdd80    64  add jssp, jssp, #0x10 (16)
0xffff914fdd84    68  mov x1, x3
0xffff914fdd88    72  ldr x16, pc+40 (addr 0x0000ffff914fddb0)    ;; code: HANDLER, LoadConstantStub, minor: 4
0xffff914fdd8c    76  br x16
0xffff914fdd90    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914fdd94    84  d63f03e0       constant
0xffff914fdd98    88  408ed6b1       constant
0xffff914fdd9c    92  00000000       constant
0xffff914fdda0    96  408ed969       constant
0xffff914fdda4   100  00000000       constant
0xffff914fdda8   104  914222e0       constant
0xffff914fddac   108  0000ffff       constant
0xffff914fddb0   112  91443480       constant
0xffff914fddb4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914fdd50  embedded object  (0x408ed6b1 Cell for 0)
0xffff914fdd60  embedded object  (0x408ed969 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>)
0xffff914fdd78  code target (BUILTIN)  (0xffff914222e0)
0xffff914fdd88  code target (HANDLER)  (0xffff91443480)
0xffff914fdd90  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = error
compiler = unknown
Instructions (size = 184)
0xffff914fde20     0  sub csp, jssp, #0x8 (8)
0xffff914fde24     4  str x3, [jssp, #-8]!
0xffff914fde28     8  sub csp, jssp, #0x8 (8)
0xffff914fde2c    12  str x4, [jssp, #-8]!
0xffff914fde30    16  ldr x3, pc+112 (addr 0x0000ffff914fdea0)    ;; object: 0x408ed6b1 Cell for 0
0xffff914fde34    20  ldur x3, [x3, #7]
0xffff914fde38    24  cmp x3, #0x0 (0)
0xffff914fde3c    28  b.ne #+0x44 (addr 0xffff914fde80)
0xffff914fde40    32  tbz w0, #0, #+0x40 (addr 0xffff914fde80)
0xffff914fde44    36  ldur x3, [x0, #-1]
0xffff914fde48    40  ldr x4, pc+96 (addr 0x0000ffff914fdea8)    ;; object: 0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fde4c    44  ldur x4, [x4, #7]
0xffff914fde50    48  cmp x3, x4
0xffff914fde54    52  b.ne #+0x2c (addr 0xffff914fde80)
0xffff914fde58    56  ldr x5, pc+88 (addr 0x0000ffff914fdeb0)    ;; object: 0x408ed9a1 WeakCell for 0x36441e49 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fde5c    60  ldur x5, [x5, #7]
0xffff914fde60    64  tbz w5, #0, #+0x20 (addr 0xffff914fde80)
0xffff914fde64    68  ldursw x4, [x5, #15]
0xffff914fde68    72  tbnz w4, #23, #+0x18 (addr 0xffff914fde80)
0xffff914fde6c    76  ldr x4, [jssp], #8
0xffff914fde70    80  ldr x3, [jssp], #8
0xffff914fde74    84  ldr x2, pc+68 (addr 0x0000ffff914fdeb8)    ;; object: 0x49bb2571 <String[5]: error>
0xffff914fde78    88  ldr x16, pc+72 (addr 0x0000ffff914fdec0)    ;; code: HANDLER, StoreTransitionStub, minor: 198665
0xffff914fde7c    92  br x16
0xffff914fde80    96  ldr x2, pc+72 (addr 0x0000ffff914fdec8)    ;; object: 0x49bb2571 <String[5]: error>
0xffff914fde84   100  ldr x4, [jssp], #8
0xffff914fde88   104  ldr x3, [jssp], #8
0xffff914fde8c   108  ldr x16, pc+68 (addr 0x0000ffff914fded0)    ;; code: BUILTIN
0xffff914fde90   112  br x16
0xffff914fde94   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914fde98   120  d63f03e0       constant
0xffff914fde9c   124  d503201f       constant
0xffff914fdea0   128  408ed6b1       constant
0xffff914fdea4   132  00000000       constant
0xffff914fdea8   136  408ed641       constant
0xffff914fdeac   140  00000000       constant
0xffff914fdeb0   144  408ed9a1       constant
0xffff914fdeb4   148  00000000       constant
0xffff914fdeb8   152  49bb2571       constant
0xffff914fdebc   156  00000000       constant
0xffff914fdec0   160  914e64e0       constant
0xffff914fdec4   164  0000ffff       constant
0xffff914fdec8   168  49bb2571       constant
0xffff914fdecc   172  00000000       constant
0xffff914fded0   176  91422420       constant
0xffff914fded4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914fde30  embedded object  (0x408ed6b1 Cell for 0)
0xffff914fde48  embedded object  (0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fde58  embedded object  (0x408ed9a1 WeakCell for 0x36441e49 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fde74  embedded object  (0x49bb2571 <String[5]: error>)
0xffff914fde78  code target (HANDLER)  (0xffff914e64e0)
0xffff914fde80  embedded object  (0x49bb2571 <String[5]: error>)
0xffff914fde8c  code target (BUILTIN)  (0xffff91422420)
0xffff914fde94  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = dir
compiler = unknown
Instructions (size = 120)
0xffff914fdf40     0  sub csp, jssp, #0x8 (8)
0xffff914fdf44     4  str x3, [jssp, #-8]!
0xffff914fdf48     8  sub csp, jssp, #0x8 (8)
0xffff914fdf4c    12  str x0, [jssp, #-8]!
0xffff914fdf50    16  ldr x0, pc+72 (addr 0x0000ffff914fdf98)    ;; object: 0x408ed6b1 Cell for 0
0xffff914fdf54    20  ldur x0, [x0, #7]
0xffff914fdf58    24  cmp x0, #0x0 (0)
0xffff914fdf5c    28  b.ne #+0x14 (addr 0xffff914fdf70)
0xffff914fdf60    32  ldr x3, pc+64 (addr 0x0000ffff914fdfa0)    ;; object: 0x408ed9d9 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>
0xffff914fdf64    36  ldur x3, [x3, #7]
0xffff914fdf68    40  tbz w3, #0, #+0x8 (addr 0xffff914fdf70)
0xffff914fdf6c    44  b #+0x14 (addr 0xffff914fdf80)
0xffff914fdf70    48  ldr x0, [jssp], #8
0xffff914fdf74    52  ldr x3, [jssp], #8
0xffff914fdf78    56  ldr x16, pc+48 (addr 0x0000ffff914fdfa8)    ;; code: BUILTIN
0xffff914fdf7c    60  br x16
0xffff914fdf80    64  add jssp, jssp, #0x10 (16)
0xffff914fdf84    68  mov x1, x3
0xffff914fdf88    72  ldr x16, pc+40 (addr 0x0000ffff914fdfb0)    ;; code: HANDLER, LoadConstantStub, minor: 5
0xffff914fdf8c    76  br x16
0xffff914fdf90    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914fdf94    84  d63f03e0       constant
0xffff914fdf98    88  408ed6b1       constant
0xffff914fdf9c    92  00000000       constant
0xffff914fdfa0    96  408ed9d9       constant
0xffff914fdfa4   100  00000000       constant
0xffff914fdfa8   104  914222e0       constant
0xffff914fdfac   108  0000ffff       constant
0xffff914fdfb0   112  91443500       constant
0xffff914fdfb4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914fdf50  embedded object  (0x408ed6b1 Cell for 0)
0xffff914fdf60  embedded object  (0x408ed9d9 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>)
0xffff914fdf78  code target (BUILTIN)  (0xffff914222e0)
0xffff914fdf88  code target (HANDLER)  (0xffff91443500)
0xffff914fdf90  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = dir
compiler = unknown
Instructions (size = 184)
0xffff914fe3a0     0  sub csp, jssp, #0x8 (8)
0xffff914fe3a4     4  str x3, [jssp, #-8]!
0xffff914fe3a8     8  sub csp, jssp, #0x8 (8)
0xffff914fe3ac    12  str x4, [jssp, #-8]!
0xffff914fe3b0    16  ldr x3, pc+112 (addr 0x0000ffff914fe420)    ;; object: 0x408ed6b1 Cell for 0
0xffff914fe3b4    20  ldur x3, [x3, #7]
0xffff914fe3b8    24  cmp x3, #0x0 (0)
0xffff914fe3bc    28  b.ne #+0x44 (addr 0xffff914fe400)
0xffff914fe3c0    32  tbz w0, #0, #+0x40 (addr 0xffff914fe400)
0xffff914fe3c4    36  ldur x3, [x0, #-1]
0xffff914fe3c8    40  ldr x4, pc+96 (addr 0x0000ffff914fe428)    ;; object: 0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fe3cc    44  ldur x4, [x4, #7]
0xffff914fe3d0    48  cmp x3, x4
0xffff914fe3d4    52  b.ne #+0x2c (addr 0xffff914fe400)
0xffff914fe3d8    56  ldr x5, pc+88 (addr 0x0000ffff914fe430)    ;; object: 0x408edbe9 WeakCell for 0x36441ea1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fe3dc    60  ldur x5, [x5, #7]
0xffff914fe3e0    64  tbz w5, #0, #+0x20 (addr 0xffff914fe400)
0xffff914fe3e4    68  ldursw x4, [x5, #15]
0xffff914fe3e8    72  tbnz w4, #23, #+0x18 (addr 0xffff914fe400)
0xffff914fe3ec    76  ldr x4, [jssp], #8
0xffff914fe3f0    80  ldr x3, [jssp], #8
0xffff914fe3f4    84  ldr x2, pc+68 (addr 0x0000ffff914fe438)    ;; object: 0x49bcffd1 <String[3]: dir>
0xffff914fe3f8    88  ldr x16, pc+72 (addr 0x0000ffff914fe440)    ;; code: HANDLER, StoreTransitionStub, minor: 198666
0xffff914fe3fc    92  br x16
0xffff914fe400    96  ldr x2, pc+72 (addr 0x0000ffff914fe448)    ;; object: 0x49bcffd1 <String[3]: dir>
0xffff914fe404   100  ldr x4, [jssp], #8
0xffff914fe408   104  ldr x3, [jssp], #8
0xffff914fe40c   108  ldr x16, pc+68 (addr 0x0000ffff914fe450)    ;; code: BUILTIN
0xffff914fe410   112  br x16
0xffff914fe414   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914fe418   120  d63f03e0       constant
0xffff914fe41c   124  d503201f       constant
0xffff914fe420   128  408ed6b1       constant
0xffff914fe424   132  00000000       constant
0xffff914fe428   136  408ed641       constant
0xffff914fe42c   140  00000000       constant
0xffff914fe430   144  408edbe9       constant
0xffff914fe434   148  00000000       constant
0xffff914fe438   152  49bcffd1       constant
0xffff914fe43c   156  00000000       constant
0xffff914fe440   160  914f6940       constant
0xffff914fe444   164  0000ffff       constant
0xffff914fe448   168  49bcffd1       constant
0xffff914fe44c   172  00000000       constant
0xffff914fe450   176  91422420       constant
0xffff914fe454   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914fe3b0  embedded object  (0x408ed6b1 Cell for 0)
0xffff914fe3c8  embedded object  (0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fe3d8  embedded object  (0x408edbe9 WeakCell for 0x36441ea1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fe3f4  embedded object  (0x49bcffd1 <String[3]: dir>)
0xffff914fe3f8  code target (HANDLER)  (0xffff914f6940)
0xffff914fe400  embedded object  (0x49bcffd1 <String[3]: dir>)
0xffff914fe40c  code target (BUILTIN)  (0xffff91422420)
0xffff914fe414  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = time
compiler = unknown
Instructions (size = 120)
0xffff914fe4c0     0  sub csp, jssp, #0x8 (8)
0xffff914fe4c4     4  str x3, [jssp, #-8]!
0xffff914fe4c8     8  sub csp, jssp, #0x8 (8)
0xffff914fe4cc    12  str x0, [jssp, #-8]!
0xffff914fe4d0    16  ldr x0, pc+72 (addr 0x0000ffff914fe518)    ;; object: 0x408ed6b1 Cell for 0
0xffff914fe4d4    20  ldur x0, [x0, #7]
0xffff914fe4d8    24  cmp x0, #0x0 (0)
0xffff914fe4dc    28  b.ne #+0x14 (addr 0xffff914fe4f0)
0xffff914fe4e0    32  ldr x3, pc+64 (addr 0x0000ffff914fe520)    ;; object: 0x408edc21 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>
0xffff914fe4e4    36  ldur x3, [x3, #7]
0xffff914fe4e8    40  tbz w3, #0, #+0x8 (addr 0xffff914fe4f0)
0xffff914fe4ec    44  b #+0x14 (addr 0xffff914fe500)
0xffff914fe4f0    48  ldr x0, [jssp], #8
0xffff914fe4f4    52  ldr x3, [jssp], #8
0xffff914fe4f8    56  ldr x16, pc+48 (addr 0x0000ffff914fe528)    ;; code: BUILTIN
0xffff914fe4fc    60  br x16
0xffff914fe500    64  add jssp, jssp, #0x10 (16)
0xffff914fe504    68  mov x1, x3
0xffff914fe508    72  ldr x16, pc+40 (addr 0x0000ffff914fe530)    ;; code: HANDLER, LoadConstantStub, minor: 6
0xffff914fe50c    76  br x16
0xffff914fe510    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914fe514    84  d63f03e0       constant
0xffff914fe518    88  408ed6b1       constant
0xffff914fe51c    92  00000000       constant
0xffff914fe520    96  408edc21       constant
0xffff914fe524   100  00000000       constant
0xffff914fe528   104  914222e0       constant
0xffff914fe52c   108  0000ffff       constant
0xffff914fe530   112  9148b020       constant
0xffff914fe534   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914fe4d0  embedded object  (0x408ed6b1 Cell for 0)
0xffff914fe4e0  embedded object  (0x408edc21 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>)
0xffff914fe4f8  code target (BUILTIN)  (0xffff914222e0)
0xffff914fe508  code target (HANDLER)  (0xffff9148b020)
0xffff914fe510  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = time
compiler = unknown
Instructions (size = 184)
0xffff914fe7c0     0  sub csp, jssp, #0x8 (8)
0xffff914fe7c4     4  str x3, [jssp, #-8]!
0xffff914fe7c8     8  sub csp, jssp, #0x8 (8)
0xffff914fe7cc    12  str x4, [jssp, #-8]!
0xffff914fe7d0    16  ldr x3, pc+112 (addr 0x0000ffff914fe840)    ;; object: 0x408ed6b1 Cell for 0
0xffff914fe7d4    20  ldur x3, [x3, #7]
0xffff914fe7d8    24  cmp x3, #0x0 (0)
0xffff914fe7dc    28  b.ne #+0x44 (addr 0xffff914fe820)
0xffff914fe7e0    32  tbz w0, #0, #+0x40 (addr 0xffff914fe820)
0xffff914fe7e4    36  ldur x3, [x0, #-1]
0xffff914fe7e8    40  ldr x4, pc+96 (addr 0x0000ffff914fe848)    ;; object: 0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fe7ec    44  ldur x4, [x4, #7]
0xffff914fe7f0    48  cmp x3, x4
0xffff914fe7f4    52  b.ne #+0x2c (addr 0xffff914fe820)
0xffff914fe7f8    56  ldr x5, pc+88 (addr 0x0000ffff914fe850)    ;; object: 0x408eddb9 WeakCell for 0x36441ef9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff914fe7fc    60  ldur x5, [x5, #7]
0xffff914fe800    64  tbz w5, #0, #+0x20 (addr 0xffff914fe820)
0xffff914fe804    68  ldursw x4, [x5, #15]
0xffff914fe808    72  tbnz w4, #23, #+0x18 (addr 0xffff914fe820)
0xffff914fe80c    76  ldr x4, [jssp], #8
0xffff914fe810    80  ldr x3, [jssp], #8
0xffff914fe814    84  ldr x2, pc+68 (addr 0x0000ffff914fe858)    ;; object: 0x49ba2941 <String[4]: time>
0xffff914fe818    88  ldr x16, pc+72 (addr 0x0000ffff914fe860)    ;; code: HANDLER, StoreTransitionStub, minor: 198667
0xffff914fe81c    92  br x16
0xffff914fe820    96  ldr x2, pc+72 (addr 0x0000ffff914fe868)    ;; object: 0x49ba2941 <String[4]: time>
0xffff914fe824   100  ldr x4, [jssp], #8
0xffff914fe828   104  ldr x3, [jssp], #8
0xffff914fe82c   108  ldr x16, pc+68 (addr 0x0000ffff914fe870)    ;; code: BUILTIN
0xffff914fe830   112  br x16
0xffff914fe834   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff914fe838   120  d63f03e0       constant
0xffff914fe83c   124  d503201f       constant
0xffff914fe840   128  408ed6b1       constant
0xffff914fe844   132  00000000       constant
0xffff914fe848   136  408ed641       constant
0xffff914fe84c   140  00000000       constant
0xffff914fe850   144  408eddb9       constant
0xffff914fe854   148  00000000       constant
0xffff914fe858   152  49ba2941       constant
0xffff914fe85c   156  00000000       constant
0xffff914fe860   160  914f6c60       constant
0xffff914fe864   164  0000ffff       constant
0xffff914fe868   168  49ba2941       constant
0xffff914fe86c   172  00000000       constant
0xffff914fe870   176  91422420       constant
0xffff914fe874   180  0000ffff       constant


RelocInfo (size = 13)
0xffff914fe7d0  embedded object  (0x408ed6b1 Cell for 0)
0xffff914fe7e8  embedded object  (0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fe7f8  embedded object  (0x408eddb9 WeakCell for 0x36441ef9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff914fe814  embedded object  (0x49ba2941 <String[4]: time>)
0xffff914fe818  code target (HANDLER)  (0xffff914f6c60)
0xffff914fe820  embedded object  (0x49ba2941 <String[4]: time>)
0xffff914fe82c  code target (BUILTIN)  (0xffff91422420)
0xffff914fe834  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = timeEnd
compiler = unknown
Instructions (size = 120)
0xffff914fe8e0     0  sub csp, jssp, #0x8 (8)
0xffff914fe8e4     4  str x3, [jssp, #-8]!
0xffff914fe8e8     8  sub csp, jssp, #0x8 (8)
0xffff914fe8ec    12  str x0, [jssp, #-8]!
0xffff914fe8f0    16  ldr x0, pc+72 (addr 0x0000ffff914fe938)    ;; object: 0x408ed6b1 Cell for 0
0xffff914fe8f4    20  ldur x0, [x0, #7]
0xffff914fe8f8    24  cmp x0, #0x0 (0)
0xffff914fe8fc    28  b.ne #+0x14 (addr 0xffff914fe910)
0xffff914fe900    32  ldr x3, pc+64 (addr 0x0000ffff914fe940)    ;; object: 0x408eddf1 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>
0xffff914fe904    36  ldur x3, [x3, #7]
0xffff914fe908    40  tbz w3, #0, #+0x8 (addr 0xffff914fe910)
0xffff914fe90c    44  b #+0x14 (addr 0xffff914fe920)
0xffff914fe910    48  ldr x0, [jssp], #8
0xffff914fe914    52  ldr x3, [jssp], #8
0xffff914fe918    56  ldr x16, pc+48 (addr 0x0000ffff914fe948)    ;; code: BUILTIN
0xffff914fe91c    60  br x16
0xffff914fe920    64  add jssp, jssp, #0x10 (16)
0xffff914fe924    68  mov x1, x3
0xffff914fe928    72  ldr x16, pc+40 (addr 0x0000ffff914fe950)    ;; code: HANDLER, LoadConstantStub, minor: 7
0xffff914fe92c    76  br x16
0xffff914fe930    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff914fe934    84  d63f03e0       constant
0xffff914fe938    88  408ed6b1       constant
0xffff914fe93c    92  00000000       constant
0xffff914fe940    96  408eddf1       constant
0xffff914fe944   100  00000000       constant
0xffff914fe948   104  914222e0       constant
0xffff914fe94c   108  0000ffff       constant
0xffff914fe950   112  9148b0a0       constant
0xffff914fe954   116  0000ffff       constant


RelocInfo (size = 10)
0xffff914fe8f0  embedded object  (0x408ed6b1 Cell for 0)
0xffff914fe900  embedded object  (0x408eddf1 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>)
0xffff914fe918  code target (BUILTIN)  (0xffff914222e0)
0xffff914fe928  code target (HANDLER)  (0xffff9148b0a0)
0xffff914fe930  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = timeEnd
compiler = unknown
Instructions (size = 184)
0xffff91506060     0  sub csp, jssp, #0x8 (8)
0xffff91506064     4  str x3, [jssp, #-8]!
0xffff91506068     8  sub csp, jssp, #0x8 (8)
0xffff9150606c    12  str x4, [jssp, #-8]!
0xffff91506070    16  ldr x3, pc+112 (addr 0x0000ffff915060e0)    ;; object: 0x408ed6b1 Cell for 0
0xffff91506074    20  ldur x3, [x3, #7]
0xffff91506078    24  cmp x3, #0x0 (0)
0xffff9150607c    28  b.ne #+0x44 (addr 0xffff915060c0)
0xffff91506080    32  tbz w0, #0, #+0x40 (addr 0xffff915060c0)
0xffff91506084    36  ldur x3, [x0, #-1]
0xffff91506088    40  ldr x4, pc+96 (addr 0x0000ffff915060e8)    ;; object: 0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9150608c    44  ldur x4, [x4, #7]
0xffff91506090    48  cmp x3, x4
0xffff91506094    52  b.ne #+0x2c (addr 0xffff915060c0)
0xffff91506098    56  ldr x5, pc+88 (addr 0x0000ffff915060f0)    ;; object: 0x408ee0e9 WeakCell for 0x36441f51 <Map(FAST_HOLEY_ELEMENTS)>
0xffff9150609c    60  ldur x5, [x5, #7]
0xffff915060a0    64  tbz w5, #0, #+0x20 (addr 0xffff915060c0)
0xffff915060a4    68  ldursw x4, [x5, #15]
0xffff915060a8    72  tbnz w4, #23, #+0x18 (addr 0xffff915060c0)
0xffff915060ac    76  ldr x4, [jssp], #8
0xffff915060b0    80  ldr x3, [jssp], #8
0xffff915060b4    84  ldr x2, pc+68 (addr 0x0000ffff915060f8)    ;; object: 0x408cce11 <String[7]: timeEnd>
0xffff915060b8    88  ldr x16, pc+72 (addr 0x0000ffff91506100)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff915060bc    92  br x16
0xffff915060c0    96  ldr x2, pc+72 (addr 0x0000ffff91506108)    ;; object: 0x408cce11 <String[7]: timeEnd>
0xffff915060c4   100  ldr x4, [jssp], #8
0xffff915060c8   104  ldr x3, [jssp], #8
0xffff915060cc   108  ldr x16, pc+68 (addr 0x0000ffff91506110)    ;; code: BUILTIN
0xffff915060d0   112  br x16
0xffff915060d4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff915060d8   120  d63f03e0       constant
0xffff915060dc   124  d503201f       constant
0xffff915060e0   128  408ed6b1       constant
0xffff915060e4   132  00000000       constant
0xffff915060e8   136  408ed641       constant
0xffff915060ec   140  00000000       constant
0xffff915060f0   144  408ee0e9       constant
0xffff915060f4   148  00000000       constant
0xffff915060f8   152  408cce11       constant
0xffff915060fc   156  00000000       constant
0xffff91506100   160  91438860       constant
0xffff91506104   164  0000ffff       constant
0xffff91506108   168  408cce11       constant
0xffff9150610c   172  00000000       constant
0xffff91506110   176  91422420       constant
0xffff91506114   180  0000ffff       constant


RelocInfo (size = 13)
0xffff91506070  embedded object  (0x408ed6b1 Cell for 0)
0xffff91506088  embedded object  (0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91506098  embedded object  (0x408ee0e9 WeakCell for 0x36441f51 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff915060b4  embedded object  (0x408cce11 <String[7]: timeEnd>)
0xffff915060b8  code target (HANDLER)  (0xffff91438860)
0xffff915060c0  embedded object  (0x408cce11 <String[7]: timeEnd>)
0xffff915060cc  code target (BUILTIN)  (0xffff91422420)
0xffff915060d4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = trace
compiler = unknown
Instructions (size = 120)
0xffff91506180     0  sub csp, jssp, #0x8 (8)
0xffff91506184     4  str x3, [jssp, #-8]!
0xffff91506188     8  sub csp, jssp, #0x8 (8)
0xffff9150618c    12  str x0, [jssp, #-8]!
0xffff91506190    16  ldr x0, pc+72 (addr 0x0000ffff915061d8)    ;; object: 0x408ed6b1 Cell for 0
0xffff91506194    20  ldur x0, [x0, #7]
0xffff91506198    24  cmp x0, #0x0 (0)
0xffff9150619c    28  b.ne #+0x14 (addr 0xffff915061b0)
0xffff915061a0    32  ldr x3, pc+64 (addr 0x0000ffff915061e0)    ;; object: 0x408ee121 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>
0xffff915061a4    36  ldur x3, [x3, #7]
0xffff915061a8    40  tbz w3, #0, #+0x8 (addr 0xffff915061b0)
0xffff915061ac    44  b #+0x14 (addr 0xffff915061c0)
0xffff915061b0    48  ldr x0, [jssp], #8
0xffff915061b4    52  ldr x3, [jssp], #8
0xffff915061b8    56  ldr x16, pc+48 (addr 0x0000ffff915061e8)    ;; code: BUILTIN
0xffff915061bc    60  br x16
0xffff915061c0    64  add jssp, jssp, #0x10 (16)
0xffff915061c4    68  mov x1, x3
0xffff915061c8    72  ldr x16, pc+40 (addr 0x0000ffff915061f0)    ;; code: HANDLER, LoadConstantStub, minor: 8
0xffff915061cc    76  br x16
0xffff915061d0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff915061d4    84  d63f03e0       constant
0xffff915061d8    88  408ed6b1       constant
0xffff915061dc    92  00000000       constant
0xffff915061e0    96  408ee121       constant
0xffff915061e4   100  00000000       constant
0xffff915061e8   104  914222e0       constant
0xffff915061ec   108  0000ffff       constant
0xffff915061f0   112  9144c160       constant
0xffff915061f4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff91506190  embedded object  (0x408ed6b1 Cell for 0)
0xffff915061a0  embedded object  (0x408ee121 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>)
0xffff915061b8  code target (BUILTIN)  (0xffff914222e0)
0xffff915061c8  code target (HANDLER)  (0xffff9144c160)
0xffff915061d0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = trace
compiler = unknown
Instructions (size = 184)
0xffff91506680     0  sub csp, jssp, #0x8 (8)
0xffff91506684     4  str x3, [jssp, #-8]!
0xffff91506688     8  sub csp, jssp, #0x8 (8)
0xffff9150668c    12  str x4, [jssp, #-8]!
0xffff91506690    16  ldr x3, pc+112 (addr 0x0000ffff91506700)    ;; object: 0x408ed6b1 Cell for 0
0xffff91506694    20  ldur x3, [x3, #7]
0xffff91506698    24  cmp x3, #0x0 (0)
0xffff9150669c    28  b.ne #+0x44 (addr 0xffff915066e0)
0xffff915066a0    32  tbz w0, #0, #+0x40 (addr 0xffff915066e0)
0xffff915066a4    36  ldur x3, [x0, #-1]
0xffff915066a8    40  ldr x4, pc+96 (addr 0x0000ffff91506708)    ;; object: 0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff915066ac    44  ldur x4, [x4, #7]
0xffff915066b0    48  cmp x3, x4
0xffff915066b4    52  b.ne #+0x2c (addr 0xffff915066e0)
0xffff915066b8    56  ldr x5, pc+88 (addr 0x0000ffff91506710)    ;; object: 0x408ee369 WeakCell for 0x36441fa9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff915066bc    60  ldur x5, [x5, #7]
0xffff915066c0    64  tbz w5, #0, #+0x20 (addr 0xffff915066e0)
0xffff915066c4    68  ldursw x4, [x5, #15]
0xffff915066c8    72  tbnz w4, #23, #+0x18 (addr 0xffff915066e0)
0xffff915066cc    76  ldr x4, [jssp], #8
0xffff915066d0    80  ldr x3, [jssp], #8
0xffff915066d4    84  ldr x2, pc+68 (addr 0x0000ffff91506718)    ;; object: 0x49bdaea9 <String[5]: trace>
0xffff915066d8    88  ldr x16, pc+72 (addr 0x0000ffff91506720)    ;; code: HANDLER, StoreTransitionStub, minor: 196611
0xffff915066dc    92  br x16
0xffff915066e0    96  ldr x2, pc+72 (addr 0x0000ffff91506728)    ;; object: 0x49bdaea9 <String[5]: trace>
0xffff915066e4   100  ldr x4, [jssp], #8
0xffff915066e8   104  ldr x3, [jssp], #8
0xffff915066ec   108  ldr x16, pc+68 (addr 0x0000ffff91506730)    ;; code: BUILTIN
0xffff915066f0   112  br x16
0xffff915066f4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff915066f8   120  d63f03e0       constant
0xffff915066fc   124  d503201f       constant
0xffff91506700   128  408ed6b1       constant
0xffff91506704   132  00000000       constant
0xffff91506708   136  408ed641       constant
0xffff9150670c   140  00000000       constant
0xffff91506710   144  408ee369       constant
0xffff91506714   148  00000000       constant
0xffff91506718   152  49bdaea9       constant
0xffff9150671c   156  00000000       constant
0xffff91506720   160  91499940       constant
0xffff91506724   164  0000ffff       constant
0xffff91506728   168  49bdaea9       constant
0xffff9150672c   172  00000000       constant
0xffff91506730   176  91422420       constant
0xffff91506734   180  0000ffff       constant


RelocInfo (size = 13)
0xffff91506690  embedded object  (0x408ed6b1 Cell for 0)
0xffff915066a8  embedded object  (0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff915066b8  embedded object  (0x408ee369 WeakCell for 0x36441fa9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff915066d4  embedded object  (0x49bdaea9 <String[5]: trace>)
0xffff915066d8  code target (HANDLER)  (0xffff91499940)
0xffff915066e0  embedded object  (0x49bdaea9 <String[5]: trace>)
0xffff915066ec  code target (BUILTIN)  (0xffff91422420)
0xffff915066f4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = assert
compiler = unknown
Instructions (size = 120)
0xffff915067a0     0  sub csp, jssp, #0x8 (8)
0xffff915067a4     4  str x3, [jssp, #-8]!
0xffff915067a8     8  sub csp, jssp, #0x8 (8)
0xffff915067ac    12  str x0, [jssp, #-8]!
0xffff915067b0    16  ldr x0, pc+72 (addr 0x0000ffff915067f8)    ;; object: 0x408ed6b1 Cell for 0
0xffff915067b4    20  ldur x0, [x0, #7]
0xffff915067b8    24  cmp x0, #0x0 (0)
0xffff915067bc    28  b.ne #+0x14 (addr 0xffff915067d0)
0xffff915067c0    32  ldr x3, pc+64 (addr 0x0000ffff91506800)    ;; object: 0x408ee3a1 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>
0xffff915067c4    36  ldur x3, [x3, #7]
0xffff915067c8    40  tbz w3, #0, #+0x8 (addr 0xffff915067d0)
0xffff915067cc    44  b #+0x14 (addr 0xffff915067e0)
0xffff915067d0    48  ldr x0, [jssp], #8
0xffff915067d4    52  ldr x3, [jssp], #8
0xffff915067d8    56  ldr x16, pc+48 (addr 0x0000ffff91506808)    ;; code: BUILTIN
0xffff915067dc    60  br x16
0xffff915067e0    64  add jssp, jssp, #0x10 (16)
0xffff915067e4    68  mov x1, x3
0xffff915067e8    72  ldr x16, pc+40 (addr 0x0000ffff91506810)    ;; code: HANDLER, LoadConstantStub, minor: 9
0xffff915067ec    76  br x16
0xffff915067f0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff915067f4    84  d63f03e0       constant
0xffff915067f8    88  408ed6b1       constant
0xffff915067fc    92  00000000       constant
0xffff91506800    96  408ee3a1       constant
0xffff91506804   100  00000000       constant
0xffff91506808   104  914222e0       constant
0xffff9150680c   108  0000ffff       constant
0xffff91506810   112  914e8c00       constant
0xffff91506814   116  0000ffff       constant


RelocInfo (size = 10)
0xffff915067b0  embedded object  (0x408ed6b1 Cell for 0)
0xffff915067c0  embedded object  (0x408ee3a1 WeakCell for 0x26a4f5e9 <an Object with map 0x36436d41>)
0xffff915067d8  code target (BUILTIN)  (0xffff914222e0)
0xffff915067e8  code target (HANDLER)  (0xffff914e8c00)
0xffff915067f0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = assert
compiler = unknown
Instructions (size = 184)
0xffff91506bc0     0  sub csp, jssp, #0x8 (8)
0xffff91506bc4     4  str x3, [jssp, #-8]!
0xffff91506bc8     8  sub csp, jssp, #0x8 (8)
0xffff91506bcc    12  str x4, [jssp, #-8]!
0xffff91506bd0    16  ldr x3, pc+112 (addr 0x0000ffff91506c40)    ;; object: 0x408ed6b1 Cell for 0
0xffff91506bd4    20  ldur x3, [x3, #7]
0xffff91506bd8    24  cmp x3, #0x0 (0)
0xffff91506bdc    28  b.ne #+0x44 (addr 0xffff91506c20)
0xffff91506be0    32  tbz w0, #0, #+0x40 (addr 0xffff91506c20)
0xffff91506be4    36  ldur x3, [x0, #-1]
0xffff91506be8    40  ldr x4, pc+96 (addr 0x0000ffff91506c48)    ;; object: 0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91506bec    44  ldur x4, [x4, #7]
0xffff91506bf0    48  cmp x3, x4
0xffff91506bf4    52  b.ne #+0x2c (addr 0xffff91506c20)
0xffff91506bf8    56  ldr x5, pc+88 (addr 0x0000ffff91506c50)    ;; object: 0x408ee559 WeakCell for 0x36442001 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91506bfc    60  ldur x5, [x5, #7]
0xffff91506c00    64  tbz w5, #0, #+0x20 (addr 0xffff91506c20)
0xffff91506c04    68  ldursw x4, [x5, #15]
0xffff91506c08    72  tbnz w4, #23, #+0x18 (addr 0xffff91506c20)
0xffff91506c0c    76  ldr x4, [jssp], #8
0xffff91506c10    80  ldr x3, [jssp], #8
0xffff91506c14    84  ldr x2, pc+68 (addr 0x0000ffff91506c58)    ;; object: 0x49bbdc41 <String[6]: assert>
0xffff91506c18    88  ldr x16, pc+72 (addr 0x0000ffff91506c60)    ;; code: HANDLER, StoreTransitionStub, minor: 196612
0xffff91506c1c    92  br x16
0xffff91506c20    96  ldr x2, pc+72 (addr 0x0000ffff91506c68)    ;; object: 0x49bbdc41 <String[6]: assert>
0xffff91506c24   100  ldr x4, [jssp], #8
0xffff91506c28   104  ldr x3, [jssp], #8
0xffff91506c2c   108  ldr x16, pc+68 (addr 0x0000ffff91506c70)    ;; code: BUILTIN
0xffff91506c30   112  br x16
0xffff91506c34   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff91506c38   120  d63f03e0       constant
0xffff91506c3c   124  d503201f       constant
0xffff91506c40   128  408ed6b1       constant
0xffff91506c44   132  00000000       constant
0xffff91506c48   136  408ed641       constant
0xffff91506c4c   140  00000000       constant
0xffff91506c50   144  408ee559       constant
0xffff91506c54   148  00000000       constant
0xffff91506c58   152  49bbdc41       constant
0xffff91506c5c   156  00000000       constant
0xffff91506c60   160  9149a100       constant
0xffff91506c64   164  0000ffff       constant
0xffff91506c68   168  49bbdc41       constant
0xffff91506c6c   172  00000000       constant
0xffff91506c70   176  91422420       constant
0xffff91506c74   180  0000ffff       constant


RelocInfo (size = 13)
0xffff91506bd0  embedded object  (0x408ed6b1 Cell for 0)
0xffff91506be8  embedded object  (0x408ed641 WeakCell for 0x3640a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91506bf8  embedded object  (0x408ee559 WeakCell for 0x36442001 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91506c14  embedded object  (0x49bbdc41 <String[6]: assert>)
0xffff91506c18  code target (HANDLER)  (0xffff9149a100)
0xffff91506c20  embedded object  (0x49bbdc41 <String[6]: assert>)
0xffff91506c2c  code target (BUILTIN)  (0xffff91422420)
0xffff91506c34  constant pool (size 68)

kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff915099a0     0  sub csp, jssp, #0x10 (16)
0xffff915099a4     4  stp x1, x0, [jssp, #-16]!
0xffff915099a8     8  ldur x4, [x2, #7]
0xffff915099ac    12  ubfx x0, x4, #52, #11
0xffff915099b0    16  cmp x0, #0x453 (1107)
0xffff915099b4    20  csel x4, xzr, x4, ge
0xffff915099b8    24  b.ge #+0x1c (addr 0xffff915099d4)
0xffff915099bc    28  ubfx x1, x4, #0, #52
0xffff915099c0    32  orr x1, x1, #0x10000000000000
0xffff915099c4    36  tst x4, #0x8000000000000000
0xffff915099c8    40  cneg x1, x1, ne
0xffff915099cc    44  sub x0, x0, #0x433 (1075)
0xffff915099d0    48  lsl x4, x1, x0
0xffff915099d4    52  ldp x1, x0, [jssp], #16
0xffff915099d8    56  ret


RelocInfo (size = 0)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = StringAddStub
compiler = crankshaft
Instructions (size = 1483)
0xffff91509a40     0  movz x16, #0xa00000000
0xffff91509a44     4  sub csp, jssp, #0x10 (16)
0xffff91509a48     8  stp fp, lr, [jssp, #-16]!
0xffff91509a4c    12  mov fp, jssp
0xffff91509a50    16  sub csp, jssp, #0x20 (32)
0xffff91509a54    20  sub jssp, jssp, #0x20 (32)
0xffff91509a58    24  stur x16, [fp, #-8]
0xffff91509a5c    28  str x1, [jssp, #16]
0xffff91509a60    32  str x0, [jssp, #8]
0xffff91509a64    36  str cp, [jssp]
0xffff91509a68    40  mov x2, cp
0xffff91509a6c    44  tbz w0, #0, #+0xb8 (addr 0xffff91509b24)
0xffff91509a70    48  ldur x3, [x0, #-1]
0xffff91509a74    52  ldrb w4, [x3, #11]
0xffff91509a78    56  cmp w4, #0x80 (128)
0xffff91509a7c    60  b.lt #+0xa0 (addr 0xffff91509b1c)
0xffff91509a80    64  cmp w4, #0x83 (131)
0xffff91509a84    68  b.le #+0x80 (addr 0xffff91509b04)
0xffff91509a88    72  ldur x4, [x2, #39]
0xffff91509a8c    76  movz x16, #0x217
0xffff91509a90    80  ldr x5, [x4, x16]
0xffff91509a94    84  movz x16, #0x2ef
0xffff91509a98    88  ldr x6, [x4, x16]
0xffff91509a9c    92  movz x16, #0x2e7
0xffff91509aa0    96  ldr x4, [x4, x16]
0xffff91509aa4   100  ldur x4, [x4, #23]
0xffff91509aa8   104  ldur x7, [x3, #23]
0xffff91509aac   108  ldur x7, [x7, #-1]
0xffff91509ab0   112  cmp x3, x4
0xffff91509ab4   116  b.ne #+0x1c (addr 0xffff91509ad0)
0xffff91509ab8   120  cmp x7, x6
0xffff91509abc   124  b.ne #+0x14 (addr 0xffff91509ad0)
0xffff91509ac0   128  ldur x3, [x7, #23]
0xffff91509ac4   132  ldur x3, [x3, #-1]
0xffff91509ac8   136  cmp x3, x5
0xffff91509acc   140  b.eq #+0x2c (addr 0xffff91509af8)
0xffff91509ad0   144  sub csp, jssp, #0x8 (8)
0xffff91509ad4   148  str x0, [jssp, #-8]!
0xffff91509ad8   152  mov cp, x2
0xffff91509adc   156  movz x0, #0x1
0xffff91509ae0   160  movz x1, #0x84c0
0xffff91509ae4   164  movk x1, #0xe4, lsl #16
0xffff91509ae8   168  ldr x16, pc+1032 (addr 0x0000ffff91509ef0)    ;; code: STUB, CEntryStub, minor: 4
0xffff91509aec   172  blr x16
0xffff91509af0   176  ldr x1, [jssp, #8]
0xffff91509af4   180  b #+0x18 (addr 0xffff91509b0c)
0xffff91509af8   184  ldr x1, [jssp, #8]
0xffff91509afc   188  ldur x0, [x1, #23]
0xffff91509b00   192  b #+0xc (addr 0xffff91509b0c)
0xffff91509b04   196  mov x1, x0
0xffff91509b08   200  mov x0, x1
0xffff91509b0c   204  ldr cp, [jssp]
0xffff91509b10   208  ldr x16, pc+1000 (addr 0x0000ffff91509ef8)    ;; code: STUB, ToStringStub, minor: 0
0xffff91509b14   212  blr x16
0xffff91509b18   216  b #+0x7c (addr 0xffff91509b94)
0xffff91509b1c   220  ldr x0, [jssp, #8]
0xffff91509b20   224  b #+0x74 (addr 0xffff91509b94)
0xffff91509b24   228  ldr x0, [x26, #368]
0xffff91509b28   232  ldur w1, [x0, #11]
0xffff91509b2c   236  asr w1, w1, #1
0xffff91509b30   240  sub w1, w1, #0x1 (1)
0xffff91509b34   244  ldr x2, [jssp, #8]
0xffff91509b38   248  tbz w2, #0, #+0xc (addr 0xffff91509b44)
0xffff91509b3c   252  ldr x16, pc+940 (addr 0x0000ffff91509ee8)    ;; lazy deoptimization bailout 2
0xffff91509b40   256  blr x16
0xffff91509b44   260  tbnz w2, #0, #+0x2a8 (addr 0xffff91509dec)
0xffff91509b48   264  asr x4, x2, #32
0xffff91509b4c   268  and w1, w1, w4
0xffff91509b50   272  lsl w1, w1, #1
0xffff91509b54   276  add x3, x0, #0xf (15)
0xffff91509b58   280  ldr x4, [x3, w1, sxtw #3]
0xffff91509b5c   284  cmp x2, x4
0xffff91509b60   288  b.eq #+0x28 (addr 0xffff91509b88)
0xffff91509b64   292  sub csp, jssp, #0x8 (8)
0xffff91509b68   296  str x2, [jssp, #-8]!
0xffff91509b6c   300  ldr cp, [jssp, #8]
0xffff91509b70   304  movz x0, #0x1
0xffff91509b74   308  movz x1, #0xce00
0xffff91509b78   312  movk x1, #0xe3, lsl #16
0xffff91509b7c   316  ldr x16, pc+900 (addr 0x0000ffff91509f00)    ;; code: STUB, CEntryStub, minor: 4
0xffff91509b80   320  blr x16
0xffff91509b84   324  b #+0x10 (addr 0xffff91509b94)
0xffff91509b88   328  add x2, x0, #0x17 (23)
0xffff91509b8c   332  ldr x3, [x2, w1, sxtw #3]
0xffff91509b90   336  mov x0, x3
0xffff91509b94   340  ldr x1, [jssp, #16]
0xffff91509b98   344  ldur w2, [x1, #19]
0xffff91509b9c   348  ldur w3, [x0, #19]
0xffff91509ba0   352  cbz w2, #+0x23c (addr 0xffff91509ddc)
0xffff91509ba4   356  cbz w3, #+0x230 (addr 0xffff91509dd4)
0xffff91509ba8   360  add w4, w2, w3
0xffff91509bac   364  movn w16, #0xe0
0xffff91509bb0   368  cmp w4, w16, lsr #4
0xffff91509bb4   372  b.hs #+0x3c4 (addr 0xffff91509f78)
0xffff91509bb8   376  cmp w4, #0xd (13)
0xffff91509bbc   380  b.ge #+0x194 (addr 0xffff91509d50)
0xffff91509bc0   384  ldur x5, [x1, #-1]
0xffff91509bc4   388  ldrb w5, [x5, #11]
0xffff91509bc8   392  ldur x6, [x0, #-1]
0xffff91509bcc   396  ldrb w6, [x6, #11]
0xffff91509bd0   400  orr w7, w5, w6
0xffff91509bd4   404  eor w5, w5, w6
0xffff91509bd8   408  and w5, w5, #0x4
0xffff91509bdc   412  cbnz w5, #+0xc (addr 0xffff91509be8)
0xffff91509be0   416  and w5, w7, #0x3
0xffff91509be4   420  cbz w5, #+0x28 (addr 0xffff91509c0c)
0xffff91509be8   424  sub csp, jssp, #0x10 (16)
0xffff91509bec   428  stp x0, x1, [jssp, #-16]!
0xffff91509bf0   432  ldr cp, [jssp, #16]
0xffff91509bf4   436  movz x0, #0x2
0xffff91509bf8   440  movz x1, #0xa6c0
0xffff91509bfc   444  movk x1, #0xec, lsl #16
0xffff91509c00   448  ldr x16, pc+776 (addr 0x0000ffff91509f08)    ;; code: STUB, CEntryStub, minor: 4
0xffff91509c04   452  blr x16
0xffff91509c08   456  b #+0x1d4 (addr 0xffff91509ddc)
0xffff91509c0c   460  and w1, w7, #0x4
0xffff91509c10   464  cbnz w1, #+0x14 (addr 0xffff91509c24)
0xffff91509c14   468  lsl w1, w4, #1
0xffff91509c18   472  mov x5, x1
0xffff91509c1c   476  ldr x1, pc+756 (addr 0x0000ffff91509f10)    ;; object: 0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91509c20   480  b #+0xc (addr 0xffff91509c2c)
0xffff91509c24   484  mov x5, x4
0xffff91509c28   488  ldr x1, pc+752 (addr 0x0000ffff91509f18)    ;; object: 0x36404bf9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91509c2c   492  add w5, w5, #0x1f (31)
0xffff91509c30   496  and w5, w5, #0xfffffff8
0xffff91509c34   500  cmp w5, #0x96000 (614400)
0xffff91509c38   504  b.lt #+0x2c (addr 0xffff91509c64)
0xffff91509c3c   508  sub csp, jssp, #0x10 (16)
0xffff91509c40   512  ldr x1, [jssp, #16]
0xffff91509c44   516  stp x0, x1, [jssp, #-16]!
0xffff91509c48   520  ldr cp, [jssp, #16]
0xffff91509c4c   524  movz x0, #0x2
0xffff91509c50   528  movz x1, #0xa6c0
0xffff91509c54   532  movk x1, #0xec, lsl #16
0xffff91509c58   536  ldr x16, pc+712 (addr 0x0000ffff91509f20)    ;; code: STUB, CEntryStub, minor: 4
0xffff91509c5c   540  blr x16
0xffff91509c60   544  b #+0x17c (addr 0xffff91509ddc)
0xffff91509c64   548  sxtw x5, w5
0xffff91509c68   552  movz x6, #0xf2c0
0xffff91509c6c   556  movk x6, #0x4117, lsl #16
0xffff91509c70   560  ldp x8, x16, [x6]
0xffff91509c74   564  adds x7, x8, x5
0xffff91509c78   568  ccmp x7, x16, #nzCv, lo
0xffff91509c7c   572  b.hi #+0x1d0 (addr 0xffff91509e4c)
0xffff91509c80   576  str x7, [x6]
0xffff91509c84   580  orr x8, x8, #0x1
0xffff91509c88   584  stur x1, [x8, #-1]
0xffff91509c8c   588  movz w5, #0x3
0xffff91509c90   592  stur w5, [x8, #7]
0xffff91509c94   596  lsl x4, x4, #32
0xffff91509c98   600  stur x4, [x8, #15]
0xffff91509c9c   604  ldr x4, pc+652 (addr 0x0000ffff91509f28)    ;; object: 0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91509ca0   608  cmp x1, x4
0xffff91509ca4   612  b.eq #+0x54 (addr 0xffff91509cf8)
0xffff91509ca8   616  ldr x5, [jssp, #16]
0xffff91509cac   620  movz x1, #0x0
0xffff91509cb0   624  cmp w2, w1
0xffff91509cb4   628  b.le #+0x1c (addr 0xffff91509cd0)
0xffff91509cb8   632  add x4, x5, #0x17 (23)
0xffff91509cbc   636  ldrb w6, [x4, w1, sxtw]
0xffff91509cc0   640  add x4, x8, #0x17 (23)
0xffff91509cc4   644  strb w6, [x4, w1, sxtw]
0xffff91509cc8   648  add w1, w1, #0x1 (1)
0xffff91509ccc   652  b #-0x1c (addr 0xffff91509cb0)
0xffff91509cd0   656  movz x1, #0x0
0xffff91509cd4   660  cmp w3, w1
0xffff91509cd8   664  b.le #+0x70 (addr 0xffff91509d48)
0xffff91509cdc   668  add x4, x0, #0x17 (23)
0xffff91509ce0   672  ldrb w5, [x4, w1, sxtw]
0xffff91509ce4   676  add w4, w2, w1
0xffff91509ce8   680  add x6, x8, #0x17 (23)
0xffff91509cec   684  strb w5, [x6, w4, sxtw]
0xffff91509cf0   688  add w1, w1, #0x1 (1)
0xffff91509cf4   692  b #-0x20 (addr 0xffff91509cd4)
0xffff91509cf8   696  ldr x5, [jssp, #16]
0xffff91509cfc   700  movz x1, #0x0
0xffff91509d00   704  cmp w2, w1
0xffff91509d04   708  b.le #+0x1c (addr 0xffff91509d20)
0xffff91509d08   712  add x4, x5, #0x17 (23)
0xffff91509d0c   716  ldrh w6, [x4, w1, sxtw #1]
0xffff91509d10   720  add x4, x8, #0x17 (23)
0xffff91509d14   724  strh w6, [x4, w1, sxtw #1]
0xffff91509d18   728  add w1, w1, #0x1 (1)
0xffff91509d1c   732  b #-0x1c (addr 0xffff91509d00)
0xffff91509d20   736  movz x1, #0x0
0xffff91509d24   740  cmp w3, w1
0xffff91509d28   744  b.le #+0x20 (addr 0xffff91509d48)
0xffff91509d2c   748  add x4, x0, #0x17 (23)
0xffff91509d30   752  ldrh w5, [x4, w1, sxtw #1]
0xffff91509d34   756  add w4, w2, w1
0xffff91509d38   760  add x6, x8, #0x17 (23)
0xffff91509d3c   764  strh w5, [x6, w4, sxtw #1]
0xffff91509d40   768  add w1, w1, #0x1 (1)
0xffff91509d44   772  b #-0x20 (addr 0xffff91509d24)
0xffff91509d48   776  mov x0, x8
0xffff91509d4c   780  b #+0x90 (addr 0xffff91509ddc)
0xffff91509d50   784  mov x5, x1
0xffff91509d54   788  ldur x1, [x5, #-1]
0xffff91509d58   792  ldrb w1, [x1, #11]
0xffff91509d5c   796  ldur x2, [x0, #-1]
0xffff91509d60   800  ldrb w2, [x2, #11]
0xffff91509d64   804  movz x6, #0xf2c0
0xffff91509d68   808  movk x6, #0x4117, lsl #16
0xffff91509d6c   812  ldp x7, x3, [x6]
0xffff91509d70   816  adds x16, x7, #0x28 (40)
0xffff91509d74   820  ccmp x16, x3, #nzCv, lo
0xffff91509d78   824  b.hi #+0x11c (addr 0xffff91509e94)
0xffff91509d7c   828  str x16, [x6]
0xffff91509d80   832  orr x7, x7, #0x1
0xffff91509d84   836  and w3, w1, w2
0xffff91509d88   840  eor w1, w1, w2
0xffff91509d8c   844  and w2, w3, #0xc
0xffff91509d90   848  cbnz w2, #+0x1c (addr 0xffff91509dac)
0xffff91509d94   852  and w1, w1, #0xc
0xffff91509d98   856  cmp w1, #0xc (12)
0xffff91509d9c   860  b.eq #+0x10 (addr 0xffff91509dac)
0xffff91509da0   864  ldr x1, pc+400 (addr 0x0000ffff91509f30)    ;; object: 0x36404c51 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91509da4   868  stur x1, [x7, #-1]
0xffff91509da8   872  b #+0xc (addr 0xffff91509db4)
0xffff91509dac   876  ldr x1, pc+396 (addr 0x0000ffff91509f38)    ;; object: 0x36404ca9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91509db0   880  stur x1, [x7, #-1]
0xffff91509db4   884  movz w1, #0x3
0xffff91509db8   888  stur w1, [x7, #7]
0xffff91509dbc   892  lsl x1, x4, #32
0xffff91509dc0   896  stur x1, [x7, #15]
0xffff91509dc4   900  stur x5, [x7, #23]
0xffff91509dc8   904  stur x0, [x7, #31]
0xffff91509dcc   908  mov x0, x7
0xffff91509dd0   912  b #+0xc (addr 0xffff91509ddc)
0xffff91509dd4   916  mov x5, x1
0xffff91509dd8   920  mov x0, x5
0xffff91509ddc   924  ldr cp, [jssp]
0xffff91509de0   928  mov jssp, fp
0xffff91509de4   932  ldp fp, lr, [jssp], #16
0xffff91509de8   936  ret
0xffff91509dec   940  ldur x16, [x2, #-1]
0xffff91509df0   944  ldr x17, [x26, #120]
0xffff91509df4   948  cmp x16, x17
0xffff91509df8   952  b.ne #+0x30 (addr 0xffff91509e28)
0xffff91509dfc   956  ldur d30, [x2, #7]
0xffff91509e00   960  fcvtzs x4, d30
0xffff91509e04   964  cmp x4, #0x1 (1)
0xffff91509e08   968  ccmn x4, #1, #nzcV, vc
0xffff91509e0c   972  b.vc #+0x18 (addr 0xffff91509e24)
0xffff91509e10   976  sub csp, jssp, #0x8 (8)
0xffff91509e14   980  str lr, [jssp, #-8]!
0xffff91509e18   984  ldr x16, pc+296 (addr 0x0000ffff91509f40)    ;; code: STUB, DoubleToIStub, minor: 127234
0xffff91509e1c   988  blr x16
0xffff91509e20   992  ldr lr, [jssp], #8
0xffff91509e24   996  b #+0x24 (addr 0xffff91509e48)
0xffff91509e28  1000  ldp x4, x3, [x26, #64]
0xffff91509e2c  1004  cmp x2, x4
0xffff91509e30  1008  cset x4, eq
0xffff91509e34  1012  ccmp x2, x3, #nZcv, ne
0xffff91509e38  1016  b.eq #+0x10 (addr 0xffff91509e48)
0xffff91509e3c  1020  ldr x16, [x26, #40]
0xffff91509e40  1024  cmp x2, x16
0xffff91509e44  1028  b.ne #+0x13c (addr 0xffff91509f80)
0xffff91509e48  1032  b #-0x2fc (addr 0xffff91509b4c)
0xffff91509e4c  1036  movz x8, #0x0
0xffff91509e50  1040  mov x16, lr
0xffff91509e54  1044  ldr x17, pc+244 (addr 0x0000ffff91509f48)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91509e58  1048  blr x17
0xffff91509e5c  1052  lsl x0, x5, #32
0xffff91509e60  1056  movz x10, #0x0
0xffff91509e64  1060  sub csp, jssp, #0x10 (16)
0xffff91509e68  1064  stp x10, x0, [jssp, #-16]!
0xffff91509e6c  1068  ldur cp, [fp, #-32]
0xffff91509e70  1072  movz x0, #0x2
0xffff91509e74  1076  movz x1, #0x5b88
0xffff91509e78  1080  movk x1, #0xe2, lsl #16
0xffff91509e7c  1084  ldr x16, pc+212 (addr 0x0000ffff91509f50)    ;; code: STUB, CEntryStub, minor: 5
0xffff91509e80  1088  blr x16
0xffff91509e84  1092  str x0, [jssp, #64]
0xffff91509e88  1096  ldr x16, pc+208 (addr 0x0000ffff91509f58)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91509e8c  1100  blr x16
0xffff91509e90  1104  b #-0x208 (addr 0xffff91509c88)
0xffff91509e94  1108  movz x7, #0x0
0xffff91509e98  1112  mov x16, lr
0xffff91509e9c  1116  ldr x17, pc+196 (addr 0x0000ffff91509f60)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91509ea0  1120  blr x17
0xffff91509ea4  1124  movz x0, #0x2800000000
0xffff91509ea8  1128  movz x10, #0x0
0xffff91509eac  1132  sub csp, jssp, #0x10 (16)
0xffff91509eb0  1136  stp x10, x0, [jssp, #-16]!
0xffff91509eb4  1140  ldur cp, [fp, #-32]
0xffff91509eb8  1144  movz x0, #0x2
0xffff91509ebc  1148  movz x1, #0x5b88
0xffff91509ec0  1152  movk x1, #0xe2, lsl #16
0xffff91509ec4  1156  ldr x16, pc+164 (addr 0x0000ffff91509f68)    ;; code: STUB, CEntryStub, minor: 5
0xffff91509ec8  1160  blr x16
0xffff91509ecc  1164  str x0, [jssp, #56]
0xffff91509ed0  1168  ldr x16, pc+160 (addr 0x0000ffff91509f70)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91509ed4  1172  blr x16
0xffff91509ed8  1176  b #-0x154 (addr 0xffff91509d84)
0xffff91509edc  1180  580004df       constant pool begin (num_const = 38)    ;; constant pool
0xffff91509ee0  1184  d63f03e0       constant
0xffff91509ee4  1188  d503201f       constant
0xffff91509ee8  1192  91206010       constant
0xffff91509eec  1196  0000ffff       constant
0xffff91509ef0  1200  91406060       constant
0xffff91509ef4  1204  0000ffff       constant
0xffff91509ef8  1208  9142a6c0       constant
0xffff91509efc  1212  0000ffff       constant
0xffff91509f00  1216  91406060       constant
0xffff91509f04  1220  0000ffff       constant
0xffff91509f08  1224  91406060       constant
0xffff91509f0c  1228  0000ffff       constant
0xffff91509f10  1232  36404ba1       constant
0xffff91509f14  1236  00000000       constant
0xffff91509f18  1240  36404bf9       constant
0xffff91509f1c  1244  00000000       constant
0xffff91509f20  1248  91406060       constant
0xffff91509f24  1252  0000ffff       constant
0xffff91509f28  1256  36404ba1       constant
0xffff91509f2c  1260  00000000       constant
0xffff91509f30  1264  36404c51       constant
0xffff91509f34  1268  00000000       constant
0xffff91509f38  1272  36404ca9       constant
0xffff91509f3c  1276  00000000       constant
0xffff91509f40  1280  915099a0       constant
0xffff91509f44  1284  0000ffff       constant
0xffff91509f48  1288  91406820       constant
0xffff91509f4c  1292  0000ffff       constant
0xffff91509f50  1296  91406260       constant
0xffff91509f54  1300  0000ffff       constant
0xffff91509f58  1304  914068e0       constant
0xffff91509f5c  1308  0000ffff       constant
0xffff91509f60  1312  91406820       constant
0xffff91509f64  1316  0000ffff       constant
0xffff91509f68  1320  91406260       constant
0xffff91509f6c  1324  0000ffff       constant
0xffff91509f70  1328  914068e0       constant
0xffff91509f74  1332  0000ffff       constant
0xffff91509f78  1336  movz x16, #0x0
0xffff91509f7c  1340  bl #+0xc (addr 0xffff91509f88)
0xffff91509f80  1344  movz x16, #0x18
0xffff91509f84  1348  bl #+0x4 (addr 0xffff91509f88)
0xffff91509f88  1352  ldr x17, pc+24 (addr 0x0000ffff91509fa0)    ;; lazy deoptimization bailout 4
0xffff91509f8c  1356  add x17, x17, x16
0xffff91509f90  1360  br x17
0xffff91509f94  1364  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91509f98  1368  d63f03e0       constant
0xffff91509f9c  1372  d503201f       constant
0xffff91509fa0  1376  91206020       constant
0xffff91509fa4  1380  0000ffff       constant


Safepoints (size = 99)
0xffff91509af0   176  111000 (sp -> fp)       0
0xffff91509b18   216  111000 (sp -> fp)       1
0xffff91509b84   324  111000 (sp -> fp)       3
0xffff91509c08   456  111000 (sp -> fp)       5
0xffff91509c60   544  111000 (sp -> fp)       6
0xffff91509e84  1092  101000 | x0 | x1 | x8 (sp -> fp)  <none> argc: 2
0xffff91509ecc  1164  101000 | x0 | x5 | x7 (sp -> fp)  <none> argc: 2

RelocInfo (size = 47)
0xffff91509ae8  code target (STUB)  (0xffff91406060)
0xffff91509b10  code target (STUB)  (0xffff9142a6c0)
0xffff91509b3c  runtime entry
0xffff91509b7c  code target (STUB)  (0xffff91406060)
0xffff91509c00  code target (STUB)  (0xffff91406060)
0xffff91509c1c  embedded object  (0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91509c28  embedded object  (0x36404bf9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91509c58  code target (STUB)  (0xffff91406060)
0xffff91509c9c  embedded object  (0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91509da0  embedded object  (0x36404c51 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91509dac  embedded object  (0x36404ca9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91509e18  code target (STUB)  (0xffff915099a0)
0xffff91509e54  code target (STUB)  (0xffff91406820)
0xffff91509e7c  code target (STUB)  (0xffff91406260)
0xffff91509e88  code target (STUB)  (0xffff914068e0)
0xffff91509e9c  code target (STUB)  (0xffff91406820)
0xffff91509ec4  code target (STUB)  (0xffff91406260)
0xffff91509ed0  code target (STUB)  (0xffff914068e0)
0xffff91509edc  constant pool (size 156)
0xffff91509f88  runtime entry
0xffff91509f94  constant pool (size 20)

--- End code ---
kind = STUB
major_key = StringAddStub
name = StringAddStub_ConvertRight_NotTenured
compiler = crankshaft
Instructions (size = 1483)
0xffff91509a40     0  movz x16, #0xa00000000
0xffff91509a44     4  sub csp, jssp, #0x10 (16)
0xffff91509a48     8  stp fp, lr, [jssp, #-16]!
0xffff91509a4c    12  mov fp, jssp
0xffff91509a50    16  sub csp, jssp, #0x20 (32)
0xffff91509a54    20  sub jssp, jssp, #0x20 (32)
0xffff91509a58    24  stur x16, [fp, #-8]
0xffff91509a5c    28  str x1, [jssp, #16]
0xffff91509a60    32  str x0, [jssp, #8]
0xffff91509a64    36  str cp, [jssp]
0xffff91509a68    40  mov x2, cp
0xffff91509a6c    44  tbz w0, #0, #+0xb8 (addr 0xffff91509b24)
0xffff91509a70    48  ldur x3, [x0, #-1]
0xffff91509a74    52  ldrb w4, [x3, #11]
0xffff91509a78    56  cmp w4, #0x80 (128)
0xffff91509a7c    60  b.lt #+0xa0 (addr 0xffff91509b1c)
0xffff91509a80    64  cmp w4, #0x83 (131)
0xffff91509a84    68  b.le #+0x80 (addr 0xffff91509b04)
0xffff91509a88    72  ldur x4, [x2, #39]
0xffff91509a8c    76  movz x16, #0x217
0xffff91509a90    80  ldr x5, [x4, x16]
0xffff91509a94    84  movz x16, #0x2ef
0xffff91509a98    88  ldr x6, [x4, x16]
0xffff91509a9c    92  movz x16, #0x2e7
0xffff91509aa0    96  ldr x4, [x4, x16]
0xffff91509aa4   100  ldur x4, [x4, #23]
0xffff91509aa8   104  ldur x7, [x3, #23]
0xffff91509aac   108  ldur x7, [x7, #-1]
0xffff91509ab0   112  cmp x3, x4
0xffff91509ab4   116  b.ne #+0x1c (addr 0xffff91509ad0)
0xffff91509ab8   120  cmp x7, x6
0xffff91509abc   124  b.ne #+0x14 (addr 0xffff91509ad0)
0xffff91509ac0   128  ldur x3, [x7, #23]
0xffff91509ac4   132  ldur x3, [x3, #-1]
0xffff91509ac8   136  cmp x3, x5
0xffff91509acc   140  b.eq #+0x2c (addr 0xffff91509af8)
0xffff91509ad0   144  sub csp, jssp, #0x8 (8)
0xffff91509ad4   148  str x0, [jssp, #-8]!
0xffff91509ad8   152  mov cp, x2
0xffff91509adc   156  movz x0, #0x1
0xffff91509ae0   160  movz x1, #0x84c0
0xffff91509ae4   164  movk x1, #0xe4, lsl #16
0xffff91509ae8   168  ldr x16, pc+1032 (addr 0x0000ffff91509ef0)    ;; code: STUB, CEntryStub, minor: 4
0xffff91509aec   172  blr x16
0xffff91509af0   176  ldr x1, [jssp, #8]
0xffff91509af4   180  b #+0x18 (addr 0xffff91509b0c)
0xffff91509af8   184  ldr x1, [jssp, #8]
0xffff91509afc   188  ldur x0, [x1, #23]
0xffff91509b00   192  b #+0xc (addr 0xffff91509b0c)
0xffff91509b04   196  mov x1, x0
0xffff91509b08   200  mov x0, x1
0xffff91509b0c   204  ldr cp, [jssp]
0xffff91509b10   208  ldr x16, pc+1000 (addr 0x0000ffff91509ef8)    ;; code: STUB, ToStringStub, minor: 0
0xffff91509b14   212  blr x16
0xffff91509b18   216  b #+0x7c (addr 0xffff91509b94)
0xffff91509b1c   220  ldr x0, [jssp, #8]
0xffff91509b20   224  b #+0x74 (addr 0xffff91509b94)
0xffff91509b24   228  ldr x0, [x26, #368]
0xffff91509b28   232  ldur w1, [x0, #11]
0xffff91509b2c   236  asr w1, w1, #1
0xffff91509b30   240  sub w1, w1, #0x1 (1)
0xffff91509b34   244  ldr x2, [jssp, #8]
0xffff91509b38   248  tbz w2, #0, #+0xc (addr 0xffff91509b44)
0xffff91509b3c   252  ldr x16, pc+940 (addr 0x0000ffff91509ee8)    ;; lazy deoptimization bailout 2
0xffff91509b40   256  blr x16
0xffff91509b44   260  tbnz w2, #0, #+0x2a8 (addr 0xffff91509dec)
0xffff91509b48   264  asr x4, x2, #32
0xffff91509b4c   268  and w1, w1, w4
0xffff91509b50   272  lsl w1, w1, #1
0xffff91509b54   276  add x3, x0, #0xf (15)
0xffff91509b58   280  ldr x4, [x3, w1, sxtw #3]
0xffff91509b5c   284  cmp x2, x4
0xffff91509b60   288  b.eq #+0x28 (addr 0xffff91509b88)
0xffff91509b64   292  sub csp, jssp, #0x8 (8)
0xffff91509b68   296  str x2, [jssp, #-8]!
0xffff91509b6c   300  ldr cp, [jssp, #8]
0xffff91509b70   304  movz x0, #0x1
0xffff91509b74   308  movz x1, #0xce00
0xffff91509b78   312  movk x1, #0xe3, lsl #16
0xffff91509b7c   316  ldr x16, pc+900 (addr 0x0000ffff91509f00)    ;; code: STUB, CEntryStub, minor: 4
0xffff91509b80   320  blr x16
0xffff91509b84   324  b #+0x10 (addr 0xffff91509b94)
0xffff91509b88   328  add x2, x0, #0x17 (23)
0xffff91509b8c   332  ldr x3, [x2, w1, sxtw #3]
0xffff91509b90   336  mov x0, x3
0xffff91509b94   340  ldr x1, [jssp, #16]
0xffff91509b98   344  ldur w2, [x1, #19]
0xffff91509b9c   348  ldur w3, [x0, #19]
0xffff91509ba0   352  cbz w2, #+0x23c (addr 0xffff91509ddc)
0xffff91509ba4   356  cbz w3, #+0x230 (addr 0xffff91509dd4)
0xffff91509ba8   360  add w4, w2, w3
0xffff91509bac   364  movn w16, #0xe0
0xffff91509bb0   368  cmp w4, w16, lsr #4
0xffff91509bb4   372  b.hs #+0x3c4 (addr 0xffff91509f78)
0xffff91509bb8   376  cmp w4, #0xd (13)
0xffff91509bbc   380  b.ge #+0x194 (addr 0xffff91509d50)
0xffff91509bc0   384  ldur x5, [x1, #-1]
0xffff91509bc4   388  ldrb w5, [x5, #11]
0xffff91509bc8   392  ldur x6, [x0, #-1]
0xffff91509bcc   396  ldrb w6, [x6, #11]
0xffff91509bd0   400  orr w7, w5, w6
0xffff91509bd4   404  eor w5, w5, w6
0xffff91509bd8   408  and w5, w5, #0x4
0xffff91509bdc   412  cbnz w5, #+0xc (addr 0xffff91509be8)
0xffff91509be0   416  and w5, w7, #0x3
0xffff91509be4   420  cbz w5, #+0x28 (addr 0xffff91509c0c)
0xffff91509be8   424  sub csp, jssp, #0x10 (16)
0xffff91509bec   428  stp x0, x1, [jssp, #-16]!
0xffff91509bf0   432  ldr cp, [jssp, #16]
0xffff91509bf4   436  movz x0, #0x2
0xffff91509bf8   440  movz x1, #0xa6c0
0xffff91509bfc   444  movk x1, #0xec, lsl #16
0xffff91509c00   448  ldr x16, pc+776 (addr 0x0000ffff91509f08)    ;; code: STUB, CEntryStub, minor: 4
0xffff91509c04   452  blr x16
0xffff91509c08   456  b #+0x1d4 (addr 0xffff91509ddc)
0xffff91509c0c   460  and w1, w7, #0x4
0xffff91509c10   464  cbnz w1, #+0x14 (addr 0xffff91509c24)
0xffff91509c14   468  lsl w1, w4, #1
0xffff91509c18   472  mov x5, x1
0xffff91509c1c   476  ldr x1, pc+756 (addr 0x0000ffff91509f10)    ;; object: 0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91509c20   480  b #+0xc (addr 0xffff91509c2c)
0xffff91509c24   484  mov x5, x4
0xffff91509c28   488  ldr x1, pc+752 (addr 0x0000ffff91509f18)    ;; object: 0x36404bf9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91509c2c   492  add w5, w5, #0x1f (31)
0xffff91509c30   496  and w5, w5, #0xfffffff8
0xffff91509c34   500  cmp w5, #0x96000 (614400)
0xffff91509c38   504  b.lt #+0x2c (addr 0xffff91509c64)
0xffff91509c3c   508  sub csp, jssp, #0x10 (16)
0xffff91509c40   512  ldr x1, [jssp, #16]
0xffff91509c44   516  stp x0, x1, [jssp, #-16]!
0xffff91509c48   520  ldr cp, [jssp, #16]
0xffff91509c4c   524  movz x0, #0x2
0xffff91509c50   528  movz x1, #0xa6c0
0xffff91509c54   532  movk x1, #0xec, lsl #16
0xffff91509c58   536  ldr x16, pc+712 (addr 0x0000ffff91509f20)    ;; code: STUB, CEntryStub, minor: 4
0xffff91509c5c   540  blr x16
0xffff91509c60   544  b #+0x17c (addr 0xffff91509ddc)
0xffff91509c64   548  sxtw x5, w5
0xffff91509c68   552  movz x6, #0xf2c0
0xffff91509c6c   556  movk x6, #0x4117, lsl #16
0xffff91509c70   560  ldp x8, x16, [x6]
0xffff91509c74   564  adds x7, x8, x5
0xffff91509c78   568  ccmp x7, x16, #nzCv, lo
0xffff91509c7c   572  b.hi #+0x1d0 (addr 0xffff91509e4c)
0xffff91509c80   576  str x7, [x6]
0xffff91509c84   580  orr x8, x8, #0x1
0xffff91509c88   584  stur x1, [x8, #-1]
0xffff91509c8c   588  movz w5, #0x3
0xffff91509c90   592  stur w5, [x8, #7]
0xffff91509c94   596  lsl x4, x4, #32
0xffff91509c98   600  stur x4, [x8, #15]
0xffff91509c9c   604  ldr x4, pc+652 (addr 0x0000ffff91509f28)    ;; object: 0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91509ca0   608  cmp x1, x4
0xffff91509ca4   612  b.eq #+0x54 (addr 0xffff91509cf8)
0xffff91509ca8   616  ldr x5, [jssp, #16]
0xffff91509cac   620  movz x1, #0x0
0xffff91509cb0   624  cmp w2, w1
0xffff91509cb4   628  b.le #+0x1c (addr 0xffff91509cd0)
0xffff91509cb8   632  add x4, x5, #0x17 (23)
0xffff91509cbc   636  ldrb w6, [x4, w1, sxtw]
0xffff91509cc0   640  add x4, x8, #0x17 (23)
0xffff91509cc4   644  strb w6, [x4, w1, sxtw]
0xffff91509cc8   648  add w1, w1, #0x1 (1)
0xffff91509ccc   652  b #-0x1c (addr 0xffff91509cb0)
0xffff91509cd0   656  movz x1, #0x0
0xffff91509cd4   660  cmp w3, w1
0xffff91509cd8   664  b.le #+0x70 (addr 0xffff91509d48)
0xffff91509cdc   668  add x4, x0, #0x17 (23)
0xffff91509ce0   672  ldrb w5, [x4, w1, sxtw]
0xffff91509ce4   676  add w4, w2, w1
0xffff91509ce8   680  add x6, x8, #0x17 (23)
0xffff91509cec   684  strb w5, [x6, w4, sxtw]
0xffff91509cf0   688  add w1, w1, #0x1 (1)
0xffff91509cf4   692  b #-0x20 (addr 0xffff91509cd4)
0xffff91509cf8   696  ldr x5, [jssp, #16]
0xffff91509cfc   700  movz x1, #0x0
0xffff91509d00   704  cmp w2, w1
0xffff91509d04   708  b.le #+0x1c (addr 0xffff91509d20)
0xffff91509d08   712  add x4, x5, #0x17 (23)
0xffff91509d0c   716  ldrh w6, [x4, w1, sxtw #1]
0xffff91509d10   720  add x4, x8, #0x17 (23)
0xffff91509d14   724  strh w6, [x4, w1, sxtw #1]
0xffff91509d18   728  add w1, w1, #0x1 (1)
0xffff91509d1c   732  b #-0x1c (addr 0xffff91509d00)
0xffff91509d20   736  movz x1, #0x0
0xffff91509d24   740  cmp w3, w1
0xffff91509d28   744  b.le #+0x20 (addr 0xffff91509d48)
0xffff91509d2c   748  add x4, x0, #0x17 (23)
0xffff91509d30   752  ldrh w5, [x4, w1, sxtw #1]
0xffff91509d34   756  add w4, w2, w1
0xffff91509d38   760  add x6, x8, #0x17 (23)
0xffff91509d3c   764  strh w5, [x6, w4, sxtw #1]
0xffff91509d40   768  add w1, w1, #0x1 (1)
0xffff91509d44   772  b #-0x20 (addr 0xffff91509d24)
0xffff91509d48   776  mov x0, x8
0xffff91509d4c   780  b #+0x90 (addr 0xffff91509ddc)
0xffff91509d50   784  mov x5, x1
0xffff91509d54   788  ldur x1, [x5, #-1]
0xffff91509d58   792  ldrb w1, [x1, #11]
0xffff91509d5c   796  ldur x2, [x0, #-1]
0xffff91509d60   800  ldrb w2, [x2, #11]
0xffff91509d64   804  movz x6, #0xf2c0
0xffff91509d68   808  movk x6, #0x4117, lsl #16
0xffff91509d6c   812  ldp x7, x3, [x6]
0xffff91509d70   816  adds x16, x7, #0x28 (40)
0xffff91509d74   820  ccmp x16, x3, #nzCv, lo
0xffff91509d78   824  b.hi #+0x11c (addr 0xffff91509e94)
0xffff91509d7c   828  str x16, [x6]
0xffff91509d80   832  orr x7, x7, #0x1
0xffff91509d84   836  and w3, w1, w2
0xffff91509d88   840  eor w1, w1, w2
0xffff91509d8c   844  and w2, w3, #0xc
0xffff91509d90   848  cbnz w2, #+0x1c (addr 0xffff91509dac)
0xffff91509d94   852  and w1, w1, #0xc
0xffff91509d98   856  cmp w1, #0xc (12)
0xffff91509d9c   860  b.eq #+0x10 (addr 0xffff91509dac)
0xffff91509da0   864  ldr x1, pc+400 (addr 0x0000ffff91509f30)    ;; object: 0x36404c51 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91509da4   868  stur x1, [x7, #-1]
0xffff91509da8   872  b #+0xc (addr 0xffff91509db4)
0xffff91509dac   876  ldr x1, pc+396 (addr 0x0000ffff91509f38)    ;; object: 0x36404ca9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff91509db0   880  stur x1, [x7, #-1]
0xffff91509db4   884  movz w1, #0x3
0xffff91509db8   888  stur w1, [x7, #7]
0xffff91509dbc   892  lsl x1, x4, #32
0xffff91509dc0   896  stur x1, [x7, #15]
0xffff91509dc4   900  stur x5, [x7, #23]
0xffff91509dc8   904  stur x0, [x7, #31]
0xffff91509dcc   908  mov x0, x7
0xffff91509dd0   912  b #+0xc (addr 0xffff91509ddc)
0xffff91509dd4   916  mov x5, x1
0xffff91509dd8   920  mov x0, x5
0xffff91509ddc   924  ldr cp, [jssp]
0xffff91509de0   928  mov jssp, fp
0xffff91509de4   932  ldp fp, lr, [jssp], #16
0xffff91509de8   936  ret
0xffff91509dec   940  ldur x16, [x2, #-1]
0xffff91509df0   944  ldr x17, [x26, #120]
0xffff91509df4   948  cmp x16, x17
0xffff91509df8   952  b.ne #+0x30 (addr 0xffff91509e28)
0xffff91509dfc   956  ldur d30, [x2, #7]
0xffff91509e00   960  fcvtzs x4, d30
0xffff91509e04   964  cmp x4, #0x1 (1)
0xffff91509e08   968  ccmn x4, #1, #nzcV, vc
0xffff91509e0c   972  b.vc #+0x18 (addr 0xffff91509e24)
0xffff91509e10   976  sub csp, jssp, #0x8 (8)
0xffff91509e14   980  str lr, [jssp, #-8]!
0xffff91509e18   984  ldr x16, pc+296 (addr 0x0000ffff91509f40)    ;; code: STUB, DoubleToIStub, minor: 127234
0xffff91509e1c   988  blr x16
0xffff91509e20   992  ldr lr, [jssp], #8
0xffff91509e24   996  b #+0x24 (addr 0xffff91509e48)
0xffff91509e28  1000  ldp x4, x3, [x26, #64]
0xffff91509e2c  1004  cmp x2, x4
0xffff91509e30  1008  cset x4, eq
0xffff91509e34  1012  ccmp x2, x3, #nZcv, ne
0xffff91509e38  1016  b.eq #+0x10 (addr 0xffff91509e48)
0xffff91509e3c  1020  ldr x16, [x26, #40]
0xffff91509e40  1024  cmp x2, x16
0xffff91509e44  1028  b.ne #+0x13c (addr 0xffff91509f80)
0xffff91509e48  1032  b #-0x2fc (addr 0xffff91509b4c)
0xffff91509e4c  1036  movz x8, #0x0
0xffff91509e50  1040  mov x16, lr
0xffff91509e54  1044  ldr x17, pc+244 (addr 0x0000ffff91509f48)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91509e58  1048  blr x17
0xffff91509e5c  1052  lsl x0, x5, #32
0xffff91509e60  1056  movz x10, #0x0
0xffff91509e64  1060  sub csp, jssp, #0x10 (16)
0xffff91509e68  1064  stp x10, x0, [jssp, #-16]!
0xffff91509e6c  1068  ldur cp, [fp, #-32]
0xffff91509e70  1072  movz x0, #0x2
0xffff91509e74  1076  movz x1, #0x5b88
0xffff91509e78  1080  movk x1, #0xe2, lsl #16
0xffff91509e7c  1084  ldr x16, pc+212 (addr 0x0000ffff91509f50)    ;; code: STUB, CEntryStub, minor: 5
0xffff91509e80  1088  blr x16
0xffff91509e84  1092  str x0, [jssp, #64]
0xffff91509e88  1096  ldr x16, pc+208 (addr 0x0000ffff91509f58)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91509e8c  1100  blr x16
0xffff91509e90  1104  b #-0x208 (addr 0xffff91509c88)
0xffff91509e94  1108  movz x7, #0x0
0xffff91509e98  1112  mov x16, lr
0xffff91509e9c  1116  ldr x17, pc+196 (addr 0x0000ffff91509f60)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91509ea0  1120  blr x17
0xffff91509ea4  1124  movz x0, #0x2800000000
0xffff91509ea8  1128  movz x10, #0x0
0xffff91509eac  1132  sub csp, jssp, #0x10 (16)
0xffff91509eb0  1136  stp x10, x0, [jssp, #-16]!
0xffff91509eb4  1140  ldur cp, [fp, #-32]
0xffff91509eb8  1144  movz x0, #0x2
0xffff91509ebc  1148  movz x1, #0x5b88
0xffff91509ec0  1152  movk x1, #0xe2, lsl #16
0xffff91509ec4  1156  ldr x16, pc+164 (addr 0x0000ffff91509f68)    ;; code: STUB, CEntryStub, minor: 5
0xffff91509ec8  1160  blr x16
0xffff91509ecc  1164  str x0, [jssp, #56]
0xffff91509ed0  1168  ldr x16, pc+160 (addr 0x0000ffff91509f70)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff91509ed4  1172  blr x16
0xffff91509ed8  1176  b #-0x154 (addr 0xffff91509d84)
0xffff91509edc  1180  580004df       constant pool begin (num_const = 38)    ;; constant pool
0xffff91509ee0  1184  d63f03e0       constant
0xffff91509ee4  1188  d503201f       constant
0xffff91509ee8  1192  91206010       constant
0xffff91509eec  1196  0000ffff       constant
0xffff91509ef0  1200  91406060       constant
0xffff91509ef4  1204  0000ffff       constant
0xffff91509ef8  1208  9142a6c0       constant
0xffff91509efc  1212  0000ffff       constant
0xffff91509f00  1216  91406060       constant
0xffff91509f04  1220  0000ffff       constant
0xffff91509f08  1224  91406060       constant
0xffff91509f0c  1228  0000ffff       constant
0xffff91509f10  1232  36404ba1       constant
0xffff91509f14  1236  00000000       constant
0xffff91509f18  1240  36404bf9       constant
0xffff91509f1c  1244  00000000       constant
0xffff91509f20  1248  91406060       constant
0xffff91509f24  1252  0000ffff       constant
0xffff91509f28  1256  36404ba1       constant
0xffff91509f2c  1260  00000000       constant
0xffff91509f30  1264  36404c51       constant
0xffff91509f34  1268  00000000       constant
0xffff91509f38  1272  36404ca9       constant
0xffff91509f3c  1276  00000000       constant
0xffff91509f40  1280  915099a0       constant
0xffff91509f44  1284  0000ffff       constant
0xffff91509f48  1288  91406820       constant
0xffff91509f4c  1292  0000ffff       constant
0xffff91509f50  1296  91406260       constant
0xffff91509f54  1300  0000ffff       constant
0xffff91509f58  1304  914068e0       constant
0xffff91509f5c  1308  0000ffff       constant
0xffff91509f60  1312  91406820       constant
0xffff91509f64  1316  0000ffff       constant
0xffff91509f68  1320  91406260       constant
0xffff91509f6c  1324  0000ffff       constant
0xffff91509f70  1328  914068e0       constant
0xffff91509f74  1332  0000ffff       constant
0xffff91509f78  1336  movz x16, #0x0
0xffff91509f7c  1340  bl #+0xc (addr 0xffff91509f88)
0xffff91509f80  1344  movz x16, #0x18
0xffff91509f84  1348  bl #+0x4 (addr 0xffff91509f88)
0xffff91509f88  1352  ldr x17, pc+24 (addr 0x0000ffff91509fa0)    ;; lazy deoptimization bailout 4
0xffff91509f8c  1356  add x17, x17, x16
0xffff91509f90  1360  br x17
0xffff91509f94  1364  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91509f98  1368  d63f03e0       constant
0xffff91509f9c  1372  d503201f       constant
0xffff91509fa0  1376  91206020       constant
0xffff91509fa4  1380  0000ffff       constant


Safepoints (size = 99)
0xffff91509af0   176  111000 (sp -> fp)       0
0xffff91509b18   216  111000 (sp -> fp)       1
0xffff91509b84   324  111000 (sp -> fp)       3
0xffff91509c08   456  111000 (sp -> fp)       5
0xffff91509c60   544  111000 (sp -> fp)       6
0xffff91509e84  1092  101000 | x0 | x1 | x8 (sp -> fp)  <none> argc: 2
0xffff91509ecc  1164  101000 | x0 | x5 | x7 (sp -> fp)  <none> argc: 2

RelocInfo (size = 47)
0xffff91509ae8  code target (STUB)  (0xffff91406060)
0xffff91509b10  code target (STUB)  (0xffff9142a6c0)
0xffff91509b3c  runtime entry
0xffff91509b7c  code target (STUB)  (0xffff91406060)
0xffff91509c00  code target (STUB)  (0xffff91406060)
0xffff91509c1c  embedded object  (0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91509c28  embedded object  (0x36404bf9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91509c58  code target (STUB)  (0xffff91406060)
0xffff91509c9c  embedded object  (0x36404ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91509da0  embedded object  (0x36404c51 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91509dac  embedded object  (0x36404ca9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff91509e18  code target (STUB)  (0xffff915099a0)
0xffff91509e54  code target (STUB)  (0xffff91406820)
0xffff91509e7c  code target (STUB)  (0xffff91406260)
0xffff91509e88  code target (STUB)  (0xffff914068e0)
0xffff91509e9c  code target (STUB)  (0xffff91406820)
0xffff91509ec4  code target (STUB)  (0xffff91406260)
0xffff91509ed0  code target (STUB)  (0xffff914068e0)
0xffff91509edc  constant pool (size 156)
0xffff91509f88  runtime entry
0xffff91509f94  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = BinaryOpWithAllocationSiteStub
compiler = crankshaft
Instructions (size = 197)
0xffff9150a080     0  movz x16, #0xa00000000
0xffff9150a084     4  sub csp, jssp, #0x10 (16)
0xffff9150a088     8  stp fp, lr, [jssp, #-16]!
0xffff9150a08c    12  mov fp, jssp
0xffff9150a090    16  sub csp, jssp, #0x28 (40)
0xffff9150a094    20  sub jssp, jssp, #0x28 (40)
0xffff9150a098    24  stur x16, [fp, #-8]
0xffff9150a09c    28  str x2, [jssp, #24]
0xffff9150a0a0    32  str x1, [jssp, #16]
0xffff9150a0a4    36  mov x3, x1
0xffff9150a0a8    40  str x0, [jssp, #8]
0xffff9150a0ac    44  mov x4, x0
0xffff9150a0b0    48  str cp, [jssp]
0xffff9150a0b4    52  mov x5, cp
0xffff9150a0b8    56  tbz w3, #0, #+0x48 (addr 0xffff9150a100)
0xffff9150a0bc    60  ldur x0, [x3, #-1]
0xffff9150a0c0    64  ldrb w0, [x0, #11]
0xffff9150a0c4    68  tbnz w0, #7, #+0x44 (addr 0xffff9150a108)
0xffff9150a0c8    72  mov cp, x5
0xffff9150a0cc    76  mov x1, x3
0xffff9150a0d0    80  mov x0, x4
0xffff9150a0d4    84  ldr x16, pc+36 (addr 0x0000ffff9150a0f8)    ;; code: STUB, StringAddStub, minor: 6
0xffff9150a0d8    88  blr x16
0xffff9150a0dc    92  ldr cp, [jssp]
0xffff9150a0e0    96  mov jssp, fp
0xffff9150a0e4   100  ldp fp, lr, [jssp], #16
0xffff9150a0e8   104  ret
0xffff9150a0ec   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9150a0f0   112  d63f03e0       constant
0xffff9150a0f4   116  d503201f       constant
0xffff9150a0f8   120  91509a40       constant
0xffff9150a0fc   124  0000ffff       constant
0xffff9150a100   128  movz x16, #0x0
0xffff9150a104   132  bl #+0xc (addr 0xffff9150a110)
0xffff9150a108   136  movz x16, #0x8
0xffff9150a10c   140  bl #+0x4 (addr 0xffff9150a110)
0xffff9150a110   144  ldr x17, pc+24 (addr 0x0000ffff9150a128)    ;; lazy deoptimization bailout 0
0xffff9150a114   148  add x17, x17, x16
0xffff9150a118   152  br x17
0xffff9150a11c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9150a120   160  d63f03e0       constant
0xffff9150a124   164  d503201f       constant
0xffff9150a128   168  91206000       constant
0xffff9150a12c   172  0000ffff       constant


Safepoints (size = 21)
0xffff9150a0dc    92  1111000 (sp -> fp)       2

RelocInfo (size = 17)
0xffff9150a0d4  code target (STUB)  (0xffff91509a40)
0xffff9150a0ec  constant pool (size 20)
0xffff9150a110  runtime entry
0xffff9150a11c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = BinaryOpWithAllocationSiteStub
name = BinaryOpWithAllocationSiteStub(ADD_CreateAllocationMementos:String*Generic->String)
compiler = crankshaft
Instructions (size = 197)
0xffff9150a080     0  movz x16, #0xa00000000
0xffff9150a084     4  sub csp, jssp, #0x10 (16)
0xffff9150a088     8  stp fp, lr, [jssp, #-16]!
0xffff9150a08c    12  mov fp, jssp
0xffff9150a090    16  sub csp, jssp, #0x28 (40)
0xffff9150a094    20  sub jssp, jssp, #0x28 (40)
0xffff9150a098    24  stur x16, [fp, #-8]
0xffff9150a09c    28  str x2, [jssp, #24]
0xffff9150a0a0    32  str x1, [jssp, #16]
0xffff9150a0a4    36  mov x3, x1
0xffff9150a0a8    40  str x0, [jssp, #8]
0xffff9150a0ac    44  mov x4, x0
0xffff9150a0b0    48  str cp, [jssp]
0xffff9150a0b4    52  mov x5, cp
0xffff9150a0b8    56  tbz w3, #0, #+0x48 (addr 0xffff9150a100)
0xffff9150a0bc    60  ldur x0, [x3, #-1]
0xffff9150a0c0    64  ldrb w0, [x0, #11]
0xffff9150a0c4    68  tbnz w0, #7, #+0x44 (addr 0xffff9150a108)
0xffff9150a0c8    72  mov cp, x5
0xffff9150a0cc    76  mov x1, x3
0xffff9150a0d0    80  mov x0, x4
0xffff9150a0d4    84  ldr x16, pc+36 (addr 0x0000ffff9150a0f8)    ;; code: STUB, StringAddStub, minor: 6
0xffff9150a0d8    88  blr x16
0xffff9150a0dc    92  ldr cp, [jssp]
0xffff9150a0e0    96  mov jssp, fp
0xffff9150a0e4   100  ldp fp, lr, [jssp], #16
0xffff9150a0e8   104  ret
0xffff9150a0ec   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9150a0f0   112  d63f03e0       constant
0xffff9150a0f4   116  d503201f       constant
0xffff9150a0f8   120  91509a40       constant
0xffff9150a0fc   124  0000ffff       constant
0xffff9150a100   128  movz x16, #0x0
0xffff9150a104   132  bl #+0xc (addr 0xffff9150a110)
0xffff9150a108   136  movz x16, #0x8
0xffff9150a10c   140  bl #+0x4 (addr 0xffff9150a110)
0xffff9150a110   144  ldr x17, pc+24 (addr 0x0000ffff9150a128)    ;; lazy deoptimization bailout 0
0xffff9150a114   148  add x17, x17, x16
0xffff9150a118   152  br x17
0xffff9150a11c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9150a120   160  d63f03e0       constant
0xffff9150a124   164  d503201f       constant
0xffff9150a128   168  91206000       constant
0xffff9150a12c   172  0000ffff       constant


Safepoints (size = 21)
0xffff9150a0dc    92  1111000 (sp -> fp)       2

RelocInfo (size = 17)
0xffff9150a0d4  code target (STUB)  (0xffff91509a40)
0xffff9150a0ec  constant pool (size 20)
0xffff9150a110  runtime entry
0xffff9150a11c  constant pool (size 20)


kind = BINARY_OP_IC
major_key = BinaryOpICWithAllocationSiteStub
ic_state = MEGAMORPHIC
extra_ic_state = 10823
name = BinaryOpICWithAllocationSiteStub(ADD_CreateAllocationMementos:String*Generic->String)
compiler = unknown
Instructions (size = 40)
0xffff9150a1c0     0  ldr x2, pc+24 (addr 0x0000ffff9150a1d8)    ;; object: 0x49b04241 <undefined>
0xffff9150a1c4     4  ldr x16, pc+28 (addr 0x0000ffff9150a1e0)    ;; code: STUB, BinaryOpWithAllocationSiteStub, minor: 10823
0xffff9150a1c8     8  br x16
0xffff9150a1cc    12  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff9150a1d0    16  d63f03e0       constant
0xffff9150a1d4    20  d503201f       constant
0xffff9150a1d8    24  49b04241       constant
0xffff9150a1dc    28  00000000       constant
0xffff9150a1e0    32  9150a080       constant
0xffff9150a1e4    36  0000ffff       constant


RelocInfo (size = 8)
0xffff9150a1c0  embedded object  (0x49b04241 <undefined>)
0xffff9150a1c4  code target (STUB)  (0xffff9150a080)
0xffff9150a1cc  constant pool (size 28)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393223
name = CallICStub(args(7), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff9150b000     0  add x4, x2, x3, asr #29
0xffff9150b004     4  ldur x4, [x4, #15]
0xffff9150b008     8  ldur x5, [x4, #7]
0xffff9150b00c    12  cmp x5, x1
0xffff9150b010    16  b.ne #+0x2c (addr 0xffff9150b03c)
0xffff9150b014    20  tbz w1, #0, #+0x28 (addr 0xffff9150b03c)
0xffff9150b018    24  add x2, x2, x3, asr #29
0xffff9150b01c    28  add x2, x2, #0x18 (24)
0xffff9150b020    32  ldur x3, [x2, #-1]
0xffff9150b024    36  movz x16, #0x200000000
0xffff9150b028    40  add x3, x3, x16
0xffff9150b02c    44  stur x3, [x2, #-1]
0xffff9150b030    48  movz x0, #0x7
0xffff9150b034    52  ldr x16, pc+372 (addr 0x0000ffff9150b1a8)    ;; code: BUILTIN
0xffff9150b038    56  br x16
0xffff9150b03c    60  ldr x16, [x26, #2400]
0xffff9150b040    64  cmp x4, x16
0xffff9150b044    68  b.eq #+0x78 (addr 0xffff9150b0bc)
0xffff9150b048    72  ldur x5, [x4, #-1]
0xffff9150b04c    76  ldr x16, [x26, #2736]
0xffff9150b050    80  cmp x5, x16
0xffff9150b054    84  b.ne #+0x40 (addr 0xffff9150b094)
0xffff9150b058    88  ldur x5, [cp, #39]
0xffff9150b05c    92  ldur x5, [x5, #95]
0xffff9150b060    96  cmp x1, x5
0xffff9150b064   100  b.ne #+0xec (addr 0xffff9150b150)
0xffff9150b068   104  movz x0, #0x7
0xffff9150b06c   108  add x2, x2, x3, asr #29
0xffff9150b070   112  add x2, x2, #0x18 (24)
0xffff9150b074   116  ldur x3, [x2, #-1]
0xffff9150b078   120  movz x16, #0x200000000
0xffff9150b07c   124  add x3, x3, x16
0xffff9150b080   128  stur x3, [x2, #-1]
0xffff9150b084   132  mov x2, x4
0xffff9150b088   136  mov x3, x1
0xffff9150b08c   140  ldr x16, pc+292 (addr 0x0000ffff9150b1b0)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff9150b090   144  br x16
0xffff9150b094   148  ldr x16, [x26, #2568]
0xffff9150b098   152  cmp x4, x16
0xffff9150b09c   156  b.eq #+0xb4 (addr 0xffff9150b150)
0xffff9150b0a0   160  ldur x5, [x4, #-1]
0xffff9150b0a4   164  ldrb w5, [x5, #11]
0xffff9150b0a8   168  cmp x5, #0xc9 (201)
0xffff9150b0ac   172  b.ne #+0xa4 (addr 0xffff9150b150)
0xffff9150b0b0   176  add x4, x2, x3, asr #29
0xffff9150b0b4   180  ldr x5, [x26, #2400]
0xffff9150b0b8   184  stur x5, [x4, #15]
0xffff9150b0bc   188  movz x0, #0x7
0xffff9150b0c0   192  ldr x16, pc+248 (addr 0x0000ffff9150b1b8)    ;; code: BUILTIN
0xffff9150b0c4   196  br x16
0xffff9150b0c8   200  tbz w1, #0, #+0x88 (addr 0xffff9150b150)
0xffff9150b0cc   204  ldur x5, [x1, #-1]
0xffff9150b0d0   208  ldrb w5, [x5, #11]
0xffff9150b0d4   212  cmp x5, #0xc9 (201)
0xffff9150b0d8   216  b.ne #+0x78 (addr 0xffff9150b150)
0xffff9150b0dc   220  ldur x5, [cp, #39]
0xffff9150b0e0   224  ldur x5, [x5, #95]
0xffff9150b0e4   228  cmp x1, x5
0xffff9150b0e8   232  b.eq #+0x68 (addr 0xffff9150b150)
0xffff9150b0ec   236  ldur x4, [x1, #39]
0xffff9150b0f0   240  ldur x4, [x4, #39]
0xffff9150b0f4   244  ldur x5, [cp, #39]
0xffff9150b0f8   248  cmp x4, x5
0xffff9150b0fc   252  b.ne #+0x54 (addr 0xffff9150b150)
0xffff9150b100   256  movz x5, #0x200000000
0xffff9150b104   260  adds x4, x2, x3, asr #29
0xffff9150b108   264  stur x5, [x4, #23]
0xffff9150b10c   268  movz x16, #0xc00000000
0xffff9150b110   272  sub csp, jssp, #0x10 (16)
0xffff9150b114   276  stp fp, lr, [jssp, #-16]!
0xffff9150b118   280  sub csp, jssp, #0x10 (16)
0xffff9150b11c   284  str x16, [jssp, #-8]!
0xffff9150b120   288  ldr x17, pc+160 (addr 0x0000ffff9150b1c0)    ;; object: 0xffff9150afa1 <Code: CALL_IC>
0xffff9150b124   292  sub csp, jssp, #0x10 (16)
0xffff9150b128   296  str x17, [jssp, #-8]!
0xffff9150b12c   300  add fp, jssp, #0x10 (16)
0xffff9150b130   304  sub csp, jssp, #0x8 (8)
0xffff9150b134   308  str x1, [jssp, #-8]!
0xffff9150b138   312  ldr x16, pc+144 (addr 0x0000ffff9150b1c8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff9150b13c   316  blr x16
0xffff9150b140   320  ldr x1, [jssp], #8
0xffff9150b144   324  mov jssp, fp
0xffff9150b148   328  ldp fp, lr, [jssp], #16
0xffff9150b14c   332  b #-0x11c (addr 0xffff9150b030)
0xffff9150b150   336  movz x16, #0xc00000000
0xffff9150b154   340  sub csp, jssp, #0x10 (16)
0xffff9150b158   344  stp fp, lr, [jssp, #-16]!
0xffff9150b15c   348  sub csp, jssp, #0x10 (16)
0xffff9150b160   352  str x16, [jssp, #-8]!
0xffff9150b164   356  ldr x17, pc+108 (addr 0x0000ffff9150b1d0)    ;; object: 0xffff9150afa1 <Code: CALL_IC>
0xffff9150b168   360  sub csp, jssp, #0x10 (16)
0xffff9150b16c   364  str x17, [jssp, #-8]!
0xffff9150b170   368  add fp, jssp, #0x10 (16)
0xffff9150b174   372  sub csp, jssp, #0x18 (24)
0xffff9150b178   376  stp x3, x2, [jssp, #-24]!
0xffff9150b17c   380  str x1, [jssp, #16]
0xffff9150b180   384  movz x0, #0x3
0xffff9150b184   388  ldr x1, pc+84 (addr 0x0000ffff9150b1d8)    ;; external reference (Runtime::CallIC_Miss)
0xffff9150b188   392  ldr x16, pc+88 (addr 0x0000ffff9150b1e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9150b18c   396  blr x16
0xffff9150b190   400  mov x1, x0
0xffff9150b194   404  mov jssp, fp
0xffff9150b198   408  ldp fp, lr, [jssp], #16
0xffff9150b19c   412  b #-0xe0 (addr 0xffff9150b0bc)
0xffff9150b1a0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff9150b1a4   420  d63f03e0       constant
0xffff9150b1a8   424  9141e820       constant
0xffff9150b1ac   428  0000ffff       constant
0xffff9150b1b0   432  91433b00       constant
0xffff9150b1b4   436  0000ffff       constant
0xffff9150b1b8   440  9141f820       constant
0xffff9150b1bc   444  0000ffff       constant
0xffff9150b1c0   448  9150afa1       constant
0xffff9150b1c4   452  0000ffff       constant
0xffff9150b1c8   456  9140ddc0       constant
0xffff9150b1cc   460  0000ffff       constant
0xffff9150b1d0   464  9150afa1       constant
0xffff9150b1d4   468  0000ffff       constant
0xffff9150b1d8   472  00c86928       constant
0xffff9150b1dc   476  00000000       constant
0xffff9150b1e0   480  91406060       constant
0xffff9150b1e4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff9150b034  code target (BUILTIN)  (0xffff9141e820)
0xffff9150b08c  code target (STUB)  (0xffff91433b00)
0xffff9150b0c0  code target (BUILTIN)  (0xffff9141f820)
0xffff9150b120  embedded object  (0xffff9150afa1 <Code: CALL_IC>)
0xffff9150b138  code target (STUB)  (0xffff9140ddc0)
0xffff9150b164  embedded object  (0xffff9150afa1 <Code: CALL_IC>)
0xffff9150b184  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff9150b188  code target (STUB)  (0xffff91406060)
0xffff9150b1a0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393223
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff9150b260     0  ldur x2, [fp, #-16]
0xffff9150b264     4  ldur x2, [x2, #31]
0xffff9150b268     8  ldur x2, [x2, #87]
0xffff9150b26c    12  ldr x16, pc+20 (addr 0x0000ffff9150b280)    ;; code: CALL_IC, GENERIC
0xffff9150b270    16  br x16
0xffff9150b274    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff9150b278    24  d63f03e0       constant
0xffff9150b27c    28  d503201f       constant
0xffff9150b280    32  9150b000       constant
0xffff9150b284    36  0000ffff       constant


RelocInfo (size = 7)
0xffff9150b26c  code target (CALL_IC)  (0xffff9150b000)
0xffff9150b274  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = isFinite
compiler = unknown
Instructions (size = 120)
0xffff9150eb40     0  sub csp, jssp, #0x8 (8)
0xffff9150eb44     4  str x3, [jssp, #-8]!
0xffff9150eb48     8  sub csp, jssp, #0x8 (8)
0xffff9150eb4c    12  str x0, [jssp, #-8]!
0xffff9150eb50    16  ldr x0, pc+80 (addr 0x0000ffff9150eba0)    ;; object: 0x49bc5d51 Cell for 0
0xffff9150eb54    20  ldur x0, [x0, #7]
0xffff9150eb58    24  cmp x0, #0x0 (0)
0xffff9150eb5c    28  b.ne #+0x2c (addr 0xffff9150eb88)
0xffff9150eb60    32  ldr x0, pc+72 (addr 0x0000ffff9150eba8)    ;; object: 0x408f10e9 WeakCell for 0x49b584e1 PropertyCell for 0x40868cf1 <JS Function isFinite (SharedFunctionInfo 0x49b539f1)>
0xffff9150eb64    36  ldur x0, [x0, #7]
0xffff9150eb68    40  tbz w0, #0, #+0x20 (addr 0xffff9150eb88)
0xffff9150eb6c    44  ldur x0, [x0, #15]
0xffff9150eb70    48  ldr x16, [x26, #88]
0xffff9150eb74    52  cmp x0, x16
0xffff9150eb78    56  b.eq #+0x10 (addr 0xffff9150eb88)
0xffff9150eb7c    60  add jssp, jssp, #0x10 (16)
0xffff9150eb80    64  ret
0xffff9150eb84    68  b #+0x14 (addr 0xffff9150eb98)
0xffff9150eb88    72  ldr x0, [jssp], #8
0xffff9150eb8c    76  ldr x3, [jssp], #8
0xffff9150eb90    80  ldr x16, pc+32 (addr 0x0000ffff9150ebb0)    ;; code: BUILTIN
0xffff9150eb94    84  br x16
0xffff9150eb98    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff9150eb9c    92  d63f03e0       constant
0xffff9150eba0    96  49bc5d51       constant
0xffff9150eba4   100  00000000       constant
0xffff9150eba8   104  408f10e9       constant
0xffff9150ebac   108  00000000       constant
0xffff9150ebb0   112  914222e0       constant
0xffff9150ebb4   116  0000ffff       constant


RelocInfo (size = 9)
0xffff9150eb50  embedded object  (0x49bc5d51 Cell for 0)
0xffff9150eb60  embedded object  (0x408f10e9 WeakCell for 0x49b584e1 PropertyCell for 0x40868cf1 <JS Function isFinite (SharedFunctionInfo 0x49b539f1)>)
0xffff9150eb90  code target (BUILTIN)  (0xffff914222e0)
0xffff9150eb98  constant pool (size 32)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*GENERIC -> GENERIC
compare_operation = EQ
name = CompareICStub
compiler = unknown
Instructions (size = 664)
0xffff9150ec20     0  orr x16, x1, x0
0xffff9150ec24     4  tbnz w16, #0, #+0x10 (addr 0xffff9150ec34)
0xffff9150ec28     8  asr x1, x1, #32
0xffff9150ec2c    12  sub x0, x1, x0, asr #32
0xffff9150ec30    16  ret
0xffff9150ec34    20  cmp x0, x1
0xffff9150ec38    24  b.ne #+0x30 (addr 0xffff9150ec68)
0xffff9150ec3c    28  ldur x16, [x0, #-1]
0xffff9150ec40    32  ldr x17, [x26, #120]
0xffff9150ec44    36  cmp x16, x17
0xffff9150ec48    40  b.eq #+0xc (addr 0xffff9150ec54)
0xffff9150ec4c    44  movz x0, #0x0
0xffff9150ec50    48  ret
0xffff9150ec54    52  ldur d0, [x0, #7]
0xffff9150ec58    56  fcmp d0, d0
0xffff9150ec5c    60  b.vc #-0x10 (addr 0xffff9150ec4c)
0xffff9150ec60    64  movn x0, #0x0
0xffff9150ec64    68  ret
0xffff9150ec68    72  and x16, x1, x0
0xffff9150ec6c    76  tbnz w16, #0, #+0x58 (addr 0xffff9150ecc4)
0xffff9150ec70    80  tbz w0, #0, #+0x20 (addr 0xffff9150ec90)
0xffff9150ec74    84  ldur x16, [x0, #-1]
0xffff9150ec78    88  ldr x17, [x26, #120]
0xffff9150ec7c    92  cmp x16, x17
0xffff9150ec80    96  b.ne #+0x148 (addr 0xffff9150edc8)
0xffff9150ec84   100  ldur d0, [x0, #7]
0xffff9150ec88   104  scvtf d1, x1, #32
0xffff9150ec8c   108  b #+0x1c (addr 0xffff9150eca8)
0xffff9150ec90   112  ldur x16, [x1, #-1]
0xffff9150ec94   116  ldr x17, [x26, #120]
0xffff9150ec98   120  cmp x16, x17
0xffff9150ec9c   124  b.ne #+0x12c (addr 0xffff9150edc8)
0xffff9150eca0   128  ldur d1, [x1, #7]
0xffff9150eca4   132  scvtf d0, x0, #32
0xffff9150eca8   136  fcmp d1, d0
0xffff9150ecac   140  b.vs #+0x10 (addr 0xffff9150ecbc)
0xffff9150ecb0   144  cset x0, gt
0xffff9150ecb4   148  csinv x0, x0, xzr, ge
0xffff9150ecb8   152  ret
0xffff9150ecbc   156  movn x0, #0x0
0xffff9150ecc0   160  ret
0xffff9150ecc4   164  ldur x10, [x0, #-1]
0xffff9150ecc8   168  ldur x12, [x1, #-1]
0xffff9150eccc   172  ldrb w11, [x10, #11]
0xffff9150ecd0   176  ldrb w13, [x12, #11]
0xffff9150ecd4   180  cmp x11, #0x81 (129)
0xffff9150ecd8   184  b.ne #+0x18 (addr 0xffff9150ecf0)
0xffff9150ecdc   188  cmp x12, x10
0xffff9150ece0   192  b.ne #+0x74 (addr 0xffff9150ed54)
0xffff9150ece4   196  ldur d1, [x1, #7]
0xffff9150ece8   200  ldur d0, [x0, #7]
0xffff9150ecec   204  b #-0x44 (addr 0xffff9150eca8)
0xffff9150ecf0   208  tbnz w11, #7, #+0x14 (addr 0xffff9150ed04)
0xffff9150ecf4   212  tbnz w11, #6, #+0x60 (addr 0xffff9150ed54)
0xffff9150ecf8   216  tbnz w13, #7, #+0xd0 (addr 0xffff9150edc8)
0xffff9150ecfc   220  tbnz w13, #6, #+0x58 (addr 0xffff9150ed54)
0xffff9150ed00   224  ret
0xffff9150ed04   228  ldrb w11, [x10, #12]
0xffff9150ed08   232  ldrb w13, [x12, #12]
0xffff9150ed0c   236  tbnz w11, #4, #+0x24 (addr 0xffff9150ed30)
0xffff9150ed10   240  tbnz w13, #4, #+0x1c (addr 0xffff9150ed2c)
0xffff9150ed14   244  ldrb w11, [x10, #11]
0xffff9150ed18   248  cmp x11, #0xb1 (177)
0xffff9150ed1c   252  b.lt #+0xac (addr 0xffff9150edc8)
0xffff9150ed20   256  ldrb w13, [x12, #11]
0xffff9150ed24   260  cmp x13, #0xb1 (177)
0xffff9150ed28   264  b.lt #+0xa0 (addr 0xffff9150edc8)
0xffff9150ed2c   268  ret
0xffff9150ed30   272  tbz w13, #4, #-0x4 (addr 0xffff9150ed2c)
0xffff9150ed34   276  ldrb w11, [x10, #11]
0xffff9150ed38   280  cmp x11, #0x83 (131)
0xffff9150ed3c   284  b.eq #+0x10 (addr 0xffff9150ed4c)
0xffff9150ed40   288  ldrb w13, [x12, #11]
0xffff9150ed44   292  cmp x13, #0x83 (131)
0xffff9150ed48   296  b.ne #-0x1c (addr 0xffff9150ed2c)
0xffff9150ed4c   300  movz x0, #0x0
0xffff9150ed50   304  ret
0xffff9150ed54   308  movz x16, #0x87
0xffff9150ed58   312  and x14, x13, x16
0xffff9150ed5c   316  movz x16, #0x87
0xffff9150ed60   320  and x15, x11, x16
0xffff9150ed64   324  cmp x14, #0x4 (4)
0xffff9150ed68   328  ccmp x15, #4, #nzcv, eq
0xffff9150ed6c   332  b.ne #+0x5c (addr 0xffff9150edc8)
0xffff9150ed70   336  ldur x10, [x1, #15]
0xffff9150ed74   340  ldur x11, [x0, #15]
0xffff9150ed78   344  cmp x10, x11
0xffff9150ed7c   348  b.eq #+0xc (addr 0xffff9150ed88)
0xffff9150ed80   352  movz x0, #0x100000000
0xffff9150ed84   356  ret
0xffff9150ed88   360  cbnz x10, #+0xc (addr 0xffff9150ed94)
0xffff9150ed8c   364  movz x0, #0x0
0xffff9150ed90   368  ret
0xffff9150ed94   372  asr x10, x10, #32
0xffff9150ed98   376  add x11, x10, #0x17 (23)
0xffff9150ed9c   380  add x1, x1, x11
0xffff9150eda0   384  add x0, x0, x11
0xffff9150eda4   388  neg x10, x10
0xffff9150eda8   392  ldrb w11, [x1, x10]
0xffff9150edac   396  ldrb w12, [x0, x10]
0xffff9150edb0   400  cmp x11, x12
0xffff9150edb4   404  b.ne #-0x34 (addr 0xffff9150ed80)
0xffff9150edb8   408  add x10, x10, #0x1 (1)
0xffff9150edbc   412  cbnz x10, #-0x14 (addr 0xffff9150eda8)
0xffff9150edc0   416  movz x0, #0x0
0xffff9150edc4   420  ret
0xffff9150edc8   424  movz x16, #0xc00000000
0xffff9150edcc   428  sub csp, jssp, #0x10 (16)
0xffff9150edd0   432  stp fp, lr, [jssp, #-16]!
0xffff9150edd4   436  sub csp, jssp, #0x10 (16)
0xffff9150edd8   440  str x16, [jssp, #-8]!
0xffff9150eddc   444  ldr x17, pc+172 (addr 0x0000ffff9150ee88)    ;; object: 0xffff9150ebc1 <Code: COMPARE_IC>
0xffff9150ede0   448  sub csp, jssp, #0x10 (16)
0xffff9150ede4   452  str x17, [jssp, #-8]!
0xffff9150ede8   456  add fp, jssp, #0x10 (16)
0xffff9150edec   460  sub csp, jssp, #0x10 (16)
0xffff9150edf0   464  stp x0, x1, [jssp, #-16]!
0xffff9150edf4   468  movz x0, #0x2
0xffff9150edf8   472  ldr x1, pc+152 (addr 0x0000ffff9150ee90)    ;; external reference (Runtime::Equal)
0xffff9150edfc   476  ldr x16, pc+156 (addr 0x0000ffff9150ee98)    ;; code: STUB, CEntryStub, minor: 4
0xffff9150ee00   480  blr x16
0xffff9150ee04   484  mov jssp, fp
0xffff9150ee08   488  ldp fp, lr, [jssp], #16
0xffff9150ee0c   492  ldr x1, [x26, #64]
0xffff9150ee10   496  sub x0, x0, x1
0xffff9150ee14   500  ret
0xffff9150ee18   504  movz x16, #0xc00000000
0xffff9150ee1c   508  sub csp, jssp, #0x10 (16)
0xffff9150ee20   512  stp fp, lr, [jssp, #-16]!
0xffff9150ee24   516  sub csp, jssp, #0x10 (16)
0xffff9150ee28   520  str x16, [jssp, #-8]!
0xffff9150ee2c   524  ldr x17, pc+116 (addr 0x0000ffff9150eea0)    ;; object: 0xffff9150ebc1 <Code: COMPARE_IC>
0xffff9150ee30   528  sub csp, jssp, #0x10 (16)
0xffff9150ee34   532  str x17, [jssp, #-8]!
0xffff9150ee38   536  add fp, jssp, #0x10 (16)
0xffff9150ee3c   540  sub csp, jssp, #0x18 (24)
0xffff9150ee40   544  stp lr, x0, [jssp, #-24]!
0xffff9150ee44   548  str x1, [jssp, #16]
0xffff9150ee48   552  movz x10, #0x2d00000000
0xffff9150ee4c   556  sub csp, jssp, #0x18 (24)
0xffff9150ee50   560  stp x10, x0, [jssp, #-24]!
0xffff9150ee54   564  str x1, [jssp, #16]
0xffff9150ee58   568  movz x0, #0x3
0xffff9150ee5c   572  ldr x1, pc+76 (addr 0x0000ffff9150eea8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff9150ee60   576  ldr x16, pc+80 (addr 0x0000ffff9150eeb0)    ;; code: STUB, CEntryStub, minor: 4
0xffff9150ee64   580  blr x16
0xffff9150ee68   584  add x11, x0, #0x5f (95)
0xffff9150ee6c   588  ldr x1, [jssp, #16]
0xffff9150ee70   592  ldp lr, x0, [jssp], #24
0xffff9150ee74   596  mov jssp, fp
0xffff9150ee78   600  ldp fp, lr, [jssp], #16
0xffff9150ee7c   604  br x11
0xffff9150ee80   608  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff9150ee84   612  d63f03e0       constant
0xffff9150ee88   616  9150ebc1       constant
0xffff9150ee8c   620  0000ffff       constant
0xffff9150ee90   624  00e503b8       constant
0xffff9150ee94   628  00000000       constant
0xffff9150ee98   632  91406060       constant
0xffff9150ee9c   636  0000ffff       constant
0xffff9150eea0   640  9150ebc1       constant
0xffff9150eea4   644  0000ffff       constant
0xffff9150eea8   648  00c8a980       constant
0xffff9150eeac   652  00000000       constant
0xffff9150eeb0   656  91406060       constant
0xffff9150eeb4   660  0000ffff       constant


RelocInfo (size = 16)
0xffff9150eddc  embedded object  (0xffff9150ebc1 <Code: COMPARE_IC>)
0xffff9150edf8  external reference (Runtime::Equal)  (0xe503b8)
0xffff9150edfc  code target (STUB)  (0xffff91406060)
0xffff9150ee2c  embedded object  (0xffff9150ebc1 <Code: COMPARE_IC>)
0xffff9150ee5c  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff9150ee60  code target (STUB)  (0xffff91406060)
0xffff9150ee80  constant pool (size 56)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = NUMBER*NUMBER -> NUMBER
compare_operation = EQ
name = CompareICStub
compiler = unknown
Instructions (size = 232)
0xffff9150ef20     0  scvtf d0, x0, #32
0xffff9150ef24     4  scvtf d1, x1, #32
0xffff9150ef28     8  tbz w0, #0, #+0x18 (addr 0xffff9150ef40)
0xffff9150ef2c    12  ldur x16, [x0, #-1]
0xffff9150ef30    16  ldr x17, [x26, #120]
0xffff9150ef34    20  cmp x16, x17
0xffff9150ef38    24  b.ne #+0x3c (addr 0xffff9150ef74)
0xffff9150ef3c    28  ldur d0, [x0, #7]
0xffff9150ef40    32  tbz w1, #0, #+0x18 (addr 0xffff9150ef58)
0xffff9150ef44    36  ldur x16, [x1, #-1]
0xffff9150ef48    40  ldr x17, [x26, #120]
0xffff9150ef4c    44  cmp x16, x17
0xffff9150ef50    48  b.ne #+0x24 (addr 0xffff9150ef74)
0xffff9150ef54    52  ldur d1, [x1, #7]
0xffff9150ef58    56  fcmp d1, d0
0xffff9150ef5c    60  b.vs #+0x10 (addr 0xffff9150ef6c)
0xffff9150ef60    64  cset x0, gt
0xffff9150ef64    68  csinv x0, x0, xzr, ge
0xffff9150ef68    72  ret
0xffff9150ef6c    76  ldr x16, pc+124 (addr 0x0000ffff9150efe8)    ;; code: COMPARE_IC, GENERIC
0xffff9150ef70    80  br x16
0xffff9150ef74    84  movz x16, #0xc00000000
0xffff9150ef78    88  sub csp, jssp, #0x10 (16)
0xffff9150ef7c    92  stp fp, lr, [jssp, #-16]!
0xffff9150ef80    96  sub csp, jssp, #0x10 (16)
0xffff9150ef84   100  str x16, [jssp, #-8]!
0xffff9150ef88   104  ldr x17, pc+104 (addr 0x0000ffff9150eff0)    ;; object: 0xffff9150eec1 <Code: COMPARE_IC>
0xffff9150ef8c   108  sub csp, jssp, #0x10 (16)
0xffff9150ef90   112  str x17, [jssp, #-8]!
0xffff9150ef94   116  add fp, jssp, #0x10 (16)
0xffff9150ef98   120  sub csp, jssp, #0x18 (24)
0xffff9150ef9c   124  stp lr, x0, [jssp, #-24]!
0xffff9150efa0   128  str x1, [jssp, #16]
0xffff9150efa4   132  movz x10, #0x2d00000000
0xffff9150efa8   136  sub csp, jssp, #0x18 (24)
0xffff9150efac   140  stp x10, x0, [jssp, #-24]!
0xffff9150efb0   144  str x1, [jssp, #16]
0xffff9150efb4   148  movz x0, #0x3
0xffff9150efb8   152  ldr x1, pc+64 (addr 0x0000ffff9150eff8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff9150efbc   156  ldr x16, pc+68 (addr 0x0000ffff9150f000)    ;; code: STUB, CEntryStub, minor: 4
0xffff9150efc0   160  blr x16
0xffff9150efc4   164  add x11, x0, #0x5f (95)
0xffff9150efc8   168  ldr x1, [jssp, #16]
0xffff9150efcc   172  ldp lr, x0, [jssp], #24
0xffff9150efd0   176  mov jssp, fp
0xffff9150efd4   180  ldp fp, lr, [jssp], #16
0xffff9150efd8   184  br x11
0xffff9150efdc   188  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff9150efe0   192  d63f03e0       constant
0xffff9150efe4   196  d503201f       constant
0xffff9150efe8   200  9150ec20       constant
0xffff9150efec   204  0000ffff       constant
0xffff9150eff0   208  9150eec1       constant
0xffff9150eff4   212  0000ffff       constant
0xffff9150eff8   216  00c8a980       constant
0xffff9150effc   220  00000000       constant
0xffff9150f000   224  91406060       constant
0xffff9150f004   228  0000ffff       constant


RelocInfo (size = 13)
0xffff9150ef6c  code target (COMPARE_IC)  (0xffff9150ec20)
0xffff9150ef88  embedded object  (0xffff9150eec1 <Code: COMPARE_IC>)
0xffff9150efb8  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff9150efbc  code target (STUB)  (0xffff91406060)
0xffff9150efdc  constant pool (size 44)


./vuln.js utf-8 (e, d) => {
  console.log(d.length);
}
--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 437)
0xffff91511180     0  ldur x4, [x1, #15]
0xffff91511184     4  ldur w5, [x4, #11]
0xffff91511188     8  ldur x16, [x1, #23]
0xffff9151118c    12  ldur x16, [x16, #39]
0xffff91511190    16  tst x16, #0x8
0xffff91511194    20  b.ne #+0x134 (addr 0xffff915112c8)
0xffff91511198    24  ldur x6, [x4, #23]
0xffff9151119c    28  ldur x4, [x4, #15]
0xffff915111a0    32  add x4, x6, x4
0xffff915111a4    36  tbnz w2, #0, #+0x2c (addr 0xffff915111d0)
0xffff915111a8    40  asr x7, x2, #32
0xffff915111ac    44  cmp w7, w5
0xffff915111b0    48  b.hs #+0x128 (addr 0xffff915112d8)
0xffff915111b4    52  ldr w2, [x4, w7, sxtw #2]
0xffff915111b8    56  movn w16, #0x80000000
0xffff915111bc    60  cmp w2, w16
0xffff915111c0    64  b.hi #+0x58 (addr 0xffff91511218)
0xffff915111c4    68  lsl x3, x2, #32
0xffff915111c8    72  mov x0, x3
0xffff915111cc    76  ret
0xffff915111d0    80  sub csp, jssp, #0x10 (16)
0xffff915111d4    84  stp fp, lr, [jssp, #-16]!
0xffff915111d8    88  movz fp, #0xa00000000
0xffff915111dc    92  sub csp, jssp, #0x8 (8)
0xffff915111e0    96  str fp, [jssp, #-8]!
0xffff915111e4   100  add fp, jssp, #0x8 (8)
0xffff915111e8   104  ldur x16, [x2, #-1]
0xffff915111ec   108  ldr x17, [x26, #120]
0xffff915111f0   112  cmp x16, x17
0xffff915111f4   116  b.ne #+0xf4 (addr 0xffff915112e8)
0xffff915111f8   120  ldur d29, [x2, #7]
0xffff915111fc   124  fcvtzs w7, d29
0xffff91511200   128  scvtf d0, w7
0xffff91511204   132  fcmp d29, d0
0xffff91511208   136  b.ne #+0xe0 (addr 0xffff915112e8)
0xffff9151120c   140  ldr lr, [jssp, #16]
0xffff91511210   144  ldp xzr, fp, [jssp], #24
0xffff91511214   148  b #-0x68 (addr 0xffff915111ac)
0xffff91511218   152  sub csp, jssp, #0x10 (16)
0xffff9151121c   156  stp fp, lr, [jssp, #-16]!
0xffff91511220   160  movz fp, #0xa00000000
0xffff91511224   164  sub csp, jssp, #0x8 (8)
0xffff91511228   168  str fp, [jssp, #-8]!
0xffff9151122c   172  add fp, jssp, #0x8 (8)
0xffff91511230   176  movz x1, #0xf2c0
0xffff91511234   180  movk x1, #0x4117, lsl #16
0xffff91511238   184  ldp x3, x0, [x1]
0xffff9151123c   188  adds x16, x3, #0x10 (16)
0xffff91511240   192  ccmp x16, x0, #nzCv, lo
0xffff91511244   196  b.hi #+0x18 (addr 0xffff9151125c)
0xffff91511248   200  str x16, [x1]
0xffff9151124c   204  ldr x1, [x26, #120]
0xffff91511250   208  str x1, [x3]
0xffff91511254   212  orr x3, x3, #0x1
0xffff91511258   216  b #+0x38 (addr 0xffff91511290)
0xffff9151125c   220  movz x3, #0x0
0xffff91511260   224  mov x16, lr
0xffff91511264   228  ldr x17, pc+76 (addr 0x0000ffff915112b0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91511268   232  blr x17
0xffff9151126c   236  ldur cp, [fp, #-8]
0xffff91511270   240  movz x0, #0x0
0xffff91511274   244  movz x1, #0x4b48
0xffff91511278   248  movk x1, #0xe4, lsl #16
0xffff9151127c   252  ldr x16, pc+60 (addr 0x0000ffff915112b8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91511280   256  blr x16
0xffff91511284   260  str x0, [jssp, #24]
0xffff91511288   264  ldr x16, pc+56 (addr 0x0000ffff915112c0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9151128c   268  blr x16
0xffff91511290   272  ucvtf d29, w2
0xffff91511294   276  stur d29, [x3, #7]
0xffff91511298   280  ldr lr, [jssp, #16]
0xffff9151129c   284  ldp xzr, fp, [jssp], #24
0xffff915112a0   288  b #-0xd8 (addr 0xffff915111c8)
0xffff915112a4   292  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff915112a8   296  d63f03e0       constant
0xffff915112ac   300  d503201f       constant
0xffff915112b0   304  91406820       constant
0xffff915112b4   308  0000ffff       constant
0xffff915112b8   312  91406260       constant
0xffff915112bc   316  0000ffff       constant
0xffff915112c0   320  914068e0       constant
0xffff915112c4   324  0000ffff       constant
0xffff915112c8   328  movz x16, #0x0
0xffff915112cc   332  sub csp, jssp, #0x10 (16)
0xffff915112d0   336  stp fp, lr, [jssp, #-16]!
0xffff915112d4   340  bl #+0x1c (addr 0xffff915112f0)
0xffff915112d8   344  movz x16, #0x8
0xffff915112dc   348  sub csp, jssp, #0x10 (16)
0xffff915112e0   352  stp fp, lr, [jssp, #-16]!
0xffff915112e4   356  bl #+0xc (addr 0xffff915112f0)
0xffff915112e8   360  movz x16, #0x10
0xffff915112ec   364  bl #+0x14 (addr 0xffff91511300)
0xffff915112f0   368  movz x17, #0xa00000000
0xffff915112f4   372  sub csp, jssp, #0x10 (16)
0xffff915112f8   376  stp x17, cp, [jssp, #-16]!
0xffff915112fc   380  add fp, jssp, #0x10 (16)
0xffff91511300   384  ldr x17, pc+24 (addr 0x0000ffff91511318)    ;; lazy deoptimization bailout 0
0xffff91511304   388  add x17, x17, x16
0xffff91511308   392  br x17
0xffff9151130c   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91511310   400  d63f03e0       constant
0xffff91511314   404  d503201f       constant
0xffff91511318   408  91206000       constant
0xffff9151131c   412  0000ffff       constant


Safepoints (size = 21)
0xffff91511284   260  000 | x3 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91511264  code target (STUB)  (0xffff91406820)
0xffff9151127c  code target (STUB)  (0xffff91406260)
0xffff91511288  code target (STUB)  (0xffff914068e0)
0xffff915112a4  constant pool (size 36)
0xffff91511300  runtime entry
0xffff9151130c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 437)
0xffff91511180     0  ldur x4, [x1, #15]
0xffff91511184     4  ldur w5, [x4, #11]
0xffff91511188     8  ldur x16, [x1, #23]
0xffff9151118c    12  ldur x16, [x16, #39]
0xffff91511190    16  tst x16, #0x8
0xffff91511194    20  b.ne #+0x134 (addr 0xffff915112c8)
0xffff91511198    24  ldur x6, [x4, #23]
0xffff9151119c    28  ldur x4, [x4, #15]
0xffff915111a0    32  add x4, x6, x4
0xffff915111a4    36  tbnz w2, #0, #+0x2c (addr 0xffff915111d0)
0xffff915111a8    40  asr x7, x2, #32
0xffff915111ac    44  cmp w7, w5
0xffff915111b0    48  b.hs #+0x128 (addr 0xffff915112d8)
0xffff915111b4    52  ldr w2, [x4, w7, sxtw #2]
0xffff915111b8    56  movn w16, #0x80000000
0xffff915111bc    60  cmp w2, w16
0xffff915111c0    64  b.hi #+0x58 (addr 0xffff91511218)
0xffff915111c4    68  lsl x3, x2, #32
0xffff915111c8    72  mov x0, x3
0xffff915111cc    76  ret
0xffff915111d0    80  sub csp, jssp, #0x10 (16)
0xffff915111d4    84  stp fp, lr, [jssp, #-16]!
0xffff915111d8    88  movz fp, #0xa00000000
0xffff915111dc    92  sub csp, jssp, #0x8 (8)
0xffff915111e0    96  str fp, [jssp, #-8]!
0xffff915111e4   100  add fp, jssp, #0x8 (8)
0xffff915111e8   104  ldur x16, [x2, #-1]
0xffff915111ec   108  ldr x17, [x26, #120]
0xffff915111f0   112  cmp x16, x17
0xffff915111f4   116  b.ne #+0xf4 (addr 0xffff915112e8)
0xffff915111f8   120  ldur d29, [x2, #7]
0xffff915111fc   124  fcvtzs w7, d29
0xffff91511200   128  scvtf d0, w7
0xffff91511204   132  fcmp d29, d0
0xffff91511208   136  b.ne #+0xe0 (addr 0xffff915112e8)
0xffff9151120c   140  ldr lr, [jssp, #16]
0xffff91511210   144  ldp xzr, fp, [jssp], #24
0xffff91511214   148  b #-0x68 (addr 0xffff915111ac)
0xffff91511218   152  sub csp, jssp, #0x10 (16)
0xffff9151121c   156  stp fp, lr, [jssp, #-16]!
0xffff91511220   160  movz fp, #0xa00000000
0xffff91511224   164  sub csp, jssp, #0x8 (8)
0xffff91511228   168  str fp, [jssp, #-8]!
0xffff9151122c   172  add fp, jssp, #0x8 (8)
0xffff91511230   176  movz x1, #0xf2c0
0xffff91511234   180  movk x1, #0x4117, lsl #16
0xffff91511238   184  ldp x3, x0, [x1]
0xffff9151123c   188  adds x16, x3, #0x10 (16)
0xffff91511240   192  ccmp x16, x0, #nzCv, lo
0xffff91511244   196  b.hi #+0x18 (addr 0xffff9151125c)
0xffff91511248   200  str x16, [x1]
0xffff9151124c   204  ldr x1, [x26, #120]
0xffff91511250   208  str x1, [x3]
0xffff91511254   212  orr x3, x3, #0x1
0xffff91511258   216  b #+0x38 (addr 0xffff91511290)
0xffff9151125c   220  movz x3, #0x0
0xffff91511260   224  mov x16, lr
0xffff91511264   228  ldr x17, pc+76 (addr 0x0000ffff915112b0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff91511268   232  blr x17
0xffff9151126c   236  ldur cp, [fp, #-8]
0xffff91511270   240  movz x0, #0x0
0xffff91511274   244  movz x1, #0x4b48
0xffff91511278   248  movk x1, #0xe4, lsl #16
0xffff9151127c   252  ldr x16, pc+60 (addr 0x0000ffff915112b8)    ;; code: STUB, CEntryStub, minor: 5
0xffff91511280   256  blr x16
0xffff91511284   260  str x0, [jssp, #24]
0xffff91511288   264  ldr x16, pc+56 (addr 0x0000ffff915112c0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff9151128c   268  blr x16
0xffff91511290   272  ucvtf d29, w2
0xffff91511294   276  stur d29, [x3, #7]
0xffff91511298   280  ldr lr, [jssp, #16]
0xffff9151129c   284  ldp xzr, fp, [jssp], #24
0xffff915112a0   288  b #-0xd8 (addr 0xffff915111c8)
0xffff915112a4   292  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff915112a8   296  d63f03e0       constant
0xffff915112ac   300  d503201f       constant
0xffff915112b0   304  91406820       constant
0xffff915112b4   308  0000ffff       constant
0xffff915112b8   312  91406260       constant
0xffff915112bc   316  0000ffff       constant
0xffff915112c0   320  914068e0       constant
0xffff915112c4   324  0000ffff       constant
0xffff915112c8   328  movz x16, #0x0
0xffff915112cc   332  sub csp, jssp, #0x10 (16)
0xffff915112d0   336  stp fp, lr, [jssp, #-16]!
0xffff915112d4   340  bl #+0x1c (addr 0xffff915112f0)
0xffff915112d8   344  movz x16, #0x8
0xffff915112dc   348  sub csp, jssp, #0x10 (16)
0xffff915112e0   352  stp fp, lr, [jssp, #-16]!
0xffff915112e4   356  bl #+0xc (addr 0xffff915112f0)
0xffff915112e8   360  movz x16, #0x10
0xffff915112ec   364  bl #+0x14 (addr 0xffff91511300)
0xffff915112f0   368  movz x17, #0xa00000000
0xffff915112f4   372  sub csp, jssp, #0x10 (16)
0xffff915112f8   376  stp x17, cp, [jssp, #-16]!
0xffff915112fc   380  add fp, jssp, #0x10 (16)
0xffff91511300   384  ldr x17, pc+24 (addr 0x0000ffff91511318)    ;; lazy deoptimization bailout 0
0xffff91511304   388  add x17, x17, x16
0xffff91511308   392  br x17
0xffff9151130c   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff91511310   400  d63f03e0       constant
0xffff91511314   404  d503201f       constant
0xffff91511318   408  91206000       constant
0xffff9151131c   412  0000ffff       constant


Safepoints (size = 21)
0xffff91511284   260  000 | x3 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff91511264  code target (STUB)  (0xffff91406820)
0xffff9151127c  code target (STUB)  (0xffff91406260)
0xffff91511288  code target (STUB)  (0xffff914068e0)
0xffff915112a4  constant pool (size 36)
0xffff91511300  runtime entry
0xffff9151130c  constant pool (size 20)


