kind = STUB
major_key = CEntryStub
name = CEntryStub
compiler = unknown
Instructions (size = 392)
0xffff8bd06060     0  add x11, jssp, x0, lsl #3
0xffff8bd06064     4  sub x11, x11, #0x8 (8)
0xffff8bd06068     8  sub csp, jssp, #0x10 (16)
0xffff8bd0606c    12  stp fp, lr, [jssp, #-16]!
0xffff8bd06070    16  mov fp, jssp
0xffff8bd06074    20  movz x10, #0x300000000
0xffff8bd06078    24  sub csp, jssp, #0x8 (8)
0xffff8bd0607c    28  str x10, [jssp, #-8]!
0xffff8bd06080    32  sub csp, jssp, #0x8 (8)
0xffff8bd06084    36  str xzr, [jssp, #-8]!
0xffff8bd06088    40  ldr x10, pc+248 (addr 0x0000ffff8bd06180)    ;; object: 0xffff8bd06001 <Code: STUB>
0xffff8bd0608c    44  sub csp, jssp, #0x8 (8)
0xffff8bd06090    48  str x10, [jssp, #-8]!
0xffff8bd06094    52  ldr x10, pc+244 (addr 0x0000ffff8bd06188)    ;; external reference (Isolate::c_entry_fp_address)
0xffff8bd06098    56  str fp, [x10]
0xffff8bd0609c    60  ldr x10, pc+244 (addr 0x0000ffff8bd06190)    ;; external reference (Isolate::context_address)
0xffff8bd060a0    64  str cp, [x10]
0xffff8bd060a4    68  sub csp, jssp, #0x20 (32)
0xffff8bd060a8    72  sub jssp, jssp, #0x20 (32)
0xffff8bd060ac    76  and csp, jssp, #0xfffffffffffffff0
0xffff8bd060b0    80  add x10, csp, #0x8 (8)
0xffff8bd060b4    84  stur x10, [fp, #-16]
0xffff8bd060b8    88  str x21, [csp, #8]
0xffff8bd060bc    92  str x22, [csp, #16]
0xffff8bd060c0    96  str x23, [csp, #24]
0xffff8bd060c4   100  mov x22, x0
0xffff8bd060c8   104  mov x23, x1
0xffff8bd060cc   108  mov x21, x11
0xffff8bd060d0   112  mov x0, x22
0xffff8bd060d4   116  mov x1, x21
0xffff8bd060d8   120  ldr x2, pc+192 (addr 0x0000ffff8bd06198)    ;; external reference (isolate)
0xffff8bd060dc   124  adr x12, #+0xc (addr 0xffff8bd060e8)
0xffff8bd060e0   128  str x12, [csp]
0xffff8bd060e4   132  blr x23
0xffff8bd060e8   136  ldr x16, [x26, #344]
0xffff8bd060ec   140  cmp x0, x16
0xffff8bd060f0   144  b.eq #+0x34 (addr 0xffff8bd06124)
0xffff8bd060f4   148  mov x11, x22
0xffff8bd060f8   152  ldr x21, [csp, #8]
0xffff8bd060fc   156  ldr x22, [csp, #16]
0xffff8bd06100   160  ldr x23, [csp, #24]
0xffff8bd06104   164  ldr x10, pc+156 (addr 0x0000ffff8bd061a0)    ;; external reference (Isolate::context_address)
0xffff8bd06108   168  ldr cp, [x10]
0xffff8bd0610c   172  ldr x10, pc+156 (addr 0x0000ffff8bd061a8)    ;; external reference (Isolate::c_entry_fp_address)
0xffff8bd06110   176  str xzr, [x10]
0xffff8bd06114   180  mov jssp, fp
0xffff8bd06118   184  ldp fp, lr, [jssp], #16
0xffff8bd0611c   188  add jssp, jssp, x11, lsl #3
0xffff8bd06120   192  ret
0xffff8bd06124   196  movz x0, #0x0
0xffff8bd06128   200  movz x1, #0x0
0xffff8bd0612c   204  ldr x2, pc+132 (addr 0x0000ffff8bd061b0)    ;; external reference (isolate)
0xffff8bd06130   208  ldr x16, pc+136 (addr 0x0000ffff8bd061b8)    ;; external reference (Runtime::UnwindAndFindExceptionHandler)
0xffff8bd06134   212  blr x16
0xffff8bd06138   216  ldr cp, pc+136 (addr 0x0000ffff8bd061c0)    ;; external reference (Isolate::pending_handler_context_address)
0xffff8bd0613c   220  ldr cp, [cp]
0xffff8bd06140   224  ldr jssp, pc+136 (addr 0x0000ffff8bd061c8)    ;; external reference (Isolate::pending_handler_sp_address)
0xffff8bd06144   228  ldr jssp, [jssp]
0xffff8bd06148   232  ldr fp, pc+136 (addr 0x0000ffff8bd061d0)    ;; external reference (Isolate::pending_handler_fp_address)
0xffff8bd0614c   236  ldr fp, [fp]
0xffff8bd06150   240  cbz cp, #+0x8 (addr 0xffff8bd06158)
0xffff8bd06154   244  stur cp, [fp, #-8]
0xffff8bd06158   248  ldr x10, pc+128 (addr 0x0000ffff8bd061d8)    ;; external reference (Isolate::pending_handler_code_address)
0xffff8bd0615c   252  ldr x10, [x10]
0xffff8bd06160   256  ldr x11, pc+128 (addr 0x0000ffff8bd061e0)    ;; external reference (Isolate::pending_handler_offset_address)
0xffff8bd06164   260  ldr x11, [x11]
0xffff8bd06168   264  add x10, x10, #0x5f (95)
0xffff8bd0616c   268  add x10, x10, x11
0xffff8bd06170   272  br x10
0xffff8bd06174   276  5800039f       constant pool begin (num_const = 28)    ;; constant pool
0xffff8bd06178   280  d63f03e0       constant
0xffff8bd0617c   284  d503201f       constant
0xffff8bd06180   288  8bd06001       constant
0xffff8bd06184   292  0000ffff       constant
0xffff8bd06188   296  2cb8edf8       constant
0xffff8bd0618c   300  00000000       constant
0xffff8bd06190   304  2cb8ed90       constant
0xffff8bd06194   308  00000000       constant
0xffff8bd06198   312  2cb8d2d0       constant
0xffff8bd0619c   316  00000000       constant
0xffff8bd061a0   320  2cb8ed90       constant
0xffff8bd061a4   324  00000000       constant
0xffff8bd061a8   328  2cb8edf8       constant
0xffff8bd061ac   332  00000000       constant
0xffff8bd061b0   336  2cb8d2d0       constant
0xffff8bd061b4   340  00000000       constant
0xffff8bd061b8   344  00e232d8       constant
0xffff8bd061bc   348  00000000       constant
0xffff8bd061c0   352  2cb8eda8       constant
0xffff8bd061c4   356  00000000       constant
0xffff8bd061c8   360  2cb8edc8       constant
0xffff8bd061cc   364  00000000       constant
0xffff8bd061d0   368  2cb8edc0       constant
0xffff8bd061d4   372  00000000       constant
0xffff8bd061d8   376  2cb8edb0       constant
0xffff8bd061dc   380  00000000       constant
0xffff8bd061e0   384  2cb8edb8       constant
0xffff8bd061e4   388  00000000       constant


RelocInfo (size = 31)
0xffff8bd06088  embedded object  (0xffff8bd06001 <Code: STUB>)
0xffff8bd06094  external reference (Isolate::c_entry_fp_address)  (0x2cb8edf8)
0xffff8bd0609c  external reference (Isolate::context_address)  (0x2cb8ed90)
0xffff8bd060d8  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd06104  external reference (Isolate::context_address)  (0x2cb8ed90)
0xffff8bd0610c  external reference (Isolate::c_entry_fp_address)  (0x2cb8edf8)
0xffff8bd0612c  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd06130  external reference (Runtime::UnwindAndFindExceptionHandler)  (0xe232d8)
0xffff8bd06138  external reference (Isolate::pending_handler_context_address)  (0x2cb8eda8)
0xffff8bd06140  external reference (Isolate::pending_handler_sp_address)  (0x2cb8edc8)
0xffff8bd06148  external reference (Isolate::pending_handler_fp_address)  (0x2cb8edc0)
0xffff8bd06158  external reference (Isolate::pending_handler_code_address)  (0x2cb8edb0)
0xffff8bd06160  external reference (Isolate::pending_handler_offset_address)  (0x2cb8edb8)
0xffff8bd06174  constant pool (size 116)


kind = STUB
major_key = CEntryStub
name = CEntryStub
compiler = unknown
Instructions (size = 488)
0xffff8bd06260     0  add x11, jssp, x0, lsl #3
0xffff8bd06264     4  sub x11, x11, #0x8 (8)
0xffff8bd06268     8  sub csp, jssp, #0x10 (16)
0xffff8bd0626c    12  stp fp, lr, [jssp, #-16]!
0xffff8bd06270    16  mov fp, jssp
0xffff8bd06274    20  movz x10, #0x300000000
0xffff8bd06278    24  sub csp, jssp, #0x8 (8)
0xffff8bd0627c    28  str x10, [jssp, #-8]!
0xffff8bd06280    32  sub csp, jssp, #0x8 (8)
0xffff8bd06284    36  str xzr, [jssp, #-8]!
0xffff8bd06288    40  ldr x10, pc+344 (addr 0x0000ffff8bd063e0)    ;; object: 0xffff8bd06201 <Code: STUB>
0xffff8bd0628c    44  sub csp, jssp, #0x8 (8)
0xffff8bd06290    48  str x10, [jssp, #-8]!
0xffff8bd06294    52  ldr x10, pc+340 (addr 0x0000ffff8bd063e8)    ;; external reference (Isolate::c_entry_fp_address)
0xffff8bd06298    56  str fp, [x10]
0xffff8bd0629c    60  ldr x10, pc+340 (addr 0x0000ffff8bd063f0)    ;; external reference (Isolate::context_address)
0xffff8bd062a0    64  str cp, [x10]
0xffff8bd062a4    68  sub csp, jssp, #0xc0 (192)
0xffff8bd062a8    72  stp d28, d29, [jssp, #-32]!
0xffff8bd062ac    76  stp d30, d31, [jssp, #16]
0xffff8bd062b0    80  stp d24, d25, [jssp, #-32]!
0xffff8bd062b4    84  stp d26, d27, [jssp, #16]
0xffff8bd062b8    88  stp d20, d21, [jssp, #-32]!
0xffff8bd062bc    92  stp d22, d23, [jssp, #16]
0xffff8bd062c0    96  stp d16, d17, [jssp, #-32]!
0xffff8bd062c4   100  stp d18, d19, [jssp, #16]
0xffff8bd062c8   104  stp d4, d5, [jssp, #-32]!
0xffff8bd062cc   108  stp d6, d7, [jssp, #16]
0xffff8bd062d0   112  stp d0, d1, [jssp, #-32]!
0xffff8bd062d4   116  stp d2, d3, [jssp, #16]
0xffff8bd062d8   120  sub csp, jssp, #0x20 (32)
0xffff8bd062dc   124  sub jssp, jssp, #0x20 (32)
0xffff8bd062e0   128  and csp, jssp, #0xfffffffffffffff0
0xffff8bd062e4   132  add x10, csp, #0x8 (8)
0xffff8bd062e8   136  stur x10, [fp, #-16]
0xffff8bd062ec   140  str x21, [csp, #8]
0xffff8bd062f0   144  str x22, [csp, #16]
0xffff8bd062f4   148  str x23, [csp, #24]
0xffff8bd062f8   152  mov x22, x0
0xffff8bd062fc   156  mov x23, x1
0xffff8bd06300   160  mov x21, x11
0xffff8bd06304   164  mov x0, x22
0xffff8bd06308   168  mov x1, x21
0xffff8bd0630c   172  ldr x2, pc+236 (addr 0x0000ffff8bd063f8)    ;; external reference (isolate)
0xffff8bd06310   176  adr x12, #+0xc (addr 0xffff8bd0631c)
0xffff8bd06314   180  str x12, [csp]
0xffff8bd06318   184  blr x23
0xffff8bd0631c   188  ldr x16, [x26, #344]
0xffff8bd06320   192  cmp x0, x16
0xffff8bd06324   196  b.eq #+0x64 (addr 0xffff8bd06388)
0xffff8bd06328   200  mov x11, x22
0xffff8bd0632c   204  ldr x21, [csp, #8]
0xffff8bd06330   208  ldr x22, [csp, #16]
0xffff8bd06334   212  ldr x23, [csp, #24]
0xffff8bd06338   216  ldp d30, d31, [fp, #-40]
0xffff8bd0633c   220  ldp d28, d29, [fp, #-56]
0xffff8bd06340   224  ldp d26, d27, [fp, #-72]
0xffff8bd06344   228  ldp d24, d25, [fp, #-88]
0xffff8bd06348   232  ldp d22, d23, [fp, #-104]
0xffff8bd0634c   236  ldp d20, d21, [fp, #-120]
0xffff8bd06350   240  ldp d18, d19, [fp, #-136]
0xffff8bd06354   244  ldp d16, d17, [fp, #-152]
0xffff8bd06358   248  ldp d6, d7, [fp, #-168]
0xffff8bd0635c   252  ldp d4, d5, [fp, #-184]
0xffff8bd06360   256  ldp d2, d3, [fp, #-200]
0xffff8bd06364   260  ldp d0, d1, [fp, #-216]
0xffff8bd06368   264  ldr x10, pc+152 (addr 0x0000ffff8bd06400)    ;; external reference (Isolate::context_address)
0xffff8bd0636c   268  ldr cp, [x10]
0xffff8bd06370   272  ldr x10, pc+152 (addr 0x0000ffff8bd06408)    ;; external reference (Isolate::c_entry_fp_address)
0xffff8bd06374   276  str xzr, [x10]
0xffff8bd06378   280  mov jssp, fp
0xffff8bd0637c   284  ldp fp, lr, [jssp], #16
0xffff8bd06380   288  add jssp, jssp, x11, lsl #3
0xffff8bd06384   292  ret
0xffff8bd06388   296  movz x0, #0x0
0xffff8bd0638c   300  movz x1, #0x0
0xffff8bd06390   304  ldr x2, pc+128 (addr 0x0000ffff8bd06410)    ;; external reference (isolate)
0xffff8bd06394   308  ldr x16, pc+132 (addr 0x0000ffff8bd06418)    ;; external reference (Runtime::UnwindAndFindExceptionHandler)
0xffff8bd06398   312  blr x16
0xffff8bd0639c   316  ldr cp, pc+132 (addr 0x0000ffff8bd06420)    ;; external reference (Isolate::pending_handler_context_address)
0xffff8bd063a0   320  ldr cp, [cp]
0xffff8bd063a4   324  ldr jssp, pc+132 (addr 0x0000ffff8bd06428)    ;; external reference (Isolate::pending_handler_sp_address)
0xffff8bd063a8   328  ldr jssp, [jssp]
0xffff8bd063ac   332  ldr fp, pc+132 (addr 0x0000ffff8bd06430)    ;; external reference (Isolate::pending_handler_fp_address)
0xffff8bd063b0   336  ldr fp, [fp]
0xffff8bd063b4   340  cbz cp, #+0x8 (addr 0xffff8bd063bc)
0xffff8bd063b8   344  stur cp, [fp, #-8]
0xffff8bd063bc   348  ldr x10, pc+124 (addr 0x0000ffff8bd06438)    ;; external reference (Isolate::pending_handler_code_address)
0xffff8bd063c0   352  ldr x10, [x10]
0xffff8bd063c4   356  ldr x11, pc+124 (addr 0x0000ffff8bd06440)    ;; external reference (Isolate::pending_handler_offset_address)
0xffff8bd063c8   360  ldr x11, [x11]
0xffff8bd063cc   364  add x10, x10, #0x5f (95)
0xffff8bd063d0   368  add x10, x10, x11
0xffff8bd063d4   372  br x10
0xffff8bd063d8   376  5800037f       constant pool begin (num_const = 27)    ;; constant pool
0xffff8bd063dc   380  d63f03e0       constant
0xffff8bd063e0   384  8bd06201       constant
0xffff8bd063e4   388  0000ffff       constant
0xffff8bd063e8   392  2cb8edf8       constant
0xffff8bd063ec   396  00000000       constant
0xffff8bd063f0   400  2cb8ed90       constant
0xffff8bd063f4   404  00000000       constant
0xffff8bd063f8   408  2cb8d2d0       constant
0xffff8bd063fc   412  00000000       constant
0xffff8bd06400   416  2cb8ed90       constant
0xffff8bd06404   420  00000000       constant
0xffff8bd06408   424  2cb8edf8       constant
0xffff8bd0640c   428  00000000       constant
0xffff8bd06410   432  2cb8d2d0       constant
0xffff8bd06414   436  00000000       constant
0xffff8bd06418   440  00e232d8       constant
0xffff8bd0641c   444  00000000       constant
0xffff8bd06420   448  2cb8eda8       constant
0xffff8bd06424   452  00000000       constant
0xffff8bd06428   456  2cb8edc8       constant
0xffff8bd0642c   460  00000000       constant
0xffff8bd06430   464  2cb8edc0       constant
0xffff8bd06434   468  00000000       constant
0xffff8bd06438   472  2cb8edb0       constant
0xffff8bd0643c   476  00000000       constant
0xffff8bd06440   480  2cb8edb8       constant
0xffff8bd06444   484  00000000       constant


RelocInfo (size = 35)
0xffff8bd06288  embedded object  (0xffff8bd06201 <Code: STUB>)
0xffff8bd06294  external reference (Isolate::c_entry_fp_address)  (0x2cb8edf8)
0xffff8bd0629c  external reference (Isolate::context_address)  (0x2cb8ed90)
0xffff8bd0630c  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd06368  external reference (Isolate::context_address)  (0x2cb8ed90)
0xffff8bd06370  external reference (Isolate::c_entry_fp_address)  (0x2cb8edf8)
0xffff8bd06390  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd06394  external reference (Runtime::UnwindAndFindExceptionHandler)  (0xe232d8)
0xffff8bd0639c  external reference (Isolate::pending_handler_context_address)  (0x2cb8eda8)
0xffff8bd063a4  external reference (Isolate::pending_handler_sp_address)  (0x2cb8edc8)
0xffff8bd063ac  external reference (Isolate::pending_handler_fp_address)  (0x2cb8edc0)
0xffff8bd063bc  external reference (Isolate::pending_handler_code_address)  (0x2cb8edb0)
0xffff8bd063c4  external reference (Isolate::pending_handler_offset_address)  (0x2cb8edb8)
0xffff8bd063d8  constant pool (size 112)


kind = STUB
major_key = StoreBufferOverflowStub
name = StoreBufferOverflowStub
compiler = unknown
Instructions (size = 120)
0xffff8bd064c0     0  sub csp, jssp, #0x90 (144)
0xffff8bd064c4     4  stp x14, x15, [jssp, #-32]!
0xffff8bd064c8     8  stp x18, lr, [jssp, #16]
0xffff8bd064cc    12  stp x10, x11, [jssp, #-32]!
0xffff8bd064d0    16  stp x12, x13, [jssp, #16]
0xffff8bd064d4    20  stp x6, x7, [jssp, #-32]!
0xffff8bd064d8    24  stp x8, x9, [jssp, #16]
0xffff8bd064dc    28  stp x2, x3, [jssp, #-32]!
0xffff8bd064e0    32  stp x4, x5, [jssp, #16]
0xffff8bd064e4    36  stp x0, x1, [jssp, #-16]!
0xffff8bd064e8    40  ldr x0, pc+64 (addr 0x0000ffff8bd06528)    ;; external reference (isolate)
0xffff8bd064ec    44  ldr x16, pc+68 (addr 0x0000ffff8bd06530)    ;; external reference (StoreBuffer::StoreBufferOverflow)
0xffff8bd064f0    48  and csp, jssp, #0xfffffffffffffff0
0xffff8bd064f4    52  blr x16
0xffff8bd064f8    56  ldp x2, x3, [jssp, #16]
0xffff8bd064fc    60  ldp x0, x1, [jssp], #32
0xffff8bd06500    64  ldp x6, x7, [jssp, #16]
0xffff8bd06504    68  ldp x4, x5, [jssp], #32
0xffff8bd06508    72  ldp x10, x11, [jssp, #16]
0xffff8bd0650c    76  ldp x8, x9, [jssp], #32
0xffff8bd06510    80  ldp x14, x15, [jssp, #16]
0xffff8bd06514    84  ldp x12, x13, [jssp], #32
0xffff8bd06518    88  ldp x18, lr, [jssp], #16
0xffff8bd0651c    92  ret
0xffff8bd06520    96  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd06524   100  d63f03e0       constant
0xffff8bd06528   104  2cb8d2d0       constant
0xffff8bd0652c   108  00000000       constant
0xffff8bd06530   112  00c716d0       constant
0xffff8bd06534   116  00000000       constant


RelocInfo (size = 10)
0xffff8bd064e8  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd064ec  external reference (StoreBuffer::StoreBufferOverflow)  (0xc716d0)
0xffff8bd06520  constant pool (size 24)


kind = STUB
major_key = StoreBufferOverflowStub
name = StoreBufferOverflowStub
compiler = unknown
Instructions (size = 216)
0xffff8bd065a0     0  sub csp, jssp, #0x90 (144)
0xffff8bd065a4     4  stp x14, x15, [jssp, #-32]!
0xffff8bd065a8     8  stp x18, lr, [jssp, #16]
0xffff8bd065ac    12  stp x10, x11, [jssp, #-32]!
0xffff8bd065b0    16  stp x12, x13, [jssp, #16]
0xffff8bd065b4    20  stp x6, x7, [jssp, #-32]!
0xffff8bd065b8    24  stp x8, x9, [jssp, #16]
0xffff8bd065bc    28  stp x2, x3, [jssp, #-32]!
0xffff8bd065c0    32  stp x4, x5, [jssp, #16]
0xffff8bd065c4    36  stp x0, x1, [jssp, #-16]!
0xffff8bd065c8    40  sub csp, jssp, #0xb0 (176)
0xffff8bd065cc    44  stp d26, d27, [jssp, #-32]!
0xffff8bd065d0    48  stp d28, d29, [jssp, #16]
0xffff8bd065d4    52  stp d22, d23, [jssp, #-32]!
0xffff8bd065d8    56  stp d24, d25, [jssp, #16]
0xffff8bd065dc    60  stp d18, d19, [jssp, #-32]!
0xffff8bd065e0    64  stp d20, d21, [jssp, #16]
0xffff8bd065e4    68  stp d6, d7, [jssp, #-32]!
0xffff8bd065e8    72  stp d16, d17, [jssp, #16]
0xffff8bd065ec    76  stp d2, d3, [jssp, #-32]!
0xffff8bd065f0    80  stp d4, d5, [jssp, #16]
0xffff8bd065f4    84  stp d0, d1, [jssp, #-16]!
0xffff8bd065f8    88  ldr x0, pc+112 (addr 0x0000ffff8bd06668)    ;; external reference (isolate)
0xffff8bd065fc    92  ldr x16, pc+116 (addr 0x0000ffff8bd06670)    ;; external reference (StoreBuffer::StoreBufferOverflow)
0xffff8bd06600    96  and csp, jssp, #0xfffffffffffffff0
0xffff8bd06604   100  blr x16
0xffff8bd06608   104  ldp d2, d3, [jssp, #16]
0xffff8bd0660c   108  ldp d0, d1, [jssp], #32
0xffff8bd06610   112  ldp d6, d7, [jssp, #16]
0xffff8bd06614   116  ldp d4, d5, [jssp], #32
0xffff8bd06618   120  ldp d18, d19, [jssp, #16]
0xffff8bd0661c   124  ldp d16, d17, [jssp], #32
0xffff8bd06620   128  ldp d22, d23, [jssp, #16]
0xffff8bd06624   132  ldp d20, d21, [jssp], #32
0xffff8bd06628   136  ldp d26, d27, [jssp, #16]
0xffff8bd0662c   140  ldp d24, d25, [jssp], #32
0xffff8bd06630   144  ldp d28, d29, [jssp], #16
0xffff8bd06634   148  ldp x2, x3, [jssp, #16]
0xffff8bd06638   152  ldp x0, x1, [jssp], #32
0xffff8bd0663c   156  ldp x6, x7, [jssp, #16]
0xffff8bd06640   160  ldp x4, x5, [jssp], #32
0xffff8bd06644   164  ldp x10, x11, [jssp, #16]
0xffff8bd06648   168  ldp x8, x9, [jssp], #32
0xffff8bd0664c   172  ldp x14, x15, [jssp, #16]
0xffff8bd06650   176  ldp x12, x13, [jssp], #32
0xffff8bd06654   180  ldp x18, lr, [jssp], #16
0xffff8bd06658   184  ret
0xffff8bd0665c   188  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd06660   192  d63f03e0       constant
0xffff8bd06664   196  d503201f       constant
0xffff8bd06668   200  2cb8d2d0       constant
0xffff8bd0666c   204  00000000       constant
0xffff8bd06670   208  00c716d0       constant
0xffff8bd06674   212  00000000       constant


RelocInfo (size = 14)
0xffff8bd065f8  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd065fc  external reference (StoreBuffer::StoreBufferOverflow)  (0xc716d0)
0xffff8bd0665c  constant pool (size 28)


kind = STUB
major_key = StubFailureTrampolineStub
name = StubFailureTrampolineStub
compiler = unknown
Instructions (size = 48)
0xffff8bd066e0     0  ldr x16, pc+40 (addr 0x0000ffff8bd06708)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd066e4     4  blr x16
0xffff8bd066e8     8  ldur x1, [fp, #-24]
0xffff8bd066ec    12  mov jssp, fp
0xffff8bd066f0    16  ldp fp, lr, [jssp], #16
0xffff8bd066f4    20  add jssp, jssp, x1, lsl #3
0xffff8bd066f8    24  ret
0xffff8bd066fc    28  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd06700    32  d63f03e0       constant
0xffff8bd06704    36  d503201f       constant
0xffff8bd06708    40  8bd06260       constant
0xffff8bd0670c    44  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd066e0  code target (STUB)  (0xffff8bd06260)
0xffff8bd066fc  constant pool (size 20)


kind = STUB
major_key = StubFailureTrampolineStub
name = StubFailureTrampolineStub
compiler = unknown
Instructions (size = 48)
0xffff8bd06780     0  ldr x16, pc+40 (addr 0x0000ffff8bd067a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd06784     4  blr x16
0xffff8bd06788     8  ldur x1, [fp, #-24]
0xffff8bd0678c    12  add x1, x1, #0x1 (1)
0xffff8bd06790    16  mov jssp, fp
0xffff8bd06794    20  ldp fp, lr, [jssp], #16
0xffff8bd06798    24  add jssp, jssp, x1, lsl #3
0xffff8bd0679c    28  ret
0xffff8bd067a0    32  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd067a4    36  d63f03e0       constant
0xffff8bd067a8    40  8bd06260       constant
0xffff8bd067ac    44  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd06780  code target (STUB)  (0xffff8bd06260)
0xffff8bd067a0  constant pool (size 16)


kind = STUB
major_key = StoreRegistersStateStub
name = StoreRegistersStateStub
compiler = unknown
Instructions (size = 80)
0xffff8bd06820     0  mov x17, lr
0xffff8bd06824     4  mov lr, x16
0xffff8bd06828     8  sub csp, jssp, #0x20 (32)
0xffff8bd0682c    12  sub jssp, jssp, #0x20 (32)
0xffff8bd06830    16  sub csp, jssp, #0xe0 (224)
0xffff8bd06834    20  stp x26, cp, [jssp, #-32]!
0xffff8bd06838    24  stp fp, lr, [jssp, #16]
0xffff8bd0683c    28  stp x22, x23, [jssp, #-32]!
0xffff8bd06840    32  stp x24, x25, [jssp, #16]
0xffff8bd06844    36  stp x18, x19, [jssp, #-32]!
0xffff8bd06848    40  stp x20, x21, [jssp, #16]
0xffff8bd0684c    44  stp x12, x13, [jssp, #-32]!
0xffff8bd06850    48  stp x14, x15, [jssp, #16]
0xffff8bd06854    52  stp x8, x9, [jssp, #-32]!
0xffff8bd06858    56  stp x10, x11, [jssp, #16]
0xffff8bd0685c    60  stp x4, x5, [jssp, #-32]!
0xffff8bd06860    64  stp x6, x7, [jssp, #16]
0xffff8bd06864    68  stp x0, x1, [jssp, #-32]!
0xffff8bd06868    72  stp x2, x3, [jssp, #16]
0xffff8bd0686c    76  ret x17


RelocInfo (size = 0)


kind = STUB
major_key = RestoreRegistersStateStub
name = RestoreRegistersStateStub
compiler = unknown
Instructions (size = 68)
0xffff8bd068e0     0  mov x16, lr
0xffff8bd068e4     4  ldp x2, x3, [jssp, #16]
0xffff8bd068e8     8  ldp x0, x1, [jssp], #32
0xffff8bd068ec    12  ldp x6, x7, [jssp, #16]
0xffff8bd068f0    16  ldp x4, x5, [jssp], #32
0xffff8bd068f4    20  ldp x10, x11, [jssp, #16]
0xffff8bd068f8    24  ldp x8, x9, [jssp], #32
0xffff8bd068fc    28  ldp x14, x15, [jssp, #16]
0xffff8bd06900    32  ldp x12, x13, [jssp], #32
0xffff8bd06904    36  ldp x20, x21, [jssp, #16]
0xffff8bd06908    40  ldp x18, x19, [jssp], #32
0xffff8bd0690c    44  ldp x24, x25, [jssp, #16]
0xffff8bd06910    48  ldp x22, x23, [jssp], #32
0xffff8bd06914    52  ldp fp, lr, [jssp, #16]
0xffff8bd06918    56  ldp x26, cp, [jssp], #32
0xffff8bd0691c    60  add jssp, jssp, #0x20 (32)
0xffff8bd06920    64  ret x16


RelocInfo (size = 0)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 469)
0xffff8bd069a0     0  movz w0, #0x6000
0xffff8bd069a4     4  movk w0, #0x9, lsl #16
0xffff8bd069a8     8  cmp w0, #0x30 (48)
0xffff8bd069ac    12  b.ls #+0x174 (addr 0xffff8bd06b20)
0xffff8bd069b0    16  movz x3, #0xe2c0
0xffff8bd069b4    20  movk x3, #0x2cb8, lsl #16
0xffff8bd069b8    24  ldp x4, x0, [x3]
0xffff8bd069bc    28  adds x16, x4, #0x60 (96)
0xffff8bd069c0    32  ccmp x16, x0, #nzCv, lo
0xffff8bd069c4    36  b.hi #+0x98 (addr 0xffff8bd06a5c)
0xffff8bd069c8    40  str x16, [x3]
0xffff8bd069cc    44  orr x4, x4, #0x1
0xffff8bd069d0    48  movz w0, #0x0
0xffff8bd069d4    52  stur x0, [x4, #47]
0xffff8bd069d8    56  ldur x0, [x1, #23]
0xffff8bd069dc    60  stur x0, [x4, #-1]
0xffff8bd069e0    64  ldr x0, pc+232 (addr 0x0000ffff8bd06ac8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd069e4    68  stur x0, [x4, #7]
0xffff8bd069e8    72  ldr x0, pc+232 (addr 0x0000ffff8bd06ad0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd069ec    76  stur x0, [x4, #15]
0xffff8bd069f0    80  movz x0, #0x0
0xffff8bd069f4    84  stur x0, [x4, #23]
0xffff8bd069f8    88  add x0, x4, #0x20 (32)
0xffff8bd069fc    92  ldr x1, pc+220 (addr 0x0000ffff8bd06ad8)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd06a00    96  stur x1, [x0, #-1]
0xffff8bd06a04   100  stur x2, [x0, #7]
0xffff8bd06a08   104  ldur w0, [x2, #35]
0xffff8bd06a0c   108  add w0, w0, #0x1 (1)
0xffff8bd06a10   112  lsl x0, x0, #32
0xffff8bd06a14   116  stur x0, [x2, #31]
0xffff8bd06a18   120  add x0, x4, #0x30 (48)
0xffff8bd06a1c   124  ldr x1, pc+196 (addr 0x0000ffff8bd06ae0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd06a20   128  stur x1, [x0, #-1]
0xffff8bd06a24   132  movz x1, #0x400000000
0xffff8bd06a28   136  stur x1, [x0, #7]
0xffff8bd06a2c   140  stur x0, [x4, #15]
0xffff8bd06a30   144  ldr x1, pc+184 (addr 0x0000ffff8bd06ae8)    ;; object: 0x26c04519 <the hole>
0xffff8bd06a34   148  stur x1, [x0, #15]
0xffff8bd06a38   152  ldr x1, pc+184 (addr 0x0000ffff8bd06af0)    ;; object: 0x26c04519 <the hole>
0xffff8bd06a3c   156  stur x1, [x0, #23]
0xffff8bd06a40   160  ldr x1, pc+184 (addr 0x0000ffff8bd06af8)    ;; object: 0x26c04519 <the hole>
0xffff8bd06a44   164  stur x1, [x0, #31]
0xffff8bd06a48   168  ldr x1, pc+184 (addr 0x0000ffff8bd06b00)    ;; object: 0x26c04519 <the hole>
0xffff8bd06a4c   172  stur x1, [x0, #39]
0xffff8bd06a50   176  mov x0, x4
0xffff8bd06a54   180  add jssp, jssp, #0x8 (8)
0xffff8bd06a58   184  ret
0xffff8bd06a5c   188  sub csp, jssp, #0x10 (16)
0xffff8bd06a60   192  stp fp, lr, [jssp, #-16]!
0xffff8bd06a64   196  movz fp, #0xa00000000
0xffff8bd06a68   200  sub csp, jssp, #0x8 (8)
0xffff8bd06a6c   204  str fp, [jssp, #-8]!
0xffff8bd06a70   208  add fp, jssp, #0x8 (8)
0xffff8bd06a74   212  movz x4, #0x0
0xffff8bd06a78   216  mov x16, lr
0xffff8bd06a7c   220  ldr x17, pc+140 (addr 0x0000ffff8bd06b08)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd06a80   224  blr x17
0xffff8bd06a84   228  movz x0, #0x6000000000
0xffff8bd06a88   232  movz x10, #0x0
0xffff8bd06a8c   236  sub csp, jssp, #0x10 (16)
0xffff8bd06a90   240  stp x10, x0, [jssp, #-16]!
0xffff8bd06a94   244  movz x0, #0x2
0xffff8bd06a98   248  movz x1, #0x5b88
0xffff8bd06a9c   252  movk x1, #0xe2, lsl #16
0xffff8bd06aa0   256  ldr x16, pc+112 (addr 0x0000ffff8bd06b10)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd06aa4   260  blr x16
0xffff8bd06aa8   264  str x0, [jssp, #32]
0xffff8bd06aac   268  ldr x16, pc+108 (addr 0x0000ffff8bd06b18)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd06ab0   272  blr x16
0xffff8bd06ab4   276  ldr lr, [jssp, #16]
0xffff8bd06ab8   280  ldp xzr, fp, [jssp], #24
0xffff8bd06abc   284  b #-0xec (addr 0xffff8bd069d0)
0xffff8bd06ac0   288  580002ff       constant pool begin (num_const = 23)    ;; constant pool
0xffff8bd06ac4   292  d63f03e0       constant
0xffff8bd06ac8   296  26c04201       constant
0xffff8bd06acc   300  00000000       constant
0xffff8bd06ad0   304  26c04201       constant
0xffff8bd06ad4   308  00000000       constant
0xffff8bd06ad8   312  5f505d81       constant
0xffff8bd06adc   316  00000000       constant
0xffff8bd06ae0   320  5f504259       constant
0xffff8bd06ae4   324  00000000       constant
0xffff8bd06ae8   328  26c04519       constant
0xffff8bd06aec   332  00000000       constant
0xffff8bd06af0   336  26c04519       constant
0xffff8bd06af4   340  00000000       constant
0xffff8bd06af8   344  26c04519       constant
0xffff8bd06afc   348  00000000       constant
0xffff8bd06b00   352  26c04519       constant
0xffff8bd06b04   356  00000000       constant
0xffff8bd06b08   360  8bd06820       constant
0xffff8bd06b0c   364  0000ffff       constant
0xffff8bd06b10   368  8bd06260       constant
0xffff8bd06b14   372  0000ffff       constant
0xffff8bd06b18   376  8bd068e0       constant
0xffff8bd06b1c   380  0000ffff       constant
0xffff8bd06b20   384  movz x16, #0x0
0xffff8bd06b24   388  sub csp, jssp, #0x10 (16)
0xffff8bd06b28   392  stp fp, lr, [jssp, #-16]!
0xffff8bd06b2c   396  bl #+0x4 (addr 0xffff8bd06b30)
0xffff8bd06b30   400  movz x17, #0xa00000000
0xffff8bd06b34   404  sub csp, jssp, #0x10 (16)
0xffff8bd06b38   408  stp x17, cp, [jssp, #-16]!
0xffff8bd06b3c   412  add fp, jssp, #0x10 (16)
0xffff8bd06b40   416  ldr x17, pc+24 (addr 0x0000ffff8bd06b58)    ;; lazy deoptimization bailout 0
0xffff8bd06b44   420  add x17, x17, x16
0xffff8bd06b48   424  br x17
0xffff8bd06b4c   428  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd06b50   432  d63f03e0       constant
0xffff8bd06b54   436  d503201f       constant
0xffff8bd06b58   440  8bb06000       constant
0xffff8bd06b5c   444  0000ffff       constant


Safepoints (size = 21)
0xffff8bd06aa8   264  000 | x1 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 29)
0xffff8bd069e0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd069e8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd069fc  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd06a1c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd06a30  embedded object  (0x26c04519 <the hole>)
0xffff8bd06a38  embedded object  (0x26c04519 <the hole>)
0xffff8bd06a40  embedded object  (0x26c04519 <the hole>)
0xffff8bd06a48  embedded object  (0x26c04519 <the hole>)
0xffff8bd06a7c  code target (STUB)  (0xffff8bd06820)
0xffff8bd06aa0  code target (STUB)  (0xffff8bd06260)
0xffff8bd06aac  code target (STUB)  (0xffff8bd068e0)
0xffff8bd06ac0  constant pool (size 96)
0xffff8bd06b40  runtime entry
0xffff8bd06b4c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 469)
0xffff8bd069a0     0  movz w0, #0x6000
0xffff8bd069a4     4  movk w0, #0x9, lsl #16
0xffff8bd069a8     8  cmp w0, #0x30 (48)
0xffff8bd069ac    12  b.ls #+0x174 (addr 0xffff8bd06b20)
0xffff8bd069b0    16  movz x3, #0xe2c0
0xffff8bd069b4    20  movk x3, #0x2cb8, lsl #16
0xffff8bd069b8    24  ldp x4, x0, [x3]
0xffff8bd069bc    28  adds x16, x4, #0x60 (96)
0xffff8bd069c0    32  ccmp x16, x0, #nzCv, lo
0xffff8bd069c4    36  b.hi #+0x98 (addr 0xffff8bd06a5c)
0xffff8bd069c8    40  str x16, [x3]
0xffff8bd069cc    44  orr x4, x4, #0x1
0xffff8bd069d0    48  movz w0, #0x0
0xffff8bd069d4    52  stur x0, [x4, #47]
0xffff8bd069d8    56  ldur x0, [x1, #23]
0xffff8bd069dc    60  stur x0, [x4, #-1]
0xffff8bd069e0    64  ldr x0, pc+232 (addr 0x0000ffff8bd06ac8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd069e4    68  stur x0, [x4, #7]
0xffff8bd069e8    72  ldr x0, pc+232 (addr 0x0000ffff8bd06ad0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd069ec    76  stur x0, [x4, #15]
0xffff8bd069f0    80  movz x0, #0x0
0xffff8bd069f4    84  stur x0, [x4, #23]
0xffff8bd069f8    88  add x0, x4, #0x20 (32)
0xffff8bd069fc    92  ldr x1, pc+220 (addr 0x0000ffff8bd06ad8)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd06a00    96  stur x1, [x0, #-1]
0xffff8bd06a04   100  stur x2, [x0, #7]
0xffff8bd06a08   104  ldur w0, [x2, #35]
0xffff8bd06a0c   108  add w0, w0, #0x1 (1)
0xffff8bd06a10   112  lsl x0, x0, #32
0xffff8bd06a14   116  stur x0, [x2, #31]
0xffff8bd06a18   120  add x0, x4, #0x30 (48)
0xffff8bd06a1c   124  ldr x1, pc+196 (addr 0x0000ffff8bd06ae0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd06a20   128  stur x1, [x0, #-1]
0xffff8bd06a24   132  movz x1, #0x400000000
0xffff8bd06a28   136  stur x1, [x0, #7]
0xffff8bd06a2c   140  stur x0, [x4, #15]
0xffff8bd06a30   144  ldr x1, pc+184 (addr 0x0000ffff8bd06ae8)    ;; object: 0x26c04519 <the hole>
0xffff8bd06a34   148  stur x1, [x0, #15]
0xffff8bd06a38   152  ldr x1, pc+184 (addr 0x0000ffff8bd06af0)    ;; object: 0x26c04519 <the hole>
0xffff8bd06a3c   156  stur x1, [x0, #23]
0xffff8bd06a40   160  ldr x1, pc+184 (addr 0x0000ffff8bd06af8)    ;; object: 0x26c04519 <the hole>
0xffff8bd06a44   164  stur x1, [x0, #31]
0xffff8bd06a48   168  ldr x1, pc+184 (addr 0x0000ffff8bd06b00)    ;; object: 0x26c04519 <the hole>
0xffff8bd06a4c   172  stur x1, [x0, #39]
0xffff8bd06a50   176  mov x0, x4
0xffff8bd06a54   180  add jssp, jssp, #0x8 (8)
0xffff8bd06a58   184  ret
0xffff8bd06a5c   188  sub csp, jssp, #0x10 (16)
0xffff8bd06a60   192  stp fp, lr, [jssp, #-16]!
0xffff8bd06a64   196  movz fp, #0xa00000000
0xffff8bd06a68   200  sub csp, jssp, #0x8 (8)
0xffff8bd06a6c   204  str fp, [jssp, #-8]!
0xffff8bd06a70   208  add fp, jssp, #0x8 (8)
0xffff8bd06a74   212  movz x4, #0x0
0xffff8bd06a78   216  mov x16, lr
0xffff8bd06a7c   220  ldr x17, pc+140 (addr 0x0000ffff8bd06b08)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd06a80   224  blr x17
0xffff8bd06a84   228  movz x0, #0x6000000000
0xffff8bd06a88   232  movz x10, #0x0
0xffff8bd06a8c   236  sub csp, jssp, #0x10 (16)
0xffff8bd06a90   240  stp x10, x0, [jssp, #-16]!
0xffff8bd06a94   244  movz x0, #0x2
0xffff8bd06a98   248  movz x1, #0x5b88
0xffff8bd06a9c   252  movk x1, #0xe2, lsl #16
0xffff8bd06aa0   256  ldr x16, pc+112 (addr 0x0000ffff8bd06b10)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd06aa4   260  blr x16
0xffff8bd06aa8   264  str x0, [jssp, #32]
0xffff8bd06aac   268  ldr x16, pc+108 (addr 0x0000ffff8bd06b18)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd06ab0   272  blr x16
0xffff8bd06ab4   276  ldr lr, [jssp, #16]
0xffff8bd06ab8   280  ldp xzr, fp, [jssp], #24
0xffff8bd06abc   284  b #-0xec (addr 0xffff8bd069d0)
0xffff8bd06ac0   288  580002ff       constant pool begin (num_const = 23)    ;; constant pool
0xffff8bd06ac4   292  d63f03e0       constant
0xffff8bd06ac8   296  26c04201       constant
0xffff8bd06acc   300  00000000       constant
0xffff8bd06ad0   304  26c04201       constant
0xffff8bd06ad4   308  00000000       constant
0xffff8bd06ad8   312  5f505d81       constant
0xffff8bd06adc   316  00000000       constant
0xffff8bd06ae0   320  5f504259       constant
0xffff8bd06ae4   324  00000000       constant
0xffff8bd06ae8   328  26c04519       constant
0xffff8bd06aec   332  00000000       constant
0xffff8bd06af0   336  26c04519       constant
0xffff8bd06af4   340  00000000       constant
0xffff8bd06af8   344  26c04519       constant
0xffff8bd06afc   348  00000000       constant
0xffff8bd06b00   352  26c04519       constant
0xffff8bd06b04   356  00000000       constant
0xffff8bd06b08   360  8bd06820       constant
0xffff8bd06b0c   364  0000ffff       constant
0xffff8bd06b10   368  8bd06260       constant
0xffff8bd06b14   372  0000ffff       constant
0xffff8bd06b18   376  8bd068e0       constant
0xffff8bd06b1c   380  0000ffff       constant
0xffff8bd06b20   384  movz x16, #0x0
0xffff8bd06b24   388  sub csp, jssp, #0x10 (16)
0xffff8bd06b28   392  stp fp, lr, [jssp, #-16]!
0xffff8bd06b2c   396  bl #+0x4 (addr 0xffff8bd06b30)
0xffff8bd06b30   400  movz x17, #0xa00000000
0xffff8bd06b34   404  sub csp, jssp, #0x10 (16)
0xffff8bd06b38   408  stp x17, cp, [jssp, #-16]!
0xffff8bd06b3c   412  add fp, jssp, #0x10 (16)
0xffff8bd06b40   416  ldr x17, pc+24 (addr 0x0000ffff8bd06b58)    ;; lazy deoptimization bailout 0
0xffff8bd06b44   420  add x17, x17, x16
0xffff8bd06b48   424  br x17
0xffff8bd06b4c   428  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd06b50   432  d63f03e0       constant
0xffff8bd06b54   436  d503201f       constant
0xffff8bd06b58   440  8bb06000       constant
0xffff8bd06b5c   444  0000ffff       constant


Safepoints (size = 21)
0xffff8bd06aa8   264  000 | x1 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 29)
0xffff8bd069e0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd069e8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd069fc  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd06a1c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd06a30  embedded object  (0x26c04519 <the hole>)
0xffff8bd06a38  embedded object  (0x26c04519 <the hole>)
0xffff8bd06a40  embedded object  (0x26c04519 <the hole>)
0xffff8bd06a48  embedded object  (0x26c04519 <the hole>)
0xffff8bd06a7c  code target (STUB)  (0xffff8bd06820)
0xffff8bd06aa0  code target (STUB)  (0xffff8bd06260)
0xffff8bd06aac  code target (STUB)  (0xffff8bd068e0)
0xffff8bd06ac0  constant pool (size 96)
0xffff8bd06b40  runtime entry
0xffff8bd06b4c  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 429)
0xffff8bd06be0     0  movz w0, #0x6000
0xffff8bd06be4     4  movk w0, #0x9, lsl #16
0xffff8bd06be8     8  cmp w0, #0x30 (48)
0xffff8bd06bec    12  b.ls #+0x14c (addr 0xffff8bd06d38)
0xffff8bd06bf0    16  movz x2, #0xe2c0
0xffff8bd06bf4    20  movk x2, #0x2cb8, lsl #16
0xffff8bd06bf8    24  ldp x3, x0, [x2]
0xffff8bd06bfc    28  adds x16, x3, #0x50 (80)
0xffff8bd06c00    32  ccmp x16, x0, #nzCv, lo
0xffff8bd06c04    36  b.hi #+0x78 (addr 0xffff8bd06c7c)
0xffff8bd06c08    40  str x16, [x2]
0xffff8bd06c0c    44  orr x3, x3, #0x1
0xffff8bd06c10    48  movz w0, #0x0
0xffff8bd06c14    52  stur x0, [x3, #31]
0xffff8bd06c18    56  ldur x0, [x1, #23]
0xffff8bd06c1c    60  stur x0, [x3, #-1]
0xffff8bd06c20    64  ldr x0, pc+200 (addr 0x0000ffff8bd06ce8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd06c24    68  stur x0, [x3, #7]
0xffff8bd06c28    72  ldr x0, pc+200 (addr 0x0000ffff8bd06cf0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd06c2c    76  stur x0, [x3, #15]
0xffff8bd06c30    80  movz x0, #0x0
0xffff8bd06c34    84  stur x0, [x3, #23]
0xffff8bd06c38    88  add x0, x3, #0x20 (32)
0xffff8bd06c3c    92  ldr x1, pc+188 (addr 0x0000ffff8bd06cf8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd06c40    96  stur x1, [x0, #-1]
0xffff8bd06c44   100  movz x1, #0x400000000
0xffff8bd06c48   104  stur x1, [x0, #7]
0xffff8bd06c4c   108  stur x0, [x3, #15]
0xffff8bd06c50   112  ldr x1, pc+176 (addr 0x0000ffff8bd06d00)    ;; object: 0x26c04519 <the hole>
0xffff8bd06c54   116  stur x1, [x0, #15]
0xffff8bd06c58   120  ldr x1, pc+176 (addr 0x0000ffff8bd06d08)    ;; object: 0x26c04519 <the hole>
0xffff8bd06c5c   124  stur x1, [x0, #23]
0xffff8bd06c60   128  ldr x1, pc+176 (addr 0x0000ffff8bd06d10)    ;; object: 0x26c04519 <the hole>
0xffff8bd06c64   132  stur x1, [x0, #31]
0xffff8bd06c68   136  ldr x1, pc+176 (addr 0x0000ffff8bd06d18)    ;; object: 0x26c04519 <the hole>
0xffff8bd06c6c   140  stur x1, [x0, #39]
0xffff8bd06c70   144  mov x0, x3
0xffff8bd06c74   148  add jssp, jssp, #0x8 (8)
0xffff8bd06c78   152  ret
0xffff8bd06c7c   156  sub csp, jssp, #0x10 (16)
0xffff8bd06c80   160  stp fp, lr, [jssp, #-16]!
0xffff8bd06c84   164  movz fp, #0xa00000000
0xffff8bd06c88   168  sub csp, jssp, #0x8 (8)
0xffff8bd06c8c   172  str fp, [jssp, #-8]!
0xffff8bd06c90   176  add fp, jssp, #0x8 (8)
0xffff8bd06c94   180  movz x3, #0x0
0xffff8bd06c98   184  mov x16, lr
0xffff8bd06c9c   188  ldr x17, pc+132 (addr 0x0000ffff8bd06d20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd06ca0   192  blr x17
0xffff8bd06ca4   196  movz x0, #0x5000000000
0xffff8bd06ca8   200  movz x10, #0x0
0xffff8bd06cac   204  sub csp, jssp, #0x10 (16)
0xffff8bd06cb0   208  stp x10, x0, [jssp, #-16]!
0xffff8bd06cb4   212  movz x0, #0x2
0xffff8bd06cb8   216  movz x1, #0x5b88
0xffff8bd06cbc   220  movk x1, #0xe2, lsl #16
0xffff8bd06cc0   224  ldr x16, pc+104 (addr 0x0000ffff8bd06d28)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd06cc4   228  blr x16
0xffff8bd06cc8   232  str x0, [jssp, #24]
0xffff8bd06ccc   236  ldr x16, pc+100 (addr 0x0000ffff8bd06d30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd06cd0   240  blr x16
0xffff8bd06cd4   244  ldr lr, [jssp, #16]
0xffff8bd06cd8   248  ldp xzr, fp, [jssp], #24
0xffff8bd06cdc   252  b #-0xcc (addr 0xffff8bd06c10)
0xffff8bd06ce0   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff8bd06ce4   260  d63f03e0       constant
0xffff8bd06ce8   264  26c04201       constant
0xffff8bd06cec   268  00000000       constant
0xffff8bd06cf0   272  26c04201       constant
0xffff8bd06cf4   276  00000000       constant
0xffff8bd06cf8   280  5f504259       constant
0xffff8bd06cfc   284  00000000       constant
0xffff8bd06d00   288  26c04519       constant
0xffff8bd06d04   292  00000000       constant
0xffff8bd06d08   296  26c04519       constant
0xffff8bd06d0c   300  00000000       constant
0xffff8bd06d10   304  26c04519       constant
0xffff8bd06d14   308  00000000       constant
0xffff8bd06d18   312  26c04519       constant
0xffff8bd06d1c   316  00000000       constant
0xffff8bd06d20   320  8bd06820       constant
0xffff8bd06d24   324  0000ffff       constant
0xffff8bd06d28   328  8bd06260       constant
0xffff8bd06d2c   332  0000ffff       constant
0xffff8bd06d30   336  8bd068e0       constant
0xffff8bd06d34   340  0000ffff       constant
0xffff8bd06d38   344  movz x16, #0x0
0xffff8bd06d3c   348  sub csp, jssp, #0x10 (16)
0xffff8bd06d40   352  stp fp, lr, [jssp, #-16]!
0xffff8bd06d44   356  bl #+0x4 (addr 0xffff8bd06d48)
0xffff8bd06d48   360  movz x17, #0xa00000000
0xffff8bd06d4c   364  sub csp, jssp, #0x10 (16)
0xffff8bd06d50   368  stp x17, cp, [jssp, #-16]!
0xffff8bd06d54   372  add fp, jssp, #0x10 (16)
0xffff8bd06d58   376  ldr x17, pc+24 (addr 0x0000ffff8bd06d70)    ;; lazy deoptimization bailout 0
0xffff8bd06d5c   380  add x17, x17, x16
0xffff8bd06d60   384  br x17
0xffff8bd06d64   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd06d68   392  d63f03e0       constant
0xffff8bd06d6c   396  d503201f       constant
0xffff8bd06d70   400  8bb06000       constant
0xffff8bd06d74   404  0000ffff       constant


Safepoints (size = 21)
0xffff8bd06cc8   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff8bd06c20  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd06c28  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd06c3c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd06c50  embedded object  (0x26c04519 <the hole>)
0xffff8bd06c58  embedded object  (0x26c04519 <the hole>)
0xffff8bd06c60  embedded object  (0x26c04519 <the hole>)
0xffff8bd06c68  embedded object  (0x26c04519 <the hole>)
0xffff8bd06c9c  code target (STUB)  (0xffff8bd06820)
0xffff8bd06cc0  code target (STUB)  (0xffff8bd06260)
0xffff8bd06ccc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd06ce0  constant pool (size 88)
0xffff8bd06d58  runtime entry
0xffff8bd06d64  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 429)
0xffff8bd06be0     0  movz w0, #0x6000
0xffff8bd06be4     4  movk w0, #0x9, lsl #16
0xffff8bd06be8     8  cmp w0, #0x30 (48)
0xffff8bd06bec    12  b.ls #+0x14c (addr 0xffff8bd06d38)
0xffff8bd06bf0    16  movz x2, #0xe2c0
0xffff8bd06bf4    20  movk x2, #0x2cb8, lsl #16
0xffff8bd06bf8    24  ldp x3, x0, [x2]
0xffff8bd06bfc    28  adds x16, x3, #0x50 (80)
0xffff8bd06c00    32  ccmp x16, x0, #nzCv, lo
0xffff8bd06c04    36  b.hi #+0x78 (addr 0xffff8bd06c7c)
0xffff8bd06c08    40  str x16, [x2]
0xffff8bd06c0c    44  orr x3, x3, #0x1
0xffff8bd06c10    48  movz w0, #0x0
0xffff8bd06c14    52  stur x0, [x3, #31]
0xffff8bd06c18    56  ldur x0, [x1, #23]
0xffff8bd06c1c    60  stur x0, [x3, #-1]
0xffff8bd06c20    64  ldr x0, pc+200 (addr 0x0000ffff8bd06ce8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd06c24    68  stur x0, [x3, #7]
0xffff8bd06c28    72  ldr x0, pc+200 (addr 0x0000ffff8bd06cf0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd06c2c    76  stur x0, [x3, #15]
0xffff8bd06c30    80  movz x0, #0x0
0xffff8bd06c34    84  stur x0, [x3, #23]
0xffff8bd06c38    88  add x0, x3, #0x20 (32)
0xffff8bd06c3c    92  ldr x1, pc+188 (addr 0x0000ffff8bd06cf8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd06c40    96  stur x1, [x0, #-1]
0xffff8bd06c44   100  movz x1, #0x400000000
0xffff8bd06c48   104  stur x1, [x0, #7]
0xffff8bd06c4c   108  stur x0, [x3, #15]
0xffff8bd06c50   112  ldr x1, pc+176 (addr 0x0000ffff8bd06d00)    ;; object: 0x26c04519 <the hole>
0xffff8bd06c54   116  stur x1, [x0, #15]
0xffff8bd06c58   120  ldr x1, pc+176 (addr 0x0000ffff8bd06d08)    ;; object: 0x26c04519 <the hole>
0xffff8bd06c5c   124  stur x1, [x0, #23]
0xffff8bd06c60   128  ldr x1, pc+176 (addr 0x0000ffff8bd06d10)    ;; object: 0x26c04519 <the hole>
0xffff8bd06c64   132  stur x1, [x0, #31]
0xffff8bd06c68   136  ldr x1, pc+176 (addr 0x0000ffff8bd06d18)    ;; object: 0x26c04519 <the hole>
0xffff8bd06c6c   140  stur x1, [x0, #39]
0xffff8bd06c70   144  mov x0, x3
0xffff8bd06c74   148  add jssp, jssp, #0x8 (8)
0xffff8bd06c78   152  ret
0xffff8bd06c7c   156  sub csp, jssp, #0x10 (16)
0xffff8bd06c80   160  stp fp, lr, [jssp, #-16]!
0xffff8bd06c84   164  movz fp, #0xa00000000
0xffff8bd06c88   168  sub csp, jssp, #0x8 (8)
0xffff8bd06c8c   172  str fp, [jssp, #-8]!
0xffff8bd06c90   176  add fp, jssp, #0x8 (8)
0xffff8bd06c94   180  movz x3, #0x0
0xffff8bd06c98   184  mov x16, lr
0xffff8bd06c9c   188  ldr x17, pc+132 (addr 0x0000ffff8bd06d20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd06ca0   192  blr x17
0xffff8bd06ca4   196  movz x0, #0x5000000000
0xffff8bd06ca8   200  movz x10, #0x0
0xffff8bd06cac   204  sub csp, jssp, #0x10 (16)
0xffff8bd06cb0   208  stp x10, x0, [jssp, #-16]!
0xffff8bd06cb4   212  movz x0, #0x2
0xffff8bd06cb8   216  movz x1, #0x5b88
0xffff8bd06cbc   220  movk x1, #0xe2, lsl #16
0xffff8bd06cc0   224  ldr x16, pc+104 (addr 0x0000ffff8bd06d28)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd06cc4   228  blr x16
0xffff8bd06cc8   232  str x0, [jssp, #24]
0xffff8bd06ccc   236  ldr x16, pc+100 (addr 0x0000ffff8bd06d30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd06cd0   240  blr x16
0xffff8bd06cd4   244  ldr lr, [jssp, #16]
0xffff8bd06cd8   248  ldp xzr, fp, [jssp], #24
0xffff8bd06cdc   252  b #-0xcc (addr 0xffff8bd06c10)
0xffff8bd06ce0   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff8bd06ce4   260  d63f03e0       constant
0xffff8bd06ce8   264  26c04201       constant
0xffff8bd06cec   268  00000000       constant
0xffff8bd06cf0   272  26c04201       constant
0xffff8bd06cf4   276  00000000       constant
0xffff8bd06cf8   280  5f504259       constant
0xffff8bd06cfc   284  00000000       constant
0xffff8bd06d00   288  26c04519       constant
0xffff8bd06d04   292  00000000       constant
0xffff8bd06d08   296  26c04519       constant
0xffff8bd06d0c   300  00000000       constant
0xffff8bd06d10   304  26c04519       constant
0xffff8bd06d14   308  00000000       constant
0xffff8bd06d18   312  26c04519       constant
0xffff8bd06d1c   316  00000000       constant
0xffff8bd06d20   320  8bd06820       constant
0xffff8bd06d24   324  0000ffff       constant
0xffff8bd06d28   328  8bd06260       constant
0xffff8bd06d2c   332  0000ffff       constant
0xffff8bd06d30   336  8bd068e0       constant
0xffff8bd06d34   340  0000ffff       constant
0xffff8bd06d38   344  movz x16, #0x0
0xffff8bd06d3c   348  sub csp, jssp, #0x10 (16)
0xffff8bd06d40   352  stp fp, lr, [jssp, #-16]!
0xffff8bd06d44   356  bl #+0x4 (addr 0xffff8bd06d48)
0xffff8bd06d48   360  movz x17, #0xa00000000
0xffff8bd06d4c   364  sub csp, jssp, #0x10 (16)
0xffff8bd06d50   368  stp x17, cp, [jssp, #-16]!
0xffff8bd06d54   372  add fp, jssp, #0x10 (16)
0xffff8bd06d58   376  ldr x17, pc+24 (addr 0x0000ffff8bd06d70)    ;; lazy deoptimization bailout 0
0xffff8bd06d5c   380  add x17, x17, x16
0xffff8bd06d60   384  br x17
0xffff8bd06d64   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd06d68   392  d63f03e0       constant
0xffff8bd06d6c   396  d503201f       constant
0xffff8bd06d70   400  8bb06000       constant
0xffff8bd06d74   404  0000ffff       constant


Safepoints (size = 21)
0xffff8bd06cc8   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff8bd06c20  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd06c28  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd06c3c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd06c50  embedded object  (0x26c04519 <the hole>)
0xffff8bd06c58  embedded object  (0x26c04519 <the hole>)
0xffff8bd06c60  embedded object  (0x26c04519 <the hole>)
0xffff8bd06c68  embedded object  (0x26c04519 <the hole>)
0xffff8bd06c9c  code target (STUB)  (0xffff8bd06820)
0xffff8bd06cc0  code target (STUB)  (0xffff8bd06260)
0xffff8bd06ccc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd06ce0  constant pool (size 88)
0xffff8bd06d58  runtime entry
0xffff8bd06d64  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 485)
0xffff8bd06e00     0  movz w0, #0x6000
0xffff8bd06e04     4  movk w0, #0x9, lsl #16
0xffff8bd06e08     8  cmp w0, #0x30 (48)
0xffff8bd06e0c    12  b.ls #+0x184 (addr 0xffff8bd06f90)
0xffff8bd06e10    16  movz x3, #0xe2c0
0xffff8bd06e14    20  movk x3, #0x2cb8, lsl #16
0xffff8bd06e18    24  ldp x4, x0, [x3]
0xffff8bd06e1c    28  adds x16, x4, #0x60 (96)
0xffff8bd06e20    32  ccmp x16, x0, #nzCv, lo
0xffff8bd06e24    36  b.hi #+0xa4 (addr 0xffff8bd06ec8)
0xffff8bd06e28    40  str x16, [x3]
0xffff8bd06e2c    44  orr x4, x4, #0x1
0xffff8bd06e30    48  movz w0, #0x0
0xffff8bd06e34    52  stur x0, [x4, #47]
0xffff8bd06e38    56  ldur x0, [x1, #39]
0xffff8bd06e3c    60  ldur x0, [x0, #39]
0xffff8bd06e40    64  movz x16, #0x17f
0xffff8bd06e44    68  ldr x0, [x0, x16]
0xffff8bd06e48    72  stur x0, [x4, #-1]
0xffff8bd06e4c    76  ldr x0, pc+236 (addr 0x0000ffff8bd06f38)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd06e50    80  stur x0, [x4, #7]
0xffff8bd06e54    84  ldr x0, pc+236 (addr 0x0000ffff8bd06f40)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd06e58    88  stur x0, [x4, #15]
0xffff8bd06e5c    92  movz x0, #0x0
0xffff8bd06e60    96  stur x0, [x4, #23]
0xffff8bd06e64   100  add x0, x4, #0x20 (32)
0xffff8bd06e68   104  ldr x1, pc+224 (addr 0x0000ffff8bd06f48)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd06e6c   108  stur x1, [x0, #-1]
0xffff8bd06e70   112  stur x2, [x0, #7]
0xffff8bd06e74   116  ldur w0, [x2, #35]
0xffff8bd06e78   120  add w0, w0, #0x1 (1)
0xffff8bd06e7c   124  lsl x0, x0, #32
0xffff8bd06e80   128  stur x0, [x2, #31]
0xffff8bd06e84   132  add x0, x4, #0x30 (48)
0xffff8bd06e88   136  ldr x1, pc+200 (addr 0x0000ffff8bd06f50)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd06e8c   140  stur x1, [x0, #-1]
0xffff8bd06e90   144  movz x1, #0x400000000
0xffff8bd06e94   148  stur x1, [x0, #7]
0xffff8bd06e98   152  stur x0, [x4, #15]
0xffff8bd06e9c   156  ldr x1, pc+188 (addr 0x0000ffff8bd06f58)    ;; object: 0x26c04519 <the hole>
0xffff8bd06ea0   160  stur x1, [x0, #15]
0xffff8bd06ea4   164  ldr x1, pc+188 (addr 0x0000ffff8bd06f60)    ;; object: 0x26c04519 <the hole>
0xffff8bd06ea8   168  stur x1, [x0, #23]
0xffff8bd06eac   172  ldr x1, pc+188 (addr 0x0000ffff8bd06f68)    ;; object: 0x26c04519 <the hole>
0xffff8bd06eb0   176  stur x1, [x0, #31]
0xffff8bd06eb4   180  ldr x1, pc+188 (addr 0x0000ffff8bd06f70)    ;; object: 0x26c04519 <the hole>
0xffff8bd06eb8   184  stur x1, [x0, #39]
0xffff8bd06ebc   188  mov x0, x4
0xffff8bd06ec0   192  add jssp, jssp, #0x8 (8)
0xffff8bd06ec4   196  ret
0xffff8bd06ec8   200  sub csp, jssp, #0x10 (16)
0xffff8bd06ecc   204  stp fp, lr, [jssp, #-16]!
0xffff8bd06ed0   208  movz fp, #0xa00000000
0xffff8bd06ed4   212  sub csp, jssp, #0x8 (8)
0xffff8bd06ed8   216  str fp, [jssp, #-8]!
0xffff8bd06edc   220  add fp, jssp, #0x8 (8)
0xffff8bd06ee0   224  movz x4, #0x0
0xffff8bd06ee4   228  mov x16, lr
0xffff8bd06ee8   232  ldr x17, pc+144 (addr 0x0000ffff8bd06f78)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd06eec   236  blr x17
0xffff8bd06ef0   240  movz x0, #0x6000000000
0xffff8bd06ef4   244  movz x10, #0x0
0xffff8bd06ef8   248  sub csp, jssp, #0x10 (16)
0xffff8bd06efc   252  stp x10, x0, [jssp, #-16]!
0xffff8bd06f00   256  movz x0, #0x2
0xffff8bd06f04   260  movz x1, #0x5b88
0xffff8bd06f08   264  movk x1, #0xe2, lsl #16
0xffff8bd06f0c   268  ldr x16, pc+116 (addr 0x0000ffff8bd06f80)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd06f10   272  blr x16
0xffff8bd06f14   276  str x0, [jssp, #32]
0xffff8bd06f18   280  ldr x16, pc+112 (addr 0x0000ffff8bd06f88)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd06f1c   284  blr x16
0xffff8bd06f20   288  ldr lr, [jssp, #16]
0xffff8bd06f24   292  ldp xzr, fp, [jssp], #24
0xffff8bd06f28   296  b #-0xf8 (addr 0xffff8bd06e30)
0xffff8bd06f2c   300  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff8bd06f30   304  d63f03e0       constant
0xffff8bd06f34   308  d503201f       constant
0xffff8bd06f38   312  26c04201       constant
0xffff8bd06f3c   316  00000000       constant
0xffff8bd06f40   320  26c04201       constant
0xffff8bd06f44   324  00000000       constant
0xffff8bd06f48   328  5f505d81       constant
0xffff8bd06f4c   332  00000000       constant
0xffff8bd06f50   336  5f504259       constant
0xffff8bd06f54   340  00000000       constant
0xffff8bd06f58   344  26c04519       constant
0xffff8bd06f5c   348  00000000       constant
0xffff8bd06f60   352  26c04519       constant
0xffff8bd06f64   356  00000000       constant
0xffff8bd06f68   360  26c04519       constant
0xffff8bd06f6c   364  00000000       constant
0xffff8bd06f70   368  26c04519       constant
0xffff8bd06f74   372  00000000       constant
0xffff8bd06f78   376  8bd06820       constant
0xffff8bd06f7c   380  0000ffff       constant
0xffff8bd06f80   384  8bd06260       constant
0xffff8bd06f84   388  0000ffff       constant
0xffff8bd06f88   392  8bd068e0       constant
0xffff8bd06f8c   396  0000ffff       constant
0xffff8bd06f90   400  movz x16, #0x0
0xffff8bd06f94   404  sub csp, jssp, #0x10 (16)
0xffff8bd06f98   408  stp fp, lr, [jssp, #-16]!
0xffff8bd06f9c   412  bl #+0x4 (addr 0xffff8bd06fa0)
0xffff8bd06fa0   416  movz x17, #0xa00000000
0xffff8bd06fa4   420  sub csp, jssp, #0x10 (16)
0xffff8bd06fa8   424  stp x17, cp, [jssp, #-16]!
0xffff8bd06fac   428  add fp, jssp, #0x10 (16)
0xffff8bd06fb0   432  ldr x17, pc+24 (addr 0x0000ffff8bd06fc8)    ;; lazy deoptimization bailout 0
0xffff8bd06fb4   436  add x17, x17, x16
0xffff8bd06fb8   440  br x17
0xffff8bd06fbc   444  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd06fc0   448  d63f03e0       constant
0xffff8bd06fc4   452  d503201f       constant
0xffff8bd06fc8   456  8bb06000       constant
0xffff8bd06fcc   460  0000ffff       constant


Safepoints (size = 21)
0xffff8bd06f14   276  000 | x1 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 29)
0xffff8bd06e4c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd06e54  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd06e68  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd06e88  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd06e9c  embedded object  (0x26c04519 <the hole>)
0xffff8bd06ea4  embedded object  (0x26c04519 <the hole>)
0xffff8bd06eac  embedded object  (0x26c04519 <the hole>)
0xffff8bd06eb4  embedded object  (0x26c04519 <the hole>)
0xffff8bd06ee8  code target (STUB)  (0xffff8bd06820)
0xffff8bd06f0c  code target (STUB)  (0xffff8bd06260)
0xffff8bd06f18  code target (STUB)  (0xffff8bd068e0)
0xffff8bd06f2c  constant pool (size 100)
0xffff8bd06fb0  runtime entry
0xffff8bd06fbc  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_HOLEY_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 485)
0xffff8bd06e00     0  movz w0, #0x6000
0xffff8bd06e04     4  movk w0, #0x9, lsl #16
0xffff8bd06e08     8  cmp w0, #0x30 (48)
0xffff8bd06e0c    12  b.ls #+0x184 (addr 0xffff8bd06f90)
0xffff8bd06e10    16  movz x3, #0xe2c0
0xffff8bd06e14    20  movk x3, #0x2cb8, lsl #16
0xffff8bd06e18    24  ldp x4, x0, [x3]
0xffff8bd06e1c    28  adds x16, x4, #0x60 (96)
0xffff8bd06e20    32  ccmp x16, x0, #nzCv, lo
0xffff8bd06e24    36  b.hi #+0xa4 (addr 0xffff8bd06ec8)
0xffff8bd06e28    40  str x16, [x3]
0xffff8bd06e2c    44  orr x4, x4, #0x1
0xffff8bd06e30    48  movz w0, #0x0
0xffff8bd06e34    52  stur x0, [x4, #47]
0xffff8bd06e38    56  ldur x0, [x1, #39]
0xffff8bd06e3c    60  ldur x0, [x0, #39]
0xffff8bd06e40    64  movz x16, #0x17f
0xffff8bd06e44    68  ldr x0, [x0, x16]
0xffff8bd06e48    72  stur x0, [x4, #-1]
0xffff8bd06e4c    76  ldr x0, pc+236 (addr 0x0000ffff8bd06f38)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd06e50    80  stur x0, [x4, #7]
0xffff8bd06e54    84  ldr x0, pc+236 (addr 0x0000ffff8bd06f40)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd06e58    88  stur x0, [x4, #15]
0xffff8bd06e5c    92  movz x0, #0x0
0xffff8bd06e60    96  stur x0, [x4, #23]
0xffff8bd06e64   100  add x0, x4, #0x20 (32)
0xffff8bd06e68   104  ldr x1, pc+224 (addr 0x0000ffff8bd06f48)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd06e6c   108  stur x1, [x0, #-1]
0xffff8bd06e70   112  stur x2, [x0, #7]
0xffff8bd06e74   116  ldur w0, [x2, #35]
0xffff8bd06e78   120  add w0, w0, #0x1 (1)
0xffff8bd06e7c   124  lsl x0, x0, #32
0xffff8bd06e80   128  stur x0, [x2, #31]
0xffff8bd06e84   132  add x0, x4, #0x30 (48)
0xffff8bd06e88   136  ldr x1, pc+200 (addr 0x0000ffff8bd06f50)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd06e8c   140  stur x1, [x0, #-1]
0xffff8bd06e90   144  movz x1, #0x400000000
0xffff8bd06e94   148  stur x1, [x0, #7]
0xffff8bd06e98   152  stur x0, [x4, #15]
0xffff8bd06e9c   156  ldr x1, pc+188 (addr 0x0000ffff8bd06f58)    ;; object: 0x26c04519 <the hole>
0xffff8bd06ea0   160  stur x1, [x0, #15]
0xffff8bd06ea4   164  ldr x1, pc+188 (addr 0x0000ffff8bd06f60)    ;; object: 0x26c04519 <the hole>
0xffff8bd06ea8   168  stur x1, [x0, #23]
0xffff8bd06eac   172  ldr x1, pc+188 (addr 0x0000ffff8bd06f68)    ;; object: 0x26c04519 <the hole>
0xffff8bd06eb0   176  stur x1, [x0, #31]
0xffff8bd06eb4   180  ldr x1, pc+188 (addr 0x0000ffff8bd06f70)    ;; object: 0x26c04519 <the hole>
0xffff8bd06eb8   184  stur x1, [x0, #39]
0xffff8bd06ebc   188  mov x0, x4
0xffff8bd06ec0   192  add jssp, jssp, #0x8 (8)
0xffff8bd06ec4   196  ret
0xffff8bd06ec8   200  sub csp, jssp, #0x10 (16)
0xffff8bd06ecc   204  stp fp, lr, [jssp, #-16]!
0xffff8bd06ed0   208  movz fp, #0xa00000000
0xffff8bd06ed4   212  sub csp, jssp, #0x8 (8)
0xffff8bd06ed8   216  str fp, [jssp, #-8]!
0xffff8bd06edc   220  add fp, jssp, #0x8 (8)
0xffff8bd06ee0   224  movz x4, #0x0
0xffff8bd06ee4   228  mov x16, lr
0xffff8bd06ee8   232  ldr x17, pc+144 (addr 0x0000ffff8bd06f78)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd06eec   236  blr x17
0xffff8bd06ef0   240  movz x0, #0x6000000000
0xffff8bd06ef4   244  movz x10, #0x0
0xffff8bd06ef8   248  sub csp, jssp, #0x10 (16)
0xffff8bd06efc   252  stp x10, x0, [jssp, #-16]!
0xffff8bd06f00   256  movz x0, #0x2
0xffff8bd06f04   260  movz x1, #0x5b88
0xffff8bd06f08   264  movk x1, #0xe2, lsl #16
0xffff8bd06f0c   268  ldr x16, pc+116 (addr 0x0000ffff8bd06f80)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd06f10   272  blr x16
0xffff8bd06f14   276  str x0, [jssp, #32]
0xffff8bd06f18   280  ldr x16, pc+112 (addr 0x0000ffff8bd06f88)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd06f1c   284  blr x16
0xffff8bd06f20   288  ldr lr, [jssp, #16]
0xffff8bd06f24   292  ldp xzr, fp, [jssp], #24
0xffff8bd06f28   296  b #-0xf8 (addr 0xffff8bd06e30)
0xffff8bd06f2c   300  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff8bd06f30   304  d63f03e0       constant
0xffff8bd06f34   308  d503201f       constant
0xffff8bd06f38   312  26c04201       constant
0xffff8bd06f3c   316  00000000       constant
0xffff8bd06f40   320  26c04201       constant
0xffff8bd06f44   324  00000000       constant
0xffff8bd06f48   328  5f505d81       constant
0xffff8bd06f4c   332  00000000       constant
0xffff8bd06f50   336  5f504259       constant
0xffff8bd06f54   340  00000000       constant
0xffff8bd06f58   344  26c04519       constant
0xffff8bd06f5c   348  00000000       constant
0xffff8bd06f60   352  26c04519       constant
0xffff8bd06f64   356  00000000       constant
0xffff8bd06f68   360  26c04519       constant
0xffff8bd06f6c   364  00000000       constant
0xffff8bd06f70   368  26c04519       constant
0xffff8bd06f74   372  00000000       constant
0xffff8bd06f78   376  8bd06820       constant
0xffff8bd06f7c   380  0000ffff       constant
0xffff8bd06f80   384  8bd06260       constant
0xffff8bd06f84   388  0000ffff       constant
0xffff8bd06f88   392  8bd068e0       constant
0xffff8bd06f8c   396  0000ffff       constant
0xffff8bd06f90   400  movz x16, #0x0
0xffff8bd06f94   404  sub csp, jssp, #0x10 (16)
0xffff8bd06f98   408  stp fp, lr, [jssp, #-16]!
0xffff8bd06f9c   412  bl #+0x4 (addr 0xffff8bd06fa0)
0xffff8bd06fa0   416  movz x17, #0xa00000000
0xffff8bd06fa4   420  sub csp, jssp, #0x10 (16)
0xffff8bd06fa8   424  stp x17, cp, [jssp, #-16]!
0xffff8bd06fac   428  add fp, jssp, #0x10 (16)
0xffff8bd06fb0   432  ldr x17, pc+24 (addr 0x0000ffff8bd06fc8)    ;; lazy deoptimization bailout 0
0xffff8bd06fb4   436  add x17, x17, x16
0xffff8bd06fb8   440  br x17
0xffff8bd06fbc   444  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd06fc0   448  d63f03e0       constant
0xffff8bd06fc4   452  d503201f       constant
0xffff8bd06fc8   456  8bb06000       constant
0xffff8bd06fcc   460  0000ffff       constant


Safepoints (size = 21)
0xffff8bd06f14   276  000 | x1 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 29)
0xffff8bd06e4c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd06e54  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd06e68  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd06e88  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd06e9c  embedded object  (0x26c04519 <the hole>)
0xffff8bd06ea4  embedded object  (0x26c04519 <the hole>)
0xffff8bd06eac  embedded object  (0x26c04519 <the hole>)
0xffff8bd06eb4  embedded object  (0x26c04519 <the hole>)
0xffff8bd06ee8  code target (STUB)  (0xffff8bd06820)
0xffff8bd06f0c  code target (STUB)  (0xffff8bd06260)
0xffff8bd06f18  code target (STUB)  (0xffff8bd068e0)
0xffff8bd06f2c  constant pool (size 100)
0xffff8bd06fb0  runtime entry
0xffff8bd06fbc  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 445)
0xffff8bd07060     0  movz w0, #0x6000
0xffff8bd07064     4  movk w0, #0x9, lsl #16
0xffff8bd07068     8  cmp w0, #0x30 (48)
0xffff8bd0706c    12  b.ls #+0x15c (addr 0xffff8bd071c8)
0xffff8bd07070    16  movz x2, #0xe2c0
0xffff8bd07074    20  movk x2, #0x2cb8, lsl #16
0xffff8bd07078    24  ldp x3, x0, [x2]
0xffff8bd0707c    28  adds x16, x3, #0x50 (80)
0xffff8bd07080    32  ccmp x16, x0, #nzCv, lo
0xffff8bd07084    36  b.hi #+0x84 (addr 0xffff8bd07108)
0xffff8bd07088    40  str x16, [x2]
0xffff8bd0708c    44  orr x3, x3, #0x1
0xffff8bd07090    48  movz w0, #0x0
0xffff8bd07094    52  stur x0, [x3, #31]
0xffff8bd07098    56  ldur x0, [x1, #39]
0xffff8bd0709c    60  ldur x0, [x0, #39]
0xffff8bd070a0    64  movz x16, #0x17f
0xffff8bd070a4    68  ldr x0, [x0, x16]
0xffff8bd070a8    72  stur x0, [x3, #-1]
0xffff8bd070ac    76  ldr x0, pc+204 (addr 0x0000ffff8bd07178)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd070b0    80  stur x0, [x3, #7]
0xffff8bd070b4    84  ldr x0, pc+204 (addr 0x0000ffff8bd07180)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd070b8    88  stur x0, [x3, #15]
0xffff8bd070bc    92  movz x0, #0x0
0xffff8bd070c0    96  stur x0, [x3, #23]
0xffff8bd070c4   100  add x0, x3, #0x20 (32)
0xffff8bd070c8   104  ldr x1, pc+192 (addr 0x0000ffff8bd07188)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd070cc   108  stur x1, [x0, #-1]
0xffff8bd070d0   112  movz x1, #0x400000000
0xffff8bd070d4   116  stur x1, [x0, #7]
0xffff8bd070d8   120  stur x0, [x3, #15]
0xffff8bd070dc   124  ldr x1, pc+180 (addr 0x0000ffff8bd07190)    ;; object: 0x26c04519 <the hole>
0xffff8bd070e0   128  stur x1, [x0, #15]
0xffff8bd070e4   132  ldr x1, pc+180 (addr 0x0000ffff8bd07198)    ;; object: 0x26c04519 <the hole>
0xffff8bd070e8   136  stur x1, [x0, #23]
0xffff8bd070ec   140  ldr x1, pc+180 (addr 0x0000ffff8bd071a0)    ;; object: 0x26c04519 <the hole>
0xffff8bd070f0   144  stur x1, [x0, #31]
0xffff8bd070f4   148  ldr x1, pc+180 (addr 0x0000ffff8bd071a8)    ;; object: 0x26c04519 <the hole>
0xffff8bd070f8   152  stur x1, [x0, #39]
0xffff8bd070fc   156  mov x0, x3
0xffff8bd07100   160  add jssp, jssp, #0x8 (8)
0xffff8bd07104   164  ret
0xffff8bd07108   168  sub csp, jssp, #0x10 (16)
0xffff8bd0710c   172  stp fp, lr, [jssp, #-16]!
0xffff8bd07110   176  movz fp, #0xa00000000
0xffff8bd07114   180  sub csp, jssp, #0x8 (8)
0xffff8bd07118   184  str fp, [jssp, #-8]!
0xffff8bd0711c   188  add fp, jssp, #0x8 (8)
0xffff8bd07120   192  movz x3, #0x0
0xffff8bd07124   196  mov x16, lr
0xffff8bd07128   200  ldr x17, pc+136 (addr 0x0000ffff8bd071b0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0712c   204  blr x17
0xffff8bd07130   208  movz x0, #0x5000000000
0xffff8bd07134   212  movz x10, #0x0
0xffff8bd07138   216  sub csp, jssp, #0x10 (16)
0xffff8bd0713c   220  stp x10, x0, [jssp, #-16]!
0xffff8bd07140   224  movz x0, #0x2
0xffff8bd07144   228  movz x1, #0x5b88
0xffff8bd07148   232  movk x1, #0xe2, lsl #16
0xffff8bd0714c   236  ldr x16, pc+108 (addr 0x0000ffff8bd071b8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd07150   240  blr x16
0xffff8bd07154   244  str x0, [jssp, #24]
0xffff8bd07158   248  ldr x16, pc+104 (addr 0x0000ffff8bd071c0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0715c   252  blr x16
0xffff8bd07160   256  ldr lr, [jssp, #16]
0xffff8bd07164   260  ldp xzr, fp, [jssp], #24
0xffff8bd07168   264  b #-0xd8 (addr 0xffff8bd07090)
0xffff8bd0716c   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff8bd07170   272  d63f03e0       constant
0xffff8bd07174   276  d503201f       constant
0xffff8bd07178   280  26c04201       constant
0xffff8bd0717c   284  00000000       constant
0xffff8bd07180   288  26c04201       constant
0xffff8bd07184   292  00000000       constant
0xffff8bd07188   296  5f504259       constant
0xffff8bd0718c   300  00000000       constant
0xffff8bd07190   304  26c04519       constant
0xffff8bd07194   308  00000000       constant
0xffff8bd07198   312  26c04519       constant
0xffff8bd0719c   316  00000000       constant
0xffff8bd071a0   320  26c04519       constant
0xffff8bd071a4   324  00000000       constant
0xffff8bd071a8   328  26c04519       constant
0xffff8bd071ac   332  00000000       constant
0xffff8bd071b0   336  8bd06820       constant
0xffff8bd071b4   340  0000ffff       constant
0xffff8bd071b8   344  8bd06260       constant
0xffff8bd071bc   348  0000ffff       constant
0xffff8bd071c0   352  8bd068e0       constant
0xffff8bd071c4   356  0000ffff       constant
0xffff8bd071c8   360  movz x16, #0x0
0xffff8bd071cc   364  sub csp, jssp, #0x10 (16)
0xffff8bd071d0   368  stp fp, lr, [jssp, #-16]!
0xffff8bd071d4   372  bl #+0x4 (addr 0xffff8bd071d8)
0xffff8bd071d8   376  movz x17, #0xa00000000
0xffff8bd071dc   380  sub csp, jssp, #0x10 (16)
0xffff8bd071e0   384  stp x17, cp, [jssp, #-16]!
0xffff8bd071e4   388  add fp, jssp, #0x10 (16)
0xffff8bd071e8   392  ldr x17, pc+24 (addr 0x0000ffff8bd07200)    ;; lazy deoptimization bailout 0
0xffff8bd071ec   396  add x17, x17, x16
0xffff8bd071f0   400  br x17
0xffff8bd071f4   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd071f8   408  d63f03e0       constant
0xffff8bd071fc   412  d503201f       constant
0xffff8bd07200   416  8bb06000       constant
0xffff8bd07204   420  0000ffff       constant


Safepoints (size = 21)
0xffff8bd07154   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff8bd070ac  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd070b4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd070c8  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd070dc  embedded object  (0x26c04519 <the hole>)
0xffff8bd070e4  embedded object  (0x26c04519 <the hole>)
0xffff8bd070ec  embedded object  (0x26c04519 <the hole>)
0xffff8bd070f4  embedded object  (0x26c04519 <the hole>)
0xffff8bd07128  code target (STUB)  (0xffff8bd06820)
0xffff8bd0714c  code target (STUB)  (0xffff8bd06260)
0xffff8bd07158  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0716c  constant pool (size 92)
0xffff8bd071e8  runtime entry
0xffff8bd071f4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_HOLEY_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 445)
0xffff8bd07060     0  movz w0, #0x6000
0xffff8bd07064     4  movk w0, #0x9, lsl #16
0xffff8bd07068     8  cmp w0, #0x30 (48)
0xffff8bd0706c    12  b.ls #+0x15c (addr 0xffff8bd071c8)
0xffff8bd07070    16  movz x2, #0xe2c0
0xffff8bd07074    20  movk x2, #0x2cb8, lsl #16
0xffff8bd07078    24  ldp x3, x0, [x2]
0xffff8bd0707c    28  adds x16, x3, #0x50 (80)
0xffff8bd07080    32  ccmp x16, x0, #nzCv, lo
0xffff8bd07084    36  b.hi #+0x84 (addr 0xffff8bd07108)
0xffff8bd07088    40  str x16, [x2]
0xffff8bd0708c    44  orr x3, x3, #0x1
0xffff8bd07090    48  movz w0, #0x0
0xffff8bd07094    52  stur x0, [x3, #31]
0xffff8bd07098    56  ldur x0, [x1, #39]
0xffff8bd0709c    60  ldur x0, [x0, #39]
0xffff8bd070a0    64  movz x16, #0x17f
0xffff8bd070a4    68  ldr x0, [x0, x16]
0xffff8bd070a8    72  stur x0, [x3, #-1]
0xffff8bd070ac    76  ldr x0, pc+204 (addr 0x0000ffff8bd07178)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd070b0    80  stur x0, [x3, #7]
0xffff8bd070b4    84  ldr x0, pc+204 (addr 0x0000ffff8bd07180)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd070b8    88  stur x0, [x3, #15]
0xffff8bd070bc    92  movz x0, #0x0
0xffff8bd070c0    96  stur x0, [x3, #23]
0xffff8bd070c4   100  add x0, x3, #0x20 (32)
0xffff8bd070c8   104  ldr x1, pc+192 (addr 0x0000ffff8bd07188)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd070cc   108  stur x1, [x0, #-1]
0xffff8bd070d0   112  movz x1, #0x400000000
0xffff8bd070d4   116  stur x1, [x0, #7]
0xffff8bd070d8   120  stur x0, [x3, #15]
0xffff8bd070dc   124  ldr x1, pc+180 (addr 0x0000ffff8bd07190)    ;; object: 0x26c04519 <the hole>
0xffff8bd070e0   128  stur x1, [x0, #15]
0xffff8bd070e4   132  ldr x1, pc+180 (addr 0x0000ffff8bd07198)    ;; object: 0x26c04519 <the hole>
0xffff8bd070e8   136  stur x1, [x0, #23]
0xffff8bd070ec   140  ldr x1, pc+180 (addr 0x0000ffff8bd071a0)    ;; object: 0x26c04519 <the hole>
0xffff8bd070f0   144  stur x1, [x0, #31]
0xffff8bd070f4   148  ldr x1, pc+180 (addr 0x0000ffff8bd071a8)    ;; object: 0x26c04519 <the hole>
0xffff8bd070f8   152  stur x1, [x0, #39]
0xffff8bd070fc   156  mov x0, x3
0xffff8bd07100   160  add jssp, jssp, #0x8 (8)
0xffff8bd07104   164  ret
0xffff8bd07108   168  sub csp, jssp, #0x10 (16)
0xffff8bd0710c   172  stp fp, lr, [jssp, #-16]!
0xffff8bd07110   176  movz fp, #0xa00000000
0xffff8bd07114   180  sub csp, jssp, #0x8 (8)
0xffff8bd07118   184  str fp, [jssp, #-8]!
0xffff8bd0711c   188  add fp, jssp, #0x8 (8)
0xffff8bd07120   192  movz x3, #0x0
0xffff8bd07124   196  mov x16, lr
0xffff8bd07128   200  ldr x17, pc+136 (addr 0x0000ffff8bd071b0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0712c   204  blr x17
0xffff8bd07130   208  movz x0, #0x5000000000
0xffff8bd07134   212  movz x10, #0x0
0xffff8bd07138   216  sub csp, jssp, #0x10 (16)
0xffff8bd0713c   220  stp x10, x0, [jssp, #-16]!
0xffff8bd07140   224  movz x0, #0x2
0xffff8bd07144   228  movz x1, #0x5b88
0xffff8bd07148   232  movk x1, #0xe2, lsl #16
0xffff8bd0714c   236  ldr x16, pc+108 (addr 0x0000ffff8bd071b8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd07150   240  blr x16
0xffff8bd07154   244  str x0, [jssp, #24]
0xffff8bd07158   248  ldr x16, pc+104 (addr 0x0000ffff8bd071c0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0715c   252  blr x16
0xffff8bd07160   256  ldr lr, [jssp, #16]
0xffff8bd07164   260  ldp xzr, fp, [jssp], #24
0xffff8bd07168   264  b #-0xd8 (addr 0xffff8bd07090)
0xffff8bd0716c   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff8bd07170   272  d63f03e0       constant
0xffff8bd07174   276  d503201f       constant
0xffff8bd07178   280  26c04201       constant
0xffff8bd0717c   284  00000000       constant
0xffff8bd07180   288  26c04201       constant
0xffff8bd07184   292  00000000       constant
0xffff8bd07188   296  5f504259       constant
0xffff8bd0718c   300  00000000       constant
0xffff8bd07190   304  26c04519       constant
0xffff8bd07194   308  00000000       constant
0xffff8bd07198   312  26c04519       constant
0xffff8bd0719c   316  00000000       constant
0xffff8bd071a0   320  26c04519       constant
0xffff8bd071a4   324  00000000       constant
0xffff8bd071a8   328  26c04519       constant
0xffff8bd071ac   332  00000000       constant
0xffff8bd071b0   336  8bd06820       constant
0xffff8bd071b4   340  0000ffff       constant
0xffff8bd071b8   344  8bd06260       constant
0xffff8bd071bc   348  0000ffff       constant
0xffff8bd071c0   352  8bd068e0       constant
0xffff8bd071c4   356  0000ffff       constant
0xffff8bd071c8   360  movz x16, #0x0
0xffff8bd071cc   364  sub csp, jssp, #0x10 (16)
0xffff8bd071d0   368  stp fp, lr, [jssp, #-16]!
0xffff8bd071d4   372  bl #+0x4 (addr 0xffff8bd071d8)
0xffff8bd071d8   376  movz x17, #0xa00000000
0xffff8bd071dc   380  sub csp, jssp, #0x10 (16)
0xffff8bd071e0   384  stp x17, cp, [jssp, #-16]!
0xffff8bd071e4   388  add fp, jssp, #0x10 (16)
0xffff8bd071e8   392  ldr x17, pc+24 (addr 0x0000ffff8bd07200)    ;; lazy deoptimization bailout 0
0xffff8bd071ec   396  add x17, x17, x16
0xffff8bd071f0   400  br x17
0xffff8bd071f4   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd071f8   408  d63f03e0       constant
0xffff8bd071fc   412  d503201f       constant
0xffff8bd07200   416  8bb06000       constant
0xffff8bd07204   420  0000ffff       constant


Safepoints (size = 21)
0xffff8bd07154   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff8bd070ac  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd070b4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd070c8  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd070dc  embedded object  (0x26c04519 <the hole>)
0xffff8bd070e4  embedded object  (0x26c04519 <the hole>)
0xffff8bd070ec  embedded object  (0x26c04519 <the hole>)
0xffff8bd070f4  embedded object  (0x26c04519 <the hole>)
0xffff8bd07128  code target (STUB)  (0xffff8bd06820)
0xffff8bd0714c  code target (STUB)  (0xffff8bd06260)
0xffff8bd07158  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0716c  constant pool (size 92)
0xffff8bd071e8  runtime entry
0xffff8bd071f4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 405)
0xffff8bd07280     0  movz w0, #0x6000
0xffff8bd07284     4  movk w0, #0x9, lsl #16
0xffff8bd07288     8  cmp w0, #0x30 (48)
0xffff8bd0728c    12  b.ls #+0x134 (addr 0xffff8bd073c0)
0xffff8bd07290    16  movz x2, #0xe2c0
0xffff8bd07294    20  movk x2, #0x2cb8, lsl #16
0xffff8bd07298    24  ldp x3, x0, [x2]
0xffff8bd0729c    28  adds x16, x3, #0x50 (80)
0xffff8bd072a0    32  ccmp x16, x0, #nzCv, lo
0xffff8bd072a4    36  b.hi #+0x78 (addr 0xffff8bd0731c)
0xffff8bd072a8    40  str x16, [x2]
0xffff8bd072ac    44  orr x3, x3, #0x1
0xffff8bd072b0    48  movz w0, #0x0
0xffff8bd072b4    52  stur x0, [x3, #31]
0xffff8bd072b8    56  ldur x0, [x1, #39]
0xffff8bd072bc    60  ldur x0, [x0, #39]
0xffff8bd072c0    64  movz x16, #0x197
0xffff8bd072c4    68  ldr x0, [x0, x16]
0xffff8bd072c8    72  stur x0, [x3, #-1]
0xffff8bd072cc    76  ldr x0, pc+196 (addr 0x0000ffff8bd07390)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd072d0    80  stur x0, [x3, #7]
0xffff8bd072d4    84  ldr x0, pc+196 (addr 0x0000ffff8bd07398)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd072d8    88  stur x0, [x3, #15]
0xffff8bd072dc    92  movz x0, #0x0
0xffff8bd072e0    96  stur x0, [x3, #23]
0xffff8bd072e4   100  add x0, x3, #0x20 (32)
0xffff8bd072e8   104  ldr x1, pc+184 (addr 0x0000ffff8bd073a0)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd072ec   108  stur x1, [x0, #-1]
0xffff8bd072f0   112  movz x1, #0x400000000
0xffff8bd072f4   116  stur x1, [x0, #7]
0xffff8bd072f8   120  stur x0, [x3, #15]
0xffff8bd072fc   124  ldr d0, pc+140 (addr 0x0000ffff8bd07388)
0xffff8bd07300   128  stur d0, [x0, #15]
0xffff8bd07304   132  stur d0, [x0, #23]
0xffff8bd07308   136  stur d0, [x0, #31]
0xffff8bd0730c   140  stur d0, [x0, #39]
0xffff8bd07310   144  mov x0, x3
0xffff8bd07314   148  add jssp, jssp, #0x8 (8)
0xffff8bd07318   152  ret
0xffff8bd0731c   156  sub csp, jssp, #0x10 (16)
0xffff8bd07320   160  stp fp, lr, [jssp, #-16]!
0xffff8bd07324   164  movz fp, #0xa00000000
0xffff8bd07328   168  sub csp, jssp, #0x8 (8)
0xffff8bd0732c   172  str fp, [jssp, #-8]!
0xffff8bd07330   176  add fp, jssp, #0x8 (8)
0xffff8bd07334   180  movz x3, #0x0
0xffff8bd07338   184  mov x16, lr
0xffff8bd0733c   188  ldr x17, pc+108 (addr 0x0000ffff8bd073a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd07340   192  blr x17
0xffff8bd07344   196  movz x0, #0x5000000000
0xffff8bd07348   200  movz x10, #0x100000000
0xffff8bd0734c   204  sub csp, jssp, #0x10 (16)
0xffff8bd07350   208  stp x10, x0, [jssp, #-16]!
0xffff8bd07354   212  movz x0, #0x2
0xffff8bd07358   216  movz x1, #0x5b88
0xffff8bd0735c   220  movk x1, #0xe2, lsl #16
0xffff8bd07360   224  ldr x16, pc+80 (addr 0x0000ffff8bd073b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd07364   228  blr x16
0xffff8bd07368   232  str x0, [jssp, #24]
0xffff8bd0736c   236  ldr x16, pc+76 (addr 0x0000ffff8bd073b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd07370   240  blr x16
0xffff8bd07374   244  ldr lr, [jssp, #16]
0xffff8bd07378   248  ldp xzr, fp, [jssp], #24
0xffff8bd0737c   252  b #-0xcc (addr 0xffff8bd072b0)
0xffff8bd07380   256  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd07384   260  d63f03e0       constant
0xffff8bd07388   264  fff7ffff       constant
0xffff8bd0738c   268  fff7ffff       constant
0xffff8bd07390   272  26c04201       constant
0xffff8bd07394   276  00000000       constant
0xffff8bd07398   280  26c04201       constant
0xffff8bd0739c   284  00000000       constant
0xffff8bd073a0   288  5f5052d9       constant
0xffff8bd073a4   292  00000000       constant
0xffff8bd073a8   296  8bd06820       constant
0xffff8bd073ac   300  0000ffff       constant
0xffff8bd073b0   304  8bd06260       constant
0xffff8bd073b4   308  0000ffff       constant
0xffff8bd073b8   312  8bd068e0       constant
0xffff8bd073bc   316  0000ffff       constant
0xffff8bd073c0   320  movz x16, #0x0
0xffff8bd073c4   324  sub csp, jssp, #0x10 (16)
0xffff8bd073c8   328  stp fp, lr, [jssp, #-16]!
0xffff8bd073cc   332  bl #+0x4 (addr 0xffff8bd073d0)
0xffff8bd073d0   336  movz x17, #0xa00000000
0xffff8bd073d4   340  sub csp, jssp, #0x10 (16)
0xffff8bd073d8   344  stp x17, cp, [jssp, #-16]!
0xffff8bd073dc   348  add fp, jssp, #0x10 (16)
0xffff8bd073e0   352  ldr x17, pc+24 (addr 0x0000ffff8bd073f8)    ;; lazy deoptimization bailout 0
0xffff8bd073e4   356  add x17, x17, x16
0xffff8bd073e8   360  br x17
0xffff8bd073ec   364  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd073f0   368  d63f03e0       constant
0xffff8bd073f4   372  d503201f       constant
0xffff8bd073f8   376  8bb06000       constant
0xffff8bd073fc   380  0000ffff       constant


Safepoints (size = 21)
0xffff8bd07368   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd072cc  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd072d4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd072e8  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0733c  code target (STUB)  (0xffff8bd06820)
0xffff8bd07360  code target (STUB)  (0xffff8bd06260)
0xffff8bd0736c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd07380  constant pool (size 64)
0xffff8bd073e0  runtime entry
0xffff8bd073ec  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 405)
0xffff8bd07280     0  movz w0, #0x6000
0xffff8bd07284     4  movk w0, #0x9, lsl #16
0xffff8bd07288     8  cmp w0, #0x30 (48)
0xffff8bd0728c    12  b.ls #+0x134 (addr 0xffff8bd073c0)
0xffff8bd07290    16  movz x2, #0xe2c0
0xffff8bd07294    20  movk x2, #0x2cb8, lsl #16
0xffff8bd07298    24  ldp x3, x0, [x2]
0xffff8bd0729c    28  adds x16, x3, #0x50 (80)
0xffff8bd072a0    32  ccmp x16, x0, #nzCv, lo
0xffff8bd072a4    36  b.hi #+0x78 (addr 0xffff8bd0731c)
0xffff8bd072a8    40  str x16, [x2]
0xffff8bd072ac    44  orr x3, x3, #0x1
0xffff8bd072b0    48  movz w0, #0x0
0xffff8bd072b4    52  stur x0, [x3, #31]
0xffff8bd072b8    56  ldur x0, [x1, #39]
0xffff8bd072bc    60  ldur x0, [x0, #39]
0xffff8bd072c0    64  movz x16, #0x197
0xffff8bd072c4    68  ldr x0, [x0, x16]
0xffff8bd072c8    72  stur x0, [x3, #-1]
0xffff8bd072cc    76  ldr x0, pc+196 (addr 0x0000ffff8bd07390)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd072d0    80  stur x0, [x3, #7]
0xffff8bd072d4    84  ldr x0, pc+196 (addr 0x0000ffff8bd07398)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd072d8    88  stur x0, [x3, #15]
0xffff8bd072dc    92  movz x0, #0x0
0xffff8bd072e0    96  stur x0, [x3, #23]
0xffff8bd072e4   100  add x0, x3, #0x20 (32)
0xffff8bd072e8   104  ldr x1, pc+184 (addr 0x0000ffff8bd073a0)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd072ec   108  stur x1, [x0, #-1]
0xffff8bd072f0   112  movz x1, #0x400000000
0xffff8bd072f4   116  stur x1, [x0, #7]
0xffff8bd072f8   120  stur x0, [x3, #15]
0xffff8bd072fc   124  ldr d0, pc+140 (addr 0x0000ffff8bd07388)
0xffff8bd07300   128  stur d0, [x0, #15]
0xffff8bd07304   132  stur d0, [x0, #23]
0xffff8bd07308   136  stur d0, [x0, #31]
0xffff8bd0730c   140  stur d0, [x0, #39]
0xffff8bd07310   144  mov x0, x3
0xffff8bd07314   148  add jssp, jssp, #0x8 (8)
0xffff8bd07318   152  ret
0xffff8bd0731c   156  sub csp, jssp, #0x10 (16)
0xffff8bd07320   160  stp fp, lr, [jssp, #-16]!
0xffff8bd07324   164  movz fp, #0xa00000000
0xffff8bd07328   168  sub csp, jssp, #0x8 (8)
0xffff8bd0732c   172  str fp, [jssp, #-8]!
0xffff8bd07330   176  add fp, jssp, #0x8 (8)
0xffff8bd07334   180  movz x3, #0x0
0xffff8bd07338   184  mov x16, lr
0xffff8bd0733c   188  ldr x17, pc+108 (addr 0x0000ffff8bd073a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd07340   192  blr x17
0xffff8bd07344   196  movz x0, #0x5000000000
0xffff8bd07348   200  movz x10, #0x100000000
0xffff8bd0734c   204  sub csp, jssp, #0x10 (16)
0xffff8bd07350   208  stp x10, x0, [jssp, #-16]!
0xffff8bd07354   212  movz x0, #0x2
0xffff8bd07358   216  movz x1, #0x5b88
0xffff8bd0735c   220  movk x1, #0xe2, lsl #16
0xffff8bd07360   224  ldr x16, pc+80 (addr 0x0000ffff8bd073b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd07364   228  blr x16
0xffff8bd07368   232  str x0, [jssp, #24]
0xffff8bd0736c   236  ldr x16, pc+76 (addr 0x0000ffff8bd073b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd07370   240  blr x16
0xffff8bd07374   244  ldr lr, [jssp, #16]
0xffff8bd07378   248  ldp xzr, fp, [jssp], #24
0xffff8bd0737c   252  b #-0xcc (addr 0xffff8bd072b0)
0xffff8bd07380   256  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd07384   260  d63f03e0       constant
0xffff8bd07388   264  fff7ffff       constant
0xffff8bd0738c   268  fff7ffff       constant
0xffff8bd07390   272  26c04201       constant
0xffff8bd07394   276  00000000       constant
0xffff8bd07398   280  26c04201       constant
0xffff8bd0739c   284  00000000       constant
0xffff8bd073a0   288  5f5052d9       constant
0xffff8bd073a4   292  00000000       constant
0xffff8bd073a8   296  8bd06820       constant
0xffff8bd073ac   300  0000ffff       constant
0xffff8bd073b0   304  8bd06260       constant
0xffff8bd073b4   308  0000ffff       constant
0xffff8bd073b8   312  8bd068e0       constant
0xffff8bd073bc   316  0000ffff       constant
0xffff8bd073c0   320  movz x16, #0x0
0xffff8bd073c4   324  sub csp, jssp, #0x10 (16)
0xffff8bd073c8   328  stp fp, lr, [jssp, #-16]!
0xffff8bd073cc   332  bl #+0x4 (addr 0xffff8bd073d0)
0xffff8bd073d0   336  movz x17, #0xa00000000
0xffff8bd073d4   340  sub csp, jssp, #0x10 (16)
0xffff8bd073d8   344  stp x17, cp, [jssp, #-16]!
0xffff8bd073dc   348  add fp, jssp, #0x10 (16)
0xffff8bd073e0   352  ldr x17, pc+24 (addr 0x0000ffff8bd073f8)    ;; lazy deoptimization bailout 0
0xffff8bd073e4   356  add x17, x17, x16
0xffff8bd073e8   360  br x17
0xffff8bd073ec   364  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd073f0   368  d63f03e0       constant
0xffff8bd073f4   372  d503201f       constant
0xffff8bd073f8   376  8bb06000       constant
0xffff8bd073fc   380  0000ffff       constant


Safepoints (size = 21)
0xffff8bd07368   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd072cc  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd072d4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd072e8  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0733c  code target (STUB)  (0xffff8bd06820)
0xffff8bd07360  code target (STUB)  (0xffff8bd06260)
0xffff8bd0736c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd07380  constant pool (size 64)
0xffff8bd073e0  runtime entry
0xffff8bd073ec  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 405)
0xffff8bd07480     0  movz w0, #0x6000
0xffff8bd07484     4  movk w0, #0x9, lsl #16
0xffff8bd07488     8  cmp w0, #0x30 (48)
0xffff8bd0748c    12  b.ls #+0x134 (addr 0xffff8bd075c0)
0xffff8bd07490    16  movz x2, #0xe2c0
0xffff8bd07494    20  movk x2, #0x2cb8, lsl #16
0xffff8bd07498    24  ldp x3, x0, [x2]
0xffff8bd0749c    28  adds x16, x3, #0x50 (80)
0xffff8bd074a0    32  ccmp x16, x0, #nzCv, lo
0xffff8bd074a4    36  b.hi #+0x78 (addr 0xffff8bd0751c)
0xffff8bd074a8    40  str x16, [x2]
0xffff8bd074ac    44  orr x3, x3, #0x1
0xffff8bd074b0    48  movz w0, #0x0
0xffff8bd074b4    52  stur x0, [x3, #31]
0xffff8bd074b8    56  ldur x0, [x1, #39]
0xffff8bd074bc    60  ldur x0, [x0, #39]
0xffff8bd074c0    64  movz x16, #0x19f
0xffff8bd074c4    68  ldr x0, [x0, x16]
0xffff8bd074c8    72  stur x0, [x3, #-1]
0xffff8bd074cc    76  ldr x0, pc+196 (addr 0x0000ffff8bd07590)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd074d0    80  stur x0, [x3, #7]
0xffff8bd074d4    84  ldr x0, pc+196 (addr 0x0000ffff8bd07598)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd074d8    88  stur x0, [x3, #15]
0xffff8bd074dc    92  movz x0, #0x0
0xffff8bd074e0    96  stur x0, [x3, #23]
0xffff8bd074e4   100  add x0, x3, #0x20 (32)
0xffff8bd074e8   104  ldr x1, pc+184 (addr 0x0000ffff8bd075a0)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd074ec   108  stur x1, [x0, #-1]
0xffff8bd074f0   112  movz x1, #0x400000000
0xffff8bd074f4   116  stur x1, [x0, #7]
0xffff8bd074f8   120  stur x0, [x3, #15]
0xffff8bd074fc   124  ldr d0, pc+140 (addr 0x0000ffff8bd07588)
0xffff8bd07500   128  stur d0, [x0, #15]
0xffff8bd07504   132  stur d0, [x0, #23]
0xffff8bd07508   136  stur d0, [x0, #31]
0xffff8bd0750c   140  stur d0, [x0, #39]
0xffff8bd07510   144  mov x0, x3
0xffff8bd07514   148  add jssp, jssp, #0x8 (8)
0xffff8bd07518   152  ret
0xffff8bd0751c   156  sub csp, jssp, #0x10 (16)
0xffff8bd07520   160  stp fp, lr, [jssp, #-16]!
0xffff8bd07524   164  movz fp, #0xa00000000
0xffff8bd07528   168  sub csp, jssp, #0x8 (8)
0xffff8bd0752c   172  str fp, [jssp, #-8]!
0xffff8bd07530   176  add fp, jssp, #0x8 (8)
0xffff8bd07534   180  movz x3, #0x0
0xffff8bd07538   184  mov x16, lr
0xffff8bd0753c   188  ldr x17, pc+108 (addr 0x0000ffff8bd075a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd07540   192  blr x17
0xffff8bd07544   196  movz x0, #0x5000000000
0xffff8bd07548   200  movz x10, #0x100000000
0xffff8bd0754c   204  sub csp, jssp, #0x10 (16)
0xffff8bd07550   208  stp x10, x0, [jssp, #-16]!
0xffff8bd07554   212  movz x0, #0x2
0xffff8bd07558   216  movz x1, #0x5b88
0xffff8bd0755c   220  movk x1, #0xe2, lsl #16
0xffff8bd07560   224  ldr x16, pc+80 (addr 0x0000ffff8bd075b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd07564   228  blr x16
0xffff8bd07568   232  str x0, [jssp, #24]
0xffff8bd0756c   236  ldr x16, pc+76 (addr 0x0000ffff8bd075b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd07570   240  blr x16
0xffff8bd07574   244  ldr lr, [jssp, #16]
0xffff8bd07578   248  ldp xzr, fp, [jssp], #24
0xffff8bd0757c   252  b #-0xcc (addr 0xffff8bd074b0)
0xffff8bd07580   256  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd07584   260  d63f03e0       constant
0xffff8bd07588   264  fff7ffff       constant
0xffff8bd0758c   268  fff7ffff       constant
0xffff8bd07590   272  26c04201       constant
0xffff8bd07594   276  00000000       constant
0xffff8bd07598   280  26c04201       constant
0xffff8bd0759c   284  00000000       constant
0xffff8bd075a0   288  5f5052d9       constant
0xffff8bd075a4   292  00000000       constant
0xffff8bd075a8   296  8bd06820       constant
0xffff8bd075ac   300  0000ffff       constant
0xffff8bd075b0   304  8bd06260       constant
0xffff8bd075b4   308  0000ffff       constant
0xffff8bd075b8   312  8bd068e0       constant
0xffff8bd075bc   316  0000ffff       constant
0xffff8bd075c0   320  movz x16, #0x0
0xffff8bd075c4   324  sub csp, jssp, #0x10 (16)
0xffff8bd075c8   328  stp fp, lr, [jssp, #-16]!
0xffff8bd075cc   332  bl #+0x4 (addr 0xffff8bd075d0)
0xffff8bd075d0   336  movz x17, #0xa00000000
0xffff8bd075d4   340  sub csp, jssp, #0x10 (16)
0xffff8bd075d8   344  stp x17, cp, [jssp, #-16]!
0xffff8bd075dc   348  add fp, jssp, #0x10 (16)
0xffff8bd075e0   352  ldr x17, pc+24 (addr 0x0000ffff8bd075f8)    ;; lazy deoptimization bailout 0
0xffff8bd075e4   356  add x17, x17, x16
0xffff8bd075e8   360  br x17
0xffff8bd075ec   364  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd075f0   368  d63f03e0       constant
0xffff8bd075f4   372  d503201f       constant
0xffff8bd075f8   376  8bb06000       constant
0xffff8bd075fc   380  0000ffff       constant


Safepoints (size = 21)
0xffff8bd07568   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd074cc  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd074d4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd074e8  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0753c  code target (STUB)  (0xffff8bd06820)
0xffff8bd07560  code target (STUB)  (0xffff8bd06260)
0xffff8bd0756c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd07580  constant pool (size 64)
0xffff8bd075e0  runtime entry
0xffff8bd075ec  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_HOLEY_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 405)
0xffff8bd07480     0  movz w0, #0x6000
0xffff8bd07484     4  movk w0, #0x9, lsl #16
0xffff8bd07488     8  cmp w0, #0x30 (48)
0xffff8bd0748c    12  b.ls #+0x134 (addr 0xffff8bd075c0)
0xffff8bd07490    16  movz x2, #0xe2c0
0xffff8bd07494    20  movk x2, #0x2cb8, lsl #16
0xffff8bd07498    24  ldp x3, x0, [x2]
0xffff8bd0749c    28  adds x16, x3, #0x50 (80)
0xffff8bd074a0    32  ccmp x16, x0, #nzCv, lo
0xffff8bd074a4    36  b.hi #+0x78 (addr 0xffff8bd0751c)
0xffff8bd074a8    40  str x16, [x2]
0xffff8bd074ac    44  orr x3, x3, #0x1
0xffff8bd074b0    48  movz w0, #0x0
0xffff8bd074b4    52  stur x0, [x3, #31]
0xffff8bd074b8    56  ldur x0, [x1, #39]
0xffff8bd074bc    60  ldur x0, [x0, #39]
0xffff8bd074c0    64  movz x16, #0x19f
0xffff8bd074c4    68  ldr x0, [x0, x16]
0xffff8bd074c8    72  stur x0, [x3, #-1]
0xffff8bd074cc    76  ldr x0, pc+196 (addr 0x0000ffff8bd07590)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd074d0    80  stur x0, [x3, #7]
0xffff8bd074d4    84  ldr x0, pc+196 (addr 0x0000ffff8bd07598)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd074d8    88  stur x0, [x3, #15]
0xffff8bd074dc    92  movz x0, #0x0
0xffff8bd074e0    96  stur x0, [x3, #23]
0xffff8bd074e4   100  add x0, x3, #0x20 (32)
0xffff8bd074e8   104  ldr x1, pc+184 (addr 0x0000ffff8bd075a0)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd074ec   108  stur x1, [x0, #-1]
0xffff8bd074f0   112  movz x1, #0x400000000
0xffff8bd074f4   116  stur x1, [x0, #7]
0xffff8bd074f8   120  stur x0, [x3, #15]
0xffff8bd074fc   124  ldr d0, pc+140 (addr 0x0000ffff8bd07588)
0xffff8bd07500   128  stur d0, [x0, #15]
0xffff8bd07504   132  stur d0, [x0, #23]
0xffff8bd07508   136  stur d0, [x0, #31]
0xffff8bd0750c   140  stur d0, [x0, #39]
0xffff8bd07510   144  mov x0, x3
0xffff8bd07514   148  add jssp, jssp, #0x8 (8)
0xffff8bd07518   152  ret
0xffff8bd0751c   156  sub csp, jssp, #0x10 (16)
0xffff8bd07520   160  stp fp, lr, [jssp, #-16]!
0xffff8bd07524   164  movz fp, #0xa00000000
0xffff8bd07528   168  sub csp, jssp, #0x8 (8)
0xffff8bd0752c   172  str fp, [jssp, #-8]!
0xffff8bd07530   176  add fp, jssp, #0x8 (8)
0xffff8bd07534   180  movz x3, #0x0
0xffff8bd07538   184  mov x16, lr
0xffff8bd0753c   188  ldr x17, pc+108 (addr 0x0000ffff8bd075a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd07540   192  blr x17
0xffff8bd07544   196  movz x0, #0x5000000000
0xffff8bd07548   200  movz x10, #0x100000000
0xffff8bd0754c   204  sub csp, jssp, #0x10 (16)
0xffff8bd07550   208  stp x10, x0, [jssp, #-16]!
0xffff8bd07554   212  movz x0, #0x2
0xffff8bd07558   216  movz x1, #0x5b88
0xffff8bd0755c   220  movk x1, #0xe2, lsl #16
0xffff8bd07560   224  ldr x16, pc+80 (addr 0x0000ffff8bd075b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd07564   228  blr x16
0xffff8bd07568   232  str x0, [jssp, #24]
0xffff8bd0756c   236  ldr x16, pc+76 (addr 0x0000ffff8bd075b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd07570   240  blr x16
0xffff8bd07574   244  ldr lr, [jssp, #16]
0xffff8bd07578   248  ldp xzr, fp, [jssp], #24
0xffff8bd0757c   252  b #-0xcc (addr 0xffff8bd074b0)
0xffff8bd07580   256  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd07584   260  d63f03e0       constant
0xffff8bd07588   264  fff7ffff       constant
0xffff8bd0758c   268  fff7ffff       constant
0xffff8bd07590   272  26c04201       constant
0xffff8bd07594   276  00000000       constant
0xffff8bd07598   280  26c04201       constant
0xffff8bd0759c   284  00000000       constant
0xffff8bd075a0   288  5f5052d9       constant
0xffff8bd075a4   292  00000000       constant
0xffff8bd075a8   296  8bd06820       constant
0xffff8bd075ac   300  0000ffff       constant
0xffff8bd075b0   304  8bd06260       constant
0xffff8bd075b4   308  0000ffff       constant
0xffff8bd075b8   312  8bd068e0       constant
0xffff8bd075bc   316  0000ffff       constant
0xffff8bd075c0   320  movz x16, #0x0
0xffff8bd075c4   324  sub csp, jssp, #0x10 (16)
0xffff8bd075c8   328  stp fp, lr, [jssp, #-16]!
0xffff8bd075cc   332  bl #+0x4 (addr 0xffff8bd075d0)
0xffff8bd075d0   336  movz x17, #0xa00000000
0xffff8bd075d4   340  sub csp, jssp, #0x10 (16)
0xffff8bd075d8   344  stp x17, cp, [jssp, #-16]!
0xffff8bd075dc   348  add fp, jssp, #0x10 (16)
0xffff8bd075e0   352  ldr x17, pc+24 (addr 0x0000ffff8bd075f8)    ;; lazy deoptimization bailout 0
0xffff8bd075e4   356  add x17, x17, x16
0xffff8bd075e8   360  br x17
0xffff8bd075ec   364  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd075f0   368  d63f03e0       constant
0xffff8bd075f4   372  d503201f       constant
0xffff8bd075f8   376  8bb06000       constant
0xffff8bd075fc   380  0000ffff       constant


Safepoints (size = 21)
0xffff8bd07568   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd074cc  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd074d4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd074e8  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0753c  code target (STUB)  (0xffff8bd06820)
0xffff8bd07560  code target (STUB)  (0xffff8bd06260)
0xffff8bd0756c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd07580  constant pool (size 64)
0xffff8bd075e0  runtime entry
0xffff8bd075ec  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 445)
0xffff8bd07680     0  movz w0, #0x6000
0xffff8bd07684     4  movk w0, #0x9, lsl #16
0xffff8bd07688     8  cmp w0, #0x30 (48)
0xffff8bd0768c    12  b.ls #+0x15c (addr 0xffff8bd077e8)
0xffff8bd07690    16  movz x2, #0xe2c0
0xffff8bd07694    20  movk x2, #0x2cb8, lsl #16
0xffff8bd07698    24  ldp x3, x0, [x2]
0xffff8bd0769c    28  adds x16, x3, #0x50 (80)
0xffff8bd076a0    32  ccmp x16, x0, #nzCv, lo
0xffff8bd076a4    36  b.hi #+0x84 (addr 0xffff8bd07728)
0xffff8bd076a8    40  str x16, [x2]
0xffff8bd076ac    44  orr x3, x3, #0x1
0xffff8bd076b0    48  movz w0, #0x0
0xffff8bd076b4    52  stur x0, [x3, #31]
0xffff8bd076b8    56  ldur x0, [x1, #39]
0xffff8bd076bc    60  ldur x0, [x0, #39]
0xffff8bd076c0    64  movz x16, #0x187
0xffff8bd076c4    68  ldr x0, [x0, x16]
0xffff8bd076c8    72  stur x0, [x3, #-1]
0xffff8bd076cc    76  ldr x0, pc+204 (addr 0x0000ffff8bd07798)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd076d0    80  stur x0, [x3, #7]
0xffff8bd076d4    84  ldr x0, pc+204 (addr 0x0000ffff8bd077a0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd076d8    88  stur x0, [x3, #15]
0xffff8bd076dc    92  movz x0, #0x0
0xffff8bd076e0    96  stur x0, [x3, #23]
0xffff8bd076e4   100  add x0, x3, #0x20 (32)
0xffff8bd076e8   104  ldr x1, pc+192 (addr 0x0000ffff8bd077a8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd076ec   108  stur x1, [x0, #-1]
0xffff8bd076f0   112  movz x1, #0x400000000
0xffff8bd076f4   116  stur x1, [x0, #7]
0xffff8bd076f8   120  stur x0, [x3, #15]
0xffff8bd076fc   124  ldr x1, pc+180 (addr 0x0000ffff8bd077b0)    ;; object: 0x26c04519 <the hole>
0xffff8bd07700   128  stur x1, [x0, #15]
0xffff8bd07704   132  ldr x1, pc+180 (addr 0x0000ffff8bd077b8)    ;; object: 0x26c04519 <the hole>
0xffff8bd07708   136  stur x1, [x0, #23]
0xffff8bd0770c   140  ldr x1, pc+180 (addr 0x0000ffff8bd077c0)    ;; object: 0x26c04519 <the hole>
0xffff8bd07710   144  stur x1, [x0, #31]
0xffff8bd07714   148  ldr x1, pc+180 (addr 0x0000ffff8bd077c8)    ;; object: 0x26c04519 <the hole>
0xffff8bd07718   152  stur x1, [x0, #39]
0xffff8bd0771c   156  mov x0, x3
0xffff8bd07720   160  add jssp, jssp, #0x8 (8)
0xffff8bd07724   164  ret
0xffff8bd07728   168  sub csp, jssp, #0x10 (16)
0xffff8bd0772c   172  stp fp, lr, [jssp, #-16]!
0xffff8bd07730   176  movz fp, #0xa00000000
0xffff8bd07734   180  sub csp, jssp, #0x8 (8)
0xffff8bd07738   184  str fp, [jssp, #-8]!
0xffff8bd0773c   188  add fp, jssp, #0x8 (8)
0xffff8bd07740   192  movz x3, #0x0
0xffff8bd07744   196  mov x16, lr
0xffff8bd07748   200  ldr x17, pc+136 (addr 0x0000ffff8bd077d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0774c   204  blr x17
0xffff8bd07750   208  movz x0, #0x5000000000
0xffff8bd07754   212  movz x10, #0x0
0xffff8bd07758   216  sub csp, jssp, #0x10 (16)
0xffff8bd0775c   220  stp x10, x0, [jssp, #-16]!
0xffff8bd07760   224  movz x0, #0x2
0xffff8bd07764   228  movz x1, #0x5b88
0xffff8bd07768   232  movk x1, #0xe2, lsl #16
0xffff8bd0776c   236  ldr x16, pc+108 (addr 0x0000ffff8bd077d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd07770   240  blr x16
0xffff8bd07774   244  str x0, [jssp, #24]
0xffff8bd07778   248  ldr x16, pc+104 (addr 0x0000ffff8bd077e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0777c   252  blr x16
0xffff8bd07780   256  ldr lr, [jssp, #16]
0xffff8bd07784   260  ldp xzr, fp, [jssp], #24
0xffff8bd07788   264  b #-0xd8 (addr 0xffff8bd076b0)
0xffff8bd0778c   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff8bd07790   272  d63f03e0       constant
0xffff8bd07794   276  d503201f       constant
0xffff8bd07798   280  26c04201       constant
0xffff8bd0779c   284  00000000       constant
0xffff8bd077a0   288  26c04201       constant
0xffff8bd077a4   292  00000000       constant
0xffff8bd077a8   296  5f504259       constant
0xffff8bd077ac   300  00000000       constant
0xffff8bd077b0   304  26c04519       constant
0xffff8bd077b4   308  00000000       constant
0xffff8bd077b8   312  26c04519       constant
0xffff8bd077bc   316  00000000       constant
0xffff8bd077c0   320  26c04519       constant
0xffff8bd077c4   324  00000000       constant
0xffff8bd077c8   328  26c04519       constant
0xffff8bd077cc   332  00000000       constant
0xffff8bd077d0   336  8bd06820       constant
0xffff8bd077d4   340  0000ffff       constant
0xffff8bd077d8   344  8bd06260       constant
0xffff8bd077dc   348  0000ffff       constant
0xffff8bd077e0   352  8bd068e0       constant
0xffff8bd077e4   356  0000ffff       constant
0xffff8bd077e8   360  movz x16, #0x0
0xffff8bd077ec   364  sub csp, jssp, #0x10 (16)
0xffff8bd077f0   368  stp fp, lr, [jssp, #-16]!
0xffff8bd077f4   372  bl #+0x4 (addr 0xffff8bd077f8)
0xffff8bd077f8   376  movz x17, #0xa00000000
0xffff8bd077fc   380  sub csp, jssp, #0x10 (16)
0xffff8bd07800   384  stp x17, cp, [jssp, #-16]!
0xffff8bd07804   388  add fp, jssp, #0x10 (16)
0xffff8bd07808   392  ldr x17, pc+24 (addr 0x0000ffff8bd07820)    ;; lazy deoptimization bailout 0
0xffff8bd0780c   396  add x17, x17, x16
0xffff8bd07810   400  br x17
0xffff8bd07814   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd07818   408  d63f03e0       constant
0xffff8bd0781c   412  d503201f       constant
0xffff8bd07820   416  8bb06000       constant
0xffff8bd07824   420  0000ffff       constant


Safepoints (size = 21)
0xffff8bd07774   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff8bd076cc  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd076d4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd076e8  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd076fc  embedded object  (0x26c04519 <the hole>)
0xffff8bd07704  embedded object  (0x26c04519 <the hole>)
0xffff8bd0770c  embedded object  (0x26c04519 <the hole>)
0xffff8bd07714  embedded object  (0x26c04519 <the hole>)
0xffff8bd07748  code target (STUB)  (0xffff8bd06820)
0xffff8bd0776c  code target (STUB)  (0xffff8bd06260)
0xffff8bd07778  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0778c  constant pool (size 92)
0xffff8bd07808  runtime entry
0xffff8bd07814  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_ELEMENTS
compiler = crankshaft
Instructions (size = 445)
0xffff8bd07680     0  movz w0, #0x6000
0xffff8bd07684     4  movk w0, #0x9, lsl #16
0xffff8bd07688     8  cmp w0, #0x30 (48)
0xffff8bd0768c    12  b.ls #+0x15c (addr 0xffff8bd077e8)
0xffff8bd07690    16  movz x2, #0xe2c0
0xffff8bd07694    20  movk x2, #0x2cb8, lsl #16
0xffff8bd07698    24  ldp x3, x0, [x2]
0xffff8bd0769c    28  adds x16, x3, #0x50 (80)
0xffff8bd076a0    32  ccmp x16, x0, #nzCv, lo
0xffff8bd076a4    36  b.hi #+0x84 (addr 0xffff8bd07728)
0xffff8bd076a8    40  str x16, [x2]
0xffff8bd076ac    44  orr x3, x3, #0x1
0xffff8bd076b0    48  movz w0, #0x0
0xffff8bd076b4    52  stur x0, [x3, #31]
0xffff8bd076b8    56  ldur x0, [x1, #39]
0xffff8bd076bc    60  ldur x0, [x0, #39]
0xffff8bd076c0    64  movz x16, #0x187
0xffff8bd076c4    68  ldr x0, [x0, x16]
0xffff8bd076c8    72  stur x0, [x3, #-1]
0xffff8bd076cc    76  ldr x0, pc+204 (addr 0x0000ffff8bd07798)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd076d0    80  stur x0, [x3, #7]
0xffff8bd076d4    84  ldr x0, pc+204 (addr 0x0000ffff8bd077a0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd076d8    88  stur x0, [x3, #15]
0xffff8bd076dc    92  movz x0, #0x0
0xffff8bd076e0    96  stur x0, [x3, #23]
0xffff8bd076e4   100  add x0, x3, #0x20 (32)
0xffff8bd076e8   104  ldr x1, pc+192 (addr 0x0000ffff8bd077a8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd076ec   108  stur x1, [x0, #-1]
0xffff8bd076f0   112  movz x1, #0x400000000
0xffff8bd076f4   116  stur x1, [x0, #7]
0xffff8bd076f8   120  stur x0, [x3, #15]
0xffff8bd076fc   124  ldr x1, pc+180 (addr 0x0000ffff8bd077b0)    ;; object: 0x26c04519 <the hole>
0xffff8bd07700   128  stur x1, [x0, #15]
0xffff8bd07704   132  ldr x1, pc+180 (addr 0x0000ffff8bd077b8)    ;; object: 0x26c04519 <the hole>
0xffff8bd07708   136  stur x1, [x0, #23]
0xffff8bd0770c   140  ldr x1, pc+180 (addr 0x0000ffff8bd077c0)    ;; object: 0x26c04519 <the hole>
0xffff8bd07710   144  stur x1, [x0, #31]
0xffff8bd07714   148  ldr x1, pc+180 (addr 0x0000ffff8bd077c8)    ;; object: 0x26c04519 <the hole>
0xffff8bd07718   152  stur x1, [x0, #39]
0xffff8bd0771c   156  mov x0, x3
0xffff8bd07720   160  add jssp, jssp, #0x8 (8)
0xffff8bd07724   164  ret
0xffff8bd07728   168  sub csp, jssp, #0x10 (16)
0xffff8bd0772c   172  stp fp, lr, [jssp, #-16]!
0xffff8bd07730   176  movz fp, #0xa00000000
0xffff8bd07734   180  sub csp, jssp, #0x8 (8)
0xffff8bd07738   184  str fp, [jssp, #-8]!
0xffff8bd0773c   188  add fp, jssp, #0x8 (8)
0xffff8bd07740   192  movz x3, #0x0
0xffff8bd07744   196  mov x16, lr
0xffff8bd07748   200  ldr x17, pc+136 (addr 0x0000ffff8bd077d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0774c   204  blr x17
0xffff8bd07750   208  movz x0, #0x5000000000
0xffff8bd07754   212  movz x10, #0x0
0xffff8bd07758   216  sub csp, jssp, #0x10 (16)
0xffff8bd0775c   220  stp x10, x0, [jssp, #-16]!
0xffff8bd07760   224  movz x0, #0x2
0xffff8bd07764   228  movz x1, #0x5b88
0xffff8bd07768   232  movk x1, #0xe2, lsl #16
0xffff8bd0776c   236  ldr x16, pc+108 (addr 0x0000ffff8bd077d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd07770   240  blr x16
0xffff8bd07774   244  str x0, [jssp, #24]
0xffff8bd07778   248  ldr x16, pc+104 (addr 0x0000ffff8bd077e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0777c   252  blr x16
0xffff8bd07780   256  ldr lr, [jssp, #16]
0xffff8bd07784   260  ldp xzr, fp, [jssp], #24
0xffff8bd07788   264  b #-0xd8 (addr 0xffff8bd076b0)
0xffff8bd0778c   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff8bd07790   272  d63f03e0       constant
0xffff8bd07794   276  d503201f       constant
0xffff8bd07798   280  26c04201       constant
0xffff8bd0779c   284  00000000       constant
0xffff8bd077a0   288  26c04201       constant
0xffff8bd077a4   292  00000000       constant
0xffff8bd077a8   296  5f504259       constant
0xffff8bd077ac   300  00000000       constant
0xffff8bd077b0   304  26c04519       constant
0xffff8bd077b4   308  00000000       constant
0xffff8bd077b8   312  26c04519       constant
0xffff8bd077bc   316  00000000       constant
0xffff8bd077c0   320  26c04519       constant
0xffff8bd077c4   324  00000000       constant
0xffff8bd077c8   328  26c04519       constant
0xffff8bd077cc   332  00000000       constant
0xffff8bd077d0   336  8bd06820       constant
0xffff8bd077d4   340  0000ffff       constant
0xffff8bd077d8   344  8bd06260       constant
0xffff8bd077dc   348  0000ffff       constant
0xffff8bd077e0   352  8bd068e0       constant
0xffff8bd077e4   356  0000ffff       constant
0xffff8bd077e8   360  movz x16, #0x0
0xffff8bd077ec   364  sub csp, jssp, #0x10 (16)
0xffff8bd077f0   368  stp fp, lr, [jssp, #-16]!
0xffff8bd077f4   372  bl #+0x4 (addr 0xffff8bd077f8)
0xffff8bd077f8   376  movz x17, #0xa00000000
0xffff8bd077fc   380  sub csp, jssp, #0x10 (16)
0xffff8bd07800   384  stp x17, cp, [jssp, #-16]!
0xffff8bd07804   388  add fp, jssp, #0x10 (16)
0xffff8bd07808   392  ldr x17, pc+24 (addr 0x0000ffff8bd07820)    ;; lazy deoptimization bailout 0
0xffff8bd0780c   396  add x17, x17, x16
0xffff8bd07810   400  br x17
0xffff8bd07814   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd07818   408  d63f03e0       constant
0xffff8bd0781c   412  d503201f       constant
0xffff8bd07820   416  8bb06000       constant
0xffff8bd07824   420  0000ffff       constant


Safepoints (size = 21)
0xffff8bd07774   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff8bd076cc  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd076d4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd076e8  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd076fc  embedded object  (0x26c04519 <the hole>)
0xffff8bd07704  embedded object  (0x26c04519 <the hole>)
0xffff8bd0770c  embedded object  (0x26c04519 <the hole>)
0xffff8bd07714  embedded object  (0x26c04519 <the hole>)
0xffff8bd07748  code target (STUB)  (0xffff8bd06820)
0xffff8bd0776c  code target (STUB)  (0xffff8bd06260)
0xffff8bd07778  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0778c  constant pool (size 92)
0xffff8bd07808  runtime entry
0xffff8bd07814  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 445)
0xffff8bd078a0     0  movz w0, #0x6000
0xffff8bd078a4     4  movk w0, #0x9, lsl #16
0xffff8bd078a8     8  cmp w0, #0x30 (48)
0xffff8bd078ac    12  b.ls #+0x15c (addr 0xffff8bd07a08)
0xffff8bd078b0    16  movz x2, #0xe2c0
0xffff8bd078b4    20  movk x2, #0x2cb8, lsl #16
0xffff8bd078b8    24  ldp x3, x0, [x2]
0xffff8bd078bc    28  adds x16, x3, #0x50 (80)
0xffff8bd078c0    32  ccmp x16, x0, #nzCv, lo
0xffff8bd078c4    36  b.hi #+0x84 (addr 0xffff8bd07948)
0xffff8bd078c8    40  str x16, [x2]
0xffff8bd078cc    44  orr x3, x3, #0x1
0xffff8bd078d0    48  movz w0, #0x0
0xffff8bd078d4    52  stur x0, [x3, #31]
0xffff8bd078d8    56  ldur x0, [x1, #39]
0xffff8bd078dc    60  ldur x0, [x0, #39]
0xffff8bd078e0    64  movz x16, #0x18f
0xffff8bd078e4    68  ldr x0, [x0, x16]
0xffff8bd078e8    72  stur x0, [x3, #-1]
0xffff8bd078ec    76  ldr x0, pc+204 (addr 0x0000ffff8bd079b8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd078f0    80  stur x0, [x3, #7]
0xffff8bd078f4    84  ldr x0, pc+204 (addr 0x0000ffff8bd079c0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd078f8    88  stur x0, [x3, #15]
0xffff8bd078fc    92  movz x0, #0x0
0xffff8bd07900    96  stur x0, [x3, #23]
0xffff8bd07904   100  add x0, x3, #0x20 (32)
0xffff8bd07908   104  ldr x1, pc+192 (addr 0x0000ffff8bd079c8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd0790c   108  stur x1, [x0, #-1]
0xffff8bd07910   112  movz x1, #0x400000000
0xffff8bd07914   116  stur x1, [x0, #7]
0xffff8bd07918   120  stur x0, [x3, #15]
0xffff8bd0791c   124  ldr x1, pc+180 (addr 0x0000ffff8bd079d0)    ;; object: 0x26c04519 <the hole>
0xffff8bd07920   128  stur x1, [x0, #15]
0xffff8bd07924   132  ldr x1, pc+180 (addr 0x0000ffff8bd079d8)    ;; object: 0x26c04519 <the hole>
0xffff8bd07928   136  stur x1, [x0, #23]
0xffff8bd0792c   140  ldr x1, pc+180 (addr 0x0000ffff8bd079e0)    ;; object: 0x26c04519 <the hole>
0xffff8bd07930   144  stur x1, [x0, #31]
0xffff8bd07934   148  ldr x1, pc+180 (addr 0x0000ffff8bd079e8)    ;; object: 0x26c04519 <the hole>
0xffff8bd07938   152  stur x1, [x0, #39]
0xffff8bd0793c   156  mov x0, x3
0xffff8bd07940   160  add jssp, jssp, #0x8 (8)
0xffff8bd07944   164  ret
0xffff8bd07948   168  sub csp, jssp, #0x10 (16)
0xffff8bd0794c   172  stp fp, lr, [jssp, #-16]!
0xffff8bd07950   176  movz fp, #0xa00000000
0xffff8bd07954   180  sub csp, jssp, #0x8 (8)
0xffff8bd07958   184  str fp, [jssp, #-8]!
0xffff8bd0795c   188  add fp, jssp, #0x8 (8)
0xffff8bd07960   192  movz x3, #0x0
0xffff8bd07964   196  mov x16, lr
0xffff8bd07968   200  ldr x17, pc+136 (addr 0x0000ffff8bd079f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0796c   204  blr x17
0xffff8bd07970   208  movz x0, #0x5000000000
0xffff8bd07974   212  movz x10, #0x0
0xffff8bd07978   216  sub csp, jssp, #0x10 (16)
0xffff8bd0797c   220  stp x10, x0, [jssp, #-16]!
0xffff8bd07980   224  movz x0, #0x2
0xffff8bd07984   228  movz x1, #0x5b88
0xffff8bd07988   232  movk x1, #0xe2, lsl #16
0xffff8bd0798c   236  ldr x16, pc+108 (addr 0x0000ffff8bd079f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd07990   240  blr x16
0xffff8bd07994   244  str x0, [jssp, #24]
0xffff8bd07998   248  ldr x16, pc+104 (addr 0x0000ffff8bd07a00)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0799c   252  blr x16
0xffff8bd079a0   256  ldr lr, [jssp, #16]
0xffff8bd079a4   260  ldp xzr, fp, [jssp], #24
0xffff8bd079a8   264  b #-0xd8 (addr 0xffff8bd078d0)
0xffff8bd079ac   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff8bd079b0   272  d63f03e0       constant
0xffff8bd079b4   276  d503201f       constant
0xffff8bd079b8   280  26c04201       constant
0xffff8bd079bc   284  00000000       constant
0xffff8bd079c0   288  26c04201       constant
0xffff8bd079c4   292  00000000       constant
0xffff8bd079c8   296  5f504259       constant
0xffff8bd079cc   300  00000000       constant
0xffff8bd079d0   304  26c04519       constant
0xffff8bd079d4   308  00000000       constant
0xffff8bd079d8   312  26c04519       constant
0xffff8bd079dc   316  00000000       constant
0xffff8bd079e0   320  26c04519       constant
0xffff8bd079e4   324  00000000       constant
0xffff8bd079e8   328  26c04519       constant
0xffff8bd079ec   332  00000000       constant
0xffff8bd079f0   336  8bd06820       constant
0xffff8bd079f4   340  0000ffff       constant
0xffff8bd079f8   344  8bd06260       constant
0xffff8bd079fc   348  0000ffff       constant
0xffff8bd07a00   352  8bd068e0       constant
0xffff8bd07a04   356  0000ffff       constant
0xffff8bd07a08   360  movz x16, #0x0
0xffff8bd07a0c   364  sub csp, jssp, #0x10 (16)
0xffff8bd07a10   368  stp fp, lr, [jssp, #-16]!
0xffff8bd07a14   372  bl #+0x4 (addr 0xffff8bd07a18)
0xffff8bd07a18   376  movz x17, #0xa00000000
0xffff8bd07a1c   380  sub csp, jssp, #0x10 (16)
0xffff8bd07a20   384  stp x17, cp, [jssp, #-16]!
0xffff8bd07a24   388  add fp, jssp, #0x10 (16)
0xffff8bd07a28   392  ldr x17, pc+24 (addr 0x0000ffff8bd07a40)    ;; lazy deoptimization bailout 0
0xffff8bd07a2c   396  add x17, x17, x16
0xffff8bd07a30   400  br x17
0xffff8bd07a34   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd07a38   408  d63f03e0       constant
0xffff8bd07a3c   412  d503201f       constant
0xffff8bd07a40   416  8bb06000       constant
0xffff8bd07a44   420  0000ffff       constant


Safepoints (size = 21)
0xffff8bd07994   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff8bd078ec  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd078f4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd07908  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0791c  embedded object  (0x26c04519 <the hole>)
0xffff8bd07924  embedded object  (0x26c04519 <the hole>)
0xffff8bd0792c  embedded object  (0x26c04519 <the hole>)
0xffff8bd07934  embedded object  (0x26c04519 <the hole>)
0xffff8bd07968  code target (STUB)  (0xffff8bd06820)
0xffff8bd0798c  code target (STUB)  (0xffff8bd06260)
0xffff8bd07998  code target (STUB)  (0xffff8bd068e0)
0xffff8bd079ac  constant pool (size 92)
0xffff8bd07a28  runtime entry
0xffff8bd07a34  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNoArgumentConstructorStub
name = ArrayNoArgumentConstructorStub_FAST_HOLEY_ELEMENTS
compiler = crankshaft
Instructions (size = 445)
0xffff8bd078a0     0  movz w0, #0x6000
0xffff8bd078a4     4  movk w0, #0x9, lsl #16
0xffff8bd078a8     8  cmp w0, #0x30 (48)
0xffff8bd078ac    12  b.ls #+0x15c (addr 0xffff8bd07a08)
0xffff8bd078b0    16  movz x2, #0xe2c0
0xffff8bd078b4    20  movk x2, #0x2cb8, lsl #16
0xffff8bd078b8    24  ldp x3, x0, [x2]
0xffff8bd078bc    28  adds x16, x3, #0x50 (80)
0xffff8bd078c0    32  ccmp x16, x0, #nzCv, lo
0xffff8bd078c4    36  b.hi #+0x84 (addr 0xffff8bd07948)
0xffff8bd078c8    40  str x16, [x2]
0xffff8bd078cc    44  orr x3, x3, #0x1
0xffff8bd078d0    48  movz w0, #0x0
0xffff8bd078d4    52  stur x0, [x3, #31]
0xffff8bd078d8    56  ldur x0, [x1, #39]
0xffff8bd078dc    60  ldur x0, [x0, #39]
0xffff8bd078e0    64  movz x16, #0x18f
0xffff8bd078e4    68  ldr x0, [x0, x16]
0xffff8bd078e8    72  stur x0, [x3, #-1]
0xffff8bd078ec    76  ldr x0, pc+204 (addr 0x0000ffff8bd079b8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd078f0    80  stur x0, [x3, #7]
0xffff8bd078f4    84  ldr x0, pc+204 (addr 0x0000ffff8bd079c0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd078f8    88  stur x0, [x3, #15]
0xffff8bd078fc    92  movz x0, #0x0
0xffff8bd07900    96  stur x0, [x3, #23]
0xffff8bd07904   100  add x0, x3, #0x20 (32)
0xffff8bd07908   104  ldr x1, pc+192 (addr 0x0000ffff8bd079c8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd0790c   108  stur x1, [x0, #-1]
0xffff8bd07910   112  movz x1, #0x400000000
0xffff8bd07914   116  stur x1, [x0, #7]
0xffff8bd07918   120  stur x0, [x3, #15]
0xffff8bd0791c   124  ldr x1, pc+180 (addr 0x0000ffff8bd079d0)    ;; object: 0x26c04519 <the hole>
0xffff8bd07920   128  stur x1, [x0, #15]
0xffff8bd07924   132  ldr x1, pc+180 (addr 0x0000ffff8bd079d8)    ;; object: 0x26c04519 <the hole>
0xffff8bd07928   136  stur x1, [x0, #23]
0xffff8bd0792c   140  ldr x1, pc+180 (addr 0x0000ffff8bd079e0)    ;; object: 0x26c04519 <the hole>
0xffff8bd07930   144  stur x1, [x0, #31]
0xffff8bd07934   148  ldr x1, pc+180 (addr 0x0000ffff8bd079e8)    ;; object: 0x26c04519 <the hole>
0xffff8bd07938   152  stur x1, [x0, #39]
0xffff8bd0793c   156  mov x0, x3
0xffff8bd07940   160  add jssp, jssp, #0x8 (8)
0xffff8bd07944   164  ret
0xffff8bd07948   168  sub csp, jssp, #0x10 (16)
0xffff8bd0794c   172  stp fp, lr, [jssp, #-16]!
0xffff8bd07950   176  movz fp, #0xa00000000
0xffff8bd07954   180  sub csp, jssp, #0x8 (8)
0xffff8bd07958   184  str fp, [jssp, #-8]!
0xffff8bd0795c   188  add fp, jssp, #0x8 (8)
0xffff8bd07960   192  movz x3, #0x0
0xffff8bd07964   196  mov x16, lr
0xffff8bd07968   200  ldr x17, pc+136 (addr 0x0000ffff8bd079f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0796c   204  blr x17
0xffff8bd07970   208  movz x0, #0x5000000000
0xffff8bd07974   212  movz x10, #0x0
0xffff8bd07978   216  sub csp, jssp, #0x10 (16)
0xffff8bd0797c   220  stp x10, x0, [jssp, #-16]!
0xffff8bd07980   224  movz x0, #0x2
0xffff8bd07984   228  movz x1, #0x5b88
0xffff8bd07988   232  movk x1, #0xe2, lsl #16
0xffff8bd0798c   236  ldr x16, pc+108 (addr 0x0000ffff8bd079f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd07990   240  blr x16
0xffff8bd07994   244  str x0, [jssp, #24]
0xffff8bd07998   248  ldr x16, pc+104 (addr 0x0000ffff8bd07a00)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0799c   252  blr x16
0xffff8bd079a0   256  ldr lr, [jssp, #16]
0xffff8bd079a4   260  ldp xzr, fp, [jssp], #24
0xffff8bd079a8   264  b #-0xd8 (addr 0xffff8bd078d0)
0xffff8bd079ac   268  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff8bd079b0   272  d63f03e0       constant
0xffff8bd079b4   276  d503201f       constant
0xffff8bd079b8   280  26c04201       constant
0xffff8bd079bc   284  00000000       constant
0xffff8bd079c0   288  26c04201       constant
0xffff8bd079c4   292  00000000       constant
0xffff8bd079c8   296  5f504259       constant
0xffff8bd079cc   300  00000000       constant
0xffff8bd079d0   304  26c04519       constant
0xffff8bd079d4   308  00000000       constant
0xffff8bd079d8   312  26c04519       constant
0xffff8bd079dc   316  00000000       constant
0xffff8bd079e0   320  26c04519       constant
0xffff8bd079e4   324  00000000       constant
0xffff8bd079e8   328  26c04519       constant
0xffff8bd079ec   332  00000000       constant
0xffff8bd079f0   336  8bd06820       constant
0xffff8bd079f4   340  0000ffff       constant
0xffff8bd079f8   344  8bd06260       constant
0xffff8bd079fc   348  0000ffff       constant
0xffff8bd07a00   352  8bd068e0       constant
0xffff8bd07a04   356  0000ffff       constant
0xffff8bd07a08   360  movz x16, #0x0
0xffff8bd07a0c   364  sub csp, jssp, #0x10 (16)
0xffff8bd07a10   368  stp fp, lr, [jssp, #-16]!
0xffff8bd07a14   372  bl #+0x4 (addr 0xffff8bd07a18)
0xffff8bd07a18   376  movz x17, #0xa00000000
0xffff8bd07a1c   380  sub csp, jssp, #0x10 (16)
0xffff8bd07a20   384  stp x17, cp, [jssp, #-16]!
0xffff8bd07a24   388  add fp, jssp, #0x10 (16)
0xffff8bd07a28   392  ldr x17, pc+24 (addr 0x0000ffff8bd07a40)    ;; lazy deoptimization bailout 0
0xffff8bd07a2c   396  add x17, x17, x16
0xffff8bd07a30   400  br x17
0xffff8bd07a34   404  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd07a38   408  d63f03e0       constant
0xffff8bd07a3c   412  d503201f       constant
0xffff8bd07a40   416  8bb06000       constant
0xffff8bd07a44   420  0000ffff       constant


Safepoints (size = 21)
0xffff8bd07994   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff8bd078ec  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd078f4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd07908  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0791c  embedded object  (0x26c04519 <the hole>)
0xffff8bd07924  embedded object  (0x26c04519 <the hole>)
0xffff8bd0792c  embedded object  (0x26c04519 <the hole>)
0xffff8bd07934  embedded object  (0x26c04519 <the hole>)
0xffff8bd07968  code target (STUB)  (0xffff8bd06820)
0xffff8bd0798c  code target (STUB)  (0xffff8bd06260)
0xffff8bd07998  code target (STUB)  (0xffff8bd068e0)
0xffff8bd079ac  constant pool (size 92)
0xffff8bd07a28  runtime entry
0xffff8bd07a34  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1904)
0xffff8bd07ac0     0  adr xzr, #+0x40 (addr 0xffff8bd07b00)
0xffff8bd07ac4     4  adr xzr, #+0x358 (addr 0xffff8bd07e1c)
0xffff8bd07ac8     8  ldr x16, pc+1720 (addr 0x0000ffff8bd08180)    ;; external reference (store_buffer_top)
0xffff8bd07acc    12  ldr x0, [x16]
0xffff8bd07ad0    16  str x1, [x0], #8
0xffff8bd07ad4    20  str x0, [x16]
0xffff8bd07ad8    24  tst x0, #0x1ffff
0xffff8bd07adc    28  b.eq #+0x8 (addr 0xffff8bd07ae4)
0xffff8bd07ae0    32  ret
0xffff8bd07ae4    36  sub csp, jssp, #0x8 (8)
0xffff8bd07ae8    40  str lr, [jssp, #-8]!
0xffff8bd07aec    44  ldr x17, pc+1692 (addr 0x0000ffff8bd08188)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd07af0    48  blr x17
0xffff8bd07af4    52  ldr lr, [jssp], #8
0xffff8bd07af8    56  ret
0xffff8bd07afc    60  ret
0xffff8bd07b00    64  sub csp, jssp, #0x10 (16)
0xffff8bd07b04    68  stp x3, x2, [jssp, #-16]!
0xffff8bd07b08    72  ldr x0, [x1]
0xffff8bd07b0c    76  and x16, x0, #0xfffffffffff00000
0xffff8bd07b10    80  ldr x16, [x16, #8]
0xffff8bd07b14    84  tst x16, #0x18
0xffff8bd07b18    88  b.eq #+0x1d4 (addr 0xffff8bd07cec)
0xffff8bd07b1c    92  and x16, x8, #0xfffffffffff00000
0xffff8bd07b20    96  ldr x16, [x16, #8]
0xffff8bd07b24   100  tst x16, #0x18
0xffff8bd07b28   104  b.ne #+0x1c4 (addr 0xffff8bd07cec)
0xffff8bd07b2c   108  and x0, x8, #0xfffffffffff00000
0xffff8bd07b30   112  ldr x2, [x0, #104]
0xffff8bd07b34   116  subs x2, x2, #0x1 (1)
0xffff8bd07b38   120  str x2, [x0, #104]
0xffff8bd07b3c   124  b.mi #+0xc4 (addr 0xffff8bd07c00)
0xffff8bd07b40   128  ubfx x16, x8, #8, #12
0xffff8bd07b44   132  and x0, x8, #0xfffffffffff00000
0xffff8bd07b48   136  add x0, x0, x16, lsl #2
0xffff8bd07b4c   140  ubfx x2, x8, #3, #5
0xffff8bd07b50   144  ldr x0, [x0, #360]
0xffff8bd07b54   148  lsr x0, x0, x2
0xffff8bd07b58   152  tbz w0, #0, #+0x8 (addr 0xffff8bd07b60)
0xffff8bd07b5c   156  tbnz w0, #1, #+0x3c (addr 0xffff8bd07b98)
0xffff8bd07b60   160  ldp x3, x2, [jssp], #16
0xffff8bd07b64   164  ldr x16, pc+1580 (addr 0x0000ffff8bd08190)    ;; external reference (store_buffer_top)
0xffff8bd07b68   168  ldr x0, [x16]
0xffff8bd07b6c   172  str x1, [x0], #8
0xffff8bd07b70   176  str x0, [x16]
0xffff8bd07b74   180  tst x0, #0x1ffff
0xffff8bd07b78   184  b.eq #+0x8 (addr 0xffff8bd07b80)
0xffff8bd07b7c   188  ret
0xffff8bd07b80   192  sub csp, jssp, #0x8 (8)
0xffff8bd07b84   196  str lr, [jssp, #-8]!
0xffff8bd07b88   200  ldr x17, pc+1552 (addr 0x0000ffff8bd08198)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd07b8c   204  blr x17
0xffff8bd07b90   208  ldr lr, [jssp], #8
0xffff8bd07b94   212  ret
0xffff8bd07b98   216  ldr x0, [x1]
0xffff8bd07b9c   220  sub csp, jssp, #0x10 (16)
0xffff8bd07ba0   224  stp x8, x1, [jssp, #-16]!
0xffff8bd07ba4   228  ubfx x16, x0, #8, #12
0xffff8bd07ba8   232  and x2, x0, #0xfffffffffff00000
0xffff8bd07bac   236  add x2, x2, x16, lsl #2
0xffff8bd07bb0   240  ubfx x8, x0, #3, #5
0xffff8bd07bb4   244  ldr x1, [x2, #360]
0xffff8bd07bb8   248  lsr x1, x1, x8
0xffff8bd07bbc   252  tbz w1, #0, #+0x40 (addr 0xffff8bd07bfc)
0xffff8bd07bc0   256  ldp x8, x1, [jssp], #16
0xffff8bd07bc4   260  ldp x3, x2, [jssp], #16
0xffff8bd07bc8   264  ldr x16, pc+1496 (addr 0x0000ffff8bd081a0)    ;; external reference (store_buffer_top)
0xffff8bd07bcc   268  ldr x0, [x16]
0xffff8bd07bd0   272  str x1, [x0], #8
0xffff8bd07bd4   276  str x0, [x16]
0xffff8bd07bd8   280  tst x0, #0x1ffff
0xffff8bd07bdc   284  b.eq #+0x8 (addr 0xffff8bd07be4)
0xffff8bd07be0   288  ret
0xffff8bd07be4   292  sub csp, jssp, #0x8 (8)
0xffff8bd07be8   296  str lr, [jssp, #-8]!
0xffff8bd07bec   300  ldr x17, pc+1468 (addr 0x0000ffff8bd081a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd07bf0   304  blr x17
0xffff8bd07bf4   308  ldr lr, [jssp], #8
0xffff8bd07bf8   312  ret
0xffff8bd07bfc   316  ldp x8, x1, [jssp], #16
0xffff8bd07c00   320  sub csp, jssp, #0x78 (120)
0xffff8bd07c04   324  stp x14, x15, [jssp, #-32]!
0xffff8bd07c08   328  stp x18, lr, [jssp, #16]
0xffff8bd07c0c   332  stp x10, x11, [jssp, #-32]!
0xffff8bd07c10   336  stp x12, x13, [jssp, #16]
0xffff8bd07c14   340  stp x6, x7, [jssp, #-32]!
0xffff8bd07c18   344  stp x8, x9, [jssp, #16]
0xffff8bd07c1c   348  stp x1, x4, [jssp, #-24]!
0xffff8bd07c20   352  str x5, [jssp, #16]
0xffff8bd07c24   356  sub csp, jssp, #0xb0 (176)
0xffff8bd07c28   360  stp d26, d27, [jssp, #-32]!
0xffff8bd07c2c   364  stp d28, d29, [jssp, #16]
0xffff8bd07c30   368  stp d22, d23, [jssp, #-32]!
0xffff8bd07c34   372  stp d24, d25, [jssp, #16]
0xffff8bd07c38   376  stp d18, d19, [jssp, #-32]!
0xffff8bd07c3c   380  stp d20, d21, [jssp, #16]
0xffff8bd07c40   384  stp d6, d7, [jssp, #-32]!
0xffff8bd07c44   388  stp d16, d17, [jssp, #16]
0xffff8bd07c48   392  stp d2, d3, [jssp, #-32]!
0xffff8bd07c4c   396  stp d4, d5, [jssp, #16]
0xffff8bd07c50   400  stp d0, d1, [jssp, #-16]!
0xffff8bd07c54   404  mov x0, x8
0xffff8bd07c58   408  ldr x2, pc+1368 (addr 0x0000ffff8bd081b0)    ;; external reference (isolate)
0xffff8bd07c5c   412  ldr x16, pc+1372 (addr 0x0000ffff8bd081b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd07c60   416  and csp, jssp, #0xfffffffffffffff0
0xffff8bd07c64   420  blr x16
0xffff8bd07c68   424  ldp d2, d3, [jssp, #16]
0xffff8bd07c6c   428  ldp d0, d1, [jssp], #32
0xffff8bd07c70   432  ldp d6, d7, [jssp, #16]
0xffff8bd07c74   436  ldp d4, d5, [jssp], #32
0xffff8bd07c78   440  ldp d18, d19, [jssp, #16]
0xffff8bd07c7c   444  ldp d16, d17, [jssp], #32
0xffff8bd07c80   448  ldp d22, d23, [jssp, #16]
0xffff8bd07c84   452  ldp d20, d21, [jssp], #32
0xffff8bd07c88   456  ldp d26, d27, [jssp, #16]
0xffff8bd07c8c   460  ldp d24, d25, [jssp], #32
0xffff8bd07c90   464  ldp d28, d29, [jssp], #16
0xffff8bd07c94   468  ldp x5, x6, [jssp, #16]
0xffff8bd07c98   472  ldp x1, x4, [jssp], #32
0xffff8bd07c9c   476  ldp x9, x10, [jssp, #16]
0xffff8bd07ca0   480  ldp x7, x8, [jssp], #32
0xffff8bd07ca4   484  ldp x13, x14, [jssp, #16]
0xffff8bd07ca8   488  ldp x11, x12, [jssp], #32
0xffff8bd07cac   492  ldr lr, [jssp, #16]
0xffff8bd07cb0   496  ldp x15, x18, [jssp], #24
0xffff8bd07cb4   500  ldp x3, x2, [jssp], #16
0xffff8bd07cb8   504  ldr x16, pc+1288 (addr 0x0000ffff8bd081c0)    ;; external reference (store_buffer_top)
0xffff8bd07cbc   508  ldr x0, [x16]
0xffff8bd07cc0   512  str x1, [x0], #8
0xffff8bd07cc4   516  str x0, [x16]
0xffff8bd07cc8   520  tst x0, #0x1ffff
0xffff8bd07ccc   524  b.eq #+0x8 (addr 0xffff8bd07cd4)
0xffff8bd07cd0   528  ret
0xffff8bd07cd4   532  sub csp, jssp, #0x8 (8)
0xffff8bd07cd8   536  str lr, [jssp, #-8]!
0xffff8bd07cdc   540  ldr x17, pc+1260 (addr 0x0000ffff8bd081c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd07ce0   544  blr x17
0xffff8bd07ce4   548  ldr lr, [jssp], #8
0xffff8bd07ce8   552  ret
0xffff8bd07cec   556  and x0, x8, #0xfffffffffff00000
0xffff8bd07cf0   560  ldr x2, [x0, #104]
0xffff8bd07cf4   564  subs x2, x2, #0x1 (1)
0xffff8bd07cf8   568  str x2, [x0, #104]
0xffff8bd07cfc   572  b.mi #+0x64 (addr 0xffff8bd07d60)
0xffff8bd07d00   576  ubfx x16, x8, #8, #12
0xffff8bd07d04   580  and x0, x8, #0xfffffffffff00000
0xffff8bd07d08   584  add x0, x0, x16, lsl #2
0xffff8bd07d0c   588  ubfx x2, x8, #3, #5
0xffff8bd07d10   592  ldr x0, [x0, #360]
0xffff8bd07d14   596  lsr x0, x0, x2
0xffff8bd07d18   600  tbz w0, #0, #+0x8 (addr 0xffff8bd07d20)
0xffff8bd07d1c   604  tbnz w0, #1, #+0xc (addr 0xffff8bd07d28)
0xffff8bd07d20   608  ldp x3, x2, [jssp], #16
0xffff8bd07d24   612  ret
0xffff8bd07d28   616  ldr x0, [x1]
0xffff8bd07d2c   620  sub csp, jssp, #0x10 (16)
0xffff8bd07d30   624  stp x8, x1, [jssp, #-16]!
0xffff8bd07d34   628  ubfx x16, x0, #8, #12
0xffff8bd07d38   632  and x2, x0, #0xfffffffffff00000
0xffff8bd07d3c   636  add x2, x2, x16, lsl #2
0xffff8bd07d40   640  ubfx x8, x0, #3, #5
0xffff8bd07d44   644  ldr x1, [x2, #360]
0xffff8bd07d48   648  lsr x1, x1, x8
0xffff8bd07d4c   652  tbz w1, #0, #+0x10 (addr 0xffff8bd07d5c)
0xffff8bd07d50   656  ldp x8, x1, [jssp], #16
0xffff8bd07d54   660  ldp x3, x2, [jssp], #16
0xffff8bd07d58   664  ret
0xffff8bd07d5c   668  ldp x8, x1, [jssp], #16
0xffff8bd07d60   672  sub csp, jssp, #0x78 (120)
0xffff8bd07d64   676  stp x14, x15, [jssp, #-32]!
0xffff8bd07d68   680  stp x18, lr, [jssp, #16]
0xffff8bd07d6c   684  stp x10, x11, [jssp, #-32]!
0xffff8bd07d70   688  stp x12, x13, [jssp, #16]
0xffff8bd07d74   692  stp x6, x7, [jssp, #-32]!
0xffff8bd07d78   696  stp x8, x9, [jssp, #16]
0xffff8bd07d7c   700  stp x1, x4, [jssp, #-24]!
0xffff8bd07d80   704  str x5, [jssp, #16]
0xffff8bd07d84   708  sub csp, jssp, #0xb0 (176)
0xffff8bd07d88   712  stp d26, d27, [jssp, #-32]!
0xffff8bd07d8c   716  stp d28, d29, [jssp, #16]
0xffff8bd07d90   720  stp d22, d23, [jssp, #-32]!
0xffff8bd07d94   724  stp d24, d25, [jssp, #16]
0xffff8bd07d98   728  stp d18, d19, [jssp, #-32]!
0xffff8bd07d9c   732  stp d20, d21, [jssp, #16]
0xffff8bd07da0   736  stp d6, d7, [jssp, #-32]!
0xffff8bd07da4   740  stp d16, d17, [jssp, #16]
0xffff8bd07da8   744  stp d2, d3, [jssp, #-32]!
0xffff8bd07dac   748  stp d4, d5, [jssp, #16]
0xffff8bd07db0   752  stp d0, d1, [jssp, #-16]!
0xffff8bd07db4   756  mov x0, x8
0xffff8bd07db8   760  ldr x2, pc+1048 (addr 0x0000ffff8bd081d0)    ;; external reference (isolate)
0xffff8bd07dbc   764  ldr x16, pc+1052 (addr 0x0000ffff8bd081d8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd07dc0   768  and csp, jssp, #0xfffffffffffffff0
0xffff8bd07dc4   772  blr x16
0xffff8bd07dc8   776  ldp d2, d3, [jssp, #16]
0xffff8bd07dcc   780  ldp d0, d1, [jssp], #32
0xffff8bd07dd0   784  ldp d6, d7, [jssp, #16]
0xffff8bd07dd4   788  ldp d4, d5, [jssp], #32
0xffff8bd07dd8   792  ldp d18, d19, [jssp, #16]
0xffff8bd07ddc   796  ldp d16, d17, [jssp], #32
0xffff8bd07de0   800  ldp d22, d23, [jssp, #16]
0xffff8bd07de4   804  ldp d20, d21, [jssp], #32
0xffff8bd07de8   808  ldp d26, d27, [jssp, #16]
0xffff8bd07dec   812  ldp d24, d25, [jssp], #32
0xffff8bd07df0   816  ldp d28, d29, [jssp], #16
0xffff8bd07df4   820  ldp x5, x6, [jssp, #16]
0xffff8bd07df8   824  ldp x1, x4, [jssp], #32
0xffff8bd07dfc   828  ldp x9, x10, [jssp, #16]
0xffff8bd07e00   832  ldp x7, x8, [jssp], #32
0xffff8bd07e04   836  ldp x13, x14, [jssp, #16]
0xffff8bd07e08   840  ldp x11, x12, [jssp], #32
0xffff8bd07e0c   844  ldr lr, [jssp, #16]
0xffff8bd07e10   848  ldp x15, x18, [jssp], #24
0xffff8bd07e14   852  ldp x3, x2, [jssp], #16
0xffff8bd07e18   856  ret
0xffff8bd07e1c   860  sub csp, jssp, #0x10 (16)
0xffff8bd07e20   864  stp x3, x2, [jssp, #-16]!
0xffff8bd07e24   868  ldr x0, [x1]
0xffff8bd07e28   872  and x16, x0, #0xfffffffffff00000
0xffff8bd07e2c   876  ldr x16, [x16, #8]
0xffff8bd07e30   880  tst x16, #0x18
0xffff8bd07e34   884  b.eq #+0x1f4 (addr 0xffff8bd08028)
0xffff8bd07e38   888  and x16, x8, #0xfffffffffff00000
0xffff8bd07e3c   892  ldr x16, [x16, #8]
0xffff8bd07e40   896  tst x16, #0x18
0xffff8bd07e44   900  b.ne #+0x1e4 (addr 0xffff8bd08028)
0xffff8bd07e48   904  and x0, x8, #0xfffffffffff00000
0xffff8bd07e4c   908  ldr x2, [x0, #104]
0xffff8bd07e50   912  subs x2, x2, #0x1 (1)
0xffff8bd07e54   916  str x2, [x0, #104]
0xffff8bd07e58   920  b.mi #+0xe4 (addr 0xffff8bd07f3c)
0xffff8bd07e5c   924  ubfx x16, x8, #8, #12
0xffff8bd07e60   928  and x0, x8, #0xfffffffffff00000
0xffff8bd07e64   932  add x0, x0, x16, lsl #2
0xffff8bd07e68   936  ubfx x2, x8, #3, #5
0xffff8bd07e6c   940  ldr x0, [x0, #360]
0xffff8bd07e70   944  lsr x0, x0, x2
0xffff8bd07e74   948  tbz w0, #0, #+0x8 (addr 0xffff8bd07e7c)
0xffff8bd07e78   952  tbnz w0, #1, #+0x3c (addr 0xffff8bd07eb4)
0xffff8bd07e7c   956  ldp x3, x2, [jssp], #16
0xffff8bd07e80   960  ldr x16, pc+864 (addr 0x0000ffff8bd081e0)    ;; external reference (store_buffer_top)
0xffff8bd07e84   964  ldr x0, [x16]
0xffff8bd07e88   968  str x1, [x0], #8
0xffff8bd07e8c   972  str x0, [x16]
0xffff8bd07e90   976  tst x0, #0x1ffff
0xffff8bd07e94   980  b.eq #+0x8 (addr 0xffff8bd07e9c)
0xffff8bd07e98   984  ret
0xffff8bd07e9c   988  sub csp, jssp, #0x8 (8)
0xffff8bd07ea0   992  str lr, [jssp, #-8]!
0xffff8bd07ea4   996  ldr x17, pc+836 (addr 0x0000ffff8bd081e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd07ea8  1000  blr x17
0xffff8bd07eac  1004  ldr lr, [jssp], #8
0xffff8bd07eb0  1008  ret
0xffff8bd07eb4  1012  ldr x0, [x1]
0xffff8bd07eb8  1016  and x2, x0, #0xfffffffffff00000
0xffff8bd07ebc  1020  ldr x2, [x2, #8]
0xffff8bd07ec0  1024  tbz w2, #6, #+0x18 (addr 0xffff8bd07ed8)
0xffff8bd07ec4  1028  and x2, x8, #0xfffffffffff00000
0xffff8bd07ec8  1032  ldr x2, [x2, #8]
0xffff8bd07ecc  1036  movz x16, #0x58
0xffff8bd07ed0  1040  tst x2, x16
0xffff8bd07ed4  1044  b.eq #+0x68 (addr 0xffff8bd07f3c)
0xffff8bd07ed8  1048  sub csp, jssp, #0x10 (16)
0xffff8bd07edc  1052  stp x8, x1, [jssp, #-16]!
0xffff8bd07ee0  1056  ubfx x16, x0, #8, #12
0xffff8bd07ee4  1060  and x2, x0, #0xfffffffffff00000
0xffff8bd07ee8  1064  add x2, x2, x16, lsl #2
0xffff8bd07eec  1068  ubfx x8, x0, #3, #5
0xffff8bd07ef0  1072  ldr x1, [x2, #360]
0xffff8bd07ef4  1076  lsr x1, x1, x8
0xffff8bd07ef8  1080  tbz w1, #0, #+0x40 (addr 0xffff8bd07f38)
0xffff8bd07efc  1084  ldp x8, x1, [jssp], #16
0xffff8bd07f00  1088  ldp x3, x2, [jssp], #16
0xffff8bd07f04  1092  ldr x16, pc+748 (addr 0x0000ffff8bd081f0)    ;; external reference (store_buffer_top)
0xffff8bd07f08  1096  ldr x0, [x16]
0xffff8bd07f0c  1100  str x1, [x0], #8
0xffff8bd07f10  1104  str x0, [x16]
0xffff8bd07f14  1108  tst x0, #0x1ffff
0xffff8bd07f18  1112  b.eq #+0x8 (addr 0xffff8bd07f20)
0xffff8bd07f1c  1116  ret
0xffff8bd07f20  1120  sub csp, jssp, #0x8 (8)
0xffff8bd07f24  1124  str lr, [jssp, #-8]!
0xffff8bd07f28  1128  ldr x17, pc+720 (addr 0x0000ffff8bd081f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd07f2c  1132  blr x17
0xffff8bd07f30  1136  ldr lr, [jssp], #8
0xffff8bd07f34  1140  ret
0xffff8bd07f38  1144  ldp x8, x1, [jssp], #16
0xffff8bd07f3c  1148  sub csp, jssp, #0x78 (120)
0xffff8bd07f40  1152  stp x14, x15, [jssp, #-32]!
0xffff8bd07f44  1156  stp x18, lr, [jssp, #16]
0xffff8bd07f48  1160  stp x10, x11, [jssp, #-32]!
0xffff8bd07f4c  1164  stp x12, x13, [jssp, #16]
0xffff8bd07f50  1168  stp x6, x7, [jssp, #-32]!
0xffff8bd07f54  1172  stp x8, x9, [jssp, #16]
0xffff8bd07f58  1176  stp x1, x4, [jssp, #-24]!
0xffff8bd07f5c  1180  str x5, [jssp, #16]
0xffff8bd07f60  1184  sub csp, jssp, #0xb0 (176)
0xffff8bd07f64  1188  stp d26, d27, [jssp, #-32]!
0xffff8bd07f68  1192  stp d28, d29, [jssp, #16]
0xffff8bd07f6c  1196  stp d22, d23, [jssp, #-32]!
0xffff8bd07f70  1200  stp d24, d25, [jssp, #16]
0xffff8bd07f74  1204  stp d18, d19, [jssp, #-32]!
0xffff8bd07f78  1208  stp d20, d21, [jssp, #16]
0xffff8bd07f7c  1212  stp d6, d7, [jssp, #-32]!
0xffff8bd07f80  1216  stp d16, d17, [jssp, #16]
0xffff8bd07f84  1220  stp d2, d3, [jssp, #-32]!
0xffff8bd07f88  1224  stp d4, d5, [jssp, #16]
0xffff8bd07f8c  1228  stp d0, d1, [jssp, #-16]!
0xffff8bd07f90  1232  mov x0, x8
0xffff8bd07f94  1236  ldr x2, pc+620 (addr 0x0000ffff8bd08200)    ;; external reference (isolate)
0xffff8bd07f98  1240  ldr x16, pc+624 (addr 0x0000ffff8bd08208)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd07f9c  1244  and csp, jssp, #0xfffffffffffffff0
0xffff8bd07fa0  1248  blr x16
0xffff8bd07fa4  1252  ldp d2, d3, [jssp, #16]
0xffff8bd07fa8  1256  ldp d0, d1, [jssp], #32
0xffff8bd07fac  1260  ldp d6, d7, [jssp, #16]
0xffff8bd07fb0  1264  ldp d4, d5, [jssp], #32
0xffff8bd07fb4  1268  ldp d18, d19, [jssp, #16]
0xffff8bd07fb8  1272  ldp d16, d17, [jssp], #32
0xffff8bd07fbc  1276  ldp d22, d23, [jssp, #16]
0xffff8bd07fc0  1280  ldp d20, d21, [jssp], #32
0xffff8bd07fc4  1284  ldp d26, d27, [jssp, #16]
0xffff8bd07fc8  1288  ldp d24, d25, [jssp], #32
0xffff8bd07fcc  1292  ldp d28, d29, [jssp], #16
0xffff8bd07fd0  1296  ldp x5, x6, [jssp, #16]
0xffff8bd07fd4  1300  ldp x1, x4, [jssp], #32
0xffff8bd07fd8  1304  ldp x9, x10, [jssp, #16]
0xffff8bd07fdc  1308  ldp x7, x8, [jssp], #32
0xffff8bd07fe0  1312  ldp x13, x14, [jssp, #16]
0xffff8bd07fe4  1316  ldp x11, x12, [jssp], #32
0xffff8bd07fe8  1320  ldr lr, [jssp, #16]
0xffff8bd07fec  1324  ldp x15, x18, [jssp], #24
0xffff8bd07ff0  1328  ldp x3, x2, [jssp], #16
0xffff8bd07ff4  1332  ldr x16, pc+540 (addr 0x0000ffff8bd08210)    ;; external reference (store_buffer_top)
0xffff8bd07ff8  1336  ldr x0, [x16]
0xffff8bd07ffc  1340  str x1, [x0], #8
0xffff8bd08000  1344  str x0, [x16]
0xffff8bd08004  1348  tst x0, #0x1ffff
0xffff8bd08008  1352  b.eq #+0x8 (addr 0xffff8bd08010)
0xffff8bd0800c  1356  ret
0xffff8bd08010  1360  sub csp, jssp, #0x8 (8)
0xffff8bd08014  1364  str lr, [jssp, #-8]!
0xffff8bd08018  1368  ldr x17, pc+512 (addr 0x0000ffff8bd08218)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0801c  1372  blr x17
0xffff8bd08020  1376  ldr lr, [jssp], #8
0xffff8bd08024  1380  ret
0xffff8bd08028  1384  and x0, x8, #0xfffffffffff00000
0xffff8bd0802c  1388  ldr x2, [x0, #104]
0xffff8bd08030  1392  subs x2, x2, #0x1 (1)
0xffff8bd08034  1396  str x2, [x0, #104]
0xffff8bd08038  1400  b.mi #+0x84 (addr 0xffff8bd080bc)
0xffff8bd0803c  1404  ubfx x16, x8, #8, #12
0xffff8bd08040  1408  and x0, x8, #0xfffffffffff00000
0xffff8bd08044  1412  add x0, x0, x16, lsl #2
0xffff8bd08048  1416  ubfx x2, x8, #3, #5
0xffff8bd0804c  1420  ldr x0, [x0, #360]
0xffff8bd08050  1424  lsr x0, x0, x2
0xffff8bd08054  1428  tbz w0, #0, #+0x8 (addr 0xffff8bd0805c)
0xffff8bd08058  1432  tbnz w0, #1, #+0xc (addr 0xffff8bd08064)
0xffff8bd0805c  1436  ldp x3, x2, [jssp], #16
0xffff8bd08060  1440  ret
0xffff8bd08064  1444  ldr x0, [x1]
0xffff8bd08068  1448  and x2, x0, #0xfffffffffff00000
0xffff8bd0806c  1452  ldr x2, [x2, #8]
0xffff8bd08070  1456  tbz w2, #6, #+0x18 (addr 0xffff8bd08088)
0xffff8bd08074  1460  and x2, x8, #0xfffffffffff00000
0xffff8bd08078  1464  ldr x2, [x2, #8]
0xffff8bd0807c  1468  movz x16, #0x58
0xffff8bd08080  1472  tst x2, x16
0xffff8bd08084  1476  b.eq #+0x38 (addr 0xffff8bd080bc)
0xffff8bd08088  1480  sub csp, jssp, #0x10 (16)
0xffff8bd0808c  1484  stp x8, x1, [jssp, #-16]!
0xffff8bd08090  1488  ubfx x16, x0, #8, #12
0xffff8bd08094  1492  and x2, x0, #0xfffffffffff00000
0xffff8bd08098  1496  add x2, x2, x16, lsl #2
0xffff8bd0809c  1500  ubfx x8, x0, #3, #5
0xffff8bd080a0  1504  ldr x1, [x2, #360]
0xffff8bd080a4  1508  lsr x1, x1, x8
0xffff8bd080a8  1512  tbz w1, #0, #+0x10 (addr 0xffff8bd080b8)
0xffff8bd080ac  1516  ldp x8, x1, [jssp], #16
0xffff8bd080b0  1520  ldp x3, x2, [jssp], #16
0xffff8bd080b4  1524  ret
0xffff8bd080b8  1528  ldp x8, x1, [jssp], #16
0xffff8bd080bc  1532  sub csp, jssp, #0x78 (120)
0xffff8bd080c0  1536  stp x14, x15, [jssp, #-32]!
0xffff8bd080c4  1540  stp x18, lr, [jssp, #16]
0xffff8bd080c8  1544  stp x10, x11, [jssp, #-32]!
0xffff8bd080cc  1548  stp x12, x13, [jssp, #16]
0xffff8bd080d0  1552  stp x6, x7, [jssp, #-32]!
0xffff8bd080d4  1556  stp x8, x9, [jssp, #16]
0xffff8bd080d8  1560  stp x1, x4, [jssp, #-24]!
0xffff8bd080dc  1564  str x5, [jssp, #16]
0xffff8bd080e0  1568  sub csp, jssp, #0xb0 (176)
0xffff8bd080e4  1572  stp d26, d27, [jssp, #-32]!
0xffff8bd080e8  1576  stp d28, d29, [jssp, #16]
0xffff8bd080ec  1580  stp d22, d23, [jssp, #-32]!
0xffff8bd080f0  1584  stp d24, d25, [jssp, #16]
0xffff8bd080f4  1588  stp d18, d19, [jssp, #-32]!
0xffff8bd080f8  1592  stp d20, d21, [jssp, #16]
0xffff8bd080fc  1596  stp d6, d7, [jssp, #-32]!
0xffff8bd08100  1600  stp d16, d17, [jssp, #16]
0xffff8bd08104  1604  stp d2, d3, [jssp, #-32]!
0xffff8bd08108  1608  stp d4, d5, [jssp, #16]
0xffff8bd0810c  1612  stp d0, d1, [jssp, #-16]!
0xffff8bd08110  1616  mov x0, x8
0xffff8bd08114  1620  ldr x2, pc+268 (addr 0x0000ffff8bd08220)    ;; external reference (isolate)
0xffff8bd08118  1624  ldr x16, pc+272 (addr 0x0000ffff8bd08228)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0811c  1628  and csp, jssp, #0xfffffffffffffff0
0xffff8bd08120  1632  blr x16
0xffff8bd08124  1636  ldp d2, d3, [jssp, #16]
0xffff8bd08128  1640  ldp d0, d1, [jssp], #32
0xffff8bd0812c  1644  ldp d6, d7, [jssp, #16]
0xffff8bd08130  1648  ldp d4, d5, [jssp], #32
0xffff8bd08134  1652  ldp d18, d19, [jssp, #16]
0xffff8bd08138  1656  ldp d16, d17, [jssp], #32
0xffff8bd0813c  1660  ldp d22, d23, [jssp, #16]
0xffff8bd08140  1664  ldp d20, d21, [jssp], #32
0xffff8bd08144  1668  ldp d26, d27, [jssp, #16]
0xffff8bd08148  1672  ldp d24, d25, [jssp], #32
0xffff8bd0814c  1676  ldp d28, d29, [jssp], #16
0xffff8bd08150  1680  ldp x5, x6, [jssp, #16]
0xffff8bd08154  1684  ldp x1, x4, [jssp], #32
0xffff8bd08158  1688  ldp x9, x10, [jssp, #16]
0xffff8bd0815c  1692  ldp x7, x8, [jssp], #32
0xffff8bd08160  1696  ldp x13, x14, [jssp, #16]
0xffff8bd08164  1700  ldp x11, x12, [jssp], #32
0xffff8bd08168  1704  ldr lr, [jssp, #16]
0xffff8bd0816c  1708  ldp x15, x18, [jssp], #24
0xffff8bd08170  1712  ldp x3, x2, [jssp], #16
0xffff8bd08174  1716  ret
0xffff8bd08178  1720  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd0817c  1724  d63f03e0       constant
0xffff8bd08180  1728  2cb8e8c0       constant
0xffff8bd08184  1732  00000000       constant
0xffff8bd08188  1736  8bd065a0       constant
0xffff8bd0818c  1740  0000ffff       constant
0xffff8bd08190  1744  2cb8e8c0       constant
0xffff8bd08194  1748  00000000       constant
0xffff8bd08198  1752  8bd065a0       constant
0xffff8bd0819c  1756  0000ffff       constant
0xffff8bd081a0  1760  2cb8e8c0       constant
0xffff8bd081a4  1764  00000000       constant
0xffff8bd081a8  1768  8bd065a0       constant
0xffff8bd081ac  1772  0000ffff       constant
0xffff8bd081b0  1776  2cb8d2d0       constant
0xffff8bd081b4  1780  00000000       constant
0xffff8bd081b8  1784  00c2d958       constant
0xffff8bd081bc  1788  00000000       constant
0xffff8bd081c0  1792  2cb8e8c0       constant
0xffff8bd081c4  1796  00000000       constant
0xffff8bd081c8  1800  8bd065a0       constant
0xffff8bd081cc  1804  0000ffff       constant
0xffff8bd081d0  1808  2cb8d2d0       constant
0xffff8bd081d4  1812  00000000       constant
0xffff8bd081d8  1816  00c2d958       constant
0xffff8bd081dc  1820  00000000       constant
0xffff8bd081e0  1824  2cb8e8c0       constant
0xffff8bd081e4  1828  00000000       constant
0xffff8bd081e8  1832  8bd065a0       constant
0xffff8bd081ec  1836  0000ffff       constant
0xffff8bd081f0  1840  2cb8e8c0       constant
0xffff8bd081f4  1844  00000000       constant
0xffff8bd081f8  1848  8bd065a0       constant
0xffff8bd081fc  1852  0000ffff       constant
0xffff8bd08200  1856  2cb8d2d0       constant
0xffff8bd08204  1860  00000000       constant
0xffff8bd08208  1864  00c2d958       constant
0xffff8bd0820c  1868  00000000       constant
0xffff8bd08210  1872  2cb8e8c0       constant
0xffff8bd08214  1876  00000000       constant
0xffff8bd08218  1880  8bd065a0       constant
0xffff8bd0821c  1884  0000ffff       constant
0xffff8bd08220  1888  2cb8d2d0       constant
0xffff8bd08224  1892  00000000       constant
0xffff8bd08228  1896  00c2d958       constant
0xffff8bd0822c  1900  00000000       constant


RelocInfo (size = 65)
0xffff8bd07ac8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd07aec  code target (STUB)  (0xffff8bd065a0)
0xffff8bd07b64  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd07b88  code target (STUB)  (0xffff8bd065a0)
0xffff8bd07bc8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd07bec  code target (STUB)  (0xffff8bd065a0)
0xffff8bd07c58  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd07c5c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd07cb8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd07cdc  code target (STUB)  (0xffff8bd065a0)
0xffff8bd07db8  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd07dbc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd07e80  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd07ea4  code target (STUB)  (0xffff8bd065a0)
0xffff8bd07f04  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd07f28  code target (STUB)  (0xffff8bd065a0)
0xffff8bd07f94  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd07f98  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd07ff4  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd08018  code target (STUB)  (0xffff8bd065a0)
0xffff8bd08114  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd08118  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd08178  constant pool (size 184)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 706)
0xffff8bd082a0     0  movz x16, #0xa00000000
0xffff8bd082a4     4  sub csp, jssp, #0x10 (16)
0xffff8bd082a8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd082ac    12  mov fp, jssp
0xffff8bd082b0    16  sub csp, jssp, #0x8 (8)
0xffff8bd082b4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd082b8    24  stur x16, [fp, #-8]
0xffff8bd082bc    28  ldr x3, [fp]
0xffff8bd082c0    32  ldur x4, [x3, #-8]
0xffff8bd082c4    36  movz x16, #0xe00000000
0xffff8bd082c8    40  cmp x4, x16
0xffff8bd082cc    44  csel x4, fp, x3, ne
0xffff8bd082d0    48  ldr x3, [x4, #16]
0xffff8bd082d4    52  tbnz w3, #0, #+0x11c (addr 0xffff8bd083f0)
0xffff8bd082d8    56  asr x5, x3, #32
0xffff8bd082dc    60  movz w16, #0x257f
0xffff8bd082e0    64  cmp w5, w16, lsl #3
0xffff8bd082e4    68  b.hs #+0x224 (addr 0xffff8bd08508)
0xffff8bd082e8    72  cbz w5, #+0xc (addr 0xffff8bd082f4)
0xffff8bd082ec    76  mov x3, x5
0xffff8bd082f0    80  b #+0xc (addr 0xffff8bd082fc)
0xffff8bd082f4    84  movz x3, #0x4
0xffff8bd082f8    88  movz x5, #0x0
0xffff8bd082fc    92  lsl x4, x3, #32
0xffff8bd08300    96  lsl x5, x5, #32
0xffff8bd08304   100  lsl w6, w3, #3
0xffff8bd08308   104  add w6, w6, #0x10 (16)
0xffff8bd0830c   108  cmp w6, #0x96000 (614400)
0xffff8bd08310   112  b.hs #+0x200 (addr 0xffff8bd08510)
0xffff8bd08314   116  movz x7, #0xe2c0
0xffff8bd08318   120  movk x7, #0x2cb8, lsl #16
0xffff8bd0831c   124  ldp x8, x0, [x7]
0xffff8bd08320   128  adds x16, x8, #0x30 (48)
0xffff8bd08324   132  ccmp x16, x0, #nzCv, lo
0xffff8bd08328   136  b.hi #+0xf0 (addr 0xffff8bd08418)
0xffff8bd0832c   140  str x16, [x7]
0xffff8bd08330   144  orr x8, x8, #0x1
0xffff8bd08334   148  ldur x0, [x1, #23]
0xffff8bd08338   152  stur x0, [x8, #-1]
0xffff8bd0833c   156  ldr x0, pc+364 (addr 0x0000ffff8bd084a8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08340   160  stur x0, [x8, #7]
0xffff8bd08344   164  ldr x0, pc+364 (addr 0x0000ffff8bd084b0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08348   168  stur x0, [x8, #15]
0xffff8bd0834c   172  stur x5, [x8, #23]
0xffff8bd08350   176  add x0, x8, #0x20 (32)
0xffff8bd08354   180  ldr x1, pc+356 (addr 0x0000ffff8bd084b8)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd08358   184  stur x1, [x0, #-1]
0xffff8bd0835c   188  stur x2, [x0, #7]
0xffff8bd08360   192  ldur w0, [x2, #35]
0xffff8bd08364   196  add w0, w0, #0x1 (1)
0xffff8bd08368   200  lsl x0, x0, #32
0xffff8bd0836c   204  stur x0, [x2, #31]
0xffff8bd08370   208  sxtw x6, w6
0xffff8bd08374   212  movz x0, #0xe2c0
0xffff8bd08378   216  movk x0, #0x2cb8, lsl #16
0xffff8bd0837c   220  ldp x2, x16, [x0]
0xffff8bd08380   224  adds x1, x2, x6
0xffff8bd08384   228  ccmp x1, x16, #nzCv, lo
0xffff8bd08388   232  b.hi #+0xd4 (addr 0xffff8bd0845c)
0xffff8bd0838c   236  str x1, [x0]
0xffff8bd08390   240  orr x2, x2, #0x1
0xffff8bd08394   244  ldr x0, pc+300 (addr 0x0000ffff8bd084c0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd08398   248  stur x0, [x2, #-1]
0xffff8bd0839c   252  stur x4, [x2, #7]
0xffff8bd083a0   256  mov x0, x2
0xffff8bd083a4   260  stur x0, [x8, #15]
0xffff8bd083a8   264  add x1, x8, #0xf (15)
0xffff8bd083ac   268  and x0, x8, #0xfffffffffff00000
0xffff8bd083b0   272  ldr x0, [x0, #8]
0xffff8bd083b4   276  tbz w0, #2, #+0xc (addr 0xffff8bd083c0)
0xffff8bd083b8   280  ldr x16, pc+272 (addr 0x0000ffff8bd084c8)    ;; code: STUB, RecordWriteStub, minor: 66568
0xffff8bd083bc   284  blr x16
0xffff8bd083c0   288  cmp w3, #0x0 (0)
0xffff8bd083c4   292  b.le #+0x18 (addr 0xffff8bd083dc)
0xffff8bd083c8   296  sub w3, w3, #0x1 (1)
0xffff8bd083cc   300  ldr x0, pc+260 (addr 0x0000ffff8bd084d0)    ;; object: 0x26c04519 <the hole>
0xffff8bd083d0   304  add x1, x2, #0xf (15)
0xffff8bd083d4   308  str x0, [x1, w3, sxtw #3]
0xffff8bd083d8   312  b #-0x18 (addr 0xffff8bd083c0)
0xffff8bd083dc   316  mov x0, x8
0xffff8bd083e0   320  mov jssp, fp
0xffff8bd083e4   324  ldp fp, lr, [jssp], #16
0xffff8bd083e8   328  add jssp, jssp, #0x10 (16)
0xffff8bd083ec   332  ret
0xffff8bd083f0   336  ldur x16, [x3, #-1]
0xffff8bd083f4   340  ldr x17, [x26, #120]
0xffff8bd083f8   344  cmp x16, x17
0xffff8bd083fc   348  b.ne #+0x11c (addr 0xffff8bd08518)
0xffff8bd08400   352  ldur d29, [x3, #7]
0xffff8bd08404   356  fcvtzs w5, d29
0xffff8bd08408   360  scvtf d0, w5
0xffff8bd0840c   364  fcmp d29, d0
0xffff8bd08410   368  b.ne #+0x108 (addr 0xffff8bd08518)
0xffff8bd08414   372  b #-0x138 (addr 0xffff8bd082dc)
0xffff8bd08418   376  movz x8, #0x0
0xffff8bd0841c   380  mov x16, lr
0xffff8bd08420   384  ldr x17, pc+184 (addr 0x0000ffff8bd084d8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd08424   388  blr x17
0xffff8bd08428   392  movz x0, #0x3000000000
0xffff8bd0842c   396  movz x10, #0x0
0xffff8bd08430   400  sub csp, jssp, #0x10 (16)
0xffff8bd08434   404  stp x10, x0, [jssp, #-16]!
0xffff8bd08438   408  movz x0, #0x2
0xffff8bd0843c   412  movz x1, #0x5b88
0xffff8bd08440   416  movk x1, #0xe2, lsl #16
0xffff8bd08444   420  ldr x16, pc+156 (addr 0x0000ffff8bd084e0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd08448   424  blr x16
0xffff8bd0844c   428  str x0, [jssp, #64]
0xffff8bd08450   432  ldr x16, pc+152 (addr 0x0000ffff8bd084e8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd08454   436  blr x16
0xffff8bd08458   440  b #-0x124 (addr 0xffff8bd08334)
0xffff8bd0845c   444  movz x2, #0x0
0xffff8bd08460   448  mov x16, lr
0xffff8bd08464   452  ldr x17, pc+140 (addr 0x0000ffff8bd084f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd08468   456  blr x17
0xffff8bd0846c   460  lsl x0, x6, #32
0xffff8bd08470   464  movz x10, #0x0
0xffff8bd08474   468  sub csp, jssp, #0x10 (16)
0xffff8bd08478   472  stp x10, x0, [jssp, #-16]!
0xffff8bd0847c   476  movz x0, #0x2
0xffff8bd08480   480  movz x1, #0x5b88
0xffff8bd08484   484  movk x1, #0xe2, lsl #16
0xffff8bd08488   488  ldr x16, pc+112 (addr 0x0000ffff8bd084f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0848c   492  blr x16
0xffff8bd08490   496  str x0, [jssp, #16]
0xffff8bd08494   500  ldr x16, pc+108 (addr 0x0000ffff8bd08500)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd08498   504  blr x16
0xffff8bd0849c   508  b #-0x108 (addr 0xffff8bd08394)
0xffff8bd084a0   512  5800033f       constant pool begin (num_const = 25)    ;; constant pool
0xffff8bd084a4   516  d63f03e0       constant
0xffff8bd084a8   520  26c04201       constant
0xffff8bd084ac   524  00000000       constant
0xffff8bd084b0   528  26c04201       constant
0xffff8bd084b4   532  00000000       constant
0xffff8bd084b8   536  5f505d81       constant
0xffff8bd084bc   540  00000000       constant
0xffff8bd084c0   544  5f504259       constant
0xffff8bd084c4   548  00000000       constant
0xffff8bd084c8   552  8bd07ac0       constant
0xffff8bd084cc   556  0000ffff       constant
0xffff8bd084d0   560  26c04519       constant
0xffff8bd084d4   564  00000000       constant
0xffff8bd084d8   568  8bd06820       constant
0xffff8bd084dc   572  0000ffff       constant
0xffff8bd084e0   576  8bd06260       constant
0xffff8bd084e4   580  0000ffff       constant
0xffff8bd084e8   584  8bd068e0       constant
0xffff8bd084ec   588  0000ffff       constant
0xffff8bd084f0   592  8bd06820       constant
0xffff8bd084f4   596  0000ffff       constant
0xffff8bd084f8   600  8bd06260       constant
0xffff8bd084fc   604  0000ffff       constant
0xffff8bd08500   608  8bd068e0       constant
0xffff8bd08504   612  0000ffff       constant
0xffff8bd08508   616  movz x16, #0x0
0xffff8bd0850c   620  bl #+0x14 (addr 0xffff8bd08520)
0xffff8bd08510   624  movz x16, #0x8
0xffff8bd08514   628  bl #+0xc (addr 0xffff8bd08520)
0xffff8bd08518   632  movz x16, #0x10
0xffff8bd0851c   636  bl #+0x4 (addr 0xffff8bd08520)
0xffff8bd08520   640  ldr x17, pc+24 (addr 0x0000ffff8bd08538)    ;; lazy deoptimization bailout 0
0xffff8bd08524   644  add x17, x17, x16
0xffff8bd08528   648  br x17
0xffff8bd0852c   652  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd08530   656  d63f03e0       constant
0xffff8bd08534   660  d503201f       constant
0xffff8bd08538   664  8bb06000       constant
0xffff8bd0853c   668  0000ffff       constant


Safepoints (size = 34)
0xffff8bd0844c   428  000 | x1 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd08490   496  000 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff8bd0833c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08344  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08354  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd08394  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd083b8  code target (STUB)  (0xffff8bd07ac0)
0xffff8bd083cc  embedded object  (0x26c04519 <the hole>)
0xffff8bd08420  code target (STUB)  (0xffff8bd06820)
0xffff8bd08444  code target (STUB)  (0xffff8bd06260)
0xffff8bd08450  code target (STUB)  (0xffff8bd068e0)
0xffff8bd08464  code target (STUB)  (0xffff8bd06820)
0xffff8bd08488  code target (STUB)  (0xffff8bd06260)
0xffff8bd08494  code target (STUB)  (0xffff8bd068e0)
0xffff8bd084a0  constant pool (size 104)
0xffff8bd08520  runtime entry
0xffff8bd0852c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 706)
0xffff8bd082a0     0  movz x16, #0xa00000000
0xffff8bd082a4     4  sub csp, jssp, #0x10 (16)
0xffff8bd082a8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd082ac    12  mov fp, jssp
0xffff8bd082b0    16  sub csp, jssp, #0x8 (8)
0xffff8bd082b4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd082b8    24  stur x16, [fp, #-8]
0xffff8bd082bc    28  ldr x3, [fp]
0xffff8bd082c0    32  ldur x4, [x3, #-8]
0xffff8bd082c4    36  movz x16, #0xe00000000
0xffff8bd082c8    40  cmp x4, x16
0xffff8bd082cc    44  csel x4, fp, x3, ne
0xffff8bd082d0    48  ldr x3, [x4, #16]
0xffff8bd082d4    52  tbnz w3, #0, #+0x11c (addr 0xffff8bd083f0)
0xffff8bd082d8    56  asr x5, x3, #32
0xffff8bd082dc    60  movz w16, #0x257f
0xffff8bd082e0    64  cmp w5, w16, lsl #3
0xffff8bd082e4    68  b.hs #+0x224 (addr 0xffff8bd08508)
0xffff8bd082e8    72  cbz w5, #+0xc (addr 0xffff8bd082f4)
0xffff8bd082ec    76  mov x3, x5
0xffff8bd082f0    80  b #+0xc (addr 0xffff8bd082fc)
0xffff8bd082f4    84  movz x3, #0x4
0xffff8bd082f8    88  movz x5, #0x0
0xffff8bd082fc    92  lsl x4, x3, #32
0xffff8bd08300    96  lsl x5, x5, #32
0xffff8bd08304   100  lsl w6, w3, #3
0xffff8bd08308   104  add w6, w6, #0x10 (16)
0xffff8bd0830c   108  cmp w6, #0x96000 (614400)
0xffff8bd08310   112  b.hs #+0x200 (addr 0xffff8bd08510)
0xffff8bd08314   116  movz x7, #0xe2c0
0xffff8bd08318   120  movk x7, #0x2cb8, lsl #16
0xffff8bd0831c   124  ldp x8, x0, [x7]
0xffff8bd08320   128  adds x16, x8, #0x30 (48)
0xffff8bd08324   132  ccmp x16, x0, #nzCv, lo
0xffff8bd08328   136  b.hi #+0xf0 (addr 0xffff8bd08418)
0xffff8bd0832c   140  str x16, [x7]
0xffff8bd08330   144  orr x8, x8, #0x1
0xffff8bd08334   148  ldur x0, [x1, #23]
0xffff8bd08338   152  stur x0, [x8, #-1]
0xffff8bd0833c   156  ldr x0, pc+364 (addr 0x0000ffff8bd084a8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08340   160  stur x0, [x8, #7]
0xffff8bd08344   164  ldr x0, pc+364 (addr 0x0000ffff8bd084b0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08348   168  stur x0, [x8, #15]
0xffff8bd0834c   172  stur x5, [x8, #23]
0xffff8bd08350   176  add x0, x8, #0x20 (32)
0xffff8bd08354   180  ldr x1, pc+356 (addr 0x0000ffff8bd084b8)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd08358   184  stur x1, [x0, #-1]
0xffff8bd0835c   188  stur x2, [x0, #7]
0xffff8bd08360   192  ldur w0, [x2, #35]
0xffff8bd08364   196  add w0, w0, #0x1 (1)
0xffff8bd08368   200  lsl x0, x0, #32
0xffff8bd0836c   204  stur x0, [x2, #31]
0xffff8bd08370   208  sxtw x6, w6
0xffff8bd08374   212  movz x0, #0xe2c0
0xffff8bd08378   216  movk x0, #0x2cb8, lsl #16
0xffff8bd0837c   220  ldp x2, x16, [x0]
0xffff8bd08380   224  adds x1, x2, x6
0xffff8bd08384   228  ccmp x1, x16, #nzCv, lo
0xffff8bd08388   232  b.hi #+0xd4 (addr 0xffff8bd0845c)
0xffff8bd0838c   236  str x1, [x0]
0xffff8bd08390   240  orr x2, x2, #0x1
0xffff8bd08394   244  ldr x0, pc+300 (addr 0x0000ffff8bd084c0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd08398   248  stur x0, [x2, #-1]
0xffff8bd0839c   252  stur x4, [x2, #7]
0xffff8bd083a0   256  mov x0, x2
0xffff8bd083a4   260  stur x0, [x8, #15]
0xffff8bd083a8   264  add x1, x8, #0xf (15)
0xffff8bd083ac   268  and x0, x8, #0xfffffffffff00000
0xffff8bd083b0   272  ldr x0, [x0, #8]
0xffff8bd083b4   276  tbz w0, #2, #+0xc (addr 0xffff8bd083c0)
0xffff8bd083b8   280  ldr x16, pc+272 (addr 0x0000ffff8bd084c8)    ;; code: STUB, RecordWriteStub, minor: 66568
0xffff8bd083bc   284  blr x16
0xffff8bd083c0   288  cmp w3, #0x0 (0)
0xffff8bd083c4   292  b.le #+0x18 (addr 0xffff8bd083dc)
0xffff8bd083c8   296  sub w3, w3, #0x1 (1)
0xffff8bd083cc   300  ldr x0, pc+260 (addr 0x0000ffff8bd084d0)    ;; object: 0x26c04519 <the hole>
0xffff8bd083d0   304  add x1, x2, #0xf (15)
0xffff8bd083d4   308  str x0, [x1, w3, sxtw #3]
0xffff8bd083d8   312  b #-0x18 (addr 0xffff8bd083c0)
0xffff8bd083dc   316  mov x0, x8
0xffff8bd083e0   320  mov jssp, fp
0xffff8bd083e4   324  ldp fp, lr, [jssp], #16
0xffff8bd083e8   328  add jssp, jssp, #0x10 (16)
0xffff8bd083ec   332  ret
0xffff8bd083f0   336  ldur x16, [x3, #-1]
0xffff8bd083f4   340  ldr x17, [x26, #120]
0xffff8bd083f8   344  cmp x16, x17
0xffff8bd083fc   348  b.ne #+0x11c (addr 0xffff8bd08518)
0xffff8bd08400   352  ldur d29, [x3, #7]
0xffff8bd08404   356  fcvtzs w5, d29
0xffff8bd08408   360  scvtf d0, w5
0xffff8bd0840c   364  fcmp d29, d0
0xffff8bd08410   368  b.ne #+0x108 (addr 0xffff8bd08518)
0xffff8bd08414   372  b #-0x138 (addr 0xffff8bd082dc)
0xffff8bd08418   376  movz x8, #0x0
0xffff8bd0841c   380  mov x16, lr
0xffff8bd08420   384  ldr x17, pc+184 (addr 0x0000ffff8bd084d8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd08424   388  blr x17
0xffff8bd08428   392  movz x0, #0x3000000000
0xffff8bd0842c   396  movz x10, #0x0
0xffff8bd08430   400  sub csp, jssp, #0x10 (16)
0xffff8bd08434   404  stp x10, x0, [jssp, #-16]!
0xffff8bd08438   408  movz x0, #0x2
0xffff8bd0843c   412  movz x1, #0x5b88
0xffff8bd08440   416  movk x1, #0xe2, lsl #16
0xffff8bd08444   420  ldr x16, pc+156 (addr 0x0000ffff8bd084e0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd08448   424  blr x16
0xffff8bd0844c   428  str x0, [jssp, #64]
0xffff8bd08450   432  ldr x16, pc+152 (addr 0x0000ffff8bd084e8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd08454   436  blr x16
0xffff8bd08458   440  b #-0x124 (addr 0xffff8bd08334)
0xffff8bd0845c   444  movz x2, #0x0
0xffff8bd08460   448  mov x16, lr
0xffff8bd08464   452  ldr x17, pc+140 (addr 0x0000ffff8bd084f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd08468   456  blr x17
0xffff8bd0846c   460  lsl x0, x6, #32
0xffff8bd08470   464  movz x10, #0x0
0xffff8bd08474   468  sub csp, jssp, #0x10 (16)
0xffff8bd08478   472  stp x10, x0, [jssp, #-16]!
0xffff8bd0847c   476  movz x0, #0x2
0xffff8bd08480   480  movz x1, #0x5b88
0xffff8bd08484   484  movk x1, #0xe2, lsl #16
0xffff8bd08488   488  ldr x16, pc+112 (addr 0x0000ffff8bd084f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0848c   492  blr x16
0xffff8bd08490   496  str x0, [jssp, #16]
0xffff8bd08494   500  ldr x16, pc+108 (addr 0x0000ffff8bd08500)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd08498   504  blr x16
0xffff8bd0849c   508  b #-0x108 (addr 0xffff8bd08394)
0xffff8bd084a0   512  5800033f       constant pool begin (num_const = 25)    ;; constant pool
0xffff8bd084a4   516  d63f03e0       constant
0xffff8bd084a8   520  26c04201       constant
0xffff8bd084ac   524  00000000       constant
0xffff8bd084b0   528  26c04201       constant
0xffff8bd084b4   532  00000000       constant
0xffff8bd084b8   536  5f505d81       constant
0xffff8bd084bc   540  00000000       constant
0xffff8bd084c0   544  5f504259       constant
0xffff8bd084c4   548  00000000       constant
0xffff8bd084c8   552  8bd07ac0       constant
0xffff8bd084cc   556  0000ffff       constant
0xffff8bd084d0   560  26c04519       constant
0xffff8bd084d4   564  00000000       constant
0xffff8bd084d8   568  8bd06820       constant
0xffff8bd084dc   572  0000ffff       constant
0xffff8bd084e0   576  8bd06260       constant
0xffff8bd084e4   580  0000ffff       constant
0xffff8bd084e8   584  8bd068e0       constant
0xffff8bd084ec   588  0000ffff       constant
0xffff8bd084f0   592  8bd06820       constant
0xffff8bd084f4   596  0000ffff       constant
0xffff8bd084f8   600  8bd06260       constant
0xffff8bd084fc   604  0000ffff       constant
0xffff8bd08500   608  8bd068e0       constant
0xffff8bd08504   612  0000ffff       constant
0xffff8bd08508   616  movz x16, #0x0
0xffff8bd0850c   620  bl #+0x14 (addr 0xffff8bd08520)
0xffff8bd08510   624  movz x16, #0x8
0xffff8bd08514   628  bl #+0xc (addr 0xffff8bd08520)
0xffff8bd08518   632  movz x16, #0x10
0xffff8bd0851c   636  bl #+0x4 (addr 0xffff8bd08520)
0xffff8bd08520   640  ldr x17, pc+24 (addr 0x0000ffff8bd08538)    ;; lazy deoptimization bailout 0
0xffff8bd08524   644  add x17, x17, x16
0xffff8bd08528   648  br x17
0xffff8bd0852c   652  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd08530   656  d63f03e0       constant
0xffff8bd08534   660  d503201f       constant
0xffff8bd08538   664  8bb06000       constant
0xffff8bd0853c   668  0000ffff       constant


Safepoints (size = 34)
0xffff8bd0844c   428  000 | x1 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd08490   496  000 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff8bd0833c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08344  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08354  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd08394  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd083b8  code target (STUB)  (0xffff8bd07ac0)
0xffff8bd083cc  embedded object  (0x26c04519 <the hole>)
0xffff8bd08420  code target (STUB)  (0xffff8bd06820)
0xffff8bd08444  code target (STUB)  (0xffff8bd06260)
0xffff8bd08450  code target (STUB)  (0xffff8bd068e0)
0xffff8bd08464  code target (STUB)  (0xffff8bd06820)
0xffff8bd08488  code target (STUB)  (0xffff8bd06260)
0xffff8bd08494  code target (STUB)  (0xffff8bd068e0)
0xffff8bd084a0  constant pool (size 104)
0xffff8bd08520  runtime entry
0xffff8bd0852c  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 509)
0xffff8bd085e0     0  movz x16, #0xa00000000
0xffff8bd085e4     4  sub csp, jssp, #0x10 (16)
0xffff8bd085e8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd085ec    12  mov fp, jssp
0xffff8bd085f0    16  sub csp, jssp, #0x8 (8)
0xffff8bd085f4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd085f8    24  stur x16, [fp, #-8]
0xffff8bd085fc    28  ldr x3, [fp]
0xffff8bd08600    32  ldur x4, [x3, #-8]
0xffff8bd08604    36  movz x16, #0xe00000000
0xffff8bd08608    40  cmp x4, x16
0xffff8bd0860c    44  csel x4, fp, x3, ne
0xffff8bd08610    48  ldr x3, [x4, #16]
0xffff8bd08614    52  tbnz w3, #0, #+0xd0 (addr 0xffff8bd086e4)
0xffff8bd08618    56  asr x5, x3, #32
0xffff8bd0861c    60  movz w16, #0x257f
0xffff8bd08620    64  cmp w5, w16, lsl #3
0xffff8bd08624    68  b.hs #+0x16c (addr 0xffff8bd08790)
0xffff8bd08628    72  cbz w5, #+0xc (addr 0xffff8bd08634)
0xffff8bd0862c    76  mov x3, x5
0xffff8bd08630    80  b #+0xc (addr 0xffff8bd0863c)
0xffff8bd08634    84  movz x3, #0x4
0xffff8bd08638    88  movz x5, #0x0
0xffff8bd0863c    92  lsl x4, x3, #32
0xffff8bd08640    96  lsl x5, x5, #32
0xffff8bd08644   100  lsl w6, w3, #3
0xffff8bd08648   104  add w6, w6, #0x10 (16)
0xffff8bd0864c   108  cmp w6, #0x96000 (614400)
0xffff8bd08650   112  b.hs #+0x148 (addr 0xffff8bd08798)
0xffff8bd08654   116  add w0, w6, #0x20 (32)
0xffff8bd08658   120  sxtw x0, w0
0xffff8bd0865c   124  movz x2, #0xe2c0
0xffff8bd08660   128  movk x2, #0x2cb8, lsl #16
0xffff8bd08664   132  ldp x7, x16, [x2]
0xffff8bd08668   136  adds x6, x7, x0
0xffff8bd0866c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd08670   144  b.hi #+0x9c (addr 0xffff8bd0870c)
0xffff8bd08674   148  str x6, [x2]
0xffff8bd08678   152  orr x7, x7, #0x1
0xffff8bd0867c   156  movz w0, #0x0
0xffff8bd08680   160  stur x0, [x7, #31]
0xffff8bd08684   164  ldur x0, [x1, #23]
0xffff8bd08688   168  stur x0, [x7, #-1]
0xffff8bd0868c   172  ldr x0, pc+204 (addr 0x0000ffff8bd08758)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08690   176  stur x0, [x7, #7]
0xffff8bd08694   180  ldr x0, pc+204 (addr 0x0000ffff8bd08760)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08698   184  stur x0, [x7, #15]
0xffff8bd0869c   188  stur x5, [x7, #23]
0xffff8bd086a0   192  add x0, x7, #0x20 (32)
0xffff8bd086a4   196  ldr x1, pc+196 (addr 0x0000ffff8bd08768)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd086a8   200  stur x1, [x0, #-1]
0xffff8bd086ac   204  stur x4, [x0, #7]
0xffff8bd086b0   208  stur x0, [x7, #15]
0xffff8bd086b4   212  cmp w3, #0x0 (0)
0xffff8bd086b8   216  b.le #+0x18 (addr 0xffff8bd086d0)
0xffff8bd086bc   220  sub w3, w3, #0x1 (1)
0xffff8bd086c0   224  ldr x1, pc+176 (addr 0x0000ffff8bd08770)    ;; object: 0x26c04519 <the hole>
0xffff8bd086c4   228  add x2, x0, #0xf (15)
0xffff8bd086c8   232  str x1, [x2, w3, sxtw #3]
0xffff8bd086cc   236  b #-0x18 (addr 0xffff8bd086b4)
0xffff8bd086d0   240  mov x0, x7
0xffff8bd086d4   244  mov jssp, fp
0xffff8bd086d8   248  ldp fp, lr, [jssp], #16
0xffff8bd086dc   252  add jssp, jssp, #0x10 (16)
0xffff8bd086e0   256  ret
0xffff8bd086e4   260  ldur x16, [x3, #-1]
0xffff8bd086e8   264  ldr x17, [x26, #120]
0xffff8bd086ec   268  cmp x16, x17
0xffff8bd086f0   272  b.ne #+0xb0 (addr 0xffff8bd087a0)
0xffff8bd086f4   276  ldur d29, [x3, #7]
0xffff8bd086f8   280  fcvtzs w5, d29
0xffff8bd086fc   284  scvtf d0, w5
0xffff8bd08700   288  fcmp d29, d0
0xffff8bd08704   292  b.ne #+0x9c (addr 0xffff8bd087a0)
0xffff8bd08708   296  b #-0xec (addr 0xffff8bd0861c)
0xffff8bd0870c   300  movz x7, #0x0
0xffff8bd08710   304  mov x16, lr
0xffff8bd08714   308  ldr x17, pc+100 (addr 0x0000ffff8bd08778)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd08718   312  blr x17
0xffff8bd0871c   316  lsl x0, x0, #32
0xffff8bd08720   320  movz x10, #0x0
0xffff8bd08724   324  sub csp, jssp, #0x10 (16)
0xffff8bd08728   328  stp x10, x0, [jssp, #-16]!
0xffff8bd0872c   332  movz x0, #0x2
0xffff8bd08730   336  movz x1, #0x5b88
0xffff8bd08734   340  movk x1, #0xe2, lsl #16
0xffff8bd08738   344  ldr x16, pc+72 (addr 0x0000ffff8bd08780)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0873c   348  blr x16
0xffff8bd08740   352  str x0, [jssp, #56]
0xffff8bd08744   356  ldr x16, pc+68 (addr 0x0000ffff8bd08788)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd08748   360  blr x16
0xffff8bd0874c   364  b #-0xd0 (addr 0xffff8bd0867c)
0xffff8bd08750   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd08754   372  d63f03e0       constant
0xffff8bd08758   376  26c04201       constant
0xffff8bd0875c   380  00000000       constant
0xffff8bd08760   384  26c04201       constant
0xffff8bd08764   388  00000000       constant
0xffff8bd08768   392  5f504259       constant
0xffff8bd0876c   396  00000000       constant
0xffff8bd08770   400  26c04519       constant
0xffff8bd08774   404  00000000       constant
0xffff8bd08778   408  8bd06820       constant
0xffff8bd0877c   412  0000ffff       constant
0xffff8bd08780   416  8bd06260       constant
0xffff8bd08784   420  0000ffff       constant
0xffff8bd08788   424  8bd068e0       constant
0xffff8bd0878c   428  0000ffff       constant
0xffff8bd08790   432  movz x16, #0x0
0xffff8bd08794   436  bl #+0x14 (addr 0xffff8bd087a8)
0xffff8bd08798   440  movz x16, #0x8
0xffff8bd0879c   444  bl #+0xc (addr 0xffff8bd087a8)
0xffff8bd087a0   448  movz x16, #0x10
0xffff8bd087a4   452  bl #+0x4 (addr 0xffff8bd087a8)
0xffff8bd087a8   456  ldr x17, pc+24 (addr 0x0000ffff8bd087c0)    ;; lazy deoptimization bailout 0
0xffff8bd087ac   460  add x17, x17, x16
0xffff8bd087b0   464  br x17
0xffff8bd087b4   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd087b8   472  d63f03e0       constant
0xffff8bd087bc   476  d503201f       constant
0xffff8bd087c0   480  8bb06000       constant
0xffff8bd087c4   484  0000ffff       constant


Safepoints (size = 21)
0xffff8bd08740   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd0868c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08694  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd086a4  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd086c0  embedded object  (0x26c04519 <the hole>)
0xffff8bd08714  code target (STUB)  (0xffff8bd06820)
0xffff8bd08738  code target (STUB)  (0xffff8bd06260)
0xffff8bd08744  code target (STUB)  (0xffff8bd068e0)
0xffff8bd08750  constant pool (size 64)
0xffff8bd087a8  runtime entry
0xffff8bd087b4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 509)
0xffff8bd085e0     0  movz x16, #0xa00000000
0xffff8bd085e4     4  sub csp, jssp, #0x10 (16)
0xffff8bd085e8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd085ec    12  mov fp, jssp
0xffff8bd085f0    16  sub csp, jssp, #0x8 (8)
0xffff8bd085f4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd085f8    24  stur x16, [fp, #-8]
0xffff8bd085fc    28  ldr x3, [fp]
0xffff8bd08600    32  ldur x4, [x3, #-8]
0xffff8bd08604    36  movz x16, #0xe00000000
0xffff8bd08608    40  cmp x4, x16
0xffff8bd0860c    44  csel x4, fp, x3, ne
0xffff8bd08610    48  ldr x3, [x4, #16]
0xffff8bd08614    52  tbnz w3, #0, #+0xd0 (addr 0xffff8bd086e4)
0xffff8bd08618    56  asr x5, x3, #32
0xffff8bd0861c    60  movz w16, #0x257f
0xffff8bd08620    64  cmp w5, w16, lsl #3
0xffff8bd08624    68  b.hs #+0x16c (addr 0xffff8bd08790)
0xffff8bd08628    72  cbz w5, #+0xc (addr 0xffff8bd08634)
0xffff8bd0862c    76  mov x3, x5
0xffff8bd08630    80  b #+0xc (addr 0xffff8bd0863c)
0xffff8bd08634    84  movz x3, #0x4
0xffff8bd08638    88  movz x5, #0x0
0xffff8bd0863c    92  lsl x4, x3, #32
0xffff8bd08640    96  lsl x5, x5, #32
0xffff8bd08644   100  lsl w6, w3, #3
0xffff8bd08648   104  add w6, w6, #0x10 (16)
0xffff8bd0864c   108  cmp w6, #0x96000 (614400)
0xffff8bd08650   112  b.hs #+0x148 (addr 0xffff8bd08798)
0xffff8bd08654   116  add w0, w6, #0x20 (32)
0xffff8bd08658   120  sxtw x0, w0
0xffff8bd0865c   124  movz x2, #0xe2c0
0xffff8bd08660   128  movk x2, #0x2cb8, lsl #16
0xffff8bd08664   132  ldp x7, x16, [x2]
0xffff8bd08668   136  adds x6, x7, x0
0xffff8bd0866c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd08670   144  b.hi #+0x9c (addr 0xffff8bd0870c)
0xffff8bd08674   148  str x6, [x2]
0xffff8bd08678   152  orr x7, x7, #0x1
0xffff8bd0867c   156  movz w0, #0x0
0xffff8bd08680   160  stur x0, [x7, #31]
0xffff8bd08684   164  ldur x0, [x1, #23]
0xffff8bd08688   168  stur x0, [x7, #-1]
0xffff8bd0868c   172  ldr x0, pc+204 (addr 0x0000ffff8bd08758)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08690   176  stur x0, [x7, #7]
0xffff8bd08694   180  ldr x0, pc+204 (addr 0x0000ffff8bd08760)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08698   184  stur x0, [x7, #15]
0xffff8bd0869c   188  stur x5, [x7, #23]
0xffff8bd086a0   192  add x0, x7, #0x20 (32)
0xffff8bd086a4   196  ldr x1, pc+196 (addr 0x0000ffff8bd08768)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd086a8   200  stur x1, [x0, #-1]
0xffff8bd086ac   204  stur x4, [x0, #7]
0xffff8bd086b0   208  stur x0, [x7, #15]
0xffff8bd086b4   212  cmp w3, #0x0 (0)
0xffff8bd086b8   216  b.le #+0x18 (addr 0xffff8bd086d0)
0xffff8bd086bc   220  sub w3, w3, #0x1 (1)
0xffff8bd086c0   224  ldr x1, pc+176 (addr 0x0000ffff8bd08770)    ;; object: 0x26c04519 <the hole>
0xffff8bd086c4   228  add x2, x0, #0xf (15)
0xffff8bd086c8   232  str x1, [x2, w3, sxtw #3]
0xffff8bd086cc   236  b #-0x18 (addr 0xffff8bd086b4)
0xffff8bd086d0   240  mov x0, x7
0xffff8bd086d4   244  mov jssp, fp
0xffff8bd086d8   248  ldp fp, lr, [jssp], #16
0xffff8bd086dc   252  add jssp, jssp, #0x10 (16)
0xffff8bd086e0   256  ret
0xffff8bd086e4   260  ldur x16, [x3, #-1]
0xffff8bd086e8   264  ldr x17, [x26, #120]
0xffff8bd086ec   268  cmp x16, x17
0xffff8bd086f0   272  b.ne #+0xb0 (addr 0xffff8bd087a0)
0xffff8bd086f4   276  ldur d29, [x3, #7]
0xffff8bd086f8   280  fcvtzs w5, d29
0xffff8bd086fc   284  scvtf d0, w5
0xffff8bd08700   288  fcmp d29, d0
0xffff8bd08704   292  b.ne #+0x9c (addr 0xffff8bd087a0)
0xffff8bd08708   296  b #-0xec (addr 0xffff8bd0861c)
0xffff8bd0870c   300  movz x7, #0x0
0xffff8bd08710   304  mov x16, lr
0xffff8bd08714   308  ldr x17, pc+100 (addr 0x0000ffff8bd08778)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd08718   312  blr x17
0xffff8bd0871c   316  lsl x0, x0, #32
0xffff8bd08720   320  movz x10, #0x0
0xffff8bd08724   324  sub csp, jssp, #0x10 (16)
0xffff8bd08728   328  stp x10, x0, [jssp, #-16]!
0xffff8bd0872c   332  movz x0, #0x2
0xffff8bd08730   336  movz x1, #0x5b88
0xffff8bd08734   340  movk x1, #0xe2, lsl #16
0xffff8bd08738   344  ldr x16, pc+72 (addr 0x0000ffff8bd08780)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0873c   348  blr x16
0xffff8bd08740   352  str x0, [jssp, #56]
0xffff8bd08744   356  ldr x16, pc+68 (addr 0x0000ffff8bd08788)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd08748   360  blr x16
0xffff8bd0874c   364  b #-0xd0 (addr 0xffff8bd0867c)
0xffff8bd08750   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd08754   372  d63f03e0       constant
0xffff8bd08758   376  26c04201       constant
0xffff8bd0875c   380  00000000       constant
0xffff8bd08760   384  26c04201       constant
0xffff8bd08764   388  00000000       constant
0xffff8bd08768   392  5f504259       constant
0xffff8bd0876c   396  00000000       constant
0xffff8bd08770   400  26c04519       constant
0xffff8bd08774   404  00000000       constant
0xffff8bd08778   408  8bd06820       constant
0xffff8bd0877c   412  0000ffff       constant
0xffff8bd08780   416  8bd06260       constant
0xffff8bd08784   420  0000ffff       constant
0xffff8bd08788   424  8bd068e0       constant
0xffff8bd0878c   428  0000ffff       constant
0xffff8bd08790   432  movz x16, #0x0
0xffff8bd08794   436  bl #+0x14 (addr 0xffff8bd087a8)
0xffff8bd08798   440  movz x16, #0x8
0xffff8bd0879c   444  bl #+0xc (addr 0xffff8bd087a8)
0xffff8bd087a0   448  movz x16, #0x10
0xffff8bd087a4   452  bl #+0x4 (addr 0xffff8bd087a8)
0xffff8bd087a8   456  ldr x17, pc+24 (addr 0x0000ffff8bd087c0)    ;; lazy deoptimization bailout 0
0xffff8bd087ac   460  add x17, x17, x16
0xffff8bd087b0   464  br x17
0xffff8bd087b4   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd087b8   472  d63f03e0       constant
0xffff8bd087bc   476  d503201f       constant
0xffff8bd087c0   480  8bb06000       constant
0xffff8bd087c4   484  0000ffff       constant


Safepoints (size = 21)
0xffff8bd08740   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd0868c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08694  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd086a4  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd086c0  embedded object  (0x26c04519 <the hole>)
0xffff8bd08714  code target (STUB)  (0xffff8bd06820)
0xffff8bd08738  code target (STUB)  (0xffff8bd06260)
0xffff8bd08744  code target (STUB)  (0xffff8bd068e0)
0xffff8bd08750  constant pool (size 64)
0xffff8bd087a8  runtime entry
0xffff8bd087b4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 722)
0xffff8bd08840     0  movz x16, #0xa00000000
0xffff8bd08844     4  sub csp, jssp, #0x10 (16)
0xffff8bd08848     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0884c    12  mov fp, jssp
0xffff8bd08850    16  sub csp, jssp, #0x8 (8)
0xffff8bd08854    20  sub jssp, jssp, #0x8 (8)
0xffff8bd08858    24  stur x16, [fp, #-8]
0xffff8bd0885c    28  ldr x3, [fp]
0xffff8bd08860    32  ldur x4, [x3, #-8]
0xffff8bd08864    36  movz x16, #0xe00000000
0xffff8bd08868    40  cmp x4, x16
0xffff8bd0886c    44  csel x4, fp, x3, ne
0xffff8bd08870    48  ldr x3, [x4, #16]
0xffff8bd08874    52  tbnz w3, #0, #+0x128 (addr 0xffff8bd0899c)
0xffff8bd08878    56  asr x5, x3, #32
0xffff8bd0887c    60  movz w16, #0x257f
0xffff8bd08880    64  cmp w5, w16, lsl #3
0xffff8bd08884    68  b.hs #+0x234 (addr 0xffff8bd08ab8)
0xffff8bd08888    72  cbz w5, #+0xc (addr 0xffff8bd08894)
0xffff8bd0888c    76  mov x3, x5
0xffff8bd08890    80  b #+0xc (addr 0xffff8bd0889c)
0xffff8bd08894    84  movz x3, #0x4
0xffff8bd08898    88  movz x5, #0x0
0xffff8bd0889c    92  lsl x4, x3, #32
0xffff8bd088a0    96  lsl x5, x5, #32
0xffff8bd088a4   100  lsl w6, w3, #3
0xffff8bd088a8   104  add w6, w6, #0x10 (16)
0xffff8bd088ac   108  cmp w6, #0x96000 (614400)
0xffff8bd088b0   112  b.hs #+0x210 (addr 0xffff8bd08ac0)
0xffff8bd088b4   116  movz x7, #0xe2c0
0xffff8bd088b8   120  movk x7, #0x2cb8, lsl #16
0xffff8bd088bc   124  ldp x8, x0, [x7]
0xffff8bd088c0   128  adds x16, x8, #0x30 (48)
0xffff8bd088c4   132  ccmp x16, x0, #nzCv, lo
0xffff8bd088c8   136  b.hi #+0xfc (addr 0xffff8bd089c4)
0xffff8bd088cc   140  str x16, [x7]
0xffff8bd088d0   144  orr x8, x8, #0x1
0xffff8bd088d4   148  ldur x0, [x1, #39]
0xffff8bd088d8   152  ldur x0, [x0, #39]
0xffff8bd088dc   156  movz x16, #0x17f
0xffff8bd088e0   160  ldr x0, [x0, x16]
0xffff8bd088e4   164  stur x0, [x8, #-1]
0xffff8bd088e8   168  ldr x0, pc+368 (addr 0x0000ffff8bd08a58)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd088ec   172  stur x0, [x8, #7]
0xffff8bd088f0   176  ldr x0, pc+368 (addr 0x0000ffff8bd08a60)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd088f4   180  stur x0, [x8, #15]
0xffff8bd088f8   184  stur x5, [x8, #23]
0xffff8bd088fc   188  add x0, x8, #0x20 (32)
0xffff8bd08900   192  ldr x1, pc+360 (addr 0x0000ffff8bd08a68)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd08904   196  stur x1, [x0, #-1]
0xffff8bd08908   200  stur x2, [x0, #7]
0xffff8bd0890c   204  ldur w0, [x2, #35]
0xffff8bd08910   208  add w0, w0, #0x1 (1)
0xffff8bd08914   212  lsl x0, x0, #32
0xffff8bd08918   216  stur x0, [x2, #31]
0xffff8bd0891c   220  sxtw x6, w6
0xffff8bd08920   224  movz x0, #0xe2c0
0xffff8bd08924   228  movk x0, #0x2cb8, lsl #16
0xffff8bd08928   232  ldp x2, x16, [x0]
0xffff8bd0892c   236  adds x1, x2, x6
0xffff8bd08930   240  ccmp x1, x16, #nzCv, lo
0xffff8bd08934   244  b.hi #+0xd4 (addr 0xffff8bd08a08)
0xffff8bd08938   248  str x1, [x0]
0xffff8bd0893c   252  orr x2, x2, #0x1
0xffff8bd08940   256  ldr x0, pc+304 (addr 0x0000ffff8bd08a70)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd08944   260  stur x0, [x2, #-1]
0xffff8bd08948   264  stur x4, [x2, #7]
0xffff8bd0894c   268  mov x0, x2
0xffff8bd08950   272  stur x0, [x8, #15]
0xffff8bd08954   276  add x1, x8, #0xf (15)
0xffff8bd08958   280  and x0, x8, #0xfffffffffff00000
0xffff8bd0895c   284  ldr x0, [x0, #8]
0xffff8bd08960   288  tbz w0, #2, #+0xc (addr 0xffff8bd0896c)
0xffff8bd08964   292  ldr x16, pc+276 (addr 0x0000ffff8bd08a78)    ;; code: STUB, RecordWriteStub, minor: 66568
0xffff8bd08968   296  blr x16
0xffff8bd0896c   300  cmp w3, #0x0 (0)
0xffff8bd08970   304  b.le #+0x18 (addr 0xffff8bd08988)
0xffff8bd08974   308  sub w3, w3, #0x1 (1)
0xffff8bd08978   312  ldr x0, pc+264 (addr 0x0000ffff8bd08a80)    ;; object: 0x26c04519 <the hole>
0xffff8bd0897c   316  add x1, x2, #0xf (15)
0xffff8bd08980   320  str x0, [x1, w3, sxtw #3]
0xffff8bd08984   324  b #-0x18 (addr 0xffff8bd0896c)
0xffff8bd08988   328  mov x0, x8
0xffff8bd0898c   332  mov jssp, fp
0xffff8bd08990   336  ldp fp, lr, [jssp], #16
0xffff8bd08994   340  add jssp, jssp, #0x10 (16)
0xffff8bd08998   344  ret
0xffff8bd0899c   348  ldur x16, [x3, #-1]
0xffff8bd089a0   352  ldr x17, [x26, #120]
0xffff8bd089a4   356  cmp x16, x17
0xffff8bd089a8   360  b.ne #+0x120 (addr 0xffff8bd08ac8)
0xffff8bd089ac   364  ldur d29, [x3, #7]
0xffff8bd089b0   368  fcvtzs w5, d29
0xffff8bd089b4   372  scvtf d0, w5
0xffff8bd089b8   376  fcmp d29, d0
0xffff8bd089bc   380  b.ne #+0x10c (addr 0xffff8bd08ac8)
0xffff8bd089c0   384  b #-0x144 (addr 0xffff8bd0887c)
0xffff8bd089c4   388  movz x8, #0x0
0xffff8bd089c8   392  mov x16, lr
0xffff8bd089cc   396  ldr x17, pc+188 (addr 0x0000ffff8bd08a88)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd089d0   400  blr x17
0xffff8bd089d4   404  movz x0, #0x3000000000
0xffff8bd089d8   408  movz x10, #0x0
0xffff8bd089dc   412  sub csp, jssp, #0x10 (16)
0xffff8bd089e0   416  stp x10, x0, [jssp, #-16]!
0xffff8bd089e4   420  movz x0, #0x2
0xffff8bd089e8   424  movz x1, #0x5b88
0xffff8bd089ec   428  movk x1, #0xe2, lsl #16
0xffff8bd089f0   432  ldr x16, pc+160 (addr 0x0000ffff8bd08a90)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd089f4   436  blr x16
0xffff8bd089f8   440  str x0, [jssp, #64]
0xffff8bd089fc   444  ldr x16, pc+156 (addr 0x0000ffff8bd08a98)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd08a00   448  blr x16
0xffff8bd08a04   452  b #-0x130 (addr 0xffff8bd088d4)
0xffff8bd08a08   456  movz x2, #0x0
0xffff8bd08a0c   460  mov x16, lr
0xffff8bd08a10   464  ldr x17, pc+144 (addr 0x0000ffff8bd08aa0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd08a14   468  blr x17
0xffff8bd08a18   472  lsl x0, x6, #32
0xffff8bd08a1c   476  movz x10, #0x0
0xffff8bd08a20   480  sub csp, jssp, #0x10 (16)
0xffff8bd08a24   484  stp x10, x0, [jssp, #-16]!
0xffff8bd08a28   488  movz x0, #0x2
0xffff8bd08a2c   492  movz x1, #0x5b88
0xffff8bd08a30   496  movk x1, #0xe2, lsl #16
0xffff8bd08a34   500  ldr x16, pc+116 (addr 0x0000ffff8bd08aa8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd08a38   504  blr x16
0xffff8bd08a3c   508  str x0, [jssp, #16]
0xffff8bd08a40   512  ldr x16, pc+112 (addr 0x0000ffff8bd08ab0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd08a44   516  blr x16
0xffff8bd08a48   520  b #-0x108 (addr 0xffff8bd08940)
0xffff8bd08a4c   524  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff8bd08a50   528  d63f03e0       constant
0xffff8bd08a54   532  d503201f       constant
0xffff8bd08a58   536  26c04201       constant
0xffff8bd08a5c   540  00000000       constant
0xffff8bd08a60   544  26c04201       constant
0xffff8bd08a64   548  00000000       constant
0xffff8bd08a68   552  5f505d81       constant
0xffff8bd08a6c   556  00000000       constant
0xffff8bd08a70   560  5f504259       constant
0xffff8bd08a74   564  00000000       constant
0xffff8bd08a78   568  8bd07ac0       constant
0xffff8bd08a7c   572  0000ffff       constant
0xffff8bd08a80   576  26c04519       constant
0xffff8bd08a84   580  00000000       constant
0xffff8bd08a88   584  8bd06820       constant
0xffff8bd08a8c   588  0000ffff       constant
0xffff8bd08a90   592  8bd06260       constant
0xffff8bd08a94   596  0000ffff       constant
0xffff8bd08a98   600  8bd068e0       constant
0xffff8bd08a9c   604  0000ffff       constant
0xffff8bd08aa0   608  8bd06820       constant
0xffff8bd08aa4   612  0000ffff       constant
0xffff8bd08aa8   616  8bd06260       constant
0xffff8bd08aac   620  0000ffff       constant
0xffff8bd08ab0   624  8bd068e0       constant
0xffff8bd08ab4   628  0000ffff       constant
0xffff8bd08ab8   632  movz x16, #0x0
0xffff8bd08abc   636  bl #+0x14 (addr 0xffff8bd08ad0)
0xffff8bd08ac0   640  movz x16, #0x8
0xffff8bd08ac4   644  bl #+0xc (addr 0xffff8bd08ad0)
0xffff8bd08ac8   648  movz x16, #0x10
0xffff8bd08acc   652  bl #+0x4 (addr 0xffff8bd08ad0)
0xffff8bd08ad0   656  ldr x17, pc+24 (addr 0x0000ffff8bd08ae8)    ;; lazy deoptimization bailout 0
0xffff8bd08ad4   660  add x17, x17, x16
0xffff8bd08ad8   664  br x17
0xffff8bd08adc   668  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd08ae0   672  d63f03e0       constant
0xffff8bd08ae4   676  d503201f       constant
0xffff8bd08ae8   680  8bb06000       constant
0xffff8bd08aec   684  0000ffff       constant


Safepoints (size = 34)
0xffff8bd089f8   440  000 | x1 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd08a3c   508  000 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff8bd088e8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd088f0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08900  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd08940  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd08964  code target (STUB)  (0xffff8bd07ac0)
0xffff8bd08978  embedded object  (0x26c04519 <the hole>)
0xffff8bd089cc  code target (STUB)  (0xffff8bd06820)
0xffff8bd089f0  code target (STUB)  (0xffff8bd06260)
0xffff8bd089fc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd08a10  code target (STUB)  (0xffff8bd06820)
0xffff8bd08a34  code target (STUB)  (0xffff8bd06260)
0xffff8bd08a40  code target (STUB)  (0xffff8bd068e0)
0xffff8bd08a4c  constant pool (size 108)
0xffff8bd08ad0  runtime entry
0xffff8bd08adc  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_HOLEY_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 722)
0xffff8bd08840     0  movz x16, #0xa00000000
0xffff8bd08844     4  sub csp, jssp, #0x10 (16)
0xffff8bd08848     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0884c    12  mov fp, jssp
0xffff8bd08850    16  sub csp, jssp, #0x8 (8)
0xffff8bd08854    20  sub jssp, jssp, #0x8 (8)
0xffff8bd08858    24  stur x16, [fp, #-8]
0xffff8bd0885c    28  ldr x3, [fp]
0xffff8bd08860    32  ldur x4, [x3, #-8]
0xffff8bd08864    36  movz x16, #0xe00000000
0xffff8bd08868    40  cmp x4, x16
0xffff8bd0886c    44  csel x4, fp, x3, ne
0xffff8bd08870    48  ldr x3, [x4, #16]
0xffff8bd08874    52  tbnz w3, #0, #+0x128 (addr 0xffff8bd0899c)
0xffff8bd08878    56  asr x5, x3, #32
0xffff8bd0887c    60  movz w16, #0x257f
0xffff8bd08880    64  cmp w5, w16, lsl #3
0xffff8bd08884    68  b.hs #+0x234 (addr 0xffff8bd08ab8)
0xffff8bd08888    72  cbz w5, #+0xc (addr 0xffff8bd08894)
0xffff8bd0888c    76  mov x3, x5
0xffff8bd08890    80  b #+0xc (addr 0xffff8bd0889c)
0xffff8bd08894    84  movz x3, #0x4
0xffff8bd08898    88  movz x5, #0x0
0xffff8bd0889c    92  lsl x4, x3, #32
0xffff8bd088a0    96  lsl x5, x5, #32
0xffff8bd088a4   100  lsl w6, w3, #3
0xffff8bd088a8   104  add w6, w6, #0x10 (16)
0xffff8bd088ac   108  cmp w6, #0x96000 (614400)
0xffff8bd088b0   112  b.hs #+0x210 (addr 0xffff8bd08ac0)
0xffff8bd088b4   116  movz x7, #0xe2c0
0xffff8bd088b8   120  movk x7, #0x2cb8, lsl #16
0xffff8bd088bc   124  ldp x8, x0, [x7]
0xffff8bd088c0   128  adds x16, x8, #0x30 (48)
0xffff8bd088c4   132  ccmp x16, x0, #nzCv, lo
0xffff8bd088c8   136  b.hi #+0xfc (addr 0xffff8bd089c4)
0xffff8bd088cc   140  str x16, [x7]
0xffff8bd088d0   144  orr x8, x8, #0x1
0xffff8bd088d4   148  ldur x0, [x1, #39]
0xffff8bd088d8   152  ldur x0, [x0, #39]
0xffff8bd088dc   156  movz x16, #0x17f
0xffff8bd088e0   160  ldr x0, [x0, x16]
0xffff8bd088e4   164  stur x0, [x8, #-1]
0xffff8bd088e8   168  ldr x0, pc+368 (addr 0x0000ffff8bd08a58)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd088ec   172  stur x0, [x8, #7]
0xffff8bd088f0   176  ldr x0, pc+368 (addr 0x0000ffff8bd08a60)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd088f4   180  stur x0, [x8, #15]
0xffff8bd088f8   184  stur x5, [x8, #23]
0xffff8bd088fc   188  add x0, x8, #0x20 (32)
0xffff8bd08900   192  ldr x1, pc+360 (addr 0x0000ffff8bd08a68)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd08904   196  stur x1, [x0, #-1]
0xffff8bd08908   200  stur x2, [x0, #7]
0xffff8bd0890c   204  ldur w0, [x2, #35]
0xffff8bd08910   208  add w0, w0, #0x1 (1)
0xffff8bd08914   212  lsl x0, x0, #32
0xffff8bd08918   216  stur x0, [x2, #31]
0xffff8bd0891c   220  sxtw x6, w6
0xffff8bd08920   224  movz x0, #0xe2c0
0xffff8bd08924   228  movk x0, #0x2cb8, lsl #16
0xffff8bd08928   232  ldp x2, x16, [x0]
0xffff8bd0892c   236  adds x1, x2, x6
0xffff8bd08930   240  ccmp x1, x16, #nzCv, lo
0xffff8bd08934   244  b.hi #+0xd4 (addr 0xffff8bd08a08)
0xffff8bd08938   248  str x1, [x0]
0xffff8bd0893c   252  orr x2, x2, #0x1
0xffff8bd08940   256  ldr x0, pc+304 (addr 0x0000ffff8bd08a70)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd08944   260  stur x0, [x2, #-1]
0xffff8bd08948   264  stur x4, [x2, #7]
0xffff8bd0894c   268  mov x0, x2
0xffff8bd08950   272  stur x0, [x8, #15]
0xffff8bd08954   276  add x1, x8, #0xf (15)
0xffff8bd08958   280  and x0, x8, #0xfffffffffff00000
0xffff8bd0895c   284  ldr x0, [x0, #8]
0xffff8bd08960   288  tbz w0, #2, #+0xc (addr 0xffff8bd0896c)
0xffff8bd08964   292  ldr x16, pc+276 (addr 0x0000ffff8bd08a78)    ;; code: STUB, RecordWriteStub, minor: 66568
0xffff8bd08968   296  blr x16
0xffff8bd0896c   300  cmp w3, #0x0 (0)
0xffff8bd08970   304  b.le #+0x18 (addr 0xffff8bd08988)
0xffff8bd08974   308  sub w3, w3, #0x1 (1)
0xffff8bd08978   312  ldr x0, pc+264 (addr 0x0000ffff8bd08a80)    ;; object: 0x26c04519 <the hole>
0xffff8bd0897c   316  add x1, x2, #0xf (15)
0xffff8bd08980   320  str x0, [x1, w3, sxtw #3]
0xffff8bd08984   324  b #-0x18 (addr 0xffff8bd0896c)
0xffff8bd08988   328  mov x0, x8
0xffff8bd0898c   332  mov jssp, fp
0xffff8bd08990   336  ldp fp, lr, [jssp], #16
0xffff8bd08994   340  add jssp, jssp, #0x10 (16)
0xffff8bd08998   344  ret
0xffff8bd0899c   348  ldur x16, [x3, #-1]
0xffff8bd089a0   352  ldr x17, [x26, #120]
0xffff8bd089a4   356  cmp x16, x17
0xffff8bd089a8   360  b.ne #+0x120 (addr 0xffff8bd08ac8)
0xffff8bd089ac   364  ldur d29, [x3, #7]
0xffff8bd089b0   368  fcvtzs w5, d29
0xffff8bd089b4   372  scvtf d0, w5
0xffff8bd089b8   376  fcmp d29, d0
0xffff8bd089bc   380  b.ne #+0x10c (addr 0xffff8bd08ac8)
0xffff8bd089c0   384  b #-0x144 (addr 0xffff8bd0887c)
0xffff8bd089c4   388  movz x8, #0x0
0xffff8bd089c8   392  mov x16, lr
0xffff8bd089cc   396  ldr x17, pc+188 (addr 0x0000ffff8bd08a88)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd089d0   400  blr x17
0xffff8bd089d4   404  movz x0, #0x3000000000
0xffff8bd089d8   408  movz x10, #0x0
0xffff8bd089dc   412  sub csp, jssp, #0x10 (16)
0xffff8bd089e0   416  stp x10, x0, [jssp, #-16]!
0xffff8bd089e4   420  movz x0, #0x2
0xffff8bd089e8   424  movz x1, #0x5b88
0xffff8bd089ec   428  movk x1, #0xe2, lsl #16
0xffff8bd089f0   432  ldr x16, pc+160 (addr 0x0000ffff8bd08a90)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd089f4   436  blr x16
0xffff8bd089f8   440  str x0, [jssp, #64]
0xffff8bd089fc   444  ldr x16, pc+156 (addr 0x0000ffff8bd08a98)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd08a00   448  blr x16
0xffff8bd08a04   452  b #-0x130 (addr 0xffff8bd088d4)
0xffff8bd08a08   456  movz x2, #0x0
0xffff8bd08a0c   460  mov x16, lr
0xffff8bd08a10   464  ldr x17, pc+144 (addr 0x0000ffff8bd08aa0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd08a14   468  blr x17
0xffff8bd08a18   472  lsl x0, x6, #32
0xffff8bd08a1c   476  movz x10, #0x0
0xffff8bd08a20   480  sub csp, jssp, #0x10 (16)
0xffff8bd08a24   484  stp x10, x0, [jssp, #-16]!
0xffff8bd08a28   488  movz x0, #0x2
0xffff8bd08a2c   492  movz x1, #0x5b88
0xffff8bd08a30   496  movk x1, #0xe2, lsl #16
0xffff8bd08a34   500  ldr x16, pc+116 (addr 0x0000ffff8bd08aa8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd08a38   504  blr x16
0xffff8bd08a3c   508  str x0, [jssp, #16]
0xffff8bd08a40   512  ldr x16, pc+112 (addr 0x0000ffff8bd08ab0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd08a44   516  blr x16
0xffff8bd08a48   520  b #-0x108 (addr 0xffff8bd08940)
0xffff8bd08a4c   524  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff8bd08a50   528  d63f03e0       constant
0xffff8bd08a54   532  d503201f       constant
0xffff8bd08a58   536  26c04201       constant
0xffff8bd08a5c   540  00000000       constant
0xffff8bd08a60   544  26c04201       constant
0xffff8bd08a64   548  00000000       constant
0xffff8bd08a68   552  5f505d81       constant
0xffff8bd08a6c   556  00000000       constant
0xffff8bd08a70   560  5f504259       constant
0xffff8bd08a74   564  00000000       constant
0xffff8bd08a78   568  8bd07ac0       constant
0xffff8bd08a7c   572  0000ffff       constant
0xffff8bd08a80   576  26c04519       constant
0xffff8bd08a84   580  00000000       constant
0xffff8bd08a88   584  8bd06820       constant
0xffff8bd08a8c   588  0000ffff       constant
0xffff8bd08a90   592  8bd06260       constant
0xffff8bd08a94   596  0000ffff       constant
0xffff8bd08a98   600  8bd068e0       constant
0xffff8bd08a9c   604  0000ffff       constant
0xffff8bd08aa0   608  8bd06820       constant
0xffff8bd08aa4   612  0000ffff       constant
0xffff8bd08aa8   616  8bd06260       constant
0xffff8bd08aac   620  0000ffff       constant
0xffff8bd08ab0   624  8bd068e0       constant
0xffff8bd08ab4   628  0000ffff       constant
0xffff8bd08ab8   632  movz x16, #0x0
0xffff8bd08abc   636  bl #+0x14 (addr 0xffff8bd08ad0)
0xffff8bd08ac0   640  movz x16, #0x8
0xffff8bd08ac4   644  bl #+0xc (addr 0xffff8bd08ad0)
0xffff8bd08ac8   648  movz x16, #0x10
0xffff8bd08acc   652  bl #+0x4 (addr 0xffff8bd08ad0)
0xffff8bd08ad0   656  ldr x17, pc+24 (addr 0x0000ffff8bd08ae8)    ;; lazy deoptimization bailout 0
0xffff8bd08ad4   660  add x17, x17, x16
0xffff8bd08ad8   664  br x17
0xffff8bd08adc   668  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd08ae0   672  d63f03e0       constant
0xffff8bd08ae4   676  d503201f       constant
0xffff8bd08ae8   680  8bb06000       constant
0xffff8bd08aec   684  0000ffff       constant


Safepoints (size = 34)
0xffff8bd089f8   440  000 | x1 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd08a3c   508  000 | x2 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff8bd088e8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd088f0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08900  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd08940  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd08964  code target (STUB)  (0xffff8bd07ac0)
0xffff8bd08978  embedded object  (0x26c04519 <the hole>)
0xffff8bd089cc  code target (STUB)  (0xffff8bd06820)
0xffff8bd089f0  code target (STUB)  (0xffff8bd06260)
0xffff8bd089fc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd08a10  code target (STUB)  (0xffff8bd06820)
0xffff8bd08a34  code target (STUB)  (0xffff8bd06260)
0xffff8bd08a40  code target (STUB)  (0xffff8bd068e0)
0xffff8bd08a4c  constant pool (size 108)
0xffff8bd08ad0  runtime entry
0xffff8bd08adc  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 525)
0xffff8bd08b80     0  movz x16, #0xa00000000
0xffff8bd08b84     4  sub csp, jssp, #0x10 (16)
0xffff8bd08b88     8  stp fp, lr, [jssp, #-16]!
0xffff8bd08b8c    12  mov fp, jssp
0xffff8bd08b90    16  sub csp, jssp, #0x8 (8)
0xffff8bd08b94    20  sub jssp, jssp, #0x8 (8)
0xffff8bd08b98    24  stur x16, [fp, #-8]
0xffff8bd08b9c    28  ldr x3, [fp]
0xffff8bd08ba0    32  ldur x4, [x3, #-8]
0xffff8bd08ba4    36  movz x16, #0xe00000000
0xffff8bd08ba8    40  cmp x4, x16
0xffff8bd08bac    44  csel x4, fp, x3, ne
0xffff8bd08bb0    48  ldr x3, [x4, #16]
0xffff8bd08bb4    52  tbnz w3, #0, #+0xdc (addr 0xffff8bd08c90)
0xffff8bd08bb8    56  asr x5, x3, #32
0xffff8bd08bbc    60  movz w16, #0x257f
0xffff8bd08bc0    64  cmp w5, w16, lsl #3
0xffff8bd08bc4    68  b.hs #+0x17c (addr 0xffff8bd08d40)
0xffff8bd08bc8    72  cbz w5, #+0xc (addr 0xffff8bd08bd4)
0xffff8bd08bcc    76  mov x3, x5
0xffff8bd08bd0    80  b #+0xc (addr 0xffff8bd08bdc)
0xffff8bd08bd4    84  movz x3, #0x4
0xffff8bd08bd8    88  movz x5, #0x0
0xffff8bd08bdc    92  lsl x4, x3, #32
0xffff8bd08be0    96  lsl x5, x5, #32
0xffff8bd08be4   100  lsl w6, w3, #3
0xffff8bd08be8   104  add w6, w6, #0x10 (16)
0xffff8bd08bec   108  cmp w6, #0x96000 (614400)
0xffff8bd08bf0   112  b.hs #+0x158 (addr 0xffff8bd08d48)
0xffff8bd08bf4   116  add w0, w6, #0x20 (32)
0xffff8bd08bf8   120  sxtw x0, w0
0xffff8bd08bfc   124  movz x2, #0xe2c0
0xffff8bd08c00   128  movk x2, #0x2cb8, lsl #16
0xffff8bd08c04   132  ldp x7, x16, [x2]
0xffff8bd08c08   136  adds x6, x7, x0
0xffff8bd08c0c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd08c10   144  b.hi #+0xa8 (addr 0xffff8bd08cb8)
0xffff8bd08c14   148  str x6, [x2]
0xffff8bd08c18   152  orr x7, x7, #0x1
0xffff8bd08c1c   156  movz w0, #0x0
0xffff8bd08c20   160  stur x0, [x7, #31]
0xffff8bd08c24   164  ldur x0, [x1, #39]
0xffff8bd08c28   168  ldur x0, [x0, #39]
0xffff8bd08c2c   172  movz x16, #0x17f
0xffff8bd08c30   176  ldr x0, [x0, x16]
0xffff8bd08c34   180  stur x0, [x7, #-1]
0xffff8bd08c38   184  ldr x0, pc+208 (addr 0x0000ffff8bd08d08)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08c3c   188  stur x0, [x7, #7]
0xffff8bd08c40   192  ldr x0, pc+208 (addr 0x0000ffff8bd08d10)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08c44   196  stur x0, [x7, #15]
0xffff8bd08c48   200  stur x5, [x7, #23]
0xffff8bd08c4c   204  add x0, x7, #0x20 (32)
0xffff8bd08c50   208  ldr x1, pc+200 (addr 0x0000ffff8bd08d18)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd08c54   212  stur x1, [x0, #-1]
0xffff8bd08c58   216  stur x4, [x0, #7]
0xffff8bd08c5c   220  stur x0, [x7, #15]
0xffff8bd08c60   224  cmp w3, #0x0 (0)
0xffff8bd08c64   228  b.le #+0x18 (addr 0xffff8bd08c7c)
0xffff8bd08c68   232  sub w3, w3, #0x1 (1)
0xffff8bd08c6c   236  ldr x1, pc+180 (addr 0x0000ffff8bd08d20)    ;; object: 0x26c04519 <the hole>
0xffff8bd08c70   240  add x2, x0, #0xf (15)
0xffff8bd08c74   244  str x1, [x2, w3, sxtw #3]
0xffff8bd08c78   248  b #-0x18 (addr 0xffff8bd08c60)
0xffff8bd08c7c   252  mov x0, x7
0xffff8bd08c80   256  mov jssp, fp
0xffff8bd08c84   260  ldp fp, lr, [jssp], #16
0xffff8bd08c88   264  add jssp, jssp, #0x10 (16)
0xffff8bd08c8c   268  ret
0xffff8bd08c90   272  ldur x16, [x3, #-1]
0xffff8bd08c94   276  ldr x17, [x26, #120]
0xffff8bd08c98   280  cmp x16, x17
0xffff8bd08c9c   284  b.ne #+0xb4 (addr 0xffff8bd08d50)
0xffff8bd08ca0   288  ldur d29, [x3, #7]
0xffff8bd08ca4   292  fcvtzs w5, d29
0xffff8bd08ca8   296  scvtf d0, w5
0xffff8bd08cac   300  fcmp d29, d0
0xffff8bd08cb0   304  b.ne #+0xa0 (addr 0xffff8bd08d50)
0xffff8bd08cb4   308  b #-0xf8 (addr 0xffff8bd08bbc)
0xffff8bd08cb8   312  movz x7, #0x0
0xffff8bd08cbc   316  mov x16, lr
0xffff8bd08cc0   320  ldr x17, pc+104 (addr 0x0000ffff8bd08d28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd08cc4   324  blr x17
0xffff8bd08cc8   328  lsl x0, x0, #32
0xffff8bd08ccc   332  movz x10, #0x0
0xffff8bd08cd0   336  sub csp, jssp, #0x10 (16)
0xffff8bd08cd4   340  stp x10, x0, [jssp, #-16]!
0xffff8bd08cd8   344  movz x0, #0x2
0xffff8bd08cdc   348  movz x1, #0x5b88
0xffff8bd08ce0   352  movk x1, #0xe2, lsl #16
0xffff8bd08ce4   356  ldr x16, pc+76 (addr 0x0000ffff8bd08d30)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd08ce8   360  blr x16
0xffff8bd08cec   364  str x0, [jssp, #56]
0xffff8bd08cf0   368  ldr x16, pc+72 (addr 0x0000ffff8bd08d38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd08cf4   372  blr x16
0xffff8bd08cf8   376  b #-0xdc (addr 0xffff8bd08c1c)
0xffff8bd08cfc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd08d00   384  d63f03e0       constant
0xffff8bd08d04   388  d503201f       constant
0xffff8bd08d08   392  26c04201       constant
0xffff8bd08d0c   396  00000000       constant
0xffff8bd08d10   400  26c04201       constant
0xffff8bd08d14   404  00000000       constant
0xffff8bd08d18   408  5f504259       constant
0xffff8bd08d1c   412  00000000       constant
0xffff8bd08d20   416  26c04519       constant
0xffff8bd08d24   420  00000000       constant
0xffff8bd08d28   424  8bd06820       constant
0xffff8bd08d2c   428  0000ffff       constant
0xffff8bd08d30   432  8bd06260       constant
0xffff8bd08d34   436  0000ffff       constant
0xffff8bd08d38   440  8bd068e0       constant
0xffff8bd08d3c   444  0000ffff       constant
0xffff8bd08d40   448  movz x16, #0x0
0xffff8bd08d44   452  bl #+0x14 (addr 0xffff8bd08d58)
0xffff8bd08d48   456  movz x16, #0x8
0xffff8bd08d4c   460  bl #+0xc (addr 0xffff8bd08d58)
0xffff8bd08d50   464  movz x16, #0x10
0xffff8bd08d54   468  bl #+0x4 (addr 0xffff8bd08d58)
0xffff8bd08d58   472  ldr x17, pc+24 (addr 0x0000ffff8bd08d70)    ;; lazy deoptimization bailout 0
0xffff8bd08d5c   476  add x17, x17, x16
0xffff8bd08d60   480  br x17
0xffff8bd08d64   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd08d68   488  d63f03e0       constant
0xffff8bd08d6c   492  d503201f       constant
0xffff8bd08d70   496  8bb06000       constant
0xffff8bd08d74   500  0000ffff       constant


Safepoints (size = 21)
0xffff8bd08cec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd08c38  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08c40  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08c50  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd08c6c  embedded object  (0x26c04519 <the hole>)
0xffff8bd08cc0  code target (STUB)  (0xffff8bd06820)
0xffff8bd08ce4  code target (STUB)  (0xffff8bd06260)
0xffff8bd08cf0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd08cfc  constant pool (size 68)
0xffff8bd08d58  runtime entry
0xffff8bd08d64  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_HOLEY_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 525)
0xffff8bd08b80     0  movz x16, #0xa00000000
0xffff8bd08b84     4  sub csp, jssp, #0x10 (16)
0xffff8bd08b88     8  stp fp, lr, [jssp, #-16]!
0xffff8bd08b8c    12  mov fp, jssp
0xffff8bd08b90    16  sub csp, jssp, #0x8 (8)
0xffff8bd08b94    20  sub jssp, jssp, #0x8 (8)
0xffff8bd08b98    24  stur x16, [fp, #-8]
0xffff8bd08b9c    28  ldr x3, [fp]
0xffff8bd08ba0    32  ldur x4, [x3, #-8]
0xffff8bd08ba4    36  movz x16, #0xe00000000
0xffff8bd08ba8    40  cmp x4, x16
0xffff8bd08bac    44  csel x4, fp, x3, ne
0xffff8bd08bb0    48  ldr x3, [x4, #16]
0xffff8bd08bb4    52  tbnz w3, #0, #+0xdc (addr 0xffff8bd08c90)
0xffff8bd08bb8    56  asr x5, x3, #32
0xffff8bd08bbc    60  movz w16, #0x257f
0xffff8bd08bc0    64  cmp w5, w16, lsl #3
0xffff8bd08bc4    68  b.hs #+0x17c (addr 0xffff8bd08d40)
0xffff8bd08bc8    72  cbz w5, #+0xc (addr 0xffff8bd08bd4)
0xffff8bd08bcc    76  mov x3, x5
0xffff8bd08bd0    80  b #+0xc (addr 0xffff8bd08bdc)
0xffff8bd08bd4    84  movz x3, #0x4
0xffff8bd08bd8    88  movz x5, #0x0
0xffff8bd08bdc    92  lsl x4, x3, #32
0xffff8bd08be0    96  lsl x5, x5, #32
0xffff8bd08be4   100  lsl w6, w3, #3
0xffff8bd08be8   104  add w6, w6, #0x10 (16)
0xffff8bd08bec   108  cmp w6, #0x96000 (614400)
0xffff8bd08bf0   112  b.hs #+0x158 (addr 0xffff8bd08d48)
0xffff8bd08bf4   116  add w0, w6, #0x20 (32)
0xffff8bd08bf8   120  sxtw x0, w0
0xffff8bd08bfc   124  movz x2, #0xe2c0
0xffff8bd08c00   128  movk x2, #0x2cb8, lsl #16
0xffff8bd08c04   132  ldp x7, x16, [x2]
0xffff8bd08c08   136  adds x6, x7, x0
0xffff8bd08c0c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd08c10   144  b.hi #+0xa8 (addr 0xffff8bd08cb8)
0xffff8bd08c14   148  str x6, [x2]
0xffff8bd08c18   152  orr x7, x7, #0x1
0xffff8bd08c1c   156  movz w0, #0x0
0xffff8bd08c20   160  stur x0, [x7, #31]
0xffff8bd08c24   164  ldur x0, [x1, #39]
0xffff8bd08c28   168  ldur x0, [x0, #39]
0xffff8bd08c2c   172  movz x16, #0x17f
0xffff8bd08c30   176  ldr x0, [x0, x16]
0xffff8bd08c34   180  stur x0, [x7, #-1]
0xffff8bd08c38   184  ldr x0, pc+208 (addr 0x0000ffff8bd08d08)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08c3c   188  stur x0, [x7, #7]
0xffff8bd08c40   192  ldr x0, pc+208 (addr 0x0000ffff8bd08d10)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08c44   196  stur x0, [x7, #15]
0xffff8bd08c48   200  stur x5, [x7, #23]
0xffff8bd08c4c   204  add x0, x7, #0x20 (32)
0xffff8bd08c50   208  ldr x1, pc+200 (addr 0x0000ffff8bd08d18)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd08c54   212  stur x1, [x0, #-1]
0xffff8bd08c58   216  stur x4, [x0, #7]
0xffff8bd08c5c   220  stur x0, [x7, #15]
0xffff8bd08c60   224  cmp w3, #0x0 (0)
0xffff8bd08c64   228  b.le #+0x18 (addr 0xffff8bd08c7c)
0xffff8bd08c68   232  sub w3, w3, #0x1 (1)
0xffff8bd08c6c   236  ldr x1, pc+180 (addr 0x0000ffff8bd08d20)    ;; object: 0x26c04519 <the hole>
0xffff8bd08c70   240  add x2, x0, #0xf (15)
0xffff8bd08c74   244  str x1, [x2, w3, sxtw #3]
0xffff8bd08c78   248  b #-0x18 (addr 0xffff8bd08c60)
0xffff8bd08c7c   252  mov x0, x7
0xffff8bd08c80   256  mov jssp, fp
0xffff8bd08c84   260  ldp fp, lr, [jssp], #16
0xffff8bd08c88   264  add jssp, jssp, #0x10 (16)
0xffff8bd08c8c   268  ret
0xffff8bd08c90   272  ldur x16, [x3, #-1]
0xffff8bd08c94   276  ldr x17, [x26, #120]
0xffff8bd08c98   280  cmp x16, x17
0xffff8bd08c9c   284  b.ne #+0xb4 (addr 0xffff8bd08d50)
0xffff8bd08ca0   288  ldur d29, [x3, #7]
0xffff8bd08ca4   292  fcvtzs w5, d29
0xffff8bd08ca8   296  scvtf d0, w5
0xffff8bd08cac   300  fcmp d29, d0
0xffff8bd08cb0   304  b.ne #+0xa0 (addr 0xffff8bd08d50)
0xffff8bd08cb4   308  b #-0xf8 (addr 0xffff8bd08bbc)
0xffff8bd08cb8   312  movz x7, #0x0
0xffff8bd08cbc   316  mov x16, lr
0xffff8bd08cc0   320  ldr x17, pc+104 (addr 0x0000ffff8bd08d28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd08cc4   324  blr x17
0xffff8bd08cc8   328  lsl x0, x0, #32
0xffff8bd08ccc   332  movz x10, #0x0
0xffff8bd08cd0   336  sub csp, jssp, #0x10 (16)
0xffff8bd08cd4   340  stp x10, x0, [jssp, #-16]!
0xffff8bd08cd8   344  movz x0, #0x2
0xffff8bd08cdc   348  movz x1, #0x5b88
0xffff8bd08ce0   352  movk x1, #0xe2, lsl #16
0xffff8bd08ce4   356  ldr x16, pc+76 (addr 0x0000ffff8bd08d30)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd08ce8   360  blr x16
0xffff8bd08cec   364  str x0, [jssp, #56]
0xffff8bd08cf0   368  ldr x16, pc+72 (addr 0x0000ffff8bd08d38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd08cf4   372  blr x16
0xffff8bd08cf8   376  b #-0xdc (addr 0xffff8bd08c1c)
0xffff8bd08cfc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd08d00   384  d63f03e0       constant
0xffff8bd08d04   388  d503201f       constant
0xffff8bd08d08   392  26c04201       constant
0xffff8bd08d0c   396  00000000       constant
0xffff8bd08d10   400  26c04201       constant
0xffff8bd08d14   404  00000000       constant
0xffff8bd08d18   408  5f504259       constant
0xffff8bd08d1c   412  00000000       constant
0xffff8bd08d20   416  26c04519       constant
0xffff8bd08d24   420  00000000       constant
0xffff8bd08d28   424  8bd06820       constant
0xffff8bd08d2c   428  0000ffff       constant
0xffff8bd08d30   432  8bd06260       constant
0xffff8bd08d34   436  0000ffff       constant
0xffff8bd08d38   440  8bd068e0       constant
0xffff8bd08d3c   444  0000ffff       constant
0xffff8bd08d40   448  movz x16, #0x0
0xffff8bd08d44   452  bl #+0x14 (addr 0xffff8bd08d58)
0xffff8bd08d48   456  movz x16, #0x8
0xffff8bd08d4c   460  bl #+0xc (addr 0xffff8bd08d58)
0xffff8bd08d50   464  movz x16, #0x10
0xffff8bd08d54   468  bl #+0x4 (addr 0xffff8bd08d58)
0xffff8bd08d58   472  ldr x17, pc+24 (addr 0x0000ffff8bd08d70)    ;; lazy deoptimization bailout 0
0xffff8bd08d5c   476  add x17, x17, x16
0xffff8bd08d60   480  br x17
0xffff8bd08d64   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd08d68   488  d63f03e0       constant
0xffff8bd08d6c   492  d503201f       constant
0xffff8bd08d70   496  8bb06000       constant
0xffff8bd08d74   500  0000ffff       constant


Safepoints (size = 21)
0xffff8bd08cec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd08c38  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08c40  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08c50  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd08c6c  embedded object  (0x26c04519 <the hole>)
0xffff8bd08cc0  code target (STUB)  (0xffff8bd06820)
0xffff8bd08ce4  code target (STUB)  (0xffff8bd06260)
0xffff8bd08cf0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd08cfc  constant pool (size 68)
0xffff8bd08d58  runtime entry
0xffff8bd08d64  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 525)
0xffff8bd08e00     0  movz x16, #0xa00000000
0xffff8bd08e04     4  sub csp, jssp, #0x10 (16)
0xffff8bd08e08     8  stp fp, lr, [jssp, #-16]!
0xffff8bd08e0c    12  mov fp, jssp
0xffff8bd08e10    16  sub csp, jssp, #0x8 (8)
0xffff8bd08e14    20  sub jssp, jssp, #0x8 (8)
0xffff8bd08e18    24  stur x16, [fp, #-8]
0xffff8bd08e1c    28  ldr x3, [fp]
0xffff8bd08e20    32  ldur x4, [x3, #-8]
0xffff8bd08e24    36  movz x16, #0xe00000000
0xffff8bd08e28    40  cmp x4, x16
0xffff8bd08e2c    44  csel x4, fp, x3, ne
0xffff8bd08e30    48  ldr x3, [x4, #16]
0xffff8bd08e34    52  tbnz w3, #0, #+0xdc (addr 0xffff8bd08f10)
0xffff8bd08e38    56  asr x5, x3, #32
0xffff8bd08e3c    60  movz w16, #0x257f
0xffff8bd08e40    64  cmp w5, w16, lsl #3
0xffff8bd08e44    68  b.hs #+0x17c (addr 0xffff8bd08fc0)
0xffff8bd08e48    72  cbz w5, #+0xc (addr 0xffff8bd08e54)
0xffff8bd08e4c    76  mov x3, x5
0xffff8bd08e50    80  b #+0xc (addr 0xffff8bd08e5c)
0xffff8bd08e54    84  movz x3, #0x4
0xffff8bd08e58    88  movz x5, #0x0
0xffff8bd08e5c    92  lsl x4, x3, #32
0xffff8bd08e60    96  lsl x5, x5, #32
0xffff8bd08e64   100  lsl w6, w3, #3
0xffff8bd08e68   104  add w6, w6, #0x10 (16)
0xffff8bd08e6c   108  cmp w6, #0x96000 (614400)
0xffff8bd08e70   112  b.hs #+0x158 (addr 0xffff8bd08fc8)
0xffff8bd08e74   116  add w0, w6, #0x20 (32)
0xffff8bd08e78   120  sxtw x0, w0
0xffff8bd08e7c   124  movz x2, #0xe2c0
0xffff8bd08e80   128  movk x2, #0x2cb8, lsl #16
0xffff8bd08e84   132  ldp x7, x16, [x2]
0xffff8bd08e88   136  adds x6, x7, x0
0xffff8bd08e8c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd08e90   144  b.hi #+0xa8 (addr 0xffff8bd08f38)
0xffff8bd08e94   148  str x6, [x2]
0xffff8bd08e98   152  orr x7, x7, #0x1
0xffff8bd08e9c   156  movz w0, #0x0
0xffff8bd08ea0   160  stur x0, [x7, #31]
0xffff8bd08ea4   164  ldur x0, [x1, #39]
0xffff8bd08ea8   168  ldur x0, [x0, #39]
0xffff8bd08eac   172  movz x16, #0x197
0xffff8bd08eb0   176  ldr x0, [x0, x16]
0xffff8bd08eb4   180  stur x0, [x7, #-1]
0xffff8bd08eb8   184  ldr x0, pc+216 (addr 0x0000ffff8bd08f90)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08ebc   188  stur x0, [x7, #7]
0xffff8bd08ec0   192  ldr x0, pc+216 (addr 0x0000ffff8bd08f98)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08ec4   196  stur x0, [x7, #15]
0xffff8bd08ec8   200  stur x5, [x7, #23]
0xffff8bd08ecc   204  add x0, x7, #0x20 (32)
0xffff8bd08ed0   208  ldr x1, pc+208 (addr 0x0000ffff8bd08fa0)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd08ed4   212  stur x1, [x0, #-1]
0xffff8bd08ed8   216  stur x4, [x0, #7]
0xffff8bd08edc   220  stur x0, [x7, #15]
0xffff8bd08ee0   224  ldr d0, pc+168 (addr 0x0000ffff8bd08f88)
0xffff8bd08ee4   228  cmp w3, #0x0 (0)
0xffff8bd08ee8   232  b.le #+0x14 (addr 0xffff8bd08efc)
0xffff8bd08eec   236  sub w3, w3, #0x1 (1)
0xffff8bd08ef0   240  add x1, x0, #0xf (15)
0xffff8bd08ef4   244  str d0, [x1, w3, sxtw #3]
0xffff8bd08ef8   248  b #-0x14 (addr 0xffff8bd08ee4)
0xffff8bd08efc   252  mov x0, x7
0xffff8bd08f00   256  mov jssp, fp
0xffff8bd08f04   260  ldp fp, lr, [jssp], #16
0xffff8bd08f08   264  add jssp, jssp, #0x10 (16)
0xffff8bd08f0c   268  ret
0xffff8bd08f10   272  ldur x16, [x3, #-1]
0xffff8bd08f14   276  ldr x17, [x26, #120]
0xffff8bd08f18   280  cmp x16, x17
0xffff8bd08f1c   284  b.ne #+0xb4 (addr 0xffff8bd08fd0)
0xffff8bd08f20   288  ldur d29, [x3, #7]
0xffff8bd08f24   292  fcvtzs w5, d29
0xffff8bd08f28   296  scvtf d0, w5
0xffff8bd08f2c   300  fcmp d29, d0
0xffff8bd08f30   304  b.ne #+0xa0 (addr 0xffff8bd08fd0)
0xffff8bd08f34   308  b #-0xf8 (addr 0xffff8bd08e3c)
0xffff8bd08f38   312  movz x7, #0x0
0xffff8bd08f3c   316  mov x16, lr
0xffff8bd08f40   320  ldr x17, pc+104 (addr 0x0000ffff8bd08fa8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd08f44   324  blr x17
0xffff8bd08f48   328  lsl x0, x0, #32
0xffff8bd08f4c   332  movz x10, #0x100000000
0xffff8bd08f50   336  sub csp, jssp, #0x10 (16)
0xffff8bd08f54   340  stp x10, x0, [jssp, #-16]!
0xffff8bd08f58   344  movz x0, #0x2
0xffff8bd08f5c   348  movz x1, #0x5b88
0xffff8bd08f60   352  movk x1, #0xe2, lsl #16
0xffff8bd08f64   356  ldr x16, pc+76 (addr 0x0000ffff8bd08fb0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd08f68   360  blr x16
0xffff8bd08f6c   364  str x0, [jssp, #56]
0xffff8bd08f70   368  ldr x16, pc+72 (addr 0x0000ffff8bd08fb8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd08f74   372  blr x16
0xffff8bd08f78   376  b #-0xdc (addr 0xffff8bd08e9c)
0xffff8bd08f7c   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd08f80   384  d63f03e0       constant
0xffff8bd08f84   388  d503201f       constant
0xffff8bd08f88   392  fff7ffff       constant
0xffff8bd08f8c   396  fff7ffff       constant
0xffff8bd08f90   400  26c04201       constant
0xffff8bd08f94   404  00000000       constant
0xffff8bd08f98   408  26c04201       constant
0xffff8bd08f9c   412  00000000       constant
0xffff8bd08fa0   416  5f5052d9       constant
0xffff8bd08fa4   420  00000000       constant
0xffff8bd08fa8   424  8bd06820       constant
0xffff8bd08fac   428  0000ffff       constant
0xffff8bd08fb0   432  8bd06260       constant
0xffff8bd08fb4   436  0000ffff       constant
0xffff8bd08fb8   440  8bd068e0       constant
0xffff8bd08fbc   444  0000ffff       constant
0xffff8bd08fc0   448  movz x16, #0x0
0xffff8bd08fc4   452  bl #+0x14 (addr 0xffff8bd08fd8)
0xffff8bd08fc8   456  movz x16, #0x8
0xffff8bd08fcc   460  bl #+0xc (addr 0xffff8bd08fd8)
0xffff8bd08fd0   464  movz x16, #0x10
0xffff8bd08fd4   468  bl #+0x4 (addr 0xffff8bd08fd8)
0xffff8bd08fd8   472  ldr x17, pc+24 (addr 0x0000ffff8bd08ff0)    ;; lazy deoptimization bailout 0
0xffff8bd08fdc   476  add x17, x17, x16
0xffff8bd08fe0   480  br x17
0xffff8bd08fe4   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd08fe8   488  d63f03e0       constant
0xffff8bd08fec   492  d503201f       constant
0xffff8bd08ff0   496  8bb06000       constant
0xffff8bd08ff4   500  0000ffff       constant


Safepoints (size = 21)
0xffff8bd08f6c   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd08eb8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08ec0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08ed0  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd08f40  code target (STUB)  (0xffff8bd06820)
0xffff8bd08f64  code target (STUB)  (0xffff8bd06260)
0xffff8bd08f70  code target (STUB)  (0xffff8bd068e0)
0xffff8bd08f7c  constant pool (size 68)
0xffff8bd08fd8  runtime entry
0xffff8bd08fe4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 525)
0xffff8bd08e00     0  movz x16, #0xa00000000
0xffff8bd08e04     4  sub csp, jssp, #0x10 (16)
0xffff8bd08e08     8  stp fp, lr, [jssp, #-16]!
0xffff8bd08e0c    12  mov fp, jssp
0xffff8bd08e10    16  sub csp, jssp, #0x8 (8)
0xffff8bd08e14    20  sub jssp, jssp, #0x8 (8)
0xffff8bd08e18    24  stur x16, [fp, #-8]
0xffff8bd08e1c    28  ldr x3, [fp]
0xffff8bd08e20    32  ldur x4, [x3, #-8]
0xffff8bd08e24    36  movz x16, #0xe00000000
0xffff8bd08e28    40  cmp x4, x16
0xffff8bd08e2c    44  csel x4, fp, x3, ne
0xffff8bd08e30    48  ldr x3, [x4, #16]
0xffff8bd08e34    52  tbnz w3, #0, #+0xdc (addr 0xffff8bd08f10)
0xffff8bd08e38    56  asr x5, x3, #32
0xffff8bd08e3c    60  movz w16, #0x257f
0xffff8bd08e40    64  cmp w5, w16, lsl #3
0xffff8bd08e44    68  b.hs #+0x17c (addr 0xffff8bd08fc0)
0xffff8bd08e48    72  cbz w5, #+0xc (addr 0xffff8bd08e54)
0xffff8bd08e4c    76  mov x3, x5
0xffff8bd08e50    80  b #+0xc (addr 0xffff8bd08e5c)
0xffff8bd08e54    84  movz x3, #0x4
0xffff8bd08e58    88  movz x5, #0x0
0xffff8bd08e5c    92  lsl x4, x3, #32
0xffff8bd08e60    96  lsl x5, x5, #32
0xffff8bd08e64   100  lsl w6, w3, #3
0xffff8bd08e68   104  add w6, w6, #0x10 (16)
0xffff8bd08e6c   108  cmp w6, #0x96000 (614400)
0xffff8bd08e70   112  b.hs #+0x158 (addr 0xffff8bd08fc8)
0xffff8bd08e74   116  add w0, w6, #0x20 (32)
0xffff8bd08e78   120  sxtw x0, w0
0xffff8bd08e7c   124  movz x2, #0xe2c0
0xffff8bd08e80   128  movk x2, #0x2cb8, lsl #16
0xffff8bd08e84   132  ldp x7, x16, [x2]
0xffff8bd08e88   136  adds x6, x7, x0
0xffff8bd08e8c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd08e90   144  b.hi #+0xa8 (addr 0xffff8bd08f38)
0xffff8bd08e94   148  str x6, [x2]
0xffff8bd08e98   152  orr x7, x7, #0x1
0xffff8bd08e9c   156  movz w0, #0x0
0xffff8bd08ea0   160  stur x0, [x7, #31]
0xffff8bd08ea4   164  ldur x0, [x1, #39]
0xffff8bd08ea8   168  ldur x0, [x0, #39]
0xffff8bd08eac   172  movz x16, #0x197
0xffff8bd08eb0   176  ldr x0, [x0, x16]
0xffff8bd08eb4   180  stur x0, [x7, #-1]
0xffff8bd08eb8   184  ldr x0, pc+216 (addr 0x0000ffff8bd08f90)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08ebc   188  stur x0, [x7, #7]
0xffff8bd08ec0   192  ldr x0, pc+216 (addr 0x0000ffff8bd08f98)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd08ec4   196  stur x0, [x7, #15]
0xffff8bd08ec8   200  stur x5, [x7, #23]
0xffff8bd08ecc   204  add x0, x7, #0x20 (32)
0xffff8bd08ed0   208  ldr x1, pc+208 (addr 0x0000ffff8bd08fa0)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd08ed4   212  stur x1, [x0, #-1]
0xffff8bd08ed8   216  stur x4, [x0, #7]
0xffff8bd08edc   220  stur x0, [x7, #15]
0xffff8bd08ee0   224  ldr d0, pc+168 (addr 0x0000ffff8bd08f88)
0xffff8bd08ee4   228  cmp w3, #0x0 (0)
0xffff8bd08ee8   232  b.le #+0x14 (addr 0xffff8bd08efc)
0xffff8bd08eec   236  sub w3, w3, #0x1 (1)
0xffff8bd08ef0   240  add x1, x0, #0xf (15)
0xffff8bd08ef4   244  str d0, [x1, w3, sxtw #3]
0xffff8bd08ef8   248  b #-0x14 (addr 0xffff8bd08ee4)
0xffff8bd08efc   252  mov x0, x7
0xffff8bd08f00   256  mov jssp, fp
0xffff8bd08f04   260  ldp fp, lr, [jssp], #16
0xffff8bd08f08   264  add jssp, jssp, #0x10 (16)
0xffff8bd08f0c   268  ret
0xffff8bd08f10   272  ldur x16, [x3, #-1]
0xffff8bd08f14   276  ldr x17, [x26, #120]
0xffff8bd08f18   280  cmp x16, x17
0xffff8bd08f1c   284  b.ne #+0xb4 (addr 0xffff8bd08fd0)
0xffff8bd08f20   288  ldur d29, [x3, #7]
0xffff8bd08f24   292  fcvtzs w5, d29
0xffff8bd08f28   296  scvtf d0, w5
0xffff8bd08f2c   300  fcmp d29, d0
0xffff8bd08f30   304  b.ne #+0xa0 (addr 0xffff8bd08fd0)
0xffff8bd08f34   308  b #-0xf8 (addr 0xffff8bd08e3c)
0xffff8bd08f38   312  movz x7, #0x0
0xffff8bd08f3c   316  mov x16, lr
0xffff8bd08f40   320  ldr x17, pc+104 (addr 0x0000ffff8bd08fa8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd08f44   324  blr x17
0xffff8bd08f48   328  lsl x0, x0, #32
0xffff8bd08f4c   332  movz x10, #0x100000000
0xffff8bd08f50   336  sub csp, jssp, #0x10 (16)
0xffff8bd08f54   340  stp x10, x0, [jssp, #-16]!
0xffff8bd08f58   344  movz x0, #0x2
0xffff8bd08f5c   348  movz x1, #0x5b88
0xffff8bd08f60   352  movk x1, #0xe2, lsl #16
0xffff8bd08f64   356  ldr x16, pc+76 (addr 0x0000ffff8bd08fb0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd08f68   360  blr x16
0xffff8bd08f6c   364  str x0, [jssp, #56]
0xffff8bd08f70   368  ldr x16, pc+72 (addr 0x0000ffff8bd08fb8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd08f74   372  blr x16
0xffff8bd08f78   376  b #-0xdc (addr 0xffff8bd08e9c)
0xffff8bd08f7c   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd08f80   384  d63f03e0       constant
0xffff8bd08f84   388  d503201f       constant
0xffff8bd08f88   392  fff7ffff       constant
0xffff8bd08f8c   396  fff7ffff       constant
0xffff8bd08f90   400  26c04201       constant
0xffff8bd08f94   404  00000000       constant
0xffff8bd08f98   408  26c04201       constant
0xffff8bd08f9c   412  00000000       constant
0xffff8bd08fa0   416  5f5052d9       constant
0xffff8bd08fa4   420  00000000       constant
0xffff8bd08fa8   424  8bd06820       constant
0xffff8bd08fac   428  0000ffff       constant
0xffff8bd08fb0   432  8bd06260       constant
0xffff8bd08fb4   436  0000ffff       constant
0xffff8bd08fb8   440  8bd068e0       constant
0xffff8bd08fbc   444  0000ffff       constant
0xffff8bd08fc0   448  movz x16, #0x0
0xffff8bd08fc4   452  bl #+0x14 (addr 0xffff8bd08fd8)
0xffff8bd08fc8   456  movz x16, #0x8
0xffff8bd08fcc   460  bl #+0xc (addr 0xffff8bd08fd8)
0xffff8bd08fd0   464  movz x16, #0x10
0xffff8bd08fd4   468  bl #+0x4 (addr 0xffff8bd08fd8)
0xffff8bd08fd8   472  ldr x17, pc+24 (addr 0x0000ffff8bd08ff0)    ;; lazy deoptimization bailout 0
0xffff8bd08fdc   476  add x17, x17, x16
0xffff8bd08fe0   480  br x17
0xffff8bd08fe4   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd08fe8   488  d63f03e0       constant
0xffff8bd08fec   492  d503201f       constant
0xffff8bd08ff0   496  8bb06000       constant
0xffff8bd08ff4   500  0000ffff       constant


Safepoints (size = 21)
0xffff8bd08f6c   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd08eb8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08ec0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd08ed0  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd08f40  code target (STUB)  (0xffff8bd06820)
0xffff8bd08f64  code target (STUB)  (0xffff8bd06260)
0xffff8bd08f70  code target (STUB)  (0xffff8bd068e0)
0xffff8bd08f7c  constant pool (size 68)
0xffff8bd08fd8  runtime entry
0xffff8bd08fe4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 525)
0xffff8bd09080     0  movz x16, #0xa00000000
0xffff8bd09084     4  sub csp, jssp, #0x10 (16)
0xffff8bd09088     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0908c    12  mov fp, jssp
0xffff8bd09090    16  sub csp, jssp, #0x8 (8)
0xffff8bd09094    20  sub jssp, jssp, #0x8 (8)
0xffff8bd09098    24  stur x16, [fp, #-8]
0xffff8bd0909c    28  ldr x3, [fp]
0xffff8bd090a0    32  ldur x4, [x3, #-8]
0xffff8bd090a4    36  movz x16, #0xe00000000
0xffff8bd090a8    40  cmp x4, x16
0xffff8bd090ac    44  csel x4, fp, x3, ne
0xffff8bd090b0    48  ldr x3, [x4, #16]
0xffff8bd090b4    52  tbnz w3, #0, #+0xdc (addr 0xffff8bd09190)
0xffff8bd090b8    56  asr x5, x3, #32
0xffff8bd090bc    60  movz w16, #0x257f
0xffff8bd090c0    64  cmp w5, w16, lsl #3
0xffff8bd090c4    68  b.hs #+0x17c (addr 0xffff8bd09240)
0xffff8bd090c8    72  cbz w5, #+0xc (addr 0xffff8bd090d4)
0xffff8bd090cc    76  mov x3, x5
0xffff8bd090d0    80  b #+0xc (addr 0xffff8bd090dc)
0xffff8bd090d4    84  movz x3, #0x4
0xffff8bd090d8    88  movz x5, #0x0
0xffff8bd090dc    92  lsl x4, x3, #32
0xffff8bd090e0    96  lsl x5, x5, #32
0xffff8bd090e4   100  lsl w6, w3, #3
0xffff8bd090e8   104  add w6, w6, #0x10 (16)
0xffff8bd090ec   108  cmp w6, #0x96000 (614400)
0xffff8bd090f0   112  b.hs #+0x158 (addr 0xffff8bd09248)
0xffff8bd090f4   116  add w0, w6, #0x20 (32)
0xffff8bd090f8   120  sxtw x0, w0
0xffff8bd090fc   124  movz x2, #0xe2c0
0xffff8bd09100   128  movk x2, #0x2cb8, lsl #16
0xffff8bd09104   132  ldp x7, x16, [x2]
0xffff8bd09108   136  adds x6, x7, x0
0xffff8bd0910c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd09110   144  b.hi #+0xa8 (addr 0xffff8bd091b8)
0xffff8bd09114   148  str x6, [x2]
0xffff8bd09118   152  orr x7, x7, #0x1
0xffff8bd0911c   156  movz w0, #0x0
0xffff8bd09120   160  stur x0, [x7, #31]
0xffff8bd09124   164  ldur x0, [x1, #39]
0xffff8bd09128   168  ldur x0, [x0, #39]
0xffff8bd0912c   172  movz x16, #0x19f
0xffff8bd09130   176  ldr x0, [x0, x16]
0xffff8bd09134   180  stur x0, [x7, #-1]
0xffff8bd09138   184  ldr x0, pc+216 (addr 0x0000ffff8bd09210)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0913c   188  stur x0, [x7, #7]
0xffff8bd09140   192  ldr x0, pc+216 (addr 0x0000ffff8bd09218)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd09144   196  stur x0, [x7, #15]
0xffff8bd09148   200  stur x5, [x7, #23]
0xffff8bd0914c   204  add x0, x7, #0x20 (32)
0xffff8bd09150   208  ldr x1, pc+208 (addr 0x0000ffff8bd09220)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd09154   212  stur x1, [x0, #-1]
0xffff8bd09158   216  stur x4, [x0, #7]
0xffff8bd0915c   220  stur x0, [x7, #15]
0xffff8bd09160   224  ldr d0, pc+168 (addr 0x0000ffff8bd09208)
0xffff8bd09164   228  cmp w3, #0x0 (0)
0xffff8bd09168   232  b.le #+0x14 (addr 0xffff8bd0917c)
0xffff8bd0916c   236  sub w3, w3, #0x1 (1)
0xffff8bd09170   240  add x1, x0, #0xf (15)
0xffff8bd09174   244  str d0, [x1, w3, sxtw #3]
0xffff8bd09178   248  b #-0x14 (addr 0xffff8bd09164)
0xffff8bd0917c   252  mov x0, x7
0xffff8bd09180   256  mov jssp, fp
0xffff8bd09184   260  ldp fp, lr, [jssp], #16
0xffff8bd09188   264  add jssp, jssp, #0x10 (16)
0xffff8bd0918c   268  ret
0xffff8bd09190   272  ldur x16, [x3, #-1]
0xffff8bd09194   276  ldr x17, [x26, #120]
0xffff8bd09198   280  cmp x16, x17
0xffff8bd0919c   284  b.ne #+0xb4 (addr 0xffff8bd09250)
0xffff8bd091a0   288  ldur d29, [x3, #7]
0xffff8bd091a4   292  fcvtzs w5, d29
0xffff8bd091a8   296  scvtf d0, w5
0xffff8bd091ac   300  fcmp d29, d0
0xffff8bd091b0   304  b.ne #+0xa0 (addr 0xffff8bd09250)
0xffff8bd091b4   308  b #-0xf8 (addr 0xffff8bd090bc)
0xffff8bd091b8   312  movz x7, #0x0
0xffff8bd091bc   316  mov x16, lr
0xffff8bd091c0   320  ldr x17, pc+104 (addr 0x0000ffff8bd09228)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd091c4   324  blr x17
0xffff8bd091c8   328  lsl x0, x0, #32
0xffff8bd091cc   332  movz x10, #0x100000000
0xffff8bd091d0   336  sub csp, jssp, #0x10 (16)
0xffff8bd091d4   340  stp x10, x0, [jssp, #-16]!
0xffff8bd091d8   344  movz x0, #0x2
0xffff8bd091dc   348  movz x1, #0x5b88
0xffff8bd091e0   352  movk x1, #0xe2, lsl #16
0xffff8bd091e4   356  ldr x16, pc+76 (addr 0x0000ffff8bd09230)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd091e8   360  blr x16
0xffff8bd091ec   364  str x0, [jssp, #56]
0xffff8bd091f0   368  ldr x16, pc+72 (addr 0x0000ffff8bd09238)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd091f4   372  blr x16
0xffff8bd091f8   376  b #-0xdc (addr 0xffff8bd0911c)
0xffff8bd091fc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd09200   384  d63f03e0       constant
0xffff8bd09204   388  d503201f       constant
0xffff8bd09208   392  fff7ffff       constant
0xffff8bd0920c   396  fff7ffff       constant
0xffff8bd09210   400  26c04201       constant
0xffff8bd09214   404  00000000       constant
0xffff8bd09218   408  26c04201       constant
0xffff8bd0921c   412  00000000       constant
0xffff8bd09220   416  5f5052d9       constant
0xffff8bd09224   420  00000000       constant
0xffff8bd09228   424  8bd06820       constant
0xffff8bd0922c   428  0000ffff       constant
0xffff8bd09230   432  8bd06260       constant
0xffff8bd09234   436  0000ffff       constant
0xffff8bd09238   440  8bd068e0       constant
0xffff8bd0923c   444  0000ffff       constant
0xffff8bd09240   448  movz x16, #0x0
0xffff8bd09244   452  bl #+0x14 (addr 0xffff8bd09258)
0xffff8bd09248   456  movz x16, #0x8
0xffff8bd0924c   460  bl #+0xc (addr 0xffff8bd09258)
0xffff8bd09250   464  movz x16, #0x10
0xffff8bd09254   468  bl #+0x4 (addr 0xffff8bd09258)
0xffff8bd09258   472  ldr x17, pc+24 (addr 0x0000ffff8bd09270)    ;; lazy deoptimization bailout 0
0xffff8bd0925c   476  add x17, x17, x16
0xffff8bd09260   480  br x17
0xffff8bd09264   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd09268   488  d63f03e0       constant
0xffff8bd0926c   492  d503201f       constant
0xffff8bd09270   496  8bb06000       constant
0xffff8bd09274   500  0000ffff       constant


Safepoints (size = 21)
0xffff8bd091ec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd09138  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd09140  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd09150  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd091c0  code target (STUB)  (0xffff8bd06820)
0xffff8bd091e4  code target (STUB)  (0xffff8bd06260)
0xffff8bd091f0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd091fc  constant pool (size 68)
0xffff8bd09258  runtime entry
0xffff8bd09264  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_HOLEY_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 525)
0xffff8bd09080     0  movz x16, #0xa00000000
0xffff8bd09084     4  sub csp, jssp, #0x10 (16)
0xffff8bd09088     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0908c    12  mov fp, jssp
0xffff8bd09090    16  sub csp, jssp, #0x8 (8)
0xffff8bd09094    20  sub jssp, jssp, #0x8 (8)
0xffff8bd09098    24  stur x16, [fp, #-8]
0xffff8bd0909c    28  ldr x3, [fp]
0xffff8bd090a0    32  ldur x4, [x3, #-8]
0xffff8bd090a4    36  movz x16, #0xe00000000
0xffff8bd090a8    40  cmp x4, x16
0xffff8bd090ac    44  csel x4, fp, x3, ne
0xffff8bd090b0    48  ldr x3, [x4, #16]
0xffff8bd090b4    52  tbnz w3, #0, #+0xdc (addr 0xffff8bd09190)
0xffff8bd090b8    56  asr x5, x3, #32
0xffff8bd090bc    60  movz w16, #0x257f
0xffff8bd090c0    64  cmp w5, w16, lsl #3
0xffff8bd090c4    68  b.hs #+0x17c (addr 0xffff8bd09240)
0xffff8bd090c8    72  cbz w5, #+0xc (addr 0xffff8bd090d4)
0xffff8bd090cc    76  mov x3, x5
0xffff8bd090d0    80  b #+0xc (addr 0xffff8bd090dc)
0xffff8bd090d4    84  movz x3, #0x4
0xffff8bd090d8    88  movz x5, #0x0
0xffff8bd090dc    92  lsl x4, x3, #32
0xffff8bd090e0    96  lsl x5, x5, #32
0xffff8bd090e4   100  lsl w6, w3, #3
0xffff8bd090e8   104  add w6, w6, #0x10 (16)
0xffff8bd090ec   108  cmp w6, #0x96000 (614400)
0xffff8bd090f0   112  b.hs #+0x158 (addr 0xffff8bd09248)
0xffff8bd090f4   116  add w0, w6, #0x20 (32)
0xffff8bd090f8   120  sxtw x0, w0
0xffff8bd090fc   124  movz x2, #0xe2c0
0xffff8bd09100   128  movk x2, #0x2cb8, lsl #16
0xffff8bd09104   132  ldp x7, x16, [x2]
0xffff8bd09108   136  adds x6, x7, x0
0xffff8bd0910c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd09110   144  b.hi #+0xa8 (addr 0xffff8bd091b8)
0xffff8bd09114   148  str x6, [x2]
0xffff8bd09118   152  orr x7, x7, #0x1
0xffff8bd0911c   156  movz w0, #0x0
0xffff8bd09120   160  stur x0, [x7, #31]
0xffff8bd09124   164  ldur x0, [x1, #39]
0xffff8bd09128   168  ldur x0, [x0, #39]
0xffff8bd0912c   172  movz x16, #0x19f
0xffff8bd09130   176  ldr x0, [x0, x16]
0xffff8bd09134   180  stur x0, [x7, #-1]
0xffff8bd09138   184  ldr x0, pc+216 (addr 0x0000ffff8bd09210)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0913c   188  stur x0, [x7, #7]
0xffff8bd09140   192  ldr x0, pc+216 (addr 0x0000ffff8bd09218)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd09144   196  stur x0, [x7, #15]
0xffff8bd09148   200  stur x5, [x7, #23]
0xffff8bd0914c   204  add x0, x7, #0x20 (32)
0xffff8bd09150   208  ldr x1, pc+208 (addr 0x0000ffff8bd09220)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd09154   212  stur x1, [x0, #-1]
0xffff8bd09158   216  stur x4, [x0, #7]
0xffff8bd0915c   220  stur x0, [x7, #15]
0xffff8bd09160   224  ldr d0, pc+168 (addr 0x0000ffff8bd09208)
0xffff8bd09164   228  cmp w3, #0x0 (0)
0xffff8bd09168   232  b.le #+0x14 (addr 0xffff8bd0917c)
0xffff8bd0916c   236  sub w3, w3, #0x1 (1)
0xffff8bd09170   240  add x1, x0, #0xf (15)
0xffff8bd09174   244  str d0, [x1, w3, sxtw #3]
0xffff8bd09178   248  b #-0x14 (addr 0xffff8bd09164)
0xffff8bd0917c   252  mov x0, x7
0xffff8bd09180   256  mov jssp, fp
0xffff8bd09184   260  ldp fp, lr, [jssp], #16
0xffff8bd09188   264  add jssp, jssp, #0x10 (16)
0xffff8bd0918c   268  ret
0xffff8bd09190   272  ldur x16, [x3, #-1]
0xffff8bd09194   276  ldr x17, [x26, #120]
0xffff8bd09198   280  cmp x16, x17
0xffff8bd0919c   284  b.ne #+0xb4 (addr 0xffff8bd09250)
0xffff8bd091a0   288  ldur d29, [x3, #7]
0xffff8bd091a4   292  fcvtzs w5, d29
0xffff8bd091a8   296  scvtf d0, w5
0xffff8bd091ac   300  fcmp d29, d0
0xffff8bd091b0   304  b.ne #+0xa0 (addr 0xffff8bd09250)
0xffff8bd091b4   308  b #-0xf8 (addr 0xffff8bd090bc)
0xffff8bd091b8   312  movz x7, #0x0
0xffff8bd091bc   316  mov x16, lr
0xffff8bd091c0   320  ldr x17, pc+104 (addr 0x0000ffff8bd09228)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd091c4   324  blr x17
0xffff8bd091c8   328  lsl x0, x0, #32
0xffff8bd091cc   332  movz x10, #0x100000000
0xffff8bd091d0   336  sub csp, jssp, #0x10 (16)
0xffff8bd091d4   340  stp x10, x0, [jssp, #-16]!
0xffff8bd091d8   344  movz x0, #0x2
0xffff8bd091dc   348  movz x1, #0x5b88
0xffff8bd091e0   352  movk x1, #0xe2, lsl #16
0xffff8bd091e4   356  ldr x16, pc+76 (addr 0x0000ffff8bd09230)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd091e8   360  blr x16
0xffff8bd091ec   364  str x0, [jssp, #56]
0xffff8bd091f0   368  ldr x16, pc+72 (addr 0x0000ffff8bd09238)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd091f4   372  blr x16
0xffff8bd091f8   376  b #-0xdc (addr 0xffff8bd0911c)
0xffff8bd091fc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd09200   384  d63f03e0       constant
0xffff8bd09204   388  d503201f       constant
0xffff8bd09208   392  fff7ffff       constant
0xffff8bd0920c   396  fff7ffff       constant
0xffff8bd09210   400  26c04201       constant
0xffff8bd09214   404  00000000       constant
0xffff8bd09218   408  26c04201       constant
0xffff8bd0921c   412  00000000       constant
0xffff8bd09220   416  5f5052d9       constant
0xffff8bd09224   420  00000000       constant
0xffff8bd09228   424  8bd06820       constant
0xffff8bd0922c   428  0000ffff       constant
0xffff8bd09230   432  8bd06260       constant
0xffff8bd09234   436  0000ffff       constant
0xffff8bd09238   440  8bd068e0       constant
0xffff8bd0923c   444  0000ffff       constant
0xffff8bd09240   448  movz x16, #0x0
0xffff8bd09244   452  bl #+0x14 (addr 0xffff8bd09258)
0xffff8bd09248   456  movz x16, #0x8
0xffff8bd0924c   460  bl #+0xc (addr 0xffff8bd09258)
0xffff8bd09250   464  movz x16, #0x10
0xffff8bd09254   468  bl #+0x4 (addr 0xffff8bd09258)
0xffff8bd09258   472  ldr x17, pc+24 (addr 0x0000ffff8bd09270)    ;; lazy deoptimization bailout 0
0xffff8bd0925c   476  add x17, x17, x16
0xffff8bd09260   480  br x17
0xffff8bd09264   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd09268   488  d63f03e0       constant
0xffff8bd0926c   492  d503201f       constant
0xffff8bd09270   496  8bb06000       constant
0xffff8bd09274   500  0000ffff       constant


Safepoints (size = 21)
0xffff8bd091ec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd09138  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd09140  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd09150  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd091c0  code target (STUB)  (0xffff8bd06820)
0xffff8bd091e4  code target (STUB)  (0xffff8bd06260)
0xffff8bd091f0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd091fc  constant pool (size 68)
0xffff8bd09258  runtime entry
0xffff8bd09264  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 525)
0xffff8bd09300     0  movz x16, #0xa00000000
0xffff8bd09304     4  sub csp, jssp, #0x10 (16)
0xffff8bd09308     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0930c    12  mov fp, jssp
0xffff8bd09310    16  sub csp, jssp, #0x8 (8)
0xffff8bd09314    20  sub jssp, jssp, #0x8 (8)
0xffff8bd09318    24  stur x16, [fp, #-8]
0xffff8bd0931c    28  ldr x3, [fp]
0xffff8bd09320    32  ldur x4, [x3, #-8]
0xffff8bd09324    36  movz x16, #0xe00000000
0xffff8bd09328    40  cmp x4, x16
0xffff8bd0932c    44  csel x4, fp, x3, ne
0xffff8bd09330    48  ldr x3, [x4, #16]
0xffff8bd09334    52  tbnz w3, #0, #+0xdc (addr 0xffff8bd09410)
0xffff8bd09338    56  asr x5, x3, #32
0xffff8bd0933c    60  movz w16, #0x257f
0xffff8bd09340    64  cmp w5, w16, lsl #3
0xffff8bd09344    68  b.hs #+0x17c (addr 0xffff8bd094c0)
0xffff8bd09348    72  cbz w5, #+0xc (addr 0xffff8bd09354)
0xffff8bd0934c    76  mov x3, x5
0xffff8bd09350    80  b #+0xc (addr 0xffff8bd0935c)
0xffff8bd09354    84  movz x3, #0x4
0xffff8bd09358    88  movz x5, #0x0
0xffff8bd0935c    92  lsl x4, x3, #32
0xffff8bd09360    96  lsl x5, x5, #32
0xffff8bd09364   100  lsl w6, w3, #3
0xffff8bd09368   104  add w6, w6, #0x10 (16)
0xffff8bd0936c   108  cmp w6, #0x96000 (614400)
0xffff8bd09370   112  b.hs #+0x158 (addr 0xffff8bd094c8)
0xffff8bd09374   116  add w0, w6, #0x20 (32)
0xffff8bd09378   120  sxtw x0, w0
0xffff8bd0937c   124  movz x2, #0xe2c0
0xffff8bd09380   128  movk x2, #0x2cb8, lsl #16
0xffff8bd09384   132  ldp x7, x16, [x2]
0xffff8bd09388   136  adds x6, x7, x0
0xffff8bd0938c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd09390   144  b.hi #+0xa8 (addr 0xffff8bd09438)
0xffff8bd09394   148  str x6, [x2]
0xffff8bd09398   152  orr x7, x7, #0x1
0xffff8bd0939c   156  movz w0, #0x0
0xffff8bd093a0   160  stur x0, [x7, #31]
0xffff8bd093a4   164  ldur x0, [x1, #39]
0xffff8bd093a8   168  ldur x0, [x0, #39]
0xffff8bd093ac   172  movz x16, #0x187
0xffff8bd093b0   176  ldr x0, [x0, x16]
0xffff8bd093b4   180  stur x0, [x7, #-1]
0xffff8bd093b8   184  ldr x0, pc+208 (addr 0x0000ffff8bd09488)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd093bc   188  stur x0, [x7, #7]
0xffff8bd093c0   192  ldr x0, pc+208 (addr 0x0000ffff8bd09490)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd093c4   196  stur x0, [x7, #15]
0xffff8bd093c8   200  stur x5, [x7, #23]
0xffff8bd093cc   204  add x0, x7, #0x20 (32)
0xffff8bd093d0   208  ldr x1, pc+200 (addr 0x0000ffff8bd09498)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd093d4   212  stur x1, [x0, #-1]
0xffff8bd093d8   216  stur x4, [x0, #7]
0xffff8bd093dc   220  stur x0, [x7, #15]
0xffff8bd093e0   224  cmp w3, #0x0 (0)
0xffff8bd093e4   228  b.le #+0x18 (addr 0xffff8bd093fc)
0xffff8bd093e8   232  sub w3, w3, #0x1 (1)
0xffff8bd093ec   236  ldr x1, pc+180 (addr 0x0000ffff8bd094a0)    ;; object: 0x26c04519 <the hole>
0xffff8bd093f0   240  add x2, x0, #0xf (15)
0xffff8bd093f4   244  str x1, [x2, w3, sxtw #3]
0xffff8bd093f8   248  b #-0x18 (addr 0xffff8bd093e0)
0xffff8bd093fc   252  mov x0, x7
0xffff8bd09400   256  mov jssp, fp
0xffff8bd09404   260  ldp fp, lr, [jssp], #16
0xffff8bd09408   264  add jssp, jssp, #0x10 (16)
0xffff8bd0940c   268  ret
0xffff8bd09410   272  ldur x16, [x3, #-1]
0xffff8bd09414   276  ldr x17, [x26, #120]
0xffff8bd09418   280  cmp x16, x17
0xffff8bd0941c   284  b.ne #+0xb4 (addr 0xffff8bd094d0)
0xffff8bd09420   288  ldur d29, [x3, #7]
0xffff8bd09424   292  fcvtzs w5, d29
0xffff8bd09428   296  scvtf d0, w5
0xffff8bd0942c   300  fcmp d29, d0
0xffff8bd09430   304  b.ne #+0xa0 (addr 0xffff8bd094d0)
0xffff8bd09434   308  b #-0xf8 (addr 0xffff8bd0933c)
0xffff8bd09438   312  movz x7, #0x0
0xffff8bd0943c   316  mov x16, lr
0xffff8bd09440   320  ldr x17, pc+104 (addr 0x0000ffff8bd094a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd09444   324  blr x17
0xffff8bd09448   328  lsl x0, x0, #32
0xffff8bd0944c   332  movz x10, #0x0
0xffff8bd09450   336  sub csp, jssp, #0x10 (16)
0xffff8bd09454   340  stp x10, x0, [jssp, #-16]!
0xffff8bd09458   344  movz x0, #0x2
0xffff8bd0945c   348  movz x1, #0x5b88
0xffff8bd09460   352  movk x1, #0xe2, lsl #16
0xffff8bd09464   356  ldr x16, pc+76 (addr 0x0000ffff8bd094b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd09468   360  blr x16
0xffff8bd0946c   364  str x0, [jssp, #56]
0xffff8bd09470   368  ldr x16, pc+72 (addr 0x0000ffff8bd094b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd09474   372  blr x16
0xffff8bd09478   376  b #-0xdc (addr 0xffff8bd0939c)
0xffff8bd0947c   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd09480   384  d63f03e0       constant
0xffff8bd09484   388  d503201f       constant
0xffff8bd09488   392  26c04201       constant
0xffff8bd0948c   396  00000000       constant
0xffff8bd09490   400  26c04201       constant
0xffff8bd09494   404  00000000       constant
0xffff8bd09498   408  5f504259       constant
0xffff8bd0949c   412  00000000       constant
0xffff8bd094a0   416  26c04519       constant
0xffff8bd094a4   420  00000000       constant
0xffff8bd094a8   424  8bd06820       constant
0xffff8bd094ac   428  0000ffff       constant
0xffff8bd094b0   432  8bd06260       constant
0xffff8bd094b4   436  0000ffff       constant
0xffff8bd094b8   440  8bd068e0       constant
0xffff8bd094bc   444  0000ffff       constant
0xffff8bd094c0   448  movz x16, #0x0
0xffff8bd094c4   452  bl #+0x14 (addr 0xffff8bd094d8)
0xffff8bd094c8   456  movz x16, #0x8
0xffff8bd094cc   460  bl #+0xc (addr 0xffff8bd094d8)
0xffff8bd094d0   464  movz x16, #0x10
0xffff8bd094d4   468  bl #+0x4 (addr 0xffff8bd094d8)
0xffff8bd094d8   472  ldr x17, pc+24 (addr 0x0000ffff8bd094f0)    ;; lazy deoptimization bailout 0
0xffff8bd094dc   476  add x17, x17, x16
0xffff8bd094e0   480  br x17
0xffff8bd094e4   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd094e8   488  d63f03e0       constant
0xffff8bd094ec   492  d503201f       constant
0xffff8bd094f0   496  8bb06000       constant
0xffff8bd094f4   500  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0946c   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd093b8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd093c0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd093d0  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd093ec  embedded object  (0x26c04519 <the hole>)
0xffff8bd09440  code target (STUB)  (0xffff8bd06820)
0xffff8bd09464  code target (STUB)  (0xffff8bd06260)
0xffff8bd09470  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0947c  constant pool (size 68)
0xffff8bd094d8  runtime entry
0xffff8bd094e4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_ELEMENTS
compiler = crankshaft
Instructions (size = 525)
0xffff8bd09300     0  movz x16, #0xa00000000
0xffff8bd09304     4  sub csp, jssp, #0x10 (16)
0xffff8bd09308     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0930c    12  mov fp, jssp
0xffff8bd09310    16  sub csp, jssp, #0x8 (8)
0xffff8bd09314    20  sub jssp, jssp, #0x8 (8)
0xffff8bd09318    24  stur x16, [fp, #-8]
0xffff8bd0931c    28  ldr x3, [fp]
0xffff8bd09320    32  ldur x4, [x3, #-8]
0xffff8bd09324    36  movz x16, #0xe00000000
0xffff8bd09328    40  cmp x4, x16
0xffff8bd0932c    44  csel x4, fp, x3, ne
0xffff8bd09330    48  ldr x3, [x4, #16]
0xffff8bd09334    52  tbnz w3, #0, #+0xdc (addr 0xffff8bd09410)
0xffff8bd09338    56  asr x5, x3, #32
0xffff8bd0933c    60  movz w16, #0x257f
0xffff8bd09340    64  cmp w5, w16, lsl #3
0xffff8bd09344    68  b.hs #+0x17c (addr 0xffff8bd094c0)
0xffff8bd09348    72  cbz w5, #+0xc (addr 0xffff8bd09354)
0xffff8bd0934c    76  mov x3, x5
0xffff8bd09350    80  b #+0xc (addr 0xffff8bd0935c)
0xffff8bd09354    84  movz x3, #0x4
0xffff8bd09358    88  movz x5, #0x0
0xffff8bd0935c    92  lsl x4, x3, #32
0xffff8bd09360    96  lsl x5, x5, #32
0xffff8bd09364   100  lsl w6, w3, #3
0xffff8bd09368   104  add w6, w6, #0x10 (16)
0xffff8bd0936c   108  cmp w6, #0x96000 (614400)
0xffff8bd09370   112  b.hs #+0x158 (addr 0xffff8bd094c8)
0xffff8bd09374   116  add w0, w6, #0x20 (32)
0xffff8bd09378   120  sxtw x0, w0
0xffff8bd0937c   124  movz x2, #0xe2c0
0xffff8bd09380   128  movk x2, #0x2cb8, lsl #16
0xffff8bd09384   132  ldp x7, x16, [x2]
0xffff8bd09388   136  adds x6, x7, x0
0xffff8bd0938c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd09390   144  b.hi #+0xa8 (addr 0xffff8bd09438)
0xffff8bd09394   148  str x6, [x2]
0xffff8bd09398   152  orr x7, x7, #0x1
0xffff8bd0939c   156  movz w0, #0x0
0xffff8bd093a0   160  stur x0, [x7, #31]
0xffff8bd093a4   164  ldur x0, [x1, #39]
0xffff8bd093a8   168  ldur x0, [x0, #39]
0xffff8bd093ac   172  movz x16, #0x187
0xffff8bd093b0   176  ldr x0, [x0, x16]
0xffff8bd093b4   180  stur x0, [x7, #-1]
0xffff8bd093b8   184  ldr x0, pc+208 (addr 0x0000ffff8bd09488)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd093bc   188  stur x0, [x7, #7]
0xffff8bd093c0   192  ldr x0, pc+208 (addr 0x0000ffff8bd09490)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd093c4   196  stur x0, [x7, #15]
0xffff8bd093c8   200  stur x5, [x7, #23]
0xffff8bd093cc   204  add x0, x7, #0x20 (32)
0xffff8bd093d0   208  ldr x1, pc+200 (addr 0x0000ffff8bd09498)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd093d4   212  stur x1, [x0, #-1]
0xffff8bd093d8   216  stur x4, [x0, #7]
0xffff8bd093dc   220  stur x0, [x7, #15]
0xffff8bd093e0   224  cmp w3, #0x0 (0)
0xffff8bd093e4   228  b.le #+0x18 (addr 0xffff8bd093fc)
0xffff8bd093e8   232  sub w3, w3, #0x1 (1)
0xffff8bd093ec   236  ldr x1, pc+180 (addr 0x0000ffff8bd094a0)    ;; object: 0x26c04519 <the hole>
0xffff8bd093f0   240  add x2, x0, #0xf (15)
0xffff8bd093f4   244  str x1, [x2, w3, sxtw #3]
0xffff8bd093f8   248  b #-0x18 (addr 0xffff8bd093e0)
0xffff8bd093fc   252  mov x0, x7
0xffff8bd09400   256  mov jssp, fp
0xffff8bd09404   260  ldp fp, lr, [jssp], #16
0xffff8bd09408   264  add jssp, jssp, #0x10 (16)
0xffff8bd0940c   268  ret
0xffff8bd09410   272  ldur x16, [x3, #-1]
0xffff8bd09414   276  ldr x17, [x26, #120]
0xffff8bd09418   280  cmp x16, x17
0xffff8bd0941c   284  b.ne #+0xb4 (addr 0xffff8bd094d0)
0xffff8bd09420   288  ldur d29, [x3, #7]
0xffff8bd09424   292  fcvtzs w5, d29
0xffff8bd09428   296  scvtf d0, w5
0xffff8bd0942c   300  fcmp d29, d0
0xffff8bd09430   304  b.ne #+0xa0 (addr 0xffff8bd094d0)
0xffff8bd09434   308  b #-0xf8 (addr 0xffff8bd0933c)
0xffff8bd09438   312  movz x7, #0x0
0xffff8bd0943c   316  mov x16, lr
0xffff8bd09440   320  ldr x17, pc+104 (addr 0x0000ffff8bd094a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd09444   324  blr x17
0xffff8bd09448   328  lsl x0, x0, #32
0xffff8bd0944c   332  movz x10, #0x0
0xffff8bd09450   336  sub csp, jssp, #0x10 (16)
0xffff8bd09454   340  stp x10, x0, [jssp, #-16]!
0xffff8bd09458   344  movz x0, #0x2
0xffff8bd0945c   348  movz x1, #0x5b88
0xffff8bd09460   352  movk x1, #0xe2, lsl #16
0xffff8bd09464   356  ldr x16, pc+76 (addr 0x0000ffff8bd094b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd09468   360  blr x16
0xffff8bd0946c   364  str x0, [jssp, #56]
0xffff8bd09470   368  ldr x16, pc+72 (addr 0x0000ffff8bd094b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd09474   372  blr x16
0xffff8bd09478   376  b #-0xdc (addr 0xffff8bd0939c)
0xffff8bd0947c   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd09480   384  d63f03e0       constant
0xffff8bd09484   388  d503201f       constant
0xffff8bd09488   392  26c04201       constant
0xffff8bd0948c   396  00000000       constant
0xffff8bd09490   400  26c04201       constant
0xffff8bd09494   404  00000000       constant
0xffff8bd09498   408  5f504259       constant
0xffff8bd0949c   412  00000000       constant
0xffff8bd094a0   416  26c04519       constant
0xffff8bd094a4   420  00000000       constant
0xffff8bd094a8   424  8bd06820       constant
0xffff8bd094ac   428  0000ffff       constant
0xffff8bd094b0   432  8bd06260       constant
0xffff8bd094b4   436  0000ffff       constant
0xffff8bd094b8   440  8bd068e0       constant
0xffff8bd094bc   444  0000ffff       constant
0xffff8bd094c0   448  movz x16, #0x0
0xffff8bd094c4   452  bl #+0x14 (addr 0xffff8bd094d8)
0xffff8bd094c8   456  movz x16, #0x8
0xffff8bd094cc   460  bl #+0xc (addr 0xffff8bd094d8)
0xffff8bd094d0   464  movz x16, #0x10
0xffff8bd094d4   468  bl #+0x4 (addr 0xffff8bd094d8)
0xffff8bd094d8   472  ldr x17, pc+24 (addr 0x0000ffff8bd094f0)    ;; lazy deoptimization bailout 0
0xffff8bd094dc   476  add x17, x17, x16
0xffff8bd094e0   480  br x17
0xffff8bd094e4   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd094e8   488  d63f03e0       constant
0xffff8bd094ec   492  d503201f       constant
0xffff8bd094f0   496  8bb06000       constant
0xffff8bd094f4   500  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0946c   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd093b8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd093c0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd093d0  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd093ec  embedded object  (0x26c04519 <the hole>)
0xffff8bd09440  code target (STUB)  (0xffff8bd06820)
0xffff8bd09464  code target (STUB)  (0xffff8bd06260)
0xffff8bd09470  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0947c  constant pool (size 68)
0xffff8bd094d8  runtime entry
0xffff8bd094e4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 525)
0xffff8bd09580     0  movz x16, #0xa00000000
0xffff8bd09584     4  sub csp, jssp, #0x10 (16)
0xffff8bd09588     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0958c    12  mov fp, jssp
0xffff8bd09590    16  sub csp, jssp, #0x8 (8)
0xffff8bd09594    20  sub jssp, jssp, #0x8 (8)
0xffff8bd09598    24  stur x16, [fp, #-8]
0xffff8bd0959c    28  ldr x3, [fp]
0xffff8bd095a0    32  ldur x4, [x3, #-8]
0xffff8bd095a4    36  movz x16, #0xe00000000
0xffff8bd095a8    40  cmp x4, x16
0xffff8bd095ac    44  csel x4, fp, x3, ne
0xffff8bd095b0    48  ldr x3, [x4, #16]
0xffff8bd095b4    52  tbnz w3, #0, #+0xdc (addr 0xffff8bd09690)
0xffff8bd095b8    56  asr x5, x3, #32
0xffff8bd095bc    60  movz w16, #0x257f
0xffff8bd095c0    64  cmp w5, w16, lsl #3
0xffff8bd095c4    68  b.hs #+0x17c (addr 0xffff8bd09740)
0xffff8bd095c8    72  cbz w5, #+0xc (addr 0xffff8bd095d4)
0xffff8bd095cc    76  mov x3, x5
0xffff8bd095d0    80  b #+0xc (addr 0xffff8bd095dc)
0xffff8bd095d4    84  movz x3, #0x4
0xffff8bd095d8    88  movz x5, #0x0
0xffff8bd095dc    92  lsl x4, x3, #32
0xffff8bd095e0    96  lsl x5, x5, #32
0xffff8bd095e4   100  lsl w6, w3, #3
0xffff8bd095e8   104  add w6, w6, #0x10 (16)
0xffff8bd095ec   108  cmp w6, #0x96000 (614400)
0xffff8bd095f0   112  b.hs #+0x158 (addr 0xffff8bd09748)
0xffff8bd095f4   116  add w0, w6, #0x20 (32)
0xffff8bd095f8   120  sxtw x0, w0
0xffff8bd095fc   124  movz x2, #0xe2c0
0xffff8bd09600   128  movk x2, #0x2cb8, lsl #16
0xffff8bd09604   132  ldp x7, x16, [x2]
0xffff8bd09608   136  adds x6, x7, x0
0xffff8bd0960c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd09610   144  b.hi #+0xa8 (addr 0xffff8bd096b8)
0xffff8bd09614   148  str x6, [x2]
0xffff8bd09618   152  orr x7, x7, #0x1
0xffff8bd0961c   156  movz w0, #0x0
0xffff8bd09620   160  stur x0, [x7, #31]
0xffff8bd09624   164  ldur x0, [x1, #39]
0xffff8bd09628   168  ldur x0, [x0, #39]
0xffff8bd0962c   172  movz x16, #0x18f
0xffff8bd09630   176  ldr x0, [x0, x16]
0xffff8bd09634   180  stur x0, [x7, #-1]
0xffff8bd09638   184  ldr x0, pc+208 (addr 0x0000ffff8bd09708)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0963c   188  stur x0, [x7, #7]
0xffff8bd09640   192  ldr x0, pc+208 (addr 0x0000ffff8bd09710)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd09644   196  stur x0, [x7, #15]
0xffff8bd09648   200  stur x5, [x7, #23]
0xffff8bd0964c   204  add x0, x7, #0x20 (32)
0xffff8bd09650   208  ldr x1, pc+200 (addr 0x0000ffff8bd09718)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd09654   212  stur x1, [x0, #-1]
0xffff8bd09658   216  stur x4, [x0, #7]
0xffff8bd0965c   220  stur x0, [x7, #15]
0xffff8bd09660   224  cmp w3, #0x0 (0)
0xffff8bd09664   228  b.le #+0x18 (addr 0xffff8bd0967c)
0xffff8bd09668   232  sub w3, w3, #0x1 (1)
0xffff8bd0966c   236  ldr x1, pc+180 (addr 0x0000ffff8bd09720)    ;; object: 0x26c04519 <the hole>
0xffff8bd09670   240  add x2, x0, #0xf (15)
0xffff8bd09674   244  str x1, [x2, w3, sxtw #3]
0xffff8bd09678   248  b #-0x18 (addr 0xffff8bd09660)
0xffff8bd0967c   252  mov x0, x7
0xffff8bd09680   256  mov jssp, fp
0xffff8bd09684   260  ldp fp, lr, [jssp], #16
0xffff8bd09688   264  add jssp, jssp, #0x10 (16)
0xffff8bd0968c   268  ret
0xffff8bd09690   272  ldur x16, [x3, #-1]
0xffff8bd09694   276  ldr x17, [x26, #120]
0xffff8bd09698   280  cmp x16, x17
0xffff8bd0969c   284  b.ne #+0xb4 (addr 0xffff8bd09750)
0xffff8bd096a0   288  ldur d29, [x3, #7]
0xffff8bd096a4   292  fcvtzs w5, d29
0xffff8bd096a8   296  scvtf d0, w5
0xffff8bd096ac   300  fcmp d29, d0
0xffff8bd096b0   304  b.ne #+0xa0 (addr 0xffff8bd09750)
0xffff8bd096b4   308  b #-0xf8 (addr 0xffff8bd095bc)
0xffff8bd096b8   312  movz x7, #0x0
0xffff8bd096bc   316  mov x16, lr
0xffff8bd096c0   320  ldr x17, pc+104 (addr 0x0000ffff8bd09728)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd096c4   324  blr x17
0xffff8bd096c8   328  lsl x0, x0, #32
0xffff8bd096cc   332  movz x10, #0x0
0xffff8bd096d0   336  sub csp, jssp, #0x10 (16)
0xffff8bd096d4   340  stp x10, x0, [jssp, #-16]!
0xffff8bd096d8   344  movz x0, #0x2
0xffff8bd096dc   348  movz x1, #0x5b88
0xffff8bd096e0   352  movk x1, #0xe2, lsl #16
0xffff8bd096e4   356  ldr x16, pc+76 (addr 0x0000ffff8bd09730)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd096e8   360  blr x16
0xffff8bd096ec   364  str x0, [jssp, #56]
0xffff8bd096f0   368  ldr x16, pc+72 (addr 0x0000ffff8bd09738)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd096f4   372  blr x16
0xffff8bd096f8   376  b #-0xdc (addr 0xffff8bd0961c)
0xffff8bd096fc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd09700   384  d63f03e0       constant
0xffff8bd09704   388  d503201f       constant
0xffff8bd09708   392  26c04201       constant
0xffff8bd0970c   396  00000000       constant
0xffff8bd09710   400  26c04201       constant
0xffff8bd09714   404  00000000       constant
0xffff8bd09718   408  5f504259       constant
0xffff8bd0971c   412  00000000       constant
0xffff8bd09720   416  26c04519       constant
0xffff8bd09724   420  00000000       constant
0xffff8bd09728   424  8bd06820       constant
0xffff8bd0972c   428  0000ffff       constant
0xffff8bd09730   432  8bd06260       constant
0xffff8bd09734   436  0000ffff       constant
0xffff8bd09738   440  8bd068e0       constant
0xffff8bd0973c   444  0000ffff       constant
0xffff8bd09740   448  movz x16, #0x0
0xffff8bd09744   452  bl #+0x14 (addr 0xffff8bd09758)
0xffff8bd09748   456  movz x16, #0x8
0xffff8bd0974c   460  bl #+0xc (addr 0xffff8bd09758)
0xffff8bd09750   464  movz x16, #0x10
0xffff8bd09754   468  bl #+0x4 (addr 0xffff8bd09758)
0xffff8bd09758   472  ldr x17, pc+24 (addr 0x0000ffff8bd09770)    ;; lazy deoptimization bailout 0
0xffff8bd0975c   476  add x17, x17, x16
0xffff8bd09760   480  br x17
0xffff8bd09764   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd09768   488  d63f03e0       constant
0xffff8bd0976c   492  d503201f       constant
0xffff8bd09770   496  8bb06000       constant
0xffff8bd09774   500  0000ffff       constant


Safepoints (size = 21)
0xffff8bd096ec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd09638  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd09640  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd09650  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0966c  embedded object  (0x26c04519 <the hole>)
0xffff8bd096c0  code target (STUB)  (0xffff8bd06820)
0xffff8bd096e4  code target (STUB)  (0xffff8bd06260)
0xffff8bd096f0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd096fc  constant pool (size 68)
0xffff8bd09758  runtime entry
0xffff8bd09764  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArraySingleArgumentConstructorStub
name = ArraySingleArgumentConstructorStub_FAST_HOLEY_ELEMENTS
compiler = crankshaft
Instructions (size = 525)
0xffff8bd09580     0  movz x16, #0xa00000000
0xffff8bd09584     4  sub csp, jssp, #0x10 (16)
0xffff8bd09588     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0958c    12  mov fp, jssp
0xffff8bd09590    16  sub csp, jssp, #0x8 (8)
0xffff8bd09594    20  sub jssp, jssp, #0x8 (8)
0xffff8bd09598    24  stur x16, [fp, #-8]
0xffff8bd0959c    28  ldr x3, [fp]
0xffff8bd095a0    32  ldur x4, [x3, #-8]
0xffff8bd095a4    36  movz x16, #0xe00000000
0xffff8bd095a8    40  cmp x4, x16
0xffff8bd095ac    44  csel x4, fp, x3, ne
0xffff8bd095b0    48  ldr x3, [x4, #16]
0xffff8bd095b4    52  tbnz w3, #0, #+0xdc (addr 0xffff8bd09690)
0xffff8bd095b8    56  asr x5, x3, #32
0xffff8bd095bc    60  movz w16, #0x257f
0xffff8bd095c0    64  cmp w5, w16, lsl #3
0xffff8bd095c4    68  b.hs #+0x17c (addr 0xffff8bd09740)
0xffff8bd095c8    72  cbz w5, #+0xc (addr 0xffff8bd095d4)
0xffff8bd095cc    76  mov x3, x5
0xffff8bd095d0    80  b #+0xc (addr 0xffff8bd095dc)
0xffff8bd095d4    84  movz x3, #0x4
0xffff8bd095d8    88  movz x5, #0x0
0xffff8bd095dc    92  lsl x4, x3, #32
0xffff8bd095e0    96  lsl x5, x5, #32
0xffff8bd095e4   100  lsl w6, w3, #3
0xffff8bd095e8   104  add w6, w6, #0x10 (16)
0xffff8bd095ec   108  cmp w6, #0x96000 (614400)
0xffff8bd095f0   112  b.hs #+0x158 (addr 0xffff8bd09748)
0xffff8bd095f4   116  add w0, w6, #0x20 (32)
0xffff8bd095f8   120  sxtw x0, w0
0xffff8bd095fc   124  movz x2, #0xe2c0
0xffff8bd09600   128  movk x2, #0x2cb8, lsl #16
0xffff8bd09604   132  ldp x7, x16, [x2]
0xffff8bd09608   136  adds x6, x7, x0
0xffff8bd0960c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd09610   144  b.hi #+0xa8 (addr 0xffff8bd096b8)
0xffff8bd09614   148  str x6, [x2]
0xffff8bd09618   152  orr x7, x7, #0x1
0xffff8bd0961c   156  movz w0, #0x0
0xffff8bd09620   160  stur x0, [x7, #31]
0xffff8bd09624   164  ldur x0, [x1, #39]
0xffff8bd09628   168  ldur x0, [x0, #39]
0xffff8bd0962c   172  movz x16, #0x18f
0xffff8bd09630   176  ldr x0, [x0, x16]
0xffff8bd09634   180  stur x0, [x7, #-1]
0xffff8bd09638   184  ldr x0, pc+208 (addr 0x0000ffff8bd09708)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0963c   188  stur x0, [x7, #7]
0xffff8bd09640   192  ldr x0, pc+208 (addr 0x0000ffff8bd09710)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd09644   196  stur x0, [x7, #15]
0xffff8bd09648   200  stur x5, [x7, #23]
0xffff8bd0964c   204  add x0, x7, #0x20 (32)
0xffff8bd09650   208  ldr x1, pc+200 (addr 0x0000ffff8bd09718)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd09654   212  stur x1, [x0, #-1]
0xffff8bd09658   216  stur x4, [x0, #7]
0xffff8bd0965c   220  stur x0, [x7, #15]
0xffff8bd09660   224  cmp w3, #0x0 (0)
0xffff8bd09664   228  b.le #+0x18 (addr 0xffff8bd0967c)
0xffff8bd09668   232  sub w3, w3, #0x1 (1)
0xffff8bd0966c   236  ldr x1, pc+180 (addr 0x0000ffff8bd09720)    ;; object: 0x26c04519 <the hole>
0xffff8bd09670   240  add x2, x0, #0xf (15)
0xffff8bd09674   244  str x1, [x2, w3, sxtw #3]
0xffff8bd09678   248  b #-0x18 (addr 0xffff8bd09660)
0xffff8bd0967c   252  mov x0, x7
0xffff8bd09680   256  mov jssp, fp
0xffff8bd09684   260  ldp fp, lr, [jssp], #16
0xffff8bd09688   264  add jssp, jssp, #0x10 (16)
0xffff8bd0968c   268  ret
0xffff8bd09690   272  ldur x16, [x3, #-1]
0xffff8bd09694   276  ldr x17, [x26, #120]
0xffff8bd09698   280  cmp x16, x17
0xffff8bd0969c   284  b.ne #+0xb4 (addr 0xffff8bd09750)
0xffff8bd096a0   288  ldur d29, [x3, #7]
0xffff8bd096a4   292  fcvtzs w5, d29
0xffff8bd096a8   296  scvtf d0, w5
0xffff8bd096ac   300  fcmp d29, d0
0xffff8bd096b0   304  b.ne #+0xa0 (addr 0xffff8bd09750)
0xffff8bd096b4   308  b #-0xf8 (addr 0xffff8bd095bc)
0xffff8bd096b8   312  movz x7, #0x0
0xffff8bd096bc   316  mov x16, lr
0xffff8bd096c0   320  ldr x17, pc+104 (addr 0x0000ffff8bd09728)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd096c4   324  blr x17
0xffff8bd096c8   328  lsl x0, x0, #32
0xffff8bd096cc   332  movz x10, #0x0
0xffff8bd096d0   336  sub csp, jssp, #0x10 (16)
0xffff8bd096d4   340  stp x10, x0, [jssp, #-16]!
0xffff8bd096d8   344  movz x0, #0x2
0xffff8bd096dc   348  movz x1, #0x5b88
0xffff8bd096e0   352  movk x1, #0xe2, lsl #16
0xffff8bd096e4   356  ldr x16, pc+76 (addr 0x0000ffff8bd09730)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd096e8   360  blr x16
0xffff8bd096ec   364  str x0, [jssp, #56]
0xffff8bd096f0   368  ldr x16, pc+72 (addr 0x0000ffff8bd09738)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd096f4   372  blr x16
0xffff8bd096f8   376  b #-0xdc (addr 0xffff8bd0961c)
0xffff8bd096fc   380  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd09700   384  d63f03e0       constant
0xffff8bd09704   388  d503201f       constant
0xffff8bd09708   392  26c04201       constant
0xffff8bd0970c   396  00000000       constant
0xffff8bd09710   400  26c04201       constant
0xffff8bd09714   404  00000000       constant
0xffff8bd09718   408  5f504259       constant
0xffff8bd0971c   412  00000000       constant
0xffff8bd09720   416  26c04519       constant
0xffff8bd09724   420  00000000       constant
0xffff8bd09728   424  8bd06820       constant
0xffff8bd0972c   428  0000ffff       constant
0xffff8bd09730   432  8bd06260       constant
0xffff8bd09734   436  0000ffff       constant
0xffff8bd09738   440  8bd068e0       constant
0xffff8bd0973c   444  0000ffff       constant
0xffff8bd09740   448  movz x16, #0x0
0xffff8bd09744   452  bl #+0x14 (addr 0xffff8bd09758)
0xffff8bd09748   456  movz x16, #0x8
0xffff8bd0974c   460  bl #+0xc (addr 0xffff8bd09758)
0xffff8bd09750   464  movz x16, #0x10
0xffff8bd09754   468  bl #+0x4 (addr 0xffff8bd09758)
0xffff8bd09758   472  ldr x17, pc+24 (addr 0x0000ffff8bd09770)    ;; lazy deoptimization bailout 0
0xffff8bd0975c   476  add x17, x17, x16
0xffff8bd09760   480  br x17
0xffff8bd09764   484  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd09768   488  d63f03e0       constant
0xffff8bd0976c   492  d503201f       constant
0xffff8bd09770   496  8bb06000       constant
0xffff8bd09774   500  0000ffff       constant


Safepoints (size = 21)
0xffff8bd096ec   364  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd09638  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd09640  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd09650  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0966c  embedded object  (0x26c04519 <the hole>)
0xffff8bd096c0  code target (STUB)  (0xffff8bd06820)
0xffff8bd096e4  code target (STUB)  (0xffff8bd06260)
0xffff8bd096f0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd096fc  constant pool (size 68)
0xffff8bd09758  runtime entry
0xffff8bd09764  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff8bd09800     0  adr xzr, #+0x40 (addr 0xffff8bd09840)
0xffff8bd09804     4  adr xzr, #+0x360 (addr 0xffff8bd09b64)
0xffff8bd09808     8  ldr x16, pc+1736 (addr 0x0000ffff8bd09ed0)    ;; external reference (store_buffer_top)
0xffff8bd0980c    12  ldr x3, [x16]
0xffff8bd09810    16  str x4, [x3], #8
0xffff8bd09814    20  str x3, [x16]
0xffff8bd09818    24  tst x3, #0x1ffff
0xffff8bd0981c    28  b.eq #+0x8 (addr 0xffff8bd09824)
0xffff8bd09820    32  ret
0xffff8bd09824    36  sub csp, jssp, #0x8 (8)
0xffff8bd09828    40  str lr, [jssp, #-8]!
0xffff8bd0982c    44  ldr x17, pc+1708 (addr 0x0000ffff8bd09ed8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd09830    48  blr x17
0xffff8bd09834    52  ldr lr, [jssp], #8
0xffff8bd09838    56  ret
0xffff8bd0983c    60  ret
0xffff8bd09840    64  sub csp, jssp, #0x10 (16)
0xffff8bd09844    68  stp x1, x0, [jssp, #-16]!
0xffff8bd09848    72  ldr x3, [x4]
0xffff8bd0984c    76  and x16, x3, #0xfffffffffff00000
0xffff8bd09850    80  ldr x16, [x16, #8]
0xffff8bd09854    84  tst x16, #0x18
0xffff8bd09858    88  b.eq #+0x1d8 (addr 0xffff8bd09a30)
0xffff8bd0985c    92  and x16, x7, #0xfffffffffff00000
0xffff8bd09860    96  ldr x16, [x16, #8]
0xffff8bd09864   100  tst x16, #0x18
0xffff8bd09868   104  b.ne #+0x1c8 (addr 0xffff8bd09a30)
0xffff8bd0986c   108  and x3, x7, #0xfffffffffff00000
0xffff8bd09870   112  ldr x0, [x3, #104]
0xffff8bd09874   116  subs x0, x0, #0x1 (1)
0xffff8bd09878   120  str x0, [x3, #104]
0xffff8bd0987c   124  b.mi #+0xc4 (addr 0xffff8bd09940)
0xffff8bd09880   128  ubfx x16, x7, #8, #12
0xffff8bd09884   132  and x3, x7, #0xfffffffffff00000
0xffff8bd09888   136  add x3, x3, x16, lsl #2
0xffff8bd0988c   140  ubfx x0, x7, #3, #5
0xffff8bd09890   144  ldr x3, [x3, #360]
0xffff8bd09894   148  lsr x3, x3, x0
0xffff8bd09898   152  tbz w3, #0, #+0x8 (addr 0xffff8bd098a0)
0xffff8bd0989c   156  tbnz w3, #1, #+0x3c (addr 0xffff8bd098d8)
0xffff8bd098a0   160  ldp x1, x0, [jssp], #16
0xffff8bd098a4   164  ldr x16, pc+1596 (addr 0x0000ffff8bd09ee0)    ;; external reference (store_buffer_top)
0xffff8bd098a8   168  ldr x3, [x16]
0xffff8bd098ac   172  str x4, [x3], #8
0xffff8bd098b0   176  str x3, [x16]
0xffff8bd098b4   180  tst x3, #0x1ffff
0xffff8bd098b8   184  b.eq #+0x8 (addr 0xffff8bd098c0)
0xffff8bd098bc   188  ret
0xffff8bd098c0   192  sub csp, jssp, #0x8 (8)
0xffff8bd098c4   196  str lr, [jssp, #-8]!
0xffff8bd098c8   200  ldr x17, pc+1568 (addr 0x0000ffff8bd09ee8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd098cc   204  blr x17
0xffff8bd098d0   208  ldr lr, [jssp], #8
0xffff8bd098d4   212  ret
0xffff8bd098d8   216  ldr x3, [x4]
0xffff8bd098dc   220  sub csp, jssp, #0x10 (16)
0xffff8bd098e0   224  stp x7, x4, [jssp, #-16]!
0xffff8bd098e4   228  ubfx x16, x3, #8, #12
0xffff8bd098e8   232  and x0, x3, #0xfffffffffff00000
0xffff8bd098ec   236  add x0, x0, x16, lsl #2
0xffff8bd098f0   240  ubfx x7, x3, #3, #5
0xffff8bd098f4   244  ldr x4, [x0, #360]
0xffff8bd098f8   248  lsr x4, x4, x7
0xffff8bd098fc   252  tbz w4, #0, #+0x40 (addr 0xffff8bd0993c)
0xffff8bd09900   256  ldp x7, x4, [jssp], #16
0xffff8bd09904   260  ldp x1, x0, [jssp], #16
0xffff8bd09908   264  ldr x16, pc+1512 (addr 0x0000ffff8bd09ef0)    ;; external reference (store_buffer_top)
0xffff8bd0990c   268  ldr x3, [x16]
0xffff8bd09910   272  str x4, [x3], #8
0xffff8bd09914   276  str x3, [x16]
0xffff8bd09918   280  tst x3, #0x1ffff
0xffff8bd0991c   284  b.eq #+0x8 (addr 0xffff8bd09924)
0xffff8bd09920   288  ret
0xffff8bd09924   292  sub csp, jssp, #0x8 (8)
0xffff8bd09928   296  str lr, [jssp, #-8]!
0xffff8bd0992c   300  ldr x17, pc+1484 (addr 0x0000ffff8bd09ef8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd09930   304  blr x17
0xffff8bd09934   308  ldr lr, [jssp], #8
0xffff8bd09938   312  ret
0xffff8bd0993c   316  ldp x7, x4, [jssp], #16
0xffff8bd09940   320  sub csp, jssp, #0x78 (120)
0xffff8bd09944   324  stp x14, x15, [jssp, #-32]!
0xffff8bd09948   328  stp x18, lr, [jssp, #16]
0xffff8bd0994c   332  stp x10, x11, [jssp, #-32]!
0xffff8bd09950   336  stp x12, x13, [jssp, #16]
0xffff8bd09954   340  stp x6, x7, [jssp, #-32]!
0xffff8bd09958   344  stp x8, x9, [jssp, #16]
0xffff8bd0995c   348  stp x2, x4, [jssp, #-24]!
0xffff8bd09960   352  str x5, [jssp, #16]
0xffff8bd09964   356  sub csp, jssp, #0xb0 (176)
0xffff8bd09968   360  stp d26, d27, [jssp, #-32]!
0xffff8bd0996c   364  stp d28, d29, [jssp, #16]
0xffff8bd09970   368  stp d22, d23, [jssp, #-32]!
0xffff8bd09974   372  stp d24, d25, [jssp, #16]
0xffff8bd09978   376  stp d18, d19, [jssp, #-32]!
0xffff8bd0997c   380  stp d20, d21, [jssp, #16]
0xffff8bd09980   384  stp d6, d7, [jssp, #-32]!
0xffff8bd09984   388  stp d16, d17, [jssp, #16]
0xffff8bd09988   392  stp d2, d3, [jssp, #-32]!
0xffff8bd0998c   396  stp d4, d5, [jssp, #16]
0xffff8bd09990   400  stp d0, d1, [jssp, #-16]!
0xffff8bd09994   404  mov x0, x7
0xffff8bd09998   408  mov x1, x4
0xffff8bd0999c   412  ldr x2, pc+1380 (addr 0x0000ffff8bd09f00)    ;; external reference (isolate)
0xffff8bd099a0   416  ldr x16, pc+1384 (addr 0x0000ffff8bd09f08)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd099a4   420  and csp, jssp, #0xfffffffffffffff0
0xffff8bd099a8   424  blr x16
0xffff8bd099ac   428  ldp d2, d3, [jssp, #16]
0xffff8bd099b0   432  ldp d0, d1, [jssp], #32
0xffff8bd099b4   436  ldp d6, d7, [jssp, #16]
0xffff8bd099b8   440  ldp d4, d5, [jssp], #32
0xffff8bd099bc   444  ldp d18, d19, [jssp, #16]
0xffff8bd099c0   448  ldp d16, d17, [jssp], #32
0xffff8bd099c4   452  ldp d22, d23, [jssp, #16]
0xffff8bd099c8   456  ldp d20, d21, [jssp], #32
0xffff8bd099cc   460  ldp d26, d27, [jssp, #16]
0xffff8bd099d0   464  ldp d24, d25, [jssp], #32
0xffff8bd099d4   468  ldp d28, d29, [jssp], #16
0xffff8bd099d8   472  ldp x5, x6, [jssp, #16]
0xffff8bd099dc   476  ldp x2, x4, [jssp], #32
0xffff8bd099e0   480  ldp x9, x10, [jssp, #16]
0xffff8bd099e4   484  ldp x7, x8, [jssp], #32
0xffff8bd099e8   488  ldp x13, x14, [jssp, #16]
0xffff8bd099ec   492  ldp x11, x12, [jssp], #32
0xffff8bd099f0   496  ldr lr, [jssp, #16]
0xffff8bd099f4   500  ldp x15, x18, [jssp], #24
0xffff8bd099f8   504  ldp x1, x0, [jssp], #16
0xffff8bd099fc   508  ldr x16, pc+1300 (addr 0x0000ffff8bd09f10)    ;; external reference (store_buffer_top)
0xffff8bd09a00   512  ldr x3, [x16]
0xffff8bd09a04   516  str x4, [x3], #8
0xffff8bd09a08   520  str x3, [x16]
0xffff8bd09a0c   524  tst x3, #0x1ffff
0xffff8bd09a10   528  b.eq #+0x8 (addr 0xffff8bd09a18)
0xffff8bd09a14   532  ret
0xffff8bd09a18   536  sub csp, jssp, #0x8 (8)
0xffff8bd09a1c   540  str lr, [jssp, #-8]!
0xffff8bd09a20   544  ldr x17, pc+1272 (addr 0x0000ffff8bd09f18)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd09a24   548  blr x17
0xffff8bd09a28   552  ldr lr, [jssp], #8
0xffff8bd09a2c   556  ret
0xffff8bd09a30   560  and x3, x7, #0xfffffffffff00000
0xffff8bd09a34   564  ldr x0, [x3, #104]
0xffff8bd09a38   568  subs x0, x0, #0x1 (1)
0xffff8bd09a3c   572  str x0, [x3, #104]
0xffff8bd09a40   576  b.mi #+0x64 (addr 0xffff8bd09aa4)
0xffff8bd09a44   580  ubfx x16, x7, #8, #12
0xffff8bd09a48   584  and x3, x7, #0xfffffffffff00000
0xffff8bd09a4c   588  add x3, x3, x16, lsl #2
0xffff8bd09a50   592  ubfx x0, x7, #3, #5
0xffff8bd09a54   596  ldr x3, [x3, #360]
0xffff8bd09a58   600  lsr x3, x3, x0
0xffff8bd09a5c   604  tbz w3, #0, #+0x8 (addr 0xffff8bd09a64)
0xffff8bd09a60   608  tbnz w3, #1, #+0xc (addr 0xffff8bd09a6c)
0xffff8bd09a64   612  ldp x1, x0, [jssp], #16
0xffff8bd09a68   616  ret
0xffff8bd09a6c   620  ldr x3, [x4]
0xffff8bd09a70   624  sub csp, jssp, #0x10 (16)
0xffff8bd09a74   628  stp x7, x4, [jssp, #-16]!
0xffff8bd09a78   632  ubfx x16, x3, #8, #12
0xffff8bd09a7c   636  and x0, x3, #0xfffffffffff00000
0xffff8bd09a80   640  add x0, x0, x16, lsl #2
0xffff8bd09a84   644  ubfx x7, x3, #3, #5
0xffff8bd09a88   648  ldr x4, [x0, #360]
0xffff8bd09a8c   652  lsr x4, x4, x7
0xffff8bd09a90   656  tbz w4, #0, #+0x10 (addr 0xffff8bd09aa0)
0xffff8bd09a94   660  ldp x7, x4, [jssp], #16
0xffff8bd09a98   664  ldp x1, x0, [jssp], #16
0xffff8bd09a9c   668  ret
0xffff8bd09aa0   672  ldp x7, x4, [jssp], #16
0xffff8bd09aa4   676  sub csp, jssp, #0x78 (120)
0xffff8bd09aa8   680  stp x14, x15, [jssp, #-32]!
0xffff8bd09aac   684  stp x18, lr, [jssp, #16]
0xffff8bd09ab0   688  stp x10, x11, [jssp, #-32]!
0xffff8bd09ab4   692  stp x12, x13, [jssp, #16]
0xffff8bd09ab8   696  stp x6, x7, [jssp, #-32]!
0xffff8bd09abc   700  stp x8, x9, [jssp, #16]
0xffff8bd09ac0   704  stp x2, x4, [jssp, #-24]!
0xffff8bd09ac4   708  str x5, [jssp, #16]
0xffff8bd09ac8   712  sub csp, jssp, #0xb0 (176)
0xffff8bd09acc   716  stp d26, d27, [jssp, #-32]!
0xffff8bd09ad0   720  stp d28, d29, [jssp, #16]
0xffff8bd09ad4   724  stp d22, d23, [jssp, #-32]!
0xffff8bd09ad8   728  stp d24, d25, [jssp, #16]
0xffff8bd09adc   732  stp d18, d19, [jssp, #-32]!
0xffff8bd09ae0   736  stp d20, d21, [jssp, #16]
0xffff8bd09ae4   740  stp d6, d7, [jssp, #-32]!
0xffff8bd09ae8   744  stp d16, d17, [jssp, #16]
0xffff8bd09aec   748  stp d2, d3, [jssp, #-32]!
0xffff8bd09af0   752  stp d4, d5, [jssp, #16]
0xffff8bd09af4   756  stp d0, d1, [jssp, #-16]!
0xffff8bd09af8   760  mov x0, x7
0xffff8bd09afc   764  mov x1, x4
0xffff8bd09b00   768  ldr x2, pc+1056 (addr 0x0000ffff8bd09f20)    ;; external reference (isolate)
0xffff8bd09b04   772  ldr x16, pc+1060 (addr 0x0000ffff8bd09f28)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd09b08   776  and csp, jssp, #0xfffffffffffffff0
0xffff8bd09b0c   780  blr x16
0xffff8bd09b10   784  ldp d2, d3, [jssp, #16]
0xffff8bd09b14   788  ldp d0, d1, [jssp], #32
0xffff8bd09b18   792  ldp d6, d7, [jssp, #16]
0xffff8bd09b1c   796  ldp d4, d5, [jssp], #32
0xffff8bd09b20   800  ldp d18, d19, [jssp, #16]
0xffff8bd09b24   804  ldp d16, d17, [jssp], #32
0xffff8bd09b28   808  ldp d22, d23, [jssp, #16]
0xffff8bd09b2c   812  ldp d20, d21, [jssp], #32
0xffff8bd09b30   816  ldp d26, d27, [jssp, #16]
0xffff8bd09b34   820  ldp d24, d25, [jssp], #32
0xffff8bd09b38   824  ldp d28, d29, [jssp], #16
0xffff8bd09b3c   828  ldp x5, x6, [jssp, #16]
0xffff8bd09b40   832  ldp x2, x4, [jssp], #32
0xffff8bd09b44   836  ldp x9, x10, [jssp, #16]
0xffff8bd09b48   840  ldp x7, x8, [jssp], #32
0xffff8bd09b4c   844  ldp x13, x14, [jssp, #16]
0xffff8bd09b50   848  ldp x11, x12, [jssp], #32
0xffff8bd09b54   852  ldr lr, [jssp, #16]
0xffff8bd09b58   856  ldp x15, x18, [jssp], #24
0xffff8bd09b5c   860  ldp x1, x0, [jssp], #16
0xffff8bd09b60   864  ret
0xffff8bd09b64   868  sub csp, jssp, #0x10 (16)
0xffff8bd09b68   872  stp x1, x0, [jssp, #-16]!
0xffff8bd09b6c   876  ldr x3, [x4]
0xffff8bd09b70   880  and x16, x3, #0xfffffffffff00000
0xffff8bd09b74   884  ldr x16, [x16, #8]
0xffff8bd09b78   888  tst x16, #0x18
0xffff8bd09b7c   892  b.eq #+0x1f8 (addr 0xffff8bd09d74)
0xffff8bd09b80   896  and x16, x7, #0xfffffffffff00000
0xffff8bd09b84   900  ldr x16, [x16, #8]
0xffff8bd09b88   904  tst x16, #0x18
0xffff8bd09b8c   908  b.ne #+0x1e8 (addr 0xffff8bd09d74)
0xffff8bd09b90   912  and x3, x7, #0xfffffffffff00000
0xffff8bd09b94   916  ldr x0, [x3, #104]
0xffff8bd09b98   920  subs x0, x0, #0x1 (1)
0xffff8bd09b9c   924  str x0, [x3, #104]
0xffff8bd09ba0   928  b.mi #+0xe4 (addr 0xffff8bd09c84)
0xffff8bd09ba4   932  ubfx x16, x7, #8, #12
0xffff8bd09ba8   936  and x3, x7, #0xfffffffffff00000
0xffff8bd09bac   940  add x3, x3, x16, lsl #2
0xffff8bd09bb0   944  ubfx x0, x7, #3, #5
0xffff8bd09bb4   948  ldr x3, [x3, #360]
0xffff8bd09bb8   952  lsr x3, x3, x0
0xffff8bd09bbc   956  tbz w3, #0, #+0x8 (addr 0xffff8bd09bc4)
0xffff8bd09bc0   960  tbnz w3, #1, #+0x3c (addr 0xffff8bd09bfc)
0xffff8bd09bc4   964  ldp x1, x0, [jssp], #16
0xffff8bd09bc8   968  ldr x16, pc+872 (addr 0x0000ffff8bd09f30)    ;; external reference (store_buffer_top)
0xffff8bd09bcc   972  ldr x3, [x16]
0xffff8bd09bd0   976  str x4, [x3], #8
0xffff8bd09bd4   980  str x3, [x16]
0xffff8bd09bd8   984  tst x3, #0x1ffff
0xffff8bd09bdc   988  b.eq #+0x8 (addr 0xffff8bd09be4)
0xffff8bd09be0   992  ret
0xffff8bd09be4   996  sub csp, jssp, #0x8 (8)
0xffff8bd09be8  1000  str lr, [jssp, #-8]!
0xffff8bd09bec  1004  ldr x17, pc+844 (addr 0x0000ffff8bd09f38)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd09bf0  1008  blr x17
0xffff8bd09bf4  1012  ldr lr, [jssp], #8
0xffff8bd09bf8  1016  ret
0xffff8bd09bfc  1020  ldr x3, [x4]
0xffff8bd09c00  1024  and x0, x3, #0xfffffffffff00000
0xffff8bd09c04  1028  ldr x0, [x0, #8]
0xffff8bd09c08  1032  tbz w0, #6, #+0x18 (addr 0xffff8bd09c20)
0xffff8bd09c0c  1036  and x0, x7, #0xfffffffffff00000
0xffff8bd09c10  1040  ldr x0, [x0, #8]
0xffff8bd09c14  1044  movz x16, #0x58
0xffff8bd09c18  1048  tst x0, x16
0xffff8bd09c1c  1052  b.eq #+0x68 (addr 0xffff8bd09c84)
0xffff8bd09c20  1056  sub csp, jssp, #0x10 (16)
0xffff8bd09c24  1060  stp x7, x4, [jssp, #-16]!
0xffff8bd09c28  1064  ubfx x16, x3, #8, #12
0xffff8bd09c2c  1068  and x0, x3, #0xfffffffffff00000
0xffff8bd09c30  1072  add x0, x0, x16, lsl #2
0xffff8bd09c34  1076  ubfx x7, x3, #3, #5
0xffff8bd09c38  1080  ldr x4, [x0, #360]
0xffff8bd09c3c  1084  lsr x4, x4, x7
0xffff8bd09c40  1088  tbz w4, #0, #+0x40 (addr 0xffff8bd09c80)
0xffff8bd09c44  1092  ldp x7, x4, [jssp], #16
0xffff8bd09c48  1096  ldp x1, x0, [jssp], #16
0xffff8bd09c4c  1100  ldr x16, pc+756 (addr 0x0000ffff8bd09f40)    ;; external reference (store_buffer_top)
0xffff8bd09c50  1104  ldr x3, [x16]
0xffff8bd09c54  1108  str x4, [x3], #8
0xffff8bd09c58  1112  str x3, [x16]
0xffff8bd09c5c  1116  tst x3, #0x1ffff
0xffff8bd09c60  1120  b.eq #+0x8 (addr 0xffff8bd09c68)
0xffff8bd09c64  1124  ret
0xffff8bd09c68  1128  sub csp, jssp, #0x8 (8)
0xffff8bd09c6c  1132  str lr, [jssp, #-8]!
0xffff8bd09c70  1136  ldr x17, pc+728 (addr 0x0000ffff8bd09f48)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd09c74  1140  blr x17
0xffff8bd09c78  1144  ldr lr, [jssp], #8
0xffff8bd09c7c  1148  ret
0xffff8bd09c80  1152  ldp x7, x4, [jssp], #16
0xffff8bd09c84  1156  sub csp, jssp, #0x78 (120)
0xffff8bd09c88  1160  stp x14, x15, [jssp, #-32]!
0xffff8bd09c8c  1164  stp x18, lr, [jssp, #16]
0xffff8bd09c90  1168  stp x10, x11, [jssp, #-32]!
0xffff8bd09c94  1172  stp x12, x13, [jssp, #16]
0xffff8bd09c98  1176  stp x6, x7, [jssp, #-32]!
0xffff8bd09c9c  1180  stp x8, x9, [jssp, #16]
0xffff8bd09ca0  1184  stp x2, x4, [jssp, #-24]!
0xffff8bd09ca4  1188  str x5, [jssp, #16]
0xffff8bd09ca8  1192  sub csp, jssp, #0xb0 (176)
0xffff8bd09cac  1196  stp d26, d27, [jssp, #-32]!
0xffff8bd09cb0  1200  stp d28, d29, [jssp, #16]
0xffff8bd09cb4  1204  stp d22, d23, [jssp, #-32]!
0xffff8bd09cb8  1208  stp d24, d25, [jssp, #16]
0xffff8bd09cbc  1212  stp d18, d19, [jssp, #-32]!
0xffff8bd09cc0  1216  stp d20, d21, [jssp, #16]
0xffff8bd09cc4  1220  stp d6, d7, [jssp, #-32]!
0xffff8bd09cc8  1224  stp d16, d17, [jssp, #16]
0xffff8bd09ccc  1228  stp d2, d3, [jssp, #-32]!
0xffff8bd09cd0  1232  stp d4, d5, [jssp, #16]
0xffff8bd09cd4  1236  stp d0, d1, [jssp, #-16]!
0xffff8bd09cd8  1240  mov x0, x7
0xffff8bd09cdc  1244  mov x1, x4
0xffff8bd09ce0  1248  ldr x2, pc+624 (addr 0x0000ffff8bd09f50)    ;; external reference (isolate)
0xffff8bd09ce4  1252  ldr x16, pc+628 (addr 0x0000ffff8bd09f58)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd09ce8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff8bd09cec  1260  blr x16
0xffff8bd09cf0  1264  ldp d2, d3, [jssp, #16]
0xffff8bd09cf4  1268  ldp d0, d1, [jssp], #32
0xffff8bd09cf8  1272  ldp d6, d7, [jssp, #16]
0xffff8bd09cfc  1276  ldp d4, d5, [jssp], #32
0xffff8bd09d00  1280  ldp d18, d19, [jssp, #16]
0xffff8bd09d04  1284  ldp d16, d17, [jssp], #32
0xffff8bd09d08  1288  ldp d22, d23, [jssp, #16]
0xffff8bd09d0c  1292  ldp d20, d21, [jssp], #32
0xffff8bd09d10  1296  ldp d26, d27, [jssp, #16]
0xffff8bd09d14  1300  ldp d24, d25, [jssp], #32
0xffff8bd09d18  1304  ldp d28, d29, [jssp], #16
0xffff8bd09d1c  1308  ldp x5, x6, [jssp, #16]
0xffff8bd09d20  1312  ldp x2, x4, [jssp], #32
0xffff8bd09d24  1316  ldp x9, x10, [jssp, #16]
0xffff8bd09d28  1320  ldp x7, x8, [jssp], #32
0xffff8bd09d2c  1324  ldp x13, x14, [jssp, #16]
0xffff8bd09d30  1328  ldp x11, x12, [jssp], #32
0xffff8bd09d34  1332  ldr lr, [jssp, #16]
0xffff8bd09d38  1336  ldp x15, x18, [jssp], #24
0xffff8bd09d3c  1340  ldp x1, x0, [jssp], #16
0xffff8bd09d40  1344  ldr x16, pc+544 (addr 0x0000ffff8bd09f60)    ;; external reference (store_buffer_top)
0xffff8bd09d44  1348  ldr x3, [x16]
0xffff8bd09d48  1352  str x4, [x3], #8
0xffff8bd09d4c  1356  str x3, [x16]
0xffff8bd09d50  1360  tst x3, #0x1ffff
0xffff8bd09d54  1364  b.eq #+0x8 (addr 0xffff8bd09d5c)
0xffff8bd09d58  1368  ret
0xffff8bd09d5c  1372  sub csp, jssp, #0x8 (8)
0xffff8bd09d60  1376  str lr, [jssp, #-8]!
0xffff8bd09d64  1380  ldr x17, pc+516 (addr 0x0000ffff8bd09f68)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd09d68  1384  blr x17
0xffff8bd09d6c  1388  ldr lr, [jssp], #8
0xffff8bd09d70  1392  ret
0xffff8bd09d74  1396  and x3, x7, #0xfffffffffff00000
0xffff8bd09d78  1400  ldr x0, [x3, #104]
0xffff8bd09d7c  1404  subs x0, x0, #0x1 (1)
0xffff8bd09d80  1408  str x0, [x3, #104]
0xffff8bd09d84  1412  b.mi #+0x84 (addr 0xffff8bd09e08)
0xffff8bd09d88  1416  ubfx x16, x7, #8, #12
0xffff8bd09d8c  1420  and x3, x7, #0xfffffffffff00000
0xffff8bd09d90  1424  add x3, x3, x16, lsl #2
0xffff8bd09d94  1428  ubfx x0, x7, #3, #5
0xffff8bd09d98  1432  ldr x3, [x3, #360]
0xffff8bd09d9c  1436  lsr x3, x3, x0
0xffff8bd09da0  1440  tbz w3, #0, #+0x8 (addr 0xffff8bd09da8)
0xffff8bd09da4  1444  tbnz w3, #1, #+0xc (addr 0xffff8bd09db0)
0xffff8bd09da8  1448  ldp x1, x0, [jssp], #16
0xffff8bd09dac  1452  ret
0xffff8bd09db0  1456  ldr x3, [x4]
0xffff8bd09db4  1460  and x0, x3, #0xfffffffffff00000
0xffff8bd09db8  1464  ldr x0, [x0, #8]
0xffff8bd09dbc  1468  tbz w0, #6, #+0x18 (addr 0xffff8bd09dd4)
0xffff8bd09dc0  1472  and x0, x7, #0xfffffffffff00000
0xffff8bd09dc4  1476  ldr x0, [x0, #8]
0xffff8bd09dc8  1480  movz x16, #0x58
0xffff8bd09dcc  1484  tst x0, x16
0xffff8bd09dd0  1488  b.eq #+0x38 (addr 0xffff8bd09e08)
0xffff8bd09dd4  1492  sub csp, jssp, #0x10 (16)
0xffff8bd09dd8  1496  stp x7, x4, [jssp, #-16]!
0xffff8bd09ddc  1500  ubfx x16, x3, #8, #12
0xffff8bd09de0  1504  and x0, x3, #0xfffffffffff00000
0xffff8bd09de4  1508  add x0, x0, x16, lsl #2
0xffff8bd09de8  1512  ubfx x7, x3, #3, #5
0xffff8bd09dec  1516  ldr x4, [x0, #360]
0xffff8bd09df0  1520  lsr x4, x4, x7
0xffff8bd09df4  1524  tbz w4, #0, #+0x10 (addr 0xffff8bd09e04)
0xffff8bd09df8  1528  ldp x7, x4, [jssp], #16
0xffff8bd09dfc  1532  ldp x1, x0, [jssp], #16
0xffff8bd09e00  1536  ret
0xffff8bd09e04  1540  ldp x7, x4, [jssp], #16
0xffff8bd09e08  1544  sub csp, jssp, #0x78 (120)
0xffff8bd09e0c  1548  stp x14, x15, [jssp, #-32]!
0xffff8bd09e10  1552  stp x18, lr, [jssp, #16]
0xffff8bd09e14  1556  stp x10, x11, [jssp, #-32]!
0xffff8bd09e18  1560  stp x12, x13, [jssp, #16]
0xffff8bd09e1c  1564  stp x6, x7, [jssp, #-32]!
0xffff8bd09e20  1568  stp x8, x9, [jssp, #16]
0xffff8bd09e24  1572  stp x2, x4, [jssp, #-24]!
0xffff8bd09e28  1576  str x5, [jssp, #16]
0xffff8bd09e2c  1580  sub csp, jssp, #0xb0 (176)
0xffff8bd09e30  1584  stp d26, d27, [jssp, #-32]!
0xffff8bd09e34  1588  stp d28, d29, [jssp, #16]
0xffff8bd09e38  1592  stp d22, d23, [jssp, #-32]!
0xffff8bd09e3c  1596  stp d24, d25, [jssp, #16]
0xffff8bd09e40  1600  stp d18, d19, [jssp, #-32]!
0xffff8bd09e44  1604  stp d20, d21, [jssp, #16]
0xffff8bd09e48  1608  stp d6, d7, [jssp, #-32]!
0xffff8bd09e4c  1612  stp d16, d17, [jssp, #16]
0xffff8bd09e50  1616  stp d2, d3, [jssp, #-32]!
0xffff8bd09e54  1620  stp d4, d5, [jssp, #16]
0xffff8bd09e58  1624  stp d0, d1, [jssp, #-16]!
0xffff8bd09e5c  1628  mov x0, x7
0xffff8bd09e60  1632  mov x1, x4
0xffff8bd09e64  1636  ldr x2, pc+268 (addr 0x0000ffff8bd09f70)    ;; external reference (isolate)
0xffff8bd09e68  1640  ldr x16, pc+272 (addr 0x0000ffff8bd09f78)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd09e6c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff8bd09e70  1648  blr x16
0xffff8bd09e74  1652  ldp d2, d3, [jssp, #16]
0xffff8bd09e78  1656  ldp d0, d1, [jssp], #32
0xffff8bd09e7c  1660  ldp d6, d7, [jssp, #16]
0xffff8bd09e80  1664  ldp d4, d5, [jssp], #32
0xffff8bd09e84  1668  ldp d18, d19, [jssp, #16]
0xffff8bd09e88  1672  ldp d16, d17, [jssp], #32
0xffff8bd09e8c  1676  ldp d22, d23, [jssp, #16]
0xffff8bd09e90  1680  ldp d20, d21, [jssp], #32
0xffff8bd09e94  1684  ldp d26, d27, [jssp, #16]
0xffff8bd09e98  1688  ldp d24, d25, [jssp], #32
0xffff8bd09e9c  1692  ldp d28, d29, [jssp], #16
0xffff8bd09ea0  1696  ldp x5, x6, [jssp, #16]
0xffff8bd09ea4  1700  ldp x2, x4, [jssp], #32
0xffff8bd09ea8  1704  ldp x9, x10, [jssp, #16]
0xffff8bd09eac  1708  ldp x7, x8, [jssp], #32
0xffff8bd09eb0  1712  ldp x13, x14, [jssp, #16]
0xffff8bd09eb4  1716  ldp x11, x12, [jssp], #32
0xffff8bd09eb8  1720  ldr lr, [jssp, #16]
0xffff8bd09ebc  1724  ldp x15, x18, [jssp], #24
0xffff8bd09ec0  1728  ldp x1, x0, [jssp], #16
0xffff8bd09ec4  1732  ret
0xffff8bd09ec8  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd09ecc  1740  d63f03e0       constant
0xffff8bd09ed0  1744  2cb8e8c0       constant
0xffff8bd09ed4  1748  00000000       constant
0xffff8bd09ed8  1752  8bd065a0       constant
0xffff8bd09edc  1756  0000ffff       constant
0xffff8bd09ee0  1760  2cb8e8c0       constant
0xffff8bd09ee4  1764  00000000       constant
0xffff8bd09ee8  1768  8bd065a0       constant
0xffff8bd09eec  1772  0000ffff       constant
0xffff8bd09ef0  1776  2cb8e8c0       constant
0xffff8bd09ef4  1780  00000000       constant
0xffff8bd09ef8  1784  8bd065a0       constant
0xffff8bd09efc  1788  0000ffff       constant
0xffff8bd09f00  1792  2cb8d2d0       constant
0xffff8bd09f04  1796  00000000       constant
0xffff8bd09f08  1800  00c2d958       constant
0xffff8bd09f0c  1804  00000000       constant
0xffff8bd09f10  1808  2cb8e8c0       constant
0xffff8bd09f14  1812  00000000       constant
0xffff8bd09f18  1816  8bd065a0       constant
0xffff8bd09f1c  1820  0000ffff       constant
0xffff8bd09f20  1824  2cb8d2d0       constant
0xffff8bd09f24  1828  00000000       constant
0xffff8bd09f28  1832  00c2d958       constant
0xffff8bd09f2c  1836  00000000       constant
0xffff8bd09f30  1840  2cb8e8c0       constant
0xffff8bd09f34  1844  00000000       constant
0xffff8bd09f38  1848  8bd065a0       constant
0xffff8bd09f3c  1852  0000ffff       constant
0xffff8bd09f40  1856  2cb8e8c0       constant
0xffff8bd09f44  1860  00000000       constant
0xffff8bd09f48  1864  8bd065a0       constant
0xffff8bd09f4c  1868  0000ffff       constant
0xffff8bd09f50  1872  2cb8d2d0       constant
0xffff8bd09f54  1876  00000000       constant
0xffff8bd09f58  1880  00c2d958       constant
0xffff8bd09f5c  1884  00000000       constant
0xffff8bd09f60  1888  2cb8e8c0       constant
0xffff8bd09f64  1892  00000000       constant
0xffff8bd09f68  1896  8bd065a0       constant
0xffff8bd09f6c  1900  0000ffff       constant
0xffff8bd09f70  1904  2cb8d2d0       constant
0xffff8bd09f74  1908  00000000       constant
0xffff8bd09f78  1912  00c2d958       constant
0xffff8bd09f7c  1916  00000000       constant


RelocInfo (size = 65)
0xffff8bd09808  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0982c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd098a4  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd098c8  code target (STUB)  (0xffff8bd065a0)
0xffff8bd09908  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0992c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0999c  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd099a0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd099fc  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd09a20  code target (STUB)  (0xffff8bd065a0)
0xffff8bd09b00  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd09b04  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd09bc8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd09bec  code target (STUB)  (0xffff8bd065a0)
0xffff8bd09c4c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd09c70  code target (STUB)  (0xffff8bd065a0)
0xffff8bd09ce0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd09ce4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd09d40  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd09d64  code target (STUB)  (0xffff8bd065a0)
0xffff8bd09e64  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd09e68  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd09ec8  constant pool (size 184)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 690)
0xffff8bd09fe0     0  movz x16, #0xa00000000
0xffff8bd09fe4     4  sub csp, jssp, #0x10 (16)
0xffff8bd09fe8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd09fec    12  mov fp, jssp
0xffff8bd09ff0    16  sub csp, jssp, #0x8 (8)
0xffff8bd09ff4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd09ff8    24  stur x16, [fp, #-8]
0xffff8bd09ffc    28  movz w16, #0x257f
0xffff8bd0a000    32  cmp w0, w16, lsl #3
0xffff8bd0a004    36  b.hs #+0x234 (addr 0xffff8bd0a238)
0xffff8bd0a008    40  lsl x3, x0, #32
0xffff8bd0a00c    44  lsl w4, w0, #3
0xffff8bd0a010    48  add w4, w4, #0x10 (16)
0xffff8bd0a014    52  cmp w4, #0x96000 (614400)
0xffff8bd0a018    56  b.hs #+0x228 (addr 0xffff8bd0a240)
0xffff8bd0a01c    60  movz x6, #0xe2c0
0xffff8bd0a020    64  movk x6, #0x2cb8, lsl #16
0xffff8bd0a024    68  ldp x7, x5, [x6]
0xffff8bd0a028    72  adds x16, x7, #0x30 (48)
0xffff8bd0a02c    76  ccmp x16, x5, #nzCv, lo
0xffff8bd0a030    80  b.hi #+0x114 (addr 0xffff8bd0a144)
0xffff8bd0a034    84  str x16, [x6]
0xffff8bd0a038    88  orr x7, x7, #0x1
0xffff8bd0a03c    92  ldur x5, [x1, #23]
0xffff8bd0a040    96  stur x5, [x7, #-1]
0xffff8bd0a044   100  ldr x5, pc+404 (addr 0x0000ffff8bd0a1d8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a048   104  stur x5, [x7, #7]
0xffff8bd0a04c   108  ldr x5, pc+404 (addr 0x0000ffff8bd0a1e0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a050   112  stur x5, [x7, #15]
0xffff8bd0a054   116  stur x3, [x7, #23]
0xffff8bd0a058   120  add x5, x7, #0x20 (32)
0xffff8bd0a05c   124  ldr x6, pc+396 (addr 0x0000ffff8bd0a1e8)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd0a060   128  stur x6, [x5, #-1]
0xffff8bd0a064   132  stur x2, [x5, #7]
0xffff8bd0a068   136  ldur w5, [x2, #35]
0xffff8bd0a06c   140  add w5, w5, #0x1 (1)
0xffff8bd0a070   144  lsl x5, x5, #32
0xffff8bd0a074   148  stur x5, [x2, #31]
0xffff8bd0a078   152  sxtw x4, w4
0xffff8bd0a07c   156  movz x5, #0xe2c0
0xffff8bd0a080   160  movk x5, #0x2cb8, lsl #16
0xffff8bd0a084   164  ldp x8, x16, [x5]
0xffff8bd0a088   168  adds x6, x8, x4
0xffff8bd0a08c   172  ccmp x6, x16, #nzCv, lo
0xffff8bd0a090   176  b.hi #+0xf8 (addr 0xffff8bd0a188)
0xffff8bd0a094   180  str x6, [x5]
0xffff8bd0a098   184  orr x8, x8, #0x1
0xffff8bd0a09c   188  ldr x4, pc+340 (addr 0x0000ffff8bd0a1f0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd0a0a0   192  stur x4, [x8, #-1]
0xffff8bd0a0a4   196  stur x3, [x8, #7]
0xffff8bd0a0a8   200  mov x3, x8
0xffff8bd0a0ac   204  stur x3, [x7, #15]
0xffff8bd0a0b0   208  add x4, x7, #0xf (15)
0xffff8bd0a0b4   212  and x3, x7, #0xfffffffffff00000
0xffff8bd0a0b8   216  ldr x3, [x3, #8]
0xffff8bd0a0bc   220  tbz w3, #2, #+0xc (addr 0xffff8bd0a0c8)
0xffff8bd0a0c0   224  ldr x16, pc+312 (addr 0x0000ffff8bd0a1f8)    ;; code: STUB, RecordWriteStub, minor: 69735
0xffff8bd0a0c4   228  blr x16
0xffff8bd0a0c8   232  mov x3, x0
0xffff8bd0a0cc   236  cmp w3, #0x0 (0)
0xffff8bd0a0d0   240  b.le #+0x18 (addr 0xffff8bd0a0e8)
0xffff8bd0a0d4   244  sub w3, w3, #0x1 (1)
0xffff8bd0a0d8   248  ldr x4, pc+296 (addr 0x0000ffff8bd0a200)    ;; object: 0x26c04519 <the hole>
0xffff8bd0a0dc   252  add x5, x8, #0xf (15)
0xffff8bd0a0e0   256  str x4, [x5, w3, sxtw #3]
0xffff8bd0a0e4   260  b #-0x18 (addr 0xffff8bd0a0cc)
0xffff8bd0a0e8   264  ldr x3, [fp]
0xffff8bd0a0ec   268  ldur x4, [x3, #-8]
0xffff8bd0a0f0   272  movz x16, #0xe00000000
0xffff8bd0a0f4   276  cmp x4, x16
0xffff8bd0a0f8   280  csel x4, fp, x3, ne
0xffff8bd0a0fc   284  movz x3, #0x0
0xffff8bd0a100   288  cmp w0, w3
0xffff8bd0a104   292  b.le #+0x24 (addr 0xffff8bd0a128)
0xffff8bd0a108   296  sub w5, w0, w3
0xffff8bd0a10c   300  add w5, w5, #0x1 (1)
0xffff8bd0a110   304  ldr x5, [x4, w5, uxtw #3]
0xffff8bd0a114   308  tbnz w5, #0, #+0x134 (addr 0xffff8bd0a248)
0xffff8bd0a118   312  add x6, x8, #0xf (15)
0xffff8bd0a11c   316  str x5, [x6, w3, sxtw #3]
0xffff8bd0a120   320  add w3, w3, #0x1 (1)
0xffff8bd0a124   324  b #-0x24 (addr 0xffff8bd0a100)
0xffff8bd0a128   328  add w0, w0, #0x1 (1)
0xffff8bd0a12c   332  lsl x1, x0, #32
0xffff8bd0a130   336  mov x0, x7
0xffff8bd0a134   340  mov jssp, fp
0xffff8bd0a138   344  ldp fp, lr, [jssp], #16
0xffff8bd0a13c   348  add jssp, jssp, x1, lsr #29
0xffff8bd0a140   352  ret
0xffff8bd0a144   356  movz x7, #0x0
0xffff8bd0a148   360  mov x16, lr
0xffff8bd0a14c   364  ldr x17, pc+188 (addr 0x0000ffff8bd0a208)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0a150   368  blr x17
0xffff8bd0a154   372  movz x0, #0x3000000000
0xffff8bd0a158   376  movz x10, #0x0
0xffff8bd0a15c   380  sub csp, jssp, #0x10 (16)
0xffff8bd0a160   384  stp x10, x0, [jssp, #-16]!
0xffff8bd0a164   388  movz x0, #0x2
0xffff8bd0a168   392  movz x1, #0x5b88
0xffff8bd0a16c   396  movk x1, #0xe2, lsl #16
0xffff8bd0a170   400  ldr x16, pc+160 (addr 0x0000ffff8bd0a210)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0a174   404  blr x16
0xffff8bd0a178   408  str x0, [jssp, #56]
0xffff8bd0a17c   412  ldr x16, pc+156 (addr 0x0000ffff8bd0a218)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0a180   416  blr x16
0xffff8bd0a184   420  b #-0x148 (addr 0xffff8bd0a03c)
0xffff8bd0a188   424  movz x8, #0x0
0xffff8bd0a18c   428  mov x16, lr
0xffff8bd0a190   432  ldr x17, pc+144 (addr 0x0000ffff8bd0a220)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0a194   436  blr x17
0xffff8bd0a198   440  lsl x0, x4, #32
0xffff8bd0a19c   444  movz x10, #0x0
0xffff8bd0a1a0   448  sub csp, jssp, #0x10 (16)
0xffff8bd0a1a4   452  stp x10, x0, [jssp, #-16]!
0xffff8bd0a1a8   456  movz x0, #0x2
0xffff8bd0a1ac   460  movz x1, #0x5b88
0xffff8bd0a1b0   464  movk x1, #0xe2, lsl #16
0xffff8bd0a1b4   468  ldr x16, pc+116 (addr 0x0000ffff8bd0a228)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0a1b8   472  blr x16
0xffff8bd0a1bc   476  str x0, [jssp, #64]
0xffff8bd0a1c0   480  ldr x16, pc+112 (addr 0x0000ffff8bd0a230)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0a1c4   484  blr x16
0xffff8bd0a1c8   488  b #-0x12c (addr 0xffff8bd0a09c)
0xffff8bd0a1cc   492  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff8bd0a1d0   496  d63f03e0       constant
0xffff8bd0a1d4   500  d503201f       constant
0xffff8bd0a1d8   504  26c04201       constant
0xffff8bd0a1dc   508  00000000       constant
0xffff8bd0a1e0   512  26c04201       constant
0xffff8bd0a1e4   516  00000000       constant
0xffff8bd0a1e8   520  5f505d81       constant
0xffff8bd0a1ec   524  00000000       constant
0xffff8bd0a1f0   528  5f504259       constant
0xffff8bd0a1f4   532  00000000       constant
0xffff8bd0a1f8   536  8bd09800       constant
0xffff8bd0a1fc   540  0000ffff       constant
0xffff8bd0a200   544  26c04519       constant
0xffff8bd0a204   548  00000000       constant
0xffff8bd0a208   552  8bd06820       constant
0xffff8bd0a20c   556  0000ffff       constant
0xffff8bd0a210   560  8bd06260       constant
0xffff8bd0a214   564  0000ffff       constant
0xffff8bd0a218   568  8bd068e0       constant
0xffff8bd0a21c   572  0000ffff       constant
0xffff8bd0a220   576  8bd06820       constant
0xffff8bd0a224   580  0000ffff       constant
0xffff8bd0a228   584  8bd06260       constant
0xffff8bd0a22c   588  0000ffff       constant
0xffff8bd0a230   592  8bd068e0       constant
0xffff8bd0a234   596  0000ffff       constant
0xffff8bd0a238   600  movz x16, #0x0
0xffff8bd0a23c   604  bl #+0x14 (addr 0xffff8bd0a250)
0xffff8bd0a240   608  movz x16, #0x8
0xffff8bd0a244   612  bl #+0xc (addr 0xffff8bd0a250)
0xffff8bd0a248   616  movz x16, #0x10
0xffff8bd0a24c   620  bl #+0x4 (addr 0xffff8bd0a250)
0xffff8bd0a250   624  ldr x17, pc+24 (addr 0x0000ffff8bd0a268)    ;; lazy deoptimization bailout 0
0xffff8bd0a254   628  add x17, x17, x16
0xffff8bd0a258   632  br x17
0xffff8bd0a25c   636  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0a260   640  d63f03e0       constant
0xffff8bd0a264   644  d503201f       constant
0xffff8bd0a268   648  8bb06000       constant
0xffff8bd0a26c   652  0000ffff       constant


Safepoints (size = 34)
0xffff8bd0a178   408  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd0a1bc   476  000 | x1 | x2 | x7 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff8bd0a044  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a04c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a05c  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0a09c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0a0c0  code target (STUB)  (0xffff8bd09800)
0xffff8bd0a0d8  embedded object  (0x26c04519 <the hole>)
0xffff8bd0a14c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0a170  code target (STUB)  (0xffff8bd06260)
0xffff8bd0a17c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0a190  code target (STUB)  (0xffff8bd06820)
0xffff8bd0a1b4  code target (STUB)  (0xffff8bd06260)
0xffff8bd0a1c0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0a1cc  constant pool (size 108)
0xffff8bd0a250  runtime entry
0xffff8bd0a25c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 690)
0xffff8bd09fe0     0  movz x16, #0xa00000000
0xffff8bd09fe4     4  sub csp, jssp, #0x10 (16)
0xffff8bd09fe8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd09fec    12  mov fp, jssp
0xffff8bd09ff0    16  sub csp, jssp, #0x8 (8)
0xffff8bd09ff4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd09ff8    24  stur x16, [fp, #-8]
0xffff8bd09ffc    28  movz w16, #0x257f
0xffff8bd0a000    32  cmp w0, w16, lsl #3
0xffff8bd0a004    36  b.hs #+0x234 (addr 0xffff8bd0a238)
0xffff8bd0a008    40  lsl x3, x0, #32
0xffff8bd0a00c    44  lsl w4, w0, #3
0xffff8bd0a010    48  add w4, w4, #0x10 (16)
0xffff8bd0a014    52  cmp w4, #0x96000 (614400)
0xffff8bd0a018    56  b.hs #+0x228 (addr 0xffff8bd0a240)
0xffff8bd0a01c    60  movz x6, #0xe2c0
0xffff8bd0a020    64  movk x6, #0x2cb8, lsl #16
0xffff8bd0a024    68  ldp x7, x5, [x6]
0xffff8bd0a028    72  adds x16, x7, #0x30 (48)
0xffff8bd0a02c    76  ccmp x16, x5, #nzCv, lo
0xffff8bd0a030    80  b.hi #+0x114 (addr 0xffff8bd0a144)
0xffff8bd0a034    84  str x16, [x6]
0xffff8bd0a038    88  orr x7, x7, #0x1
0xffff8bd0a03c    92  ldur x5, [x1, #23]
0xffff8bd0a040    96  stur x5, [x7, #-1]
0xffff8bd0a044   100  ldr x5, pc+404 (addr 0x0000ffff8bd0a1d8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a048   104  stur x5, [x7, #7]
0xffff8bd0a04c   108  ldr x5, pc+404 (addr 0x0000ffff8bd0a1e0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a050   112  stur x5, [x7, #15]
0xffff8bd0a054   116  stur x3, [x7, #23]
0xffff8bd0a058   120  add x5, x7, #0x20 (32)
0xffff8bd0a05c   124  ldr x6, pc+396 (addr 0x0000ffff8bd0a1e8)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd0a060   128  stur x6, [x5, #-1]
0xffff8bd0a064   132  stur x2, [x5, #7]
0xffff8bd0a068   136  ldur w5, [x2, #35]
0xffff8bd0a06c   140  add w5, w5, #0x1 (1)
0xffff8bd0a070   144  lsl x5, x5, #32
0xffff8bd0a074   148  stur x5, [x2, #31]
0xffff8bd0a078   152  sxtw x4, w4
0xffff8bd0a07c   156  movz x5, #0xe2c0
0xffff8bd0a080   160  movk x5, #0x2cb8, lsl #16
0xffff8bd0a084   164  ldp x8, x16, [x5]
0xffff8bd0a088   168  adds x6, x8, x4
0xffff8bd0a08c   172  ccmp x6, x16, #nzCv, lo
0xffff8bd0a090   176  b.hi #+0xf8 (addr 0xffff8bd0a188)
0xffff8bd0a094   180  str x6, [x5]
0xffff8bd0a098   184  orr x8, x8, #0x1
0xffff8bd0a09c   188  ldr x4, pc+340 (addr 0x0000ffff8bd0a1f0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd0a0a0   192  stur x4, [x8, #-1]
0xffff8bd0a0a4   196  stur x3, [x8, #7]
0xffff8bd0a0a8   200  mov x3, x8
0xffff8bd0a0ac   204  stur x3, [x7, #15]
0xffff8bd0a0b0   208  add x4, x7, #0xf (15)
0xffff8bd0a0b4   212  and x3, x7, #0xfffffffffff00000
0xffff8bd0a0b8   216  ldr x3, [x3, #8]
0xffff8bd0a0bc   220  tbz w3, #2, #+0xc (addr 0xffff8bd0a0c8)
0xffff8bd0a0c0   224  ldr x16, pc+312 (addr 0x0000ffff8bd0a1f8)    ;; code: STUB, RecordWriteStub, minor: 69735
0xffff8bd0a0c4   228  blr x16
0xffff8bd0a0c8   232  mov x3, x0
0xffff8bd0a0cc   236  cmp w3, #0x0 (0)
0xffff8bd0a0d0   240  b.le #+0x18 (addr 0xffff8bd0a0e8)
0xffff8bd0a0d4   244  sub w3, w3, #0x1 (1)
0xffff8bd0a0d8   248  ldr x4, pc+296 (addr 0x0000ffff8bd0a200)    ;; object: 0x26c04519 <the hole>
0xffff8bd0a0dc   252  add x5, x8, #0xf (15)
0xffff8bd0a0e0   256  str x4, [x5, w3, sxtw #3]
0xffff8bd0a0e4   260  b #-0x18 (addr 0xffff8bd0a0cc)
0xffff8bd0a0e8   264  ldr x3, [fp]
0xffff8bd0a0ec   268  ldur x4, [x3, #-8]
0xffff8bd0a0f0   272  movz x16, #0xe00000000
0xffff8bd0a0f4   276  cmp x4, x16
0xffff8bd0a0f8   280  csel x4, fp, x3, ne
0xffff8bd0a0fc   284  movz x3, #0x0
0xffff8bd0a100   288  cmp w0, w3
0xffff8bd0a104   292  b.le #+0x24 (addr 0xffff8bd0a128)
0xffff8bd0a108   296  sub w5, w0, w3
0xffff8bd0a10c   300  add w5, w5, #0x1 (1)
0xffff8bd0a110   304  ldr x5, [x4, w5, uxtw #3]
0xffff8bd0a114   308  tbnz w5, #0, #+0x134 (addr 0xffff8bd0a248)
0xffff8bd0a118   312  add x6, x8, #0xf (15)
0xffff8bd0a11c   316  str x5, [x6, w3, sxtw #3]
0xffff8bd0a120   320  add w3, w3, #0x1 (1)
0xffff8bd0a124   324  b #-0x24 (addr 0xffff8bd0a100)
0xffff8bd0a128   328  add w0, w0, #0x1 (1)
0xffff8bd0a12c   332  lsl x1, x0, #32
0xffff8bd0a130   336  mov x0, x7
0xffff8bd0a134   340  mov jssp, fp
0xffff8bd0a138   344  ldp fp, lr, [jssp], #16
0xffff8bd0a13c   348  add jssp, jssp, x1, lsr #29
0xffff8bd0a140   352  ret
0xffff8bd0a144   356  movz x7, #0x0
0xffff8bd0a148   360  mov x16, lr
0xffff8bd0a14c   364  ldr x17, pc+188 (addr 0x0000ffff8bd0a208)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0a150   368  blr x17
0xffff8bd0a154   372  movz x0, #0x3000000000
0xffff8bd0a158   376  movz x10, #0x0
0xffff8bd0a15c   380  sub csp, jssp, #0x10 (16)
0xffff8bd0a160   384  stp x10, x0, [jssp, #-16]!
0xffff8bd0a164   388  movz x0, #0x2
0xffff8bd0a168   392  movz x1, #0x5b88
0xffff8bd0a16c   396  movk x1, #0xe2, lsl #16
0xffff8bd0a170   400  ldr x16, pc+160 (addr 0x0000ffff8bd0a210)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0a174   404  blr x16
0xffff8bd0a178   408  str x0, [jssp, #56]
0xffff8bd0a17c   412  ldr x16, pc+156 (addr 0x0000ffff8bd0a218)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0a180   416  blr x16
0xffff8bd0a184   420  b #-0x148 (addr 0xffff8bd0a03c)
0xffff8bd0a188   424  movz x8, #0x0
0xffff8bd0a18c   428  mov x16, lr
0xffff8bd0a190   432  ldr x17, pc+144 (addr 0x0000ffff8bd0a220)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0a194   436  blr x17
0xffff8bd0a198   440  lsl x0, x4, #32
0xffff8bd0a19c   444  movz x10, #0x0
0xffff8bd0a1a0   448  sub csp, jssp, #0x10 (16)
0xffff8bd0a1a4   452  stp x10, x0, [jssp, #-16]!
0xffff8bd0a1a8   456  movz x0, #0x2
0xffff8bd0a1ac   460  movz x1, #0x5b88
0xffff8bd0a1b0   464  movk x1, #0xe2, lsl #16
0xffff8bd0a1b4   468  ldr x16, pc+116 (addr 0x0000ffff8bd0a228)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0a1b8   472  blr x16
0xffff8bd0a1bc   476  str x0, [jssp, #64]
0xffff8bd0a1c0   480  ldr x16, pc+112 (addr 0x0000ffff8bd0a230)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0a1c4   484  blr x16
0xffff8bd0a1c8   488  b #-0x12c (addr 0xffff8bd0a09c)
0xffff8bd0a1cc   492  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff8bd0a1d0   496  d63f03e0       constant
0xffff8bd0a1d4   500  d503201f       constant
0xffff8bd0a1d8   504  26c04201       constant
0xffff8bd0a1dc   508  00000000       constant
0xffff8bd0a1e0   512  26c04201       constant
0xffff8bd0a1e4   516  00000000       constant
0xffff8bd0a1e8   520  5f505d81       constant
0xffff8bd0a1ec   524  00000000       constant
0xffff8bd0a1f0   528  5f504259       constant
0xffff8bd0a1f4   532  00000000       constant
0xffff8bd0a1f8   536  8bd09800       constant
0xffff8bd0a1fc   540  0000ffff       constant
0xffff8bd0a200   544  26c04519       constant
0xffff8bd0a204   548  00000000       constant
0xffff8bd0a208   552  8bd06820       constant
0xffff8bd0a20c   556  0000ffff       constant
0xffff8bd0a210   560  8bd06260       constant
0xffff8bd0a214   564  0000ffff       constant
0xffff8bd0a218   568  8bd068e0       constant
0xffff8bd0a21c   572  0000ffff       constant
0xffff8bd0a220   576  8bd06820       constant
0xffff8bd0a224   580  0000ffff       constant
0xffff8bd0a228   584  8bd06260       constant
0xffff8bd0a22c   588  0000ffff       constant
0xffff8bd0a230   592  8bd068e0       constant
0xffff8bd0a234   596  0000ffff       constant
0xffff8bd0a238   600  movz x16, #0x0
0xffff8bd0a23c   604  bl #+0x14 (addr 0xffff8bd0a250)
0xffff8bd0a240   608  movz x16, #0x8
0xffff8bd0a244   612  bl #+0xc (addr 0xffff8bd0a250)
0xffff8bd0a248   616  movz x16, #0x10
0xffff8bd0a24c   620  bl #+0x4 (addr 0xffff8bd0a250)
0xffff8bd0a250   624  ldr x17, pc+24 (addr 0x0000ffff8bd0a268)    ;; lazy deoptimization bailout 0
0xffff8bd0a254   628  add x17, x17, x16
0xffff8bd0a258   632  br x17
0xffff8bd0a25c   636  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0a260   640  d63f03e0       constant
0xffff8bd0a264   644  d503201f       constant
0xffff8bd0a268   648  8bb06000       constant
0xffff8bd0a26c   652  0000ffff       constant


Safepoints (size = 34)
0xffff8bd0a178   408  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd0a1bc   476  000 | x1 | x2 | x7 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff8bd0a044  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a04c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a05c  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0a09c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0a0c0  code target (STUB)  (0xffff8bd09800)
0xffff8bd0a0d8  embedded object  (0x26c04519 <the hole>)
0xffff8bd0a14c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0a170  code target (STUB)  (0xffff8bd06260)
0xffff8bd0a17c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0a190  code target (STUB)  (0xffff8bd06820)
0xffff8bd0a1b4  code target (STUB)  (0xffff8bd06260)
0xffff8bd0a1c0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0a1cc  constant pool (size 108)
0xffff8bd0a250  runtime entry
0xffff8bd0a25c  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 493)
0xffff8bd0a300     0  movz x16, #0xa00000000
0xffff8bd0a304     4  sub csp, jssp, #0x10 (16)
0xffff8bd0a308     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0a30c    12  mov fp, jssp
0xffff8bd0a310    16  sub csp, jssp, #0x8 (8)
0xffff8bd0a314    20  sub jssp, jssp, #0x8 (8)
0xffff8bd0a318    24  stur x16, [fp, #-8]
0xffff8bd0a31c    28  movz w16, #0x257f
0xffff8bd0a320    32  cmp w0, w16, lsl #3
0xffff8bd0a324    36  b.hs #+0x17c (addr 0xffff8bd0a4a0)
0xffff8bd0a328    40  lsl x3, x0, #32
0xffff8bd0a32c    44  lsl w4, w0, #3
0xffff8bd0a330    48  add w4, w4, #0x10 (16)
0xffff8bd0a334    52  cmp w4, #0x96000 (614400)
0xffff8bd0a338    56  b.hs #+0x170 (addr 0xffff8bd0a4a8)
0xffff8bd0a33c    60  add w4, w4, #0x20 (32)
0xffff8bd0a340    64  sxtw x4, w4
0xffff8bd0a344    68  movz x5, #0xe2c0
0xffff8bd0a348    72  movk x5, #0x2cb8, lsl #16
0xffff8bd0a34c    76  ldp x7, x16, [x5]
0xffff8bd0a350    80  adds x6, x7, x4
0xffff8bd0a354    84  ccmp x6, x16, #nzCv, lo
0xffff8bd0a358    88  b.hi #+0xc0 (addr 0xffff8bd0a418)
0xffff8bd0a35c    92  str x6, [x5]
0xffff8bd0a360    96  orr x7, x7, #0x1
0xffff8bd0a364   100  movz w4, #0x0
0xffff8bd0a368   104  stur x4, [x7, #31]
0xffff8bd0a36c   108  ldur x4, [x1, #23]
0xffff8bd0a370   112  stur x4, [x7, #-1]
0xffff8bd0a374   116  ldr x4, pc+244 (addr 0x0000ffff8bd0a468)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a378   120  stur x4, [x7, #7]
0xffff8bd0a37c   124  ldr x4, pc+244 (addr 0x0000ffff8bd0a470)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a380   128  stur x4, [x7, #15]
0xffff8bd0a384   132  stur x3, [x7, #23]
0xffff8bd0a388   136  add x4, x7, #0x20 (32)
0xffff8bd0a38c   140  ldr x5, pc+236 (addr 0x0000ffff8bd0a478)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd0a390   144  stur x5, [x4, #-1]
0xffff8bd0a394   148  stur x3, [x4, #7]
0xffff8bd0a398   152  stur x4, [x7, #15]
0xffff8bd0a39c   156  mov x3, x0
0xffff8bd0a3a0   160  cmp w3, #0x0 (0)
0xffff8bd0a3a4   164  b.le #+0x18 (addr 0xffff8bd0a3bc)
0xffff8bd0a3a8   168  sub w3, w3, #0x1 (1)
0xffff8bd0a3ac   172  ldr x5, pc+212 (addr 0x0000ffff8bd0a480)    ;; object: 0x26c04519 <the hole>
0xffff8bd0a3b0   176  add x6, x4, #0xf (15)
0xffff8bd0a3b4   180  str x5, [x6, w3, sxtw #3]
0xffff8bd0a3b8   184  b #-0x18 (addr 0xffff8bd0a3a0)
0xffff8bd0a3bc   188  ldr x3, [fp]
0xffff8bd0a3c0   192  ldur x5, [x3, #-8]
0xffff8bd0a3c4   196  movz x16, #0xe00000000
0xffff8bd0a3c8   200  cmp x5, x16
0xffff8bd0a3cc   204  csel x5, fp, x3, ne
0xffff8bd0a3d0   208  movz x3, #0x0
0xffff8bd0a3d4   212  cmp w0, w3
0xffff8bd0a3d8   216  b.le #+0x24 (addr 0xffff8bd0a3fc)
0xffff8bd0a3dc   220  sub w6, w0, w3
0xffff8bd0a3e0   224  add w6, w6, #0x1 (1)
0xffff8bd0a3e4   228  ldr x6, [x5, w6, uxtw #3]
0xffff8bd0a3e8   232  tbnz w6, #0, #+0xc8 (addr 0xffff8bd0a4b0)
0xffff8bd0a3ec   236  add x8, x4, #0xf (15)
0xffff8bd0a3f0   240  str x6, [x8, w3, sxtw #3]
0xffff8bd0a3f4   244  add w3, w3, #0x1 (1)
0xffff8bd0a3f8   248  b #-0x24 (addr 0xffff8bd0a3d4)
0xffff8bd0a3fc   252  add w0, w0, #0x1 (1)
0xffff8bd0a400   256  lsl x1, x0, #32
0xffff8bd0a404   260  mov x0, x7
0xffff8bd0a408   264  mov jssp, fp
0xffff8bd0a40c   268  ldp fp, lr, [jssp], #16
0xffff8bd0a410   272  add jssp, jssp, x1, lsr #29
0xffff8bd0a414   276  ret
0xffff8bd0a418   280  movz x7, #0x0
0xffff8bd0a41c   284  mov x16, lr
0xffff8bd0a420   288  ldr x17, pc+104 (addr 0x0000ffff8bd0a488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0a424   292  blr x17
0xffff8bd0a428   296  lsl x0, x4, #32
0xffff8bd0a42c   300  movz x10, #0x0
0xffff8bd0a430   304  sub csp, jssp, #0x10 (16)
0xffff8bd0a434   308  stp x10, x0, [jssp, #-16]!
0xffff8bd0a438   312  movz x0, #0x2
0xffff8bd0a43c   316  movz x1, #0x5b88
0xffff8bd0a440   320  movk x1, #0xe2, lsl #16
0xffff8bd0a444   324  ldr x16, pc+76 (addr 0x0000ffff8bd0a490)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0a448   328  blr x16
0xffff8bd0a44c   332  str x0, [jssp, #56]
0xffff8bd0a450   336  ldr x16, pc+72 (addr 0x0000ffff8bd0a498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0a454   340  blr x16
0xffff8bd0a458   344  b #-0xf4 (addr 0xffff8bd0a364)
0xffff8bd0a45c   348  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd0a460   352  d63f03e0       constant
0xffff8bd0a464   356  d503201f       constant
0xffff8bd0a468   360  26c04201       constant
0xffff8bd0a46c   364  00000000       constant
0xffff8bd0a470   368  26c04201       constant
0xffff8bd0a474   372  00000000       constant
0xffff8bd0a478   376  5f504259       constant
0xffff8bd0a47c   380  00000000       constant
0xffff8bd0a480   384  26c04519       constant
0xffff8bd0a484   388  00000000       constant
0xffff8bd0a488   392  8bd06820       constant
0xffff8bd0a48c   396  0000ffff       constant
0xffff8bd0a490   400  8bd06260       constant
0xffff8bd0a494   404  0000ffff       constant
0xffff8bd0a498   408  8bd068e0       constant
0xffff8bd0a49c   412  0000ffff       constant
0xffff8bd0a4a0   416  movz x16, #0x0
0xffff8bd0a4a4   420  bl #+0x14 (addr 0xffff8bd0a4b8)
0xffff8bd0a4a8   424  movz x16, #0x8
0xffff8bd0a4ac   428  bl #+0xc (addr 0xffff8bd0a4b8)
0xffff8bd0a4b0   432  movz x16, #0x10
0xffff8bd0a4b4   436  bl #+0x4 (addr 0xffff8bd0a4b8)
0xffff8bd0a4b8   440  ldr x17, pc+24 (addr 0x0000ffff8bd0a4d0)    ;; lazy deoptimization bailout 0
0xffff8bd0a4bc   444  add x17, x17, x16
0xffff8bd0a4c0   448  br x17
0xffff8bd0a4c4   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0a4c8   456  d63f03e0       constant
0xffff8bd0a4cc   460  d503201f       constant
0xffff8bd0a4d0   464  8bb06000       constant
0xffff8bd0a4d4   468  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0a44c   332  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd0a374  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a37c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a38c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0a3ac  embedded object  (0x26c04519 <the hole>)
0xffff8bd0a420  code target (STUB)  (0xffff8bd06820)
0xffff8bd0a444  code target (STUB)  (0xffff8bd06260)
0xffff8bd0a450  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0a45c  constant pool (size 68)
0xffff8bd0a4b8  runtime entry
0xffff8bd0a4c4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 493)
0xffff8bd0a300     0  movz x16, #0xa00000000
0xffff8bd0a304     4  sub csp, jssp, #0x10 (16)
0xffff8bd0a308     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0a30c    12  mov fp, jssp
0xffff8bd0a310    16  sub csp, jssp, #0x8 (8)
0xffff8bd0a314    20  sub jssp, jssp, #0x8 (8)
0xffff8bd0a318    24  stur x16, [fp, #-8]
0xffff8bd0a31c    28  movz w16, #0x257f
0xffff8bd0a320    32  cmp w0, w16, lsl #3
0xffff8bd0a324    36  b.hs #+0x17c (addr 0xffff8bd0a4a0)
0xffff8bd0a328    40  lsl x3, x0, #32
0xffff8bd0a32c    44  lsl w4, w0, #3
0xffff8bd0a330    48  add w4, w4, #0x10 (16)
0xffff8bd0a334    52  cmp w4, #0x96000 (614400)
0xffff8bd0a338    56  b.hs #+0x170 (addr 0xffff8bd0a4a8)
0xffff8bd0a33c    60  add w4, w4, #0x20 (32)
0xffff8bd0a340    64  sxtw x4, w4
0xffff8bd0a344    68  movz x5, #0xe2c0
0xffff8bd0a348    72  movk x5, #0x2cb8, lsl #16
0xffff8bd0a34c    76  ldp x7, x16, [x5]
0xffff8bd0a350    80  adds x6, x7, x4
0xffff8bd0a354    84  ccmp x6, x16, #nzCv, lo
0xffff8bd0a358    88  b.hi #+0xc0 (addr 0xffff8bd0a418)
0xffff8bd0a35c    92  str x6, [x5]
0xffff8bd0a360    96  orr x7, x7, #0x1
0xffff8bd0a364   100  movz w4, #0x0
0xffff8bd0a368   104  stur x4, [x7, #31]
0xffff8bd0a36c   108  ldur x4, [x1, #23]
0xffff8bd0a370   112  stur x4, [x7, #-1]
0xffff8bd0a374   116  ldr x4, pc+244 (addr 0x0000ffff8bd0a468)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a378   120  stur x4, [x7, #7]
0xffff8bd0a37c   124  ldr x4, pc+244 (addr 0x0000ffff8bd0a470)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a380   128  stur x4, [x7, #15]
0xffff8bd0a384   132  stur x3, [x7, #23]
0xffff8bd0a388   136  add x4, x7, #0x20 (32)
0xffff8bd0a38c   140  ldr x5, pc+236 (addr 0x0000ffff8bd0a478)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd0a390   144  stur x5, [x4, #-1]
0xffff8bd0a394   148  stur x3, [x4, #7]
0xffff8bd0a398   152  stur x4, [x7, #15]
0xffff8bd0a39c   156  mov x3, x0
0xffff8bd0a3a0   160  cmp w3, #0x0 (0)
0xffff8bd0a3a4   164  b.le #+0x18 (addr 0xffff8bd0a3bc)
0xffff8bd0a3a8   168  sub w3, w3, #0x1 (1)
0xffff8bd0a3ac   172  ldr x5, pc+212 (addr 0x0000ffff8bd0a480)    ;; object: 0x26c04519 <the hole>
0xffff8bd0a3b0   176  add x6, x4, #0xf (15)
0xffff8bd0a3b4   180  str x5, [x6, w3, sxtw #3]
0xffff8bd0a3b8   184  b #-0x18 (addr 0xffff8bd0a3a0)
0xffff8bd0a3bc   188  ldr x3, [fp]
0xffff8bd0a3c0   192  ldur x5, [x3, #-8]
0xffff8bd0a3c4   196  movz x16, #0xe00000000
0xffff8bd0a3c8   200  cmp x5, x16
0xffff8bd0a3cc   204  csel x5, fp, x3, ne
0xffff8bd0a3d0   208  movz x3, #0x0
0xffff8bd0a3d4   212  cmp w0, w3
0xffff8bd0a3d8   216  b.le #+0x24 (addr 0xffff8bd0a3fc)
0xffff8bd0a3dc   220  sub w6, w0, w3
0xffff8bd0a3e0   224  add w6, w6, #0x1 (1)
0xffff8bd0a3e4   228  ldr x6, [x5, w6, uxtw #3]
0xffff8bd0a3e8   232  tbnz w6, #0, #+0xc8 (addr 0xffff8bd0a4b0)
0xffff8bd0a3ec   236  add x8, x4, #0xf (15)
0xffff8bd0a3f0   240  str x6, [x8, w3, sxtw #3]
0xffff8bd0a3f4   244  add w3, w3, #0x1 (1)
0xffff8bd0a3f8   248  b #-0x24 (addr 0xffff8bd0a3d4)
0xffff8bd0a3fc   252  add w0, w0, #0x1 (1)
0xffff8bd0a400   256  lsl x1, x0, #32
0xffff8bd0a404   260  mov x0, x7
0xffff8bd0a408   264  mov jssp, fp
0xffff8bd0a40c   268  ldp fp, lr, [jssp], #16
0xffff8bd0a410   272  add jssp, jssp, x1, lsr #29
0xffff8bd0a414   276  ret
0xffff8bd0a418   280  movz x7, #0x0
0xffff8bd0a41c   284  mov x16, lr
0xffff8bd0a420   288  ldr x17, pc+104 (addr 0x0000ffff8bd0a488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0a424   292  blr x17
0xffff8bd0a428   296  lsl x0, x4, #32
0xffff8bd0a42c   300  movz x10, #0x0
0xffff8bd0a430   304  sub csp, jssp, #0x10 (16)
0xffff8bd0a434   308  stp x10, x0, [jssp, #-16]!
0xffff8bd0a438   312  movz x0, #0x2
0xffff8bd0a43c   316  movz x1, #0x5b88
0xffff8bd0a440   320  movk x1, #0xe2, lsl #16
0xffff8bd0a444   324  ldr x16, pc+76 (addr 0x0000ffff8bd0a490)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0a448   328  blr x16
0xffff8bd0a44c   332  str x0, [jssp, #56]
0xffff8bd0a450   336  ldr x16, pc+72 (addr 0x0000ffff8bd0a498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0a454   340  blr x16
0xffff8bd0a458   344  b #-0xf4 (addr 0xffff8bd0a364)
0xffff8bd0a45c   348  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd0a460   352  d63f03e0       constant
0xffff8bd0a464   356  d503201f       constant
0xffff8bd0a468   360  26c04201       constant
0xffff8bd0a46c   364  00000000       constant
0xffff8bd0a470   368  26c04201       constant
0xffff8bd0a474   372  00000000       constant
0xffff8bd0a478   376  5f504259       constant
0xffff8bd0a47c   380  00000000       constant
0xffff8bd0a480   384  26c04519       constant
0xffff8bd0a484   388  00000000       constant
0xffff8bd0a488   392  8bd06820       constant
0xffff8bd0a48c   396  0000ffff       constant
0xffff8bd0a490   400  8bd06260       constant
0xffff8bd0a494   404  0000ffff       constant
0xffff8bd0a498   408  8bd068e0       constant
0xffff8bd0a49c   412  0000ffff       constant
0xffff8bd0a4a0   416  movz x16, #0x0
0xffff8bd0a4a4   420  bl #+0x14 (addr 0xffff8bd0a4b8)
0xffff8bd0a4a8   424  movz x16, #0x8
0xffff8bd0a4ac   428  bl #+0xc (addr 0xffff8bd0a4b8)
0xffff8bd0a4b0   432  movz x16, #0x10
0xffff8bd0a4b4   436  bl #+0x4 (addr 0xffff8bd0a4b8)
0xffff8bd0a4b8   440  ldr x17, pc+24 (addr 0x0000ffff8bd0a4d0)    ;; lazy deoptimization bailout 0
0xffff8bd0a4bc   444  add x17, x17, x16
0xffff8bd0a4c0   448  br x17
0xffff8bd0a4c4   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0a4c8   456  d63f03e0       constant
0xffff8bd0a4cc   460  d503201f       constant
0xffff8bd0a4d0   464  8bb06000       constant
0xffff8bd0a4d4   468  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0a44c   332  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd0a374  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a37c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a38c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0a3ac  embedded object  (0x26c04519 <the hole>)
0xffff8bd0a420  code target (STUB)  (0xffff8bd06820)
0xffff8bd0a444  code target (STUB)  (0xffff8bd06260)
0xffff8bd0a450  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0a45c  constant pool (size 68)
0xffff8bd0a4b8  runtime entry
0xffff8bd0a4c4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 698)
0xffff8bd0a560     0  movz x16, #0xa00000000
0xffff8bd0a564     4  sub csp, jssp, #0x10 (16)
0xffff8bd0a568     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0a56c    12  mov fp, jssp
0xffff8bd0a570    16  sub csp, jssp, #0x8 (8)
0xffff8bd0a574    20  sub jssp, jssp, #0x8 (8)
0xffff8bd0a578    24  stur x16, [fp, #-8]
0xffff8bd0a57c    28  movz w16, #0x257f
0xffff8bd0a580    32  cmp w0, w16, lsl #3
0xffff8bd0a584    36  b.hs #+0x23c (addr 0xffff8bd0a7c0)
0xffff8bd0a588    40  lsl x3, x0, #32
0xffff8bd0a58c    44  lsl w4, w0, #3
0xffff8bd0a590    48  add w4, w4, #0x10 (16)
0xffff8bd0a594    52  cmp w4, #0x96000 (614400)
0xffff8bd0a598    56  b.hs #+0x230 (addr 0xffff8bd0a7c8)
0xffff8bd0a59c    60  movz x6, #0xe2c0
0xffff8bd0a5a0    64  movk x6, #0x2cb8, lsl #16
0xffff8bd0a5a4    68  ldp x7, x5, [x6]
0xffff8bd0a5a8    72  adds x16, x7, #0x30 (48)
0xffff8bd0a5ac    76  ccmp x16, x5, #nzCv, lo
0xffff8bd0a5b0    80  b.hi #+0x120 (addr 0xffff8bd0a6d0)
0xffff8bd0a5b4    84  str x16, [x6]
0xffff8bd0a5b8    88  orr x7, x7, #0x1
0xffff8bd0a5bc    92  ldur x5, [x1, #39]
0xffff8bd0a5c0    96  ldur x5, [x5, #39]
0xffff8bd0a5c4   100  movz x16, #0x17f
0xffff8bd0a5c8   104  ldr x5, [x5, x16]
0xffff8bd0a5cc   108  stur x5, [x7, #-1]
0xffff8bd0a5d0   112  ldr x5, pc+400 (addr 0x0000ffff8bd0a760)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a5d4   116  stur x5, [x7, #7]
0xffff8bd0a5d8   120  ldr x5, pc+400 (addr 0x0000ffff8bd0a768)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a5dc   124  stur x5, [x7, #15]
0xffff8bd0a5e0   128  stur x3, [x7, #23]
0xffff8bd0a5e4   132  add x5, x7, #0x20 (32)
0xffff8bd0a5e8   136  ldr x6, pc+392 (addr 0x0000ffff8bd0a770)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd0a5ec   140  stur x6, [x5, #-1]
0xffff8bd0a5f0   144  stur x2, [x5, #7]
0xffff8bd0a5f4   148  ldur w5, [x2, #35]
0xffff8bd0a5f8   152  add w5, w5, #0x1 (1)
0xffff8bd0a5fc   156  lsl x5, x5, #32
0xffff8bd0a600   160  stur x5, [x2, #31]
0xffff8bd0a604   164  sxtw x4, w4
0xffff8bd0a608   168  movz x5, #0xe2c0
0xffff8bd0a60c   172  movk x5, #0x2cb8, lsl #16
0xffff8bd0a610   176  ldp x8, x16, [x5]
0xffff8bd0a614   180  adds x6, x8, x4
0xffff8bd0a618   184  ccmp x6, x16, #nzCv, lo
0xffff8bd0a61c   188  b.hi #+0xf8 (addr 0xffff8bd0a714)
0xffff8bd0a620   192  str x6, [x5]
0xffff8bd0a624   196  orr x8, x8, #0x1
0xffff8bd0a628   200  ldr x4, pc+336 (addr 0x0000ffff8bd0a778)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd0a62c   204  stur x4, [x8, #-1]
0xffff8bd0a630   208  stur x3, [x8, #7]
0xffff8bd0a634   212  mov x3, x8
0xffff8bd0a638   216  stur x3, [x7, #15]
0xffff8bd0a63c   220  add x4, x7, #0xf (15)
0xffff8bd0a640   224  and x3, x7, #0xfffffffffff00000
0xffff8bd0a644   228  ldr x3, [x3, #8]
0xffff8bd0a648   232  tbz w3, #2, #+0xc (addr 0xffff8bd0a654)
0xffff8bd0a64c   236  ldr x16, pc+308 (addr 0x0000ffff8bd0a780)    ;; code: STUB, RecordWriteStub, minor: 69735
0xffff8bd0a650   240  blr x16
0xffff8bd0a654   244  mov x3, x0
0xffff8bd0a658   248  cmp w3, #0x0 (0)
0xffff8bd0a65c   252  b.le #+0x18 (addr 0xffff8bd0a674)
0xffff8bd0a660   256  sub w3, w3, #0x1 (1)
0xffff8bd0a664   260  ldr x4, pc+292 (addr 0x0000ffff8bd0a788)    ;; object: 0x26c04519 <the hole>
0xffff8bd0a668   264  add x5, x8, #0xf (15)
0xffff8bd0a66c   268  str x4, [x5, w3, sxtw #3]
0xffff8bd0a670   272  b #-0x18 (addr 0xffff8bd0a658)
0xffff8bd0a674   276  ldr x3, [fp]
0xffff8bd0a678   280  ldur x4, [x3, #-8]
0xffff8bd0a67c   284  movz x16, #0xe00000000
0xffff8bd0a680   288  cmp x4, x16
0xffff8bd0a684   292  csel x4, fp, x3, ne
0xffff8bd0a688   296  movz x3, #0x0
0xffff8bd0a68c   300  cmp w0, w3
0xffff8bd0a690   304  b.le #+0x24 (addr 0xffff8bd0a6b4)
0xffff8bd0a694   308  sub w5, w0, w3
0xffff8bd0a698   312  add w5, w5, #0x1 (1)
0xffff8bd0a69c   316  ldr x5, [x4, w5, uxtw #3]
0xffff8bd0a6a0   320  tbnz w5, #0, #+0x130 (addr 0xffff8bd0a7d0)
0xffff8bd0a6a4   324  add x6, x8, #0xf (15)
0xffff8bd0a6a8   328  str x5, [x6, w3, sxtw #3]
0xffff8bd0a6ac   332  add w3, w3, #0x1 (1)
0xffff8bd0a6b0   336  b #-0x24 (addr 0xffff8bd0a68c)
0xffff8bd0a6b4   340  add w0, w0, #0x1 (1)
0xffff8bd0a6b8   344  lsl x1, x0, #32
0xffff8bd0a6bc   348  mov x0, x7
0xffff8bd0a6c0   352  mov jssp, fp
0xffff8bd0a6c4   356  ldp fp, lr, [jssp], #16
0xffff8bd0a6c8   360  add jssp, jssp, x1, lsr #29
0xffff8bd0a6cc   364  ret
0xffff8bd0a6d0   368  movz x7, #0x0
0xffff8bd0a6d4   372  mov x16, lr
0xffff8bd0a6d8   376  ldr x17, pc+184 (addr 0x0000ffff8bd0a790)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0a6dc   380  blr x17
0xffff8bd0a6e0   384  movz x0, #0x3000000000
0xffff8bd0a6e4   388  movz x10, #0x0
0xffff8bd0a6e8   392  sub csp, jssp, #0x10 (16)
0xffff8bd0a6ec   396  stp x10, x0, [jssp, #-16]!
0xffff8bd0a6f0   400  movz x0, #0x2
0xffff8bd0a6f4   404  movz x1, #0x5b88
0xffff8bd0a6f8   408  movk x1, #0xe2, lsl #16
0xffff8bd0a6fc   412  ldr x16, pc+156 (addr 0x0000ffff8bd0a798)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0a700   416  blr x16
0xffff8bd0a704   420  str x0, [jssp, #56]
0xffff8bd0a708   424  ldr x16, pc+152 (addr 0x0000ffff8bd0a7a0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0a70c   428  blr x16
0xffff8bd0a710   432  b #-0x154 (addr 0xffff8bd0a5bc)
0xffff8bd0a714   436  movz x8, #0x0
0xffff8bd0a718   440  mov x16, lr
0xffff8bd0a71c   444  ldr x17, pc+140 (addr 0x0000ffff8bd0a7a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0a720   448  blr x17
0xffff8bd0a724   452  lsl x0, x4, #32
0xffff8bd0a728   456  movz x10, #0x0
0xffff8bd0a72c   460  sub csp, jssp, #0x10 (16)
0xffff8bd0a730   464  stp x10, x0, [jssp, #-16]!
0xffff8bd0a734   468  movz x0, #0x2
0xffff8bd0a738   472  movz x1, #0x5b88
0xffff8bd0a73c   476  movk x1, #0xe2, lsl #16
0xffff8bd0a740   480  ldr x16, pc+112 (addr 0x0000ffff8bd0a7b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0a744   484  blr x16
0xffff8bd0a748   488  str x0, [jssp, #64]
0xffff8bd0a74c   492  ldr x16, pc+108 (addr 0x0000ffff8bd0a7b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0a750   496  blr x16
0xffff8bd0a754   500  b #-0x12c (addr 0xffff8bd0a628)
0xffff8bd0a758   504  5800033f       constant pool begin (num_const = 25)    ;; constant pool
0xffff8bd0a75c   508  d63f03e0       constant
0xffff8bd0a760   512  26c04201       constant
0xffff8bd0a764   516  00000000       constant
0xffff8bd0a768   520  26c04201       constant
0xffff8bd0a76c   524  00000000       constant
0xffff8bd0a770   528  5f505d81       constant
0xffff8bd0a774   532  00000000       constant
0xffff8bd0a778   536  5f504259       constant
0xffff8bd0a77c   540  00000000       constant
0xffff8bd0a780   544  8bd09800       constant
0xffff8bd0a784   548  0000ffff       constant
0xffff8bd0a788   552  26c04519       constant
0xffff8bd0a78c   556  00000000       constant
0xffff8bd0a790   560  8bd06820       constant
0xffff8bd0a794   564  0000ffff       constant
0xffff8bd0a798   568  8bd06260       constant
0xffff8bd0a79c   572  0000ffff       constant
0xffff8bd0a7a0   576  8bd068e0       constant
0xffff8bd0a7a4   580  0000ffff       constant
0xffff8bd0a7a8   584  8bd06820       constant
0xffff8bd0a7ac   588  0000ffff       constant
0xffff8bd0a7b0   592  8bd06260       constant
0xffff8bd0a7b4   596  0000ffff       constant
0xffff8bd0a7b8   600  8bd068e0       constant
0xffff8bd0a7bc   604  0000ffff       constant
0xffff8bd0a7c0   608  movz x16, #0x0
0xffff8bd0a7c4   612  bl #+0x14 (addr 0xffff8bd0a7d8)
0xffff8bd0a7c8   616  movz x16, #0x8
0xffff8bd0a7cc   620  bl #+0xc (addr 0xffff8bd0a7d8)
0xffff8bd0a7d0   624  movz x16, #0x10
0xffff8bd0a7d4   628  bl #+0x4 (addr 0xffff8bd0a7d8)
0xffff8bd0a7d8   632  ldr x17, pc+24 (addr 0x0000ffff8bd0a7f0)    ;; lazy deoptimization bailout 0
0xffff8bd0a7dc   636  add x17, x17, x16
0xffff8bd0a7e0   640  br x17
0xffff8bd0a7e4   644  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0a7e8   648  d63f03e0       constant
0xffff8bd0a7ec   652  d503201f       constant
0xffff8bd0a7f0   656  8bb06000       constant
0xffff8bd0a7f4   660  0000ffff       constant


Safepoints (size = 34)
0xffff8bd0a704   420  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd0a748   488  000 | x1 | x2 | x7 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff8bd0a5d0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a5d8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a5e8  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0a628  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0a64c  code target (STUB)  (0xffff8bd09800)
0xffff8bd0a664  embedded object  (0x26c04519 <the hole>)
0xffff8bd0a6d8  code target (STUB)  (0xffff8bd06820)
0xffff8bd0a6fc  code target (STUB)  (0xffff8bd06260)
0xffff8bd0a708  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0a71c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0a740  code target (STUB)  (0xffff8bd06260)
0xffff8bd0a74c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0a758  constant pool (size 104)
0xffff8bd0a7d8  runtime entry
0xffff8bd0a7e4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_HOLEY_SMI_ELEMENTS
compiler = crankshaft
Instructions (size = 698)
0xffff8bd0a560     0  movz x16, #0xa00000000
0xffff8bd0a564     4  sub csp, jssp, #0x10 (16)
0xffff8bd0a568     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0a56c    12  mov fp, jssp
0xffff8bd0a570    16  sub csp, jssp, #0x8 (8)
0xffff8bd0a574    20  sub jssp, jssp, #0x8 (8)
0xffff8bd0a578    24  stur x16, [fp, #-8]
0xffff8bd0a57c    28  movz w16, #0x257f
0xffff8bd0a580    32  cmp w0, w16, lsl #3
0xffff8bd0a584    36  b.hs #+0x23c (addr 0xffff8bd0a7c0)
0xffff8bd0a588    40  lsl x3, x0, #32
0xffff8bd0a58c    44  lsl w4, w0, #3
0xffff8bd0a590    48  add w4, w4, #0x10 (16)
0xffff8bd0a594    52  cmp w4, #0x96000 (614400)
0xffff8bd0a598    56  b.hs #+0x230 (addr 0xffff8bd0a7c8)
0xffff8bd0a59c    60  movz x6, #0xe2c0
0xffff8bd0a5a0    64  movk x6, #0x2cb8, lsl #16
0xffff8bd0a5a4    68  ldp x7, x5, [x6]
0xffff8bd0a5a8    72  adds x16, x7, #0x30 (48)
0xffff8bd0a5ac    76  ccmp x16, x5, #nzCv, lo
0xffff8bd0a5b0    80  b.hi #+0x120 (addr 0xffff8bd0a6d0)
0xffff8bd0a5b4    84  str x16, [x6]
0xffff8bd0a5b8    88  orr x7, x7, #0x1
0xffff8bd0a5bc    92  ldur x5, [x1, #39]
0xffff8bd0a5c0    96  ldur x5, [x5, #39]
0xffff8bd0a5c4   100  movz x16, #0x17f
0xffff8bd0a5c8   104  ldr x5, [x5, x16]
0xffff8bd0a5cc   108  stur x5, [x7, #-1]
0xffff8bd0a5d0   112  ldr x5, pc+400 (addr 0x0000ffff8bd0a760)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a5d4   116  stur x5, [x7, #7]
0xffff8bd0a5d8   120  ldr x5, pc+400 (addr 0x0000ffff8bd0a768)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a5dc   124  stur x5, [x7, #15]
0xffff8bd0a5e0   128  stur x3, [x7, #23]
0xffff8bd0a5e4   132  add x5, x7, #0x20 (32)
0xffff8bd0a5e8   136  ldr x6, pc+392 (addr 0x0000ffff8bd0a770)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd0a5ec   140  stur x6, [x5, #-1]
0xffff8bd0a5f0   144  stur x2, [x5, #7]
0xffff8bd0a5f4   148  ldur w5, [x2, #35]
0xffff8bd0a5f8   152  add w5, w5, #0x1 (1)
0xffff8bd0a5fc   156  lsl x5, x5, #32
0xffff8bd0a600   160  stur x5, [x2, #31]
0xffff8bd0a604   164  sxtw x4, w4
0xffff8bd0a608   168  movz x5, #0xe2c0
0xffff8bd0a60c   172  movk x5, #0x2cb8, lsl #16
0xffff8bd0a610   176  ldp x8, x16, [x5]
0xffff8bd0a614   180  adds x6, x8, x4
0xffff8bd0a618   184  ccmp x6, x16, #nzCv, lo
0xffff8bd0a61c   188  b.hi #+0xf8 (addr 0xffff8bd0a714)
0xffff8bd0a620   192  str x6, [x5]
0xffff8bd0a624   196  orr x8, x8, #0x1
0xffff8bd0a628   200  ldr x4, pc+336 (addr 0x0000ffff8bd0a778)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd0a62c   204  stur x4, [x8, #-1]
0xffff8bd0a630   208  stur x3, [x8, #7]
0xffff8bd0a634   212  mov x3, x8
0xffff8bd0a638   216  stur x3, [x7, #15]
0xffff8bd0a63c   220  add x4, x7, #0xf (15)
0xffff8bd0a640   224  and x3, x7, #0xfffffffffff00000
0xffff8bd0a644   228  ldr x3, [x3, #8]
0xffff8bd0a648   232  tbz w3, #2, #+0xc (addr 0xffff8bd0a654)
0xffff8bd0a64c   236  ldr x16, pc+308 (addr 0x0000ffff8bd0a780)    ;; code: STUB, RecordWriteStub, minor: 69735
0xffff8bd0a650   240  blr x16
0xffff8bd0a654   244  mov x3, x0
0xffff8bd0a658   248  cmp w3, #0x0 (0)
0xffff8bd0a65c   252  b.le #+0x18 (addr 0xffff8bd0a674)
0xffff8bd0a660   256  sub w3, w3, #0x1 (1)
0xffff8bd0a664   260  ldr x4, pc+292 (addr 0x0000ffff8bd0a788)    ;; object: 0x26c04519 <the hole>
0xffff8bd0a668   264  add x5, x8, #0xf (15)
0xffff8bd0a66c   268  str x4, [x5, w3, sxtw #3]
0xffff8bd0a670   272  b #-0x18 (addr 0xffff8bd0a658)
0xffff8bd0a674   276  ldr x3, [fp]
0xffff8bd0a678   280  ldur x4, [x3, #-8]
0xffff8bd0a67c   284  movz x16, #0xe00000000
0xffff8bd0a680   288  cmp x4, x16
0xffff8bd0a684   292  csel x4, fp, x3, ne
0xffff8bd0a688   296  movz x3, #0x0
0xffff8bd0a68c   300  cmp w0, w3
0xffff8bd0a690   304  b.le #+0x24 (addr 0xffff8bd0a6b4)
0xffff8bd0a694   308  sub w5, w0, w3
0xffff8bd0a698   312  add w5, w5, #0x1 (1)
0xffff8bd0a69c   316  ldr x5, [x4, w5, uxtw #3]
0xffff8bd0a6a0   320  tbnz w5, #0, #+0x130 (addr 0xffff8bd0a7d0)
0xffff8bd0a6a4   324  add x6, x8, #0xf (15)
0xffff8bd0a6a8   328  str x5, [x6, w3, sxtw #3]
0xffff8bd0a6ac   332  add w3, w3, #0x1 (1)
0xffff8bd0a6b0   336  b #-0x24 (addr 0xffff8bd0a68c)
0xffff8bd0a6b4   340  add w0, w0, #0x1 (1)
0xffff8bd0a6b8   344  lsl x1, x0, #32
0xffff8bd0a6bc   348  mov x0, x7
0xffff8bd0a6c0   352  mov jssp, fp
0xffff8bd0a6c4   356  ldp fp, lr, [jssp], #16
0xffff8bd0a6c8   360  add jssp, jssp, x1, lsr #29
0xffff8bd0a6cc   364  ret
0xffff8bd0a6d0   368  movz x7, #0x0
0xffff8bd0a6d4   372  mov x16, lr
0xffff8bd0a6d8   376  ldr x17, pc+184 (addr 0x0000ffff8bd0a790)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0a6dc   380  blr x17
0xffff8bd0a6e0   384  movz x0, #0x3000000000
0xffff8bd0a6e4   388  movz x10, #0x0
0xffff8bd0a6e8   392  sub csp, jssp, #0x10 (16)
0xffff8bd0a6ec   396  stp x10, x0, [jssp, #-16]!
0xffff8bd0a6f0   400  movz x0, #0x2
0xffff8bd0a6f4   404  movz x1, #0x5b88
0xffff8bd0a6f8   408  movk x1, #0xe2, lsl #16
0xffff8bd0a6fc   412  ldr x16, pc+156 (addr 0x0000ffff8bd0a798)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0a700   416  blr x16
0xffff8bd0a704   420  str x0, [jssp, #56]
0xffff8bd0a708   424  ldr x16, pc+152 (addr 0x0000ffff8bd0a7a0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0a70c   428  blr x16
0xffff8bd0a710   432  b #-0x154 (addr 0xffff8bd0a5bc)
0xffff8bd0a714   436  movz x8, #0x0
0xffff8bd0a718   440  mov x16, lr
0xffff8bd0a71c   444  ldr x17, pc+140 (addr 0x0000ffff8bd0a7a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0a720   448  blr x17
0xffff8bd0a724   452  lsl x0, x4, #32
0xffff8bd0a728   456  movz x10, #0x0
0xffff8bd0a72c   460  sub csp, jssp, #0x10 (16)
0xffff8bd0a730   464  stp x10, x0, [jssp, #-16]!
0xffff8bd0a734   468  movz x0, #0x2
0xffff8bd0a738   472  movz x1, #0x5b88
0xffff8bd0a73c   476  movk x1, #0xe2, lsl #16
0xffff8bd0a740   480  ldr x16, pc+112 (addr 0x0000ffff8bd0a7b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0a744   484  blr x16
0xffff8bd0a748   488  str x0, [jssp, #64]
0xffff8bd0a74c   492  ldr x16, pc+108 (addr 0x0000ffff8bd0a7b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0a750   496  blr x16
0xffff8bd0a754   500  b #-0x12c (addr 0xffff8bd0a628)
0xffff8bd0a758   504  5800033f       constant pool begin (num_const = 25)    ;; constant pool
0xffff8bd0a75c   508  d63f03e0       constant
0xffff8bd0a760   512  26c04201       constant
0xffff8bd0a764   516  00000000       constant
0xffff8bd0a768   520  26c04201       constant
0xffff8bd0a76c   524  00000000       constant
0xffff8bd0a770   528  5f505d81       constant
0xffff8bd0a774   532  00000000       constant
0xffff8bd0a778   536  5f504259       constant
0xffff8bd0a77c   540  00000000       constant
0xffff8bd0a780   544  8bd09800       constant
0xffff8bd0a784   548  0000ffff       constant
0xffff8bd0a788   552  26c04519       constant
0xffff8bd0a78c   556  00000000       constant
0xffff8bd0a790   560  8bd06820       constant
0xffff8bd0a794   564  0000ffff       constant
0xffff8bd0a798   568  8bd06260       constant
0xffff8bd0a79c   572  0000ffff       constant
0xffff8bd0a7a0   576  8bd068e0       constant
0xffff8bd0a7a4   580  0000ffff       constant
0xffff8bd0a7a8   584  8bd06820       constant
0xffff8bd0a7ac   588  0000ffff       constant
0xffff8bd0a7b0   592  8bd06260       constant
0xffff8bd0a7b4   596  0000ffff       constant
0xffff8bd0a7b8   600  8bd068e0       constant
0xffff8bd0a7bc   604  0000ffff       constant
0xffff8bd0a7c0   608  movz x16, #0x0
0xffff8bd0a7c4   612  bl #+0x14 (addr 0xffff8bd0a7d8)
0xffff8bd0a7c8   616  movz x16, #0x8
0xffff8bd0a7cc   620  bl #+0xc (addr 0xffff8bd0a7d8)
0xffff8bd0a7d0   624  movz x16, #0x10
0xffff8bd0a7d4   628  bl #+0x4 (addr 0xffff8bd0a7d8)
0xffff8bd0a7d8   632  ldr x17, pc+24 (addr 0x0000ffff8bd0a7f0)    ;; lazy deoptimization bailout 0
0xffff8bd0a7dc   636  add x17, x17, x16
0xffff8bd0a7e0   640  br x17
0xffff8bd0a7e4   644  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0a7e8   648  d63f03e0       constant
0xffff8bd0a7ec   652  d503201f       constant
0xffff8bd0a7f0   656  8bb06000       constant
0xffff8bd0a7f4   660  0000ffff       constant


Safepoints (size = 34)
0xffff8bd0a704   420  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd0a748   488  000 | x1 | x2 | x7 | x8 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff8bd0a5d0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a5d8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a5e8  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0a628  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0a64c  code target (STUB)  (0xffff8bd09800)
0xffff8bd0a664  embedded object  (0x26c04519 <the hole>)
0xffff8bd0a6d8  code target (STUB)  (0xffff8bd06820)
0xffff8bd0a6fc  code target (STUB)  (0xffff8bd06260)
0xffff8bd0a708  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0a71c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0a740  code target (STUB)  (0xffff8bd06260)
0xffff8bd0a74c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0a758  constant pool (size 104)
0xffff8bd0a7d8  runtime entry
0xffff8bd0a7e4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 501)
0xffff8bd0a880     0  movz x16, #0xa00000000
0xffff8bd0a884     4  sub csp, jssp, #0x10 (16)
0xffff8bd0a888     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0a88c    12  mov fp, jssp
0xffff8bd0a890    16  sub csp, jssp, #0x8 (8)
0xffff8bd0a894    20  sub jssp, jssp, #0x8 (8)
0xffff8bd0a898    24  stur x16, [fp, #-8]
0xffff8bd0a89c    28  movz w16, #0x257f
0xffff8bd0a8a0    32  cmp w0, w16, lsl #3
0xffff8bd0a8a4    36  b.hs #+0x184 (addr 0xffff8bd0aa28)
0xffff8bd0a8a8    40  lsl x3, x0, #32
0xffff8bd0a8ac    44  lsl w4, w0, #3
0xffff8bd0a8b0    48  add w4, w4, #0x10 (16)
0xffff8bd0a8b4    52  cmp w4, #0x96000 (614400)
0xffff8bd0a8b8    56  b.hs #+0x178 (addr 0xffff8bd0aa30)
0xffff8bd0a8bc    60  add w4, w4, #0x20 (32)
0xffff8bd0a8c0    64  sxtw x4, w4
0xffff8bd0a8c4    68  movz x5, #0xe2c0
0xffff8bd0a8c8    72  movk x5, #0x2cb8, lsl #16
0xffff8bd0a8cc    76  ldp x7, x16, [x5]
0xffff8bd0a8d0    80  adds x6, x7, x4
0xffff8bd0a8d4    84  ccmp x6, x16, #nzCv, lo
0xffff8bd0a8d8    88  b.hi #+0xcc (addr 0xffff8bd0a9a4)
0xffff8bd0a8dc    92  str x6, [x5]
0xffff8bd0a8e0    96  orr x7, x7, #0x1
0xffff8bd0a8e4   100  movz w4, #0x0
0xffff8bd0a8e8   104  stur x4, [x7, #31]
0xffff8bd0a8ec   108  ldur x4, [x1, #39]
0xffff8bd0a8f0   112  ldur x4, [x4, #39]
0xffff8bd0a8f4   116  movz x16, #0x17f
0xffff8bd0a8f8   120  ldr x4, [x4, x16]
0xffff8bd0a8fc   124  stur x4, [x7, #-1]
0xffff8bd0a900   128  ldr x4, pc+240 (addr 0x0000ffff8bd0a9f0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a904   132  stur x4, [x7, #7]
0xffff8bd0a908   136  ldr x4, pc+240 (addr 0x0000ffff8bd0a9f8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a90c   140  stur x4, [x7, #15]
0xffff8bd0a910   144  stur x3, [x7, #23]
0xffff8bd0a914   148  add x4, x7, #0x20 (32)
0xffff8bd0a918   152  ldr x5, pc+232 (addr 0x0000ffff8bd0aa00)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd0a91c   156  stur x5, [x4, #-1]
0xffff8bd0a920   160  stur x3, [x4, #7]
0xffff8bd0a924   164  stur x4, [x7, #15]
0xffff8bd0a928   168  mov x3, x0
0xffff8bd0a92c   172  cmp w3, #0x0 (0)
0xffff8bd0a930   176  b.le #+0x18 (addr 0xffff8bd0a948)
0xffff8bd0a934   180  sub w3, w3, #0x1 (1)
0xffff8bd0a938   184  ldr x5, pc+208 (addr 0x0000ffff8bd0aa08)    ;; object: 0x26c04519 <the hole>
0xffff8bd0a93c   188  add x6, x4, #0xf (15)
0xffff8bd0a940   192  str x5, [x6, w3, sxtw #3]
0xffff8bd0a944   196  b #-0x18 (addr 0xffff8bd0a92c)
0xffff8bd0a948   200  ldr x3, [fp]
0xffff8bd0a94c   204  ldur x5, [x3, #-8]
0xffff8bd0a950   208  movz x16, #0xe00000000
0xffff8bd0a954   212  cmp x5, x16
0xffff8bd0a958   216  csel x5, fp, x3, ne
0xffff8bd0a95c   220  movz x3, #0x0
0xffff8bd0a960   224  cmp w0, w3
0xffff8bd0a964   228  b.le #+0x24 (addr 0xffff8bd0a988)
0xffff8bd0a968   232  sub w6, w0, w3
0xffff8bd0a96c   236  add w6, w6, #0x1 (1)
0xffff8bd0a970   240  ldr x6, [x5, w6, uxtw #3]
0xffff8bd0a974   244  tbnz w6, #0, #+0xc4 (addr 0xffff8bd0aa38)
0xffff8bd0a978   248  add x8, x4, #0xf (15)
0xffff8bd0a97c   252  str x6, [x8, w3, sxtw #3]
0xffff8bd0a980   256  add w3, w3, #0x1 (1)
0xffff8bd0a984   260  b #-0x24 (addr 0xffff8bd0a960)
0xffff8bd0a988   264  add w0, w0, #0x1 (1)
0xffff8bd0a98c   268  lsl x1, x0, #32
0xffff8bd0a990   272  mov x0, x7
0xffff8bd0a994   276  mov jssp, fp
0xffff8bd0a998   280  ldp fp, lr, [jssp], #16
0xffff8bd0a99c   284  add jssp, jssp, x1, lsr #29
0xffff8bd0a9a0   288  ret
0xffff8bd0a9a4   292  movz x7, #0x0
0xffff8bd0a9a8   296  mov x16, lr
0xffff8bd0a9ac   300  ldr x17, pc+100 (addr 0x0000ffff8bd0aa10)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0a9b0   304  blr x17
0xffff8bd0a9b4   308  lsl x0, x4, #32
0xffff8bd0a9b8   312  movz x10, #0x0
0xffff8bd0a9bc   316  sub csp, jssp, #0x10 (16)
0xffff8bd0a9c0   320  stp x10, x0, [jssp, #-16]!
0xffff8bd0a9c4   324  movz x0, #0x2
0xffff8bd0a9c8   328  movz x1, #0x5b88
0xffff8bd0a9cc   332  movk x1, #0xe2, lsl #16
0xffff8bd0a9d0   336  ldr x16, pc+72 (addr 0x0000ffff8bd0aa18)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0a9d4   340  blr x16
0xffff8bd0a9d8   344  str x0, [jssp, #56]
0xffff8bd0a9dc   348  ldr x16, pc+68 (addr 0x0000ffff8bd0aa20)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0a9e0   352  blr x16
0xffff8bd0a9e4   356  b #-0x100 (addr 0xffff8bd0a8e4)
0xffff8bd0a9e8   360  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd0a9ec   364  d63f03e0       constant
0xffff8bd0a9f0   368  26c04201       constant
0xffff8bd0a9f4   372  00000000       constant
0xffff8bd0a9f8   376  26c04201       constant
0xffff8bd0a9fc   380  00000000       constant
0xffff8bd0aa00   384  5f504259       constant
0xffff8bd0aa04   388  00000000       constant
0xffff8bd0aa08   392  26c04519       constant
0xffff8bd0aa0c   396  00000000       constant
0xffff8bd0aa10   400  8bd06820       constant
0xffff8bd0aa14   404  0000ffff       constant
0xffff8bd0aa18   408  8bd06260       constant
0xffff8bd0aa1c   412  0000ffff       constant
0xffff8bd0aa20   416  8bd068e0       constant
0xffff8bd0aa24   420  0000ffff       constant
0xffff8bd0aa28   424  movz x16, #0x0
0xffff8bd0aa2c   428  bl #+0x14 (addr 0xffff8bd0aa40)
0xffff8bd0aa30   432  movz x16, #0x8
0xffff8bd0aa34   436  bl #+0xc (addr 0xffff8bd0aa40)
0xffff8bd0aa38   440  movz x16, #0x10
0xffff8bd0aa3c   444  bl #+0x4 (addr 0xffff8bd0aa40)
0xffff8bd0aa40   448  ldr x17, pc+24 (addr 0x0000ffff8bd0aa58)    ;; lazy deoptimization bailout 0
0xffff8bd0aa44   452  add x17, x17, x16
0xffff8bd0aa48   456  br x17
0xffff8bd0aa4c   460  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0aa50   464  d63f03e0       constant
0xffff8bd0aa54   468  d503201f       constant
0xffff8bd0aa58   472  8bb06000       constant
0xffff8bd0aa5c   476  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0a9d8   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd0a900  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a908  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a918  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0a938  embedded object  (0x26c04519 <the hole>)
0xffff8bd0a9ac  code target (STUB)  (0xffff8bd06820)
0xffff8bd0a9d0  code target (STUB)  (0xffff8bd06260)
0xffff8bd0a9dc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0a9e8  constant pool (size 64)
0xffff8bd0aa40  runtime entry
0xffff8bd0aa4c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_HOLEY_SMI_ELEMENTS_DISABLE_ALLOCATION_SITES
compiler = crankshaft
Instructions (size = 501)
0xffff8bd0a880     0  movz x16, #0xa00000000
0xffff8bd0a884     4  sub csp, jssp, #0x10 (16)
0xffff8bd0a888     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0a88c    12  mov fp, jssp
0xffff8bd0a890    16  sub csp, jssp, #0x8 (8)
0xffff8bd0a894    20  sub jssp, jssp, #0x8 (8)
0xffff8bd0a898    24  stur x16, [fp, #-8]
0xffff8bd0a89c    28  movz w16, #0x257f
0xffff8bd0a8a0    32  cmp w0, w16, lsl #3
0xffff8bd0a8a4    36  b.hs #+0x184 (addr 0xffff8bd0aa28)
0xffff8bd0a8a8    40  lsl x3, x0, #32
0xffff8bd0a8ac    44  lsl w4, w0, #3
0xffff8bd0a8b0    48  add w4, w4, #0x10 (16)
0xffff8bd0a8b4    52  cmp w4, #0x96000 (614400)
0xffff8bd0a8b8    56  b.hs #+0x178 (addr 0xffff8bd0aa30)
0xffff8bd0a8bc    60  add w4, w4, #0x20 (32)
0xffff8bd0a8c0    64  sxtw x4, w4
0xffff8bd0a8c4    68  movz x5, #0xe2c0
0xffff8bd0a8c8    72  movk x5, #0x2cb8, lsl #16
0xffff8bd0a8cc    76  ldp x7, x16, [x5]
0xffff8bd0a8d0    80  adds x6, x7, x4
0xffff8bd0a8d4    84  ccmp x6, x16, #nzCv, lo
0xffff8bd0a8d8    88  b.hi #+0xcc (addr 0xffff8bd0a9a4)
0xffff8bd0a8dc    92  str x6, [x5]
0xffff8bd0a8e0    96  orr x7, x7, #0x1
0xffff8bd0a8e4   100  movz w4, #0x0
0xffff8bd0a8e8   104  stur x4, [x7, #31]
0xffff8bd0a8ec   108  ldur x4, [x1, #39]
0xffff8bd0a8f0   112  ldur x4, [x4, #39]
0xffff8bd0a8f4   116  movz x16, #0x17f
0xffff8bd0a8f8   120  ldr x4, [x4, x16]
0xffff8bd0a8fc   124  stur x4, [x7, #-1]
0xffff8bd0a900   128  ldr x4, pc+240 (addr 0x0000ffff8bd0a9f0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a904   132  stur x4, [x7, #7]
0xffff8bd0a908   136  ldr x4, pc+240 (addr 0x0000ffff8bd0a9f8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0a90c   140  stur x4, [x7, #15]
0xffff8bd0a910   144  stur x3, [x7, #23]
0xffff8bd0a914   148  add x4, x7, #0x20 (32)
0xffff8bd0a918   152  ldr x5, pc+232 (addr 0x0000ffff8bd0aa00)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd0a91c   156  stur x5, [x4, #-1]
0xffff8bd0a920   160  stur x3, [x4, #7]
0xffff8bd0a924   164  stur x4, [x7, #15]
0xffff8bd0a928   168  mov x3, x0
0xffff8bd0a92c   172  cmp w3, #0x0 (0)
0xffff8bd0a930   176  b.le #+0x18 (addr 0xffff8bd0a948)
0xffff8bd0a934   180  sub w3, w3, #0x1 (1)
0xffff8bd0a938   184  ldr x5, pc+208 (addr 0x0000ffff8bd0aa08)    ;; object: 0x26c04519 <the hole>
0xffff8bd0a93c   188  add x6, x4, #0xf (15)
0xffff8bd0a940   192  str x5, [x6, w3, sxtw #3]
0xffff8bd0a944   196  b #-0x18 (addr 0xffff8bd0a92c)
0xffff8bd0a948   200  ldr x3, [fp]
0xffff8bd0a94c   204  ldur x5, [x3, #-8]
0xffff8bd0a950   208  movz x16, #0xe00000000
0xffff8bd0a954   212  cmp x5, x16
0xffff8bd0a958   216  csel x5, fp, x3, ne
0xffff8bd0a95c   220  movz x3, #0x0
0xffff8bd0a960   224  cmp w0, w3
0xffff8bd0a964   228  b.le #+0x24 (addr 0xffff8bd0a988)
0xffff8bd0a968   232  sub w6, w0, w3
0xffff8bd0a96c   236  add w6, w6, #0x1 (1)
0xffff8bd0a970   240  ldr x6, [x5, w6, uxtw #3]
0xffff8bd0a974   244  tbnz w6, #0, #+0xc4 (addr 0xffff8bd0aa38)
0xffff8bd0a978   248  add x8, x4, #0xf (15)
0xffff8bd0a97c   252  str x6, [x8, w3, sxtw #3]
0xffff8bd0a980   256  add w3, w3, #0x1 (1)
0xffff8bd0a984   260  b #-0x24 (addr 0xffff8bd0a960)
0xffff8bd0a988   264  add w0, w0, #0x1 (1)
0xffff8bd0a98c   268  lsl x1, x0, #32
0xffff8bd0a990   272  mov x0, x7
0xffff8bd0a994   276  mov jssp, fp
0xffff8bd0a998   280  ldp fp, lr, [jssp], #16
0xffff8bd0a99c   284  add jssp, jssp, x1, lsr #29
0xffff8bd0a9a0   288  ret
0xffff8bd0a9a4   292  movz x7, #0x0
0xffff8bd0a9a8   296  mov x16, lr
0xffff8bd0a9ac   300  ldr x17, pc+100 (addr 0x0000ffff8bd0aa10)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0a9b0   304  blr x17
0xffff8bd0a9b4   308  lsl x0, x4, #32
0xffff8bd0a9b8   312  movz x10, #0x0
0xffff8bd0a9bc   316  sub csp, jssp, #0x10 (16)
0xffff8bd0a9c0   320  stp x10, x0, [jssp, #-16]!
0xffff8bd0a9c4   324  movz x0, #0x2
0xffff8bd0a9c8   328  movz x1, #0x5b88
0xffff8bd0a9cc   332  movk x1, #0xe2, lsl #16
0xffff8bd0a9d0   336  ldr x16, pc+72 (addr 0x0000ffff8bd0aa18)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0a9d4   340  blr x16
0xffff8bd0a9d8   344  str x0, [jssp, #56]
0xffff8bd0a9dc   348  ldr x16, pc+68 (addr 0x0000ffff8bd0aa20)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0a9e0   352  blr x16
0xffff8bd0a9e4   356  b #-0x100 (addr 0xffff8bd0a8e4)
0xffff8bd0a9e8   360  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd0a9ec   364  d63f03e0       constant
0xffff8bd0a9f0   368  26c04201       constant
0xffff8bd0a9f4   372  00000000       constant
0xffff8bd0a9f8   376  26c04201       constant
0xffff8bd0a9fc   380  00000000       constant
0xffff8bd0aa00   384  5f504259       constant
0xffff8bd0aa04   388  00000000       constant
0xffff8bd0aa08   392  26c04519       constant
0xffff8bd0aa0c   396  00000000       constant
0xffff8bd0aa10   400  8bd06820       constant
0xffff8bd0aa14   404  0000ffff       constant
0xffff8bd0aa18   408  8bd06260       constant
0xffff8bd0aa1c   412  0000ffff       constant
0xffff8bd0aa20   416  8bd068e0       constant
0xffff8bd0aa24   420  0000ffff       constant
0xffff8bd0aa28   424  movz x16, #0x0
0xffff8bd0aa2c   428  bl #+0x14 (addr 0xffff8bd0aa40)
0xffff8bd0aa30   432  movz x16, #0x8
0xffff8bd0aa34   436  bl #+0xc (addr 0xffff8bd0aa40)
0xffff8bd0aa38   440  movz x16, #0x10
0xffff8bd0aa3c   444  bl #+0x4 (addr 0xffff8bd0aa40)
0xffff8bd0aa40   448  ldr x17, pc+24 (addr 0x0000ffff8bd0aa58)    ;; lazy deoptimization bailout 0
0xffff8bd0aa44   452  add x17, x17, x16
0xffff8bd0aa48   456  br x17
0xffff8bd0aa4c   460  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0aa50   464  d63f03e0       constant
0xffff8bd0aa54   468  d503201f       constant
0xffff8bd0aa58   472  8bb06000       constant
0xffff8bd0aa5c   476  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0a9d8   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd0a900  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a908  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0a918  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0a938  embedded object  (0x26c04519 <the hole>)
0xffff8bd0a9ac  code target (STUB)  (0xffff8bd06820)
0xffff8bd0a9d0  code target (STUB)  (0xffff8bd06260)
0xffff8bd0a9dc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0a9e8  constant pool (size 64)
0xffff8bd0aa40  runtime entry
0xffff8bd0aa4c  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 493)
0xffff8bd0aae0     0  movz x16, #0xa00000000
0xffff8bd0aae4     4  sub csp, jssp, #0x10 (16)
0xffff8bd0aae8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0aaec    12  mov fp, jssp
0xffff8bd0aaf0    16  sub csp, jssp, #0x8 (8)
0xffff8bd0aaf4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd0aaf8    24  stur x16, [fp, #-8]
0xffff8bd0aafc    28  movz w16, #0x257f
0xffff8bd0ab00    32  cmp w0, w16, lsl #3
0xffff8bd0ab04    36  b.hs #+0x17c (addr 0xffff8bd0ac80)
0xffff8bd0ab08    40  lsl x3, x0, #32
0xffff8bd0ab0c    44  lsl w4, w0, #3
0xffff8bd0ab10    48  add w4, w4, #0x10 (16)
0xffff8bd0ab14    52  cmp w4, #0x96000 (614400)
0xffff8bd0ab18    56  b.hs #+0x170 (addr 0xffff8bd0ac88)
0xffff8bd0ab1c    60  add w4, w4, #0x20 (32)
0xffff8bd0ab20    64  sxtw x4, w4
0xffff8bd0ab24    68  movz x5, #0xe2c0
0xffff8bd0ab28    72  movk x5, #0x2cb8, lsl #16
0xffff8bd0ab2c    76  ldp x7, x16, [x5]
0xffff8bd0ab30    80  adds x6, x7, x4
0xffff8bd0ab34    84  ccmp x6, x16, #nzCv, lo
0xffff8bd0ab38    88  b.hi #+0xcc (addr 0xffff8bd0ac04)
0xffff8bd0ab3c    92  str x6, [x5]
0xffff8bd0ab40    96  orr x7, x7, #0x1
0xffff8bd0ab44   100  movz w4, #0x0
0xffff8bd0ab48   104  stur x4, [x7, #31]
0xffff8bd0ab4c   108  ldur x4, [x1, #39]
0xffff8bd0ab50   112  ldur x4, [x4, #39]
0xffff8bd0ab54   116  movz x16, #0x197
0xffff8bd0ab58   120  ldr x4, [x4, x16]
0xffff8bd0ab5c   124  stur x4, [x7, #-1]
0xffff8bd0ab60   128  ldr x4, pc+240 (addr 0x0000ffff8bd0ac50)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0ab64   132  stur x4, [x7, #7]
0xffff8bd0ab68   136  ldr x4, pc+240 (addr 0x0000ffff8bd0ac58)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0ab6c   140  stur x4, [x7, #15]
0xffff8bd0ab70   144  stur x3, [x7, #23]
0xffff8bd0ab74   148  add x4, x7, #0x20 (32)
0xffff8bd0ab78   152  ldr x5, pc+232 (addr 0x0000ffff8bd0ac60)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd0ab7c   156  stur x5, [x4, #-1]
0xffff8bd0ab80   160  stur x3, [x4, #7]
0xffff8bd0ab84   164  stur x4, [x7, #15]
0xffff8bd0ab88   168  ldr x3, [fp]
0xffff8bd0ab8c   172  ldur x5, [x3, #-8]
0xffff8bd0ab90   176  movz x16, #0xe00000000
0xffff8bd0ab94   180  cmp x5, x16
0xffff8bd0ab98   184  csel x5, fp, x3, ne
0xffff8bd0ab9c   188  movz x3, #0x0
0xffff8bd0aba0   192  cmp w0, w3
0xffff8bd0aba4   196  b.le #+0x44 (addr 0xffff8bd0abe8)
0xffff8bd0aba8   200  sub w6, w0, w3
0xffff8bd0abac   204  add w6, w6, #0x1 (1)
0xffff8bd0abb0   208  ldr x6, [x5, w6, uxtw #3]
0xffff8bd0abb4   212  tbz w6, #0, #+0x1c (addr 0xffff8bd0abd0)
0xffff8bd0abb8   216  ldur x16, [x6, #-1]
0xffff8bd0abbc   220  ldr x17, [x26, #120]
0xffff8bd0abc0   224  cmp x16, x17
0xffff8bd0abc4   228  b.ne #+0xcc (addr 0xffff8bd0ac90)
0xffff8bd0abc8   232  ldur d0, [x6, #7]
0xffff8bd0abcc   236  b #+0x8 (addr 0xffff8bd0abd4)
0xffff8bd0abd0   240  scvtf d0, x6, #32
0xffff8bd0abd4   244  add x6, x4, #0xf (15)
0xffff8bd0abd8   248  fsub d29, d0, d15
0xffff8bd0abdc   252  str d29, [x6, w3, sxtw #3]
0xffff8bd0abe0   256  add w3, w3, #0x1 (1)
0xffff8bd0abe4   260  b #-0x44 (addr 0xffff8bd0aba0)
0xffff8bd0abe8   264  add w0, w0, #0x1 (1)
0xffff8bd0abec   268  lsl x1, x0, #32
0xffff8bd0abf0   272  mov x0, x7
0xffff8bd0abf4   276  mov jssp, fp
0xffff8bd0abf8   280  ldp fp, lr, [jssp], #16
0xffff8bd0abfc   284  add jssp, jssp, x1, lsr #29
0xffff8bd0ac00   288  ret
0xffff8bd0ac04   292  movz x7, #0x0
0xffff8bd0ac08   296  mov x16, lr
0xffff8bd0ac0c   300  ldr x17, pc+92 (addr 0x0000ffff8bd0ac68)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0ac10   304  blr x17
0xffff8bd0ac14   308  lsl x0, x4, #32
0xffff8bd0ac18   312  movz x10, #0x100000000
0xffff8bd0ac1c   316  sub csp, jssp, #0x10 (16)
0xffff8bd0ac20   320  stp x10, x0, [jssp, #-16]!
0xffff8bd0ac24   324  movz x0, #0x2
0xffff8bd0ac28   328  movz x1, #0x5b88
0xffff8bd0ac2c   332  movk x1, #0xe2, lsl #16
0xffff8bd0ac30   336  ldr x16, pc+64 (addr 0x0000ffff8bd0ac70)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0ac34   340  blr x16
0xffff8bd0ac38   344  str x0, [jssp, #56]
0xffff8bd0ac3c   348  ldr x16, pc+60 (addr 0x0000ffff8bd0ac78)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0ac40   352  blr x16
0xffff8bd0ac44   356  b #-0x100 (addr 0xffff8bd0ab44)
0xffff8bd0ac48   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd0ac4c   364  d63f03e0       constant
0xffff8bd0ac50   368  26c04201       constant
0xffff8bd0ac54   372  00000000       constant
0xffff8bd0ac58   376  26c04201       constant
0xffff8bd0ac5c   380  00000000       constant
0xffff8bd0ac60   384  5f5052d9       constant
0xffff8bd0ac64   388  00000000       constant
0xffff8bd0ac68   392  8bd06820       constant
0xffff8bd0ac6c   396  0000ffff       constant
0xffff8bd0ac70   400  8bd06260       constant
0xffff8bd0ac74   404  0000ffff       constant
0xffff8bd0ac78   408  8bd068e0       constant
0xffff8bd0ac7c   412  0000ffff       constant
0xffff8bd0ac80   416  movz x16, #0x0
0xffff8bd0ac84   420  bl #+0x14 (addr 0xffff8bd0ac98)
0xffff8bd0ac88   424  movz x16, #0x8
0xffff8bd0ac8c   428  bl #+0xc (addr 0xffff8bd0ac98)
0xffff8bd0ac90   432  movz x16, #0x10
0xffff8bd0ac94   436  bl #+0x4 (addr 0xffff8bd0ac98)
0xffff8bd0ac98   440  ldr x17, pc+24 (addr 0x0000ffff8bd0acb0)    ;; lazy deoptimization bailout 0
0xffff8bd0ac9c   444  add x17, x17, x16
0xffff8bd0aca0   448  br x17
0xffff8bd0aca4   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0aca8   456  d63f03e0       constant
0xffff8bd0acac   460  d503201f       constant
0xffff8bd0acb0   464  8bb06000       constant
0xffff8bd0acb4   468  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0ac38   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd0ab60  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0ab68  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0ab78  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0ac0c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0ac30  code target (STUB)  (0xffff8bd06260)
0xffff8bd0ac3c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0ac48  constant pool (size 56)
0xffff8bd0ac98  runtime entry
0xffff8bd0aca4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 493)
0xffff8bd0aae0     0  movz x16, #0xa00000000
0xffff8bd0aae4     4  sub csp, jssp, #0x10 (16)
0xffff8bd0aae8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0aaec    12  mov fp, jssp
0xffff8bd0aaf0    16  sub csp, jssp, #0x8 (8)
0xffff8bd0aaf4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd0aaf8    24  stur x16, [fp, #-8]
0xffff8bd0aafc    28  movz w16, #0x257f
0xffff8bd0ab00    32  cmp w0, w16, lsl #3
0xffff8bd0ab04    36  b.hs #+0x17c (addr 0xffff8bd0ac80)
0xffff8bd0ab08    40  lsl x3, x0, #32
0xffff8bd0ab0c    44  lsl w4, w0, #3
0xffff8bd0ab10    48  add w4, w4, #0x10 (16)
0xffff8bd0ab14    52  cmp w4, #0x96000 (614400)
0xffff8bd0ab18    56  b.hs #+0x170 (addr 0xffff8bd0ac88)
0xffff8bd0ab1c    60  add w4, w4, #0x20 (32)
0xffff8bd0ab20    64  sxtw x4, w4
0xffff8bd0ab24    68  movz x5, #0xe2c0
0xffff8bd0ab28    72  movk x5, #0x2cb8, lsl #16
0xffff8bd0ab2c    76  ldp x7, x16, [x5]
0xffff8bd0ab30    80  adds x6, x7, x4
0xffff8bd0ab34    84  ccmp x6, x16, #nzCv, lo
0xffff8bd0ab38    88  b.hi #+0xcc (addr 0xffff8bd0ac04)
0xffff8bd0ab3c    92  str x6, [x5]
0xffff8bd0ab40    96  orr x7, x7, #0x1
0xffff8bd0ab44   100  movz w4, #0x0
0xffff8bd0ab48   104  stur x4, [x7, #31]
0xffff8bd0ab4c   108  ldur x4, [x1, #39]
0xffff8bd0ab50   112  ldur x4, [x4, #39]
0xffff8bd0ab54   116  movz x16, #0x197
0xffff8bd0ab58   120  ldr x4, [x4, x16]
0xffff8bd0ab5c   124  stur x4, [x7, #-1]
0xffff8bd0ab60   128  ldr x4, pc+240 (addr 0x0000ffff8bd0ac50)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0ab64   132  stur x4, [x7, #7]
0xffff8bd0ab68   136  ldr x4, pc+240 (addr 0x0000ffff8bd0ac58)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0ab6c   140  stur x4, [x7, #15]
0xffff8bd0ab70   144  stur x3, [x7, #23]
0xffff8bd0ab74   148  add x4, x7, #0x20 (32)
0xffff8bd0ab78   152  ldr x5, pc+232 (addr 0x0000ffff8bd0ac60)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd0ab7c   156  stur x5, [x4, #-1]
0xffff8bd0ab80   160  stur x3, [x4, #7]
0xffff8bd0ab84   164  stur x4, [x7, #15]
0xffff8bd0ab88   168  ldr x3, [fp]
0xffff8bd0ab8c   172  ldur x5, [x3, #-8]
0xffff8bd0ab90   176  movz x16, #0xe00000000
0xffff8bd0ab94   180  cmp x5, x16
0xffff8bd0ab98   184  csel x5, fp, x3, ne
0xffff8bd0ab9c   188  movz x3, #0x0
0xffff8bd0aba0   192  cmp w0, w3
0xffff8bd0aba4   196  b.le #+0x44 (addr 0xffff8bd0abe8)
0xffff8bd0aba8   200  sub w6, w0, w3
0xffff8bd0abac   204  add w6, w6, #0x1 (1)
0xffff8bd0abb0   208  ldr x6, [x5, w6, uxtw #3]
0xffff8bd0abb4   212  tbz w6, #0, #+0x1c (addr 0xffff8bd0abd0)
0xffff8bd0abb8   216  ldur x16, [x6, #-1]
0xffff8bd0abbc   220  ldr x17, [x26, #120]
0xffff8bd0abc0   224  cmp x16, x17
0xffff8bd0abc4   228  b.ne #+0xcc (addr 0xffff8bd0ac90)
0xffff8bd0abc8   232  ldur d0, [x6, #7]
0xffff8bd0abcc   236  b #+0x8 (addr 0xffff8bd0abd4)
0xffff8bd0abd0   240  scvtf d0, x6, #32
0xffff8bd0abd4   244  add x6, x4, #0xf (15)
0xffff8bd0abd8   248  fsub d29, d0, d15
0xffff8bd0abdc   252  str d29, [x6, w3, sxtw #3]
0xffff8bd0abe0   256  add w3, w3, #0x1 (1)
0xffff8bd0abe4   260  b #-0x44 (addr 0xffff8bd0aba0)
0xffff8bd0abe8   264  add w0, w0, #0x1 (1)
0xffff8bd0abec   268  lsl x1, x0, #32
0xffff8bd0abf0   272  mov x0, x7
0xffff8bd0abf4   276  mov jssp, fp
0xffff8bd0abf8   280  ldp fp, lr, [jssp], #16
0xffff8bd0abfc   284  add jssp, jssp, x1, lsr #29
0xffff8bd0ac00   288  ret
0xffff8bd0ac04   292  movz x7, #0x0
0xffff8bd0ac08   296  mov x16, lr
0xffff8bd0ac0c   300  ldr x17, pc+92 (addr 0x0000ffff8bd0ac68)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0ac10   304  blr x17
0xffff8bd0ac14   308  lsl x0, x4, #32
0xffff8bd0ac18   312  movz x10, #0x100000000
0xffff8bd0ac1c   316  sub csp, jssp, #0x10 (16)
0xffff8bd0ac20   320  stp x10, x0, [jssp, #-16]!
0xffff8bd0ac24   324  movz x0, #0x2
0xffff8bd0ac28   328  movz x1, #0x5b88
0xffff8bd0ac2c   332  movk x1, #0xe2, lsl #16
0xffff8bd0ac30   336  ldr x16, pc+64 (addr 0x0000ffff8bd0ac70)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0ac34   340  blr x16
0xffff8bd0ac38   344  str x0, [jssp, #56]
0xffff8bd0ac3c   348  ldr x16, pc+60 (addr 0x0000ffff8bd0ac78)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0ac40   352  blr x16
0xffff8bd0ac44   356  b #-0x100 (addr 0xffff8bd0ab44)
0xffff8bd0ac48   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd0ac4c   364  d63f03e0       constant
0xffff8bd0ac50   368  26c04201       constant
0xffff8bd0ac54   372  00000000       constant
0xffff8bd0ac58   376  26c04201       constant
0xffff8bd0ac5c   380  00000000       constant
0xffff8bd0ac60   384  5f5052d9       constant
0xffff8bd0ac64   388  00000000       constant
0xffff8bd0ac68   392  8bd06820       constant
0xffff8bd0ac6c   396  0000ffff       constant
0xffff8bd0ac70   400  8bd06260       constant
0xffff8bd0ac74   404  0000ffff       constant
0xffff8bd0ac78   408  8bd068e0       constant
0xffff8bd0ac7c   412  0000ffff       constant
0xffff8bd0ac80   416  movz x16, #0x0
0xffff8bd0ac84   420  bl #+0x14 (addr 0xffff8bd0ac98)
0xffff8bd0ac88   424  movz x16, #0x8
0xffff8bd0ac8c   428  bl #+0xc (addr 0xffff8bd0ac98)
0xffff8bd0ac90   432  movz x16, #0x10
0xffff8bd0ac94   436  bl #+0x4 (addr 0xffff8bd0ac98)
0xffff8bd0ac98   440  ldr x17, pc+24 (addr 0x0000ffff8bd0acb0)    ;; lazy deoptimization bailout 0
0xffff8bd0ac9c   444  add x17, x17, x16
0xffff8bd0aca0   448  br x17
0xffff8bd0aca4   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0aca8   456  d63f03e0       constant
0xffff8bd0acac   460  d503201f       constant
0xffff8bd0acb0   464  8bb06000       constant
0xffff8bd0acb4   468  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0ac38   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd0ab60  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0ab68  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0ab78  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0ac0c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0ac30  code target (STUB)  (0xffff8bd06260)
0xffff8bd0ac3c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0ac48  constant pool (size 56)
0xffff8bd0ac98  runtime entry
0xffff8bd0aca4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 493)
0xffff8bd0ad40     0  movz x16, #0xa00000000
0xffff8bd0ad44     4  sub csp, jssp, #0x10 (16)
0xffff8bd0ad48     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0ad4c    12  mov fp, jssp
0xffff8bd0ad50    16  sub csp, jssp, #0x8 (8)
0xffff8bd0ad54    20  sub jssp, jssp, #0x8 (8)
0xffff8bd0ad58    24  stur x16, [fp, #-8]
0xffff8bd0ad5c    28  movz w16, #0x257f
0xffff8bd0ad60    32  cmp w0, w16, lsl #3
0xffff8bd0ad64    36  b.hs #+0x17c (addr 0xffff8bd0aee0)
0xffff8bd0ad68    40  lsl x3, x0, #32
0xffff8bd0ad6c    44  lsl w4, w0, #3
0xffff8bd0ad70    48  add w4, w4, #0x10 (16)
0xffff8bd0ad74    52  cmp w4, #0x96000 (614400)
0xffff8bd0ad78    56  b.hs #+0x170 (addr 0xffff8bd0aee8)
0xffff8bd0ad7c    60  add w4, w4, #0x20 (32)
0xffff8bd0ad80    64  sxtw x4, w4
0xffff8bd0ad84    68  movz x5, #0xe2c0
0xffff8bd0ad88    72  movk x5, #0x2cb8, lsl #16
0xffff8bd0ad8c    76  ldp x7, x16, [x5]
0xffff8bd0ad90    80  adds x6, x7, x4
0xffff8bd0ad94    84  ccmp x6, x16, #nzCv, lo
0xffff8bd0ad98    88  b.hi #+0xcc (addr 0xffff8bd0ae64)
0xffff8bd0ad9c    92  str x6, [x5]
0xffff8bd0ada0    96  orr x7, x7, #0x1
0xffff8bd0ada4   100  movz w4, #0x0
0xffff8bd0ada8   104  stur x4, [x7, #31]
0xffff8bd0adac   108  ldur x4, [x1, #39]
0xffff8bd0adb0   112  ldur x4, [x4, #39]
0xffff8bd0adb4   116  movz x16, #0x19f
0xffff8bd0adb8   120  ldr x4, [x4, x16]
0xffff8bd0adbc   124  stur x4, [x7, #-1]
0xffff8bd0adc0   128  ldr x4, pc+240 (addr 0x0000ffff8bd0aeb0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0adc4   132  stur x4, [x7, #7]
0xffff8bd0adc8   136  ldr x4, pc+240 (addr 0x0000ffff8bd0aeb8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0adcc   140  stur x4, [x7, #15]
0xffff8bd0add0   144  stur x3, [x7, #23]
0xffff8bd0add4   148  add x4, x7, #0x20 (32)
0xffff8bd0add8   152  ldr x5, pc+232 (addr 0x0000ffff8bd0aec0)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd0addc   156  stur x5, [x4, #-1]
0xffff8bd0ade0   160  stur x3, [x4, #7]
0xffff8bd0ade4   164  stur x4, [x7, #15]
0xffff8bd0ade8   168  ldr x3, [fp]
0xffff8bd0adec   172  ldur x5, [x3, #-8]
0xffff8bd0adf0   176  movz x16, #0xe00000000
0xffff8bd0adf4   180  cmp x5, x16
0xffff8bd0adf8   184  csel x5, fp, x3, ne
0xffff8bd0adfc   188  movz x3, #0x0
0xffff8bd0ae00   192  cmp w0, w3
0xffff8bd0ae04   196  b.le #+0x44 (addr 0xffff8bd0ae48)
0xffff8bd0ae08   200  sub w6, w0, w3
0xffff8bd0ae0c   204  add w6, w6, #0x1 (1)
0xffff8bd0ae10   208  ldr x6, [x5, w6, uxtw #3]
0xffff8bd0ae14   212  tbz w6, #0, #+0x1c (addr 0xffff8bd0ae30)
0xffff8bd0ae18   216  ldur x16, [x6, #-1]
0xffff8bd0ae1c   220  ldr x17, [x26, #120]
0xffff8bd0ae20   224  cmp x16, x17
0xffff8bd0ae24   228  b.ne #+0xcc (addr 0xffff8bd0aef0)
0xffff8bd0ae28   232  ldur d0, [x6, #7]
0xffff8bd0ae2c   236  b #+0x8 (addr 0xffff8bd0ae34)
0xffff8bd0ae30   240  scvtf d0, x6, #32
0xffff8bd0ae34   244  add x6, x4, #0xf (15)
0xffff8bd0ae38   248  fsub d29, d0, d15
0xffff8bd0ae3c   252  str d29, [x6, w3, sxtw #3]
0xffff8bd0ae40   256  add w3, w3, #0x1 (1)
0xffff8bd0ae44   260  b #-0x44 (addr 0xffff8bd0ae00)
0xffff8bd0ae48   264  add w0, w0, #0x1 (1)
0xffff8bd0ae4c   268  lsl x1, x0, #32
0xffff8bd0ae50   272  mov x0, x7
0xffff8bd0ae54   276  mov jssp, fp
0xffff8bd0ae58   280  ldp fp, lr, [jssp], #16
0xffff8bd0ae5c   284  add jssp, jssp, x1, lsr #29
0xffff8bd0ae60   288  ret
0xffff8bd0ae64   292  movz x7, #0x0
0xffff8bd0ae68   296  mov x16, lr
0xffff8bd0ae6c   300  ldr x17, pc+92 (addr 0x0000ffff8bd0aec8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0ae70   304  blr x17
0xffff8bd0ae74   308  lsl x0, x4, #32
0xffff8bd0ae78   312  movz x10, #0x100000000
0xffff8bd0ae7c   316  sub csp, jssp, #0x10 (16)
0xffff8bd0ae80   320  stp x10, x0, [jssp, #-16]!
0xffff8bd0ae84   324  movz x0, #0x2
0xffff8bd0ae88   328  movz x1, #0x5b88
0xffff8bd0ae8c   332  movk x1, #0xe2, lsl #16
0xffff8bd0ae90   336  ldr x16, pc+64 (addr 0x0000ffff8bd0aed0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0ae94   340  blr x16
0xffff8bd0ae98   344  str x0, [jssp, #56]
0xffff8bd0ae9c   348  ldr x16, pc+60 (addr 0x0000ffff8bd0aed8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0aea0   352  blr x16
0xffff8bd0aea4   356  b #-0x100 (addr 0xffff8bd0ada4)
0xffff8bd0aea8   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd0aeac   364  d63f03e0       constant
0xffff8bd0aeb0   368  26c04201       constant
0xffff8bd0aeb4   372  00000000       constant
0xffff8bd0aeb8   376  26c04201       constant
0xffff8bd0aebc   380  00000000       constant
0xffff8bd0aec0   384  5f5052d9       constant
0xffff8bd0aec4   388  00000000       constant
0xffff8bd0aec8   392  8bd06820       constant
0xffff8bd0aecc   396  0000ffff       constant
0xffff8bd0aed0   400  8bd06260       constant
0xffff8bd0aed4   404  0000ffff       constant
0xffff8bd0aed8   408  8bd068e0       constant
0xffff8bd0aedc   412  0000ffff       constant
0xffff8bd0aee0   416  movz x16, #0x0
0xffff8bd0aee4   420  bl #+0x14 (addr 0xffff8bd0aef8)
0xffff8bd0aee8   424  movz x16, #0x8
0xffff8bd0aeec   428  bl #+0xc (addr 0xffff8bd0aef8)
0xffff8bd0aef0   432  movz x16, #0x10
0xffff8bd0aef4   436  bl #+0x4 (addr 0xffff8bd0aef8)
0xffff8bd0aef8   440  ldr x17, pc+24 (addr 0x0000ffff8bd0af10)    ;; lazy deoptimization bailout 0
0xffff8bd0aefc   444  add x17, x17, x16
0xffff8bd0af00   448  br x17
0xffff8bd0af04   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0af08   456  d63f03e0       constant
0xffff8bd0af0c   460  d503201f       constant
0xffff8bd0af10   464  8bb06000       constant
0xffff8bd0af14   468  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0ae98   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd0adc0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0adc8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0add8  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0ae6c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0ae90  code target (STUB)  (0xffff8bd06260)
0xffff8bd0ae9c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0aea8  constant pool (size 56)
0xffff8bd0aef8  runtime entry
0xffff8bd0af04  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_HOLEY_DOUBLE_ELEMENTS
compiler = crankshaft
Instructions (size = 493)
0xffff8bd0ad40     0  movz x16, #0xa00000000
0xffff8bd0ad44     4  sub csp, jssp, #0x10 (16)
0xffff8bd0ad48     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0ad4c    12  mov fp, jssp
0xffff8bd0ad50    16  sub csp, jssp, #0x8 (8)
0xffff8bd0ad54    20  sub jssp, jssp, #0x8 (8)
0xffff8bd0ad58    24  stur x16, [fp, #-8]
0xffff8bd0ad5c    28  movz w16, #0x257f
0xffff8bd0ad60    32  cmp w0, w16, lsl #3
0xffff8bd0ad64    36  b.hs #+0x17c (addr 0xffff8bd0aee0)
0xffff8bd0ad68    40  lsl x3, x0, #32
0xffff8bd0ad6c    44  lsl w4, w0, #3
0xffff8bd0ad70    48  add w4, w4, #0x10 (16)
0xffff8bd0ad74    52  cmp w4, #0x96000 (614400)
0xffff8bd0ad78    56  b.hs #+0x170 (addr 0xffff8bd0aee8)
0xffff8bd0ad7c    60  add w4, w4, #0x20 (32)
0xffff8bd0ad80    64  sxtw x4, w4
0xffff8bd0ad84    68  movz x5, #0xe2c0
0xffff8bd0ad88    72  movk x5, #0x2cb8, lsl #16
0xffff8bd0ad8c    76  ldp x7, x16, [x5]
0xffff8bd0ad90    80  adds x6, x7, x4
0xffff8bd0ad94    84  ccmp x6, x16, #nzCv, lo
0xffff8bd0ad98    88  b.hi #+0xcc (addr 0xffff8bd0ae64)
0xffff8bd0ad9c    92  str x6, [x5]
0xffff8bd0ada0    96  orr x7, x7, #0x1
0xffff8bd0ada4   100  movz w4, #0x0
0xffff8bd0ada8   104  stur x4, [x7, #31]
0xffff8bd0adac   108  ldur x4, [x1, #39]
0xffff8bd0adb0   112  ldur x4, [x4, #39]
0xffff8bd0adb4   116  movz x16, #0x19f
0xffff8bd0adb8   120  ldr x4, [x4, x16]
0xffff8bd0adbc   124  stur x4, [x7, #-1]
0xffff8bd0adc0   128  ldr x4, pc+240 (addr 0x0000ffff8bd0aeb0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0adc4   132  stur x4, [x7, #7]
0xffff8bd0adc8   136  ldr x4, pc+240 (addr 0x0000ffff8bd0aeb8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0adcc   140  stur x4, [x7, #15]
0xffff8bd0add0   144  stur x3, [x7, #23]
0xffff8bd0add4   148  add x4, x7, #0x20 (32)
0xffff8bd0add8   152  ldr x5, pc+232 (addr 0x0000ffff8bd0aec0)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd0addc   156  stur x5, [x4, #-1]
0xffff8bd0ade0   160  stur x3, [x4, #7]
0xffff8bd0ade4   164  stur x4, [x7, #15]
0xffff8bd0ade8   168  ldr x3, [fp]
0xffff8bd0adec   172  ldur x5, [x3, #-8]
0xffff8bd0adf0   176  movz x16, #0xe00000000
0xffff8bd0adf4   180  cmp x5, x16
0xffff8bd0adf8   184  csel x5, fp, x3, ne
0xffff8bd0adfc   188  movz x3, #0x0
0xffff8bd0ae00   192  cmp w0, w3
0xffff8bd0ae04   196  b.le #+0x44 (addr 0xffff8bd0ae48)
0xffff8bd0ae08   200  sub w6, w0, w3
0xffff8bd0ae0c   204  add w6, w6, #0x1 (1)
0xffff8bd0ae10   208  ldr x6, [x5, w6, uxtw #3]
0xffff8bd0ae14   212  tbz w6, #0, #+0x1c (addr 0xffff8bd0ae30)
0xffff8bd0ae18   216  ldur x16, [x6, #-1]
0xffff8bd0ae1c   220  ldr x17, [x26, #120]
0xffff8bd0ae20   224  cmp x16, x17
0xffff8bd0ae24   228  b.ne #+0xcc (addr 0xffff8bd0aef0)
0xffff8bd0ae28   232  ldur d0, [x6, #7]
0xffff8bd0ae2c   236  b #+0x8 (addr 0xffff8bd0ae34)
0xffff8bd0ae30   240  scvtf d0, x6, #32
0xffff8bd0ae34   244  add x6, x4, #0xf (15)
0xffff8bd0ae38   248  fsub d29, d0, d15
0xffff8bd0ae3c   252  str d29, [x6, w3, sxtw #3]
0xffff8bd0ae40   256  add w3, w3, #0x1 (1)
0xffff8bd0ae44   260  b #-0x44 (addr 0xffff8bd0ae00)
0xffff8bd0ae48   264  add w0, w0, #0x1 (1)
0xffff8bd0ae4c   268  lsl x1, x0, #32
0xffff8bd0ae50   272  mov x0, x7
0xffff8bd0ae54   276  mov jssp, fp
0xffff8bd0ae58   280  ldp fp, lr, [jssp], #16
0xffff8bd0ae5c   284  add jssp, jssp, x1, lsr #29
0xffff8bd0ae60   288  ret
0xffff8bd0ae64   292  movz x7, #0x0
0xffff8bd0ae68   296  mov x16, lr
0xffff8bd0ae6c   300  ldr x17, pc+92 (addr 0x0000ffff8bd0aec8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0ae70   304  blr x17
0xffff8bd0ae74   308  lsl x0, x4, #32
0xffff8bd0ae78   312  movz x10, #0x100000000
0xffff8bd0ae7c   316  sub csp, jssp, #0x10 (16)
0xffff8bd0ae80   320  stp x10, x0, [jssp, #-16]!
0xffff8bd0ae84   324  movz x0, #0x2
0xffff8bd0ae88   328  movz x1, #0x5b88
0xffff8bd0ae8c   332  movk x1, #0xe2, lsl #16
0xffff8bd0ae90   336  ldr x16, pc+64 (addr 0x0000ffff8bd0aed0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0ae94   340  blr x16
0xffff8bd0ae98   344  str x0, [jssp, #56]
0xffff8bd0ae9c   348  ldr x16, pc+60 (addr 0x0000ffff8bd0aed8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0aea0   352  blr x16
0xffff8bd0aea4   356  b #-0x100 (addr 0xffff8bd0ada4)
0xffff8bd0aea8   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd0aeac   364  d63f03e0       constant
0xffff8bd0aeb0   368  26c04201       constant
0xffff8bd0aeb4   372  00000000       constant
0xffff8bd0aeb8   376  26c04201       constant
0xffff8bd0aebc   380  00000000       constant
0xffff8bd0aec0   384  5f5052d9       constant
0xffff8bd0aec4   388  00000000       constant
0xffff8bd0aec8   392  8bd06820       constant
0xffff8bd0aecc   396  0000ffff       constant
0xffff8bd0aed0   400  8bd06260       constant
0xffff8bd0aed4   404  0000ffff       constant
0xffff8bd0aed8   408  8bd068e0       constant
0xffff8bd0aedc   412  0000ffff       constant
0xffff8bd0aee0   416  movz x16, #0x0
0xffff8bd0aee4   420  bl #+0x14 (addr 0xffff8bd0aef8)
0xffff8bd0aee8   424  movz x16, #0x8
0xffff8bd0aeec   428  bl #+0xc (addr 0xffff8bd0aef8)
0xffff8bd0aef0   432  movz x16, #0x10
0xffff8bd0aef4   436  bl #+0x4 (addr 0xffff8bd0aef8)
0xffff8bd0aef8   440  ldr x17, pc+24 (addr 0x0000ffff8bd0af10)    ;; lazy deoptimization bailout 0
0xffff8bd0aefc   444  add x17, x17, x16
0xffff8bd0af00   448  br x17
0xffff8bd0af04   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0af08   456  d63f03e0       constant
0xffff8bd0af0c   460  d503201f       constant
0xffff8bd0af10   464  8bb06000       constant
0xffff8bd0af14   468  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0ae98   344  000 | x1 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd0adc0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0adc8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0add8  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0ae6c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0ae90  code target (STUB)  (0xffff8bd06260)
0xffff8bd0ae9c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0aea8  constant pool (size 56)
0xffff8bd0aef8  runtime entry
0xffff8bd0af04  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 453)
0xffff8bd0afa0     0  movz x16, #0xa00000000
0xffff8bd0afa4     4  sub csp, jssp, #0x10 (16)
0xffff8bd0afa8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0afac    12  mov fp, jssp
0xffff8bd0afb0    16  sub csp, jssp, #0x8 (8)
0xffff8bd0afb4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd0afb8    24  stur x16, [fp, #-8]
0xffff8bd0afbc    28  movz w16, #0x257f
0xffff8bd0afc0    32  cmp w0, w16, lsl #3
0xffff8bd0afc4    36  b.hs #+0x15c (addr 0xffff8bd0b120)
0xffff8bd0afc8    40  lsl x3, x0, #32
0xffff8bd0afcc    44  lsl w4, w0, #3
0xffff8bd0afd0    48  add w4, w4, #0x10 (16)
0xffff8bd0afd4    52  cmp w4, #0x96000 (614400)
0xffff8bd0afd8    56  b.hs #+0x150 (addr 0xffff8bd0b128)
0xffff8bd0afdc    60  add w2, w4, #0x20 (32)
0xffff8bd0afe0    64  sxtw x2, w2
0xffff8bd0afe4    68  movz x4, #0xe2c0
0xffff8bd0afe8    72  movk x4, #0x2cb8, lsl #16
0xffff8bd0afec    76  ldp x6, x16, [x4]
0xffff8bd0aff0    80  adds x5, x6, x2
0xffff8bd0aff4    84  ccmp x5, x16, #nzCv, lo
0xffff8bd0aff8    88  b.hi #+0xa8 (addr 0xffff8bd0b0a0)
0xffff8bd0affc    92  str x5, [x4]
0xffff8bd0b000    96  orr x6, x6, #0x1
0xffff8bd0b004   100  movz w2, #0x0
0xffff8bd0b008   104  stur x2, [x6, #31]
0xffff8bd0b00c   108  ldur x1, [x1, #39]
0xffff8bd0b010   112  ldur x1, [x1, #39]
0xffff8bd0b014   116  movz x16, #0x187
0xffff8bd0b018   120  ldr x1, [x1, x16]
0xffff8bd0b01c   124  stur x1, [x6, #-1]
0xffff8bd0b020   128  ldr x1, pc+208 (addr 0x0000ffff8bd0b0f0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0b024   132  stur x1, [x6, #7]
0xffff8bd0b028   136  ldr x1, pc+208 (addr 0x0000ffff8bd0b0f8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0b02c   140  stur x1, [x6, #15]
0xffff8bd0b030   144  stur x3, [x6, #23]
0xffff8bd0b034   148  add x1, x6, #0x20 (32)
0xffff8bd0b038   152  ldr x2, pc+200 (addr 0x0000ffff8bd0b100)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd0b03c   156  stur x2, [x1, #-1]
0xffff8bd0b040   160  stur x3, [x1, #7]
0xffff8bd0b044   164  stur x1, [x6, #15]
0xffff8bd0b048   168  ldr x2, [fp]
0xffff8bd0b04c   172  ldur x3, [x2, #-8]
0xffff8bd0b050   176  movz x16, #0xe00000000
0xffff8bd0b054   180  cmp x3, x16
0xffff8bd0b058   184  csel x3, fp, x2, ne
0xffff8bd0b05c   188  movz x2, #0x0
0xffff8bd0b060   192  cmp w0, w2
0xffff8bd0b064   196  b.le #+0x20 (addr 0xffff8bd0b084)
0xffff8bd0b068   200  sub w4, w0, w2
0xffff8bd0b06c   204  add w4, w4, #0x1 (1)
0xffff8bd0b070   208  ldr x4, [x3, w4, uxtw #3]
0xffff8bd0b074   212  add x5, x1, #0xf (15)
0xffff8bd0b078   216  str x4, [x5, w2, sxtw #3]
0xffff8bd0b07c   220  add w2, w2, #0x1 (1)
0xffff8bd0b080   224  b #-0x20 (addr 0xffff8bd0b060)
0xffff8bd0b084   228  add w0, w0, #0x1 (1)
0xffff8bd0b088   232  lsl x1, x0, #32
0xffff8bd0b08c   236  mov x0, x6
0xffff8bd0b090   240  mov jssp, fp
0xffff8bd0b094   244  ldp fp, lr, [jssp], #16
0xffff8bd0b098   248  add jssp, jssp, x1, lsr #29
0xffff8bd0b09c   252  ret
0xffff8bd0b0a0   256  movz x6, #0x0
0xffff8bd0b0a4   260  mov x16, lr
0xffff8bd0b0a8   264  ldr x17, pc+96 (addr 0x0000ffff8bd0b108)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0b0ac   268  blr x17
0xffff8bd0b0b0   272  lsl x0, x2, #32
0xffff8bd0b0b4   276  movz x10, #0x0
0xffff8bd0b0b8   280  sub csp, jssp, #0x10 (16)
0xffff8bd0b0bc   284  stp x10, x0, [jssp, #-16]!
0xffff8bd0b0c0   288  movz x0, #0x2
0xffff8bd0b0c4   292  movz x1, #0x5b88
0xffff8bd0b0c8   296  movk x1, #0xe2, lsl #16
0xffff8bd0b0cc   300  ldr x16, pc+68 (addr 0x0000ffff8bd0b110)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0b0d0   304  blr x16
0xffff8bd0b0d4   308  str x0, [jssp, #48]
0xffff8bd0b0d8   312  ldr x16, pc+64 (addr 0x0000ffff8bd0b118)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0b0dc   316  blr x16
0xffff8bd0b0e0   320  b #-0xdc (addr 0xffff8bd0b004)
0xffff8bd0b0e4   324  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bd0b0e8   328  d63f03e0       constant
0xffff8bd0b0ec   332  d503201f       constant
0xffff8bd0b0f0   336  26c04201       constant
0xffff8bd0b0f4   340  00000000       constant
0xffff8bd0b0f8   344  26c04201       constant
0xffff8bd0b0fc   348  00000000       constant
0xffff8bd0b100   352  5f504259       constant
0xffff8bd0b104   356  00000000       constant
0xffff8bd0b108   360  8bd06820       constant
0xffff8bd0b10c   364  0000ffff       constant
0xffff8bd0b110   368  8bd06260       constant
0xffff8bd0b114   372  0000ffff       constant
0xffff8bd0b118   376  8bd068e0       constant
0xffff8bd0b11c   380  0000ffff       constant
0xffff8bd0b120   384  movz x16, #0x0
0xffff8bd0b124   388  bl #+0xc (addr 0xffff8bd0b130)
0xffff8bd0b128   392  movz x16, #0x8
0xffff8bd0b12c   396  bl #+0x4 (addr 0xffff8bd0b130)
0xffff8bd0b130   400  ldr x17, pc+24 (addr 0x0000ffff8bd0b148)    ;; lazy deoptimization bailout 0
0xffff8bd0b134   404  add x17, x17, x16
0xffff8bd0b138   408  br x17
0xffff8bd0b13c   412  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0b140   416  d63f03e0       constant
0xffff8bd0b144   420  d503201f       constant
0xffff8bd0b148   424  8bb06000       constant
0xffff8bd0b14c   428  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0b0d4   308  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd0b020  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0b028  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0b038  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0b0a8  code target (STUB)  (0xffff8bd06820)
0xffff8bd0b0cc  code target (STUB)  (0xffff8bd06260)
0xffff8bd0b0d8  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0b0e4  constant pool (size 60)
0xffff8bd0b130  runtime entry
0xffff8bd0b13c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_ELEMENTS
compiler = crankshaft
Instructions (size = 453)
0xffff8bd0afa0     0  movz x16, #0xa00000000
0xffff8bd0afa4     4  sub csp, jssp, #0x10 (16)
0xffff8bd0afa8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0afac    12  mov fp, jssp
0xffff8bd0afb0    16  sub csp, jssp, #0x8 (8)
0xffff8bd0afb4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd0afb8    24  stur x16, [fp, #-8]
0xffff8bd0afbc    28  movz w16, #0x257f
0xffff8bd0afc0    32  cmp w0, w16, lsl #3
0xffff8bd0afc4    36  b.hs #+0x15c (addr 0xffff8bd0b120)
0xffff8bd0afc8    40  lsl x3, x0, #32
0xffff8bd0afcc    44  lsl w4, w0, #3
0xffff8bd0afd0    48  add w4, w4, #0x10 (16)
0xffff8bd0afd4    52  cmp w4, #0x96000 (614400)
0xffff8bd0afd8    56  b.hs #+0x150 (addr 0xffff8bd0b128)
0xffff8bd0afdc    60  add w2, w4, #0x20 (32)
0xffff8bd0afe0    64  sxtw x2, w2
0xffff8bd0afe4    68  movz x4, #0xe2c0
0xffff8bd0afe8    72  movk x4, #0x2cb8, lsl #16
0xffff8bd0afec    76  ldp x6, x16, [x4]
0xffff8bd0aff0    80  adds x5, x6, x2
0xffff8bd0aff4    84  ccmp x5, x16, #nzCv, lo
0xffff8bd0aff8    88  b.hi #+0xa8 (addr 0xffff8bd0b0a0)
0xffff8bd0affc    92  str x5, [x4]
0xffff8bd0b000    96  orr x6, x6, #0x1
0xffff8bd0b004   100  movz w2, #0x0
0xffff8bd0b008   104  stur x2, [x6, #31]
0xffff8bd0b00c   108  ldur x1, [x1, #39]
0xffff8bd0b010   112  ldur x1, [x1, #39]
0xffff8bd0b014   116  movz x16, #0x187
0xffff8bd0b018   120  ldr x1, [x1, x16]
0xffff8bd0b01c   124  stur x1, [x6, #-1]
0xffff8bd0b020   128  ldr x1, pc+208 (addr 0x0000ffff8bd0b0f0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0b024   132  stur x1, [x6, #7]
0xffff8bd0b028   136  ldr x1, pc+208 (addr 0x0000ffff8bd0b0f8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0b02c   140  stur x1, [x6, #15]
0xffff8bd0b030   144  stur x3, [x6, #23]
0xffff8bd0b034   148  add x1, x6, #0x20 (32)
0xffff8bd0b038   152  ldr x2, pc+200 (addr 0x0000ffff8bd0b100)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd0b03c   156  stur x2, [x1, #-1]
0xffff8bd0b040   160  stur x3, [x1, #7]
0xffff8bd0b044   164  stur x1, [x6, #15]
0xffff8bd0b048   168  ldr x2, [fp]
0xffff8bd0b04c   172  ldur x3, [x2, #-8]
0xffff8bd0b050   176  movz x16, #0xe00000000
0xffff8bd0b054   180  cmp x3, x16
0xffff8bd0b058   184  csel x3, fp, x2, ne
0xffff8bd0b05c   188  movz x2, #0x0
0xffff8bd0b060   192  cmp w0, w2
0xffff8bd0b064   196  b.le #+0x20 (addr 0xffff8bd0b084)
0xffff8bd0b068   200  sub w4, w0, w2
0xffff8bd0b06c   204  add w4, w4, #0x1 (1)
0xffff8bd0b070   208  ldr x4, [x3, w4, uxtw #3]
0xffff8bd0b074   212  add x5, x1, #0xf (15)
0xffff8bd0b078   216  str x4, [x5, w2, sxtw #3]
0xffff8bd0b07c   220  add w2, w2, #0x1 (1)
0xffff8bd0b080   224  b #-0x20 (addr 0xffff8bd0b060)
0xffff8bd0b084   228  add w0, w0, #0x1 (1)
0xffff8bd0b088   232  lsl x1, x0, #32
0xffff8bd0b08c   236  mov x0, x6
0xffff8bd0b090   240  mov jssp, fp
0xffff8bd0b094   244  ldp fp, lr, [jssp], #16
0xffff8bd0b098   248  add jssp, jssp, x1, lsr #29
0xffff8bd0b09c   252  ret
0xffff8bd0b0a0   256  movz x6, #0x0
0xffff8bd0b0a4   260  mov x16, lr
0xffff8bd0b0a8   264  ldr x17, pc+96 (addr 0x0000ffff8bd0b108)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0b0ac   268  blr x17
0xffff8bd0b0b0   272  lsl x0, x2, #32
0xffff8bd0b0b4   276  movz x10, #0x0
0xffff8bd0b0b8   280  sub csp, jssp, #0x10 (16)
0xffff8bd0b0bc   284  stp x10, x0, [jssp, #-16]!
0xffff8bd0b0c0   288  movz x0, #0x2
0xffff8bd0b0c4   292  movz x1, #0x5b88
0xffff8bd0b0c8   296  movk x1, #0xe2, lsl #16
0xffff8bd0b0cc   300  ldr x16, pc+68 (addr 0x0000ffff8bd0b110)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0b0d0   304  blr x16
0xffff8bd0b0d4   308  str x0, [jssp, #48]
0xffff8bd0b0d8   312  ldr x16, pc+64 (addr 0x0000ffff8bd0b118)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0b0dc   316  blr x16
0xffff8bd0b0e0   320  b #-0xdc (addr 0xffff8bd0b004)
0xffff8bd0b0e4   324  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bd0b0e8   328  d63f03e0       constant
0xffff8bd0b0ec   332  d503201f       constant
0xffff8bd0b0f0   336  26c04201       constant
0xffff8bd0b0f4   340  00000000       constant
0xffff8bd0b0f8   344  26c04201       constant
0xffff8bd0b0fc   348  00000000       constant
0xffff8bd0b100   352  5f504259       constant
0xffff8bd0b104   356  00000000       constant
0xffff8bd0b108   360  8bd06820       constant
0xffff8bd0b10c   364  0000ffff       constant
0xffff8bd0b110   368  8bd06260       constant
0xffff8bd0b114   372  0000ffff       constant
0xffff8bd0b118   376  8bd068e0       constant
0xffff8bd0b11c   380  0000ffff       constant
0xffff8bd0b120   384  movz x16, #0x0
0xffff8bd0b124   388  bl #+0xc (addr 0xffff8bd0b130)
0xffff8bd0b128   392  movz x16, #0x8
0xffff8bd0b12c   396  bl #+0x4 (addr 0xffff8bd0b130)
0xffff8bd0b130   400  ldr x17, pc+24 (addr 0x0000ffff8bd0b148)    ;; lazy deoptimization bailout 0
0xffff8bd0b134   404  add x17, x17, x16
0xffff8bd0b138   408  br x17
0xffff8bd0b13c   412  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0b140   416  d63f03e0       constant
0xffff8bd0b144   420  d503201f       constant
0xffff8bd0b148   424  8bb06000       constant
0xffff8bd0b14c   428  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0b0d4   308  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd0b020  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0b028  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0b038  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0b0a8  code target (STUB)  (0xffff8bd06820)
0xffff8bd0b0cc  code target (STUB)  (0xffff8bd06260)
0xffff8bd0b0d8  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0b0e4  constant pool (size 60)
0xffff8bd0b130  runtime entry
0xffff8bd0b13c  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 453)
0xffff8bd0b1e0     0  movz x16, #0xa00000000
0xffff8bd0b1e4     4  sub csp, jssp, #0x10 (16)
0xffff8bd0b1e8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0b1ec    12  mov fp, jssp
0xffff8bd0b1f0    16  sub csp, jssp, #0x8 (8)
0xffff8bd0b1f4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd0b1f8    24  stur x16, [fp, #-8]
0xffff8bd0b1fc    28  movz w16, #0x257f
0xffff8bd0b200    32  cmp w0, w16, lsl #3
0xffff8bd0b204    36  b.hs #+0x15c (addr 0xffff8bd0b360)
0xffff8bd0b208    40  lsl x3, x0, #32
0xffff8bd0b20c    44  lsl w4, w0, #3
0xffff8bd0b210    48  add w4, w4, #0x10 (16)
0xffff8bd0b214    52  cmp w4, #0x96000 (614400)
0xffff8bd0b218    56  b.hs #+0x150 (addr 0xffff8bd0b368)
0xffff8bd0b21c    60  add w2, w4, #0x20 (32)
0xffff8bd0b220    64  sxtw x2, w2
0xffff8bd0b224    68  movz x4, #0xe2c0
0xffff8bd0b228    72  movk x4, #0x2cb8, lsl #16
0xffff8bd0b22c    76  ldp x6, x16, [x4]
0xffff8bd0b230    80  adds x5, x6, x2
0xffff8bd0b234    84  ccmp x5, x16, #nzCv, lo
0xffff8bd0b238    88  b.hi #+0xa8 (addr 0xffff8bd0b2e0)
0xffff8bd0b23c    92  str x5, [x4]
0xffff8bd0b240    96  orr x6, x6, #0x1
0xffff8bd0b244   100  movz w2, #0x0
0xffff8bd0b248   104  stur x2, [x6, #31]
0xffff8bd0b24c   108  ldur x1, [x1, #39]
0xffff8bd0b250   112  ldur x1, [x1, #39]
0xffff8bd0b254   116  movz x16, #0x18f
0xffff8bd0b258   120  ldr x1, [x1, x16]
0xffff8bd0b25c   124  stur x1, [x6, #-1]
0xffff8bd0b260   128  ldr x1, pc+208 (addr 0x0000ffff8bd0b330)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0b264   132  stur x1, [x6, #7]
0xffff8bd0b268   136  ldr x1, pc+208 (addr 0x0000ffff8bd0b338)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0b26c   140  stur x1, [x6, #15]
0xffff8bd0b270   144  stur x3, [x6, #23]
0xffff8bd0b274   148  add x1, x6, #0x20 (32)
0xffff8bd0b278   152  ldr x2, pc+200 (addr 0x0000ffff8bd0b340)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd0b27c   156  stur x2, [x1, #-1]
0xffff8bd0b280   160  stur x3, [x1, #7]
0xffff8bd0b284   164  stur x1, [x6, #15]
0xffff8bd0b288   168  ldr x2, [fp]
0xffff8bd0b28c   172  ldur x3, [x2, #-8]
0xffff8bd0b290   176  movz x16, #0xe00000000
0xffff8bd0b294   180  cmp x3, x16
0xffff8bd0b298   184  csel x3, fp, x2, ne
0xffff8bd0b29c   188  movz x2, #0x0
0xffff8bd0b2a0   192  cmp w0, w2
0xffff8bd0b2a4   196  b.le #+0x20 (addr 0xffff8bd0b2c4)
0xffff8bd0b2a8   200  sub w4, w0, w2
0xffff8bd0b2ac   204  add w4, w4, #0x1 (1)
0xffff8bd0b2b0   208  ldr x4, [x3, w4, uxtw #3]
0xffff8bd0b2b4   212  add x5, x1, #0xf (15)
0xffff8bd0b2b8   216  str x4, [x5, w2, sxtw #3]
0xffff8bd0b2bc   220  add w2, w2, #0x1 (1)
0xffff8bd0b2c0   224  b #-0x20 (addr 0xffff8bd0b2a0)
0xffff8bd0b2c4   228  add w0, w0, #0x1 (1)
0xffff8bd0b2c8   232  lsl x1, x0, #32
0xffff8bd0b2cc   236  mov x0, x6
0xffff8bd0b2d0   240  mov jssp, fp
0xffff8bd0b2d4   244  ldp fp, lr, [jssp], #16
0xffff8bd0b2d8   248  add jssp, jssp, x1, lsr #29
0xffff8bd0b2dc   252  ret
0xffff8bd0b2e0   256  movz x6, #0x0
0xffff8bd0b2e4   260  mov x16, lr
0xffff8bd0b2e8   264  ldr x17, pc+96 (addr 0x0000ffff8bd0b348)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0b2ec   268  blr x17
0xffff8bd0b2f0   272  lsl x0, x2, #32
0xffff8bd0b2f4   276  movz x10, #0x0
0xffff8bd0b2f8   280  sub csp, jssp, #0x10 (16)
0xffff8bd0b2fc   284  stp x10, x0, [jssp, #-16]!
0xffff8bd0b300   288  movz x0, #0x2
0xffff8bd0b304   292  movz x1, #0x5b88
0xffff8bd0b308   296  movk x1, #0xe2, lsl #16
0xffff8bd0b30c   300  ldr x16, pc+68 (addr 0x0000ffff8bd0b350)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0b310   304  blr x16
0xffff8bd0b314   308  str x0, [jssp, #48]
0xffff8bd0b318   312  ldr x16, pc+64 (addr 0x0000ffff8bd0b358)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0b31c   316  blr x16
0xffff8bd0b320   320  b #-0xdc (addr 0xffff8bd0b244)
0xffff8bd0b324   324  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bd0b328   328  d63f03e0       constant
0xffff8bd0b32c   332  d503201f       constant
0xffff8bd0b330   336  26c04201       constant
0xffff8bd0b334   340  00000000       constant
0xffff8bd0b338   344  26c04201       constant
0xffff8bd0b33c   348  00000000       constant
0xffff8bd0b340   352  5f504259       constant
0xffff8bd0b344   356  00000000       constant
0xffff8bd0b348   360  8bd06820       constant
0xffff8bd0b34c   364  0000ffff       constant
0xffff8bd0b350   368  8bd06260       constant
0xffff8bd0b354   372  0000ffff       constant
0xffff8bd0b358   376  8bd068e0       constant
0xffff8bd0b35c   380  0000ffff       constant
0xffff8bd0b360   384  movz x16, #0x0
0xffff8bd0b364   388  bl #+0xc (addr 0xffff8bd0b370)
0xffff8bd0b368   392  movz x16, #0x8
0xffff8bd0b36c   396  bl #+0x4 (addr 0xffff8bd0b370)
0xffff8bd0b370   400  ldr x17, pc+24 (addr 0x0000ffff8bd0b388)    ;; lazy deoptimization bailout 0
0xffff8bd0b374   404  add x17, x17, x16
0xffff8bd0b378   408  br x17
0xffff8bd0b37c   412  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0b380   416  d63f03e0       constant
0xffff8bd0b384   420  d503201f       constant
0xffff8bd0b388   424  8bb06000       constant
0xffff8bd0b38c   428  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0b314   308  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd0b260  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0b268  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0b278  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0b2e8  code target (STUB)  (0xffff8bd06820)
0xffff8bd0b30c  code target (STUB)  (0xffff8bd06260)
0xffff8bd0b318  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0b324  constant pool (size 60)
0xffff8bd0b370  runtime entry
0xffff8bd0b37c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ArrayNArgumentsConstructorStub
name = ArrayNArgumentsConstructorStub_FAST_HOLEY_ELEMENTS
compiler = crankshaft
Instructions (size = 453)
0xffff8bd0b1e0     0  movz x16, #0xa00000000
0xffff8bd0b1e4     4  sub csp, jssp, #0x10 (16)
0xffff8bd0b1e8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0b1ec    12  mov fp, jssp
0xffff8bd0b1f0    16  sub csp, jssp, #0x8 (8)
0xffff8bd0b1f4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd0b1f8    24  stur x16, [fp, #-8]
0xffff8bd0b1fc    28  movz w16, #0x257f
0xffff8bd0b200    32  cmp w0, w16, lsl #3
0xffff8bd0b204    36  b.hs #+0x15c (addr 0xffff8bd0b360)
0xffff8bd0b208    40  lsl x3, x0, #32
0xffff8bd0b20c    44  lsl w4, w0, #3
0xffff8bd0b210    48  add w4, w4, #0x10 (16)
0xffff8bd0b214    52  cmp w4, #0x96000 (614400)
0xffff8bd0b218    56  b.hs #+0x150 (addr 0xffff8bd0b368)
0xffff8bd0b21c    60  add w2, w4, #0x20 (32)
0xffff8bd0b220    64  sxtw x2, w2
0xffff8bd0b224    68  movz x4, #0xe2c0
0xffff8bd0b228    72  movk x4, #0x2cb8, lsl #16
0xffff8bd0b22c    76  ldp x6, x16, [x4]
0xffff8bd0b230    80  adds x5, x6, x2
0xffff8bd0b234    84  ccmp x5, x16, #nzCv, lo
0xffff8bd0b238    88  b.hi #+0xa8 (addr 0xffff8bd0b2e0)
0xffff8bd0b23c    92  str x5, [x4]
0xffff8bd0b240    96  orr x6, x6, #0x1
0xffff8bd0b244   100  movz w2, #0x0
0xffff8bd0b248   104  stur x2, [x6, #31]
0xffff8bd0b24c   108  ldur x1, [x1, #39]
0xffff8bd0b250   112  ldur x1, [x1, #39]
0xffff8bd0b254   116  movz x16, #0x18f
0xffff8bd0b258   120  ldr x1, [x1, x16]
0xffff8bd0b25c   124  stur x1, [x6, #-1]
0xffff8bd0b260   128  ldr x1, pc+208 (addr 0x0000ffff8bd0b330)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0b264   132  stur x1, [x6, #7]
0xffff8bd0b268   136  ldr x1, pc+208 (addr 0x0000ffff8bd0b338)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0b26c   140  stur x1, [x6, #15]
0xffff8bd0b270   144  stur x3, [x6, #23]
0xffff8bd0b274   148  add x1, x6, #0x20 (32)
0xffff8bd0b278   152  ldr x2, pc+200 (addr 0x0000ffff8bd0b340)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd0b27c   156  stur x2, [x1, #-1]
0xffff8bd0b280   160  stur x3, [x1, #7]
0xffff8bd0b284   164  stur x1, [x6, #15]
0xffff8bd0b288   168  ldr x2, [fp]
0xffff8bd0b28c   172  ldur x3, [x2, #-8]
0xffff8bd0b290   176  movz x16, #0xe00000000
0xffff8bd0b294   180  cmp x3, x16
0xffff8bd0b298   184  csel x3, fp, x2, ne
0xffff8bd0b29c   188  movz x2, #0x0
0xffff8bd0b2a0   192  cmp w0, w2
0xffff8bd0b2a4   196  b.le #+0x20 (addr 0xffff8bd0b2c4)
0xffff8bd0b2a8   200  sub w4, w0, w2
0xffff8bd0b2ac   204  add w4, w4, #0x1 (1)
0xffff8bd0b2b0   208  ldr x4, [x3, w4, uxtw #3]
0xffff8bd0b2b4   212  add x5, x1, #0xf (15)
0xffff8bd0b2b8   216  str x4, [x5, w2, sxtw #3]
0xffff8bd0b2bc   220  add w2, w2, #0x1 (1)
0xffff8bd0b2c0   224  b #-0x20 (addr 0xffff8bd0b2a0)
0xffff8bd0b2c4   228  add w0, w0, #0x1 (1)
0xffff8bd0b2c8   232  lsl x1, x0, #32
0xffff8bd0b2cc   236  mov x0, x6
0xffff8bd0b2d0   240  mov jssp, fp
0xffff8bd0b2d4   244  ldp fp, lr, [jssp], #16
0xffff8bd0b2d8   248  add jssp, jssp, x1, lsr #29
0xffff8bd0b2dc   252  ret
0xffff8bd0b2e0   256  movz x6, #0x0
0xffff8bd0b2e4   260  mov x16, lr
0xffff8bd0b2e8   264  ldr x17, pc+96 (addr 0x0000ffff8bd0b348)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0b2ec   268  blr x17
0xffff8bd0b2f0   272  lsl x0, x2, #32
0xffff8bd0b2f4   276  movz x10, #0x0
0xffff8bd0b2f8   280  sub csp, jssp, #0x10 (16)
0xffff8bd0b2fc   284  stp x10, x0, [jssp, #-16]!
0xffff8bd0b300   288  movz x0, #0x2
0xffff8bd0b304   292  movz x1, #0x5b88
0xffff8bd0b308   296  movk x1, #0xe2, lsl #16
0xffff8bd0b30c   300  ldr x16, pc+68 (addr 0x0000ffff8bd0b350)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0b310   304  blr x16
0xffff8bd0b314   308  str x0, [jssp, #48]
0xffff8bd0b318   312  ldr x16, pc+64 (addr 0x0000ffff8bd0b358)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0b31c   316  blr x16
0xffff8bd0b320   320  b #-0xdc (addr 0xffff8bd0b244)
0xffff8bd0b324   324  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bd0b328   328  d63f03e0       constant
0xffff8bd0b32c   332  d503201f       constant
0xffff8bd0b330   336  26c04201       constant
0xffff8bd0b334   340  00000000       constant
0xffff8bd0b338   344  26c04201       constant
0xffff8bd0b33c   348  00000000       constant
0xffff8bd0b340   352  5f504259       constant
0xffff8bd0b344   356  00000000       constant
0xffff8bd0b348   360  8bd06820       constant
0xffff8bd0b34c   364  0000ffff       constant
0xffff8bd0b350   368  8bd06260       constant
0xffff8bd0b354   372  0000ffff       constant
0xffff8bd0b358   376  8bd068e0       constant
0xffff8bd0b35c   380  0000ffff       constant
0xffff8bd0b360   384  movz x16, #0x0
0xffff8bd0b364   388  bl #+0xc (addr 0xffff8bd0b370)
0xffff8bd0b368   392  movz x16, #0x8
0xffff8bd0b36c   396  bl #+0x4 (addr 0xffff8bd0b370)
0xffff8bd0b370   400  ldr x17, pc+24 (addr 0x0000ffff8bd0b388)    ;; lazy deoptimization bailout 0
0xffff8bd0b374   404  add x17, x17, x16
0xffff8bd0b378   408  br x17
0xffff8bd0b37c   412  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0b380   416  d63f03e0       constant
0xffff8bd0b384   420  d503201f       constant
0xffff8bd0b388   424  8bb06000       constant
0xffff8bd0b38c   428  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0b314   308  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd0b260  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0b268  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0b278  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd0b2e8  code target (STUB)  (0xffff8bd06820)
0xffff8bd0b30c  code target (STUB)  (0xffff8bd06260)
0xffff8bd0b318  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0b324  constant pool (size 60)
0xffff8bd0b370  runtime entry
0xffff8bd0b37c  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1904)
0xffff8bd0b420     0  adr xzr, #+0x40 (addr 0xffff8bd0b460)
0xffff8bd0b424     4  adr xzr, #+0x358 (addr 0xffff8bd0b77c)
0xffff8bd0b428     8  ldr x16, pc+1720 (addr 0x0000ffff8bd0bae0)    ;; external reference (store_buffer_top)
0xffff8bd0b42c    12  ldr x0, [x16]
0xffff8bd0b430    16  str x1, [x0], #8
0xffff8bd0b434    20  str x0, [x16]
0xffff8bd0b438    24  tst x0, #0x1ffff
0xffff8bd0b43c    28  b.eq #+0x8 (addr 0xffff8bd0b444)
0xffff8bd0b440    32  ret
0xffff8bd0b444    36  sub csp, jssp, #0x8 (8)
0xffff8bd0b448    40  str lr, [jssp, #-8]!
0xffff8bd0b44c    44  ldr x17, pc+1692 (addr 0x0000ffff8bd0bae8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0b450    48  blr x17
0xffff8bd0b454    52  ldr lr, [jssp], #8
0xffff8bd0b458    56  ret
0xffff8bd0b45c    60  ret
0xffff8bd0b460    64  sub csp, jssp, #0x10 (16)
0xffff8bd0b464    68  stp x3, x2, [jssp, #-16]!
0xffff8bd0b468    72  ldr x0, [x1]
0xffff8bd0b46c    76  and x16, x0, #0xfffffffffff00000
0xffff8bd0b470    80  ldr x16, [x16, #8]
0xffff8bd0b474    84  tst x16, #0x18
0xffff8bd0b478    88  b.eq #+0x1d4 (addr 0xffff8bd0b64c)
0xffff8bd0b47c    92  and x16, x4, #0xfffffffffff00000
0xffff8bd0b480    96  ldr x16, [x16, #8]
0xffff8bd0b484   100  tst x16, #0x18
0xffff8bd0b488   104  b.ne #+0x1c4 (addr 0xffff8bd0b64c)
0xffff8bd0b48c   108  and x0, x4, #0xfffffffffff00000
0xffff8bd0b490   112  ldr x2, [x0, #104]
0xffff8bd0b494   116  subs x2, x2, #0x1 (1)
0xffff8bd0b498   120  str x2, [x0, #104]
0xffff8bd0b49c   124  b.mi #+0xc4 (addr 0xffff8bd0b560)
0xffff8bd0b4a0   128  ubfx x16, x4, #8, #12
0xffff8bd0b4a4   132  and x0, x4, #0xfffffffffff00000
0xffff8bd0b4a8   136  add x0, x0, x16, lsl #2
0xffff8bd0b4ac   140  ubfx x2, x4, #3, #5
0xffff8bd0b4b0   144  ldr x0, [x0, #360]
0xffff8bd0b4b4   148  lsr x0, x0, x2
0xffff8bd0b4b8   152  tbz w0, #0, #+0x8 (addr 0xffff8bd0b4c0)
0xffff8bd0b4bc   156  tbnz w0, #1, #+0x3c (addr 0xffff8bd0b4f8)
0xffff8bd0b4c0   160  ldp x3, x2, [jssp], #16
0xffff8bd0b4c4   164  ldr x16, pc+1580 (addr 0x0000ffff8bd0baf0)    ;; external reference (store_buffer_top)
0xffff8bd0b4c8   168  ldr x0, [x16]
0xffff8bd0b4cc   172  str x1, [x0], #8
0xffff8bd0b4d0   176  str x0, [x16]
0xffff8bd0b4d4   180  tst x0, #0x1ffff
0xffff8bd0b4d8   184  b.eq #+0x8 (addr 0xffff8bd0b4e0)
0xffff8bd0b4dc   188  ret
0xffff8bd0b4e0   192  sub csp, jssp, #0x8 (8)
0xffff8bd0b4e4   196  str lr, [jssp, #-8]!
0xffff8bd0b4e8   200  ldr x17, pc+1552 (addr 0x0000ffff8bd0baf8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0b4ec   204  blr x17
0xffff8bd0b4f0   208  ldr lr, [jssp], #8
0xffff8bd0b4f4   212  ret
0xffff8bd0b4f8   216  ldr x0, [x1]
0xffff8bd0b4fc   220  sub csp, jssp, #0x10 (16)
0xffff8bd0b500   224  stp x4, x1, [jssp, #-16]!
0xffff8bd0b504   228  ubfx x16, x0, #8, #12
0xffff8bd0b508   232  and x2, x0, #0xfffffffffff00000
0xffff8bd0b50c   236  add x2, x2, x16, lsl #2
0xffff8bd0b510   240  ubfx x4, x0, #3, #5
0xffff8bd0b514   244  ldr x1, [x2, #360]
0xffff8bd0b518   248  lsr x1, x1, x4
0xffff8bd0b51c   252  tbz w1, #0, #+0x40 (addr 0xffff8bd0b55c)
0xffff8bd0b520   256  ldp x4, x1, [jssp], #16
0xffff8bd0b524   260  ldp x3, x2, [jssp], #16
0xffff8bd0b528   264  ldr x16, pc+1496 (addr 0x0000ffff8bd0bb00)    ;; external reference (store_buffer_top)
0xffff8bd0b52c   268  ldr x0, [x16]
0xffff8bd0b530   272  str x1, [x0], #8
0xffff8bd0b534   276  str x0, [x16]
0xffff8bd0b538   280  tst x0, #0x1ffff
0xffff8bd0b53c   284  b.eq #+0x8 (addr 0xffff8bd0b544)
0xffff8bd0b540   288  ret
0xffff8bd0b544   292  sub csp, jssp, #0x8 (8)
0xffff8bd0b548   296  str lr, [jssp, #-8]!
0xffff8bd0b54c   300  ldr x17, pc+1468 (addr 0x0000ffff8bd0bb08)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0b550   304  blr x17
0xffff8bd0b554   308  ldr lr, [jssp], #8
0xffff8bd0b558   312  ret
0xffff8bd0b55c   316  ldp x4, x1, [jssp], #16
0xffff8bd0b560   320  sub csp, jssp, #0x78 (120)
0xffff8bd0b564   324  stp x14, x15, [jssp, #-32]!
0xffff8bd0b568   328  stp x18, lr, [jssp, #16]
0xffff8bd0b56c   332  stp x10, x11, [jssp, #-32]!
0xffff8bd0b570   336  stp x12, x13, [jssp, #16]
0xffff8bd0b574   340  stp x6, x7, [jssp, #-32]!
0xffff8bd0b578   344  stp x8, x9, [jssp, #16]
0xffff8bd0b57c   348  stp x1, x4, [jssp, #-24]!
0xffff8bd0b580   352  str x5, [jssp, #16]
0xffff8bd0b584   356  sub csp, jssp, #0xb0 (176)
0xffff8bd0b588   360  stp d26, d27, [jssp, #-32]!
0xffff8bd0b58c   364  stp d28, d29, [jssp, #16]
0xffff8bd0b590   368  stp d22, d23, [jssp, #-32]!
0xffff8bd0b594   372  stp d24, d25, [jssp, #16]
0xffff8bd0b598   376  stp d18, d19, [jssp, #-32]!
0xffff8bd0b59c   380  stp d20, d21, [jssp, #16]
0xffff8bd0b5a0   384  stp d6, d7, [jssp, #-32]!
0xffff8bd0b5a4   388  stp d16, d17, [jssp, #16]
0xffff8bd0b5a8   392  stp d2, d3, [jssp, #-32]!
0xffff8bd0b5ac   396  stp d4, d5, [jssp, #16]
0xffff8bd0b5b0   400  stp d0, d1, [jssp, #-16]!
0xffff8bd0b5b4   404  mov x0, x4
0xffff8bd0b5b8   408  ldr x2, pc+1368 (addr 0x0000ffff8bd0bb10)    ;; external reference (isolate)
0xffff8bd0b5bc   412  ldr x16, pc+1372 (addr 0x0000ffff8bd0bb18)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0b5c0   416  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0b5c4   420  blr x16
0xffff8bd0b5c8   424  ldp d2, d3, [jssp, #16]
0xffff8bd0b5cc   428  ldp d0, d1, [jssp], #32
0xffff8bd0b5d0   432  ldp d6, d7, [jssp, #16]
0xffff8bd0b5d4   436  ldp d4, d5, [jssp], #32
0xffff8bd0b5d8   440  ldp d18, d19, [jssp, #16]
0xffff8bd0b5dc   444  ldp d16, d17, [jssp], #32
0xffff8bd0b5e0   448  ldp d22, d23, [jssp, #16]
0xffff8bd0b5e4   452  ldp d20, d21, [jssp], #32
0xffff8bd0b5e8   456  ldp d26, d27, [jssp, #16]
0xffff8bd0b5ec   460  ldp d24, d25, [jssp], #32
0xffff8bd0b5f0   464  ldp d28, d29, [jssp], #16
0xffff8bd0b5f4   468  ldp x5, x6, [jssp, #16]
0xffff8bd0b5f8   472  ldp x1, x4, [jssp], #32
0xffff8bd0b5fc   476  ldp x9, x10, [jssp, #16]
0xffff8bd0b600   480  ldp x7, x8, [jssp], #32
0xffff8bd0b604   484  ldp x13, x14, [jssp, #16]
0xffff8bd0b608   488  ldp x11, x12, [jssp], #32
0xffff8bd0b60c   492  ldr lr, [jssp, #16]
0xffff8bd0b610   496  ldp x15, x18, [jssp], #24
0xffff8bd0b614   500  ldp x3, x2, [jssp], #16
0xffff8bd0b618   504  ldr x16, pc+1288 (addr 0x0000ffff8bd0bb20)    ;; external reference (store_buffer_top)
0xffff8bd0b61c   508  ldr x0, [x16]
0xffff8bd0b620   512  str x1, [x0], #8
0xffff8bd0b624   516  str x0, [x16]
0xffff8bd0b628   520  tst x0, #0x1ffff
0xffff8bd0b62c   524  b.eq #+0x8 (addr 0xffff8bd0b634)
0xffff8bd0b630   528  ret
0xffff8bd0b634   532  sub csp, jssp, #0x8 (8)
0xffff8bd0b638   536  str lr, [jssp, #-8]!
0xffff8bd0b63c   540  ldr x17, pc+1260 (addr 0x0000ffff8bd0bb28)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0b640   544  blr x17
0xffff8bd0b644   548  ldr lr, [jssp], #8
0xffff8bd0b648   552  ret
0xffff8bd0b64c   556  and x0, x4, #0xfffffffffff00000
0xffff8bd0b650   560  ldr x2, [x0, #104]
0xffff8bd0b654   564  subs x2, x2, #0x1 (1)
0xffff8bd0b658   568  str x2, [x0, #104]
0xffff8bd0b65c   572  b.mi #+0x64 (addr 0xffff8bd0b6c0)
0xffff8bd0b660   576  ubfx x16, x4, #8, #12
0xffff8bd0b664   580  and x0, x4, #0xfffffffffff00000
0xffff8bd0b668   584  add x0, x0, x16, lsl #2
0xffff8bd0b66c   588  ubfx x2, x4, #3, #5
0xffff8bd0b670   592  ldr x0, [x0, #360]
0xffff8bd0b674   596  lsr x0, x0, x2
0xffff8bd0b678   600  tbz w0, #0, #+0x8 (addr 0xffff8bd0b680)
0xffff8bd0b67c   604  tbnz w0, #1, #+0xc (addr 0xffff8bd0b688)
0xffff8bd0b680   608  ldp x3, x2, [jssp], #16
0xffff8bd0b684   612  ret
0xffff8bd0b688   616  ldr x0, [x1]
0xffff8bd0b68c   620  sub csp, jssp, #0x10 (16)
0xffff8bd0b690   624  stp x4, x1, [jssp, #-16]!
0xffff8bd0b694   628  ubfx x16, x0, #8, #12
0xffff8bd0b698   632  and x2, x0, #0xfffffffffff00000
0xffff8bd0b69c   636  add x2, x2, x16, lsl #2
0xffff8bd0b6a0   640  ubfx x4, x0, #3, #5
0xffff8bd0b6a4   644  ldr x1, [x2, #360]
0xffff8bd0b6a8   648  lsr x1, x1, x4
0xffff8bd0b6ac   652  tbz w1, #0, #+0x10 (addr 0xffff8bd0b6bc)
0xffff8bd0b6b0   656  ldp x4, x1, [jssp], #16
0xffff8bd0b6b4   660  ldp x3, x2, [jssp], #16
0xffff8bd0b6b8   664  ret
0xffff8bd0b6bc   668  ldp x4, x1, [jssp], #16
0xffff8bd0b6c0   672  sub csp, jssp, #0x78 (120)
0xffff8bd0b6c4   676  stp x14, x15, [jssp, #-32]!
0xffff8bd0b6c8   680  stp x18, lr, [jssp, #16]
0xffff8bd0b6cc   684  stp x10, x11, [jssp, #-32]!
0xffff8bd0b6d0   688  stp x12, x13, [jssp, #16]
0xffff8bd0b6d4   692  stp x6, x7, [jssp, #-32]!
0xffff8bd0b6d8   696  stp x8, x9, [jssp, #16]
0xffff8bd0b6dc   700  stp x1, x4, [jssp, #-24]!
0xffff8bd0b6e0   704  str x5, [jssp, #16]
0xffff8bd0b6e4   708  sub csp, jssp, #0xb0 (176)
0xffff8bd0b6e8   712  stp d26, d27, [jssp, #-32]!
0xffff8bd0b6ec   716  stp d28, d29, [jssp, #16]
0xffff8bd0b6f0   720  stp d22, d23, [jssp, #-32]!
0xffff8bd0b6f4   724  stp d24, d25, [jssp, #16]
0xffff8bd0b6f8   728  stp d18, d19, [jssp, #-32]!
0xffff8bd0b6fc   732  stp d20, d21, [jssp, #16]
0xffff8bd0b700   736  stp d6, d7, [jssp, #-32]!
0xffff8bd0b704   740  stp d16, d17, [jssp, #16]
0xffff8bd0b708   744  stp d2, d3, [jssp, #-32]!
0xffff8bd0b70c   748  stp d4, d5, [jssp, #16]
0xffff8bd0b710   752  stp d0, d1, [jssp, #-16]!
0xffff8bd0b714   756  mov x0, x4
0xffff8bd0b718   760  ldr x2, pc+1048 (addr 0x0000ffff8bd0bb30)    ;; external reference (isolate)
0xffff8bd0b71c   764  ldr x16, pc+1052 (addr 0x0000ffff8bd0bb38)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0b720   768  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0b724   772  blr x16
0xffff8bd0b728   776  ldp d2, d3, [jssp, #16]
0xffff8bd0b72c   780  ldp d0, d1, [jssp], #32
0xffff8bd0b730   784  ldp d6, d7, [jssp, #16]
0xffff8bd0b734   788  ldp d4, d5, [jssp], #32
0xffff8bd0b738   792  ldp d18, d19, [jssp, #16]
0xffff8bd0b73c   796  ldp d16, d17, [jssp], #32
0xffff8bd0b740   800  ldp d22, d23, [jssp, #16]
0xffff8bd0b744   804  ldp d20, d21, [jssp], #32
0xffff8bd0b748   808  ldp d26, d27, [jssp, #16]
0xffff8bd0b74c   812  ldp d24, d25, [jssp], #32
0xffff8bd0b750   816  ldp d28, d29, [jssp], #16
0xffff8bd0b754   820  ldp x5, x6, [jssp, #16]
0xffff8bd0b758   824  ldp x1, x4, [jssp], #32
0xffff8bd0b75c   828  ldp x9, x10, [jssp, #16]
0xffff8bd0b760   832  ldp x7, x8, [jssp], #32
0xffff8bd0b764   836  ldp x13, x14, [jssp, #16]
0xffff8bd0b768   840  ldp x11, x12, [jssp], #32
0xffff8bd0b76c   844  ldr lr, [jssp, #16]
0xffff8bd0b770   848  ldp x15, x18, [jssp], #24
0xffff8bd0b774   852  ldp x3, x2, [jssp], #16
0xffff8bd0b778   856  ret
0xffff8bd0b77c   860  sub csp, jssp, #0x10 (16)
0xffff8bd0b780   864  stp x3, x2, [jssp, #-16]!
0xffff8bd0b784   868  ldr x0, [x1]
0xffff8bd0b788   872  and x16, x0, #0xfffffffffff00000
0xffff8bd0b78c   876  ldr x16, [x16, #8]
0xffff8bd0b790   880  tst x16, #0x18
0xffff8bd0b794   884  b.eq #+0x1f4 (addr 0xffff8bd0b988)
0xffff8bd0b798   888  and x16, x4, #0xfffffffffff00000
0xffff8bd0b79c   892  ldr x16, [x16, #8]
0xffff8bd0b7a0   896  tst x16, #0x18
0xffff8bd0b7a4   900  b.ne #+0x1e4 (addr 0xffff8bd0b988)
0xffff8bd0b7a8   904  and x0, x4, #0xfffffffffff00000
0xffff8bd0b7ac   908  ldr x2, [x0, #104]
0xffff8bd0b7b0   912  subs x2, x2, #0x1 (1)
0xffff8bd0b7b4   916  str x2, [x0, #104]
0xffff8bd0b7b8   920  b.mi #+0xe4 (addr 0xffff8bd0b89c)
0xffff8bd0b7bc   924  ubfx x16, x4, #8, #12
0xffff8bd0b7c0   928  and x0, x4, #0xfffffffffff00000
0xffff8bd0b7c4   932  add x0, x0, x16, lsl #2
0xffff8bd0b7c8   936  ubfx x2, x4, #3, #5
0xffff8bd0b7cc   940  ldr x0, [x0, #360]
0xffff8bd0b7d0   944  lsr x0, x0, x2
0xffff8bd0b7d4   948  tbz w0, #0, #+0x8 (addr 0xffff8bd0b7dc)
0xffff8bd0b7d8   952  tbnz w0, #1, #+0x3c (addr 0xffff8bd0b814)
0xffff8bd0b7dc   956  ldp x3, x2, [jssp], #16
0xffff8bd0b7e0   960  ldr x16, pc+864 (addr 0x0000ffff8bd0bb40)    ;; external reference (store_buffer_top)
0xffff8bd0b7e4   964  ldr x0, [x16]
0xffff8bd0b7e8   968  str x1, [x0], #8
0xffff8bd0b7ec   972  str x0, [x16]
0xffff8bd0b7f0   976  tst x0, #0x1ffff
0xffff8bd0b7f4   980  b.eq #+0x8 (addr 0xffff8bd0b7fc)
0xffff8bd0b7f8   984  ret
0xffff8bd0b7fc   988  sub csp, jssp, #0x8 (8)
0xffff8bd0b800   992  str lr, [jssp, #-8]!
0xffff8bd0b804   996  ldr x17, pc+836 (addr 0x0000ffff8bd0bb48)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0b808  1000  blr x17
0xffff8bd0b80c  1004  ldr lr, [jssp], #8
0xffff8bd0b810  1008  ret
0xffff8bd0b814  1012  ldr x0, [x1]
0xffff8bd0b818  1016  and x2, x0, #0xfffffffffff00000
0xffff8bd0b81c  1020  ldr x2, [x2, #8]
0xffff8bd0b820  1024  tbz w2, #6, #+0x18 (addr 0xffff8bd0b838)
0xffff8bd0b824  1028  and x2, x4, #0xfffffffffff00000
0xffff8bd0b828  1032  ldr x2, [x2, #8]
0xffff8bd0b82c  1036  movz x16, #0x58
0xffff8bd0b830  1040  tst x2, x16
0xffff8bd0b834  1044  b.eq #+0x68 (addr 0xffff8bd0b89c)
0xffff8bd0b838  1048  sub csp, jssp, #0x10 (16)
0xffff8bd0b83c  1052  stp x4, x1, [jssp, #-16]!
0xffff8bd0b840  1056  ubfx x16, x0, #8, #12
0xffff8bd0b844  1060  and x2, x0, #0xfffffffffff00000
0xffff8bd0b848  1064  add x2, x2, x16, lsl #2
0xffff8bd0b84c  1068  ubfx x4, x0, #3, #5
0xffff8bd0b850  1072  ldr x1, [x2, #360]
0xffff8bd0b854  1076  lsr x1, x1, x4
0xffff8bd0b858  1080  tbz w1, #0, #+0x40 (addr 0xffff8bd0b898)
0xffff8bd0b85c  1084  ldp x4, x1, [jssp], #16
0xffff8bd0b860  1088  ldp x3, x2, [jssp], #16
0xffff8bd0b864  1092  ldr x16, pc+748 (addr 0x0000ffff8bd0bb50)    ;; external reference (store_buffer_top)
0xffff8bd0b868  1096  ldr x0, [x16]
0xffff8bd0b86c  1100  str x1, [x0], #8
0xffff8bd0b870  1104  str x0, [x16]
0xffff8bd0b874  1108  tst x0, #0x1ffff
0xffff8bd0b878  1112  b.eq #+0x8 (addr 0xffff8bd0b880)
0xffff8bd0b87c  1116  ret
0xffff8bd0b880  1120  sub csp, jssp, #0x8 (8)
0xffff8bd0b884  1124  str lr, [jssp, #-8]!
0xffff8bd0b888  1128  ldr x17, pc+720 (addr 0x0000ffff8bd0bb58)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0b88c  1132  blr x17
0xffff8bd0b890  1136  ldr lr, [jssp], #8
0xffff8bd0b894  1140  ret
0xffff8bd0b898  1144  ldp x4, x1, [jssp], #16
0xffff8bd0b89c  1148  sub csp, jssp, #0x78 (120)
0xffff8bd0b8a0  1152  stp x14, x15, [jssp, #-32]!
0xffff8bd0b8a4  1156  stp x18, lr, [jssp, #16]
0xffff8bd0b8a8  1160  stp x10, x11, [jssp, #-32]!
0xffff8bd0b8ac  1164  stp x12, x13, [jssp, #16]
0xffff8bd0b8b0  1168  stp x6, x7, [jssp, #-32]!
0xffff8bd0b8b4  1172  stp x8, x9, [jssp, #16]
0xffff8bd0b8b8  1176  stp x1, x4, [jssp, #-24]!
0xffff8bd0b8bc  1180  str x5, [jssp, #16]
0xffff8bd0b8c0  1184  sub csp, jssp, #0xb0 (176)
0xffff8bd0b8c4  1188  stp d26, d27, [jssp, #-32]!
0xffff8bd0b8c8  1192  stp d28, d29, [jssp, #16]
0xffff8bd0b8cc  1196  stp d22, d23, [jssp, #-32]!
0xffff8bd0b8d0  1200  stp d24, d25, [jssp, #16]
0xffff8bd0b8d4  1204  stp d18, d19, [jssp, #-32]!
0xffff8bd0b8d8  1208  stp d20, d21, [jssp, #16]
0xffff8bd0b8dc  1212  stp d6, d7, [jssp, #-32]!
0xffff8bd0b8e0  1216  stp d16, d17, [jssp, #16]
0xffff8bd0b8e4  1220  stp d2, d3, [jssp, #-32]!
0xffff8bd0b8e8  1224  stp d4, d5, [jssp, #16]
0xffff8bd0b8ec  1228  stp d0, d1, [jssp, #-16]!
0xffff8bd0b8f0  1232  mov x0, x4
0xffff8bd0b8f4  1236  ldr x2, pc+620 (addr 0x0000ffff8bd0bb60)    ;; external reference (isolate)
0xffff8bd0b8f8  1240  ldr x16, pc+624 (addr 0x0000ffff8bd0bb68)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0b8fc  1244  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0b900  1248  blr x16
0xffff8bd0b904  1252  ldp d2, d3, [jssp, #16]
0xffff8bd0b908  1256  ldp d0, d1, [jssp], #32
0xffff8bd0b90c  1260  ldp d6, d7, [jssp, #16]
0xffff8bd0b910  1264  ldp d4, d5, [jssp], #32
0xffff8bd0b914  1268  ldp d18, d19, [jssp, #16]
0xffff8bd0b918  1272  ldp d16, d17, [jssp], #32
0xffff8bd0b91c  1276  ldp d22, d23, [jssp, #16]
0xffff8bd0b920  1280  ldp d20, d21, [jssp], #32
0xffff8bd0b924  1284  ldp d26, d27, [jssp, #16]
0xffff8bd0b928  1288  ldp d24, d25, [jssp], #32
0xffff8bd0b92c  1292  ldp d28, d29, [jssp], #16
0xffff8bd0b930  1296  ldp x5, x6, [jssp, #16]
0xffff8bd0b934  1300  ldp x1, x4, [jssp], #32
0xffff8bd0b938  1304  ldp x9, x10, [jssp, #16]
0xffff8bd0b93c  1308  ldp x7, x8, [jssp], #32
0xffff8bd0b940  1312  ldp x13, x14, [jssp, #16]
0xffff8bd0b944  1316  ldp x11, x12, [jssp], #32
0xffff8bd0b948  1320  ldr lr, [jssp, #16]
0xffff8bd0b94c  1324  ldp x15, x18, [jssp], #24
0xffff8bd0b950  1328  ldp x3, x2, [jssp], #16
0xffff8bd0b954  1332  ldr x16, pc+540 (addr 0x0000ffff8bd0bb70)    ;; external reference (store_buffer_top)
0xffff8bd0b958  1336  ldr x0, [x16]
0xffff8bd0b95c  1340  str x1, [x0], #8
0xffff8bd0b960  1344  str x0, [x16]
0xffff8bd0b964  1348  tst x0, #0x1ffff
0xffff8bd0b968  1352  b.eq #+0x8 (addr 0xffff8bd0b970)
0xffff8bd0b96c  1356  ret
0xffff8bd0b970  1360  sub csp, jssp, #0x8 (8)
0xffff8bd0b974  1364  str lr, [jssp, #-8]!
0xffff8bd0b978  1368  ldr x17, pc+512 (addr 0x0000ffff8bd0bb78)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0b97c  1372  blr x17
0xffff8bd0b980  1376  ldr lr, [jssp], #8
0xffff8bd0b984  1380  ret
0xffff8bd0b988  1384  and x0, x4, #0xfffffffffff00000
0xffff8bd0b98c  1388  ldr x2, [x0, #104]
0xffff8bd0b990  1392  subs x2, x2, #0x1 (1)
0xffff8bd0b994  1396  str x2, [x0, #104]
0xffff8bd0b998  1400  b.mi #+0x84 (addr 0xffff8bd0ba1c)
0xffff8bd0b99c  1404  ubfx x16, x4, #8, #12
0xffff8bd0b9a0  1408  and x0, x4, #0xfffffffffff00000
0xffff8bd0b9a4  1412  add x0, x0, x16, lsl #2
0xffff8bd0b9a8  1416  ubfx x2, x4, #3, #5
0xffff8bd0b9ac  1420  ldr x0, [x0, #360]
0xffff8bd0b9b0  1424  lsr x0, x0, x2
0xffff8bd0b9b4  1428  tbz w0, #0, #+0x8 (addr 0xffff8bd0b9bc)
0xffff8bd0b9b8  1432  tbnz w0, #1, #+0xc (addr 0xffff8bd0b9c4)
0xffff8bd0b9bc  1436  ldp x3, x2, [jssp], #16
0xffff8bd0b9c0  1440  ret
0xffff8bd0b9c4  1444  ldr x0, [x1]
0xffff8bd0b9c8  1448  and x2, x0, #0xfffffffffff00000
0xffff8bd0b9cc  1452  ldr x2, [x2, #8]
0xffff8bd0b9d0  1456  tbz w2, #6, #+0x18 (addr 0xffff8bd0b9e8)
0xffff8bd0b9d4  1460  and x2, x4, #0xfffffffffff00000
0xffff8bd0b9d8  1464  ldr x2, [x2, #8]
0xffff8bd0b9dc  1468  movz x16, #0x58
0xffff8bd0b9e0  1472  tst x2, x16
0xffff8bd0b9e4  1476  b.eq #+0x38 (addr 0xffff8bd0ba1c)
0xffff8bd0b9e8  1480  sub csp, jssp, #0x10 (16)
0xffff8bd0b9ec  1484  stp x4, x1, [jssp, #-16]!
0xffff8bd0b9f0  1488  ubfx x16, x0, #8, #12
0xffff8bd0b9f4  1492  and x2, x0, #0xfffffffffff00000
0xffff8bd0b9f8  1496  add x2, x2, x16, lsl #2
0xffff8bd0b9fc  1500  ubfx x4, x0, #3, #5
0xffff8bd0ba00  1504  ldr x1, [x2, #360]
0xffff8bd0ba04  1508  lsr x1, x1, x4
0xffff8bd0ba08  1512  tbz w1, #0, #+0x10 (addr 0xffff8bd0ba18)
0xffff8bd0ba0c  1516  ldp x4, x1, [jssp], #16
0xffff8bd0ba10  1520  ldp x3, x2, [jssp], #16
0xffff8bd0ba14  1524  ret
0xffff8bd0ba18  1528  ldp x4, x1, [jssp], #16
0xffff8bd0ba1c  1532  sub csp, jssp, #0x78 (120)
0xffff8bd0ba20  1536  stp x14, x15, [jssp, #-32]!
0xffff8bd0ba24  1540  stp x18, lr, [jssp, #16]
0xffff8bd0ba28  1544  stp x10, x11, [jssp, #-32]!
0xffff8bd0ba2c  1548  stp x12, x13, [jssp, #16]
0xffff8bd0ba30  1552  stp x6, x7, [jssp, #-32]!
0xffff8bd0ba34  1556  stp x8, x9, [jssp, #16]
0xffff8bd0ba38  1560  stp x1, x4, [jssp, #-24]!
0xffff8bd0ba3c  1564  str x5, [jssp, #16]
0xffff8bd0ba40  1568  sub csp, jssp, #0xb0 (176)
0xffff8bd0ba44  1572  stp d26, d27, [jssp, #-32]!
0xffff8bd0ba48  1576  stp d28, d29, [jssp, #16]
0xffff8bd0ba4c  1580  stp d22, d23, [jssp, #-32]!
0xffff8bd0ba50  1584  stp d24, d25, [jssp, #16]
0xffff8bd0ba54  1588  stp d18, d19, [jssp, #-32]!
0xffff8bd0ba58  1592  stp d20, d21, [jssp, #16]
0xffff8bd0ba5c  1596  stp d6, d7, [jssp, #-32]!
0xffff8bd0ba60  1600  stp d16, d17, [jssp, #16]
0xffff8bd0ba64  1604  stp d2, d3, [jssp, #-32]!
0xffff8bd0ba68  1608  stp d4, d5, [jssp, #16]
0xffff8bd0ba6c  1612  stp d0, d1, [jssp, #-16]!
0xffff8bd0ba70  1616  mov x0, x4
0xffff8bd0ba74  1620  ldr x2, pc+268 (addr 0x0000ffff8bd0bb80)    ;; external reference (isolate)
0xffff8bd0ba78  1624  ldr x16, pc+272 (addr 0x0000ffff8bd0bb88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0ba7c  1628  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0ba80  1632  blr x16
0xffff8bd0ba84  1636  ldp d2, d3, [jssp, #16]
0xffff8bd0ba88  1640  ldp d0, d1, [jssp], #32
0xffff8bd0ba8c  1644  ldp d6, d7, [jssp, #16]
0xffff8bd0ba90  1648  ldp d4, d5, [jssp], #32
0xffff8bd0ba94  1652  ldp d18, d19, [jssp, #16]
0xffff8bd0ba98  1656  ldp d16, d17, [jssp], #32
0xffff8bd0ba9c  1660  ldp d22, d23, [jssp, #16]
0xffff8bd0baa0  1664  ldp d20, d21, [jssp], #32
0xffff8bd0baa4  1668  ldp d26, d27, [jssp, #16]
0xffff8bd0baa8  1672  ldp d24, d25, [jssp], #32
0xffff8bd0baac  1676  ldp d28, d29, [jssp], #16
0xffff8bd0bab0  1680  ldp x5, x6, [jssp, #16]
0xffff8bd0bab4  1684  ldp x1, x4, [jssp], #32
0xffff8bd0bab8  1688  ldp x9, x10, [jssp, #16]
0xffff8bd0babc  1692  ldp x7, x8, [jssp], #32
0xffff8bd0bac0  1696  ldp x13, x14, [jssp, #16]
0xffff8bd0bac4  1700  ldp x11, x12, [jssp], #32
0xffff8bd0bac8  1704  ldr lr, [jssp, #16]
0xffff8bd0bacc  1708  ldp x15, x18, [jssp], #24
0xffff8bd0bad0  1712  ldp x3, x2, [jssp], #16
0xffff8bd0bad4  1716  ret
0xffff8bd0bad8  1720  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd0badc  1724  d63f03e0       constant
0xffff8bd0bae0  1728  2cb8e8c0       constant
0xffff8bd0bae4  1732  00000000       constant
0xffff8bd0bae8  1736  8bd065a0       constant
0xffff8bd0baec  1740  0000ffff       constant
0xffff8bd0baf0  1744  2cb8e8c0       constant
0xffff8bd0baf4  1748  00000000       constant
0xffff8bd0baf8  1752  8bd065a0       constant
0xffff8bd0bafc  1756  0000ffff       constant
0xffff8bd0bb00  1760  2cb8e8c0       constant
0xffff8bd0bb04  1764  00000000       constant
0xffff8bd0bb08  1768  8bd065a0       constant
0xffff8bd0bb0c  1772  0000ffff       constant
0xffff8bd0bb10  1776  2cb8d2d0       constant
0xffff8bd0bb14  1780  00000000       constant
0xffff8bd0bb18  1784  00c2d958       constant
0xffff8bd0bb1c  1788  00000000       constant
0xffff8bd0bb20  1792  2cb8e8c0       constant
0xffff8bd0bb24  1796  00000000       constant
0xffff8bd0bb28  1800  8bd065a0       constant
0xffff8bd0bb2c  1804  0000ffff       constant
0xffff8bd0bb30  1808  2cb8d2d0       constant
0xffff8bd0bb34  1812  00000000       constant
0xffff8bd0bb38  1816  00c2d958       constant
0xffff8bd0bb3c  1820  00000000       constant
0xffff8bd0bb40  1824  2cb8e8c0       constant
0xffff8bd0bb44  1828  00000000       constant
0xffff8bd0bb48  1832  8bd065a0       constant
0xffff8bd0bb4c  1836  0000ffff       constant
0xffff8bd0bb50  1840  2cb8e8c0       constant
0xffff8bd0bb54  1844  00000000       constant
0xffff8bd0bb58  1848  8bd065a0       constant
0xffff8bd0bb5c  1852  0000ffff       constant
0xffff8bd0bb60  1856  2cb8d2d0       constant
0xffff8bd0bb64  1860  00000000       constant
0xffff8bd0bb68  1864  00c2d958       constant
0xffff8bd0bb6c  1868  00000000       constant
0xffff8bd0bb70  1872  2cb8e8c0       constant
0xffff8bd0bb74  1876  00000000       constant
0xffff8bd0bb78  1880  8bd065a0       constant
0xffff8bd0bb7c  1884  0000ffff       constant
0xffff8bd0bb80  1888  2cb8d2d0       constant
0xffff8bd0bb84  1892  00000000       constant
0xffff8bd0bb88  1896  00c2d958       constant
0xffff8bd0bb8c  1900  00000000       constant


RelocInfo (size = 65)
0xffff8bd0b428  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0b44c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0b4c4  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0b4e8  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0b528  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0b54c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0b5b8  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0b5bc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0b618  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0b63c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0b718  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0b71c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0b7e0  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0b804  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0b864  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0b888  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0b8f4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0b8f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0b954  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0b978  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0ba74  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0ba78  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0bad8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff8bd0bc00     0  adr xzr, #+0x40 (addr 0xffff8bd0bc40)
0xffff8bd0bc04     4  adr xzr, #+0x360 (addr 0xffff8bd0bf64)
0xffff8bd0bc08     8  ldr x16, pc+1736 (addr 0x0000ffff8bd0c2d0)    ;; external reference (store_buffer_top)
0xffff8bd0bc0c    12  ldr x1, [x16]
0xffff8bd0bc10    16  str x5, [x1], #8
0xffff8bd0bc14    20  str x1, [x16]
0xffff8bd0bc18    24  tst x1, #0x1ffff
0xffff8bd0bc1c    28  b.eq #+0x8 (addr 0xffff8bd0bc24)
0xffff8bd0bc20    32  ret
0xffff8bd0bc24    36  sub csp, jssp, #0x8 (8)
0xffff8bd0bc28    40  str lr, [jssp, #-8]!
0xffff8bd0bc2c    44  ldr x17, pc+1708 (addr 0x0000ffff8bd0c2d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0bc30    48  blr x17
0xffff8bd0bc34    52  ldr lr, [jssp], #8
0xffff8bd0bc38    56  ret
0xffff8bd0bc3c    60  ret
0xffff8bd0bc40    64  sub csp, jssp, #0x10 (16)
0xffff8bd0bc44    68  stp x2, x0, [jssp, #-16]!
0xffff8bd0bc48    72  ldr x1, [x5]
0xffff8bd0bc4c    76  and x16, x1, #0xfffffffffff00000
0xffff8bd0bc50    80  ldr x16, [x16, #8]
0xffff8bd0bc54    84  tst x16, #0x18
0xffff8bd0bc58    88  b.eq #+0x1d8 (addr 0xffff8bd0be30)
0xffff8bd0bc5c    92  and x16, x4, #0xfffffffffff00000
0xffff8bd0bc60    96  ldr x16, [x16, #8]
0xffff8bd0bc64   100  tst x16, #0x18
0xffff8bd0bc68   104  b.ne #+0x1c8 (addr 0xffff8bd0be30)
0xffff8bd0bc6c   108  and x1, x4, #0xfffffffffff00000
0xffff8bd0bc70   112  ldr x0, [x1, #104]
0xffff8bd0bc74   116  subs x0, x0, #0x1 (1)
0xffff8bd0bc78   120  str x0, [x1, #104]
0xffff8bd0bc7c   124  b.mi #+0xc4 (addr 0xffff8bd0bd40)
0xffff8bd0bc80   128  ubfx x16, x4, #8, #12
0xffff8bd0bc84   132  and x1, x4, #0xfffffffffff00000
0xffff8bd0bc88   136  add x1, x1, x16, lsl #2
0xffff8bd0bc8c   140  ubfx x0, x4, #3, #5
0xffff8bd0bc90   144  ldr x1, [x1, #360]
0xffff8bd0bc94   148  lsr x1, x1, x0
0xffff8bd0bc98   152  tbz w1, #0, #+0x8 (addr 0xffff8bd0bca0)
0xffff8bd0bc9c   156  tbnz w1, #1, #+0x3c (addr 0xffff8bd0bcd8)
0xffff8bd0bca0   160  ldp x2, x0, [jssp], #16
0xffff8bd0bca4   164  ldr x16, pc+1596 (addr 0x0000ffff8bd0c2e0)    ;; external reference (store_buffer_top)
0xffff8bd0bca8   168  ldr x1, [x16]
0xffff8bd0bcac   172  str x5, [x1], #8
0xffff8bd0bcb0   176  str x1, [x16]
0xffff8bd0bcb4   180  tst x1, #0x1ffff
0xffff8bd0bcb8   184  b.eq #+0x8 (addr 0xffff8bd0bcc0)
0xffff8bd0bcbc   188  ret
0xffff8bd0bcc0   192  sub csp, jssp, #0x8 (8)
0xffff8bd0bcc4   196  str lr, [jssp, #-8]!
0xffff8bd0bcc8   200  ldr x17, pc+1568 (addr 0x0000ffff8bd0c2e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0bccc   204  blr x17
0xffff8bd0bcd0   208  ldr lr, [jssp], #8
0xffff8bd0bcd4   212  ret
0xffff8bd0bcd8   216  ldr x1, [x5]
0xffff8bd0bcdc   220  sub csp, jssp, #0x10 (16)
0xffff8bd0bce0   224  stp x4, x5, [jssp, #-16]!
0xffff8bd0bce4   228  ubfx x16, x1, #8, #12
0xffff8bd0bce8   232  and x0, x1, #0xfffffffffff00000
0xffff8bd0bcec   236  add x0, x0, x16, lsl #2
0xffff8bd0bcf0   240  ubfx x4, x1, #3, #5
0xffff8bd0bcf4   244  ldr x5, [x0, #360]
0xffff8bd0bcf8   248  lsr x5, x5, x4
0xffff8bd0bcfc   252  tbz w5, #0, #+0x40 (addr 0xffff8bd0bd3c)
0xffff8bd0bd00   256  ldp x4, x5, [jssp], #16
0xffff8bd0bd04   260  ldp x2, x0, [jssp], #16
0xffff8bd0bd08   264  ldr x16, pc+1512 (addr 0x0000ffff8bd0c2f0)    ;; external reference (store_buffer_top)
0xffff8bd0bd0c   268  ldr x1, [x16]
0xffff8bd0bd10   272  str x5, [x1], #8
0xffff8bd0bd14   276  str x1, [x16]
0xffff8bd0bd18   280  tst x1, #0x1ffff
0xffff8bd0bd1c   284  b.eq #+0x8 (addr 0xffff8bd0bd24)
0xffff8bd0bd20   288  ret
0xffff8bd0bd24   292  sub csp, jssp, #0x8 (8)
0xffff8bd0bd28   296  str lr, [jssp, #-8]!
0xffff8bd0bd2c   300  ldr x17, pc+1484 (addr 0x0000ffff8bd0c2f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0bd30   304  blr x17
0xffff8bd0bd34   308  ldr lr, [jssp], #8
0xffff8bd0bd38   312  ret
0xffff8bd0bd3c   316  ldp x4, x5, [jssp], #16
0xffff8bd0bd40   320  sub csp, jssp, #0x78 (120)
0xffff8bd0bd44   324  stp x14, x15, [jssp, #-32]!
0xffff8bd0bd48   328  stp x18, lr, [jssp, #16]
0xffff8bd0bd4c   332  stp x10, x11, [jssp, #-32]!
0xffff8bd0bd50   336  stp x12, x13, [jssp, #16]
0xffff8bd0bd54   340  stp x6, x7, [jssp, #-32]!
0xffff8bd0bd58   344  stp x8, x9, [jssp, #16]
0xffff8bd0bd5c   348  stp x3, x4, [jssp, #-24]!
0xffff8bd0bd60   352  str x5, [jssp, #16]
0xffff8bd0bd64   356  sub csp, jssp, #0xb0 (176)
0xffff8bd0bd68   360  stp d26, d27, [jssp, #-32]!
0xffff8bd0bd6c   364  stp d28, d29, [jssp, #16]
0xffff8bd0bd70   368  stp d22, d23, [jssp, #-32]!
0xffff8bd0bd74   372  stp d24, d25, [jssp, #16]
0xffff8bd0bd78   376  stp d18, d19, [jssp, #-32]!
0xffff8bd0bd7c   380  stp d20, d21, [jssp, #16]
0xffff8bd0bd80   384  stp d6, d7, [jssp, #-32]!
0xffff8bd0bd84   388  stp d16, d17, [jssp, #16]
0xffff8bd0bd88   392  stp d2, d3, [jssp, #-32]!
0xffff8bd0bd8c   396  stp d4, d5, [jssp, #16]
0xffff8bd0bd90   400  stp d0, d1, [jssp, #-16]!
0xffff8bd0bd94   404  mov x0, x4
0xffff8bd0bd98   408  mov x1, x5
0xffff8bd0bd9c   412  ldr x2, pc+1380 (addr 0x0000ffff8bd0c300)    ;; external reference (isolate)
0xffff8bd0bda0   416  ldr x16, pc+1384 (addr 0x0000ffff8bd0c308)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0bda4   420  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0bda8   424  blr x16
0xffff8bd0bdac   428  ldp d2, d3, [jssp, #16]
0xffff8bd0bdb0   432  ldp d0, d1, [jssp], #32
0xffff8bd0bdb4   436  ldp d6, d7, [jssp, #16]
0xffff8bd0bdb8   440  ldp d4, d5, [jssp], #32
0xffff8bd0bdbc   444  ldp d18, d19, [jssp, #16]
0xffff8bd0bdc0   448  ldp d16, d17, [jssp], #32
0xffff8bd0bdc4   452  ldp d22, d23, [jssp, #16]
0xffff8bd0bdc8   456  ldp d20, d21, [jssp], #32
0xffff8bd0bdcc   460  ldp d26, d27, [jssp, #16]
0xffff8bd0bdd0   464  ldp d24, d25, [jssp], #32
0xffff8bd0bdd4   468  ldp d28, d29, [jssp], #16
0xffff8bd0bdd8   472  ldp x5, x6, [jssp, #16]
0xffff8bd0bddc   476  ldp x3, x4, [jssp], #32
0xffff8bd0bde0   480  ldp x9, x10, [jssp, #16]
0xffff8bd0bde4   484  ldp x7, x8, [jssp], #32
0xffff8bd0bde8   488  ldp x13, x14, [jssp, #16]
0xffff8bd0bdec   492  ldp x11, x12, [jssp], #32
0xffff8bd0bdf0   496  ldr lr, [jssp, #16]
0xffff8bd0bdf4   500  ldp x15, x18, [jssp], #24
0xffff8bd0bdf8   504  ldp x2, x0, [jssp], #16
0xffff8bd0bdfc   508  ldr x16, pc+1300 (addr 0x0000ffff8bd0c310)    ;; external reference (store_buffer_top)
0xffff8bd0be00   512  ldr x1, [x16]
0xffff8bd0be04   516  str x5, [x1], #8
0xffff8bd0be08   520  str x1, [x16]
0xffff8bd0be0c   524  tst x1, #0x1ffff
0xffff8bd0be10   528  b.eq #+0x8 (addr 0xffff8bd0be18)
0xffff8bd0be14   532  ret
0xffff8bd0be18   536  sub csp, jssp, #0x8 (8)
0xffff8bd0be1c   540  str lr, [jssp, #-8]!
0xffff8bd0be20   544  ldr x17, pc+1272 (addr 0x0000ffff8bd0c318)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0be24   548  blr x17
0xffff8bd0be28   552  ldr lr, [jssp], #8
0xffff8bd0be2c   556  ret
0xffff8bd0be30   560  and x1, x4, #0xfffffffffff00000
0xffff8bd0be34   564  ldr x0, [x1, #104]
0xffff8bd0be38   568  subs x0, x0, #0x1 (1)
0xffff8bd0be3c   572  str x0, [x1, #104]
0xffff8bd0be40   576  b.mi #+0x64 (addr 0xffff8bd0bea4)
0xffff8bd0be44   580  ubfx x16, x4, #8, #12
0xffff8bd0be48   584  and x1, x4, #0xfffffffffff00000
0xffff8bd0be4c   588  add x1, x1, x16, lsl #2
0xffff8bd0be50   592  ubfx x0, x4, #3, #5
0xffff8bd0be54   596  ldr x1, [x1, #360]
0xffff8bd0be58   600  lsr x1, x1, x0
0xffff8bd0be5c   604  tbz w1, #0, #+0x8 (addr 0xffff8bd0be64)
0xffff8bd0be60   608  tbnz w1, #1, #+0xc (addr 0xffff8bd0be6c)
0xffff8bd0be64   612  ldp x2, x0, [jssp], #16
0xffff8bd0be68   616  ret
0xffff8bd0be6c   620  ldr x1, [x5]
0xffff8bd0be70   624  sub csp, jssp, #0x10 (16)
0xffff8bd0be74   628  stp x4, x5, [jssp, #-16]!
0xffff8bd0be78   632  ubfx x16, x1, #8, #12
0xffff8bd0be7c   636  and x0, x1, #0xfffffffffff00000
0xffff8bd0be80   640  add x0, x0, x16, lsl #2
0xffff8bd0be84   644  ubfx x4, x1, #3, #5
0xffff8bd0be88   648  ldr x5, [x0, #360]
0xffff8bd0be8c   652  lsr x5, x5, x4
0xffff8bd0be90   656  tbz w5, #0, #+0x10 (addr 0xffff8bd0bea0)
0xffff8bd0be94   660  ldp x4, x5, [jssp], #16
0xffff8bd0be98   664  ldp x2, x0, [jssp], #16
0xffff8bd0be9c   668  ret
0xffff8bd0bea0   672  ldp x4, x5, [jssp], #16
0xffff8bd0bea4   676  sub csp, jssp, #0x78 (120)
0xffff8bd0bea8   680  stp x14, x15, [jssp, #-32]!
0xffff8bd0beac   684  stp x18, lr, [jssp, #16]
0xffff8bd0beb0   688  stp x10, x11, [jssp, #-32]!
0xffff8bd0beb4   692  stp x12, x13, [jssp, #16]
0xffff8bd0beb8   696  stp x6, x7, [jssp, #-32]!
0xffff8bd0bebc   700  stp x8, x9, [jssp, #16]
0xffff8bd0bec0   704  stp x3, x4, [jssp, #-24]!
0xffff8bd0bec4   708  str x5, [jssp, #16]
0xffff8bd0bec8   712  sub csp, jssp, #0xb0 (176)
0xffff8bd0becc   716  stp d26, d27, [jssp, #-32]!
0xffff8bd0bed0   720  stp d28, d29, [jssp, #16]
0xffff8bd0bed4   724  stp d22, d23, [jssp, #-32]!
0xffff8bd0bed8   728  stp d24, d25, [jssp, #16]
0xffff8bd0bedc   732  stp d18, d19, [jssp, #-32]!
0xffff8bd0bee0   736  stp d20, d21, [jssp, #16]
0xffff8bd0bee4   740  stp d6, d7, [jssp, #-32]!
0xffff8bd0bee8   744  stp d16, d17, [jssp, #16]
0xffff8bd0beec   748  stp d2, d3, [jssp, #-32]!
0xffff8bd0bef0   752  stp d4, d5, [jssp, #16]
0xffff8bd0bef4   756  stp d0, d1, [jssp, #-16]!
0xffff8bd0bef8   760  mov x0, x4
0xffff8bd0befc   764  mov x1, x5
0xffff8bd0bf00   768  ldr x2, pc+1056 (addr 0x0000ffff8bd0c320)    ;; external reference (isolate)
0xffff8bd0bf04   772  ldr x16, pc+1060 (addr 0x0000ffff8bd0c328)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0bf08   776  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0bf0c   780  blr x16
0xffff8bd0bf10   784  ldp d2, d3, [jssp, #16]
0xffff8bd0bf14   788  ldp d0, d1, [jssp], #32
0xffff8bd0bf18   792  ldp d6, d7, [jssp, #16]
0xffff8bd0bf1c   796  ldp d4, d5, [jssp], #32
0xffff8bd0bf20   800  ldp d18, d19, [jssp, #16]
0xffff8bd0bf24   804  ldp d16, d17, [jssp], #32
0xffff8bd0bf28   808  ldp d22, d23, [jssp, #16]
0xffff8bd0bf2c   812  ldp d20, d21, [jssp], #32
0xffff8bd0bf30   816  ldp d26, d27, [jssp, #16]
0xffff8bd0bf34   820  ldp d24, d25, [jssp], #32
0xffff8bd0bf38   824  ldp d28, d29, [jssp], #16
0xffff8bd0bf3c   828  ldp x5, x6, [jssp, #16]
0xffff8bd0bf40   832  ldp x3, x4, [jssp], #32
0xffff8bd0bf44   836  ldp x9, x10, [jssp, #16]
0xffff8bd0bf48   840  ldp x7, x8, [jssp], #32
0xffff8bd0bf4c   844  ldp x13, x14, [jssp, #16]
0xffff8bd0bf50   848  ldp x11, x12, [jssp], #32
0xffff8bd0bf54   852  ldr lr, [jssp, #16]
0xffff8bd0bf58   856  ldp x15, x18, [jssp], #24
0xffff8bd0bf5c   860  ldp x2, x0, [jssp], #16
0xffff8bd0bf60   864  ret
0xffff8bd0bf64   868  sub csp, jssp, #0x10 (16)
0xffff8bd0bf68   872  stp x2, x0, [jssp, #-16]!
0xffff8bd0bf6c   876  ldr x1, [x5]
0xffff8bd0bf70   880  and x16, x1, #0xfffffffffff00000
0xffff8bd0bf74   884  ldr x16, [x16, #8]
0xffff8bd0bf78   888  tst x16, #0x18
0xffff8bd0bf7c   892  b.eq #+0x1f8 (addr 0xffff8bd0c174)
0xffff8bd0bf80   896  and x16, x4, #0xfffffffffff00000
0xffff8bd0bf84   900  ldr x16, [x16, #8]
0xffff8bd0bf88   904  tst x16, #0x18
0xffff8bd0bf8c   908  b.ne #+0x1e8 (addr 0xffff8bd0c174)
0xffff8bd0bf90   912  and x1, x4, #0xfffffffffff00000
0xffff8bd0bf94   916  ldr x0, [x1, #104]
0xffff8bd0bf98   920  subs x0, x0, #0x1 (1)
0xffff8bd0bf9c   924  str x0, [x1, #104]
0xffff8bd0bfa0   928  b.mi #+0xe4 (addr 0xffff8bd0c084)
0xffff8bd0bfa4   932  ubfx x16, x4, #8, #12
0xffff8bd0bfa8   936  and x1, x4, #0xfffffffffff00000
0xffff8bd0bfac   940  add x1, x1, x16, lsl #2
0xffff8bd0bfb0   944  ubfx x0, x4, #3, #5
0xffff8bd0bfb4   948  ldr x1, [x1, #360]
0xffff8bd0bfb8   952  lsr x1, x1, x0
0xffff8bd0bfbc   956  tbz w1, #0, #+0x8 (addr 0xffff8bd0bfc4)
0xffff8bd0bfc0   960  tbnz w1, #1, #+0x3c (addr 0xffff8bd0bffc)
0xffff8bd0bfc4   964  ldp x2, x0, [jssp], #16
0xffff8bd0bfc8   968  ldr x16, pc+872 (addr 0x0000ffff8bd0c330)    ;; external reference (store_buffer_top)
0xffff8bd0bfcc   972  ldr x1, [x16]
0xffff8bd0bfd0   976  str x5, [x1], #8
0xffff8bd0bfd4   980  str x1, [x16]
0xffff8bd0bfd8   984  tst x1, #0x1ffff
0xffff8bd0bfdc   988  b.eq #+0x8 (addr 0xffff8bd0bfe4)
0xffff8bd0bfe0   992  ret
0xffff8bd0bfe4   996  sub csp, jssp, #0x8 (8)
0xffff8bd0bfe8  1000  str lr, [jssp, #-8]!
0xffff8bd0bfec  1004  ldr x17, pc+844 (addr 0x0000ffff8bd0c338)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0bff0  1008  blr x17
0xffff8bd0bff4  1012  ldr lr, [jssp], #8
0xffff8bd0bff8  1016  ret
0xffff8bd0bffc  1020  ldr x1, [x5]
0xffff8bd0c000  1024  and x0, x1, #0xfffffffffff00000
0xffff8bd0c004  1028  ldr x0, [x0, #8]
0xffff8bd0c008  1032  tbz w0, #6, #+0x18 (addr 0xffff8bd0c020)
0xffff8bd0c00c  1036  and x0, x4, #0xfffffffffff00000
0xffff8bd0c010  1040  ldr x0, [x0, #8]
0xffff8bd0c014  1044  movz x16, #0x58
0xffff8bd0c018  1048  tst x0, x16
0xffff8bd0c01c  1052  b.eq #+0x68 (addr 0xffff8bd0c084)
0xffff8bd0c020  1056  sub csp, jssp, #0x10 (16)
0xffff8bd0c024  1060  stp x4, x5, [jssp, #-16]!
0xffff8bd0c028  1064  ubfx x16, x1, #8, #12
0xffff8bd0c02c  1068  and x0, x1, #0xfffffffffff00000
0xffff8bd0c030  1072  add x0, x0, x16, lsl #2
0xffff8bd0c034  1076  ubfx x4, x1, #3, #5
0xffff8bd0c038  1080  ldr x5, [x0, #360]
0xffff8bd0c03c  1084  lsr x5, x5, x4
0xffff8bd0c040  1088  tbz w5, #0, #+0x40 (addr 0xffff8bd0c080)
0xffff8bd0c044  1092  ldp x4, x5, [jssp], #16
0xffff8bd0c048  1096  ldp x2, x0, [jssp], #16
0xffff8bd0c04c  1100  ldr x16, pc+756 (addr 0x0000ffff8bd0c340)    ;; external reference (store_buffer_top)
0xffff8bd0c050  1104  ldr x1, [x16]
0xffff8bd0c054  1108  str x5, [x1], #8
0xffff8bd0c058  1112  str x1, [x16]
0xffff8bd0c05c  1116  tst x1, #0x1ffff
0xffff8bd0c060  1120  b.eq #+0x8 (addr 0xffff8bd0c068)
0xffff8bd0c064  1124  ret
0xffff8bd0c068  1128  sub csp, jssp, #0x8 (8)
0xffff8bd0c06c  1132  str lr, [jssp, #-8]!
0xffff8bd0c070  1136  ldr x17, pc+728 (addr 0x0000ffff8bd0c348)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0c074  1140  blr x17
0xffff8bd0c078  1144  ldr lr, [jssp], #8
0xffff8bd0c07c  1148  ret
0xffff8bd0c080  1152  ldp x4, x5, [jssp], #16
0xffff8bd0c084  1156  sub csp, jssp, #0x78 (120)
0xffff8bd0c088  1160  stp x14, x15, [jssp, #-32]!
0xffff8bd0c08c  1164  stp x18, lr, [jssp, #16]
0xffff8bd0c090  1168  stp x10, x11, [jssp, #-32]!
0xffff8bd0c094  1172  stp x12, x13, [jssp, #16]
0xffff8bd0c098  1176  stp x6, x7, [jssp, #-32]!
0xffff8bd0c09c  1180  stp x8, x9, [jssp, #16]
0xffff8bd0c0a0  1184  stp x3, x4, [jssp, #-24]!
0xffff8bd0c0a4  1188  str x5, [jssp, #16]
0xffff8bd0c0a8  1192  sub csp, jssp, #0xb0 (176)
0xffff8bd0c0ac  1196  stp d26, d27, [jssp, #-32]!
0xffff8bd0c0b0  1200  stp d28, d29, [jssp, #16]
0xffff8bd0c0b4  1204  stp d22, d23, [jssp, #-32]!
0xffff8bd0c0b8  1208  stp d24, d25, [jssp, #16]
0xffff8bd0c0bc  1212  stp d18, d19, [jssp, #-32]!
0xffff8bd0c0c0  1216  stp d20, d21, [jssp, #16]
0xffff8bd0c0c4  1220  stp d6, d7, [jssp, #-32]!
0xffff8bd0c0c8  1224  stp d16, d17, [jssp, #16]
0xffff8bd0c0cc  1228  stp d2, d3, [jssp, #-32]!
0xffff8bd0c0d0  1232  stp d4, d5, [jssp, #16]
0xffff8bd0c0d4  1236  stp d0, d1, [jssp, #-16]!
0xffff8bd0c0d8  1240  mov x0, x4
0xffff8bd0c0dc  1244  mov x1, x5
0xffff8bd0c0e0  1248  ldr x2, pc+624 (addr 0x0000ffff8bd0c350)    ;; external reference (isolate)
0xffff8bd0c0e4  1252  ldr x16, pc+628 (addr 0x0000ffff8bd0c358)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0c0e8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0c0ec  1260  blr x16
0xffff8bd0c0f0  1264  ldp d2, d3, [jssp, #16]
0xffff8bd0c0f4  1268  ldp d0, d1, [jssp], #32
0xffff8bd0c0f8  1272  ldp d6, d7, [jssp, #16]
0xffff8bd0c0fc  1276  ldp d4, d5, [jssp], #32
0xffff8bd0c100  1280  ldp d18, d19, [jssp, #16]
0xffff8bd0c104  1284  ldp d16, d17, [jssp], #32
0xffff8bd0c108  1288  ldp d22, d23, [jssp, #16]
0xffff8bd0c10c  1292  ldp d20, d21, [jssp], #32
0xffff8bd0c110  1296  ldp d26, d27, [jssp, #16]
0xffff8bd0c114  1300  ldp d24, d25, [jssp], #32
0xffff8bd0c118  1304  ldp d28, d29, [jssp], #16
0xffff8bd0c11c  1308  ldp x5, x6, [jssp, #16]
0xffff8bd0c120  1312  ldp x3, x4, [jssp], #32
0xffff8bd0c124  1316  ldp x9, x10, [jssp, #16]
0xffff8bd0c128  1320  ldp x7, x8, [jssp], #32
0xffff8bd0c12c  1324  ldp x13, x14, [jssp, #16]
0xffff8bd0c130  1328  ldp x11, x12, [jssp], #32
0xffff8bd0c134  1332  ldr lr, [jssp, #16]
0xffff8bd0c138  1336  ldp x15, x18, [jssp], #24
0xffff8bd0c13c  1340  ldp x2, x0, [jssp], #16
0xffff8bd0c140  1344  ldr x16, pc+544 (addr 0x0000ffff8bd0c360)    ;; external reference (store_buffer_top)
0xffff8bd0c144  1348  ldr x1, [x16]
0xffff8bd0c148  1352  str x5, [x1], #8
0xffff8bd0c14c  1356  str x1, [x16]
0xffff8bd0c150  1360  tst x1, #0x1ffff
0xffff8bd0c154  1364  b.eq #+0x8 (addr 0xffff8bd0c15c)
0xffff8bd0c158  1368  ret
0xffff8bd0c15c  1372  sub csp, jssp, #0x8 (8)
0xffff8bd0c160  1376  str lr, [jssp, #-8]!
0xffff8bd0c164  1380  ldr x17, pc+516 (addr 0x0000ffff8bd0c368)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0c168  1384  blr x17
0xffff8bd0c16c  1388  ldr lr, [jssp], #8
0xffff8bd0c170  1392  ret
0xffff8bd0c174  1396  and x1, x4, #0xfffffffffff00000
0xffff8bd0c178  1400  ldr x0, [x1, #104]
0xffff8bd0c17c  1404  subs x0, x0, #0x1 (1)
0xffff8bd0c180  1408  str x0, [x1, #104]
0xffff8bd0c184  1412  b.mi #+0x84 (addr 0xffff8bd0c208)
0xffff8bd0c188  1416  ubfx x16, x4, #8, #12
0xffff8bd0c18c  1420  and x1, x4, #0xfffffffffff00000
0xffff8bd0c190  1424  add x1, x1, x16, lsl #2
0xffff8bd0c194  1428  ubfx x0, x4, #3, #5
0xffff8bd0c198  1432  ldr x1, [x1, #360]
0xffff8bd0c19c  1436  lsr x1, x1, x0
0xffff8bd0c1a0  1440  tbz w1, #0, #+0x8 (addr 0xffff8bd0c1a8)
0xffff8bd0c1a4  1444  tbnz w1, #1, #+0xc (addr 0xffff8bd0c1b0)
0xffff8bd0c1a8  1448  ldp x2, x0, [jssp], #16
0xffff8bd0c1ac  1452  ret
0xffff8bd0c1b0  1456  ldr x1, [x5]
0xffff8bd0c1b4  1460  and x0, x1, #0xfffffffffff00000
0xffff8bd0c1b8  1464  ldr x0, [x0, #8]
0xffff8bd0c1bc  1468  tbz w0, #6, #+0x18 (addr 0xffff8bd0c1d4)
0xffff8bd0c1c0  1472  and x0, x4, #0xfffffffffff00000
0xffff8bd0c1c4  1476  ldr x0, [x0, #8]
0xffff8bd0c1c8  1480  movz x16, #0x58
0xffff8bd0c1cc  1484  tst x0, x16
0xffff8bd0c1d0  1488  b.eq #+0x38 (addr 0xffff8bd0c208)
0xffff8bd0c1d4  1492  sub csp, jssp, #0x10 (16)
0xffff8bd0c1d8  1496  stp x4, x5, [jssp, #-16]!
0xffff8bd0c1dc  1500  ubfx x16, x1, #8, #12
0xffff8bd0c1e0  1504  and x0, x1, #0xfffffffffff00000
0xffff8bd0c1e4  1508  add x0, x0, x16, lsl #2
0xffff8bd0c1e8  1512  ubfx x4, x1, #3, #5
0xffff8bd0c1ec  1516  ldr x5, [x0, #360]
0xffff8bd0c1f0  1520  lsr x5, x5, x4
0xffff8bd0c1f4  1524  tbz w5, #0, #+0x10 (addr 0xffff8bd0c204)
0xffff8bd0c1f8  1528  ldp x4, x5, [jssp], #16
0xffff8bd0c1fc  1532  ldp x2, x0, [jssp], #16
0xffff8bd0c200  1536  ret
0xffff8bd0c204  1540  ldp x4, x5, [jssp], #16
0xffff8bd0c208  1544  sub csp, jssp, #0x78 (120)
0xffff8bd0c20c  1548  stp x14, x15, [jssp, #-32]!
0xffff8bd0c210  1552  stp x18, lr, [jssp, #16]
0xffff8bd0c214  1556  stp x10, x11, [jssp, #-32]!
0xffff8bd0c218  1560  stp x12, x13, [jssp, #16]
0xffff8bd0c21c  1564  stp x6, x7, [jssp, #-32]!
0xffff8bd0c220  1568  stp x8, x9, [jssp, #16]
0xffff8bd0c224  1572  stp x3, x4, [jssp, #-24]!
0xffff8bd0c228  1576  str x5, [jssp, #16]
0xffff8bd0c22c  1580  sub csp, jssp, #0xb0 (176)
0xffff8bd0c230  1584  stp d26, d27, [jssp, #-32]!
0xffff8bd0c234  1588  stp d28, d29, [jssp, #16]
0xffff8bd0c238  1592  stp d22, d23, [jssp, #-32]!
0xffff8bd0c23c  1596  stp d24, d25, [jssp, #16]
0xffff8bd0c240  1600  stp d18, d19, [jssp, #-32]!
0xffff8bd0c244  1604  stp d20, d21, [jssp, #16]
0xffff8bd0c248  1608  stp d6, d7, [jssp, #-32]!
0xffff8bd0c24c  1612  stp d16, d17, [jssp, #16]
0xffff8bd0c250  1616  stp d2, d3, [jssp, #-32]!
0xffff8bd0c254  1620  stp d4, d5, [jssp, #16]
0xffff8bd0c258  1624  stp d0, d1, [jssp, #-16]!
0xffff8bd0c25c  1628  mov x0, x4
0xffff8bd0c260  1632  mov x1, x5
0xffff8bd0c264  1636  ldr x2, pc+268 (addr 0x0000ffff8bd0c370)    ;; external reference (isolate)
0xffff8bd0c268  1640  ldr x16, pc+272 (addr 0x0000ffff8bd0c378)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0c26c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0c270  1648  blr x16
0xffff8bd0c274  1652  ldp d2, d3, [jssp, #16]
0xffff8bd0c278  1656  ldp d0, d1, [jssp], #32
0xffff8bd0c27c  1660  ldp d6, d7, [jssp, #16]
0xffff8bd0c280  1664  ldp d4, d5, [jssp], #32
0xffff8bd0c284  1668  ldp d18, d19, [jssp, #16]
0xffff8bd0c288  1672  ldp d16, d17, [jssp], #32
0xffff8bd0c28c  1676  ldp d22, d23, [jssp, #16]
0xffff8bd0c290  1680  ldp d20, d21, [jssp], #32
0xffff8bd0c294  1684  ldp d26, d27, [jssp, #16]
0xffff8bd0c298  1688  ldp d24, d25, [jssp], #32
0xffff8bd0c29c  1692  ldp d28, d29, [jssp], #16
0xffff8bd0c2a0  1696  ldp x5, x6, [jssp, #16]
0xffff8bd0c2a4  1700  ldp x3, x4, [jssp], #32
0xffff8bd0c2a8  1704  ldp x9, x10, [jssp, #16]
0xffff8bd0c2ac  1708  ldp x7, x8, [jssp], #32
0xffff8bd0c2b0  1712  ldp x13, x14, [jssp, #16]
0xffff8bd0c2b4  1716  ldp x11, x12, [jssp], #32
0xffff8bd0c2b8  1720  ldr lr, [jssp, #16]
0xffff8bd0c2bc  1724  ldp x15, x18, [jssp], #24
0xffff8bd0c2c0  1728  ldp x2, x0, [jssp], #16
0xffff8bd0c2c4  1732  ret
0xffff8bd0c2c8  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd0c2cc  1740  d63f03e0       constant
0xffff8bd0c2d0  1744  2cb8e8c0       constant
0xffff8bd0c2d4  1748  00000000       constant
0xffff8bd0c2d8  1752  8bd065a0       constant
0xffff8bd0c2dc  1756  0000ffff       constant
0xffff8bd0c2e0  1760  2cb8e8c0       constant
0xffff8bd0c2e4  1764  00000000       constant
0xffff8bd0c2e8  1768  8bd065a0       constant
0xffff8bd0c2ec  1772  0000ffff       constant
0xffff8bd0c2f0  1776  2cb8e8c0       constant
0xffff8bd0c2f4  1780  00000000       constant
0xffff8bd0c2f8  1784  8bd065a0       constant
0xffff8bd0c2fc  1788  0000ffff       constant
0xffff8bd0c300  1792  2cb8d2d0       constant
0xffff8bd0c304  1796  00000000       constant
0xffff8bd0c308  1800  00c2d958       constant
0xffff8bd0c30c  1804  00000000       constant
0xffff8bd0c310  1808  2cb8e8c0       constant
0xffff8bd0c314  1812  00000000       constant
0xffff8bd0c318  1816  8bd065a0       constant
0xffff8bd0c31c  1820  0000ffff       constant
0xffff8bd0c320  1824  2cb8d2d0       constant
0xffff8bd0c324  1828  00000000       constant
0xffff8bd0c328  1832  00c2d958       constant
0xffff8bd0c32c  1836  00000000       constant
0xffff8bd0c330  1840  2cb8e8c0       constant
0xffff8bd0c334  1844  00000000       constant
0xffff8bd0c338  1848  8bd065a0       constant
0xffff8bd0c33c  1852  0000ffff       constant
0xffff8bd0c340  1856  2cb8e8c0       constant
0xffff8bd0c344  1860  00000000       constant
0xffff8bd0c348  1864  8bd065a0       constant
0xffff8bd0c34c  1868  0000ffff       constant
0xffff8bd0c350  1872  2cb8d2d0       constant
0xffff8bd0c354  1876  00000000       constant
0xffff8bd0c358  1880  00c2d958       constant
0xffff8bd0c35c  1884  00000000       constant
0xffff8bd0c360  1888  2cb8e8c0       constant
0xffff8bd0c364  1892  00000000       constant
0xffff8bd0c368  1896  8bd065a0       constant
0xffff8bd0c36c  1900  0000ffff       constant
0xffff8bd0c370  1904  2cb8d2d0       constant
0xffff8bd0c374  1908  00000000       constant
0xffff8bd0c378  1912  00c2d958       constant
0xffff8bd0c37c  1916  00000000       constant


RelocInfo (size = 65)
0xffff8bd0bc08  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0bc2c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0bca4  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0bcc8  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0bd08  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0bd2c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0bd9c  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0bda0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0bdfc  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0be20  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0bf00  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0bf04  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0bfc8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0bfec  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0c04c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0c070  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0c0e0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0c0e4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0c140  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0c164  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0c264  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0c268  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0c2c8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff8bd0c3e0     0  adr xzr, #+0x40 (addr 0xffff8bd0c420)
0xffff8bd0c3e4     4  adr xzr, #+0x360 (addr 0xffff8bd0c744)
0xffff8bd0c3e8     8  ldr x16, pc+1736 (addr 0x0000ffff8bd0cab0)    ;; external reference (store_buffer_top)
0xffff8bd0c3ec    12  ldr x4, [x16]
0xffff8bd0c3f0    16  str x3, [x4], #8
0xffff8bd0c3f4    20  str x4, [x16]
0xffff8bd0c3f8    24  tst x4, #0x1ffff
0xffff8bd0c3fc    28  b.eq #+0x8 (addr 0xffff8bd0c404)
0xffff8bd0c400    32  ret
0xffff8bd0c404    36  sub csp, jssp, #0x8 (8)
0xffff8bd0c408    40  str lr, [jssp, #-8]!
0xffff8bd0c40c    44  ldr x17, pc+1708 (addr 0x0000ffff8bd0cab8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0c410    48  blr x17
0xffff8bd0c414    52  ldr lr, [jssp], #8
0xffff8bd0c418    56  ret
0xffff8bd0c41c    60  ret
0xffff8bd0c420    64  sub csp, jssp, #0x10 (16)
0xffff8bd0c424    68  stp x2, x0, [jssp, #-16]!
0xffff8bd0c428    72  ldr x4, [x3]
0xffff8bd0c42c    76  and x16, x4, #0xfffffffffff00000
0xffff8bd0c430    80  ldr x16, [x16, #8]
0xffff8bd0c434    84  tst x16, #0x18
0xffff8bd0c438    88  b.eq #+0x1d8 (addr 0xffff8bd0c610)
0xffff8bd0c43c    92  and x16, x1, #0xfffffffffff00000
0xffff8bd0c440    96  ldr x16, [x16, #8]
0xffff8bd0c444   100  tst x16, #0x18
0xffff8bd0c448   104  b.ne #+0x1c8 (addr 0xffff8bd0c610)
0xffff8bd0c44c   108  and x4, x1, #0xfffffffffff00000
0xffff8bd0c450   112  ldr x0, [x4, #104]
0xffff8bd0c454   116  subs x0, x0, #0x1 (1)
0xffff8bd0c458   120  str x0, [x4, #104]
0xffff8bd0c45c   124  b.mi #+0xc4 (addr 0xffff8bd0c520)
0xffff8bd0c460   128  ubfx x16, x1, #8, #12
0xffff8bd0c464   132  and x4, x1, #0xfffffffffff00000
0xffff8bd0c468   136  add x4, x4, x16, lsl #2
0xffff8bd0c46c   140  ubfx x0, x1, #3, #5
0xffff8bd0c470   144  ldr x4, [x4, #360]
0xffff8bd0c474   148  lsr x4, x4, x0
0xffff8bd0c478   152  tbz w4, #0, #+0x8 (addr 0xffff8bd0c480)
0xffff8bd0c47c   156  tbnz w4, #1, #+0x3c (addr 0xffff8bd0c4b8)
0xffff8bd0c480   160  ldp x2, x0, [jssp], #16
0xffff8bd0c484   164  ldr x16, pc+1596 (addr 0x0000ffff8bd0cac0)    ;; external reference (store_buffer_top)
0xffff8bd0c488   168  ldr x4, [x16]
0xffff8bd0c48c   172  str x3, [x4], #8
0xffff8bd0c490   176  str x4, [x16]
0xffff8bd0c494   180  tst x4, #0x1ffff
0xffff8bd0c498   184  b.eq #+0x8 (addr 0xffff8bd0c4a0)
0xffff8bd0c49c   188  ret
0xffff8bd0c4a0   192  sub csp, jssp, #0x8 (8)
0xffff8bd0c4a4   196  str lr, [jssp, #-8]!
0xffff8bd0c4a8   200  ldr x17, pc+1568 (addr 0x0000ffff8bd0cac8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0c4ac   204  blr x17
0xffff8bd0c4b0   208  ldr lr, [jssp], #8
0xffff8bd0c4b4   212  ret
0xffff8bd0c4b8   216  ldr x4, [x3]
0xffff8bd0c4bc   220  sub csp, jssp, #0x10 (16)
0xffff8bd0c4c0   224  stp x1, x3, [jssp, #-16]!
0xffff8bd0c4c4   228  ubfx x16, x4, #8, #12
0xffff8bd0c4c8   232  and x0, x4, #0xfffffffffff00000
0xffff8bd0c4cc   236  add x0, x0, x16, lsl #2
0xffff8bd0c4d0   240  ubfx x1, x4, #3, #5
0xffff8bd0c4d4   244  ldr x3, [x0, #360]
0xffff8bd0c4d8   248  lsr x3, x3, x1
0xffff8bd0c4dc   252  tbz w3, #0, #+0x40 (addr 0xffff8bd0c51c)
0xffff8bd0c4e0   256  ldp x1, x3, [jssp], #16
0xffff8bd0c4e4   260  ldp x2, x0, [jssp], #16
0xffff8bd0c4e8   264  ldr x16, pc+1512 (addr 0x0000ffff8bd0cad0)    ;; external reference (store_buffer_top)
0xffff8bd0c4ec   268  ldr x4, [x16]
0xffff8bd0c4f0   272  str x3, [x4], #8
0xffff8bd0c4f4   276  str x4, [x16]
0xffff8bd0c4f8   280  tst x4, #0x1ffff
0xffff8bd0c4fc   284  b.eq #+0x8 (addr 0xffff8bd0c504)
0xffff8bd0c500   288  ret
0xffff8bd0c504   292  sub csp, jssp, #0x8 (8)
0xffff8bd0c508   296  str lr, [jssp, #-8]!
0xffff8bd0c50c   300  ldr x17, pc+1484 (addr 0x0000ffff8bd0cad8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0c510   304  blr x17
0xffff8bd0c514   308  ldr lr, [jssp], #8
0xffff8bd0c518   312  ret
0xffff8bd0c51c   316  ldp x1, x3, [jssp], #16
0xffff8bd0c520   320  sub csp, jssp, #0x78 (120)
0xffff8bd0c524   324  stp x14, x15, [jssp, #-32]!
0xffff8bd0c528   328  stp x18, lr, [jssp, #16]
0xffff8bd0c52c   332  stp x10, x11, [jssp, #-32]!
0xffff8bd0c530   336  stp x12, x13, [jssp, #16]
0xffff8bd0c534   340  stp x6, x7, [jssp, #-32]!
0xffff8bd0c538   344  stp x8, x9, [jssp, #16]
0xffff8bd0c53c   348  stp x1, x3, [jssp, #-24]!
0xffff8bd0c540   352  str x5, [jssp, #16]
0xffff8bd0c544   356  sub csp, jssp, #0xb0 (176)
0xffff8bd0c548   360  stp d26, d27, [jssp, #-32]!
0xffff8bd0c54c   364  stp d28, d29, [jssp, #16]
0xffff8bd0c550   368  stp d22, d23, [jssp, #-32]!
0xffff8bd0c554   372  stp d24, d25, [jssp, #16]
0xffff8bd0c558   376  stp d18, d19, [jssp, #-32]!
0xffff8bd0c55c   380  stp d20, d21, [jssp, #16]
0xffff8bd0c560   384  stp d6, d7, [jssp, #-32]!
0xffff8bd0c564   388  stp d16, d17, [jssp, #16]
0xffff8bd0c568   392  stp d2, d3, [jssp, #-32]!
0xffff8bd0c56c   396  stp d4, d5, [jssp, #16]
0xffff8bd0c570   400  stp d0, d1, [jssp, #-16]!
0xffff8bd0c574   404  mov x0, x1
0xffff8bd0c578   408  mov x1, x3
0xffff8bd0c57c   412  ldr x2, pc+1380 (addr 0x0000ffff8bd0cae0)    ;; external reference (isolate)
0xffff8bd0c580   416  ldr x16, pc+1384 (addr 0x0000ffff8bd0cae8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0c584   420  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0c588   424  blr x16
0xffff8bd0c58c   428  ldp d2, d3, [jssp, #16]
0xffff8bd0c590   432  ldp d0, d1, [jssp], #32
0xffff8bd0c594   436  ldp d6, d7, [jssp, #16]
0xffff8bd0c598   440  ldp d4, d5, [jssp], #32
0xffff8bd0c59c   444  ldp d18, d19, [jssp, #16]
0xffff8bd0c5a0   448  ldp d16, d17, [jssp], #32
0xffff8bd0c5a4   452  ldp d22, d23, [jssp, #16]
0xffff8bd0c5a8   456  ldp d20, d21, [jssp], #32
0xffff8bd0c5ac   460  ldp d26, d27, [jssp, #16]
0xffff8bd0c5b0   464  ldp d24, d25, [jssp], #32
0xffff8bd0c5b4   468  ldp d28, d29, [jssp], #16
0xffff8bd0c5b8   472  ldp x5, x6, [jssp, #16]
0xffff8bd0c5bc   476  ldp x1, x3, [jssp], #32
0xffff8bd0c5c0   480  ldp x9, x10, [jssp, #16]
0xffff8bd0c5c4   484  ldp x7, x8, [jssp], #32
0xffff8bd0c5c8   488  ldp x13, x14, [jssp, #16]
0xffff8bd0c5cc   492  ldp x11, x12, [jssp], #32
0xffff8bd0c5d0   496  ldr lr, [jssp, #16]
0xffff8bd0c5d4   500  ldp x15, x18, [jssp], #24
0xffff8bd0c5d8   504  ldp x2, x0, [jssp], #16
0xffff8bd0c5dc   508  ldr x16, pc+1300 (addr 0x0000ffff8bd0caf0)    ;; external reference (store_buffer_top)
0xffff8bd0c5e0   512  ldr x4, [x16]
0xffff8bd0c5e4   516  str x3, [x4], #8
0xffff8bd0c5e8   520  str x4, [x16]
0xffff8bd0c5ec   524  tst x4, #0x1ffff
0xffff8bd0c5f0   528  b.eq #+0x8 (addr 0xffff8bd0c5f8)
0xffff8bd0c5f4   532  ret
0xffff8bd0c5f8   536  sub csp, jssp, #0x8 (8)
0xffff8bd0c5fc   540  str lr, [jssp, #-8]!
0xffff8bd0c600   544  ldr x17, pc+1272 (addr 0x0000ffff8bd0caf8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0c604   548  blr x17
0xffff8bd0c608   552  ldr lr, [jssp], #8
0xffff8bd0c60c   556  ret
0xffff8bd0c610   560  and x4, x1, #0xfffffffffff00000
0xffff8bd0c614   564  ldr x0, [x4, #104]
0xffff8bd0c618   568  subs x0, x0, #0x1 (1)
0xffff8bd0c61c   572  str x0, [x4, #104]
0xffff8bd0c620   576  b.mi #+0x64 (addr 0xffff8bd0c684)
0xffff8bd0c624   580  ubfx x16, x1, #8, #12
0xffff8bd0c628   584  and x4, x1, #0xfffffffffff00000
0xffff8bd0c62c   588  add x4, x4, x16, lsl #2
0xffff8bd0c630   592  ubfx x0, x1, #3, #5
0xffff8bd0c634   596  ldr x4, [x4, #360]
0xffff8bd0c638   600  lsr x4, x4, x0
0xffff8bd0c63c   604  tbz w4, #0, #+0x8 (addr 0xffff8bd0c644)
0xffff8bd0c640   608  tbnz w4, #1, #+0xc (addr 0xffff8bd0c64c)
0xffff8bd0c644   612  ldp x2, x0, [jssp], #16
0xffff8bd0c648   616  ret
0xffff8bd0c64c   620  ldr x4, [x3]
0xffff8bd0c650   624  sub csp, jssp, #0x10 (16)
0xffff8bd0c654   628  stp x1, x3, [jssp, #-16]!
0xffff8bd0c658   632  ubfx x16, x4, #8, #12
0xffff8bd0c65c   636  and x0, x4, #0xfffffffffff00000
0xffff8bd0c660   640  add x0, x0, x16, lsl #2
0xffff8bd0c664   644  ubfx x1, x4, #3, #5
0xffff8bd0c668   648  ldr x3, [x0, #360]
0xffff8bd0c66c   652  lsr x3, x3, x1
0xffff8bd0c670   656  tbz w3, #0, #+0x10 (addr 0xffff8bd0c680)
0xffff8bd0c674   660  ldp x1, x3, [jssp], #16
0xffff8bd0c678   664  ldp x2, x0, [jssp], #16
0xffff8bd0c67c   668  ret
0xffff8bd0c680   672  ldp x1, x3, [jssp], #16
0xffff8bd0c684   676  sub csp, jssp, #0x78 (120)
0xffff8bd0c688   680  stp x14, x15, [jssp, #-32]!
0xffff8bd0c68c   684  stp x18, lr, [jssp, #16]
0xffff8bd0c690   688  stp x10, x11, [jssp, #-32]!
0xffff8bd0c694   692  stp x12, x13, [jssp, #16]
0xffff8bd0c698   696  stp x6, x7, [jssp, #-32]!
0xffff8bd0c69c   700  stp x8, x9, [jssp, #16]
0xffff8bd0c6a0   704  stp x1, x3, [jssp, #-24]!
0xffff8bd0c6a4   708  str x5, [jssp, #16]
0xffff8bd0c6a8   712  sub csp, jssp, #0xb0 (176)
0xffff8bd0c6ac   716  stp d26, d27, [jssp, #-32]!
0xffff8bd0c6b0   720  stp d28, d29, [jssp, #16]
0xffff8bd0c6b4   724  stp d22, d23, [jssp, #-32]!
0xffff8bd0c6b8   728  stp d24, d25, [jssp, #16]
0xffff8bd0c6bc   732  stp d18, d19, [jssp, #-32]!
0xffff8bd0c6c0   736  stp d20, d21, [jssp, #16]
0xffff8bd0c6c4   740  stp d6, d7, [jssp, #-32]!
0xffff8bd0c6c8   744  stp d16, d17, [jssp, #16]
0xffff8bd0c6cc   748  stp d2, d3, [jssp, #-32]!
0xffff8bd0c6d0   752  stp d4, d5, [jssp, #16]
0xffff8bd0c6d4   756  stp d0, d1, [jssp, #-16]!
0xffff8bd0c6d8   760  mov x0, x1
0xffff8bd0c6dc   764  mov x1, x3
0xffff8bd0c6e0   768  ldr x2, pc+1056 (addr 0x0000ffff8bd0cb00)    ;; external reference (isolate)
0xffff8bd0c6e4   772  ldr x16, pc+1060 (addr 0x0000ffff8bd0cb08)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0c6e8   776  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0c6ec   780  blr x16
0xffff8bd0c6f0   784  ldp d2, d3, [jssp, #16]
0xffff8bd0c6f4   788  ldp d0, d1, [jssp], #32
0xffff8bd0c6f8   792  ldp d6, d7, [jssp, #16]
0xffff8bd0c6fc   796  ldp d4, d5, [jssp], #32
0xffff8bd0c700   800  ldp d18, d19, [jssp, #16]
0xffff8bd0c704   804  ldp d16, d17, [jssp], #32
0xffff8bd0c708   808  ldp d22, d23, [jssp, #16]
0xffff8bd0c70c   812  ldp d20, d21, [jssp], #32
0xffff8bd0c710   816  ldp d26, d27, [jssp, #16]
0xffff8bd0c714   820  ldp d24, d25, [jssp], #32
0xffff8bd0c718   824  ldp d28, d29, [jssp], #16
0xffff8bd0c71c   828  ldp x5, x6, [jssp, #16]
0xffff8bd0c720   832  ldp x1, x3, [jssp], #32
0xffff8bd0c724   836  ldp x9, x10, [jssp, #16]
0xffff8bd0c728   840  ldp x7, x8, [jssp], #32
0xffff8bd0c72c   844  ldp x13, x14, [jssp, #16]
0xffff8bd0c730   848  ldp x11, x12, [jssp], #32
0xffff8bd0c734   852  ldr lr, [jssp, #16]
0xffff8bd0c738   856  ldp x15, x18, [jssp], #24
0xffff8bd0c73c   860  ldp x2, x0, [jssp], #16
0xffff8bd0c740   864  ret
0xffff8bd0c744   868  sub csp, jssp, #0x10 (16)
0xffff8bd0c748   872  stp x2, x0, [jssp, #-16]!
0xffff8bd0c74c   876  ldr x4, [x3]
0xffff8bd0c750   880  and x16, x4, #0xfffffffffff00000
0xffff8bd0c754   884  ldr x16, [x16, #8]
0xffff8bd0c758   888  tst x16, #0x18
0xffff8bd0c75c   892  b.eq #+0x1f8 (addr 0xffff8bd0c954)
0xffff8bd0c760   896  and x16, x1, #0xfffffffffff00000
0xffff8bd0c764   900  ldr x16, [x16, #8]
0xffff8bd0c768   904  tst x16, #0x18
0xffff8bd0c76c   908  b.ne #+0x1e8 (addr 0xffff8bd0c954)
0xffff8bd0c770   912  and x4, x1, #0xfffffffffff00000
0xffff8bd0c774   916  ldr x0, [x4, #104]
0xffff8bd0c778   920  subs x0, x0, #0x1 (1)
0xffff8bd0c77c   924  str x0, [x4, #104]
0xffff8bd0c780   928  b.mi #+0xe4 (addr 0xffff8bd0c864)
0xffff8bd0c784   932  ubfx x16, x1, #8, #12
0xffff8bd0c788   936  and x4, x1, #0xfffffffffff00000
0xffff8bd0c78c   940  add x4, x4, x16, lsl #2
0xffff8bd0c790   944  ubfx x0, x1, #3, #5
0xffff8bd0c794   948  ldr x4, [x4, #360]
0xffff8bd0c798   952  lsr x4, x4, x0
0xffff8bd0c79c   956  tbz w4, #0, #+0x8 (addr 0xffff8bd0c7a4)
0xffff8bd0c7a0   960  tbnz w4, #1, #+0x3c (addr 0xffff8bd0c7dc)
0xffff8bd0c7a4   964  ldp x2, x0, [jssp], #16
0xffff8bd0c7a8   968  ldr x16, pc+872 (addr 0x0000ffff8bd0cb10)    ;; external reference (store_buffer_top)
0xffff8bd0c7ac   972  ldr x4, [x16]
0xffff8bd0c7b0   976  str x3, [x4], #8
0xffff8bd0c7b4   980  str x4, [x16]
0xffff8bd0c7b8   984  tst x4, #0x1ffff
0xffff8bd0c7bc   988  b.eq #+0x8 (addr 0xffff8bd0c7c4)
0xffff8bd0c7c0   992  ret
0xffff8bd0c7c4   996  sub csp, jssp, #0x8 (8)
0xffff8bd0c7c8  1000  str lr, [jssp, #-8]!
0xffff8bd0c7cc  1004  ldr x17, pc+844 (addr 0x0000ffff8bd0cb18)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0c7d0  1008  blr x17
0xffff8bd0c7d4  1012  ldr lr, [jssp], #8
0xffff8bd0c7d8  1016  ret
0xffff8bd0c7dc  1020  ldr x4, [x3]
0xffff8bd0c7e0  1024  and x0, x4, #0xfffffffffff00000
0xffff8bd0c7e4  1028  ldr x0, [x0, #8]
0xffff8bd0c7e8  1032  tbz w0, #6, #+0x18 (addr 0xffff8bd0c800)
0xffff8bd0c7ec  1036  and x0, x1, #0xfffffffffff00000
0xffff8bd0c7f0  1040  ldr x0, [x0, #8]
0xffff8bd0c7f4  1044  movz x16, #0x58
0xffff8bd0c7f8  1048  tst x0, x16
0xffff8bd0c7fc  1052  b.eq #+0x68 (addr 0xffff8bd0c864)
0xffff8bd0c800  1056  sub csp, jssp, #0x10 (16)
0xffff8bd0c804  1060  stp x1, x3, [jssp, #-16]!
0xffff8bd0c808  1064  ubfx x16, x4, #8, #12
0xffff8bd0c80c  1068  and x0, x4, #0xfffffffffff00000
0xffff8bd0c810  1072  add x0, x0, x16, lsl #2
0xffff8bd0c814  1076  ubfx x1, x4, #3, #5
0xffff8bd0c818  1080  ldr x3, [x0, #360]
0xffff8bd0c81c  1084  lsr x3, x3, x1
0xffff8bd0c820  1088  tbz w3, #0, #+0x40 (addr 0xffff8bd0c860)
0xffff8bd0c824  1092  ldp x1, x3, [jssp], #16
0xffff8bd0c828  1096  ldp x2, x0, [jssp], #16
0xffff8bd0c82c  1100  ldr x16, pc+756 (addr 0x0000ffff8bd0cb20)    ;; external reference (store_buffer_top)
0xffff8bd0c830  1104  ldr x4, [x16]
0xffff8bd0c834  1108  str x3, [x4], #8
0xffff8bd0c838  1112  str x4, [x16]
0xffff8bd0c83c  1116  tst x4, #0x1ffff
0xffff8bd0c840  1120  b.eq #+0x8 (addr 0xffff8bd0c848)
0xffff8bd0c844  1124  ret
0xffff8bd0c848  1128  sub csp, jssp, #0x8 (8)
0xffff8bd0c84c  1132  str lr, [jssp, #-8]!
0xffff8bd0c850  1136  ldr x17, pc+728 (addr 0x0000ffff8bd0cb28)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0c854  1140  blr x17
0xffff8bd0c858  1144  ldr lr, [jssp], #8
0xffff8bd0c85c  1148  ret
0xffff8bd0c860  1152  ldp x1, x3, [jssp], #16
0xffff8bd0c864  1156  sub csp, jssp, #0x78 (120)
0xffff8bd0c868  1160  stp x14, x15, [jssp, #-32]!
0xffff8bd0c86c  1164  stp x18, lr, [jssp, #16]
0xffff8bd0c870  1168  stp x10, x11, [jssp, #-32]!
0xffff8bd0c874  1172  stp x12, x13, [jssp, #16]
0xffff8bd0c878  1176  stp x6, x7, [jssp, #-32]!
0xffff8bd0c87c  1180  stp x8, x9, [jssp, #16]
0xffff8bd0c880  1184  stp x1, x3, [jssp, #-24]!
0xffff8bd0c884  1188  str x5, [jssp, #16]
0xffff8bd0c888  1192  sub csp, jssp, #0xb0 (176)
0xffff8bd0c88c  1196  stp d26, d27, [jssp, #-32]!
0xffff8bd0c890  1200  stp d28, d29, [jssp, #16]
0xffff8bd0c894  1204  stp d22, d23, [jssp, #-32]!
0xffff8bd0c898  1208  stp d24, d25, [jssp, #16]
0xffff8bd0c89c  1212  stp d18, d19, [jssp, #-32]!
0xffff8bd0c8a0  1216  stp d20, d21, [jssp, #16]
0xffff8bd0c8a4  1220  stp d6, d7, [jssp, #-32]!
0xffff8bd0c8a8  1224  stp d16, d17, [jssp, #16]
0xffff8bd0c8ac  1228  stp d2, d3, [jssp, #-32]!
0xffff8bd0c8b0  1232  stp d4, d5, [jssp, #16]
0xffff8bd0c8b4  1236  stp d0, d1, [jssp, #-16]!
0xffff8bd0c8b8  1240  mov x0, x1
0xffff8bd0c8bc  1244  mov x1, x3
0xffff8bd0c8c0  1248  ldr x2, pc+624 (addr 0x0000ffff8bd0cb30)    ;; external reference (isolate)
0xffff8bd0c8c4  1252  ldr x16, pc+628 (addr 0x0000ffff8bd0cb38)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0c8c8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0c8cc  1260  blr x16
0xffff8bd0c8d0  1264  ldp d2, d3, [jssp, #16]
0xffff8bd0c8d4  1268  ldp d0, d1, [jssp], #32
0xffff8bd0c8d8  1272  ldp d6, d7, [jssp, #16]
0xffff8bd0c8dc  1276  ldp d4, d5, [jssp], #32
0xffff8bd0c8e0  1280  ldp d18, d19, [jssp, #16]
0xffff8bd0c8e4  1284  ldp d16, d17, [jssp], #32
0xffff8bd0c8e8  1288  ldp d22, d23, [jssp, #16]
0xffff8bd0c8ec  1292  ldp d20, d21, [jssp], #32
0xffff8bd0c8f0  1296  ldp d26, d27, [jssp, #16]
0xffff8bd0c8f4  1300  ldp d24, d25, [jssp], #32
0xffff8bd0c8f8  1304  ldp d28, d29, [jssp], #16
0xffff8bd0c8fc  1308  ldp x5, x6, [jssp, #16]
0xffff8bd0c900  1312  ldp x1, x3, [jssp], #32
0xffff8bd0c904  1316  ldp x9, x10, [jssp, #16]
0xffff8bd0c908  1320  ldp x7, x8, [jssp], #32
0xffff8bd0c90c  1324  ldp x13, x14, [jssp, #16]
0xffff8bd0c910  1328  ldp x11, x12, [jssp], #32
0xffff8bd0c914  1332  ldr lr, [jssp, #16]
0xffff8bd0c918  1336  ldp x15, x18, [jssp], #24
0xffff8bd0c91c  1340  ldp x2, x0, [jssp], #16
0xffff8bd0c920  1344  ldr x16, pc+544 (addr 0x0000ffff8bd0cb40)    ;; external reference (store_buffer_top)
0xffff8bd0c924  1348  ldr x4, [x16]
0xffff8bd0c928  1352  str x3, [x4], #8
0xffff8bd0c92c  1356  str x4, [x16]
0xffff8bd0c930  1360  tst x4, #0x1ffff
0xffff8bd0c934  1364  b.eq #+0x8 (addr 0xffff8bd0c93c)
0xffff8bd0c938  1368  ret
0xffff8bd0c93c  1372  sub csp, jssp, #0x8 (8)
0xffff8bd0c940  1376  str lr, [jssp, #-8]!
0xffff8bd0c944  1380  ldr x17, pc+516 (addr 0x0000ffff8bd0cb48)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0c948  1384  blr x17
0xffff8bd0c94c  1388  ldr lr, [jssp], #8
0xffff8bd0c950  1392  ret
0xffff8bd0c954  1396  and x4, x1, #0xfffffffffff00000
0xffff8bd0c958  1400  ldr x0, [x4, #104]
0xffff8bd0c95c  1404  subs x0, x0, #0x1 (1)
0xffff8bd0c960  1408  str x0, [x4, #104]
0xffff8bd0c964  1412  b.mi #+0x84 (addr 0xffff8bd0c9e8)
0xffff8bd0c968  1416  ubfx x16, x1, #8, #12
0xffff8bd0c96c  1420  and x4, x1, #0xfffffffffff00000
0xffff8bd0c970  1424  add x4, x4, x16, lsl #2
0xffff8bd0c974  1428  ubfx x0, x1, #3, #5
0xffff8bd0c978  1432  ldr x4, [x4, #360]
0xffff8bd0c97c  1436  lsr x4, x4, x0
0xffff8bd0c980  1440  tbz w4, #0, #+0x8 (addr 0xffff8bd0c988)
0xffff8bd0c984  1444  tbnz w4, #1, #+0xc (addr 0xffff8bd0c990)
0xffff8bd0c988  1448  ldp x2, x0, [jssp], #16
0xffff8bd0c98c  1452  ret
0xffff8bd0c990  1456  ldr x4, [x3]
0xffff8bd0c994  1460  and x0, x4, #0xfffffffffff00000
0xffff8bd0c998  1464  ldr x0, [x0, #8]
0xffff8bd0c99c  1468  tbz w0, #6, #+0x18 (addr 0xffff8bd0c9b4)
0xffff8bd0c9a0  1472  and x0, x1, #0xfffffffffff00000
0xffff8bd0c9a4  1476  ldr x0, [x0, #8]
0xffff8bd0c9a8  1480  movz x16, #0x58
0xffff8bd0c9ac  1484  tst x0, x16
0xffff8bd0c9b0  1488  b.eq #+0x38 (addr 0xffff8bd0c9e8)
0xffff8bd0c9b4  1492  sub csp, jssp, #0x10 (16)
0xffff8bd0c9b8  1496  stp x1, x3, [jssp, #-16]!
0xffff8bd0c9bc  1500  ubfx x16, x4, #8, #12
0xffff8bd0c9c0  1504  and x0, x4, #0xfffffffffff00000
0xffff8bd0c9c4  1508  add x0, x0, x16, lsl #2
0xffff8bd0c9c8  1512  ubfx x1, x4, #3, #5
0xffff8bd0c9cc  1516  ldr x3, [x0, #360]
0xffff8bd0c9d0  1520  lsr x3, x3, x1
0xffff8bd0c9d4  1524  tbz w3, #0, #+0x10 (addr 0xffff8bd0c9e4)
0xffff8bd0c9d8  1528  ldp x1, x3, [jssp], #16
0xffff8bd0c9dc  1532  ldp x2, x0, [jssp], #16
0xffff8bd0c9e0  1536  ret
0xffff8bd0c9e4  1540  ldp x1, x3, [jssp], #16
0xffff8bd0c9e8  1544  sub csp, jssp, #0x78 (120)
0xffff8bd0c9ec  1548  stp x14, x15, [jssp, #-32]!
0xffff8bd0c9f0  1552  stp x18, lr, [jssp, #16]
0xffff8bd0c9f4  1556  stp x10, x11, [jssp, #-32]!
0xffff8bd0c9f8  1560  stp x12, x13, [jssp, #16]
0xffff8bd0c9fc  1564  stp x6, x7, [jssp, #-32]!
0xffff8bd0ca00  1568  stp x8, x9, [jssp, #16]
0xffff8bd0ca04  1572  stp x1, x3, [jssp, #-24]!
0xffff8bd0ca08  1576  str x5, [jssp, #16]
0xffff8bd0ca0c  1580  sub csp, jssp, #0xb0 (176)
0xffff8bd0ca10  1584  stp d26, d27, [jssp, #-32]!
0xffff8bd0ca14  1588  stp d28, d29, [jssp, #16]
0xffff8bd0ca18  1592  stp d22, d23, [jssp, #-32]!
0xffff8bd0ca1c  1596  stp d24, d25, [jssp, #16]
0xffff8bd0ca20  1600  stp d18, d19, [jssp, #-32]!
0xffff8bd0ca24  1604  stp d20, d21, [jssp, #16]
0xffff8bd0ca28  1608  stp d6, d7, [jssp, #-32]!
0xffff8bd0ca2c  1612  stp d16, d17, [jssp, #16]
0xffff8bd0ca30  1616  stp d2, d3, [jssp, #-32]!
0xffff8bd0ca34  1620  stp d4, d5, [jssp, #16]
0xffff8bd0ca38  1624  stp d0, d1, [jssp, #-16]!
0xffff8bd0ca3c  1628  mov x0, x1
0xffff8bd0ca40  1632  mov x1, x3
0xffff8bd0ca44  1636  ldr x2, pc+268 (addr 0x0000ffff8bd0cb50)    ;; external reference (isolate)
0xffff8bd0ca48  1640  ldr x16, pc+272 (addr 0x0000ffff8bd0cb58)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0ca4c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0ca50  1648  blr x16
0xffff8bd0ca54  1652  ldp d2, d3, [jssp, #16]
0xffff8bd0ca58  1656  ldp d0, d1, [jssp], #32
0xffff8bd0ca5c  1660  ldp d6, d7, [jssp, #16]
0xffff8bd0ca60  1664  ldp d4, d5, [jssp], #32
0xffff8bd0ca64  1668  ldp d18, d19, [jssp, #16]
0xffff8bd0ca68  1672  ldp d16, d17, [jssp], #32
0xffff8bd0ca6c  1676  ldp d22, d23, [jssp, #16]
0xffff8bd0ca70  1680  ldp d20, d21, [jssp], #32
0xffff8bd0ca74  1684  ldp d26, d27, [jssp, #16]
0xffff8bd0ca78  1688  ldp d24, d25, [jssp], #32
0xffff8bd0ca7c  1692  ldp d28, d29, [jssp], #16
0xffff8bd0ca80  1696  ldp x5, x6, [jssp, #16]
0xffff8bd0ca84  1700  ldp x1, x3, [jssp], #32
0xffff8bd0ca88  1704  ldp x9, x10, [jssp, #16]
0xffff8bd0ca8c  1708  ldp x7, x8, [jssp], #32
0xffff8bd0ca90  1712  ldp x13, x14, [jssp, #16]
0xffff8bd0ca94  1716  ldp x11, x12, [jssp], #32
0xffff8bd0ca98  1720  ldr lr, [jssp, #16]
0xffff8bd0ca9c  1724  ldp x15, x18, [jssp], #24
0xffff8bd0caa0  1728  ldp x2, x0, [jssp], #16
0xffff8bd0caa4  1732  ret
0xffff8bd0caa8  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd0caac  1740  d63f03e0       constant
0xffff8bd0cab0  1744  2cb8e8c0       constant
0xffff8bd0cab4  1748  00000000       constant
0xffff8bd0cab8  1752  8bd065a0       constant
0xffff8bd0cabc  1756  0000ffff       constant
0xffff8bd0cac0  1760  2cb8e8c0       constant
0xffff8bd0cac4  1764  00000000       constant
0xffff8bd0cac8  1768  8bd065a0       constant
0xffff8bd0cacc  1772  0000ffff       constant
0xffff8bd0cad0  1776  2cb8e8c0       constant
0xffff8bd0cad4  1780  00000000       constant
0xffff8bd0cad8  1784  8bd065a0       constant
0xffff8bd0cadc  1788  0000ffff       constant
0xffff8bd0cae0  1792  2cb8d2d0       constant
0xffff8bd0cae4  1796  00000000       constant
0xffff8bd0cae8  1800  00c2d958       constant
0xffff8bd0caec  1804  00000000       constant
0xffff8bd0caf0  1808  2cb8e8c0       constant
0xffff8bd0caf4  1812  00000000       constant
0xffff8bd0caf8  1816  8bd065a0       constant
0xffff8bd0cafc  1820  0000ffff       constant
0xffff8bd0cb00  1824  2cb8d2d0       constant
0xffff8bd0cb04  1828  00000000       constant
0xffff8bd0cb08  1832  00c2d958       constant
0xffff8bd0cb0c  1836  00000000       constant
0xffff8bd0cb10  1840  2cb8e8c0       constant
0xffff8bd0cb14  1844  00000000       constant
0xffff8bd0cb18  1848  8bd065a0       constant
0xffff8bd0cb1c  1852  0000ffff       constant
0xffff8bd0cb20  1856  2cb8e8c0       constant
0xffff8bd0cb24  1860  00000000       constant
0xffff8bd0cb28  1864  8bd065a0       constant
0xffff8bd0cb2c  1868  0000ffff       constant
0xffff8bd0cb30  1872  2cb8d2d0       constant
0xffff8bd0cb34  1876  00000000       constant
0xffff8bd0cb38  1880  00c2d958       constant
0xffff8bd0cb3c  1884  00000000       constant
0xffff8bd0cb40  1888  2cb8e8c0       constant
0xffff8bd0cb44  1892  00000000       constant
0xffff8bd0cb48  1896  8bd065a0       constant
0xffff8bd0cb4c  1900  0000ffff       constant
0xffff8bd0cb50  1904  2cb8d2d0       constant
0xffff8bd0cb54  1908  00000000       constant
0xffff8bd0cb58  1912  00c2d958       constant
0xffff8bd0cb5c  1916  00000000       constant


RelocInfo (size = 65)
0xffff8bd0c3e8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0c40c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0c484  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0c4a8  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0c4e8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0c50c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0c57c  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0c580  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0c5dc  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0c600  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0c6e0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0c6e4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0c7a8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0c7cc  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0c82c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0c850  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0c8c0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0c8c4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0c920  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0c944  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0ca44  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0ca48  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0caa8  constant pool (size 184)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = CreateAllocationSiteStub
compiler = crankshaft
Instructions (size = 477)
0xffff8bd0cbc0     0  movz x1, #0xc840
0xffff8bd0cbc4     4  movk x1, #0x2cbb, lsl #16
0xffff8bd0cbc8     8  ldp x4, x0, [x1]
0xffff8bd0cbcc    12  adds x16, x4, #0x38 (56)
0xffff8bd0cbd0    16  ccmp x16, x0, #nzCv, lo
0xffff8bd0cbd4    20  b.hi #+0x104 (addr 0xffff8bd0ccd8)
0xffff8bd0cbd8    24  str x16, [x1]
0xffff8bd0cbdc    28  orr x4, x4, #0x1
0xffff8bd0cbe0    32  ldr x0, pc+360 (addr 0x0000ffff8bd0cd48)    ;; object: 0x5f505d29 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd0cbe4    36  stur x0, [x4, #-1]
0xffff8bd0cbe8    40  sub x1, x4, #0x1 (1)
0xffff8bd0cbec    44  and x0, x0, #0xfffffffffff00000
0xffff8bd0cbf0    48  ldr x0, [x0, #8]
0xffff8bd0cbf4    52  tbz w0, #1, #+0x24 (addr 0xffff8bd0cc18)
0xffff8bd0cbf8    56  and x0, x4, #0xfffffffffff00000
0xffff8bd0cbfc    60  ldr x0, [x0, #8]
0xffff8bd0cc00    64  tbz w0, #2, #+0x18 (addr 0xffff8bd0cc18)
0xffff8bd0cc04    68  sub csp, jssp, #0x8 (8)
0xffff8bd0cc08    72  str lr, [jssp, #-8]!
0xffff8bd0cc0c    76  ldr x16, pc+324 (addr 0x0000ffff8bd0cd50)    ;; code: STUB, RecordWriteStub, minor: 66564
0xffff8bd0cc10    80  blr x16
0xffff8bd0cc14    84  ldr lr, [jssp], #8
0xffff8bd0cc18    88  movz x0, #0x0
0xffff8bd0cc1c    92  stur x0, [x4, #7]
0xffff8bd0cc20    96  movz x0, #0x0
0xffff8bd0cc24   100  stur x0, [x4, #15]
0xffff8bd0cc28   104  movz x0, #0x0
0xffff8bd0cc2c   108  stur x0, [x4, #23]
0xffff8bd0cc30   112  movz x0, #0x0
0xffff8bd0cc34   116  stur x0, [x4, #31]
0xffff8bd0cc38   120  ldr x0, pc+288 (addr 0x0000ffff8bd0cd58)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0cc3c   124  stur x0, [x4, #39]
0xffff8bd0cc40   128  movz x0, #0xe748
0xffff8bd0cc44   132  movk x0, #0x2cb8, lsl #16
0xffff8bd0cc48   136  ldr x1, [x0]
0xffff8bd0cc4c   140  stur x1, [x4, #47]
0xffff8bd0cc50   144  tbz w1, #0, #+0x34 (addr 0xffff8bd0cc84)
0xffff8bd0cc54   148  add x5, x4, #0x2f (47)
0xffff8bd0cc58   152  and x1, x1, #0xfffffffffff00000
0xffff8bd0cc5c   156  ldr x1, [x1, #8]
0xffff8bd0cc60   160  tbz w1, #1, #+0x24 (addr 0xffff8bd0cc84)
0xffff8bd0cc64   164  and x1, x4, #0xfffffffffff00000
0xffff8bd0cc68   168  ldr x1, [x1, #8]
0xffff8bd0cc6c   172  tbz w1, #2, #+0x18 (addr 0xffff8bd0cc84)
0xffff8bd0cc70   176  sub csp, jssp, #0x8 (8)
0xffff8bd0cc74   180  str lr, [jssp, #-8]!
0xffff8bd0cc78   184  ldr x16, pc+232 (addr 0x0000ffff8bd0cd60)    ;; code: STUB, RecordWriteStub, minor: 70692
0xffff8bd0cc7c   188  blr x16
0xffff8bd0cc80   192  ldr lr, [jssp], #8
0xffff8bd0cc84   196  movz x1, #0xe748
0xffff8bd0cc88   200  movk x1, #0x2cb8, lsl #16
0xffff8bd0cc8c   204  str x4, [x0]
0xffff8bd0cc90   208  asr x0, x3, #32
0xffff8bd0cc94   212  mov x1, x2
0xffff8bd0cc98   216  add x3, x1, #0xf (15)
0xffff8bd0cc9c   220  str x4, [x3, w0, sxtw #3]
0xffff8bd0cca0   224  add x3, x3, w0, sxtw #3
0xffff8bd0cca4   228  and x4, x4, #0xfffffffffff00000
0xffff8bd0cca8   232  ldr x4, [x4, #8]
0xffff8bd0ccac   236  tbz w4, #1, #+0x24 (addr 0xffff8bd0ccd0)
0xffff8bd0ccb0   240  and x4, x1, #0xfffffffffff00000
0xffff8bd0ccb4   244  ldr x4, [x4, #8]
0xffff8bd0ccb8   248  tbz w4, #2, #+0x18 (addr 0xffff8bd0ccd0)
0xffff8bd0ccbc   252  sub csp, jssp, #0x8 (8)
0xffff8bd0ccc0   256  str lr, [jssp, #-8]!
0xffff8bd0ccc4   260  ldr x16, pc+164 (addr 0x0000ffff8bd0cd68)    ;; code: STUB, RecordWriteStub, minor: 68737
0xffff8bd0ccc8   264  blr x16
0xffff8bd0cccc   268  ldr lr, [jssp], #8
0xffff8bd0ccd0   272  mov x0, x2
0xffff8bd0ccd4   276  ret
0xffff8bd0ccd8   280  sub csp, jssp, #0x10 (16)
0xffff8bd0ccdc   284  stp fp, lr, [jssp, #-16]!
0xffff8bd0cce0   288  movz fp, #0xa00000000
0xffff8bd0cce4   292  sub csp, jssp, #0x8 (8)
0xffff8bd0cce8   296  str fp, [jssp, #-8]!
0xffff8bd0ccec   300  add fp, jssp, #0x8 (8)
0xffff8bd0ccf0   304  movz x4, #0x0
0xffff8bd0ccf4   308  mov x16, lr
0xffff8bd0ccf8   312  ldr x17, pc+120 (addr 0x0000ffff8bd0cd70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0ccfc   316  blr x17
0xffff8bd0cd00   320  movz x0, #0x3800000000
0xffff8bd0cd04   324  movz x10, #0x200000000
0xffff8bd0cd08   328  sub csp, jssp, #0x10 (16)
0xffff8bd0cd0c   332  stp x10, x0, [jssp, #-16]!
0xffff8bd0cd10   336  movz x0, #0x2
0xffff8bd0cd14   340  movz x1, #0x5b88
0xffff8bd0cd18   344  movk x1, #0xe2, lsl #16
0xffff8bd0cd1c   348  ldr x16, pc+92 (addr 0x0000ffff8bd0cd78)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0cd20   352  blr x16
0xffff8bd0cd24   356  str x0, [jssp, #32]
0xffff8bd0cd28   360  ldr x16, pc+88 (addr 0x0000ffff8bd0cd80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0cd2c   364  blr x16
0xffff8bd0cd30   368  ldr lr, [jssp, #16]
0xffff8bd0cd34   372  ldp xzr, fp, [jssp], #24
0xffff8bd0cd38   376  b #-0x158 (addr 0xffff8bd0cbe0)
0xffff8bd0cd3c   380  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff8bd0cd40   384  d63f03e0       constant
0xffff8bd0cd44   388  d503201f       constant
0xffff8bd0cd48   392  5f505d29       constant
0xffff8bd0cd4c   396  00000000       constant
0xffff8bd0cd50   400  8bd0b420       constant
0xffff8bd0cd54   404  0000ffff       constant
0xffff8bd0cd58   408  26c04201       constant
0xffff8bd0cd5c   412  00000000       constant
0xffff8bd0cd60   416  8bd0bc00       constant
0xffff8bd0cd64   420  0000ffff       constant
0xffff8bd0cd68   424  8bd0c3e0       constant
0xffff8bd0cd6c   428  0000ffff       constant
0xffff8bd0cd70   432  8bd06820       constant
0xffff8bd0cd74   436  0000ffff       constant
0xffff8bd0cd78   440  8bd06260       constant
0xffff8bd0cd7c   444  0000ffff       constant
0xffff8bd0cd80   448  8bd068e0       constant
0xffff8bd0cd84   452  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0cd24   356  000 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 18)
0xffff8bd0cbe0  embedded object  (0x5f505d29 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0cc0c  code target (STUB)  (0xffff8bd0b420)
0xffff8bd0cc38  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0cc78  code target (STUB)  (0xffff8bd0bc00)
0xffff8bd0ccc4  code target (STUB)  (0xffff8bd0c3e0)
0xffff8bd0ccf8  code target (STUB)  (0xffff8bd06820)
0xffff8bd0cd1c  code target (STUB)  (0xffff8bd06260)
0xffff8bd0cd28  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0cd3c  constant pool (size 76)

--- End code ---
kind = STUB
major_key = CreateAllocationSiteStub
name = CreateAllocationSiteStub
compiler = crankshaft
Instructions (size = 477)
0xffff8bd0cbc0     0  movz x1, #0xc840
0xffff8bd0cbc4     4  movk x1, #0x2cbb, lsl #16
0xffff8bd0cbc8     8  ldp x4, x0, [x1]
0xffff8bd0cbcc    12  adds x16, x4, #0x38 (56)
0xffff8bd0cbd0    16  ccmp x16, x0, #nzCv, lo
0xffff8bd0cbd4    20  b.hi #+0x104 (addr 0xffff8bd0ccd8)
0xffff8bd0cbd8    24  str x16, [x1]
0xffff8bd0cbdc    28  orr x4, x4, #0x1
0xffff8bd0cbe0    32  ldr x0, pc+360 (addr 0x0000ffff8bd0cd48)    ;; object: 0x5f505d29 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd0cbe4    36  stur x0, [x4, #-1]
0xffff8bd0cbe8    40  sub x1, x4, #0x1 (1)
0xffff8bd0cbec    44  and x0, x0, #0xfffffffffff00000
0xffff8bd0cbf0    48  ldr x0, [x0, #8]
0xffff8bd0cbf4    52  tbz w0, #1, #+0x24 (addr 0xffff8bd0cc18)
0xffff8bd0cbf8    56  and x0, x4, #0xfffffffffff00000
0xffff8bd0cbfc    60  ldr x0, [x0, #8]
0xffff8bd0cc00    64  tbz w0, #2, #+0x18 (addr 0xffff8bd0cc18)
0xffff8bd0cc04    68  sub csp, jssp, #0x8 (8)
0xffff8bd0cc08    72  str lr, [jssp, #-8]!
0xffff8bd0cc0c    76  ldr x16, pc+324 (addr 0x0000ffff8bd0cd50)    ;; code: STUB, RecordWriteStub, minor: 66564
0xffff8bd0cc10    80  blr x16
0xffff8bd0cc14    84  ldr lr, [jssp], #8
0xffff8bd0cc18    88  movz x0, #0x0
0xffff8bd0cc1c    92  stur x0, [x4, #7]
0xffff8bd0cc20    96  movz x0, #0x0
0xffff8bd0cc24   100  stur x0, [x4, #15]
0xffff8bd0cc28   104  movz x0, #0x0
0xffff8bd0cc2c   108  stur x0, [x4, #23]
0xffff8bd0cc30   112  movz x0, #0x0
0xffff8bd0cc34   116  stur x0, [x4, #31]
0xffff8bd0cc38   120  ldr x0, pc+288 (addr 0x0000ffff8bd0cd58)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd0cc3c   124  stur x0, [x4, #39]
0xffff8bd0cc40   128  movz x0, #0xe748
0xffff8bd0cc44   132  movk x0, #0x2cb8, lsl #16
0xffff8bd0cc48   136  ldr x1, [x0]
0xffff8bd0cc4c   140  stur x1, [x4, #47]
0xffff8bd0cc50   144  tbz w1, #0, #+0x34 (addr 0xffff8bd0cc84)
0xffff8bd0cc54   148  add x5, x4, #0x2f (47)
0xffff8bd0cc58   152  and x1, x1, #0xfffffffffff00000
0xffff8bd0cc5c   156  ldr x1, [x1, #8]
0xffff8bd0cc60   160  tbz w1, #1, #+0x24 (addr 0xffff8bd0cc84)
0xffff8bd0cc64   164  and x1, x4, #0xfffffffffff00000
0xffff8bd0cc68   168  ldr x1, [x1, #8]
0xffff8bd0cc6c   172  tbz w1, #2, #+0x18 (addr 0xffff8bd0cc84)
0xffff8bd0cc70   176  sub csp, jssp, #0x8 (8)
0xffff8bd0cc74   180  str lr, [jssp, #-8]!
0xffff8bd0cc78   184  ldr x16, pc+232 (addr 0x0000ffff8bd0cd60)    ;; code: STUB, RecordWriteStub, minor: 70692
0xffff8bd0cc7c   188  blr x16
0xffff8bd0cc80   192  ldr lr, [jssp], #8
0xffff8bd0cc84   196  movz x1, #0xe748
0xffff8bd0cc88   200  movk x1, #0x2cb8, lsl #16
0xffff8bd0cc8c   204  str x4, [x0]
0xffff8bd0cc90   208  asr x0, x3, #32
0xffff8bd0cc94   212  mov x1, x2
0xffff8bd0cc98   216  add x3, x1, #0xf (15)
0xffff8bd0cc9c   220  str x4, [x3, w0, sxtw #3]
0xffff8bd0cca0   224  add x3, x3, w0, sxtw #3
0xffff8bd0cca4   228  and x4, x4, #0xfffffffffff00000
0xffff8bd0cca8   232  ldr x4, [x4, #8]
0xffff8bd0ccac   236  tbz w4, #1, #+0x24 (addr 0xffff8bd0ccd0)
0xffff8bd0ccb0   240  and x4, x1, #0xfffffffffff00000
0xffff8bd0ccb4   244  ldr x4, [x4, #8]
0xffff8bd0ccb8   248  tbz w4, #2, #+0x18 (addr 0xffff8bd0ccd0)
0xffff8bd0ccbc   252  sub csp, jssp, #0x8 (8)
0xffff8bd0ccc0   256  str lr, [jssp, #-8]!
0xffff8bd0ccc4   260  ldr x16, pc+164 (addr 0x0000ffff8bd0cd68)    ;; code: STUB, RecordWriteStub, minor: 68737
0xffff8bd0ccc8   264  blr x16
0xffff8bd0cccc   268  ldr lr, [jssp], #8
0xffff8bd0ccd0   272  mov x0, x2
0xffff8bd0ccd4   276  ret
0xffff8bd0ccd8   280  sub csp, jssp, #0x10 (16)
0xffff8bd0ccdc   284  stp fp, lr, [jssp, #-16]!
0xffff8bd0cce0   288  movz fp, #0xa00000000
0xffff8bd0cce4   292  sub csp, jssp, #0x8 (8)
0xffff8bd0cce8   296  str fp, [jssp, #-8]!
0xffff8bd0ccec   300  add fp, jssp, #0x8 (8)
0xffff8bd0ccf0   304  movz x4, #0x0
0xffff8bd0ccf4   308  mov x16, lr
0xffff8bd0ccf8   312  ldr x17, pc+120 (addr 0x0000ffff8bd0cd70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0ccfc   316  blr x17
0xffff8bd0cd00   320  movz x0, #0x3800000000
0xffff8bd0cd04   324  movz x10, #0x200000000
0xffff8bd0cd08   328  sub csp, jssp, #0x10 (16)
0xffff8bd0cd0c   332  stp x10, x0, [jssp, #-16]!
0xffff8bd0cd10   336  movz x0, #0x2
0xffff8bd0cd14   340  movz x1, #0x5b88
0xffff8bd0cd18   344  movk x1, #0xe2, lsl #16
0xffff8bd0cd1c   348  ldr x16, pc+92 (addr 0x0000ffff8bd0cd78)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0cd20   352  blr x16
0xffff8bd0cd24   356  str x0, [jssp, #32]
0xffff8bd0cd28   360  ldr x16, pc+88 (addr 0x0000ffff8bd0cd80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0cd2c   364  blr x16
0xffff8bd0cd30   368  ldr lr, [jssp, #16]
0xffff8bd0cd34   372  ldp xzr, fp, [jssp], #24
0xffff8bd0cd38   376  b #-0x158 (addr 0xffff8bd0cbe0)
0xffff8bd0cd3c   380  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff8bd0cd40   384  d63f03e0       constant
0xffff8bd0cd44   388  d503201f       constant
0xffff8bd0cd48   392  5f505d29       constant
0xffff8bd0cd4c   396  00000000       constant
0xffff8bd0cd50   400  8bd0b420       constant
0xffff8bd0cd54   404  0000ffff       constant
0xffff8bd0cd58   408  26c04201       constant
0xffff8bd0cd5c   412  00000000       constant
0xffff8bd0cd60   416  8bd0bc00       constant
0xffff8bd0cd64   420  0000ffff       constant
0xffff8bd0cd68   424  8bd0c3e0       constant
0xffff8bd0cd6c   428  0000ffff       constant
0xffff8bd0cd70   432  8bd06820       constant
0xffff8bd0cd74   436  0000ffff       constant
0xffff8bd0cd78   440  8bd06260       constant
0xffff8bd0cd7c   444  0000ffff       constant
0xffff8bd0cd80   448  8bd068e0       constant
0xffff8bd0cd84   452  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0cd24   356  000 | x2 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 18)
0xffff8bd0cbe0  embedded object  (0x5f505d29 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0cc0c  code target (STUB)  (0xffff8bd0b420)
0xffff8bd0cc38  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd0cc78  code target (STUB)  (0xffff8bd0bc00)
0xffff8bd0ccc4  code target (STUB)  (0xffff8bd0c3e0)
0xffff8bd0ccf8  code target (STUB)  (0xffff8bd06820)
0xffff8bd0cd1c  code target (STUB)  (0xffff8bd06260)
0xffff8bd0cd28  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0cd3c  constant pool (size 76)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff8bd0ce00     0  adr xzr, #+0x40 (addr 0xffff8bd0ce40)
0xffff8bd0ce04     4  adr xzr, #+0x360 (addr 0xffff8bd0d164)
0xffff8bd0ce08     8  ldr x16, pc+1736 (addr 0x0000ffff8bd0d4d0)    ;; external reference (store_buffer_top)
0xffff8bd0ce0c    12  ldr x1, [x16]
0xffff8bd0ce10    16  str x0, [x1], #8
0xffff8bd0ce14    20  str x1, [x16]
0xffff8bd0ce18    24  tst x1, #0x1ffff
0xffff8bd0ce1c    28  b.eq #+0x8 (addr 0xffff8bd0ce24)
0xffff8bd0ce20    32  ret
0xffff8bd0ce24    36  sub csp, jssp, #0x8 (8)
0xffff8bd0ce28    40  str lr, [jssp, #-8]!
0xffff8bd0ce2c    44  ldr x17, pc+1708 (addr 0x0000ffff8bd0d4d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0ce30    48  blr x17
0xffff8bd0ce34    52  ldr lr, [jssp], #8
0xffff8bd0ce38    56  ret
0xffff8bd0ce3c    60  ret
0xffff8bd0ce40    64  sub csp, jssp, #0x10 (16)
0xffff8bd0ce44    68  stp x3, x2, [jssp, #-16]!
0xffff8bd0ce48    72  ldr x1, [x0]
0xffff8bd0ce4c    76  and x16, x1, #0xfffffffffff00000
0xffff8bd0ce50    80  ldr x16, [x16, #8]
0xffff8bd0ce54    84  tst x16, #0x18
0xffff8bd0ce58    88  b.eq #+0x1d8 (addr 0xffff8bd0d030)
0xffff8bd0ce5c    92  and x16, x5, #0xfffffffffff00000
0xffff8bd0ce60    96  ldr x16, [x16, #8]
0xffff8bd0ce64   100  tst x16, #0x18
0xffff8bd0ce68   104  b.ne #+0x1c8 (addr 0xffff8bd0d030)
0xffff8bd0ce6c   108  and x1, x5, #0xfffffffffff00000
0xffff8bd0ce70   112  ldr x2, [x1, #104]
0xffff8bd0ce74   116  subs x2, x2, #0x1 (1)
0xffff8bd0ce78   120  str x2, [x1, #104]
0xffff8bd0ce7c   124  b.mi #+0xc4 (addr 0xffff8bd0cf40)
0xffff8bd0ce80   128  ubfx x16, x5, #8, #12
0xffff8bd0ce84   132  and x1, x5, #0xfffffffffff00000
0xffff8bd0ce88   136  add x1, x1, x16, lsl #2
0xffff8bd0ce8c   140  ubfx x2, x5, #3, #5
0xffff8bd0ce90   144  ldr x1, [x1, #360]
0xffff8bd0ce94   148  lsr x1, x1, x2
0xffff8bd0ce98   152  tbz w1, #0, #+0x8 (addr 0xffff8bd0cea0)
0xffff8bd0ce9c   156  tbnz w1, #1, #+0x3c (addr 0xffff8bd0ced8)
0xffff8bd0cea0   160  ldp x3, x2, [jssp], #16
0xffff8bd0cea4   164  ldr x16, pc+1596 (addr 0x0000ffff8bd0d4e0)    ;; external reference (store_buffer_top)
0xffff8bd0cea8   168  ldr x1, [x16]
0xffff8bd0ceac   172  str x0, [x1], #8
0xffff8bd0ceb0   176  str x1, [x16]
0xffff8bd0ceb4   180  tst x1, #0x1ffff
0xffff8bd0ceb8   184  b.eq #+0x8 (addr 0xffff8bd0cec0)
0xffff8bd0cebc   188  ret
0xffff8bd0cec0   192  sub csp, jssp, #0x8 (8)
0xffff8bd0cec4   196  str lr, [jssp, #-8]!
0xffff8bd0cec8   200  ldr x17, pc+1568 (addr 0x0000ffff8bd0d4e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0cecc   204  blr x17
0xffff8bd0ced0   208  ldr lr, [jssp], #8
0xffff8bd0ced4   212  ret
0xffff8bd0ced8   216  ldr x1, [x0]
0xffff8bd0cedc   220  sub csp, jssp, #0x10 (16)
0xffff8bd0cee0   224  stp x5, x0, [jssp, #-16]!
0xffff8bd0cee4   228  ubfx x16, x1, #8, #12
0xffff8bd0cee8   232  and x2, x1, #0xfffffffffff00000
0xffff8bd0ceec   236  add x2, x2, x16, lsl #2
0xffff8bd0cef0   240  ubfx x5, x1, #3, #5
0xffff8bd0cef4   244  ldr x0, [x2, #360]
0xffff8bd0cef8   248  lsr x0, x0, x5
0xffff8bd0cefc   252  tbz w0, #0, #+0x40 (addr 0xffff8bd0cf3c)
0xffff8bd0cf00   256  ldp x5, x0, [jssp], #16
0xffff8bd0cf04   260  ldp x3, x2, [jssp], #16
0xffff8bd0cf08   264  ldr x16, pc+1512 (addr 0x0000ffff8bd0d4f0)    ;; external reference (store_buffer_top)
0xffff8bd0cf0c   268  ldr x1, [x16]
0xffff8bd0cf10   272  str x0, [x1], #8
0xffff8bd0cf14   276  str x1, [x16]
0xffff8bd0cf18   280  tst x1, #0x1ffff
0xffff8bd0cf1c   284  b.eq #+0x8 (addr 0xffff8bd0cf24)
0xffff8bd0cf20   288  ret
0xffff8bd0cf24   292  sub csp, jssp, #0x8 (8)
0xffff8bd0cf28   296  str lr, [jssp, #-8]!
0xffff8bd0cf2c   300  ldr x17, pc+1484 (addr 0x0000ffff8bd0d4f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0cf30   304  blr x17
0xffff8bd0cf34   308  ldr lr, [jssp], #8
0xffff8bd0cf38   312  ret
0xffff8bd0cf3c   316  ldp x5, x0, [jssp], #16
0xffff8bd0cf40   320  sub csp, jssp, #0x78 (120)
0xffff8bd0cf44   324  stp x14, x15, [jssp, #-32]!
0xffff8bd0cf48   328  stp x18, lr, [jssp, #16]
0xffff8bd0cf4c   332  stp x10, x11, [jssp, #-32]!
0xffff8bd0cf50   336  stp x12, x13, [jssp, #16]
0xffff8bd0cf54   340  stp x6, x7, [jssp, #-32]!
0xffff8bd0cf58   344  stp x8, x9, [jssp, #16]
0xffff8bd0cf5c   348  stp x0, x4, [jssp, #-24]!
0xffff8bd0cf60   352  str x5, [jssp, #16]
0xffff8bd0cf64   356  sub csp, jssp, #0xb0 (176)
0xffff8bd0cf68   360  stp d26, d27, [jssp, #-32]!
0xffff8bd0cf6c   364  stp d28, d29, [jssp, #16]
0xffff8bd0cf70   368  stp d22, d23, [jssp, #-32]!
0xffff8bd0cf74   372  stp d24, d25, [jssp, #16]
0xffff8bd0cf78   376  stp d18, d19, [jssp, #-32]!
0xffff8bd0cf7c   380  stp d20, d21, [jssp, #16]
0xffff8bd0cf80   384  stp d6, d7, [jssp, #-32]!
0xffff8bd0cf84   388  stp d16, d17, [jssp, #16]
0xffff8bd0cf88   392  stp d2, d3, [jssp, #-32]!
0xffff8bd0cf8c   396  stp d4, d5, [jssp, #16]
0xffff8bd0cf90   400  stp d0, d1, [jssp, #-16]!
0xffff8bd0cf94   404  mov x1, x0
0xffff8bd0cf98   408  mov x0, x5
0xffff8bd0cf9c   412  ldr x2, pc+1380 (addr 0x0000ffff8bd0d500)    ;; external reference (isolate)
0xffff8bd0cfa0   416  ldr x16, pc+1384 (addr 0x0000ffff8bd0d508)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0cfa4   420  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0cfa8   424  blr x16
0xffff8bd0cfac   428  ldp d2, d3, [jssp, #16]
0xffff8bd0cfb0   432  ldp d0, d1, [jssp], #32
0xffff8bd0cfb4   436  ldp d6, d7, [jssp, #16]
0xffff8bd0cfb8   440  ldp d4, d5, [jssp], #32
0xffff8bd0cfbc   444  ldp d18, d19, [jssp, #16]
0xffff8bd0cfc0   448  ldp d16, d17, [jssp], #32
0xffff8bd0cfc4   452  ldp d22, d23, [jssp, #16]
0xffff8bd0cfc8   456  ldp d20, d21, [jssp], #32
0xffff8bd0cfcc   460  ldp d26, d27, [jssp, #16]
0xffff8bd0cfd0   464  ldp d24, d25, [jssp], #32
0xffff8bd0cfd4   468  ldp d28, d29, [jssp], #16
0xffff8bd0cfd8   472  ldp x5, x6, [jssp, #16]
0xffff8bd0cfdc   476  ldp x0, x4, [jssp], #32
0xffff8bd0cfe0   480  ldp x9, x10, [jssp, #16]
0xffff8bd0cfe4   484  ldp x7, x8, [jssp], #32
0xffff8bd0cfe8   488  ldp x13, x14, [jssp, #16]
0xffff8bd0cfec   492  ldp x11, x12, [jssp], #32
0xffff8bd0cff0   496  ldr lr, [jssp, #16]
0xffff8bd0cff4   500  ldp x15, x18, [jssp], #24
0xffff8bd0cff8   504  ldp x3, x2, [jssp], #16
0xffff8bd0cffc   508  ldr x16, pc+1300 (addr 0x0000ffff8bd0d510)    ;; external reference (store_buffer_top)
0xffff8bd0d000   512  ldr x1, [x16]
0xffff8bd0d004   516  str x0, [x1], #8
0xffff8bd0d008   520  str x1, [x16]
0xffff8bd0d00c   524  tst x1, #0x1ffff
0xffff8bd0d010   528  b.eq #+0x8 (addr 0xffff8bd0d018)
0xffff8bd0d014   532  ret
0xffff8bd0d018   536  sub csp, jssp, #0x8 (8)
0xffff8bd0d01c   540  str lr, [jssp, #-8]!
0xffff8bd0d020   544  ldr x17, pc+1272 (addr 0x0000ffff8bd0d518)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0d024   548  blr x17
0xffff8bd0d028   552  ldr lr, [jssp], #8
0xffff8bd0d02c   556  ret
0xffff8bd0d030   560  and x1, x5, #0xfffffffffff00000
0xffff8bd0d034   564  ldr x2, [x1, #104]
0xffff8bd0d038   568  subs x2, x2, #0x1 (1)
0xffff8bd0d03c   572  str x2, [x1, #104]
0xffff8bd0d040   576  b.mi #+0x64 (addr 0xffff8bd0d0a4)
0xffff8bd0d044   580  ubfx x16, x5, #8, #12
0xffff8bd0d048   584  and x1, x5, #0xfffffffffff00000
0xffff8bd0d04c   588  add x1, x1, x16, lsl #2
0xffff8bd0d050   592  ubfx x2, x5, #3, #5
0xffff8bd0d054   596  ldr x1, [x1, #360]
0xffff8bd0d058   600  lsr x1, x1, x2
0xffff8bd0d05c   604  tbz w1, #0, #+0x8 (addr 0xffff8bd0d064)
0xffff8bd0d060   608  tbnz w1, #1, #+0xc (addr 0xffff8bd0d06c)
0xffff8bd0d064   612  ldp x3, x2, [jssp], #16
0xffff8bd0d068   616  ret
0xffff8bd0d06c   620  ldr x1, [x0]
0xffff8bd0d070   624  sub csp, jssp, #0x10 (16)
0xffff8bd0d074   628  stp x5, x0, [jssp, #-16]!
0xffff8bd0d078   632  ubfx x16, x1, #8, #12
0xffff8bd0d07c   636  and x2, x1, #0xfffffffffff00000
0xffff8bd0d080   640  add x2, x2, x16, lsl #2
0xffff8bd0d084   644  ubfx x5, x1, #3, #5
0xffff8bd0d088   648  ldr x0, [x2, #360]
0xffff8bd0d08c   652  lsr x0, x0, x5
0xffff8bd0d090   656  tbz w0, #0, #+0x10 (addr 0xffff8bd0d0a0)
0xffff8bd0d094   660  ldp x5, x0, [jssp], #16
0xffff8bd0d098   664  ldp x3, x2, [jssp], #16
0xffff8bd0d09c   668  ret
0xffff8bd0d0a0   672  ldp x5, x0, [jssp], #16
0xffff8bd0d0a4   676  sub csp, jssp, #0x78 (120)
0xffff8bd0d0a8   680  stp x14, x15, [jssp, #-32]!
0xffff8bd0d0ac   684  stp x18, lr, [jssp, #16]
0xffff8bd0d0b0   688  stp x10, x11, [jssp, #-32]!
0xffff8bd0d0b4   692  stp x12, x13, [jssp, #16]
0xffff8bd0d0b8   696  stp x6, x7, [jssp, #-32]!
0xffff8bd0d0bc   700  stp x8, x9, [jssp, #16]
0xffff8bd0d0c0   704  stp x0, x4, [jssp, #-24]!
0xffff8bd0d0c4   708  str x5, [jssp, #16]
0xffff8bd0d0c8   712  sub csp, jssp, #0xb0 (176)
0xffff8bd0d0cc   716  stp d26, d27, [jssp, #-32]!
0xffff8bd0d0d0   720  stp d28, d29, [jssp, #16]
0xffff8bd0d0d4   724  stp d22, d23, [jssp, #-32]!
0xffff8bd0d0d8   728  stp d24, d25, [jssp, #16]
0xffff8bd0d0dc   732  stp d18, d19, [jssp, #-32]!
0xffff8bd0d0e0   736  stp d20, d21, [jssp, #16]
0xffff8bd0d0e4   740  stp d6, d7, [jssp, #-32]!
0xffff8bd0d0e8   744  stp d16, d17, [jssp, #16]
0xffff8bd0d0ec   748  stp d2, d3, [jssp, #-32]!
0xffff8bd0d0f0   752  stp d4, d5, [jssp, #16]
0xffff8bd0d0f4   756  stp d0, d1, [jssp, #-16]!
0xffff8bd0d0f8   760  mov x1, x0
0xffff8bd0d0fc   764  mov x0, x5
0xffff8bd0d100   768  ldr x2, pc+1056 (addr 0x0000ffff8bd0d520)    ;; external reference (isolate)
0xffff8bd0d104   772  ldr x16, pc+1060 (addr 0x0000ffff8bd0d528)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0d108   776  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0d10c   780  blr x16
0xffff8bd0d110   784  ldp d2, d3, [jssp, #16]
0xffff8bd0d114   788  ldp d0, d1, [jssp], #32
0xffff8bd0d118   792  ldp d6, d7, [jssp, #16]
0xffff8bd0d11c   796  ldp d4, d5, [jssp], #32
0xffff8bd0d120   800  ldp d18, d19, [jssp, #16]
0xffff8bd0d124   804  ldp d16, d17, [jssp], #32
0xffff8bd0d128   808  ldp d22, d23, [jssp, #16]
0xffff8bd0d12c   812  ldp d20, d21, [jssp], #32
0xffff8bd0d130   816  ldp d26, d27, [jssp, #16]
0xffff8bd0d134   820  ldp d24, d25, [jssp], #32
0xffff8bd0d138   824  ldp d28, d29, [jssp], #16
0xffff8bd0d13c   828  ldp x5, x6, [jssp, #16]
0xffff8bd0d140   832  ldp x0, x4, [jssp], #32
0xffff8bd0d144   836  ldp x9, x10, [jssp, #16]
0xffff8bd0d148   840  ldp x7, x8, [jssp], #32
0xffff8bd0d14c   844  ldp x13, x14, [jssp, #16]
0xffff8bd0d150   848  ldp x11, x12, [jssp], #32
0xffff8bd0d154   852  ldr lr, [jssp, #16]
0xffff8bd0d158   856  ldp x15, x18, [jssp], #24
0xffff8bd0d15c   860  ldp x3, x2, [jssp], #16
0xffff8bd0d160   864  ret
0xffff8bd0d164   868  sub csp, jssp, #0x10 (16)
0xffff8bd0d168   872  stp x3, x2, [jssp, #-16]!
0xffff8bd0d16c   876  ldr x1, [x0]
0xffff8bd0d170   880  and x16, x1, #0xfffffffffff00000
0xffff8bd0d174   884  ldr x16, [x16, #8]
0xffff8bd0d178   888  tst x16, #0x18
0xffff8bd0d17c   892  b.eq #+0x1f8 (addr 0xffff8bd0d374)
0xffff8bd0d180   896  and x16, x5, #0xfffffffffff00000
0xffff8bd0d184   900  ldr x16, [x16, #8]
0xffff8bd0d188   904  tst x16, #0x18
0xffff8bd0d18c   908  b.ne #+0x1e8 (addr 0xffff8bd0d374)
0xffff8bd0d190   912  and x1, x5, #0xfffffffffff00000
0xffff8bd0d194   916  ldr x2, [x1, #104]
0xffff8bd0d198   920  subs x2, x2, #0x1 (1)
0xffff8bd0d19c   924  str x2, [x1, #104]
0xffff8bd0d1a0   928  b.mi #+0xe4 (addr 0xffff8bd0d284)
0xffff8bd0d1a4   932  ubfx x16, x5, #8, #12
0xffff8bd0d1a8   936  and x1, x5, #0xfffffffffff00000
0xffff8bd0d1ac   940  add x1, x1, x16, lsl #2
0xffff8bd0d1b0   944  ubfx x2, x5, #3, #5
0xffff8bd0d1b4   948  ldr x1, [x1, #360]
0xffff8bd0d1b8   952  lsr x1, x1, x2
0xffff8bd0d1bc   956  tbz w1, #0, #+0x8 (addr 0xffff8bd0d1c4)
0xffff8bd0d1c0   960  tbnz w1, #1, #+0x3c (addr 0xffff8bd0d1fc)
0xffff8bd0d1c4   964  ldp x3, x2, [jssp], #16
0xffff8bd0d1c8   968  ldr x16, pc+872 (addr 0x0000ffff8bd0d530)    ;; external reference (store_buffer_top)
0xffff8bd0d1cc   972  ldr x1, [x16]
0xffff8bd0d1d0   976  str x0, [x1], #8
0xffff8bd0d1d4   980  str x1, [x16]
0xffff8bd0d1d8   984  tst x1, #0x1ffff
0xffff8bd0d1dc   988  b.eq #+0x8 (addr 0xffff8bd0d1e4)
0xffff8bd0d1e0   992  ret
0xffff8bd0d1e4   996  sub csp, jssp, #0x8 (8)
0xffff8bd0d1e8  1000  str lr, [jssp, #-8]!
0xffff8bd0d1ec  1004  ldr x17, pc+844 (addr 0x0000ffff8bd0d538)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0d1f0  1008  blr x17
0xffff8bd0d1f4  1012  ldr lr, [jssp], #8
0xffff8bd0d1f8  1016  ret
0xffff8bd0d1fc  1020  ldr x1, [x0]
0xffff8bd0d200  1024  and x2, x1, #0xfffffffffff00000
0xffff8bd0d204  1028  ldr x2, [x2, #8]
0xffff8bd0d208  1032  tbz w2, #6, #+0x18 (addr 0xffff8bd0d220)
0xffff8bd0d20c  1036  and x2, x5, #0xfffffffffff00000
0xffff8bd0d210  1040  ldr x2, [x2, #8]
0xffff8bd0d214  1044  movz x16, #0x58
0xffff8bd0d218  1048  tst x2, x16
0xffff8bd0d21c  1052  b.eq #+0x68 (addr 0xffff8bd0d284)
0xffff8bd0d220  1056  sub csp, jssp, #0x10 (16)
0xffff8bd0d224  1060  stp x5, x0, [jssp, #-16]!
0xffff8bd0d228  1064  ubfx x16, x1, #8, #12
0xffff8bd0d22c  1068  and x2, x1, #0xfffffffffff00000
0xffff8bd0d230  1072  add x2, x2, x16, lsl #2
0xffff8bd0d234  1076  ubfx x5, x1, #3, #5
0xffff8bd0d238  1080  ldr x0, [x2, #360]
0xffff8bd0d23c  1084  lsr x0, x0, x5
0xffff8bd0d240  1088  tbz w0, #0, #+0x40 (addr 0xffff8bd0d280)
0xffff8bd0d244  1092  ldp x5, x0, [jssp], #16
0xffff8bd0d248  1096  ldp x3, x2, [jssp], #16
0xffff8bd0d24c  1100  ldr x16, pc+756 (addr 0x0000ffff8bd0d540)    ;; external reference (store_buffer_top)
0xffff8bd0d250  1104  ldr x1, [x16]
0xffff8bd0d254  1108  str x0, [x1], #8
0xffff8bd0d258  1112  str x1, [x16]
0xffff8bd0d25c  1116  tst x1, #0x1ffff
0xffff8bd0d260  1120  b.eq #+0x8 (addr 0xffff8bd0d268)
0xffff8bd0d264  1124  ret
0xffff8bd0d268  1128  sub csp, jssp, #0x8 (8)
0xffff8bd0d26c  1132  str lr, [jssp, #-8]!
0xffff8bd0d270  1136  ldr x17, pc+728 (addr 0x0000ffff8bd0d548)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0d274  1140  blr x17
0xffff8bd0d278  1144  ldr lr, [jssp], #8
0xffff8bd0d27c  1148  ret
0xffff8bd0d280  1152  ldp x5, x0, [jssp], #16
0xffff8bd0d284  1156  sub csp, jssp, #0x78 (120)
0xffff8bd0d288  1160  stp x14, x15, [jssp, #-32]!
0xffff8bd0d28c  1164  stp x18, lr, [jssp, #16]
0xffff8bd0d290  1168  stp x10, x11, [jssp, #-32]!
0xffff8bd0d294  1172  stp x12, x13, [jssp, #16]
0xffff8bd0d298  1176  stp x6, x7, [jssp, #-32]!
0xffff8bd0d29c  1180  stp x8, x9, [jssp, #16]
0xffff8bd0d2a0  1184  stp x0, x4, [jssp, #-24]!
0xffff8bd0d2a4  1188  str x5, [jssp, #16]
0xffff8bd0d2a8  1192  sub csp, jssp, #0xb0 (176)
0xffff8bd0d2ac  1196  stp d26, d27, [jssp, #-32]!
0xffff8bd0d2b0  1200  stp d28, d29, [jssp, #16]
0xffff8bd0d2b4  1204  stp d22, d23, [jssp, #-32]!
0xffff8bd0d2b8  1208  stp d24, d25, [jssp, #16]
0xffff8bd0d2bc  1212  stp d18, d19, [jssp, #-32]!
0xffff8bd0d2c0  1216  stp d20, d21, [jssp, #16]
0xffff8bd0d2c4  1220  stp d6, d7, [jssp, #-32]!
0xffff8bd0d2c8  1224  stp d16, d17, [jssp, #16]
0xffff8bd0d2cc  1228  stp d2, d3, [jssp, #-32]!
0xffff8bd0d2d0  1232  stp d4, d5, [jssp, #16]
0xffff8bd0d2d4  1236  stp d0, d1, [jssp, #-16]!
0xffff8bd0d2d8  1240  mov x1, x0
0xffff8bd0d2dc  1244  mov x0, x5
0xffff8bd0d2e0  1248  ldr x2, pc+624 (addr 0x0000ffff8bd0d550)    ;; external reference (isolate)
0xffff8bd0d2e4  1252  ldr x16, pc+628 (addr 0x0000ffff8bd0d558)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0d2e8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0d2ec  1260  blr x16
0xffff8bd0d2f0  1264  ldp d2, d3, [jssp, #16]
0xffff8bd0d2f4  1268  ldp d0, d1, [jssp], #32
0xffff8bd0d2f8  1272  ldp d6, d7, [jssp, #16]
0xffff8bd0d2fc  1276  ldp d4, d5, [jssp], #32
0xffff8bd0d300  1280  ldp d18, d19, [jssp, #16]
0xffff8bd0d304  1284  ldp d16, d17, [jssp], #32
0xffff8bd0d308  1288  ldp d22, d23, [jssp, #16]
0xffff8bd0d30c  1292  ldp d20, d21, [jssp], #32
0xffff8bd0d310  1296  ldp d26, d27, [jssp, #16]
0xffff8bd0d314  1300  ldp d24, d25, [jssp], #32
0xffff8bd0d318  1304  ldp d28, d29, [jssp], #16
0xffff8bd0d31c  1308  ldp x5, x6, [jssp, #16]
0xffff8bd0d320  1312  ldp x0, x4, [jssp], #32
0xffff8bd0d324  1316  ldp x9, x10, [jssp, #16]
0xffff8bd0d328  1320  ldp x7, x8, [jssp], #32
0xffff8bd0d32c  1324  ldp x13, x14, [jssp, #16]
0xffff8bd0d330  1328  ldp x11, x12, [jssp], #32
0xffff8bd0d334  1332  ldr lr, [jssp, #16]
0xffff8bd0d338  1336  ldp x15, x18, [jssp], #24
0xffff8bd0d33c  1340  ldp x3, x2, [jssp], #16
0xffff8bd0d340  1344  ldr x16, pc+544 (addr 0x0000ffff8bd0d560)    ;; external reference (store_buffer_top)
0xffff8bd0d344  1348  ldr x1, [x16]
0xffff8bd0d348  1352  str x0, [x1], #8
0xffff8bd0d34c  1356  str x1, [x16]
0xffff8bd0d350  1360  tst x1, #0x1ffff
0xffff8bd0d354  1364  b.eq #+0x8 (addr 0xffff8bd0d35c)
0xffff8bd0d358  1368  ret
0xffff8bd0d35c  1372  sub csp, jssp, #0x8 (8)
0xffff8bd0d360  1376  str lr, [jssp, #-8]!
0xffff8bd0d364  1380  ldr x17, pc+516 (addr 0x0000ffff8bd0d568)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0d368  1384  blr x17
0xffff8bd0d36c  1388  ldr lr, [jssp], #8
0xffff8bd0d370  1392  ret
0xffff8bd0d374  1396  and x1, x5, #0xfffffffffff00000
0xffff8bd0d378  1400  ldr x2, [x1, #104]
0xffff8bd0d37c  1404  subs x2, x2, #0x1 (1)
0xffff8bd0d380  1408  str x2, [x1, #104]
0xffff8bd0d384  1412  b.mi #+0x84 (addr 0xffff8bd0d408)
0xffff8bd0d388  1416  ubfx x16, x5, #8, #12
0xffff8bd0d38c  1420  and x1, x5, #0xfffffffffff00000
0xffff8bd0d390  1424  add x1, x1, x16, lsl #2
0xffff8bd0d394  1428  ubfx x2, x5, #3, #5
0xffff8bd0d398  1432  ldr x1, [x1, #360]
0xffff8bd0d39c  1436  lsr x1, x1, x2
0xffff8bd0d3a0  1440  tbz w1, #0, #+0x8 (addr 0xffff8bd0d3a8)
0xffff8bd0d3a4  1444  tbnz w1, #1, #+0xc (addr 0xffff8bd0d3b0)
0xffff8bd0d3a8  1448  ldp x3, x2, [jssp], #16
0xffff8bd0d3ac  1452  ret
0xffff8bd0d3b0  1456  ldr x1, [x0]
0xffff8bd0d3b4  1460  and x2, x1, #0xfffffffffff00000
0xffff8bd0d3b8  1464  ldr x2, [x2, #8]
0xffff8bd0d3bc  1468  tbz w2, #6, #+0x18 (addr 0xffff8bd0d3d4)
0xffff8bd0d3c0  1472  and x2, x5, #0xfffffffffff00000
0xffff8bd0d3c4  1476  ldr x2, [x2, #8]
0xffff8bd0d3c8  1480  movz x16, #0x58
0xffff8bd0d3cc  1484  tst x2, x16
0xffff8bd0d3d0  1488  b.eq #+0x38 (addr 0xffff8bd0d408)
0xffff8bd0d3d4  1492  sub csp, jssp, #0x10 (16)
0xffff8bd0d3d8  1496  stp x5, x0, [jssp, #-16]!
0xffff8bd0d3dc  1500  ubfx x16, x1, #8, #12
0xffff8bd0d3e0  1504  and x2, x1, #0xfffffffffff00000
0xffff8bd0d3e4  1508  add x2, x2, x16, lsl #2
0xffff8bd0d3e8  1512  ubfx x5, x1, #3, #5
0xffff8bd0d3ec  1516  ldr x0, [x2, #360]
0xffff8bd0d3f0  1520  lsr x0, x0, x5
0xffff8bd0d3f4  1524  tbz w0, #0, #+0x10 (addr 0xffff8bd0d404)
0xffff8bd0d3f8  1528  ldp x5, x0, [jssp], #16
0xffff8bd0d3fc  1532  ldp x3, x2, [jssp], #16
0xffff8bd0d400  1536  ret
0xffff8bd0d404  1540  ldp x5, x0, [jssp], #16
0xffff8bd0d408  1544  sub csp, jssp, #0x78 (120)
0xffff8bd0d40c  1548  stp x14, x15, [jssp, #-32]!
0xffff8bd0d410  1552  stp x18, lr, [jssp, #16]
0xffff8bd0d414  1556  stp x10, x11, [jssp, #-32]!
0xffff8bd0d418  1560  stp x12, x13, [jssp, #16]
0xffff8bd0d41c  1564  stp x6, x7, [jssp, #-32]!
0xffff8bd0d420  1568  stp x8, x9, [jssp, #16]
0xffff8bd0d424  1572  stp x0, x4, [jssp, #-24]!
0xffff8bd0d428  1576  str x5, [jssp, #16]
0xffff8bd0d42c  1580  sub csp, jssp, #0xb0 (176)
0xffff8bd0d430  1584  stp d26, d27, [jssp, #-32]!
0xffff8bd0d434  1588  stp d28, d29, [jssp, #16]
0xffff8bd0d438  1592  stp d22, d23, [jssp, #-32]!
0xffff8bd0d43c  1596  stp d24, d25, [jssp, #16]
0xffff8bd0d440  1600  stp d18, d19, [jssp, #-32]!
0xffff8bd0d444  1604  stp d20, d21, [jssp, #16]
0xffff8bd0d448  1608  stp d6, d7, [jssp, #-32]!
0xffff8bd0d44c  1612  stp d16, d17, [jssp, #16]
0xffff8bd0d450  1616  stp d2, d3, [jssp, #-32]!
0xffff8bd0d454  1620  stp d4, d5, [jssp, #16]
0xffff8bd0d458  1624  stp d0, d1, [jssp, #-16]!
0xffff8bd0d45c  1628  mov x1, x0
0xffff8bd0d460  1632  mov x0, x5
0xffff8bd0d464  1636  ldr x2, pc+268 (addr 0x0000ffff8bd0d570)    ;; external reference (isolate)
0xffff8bd0d468  1640  ldr x16, pc+272 (addr 0x0000ffff8bd0d578)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0d46c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0d470  1648  blr x16
0xffff8bd0d474  1652  ldp d2, d3, [jssp, #16]
0xffff8bd0d478  1656  ldp d0, d1, [jssp], #32
0xffff8bd0d47c  1660  ldp d6, d7, [jssp, #16]
0xffff8bd0d480  1664  ldp d4, d5, [jssp], #32
0xffff8bd0d484  1668  ldp d18, d19, [jssp, #16]
0xffff8bd0d488  1672  ldp d16, d17, [jssp], #32
0xffff8bd0d48c  1676  ldp d22, d23, [jssp, #16]
0xffff8bd0d490  1680  ldp d20, d21, [jssp], #32
0xffff8bd0d494  1684  ldp d26, d27, [jssp, #16]
0xffff8bd0d498  1688  ldp d24, d25, [jssp], #32
0xffff8bd0d49c  1692  ldp d28, d29, [jssp], #16
0xffff8bd0d4a0  1696  ldp x5, x6, [jssp, #16]
0xffff8bd0d4a4  1700  ldp x0, x4, [jssp], #32
0xffff8bd0d4a8  1704  ldp x9, x10, [jssp, #16]
0xffff8bd0d4ac  1708  ldp x7, x8, [jssp], #32
0xffff8bd0d4b0  1712  ldp x13, x14, [jssp, #16]
0xffff8bd0d4b4  1716  ldp x11, x12, [jssp], #32
0xffff8bd0d4b8  1720  ldr lr, [jssp, #16]
0xffff8bd0d4bc  1724  ldp x15, x18, [jssp], #24
0xffff8bd0d4c0  1728  ldp x3, x2, [jssp], #16
0xffff8bd0d4c4  1732  ret
0xffff8bd0d4c8  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd0d4cc  1740  d63f03e0       constant
0xffff8bd0d4d0  1744  2cb8e8c0       constant
0xffff8bd0d4d4  1748  00000000       constant
0xffff8bd0d4d8  1752  8bd065a0       constant
0xffff8bd0d4dc  1756  0000ffff       constant
0xffff8bd0d4e0  1760  2cb8e8c0       constant
0xffff8bd0d4e4  1764  00000000       constant
0xffff8bd0d4e8  1768  8bd065a0       constant
0xffff8bd0d4ec  1772  0000ffff       constant
0xffff8bd0d4f0  1776  2cb8e8c0       constant
0xffff8bd0d4f4  1780  00000000       constant
0xffff8bd0d4f8  1784  8bd065a0       constant
0xffff8bd0d4fc  1788  0000ffff       constant
0xffff8bd0d500  1792  2cb8d2d0       constant
0xffff8bd0d504  1796  00000000       constant
0xffff8bd0d508  1800  00c2d958       constant
0xffff8bd0d50c  1804  00000000       constant
0xffff8bd0d510  1808  2cb8e8c0       constant
0xffff8bd0d514  1812  00000000       constant
0xffff8bd0d518  1816  8bd065a0       constant
0xffff8bd0d51c  1820  0000ffff       constant
0xffff8bd0d520  1824  2cb8d2d0       constant
0xffff8bd0d524  1828  00000000       constant
0xffff8bd0d528  1832  00c2d958       constant
0xffff8bd0d52c  1836  00000000       constant
0xffff8bd0d530  1840  2cb8e8c0       constant
0xffff8bd0d534  1844  00000000       constant
0xffff8bd0d538  1848  8bd065a0       constant
0xffff8bd0d53c  1852  0000ffff       constant
0xffff8bd0d540  1856  2cb8e8c0       constant
0xffff8bd0d544  1860  00000000       constant
0xffff8bd0d548  1864  8bd065a0       constant
0xffff8bd0d54c  1868  0000ffff       constant
0xffff8bd0d550  1872  2cb8d2d0       constant
0xffff8bd0d554  1876  00000000       constant
0xffff8bd0d558  1880  00c2d958       constant
0xffff8bd0d55c  1884  00000000       constant
0xffff8bd0d560  1888  2cb8e8c0       constant
0xffff8bd0d564  1892  00000000       constant
0xffff8bd0d568  1896  8bd065a0       constant
0xffff8bd0d56c  1900  0000ffff       constant
0xffff8bd0d570  1904  2cb8d2d0       constant
0xffff8bd0d574  1908  00000000       constant
0xffff8bd0d578  1912  00c2d958       constant
0xffff8bd0d57c  1916  00000000       constant


RelocInfo (size = 65)
0xffff8bd0ce08  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0ce2c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0cea4  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0cec8  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0cf08  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0cf2c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0cf9c  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0cfa0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0cffc  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0d020  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0d100  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0d104  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0d1c8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0d1ec  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0d24c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0d270  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0d2e0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0d2e4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0d340  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0d364  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0d464  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0d468  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0d4c8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1904)
0xffff8bd0d5e0     0  adr xzr, #+0x40 (addr 0xffff8bd0d620)
0xffff8bd0d5e4     4  adr xzr, #+0x358 (addr 0xffff8bd0d93c)
0xffff8bd0d5e8     8  ldr x16, pc+1720 (addr 0x0000ffff8bd0dca0)    ;; external reference (store_buffer_top)
0xffff8bd0d5ec    12  ldr x5, [x16]
0xffff8bd0d5f0    16  str x1, [x5], #8
0xffff8bd0d5f4    20  str x5, [x16]
0xffff8bd0d5f8    24  tst x5, #0x1ffff
0xffff8bd0d5fc    28  b.eq #+0x8 (addr 0xffff8bd0d604)
0xffff8bd0d600    32  ret
0xffff8bd0d604    36  sub csp, jssp, #0x8 (8)
0xffff8bd0d608    40  str lr, [jssp, #-8]!
0xffff8bd0d60c    44  ldr x17, pc+1692 (addr 0x0000ffff8bd0dca8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0d610    48  blr x17
0xffff8bd0d614    52  ldr lr, [jssp], #8
0xffff8bd0d618    56  ret
0xffff8bd0d61c    60  ret
0xffff8bd0d620    64  sub csp, jssp, #0x10 (16)
0xffff8bd0d624    68  stp x3, x0, [jssp, #-16]!
0xffff8bd0d628    72  ldr x5, [x1]
0xffff8bd0d62c    76  and x16, x5, #0xfffffffffff00000
0xffff8bd0d630    80  ldr x16, [x16, #8]
0xffff8bd0d634    84  tst x16, #0x18
0xffff8bd0d638    88  b.eq #+0x1d4 (addr 0xffff8bd0d80c)
0xffff8bd0d63c    92  and x16, x2, #0xfffffffffff00000
0xffff8bd0d640    96  ldr x16, [x16, #8]
0xffff8bd0d644   100  tst x16, #0x18
0xffff8bd0d648   104  b.ne #+0x1c4 (addr 0xffff8bd0d80c)
0xffff8bd0d64c   108  and x5, x2, #0xfffffffffff00000
0xffff8bd0d650   112  ldr x0, [x5, #104]
0xffff8bd0d654   116  subs x0, x0, #0x1 (1)
0xffff8bd0d658   120  str x0, [x5, #104]
0xffff8bd0d65c   124  b.mi #+0xc4 (addr 0xffff8bd0d720)
0xffff8bd0d660   128  ubfx x16, x2, #8, #12
0xffff8bd0d664   132  and x5, x2, #0xfffffffffff00000
0xffff8bd0d668   136  add x5, x5, x16, lsl #2
0xffff8bd0d66c   140  ubfx x0, x2, #3, #5
0xffff8bd0d670   144  ldr x5, [x5, #360]
0xffff8bd0d674   148  lsr x5, x5, x0
0xffff8bd0d678   152  tbz w5, #0, #+0x8 (addr 0xffff8bd0d680)
0xffff8bd0d67c   156  tbnz w5, #1, #+0x3c (addr 0xffff8bd0d6b8)
0xffff8bd0d680   160  ldp x3, x0, [jssp], #16
0xffff8bd0d684   164  ldr x16, pc+1580 (addr 0x0000ffff8bd0dcb0)    ;; external reference (store_buffer_top)
0xffff8bd0d688   168  ldr x5, [x16]
0xffff8bd0d68c   172  str x1, [x5], #8
0xffff8bd0d690   176  str x5, [x16]
0xffff8bd0d694   180  tst x5, #0x1ffff
0xffff8bd0d698   184  b.eq #+0x8 (addr 0xffff8bd0d6a0)
0xffff8bd0d69c   188  ret
0xffff8bd0d6a0   192  sub csp, jssp, #0x8 (8)
0xffff8bd0d6a4   196  str lr, [jssp, #-8]!
0xffff8bd0d6a8   200  ldr x17, pc+1552 (addr 0x0000ffff8bd0dcb8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0d6ac   204  blr x17
0xffff8bd0d6b0   208  ldr lr, [jssp], #8
0xffff8bd0d6b4   212  ret
0xffff8bd0d6b8   216  ldr x5, [x1]
0xffff8bd0d6bc   220  sub csp, jssp, #0x10 (16)
0xffff8bd0d6c0   224  stp x2, x1, [jssp, #-16]!
0xffff8bd0d6c4   228  ubfx x16, x5, #8, #12
0xffff8bd0d6c8   232  and x0, x5, #0xfffffffffff00000
0xffff8bd0d6cc   236  add x0, x0, x16, lsl #2
0xffff8bd0d6d0   240  ubfx x2, x5, #3, #5
0xffff8bd0d6d4   244  ldr x1, [x0, #360]
0xffff8bd0d6d8   248  lsr x1, x1, x2
0xffff8bd0d6dc   252  tbz w1, #0, #+0x40 (addr 0xffff8bd0d71c)
0xffff8bd0d6e0   256  ldp x2, x1, [jssp], #16
0xffff8bd0d6e4   260  ldp x3, x0, [jssp], #16
0xffff8bd0d6e8   264  ldr x16, pc+1496 (addr 0x0000ffff8bd0dcc0)    ;; external reference (store_buffer_top)
0xffff8bd0d6ec   268  ldr x5, [x16]
0xffff8bd0d6f0   272  str x1, [x5], #8
0xffff8bd0d6f4   276  str x5, [x16]
0xffff8bd0d6f8   280  tst x5, #0x1ffff
0xffff8bd0d6fc   284  b.eq #+0x8 (addr 0xffff8bd0d704)
0xffff8bd0d700   288  ret
0xffff8bd0d704   292  sub csp, jssp, #0x8 (8)
0xffff8bd0d708   296  str lr, [jssp, #-8]!
0xffff8bd0d70c   300  ldr x17, pc+1468 (addr 0x0000ffff8bd0dcc8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0d710   304  blr x17
0xffff8bd0d714   308  ldr lr, [jssp], #8
0xffff8bd0d718   312  ret
0xffff8bd0d71c   316  ldp x2, x1, [jssp], #16
0xffff8bd0d720   320  sub csp, jssp, #0x78 (120)
0xffff8bd0d724   324  stp x14, x15, [jssp, #-32]!
0xffff8bd0d728   328  stp x18, lr, [jssp, #16]
0xffff8bd0d72c   332  stp x10, x11, [jssp, #-32]!
0xffff8bd0d730   336  stp x12, x13, [jssp, #16]
0xffff8bd0d734   340  stp x6, x7, [jssp, #-32]!
0xffff8bd0d738   344  stp x8, x9, [jssp, #16]
0xffff8bd0d73c   348  stp x1, x2, [jssp, #-24]!
0xffff8bd0d740   352  str x4, [jssp, #16]
0xffff8bd0d744   356  sub csp, jssp, #0xb0 (176)
0xffff8bd0d748   360  stp d26, d27, [jssp, #-32]!
0xffff8bd0d74c   364  stp d28, d29, [jssp, #16]
0xffff8bd0d750   368  stp d22, d23, [jssp, #-32]!
0xffff8bd0d754   372  stp d24, d25, [jssp, #16]
0xffff8bd0d758   376  stp d18, d19, [jssp, #-32]!
0xffff8bd0d75c   380  stp d20, d21, [jssp, #16]
0xffff8bd0d760   384  stp d6, d7, [jssp, #-32]!
0xffff8bd0d764   388  stp d16, d17, [jssp, #16]
0xffff8bd0d768   392  stp d2, d3, [jssp, #-32]!
0xffff8bd0d76c   396  stp d4, d5, [jssp, #16]
0xffff8bd0d770   400  stp d0, d1, [jssp, #-16]!
0xffff8bd0d774   404  mov x0, x2
0xffff8bd0d778   408  ldr x2, pc+1368 (addr 0x0000ffff8bd0dcd0)    ;; external reference (isolate)
0xffff8bd0d77c   412  ldr x16, pc+1372 (addr 0x0000ffff8bd0dcd8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0d780   416  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0d784   420  blr x16
0xffff8bd0d788   424  ldp d2, d3, [jssp, #16]
0xffff8bd0d78c   428  ldp d0, d1, [jssp], #32
0xffff8bd0d790   432  ldp d6, d7, [jssp, #16]
0xffff8bd0d794   436  ldp d4, d5, [jssp], #32
0xffff8bd0d798   440  ldp d18, d19, [jssp, #16]
0xffff8bd0d79c   444  ldp d16, d17, [jssp], #32
0xffff8bd0d7a0   448  ldp d22, d23, [jssp, #16]
0xffff8bd0d7a4   452  ldp d20, d21, [jssp], #32
0xffff8bd0d7a8   456  ldp d26, d27, [jssp, #16]
0xffff8bd0d7ac   460  ldp d24, d25, [jssp], #32
0xffff8bd0d7b0   464  ldp d28, d29, [jssp], #16
0xffff8bd0d7b4   468  ldp x4, x6, [jssp, #16]
0xffff8bd0d7b8   472  ldp x1, x2, [jssp], #32
0xffff8bd0d7bc   476  ldp x9, x10, [jssp, #16]
0xffff8bd0d7c0   480  ldp x7, x8, [jssp], #32
0xffff8bd0d7c4   484  ldp x13, x14, [jssp, #16]
0xffff8bd0d7c8   488  ldp x11, x12, [jssp], #32
0xffff8bd0d7cc   492  ldr lr, [jssp, #16]
0xffff8bd0d7d0   496  ldp x15, x18, [jssp], #24
0xffff8bd0d7d4   500  ldp x3, x0, [jssp], #16
0xffff8bd0d7d8   504  ldr x16, pc+1288 (addr 0x0000ffff8bd0dce0)    ;; external reference (store_buffer_top)
0xffff8bd0d7dc   508  ldr x5, [x16]
0xffff8bd0d7e0   512  str x1, [x5], #8
0xffff8bd0d7e4   516  str x5, [x16]
0xffff8bd0d7e8   520  tst x5, #0x1ffff
0xffff8bd0d7ec   524  b.eq #+0x8 (addr 0xffff8bd0d7f4)
0xffff8bd0d7f0   528  ret
0xffff8bd0d7f4   532  sub csp, jssp, #0x8 (8)
0xffff8bd0d7f8   536  str lr, [jssp, #-8]!
0xffff8bd0d7fc   540  ldr x17, pc+1260 (addr 0x0000ffff8bd0dce8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0d800   544  blr x17
0xffff8bd0d804   548  ldr lr, [jssp], #8
0xffff8bd0d808   552  ret
0xffff8bd0d80c   556  and x5, x2, #0xfffffffffff00000
0xffff8bd0d810   560  ldr x0, [x5, #104]
0xffff8bd0d814   564  subs x0, x0, #0x1 (1)
0xffff8bd0d818   568  str x0, [x5, #104]
0xffff8bd0d81c   572  b.mi #+0x64 (addr 0xffff8bd0d880)
0xffff8bd0d820   576  ubfx x16, x2, #8, #12
0xffff8bd0d824   580  and x5, x2, #0xfffffffffff00000
0xffff8bd0d828   584  add x5, x5, x16, lsl #2
0xffff8bd0d82c   588  ubfx x0, x2, #3, #5
0xffff8bd0d830   592  ldr x5, [x5, #360]
0xffff8bd0d834   596  lsr x5, x5, x0
0xffff8bd0d838   600  tbz w5, #0, #+0x8 (addr 0xffff8bd0d840)
0xffff8bd0d83c   604  tbnz w5, #1, #+0xc (addr 0xffff8bd0d848)
0xffff8bd0d840   608  ldp x3, x0, [jssp], #16
0xffff8bd0d844   612  ret
0xffff8bd0d848   616  ldr x5, [x1]
0xffff8bd0d84c   620  sub csp, jssp, #0x10 (16)
0xffff8bd0d850   624  stp x2, x1, [jssp, #-16]!
0xffff8bd0d854   628  ubfx x16, x5, #8, #12
0xffff8bd0d858   632  and x0, x5, #0xfffffffffff00000
0xffff8bd0d85c   636  add x0, x0, x16, lsl #2
0xffff8bd0d860   640  ubfx x2, x5, #3, #5
0xffff8bd0d864   644  ldr x1, [x0, #360]
0xffff8bd0d868   648  lsr x1, x1, x2
0xffff8bd0d86c   652  tbz w1, #0, #+0x10 (addr 0xffff8bd0d87c)
0xffff8bd0d870   656  ldp x2, x1, [jssp], #16
0xffff8bd0d874   660  ldp x3, x0, [jssp], #16
0xffff8bd0d878   664  ret
0xffff8bd0d87c   668  ldp x2, x1, [jssp], #16
0xffff8bd0d880   672  sub csp, jssp, #0x78 (120)
0xffff8bd0d884   676  stp x14, x15, [jssp, #-32]!
0xffff8bd0d888   680  stp x18, lr, [jssp, #16]
0xffff8bd0d88c   684  stp x10, x11, [jssp, #-32]!
0xffff8bd0d890   688  stp x12, x13, [jssp, #16]
0xffff8bd0d894   692  stp x6, x7, [jssp, #-32]!
0xffff8bd0d898   696  stp x8, x9, [jssp, #16]
0xffff8bd0d89c   700  stp x1, x2, [jssp, #-24]!
0xffff8bd0d8a0   704  str x4, [jssp, #16]
0xffff8bd0d8a4   708  sub csp, jssp, #0xb0 (176)
0xffff8bd0d8a8   712  stp d26, d27, [jssp, #-32]!
0xffff8bd0d8ac   716  stp d28, d29, [jssp, #16]
0xffff8bd0d8b0   720  stp d22, d23, [jssp, #-32]!
0xffff8bd0d8b4   724  stp d24, d25, [jssp, #16]
0xffff8bd0d8b8   728  stp d18, d19, [jssp, #-32]!
0xffff8bd0d8bc   732  stp d20, d21, [jssp, #16]
0xffff8bd0d8c0   736  stp d6, d7, [jssp, #-32]!
0xffff8bd0d8c4   740  stp d16, d17, [jssp, #16]
0xffff8bd0d8c8   744  stp d2, d3, [jssp, #-32]!
0xffff8bd0d8cc   748  stp d4, d5, [jssp, #16]
0xffff8bd0d8d0   752  stp d0, d1, [jssp, #-16]!
0xffff8bd0d8d4   756  mov x0, x2
0xffff8bd0d8d8   760  ldr x2, pc+1048 (addr 0x0000ffff8bd0dcf0)    ;; external reference (isolate)
0xffff8bd0d8dc   764  ldr x16, pc+1052 (addr 0x0000ffff8bd0dcf8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0d8e0   768  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0d8e4   772  blr x16
0xffff8bd0d8e8   776  ldp d2, d3, [jssp, #16]
0xffff8bd0d8ec   780  ldp d0, d1, [jssp], #32
0xffff8bd0d8f0   784  ldp d6, d7, [jssp, #16]
0xffff8bd0d8f4   788  ldp d4, d5, [jssp], #32
0xffff8bd0d8f8   792  ldp d18, d19, [jssp, #16]
0xffff8bd0d8fc   796  ldp d16, d17, [jssp], #32
0xffff8bd0d900   800  ldp d22, d23, [jssp, #16]
0xffff8bd0d904   804  ldp d20, d21, [jssp], #32
0xffff8bd0d908   808  ldp d26, d27, [jssp, #16]
0xffff8bd0d90c   812  ldp d24, d25, [jssp], #32
0xffff8bd0d910   816  ldp d28, d29, [jssp], #16
0xffff8bd0d914   820  ldp x4, x6, [jssp, #16]
0xffff8bd0d918   824  ldp x1, x2, [jssp], #32
0xffff8bd0d91c   828  ldp x9, x10, [jssp, #16]
0xffff8bd0d920   832  ldp x7, x8, [jssp], #32
0xffff8bd0d924   836  ldp x13, x14, [jssp, #16]
0xffff8bd0d928   840  ldp x11, x12, [jssp], #32
0xffff8bd0d92c   844  ldr lr, [jssp, #16]
0xffff8bd0d930   848  ldp x15, x18, [jssp], #24
0xffff8bd0d934   852  ldp x3, x0, [jssp], #16
0xffff8bd0d938   856  ret
0xffff8bd0d93c   860  sub csp, jssp, #0x10 (16)
0xffff8bd0d940   864  stp x3, x0, [jssp, #-16]!
0xffff8bd0d944   868  ldr x5, [x1]
0xffff8bd0d948   872  and x16, x5, #0xfffffffffff00000
0xffff8bd0d94c   876  ldr x16, [x16, #8]
0xffff8bd0d950   880  tst x16, #0x18
0xffff8bd0d954   884  b.eq #+0x1f4 (addr 0xffff8bd0db48)
0xffff8bd0d958   888  and x16, x2, #0xfffffffffff00000
0xffff8bd0d95c   892  ldr x16, [x16, #8]
0xffff8bd0d960   896  tst x16, #0x18
0xffff8bd0d964   900  b.ne #+0x1e4 (addr 0xffff8bd0db48)
0xffff8bd0d968   904  and x5, x2, #0xfffffffffff00000
0xffff8bd0d96c   908  ldr x0, [x5, #104]
0xffff8bd0d970   912  subs x0, x0, #0x1 (1)
0xffff8bd0d974   916  str x0, [x5, #104]
0xffff8bd0d978   920  b.mi #+0xe4 (addr 0xffff8bd0da5c)
0xffff8bd0d97c   924  ubfx x16, x2, #8, #12
0xffff8bd0d980   928  and x5, x2, #0xfffffffffff00000
0xffff8bd0d984   932  add x5, x5, x16, lsl #2
0xffff8bd0d988   936  ubfx x0, x2, #3, #5
0xffff8bd0d98c   940  ldr x5, [x5, #360]
0xffff8bd0d990   944  lsr x5, x5, x0
0xffff8bd0d994   948  tbz w5, #0, #+0x8 (addr 0xffff8bd0d99c)
0xffff8bd0d998   952  tbnz w5, #1, #+0x3c (addr 0xffff8bd0d9d4)
0xffff8bd0d99c   956  ldp x3, x0, [jssp], #16
0xffff8bd0d9a0   960  ldr x16, pc+864 (addr 0x0000ffff8bd0dd00)    ;; external reference (store_buffer_top)
0xffff8bd0d9a4   964  ldr x5, [x16]
0xffff8bd0d9a8   968  str x1, [x5], #8
0xffff8bd0d9ac   972  str x5, [x16]
0xffff8bd0d9b0   976  tst x5, #0x1ffff
0xffff8bd0d9b4   980  b.eq #+0x8 (addr 0xffff8bd0d9bc)
0xffff8bd0d9b8   984  ret
0xffff8bd0d9bc   988  sub csp, jssp, #0x8 (8)
0xffff8bd0d9c0   992  str lr, [jssp, #-8]!
0xffff8bd0d9c4   996  ldr x17, pc+836 (addr 0x0000ffff8bd0dd08)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0d9c8  1000  blr x17
0xffff8bd0d9cc  1004  ldr lr, [jssp], #8
0xffff8bd0d9d0  1008  ret
0xffff8bd0d9d4  1012  ldr x5, [x1]
0xffff8bd0d9d8  1016  and x0, x5, #0xfffffffffff00000
0xffff8bd0d9dc  1020  ldr x0, [x0, #8]
0xffff8bd0d9e0  1024  tbz w0, #6, #+0x18 (addr 0xffff8bd0d9f8)
0xffff8bd0d9e4  1028  and x0, x2, #0xfffffffffff00000
0xffff8bd0d9e8  1032  ldr x0, [x0, #8]
0xffff8bd0d9ec  1036  movz x16, #0x58
0xffff8bd0d9f0  1040  tst x0, x16
0xffff8bd0d9f4  1044  b.eq #+0x68 (addr 0xffff8bd0da5c)
0xffff8bd0d9f8  1048  sub csp, jssp, #0x10 (16)
0xffff8bd0d9fc  1052  stp x2, x1, [jssp, #-16]!
0xffff8bd0da00  1056  ubfx x16, x5, #8, #12
0xffff8bd0da04  1060  and x0, x5, #0xfffffffffff00000
0xffff8bd0da08  1064  add x0, x0, x16, lsl #2
0xffff8bd0da0c  1068  ubfx x2, x5, #3, #5
0xffff8bd0da10  1072  ldr x1, [x0, #360]
0xffff8bd0da14  1076  lsr x1, x1, x2
0xffff8bd0da18  1080  tbz w1, #0, #+0x40 (addr 0xffff8bd0da58)
0xffff8bd0da1c  1084  ldp x2, x1, [jssp], #16
0xffff8bd0da20  1088  ldp x3, x0, [jssp], #16
0xffff8bd0da24  1092  ldr x16, pc+748 (addr 0x0000ffff8bd0dd10)    ;; external reference (store_buffer_top)
0xffff8bd0da28  1096  ldr x5, [x16]
0xffff8bd0da2c  1100  str x1, [x5], #8
0xffff8bd0da30  1104  str x5, [x16]
0xffff8bd0da34  1108  tst x5, #0x1ffff
0xffff8bd0da38  1112  b.eq #+0x8 (addr 0xffff8bd0da40)
0xffff8bd0da3c  1116  ret
0xffff8bd0da40  1120  sub csp, jssp, #0x8 (8)
0xffff8bd0da44  1124  str lr, [jssp, #-8]!
0xffff8bd0da48  1128  ldr x17, pc+720 (addr 0x0000ffff8bd0dd18)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0da4c  1132  blr x17
0xffff8bd0da50  1136  ldr lr, [jssp], #8
0xffff8bd0da54  1140  ret
0xffff8bd0da58  1144  ldp x2, x1, [jssp], #16
0xffff8bd0da5c  1148  sub csp, jssp, #0x78 (120)
0xffff8bd0da60  1152  stp x14, x15, [jssp, #-32]!
0xffff8bd0da64  1156  stp x18, lr, [jssp, #16]
0xffff8bd0da68  1160  stp x10, x11, [jssp, #-32]!
0xffff8bd0da6c  1164  stp x12, x13, [jssp, #16]
0xffff8bd0da70  1168  stp x6, x7, [jssp, #-32]!
0xffff8bd0da74  1172  stp x8, x9, [jssp, #16]
0xffff8bd0da78  1176  stp x1, x2, [jssp, #-24]!
0xffff8bd0da7c  1180  str x4, [jssp, #16]
0xffff8bd0da80  1184  sub csp, jssp, #0xb0 (176)
0xffff8bd0da84  1188  stp d26, d27, [jssp, #-32]!
0xffff8bd0da88  1192  stp d28, d29, [jssp, #16]
0xffff8bd0da8c  1196  stp d22, d23, [jssp, #-32]!
0xffff8bd0da90  1200  stp d24, d25, [jssp, #16]
0xffff8bd0da94  1204  stp d18, d19, [jssp, #-32]!
0xffff8bd0da98  1208  stp d20, d21, [jssp, #16]
0xffff8bd0da9c  1212  stp d6, d7, [jssp, #-32]!
0xffff8bd0daa0  1216  stp d16, d17, [jssp, #16]
0xffff8bd0daa4  1220  stp d2, d3, [jssp, #-32]!
0xffff8bd0daa8  1224  stp d4, d5, [jssp, #16]
0xffff8bd0daac  1228  stp d0, d1, [jssp, #-16]!
0xffff8bd0dab0  1232  mov x0, x2
0xffff8bd0dab4  1236  ldr x2, pc+620 (addr 0x0000ffff8bd0dd20)    ;; external reference (isolate)
0xffff8bd0dab8  1240  ldr x16, pc+624 (addr 0x0000ffff8bd0dd28)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0dabc  1244  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0dac0  1248  blr x16
0xffff8bd0dac4  1252  ldp d2, d3, [jssp, #16]
0xffff8bd0dac8  1256  ldp d0, d1, [jssp], #32
0xffff8bd0dacc  1260  ldp d6, d7, [jssp, #16]
0xffff8bd0dad0  1264  ldp d4, d5, [jssp], #32
0xffff8bd0dad4  1268  ldp d18, d19, [jssp, #16]
0xffff8bd0dad8  1272  ldp d16, d17, [jssp], #32
0xffff8bd0dadc  1276  ldp d22, d23, [jssp, #16]
0xffff8bd0dae0  1280  ldp d20, d21, [jssp], #32
0xffff8bd0dae4  1284  ldp d26, d27, [jssp, #16]
0xffff8bd0dae8  1288  ldp d24, d25, [jssp], #32
0xffff8bd0daec  1292  ldp d28, d29, [jssp], #16
0xffff8bd0daf0  1296  ldp x4, x6, [jssp, #16]
0xffff8bd0daf4  1300  ldp x1, x2, [jssp], #32
0xffff8bd0daf8  1304  ldp x9, x10, [jssp, #16]
0xffff8bd0dafc  1308  ldp x7, x8, [jssp], #32
0xffff8bd0db00  1312  ldp x13, x14, [jssp, #16]
0xffff8bd0db04  1316  ldp x11, x12, [jssp], #32
0xffff8bd0db08  1320  ldr lr, [jssp, #16]
0xffff8bd0db0c  1324  ldp x15, x18, [jssp], #24
0xffff8bd0db10  1328  ldp x3, x0, [jssp], #16
0xffff8bd0db14  1332  ldr x16, pc+540 (addr 0x0000ffff8bd0dd30)    ;; external reference (store_buffer_top)
0xffff8bd0db18  1336  ldr x5, [x16]
0xffff8bd0db1c  1340  str x1, [x5], #8
0xffff8bd0db20  1344  str x5, [x16]
0xffff8bd0db24  1348  tst x5, #0x1ffff
0xffff8bd0db28  1352  b.eq #+0x8 (addr 0xffff8bd0db30)
0xffff8bd0db2c  1356  ret
0xffff8bd0db30  1360  sub csp, jssp, #0x8 (8)
0xffff8bd0db34  1364  str lr, [jssp, #-8]!
0xffff8bd0db38  1368  ldr x17, pc+512 (addr 0x0000ffff8bd0dd38)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd0db3c  1372  blr x17
0xffff8bd0db40  1376  ldr lr, [jssp], #8
0xffff8bd0db44  1380  ret
0xffff8bd0db48  1384  and x5, x2, #0xfffffffffff00000
0xffff8bd0db4c  1388  ldr x0, [x5, #104]
0xffff8bd0db50  1392  subs x0, x0, #0x1 (1)
0xffff8bd0db54  1396  str x0, [x5, #104]
0xffff8bd0db58  1400  b.mi #+0x84 (addr 0xffff8bd0dbdc)
0xffff8bd0db5c  1404  ubfx x16, x2, #8, #12
0xffff8bd0db60  1408  and x5, x2, #0xfffffffffff00000
0xffff8bd0db64  1412  add x5, x5, x16, lsl #2
0xffff8bd0db68  1416  ubfx x0, x2, #3, #5
0xffff8bd0db6c  1420  ldr x5, [x5, #360]
0xffff8bd0db70  1424  lsr x5, x5, x0
0xffff8bd0db74  1428  tbz w5, #0, #+0x8 (addr 0xffff8bd0db7c)
0xffff8bd0db78  1432  tbnz w5, #1, #+0xc (addr 0xffff8bd0db84)
0xffff8bd0db7c  1436  ldp x3, x0, [jssp], #16
0xffff8bd0db80  1440  ret
0xffff8bd0db84  1444  ldr x5, [x1]
0xffff8bd0db88  1448  and x0, x5, #0xfffffffffff00000
0xffff8bd0db8c  1452  ldr x0, [x0, #8]
0xffff8bd0db90  1456  tbz w0, #6, #+0x18 (addr 0xffff8bd0dba8)
0xffff8bd0db94  1460  and x0, x2, #0xfffffffffff00000
0xffff8bd0db98  1464  ldr x0, [x0, #8]
0xffff8bd0db9c  1468  movz x16, #0x58
0xffff8bd0dba0  1472  tst x0, x16
0xffff8bd0dba4  1476  b.eq #+0x38 (addr 0xffff8bd0dbdc)
0xffff8bd0dba8  1480  sub csp, jssp, #0x10 (16)
0xffff8bd0dbac  1484  stp x2, x1, [jssp, #-16]!
0xffff8bd0dbb0  1488  ubfx x16, x5, #8, #12
0xffff8bd0dbb4  1492  and x0, x5, #0xfffffffffff00000
0xffff8bd0dbb8  1496  add x0, x0, x16, lsl #2
0xffff8bd0dbbc  1500  ubfx x2, x5, #3, #5
0xffff8bd0dbc0  1504  ldr x1, [x0, #360]
0xffff8bd0dbc4  1508  lsr x1, x1, x2
0xffff8bd0dbc8  1512  tbz w1, #0, #+0x10 (addr 0xffff8bd0dbd8)
0xffff8bd0dbcc  1516  ldp x2, x1, [jssp], #16
0xffff8bd0dbd0  1520  ldp x3, x0, [jssp], #16
0xffff8bd0dbd4  1524  ret
0xffff8bd0dbd8  1528  ldp x2, x1, [jssp], #16
0xffff8bd0dbdc  1532  sub csp, jssp, #0x78 (120)
0xffff8bd0dbe0  1536  stp x14, x15, [jssp, #-32]!
0xffff8bd0dbe4  1540  stp x18, lr, [jssp, #16]
0xffff8bd0dbe8  1544  stp x10, x11, [jssp, #-32]!
0xffff8bd0dbec  1548  stp x12, x13, [jssp, #16]
0xffff8bd0dbf0  1552  stp x6, x7, [jssp, #-32]!
0xffff8bd0dbf4  1556  stp x8, x9, [jssp, #16]
0xffff8bd0dbf8  1560  stp x1, x2, [jssp, #-24]!
0xffff8bd0dbfc  1564  str x4, [jssp, #16]
0xffff8bd0dc00  1568  sub csp, jssp, #0xb0 (176)
0xffff8bd0dc04  1572  stp d26, d27, [jssp, #-32]!
0xffff8bd0dc08  1576  stp d28, d29, [jssp, #16]
0xffff8bd0dc0c  1580  stp d22, d23, [jssp, #-32]!
0xffff8bd0dc10  1584  stp d24, d25, [jssp, #16]
0xffff8bd0dc14  1588  stp d18, d19, [jssp, #-32]!
0xffff8bd0dc18  1592  stp d20, d21, [jssp, #16]
0xffff8bd0dc1c  1596  stp d6, d7, [jssp, #-32]!
0xffff8bd0dc20  1600  stp d16, d17, [jssp, #16]
0xffff8bd0dc24  1604  stp d2, d3, [jssp, #-32]!
0xffff8bd0dc28  1608  stp d4, d5, [jssp, #16]
0xffff8bd0dc2c  1612  stp d0, d1, [jssp, #-16]!
0xffff8bd0dc30  1616  mov x0, x2
0xffff8bd0dc34  1620  ldr x2, pc+268 (addr 0x0000ffff8bd0dd40)    ;; external reference (isolate)
0xffff8bd0dc38  1624  ldr x16, pc+272 (addr 0x0000ffff8bd0dd48)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd0dc3c  1628  and csp, jssp, #0xfffffffffffffff0
0xffff8bd0dc40  1632  blr x16
0xffff8bd0dc44  1636  ldp d2, d3, [jssp, #16]
0xffff8bd0dc48  1640  ldp d0, d1, [jssp], #32
0xffff8bd0dc4c  1644  ldp d6, d7, [jssp, #16]
0xffff8bd0dc50  1648  ldp d4, d5, [jssp], #32
0xffff8bd0dc54  1652  ldp d18, d19, [jssp, #16]
0xffff8bd0dc58  1656  ldp d16, d17, [jssp], #32
0xffff8bd0dc5c  1660  ldp d22, d23, [jssp, #16]
0xffff8bd0dc60  1664  ldp d20, d21, [jssp], #32
0xffff8bd0dc64  1668  ldp d26, d27, [jssp, #16]
0xffff8bd0dc68  1672  ldp d24, d25, [jssp], #32
0xffff8bd0dc6c  1676  ldp d28, d29, [jssp], #16
0xffff8bd0dc70  1680  ldp x4, x6, [jssp, #16]
0xffff8bd0dc74  1684  ldp x1, x2, [jssp], #32
0xffff8bd0dc78  1688  ldp x9, x10, [jssp, #16]
0xffff8bd0dc7c  1692  ldp x7, x8, [jssp], #32
0xffff8bd0dc80  1696  ldp x13, x14, [jssp, #16]
0xffff8bd0dc84  1700  ldp x11, x12, [jssp], #32
0xffff8bd0dc88  1704  ldr lr, [jssp, #16]
0xffff8bd0dc8c  1708  ldp x15, x18, [jssp], #24
0xffff8bd0dc90  1712  ldp x3, x0, [jssp], #16
0xffff8bd0dc94  1716  ret
0xffff8bd0dc98  1720  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd0dc9c  1724  d63f03e0       constant
0xffff8bd0dca0  1728  2cb8e8c0       constant
0xffff8bd0dca4  1732  00000000       constant
0xffff8bd0dca8  1736  8bd065a0       constant
0xffff8bd0dcac  1740  0000ffff       constant
0xffff8bd0dcb0  1744  2cb8e8c0       constant
0xffff8bd0dcb4  1748  00000000       constant
0xffff8bd0dcb8  1752  8bd065a0       constant
0xffff8bd0dcbc  1756  0000ffff       constant
0xffff8bd0dcc0  1760  2cb8e8c0       constant
0xffff8bd0dcc4  1764  00000000       constant
0xffff8bd0dcc8  1768  8bd065a0       constant
0xffff8bd0dccc  1772  0000ffff       constant
0xffff8bd0dcd0  1776  2cb8d2d0       constant
0xffff8bd0dcd4  1780  00000000       constant
0xffff8bd0dcd8  1784  00c2d958       constant
0xffff8bd0dcdc  1788  00000000       constant
0xffff8bd0dce0  1792  2cb8e8c0       constant
0xffff8bd0dce4  1796  00000000       constant
0xffff8bd0dce8  1800  8bd065a0       constant
0xffff8bd0dcec  1804  0000ffff       constant
0xffff8bd0dcf0  1808  2cb8d2d0       constant
0xffff8bd0dcf4  1812  00000000       constant
0xffff8bd0dcf8  1816  00c2d958       constant
0xffff8bd0dcfc  1820  00000000       constant
0xffff8bd0dd00  1824  2cb8e8c0       constant
0xffff8bd0dd04  1828  00000000       constant
0xffff8bd0dd08  1832  8bd065a0       constant
0xffff8bd0dd0c  1836  0000ffff       constant
0xffff8bd0dd10  1840  2cb8e8c0       constant
0xffff8bd0dd14  1844  00000000       constant
0xffff8bd0dd18  1848  8bd065a0       constant
0xffff8bd0dd1c  1852  0000ffff       constant
0xffff8bd0dd20  1856  2cb8d2d0       constant
0xffff8bd0dd24  1860  00000000       constant
0xffff8bd0dd28  1864  00c2d958       constant
0xffff8bd0dd2c  1868  00000000       constant
0xffff8bd0dd30  1872  2cb8e8c0       constant
0xffff8bd0dd34  1876  00000000       constant
0xffff8bd0dd38  1880  8bd065a0       constant
0xffff8bd0dd3c  1884  0000ffff       constant
0xffff8bd0dd40  1888  2cb8d2d0       constant
0xffff8bd0dd44  1892  00000000       constant
0xffff8bd0dd48  1896  00c2d958       constant
0xffff8bd0dd4c  1900  00000000       constant


RelocInfo (size = 65)
0xffff8bd0d5e8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0d60c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0d684  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0d6a8  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0d6e8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0d70c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0d778  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0d77c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0d7d8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0d7fc  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0d8d8  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0d8dc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0d9a0  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0d9c4  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0da24  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0da48  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0dab4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0dab8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0db14  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd0db38  code target (STUB)  (0xffff8bd065a0)
0xffff8bd0dc34  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd0dc38  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd0dc98  constant pool (size 184)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = CreateWeakCellStub
compiler = crankshaft
Instructions (size = 357)
0xffff8bd0ddc0     0  movz x4, #0xc840
0xffff8bd0ddc4     4  movk x4, #0x2cbb, lsl #16
0xffff8bd0ddc8     8  ldp x5, x0, [x4]
0xffff8bd0ddcc    12  adds x16, x5, #0x18 (24)
0xffff8bd0ddd0    16  ccmp x16, x0, #nzCv, lo
0xffff8bd0ddd4    20  b.hi #+0x98 (addr 0xffff8bd0de6c)
0xffff8bd0ddd8    24  str x16, [x4]
0xffff8bd0dddc    28  orr x5, x5, #0x1
0xffff8bd0dde0    32  ldr x0, pc+248 (addr 0x0000ffff8bd0ded8)    ;; object: 0x5f5058b1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd0dde4    36  stur x0, [x5, #-1]
0xffff8bd0dde8    40  stur x1, [x5, #7]
0xffff8bd0ddec    44  tbz w1, #0, #+0x34 (addr 0xffff8bd0de20)
0xffff8bd0ddf0    48  add x0, x5, #0x7 (7)
0xffff8bd0ddf4    52  and x1, x1, #0xfffffffffff00000
0xffff8bd0ddf8    56  ldr x1, [x1, #8]
0xffff8bd0ddfc    60  tbz w1, #1, #+0x24 (addr 0xffff8bd0de20)
0xffff8bd0de00    64  and x1, x5, #0xfffffffffff00000
0xffff8bd0de04    68  ldr x1, [x1, #8]
0xffff8bd0de08    72  tbz w1, #2, #+0x18 (addr 0xffff8bd0de20)
0xffff8bd0de0c    76  sub csp, jssp, #0x8 (8)
0xffff8bd0de10    80  str lr, [jssp, #-8]!
0xffff8bd0de14    84  ldr x16, pc+204 (addr 0x0000ffff8bd0dee0)    ;; code: STUB, RecordWriteStub, minor: 65573
0xffff8bd0de18    88  blr x16
0xffff8bd0de1c    92  ldr lr, [jssp], #8
0xffff8bd0de20    96  ldr x0, pc+200 (addr 0x0000ffff8bd0dee8)    ;; object: 0x26c04519 <the hole>
0xffff8bd0de24   100  stur x0, [x5, #15]
0xffff8bd0de28   104  asr x0, x3, #32
0xffff8bd0de2c   108  add x1, x2, #0xf (15)
0xffff8bd0de30   112  str x5, [x1, w0, sxtw #3]
0xffff8bd0de34   116  add x1, x1, w0, sxtw #3
0xffff8bd0de38   120  and x5, x5, #0xfffffffffff00000
0xffff8bd0de3c   124  ldr x5, [x5, #8]
0xffff8bd0de40   128  tbz w5, #1, #+0x24 (addr 0xffff8bd0de64)
0xffff8bd0de44   132  and x5, x2, #0xfffffffffff00000
0xffff8bd0de48   136  ldr x5, [x5, #8]
0xffff8bd0de4c   140  tbz w5, #2, #+0x18 (addr 0xffff8bd0de64)
0xffff8bd0de50   144  sub csp, jssp, #0x8 (8)
0xffff8bd0de54   148  str lr, [jssp, #-8]!
0xffff8bd0de58   152  ldr x16, pc+152 (addr 0x0000ffff8bd0def0)    ;; code: STUB, RecordWriteStub, minor: 66722
0xffff8bd0de5c   156  blr x16
0xffff8bd0de60   160  ldr lr, [jssp], #8
0xffff8bd0de64   164  movz x0, #0x0
0xffff8bd0de68   168  ret
0xffff8bd0de6c   172  sub csp, jssp, #0x10 (16)
0xffff8bd0de70   176  stp fp, lr, [jssp, #-16]!
0xffff8bd0de74   180  movz fp, #0xa00000000
0xffff8bd0de78   184  sub csp, jssp, #0x8 (8)
0xffff8bd0de7c   188  str fp, [jssp, #-8]!
0xffff8bd0de80   192  add fp, jssp, #0x8 (8)
0xffff8bd0de84   196  movz x5, #0x0
0xffff8bd0de88   200  mov x16, lr
0xffff8bd0de8c   204  ldr x17, pc+108 (addr 0x0000ffff8bd0def8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0de90   208  blr x17
0xffff8bd0de94   212  movz x0, #0x1800000000
0xffff8bd0de98   216  movz x10, #0x200000000
0xffff8bd0de9c   220  sub csp, jssp, #0x10 (16)
0xffff8bd0dea0   224  stp x10, x0, [jssp, #-16]!
0xffff8bd0dea4   228  movz x0, #0x2
0xffff8bd0dea8   232  movz x1, #0x5b88
0xffff8bd0deac   236  movk x1, #0xe2, lsl #16
0xffff8bd0deb0   240  ldr x16, pc+80 (addr 0x0000ffff8bd0df00)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0deb4   244  blr x16
0xffff8bd0deb8   248  str x0, [jssp, #40]
0xffff8bd0debc   252  ldr x16, pc+76 (addr 0x0000ffff8bd0df08)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0dec0   256  blr x16
0xffff8bd0dec4   260  ldr lr, [jssp, #16]
0xffff8bd0dec8   264  ldp xzr, fp, [jssp], #24
0xffff8bd0decc   268  b #-0xec (addr 0xffff8bd0dde0)
0xffff8bd0ded0   272  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd0ded4   276  d63f03e0       constant
0xffff8bd0ded8   280  5f5058b1       constant
0xffff8bd0dedc   284  00000000       constant
0xffff8bd0dee0   288  8bd0ce00       constant
0xffff8bd0dee4   292  0000ffff       constant
0xffff8bd0dee8   296  26c04519       constant
0xffff8bd0deec   300  00000000       constant
0xffff8bd0def0   304  8bd0d5e0       constant
0xffff8bd0def4   308  0000ffff       constant
0xffff8bd0def8   312  8bd06820       constant
0xffff8bd0defc   316  0000ffff       constant
0xffff8bd0df00   320  8bd06260       constant
0xffff8bd0df04   324  0000ffff       constant
0xffff8bd0df08   328  8bd068e0       constant
0xffff8bd0df0c   332  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0deb8   248  000 | x1 | x2 | x5 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 13)
0xffff8bd0dde0  embedded object  (0x5f5058b1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0de14  code target (STUB)  (0xffff8bd0ce00)
0xffff8bd0de20  embedded object  (0x26c04519 <the hole>)
0xffff8bd0de58  code target (STUB)  (0xffff8bd0d5e0)
0xffff8bd0de8c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0deb0  code target (STUB)  (0xffff8bd06260)
0xffff8bd0debc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0ded0  constant pool (size 64)

--- End code ---
kind = STUB
major_key = CreateWeakCellStub
name = CreateWeakCellStub
compiler = crankshaft
Instructions (size = 357)
0xffff8bd0ddc0     0  movz x4, #0xc840
0xffff8bd0ddc4     4  movk x4, #0x2cbb, lsl #16
0xffff8bd0ddc8     8  ldp x5, x0, [x4]
0xffff8bd0ddcc    12  adds x16, x5, #0x18 (24)
0xffff8bd0ddd0    16  ccmp x16, x0, #nzCv, lo
0xffff8bd0ddd4    20  b.hi #+0x98 (addr 0xffff8bd0de6c)
0xffff8bd0ddd8    24  str x16, [x4]
0xffff8bd0dddc    28  orr x5, x5, #0x1
0xffff8bd0dde0    32  ldr x0, pc+248 (addr 0x0000ffff8bd0ded8)    ;; object: 0x5f5058b1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd0dde4    36  stur x0, [x5, #-1]
0xffff8bd0dde8    40  stur x1, [x5, #7]
0xffff8bd0ddec    44  tbz w1, #0, #+0x34 (addr 0xffff8bd0de20)
0xffff8bd0ddf0    48  add x0, x5, #0x7 (7)
0xffff8bd0ddf4    52  and x1, x1, #0xfffffffffff00000
0xffff8bd0ddf8    56  ldr x1, [x1, #8]
0xffff8bd0ddfc    60  tbz w1, #1, #+0x24 (addr 0xffff8bd0de20)
0xffff8bd0de00    64  and x1, x5, #0xfffffffffff00000
0xffff8bd0de04    68  ldr x1, [x1, #8]
0xffff8bd0de08    72  tbz w1, #2, #+0x18 (addr 0xffff8bd0de20)
0xffff8bd0de0c    76  sub csp, jssp, #0x8 (8)
0xffff8bd0de10    80  str lr, [jssp, #-8]!
0xffff8bd0de14    84  ldr x16, pc+204 (addr 0x0000ffff8bd0dee0)    ;; code: STUB, RecordWriteStub, minor: 65573
0xffff8bd0de18    88  blr x16
0xffff8bd0de1c    92  ldr lr, [jssp], #8
0xffff8bd0de20    96  ldr x0, pc+200 (addr 0x0000ffff8bd0dee8)    ;; object: 0x26c04519 <the hole>
0xffff8bd0de24   100  stur x0, [x5, #15]
0xffff8bd0de28   104  asr x0, x3, #32
0xffff8bd0de2c   108  add x1, x2, #0xf (15)
0xffff8bd0de30   112  str x5, [x1, w0, sxtw #3]
0xffff8bd0de34   116  add x1, x1, w0, sxtw #3
0xffff8bd0de38   120  and x5, x5, #0xfffffffffff00000
0xffff8bd0de3c   124  ldr x5, [x5, #8]
0xffff8bd0de40   128  tbz w5, #1, #+0x24 (addr 0xffff8bd0de64)
0xffff8bd0de44   132  and x5, x2, #0xfffffffffff00000
0xffff8bd0de48   136  ldr x5, [x5, #8]
0xffff8bd0de4c   140  tbz w5, #2, #+0x18 (addr 0xffff8bd0de64)
0xffff8bd0de50   144  sub csp, jssp, #0x8 (8)
0xffff8bd0de54   148  str lr, [jssp, #-8]!
0xffff8bd0de58   152  ldr x16, pc+152 (addr 0x0000ffff8bd0def0)    ;; code: STUB, RecordWriteStub, minor: 66722
0xffff8bd0de5c   156  blr x16
0xffff8bd0de60   160  ldr lr, [jssp], #8
0xffff8bd0de64   164  movz x0, #0x0
0xffff8bd0de68   168  ret
0xffff8bd0de6c   172  sub csp, jssp, #0x10 (16)
0xffff8bd0de70   176  stp fp, lr, [jssp, #-16]!
0xffff8bd0de74   180  movz fp, #0xa00000000
0xffff8bd0de78   184  sub csp, jssp, #0x8 (8)
0xffff8bd0de7c   188  str fp, [jssp, #-8]!
0xffff8bd0de80   192  add fp, jssp, #0x8 (8)
0xffff8bd0de84   196  movz x5, #0x0
0xffff8bd0de88   200  mov x16, lr
0xffff8bd0de8c   204  ldr x17, pc+108 (addr 0x0000ffff8bd0def8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0de90   208  blr x17
0xffff8bd0de94   212  movz x0, #0x1800000000
0xffff8bd0de98   216  movz x10, #0x200000000
0xffff8bd0de9c   220  sub csp, jssp, #0x10 (16)
0xffff8bd0dea0   224  stp x10, x0, [jssp, #-16]!
0xffff8bd0dea4   228  movz x0, #0x2
0xffff8bd0dea8   232  movz x1, #0x5b88
0xffff8bd0deac   236  movk x1, #0xe2, lsl #16
0xffff8bd0deb0   240  ldr x16, pc+80 (addr 0x0000ffff8bd0df00)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0deb4   244  blr x16
0xffff8bd0deb8   248  str x0, [jssp, #40]
0xffff8bd0debc   252  ldr x16, pc+76 (addr 0x0000ffff8bd0df08)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0dec0   256  blr x16
0xffff8bd0dec4   260  ldr lr, [jssp, #16]
0xffff8bd0dec8   264  ldp xzr, fp, [jssp], #24
0xffff8bd0decc   268  b #-0xec (addr 0xffff8bd0dde0)
0xffff8bd0ded0   272  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd0ded4   276  d63f03e0       constant
0xffff8bd0ded8   280  5f5058b1       constant
0xffff8bd0dedc   284  00000000       constant
0xffff8bd0dee0   288  8bd0ce00       constant
0xffff8bd0dee4   292  0000ffff       constant
0xffff8bd0dee8   296  26c04519       constant
0xffff8bd0deec   300  00000000       constant
0xffff8bd0def0   304  8bd0d5e0       constant
0xffff8bd0def4   308  0000ffff       constant
0xffff8bd0def8   312  8bd06820       constant
0xffff8bd0defc   316  0000ffff       constant
0xffff8bd0df00   320  8bd06260       constant
0xffff8bd0df04   324  0000ffff       constant
0xffff8bd0df08   328  8bd068e0       constant
0xffff8bd0df0c   332  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0deb8   248  000 | x1 | x2 | x5 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 13)
0xffff8bd0dde0  embedded object  (0x5f5058b1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd0de14  code target (STUB)  (0xffff8bd0ce00)
0xffff8bd0de20  embedded object  (0x26c04519 <the hole>)
0xffff8bd0de58  code target (STUB)  (0xffff8bd0d5e0)
0xffff8bd0de8c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0deb0  code target (STUB)  (0xffff8bd06260)
0xffff8bd0debc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0ded0  constant pool (size 64)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
name = BinaryOpICStub(BIT_OR:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff8bd0dfa0     0  movz x16, #0xc00000000
0xffff8bd0dfa4     4  sub csp, jssp, #0x10 (16)
0xffff8bd0dfa8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0dfac    12  sub csp, jssp, #0x10 (16)
0xffff8bd0dfb0    16  str x16, [jssp, #-8]!
0xffff8bd0dfb4    20  ldr x17, pc+60 (addr 0x0000ffff8bd0dff0)    ;; object: 0xffff8bd0df41 <Code: BINARY_OP_IC>
0xffff8bd0dfb8    24  sub csp, jssp, #0x10 (16)
0xffff8bd0dfbc    28  str x17, [jssp, #-8]!
0xffff8bd0dfc0    32  add fp, jssp, #0x10 (16)
0xffff8bd0dfc4    36  sub csp, jssp, #0x10 (16)
0xffff8bd0dfc8    40  stp x0, x1, [jssp, #-16]!
0xffff8bd0dfcc    44  movz x0, #0x2
0xffff8bd0dfd0    48  ldr x1, pc+40 (addr 0x0000ffff8bd0dff8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff8bd0dfd4    52  ldr x16, pc+44 (addr 0x0000ffff8bd0e000)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd0dfd8    56  blr x16
0xffff8bd0dfdc    60  mov jssp, fp
0xffff8bd0dfe0    64  ldp fp, lr, [jssp], #16
0xffff8bd0dfe4    68  ret
0xffff8bd0dfe8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0dfec    76  d63f03e0       constant
0xffff8bd0dff0    80  8bd0df41       constant
0xffff8bd0dff4    84  0000ffff       constant
0xffff8bd0dff8    88  00c8e1b8       constant
0xffff8bd0dffc    92  00000000       constant
0xffff8bd0e000    96  8bd06060       constant
0xffff8bd0e004   100  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd0dfb4  embedded object  (0xffff8bd0df41 <Code: BINARY_OP_IC>)
0xffff8bd0dfd0  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff8bd0dfd4  code target (STUB)  (0xffff8bd06060)
0xffff8bd0dfe8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 1
name = BinaryOpICStub(BIT_XOR:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff8bd0e080     0  movz x16, #0xc00000000
0xffff8bd0e084     4  sub csp, jssp, #0x10 (16)
0xffff8bd0e088     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0e08c    12  sub csp, jssp, #0x10 (16)
0xffff8bd0e090    16  str x16, [jssp, #-8]!
0xffff8bd0e094    20  ldr x17, pc+60 (addr 0x0000ffff8bd0e0d0)    ;; object: 0xffff8bd0e021 <Code: BINARY_OP_IC>
0xffff8bd0e098    24  sub csp, jssp, #0x10 (16)
0xffff8bd0e09c    28  str x17, [jssp, #-8]!
0xffff8bd0e0a0    32  add fp, jssp, #0x10 (16)
0xffff8bd0e0a4    36  sub csp, jssp, #0x10 (16)
0xffff8bd0e0a8    40  stp x0, x1, [jssp, #-16]!
0xffff8bd0e0ac    44  movz x0, #0x2
0xffff8bd0e0b0    48  ldr x1, pc+40 (addr 0x0000ffff8bd0e0d8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff8bd0e0b4    52  ldr x16, pc+44 (addr 0x0000ffff8bd0e0e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd0e0b8    56  blr x16
0xffff8bd0e0bc    60  mov jssp, fp
0xffff8bd0e0c0    64  ldp fp, lr, [jssp], #16
0xffff8bd0e0c4    68  ret
0xffff8bd0e0c8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0e0cc    76  d63f03e0       constant
0xffff8bd0e0d0    80  8bd0e021       constant
0xffff8bd0e0d4    84  0000ffff       constant
0xffff8bd0e0d8    88  00c8e1b8       constant
0xffff8bd0e0dc    92  00000000       constant
0xffff8bd0e0e0    96  8bd06060       constant
0xffff8bd0e0e4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd0e094  embedded object  (0xffff8bd0e021 <Code: BINARY_OP_IC>)
0xffff8bd0e0b0  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff8bd0e0b4  code target (STUB)  (0xffff8bd06060)
0xffff8bd0e0c8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 2
name = BinaryOpICStub(BIT_AND:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff8bd0e160     0  movz x16, #0xc00000000
0xffff8bd0e164     4  sub csp, jssp, #0x10 (16)
0xffff8bd0e168     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0e16c    12  sub csp, jssp, #0x10 (16)
0xffff8bd0e170    16  str x16, [jssp, #-8]!
0xffff8bd0e174    20  ldr x17, pc+60 (addr 0x0000ffff8bd0e1b0)    ;; object: 0xffff8bd0e101 <Code: BINARY_OP_IC>
0xffff8bd0e178    24  sub csp, jssp, #0x10 (16)
0xffff8bd0e17c    28  str x17, [jssp, #-8]!
0xffff8bd0e180    32  add fp, jssp, #0x10 (16)
0xffff8bd0e184    36  sub csp, jssp, #0x10 (16)
0xffff8bd0e188    40  stp x0, x1, [jssp, #-16]!
0xffff8bd0e18c    44  movz x0, #0x2
0xffff8bd0e190    48  ldr x1, pc+40 (addr 0x0000ffff8bd0e1b8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff8bd0e194    52  ldr x16, pc+44 (addr 0x0000ffff8bd0e1c0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd0e198    56  blr x16
0xffff8bd0e19c    60  mov jssp, fp
0xffff8bd0e1a0    64  ldp fp, lr, [jssp], #16
0xffff8bd0e1a4    68  ret
0xffff8bd0e1a8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0e1ac    76  d63f03e0       constant
0xffff8bd0e1b0    80  8bd0e101       constant
0xffff8bd0e1b4    84  0000ffff       constant
0xffff8bd0e1b8    88  00c8e1b8       constant
0xffff8bd0e1bc    92  00000000       constant
0xffff8bd0e1c0    96  8bd06060       constant
0xffff8bd0e1c4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd0e174  embedded object  (0xffff8bd0e101 <Code: BINARY_OP_IC>)
0xffff8bd0e190  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff8bd0e194  code target (STUB)  (0xffff8bd06060)
0xffff8bd0e1a8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 3
name = BinaryOpICStub(SHL:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff8bd0e240     0  movz x16, #0xc00000000
0xffff8bd0e244     4  sub csp, jssp, #0x10 (16)
0xffff8bd0e248     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0e24c    12  sub csp, jssp, #0x10 (16)
0xffff8bd0e250    16  str x16, [jssp, #-8]!
0xffff8bd0e254    20  ldr x17, pc+60 (addr 0x0000ffff8bd0e290)    ;; object: 0xffff8bd0e1e1 <Code: BINARY_OP_IC>
0xffff8bd0e258    24  sub csp, jssp, #0x10 (16)
0xffff8bd0e25c    28  str x17, [jssp, #-8]!
0xffff8bd0e260    32  add fp, jssp, #0x10 (16)
0xffff8bd0e264    36  sub csp, jssp, #0x10 (16)
0xffff8bd0e268    40  stp x0, x1, [jssp, #-16]!
0xffff8bd0e26c    44  movz x0, #0x2
0xffff8bd0e270    48  ldr x1, pc+40 (addr 0x0000ffff8bd0e298)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff8bd0e274    52  ldr x16, pc+44 (addr 0x0000ffff8bd0e2a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd0e278    56  blr x16
0xffff8bd0e27c    60  mov jssp, fp
0xffff8bd0e280    64  ldp fp, lr, [jssp], #16
0xffff8bd0e284    68  ret
0xffff8bd0e288    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0e28c    76  d63f03e0       constant
0xffff8bd0e290    80  8bd0e1e1       constant
0xffff8bd0e294    84  0000ffff       constant
0xffff8bd0e298    88  00c8e1b8       constant
0xffff8bd0e29c    92  00000000       constant
0xffff8bd0e2a0    96  8bd06060       constant
0xffff8bd0e2a4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd0e254  embedded object  (0xffff8bd0e1e1 <Code: BINARY_OP_IC>)
0xffff8bd0e270  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff8bd0e274  code target (STUB)  (0xffff8bd06060)
0xffff8bd0e288  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 4
name = BinaryOpICStub(SAR:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff8bd0e320     0  movz x16, #0xc00000000
0xffff8bd0e324     4  sub csp, jssp, #0x10 (16)
0xffff8bd0e328     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0e32c    12  sub csp, jssp, #0x10 (16)
0xffff8bd0e330    16  str x16, [jssp, #-8]!
0xffff8bd0e334    20  ldr x17, pc+60 (addr 0x0000ffff8bd0e370)    ;; object: 0xffff8bd0e2c1 <Code: BINARY_OP_IC>
0xffff8bd0e338    24  sub csp, jssp, #0x10 (16)
0xffff8bd0e33c    28  str x17, [jssp, #-8]!
0xffff8bd0e340    32  add fp, jssp, #0x10 (16)
0xffff8bd0e344    36  sub csp, jssp, #0x10 (16)
0xffff8bd0e348    40  stp x0, x1, [jssp, #-16]!
0xffff8bd0e34c    44  movz x0, #0x2
0xffff8bd0e350    48  ldr x1, pc+40 (addr 0x0000ffff8bd0e378)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff8bd0e354    52  ldr x16, pc+44 (addr 0x0000ffff8bd0e380)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd0e358    56  blr x16
0xffff8bd0e35c    60  mov jssp, fp
0xffff8bd0e360    64  ldp fp, lr, [jssp], #16
0xffff8bd0e364    68  ret
0xffff8bd0e368    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0e36c    76  d63f03e0       constant
0xffff8bd0e370    80  8bd0e2c1       constant
0xffff8bd0e374    84  0000ffff       constant
0xffff8bd0e378    88  00c8e1b8       constant
0xffff8bd0e37c    92  00000000       constant
0xffff8bd0e380    96  8bd06060       constant
0xffff8bd0e384   100  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd0e334  embedded object  (0xffff8bd0e2c1 <Code: BINARY_OP_IC>)
0xffff8bd0e350  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff8bd0e354  code target (STUB)  (0xffff8bd06060)
0xffff8bd0e368  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 5
name = BinaryOpICStub(SHR:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff8bd0e400     0  movz x16, #0xc00000000
0xffff8bd0e404     4  sub csp, jssp, #0x10 (16)
0xffff8bd0e408     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0e40c    12  sub csp, jssp, #0x10 (16)
0xffff8bd0e410    16  str x16, [jssp, #-8]!
0xffff8bd0e414    20  ldr x17, pc+60 (addr 0x0000ffff8bd0e450)    ;; object: 0xffff8bd0e3a1 <Code: BINARY_OP_IC>
0xffff8bd0e418    24  sub csp, jssp, #0x10 (16)
0xffff8bd0e41c    28  str x17, [jssp, #-8]!
0xffff8bd0e420    32  add fp, jssp, #0x10 (16)
0xffff8bd0e424    36  sub csp, jssp, #0x10 (16)
0xffff8bd0e428    40  stp x0, x1, [jssp, #-16]!
0xffff8bd0e42c    44  movz x0, #0x2
0xffff8bd0e430    48  ldr x1, pc+40 (addr 0x0000ffff8bd0e458)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff8bd0e434    52  ldr x16, pc+44 (addr 0x0000ffff8bd0e460)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd0e438    56  blr x16
0xffff8bd0e43c    60  mov jssp, fp
0xffff8bd0e440    64  ldp fp, lr, [jssp], #16
0xffff8bd0e444    68  ret
0xffff8bd0e448    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0e44c    76  d63f03e0       constant
0xffff8bd0e450    80  8bd0e3a1       constant
0xffff8bd0e454    84  0000ffff       constant
0xffff8bd0e458    88  00c8e1b8       constant
0xffff8bd0e45c    92  00000000       constant
0xffff8bd0e460    96  8bd06060       constant
0xffff8bd0e464   100  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd0e414  embedded object  (0xffff8bd0e3a1 <Code: BINARY_OP_IC>)
0xffff8bd0e430  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff8bd0e434  code target (STUB)  (0xffff8bd06060)
0xffff8bd0e448  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 6
name = BinaryOpICStub(ROR:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff8bd0e4e0     0  movz x16, #0xc00000000
0xffff8bd0e4e4     4  sub csp, jssp, #0x10 (16)
0xffff8bd0e4e8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0e4ec    12  sub csp, jssp, #0x10 (16)
0xffff8bd0e4f0    16  str x16, [jssp, #-8]!
0xffff8bd0e4f4    20  ldr x17, pc+60 (addr 0x0000ffff8bd0e530)    ;; object: 0xffff8bd0e481 <Code: BINARY_OP_IC>
0xffff8bd0e4f8    24  sub csp, jssp, #0x10 (16)
0xffff8bd0e4fc    28  str x17, [jssp, #-8]!
0xffff8bd0e500    32  add fp, jssp, #0x10 (16)
0xffff8bd0e504    36  sub csp, jssp, #0x10 (16)
0xffff8bd0e508    40  stp x0, x1, [jssp, #-16]!
0xffff8bd0e50c    44  movz x0, #0x2
0xffff8bd0e510    48  ldr x1, pc+40 (addr 0x0000ffff8bd0e538)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff8bd0e514    52  ldr x16, pc+44 (addr 0x0000ffff8bd0e540)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd0e518    56  blr x16
0xffff8bd0e51c    60  mov jssp, fp
0xffff8bd0e520    64  ldp fp, lr, [jssp], #16
0xffff8bd0e524    68  ret
0xffff8bd0e528    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0e52c    76  d63f03e0       constant
0xffff8bd0e530    80  8bd0e481       constant
0xffff8bd0e534    84  0000ffff       constant
0xffff8bd0e538    88  00c8e1b8       constant
0xffff8bd0e53c    92  00000000       constant
0xffff8bd0e540    96  8bd06060       constant
0xffff8bd0e544   100  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd0e4f4  embedded object  (0xffff8bd0e481 <Code: BINARY_OP_IC>)
0xffff8bd0e510  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff8bd0e514  code target (STUB)  (0xffff8bd06060)
0xffff8bd0e528  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 7
name = BinaryOpICStub(ADD:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff8bd0e5c0     0  movz x16, #0xc00000000
0xffff8bd0e5c4     4  sub csp, jssp, #0x10 (16)
0xffff8bd0e5c8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0e5cc    12  sub csp, jssp, #0x10 (16)
0xffff8bd0e5d0    16  str x16, [jssp, #-8]!
0xffff8bd0e5d4    20  ldr x17, pc+60 (addr 0x0000ffff8bd0e610)    ;; object: 0xffff8bd0e561 <Code: BINARY_OP_IC>
0xffff8bd0e5d8    24  sub csp, jssp, #0x10 (16)
0xffff8bd0e5dc    28  str x17, [jssp, #-8]!
0xffff8bd0e5e0    32  add fp, jssp, #0x10 (16)
0xffff8bd0e5e4    36  sub csp, jssp, #0x10 (16)
0xffff8bd0e5e8    40  stp x0, x1, [jssp, #-16]!
0xffff8bd0e5ec    44  movz x0, #0x2
0xffff8bd0e5f0    48  ldr x1, pc+40 (addr 0x0000ffff8bd0e618)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff8bd0e5f4    52  ldr x16, pc+44 (addr 0x0000ffff8bd0e620)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd0e5f8    56  blr x16
0xffff8bd0e5fc    60  mov jssp, fp
0xffff8bd0e600    64  ldp fp, lr, [jssp], #16
0xffff8bd0e604    68  ret
0xffff8bd0e608    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0e60c    76  d63f03e0       constant
0xffff8bd0e610    80  8bd0e561       constant
0xffff8bd0e614    84  0000ffff       constant
0xffff8bd0e618    88  00c8e1b8       constant
0xffff8bd0e61c    92  00000000       constant
0xffff8bd0e620    96  8bd06060       constant
0xffff8bd0e624   100  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd0e5d4  embedded object  (0xffff8bd0e561 <Code: BINARY_OP_IC>)
0xffff8bd0e5f0  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff8bd0e5f4  code target (STUB)  (0xffff8bd06060)
0xffff8bd0e608  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 8
name = BinaryOpICStub(SUB:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff8bd0e6a0     0  movz x16, #0xc00000000
0xffff8bd0e6a4     4  sub csp, jssp, #0x10 (16)
0xffff8bd0e6a8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0e6ac    12  sub csp, jssp, #0x10 (16)
0xffff8bd0e6b0    16  str x16, [jssp, #-8]!
0xffff8bd0e6b4    20  ldr x17, pc+60 (addr 0x0000ffff8bd0e6f0)    ;; object: 0xffff8bd0e641 <Code: BINARY_OP_IC>
0xffff8bd0e6b8    24  sub csp, jssp, #0x10 (16)
0xffff8bd0e6bc    28  str x17, [jssp, #-8]!
0xffff8bd0e6c0    32  add fp, jssp, #0x10 (16)
0xffff8bd0e6c4    36  sub csp, jssp, #0x10 (16)
0xffff8bd0e6c8    40  stp x0, x1, [jssp, #-16]!
0xffff8bd0e6cc    44  movz x0, #0x2
0xffff8bd0e6d0    48  ldr x1, pc+40 (addr 0x0000ffff8bd0e6f8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff8bd0e6d4    52  ldr x16, pc+44 (addr 0x0000ffff8bd0e700)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd0e6d8    56  blr x16
0xffff8bd0e6dc    60  mov jssp, fp
0xffff8bd0e6e0    64  ldp fp, lr, [jssp], #16
0xffff8bd0e6e4    68  ret
0xffff8bd0e6e8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0e6ec    76  d63f03e0       constant
0xffff8bd0e6f0    80  8bd0e641       constant
0xffff8bd0e6f4    84  0000ffff       constant
0xffff8bd0e6f8    88  00c8e1b8       constant
0xffff8bd0e6fc    92  00000000       constant
0xffff8bd0e700    96  8bd06060       constant
0xffff8bd0e704   100  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd0e6b4  embedded object  (0xffff8bd0e641 <Code: BINARY_OP_IC>)
0xffff8bd0e6d0  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff8bd0e6d4  code target (STUB)  (0xffff8bd06060)
0xffff8bd0e6e8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 9
name = BinaryOpICStub(MUL:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff8bd0e780     0  movz x16, #0xc00000000
0xffff8bd0e784     4  sub csp, jssp, #0x10 (16)
0xffff8bd0e788     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0e78c    12  sub csp, jssp, #0x10 (16)
0xffff8bd0e790    16  str x16, [jssp, #-8]!
0xffff8bd0e794    20  ldr x17, pc+60 (addr 0x0000ffff8bd0e7d0)    ;; object: 0xffff8bd0e721 <Code: BINARY_OP_IC>
0xffff8bd0e798    24  sub csp, jssp, #0x10 (16)
0xffff8bd0e79c    28  str x17, [jssp, #-8]!
0xffff8bd0e7a0    32  add fp, jssp, #0x10 (16)
0xffff8bd0e7a4    36  sub csp, jssp, #0x10 (16)
0xffff8bd0e7a8    40  stp x0, x1, [jssp, #-16]!
0xffff8bd0e7ac    44  movz x0, #0x2
0xffff8bd0e7b0    48  ldr x1, pc+40 (addr 0x0000ffff8bd0e7d8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff8bd0e7b4    52  ldr x16, pc+44 (addr 0x0000ffff8bd0e7e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd0e7b8    56  blr x16
0xffff8bd0e7bc    60  mov jssp, fp
0xffff8bd0e7c0    64  ldp fp, lr, [jssp], #16
0xffff8bd0e7c4    68  ret
0xffff8bd0e7c8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0e7cc    76  d63f03e0       constant
0xffff8bd0e7d0    80  8bd0e721       constant
0xffff8bd0e7d4    84  0000ffff       constant
0xffff8bd0e7d8    88  00c8e1b8       constant
0xffff8bd0e7dc    92  00000000       constant
0xffff8bd0e7e0    96  8bd06060       constant
0xffff8bd0e7e4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd0e794  embedded object  (0xffff8bd0e721 <Code: BINARY_OP_IC>)
0xffff8bd0e7b0  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff8bd0e7b4  code target (STUB)  (0xffff8bd06060)
0xffff8bd0e7c8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 10
name = BinaryOpICStub(DIV:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff8bd0e860     0  movz x16, #0xc00000000
0xffff8bd0e864     4  sub csp, jssp, #0x10 (16)
0xffff8bd0e868     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0e86c    12  sub csp, jssp, #0x10 (16)
0xffff8bd0e870    16  str x16, [jssp, #-8]!
0xffff8bd0e874    20  ldr x17, pc+60 (addr 0x0000ffff8bd0e8b0)    ;; object: 0xffff8bd0e801 <Code: BINARY_OP_IC>
0xffff8bd0e878    24  sub csp, jssp, #0x10 (16)
0xffff8bd0e87c    28  str x17, [jssp, #-8]!
0xffff8bd0e880    32  add fp, jssp, #0x10 (16)
0xffff8bd0e884    36  sub csp, jssp, #0x10 (16)
0xffff8bd0e888    40  stp x0, x1, [jssp, #-16]!
0xffff8bd0e88c    44  movz x0, #0x2
0xffff8bd0e890    48  ldr x1, pc+40 (addr 0x0000ffff8bd0e8b8)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff8bd0e894    52  ldr x16, pc+44 (addr 0x0000ffff8bd0e8c0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd0e898    56  blr x16
0xffff8bd0e89c    60  mov jssp, fp
0xffff8bd0e8a0    64  ldp fp, lr, [jssp], #16
0xffff8bd0e8a4    68  ret
0xffff8bd0e8a8    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0e8ac    76  d63f03e0       constant
0xffff8bd0e8b0    80  8bd0e801       constant
0xffff8bd0e8b4    84  0000ffff       constant
0xffff8bd0e8b8    88  00c8e1b8       constant
0xffff8bd0e8bc    92  00000000       constant
0xffff8bd0e8c0    96  8bd06060       constant
0xffff8bd0e8c4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd0e874  embedded object  (0xffff8bd0e801 <Code: BINARY_OP_IC>)
0xffff8bd0e890  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff8bd0e894  code target (STUB)  (0xffff8bd06060)
0xffff8bd0e8a8  constant pool (size 32)


kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = UNINITIALIZED
extra_ic_state = 11
name = BinaryOpICStub(MOD:None*None->None)
compiler = unknown
Instructions (size = 104)
0xffff8bd0e940     0  movz x16, #0xc00000000
0xffff8bd0e944     4  sub csp, jssp, #0x10 (16)
0xffff8bd0e948     8  stp fp, lr, [jssp, #-16]!
0xffff8bd0e94c    12  sub csp, jssp, #0x10 (16)
0xffff8bd0e950    16  str x16, [jssp, #-8]!
0xffff8bd0e954    20  ldr x17, pc+60 (addr 0x0000ffff8bd0e990)    ;; object: 0xffff8bd0e8e1 <Code: BINARY_OP_IC>
0xffff8bd0e958    24  sub csp, jssp, #0x10 (16)
0xffff8bd0e95c    28  str x17, [jssp, #-8]!
0xffff8bd0e960    32  add fp, jssp, #0x10 (16)
0xffff8bd0e964    36  sub csp, jssp, #0x10 (16)
0xffff8bd0e968    40  stp x0, x1, [jssp, #-16]!
0xffff8bd0e96c    44  movz x0, #0x2
0xffff8bd0e970    48  ldr x1, pc+40 (addr 0x0000ffff8bd0e998)    ;; external reference (Runtime::BinaryOpIC_Miss)
0xffff8bd0e974    52  ldr x16, pc+44 (addr 0x0000ffff8bd0e9a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd0e978    56  blr x16
0xffff8bd0e97c    60  mov jssp, fp
0xffff8bd0e980    64  ldp fp, lr, [jssp], #16
0xffff8bd0e984    68  ret
0xffff8bd0e988    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0e98c    76  d63f03e0       constant
0xffff8bd0e990    80  8bd0e8e1       constant
0xffff8bd0e994    84  0000ffff       constant
0xffff8bd0e998    88  00c8e1b8       constant
0xffff8bd0e99c    92  00000000       constant
0xffff8bd0e9a0    96  8bd06060       constant
0xffff8bd0e9a4   100  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd0e954  embedded object  (0xffff8bd0e8e1 <Code: BINARY_OP_IC>)
0xffff8bd0e970  external reference (Runtime::BinaryOpIC_Miss)  (0xc8e1b8)
0xffff8bd0e974  code target (STUB)  (0xffff8bd06060)
0xffff8bd0e988  constant pool (size 32)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4391
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff8bd0ea20     0  mov x2, x1
0xffff8bd0ea24     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd0ea40)
0xffff8bd0ea28     8  mov x3, x0
0xffff8bd0ea2c    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd0ea50)
0xffff8bd0ea30    16  adds x2, x3, x2
0xffff8bd0ea34    20  b.vs #+0x2c (addr 0xffff8bd0ea60)
0xffff8bd0ea38    24  mov x0, x2
0xffff8bd0ea3c    28  ret
0xffff8bd0ea40    32  movz x16, #0x0
0xffff8bd0ea44    36  sub csp, jssp, #0x10 (16)
0xffff8bd0ea48    40  stp fp, lr, [jssp, #-16]!
0xffff8bd0ea4c    44  bl #+0x24 (addr 0xffff8bd0ea70)
0xffff8bd0ea50    48  movz x16, #0x8
0xffff8bd0ea54    52  sub csp, jssp, #0x10 (16)
0xffff8bd0ea58    56  stp fp, lr, [jssp, #-16]!
0xffff8bd0ea5c    60  bl #+0x14 (addr 0xffff8bd0ea70)
0xffff8bd0ea60    64  movz x16, #0x10
0xffff8bd0ea64    68  sub csp, jssp, #0x10 (16)
0xffff8bd0ea68    72  stp fp, lr, [jssp, #-16]!
0xffff8bd0ea6c    76  bl #+0x4 (addr 0xffff8bd0ea70)
0xffff8bd0ea70    80  movz x17, #0xa00000000
0xffff8bd0ea74    84  sub csp, jssp, #0x10 (16)
0xffff8bd0ea78    88  stp x17, cp, [jssp, #-16]!
0xffff8bd0ea7c    92  add fp, jssp, #0x10 (16)
0xffff8bd0ea80    96  ldr x17, pc+24 (addr 0x0000ffff8bd0ea98)    ;; lazy deoptimization bailout 0
0xffff8bd0ea84   100  add x17, x17, x16
0xffff8bd0ea88   104  br x17
0xffff8bd0ea8c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0ea90   112  d63f03e0       constant
0xffff8bd0ea94   116  d503201f       constant
0xffff8bd0ea98   120  8bb06000       constant
0xffff8bd0ea9c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0ea80  runtime entry
0xffff8bd0ea8c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4391
type = NORMAL
name = BinaryOpICStub(ADD:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff8bd0ea20     0  mov x2, x1
0xffff8bd0ea24     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd0ea40)
0xffff8bd0ea28     8  mov x3, x0
0xffff8bd0ea2c    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd0ea50)
0xffff8bd0ea30    16  adds x2, x3, x2
0xffff8bd0ea34    20  b.vs #+0x2c (addr 0xffff8bd0ea60)
0xffff8bd0ea38    24  mov x0, x2
0xffff8bd0ea3c    28  ret
0xffff8bd0ea40    32  movz x16, #0x0
0xffff8bd0ea44    36  sub csp, jssp, #0x10 (16)
0xffff8bd0ea48    40  stp fp, lr, [jssp, #-16]!
0xffff8bd0ea4c    44  bl #+0x24 (addr 0xffff8bd0ea70)
0xffff8bd0ea50    48  movz x16, #0x8
0xffff8bd0ea54    52  sub csp, jssp, #0x10 (16)
0xffff8bd0ea58    56  stp fp, lr, [jssp, #-16]!
0xffff8bd0ea5c    60  bl #+0x14 (addr 0xffff8bd0ea70)
0xffff8bd0ea60    64  movz x16, #0x10
0xffff8bd0ea64    68  sub csp, jssp, #0x10 (16)
0xffff8bd0ea68    72  stp fp, lr, [jssp, #-16]!
0xffff8bd0ea6c    76  bl #+0x4 (addr 0xffff8bd0ea70)
0xffff8bd0ea70    80  movz x17, #0xa00000000
0xffff8bd0ea74    84  sub csp, jssp, #0x10 (16)
0xffff8bd0ea78    88  stp x17, cp, [jssp, #-16]!
0xffff8bd0ea7c    92  add fp, jssp, #0x10 (16)
0xffff8bd0ea80    96  ldr x17, pc+24 (addr 0x0000ffff8bd0ea98)    ;; lazy deoptimization bailout 0
0xffff8bd0ea84   100  add x17, x17, x16
0xffff8bd0ea88   104  br x17
0xffff8bd0ea8c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0ea90   112  d63f03e0       constant
0xffff8bd0ea94   116  d503201f       constant
0xffff8bd0ea98   120  8bb06000       constant
0xffff8bd0ea9c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0ea80  runtime entry
0xffff8bd0ea8c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4407
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff8bd0eb20     0  mov x2, x1
0xffff8bd0eb24     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd0ebe8)
0xffff8bd0eb28     8  mov x3, x0
0xffff8bd0eb2c    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd0ebf8)
0xffff8bd0eb30    16  scvtf d0, x2, #32
0xffff8bd0eb34    20  scvtf d1, x3, #32
0xffff8bd0eb38    24  fadd d0, d0, d1
0xffff8bd0eb3c    28  movz x1, #0xe2c0
0xffff8bd0eb40    32  movk x1, #0x2cb8, lsl #16
0xffff8bd0eb44    36  ldp x2, x0, [x1]
0xffff8bd0eb48    40  adds x16, x2, #0x10 (16)
0xffff8bd0eb4c    44  ccmp x16, x0, #nzCv, lo
0xffff8bd0eb50    48  b.hi #+0x20 (addr 0xffff8bd0eb70)
0xffff8bd0eb54    52  str x16, [x1]
0xffff8bd0eb58    56  ldr x1, [x26, #120]
0xffff8bd0eb5c    60  str x1, [x2]
0xffff8bd0eb60    64  orr x2, x2, #0x1
0xffff8bd0eb64    68  stur d0, [x2, #7]
0xffff8bd0eb68    72  mov x0, x2
0xffff8bd0eb6c    76  ret
0xffff8bd0eb70    80  sub csp, jssp, #0x10 (16)
0xffff8bd0eb74    84  stp fp, lr, [jssp, #-16]!
0xffff8bd0eb78    88  movz fp, #0xa00000000
0xffff8bd0eb7c    92  sub csp, jssp, #0x8 (8)
0xffff8bd0eb80    96  str fp, [jssp, #-8]!
0xffff8bd0eb84   100  add fp, jssp, #0x8 (8)
0xffff8bd0eb88   104  movz x2, #0x0
0xffff8bd0eb8c   108  mov x16, lr
0xffff8bd0eb90   112  ldr x17, pc+64 (addr 0x0000ffff8bd0ebd0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0eb94   116  blr x17
0xffff8bd0eb98   120  ldur cp, [fp, #-8]
0xffff8bd0eb9c   124  movz x0, #0x0
0xffff8bd0eba0   128  movz x1, #0x4b48
0xffff8bd0eba4   132  movk x1, #0xe4, lsl #16
0xffff8bd0eba8   136  ldr x16, pc+48 (addr 0x0000ffff8bd0ebd8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0ebac   140  blr x16
0xffff8bd0ebb0   144  str x0, [jssp, #16]
0xffff8bd0ebb4   148  ldr x16, pc+44 (addr 0x0000ffff8bd0ebe0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0ebb8   152  blr x16
0xffff8bd0ebbc   156  ldr lr, [jssp, #16]
0xffff8bd0ebc0   160  ldp xzr, fp, [jssp], #24
0xffff8bd0ebc4   164  b #-0x60 (addr 0xffff8bd0eb64)
0xffff8bd0ebc8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0ebcc   172  d63f03e0       constant
0xffff8bd0ebd0   176  8bd06820       constant
0xffff8bd0ebd4   180  0000ffff       constant
0xffff8bd0ebd8   184  8bd06260       constant
0xffff8bd0ebdc   188  0000ffff       constant
0xffff8bd0ebe0   192  8bd068e0       constant
0xffff8bd0ebe4   196  0000ffff       constant
0xffff8bd0ebe8   200  movz x16, #0x0
0xffff8bd0ebec   204  sub csp, jssp, #0x10 (16)
0xffff8bd0ebf0   208  stp fp, lr, [jssp, #-16]!
0xffff8bd0ebf4   212  bl #+0x14 (addr 0xffff8bd0ec08)
0xffff8bd0ebf8   216  movz x16, #0x8
0xffff8bd0ebfc   220  sub csp, jssp, #0x10 (16)
0xffff8bd0ec00   224  stp fp, lr, [jssp, #-16]!
0xffff8bd0ec04   228  bl #+0x4 (addr 0xffff8bd0ec08)
0xffff8bd0ec08   232  movz x17, #0xa00000000
0xffff8bd0ec0c   236  sub csp, jssp, #0x10 (16)
0xffff8bd0ec10   240  stp x17, cp, [jssp, #-16]!
0xffff8bd0ec14   244  add fp, jssp, #0x10 (16)
0xffff8bd0ec18   248  ldr x17, pc+24 (addr 0x0000ffff8bd0ec30)    ;; lazy deoptimization bailout 0
0xffff8bd0ec1c   252  add x17, x17, x16
0xffff8bd0ec20   256  br x17
0xffff8bd0ec24   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0ec28   264  d63f03e0       constant
0xffff8bd0ec2c   268  d503201f       constant
0xffff8bd0ec30   272  8bb06000       constant
0xffff8bd0ec34   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0ebb0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd0eb90  code target (STUB)  (0xffff8bd06820)
0xffff8bd0eba8  code target (STUB)  (0xffff8bd06260)
0xffff8bd0ebb4  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0ebc8  constant pool (size 32)
0xffff8bd0ec18  runtime entry
0xffff8bd0ec24  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4407
type = NORMAL
name = BinaryOpICStub(ADD:Int32*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff8bd0eb20     0  mov x2, x1
0xffff8bd0eb24     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd0ebe8)
0xffff8bd0eb28     8  mov x3, x0
0xffff8bd0eb2c    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd0ebf8)
0xffff8bd0eb30    16  scvtf d0, x2, #32
0xffff8bd0eb34    20  scvtf d1, x3, #32
0xffff8bd0eb38    24  fadd d0, d0, d1
0xffff8bd0eb3c    28  movz x1, #0xe2c0
0xffff8bd0eb40    32  movk x1, #0x2cb8, lsl #16
0xffff8bd0eb44    36  ldp x2, x0, [x1]
0xffff8bd0eb48    40  adds x16, x2, #0x10 (16)
0xffff8bd0eb4c    44  ccmp x16, x0, #nzCv, lo
0xffff8bd0eb50    48  b.hi #+0x20 (addr 0xffff8bd0eb70)
0xffff8bd0eb54    52  str x16, [x1]
0xffff8bd0eb58    56  ldr x1, [x26, #120]
0xffff8bd0eb5c    60  str x1, [x2]
0xffff8bd0eb60    64  orr x2, x2, #0x1
0xffff8bd0eb64    68  stur d0, [x2, #7]
0xffff8bd0eb68    72  mov x0, x2
0xffff8bd0eb6c    76  ret
0xffff8bd0eb70    80  sub csp, jssp, #0x10 (16)
0xffff8bd0eb74    84  stp fp, lr, [jssp, #-16]!
0xffff8bd0eb78    88  movz fp, #0xa00000000
0xffff8bd0eb7c    92  sub csp, jssp, #0x8 (8)
0xffff8bd0eb80    96  str fp, [jssp, #-8]!
0xffff8bd0eb84   100  add fp, jssp, #0x8 (8)
0xffff8bd0eb88   104  movz x2, #0x0
0xffff8bd0eb8c   108  mov x16, lr
0xffff8bd0eb90   112  ldr x17, pc+64 (addr 0x0000ffff8bd0ebd0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0eb94   116  blr x17
0xffff8bd0eb98   120  ldur cp, [fp, #-8]
0xffff8bd0eb9c   124  movz x0, #0x0
0xffff8bd0eba0   128  movz x1, #0x4b48
0xffff8bd0eba4   132  movk x1, #0xe4, lsl #16
0xffff8bd0eba8   136  ldr x16, pc+48 (addr 0x0000ffff8bd0ebd8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0ebac   140  blr x16
0xffff8bd0ebb0   144  str x0, [jssp, #16]
0xffff8bd0ebb4   148  ldr x16, pc+44 (addr 0x0000ffff8bd0ebe0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0ebb8   152  blr x16
0xffff8bd0ebbc   156  ldr lr, [jssp, #16]
0xffff8bd0ebc0   160  ldp xzr, fp, [jssp], #24
0xffff8bd0ebc4   164  b #-0x60 (addr 0xffff8bd0eb64)
0xffff8bd0ebc8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0ebcc   172  d63f03e0       constant
0xffff8bd0ebd0   176  8bd06820       constant
0xffff8bd0ebd4   180  0000ffff       constant
0xffff8bd0ebd8   184  8bd06260       constant
0xffff8bd0ebdc   188  0000ffff       constant
0xffff8bd0ebe0   192  8bd068e0       constant
0xffff8bd0ebe4   196  0000ffff       constant
0xffff8bd0ebe8   200  movz x16, #0x0
0xffff8bd0ebec   204  sub csp, jssp, #0x10 (16)
0xffff8bd0ebf0   208  stp fp, lr, [jssp, #-16]!
0xffff8bd0ebf4   212  bl #+0x14 (addr 0xffff8bd0ec08)
0xffff8bd0ebf8   216  movz x16, #0x8
0xffff8bd0ebfc   220  sub csp, jssp, #0x10 (16)
0xffff8bd0ec00   224  stp fp, lr, [jssp, #-16]!
0xffff8bd0ec04   228  bl #+0x4 (addr 0xffff8bd0ec08)
0xffff8bd0ec08   232  movz x17, #0xa00000000
0xffff8bd0ec0c   236  sub csp, jssp, #0x10 (16)
0xffff8bd0ec10   240  stp x17, cp, [jssp, #-16]!
0xffff8bd0ec14   244  add fp, jssp, #0x10 (16)
0xffff8bd0ec18   248  ldr x17, pc+24 (addr 0x0000ffff8bd0ec30)    ;; lazy deoptimization bailout 0
0xffff8bd0ec1c   252  add x17, x17, x16
0xffff8bd0ec20   256  br x17
0xffff8bd0ec24   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0ec28   264  d63f03e0       constant
0xffff8bd0ec2c   268  d503201f       constant
0xffff8bd0ec30   272  8bb06000       constant
0xffff8bd0ec34   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0ebb0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd0eb90  code target (STUB)  (0xffff8bd06820)
0xffff8bd0eba8  code target (STUB)  (0xffff8bd06260)
0xffff8bd0ebb4  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0ebc8  constant pool (size 32)
0xffff8bd0ec18  runtime entry
0xffff8bd0ec24  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6455
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd0ecc0     0  mov x2, x1
0xffff8bd0ecc4     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd0edb8)
0xffff8bd0ecc8     8  tbz w0, #0, #+0x34 (addr 0xffff8bd0ecfc)
0xffff8bd0eccc    12  ldur x16, [x0, #-1]
0xffff8bd0ecd0    16  ldr x17, [x26, #120]
0xffff8bd0ecd4    20  cmp x16, x17
0xffff8bd0ecd8    24  b.ne #+0xc (addr 0xffff8bd0ece4)
0xffff8bd0ecdc    28  ldur d0, [x0, #7]
0xffff8bd0ece0    32  b #+0x20 (addr 0xffff8bd0ed00)
0xffff8bd0ece4    36  ldr x16, [x26, #40]
0xffff8bd0ece8    40  cmp x0, x16
0xffff8bd0ecec    44  b.ne #+0xdc (addr 0xffff8bd0edc8)
0xffff8bd0ecf0    48  ldr x3, [x26, #928]
0xffff8bd0ecf4    52  ldur d0, [x3, #7]
0xffff8bd0ecf8    56  b #+0x8 (addr 0xffff8bd0ed00)
0xffff8bd0ecfc    60  scvtf d0, x0, #32
0xffff8bd0ed00    64  scvtf d1, x2, #32
0xffff8bd0ed04    68  fadd d0, d1, d0
0xffff8bd0ed08    72  movz x1, #0xe2c0
0xffff8bd0ed0c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd0ed10    80  ldp x2, x0, [x1]
0xffff8bd0ed14    84  adds x16, x2, #0x10 (16)
0xffff8bd0ed18    88  ccmp x16, x0, #nzCv, lo
0xffff8bd0ed1c    92  b.hi #+0x20 (addr 0xffff8bd0ed3c)
0xffff8bd0ed20    96  str x16, [x1]
0xffff8bd0ed24   100  ldr x1, [x26, #120]
0xffff8bd0ed28   104  str x1, [x2]
0xffff8bd0ed2c   108  orr x2, x2, #0x1
0xffff8bd0ed30   112  stur d0, [x2, #7]
0xffff8bd0ed34   116  mov x0, x2
0xffff8bd0ed38   120  ret
0xffff8bd0ed3c   124  sub csp, jssp, #0x10 (16)
0xffff8bd0ed40   128  stp fp, lr, [jssp, #-16]!
0xffff8bd0ed44   132  movz fp, #0xa00000000
0xffff8bd0ed48   136  sub csp, jssp, #0x8 (8)
0xffff8bd0ed4c   140  str fp, [jssp, #-8]!
0xffff8bd0ed50   144  add fp, jssp, #0x8 (8)
0xffff8bd0ed54   148  movz x2, #0x0
0xffff8bd0ed58   152  mov x16, lr
0xffff8bd0ed5c   156  ldr x17, pc+68 (addr 0x0000ffff8bd0eda0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0ed60   160  blr x17
0xffff8bd0ed64   164  ldur cp, [fp, #-8]
0xffff8bd0ed68   168  movz x0, #0x0
0xffff8bd0ed6c   172  movz x1, #0x4b48
0xffff8bd0ed70   176  movk x1, #0xe4, lsl #16
0xffff8bd0ed74   180  ldr x16, pc+52 (addr 0x0000ffff8bd0eda8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0ed78   184  blr x16
0xffff8bd0ed7c   188  str x0, [jssp, #16]
0xffff8bd0ed80   192  ldr x16, pc+48 (addr 0x0000ffff8bd0edb0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0ed84   196  blr x16
0xffff8bd0ed88   200  ldr lr, [jssp, #16]
0xffff8bd0ed8c   204  ldp xzr, fp, [jssp], #24
0xffff8bd0ed90   208  b #-0x60 (addr 0xffff8bd0ed30)
0xffff8bd0ed94   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd0ed98   216  d63f03e0       constant
0xffff8bd0ed9c   220  d503201f       constant
0xffff8bd0eda0   224  8bd06820       constant
0xffff8bd0eda4   228  0000ffff       constant
0xffff8bd0eda8   232  8bd06260       constant
0xffff8bd0edac   236  0000ffff       constant
0xffff8bd0edb0   240  8bd068e0       constant
0xffff8bd0edb4   244  0000ffff       constant
0xffff8bd0edb8   248  movz x16, #0x0
0xffff8bd0edbc   252  sub csp, jssp, #0x10 (16)
0xffff8bd0edc0   256  stp fp, lr, [jssp, #-16]!
0xffff8bd0edc4   260  bl #+0x14 (addr 0xffff8bd0edd8)
0xffff8bd0edc8   264  movz x16, #0x8
0xffff8bd0edcc   268  sub csp, jssp, #0x10 (16)
0xffff8bd0edd0   272  stp fp, lr, [jssp, #-16]!
0xffff8bd0edd4   276  bl #+0x4 (addr 0xffff8bd0edd8)
0xffff8bd0edd8   280  movz x17, #0xa00000000
0xffff8bd0eddc   284  sub csp, jssp, #0x10 (16)
0xffff8bd0ede0   288  stp x17, cp, [jssp, #-16]!
0xffff8bd0ede4   292  add fp, jssp, #0x10 (16)
0xffff8bd0ede8   296  ldr x17, pc+24 (addr 0x0000ffff8bd0ee00)    ;; lazy deoptimization bailout 0
0xffff8bd0edec   300  add x17, x17, x16
0xffff8bd0edf0   304  br x17
0xffff8bd0edf4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0edf8   312  d63f03e0       constant
0xffff8bd0edfc   316  d503201f       constant
0xffff8bd0ee00   320  8bb06000       constant
0xffff8bd0ee04   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0ed7c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd0ed5c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0ed74  code target (STUB)  (0xffff8bd06260)
0xffff8bd0ed80  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0ed94  constant pool (size 36)
0xffff8bd0ede8  runtime entry
0xffff8bd0edf4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6455
type = NORMAL
name = BinaryOpICStub(ADD:Int32*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd0ecc0     0  mov x2, x1
0xffff8bd0ecc4     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd0edb8)
0xffff8bd0ecc8     8  tbz w0, #0, #+0x34 (addr 0xffff8bd0ecfc)
0xffff8bd0eccc    12  ldur x16, [x0, #-1]
0xffff8bd0ecd0    16  ldr x17, [x26, #120]
0xffff8bd0ecd4    20  cmp x16, x17
0xffff8bd0ecd8    24  b.ne #+0xc (addr 0xffff8bd0ece4)
0xffff8bd0ecdc    28  ldur d0, [x0, #7]
0xffff8bd0ece0    32  b #+0x20 (addr 0xffff8bd0ed00)
0xffff8bd0ece4    36  ldr x16, [x26, #40]
0xffff8bd0ece8    40  cmp x0, x16
0xffff8bd0ecec    44  b.ne #+0xdc (addr 0xffff8bd0edc8)
0xffff8bd0ecf0    48  ldr x3, [x26, #928]
0xffff8bd0ecf4    52  ldur d0, [x3, #7]
0xffff8bd0ecf8    56  b #+0x8 (addr 0xffff8bd0ed00)
0xffff8bd0ecfc    60  scvtf d0, x0, #32
0xffff8bd0ed00    64  scvtf d1, x2, #32
0xffff8bd0ed04    68  fadd d0, d1, d0
0xffff8bd0ed08    72  movz x1, #0xe2c0
0xffff8bd0ed0c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd0ed10    80  ldp x2, x0, [x1]
0xffff8bd0ed14    84  adds x16, x2, #0x10 (16)
0xffff8bd0ed18    88  ccmp x16, x0, #nzCv, lo
0xffff8bd0ed1c    92  b.hi #+0x20 (addr 0xffff8bd0ed3c)
0xffff8bd0ed20    96  str x16, [x1]
0xffff8bd0ed24   100  ldr x1, [x26, #120]
0xffff8bd0ed28   104  str x1, [x2]
0xffff8bd0ed2c   108  orr x2, x2, #0x1
0xffff8bd0ed30   112  stur d0, [x2, #7]
0xffff8bd0ed34   116  mov x0, x2
0xffff8bd0ed38   120  ret
0xffff8bd0ed3c   124  sub csp, jssp, #0x10 (16)
0xffff8bd0ed40   128  stp fp, lr, [jssp, #-16]!
0xffff8bd0ed44   132  movz fp, #0xa00000000
0xffff8bd0ed48   136  sub csp, jssp, #0x8 (8)
0xffff8bd0ed4c   140  str fp, [jssp, #-8]!
0xffff8bd0ed50   144  add fp, jssp, #0x8 (8)
0xffff8bd0ed54   148  movz x2, #0x0
0xffff8bd0ed58   152  mov x16, lr
0xffff8bd0ed5c   156  ldr x17, pc+68 (addr 0x0000ffff8bd0eda0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0ed60   160  blr x17
0xffff8bd0ed64   164  ldur cp, [fp, #-8]
0xffff8bd0ed68   168  movz x0, #0x0
0xffff8bd0ed6c   172  movz x1, #0x4b48
0xffff8bd0ed70   176  movk x1, #0xe4, lsl #16
0xffff8bd0ed74   180  ldr x16, pc+52 (addr 0x0000ffff8bd0eda8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0ed78   184  blr x16
0xffff8bd0ed7c   188  str x0, [jssp, #16]
0xffff8bd0ed80   192  ldr x16, pc+48 (addr 0x0000ffff8bd0edb0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0ed84   196  blr x16
0xffff8bd0ed88   200  ldr lr, [jssp, #16]
0xffff8bd0ed8c   204  ldp xzr, fp, [jssp], #24
0xffff8bd0ed90   208  b #-0x60 (addr 0xffff8bd0ed30)
0xffff8bd0ed94   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd0ed98   216  d63f03e0       constant
0xffff8bd0ed9c   220  d503201f       constant
0xffff8bd0eda0   224  8bd06820       constant
0xffff8bd0eda4   228  0000ffff       constant
0xffff8bd0eda8   232  8bd06260       constant
0xffff8bd0edac   236  0000ffff       constant
0xffff8bd0edb0   240  8bd068e0       constant
0xffff8bd0edb4   244  0000ffff       constant
0xffff8bd0edb8   248  movz x16, #0x0
0xffff8bd0edbc   252  sub csp, jssp, #0x10 (16)
0xffff8bd0edc0   256  stp fp, lr, [jssp, #-16]!
0xffff8bd0edc4   260  bl #+0x14 (addr 0xffff8bd0edd8)
0xffff8bd0edc8   264  movz x16, #0x8
0xffff8bd0edcc   268  sub csp, jssp, #0x10 (16)
0xffff8bd0edd0   272  stp fp, lr, [jssp, #-16]!
0xffff8bd0edd4   276  bl #+0x4 (addr 0xffff8bd0edd8)
0xffff8bd0edd8   280  movz x17, #0xa00000000
0xffff8bd0eddc   284  sub csp, jssp, #0x10 (16)
0xffff8bd0ede0   288  stp x17, cp, [jssp, #-16]!
0xffff8bd0ede4   292  add fp, jssp, #0x10 (16)
0xffff8bd0ede8   296  ldr x17, pc+24 (addr 0x0000ffff8bd0ee00)    ;; lazy deoptimization bailout 0
0xffff8bd0edec   300  add x17, x17, x16
0xffff8bd0edf0   304  br x17
0xffff8bd0edf4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0edf8   312  d63f03e0       constant
0xffff8bd0edfc   316  d503201f       constant
0xffff8bd0ee00   320  8bb06000       constant
0xffff8bd0ee04   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0ed7c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd0ed5c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0ed74  code target (STUB)  (0xffff8bd06260)
0xffff8bd0ed80  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0ed94  constant pool (size 36)
0xffff8bd0ede8  runtime entry
0xffff8bd0edf4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2343
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff8bd0ee80     0  mov x2, x1
0xffff8bd0ee84     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd0eea0)
0xffff8bd0ee88     8  mov x3, x0
0xffff8bd0ee8c    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd0eeb0)
0xffff8bd0ee90    16  adds x2, x3, x2
0xffff8bd0ee94    20  b.vs #+0x2c (addr 0xffff8bd0eec0)
0xffff8bd0ee98    24  mov x0, x2
0xffff8bd0ee9c    28  ret
0xffff8bd0eea0    32  movz x16, #0x0
0xffff8bd0eea4    36  sub csp, jssp, #0x10 (16)
0xffff8bd0eea8    40  stp fp, lr, [jssp, #-16]!
0xffff8bd0eeac    44  bl #+0x24 (addr 0xffff8bd0eed0)
0xffff8bd0eeb0    48  movz x16, #0x8
0xffff8bd0eeb4    52  sub csp, jssp, #0x10 (16)
0xffff8bd0eeb8    56  stp fp, lr, [jssp, #-16]!
0xffff8bd0eebc    60  bl #+0x14 (addr 0xffff8bd0eed0)
0xffff8bd0eec0    64  movz x16, #0x10
0xffff8bd0eec4    68  sub csp, jssp, #0x10 (16)
0xffff8bd0eec8    72  stp fp, lr, [jssp, #-16]!
0xffff8bd0eecc    76  bl #+0x4 (addr 0xffff8bd0eed0)
0xffff8bd0eed0    80  movz x17, #0xa00000000
0xffff8bd0eed4    84  sub csp, jssp, #0x10 (16)
0xffff8bd0eed8    88  stp x17, cp, [jssp, #-16]!
0xffff8bd0eedc    92  add fp, jssp, #0x10 (16)
0xffff8bd0eee0    96  ldr x17, pc+24 (addr 0x0000ffff8bd0eef8)    ;; lazy deoptimization bailout 0
0xffff8bd0eee4   100  add x17, x17, x16
0xffff8bd0eee8   104  br x17
0xffff8bd0eeec   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0eef0   112  d63f03e0       constant
0xffff8bd0eef4   116  d503201f       constant
0xffff8bd0eef8   120  8bb06000       constant
0xffff8bd0eefc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0eee0  runtime entry
0xffff8bd0eeec  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2343
type = NORMAL
name = BinaryOpICStub(ADD:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff8bd0ee80     0  mov x2, x1
0xffff8bd0ee84     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd0eea0)
0xffff8bd0ee88     8  mov x3, x0
0xffff8bd0ee8c    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd0eeb0)
0xffff8bd0ee90    16  adds x2, x3, x2
0xffff8bd0ee94    20  b.vs #+0x2c (addr 0xffff8bd0eec0)
0xffff8bd0ee98    24  mov x0, x2
0xffff8bd0ee9c    28  ret
0xffff8bd0eea0    32  movz x16, #0x0
0xffff8bd0eea4    36  sub csp, jssp, #0x10 (16)
0xffff8bd0eea8    40  stp fp, lr, [jssp, #-16]!
0xffff8bd0eeac    44  bl #+0x24 (addr 0xffff8bd0eed0)
0xffff8bd0eeb0    48  movz x16, #0x8
0xffff8bd0eeb4    52  sub csp, jssp, #0x10 (16)
0xffff8bd0eeb8    56  stp fp, lr, [jssp, #-16]!
0xffff8bd0eebc    60  bl #+0x14 (addr 0xffff8bd0eed0)
0xffff8bd0eec0    64  movz x16, #0x10
0xffff8bd0eec4    68  sub csp, jssp, #0x10 (16)
0xffff8bd0eec8    72  stp fp, lr, [jssp, #-16]!
0xffff8bd0eecc    76  bl #+0x4 (addr 0xffff8bd0eed0)
0xffff8bd0eed0    80  movz x17, #0xa00000000
0xffff8bd0eed4    84  sub csp, jssp, #0x10 (16)
0xffff8bd0eed8    88  stp x17, cp, [jssp, #-16]!
0xffff8bd0eedc    92  add fp, jssp, #0x10 (16)
0xffff8bd0eee0    96  ldr x17, pc+24 (addr 0x0000ffff8bd0eef8)    ;; lazy deoptimization bailout 0
0xffff8bd0eee4   100  add x17, x17, x16
0xffff8bd0eee8   104  br x17
0xffff8bd0eeec   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0eef0   112  d63f03e0       constant
0xffff8bd0eef4   116  d503201f       constant
0xffff8bd0eef8   120  8bb06000       constant
0xffff8bd0eefc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0eee0  runtime entry
0xffff8bd0eeec  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4535
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd0ef80     0  mov x2, x0
0xffff8bd0ef84     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd0f078)
0xffff8bd0ef88     8  tbz w1, #0, #+0x34 (addr 0xffff8bd0efbc)
0xffff8bd0ef8c    12  ldur x16, [x1, #-1]
0xffff8bd0ef90    16  ldr x17, [x26, #120]
0xffff8bd0ef94    20  cmp x16, x17
0xffff8bd0ef98    24  b.ne #+0xc (addr 0xffff8bd0efa4)
0xffff8bd0ef9c    28  ldur d0, [x1, #7]
0xffff8bd0efa0    32  b #+0x20 (addr 0xffff8bd0efc0)
0xffff8bd0efa4    36  ldr x16, [x26, #40]
0xffff8bd0efa8    40  cmp x1, x16
0xffff8bd0efac    44  b.ne #+0xdc (addr 0xffff8bd0f088)
0xffff8bd0efb0    48  ldr x3, [x26, #928]
0xffff8bd0efb4    52  ldur d0, [x3, #7]
0xffff8bd0efb8    56  b #+0x8 (addr 0xffff8bd0efc0)
0xffff8bd0efbc    60  scvtf d0, x1, #32
0xffff8bd0efc0    64  scvtf d1, x2, #32
0xffff8bd0efc4    68  fadd d0, d0, d1
0xffff8bd0efc8    72  movz x1, #0xe2c0
0xffff8bd0efcc    76  movk x1, #0x2cb8, lsl #16
0xffff8bd0efd0    80  ldp x2, x0, [x1]
0xffff8bd0efd4    84  adds x16, x2, #0x10 (16)
0xffff8bd0efd8    88  ccmp x16, x0, #nzCv, lo
0xffff8bd0efdc    92  b.hi #+0x20 (addr 0xffff8bd0effc)
0xffff8bd0efe0    96  str x16, [x1]
0xffff8bd0efe4   100  ldr x1, [x26, #120]
0xffff8bd0efe8   104  str x1, [x2]
0xffff8bd0efec   108  orr x2, x2, #0x1
0xffff8bd0eff0   112  stur d0, [x2, #7]
0xffff8bd0eff4   116  mov x0, x2
0xffff8bd0eff8   120  ret
0xffff8bd0effc   124  sub csp, jssp, #0x10 (16)
0xffff8bd0f000   128  stp fp, lr, [jssp, #-16]!
0xffff8bd0f004   132  movz fp, #0xa00000000
0xffff8bd0f008   136  sub csp, jssp, #0x8 (8)
0xffff8bd0f00c   140  str fp, [jssp, #-8]!
0xffff8bd0f010   144  add fp, jssp, #0x8 (8)
0xffff8bd0f014   148  movz x2, #0x0
0xffff8bd0f018   152  mov x16, lr
0xffff8bd0f01c   156  ldr x17, pc+68 (addr 0x0000ffff8bd0f060)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0f020   160  blr x17
0xffff8bd0f024   164  ldur cp, [fp, #-8]
0xffff8bd0f028   168  movz x0, #0x0
0xffff8bd0f02c   172  movz x1, #0x4b48
0xffff8bd0f030   176  movk x1, #0xe4, lsl #16
0xffff8bd0f034   180  ldr x16, pc+52 (addr 0x0000ffff8bd0f068)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0f038   184  blr x16
0xffff8bd0f03c   188  str x0, [jssp, #16]
0xffff8bd0f040   192  ldr x16, pc+48 (addr 0x0000ffff8bd0f070)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0f044   196  blr x16
0xffff8bd0f048   200  ldr lr, [jssp, #16]
0xffff8bd0f04c   204  ldp xzr, fp, [jssp], #24
0xffff8bd0f050   208  b #-0x60 (addr 0xffff8bd0eff0)
0xffff8bd0f054   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd0f058   216  d63f03e0       constant
0xffff8bd0f05c   220  d503201f       constant
0xffff8bd0f060   224  8bd06820       constant
0xffff8bd0f064   228  0000ffff       constant
0xffff8bd0f068   232  8bd06260       constant
0xffff8bd0f06c   236  0000ffff       constant
0xffff8bd0f070   240  8bd068e0       constant
0xffff8bd0f074   244  0000ffff       constant
0xffff8bd0f078   248  movz x16, #0x0
0xffff8bd0f07c   252  sub csp, jssp, #0x10 (16)
0xffff8bd0f080   256  stp fp, lr, [jssp, #-16]!
0xffff8bd0f084   260  bl #+0x14 (addr 0xffff8bd0f098)
0xffff8bd0f088   264  movz x16, #0x8
0xffff8bd0f08c   268  sub csp, jssp, #0x10 (16)
0xffff8bd0f090   272  stp fp, lr, [jssp, #-16]!
0xffff8bd0f094   276  bl #+0x4 (addr 0xffff8bd0f098)
0xffff8bd0f098   280  movz x17, #0xa00000000
0xffff8bd0f09c   284  sub csp, jssp, #0x10 (16)
0xffff8bd0f0a0   288  stp x17, cp, [jssp, #-16]!
0xffff8bd0f0a4   292  add fp, jssp, #0x10 (16)
0xffff8bd0f0a8   296  ldr x17, pc+24 (addr 0x0000ffff8bd0f0c0)    ;; lazy deoptimization bailout 0
0xffff8bd0f0ac   300  add x17, x17, x16
0xffff8bd0f0b0   304  br x17
0xffff8bd0f0b4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0f0b8   312  d63f03e0       constant
0xffff8bd0f0bc   316  d503201f       constant
0xffff8bd0f0c0   320  8bb06000       constant
0xffff8bd0f0c4   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0f03c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd0f01c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0f034  code target (STUB)  (0xffff8bd06260)
0xffff8bd0f040  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0f054  constant pool (size 36)
0xffff8bd0f0a8  runtime entry
0xffff8bd0f0b4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4535
type = NORMAL
name = BinaryOpICStub(ADD:Number*Int32->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd0ef80     0  mov x2, x0
0xffff8bd0ef84     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd0f078)
0xffff8bd0ef88     8  tbz w1, #0, #+0x34 (addr 0xffff8bd0efbc)
0xffff8bd0ef8c    12  ldur x16, [x1, #-1]
0xffff8bd0ef90    16  ldr x17, [x26, #120]
0xffff8bd0ef94    20  cmp x16, x17
0xffff8bd0ef98    24  b.ne #+0xc (addr 0xffff8bd0efa4)
0xffff8bd0ef9c    28  ldur d0, [x1, #7]
0xffff8bd0efa0    32  b #+0x20 (addr 0xffff8bd0efc0)
0xffff8bd0efa4    36  ldr x16, [x26, #40]
0xffff8bd0efa8    40  cmp x1, x16
0xffff8bd0efac    44  b.ne #+0xdc (addr 0xffff8bd0f088)
0xffff8bd0efb0    48  ldr x3, [x26, #928]
0xffff8bd0efb4    52  ldur d0, [x3, #7]
0xffff8bd0efb8    56  b #+0x8 (addr 0xffff8bd0efc0)
0xffff8bd0efbc    60  scvtf d0, x1, #32
0xffff8bd0efc0    64  scvtf d1, x2, #32
0xffff8bd0efc4    68  fadd d0, d0, d1
0xffff8bd0efc8    72  movz x1, #0xe2c0
0xffff8bd0efcc    76  movk x1, #0x2cb8, lsl #16
0xffff8bd0efd0    80  ldp x2, x0, [x1]
0xffff8bd0efd4    84  adds x16, x2, #0x10 (16)
0xffff8bd0efd8    88  ccmp x16, x0, #nzCv, lo
0xffff8bd0efdc    92  b.hi #+0x20 (addr 0xffff8bd0effc)
0xffff8bd0efe0    96  str x16, [x1]
0xffff8bd0efe4   100  ldr x1, [x26, #120]
0xffff8bd0efe8   104  str x1, [x2]
0xffff8bd0efec   108  orr x2, x2, #0x1
0xffff8bd0eff0   112  stur d0, [x2, #7]
0xffff8bd0eff4   116  mov x0, x2
0xffff8bd0eff8   120  ret
0xffff8bd0effc   124  sub csp, jssp, #0x10 (16)
0xffff8bd0f000   128  stp fp, lr, [jssp, #-16]!
0xffff8bd0f004   132  movz fp, #0xa00000000
0xffff8bd0f008   136  sub csp, jssp, #0x8 (8)
0xffff8bd0f00c   140  str fp, [jssp, #-8]!
0xffff8bd0f010   144  add fp, jssp, #0x8 (8)
0xffff8bd0f014   148  movz x2, #0x0
0xffff8bd0f018   152  mov x16, lr
0xffff8bd0f01c   156  ldr x17, pc+68 (addr 0x0000ffff8bd0f060)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0f020   160  blr x17
0xffff8bd0f024   164  ldur cp, [fp, #-8]
0xffff8bd0f028   168  movz x0, #0x0
0xffff8bd0f02c   172  movz x1, #0x4b48
0xffff8bd0f030   176  movk x1, #0xe4, lsl #16
0xffff8bd0f034   180  ldr x16, pc+52 (addr 0x0000ffff8bd0f068)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0f038   184  blr x16
0xffff8bd0f03c   188  str x0, [jssp, #16]
0xffff8bd0f040   192  ldr x16, pc+48 (addr 0x0000ffff8bd0f070)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0f044   196  blr x16
0xffff8bd0f048   200  ldr lr, [jssp, #16]
0xffff8bd0f04c   204  ldp xzr, fp, [jssp], #24
0xffff8bd0f050   208  b #-0x60 (addr 0xffff8bd0eff0)
0xffff8bd0f054   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd0f058   216  d63f03e0       constant
0xffff8bd0f05c   220  d503201f       constant
0xffff8bd0f060   224  8bd06820       constant
0xffff8bd0f064   228  0000ffff       constant
0xffff8bd0f068   232  8bd06260       constant
0xffff8bd0f06c   236  0000ffff       constant
0xffff8bd0f070   240  8bd068e0       constant
0xffff8bd0f074   244  0000ffff       constant
0xffff8bd0f078   248  movz x16, #0x0
0xffff8bd0f07c   252  sub csp, jssp, #0x10 (16)
0xffff8bd0f080   256  stp fp, lr, [jssp, #-16]!
0xffff8bd0f084   260  bl #+0x14 (addr 0xffff8bd0f098)
0xffff8bd0f088   264  movz x16, #0x8
0xffff8bd0f08c   268  sub csp, jssp, #0x10 (16)
0xffff8bd0f090   272  stp fp, lr, [jssp, #-16]!
0xffff8bd0f094   276  bl #+0x4 (addr 0xffff8bd0f098)
0xffff8bd0f098   280  movz x17, #0xa00000000
0xffff8bd0f09c   284  sub csp, jssp, #0x10 (16)
0xffff8bd0f0a0   288  stp x17, cp, [jssp, #-16]!
0xffff8bd0f0a4   292  add fp, jssp, #0x10 (16)
0xffff8bd0f0a8   296  ldr x17, pc+24 (addr 0x0000ffff8bd0f0c0)    ;; lazy deoptimization bailout 0
0xffff8bd0f0ac   300  add x17, x17, x16
0xffff8bd0f0b0   304  br x17
0xffff8bd0f0b4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0f0b8   312  d63f03e0       constant
0xffff8bd0f0bc   316  d503201f       constant
0xffff8bd0f0c0   320  8bb06000       constant
0xffff8bd0f0c4   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0f03c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd0f01c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0f034  code target (STUB)  (0xffff8bd06260)
0xffff8bd0f040  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0f054  constant pool (size 36)
0xffff8bd0f0a8  runtime entry
0xffff8bd0f0b4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6583
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 389)
0xffff8bd0f140     0  tbz w1, #0, #+0x34 (addr 0xffff8bd0f174)
0xffff8bd0f144     4  ldur x16, [x1, #-1]
0xffff8bd0f148     8  ldr x17, [x26, #120]
0xffff8bd0f14c    12  cmp x16, x17
0xffff8bd0f150    16  b.ne #+0xc (addr 0xffff8bd0f15c)
0xffff8bd0f154    20  ldur d0, [x1, #7]
0xffff8bd0f158    24  b #+0x20 (addr 0xffff8bd0f178)
0xffff8bd0f15c    28  ldr x16, [x26, #40]
0xffff8bd0f160    32  cmp x1, x16
0xffff8bd0f164    36  b.ne #+0xfc (addr 0xffff8bd0f260)
0xffff8bd0f168    40  ldr x2, [x26, #928]
0xffff8bd0f16c    44  ldur d0, [x2, #7]
0xffff8bd0f170    48  b #+0x8 (addr 0xffff8bd0f178)
0xffff8bd0f174    52  scvtf d0, x1, #32
0xffff8bd0f178    56  tbz w0, #0, #+0x34 (addr 0xffff8bd0f1ac)
0xffff8bd0f17c    60  ldur x16, [x0, #-1]
0xffff8bd0f180    64  ldr x17, [x26, #120]
0xffff8bd0f184    68  cmp x16, x17
0xffff8bd0f188    72  b.ne #+0xc (addr 0xffff8bd0f194)
0xffff8bd0f18c    76  ldur d1, [x0, #7]
0xffff8bd0f190    80  b #+0x20 (addr 0xffff8bd0f1b0)
0xffff8bd0f194    84  ldr x16, [x26, #40]
0xffff8bd0f198    88  cmp x0, x16
0xffff8bd0f19c    92  b.ne #+0xd4 (addr 0xffff8bd0f270)
0xffff8bd0f1a0    96  ldr x2, [x26, #928]
0xffff8bd0f1a4   100  ldur d1, [x2, #7]
0xffff8bd0f1a8   104  b #+0x8 (addr 0xffff8bd0f1b0)
0xffff8bd0f1ac   108  scvtf d1, x0, #32
0xffff8bd0f1b0   112  fadd d0, d0, d1
0xffff8bd0f1b4   116  movz x1, #0xe2c0
0xffff8bd0f1b8   120  movk x1, #0x2cb8, lsl #16
0xffff8bd0f1bc   124  ldp x2, x0, [x1]
0xffff8bd0f1c0   128  adds x16, x2, #0x10 (16)
0xffff8bd0f1c4   132  ccmp x16, x0, #nzCv, lo
0xffff8bd0f1c8   136  b.hi #+0x20 (addr 0xffff8bd0f1e8)
0xffff8bd0f1cc   140  str x16, [x1]
0xffff8bd0f1d0   144  ldr x1, [x26, #120]
0xffff8bd0f1d4   148  str x1, [x2]
0xffff8bd0f1d8   152  orr x2, x2, #0x1
0xffff8bd0f1dc   156  stur d0, [x2, #7]
0xffff8bd0f1e0   160  mov x0, x2
0xffff8bd0f1e4   164  ret
0xffff8bd0f1e8   168  sub csp, jssp, #0x10 (16)
0xffff8bd0f1ec   172  stp fp, lr, [jssp, #-16]!
0xffff8bd0f1f0   176  movz fp, #0xa00000000
0xffff8bd0f1f4   180  sub csp, jssp, #0x8 (8)
0xffff8bd0f1f8   184  str fp, [jssp, #-8]!
0xffff8bd0f1fc   188  add fp, jssp, #0x8 (8)
0xffff8bd0f200   192  movz x2, #0x0
0xffff8bd0f204   196  mov x16, lr
0xffff8bd0f208   200  ldr x17, pc+64 (addr 0x0000ffff8bd0f248)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0f20c   204  blr x17
0xffff8bd0f210   208  ldur cp, [fp, #-8]
0xffff8bd0f214   212  movz x0, #0x0
0xffff8bd0f218   216  movz x1, #0x4b48
0xffff8bd0f21c   220  movk x1, #0xe4, lsl #16
0xffff8bd0f220   224  ldr x16, pc+48 (addr 0x0000ffff8bd0f250)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0f224   228  blr x16
0xffff8bd0f228   232  str x0, [jssp, #16]
0xffff8bd0f22c   236  ldr x16, pc+44 (addr 0x0000ffff8bd0f258)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0f230   240  blr x16
0xffff8bd0f234   244  ldr lr, [jssp, #16]
0xffff8bd0f238   248  ldp xzr, fp, [jssp], #24
0xffff8bd0f23c   252  b #-0x60 (addr 0xffff8bd0f1dc)
0xffff8bd0f240   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0f244   260  d63f03e0       constant
0xffff8bd0f248   264  8bd06820       constant
0xffff8bd0f24c   268  0000ffff       constant
0xffff8bd0f250   272  8bd06260       constant
0xffff8bd0f254   276  0000ffff       constant
0xffff8bd0f258   280  8bd068e0       constant
0xffff8bd0f25c   284  0000ffff       constant
0xffff8bd0f260   288  movz x16, #0x0
0xffff8bd0f264   292  sub csp, jssp, #0x10 (16)
0xffff8bd0f268   296  stp fp, lr, [jssp, #-16]!
0xffff8bd0f26c   300  bl #+0x14 (addr 0xffff8bd0f280)
0xffff8bd0f270   304  movz x16, #0x8
0xffff8bd0f274   308  sub csp, jssp, #0x10 (16)
0xffff8bd0f278   312  stp fp, lr, [jssp, #-16]!
0xffff8bd0f27c   316  bl #+0x4 (addr 0xffff8bd0f280)
0xffff8bd0f280   320  movz x17, #0xa00000000
0xffff8bd0f284   324  sub csp, jssp, #0x10 (16)
0xffff8bd0f288   328  stp x17, cp, [jssp, #-16]!
0xffff8bd0f28c   332  add fp, jssp, #0x10 (16)
0xffff8bd0f290   336  ldr x17, pc+24 (addr 0x0000ffff8bd0f2a8)    ;; lazy deoptimization bailout 0
0xffff8bd0f294   340  add x17, x17, x16
0xffff8bd0f298   344  br x17
0xffff8bd0f29c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0f2a0   352  d63f03e0       constant
0xffff8bd0f2a4   356  d503201f       constant
0xffff8bd0f2a8   360  8bb06000       constant
0xffff8bd0f2ac   364  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0f228   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd0f208  code target (STUB)  (0xffff8bd06820)
0xffff8bd0f220  code target (STUB)  (0xffff8bd06260)
0xffff8bd0f22c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0f240  constant pool (size 32)
0xffff8bd0f290  runtime entry
0xffff8bd0f29c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6583
type = NORMAL
name = BinaryOpICStub(ADD:Number*Number->Number)
compiler = crankshaft
Instructions (size = 389)
0xffff8bd0f140     0  tbz w1, #0, #+0x34 (addr 0xffff8bd0f174)
0xffff8bd0f144     4  ldur x16, [x1, #-1]
0xffff8bd0f148     8  ldr x17, [x26, #120]
0xffff8bd0f14c    12  cmp x16, x17
0xffff8bd0f150    16  b.ne #+0xc (addr 0xffff8bd0f15c)
0xffff8bd0f154    20  ldur d0, [x1, #7]
0xffff8bd0f158    24  b #+0x20 (addr 0xffff8bd0f178)
0xffff8bd0f15c    28  ldr x16, [x26, #40]
0xffff8bd0f160    32  cmp x1, x16
0xffff8bd0f164    36  b.ne #+0xfc (addr 0xffff8bd0f260)
0xffff8bd0f168    40  ldr x2, [x26, #928]
0xffff8bd0f16c    44  ldur d0, [x2, #7]
0xffff8bd0f170    48  b #+0x8 (addr 0xffff8bd0f178)
0xffff8bd0f174    52  scvtf d0, x1, #32
0xffff8bd0f178    56  tbz w0, #0, #+0x34 (addr 0xffff8bd0f1ac)
0xffff8bd0f17c    60  ldur x16, [x0, #-1]
0xffff8bd0f180    64  ldr x17, [x26, #120]
0xffff8bd0f184    68  cmp x16, x17
0xffff8bd0f188    72  b.ne #+0xc (addr 0xffff8bd0f194)
0xffff8bd0f18c    76  ldur d1, [x0, #7]
0xffff8bd0f190    80  b #+0x20 (addr 0xffff8bd0f1b0)
0xffff8bd0f194    84  ldr x16, [x26, #40]
0xffff8bd0f198    88  cmp x0, x16
0xffff8bd0f19c    92  b.ne #+0xd4 (addr 0xffff8bd0f270)
0xffff8bd0f1a0    96  ldr x2, [x26, #928]
0xffff8bd0f1a4   100  ldur d1, [x2, #7]
0xffff8bd0f1a8   104  b #+0x8 (addr 0xffff8bd0f1b0)
0xffff8bd0f1ac   108  scvtf d1, x0, #32
0xffff8bd0f1b0   112  fadd d0, d0, d1
0xffff8bd0f1b4   116  movz x1, #0xe2c0
0xffff8bd0f1b8   120  movk x1, #0x2cb8, lsl #16
0xffff8bd0f1bc   124  ldp x2, x0, [x1]
0xffff8bd0f1c0   128  adds x16, x2, #0x10 (16)
0xffff8bd0f1c4   132  ccmp x16, x0, #nzCv, lo
0xffff8bd0f1c8   136  b.hi #+0x20 (addr 0xffff8bd0f1e8)
0xffff8bd0f1cc   140  str x16, [x1]
0xffff8bd0f1d0   144  ldr x1, [x26, #120]
0xffff8bd0f1d4   148  str x1, [x2]
0xffff8bd0f1d8   152  orr x2, x2, #0x1
0xffff8bd0f1dc   156  stur d0, [x2, #7]
0xffff8bd0f1e0   160  mov x0, x2
0xffff8bd0f1e4   164  ret
0xffff8bd0f1e8   168  sub csp, jssp, #0x10 (16)
0xffff8bd0f1ec   172  stp fp, lr, [jssp, #-16]!
0xffff8bd0f1f0   176  movz fp, #0xa00000000
0xffff8bd0f1f4   180  sub csp, jssp, #0x8 (8)
0xffff8bd0f1f8   184  str fp, [jssp, #-8]!
0xffff8bd0f1fc   188  add fp, jssp, #0x8 (8)
0xffff8bd0f200   192  movz x2, #0x0
0xffff8bd0f204   196  mov x16, lr
0xffff8bd0f208   200  ldr x17, pc+64 (addr 0x0000ffff8bd0f248)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0f20c   204  blr x17
0xffff8bd0f210   208  ldur cp, [fp, #-8]
0xffff8bd0f214   212  movz x0, #0x0
0xffff8bd0f218   216  movz x1, #0x4b48
0xffff8bd0f21c   220  movk x1, #0xe4, lsl #16
0xffff8bd0f220   224  ldr x16, pc+48 (addr 0x0000ffff8bd0f250)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0f224   228  blr x16
0xffff8bd0f228   232  str x0, [jssp, #16]
0xffff8bd0f22c   236  ldr x16, pc+44 (addr 0x0000ffff8bd0f258)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0f230   240  blr x16
0xffff8bd0f234   244  ldr lr, [jssp, #16]
0xffff8bd0f238   248  ldp xzr, fp, [jssp], #24
0xffff8bd0f23c   252  b #-0x60 (addr 0xffff8bd0f1dc)
0xffff8bd0f240   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0f244   260  d63f03e0       constant
0xffff8bd0f248   264  8bd06820       constant
0xffff8bd0f24c   268  0000ffff       constant
0xffff8bd0f250   272  8bd06260       constant
0xffff8bd0f254   276  0000ffff       constant
0xffff8bd0f258   280  8bd068e0       constant
0xffff8bd0f25c   284  0000ffff       constant
0xffff8bd0f260   288  movz x16, #0x0
0xffff8bd0f264   292  sub csp, jssp, #0x10 (16)
0xffff8bd0f268   296  stp fp, lr, [jssp, #-16]!
0xffff8bd0f26c   300  bl #+0x14 (addr 0xffff8bd0f280)
0xffff8bd0f270   304  movz x16, #0x8
0xffff8bd0f274   308  sub csp, jssp, #0x10 (16)
0xffff8bd0f278   312  stp fp, lr, [jssp, #-16]!
0xffff8bd0f27c   316  bl #+0x4 (addr 0xffff8bd0f280)
0xffff8bd0f280   320  movz x17, #0xa00000000
0xffff8bd0f284   324  sub csp, jssp, #0x10 (16)
0xffff8bd0f288   328  stp x17, cp, [jssp, #-16]!
0xffff8bd0f28c   332  add fp, jssp, #0x10 (16)
0xffff8bd0f290   336  ldr x17, pc+24 (addr 0x0000ffff8bd0f2a8)    ;; lazy deoptimization bailout 0
0xffff8bd0f294   340  add x17, x17, x16
0xffff8bd0f298   344  br x17
0xffff8bd0f29c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0f2a0   352  d63f03e0       constant
0xffff8bd0f2a4   356  d503201f       constant
0xffff8bd0f2a8   360  8bb06000       constant
0xffff8bd0f2ac   364  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0f228   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd0f208  code target (STUB)  (0xffff8bd06820)
0xffff8bd0f220  code target (STUB)  (0xffff8bd06260)
0xffff8bd0f22c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0f240  constant pool (size 32)
0xffff8bd0f290  runtime entry
0xffff8bd0f29c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2487
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd0f340     0  mov x2, x0
0xffff8bd0f344     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd0f438)
0xffff8bd0f348     8  tbz w1, #0, #+0x34 (addr 0xffff8bd0f37c)
0xffff8bd0f34c    12  ldur x16, [x1, #-1]
0xffff8bd0f350    16  ldr x17, [x26, #120]
0xffff8bd0f354    20  cmp x16, x17
0xffff8bd0f358    24  b.ne #+0xc (addr 0xffff8bd0f364)
0xffff8bd0f35c    28  ldur d0, [x1, #7]
0xffff8bd0f360    32  b #+0x20 (addr 0xffff8bd0f380)
0xffff8bd0f364    36  ldr x16, [x26, #40]
0xffff8bd0f368    40  cmp x1, x16
0xffff8bd0f36c    44  b.ne #+0xdc (addr 0xffff8bd0f448)
0xffff8bd0f370    48  ldr x3, [x26, #928]
0xffff8bd0f374    52  ldur d0, [x3, #7]
0xffff8bd0f378    56  b #+0x8 (addr 0xffff8bd0f380)
0xffff8bd0f37c    60  scvtf d0, x1, #32
0xffff8bd0f380    64  scvtf d1, x2, #32
0xffff8bd0f384    68  fadd d0, d0, d1
0xffff8bd0f388    72  movz x1, #0xe2c0
0xffff8bd0f38c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd0f390    80  ldp x2, x0, [x1]
0xffff8bd0f394    84  adds x16, x2, #0x10 (16)
0xffff8bd0f398    88  ccmp x16, x0, #nzCv, lo
0xffff8bd0f39c    92  b.hi #+0x20 (addr 0xffff8bd0f3bc)
0xffff8bd0f3a0    96  str x16, [x1]
0xffff8bd0f3a4   100  ldr x1, [x26, #120]
0xffff8bd0f3a8   104  str x1, [x2]
0xffff8bd0f3ac   108  orr x2, x2, #0x1
0xffff8bd0f3b0   112  stur d0, [x2, #7]
0xffff8bd0f3b4   116  mov x0, x2
0xffff8bd0f3b8   120  ret
0xffff8bd0f3bc   124  sub csp, jssp, #0x10 (16)
0xffff8bd0f3c0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd0f3c4   132  movz fp, #0xa00000000
0xffff8bd0f3c8   136  sub csp, jssp, #0x8 (8)
0xffff8bd0f3cc   140  str fp, [jssp, #-8]!
0xffff8bd0f3d0   144  add fp, jssp, #0x8 (8)
0xffff8bd0f3d4   148  movz x2, #0x0
0xffff8bd0f3d8   152  mov x16, lr
0xffff8bd0f3dc   156  ldr x17, pc+68 (addr 0x0000ffff8bd0f420)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0f3e0   160  blr x17
0xffff8bd0f3e4   164  ldur cp, [fp, #-8]
0xffff8bd0f3e8   168  movz x0, #0x0
0xffff8bd0f3ec   172  movz x1, #0x4b48
0xffff8bd0f3f0   176  movk x1, #0xe4, lsl #16
0xffff8bd0f3f4   180  ldr x16, pc+52 (addr 0x0000ffff8bd0f428)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0f3f8   184  blr x16
0xffff8bd0f3fc   188  str x0, [jssp, #16]
0xffff8bd0f400   192  ldr x16, pc+48 (addr 0x0000ffff8bd0f430)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0f404   196  blr x16
0xffff8bd0f408   200  ldr lr, [jssp, #16]
0xffff8bd0f40c   204  ldp xzr, fp, [jssp], #24
0xffff8bd0f410   208  b #-0x60 (addr 0xffff8bd0f3b0)
0xffff8bd0f414   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd0f418   216  d63f03e0       constant
0xffff8bd0f41c   220  d503201f       constant
0xffff8bd0f420   224  8bd06820       constant
0xffff8bd0f424   228  0000ffff       constant
0xffff8bd0f428   232  8bd06260       constant
0xffff8bd0f42c   236  0000ffff       constant
0xffff8bd0f430   240  8bd068e0       constant
0xffff8bd0f434   244  0000ffff       constant
0xffff8bd0f438   248  movz x16, #0x0
0xffff8bd0f43c   252  sub csp, jssp, #0x10 (16)
0xffff8bd0f440   256  stp fp, lr, [jssp, #-16]!
0xffff8bd0f444   260  bl #+0x14 (addr 0xffff8bd0f458)
0xffff8bd0f448   264  movz x16, #0x8
0xffff8bd0f44c   268  sub csp, jssp, #0x10 (16)
0xffff8bd0f450   272  stp fp, lr, [jssp, #-16]!
0xffff8bd0f454   276  bl #+0x4 (addr 0xffff8bd0f458)
0xffff8bd0f458   280  movz x17, #0xa00000000
0xffff8bd0f45c   284  sub csp, jssp, #0x10 (16)
0xffff8bd0f460   288  stp x17, cp, [jssp, #-16]!
0xffff8bd0f464   292  add fp, jssp, #0x10 (16)
0xffff8bd0f468   296  ldr x17, pc+24 (addr 0x0000ffff8bd0f480)    ;; lazy deoptimization bailout 0
0xffff8bd0f46c   300  add x17, x17, x16
0xffff8bd0f470   304  br x17
0xffff8bd0f474   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0f478   312  d63f03e0       constant
0xffff8bd0f47c   316  d503201f       constant
0xffff8bd0f480   320  8bb06000       constant
0xffff8bd0f484   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0f3fc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd0f3dc  code target (STUB)  (0xffff8bd06820)
0xffff8bd0f3f4  code target (STUB)  (0xffff8bd06260)
0xffff8bd0f400  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0f414  constant pool (size 36)
0xffff8bd0f468  runtime entry
0xffff8bd0f474  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2487
type = NORMAL
name = BinaryOpICStub(ADD:Number*Smi->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd0f340     0  mov x2, x0
0xffff8bd0f344     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd0f438)
0xffff8bd0f348     8  tbz w1, #0, #+0x34 (addr 0xffff8bd0f37c)
0xffff8bd0f34c    12  ldur x16, [x1, #-1]
0xffff8bd0f350    16  ldr x17, [x26, #120]
0xffff8bd0f354    20  cmp x16, x17
0xffff8bd0f358    24  b.ne #+0xc (addr 0xffff8bd0f364)
0xffff8bd0f35c    28  ldur d0, [x1, #7]
0xffff8bd0f360    32  b #+0x20 (addr 0xffff8bd0f380)
0xffff8bd0f364    36  ldr x16, [x26, #40]
0xffff8bd0f368    40  cmp x1, x16
0xffff8bd0f36c    44  b.ne #+0xdc (addr 0xffff8bd0f448)
0xffff8bd0f370    48  ldr x3, [x26, #928]
0xffff8bd0f374    52  ldur d0, [x3, #7]
0xffff8bd0f378    56  b #+0x8 (addr 0xffff8bd0f380)
0xffff8bd0f37c    60  scvtf d0, x1, #32
0xffff8bd0f380    64  scvtf d1, x2, #32
0xffff8bd0f384    68  fadd d0, d0, d1
0xffff8bd0f388    72  movz x1, #0xe2c0
0xffff8bd0f38c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd0f390    80  ldp x2, x0, [x1]
0xffff8bd0f394    84  adds x16, x2, #0x10 (16)
0xffff8bd0f398    88  ccmp x16, x0, #nzCv, lo
0xffff8bd0f39c    92  b.hi #+0x20 (addr 0xffff8bd0f3bc)
0xffff8bd0f3a0    96  str x16, [x1]
0xffff8bd0f3a4   100  ldr x1, [x26, #120]
0xffff8bd0f3a8   104  str x1, [x2]
0xffff8bd0f3ac   108  orr x2, x2, #0x1
0xffff8bd0f3b0   112  stur d0, [x2, #7]
0xffff8bd0f3b4   116  mov x0, x2
0xffff8bd0f3b8   120  ret
0xffff8bd0f3bc   124  sub csp, jssp, #0x10 (16)
0xffff8bd0f3c0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd0f3c4   132  movz fp, #0xa00000000
0xffff8bd0f3c8   136  sub csp, jssp, #0x8 (8)
0xffff8bd0f3cc   140  str fp, [jssp, #-8]!
0xffff8bd0f3d0   144  add fp, jssp, #0x8 (8)
0xffff8bd0f3d4   148  movz x2, #0x0
0xffff8bd0f3d8   152  mov x16, lr
0xffff8bd0f3dc   156  ldr x17, pc+68 (addr 0x0000ffff8bd0f420)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0f3e0   160  blr x17
0xffff8bd0f3e4   164  ldur cp, [fp, #-8]
0xffff8bd0f3e8   168  movz x0, #0x0
0xffff8bd0f3ec   172  movz x1, #0x4b48
0xffff8bd0f3f0   176  movk x1, #0xe4, lsl #16
0xffff8bd0f3f4   180  ldr x16, pc+52 (addr 0x0000ffff8bd0f428)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0f3f8   184  blr x16
0xffff8bd0f3fc   188  str x0, [jssp, #16]
0xffff8bd0f400   192  ldr x16, pc+48 (addr 0x0000ffff8bd0f430)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0f404   196  blr x16
0xffff8bd0f408   200  ldr lr, [jssp, #16]
0xffff8bd0f40c   204  ldp xzr, fp, [jssp], #24
0xffff8bd0f410   208  b #-0x60 (addr 0xffff8bd0f3b0)
0xffff8bd0f414   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd0f418   216  d63f03e0       constant
0xffff8bd0f41c   220  d503201f       constant
0xffff8bd0f420   224  8bd06820       constant
0xffff8bd0f424   228  0000ffff       constant
0xffff8bd0f428   232  8bd06260       constant
0xffff8bd0f42c   236  0000ffff       constant
0xffff8bd0f430   240  8bd068e0       constant
0xffff8bd0f434   244  0000ffff       constant
0xffff8bd0f438   248  movz x16, #0x0
0xffff8bd0f43c   252  sub csp, jssp, #0x10 (16)
0xffff8bd0f440   256  stp fp, lr, [jssp, #-16]!
0xffff8bd0f444   260  bl #+0x14 (addr 0xffff8bd0f458)
0xffff8bd0f448   264  movz x16, #0x8
0xffff8bd0f44c   268  sub csp, jssp, #0x10 (16)
0xffff8bd0f450   272  stp fp, lr, [jssp, #-16]!
0xffff8bd0f454   276  bl #+0x4 (addr 0xffff8bd0f458)
0xffff8bd0f458   280  movz x17, #0xa00000000
0xffff8bd0f45c   284  sub csp, jssp, #0x10 (16)
0xffff8bd0f460   288  stp x17, cp, [jssp, #-16]!
0xffff8bd0f464   292  add fp, jssp, #0x10 (16)
0xffff8bd0f468   296  ldr x17, pc+24 (addr 0x0000ffff8bd0f480)    ;; lazy deoptimization bailout 0
0xffff8bd0f46c   300  add x17, x17, x16
0xffff8bd0f470   304  br x17
0xffff8bd0f474   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0f478   312  d63f03e0       constant
0xffff8bd0f47c   316  d503201f       constant
0xffff8bd0f480   320  8bb06000       constant
0xffff8bd0f484   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0f3fc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd0f3dc  code target (STUB)  (0xffff8bd06820)
0xffff8bd0f3f4  code target (STUB)  (0xffff8bd06260)
0xffff8bd0f400  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0f414  constant pool (size 36)
0xffff8bd0f468  runtime entry
0xffff8bd0f474  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4263
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff8bd0f500     0  mov x2, x1
0xffff8bd0f504     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd0f520)
0xffff8bd0f508     8  mov x3, x0
0xffff8bd0f50c    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd0f530)
0xffff8bd0f510    16  adds x2, x3, x2
0xffff8bd0f514    20  b.vs #+0x2c (addr 0xffff8bd0f540)
0xffff8bd0f518    24  mov x0, x2
0xffff8bd0f51c    28  ret
0xffff8bd0f520    32  movz x16, #0x0
0xffff8bd0f524    36  sub csp, jssp, #0x10 (16)
0xffff8bd0f528    40  stp fp, lr, [jssp, #-16]!
0xffff8bd0f52c    44  bl #+0x24 (addr 0xffff8bd0f550)
0xffff8bd0f530    48  movz x16, #0x8
0xffff8bd0f534    52  sub csp, jssp, #0x10 (16)
0xffff8bd0f538    56  stp fp, lr, [jssp, #-16]!
0xffff8bd0f53c    60  bl #+0x14 (addr 0xffff8bd0f550)
0xffff8bd0f540    64  movz x16, #0x10
0xffff8bd0f544    68  sub csp, jssp, #0x10 (16)
0xffff8bd0f548    72  stp fp, lr, [jssp, #-16]!
0xffff8bd0f54c    76  bl #+0x4 (addr 0xffff8bd0f550)
0xffff8bd0f550    80  movz x17, #0xa00000000
0xffff8bd0f554    84  sub csp, jssp, #0x10 (16)
0xffff8bd0f558    88  stp x17, cp, [jssp, #-16]!
0xffff8bd0f55c    92  add fp, jssp, #0x10 (16)
0xffff8bd0f560    96  ldr x17, pc+24 (addr 0x0000ffff8bd0f578)    ;; lazy deoptimization bailout 0
0xffff8bd0f564   100  add x17, x17, x16
0xffff8bd0f568   104  br x17
0xffff8bd0f56c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0f570   112  d63f03e0       constant
0xffff8bd0f574   116  d503201f       constant
0xffff8bd0f578   120  8bb06000       constant
0xffff8bd0f57c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0f560  runtime entry
0xffff8bd0f56c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4263
type = NORMAL
name = BinaryOpICStub(ADD:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff8bd0f500     0  mov x2, x1
0xffff8bd0f504     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd0f520)
0xffff8bd0f508     8  mov x3, x0
0xffff8bd0f50c    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd0f530)
0xffff8bd0f510    16  adds x2, x3, x2
0xffff8bd0f514    20  b.vs #+0x2c (addr 0xffff8bd0f540)
0xffff8bd0f518    24  mov x0, x2
0xffff8bd0f51c    28  ret
0xffff8bd0f520    32  movz x16, #0x0
0xffff8bd0f524    36  sub csp, jssp, #0x10 (16)
0xffff8bd0f528    40  stp fp, lr, [jssp, #-16]!
0xffff8bd0f52c    44  bl #+0x24 (addr 0xffff8bd0f550)
0xffff8bd0f530    48  movz x16, #0x8
0xffff8bd0f534    52  sub csp, jssp, #0x10 (16)
0xffff8bd0f538    56  stp fp, lr, [jssp, #-16]!
0xffff8bd0f53c    60  bl #+0x14 (addr 0xffff8bd0f550)
0xffff8bd0f540    64  movz x16, #0x10
0xffff8bd0f544    68  sub csp, jssp, #0x10 (16)
0xffff8bd0f548    72  stp fp, lr, [jssp, #-16]!
0xffff8bd0f54c    76  bl #+0x4 (addr 0xffff8bd0f550)
0xffff8bd0f550    80  movz x17, #0xa00000000
0xffff8bd0f554    84  sub csp, jssp, #0x10 (16)
0xffff8bd0f558    88  stp x17, cp, [jssp, #-16]!
0xffff8bd0f55c    92  add fp, jssp, #0x10 (16)
0xffff8bd0f560    96  ldr x17, pc+24 (addr 0x0000ffff8bd0f578)    ;; lazy deoptimization bailout 0
0xffff8bd0f564   100  add x17, x17, x16
0xffff8bd0f568   104  br x17
0xffff8bd0f56c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0f570   112  d63f03e0       constant
0xffff8bd0f574   116  d503201f       constant
0xffff8bd0f578   120  8bb06000       constant
0xffff8bd0f57c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0f560  runtime entry
0xffff8bd0f56c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4279
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff8bd0f600     0  mov x2, x1
0xffff8bd0f604     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd0f6c8)
0xffff8bd0f608     8  mov x3, x0
0xffff8bd0f60c    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd0f6d8)
0xffff8bd0f610    16  scvtf d0, x2, #32
0xffff8bd0f614    20  scvtf d1, x3, #32
0xffff8bd0f618    24  fadd d0, d0, d1
0xffff8bd0f61c    28  movz x1, #0xe2c0
0xffff8bd0f620    32  movk x1, #0x2cb8, lsl #16
0xffff8bd0f624    36  ldp x2, x0, [x1]
0xffff8bd0f628    40  adds x16, x2, #0x10 (16)
0xffff8bd0f62c    44  ccmp x16, x0, #nzCv, lo
0xffff8bd0f630    48  b.hi #+0x20 (addr 0xffff8bd0f650)
0xffff8bd0f634    52  str x16, [x1]
0xffff8bd0f638    56  ldr x1, [x26, #120]
0xffff8bd0f63c    60  str x1, [x2]
0xffff8bd0f640    64  orr x2, x2, #0x1
0xffff8bd0f644    68  stur d0, [x2, #7]
0xffff8bd0f648    72  mov x0, x2
0xffff8bd0f64c    76  ret
0xffff8bd0f650    80  sub csp, jssp, #0x10 (16)
0xffff8bd0f654    84  stp fp, lr, [jssp, #-16]!
0xffff8bd0f658    88  movz fp, #0xa00000000
0xffff8bd0f65c    92  sub csp, jssp, #0x8 (8)
0xffff8bd0f660    96  str fp, [jssp, #-8]!
0xffff8bd0f664   100  add fp, jssp, #0x8 (8)
0xffff8bd0f668   104  movz x2, #0x0
0xffff8bd0f66c   108  mov x16, lr
0xffff8bd0f670   112  ldr x17, pc+64 (addr 0x0000ffff8bd0f6b0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0f674   116  blr x17
0xffff8bd0f678   120  ldur cp, [fp, #-8]
0xffff8bd0f67c   124  movz x0, #0x0
0xffff8bd0f680   128  movz x1, #0x4b48
0xffff8bd0f684   132  movk x1, #0xe4, lsl #16
0xffff8bd0f688   136  ldr x16, pc+48 (addr 0x0000ffff8bd0f6b8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0f68c   140  blr x16
0xffff8bd0f690   144  str x0, [jssp, #16]
0xffff8bd0f694   148  ldr x16, pc+44 (addr 0x0000ffff8bd0f6c0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0f698   152  blr x16
0xffff8bd0f69c   156  ldr lr, [jssp, #16]
0xffff8bd0f6a0   160  ldp xzr, fp, [jssp], #24
0xffff8bd0f6a4   164  b #-0x60 (addr 0xffff8bd0f644)
0xffff8bd0f6a8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0f6ac   172  d63f03e0       constant
0xffff8bd0f6b0   176  8bd06820       constant
0xffff8bd0f6b4   180  0000ffff       constant
0xffff8bd0f6b8   184  8bd06260       constant
0xffff8bd0f6bc   188  0000ffff       constant
0xffff8bd0f6c0   192  8bd068e0       constant
0xffff8bd0f6c4   196  0000ffff       constant
0xffff8bd0f6c8   200  movz x16, #0x0
0xffff8bd0f6cc   204  sub csp, jssp, #0x10 (16)
0xffff8bd0f6d0   208  stp fp, lr, [jssp, #-16]!
0xffff8bd0f6d4   212  bl #+0x14 (addr 0xffff8bd0f6e8)
0xffff8bd0f6d8   216  movz x16, #0x8
0xffff8bd0f6dc   220  sub csp, jssp, #0x10 (16)
0xffff8bd0f6e0   224  stp fp, lr, [jssp, #-16]!
0xffff8bd0f6e4   228  bl #+0x4 (addr 0xffff8bd0f6e8)
0xffff8bd0f6e8   232  movz x17, #0xa00000000
0xffff8bd0f6ec   236  sub csp, jssp, #0x10 (16)
0xffff8bd0f6f0   240  stp x17, cp, [jssp, #-16]!
0xffff8bd0f6f4   244  add fp, jssp, #0x10 (16)
0xffff8bd0f6f8   248  ldr x17, pc+24 (addr 0x0000ffff8bd0f710)    ;; lazy deoptimization bailout 0
0xffff8bd0f6fc   252  add x17, x17, x16
0xffff8bd0f700   256  br x17
0xffff8bd0f704   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0f708   264  d63f03e0       constant
0xffff8bd0f70c   268  d503201f       constant
0xffff8bd0f710   272  8bb06000       constant
0xffff8bd0f714   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0f690   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd0f670  code target (STUB)  (0xffff8bd06820)
0xffff8bd0f688  code target (STUB)  (0xffff8bd06260)
0xffff8bd0f694  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0f6a8  constant pool (size 32)
0xffff8bd0f6f8  runtime entry
0xffff8bd0f704  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4279
type = NORMAL
name = BinaryOpICStub(ADD:Smi*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff8bd0f600     0  mov x2, x1
0xffff8bd0f604     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd0f6c8)
0xffff8bd0f608     8  mov x3, x0
0xffff8bd0f60c    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd0f6d8)
0xffff8bd0f610    16  scvtf d0, x2, #32
0xffff8bd0f614    20  scvtf d1, x3, #32
0xffff8bd0f618    24  fadd d0, d0, d1
0xffff8bd0f61c    28  movz x1, #0xe2c0
0xffff8bd0f620    32  movk x1, #0x2cb8, lsl #16
0xffff8bd0f624    36  ldp x2, x0, [x1]
0xffff8bd0f628    40  adds x16, x2, #0x10 (16)
0xffff8bd0f62c    44  ccmp x16, x0, #nzCv, lo
0xffff8bd0f630    48  b.hi #+0x20 (addr 0xffff8bd0f650)
0xffff8bd0f634    52  str x16, [x1]
0xffff8bd0f638    56  ldr x1, [x26, #120]
0xffff8bd0f63c    60  str x1, [x2]
0xffff8bd0f640    64  orr x2, x2, #0x1
0xffff8bd0f644    68  stur d0, [x2, #7]
0xffff8bd0f648    72  mov x0, x2
0xffff8bd0f64c    76  ret
0xffff8bd0f650    80  sub csp, jssp, #0x10 (16)
0xffff8bd0f654    84  stp fp, lr, [jssp, #-16]!
0xffff8bd0f658    88  movz fp, #0xa00000000
0xffff8bd0f65c    92  sub csp, jssp, #0x8 (8)
0xffff8bd0f660    96  str fp, [jssp, #-8]!
0xffff8bd0f664   100  add fp, jssp, #0x8 (8)
0xffff8bd0f668   104  movz x2, #0x0
0xffff8bd0f66c   108  mov x16, lr
0xffff8bd0f670   112  ldr x17, pc+64 (addr 0x0000ffff8bd0f6b0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0f674   116  blr x17
0xffff8bd0f678   120  ldur cp, [fp, #-8]
0xffff8bd0f67c   124  movz x0, #0x0
0xffff8bd0f680   128  movz x1, #0x4b48
0xffff8bd0f684   132  movk x1, #0xe4, lsl #16
0xffff8bd0f688   136  ldr x16, pc+48 (addr 0x0000ffff8bd0f6b8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0f68c   140  blr x16
0xffff8bd0f690   144  str x0, [jssp, #16]
0xffff8bd0f694   148  ldr x16, pc+44 (addr 0x0000ffff8bd0f6c0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0f698   152  blr x16
0xffff8bd0f69c   156  ldr lr, [jssp, #16]
0xffff8bd0f6a0   160  ldp xzr, fp, [jssp], #24
0xffff8bd0f6a4   164  b #-0x60 (addr 0xffff8bd0f644)
0xffff8bd0f6a8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd0f6ac   172  d63f03e0       constant
0xffff8bd0f6b0   176  8bd06820       constant
0xffff8bd0f6b4   180  0000ffff       constant
0xffff8bd0f6b8   184  8bd06260       constant
0xffff8bd0f6bc   188  0000ffff       constant
0xffff8bd0f6c0   192  8bd068e0       constant
0xffff8bd0f6c4   196  0000ffff       constant
0xffff8bd0f6c8   200  movz x16, #0x0
0xffff8bd0f6cc   204  sub csp, jssp, #0x10 (16)
0xffff8bd0f6d0   208  stp fp, lr, [jssp, #-16]!
0xffff8bd0f6d4   212  bl #+0x14 (addr 0xffff8bd0f6e8)
0xffff8bd0f6d8   216  movz x16, #0x8
0xffff8bd0f6dc   220  sub csp, jssp, #0x10 (16)
0xffff8bd0f6e0   224  stp fp, lr, [jssp, #-16]!
0xffff8bd0f6e4   228  bl #+0x4 (addr 0xffff8bd0f6e8)
0xffff8bd0f6e8   232  movz x17, #0xa00000000
0xffff8bd0f6ec   236  sub csp, jssp, #0x10 (16)
0xffff8bd0f6f0   240  stp x17, cp, [jssp, #-16]!
0xffff8bd0f6f4   244  add fp, jssp, #0x10 (16)
0xffff8bd0f6f8   248  ldr x17, pc+24 (addr 0x0000ffff8bd0f710)    ;; lazy deoptimization bailout 0
0xffff8bd0f6fc   252  add x17, x17, x16
0xffff8bd0f700   256  br x17
0xffff8bd0f704   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0f708   264  d63f03e0       constant
0xffff8bd0f70c   268  d503201f       constant
0xffff8bd0f710   272  8bb06000       constant
0xffff8bd0f714   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0f690   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd0f670  code target (STUB)  (0xffff8bd06820)
0xffff8bd0f688  code target (STUB)  (0xffff8bd06260)
0xffff8bd0f694  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0f6a8  constant pool (size 32)
0xffff8bd0f6f8  runtime entry
0xffff8bd0f704  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6327
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd0f7a0     0  mov x2, x1
0xffff8bd0f7a4     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd0f898)
0xffff8bd0f7a8     8  tbz w0, #0, #+0x34 (addr 0xffff8bd0f7dc)
0xffff8bd0f7ac    12  ldur x16, [x0, #-1]
0xffff8bd0f7b0    16  ldr x17, [x26, #120]
0xffff8bd0f7b4    20  cmp x16, x17
0xffff8bd0f7b8    24  b.ne #+0xc (addr 0xffff8bd0f7c4)
0xffff8bd0f7bc    28  ldur d0, [x0, #7]
0xffff8bd0f7c0    32  b #+0x20 (addr 0xffff8bd0f7e0)
0xffff8bd0f7c4    36  ldr x16, [x26, #40]
0xffff8bd0f7c8    40  cmp x0, x16
0xffff8bd0f7cc    44  b.ne #+0xdc (addr 0xffff8bd0f8a8)
0xffff8bd0f7d0    48  ldr x3, [x26, #928]
0xffff8bd0f7d4    52  ldur d0, [x3, #7]
0xffff8bd0f7d8    56  b #+0x8 (addr 0xffff8bd0f7e0)
0xffff8bd0f7dc    60  scvtf d0, x0, #32
0xffff8bd0f7e0    64  scvtf d1, x2, #32
0xffff8bd0f7e4    68  fadd d0, d1, d0
0xffff8bd0f7e8    72  movz x1, #0xe2c0
0xffff8bd0f7ec    76  movk x1, #0x2cb8, lsl #16
0xffff8bd0f7f0    80  ldp x2, x0, [x1]
0xffff8bd0f7f4    84  adds x16, x2, #0x10 (16)
0xffff8bd0f7f8    88  ccmp x16, x0, #nzCv, lo
0xffff8bd0f7fc    92  b.hi #+0x20 (addr 0xffff8bd0f81c)
0xffff8bd0f800    96  str x16, [x1]
0xffff8bd0f804   100  ldr x1, [x26, #120]
0xffff8bd0f808   104  str x1, [x2]
0xffff8bd0f80c   108  orr x2, x2, #0x1
0xffff8bd0f810   112  stur d0, [x2, #7]
0xffff8bd0f814   116  mov x0, x2
0xffff8bd0f818   120  ret
0xffff8bd0f81c   124  sub csp, jssp, #0x10 (16)
0xffff8bd0f820   128  stp fp, lr, [jssp, #-16]!
0xffff8bd0f824   132  movz fp, #0xa00000000
0xffff8bd0f828   136  sub csp, jssp, #0x8 (8)
0xffff8bd0f82c   140  str fp, [jssp, #-8]!
0xffff8bd0f830   144  add fp, jssp, #0x8 (8)
0xffff8bd0f834   148  movz x2, #0x0
0xffff8bd0f838   152  mov x16, lr
0xffff8bd0f83c   156  ldr x17, pc+68 (addr 0x0000ffff8bd0f880)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0f840   160  blr x17
0xffff8bd0f844   164  ldur cp, [fp, #-8]
0xffff8bd0f848   168  movz x0, #0x0
0xffff8bd0f84c   172  movz x1, #0x4b48
0xffff8bd0f850   176  movk x1, #0xe4, lsl #16
0xffff8bd0f854   180  ldr x16, pc+52 (addr 0x0000ffff8bd0f888)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0f858   184  blr x16
0xffff8bd0f85c   188  str x0, [jssp, #16]
0xffff8bd0f860   192  ldr x16, pc+48 (addr 0x0000ffff8bd0f890)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0f864   196  blr x16
0xffff8bd0f868   200  ldr lr, [jssp, #16]
0xffff8bd0f86c   204  ldp xzr, fp, [jssp], #24
0xffff8bd0f870   208  b #-0x60 (addr 0xffff8bd0f810)
0xffff8bd0f874   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd0f878   216  d63f03e0       constant
0xffff8bd0f87c   220  d503201f       constant
0xffff8bd0f880   224  8bd06820       constant
0xffff8bd0f884   228  0000ffff       constant
0xffff8bd0f888   232  8bd06260       constant
0xffff8bd0f88c   236  0000ffff       constant
0xffff8bd0f890   240  8bd068e0       constant
0xffff8bd0f894   244  0000ffff       constant
0xffff8bd0f898   248  movz x16, #0x0
0xffff8bd0f89c   252  sub csp, jssp, #0x10 (16)
0xffff8bd0f8a0   256  stp fp, lr, [jssp, #-16]!
0xffff8bd0f8a4   260  bl #+0x14 (addr 0xffff8bd0f8b8)
0xffff8bd0f8a8   264  movz x16, #0x8
0xffff8bd0f8ac   268  sub csp, jssp, #0x10 (16)
0xffff8bd0f8b0   272  stp fp, lr, [jssp, #-16]!
0xffff8bd0f8b4   276  bl #+0x4 (addr 0xffff8bd0f8b8)
0xffff8bd0f8b8   280  movz x17, #0xa00000000
0xffff8bd0f8bc   284  sub csp, jssp, #0x10 (16)
0xffff8bd0f8c0   288  stp x17, cp, [jssp, #-16]!
0xffff8bd0f8c4   292  add fp, jssp, #0x10 (16)
0xffff8bd0f8c8   296  ldr x17, pc+24 (addr 0x0000ffff8bd0f8e0)    ;; lazy deoptimization bailout 0
0xffff8bd0f8cc   300  add x17, x17, x16
0xffff8bd0f8d0   304  br x17
0xffff8bd0f8d4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0f8d8   312  d63f03e0       constant
0xffff8bd0f8dc   316  d503201f       constant
0xffff8bd0f8e0   320  8bb06000       constant
0xffff8bd0f8e4   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0f85c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd0f83c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0f854  code target (STUB)  (0xffff8bd06260)
0xffff8bd0f860  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0f874  constant pool (size 36)
0xffff8bd0f8c8  runtime entry
0xffff8bd0f8d4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6327
type = NORMAL
name = BinaryOpICStub(ADD:Smi*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd0f7a0     0  mov x2, x1
0xffff8bd0f7a4     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd0f898)
0xffff8bd0f7a8     8  tbz w0, #0, #+0x34 (addr 0xffff8bd0f7dc)
0xffff8bd0f7ac    12  ldur x16, [x0, #-1]
0xffff8bd0f7b0    16  ldr x17, [x26, #120]
0xffff8bd0f7b4    20  cmp x16, x17
0xffff8bd0f7b8    24  b.ne #+0xc (addr 0xffff8bd0f7c4)
0xffff8bd0f7bc    28  ldur d0, [x0, #7]
0xffff8bd0f7c0    32  b #+0x20 (addr 0xffff8bd0f7e0)
0xffff8bd0f7c4    36  ldr x16, [x26, #40]
0xffff8bd0f7c8    40  cmp x0, x16
0xffff8bd0f7cc    44  b.ne #+0xdc (addr 0xffff8bd0f8a8)
0xffff8bd0f7d0    48  ldr x3, [x26, #928]
0xffff8bd0f7d4    52  ldur d0, [x3, #7]
0xffff8bd0f7d8    56  b #+0x8 (addr 0xffff8bd0f7e0)
0xffff8bd0f7dc    60  scvtf d0, x0, #32
0xffff8bd0f7e0    64  scvtf d1, x2, #32
0xffff8bd0f7e4    68  fadd d0, d1, d0
0xffff8bd0f7e8    72  movz x1, #0xe2c0
0xffff8bd0f7ec    76  movk x1, #0x2cb8, lsl #16
0xffff8bd0f7f0    80  ldp x2, x0, [x1]
0xffff8bd0f7f4    84  adds x16, x2, #0x10 (16)
0xffff8bd0f7f8    88  ccmp x16, x0, #nzCv, lo
0xffff8bd0f7fc    92  b.hi #+0x20 (addr 0xffff8bd0f81c)
0xffff8bd0f800    96  str x16, [x1]
0xffff8bd0f804   100  ldr x1, [x26, #120]
0xffff8bd0f808   104  str x1, [x2]
0xffff8bd0f80c   108  orr x2, x2, #0x1
0xffff8bd0f810   112  stur d0, [x2, #7]
0xffff8bd0f814   116  mov x0, x2
0xffff8bd0f818   120  ret
0xffff8bd0f81c   124  sub csp, jssp, #0x10 (16)
0xffff8bd0f820   128  stp fp, lr, [jssp, #-16]!
0xffff8bd0f824   132  movz fp, #0xa00000000
0xffff8bd0f828   136  sub csp, jssp, #0x8 (8)
0xffff8bd0f82c   140  str fp, [jssp, #-8]!
0xffff8bd0f830   144  add fp, jssp, #0x8 (8)
0xffff8bd0f834   148  movz x2, #0x0
0xffff8bd0f838   152  mov x16, lr
0xffff8bd0f83c   156  ldr x17, pc+68 (addr 0x0000ffff8bd0f880)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd0f840   160  blr x17
0xffff8bd0f844   164  ldur cp, [fp, #-8]
0xffff8bd0f848   168  movz x0, #0x0
0xffff8bd0f84c   172  movz x1, #0x4b48
0xffff8bd0f850   176  movk x1, #0xe4, lsl #16
0xffff8bd0f854   180  ldr x16, pc+52 (addr 0x0000ffff8bd0f888)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd0f858   184  blr x16
0xffff8bd0f85c   188  str x0, [jssp, #16]
0xffff8bd0f860   192  ldr x16, pc+48 (addr 0x0000ffff8bd0f890)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd0f864   196  blr x16
0xffff8bd0f868   200  ldr lr, [jssp, #16]
0xffff8bd0f86c   204  ldp xzr, fp, [jssp], #24
0xffff8bd0f870   208  b #-0x60 (addr 0xffff8bd0f810)
0xffff8bd0f874   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd0f878   216  d63f03e0       constant
0xffff8bd0f87c   220  d503201f       constant
0xffff8bd0f880   224  8bd06820       constant
0xffff8bd0f884   228  0000ffff       constant
0xffff8bd0f888   232  8bd06260       constant
0xffff8bd0f88c   236  0000ffff       constant
0xffff8bd0f890   240  8bd068e0       constant
0xffff8bd0f894   244  0000ffff       constant
0xffff8bd0f898   248  movz x16, #0x0
0xffff8bd0f89c   252  sub csp, jssp, #0x10 (16)
0xffff8bd0f8a0   256  stp fp, lr, [jssp, #-16]!
0xffff8bd0f8a4   260  bl #+0x14 (addr 0xffff8bd0f8b8)
0xffff8bd0f8a8   264  movz x16, #0x8
0xffff8bd0f8ac   268  sub csp, jssp, #0x10 (16)
0xffff8bd0f8b0   272  stp fp, lr, [jssp, #-16]!
0xffff8bd0f8b4   276  bl #+0x4 (addr 0xffff8bd0f8b8)
0xffff8bd0f8b8   280  movz x17, #0xa00000000
0xffff8bd0f8bc   284  sub csp, jssp, #0x10 (16)
0xffff8bd0f8c0   288  stp x17, cp, [jssp, #-16]!
0xffff8bd0f8c4   292  add fp, jssp, #0x10 (16)
0xffff8bd0f8c8   296  ldr x17, pc+24 (addr 0x0000ffff8bd0f8e0)    ;; lazy deoptimization bailout 0
0xffff8bd0f8cc   300  add x17, x17, x16
0xffff8bd0f8d0   304  br x17
0xffff8bd0f8d4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0f8d8   312  d63f03e0       constant
0xffff8bd0f8dc   316  d503201f       constant
0xffff8bd0f8e0   320  8bb06000       constant
0xffff8bd0f8e4   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd0f85c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd0f83c  code target (STUB)  (0xffff8bd06820)
0xffff8bd0f854  code target (STUB)  (0xffff8bd06260)
0xffff8bd0f860  code target (STUB)  (0xffff8bd068e0)
0xffff8bd0f874  constant pool (size 36)
0xffff8bd0f8c8  runtime entry
0xffff8bd0f8d4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2215
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff8bd0f960     0  mov x2, x1
0xffff8bd0f964     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd0f980)
0xffff8bd0f968     8  mov x3, x0
0xffff8bd0f96c    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd0f990)
0xffff8bd0f970    16  adds x2, x3, x2
0xffff8bd0f974    20  b.vs #+0x2c (addr 0xffff8bd0f9a0)
0xffff8bd0f978    24  mov x0, x2
0xffff8bd0f97c    28  ret
0xffff8bd0f980    32  movz x16, #0x0
0xffff8bd0f984    36  sub csp, jssp, #0x10 (16)
0xffff8bd0f988    40  stp fp, lr, [jssp, #-16]!
0xffff8bd0f98c    44  bl #+0x24 (addr 0xffff8bd0f9b0)
0xffff8bd0f990    48  movz x16, #0x8
0xffff8bd0f994    52  sub csp, jssp, #0x10 (16)
0xffff8bd0f998    56  stp fp, lr, [jssp, #-16]!
0xffff8bd0f99c    60  bl #+0x14 (addr 0xffff8bd0f9b0)
0xffff8bd0f9a0    64  movz x16, #0x10
0xffff8bd0f9a4    68  sub csp, jssp, #0x10 (16)
0xffff8bd0f9a8    72  stp fp, lr, [jssp, #-16]!
0xffff8bd0f9ac    76  bl #+0x4 (addr 0xffff8bd0f9b0)
0xffff8bd0f9b0    80  movz x17, #0xa00000000
0xffff8bd0f9b4    84  sub csp, jssp, #0x10 (16)
0xffff8bd0f9b8    88  stp x17, cp, [jssp, #-16]!
0xffff8bd0f9bc    92  add fp, jssp, #0x10 (16)
0xffff8bd0f9c0    96  ldr x17, pc+24 (addr 0x0000ffff8bd0f9d8)    ;; lazy deoptimization bailout 0
0xffff8bd0f9c4   100  add x17, x17, x16
0xffff8bd0f9c8   104  br x17
0xffff8bd0f9cc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0f9d0   112  d63f03e0       constant
0xffff8bd0f9d4   116  d503201f       constant
0xffff8bd0f9d8   120  8bb06000       constant
0xffff8bd0f9dc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0f9c0  runtime entry
0xffff8bd0f9cc  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2215
type = NORMAL
name = BinaryOpICStub(ADD:Smi*Smi->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff8bd0f960     0  mov x2, x1
0xffff8bd0f964     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd0f980)
0xffff8bd0f968     8  mov x3, x0
0xffff8bd0f96c    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd0f990)
0xffff8bd0f970    16  adds x2, x3, x2
0xffff8bd0f974    20  b.vs #+0x2c (addr 0xffff8bd0f9a0)
0xffff8bd0f978    24  mov x0, x2
0xffff8bd0f97c    28  ret
0xffff8bd0f980    32  movz x16, #0x0
0xffff8bd0f984    36  sub csp, jssp, #0x10 (16)
0xffff8bd0f988    40  stp fp, lr, [jssp, #-16]!
0xffff8bd0f98c    44  bl #+0x24 (addr 0xffff8bd0f9b0)
0xffff8bd0f990    48  movz x16, #0x8
0xffff8bd0f994    52  sub csp, jssp, #0x10 (16)
0xffff8bd0f998    56  stp fp, lr, [jssp, #-16]!
0xffff8bd0f99c    60  bl #+0x14 (addr 0xffff8bd0f9b0)
0xffff8bd0f9a0    64  movz x16, #0x10
0xffff8bd0f9a4    68  sub csp, jssp, #0x10 (16)
0xffff8bd0f9a8    72  stp fp, lr, [jssp, #-16]!
0xffff8bd0f9ac    76  bl #+0x4 (addr 0xffff8bd0f9b0)
0xffff8bd0f9b0    80  movz x17, #0xa00000000
0xffff8bd0f9b4    84  sub csp, jssp, #0x10 (16)
0xffff8bd0f9b8    88  stp x17, cp, [jssp, #-16]!
0xffff8bd0f9bc    92  add fp, jssp, #0x10 (16)
0xffff8bd0f9c0    96  ldr x17, pc+24 (addr 0x0000ffff8bd0f9d8)    ;; lazy deoptimization bailout 0
0xffff8bd0f9c4   100  add x17, x17, x16
0xffff8bd0f9c8   104  br x17
0xffff8bd0f9cc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0f9d0   112  d63f03e0       constant
0xffff8bd0f9d4   116  d503201f       constant
0xffff8bd0f9d8   120  8bb06000       constant
0xffff8bd0f9dc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0f9c0  runtime entry
0xffff8bd0f9cc  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2199
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff8bd0fa60     0  mov x2, x1
0xffff8bd0fa64     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd0fa80)
0xffff8bd0fa68     8  mov x3, x0
0xffff8bd0fa6c    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd0fa90)
0xffff8bd0fa70    16  adds x2, x3, x2
0xffff8bd0fa74    20  b.vs #+0x2c (addr 0xffff8bd0faa0)
0xffff8bd0fa78    24  mov x0, x2
0xffff8bd0fa7c    28  ret
0xffff8bd0fa80    32  movz x16, #0x0
0xffff8bd0fa84    36  sub csp, jssp, #0x10 (16)
0xffff8bd0fa88    40  stp fp, lr, [jssp, #-16]!
0xffff8bd0fa8c    44  bl #+0x24 (addr 0xffff8bd0fab0)
0xffff8bd0fa90    48  movz x16, #0x8
0xffff8bd0fa94    52  sub csp, jssp, #0x10 (16)
0xffff8bd0fa98    56  stp fp, lr, [jssp, #-16]!
0xffff8bd0fa9c    60  bl #+0x14 (addr 0xffff8bd0fab0)
0xffff8bd0faa0    64  movz x16, #0x10
0xffff8bd0faa4    68  sub csp, jssp, #0x10 (16)
0xffff8bd0faa8    72  stp fp, lr, [jssp, #-16]!
0xffff8bd0faac    76  bl #+0x4 (addr 0xffff8bd0fab0)
0xffff8bd0fab0    80  movz x17, #0xa00000000
0xffff8bd0fab4    84  sub csp, jssp, #0x10 (16)
0xffff8bd0fab8    88  stp x17, cp, [jssp, #-16]!
0xffff8bd0fabc    92  add fp, jssp, #0x10 (16)
0xffff8bd0fac0    96  ldr x17, pc+24 (addr 0x0000ffff8bd0fad8)    ;; lazy deoptimization bailout 0
0xffff8bd0fac4   100  add x17, x17, x16
0xffff8bd0fac8   104  br x17
0xffff8bd0facc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0fad0   112  d63f03e0       constant
0xffff8bd0fad4   116  d503201f       constant
0xffff8bd0fad8   120  8bb06000       constant
0xffff8bd0fadc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0fac0  runtime entry
0xffff8bd0facc  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2199
type = NORMAL
name = BinaryOpICStub(ADD:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 136)
0xffff8bd0fa60     0  mov x2, x1
0xffff8bd0fa64     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd0fa80)
0xffff8bd0fa68     8  mov x3, x0
0xffff8bd0fa6c    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd0fa90)
0xffff8bd0fa70    16  adds x2, x3, x2
0xffff8bd0fa74    20  b.vs #+0x2c (addr 0xffff8bd0faa0)
0xffff8bd0fa78    24  mov x0, x2
0xffff8bd0fa7c    28  ret
0xffff8bd0fa80    32  movz x16, #0x0
0xffff8bd0fa84    36  sub csp, jssp, #0x10 (16)
0xffff8bd0fa88    40  stp fp, lr, [jssp, #-16]!
0xffff8bd0fa8c    44  bl #+0x24 (addr 0xffff8bd0fab0)
0xffff8bd0fa90    48  movz x16, #0x8
0xffff8bd0fa94    52  sub csp, jssp, #0x10 (16)
0xffff8bd0fa98    56  stp fp, lr, [jssp, #-16]!
0xffff8bd0fa9c    60  bl #+0x14 (addr 0xffff8bd0fab0)
0xffff8bd0faa0    64  movz x16, #0x10
0xffff8bd0faa4    68  sub csp, jssp, #0x10 (16)
0xffff8bd0faa8    72  stp fp, lr, [jssp, #-16]!
0xffff8bd0faac    76  bl #+0x4 (addr 0xffff8bd0fab0)
0xffff8bd0fab0    80  movz x17, #0xa00000000
0xffff8bd0fab4    84  sub csp, jssp, #0x10 (16)
0xffff8bd0fab8    88  stp x17, cp, [jssp, #-16]!
0xffff8bd0fabc    92  add fp, jssp, #0x10 (16)
0xffff8bd0fac0    96  ldr x17, pc+24 (addr 0x0000ffff8bd0fad8)    ;; lazy deoptimization bailout 0
0xffff8bd0fac4   100  add x17, x17, x16
0xffff8bd0fac8   104  br x17
0xffff8bd0facc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0fad0   112  d63f03e0       constant
0xffff8bd0fad4   116  d503201f       constant
0xffff8bd0fad8   120  8bb06000       constant
0xffff8bd0fadc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0fac0  runtime entry
0xffff8bd0facc  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4386
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd0fb60     0  mov x2, x1
0xffff8bd0fb64     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd0fb78)
0xffff8bd0fb68     8  mov x3, x0
0xffff8bd0fb6c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd0fb88)
0xffff8bd0fb70    16  and x0, x3, x2
0xffff8bd0fb74    20  ret
0xffff8bd0fb78    24  movz x16, #0x0
0xffff8bd0fb7c    28  sub csp, jssp, #0x10 (16)
0xffff8bd0fb80    32  stp fp, lr, [jssp, #-16]!
0xffff8bd0fb84    36  bl #+0x14 (addr 0xffff8bd0fb98)
0xffff8bd0fb88    40  movz x16, #0x8
0xffff8bd0fb8c    44  sub csp, jssp, #0x10 (16)
0xffff8bd0fb90    48  stp fp, lr, [jssp, #-16]!
0xffff8bd0fb94    52  bl #+0x4 (addr 0xffff8bd0fb98)
0xffff8bd0fb98    56  movz x17, #0xa00000000
0xffff8bd0fb9c    60  sub csp, jssp, #0x10 (16)
0xffff8bd0fba0    64  stp x17, cp, [jssp, #-16]!
0xffff8bd0fba4    68  add fp, jssp, #0x10 (16)
0xffff8bd0fba8    72  ldr x17, pc+24 (addr 0x0000ffff8bd0fbc0)    ;; lazy deoptimization bailout 0
0xffff8bd0fbac    76  add x17, x17, x16
0xffff8bd0fbb0    80  br x17
0xffff8bd0fbb4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0fbb8    88  d63f03e0       constant
0xffff8bd0fbbc    92  d503201f       constant
0xffff8bd0fbc0    96  8bb06000       constant
0xffff8bd0fbc4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0fba8  runtime entry
0xffff8bd0fbb4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4386
type = NORMAL
name = BinaryOpICStub(BIT_AND:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd0fb60     0  mov x2, x1
0xffff8bd0fb64     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd0fb78)
0xffff8bd0fb68     8  mov x3, x0
0xffff8bd0fb6c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd0fb88)
0xffff8bd0fb70    16  and x0, x3, x2
0xffff8bd0fb74    20  ret
0xffff8bd0fb78    24  movz x16, #0x0
0xffff8bd0fb7c    28  sub csp, jssp, #0x10 (16)
0xffff8bd0fb80    32  stp fp, lr, [jssp, #-16]!
0xffff8bd0fb84    36  bl #+0x14 (addr 0xffff8bd0fb98)
0xffff8bd0fb88    40  movz x16, #0x8
0xffff8bd0fb8c    44  sub csp, jssp, #0x10 (16)
0xffff8bd0fb90    48  stp fp, lr, [jssp, #-16]!
0xffff8bd0fb94    52  bl #+0x4 (addr 0xffff8bd0fb98)
0xffff8bd0fb98    56  movz x17, #0xa00000000
0xffff8bd0fb9c    60  sub csp, jssp, #0x10 (16)
0xffff8bd0fba0    64  stp x17, cp, [jssp, #-16]!
0xffff8bd0fba4    68  add fp, jssp, #0x10 (16)
0xffff8bd0fba8    72  ldr x17, pc+24 (addr 0x0000ffff8bd0fbc0)    ;; lazy deoptimization bailout 0
0xffff8bd0fbac    76  add x17, x17, x16
0xffff8bd0fbb0    80  br x17
0xffff8bd0fbb4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0fbb8    88  d63f03e0       constant
0xffff8bd0fbbc    92  d503201f       constant
0xffff8bd0fbc0    96  8bb06000       constant
0xffff8bd0fbc4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0fba8  runtime entry
0xffff8bd0fbb4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4370
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd0fc40     0  mov x2, x1
0xffff8bd0fc44     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd0fc58)
0xffff8bd0fc48     8  mov x3, x0
0xffff8bd0fc4c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd0fc68)
0xffff8bd0fc50    16  and x0, x3, x2
0xffff8bd0fc54    20  ret
0xffff8bd0fc58    24  movz x16, #0x0
0xffff8bd0fc5c    28  sub csp, jssp, #0x10 (16)
0xffff8bd0fc60    32  stp fp, lr, [jssp, #-16]!
0xffff8bd0fc64    36  bl #+0x14 (addr 0xffff8bd0fc78)
0xffff8bd0fc68    40  movz x16, #0x8
0xffff8bd0fc6c    44  sub csp, jssp, #0x10 (16)
0xffff8bd0fc70    48  stp fp, lr, [jssp, #-16]!
0xffff8bd0fc74    52  bl #+0x4 (addr 0xffff8bd0fc78)
0xffff8bd0fc78    56  movz x17, #0xa00000000
0xffff8bd0fc7c    60  sub csp, jssp, #0x10 (16)
0xffff8bd0fc80    64  stp x17, cp, [jssp, #-16]!
0xffff8bd0fc84    68  add fp, jssp, #0x10 (16)
0xffff8bd0fc88    72  ldr x17, pc+24 (addr 0x0000ffff8bd0fca0)    ;; lazy deoptimization bailout 0
0xffff8bd0fc8c    76  add x17, x17, x16
0xffff8bd0fc90    80  br x17
0xffff8bd0fc94    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0fc98    88  d63f03e0       constant
0xffff8bd0fc9c    92  d503201f       constant
0xffff8bd0fca0    96  8bb06000       constant
0xffff8bd0fca4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0fc88  runtime entry
0xffff8bd0fc94  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4370
type = NORMAL
name = BinaryOpICStub(BIT_AND:Int32*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd0fc40     0  mov x2, x1
0xffff8bd0fc44     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd0fc58)
0xffff8bd0fc48     8  mov x3, x0
0xffff8bd0fc4c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd0fc68)
0xffff8bd0fc50    16  and x0, x3, x2
0xffff8bd0fc54    20  ret
0xffff8bd0fc58    24  movz x16, #0x0
0xffff8bd0fc5c    28  sub csp, jssp, #0x10 (16)
0xffff8bd0fc60    32  stp fp, lr, [jssp, #-16]!
0xffff8bd0fc64    36  bl #+0x14 (addr 0xffff8bd0fc78)
0xffff8bd0fc68    40  movz x16, #0x8
0xffff8bd0fc6c    44  sub csp, jssp, #0x10 (16)
0xffff8bd0fc70    48  stp fp, lr, [jssp, #-16]!
0xffff8bd0fc74    52  bl #+0x4 (addr 0xffff8bd0fc78)
0xffff8bd0fc78    56  movz x17, #0xa00000000
0xffff8bd0fc7c    60  sub csp, jssp, #0x10 (16)
0xffff8bd0fc80    64  stp x17, cp, [jssp, #-16]!
0xffff8bd0fc84    68  add fp, jssp, #0x10 (16)
0xffff8bd0fc88    72  ldr x17, pc+24 (addr 0x0000ffff8bd0fca0)    ;; lazy deoptimization bailout 0
0xffff8bd0fc8c    76  add x17, x17, x16
0xffff8bd0fc90    80  br x17
0xffff8bd0fc94    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0fc98    88  d63f03e0       constant
0xffff8bd0fc9c    92  d503201f       constant
0xffff8bd0fca0    96  8bb06000       constant
0xffff8bd0fca4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0fc88  runtime entry
0xffff8bd0fc94  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2338
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd0fd20     0  mov x2, x1
0xffff8bd0fd24     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd0fd38)
0xffff8bd0fd28     8  mov x3, x0
0xffff8bd0fd2c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd0fd48)
0xffff8bd0fd30    16  and x0, x3, x2
0xffff8bd0fd34    20  ret
0xffff8bd0fd38    24  movz x16, #0x0
0xffff8bd0fd3c    28  sub csp, jssp, #0x10 (16)
0xffff8bd0fd40    32  stp fp, lr, [jssp, #-16]!
0xffff8bd0fd44    36  bl #+0x14 (addr 0xffff8bd0fd58)
0xffff8bd0fd48    40  movz x16, #0x8
0xffff8bd0fd4c    44  sub csp, jssp, #0x10 (16)
0xffff8bd0fd50    48  stp fp, lr, [jssp, #-16]!
0xffff8bd0fd54    52  bl #+0x4 (addr 0xffff8bd0fd58)
0xffff8bd0fd58    56  movz x17, #0xa00000000
0xffff8bd0fd5c    60  sub csp, jssp, #0x10 (16)
0xffff8bd0fd60    64  stp x17, cp, [jssp, #-16]!
0xffff8bd0fd64    68  add fp, jssp, #0x10 (16)
0xffff8bd0fd68    72  ldr x17, pc+24 (addr 0x0000ffff8bd0fd80)    ;; lazy deoptimization bailout 0
0xffff8bd0fd6c    76  add x17, x17, x16
0xffff8bd0fd70    80  br x17
0xffff8bd0fd74    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0fd78    88  d63f03e0       constant
0xffff8bd0fd7c    92  d503201f       constant
0xffff8bd0fd80    96  8bb06000       constant
0xffff8bd0fd84   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0fd68  runtime entry
0xffff8bd0fd74  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2338
type = NORMAL
name = BinaryOpICStub(BIT_AND:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd0fd20     0  mov x2, x1
0xffff8bd0fd24     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd0fd38)
0xffff8bd0fd28     8  mov x3, x0
0xffff8bd0fd2c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd0fd48)
0xffff8bd0fd30    16  and x0, x3, x2
0xffff8bd0fd34    20  ret
0xffff8bd0fd38    24  movz x16, #0x0
0xffff8bd0fd3c    28  sub csp, jssp, #0x10 (16)
0xffff8bd0fd40    32  stp fp, lr, [jssp, #-16]!
0xffff8bd0fd44    36  bl #+0x14 (addr 0xffff8bd0fd58)
0xffff8bd0fd48    40  movz x16, #0x8
0xffff8bd0fd4c    44  sub csp, jssp, #0x10 (16)
0xffff8bd0fd50    48  stp fp, lr, [jssp, #-16]!
0xffff8bd0fd54    52  bl #+0x4 (addr 0xffff8bd0fd58)
0xffff8bd0fd58    56  movz x17, #0xa00000000
0xffff8bd0fd5c    60  sub csp, jssp, #0x10 (16)
0xffff8bd0fd60    64  stp x17, cp, [jssp, #-16]!
0xffff8bd0fd64    68  add fp, jssp, #0x10 (16)
0xffff8bd0fd68    72  ldr x17, pc+24 (addr 0x0000ffff8bd0fd80)    ;; lazy deoptimization bailout 0
0xffff8bd0fd6c    76  add x17, x17, x16
0xffff8bd0fd70    80  br x17
0xffff8bd0fd74    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0fd78    88  d63f03e0       constant
0xffff8bd0fd7c    92  d503201f       constant
0xffff8bd0fd80    96  8bb06000       constant
0xffff8bd0fd84   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0fd68  runtime entry
0xffff8bd0fd74  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2322
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd0fe00     0  mov x2, x1
0xffff8bd0fe04     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd0fe18)
0xffff8bd0fe08     8  mov x3, x0
0xffff8bd0fe0c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd0fe28)
0xffff8bd0fe10    16  and x0, x3, x2
0xffff8bd0fe14    20  ret
0xffff8bd0fe18    24  movz x16, #0x0
0xffff8bd0fe1c    28  sub csp, jssp, #0x10 (16)
0xffff8bd0fe20    32  stp fp, lr, [jssp, #-16]!
0xffff8bd0fe24    36  bl #+0x14 (addr 0xffff8bd0fe38)
0xffff8bd0fe28    40  movz x16, #0x8
0xffff8bd0fe2c    44  sub csp, jssp, #0x10 (16)
0xffff8bd0fe30    48  stp fp, lr, [jssp, #-16]!
0xffff8bd0fe34    52  bl #+0x4 (addr 0xffff8bd0fe38)
0xffff8bd0fe38    56  movz x17, #0xa00000000
0xffff8bd0fe3c    60  sub csp, jssp, #0x10 (16)
0xffff8bd0fe40    64  stp x17, cp, [jssp, #-16]!
0xffff8bd0fe44    68  add fp, jssp, #0x10 (16)
0xffff8bd0fe48    72  ldr x17, pc+24 (addr 0x0000ffff8bd0fe60)    ;; lazy deoptimization bailout 0
0xffff8bd0fe4c    76  add x17, x17, x16
0xffff8bd0fe50    80  br x17
0xffff8bd0fe54    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0fe58    88  d63f03e0       constant
0xffff8bd0fe5c    92  d503201f       constant
0xffff8bd0fe60    96  8bb06000       constant
0xffff8bd0fe64   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0fe48  runtime entry
0xffff8bd0fe54  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2322
type = NORMAL
name = BinaryOpICStub(BIT_AND:Int32*Smi->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd0fe00     0  mov x2, x1
0xffff8bd0fe04     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd0fe18)
0xffff8bd0fe08     8  mov x3, x0
0xffff8bd0fe0c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd0fe28)
0xffff8bd0fe10    16  and x0, x3, x2
0xffff8bd0fe14    20  ret
0xffff8bd0fe18    24  movz x16, #0x0
0xffff8bd0fe1c    28  sub csp, jssp, #0x10 (16)
0xffff8bd0fe20    32  stp fp, lr, [jssp, #-16]!
0xffff8bd0fe24    36  bl #+0x14 (addr 0xffff8bd0fe38)
0xffff8bd0fe28    40  movz x16, #0x8
0xffff8bd0fe2c    44  sub csp, jssp, #0x10 (16)
0xffff8bd0fe30    48  stp fp, lr, [jssp, #-16]!
0xffff8bd0fe34    52  bl #+0x4 (addr 0xffff8bd0fe38)
0xffff8bd0fe38    56  movz x17, #0xa00000000
0xffff8bd0fe3c    60  sub csp, jssp, #0x10 (16)
0xffff8bd0fe40    64  stp x17, cp, [jssp, #-16]!
0xffff8bd0fe44    68  add fp, jssp, #0x10 (16)
0xffff8bd0fe48    72  ldr x17, pc+24 (addr 0x0000ffff8bd0fe60)    ;; lazy deoptimization bailout 0
0xffff8bd0fe4c    76  add x17, x17, x16
0xffff8bd0fe50    80  br x17
0xffff8bd0fe54    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd0fe58    88  d63f03e0       constant
0xffff8bd0fe5c    92  d503201f       constant
0xffff8bd0fe60    96  8bb06000       constant
0xffff8bd0fe64   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd0fe48  runtime entry
0xffff8bd0fe54  constant pool (size 20)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff8bd0fee0     0  sub csp, jssp, #0x10 (16)
0xffff8bd0fee4     4  stp x2, x0, [jssp, #-16]!
0xffff8bd0fee8     8  ldur x4, [x1, #7]
0xffff8bd0feec    12  ubfx x0, x4, #52, #11
0xffff8bd0fef0    16  cmp x0, #0x453 (1107)
0xffff8bd0fef4    20  csel x4, xzr, x4, ge
0xffff8bd0fef8    24  b.ge #+0x1c (addr 0xffff8bd0ff14)
0xffff8bd0fefc    28  ubfx x2, x4, #0, #52
0xffff8bd0ff00    32  orr x2, x2, #0x10000000000000
0xffff8bd0ff04    36  tst x4, #0x8000000000000000
0xffff8bd0ff08    40  cneg x2, x2, ne
0xffff8bd0ff0c    44  sub x0, x0, #0x433 (1075)
0xffff8bd0ff10    48  lsl x4, x2, x0
0xffff8bd0ff14    52  ldp x2, x0, [jssp], #16
0xffff8bd0ff18    56  ret


RelocInfo (size = 0)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4514
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff8bd0ff80     0  mov x2, x0
0xffff8bd0ff84     4  tbnz w2, #0, #+0xac (addr 0xffff8bd10030)
0xffff8bd0ff88     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd0ffa0)
0xffff8bd0ff8c    12  asr x4, x1, #32
0xffff8bd0ff90    16  asr x0, x2, #32
0xffff8bd0ff94    20  and w0, w0, w4
0xffff8bd0ff98    24  lsl x0, x0, #32
0xffff8bd0ff9c    28  ret
0xffff8bd0ffa0    32  sub csp, jssp, #0x10 (16)
0xffff8bd0ffa4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd0ffa8    40  movz fp, #0xa00000000
0xffff8bd0ffac    44  sub csp, jssp, #0x8 (8)
0xffff8bd0ffb0    48  str fp, [jssp, #-8]!
0xffff8bd0ffb4    52  add fp, jssp, #0x8 (8)
0xffff8bd0ffb8    56  ldur x16, [x1, #-1]
0xffff8bd0ffbc    60  ldr x17, [x26, #120]
0xffff8bd0ffc0    64  cmp x16, x17
0xffff8bd0ffc4    68  b.ne #+0x30 (addr 0xffff8bd0fff4)
0xffff8bd0ffc8    72  ldur d30, [x1, #7]
0xffff8bd0ffcc    76  fcvtzs x4, d30
0xffff8bd0ffd0    80  cmp x4, #0x1 (1)
0xffff8bd0ffd4    84  ccmn x4, #1, #nzcV, vc
0xffff8bd0ffd8    88  b.vc #+0x18 (addr 0xffff8bd0fff0)
0xffff8bd0ffdc    92  sub csp, jssp, #0x8 (8)
0xffff8bd0ffe0    96  str lr, [jssp, #-8]!
0xffff8bd0ffe4   100  ldr x16, pc+68 (addr 0x0000ffff8bd10028)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd0ffe8   104  blr x16
0xffff8bd0ffec   108  ldr lr, [jssp], #8
0xffff8bd0fff0   112  b #+0x24 (addr 0xffff8bd10014)
0xffff8bd0fff4   116  ldp x4, x3, [x26, #64]
0xffff8bd0fff8   120  cmp x1, x4
0xffff8bd0fffc   124  cset x4, eq
0xffff8bd10000   128  ccmp x1, x3, #nZcv, ne
0xffff8bd10004   132  b.eq #+0x10 (addr 0xffff8bd10014)
0xffff8bd10008   136  ldr x16, [x26, #40]
0xffff8bd1000c   140  cmp x1, x16
0xffff8bd10010   144  b.ne #+0x30 (addr 0xffff8bd10040)
0xffff8bd10014   148  ldr lr, [jssp, #16]
0xffff8bd10018   152  ldp xzr, fp, [jssp], #24
0xffff8bd1001c   156  b #-0x8c (addr 0xffff8bd0ff90)
0xffff8bd10020   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd10024   164  d63f03e0       constant
0xffff8bd10028   168  8bd0fee0       constant
0xffff8bd1002c   172  0000ffff       constant
0xffff8bd10030   176  movz x16, #0x0
0xffff8bd10034   180  sub csp, jssp, #0x10 (16)
0xffff8bd10038   184  stp fp, lr, [jssp, #-16]!
0xffff8bd1003c   188  bl #+0xc (addr 0xffff8bd10048)
0xffff8bd10040   192  movz x16, #0x8
0xffff8bd10044   196  bl #+0x14 (addr 0xffff8bd10058)
0xffff8bd10048   200  movz x17, #0xa00000000
0xffff8bd1004c   204  sub csp, jssp, #0x10 (16)
0xffff8bd10050   208  stp x17, cp, [jssp, #-16]!
0xffff8bd10054   212  add fp, jssp, #0x10 (16)
0xffff8bd10058   216  ldr x17, pc+24 (addr 0x0000ffff8bd10070)    ;; lazy deoptimization bailout 0
0xffff8bd1005c   220  add x17, x17, x16
0xffff8bd10060   224  br x17
0xffff8bd10064   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10068   232  d63f03e0       constant
0xffff8bd1006c   236  d503201f       constant
0xffff8bd10070   240  8bb06000       constant
0xffff8bd10074   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd0ffe4  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd10020  constant pool (size 16)
0xffff8bd10058  runtime entry
0xffff8bd10064  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4514
type = NORMAL
name = BinaryOpICStub(BIT_AND:Number*Int32->Int32)
compiler = crankshaft
Instructions (size = 256)
0xffff8bd0ff80     0  mov x2, x0
0xffff8bd0ff84     4  tbnz w2, #0, #+0xac (addr 0xffff8bd10030)
0xffff8bd0ff88     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd0ffa0)
0xffff8bd0ff8c    12  asr x4, x1, #32
0xffff8bd0ff90    16  asr x0, x2, #32
0xffff8bd0ff94    20  and w0, w0, w4
0xffff8bd0ff98    24  lsl x0, x0, #32
0xffff8bd0ff9c    28  ret
0xffff8bd0ffa0    32  sub csp, jssp, #0x10 (16)
0xffff8bd0ffa4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd0ffa8    40  movz fp, #0xa00000000
0xffff8bd0ffac    44  sub csp, jssp, #0x8 (8)
0xffff8bd0ffb0    48  str fp, [jssp, #-8]!
0xffff8bd0ffb4    52  add fp, jssp, #0x8 (8)
0xffff8bd0ffb8    56  ldur x16, [x1, #-1]
0xffff8bd0ffbc    60  ldr x17, [x26, #120]
0xffff8bd0ffc0    64  cmp x16, x17
0xffff8bd0ffc4    68  b.ne #+0x30 (addr 0xffff8bd0fff4)
0xffff8bd0ffc8    72  ldur d30, [x1, #7]
0xffff8bd0ffcc    76  fcvtzs x4, d30
0xffff8bd0ffd0    80  cmp x4, #0x1 (1)
0xffff8bd0ffd4    84  ccmn x4, #1, #nzcV, vc
0xffff8bd0ffd8    88  b.vc #+0x18 (addr 0xffff8bd0fff0)
0xffff8bd0ffdc    92  sub csp, jssp, #0x8 (8)
0xffff8bd0ffe0    96  str lr, [jssp, #-8]!
0xffff8bd0ffe4   100  ldr x16, pc+68 (addr 0x0000ffff8bd10028)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd0ffe8   104  blr x16
0xffff8bd0ffec   108  ldr lr, [jssp], #8
0xffff8bd0fff0   112  b #+0x24 (addr 0xffff8bd10014)
0xffff8bd0fff4   116  ldp x4, x3, [x26, #64]
0xffff8bd0fff8   120  cmp x1, x4
0xffff8bd0fffc   124  cset x4, eq
0xffff8bd10000   128  ccmp x1, x3, #nZcv, ne
0xffff8bd10004   132  b.eq #+0x10 (addr 0xffff8bd10014)
0xffff8bd10008   136  ldr x16, [x26, #40]
0xffff8bd1000c   140  cmp x1, x16
0xffff8bd10010   144  b.ne #+0x30 (addr 0xffff8bd10040)
0xffff8bd10014   148  ldr lr, [jssp, #16]
0xffff8bd10018   152  ldp xzr, fp, [jssp], #24
0xffff8bd1001c   156  b #-0x8c (addr 0xffff8bd0ff90)
0xffff8bd10020   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd10024   164  d63f03e0       constant
0xffff8bd10028   168  8bd0fee0       constant
0xffff8bd1002c   172  0000ffff       constant
0xffff8bd10030   176  movz x16, #0x0
0xffff8bd10034   180  sub csp, jssp, #0x10 (16)
0xffff8bd10038   184  stp fp, lr, [jssp, #-16]!
0xffff8bd1003c   188  bl #+0xc (addr 0xffff8bd10048)
0xffff8bd10040   192  movz x16, #0x8
0xffff8bd10044   196  bl #+0x14 (addr 0xffff8bd10058)
0xffff8bd10048   200  movz x17, #0xa00000000
0xffff8bd1004c   204  sub csp, jssp, #0x10 (16)
0xffff8bd10050   208  stp x17, cp, [jssp, #-16]!
0xffff8bd10054   212  add fp, jssp, #0x10 (16)
0xffff8bd10058   216  ldr x17, pc+24 (addr 0x0000ffff8bd10070)    ;; lazy deoptimization bailout 0
0xffff8bd1005c   220  add x17, x17, x16
0xffff8bd10060   224  br x17
0xffff8bd10064   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10068   232  d63f03e0       constant
0xffff8bd1006c   236  d503201f       constant
0xffff8bd10070   240  8bb06000       constant
0xffff8bd10074   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd0ffe4  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd10020  constant pool (size 16)
0xffff8bd10058  runtime entry
0xffff8bd10064  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2450
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff8bd100e0     0  mov x2, x0
0xffff8bd100e4     4  tbnz w2, #0, #+0xac (addr 0xffff8bd10190)
0xffff8bd100e8     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd10100)
0xffff8bd100ec    12  asr x4, x1, #32
0xffff8bd100f0    16  asr x0, x2, #32
0xffff8bd100f4    20  and w0, w0, w4
0xffff8bd100f8    24  lsl x0, x0, #32
0xffff8bd100fc    28  ret
0xffff8bd10100    32  sub csp, jssp, #0x10 (16)
0xffff8bd10104    36  stp fp, lr, [jssp, #-16]!
0xffff8bd10108    40  movz fp, #0xa00000000
0xffff8bd1010c    44  sub csp, jssp, #0x8 (8)
0xffff8bd10110    48  str fp, [jssp, #-8]!
0xffff8bd10114    52  add fp, jssp, #0x8 (8)
0xffff8bd10118    56  ldur x16, [x1, #-1]
0xffff8bd1011c    60  ldr x17, [x26, #120]
0xffff8bd10120    64  cmp x16, x17
0xffff8bd10124    68  b.ne #+0x30 (addr 0xffff8bd10154)
0xffff8bd10128    72  ldur d30, [x1, #7]
0xffff8bd1012c    76  fcvtzs x4, d30
0xffff8bd10130    80  cmp x4, #0x1 (1)
0xffff8bd10134    84  ccmn x4, #1, #nzcV, vc
0xffff8bd10138    88  b.vc #+0x18 (addr 0xffff8bd10150)
0xffff8bd1013c    92  sub csp, jssp, #0x8 (8)
0xffff8bd10140    96  str lr, [jssp, #-8]!
0xffff8bd10144   100  ldr x16, pc+68 (addr 0x0000ffff8bd10188)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd10148   104  blr x16
0xffff8bd1014c   108  ldr lr, [jssp], #8
0xffff8bd10150   112  b #+0x24 (addr 0xffff8bd10174)
0xffff8bd10154   116  ldp x4, x3, [x26, #64]
0xffff8bd10158   120  cmp x1, x4
0xffff8bd1015c   124  cset x4, eq
0xffff8bd10160   128  ccmp x1, x3, #nZcv, ne
0xffff8bd10164   132  b.eq #+0x10 (addr 0xffff8bd10174)
0xffff8bd10168   136  ldr x16, [x26, #40]
0xffff8bd1016c   140  cmp x1, x16
0xffff8bd10170   144  b.ne #+0x30 (addr 0xffff8bd101a0)
0xffff8bd10174   148  ldr lr, [jssp, #16]
0xffff8bd10178   152  ldp xzr, fp, [jssp], #24
0xffff8bd1017c   156  b #-0x8c (addr 0xffff8bd100f0)
0xffff8bd10180   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd10184   164  d63f03e0       constant
0xffff8bd10188   168  8bd0fee0       constant
0xffff8bd1018c   172  0000ffff       constant
0xffff8bd10190   176  movz x16, #0x0
0xffff8bd10194   180  sub csp, jssp, #0x10 (16)
0xffff8bd10198   184  stp fp, lr, [jssp, #-16]!
0xffff8bd1019c   188  bl #+0xc (addr 0xffff8bd101a8)
0xffff8bd101a0   192  movz x16, #0x8
0xffff8bd101a4   196  bl #+0x14 (addr 0xffff8bd101b8)
0xffff8bd101a8   200  movz x17, #0xa00000000
0xffff8bd101ac   204  sub csp, jssp, #0x10 (16)
0xffff8bd101b0   208  stp x17, cp, [jssp, #-16]!
0xffff8bd101b4   212  add fp, jssp, #0x10 (16)
0xffff8bd101b8   216  ldr x17, pc+24 (addr 0x0000ffff8bd101d0)    ;; lazy deoptimization bailout 0
0xffff8bd101bc   220  add x17, x17, x16
0xffff8bd101c0   224  br x17
0xffff8bd101c4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd101c8   232  d63f03e0       constant
0xffff8bd101cc   236  d503201f       constant
0xffff8bd101d0   240  8bb06000       constant
0xffff8bd101d4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd10144  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd10180  constant pool (size 16)
0xffff8bd101b8  runtime entry
0xffff8bd101c4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2450
type = NORMAL
name = BinaryOpICStub(BIT_AND:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff8bd100e0     0  mov x2, x0
0xffff8bd100e4     4  tbnz w2, #0, #+0xac (addr 0xffff8bd10190)
0xffff8bd100e8     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd10100)
0xffff8bd100ec    12  asr x4, x1, #32
0xffff8bd100f0    16  asr x0, x2, #32
0xffff8bd100f4    20  and w0, w0, w4
0xffff8bd100f8    24  lsl x0, x0, #32
0xffff8bd100fc    28  ret
0xffff8bd10100    32  sub csp, jssp, #0x10 (16)
0xffff8bd10104    36  stp fp, lr, [jssp, #-16]!
0xffff8bd10108    40  movz fp, #0xa00000000
0xffff8bd1010c    44  sub csp, jssp, #0x8 (8)
0xffff8bd10110    48  str fp, [jssp, #-8]!
0xffff8bd10114    52  add fp, jssp, #0x8 (8)
0xffff8bd10118    56  ldur x16, [x1, #-1]
0xffff8bd1011c    60  ldr x17, [x26, #120]
0xffff8bd10120    64  cmp x16, x17
0xffff8bd10124    68  b.ne #+0x30 (addr 0xffff8bd10154)
0xffff8bd10128    72  ldur d30, [x1, #7]
0xffff8bd1012c    76  fcvtzs x4, d30
0xffff8bd10130    80  cmp x4, #0x1 (1)
0xffff8bd10134    84  ccmn x4, #1, #nzcV, vc
0xffff8bd10138    88  b.vc #+0x18 (addr 0xffff8bd10150)
0xffff8bd1013c    92  sub csp, jssp, #0x8 (8)
0xffff8bd10140    96  str lr, [jssp, #-8]!
0xffff8bd10144   100  ldr x16, pc+68 (addr 0x0000ffff8bd10188)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd10148   104  blr x16
0xffff8bd1014c   108  ldr lr, [jssp], #8
0xffff8bd10150   112  b #+0x24 (addr 0xffff8bd10174)
0xffff8bd10154   116  ldp x4, x3, [x26, #64]
0xffff8bd10158   120  cmp x1, x4
0xffff8bd1015c   124  cset x4, eq
0xffff8bd10160   128  ccmp x1, x3, #nZcv, ne
0xffff8bd10164   132  b.eq #+0x10 (addr 0xffff8bd10174)
0xffff8bd10168   136  ldr x16, [x26, #40]
0xffff8bd1016c   140  cmp x1, x16
0xffff8bd10170   144  b.ne #+0x30 (addr 0xffff8bd101a0)
0xffff8bd10174   148  ldr lr, [jssp, #16]
0xffff8bd10178   152  ldp xzr, fp, [jssp], #24
0xffff8bd1017c   156  b #-0x8c (addr 0xffff8bd100f0)
0xffff8bd10180   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd10184   164  d63f03e0       constant
0xffff8bd10188   168  8bd0fee0       constant
0xffff8bd1018c   172  0000ffff       constant
0xffff8bd10190   176  movz x16, #0x0
0xffff8bd10194   180  sub csp, jssp, #0x10 (16)
0xffff8bd10198   184  stp fp, lr, [jssp, #-16]!
0xffff8bd1019c   188  bl #+0xc (addr 0xffff8bd101a8)
0xffff8bd101a0   192  movz x16, #0x8
0xffff8bd101a4   196  bl #+0x14 (addr 0xffff8bd101b8)
0xffff8bd101a8   200  movz x17, #0xa00000000
0xffff8bd101ac   204  sub csp, jssp, #0x10 (16)
0xffff8bd101b0   208  stp x17, cp, [jssp, #-16]!
0xffff8bd101b4   212  add fp, jssp, #0x10 (16)
0xffff8bd101b8   216  ldr x17, pc+24 (addr 0x0000ffff8bd101d0)    ;; lazy deoptimization bailout 0
0xffff8bd101bc   220  add x17, x17, x16
0xffff8bd101c0   224  br x17
0xffff8bd101c4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd101c8   232  d63f03e0       constant
0xffff8bd101cc   236  d503201f       constant
0xffff8bd101d0   240  8bb06000       constant
0xffff8bd101d4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd10144  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd10180  constant pool (size 16)
0xffff8bd101b8  runtime entry
0xffff8bd101c4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4258
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10240     0  mov x2, x1
0xffff8bd10244     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10258)
0xffff8bd10248     8  mov x3, x0
0xffff8bd1024c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10268)
0xffff8bd10250    16  and x0, x3, x2
0xffff8bd10254    20  ret
0xffff8bd10258    24  movz x16, #0x0
0xffff8bd1025c    28  sub csp, jssp, #0x10 (16)
0xffff8bd10260    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10264    36  bl #+0x14 (addr 0xffff8bd10278)
0xffff8bd10268    40  movz x16, #0x8
0xffff8bd1026c    44  sub csp, jssp, #0x10 (16)
0xffff8bd10270    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10274    52  bl #+0x4 (addr 0xffff8bd10278)
0xffff8bd10278    56  movz x17, #0xa00000000
0xffff8bd1027c    60  sub csp, jssp, #0x10 (16)
0xffff8bd10280    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10284    68  add fp, jssp, #0x10 (16)
0xffff8bd10288    72  ldr x17, pc+24 (addr 0x0000ffff8bd102a0)    ;; lazy deoptimization bailout 0
0xffff8bd1028c    76  add x17, x17, x16
0xffff8bd10290    80  br x17
0xffff8bd10294    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10298    88  d63f03e0       constant
0xffff8bd1029c    92  d503201f       constant
0xffff8bd102a0    96  8bb06000       constant
0xffff8bd102a4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10288  runtime entry
0xffff8bd10294  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4258
type = NORMAL
name = BinaryOpICStub(BIT_AND:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10240     0  mov x2, x1
0xffff8bd10244     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10258)
0xffff8bd10248     8  mov x3, x0
0xffff8bd1024c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10268)
0xffff8bd10250    16  and x0, x3, x2
0xffff8bd10254    20  ret
0xffff8bd10258    24  movz x16, #0x0
0xffff8bd1025c    28  sub csp, jssp, #0x10 (16)
0xffff8bd10260    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10264    36  bl #+0x14 (addr 0xffff8bd10278)
0xffff8bd10268    40  movz x16, #0x8
0xffff8bd1026c    44  sub csp, jssp, #0x10 (16)
0xffff8bd10270    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10274    52  bl #+0x4 (addr 0xffff8bd10278)
0xffff8bd10278    56  movz x17, #0xa00000000
0xffff8bd1027c    60  sub csp, jssp, #0x10 (16)
0xffff8bd10280    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10284    68  add fp, jssp, #0x10 (16)
0xffff8bd10288    72  ldr x17, pc+24 (addr 0x0000ffff8bd102a0)    ;; lazy deoptimization bailout 0
0xffff8bd1028c    76  add x17, x17, x16
0xffff8bd10290    80  br x17
0xffff8bd10294    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10298    88  d63f03e0       constant
0xffff8bd1029c    92  d503201f       constant
0xffff8bd102a0    96  8bb06000       constant
0xffff8bd102a4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10288  runtime entry
0xffff8bd10294  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4242
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10320     0  mov x2, x1
0xffff8bd10324     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10338)
0xffff8bd10328     8  mov x3, x0
0xffff8bd1032c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10348)
0xffff8bd10330    16  and x0, x3, x2
0xffff8bd10334    20  ret
0xffff8bd10338    24  movz x16, #0x0
0xffff8bd1033c    28  sub csp, jssp, #0x10 (16)
0xffff8bd10340    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10344    36  bl #+0x14 (addr 0xffff8bd10358)
0xffff8bd10348    40  movz x16, #0x8
0xffff8bd1034c    44  sub csp, jssp, #0x10 (16)
0xffff8bd10350    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10354    52  bl #+0x4 (addr 0xffff8bd10358)
0xffff8bd10358    56  movz x17, #0xa00000000
0xffff8bd1035c    60  sub csp, jssp, #0x10 (16)
0xffff8bd10360    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10364    68  add fp, jssp, #0x10 (16)
0xffff8bd10368    72  ldr x17, pc+24 (addr 0x0000ffff8bd10380)    ;; lazy deoptimization bailout 0
0xffff8bd1036c    76  add x17, x17, x16
0xffff8bd10370    80  br x17
0xffff8bd10374    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10378    88  d63f03e0       constant
0xffff8bd1037c    92  d503201f       constant
0xffff8bd10380    96  8bb06000       constant
0xffff8bd10384   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10368  runtime entry
0xffff8bd10374  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4242
type = NORMAL
name = BinaryOpICStub(BIT_AND:Smi*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10320     0  mov x2, x1
0xffff8bd10324     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10338)
0xffff8bd10328     8  mov x3, x0
0xffff8bd1032c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10348)
0xffff8bd10330    16  and x0, x3, x2
0xffff8bd10334    20  ret
0xffff8bd10338    24  movz x16, #0x0
0xffff8bd1033c    28  sub csp, jssp, #0x10 (16)
0xffff8bd10340    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10344    36  bl #+0x14 (addr 0xffff8bd10358)
0xffff8bd10348    40  movz x16, #0x8
0xffff8bd1034c    44  sub csp, jssp, #0x10 (16)
0xffff8bd10350    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10354    52  bl #+0x4 (addr 0xffff8bd10358)
0xffff8bd10358    56  movz x17, #0xa00000000
0xffff8bd1035c    60  sub csp, jssp, #0x10 (16)
0xffff8bd10360    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10364    68  add fp, jssp, #0x10 (16)
0xffff8bd10368    72  ldr x17, pc+24 (addr 0x0000ffff8bd10380)    ;; lazy deoptimization bailout 0
0xffff8bd1036c    76  add x17, x17, x16
0xffff8bd10370    80  br x17
0xffff8bd10374    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10378    88  d63f03e0       constant
0xffff8bd1037c    92  d503201f       constant
0xffff8bd10380    96  8bb06000       constant
0xffff8bd10384   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10368  runtime entry
0xffff8bd10374  constant pool (size 20)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff8bd10400     0  sub csp, jssp, #0x10 (16)
0xffff8bd10404     4  stp x2, x1, [jssp, #-16]!
0xffff8bd10408     8  ldur x4, [x0, #7]
0xffff8bd1040c    12  ubfx x1, x4, #52, #11
0xffff8bd10410    16  cmp x1, #0x453 (1107)
0xffff8bd10414    20  csel x4, xzr, x4, ge
0xffff8bd10418    24  b.ge #+0x1c (addr 0xffff8bd10434)
0xffff8bd1041c    28  ubfx x2, x4, #0, #52
0xffff8bd10420    32  orr x2, x2, #0x10000000000000
0xffff8bd10424    36  tst x4, #0x8000000000000000
0xffff8bd10428    40  cneg x2, x2, ne
0xffff8bd1042c    44  sub x1, x1, #0x433 (1075)
0xffff8bd10430    48  lsl x4, x2, x1
0xffff8bd10434    52  ldp x2, x1, [jssp], #16
0xffff8bd10438    56  ret


RelocInfo (size = 0)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6290
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff8bd104a0     0  mov x2, x1
0xffff8bd104a4     4  tbnz w2, #0, #+0xac (addr 0xffff8bd10550)
0xffff8bd104a8     8  tbnz w0, #0, #+0x18 (addr 0xffff8bd104c0)
0xffff8bd104ac    12  asr x4, x0, #32
0xffff8bd104b0    16  asr x0, x2, #32
0xffff8bd104b4    20  and w0, w4, w0
0xffff8bd104b8    24  lsl x0, x0, #32
0xffff8bd104bc    28  ret
0xffff8bd104c0    32  sub csp, jssp, #0x10 (16)
0xffff8bd104c4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd104c8    40  movz fp, #0xa00000000
0xffff8bd104cc    44  sub csp, jssp, #0x8 (8)
0xffff8bd104d0    48  str fp, [jssp, #-8]!
0xffff8bd104d4    52  add fp, jssp, #0x8 (8)
0xffff8bd104d8    56  ldur x16, [x0, #-1]
0xffff8bd104dc    60  ldr x17, [x26, #120]
0xffff8bd104e0    64  cmp x16, x17
0xffff8bd104e4    68  b.ne #+0x30 (addr 0xffff8bd10514)
0xffff8bd104e8    72  ldur d30, [x0, #7]
0xffff8bd104ec    76  fcvtzs x4, d30
0xffff8bd104f0    80  cmp x4, #0x1 (1)
0xffff8bd104f4    84  ccmn x4, #1, #nzcV, vc
0xffff8bd104f8    88  b.vc #+0x18 (addr 0xffff8bd10510)
0xffff8bd104fc    92  sub csp, jssp, #0x8 (8)
0xffff8bd10500    96  str lr, [jssp, #-8]!
0xffff8bd10504   100  ldr x16, pc+68 (addr 0x0000ffff8bd10548)    ;; code: STUB, DoubleToIStub, minor: 127232
0xffff8bd10508   104  blr x16
0xffff8bd1050c   108  ldr lr, [jssp], #8
0xffff8bd10510   112  b #+0x24 (addr 0xffff8bd10534)
0xffff8bd10514   116  ldp x4, x3, [x26, #64]
0xffff8bd10518   120  cmp x0, x4
0xffff8bd1051c   124  cset x4, eq
0xffff8bd10520   128  ccmp x0, x3, #nZcv, ne
0xffff8bd10524   132  b.eq #+0x10 (addr 0xffff8bd10534)
0xffff8bd10528   136  ldr x16, [x26, #40]
0xffff8bd1052c   140  cmp x0, x16
0xffff8bd10530   144  b.ne #+0x30 (addr 0xffff8bd10560)
0xffff8bd10534   148  ldr lr, [jssp, #16]
0xffff8bd10538   152  ldp xzr, fp, [jssp], #24
0xffff8bd1053c   156  b #-0x8c (addr 0xffff8bd104b0)
0xffff8bd10540   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd10544   164  d63f03e0       constant
0xffff8bd10548   168  8bd10400       constant
0xffff8bd1054c   172  0000ffff       constant
0xffff8bd10550   176  movz x16, #0x0
0xffff8bd10554   180  sub csp, jssp, #0x10 (16)
0xffff8bd10558   184  stp fp, lr, [jssp, #-16]!
0xffff8bd1055c   188  bl #+0xc (addr 0xffff8bd10568)
0xffff8bd10560   192  movz x16, #0x8
0xffff8bd10564   196  bl #+0x14 (addr 0xffff8bd10578)
0xffff8bd10568   200  movz x17, #0xa00000000
0xffff8bd1056c   204  sub csp, jssp, #0x10 (16)
0xffff8bd10570   208  stp x17, cp, [jssp, #-16]!
0xffff8bd10574   212  add fp, jssp, #0x10 (16)
0xffff8bd10578   216  ldr x17, pc+24 (addr 0x0000ffff8bd10590)    ;; lazy deoptimization bailout 0
0xffff8bd1057c   220  add x17, x17, x16
0xffff8bd10580   224  br x17
0xffff8bd10584   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10588   232  d63f03e0       constant
0xffff8bd1058c   236  d503201f       constant
0xffff8bd10590   240  8bb06000       constant
0xffff8bd10594   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd10504  code target (STUB)  (0xffff8bd10400)
0xffff8bd10540  constant pool (size 16)
0xffff8bd10578  runtime entry
0xffff8bd10584  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6290
type = NORMAL
name = BinaryOpICStub(BIT_AND:Smi*Number->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff8bd104a0     0  mov x2, x1
0xffff8bd104a4     4  tbnz w2, #0, #+0xac (addr 0xffff8bd10550)
0xffff8bd104a8     8  tbnz w0, #0, #+0x18 (addr 0xffff8bd104c0)
0xffff8bd104ac    12  asr x4, x0, #32
0xffff8bd104b0    16  asr x0, x2, #32
0xffff8bd104b4    20  and w0, w4, w0
0xffff8bd104b8    24  lsl x0, x0, #32
0xffff8bd104bc    28  ret
0xffff8bd104c0    32  sub csp, jssp, #0x10 (16)
0xffff8bd104c4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd104c8    40  movz fp, #0xa00000000
0xffff8bd104cc    44  sub csp, jssp, #0x8 (8)
0xffff8bd104d0    48  str fp, [jssp, #-8]!
0xffff8bd104d4    52  add fp, jssp, #0x8 (8)
0xffff8bd104d8    56  ldur x16, [x0, #-1]
0xffff8bd104dc    60  ldr x17, [x26, #120]
0xffff8bd104e0    64  cmp x16, x17
0xffff8bd104e4    68  b.ne #+0x30 (addr 0xffff8bd10514)
0xffff8bd104e8    72  ldur d30, [x0, #7]
0xffff8bd104ec    76  fcvtzs x4, d30
0xffff8bd104f0    80  cmp x4, #0x1 (1)
0xffff8bd104f4    84  ccmn x4, #1, #nzcV, vc
0xffff8bd104f8    88  b.vc #+0x18 (addr 0xffff8bd10510)
0xffff8bd104fc    92  sub csp, jssp, #0x8 (8)
0xffff8bd10500    96  str lr, [jssp, #-8]!
0xffff8bd10504   100  ldr x16, pc+68 (addr 0x0000ffff8bd10548)    ;; code: STUB, DoubleToIStub, minor: 127232
0xffff8bd10508   104  blr x16
0xffff8bd1050c   108  ldr lr, [jssp], #8
0xffff8bd10510   112  b #+0x24 (addr 0xffff8bd10534)
0xffff8bd10514   116  ldp x4, x3, [x26, #64]
0xffff8bd10518   120  cmp x0, x4
0xffff8bd1051c   124  cset x4, eq
0xffff8bd10520   128  ccmp x0, x3, #nZcv, ne
0xffff8bd10524   132  b.eq #+0x10 (addr 0xffff8bd10534)
0xffff8bd10528   136  ldr x16, [x26, #40]
0xffff8bd1052c   140  cmp x0, x16
0xffff8bd10530   144  b.ne #+0x30 (addr 0xffff8bd10560)
0xffff8bd10534   148  ldr lr, [jssp, #16]
0xffff8bd10538   152  ldp xzr, fp, [jssp], #24
0xffff8bd1053c   156  b #-0x8c (addr 0xffff8bd104b0)
0xffff8bd10540   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd10544   164  d63f03e0       constant
0xffff8bd10548   168  8bd10400       constant
0xffff8bd1054c   172  0000ffff       constant
0xffff8bd10550   176  movz x16, #0x0
0xffff8bd10554   180  sub csp, jssp, #0x10 (16)
0xffff8bd10558   184  stp fp, lr, [jssp, #-16]!
0xffff8bd1055c   188  bl #+0xc (addr 0xffff8bd10568)
0xffff8bd10560   192  movz x16, #0x8
0xffff8bd10564   196  bl #+0x14 (addr 0xffff8bd10578)
0xffff8bd10568   200  movz x17, #0xa00000000
0xffff8bd1056c   204  sub csp, jssp, #0x10 (16)
0xffff8bd10570   208  stp x17, cp, [jssp, #-16]!
0xffff8bd10574   212  add fp, jssp, #0x10 (16)
0xffff8bd10578   216  ldr x17, pc+24 (addr 0x0000ffff8bd10590)    ;; lazy deoptimization bailout 0
0xffff8bd1057c   220  add x17, x17, x16
0xffff8bd10580   224  br x17
0xffff8bd10584   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10588   232  d63f03e0       constant
0xffff8bd1058c   236  d503201f       constant
0xffff8bd10590   240  8bb06000       constant
0xffff8bd10594   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd10504  code target (STUB)  (0xffff8bd10400)
0xffff8bd10540  constant pool (size 16)
0xffff8bd10578  runtime entry
0xffff8bd10584  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2194
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10600     0  mov x2, x1
0xffff8bd10604     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10618)
0xffff8bd10608     8  mov x3, x0
0xffff8bd1060c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10628)
0xffff8bd10610    16  and x0, x3, x2
0xffff8bd10614    20  ret
0xffff8bd10618    24  movz x16, #0x0
0xffff8bd1061c    28  sub csp, jssp, #0x10 (16)
0xffff8bd10620    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10624    36  bl #+0x14 (addr 0xffff8bd10638)
0xffff8bd10628    40  movz x16, #0x8
0xffff8bd1062c    44  sub csp, jssp, #0x10 (16)
0xffff8bd10630    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10634    52  bl #+0x4 (addr 0xffff8bd10638)
0xffff8bd10638    56  movz x17, #0xa00000000
0xffff8bd1063c    60  sub csp, jssp, #0x10 (16)
0xffff8bd10640    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10644    68  add fp, jssp, #0x10 (16)
0xffff8bd10648    72  ldr x17, pc+24 (addr 0x0000ffff8bd10660)    ;; lazy deoptimization bailout 0
0xffff8bd1064c    76  add x17, x17, x16
0xffff8bd10650    80  br x17
0xffff8bd10654    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10658    88  d63f03e0       constant
0xffff8bd1065c    92  d503201f       constant
0xffff8bd10660    96  8bb06000       constant
0xffff8bd10664   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10648  runtime entry
0xffff8bd10654  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2194
type = NORMAL
name = BinaryOpICStub(BIT_AND:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10600     0  mov x2, x1
0xffff8bd10604     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10618)
0xffff8bd10608     8  mov x3, x0
0xffff8bd1060c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10628)
0xffff8bd10610    16  and x0, x3, x2
0xffff8bd10614    20  ret
0xffff8bd10618    24  movz x16, #0x0
0xffff8bd1061c    28  sub csp, jssp, #0x10 (16)
0xffff8bd10620    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10624    36  bl #+0x14 (addr 0xffff8bd10638)
0xffff8bd10628    40  movz x16, #0x8
0xffff8bd1062c    44  sub csp, jssp, #0x10 (16)
0xffff8bd10630    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10634    52  bl #+0x4 (addr 0xffff8bd10638)
0xffff8bd10638    56  movz x17, #0xa00000000
0xffff8bd1063c    60  sub csp, jssp, #0x10 (16)
0xffff8bd10640    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10644    68  add fp, jssp, #0x10 (16)
0xffff8bd10648    72  ldr x17, pc+24 (addr 0x0000ffff8bd10660)    ;; lazy deoptimization bailout 0
0xffff8bd1064c    76  add x17, x17, x16
0xffff8bd10650    80  br x17
0xffff8bd10654    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10658    88  d63f03e0       constant
0xffff8bd1065c    92  d503201f       constant
0xffff8bd10660    96  8bb06000       constant
0xffff8bd10664   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10648  runtime entry
0xffff8bd10654  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4384
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd106e0     0  mov x2, x1
0xffff8bd106e4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd106f8)
0xffff8bd106e8     8  mov x3, x0
0xffff8bd106ec    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10708)
0xffff8bd106f0    16  orr x0, x3, x2
0xffff8bd106f4    20  ret
0xffff8bd106f8    24  movz x16, #0x0
0xffff8bd106fc    28  sub csp, jssp, #0x10 (16)
0xffff8bd10700    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10704    36  bl #+0x14 (addr 0xffff8bd10718)
0xffff8bd10708    40  movz x16, #0x8
0xffff8bd1070c    44  sub csp, jssp, #0x10 (16)
0xffff8bd10710    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10714    52  bl #+0x4 (addr 0xffff8bd10718)
0xffff8bd10718    56  movz x17, #0xa00000000
0xffff8bd1071c    60  sub csp, jssp, #0x10 (16)
0xffff8bd10720    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10724    68  add fp, jssp, #0x10 (16)
0xffff8bd10728    72  ldr x17, pc+24 (addr 0x0000ffff8bd10740)    ;; lazy deoptimization bailout 0
0xffff8bd1072c    76  add x17, x17, x16
0xffff8bd10730    80  br x17
0xffff8bd10734    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10738    88  d63f03e0       constant
0xffff8bd1073c    92  d503201f       constant
0xffff8bd10740    96  8bb06000       constant
0xffff8bd10744   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10728  runtime entry
0xffff8bd10734  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4384
type = NORMAL
name = BinaryOpICStub(BIT_OR:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd106e0     0  mov x2, x1
0xffff8bd106e4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd106f8)
0xffff8bd106e8     8  mov x3, x0
0xffff8bd106ec    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10708)
0xffff8bd106f0    16  orr x0, x3, x2
0xffff8bd106f4    20  ret
0xffff8bd106f8    24  movz x16, #0x0
0xffff8bd106fc    28  sub csp, jssp, #0x10 (16)
0xffff8bd10700    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10704    36  bl #+0x14 (addr 0xffff8bd10718)
0xffff8bd10708    40  movz x16, #0x8
0xffff8bd1070c    44  sub csp, jssp, #0x10 (16)
0xffff8bd10710    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10714    52  bl #+0x4 (addr 0xffff8bd10718)
0xffff8bd10718    56  movz x17, #0xa00000000
0xffff8bd1071c    60  sub csp, jssp, #0x10 (16)
0xffff8bd10720    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10724    68  add fp, jssp, #0x10 (16)
0xffff8bd10728    72  ldr x17, pc+24 (addr 0x0000ffff8bd10740)    ;; lazy deoptimization bailout 0
0xffff8bd1072c    76  add x17, x17, x16
0xffff8bd10730    80  br x17
0xffff8bd10734    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10738    88  d63f03e0       constant
0xffff8bd1073c    92  d503201f       constant
0xffff8bd10740    96  8bb06000       constant
0xffff8bd10744   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10728  runtime entry
0xffff8bd10734  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4368
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd107c0     0  mov x2, x1
0xffff8bd107c4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd107d8)
0xffff8bd107c8     8  mov x3, x0
0xffff8bd107cc    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd107e8)
0xffff8bd107d0    16  orr x0, x3, x2
0xffff8bd107d4    20  ret
0xffff8bd107d8    24  movz x16, #0x0
0xffff8bd107dc    28  sub csp, jssp, #0x10 (16)
0xffff8bd107e0    32  stp fp, lr, [jssp, #-16]!
0xffff8bd107e4    36  bl #+0x14 (addr 0xffff8bd107f8)
0xffff8bd107e8    40  movz x16, #0x8
0xffff8bd107ec    44  sub csp, jssp, #0x10 (16)
0xffff8bd107f0    48  stp fp, lr, [jssp, #-16]!
0xffff8bd107f4    52  bl #+0x4 (addr 0xffff8bd107f8)
0xffff8bd107f8    56  movz x17, #0xa00000000
0xffff8bd107fc    60  sub csp, jssp, #0x10 (16)
0xffff8bd10800    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10804    68  add fp, jssp, #0x10 (16)
0xffff8bd10808    72  ldr x17, pc+24 (addr 0x0000ffff8bd10820)    ;; lazy deoptimization bailout 0
0xffff8bd1080c    76  add x17, x17, x16
0xffff8bd10810    80  br x17
0xffff8bd10814    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10818    88  d63f03e0       constant
0xffff8bd1081c    92  d503201f       constant
0xffff8bd10820    96  8bb06000       constant
0xffff8bd10824   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10808  runtime entry
0xffff8bd10814  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4368
type = NORMAL
name = BinaryOpICStub(BIT_OR:Int32*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd107c0     0  mov x2, x1
0xffff8bd107c4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd107d8)
0xffff8bd107c8     8  mov x3, x0
0xffff8bd107cc    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd107e8)
0xffff8bd107d0    16  orr x0, x3, x2
0xffff8bd107d4    20  ret
0xffff8bd107d8    24  movz x16, #0x0
0xffff8bd107dc    28  sub csp, jssp, #0x10 (16)
0xffff8bd107e0    32  stp fp, lr, [jssp, #-16]!
0xffff8bd107e4    36  bl #+0x14 (addr 0xffff8bd107f8)
0xffff8bd107e8    40  movz x16, #0x8
0xffff8bd107ec    44  sub csp, jssp, #0x10 (16)
0xffff8bd107f0    48  stp fp, lr, [jssp, #-16]!
0xffff8bd107f4    52  bl #+0x4 (addr 0xffff8bd107f8)
0xffff8bd107f8    56  movz x17, #0xa00000000
0xffff8bd107fc    60  sub csp, jssp, #0x10 (16)
0xffff8bd10800    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10804    68  add fp, jssp, #0x10 (16)
0xffff8bd10808    72  ldr x17, pc+24 (addr 0x0000ffff8bd10820)    ;; lazy deoptimization bailout 0
0xffff8bd1080c    76  add x17, x17, x16
0xffff8bd10810    80  br x17
0xffff8bd10814    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10818    88  d63f03e0       constant
0xffff8bd1081c    92  d503201f       constant
0xffff8bd10820    96  8bb06000       constant
0xffff8bd10824   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10808  runtime entry
0xffff8bd10814  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2336
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd108a0     0  mov x2, x1
0xffff8bd108a4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd108b8)
0xffff8bd108a8     8  mov x3, x0
0xffff8bd108ac    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd108c8)
0xffff8bd108b0    16  orr x0, x3, x2
0xffff8bd108b4    20  ret
0xffff8bd108b8    24  movz x16, #0x0
0xffff8bd108bc    28  sub csp, jssp, #0x10 (16)
0xffff8bd108c0    32  stp fp, lr, [jssp, #-16]!
0xffff8bd108c4    36  bl #+0x14 (addr 0xffff8bd108d8)
0xffff8bd108c8    40  movz x16, #0x8
0xffff8bd108cc    44  sub csp, jssp, #0x10 (16)
0xffff8bd108d0    48  stp fp, lr, [jssp, #-16]!
0xffff8bd108d4    52  bl #+0x4 (addr 0xffff8bd108d8)
0xffff8bd108d8    56  movz x17, #0xa00000000
0xffff8bd108dc    60  sub csp, jssp, #0x10 (16)
0xffff8bd108e0    64  stp x17, cp, [jssp, #-16]!
0xffff8bd108e4    68  add fp, jssp, #0x10 (16)
0xffff8bd108e8    72  ldr x17, pc+24 (addr 0x0000ffff8bd10900)    ;; lazy deoptimization bailout 0
0xffff8bd108ec    76  add x17, x17, x16
0xffff8bd108f0    80  br x17
0xffff8bd108f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd108f8    88  d63f03e0       constant
0xffff8bd108fc    92  d503201f       constant
0xffff8bd10900    96  8bb06000       constant
0xffff8bd10904   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd108e8  runtime entry
0xffff8bd108f4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2336
type = NORMAL
name = BinaryOpICStub(BIT_OR:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd108a0     0  mov x2, x1
0xffff8bd108a4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd108b8)
0xffff8bd108a8     8  mov x3, x0
0xffff8bd108ac    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd108c8)
0xffff8bd108b0    16  orr x0, x3, x2
0xffff8bd108b4    20  ret
0xffff8bd108b8    24  movz x16, #0x0
0xffff8bd108bc    28  sub csp, jssp, #0x10 (16)
0xffff8bd108c0    32  stp fp, lr, [jssp, #-16]!
0xffff8bd108c4    36  bl #+0x14 (addr 0xffff8bd108d8)
0xffff8bd108c8    40  movz x16, #0x8
0xffff8bd108cc    44  sub csp, jssp, #0x10 (16)
0xffff8bd108d0    48  stp fp, lr, [jssp, #-16]!
0xffff8bd108d4    52  bl #+0x4 (addr 0xffff8bd108d8)
0xffff8bd108d8    56  movz x17, #0xa00000000
0xffff8bd108dc    60  sub csp, jssp, #0x10 (16)
0xffff8bd108e0    64  stp x17, cp, [jssp, #-16]!
0xffff8bd108e4    68  add fp, jssp, #0x10 (16)
0xffff8bd108e8    72  ldr x17, pc+24 (addr 0x0000ffff8bd10900)    ;; lazy deoptimization bailout 0
0xffff8bd108ec    76  add x17, x17, x16
0xffff8bd108f0    80  br x17
0xffff8bd108f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd108f8    88  d63f03e0       constant
0xffff8bd108fc    92  d503201f       constant
0xffff8bd10900    96  8bb06000       constant
0xffff8bd10904   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd108e8  runtime entry
0xffff8bd108f4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2320
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10980     0  mov x2, x1
0xffff8bd10984     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10998)
0xffff8bd10988     8  mov x3, x0
0xffff8bd1098c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd109a8)
0xffff8bd10990    16  orr x0, x3, x2
0xffff8bd10994    20  ret
0xffff8bd10998    24  movz x16, #0x0
0xffff8bd1099c    28  sub csp, jssp, #0x10 (16)
0xffff8bd109a0    32  stp fp, lr, [jssp, #-16]!
0xffff8bd109a4    36  bl #+0x14 (addr 0xffff8bd109b8)
0xffff8bd109a8    40  movz x16, #0x8
0xffff8bd109ac    44  sub csp, jssp, #0x10 (16)
0xffff8bd109b0    48  stp fp, lr, [jssp, #-16]!
0xffff8bd109b4    52  bl #+0x4 (addr 0xffff8bd109b8)
0xffff8bd109b8    56  movz x17, #0xa00000000
0xffff8bd109bc    60  sub csp, jssp, #0x10 (16)
0xffff8bd109c0    64  stp x17, cp, [jssp, #-16]!
0xffff8bd109c4    68  add fp, jssp, #0x10 (16)
0xffff8bd109c8    72  ldr x17, pc+24 (addr 0x0000ffff8bd109e0)    ;; lazy deoptimization bailout 0
0xffff8bd109cc    76  add x17, x17, x16
0xffff8bd109d0    80  br x17
0xffff8bd109d4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd109d8    88  d63f03e0       constant
0xffff8bd109dc    92  d503201f       constant
0xffff8bd109e0    96  8bb06000       constant
0xffff8bd109e4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd109c8  runtime entry
0xffff8bd109d4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2320
type = NORMAL
name = BinaryOpICStub(BIT_OR:Int32*Smi->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10980     0  mov x2, x1
0xffff8bd10984     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10998)
0xffff8bd10988     8  mov x3, x0
0xffff8bd1098c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd109a8)
0xffff8bd10990    16  orr x0, x3, x2
0xffff8bd10994    20  ret
0xffff8bd10998    24  movz x16, #0x0
0xffff8bd1099c    28  sub csp, jssp, #0x10 (16)
0xffff8bd109a0    32  stp fp, lr, [jssp, #-16]!
0xffff8bd109a4    36  bl #+0x14 (addr 0xffff8bd109b8)
0xffff8bd109a8    40  movz x16, #0x8
0xffff8bd109ac    44  sub csp, jssp, #0x10 (16)
0xffff8bd109b0    48  stp fp, lr, [jssp, #-16]!
0xffff8bd109b4    52  bl #+0x4 (addr 0xffff8bd109b8)
0xffff8bd109b8    56  movz x17, #0xa00000000
0xffff8bd109bc    60  sub csp, jssp, #0x10 (16)
0xffff8bd109c0    64  stp x17, cp, [jssp, #-16]!
0xffff8bd109c4    68  add fp, jssp, #0x10 (16)
0xffff8bd109c8    72  ldr x17, pc+24 (addr 0x0000ffff8bd109e0)    ;; lazy deoptimization bailout 0
0xffff8bd109cc    76  add x17, x17, x16
0xffff8bd109d0    80  br x17
0xffff8bd109d4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd109d8    88  d63f03e0       constant
0xffff8bd109dc    92  d503201f       constant
0xffff8bd109e0    96  8bb06000       constant
0xffff8bd109e4   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd109c8  runtime entry
0xffff8bd109d4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2464
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff8bd10a60     0  mov x2, x0
0xffff8bd10a64     4  tbnz w2, #0, #+0xac (addr 0xffff8bd10b10)
0xffff8bd10a68     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd10a80)
0xffff8bd10a6c    12  asr x4, x1, #32
0xffff8bd10a70    16  asr x0, x2, #32
0xffff8bd10a74    20  orr w0, w0, w4
0xffff8bd10a78    24  lsl x0, x0, #32
0xffff8bd10a7c    28  ret
0xffff8bd10a80    32  sub csp, jssp, #0x10 (16)
0xffff8bd10a84    36  stp fp, lr, [jssp, #-16]!
0xffff8bd10a88    40  movz fp, #0xa00000000
0xffff8bd10a8c    44  sub csp, jssp, #0x8 (8)
0xffff8bd10a90    48  str fp, [jssp, #-8]!
0xffff8bd10a94    52  add fp, jssp, #0x8 (8)
0xffff8bd10a98    56  ldur x16, [x1, #-1]
0xffff8bd10a9c    60  ldr x17, [x26, #120]
0xffff8bd10aa0    64  cmp x16, x17
0xffff8bd10aa4    68  b.ne #+0x30 (addr 0xffff8bd10ad4)
0xffff8bd10aa8    72  ldur d30, [x1, #7]
0xffff8bd10aac    76  fcvtzs x4, d30
0xffff8bd10ab0    80  cmp x4, #0x1 (1)
0xffff8bd10ab4    84  ccmn x4, #1, #nzcV, vc
0xffff8bd10ab8    88  b.vc #+0x18 (addr 0xffff8bd10ad0)
0xffff8bd10abc    92  sub csp, jssp, #0x8 (8)
0xffff8bd10ac0    96  str lr, [jssp, #-8]!
0xffff8bd10ac4   100  ldr x16, pc+68 (addr 0x0000ffff8bd10b08)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd10ac8   104  blr x16
0xffff8bd10acc   108  ldr lr, [jssp], #8
0xffff8bd10ad0   112  b #+0x24 (addr 0xffff8bd10af4)
0xffff8bd10ad4   116  ldp x4, x3, [x26, #64]
0xffff8bd10ad8   120  cmp x1, x4
0xffff8bd10adc   124  cset x4, eq
0xffff8bd10ae0   128  ccmp x1, x3, #nZcv, ne
0xffff8bd10ae4   132  b.eq #+0x10 (addr 0xffff8bd10af4)
0xffff8bd10ae8   136  ldr x16, [x26, #40]
0xffff8bd10aec   140  cmp x1, x16
0xffff8bd10af0   144  b.ne #+0x30 (addr 0xffff8bd10b20)
0xffff8bd10af4   148  ldr lr, [jssp, #16]
0xffff8bd10af8   152  ldp xzr, fp, [jssp], #24
0xffff8bd10afc   156  b #-0x8c (addr 0xffff8bd10a70)
0xffff8bd10b00   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd10b04   164  d63f03e0       constant
0xffff8bd10b08   168  8bd0fee0       constant
0xffff8bd10b0c   172  0000ffff       constant
0xffff8bd10b10   176  movz x16, #0x0
0xffff8bd10b14   180  sub csp, jssp, #0x10 (16)
0xffff8bd10b18   184  stp fp, lr, [jssp, #-16]!
0xffff8bd10b1c   188  bl #+0xc (addr 0xffff8bd10b28)
0xffff8bd10b20   192  movz x16, #0x8
0xffff8bd10b24   196  bl #+0x14 (addr 0xffff8bd10b38)
0xffff8bd10b28   200  movz x17, #0xa00000000
0xffff8bd10b2c   204  sub csp, jssp, #0x10 (16)
0xffff8bd10b30   208  stp x17, cp, [jssp, #-16]!
0xffff8bd10b34   212  add fp, jssp, #0x10 (16)
0xffff8bd10b38   216  ldr x17, pc+24 (addr 0x0000ffff8bd10b50)    ;; lazy deoptimization bailout 0
0xffff8bd10b3c   220  add x17, x17, x16
0xffff8bd10b40   224  br x17
0xffff8bd10b44   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10b48   232  d63f03e0       constant
0xffff8bd10b4c   236  d503201f       constant
0xffff8bd10b50   240  8bb06000       constant
0xffff8bd10b54   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd10ac4  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd10b00  constant pool (size 16)
0xffff8bd10b38  runtime entry
0xffff8bd10b44  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2464
type = NORMAL
name = BinaryOpICStub(BIT_OR:Number*Smi->Int32)
compiler = crankshaft
Instructions (size = 256)
0xffff8bd10a60     0  mov x2, x0
0xffff8bd10a64     4  tbnz w2, #0, #+0xac (addr 0xffff8bd10b10)
0xffff8bd10a68     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd10a80)
0xffff8bd10a6c    12  asr x4, x1, #32
0xffff8bd10a70    16  asr x0, x2, #32
0xffff8bd10a74    20  orr w0, w0, w4
0xffff8bd10a78    24  lsl x0, x0, #32
0xffff8bd10a7c    28  ret
0xffff8bd10a80    32  sub csp, jssp, #0x10 (16)
0xffff8bd10a84    36  stp fp, lr, [jssp, #-16]!
0xffff8bd10a88    40  movz fp, #0xa00000000
0xffff8bd10a8c    44  sub csp, jssp, #0x8 (8)
0xffff8bd10a90    48  str fp, [jssp, #-8]!
0xffff8bd10a94    52  add fp, jssp, #0x8 (8)
0xffff8bd10a98    56  ldur x16, [x1, #-1]
0xffff8bd10a9c    60  ldr x17, [x26, #120]
0xffff8bd10aa0    64  cmp x16, x17
0xffff8bd10aa4    68  b.ne #+0x30 (addr 0xffff8bd10ad4)
0xffff8bd10aa8    72  ldur d30, [x1, #7]
0xffff8bd10aac    76  fcvtzs x4, d30
0xffff8bd10ab0    80  cmp x4, #0x1 (1)
0xffff8bd10ab4    84  ccmn x4, #1, #nzcV, vc
0xffff8bd10ab8    88  b.vc #+0x18 (addr 0xffff8bd10ad0)
0xffff8bd10abc    92  sub csp, jssp, #0x8 (8)
0xffff8bd10ac0    96  str lr, [jssp, #-8]!
0xffff8bd10ac4   100  ldr x16, pc+68 (addr 0x0000ffff8bd10b08)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd10ac8   104  blr x16
0xffff8bd10acc   108  ldr lr, [jssp], #8
0xffff8bd10ad0   112  b #+0x24 (addr 0xffff8bd10af4)
0xffff8bd10ad4   116  ldp x4, x3, [x26, #64]
0xffff8bd10ad8   120  cmp x1, x4
0xffff8bd10adc   124  cset x4, eq
0xffff8bd10ae0   128  ccmp x1, x3, #nZcv, ne
0xffff8bd10ae4   132  b.eq #+0x10 (addr 0xffff8bd10af4)
0xffff8bd10ae8   136  ldr x16, [x26, #40]
0xffff8bd10aec   140  cmp x1, x16
0xffff8bd10af0   144  b.ne #+0x30 (addr 0xffff8bd10b20)
0xffff8bd10af4   148  ldr lr, [jssp, #16]
0xffff8bd10af8   152  ldp xzr, fp, [jssp], #24
0xffff8bd10afc   156  b #-0x8c (addr 0xffff8bd10a70)
0xffff8bd10b00   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd10b04   164  d63f03e0       constant
0xffff8bd10b08   168  8bd0fee0       constant
0xffff8bd10b0c   172  0000ffff       constant
0xffff8bd10b10   176  movz x16, #0x0
0xffff8bd10b14   180  sub csp, jssp, #0x10 (16)
0xffff8bd10b18   184  stp fp, lr, [jssp, #-16]!
0xffff8bd10b1c   188  bl #+0xc (addr 0xffff8bd10b28)
0xffff8bd10b20   192  movz x16, #0x8
0xffff8bd10b24   196  bl #+0x14 (addr 0xffff8bd10b38)
0xffff8bd10b28   200  movz x17, #0xa00000000
0xffff8bd10b2c   204  sub csp, jssp, #0x10 (16)
0xffff8bd10b30   208  stp x17, cp, [jssp, #-16]!
0xffff8bd10b34   212  add fp, jssp, #0x10 (16)
0xffff8bd10b38   216  ldr x17, pc+24 (addr 0x0000ffff8bd10b50)    ;; lazy deoptimization bailout 0
0xffff8bd10b3c   220  add x17, x17, x16
0xffff8bd10b40   224  br x17
0xffff8bd10b44   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10b48   232  d63f03e0       constant
0xffff8bd10b4c   236  d503201f       constant
0xffff8bd10b50   240  8bb06000       constant
0xffff8bd10b54   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd10ac4  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd10b00  constant pool (size 16)
0xffff8bd10b38  runtime entry
0xffff8bd10b44  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2448
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff8bd10bc0     0  mov x2, x0
0xffff8bd10bc4     4  tbnz w2, #0, #+0xac (addr 0xffff8bd10c70)
0xffff8bd10bc8     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd10be0)
0xffff8bd10bcc    12  asr x4, x1, #32
0xffff8bd10bd0    16  asr x0, x2, #32
0xffff8bd10bd4    20  orr w0, w0, w4
0xffff8bd10bd8    24  lsl x0, x0, #32
0xffff8bd10bdc    28  ret
0xffff8bd10be0    32  sub csp, jssp, #0x10 (16)
0xffff8bd10be4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd10be8    40  movz fp, #0xa00000000
0xffff8bd10bec    44  sub csp, jssp, #0x8 (8)
0xffff8bd10bf0    48  str fp, [jssp, #-8]!
0xffff8bd10bf4    52  add fp, jssp, #0x8 (8)
0xffff8bd10bf8    56  ldur x16, [x1, #-1]
0xffff8bd10bfc    60  ldr x17, [x26, #120]
0xffff8bd10c00    64  cmp x16, x17
0xffff8bd10c04    68  b.ne #+0x30 (addr 0xffff8bd10c34)
0xffff8bd10c08    72  ldur d30, [x1, #7]
0xffff8bd10c0c    76  fcvtzs x4, d30
0xffff8bd10c10    80  cmp x4, #0x1 (1)
0xffff8bd10c14    84  ccmn x4, #1, #nzcV, vc
0xffff8bd10c18    88  b.vc #+0x18 (addr 0xffff8bd10c30)
0xffff8bd10c1c    92  sub csp, jssp, #0x8 (8)
0xffff8bd10c20    96  str lr, [jssp, #-8]!
0xffff8bd10c24   100  ldr x16, pc+68 (addr 0x0000ffff8bd10c68)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd10c28   104  blr x16
0xffff8bd10c2c   108  ldr lr, [jssp], #8
0xffff8bd10c30   112  b #+0x24 (addr 0xffff8bd10c54)
0xffff8bd10c34   116  ldp x4, x3, [x26, #64]
0xffff8bd10c38   120  cmp x1, x4
0xffff8bd10c3c   124  cset x4, eq
0xffff8bd10c40   128  ccmp x1, x3, #nZcv, ne
0xffff8bd10c44   132  b.eq #+0x10 (addr 0xffff8bd10c54)
0xffff8bd10c48   136  ldr x16, [x26, #40]
0xffff8bd10c4c   140  cmp x1, x16
0xffff8bd10c50   144  b.ne #+0x30 (addr 0xffff8bd10c80)
0xffff8bd10c54   148  ldr lr, [jssp, #16]
0xffff8bd10c58   152  ldp xzr, fp, [jssp], #24
0xffff8bd10c5c   156  b #-0x8c (addr 0xffff8bd10bd0)
0xffff8bd10c60   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd10c64   164  d63f03e0       constant
0xffff8bd10c68   168  8bd0fee0       constant
0xffff8bd10c6c   172  0000ffff       constant
0xffff8bd10c70   176  movz x16, #0x0
0xffff8bd10c74   180  sub csp, jssp, #0x10 (16)
0xffff8bd10c78   184  stp fp, lr, [jssp, #-16]!
0xffff8bd10c7c   188  bl #+0xc (addr 0xffff8bd10c88)
0xffff8bd10c80   192  movz x16, #0x8
0xffff8bd10c84   196  bl #+0x14 (addr 0xffff8bd10c98)
0xffff8bd10c88   200  movz x17, #0xa00000000
0xffff8bd10c8c   204  sub csp, jssp, #0x10 (16)
0xffff8bd10c90   208  stp x17, cp, [jssp, #-16]!
0xffff8bd10c94   212  add fp, jssp, #0x10 (16)
0xffff8bd10c98   216  ldr x17, pc+24 (addr 0x0000ffff8bd10cb0)    ;; lazy deoptimization bailout 0
0xffff8bd10c9c   220  add x17, x17, x16
0xffff8bd10ca0   224  br x17
0xffff8bd10ca4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10ca8   232  d63f03e0       constant
0xffff8bd10cac   236  d503201f       constant
0xffff8bd10cb0   240  8bb06000       constant
0xffff8bd10cb4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd10c24  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd10c60  constant pool (size 16)
0xffff8bd10c98  runtime entry
0xffff8bd10ca4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2448
type = NORMAL
name = BinaryOpICStub(BIT_OR:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff8bd10bc0     0  mov x2, x0
0xffff8bd10bc4     4  tbnz w2, #0, #+0xac (addr 0xffff8bd10c70)
0xffff8bd10bc8     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd10be0)
0xffff8bd10bcc    12  asr x4, x1, #32
0xffff8bd10bd0    16  asr x0, x2, #32
0xffff8bd10bd4    20  orr w0, w0, w4
0xffff8bd10bd8    24  lsl x0, x0, #32
0xffff8bd10bdc    28  ret
0xffff8bd10be0    32  sub csp, jssp, #0x10 (16)
0xffff8bd10be4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd10be8    40  movz fp, #0xa00000000
0xffff8bd10bec    44  sub csp, jssp, #0x8 (8)
0xffff8bd10bf0    48  str fp, [jssp, #-8]!
0xffff8bd10bf4    52  add fp, jssp, #0x8 (8)
0xffff8bd10bf8    56  ldur x16, [x1, #-1]
0xffff8bd10bfc    60  ldr x17, [x26, #120]
0xffff8bd10c00    64  cmp x16, x17
0xffff8bd10c04    68  b.ne #+0x30 (addr 0xffff8bd10c34)
0xffff8bd10c08    72  ldur d30, [x1, #7]
0xffff8bd10c0c    76  fcvtzs x4, d30
0xffff8bd10c10    80  cmp x4, #0x1 (1)
0xffff8bd10c14    84  ccmn x4, #1, #nzcV, vc
0xffff8bd10c18    88  b.vc #+0x18 (addr 0xffff8bd10c30)
0xffff8bd10c1c    92  sub csp, jssp, #0x8 (8)
0xffff8bd10c20    96  str lr, [jssp, #-8]!
0xffff8bd10c24   100  ldr x16, pc+68 (addr 0x0000ffff8bd10c68)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd10c28   104  blr x16
0xffff8bd10c2c   108  ldr lr, [jssp], #8
0xffff8bd10c30   112  b #+0x24 (addr 0xffff8bd10c54)
0xffff8bd10c34   116  ldp x4, x3, [x26, #64]
0xffff8bd10c38   120  cmp x1, x4
0xffff8bd10c3c   124  cset x4, eq
0xffff8bd10c40   128  ccmp x1, x3, #nZcv, ne
0xffff8bd10c44   132  b.eq #+0x10 (addr 0xffff8bd10c54)
0xffff8bd10c48   136  ldr x16, [x26, #40]
0xffff8bd10c4c   140  cmp x1, x16
0xffff8bd10c50   144  b.ne #+0x30 (addr 0xffff8bd10c80)
0xffff8bd10c54   148  ldr lr, [jssp, #16]
0xffff8bd10c58   152  ldp xzr, fp, [jssp], #24
0xffff8bd10c5c   156  b #-0x8c (addr 0xffff8bd10bd0)
0xffff8bd10c60   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd10c64   164  d63f03e0       constant
0xffff8bd10c68   168  8bd0fee0       constant
0xffff8bd10c6c   172  0000ffff       constant
0xffff8bd10c70   176  movz x16, #0x0
0xffff8bd10c74   180  sub csp, jssp, #0x10 (16)
0xffff8bd10c78   184  stp fp, lr, [jssp, #-16]!
0xffff8bd10c7c   188  bl #+0xc (addr 0xffff8bd10c88)
0xffff8bd10c80   192  movz x16, #0x8
0xffff8bd10c84   196  bl #+0x14 (addr 0xffff8bd10c98)
0xffff8bd10c88   200  movz x17, #0xa00000000
0xffff8bd10c8c   204  sub csp, jssp, #0x10 (16)
0xffff8bd10c90   208  stp x17, cp, [jssp, #-16]!
0xffff8bd10c94   212  add fp, jssp, #0x10 (16)
0xffff8bd10c98   216  ldr x17, pc+24 (addr 0x0000ffff8bd10cb0)    ;; lazy deoptimization bailout 0
0xffff8bd10c9c   220  add x17, x17, x16
0xffff8bd10ca0   224  br x17
0xffff8bd10ca4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10ca8   232  d63f03e0       constant
0xffff8bd10cac   236  d503201f       constant
0xffff8bd10cb0   240  8bb06000       constant
0xffff8bd10cb4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd10c24  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd10c60  constant pool (size 16)
0xffff8bd10c98  runtime entry
0xffff8bd10ca4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4256
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10d20     0  mov x2, x1
0xffff8bd10d24     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10d38)
0xffff8bd10d28     8  mov x3, x0
0xffff8bd10d2c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10d48)
0xffff8bd10d30    16  orr x0, x3, x2
0xffff8bd10d34    20  ret
0xffff8bd10d38    24  movz x16, #0x0
0xffff8bd10d3c    28  sub csp, jssp, #0x10 (16)
0xffff8bd10d40    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10d44    36  bl #+0x14 (addr 0xffff8bd10d58)
0xffff8bd10d48    40  movz x16, #0x8
0xffff8bd10d4c    44  sub csp, jssp, #0x10 (16)
0xffff8bd10d50    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10d54    52  bl #+0x4 (addr 0xffff8bd10d58)
0xffff8bd10d58    56  movz x17, #0xa00000000
0xffff8bd10d5c    60  sub csp, jssp, #0x10 (16)
0xffff8bd10d60    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10d64    68  add fp, jssp, #0x10 (16)
0xffff8bd10d68    72  ldr x17, pc+24 (addr 0x0000ffff8bd10d80)    ;; lazy deoptimization bailout 0
0xffff8bd10d6c    76  add x17, x17, x16
0xffff8bd10d70    80  br x17
0xffff8bd10d74    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10d78    88  d63f03e0       constant
0xffff8bd10d7c    92  d503201f       constant
0xffff8bd10d80    96  8bb06000       constant
0xffff8bd10d84   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10d68  runtime entry
0xffff8bd10d74  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4256
type = NORMAL
name = BinaryOpICStub(BIT_OR:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10d20     0  mov x2, x1
0xffff8bd10d24     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10d38)
0xffff8bd10d28     8  mov x3, x0
0xffff8bd10d2c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10d48)
0xffff8bd10d30    16  orr x0, x3, x2
0xffff8bd10d34    20  ret
0xffff8bd10d38    24  movz x16, #0x0
0xffff8bd10d3c    28  sub csp, jssp, #0x10 (16)
0xffff8bd10d40    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10d44    36  bl #+0x14 (addr 0xffff8bd10d58)
0xffff8bd10d48    40  movz x16, #0x8
0xffff8bd10d4c    44  sub csp, jssp, #0x10 (16)
0xffff8bd10d50    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10d54    52  bl #+0x4 (addr 0xffff8bd10d58)
0xffff8bd10d58    56  movz x17, #0xa00000000
0xffff8bd10d5c    60  sub csp, jssp, #0x10 (16)
0xffff8bd10d60    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10d64    68  add fp, jssp, #0x10 (16)
0xffff8bd10d68    72  ldr x17, pc+24 (addr 0x0000ffff8bd10d80)    ;; lazy deoptimization bailout 0
0xffff8bd10d6c    76  add x17, x17, x16
0xffff8bd10d70    80  br x17
0xffff8bd10d74    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10d78    88  d63f03e0       constant
0xffff8bd10d7c    92  d503201f       constant
0xffff8bd10d80    96  8bb06000       constant
0xffff8bd10d84   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10d68  runtime entry
0xffff8bd10d74  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4240
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10e00     0  mov x2, x1
0xffff8bd10e04     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10e18)
0xffff8bd10e08     8  mov x3, x0
0xffff8bd10e0c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10e28)
0xffff8bd10e10    16  orr x0, x3, x2
0xffff8bd10e14    20  ret
0xffff8bd10e18    24  movz x16, #0x0
0xffff8bd10e1c    28  sub csp, jssp, #0x10 (16)
0xffff8bd10e20    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10e24    36  bl #+0x14 (addr 0xffff8bd10e38)
0xffff8bd10e28    40  movz x16, #0x8
0xffff8bd10e2c    44  sub csp, jssp, #0x10 (16)
0xffff8bd10e30    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10e34    52  bl #+0x4 (addr 0xffff8bd10e38)
0xffff8bd10e38    56  movz x17, #0xa00000000
0xffff8bd10e3c    60  sub csp, jssp, #0x10 (16)
0xffff8bd10e40    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10e44    68  add fp, jssp, #0x10 (16)
0xffff8bd10e48    72  ldr x17, pc+24 (addr 0x0000ffff8bd10e60)    ;; lazy deoptimization bailout 0
0xffff8bd10e4c    76  add x17, x17, x16
0xffff8bd10e50    80  br x17
0xffff8bd10e54    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10e58    88  d63f03e0       constant
0xffff8bd10e5c    92  d503201f       constant
0xffff8bd10e60    96  8bb06000       constant
0xffff8bd10e64   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10e48  runtime entry
0xffff8bd10e54  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4240
type = NORMAL
name = BinaryOpICStub(BIT_OR:Smi*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10e00     0  mov x2, x1
0xffff8bd10e04     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10e18)
0xffff8bd10e08     8  mov x3, x0
0xffff8bd10e0c    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10e28)
0xffff8bd10e10    16  orr x0, x3, x2
0xffff8bd10e14    20  ret
0xffff8bd10e18    24  movz x16, #0x0
0xffff8bd10e1c    28  sub csp, jssp, #0x10 (16)
0xffff8bd10e20    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10e24    36  bl #+0x14 (addr 0xffff8bd10e38)
0xffff8bd10e28    40  movz x16, #0x8
0xffff8bd10e2c    44  sub csp, jssp, #0x10 (16)
0xffff8bd10e30    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10e34    52  bl #+0x4 (addr 0xffff8bd10e38)
0xffff8bd10e38    56  movz x17, #0xa00000000
0xffff8bd10e3c    60  sub csp, jssp, #0x10 (16)
0xffff8bd10e40    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10e44    68  add fp, jssp, #0x10 (16)
0xffff8bd10e48    72  ldr x17, pc+24 (addr 0x0000ffff8bd10e60)    ;; lazy deoptimization bailout 0
0xffff8bd10e4c    76  add x17, x17, x16
0xffff8bd10e50    80  br x17
0xffff8bd10e54    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10e58    88  d63f03e0       constant
0xffff8bd10e5c    92  d503201f       constant
0xffff8bd10e60    96  8bb06000       constant
0xffff8bd10e64   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10e48  runtime entry
0xffff8bd10e54  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2192
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10ee0     0  mov x2, x1
0xffff8bd10ee4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10ef8)
0xffff8bd10ee8     8  mov x3, x0
0xffff8bd10eec    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10f08)
0xffff8bd10ef0    16  orr x0, x3, x2
0xffff8bd10ef4    20  ret
0xffff8bd10ef8    24  movz x16, #0x0
0xffff8bd10efc    28  sub csp, jssp, #0x10 (16)
0xffff8bd10f00    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10f04    36  bl #+0x14 (addr 0xffff8bd10f18)
0xffff8bd10f08    40  movz x16, #0x8
0xffff8bd10f0c    44  sub csp, jssp, #0x10 (16)
0xffff8bd10f10    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10f14    52  bl #+0x4 (addr 0xffff8bd10f18)
0xffff8bd10f18    56  movz x17, #0xa00000000
0xffff8bd10f1c    60  sub csp, jssp, #0x10 (16)
0xffff8bd10f20    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10f24    68  add fp, jssp, #0x10 (16)
0xffff8bd10f28    72  ldr x17, pc+24 (addr 0x0000ffff8bd10f40)    ;; lazy deoptimization bailout 0
0xffff8bd10f2c    76  add x17, x17, x16
0xffff8bd10f30    80  br x17
0xffff8bd10f34    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10f38    88  d63f03e0       constant
0xffff8bd10f3c    92  d503201f       constant
0xffff8bd10f40    96  8bb06000       constant
0xffff8bd10f44   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10f28  runtime entry
0xffff8bd10f34  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2192
type = NORMAL
name = BinaryOpICStub(BIT_OR:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10ee0     0  mov x2, x1
0xffff8bd10ee4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10ef8)
0xffff8bd10ee8     8  mov x3, x0
0xffff8bd10eec    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10f08)
0xffff8bd10ef0    16  orr x0, x3, x2
0xffff8bd10ef4    20  ret
0xffff8bd10ef8    24  movz x16, #0x0
0xffff8bd10efc    28  sub csp, jssp, #0x10 (16)
0xffff8bd10f00    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10f04    36  bl #+0x14 (addr 0xffff8bd10f18)
0xffff8bd10f08    40  movz x16, #0x8
0xffff8bd10f0c    44  sub csp, jssp, #0x10 (16)
0xffff8bd10f10    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10f14    52  bl #+0x4 (addr 0xffff8bd10f18)
0xffff8bd10f18    56  movz x17, #0xa00000000
0xffff8bd10f1c    60  sub csp, jssp, #0x10 (16)
0xffff8bd10f20    64  stp x17, cp, [jssp, #-16]!
0xffff8bd10f24    68  add fp, jssp, #0x10 (16)
0xffff8bd10f28    72  ldr x17, pc+24 (addr 0x0000ffff8bd10f40)    ;; lazy deoptimization bailout 0
0xffff8bd10f2c    76  add x17, x17, x16
0xffff8bd10f30    80  br x17
0xffff8bd10f34    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd10f38    88  d63f03e0       constant
0xffff8bd10f3c    92  d503201f       constant
0xffff8bd10f40    96  8bb06000       constant
0xffff8bd10f44   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd10f28  runtime entry
0xffff8bd10f34  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4385
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10fc0     0  mov x2, x1
0xffff8bd10fc4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10fd8)
0xffff8bd10fc8     8  mov x3, x0
0xffff8bd10fcc    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10fe8)
0xffff8bd10fd0    16  eor x0, x3, x2
0xffff8bd10fd4    20  ret
0xffff8bd10fd8    24  movz x16, #0x0
0xffff8bd10fdc    28  sub csp, jssp, #0x10 (16)
0xffff8bd10fe0    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10fe4    36  bl #+0x14 (addr 0xffff8bd10ff8)
0xffff8bd10fe8    40  movz x16, #0x8
0xffff8bd10fec    44  sub csp, jssp, #0x10 (16)
0xffff8bd10ff0    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10ff4    52  bl #+0x4 (addr 0xffff8bd10ff8)
0xffff8bd10ff8    56  movz x17, #0xa00000000
0xffff8bd10ffc    60  sub csp, jssp, #0x10 (16)
0xffff8bd11000    64  stp x17, cp, [jssp, #-16]!
0xffff8bd11004    68  add fp, jssp, #0x10 (16)
0xffff8bd11008    72  ldr x17, pc+24 (addr 0x0000ffff8bd11020)    ;; lazy deoptimization bailout 0
0xffff8bd1100c    76  add x17, x17, x16
0xffff8bd11010    80  br x17
0xffff8bd11014    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11018    88  d63f03e0       constant
0xffff8bd1101c    92  d503201f       constant
0xffff8bd11020    96  8bb06000       constant
0xffff8bd11024   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd11008  runtime entry
0xffff8bd11014  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4385
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd10fc0     0  mov x2, x1
0xffff8bd10fc4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd10fd8)
0xffff8bd10fc8     8  mov x3, x0
0xffff8bd10fcc    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd10fe8)
0xffff8bd10fd0    16  eor x0, x3, x2
0xffff8bd10fd4    20  ret
0xffff8bd10fd8    24  movz x16, #0x0
0xffff8bd10fdc    28  sub csp, jssp, #0x10 (16)
0xffff8bd10fe0    32  stp fp, lr, [jssp, #-16]!
0xffff8bd10fe4    36  bl #+0x14 (addr 0xffff8bd10ff8)
0xffff8bd10fe8    40  movz x16, #0x8
0xffff8bd10fec    44  sub csp, jssp, #0x10 (16)
0xffff8bd10ff0    48  stp fp, lr, [jssp, #-16]!
0xffff8bd10ff4    52  bl #+0x4 (addr 0xffff8bd10ff8)
0xffff8bd10ff8    56  movz x17, #0xa00000000
0xffff8bd10ffc    60  sub csp, jssp, #0x10 (16)
0xffff8bd11000    64  stp x17, cp, [jssp, #-16]!
0xffff8bd11004    68  add fp, jssp, #0x10 (16)
0xffff8bd11008    72  ldr x17, pc+24 (addr 0x0000ffff8bd11020)    ;; lazy deoptimization bailout 0
0xffff8bd1100c    76  add x17, x17, x16
0xffff8bd11010    80  br x17
0xffff8bd11014    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11018    88  d63f03e0       constant
0xffff8bd1101c    92  d503201f       constant
0xffff8bd11020    96  8bb06000       constant
0xffff8bd11024   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd11008  runtime entry
0xffff8bd11014  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4369
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd110a0     0  mov x2, x1
0xffff8bd110a4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd110b8)
0xffff8bd110a8     8  mov x3, x0
0xffff8bd110ac    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd110c8)
0xffff8bd110b0    16  eor x0, x3, x2
0xffff8bd110b4    20  ret
0xffff8bd110b8    24  movz x16, #0x0
0xffff8bd110bc    28  sub csp, jssp, #0x10 (16)
0xffff8bd110c0    32  stp fp, lr, [jssp, #-16]!
0xffff8bd110c4    36  bl #+0x14 (addr 0xffff8bd110d8)
0xffff8bd110c8    40  movz x16, #0x8
0xffff8bd110cc    44  sub csp, jssp, #0x10 (16)
0xffff8bd110d0    48  stp fp, lr, [jssp, #-16]!
0xffff8bd110d4    52  bl #+0x4 (addr 0xffff8bd110d8)
0xffff8bd110d8    56  movz x17, #0xa00000000
0xffff8bd110dc    60  sub csp, jssp, #0x10 (16)
0xffff8bd110e0    64  stp x17, cp, [jssp, #-16]!
0xffff8bd110e4    68  add fp, jssp, #0x10 (16)
0xffff8bd110e8    72  ldr x17, pc+24 (addr 0x0000ffff8bd11100)    ;; lazy deoptimization bailout 0
0xffff8bd110ec    76  add x17, x17, x16
0xffff8bd110f0    80  br x17
0xffff8bd110f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd110f8    88  d63f03e0       constant
0xffff8bd110fc    92  d503201f       constant
0xffff8bd11100    96  8bb06000       constant
0xffff8bd11104   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd110e8  runtime entry
0xffff8bd110f4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4369
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Int32*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd110a0     0  mov x2, x1
0xffff8bd110a4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd110b8)
0xffff8bd110a8     8  mov x3, x0
0xffff8bd110ac    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd110c8)
0xffff8bd110b0    16  eor x0, x3, x2
0xffff8bd110b4    20  ret
0xffff8bd110b8    24  movz x16, #0x0
0xffff8bd110bc    28  sub csp, jssp, #0x10 (16)
0xffff8bd110c0    32  stp fp, lr, [jssp, #-16]!
0xffff8bd110c4    36  bl #+0x14 (addr 0xffff8bd110d8)
0xffff8bd110c8    40  movz x16, #0x8
0xffff8bd110cc    44  sub csp, jssp, #0x10 (16)
0xffff8bd110d0    48  stp fp, lr, [jssp, #-16]!
0xffff8bd110d4    52  bl #+0x4 (addr 0xffff8bd110d8)
0xffff8bd110d8    56  movz x17, #0xa00000000
0xffff8bd110dc    60  sub csp, jssp, #0x10 (16)
0xffff8bd110e0    64  stp x17, cp, [jssp, #-16]!
0xffff8bd110e4    68  add fp, jssp, #0x10 (16)
0xffff8bd110e8    72  ldr x17, pc+24 (addr 0x0000ffff8bd11100)    ;; lazy deoptimization bailout 0
0xffff8bd110ec    76  add x17, x17, x16
0xffff8bd110f0    80  br x17
0xffff8bd110f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd110f8    88  d63f03e0       constant
0xffff8bd110fc    92  d503201f       constant
0xffff8bd11100    96  8bb06000       constant
0xffff8bd11104   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd110e8  runtime entry
0xffff8bd110f4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6417
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff8bd11180     0  mov x2, x1
0xffff8bd11184     4  tbnz w2, #0, #+0xac (addr 0xffff8bd11230)
0xffff8bd11188     8  tbnz w0, #0, #+0x18 (addr 0xffff8bd111a0)
0xffff8bd1118c    12  asr x4, x0, #32
0xffff8bd11190    16  asr x0, x2, #32
0xffff8bd11194    20  eor w0, w4, w0
0xffff8bd11198    24  lsl x0, x0, #32
0xffff8bd1119c    28  ret
0xffff8bd111a0    32  sub csp, jssp, #0x10 (16)
0xffff8bd111a4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd111a8    40  movz fp, #0xa00000000
0xffff8bd111ac    44  sub csp, jssp, #0x8 (8)
0xffff8bd111b0    48  str fp, [jssp, #-8]!
0xffff8bd111b4    52  add fp, jssp, #0x8 (8)
0xffff8bd111b8    56  ldur x16, [x0, #-1]
0xffff8bd111bc    60  ldr x17, [x26, #120]
0xffff8bd111c0    64  cmp x16, x17
0xffff8bd111c4    68  b.ne #+0x30 (addr 0xffff8bd111f4)
0xffff8bd111c8    72  ldur d30, [x0, #7]
0xffff8bd111cc    76  fcvtzs x4, d30
0xffff8bd111d0    80  cmp x4, #0x1 (1)
0xffff8bd111d4    84  ccmn x4, #1, #nzcV, vc
0xffff8bd111d8    88  b.vc #+0x18 (addr 0xffff8bd111f0)
0xffff8bd111dc    92  sub csp, jssp, #0x8 (8)
0xffff8bd111e0    96  str lr, [jssp, #-8]!
0xffff8bd111e4   100  ldr x16, pc+68 (addr 0x0000ffff8bd11228)    ;; code: STUB, DoubleToIStub, minor: 127232
0xffff8bd111e8   104  blr x16
0xffff8bd111ec   108  ldr lr, [jssp], #8
0xffff8bd111f0   112  b #+0x24 (addr 0xffff8bd11214)
0xffff8bd111f4   116  ldp x4, x3, [x26, #64]
0xffff8bd111f8   120  cmp x0, x4
0xffff8bd111fc   124  cset x4, eq
0xffff8bd11200   128  ccmp x0, x3, #nZcv, ne
0xffff8bd11204   132  b.eq #+0x10 (addr 0xffff8bd11214)
0xffff8bd11208   136  ldr x16, [x26, #40]
0xffff8bd1120c   140  cmp x0, x16
0xffff8bd11210   144  b.ne #+0x30 (addr 0xffff8bd11240)
0xffff8bd11214   148  ldr lr, [jssp, #16]
0xffff8bd11218   152  ldp xzr, fp, [jssp], #24
0xffff8bd1121c   156  b #-0x8c (addr 0xffff8bd11190)
0xffff8bd11220   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd11224   164  d63f03e0       constant
0xffff8bd11228   168  8bd10400       constant
0xffff8bd1122c   172  0000ffff       constant
0xffff8bd11230   176  movz x16, #0x0
0xffff8bd11234   180  sub csp, jssp, #0x10 (16)
0xffff8bd11238   184  stp fp, lr, [jssp, #-16]!
0xffff8bd1123c   188  bl #+0xc (addr 0xffff8bd11248)
0xffff8bd11240   192  movz x16, #0x8
0xffff8bd11244   196  bl #+0x14 (addr 0xffff8bd11258)
0xffff8bd11248   200  movz x17, #0xa00000000
0xffff8bd1124c   204  sub csp, jssp, #0x10 (16)
0xffff8bd11250   208  stp x17, cp, [jssp, #-16]!
0xffff8bd11254   212  add fp, jssp, #0x10 (16)
0xffff8bd11258   216  ldr x17, pc+24 (addr 0x0000ffff8bd11270)    ;; lazy deoptimization bailout 0
0xffff8bd1125c   220  add x17, x17, x16
0xffff8bd11260   224  br x17
0xffff8bd11264   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11268   232  d63f03e0       constant
0xffff8bd1126c   236  d503201f       constant
0xffff8bd11270   240  8bb06000       constant
0xffff8bd11274   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd111e4  code target (STUB)  (0xffff8bd10400)
0xffff8bd11220  constant pool (size 16)
0xffff8bd11258  runtime entry
0xffff8bd11264  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6417
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Int32*Number->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff8bd11180     0  mov x2, x1
0xffff8bd11184     4  tbnz w2, #0, #+0xac (addr 0xffff8bd11230)
0xffff8bd11188     8  tbnz w0, #0, #+0x18 (addr 0xffff8bd111a0)
0xffff8bd1118c    12  asr x4, x0, #32
0xffff8bd11190    16  asr x0, x2, #32
0xffff8bd11194    20  eor w0, w4, w0
0xffff8bd11198    24  lsl x0, x0, #32
0xffff8bd1119c    28  ret
0xffff8bd111a0    32  sub csp, jssp, #0x10 (16)
0xffff8bd111a4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd111a8    40  movz fp, #0xa00000000
0xffff8bd111ac    44  sub csp, jssp, #0x8 (8)
0xffff8bd111b0    48  str fp, [jssp, #-8]!
0xffff8bd111b4    52  add fp, jssp, #0x8 (8)
0xffff8bd111b8    56  ldur x16, [x0, #-1]
0xffff8bd111bc    60  ldr x17, [x26, #120]
0xffff8bd111c0    64  cmp x16, x17
0xffff8bd111c4    68  b.ne #+0x30 (addr 0xffff8bd111f4)
0xffff8bd111c8    72  ldur d30, [x0, #7]
0xffff8bd111cc    76  fcvtzs x4, d30
0xffff8bd111d0    80  cmp x4, #0x1 (1)
0xffff8bd111d4    84  ccmn x4, #1, #nzcV, vc
0xffff8bd111d8    88  b.vc #+0x18 (addr 0xffff8bd111f0)
0xffff8bd111dc    92  sub csp, jssp, #0x8 (8)
0xffff8bd111e0    96  str lr, [jssp, #-8]!
0xffff8bd111e4   100  ldr x16, pc+68 (addr 0x0000ffff8bd11228)    ;; code: STUB, DoubleToIStub, minor: 127232
0xffff8bd111e8   104  blr x16
0xffff8bd111ec   108  ldr lr, [jssp], #8
0xffff8bd111f0   112  b #+0x24 (addr 0xffff8bd11214)
0xffff8bd111f4   116  ldp x4, x3, [x26, #64]
0xffff8bd111f8   120  cmp x0, x4
0xffff8bd111fc   124  cset x4, eq
0xffff8bd11200   128  ccmp x0, x3, #nZcv, ne
0xffff8bd11204   132  b.eq #+0x10 (addr 0xffff8bd11214)
0xffff8bd11208   136  ldr x16, [x26, #40]
0xffff8bd1120c   140  cmp x0, x16
0xffff8bd11210   144  b.ne #+0x30 (addr 0xffff8bd11240)
0xffff8bd11214   148  ldr lr, [jssp, #16]
0xffff8bd11218   152  ldp xzr, fp, [jssp], #24
0xffff8bd1121c   156  b #-0x8c (addr 0xffff8bd11190)
0xffff8bd11220   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd11224   164  d63f03e0       constant
0xffff8bd11228   168  8bd10400       constant
0xffff8bd1122c   172  0000ffff       constant
0xffff8bd11230   176  movz x16, #0x0
0xffff8bd11234   180  sub csp, jssp, #0x10 (16)
0xffff8bd11238   184  stp fp, lr, [jssp, #-16]!
0xffff8bd1123c   188  bl #+0xc (addr 0xffff8bd11248)
0xffff8bd11240   192  movz x16, #0x8
0xffff8bd11244   196  bl #+0x14 (addr 0xffff8bd11258)
0xffff8bd11248   200  movz x17, #0xa00000000
0xffff8bd1124c   204  sub csp, jssp, #0x10 (16)
0xffff8bd11250   208  stp x17, cp, [jssp, #-16]!
0xffff8bd11254   212  add fp, jssp, #0x10 (16)
0xffff8bd11258   216  ldr x17, pc+24 (addr 0x0000ffff8bd11270)    ;; lazy deoptimization bailout 0
0xffff8bd1125c   220  add x17, x17, x16
0xffff8bd11260   224  br x17
0xffff8bd11264   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11268   232  d63f03e0       constant
0xffff8bd1126c   236  d503201f       constant
0xffff8bd11270   240  8bb06000       constant
0xffff8bd11274   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd111e4  code target (STUB)  (0xffff8bd10400)
0xffff8bd11220  constant pool (size 16)
0xffff8bd11258  runtime entry
0xffff8bd11264  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2337
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd112e0     0  mov x2, x1
0xffff8bd112e4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd112f8)
0xffff8bd112e8     8  mov x3, x0
0xffff8bd112ec    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd11308)
0xffff8bd112f0    16  eor x0, x3, x2
0xffff8bd112f4    20  ret
0xffff8bd112f8    24  movz x16, #0x0
0xffff8bd112fc    28  sub csp, jssp, #0x10 (16)
0xffff8bd11300    32  stp fp, lr, [jssp, #-16]!
0xffff8bd11304    36  bl #+0x14 (addr 0xffff8bd11318)
0xffff8bd11308    40  movz x16, #0x8
0xffff8bd1130c    44  sub csp, jssp, #0x10 (16)
0xffff8bd11310    48  stp fp, lr, [jssp, #-16]!
0xffff8bd11314    52  bl #+0x4 (addr 0xffff8bd11318)
0xffff8bd11318    56  movz x17, #0xa00000000
0xffff8bd1131c    60  sub csp, jssp, #0x10 (16)
0xffff8bd11320    64  stp x17, cp, [jssp, #-16]!
0xffff8bd11324    68  add fp, jssp, #0x10 (16)
0xffff8bd11328    72  ldr x17, pc+24 (addr 0x0000ffff8bd11340)    ;; lazy deoptimization bailout 0
0xffff8bd1132c    76  add x17, x17, x16
0xffff8bd11330    80  br x17
0xffff8bd11334    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11338    88  d63f03e0       constant
0xffff8bd1133c    92  d503201f       constant
0xffff8bd11340    96  8bb06000       constant
0xffff8bd11344   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd11328  runtime entry
0xffff8bd11334  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2337
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd112e0     0  mov x2, x1
0xffff8bd112e4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd112f8)
0xffff8bd112e8     8  mov x3, x0
0xffff8bd112ec    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd11308)
0xffff8bd112f0    16  eor x0, x3, x2
0xffff8bd112f4    20  ret
0xffff8bd112f8    24  movz x16, #0x0
0xffff8bd112fc    28  sub csp, jssp, #0x10 (16)
0xffff8bd11300    32  stp fp, lr, [jssp, #-16]!
0xffff8bd11304    36  bl #+0x14 (addr 0xffff8bd11318)
0xffff8bd11308    40  movz x16, #0x8
0xffff8bd1130c    44  sub csp, jssp, #0x10 (16)
0xffff8bd11310    48  stp fp, lr, [jssp, #-16]!
0xffff8bd11314    52  bl #+0x4 (addr 0xffff8bd11318)
0xffff8bd11318    56  movz x17, #0xa00000000
0xffff8bd1131c    60  sub csp, jssp, #0x10 (16)
0xffff8bd11320    64  stp x17, cp, [jssp, #-16]!
0xffff8bd11324    68  add fp, jssp, #0x10 (16)
0xffff8bd11328    72  ldr x17, pc+24 (addr 0x0000ffff8bd11340)    ;; lazy deoptimization bailout 0
0xffff8bd1132c    76  add x17, x17, x16
0xffff8bd11330    80  br x17
0xffff8bd11334    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11338    88  d63f03e0       constant
0xffff8bd1133c    92  d503201f       constant
0xffff8bd11340    96  8bb06000       constant
0xffff8bd11344   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd11328  runtime entry
0xffff8bd11334  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4513
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff8bd113c0     0  mov x2, x0
0xffff8bd113c4     4  tbnz w2, #0, #+0xac (addr 0xffff8bd11470)
0xffff8bd113c8     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd113e0)
0xffff8bd113cc    12  asr x4, x1, #32
0xffff8bd113d0    16  asr x0, x2, #32
0xffff8bd113d4    20  eor w0, w0, w4
0xffff8bd113d8    24  lsl x0, x0, #32
0xffff8bd113dc    28  ret
0xffff8bd113e0    32  sub csp, jssp, #0x10 (16)
0xffff8bd113e4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd113e8    40  movz fp, #0xa00000000
0xffff8bd113ec    44  sub csp, jssp, #0x8 (8)
0xffff8bd113f0    48  str fp, [jssp, #-8]!
0xffff8bd113f4    52  add fp, jssp, #0x8 (8)
0xffff8bd113f8    56  ldur x16, [x1, #-1]
0xffff8bd113fc    60  ldr x17, [x26, #120]
0xffff8bd11400    64  cmp x16, x17
0xffff8bd11404    68  b.ne #+0x30 (addr 0xffff8bd11434)
0xffff8bd11408    72  ldur d30, [x1, #7]
0xffff8bd1140c    76  fcvtzs x4, d30
0xffff8bd11410    80  cmp x4, #0x1 (1)
0xffff8bd11414    84  ccmn x4, #1, #nzcV, vc
0xffff8bd11418    88  b.vc #+0x18 (addr 0xffff8bd11430)
0xffff8bd1141c    92  sub csp, jssp, #0x8 (8)
0xffff8bd11420    96  str lr, [jssp, #-8]!
0xffff8bd11424   100  ldr x16, pc+68 (addr 0x0000ffff8bd11468)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd11428   104  blr x16
0xffff8bd1142c   108  ldr lr, [jssp], #8
0xffff8bd11430   112  b #+0x24 (addr 0xffff8bd11454)
0xffff8bd11434   116  ldp x4, x3, [x26, #64]
0xffff8bd11438   120  cmp x1, x4
0xffff8bd1143c   124  cset x4, eq
0xffff8bd11440   128  ccmp x1, x3, #nZcv, ne
0xffff8bd11444   132  b.eq #+0x10 (addr 0xffff8bd11454)
0xffff8bd11448   136  ldr x16, [x26, #40]
0xffff8bd1144c   140  cmp x1, x16
0xffff8bd11450   144  b.ne #+0x30 (addr 0xffff8bd11480)
0xffff8bd11454   148  ldr lr, [jssp, #16]
0xffff8bd11458   152  ldp xzr, fp, [jssp], #24
0xffff8bd1145c   156  b #-0x8c (addr 0xffff8bd113d0)
0xffff8bd11460   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd11464   164  d63f03e0       constant
0xffff8bd11468   168  8bd0fee0       constant
0xffff8bd1146c   172  0000ffff       constant
0xffff8bd11470   176  movz x16, #0x0
0xffff8bd11474   180  sub csp, jssp, #0x10 (16)
0xffff8bd11478   184  stp fp, lr, [jssp, #-16]!
0xffff8bd1147c   188  bl #+0xc (addr 0xffff8bd11488)
0xffff8bd11480   192  movz x16, #0x8
0xffff8bd11484   196  bl #+0x14 (addr 0xffff8bd11498)
0xffff8bd11488   200  movz x17, #0xa00000000
0xffff8bd1148c   204  sub csp, jssp, #0x10 (16)
0xffff8bd11490   208  stp x17, cp, [jssp, #-16]!
0xffff8bd11494   212  add fp, jssp, #0x10 (16)
0xffff8bd11498   216  ldr x17, pc+24 (addr 0x0000ffff8bd114b0)    ;; lazy deoptimization bailout 0
0xffff8bd1149c   220  add x17, x17, x16
0xffff8bd114a0   224  br x17
0xffff8bd114a4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd114a8   232  d63f03e0       constant
0xffff8bd114ac   236  d503201f       constant
0xffff8bd114b0   240  8bb06000       constant
0xffff8bd114b4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd11424  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd11460  constant pool (size 16)
0xffff8bd11498  runtime entry
0xffff8bd114a4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4513
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Number*Int32->Int32)
compiler = crankshaft
Instructions (size = 256)
0xffff8bd113c0     0  mov x2, x0
0xffff8bd113c4     4  tbnz w2, #0, #+0xac (addr 0xffff8bd11470)
0xffff8bd113c8     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd113e0)
0xffff8bd113cc    12  asr x4, x1, #32
0xffff8bd113d0    16  asr x0, x2, #32
0xffff8bd113d4    20  eor w0, w0, w4
0xffff8bd113d8    24  lsl x0, x0, #32
0xffff8bd113dc    28  ret
0xffff8bd113e0    32  sub csp, jssp, #0x10 (16)
0xffff8bd113e4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd113e8    40  movz fp, #0xa00000000
0xffff8bd113ec    44  sub csp, jssp, #0x8 (8)
0xffff8bd113f0    48  str fp, [jssp, #-8]!
0xffff8bd113f4    52  add fp, jssp, #0x8 (8)
0xffff8bd113f8    56  ldur x16, [x1, #-1]
0xffff8bd113fc    60  ldr x17, [x26, #120]
0xffff8bd11400    64  cmp x16, x17
0xffff8bd11404    68  b.ne #+0x30 (addr 0xffff8bd11434)
0xffff8bd11408    72  ldur d30, [x1, #7]
0xffff8bd1140c    76  fcvtzs x4, d30
0xffff8bd11410    80  cmp x4, #0x1 (1)
0xffff8bd11414    84  ccmn x4, #1, #nzcV, vc
0xffff8bd11418    88  b.vc #+0x18 (addr 0xffff8bd11430)
0xffff8bd1141c    92  sub csp, jssp, #0x8 (8)
0xffff8bd11420    96  str lr, [jssp, #-8]!
0xffff8bd11424   100  ldr x16, pc+68 (addr 0x0000ffff8bd11468)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd11428   104  blr x16
0xffff8bd1142c   108  ldr lr, [jssp], #8
0xffff8bd11430   112  b #+0x24 (addr 0xffff8bd11454)
0xffff8bd11434   116  ldp x4, x3, [x26, #64]
0xffff8bd11438   120  cmp x1, x4
0xffff8bd1143c   124  cset x4, eq
0xffff8bd11440   128  ccmp x1, x3, #nZcv, ne
0xffff8bd11444   132  b.eq #+0x10 (addr 0xffff8bd11454)
0xffff8bd11448   136  ldr x16, [x26, #40]
0xffff8bd1144c   140  cmp x1, x16
0xffff8bd11450   144  b.ne #+0x30 (addr 0xffff8bd11480)
0xffff8bd11454   148  ldr lr, [jssp, #16]
0xffff8bd11458   152  ldp xzr, fp, [jssp], #24
0xffff8bd1145c   156  b #-0x8c (addr 0xffff8bd113d0)
0xffff8bd11460   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd11464   164  d63f03e0       constant
0xffff8bd11468   168  8bd0fee0       constant
0xffff8bd1146c   172  0000ffff       constant
0xffff8bd11470   176  movz x16, #0x0
0xffff8bd11474   180  sub csp, jssp, #0x10 (16)
0xffff8bd11478   184  stp fp, lr, [jssp, #-16]!
0xffff8bd1147c   188  bl #+0xc (addr 0xffff8bd11488)
0xffff8bd11480   192  movz x16, #0x8
0xffff8bd11484   196  bl #+0x14 (addr 0xffff8bd11498)
0xffff8bd11488   200  movz x17, #0xa00000000
0xffff8bd1148c   204  sub csp, jssp, #0x10 (16)
0xffff8bd11490   208  stp x17, cp, [jssp, #-16]!
0xffff8bd11494   212  add fp, jssp, #0x10 (16)
0xffff8bd11498   216  ldr x17, pc+24 (addr 0x0000ffff8bd114b0)    ;; lazy deoptimization bailout 0
0xffff8bd1149c   220  add x17, x17, x16
0xffff8bd114a0   224  br x17
0xffff8bd114a4   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd114a8   232  d63f03e0       constant
0xffff8bd114ac   236  d503201f       constant
0xffff8bd114b0   240  8bb06000       constant
0xffff8bd114b4   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd11424  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd11460  constant pool (size 16)
0xffff8bd11498  runtime entry
0xffff8bd114a4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2465
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff8bd11520     0  mov x2, x0
0xffff8bd11524     4  tbnz w2, #0, #+0xac (addr 0xffff8bd115d0)
0xffff8bd11528     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd11540)
0xffff8bd1152c    12  asr x4, x1, #32
0xffff8bd11530    16  asr x0, x2, #32
0xffff8bd11534    20  eor w0, w0, w4
0xffff8bd11538    24  lsl x0, x0, #32
0xffff8bd1153c    28  ret
0xffff8bd11540    32  sub csp, jssp, #0x10 (16)
0xffff8bd11544    36  stp fp, lr, [jssp, #-16]!
0xffff8bd11548    40  movz fp, #0xa00000000
0xffff8bd1154c    44  sub csp, jssp, #0x8 (8)
0xffff8bd11550    48  str fp, [jssp, #-8]!
0xffff8bd11554    52  add fp, jssp, #0x8 (8)
0xffff8bd11558    56  ldur x16, [x1, #-1]
0xffff8bd1155c    60  ldr x17, [x26, #120]
0xffff8bd11560    64  cmp x16, x17
0xffff8bd11564    68  b.ne #+0x30 (addr 0xffff8bd11594)
0xffff8bd11568    72  ldur d30, [x1, #7]
0xffff8bd1156c    76  fcvtzs x4, d30
0xffff8bd11570    80  cmp x4, #0x1 (1)
0xffff8bd11574    84  ccmn x4, #1, #nzcV, vc
0xffff8bd11578    88  b.vc #+0x18 (addr 0xffff8bd11590)
0xffff8bd1157c    92  sub csp, jssp, #0x8 (8)
0xffff8bd11580    96  str lr, [jssp, #-8]!
0xffff8bd11584   100  ldr x16, pc+68 (addr 0x0000ffff8bd115c8)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd11588   104  blr x16
0xffff8bd1158c   108  ldr lr, [jssp], #8
0xffff8bd11590   112  b #+0x24 (addr 0xffff8bd115b4)
0xffff8bd11594   116  ldp x4, x3, [x26, #64]
0xffff8bd11598   120  cmp x1, x4
0xffff8bd1159c   124  cset x4, eq
0xffff8bd115a0   128  ccmp x1, x3, #nZcv, ne
0xffff8bd115a4   132  b.eq #+0x10 (addr 0xffff8bd115b4)
0xffff8bd115a8   136  ldr x16, [x26, #40]
0xffff8bd115ac   140  cmp x1, x16
0xffff8bd115b0   144  b.ne #+0x30 (addr 0xffff8bd115e0)
0xffff8bd115b4   148  ldr lr, [jssp, #16]
0xffff8bd115b8   152  ldp xzr, fp, [jssp], #24
0xffff8bd115bc   156  b #-0x8c (addr 0xffff8bd11530)
0xffff8bd115c0   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd115c4   164  d63f03e0       constant
0xffff8bd115c8   168  8bd0fee0       constant
0xffff8bd115cc   172  0000ffff       constant
0xffff8bd115d0   176  movz x16, #0x0
0xffff8bd115d4   180  sub csp, jssp, #0x10 (16)
0xffff8bd115d8   184  stp fp, lr, [jssp, #-16]!
0xffff8bd115dc   188  bl #+0xc (addr 0xffff8bd115e8)
0xffff8bd115e0   192  movz x16, #0x8
0xffff8bd115e4   196  bl #+0x14 (addr 0xffff8bd115f8)
0xffff8bd115e8   200  movz x17, #0xa00000000
0xffff8bd115ec   204  sub csp, jssp, #0x10 (16)
0xffff8bd115f0   208  stp x17, cp, [jssp, #-16]!
0xffff8bd115f4   212  add fp, jssp, #0x10 (16)
0xffff8bd115f8   216  ldr x17, pc+24 (addr 0x0000ffff8bd11610)    ;; lazy deoptimization bailout 0
0xffff8bd115fc   220  add x17, x17, x16
0xffff8bd11600   224  br x17
0xffff8bd11604   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11608   232  d63f03e0       constant
0xffff8bd1160c   236  d503201f       constant
0xffff8bd11610   240  8bb06000       constant
0xffff8bd11614   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd11584  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd115c0  constant pool (size 16)
0xffff8bd115f8  runtime entry
0xffff8bd11604  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2465
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Number*Smi->Int32)
compiler = crankshaft
Instructions (size = 256)
0xffff8bd11520     0  mov x2, x0
0xffff8bd11524     4  tbnz w2, #0, #+0xac (addr 0xffff8bd115d0)
0xffff8bd11528     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd11540)
0xffff8bd1152c    12  asr x4, x1, #32
0xffff8bd11530    16  asr x0, x2, #32
0xffff8bd11534    20  eor w0, w0, w4
0xffff8bd11538    24  lsl x0, x0, #32
0xffff8bd1153c    28  ret
0xffff8bd11540    32  sub csp, jssp, #0x10 (16)
0xffff8bd11544    36  stp fp, lr, [jssp, #-16]!
0xffff8bd11548    40  movz fp, #0xa00000000
0xffff8bd1154c    44  sub csp, jssp, #0x8 (8)
0xffff8bd11550    48  str fp, [jssp, #-8]!
0xffff8bd11554    52  add fp, jssp, #0x8 (8)
0xffff8bd11558    56  ldur x16, [x1, #-1]
0xffff8bd1155c    60  ldr x17, [x26, #120]
0xffff8bd11560    64  cmp x16, x17
0xffff8bd11564    68  b.ne #+0x30 (addr 0xffff8bd11594)
0xffff8bd11568    72  ldur d30, [x1, #7]
0xffff8bd1156c    76  fcvtzs x4, d30
0xffff8bd11570    80  cmp x4, #0x1 (1)
0xffff8bd11574    84  ccmn x4, #1, #nzcV, vc
0xffff8bd11578    88  b.vc #+0x18 (addr 0xffff8bd11590)
0xffff8bd1157c    92  sub csp, jssp, #0x8 (8)
0xffff8bd11580    96  str lr, [jssp, #-8]!
0xffff8bd11584   100  ldr x16, pc+68 (addr 0x0000ffff8bd115c8)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd11588   104  blr x16
0xffff8bd1158c   108  ldr lr, [jssp], #8
0xffff8bd11590   112  b #+0x24 (addr 0xffff8bd115b4)
0xffff8bd11594   116  ldp x4, x3, [x26, #64]
0xffff8bd11598   120  cmp x1, x4
0xffff8bd1159c   124  cset x4, eq
0xffff8bd115a0   128  ccmp x1, x3, #nZcv, ne
0xffff8bd115a4   132  b.eq #+0x10 (addr 0xffff8bd115b4)
0xffff8bd115a8   136  ldr x16, [x26, #40]
0xffff8bd115ac   140  cmp x1, x16
0xffff8bd115b0   144  b.ne #+0x30 (addr 0xffff8bd115e0)
0xffff8bd115b4   148  ldr lr, [jssp, #16]
0xffff8bd115b8   152  ldp xzr, fp, [jssp], #24
0xffff8bd115bc   156  b #-0x8c (addr 0xffff8bd11530)
0xffff8bd115c0   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd115c4   164  d63f03e0       constant
0xffff8bd115c8   168  8bd0fee0       constant
0xffff8bd115cc   172  0000ffff       constant
0xffff8bd115d0   176  movz x16, #0x0
0xffff8bd115d4   180  sub csp, jssp, #0x10 (16)
0xffff8bd115d8   184  stp fp, lr, [jssp, #-16]!
0xffff8bd115dc   188  bl #+0xc (addr 0xffff8bd115e8)
0xffff8bd115e0   192  movz x16, #0x8
0xffff8bd115e4   196  bl #+0x14 (addr 0xffff8bd115f8)
0xffff8bd115e8   200  movz x17, #0xa00000000
0xffff8bd115ec   204  sub csp, jssp, #0x10 (16)
0xffff8bd115f0   208  stp x17, cp, [jssp, #-16]!
0xffff8bd115f4   212  add fp, jssp, #0x10 (16)
0xffff8bd115f8   216  ldr x17, pc+24 (addr 0x0000ffff8bd11610)    ;; lazy deoptimization bailout 0
0xffff8bd115fc   220  add x17, x17, x16
0xffff8bd11600   224  br x17
0xffff8bd11604   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11608   232  d63f03e0       constant
0xffff8bd1160c   236  d503201f       constant
0xffff8bd11610   240  8bb06000       constant
0xffff8bd11614   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd11584  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd115c0  constant pool (size 16)
0xffff8bd115f8  runtime entry
0xffff8bd11604  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2449
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff8bd11680     0  mov x2, x0
0xffff8bd11684     4  tbnz w2, #0, #+0xac (addr 0xffff8bd11730)
0xffff8bd11688     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd116a0)
0xffff8bd1168c    12  asr x4, x1, #32
0xffff8bd11690    16  asr x0, x2, #32
0xffff8bd11694    20  eor w0, w0, w4
0xffff8bd11698    24  lsl x0, x0, #32
0xffff8bd1169c    28  ret
0xffff8bd116a0    32  sub csp, jssp, #0x10 (16)
0xffff8bd116a4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd116a8    40  movz fp, #0xa00000000
0xffff8bd116ac    44  sub csp, jssp, #0x8 (8)
0xffff8bd116b0    48  str fp, [jssp, #-8]!
0xffff8bd116b4    52  add fp, jssp, #0x8 (8)
0xffff8bd116b8    56  ldur x16, [x1, #-1]
0xffff8bd116bc    60  ldr x17, [x26, #120]
0xffff8bd116c0    64  cmp x16, x17
0xffff8bd116c4    68  b.ne #+0x30 (addr 0xffff8bd116f4)
0xffff8bd116c8    72  ldur d30, [x1, #7]
0xffff8bd116cc    76  fcvtzs x4, d30
0xffff8bd116d0    80  cmp x4, #0x1 (1)
0xffff8bd116d4    84  ccmn x4, #1, #nzcV, vc
0xffff8bd116d8    88  b.vc #+0x18 (addr 0xffff8bd116f0)
0xffff8bd116dc    92  sub csp, jssp, #0x8 (8)
0xffff8bd116e0    96  str lr, [jssp, #-8]!
0xffff8bd116e4   100  ldr x16, pc+68 (addr 0x0000ffff8bd11728)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd116e8   104  blr x16
0xffff8bd116ec   108  ldr lr, [jssp], #8
0xffff8bd116f0   112  b #+0x24 (addr 0xffff8bd11714)
0xffff8bd116f4   116  ldp x4, x3, [x26, #64]
0xffff8bd116f8   120  cmp x1, x4
0xffff8bd116fc   124  cset x4, eq
0xffff8bd11700   128  ccmp x1, x3, #nZcv, ne
0xffff8bd11704   132  b.eq #+0x10 (addr 0xffff8bd11714)
0xffff8bd11708   136  ldr x16, [x26, #40]
0xffff8bd1170c   140  cmp x1, x16
0xffff8bd11710   144  b.ne #+0x30 (addr 0xffff8bd11740)
0xffff8bd11714   148  ldr lr, [jssp, #16]
0xffff8bd11718   152  ldp xzr, fp, [jssp], #24
0xffff8bd1171c   156  b #-0x8c (addr 0xffff8bd11690)
0xffff8bd11720   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd11724   164  d63f03e0       constant
0xffff8bd11728   168  8bd0fee0       constant
0xffff8bd1172c   172  0000ffff       constant
0xffff8bd11730   176  movz x16, #0x0
0xffff8bd11734   180  sub csp, jssp, #0x10 (16)
0xffff8bd11738   184  stp fp, lr, [jssp, #-16]!
0xffff8bd1173c   188  bl #+0xc (addr 0xffff8bd11748)
0xffff8bd11740   192  movz x16, #0x8
0xffff8bd11744   196  bl #+0x14 (addr 0xffff8bd11758)
0xffff8bd11748   200  movz x17, #0xa00000000
0xffff8bd1174c   204  sub csp, jssp, #0x10 (16)
0xffff8bd11750   208  stp x17, cp, [jssp, #-16]!
0xffff8bd11754   212  add fp, jssp, #0x10 (16)
0xffff8bd11758   216  ldr x17, pc+24 (addr 0x0000ffff8bd11770)    ;; lazy deoptimization bailout 0
0xffff8bd1175c   220  add x17, x17, x16
0xffff8bd11760   224  br x17
0xffff8bd11764   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11768   232  d63f03e0       constant
0xffff8bd1176c   236  d503201f       constant
0xffff8bd11770   240  8bb06000       constant
0xffff8bd11774   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd116e4  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd11720  constant pool (size 16)
0xffff8bd11758  runtime entry
0xffff8bd11764  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2449
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff8bd11680     0  mov x2, x0
0xffff8bd11684     4  tbnz w2, #0, #+0xac (addr 0xffff8bd11730)
0xffff8bd11688     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd116a0)
0xffff8bd1168c    12  asr x4, x1, #32
0xffff8bd11690    16  asr x0, x2, #32
0xffff8bd11694    20  eor w0, w0, w4
0xffff8bd11698    24  lsl x0, x0, #32
0xffff8bd1169c    28  ret
0xffff8bd116a0    32  sub csp, jssp, #0x10 (16)
0xffff8bd116a4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd116a8    40  movz fp, #0xa00000000
0xffff8bd116ac    44  sub csp, jssp, #0x8 (8)
0xffff8bd116b0    48  str fp, [jssp, #-8]!
0xffff8bd116b4    52  add fp, jssp, #0x8 (8)
0xffff8bd116b8    56  ldur x16, [x1, #-1]
0xffff8bd116bc    60  ldr x17, [x26, #120]
0xffff8bd116c0    64  cmp x16, x17
0xffff8bd116c4    68  b.ne #+0x30 (addr 0xffff8bd116f4)
0xffff8bd116c8    72  ldur d30, [x1, #7]
0xffff8bd116cc    76  fcvtzs x4, d30
0xffff8bd116d0    80  cmp x4, #0x1 (1)
0xffff8bd116d4    84  ccmn x4, #1, #nzcV, vc
0xffff8bd116d8    88  b.vc #+0x18 (addr 0xffff8bd116f0)
0xffff8bd116dc    92  sub csp, jssp, #0x8 (8)
0xffff8bd116e0    96  str lr, [jssp, #-8]!
0xffff8bd116e4   100  ldr x16, pc+68 (addr 0x0000ffff8bd11728)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd116e8   104  blr x16
0xffff8bd116ec   108  ldr lr, [jssp], #8
0xffff8bd116f0   112  b #+0x24 (addr 0xffff8bd11714)
0xffff8bd116f4   116  ldp x4, x3, [x26, #64]
0xffff8bd116f8   120  cmp x1, x4
0xffff8bd116fc   124  cset x4, eq
0xffff8bd11700   128  ccmp x1, x3, #nZcv, ne
0xffff8bd11704   132  b.eq #+0x10 (addr 0xffff8bd11714)
0xffff8bd11708   136  ldr x16, [x26, #40]
0xffff8bd1170c   140  cmp x1, x16
0xffff8bd11710   144  b.ne #+0x30 (addr 0xffff8bd11740)
0xffff8bd11714   148  ldr lr, [jssp, #16]
0xffff8bd11718   152  ldp xzr, fp, [jssp], #24
0xffff8bd1171c   156  b #-0x8c (addr 0xffff8bd11690)
0xffff8bd11720   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd11724   164  d63f03e0       constant
0xffff8bd11728   168  8bd0fee0       constant
0xffff8bd1172c   172  0000ffff       constant
0xffff8bd11730   176  movz x16, #0x0
0xffff8bd11734   180  sub csp, jssp, #0x10 (16)
0xffff8bd11738   184  stp fp, lr, [jssp, #-16]!
0xffff8bd1173c   188  bl #+0xc (addr 0xffff8bd11748)
0xffff8bd11740   192  movz x16, #0x8
0xffff8bd11744   196  bl #+0x14 (addr 0xffff8bd11758)
0xffff8bd11748   200  movz x17, #0xa00000000
0xffff8bd1174c   204  sub csp, jssp, #0x10 (16)
0xffff8bd11750   208  stp x17, cp, [jssp, #-16]!
0xffff8bd11754   212  add fp, jssp, #0x10 (16)
0xffff8bd11758   216  ldr x17, pc+24 (addr 0x0000ffff8bd11770)    ;; lazy deoptimization bailout 0
0xffff8bd1175c   220  add x17, x17, x16
0xffff8bd11760   224  br x17
0xffff8bd11764   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11768   232  d63f03e0       constant
0xffff8bd1176c   236  d503201f       constant
0xffff8bd11770   240  8bb06000       constant
0xffff8bd11774   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd116e4  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd11720  constant pool (size 16)
0xffff8bd11758  runtime entry
0xffff8bd11764  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4257
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd117e0     0  mov x2, x1
0xffff8bd117e4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd117f8)
0xffff8bd117e8     8  mov x3, x0
0xffff8bd117ec    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd11808)
0xffff8bd117f0    16  eor x0, x3, x2
0xffff8bd117f4    20  ret
0xffff8bd117f8    24  movz x16, #0x0
0xffff8bd117fc    28  sub csp, jssp, #0x10 (16)
0xffff8bd11800    32  stp fp, lr, [jssp, #-16]!
0xffff8bd11804    36  bl #+0x14 (addr 0xffff8bd11818)
0xffff8bd11808    40  movz x16, #0x8
0xffff8bd1180c    44  sub csp, jssp, #0x10 (16)
0xffff8bd11810    48  stp fp, lr, [jssp, #-16]!
0xffff8bd11814    52  bl #+0x4 (addr 0xffff8bd11818)
0xffff8bd11818    56  movz x17, #0xa00000000
0xffff8bd1181c    60  sub csp, jssp, #0x10 (16)
0xffff8bd11820    64  stp x17, cp, [jssp, #-16]!
0xffff8bd11824    68  add fp, jssp, #0x10 (16)
0xffff8bd11828    72  ldr x17, pc+24 (addr 0x0000ffff8bd11840)    ;; lazy deoptimization bailout 0
0xffff8bd1182c    76  add x17, x17, x16
0xffff8bd11830    80  br x17
0xffff8bd11834    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11838    88  d63f03e0       constant
0xffff8bd1183c    92  d503201f       constant
0xffff8bd11840    96  8bb06000       constant
0xffff8bd11844   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd11828  runtime entry
0xffff8bd11834  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4257
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd117e0     0  mov x2, x1
0xffff8bd117e4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd117f8)
0xffff8bd117e8     8  mov x3, x0
0xffff8bd117ec    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd11808)
0xffff8bd117f0    16  eor x0, x3, x2
0xffff8bd117f4    20  ret
0xffff8bd117f8    24  movz x16, #0x0
0xffff8bd117fc    28  sub csp, jssp, #0x10 (16)
0xffff8bd11800    32  stp fp, lr, [jssp, #-16]!
0xffff8bd11804    36  bl #+0x14 (addr 0xffff8bd11818)
0xffff8bd11808    40  movz x16, #0x8
0xffff8bd1180c    44  sub csp, jssp, #0x10 (16)
0xffff8bd11810    48  stp fp, lr, [jssp, #-16]!
0xffff8bd11814    52  bl #+0x4 (addr 0xffff8bd11818)
0xffff8bd11818    56  movz x17, #0xa00000000
0xffff8bd1181c    60  sub csp, jssp, #0x10 (16)
0xffff8bd11820    64  stp x17, cp, [jssp, #-16]!
0xffff8bd11824    68  add fp, jssp, #0x10 (16)
0xffff8bd11828    72  ldr x17, pc+24 (addr 0x0000ffff8bd11840)    ;; lazy deoptimization bailout 0
0xffff8bd1182c    76  add x17, x17, x16
0xffff8bd11830    80  br x17
0xffff8bd11834    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11838    88  d63f03e0       constant
0xffff8bd1183c    92  d503201f       constant
0xffff8bd11840    96  8bb06000       constant
0xffff8bd11844   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd11828  runtime entry
0xffff8bd11834  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4241
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd118c0     0  mov x2, x1
0xffff8bd118c4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd118d8)
0xffff8bd118c8     8  mov x3, x0
0xffff8bd118cc    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd118e8)
0xffff8bd118d0    16  eor x0, x3, x2
0xffff8bd118d4    20  ret
0xffff8bd118d8    24  movz x16, #0x0
0xffff8bd118dc    28  sub csp, jssp, #0x10 (16)
0xffff8bd118e0    32  stp fp, lr, [jssp, #-16]!
0xffff8bd118e4    36  bl #+0x14 (addr 0xffff8bd118f8)
0xffff8bd118e8    40  movz x16, #0x8
0xffff8bd118ec    44  sub csp, jssp, #0x10 (16)
0xffff8bd118f0    48  stp fp, lr, [jssp, #-16]!
0xffff8bd118f4    52  bl #+0x4 (addr 0xffff8bd118f8)
0xffff8bd118f8    56  movz x17, #0xa00000000
0xffff8bd118fc    60  sub csp, jssp, #0x10 (16)
0xffff8bd11900    64  stp x17, cp, [jssp, #-16]!
0xffff8bd11904    68  add fp, jssp, #0x10 (16)
0xffff8bd11908    72  ldr x17, pc+24 (addr 0x0000ffff8bd11920)    ;; lazy deoptimization bailout 0
0xffff8bd1190c    76  add x17, x17, x16
0xffff8bd11910    80  br x17
0xffff8bd11914    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11918    88  d63f03e0       constant
0xffff8bd1191c    92  d503201f       constant
0xffff8bd11920    96  8bb06000       constant
0xffff8bd11924   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd11908  runtime entry
0xffff8bd11914  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4241
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Smi*Int32->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd118c0     0  mov x2, x1
0xffff8bd118c4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd118d8)
0xffff8bd118c8     8  mov x3, x0
0xffff8bd118cc    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd118e8)
0xffff8bd118d0    16  eor x0, x3, x2
0xffff8bd118d4    20  ret
0xffff8bd118d8    24  movz x16, #0x0
0xffff8bd118dc    28  sub csp, jssp, #0x10 (16)
0xffff8bd118e0    32  stp fp, lr, [jssp, #-16]!
0xffff8bd118e4    36  bl #+0x14 (addr 0xffff8bd118f8)
0xffff8bd118e8    40  movz x16, #0x8
0xffff8bd118ec    44  sub csp, jssp, #0x10 (16)
0xffff8bd118f0    48  stp fp, lr, [jssp, #-16]!
0xffff8bd118f4    52  bl #+0x4 (addr 0xffff8bd118f8)
0xffff8bd118f8    56  movz x17, #0xa00000000
0xffff8bd118fc    60  sub csp, jssp, #0x10 (16)
0xffff8bd11900    64  stp x17, cp, [jssp, #-16]!
0xffff8bd11904    68  add fp, jssp, #0x10 (16)
0xffff8bd11908    72  ldr x17, pc+24 (addr 0x0000ffff8bd11920)    ;; lazy deoptimization bailout 0
0xffff8bd1190c    76  add x17, x17, x16
0xffff8bd11910    80  br x17
0xffff8bd11914    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11918    88  d63f03e0       constant
0xffff8bd1191c    92  d503201f       constant
0xffff8bd11920    96  8bb06000       constant
0xffff8bd11924   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd11908  runtime entry
0xffff8bd11914  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2193
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 112)
0xffff8bd119a0     0  mov x2, x1
0xffff8bd119a4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd119b8)
0xffff8bd119a8     8  mov x3, x0
0xffff8bd119ac    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd119c8)
0xffff8bd119b0    16  eor x0, x3, x2
0xffff8bd119b4    20  ret
0xffff8bd119b8    24  movz x16, #0x0
0xffff8bd119bc    28  sub csp, jssp, #0x10 (16)
0xffff8bd119c0    32  stp fp, lr, [jssp, #-16]!
0xffff8bd119c4    36  bl #+0x14 (addr 0xffff8bd119d8)
0xffff8bd119c8    40  movz x16, #0x8
0xffff8bd119cc    44  sub csp, jssp, #0x10 (16)
0xffff8bd119d0    48  stp fp, lr, [jssp, #-16]!
0xffff8bd119d4    52  bl #+0x4 (addr 0xffff8bd119d8)
0xffff8bd119d8    56  movz x17, #0xa00000000
0xffff8bd119dc    60  sub csp, jssp, #0x10 (16)
0xffff8bd119e0    64  stp x17, cp, [jssp, #-16]!
0xffff8bd119e4    68  add fp, jssp, #0x10 (16)
0xffff8bd119e8    72  ldr x17, pc+24 (addr 0x0000ffff8bd11a00)    ;; lazy deoptimization bailout 0
0xffff8bd119ec    76  add x17, x17, x16
0xffff8bd119f0    80  br x17
0xffff8bd119f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd119f8    88  d63f03e0       constant
0xffff8bd119fc    92  d503201f       constant
0xffff8bd11a00    96  8bb06000       constant
0xffff8bd11a04   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd119e8  runtime entry
0xffff8bd119f4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2193
type = NORMAL
name = BinaryOpICStub(BIT_XOR:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 112)
0xffff8bd119a0     0  mov x2, x1
0xffff8bd119a4     4  tbnz w2, #0, #+0x14 (addr 0xffff8bd119b8)
0xffff8bd119a8     8  mov x3, x0
0xffff8bd119ac    12  tbnz w3, #0, #+0x1c (addr 0xffff8bd119c8)
0xffff8bd119b0    16  eor x0, x3, x2
0xffff8bd119b4    20  ret
0xffff8bd119b8    24  movz x16, #0x0
0xffff8bd119bc    28  sub csp, jssp, #0x10 (16)
0xffff8bd119c0    32  stp fp, lr, [jssp, #-16]!
0xffff8bd119c4    36  bl #+0x14 (addr 0xffff8bd119d8)
0xffff8bd119c8    40  movz x16, #0x8
0xffff8bd119cc    44  sub csp, jssp, #0x10 (16)
0xffff8bd119d0    48  stp fp, lr, [jssp, #-16]!
0xffff8bd119d4    52  bl #+0x4 (addr 0xffff8bd119d8)
0xffff8bd119d8    56  movz x17, #0xa00000000
0xffff8bd119dc    60  sub csp, jssp, #0x10 (16)
0xffff8bd119e0    64  stp x17, cp, [jssp, #-16]!
0xffff8bd119e4    68  add fp, jssp, #0x10 (16)
0xffff8bd119e8    72  ldr x17, pc+24 (addr 0x0000ffff8bd11a00)    ;; lazy deoptimization bailout 0
0xffff8bd119ec    76  add x17, x17, x16
0xffff8bd119f0    80  br x17
0xffff8bd119f4    84  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd119f8    88  d63f03e0       constant
0xffff8bd119fc    92  d503201f       constant
0xffff8bd11a00    96  8bb06000       constant
0xffff8bd11a04   100  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd119e8  runtime entry
0xffff8bd119f4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4394
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 176)
0xffff8bd11a80     0  mov x2, x1
0xffff8bd11a84     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd11ac8)
0xffff8bd11a88     8  mov x3, x0
0xffff8bd11a8c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd11ad8)
0xffff8bd11a90    16  asr x2, x2, #32
0xffff8bd11a94    20  asr x3, x3, #32
0xffff8bd11a98    24  sdiv w5, w2, w3
0xffff8bd11a9c    28  cbz w3, #+0x4c (addr 0xffff8bd11ae8)
0xffff8bd11aa0    32  cmp w3, #0x0 (0)
0xffff8bd11aa4    36  ccmp w2, #0, #nzcv, mi
0xffff8bd11aa8    40  b.eq #+0x40 (addr 0xffff8bd11ae8)
0xffff8bd11aac    44  cmp w2, #0x1 (1)
0xffff8bd11ab0    48  ccmn w3, #1, #nzcv, vs
0xffff8bd11ab4    52  b.eq #+0x34 (addr 0xffff8bd11ae8)
0xffff8bd11ab8    56  msub w4, w5, w3, w2
0xffff8bd11abc    60  cbnz w4, #+0x2c (addr 0xffff8bd11ae8)
0xffff8bd11ac0    64  lsl x0, x5, #32
0xffff8bd11ac4    68  ret
0xffff8bd11ac8    72  movz x16, #0x0
0xffff8bd11acc    76  sub csp, jssp, #0x10 (16)
0xffff8bd11ad0    80  stp fp, lr, [jssp, #-16]!
0xffff8bd11ad4    84  bl #+0x24 (addr 0xffff8bd11af8)
0xffff8bd11ad8    88  movz x16, #0x8
0xffff8bd11adc    92  sub csp, jssp, #0x10 (16)
0xffff8bd11ae0    96  stp fp, lr, [jssp, #-16]!
0xffff8bd11ae4   100  bl #+0x14 (addr 0xffff8bd11af8)
0xffff8bd11ae8   104  movz x16, #0x10
0xffff8bd11aec   108  sub csp, jssp, #0x10 (16)
0xffff8bd11af0   112  stp fp, lr, [jssp, #-16]!
0xffff8bd11af4   116  bl #+0x4 (addr 0xffff8bd11af8)
0xffff8bd11af8   120  movz x17, #0xa00000000
0xffff8bd11afc   124  sub csp, jssp, #0x10 (16)
0xffff8bd11b00   128  stp x17, cp, [jssp, #-16]!
0xffff8bd11b04   132  add fp, jssp, #0x10 (16)
0xffff8bd11b08   136  ldr x17, pc+24 (addr 0x0000ffff8bd11b20)    ;; lazy deoptimization bailout 0
0xffff8bd11b0c   140  add x17, x17, x16
0xffff8bd11b10   144  br x17
0xffff8bd11b14   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11b18   152  d63f03e0       constant
0xffff8bd11b1c   156  d503201f       constant
0xffff8bd11b20   160  8bb06000       constant
0xffff8bd11b24   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd11b08  runtime entry
0xffff8bd11b14  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4394
type = NORMAL
name = BinaryOpICStub(DIV:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 176)
0xffff8bd11a80     0  mov x2, x1
0xffff8bd11a84     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd11ac8)
0xffff8bd11a88     8  mov x3, x0
0xffff8bd11a8c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd11ad8)
0xffff8bd11a90    16  asr x2, x2, #32
0xffff8bd11a94    20  asr x3, x3, #32
0xffff8bd11a98    24  sdiv w5, w2, w3
0xffff8bd11a9c    28  cbz w3, #+0x4c (addr 0xffff8bd11ae8)
0xffff8bd11aa0    32  cmp w3, #0x0 (0)
0xffff8bd11aa4    36  ccmp w2, #0, #nzcv, mi
0xffff8bd11aa8    40  b.eq #+0x40 (addr 0xffff8bd11ae8)
0xffff8bd11aac    44  cmp w2, #0x1 (1)
0xffff8bd11ab0    48  ccmn w3, #1, #nzcv, vs
0xffff8bd11ab4    52  b.eq #+0x34 (addr 0xffff8bd11ae8)
0xffff8bd11ab8    56  msub w4, w5, w3, w2
0xffff8bd11abc    60  cbnz w4, #+0x2c (addr 0xffff8bd11ae8)
0xffff8bd11ac0    64  lsl x0, x5, #32
0xffff8bd11ac4    68  ret
0xffff8bd11ac8    72  movz x16, #0x0
0xffff8bd11acc    76  sub csp, jssp, #0x10 (16)
0xffff8bd11ad0    80  stp fp, lr, [jssp, #-16]!
0xffff8bd11ad4    84  bl #+0x24 (addr 0xffff8bd11af8)
0xffff8bd11ad8    88  movz x16, #0x8
0xffff8bd11adc    92  sub csp, jssp, #0x10 (16)
0xffff8bd11ae0    96  stp fp, lr, [jssp, #-16]!
0xffff8bd11ae4   100  bl #+0x14 (addr 0xffff8bd11af8)
0xffff8bd11ae8   104  movz x16, #0x10
0xffff8bd11aec   108  sub csp, jssp, #0x10 (16)
0xffff8bd11af0   112  stp fp, lr, [jssp, #-16]!
0xffff8bd11af4   116  bl #+0x4 (addr 0xffff8bd11af8)
0xffff8bd11af8   120  movz x17, #0xa00000000
0xffff8bd11afc   124  sub csp, jssp, #0x10 (16)
0xffff8bd11b00   128  stp x17, cp, [jssp, #-16]!
0xffff8bd11b04   132  add fp, jssp, #0x10 (16)
0xffff8bd11b08   136  ldr x17, pc+24 (addr 0x0000ffff8bd11b20)    ;; lazy deoptimization bailout 0
0xffff8bd11b0c   140  add x17, x17, x16
0xffff8bd11b10   144  br x17
0xffff8bd11b14   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11b18   152  d63f03e0       constant
0xffff8bd11b1c   156  d503201f       constant
0xffff8bd11b20   160  8bb06000       constant
0xffff8bd11b24   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd11b08  runtime entry
0xffff8bd11b14  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4410
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff8bd11ba0     0  mov x2, x1
0xffff8bd11ba4     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd11c68)
0xffff8bd11ba8     8  mov x3, x0
0xffff8bd11bac    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd11c78)
0xffff8bd11bb0    16  scvtf d0, x2, #32
0xffff8bd11bb4    20  scvtf d1, x3, #32
0xffff8bd11bb8    24  fdiv d0, d0, d1
0xffff8bd11bbc    28  movz x1, #0xe2c0
0xffff8bd11bc0    32  movk x1, #0x2cb8, lsl #16
0xffff8bd11bc4    36  ldp x2, x0, [x1]
0xffff8bd11bc8    40  adds x16, x2, #0x10 (16)
0xffff8bd11bcc    44  ccmp x16, x0, #nzCv, lo
0xffff8bd11bd0    48  b.hi #+0x20 (addr 0xffff8bd11bf0)
0xffff8bd11bd4    52  str x16, [x1]
0xffff8bd11bd8    56  ldr x1, [x26, #120]
0xffff8bd11bdc    60  str x1, [x2]
0xffff8bd11be0    64  orr x2, x2, #0x1
0xffff8bd11be4    68  stur d0, [x2, #7]
0xffff8bd11be8    72  mov x0, x2
0xffff8bd11bec    76  ret
0xffff8bd11bf0    80  sub csp, jssp, #0x10 (16)
0xffff8bd11bf4    84  stp fp, lr, [jssp, #-16]!
0xffff8bd11bf8    88  movz fp, #0xa00000000
0xffff8bd11bfc    92  sub csp, jssp, #0x8 (8)
0xffff8bd11c00    96  str fp, [jssp, #-8]!
0xffff8bd11c04   100  add fp, jssp, #0x8 (8)
0xffff8bd11c08   104  movz x2, #0x0
0xffff8bd11c0c   108  mov x16, lr
0xffff8bd11c10   112  ldr x17, pc+64 (addr 0x0000ffff8bd11c50)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd11c14   116  blr x17
0xffff8bd11c18   120  ldur cp, [fp, #-8]
0xffff8bd11c1c   124  movz x0, #0x0
0xffff8bd11c20   128  movz x1, #0x4b48
0xffff8bd11c24   132  movk x1, #0xe4, lsl #16
0xffff8bd11c28   136  ldr x16, pc+48 (addr 0x0000ffff8bd11c58)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd11c2c   140  blr x16
0xffff8bd11c30   144  str x0, [jssp, #16]
0xffff8bd11c34   148  ldr x16, pc+44 (addr 0x0000ffff8bd11c60)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd11c38   152  blr x16
0xffff8bd11c3c   156  ldr lr, [jssp, #16]
0xffff8bd11c40   160  ldp xzr, fp, [jssp], #24
0xffff8bd11c44   164  b #-0x60 (addr 0xffff8bd11be4)
0xffff8bd11c48   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd11c4c   172  d63f03e0       constant
0xffff8bd11c50   176  8bd06820       constant
0xffff8bd11c54   180  0000ffff       constant
0xffff8bd11c58   184  8bd06260       constant
0xffff8bd11c5c   188  0000ffff       constant
0xffff8bd11c60   192  8bd068e0       constant
0xffff8bd11c64   196  0000ffff       constant
0xffff8bd11c68   200  movz x16, #0x0
0xffff8bd11c6c   204  sub csp, jssp, #0x10 (16)
0xffff8bd11c70   208  stp fp, lr, [jssp, #-16]!
0xffff8bd11c74   212  bl #+0x14 (addr 0xffff8bd11c88)
0xffff8bd11c78   216  movz x16, #0x8
0xffff8bd11c7c   220  sub csp, jssp, #0x10 (16)
0xffff8bd11c80   224  stp fp, lr, [jssp, #-16]!
0xffff8bd11c84   228  bl #+0x4 (addr 0xffff8bd11c88)
0xffff8bd11c88   232  movz x17, #0xa00000000
0xffff8bd11c8c   236  sub csp, jssp, #0x10 (16)
0xffff8bd11c90   240  stp x17, cp, [jssp, #-16]!
0xffff8bd11c94   244  add fp, jssp, #0x10 (16)
0xffff8bd11c98   248  ldr x17, pc+24 (addr 0x0000ffff8bd11cb0)    ;; lazy deoptimization bailout 0
0xffff8bd11c9c   252  add x17, x17, x16
0xffff8bd11ca0   256  br x17
0xffff8bd11ca4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11ca8   264  d63f03e0       constant
0xffff8bd11cac   268  d503201f       constant
0xffff8bd11cb0   272  8bb06000       constant
0xffff8bd11cb4   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd11c30   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd11c10  code target (STUB)  (0xffff8bd06820)
0xffff8bd11c28  code target (STUB)  (0xffff8bd06260)
0xffff8bd11c34  code target (STUB)  (0xffff8bd068e0)
0xffff8bd11c48  constant pool (size 32)
0xffff8bd11c98  runtime entry
0xffff8bd11ca4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4410
type = NORMAL
name = BinaryOpICStub(DIV:Int32*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff8bd11ba0     0  mov x2, x1
0xffff8bd11ba4     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd11c68)
0xffff8bd11ba8     8  mov x3, x0
0xffff8bd11bac    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd11c78)
0xffff8bd11bb0    16  scvtf d0, x2, #32
0xffff8bd11bb4    20  scvtf d1, x3, #32
0xffff8bd11bb8    24  fdiv d0, d0, d1
0xffff8bd11bbc    28  movz x1, #0xe2c0
0xffff8bd11bc0    32  movk x1, #0x2cb8, lsl #16
0xffff8bd11bc4    36  ldp x2, x0, [x1]
0xffff8bd11bc8    40  adds x16, x2, #0x10 (16)
0xffff8bd11bcc    44  ccmp x16, x0, #nzCv, lo
0xffff8bd11bd0    48  b.hi #+0x20 (addr 0xffff8bd11bf0)
0xffff8bd11bd4    52  str x16, [x1]
0xffff8bd11bd8    56  ldr x1, [x26, #120]
0xffff8bd11bdc    60  str x1, [x2]
0xffff8bd11be0    64  orr x2, x2, #0x1
0xffff8bd11be4    68  stur d0, [x2, #7]
0xffff8bd11be8    72  mov x0, x2
0xffff8bd11bec    76  ret
0xffff8bd11bf0    80  sub csp, jssp, #0x10 (16)
0xffff8bd11bf4    84  stp fp, lr, [jssp, #-16]!
0xffff8bd11bf8    88  movz fp, #0xa00000000
0xffff8bd11bfc    92  sub csp, jssp, #0x8 (8)
0xffff8bd11c00    96  str fp, [jssp, #-8]!
0xffff8bd11c04   100  add fp, jssp, #0x8 (8)
0xffff8bd11c08   104  movz x2, #0x0
0xffff8bd11c0c   108  mov x16, lr
0xffff8bd11c10   112  ldr x17, pc+64 (addr 0x0000ffff8bd11c50)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd11c14   116  blr x17
0xffff8bd11c18   120  ldur cp, [fp, #-8]
0xffff8bd11c1c   124  movz x0, #0x0
0xffff8bd11c20   128  movz x1, #0x4b48
0xffff8bd11c24   132  movk x1, #0xe4, lsl #16
0xffff8bd11c28   136  ldr x16, pc+48 (addr 0x0000ffff8bd11c58)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd11c2c   140  blr x16
0xffff8bd11c30   144  str x0, [jssp, #16]
0xffff8bd11c34   148  ldr x16, pc+44 (addr 0x0000ffff8bd11c60)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd11c38   152  blr x16
0xffff8bd11c3c   156  ldr lr, [jssp, #16]
0xffff8bd11c40   160  ldp xzr, fp, [jssp], #24
0xffff8bd11c44   164  b #-0x60 (addr 0xffff8bd11be4)
0xffff8bd11c48   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd11c4c   172  d63f03e0       constant
0xffff8bd11c50   176  8bd06820       constant
0xffff8bd11c54   180  0000ffff       constant
0xffff8bd11c58   184  8bd06260       constant
0xffff8bd11c5c   188  0000ffff       constant
0xffff8bd11c60   192  8bd068e0       constant
0xffff8bd11c64   196  0000ffff       constant
0xffff8bd11c68   200  movz x16, #0x0
0xffff8bd11c6c   204  sub csp, jssp, #0x10 (16)
0xffff8bd11c70   208  stp fp, lr, [jssp, #-16]!
0xffff8bd11c74   212  bl #+0x14 (addr 0xffff8bd11c88)
0xffff8bd11c78   216  movz x16, #0x8
0xffff8bd11c7c   220  sub csp, jssp, #0x10 (16)
0xffff8bd11c80   224  stp fp, lr, [jssp, #-16]!
0xffff8bd11c84   228  bl #+0x4 (addr 0xffff8bd11c88)
0xffff8bd11c88   232  movz x17, #0xa00000000
0xffff8bd11c8c   236  sub csp, jssp, #0x10 (16)
0xffff8bd11c90   240  stp x17, cp, [jssp, #-16]!
0xffff8bd11c94   244  add fp, jssp, #0x10 (16)
0xffff8bd11c98   248  ldr x17, pc+24 (addr 0x0000ffff8bd11cb0)    ;; lazy deoptimization bailout 0
0xffff8bd11c9c   252  add x17, x17, x16
0xffff8bd11ca0   256  br x17
0xffff8bd11ca4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11ca8   264  d63f03e0       constant
0xffff8bd11cac   268  d503201f       constant
0xffff8bd11cb0   272  8bb06000       constant
0xffff8bd11cb4   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd11c30   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd11c10  code target (STUB)  (0xffff8bd06820)
0xffff8bd11c28  code target (STUB)  (0xffff8bd06260)
0xffff8bd11c34  code target (STUB)  (0xffff8bd068e0)
0xffff8bd11c48  constant pool (size 32)
0xffff8bd11c98  runtime entry
0xffff8bd11ca4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6458
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd11d40     0  mov x2, x1
0xffff8bd11d44     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd11e38)
0xffff8bd11d48     8  tbz w0, #0, #+0x34 (addr 0xffff8bd11d7c)
0xffff8bd11d4c    12  ldur x16, [x0, #-1]
0xffff8bd11d50    16  ldr x17, [x26, #120]
0xffff8bd11d54    20  cmp x16, x17
0xffff8bd11d58    24  b.ne #+0xc (addr 0xffff8bd11d64)
0xffff8bd11d5c    28  ldur d0, [x0, #7]
0xffff8bd11d60    32  b #+0x20 (addr 0xffff8bd11d80)
0xffff8bd11d64    36  ldr x16, [x26, #40]
0xffff8bd11d68    40  cmp x0, x16
0xffff8bd11d6c    44  b.ne #+0xdc (addr 0xffff8bd11e48)
0xffff8bd11d70    48  ldr x3, [x26, #928]
0xffff8bd11d74    52  ldur d0, [x3, #7]
0xffff8bd11d78    56  b #+0x8 (addr 0xffff8bd11d80)
0xffff8bd11d7c    60  scvtf d0, x0, #32
0xffff8bd11d80    64  scvtf d1, x2, #32
0xffff8bd11d84    68  fdiv d0, d1, d0
0xffff8bd11d88    72  movz x1, #0xe2c0
0xffff8bd11d8c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd11d90    80  ldp x2, x0, [x1]
0xffff8bd11d94    84  adds x16, x2, #0x10 (16)
0xffff8bd11d98    88  ccmp x16, x0, #nzCv, lo
0xffff8bd11d9c    92  b.hi #+0x20 (addr 0xffff8bd11dbc)
0xffff8bd11da0    96  str x16, [x1]
0xffff8bd11da4   100  ldr x1, [x26, #120]
0xffff8bd11da8   104  str x1, [x2]
0xffff8bd11dac   108  orr x2, x2, #0x1
0xffff8bd11db0   112  stur d0, [x2, #7]
0xffff8bd11db4   116  mov x0, x2
0xffff8bd11db8   120  ret
0xffff8bd11dbc   124  sub csp, jssp, #0x10 (16)
0xffff8bd11dc0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd11dc4   132  movz fp, #0xa00000000
0xffff8bd11dc8   136  sub csp, jssp, #0x8 (8)
0xffff8bd11dcc   140  str fp, [jssp, #-8]!
0xffff8bd11dd0   144  add fp, jssp, #0x8 (8)
0xffff8bd11dd4   148  movz x2, #0x0
0xffff8bd11dd8   152  mov x16, lr
0xffff8bd11ddc   156  ldr x17, pc+68 (addr 0x0000ffff8bd11e20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd11de0   160  blr x17
0xffff8bd11de4   164  ldur cp, [fp, #-8]
0xffff8bd11de8   168  movz x0, #0x0
0xffff8bd11dec   172  movz x1, #0x4b48
0xffff8bd11df0   176  movk x1, #0xe4, lsl #16
0xffff8bd11df4   180  ldr x16, pc+52 (addr 0x0000ffff8bd11e28)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd11df8   184  blr x16
0xffff8bd11dfc   188  str x0, [jssp, #16]
0xffff8bd11e00   192  ldr x16, pc+48 (addr 0x0000ffff8bd11e30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd11e04   196  blr x16
0xffff8bd11e08   200  ldr lr, [jssp, #16]
0xffff8bd11e0c   204  ldp xzr, fp, [jssp], #24
0xffff8bd11e10   208  b #-0x60 (addr 0xffff8bd11db0)
0xffff8bd11e14   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd11e18   216  d63f03e0       constant
0xffff8bd11e1c   220  d503201f       constant
0xffff8bd11e20   224  8bd06820       constant
0xffff8bd11e24   228  0000ffff       constant
0xffff8bd11e28   232  8bd06260       constant
0xffff8bd11e2c   236  0000ffff       constant
0xffff8bd11e30   240  8bd068e0       constant
0xffff8bd11e34   244  0000ffff       constant
0xffff8bd11e38   248  movz x16, #0x0
0xffff8bd11e3c   252  sub csp, jssp, #0x10 (16)
0xffff8bd11e40   256  stp fp, lr, [jssp, #-16]!
0xffff8bd11e44   260  bl #+0x14 (addr 0xffff8bd11e58)
0xffff8bd11e48   264  movz x16, #0x8
0xffff8bd11e4c   268  sub csp, jssp, #0x10 (16)
0xffff8bd11e50   272  stp fp, lr, [jssp, #-16]!
0xffff8bd11e54   276  bl #+0x4 (addr 0xffff8bd11e58)
0xffff8bd11e58   280  movz x17, #0xa00000000
0xffff8bd11e5c   284  sub csp, jssp, #0x10 (16)
0xffff8bd11e60   288  stp x17, cp, [jssp, #-16]!
0xffff8bd11e64   292  add fp, jssp, #0x10 (16)
0xffff8bd11e68   296  ldr x17, pc+24 (addr 0x0000ffff8bd11e80)    ;; lazy deoptimization bailout 0
0xffff8bd11e6c   300  add x17, x17, x16
0xffff8bd11e70   304  br x17
0xffff8bd11e74   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11e78   312  d63f03e0       constant
0xffff8bd11e7c   316  d503201f       constant
0xffff8bd11e80   320  8bb06000       constant
0xffff8bd11e84   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd11dfc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd11ddc  code target (STUB)  (0xffff8bd06820)
0xffff8bd11df4  code target (STUB)  (0xffff8bd06260)
0xffff8bd11e00  code target (STUB)  (0xffff8bd068e0)
0xffff8bd11e14  constant pool (size 36)
0xffff8bd11e68  runtime entry
0xffff8bd11e74  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6458
type = NORMAL
name = BinaryOpICStub(DIV:Int32*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd11d40     0  mov x2, x1
0xffff8bd11d44     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd11e38)
0xffff8bd11d48     8  tbz w0, #0, #+0x34 (addr 0xffff8bd11d7c)
0xffff8bd11d4c    12  ldur x16, [x0, #-1]
0xffff8bd11d50    16  ldr x17, [x26, #120]
0xffff8bd11d54    20  cmp x16, x17
0xffff8bd11d58    24  b.ne #+0xc (addr 0xffff8bd11d64)
0xffff8bd11d5c    28  ldur d0, [x0, #7]
0xffff8bd11d60    32  b #+0x20 (addr 0xffff8bd11d80)
0xffff8bd11d64    36  ldr x16, [x26, #40]
0xffff8bd11d68    40  cmp x0, x16
0xffff8bd11d6c    44  b.ne #+0xdc (addr 0xffff8bd11e48)
0xffff8bd11d70    48  ldr x3, [x26, #928]
0xffff8bd11d74    52  ldur d0, [x3, #7]
0xffff8bd11d78    56  b #+0x8 (addr 0xffff8bd11d80)
0xffff8bd11d7c    60  scvtf d0, x0, #32
0xffff8bd11d80    64  scvtf d1, x2, #32
0xffff8bd11d84    68  fdiv d0, d1, d0
0xffff8bd11d88    72  movz x1, #0xe2c0
0xffff8bd11d8c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd11d90    80  ldp x2, x0, [x1]
0xffff8bd11d94    84  adds x16, x2, #0x10 (16)
0xffff8bd11d98    88  ccmp x16, x0, #nzCv, lo
0xffff8bd11d9c    92  b.hi #+0x20 (addr 0xffff8bd11dbc)
0xffff8bd11da0    96  str x16, [x1]
0xffff8bd11da4   100  ldr x1, [x26, #120]
0xffff8bd11da8   104  str x1, [x2]
0xffff8bd11dac   108  orr x2, x2, #0x1
0xffff8bd11db0   112  stur d0, [x2, #7]
0xffff8bd11db4   116  mov x0, x2
0xffff8bd11db8   120  ret
0xffff8bd11dbc   124  sub csp, jssp, #0x10 (16)
0xffff8bd11dc0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd11dc4   132  movz fp, #0xa00000000
0xffff8bd11dc8   136  sub csp, jssp, #0x8 (8)
0xffff8bd11dcc   140  str fp, [jssp, #-8]!
0xffff8bd11dd0   144  add fp, jssp, #0x8 (8)
0xffff8bd11dd4   148  movz x2, #0x0
0xffff8bd11dd8   152  mov x16, lr
0xffff8bd11ddc   156  ldr x17, pc+68 (addr 0x0000ffff8bd11e20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd11de0   160  blr x17
0xffff8bd11de4   164  ldur cp, [fp, #-8]
0xffff8bd11de8   168  movz x0, #0x0
0xffff8bd11dec   172  movz x1, #0x4b48
0xffff8bd11df0   176  movk x1, #0xe4, lsl #16
0xffff8bd11df4   180  ldr x16, pc+52 (addr 0x0000ffff8bd11e28)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd11df8   184  blr x16
0xffff8bd11dfc   188  str x0, [jssp, #16]
0xffff8bd11e00   192  ldr x16, pc+48 (addr 0x0000ffff8bd11e30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd11e04   196  blr x16
0xffff8bd11e08   200  ldr lr, [jssp, #16]
0xffff8bd11e0c   204  ldp xzr, fp, [jssp], #24
0xffff8bd11e10   208  b #-0x60 (addr 0xffff8bd11db0)
0xffff8bd11e14   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd11e18   216  d63f03e0       constant
0xffff8bd11e1c   220  d503201f       constant
0xffff8bd11e20   224  8bd06820       constant
0xffff8bd11e24   228  0000ffff       constant
0xffff8bd11e28   232  8bd06260       constant
0xffff8bd11e2c   236  0000ffff       constant
0xffff8bd11e30   240  8bd068e0       constant
0xffff8bd11e34   244  0000ffff       constant
0xffff8bd11e38   248  movz x16, #0x0
0xffff8bd11e3c   252  sub csp, jssp, #0x10 (16)
0xffff8bd11e40   256  stp fp, lr, [jssp, #-16]!
0xffff8bd11e44   260  bl #+0x14 (addr 0xffff8bd11e58)
0xffff8bd11e48   264  movz x16, #0x8
0xffff8bd11e4c   268  sub csp, jssp, #0x10 (16)
0xffff8bd11e50   272  stp fp, lr, [jssp, #-16]!
0xffff8bd11e54   276  bl #+0x4 (addr 0xffff8bd11e58)
0xffff8bd11e58   280  movz x17, #0xa00000000
0xffff8bd11e5c   284  sub csp, jssp, #0x10 (16)
0xffff8bd11e60   288  stp x17, cp, [jssp, #-16]!
0xffff8bd11e64   292  add fp, jssp, #0x10 (16)
0xffff8bd11e68   296  ldr x17, pc+24 (addr 0x0000ffff8bd11e80)    ;; lazy deoptimization bailout 0
0xffff8bd11e6c   300  add x17, x17, x16
0xffff8bd11e70   304  br x17
0xffff8bd11e74   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11e78   312  d63f03e0       constant
0xffff8bd11e7c   316  d503201f       constant
0xffff8bd11e80   320  8bb06000       constant
0xffff8bd11e84   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd11dfc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd11ddc  code target (STUB)  (0xffff8bd06820)
0xffff8bd11df4  code target (STUB)  (0xffff8bd06260)
0xffff8bd11e00  code target (STUB)  (0xffff8bd068e0)
0xffff8bd11e14  constant pool (size 36)
0xffff8bd11e68  runtime entry
0xffff8bd11e74  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2346
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 176)
0xffff8bd11f00     0  mov x2, x1
0xffff8bd11f04     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd11f48)
0xffff8bd11f08     8  mov x3, x0
0xffff8bd11f0c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd11f58)
0xffff8bd11f10    16  asr x2, x2, #32
0xffff8bd11f14    20  asr x3, x3, #32
0xffff8bd11f18    24  sdiv w5, w2, w3
0xffff8bd11f1c    28  cbz w3, #+0x4c (addr 0xffff8bd11f68)
0xffff8bd11f20    32  cmp w3, #0x0 (0)
0xffff8bd11f24    36  ccmp w2, #0, #nzcv, mi
0xffff8bd11f28    40  b.eq #+0x40 (addr 0xffff8bd11f68)
0xffff8bd11f2c    44  cmp w2, #0x1 (1)
0xffff8bd11f30    48  ccmn w3, #1, #nzcv, vs
0xffff8bd11f34    52  b.eq #+0x34 (addr 0xffff8bd11f68)
0xffff8bd11f38    56  msub w4, w5, w3, w2
0xffff8bd11f3c    60  cbnz w4, #+0x2c (addr 0xffff8bd11f68)
0xffff8bd11f40    64  lsl x0, x5, #32
0xffff8bd11f44    68  ret
0xffff8bd11f48    72  movz x16, #0x0
0xffff8bd11f4c    76  sub csp, jssp, #0x10 (16)
0xffff8bd11f50    80  stp fp, lr, [jssp, #-16]!
0xffff8bd11f54    84  bl #+0x24 (addr 0xffff8bd11f78)
0xffff8bd11f58    88  movz x16, #0x8
0xffff8bd11f5c    92  sub csp, jssp, #0x10 (16)
0xffff8bd11f60    96  stp fp, lr, [jssp, #-16]!
0xffff8bd11f64   100  bl #+0x14 (addr 0xffff8bd11f78)
0xffff8bd11f68   104  movz x16, #0x10
0xffff8bd11f6c   108  sub csp, jssp, #0x10 (16)
0xffff8bd11f70   112  stp fp, lr, [jssp, #-16]!
0xffff8bd11f74   116  bl #+0x4 (addr 0xffff8bd11f78)
0xffff8bd11f78   120  movz x17, #0xa00000000
0xffff8bd11f7c   124  sub csp, jssp, #0x10 (16)
0xffff8bd11f80   128  stp x17, cp, [jssp, #-16]!
0xffff8bd11f84   132  add fp, jssp, #0x10 (16)
0xffff8bd11f88   136  ldr x17, pc+24 (addr 0x0000ffff8bd11fa0)    ;; lazy deoptimization bailout 0
0xffff8bd11f8c   140  add x17, x17, x16
0xffff8bd11f90   144  br x17
0xffff8bd11f94   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11f98   152  d63f03e0       constant
0xffff8bd11f9c   156  d503201f       constant
0xffff8bd11fa0   160  8bb06000       constant
0xffff8bd11fa4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd11f88  runtime entry
0xffff8bd11f94  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2346
type = NORMAL
name = BinaryOpICStub(DIV:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 176)
0xffff8bd11f00     0  mov x2, x1
0xffff8bd11f04     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd11f48)
0xffff8bd11f08     8  mov x3, x0
0xffff8bd11f0c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd11f58)
0xffff8bd11f10    16  asr x2, x2, #32
0xffff8bd11f14    20  asr x3, x3, #32
0xffff8bd11f18    24  sdiv w5, w2, w3
0xffff8bd11f1c    28  cbz w3, #+0x4c (addr 0xffff8bd11f68)
0xffff8bd11f20    32  cmp w3, #0x0 (0)
0xffff8bd11f24    36  ccmp w2, #0, #nzcv, mi
0xffff8bd11f28    40  b.eq #+0x40 (addr 0xffff8bd11f68)
0xffff8bd11f2c    44  cmp w2, #0x1 (1)
0xffff8bd11f30    48  ccmn w3, #1, #nzcv, vs
0xffff8bd11f34    52  b.eq #+0x34 (addr 0xffff8bd11f68)
0xffff8bd11f38    56  msub w4, w5, w3, w2
0xffff8bd11f3c    60  cbnz w4, #+0x2c (addr 0xffff8bd11f68)
0xffff8bd11f40    64  lsl x0, x5, #32
0xffff8bd11f44    68  ret
0xffff8bd11f48    72  movz x16, #0x0
0xffff8bd11f4c    76  sub csp, jssp, #0x10 (16)
0xffff8bd11f50    80  stp fp, lr, [jssp, #-16]!
0xffff8bd11f54    84  bl #+0x24 (addr 0xffff8bd11f78)
0xffff8bd11f58    88  movz x16, #0x8
0xffff8bd11f5c    92  sub csp, jssp, #0x10 (16)
0xffff8bd11f60    96  stp fp, lr, [jssp, #-16]!
0xffff8bd11f64   100  bl #+0x14 (addr 0xffff8bd11f78)
0xffff8bd11f68   104  movz x16, #0x10
0xffff8bd11f6c   108  sub csp, jssp, #0x10 (16)
0xffff8bd11f70   112  stp fp, lr, [jssp, #-16]!
0xffff8bd11f74   116  bl #+0x4 (addr 0xffff8bd11f78)
0xffff8bd11f78   120  movz x17, #0xa00000000
0xffff8bd11f7c   124  sub csp, jssp, #0x10 (16)
0xffff8bd11f80   128  stp x17, cp, [jssp, #-16]!
0xffff8bd11f84   132  add fp, jssp, #0x10 (16)
0xffff8bd11f88   136  ldr x17, pc+24 (addr 0x0000ffff8bd11fa0)    ;; lazy deoptimization bailout 0
0xffff8bd11f8c   140  add x17, x17, x16
0xffff8bd11f90   144  br x17
0xffff8bd11f94   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd11f98   152  d63f03e0       constant
0xffff8bd11f9c   156  d503201f       constant
0xffff8bd11fa0   160  8bb06000       constant
0xffff8bd11fa4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd11f88  runtime entry
0xffff8bd11f94  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2362
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff8bd12020     0  mov x2, x1
0xffff8bd12024     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd120e8)
0xffff8bd12028     8  mov x3, x0
0xffff8bd1202c    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd120f8)
0xffff8bd12030    16  scvtf d0, x2, #32
0xffff8bd12034    20  scvtf d1, x3, #32
0xffff8bd12038    24  fdiv d0, d0, d1
0xffff8bd1203c    28  movz x1, #0xe2c0
0xffff8bd12040    32  movk x1, #0x2cb8, lsl #16
0xffff8bd12044    36  ldp x2, x0, [x1]
0xffff8bd12048    40  adds x16, x2, #0x10 (16)
0xffff8bd1204c    44  ccmp x16, x0, #nzCv, lo
0xffff8bd12050    48  b.hi #+0x20 (addr 0xffff8bd12070)
0xffff8bd12054    52  str x16, [x1]
0xffff8bd12058    56  ldr x1, [x26, #120]
0xffff8bd1205c    60  str x1, [x2]
0xffff8bd12060    64  orr x2, x2, #0x1
0xffff8bd12064    68  stur d0, [x2, #7]
0xffff8bd12068    72  mov x0, x2
0xffff8bd1206c    76  ret
0xffff8bd12070    80  sub csp, jssp, #0x10 (16)
0xffff8bd12074    84  stp fp, lr, [jssp, #-16]!
0xffff8bd12078    88  movz fp, #0xa00000000
0xffff8bd1207c    92  sub csp, jssp, #0x8 (8)
0xffff8bd12080    96  str fp, [jssp, #-8]!
0xffff8bd12084   100  add fp, jssp, #0x8 (8)
0xffff8bd12088   104  movz x2, #0x0
0xffff8bd1208c   108  mov x16, lr
0xffff8bd12090   112  ldr x17, pc+64 (addr 0x0000ffff8bd120d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd12094   116  blr x17
0xffff8bd12098   120  ldur cp, [fp, #-8]
0xffff8bd1209c   124  movz x0, #0x0
0xffff8bd120a0   128  movz x1, #0x4b48
0xffff8bd120a4   132  movk x1, #0xe4, lsl #16
0xffff8bd120a8   136  ldr x16, pc+48 (addr 0x0000ffff8bd120d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd120ac   140  blr x16
0xffff8bd120b0   144  str x0, [jssp, #16]
0xffff8bd120b4   148  ldr x16, pc+44 (addr 0x0000ffff8bd120e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd120b8   152  blr x16
0xffff8bd120bc   156  ldr lr, [jssp, #16]
0xffff8bd120c0   160  ldp xzr, fp, [jssp], #24
0xffff8bd120c4   164  b #-0x60 (addr 0xffff8bd12064)
0xffff8bd120c8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd120cc   172  d63f03e0       constant
0xffff8bd120d0   176  8bd06820       constant
0xffff8bd120d4   180  0000ffff       constant
0xffff8bd120d8   184  8bd06260       constant
0xffff8bd120dc   188  0000ffff       constant
0xffff8bd120e0   192  8bd068e0       constant
0xffff8bd120e4   196  0000ffff       constant
0xffff8bd120e8   200  movz x16, #0x0
0xffff8bd120ec   204  sub csp, jssp, #0x10 (16)
0xffff8bd120f0   208  stp fp, lr, [jssp, #-16]!
0xffff8bd120f4   212  bl #+0x14 (addr 0xffff8bd12108)
0xffff8bd120f8   216  movz x16, #0x8
0xffff8bd120fc   220  sub csp, jssp, #0x10 (16)
0xffff8bd12100   224  stp fp, lr, [jssp, #-16]!
0xffff8bd12104   228  bl #+0x4 (addr 0xffff8bd12108)
0xffff8bd12108   232  movz x17, #0xa00000000
0xffff8bd1210c   236  sub csp, jssp, #0x10 (16)
0xffff8bd12110   240  stp x17, cp, [jssp, #-16]!
0xffff8bd12114   244  add fp, jssp, #0x10 (16)
0xffff8bd12118   248  ldr x17, pc+24 (addr 0x0000ffff8bd12130)    ;; lazy deoptimization bailout 0
0xffff8bd1211c   252  add x17, x17, x16
0xffff8bd12120   256  br x17
0xffff8bd12124   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd12128   264  d63f03e0       constant
0xffff8bd1212c   268  d503201f       constant
0xffff8bd12130   272  8bb06000       constant
0xffff8bd12134   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd120b0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd12090  code target (STUB)  (0xffff8bd06820)
0xffff8bd120a8  code target (STUB)  (0xffff8bd06260)
0xffff8bd120b4  code target (STUB)  (0xffff8bd068e0)
0xffff8bd120c8  constant pool (size 32)
0xffff8bd12118  runtime entry
0xffff8bd12124  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2362
type = NORMAL
name = BinaryOpICStub(DIV:Int32*Smi->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff8bd12020     0  mov x2, x1
0xffff8bd12024     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd120e8)
0xffff8bd12028     8  mov x3, x0
0xffff8bd1202c    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd120f8)
0xffff8bd12030    16  scvtf d0, x2, #32
0xffff8bd12034    20  scvtf d1, x3, #32
0xffff8bd12038    24  fdiv d0, d0, d1
0xffff8bd1203c    28  movz x1, #0xe2c0
0xffff8bd12040    32  movk x1, #0x2cb8, lsl #16
0xffff8bd12044    36  ldp x2, x0, [x1]
0xffff8bd12048    40  adds x16, x2, #0x10 (16)
0xffff8bd1204c    44  ccmp x16, x0, #nzCv, lo
0xffff8bd12050    48  b.hi #+0x20 (addr 0xffff8bd12070)
0xffff8bd12054    52  str x16, [x1]
0xffff8bd12058    56  ldr x1, [x26, #120]
0xffff8bd1205c    60  str x1, [x2]
0xffff8bd12060    64  orr x2, x2, #0x1
0xffff8bd12064    68  stur d0, [x2, #7]
0xffff8bd12068    72  mov x0, x2
0xffff8bd1206c    76  ret
0xffff8bd12070    80  sub csp, jssp, #0x10 (16)
0xffff8bd12074    84  stp fp, lr, [jssp, #-16]!
0xffff8bd12078    88  movz fp, #0xa00000000
0xffff8bd1207c    92  sub csp, jssp, #0x8 (8)
0xffff8bd12080    96  str fp, [jssp, #-8]!
0xffff8bd12084   100  add fp, jssp, #0x8 (8)
0xffff8bd12088   104  movz x2, #0x0
0xffff8bd1208c   108  mov x16, lr
0xffff8bd12090   112  ldr x17, pc+64 (addr 0x0000ffff8bd120d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd12094   116  blr x17
0xffff8bd12098   120  ldur cp, [fp, #-8]
0xffff8bd1209c   124  movz x0, #0x0
0xffff8bd120a0   128  movz x1, #0x4b48
0xffff8bd120a4   132  movk x1, #0xe4, lsl #16
0xffff8bd120a8   136  ldr x16, pc+48 (addr 0x0000ffff8bd120d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd120ac   140  blr x16
0xffff8bd120b0   144  str x0, [jssp, #16]
0xffff8bd120b4   148  ldr x16, pc+44 (addr 0x0000ffff8bd120e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd120b8   152  blr x16
0xffff8bd120bc   156  ldr lr, [jssp, #16]
0xffff8bd120c0   160  ldp xzr, fp, [jssp], #24
0xffff8bd120c4   164  b #-0x60 (addr 0xffff8bd12064)
0xffff8bd120c8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd120cc   172  d63f03e0       constant
0xffff8bd120d0   176  8bd06820       constant
0xffff8bd120d4   180  0000ffff       constant
0xffff8bd120d8   184  8bd06260       constant
0xffff8bd120dc   188  0000ffff       constant
0xffff8bd120e0   192  8bd068e0       constant
0xffff8bd120e4   196  0000ffff       constant
0xffff8bd120e8   200  movz x16, #0x0
0xffff8bd120ec   204  sub csp, jssp, #0x10 (16)
0xffff8bd120f0   208  stp fp, lr, [jssp, #-16]!
0xffff8bd120f4   212  bl #+0x14 (addr 0xffff8bd12108)
0xffff8bd120f8   216  movz x16, #0x8
0xffff8bd120fc   220  sub csp, jssp, #0x10 (16)
0xffff8bd12100   224  stp fp, lr, [jssp, #-16]!
0xffff8bd12104   228  bl #+0x4 (addr 0xffff8bd12108)
0xffff8bd12108   232  movz x17, #0xa00000000
0xffff8bd1210c   236  sub csp, jssp, #0x10 (16)
0xffff8bd12110   240  stp x17, cp, [jssp, #-16]!
0xffff8bd12114   244  add fp, jssp, #0x10 (16)
0xffff8bd12118   248  ldr x17, pc+24 (addr 0x0000ffff8bd12130)    ;; lazy deoptimization bailout 0
0xffff8bd1211c   252  add x17, x17, x16
0xffff8bd12120   256  br x17
0xffff8bd12124   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd12128   264  d63f03e0       constant
0xffff8bd1212c   268  d503201f       constant
0xffff8bd12130   272  8bb06000       constant
0xffff8bd12134   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd120b0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd12090  code target (STUB)  (0xffff8bd06820)
0xffff8bd120a8  code target (STUB)  (0xffff8bd06260)
0xffff8bd120b4  code target (STUB)  (0xffff8bd068e0)
0xffff8bd120c8  constant pool (size 32)
0xffff8bd12118  runtime entry
0xffff8bd12124  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4538
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd121c0     0  mov x2, x0
0xffff8bd121c4     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd122b8)
0xffff8bd121c8     8  tbz w1, #0, #+0x34 (addr 0xffff8bd121fc)
0xffff8bd121cc    12  ldur x16, [x1, #-1]
0xffff8bd121d0    16  ldr x17, [x26, #120]
0xffff8bd121d4    20  cmp x16, x17
0xffff8bd121d8    24  b.ne #+0xc (addr 0xffff8bd121e4)
0xffff8bd121dc    28  ldur d0, [x1, #7]
0xffff8bd121e0    32  b #+0x20 (addr 0xffff8bd12200)
0xffff8bd121e4    36  ldr x16, [x26, #40]
0xffff8bd121e8    40  cmp x1, x16
0xffff8bd121ec    44  b.ne #+0xdc (addr 0xffff8bd122c8)
0xffff8bd121f0    48  ldr x3, [x26, #928]
0xffff8bd121f4    52  ldur d0, [x3, #7]
0xffff8bd121f8    56  b #+0x8 (addr 0xffff8bd12200)
0xffff8bd121fc    60  scvtf d0, x1, #32
0xffff8bd12200    64  scvtf d1, x2, #32
0xffff8bd12204    68  fdiv d0, d0, d1
0xffff8bd12208    72  movz x1, #0xe2c0
0xffff8bd1220c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd12210    80  ldp x2, x0, [x1]
0xffff8bd12214    84  adds x16, x2, #0x10 (16)
0xffff8bd12218    88  ccmp x16, x0, #nzCv, lo
0xffff8bd1221c    92  b.hi #+0x20 (addr 0xffff8bd1223c)
0xffff8bd12220    96  str x16, [x1]
0xffff8bd12224   100  ldr x1, [x26, #120]
0xffff8bd12228   104  str x1, [x2]
0xffff8bd1222c   108  orr x2, x2, #0x1
0xffff8bd12230   112  stur d0, [x2, #7]
0xffff8bd12234   116  mov x0, x2
0xffff8bd12238   120  ret
0xffff8bd1223c   124  sub csp, jssp, #0x10 (16)
0xffff8bd12240   128  stp fp, lr, [jssp, #-16]!
0xffff8bd12244   132  movz fp, #0xa00000000
0xffff8bd12248   136  sub csp, jssp, #0x8 (8)
0xffff8bd1224c   140  str fp, [jssp, #-8]!
0xffff8bd12250   144  add fp, jssp, #0x8 (8)
0xffff8bd12254   148  movz x2, #0x0
0xffff8bd12258   152  mov x16, lr
0xffff8bd1225c   156  ldr x17, pc+68 (addr 0x0000ffff8bd122a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd12260   160  blr x17
0xffff8bd12264   164  ldur cp, [fp, #-8]
0xffff8bd12268   168  movz x0, #0x0
0xffff8bd1226c   172  movz x1, #0x4b48
0xffff8bd12270   176  movk x1, #0xe4, lsl #16
0xffff8bd12274   180  ldr x16, pc+52 (addr 0x0000ffff8bd122a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd12278   184  blr x16
0xffff8bd1227c   188  str x0, [jssp, #16]
0xffff8bd12280   192  ldr x16, pc+48 (addr 0x0000ffff8bd122b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd12284   196  blr x16
0xffff8bd12288   200  ldr lr, [jssp, #16]
0xffff8bd1228c   204  ldp xzr, fp, [jssp], #24
0xffff8bd12290   208  b #-0x60 (addr 0xffff8bd12230)
0xffff8bd12294   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd12298   216  d63f03e0       constant
0xffff8bd1229c   220  d503201f       constant
0xffff8bd122a0   224  8bd06820       constant
0xffff8bd122a4   228  0000ffff       constant
0xffff8bd122a8   232  8bd06260       constant
0xffff8bd122ac   236  0000ffff       constant
0xffff8bd122b0   240  8bd068e0       constant
0xffff8bd122b4   244  0000ffff       constant
0xffff8bd122b8   248  movz x16, #0x0
0xffff8bd122bc   252  sub csp, jssp, #0x10 (16)
0xffff8bd122c0   256  stp fp, lr, [jssp, #-16]!
0xffff8bd122c4   260  bl #+0x14 (addr 0xffff8bd122d8)
0xffff8bd122c8   264  movz x16, #0x8
0xffff8bd122cc   268  sub csp, jssp, #0x10 (16)
0xffff8bd122d0   272  stp fp, lr, [jssp, #-16]!
0xffff8bd122d4   276  bl #+0x4 (addr 0xffff8bd122d8)
0xffff8bd122d8   280  movz x17, #0xa00000000
0xffff8bd122dc   284  sub csp, jssp, #0x10 (16)
0xffff8bd122e0   288  stp x17, cp, [jssp, #-16]!
0xffff8bd122e4   292  add fp, jssp, #0x10 (16)
0xffff8bd122e8   296  ldr x17, pc+24 (addr 0x0000ffff8bd12300)    ;; lazy deoptimization bailout 0
0xffff8bd122ec   300  add x17, x17, x16
0xffff8bd122f0   304  br x17
0xffff8bd122f4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd122f8   312  d63f03e0       constant
0xffff8bd122fc   316  d503201f       constant
0xffff8bd12300   320  8bb06000       constant
0xffff8bd12304   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd1227c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd1225c  code target (STUB)  (0xffff8bd06820)
0xffff8bd12274  code target (STUB)  (0xffff8bd06260)
0xffff8bd12280  code target (STUB)  (0xffff8bd068e0)
0xffff8bd12294  constant pool (size 36)
0xffff8bd122e8  runtime entry
0xffff8bd122f4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4538
type = NORMAL
name = BinaryOpICStub(DIV:Number*Int32->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd121c0     0  mov x2, x0
0xffff8bd121c4     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd122b8)
0xffff8bd121c8     8  tbz w1, #0, #+0x34 (addr 0xffff8bd121fc)
0xffff8bd121cc    12  ldur x16, [x1, #-1]
0xffff8bd121d0    16  ldr x17, [x26, #120]
0xffff8bd121d4    20  cmp x16, x17
0xffff8bd121d8    24  b.ne #+0xc (addr 0xffff8bd121e4)
0xffff8bd121dc    28  ldur d0, [x1, #7]
0xffff8bd121e0    32  b #+0x20 (addr 0xffff8bd12200)
0xffff8bd121e4    36  ldr x16, [x26, #40]
0xffff8bd121e8    40  cmp x1, x16
0xffff8bd121ec    44  b.ne #+0xdc (addr 0xffff8bd122c8)
0xffff8bd121f0    48  ldr x3, [x26, #928]
0xffff8bd121f4    52  ldur d0, [x3, #7]
0xffff8bd121f8    56  b #+0x8 (addr 0xffff8bd12200)
0xffff8bd121fc    60  scvtf d0, x1, #32
0xffff8bd12200    64  scvtf d1, x2, #32
0xffff8bd12204    68  fdiv d0, d0, d1
0xffff8bd12208    72  movz x1, #0xe2c0
0xffff8bd1220c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd12210    80  ldp x2, x0, [x1]
0xffff8bd12214    84  adds x16, x2, #0x10 (16)
0xffff8bd12218    88  ccmp x16, x0, #nzCv, lo
0xffff8bd1221c    92  b.hi #+0x20 (addr 0xffff8bd1223c)
0xffff8bd12220    96  str x16, [x1]
0xffff8bd12224   100  ldr x1, [x26, #120]
0xffff8bd12228   104  str x1, [x2]
0xffff8bd1222c   108  orr x2, x2, #0x1
0xffff8bd12230   112  stur d0, [x2, #7]
0xffff8bd12234   116  mov x0, x2
0xffff8bd12238   120  ret
0xffff8bd1223c   124  sub csp, jssp, #0x10 (16)
0xffff8bd12240   128  stp fp, lr, [jssp, #-16]!
0xffff8bd12244   132  movz fp, #0xa00000000
0xffff8bd12248   136  sub csp, jssp, #0x8 (8)
0xffff8bd1224c   140  str fp, [jssp, #-8]!
0xffff8bd12250   144  add fp, jssp, #0x8 (8)
0xffff8bd12254   148  movz x2, #0x0
0xffff8bd12258   152  mov x16, lr
0xffff8bd1225c   156  ldr x17, pc+68 (addr 0x0000ffff8bd122a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd12260   160  blr x17
0xffff8bd12264   164  ldur cp, [fp, #-8]
0xffff8bd12268   168  movz x0, #0x0
0xffff8bd1226c   172  movz x1, #0x4b48
0xffff8bd12270   176  movk x1, #0xe4, lsl #16
0xffff8bd12274   180  ldr x16, pc+52 (addr 0x0000ffff8bd122a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd12278   184  blr x16
0xffff8bd1227c   188  str x0, [jssp, #16]
0xffff8bd12280   192  ldr x16, pc+48 (addr 0x0000ffff8bd122b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd12284   196  blr x16
0xffff8bd12288   200  ldr lr, [jssp, #16]
0xffff8bd1228c   204  ldp xzr, fp, [jssp], #24
0xffff8bd12290   208  b #-0x60 (addr 0xffff8bd12230)
0xffff8bd12294   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd12298   216  d63f03e0       constant
0xffff8bd1229c   220  d503201f       constant
0xffff8bd122a0   224  8bd06820       constant
0xffff8bd122a4   228  0000ffff       constant
0xffff8bd122a8   232  8bd06260       constant
0xffff8bd122ac   236  0000ffff       constant
0xffff8bd122b0   240  8bd068e0       constant
0xffff8bd122b4   244  0000ffff       constant
0xffff8bd122b8   248  movz x16, #0x0
0xffff8bd122bc   252  sub csp, jssp, #0x10 (16)
0xffff8bd122c0   256  stp fp, lr, [jssp, #-16]!
0xffff8bd122c4   260  bl #+0x14 (addr 0xffff8bd122d8)
0xffff8bd122c8   264  movz x16, #0x8
0xffff8bd122cc   268  sub csp, jssp, #0x10 (16)
0xffff8bd122d0   272  stp fp, lr, [jssp, #-16]!
0xffff8bd122d4   276  bl #+0x4 (addr 0xffff8bd122d8)
0xffff8bd122d8   280  movz x17, #0xa00000000
0xffff8bd122dc   284  sub csp, jssp, #0x10 (16)
0xffff8bd122e0   288  stp x17, cp, [jssp, #-16]!
0xffff8bd122e4   292  add fp, jssp, #0x10 (16)
0xffff8bd122e8   296  ldr x17, pc+24 (addr 0x0000ffff8bd12300)    ;; lazy deoptimization bailout 0
0xffff8bd122ec   300  add x17, x17, x16
0xffff8bd122f0   304  br x17
0xffff8bd122f4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd122f8   312  d63f03e0       constant
0xffff8bd122fc   316  d503201f       constant
0xffff8bd12300   320  8bb06000       constant
0xffff8bd12304   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd1227c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd1225c  code target (STUB)  (0xffff8bd06820)
0xffff8bd12274  code target (STUB)  (0xffff8bd06260)
0xffff8bd12280  code target (STUB)  (0xffff8bd068e0)
0xffff8bd12294  constant pool (size 36)
0xffff8bd122e8  runtime entry
0xffff8bd122f4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6586
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 389)
0xffff8bd12380     0  tbz w1, #0, #+0x34 (addr 0xffff8bd123b4)
0xffff8bd12384     4  ldur x16, [x1, #-1]
0xffff8bd12388     8  ldr x17, [x26, #120]
0xffff8bd1238c    12  cmp x16, x17
0xffff8bd12390    16  b.ne #+0xc (addr 0xffff8bd1239c)
0xffff8bd12394    20  ldur d0, [x1, #7]
0xffff8bd12398    24  b #+0x20 (addr 0xffff8bd123b8)
0xffff8bd1239c    28  ldr x16, [x26, #40]
0xffff8bd123a0    32  cmp x1, x16
0xffff8bd123a4    36  b.ne #+0xfc (addr 0xffff8bd124a0)
0xffff8bd123a8    40  ldr x2, [x26, #928]
0xffff8bd123ac    44  ldur d0, [x2, #7]
0xffff8bd123b0    48  b #+0x8 (addr 0xffff8bd123b8)
0xffff8bd123b4    52  scvtf d0, x1, #32
0xffff8bd123b8    56  tbz w0, #0, #+0x34 (addr 0xffff8bd123ec)
0xffff8bd123bc    60  ldur x16, [x0, #-1]
0xffff8bd123c0    64  ldr x17, [x26, #120]
0xffff8bd123c4    68  cmp x16, x17
0xffff8bd123c8    72  b.ne #+0xc (addr 0xffff8bd123d4)
0xffff8bd123cc    76  ldur d1, [x0, #7]
0xffff8bd123d0    80  b #+0x20 (addr 0xffff8bd123f0)
0xffff8bd123d4    84  ldr x16, [x26, #40]
0xffff8bd123d8    88  cmp x0, x16
0xffff8bd123dc    92  b.ne #+0xd4 (addr 0xffff8bd124b0)
0xffff8bd123e0    96  ldr x2, [x26, #928]
0xffff8bd123e4   100  ldur d1, [x2, #7]
0xffff8bd123e8   104  b #+0x8 (addr 0xffff8bd123f0)
0xffff8bd123ec   108  scvtf d1, x0, #32
0xffff8bd123f0   112  fdiv d0, d0, d1
0xffff8bd123f4   116  movz x1, #0xe2c0
0xffff8bd123f8   120  movk x1, #0x2cb8, lsl #16
0xffff8bd123fc   124  ldp x2, x0, [x1]
0xffff8bd12400   128  adds x16, x2, #0x10 (16)
0xffff8bd12404   132  ccmp x16, x0, #nzCv, lo
0xffff8bd12408   136  b.hi #+0x20 (addr 0xffff8bd12428)
0xffff8bd1240c   140  str x16, [x1]
0xffff8bd12410   144  ldr x1, [x26, #120]
0xffff8bd12414   148  str x1, [x2]
0xffff8bd12418   152  orr x2, x2, #0x1
0xffff8bd1241c   156  stur d0, [x2, #7]
0xffff8bd12420   160  mov x0, x2
0xffff8bd12424   164  ret
0xffff8bd12428   168  sub csp, jssp, #0x10 (16)
0xffff8bd1242c   172  stp fp, lr, [jssp, #-16]!
0xffff8bd12430   176  movz fp, #0xa00000000
0xffff8bd12434   180  sub csp, jssp, #0x8 (8)
0xffff8bd12438   184  str fp, [jssp, #-8]!
0xffff8bd1243c   188  add fp, jssp, #0x8 (8)
0xffff8bd12440   192  movz x2, #0x0
0xffff8bd12444   196  mov x16, lr
0xffff8bd12448   200  ldr x17, pc+64 (addr 0x0000ffff8bd12488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd1244c   204  blr x17
0xffff8bd12450   208  ldur cp, [fp, #-8]
0xffff8bd12454   212  movz x0, #0x0
0xffff8bd12458   216  movz x1, #0x4b48
0xffff8bd1245c   220  movk x1, #0xe4, lsl #16
0xffff8bd12460   224  ldr x16, pc+48 (addr 0x0000ffff8bd12490)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd12464   228  blr x16
0xffff8bd12468   232  str x0, [jssp, #16]
0xffff8bd1246c   236  ldr x16, pc+44 (addr 0x0000ffff8bd12498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd12470   240  blr x16
0xffff8bd12474   244  ldr lr, [jssp, #16]
0xffff8bd12478   248  ldp xzr, fp, [jssp], #24
0xffff8bd1247c   252  b #-0x60 (addr 0xffff8bd1241c)
0xffff8bd12480   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd12484   260  d63f03e0       constant
0xffff8bd12488   264  8bd06820       constant
0xffff8bd1248c   268  0000ffff       constant
0xffff8bd12490   272  8bd06260       constant
0xffff8bd12494   276  0000ffff       constant
0xffff8bd12498   280  8bd068e0       constant
0xffff8bd1249c   284  0000ffff       constant
0xffff8bd124a0   288  movz x16, #0x0
0xffff8bd124a4   292  sub csp, jssp, #0x10 (16)
0xffff8bd124a8   296  stp fp, lr, [jssp, #-16]!
0xffff8bd124ac   300  bl #+0x14 (addr 0xffff8bd124c0)
0xffff8bd124b0   304  movz x16, #0x8
0xffff8bd124b4   308  sub csp, jssp, #0x10 (16)
0xffff8bd124b8   312  stp fp, lr, [jssp, #-16]!
0xffff8bd124bc   316  bl #+0x4 (addr 0xffff8bd124c0)
0xffff8bd124c0   320  movz x17, #0xa00000000
0xffff8bd124c4   324  sub csp, jssp, #0x10 (16)
0xffff8bd124c8   328  stp x17, cp, [jssp, #-16]!
0xffff8bd124cc   332  add fp, jssp, #0x10 (16)
0xffff8bd124d0   336  ldr x17, pc+24 (addr 0x0000ffff8bd124e8)    ;; lazy deoptimization bailout 0
0xffff8bd124d4   340  add x17, x17, x16
0xffff8bd124d8   344  br x17
0xffff8bd124dc   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd124e0   352  d63f03e0       constant
0xffff8bd124e4   356  d503201f       constant
0xffff8bd124e8   360  8bb06000       constant
0xffff8bd124ec   364  0000ffff       constant


Safepoints (size = 21)
0xffff8bd12468   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd12448  code target (STUB)  (0xffff8bd06820)
0xffff8bd12460  code target (STUB)  (0xffff8bd06260)
0xffff8bd1246c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd12480  constant pool (size 32)
0xffff8bd124d0  runtime entry
0xffff8bd124dc  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6586
type = NORMAL
name = BinaryOpICStub(DIV:Number*Number->Number)
compiler = crankshaft
Instructions (size = 389)
0xffff8bd12380     0  tbz w1, #0, #+0x34 (addr 0xffff8bd123b4)
0xffff8bd12384     4  ldur x16, [x1, #-1]
0xffff8bd12388     8  ldr x17, [x26, #120]
0xffff8bd1238c    12  cmp x16, x17
0xffff8bd12390    16  b.ne #+0xc (addr 0xffff8bd1239c)
0xffff8bd12394    20  ldur d0, [x1, #7]
0xffff8bd12398    24  b #+0x20 (addr 0xffff8bd123b8)
0xffff8bd1239c    28  ldr x16, [x26, #40]
0xffff8bd123a0    32  cmp x1, x16
0xffff8bd123a4    36  b.ne #+0xfc (addr 0xffff8bd124a0)
0xffff8bd123a8    40  ldr x2, [x26, #928]
0xffff8bd123ac    44  ldur d0, [x2, #7]
0xffff8bd123b0    48  b #+0x8 (addr 0xffff8bd123b8)
0xffff8bd123b4    52  scvtf d0, x1, #32
0xffff8bd123b8    56  tbz w0, #0, #+0x34 (addr 0xffff8bd123ec)
0xffff8bd123bc    60  ldur x16, [x0, #-1]
0xffff8bd123c0    64  ldr x17, [x26, #120]
0xffff8bd123c4    68  cmp x16, x17
0xffff8bd123c8    72  b.ne #+0xc (addr 0xffff8bd123d4)
0xffff8bd123cc    76  ldur d1, [x0, #7]
0xffff8bd123d0    80  b #+0x20 (addr 0xffff8bd123f0)
0xffff8bd123d4    84  ldr x16, [x26, #40]
0xffff8bd123d8    88  cmp x0, x16
0xffff8bd123dc    92  b.ne #+0xd4 (addr 0xffff8bd124b0)
0xffff8bd123e0    96  ldr x2, [x26, #928]
0xffff8bd123e4   100  ldur d1, [x2, #7]
0xffff8bd123e8   104  b #+0x8 (addr 0xffff8bd123f0)
0xffff8bd123ec   108  scvtf d1, x0, #32
0xffff8bd123f0   112  fdiv d0, d0, d1
0xffff8bd123f4   116  movz x1, #0xe2c0
0xffff8bd123f8   120  movk x1, #0x2cb8, lsl #16
0xffff8bd123fc   124  ldp x2, x0, [x1]
0xffff8bd12400   128  adds x16, x2, #0x10 (16)
0xffff8bd12404   132  ccmp x16, x0, #nzCv, lo
0xffff8bd12408   136  b.hi #+0x20 (addr 0xffff8bd12428)
0xffff8bd1240c   140  str x16, [x1]
0xffff8bd12410   144  ldr x1, [x26, #120]
0xffff8bd12414   148  str x1, [x2]
0xffff8bd12418   152  orr x2, x2, #0x1
0xffff8bd1241c   156  stur d0, [x2, #7]
0xffff8bd12420   160  mov x0, x2
0xffff8bd12424   164  ret
0xffff8bd12428   168  sub csp, jssp, #0x10 (16)
0xffff8bd1242c   172  stp fp, lr, [jssp, #-16]!
0xffff8bd12430   176  movz fp, #0xa00000000
0xffff8bd12434   180  sub csp, jssp, #0x8 (8)
0xffff8bd12438   184  str fp, [jssp, #-8]!
0xffff8bd1243c   188  add fp, jssp, #0x8 (8)
0xffff8bd12440   192  movz x2, #0x0
0xffff8bd12444   196  mov x16, lr
0xffff8bd12448   200  ldr x17, pc+64 (addr 0x0000ffff8bd12488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd1244c   204  blr x17
0xffff8bd12450   208  ldur cp, [fp, #-8]
0xffff8bd12454   212  movz x0, #0x0
0xffff8bd12458   216  movz x1, #0x4b48
0xffff8bd1245c   220  movk x1, #0xe4, lsl #16
0xffff8bd12460   224  ldr x16, pc+48 (addr 0x0000ffff8bd12490)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd12464   228  blr x16
0xffff8bd12468   232  str x0, [jssp, #16]
0xffff8bd1246c   236  ldr x16, pc+44 (addr 0x0000ffff8bd12498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd12470   240  blr x16
0xffff8bd12474   244  ldr lr, [jssp, #16]
0xffff8bd12478   248  ldp xzr, fp, [jssp], #24
0xffff8bd1247c   252  b #-0x60 (addr 0xffff8bd1241c)
0xffff8bd12480   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd12484   260  d63f03e0       constant
0xffff8bd12488   264  8bd06820       constant
0xffff8bd1248c   268  0000ffff       constant
0xffff8bd12490   272  8bd06260       constant
0xffff8bd12494   276  0000ffff       constant
0xffff8bd12498   280  8bd068e0       constant
0xffff8bd1249c   284  0000ffff       constant
0xffff8bd124a0   288  movz x16, #0x0
0xffff8bd124a4   292  sub csp, jssp, #0x10 (16)
0xffff8bd124a8   296  stp fp, lr, [jssp, #-16]!
0xffff8bd124ac   300  bl #+0x14 (addr 0xffff8bd124c0)
0xffff8bd124b0   304  movz x16, #0x8
0xffff8bd124b4   308  sub csp, jssp, #0x10 (16)
0xffff8bd124b8   312  stp fp, lr, [jssp, #-16]!
0xffff8bd124bc   316  bl #+0x4 (addr 0xffff8bd124c0)
0xffff8bd124c0   320  movz x17, #0xa00000000
0xffff8bd124c4   324  sub csp, jssp, #0x10 (16)
0xffff8bd124c8   328  stp x17, cp, [jssp, #-16]!
0xffff8bd124cc   332  add fp, jssp, #0x10 (16)
0xffff8bd124d0   336  ldr x17, pc+24 (addr 0x0000ffff8bd124e8)    ;; lazy deoptimization bailout 0
0xffff8bd124d4   340  add x17, x17, x16
0xffff8bd124d8   344  br x17
0xffff8bd124dc   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd124e0   352  d63f03e0       constant
0xffff8bd124e4   356  d503201f       constant
0xffff8bd124e8   360  8bb06000       constant
0xffff8bd124ec   364  0000ffff       constant


Safepoints (size = 21)
0xffff8bd12468   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd12448  code target (STUB)  (0xffff8bd06820)
0xffff8bd12460  code target (STUB)  (0xffff8bd06260)
0xffff8bd1246c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd12480  constant pool (size 32)
0xffff8bd124d0  runtime entry
0xffff8bd124dc  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2490
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd12580     0  mov x2, x0
0xffff8bd12584     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd12678)
0xffff8bd12588     8  tbz w1, #0, #+0x34 (addr 0xffff8bd125bc)
0xffff8bd1258c    12  ldur x16, [x1, #-1]
0xffff8bd12590    16  ldr x17, [x26, #120]
0xffff8bd12594    20  cmp x16, x17
0xffff8bd12598    24  b.ne #+0xc (addr 0xffff8bd125a4)
0xffff8bd1259c    28  ldur d0, [x1, #7]
0xffff8bd125a0    32  b #+0x20 (addr 0xffff8bd125c0)
0xffff8bd125a4    36  ldr x16, [x26, #40]
0xffff8bd125a8    40  cmp x1, x16
0xffff8bd125ac    44  b.ne #+0xdc (addr 0xffff8bd12688)
0xffff8bd125b0    48  ldr x3, [x26, #928]
0xffff8bd125b4    52  ldur d0, [x3, #7]
0xffff8bd125b8    56  b #+0x8 (addr 0xffff8bd125c0)
0xffff8bd125bc    60  scvtf d0, x1, #32
0xffff8bd125c0    64  scvtf d1, x2, #32
0xffff8bd125c4    68  fdiv d0, d0, d1
0xffff8bd125c8    72  movz x1, #0xe2c0
0xffff8bd125cc    76  movk x1, #0x2cb8, lsl #16
0xffff8bd125d0    80  ldp x2, x0, [x1]
0xffff8bd125d4    84  adds x16, x2, #0x10 (16)
0xffff8bd125d8    88  ccmp x16, x0, #nzCv, lo
0xffff8bd125dc    92  b.hi #+0x20 (addr 0xffff8bd125fc)
0xffff8bd125e0    96  str x16, [x1]
0xffff8bd125e4   100  ldr x1, [x26, #120]
0xffff8bd125e8   104  str x1, [x2]
0xffff8bd125ec   108  orr x2, x2, #0x1
0xffff8bd125f0   112  stur d0, [x2, #7]
0xffff8bd125f4   116  mov x0, x2
0xffff8bd125f8   120  ret
0xffff8bd125fc   124  sub csp, jssp, #0x10 (16)
0xffff8bd12600   128  stp fp, lr, [jssp, #-16]!
0xffff8bd12604   132  movz fp, #0xa00000000
0xffff8bd12608   136  sub csp, jssp, #0x8 (8)
0xffff8bd1260c   140  str fp, [jssp, #-8]!
0xffff8bd12610   144  add fp, jssp, #0x8 (8)
0xffff8bd12614   148  movz x2, #0x0
0xffff8bd12618   152  mov x16, lr
0xffff8bd1261c   156  ldr x17, pc+68 (addr 0x0000ffff8bd12660)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd12620   160  blr x17
0xffff8bd12624   164  ldur cp, [fp, #-8]
0xffff8bd12628   168  movz x0, #0x0
0xffff8bd1262c   172  movz x1, #0x4b48
0xffff8bd12630   176  movk x1, #0xe4, lsl #16
0xffff8bd12634   180  ldr x16, pc+52 (addr 0x0000ffff8bd12668)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd12638   184  blr x16
0xffff8bd1263c   188  str x0, [jssp, #16]
0xffff8bd12640   192  ldr x16, pc+48 (addr 0x0000ffff8bd12670)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd12644   196  blr x16
0xffff8bd12648   200  ldr lr, [jssp, #16]
0xffff8bd1264c   204  ldp xzr, fp, [jssp], #24
0xffff8bd12650   208  b #-0x60 (addr 0xffff8bd125f0)
0xffff8bd12654   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd12658   216  d63f03e0       constant
0xffff8bd1265c   220  d503201f       constant
0xffff8bd12660   224  8bd06820       constant
0xffff8bd12664   228  0000ffff       constant
0xffff8bd12668   232  8bd06260       constant
0xffff8bd1266c   236  0000ffff       constant
0xffff8bd12670   240  8bd068e0       constant
0xffff8bd12674   244  0000ffff       constant
0xffff8bd12678   248  movz x16, #0x0
0xffff8bd1267c   252  sub csp, jssp, #0x10 (16)
0xffff8bd12680   256  stp fp, lr, [jssp, #-16]!
0xffff8bd12684   260  bl #+0x14 (addr 0xffff8bd12698)
0xffff8bd12688   264  movz x16, #0x8
0xffff8bd1268c   268  sub csp, jssp, #0x10 (16)
0xffff8bd12690   272  stp fp, lr, [jssp, #-16]!
0xffff8bd12694   276  bl #+0x4 (addr 0xffff8bd12698)
0xffff8bd12698   280  movz x17, #0xa00000000
0xffff8bd1269c   284  sub csp, jssp, #0x10 (16)
0xffff8bd126a0   288  stp x17, cp, [jssp, #-16]!
0xffff8bd126a4   292  add fp, jssp, #0x10 (16)
0xffff8bd126a8   296  ldr x17, pc+24 (addr 0x0000ffff8bd126c0)    ;; lazy deoptimization bailout 0
0xffff8bd126ac   300  add x17, x17, x16
0xffff8bd126b0   304  br x17
0xffff8bd126b4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd126b8   312  d63f03e0       constant
0xffff8bd126bc   316  d503201f       constant
0xffff8bd126c0   320  8bb06000       constant
0xffff8bd126c4   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd1263c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd1261c  code target (STUB)  (0xffff8bd06820)
0xffff8bd12634  code target (STUB)  (0xffff8bd06260)
0xffff8bd12640  code target (STUB)  (0xffff8bd068e0)
0xffff8bd12654  constant pool (size 36)
0xffff8bd126a8  runtime entry
0xffff8bd126b4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2490
type = NORMAL
name = BinaryOpICStub(DIV:Number*Smi->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd12580     0  mov x2, x0
0xffff8bd12584     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd12678)
0xffff8bd12588     8  tbz w1, #0, #+0x34 (addr 0xffff8bd125bc)
0xffff8bd1258c    12  ldur x16, [x1, #-1]
0xffff8bd12590    16  ldr x17, [x26, #120]
0xffff8bd12594    20  cmp x16, x17
0xffff8bd12598    24  b.ne #+0xc (addr 0xffff8bd125a4)
0xffff8bd1259c    28  ldur d0, [x1, #7]
0xffff8bd125a0    32  b #+0x20 (addr 0xffff8bd125c0)
0xffff8bd125a4    36  ldr x16, [x26, #40]
0xffff8bd125a8    40  cmp x1, x16
0xffff8bd125ac    44  b.ne #+0xdc (addr 0xffff8bd12688)
0xffff8bd125b0    48  ldr x3, [x26, #928]
0xffff8bd125b4    52  ldur d0, [x3, #7]
0xffff8bd125b8    56  b #+0x8 (addr 0xffff8bd125c0)
0xffff8bd125bc    60  scvtf d0, x1, #32
0xffff8bd125c0    64  scvtf d1, x2, #32
0xffff8bd125c4    68  fdiv d0, d0, d1
0xffff8bd125c8    72  movz x1, #0xe2c0
0xffff8bd125cc    76  movk x1, #0x2cb8, lsl #16
0xffff8bd125d0    80  ldp x2, x0, [x1]
0xffff8bd125d4    84  adds x16, x2, #0x10 (16)
0xffff8bd125d8    88  ccmp x16, x0, #nzCv, lo
0xffff8bd125dc    92  b.hi #+0x20 (addr 0xffff8bd125fc)
0xffff8bd125e0    96  str x16, [x1]
0xffff8bd125e4   100  ldr x1, [x26, #120]
0xffff8bd125e8   104  str x1, [x2]
0xffff8bd125ec   108  orr x2, x2, #0x1
0xffff8bd125f0   112  stur d0, [x2, #7]
0xffff8bd125f4   116  mov x0, x2
0xffff8bd125f8   120  ret
0xffff8bd125fc   124  sub csp, jssp, #0x10 (16)
0xffff8bd12600   128  stp fp, lr, [jssp, #-16]!
0xffff8bd12604   132  movz fp, #0xa00000000
0xffff8bd12608   136  sub csp, jssp, #0x8 (8)
0xffff8bd1260c   140  str fp, [jssp, #-8]!
0xffff8bd12610   144  add fp, jssp, #0x8 (8)
0xffff8bd12614   148  movz x2, #0x0
0xffff8bd12618   152  mov x16, lr
0xffff8bd1261c   156  ldr x17, pc+68 (addr 0x0000ffff8bd12660)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd12620   160  blr x17
0xffff8bd12624   164  ldur cp, [fp, #-8]
0xffff8bd12628   168  movz x0, #0x0
0xffff8bd1262c   172  movz x1, #0x4b48
0xffff8bd12630   176  movk x1, #0xe4, lsl #16
0xffff8bd12634   180  ldr x16, pc+52 (addr 0x0000ffff8bd12668)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd12638   184  blr x16
0xffff8bd1263c   188  str x0, [jssp, #16]
0xffff8bd12640   192  ldr x16, pc+48 (addr 0x0000ffff8bd12670)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd12644   196  blr x16
0xffff8bd12648   200  ldr lr, [jssp, #16]
0xffff8bd1264c   204  ldp xzr, fp, [jssp], #24
0xffff8bd12650   208  b #-0x60 (addr 0xffff8bd125f0)
0xffff8bd12654   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd12658   216  d63f03e0       constant
0xffff8bd1265c   220  d503201f       constant
0xffff8bd12660   224  8bd06820       constant
0xffff8bd12664   228  0000ffff       constant
0xffff8bd12668   232  8bd06260       constant
0xffff8bd1266c   236  0000ffff       constant
0xffff8bd12670   240  8bd068e0       constant
0xffff8bd12674   244  0000ffff       constant
0xffff8bd12678   248  movz x16, #0x0
0xffff8bd1267c   252  sub csp, jssp, #0x10 (16)
0xffff8bd12680   256  stp fp, lr, [jssp, #-16]!
0xffff8bd12684   260  bl #+0x14 (addr 0xffff8bd12698)
0xffff8bd12688   264  movz x16, #0x8
0xffff8bd1268c   268  sub csp, jssp, #0x10 (16)
0xffff8bd12690   272  stp fp, lr, [jssp, #-16]!
0xffff8bd12694   276  bl #+0x4 (addr 0xffff8bd12698)
0xffff8bd12698   280  movz x17, #0xa00000000
0xffff8bd1269c   284  sub csp, jssp, #0x10 (16)
0xffff8bd126a0   288  stp x17, cp, [jssp, #-16]!
0xffff8bd126a4   292  add fp, jssp, #0x10 (16)
0xffff8bd126a8   296  ldr x17, pc+24 (addr 0x0000ffff8bd126c0)    ;; lazy deoptimization bailout 0
0xffff8bd126ac   300  add x17, x17, x16
0xffff8bd126b0   304  br x17
0xffff8bd126b4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd126b8   312  d63f03e0       constant
0xffff8bd126bc   316  d503201f       constant
0xffff8bd126c0   320  8bb06000       constant
0xffff8bd126c4   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd1263c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd1261c  code target (STUB)  (0xffff8bd06820)
0xffff8bd12634  code target (STUB)  (0xffff8bd06260)
0xffff8bd12640  code target (STUB)  (0xffff8bd068e0)
0xffff8bd12654  constant pool (size 36)
0xffff8bd126a8  runtime entry
0xffff8bd126b4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4266
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 176)
0xffff8bd12740     0  mov x2, x1
0xffff8bd12744     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd12788)
0xffff8bd12748     8  mov x3, x0
0xffff8bd1274c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd12798)
0xffff8bd12750    16  asr x2, x2, #32
0xffff8bd12754    20  asr x3, x3, #32
0xffff8bd12758    24  sdiv w5, w2, w3
0xffff8bd1275c    28  cbz w3, #+0x4c (addr 0xffff8bd127a8)
0xffff8bd12760    32  cmp w3, #0x0 (0)
0xffff8bd12764    36  ccmp w2, #0, #nzcv, mi
0xffff8bd12768    40  b.eq #+0x40 (addr 0xffff8bd127a8)
0xffff8bd1276c    44  cmp w2, #0x1 (1)
0xffff8bd12770    48  ccmn w3, #1, #nzcv, vs
0xffff8bd12774    52  b.eq #+0x34 (addr 0xffff8bd127a8)
0xffff8bd12778    56  msub w4, w5, w3, w2
0xffff8bd1277c    60  cbnz w4, #+0x2c (addr 0xffff8bd127a8)
0xffff8bd12780    64  lsl x0, x5, #32
0xffff8bd12784    68  ret
0xffff8bd12788    72  movz x16, #0x0
0xffff8bd1278c    76  sub csp, jssp, #0x10 (16)
0xffff8bd12790    80  stp fp, lr, [jssp, #-16]!
0xffff8bd12794    84  bl #+0x24 (addr 0xffff8bd127b8)
0xffff8bd12798    88  movz x16, #0x8
0xffff8bd1279c    92  sub csp, jssp, #0x10 (16)
0xffff8bd127a0    96  stp fp, lr, [jssp, #-16]!
0xffff8bd127a4   100  bl #+0x14 (addr 0xffff8bd127b8)
0xffff8bd127a8   104  movz x16, #0x10
0xffff8bd127ac   108  sub csp, jssp, #0x10 (16)
0xffff8bd127b0   112  stp fp, lr, [jssp, #-16]!
0xffff8bd127b4   116  bl #+0x4 (addr 0xffff8bd127b8)
0xffff8bd127b8   120  movz x17, #0xa00000000
0xffff8bd127bc   124  sub csp, jssp, #0x10 (16)
0xffff8bd127c0   128  stp x17, cp, [jssp, #-16]!
0xffff8bd127c4   132  add fp, jssp, #0x10 (16)
0xffff8bd127c8   136  ldr x17, pc+24 (addr 0x0000ffff8bd127e0)    ;; lazy deoptimization bailout 0
0xffff8bd127cc   140  add x17, x17, x16
0xffff8bd127d0   144  br x17
0xffff8bd127d4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd127d8   152  d63f03e0       constant
0xffff8bd127dc   156  d503201f       constant
0xffff8bd127e0   160  8bb06000       constant
0xffff8bd127e4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd127c8  runtime entry
0xffff8bd127d4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4266
type = NORMAL
name = BinaryOpICStub(DIV:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 176)
0xffff8bd12740     0  mov x2, x1
0xffff8bd12744     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd12788)
0xffff8bd12748     8  mov x3, x0
0xffff8bd1274c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd12798)
0xffff8bd12750    16  asr x2, x2, #32
0xffff8bd12754    20  asr x3, x3, #32
0xffff8bd12758    24  sdiv w5, w2, w3
0xffff8bd1275c    28  cbz w3, #+0x4c (addr 0xffff8bd127a8)
0xffff8bd12760    32  cmp w3, #0x0 (0)
0xffff8bd12764    36  ccmp w2, #0, #nzcv, mi
0xffff8bd12768    40  b.eq #+0x40 (addr 0xffff8bd127a8)
0xffff8bd1276c    44  cmp w2, #0x1 (1)
0xffff8bd12770    48  ccmn w3, #1, #nzcv, vs
0xffff8bd12774    52  b.eq #+0x34 (addr 0xffff8bd127a8)
0xffff8bd12778    56  msub w4, w5, w3, w2
0xffff8bd1277c    60  cbnz w4, #+0x2c (addr 0xffff8bd127a8)
0xffff8bd12780    64  lsl x0, x5, #32
0xffff8bd12784    68  ret
0xffff8bd12788    72  movz x16, #0x0
0xffff8bd1278c    76  sub csp, jssp, #0x10 (16)
0xffff8bd12790    80  stp fp, lr, [jssp, #-16]!
0xffff8bd12794    84  bl #+0x24 (addr 0xffff8bd127b8)
0xffff8bd12798    88  movz x16, #0x8
0xffff8bd1279c    92  sub csp, jssp, #0x10 (16)
0xffff8bd127a0    96  stp fp, lr, [jssp, #-16]!
0xffff8bd127a4   100  bl #+0x14 (addr 0xffff8bd127b8)
0xffff8bd127a8   104  movz x16, #0x10
0xffff8bd127ac   108  sub csp, jssp, #0x10 (16)
0xffff8bd127b0   112  stp fp, lr, [jssp, #-16]!
0xffff8bd127b4   116  bl #+0x4 (addr 0xffff8bd127b8)
0xffff8bd127b8   120  movz x17, #0xa00000000
0xffff8bd127bc   124  sub csp, jssp, #0x10 (16)
0xffff8bd127c0   128  stp x17, cp, [jssp, #-16]!
0xffff8bd127c4   132  add fp, jssp, #0x10 (16)
0xffff8bd127c8   136  ldr x17, pc+24 (addr 0x0000ffff8bd127e0)    ;; lazy deoptimization bailout 0
0xffff8bd127cc   140  add x17, x17, x16
0xffff8bd127d0   144  br x17
0xffff8bd127d4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd127d8   152  d63f03e0       constant
0xffff8bd127dc   156  d503201f       constant
0xffff8bd127e0   160  8bb06000       constant
0xffff8bd127e4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd127c8  runtime entry
0xffff8bd127d4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4282
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff8bd12860     0  mov x2, x1
0xffff8bd12864     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd12928)
0xffff8bd12868     8  mov x3, x0
0xffff8bd1286c    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd12938)
0xffff8bd12870    16  scvtf d0, x2, #32
0xffff8bd12874    20  scvtf d1, x3, #32
0xffff8bd12878    24  fdiv d0, d0, d1
0xffff8bd1287c    28  movz x1, #0xe2c0
0xffff8bd12880    32  movk x1, #0x2cb8, lsl #16
0xffff8bd12884    36  ldp x2, x0, [x1]
0xffff8bd12888    40  adds x16, x2, #0x10 (16)
0xffff8bd1288c    44  ccmp x16, x0, #nzCv, lo
0xffff8bd12890    48  b.hi #+0x20 (addr 0xffff8bd128b0)
0xffff8bd12894    52  str x16, [x1]
0xffff8bd12898    56  ldr x1, [x26, #120]
0xffff8bd1289c    60  str x1, [x2]
0xffff8bd128a0    64  orr x2, x2, #0x1
0xffff8bd128a4    68  stur d0, [x2, #7]
0xffff8bd128a8    72  mov x0, x2
0xffff8bd128ac    76  ret
0xffff8bd128b0    80  sub csp, jssp, #0x10 (16)
0xffff8bd128b4    84  stp fp, lr, [jssp, #-16]!
0xffff8bd128b8    88  movz fp, #0xa00000000
0xffff8bd128bc    92  sub csp, jssp, #0x8 (8)
0xffff8bd128c0    96  str fp, [jssp, #-8]!
0xffff8bd128c4   100  add fp, jssp, #0x8 (8)
0xffff8bd128c8   104  movz x2, #0x0
0xffff8bd128cc   108  mov x16, lr
0xffff8bd128d0   112  ldr x17, pc+64 (addr 0x0000ffff8bd12910)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd128d4   116  blr x17
0xffff8bd128d8   120  ldur cp, [fp, #-8]
0xffff8bd128dc   124  movz x0, #0x0
0xffff8bd128e0   128  movz x1, #0x4b48
0xffff8bd128e4   132  movk x1, #0xe4, lsl #16
0xffff8bd128e8   136  ldr x16, pc+48 (addr 0x0000ffff8bd12918)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd128ec   140  blr x16
0xffff8bd128f0   144  str x0, [jssp, #16]
0xffff8bd128f4   148  ldr x16, pc+44 (addr 0x0000ffff8bd12920)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd128f8   152  blr x16
0xffff8bd128fc   156  ldr lr, [jssp, #16]
0xffff8bd12900   160  ldp xzr, fp, [jssp], #24
0xffff8bd12904   164  b #-0x60 (addr 0xffff8bd128a4)
0xffff8bd12908   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd1290c   172  d63f03e0       constant
0xffff8bd12910   176  8bd06820       constant
0xffff8bd12914   180  0000ffff       constant
0xffff8bd12918   184  8bd06260       constant
0xffff8bd1291c   188  0000ffff       constant
0xffff8bd12920   192  8bd068e0       constant
0xffff8bd12924   196  0000ffff       constant
0xffff8bd12928   200  movz x16, #0x0
0xffff8bd1292c   204  sub csp, jssp, #0x10 (16)
0xffff8bd12930   208  stp fp, lr, [jssp, #-16]!
0xffff8bd12934   212  bl #+0x14 (addr 0xffff8bd12948)
0xffff8bd12938   216  movz x16, #0x8
0xffff8bd1293c   220  sub csp, jssp, #0x10 (16)
0xffff8bd12940   224  stp fp, lr, [jssp, #-16]!
0xffff8bd12944   228  bl #+0x4 (addr 0xffff8bd12948)
0xffff8bd12948   232  movz x17, #0xa00000000
0xffff8bd1294c   236  sub csp, jssp, #0x10 (16)
0xffff8bd12950   240  stp x17, cp, [jssp, #-16]!
0xffff8bd12954   244  add fp, jssp, #0x10 (16)
0xffff8bd12958   248  ldr x17, pc+24 (addr 0x0000ffff8bd12970)    ;; lazy deoptimization bailout 0
0xffff8bd1295c   252  add x17, x17, x16
0xffff8bd12960   256  br x17
0xffff8bd12964   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd12968   264  d63f03e0       constant
0xffff8bd1296c   268  d503201f       constant
0xffff8bd12970   272  8bb06000       constant
0xffff8bd12974   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd128f0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd128d0  code target (STUB)  (0xffff8bd06820)
0xffff8bd128e8  code target (STUB)  (0xffff8bd06260)
0xffff8bd128f4  code target (STUB)  (0xffff8bd068e0)
0xffff8bd12908  constant pool (size 32)
0xffff8bd12958  runtime entry
0xffff8bd12964  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4282
type = NORMAL
name = BinaryOpICStub(DIV:Smi*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff8bd12860     0  mov x2, x1
0xffff8bd12864     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd12928)
0xffff8bd12868     8  mov x3, x0
0xffff8bd1286c    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd12938)
0xffff8bd12870    16  scvtf d0, x2, #32
0xffff8bd12874    20  scvtf d1, x3, #32
0xffff8bd12878    24  fdiv d0, d0, d1
0xffff8bd1287c    28  movz x1, #0xe2c0
0xffff8bd12880    32  movk x1, #0x2cb8, lsl #16
0xffff8bd12884    36  ldp x2, x0, [x1]
0xffff8bd12888    40  adds x16, x2, #0x10 (16)
0xffff8bd1288c    44  ccmp x16, x0, #nzCv, lo
0xffff8bd12890    48  b.hi #+0x20 (addr 0xffff8bd128b0)
0xffff8bd12894    52  str x16, [x1]
0xffff8bd12898    56  ldr x1, [x26, #120]
0xffff8bd1289c    60  str x1, [x2]
0xffff8bd128a0    64  orr x2, x2, #0x1
0xffff8bd128a4    68  stur d0, [x2, #7]
0xffff8bd128a8    72  mov x0, x2
0xffff8bd128ac    76  ret
0xffff8bd128b0    80  sub csp, jssp, #0x10 (16)
0xffff8bd128b4    84  stp fp, lr, [jssp, #-16]!
0xffff8bd128b8    88  movz fp, #0xa00000000
0xffff8bd128bc    92  sub csp, jssp, #0x8 (8)
0xffff8bd128c0    96  str fp, [jssp, #-8]!
0xffff8bd128c4   100  add fp, jssp, #0x8 (8)
0xffff8bd128c8   104  movz x2, #0x0
0xffff8bd128cc   108  mov x16, lr
0xffff8bd128d0   112  ldr x17, pc+64 (addr 0x0000ffff8bd12910)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd128d4   116  blr x17
0xffff8bd128d8   120  ldur cp, [fp, #-8]
0xffff8bd128dc   124  movz x0, #0x0
0xffff8bd128e0   128  movz x1, #0x4b48
0xffff8bd128e4   132  movk x1, #0xe4, lsl #16
0xffff8bd128e8   136  ldr x16, pc+48 (addr 0x0000ffff8bd12918)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd128ec   140  blr x16
0xffff8bd128f0   144  str x0, [jssp, #16]
0xffff8bd128f4   148  ldr x16, pc+44 (addr 0x0000ffff8bd12920)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd128f8   152  blr x16
0xffff8bd128fc   156  ldr lr, [jssp, #16]
0xffff8bd12900   160  ldp xzr, fp, [jssp], #24
0xffff8bd12904   164  b #-0x60 (addr 0xffff8bd128a4)
0xffff8bd12908   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd1290c   172  d63f03e0       constant
0xffff8bd12910   176  8bd06820       constant
0xffff8bd12914   180  0000ffff       constant
0xffff8bd12918   184  8bd06260       constant
0xffff8bd1291c   188  0000ffff       constant
0xffff8bd12920   192  8bd068e0       constant
0xffff8bd12924   196  0000ffff       constant
0xffff8bd12928   200  movz x16, #0x0
0xffff8bd1292c   204  sub csp, jssp, #0x10 (16)
0xffff8bd12930   208  stp fp, lr, [jssp, #-16]!
0xffff8bd12934   212  bl #+0x14 (addr 0xffff8bd12948)
0xffff8bd12938   216  movz x16, #0x8
0xffff8bd1293c   220  sub csp, jssp, #0x10 (16)
0xffff8bd12940   224  stp fp, lr, [jssp, #-16]!
0xffff8bd12944   228  bl #+0x4 (addr 0xffff8bd12948)
0xffff8bd12948   232  movz x17, #0xa00000000
0xffff8bd1294c   236  sub csp, jssp, #0x10 (16)
0xffff8bd12950   240  stp x17, cp, [jssp, #-16]!
0xffff8bd12954   244  add fp, jssp, #0x10 (16)
0xffff8bd12958   248  ldr x17, pc+24 (addr 0x0000ffff8bd12970)    ;; lazy deoptimization bailout 0
0xffff8bd1295c   252  add x17, x17, x16
0xffff8bd12960   256  br x17
0xffff8bd12964   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd12968   264  d63f03e0       constant
0xffff8bd1296c   268  d503201f       constant
0xffff8bd12970   272  8bb06000       constant
0xffff8bd12974   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd128f0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd128d0  code target (STUB)  (0xffff8bd06820)
0xffff8bd128e8  code target (STUB)  (0xffff8bd06260)
0xffff8bd128f4  code target (STUB)  (0xffff8bd068e0)
0xffff8bd12908  constant pool (size 32)
0xffff8bd12958  runtime entry
0xffff8bd12964  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6330
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd12a00     0  mov x2, x1
0xffff8bd12a04     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd12af8)
0xffff8bd12a08     8  tbz w0, #0, #+0x34 (addr 0xffff8bd12a3c)
0xffff8bd12a0c    12  ldur x16, [x0, #-1]
0xffff8bd12a10    16  ldr x17, [x26, #120]
0xffff8bd12a14    20  cmp x16, x17
0xffff8bd12a18    24  b.ne #+0xc (addr 0xffff8bd12a24)
0xffff8bd12a1c    28  ldur d0, [x0, #7]
0xffff8bd12a20    32  b #+0x20 (addr 0xffff8bd12a40)
0xffff8bd12a24    36  ldr x16, [x26, #40]
0xffff8bd12a28    40  cmp x0, x16
0xffff8bd12a2c    44  b.ne #+0xdc (addr 0xffff8bd12b08)
0xffff8bd12a30    48  ldr x3, [x26, #928]
0xffff8bd12a34    52  ldur d0, [x3, #7]
0xffff8bd12a38    56  b #+0x8 (addr 0xffff8bd12a40)
0xffff8bd12a3c    60  scvtf d0, x0, #32
0xffff8bd12a40    64  scvtf d1, x2, #32
0xffff8bd12a44    68  fdiv d0, d1, d0
0xffff8bd12a48    72  movz x1, #0xe2c0
0xffff8bd12a4c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd12a50    80  ldp x2, x0, [x1]
0xffff8bd12a54    84  adds x16, x2, #0x10 (16)
0xffff8bd12a58    88  ccmp x16, x0, #nzCv, lo
0xffff8bd12a5c    92  b.hi #+0x20 (addr 0xffff8bd12a7c)
0xffff8bd12a60    96  str x16, [x1]
0xffff8bd12a64   100  ldr x1, [x26, #120]
0xffff8bd12a68   104  str x1, [x2]
0xffff8bd12a6c   108  orr x2, x2, #0x1
0xffff8bd12a70   112  stur d0, [x2, #7]
0xffff8bd12a74   116  mov x0, x2
0xffff8bd12a78   120  ret
0xffff8bd12a7c   124  sub csp, jssp, #0x10 (16)
0xffff8bd12a80   128  stp fp, lr, [jssp, #-16]!
0xffff8bd12a84   132  movz fp, #0xa00000000
0xffff8bd12a88   136  sub csp, jssp, #0x8 (8)
0xffff8bd12a8c   140  str fp, [jssp, #-8]!
0xffff8bd12a90   144  add fp, jssp, #0x8 (8)
0xffff8bd12a94   148  movz x2, #0x0
0xffff8bd12a98   152  mov x16, lr
0xffff8bd12a9c   156  ldr x17, pc+68 (addr 0x0000ffff8bd12ae0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd12aa0   160  blr x17
0xffff8bd12aa4   164  ldur cp, [fp, #-8]
0xffff8bd12aa8   168  movz x0, #0x0
0xffff8bd12aac   172  movz x1, #0x4b48
0xffff8bd12ab0   176  movk x1, #0xe4, lsl #16
0xffff8bd12ab4   180  ldr x16, pc+52 (addr 0x0000ffff8bd12ae8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd12ab8   184  blr x16
0xffff8bd12abc   188  str x0, [jssp, #16]
0xffff8bd12ac0   192  ldr x16, pc+48 (addr 0x0000ffff8bd12af0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd12ac4   196  blr x16
0xffff8bd12ac8   200  ldr lr, [jssp, #16]
0xffff8bd12acc   204  ldp xzr, fp, [jssp], #24
0xffff8bd12ad0   208  b #-0x60 (addr 0xffff8bd12a70)
0xffff8bd12ad4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd12ad8   216  d63f03e0       constant
0xffff8bd12adc   220  d503201f       constant
0xffff8bd12ae0   224  8bd06820       constant
0xffff8bd12ae4   228  0000ffff       constant
0xffff8bd12ae8   232  8bd06260       constant
0xffff8bd12aec   236  0000ffff       constant
0xffff8bd12af0   240  8bd068e0       constant
0xffff8bd12af4   244  0000ffff       constant
0xffff8bd12af8   248  movz x16, #0x0
0xffff8bd12afc   252  sub csp, jssp, #0x10 (16)
0xffff8bd12b00   256  stp fp, lr, [jssp, #-16]!
0xffff8bd12b04   260  bl #+0x14 (addr 0xffff8bd12b18)
0xffff8bd12b08   264  movz x16, #0x8
0xffff8bd12b0c   268  sub csp, jssp, #0x10 (16)
0xffff8bd12b10   272  stp fp, lr, [jssp, #-16]!
0xffff8bd12b14   276  bl #+0x4 (addr 0xffff8bd12b18)
0xffff8bd12b18   280  movz x17, #0xa00000000
0xffff8bd12b1c   284  sub csp, jssp, #0x10 (16)
0xffff8bd12b20   288  stp x17, cp, [jssp, #-16]!
0xffff8bd12b24   292  add fp, jssp, #0x10 (16)
0xffff8bd12b28   296  ldr x17, pc+24 (addr 0x0000ffff8bd12b40)    ;; lazy deoptimization bailout 0
0xffff8bd12b2c   300  add x17, x17, x16
0xffff8bd12b30   304  br x17
0xffff8bd12b34   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd12b38   312  d63f03e0       constant
0xffff8bd12b3c   316  d503201f       constant
0xffff8bd12b40   320  8bb06000       constant
0xffff8bd12b44   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd12abc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd12a9c  code target (STUB)  (0xffff8bd06820)
0xffff8bd12ab4  code target (STUB)  (0xffff8bd06260)
0xffff8bd12ac0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd12ad4  constant pool (size 36)
0xffff8bd12b28  runtime entry
0xffff8bd12b34  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6330
type = NORMAL
name = BinaryOpICStub(DIV:Smi*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd12a00     0  mov x2, x1
0xffff8bd12a04     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd12af8)
0xffff8bd12a08     8  tbz w0, #0, #+0x34 (addr 0xffff8bd12a3c)
0xffff8bd12a0c    12  ldur x16, [x0, #-1]
0xffff8bd12a10    16  ldr x17, [x26, #120]
0xffff8bd12a14    20  cmp x16, x17
0xffff8bd12a18    24  b.ne #+0xc (addr 0xffff8bd12a24)
0xffff8bd12a1c    28  ldur d0, [x0, #7]
0xffff8bd12a20    32  b #+0x20 (addr 0xffff8bd12a40)
0xffff8bd12a24    36  ldr x16, [x26, #40]
0xffff8bd12a28    40  cmp x0, x16
0xffff8bd12a2c    44  b.ne #+0xdc (addr 0xffff8bd12b08)
0xffff8bd12a30    48  ldr x3, [x26, #928]
0xffff8bd12a34    52  ldur d0, [x3, #7]
0xffff8bd12a38    56  b #+0x8 (addr 0xffff8bd12a40)
0xffff8bd12a3c    60  scvtf d0, x0, #32
0xffff8bd12a40    64  scvtf d1, x2, #32
0xffff8bd12a44    68  fdiv d0, d1, d0
0xffff8bd12a48    72  movz x1, #0xe2c0
0xffff8bd12a4c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd12a50    80  ldp x2, x0, [x1]
0xffff8bd12a54    84  adds x16, x2, #0x10 (16)
0xffff8bd12a58    88  ccmp x16, x0, #nzCv, lo
0xffff8bd12a5c    92  b.hi #+0x20 (addr 0xffff8bd12a7c)
0xffff8bd12a60    96  str x16, [x1]
0xffff8bd12a64   100  ldr x1, [x26, #120]
0xffff8bd12a68   104  str x1, [x2]
0xffff8bd12a6c   108  orr x2, x2, #0x1
0xffff8bd12a70   112  stur d0, [x2, #7]
0xffff8bd12a74   116  mov x0, x2
0xffff8bd12a78   120  ret
0xffff8bd12a7c   124  sub csp, jssp, #0x10 (16)
0xffff8bd12a80   128  stp fp, lr, [jssp, #-16]!
0xffff8bd12a84   132  movz fp, #0xa00000000
0xffff8bd12a88   136  sub csp, jssp, #0x8 (8)
0xffff8bd12a8c   140  str fp, [jssp, #-8]!
0xffff8bd12a90   144  add fp, jssp, #0x8 (8)
0xffff8bd12a94   148  movz x2, #0x0
0xffff8bd12a98   152  mov x16, lr
0xffff8bd12a9c   156  ldr x17, pc+68 (addr 0x0000ffff8bd12ae0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd12aa0   160  blr x17
0xffff8bd12aa4   164  ldur cp, [fp, #-8]
0xffff8bd12aa8   168  movz x0, #0x0
0xffff8bd12aac   172  movz x1, #0x4b48
0xffff8bd12ab0   176  movk x1, #0xe4, lsl #16
0xffff8bd12ab4   180  ldr x16, pc+52 (addr 0x0000ffff8bd12ae8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd12ab8   184  blr x16
0xffff8bd12abc   188  str x0, [jssp, #16]
0xffff8bd12ac0   192  ldr x16, pc+48 (addr 0x0000ffff8bd12af0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd12ac4   196  blr x16
0xffff8bd12ac8   200  ldr lr, [jssp, #16]
0xffff8bd12acc   204  ldp xzr, fp, [jssp], #24
0xffff8bd12ad0   208  b #-0x60 (addr 0xffff8bd12a70)
0xffff8bd12ad4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd12ad8   216  d63f03e0       constant
0xffff8bd12adc   220  d503201f       constant
0xffff8bd12ae0   224  8bd06820       constant
0xffff8bd12ae4   228  0000ffff       constant
0xffff8bd12ae8   232  8bd06260       constant
0xffff8bd12aec   236  0000ffff       constant
0xffff8bd12af0   240  8bd068e0       constant
0xffff8bd12af4   244  0000ffff       constant
0xffff8bd12af8   248  movz x16, #0x0
0xffff8bd12afc   252  sub csp, jssp, #0x10 (16)
0xffff8bd12b00   256  stp fp, lr, [jssp, #-16]!
0xffff8bd12b04   260  bl #+0x14 (addr 0xffff8bd12b18)
0xffff8bd12b08   264  movz x16, #0x8
0xffff8bd12b0c   268  sub csp, jssp, #0x10 (16)
0xffff8bd12b10   272  stp fp, lr, [jssp, #-16]!
0xffff8bd12b14   276  bl #+0x4 (addr 0xffff8bd12b18)
0xffff8bd12b18   280  movz x17, #0xa00000000
0xffff8bd12b1c   284  sub csp, jssp, #0x10 (16)
0xffff8bd12b20   288  stp x17, cp, [jssp, #-16]!
0xffff8bd12b24   292  add fp, jssp, #0x10 (16)
0xffff8bd12b28   296  ldr x17, pc+24 (addr 0x0000ffff8bd12b40)    ;; lazy deoptimization bailout 0
0xffff8bd12b2c   300  add x17, x17, x16
0xffff8bd12b30   304  br x17
0xffff8bd12b34   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd12b38   312  d63f03e0       constant
0xffff8bd12b3c   316  d503201f       constant
0xffff8bd12b40   320  8bb06000       constant
0xffff8bd12b44   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd12abc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd12a9c  code target (STUB)  (0xffff8bd06820)
0xffff8bd12ab4  code target (STUB)  (0xffff8bd06260)
0xffff8bd12ac0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd12ad4  constant pool (size 36)
0xffff8bd12b28  runtime entry
0xffff8bd12b34  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2234
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff8bd12bc0     0  mov x2, x1
0xffff8bd12bc4     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd12c88)
0xffff8bd12bc8     8  mov x3, x0
0xffff8bd12bcc    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd12c98)
0xffff8bd12bd0    16  scvtf d0, x2, #32
0xffff8bd12bd4    20  scvtf d1, x3, #32
0xffff8bd12bd8    24  fdiv d0, d0, d1
0xffff8bd12bdc    28  movz x1, #0xe2c0
0xffff8bd12be0    32  movk x1, #0x2cb8, lsl #16
0xffff8bd12be4    36  ldp x2, x0, [x1]
0xffff8bd12be8    40  adds x16, x2, #0x10 (16)
0xffff8bd12bec    44  ccmp x16, x0, #nzCv, lo
0xffff8bd12bf0    48  b.hi #+0x20 (addr 0xffff8bd12c10)
0xffff8bd12bf4    52  str x16, [x1]
0xffff8bd12bf8    56  ldr x1, [x26, #120]
0xffff8bd12bfc    60  str x1, [x2]
0xffff8bd12c00    64  orr x2, x2, #0x1
0xffff8bd12c04    68  stur d0, [x2, #7]
0xffff8bd12c08    72  mov x0, x2
0xffff8bd12c0c    76  ret
0xffff8bd12c10    80  sub csp, jssp, #0x10 (16)
0xffff8bd12c14    84  stp fp, lr, [jssp, #-16]!
0xffff8bd12c18    88  movz fp, #0xa00000000
0xffff8bd12c1c    92  sub csp, jssp, #0x8 (8)
0xffff8bd12c20    96  str fp, [jssp, #-8]!
0xffff8bd12c24   100  add fp, jssp, #0x8 (8)
0xffff8bd12c28   104  movz x2, #0x0
0xffff8bd12c2c   108  mov x16, lr
0xffff8bd12c30   112  ldr x17, pc+64 (addr 0x0000ffff8bd12c70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd12c34   116  blr x17
0xffff8bd12c38   120  ldur cp, [fp, #-8]
0xffff8bd12c3c   124  movz x0, #0x0
0xffff8bd12c40   128  movz x1, #0x4b48
0xffff8bd12c44   132  movk x1, #0xe4, lsl #16
0xffff8bd12c48   136  ldr x16, pc+48 (addr 0x0000ffff8bd12c78)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd12c4c   140  blr x16
0xffff8bd12c50   144  str x0, [jssp, #16]
0xffff8bd12c54   148  ldr x16, pc+44 (addr 0x0000ffff8bd12c80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd12c58   152  blr x16
0xffff8bd12c5c   156  ldr lr, [jssp, #16]
0xffff8bd12c60   160  ldp xzr, fp, [jssp], #24
0xffff8bd12c64   164  b #-0x60 (addr 0xffff8bd12c04)
0xffff8bd12c68   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd12c6c   172  d63f03e0       constant
0xffff8bd12c70   176  8bd06820       constant
0xffff8bd12c74   180  0000ffff       constant
0xffff8bd12c78   184  8bd06260       constant
0xffff8bd12c7c   188  0000ffff       constant
0xffff8bd12c80   192  8bd068e0       constant
0xffff8bd12c84   196  0000ffff       constant
0xffff8bd12c88   200  movz x16, #0x0
0xffff8bd12c8c   204  sub csp, jssp, #0x10 (16)
0xffff8bd12c90   208  stp fp, lr, [jssp, #-16]!
0xffff8bd12c94   212  bl #+0x14 (addr 0xffff8bd12ca8)
0xffff8bd12c98   216  movz x16, #0x8
0xffff8bd12c9c   220  sub csp, jssp, #0x10 (16)
0xffff8bd12ca0   224  stp fp, lr, [jssp, #-16]!
0xffff8bd12ca4   228  bl #+0x4 (addr 0xffff8bd12ca8)
0xffff8bd12ca8   232  movz x17, #0xa00000000
0xffff8bd12cac   236  sub csp, jssp, #0x10 (16)
0xffff8bd12cb0   240  stp x17, cp, [jssp, #-16]!
0xffff8bd12cb4   244  add fp, jssp, #0x10 (16)
0xffff8bd12cb8   248  ldr x17, pc+24 (addr 0x0000ffff8bd12cd0)    ;; lazy deoptimization bailout 0
0xffff8bd12cbc   252  add x17, x17, x16
0xffff8bd12cc0   256  br x17
0xffff8bd12cc4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd12cc8   264  d63f03e0       constant
0xffff8bd12ccc   268  d503201f       constant
0xffff8bd12cd0   272  8bb06000       constant
0xffff8bd12cd4   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd12c50   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd12c30  code target (STUB)  (0xffff8bd06820)
0xffff8bd12c48  code target (STUB)  (0xffff8bd06260)
0xffff8bd12c54  code target (STUB)  (0xffff8bd068e0)
0xffff8bd12c68  constant pool (size 32)
0xffff8bd12cb8  runtime entry
0xffff8bd12cc4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2234
type = NORMAL
name = BinaryOpICStub(DIV:Smi*Smi->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff8bd12bc0     0  mov x2, x1
0xffff8bd12bc4     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd12c88)
0xffff8bd12bc8     8  mov x3, x0
0xffff8bd12bcc    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd12c98)
0xffff8bd12bd0    16  scvtf d0, x2, #32
0xffff8bd12bd4    20  scvtf d1, x3, #32
0xffff8bd12bd8    24  fdiv d0, d0, d1
0xffff8bd12bdc    28  movz x1, #0xe2c0
0xffff8bd12be0    32  movk x1, #0x2cb8, lsl #16
0xffff8bd12be4    36  ldp x2, x0, [x1]
0xffff8bd12be8    40  adds x16, x2, #0x10 (16)
0xffff8bd12bec    44  ccmp x16, x0, #nzCv, lo
0xffff8bd12bf0    48  b.hi #+0x20 (addr 0xffff8bd12c10)
0xffff8bd12bf4    52  str x16, [x1]
0xffff8bd12bf8    56  ldr x1, [x26, #120]
0xffff8bd12bfc    60  str x1, [x2]
0xffff8bd12c00    64  orr x2, x2, #0x1
0xffff8bd12c04    68  stur d0, [x2, #7]
0xffff8bd12c08    72  mov x0, x2
0xffff8bd12c0c    76  ret
0xffff8bd12c10    80  sub csp, jssp, #0x10 (16)
0xffff8bd12c14    84  stp fp, lr, [jssp, #-16]!
0xffff8bd12c18    88  movz fp, #0xa00000000
0xffff8bd12c1c    92  sub csp, jssp, #0x8 (8)
0xffff8bd12c20    96  str fp, [jssp, #-8]!
0xffff8bd12c24   100  add fp, jssp, #0x8 (8)
0xffff8bd12c28   104  movz x2, #0x0
0xffff8bd12c2c   108  mov x16, lr
0xffff8bd12c30   112  ldr x17, pc+64 (addr 0x0000ffff8bd12c70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd12c34   116  blr x17
0xffff8bd12c38   120  ldur cp, [fp, #-8]
0xffff8bd12c3c   124  movz x0, #0x0
0xffff8bd12c40   128  movz x1, #0x4b48
0xffff8bd12c44   132  movk x1, #0xe4, lsl #16
0xffff8bd12c48   136  ldr x16, pc+48 (addr 0x0000ffff8bd12c78)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd12c4c   140  blr x16
0xffff8bd12c50   144  str x0, [jssp, #16]
0xffff8bd12c54   148  ldr x16, pc+44 (addr 0x0000ffff8bd12c80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd12c58   152  blr x16
0xffff8bd12c5c   156  ldr lr, [jssp, #16]
0xffff8bd12c60   160  ldp xzr, fp, [jssp], #24
0xffff8bd12c64   164  b #-0x60 (addr 0xffff8bd12c04)
0xffff8bd12c68   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd12c6c   172  d63f03e0       constant
0xffff8bd12c70   176  8bd06820       constant
0xffff8bd12c74   180  0000ffff       constant
0xffff8bd12c78   184  8bd06260       constant
0xffff8bd12c7c   188  0000ffff       constant
0xffff8bd12c80   192  8bd068e0       constant
0xffff8bd12c84   196  0000ffff       constant
0xffff8bd12c88   200  movz x16, #0x0
0xffff8bd12c8c   204  sub csp, jssp, #0x10 (16)
0xffff8bd12c90   208  stp fp, lr, [jssp, #-16]!
0xffff8bd12c94   212  bl #+0x14 (addr 0xffff8bd12ca8)
0xffff8bd12c98   216  movz x16, #0x8
0xffff8bd12c9c   220  sub csp, jssp, #0x10 (16)
0xffff8bd12ca0   224  stp fp, lr, [jssp, #-16]!
0xffff8bd12ca4   228  bl #+0x4 (addr 0xffff8bd12ca8)
0xffff8bd12ca8   232  movz x17, #0xa00000000
0xffff8bd12cac   236  sub csp, jssp, #0x10 (16)
0xffff8bd12cb0   240  stp x17, cp, [jssp, #-16]!
0xffff8bd12cb4   244  add fp, jssp, #0x10 (16)
0xffff8bd12cb8   248  ldr x17, pc+24 (addr 0x0000ffff8bd12cd0)    ;; lazy deoptimization bailout 0
0xffff8bd12cbc   252  add x17, x17, x16
0xffff8bd12cc0   256  br x17
0xffff8bd12cc4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd12cc8   264  d63f03e0       constant
0xffff8bd12ccc   268  d503201f       constant
0xffff8bd12cd0   272  8bb06000       constant
0xffff8bd12cd4   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd12c50   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd12c30  code target (STUB)  (0xffff8bd06820)
0xffff8bd12c48  code target (STUB)  (0xffff8bd06260)
0xffff8bd12c54  code target (STUB)  (0xffff8bd068e0)
0xffff8bd12c68  constant pool (size 32)
0xffff8bd12cb8  runtime entry
0xffff8bd12cc4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2202
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 176)
0xffff8bd12d60     0  mov x2, x1
0xffff8bd12d64     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd12da8)
0xffff8bd12d68     8  mov x3, x0
0xffff8bd12d6c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd12db8)
0xffff8bd12d70    16  asr x2, x2, #32
0xffff8bd12d74    20  asr x3, x3, #32
0xffff8bd12d78    24  sdiv w5, w2, w3
0xffff8bd12d7c    28  cbz w3, #+0x4c (addr 0xffff8bd12dc8)
0xffff8bd12d80    32  cmp w3, #0x0 (0)
0xffff8bd12d84    36  ccmp w2, #0, #nzcv, mi
0xffff8bd12d88    40  b.eq #+0x40 (addr 0xffff8bd12dc8)
0xffff8bd12d8c    44  cmp w2, #0x1 (1)
0xffff8bd12d90    48  ccmn w3, #1, #nzcv, vs
0xffff8bd12d94    52  b.eq #+0x34 (addr 0xffff8bd12dc8)
0xffff8bd12d98    56  msub w4, w5, w3, w2
0xffff8bd12d9c    60  cbnz w4, #+0x2c (addr 0xffff8bd12dc8)
0xffff8bd12da0    64  lsl x0, x5, #32
0xffff8bd12da4    68  ret
0xffff8bd12da8    72  movz x16, #0x0
0xffff8bd12dac    76  sub csp, jssp, #0x10 (16)
0xffff8bd12db0    80  stp fp, lr, [jssp, #-16]!
0xffff8bd12db4    84  bl #+0x24 (addr 0xffff8bd12dd8)
0xffff8bd12db8    88  movz x16, #0x8
0xffff8bd12dbc    92  sub csp, jssp, #0x10 (16)
0xffff8bd12dc0    96  stp fp, lr, [jssp, #-16]!
0xffff8bd12dc4   100  bl #+0x14 (addr 0xffff8bd12dd8)
0xffff8bd12dc8   104  movz x16, #0x10
0xffff8bd12dcc   108  sub csp, jssp, #0x10 (16)
0xffff8bd12dd0   112  stp fp, lr, [jssp, #-16]!
0xffff8bd12dd4   116  bl #+0x4 (addr 0xffff8bd12dd8)
0xffff8bd12dd8   120  movz x17, #0xa00000000
0xffff8bd12ddc   124  sub csp, jssp, #0x10 (16)
0xffff8bd12de0   128  stp x17, cp, [jssp, #-16]!
0xffff8bd12de4   132  add fp, jssp, #0x10 (16)
0xffff8bd12de8   136  ldr x17, pc+24 (addr 0x0000ffff8bd12e00)    ;; lazy deoptimization bailout 0
0xffff8bd12dec   140  add x17, x17, x16
0xffff8bd12df0   144  br x17
0xffff8bd12df4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd12df8   152  d63f03e0       constant
0xffff8bd12dfc   156  d503201f       constant
0xffff8bd12e00   160  8bb06000       constant
0xffff8bd12e04   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd12de8  runtime entry
0xffff8bd12df4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2202
type = NORMAL
name = BinaryOpICStub(DIV:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 176)
0xffff8bd12d60     0  mov x2, x1
0xffff8bd12d64     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd12da8)
0xffff8bd12d68     8  mov x3, x0
0xffff8bd12d6c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd12db8)
0xffff8bd12d70    16  asr x2, x2, #32
0xffff8bd12d74    20  asr x3, x3, #32
0xffff8bd12d78    24  sdiv w5, w2, w3
0xffff8bd12d7c    28  cbz w3, #+0x4c (addr 0xffff8bd12dc8)
0xffff8bd12d80    32  cmp w3, #0x0 (0)
0xffff8bd12d84    36  ccmp w2, #0, #nzcv, mi
0xffff8bd12d88    40  b.eq #+0x40 (addr 0xffff8bd12dc8)
0xffff8bd12d8c    44  cmp w2, #0x1 (1)
0xffff8bd12d90    48  ccmn w3, #1, #nzcv, vs
0xffff8bd12d94    52  b.eq #+0x34 (addr 0xffff8bd12dc8)
0xffff8bd12d98    56  msub w4, w5, w3, w2
0xffff8bd12d9c    60  cbnz w4, #+0x2c (addr 0xffff8bd12dc8)
0xffff8bd12da0    64  lsl x0, x5, #32
0xffff8bd12da4    68  ret
0xffff8bd12da8    72  movz x16, #0x0
0xffff8bd12dac    76  sub csp, jssp, #0x10 (16)
0xffff8bd12db0    80  stp fp, lr, [jssp, #-16]!
0xffff8bd12db4    84  bl #+0x24 (addr 0xffff8bd12dd8)
0xffff8bd12db8    88  movz x16, #0x8
0xffff8bd12dbc    92  sub csp, jssp, #0x10 (16)
0xffff8bd12dc0    96  stp fp, lr, [jssp, #-16]!
0xffff8bd12dc4   100  bl #+0x14 (addr 0xffff8bd12dd8)
0xffff8bd12dc8   104  movz x16, #0x10
0xffff8bd12dcc   108  sub csp, jssp, #0x10 (16)
0xffff8bd12dd0   112  stp fp, lr, [jssp, #-16]!
0xffff8bd12dd4   116  bl #+0x4 (addr 0xffff8bd12dd8)
0xffff8bd12dd8   120  movz x17, #0xa00000000
0xffff8bd12ddc   124  sub csp, jssp, #0x10 (16)
0xffff8bd12de0   128  stp x17, cp, [jssp, #-16]!
0xffff8bd12de4   132  add fp, jssp, #0x10 (16)
0xffff8bd12de8   136  ldr x17, pc+24 (addr 0x0000ffff8bd12e00)    ;; lazy deoptimization bailout 0
0xffff8bd12dec   140  add x17, x17, x16
0xffff8bd12df0   144  br x17
0xffff8bd12df4   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd12df8   152  d63f03e0       constant
0xffff8bd12dfc   156  d503201f       constant
0xffff8bd12e00   160  8bb06000       constant
0xffff8bd12e04   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd12de8  runtime entry
0xffff8bd12df4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2491
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd12e80     0  movz x16, #0xa00000000
0xffff8bd12e84     4  sub csp, jssp, #0x10 (16)
0xffff8bd12e88     8  stp fp, lr, [jssp, #-16]!
0xffff8bd12e8c    12  mov fp, jssp
0xffff8bd12e90    16  sub csp, jssp, #0x20 (32)
0xffff8bd12e94    20  sub jssp, jssp, #0x20 (32)
0xffff8bd12e98    24  stur x16, [fp, #-8]
0xffff8bd12e9c    28  str x1, [jssp, #16]
0xffff8bd12ea0    32  str x0, [jssp, #8]
0xffff8bd12ea4    36  str cp, [jssp]
0xffff8bd12ea8    40  mov x3, cp
0xffff8bd12eac    44  mov x2, x0
0xffff8bd12eb0    48  tbnz w2, #0, #+0xe8 (addr 0xffff8bd12f98)
0xffff8bd12eb4    52  tbz w1, #0, #+0x34 (addr 0xffff8bd12ee8)
0xffff8bd12eb8    56  ldur x16, [x1, #-1]
0xffff8bd12ebc    60  ldr x17, [x26, #120]
0xffff8bd12ec0    64  cmp x16, x17
0xffff8bd12ec4    68  b.ne #+0xc (addr 0xffff8bd12ed0)
0xffff8bd12ec8    72  ldur d0, [x1, #7]
0xffff8bd12ecc    76  b #+0x20 (addr 0xffff8bd12eec)
0xffff8bd12ed0    80  ldr x16, [x26, #40]
0xffff8bd12ed4    84  cmp x1, x16
0xffff8bd12ed8    88  b.ne #+0xc8 (addr 0xffff8bd12fa0)
0xffff8bd12edc    92  ldr x4, [x26, #928]
0xffff8bd12ee0    96  ldur d0, [x4, #7]
0xffff8bd12ee4   100  b #+0x8 (addr 0xffff8bd12eec)
0xffff8bd12ee8   104  scvtf d0, x1, #32
0xffff8bd12eec   108  scvtf d1, x2, #32
0xffff8bd12ef0   112  movz x16, #0x4c40
0xffff8bd12ef4   116  movk x16, #0x9c, lsl #16
0xffff8bd12ef8   120  and csp, jssp, #0xfffffffffffffff0
0xffff8bd12efc   124  blr x16
0xffff8bd12f00   128  movz x1, #0xe2c0
0xffff8bd12f04   132  movk x1, #0x2cb8, lsl #16
0xffff8bd12f08   136  ldp x2, x0, [x1]
0xffff8bd12f0c   140  adds x16, x2, #0x10 (16)
0xffff8bd12f10   144  ccmp x16, x0, #nzCv, lo
0xffff8bd12f14   148  b.hi #+0x2c (addr 0xffff8bd12f40)
0xffff8bd12f18   152  str x16, [x1]
0xffff8bd12f1c   156  ldr x1, [x26, #120]
0xffff8bd12f20   160  str x1, [x2]
0xffff8bd12f24   164  orr x2, x2, #0x1
0xffff8bd12f28   168  stur d0, [x2, #7]
0xffff8bd12f2c   172  mov x0, x2
0xffff8bd12f30   176  ldr cp, [jssp]
0xffff8bd12f34   180  mov jssp, fp
0xffff8bd12f38   184  ldp fp, lr, [jssp], #16
0xffff8bd12f3c   188  ret
0xffff8bd12f40   192  movz x2, #0x0
0xffff8bd12f44   196  mov x16, lr
0xffff8bd12f48   200  ldr x17, pc+56 (addr 0x0000ffff8bd12f80)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd12f4c   204  blr x17
0xffff8bd12f50   208  ldur cp, [fp, #-8]
0xffff8bd12f54   212  movz x0, #0x0
0xffff8bd12f58   216  movz x1, #0x4b48
0xffff8bd12f5c   220  movk x1, #0xe4, lsl #16
0xffff8bd12f60   224  ldr x16, pc+40 (addr 0x0000ffff8bd12f88)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd12f64   228  blr x16
0xffff8bd12f68   232  str x0, [jssp, #16]
0xffff8bd12f6c   236  ldr x16, pc+36 (addr 0x0000ffff8bd12f90)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd12f70   240  blr x16
0xffff8bd12f74   244  b #-0x4c (addr 0xffff8bd12f28)
0xffff8bd12f78   248  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd12f7c   252  d63f03e0       constant
0xffff8bd12f80   256  8bd06820       constant
0xffff8bd12f84   260  0000ffff       constant
0xffff8bd12f88   264  8bd06260       constant
0xffff8bd12f8c   268  0000ffff       constant
0xffff8bd12f90   272  8bd068e0       constant
0xffff8bd12f94   276  0000ffff       constant
0xffff8bd12f98   280  movz x16, #0x0
0xffff8bd12f9c   284  bl #+0xc (addr 0xffff8bd12fa8)
0xffff8bd12fa0   288  movz x16, #0x8
0xffff8bd12fa4   292  bl #+0x4 (addr 0xffff8bd12fa8)
0xffff8bd12fa8   296  ldr x17, pc+24 (addr 0x0000ffff8bd12fc0)    ;; lazy deoptimization bailout 0
0xffff8bd12fac   300  add x17, x17, x16
0xffff8bd12fb0   304  br x17
0xffff8bd12fb4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd12fb8   312  d63f03e0       constant
0xffff8bd12fbc   316  d503201f       constant
0xffff8bd12fc0   320  8bb06000       constant
0xffff8bd12fc4   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd12f68   232  100000 | x2 (sp -> fp)  <none>

RelocInfo (size = 19)
0xffff8bd12f48  code target (STUB)  (0xffff8bd06820)
0xffff8bd12f60  code target (STUB)  (0xffff8bd06260)
0xffff8bd12f6c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd12f78  constant pool (size 32)
0xffff8bd12fa8  runtime entry
0xffff8bd12fb4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2491
type = NORMAL
name = BinaryOpICStub(MOD:Number*Smi->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd12e80     0  movz x16, #0xa00000000
0xffff8bd12e84     4  sub csp, jssp, #0x10 (16)
0xffff8bd12e88     8  stp fp, lr, [jssp, #-16]!
0xffff8bd12e8c    12  mov fp, jssp
0xffff8bd12e90    16  sub csp, jssp, #0x20 (32)
0xffff8bd12e94    20  sub jssp, jssp, #0x20 (32)
0xffff8bd12e98    24  stur x16, [fp, #-8]
0xffff8bd12e9c    28  str x1, [jssp, #16]
0xffff8bd12ea0    32  str x0, [jssp, #8]
0xffff8bd12ea4    36  str cp, [jssp]
0xffff8bd12ea8    40  mov x3, cp
0xffff8bd12eac    44  mov x2, x0
0xffff8bd12eb0    48  tbnz w2, #0, #+0xe8 (addr 0xffff8bd12f98)
0xffff8bd12eb4    52  tbz w1, #0, #+0x34 (addr 0xffff8bd12ee8)
0xffff8bd12eb8    56  ldur x16, [x1, #-1]
0xffff8bd12ebc    60  ldr x17, [x26, #120]
0xffff8bd12ec0    64  cmp x16, x17
0xffff8bd12ec4    68  b.ne #+0xc (addr 0xffff8bd12ed0)
0xffff8bd12ec8    72  ldur d0, [x1, #7]
0xffff8bd12ecc    76  b #+0x20 (addr 0xffff8bd12eec)
0xffff8bd12ed0    80  ldr x16, [x26, #40]
0xffff8bd12ed4    84  cmp x1, x16
0xffff8bd12ed8    88  b.ne #+0xc8 (addr 0xffff8bd12fa0)
0xffff8bd12edc    92  ldr x4, [x26, #928]
0xffff8bd12ee0    96  ldur d0, [x4, #7]
0xffff8bd12ee4   100  b #+0x8 (addr 0xffff8bd12eec)
0xffff8bd12ee8   104  scvtf d0, x1, #32
0xffff8bd12eec   108  scvtf d1, x2, #32
0xffff8bd12ef0   112  movz x16, #0x4c40
0xffff8bd12ef4   116  movk x16, #0x9c, lsl #16
0xffff8bd12ef8   120  and csp, jssp, #0xfffffffffffffff0
0xffff8bd12efc   124  blr x16
0xffff8bd12f00   128  movz x1, #0xe2c0
0xffff8bd12f04   132  movk x1, #0x2cb8, lsl #16
0xffff8bd12f08   136  ldp x2, x0, [x1]
0xffff8bd12f0c   140  adds x16, x2, #0x10 (16)
0xffff8bd12f10   144  ccmp x16, x0, #nzCv, lo
0xffff8bd12f14   148  b.hi #+0x2c (addr 0xffff8bd12f40)
0xffff8bd12f18   152  str x16, [x1]
0xffff8bd12f1c   156  ldr x1, [x26, #120]
0xffff8bd12f20   160  str x1, [x2]
0xffff8bd12f24   164  orr x2, x2, #0x1
0xffff8bd12f28   168  stur d0, [x2, #7]
0xffff8bd12f2c   172  mov x0, x2
0xffff8bd12f30   176  ldr cp, [jssp]
0xffff8bd12f34   180  mov jssp, fp
0xffff8bd12f38   184  ldp fp, lr, [jssp], #16
0xffff8bd12f3c   188  ret
0xffff8bd12f40   192  movz x2, #0x0
0xffff8bd12f44   196  mov x16, lr
0xffff8bd12f48   200  ldr x17, pc+56 (addr 0x0000ffff8bd12f80)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd12f4c   204  blr x17
0xffff8bd12f50   208  ldur cp, [fp, #-8]
0xffff8bd12f54   212  movz x0, #0x0
0xffff8bd12f58   216  movz x1, #0x4b48
0xffff8bd12f5c   220  movk x1, #0xe4, lsl #16
0xffff8bd12f60   224  ldr x16, pc+40 (addr 0x0000ffff8bd12f88)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd12f64   228  blr x16
0xffff8bd12f68   232  str x0, [jssp, #16]
0xffff8bd12f6c   236  ldr x16, pc+36 (addr 0x0000ffff8bd12f90)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd12f70   240  blr x16
0xffff8bd12f74   244  b #-0x4c (addr 0xffff8bd12f28)
0xffff8bd12f78   248  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd12f7c   252  d63f03e0       constant
0xffff8bd12f80   256  8bd06820       constant
0xffff8bd12f84   260  0000ffff       constant
0xffff8bd12f88   264  8bd06260       constant
0xffff8bd12f8c   268  0000ffff       constant
0xffff8bd12f90   272  8bd068e0       constant
0xffff8bd12f94   276  0000ffff       constant
0xffff8bd12f98   280  movz x16, #0x0
0xffff8bd12f9c   284  bl #+0xc (addr 0xffff8bd12fa8)
0xffff8bd12fa0   288  movz x16, #0x8
0xffff8bd12fa4   292  bl #+0x4 (addr 0xffff8bd12fa8)
0xffff8bd12fa8   296  ldr x17, pc+24 (addr 0x0000ffff8bd12fc0)    ;; lazy deoptimization bailout 0
0xffff8bd12fac   300  add x17, x17, x16
0xffff8bd12fb0   304  br x17
0xffff8bd12fb4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd12fb8   312  d63f03e0       constant
0xffff8bd12fbc   316  d503201f       constant
0xffff8bd12fc0   320  8bb06000       constant
0xffff8bd12fc4   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd12f68   232  100000 | x2 (sp -> fp)  <none>

RelocInfo (size = 19)
0xffff8bd12f48  code target (STUB)  (0xffff8bd06820)
0xffff8bd12f60  code target (STUB)  (0xffff8bd06260)
0xffff8bd12f6c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd12f78  constant pool (size 32)
0xffff8bd12fa8  runtime entry
0xffff8bd12fb4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2203
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 152)
0xffff8bd13040     0  mov x2, x1
0xffff8bd13044     4  tbnz w2, #0, #+0x30 (addr 0xffff8bd13074)
0xffff8bd13048     8  mov x3, x0
0xffff8bd1304c    12  tbnz w3, #0, #+0x38 (addr 0xffff8bd13084)
0xffff8bd13050    16  asr x2, x2, #32
0xffff8bd13054    20  asr x3, x3, #32
0xffff8bd13058    24  sdiv w4, w2, w3
0xffff8bd1305c    28  cbz w3, #+0x38 (addr 0xffff8bd13094)
0xffff8bd13060    32  msub w4, w4, w3, w2
0xffff8bd13064    36  cbnz w4, #+0x8 (addr 0xffff8bd1306c)
0xffff8bd13068    40  tbnz w2, #31, #+0x2c (addr 0xffff8bd13094)
0xffff8bd1306c    44  lsl x0, x4, #32
0xffff8bd13070    48  ret
0xffff8bd13074    52  movz x16, #0x0
0xffff8bd13078    56  sub csp, jssp, #0x10 (16)
0xffff8bd1307c    60  stp fp, lr, [jssp, #-16]!
0xffff8bd13080    64  bl #+0x24 (addr 0xffff8bd130a4)
0xffff8bd13084    68  movz x16, #0x8
0xffff8bd13088    72  sub csp, jssp, #0x10 (16)
0xffff8bd1308c    76  stp fp, lr, [jssp, #-16]!
0xffff8bd13090    80  bl #+0x14 (addr 0xffff8bd130a4)
0xffff8bd13094    84  movz x16, #0x10
0xffff8bd13098    88  sub csp, jssp, #0x10 (16)
0xffff8bd1309c    92  stp fp, lr, [jssp, #-16]!
0xffff8bd130a0    96  bl #+0x4 (addr 0xffff8bd130a4)
0xffff8bd130a4   100  movz x17, #0xa00000000
0xffff8bd130a8   104  sub csp, jssp, #0x10 (16)
0xffff8bd130ac   108  stp x17, cp, [jssp, #-16]!
0xffff8bd130b0   112  add fp, jssp, #0x10 (16)
0xffff8bd130b4   116  ldr x17, pc+20 (addr 0x0000ffff8bd130c8)    ;; lazy deoptimization bailout 0
0xffff8bd130b8   120  add x17, x17, x16
0xffff8bd130bc   124  br x17
0xffff8bd130c0   128  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd130c4   132  d63f03e0       constant
0xffff8bd130c8   136  8bb06000       constant
0xffff8bd130cc   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd130b4  runtime entry
0xffff8bd130c0  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2203
type = NORMAL
name = BinaryOpICStub(MOD:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 152)
0xffff8bd13040     0  mov x2, x1
0xffff8bd13044     4  tbnz w2, #0, #+0x30 (addr 0xffff8bd13074)
0xffff8bd13048     8  mov x3, x0
0xffff8bd1304c    12  tbnz w3, #0, #+0x38 (addr 0xffff8bd13084)
0xffff8bd13050    16  asr x2, x2, #32
0xffff8bd13054    20  asr x3, x3, #32
0xffff8bd13058    24  sdiv w4, w2, w3
0xffff8bd1305c    28  cbz w3, #+0x38 (addr 0xffff8bd13094)
0xffff8bd13060    32  msub w4, w4, w3, w2
0xffff8bd13064    36  cbnz w4, #+0x8 (addr 0xffff8bd1306c)
0xffff8bd13068    40  tbnz w2, #31, #+0x2c (addr 0xffff8bd13094)
0xffff8bd1306c    44  lsl x0, x4, #32
0xffff8bd13070    48  ret
0xffff8bd13074    52  movz x16, #0x0
0xffff8bd13078    56  sub csp, jssp, #0x10 (16)
0xffff8bd1307c    60  stp fp, lr, [jssp, #-16]!
0xffff8bd13080    64  bl #+0x24 (addr 0xffff8bd130a4)
0xffff8bd13084    68  movz x16, #0x8
0xffff8bd13088    72  sub csp, jssp, #0x10 (16)
0xffff8bd1308c    76  stp fp, lr, [jssp, #-16]!
0xffff8bd13090    80  bl #+0x14 (addr 0xffff8bd130a4)
0xffff8bd13094    84  movz x16, #0x10
0xffff8bd13098    88  sub csp, jssp, #0x10 (16)
0xffff8bd1309c    92  stp fp, lr, [jssp, #-16]!
0xffff8bd130a0    96  bl #+0x4 (addr 0xffff8bd130a4)
0xffff8bd130a4   100  movz x17, #0xa00000000
0xffff8bd130a8   104  sub csp, jssp, #0x10 (16)
0xffff8bd130ac   108  stp x17, cp, [jssp, #-16]!
0xffff8bd130b0   112  add fp, jssp, #0x10 (16)
0xffff8bd130b4   116  ldr x17, pc+20 (addr 0x0000ffff8bd130c8)    ;; lazy deoptimization bailout 0
0xffff8bd130b8   120  add x17, x17, x16
0xffff8bd130bc   124  br x17
0xffff8bd130c0   128  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd130c4   132  d63f03e0       constant
0xffff8bd130c8   136  8bb06000       constant
0xffff8bd130cc   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd130b4  runtime entry
0xffff8bd130c0  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4393
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bd13140     0  mov x2, x1
0xffff8bd13144     4  tbnz w2, #0, #+0x34 (addr 0xffff8bd13178)
0xffff8bd13148     8  mov x3, x0
0xffff8bd1314c    12  tbnz w3, #0, #+0x3c (addr 0xffff8bd13188)
0xffff8bd13150    16  cmp x3, #0x0 (0)
0xffff8bd13154    20  ccmp x2, #0, #nZcv, ne
0xffff8bd13158    24  ccmn x3, x2, #nzcv, eq
0xffff8bd1315c    28  b.mi #+0x3c (addr 0xffff8bd13198)
0xffff8bd13160    32  smulh x2, x3, x2
0xffff8bd13164    36  cmp x2, w2, sxtw
0xffff8bd13168    40  lsl x2, x2, #32
0xffff8bd1316c    44  b.ne #+0x2c (addr 0xffff8bd13198)
0xffff8bd13170    48  mov x0, x2
0xffff8bd13174    52  ret
0xffff8bd13178    56  movz x16, #0x0
0xffff8bd1317c    60  sub csp, jssp, #0x10 (16)
0xffff8bd13180    64  stp fp, lr, [jssp, #-16]!
0xffff8bd13184    68  bl #+0x24 (addr 0xffff8bd131a8)
0xffff8bd13188    72  movz x16, #0x8
0xffff8bd1318c    76  sub csp, jssp, #0x10 (16)
0xffff8bd13190    80  stp fp, lr, [jssp, #-16]!
0xffff8bd13194    84  bl #+0x14 (addr 0xffff8bd131a8)
0xffff8bd13198    88  movz x16, #0x10
0xffff8bd1319c    92  sub csp, jssp, #0x10 (16)
0xffff8bd131a0    96  stp fp, lr, [jssp, #-16]!
0xffff8bd131a4   100  bl #+0x4 (addr 0xffff8bd131a8)
0xffff8bd131a8   104  movz x17, #0xa00000000
0xffff8bd131ac   108  sub csp, jssp, #0x10 (16)
0xffff8bd131b0   112  stp x17, cp, [jssp, #-16]!
0xffff8bd131b4   116  add fp, jssp, #0x10 (16)
0xffff8bd131b8   120  ldr x17, pc+24 (addr 0x0000ffff8bd131d0)    ;; lazy deoptimization bailout 0
0xffff8bd131bc   124  add x17, x17, x16
0xffff8bd131c0   128  br x17
0xffff8bd131c4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd131c8   136  d63f03e0       constant
0xffff8bd131cc   140  d503201f       constant
0xffff8bd131d0   144  8bb06000       constant
0xffff8bd131d4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd131b8  runtime entry
0xffff8bd131c4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4393
type = NORMAL
name = BinaryOpICStub(MUL:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 160)
0xffff8bd13140     0  mov x2, x1
0xffff8bd13144     4  tbnz w2, #0, #+0x34 (addr 0xffff8bd13178)
0xffff8bd13148     8  mov x3, x0
0xffff8bd1314c    12  tbnz w3, #0, #+0x3c (addr 0xffff8bd13188)
0xffff8bd13150    16  cmp x3, #0x0 (0)
0xffff8bd13154    20  ccmp x2, #0, #nZcv, ne
0xffff8bd13158    24  ccmn x3, x2, #nzcv, eq
0xffff8bd1315c    28  b.mi #+0x3c (addr 0xffff8bd13198)
0xffff8bd13160    32  smulh x2, x3, x2
0xffff8bd13164    36  cmp x2, w2, sxtw
0xffff8bd13168    40  lsl x2, x2, #32
0xffff8bd1316c    44  b.ne #+0x2c (addr 0xffff8bd13198)
0xffff8bd13170    48  mov x0, x2
0xffff8bd13174    52  ret
0xffff8bd13178    56  movz x16, #0x0
0xffff8bd1317c    60  sub csp, jssp, #0x10 (16)
0xffff8bd13180    64  stp fp, lr, [jssp, #-16]!
0xffff8bd13184    68  bl #+0x24 (addr 0xffff8bd131a8)
0xffff8bd13188    72  movz x16, #0x8
0xffff8bd1318c    76  sub csp, jssp, #0x10 (16)
0xffff8bd13190    80  stp fp, lr, [jssp, #-16]!
0xffff8bd13194    84  bl #+0x14 (addr 0xffff8bd131a8)
0xffff8bd13198    88  movz x16, #0x10
0xffff8bd1319c    92  sub csp, jssp, #0x10 (16)
0xffff8bd131a0    96  stp fp, lr, [jssp, #-16]!
0xffff8bd131a4   100  bl #+0x4 (addr 0xffff8bd131a8)
0xffff8bd131a8   104  movz x17, #0xa00000000
0xffff8bd131ac   108  sub csp, jssp, #0x10 (16)
0xffff8bd131b0   112  stp x17, cp, [jssp, #-16]!
0xffff8bd131b4   116  add fp, jssp, #0x10 (16)
0xffff8bd131b8   120  ldr x17, pc+24 (addr 0x0000ffff8bd131d0)    ;; lazy deoptimization bailout 0
0xffff8bd131bc   124  add x17, x17, x16
0xffff8bd131c0   128  br x17
0xffff8bd131c4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd131c8   136  d63f03e0       constant
0xffff8bd131cc   140  d503201f       constant
0xffff8bd131d0   144  8bb06000       constant
0xffff8bd131d4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd131b8  runtime entry
0xffff8bd131c4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4409
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff8bd13240     0  mov x2, x1
0xffff8bd13244     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd13308)
0xffff8bd13248     8  mov x3, x0
0xffff8bd1324c    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd13318)
0xffff8bd13250    16  scvtf d0, x2, #32
0xffff8bd13254    20  scvtf d1, x3, #32
0xffff8bd13258    24  fmul d0, d0, d1
0xffff8bd1325c    28  movz x1, #0xe2c0
0xffff8bd13260    32  movk x1, #0x2cb8, lsl #16
0xffff8bd13264    36  ldp x2, x0, [x1]
0xffff8bd13268    40  adds x16, x2, #0x10 (16)
0xffff8bd1326c    44  ccmp x16, x0, #nzCv, lo
0xffff8bd13270    48  b.hi #+0x20 (addr 0xffff8bd13290)
0xffff8bd13274    52  str x16, [x1]
0xffff8bd13278    56  ldr x1, [x26, #120]
0xffff8bd1327c    60  str x1, [x2]
0xffff8bd13280    64  orr x2, x2, #0x1
0xffff8bd13284    68  stur d0, [x2, #7]
0xffff8bd13288    72  mov x0, x2
0xffff8bd1328c    76  ret
0xffff8bd13290    80  sub csp, jssp, #0x10 (16)
0xffff8bd13294    84  stp fp, lr, [jssp, #-16]!
0xffff8bd13298    88  movz fp, #0xa00000000
0xffff8bd1329c    92  sub csp, jssp, #0x8 (8)
0xffff8bd132a0    96  str fp, [jssp, #-8]!
0xffff8bd132a4   100  add fp, jssp, #0x8 (8)
0xffff8bd132a8   104  movz x2, #0x0
0xffff8bd132ac   108  mov x16, lr
0xffff8bd132b0   112  ldr x17, pc+64 (addr 0x0000ffff8bd132f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd132b4   116  blr x17
0xffff8bd132b8   120  ldur cp, [fp, #-8]
0xffff8bd132bc   124  movz x0, #0x0
0xffff8bd132c0   128  movz x1, #0x4b48
0xffff8bd132c4   132  movk x1, #0xe4, lsl #16
0xffff8bd132c8   136  ldr x16, pc+48 (addr 0x0000ffff8bd132f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd132cc   140  blr x16
0xffff8bd132d0   144  str x0, [jssp, #16]
0xffff8bd132d4   148  ldr x16, pc+44 (addr 0x0000ffff8bd13300)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd132d8   152  blr x16
0xffff8bd132dc   156  ldr lr, [jssp, #16]
0xffff8bd132e0   160  ldp xzr, fp, [jssp], #24
0xffff8bd132e4   164  b #-0x60 (addr 0xffff8bd13284)
0xffff8bd132e8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd132ec   172  d63f03e0       constant
0xffff8bd132f0   176  8bd06820       constant
0xffff8bd132f4   180  0000ffff       constant
0xffff8bd132f8   184  8bd06260       constant
0xffff8bd132fc   188  0000ffff       constant
0xffff8bd13300   192  8bd068e0       constant
0xffff8bd13304   196  0000ffff       constant
0xffff8bd13308   200  movz x16, #0x0
0xffff8bd1330c   204  sub csp, jssp, #0x10 (16)
0xffff8bd13310   208  stp fp, lr, [jssp, #-16]!
0xffff8bd13314   212  bl #+0x14 (addr 0xffff8bd13328)
0xffff8bd13318   216  movz x16, #0x8
0xffff8bd1331c   220  sub csp, jssp, #0x10 (16)
0xffff8bd13320   224  stp fp, lr, [jssp, #-16]!
0xffff8bd13324   228  bl #+0x4 (addr 0xffff8bd13328)
0xffff8bd13328   232  movz x17, #0xa00000000
0xffff8bd1332c   236  sub csp, jssp, #0x10 (16)
0xffff8bd13330   240  stp x17, cp, [jssp, #-16]!
0xffff8bd13334   244  add fp, jssp, #0x10 (16)
0xffff8bd13338   248  ldr x17, pc+24 (addr 0x0000ffff8bd13350)    ;; lazy deoptimization bailout 0
0xffff8bd1333c   252  add x17, x17, x16
0xffff8bd13340   256  br x17
0xffff8bd13344   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13348   264  d63f03e0       constant
0xffff8bd1334c   268  d503201f       constant
0xffff8bd13350   272  8bb06000       constant
0xffff8bd13354   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd132d0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd132b0  code target (STUB)  (0xffff8bd06820)
0xffff8bd132c8  code target (STUB)  (0xffff8bd06260)
0xffff8bd132d4  code target (STUB)  (0xffff8bd068e0)
0xffff8bd132e8  constant pool (size 32)
0xffff8bd13338  runtime entry
0xffff8bd13344  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4409
type = NORMAL
name = BinaryOpICStub(MUL:Int32*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff8bd13240     0  mov x2, x1
0xffff8bd13244     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd13308)
0xffff8bd13248     8  mov x3, x0
0xffff8bd1324c    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd13318)
0xffff8bd13250    16  scvtf d0, x2, #32
0xffff8bd13254    20  scvtf d1, x3, #32
0xffff8bd13258    24  fmul d0, d0, d1
0xffff8bd1325c    28  movz x1, #0xe2c0
0xffff8bd13260    32  movk x1, #0x2cb8, lsl #16
0xffff8bd13264    36  ldp x2, x0, [x1]
0xffff8bd13268    40  adds x16, x2, #0x10 (16)
0xffff8bd1326c    44  ccmp x16, x0, #nzCv, lo
0xffff8bd13270    48  b.hi #+0x20 (addr 0xffff8bd13290)
0xffff8bd13274    52  str x16, [x1]
0xffff8bd13278    56  ldr x1, [x26, #120]
0xffff8bd1327c    60  str x1, [x2]
0xffff8bd13280    64  orr x2, x2, #0x1
0xffff8bd13284    68  stur d0, [x2, #7]
0xffff8bd13288    72  mov x0, x2
0xffff8bd1328c    76  ret
0xffff8bd13290    80  sub csp, jssp, #0x10 (16)
0xffff8bd13294    84  stp fp, lr, [jssp, #-16]!
0xffff8bd13298    88  movz fp, #0xa00000000
0xffff8bd1329c    92  sub csp, jssp, #0x8 (8)
0xffff8bd132a0    96  str fp, [jssp, #-8]!
0xffff8bd132a4   100  add fp, jssp, #0x8 (8)
0xffff8bd132a8   104  movz x2, #0x0
0xffff8bd132ac   108  mov x16, lr
0xffff8bd132b0   112  ldr x17, pc+64 (addr 0x0000ffff8bd132f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd132b4   116  blr x17
0xffff8bd132b8   120  ldur cp, [fp, #-8]
0xffff8bd132bc   124  movz x0, #0x0
0xffff8bd132c0   128  movz x1, #0x4b48
0xffff8bd132c4   132  movk x1, #0xe4, lsl #16
0xffff8bd132c8   136  ldr x16, pc+48 (addr 0x0000ffff8bd132f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd132cc   140  blr x16
0xffff8bd132d0   144  str x0, [jssp, #16]
0xffff8bd132d4   148  ldr x16, pc+44 (addr 0x0000ffff8bd13300)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd132d8   152  blr x16
0xffff8bd132dc   156  ldr lr, [jssp, #16]
0xffff8bd132e0   160  ldp xzr, fp, [jssp], #24
0xffff8bd132e4   164  b #-0x60 (addr 0xffff8bd13284)
0xffff8bd132e8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd132ec   172  d63f03e0       constant
0xffff8bd132f0   176  8bd06820       constant
0xffff8bd132f4   180  0000ffff       constant
0xffff8bd132f8   184  8bd06260       constant
0xffff8bd132fc   188  0000ffff       constant
0xffff8bd13300   192  8bd068e0       constant
0xffff8bd13304   196  0000ffff       constant
0xffff8bd13308   200  movz x16, #0x0
0xffff8bd1330c   204  sub csp, jssp, #0x10 (16)
0xffff8bd13310   208  stp fp, lr, [jssp, #-16]!
0xffff8bd13314   212  bl #+0x14 (addr 0xffff8bd13328)
0xffff8bd13318   216  movz x16, #0x8
0xffff8bd1331c   220  sub csp, jssp, #0x10 (16)
0xffff8bd13320   224  stp fp, lr, [jssp, #-16]!
0xffff8bd13324   228  bl #+0x4 (addr 0xffff8bd13328)
0xffff8bd13328   232  movz x17, #0xa00000000
0xffff8bd1332c   236  sub csp, jssp, #0x10 (16)
0xffff8bd13330   240  stp x17, cp, [jssp, #-16]!
0xffff8bd13334   244  add fp, jssp, #0x10 (16)
0xffff8bd13338   248  ldr x17, pc+24 (addr 0x0000ffff8bd13350)    ;; lazy deoptimization bailout 0
0xffff8bd1333c   252  add x17, x17, x16
0xffff8bd13340   256  br x17
0xffff8bd13344   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13348   264  d63f03e0       constant
0xffff8bd1334c   268  d503201f       constant
0xffff8bd13350   272  8bb06000       constant
0xffff8bd13354   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd132d0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd132b0  code target (STUB)  (0xffff8bd06820)
0xffff8bd132c8  code target (STUB)  (0xffff8bd06260)
0xffff8bd132d4  code target (STUB)  (0xffff8bd068e0)
0xffff8bd132e8  constant pool (size 32)
0xffff8bd13338  runtime entry
0xffff8bd13344  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6457
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd133e0     0  mov x2, x1
0xffff8bd133e4     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd134d8)
0xffff8bd133e8     8  tbz w0, #0, #+0x34 (addr 0xffff8bd1341c)
0xffff8bd133ec    12  ldur x16, [x0, #-1]
0xffff8bd133f0    16  ldr x17, [x26, #120]
0xffff8bd133f4    20  cmp x16, x17
0xffff8bd133f8    24  b.ne #+0xc (addr 0xffff8bd13404)
0xffff8bd133fc    28  ldur d0, [x0, #7]
0xffff8bd13400    32  b #+0x20 (addr 0xffff8bd13420)
0xffff8bd13404    36  ldr x16, [x26, #40]
0xffff8bd13408    40  cmp x0, x16
0xffff8bd1340c    44  b.ne #+0xdc (addr 0xffff8bd134e8)
0xffff8bd13410    48  ldr x3, [x26, #928]
0xffff8bd13414    52  ldur d0, [x3, #7]
0xffff8bd13418    56  b #+0x8 (addr 0xffff8bd13420)
0xffff8bd1341c    60  scvtf d0, x0, #32
0xffff8bd13420    64  scvtf d1, x2, #32
0xffff8bd13424    68  fmul d0, d1, d0
0xffff8bd13428    72  movz x1, #0xe2c0
0xffff8bd1342c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd13430    80  ldp x2, x0, [x1]
0xffff8bd13434    84  adds x16, x2, #0x10 (16)
0xffff8bd13438    88  ccmp x16, x0, #nzCv, lo
0xffff8bd1343c    92  b.hi #+0x20 (addr 0xffff8bd1345c)
0xffff8bd13440    96  str x16, [x1]
0xffff8bd13444   100  ldr x1, [x26, #120]
0xffff8bd13448   104  str x1, [x2]
0xffff8bd1344c   108  orr x2, x2, #0x1
0xffff8bd13450   112  stur d0, [x2, #7]
0xffff8bd13454   116  mov x0, x2
0xffff8bd13458   120  ret
0xffff8bd1345c   124  sub csp, jssp, #0x10 (16)
0xffff8bd13460   128  stp fp, lr, [jssp, #-16]!
0xffff8bd13464   132  movz fp, #0xa00000000
0xffff8bd13468   136  sub csp, jssp, #0x8 (8)
0xffff8bd1346c   140  str fp, [jssp, #-8]!
0xffff8bd13470   144  add fp, jssp, #0x8 (8)
0xffff8bd13474   148  movz x2, #0x0
0xffff8bd13478   152  mov x16, lr
0xffff8bd1347c   156  ldr x17, pc+68 (addr 0x0000ffff8bd134c0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd13480   160  blr x17
0xffff8bd13484   164  ldur cp, [fp, #-8]
0xffff8bd13488   168  movz x0, #0x0
0xffff8bd1348c   172  movz x1, #0x4b48
0xffff8bd13490   176  movk x1, #0xe4, lsl #16
0xffff8bd13494   180  ldr x16, pc+52 (addr 0x0000ffff8bd134c8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd13498   184  blr x16
0xffff8bd1349c   188  str x0, [jssp, #16]
0xffff8bd134a0   192  ldr x16, pc+48 (addr 0x0000ffff8bd134d0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd134a4   196  blr x16
0xffff8bd134a8   200  ldr lr, [jssp, #16]
0xffff8bd134ac   204  ldp xzr, fp, [jssp], #24
0xffff8bd134b0   208  b #-0x60 (addr 0xffff8bd13450)
0xffff8bd134b4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd134b8   216  d63f03e0       constant
0xffff8bd134bc   220  d503201f       constant
0xffff8bd134c0   224  8bd06820       constant
0xffff8bd134c4   228  0000ffff       constant
0xffff8bd134c8   232  8bd06260       constant
0xffff8bd134cc   236  0000ffff       constant
0xffff8bd134d0   240  8bd068e0       constant
0xffff8bd134d4   244  0000ffff       constant
0xffff8bd134d8   248  movz x16, #0x0
0xffff8bd134dc   252  sub csp, jssp, #0x10 (16)
0xffff8bd134e0   256  stp fp, lr, [jssp, #-16]!
0xffff8bd134e4   260  bl #+0x14 (addr 0xffff8bd134f8)
0xffff8bd134e8   264  movz x16, #0x8
0xffff8bd134ec   268  sub csp, jssp, #0x10 (16)
0xffff8bd134f0   272  stp fp, lr, [jssp, #-16]!
0xffff8bd134f4   276  bl #+0x4 (addr 0xffff8bd134f8)
0xffff8bd134f8   280  movz x17, #0xa00000000
0xffff8bd134fc   284  sub csp, jssp, #0x10 (16)
0xffff8bd13500   288  stp x17, cp, [jssp, #-16]!
0xffff8bd13504   292  add fp, jssp, #0x10 (16)
0xffff8bd13508   296  ldr x17, pc+24 (addr 0x0000ffff8bd13520)    ;; lazy deoptimization bailout 0
0xffff8bd1350c   300  add x17, x17, x16
0xffff8bd13510   304  br x17
0xffff8bd13514   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13518   312  d63f03e0       constant
0xffff8bd1351c   316  d503201f       constant
0xffff8bd13520   320  8bb06000       constant
0xffff8bd13524   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd1349c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd1347c  code target (STUB)  (0xffff8bd06820)
0xffff8bd13494  code target (STUB)  (0xffff8bd06260)
0xffff8bd134a0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd134b4  constant pool (size 36)
0xffff8bd13508  runtime entry
0xffff8bd13514  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6457
type = NORMAL
name = BinaryOpICStub(MUL:Int32*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd133e0     0  mov x2, x1
0xffff8bd133e4     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd134d8)
0xffff8bd133e8     8  tbz w0, #0, #+0x34 (addr 0xffff8bd1341c)
0xffff8bd133ec    12  ldur x16, [x0, #-1]
0xffff8bd133f0    16  ldr x17, [x26, #120]
0xffff8bd133f4    20  cmp x16, x17
0xffff8bd133f8    24  b.ne #+0xc (addr 0xffff8bd13404)
0xffff8bd133fc    28  ldur d0, [x0, #7]
0xffff8bd13400    32  b #+0x20 (addr 0xffff8bd13420)
0xffff8bd13404    36  ldr x16, [x26, #40]
0xffff8bd13408    40  cmp x0, x16
0xffff8bd1340c    44  b.ne #+0xdc (addr 0xffff8bd134e8)
0xffff8bd13410    48  ldr x3, [x26, #928]
0xffff8bd13414    52  ldur d0, [x3, #7]
0xffff8bd13418    56  b #+0x8 (addr 0xffff8bd13420)
0xffff8bd1341c    60  scvtf d0, x0, #32
0xffff8bd13420    64  scvtf d1, x2, #32
0xffff8bd13424    68  fmul d0, d1, d0
0xffff8bd13428    72  movz x1, #0xe2c0
0xffff8bd1342c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd13430    80  ldp x2, x0, [x1]
0xffff8bd13434    84  adds x16, x2, #0x10 (16)
0xffff8bd13438    88  ccmp x16, x0, #nzCv, lo
0xffff8bd1343c    92  b.hi #+0x20 (addr 0xffff8bd1345c)
0xffff8bd13440    96  str x16, [x1]
0xffff8bd13444   100  ldr x1, [x26, #120]
0xffff8bd13448   104  str x1, [x2]
0xffff8bd1344c   108  orr x2, x2, #0x1
0xffff8bd13450   112  stur d0, [x2, #7]
0xffff8bd13454   116  mov x0, x2
0xffff8bd13458   120  ret
0xffff8bd1345c   124  sub csp, jssp, #0x10 (16)
0xffff8bd13460   128  stp fp, lr, [jssp, #-16]!
0xffff8bd13464   132  movz fp, #0xa00000000
0xffff8bd13468   136  sub csp, jssp, #0x8 (8)
0xffff8bd1346c   140  str fp, [jssp, #-8]!
0xffff8bd13470   144  add fp, jssp, #0x8 (8)
0xffff8bd13474   148  movz x2, #0x0
0xffff8bd13478   152  mov x16, lr
0xffff8bd1347c   156  ldr x17, pc+68 (addr 0x0000ffff8bd134c0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd13480   160  blr x17
0xffff8bd13484   164  ldur cp, [fp, #-8]
0xffff8bd13488   168  movz x0, #0x0
0xffff8bd1348c   172  movz x1, #0x4b48
0xffff8bd13490   176  movk x1, #0xe4, lsl #16
0xffff8bd13494   180  ldr x16, pc+52 (addr 0x0000ffff8bd134c8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd13498   184  blr x16
0xffff8bd1349c   188  str x0, [jssp, #16]
0xffff8bd134a0   192  ldr x16, pc+48 (addr 0x0000ffff8bd134d0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd134a4   196  blr x16
0xffff8bd134a8   200  ldr lr, [jssp, #16]
0xffff8bd134ac   204  ldp xzr, fp, [jssp], #24
0xffff8bd134b0   208  b #-0x60 (addr 0xffff8bd13450)
0xffff8bd134b4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd134b8   216  d63f03e0       constant
0xffff8bd134bc   220  d503201f       constant
0xffff8bd134c0   224  8bd06820       constant
0xffff8bd134c4   228  0000ffff       constant
0xffff8bd134c8   232  8bd06260       constant
0xffff8bd134cc   236  0000ffff       constant
0xffff8bd134d0   240  8bd068e0       constant
0xffff8bd134d4   244  0000ffff       constant
0xffff8bd134d8   248  movz x16, #0x0
0xffff8bd134dc   252  sub csp, jssp, #0x10 (16)
0xffff8bd134e0   256  stp fp, lr, [jssp, #-16]!
0xffff8bd134e4   260  bl #+0x14 (addr 0xffff8bd134f8)
0xffff8bd134e8   264  movz x16, #0x8
0xffff8bd134ec   268  sub csp, jssp, #0x10 (16)
0xffff8bd134f0   272  stp fp, lr, [jssp, #-16]!
0xffff8bd134f4   276  bl #+0x4 (addr 0xffff8bd134f8)
0xffff8bd134f8   280  movz x17, #0xa00000000
0xffff8bd134fc   284  sub csp, jssp, #0x10 (16)
0xffff8bd13500   288  stp x17, cp, [jssp, #-16]!
0xffff8bd13504   292  add fp, jssp, #0x10 (16)
0xffff8bd13508   296  ldr x17, pc+24 (addr 0x0000ffff8bd13520)    ;; lazy deoptimization bailout 0
0xffff8bd1350c   300  add x17, x17, x16
0xffff8bd13510   304  br x17
0xffff8bd13514   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13518   312  d63f03e0       constant
0xffff8bd1351c   316  d503201f       constant
0xffff8bd13520   320  8bb06000       constant
0xffff8bd13524   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd1349c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd1347c  code target (STUB)  (0xffff8bd06820)
0xffff8bd13494  code target (STUB)  (0xffff8bd06260)
0xffff8bd134a0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd134b4  constant pool (size 36)
0xffff8bd13508  runtime entry
0xffff8bd13514  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2345
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bd135a0     0  mov x2, x1
0xffff8bd135a4     4  tbnz w2, #0, #+0x34 (addr 0xffff8bd135d8)
0xffff8bd135a8     8  mov x3, x0
0xffff8bd135ac    12  tbnz w3, #0, #+0x3c (addr 0xffff8bd135e8)
0xffff8bd135b0    16  cmp x3, #0x0 (0)
0xffff8bd135b4    20  ccmp x2, #0, #nZcv, ne
0xffff8bd135b8    24  ccmn x3, x2, #nzcv, eq
0xffff8bd135bc    28  b.mi #+0x3c (addr 0xffff8bd135f8)
0xffff8bd135c0    32  smulh x2, x3, x2
0xffff8bd135c4    36  cmp x2, w2, sxtw
0xffff8bd135c8    40  lsl x2, x2, #32
0xffff8bd135cc    44  b.ne #+0x2c (addr 0xffff8bd135f8)
0xffff8bd135d0    48  mov x0, x2
0xffff8bd135d4    52  ret
0xffff8bd135d8    56  movz x16, #0x0
0xffff8bd135dc    60  sub csp, jssp, #0x10 (16)
0xffff8bd135e0    64  stp fp, lr, [jssp, #-16]!
0xffff8bd135e4    68  bl #+0x24 (addr 0xffff8bd13608)
0xffff8bd135e8    72  movz x16, #0x8
0xffff8bd135ec    76  sub csp, jssp, #0x10 (16)
0xffff8bd135f0    80  stp fp, lr, [jssp, #-16]!
0xffff8bd135f4    84  bl #+0x14 (addr 0xffff8bd13608)
0xffff8bd135f8    88  movz x16, #0x10
0xffff8bd135fc    92  sub csp, jssp, #0x10 (16)
0xffff8bd13600    96  stp fp, lr, [jssp, #-16]!
0xffff8bd13604   100  bl #+0x4 (addr 0xffff8bd13608)
0xffff8bd13608   104  movz x17, #0xa00000000
0xffff8bd1360c   108  sub csp, jssp, #0x10 (16)
0xffff8bd13610   112  stp x17, cp, [jssp, #-16]!
0xffff8bd13614   116  add fp, jssp, #0x10 (16)
0xffff8bd13618   120  ldr x17, pc+24 (addr 0x0000ffff8bd13630)    ;; lazy deoptimization bailout 0
0xffff8bd1361c   124  add x17, x17, x16
0xffff8bd13620   128  br x17
0xffff8bd13624   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13628   136  d63f03e0       constant
0xffff8bd1362c   140  d503201f       constant
0xffff8bd13630   144  8bb06000       constant
0xffff8bd13634   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd13618  runtime entry
0xffff8bd13624  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2345
type = NORMAL
name = BinaryOpICStub(MUL:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 160)
0xffff8bd135a0     0  mov x2, x1
0xffff8bd135a4     4  tbnz w2, #0, #+0x34 (addr 0xffff8bd135d8)
0xffff8bd135a8     8  mov x3, x0
0xffff8bd135ac    12  tbnz w3, #0, #+0x3c (addr 0xffff8bd135e8)
0xffff8bd135b0    16  cmp x3, #0x0 (0)
0xffff8bd135b4    20  ccmp x2, #0, #nZcv, ne
0xffff8bd135b8    24  ccmn x3, x2, #nzcv, eq
0xffff8bd135bc    28  b.mi #+0x3c (addr 0xffff8bd135f8)
0xffff8bd135c0    32  smulh x2, x3, x2
0xffff8bd135c4    36  cmp x2, w2, sxtw
0xffff8bd135c8    40  lsl x2, x2, #32
0xffff8bd135cc    44  b.ne #+0x2c (addr 0xffff8bd135f8)
0xffff8bd135d0    48  mov x0, x2
0xffff8bd135d4    52  ret
0xffff8bd135d8    56  movz x16, #0x0
0xffff8bd135dc    60  sub csp, jssp, #0x10 (16)
0xffff8bd135e0    64  stp fp, lr, [jssp, #-16]!
0xffff8bd135e4    68  bl #+0x24 (addr 0xffff8bd13608)
0xffff8bd135e8    72  movz x16, #0x8
0xffff8bd135ec    76  sub csp, jssp, #0x10 (16)
0xffff8bd135f0    80  stp fp, lr, [jssp, #-16]!
0xffff8bd135f4    84  bl #+0x14 (addr 0xffff8bd13608)
0xffff8bd135f8    88  movz x16, #0x10
0xffff8bd135fc    92  sub csp, jssp, #0x10 (16)
0xffff8bd13600    96  stp fp, lr, [jssp, #-16]!
0xffff8bd13604   100  bl #+0x4 (addr 0xffff8bd13608)
0xffff8bd13608   104  movz x17, #0xa00000000
0xffff8bd1360c   108  sub csp, jssp, #0x10 (16)
0xffff8bd13610   112  stp x17, cp, [jssp, #-16]!
0xffff8bd13614   116  add fp, jssp, #0x10 (16)
0xffff8bd13618   120  ldr x17, pc+24 (addr 0x0000ffff8bd13630)    ;; lazy deoptimization bailout 0
0xffff8bd1361c   124  add x17, x17, x16
0xffff8bd13620   128  br x17
0xffff8bd13624   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13628   136  d63f03e0       constant
0xffff8bd1362c   140  d503201f       constant
0xffff8bd13630   144  8bb06000       constant
0xffff8bd13634   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd13618  runtime entry
0xffff8bd13624  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2361
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff8bd136a0     0  mov x2, x1
0xffff8bd136a4     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd13768)
0xffff8bd136a8     8  mov x3, x0
0xffff8bd136ac    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd13778)
0xffff8bd136b0    16  scvtf d0, x2, #32
0xffff8bd136b4    20  scvtf d1, x3, #32
0xffff8bd136b8    24  fmul d0, d0, d1
0xffff8bd136bc    28  movz x1, #0xe2c0
0xffff8bd136c0    32  movk x1, #0x2cb8, lsl #16
0xffff8bd136c4    36  ldp x2, x0, [x1]
0xffff8bd136c8    40  adds x16, x2, #0x10 (16)
0xffff8bd136cc    44  ccmp x16, x0, #nzCv, lo
0xffff8bd136d0    48  b.hi #+0x20 (addr 0xffff8bd136f0)
0xffff8bd136d4    52  str x16, [x1]
0xffff8bd136d8    56  ldr x1, [x26, #120]
0xffff8bd136dc    60  str x1, [x2]
0xffff8bd136e0    64  orr x2, x2, #0x1
0xffff8bd136e4    68  stur d0, [x2, #7]
0xffff8bd136e8    72  mov x0, x2
0xffff8bd136ec    76  ret
0xffff8bd136f0    80  sub csp, jssp, #0x10 (16)
0xffff8bd136f4    84  stp fp, lr, [jssp, #-16]!
0xffff8bd136f8    88  movz fp, #0xa00000000
0xffff8bd136fc    92  sub csp, jssp, #0x8 (8)
0xffff8bd13700    96  str fp, [jssp, #-8]!
0xffff8bd13704   100  add fp, jssp, #0x8 (8)
0xffff8bd13708   104  movz x2, #0x0
0xffff8bd1370c   108  mov x16, lr
0xffff8bd13710   112  ldr x17, pc+64 (addr 0x0000ffff8bd13750)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd13714   116  blr x17
0xffff8bd13718   120  ldur cp, [fp, #-8]
0xffff8bd1371c   124  movz x0, #0x0
0xffff8bd13720   128  movz x1, #0x4b48
0xffff8bd13724   132  movk x1, #0xe4, lsl #16
0xffff8bd13728   136  ldr x16, pc+48 (addr 0x0000ffff8bd13758)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd1372c   140  blr x16
0xffff8bd13730   144  str x0, [jssp, #16]
0xffff8bd13734   148  ldr x16, pc+44 (addr 0x0000ffff8bd13760)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd13738   152  blr x16
0xffff8bd1373c   156  ldr lr, [jssp, #16]
0xffff8bd13740   160  ldp xzr, fp, [jssp], #24
0xffff8bd13744   164  b #-0x60 (addr 0xffff8bd136e4)
0xffff8bd13748   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd1374c   172  d63f03e0       constant
0xffff8bd13750   176  8bd06820       constant
0xffff8bd13754   180  0000ffff       constant
0xffff8bd13758   184  8bd06260       constant
0xffff8bd1375c   188  0000ffff       constant
0xffff8bd13760   192  8bd068e0       constant
0xffff8bd13764   196  0000ffff       constant
0xffff8bd13768   200  movz x16, #0x0
0xffff8bd1376c   204  sub csp, jssp, #0x10 (16)
0xffff8bd13770   208  stp fp, lr, [jssp, #-16]!
0xffff8bd13774   212  bl #+0x14 (addr 0xffff8bd13788)
0xffff8bd13778   216  movz x16, #0x8
0xffff8bd1377c   220  sub csp, jssp, #0x10 (16)
0xffff8bd13780   224  stp fp, lr, [jssp, #-16]!
0xffff8bd13784   228  bl #+0x4 (addr 0xffff8bd13788)
0xffff8bd13788   232  movz x17, #0xa00000000
0xffff8bd1378c   236  sub csp, jssp, #0x10 (16)
0xffff8bd13790   240  stp x17, cp, [jssp, #-16]!
0xffff8bd13794   244  add fp, jssp, #0x10 (16)
0xffff8bd13798   248  ldr x17, pc+24 (addr 0x0000ffff8bd137b0)    ;; lazy deoptimization bailout 0
0xffff8bd1379c   252  add x17, x17, x16
0xffff8bd137a0   256  br x17
0xffff8bd137a4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd137a8   264  d63f03e0       constant
0xffff8bd137ac   268  d503201f       constant
0xffff8bd137b0   272  8bb06000       constant
0xffff8bd137b4   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd13730   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd13710  code target (STUB)  (0xffff8bd06820)
0xffff8bd13728  code target (STUB)  (0xffff8bd06260)
0xffff8bd13734  code target (STUB)  (0xffff8bd068e0)
0xffff8bd13748  constant pool (size 32)
0xffff8bd13798  runtime entry
0xffff8bd137a4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2361
type = NORMAL
name = BinaryOpICStub(MUL:Int32*Smi->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff8bd136a0     0  mov x2, x1
0xffff8bd136a4     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd13768)
0xffff8bd136a8     8  mov x3, x0
0xffff8bd136ac    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd13778)
0xffff8bd136b0    16  scvtf d0, x2, #32
0xffff8bd136b4    20  scvtf d1, x3, #32
0xffff8bd136b8    24  fmul d0, d0, d1
0xffff8bd136bc    28  movz x1, #0xe2c0
0xffff8bd136c0    32  movk x1, #0x2cb8, lsl #16
0xffff8bd136c4    36  ldp x2, x0, [x1]
0xffff8bd136c8    40  adds x16, x2, #0x10 (16)
0xffff8bd136cc    44  ccmp x16, x0, #nzCv, lo
0xffff8bd136d0    48  b.hi #+0x20 (addr 0xffff8bd136f0)
0xffff8bd136d4    52  str x16, [x1]
0xffff8bd136d8    56  ldr x1, [x26, #120]
0xffff8bd136dc    60  str x1, [x2]
0xffff8bd136e0    64  orr x2, x2, #0x1
0xffff8bd136e4    68  stur d0, [x2, #7]
0xffff8bd136e8    72  mov x0, x2
0xffff8bd136ec    76  ret
0xffff8bd136f0    80  sub csp, jssp, #0x10 (16)
0xffff8bd136f4    84  stp fp, lr, [jssp, #-16]!
0xffff8bd136f8    88  movz fp, #0xa00000000
0xffff8bd136fc    92  sub csp, jssp, #0x8 (8)
0xffff8bd13700    96  str fp, [jssp, #-8]!
0xffff8bd13704   100  add fp, jssp, #0x8 (8)
0xffff8bd13708   104  movz x2, #0x0
0xffff8bd1370c   108  mov x16, lr
0xffff8bd13710   112  ldr x17, pc+64 (addr 0x0000ffff8bd13750)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd13714   116  blr x17
0xffff8bd13718   120  ldur cp, [fp, #-8]
0xffff8bd1371c   124  movz x0, #0x0
0xffff8bd13720   128  movz x1, #0x4b48
0xffff8bd13724   132  movk x1, #0xe4, lsl #16
0xffff8bd13728   136  ldr x16, pc+48 (addr 0x0000ffff8bd13758)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd1372c   140  blr x16
0xffff8bd13730   144  str x0, [jssp, #16]
0xffff8bd13734   148  ldr x16, pc+44 (addr 0x0000ffff8bd13760)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd13738   152  blr x16
0xffff8bd1373c   156  ldr lr, [jssp, #16]
0xffff8bd13740   160  ldp xzr, fp, [jssp], #24
0xffff8bd13744   164  b #-0x60 (addr 0xffff8bd136e4)
0xffff8bd13748   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd1374c   172  d63f03e0       constant
0xffff8bd13750   176  8bd06820       constant
0xffff8bd13754   180  0000ffff       constant
0xffff8bd13758   184  8bd06260       constant
0xffff8bd1375c   188  0000ffff       constant
0xffff8bd13760   192  8bd068e0       constant
0xffff8bd13764   196  0000ffff       constant
0xffff8bd13768   200  movz x16, #0x0
0xffff8bd1376c   204  sub csp, jssp, #0x10 (16)
0xffff8bd13770   208  stp fp, lr, [jssp, #-16]!
0xffff8bd13774   212  bl #+0x14 (addr 0xffff8bd13788)
0xffff8bd13778   216  movz x16, #0x8
0xffff8bd1377c   220  sub csp, jssp, #0x10 (16)
0xffff8bd13780   224  stp fp, lr, [jssp, #-16]!
0xffff8bd13784   228  bl #+0x4 (addr 0xffff8bd13788)
0xffff8bd13788   232  movz x17, #0xa00000000
0xffff8bd1378c   236  sub csp, jssp, #0x10 (16)
0xffff8bd13790   240  stp x17, cp, [jssp, #-16]!
0xffff8bd13794   244  add fp, jssp, #0x10 (16)
0xffff8bd13798   248  ldr x17, pc+24 (addr 0x0000ffff8bd137b0)    ;; lazy deoptimization bailout 0
0xffff8bd1379c   252  add x17, x17, x16
0xffff8bd137a0   256  br x17
0xffff8bd137a4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd137a8   264  d63f03e0       constant
0xffff8bd137ac   268  d503201f       constant
0xffff8bd137b0   272  8bb06000       constant
0xffff8bd137b4   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd13730   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd13710  code target (STUB)  (0xffff8bd06820)
0xffff8bd13728  code target (STUB)  (0xffff8bd06260)
0xffff8bd13734  code target (STUB)  (0xffff8bd068e0)
0xffff8bd13748  constant pool (size 32)
0xffff8bd13798  runtime entry
0xffff8bd137a4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4537
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd13840     0  mov x2, x0
0xffff8bd13844     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd13938)
0xffff8bd13848     8  tbz w1, #0, #+0x34 (addr 0xffff8bd1387c)
0xffff8bd1384c    12  ldur x16, [x1, #-1]
0xffff8bd13850    16  ldr x17, [x26, #120]
0xffff8bd13854    20  cmp x16, x17
0xffff8bd13858    24  b.ne #+0xc (addr 0xffff8bd13864)
0xffff8bd1385c    28  ldur d0, [x1, #7]
0xffff8bd13860    32  b #+0x20 (addr 0xffff8bd13880)
0xffff8bd13864    36  ldr x16, [x26, #40]
0xffff8bd13868    40  cmp x1, x16
0xffff8bd1386c    44  b.ne #+0xdc (addr 0xffff8bd13948)
0xffff8bd13870    48  ldr x3, [x26, #928]
0xffff8bd13874    52  ldur d0, [x3, #7]
0xffff8bd13878    56  b #+0x8 (addr 0xffff8bd13880)
0xffff8bd1387c    60  scvtf d0, x1, #32
0xffff8bd13880    64  scvtf d1, x2, #32
0xffff8bd13884    68  fmul d0, d0, d1
0xffff8bd13888    72  movz x1, #0xe2c0
0xffff8bd1388c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd13890    80  ldp x2, x0, [x1]
0xffff8bd13894    84  adds x16, x2, #0x10 (16)
0xffff8bd13898    88  ccmp x16, x0, #nzCv, lo
0xffff8bd1389c    92  b.hi #+0x20 (addr 0xffff8bd138bc)
0xffff8bd138a0    96  str x16, [x1]
0xffff8bd138a4   100  ldr x1, [x26, #120]
0xffff8bd138a8   104  str x1, [x2]
0xffff8bd138ac   108  orr x2, x2, #0x1
0xffff8bd138b0   112  stur d0, [x2, #7]
0xffff8bd138b4   116  mov x0, x2
0xffff8bd138b8   120  ret
0xffff8bd138bc   124  sub csp, jssp, #0x10 (16)
0xffff8bd138c0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd138c4   132  movz fp, #0xa00000000
0xffff8bd138c8   136  sub csp, jssp, #0x8 (8)
0xffff8bd138cc   140  str fp, [jssp, #-8]!
0xffff8bd138d0   144  add fp, jssp, #0x8 (8)
0xffff8bd138d4   148  movz x2, #0x0
0xffff8bd138d8   152  mov x16, lr
0xffff8bd138dc   156  ldr x17, pc+68 (addr 0x0000ffff8bd13920)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd138e0   160  blr x17
0xffff8bd138e4   164  ldur cp, [fp, #-8]
0xffff8bd138e8   168  movz x0, #0x0
0xffff8bd138ec   172  movz x1, #0x4b48
0xffff8bd138f0   176  movk x1, #0xe4, lsl #16
0xffff8bd138f4   180  ldr x16, pc+52 (addr 0x0000ffff8bd13928)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd138f8   184  blr x16
0xffff8bd138fc   188  str x0, [jssp, #16]
0xffff8bd13900   192  ldr x16, pc+48 (addr 0x0000ffff8bd13930)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd13904   196  blr x16
0xffff8bd13908   200  ldr lr, [jssp, #16]
0xffff8bd1390c   204  ldp xzr, fp, [jssp], #24
0xffff8bd13910   208  b #-0x60 (addr 0xffff8bd138b0)
0xffff8bd13914   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd13918   216  d63f03e0       constant
0xffff8bd1391c   220  d503201f       constant
0xffff8bd13920   224  8bd06820       constant
0xffff8bd13924   228  0000ffff       constant
0xffff8bd13928   232  8bd06260       constant
0xffff8bd1392c   236  0000ffff       constant
0xffff8bd13930   240  8bd068e0       constant
0xffff8bd13934   244  0000ffff       constant
0xffff8bd13938   248  movz x16, #0x0
0xffff8bd1393c   252  sub csp, jssp, #0x10 (16)
0xffff8bd13940   256  stp fp, lr, [jssp, #-16]!
0xffff8bd13944   260  bl #+0x14 (addr 0xffff8bd13958)
0xffff8bd13948   264  movz x16, #0x8
0xffff8bd1394c   268  sub csp, jssp, #0x10 (16)
0xffff8bd13950   272  stp fp, lr, [jssp, #-16]!
0xffff8bd13954   276  bl #+0x4 (addr 0xffff8bd13958)
0xffff8bd13958   280  movz x17, #0xa00000000
0xffff8bd1395c   284  sub csp, jssp, #0x10 (16)
0xffff8bd13960   288  stp x17, cp, [jssp, #-16]!
0xffff8bd13964   292  add fp, jssp, #0x10 (16)
0xffff8bd13968   296  ldr x17, pc+24 (addr 0x0000ffff8bd13980)    ;; lazy deoptimization bailout 0
0xffff8bd1396c   300  add x17, x17, x16
0xffff8bd13970   304  br x17
0xffff8bd13974   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13978   312  d63f03e0       constant
0xffff8bd1397c   316  d503201f       constant
0xffff8bd13980   320  8bb06000       constant
0xffff8bd13984   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd138fc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd138dc  code target (STUB)  (0xffff8bd06820)
0xffff8bd138f4  code target (STUB)  (0xffff8bd06260)
0xffff8bd13900  code target (STUB)  (0xffff8bd068e0)
0xffff8bd13914  constant pool (size 36)
0xffff8bd13968  runtime entry
0xffff8bd13974  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4537
type = NORMAL
name = BinaryOpICStub(MUL:Number*Int32->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd13840     0  mov x2, x0
0xffff8bd13844     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd13938)
0xffff8bd13848     8  tbz w1, #0, #+0x34 (addr 0xffff8bd1387c)
0xffff8bd1384c    12  ldur x16, [x1, #-1]
0xffff8bd13850    16  ldr x17, [x26, #120]
0xffff8bd13854    20  cmp x16, x17
0xffff8bd13858    24  b.ne #+0xc (addr 0xffff8bd13864)
0xffff8bd1385c    28  ldur d0, [x1, #7]
0xffff8bd13860    32  b #+0x20 (addr 0xffff8bd13880)
0xffff8bd13864    36  ldr x16, [x26, #40]
0xffff8bd13868    40  cmp x1, x16
0xffff8bd1386c    44  b.ne #+0xdc (addr 0xffff8bd13948)
0xffff8bd13870    48  ldr x3, [x26, #928]
0xffff8bd13874    52  ldur d0, [x3, #7]
0xffff8bd13878    56  b #+0x8 (addr 0xffff8bd13880)
0xffff8bd1387c    60  scvtf d0, x1, #32
0xffff8bd13880    64  scvtf d1, x2, #32
0xffff8bd13884    68  fmul d0, d0, d1
0xffff8bd13888    72  movz x1, #0xe2c0
0xffff8bd1388c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd13890    80  ldp x2, x0, [x1]
0xffff8bd13894    84  adds x16, x2, #0x10 (16)
0xffff8bd13898    88  ccmp x16, x0, #nzCv, lo
0xffff8bd1389c    92  b.hi #+0x20 (addr 0xffff8bd138bc)
0xffff8bd138a0    96  str x16, [x1]
0xffff8bd138a4   100  ldr x1, [x26, #120]
0xffff8bd138a8   104  str x1, [x2]
0xffff8bd138ac   108  orr x2, x2, #0x1
0xffff8bd138b0   112  stur d0, [x2, #7]
0xffff8bd138b4   116  mov x0, x2
0xffff8bd138b8   120  ret
0xffff8bd138bc   124  sub csp, jssp, #0x10 (16)
0xffff8bd138c0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd138c4   132  movz fp, #0xa00000000
0xffff8bd138c8   136  sub csp, jssp, #0x8 (8)
0xffff8bd138cc   140  str fp, [jssp, #-8]!
0xffff8bd138d0   144  add fp, jssp, #0x8 (8)
0xffff8bd138d4   148  movz x2, #0x0
0xffff8bd138d8   152  mov x16, lr
0xffff8bd138dc   156  ldr x17, pc+68 (addr 0x0000ffff8bd13920)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd138e0   160  blr x17
0xffff8bd138e4   164  ldur cp, [fp, #-8]
0xffff8bd138e8   168  movz x0, #0x0
0xffff8bd138ec   172  movz x1, #0x4b48
0xffff8bd138f0   176  movk x1, #0xe4, lsl #16
0xffff8bd138f4   180  ldr x16, pc+52 (addr 0x0000ffff8bd13928)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd138f8   184  blr x16
0xffff8bd138fc   188  str x0, [jssp, #16]
0xffff8bd13900   192  ldr x16, pc+48 (addr 0x0000ffff8bd13930)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd13904   196  blr x16
0xffff8bd13908   200  ldr lr, [jssp, #16]
0xffff8bd1390c   204  ldp xzr, fp, [jssp], #24
0xffff8bd13910   208  b #-0x60 (addr 0xffff8bd138b0)
0xffff8bd13914   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd13918   216  d63f03e0       constant
0xffff8bd1391c   220  d503201f       constant
0xffff8bd13920   224  8bd06820       constant
0xffff8bd13924   228  0000ffff       constant
0xffff8bd13928   232  8bd06260       constant
0xffff8bd1392c   236  0000ffff       constant
0xffff8bd13930   240  8bd068e0       constant
0xffff8bd13934   244  0000ffff       constant
0xffff8bd13938   248  movz x16, #0x0
0xffff8bd1393c   252  sub csp, jssp, #0x10 (16)
0xffff8bd13940   256  stp fp, lr, [jssp, #-16]!
0xffff8bd13944   260  bl #+0x14 (addr 0xffff8bd13958)
0xffff8bd13948   264  movz x16, #0x8
0xffff8bd1394c   268  sub csp, jssp, #0x10 (16)
0xffff8bd13950   272  stp fp, lr, [jssp, #-16]!
0xffff8bd13954   276  bl #+0x4 (addr 0xffff8bd13958)
0xffff8bd13958   280  movz x17, #0xa00000000
0xffff8bd1395c   284  sub csp, jssp, #0x10 (16)
0xffff8bd13960   288  stp x17, cp, [jssp, #-16]!
0xffff8bd13964   292  add fp, jssp, #0x10 (16)
0xffff8bd13968   296  ldr x17, pc+24 (addr 0x0000ffff8bd13980)    ;; lazy deoptimization bailout 0
0xffff8bd1396c   300  add x17, x17, x16
0xffff8bd13970   304  br x17
0xffff8bd13974   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13978   312  d63f03e0       constant
0xffff8bd1397c   316  d503201f       constant
0xffff8bd13980   320  8bb06000       constant
0xffff8bd13984   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd138fc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd138dc  code target (STUB)  (0xffff8bd06820)
0xffff8bd138f4  code target (STUB)  (0xffff8bd06260)
0xffff8bd13900  code target (STUB)  (0xffff8bd068e0)
0xffff8bd13914  constant pool (size 36)
0xffff8bd13968  runtime entry
0xffff8bd13974  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6585
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 389)
0xffff8bd13a00     0  tbz w1, #0, #+0x34 (addr 0xffff8bd13a34)
0xffff8bd13a04     4  ldur x16, [x1, #-1]
0xffff8bd13a08     8  ldr x17, [x26, #120]
0xffff8bd13a0c    12  cmp x16, x17
0xffff8bd13a10    16  b.ne #+0xc (addr 0xffff8bd13a1c)
0xffff8bd13a14    20  ldur d0, [x1, #7]
0xffff8bd13a18    24  b #+0x20 (addr 0xffff8bd13a38)
0xffff8bd13a1c    28  ldr x16, [x26, #40]
0xffff8bd13a20    32  cmp x1, x16
0xffff8bd13a24    36  b.ne #+0xfc (addr 0xffff8bd13b20)
0xffff8bd13a28    40  ldr x2, [x26, #928]
0xffff8bd13a2c    44  ldur d0, [x2, #7]
0xffff8bd13a30    48  b #+0x8 (addr 0xffff8bd13a38)
0xffff8bd13a34    52  scvtf d0, x1, #32
0xffff8bd13a38    56  tbz w0, #0, #+0x34 (addr 0xffff8bd13a6c)
0xffff8bd13a3c    60  ldur x16, [x0, #-1]
0xffff8bd13a40    64  ldr x17, [x26, #120]
0xffff8bd13a44    68  cmp x16, x17
0xffff8bd13a48    72  b.ne #+0xc (addr 0xffff8bd13a54)
0xffff8bd13a4c    76  ldur d1, [x0, #7]
0xffff8bd13a50    80  b #+0x20 (addr 0xffff8bd13a70)
0xffff8bd13a54    84  ldr x16, [x26, #40]
0xffff8bd13a58    88  cmp x0, x16
0xffff8bd13a5c    92  b.ne #+0xd4 (addr 0xffff8bd13b30)
0xffff8bd13a60    96  ldr x2, [x26, #928]
0xffff8bd13a64   100  ldur d1, [x2, #7]
0xffff8bd13a68   104  b #+0x8 (addr 0xffff8bd13a70)
0xffff8bd13a6c   108  scvtf d1, x0, #32
0xffff8bd13a70   112  fmul d0, d0, d1
0xffff8bd13a74   116  movz x1, #0xe2c0
0xffff8bd13a78   120  movk x1, #0x2cb8, lsl #16
0xffff8bd13a7c   124  ldp x2, x0, [x1]
0xffff8bd13a80   128  adds x16, x2, #0x10 (16)
0xffff8bd13a84   132  ccmp x16, x0, #nzCv, lo
0xffff8bd13a88   136  b.hi #+0x20 (addr 0xffff8bd13aa8)
0xffff8bd13a8c   140  str x16, [x1]
0xffff8bd13a90   144  ldr x1, [x26, #120]
0xffff8bd13a94   148  str x1, [x2]
0xffff8bd13a98   152  orr x2, x2, #0x1
0xffff8bd13a9c   156  stur d0, [x2, #7]
0xffff8bd13aa0   160  mov x0, x2
0xffff8bd13aa4   164  ret
0xffff8bd13aa8   168  sub csp, jssp, #0x10 (16)
0xffff8bd13aac   172  stp fp, lr, [jssp, #-16]!
0xffff8bd13ab0   176  movz fp, #0xa00000000
0xffff8bd13ab4   180  sub csp, jssp, #0x8 (8)
0xffff8bd13ab8   184  str fp, [jssp, #-8]!
0xffff8bd13abc   188  add fp, jssp, #0x8 (8)
0xffff8bd13ac0   192  movz x2, #0x0
0xffff8bd13ac4   196  mov x16, lr
0xffff8bd13ac8   200  ldr x17, pc+64 (addr 0x0000ffff8bd13b08)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd13acc   204  blr x17
0xffff8bd13ad0   208  ldur cp, [fp, #-8]
0xffff8bd13ad4   212  movz x0, #0x0
0xffff8bd13ad8   216  movz x1, #0x4b48
0xffff8bd13adc   220  movk x1, #0xe4, lsl #16
0xffff8bd13ae0   224  ldr x16, pc+48 (addr 0x0000ffff8bd13b10)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd13ae4   228  blr x16
0xffff8bd13ae8   232  str x0, [jssp, #16]
0xffff8bd13aec   236  ldr x16, pc+44 (addr 0x0000ffff8bd13b18)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd13af0   240  blr x16
0xffff8bd13af4   244  ldr lr, [jssp, #16]
0xffff8bd13af8   248  ldp xzr, fp, [jssp], #24
0xffff8bd13afc   252  b #-0x60 (addr 0xffff8bd13a9c)
0xffff8bd13b00   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd13b04   260  d63f03e0       constant
0xffff8bd13b08   264  8bd06820       constant
0xffff8bd13b0c   268  0000ffff       constant
0xffff8bd13b10   272  8bd06260       constant
0xffff8bd13b14   276  0000ffff       constant
0xffff8bd13b18   280  8bd068e0       constant
0xffff8bd13b1c   284  0000ffff       constant
0xffff8bd13b20   288  movz x16, #0x0
0xffff8bd13b24   292  sub csp, jssp, #0x10 (16)
0xffff8bd13b28   296  stp fp, lr, [jssp, #-16]!
0xffff8bd13b2c   300  bl #+0x14 (addr 0xffff8bd13b40)
0xffff8bd13b30   304  movz x16, #0x8
0xffff8bd13b34   308  sub csp, jssp, #0x10 (16)
0xffff8bd13b38   312  stp fp, lr, [jssp, #-16]!
0xffff8bd13b3c   316  bl #+0x4 (addr 0xffff8bd13b40)
0xffff8bd13b40   320  movz x17, #0xa00000000
0xffff8bd13b44   324  sub csp, jssp, #0x10 (16)
0xffff8bd13b48   328  stp x17, cp, [jssp, #-16]!
0xffff8bd13b4c   332  add fp, jssp, #0x10 (16)
0xffff8bd13b50   336  ldr x17, pc+24 (addr 0x0000ffff8bd13b68)    ;; lazy deoptimization bailout 0
0xffff8bd13b54   340  add x17, x17, x16
0xffff8bd13b58   344  br x17
0xffff8bd13b5c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13b60   352  d63f03e0       constant
0xffff8bd13b64   356  d503201f       constant
0xffff8bd13b68   360  8bb06000       constant
0xffff8bd13b6c   364  0000ffff       constant


Safepoints (size = 21)
0xffff8bd13ae8   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd13ac8  code target (STUB)  (0xffff8bd06820)
0xffff8bd13ae0  code target (STUB)  (0xffff8bd06260)
0xffff8bd13aec  code target (STUB)  (0xffff8bd068e0)
0xffff8bd13b00  constant pool (size 32)
0xffff8bd13b50  runtime entry
0xffff8bd13b5c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6585
type = NORMAL
name = BinaryOpICStub(MUL:Number*Number->Number)
compiler = crankshaft
Instructions (size = 389)
0xffff8bd13a00     0  tbz w1, #0, #+0x34 (addr 0xffff8bd13a34)
0xffff8bd13a04     4  ldur x16, [x1, #-1]
0xffff8bd13a08     8  ldr x17, [x26, #120]
0xffff8bd13a0c    12  cmp x16, x17
0xffff8bd13a10    16  b.ne #+0xc (addr 0xffff8bd13a1c)
0xffff8bd13a14    20  ldur d0, [x1, #7]
0xffff8bd13a18    24  b #+0x20 (addr 0xffff8bd13a38)
0xffff8bd13a1c    28  ldr x16, [x26, #40]
0xffff8bd13a20    32  cmp x1, x16
0xffff8bd13a24    36  b.ne #+0xfc (addr 0xffff8bd13b20)
0xffff8bd13a28    40  ldr x2, [x26, #928]
0xffff8bd13a2c    44  ldur d0, [x2, #7]
0xffff8bd13a30    48  b #+0x8 (addr 0xffff8bd13a38)
0xffff8bd13a34    52  scvtf d0, x1, #32
0xffff8bd13a38    56  tbz w0, #0, #+0x34 (addr 0xffff8bd13a6c)
0xffff8bd13a3c    60  ldur x16, [x0, #-1]
0xffff8bd13a40    64  ldr x17, [x26, #120]
0xffff8bd13a44    68  cmp x16, x17
0xffff8bd13a48    72  b.ne #+0xc (addr 0xffff8bd13a54)
0xffff8bd13a4c    76  ldur d1, [x0, #7]
0xffff8bd13a50    80  b #+0x20 (addr 0xffff8bd13a70)
0xffff8bd13a54    84  ldr x16, [x26, #40]
0xffff8bd13a58    88  cmp x0, x16
0xffff8bd13a5c    92  b.ne #+0xd4 (addr 0xffff8bd13b30)
0xffff8bd13a60    96  ldr x2, [x26, #928]
0xffff8bd13a64   100  ldur d1, [x2, #7]
0xffff8bd13a68   104  b #+0x8 (addr 0xffff8bd13a70)
0xffff8bd13a6c   108  scvtf d1, x0, #32
0xffff8bd13a70   112  fmul d0, d0, d1
0xffff8bd13a74   116  movz x1, #0xe2c0
0xffff8bd13a78   120  movk x1, #0x2cb8, lsl #16
0xffff8bd13a7c   124  ldp x2, x0, [x1]
0xffff8bd13a80   128  adds x16, x2, #0x10 (16)
0xffff8bd13a84   132  ccmp x16, x0, #nzCv, lo
0xffff8bd13a88   136  b.hi #+0x20 (addr 0xffff8bd13aa8)
0xffff8bd13a8c   140  str x16, [x1]
0xffff8bd13a90   144  ldr x1, [x26, #120]
0xffff8bd13a94   148  str x1, [x2]
0xffff8bd13a98   152  orr x2, x2, #0x1
0xffff8bd13a9c   156  stur d0, [x2, #7]
0xffff8bd13aa0   160  mov x0, x2
0xffff8bd13aa4   164  ret
0xffff8bd13aa8   168  sub csp, jssp, #0x10 (16)
0xffff8bd13aac   172  stp fp, lr, [jssp, #-16]!
0xffff8bd13ab0   176  movz fp, #0xa00000000
0xffff8bd13ab4   180  sub csp, jssp, #0x8 (8)
0xffff8bd13ab8   184  str fp, [jssp, #-8]!
0xffff8bd13abc   188  add fp, jssp, #0x8 (8)
0xffff8bd13ac0   192  movz x2, #0x0
0xffff8bd13ac4   196  mov x16, lr
0xffff8bd13ac8   200  ldr x17, pc+64 (addr 0x0000ffff8bd13b08)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd13acc   204  blr x17
0xffff8bd13ad0   208  ldur cp, [fp, #-8]
0xffff8bd13ad4   212  movz x0, #0x0
0xffff8bd13ad8   216  movz x1, #0x4b48
0xffff8bd13adc   220  movk x1, #0xe4, lsl #16
0xffff8bd13ae0   224  ldr x16, pc+48 (addr 0x0000ffff8bd13b10)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd13ae4   228  blr x16
0xffff8bd13ae8   232  str x0, [jssp, #16]
0xffff8bd13aec   236  ldr x16, pc+44 (addr 0x0000ffff8bd13b18)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd13af0   240  blr x16
0xffff8bd13af4   244  ldr lr, [jssp, #16]
0xffff8bd13af8   248  ldp xzr, fp, [jssp], #24
0xffff8bd13afc   252  b #-0x60 (addr 0xffff8bd13a9c)
0xffff8bd13b00   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd13b04   260  d63f03e0       constant
0xffff8bd13b08   264  8bd06820       constant
0xffff8bd13b0c   268  0000ffff       constant
0xffff8bd13b10   272  8bd06260       constant
0xffff8bd13b14   276  0000ffff       constant
0xffff8bd13b18   280  8bd068e0       constant
0xffff8bd13b1c   284  0000ffff       constant
0xffff8bd13b20   288  movz x16, #0x0
0xffff8bd13b24   292  sub csp, jssp, #0x10 (16)
0xffff8bd13b28   296  stp fp, lr, [jssp, #-16]!
0xffff8bd13b2c   300  bl #+0x14 (addr 0xffff8bd13b40)
0xffff8bd13b30   304  movz x16, #0x8
0xffff8bd13b34   308  sub csp, jssp, #0x10 (16)
0xffff8bd13b38   312  stp fp, lr, [jssp, #-16]!
0xffff8bd13b3c   316  bl #+0x4 (addr 0xffff8bd13b40)
0xffff8bd13b40   320  movz x17, #0xa00000000
0xffff8bd13b44   324  sub csp, jssp, #0x10 (16)
0xffff8bd13b48   328  stp x17, cp, [jssp, #-16]!
0xffff8bd13b4c   332  add fp, jssp, #0x10 (16)
0xffff8bd13b50   336  ldr x17, pc+24 (addr 0x0000ffff8bd13b68)    ;; lazy deoptimization bailout 0
0xffff8bd13b54   340  add x17, x17, x16
0xffff8bd13b58   344  br x17
0xffff8bd13b5c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13b60   352  d63f03e0       constant
0xffff8bd13b64   356  d503201f       constant
0xffff8bd13b68   360  8bb06000       constant
0xffff8bd13b6c   364  0000ffff       constant


Safepoints (size = 21)
0xffff8bd13ae8   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd13ac8  code target (STUB)  (0xffff8bd06820)
0xffff8bd13ae0  code target (STUB)  (0xffff8bd06260)
0xffff8bd13aec  code target (STUB)  (0xffff8bd068e0)
0xffff8bd13b00  constant pool (size 32)
0xffff8bd13b50  runtime entry
0xffff8bd13b5c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2489
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd13c00     0  mov x2, x0
0xffff8bd13c04     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd13cf8)
0xffff8bd13c08     8  tbz w1, #0, #+0x34 (addr 0xffff8bd13c3c)
0xffff8bd13c0c    12  ldur x16, [x1, #-1]
0xffff8bd13c10    16  ldr x17, [x26, #120]
0xffff8bd13c14    20  cmp x16, x17
0xffff8bd13c18    24  b.ne #+0xc (addr 0xffff8bd13c24)
0xffff8bd13c1c    28  ldur d0, [x1, #7]
0xffff8bd13c20    32  b #+0x20 (addr 0xffff8bd13c40)
0xffff8bd13c24    36  ldr x16, [x26, #40]
0xffff8bd13c28    40  cmp x1, x16
0xffff8bd13c2c    44  b.ne #+0xdc (addr 0xffff8bd13d08)
0xffff8bd13c30    48  ldr x3, [x26, #928]
0xffff8bd13c34    52  ldur d0, [x3, #7]
0xffff8bd13c38    56  b #+0x8 (addr 0xffff8bd13c40)
0xffff8bd13c3c    60  scvtf d0, x1, #32
0xffff8bd13c40    64  scvtf d1, x2, #32
0xffff8bd13c44    68  fmul d0, d0, d1
0xffff8bd13c48    72  movz x1, #0xe2c0
0xffff8bd13c4c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd13c50    80  ldp x2, x0, [x1]
0xffff8bd13c54    84  adds x16, x2, #0x10 (16)
0xffff8bd13c58    88  ccmp x16, x0, #nzCv, lo
0xffff8bd13c5c    92  b.hi #+0x20 (addr 0xffff8bd13c7c)
0xffff8bd13c60    96  str x16, [x1]
0xffff8bd13c64   100  ldr x1, [x26, #120]
0xffff8bd13c68   104  str x1, [x2]
0xffff8bd13c6c   108  orr x2, x2, #0x1
0xffff8bd13c70   112  stur d0, [x2, #7]
0xffff8bd13c74   116  mov x0, x2
0xffff8bd13c78   120  ret
0xffff8bd13c7c   124  sub csp, jssp, #0x10 (16)
0xffff8bd13c80   128  stp fp, lr, [jssp, #-16]!
0xffff8bd13c84   132  movz fp, #0xa00000000
0xffff8bd13c88   136  sub csp, jssp, #0x8 (8)
0xffff8bd13c8c   140  str fp, [jssp, #-8]!
0xffff8bd13c90   144  add fp, jssp, #0x8 (8)
0xffff8bd13c94   148  movz x2, #0x0
0xffff8bd13c98   152  mov x16, lr
0xffff8bd13c9c   156  ldr x17, pc+68 (addr 0x0000ffff8bd13ce0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd13ca0   160  blr x17
0xffff8bd13ca4   164  ldur cp, [fp, #-8]
0xffff8bd13ca8   168  movz x0, #0x0
0xffff8bd13cac   172  movz x1, #0x4b48
0xffff8bd13cb0   176  movk x1, #0xe4, lsl #16
0xffff8bd13cb4   180  ldr x16, pc+52 (addr 0x0000ffff8bd13ce8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd13cb8   184  blr x16
0xffff8bd13cbc   188  str x0, [jssp, #16]
0xffff8bd13cc0   192  ldr x16, pc+48 (addr 0x0000ffff8bd13cf0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd13cc4   196  blr x16
0xffff8bd13cc8   200  ldr lr, [jssp, #16]
0xffff8bd13ccc   204  ldp xzr, fp, [jssp], #24
0xffff8bd13cd0   208  b #-0x60 (addr 0xffff8bd13c70)
0xffff8bd13cd4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd13cd8   216  d63f03e0       constant
0xffff8bd13cdc   220  d503201f       constant
0xffff8bd13ce0   224  8bd06820       constant
0xffff8bd13ce4   228  0000ffff       constant
0xffff8bd13ce8   232  8bd06260       constant
0xffff8bd13cec   236  0000ffff       constant
0xffff8bd13cf0   240  8bd068e0       constant
0xffff8bd13cf4   244  0000ffff       constant
0xffff8bd13cf8   248  movz x16, #0x0
0xffff8bd13cfc   252  sub csp, jssp, #0x10 (16)
0xffff8bd13d00   256  stp fp, lr, [jssp, #-16]!
0xffff8bd13d04   260  bl #+0x14 (addr 0xffff8bd13d18)
0xffff8bd13d08   264  movz x16, #0x8
0xffff8bd13d0c   268  sub csp, jssp, #0x10 (16)
0xffff8bd13d10   272  stp fp, lr, [jssp, #-16]!
0xffff8bd13d14   276  bl #+0x4 (addr 0xffff8bd13d18)
0xffff8bd13d18   280  movz x17, #0xa00000000
0xffff8bd13d1c   284  sub csp, jssp, #0x10 (16)
0xffff8bd13d20   288  stp x17, cp, [jssp, #-16]!
0xffff8bd13d24   292  add fp, jssp, #0x10 (16)
0xffff8bd13d28   296  ldr x17, pc+24 (addr 0x0000ffff8bd13d40)    ;; lazy deoptimization bailout 0
0xffff8bd13d2c   300  add x17, x17, x16
0xffff8bd13d30   304  br x17
0xffff8bd13d34   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13d38   312  d63f03e0       constant
0xffff8bd13d3c   316  d503201f       constant
0xffff8bd13d40   320  8bb06000       constant
0xffff8bd13d44   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd13cbc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd13c9c  code target (STUB)  (0xffff8bd06820)
0xffff8bd13cb4  code target (STUB)  (0xffff8bd06260)
0xffff8bd13cc0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd13cd4  constant pool (size 36)
0xffff8bd13d28  runtime entry
0xffff8bd13d34  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2489
type = NORMAL
name = BinaryOpICStub(MUL:Number*Smi->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd13c00     0  mov x2, x0
0xffff8bd13c04     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd13cf8)
0xffff8bd13c08     8  tbz w1, #0, #+0x34 (addr 0xffff8bd13c3c)
0xffff8bd13c0c    12  ldur x16, [x1, #-1]
0xffff8bd13c10    16  ldr x17, [x26, #120]
0xffff8bd13c14    20  cmp x16, x17
0xffff8bd13c18    24  b.ne #+0xc (addr 0xffff8bd13c24)
0xffff8bd13c1c    28  ldur d0, [x1, #7]
0xffff8bd13c20    32  b #+0x20 (addr 0xffff8bd13c40)
0xffff8bd13c24    36  ldr x16, [x26, #40]
0xffff8bd13c28    40  cmp x1, x16
0xffff8bd13c2c    44  b.ne #+0xdc (addr 0xffff8bd13d08)
0xffff8bd13c30    48  ldr x3, [x26, #928]
0xffff8bd13c34    52  ldur d0, [x3, #7]
0xffff8bd13c38    56  b #+0x8 (addr 0xffff8bd13c40)
0xffff8bd13c3c    60  scvtf d0, x1, #32
0xffff8bd13c40    64  scvtf d1, x2, #32
0xffff8bd13c44    68  fmul d0, d0, d1
0xffff8bd13c48    72  movz x1, #0xe2c0
0xffff8bd13c4c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd13c50    80  ldp x2, x0, [x1]
0xffff8bd13c54    84  adds x16, x2, #0x10 (16)
0xffff8bd13c58    88  ccmp x16, x0, #nzCv, lo
0xffff8bd13c5c    92  b.hi #+0x20 (addr 0xffff8bd13c7c)
0xffff8bd13c60    96  str x16, [x1]
0xffff8bd13c64   100  ldr x1, [x26, #120]
0xffff8bd13c68   104  str x1, [x2]
0xffff8bd13c6c   108  orr x2, x2, #0x1
0xffff8bd13c70   112  stur d0, [x2, #7]
0xffff8bd13c74   116  mov x0, x2
0xffff8bd13c78   120  ret
0xffff8bd13c7c   124  sub csp, jssp, #0x10 (16)
0xffff8bd13c80   128  stp fp, lr, [jssp, #-16]!
0xffff8bd13c84   132  movz fp, #0xa00000000
0xffff8bd13c88   136  sub csp, jssp, #0x8 (8)
0xffff8bd13c8c   140  str fp, [jssp, #-8]!
0xffff8bd13c90   144  add fp, jssp, #0x8 (8)
0xffff8bd13c94   148  movz x2, #0x0
0xffff8bd13c98   152  mov x16, lr
0xffff8bd13c9c   156  ldr x17, pc+68 (addr 0x0000ffff8bd13ce0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd13ca0   160  blr x17
0xffff8bd13ca4   164  ldur cp, [fp, #-8]
0xffff8bd13ca8   168  movz x0, #0x0
0xffff8bd13cac   172  movz x1, #0x4b48
0xffff8bd13cb0   176  movk x1, #0xe4, lsl #16
0xffff8bd13cb4   180  ldr x16, pc+52 (addr 0x0000ffff8bd13ce8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd13cb8   184  blr x16
0xffff8bd13cbc   188  str x0, [jssp, #16]
0xffff8bd13cc0   192  ldr x16, pc+48 (addr 0x0000ffff8bd13cf0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd13cc4   196  blr x16
0xffff8bd13cc8   200  ldr lr, [jssp, #16]
0xffff8bd13ccc   204  ldp xzr, fp, [jssp], #24
0xffff8bd13cd0   208  b #-0x60 (addr 0xffff8bd13c70)
0xffff8bd13cd4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd13cd8   216  d63f03e0       constant
0xffff8bd13cdc   220  d503201f       constant
0xffff8bd13ce0   224  8bd06820       constant
0xffff8bd13ce4   228  0000ffff       constant
0xffff8bd13ce8   232  8bd06260       constant
0xffff8bd13cec   236  0000ffff       constant
0xffff8bd13cf0   240  8bd068e0       constant
0xffff8bd13cf4   244  0000ffff       constant
0xffff8bd13cf8   248  movz x16, #0x0
0xffff8bd13cfc   252  sub csp, jssp, #0x10 (16)
0xffff8bd13d00   256  stp fp, lr, [jssp, #-16]!
0xffff8bd13d04   260  bl #+0x14 (addr 0xffff8bd13d18)
0xffff8bd13d08   264  movz x16, #0x8
0xffff8bd13d0c   268  sub csp, jssp, #0x10 (16)
0xffff8bd13d10   272  stp fp, lr, [jssp, #-16]!
0xffff8bd13d14   276  bl #+0x4 (addr 0xffff8bd13d18)
0xffff8bd13d18   280  movz x17, #0xa00000000
0xffff8bd13d1c   284  sub csp, jssp, #0x10 (16)
0xffff8bd13d20   288  stp x17, cp, [jssp, #-16]!
0xffff8bd13d24   292  add fp, jssp, #0x10 (16)
0xffff8bd13d28   296  ldr x17, pc+24 (addr 0x0000ffff8bd13d40)    ;; lazy deoptimization bailout 0
0xffff8bd13d2c   300  add x17, x17, x16
0xffff8bd13d30   304  br x17
0xffff8bd13d34   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13d38   312  d63f03e0       constant
0xffff8bd13d3c   316  d503201f       constant
0xffff8bd13d40   320  8bb06000       constant
0xffff8bd13d44   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd13cbc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd13c9c  code target (STUB)  (0xffff8bd06820)
0xffff8bd13cb4  code target (STUB)  (0xffff8bd06260)
0xffff8bd13cc0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd13cd4  constant pool (size 36)
0xffff8bd13d28  runtime entry
0xffff8bd13d34  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4265
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bd13dc0     0  mov x2, x1
0xffff8bd13dc4     4  tbnz w2, #0, #+0x34 (addr 0xffff8bd13df8)
0xffff8bd13dc8     8  mov x3, x0
0xffff8bd13dcc    12  tbnz w3, #0, #+0x3c (addr 0xffff8bd13e08)
0xffff8bd13dd0    16  cmp x3, #0x0 (0)
0xffff8bd13dd4    20  ccmp x2, #0, #nZcv, ne
0xffff8bd13dd8    24  ccmn x3, x2, #nzcv, eq
0xffff8bd13ddc    28  b.mi #+0x3c (addr 0xffff8bd13e18)
0xffff8bd13de0    32  smulh x2, x3, x2
0xffff8bd13de4    36  cmp x2, w2, sxtw
0xffff8bd13de8    40  lsl x2, x2, #32
0xffff8bd13dec    44  b.ne #+0x2c (addr 0xffff8bd13e18)
0xffff8bd13df0    48  mov x0, x2
0xffff8bd13df4    52  ret
0xffff8bd13df8    56  movz x16, #0x0
0xffff8bd13dfc    60  sub csp, jssp, #0x10 (16)
0xffff8bd13e00    64  stp fp, lr, [jssp, #-16]!
0xffff8bd13e04    68  bl #+0x24 (addr 0xffff8bd13e28)
0xffff8bd13e08    72  movz x16, #0x8
0xffff8bd13e0c    76  sub csp, jssp, #0x10 (16)
0xffff8bd13e10    80  stp fp, lr, [jssp, #-16]!
0xffff8bd13e14    84  bl #+0x14 (addr 0xffff8bd13e28)
0xffff8bd13e18    88  movz x16, #0x10
0xffff8bd13e1c    92  sub csp, jssp, #0x10 (16)
0xffff8bd13e20    96  stp fp, lr, [jssp, #-16]!
0xffff8bd13e24   100  bl #+0x4 (addr 0xffff8bd13e28)
0xffff8bd13e28   104  movz x17, #0xa00000000
0xffff8bd13e2c   108  sub csp, jssp, #0x10 (16)
0xffff8bd13e30   112  stp x17, cp, [jssp, #-16]!
0xffff8bd13e34   116  add fp, jssp, #0x10 (16)
0xffff8bd13e38   120  ldr x17, pc+24 (addr 0x0000ffff8bd13e50)    ;; lazy deoptimization bailout 0
0xffff8bd13e3c   124  add x17, x17, x16
0xffff8bd13e40   128  br x17
0xffff8bd13e44   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13e48   136  d63f03e0       constant
0xffff8bd13e4c   140  d503201f       constant
0xffff8bd13e50   144  8bb06000       constant
0xffff8bd13e54   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd13e38  runtime entry
0xffff8bd13e44  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4265
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 160)
0xffff8bd13dc0     0  mov x2, x1
0xffff8bd13dc4     4  tbnz w2, #0, #+0x34 (addr 0xffff8bd13df8)
0xffff8bd13dc8     8  mov x3, x0
0xffff8bd13dcc    12  tbnz w3, #0, #+0x3c (addr 0xffff8bd13e08)
0xffff8bd13dd0    16  cmp x3, #0x0 (0)
0xffff8bd13dd4    20  ccmp x2, #0, #nZcv, ne
0xffff8bd13dd8    24  ccmn x3, x2, #nzcv, eq
0xffff8bd13ddc    28  b.mi #+0x3c (addr 0xffff8bd13e18)
0xffff8bd13de0    32  smulh x2, x3, x2
0xffff8bd13de4    36  cmp x2, w2, sxtw
0xffff8bd13de8    40  lsl x2, x2, #32
0xffff8bd13dec    44  b.ne #+0x2c (addr 0xffff8bd13e18)
0xffff8bd13df0    48  mov x0, x2
0xffff8bd13df4    52  ret
0xffff8bd13df8    56  movz x16, #0x0
0xffff8bd13dfc    60  sub csp, jssp, #0x10 (16)
0xffff8bd13e00    64  stp fp, lr, [jssp, #-16]!
0xffff8bd13e04    68  bl #+0x24 (addr 0xffff8bd13e28)
0xffff8bd13e08    72  movz x16, #0x8
0xffff8bd13e0c    76  sub csp, jssp, #0x10 (16)
0xffff8bd13e10    80  stp fp, lr, [jssp, #-16]!
0xffff8bd13e14    84  bl #+0x14 (addr 0xffff8bd13e28)
0xffff8bd13e18    88  movz x16, #0x10
0xffff8bd13e1c    92  sub csp, jssp, #0x10 (16)
0xffff8bd13e20    96  stp fp, lr, [jssp, #-16]!
0xffff8bd13e24   100  bl #+0x4 (addr 0xffff8bd13e28)
0xffff8bd13e28   104  movz x17, #0xa00000000
0xffff8bd13e2c   108  sub csp, jssp, #0x10 (16)
0xffff8bd13e30   112  stp x17, cp, [jssp, #-16]!
0xffff8bd13e34   116  add fp, jssp, #0x10 (16)
0xffff8bd13e38   120  ldr x17, pc+24 (addr 0x0000ffff8bd13e50)    ;; lazy deoptimization bailout 0
0xffff8bd13e3c   124  add x17, x17, x16
0xffff8bd13e40   128  br x17
0xffff8bd13e44   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13e48   136  d63f03e0       constant
0xffff8bd13e4c   140  d503201f       constant
0xffff8bd13e50   144  8bb06000       constant
0xffff8bd13e54   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd13e38  runtime entry
0xffff8bd13e44  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4281
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff8bd13ec0     0  mov x2, x1
0xffff8bd13ec4     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd13f88)
0xffff8bd13ec8     8  mov x3, x0
0xffff8bd13ecc    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd13f98)
0xffff8bd13ed0    16  scvtf d0, x2, #32
0xffff8bd13ed4    20  scvtf d1, x3, #32
0xffff8bd13ed8    24  fmul d0, d0, d1
0xffff8bd13edc    28  movz x1, #0xe2c0
0xffff8bd13ee0    32  movk x1, #0x2cb8, lsl #16
0xffff8bd13ee4    36  ldp x2, x0, [x1]
0xffff8bd13ee8    40  adds x16, x2, #0x10 (16)
0xffff8bd13eec    44  ccmp x16, x0, #nzCv, lo
0xffff8bd13ef0    48  b.hi #+0x20 (addr 0xffff8bd13f10)
0xffff8bd13ef4    52  str x16, [x1]
0xffff8bd13ef8    56  ldr x1, [x26, #120]
0xffff8bd13efc    60  str x1, [x2]
0xffff8bd13f00    64  orr x2, x2, #0x1
0xffff8bd13f04    68  stur d0, [x2, #7]
0xffff8bd13f08    72  mov x0, x2
0xffff8bd13f0c    76  ret
0xffff8bd13f10    80  sub csp, jssp, #0x10 (16)
0xffff8bd13f14    84  stp fp, lr, [jssp, #-16]!
0xffff8bd13f18    88  movz fp, #0xa00000000
0xffff8bd13f1c    92  sub csp, jssp, #0x8 (8)
0xffff8bd13f20    96  str fp, [jssp, #-8]!
0xffff8bd13f24   100  add fp, jssp, #0x8 (8)
0xffff8bd13f28   104  movz x2, #0x0
0xffff8bd13f2c   108  mov x16, lr
0xffff8bd13f30   112  ldr x17, pc+64 (addr 0x0000ffff8bd13f70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd13f34   116  blr x17
0xffff8bd13f38   120  ldur cp, [fp, #-8]
0xffff8bd13f3c   124  movz x0, #0x0
0xffff8bd13f40   128  movz x1, #0x4b48
0xffff8bd13f44   132  movk x1, #0xe4, lsl #16
0xffff8bd13f48   136  ldr x16, pc+48 (addr 0x0000ffff8bd13f78)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd13f4c   140  blr x16
0xffff8bd13f50   144  str x0, [jssp, #16]
0xffff8bd13f54   148  ldr x16, pc+44 (addr 0x0000ffff8bd13f80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd13f58   152  blr x16
0xffff8bd13f5c   156  ldr lr, [jssp, #16]
0xffff8bd13f60   160  ldp xzr, fp, [jssp], #24
0xffff8bd13f64   164  b #-0x60 (addr 0xffff8bd13f04)
0xffff8bd13f68   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd13f6c   172  d63f03e0       constant
0xffff8bd13f70   176  8bd06820       constant
0xffff8bd13f74   180  0000ffff       constant
0xffff8bd13f78   184  8bd06260       constant
0xffff8bd13f7c   188  0000ffff       constant
0xffff8bd13f80   192  8bd068e0       constant
0xffff8bd13f84   196  0000ffff       constant
0xffff8bd13f88   200  movz x16, #0x0
0xffff8bd13f8c   204  sub csp, jssp, #0x10 (16)
0xffff8bd13f90   208  stp fp, lr, [jssp, #-16]!
0xffff8bd13f94   212  bl #+0x14 (addr 0xffff8bd13fa8)
0xffff8bd13f98   216  movz x16, #0x8
0xffff8bd13f9c   220  sub csp, jssp, #0x10 (16)
0xffff8bd13fa0   224  stp fp, lr, [jssp, #-16]!
0xffff8bd13fa4   228  bl #+0x4 (addr 0xffff8bd13fa8)
0xffff8bd13fa8   232  movz x17, #0xa00000000
0xffff8bd13fac   236  sub csp, jssp, #0x10 (16)
0xffff8bd13fb0   240  stp x17, cp, [jssp, #-16]!
0xffff8bd13fb4   244  add fp, jssp, #0x10 (16)
0xffff8bd13fb8   248  ldr x17, pc+24 (addr 0x0000ffff8bd13fd0)    ;; lazy deoptimization bailout 0
0xffff8bd13fbc   252  add x17, x17, x16
0xffff8bd13fc0   256  br x17
0xffff8bd13fc4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13fc8   264  d63f03e0       constant
0xffff8bd13fcc   268  d503201f       constant
0xffff8bd13fd0   272  8bb06000       constant
0xffff8bd13fd4   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd13f50   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd13f30  code target (STUB)  (0xffff8bd06820)
0xffff8bd13f48  code target (STUB)  (0xffff8bd06260)
0xffff8bd13f54  code target (STUB)  (0xffff8bd068e0)
0xffff8bd13f68  constant pool (size 32)
0xffff8bd13fb8  runtime entry
0xffff8bd13fc4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4281
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Int32->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff8bd13ec0     0  mov x2, x1
0xffff8bd13ec4     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd13f88)
0xffff8bd13ec8     8  mov x3, x0
0xffff8bd13ecc    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd13f98)
0xffff8bd13ed0    16  scvtf d0, x2, #32
0xffff8bd13ed4    20  scvtf d1, x3, #32
0xffff8bd13ed8    24  fmul d0, d0, d1
0xffff8bd13edc    28  movz x1, #0xe2c0
0xffff8bd13ee0    32  movk x1, #0x2cb8, lsl #16
0xffff8bd13ee4    36  ldp x2, x0, [x1]
0xffff8bd13ee8    40  adds x16, x2, #0x10 (16)
0xffff8bd13eec    44  ccmp x16, x0, #nzCv, lo
0xffff8bd13ef0    48  b.hi #+0x20 (addr 0xffff8bd13f10)
0xffff8bd13ef4    52  str x16, [x1]
0xffff8bd13ef8    56  ldr x1, [x26, #120]
0xffff8bd13efc    60  str x1, [x2]
0xffff8bd13f00    64  orr x2, x2, #0x1
0xffff8bd13f04    68  stur d0, [x2, #7]
0xffff8bd13f08    72  mov x0, x2
0xffff8bd13f0c    76  ret
0xffff8bd13f10    80  sub csp, jssp, #0x10 (16)
0xffff8bd13f14    84  stp fp, lr, [jssp, #-16]!
0xffff8bd13f18    88  movz fp, #0xa00000000
0xffff8bd13f1c    92  sub csp, jssp, #0x8 (8)
0xffff8bd13f20    96  str fp, [jssp, #-8]!
0xffff8bd13f24   100  add fp, jssp, #0x8 (8)
0xffff8bd13f28   104  movz x2, #0x0
0xffff8bd13f2c   108  mov x16, lr
0xffff8bd13f30   112  ldr x17, pc+64 (addr 0x0000ffff8bd13f70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd13f34   116  blr x17
0xffff8bd13f38   120  ldur cp, [fp, #-8]
0xffff8bd13f3c   124  movz x0, #0x0
0xffff8bd13f40   128  movz x1, #0x4b48
0xffff8bd13f44   132  movk x1, #0xe4, lsl #16
0xffff8bd13f48   136  ldr x16, pc+48 (addr 0x0000ffff8bd13f78)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd13f4c   140  blr x16
0xffff8bd13f50   144  str x0, [jssp, #16]
0xffff8bd13f54   148  ldr x16, pc+44 (addr 0x0000ffff8bd13f80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd13f58   152  blr x16
0xffff8bd13f5c   156  ldr lr, [jssp, #16]
0xffff8bd13f60   160  ldp xzr, fp, [jssp], #24
0xffff8bd13f64   164  b #-0x60 (addr 0xffff8bd13f04)
0xffff8bd13f68   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd13f6c   172  d63f03e0       constant
0xffff8bd13f70   176  8bd06820       constant
0xffff8bd13f74   180  0000ffff       constant
0xffff8bd13f78   184  8bd06260       constant
0xffff8bd13f7c   188  0000ffff       constant
0xffff8bd13f80   192  8bd068e0       constant
0xffff8bd13f84   196  0000ffff       constant
0xffff8bd13f88   200  movz x16, #0x0
0xffff8bd13f8c   204  sub csp, jssp, #0x10 (16)
0xffff8bd13f90   208  stp fp, lr, [jssp, #-16]!
0xffff8bd13f94   212  bl #+0x14 (addr 0xffff8bd13fa8)
0xffff8bd13f98   216  movz x16, #0x8
0xffff8bd13f9c   220  sub csp, jssp, #0x10 (16)
0xffff8bd13fa0   224  stp fp, lr, [jssp, #-16]!
0xffff8bd13fa4   228  bl #+0x4 (addr 0xffff8bd13fa8)
0xffff8bd13fa8   232  movz x17, #0xa00000000
0xffff8bd13fac   236  sub csp, jssp, #0x10 (16)
0xffff8bd13fb0   240  stp x17, cp, [jssp, #-16]!
0xffff8bd13fb4   244  add fp, jssp, #0x10 (16)
0xffff8bd13fb8   248  ldr x17, pc+24 (addr 0x0000ffff8bd13fd0)    ;; lazy deoptimization bailout 0
0xffff8bd13fbc   252  add x17, x17, x16
0xffff8bd13fc0   256  br x17
0xffff8bd13fc4   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd13fc8   264  d63f03e0       constant
0xffff8bd13fcc   268  d503201f       constant
0xffff8bd13fd0   272  8bb06000       constant
0xffff8bd13fd4   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd13f50   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd13f30  code target (STUB)  (0xffff8bd06820)
0xffff8bd13f48  code target (STUB)  (0xffff8bd06260)
0xffff8bd13f54  code target (STUB)  (0xffff8bd068e0)
0xffff8bd13f68  constant pool (size 32)
0xffff8bd13fb8  runtime entry
0xffff8bd13fc4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6329
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd14060     0  mov x2, x1
0xffff8bd14064     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd14158)
0xffff8bd14068     8  tbz w0, #0, #+0x34 (addr 0xffff8bd1409c)
0xffff8bd1406c    12  ldur x16, [x0, #-1]
0xffff8bd14070    16  ldr x17, [x26, #120]
0xffff8bd14074    20  cmp x16, x17
0xffff8bd14078    24  b.ne #+0xc (addr 0xffff8bd14084)
0xffff8bd1407c    28  ldur d0, [x0, #7]
0xffff8bd14080    32  b #+0x20 (addr 0xffff8bd140a0)
0xffff8bd14084    36  ldr x16, [x26, #40]
0xffff8bd14088    40  cmp x0, x16
0xffff8bd1408c    44  b.ne #+0xdc (addr 0xffff8bd14168)
0xffff8bd14090    48  ldr x3, [x26, #928]
0xffff8bd14094    52  ldur d0, [x3, #7]
0xffff8bd14098    56  b #+0x8 (addr 0xffff8bd140a0)
0xffff8bd1409c    60  scvtf d0, x0, #32
0xffff8bd140a0    64  scvtf d1, x2, #32
0xffff8bd140a4    68  fmul d0, d1, d0
0xffff8bd140a8    72  movz x1, #0xe2c0
0xffff8bd140ac    76  movk x1, #0x2cb8, lsl #16
0xffff8bd140b0    80  ldp x2, x0, [x1]
0xffff8bd140b4    84  adds x16, x2, #0x10 (16)
0xffff8bd140b8    88  ccmp x16, x0, #nzCv, lo
0xffff8bd140bc    92  b.hi #+0x20 (addr 0xffff8bd140dc)
0xffff8bd140c0    96  str x16, [x1]
0xffff8bd140c4   100  ldr x1, [x26, #120]
0xffff8bd140c8   104  str x1, [x2]
0xffff8bd140cc   108  orr x2, x2, #0x1
0xffff8bd140d0   112  stur d0, [x2, #7]
0xffff8bd140d4   116  mov x0, x2
0xffff8bd140d8   120  ret
0xffff8bd140dc   124  sub csp, jssp, #0x10 (16)
0xffff8bd140e0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd140e4   132  movz fp, #0xa00000000
0xffff8bd140e8   136  sub csp, jssp, #0x8 (8)
0xffff8bd140ec   140  str fp, [jssp, #-8]!
0xffff8bd140f0   144  add fp, jssp, #0x8 (8)
0xffff8bd140f4   148  movz x2, #0x0
0xffff8bd140f8   152  mov x16, lr
0xffff8bd140fc   156  ldr x17, pc+68 (addr 0x0000ffff8bd14140)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd14100   160  blr x17
0xffff8bd14104   164  ldur cp, [fp, #-8]
0xffff8bd14108   168  movz x0, #0x0
0xffff8bd1410c   172  movz x1, #0x4b48
0xffff8bd14110   176  movk x1, #0xe4, lsl #16
0xffff8bd14114   180  ldr x16, pc+52 (addr 0x0000ffff8bd14148)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd14118   184  blr x16
0xffff8bd1411c   188  str x0, [jssp, #16]
0xffff8bd14120   192  ldr x16, pc+48 (addr 0x0000ffff8bd14150)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd14124   196  blr x16
0xffff8bd14128   200  ldr lr, [jssp, #16]
0xffff8bd1412c   204  ldp xzr, fp, [jssp], #24
0xffff8bd14130   208  b #-0x60 (addr 0xffff8bd140d0)
0xffff8bd14134   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd14138   216  d63f03e0       constant
0xffff8bd1413c   220  d503201f       constant
0xffff8bd14140   224  8bd06820       constant
0xffff8bd14144   228  0000ffff       constant
0xffff8bd14148   232  8bd06260       constant
0xffff8bd1414c   236  0000ffff       constant
0xffff8bd14150   240  8bd068e0       constant
0xffff8bd14154   244  0000ffff       constant
0xffff8bd14158   248  movz x16, #0x0
0xffff8bd1415c   252  sub csp, jssp, #0x10 (16)
0xffff8bd14160   256  stp fp, lr, [jssp, #-16]!
0xffff8bd14164   260  bl #+0x14 (addr 0xffff8bd14178)
0xffff8bd14168   264  movz x16, #0x8
0xffff8bd1416c   268  sub csp, jssp, #0x10 (16)
0xffff8bd14170   272  stp fp, lr, [jssp, #-16]!
0xffff8bd14174   276  bl #+0x4 (addr 0xffff8bd14178)
0xffff8bd14178   280  movz x17, #0xa00000000
0xffff8bd1417c   284  sub csp, jssp, #0x10 (16)
0xffff8bd14180   288  stp x17, cp, [jssp, #-16]!
0xffff8bd14184   292  add fp, jssp, #0x10 (16)
0xffff8bd14188   296  ldr x17, pc+24 (addr 0x0000ffff8bd141a0)    ;; lazy deoptimization bailout 0
0xffff8bd1418c   300  add x17, x17, x16
0xffff8bd14190   304  br x17
0xffff8bd14194   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd14198   312  d63f03e0       constant
0xffff8bd1419c   316  d503201f       constant
0xffff8bd141a0   320  8bb06000       constant
0xffff8bd141a4   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd1411c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd140fc  code target (STUB)  (0xffff8bd06820)
0xffff8bd14114  code target (STUB)  (0xffff8bd06260)
0xffff8bd14120  code target (STUB)  (0xffff8bd068e0)
0xffff8bd14134  constant pool (size 36)
0xffff8bd14188  runtime entry
0xffff8bd14194  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6329
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd14060     0  mov x2, x1
0xffff8bd14064     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd14158)
0xffff8bd14068     8  tbz w0, #0, #+0x34 (addr 0xffff8bd1409c)
0xffff8bd1406c    12  ldur x16, [x0, #-1]
0xffff8bd14070    16  ldr x17, [x26, #120]
0xffff8bd14074    20  cmp x16, x17
0xffff8bd14078    24  b.ne #+0xc (addr 0xffff8bd14084)
0xffff8bd1407c    28  ldur d0, [x0, #7]
0xffff8bd14080    32  b #+0x20 (addr 0xffff8bd140a0)
0xffff8bd14084    36  ldr x16, [x26, #40]
0xffff8bd14088    40  cmp x0, x16
0xffff8bd1408c    44  b.ne #+0xdc (addr 0xffff8bd14168)
0xffff8bd14090    48  ldr x3, [x26, #928]
0xffff8bd14094    52  ldur d0, [x3, #7]
0xffff8bd14098    56  b #+0x8 (addr 0xffff8bd140a0)
0xffff8bd1409c    60  scvtf d0, x0, #32
0xffff8bd140a0    64  scvtf d1, x2, #32
0xffff8bd140a4    68  fmul d0, d1, d0
0xffff8bd140a8    72  movz x1, #0xe2c0
0xffff8bd140ac    76  movk x1, #0x2cb8, lsl #16
0xffff8bd140b0    80  ldp x2, x0, [x1]
0xffff8bd140b4    84  adds x16, x2, #0x10 (16)
0xffff8bd140b8    88  ccmp x16, x0, #nzCv, lo
0xffff8bd140bc    92  b.hi #+0x20 (addr 0xffff8bd140dc)
0xffff8bd140c0    96  str x16, [x1]
0xffff8bd140c4   100  ldr x1, [x26, #120]
0xffff8bd140c8   104  str x1, [x2]
0xffff8bd140cc   108  orr x2, x2, #0x1
0xffff8bd140d0   112  stur d0, [x2, #7]
0xffff8bd140d4   116  mov x0, x2
0xffff8bd140d8   120  ret
0xffff8bd140dc   124  sub csp, jssp, #0x10 (16)
0xffff8bd140e0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd140e4   132  movz fp, #0xa00000000
0xffff8bd140e8   136  sub csp, jssp, #0x8 (8)
0xffff8bd140ec   140  str fp, [jssp, #-8]!
0xffff8bd140f0   144  add fp, jssp, #0x8 (8)
0xffff8bd140f4   148  movz x2, #0x0
0xffff8bd140f8   152  mov x16, lr
0xffff8bd140fc   156  ldr x17, pc+68 (addr 0x0000ffff8bd14140)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd14100   160  blr x17
0xffff8bd14104   164  ldur cp, [fp, #-8]
0xffff8bd14108   168  movz x0, #0x0
0xffff8bd1410c   172  movz x1, #0x4b48
0xffff8bd14110   176  movk x1, #0xe4, lsl #16
0xffff8bd14114   180  ldr x16, pc+52 (addr 0x0000ffff8bd14148)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd14118   184  blr x16
0xffff8bd1411c   188  str x0, [jssp, #16]
0xffff8bd14120   192  ldr x16, pc+48 (addr 0x0000ffff8bd14150)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd14124   196  blr x16
0xffff8bd14128   200  ldr lr, [jssp, #16]
0xffff8bd1412c   204  ldp xzr, fp, [jssp], #24
0xffff8bd14130   208  b #-0x60 (addr 0xffff8bd140d0)
0xffff8bd14134   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd14138   216  d63f03e0       constant
0xffff8bd1413c   220  d503201f       constant
0xffff8bd14140   224  8bd06820       constant
0xffff8bd14144   228  0000ffff       constant
0xffff8bd14148   232  8bd06260       constant
0xffff8bd1414c   236  0000ffff       constant
0xffff8bd14150   240  8bd068e0       constant
0xffff8bd14154   244  0000ffff       constant
0xffff8bd14158   248  movz x16, #0x0
0xffff8bd1415c   252  sub csp, jssp, #0x10 (16)
0xffff8bd14160   256  stp fp, lr, [jssp, #-16]!
0xffff8bd14164   260  bl #+0x14 (addr 0xffff8bd14178)
0xffff8bd14168   264  movz x16, #0x8
0xffff8bd1416c   268  sub csp, jssp, #0x10 (16)
0xffff8bd14170   272  stp fp, lr, [jssp, #-16]!
0xffff8bd14174   276  bl #+0x4 (addr 0xffff8bd14178)
0xffff8bd14178   280  movz x17, #0xa00000000
0xffff8bd1417c   284  sub csp, jssp, #0x10 (16)
0xffff8bd14180   288  stp x17, cp, [jssp, #-16]!
0xffff8bd14184   292  add fp, jssp, #0x10 (16)
0xffff8bd14188   296  ldr x17, pc+24 (addr 0x0000ffff8bd141a0)    ;; lazy deoptimization bailout 0
0xffff8bd1418c   300  add x17, x17, x16
0xffff8bd14190   304  br x17
0xffff8bd14194   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd14198   312  d63f03e0       constant
0xffff8bd1419c   316  d503201f       constant
0xffff8bd141a0   320  8bb06000       constant
0xffff8bd141a4   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd1411c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd140fc  code target (STUB)  (0xffff8bd06820)
0xffff8bd14114  code target (STUB)  (0xffff8bd06260)
0xffff8bd14120  code target (STUB)  (0xffff8bd068e0)
0xffff8bd14134  constant pool (size 36)
0xffff8bd14188  runtime entry
0xffff8bd14194  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2217
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bd14220     0  mov x2, x1
0xffff8bd14224     4  tbnz w2, #0, #+0x34 (addr 0xffff8bd14258)
0xffff8bd14228     8  mov x3, x0
0xffff8bd1422c    12  tbnz w3, #0, #+0x3c (addr 0xffff8bd14268)
0xffff8bd14230    16  cmp x3, #0x0 (0)
0xffff8bd14234    20  ccmp x2, #0, #nZcv, ne
0xffff8bd14238    24  ccmn x3, x2, #nzcv, eq
0xffff8bd1423c    28  b.mi #+0x3c (addr 0xffff8bd14278)
0xffff8bd14240    32  smulh x2, x3, x2
0xffff8bd14244    36  cmp x2, w2, sxtw
0xffff8bd14248    40  lsl x2, x2, #32
0xffff8bd1424c    44  b.ne #+0x2c (addr 0xffff8bd14278)
0xffff8bd14250    48  mov x0, x2
0xffff8bd14254    52  ret
0xffff8bd14258    56  movz x16, #0x0
0xffff8bd1425c    60  sub csp, jssp, #0x10 (16)
0xffff8bd14260    64  stp fp, lr, [jssp, #-16]!
0xffff8bd14264    68  bl #+0x24 (addr 0xffff8bd14288)
0xffff8bd14268    72  movz x16, #0x8
0xffff8bd1426c    76  sub csp, jssp, #0x10 (16)
0xffff8bd14270    80  stp fp, lr, [jssp, #-16]!
0xffff8bd14274    84  bl #+0x14 (addr 0xffff8bd14288)
0xffff8bd14278    88  movz x16, #0x10
0xffff8bd1427c    92  sub csp, jssp, #0x10 (16)
0xffff8bd14280    96  stp fp, lr, [jssp, #-16]!
0xffff8bd14284   100  bl #+0x4 (addr 0xffff8bd14288)
0xffff8bd14288   104  movz x17, #0xa00000000
0xffff8bd1428c   108  sub csp, jssp, #0x10 (16)
0xffff8bd14290   112  stp x17, cp, [jssp, #-16]!
0xffff8bd14294   116  add fp, jssp, #0x10 (16)
0xffff8bd14298   120  ldr x17, pc+24 (addr 0x0000ffff8bd142b0)    ;; lazy deoptimization bailout 0
0xffff8bd1429c   124  add x17, x17, x16
0xffff8bd142a0   128  br x17
0xffff8bd142a4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd142a8   136  d63f03e0       constant
0xffff8bd142ac   140  d503201f       constant
0xffff8bd142b0   144  8bb06000       constant
0xffff8bd142b4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14298  runtime entry
0xffff8bd142a4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2217
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Smi->Int32)
compiler = crankshaft
Instructions (size = 160)
0xffff8bd14220     0  mov x2, x1
0xffff8bd14224     4  tbnz w2, #0, #+0x34 (addr 0xffff8bd14258)
0xffff8bd14228     8  mov x3, x0
0xffff8bd1422c    12  tbnz w3, #0, #+0x3c (addr 0xffff8bd14268)
0xffff8bd14230    16  cmp x3, #0x0 (0)
0xffff8bd14234    20  ccmp x2, #0, #nZcv, ne
0xffff8bd14238    24  ccmn x3, x2, #nzcv, eq
0xffff8bd1423c    28  b.mi #+0x3c (addr 0xffff8bd14278)
0xffff8bd14240    32  smulh x2, x3, x2
0xffff8bd14244    36  cmp x2, w2, sxtw
0xffff8bd14248    40  lsl x2, x2, #32
0xffff8bd1424c    44  b.ne #+0x2c (addr 0xffff8bd14278)
0xffff8bd14250    48  mov x0, x2
0xffff8bd14254    52  ret
0xffff8bd14258    56  movz x16, #0x0
0xffff8bd1425c    60  sub csp, jssp, #0x10 (16)
0xffff8bd14260    64  stp fp, lr, [jssp, #-16]!
0xffff8bd14264    68  bl #+0x24 (addr 0xffff8bd14288)
0xffff8bd14268    72  movz x16, #0x8
0xffff8bd1426c    76  sub csp, jssp, #0x10 (16)
0xffff8bd14270    80  stp fp, lr, [jssp, #-16]!
0xffff8bd14274    84  bl #+0x14 (addr 0xffff8bd14288)
0xffff8bd14278    88  movz x16, #0x10
0xffff8bd1427c    92  sub csp, jssp, #0x10 (16)
0xffff8bd14280    96  stp fp, lr, [jssp, #-16]!
0xffff8bd14284   100  bl #+0x4 (addr 0xffff8bd14288)
0xffff8bd14288   104  movz x17, #0xa00000000
0xffff8bd1428c   108  sub csp, jssp, #0x10 (16)
0xffff8bd14290   112  stp x17, cp, [jssp, #-16]!
0xffff8bd14294   116  add fp, jssp, #0x10 (16)
0xffff8bd14298   120  ldr x17, pc+24 (addr 0x0000ffff8bd142b0)    ;; lazy deoptimization bailout 0
0xffff8bd1429c   124  add x17, x17, x16
0xffff8bd142a0   128  br x17
0xffff8bd142a4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd142a8   136  d63f03e0       constant
0xffff8bd142ac   140  d503201f       constant
0xffff8bd142b0   144  8bb06000       constant
0xffff8bd142b4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14298  runtime entry
0xffff8bd142a4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2233
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 301)
0xffff8bd14320     0  mov x2, x1
0xffff8bd14324     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd143e8)
0xffff8bd14328     8  mov x3, x0
0xffff8bd1432c    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd143f8)
0xffff8bd14330    16  scvtf d0, x2, #32
0xffff8bd14334    20  scvtf d1, x3, #32
0xffff8bd14338    24  fmul d0, d0, d1
0xffff8bd1433c    28  movz x1, #0xe2c0
0xffff8bd14340    32  movk x1, #0x2cb8, lsl #16
0xffff8bd14344    36  ldp x2, x0, [x1]
0xffff8bd14348    40  adds x16, x2, #0x10 (16)
0xffff8bd1434c    44  ccmp x16, x0, #nzCv, lo
0xffff8bd14350    48  b.hi #+0x20 (addr 0xffff8bd14370)
0xffff8bd14354    52  str x16, [x1]
0xffff8bd14358    56  ldr x1, [x26, #120]
0xffff8bd1435c    60  str x1, [x2]
0xffff8bd14360    64  orr x2, x2, #0x1
0xffff8bd14364    68  stur d0, [x2, #7]
0xffff8bd14368    72  mov x0, x2
0xffff8bd1436c    76  ret
0xffff8bd14370    80  sub csp, jssp, #0x10 (16)
0xffff8bd14374    84  stp fp, lr, [jssp, #-16]!
0xffff8bd14378    88  movz fp, #0xa00000000
0xffff8bd1437c    92  sub csp, jssp, #0x8 (8)
0xffff8bd14380    96  str fp, [jssp, #-8]!
0xffff8bd14384   100  add fp, jssp, #0x8 (8)
0xffff8bd14388   104  movz x2, #0x0
0xffff8bd1438c   108  mov x16, lr
0xffff8bd14390   112  ldr x17, pc+64 (addr 0x0000ffff8bd143d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd14394   116  blr x17
0xffff8bd14398   120  ldur cp, [fp, #-8]
0xffff8bd1439c   124  movz x0, #0x0
0xffff8bd143a0   128  movz x1, #0x4b48
0xffff8bd143a4   132  movk x1, #0xe4, lsl #16
0xffff8bd143a8   136  ldr x16, pc+48 (addr 0x0000ffff8bd143d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd143ac   140  blr x16
0xffff8bd143b0   144  str x0, [jssp, #16]
0xffff8bd143b4   148  ldr x16, pc+44 (addr 0x0000ffff8bd143e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd143b8   152  blr x16
0xffff8bd143bc   156  ldr lr, [jssp, #16]
0xffff8bd143c0   160  ldp xzr, fp, [jssp], #24
0xffff8bd143c4   164  b #-0x60 (addr 0xffff8bd14364)
0xffff8bd143c8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd143cc   172  d63f03e0       constant
0xffff8bd143d0   176  8bd06820       constant
0xffff8bd143d4   180  0000ffff       constant
0xffff8bd143d8   184  8bd06260       constant
0xffff8bd143dc   188  0000ffff       constant
0xffff8bd143e0   192  8bd068e0       constant
0xffff8bd143e4   196  0000ffff       constant
0xffff8bd143e8   200  movz x16, #0x0
0xffff8bd143ec   204  sub csp, jssp, #0x10 (16)
0xffff8bd143f0   208  stp fp, lr, [jssp, #-16]!
0xffff8bd143f4   212  bl #+0x14 (addr 0xffff8bd14408)
0xffff8bd143f8   216  movz x16, #0x8
0xffff8bd143fc   220  sub csp, jssp, #0x10 (16)
0xffff8bd14400   224  stp fp, lr, [jssp, #-16]!
0xffff8bd14404   228  bl #+0x4 (addr 0xffff8bd14408)
0xffff8bd14408   232  movz x17, #0xa00000000
0xffff8bd1440c   236  sub csp, jssp, #0x10 (16)
0xffff8bd14410   240  stp x17, cp, [jssp, #-16]!
0xffff8bd14414   244  add fp, jssp, #0x10 (16)
0xffff8bd14418   248  ldr x17, pc+24 (addr 0x0000ffff8bd14430)    ;; lazy deoptimization bailout 0
0xffff8bd1441c   252  add x17, x17, x16
0xffff8bd14420   256  br x17
0xffff8bd14424   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd14428   264  d63f03e0       constant
0xffff8bd1442c   268  d503201f       constant
0xffff8bd14430   272  8bb06000       constant
0xffff8bd14434   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd143b0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd14390  code target (STUB)  (0xffff8bd06820)
0xffff8bd143a8  code target (STUB)  (0xffff8bd06260)
0xffff8bd143b4  code target (STUB)  (0xffff8bd068e0)
0xffff8bd143c8  constant pool (size 32)
0xffff8bd14418  runtime entry
0xffff8bd14424  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2233
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Smi->Number)
compiler = crankshaft
Instructions (size = 301)
0xffff8bd14320     0  mov x2, x1
0xffff8bd14324     4  tbnz w2, #0, #+0xc4 (addr 0xffff8bd143e8)
0xffff8bd14328     8  mov x3, x0
0xffff8bd1432c    12  tbnz w3, #0, #+0xcc (addr 0xffff8bd143f8)
0xffff8bd14330    16  scvtf d0, x2, #32
0xffff8bd14334    20  scvtf d1, x3, #32
0xffff8bd14338    24  fmul d0, d0, d1
0xffff8bd1433c    28  movz x1, #0xe2c0
0xffff8bd14340    32  movk x1, #0x2cb8, lsl #16
0xffff8bd14344    36  ldp x2, x0, [x1]
0xffff8bd14348    40  adds x16, x2, #0x10 (16)
0xffff8bd1434c    44  ccmp x16, x0, #nzCv, lo
0xffff8bd14350    48  b.hi #+0x20 (addr 0xffff8bd14370)
0xffff8bd14354    52  str x16, [x1]
0xffff8bd14358    56  ldr x1, [x26, #120]
0xffff8bd1435c    60  str x1, [x2]
0xffff8bd14360    64  orr x2, x2, #0x1
0xffff8bd14364    68  stur d0, [x2, #7]
0xffff8bd14368    72  mov x0, x2
0xffff8bd1436c    76  ret
0xffff8bd14370    80  sub csp, jssp, #0x10 (16)
0xffff8bd14374    84  stp fp, lr, [jssp, #-16]!
0xffff8bd14378    88  movz fp, #0xa00000000
0xffff8bd1437c    92  sub csp, jssp, #0x8 (8)
0xffff8bd14380    96  str fp, [jssp, #-8]!
0xffff8bd14384   100  add fp, jssp, #0x8 (8)
0xffff8bd14388   104  movz x2, #0x0
0xffff8bd1438c   108  mov x16, lr
0xffff8bd14390   112  ldr x17, pc+64 (addr 0x0000ffff8bd143d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd14394   116  blr x17
0xffff8bd14398   120  ldur cp, [fp, #-8]
0xffff8bd1439c   124  movz x0, #0x0
0xffff8bd143a0   128  movz x1, #0x4b48
0xffff8bd143a4   132  movk x1, #0xe4, lsl #16
0xffff8bd143a8   136  ldr x16, pc+48 (addr 0x0000ffff8bd143d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd143ac   140  blr x16
0xffff8bd143b0   144  str x0, [jssp, #16]
0xffff8bd143b4   148  ldr x16, pc+44 (addr 0x0000ffff8bd143e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd143b8   152  blr x16
0xffff8bd143bc   156  ldr lr, [jssp, #16]
0xffff8bd143c0   160  ldp xzr, fp, [jssp], #24
0xffff8bd143c4   164  b #-0x60 (addr 0xffff8bd14364)
0xffff8bd143c8   168  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd143cc   172  d63f03e0       constant
0xffff8bd143d0   176  8bd06820       constant
0xffff8bd143d4   180  0000ffff       constant
0xffff8bd143d8   184  8bd06260       constant
0xffff8bd143dc   188  0000ffff       constant
0xffff8bd143e0   192  8bd068e0       constant
0xffff8bd143e4   196  0000ffff       constant
0xffff8bd143e8   200  movz x16, #0x0
0xffff8bd143ec   204  sub csp, jssp, #0x10 (16)
0xffff8bd143f0   208  stp fp, lr, [jssp, #-16]!
0xffff8bd143f4   212  bl #+0x14 (addr 0xffff8bd14408)
0xffff8bd143f8   216  movz x16, #0x8
0xffff8bd143fc   220  sub csp, jssp, #0x10 (16)
0xffff8bd14400   224  stp fp, lr, [jssp, #-16]!
0xffff8bd14404   228  bl #+0x4 (addr 0xffff8bd14408)
0xffff8bd14408   232  movz x17, #0xa00000000
0xffff8bd1440c   236  sub csp, jssp, #0x10 (16)
0xffff8bd14410   240  stp x17, cp, [jssp, #-16]!
0xffff8bd14414   244  add fp, jssp, #0x10 (16)
0xffff8bd14418   248  ldr x17, pc+24 (addr 0x0000ffff8bd14430)    ;; lazy deoptimization bailout 0
0xffff8bd1441c   252  add x17, x17, x16
0xffff8bd14420   256  br x17
0xffff8bd14424   260  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd14428   264  d63f03e0       constant
0xffff8bd1442c   268  d503201f       constant
0xffff8bd14430   272  8bb06000       constant
0xffff8bd14434   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd143b0   144  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd14390  code target (STUB)  (0xffff8bd06820)
0xffff8bd143a8  code target (STUB)  (0xffff8bd06260)
0xffff8bd143b4  code target (STUB)  (0xffff8bd068e0)
0xffff8bd143c8  constant pool (size 32)
0xffff8bd14418  runtime entry
0xffff8bd14424  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2201
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bd144c0     0  mov x2, x1
0xffff8bd144c4     4  tbnz w2, #0, #+0x34 (addr 0xffff8bd144f8)
0xffff8bd144c8     8  mov x3, x0
0xffff8bd144cc    12  tbnz w3, #0, #+0x3c (addr 0xffff8bd14508)
0xffff8bd144d0    16  cmp x3, #0x0 (0)
0xffff8bd144d4    20  ccmp x2, #0, #nZcv, ne
0xffff8bd144d8    24  ccmn x3, x2, #nzcv, eq
0xffff8bd144dc    28  b.mi #+0x3c (addr 0xffff8bd14518)
0xffff8bd144e0    32  smulh x2, x3, x2
0xffff8bd144e4    36  cmp x2, w2, sxtw
0xffff8bd144e8    40  lsl x2, x2, #32
0xffff8bd144ec    44  b.ne #+0x2c (addr 0xffff8bd14518)
0xffff8bd144f0    48  mov x0, x2
0xffff8bd144f4    52  ret
0xffff8bd144f8    56  movz x16, #0x0
0xffff8bd144fc    60  sub csp, jssp, #0x10 (16)
0xffff8bd14500    64  stp fp, lr, [jssp, #-16]!
0xffff8bd14504    68  bl #+0x24 (addr 0xffff8bd14528)
0xffff8bd14508    72  movz x16, #0x8
0xffff8bd1450c    76  sub csp, jssp, #0x10 (16)
0xffff8bd14510    80  stp fp, lr, [jssp, #-16]!
0xffff8bd14514    84  bl #+0x14 (addr 0xffff8bd14528)
0xffff8bd14518    88  movz x16, #0x10
0xffff8bd1451c    92  sub csp, jssp, #0x10 (16)
0xffff8bd14520    96  stp fp, lr, [jssp, #-16]!
0xffff8bd14524   100  bl #+0x4 (addr 0xffff8bd14528)
0xffff8bd14528   104  movz x17, #0xa00000000
0xffff8bd1452c   108  sub csp, jssp, #0x10 (16)
0xffff8bd14530   112  stp x17, cp, [jssp, #-16]!
0xffff8bd14534   116  add fp, jssp, #0x10 (16)
0xffff8bd14538   120  ldr x17, pc+24 (addr 0x0000ffff8bd14550)    ;; lazy deoptimization bailout 0
0xffff8bd1453c   124  add x17, x17, x16
0xffff8bd14540   128  br x17
0xffff8bd14544   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd14548   136  d63f03e0       constant
0xffff8bd1454c   140  d503201f       constant
0xffff8bd14550   144  8bb06000       constant
0xffff8bd14554   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14538  runtime entry
0xffff8bd14544  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2201
type = NORMAL
name = BinaryOpICStub(MUL:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 160)
0xffff8bd144c0     0  mov x2, x1
0xffff8bd144c4     4  tbnz w2, #0, #+0x34 (addr 0xffff8bd144f8)
0xffff8bd144c8     8  mov x3, x0
0xffff8bd144cc    12  tbnz w3, #0, #+0x3c (addr 0xffff8bd14508)
0xffff8bd144d0    16  cmp x3, #0x0 (0)
0xffff8bd144d4    20  ccmp x2, #0, #nZcv, ne
0xffff8bd144d8    24  ccmn x3, x2, #nzcv, eq
0xffff8bd144dc    28  b.mi #+0x3c (addr 0xffff8bd14518)
0xffff8bd144e0    32  smulh x2, x3, x2
0xffff8bd144e4    36  cmp x2, w2, sxtw
0xffff8bd144e8    40  lsl x2, x2, #32
0xffff8bd144ec    44  b.ne #+0x2c (addr 0xffff8bd14518)
0xffff8bd144f0    48  mov x0, x2
0xffff8bd144f4    52  ret
0xffff8bd144f8    56  movz x16, #0x0
0xffff8bd144fc    60  sub csp, jssp, #0x10 (16)
0xffff8bd14500    64  stp fp, lr, [jssp, #-16]!
0xffff8bd14504    68  bl #+0x24 (addr 0xffff8bd14528)
0xffff8bd14508    72  movz x16, #0x8
0xffff8bd1450c    76  sub csp, jssp, #0x10 (16)
0xffff8bd14510    80  stp fp, lr, [jssp, #-16]!
0xffff8bd14514    84  bl #+0x14 (addr 0xffff8bd14528)
0xffff8bd14518    88  movz x16, #0x10
0xffff8bd1451c    92  sub csp, jssp, #0x10 (16)
0xffff8bd14520    96  stp fp, lr, [jssp, #-16]!
0xffff8bd14524   100  bl #+0x4 (addr 0xffff8bd14528)
0xffff8bd14528   104  movz x17, #0xa00000000
0xffff8bd1452c   108  sub csp, jssp, #0x10 (16)
0xffff8bd14530   112  stp x17, cp, [jssp, #-16]!
0xffff8bd14534   116  add fp, jssp, #0x10 (16)
0xffff8bd14538   120  ldr x17, pc+24 (addr 0x0000ffff8bd14550)    ;; lazy deoptimization bailout 0
0xffff8bd1453c   124  add x17, x17, x16
0xffff8bd14540   128  br x17
0xffff8bd14544   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd14548   136  d63f03e0       constant
0xffff8bd1454c   140  d503201f       constant
0xffff8bd14550   144  8bb06000       constant
0xffff8bd14554   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14538  runtime entry
0xffff8bd14544  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2340
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff8bd145c0     0  mov x2, x1
0xffff8bd145c4     4  tbnz w2, #0, #+0x20 (addr 0xffff8bd145e4)
0xffff8bd145c8     8  mov x3, x0
0xffff8bd145cc    12  tbnz w3, #0, #+0x28 (addr 0xffff8bd145f4)
0xffff8bd145d0    16  asr x0, x2, #32
0xffff8bd145d4    20  asr x1, x3, #32
0xffff8bd145d8    24  asr w0, w0, w1
0xffff8bd145dc    28  lsl x0, x0, #32
0xffff8bd145e0    32  ret
0xffff8bd145e4    36  movz x16, #0x0
0xffff8bd145e8    40  sub csp, jssp, #0x10 (16)
0xffff8bd145ec    44  stp fp, lr, [jssp, #-16]!
0xffff8bd145f0    48  bl #+0x14 (addr 0xffff8bd14604)
0xffff8bd145f4    52  movz x16, #0x8
0xffff8bd145f8    56  sub csp, jssp, #0x10 (16)
0xffff8bd145fc    60  stp fp, lr, [jssp, #-16]!
0xffff8bd14600    64  bl #+0x4 (addr 0xffff8bd14604)
0xffff8bd14604    68  movz x17, #0xa00000000
0xffff8bd14608    72  sub csp, jssp, #0x10 (16)
0xffff8bd1460c    76  stp x17, cp, [jssp, #-16]!
0xffff8bd14610    80  add fp, jssp, #0x10 (16)
0xffff8bd14614    84  ldr x17, pc+20 (addr 0x0000ffff8bd14628)    ;; lazy deoptimization bailout 0
0xffff8bd14618    88  add x17, x17, x16
0xffff8bd1461c    92  br x17
0xffff8bd14620    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14624   100  d63f03e0       constant
0xffff8bd14628   104  8bb06000       constant
0xffff8bd1462c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14614  runtime entry
0xffff8bd14620  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2340
type = NORMAL
name = BinaryOpICStub(SAR:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 120)
0xffff8bd145c0     0  mov x2, x1
0xffff8bd145c4     4  tbnz w2, #0, #+0x20 (addr 0xffff8bd145e4)
0xffff8bd145c8     8  mov x3, x0
0xffff8bd145cc    12  tbnz w3, #0, #+0x28 (addr 0xffff8bd145f4)
0xffff8bd145d0    16  asr x0, x2, #32
0xffff8bd145d4    20  asr x1, x3, #32
0xffff8bd145d8    24  asr w0, w0, w1
0xffff8bd145dc    28  lsl x0, x0, #32
0xffff8bd145e0    32  ret
0xffff8bd145e4    36  movz x16, #0x0
0xffff8bd145e8    40  sub csp, jssp, #0x10 (16)
0xffff8bd145ec    44  stp fp, lr, [jssp, #-16]!
0xffff8bd145f0    48  bl #+0x14 (addr 0xffff8bd14604)
0xffff8bd145f4    52  movz x16, #0x8
0xffff8bd145f8    56  sub csp, jssp, #0x10 (16)
0xffff8bd145fc    60  stp fp, lr, [jssp, #-16]!
0xffff8bd14600    64  bl #+0x4 (addr 0xffff8bd14604)
0xffff8bd14604    68  movz x17, #0xa00000000
0xffff8bd14608    72  sub csp, jssp, #0x10 (16)
0xffff8bd1460c    76  stp x17, cp, [jssp, #-16]!
0xffff8bd14610    80  add fp, jssp, #0x10 (16)
0xffff8bd14614    84  ldr x17, pc+20 (addr 0x0000ffff8bd14628)    ;; lazy deoptimization bailout 0
0xffff8bd14618    88  add x17, x17, x16
0xffff8bd1461c    92  br x17
0xffff8bd14620    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14624   100  d63f03e0       constant
0xffff8bd14628   104  8bb06000       constant
0xffff8bd1462c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14614  runtime entry
0xffff8bd14620  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2324
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff8bd146a0     0  mov x2, x1
0xffff8bd146a4     4  tbnz w2, #0, #+0x20 (addr 0xffff8bd146c4)
0xffff8bd146a8     8  mov x3, x0
0xffff8bd146ac    12  tbnz w3, #0, #+0x28 (addr 0xffff8bd146d4)
0xffff8bd146b0    16  asr x0, x2, #32
0xffff8bd146b4    20  asr x1, x3, #32
0xffff8bd146b8    24  asr w0, w0, w1
0xffff8bd146bc    28  lsl x0, x0, #32
0xffff8bd146c0    32  ret
0xffff8bd146c4    36  movz x16, #0x0
0xffff8bd146c8    40  sub csp, jssp, #0x10 (16)
0xffff8bd146cc    44  stp fp, lr, [jssp, #-16]!
0xffff8bd146d0    48  bl #+0x14 (addr 0xffff8bd146e4)
0xffff8bd146d4    52  movz x16, #0x8
0xffff8bd146d8    56  sub csp, jssp, #0x10 (16)
0xffff8bd146dc    60  stp fp, lr, [jssp, #-16]!
0xffff8bd146e0    64  bl #+0x4 (addr 0xffff8bd146e4)
0xffff8bd146e4    68  movz x17, #0xa00000000
0xffff8bd146e8    72  sub csp, jssp, #0x10 (16)
0xffff8bd146ec    76  stp x17, cp, [jssp, #-16]!
0xffff8bd146f0    80  add fp, jssp, #0x10 (16)
0xffff8bd146f4    84  ldr x17, pc+20 (addr 0x0000ffff8bd14708)    ;; lazy deoptimization bailout 0
0xffff8bd146f8    88  add x17, x17, x16
0xffff8bd146fc    92  br x17
0xffff8bd14700    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14704   100  d63f03e0       constant
0xffff8bd14708   104  8bb06000       constant
0xffff8bd1470c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd146f4  runtime entry
0xffff8bd14700  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2324
type = NORMAL
name = BinaryOpICStub(SAR:Int32*Smi->Smi)
compiler = crankshaft
Instructions (size = 120)
0xffff8bd146a0     0  mov x2, x1
0xffff8bd146a4     4  tbnz w2, #0, #+0x20 (addr 0xffff8bd146c4)
0xffff8bd146a8     8  mov x3, x0
0xffff8bd146ac    12  tbnz w3, #0, #+0x28 (addr 0xffff8bd146d4)
0xffff8bd146b0    16  asr x0, x2, #32
0xffff8bd146b4    20  asr x1, x3, #32
0xffff8bd146b8    24  asr w0, w0, w1
0xffff8bd146bc    28  lsl x0, x0, #32
0xffff8bd146c0    32  ret
0xffff8bd146c4    36  movz x16, #0x0
0xffff8bd146c8    40  sub csp, jssp, #0x10 (16)
0xffff8bd146cc    44  stp fp, lr, [jssp, #-16]!
0xffff8bd146d0    48  bl #+0x14 (addr 0xffff8bd146e4)
0xffff8bd146d4    52  movz x16, #0x8
0xffff8bd146d8    56  sub csp, jssp, #0x10 (16)
0xffff8bd146dc    60  stp fp, lr, [jssp, #-16]!
0xffff8bd146e0    64  bl #+0x4 (addr 0xffff8bd146e4)
0xffff8bd146e4    68  movz x17, #0xa00000000
0xffff8bd146e8    72  sub csp, jssp, #0x10 (16)
0xffff8bd146ec    76  stp x17, cp, [jssp, #-16]!
0xffff8bd146f0    80  add fp, jssp, #0x10 (16)
0xffff8bd146f4    84  ldr x17, pc+20 (addr 0x0000ffff8bd14708)    ;; lazy deoptimization bailout 0
0xffff8bd146f8    88  add x17, x17, x16
0xffff8bd146fc    92  br x17
0xffff8bd14700    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14704   100  d63f03e0       constant
0xffff8bd14708   104  8bb06000       constant
0xffff8bd1470c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd146f4  runtime entry
0xffff8bd14700  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2452
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff8bd14780     0  mov x2, x0
0xffff8bd14784     4  tbnz w2, #0, #+0xac (addr 0xffff8bd14830)
0xffff8bd14788     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd147a0)
0xffff8bd1478c    12  asr x4, x1, #32
0xffff8bd14790    16  asr x0, x2, #32
0xffff8bd14794    20  asr w0, w4, w0
0xffff8bd14798    24  lsl x0, x0, #32
0xffff8bd1479c    28  ret
0xffff8bd147a0    32  sub csp, jssp, #0x10 (16)
0xffff8bd147a4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd147a8    40  movz fp, #0xa00000000
0xffff8bd147ac    44  sub csp, jssp, #0x8 (8)
0xffff8bd147b0    48  str fp, [jssp, #-8]!
0xffff8bd147b4    52  add fp, jssp, #0x8 (8)
0xffff8bd147b8    56  ldur x16, [x1, #-1]
0xffff8bd147bc    60  ldr x17, [x26, #120]
0xffff8bd147c0    64  cmp x16, x17
0xffff8bd147c4    68  b.ne #+0x30 (addr 0xffff8bd147f4)
0xffff8bd147c8    72  ldur d30, [x1, #7]
0xffff8bd147cc    76  fcvtzs x4, d30
0xffff8bd147d0    80  cmp x4, #0x1 (1)
0xffff8bd147d4    84  ccmn x4, #1, #nzcV, vc
0xffff8bd147d8    88  b.vc #+0x18 (addr 0xffff8bd147f0)
0xffff8bd147dc    92  sub csp, jssp, #0x8 (8)
0xffff8bd147e0    96  str lr, [jssp, #-8]!
0xffff8bd147e4   100  ldr x16, pc+68 (addr 0x0000ffff8bd14828)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd147e8   104  blr x16
0xffff8bd147ec   108  ldr lr, [jssp], #8
0xffff8bd147f0   112  b #+0x24 (addr 0xffff8bd14814)
0xffff8bd147f4   116  ldp x4, x3, [x26, #64]
0xffff8bd147f8   120  cmp x1, x4
0xffff8bd147fc   124  cset x4, eq
0xffff8bd14800   128  ccmp x1, x3, #nZcv, ne
0xffff8bd14804   132  b.eq #+0x10 (addr 0xffff8bd14814)
0xffff8bd14808   136  ldr x16, [x26, #40]
0xffff8bd1480c   140  cmp x1, x16
0xffff8bd14810   144  b.ne #+0x30 (addr 0xffff8bd14840)
0xffff8bd14814   148  ldr lr, [jssp, #16]
0xffff8bd14818   152  ldp xzr, fp, [jssp], #24
0xffff8bd1481c   156  b #-0x8c (addr 0xffff8bd14790)
0xffff8bd14820   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14824   164  d63f03e0       constant
0xffff8bd14828   168  8bd0fee0       constant
0xffff8bd1482c   172  0000ffff       constant
0xffff8bd14830   176  movz x16, #0x0
0xffff8bd14834   180  sub csp, jssp, #0x10 (16)
0xffff8bd14838   184  stp fp, lr, [jssp, #-16]!
0xffff8bd1483c   188  bl #+0xc (addr 0xffff8bd14848)
0xffff8bd14840   192  movz x16, #0x8
0xffff8bd14844   196  bl #+0x14 (addr 0xffff8bd14858)
0xffff8bd14848   200  movz x17, #0xa00000000
0xffff8bd1484c   204  sub csp, jssp, #0x10 (16)
0xffff8bd14850   208  stp x17, cp, [jssp, #-16]!
0xffff8bd14854   212  add fp, jssp, #0x10 (16)
0xffff8bd14858   216  ldr x17, pc+24 (addr 0x0000ffff8bd14870)    ;; lazy deoptimization bailout 0
0xffff8bd1485c   220  add x17, x17, x16
0xffff8bd14860   224  br x17
0xffff8bd14864   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd14868   232  d63f03e0       constant
0xffff8bd1486c   236  d503201f       constant
0xffff8bd14870   240  8bb06000       constant
0xffff8bd14874   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd147e4  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd14820  constant pool (size 16)
0xffff8bd14858  runtime entry
0xffff8bd14864  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2452
type = NORMAL
name = BinaryOpICStub(SAR:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff8bd14780     0  mov x2, x0
0xffff8bd14784     4  tbnz w2, #0, #+0xac (addr 0xffff8bd14830)
0xffff8bd14788     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd147a0)
0xffff8bd1478c    12  asr x4, x1, #32
0xffff8bd14790    16  asr x0, x2, #32
0xffff8bd14794    20  asr w0, w4, w0
0xffff8bd14798    24  lsl x0, x0, #32
0xffff8bd1479c    28  ret
0xffff8bd147a0    32  sub csp, jssp, #0x10 (16)
0xffff8bd147a4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd147a8    40  movz fp, #0xa00000000
0xffff8bd147ac    44  sub csp, jssp, #0x8 (8)
0xffff8bd147b0    48  str fp, [jssp, #-8]!
0xffff8bd147b4    52  add fp, jssp, #0x8 (8)
0xffff8bd147b8    56  ldur x16, [x1, #-1]
0xffff8bd147bc    60  ldr x17, [x26, #120]
0xffff8bd147c0    64  cmp x16, x17
0xffff8bd147c4    68  b.ne #+0x30 (addr 0xffff8bd147f4)
0xffff8bd147c8    72  ldur d30, [x1, #7]
0xffff8bd147cc    76  fcvtzs x4, d30
0xffff8bd147d0    80  cmp x4, #0x1 (1)
0xffff8bd147d4    84  ccmn x4, #1, #nzcV, vc
0xffff8bd147d8    88  b.vc #+0x18 (addr 0xffff8bd147f0)
0xffff8bd147dc    92  sub csp, jssp, #0x8 (8)
0xffff8bd147e0    96  str lr, [jssp, #-8]!
0xffff8bd147e4   100  ldr x16, pc+68 (addr 0x0000ffff8bd14828)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd147e8   104  blr x16
0xffff8bd147ec   108  ldr lr, [jssp], #8
0xffff8bd147f0   112  b #+0x24 (addr 0xffff8bd14814)
0xffff8bd147f4   116  ldp x4, x3, [x26, #64]
0xffff8bd147f8   120  cmp x1, x4
0xffff8bd147fc   124  cset x4, eq
0xffff8bd14800   128  ccmp x1, x3, #nZcv, ne
0xffff8bd14804   132  b.eq #+0x10 (addr 0xffff8bd14814)
0xffff8bd14808   136  ldr x16, [x26, #40]
0xffff8bd1480c   140  cmp x1, x16
0xffff8bd14810   144  b.ne #+0x30 (addr 0xffff8bd14840)
0xffff8bd14814   148  ldr lr, [jssp, #16]
0xffff8bd14818   152  ldp xzr, fp, [jssp], #24
0xffff8bd1481c   156  b #-0x8c (addr 0xffff8bd14790)
0xffff8bd14820   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14824   164  d63f03e0       constant
0xffff8bd14828   168  8bd0fee0       constant
0xffff8bd1482c   172  0000ffff       constant
0xffff8bd14830   176  movz x16, #0x0
0xffff8bd14834   180  sub csp, jssp, #0x10 (16)
0xffff8bd14838   184  stp fp, lr, [jssp, #-16]!
0xffff8bd1483c   188  bl #+0xc (addr 0xffff8bd14848)
0xffff8bd14840   192  movz x16, #0x8
0xffff8bd14844   196  bl #+0x14 (addr 0xffff8bd14858)
0xffff8bd14848   200  movz x17, #0xa00000000
0xffff8bd1484c   204  sub csp, jssp, #0x10 (16)
0xffff8bd14850   208  stp x17, cp, [jssp, #-16]!
0xffff8bd14854   212  add fp, jssp, #0x10 (16)
0xffff8bd14858   216  ldr x17, pc+24 (addr 0x0000ffff8bd14870)    ;; lazy deoptimization bailout 0
0xffff8bd1485c   220  add x17, x17, x16
0xffff8bd14860   224  br x17
0xffff8bd14864   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd14868   232  d63f03e0       constant
0xffff8bd1486c   236  d503201f       constant
0xffff8bd14870   240  8bb06000       constant
0xffff8bd14874   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd147e4  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd14820  constant pool (size 16)
0xffff8bd14858  runtime entry
0xffff8bd14864  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2196
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff8bd148e0     0  mov x2, x1
0xffff8bd148e4     4  tbnz w2, #0, #+0x20 (addr 0xffff8bd14904)
0xffff8bd148e8     8  mov x3, x0
0xffff8bd148ec    12  tbnz w3, #0, #+0x28 (addr 0xffff8bd14914)
0xffff8bd148f0    16  asr x0, x2, #32
0xffff8bd148f4    20  asr x1, x3, #32
0xffff8bd148f8    24  asr w0, w0, w1
0xffff8bd148fc    28  lsl x0, x0, #32
0xffff8bd14900    32  ret
0xffff8bd14904    36  movz x16, #0x0
0xffff8bd14908    40  sub csp, jssp, #0x10 (16)
0xffff8bd1490c    44  stp fp, lr, [jssp, #-16]!
0xffff8bd14910    48  bl #+0x14 (addr 0xffff8bd14924)
0xffff8bd14914    52  movz x16, #0x8
0xffff8bd14918    56  sub csp, jssp, #0x10 (16)
0xffff8bd1491c    60  stp fp, lr, [jssp, #-16]!
0xffff8bd14920    64  bl #+0x4 (addr 0xffff8bd14924)
0xffff8bd14924    68  movz x17, #0xa00000000
0xffff8bd14928    72  sub csp, jssp, #0x10 (16)
0xffff8bd1492c    76  stp x17, cp, [jssp, #-16]!
0xffff8bd14930    80  add fp, jssp, #0x10 (16)
0xffff8bd14934    84  ldr x17, pc+20 (addr 0x0000ffff8bd14948)    ;; lazy deoptimization bailout 0
0xffff8bd14938    88  add x17, x17, x16
0xffff8bd1493c    92  br x17
0xffff8bd14940    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14944   100  d63f03e0       constant
0xffff8bd14948   104  8bb06000       constant
0xffff8bd1494c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14934  runtime entry
0xffff8bd14940  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2196
type = NORMAL
name = BinaryOpICStub(SAR:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 120)
0xffff8bd148e0     0  mov x2, x1
0xffff8bd148e4     4  tbnz w2, #0, #+0x20 (addr 0xffff8bd14904)
0xffff8bd148e8     8  mov x3, x0
0xffff8bd148ec    12  tbnz w3, #0, #+0x28 (addr 0xffff8bd14914)
0xffff8bd148f0    16  asr x0, x2, #32
0xffff8bd148f4    20  asr x1, x3, #32
0xffff8bd148f8    24  asr w0, w0, w1
0xffff8bd148fc    28  lsl x0, x0, #32
0xffff8bd14900    32  ret
0xffff8bd14904    36  movz x16, #0x0
0xffff8bd14908    40  sub csp, jssp, #0x10 (16)
0xffff8bd1490c    44  stp fp, lr, [jssp, #-16]!
0xffff8bd14910    48  bl #+0x14 (addr 0xffff8bd14924)
0xffff8bd14914    52  movz x16, #0x8
0xffff8bd14918    56  sub csp, jssp, #0x10 (16)
0xffff8bd1491c    60  stp fp, lr, [jssp, #-16]!
0xffff8bd14920    64  bl #+0x4 (addr 0xffff8bd14924)
0xffff8bd14924    68  movz x17, #0xa00000000
0xffff8bd14928    72  sub csp, jssp, #0x10 (16)
0xffff8bd1492c    76  stp x17, cp, [jssp, #-16]!
0xffff8bd14930    80  add fp, jssp, #0x10 (16)
0xffff8bd14934    84  ldr x17, pc+20 (addr 0x0000ffff8bd14948)    ;; lazy deoptimization bailout 0
0xffff8bd14938    88  add x17, x17, x16
0xffff8bd1493c    92  br x17
0xffff8bd14940    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14944   100  d63f03e0       constant
0xffff8bd14948   104  8bb06000       constant
0xffff8bd1494c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14934  runtime entry
0xffff8bd14940  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2339
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff8bd149c0     0  mov x2, x1
0xffff8bd149c4     4  tbnz w2, #0, #+0x20 (addr 0xffff8bd149e4)
0xffff8bd149c8     8  mov x3, x0
0xffff8bd149cc    12  tbnz w3, #0, #+0x28 (addr 0xffff8bd149f4)
0xffff8bd149d0    16  asr x0, x2, #32
0xffff8bd149d4    20  asr x1, x3, #32
0xffff8bd149d8    24  lsl w0, w0, w1
0xffff8bd149dc    28  lsl x0, x0, #32
0xffff8bd149e0    32  ret
0xffff8bd149e4    36  movz x16, #0x0
0xffff8bd149e8    40  sub csp, jssp, #0x10 (16)
0xffff8bd149ec    44  stp fp, lr, [jssp, #-16]!
0xffff8bd149f0    48  bl #+0x14 (addr 0xffff8bd14a04)
0xffff8bd149f4    52  movz x16, #0x8
0xffff8bd149f8    56  sub csp, jssp, #0x10 (16)
0xffff8bd149fc    60  stp fp, lr, [jssp, #-16]!
0xffff8bd14a00    64  bl #+0x4 (addr 0xffff8bd14a04)
0xffff8bd14a04    68  movz x17, #0xa00000000
0xffff8bd14a08    72  sub csp, jssp, #0x10 (16)
0xffff8bd14a0c    76  stp x17, cp, [jssp, #-16]!
0xffff8bd14a10    80  add fp, jssp, #0x10 (16)
0xffff8bd14a14    84  ldr x17, pc+20 (addr 0x0000ffff8bd14a28)    ;; lazy deoptimization bailout 0
0xffff8bd14a18    88  add x17, x17, x16
0xffff8bd14a1c    92  br x17
0xffff8bd14a20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14a24   100  d63f03e0       constant
0xffff8bd14a28   104  8bb06000       constant
0xffff8bd14a2c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14a14  runtime entry
0xffff8bd14a20  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2339
type = NORMAL
name = BinaryOpICStub(SHL:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 120)
0xffff8bd149c0     0  mov x2, x1
0xffff8bd149c4     4  tbnz w2, #0, #+0x20 (addr 0xffff8bd149e4)
0xffff8bd149c8     8  mov x3, x0
0xffff8bd149cc    12  tbnz w3, #0, #+0x28 (addr 0xffff8bd149f4)
0xffff8bd149d0    16  asr x0, x2, #32
0xffff8bd149d4    20  asr x1, x3, #32
0xffff8bd149d8    24  lsl w0, w0, w1
0xffff8bd149dc    28  lsl x0, x0, #32
0xffff8bd149e0    32  ret
0xffff8bd149e4    36  movz x16, #0x0
0xffff8bd149e8    40  sub csp, jssp, #0x10 (16)
0xffff8bd149ec    44  stp fp, lr, [jssp, #-16]!
0xffff8bd149f0    48  bl #+0x14 (addr 0xffff8bd14a04)
0xffff8bd149f4    52  movz x16, #0x8
0xffff8bd149f8    56  sub csp, jssp, #0x10 (16)
0xffff8bd149fc    60  stp fp, lr, [jssp, #-16]!
0xffff8bd14a00    64  bl #+0x4 (addr 0xffff8bd14a04)
0xffff8bd14a04    68  movz x17, #0xa00000000
0xffff8bd14a08    72  sub csp, jssp, #0x10 (16)
0xffff8bd14a0c    76  stp x17, cp, [jssp, #-16]!
0xffff8bd14a10    80  add fp, jssp, #0x10 (16)
0xffff8bd14a14    84  ldr x17, pc+20 (addr 0x0000ffff8bd14a28)    ;; lazy deoptimization bailout 0
0xffff8bd14a18    88  add x17, x17, x16
0xffff8bd14a1c    92  br x17
0xffff8bd14a20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14a24   100  d63f03e0       constant
0xffff8bd14a28   104  8bb06000       constant
0xffff8bd14a2c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14a14  runtime entry
0xffff8bd14a20  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2323
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff8bd14aa0     0  mov x2, x1
0xffff8bd14aa4     4  tbnz w2, #0, #+0x20 (addr 0xffff8bd14ac4)
0xffff8bd14aa8     8  mov x3, x0
0xffff8bd14aac    12  tbnz w3, #0, #+0x28 (addr 0xffff8bd14ad4)
0xffff8bd14ab0    16  asr x0, x2, #32
0xffff8bd14ab4    20  asr x1, x3, #32
0xffff8bd14ab8    24  lsl w0, w0, w1
0xffff8bd14abc    28  lsl x0, x0, #32
0xffff8bd14ac0    32  ret
0xffff8bd14ac4    36  movz x16, #0x0
0xffff8bd14ac8    40  sub csp, jssp, #0x10 (16)
0xffff8bd14acc    44  stp fp, lr, [jssp, #-16]!
0xffff8bd14ad0    48  bl #+0x14 (addr 0xffff8bd14ae4)
0xffff8bd14ad4    52  movz x16, #0x8
0xffff8bd14ad8    56  sub csp, jssp, #0x10 (16)
0xffff8bd14adc    60  stp fp, lr, [jssp, #-16]!
0xffff8bd14ae0    64  bl #+0x4 (addr 0xffff8bd14ae4)
0xffff8bd14ae4    68  movz x17, #0xa00000000
0xffff8bd14ae8    72  sub csp, jssp, #0x10 (16)
0xffff8bd14aec    76  stp x17, cp, [jssp, #-16]!
0xffff8bd14af0    80  add fp, jssp, #0x10 (16)
0xffff8bd14af4    84  ldr x17, pc+20 (addr 0x0000ffff8bd14b08)    ;; lazy deoptimization bailout 0
0xffff8bd14af8    88  add x17, x17, x16
0xffff8bd14afc    92  br x17
0xffff8bd14b00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14b04   100  d63f03e0       constant
0xffff8bd14b08   104  8bb06000       constant
0xffff8bd14b0c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14af4  runtime entry
0xffff8bd14b00  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2323
type = NORMAL
name = BinaryOpICStub(SHL:Int32*Smi->Smi)
compiler = crankshaft
Instructions (size = 120)
0xffff8bd14aa0     0  mov x2, x1
0xffff8bd14aa4     4  tbnz w2, #0, #+0x20 (addr 0xffff8bd14ac4)
0xffff8bd14aa8     8  mov x3, x0
0xffff8bd14aac    12  tbnz w3, #0, #+0x28 (addr 0xffff8bd14ad4)
0xffff8bd14ab0    16  asr x0, x2, #32
0xffff8bd14ab4    20  asr x1, x3, #32
0xffff8bd14ab8    24  lsl w0, w0, w1
0xffff8bd14abc    28  lsl x0, x0, #32
0xffff8bd14ac0    32  ret
0xffff8bd14ac4    36  movz x16, #0x0
0xffff8bd14ac8    40  sub csp, jssp, #0x10 (16)
0xffff8bd14acc    44  stp fp, lr, [jssp, #-16]!
0xffff8bd14ad0    48  bl #+0x14 (addr 0xffff8bd14ae4)
0xffff8bd14ad4    52  movz x16, #0x8
0xffff8bd14ad8    56  sub csp, jssp, #0x10 (16)
0xffff8bd14adc    60  stp fp, lr, [jssp, #-16]!
0xffff8bd14ae0    64  bl #+0x4 (addr 0xffff8bd14ae4)
0xffff8bd14ae4    68  movz x17, #0xa00000000
0xffff8bd14ae8    72  sub csp, jssp, #0x10 (16)
0xffff8bd14aec    76  stp x17, cp, [jssp, #-16]!
0xffff8bd14af0    80  add fp, jssp, #0x10 (16)
0xffff8bd14af4    84  ldr x17, pc+20 (addr 0x0000ffff8bd14b08)    ;; lazy deoptimization bailout 0
0xffff8bd14af8    88  add x17, x17, x16
0xffff8bd14afc    92  br x17
0xffff8bd14b00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14b04   100  d63f03e0       constant
0xffff8bd14b08   104  8bb06000       constant
0xffff8bd14b0c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14af4  runtime entry
0xffff8bd14b00  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2451
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 256)
0xffff8bd14b80     0  mov x2, x0
0xffff8bd14b84     4  tbnz w2, #0, #+0xac (addr 0xffff8bd14c30)
0xffff8bd14b88     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd14ba0)
0xffff8bd14b8c    12  asr x4, x1, #32
0xffff8bd14b90    16  asr x0, x2, #32
0xffff8bd14b94    20  lsl w0, w4, w0
0xffff8bd14b98    24  lsl x0, x0, #32
0xffff8bd14b9c    28  ret
0xffff8bd14ba0    32  sub csp, jssp, #0x10 (16)
0xffff8bd14ba4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd14ba8    40  movz fp, #0xa00000000
0xffff8bd14bac    44  sub csp, jssp, #0x8 (8)
0xffff8bd14bb0    48  str fp, [jssp, #-8]!
0xffff8bd14bb4    52  add fp, jssp, #0x8 (8)
0xffff8bd14bb8    56  ldur x16, [x1, #-1]
0xffff8bd14bbc    60  ldr x17, [x26, #120]
0xffff8bd14bc0    64  cmp x16, x17
0xffff8bd14bc4    68  b.ne #+0x30 (addr 0xffff8bd14bf4)
0xffff8bd14bc8    72  ldur d30, [x1, #7]
0xffff8bd14bcc    76  fcvtzs x4, d30
0xffff8bd14bd0    80  cmp x4, #0x1 (1)
0xffff8bd14bd4    84  ccmn x4, #1, #nzcV, vc
0xffff8bd14bd8    88  b.vc #+0x18 (addr 0xffff8bd14bf0)
0xffff8bd14bdc    92  sub csp, jssp, #0x8 (8)
0xffff8bd14be0    96  str lr, [jssp, #-8]!
0xffff8bd14be4   100  ldr x16, pc+68 (addr 0x0000ffff8bd14c28)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd14be8   104  blr x16
0xffff8bd14bec   108  ldr lr, [jssp], #8
0xffff8bd14bf0   112  b #+0x24 (addr 0xffff8bd14c14)
0xffff8bd14bf4   116  ldp x4, x3, [x26, #64]
0xffff8bd14bf8   120  cmp x1, x4
0xffff8bd14bfc   124  cset x4, eq
0xffff8bd14c00   128  ccmp x1, x3, #nZcv, ne
0xffff8bd14c04   132  b.eq #+0x10 (addr 0xffff8bd14c14)
0xffff8bd14c08   136  ldr x16, [x26, #40]
0xffff8bd14c0c   140  cmp x1, x16
0xffff8bd14c10   144  b.ne #+0x30 (addr 0xffff8bd14c40)
0xffff8bd14c14   148  ldr lr, [jssp, #16]
0xffff8bd14c18   152  ldp xzr, fp, [jssp], #24
0xffff8bd14c1c   156  b #-0x8c (addr 0xffff8bd14b90)
0xffff8bd14c20   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14c24   164  d63f03e0       constant
0xffff8bd14c28   168  8bd0fee0       constant
0xffff8bd14c2c   172  0000ffff       constant
0xffff8bd14c30   176  movz x16, #0x0
0xffff8bd14c34   180  sub csp, jssp, #0x10 (16)
0xffff8bd14c38   184  stp fp, lr, [jssp, #-16]!
0xffff8bd14c3c   188  bl #+0xc (addr 0xffff8bd14c48)
0xffff8bd14c40   192  movz x16, #0x8
0xffff8bd14c44   196  bl #+0x14 (addr 0xffff8bd14c58)
0xffff8bd14c48   200  movz x17, #0xa00000000
0xffff8bd14c4c   204  sub csp, jssp, #0x10 (16)
0xffff8bd14c50   208  stp x17, cp, [jssp, #-16]!
0xffff8bd14c54   212  add fp, jssp, #0x10 (16)
0xffff8bd14c58   216  ldr x17, pc+24 (addr 0x0000ffff8bd14c70)    ;; lazy deoptimization bailout 0
0xffff8bd14c5c   220  add x17, x17, x16
0xffff8bd14c60   224  br x17
0xffff8bd14c64   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd14c68   232  d63f03e0       constant
0xffff8bd14c6c   236  d503201f       constant
0xffff8bd14c70   240  8bb06000       constant
0xffff8bd14c74   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd14be4  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd14c20  constant pool (size 16)
0xffff8bd14c58  runtime entry
0xffff8bd14c64  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2451
type = NORMAL
name = BinaryOpICStub(SHL:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 256)
0xffff8bd14b80     0  mov x2, x0
0xffff8bd14b84     4  tbnz w2, #0, #+0xac (addr 0xffff8bd14c30)
0xffff8bd14b88     8  tbnz w1, #0, #+0x18 (addr 0xffff8bd14ba0)
0xffff8bd14b8c    12  asr x4, x1, #32
0xffff8bd14b90    16  asr x0, x2, #32
0xffff8bd14b94    20  lsl w0, w4, w0
0xffff8bd14b98    24  lsl x0, x0, #32
0xffff8bd14b9c    28  ret
0xffff8bd14ba0    32  sub csp, jssp, #0x10 (16)
0xffff8bd14ba4    36  stp fp, lr, [jssp, #-16]!
0xffff8bd14ba8    40  movz fp, #0xa00000000
0xffff8bd14bac    44  sub csp, jssp, #0x8 (8)
0xffff8bd14bb0    48  str fp, [jssp, #-8]!
0xffff8bd14bb4    52  add fp, jssp, #0x8 (8)
0xffff8bd14bb8    56  ldur x16, [x1, #-1]
0xffff8bd14bbc    60  ldr x17, [x26, #120]
0xffff8bd14bc0    64  cmp x16, x17
0xffff8bd14bc4    68  b.ne #+0x30 (addr 0xffff8bd14bf4)
0xffff8bd14bc8    72  ldur d30, [x1, #7]
0xffff8bd14bcc    76  fcvtzs x4, d30
0xffff8bd14bd0    80  cmp x4, #0x1 (1)
0xffff8bd14bd4    84  ccmn x4, #1, #nzcV, vc
0xffff8bd14bd8    88  b.vc #+0x18 (addr 0xffff8bd14bf0)
0xffff8bd14bdc    92  sub csp, jssp, #0x8 (8)
0xffff8bd14be0    96  str lr, [jssp, #-8]!
0xffff8bd14be4   100  ldr x16, pc+68 (addr 0x0000ffff8bd14c28)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd14be8   104  blr x16
0xffff8bd14bec   108  ldr lr, [jssp], #8
0xffff8bd14bf0   112  b #+0x24 (addr 0xffff8bd14c14)
0xffff8bd14bf4   116  ldp x4, x3, [x26, #64]
0xffff8bd14bf8   120  cmp x1, x4
0xffff8bd14bfc   124  cset x4, eq
0xffff8bd14c00   128  ccmp x1, x3, #nZcv, ne
0xffff8bd14c04   132  b.eq #+0x10 (addr 0xffff8bd14c14)
0xffff8bd14c08   136  ldr x16, [x26, #40]
0xffff8bd14c0c   140  cmp x1, x16
0xffff8bd14c10   144  b.ne #+0x30 (addr 0xffff8bd14c40)
0xffff8bd14c14   148  ldr lr, [jssp, #16]
0xffff8bd14c18   152  ldp xzr, fp, [jssp], #24
0xffff8bd14c1c   156  b #-0x8c (addr 0xffff8bd14b90)
0xffff8bd14c20   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14c24   164  d63f03e0       constant
0xffff8bd14c28   168  8bd0fee0       constant
0xffff8bd14c2c   172  0000ffff       constant
0xffff8bd14c30   176  movz x16, #0x0
0xffff8bd14c34   180  sub csp, jssp, #0x10 (16)
0xffff8bd14c38   184  stp fp, lr, [jssp, #-16]!
0xffff8bd14c3c   188  bl #+0xc (addr 0xffff8bd14c48)
0xffff8bd14c40   192  movz x16, #0x8
0xffff8bd14c44   196  bl #+0x14 (addr 0xffff8bd14c58)
0xffff8bd14c48   200  movz x17, #0xa00000000
0xffff8bd14c4c   204  sub csp, jssp, #0x10 (16)
0xffff8bd14c50   208  stp x17, cp, [jssp, #-16]!
0xffff8bd14c54   212  add fp, jssp, #0x10 (16)
0xffff8bd14c58   216  ldr x17, pc+24 (addr 0x0000ffff8bd14c70)    ;; lazy deoptimization bailout 0
0xffff8bd14c5c   220  add x17, x17, x16
0xffff8bd14c60   224  br x17
0xffff8bd14c64   228  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd14c68   232  d63f03e0       constant
0xffff8bd14c6c   236  d503201f       constant
0xffff8bd14c70   240  8bb06000       constant
0xffff8bd14c74   244  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bd14be4  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd14c20  constant pool (size 16)
0xffff8bd14c58  runtime entry
0xffff8bd14c64  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2211
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff8bd14ce0     0  mov x2, x1
0xffff8bd14ce4     4  tbnz w2, #0, #+0x20 (addr 0xffff8bd14d04)
0xffff8bd14ce8     8  mov x3, x0
0xffff8bd14cec    12  tbnz w3, #0, #+0x28 (addr 0xffff8bd14d14)
0xffff8bd14cf0    16  asr x0, x2, #32
0xffff8bd14cf4    20  asr x1, x3, #32
0xffff8bd14cf8    24  lsl w0, w0, w1
0xffff8bd14cfc    28  lsl x0, x0, #32
0xffff8bd14d00    32  ret
0xffff8bd14d04    36  movz x16, #0x0
0xffff8bd14d08    40  sub csp, jssp, #0x10 (16)
0xffff8bd14d0c    44  stp fp, lr, [jssp, #-16]!
0xffff8bd14d10    48  bl #+0x14 (addr 0xffff8bd14d24)
0xffff8bd14d14    52  movz x16, #0x8
0xffff8bd14d18    56  sub csp, jssp, #0x10 (16)
0xffff8bd14d1c    60  stp fp, lr, [jssp, #-16]!
0xffff8bd14d20    64  bl #+0x4 (addr 0xffff8bd14d24)
0xffff8bd14d24    68  movz x17, #0xa00000000
0xffff8bd14d28    72  sub csp, jssp, #0x10 (16)
0xffff8bd14d2c    76  stp x17, cp, [jssp, #-16]!
0xffff8bd14d30    80  add fp, jssp, #0x10 (16)
0xffff8bd14d34    84  ldr x17, pc+20 (addr 0x0000ffff8bd14d48)    ;; lazy deoptimization bailout 0
0xffff8bd14d38    88  add x17, x17, x16
0xffff8bd14d3c    92  br x17
0xffff8bd14d40    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14d44   100  d63f03e0       constant
0xffff8bd14d48   104  8bb06000       constant
0xffff8bd14d4c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14d34  runtime entry
0xffff8bd14d40  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2211
type = NORMAL
name = BinaryOpICStub(SHL:Smi*Smi->Int32)
compiler = crankshaft
Instructions (size = 120)
0xffff8bd14ce0     0  mov x2, x1
0xffff8bd14ce4     4  tbnz w2, #0, #+0x20 (addr 0xffff8bd14d04)
0xffff8bd14ce8     8  mov x3, x0
0xffff8bd14cec    12  tbnz w3, #0, #+0x28 (addr 0xffff8bd14d14)
0xffff8bd14cf0    16  asr x0, x2, #32
0xffff8bd14cf4    20  asr x1, x3, #32
0xffff8bd14cf8    24  lsl w0, w0, w1
0xffff8bd14cfc    28  lsl x0, x0, #32
0xffff8bd14d00    32  ret
0xffff8bd14d04    36  movz x16, #0x0
0xffff8bd14d08    40  sub csp, jssp, #0x10 (16)
0xffff8bd14d0c    44  stp fp, lr, [jssp, #-16]!
0xffff8bd14d10    48  bl #+0x14 (addr 0xffff8bd14d24)
0xffff8bd14d14    52  movz x16, #0x8
0xffff8bd14d18    56  sub csp, jssp, #0x10 (16)
0xffff8bd14d1c    60  stp fp, lr, [jssp, #-16]!
0xffff8bd14d20    64  bl #+0x4 (addr 0xffff8bd14d24)
0xffff8bd14d24    68  movz x17, #0xa00000000
0xffff8bd14d28    72  sub csp, jssp, #0x10 (16)
0xffff8bd14d2c    76  stp x17, cp, [jssp, #-16]!
0xffff8bd14d30    80  add fp, jssp, #0x10 (16)
0xffff8bd14d34    84  ldr x17, pc+20 (addr 0x0000ffff8bd14d48)    ;; lazy deoptimization bailout 0
0xffff8bd14d38    88  add x17, x17, x16
0xffff8bd14d3c    92  br x17
0xffff8bd14d40    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14d44   100  d63f03e0       constant
0xffff8bd14d48   104  8bb06000       constant
0xffff8bd14d4c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14d34  runtime entry
0xffff8bd14d40  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2195
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 120)
0xffff8bd14dc0     0  mov x2, x1
0xffff8bd14dc4     4  tbnz w2, #0, #+0x20 (addr 0xffff8bd14de4)
0xffff8bd14dc8     8  mov x3, x0
0xffff8bd14dcc    12  tbnz w3, #0, #+0x28 (addr 0xffff8bd14df4)
0xffff8bd14dd0    16  asr x0, x2, #32
0xffff8bd14dd4    20  asr x1, x3, #32
0xffff8bd14dd8    24  lsl w0, w0, w1
0xffff8bd14ddc    28  lsl x0, x0, #32
0xffff8bd14de0    32  ret
0xffff8bd14de4    36  movz x16, #0x0
0xffff8bd14de8    40  sub csp, jssp, #0x10 (16)
0xffff8bd14dec    44  stp fp, lr, [jssp, #-16]!
0xffff8bd14df0    48  bl #+0x14 (addr 0xffff8bd14e04)
0xffff8bd14df4    52  movz x16, #0x8
0xffff8bd14df8    56  sub csp, jssp, #0x10 (16)
0xffff8bd14dfc    60  stp fp, lr, [jssp, #-16]!
0xffff8bd14e00    64  bl #+0x4 (addr 0xffff8bd14e04)
0xffff8bd14e04    68  movz x17, #0xa00000000
0xffff8bd14e08    72  sub csp, jssp, #0x10 (16)
0xffff8bd14e0c    76  stp x17, cp, [jssp, #-16]!
0xffff8bd14e10    80  add fp, jssp, #0x10 (16)
0xffff8bd14e14    84  ldr x17, pc+20 (addr 0x0000ffff8bd14e28)    ;; lazy deoptimization bailout 0
0xffff8bd14e18    88  add x17, x17, x16
0xffff8bd14e1c    92  br x17
0xffff8bd14e20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14e24   100  d63f03e0       constant
0xffff8bd14e28   104  8bb06000       constant
0xffff8bd14e2c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14e14  runtime entry
0xffff8bd14e20  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2195
type = NORMAL
name = BinaryOpICStub(SHL:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 120)
0xffff8bd14dc0     0  mov x2, x1
0xffff8bd14dc4     4  tbnz w2, #0, #+0x20 (addr 0xffff8bd14de4)
0xffff8bd14dc8     8  mov x3, x0
0xffff8bd14dcc    12  tbnz w3, #0, #+0x28 (addr 0xffff8bd14df4)
0xffff8bd14dd0    16  asr x0, x2, #32
0xffff8bd14dd4    20  asr x1, x3, #32
0xffff8bd14dd8    24  lsl w0, w0, w1
0xffff8bd14ddc    28  lsl x0, x0, #32
0xffff8bd14de0    32  ret
0xffff8bd14de4    36  movz x16, #0x0
0xffff8bd14de8    40  sub csp, jssp, #0x10 (16)
0xffff8bd14dec    44  stp fp, lr, [jssp, #-16]!
0xffff8bd14df0    48  bl #+0x14 (addr 0xffff8bd14e04)
0xffff8bd14df4    52  movz x16, #0x8
0xffff8bd14df8    56  sub csp, jssp, #0x10 (16)
0xffff8bd14dfc    60  stp fp, lr, [jssp, #-16]!
0xffff8bd14e00    64  bl #+0x4 (addr 0xffff8bd14e04)
0xffff8bd14e04    68  movz x17, #0xa00000000
0xffff8bd14e08    72  sub csp, jssp, #0x10 (16)
0xffff8bd14e0c    76  stp x17, cp, [jssp, #-16]!
0xffff8bd14e10    80  add fp, jssp, #0x10 (16)
0xffff8bd14e14    84  ldr x17, pc+20 (addr 0x0000ffff8bd14e28)    ;; lazy deoptimization bailout 0
0xffff8bd14e18    88  add x17, x17, x16
0xffff8bd14e1c    92  br x17
0xffff8bd14e20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14e24   100  d63f03e0       constant
0xffff8bd14e28   104  8bb06000       constant
0xffff8bd14e2c   108  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14e14  runtime entry
0xffff8bd14e20  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2325
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 144)
0xffff8bd14ea0     0  mov x2, x1
0xffff8bd14ea4     4  tbnz w2, #0, #+0x28 (addr 0xffff8bd14ecc)
0xffff8bd14ea8     8  mov x3, x0
0xffff8bd14eac    12  tbnz w3, #0, #+0x30 (addr 0xffff8bd14edc)
0xffff8bd14eb0    16  asr x2, x2, #32
0xffff8bd14eb4    20  asr x3, x3, #32
0xffff8bd14eb8    24  lsr w2, w2, w3
0xffff8bd14ebc    28  tbnz w2, #31, #+0x30 (addr 0xffff8bd14eec)
0xffff8bd14ec0    32  lsl x2, x2, #32
0xffff8bd14ec4    36  mov x0, x2
0xffff8bd14ec8    40  ret
0xffff8bd14ecc    44  movz x16, #0x0
0xffff8bd14ed0    48  sub csp, jssp, #0x10 (16)
0xffff8bd14ed4    52  stp fp, lr, [jssp, #-16]!
0xffff8bd14ed8    56  bl #+0x24 (addr 0xffff8bd14efc)
0xffff8bd14edc    60  movz x16, #0x8
0xffff8bd14ee0    64  sub csp, jssp, #0x10 (16)
0xffff8bd14ee4    68  stp fp, lr, [jssp, #-16]!
0xffff8bd14ee8    72  bl #+0x14 (addr 0xffff8bd14efc)
0xffff8bd14eec    76  movz x16, #0x10
0xffff8bd14ef0    80  sub csp, jssp, #0x10 (16)
0xffff8bd14ef4    84  stp fp, lr, [jssp, #-16]!
0xffff8bd14ef8    88  bl #+0x4 (addr 0xffff8bd14efc)
0xffff8bd14efc    92  movz x17, #0xa00000000
0xffff8bd14f00    96  sub csp, jssp, #0x10 (16)
0xffff8bd14f04   100  stp x17, cp, [jssp, #-16]!
0xffff8bd14f08   104  add fp, jssp, #0x10 (16)
0xffff8bd14f0c   108  ldr x17, pc+20 (addr 0x0000ffff8bd14f20)    ;; lazy deoptimization bailout 0
0xffff8bd14f10   112  add x17, x17, x16
0xffff8bd14f14   116  br x17
0xffff8bd14f18   120  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14f1c   124  d63f03e0       constant
0xffff8bd14f20   128  8bb06000       constant
0xffff8bd14f24   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14f0c  runtime entry
0xffff8bd14f18  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2325
type = NORMAL
name = BinaryOpICStub(SHR:Int32*Smi->Smi)
compiler = crankshaft
Instructions (size = 144)
0xffff8bd14ea0     0  mov x2, x1
0xffff8bd14ea4     4  tbnz w2, #0, #+0x28 (addr 0xffff8bd14ecc)
0xffff8bd14ea8     8  mov x3, x0
0xffff8bd14eac    12  tbnz w3, #0, #+0x30 (addr 0xffff8bd14edc)
0xffff8bd14eb0    16  asr x2, x2, #32
0xffff8bd14eb4    20  asr x3, x3, #32
0xffff8bd14eb8    24  lsr w2, w2, w3
0xffff8bd14ebc    28  tbnz w2, #31, #+0x30 (addr 0xffff8bd14eec)
0xffff8bd14ec0    32  lsl x2, x2, #32
0xffff8bd14ec4    36  mov x0, x2
0xffff8bd14ec8    40  ret
0xffff8bd14ecc    44  movz x16, #0x0
0xffff8bd14ed0    48  sub csp, jssp, #0x10 (16)
0xffff8bd14ed4    52  stp fp, lr, [jssp, #-16]!
0xffff8bd14ed8    56  bl #+0x24 (addr 0xffff8bd14efc)
0xffff8bd14edc    60  movz x16, #0x8
0xffff8bd14ee0    64  sub csp, jssp, #0x10 (16)
0xffff8bd14ee4    68  stp fp, lr, [jssp, #-16]!
0xffff8bd14ee8    72  bl #+0x14 (addr 0xffff8bd14efc)
0xffff8bd14eec    76  movz x16, #0x10
0xffff8bd14ef0    80  sub csp, jssp, #0x10 (16)
0xffff8bd14ef4    84  stp fp, lr, [jssp, #-16]!
0xffff8bd14ef8    88  bl #+0x4 (addr 0xffff8bd14efc)
0xffff8bd14efc    92  movz x17, #0xa00000000
0xffff8bd14f00    96  sub csp, jssp, #0x10 (16)
0xffff8bd14f04   100  stp x17, cp, [jssp, #-16]!
0xffff8bd14f08   104  add fp, jssp, #0x10 (16)
0xffff8bd14f0c   108  ldr x17, pc+20 (addr 0x0000ffff8bd14f20)    ;; lazy deoptimization bailout 0
0xffff8bd14f10   112  add x17, x17, x16
0xffff8bd14f14   116  br x17
0xffff8bd14f18   120  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd14f1c   124  d63f03e0       constant
0xffff8bd14f20   128  8bb06000       constant
0xffff8bd14f24   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd14f0c  runtime entry
0xffff8bd14f18  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2469
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 280)
0xffff8bd14fa0     0  mov x2, x0
0xffff8bd14fa4     4  tbnz w2, #0, #+0xb4 (addr 0xffff8bd15058)
0xffff8bd14fa8     8  tbnz w1, #0, #+0x20 (addr 0xffff8bd14fc8)
0xffff8bd14fac    12  asr x4, x1, #32
0xffff8bd14fb0    16  asr x2, x2, #32
0xffff8bd14fb4    20  lsr w2, w4, w2
0xffff8bd14fb8    24  tbnz w2, #31, #+0xb0 (addr 0xffff8bd15068)
0xffff8bd14fbc    28  lsl x2, x2, #32
0xffff8bd14fc0    32  mov x0, x2
0xffff8bd14fc4    36  ret
0xffff8bd14fc8    40  sub csp, jssp, #0x10 (16)
0xffff8bd14fcc    44  stp fp, lr, [jssp, #-16]!
0xffff8bd14fd0    48  movz fp, #0xa00000000
0xffff8bd14fd4    52  sub csp, jssp, #0x8 (8)
0xffff8bd14fd8    56  str fp, [jssp, #-8]!
0xffff8bd14fdc    60  add fp, jssp, #0x8 (8)
0xffff8bd14fe0    64  ldur x16, [x1, #-1]
0xffff8bd14fe4    68  ldr x17, [x26, #120]
0xffff8bd14fe8    72  cmp x16, x17
0xffff8bd14fec    76  b.ne #+0x30 (addr 0xffff8bd1501c)
0xffff8bd14ff0    80  ldur d30, [x1, #7]
0xffff8bd14ff4    84  fcvtzs x4, d30
0xffff8bd14ff8    88  cmp x4, #0x1 (1)
0xffff8bd14ffc    92  ccmn x4, #1, #nzcV, vc
0xffff8bd15000    96  b.vc #+0x18 (addr 0xffff8bd15018)
0xffff8bd15004   100  sub csp, jssp, #0x8 (8)
0xffff8bd15008   104  str lr, [jssp, #-8]!
0xffff8bd1500c   108  ldr x16, pc+68 (addr 0x0000ffff8bd15050)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd15010   112  blr x16
0xffff8bd15014   116  ldr lr, [jssp], #8
0xffff8bd15018   120  b #+0x24 (addr 0xffff8bd1503c)
0xffff8bd1501c   124  ldp x4, x3, [x26, #64]
0xffff8bd15020   128  cmp x1, x4
0xffff8bd15024   132  cset x4, eq
0xffff8bd15028   136  ccmp x1, x3, #nZcv, ne
0xffff8bd1502c   140  b.eq #+0x10 (addr 0xffff8bd1503c)
0xffff8bd15030   144  ldr x16, [x26, #40]
0xffff8bd15034   148  cmp x1, x16
0xffff8bd15038   152  b.ne #+0x40 (addr 0xffff8bd15078)
0xffff8bd1503c   156  ldr lr, [jssp, #16]
0xffff8bd15040   160  ldp xzr, fp, [jssp], #24
0xffff8bd15044   164  b #-0x94 (addr 0xffff8bd14fb0)
0xffff8bd15048   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd1504c   172  d63f03e0       constant
0xffff8bd15050   176  8bd0fee0       constant
0xffff8bd15054   180  0000ffff       constant
0xffff8bd15058   184  movz x16, #0x0
0xffff8bd1505c   188  sub csp, jssp, #0x10 (16)
0xffff8bd15060   192  stp fp, lr, [jssp, #-16]!
0xffff8bd15064   196  bl #+0x1c (addr 0xffff8bd15080)
0xffff8bd15068   200  movz x16, #0x8
0xffff8bd1506c   204  sub csp, jssp, #0x10 (16)
0xffff8bd15070   208  stp fp, lr, [jssp, #-16]!
0xffff8bd15074   212  bl #+0xc (addr 0xffff8bd15080)
0xffff8bd15078   216  movz x16, #0x10
0xffff8bd1507c   220  bl #+0x14 (addr 0xffff8bd15090)
0xffff8bd15080   224  movz x17, #0xa00000000
0xffff8bd15084   228  sub csp, jssp, #0x10 (16)
0xffff8bd15088   232  stp x17, cp, [jssp, #-16]!
0xffff8bd1508c   236  add fp, jssp, #0x10 (16)
0xffff8bd15090   240  ldr x17, pc+24 (addr 0x0000ffff8bd150a8)    ;; lazy deoptimization bailout 0
0xffff8bd15094   244  add x17, x17, x16
0xffff8bd15098   248  br x17
0xffff8bd1509c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd150a0   256  d63f03e0       constant
0xffff8bd150a4   260  d503201f       constant
0xffff8bd150a8   264  8bb06000       constant
0xffff8bd150ac   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff8bd1500c  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd15048  constant pool (size 16)
0xffff8bd15090  runtime entry
0xffff8bd1509c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2469
type = NORMAL
name = BinaryOpICStub(SHR:Number*Smi->Int32)
compiler = crankshaft
Instructions (size = 280)
0xffff8bd14fa0     0  mov x2, x0
0xffff8bd14fa4     4  tbnz w2, #0, #+0xb4 (addr 0xffff8bd15058)
0xffff8bd14fa8     8  tbnz w1, #0, #+0x20 (addr 0xffff8bd14fc8)
0xffff8bd14fac    12  asr x4, x1, #32
0xffff8bd14fb0    16  asr x2, x2, #32
0xffff8bd14fb4    20  lsr w2, w4, w2
0xffff8bd14fb8    24  tbnz w2, #31, #+0xb0 (addr 0xffff8bd15068)
0xffff8bd14fbc    28  lsl x2, x2, #32
0xffff8bd14fc0    32  mov x0, x2
0xffff8bd14fc4    36  ret
0xffff8bd14fc8    40  sub csp, jssp, #0x10 (16)
0xffff8bd14fcc    44  stp fp, lr, [jssp, #-16]!
0xffff8bd14fd0    48  movz fp, #0xa00000000
0xffff8bd14fd4    52  sub csp, jssp, #0x8 (8)
0xffff8bd14fd8    56  str fp, [jssp, #-8]!
0xffff8bd14fdc    60  add fp, jssp, #0x8 (8)
0xffff8bd14fe0    64  ldur x16, [x1, #-1]
0xffff8bd14fe4    68  ldr x17, [x26, #120]
0xffff8bd14fe8    72  cmp x16, x17
0xffff8bd14fec    76  b.ne #+0x30 (addr 0xffff8bd1501c)
0xffff8bd14ff0    80  ldur d30, [x1, #7]
0xffff8bd14ff4    84  fcvtzs x4, d30
0xffff8bd14ff8    88  cmp x4, #0x1 (1)
0xffff8bd14ffc    92  ccmn x4, #1, #nzcV, vc
0xffff8bd15000    96  b.vc #+0x18 (addr 0xffff8bd15018)
0xffff8bd15004   100  sub csp, jssp, #0x8 (8)
0xffff8bd15008   104  str lr, [jssp, #-8]!
0xffff8bd1500c   108  ldr x16, pc+68 (addr 0x0000ffff8bd15050)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd15010   112  blr x16
0xffff8bd15014   116  ldr lr, [jssp], #8
0xffff8bd15018   120  b #+0x24 (addr 0xffff8bd1503c)
0xffff8bd1501c   124  ldp x4, x3, [x26, #64]
0xffff8bd15020   128  cmp x1, x4
0xffff8bd15024   132  cset x4, eq
0xffff8bd15028   136  ccmp x1, x3, #nZcv, ne
0xffff8bd1502c   140  b.eq #+0x10 (addr 0xffff8bd1503c)
0xffff8bd15030   144  ldr x16, [x26, #40]
0xffff8bd15034   148  cmp x1, x16
0xffff8bd15038   152  b.ne #+0x40 (addr 0xffff8bd15078)
0xffff8bd1503c   156  ldr lr, [jssp, #16]
0xffff8bd15040   160  ldp xzr, fp, [jssp], #24
0xffff8bd15044   164  b #-0x94 (addr 0xffff8bd14fb0)
0xffff8bd15048   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd1504c   172  d63f03e0       constant
0xffff8bd15050   176  8bd0fee0       constant
0xffff8bd15054   180  0000ffff       constant
0xffff8bd15058   184  movz x16, #0x0
0xffff8bd1505c   188  sub csp, jssp, #0x10 (16)
0xffff8bd15060   192  stp fp, lr, [jssp, #-16]!
0xffff8bd15064   196  bl #+0x1c (addr 0xffff8bd15080)
0xffff8bd15068   200  movz x16, #0x8
0xffff8bd1506c   204  sub csp, jssp, #0x10 (16)
0xffff8bd15070   208  stp fp, lr, [jssp, #-16]!
0xffff8bd15074   212  bl #+0xc (addr 0xffff8bd15080)
0xffff8bd15078   216  movz x16, #0x10
0xffff8bd1507c   220  bl #+0x14 (addr 0xffff8bd15090)
0xffff8bd15080   224  movz x17, #0xa00000000
0xffff8bd15084   228  sub csp, jssp, #0x10 (16)
0xffff8bd15088   232  stp x17, cp, [jssp, #-16]!
0xffff8bd1508c   236  add fp, jssp, #0x10 (16)
0xffff8bd15090   240  ldr x17, pc+24 (addr 0x0000ffff8bd150a8)    ;; lazy deoptimization bailout 0
0xffff8bd15094   244  add x17, x17, x16
0xffff8bd15098   248  br x17
0xffff8bd1509c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd150a0   256  d63f03e0       constant
0xffff8bd150a4   260  d503201f       constant
0xffff8bd150a8   264  8bb06000       constant
0xffff8bd150ac   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff8bd1500c  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd15048  constant pool (size 16)
0xffff8bd15090  runtime entry
0xffff8bd1509c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2453
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 280)
0xffff8bd15120     0  mov x2, x0
0xffff8bd15124     4  tbnz w2, #0, #+0xb4 (addr 0xffff8bd151d8)
0xffff8bd15128     8  tbnz w1, #0, #+0x20 (addr 0xffff8bd15148)
0xffff8bd1512c    12  asr x4, x1, #32
0xffff8bd15130    16  asr x2, x2, #32
0xffff8bd15134    20  lsr w2, w4, w2
0xffff8bd15138    24  tbnz w2, #31, #+0xb0 (addr 0xffff8bd151e8)
0xffff8bd1513c    28  lsl x2, x2, #32
0xffff8bd15140    32  mov x0, x2
0xffff8bd15144    36  ret
0xffff8bd15148    40  sub csp, jssp, #0x10 (16)
0xffff8bd1514c    44  stp fp, lr, [jssp, #-16]!
0xffff8bd15150    48  movz fp, #0xa00000000
0xffff8bd15154    52  sub csp, jssp, #0x8 (8)
0xffff8bd15158    56  str fp, [jssp, #-8]!
0xffff8bd1515c    60  add fp, jssp, #0x8 (8)
0xffff8bd15160    64  ldur x16, [x1, #-1]
0xffff8bd15164    68  ldr x17, [x26, #120]
0xffff8bd15168    72  cmp x16, x17
0xffff8bd1516c    76  b.ne #+0x30 (addr 0xffff8bd1519c)
0xffff8bd15170    80  ldur d30, [x1, #7]
0xffff8bd15174    84  fcvtzs x4, d30
0xffff8bd15178    88  cmp x4, #0x1 (1)
0xffff8bd1517c    92  ccmn x4, #1, #nzcV, vc
0xffff8bd15180    96  b.vc #+0x18 (addr 0xffff8bd15198)
0xffff8bd15184   100  sub csp, jssp, #0x8 (8)
0xffff8bd15188   104  str lr, [jssp, #-8]!
0xffff8bd1518c   108  ldr x16, pc+68 (addr 0x0000ffff8bd151d0)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd15190   112  blr x16
0xffff8bd15194   116  ldr lr, [jssp], #8
0xffff8bd15198   120  b #+0x24 (addr 0xffff8bd151bc)
0xffff8bd1519c   124  ldp x4, x3, [x26, #64]
0xffff8bd151a0   128  cmp x1, x4
0xffff8bd151a4   132  cset x4, eq
0xffff8bd151a8   136  ccmp x1, x3, #nZcv, ne
0xffff8bd151ac   140  b.eq #+0x10 (addr 0xffff8bd151bc)
0xffff8bd151b0   144  ldr x16, [x26, #40]
0xffff8bd151b4   148  cmp x1, x16
0xffff8bd151b8   152  b.ne #+0x40 (addr 0xffff8bd151f8)
0xffff8bd151bc   156  ldr lr, [jssp, #16]
0xffff8bd151c0   160  ldp xzr, fp, [jssp], #24
0xffff8bd151c4   164  b #-0x94 (addr 0xffff8bd15130)
0xffff8bd151c8   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd151cc   172  d63f03e0       constant
0xffff8bd151d0   176  8bd0fee0       constant
0xffff8bd151d4   180  0000ffff       constant
0xffff8bd151d8   184  movz x16, #0x0
0xffff8bd151dc   188  sub csp, jssp, #0x10 (16)
0xffff8bd151e0   192  stp fp, lr, [jssp, #-16]!
0xffff8bd151e4   196  bl #+0x1c (addr 0xffff8bd15200)
0xffff8bd151e8   200  movz x16, #0x8
0xffff8bd151ec   204  sub csp, jssp, #0x10 (16)
0xffff8bd151f0   208  stp fp, lr, [jssp, #-16]!
0xffff8bd151f4   212  bl #+0xc (addr 0xffff8bd15200)
0xffff8bd151f8   216  movz x16, #0x10
0xffff8bd151fc   220  bl #+0x14 (addr 0xffff8bd15210)
0xffff8bd15200   224  movz x17, #0xa00000000
0xffff8bd15204   228  sub csp, jssp, #0x10 (16)
0xffff8bd15208   232  stp x17, cp, [jssp, #-16]!
0xffff8bd1520c   236  add fp, jssp, #0x10 (16)
0xffff8bd15210   240  ldr x17, pc+24 (addr 0x0000ffff8bd15228)    ;; lazy deoptimization bailout 0
0xffff8bd15214   244  add x17, x17, x16
0xffff8bd15218   248  br x17
0xffff8bd1521c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd15220   256  d63f03e0       constant
0xffff8bd15224   260  d503201f       constant
0xffff8bd15228   264  8bb06000       constant
0xffff8bd1522c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff8bd1518c  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd151c8  constant pool (size 16)
0xffff8bd15210  runtime entry
0xffff8bd1521c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2453
type = NORMAL
name = BinaryOpICStub(SHR:Number*Smi->Smi)
compiler = crankshaft
Instructions (size = 280)
0xffff8bd15120     0  mov x2, x0
0xffff8bd15124     4  tbnz w2, #0, #+0xb4 (addr 0xffff8bd151d8)
0xffff8bd15128     8  tbnz w1, #0, #+0x20 (addr 0xffff8bd15148)
0xffff8bd1512c    12  asr x4, x1, #32
0xffff8bd15130    16  asr x2, x2, #32
0xffff8bd15134    20  lsr w2, w4, w2
0xffff8bd15138    24  tbnz w2, #31, #+0xb0 (addr 0xffff8bd151e8)
0xffff8bd1513c    28  lsl x2, x2, #32
0xffff8bd15140    32  mov x0, x2
0xffff8bd15144    36  ret
0xffff8bd15148    40  sub csp, jssp, #0x10 (16)
0xffff8bd1514c    44  stp fp, lr, [jssp, #-16]!
0xffff8bd15150    48  movz fp, #0xa00000000
0xffff8bd15154    52  sub csp, jssp, #0x8 (8)
0xffff8bd15158    56  str fp, [jssp, #-8]!
0xffff8bd1515c    60  add fp, jssp, #0x8 (8)
0xffff8bd15160    64  ldur x16, [x1, #-1]
0xffff8bd15164    68  ldr x17, [x26, #120]
0xffff8bd15168    72  cmp x16, x17
0xffff8bd1516c    76  b.ne #+0x30 (addr 0xffff8bd1519c)
0xffff8bd15170    80  ldur d30, [x1, #7]
0xffff8bd15174    84  fcvtzs x4, d30
0xffff8bd15178    88  cmp x4, #0x1 (1)
0xffff8bd1517c    92  ccmn x4, #1, #nzcV, vc
0xffff8bd15180    96  b.vc #+0x18 (addr 0xffff8bd15198)
0xffff8bd15184   100  sub csp, jssp, #0x8 (8)
0xffff8bd15188   104  str lr, [jssp, #-8]!
0xffff8bd1518c   108  ldr x16, pc+68 (addr 0x0000ffff8bd151d0)    ;; code: STUB, DoubleToIStub, minor: 127233
0xffff8bd15190   112  blr x16
0xffff8bd15194   116  ldr lr, [jssp], #8
0xffff8bd15198   120  b #+0x24 (addr 0xffff8bd151bc)
0xffff8bd1519c   124  ldp x4, x3, [x26, #64]
0xffff8bd151a0   128  cmp x1, x4
0xffff8bd151a4   132  cset x4, eq
0xffff8bd151a8   136  ccmp x1, x3, #nZcv, ne
0xffff8bd151ac   140  b.eq #+0x10 (addr 0xffff8bd151bc)
0xffff8bd151b0   144  ldr x16, [x26, #40]
0xffff8bd151b4   148  cmp x1, x16
0xffff8bd151b8   152  b.ne #+0x40 (addr 0xffff8bd151f8)
0xffff8bd151bc   156  ldr lr, [jssp, #16]
0xffff8bd151c0   160  ldp xzr, fp, [jssp], #24
0xffff8bd151c4   164  b #-0x94 (addr 0xffff8bd15130)
0xffff8bd151c8   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd151cc   172  d63f03e0       constant
0xffff8bd151d0   176  8bd0fee0       constant
0xffff8bd151d4   180  0000ffff       constant
0xffff8bd151d8   184  movz x16, #0x0
0xffff8bd151dc   188  sub csp, jssp, #0x10 (16)
0xffff8bd151e0   192  stp fp, lr, [jssp, #-16]!
0xffff8bd151e4   196  bl #+0x1c (addr 0xffff8bd15200)
0xffff8bd151e8   200  movz x16, #0x8
0xffff8bd151ec   204  sub csp, jssp, #0x10 (16)
0xffff8bd151f0   208  stp fp, lr, [jssp, #-16]!
0xffff8bd151f4   212  bl #+0xc (addr 0xffff8bd15200)
0xffff8bd151f8   216  movz x16, #0x10
0xffff8bd151fc   220  bl #+0x14 (addr 0xffff8bd15210)
0xffff8bd15200   224  movz x17, #0xa00000000
0xffff8bd15204   228  sub csp, jssp, #0x10 (16)
0xffff8bd15208   232  stp x17, cp, [jssp, #-16]!
0xffff8bd1520c   236  add fp, jssp, #0x10 (16)
0xffff8bd15210   240  ldr x17, pc+24 (addr 0x0000ffff8bd15228)    ;; lazy deoptimization bailout 0
0xffff8bd15214   244  add x17, x17, x16
0xffff8bd15218   248  br x17
0xffff8bd1521c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd15220   256  d63f03e0       constant
0xffff8bd15224   260  d503201f       constant
0xffff8bd15228   264  8bb06000       constant
0xffff8bd1522c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff8bd1518c  code target (STUB)  (0xffff8bd0fee0)
0xffff8bd151c8  constant pool (size 16)
0xffff8bd15210  runtime entry
0xffff8bd1521c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2197
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 144)
0xffff8bd152a0     0  mov x2, x1
0xffff8bd152a4     4  tbnz w2, #0, #+0x28 (addr 0xffff8bd152cc)
0xffff8bd152a8     8  mov x3, x0
0xffff8bd152ac    12  tbnz w3, #0, #+0x30 (addr 0xffff8bd152dc)
0xffff8bd152b0    16  asr x2, x2, #32
0xffff8bd152b4    20  asr x3, x3, #32
0xffff8bd152b8    24  lsr w2, w2, w3
0xffff8bd152bc    28  tbnz w2, #31, #+0x30 (addr 0xffff8bd152ec)
0xffff8bd152c0    32  lsl x2, x2, #32
0xffff8bd152c4    36  mov x0, x2
0xffff8bd152c8    40  ret
0xffff8bd152cc    44  movz x16, #0x0
0xffff8bd152d0    48  sub csp, jssp, #0x10 (16)
0xffff8bd152d4    52  stp fp, lr, [jssp, #-16]!
0xffff8bd152d8    56  bl #+0x24 (addr 0xffff8bd152fc)
0xffff8bd152dc    60  movz x16, #0x8
0xffff8bd152e0    64  sub csp, jssp, #0x10 (16)
0xffff8bd152e4    68  stp fp, lr, [jssp, #-16]!
0xffff8bd152e8    72  bl #+0x14 (addr 0xffff8bd152fc)
0xffff8bd152ec    76  movz x16, #0x10
0xffff8bd152f0    80  sub csp, jssp, #0x10 (16)
0xffff8bd152f4    84  stp fp, lr, [jssp, #-16]!
0xffff8bd152f8    88  bl #+0x4 (addr 0xffff8bd152fc)
0xffff8bd152fc    92  movz x17, #0xa00000000
0xffff8bd15300    96  sub csp, jssp, #0x10 (16)
0xffff8bd15304   100  stp x17, cp, [jssp, #-16]!
0xffff8bd15308   104  add fp, jssp, #0x10 (16)
0xffff8bd1530c   108  ldr x17, pc+20 (addr 0x0000ffff8bd15320)    ;; lazy deoptimization bailout 0
0xffff8bd15310   112  add x17, x17, x16
0xffff8bd15314   116  br x17
0xffff8bd15318   120  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd1531c   124  d63f03e0       constant
0xffff8bd15320   128  8bb06000       constant
0xffff8bd15324   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd1530c  runtime entry
0xffff8bd15318  constant pool (size 16)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2197
type = NORMAL
name = BinaryOpICStub(SHR:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 144)
0xffff8bd152a0     0  mov x2, x1
0xffff8bd152a4     4  tbnz w2, #0, #+0x28 (addr 0xffff8bd152cc)
0xffff8bd152a8     8  mov x3, x0
0xffff8bd152ac    12  tbnz w3, #0, #+0x30 (addr 0xffff8bd152dc)
0xffff8bd152b0    16  asr x2, x2, #32
0xffff8bd152b4    20  asr x3, x3, #32
0xffff8bd152b8    24  lsr w2, w2, w3
0xffff8bd152bc    28  tbnz w2, #31, #+0x30 (addr 0xffff8bd152ec)
0xffff8bd152c0    32  lsl x2, x2, #32
0xffff8bd152c4    36  mov x0, x2
0xffff8bd152c8    40  ret
0xffff8bd152cc    44  movz x16, #0x0
0xffff8bd152d0    48  sub csp, jssp, #0x10 (16)
0xffff8bd152d4    52  stp fp, lr, [jssp, #-16]!
0xffff8bd152d8    56  bl #+0x24 (addr 0xffff8bd152fc)
0xffff8bd152dc    60  movz x16, #0x8
0xffff8bd152e0    64  sub csp, jssp, #0x10 (16)
0xffff8bd152e4    68  stp fp, lr, [jssp, #-16]!
0xffff8bd152e8    72  bl #+0x14 (addr 0xffff8bd152fc)
0xffff8bd152ec    76  movz x16, #0x10
0xffff8bd152f0    80  sub csp, jssp, #0x10 (16)
0xffff8bd152f4    84  stp fp, lr, [jssp, #-16]!
0xffff8bd152f8    88  bl #+0x4 (addr 0xffff8bd152fc)
0xffff8bd152fc    92  movz x17, #0xa00000000
0xffff8bd15300    96  sub csp, jssp, #0x10 (16)
0xffff8bd15304   100  stp x17, cp, [jssp, #-16]!
0xffff8bd15308   104  add fp, jssp, #0x10 (16)
0xffff8bd1530c   108  ldr x17, pc+20 (addr 0x0000ffff8bd15320)    ;; lazy deoptimization bailout 0
0xffff8bd15310   112  add x17, x17, x16
0xffff8bd15314   116  br x17
0xffff8bd15318   120  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd1531c   124  d63f03e0       constant
0xffff8bd15320   128  8bb06000       constant
0xffff8bd15324   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd1530c  runtime entry
0xffff8bd15318  constant pool (size 16)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4392
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff8bd153a0     0  mov x2, x1
0xffff8bd153a4     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd153c0)
0xffff8bd153a8     8  mov x3, x0
0xffff8bd153ac    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd153d0)
0xffff8bd153b0    16  subs x2, x2, x3
0xffff8bd153b4    20  b.vs #+0x2c (addr 0xffff8bd153e0)
0xffff8bd153b8    24  mov x0, x2
0xffff8bd153bc    28  ret
0xffff8bd153c0    32  movz x16, #0x0
0xffff8bd153c4    36  sub csp, jssp, #0x10 (16)
0xffff8bd153c8    40  stp fp, lr, [jssp, #-16]!
0xffff8bd153cc    44  bl #+0x24 (addr 0xffff8bd153f0)
0xffff8bd153d0    48  movz x16, #0x8
0xffff8bd153d4    52  sub csp, jssp, #0x10 (16)
0xffff8bd153d8    56  stp fp, lr, [jssp, #-16]!
0xffff8bd153dc    60  bl #+0x14 (addr 0xffff8bd153f0)
0xffff8bd153e0    64  movz x16, #0x10
0xffff8bd153e4    68  sub csp, jssp, #0x10 (16)
0xffff8bd153e8    72  stp fp, lr, [jssp, #-16]!
0xffff8bd153ec    76  bl #+0x4 (addr 0xffff8bd153f0)
0xffff8bd153f0    80  movz x17, #0xa00000000
0xffff8bd153f4    84  sub csp, jssp, #0x10 (16)
0xffff8bd153f8    88  stp x17, cp, [jssp, #-16]!
0xffff8bd153fc    92  add fp, jssp, #0x10 (16)
0xffff8bd15400    96  ldr x17, pc+24 (addr 0x0000ffff8bd15418)    ;; lazy deoptimization bailout 0
0xffff8bd15404   100  add x17, x17, x16
0xffff8bd15408   104  br x17
0xffff8bd1540c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd15410   112  d63f03e0       constant
0xffff8bd15414   116  d503201f       constant
0xffff8bd15418   120  8bb06000       constant
0xffff8bd1541c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd15400  runtime entry
0xffff8bd1540c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4392
type = NORMAL
name = BinaryOpICStub(SUB:Int32*Int32->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff8bd153a0     0  mov x2, x1
0xffff8bd153a4     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd153c0)
0xffff8bd153a8     8  mov x3, x0
0xffff8bd153ac    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd153d0)
0xffff8bd153b0    16  subs x2, x2, x3
0xffff8bd153b4    20  b.vs #+0x2c (addr 0xffff8bd153e0)
0xffff8bd153b8    24  mov x0, x2
0xffff8bd153bc    28  ret
0xffff8bd153c0    32  movz x16, #0x0
0xffff8bd153c4    36  sub csp, jssp, #0x10 (16)
0xffff8bd153c8    40  stp fp, lr, [jssp, #-16]!
0xffff8bd153cc    44  bl #+0x24 (addr 0xffff8bd153f0)
0xffff8bd153d0    48  movz x16, #0x8
0xffff8bd153d4    52  sub csp, jssp, #0x10 (16)
0xffff8bd153d8    56  stp fp, lr, [jssp, #-16]!
0xffff8bd153dc    60  bl #+0x14 (addr 0xffff8bd153f0)
0xffff8bd153e0    64  movz x16, #0x10
0xffff8bd153e4    68  sub csp, jssp, #0x10 (16)
0xffff8bd153e8    72  stp fp, lr, [jssp, #-16]!
0xffff8bd153ec    76  bl #+0x4 (addr 0xffff8bd153f0)
0xffff8bd153f0    80  movz x17, #0xa00000000
0xffff8bd153f4    84  sub csp, jssp, #0x10 (16)
0xffff8bd153f8    88  stp x17, cp, [jssp, #-16]!
0xffff8bd153fc    92  add fp, jssp, #0x10 (16)
0xffff8bd15400    96  ldr x17, pc+24 (addr 0x0000ffff8bd15418)    ;; lazy deoptimization bailout 0
0xffff8bd15404   100  add x17, x17, x16
0xffff8bd15408   104  br x17
0xffff8bd1540c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd15410   112  d63f03e0       constant
0xffff8bd15414   116  d503201f       constant
0xffff8bd15418   120  8bb06000       constant
0xffff8bd1541c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd15400  runtime entry
0xffff8bd1540c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6456
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd154a0     0  mov x2, x1
0xffff8bd154a4     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd15598)
0xffff8bd154a8     8  tbz w0, #0, #+0x34 (addr 0xffff8bd154dc)
0xffff8bd154ac    12  ldur x16, [x0, #-1]
0xffff8bd154b0    16  ldr x17, [x26, #120]
0xffff8bd154b4    20  cmp x16, x17
0xffff8bd154b8    24  b.ne #+0xc (addr 0xffff8bd154c4)
0xffff8bd154bc    28  ldur d0, [x0, #7]
0xffff8bd154c0    32  b #+0x20 (addr 0xffff8bd154e0)
0xffff8bd154c4    36  ldr x16, [x26, #40]
0xffff8bd154c8    40  cmp x0, x16
0xffff8bd154cc    44  b.ne #+0xdc (addr 0xffff8bd155a8)
0xffff8bd154d0    48  ldr x3, [x26, #928]
0xffff8bd154d4    52  ldur d0, [x3, #7]
0xffff8bd154d8    56  b #+0x8 (addr 0xffff8bd154e0)
0xffff8bd154dc    60  scvtf d0, x0, #32
0xffff8bd154e0    64  scvtf d1, x2, #32
0xffff8bd154e4    68  fsub d0, d1, d0
0xffff8bd154e8    72  movz x1, #0xe2c0
0xffff8bd154ec    76  movk x1, #0x2cb8, lsl #16
0xffff8bd154f0    80  ldp x2, x0, [x1]
0xffff8bd154f4    84  adds x16, x2, #0x10 (16)
0xffff8bd154f8    88  ccmp x16, x0, #nzCv, lo
0xffff8bd154fc    92  b.hi #+0x20 (addr 0xffff8bd1551c)
0xffff8bd15500    96  str x16, [x1]
0xffff8bd15504   100  ldr x1, [x26, #120]
0xffff8bd15508   104  str x1, [x2]
0xffff8bd1550c   108  orr x2, x2, #0x1
0xffff8bd15510   112  stur d0, [x2, #7]
0xffff8bd15514   116  mov x0, x2
0xffff8bd15518   120  ret
0xffff8bd1551c   124  sub csp, jssp, #0x10 (16)
0xffff8bd15520   128  stp fp, lr, [jssp, #-16]!
0xffff8bd15524   132  movz fp, #0xa00000000
0xffff8bd15528   136  sub csp, jssp, #0x8 (8)
0xffff8bd1552c   140  str fp, [jssp, #-8]!
0xffff8bd15530   144  add fp, jssp, #0x8 (8)
0xffff8bd15534   148  movz x2, #0x0
0xffff8bd15538   152  mov x16, lr
0xffff8bd1553c   156  ldr x17, pc+68 (addr 0x0000ffff8bd15580)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd15540   160  blr x17
0xffff8bd15544   164  ldur cp, [fp, #-8]
0xffff8bd15548   168  movz x0, #0x0
0xffff8bd1554c   172  movz x1, #0x4b48
0xffff8bd15550   176  movk x1, #0xe4, lsl #16
0xffff8bd15554   180  ldr x16, pc+52 (addr 0x0000ffff8bd15588)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd15558   184  blr x16
0xffff8bd1555c   188  str x0, [jssp, #16]
0xffff8bd15560   192  ldr x16, pc+48 (addr 0x0000ffff8bd15590)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd15564   196  blr x16
0xffff8bd15568   200  ldr lr, [jssp, #16]
0xffff8bd1556c   204  ldp xzr, fp, [jssp], #24
0xffff8bd15570   208  b #-0x60 (addr 0xffff8bd15510)
0xffff8bd15574   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd15578   216  d63f03e0       constant
0xffff8bd1557c   220  d503201f       constant
0xffff8bd15580   224  8bd06820       constant
0xffff8bd15584   228  0000ffff       constant
0xffff8bd15588   232  8bd06260       constant
0xffff8bd1558c   236  0000ffff       constant
0xffff8bd15590   240  8bd068e0       constant
0xffff8bd15594   244  0000ffff       constant
0xffff8bd15598   248  movz x16, #0x0
0xffff8bd1559c   252  sub csp, jssp, #0x10 (16)
0xffff8bd155a0   256  stp fp, lr, [jssp, #-16]!
0xffff8bd155a4   260  bl #+0x14 (addr 0xffff8bd155b8)
0xffff8bd155a8   264  movz x16, #0x8
0xffff8bd155ac   268  sub csp, jssp, #0x10 (16)
0xffff8bd155b0   272  stp fp, lr, [jssp, #-16]!
0xffff8bd155b4   276  bl #+0x4 (addr 0xffff8bd155b8)
0xffff8bd155b8   280  movz x17, #0xa00000000
0xffff8bd155bc   284  sub csp, jssp, #0x10 (16)
0xffff8bd155c0   288  stp x17, cp, [jssp, #-16]!
0xffff8bd155c4   292  add fp, jssp, #0x10 (16)
0xffff8bd155c8   296  ldr x17, pc+24 (addr 0x0000ffff8bd155e0)    ;; lazy deoptimization bailout 0
0xffff8bd155cc   300  add x17, x17, x16
0xffff8bd155d0   304  br x17
0xffff8bd155d4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd155d8   312  d63f03e0       constant
0xffff8bd155dc   316  d503201f       constant
0xffff8bd155e0   320  8bb06000       constant
0xffff8bd155e4   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd1555c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd1553c  code target (STUB)  (0xffff8bd06820)
0xffff8bd15554  code target (STUB)  (0xffff8bd06260)
0xffff8bd15560  code target (STUB)  (0xffff8bd068e0)
0xffff8bd15574  constant pool (size 36)
0xffff8bd155c8  runtime entry
0xffff8bd155d4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6456
type = NORMAL
name = BinaryOpICStub(SUB:Int32*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd154a0     0  mov x2, x1
0xffff8bd154a4     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd15598)
0xffff8bd154a8     8  tbz w0, #0, #+0x34 (addr 0xffff8bd154dc)
0xffff8bd154ac    12  ldur x16, [x0, #-1]
0xffff8bd154b0    16  ldr x17, [x26, #120]
0xffff8bd154b4    20  cmp x16, x17
0xffff8bd154b8    24  b.ne #+0xc (addr 0xffff8bd154c4)
0xffff8bd154bc    28  ldur d0, [x0, #7]
0xffff8bd154c0    32  b #+0x20 (addr 0xffff8bd154e0)
0xffff8bd154c4    36  ldr x16, [x26, #40]
0xffff8bd154c8    40  cmp x0, x16
0xffff8bd154cc    44  b.ne #+0xdc (addr 0xffff8bd155a8)
0xffff8bd154d0    48  ldr x3, [x26, #928]
0xffff8bd154d4    52  ldur d0, [x3, #7]
0xffff8bd154d8    56  b #+0x8 (addr 0xffff8bd154e0)
0xffff8bd154dc    60  scvtf d0, x0, #32
0xffff8bd154e0    64  scvtf d1, x2, #32
0xffff8bd154e4    68  fsub d0, d1, d0
0xffff8bd154e8    72  movz x1, #0xe2c0
0xffff8bd154ec    76  movk x1, #0x2cb8, lsl #16
0xffff8bd154f0    80  ldp x2, x0, [x1]
0xffff8bd154f4    84  adds x16, x2, #0x10 (16)
0xffff8bd154f8    88  ccmp x16, x0, #nzCv, lo
0xffff8bd154fc    92  b.hi #+0x20 (addr 0xffff8bd1551c)
0xffff8bd15500    96  str x16, [x1]
0xffff8bd15504   100  ldr x1, [x26, #120]
0xffff8bd15508   104  str x1, [x2]
0xffff8bd1550c   108  orr x2, x2, #0x1
0xffff8bd15510   112  stur d0, [x2, #7]
0xffff8bd15514   116  mov x0, x2
0xffff8bd15518   120  ret
0xffff8bd1551c   124  sub csp, jssp, #0x10 (16)
0xffff8bd15520   128  stp fp, lr, [jssp, #-16]!
0xffff8bd15524   132  movz fp, #0xa00000000
0xffff8bd15528   136  sub csp, jssp, #0x8 (8)
0xffff8bd1552c   140  str fp, [jssp, #-8]!
0xffff8bd15530   144  add fp, jssp, #0x8 (8)
0xffff8bd15534   148  movz x2, #0x0
0xffff8bd15538   152  mov x16, lr
0xffff8bd1553c   156  ldr x17, pc+68 (addr 0x0000ffff8bd15580)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd15540   160  blr x17
0xffff8bd15544   164  ldur cp, [fp, #-8]
0xffff8bd15548   168  movz x0, #0x0
0xffff8bd1554c   172  movz x1, #0x4b48
0xffff8bd15550   176  movk x1, #0xe4, lsl #16
0xffff8bd15554   180  ldr x16, pc+52 (addr 0x0000ffff8bd15588)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd15558   184  blr x16
0xffff8bd1555c   188  str x0, [jssp, #16]
0xffff8bd15560   192  ldr x16, pc+48 (addr 0x0000ffff8bd15590)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd15564   196  blr x16
0xffff8bd15568   200  ldr lr, [jssp, #16]
0xffff8bd1556c   204  ldp xzr, fp, [jssp], #24
0xffff8bd15570   208  b #-0x60 (addr 0xffff8bd15510)
0xffff8bd15574   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd15578   216  d63f03e0       constant
0xffff8bd1557c   220  d503201f       constant
0xffff8bd15580   224  8bd06820       constant
0xffff8bd15584   228  0000ffff       constant
0xffff8bd15588   232  8bd06260       constant
0xffff8bd1558c   236  0000ffff       constant
0xffff8bd15590   240  8bd068e0       constant
0xffff8bd15594   244  0000ffff       constant
0xffff8bd15598   248  movz x16, #0x0
0xffff8bd1559c   252  sub csp, jssp, #0x10 (16)
0xffff8bd155a0   256  stp fp, lr, [jssp, #-16]!
0xffff8bd155a4   260  bl #+0x14 (addr 0xffff8bd155b8)
0xffff8bd155a8   264  movz x16, #0x8
0xffff8bd155ac   268  sub csp, jssp, #0x10 (16)
0xffff8bd155b0   272  stp fp, lr, [jssp, #-16]!
0xffff8bd155b4   276  bl #+0x4 (addr 0xffff8bd155b8)
0xffff8bd155b8   280  movz x17, #0xa00000000
0xffff8bd155bc   284  sub csp, jssp, #0x10 (16)
0xffff8bd155c0   288  stp x17, cp, [jssp, #-16]!
0xffff8bd155c4   292  add fp, jssp, #0x10 (16)
0xffff8bd155c8   296  ldr x17, pc+24 (addr 0x0000ffff8bd155e0)    ;; lazy deoptimization bailout 0
0xffff8bd155cc   300  add x17, x17, x16
0xffff8bd155d0   304  br x17
0xffff8bd155d4   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd155d8   312  d63f03e0       constant
0xffff8bd155dc   316  d503201f       constant
0xffff8bd155e0   320  8bb06000       constant
0xffff8bd155e4   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd1555c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd1553c  code target (STUB)  (0xffff8bd06820)
0xffff8bd15554  code target (STUB)  (0xffff8bd06260)
0xffff8bd15560  code target (STUB)  (0xffff8bd068e0)
0xffff8bd15574  constant pool (size 36)
0xffff8bd155c8  runtime entry
0xffff8bd155d4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2344
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff8bd15660     0  mov x2, x1
0xffff8bd15664     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd15680)
0xffff8bd15668     8  mov x3, x0
0xffff8bd1566c    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd15690)
0xffff8bd15670    16  subs x2, x2, x3
0xffff8bd15674    20  b.vs #+0x2c (addr 0xffff8bd156a0)
0xffff8bd15678    24  mov x0, x2
0xffff8bd1567c    28  ret
0xffff8bd15680    32  movz x16, #0x0
0xffff8bd15684    36  sub csp, jssp, #0x10 (16)
0xffff8bd15688    40  stp fp, lr, [jssp, #-16]!
0xffff8bd1568c    44  bl #+0x24 (addr 0xffff8bd156b0)
0xffff8bd15690    48  movz x16, #0x8
0xffff8bd15694    52  sub csp, jssp, #0x10 (16)
0xffff8bd15698    56  stp fp, lr, [jssp, #-16]!
0xffff8bd1569c    60  bl #+0x14 (addr 0xffff8bd156b0)
0xffff8bd156a0    64  movz x16, #0x10
0xffff8bd156a4    68  sub csp, jssp, #0x10 (16)
0xffff8bd156a8    72  stp fp, lr, [jssp, #-16]!
0xffff8bd156ac    76  bl #+0x4 (addr 0xffff8bd156b0)
0xffff8bd156b0    80  movz x17, #0xa00000000
0xffff8bd156b4    84  sub csp, jssp, #0x10 (16)
0xffff8bd156b8    88  stp x17, cp, [jssp, #-16]!
0xffff8bd156bc    92  add fp, jssp, #0x10 (16)
0xffff8bd156c0    96  ldr x17, pc+24 (addr 0x0000ffff8bd156d8)    ;; lazy deoptimization bailout 0
0xffff8bd156c4   100  add x17, x17, x16
0xffff8bd156c8   104  br x17
0xffff8bd156cc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd156d0   112  d63f03e0       constant
0xffff8bd156d4   116  d503201f       constant
0xffff8bd156d8   120  8bb06000       constant
0xffff8bd156dc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd156c0  runtime entry
0xffff8bd156cc  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2344
type = NORMAL
name = BinaryOpICStub(SUB:Int32*Smi->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff8bd15660     0  mov x2, x1
0xffff8bd15664     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd15680)
0xffff8bd15668     8  mov x3, x0
0xffff8bd1566c    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd15690)
0xffff8bd15670    16  subs x2, x2, x3
0xffff8bd15674    20  b.vs #+0x2c (addr 0xffff8bd156a0)
0xffff8bd15678    24  mov x0, x2
0xffff8bd1567c    28  ret
0xffff8bd15680    32  movz x16, #0x0
0xffff8bd15684    36  sub csp, jssp, #0x10 (16)
0xffff8bd15688    40  stp fp, lr, [jssp, #-16]!
0xffff8bd1568c    44  bl #+0x24 (addr 0xffff8bd156b0)
0xffff8bd15690    48  movz x16, #0x8
0xffff8bd15694    52  sub csp, jssp, #0x10 (16)
0xffff8bd15698    56  stp fp, lr, [jssp, #-16]!
0xffff8bd1569c    60  bl #+0x14 (addr 0xffff8bd156b0)
0xffff8bd156a0    64  movz x16, #0x10
0xffff8bd156a4    68  sub csp, jssp, #0x10 (16)
0xffff8bd156a8    72  stp fp, lr, [jssp, #-16]!
0xffff8bd156ac    76  bl #+0x4 (addr 0xffff8bd156b0)
0xffff8bd156b0    80  movz x17, #0xa00000000
0xffff8bd156b4    84  sub csp, jssp, #0x10 (16)
0xffff8bd156b8    88  stp x17, cp, [jssp, #-16]!
0xffff8bd156bc    92  add fp, jssp, #0x10 (16)
0xffff8bd156c0    96  ldr x17, pc+24 (addr 0x0000ffff8bd156d8)    ;; lazy deoptimization bailout 0
0xffff8bd156c4   100  add x17, x17, x16
0xffff8bd156c8   104  br x17
0xffff8bd156cc   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd156d0   112  d63f03e0       constant
0xffff8bd156d4   116  d503201f       constant
0xffff8bd156d8   120  8bb06000       constant
0xffff8bd156dc   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd156c0  runtime entry
0xffff8bd156cc  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4536
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd15760     0  mov x2, x0
0xffff8bd15764     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd15858)
0xffff8bd15768     8  tbz w1, #0, #+0x34 (addr 0xffff8bd1579c)
0xffff8bd1576c    12  ldur x16, [x1, #-1]
0xffff8bd15770    16  ldr x17, [x26, #120]
0xffff8bd15774    20  cmp x16, x17
0xffff8bd15778    24  b.ne #+0xc (addr 0xffff8bd15784)
0xffff8bd1577c    28  ldur d0, [x1, #7]
0xffff8bd15780    32  b #+0x20 (addr 0xffff8bd157a0)
0xffff8bd15784    36  ldr x16, [x26, #40]
0xffff8bd15788    40  cmp x1, x16
0xffff8bd1578c    44  b.ne #+0xdc (addr 0xffff8bd15868)
0xffff8bd15790    48  ldr x3, [x26, #928]
0xffff8bd15794    52  ldur d0, [x3, #7]
0xffff8bd15798    56  b #+0x8 (addr 0xffff8bd157a0)
0xffff8bd1579c    60  scvtf d0, x1, #32
0xffff8bd157a0    64  scvtf d1, x2, #32
0xffff8bd157a4    68  fsub d0, d0, d1
0xffff8bd157a8    72  movz x1, #0xe2c0
0xffff8bd157ac    76  movk x1, #0x2cb8, lsl #16
0xffff8bd157b0    80  ldp x2, x0, [x1]
0xffff8bd157b4    84  adds x16, x2, #0x10 (16)
0xffff8bd157b8    88  ccmp x16, x0, #nzCv, lo
0xffff8bd157bc    92  b.hi #+0x20 (addr 0xffff8bd157dc)
0xffff8bd157c0    96  str x16, [x1]
0xffff8bd157c4   100  ldr x1, [x26, #120]
0xffff8bd157c8   104  str x1, [x2]
0xffff8bd157cc   108  orr x2, x2, #0x1
0xffff8bd157d0   112  stur d0, [x2, #7]
0xffff8bd157d4   116  mov x0, x2
0xffff8bd157d8   120  ret
0xffff8bd157dc   124  sub csp, jssp, #0x10 (16)
0xffff8bd157e0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd157e4   132  movz fp, #0xa00000000
0xffff8bd157e8   136  sub csp, jssp, #0x8 (8)
0xffff8bd157ec   140  str fp, [jssp, #-8]!
0xffff8bd157f0   144  add fp, jssp, #0x8 (8)
0xffff8bd157f4   148  movz x2, #0x0
0xffff8bd157f8   152  mov x16, lr
0xffff8bd157fc   156  ldr x17, pc+68 (addr 0x0000ffff8bd15840)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd15800   160  blr x17
0xffff8bd15804   164  ldur cp, [fp, #-8]
0xffff8bd15808   168  movz x0, #0x0
0xffff8bd1580c   172  movz x1, #0x4b48
0xffff8bd15810   176  movk x1, #0xe4, lsl #16
0xffff8bd15814   180  ldr x16, pc+52 (addr 0x0000ffff8bd15848)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd15818   184  blr x16
0xffff8bd1581c   188  str x0, [jssp, #16]
0xffff8bd15820   192  ldr x16, pc+48 (addr 0x0000ffff8bd15850)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd15824   196  blr x16
0xffff8bd15828   200  ldr lr, [jssp, #16]
0xffff8bd1582c   204  ldp xzr, fp, [jssp], #24
0xffff8bd15830   208  b #-0x60 (addr 0xffff8bd157d0)
0xffff8bd15834   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd15838   216  d63f03e0       constant
0xffff8bd1583c   220  d503201f       constant
0xffff8bd15840   224  8bd06820       constant
0xffff8bd15844   228  0000ffff       constant
0xffff8bd15848   232  8bd06260       constant
0xffff8bd1584c   236  0000ffff       constant
0xffff8bd15850   240  8bd068e0       constant
0xffff8bd15854   244  0000ffff       constant
0xffff8bd15858   248  movz x16, #0x0
0xffff8bd1585c   252  sub csp, jssp, #0x10 (16)
0xffff8bd15860   256  stp fp, lr, [jssp, #-16]!
0xffff8bd15864   260  bl #+0x14 (addr 0xffff8bd15878)
0xffff8bd15868   264  movz x16, #0x8
0xffff8bd1586c   268  sub csp, jssp, #0x10 (16)
0xffff8bd15870   272  stp fp, lr, [jssp, #-16]!
0xffff8bd15874   276  bl #+0x4 (addr 0xffff8bd15878)
0xffff8bd15878   280  movz x17, #0xa00000000
0xffff8bd1587c   284  sub csp, jssp, #0x10 (16)
0xffff8bd15880   288  stp x17, cp, [jssp, #-16]!
0xffff8bd15884   292  add fp, jssp, #0x10 (16)
0xffff8bd15888   296  ldr x17, pc+24 (addr 0x0000ffff8bd158a0)    ;; lazy deoptimization bailout 0
0xffff8bd1588c   300  add x17, x17, x16
0xffff8bd15890   304  br x17
0xffff8bd15894   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd15898   312  d63f03e0       constant
0xffff8bd1589c   316  d503201f       constant
0xffff8bd158a0   320  8bb06000       constant
0xffff8bd158a4   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd1581c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd157fc  code target (STUB)  (0xffff8bd06820)
0xffff8bd15814  code target (STUB)  (0xffff8bd06260)
0xffff8bd15820  code target (STUB)  (0xffff8bd068e0)
0xffff8bd15834  constant pool (size 36)
0xffff8bd15888  runtime entry
0xffff8bd15894  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4536
type = NORMAL
name = BinaryOpICStub(SUB:Number*Int32->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd15760     0  mov x2, x0
0xffff8bd15764     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd15858)
0xffff8bd15768     8  tbz w1, #0, #+0x34 (addr 0xffff8bd1579c)
0xffff8bd1576c    12  ldur x16, [x1, #-1]
0xffff8bd15770    16  ldr x17, [x26, #120]
0xffff8bd15774    20  cmp x16, x17
0xffff8bd15778    24  b.ne #+0xc (addr 0xffff8bd15784)
0xffff8bd1577c    28  ldur d0, [x1, #7]
0xffff8bd15780    32  b #+0x20 (addr 0xffff8bd157a0)
0xffff8bd15784    36  ldr x16, [x26, #40]
0xffff8bd15788    40  cmp x1, x16
0xffff8bd1578c    44  b.ne #+0xdc (addr 0xffff8bd15868)
0xffff8bd15790    48  ldr x3, [x26, #928]
0xffff8bd15794    52  ldur d0, [x3, #7]
0xffff8bd15798    56  b #+0x8 (addr 0xffff8bd157a0)
0xffff8bd1579c    60  scvtf d0, x1, #32
0xffff8bd157a0    64  scvtf d1, x2, #32
0xffff8bd157a4    68  fsub d0, d0, d1
0xffff8bd157a8    72  movz x1, #0xe2c0
0xffff8bd157ac    76  movk x1, #0x2cb8, lsl #16
0xffff8bd157b0    80  ldp x2, x0, [x1]
0xffff8bd157b4    84  adds x16, x2, #0x10 (16)
0xffff8bd157b8    88  ccmp x16, x0, #nzCv, lo
0xffff8bd157bc    92  b.hi #+0x20 (addr 0xffff8bd157dc)
0xffff8bd157c0    96  str x16, [x1]
0xffff8bd157c4   100  ldr x1, [x26, #120]
0xffff8bd157c8   104  str x1, [x2]
0xffff8bd157cc   108  orr x2, x2, #0x1
0xffff8bd157d0   112  stur d0, [x2, #7]
0xffff8bd157d4   116  mov x0, x2
0xffff8bd157d8   120  ret
0xffff8bd157dc   124  sub csp, jssp, #0x10 (16)
0xffff8bd157e0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd157e4   132  movz fp, #0xa00000000
0xffff8bd157e8   136  sub csp, jssp, #0x8 (8)
0xffff8bd157ec   140  str fp, [jssp, #-8]!
0xffff8bd157f0   144  add fp, jssp, #0x8 (8)
0xffff8bd157f4   148  movz x2, #0x0
0xffff8bd157f8   152  mov x16, lr
0xffff8bd157fc   156  ldr x17, pc+68 (addr 0x0000ffff8bd15840)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd15800   160  blr x17
0xffff8bd15804   164  ldur cp, [fp, #-8]
0xffff8bd15808   168  movz x0, #0x0
0xffff8bd1580c   172  movz x1, #0x4b48
0xffff8bd15810   176  movk x1, #0xe4, lsl #16
0xffff8bd15814   180  ldr x16, pc+52 (addr 0x0000ffff8bd15848)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd15818   184  blr x16
0xffff8bd1581c   188  str x0, [jssp, #16]
0xffff8bd15820   192  ldr x16, pc+48 (addr 0x0000ffff8bd15850)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd15824   196  blr x16
0xffff8bd15828   200  ldr lr, [jssp, #16]
0xffff8bd1582c   204  ldp xzr, fp, [jssp], #24
0xffff8bd15830   208  b #-0x60 (addr 0xffff8bd157d0)
0xffff8bd15834   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd15838   216  d63f03e0       constant
0xffff8bd1583c   220  d503201f       constant
0xffff8bd15840   224  8bd06820       constant
0xffff8bd15844   228  0000ffff       constant
0xffff8bd15848   232  8bd06260       constant
0xffff8bd1584c   236  0000ffff       constant
0xffff8bd15850   240  8bd068e0       constant
0xffff8bd15854   244  0000ffff       constant
0xffff8bd15858   248  movz x16, #0x0
0xffff8bd1585c   252  sub csp, jssp, #0x10 (16)
0xffff8bd15860   256  stp fp, lr, [jssp, #-16]!
0xffff8bd15864   260  bl #+0x14 (addr 0xffff8bd15878)
0xffff8bd15868   264  movz x16, #0x8
0xffff8bd1586c   268  sub csp, jssp, #0x10 (16)
0xffff8bd15870   272  stp fp, lr, [jssp, #-16]!
0xffff8bd15874   276  bl #+0x4 (addr 0xffff8bd15878)
0xffff8bd15878   280  movz x17, #0xa00000000
0xffff8bd1587c   284  sub csp, jssp, #0x10 (16)
0xffff8bd15880   288  stp x17, cp, [jssp, #-16]!
0xffff8bd15884   292  add fp, jssp, #0x10 (16)
0xffff8bd15888   296  ldr x17, pc+24 (addr 0x0000ffff8bd158a0)    ;; lazy deoptimization bailout 0
0xffff8bd1588c   300  add x17, x17, x16
0xffff8bd15890   304  br x17
0xffff8bd15894   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd15898   312  d63f03e0       constant
0xffff8bd1589c   316  d503201f       constant
0xffff8bd158a0   320  8bb06000       constant
0xffff8bd158a4   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd1581c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd157fc  code target (STUB)  (0xffff8bd06820)
0xffff8bd15814  code target (STUB)  (0xffff8bd06260)
0xffff8bd15820  code target (STUB)  (0xffff8bd068e0)
0xffff8bd15834  constant pool (size 36)
0xffff8bd15888  runtime entry
0xffff8bd15894  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6584
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 389)
0xffff8bd15920     0  tbz w1, #0, #+0x34 (addr 0xffff8bd15954)
0xffff8bd15924     4  ldur x16, [x1, #-1]
0xffff8bd15928     8  ldr x17, [x26, #120]
0xffff8bd1592c    12  cmp x16, x17
0xffff8bd15930    16  b.ne #+0xc (addr 0xffff8bd1593c)
0xffff8bd15934    20  ldur d0, [x1, #7]
0xffff8bd15938    24  b #+0x20 (addr 0xffff8bd15958)
0xffff8bd1593c    28  ldr x16, [x26, #40]
0xffff8bd15940    32  cmp x1, x16
0xffff8bd15944    36  b.ne #+0xfc (addr 0xffff8bd15a40)
0xffff8bd15948    40  ldr x2, [x26, #928]
0xffff8bd1594c    44  ldur d0, [x2, #7]
0xffff8bd15950    48  b #+0x8 (addr 0xffff8bd15958)
0xffff8bd15954    52  scvtf d0, x1, #32
0xffff8bd15958    56  tbz w0, #0, #+0x34 (addr 0xffff8bd1598c)
0xffff8bd1595c    60  ldur x16, [x0, #-1]
0xffff8bd15960    64  ldr x17, [x26, #120]
0xffff8bd15964    68  cmp x16, x17
0xffff8bd15968    72  b.ne #+0xc (addr 0xffff8bd15974)
0xffff8bd1596c    76  ldur d1, [x0, #7]
0xffff8bd15970    80  b #+0x20 (addr 0xffff8bd15990)
0xffff8bd15974    84  ldr x16, [x26, #40]
0xffff8bd15978    88  cmp x0, x16
0xffff8bd1597c    92  b.ne #+0xd4 (addr 0xffff8bd15a50)
0xffff8bd15980    96  ldr x2, [x26, #928]
0xffff8bd15984   100  ldur d1, [x2, #7]
0xffff8bd15988   104  b #+0x8 (addr 0xffff8bd15990)
0xffff8bd1598c   108  scvtf d1, x0, #32
0xffff8bd15990   112  fsub d0, d0, d1
0xffff8bd15994   116  movz x1, #0xe2c0
0xffff8bd15998   120  movk x1, #0x2cb8, lsl #16
0xffff8bd1599c   124  ldp x2, x0, [x1]
0xffff8bd159a0   128  adds x16, x2, #0x10 (16)
0xffff8bd159a4   132  ccmp x16, x0, #nzCv, lo
0xffff8bd159a8   136  b.hi #+0x20 (addr 0xffff8bd159c8)
0xffff8bd159ac   140  str x16, [x1]
0xffff8bd159b0   144  ldr x1, [x26, #120]
0xffff8bd159b4   148  str x1, [x2]
0xffff8bd159b8   152  orr x2, x2, #0x1
0xffff8bd159bc   156  stur d0, [x2, #7]
0xffff8bd159c0   160  mov x0, x2
0xffff8bd159c4   164  ret
0xffff8bd159c8   168  sub csp, jssp, #0x10 (16)
0xffff8bd159cc   172  stp fp, lr, [jssp, #-16]!
0xffff8bd159d0   176  movz fp, #0xa00000000
0xffff8bd159d4   180  sub csp, jssp, #0x8 (8)
0xffff8bd159d8   184  str fp, [jssp, #-8]!
0xffff8bd159dc   188  add fp, jssp, #0x8 (8)
0xffff8bd159e0   192  movz x2, #0x0
0xffff8bd159e4   196  mov x16, lr
0xffff8bd159e8   200  ldr x17, pc+64 (addr 0x0000ffff8bd15a28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd159ec   204  blr x17
0xffff8bd159f0   208  ldur cp, [fp, #-8]
0xffff8bd159f4   212  movz x0, #0x0
0xffff8bd159f8   216  movz x1, #0x4b48
0xffff8bd159fc   220  movk x1, #0xe4, lsl #16
0xffff8bd15a00   224  ldr x16, pc+48 (addr 0x0000ffff8bd15a30)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd15a04   228  blr x16
0xffff8bd15a08   232  str x0, [jssp, #16]
0xffff8bd15a0c   236  ldr x16, pc+44 (addr 0x0000ffff8bd15a38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd15a10   240  blr x16
0xffff8bd15a14   244  ldr lr, [jssp, #16]
0xffff8bd15a18   248  ldp xzr, fp, [jssp], #24
0xffff8bd15a1c   252  b #-0x60 (addr 0xffff8bd159bc)
0xffff8bd15a20   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd15a24   260  d63f03e0       constant
0xffff8bd15a28   264  8bd06820       constant
0xffff8bd15a2c   268  0000ffff       constant
0xffff8bd15a30   272  8bd06260       constant
0xffff8bd15a34   276  0000ffff       constant
0xffff8bd15a38   280  8bd068e0       constant
0xffff8bd15a3c   284  0000ffff       constant
0xffff8bd15a40   288  movz x16, #0x0
0xffff8bd15a44   292  sub csp, jssp, #0x10 (16)
0xffff8bd15a48   296  stp fp, lr, [jssp, #-16]!
0xffff8bd15a4c   300  bl #+0x14 (addr 0xffff8bd15a60)
0xffff8bd15a50   304  movz x16, #0x8
0xffff8bd15a54   308  sub csp, jssp, #0x10 (16)
0xffff8bd15a58   312  stp fp, lr, [jssp, #-16]!
0xffff8bd15a5c   316  bl #+0x4 (addr 0xffff8bd15a60)
0xffff8bd15a60   320  movz x17, #0xa00000000
0xffff8bd15a64   324  sub csp, jssp, #0x10 (16)
0xffff8bd15a68   328  stp x17, cp, [jssp, #-16]!
0xffff8bd15a6c   332  add fp, jssp, #0x10 (16)
0xffff8bd15a70   336  ldr x17, pc+24 (addr 0x0000ffff8bd15a88)    ;; lazy deoptimization bailout 0
0xffff8bd15a74   340  add x17, x17, x16
0xffff8bd15a78   344  br x17
0xffff8bd15a7c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd15a80   352  d63f03e0       constant
0xffff8bd15a84   356  d503201f       constant
0xffff8bd15a88   360  8bb06000       constant
0xffff8bd15a8c   364  0000ffff       constant


Safepoints (size = 21)
0xffff8bd15a08   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd159e8  code target (STUB)  (0xffff8bd06820)
0xffff8bd15a00  code target (STUB)  (0xffff8bd06260)
0xffff8bd15a0c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd15a20  constant pool (size 32)
0xffff8bd15a70  runtime entry
0xffff8bd15a7c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6584
type = NORMAL
name = BinaryOpICStub(SUB:Number*Number->Number)
compiler = crankshaft
Instructions (size = 389)
0xffff8bd15920     0  tbz w1, #0, #+0x34 (addr 0xffff8bd15954)
0xffff8bd15924     4  ldur x16, [x1, #-1]
0xffff8bd15928     8  ldr x17, [x26, #120]
0xffff8bd1592c    12  cmp x16, x17
0xffff8bd15930    16  b.ne #+0xc (addr 0xffff8bd1593c)
0xffff8bd15934    20  ldur d0, [x1, #7]
0xffff8bd15938    24  b #+0x20 (addr 0xffff8bd15958)
0xffff8bd1593c    28  ldr x16, [x26, #40]
0xffff8bd15940    32  cmp x1, x16
0xffff8bd15944    36  b.ne #+0xfc (addr 0xffff8bd15a40)
0xffff8bd15948    40  ldr x2, [x26, #928]
0xffff8bd1594c    44  ldur d0, [x2, #7]
0xffff8bd15950    48  b #+0x8 (addr 0xffff8bd15958)
0xffff8bd15954    52  scvtf d0, x1, #32
0xffff8bd15958    56  tbz w0, #0, #+0x34 (addr 0xffff8bd1598c)
0xffff8bd1595c    60  ldur x16, [x0, #-1]
0xffff8bd15960    64  ldr x17, [x26, #120]
0xffff8bd15964    68  cmp x16, x17
0xffff8bd15968    72  b.ne #+0xc (addr 0xffff8bd15974)
0xffff8bd1596c    76  ldur d1, [x0, #7]
0xffff8bd15970    80  b #+0x20 (addr 0xffff8bd15990)
0xffff8bd15974    84  ldr x16, [x26, #40]
0xffff8bd15978    88  cmp x0, x16
0xffff8bd1597c    92  b.ne #+0xd4 (addr 0xffff8bd15a50)
0xffff8bd15980    96  ldr x2, [x26, #928]
0xffff8bd15984   100  ldur d1, [x2, #7]
0xffff8bd15988   104  b #+0x8 (addr 0xffff8bd15990)
0xffff8bd1598c   108  scvtf d1, x0, #32
0xffff8bd15990   112  fsub d0, d0, d1
0xffff8bd15994   116  movz x1, #0xe2c0
0xffff8bd15998   120  movk x1, #0x2cb8, lsl #16
0xffff8bd1599c   124  ldp x2, x0, [x1]
0xffff8bd159a0   128  adds x16, x2, #0x10 (16)
0xffff8bd159a4   132  ccmp x16, x0, #nzCv, lo
0xffff8bd159a8   136  b.hi #+0x20 (addr 0xffff8bd159c8)
0xffff8bd159ac   140  str x16, [x1]
0xffff8bd159b0   144  ldr x1, [x26, #120]
0xffff8bd159b4   148  str x1, [x2]
0xffff8bd159b8   152  orr x2, x2, #0x1
0xffff8bd159bc   156  stur d0, [x2, #7]
0xffff8bd159c0   160  mov x0, x2
0xffff8bd159c4   164  ret
0xffff8bd159c8   168  sub csp, jssp, #0x10 (16)
0xffff8bd159cc   172  stp fp, lr, [jssp, #-16]!
0xffff8bd159d0   176  movz fp, #0xa00000000
0xffff8bd159d4   180  sub csp, jssp, #0x8 (8)
0xffff8bd159d8   184  str fp, [jssp, #-8]!
0xffff8bd159dc   188  add fp, jssp, #0x8 (8)
0xffff8bd159e0   192  movz x2, #0x0
0xffff8bd159e4   196  mov x16, lr
0xffff8bd159e8   200  ldr x17, pc+64 (addr 0x0000ffff8bd15a28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd159ec   204  blr x17
0xffff8bd159f0   208  ldur cp, [fp, #-8]
0xffff8bd159f4   212  movz x0, #0x0
0xffff8bd159f8   216  movz x1, #0x4b48
0xffff8bd159fc   220  movk x1, #0xe4, lsl #16
0xffff8bd15a00   224  ldr x16, pc+48 (addr 0x0000ffff8bd15a30)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd15a04   228  blr x16
0xffff8bd15a08   232  str x0, [jssp, #16]
0xffff8bd15a0c   236  ldr x16, pc+44 (addr 0x0000ffff8bd15a38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd15a10   240  blr x16
0xffff8bd15a14   244  ldr lr, [jssp, #16]
0xffff8bd15a18   248  ldp xzr, fp, [jssp], #24
0xffff8bd15a1c   252  b #-0x60 (addr 0xffff8bd159bc)
0xffff8bd15a20   256  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd15a24   260  d63f03e0       constant
0xffff8bd15a28   264  8bd06820       constant
0xffff8bd15a2c   268  0000ffff       constant
0xffff8bd15a30   272  8bd06260       constant
0xffff8bd15a34   276  0000ffff       constant
0xffff8bd15a38   280  8bd068e0       constant
0xffff8bd15a3c   284  0000ffff       constant
0xffff8bd15a40   288  movz x16, #0x0
0xffff8bd15a44   292  sub csp, jssp, #0x10 (16)
0xffff8bd15a48   296  stp fp, lr, [jssp, #-16]!
0xffff8bd15a4c   300  bl #+0x14 (addr 0xffff8bd15a60)
0xffff8bd15a50   304  movz x16, #0x8
0xffff8bd15a54   308  sub csp, jssp, #0x10 (16)
0xffff8bd15a58   312  stp fp, lr, [jssp, #-16]!
0xffff8bd15a5c   316  bl #+0x4 (addr 0xffff8bd15a60)
0xffff8bd15a60   320  movz x17, #0xa00000000
0xffff8bd15a64   324  sub csp, jssp, #0x10 (16)
0xffff8bd15a68   328  stp x17, cp, [jssp, #-16]!
0xffff8bd15a6c   332  add fp, jssp, #0x10 (16)
0xffff8bd15a70   336  ldr x17, pc+24 (addr 0x0000ffff8bd15a88)    ;; lazy deoptimization bailout 0
0xffff8bd15a74   340  add x17, x17, x16
0xffff8bd15a78   344  br x17
0xffff8bd15a7c   348  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd15a80   352  d63f03e0       constant
0xffff8bd15a84   356  d503201f       constant
0xffff8bd15a88   360  8bb06000       constant
0xffff8bd15a8c   364  0000ffff       constant


Safepoints (size = 21)
0xffff8bd15a08   232  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd159e8  code target (STUB)  (0xffff8bd06820)
0xffff8bd15a00  code target (STUB)  (0xffff8bd06260)
0xffff8bd15a0c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd15a20  constant pool (size 32)
0xffff8bd15a70  runtime entry
0xffff8bd15a7c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2488
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd15b20     0  mov x2, x0
0xffff8bd15b24     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd15c18)
0xffff8bd15b28     8  tbz w1, #0, #+0x34 (addr 0xffff8bd15b5c)
0xffff8bd15b2c    12  ldur x16, [x1, #-1]
0xffff8bd15b30    16  ldr x17, [x26, #120]
0xffff8bd15b34    20  cmp x16, x17
0xffff8bd15b38    24  b.ne #+0xc (addr 0xffff8bd15b44)
0xffff8bd15b3c    28  ldur d0, [x1, #7]
0xffff8bd15b40    32  b #+0x20 (addr 0xffff8bd15b60)
0xffff8bd15b44    36  ldr x16, [x26, #40]
0xffff8bd15b48    40  cmp x1, x16
0xffff8bd15b4c    44  b.ne #+0xdc (addr 0xffff8bd15c28)
0xffff8bd15b50    48  ldr x3, [x26, #928]
0xffff8bd15b54    52  ldur d0, [x3, #7]
0xffff8bd15b58    56  b #+0x8 (addr 0xffff8bd15b60)
0xffff8bd15b5c    60  scvtf d0, x1, #32
0xffff8bd15b60    64  scvtf d1, x2, #32
0xffff8bd15b64    68  fsub d0, d0, d1
0xffff8bd15b68    72  movz x1, #0xe2c0
0xffff8bd15b6c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd15b70    80  ldp x2, x0, [x1]
0xffff8bd15b74    84  adds x16, x2, #0x10 (16)
0xffff8bd15b78    88  ccmp x16, x0, #nzCv, lo
0xffff8bd15b7c    92  b.hi #+0x20 (addr 0xffff8bd15b9c)
0xffff8bd15b80    96  str x16, [x1]
0xffff8bd15b84   100  ldr x1, [x26, #120]
0xffff8bd15b88   104  str x1, [x2]
0xffff8bd15b8c   108  orr x2, x2, #0x1
0xffff8bd15b90   112  stur d0, [x2, #7]
0xffff8bd15b94   116  mov x0, x2
0xffff8bd15b98   120  ret
0xffff8bd15b9c   124  sub csp, jssp, #0x10 (16)
0xffff8bd15ba0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd15ba4   132  movz fp, #0xa00000000
0xffff8bd15ba8   136  sub csp, jssp, #0x8 (8)
0xffff8bd15bac   140  str fp, [jssp, #-8]!
0xffff8bd15bb0   144  add fp, jssp, #0x8 (8)
0xffff8bd15bb4   148  movz x2, #0x0
0xffff8bd15bb8   152  mov x16, lr
0xffff8bd15bbc   156  ldr x17, pc+68 (addr 0x0000ffff8bd15c00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd15bc0   160  blr x17
0xffff8bd15bc4   164  ldur cp, [fp, #-8]
0xffff8bd15bc8   168  movz x0, #0x0
0xffff8bd15bcc   172  movz x1, #0x4b48
0xffff8bd15bd0   176  movk x1, #0xe4, lsl #16
0xffff8bd15bd4   180  ldr x16, pc+52 (addr 0x0000ffff8bd15c08)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd15bd8   184  blr x16
0xffff8bd15bdc   188  str x0, [jssp, #16]
0xffff8bd15be0   192  ldr x16, pc+48 (addr 0x0000ffff8bd15c10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd15be4   196  blr x16
0xffff8bd15be8   200  ldr lr, [jssp, #16]
0xffff8bd15bec   204  ldp xzr, fp, [jssp], #24
0xffff8bd15bf0   208  b #-0x60 (addr 0xffff8bd15b90)
0xffff8bd15bf4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd15bf8   216  d63f03e0       constant
0xffff8bd15bfc   220  d503201f       constant
0xffff8bd15c00   224  8bd06820       constant
0xffff8bd15c04   228  0000ffff       constant
0xffff8bd15c08   232  8bd06260       constant
0xffff8bd15c0c   236  0000ffff       constant
0xffff8bd15c10   240  8bd068e0       constant
0xffff8bd15c14   244  0000ffff       constant
0xffff8bd15c18   248  movz x16, #0x0
0xffff8bd15c1c   252  sub csp, jssp, #0x10 (16)
0xffff8bd15c20   256  stp fp, lr, [jssp, #-16]!
0xffff8bd15c24   260  bl #+0x14 (addr 0xffff8bd15c38)
0xffff8bd15c28   264  movz x16, #0x8
0xffff8bd15c2c   268  sub csp, jssp, #0x10 (16)
0xffff8bd15c30   272  stp fp, lr, [jssp, #-16]!
0xffff8bd15c34   276  bl #+0x4 (addr 0xffff8bd15c38)
0xffff8bd15c38   280  movz x17, #0xa00000000
0xffff8bd15c3c   284  sub csp, jssp, #0x10 (16)
0xffff8bd15c40   288  stp x17, cp, [jssp, #-16]!
0xffff8bd15c44   292  add fp, jssp, #0x10 (16)
0xffff8bd15c48   296  ldr x17, pc+24 (addr 0x0000ffff8bd15c60)    ;; lazy deoptimization bailout 0
0xffff8bd15c4c   300  add x17, x17, x16
0xffff8bd15c50   304  br x17
0xffff8bd15c54   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd15c58   312  d63f03e0       constant
0xffff8bd15c5c   316  d503201f       constant
0xffff8bd15c60   320  8bb06000       constant
0xffff8bd15c64   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd15bdc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd15bbc  code target (STUB)  (0xffff8bd06820)
0xffff8bd15bd4  code target (STUB)  (0xffff8bd06260)
0xffff8bd15be0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd15bf4  constant pool (size 36)
0xffff8bd15c48  runtime entry
0xffff8bd15c54  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2488
type = NORMAL
name = BinaryOpICStub(SUB:Number*Smi->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd15b20     0  mov x2, x0
0xffff8bd15b24     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd15c18)
0xffff8bd15b28     8  tbz w1, #0, #+0x34 (addr 0xffff8bd15b5c)
0xffff8bd15b2c    12  ldur x16, [x1, #-1]
0xffff8bd15b30    16  ldr x17, [x26, #120]
0xffff8bd15b34    20  cmp x16, x17
0xffff8bd15b38    24  b.ne #+0xc (addr 0xffff8bd15b44)
0xffff8bd15b3c    28  ldur d0, [x1, #7]
0xffff8bd15b40    32  b #+0x20 (addr 0xffff8bd15b60)
0xffff8bd15b44    36  ldr x16, [x26, #40]
0xffff8bd15b48    40  cmp x1, x16
0xffff8bd15b4c    44  b.ne #+0xdc (addr 0xffff8bd15c28)
0xffff8bd15b50    48  ldr x3, [x26, #928]
0xffff8bd15b54    52  ldur d0, [x3, #7]
0xffff8bd15b58    56  b #+0x8 (addr 0xffff8bd15b60)
0xffff8bd15b5c    60  scvtf d0, x1, #32
0xffff8bd15b60    64  scvtf d1, x2, #32
0xffff8bd15b64    68  fsub d0, d0, d1
0xffff8bd15b68    72  movz x1, #0xe2c0
0xffff8bd15b6c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd15b70    80  ldp x2, x0, [x1]
0xffff8bd15b74    84  adds x16, x2, #0x10 (16)
0xffff8bd15b78    88  ccmp x16, x0, #nzCv, lo
0xffff8bd15b7c    92  b.hi #+0x20 (addr 0xffff8bd15b9c)
0xffff8bd15b80    96  str x16, [x1]
0xffff8bd15b84   100  ldr x1, [x26, #120]
0xffff8bd15b88   104  str x1, [x2]
0xffff8bd15b8c   108  orr x2, x2, #0x1
0xffff8bd15b90   112  stur d0, [x2, #7]
0xffff8bd15b94   116  mov x0, x2
0xffff8bd15b98   120  ret
0xffff8bd15b9c   124  sub csp, jssp, #0x10 (16)
0xffff8bd15ba0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd15ba4   132  movz fp, #0xa00000000
0xffff8bd15ba8   136  sub csp, jssp, #0x8 (8)
0xffff8bd15bac   140  str fp, [jssp, #-8]!
0xffff8bd15bb0   144  add fp, jssp, #0x8 (8)
0xffff8bd15bb4   148  movz x2, #0x0
0xffff8bd15bb8   152  mov x16, lr
0xffff8bd15bbc   156  ldr x17, pc+68 (addr 0x0000ffff8bd15c00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd15bc0   160  blr x17
0xffff8bd15bc4   164  ldur cp, [fp, #-8]
0xffff8bd15bc8   168  movz x0, #0x0
0xffff8bd15bcc   172  movz x1, #0x4b48
0xffff8bd15bd0   176  movk x1, #0xe4, lsl #16
0xffff8bd15bd4   180  ldr x16, pc+52 (addr 0x0000ffff8bd15c08)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd15bd8   184  blr x16
0xffff8bd15bdc   188  str x0, [jssp, #16]
0xffff8bd15be0   192  ldr x16, pc+48 (addr 0x0000ffff8bd15c10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd15be4   196  blr x16
0xffff8bd15be8   200  ldr lr, [jssp, #16]
0xffff8bd15bec   204  ldp xzr, fp, [jssp], #24
0xffff8bd15bf0   208  b #-0x60 (addr 0xffff8bd15b90)
0xffff8bd15bf4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd15bf8   216  d63f03e0       constant
0xffff8bd15bfc   220  d503201f       constant
0xffff8bd15c00   224  8bd06820       constant
0xffff8bd15c04   228  0000ffff       constant
0xffff8bd15c08   232  8bd06260       constant
0xffff8bd15c0c   236  0000ffff       constant
0xffff8bd15c10   240  8bd068e0       constant
0xffff8bd15c14   244  0000ffff       constant
0xffff8bd15c18   248  movz x16, #0x0
0xffff8bd15c1c   252  sub csp, jssp, #0x10 (16)
0xffff8bd15c20   256  stp fp, lr, [jssp, #-16]!
0xffff8bd15c24   260  bl #+0x14 (addr 0xffff8bd15c38)
0xffff8bd15c28   264  movz x16, #0x8
0xffff8bd15c2c   268  sub csp, jssp, #0x10 (16)
0xffff8bd15c30   272  stp fp, lr, [jssp, #-16]!
0xffff8bd15c34   276  bl #+0x4 (addr 0xffff8bd15c38)
0xffff8bd15c38   280  movz x17, #0xa00000000
0xffff8bd15c3c   284  sub csp, jssp, #0x10 (16)
0xffff8bd15c40   288  stp x17, cp, [jssp, #-16]!
0xffff8bd15c44   292  add fp, jssp, #0x10 (16)
0xffff8bd15c48   296  ldr x17, pc+24 (addr 0x0000ffff8bd15c60)    ;; lazy deoptimization bailout 0
0xffff8bd15c4c   300  add x17, x17, x16
0xffff8bd15c50   304  br x17
0xffff8bd15c54   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd15c58   312  d63f03e0       constant
0xffff8bd15c5c   316  d503201f       constant
0xffff8bd15c60   320  8bb06000       constant
0xffff8bd15c64   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd15bdc   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd15bbc  code target (STUB)  (0xffff8bd06820)
0xffff8bd15bd4  code target (STUB)  (0xffff8bd06260)
0xffff8bd15be0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd15bf4  constant pool (size 36)
0xffff8bd15c48  runtime entry
0xffff8bd15c54  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4264
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff8bd15ce0     0  mov x2, x1
0xffff8bd15ce4     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd15d00)
0xffff8bd15ce8     8  mov x3, x0
0xffff8bd15cec    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd15d10)
0xffff8bd15cf0    16  subs x2, x2, x3
0xffff8bd15cf4    20  b.vs #+0x2c (addr 0xffff8bd15d20)
0xffff8bd15cf8    24  mov x0, x2
0xffff8bd15cfc    28  ret
0xffff8bd15d00    32  movz x16, #0x0
0xffff8bd15d04    36  sub csp, jssp, #0x10 (16)
0xffff8bd15d08    40  stp fp, lr, [jssp, #-16]!
0xffff8bd15d0c    44  bl #+0x24 (addr 0xffff8bd15d30)
0xffff8bd15d10    48  movz x16, #0x8
0xffff8bd15d14    52  sub csp, jssp, #0x10 (16)
0xffff8bd15d18    56  stp fp, lr, [jssp, #-16]!
0xffff8bd15d1c    60  bl #+0x14 (addr 0xffff8bd15d30)
0xffff8bd15d20    64  movz x16, #0x10
0xffff8bd15d24    68  sub csp, jssp, #0x10 (16)
0xffff8bd15d28    72  stp fp, lr, [jssp, #-16]!
0xffff8bd15d2c    76  bl #+0x4 (addr 0xffff8bd15d30)
0xffff8bd15d30    80  movz x17, #0xa00000000
0xffff8bd15d34    84  sub csp, jssp, #0x10 (16)
0xffff8bd15d38    88  stp x17, cp, [jssp, #-16]!
0xffff8bd15d3c    92  add fp, jssp, #0x10 (16)
0xffff8bd15d40    96  ldr x17, pc+24 (addr 0x0000ffff8bd15d58)    ;; lazy deoptimization bailout 0
0xffff8bd15d44   100  add x17, x17, x16
0xffff8bd15d48   104  br x17
0xffff8bd15d4c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd15d50   112  d63f03e0       constant
0xffff8bd15d54   116  d503201f       constant
0xffff8bd15d58   120  8bb06000       constant
0xffff8bd15d5c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd15d40  runtime entry
0xffff8bd15d4c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 4264
type = NORMAL
name = BinaryOpICStub(SUB:Smi*Int32->Int32)
compiler = crankshaft
Instructions (size = 136)
0xffff8bd15ce0     0  mov x2, x1
0xffff8bd15ce4     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd15d00)
0xffff8bd15ce8     8  mov x3, x0
0xffff8bd15cec    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd15d10)
0xffff8bd15cf0    16  subs x2, x2, x3
0xffff8bd15cf4    20  b.vs #+0x2c (addr 0xffff8bd15d20)
0xffff8bd15cf8    24  mov x0, x2
0xffff8bd15cfc    28  ret
0xffff8bd15d00    32  movz x16, #0x0
0xffff8bd15d04    36  sub csp, jssp, #0x10 (16)
0xffff8bd15d08    40  stp fp, lr, [jssp, #-16]!
0xffff8bd15d0c    44  bl #+0x24 (addr 0xffff8bd15d30)
0xffff8bd15d10    48  movz x16, #0x8
0xffff8bd15d14    52  sub csp, jssp, #0x10 (16)
0xffff8bd15d18    56  stp fp, lr, [jssp, #-16]!
0xffff8bd15d1c    60  bl #+0x14 (addr 0xffff8bd15d30)
0xffff8bd15d20    64  movz x16, #0x10
0xffff8bd15d24    68  sub csp, jssp, #0x10 (16)
0xffff8bd15d28    72  stp fp, lr, [jssp, #-16]!
0xffff8bd15d2c    76  bl #+0x4 (addr 0xffff8bd15d30)
0xffff8bd15d30    80  movz x17, #0xa00000000
0xffff8bd15d34    84  sub csp, jssp, #0x10 (16)
0xffff8bd15d38    88  stp x17, cp, [jssp, #-16]!
0xffff8bd15d3c    92  add fp, jssp, #0x10 (16)
0xffff8bd15d40    96  ldr x17, pc+24 (addr 0x0000ffff8bd15d58)    ;; lazy deoptimization bailout 0
0xffff8bd15d44   100  add x17, x17, x16
0xffff8bd15d48   104  br x17
0xffff8bd15d4c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd15d50   112  d63f03e0       constant
0xffff8bd15d54   116  d503201f       constant
0xffff8bd15d58   120  8bb06000       constant
0xffff8bd15d5c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd15d40  runtime entry
0xffff8bd15d4c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 6328
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bd15de0     0  mov x2, x1
0xffff8bd15de4     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd15ed8)
0xffff8bd15de8     8  tbz w0, #0, #+0x34 (addr 0xffff8bd15e1c)
0xffff8bd15dec    12  ldur x16, [x0, #-1]
0xffff8bd15df0    16  ldr x17, [x26, #120]
0xffff8bd15df4    20  cmp x16, x17
0xffff8bd15df8    24  b.ne #+0xc (addr 0xffff8bd15e04)
0xffff8bd15dfc    28  ldur d0, [x0, #7]
0xffff8bd15e00    32  b #+0x20 (addr 0xffff8bd15e20)
0xffff8bd15e04    36  ldr x16, [x26, #40]
0xffff8bd15e08    40  cmp x0, x16
0xffff8bd15e0c    44  b.ne #+0xdc (addr 0xffff8bd15ee8)
0xffff8bd15e10    48  ldr x3, [x26, #928]
0xffff8bd15e14    52  ldur d0, [x3, #7]
0xffff8bd15e18    56  b #+0x8 (addr 0xffff8bd15e20)
0xffff8bd15e1c    60  scvtf d0, x0, #32
0xffff8bd15e20    64  scvtf d1, x2, #32
0xffff8bd15e24    68  fsub d0, d1, d0
0xffff8bd15e28    72  movz x1, #0xe2c0
0xffff8bd15e2c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd15e30    80  ldp x2, x0, [x1]
0xffff8bd15e34    84  adds x16, x2, #0x10 (16)
0xffff8bd15e38    88  ccmp x16, x0, #nzCv, lo
0xffff8bd15e3c    92  b.hi #+0x20 (addr 0xffff8bd15e5c)
0xffff8bd15e40    96  str x16, [x1]
0xffff8bd15e44   100  ldr x1, [x26, #120]
0xffff8bd15e48   104  str x1, [x2]
0xffff8bd15e4c   108  orr x2, x2, #0x1
0xffff8bd15e50   112  stur d0, [x2, #7]
0xffff8bd15e54   116  mov x0, x2
0xffff8bd15e58   120  ret
0xffff8bd15e5c   124  sub csp, jssp, #0x10 (16)
0xffff8bd15e60   128  stp fp, lr, [jssp, #-16]!
0xffff8bd15e64   132  movz fp, #0xa00000000
0xffff8bd15e68   136  sub csp, jssp, #0x8 (8)
0xffff8bd15e6c   140  str fp, [jssp, #-8]!
0xffff8bd15e70   144  add fp, jssp, #0x8 (8)
0xffff8bd15e74   148  movz x2, #0x0
0xffff8bd15e78   152  mov x16, lr
0xffff8bd15e7c   156  ldr x17, pc+68 (addr 0x0000ffff8bd15ec0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd15e80   160  blr x17
0xffff8bd15e84   164  ldur cp, [fp, #-8]
0xffff8bd15e88   168  movz x0, #0x0
0xffff8bd15e8c   172  movz x1, #0x4b48
0xffff8bd15e90   176  movk x1, #0xe4, lsl #16
0xffff8bd15e94   180  ldr x16, pc+52 (addr 0x0000ffff8bd15ec8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd15e98   184  blr x16
0xffff8bd15e9c   188  str x0, [jssp, #16]
0xffff8bd15ea0   192  ldr x16, pc+48 (addr 0x0000ffff8bd15ed0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd15ea4   196  blr x16
0xffff8bd15ea8   200  ldr lr, [jssp, #16]
0xffff8bd15eac   204  ldp xzr, fp, [jssp], #24
0xffff8bd15eb0   208  b #-0x60 (addr 0xffff8bd15e50)
0xffff8bd15eb4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd15eb8   216  d63f03e0       constant
0xffff8bd15ebc   220  d503201f       constant
0xffff8bd15ec0   224  8bd06820       constant
0xffff8bd15ec4   228  0000ffff       constant
0xffff8bd15ec8   232  8bd06260       constant
0xffff8bd15ecc   236  0000ffff       constant
0xffff8bd15ed0   240  8bd068e0       constant
0xffff8bd15ed4   244  0000ffff       constant
0xffff8bd15ed8   248  movz x16, #0x0
0xffff8bd15edc   252  sub csp, jssp, #0x10 (16)
0xffff8bd15ee0   256  stp fp, lr, [jssp, #-16]!
0xffff8bd15ee4   260  bl #+0x14 (addr 0xffff8bd15ef8)
0xffff8bd15ee8   264  movz x16, #0x8
0xffff8bd15eec   268  sub csp, jssp, #0x10 (16)
0xffff8bd15ef0   272  stp fp, lr, [jssp, #-16]!
0xffff8bd15ef4   276  bl #+0x4 (addr 0xffff8bd15ef8)
0xffff8bd15ef8   280  movz x17, #0xa00000000
0xffff8bd15efc   284  sub csp, jssp, #0x10 (16)
0xffff8bd15f00   288  stp x17, cp, [jssp, #-16]!
0xffff8bd15f04   292  add fp, jssp, #0x10 (16)
0xffff8bd15f08   296  ldr x17, pc+24 (addr 0x0000ffff8bd15f20)    ;; lazy deoptimization bailout 0
0xffff8bd15f0c   300  add x17, x17, x16
0xffff8bd15f10   304  br x17
0xffff8bd15f14   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd15f18   312  d63f03e0       constant
0xffff8bd15f1c   316  d503201f       constant
0xffff8bd15f20   320  8bb06000       constant
0xffff8bd15f24   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd15e9c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd15e7c  code target (STUB)  (0xffff8bd06820)
0xffff8bd15e94  code target (STUB)  (0xffff8bd06260)
0xffff8bd15ea0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd15eb4  constant pool (size 36)
0xffff8bd15f08  runtime entry
0xffff8bd15f14  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 6328
type = NORMAL
name = BinaryOpICStub(SUB:Smi*Number->Number)
compiler = crankshaft
Instructions (size = 349)
0xffff8bd15de0     0  mov x2, x1
0xffff8bd15de4     4  tbnz w2, #0, #+0xf4 (addr 0xffff8bd15ed8)
0xffff8bd15de8     8  tbz w0, #0, #+0x34 (addr 0xffff8bd15e1c)
0xffff8bd15dec    12  ldur x16, [x0, #-1]
0xffff8bd15df0    16  ldr x17, [x26, #120]
0xffff8bd15df4    20  cmp x16, x17
0xffff8bd15df8    24  b.ne #+0xc (addr 0xffff8bd15e04)
0xffff8bd15dfc    28  ldur d0, [x0, #7]
0xffff8bd15e00    32  b #+0x20 (addr 0xffff8bd15e20)
0xffff8bd15e04    36  ldr x16, [x26, #40]
0xffff8bd15e08    40  cmp x0, x16
0xffff8bd15e0c    44  b.ne #+0xdc (addr 0xffff8bd15ee8)
0xffff8bd15e10    48  ldr x3, [x26, #928]
0xffff8bd15e14    52  ldur d0, [x3, #7]
0xffff8bd15e18    56  b #+0x8 (addr 0xffff8bd15e20)
0xffff8bd15e1c    60  scvtf d0, x0, #32
0xffff8bd15e20    64  scvtf d1, x2, #32
0xffff8bd15e24    68  fsub d0, d1, d0
0xffff8bd15e28    72  movz x1, #0xe2c0
0xffff8bd15e2c    76  movk x1, #0x2cb8, lsl #16
0xffff8bd15e30    80  ldp x2, x0, [x1]
0xffff8bd15e34    84  adds x16, x2, #0x10 (16)
0xffff8bd15e38    88  ccmp x16, x0, #nzCv, lo
0xffff8bd15e3c    92  b.hi #+0x20 (addr 0xffff8bd15e5c)
0xffff8bd15e40    96  str x16, [x1]
0xffff8bd15e44   100  ldr x1, [x26, #120]
0xffff8bd15e48   104  str x1, [x2]
0xffff8bd15e4c   108  orr x2, x2, #0x1
0xffff8bd15e50   112  stur d0, [x2, #7]
0xffff8bd15e54   116  mov x0, x2
0xffff8bd15e58   120  ret
0xffff8bd15e5c   124  sub csp, jssp, #0x10 (16)
0xffff8bd15e60   128  stp fp, lr, [jssp, #-16]!
0xffff8bd15e64   132  movz fp, #0xa00000000
0xffff8bd15e68   136  sub csp, jssp, #0x8 (8)
0xffff8bd15e6c   140  str fp, [jssp, #-8]!
0xffff8bd15e70   144  add fp, jssp, #0x8 (8)
0xffff8bd15e74   148  movz x2, #0x0
0xffff8bd15e78   152  mov x16, lr
0xffff8bd15e7c   156  ldr x17, pc+68 (addr 0x0000ffff8bd15ec0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd15e80   160  blr x17
0xffff8bd15e84   164  ldur cp, [fp, #-8]
0xffff8bd15e88   168  movz x0, #0x0
0xffff8bd15e8c   172  movz x1, #0x4b48
0xffff8bd15e90   176  movk x1, #0xe4, lsl #16
0xffff8bd15e94   180  ldr x16, pc+52 (addr 0x0000ffff8bd15ec8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd15e98   184  blr x16
0xffff8bd15e9c   188  str x0, [jssp, #16]
0xffff8bd15ea0   192  ldr x16, pc+48 (addr 0x0000ffff8bd15ed0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd15ea4   196  blr x16
0xffff8bd15ea8   200  ldr lr, [jssp, #16]
0xffff8bd15eac   204  ldp xzr, fp, [jssp], #24
0xffff8bd15eb0   208  b #-0x60 (addr 0xffff8bd15e50)
0xffff8bd15eb4   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd15eb8   216  d63f03e0       constant
0xffff8bd15ebc   220  d503201f       constant
0xffff8bd15ec0   224  8bd06820       constant
0xffff8bd15ec4   228  0000ffff       constant
0xffff8bd15ec8   232  8bd06260       constant
0xffff8bd15ecc   236  0000ffff       constant
0xffff8bd15ed0   240  8bd068e0       constant
0xffff8bd15ed4   244  0000ffff       constant
0xffff8bd15ed8   248  movz x16, #0x0
0xffff8bd15edc   252  sub csp, jssp, #0x10 (16)
0xffff8bd15ee0   256  stp fp, lr, [jssp, #-16]!
0xffff8bd15ee4   260  bl #+0x14 (addr 0xffff8bd15ef8)
0xffff8bd15ee8   264  movz x16, #0x8
0xffff8bd15eec   268  sub csp, jssp, #0x10 (16)
0xffff8bd15ef0   272  stp fp, lr, [jssp, #-16]!
0xffff8bd15ef4   276  bl #+0x4 (addr 0xffff8bd15ef8)
0xffff8bd15ef8   280  movz x17, #0xa00000000
0xffff8bd15efc   284  sub csp, jssp, #0x10 (16)
0xffff8bd15f00   288  stp x17, cp, [jssp, #-16]!
0xffff8bd15f04   292  add fp, jssp, #0x10 (16)
0xffff8bd15f08   296  ldr x17, pc+24 (addr 0x0000ffff8bd15f20)    ;; lazy deoptimization bailout 0
0xffff8bd15f0c   300  add x17, x17, x16
0xffff8bd15f10   304  br x17
0xffff8bd15f14   308  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd15f18   312  d63f03e0       constant
0xffff8bd15f1c   316  d503201f       constant
0xffff8bd15f20   320  8bb06000       constant
0xffff8bd15f24   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bd15e9c   188  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bd15e7c  code target (STUB)  (0xffff8bd06820)
0xffff8bd15e94  code target (STUB)  (0xffff8bd06260)
0xffff8bd15ea0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd15eb4  constant pool (size 36)
0xffff8bd15f08  runtime entry
0xffff8bd15f14  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 2200
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 136)
0xffff8bd15fa0     0  mov x2, x1
0xffff8bd15fa4     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd15fc0)
0xffff8bd15fa8     8  mov x3, x0
0xffff8bd15fac    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd15fd0)
0xffff8bd15fb0    16  subs x2, x2, x3
0xffff8bd15fb4    20  b.vs #+0x2c (addr 0xffff8bd15fe0)
0xffff8bd15fb8    24  mov x0, x2
0xffff8bd15fbc    28  ret
0xffff8bd15fc0    32  movz x16, #0x0
0xffff8bd15fc4    36  sub csp, jssp, #0x10 (16)
0xffff8bd15fc8    40  stp fp, lr, [jssp, #-16]!
0xffff8bd15fcc    44  bl #+0x24 (addr 0xffff8bd15ff0)
0xffff8bd15fd0    48  movz x16, #0x8
0xffff8bd15fd4    52  sub csp, jssp, #0x10 (16)
0xffff8bd15fd8    56  stp fp, lr, [jssp, #-16]!
0xffff8bd15fdc    60  bl #+0x14 (addr 0xffff8bd15ff0)
0xffff8bd15fe0    64  movz x16, #0x10
0xffff8bd15fe4    68  sub csp, jssp, #0x10 (16)
0xffff8bd15fe8    72  stp fp, lr, [jssp, #-16]!
0xffff8bd15fec    76  bl #+0x4 (addr 0xffff8bd15ff0)
0xffff8bd15ff0    80  movz x17, #0xa00000000
0xffff8bd15ff4    84  sub csp, jssp, #0x10 (16)
0xffff8bd15ff8    88  stp x17, cp, [jssp, #-16]!
0xffff8bd15ffc    92  add fp, jssp, #0x10 (16)
0xffff8bd16000    96  ldr x17, pc+24 (addr 0x0000ffff8bd16018)    ;; lazy deoptimization bailout 0
0xffff8bd16004   100  add x17, x17, x16
0xffff8bd16008   104  br x17
0xffff8bd1600c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd16010   112  d63f03e0       constant
0xffff8bd16014   116  d503201f       constant
0xffff8bd16018   120  8bb06000       constant
0xffff8bd1601c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd16000  runtime entry
0xffff8bd1600c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 2200
type = NORMAL
name = BinaryOpICStub(SUB:Smi*Smi->Smi)
compiler = crankshaft
Instructions (size = 136)
0xffff8bd15fa0     0  mov x2, x1
0xffff8bd15fa4     4  tbnz w2, #0, #+0x1c (addr 0xffff8bd15fc0)
0xffff8bd15fa8     8  mov x3, x0
0xffff8bd15fac    12  tbnz w3, #0, #+0x24 (addr 0xffff8bd15fd0)
0xffff8bd15fb0    16  subs x2, x2, x3
0xffff8bd15fb4    20  b.vs #+0x2c (addr 0xffff8bd15fe0)
0xffff8bd15fb8    24  mov x0, x2
0xffff8bd15fbc    28  ret
0xffff8bd15fc0    32  movz x16, #0x0
0xffff8bd15fc4    36  sub csp, jssp, #0x10 (16)
0xffff8bd15fc8    40  stp fp, lr, [jssp, #-16]!
0xffff8bd15fcc    44  bl #+0x24 (addr 0xffff8bd15ff0)
0xffff8bd15fd0    48  movz x16, #0x8
0xffff8bd15fd4    52  sub csp, jssp, #0x10 (16)
0xffff8bd15fd8    56  stp fp, lr, [jssp, #-16]!
0xffff8bd15fdc    60  bl #+0x14 (addr 0xffff8bd15ff0)
0xffff8bd15fe0    64  movz x16, #0x10
0xffff8bd15fe4    68  sub csp, jssp, #0x10 (16)
0xffff8bd15fe8    72  stp fp, lr, [jssp, #-16]!
0xffff8bd15fec    76  bl #+0x4 (addr 0xffff8bd15ff0)
0xffff8bd15ff0    80  movz x17, #0xa00000000
0xffff8bd15ff4    84  sub csp, jssp, #0x10 (16)
0xffff8bd15ff8    88  stp x17, cp, [jssp, #-16]!
0xffff8bd15ffc    92  add fp, jssp, #0x10 (16)
0xffff8bd16000    96  ldr x17, pc+24 (addr 0x0000ffff8bd16018)    ;; lazy deoptimization bailout 0
0xffff8bd16004   100  add x17, x17, x16
0xffff8bd16008   104  br x17
0xffff8bd1600c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd16010   112  d63f03e0       constant
0xffff8bd16014   116  d503201f       constant
0xffff8bd16018   120  8bb06000       constant
0xffff8bd1601c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd16000  runtime entry
0xffff8bd1600c  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 3227
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff8bd160a0     0  mov x2, x1
0xffff8bd160a4     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd160e8)
0xffff8bd160a8     8  mov x3, x0
0xffff8bd160ac    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd160f8)
0xffff8bd160b0    16  asr x3, x3, #32
0xffff8bd160b4    20  cmp w3, #0x2 (2)
0xffff8bd160b8    24  b.eq #+0x8 (addr 0xffff8bd160c0)
0xffff8bd160bc    28  b #+0x4c (addr 0xffff8bd16108)
0xffff8bd160c0    32  asr x2, x2, #32
0xffff8bd160c4    36  tbz w2, #31, #+0x18 (addr 0xffff8bd160dc)
0xffff8bd160c8    40  neg w2, w2
0xffff8bd160cc    44  and w2, w2, #0x1
0xffff8bd160d0    48  negs w2, w2
0xffff8bd160d4    52  b.eq #+0x44 (addr 0xffff8bd16118)
0xffff8bd160d8    56  b #+0x8 (addr 0xffff8bd160e0)
0xffff8bd160dc    60  and w2, w2, #0x1
0xffff8bd160e0    64  lsl x0, x2, #32
0xffff8bd160e4    68  ret
0xffff8bd160e8    72  movz x16, #0x0
0xffff8bd160ec    76  sub csp, jssp, #0x10 (16)
0xffff8bd160f0    80  stp fp, lr, [jssp, #-16]!
0xffff8bd160f4    84  bl #+0x34 (addr 0xffff8bd16128)
0xffff8bd160f8    88  movz x16, #0x8
0xffff8bd160fc    92  sub csp, jssp, #0x10 (16)
0xffff8bd16100    96  stp fp, lr, [jssp, #-16]!
0xffff8bd16104   100  bl #+0x24 (addr 0xffff8bd16128)
0xffff8bd16108   104  movz x16, #0x10
0xffff8bd1610c   108  sub csp, jssp, #0x10 (16)
0xffff8bd16110   112  stp fp, lr, [jssp, #-16]!
0xffff8bd16114   116  bl #+0x14 (addr 0xffff8bd16128)
0xffff8bd16118   120  movz x16, #0x18
0xffff8bd1611c   124  sub csp, jssp, #0x10 (16)
0xffff8bd16120   128  stp fp, lr, [jssp, #-16]!
0xffff8bd16124   132  bl #+0x4 (addr 0xffff8bd16128)
0xffff8bd16128   136  movz x17, #0xa00000000
0xffff8bd1612c   140  sub csp, jssp, #0x10 (16)
0xffff8bd16130   144  stp x17, cp, [jssp, #-16]!
0xffff8bd16134   148  add fp, jssp, #0x10 (16)
0xffff8bd16138   152  ldr x17, pc+24 (addr 0x0000ffff8bd16150)    ;; lazy deoptimization bailout 0
0xffff8bd1613c   156  add x17, x17, x16
0xffff8bd16140   160  br x17
0xffff8bd16144   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd16148   168  d63f03e0       constant
0xffff8bd1614c   172  d503201f       constant
0xffff8bd16150   176  8bb06000       constant
0xffff8bd16154   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd16138  runtime entry
0xffff8bd16144  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 3227
type = NORMAL
name = BinaryOpICStub(MOD:Smi*2->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff8bd160a0     0  mov x2, x1
0xffff8bd160a4     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd160e8)
0xffff8bd160a8     8  mov x3, x0
0xffff8bd160ac    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd160f8)
0xffff8bd160b0    16  asr x3, x3, #32
0xffff8bd160b4    20  cmp w3, #0x2 (2)
0xffff8bd160b8    24  b.eq #+0x8 (addr 0xffff8bd160c0)
0xffff8bd160bc    28  b #+0x4c (addr 0xffff8bd16108)
0xffff8bd160c0    32  asr x2, x2, #32
0xffff8bd160c4    36  tbz w2, #31, #+0x18 (addr 0xffff8bd160dc)
0xffff8bd160c8    40  neg w2, w2
0xffff8bd160cc    44  and w2, w2, #0x1
0xffff8bd160d0    48  negs w2, w2
0xffff8bd160d4    52  b.eq #+0x44 (addr 0xffff8bd16118)
0xffff8bd160d8    56  b #+0x8 (addr 0xffff8bd160e0)
0xffff8bd160dc    60  and w2, w2, #0x1
0xffff8bd160e0    64  lsl x0, x2, #32
0xffff8bd160e4    68  ret
0xffff8bd160e8    72  movz x16, #0x0
0xffff8bd160ec    76  sub csp, jssp, #0x10 (16)
0xffff8bd160f0    80  stp fp, lr, [jssp, #-16]!
0xffff8bd160f4    84  bl #+0x34 (addr 0xffff8bd16128)
0xffff8bd160f8    88  movz x16, #0x8
0xffff8bd160fc    92  sub csp, jssp, #0x10 (16)
0xffff8bd16100    96  stp fp, lr, [jssp, #-16]!
0xffff8bd16104   100  bl #+0x24 (addr 0xffff8bd16128)
0xffff8bd16108   104  movz x16, #0x10
0xffff8bd1610c   108  sub csp, jssp, #0x10 (16)
0xffff8bd16110   112  stp fp, lr, [jssp, #-16]!
0xffff8bd16114   116  bl #+0x14 (addr 0xffff8bd16128)
0xffff8bd16118   120  movz x16, #0x18
0xffff8bd1611c   124  sub csp, jssp, #0x10 (16)
0xffff8bd16120   128  stp fp, lr, [jssp, #-16]!
0xffff8bd16124   132  bl #+0x4 (addr 0xffff8bd16128)
0xffff8bd16128   136  movz x17, #0xa00000000
0xffff8bd1612c   140  sub csp, jssp, #0x10 (16)
0xffff8bd16130   144  stp x17, cp, [jssp, #-16]!
0xffff8bd16134   148  add fp, jssp, #0x10 (16)
0xffff8bd16138   152  ldr x17, pc+24 (addr 0x0000ffff8bd16150)    ;; lazy deoptimization bailout 0
0xffff8bd1613c   156  add x17, x17, x16
0xffff8bd16140   160  br x17
0xffff8bd16144   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd16148   168  d63f03e0       constant
0xffff8bd1614c   172  d503201f       constant
0xffff8bd16150   176  8bb06000       constant
0xffff8bd16154   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd16138  runtime entry
0xffff8bd16144  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 5275
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff8bd161c0     0  mov x2, x1
0xffff8bd161c4     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd16208)
0xffff8bd161c8     8  mov x3, x0
0xffff8bd161cc    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd16218)
0xffff8bd161d0    16  asr x3, x3, #32
0xffff8bd161d4    20  cmp w3, #0x4 (4)
0xffff8bd161d8    24  b.eq #+0x8 (addr 0xffff8bd161e0)
0xffff8bd161dc    28  b #+0x4c (addr 0xffff8bd16228)
0xffff8bd161e0    32  asr x2, x2, #32
0xffff8bd161e4    36  tbz w2, #31, #+0x18 (addr 0xffff8bd161fc)
0xffff8bd161e8    40  neg w2, w2
0xffff8bd161ec    44  and w2, w2, #0x3
0xffff8bd161f0    48  negs w2, w2
0xffff8bd161f4    52  b.eq #+0x44 (addr 0xffff8bd16238)
0xffff8bd161f8    56  b #+0x8 (addr 0xffff8bd16200)
0xffff8bd161fc    60  and w2, w2, #0x3
0xffff8bd16200    64  lsl x0, x2, #32
0xffff8bd16204    68  ret
0xffff8bd16208    72  movz x16, #0x0
0xffff8bd1620c    76  sub csp, jssp, #0x10 (16)
0xffff8bd16210    80  stp fp, lr, [jssp, #-16]!
0xffff8bd16214    84  bl #+0x34 (addr 0xffff8bd16248)
0xffff8bd16218    88  movz x16, #0x8
0xffff8bd1621c    92  sub csp, jssp, #0x10 (16)
0xffff8bd16220    96  stp fp, lr, [jssp, #-16]!
0xffff8bd16224   100  bl #+0x24 (addr 0xffff8bd16248)
0xffff8bd16228   104  movz x16, #0x10
0xffff8bd1622c   108  sub csp, jssp, #0x10 (16)
0xffff8bd16230   112  stp fp, lr, [jssp, #-16]!
0xffff8bd16234   116  bl #+0x14 (addr 0xffff8bd16248)
0xffff8bd16238   120  movz x16, #0x18
0xffff8bd1623c   124  sub csp, jssp, #0x10 (16)
0xffff8bd16240   128  stp fp, lr, [jssp, #-16]!
0xffff8bd16244   132  bl #+0x4 (addr 0xffff8bd16248)
0xffff8bd16248   136  movz x17, #0xa00000000
0xffff8bd1624c   140  sub csp, jssp, #0x10 (16)
0xffff8bd16250   144  stp x17, cp, [jssp, #-16]!
0xffff8bd16254   148  add fp, jssp, #0x10 (16)
0xffff8bd16258   152  ldr x17, pc+24 (addr 0x0000ffff8bd16270)    ;; lazy deoptimization bailout 0
0xffff8bd1625c   156  add x17, x17, x16
0xffff8bd16260   160  br x17
0xffff8bd16264   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd16268   168  d63f03e0       constant
0xffff8bd1626c   172  d503201f       constant
0xffff8bd16270   176  8bb06000       constant
0xffff8bd16274   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd16258  runtime entry
0xffff8bd16264  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 5275
type = NORMAL
name = BinaryOpICStub(MOD:Smi*4->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff8bd161c0     0  mov x2, x1
0xffff8bd161c4     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd16208)
0xffff8bd161c8     8  mov x3, x0
0xffff8bd161cc    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd16218)
0xffff8bd161d0    16  asr x3, x3, #32
0xffff8bd161d4    20  cmp w3, #0x4 (4)
0xffff8bd161d8    24  b.eq #+0x8 (addr 0xffff8bd161e0)
0xffff8bd161dc    28  b #+0x4c (addr 0xffff8bd16228)
0xffff8bd161e0    32  asr x2, x2, #32
0xffff8bd161e4    36  tbz w2, #31, #+0x18 (addr 0xffff8bd161fc)
0xffff8bd161e8    40  neg w2, w2
0xffff8bd161ec    44  and w2, w2, #0x3
0xffff8bd161f0    48  negs w2, w2
0xffff8bd161f4    52  b.eq #+0x44 (addr 0xffff8bd16238)
0xffff8bd161f8    56  b #+0x8 (addr 0xffff8bd16200)
0xffff8bd161fc    60  and w2, w2, #0x3
0xffff8bd16200    64  lsl x0, x2, #32
0xffff8bd16204    68  ret
0xffff8bd16208    72  movz x16, #0x0
0xffff8bd1620c    76  sub csp, jssp, #0x10 (16)
0xffff8bd16210    80  stp fp, lr, [jssp, #-16]!
0xffff8bd16214    84  bl #+0x34 (addr 0xffff8bd16248)
0xffff8bd16218    88  movz x16, #0x8
0xffff8bd1621c    92  sub csp, jssp, #0x10 (16)
0xffff8bd16220    96  stp fp, lr, [jssp, #-16]!
0xffff8bd16224   100  bl #+0x24 (addr 0xffff8bd16248)
0xffff8bd16228   104  movz x16, #0x10
0xffff8bd1622c   108  sub csp, jssp, #0x10 (16)
0xffff8bd16230   112  stp fp, lr, [jssp, #-16]!
0xffff8bd16234   116  bl #+0x14 (addr 0xffff8bd16248)
0xffff8bd16238   120  movz x16, #0x18
0xffff8bd1623c   124  sub csp, jssp, #0x10 (16)
0xffff8bd16240   128  stp fp, lr, [jssp, #-16]!
0xffff8bd16244   132  bl #+0x4 (addr 0xffff8bd16248)
0xffff8bd16248   136  movz x17, #0xa00000000
0xffff8bd1624c   140  sub csp, jssp, #0x10 (16)
0xffff8bd16250   144  stp x17, cp, [jssp, #-16]!
0xffff8bd16254   148  add fp, jssp, #0x10 (16)
0xffff8bd16258   152  ldr x17, pc+24 (addr 0x0000ffff8bd16270)    ;; lazy deoptimization bailout 0
0xffff8bd1625c   156  add x17, x17, x16
0xffff8bd16260   160  br x17
0xffff8bd16264   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd16268   168  d63f03e0       constant
0xffff8bd1626c   172  d503201f       constant
0xffff8bd16270   176  8bb06000       constant
0xffff8bd16274   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd16258  runtime entry
0xffff8bd16264  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 7323
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff8bd162e0     0  mov x2, x1
0xffff8bd162e4     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd16328)
0xffff8bd162e8     8  mov x3, x0
0xffff8bd162ec    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd16338)
0xffff8bd162f0    16  asr x3, x3, #32
0xffff8bd162f4    20  cmp w3, #0x8 (8)
0xffff8bd162f8    24  b.eq #+0x8 (addr 0xffff8bd16300)
0xffff8bd162fc    28  b #+0x4c (addr 0xffff8bd16348)
0xffff8bd16300    32  asr x2, x2, #32
0xffff8bd16304    36  tbz w2, #31, #+0x18 (addr 0xffff8bd1631c)
0xffff8bd16308    40  neg w2, w2
0xffff8bd1630c    44  and w2, w2, #0x7
0xffff8bd16310    48  negs w2, w2
0xffff8bd16314    52  b.eq #+0x44 (addr 0xffff8bd16358)
0xffff8bd16318    56  b #+0x8 (addr 0xffff8bd16320)
0xffff8bd1631c    60  and w2, w2, #0x7
0xffff8bd16320    64  lsl x0, x2, #32
0xffff8bd16324    68  ret
0xffff8bd16328    72  movz x16, #0x0
0xffff8bd1632c    76  sub csp, jssp, #0x10 (16)
0xffff8bd16330    80  stp fp, lr, [jssp, #-16]!
0xffff8bd16334    84  bl #+0x34 (addr 0xffff8bd16368)
0xffff8bd16338    88  movz x16, #0x8
0xffff8bd1633c    92  sub csp, jssp, #0x10 (16)
0xffff8bd16340    96  stp fp, lr, [jssp, #-16]!
0xffff8bd16344   100  bl #+0x24 (addr 0xffff8bd16368)
0xffff8bd16348   104  movz x16, #0x10
0xffff8bd1634c   108  sub csp, jssp, #0x10 (16)
0xffff8bd16350   112  stp fp, lr, [jssp, #-16]!
0xffff8bd16354   116  bl #+0x14 (addr 0xffff8bd16368)
0xffff8bd16358   120  movz x16, #0x18
0xffff8bd1635c   124  sub csp, jssp, #0x10 (16)
0xffff8bd16360   128  stp fp, lr, [jssp, #-16]!
0xffff8bd16364   132  bl #+0x4 (addr 0xffff8bd16368)
0xffff8bd16368   136  movz x17, #0xa00000000
0xffff8bd1636c   140  sub csp, jssp, #0x10 (16)
0xffff8bd16370   144  stp x17, cp, [jssp, #-16]!
0xffff8bd16374   148  add fp, jssp, #0x10 (16)
0xffff8bd16378   152  ldr x17, pc+24 (addr 0x0000ffff8bd16390)    ;; lazy deoptimization bailout 0
0xffff8bd1637c   156  add x17, x17, x16
0xffff8bd16380   160  br x17
0xffff8bd16384   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd16388   168  d63f03e0       constant
0xffff8bd1638c   172  d503201f       constant
0xffff8bd16390   176  8bb06000       constant
0xffff8bd16394   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd16378  runtime entry
0xffff8bd16384  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 7323
type = NORMAL
name = BinaryOpICStub(MOD:Smi*8->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff8bd162e0     0  mov x2, x1
0xffff8bd162e4     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd16328)
0xffff8bd162e8     8  mov x3, x0
0xffff8bd162ec    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd16338)
0xffff8bd162f0    16  asr x3, x3, #32
0xffff8bd162f4    20  cmp w3, #0x8 (8)
0xffff8bd162f8    24  b.eq #+0x8 (addr 0xffff8bd16300)
0xffff8bd162fc    28  b #+0x4c (addr 0xffff8bd16348)
0xffff8bd16300    32  asr x2, x2, #32
0xffff8bd16304    36  tbz w2, #31, #+0x18 (addr 0xffff8bd1631c)
0xffff8bd16308    40  neg w2, w2
0xffff8bd1630c    44  and w2, w2, #0x7
0xffff8bd16310    48  negs w2, w2
0xffff8bd16314    52  b.eq #+0x44 (addr 0xffff8bd16358)
0xffff8bd16318    56  b #+0x8 (addr 0xffff8bd16320)
0xffff8bd1631c    60  and w2, w2, #0x7
0xffff8bd16320    64  lsl x0, x2, #32
0xffff8bd16324    68  ret
0xffff8bd16328    72  movz x16, #0x0
0xffff8bd1632c    76  sub csp, jssp, #0x10 (16)
0xffff8bd16330    80  stp fp, lr, [jssp, #-16]!
0xffff8bd16334    84  bl #+0x34 (addr 0xffff8bd16368)
0xffff8bd16338    88  movz x16, #0x8
0xffff8bd1633c    92  sub csp, jssp, #0x10 (16)
0xffff8bd16340    96  stp fp, lr, [jssp, #-16]!
0xffff8bd16344   100  bl #+0x24 (addr 0xffff8bd16368)
0xffff8bd16348   104  movz x16, #0x10
0xffff8bd1634c   108  sub csp, jssp, #0x10 (16)
0xffff8bd16350   112  stp fp, lr, [jssp, #-16]!
0xffff8bd16354   116  bl #+0x14 (addr 0xffff8bd16368)
0xffff8bd16358   120  movz x16, #0x18
0xffff8bd1635c   124  sub csp, jssp, #0x10 (16)
0xffff8bd16360   128  stp fp, lr, [jssp, #-16]!
0xffff8bd16364   132  bl #+0x4 (addr 0xffff8bd16368)
0xffff8bd16368   136  movz x17, #0xa00000000
0xffff8bd1636c   140  sub csp, jssp, #0x10 (16)
0xffff8bd16370   144  stp x17, cp, [jssp, #-16]!
0xffff8bd16374   148  add fp, jssp, #0x10 (16)
0xffff8bd16378   152  ldr x17, pc+24 (addr 0x0000ffff8bd16390)    ;; lazy deoptimization bailout 0
0xffff8bd1637c   156  add x17, x17, x16
0xffff8bd16380   160  br x17
0xffff8bd16384   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd16388   168  d63f03e0       constant
0xffff8bd1638c   172  d503201f       constant
0xffff8bd16390   176  8bb06000       constant
0xffff8bd16394   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd16378  runtime entry
0xffff8bd16384  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 9371
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff8bd16400     0  mov x2, x1
0xffff8bd16404     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd16448)
0xffff8bd16408     8  mov x3, x0
0xffff8bd1640c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd16458)
0xffff8bd16410    16  asr x3, x3, #32
0xffff8bd16414    20  cmp w3, #0x10 (16)
0xffff8bd16418    24  b.eq #+0x8 (addr 0xffff8bd16420)
0xffff8bd1641c    28  b #+0x4c (addr 0xffff8bd16468)
0xffff8bd16420    32  asr x2, x2, #32
0xffff8bd16424    36  tbz w2, #31, #+0x18 (addr 0xffff8bd1643c)
0xffff8bd16428    40  neg w2, w2
0xffff8bd1642c    44  and w2, w2, #0xf
0xffff8bd16430    48  negs w2, w2
0xffff8bd16434    52  b.eq #+0x44 (addr 0xffff8bd16478)
0xffff8bd16438    56  b #+0x8 (addr 0xffff8bd16440)
0xffff8bd1643c    60  and w2, w2, #0xf
0xffff8bd16440    64  lsl x0, x2, #32
0xffff8bd16444    68  ret
0xffff8bd16448    72  movz x16, #0x0
0xffff8bd1644c    76  sub csp, jssp, #0x10 (16)
0xffff8bd16450    80  stp fp, lr, [jssp, #-16]!
0xffff8bd16454    84  bl #+0x34 (addr 0xffff8bd16488)
0xffff8bd16458    88  movz x16, #0x8
0xffff8bd1645c    92  sub csp, jssp, #0x10 (16)
0xffff8bd16460    96  stp fp, lr, [jssp, #-16]!
0xffff8bd16464   100  bl #+0x24 (addr 0xffff8bd16488)
0xffff8bd16468   104  movz x16, #0x10
0xffff8bd1646c   108  sub csp, jssp, #0x10 (16)
0xffff8bd16470   112  stp fp, lr, [jssp, #-16]!
0xffff8bd16474   116  bl #+0x14 (addr 0xffff8bd16488)
0xffff8bd16478   120  movz x16, #0x18
0xffff8bd1647c   124  sub csp, jssp, #0x10 (16)
0xffff8bd16480   128  stp fp, lr, [jssp, #-16]!
0xffff8bd16484   132  bl #+0x4 (addr 0xffff8bd16488)
0xffff8bd16488   136  movz x17, #0xa00000000
0xffff8bd1648c   140  sub csp, jssp, #0x10 (16)
0xffff8bd16490   144  stp x17, cp, [jssp, #-16]!
0xffff8bd16494   148  add fp, jssp, #0x10 (16)
0xffff8bd16498   152  ldr x17, pc+24 (addr 0x0000ffff8bd164b0)    ;; lazy deoptimization bailout 0
0xffff8bd1649c   156  add x17, x17, x16
0xffff8bd164a0   160  br x17
0xffff8bd164a4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd164a8   168  d63f03e0       constant
0xffff8bd164ac   172  d503201f       constant
0xffff8bd164b0   176  8bb06000       constant
0xffff8bd164b4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd16498  runtime entry
0xffff8bd164a4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 9371
type = NORMAL
name = BinaryOpICStub(MOD:Smi*16->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff8bd16400     0  mov x2, x1
0xffff8bd16404     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd16448)
0xffff8bd16408     8  mov x3, x0
0xffff8bd1640c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd16458)
0xffff8bd16410    16  asr x3, x3, #32
0xffff8bd16414    20  cmp w3, #0x10 (16)
0xffff8bd16418    24  b.eq #+0x8 (addr 0xffff8bd16420)
0xffff8bd1641c    28  b #+0x4c (addr 0xffff8bd16468)
0xffff8bd16420    32  asr x2, x2, #32
0xffff8bd16424    36  tbz w2, #31, #+0x18 (addr 0xffff8bd1643c)
0xffff8bd16428    40  neg w2, w2
0xffff8bd1642c    44  and w2, w2, #0xf
0xffff8bd16430    48  negs w2, w2
0xffff8bd16434    52  b.eq #+0x44 (addr 0xffff8bd16478)
0xffff8bd16438    56  b #+0x8 (addr 0xffff8bd16440)
0xffff8bd1643c    60  and w2, w2, #0xf
0xffff8bd16440    64  lsl x0, x2, #32
0xffff8bd16444    68  ret
0xffff8bd16448    72  movz x16, #0x0
0xffff8bd1644c    76  sub csp, jssp, #0x10 (16)
0xffff8bd16450    80  stp fp, lr, [jssp, #-16]!
0xffff8bd16454    84  bl #+0x34 (addr 0xffff8bd16488)
0xffff8bd16458    88  movz x16, #0x8
0xffff8bd1645c    92  sub csp, jssp, #0x10 (16)
0xffff8bd16460    96  stp fp, lr, [jssp, #-16]!
0xffff8bd16464   100  bl #+0x24 (addr 0xffff8bd16488)
0xffff8bd16468   104  movz x16, #0x10
0xffff8bd1646c   108  sub csp, jssp, #0x10 (16)
0xffff8bd16470   112  stp fp, lr, [jssp, #-16]!
0xffff8bd16474   116  bl #+0x14 (addr 0xffff8bd16488)
0xffff8bd16478   120  movz x16, #0x18
0xffff8bd1647c   124  sub csp, jssp, #0x10 (16)
0xffff8bd16480   128  stp fp, lr, [jssp, #-16]!
0xffff8bd16484   132  bl #+0x4 (addr 0xffff8bd16488)
0xffff8bd16488   136  movz x17, #0xa00000000
0xffff8bd1648c   140  sub csp, jssp, #0x10 (16)
0xffff8bd16490   144  stp x17, cp, [jssp, #-16]!
0xffff8bd16494   148  add fp, jssp, #0x10 (16)
0xffff8bd16498   152  ldr x17, pc+24 (addr 0x0000ffff8bd164b0)    ;; lazy deoptimization bailout 0
0xffff8bd1649c   156  add x17, x17, x16
0xffff8bd164a0   160  br x17
0xffff8bd164a4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd164a8   168  d63f03e0       constant
0xffff8bd164ac   172  d503201f       constant
0xffff8bd164b0   176  8bb06000       constant
0xffff8bd164b4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd16498  runtime entry
0xffff8bd164a4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 11419
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff8bd16520     0  mov x2, x1
0xffff8bd16524     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd16568)
0xffff8bd16528     8  mov x3, x0
0xffff8bd1652c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd16578)
0xffff8bd16530    16  asr x3, x3, #32
0xffff8bd16534    20  cmp w3, #0x20 (32)
0xffff8bd16538    24  b.eq #+0x8 (addr 0xffff8bd16540)
0xffff8bd1653c    28  b #+0x4c (addr 0xffff8bd16588)
0xffff8bd16540    32  asr x2, x2, #32
0xffff8bd16544    36  tbz w2, #31, #+0x18 (addr 0xffff8bd1655c)
0xffff8bd16548    40  neg w2, w2
0xffff8bd1654c    44  and w2, w2, #0x1f
0xffff8bd16550    48  negs w2, w2
0xffff8bd16554    52  b.eq #+0x44 (addr 0xffff8bd16598)
0xffff8bd16558    56  b #+0x8 (addr 0xffff8bd16560)
0xffff8bd1655c    60  and w2, w2, #0x1f
0xffff8bd16560    64  lsl x0, x2, #32
0xffff8bd16564    68  ret
0xffff8bd16568    72  movz x16, #0x0
0xffff8bd1656c    76  sub csp, jssp, #0x10 (16)
0xffff8bd16570    80  stp fp, lr, [jssp, #-16]!
0xffff8bd16574    84  bl #+0x34 (addr 0xffff8bd165a8)
0xffff8bd16578    88  movz x16, #0x8
0xffff8bd1657c    92  sub csp, jssp, #0x10 (16)
0xffff8bd16580    96  stp fp, lr, [jssp, #-16]!
0xffff8bd16584   100  bl #+0x24 (addr 0xffff8bd165a8)
0xffff8bd16588   104  movz x16, #0x10
0xffff8bd1658c   108  sub csp, jssp, #0x10 (16)
0xffff8bd16590   112  stp fp, lr, [jssp, #-16]!
0xffff8bd16594   116  bl #+0x14 (addr 0xffff8bd165a8)
0xffff8bd16598   120  movz x16, #0x18
0xffff8bd1659c   124  sub csp, jssp, #0x10 (16)
0xffff8bd165a0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd165a4   132  bl #+0x4 (addr 0xffff8bd165a8)
0xffff8bd165a8   136  movz x17, #0xa00000000
0xffff8bd165ac   140  sub csp, jssp, #0x10 (16)
0xffff8bd165b0   144  stp x17, cp, [jssp, #-16]!
0xffff8bd165b4   148  add fp, jssp, #0x10 (16)
0xffff8bd165b8   152  ldr x17, pc+24 (addr 0x0000ffff8bd165d0)    ;; lazy deoptimization bailout 0
0xffff8bd165bc   156  add x17, x17, x16
0xffff8bd165c0   160  br x17
0xffff8bd165c4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd165c8   168  d63f03e0       constant
0xffff8bd165cc   172  d503201f       constant
0xffff8bd165d0   176  8bb06000       constant
0xffff8bd165d4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd165b8  runtime entry
0xffff8bd165c4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 11419
type = NORMAL
name = BinaryOpICStub(MOD:Smi*32->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff8bd16520     0  mov x2, x1
0xffff8bd16524     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd16568)
0xffff8bd16528     8  mov x3, x0
0xffff8bd1652c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd16578)
0xffff8bd16530    16  asr x3, x3, #32
0xffff8bd16534    20  cmp w3, #0x20 (32)
0xffff8bd16538    24  b.eq #+0x8 (addr 0xffff8bd16540)
0xffff8bd1653c    28  b #+0x4c (addr 0xffff8bd16588)
0xffff8bd16540    32  asr x2, x2, #32
0xffff8bd16544    36  tbz w2, #31, #+0x18 (addr 0xffff8bd1655c)
0xffff8bd16548    40  neg w2, w2
0xffff8bd1654c    44  and w2, w2, #0x1f
0xffff8bd16550    48  negs w2, w2
0xffff8bd16554    52  b.eq #+0x44 (addr 0xffff8bd16598)
0xffff8bd16558    56  b #+0x8 (addr 0xffff8bd16560)
0xffff8bd1655c    60  and w2, w2, #0x1f
0xffff8bd16560    64  lsl x0, x2, #32
0xffff8bd16564    68  ret
0xffff8bd16568    72  movz x16, #0x0
0xffff8bd1656c    76  sub csp, jssp, #0x10 (16)
0xffff8bd16570    80  stp fp, lr, [jssp, #-16]!
0xffff8bd16574    84  bl #+0x34 (addr 0xffff8bd165a8)
0xffff8bd16578    88  movz x16, #0x8
0xffff8bd1657c    92  sub csp, jssp, #0x10 (16)
0xffff8bd16580    96  stp fp, lr, [jssp, #-16]!
0xffff8bd16584   100  bl #+0x24 (addr 0xffff8bd165a8)
0xffff8bd16588   104  movz x16, #0x10
0xffff8bd1658c   108  sub csp, jssp, #0x10 (16)
0xffff8bd16590   112  stp fp, lr, [jssp, #-16]!
0xffff8bd16594   116  bl #+0x14 (addr 0xffff8bd165a8)
0xffff8bd16598   120  movz x16, #0x18
0xffff8bd1659c   124  sub csp, jssp, #0x10 (16)
0xffff8bd165a0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd165a4   132  bl #+0x4 (addr 0xffff8bd165a8)
0xffff8bd165a8   136  movz x17, #0xa00000000
0xffff8bd165ac   140  sub csp, jssp, #0x10 (16)
0xffff8bd165b0   144  stp x17, cp, [jssp, #-16]!
0xffff8bd165b4   148  add fp, jssp, #0x10 (16)
0xffff8bd165b8   152  ldr x17, pc+24 (addr 0x0000ffff8bd165d0)    ;; lazy deoptimization bailout 0
0xffff8bd165bc   156  add x17, x17, x16
0xffff8bd165c0   160  br x17
0xffff8bd165c4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd165c8   168  d63f03e0       constant
0xffff8bd165cc   172  d503201f       constant
0xffff8bd165d0   176  8bb06000       constant
0xffff8bd165d4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd165b8  runtime entry
0xffff8bd165c4  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 23707
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff8bd16640     0  mov x2, x1
0xffff8bd16644     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd16688)
0xffff8bd16648     8  mov x3, x0
0xffff8bd1664c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd16698)
0xffff8bd16650    16  asr x3, x3, #32
0xffff8bd16654    20  cmp w3, #0x800 (2048)
0xffff8bd16658    24  b.eq #+0x8 (addr 0xffff8bd16660)
0xffff8bd1665c    28  b #+0x4c (addr 0xffff8bd166a8)
0xffff8bd16660    32  asr x2, x2, #32
0xffff8bd16664    36  tbz w2, #31, #+0x18 (addr 0xffff8bd1667c)
0xffff8bd16668    40  neg w2, w2
0xffff8bd1666c    44  and w2, w2, #0x7ff
0xffff8bd16670    48  negs w2, w2
0xffff8bd16674    52  b.eq #+0x44 (addr 0xffff8bd166b8)
0xffff8bd16678    56  b #+0x8 (addr 0xffff8bd16680)
0xffff8bd1667c    60  and w2, w2, #0x7ff
0xffff8bd16680    64  lsl x0, x2, #32
0xffff8bd16684    68  ret
0xffff8bd16688    72  movz x16, #0x0
0xffff8bd1668c    76  sub csp, jssp, #0x10 (16)
0xffff8bd16690    80  stp fp, lr, [jssp, #-16]!
0xffff8bd16694    84  bl #+0x34 (addr 0xffff8bd166c8)
0xffff8bd16698    88  movz x16, #0x8
0xffff8bd1669c    92  sub csp, jssp, #0x10 (16)
0xffff8bd166a0    96  stp fp, lr, [jssp, #-16]!
0xffff8bd166a4   100  bl #+0x24 (addr 0xffff8bd166c8)
0xffff8bd166a8   104  movz x16, #0x10
0xffff8bd166ac   108  sub csp, jssp, #0x10 (16)
0xffff8bd166b0   112  stp fp, lr, [jssp, #-16]!
0xffff8bd166b4   116  bl #+0x14 (addr 0xffff8bd166c8)
0xffff8bd166b8   120  movz x16, #0x18
0xffff8bd166bc   124  sub csp, jssp, #0x10 (16)
0xffff8bd166c0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd166c4   132  bl #+0x4 (addr 0xffff8bd166c8)
0xffff8bd166c8   136  movz x17, #0xa00000000
0xffff8bd166cc   140  sub csp, jssp, #0x10 (16)
0xffff8bd166d0   144  stp x17, cp, [jssp, #-16]!
0xffff8bd166d4   148  add fp, jssp, #0x10 (16)
0xffff8bd166d8   152  ldr x17, pc+24 (addr 0x0000ffff8bd166f0)    ;; lazy deoptimization bailout 0
0xffff8bd166dc   156  add x17, x17, x16
0xffff8bd166e0   160  br x17
0xffff8bd166e4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd166e8   168  d63f03e0       constant
0xffff8bd166ec   172  d503201f       constant
0xffff8bd166f0   176  8bb06000       constant
0xffff8bd166f4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd166d8  runtime entry
0xffff8bd166e4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 23707
type = NORMAL
name = BinaryOpICStub(MOD:Smi*2048->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff8bd16640     0  mov x2, x1
0xffff8bd16644     4  tbnz w2, #0, #+0x44 (addr 0xffff8bd16688)
0xffff8bd16648     8  mov x3, x0
0xffff8bd1664c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bd16698)
0xffff8bd16650    16  asr x3, x3, #32
0xffff8bd16654    20  cmp w3, #0x800 (2048)
0xffff8bd16658    24  b.eq #+0x8 (addr 0xffff8bd16660)
0xffff8bd1665c    28  b #+0x4c (addr 0xffff8bd166a8)
0xffff8bd16660    32  asr x2, x2, #32
0xffff8bd16664    36  tbz w2, #31, #+0x18 (addr 0xffff8bd1667c)
0xffff8bd16668    40  neg w2, w2
0xffff8bd1666c    44  and w2, w2, #0x7ff
0xffff8bd16670    48  negs w2, w2
0xffff8bd16674    52  b.eq #+0x44 (addr 0xffff8bd166b8)
0xffff8bd16678    56  b #+0x8 (addr 0xffff8bd16680)
0xffff8bd1667c    60  and w2, w2, #0x7ff
0xffff8bd16680    64  lsl x0, x2, #32
0xffff8bd16684    68  ret
0xffff8bd16688    72  movz x16, #0x0
0xffff8bd1668c    76  sub csp, jssp, #0x10 (16)
0xffff8bd16690    80  stp fp, lr, [jssp, #-16]!
0xffff8bd16694    84  bl #+0x34 (addr 0xffff8bd166c8)
0xffff8bd16698    88  movz x16, #0x8
0xffff8bd1669c    92  sub csp, jssp, #0x10 (16)
0xffff8bd166a0    96  stp fp, lr, [jssp, #-16]!
0xffff8bd166a4   100  bl #+0x24 (addr 0xffff8bd166c8)
0xffff8bd166a8   104  movz x16, #0x10
0xffff8bd166ac   108  sub csp, jssp, #0x10 (16)
0xffff8bd166b0   112  stp fp, lr, [jssp, #-16]!
0xffff8bd166b4   116  bl #+0x14 (addr 0xffff8bd166c8)
0xffff8bd166b8   120  movz x16, #0x18
0xffff8bd166bc   124  sub csp, jssp, #0x10 (16)
0xffff8bd166c0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd166c4   132  bl #+0x4 (addr 0xffff8bd166c8)
0xffff8bd166c8   136  movz x17, #0xa00000000
0xffff8bd166cc   140  sub csp, jssp, #0x10 (16)
0xffff8bd166d0   144  stp x17, cp, [jssp, #-16]!
0xffff8bd166d4   148  add fp, jssp, #0x10 (16)
0xffff8bd166d8   152  ldr x17, pc+24 (addr 0x0000ffff8bd166f0)    ;; lazy deoptimization bailout 0
0xffff8bd166dc   156  add x17, x17, x16
0xffff8bd166e0   160  br x17
0xffff8bd166e4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd166e8   168  d63f03e0       constant
0xffff8bd166ec   172  d503201f       constant
0xffff8bd166f0   176  8bb06000       constant
0xffff8bd166f4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd166d8  runtime entry
0xffff8bd166e4  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff8bd16760     0  adr xzr, #+0x40 (addr 0xffff8bd167a0)
0xffff8bd16764     4  adr xzr, #+0x360 (addr 0xffff8bd16ac4)
0xffff8bd16768     8  ldr x16, pc+1736 (addr 0x0000ffff8bd16e30)    ;; external reference (store_buffer_top)
0xffff8bd1676c    12  ldr x1, [x16]
0xffff8bd16770    16  str x2, [x1], #8
0xffff8bd16774    20  str x1, [x16]
0xffff8bd16778    24  tst x1, #0x1ffff
0xffff8bd1677c    28  b.eq #+0x8 (addr 0xffff8bd16784)
0xffff8bd16780    32  ret
0xffff8bd16784    36  sub csp, jssp, #0x8 (8)
0xffff8bd16788    40  str lr, [jssp, #-8]!
0xffff8bd1678c    44  ldr x17, pc+1708 (addr 0x0000ffff8bd16e38)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd16790    48  blr x17
0xffff8bd16794    52  ldr lr, [jssp], #8
0xffff8bd16798    56  ret
0xffff8bd1679c    60  ret
0xffff8bd167a0    64  sub csp, jssp, #0x10 (16)
0xffff8bd167a4    68  stp x3, x0, [jssp, #-16]!
0xffff8bd167a8    72  ldr x1, [x2]
0xffff8bd167ac    76  and x16, x1, #0xfffffffffff00000
0xffff8bd167b0    80  ldr x16, [x16, #8]
0xffff8bd167b4    84  tst x16, #0x18
0xffff8bd167b8    88  b.eq #+0x1d8 (addr 0xffff8bd16990)
0xffff8bd167bc    92  and x16, x5, #0xfffffffffff00000
0xffff8bd167c0    96  ldr x16, [x16, #8]
0xffff8bd167c4   100  tst x16, #0x18
0xffff8bd167c8   104  b.ne #+0x1c8 (addr 0xffff8bd16990)
0xffff8bd167cc   108  and x1, x5, #0xfffffffffff00000
0xffff8bd167d0   112  ldr x0, [x1, #104]
0xffff8bd167d4   116  subs x0, x0, #0x1 (1)
0xffff8bd167d8   120  str x0, [x1, #104]
0xffff8bd167dc   124  b.mi #+0xc4 (addr 0xffff8bd168a0)
0xffff8bd167e0   128  ubfx x16, x5, #8, #12
0xffff8bd167e4   132  and x1, x5, #0xfffffffffff00000
0xffff8bd167e8   136  add x1, x1, x16, lsl #2
0xffff8bd167ec   140  ubfx x0, x5, #3, #5
0xffff8bd167f0   144  ldr x1, [x1, #360]
0xffff8bd167f4   148  lsr x1, x1, x0
0xffff8bd167f8   152  tbz w1, #0, #+0x8 (addr 0xffff8bd16800)
0xffff8bd167fc   156  tbnz w1, #1, #+0x3c (addr 0xffff8bd16838)
0xffff8bd16800   160  ldp x3, x0, [jssp], #16
0xffff8bd16804   164  ldr x16, pc+1596 (addr 0x0000ffff8bd16e40)    ;; external reference (store_buffer_top)
0xffff8bd16808   168  ldr x1, [x16]
0xffff8bd1680c   172  str x2, [x1], #8
0xffff8bd16810   176  str x1, [x16]
0xffff8bd16814   180  tst x1, #0x1ffff
0xffff8bd16818   184  b.eq #+0x8 (addr 0xffff8bd16820)
0xffff8bd1681c   188  ret
0xffff8bd16820   192  sub csp, jssp, #0x8 (8)
0xffff8bd16824   196  str lr, [jssp, #-8]!
0xffff8bd16828   200  ldr x17, pc+1568 (addr 0x0000ffff8bd16e48)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd1682c   204  blr x17
0xffff8bd16830   208  ldr lr, [jssp], #8
0xffff8bd16834   212  ret
0xffff8bd16838   216  ldr x1, [x2]
0xffff8bd1683c   220  sub csp, jssp, #0x10 (16)
0xffff8bd16840   224  stp x5, x2, [jssp, #-16]!
0xffff8bd16844   228  ubfx x16, x1, #8, #12
0xffff8bd16848   232  and x0, x1, #0xfffffffffff00000
0xffff8bd1684c   236  add x0, x0, x16, lsl #2
0xffff8bd16850   240  ubfx x5, x1, #3, #5
0xffff8bd16854   244  ldr x2, [x0, #360]
0xffff8bd16858   248  lsr x2, x2, x5
0xffff8bd1685c   252  tbz w2, #0, #+0x40 (addr 0xffff8bd1689c)
0xffff8bd16860   256  ldp x5, x2, [jssp], #16
0xffff8bd16864   260  ldp x3, x0, [jssp], #16
0xffff8bd16868   264  ldr x16, pc+1512 (addr 0x0000ffff8bd16e50)    ;; external reference (store_buffer_top)
0xffff8bd1686c   268  ldr x1, [x16]
0xffff8bd16870   272  str x2, [x1], #8
0xffff8bd16874   276  str x1, [x16]
0xffff8bd16878   280  tst x1, #0x1ffff
0xffff8bd1687c   284  b.eq #+0x8 (addr 0xffff8bd16884)
0xffff8bd16880   288  ret
0xffff8bd16884   292  sub csp, jssp, #0x8 (8)
0xffff8bd16888   296  str lr, [jssp, #-8]!
0xffff8bd1688c   300  ldr x17, pc+1484 (addr 0x0000ffff8bd16e58)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd16890   304  blr x17
0xffff8bd16894   308  ldr lr, [jssp], #8
0xffff8bd16898   312  ret
0xffff8bd1689c   316  ldp x5, x2, [jssp], #16
0xffff8bd168a0   320  sub csp, jssp, #0x78 (120)
0xffff8bd168a4   324  stp x14, x15, [jssp, #-32]!
0xffff8bd168a8   328  stp x18, lr, [jssp, #16]
0xffff8bd168ac   332  stp x10, x11, [jssp, #-32]!
0xffff8bd168b0   336  stp x12, x13, [jssp, #16]
0xffff8bd168b4   340  stp x6, x7, [jssp, #-32]!
0xffff8bd168b8   344  stp x8, x9, [jssp, #16]
0xffff8bd168bc   348  stp x2, x4, [jssp, #-24]!
0xffff8bd168c0   352  str x5, [jssp, #16]
0xffff8bd168c4   356  sub csp, jssp, #0xb0 (176)
0xffff8bd168c8   360  stp d26, d27, [jssp, #-32]!
0xffff8bd168cc   364  stp d28, d29, [jssp, #16]
0xffff8bd168d0   368  stp d22, d23, [jssp, #-32]!
0xffff8bd168d4   372  stp d24, d25, [jssp, #16]
0xffff8bd168d8   376  stp d18, d19, [jssp, #-32]!
0xffff8bd168dc   380  stp d20, d21, [jssp, #16]
0xffff8bd168e0   384  stp d6, d7, [jssp, #-32]!
0xffff8bd168e4   388  stp d16, d17, [jssp, #16]
0xffff8bd168e8   392  stp d2, d3, [jssp, #-32]!
0xffff8bd168ec   396  stp d4, d5, [jssp, #16]
0xffff8bd168f0   400  stp d0, d1, [jssp, #-16]!
0xffff8bd168f4   404  mov x0, x5
0xffff8bd168f8   408  mov x1, x2
0xffff8bd168fc   412  ldr x2, pc+1380 (addr 0x0000ffff8bd16e60)    ;; external reference (isolate)
0xffff8bd16900   416  ldr x16, pc+1384 (addr 0x0000ffff8bd16e68)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd16904   420  and csp, jssp, #0xfffffffffffffff0
0xffff8bd16908   424  blr x16
0xffff8bd1690c   428  ldp d2, d3, [jssp, #16]
0xffff8bd16910   432  ldp d0, d1, [jssp], #32
0xffff8bd16914   436  ldp d6, d7, [jssp, #16]
0xffff8bd16918   440  ldp d4, d5, [jssp], #32
0xffff8bd1691c   444  ldp d18, d19, [jssp, #16]
0xffff8bd16920   448  ldp d16, d17, [jssp], #32
0xffff8bd16924   452  ldp d22, d23, [jssp, #16]
0xffff8bd16928   456  ldp d20, d21, [jssp], #32
0xffff8bd1692c   460  ldp d26, d27, [jssp, #16]
0xffff8bd16930   464  ldp d24, d25, [jssp], #32
0xffff8bd16934   468  ldp d28, d29, [jssp], #16
0xffff8bd16938   472  ldp x5, x6, [jssp, #16]
0xffff8bd1693c   476  ldp x2, x4, [jssp], #32
0xffff8bd16940   480  ldp x9, x10, [jssp, #16]
0xffff8bd16944   484  ldp x7, x8, [jssp], #32
0xffff8bd16948   488  ldp x13, x14, [jssp, #16]
0xffff8bd1694c   492  ldp x11, x12, [jssp], #32
0xffff8bd16950   496  ldr lr, [jssp, #16]
0xffff8bd16954   500  ldp x15, x18, [jssp], #24
0xffff8bd16958   504  ldp x3, x0, [jssp], #16
0xffff8bd1695c   508  ldr x16, pc+1300 (addr 0x0000ffff8bd16e70)    ;; external reference (store_buffer_top)
0xffff8bd16960   512  ldr x1, [x16]
0xffff8bd16964   516  str x2, [x1], #8
0xffff8bd16968   520  str x1, [x16]
0xffff8bd1696c   524  tst x1, #0x1ffff
0xffff8bd16970   528  b.eq #+0x8 (addr 0xffff8bd16978)
0xffff8bd16974   532  ret
0xffff8bd16978   536  sub csp, jssp, #0x8 (8)
0xffff8bd1697c   540  str lr, [jssp, #-8]!
0xffff8bd16980   544  ldr x17, pc+1272 (addr 0x0000ffff8bd16e78)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd16984   548  blr x17
0xffff8bd16988   552  ldr lr, [jssp], #8
0xffff8bd1698c   556  ret
0xffff8bd16990   560  and x1, x5, #0xfffffffffff00000
0xffff8bd16994   564  ldr x0, [x1, #104]
0xffff8bd16998   568  subs x0, x0, #0x1 (1)
0xffff8bd1699c   572  str x0, [x1, #104]
0xffff8bd169a0   576  b.mi #+0x64 (addr 0xffff8bd16a04)
0xffff8bd169a4   580  ubfx x16, x5, #8, #12
0xffff8bd169a8   584  and x1, x5, #0xfffffffffff00000
0xffff8bd169ac   588  add x1, x1, x16, lsl #2
0xffff8bd169b0   592  ubfx x0, x5, #3, #5
0xffff8bd169b4   596  ldr x1, [x1, #360]
0xffff8bd169b8   600  lsr x1, x1, x0
0xffff8bd169bc   604  tbz w1, #0, #+0x8 (addr 0xffff8bd169c4)
0xffff8bd169c0   608  tbnz w1, #1, #+0xc (addr 0xffff8bd169cc)
0xffff8bd169c4   612  ldp x3, x0, [jssp], #16
0xffff8bd169c8   616  ret
0xffff8bd169cc   620  ldr x1, [x2]
0xffff8bd169d0   624  sub csp, jssp, #0x10 (16)
0xffff8bd169d4   628  stp x5, x2, [jssp, #-16]!
0xffff8bd169d8   632  ubfx x16, x1, #8, #12
0xffff8bd169dc   636  and x0, x1, #0xfffffffffff00000
0xffff8bd169e0   640  add x0, x0, x16, lsl #2
0xffff8bd169e4   644  ubfx x5, x1, #3, #5
0xffff8bd169e8   648  ldr x2, [x0, #360]
0xffff8bd169ec   652  lsr x2, x2, x5
0xffff8bd169f0   656  tbz w2, #0, #+0x10 (addr 0xffff8bd16a00)
0xffff8bd169f4   660  ldp x5, x2, [jssp], #16
0xffff8bd169f8   664  ldp x3, x0, [jssp], #16
0xffff8bd169fc   668  ret
0xffff8bd16a00   672  ldp x5, x2, [jssp], #16
0xffff8bd16a04   676  sub csp, jssp, #0x78 (120)
0xffff8bd16a08   680  stp x14, x15, [jssp, #-32]!
0xffff8bd16a0c   684  stp x18, lr, [jssp, #16]
0xffff8bd16a10   688  stp x10, x11, [jssp, #-32]!
0xffff8bd16a14   692  stp x12, x13, [jssp, #16]
0xffff8bd16a18   696  stp x6, x7, [jssp, #-32]!
0xffff8bd16a1c   700  stp x8, x9, [jssp, #16]
0xffff8bd16a20   704  stp x2, x4, [jssp, #-24]!
0xffff8bd16a24   708  str x5, [jssp, #16]
0xffff8bd16a28   712  sub csp, jssp, #0xb0 (176)
0xffff8bd16a2c   716  stp d26, d27, [jssp, #-32]!
0xffff8bd16a30   720  stp d28, d29, [jssp, #16]
0xffff8bd16a34   724  stp d22, d23, [jssp, #-32]!
0xffff8bd16a38   728  stp d24, d25, [jssp, #16]
0xffff8bd16a3c   732  stp d18, d19, [jssp, #-32]!
0xffff8bd16a40   736  stp d20, d21, [jssp, #16]
0xffff8bd16a44   740  stp d6, d7, [jssp, #-32]!
0xffff8bd16a48   744  stp d16, d17, [jssp, #16]
0xffff8bd16a4c   748  stp d2, d3, [jssp, #-32]!
0xffff8bd16a50   752  stp d4, d5, [jssp, #16]
0xffff8bd16a54   756  stp d0, d1, [jssp, #-16]!
0xffff8bd16a58   760  mov x0, x5
0xffff8bd16a5c   764  mov x1, x2
0xffff8bd16a60   768  ldr x2, pc+1056 (addr 0x0000ffff8bd16e80)    ;; external reference (isolate)
0xffff8bd16a64   772  ldr x16, pc+1060 (addr 0x0000ffff8bd16e88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd16a68   776  and csp, jssp, #0xfffffffffffffff0
0xffff8bd16a6c   780  blr x16
0xffff8bd16a70   784  ldp d2, d3, [jssp, #16]
0xffff8bd16a74   788  ldp d0, d1, [jssp], #32
0xffff8bd16a78   792  ldp d6, d7, [jssp, #16]
0xffff8bd16a7c   796  ldp d4, d5, [jssp], #32
0xffff8bd16a80   800  ldp d18, d19, [jssp, #16]
0xffff8bd16a84   804  ldp d16, d17, [jssp], #32
0xffff8bd16a88   808  ldp d22, d23, [jssp, #16]
0xffff8bd16a8c   812  ldp d20, d21, [jssp], #32
0xffff8bd16a90   816  ldp d26, d27, [jssp, #16]
0xffff8bd16a94   820  ldp d24, d25, [jssp], #32
0xffff8bd16a98   824  ldp d28, d29, [jssp], #16
0xffff8bd16a9c   828  ldp x5, x6, [jssp, #16]
0xffff8bd16aa0   832  ldp x2, x4, [jssp], #32
0xffff8bd16aa4   836  ldp x9, x10, [jssp, #16]
0xffff8bd16aa8   840  ldp x7, x8, [jssp], #32
0xffff8bd16aac   844  ldp x13, x14, [jssp, #16]
0xffff8bd16ab0   848  ldp x11, x12, [jssp], #32
0xffff8bd16ab4   852  ldr lr, [jssp, #16]
0xffff8bd16ab8   856  ldp x15, x18, [jssp], #24
0xffff8bd16abc   860  ldp x3, x0, [jssp], #16
0xffff8bd16ac0   864  ret
0xffff8bd16ac4   868  sub csp, jssp, #0x10 (16)
0xffff8bd16ac8   872  stp x3, x0, [jssp, #-16]!
0xffff8bd16acc   876  ldr x1, [x2]
0xffff8bd16ad0   880  and x16, x1, #0xfffffffffff00000
0xffff8bd16ad4   884  ldr x16, [x16, #8]
0xffff8bd16ad8   888  tst x16, #0x18
0xffff8bd16adc   892  b.eq #+0x1f8 (addr 0xffff8bd16cd4)
0xffff8bd16ae0   896  and x16, x5, #0xfffffffffff00000
0xffff8bd16ae4   900  ldr x16, [x16, #8]
0xffff8bd16ae8   904  tst x16, #0x18
0xffff8bd16aec   908  b.ne #+0x1e8 (addr 0xffff8bd16cd4)
0xffff8bd16af0   912  and x1, x5, #0xfffffffffff00000
0xffff8bd16af4   916  ldr x0, [x1, #104]
0xffff8bd16af8   920  subs x0, x0, #0x1 (1)
0xffff8bd16afc   924  str x0, [x1, #104]
0xffff8bd16b00   928  b.mi #+0xe4 (addr 0xffff8bd16be4)
0xffff8bd16b04   932  ubfx x16, x5, #8, #12
0xffff8bd16b08   936  and x1, x5, #0xfffffffffff00000
0xffff8bd16b0c   940  add x1, x1, x16, lsl #2
0xffff8bd16b10   944  ubfx x0, x5, #3, #5
0xffff8bd16b14   948  ldr x1, [x1, #360]
0xffff8bd16b18   952  lsr x1, x1, x0
0xffff8bd16b1c   956  tbz w1, #0, #+0x8 (addr 0xffff8bd16b24)
0xffff8bd16b20   960  tbnz w1, #1, #+0x3c (addr 0xffff8bd16b5c)
0xffff8bd16b24   964  ldp x3, x0, [jssp], #16
0xffff8bd16b28   968  ldr x16, pc+872 (addr 0x0000ffff8bd16e90)    ;; external reference (store_buffer_top)
0xffff8bd16b2c   972  ldr x1, [x16]
0xffff8bd16b30   976  str x2, [x1], #8
0xffff8bd16b34   980  str x1, [x16]
0xffff8bd16b38   984  tst x1, #0x1ffff
0xffff8bd16b3c   988  b.eq #+0x8 (addr 0xffff8bd16b44)
0xffff8bd16b40   992  ret
0xffff8bd16b44   996  sub csp, jssp, #0x8 (8)
0xffff8bd16b48  1000  str lr, [jssp, #-8]!
0xffff8bd16b4c  1004  ldr x17, pc+844 (addr 0x0000ffff8bd16e98)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd16b50  1008  blr x17
0xffff8bd16b54  1012  ldr lr, [jssp], #8
0xffff8bd16b58  1016  ret
0xffff8bd16b5c  1020  ldr x1, [x2]
0xffff8bd16b60  1024  and x0, x1, #0xfffffffffff00000
0xffff8bd16b64  1028  ldr x0, [x0, #8]
0xffff8bd16b68  1032  tbz w0, #6, #+0x18 (addr 0xffff8bd16b80)
0xffff8bd16b6c  1036  and x0, x5, #0xfffffffffff00000
0xffff8bd16b70  1040  ldr x0, [x0, #8]
0xffff8bd16b74  1044  movz x16, #0x58
0xffff8bd16b78  1048  tst x0, x16
0xffff8bd16b7c  1052  b.eq #+0x68 (addr 0xffff8bd16be4)
0xffff8bd16b80  1056  sub csp, jssp, #0x10 (16)
0xffff8bd16b84  1060  stp x5, x2, [jssp, #-16]!
0xffff8bd16b88  1064  ubfx x16, x1, #8, #12
0xffff8bd16b8c  1068  and x0, x1, #0xfffffffffff00000
0xffff8bd16b90  1072  add x0, x0, x16, lsl #2
0xffff8bd16b94  1076  ubfx x5, x1, #3, #5
0xffff8bd16b98  1080  ldr x2, [x0, #360]
0xffff8bd16b9c  1084  lsr x2, x2, x5
0xffff8bd16ba0  1088  tbz w2, #0, #+0x40 (addr 0xffff8bd16be0)
0xffff8bd16ba4  1092  ldp x5, x2, [jssp], #16
0xffff8bd16ba8  1096  ldp x3, x0, [jssp], #16
0xffff8bd16bac  1100  ldr x16, pc+756 (addr 0x0000ffff8bd16ea0)    ;; external reference (store_buffer_top)
0xffff8bd16bb0  1104  ldr x1, [x16]
0xffff8bd16bb4  1108  str x2, [x1], #8
0xffff8bd16bb8  1112  str x1, [x16]
0xffff8bd16bbc  1116  tst x1, #0x1ffff
0xffff8bd16bc0  1120  b.eq #+0x8 (addr 0xffff8bd16bc8)
0xffff8bd16bc4  1124  ret
0xffff8bd16bc8  1128  sub csp, jssp, #0x8 (8)
0xffff8bd16bcc  1132  str lr, [jssp, #-8]!
0xffff8bd16bd0  1136  ldr x17, pc+728 (addr 0x0000ffff8bd16ea8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd16bd4  1140  blr x17
0xffff8bd16bd8  1144  ldr lr, [jssp], #8
0xffff8bd16bdc  1148  ret
0xffff8bd16be0  1152  ldp x5, x2, [jssp], #16
0xffff8bd16be4  1156  sub csp, jssp, #0x78 (120)
0xffff8bd16be8  1160  stp x14, x15, [jssp, #-32]!
0xffff8bd16bec  1164  stp x18, lr, [jssp, #16]
0xffff8bd16bf0  1168  stp x10, x11, [jssp, #-32]!
0xffff8bd16bf4  1172  stp x12, x13, [jssp, #16]
0xffff8bd16bf8  1176  stp x6, x7, [jssp, #-32]!
0xffff8bd16bfc  1180  stp x8, x9, [jssp, #16]
0xffff8bd16c00  1184  stp x2, x4, [jssp, #-24]!
0xffff8bd16c04  1188  str x5, [jssp, #16]
0xffff8bd16c08  1192  sub csp, jssp, #0xb0 (176)
0xffff8bd16c0c  1196  stp d26, d27, [jssp, #-32]!
0xffff8bd16c10  1200  stp d28, d29, [jssp, #16]
0xffff8bd16c14  1204  stp d22, d23, [jssp, #-32]!
0xffff8bd16c18  1208  stp d24, d25, [jssp, #16]
0xffff8bd16c1c  1212  stp d18, d19, [jssp, #-32]!
0xffff8bd16c20  1216  stp d20, d21, [jssp, #16]
0xffff8bd16c24  1220  stp d6, d7, [jssp, #-32]!
0xffff8bd16c28  1224  stp d16, d17, [jssp, #16]
0xffff8bd16c2c  1228  stp d2, d3, [jssp, #-32]!
0xffff8bd16c30  1232  stp d4, d5, [jssp, #16]
0xffff8bd16c34  1236  stp d0, d1, [jssp, #-16]!
0xffff8bd16c38  1240  mov x0, x5
0xffff8bd16c3c  1244  mov x1, x2
0xffff8bd16c40  1248  ldr x2, pc+624 (addr 0x0000ffff8bd16eb0)    ;; external reference (isolate)
0xffff8bd16c44  1252  ldr x16, pc+628 (addr 0x0000ffff8bd16eb8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd16c48  1256  and csp, jssp, #0xfffffffffffffff0
0xffff8bd16c4c  1260  blr x16
0xffff8bd16c50  1264  ldp d2, d3, [jssp, #16]
0xffff8bd16c54  1268  ldp d0, d1, [jssp], #32
0xffff8bd16c58  1272  ldp d6, d7, [jssp, #16]
0xffff8bd16c5c  1276  ldp d4, d5, [jssp], #32
0xffff8bd16c60  1280  ldp d18, d19, [jssp, #16]
0xffff8bd16c64  1284  ldp d16, d17, [jssp], #32
0xffff8bd16c68  1288  ldp d22, d23, [jssp, #16]
0xffff8bd16c6c  1292  ldp d20, d21, [jssp], #32
0xffff8bd16c70  1296  ldp d26, d27, [jssp, #16]
0xffff8bd16c74  1300  ldp d24, d25, [jssp], #32
0xffff8bd16c78  1304  ldp d28, d29, [jssp], #16
0xffff8bd16c7c  1308  ldp x5, x6, [jssp, #16]
0xffff8bd16c80  1312  ldp x2, x4, [jssp], #32
0xffff8bd16c84  1316  ldp x9, x10, [jssp, #16]
0xffff8bd16c88  1320  ldp x7, x8, [jssp], #32
0xffff8bd16c8c  1324  ldp x13, x14, [jssp, #16]
0xffff8bd16c90  1328  ldp x11, x12, [jssp], #32
0xffff8bd16c94  1332  ldr lr, [jssp, #16]
0xffff8bd16c98  1336  ldp x15, x18, [jssp], #24
0xffff8bd16c9c  1340  ldp x3, x0, [jssp], #16
0xffff8bd16ca0  1344  ldr x16, pc+544 (addr 0x0000ffff8bd16ec0)    ;; external reference (store_buffer_top)
0xffff8bd16ca4  1348  ldr x1, [x16]
0xffff8bd16ca8  1352  str x2, [x1], #8
0xffff8bd16cac  1356  str x1, [x16]
0xffff8bd16cb0  1360  tst x1, #0x1ffff
0xffff8bd16cb4  1364  b.eq #+0x8 (addr 0xffff8bd16cbc)
0xffff8bd16cb8  1368  ret
0xffff8bd16cbc  1372  sub csp, jssp, #0x8 (8)
0xffff8bd16cc0  1376  str lr, [jssp, #-8]!
0xffff8bd16cc4  1380  ldr x17, pc+516 (addr 0x0000ffff8bd16ec8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd16cc8  1384  blr x17
0xffff8bd16ccc  1388  ldr lr, [jssp], #8
0xffff8bd16cd0  1392  ret
0xffff8bd16cd4  1396  and x1, x5, #0xfffffffffff00000
0xffff8bd16cd8  1400  ldr x0, [x1, #104]
0xffff8bd16cdc  1404  subs x0, x0, #0x1 (1)
0xffff8bd16ce0  1408  str x0, [x1, #104]
0xffff8bd16ce4  1412  b.mi #+0x84 (addr 0xffff8bd16d68)
0xffff8bd16ce8  1416  ubfx x16, x5, #8, #12
0xffff8bd16cec  1420  and x1, x5, #0xfffffffffff00000
0xffff8bd16cf0  1424  add x1, x1, x16, lsl #2
0xffff8bd16cf4  1428  ubfx x0, x5, #3, #5
0xffff8bd16cf8  1432  ldr x1, [x1, #360]
0xffff8bd16cfc  1436  lsr x1, x1, x0
0xffff8bd16d00  1440  tbz w1, #0, #+0x8 (addr 0xffff8bd16d08)
0xffff8bd16d04  1444  tbnz w1, #1, #+0xc (addr 0xffff8bd16d10)
0xffff8bd16d08  1448  ldp x3, x0, [jssp], #16
0xffff8bd16d0c  1452  ret
0xffff8bd16d10  1456  ldr x1, [x2]
0xffff8bd16d14  1460  and x0, x1, #0xfffffffffff00000
0xffff8bd16d18  1464  ldr x0, [x0, #8]
0xffff8bd16d1c  1468  tbz w0, #6, #+0x18 (addr 0xffff8bd16d34)
0xffff8bd16d20  1472  and x0, x5, #0xfffffffffff00000
0xffff8bd16d24  1476  ldr x0, [x0, #8]
0xffff8bd16d28  1480  movz x16, #0x58
0xffff8bd16d2c  1484  tst x0, x16
0xffff8bd16d30  1488  b.eq #+0x38 (addr 0xffff8bd16d68)
0xffff8bd16d34  1492  sub csp, jssp, #0x10 (16)
0xffff8bd16d38  1496  stp x5, x2, [jssp, #-16]!
0xffff8bd16d3c  1500  ubfx x16, x1, #8, #12
0xffff8bd16d40  1504  and x0, x1, #0xfffffffffff00000
0xffff8bd16d44  1508  add x0, x0, x16, lsl #2
0xffff8bd16d48  1512  ubfx x5, x1, #3, #5
0xffff8bd16d4c  1516  ldr x2, [x0, #360]
0xffff8bd16d50  1520  lsr x2, x2, x5
0xffff8bd16d54  1524  tbz w2, #0, #+0x10 (addr 0xffff8bd16d64)
0xffff8bd16d58  1528  ldp x5, x2, [jssp], #16
0xffff8bd16d5c  1532  ldp x3, x0, [jssp], #16
0xffff8bd16d60  1536  ret
0xffff8bd16d64  1540  ldp x5, x2, [jssp], #16
0xffff8bd16d68  1544  sub csp, jssp, #0x78 (120)
0xffff8bd16d6c  1548  stp x14, x15, [jssp, #-32]!
0xffff8bd16d70  1552  stp x18, lr, [jssp, #16]
0xffff8bd16d74  1556  stp x10, x11, [jssp, #-32]!
0xffff8bd16d78  1560  stp x12, x13, [jssp, #16]
0xffff8bd16d7c  1564  stp x6, x7, [jssp, #-32]!
0xffff8bd16d80  1568  stp x8, x9, [jssp, #16]
0xffff8bd16d84  1572  stp x2, x4, [jssp, #-24]!
0xffff8bd16d88  1576  str x5, [jssp, #16]
0xffff8bd16d8c  1580  sub csp, jssp, #0xb0 (176)
0xffff8bd16d90  1584  stp d26, d27, [jssp, #-32]!
0xffff8bd16d94  1588  stp d28, d29, [jssp, #16]
0xffff8bd16d98  1592  stp d22, d23, [jssp, #-32]!
0xffff8bd16d9c  1596  stp d24, d25, [jssp, #16]
0xffff8bd16da0  1600  stp d18, d19, [jssp, #-32]!
0xffff8bd16da4  1604  stp d20, d21, [jssp, #16]
0xffff8bd16da8  1608  stp d6, d7, [jssp, #-32]!
0xffff8bd16dac  1612  stp d16, d17, [jssp, #16]
0xffff8bd16db0  1616  stp d2, d3, [jssp, #-32]!
0xffff8bd16db4  1620  stp d4, d5, [jssp, #16]
0xffff8bd16db8  1624  stp d0, d1, [jssp, #-16]!
0xffff8bd16dbc  1628  mov x0, x5
0xffff8bd16dc0  1632  mov x1, x2
0xffff8bd16dc4  1636  ldr x2, pc+268 (addr 0x0000ffff8bd16ed0)    ;; external reference (isolate)
0xffff8bd16dc8  1640  ldr x16, pc+272 (addr 0x0000ffff8bd16ed8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd16dcc  1644  and csp, jssp, #0xfffffffffffffff0
0xffff8bd16dd0  1648  blr x16
0xffff8bd16dd4  1652  ldp d2, d3, [jssp, #16]
0xffff8bd16dd8  1656  ldp d0, d1, [jssp], #32
0xffff8bd16ddc  1660  ldp d6, d7, [jssp, #16]
0xffff8bd16de0  1664  ldp d4, d5, [jssp], #32
0xffff8bd16de4  1668  ldp d18, d19, [jssp, #16]
0xffff8bd16de8  1672  ldp d16, d17, [jssp], #32
0xffff8bd16dec  1676  ldp d22, d23, [jssp, #16]
0xffff8bd16df0  1680  ldp d20, d21, [jssp], #32
0xffff8bd16df4  1684  ldp d26, d27, [jssp, #16]
0xffff8bd16df8  1688  ldp d24, d25, [jssp], #32
0xffff8bd16dfc  1692  ldp d28, d29, [jssp], #16
0xffff8bd16e00  1696  ldp x5, x6, [jssp, #16]
0xffff8bd16e04  1700  ldp x2, x4, [jssp], #32
0xffff8bd16e08  1704  ldp x9, x10, [jssp, #16]
0xffff8bd16e0c  1708  ldp x7, x8, [jssp], #32
0xffff8bd16e10  1712  ldp x13, x14, [jssp, #16]
0xffff8bd16e14  1716  ldp x11, x12, [jssp], #32
0xffff8bd16e18  1720  ldr lr, [jssp, #16]
0xffff8bd16e1c  1724  ldp x15, x18, [jssp], #24
0xffff8bd16e20  1728  ldp x3, x0, [jssp], #16
0xffff8bd16e24  1732  ret
0xffff8bd16e28  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd16e2c  1740  d63f03e0       constant
0xffff8bd16e30  1744  2cb8e8c0       constant
0xffff8bd16e34  1748  00000000       constant
0xffff8bd16e38  1752  8bd065a0       constant
0xffff8bd16e3c  1756  0000ffff       constant
0xffff8bd16e40  1760  2cb8e8c0       constant
0xffff8bd16e44  1764  00000000       constant
0xffff8bd16e48  1768  8bd065a0       constant
0xffff8bd16e4c  1772  0000ffff       constant
0xffff8bd16e50  1776  2cb8e8c0       constant
0xffff8bd16e54  1780  00000000       constant
0xffff8bd16e58  1784  8bd065a0       constant
0xffff8bd16e5c  1788  0000ffff       constant
0xffff8bd16e60  1792  2cb8d2d0       constant
0xffff8bd16e64  1796  00000000       constant
0xffff8bd16e68  1800  00c2d958       constant
0xffff8bd16e6c  1804  00000000       constant
0xffff8bd16e70  1808  2cb8e8c0       constant
0xffff8bd16e74  1812  00000000       constant
0xffff8bd16e78  1816  8bd065a0       constant
0xffff8bd16e7c  1820  0000ffff       constant
0xffff8bd16e80  1824  2cb8d2d0       constant
0xffff8bd16e84  1828  00000000       constant
0xffff8bd16e88  1832  00c2d958       constant
0xffff8bd16e8c  1836  00000000       constant
0xffff8bd16e90  1840  2cb8e8c0       constant
0xffff8bd16e94  1844  00000000       constant
0xffff8bd16e98  1848  8bd065a0       constant
0xffff8bd16e9c  1852  0000ffff       constant
0xffff8bd16ea0  1856  2cb8e8c0       constant
0xffff8bd16ea4  1860  00000000       constant
0xffff8bd16ea8  1864  8bd065a0       constant
0xffff8bd16eac  1868  0000ffff       constant
0xffff8bd16eb0  1872  2cb8d2d0       constant
0xffff8bd16eb4  1876  00000000       constant
0xffff8bd16eb8  1880  00c2d958       constant
0xffff8bd16ebc  1884  00000000       constant
0xffff8bd16ec0  1888  2cb8e8c0       constant
0xffff8bd16ec4  1892  00000000       constant
0xffff8bd16ec8  1896  8bd065a0       constant
0xffff8bd16ecc  1900  0000ffff       constant
0xffff8bd16ed0  1904  2cb8d2d0       constant
0xffff8bd16ed4  1908  00000000       constant
0xffff8bd16ed8  1912  00c2d958       constant
0xffff8bd16edc  1916  00000000       constant


RelocInfo (size = 65)
0xffff8bd16768  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd1678c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd16804  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd16828  code target (STUB)  (0xffff8bd065a0)
0xffff8bd16868  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd1688c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd168fc  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd16900  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd1695c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd16980  code target (STUB)  (0xffff8bd065a0)
0xffff8bd16a60  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd16a64  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd16b28  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd16b4c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd16bac  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd16bd0  code target (STUB)  (0xffff8bd065a0)
0xffff8bd16c40  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd16c44  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd16ca0  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd16cc4  code target (STUB)  (0xffff8bd065a0)
0xffff8bd16dc4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd16dc8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd16e28  constant pool (size 184)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff8bd16f40     0  ldur x5, [x1, #15]
0xffff8bd16f44     4  ldur x6, [x5, #-1]
0xffff8bd16f48     8  ldr x16, pc+152 (addr 0x0000ffff8bd16fe0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd16f4c    12  cmp x6, x16
0xffff8bd16f50    16  b.ne #+0xa0 (addr 0xffff8bd16ff0)
0xffff8bd16f54    20  ldur w6, [x5, #11]
0xffff8bd16f58    24  tbnz w2, #0, #+0x54 (addr 0xffff8bd16fac)
0xffff8bd16f5c    28  asr x8, x2, #32
0xffff8bd16f60    32  cmp w8, w6
0xffff8bd16f64    36  b.hs #+0x9c (addr 0xffff8bd17000)
0xffff8bd16f68    40  mov x1, x0
0xffff8bd16f6c    44  add x2, x5, #0xf (15)
0xffff8bd16f70    48  str x1, [x2, w8, sxtw #3]
0xffff8bd16f74    52  add x2, x2, w8, sxtw #3
0xffff8bd16f78    56  tbz w1, #0, #+0x30 (addr 0xffff8bd16fa8)
0xffff8bd16f7c    60  and x1, x1, #0xfffffffffff00000
0xffff8bd16f80    64  ldr x1, [x1, #8]
0xffff8bd16f84    68  tbz w1, #1, #+0x24 (addr 0xffff8bd16fa8)
0xffff8bd16f88    72  and x1, x5, #0xfffffffffff00000
0xffff8bd16f8c    76  ldr x1, [x1, #8]
0xffff8bd16f90    80  tbz w1, #2, #+0x18 (addr 0xffff8bd16fa8)
0xffff8bd16f94    84  sub csp, jssp, #0x8 (8)
0xffff8bd16f98    88  str lr, [jssp, #-8]!
0xffff8bd16f9c    92  ldr x16, pc+76 (addr 0x0000ffff8bd16fe8)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff8bd16fa0    96  blr x16
0xffff8bd16fa4   100  ldr lr, [jssp], #8
0xffff8bd16fa8   104  ret
0xffff8bd16fac   108  ldur x16, [x2, #-1]
0xffff8bd16fb0   112  ldr x17, [x26, #120]
0xffff8bd16fb4   116  cmp x16, x17
0xffff8bd16fb8   120  b.ne #+0x58 (addr 0xffff8bd17010)
0xffff8bd16fbc   124  ldur d29, [x2, #7]
0xffff8bd16fc0   128  fcvtzs w8, d29
0xffff8bd16fc4   132  scvtf d0, w8
0xffff8bd16fc8   136  fcmp d29, d0
0xffff8bd16fcc   140  b.ne #+0x44 (addr 0xffff8bd17010)
0xffff8bd16fd0   144  b #-0x70 (addr 0xffff8bd16f60)
0xffff8bd16fd4   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd16fd8   152  d63f03e0       constant
0xffff8bd16fdc   156  d503201f       constant
0xffff8bd16fe0   160  5f504259       constant
0xffff8bd16fe4   164  00000000       constant
0xffff8bd16fe8   168  8bd16760       constant
0xffff8bd16fec   172  0000ffff       constant
0xffff8bd16ff0   176  movz x16, #0x0
0xffff8bd16ff4   180  sub csp, jssp, #0x10 (16)
0xffff8bd16ff8   184  stp fp, lr, [jssp, #-16]!
0xffff8bd16ffc   188  bl #+0x24 (addr 0xffff8bd17020)
0xffff8bd17000   192  movz x16, #0x8
0xffff8bd17004   196  sub csp, jssp, #0x10 (16)
0xffff8bd17008   200  stp fp, lr, [jssp, #-16]!
0xffff8bd1700c   204  bl #+0x14 (addr 0xffff8bd17020)
0xffff8bd17010   208  movz x16, #0x10
0xffff8bd17014   212  sub csp, jssp, #0x10 (16)
0xffff8bd17018   216  stp fp, lr, [jssp, #-16]!
0xffff8bd1701c   220  bl #+0x4 (addr 0xffff8bd17020)
0xffff8bd17020   224  movz x17, #0xa00000000
0xffff8bd17024   228  sub csp, jssp, #0x10 (16)
0xffff8bd17028   232  stp x17, cp, [jssp, #-16]!
0xffff8bd1702c   236  add fp, jssp, #0x10 (16)
0xffff8bd17030   240  ldr x17, pc+24 (addr 0x0000ffff8bd17048)    ;; lazy deoptimization bailout 0
0xffff8bd17034   244  add x17, x17, x16
0xffff8bd17038   248  br x17
0xffff8bd1703c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd17040   256  d63f03e0       constant
0xffff8bd17044   260  d503201f       constant
0xffff8bd17048   264  8bb06000       constant
0xffff8bd1704c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff8bd16f48  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd16f9c  code target (STUB)  (0xffff8bd16760)
0xffff8bd16fd4  constant pool (size 28)
0xffff8bd17030  runtime entry
0xffff8bd1703c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff8bd16f40     0  ldur x5, [x1, #15]
0xffff8bd16f44     4  ldur x6, [x5, #-1]
0xffff8bd16f48     8  ldr x16, pc+152 (addr 0x0000ffff8bd16fe0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd16f4c    12  cmp x6, x16
0xffff8bd16f50    16  b.ne #+0xa0 (addr 0xffff8bd16ff0)
0xffff8bd16f54    20  ldur w6, [x5, #11]
0xffff8bd16f58    24  tbnz w2, #0, #+0x54 (addr 0xffff8bd16fac)
0xffff8bd16f5c    28  asr x8, x2, #32
0xffff8bd16f60    32  cmp w8, w6
0xffff8bd16f64    36  b.hs #+0x9c (addr 0xffff8bd17000)
0xffff8bd16f68    40  mov x1, x0
0xffff8bd16f6c    44  add x2, x5, #0xf (15)
0xffff8bd16f70    48  str x1, [x2, w8, sxtw #3]
0xffff8bd16f74    52  add x2, x2, w8, sxtw #3
0xffff8bd16f78    56  tbz w1, #0, #+0x30 (addr 0xffff8bd16fa8)
0xffff8bd16f7c    60  and x1, x1, #0xfffffffffff00000
0xffff8bd16f80    64  ldr x1, [x1, #8]
0xffff8bd16f84    68  tbz w1, #1, #+0x24 (addr 0xffff8bd16fa8)
0xffff8bd16f88    72  and x1, x5, #0xfffffffffff00000
0xffff8bd16f8c    76  ldr x1, [x1, #8]
0xffff8bd16f90    80  tbz w1, #2, #+0x18 (addr 0xffff8bd16fa8)
0xffff8bd16f94    84  sub csp, jssp, #0x8 (8)
0xffff8bd16f98    88  str lr, [jssp, #-8]!
0xffff8bd16f9c    92  ldr x16, pc+76 (addr 0x0000ffff8bd16fe8)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff8bd16fa0    96  blr x16
0xffff8bd16fa4   100  ldr lr, [jssp], #8
0xffff8bd16fa8   104  ret
0xffff8bd16fac   108  ldur x16, [x2, #-1]
0xffff8bd16fb0   112  ldr x17, [x26, #120]
0xffff8bd16fb4   116  cmp x16, x17
0xffff8bd16fb8   120  b.ne #+0x58 (addr 0xffff8bd17010)
0xffff8bd16fbc   124  ldur d29, [x2, #7]
0xffff8bd16fc0   128  fcvtzs w8, d29
0xffff8bd16fc4   132  scvtf d0, w8
0xffff8bd16fc8   136  fcmp d29, d0
0xffff8bd16fcc   140  b.ne #+0x44 (addr 0xffff8bd17010)
0xffff8bd16fd0   144  b #-0x70 (addr 0xffff8bd16f60)
0xffff8bd16fd4   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd16fd8   152  d63f03e0       constant
0xffff8bd16fdc   156  d503201f       constant
0xffff8bd16fe0   160  5f504259       constant
0xffff8bd16fe4   164  00000000       constant
0xffff8bd16fe8   168  8bd16760       constant
0xffff8bd16fec   172  0000ffff       constant
0xffff8bd16ff0   176  movz x16, #0x0
0xffff8bd16ff4   180  sub csp, jssp, #0x10 (16)
0xffff8bd16ff8   184  stp fp, lr, [jssp, #-16]!
0xffff8bd16ffc   188  bl #+0x24 (addr 0xffff8bd17020)
0xffff8bd17000   192  movz x16, #0x8
0xffff8bd17004   196  sub csp, jssp, #0x10 (16)
0xffff8bd17008   200  stp fp, lr, [jssp, #-16]!
0xffff8bd1700c   204  bl #+0x14 (addr 0xffff8bd17020)
0xffff8bd17010   208  movz x16, #0x10
0xffff8bd17014   212  sub csp, jssp, #0x10 (16)
0xffff8bd17018   216  stp fp, lr, [jssp, #-16]!
0xffff8bd1701c   220  bl #+0x4 (addr 0xffff8bd17020)
0xffff8bd17020   224  movz x17, #0xa00000000
0xffff8bd17024   228  sub csp, jssp, #0x10 (16)
0xffff8bd17028   232  stp x17, cp, [jssp, #-16]!
0xffff8bd1702c   236  add fp, jssp, #0x10 (16)
0xffff8bd17030   240  ldr x17, pc+24 (addr 0x0000ffff8bd17048)    ;; lazy deoptimization bailout 0
0xffff8bd17034   244  add x17, x17, x16
0xffff8bd17038   248  br x17
0xffff8bd1703c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd17040   256  d63f03e0       constant
0xffff8bd17044   260  d503201f       constant
0xffff8bd17048   264  8bb06000       constant
0xffff8bd1704c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff8bd16f48  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd16f9c  code target (STUB)  (0xffff8bd16760)
0xffff8bd16fd4  constant pool (size 28)
0xffff8bd17030  runtime entry
0xffff8bd1703c  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff8bd170c0     0  adr xzr, #+0x40 (addr 0xffff8bd17100)
0xffff8bd170c4     4  adr xzr, #+0x360 (addr 0xffff8bd17424)
0xffff8bd170c8     8  ldr x16, pc+1736 (addr 0x0000ffff8bd17790)    ;; external reference (store_buffer_top)
0xffff8bd170cc    12  ldr x2, [x16]
0xffff8bd170d0    16  str x3, [x2], #8
0xffff8bd170d4    20  str x2, [x16]
0xffff8bd170d8    24  tst x2, #0x1ffff
0xffff8bd170dc    28  b.eq #+0x8 (addr 0xffff8bd170e4)
0xffff8bd170e0    32  ret
0xffff8bd170e4    36  sub csp, jssp, #0x8 (8)
0xffff8bd170e8    40  str lr, [jssp, #-8]!
0xffff8bd170ec    44  ldr x17, pc+1708 (addr 0x0000ffff8bd17798)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd170f0    48  blr x17
0xffff8bd170f4    52  ldr lr, [jssp], #8
0xffff8bd170f8    56  ret
0xffff8bd170fc    60  ret
0xffff8bd17100    64  sub csp, jssp, #0x10 (16)
0xffff8bd17104    68  stp x4, x0, [jssp, #-16]!
0xffff8bd17108    72  ldr x2, [x3]
0xffff8bd1710c    76  and x16, x2, #0xfffffffffff00000
0xffff8bd17110    80  ldr x16, [x16, #8]
0xffff8bd17114    84  tst x16, #0x18
0xffff8bd17118    88  b.eq #+0x1d8 (addr 0xffff8bd172f0)
0xffff8bd1711c    92  and x16, x1, #0xfffffffffff00000
0xffff8bd17120    96  ldr x16, [x16, #8]
0xffff8bd17124   100  tst x16, #0x18
0xffff8bd17128   104  b.ne #+0x1c8 (addr 0xffff8bd172f0)
0xffff8bd1712c   108  and x2, x1, #0xfffffffffff00000
0xffff8bd17130   112  ldr x0, [x2, #104]
0xffff8bd17134   116  subs x0, x0, #0x1 (1)
0xffff8bd17138   120  str x0, [x2, #104]
0xffff8bd1713c   124  b.mi #+0xc4 (addr 0xffff8bd17200)
0xffff8bd17140   128  ubfx x16, x1, #8, #12
0xffff8bd17144   132  and x2, x1, #0xfffffffffff00000
0xffff8bd17148   136  add x2, x2, x16, lsl #2
0xffff8bd1714c   140  ubfx x0, x1, #3, #5
0xffff8bd17150   144  ldr x2, [x2, #360]
0xffff8bd17154   148  lsr x2, x2, x0
0xffff8bd17158   152  tbz w2, #0, #+0x8 (addr 0xffff8bd17160)
0xffff8bd1715c   156  tbnz w2, #1, #+0x3c (addr 0xffff8bd17198)
0xffff8bd17160   160  ldp x4, x0, [jssp], #16
0xffff8bd17164   164  ldr x16, pc+1596 (addr 0x0000ffff8bd177a0)    ;; external reference (store_buffer_top)
0xffff8bd17168   168  ldr x2, [x16]
0xffff8bd1716c   172  str x3, [x2], #8
0xffff8bd17170   176  str x2, [x16]
0xffff8bd17174   180  tst x2, #0x1ffff
0xffff8bd17178   184  b.eq #+0x8 (addr 0xffff8bd17180)
0xffff8bd1717c   188  ret
0xffff8bd17180   192  sub csp, jssp, #0x8 (8)
0xffff8bd17184   196  str lr, [jssp, #-8]!
0xffff8bd17188   200  ldr x17, pc+1568 (addr 0x0000ffff8bd177a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd1718c   204  blr x17
0xffff8bd17190   208  ldr lr, [jssp], #8
0xffff8bd17194   212  ret
0xffff8bd17198   216  ldr x2, [x3]
0xffff8bd1719c   220  sub csp, jssp, #0x10 (16)
0xffff8bd171a0   224  stp x1, x3, [jssp, #-16]!
0xffff8bd171a4   228  ubfx x16, x2, #8, #12
0xffff8bd171a8   232  and x0, x2, #0xfffffffffff00000
0xffff8bd171ac   236  add x0, x0, x16, lsl #2
0xffff8bd171b0   240  ubfx x1, x2, #3, #5
0xffff8bd171b4   244  ldr x3, [x0, #360]
0xffff8bd171b8   248  lsr x3, x3, x1
0xffff8bd171bc   252  tbz w3, #0, #+0x40 (addr 0xffff8bd171fc)
0xffff8bd171c0   256  ldp x1, x3, [jssp], #16
0xffff8bd171c4   260  ldp x4, x0, [jssp], #16
0xffff8bd171c8   264  ldr x16, pc+1512 (addr 0x0000ffff8bd177b0)    ;; external reference (store_buffer_top)
0xffff8bd171cc   268  ldr x2, [x16]
0xffff8bd171d0   272  str x3, [x2], #8
0xffff8bd171d4   276  str x2, [x16]
0xffff8bd171d8   280  tst x2, #0x1ffff
0xffff8bd171dc   284  b.eq #+0x8 (addr 0xffff8bd171e4)
0xffff8bd171e0   288  ret
0xffff8bd171e4   292  sub csp, jssp, #0x8 (8)
0xffff8bd171e8   296  str lr, [jssp, #-8]!
0xffff8bd171ec   300  ldr x17, pc+1484 (addr 0x0000ffff8bd177b8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd171f0   304  blr x17
0xffff8bd171f4   308  ldr lr, [jssp], #8
0xffff8bd171f8   312  ret
0xffff8bd171fc   316  ldp x1, x3, [jssp], #16
0xffff8bd17200   320  sub csp, jssp, #0x78 (120)
0xffff8bd17204   324  stp x14, x15, [jssp, #-32]!
0xffff8bd17208   328  stp x18, lr, [jssp, #16]
0xffff8bd1720c   332  stp x10, x11, [jssp, #-32]!
0xffff8bd17210   336  stp x12, x13, [jssp, #16]
0xffff8bd17214   340  stp x6, x7, [jssp, #-32]!
0xffff8bd17218   344  stp x8, x9, [jssp, #16]
0xffff8bd1721c   348  stp x1, x3, [jssp, #-24]!
0xffff8bd17220   352  str x5, [jssp, #16]
0xffff8bd17224   356  sub csp, jssp, #0xb0 (176)
0xffff8bd17228   360  stp d26, d27, [jssp, #-32]!
0xffff8bd1722c   364  stp d28, d29, [jssp, #16]
0xffff8bd17230   368  stp d22, d23, [jssp, #-32]!
0xffff8bd17234   372  stp d24, d25, [jssp, #16]
0xffff8bd17238   376  stp d18, d19, [jssp, #-32]!
0xffff8bd1723c   380  stp d20, d21, [jssp, #16]
0xffff8bd17240   384  stp d6, d7, [jssp, #-32]!
0xffff8bd17244   388  stp d16, d17, [jssp, #16]
0xffff8bd17248   392  stp d2, d3, [jssp, #-32]!
0xffff8bd1724c   396  stp d4, d5, [jssp, #16]
0xffff8bd17250   400  stp d0, d1, [jssp, #-16]!
0xffff8bd17254   404  mov x0, x1
0xffff8bd17258   408  mov x1, x3
0xffff8bd1725c   412  ldr x2, pc+1380 (addr 0x0000ffff8bd177c0)    ;; external reference (isolate)
0xffff8bd17260   416  ldr x16, pc+1384 (addr 0x0000ffff8bd177c8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd17264   420  and csp, jssp, #0xfffffffffffffff0
0xffff8bd17268   424  blr x16
0xffff8bd1726c   428  ldp d2, d3, [jssp, #16]
0xffff8bd17270   432  ldp d0, d1, [jssp], #32
0xffff8bd17274   436  ldp d6, d7, [jssp, #16]
0xffff8bd17278   440  ldp d4, d5, [jssp], #32
0xffff8bd1727c   444  ldp d18, d19, [jssp, #16]
0xffff8bd17280   448  ldp d16, d17, [jssp], #32
0xffff8bd17284   452  ldp d22, d23, [jssp, #16]
0xffff8bd17288   456  ldp d20, d21, [jssp], #32
0xffff8bd1728c   460  ldp d26, d27, [jssp, #16]
0xffff8bd17290   464  ldp d24, d25, [jssp], #32
0xffff8bd17294   468  ldp d28, d29, [jssp], #16
0xffff8bd17298   472  ldp x5, x6, [jssp, #16]
0xffff8bd1729c   476  ldp x1, x3, [jssp], #32
0xffff8bd172a0   480  ldp x9, x10, [jssp, #16]
0xffff8bd172a4   484  ldp x7, x8, [jssp], #32
0xffff8bd172a8   488  ldp x13, x14, [jssp, #16]
0xffff8bd172ac   492  ldp x11, x12, [jssp], #32
0xffff8bd172b0   496  ldr lr, [jssp, #16]
0xffff8bd172b4   500  ldp x15, x18, [jssp], #24
0xffff8bd172b8   504  ldp x4, x0, [jssp], #16
0xffff8bd172bc   508  ldr x16, pc+1300 (addr 0x0000ffff8bd177d0)    ;; external reference (store_buffer_top)
0xffff8bd172c0   512  ldr x2, [x16]
0xffff8bd172c4   516  str x3, [x2], #8
0xffff8bd172c8   520  str x2, [x16]
0xffff8bd172cc   524  tst x2, #0x1ffff
0xffff8bd172d0   528  b.eq #+0x8 (addr 0xffff8bd172d8)
0xffff8bd172d4   532  ret
0xffff8bd172d8   536  sub csp, jssp, #0x8 (8)
0xffff8bd172dc   540  str lr, [jssp, #-8]!
0xffff8bd172e0   544  ldr x17, pc+1272 (addr 0x0000ffff8bd177d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd172e4   548  blr x17
0xffff8bd172e8   552  ldr lr, [jssp], #8
0xffff8bd172ec   556  ret
0xffff8bd172f0   560  and x2, x1, #0xfffffffffff00000
0xffff8bd172f4   564  ldr x0, [x2, #104]
0xffff8bd172f8   568  subs x0, x0, #0x1 (1)
0xffff8bd172fc   572  str x0, [x2, #104]
0xffff8bd17300   576  b.mi #+0x64 (addr 0xffff8bd17364)
0xffff8bd17304   580  ubfx x16, x1, #8, #12
0xffff8bd17308   584  and x2, x1, #0xfffffffffff00000
0xffff8bd1730c   588  add x2, x2, x16, lsl #2
0xffff8bd17310   592  ubfx x0, x1, #3, #5
0xffff8bd17314   596  ldr x2, [x2, #360]
0xffff8bd17318   600  lsr x2, x2, x0
0xffff8bd1731c   604  tbz w2, #0, #+0x8 (addr 0xffff8bd17324)
0xffff8bd17320   608  tbnz w2, #1, #+0xc (addr 0xffff8bd1732c)
0xffff8bd17324   612  ldp x4, x0, [jssp], #16
0xffff8bd17328   616  ret
0xffff8bd1732c   620  ldr x2, [x3]
0xffff8bd17330   624  sub csp, jssp, #0x10 (16)
0xffff8bd17334   628  stp x1, x3, [jssp, #-16]!
0xffff8bd17338   632  ubfx x16, x2, #8, #12
0xffff8bd1733c   636  and x0, x2, #0xfffffffffff00000
0xffff8bd17340   640  add x0, x0, x16, lsl #2
0xffff8bd17344   644  ubfx x1, x2, #3, #5
0xffff8bd17348   648  ldr x3, [x0, #360]
0xffff8bd1734c   652  lsr x3, x3, x1
0xffff8bd17350   656  tbz w3, #0, #+0x10 (addr 0xffff8bd17360)
0xffff8bd17354   660  ldp x1, x3, [jssp], #16
0xffff8bd17358   664  ldp x4, x0, [jssp], #16
0xffff8bd1735c   668  ret
0xffff8bd17360   672  ldp x1, x3, [jssp], #16
0xffff8bd17364   676  sub csp, jssp, #0x78 (120)
0xffff8bd17368   680  stp x14, x15, [jssp, #-32]!
0xffff8bd1736c   684  stp x18, lr, [jssp, #16]
0xffff8bd17370   688  stp x10, x11, [jssp, #-32]!
0xffff8bd17374   692  stp x12, x13, [jssp, #16]
0xffff8bd17378   696  stp x6, x7, [jssp, #-32]!
0xffff8bd1737c   700  stp x8, x9, [jssp, #16]
0xffff8bd17380   704  stp x1, x3, [jssp, #-24]!
0xffff8bd17384   708  str x5, [jssp, #16]
0xffff8bd17388   712  sub csp, jssp, #0xb0 (176)
0xffff8bd1738c   716  stp d26, d27, [jssp, #-32]!
0xffff8bd17390   720  stp d28, d29, [jssp, #16]
0xffff8bd17394   724  stp d22, d23, [jssp, #-32]!
0xffff8bd17398   728  stp d24, d25, [jssp, #16]
0xffff8bd1739c   732  stp d18, d19, [jssp, #-32]!
0xffff8bd173a0   736  stp d20, d21, [jssp, #16]
0xffff8bd173a4   740  stp d6, d7, [jssp, #-32]!
0xffff8bd173a8   744  stp d16, d17, [jssp, #16]
0xffff8bd173ac   748  stp d2, d3, [jssp, #-32]!
0xffff8bd173b0   752  stp d4, d5, [jssp, #16]
0xffff8bd173b4   756  stp d0, d1, [jssp, #-16]!
0xffff8bd173b8   760  mov x0, x1
0xffff8bd173bc   764  mov x1, x3
0xffff8bd173c0   768  ldr x2, pc+1056 (addr 0x0000ffff8bd177e0)    ;; external reference (isolate)
0xffff8bd173c4   772  ldr x16, pc+1060 (addr 0x0000ffff8bd177e8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd173c8   776  and csp, jssp, #0xfffffffffffffff0
0xffff8bd173cc   780  blr x16
0xffff8bd173d0   784  ldp d2, d3, [jssp, #16]
0xffff8bd173d4   788  ldp d0, d1, [jssp], #32
0xffff8bd173d8   792  ldp d6, d7, [jssp, #16]
0xffff8bd173dc   796  ldp d4, d5, [jssp], #32
0xffff8bd173e0   800  ldp d18, d19, [jssp, #16]
0xffff8bd173e4   804  ldp d16, d17, [jssp], #32
0xffff8bd173e8   808  ldp d22, d23, [jssp, #16]
0xffff8bd173ec   812  ldp d20, d21, [jssp], #32
0xffff8bd173f0   816  ldp d26, d27, [jssp, #16]
0xffff8bd173f4   820  ldp d24, d25, [jssp], #32
0xffff8bd173f8   824  ldp d28, d29, [jssp], #16
0xffff8bd173fc   828  ldp x5, x6, [jssp, #16]
0xffff8bd17400   832  ldp x1, x3, [jssp], #32
0xffff8bd17404   836  ldp x9, x10, [jssp, #16]
0xffff8bd17408   840  ldp x7, x8, [jssp], #32
0xffff8bd1740c   844  ldp x13, x14, [jssp, #16]
0xffff8bd17410   848  ldp x11, x12, [jssp], #32
0xffff8bd17414   852  ldr lr, [jssp, #16]
0xffff8bd17418   856  ldp x15, x18, [jssp], #24
0xffff8bd1741c   860  ldp x4, x0, [jssp], #16
0xffff8bd17420   864  ret
0xffff8bd17424   868  sub csp, jssp, #0x10 (16)
0xffff8bd17428   872  stp x4, x0, [jssp, #-16]!
0xffff8bd1742c   876  ldr x2, [x3]
0xffff8bd17430   880  and x16, x2, #0xfffffffffff00000
0xffff8bd17434   884  ldr x16, [x16, #8]
0xffff8bd17438   888  tst x16, #0x18
0xffff8bd1743c   892  b.eq #+0x1f8 (addr 0xffff8bd17634)
0xffff8bd17440   896  and x16, x1, #0xfffffffffff00000
0xffff8bd17444   900  ldr x16, [x16, #8]
0xffff8bd17448   904  tst x16, #0x18
0xffff8bd1744c   908  b.ne #+0x1e8 (addr 0xffff8bd17634)
0xffff8bd17450   912  and x2, x1, #0xfffffffffff00000
0xffff8bd17454   916  ldr x0, [x2, #104]
0xffff8bd17458   920  subs x0, x0, #0x1 (1)
0xffff8bd1745c   924  str x0, [x2, #104]
0xffff8bd17460   928  b.mi #+0xe4 (addr 0xffff8bd17544)
0xffff8bd17464   932  ubfx x16, x1, #8, #12
0xffff8bd17468   936  and x2, x1, #0xfffffffffff00000
0xffff8bd1746c   940  add x2, x2, x16, lsl #2
0xffff8bd17470   944  ubfx x0, x1, #3, #5
0xffff8bd17474   948  ldr x2, [x2, #360]
0xffff8bd17478   952  lsr x2, x2, x0
0xffff8bd1747c   956  tbz w2, #0, #+0x8 (addr 0xffff8bd17484)
0xffff8bd17480   960  tbnz w2, #1, #+0x3c (addr 0xffff8bd174bc)
0xffff8bd17484   964  ldp x4, x0, [jssp], #16
0xffff8bd17488   968  ldr x16, pc+872 (addr 0x0000ffff8bd177f0)    ;; external reference (store_buffer_top)
0xffff8bd1748c   972  ldr x2, [x16]
0xffff8bd17490   976  str x3, [x2], #8
0xffff8bd17494   980  str x2, [x16]
0xffff8bd17498   984  tst x2, #0x1ffff
0xffff8bd1749c   988  b.eq #+0x8 (addr 0xffff8bd174a4)
0xffff8bd174a0   992  ret
0xffff8bd174a4   996  sub csp, jssp, #0x8 (8)
0xffff8bd174a8  1000  str lr, [jssp, #-8]!
0xffff8bd174ac  1004  ldr x17, pc+844 (addr 0x0000ffff8bd177f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd174b0  1008  blr x17
0xffff8bd174b4  1012  ldr lr, [jssp], #8
0xffff8bd174b8  1016  ret
0xffff8bd174bc  1020  ldr x2, [x3]
0xffff8bd174c0  1024  and x0, x2, #0xfffffffffff00000
0xffff8bd174c4  1028  ldr x0, [x0, #8]
0xffff8bd174c8  1032  tbz w0, #6, #+0x18 (addr 0xffff8bd174e0)
0xffff8bd174cc  1036  and x0, x1, #0xfffffffffff00000
0xffff8bd174d0  1040  ldr x0, [x0, #8]
0xffff8bd174d4  1044  movz x16, #0x58
0xffff8bd174d8  1048  tst x0, x16
0xffff8bd174dc  1052  b.eq #+0x68 (addr 0xffff8bd17544)
0xffff8bd174e0  1056  sub csp, jssp, #0x10 (16)
0xffff8bd174e4  1060  stp x1, x3, [jssp, #-16]!
0xffff8bd174e8  1064  ubfx x16, x2, #8, #12
0xffff8bd174ec  1068  and x0, x2, #0xfffffffffff00000
0xffff8bd174f0  1072  add x0, x0, x16, lsl #2
0xffff8bd174f4  1076  ubfx x1, x2, #3, #5
0xffff8bd174f8  1080  ldr x3, [x0, #360]
0xffff8bd174fc  1084  lsr x3, x3, x1
0xffff8bd17500  1088  tbz w3, #0, #+0x40 (addr 0xffff8bd17540)
0xffff8bd17504  1092  ldp x1, x3, [jssp], #16
0xffff8bd17508  1096  ldp x4, x0, [jssp], #16
0xffff8bd1750c  1100  ldr x16, pc+756 (addr 0x0000ffff8bd17800)    ;; external reference (store_buffer_top)
0xffff8bd17510  1104  ldr x2, [x16]
0xffff8bd17514  1108  str x3, [x2], #8
0xffff8bd17518  1112  str x2, [x16]
0xffff8bd1751c  1116  tst x2, #0x1ffff
0xffff8bd17520  1120  b.eq #+0x8 (addr 0xffff8bd17528)
0xffff8bd17524  1124  ret
0xffff8bd17528  1128  sub csp, jssp, #0x8 (8)
0xffff8bd1752c  1132  str lr, [jssp, #-8]!
0xffff8bd17530  1136  ldr x17, pc+728 (addr 0x0000ffff8bd17808)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd17534  1140  blr x17
0xffff8bd17538  1144  ldr lr, [jssp], #8
0xffff8bd1753c  1148  ret
0xffff8bd17540  1152  ldp x1, x3, [jssp], #16
0xffff8bd17544  1156  sub csp, jssp, #0x78 (120)
0xffff8bd17548  1160  stp x14, x15, [jssp, #-32]!
0xffff8bd1754c  1164  stp x18, lr, [jssp, #16]
0xffff8bd17550  1168  stp x10, x11, [jssp, #-32]!
0xffff8bd17554  1172  stp x12, x13, [jssp, #16]
0xffff8bd17558  1176  stp x6, x7, [jssp, #-32]!
0xffff8bd1755c  1180  stp x8, x9, [jssp, #16]
0xffff8bd17560  1184  stp x1, x3, [jssp, #-24]!
0xffff8bd17564  1188  str x5, [jssp, #16]
0xffff8bd17568  1192  sub csp, jssp, #0xb0 (176)
0xffff8bd1756c  1196  stp d26, d27, [jssp, #-32]!
0xffff8bd17570  1200  stp d28, d29, [jssp, #16]
0xffff8bd17574  1204  stp d22, d23, [jssp, #-32]!
0xffff8bd17578  1208  stp d24, d25, [jssp, #16]
0xffff8bd1757c  1212  stp d18, d19, [jssp, #-32]!
0xffff8bd17580  1216  stp d20, d21, [jssp, #16]
0xffff8bd17584  1220  stp d6, d7, [jssp, #-32]!
0xffff8bd17588  1224  stp d16, d17, [jssp, #16]
0xffff8bd1758c  1228  stp d2, d3, [jssp, #-32]!
0xffff8bd17590  1232  stp d4, d5, [jssp, #16]
0xffff8bd17594  1236  stp d0, d1, [jssp, #-16]!
0xffff8bd17598  1240  mov x0, x1
0xffff8bd1759c  1244  mov x1, x3
0xffff8bd175a0  1248  ldr x2, pc+624 (addr 0x0000ffff8bd17810)    ;; external reference (isolate)
0xffff8bd175a4  1252  ldr x16, pc+628 (addr 0x0000ffff8bd17818)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd175a8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff8bd175ac  1260  blr x16
0xffff8bd175b0  1264  ldp d2, d3, [jssp, #16]
0xffff8bd175b4  1268  ldp d0, d1, [jssp], #32
0xffff8bd175b8  1272  ldp d6, d7, [jssp, #16]
0xffff8bd175bc  1276  ldp d4, d5, [jssp], #32
0xffff8bd175c0  1280  ldp d18, d19, [jssp, #16]
0xffff8bd175c4  1284  ldp d16, d17, [jssp], #32
0xffff8bd175c8  1288  ldp d22, d23, [jssp, #16]
0xffff8bd175cc  1292  ldp d20, d21, [jssp], #32
0xffff8bd175d0  1296  ldp d26, d27, [jssp, #16]
0xffff8bd175d4  1300  ldp d24, d25, [jssp], #32
0xffff8bd175d8  1304  ldp d28, d29, [jssp], #16
0xffff8bd175dc  1308  ldp x5, x6, [jssp, #16]
0xffff8bd175e0  1312  ldp x1, x3, [jssp], #32
0xffff8bd175e4  1316  ldp x9, x10, [jssp, #16]
0xffff8bd175e8  1320  ldp x7, x8, [jssp], #32
0xffff8bd175ec  1324  ldp x13, x14, [jssp, #16]
0xffff8bd175f0  1328  ldp x11, x12, [jssp], #32
0xffff8bd175f4  1332  ldr lr, [jssp, #16]
0xffff8bd175f8  1336  ldp x15, x18, [jssp], #24
0xffff8bd175fc  1340  ldp x4, x0, [jssp], #16
0xffff8bd17600  1344  ldr x16, pc+544 (addr 0x0000ffff8bd17820)    ;; external reference (store_buffer_top)
0xffff8bd17604  1348  ldr x2, [x16]
0xffff8bd17608  1352  str x3, [x2], #8
0xffff8bd1760c  1356  str x2, [x16]
0xffff8bd17610  1360  tst x2, #0x1ffff
0xffff8bd17614  1364  b.eq #+0x8 (addr 0xffff8bd1761c)
0xffff8bd17618  1368  ret
0xffff8bd1761c  1372  sub csp, jssp, #0x8 (8)
0xffff8bd17620  1376  str lr, [jssp, #-8]!
0xffff8bd17624  1380  ldr x17, pc+516 (addr 0x0000ffff8bd17828)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd17628  1384  blr x17
0xffff8bd1762c  1388  ldr lr, [jssp], #8
0xffff8bd17630  1392  ret
0xffff8bd17634  1396  and x2, x1, #0xfffffffffff00000
0xffff8bd17638  1400  ldr x0, [x2, #104]
0xffff8bd1763c  1404  subs x0, x0, #0x1 (1)
0xffff8bd17640  1408  str x0, [x2, #104]
0xffff8bd17644  1412  b.mi #+0x84 (addr 0xffff8bd176c8)
0xffff8bd17648  1416  ubfx x16, x1, #8, #12
0xffff8bd1764c  1420  and x2, x1, #0xfffffffffff00000
0xffff8bd17650  1424  add x2, x2, x16, lsl #2
0xffff8bd17654  1428  ubfx x0, x1, #3, #5
0xffff8bd17658  1432  ldr x2, [x2, #360]
0xffff8bd1765c  1436  lsr x2, x2, x0
0xffff8bd17660  1440  tbz w2, #0, #+0x8 (addr 0xffff8bd17668)
0xffff8bd17664  1444  tbnz w2, #1, #+0xc (addr 0xffff8bd17670)
0xffff8bd17668  1448  ldp x4, x0, [jssp], #16
0xffff8bd1766c  1452  ret
0xffff8bd17670  1456  ldr x2, [x3]
0xffff8bd17674  1460  and x0, x2, #0xfffffffffff00000
0xffff8bd17678  1464  ldr x0, [x0, #8]
0xffff8bd1767c  1468  tbz w0, #6, #+0x18 (addr 0xffff8bd17694)
0xffff8bd17680  1472  and x0, x1, #0xfffffffffff00000
0xffff8bd17684  1476  ldr x0, [x0, #8]
0xffff8bd17688  1480  movz x16, #0x58
0xffff8bd1768c  1484  tst x0, x16
0xffff8bd17690  1488  b.eq #+0x38 (addr 0xffff8bd176c8)
0xffff8bd17694  1492  sub csp, jssp, #0x10 (16)
0xffff8bd17698  1496  stp x1, x3, [jssp, #-16]!
0xffff8bd1769c  1500  ubfx x16, x2, #8, #12
0xffff8bd176a0  1504  and x0, x2, #0xfffffffffff00000
0xffff8bd176a4  1508  add x0, x0, x16, lsl #2
0xffff8bd176a8  1512  ubfx x1, x2, #3, #5
0xffff8bd176ac  1516  ldr x3, [x0, #360]
0xffff8bd176b0  1520  lsr x3, x3, x1
0xffff8bd176b4  1524  tbz w3, #0, #+0x10 (addr 0xffff8bd176c4)
0xffff8bd176b8  1528  ldp x1, x3, [jssp], #16
0xffff8bd176bc  1532  ldp x4, x0, [jssp], #16
0xffff8bd176c0  1536  ret
0xffff8bd176c4  1540  ldp x1, x3, [jssp], #16
0xffff8bd176c8  1544  sub csp, jssp, #0x78 (120)
0xffff8bd176cc  1548  stp x14, x15, [jssp, #-32]!
0xffff8bd176d0  1552  stp x18, lr, [jssp, #16]
0xffff8bd176d4  1556  stp x10, x11, [jssp, #-32]!
0xffff8bd176d8  1560  stp x12, x13, [jssp, #16]
0xffff8bd176dc  1564  stp x6, x7, [jssp, #-32]!
0xffff8bd176e0  1568  stp x8, x9, [jssp, #16]
0xffff8bd176e4  1572  stp x1, x3, [jssp, #-24]!
0xffff8bd176e8  1576  str x5, [jssp, #16]
0xffff8bd176ec  1580  sub csp, jssp, #0xb0 (176)
0xffff8bd176f0  1584  stp d26, d27, [jssp, #-32]!
0xffff8bd176f4  1588  stp d28, d29, [jssp, #16]
0xffff8bd176f8  1592  stp d22, d23, [jssp, #-32]!
0xffff8bd176fc  1596  stp d24, d25, [jssp, #16]
0xffff8bd17700  1600  stp d18, d19, [jssp, #-32]!
0xffff8bd17704  1604  stp d20, d21, [jssp, #16]
0xffff8bd17708  1608  stp d6, d7, [jssp, #-32]!
0xffff8bd1770c  1612  stp d16, d17, [jssp, #16]
0xffff8bd17710  1616  stp d2, d3, [jssp, #-32]!
0xffff8bd17714  1620  stp d4, d5, [jssp, #16]
0xffff8bd17718  1624  stp d0, d1, [jssp, #-16]!
0xffff8bd1771c  1628  mov x0, x1
0xffff8bd17720  1632  mov x1, x3
0xffff8bd17724  1636  ldr x2, pc+268 (addr 0x0000ffff8bd17830)    ;; external reference (isolate)
0xffff8bd17728  1640  ldr x16, pc+272 (addr 0x0000ffff8bd17838)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd1772c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff8bd17730  1648  blr x16
0xffff8bd17734  1652  ldp d2, d3, [jssp, #16]
0xffff8bd17738  1656  ldp d0, d1, [jssp], #32
0xffff8bd1773c  1660  ldp d6, d7, [jssp, #16]
0xffff8bd17740  1664  ldp d4, d5, [jssp], #32
0xffff8bd17744  1668  ldp d18, d19, [jssp, #16]
0xffff8bd17748  1672  ldp d16, d17, [jssp], #32
0xffff8bd1774c  1676  ldp d22, d23, [jssp, #16]
0xffff8bd17750  1680  ldp d20, d21, [jssp], #32
0xffff8bd17754  1684  ldp d26, d27, [jssp, #16]
0xffff8bd17758  1688  ldp d24, d25, [jssp], #32
0xffff8bd1775c  1692  ldp d28, d29, [jssp], #16
0xffff8bd17760  1696  ldp x5, x6, [jssp, #16]
0xffff8bd17764  1700  ldp x1, x3, [jssp], #32
0xffff8bd17768  1704  ldp x9, x10, [jssp, #16]
0xffff8bd1776c  1708  ldp x7, x8, [jssp], #32
0xffff8bd17770  1712  ldp x13, x14, [jssp, #16]
0xffff8bd17774  1716  ldp x11, x12, [jssp], #32
0xffff8bd17778  1720  ldr lr, [jssp, #16]
0xffff8bd1777c  1724  ldp x15, x18, [jssp], #24
0xffff8bd17780  1728  ldp x4, x0, [jssp], #16
0xffff8bd17784  1732  ret
0xffff8bd17788  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd1778c  1740  d63f03e0       constant
0xffff8bd17790  1744  2cb8e8c0       constant
0xffff8bd17794  1748  00000000       constant
0xffff8bd17798  1752  8bd065a0       constant
0xffff8bd1779c  1756  0000ffff       constant
0xffff8bd177a0  1760  2cb8e8c0       constant
0xffff8bd177a4  1764  00000000       constant
0xffff8bd177a8  1768  8bd065a0       constant
0xffff8bd177ac  1772  0000ffff       constant
0xffff8bd177b0  1776  2cb8e8c0       constant
0xffff8bd177b4  1780  00000000       constant
0xffff8bd177b8  1784  8bd065a0       constant
0xffff8bd177bc  1788  0000ffff       constant
0xffff8bd177c0  1792  2cb8d2d0       constant
0xffff8bd177c4  1796  00000000       constant
0xffff8bd177c8  1800  00c2d958       constant
0xffff8bd177cc  1804  00000000       constant
0xffff8bd177d0  1808  2cb8e8c0       constant
0xffff8bd177d4  1812  00000000       constant
0xffff8bd177d8  1816  8bd065a0       constant
0xffff8bd177dc  1820  0000ffff       constant
0xffff8bd177e0  1824  2cb8d2d0       constant
0xffff8bd177e4  1828  00000000       constant
0xffff8bd177e8  1832  00c2d958       constant
0xffff8bd177ec  1836  00000000       constant
0xffff8bd177f0  1840  2cb8e8c0       constant
0xffff8bd177f4  1844  00000000       constant
0xffff8bd177f8  1848  8bd065a0       constant
0xffff8bd177fc  1852  0000ffff       constant
0xffff8bd17800  1856  2cb8e8c0       constant
0xffff8bd17804  1860  00000000       constant
0xffff8bd17808  1864  8bd065a0       constant
0xffff8bd1780c  1868  0000ffff       constant
0xffff8bd17810  1872  2cb8d2d0       constant
0xffff8bd17814  1876  00000000       constant
0xffff8bd17818  1880  00c2d958       constant
0xffff8bd1781c  1884  00000000       constant
0xffff8bd17820  1888  2cb8e8c0       constant
0xffff8bd17824  1892  00000000       constant
0xffff8bd17828  1896  8bd065a0       constant
0xffff8bd1782c  1900  0000ffff       constant
0xffff8bd17830  1904  2cb8d2d0       constant
0xffff8bd17834  1908  00000000       constant
0xffff8bd17838  1912  00c2d958       constant
0xffff8bd1783c  1916  00000000       constant


RelocInfo (size = 65)
0xffff8bd170c8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd170ec  code target (STUB)  (0xffff8bd065a0)
0xffff8bd17164  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd17188  code target (STUB)  (0xffff8bd065a0)
0xffff8bd171c8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd171ec  code target (STUB)  (0xffff8bd065a0)
0xffff8bd1725c  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd17260  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd172bc  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd172e0  code target (STUB)  (0xffff8bd065a0)
0xffff8bd173c0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd173c4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd17488  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd174ac  code target (STUB)  (0xffff8bd065a0)
0xffff8bd1750c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd17530  code target (STUB)  (0xffff8bd065a0)
0xffff8bd175a0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd175a4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd17600  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd17624  code target (STUB)  (0xffff8bd065a0)
0xffff8bd17724  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd17728  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd17788  constant pool (size 184)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff8bd178a0     0  sub csp, jssp, #0x10 (16)
0xffff8bd178a4     4  stp x1, x0, [jssp, #-16]!
0xffff8bd178a8     8  ldur x9, [x2, #7]
0xffff8bd178ac    12  ubfx x0, x9, #52, #11
0xffff8bd178b0    16  cmp x0, #0x453 (1107)
0xffff8bd178b4    20  csel x9, xzr, x9, ge
0xffff8bd178b8    24  b.ge #+0x1c (addr 0xffff8bd178d4)
0xffff8bd178bc    28  ubfx x1, x9, #0, #52
0xffff8bd178c0    32  orr x1, x1, #0x10000000000000
0xffff8bd178c4    36  tst x9, #0x8000000000000000
0xffff8bd178c8    40  cneg x1, x1, ne
0xffff8bd178cc    44  sub x0, x0, #0x433 (1075)
0xffff8bd178d0    48  lsl x9, x1, x0
0xffff8bd178d4    52  ldp x1, x0, [jssp], #16
0xffff8bd178d8    56  ret


RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 893)
0xffff8bd17940     0  ldur x5, [x1, #15]
0xffff8bd17944     4  ldur x6, [x5, #-1]
0xffff8bd17948     8  ldr x16, pc+648 (addr 0x0000ffff8bd17bd0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd1794c    12  cmp x6, x16
0xffff8bd17950    16  b.ne #+0x2c8 (addr 0xffff8bd17c18)
0xffff8bd17954    20  ldur w6, [x5, #11]
0xffff8bd17958    24  tbnz w2, #0, #+0x140 (addr 0xffff8bd17a98)
0xffff8bd1795c    28  asr x8, x2, #32
0xffff8bd17960    32  cmp w6, w8
0xffff8bd17964    36  b.le #+0x10 (addr 0xffff8bd17974)
0xffff8bd17968    40  cmp w8, w6
0xffff8bd1796c    44  b.hs #+0x2bc (addr 0xffff8bd17c28)
0xffff8bd17970    48  b #+0xe4 (addr 0xffff8bd17a54)
0xffff8bd17974    52  cmp w6, w8
0xffff8bd17978    56  b.gt #+0xdc (addr 0xffff8bd17a54)
0xffff8bd1797c    60  adds w7, w6, #0x400 (1024)
0xffff8bd17980    64  b.vs #+0x2b8 (addr 0xffff8bd17c38)
0xffff8bd17984    68  cmp w8, w7
0xffff8bd17988    72  b.hs #+0x2c0 (addr 0xffff8bd17c48)
0xffff8bd1798c    76  tbnz w2, #0, #+0x154 (addr 0xffff8bd17ae0)
0xffff8bd17990    80  asr x9, x2, #32
0xffff8bd17994    84  add w7, w8, w9, lsr #1
0xffff8bd17998    88  add w7, w7, #0x10 (16)
0xffff8bd1799c    92  movz w16, #0x95ff
0xffff8bd179a0    96  cmp w7, w16, lsl #1
0xffff8bd179a4   100  b.hs #+0x2b4 (addr 0xffff8bd17c58)
0xffff8bd179a8   104  lsl x2, x7, #32
0xffff8bd179ac   108  lsl w3, w7, #3
0xffff8bd179b0   112  add w3, w3, #0x10 (16)
0xffff8bd179b4   116  sxtw x3, w3
0xffff8bd179b8   120  movz x4, #0xe2c0
0xffff8bd179bc   124  movk x4, #0x2cb8, lsl #16
0xffff8bd179c0   128  ldp x9, x16, [x4]
0xffff8bd179c4   132  adds x7, x9, x3
0xffff8bd179c8   136  ccmp x7, x16, #nzCv, lo
0xffff8bd179cc   140  b.hi #+0x194 (addr 0xffff8bd17b60)
0xffff8bd179d0   144  str x7, [x4]
0xffff8bd179d4   148  orr x9, x9, #0x1
0xffff8bd179d8   152  ldr x3, pc+512 (addr 0x0000ffff8bd17bd8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd179dc   156  stur x3, [x9, #-1]
0xffff8bd179e0   160  stur x2, [x9, #7]
0xffff8bd179e4   164  ldur w2, [x9, #11]
0xffff8bd179e8   168  cmp w6, w2
0xffff8bd179ec   172  b.ge #+0x18 (addr 0xffff8bd17a04)
0xffff8bd179f0   176  sub w2, w2, #0x1 (1)
0xffff8bd179f4   180  ldr x3, pc+492 (addr 0x0000ffff8bd17be0)    ;; object: 0x26c04519 <the hole>
0xffff8bd179f8   184  add x4, x9, #0xf (15)
0xffff8bd179fc   188  str x3, [x4, w2, sxtw #3]
0xffff8bd17a00   192  b #-0x18 (addr 0xffff8bd179e8)
0xffff8bd17a04   196  cmp w6, #0x0 (0)
0xffff8bd17a08   200  b.le #+0x1c (addr 0xffff8bd17a24)
0xffff8bd17a0c   204  sub w6, w6, #0x1 (1)
0xffff8bd17a10   208  add x2, x5, #0xf (15)
0xffff8bd17a14   212  ldr x3, [x2, w6, sxtw #3]
0xffff8bd17a18   216  add x2, x9, #0xf (15)
0xffff8bd17a1c   220  str x3, [x2, w6, sxtw #3]
0xffff8bd17a20   224  b #-0x1c (addr 0xffff8bd17a04)
0xffff8bd17a24   228  mov x2, x9
0xffff8bd17a28   232  stur x2, [x1, #15]
0xffff8bd17a2c   236  add x3, x1, #0xf (15)
0xffff8bd17a30   240  and x2, x1, #0xfffffffffff00000
0xffff8bd17a34   244  ldr x2, [x2, #8]
0xffff8bd17a38   248  tbz w2, #2, #+0x18 (addr 0xffff8bd17a50)
0xffff8bd17a3c   252  sub csp, jssp, #0x8 (8)
0xffff8bd17a40   256  str lr, [jssp, #-8]!
0xffff8bd17a44   260  ldr x16, pc+420 (addr 0x0000ffff8bd17be8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd17a48   264  blr x16
0xffff8bd17a4c   268  ldr lr, [jssp], #8
0xffff8bd17a50   272  mov x5, x9
0xffff8bd17a54   276  mov x1, x0
0xffff8bd17a58   280  add x2, x5, #0xf (15)
0xffff8bd17a5c   284  str x1, [x2, w8, sxtw #3]
0xffff8bd17a60   288  add x2, x2, w8, sxtw #3
0xffff8bd17a64   292  tbz w1, #0, #+0x30 (addr 0xffff8bd17a94)
0xffff8bd17a68   296  and x1, x1, #0xfffffffffff00000
0xffff8bd17a6c   300  ldr x1, [x1, #8]
0xffff8bd17a70   304  tbz w1, #1, #+0x24 (addr 0xffff8bd17a94)
0xffff8bd17a74   308  and x1, x5, #0xfffffffffff00000
0xffff8bd17a78   312  ldr x1, [x1, #8]
0xffff8bd17a7c   316  tbz w1, #2, #+0x18 (addr 0xffff8bd17a94)
0xffff8bd17a80   320  sub csp, jssp, #0x8 (8)
0xffff8bd17a84   324  str lr, [jssp, #-8]!
0xffff8bd17a88   328  ldr x16, pc+360 (addr 0x0000ffff8bd17bf0)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff8bd17a8c   332  blr x16
0xffff8bd17a90   336  ldr lr, [jssp], #8
0xffff8bd17a94   340  ret
0xffff8bd17a98   344  sub csp, jssp, #0x10 (16)
0xffff8bd17a9c   348  stp fp, lr, [jssp, #-16]!
0xffff8bd17aa0   352  movz fp, #0xa00000000
0xffff8bd17aa4   356  sub csp, jssp, #0x8 (8)
0xffff8bd17aa8   360  str fp, [jssp, #-8]!
0xffff8bd17aac   364  add fp, jssp, #0x8 (8)
0xffff8bd17ab0   368  ldur x16, [x2, #-1]
0xffff8bd17ab4   372  ldr x17, [x26, #120]
0xffff8bd17ab8   376  cmp x16, x17
0xffff8bd17abc   380  b.ne #+0x1ac (addr 0xffff8bd17c68)
0xffff8bd17ac0   384  ldur d29, [x2, #7]
0xffff8bd17ac4   388  fcvtzs w8, d29
0xffff8bd17ac8   392  scvtf d0, w8
0xffff8bd17acc   396  fcmp d29, d0
0xffff8bd17ad0   400  b.ne #+0x198 (addr 0xffff8bd17c68)
0xffff8bd17ad4   404  ldr lr, [jssp, #16]
0xffff8bd17ad8   408  ldp xzr, fp, [jssp], #24
0xffff8bd17adc   412  b #-0x17c (addr 0xffff8bd17960)
0xffff8bd17ae0   416  sub csp, jssp, #0x10 (16)
0xffff8bd17ae4   420  stp fp, lr, [jssp, #-16]!
0xffff8bd17ae8   424  movz fp, #0xa00000000
0xffff8bd17aec   428  sub csp, jssp, #0x8 (8)
0xffff8bd17af0   432  str fp, [jssp, #-8]!
0xffff8bd17af4   436  add fp, jssp, #0x8 (8)
0xffff8bd17af8   440  ldur x16, [x2, #-1]
0xffff8bd17afc   444  ldr x17, [x26, #120]
0xffff8bd17b00   448  cmp x16, x17
0xffff8bd17b04   452  b.ne #+0x30 (addr 0xffff8bd17b34)
0xffff8bd17b08   456  ldur d30, [x2, #7]
0xffff8bd17b0c   460  fcvtzs x9, d30
0xffff8bd17b10   464  cmp x9, #0x1 (1)
0xffff8bd17b14   468  ccmn x9, #1, #nzcV, vc
0xffff8bd17b18   472  b.vc #+0x18 (addr 0xffff8bd17b30)
0xffff8bd17b1c   476  sub csp, jssp, #0x8 (8)
0xffff8bd17b20   480  str lr, [jssp, #-8]!
0xffff8bd17b24   484  ldr x16, pc+212 (addr 0x0000ffff8bd17bf8)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff8bd17b28   488  blr x16
0xffff8bd17b2c   492  ldr lr, [jssp], #8
0xffff8bd17b30   496  b #+0x24 (addr 0xffff8bd17b54)
0xffff8bd17b34   500  ldp x9, x7, [x26, #64]
0xffff8bd17b38   504  cmp x2, x9
0xffff8bd17b3c   508  cset x9, eq
0xffff8bd17b40   512  ccmp x2, x7, #nZcv, ne
0xffff8bd17b44   516  b.eq #+0x10 (addr 0xffff8bd17b54)
0xffff8bd17b48   520  ldr x16, [x26, #40]
0xffff8bd17b4c   524  cmp x2, x16
0xffff8bd17b50   528  b.ne #+0x120 (addr 0xffff8bd17c70)
0xffff8bd17b54   532  ldr lr, [jssp, #16]
0xffff8bd17b58   536  ldp xzr, fp, [jssp], #24
0xffff8bd17b5c   540  b #-0x1c8 (addr 0xffff8bd17994)
0xffff8bd17b60   544  sub csp, jssp, #0x10 (16)
0xffff8bd17b64   548  stp fp, lr, [jssp, #-16]!
0xffff8bd17b68   552  movz fp, #0xa00000000
0xffff8bd17b6c   556  sub csp, jssp, #0x8 (8)
0xffff8bd17b70   560  str fp, [jssp, #-8]!
0xffff8bd17b74   564  add fp, jssp, #0x8 (8)
0xffff8bd17b78   568  movz x9, #0x0
0xffff8bd17b7c   572  mov x16, lr
0xffff8bd17b80   576  ldr x17, pc+128 (addr 0x0000ffff8bd17c00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd17b84   580  blr x17
0xffff8bd17b88   584  lsl x0, x3, #32
0xffff8bd17b8c   588  movz x10, #0x0
0xffff8bd17b90   592  sub csp, jssp, #0x10 (16)
0xffff8bd17b94   596  stp x10, x0, [jssp, #-16]!
0xffff8bd17b98   600  movz x0, #0x2
0xffff8bd17b9c   604  movz x1, #0x5b88
0xffff8bd17ba0   608  movk x1, #0xe2, lsl #16
0xffff8bd17ba4   612  ldr x16, pc+100 (addr 0x0000ffff8bd17c08)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd17ba8   616  blr x16
0xffff8bd17bac   620  str x0, [jssp, #72]
0xffff8bd17bb0   624  ldr x16, pc+96 (addr 0x0000ffff8bd17c10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd17bb4   628  blr x16
0xffff8bd17bb8   632  ldr lr, [jssp, #16]
0xffff8bd17bbc   636  ldp xzr, fp, [jssp], #24
0xffff8bd17bc0   640  b #-0x1e8 (addr 0xffff8bd179d8)
0xffff8bd17bc4   644  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff8bd17bc8   648  d63f03e0       constant
0xffff8bd17bcc   652  d503201f       constant
0xffff8bd17bd0   656  5f504259       constant
0xffff8bd17bd4   660  00000000       constant
0xffff8bd17bd8   664  5f504259       constant
0xffff8bd17bdc   668  00000000       constant
0xffff8bd17be0   672  26c04519       constant
0xffff8bd17be4   676  00000000       constant
0xffff8bd17be8   680  8bd170c0       constant
0xffff8bd17bec   684  0000ffff       constant
0xffff8bd17bf0   688  8bd16760       constant
0xffff8bd17bf4   692  0000ffff       constant
0xffff8bd17bf8   696  8bd178a0       constant
0xffff8bd17bfc   700  0000ffff       constant
0xffff8bd17c00   704  8bd06820       constant
0xffff8bd17c04   708  0000ffff       constant
0xffff8bd17c08   712  8bd06260       constant
0xffff8bd17c0c   716  0000ffff       constant
0xffff8bd17c10   720  8bd068e0       constant
0xffff8bd17c14   724  0000ffff       constant
0xffff8bd17c18   728  movz x16, #0x0
0xffff8bd17c1c   732  sub csp, jssp, #0x10 (16)
0xffff8bd17c20   736  stp fp, lr, [jssp, #-16]!
0xffff8bd17c24   740  bl #+0x54 (addr 0xffff8bd17c78)
0xffff8bd17c28   744  movz x16, #0x8
0xffff8bd17c2c   748  sub csp, jssp, #0x10 (16)
0xffff8bd17c30   752  stp fp, lr, [jssp, #-16]!
0xffff8bd17c34   756  bl #+0x44 (addr 0xffff8bd17c78)
0xffff8bd17c38   760  movz x16, #0x10
0xffff8bd17c3c   764  sub csp, jssp, #0x10 (16)
0xffff8bd17c40   768  stp fp, lr, [jssp, #-16]!
0xffff8bd17c44   772  bl #+0x34 (addr 0xffff8bd17c78)
0xffff8bd17c48   776  movz x16, #0x18
0xffff8bd17c4c   780  sub csp, jssp, #0x10 (16)
0xffff8bd17c50   784  stp fp, lr, [jssp, #-16]!
0xffff8bd17c54   788  bl #+0x24 (addr 0xffff8bd17c78)
0xffff8bd17c58   792  movz x16, #0x20
0xffff8bd17c5c   796  sub csp, jssp, #0x10 (16)
0xffff8bd17c60   800  stp fp, lr, [jssp, #-16]!
0xffff8bd17c64   804  bl #+0x14 (addr 0xffff8bd17c78)
0xffff8bd17c68   808  movz x16, #0x28
0xffff8bd17c6c   812  bl #+0x1c (addr 0xffff8bd17c88)
0xffff8bd17c70   816  movz x16, #0x30
0xffff8bd17c74   820  bl #+0x14 (addr 0xffff8bd17c88)
0xffff8bd17c78   824  movz x17, #0xa00000000
0xffff8bd17c7c   828  sub csp, jssp, #0x10 (16)
0xffff8bd17c80   832  stp x17, cp, [jssp, #-16]!
0xffff8bd17c84   836  add fp, jssp, #0x10 (16)
0xffff8bd17c88   840  ldr x17, pc+24 (addr 0x0000ffff8bd17ca0)    ;; lazy deoptimization bailout 0
0xffff8bd17c8c   844  add x17, x17, x16
0xffff8bd17c90   848  br x17
0xffff8bd17c94   852  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd17c98   856  d63f03e0       constant
0xffff8bd17c9c   860  d503201f       constant
0xffff8bd17ca0   864  8bb06000       constant
0xffff8bd17ca4   868  0000ffff       constant


Safepoints (size = 21)
0xffff8bd17bac   620  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff8bd17948  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd179d8  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd179f4  embedded object  (0x26c04519 <the hole>)
0xffff8bd17a44  code target (STUB)  (0xffff8bd170c0)
0xffff8bd17a88  code target (STUB)  (0xffff8bd16760)
0xffff8bd17b24  code target (STUB)  (0xffff8bd178a0)
0xffff8bd17b80  code target (STUB)  (0xffff8bd06820)
0xffff8bd17ba4  code target (STUB)  (0xffff8bd06260)
0xffff8bd17bb0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd17bc4  constant pool (size 84)
0xffff8bd17c88  runtime entry
0xffff8bd17c94  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 893)
0xffff8bd17940     0  ldur x5, [x1, #15]
0xffff8bd17944     4  ldur x6, [x5, #-1]
0xffff8bd17948     8  ldr x16, pc+648 (addr 0x0000ffff8bd17bd0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd1794c    12  cmp x6, x16
0xffff8bd17950    16  b.ne #+0x2c8 (addr 0xffff8bd17c18)
0xffff8bd17954    20  ldur w6, [x5, #11]
0xffff8bd17958    24  tbnz w2, #0, #+0x140 (addr 0xffff8bd17a98)
0xffff8bd1795c    28  asr x8, x2, #32
0xffff8bd17960    32  cmp w6, w8
0xffff8bd17964    36  b.le #+0x10 (addr 0xffff8bd17974)
0xffff8bd17968    40  cmp w8, w6
0xffff8bd1796c    44  b.hs #+0x2bc (addr 0xffff8bd17c28)
0xffff8bd17970    48  b #+0xe4 (addr 0xffff8bd17a54)
0xffff8bd17974    52  cmp w6, w8
0xffff8bd17978    56  b.gt #+0xdc (addr 0xffff8bd17a54)
0xffff8bd1797c    60  adds w7, w6, #0x400 (1024)
0xffff8bd17980    64  b.vs #+0x2b8 (addr 0xffff8bd17c38)
0xffff8bd17984    68  cmp w8, w7
0xffff8bd17988    72  b.hs #+0x2c0 (addr 0xffff8bd17c48)
0xffff8bd1798c    76  tbnz w2, #0, #+0x154 (addr 0xffff8bd17ae0)
0xffff8bd17990    80  asr x9, x2, #32
0xffff8bd17994    84  add w7, w8, w9, lsr #1
0xffff8bd17998    88  add w7, w7, #0x10 (16)
0xffff8bd1799c    92  movz w16, #0x95ff
0xffff8bd179a0    96  cmp w7, w16, lsl #1
0xffff8bd179a4   100  b.hs #+0x2b4 (addr 0xffff8bd17c58)
0xffff8bd179a8   104  lsl x2, x7, #32
0xffff8bd179ac   108  lsl w3, w7, #3
0xffff8bd179b0   112  add w3, w3, #0x10 (16)
0xffff8bd179b4   116  sxtw x3, w3
0xffff8bd179b8   120  movz x4, #0xe2c0
0xffff8bd179bc   124  movk x4, #0x2cb8, lsl #16
0xffff8bd179c0   128  ldp x9, x16, [x4]
0xffff8bd179c4   132  adds x7, x9, x3
0xffff8bd179c8   136  ccmp x7, x16, #nzCv, lo
0xffff8bd179cc   140  b.hi #+0x194 (addr 0xffff8bd17b60)
0xffff8bd179d0   144  str x7, [x4]
0xffff8bd179d4   148  orr x9, x9, #0x1
0xffff8bd179d8   152  ldr x3, pc+512 (addr 0x0000ffff8bd17bd8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd179dc   156  stur x3, [x9, #-1]
0xffff8bd179e0   160  stur x2, [x9, #7]
0xffff8bd179e4   164  ldur w2, [x9, #11]
0xffff8bd179e8   168  cmp w6, w2
0xffff8bd179ec   172  b.ge #+0x18 (addr 0xffff8bd17a04)
0xffff8bd179f0   176  sub w2, w2, #0x1 (1)
0xffff8bd179f4   180  ldr x3, pc+492 (addr 0x0000ffff8bd17be0)    ;; object: 0x26c04519 <the hole>
0xffff8bd179f8   184  add x4, x9, #0xf (15)
0xffff8bd179fc   188  str x3, [x4, w2, sxtw #3]
0xffff8bd17a00   192  b #-0x18 (addr 0xffff8bd179e8)
0xffff8bd17a04   196  cmp w6, #0x0 (0)
0xffff8bd17a08   200  b.le #+0x1c (addr 0xffff8bd17a24)
0xffff8bd17a0c   204  sub w6, w6, #0x1 (1)
0xffff8bd17a10   208  add x2, x5, #0xf (15)
0xffff8bd17a14   212  ldr x3, [x2, w6, sxtw #3]
0xffff8bd17a18   216  add x2, x9, #0xf (15)
0xffff8bd17a1c   220  str x3, [x2, w6, sxtw #3]
0xffff8bd17a20   224  b #-0x1c (addr 0xffff8bd17a04)
0xffff8bd17a24   228  mov x2, x9
0xffff8bd17a28   232  stur x2, [x1, #15]
0xffff8bd17a2c   236  add x3, x1, #0xf (15)
0xffff8bd17a30   240  and x2, x1, #0xfffffffffff00000
0xffff8bd17a34   244  ldr x2, [x2, #8]
0xffff8bd17a38   248  tbz w2, #2, #+0x18 (addr 0xffff8bd17a50)
0xffff8bd17a3c   252  sub csp, jssp, #0x8 (8)
0xffff8bd17a40   256  str lr, [jssp, #-8]!
0xffff8bd17a44   260  ldr x16, pc+420 (addr 0x0000ffff8bd17be8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd17a48   264  blr x16
0xffff8bd17a4c   268  ldr lr, [jssp], #8
0xffff8bd17a50   272  mov x5, x9
0xffff8bd17a54   276  mov x1, x0
0xffff8bd17a58   280  add x2, x5, #0xf (15)
0xffff8bd17a5c   284  str x1, [x2, w8, sxtw #3]
0xffff8bd17a60   288  add x2, x2, w8, sxtw #3
0xffff8bd17a64   292  tbz w1, #0, #+0x30 (addr 0xffff8bd17a94)
0xffff8bd17a68   296  and x1, x1, #0xfffffffffff00000
0xffff8bd17a6c   300  ldr x1, [x1, #8]
0xffff8bd17a70   304  tbz w1, #1, #+0x24 (addr 0xffff8bd17a94)
0xffff8bd17a74   308  and x1, x5, #0xfffffffffff00000
0xffff8bd17a78   312  ldr x1, [x1, #8]
0xffff8bd17a7c   316  tbz w1, #2, #+0x18 (addr 0xffff8bd17a94)
0xffff8bd17a80   320  sub csp, jssp, #0x8 (8)
0xffff8bd17a84   324  str lr, [jssp, #-8]!
0xffff8bd17a88   328  ldr x16, pc+360 (addr 0x0000ffff8bd17bf0)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff8bd17a8c   332  blr x16
0xffff8bd17a90   336  ldr lr, [jssp], #8
0xffff8bd17a94   340  ret
0xffff8bd17a98   344  sub csp, jssp, #0x10 (16)
0xffff8bd17a9c   348  stp fp, lr, [jssp, #-16]!
0xffff8bd17aa0   352  movz fp, #0xa00000000
0xffff8bd17aa4   356  sub csp, jssp, #0x8 (8)
0xffff8bd17aa8   360  str fp, [jssp, #-8]!
0xffff8bd17aac   364  add fp, jssp, #0x8 (8)
0xffff8bd17ab0   368  ldur x16, [x2, #-1]
0xffff8bd17ab4   372  ldr x17, [x26, #120]
0xffff8bd17ab8   376  cmp x16, x17
0xffff8bd17abc   380  b.ne #+0x1ac (addr 0xffff8bd17c68)
0xffff8bd17ac0   384  ldur d29, [x2, #7]
0xffff8bd17ac4   388  fcvtzs w8, d29
0xffff8bd17ac8   392  scvtf d0, w8
0xffff8bd17acc   396  fcmp d29, d0
0xffff8bd17ad0   400  b.ne #+0x198 (addr 0xffff8bd17c68)
0xffff8bd17ad4   404  ldr lr, [jssp, #16]
0xffff8bd17ad8   408  ldp xzr, fp, [jssp], #24
0xffff8bd17adc   412  b #-0x17c (addr 0xffff8bd17960)
0xffff8bd17ae0   416  sub csp, jssp, #0x10 (16)
0xffff8bd17ae4   420  stp fp, lr, [jssp, #-16]!
0xffff8bd17ae8   424  movz fp, #0xa00000000
0xffff8bd17aec   428  sub csp, jssp, #0x8 (8)
0xffff8bd17af0   432  str fp, [jssp, #-8]!
0xffff8bd17af4   436  add fp, jssp, #0x8 (8)
0xffff8bd17af8   440  ldur x16, [x2, #-1]
0xffff8bd17afc   444  ldr x17, [x26, #120]
0xffff8bd17b00   448  cmp x16, x17
0xffff8bd17b04   452  b.ne #+0x30 (addr 0xffff8bd17b34)
0xffff8bd17b08   456  ldur d30, [x2, #7]
0xffff8bd17b0c   460  fcvtzs x9, d30
0xffff8bd17b10   464  cmp x9, #0x1 (1)
0xffff8bd17b14   468  ccmn x9, #1, #nzcV, vc
0xffff8bd17b18   472  b.vc #+0x18 (addr 0xffff8bd17b30)
0xffff8bd17b1c   476  sub csp, jssp, #0x8 (8)
0xffff8bd17b20   480  str lr, [jssp, #-8]!
0xffff8bd17b24   484  ldr x16, pc+212 (addr 0x0000ffff8bd17bf8)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff8bd17b28   488  blr x16
0xffff8bd17b2c   492  ldr lr, [jssp], #8
0xffff8bd17b30   496  b #+0x24 (addr 0xffff8bd17b54)
0xffff8bd17b34   500  ldp x9, x7, [x26, #64]
0xffff8bd17b38   504  cmp x2, x9
0xffff8bd17b3c   508  cset x9, eq
0xffff8bd17b40   512  ccmp x2, x7, #nZcv, ne
0xffff8bd17b44   516  b.eq #+0x10 (addr 0xffff8bd17b54)
0xffff8bd17b48   520  ldr x16, [x26, #40]
0xffff8bd17b4c   524  cmp x2, x16
0xffff8bd17b50   528  b.ne #+0x120 (addr 0xffff8bd17c70)
0xffff8bd17b54   532  ldr lr, [jssp, #16]
0xffff8bd17b58   536  ldp xzr, fp, [jssp], #24
0xffff8bd17b5c   540  b #-0x1c8 (addr 0xffff8bd17994)
0xffff8bd17b60   544  sub csp, jssp, #0x10 (16)
0xffff8bd17b64   548  stp fp, lr, [jssp, #-16]!
0xffff8bd17b68   552  movz fp, #0xa00000000
0xffff8bd17b6c   556  sub csp, jssp, #0x8 (8)
0xffff8bd17b70   560  str fp, [jssp, #-8]!
0xffff8bd17b74   564  add fp, jssp, #0x8 (8)
0xffff8bd17b78   568  movz x9, #0x0
0xffff8bd17b7c   572  mov x16, lr
0xffff8bd17b80   576  ldr x17, pc+128 (addr 0x0000ffff8bd17c00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd17b84   580  blr x17
0xffff8bd17b88   584  lsl x0, x3, #32
0xffff8bd17b8c   588  movz x10, #0x0
0xffff8bd17b90   592  sub csp, jssp, #0x10 (16)
0xffff8bd17b94   596  stp x10, x0, [jssp, #-16]!
0xffff8bd17b98   600  movz x0, #0x2
0xffff8bd17b9c   604  movz x1, #0x5b88
0xffff8bd17ba0   608  movk x1, #0xe2, lsl #16
0xffff8bd17ba4   612  ldr x16, pc+100 (addr 0x0000ffff8bd17c08)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd17ba8   616  blr x16
0xffff8bd17bac   620  str x0, [jssp, #72]
0xffff8bd17bb0   624  ldr x16, pc+96 (addr 0x0000ffff8bd17c10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd17bb4   628  blr x16
0xffff8bd17bb8   632  ldr lr, [jssp, #16]
0xffff8bd17bbc   636  ldp xzr, fp, [jssp], #24
0xffff8bd17bc0   640  b #-0x1e8 (addr 0xffff8bd179d8)
0xffff8bd17bc4   644  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff8bd17bc8   648  d63f03e0       constant
0xffff8bd17bcc   652  d503201f       constant
0xffff8bd17bd0   656  5f504259       constant
0xffff8bd17bd4   660  00000000       constant
0xffff8bd17bd8   664  5f504259       constant
0xffff8bd17bdc   668  00000000       constant
0xffff8bd17be0   672  26c04519       constant
0xffff8bd17be4   676  00000000       constant
0xffff8bd17be8   680  8bd170c0       constant
0xffff8bd17bec   684  0000ffff       constant
0xffff8bd17bf0   688  8bd16760       constant
0xffff8bd17bf4   692  0000ffff       constant
0xffff8bd17bf8   696  8bd178a0       constant
0xffff8bd17bfc   700  0000ffff       constant
0xffff8bd17c00   704  8bd06820       constant
0xffff8bd17c04   708  0000ffff       constant
0xffff8bd17c08   712  8bd06260       constant
0xffff8bd17c0c   716  0000ffff       constant
0xffff8bd17c10   720  8bd068e0       constant
0xffff8bd17c14   724  0000ffff       constant
0xffff8bd17c18   728  movz x16, #0x0
0xffff8bd17c1c   732  sub csp, jssp, #0x10 (16)
0xffff8bd17c20   736  stp fp, lr, [jssp, #-16]!
0xffff8bd17c24   740  bl #+0x54 (addr 0xffff8bd17c78)
0xffff8bd17c28   744  movz x16, #0x8
0xffff8bd17c2c   748  sub csp, jssp, #0x10 (16)
0xffff8bd17c30   752  stp fp, lr, [jssp, #-16]!
0xffff8bd17c34   756  bl #+0x44 (addr 0xffff8bd17c78)
0xffff8bd17c38   760  movz x16, #0x10
0xffff8bd17c3c   764  sub csp, jssp, #0x10 (16)
0xffff8bd17c40   768  stp fp, lr, [jssp, #-16]!
0xffff8bd17c44   772  bl #+0x34 (addr 0xffff8bd17c78)
0xffff8bd17c48   776  movz x16, #0x18
0xffff8bd17c4c   780  sub csp, jssp, #0x10 (16)
0xffff8bd17c50   784  stp fp, lr, [jssp, #-16]!
0xffff8bd17c54   788  bl #+0x24 (addr 0xffff8bd17c78)
0xffff8bd17c58   792  movz x16, #0x20
0xffff8bd17c5c   796  sub csp, jssp, #0x10 (16)
0xffff8bd17c60   800  stp fp, lr, [jssp, #-16]!
0xffff8bd17c64   804  bl #+0x14 (addr 0xffff8bd17c78)
0xffff8bd17c68   808  movz x16, #0x28
0xffff8bd17c6c   812  bl #+0x1c (addr 0xffff8bd17c88)
0xffff8bd17c70   816  movz x16, #0x30
0xffff8bd17c74   820  bl #+0x14 (addr 0xffff8bd17c88)
0xffff8bd17c78   824  movz x17, #0xa00000000
0xffff8bd17c7c   828  sub csp, jssp, #0x10 (16)
0xffff8bd17c80   832  stp x17, cp, [jssp, #-16]!
0xffff8bd17c84   836  add fp, jssp, #0x10 (16)
0xffff8bd17c88   840  ldr x17, pc+24 (addr 0x0000ffff8bd17ca0)    ;; lazy deoptimization bailout 0
0xffff8bd17c8c   844  add x17, x17, x16
0xffff8bd17c90   848  br x17
0xffff8bd17c94   852  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd17c98   856  d63f03e0       constant
0xffff8bd17c9c   860  d503201f       constant
0xffff8bd17ca0   864  8bb06000       constant
0xffff8bd17ca4   868  0000ffff       constant


Safepoints (size = 21)
0xffff8bd17bac   620  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff8bd17948  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd179d8  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd179f4  embedded object  (0x26c04519 <the hole>)
0xffff8bd17a44  code target (STUB)  (0xffff8bd170c0)
0xffff8bd17a88  code target (STUB)  (0xffff8bd16760)
0xffff8bd17b24  code target (STUB)  (0xffff8bd178a0)
0xffff8bd17b80  code target (STUB)  (0xffff8bd06820)
0xffff8bd17ba4  code target (STUB)  (0xffff8bd06260)
0xffff8bd17bb0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd17bc4  constant pool (size 84)
0xffff8bd17c88  runtime entry
0xffff8bd17c94  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 240)
0xffff8bd17d20     0  ldur x5, [x1, #15]
0xffff8bd17d24     4  ldur x6, [x5, #-1]
0xffff8bd17d28     8  ldr x16, pc+104 (addr 0x0000ffff8bd17d90)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd17d2c    12  cmp x6, x16
0xffff8bd17d30    16  b.ne #+0x68 (addr 0xffff8bd17d98)
0xffff8bd17d34    20  ldur w6, [x1, #27]
0xffff8bd17d38    24  mov x7, x0
0xffff8bd17d3c    28  tbnz w7, #0, #+0x6c (addr 0xffff8bd17da8)
0xffff8bd17d40    32  tbnz w2, #0, #+0x20 (addr 0xffff8bd17d60)
0xffff8bd17d44    36  asr x9, x2, #32
0xffff8bd17d48    40  cmp w9, w6
0xffff8bd17d4c    44  b.hs #+0x6c (addr 0xffff8bd17db8)
0xffff8bd17d50    48  asr x1, x7, #32
0xffff8bd17d54    52  add x2, x5, w9, sxtw #3
0xffff8bd17d58    56  stur w1, [x2, #19]
0xffff8bd17d5c    60  ret
0xffff8bd17d60    64  ldur x16, [x2, #-1]
0xffff8bd17d64    68  ldr x17, [x26, #120]
0xffff8bd17d68    72  cmp x16, x17
0xffff8bd17d6c    76  b.ne #+0x5c (addr 0xffff8bd17dc8)
0xffff8bd17d70    80  ldur d29, [x2, #7]
0xffff8bd17d74    84  fcvtzs w9, d29
0xffff8bd17d78    88  scvtf d0, w9
0xffff8bd17d7c    92  fcmp d29, d0
0xffff8bd17d80    96  b.ne #+0x48 (addr 0xffff8bd17dc8)
0xffff8bd17d84   100  b #-0x3c (addr 0xffff8bd17d48)
0xffff8bd17d88   104  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd17d8c   108  d63f03e0       constant
0xffff8bd17d90   112  5f504259       constant
0xffff8bd17d94   116  00000000       constant
0xffff8bd17d98   120  movz x16, #0x0
0xffff8bd17d9c   124  sub csp, jssp, #0x10 (16)
0xffff8bd17da0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd17da4   132  bl #+0x34 (addr 0xffff8bd17dd8)
0xffff8bd17da8   136  movz x16, #0x8
0xffff8bd17dac   140  sub csp, jssp, #0x10 (16)
0xffff8bd17db0   144  stp fp, lr, [jssp, #-16]!
0xffff8bd17db4   148  bl #+0x24 (addr 0xffff8bd17dd8)
0xffff8bd17db8   152  movz x16, #0x10
0xffff8bd17dbc   156  sub csp, jssp, #0x10 (16)
0xffff8bd17dc0   160  stp fp, lr, [jssp, #-16]!
0xffff8bd17dc4   164  bl #+0x14 (addr 0xffff8bd17dd8)
0xffff8bd17dc8   168  movz x16, #0x18
0xffff8bd17dcc   172  sub csp, jssp, #0x10 (16)
0xffff8bd17dd0   176  stp fp, lr, [jssp, #-16]!
0xffff8bd17dd4   180  bl #+0x4 (addr 0xffff8bd17dd8)
0xffff8bd17dd8   184  movz x17, #0xa00000000
0xffff8bd17ddc   188  sub csp, jssp, #0x10 (16)
0xffff8bd17de0   192  stp x17, cp, [jssp, #-16]!
0xffff8bd17de4   196  add fp, jssp, #0x10 (16)
0xffff8bd17de8   200  ldr x17, pc+24 (addr 0x0000ffff8bd17e00)    ;; lazy deoptimization bailout 0
0xffff8bd17dec   204  add x17, x17, x16
0xffff8bd17df0   208  br x17
0xffff8bd17df4   212  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd17df8   216  d63f03e0       constant
0xffff8bd17dfc   220  d503201f       constant
0xffff8bd17e00   224  8bb06000       constant
0xffff8bd17e04   228  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff8bd17d28  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd17d88  constant pool (size 16)
0xffff8bd17de8  runtime entry
0xffff8bd17df4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 240)
0xffff8bd17d20     0  ldur x5, [x1, #15]
0xffff8bd17d24     4  ldur x6, [x5, #-1]
0xffff8bd17d28     8  ldr x16, pc+104 (addr 0x0000ffff8bd17d90)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd17d2c    12  cmp x6, x16
0xffff8bd17d30    16  b.ne #+0x68 (addr 0xffff8bd17d98)
0xffff8bd17d34    20  ldur w6, [x1, #27]
0xffff8bd17d38    24  mov x7, x0
0xffff8bd17d3c    28  tbnz w7, #0, #+0x6c (addr 0xffff8bd17da8)
0xffff8bd17d40    32  tbnz w2, #0, #+0x20 (addr 0xffff8bd17d60)
0xffff8bd17d44    36  asr x9, x2, #32
0xffff8bd17d48    40  cmp w9, w6
0xffff8bd17d4c    44  b.hs #+0x6c (addr 0xffff8bd17db8)
0xffff8bd17d50    48  asr x1, x7, #32
0xffff8bd17d54    52  add x2, x5, w9, sxtw #3
0xffff8bd17d58    56  stur w1, [x2, #19]
0xffff8bd17d5c    60  ret
0xffff8bd17d60    64  ldur x16, [x2, #-1]
0xffff8bd17d64    68  ldr x17, [x26, #120]
0xffff8bd17d68    72  cmp x16, x17
0xffff8bd17d6c    76  b.ne #+0x5c (addr 0xffff8bd17dc8)
0xffff8bd17d70    80  ldur d29, [x2, #7]
0xffff8bd17d74    84  fcvtzs w9, d29
0xffff8bd17d78    88  scvtf d0, w9
0xffff8bd17d7c    92  fcmp d29, d0
0xffff8bd17d80    96  b.ne #+0x48 (addr 0xffff8bd17dc8)
0xffff8bd17d84   100  b #-0x3c (addr 0xffff8bd17d48)
0xffff8bd17d88   104  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd17d8c   108  d63f03e0       constant
0xffff8bd17d90   112  5f504259       constant
0xffff8bd17d94   116  00000000       constant
0xffff8bd17d98   120  movz x16, #0x0
0xffff8bd17d9c   124  sub csp, jssp, #0x10 (16)
0xffff8bd17da0   128  stp fp, lr, [jssp, #-16]!
0xffff8bd17da4   132  bl #+0x34 (addr 0xffff8bd17dd8)
0xffff8bd17da8   136  movz x16, #0x8
0xffff8bd17dac   140  sub csp, jssp, #0x10 (16)
0xffff8bd17db0   144  stp fp, lr, [jssp, #-16]!
0xffff8bd17db4   148  bl #+0x24 (addr 0xffff8bd17dd8)
0xffff8bd17db8   152  movz x16, #0x10
0xffff8bd17dbc   156  sub csp, jssp, #0x10 (16)
0xffff8bd17dc0   160  stp fp, lr, [jssp, #-16]!
0xffff8bd17dc4   164  bl #+0x14 (addr 0xffff8bd17dd8)
0xffff8bd17dc8   168  movz x16, #0x18
0xffff8bd17dcc   172  sub csp, jssp, #0x10 (16)
0xffff8bd17dd0   176  stp fp, lr, [jssp, #-16]!
0xffff8bd17dd4   180  bl #+0x4 (addr 0xffff8bd17dd8)
0xffff8bd17dd8   184  movz x17, #0xa00000000
0xffff8bd17ddc   188  sub csp, jssp, #0x10 (16)
0xffff8bd17de0   192  stp x17, cp, [jssp, #-16]!
0xffff8bd17de4   196  add fp, jssp, #0x10 (16)
0xffff8bd17de8   200  ldr x17, pc+24 (addr 0x0000ffff8bd17e00)    ;; lazy deoptimization bailout 0
0xffff8bd17dec   204  add x17, x17, x16
0xffff8bd17df0   208  br x17
0xffff8bd17df4   212  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd17df8   216  d63f03e0       constant
0xffff8bd17dfc   220  d503201f       constant
0xffff8bd17e00   224  8bb06000       constant
0xffff8bd17e04   228  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff8bd17d28  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd17d88  constant pool (size 16)
0xffff8bd17de8  runtime entry
0xffff8bd17df4  constant pool (size 20)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff8bd17e80     0  sub csp, jssp, #0x10 (16)
0xffff8bd17e84     4  stp x1, x0, [jssp, #-16]!
0xffff8bd17e88     8  ldur x10, [x2, #7]
0xffff8bd17e8c    12  ubfx x0, x10, #52, #11
0xffff8bd17e90    16  cmp x0, #0x453 (1107)
0xffff8bd17e94    20  csel x10, xzr, x10, ge
0xffff8bd17e98    24  b.ge #+0x1c (addr 0xffff8bd17eb4)
0xffff8bd17e9c    28  ubfx x1, x10, #0, #52
0xffff8bd17ea0    32  orr x1, x1, #0x10000000000000
0xffff8bd17ea4    36  tst x10, #0x8000000000000000
0xffff8bd17ea8    40  cneg x1, x1, ne
0xffff8bd17eac    44  sub x0, x0, #0x433 (1075)
0xffff8bd17eb0    48  lsl x10, x1, x0
0xffff8bd17eb4    52  ldp x1, x0, [jssp], #16
0xffff8bd17eb8    56  ret


RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 885)
0xffff8bd17f20     0  ldur x5, [x1, #15]
0xffff8bd17f24     4  ldur x6, [x5, #-1]
0xffff8bd17f28     8  ldr x16, pc+632 (addr 0x0000ffff8bd181a0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd17f2c    12  cmp x6, x16
0xffff8bd17f30    16  b.ne #+0x2b0 (addr 0xffff8bd181e0)
0xffff8bd17f34    20  ldur w6, [x1, #27]
0xffff8bd17f38    24  mov x7, x0
0xffff8bd17f3c    28  tbnz w7, #0, #+0x2b4 (addr 0xffff8bd181f0)
0xffff8bd17f40    32  asr x7, x7, #32
0xffff8bd17f44    36  tbnz w2, #0, #+0x128 (addr 0xffff8bd1806c)
0xffff8bd17f48    40  asr x9, x2, #32
0xffff8bd17f4c    44  cmp w6, w9
0xffff8bd17f50    48  b.eq #+0x10 (addr 0xffff8bd17f60)
0xffff8bd17f54    52  cmp w9, w6
0xffff8bd17f58    56  b.hs #+0x2a8 (addr 0xffff8bd18200)
0xffff8bd17f5c    60  b #+0x104 (addr 0xffff8bd18060)
0xffff8bd17f60    64  ldur w8, [x5, #11]
0xffff8bd17f64    68  cmp w8, w9
0xffff8bd17f68    72  b.gt #+0xe0 (addr 0xffff8bd18048)
0xffff8bd17f6c    76  adds w8, w8, #0x400 (1024)
0xffff8bd17f70    80  b.vs #+0x2a0 (addr 0xffff8bd18210)
0xffff8bd17f74    84  cmp w9, w8
0xffff8bd17f78    88  b.hs #+0x2a8 (addr 0xffff8bd18220)
0xffff8bd17f7c    92  tbnz w2, #0, #+0x138 (addr 0xffff8bd180b4)
0xffff8bd17f80    96  asr x10, x2, #32
0xffff8bd17f84   100  add w8, w9, w10, lsr #1
0xffff8bd17f88   104  add w8, w8, #0x10 (16)
0xffff8bd17f8c   108  movz w16, #0x95ff
0xffff8bd17f90   112  cmp w8, w16, lsl #1
0xffff8bd17f94   116  b.hs #+0x29c (addr 0xffff8bd18230)
0xffff8bd17f98   120  lsl x2, x8, #32
0xffff8bd17f9c   124  lsl w3, w8, #3
0xffff8bd17fa0   128  add w3, w3, #0x10 (16)
0xffff8bd17fa4   132  sxtw x3, w3
0xffff8bd17fa8   136  movz x4, #0xe2c0
0xffff8bd17fac   140  movk x4, #0x2cb8, lsl #16
0xffff8bd17fb0   144  ldp x10, x16, [x4]
0xffff8bd17fb4   148  adds x8, x10, x3
0xffff8bd17fb8   152  ccmp x8, x16, #nzCv, lo
0xffff8bd17fbc   156  b.hi #+0x178 (addr 0xffff8bd18134)
0xffff8bd17fc0   160  str x8, [x4]
0xffff8bd17fc4   164  orr x10, x10, #0x1
0xffff8bd17fc8   168  ldr x3, pc+480 (addr 0x0000ffff8bd181a8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd17fcc   172  stur x3, [x10, #-1]
0xffff8bd17fd0   176  stur x2, [x10, #7]
0xffff8bd17fd4   180  ldur w2, [x10, #11]
0xffff8bd17fd8   184  cmp w6, w2
0xffff8bd17fdc   188  b.ge #+0x18 (addr 0xffff8bd17ff4)
0xffff8bd17fe0   192  sub w2, w2, #0x1 (1)
0xffff8bd17fe4   196  ldr x3, pc+460 (addr 0x0000ffff8bd181b0)    ;; object: 0x26c04519 <the hole>
0xffff8bd17fe8   200  add x4, x10, #0xf (15)
0xffff8bd17fec   204  str x3, [x4, w2, sxtw #3]
0xffff8bd17ff0   208  b #-0x18 (addr 0xffff8bd17fd8)
0xffff8bd17ff4   212  cmp w6, #0x0 (0)
0xffff8bd17ff8   216  b.le #+0x20 (addr 0xffff8bd18018)
0xffff8bd17ffc   220  sub w6, w6, #0x1 (1)
0xffff8bd18000   224  add x2, x5, w6, sxtw #3
0xffff8bd18004   228  ldur w3, [x2, #19]
0xffff8bd18008   232  lsl x2, x3, #32
0xffff8bd1800c   236  add x3, x10, #0xf (15)
0xffff8bd18010   240  str x2, [x3, w6, sxtw #3]
0xffff8bd18014   244  b #-0x20 (addr 0xffff8bd17ff4)
0xffff8bd18018   248  mov x2, x10
0xffff8bd1801c   252  stur x2, [x1, #15]
0xffff8bd18020   256  add x3, x1, #0xf (15)
0xffff8bd18024   260  and x2, x1, #0xfffffffffff00000
0xffff8bd18028   264  ldr x2, [x2, #8]
0xffff8bd1802c   268  tbz w2, #2, #+0x18 (addr 0xffff8bd18044)
0xffff8bd18030   272  sub csp, jssp, #0x8 (8)
0xffff8bd18034   276  str lr, [jssp, #-8]!
0xffff8bd18038   280  ldr x16, pc+384 (addr 0x0000ffff8bd181b8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd1803c   284  blr x16
0xffff8bd18040   288  ldr lr, [jssp], #8
0xffff8bd18044   292  mov x5, x10
0xffff8bd18048   296  add w2, w9, #0x1 (1)
0xffff8bd1804c   300  lsl x2, x2, #32
0xffff8bd18050   304  stur x2, [x1, #23]
0xffff8bd18054   308  movz x1, #0x0
0xffff8bd18058   312  add x2, x5, #0xf (15)
0xffff8bd1805c   316  str x1, [x2, w9, sxtw #3]
0xffff8bd18060   320  add x1, x5, w9, sxtw #3
0xffff8bd18064   324  stur w7, [x1, #19]
0xffff8bd18068   328  ret
0xffff8bd1806c   332  sub csp, jssp, #0x10 (16)
0xffff8bd18070   336  stp fp, lr, [jssp, #-16]!
0xffff8bd18074   340  movz fp, #0xa00000000
0xffff8bd18078   344  sub csp, jssp, #0x8 (8)
0xffff8bd1807c   348  str fp, [jssp, #-8]!
0xffff8bd18080   352  add fp, jssp, #0x8 (8)
0xffff8bd18084   356  ldur x16, [x2, #-1]
0xffff8bd18088   360  ldr x17, [x26, #120]
0xffff8bd1808c   364  cmp x16, x17
0xffff8bd18090   368  b.ne #+0x1b0 (addr 0xffff8bd18240)
0xffff8bd18094   372  ldur d29, [x2, #7]
0xffff8bd18098   376  fcvtzs w9, d29
0xffff8bd1809c   380  scvtf d0, w9
0xffff8bd180a0   384  fcmp d29, d0
0xffff8bd180a4   388  b.ne #+0x19c (addr 0xffff8bd18240)
0xffff8bd180a8   392  ldr lr, [jssp, #16]
0xffff8bd180ac   396  ldp xzr, fp, [jssp], #24
0xffff8bd180b0   400  b #-0x164 (addr 0xffff8bd17f4c)
0xffff8bd180b4   404  sub csp, jssp, #0x10 (16)
0xffff8bd180b8   408  stp fp, lr, [jssp, #-16]!
0xffff8bd180bc   412  movz fp, #0xa00000000
0xffff8bd180c0   416  sub csp, jssp, #0x8 (8)
0xffff8bd180c4   420  str fp, [jssp, #-8]!
0xffff8bd180c8   424  add fp, jssp, #0x8 (8)
0xffff8bd180cc   428  ldur x16, [x2, #-1]
0xffff8bd180d0   432  ldr x17, [x26, #120]
0xffff8bd180d4   436  cmp x16, x17
0xffff8bd180d8   440  b.ne #+0x30 (addr 0xffff8bd18108)
0xffff8bd180dc   444  ldur d30, [x2, #7]
0xffff8bd180e0   448  fcvtzs x10, d30
0xffff8bd180e4   452  cmp x10, #0x1 (1)
0xffff8bd180e8   456  ccmn x10, #1, #nzcV, vc
0xffff8bd180ec   460  b.vc #+0x18 (addr 0xffff8bd18104)
0xffff8bd180f0   464  sub csp, jssp, #0x8 (8)
0xffff8bd180f4   468  str lr, [jssp, #-8]!
0xffff8bd180f8   472  ldr x16, pc+200 (addr 0x0000ffff8bd181c0)    ;; code: STUB, DoubleToIStub, minor: 127618
0xffff8bd180fc   476  blr x16
0xffff8bd18100   480  ldr lr, [jssp], #8
0xffff8bd18104   484  b #+0x24 (addr 0xffff8bd18128)
0xffff8bd18108   488  ldp x10, x8, [x26, #64]
0xffff8bd1810c   492  cmp x2, x10
0xffff8bd18110   496  cset x10, eq
0xffff8bd18114   500  ccmp x2, x8, #nZcv, ne
0xffff8bd18118   504  b.eq #+0x10 (addr 0xffff8bd18128)
0xffff8bd1811c   508  ldr x16, [x26, #40]
0xffff8bd18120   512  cmp x2, x16
0xffff8bd18124   516  b.ne #+0x124 (addr 0xffff8bd18248)
0xffff8bd18128   520  ldr lr, [jssp, #16]
0xffff8bd1812c   524  ldp xzr, fp, [jssp], #24
0xffff8bd18130   528  b #-0x1ac (addr 0xffff8bd17f84)
0xffff8bd18134   532  sub csp, jssp, #0x10 (16)
0xffff8bd18138   536  stp fp, lr, [jssp, #-16]!
0xffff8bd1813c   540  movz fp, #0xa00000000
0xffff8bd18140   544  sub csp, jssp, #0x8 (8)
0xffff8bd18144   548  str fp, [jssp, #-8]!
0xffff8bd18148   552  add fp, jssp, #0x8 (8)
0xffff8bd1814c   556  movz x10, #0x0
0xffff8bd18150   560  mov x16, lr
0xffff8bd18154   564  ldr x17, pc+116 (addr 0x0000ffff8bd181c8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd18158   568  blr x17
0xffff8bd1815c   572  lsl x0, x3, #32
0xffff8bd18160   576  movz x10, #0x0
0xffff8bd18164   580  sub csp, jssp, #0x10 (16)
0xffff8bd18168   584  stp x10, x0, [jssp, #-16]!
0xffff8bd1816c   588  movz x0, #0x2
0xffff8bd18170   592  movz x1, #0x5b88
0xffff8bd18174   596  movk x1, #0xe2, lsl #16
0xffff8bd18178   600  ldr x16, pc+88 (addr 0x0000ffff8bd181d0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd1817c   604  blr x16
0xffff8bd18180   608  str x0, [jssp, #80]
0xffff8bd18184   612  ldr x16, pc+84 (addr 0x0000ffff8bd181d8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd18188   616  blr x16
0xffff8bd1818c   620  ldr lr, [jssp, #16]
0xffff8bd18190   624  ldp xzr, fp, [jssp], #24
0xffff8bd18194   628  b #-0x1cc (addr 0xffff8bd17fc8)
0xffff8bd18198   632  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bd1819c   636  d63f03e0       constant
0xffff8bd181a0   640  5f504259       constant
0xffff8bd181a4   644  00000000       constant
0xffff8bd181a8   648  5f504259       constant
0xffff8bd181ac   652  00000000       constant
0xffff8bd181b0   656  26c04519       constant
0xffff8bd181b4   660  00000000       constant
0xffff8bd181b8   664  8bd170c0       constant
0xffff8bd181bc   668  0000ffff       constant
0xffff8bd181c0   672  8bd17e80       constant
0xffff8bd181c4   676  0000ffff       constant
0xffff8bd181c8   680  8bd06820       constant
0xffff8bd181cc   684  0000ffff       constant
0xffff8bd181d0   688  8bd06260       constant
0xffff8bd181d4   692  0000ffff       constant
0xffff8bd181d8   696  8bd068e0       constant
0xffff8bd181dc   700  0000ffff       constant
0xffff8bd181e0   704  movz x16, #0x0
0xffff8bd181e4   708  sub csp, jssp, #0x10 (16)
0xffff8bd181e8   712  stp fp, lr, [jssp, #-16]!
0xffff8bd181ec   716  bl #+0x64 (addr 0xffff8bd18250)
0xffff8bd181f0   720  movz x16, #0x8
0xffff8bd181f4   724  sub csp, jssp, #0x10 (16)
0xffff8bd181f8   728  stp fp, lr, [jssp, #-16]!
0xffff8bd181fc   732  bl #+0x54 (addr 0xffff8bd18250)
0xffff8bd18200   736  movz x16, #0x10
0xffff8bd18204   740  sub csp, jssp, #0x10 (16)
0xffff8bd18208   744  stp fp, lr, [jssp, #-16]!
0xffff8bd1820c   748  bl #+0x44 (addr 0xffff8bd18250)
0xffff8bd18210   752  movz x16, #0x18
0xffff8bd18214   756  sub csp, jssp, #0x10 (16)
0xffff8bd18218   760  stp fp, lr, [jssp, #-16]!
0xffff8bd1821c   764  bl #+0x34 (addr 0xffff8bd18250)
0xffff8bd18220   768  movz x16, #0x20
0xffff8bd18224   772  sub csp, jssp, #0x10 (16)
0xffff8bd18228   776  stp fp, lr, [jssp, #-16]!
0xffff8bd1822c   780  bl #+0x24 (addr 0xffff8bd18250)
0xffff8bd18230   784  movz x16, #0x28
0xffff8bd18234   788  sub csp, jssp, #0x10 (16)
0xffff8bd18238   792  stp fp, lr, [jssp, #-16]!
0xffff8bd1823c   796  bl #+0x14 (addr 0xffff8bd18250)
0xffff8bd18240   800  movz x16, #0x30
0xffff8bd18244   804  bl #+0x1c (addr 0xffff8bd18260)
0xffff8bd18248   808  movz x16, #0x38
0xffff8bd1824c   812  bl #+0x14 (addr 0xffff8bd18260)
0xffff8bd18250   816  movz x17, #0xa00000000
0xffff8bd18254   820  sub csp, jssp, #0x10 (16)
0xffff8bd18258   824  stp x17, cp, [jssp, #-16]!
0xffff8bd1825c   828  add fp, jssp, #0x10 (16)
0xffff8bd18260   832  ldr x17, pc+24 (addr 0x0000ffff8bd18278)    ;; lazy deoptimization bailout 0
0xffff8bd18264   836  add x17, x17, x16
0xffff8bd18268   840  br x17
0xffff8bd1826c   844  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd18270   848  d63f03e0       constant
0xffff8bd18274   852  d503201f       constant
0xffff8bd18278   856  8bb06000       constant
0xffff8bd1827c   860  0000ffff       constant


Safepoints (size = 21)
0xffff8bd18180   608  000 | x0 | x1 | x5 | x10 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 32)
0xffff8bd17f28  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd17fc8  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd17fe4  embedded object  (0x26c04519 <the hole>)
0xffff8bd18038  code target (STUB)  (0xffff8bd170c0)
0xffff8bd180f8  code target (STUB)  (0xffff8bd17e80)
0xffff8bd18154  code target (STUB)  (0xffff8bd06820)
0xffff8bd18178  code target (STUB)  (0xffff8bd06260)
0xffff8bd18184  code target (STUB)  (0xffff8bd068e0)
0xffff8bd18198  constant pool (size 72)
0xffff8bd18260  runtime entry
0xffff8bd1826c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 885)
0xffff8bd17f20     0  ldur x5, [x1, #15]
0xffff8bd17f24     4  ldur x6, [x5, #-1]
0xffff8bd17f28     8  ldr x16, pc+632 (addr 0x0000ffff8bd181a0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd17f2c    12  cmp x6, x16
0xffff8bd17f30    16  b.ne #+0x2b0 (addr 0xffff8bd181e0)
0xffff8bd17f34    20  ldur w6, [x1, #27]
0xffff8bd17f38    24  mov x7, x0
0xffff8bd17f3c    28  tbnz w7, #0, #+0x2b4 (addr 0xffff8bd181f0)
0xffff8bd17f40    32  asr x7, x7, #32
0xffff8bd17f44    36  tbnz w2, #0, #+0x128 (addr 0xffff8bd1806c)
0xffff8bd17f48    40  asr x9, x2, #32
0xffff8bd17f4c    44  cmp w6, w9
0xffff8bd17f50    48  b.eq #+0x10 (addr 0xffff8bd17f60)
0xffff8bd17f54    52  cmp w9, w6
0xffff8bd17f58    56  b.hs #+0x2a8 (addr 0xffff8bd18200)
0xffff8bd17f5c    60  b #+0x104 (addr 0xffff8bd18060)
0xffff8bd17f60    64  ldur w8, [x5, #11]
0xffff8bd17f64    68  cmp w8, w9
0xffff8bd17f68    72  b.gt #+0xe0 (addr 0xffff8bd18048)
0xffff8bd17f6c    76  adds w8, w8, #0x400 (1024)
0xffff8bd17f70    80  b.vs #+0x2a0 (addr 0xffff8bd18210)
0xffff8bd17f74    84  cmp w9, w8
0xffff8bd17f78    88  b.hs #+0x2a8 (addr 0xffff8bd18220)
0xffff8bd17f7c    92  tbnz w2, #0, #+0x138 (addr 0xffff8bd180b4)
0xffff8bd17f80    96  asr x10, x2, #32
0xffff8bd17f84   100  add w8, w9, w10, lsr #1
0xffff8bd17f88   104  add w8, w8, #0x10 (16)
0xffff8bd17f8c   108  movz w16, #0x95ff
0xffff8bd17f90   112  cmp w8, w16, lsl #1
0xffff8bd17f94   116  b.hs #+0x29c (addr 0xffff8bd18230)
0xffff8bd17f98   120  lsl x2, x8, #32
0xffff8bd17f9c   124  lsl w3, w8, #3
0xffff8bd17fa0   128  add w3, w3, #0x10 (16)
0xffff8bd17fa4   132  sxtw x3, w3
0xffff8bd17fa8   136  movz x4, #0xe2c0
0xffff8bd17fac   140  movk x4, #0x2cb8, lsl #16
0xffff8bd17fb0   144  ldp x10, x16, [x4]
0xffff8bd17fb4   148  adds x8, x10, x3
0xffff8bd17fb8   152  ccmp x8, x16, #nzCv, lo
0xffff8bd17fbc   156  b.hi #+0x178 (addr 0xffff8bd18134)
0xffff8bd17fc0   160  str x8, [x4]
0xffff8bd17fc4   164  orr x10, x10, #0x1
0xffff8bd17fc8   168  ldr x3, pc+480 (addr 0x0000ffff8bd181a8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd17fcc   172  stur x3, [x10, #-1]
0xffff8bd17fd0   176  stur x2, [x10, #7]
0xffff8bd17fd4   180  ldur w2, [x10, #11]
0xffff8bd17fd8   184  cmp w6, w2
0xffff8bd17fdc   188  b.ge #+0x18 (addr 0xffff8bd17ff4)
0xffff8bd17fe0   192  sub w2, w2, #0x1 (1)
0xffff8bd17fe4   196  ldr x3, pc+460 (addr 0x0000ffff8bd181b0)    ;; object: 0x26c04519 <the hole>
0xffff8bd17fe8   200  add x4, x10, #0xf (15)
0xffff8bd17fec   204  str x3, [x4, w2, sxtw #3]
0xffff8bd17ff0   208  b #-0x18 (addr 0xffff8bd17fd8)
0xffff8bd17ff4   212  cmp w6, #0x0 (0)
0xffff8bd17ff8   216  b.le #+0x20 (addr 0xffff8bd18018)
0xffff8bd17ffc   220  sub w6, w6, #0x1 (1)
0xffff8bd18000   224  add x2, x5, w6, sxtw #3
0xffff8bd18004   228  ldur w3, [x2, #19]
0xffff8bd18008   232  lsl x2, x3, #32
0xffff8bd1800c   236  add x3, x10, #0xf (15)
0xffff8bd18010   240  str x2, [x3, w6, sxtw #3]
0xffff8bd18014   244  b #-0x20 (addr 0xffff8bd17ff4)
0xffff8bd18018   248  mov x2, x10
0xffff8bd1801c   252  stur x2, [x1, #15]
0xffff8bd18020   256  add x3, x1, #0xf (15)
0xffff8bd18024   260  and x2, x1, #0xfffffffffff00000
0xffff8bd18028   264  ldr x2, [x2, #8]
0xffff8bd1802c   268  tbz w2, #2, #+0x18 (addr 0xffff8bd18044)
0xffff8bd18030   272  sub csp, jssp, #0x8 (8)
0xffff8bd18034   276  str lr, [jssp, #-8]!
0xffff8bd18038   280  ldr x16, pc+384 (addr 0x0000ffff8bd181b8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd1803c   284  blr x16
0xffff8bd18040   288  ldr lr, [jssp], #8
0xffff8bd18044   292  mov x5, x10
0xffff8bd18048   296  add w2, w9, #0x1 (1)
0xffff8bd1804c   300  lsl x2, x2, #32
0xffff8bd18050   304  stur x2, [x1, #23]
0xffff8bd18054   308  movz x1, #0x0
0xffff8bd18058   312  add x2, x5, #0xf (15)
0xffff8bd1805c   316  str x1, [x2, w9, sxtw #3]
0xffff8bd18060   320  add x1, x5, w9, sxtw #3
0xffff8bd18064   324  stur w7, [x1, #19]
0xffff8bd18068   328  ret
0xffff8bd1806c   332  sub csp, jssp, #0x10 (16)
0xffff8bd18070   336  stp fp, lr, [jssp, #-16]!
0xffff8bd18074   340  movz fp, #0xa00000000
0xffff8bd18078   344  sub csp, jssp, #0x8 (8)
0xffff8bd1807c   348  str fp, [jssp, #-8]!
0xffff8bd18080   352  add fp, jssp, #0x8 (8)
0xffff8bd18084   356  ldur x16, [x2, #-1]
0xffff8bd18088   360  ldr x17, [x26, #120]
0xffff8bd1808c   364  cmp x16, x17
0xffff8bd18090   368  b.ne #+0x1b0 (addr 0xffff8bd18240)
0xffff8bd18094   372  ldur d29, [x2, #7]
0xffff8bd18098   376  fcvtzs w9, d29
0xffff8bd1809c   380  scvtf d0, w9
0xffff8bd180a0   384  fcmp d29, d0
0xffff8bd180a4   388  b.ne #+0x19c (addr 0xffff8bd18240)
0xffff8bd180a8   392  ldr lr, [jssp, #16]
0xffff8bd180ac   396  ldp xzr, fp, [jssp], #24
0xffff8bd180b0   400  b #-0x164 (addr 0xffff8bd17f4c)
0xffff8bd180b4   404  sub csp, jssp, #0x10 (16)
0xffff8bd180b8   408  stp fp, lr, [jssp, #-16]!
0xffff8bd180bc   412  movz fp, #0xa00000000
0xffff8bd180c0   416  sub csp, jssp, #0x8 (8)
0xffff8bd180c4   420  str fp, [jssp, #-8]!
0xffff8bd180c8   424  add fp, jssp, #0x8 (8)
0xffff8bd180cc   428  ldur x16, [x2, #-1]
0xffff8bd180d0   432  ldr x17, [x26, #120]
0xffff8bd180d4   436  cmp x16, x17
0xffff8bd180d8   440  b.ne #+0x30 (addr 0xffff8bd18108)
0xffff8bd180dc   444  ldur d30, [x2, #7]
0xffff8bd180e0   448  fcvtzs x10, d30
0xffff8bd180e4   452  cmp x10, #0x1 (1)
0xffff8bd180e8   456  ccmn x10, #1, #nzcV, vc
0xffff8bd180ec   460  b.vc #+0x18 (addr 0xffff8bd18104)
0xffff8bd180f0   464  sub csp, jssp, #0x8 (8)
0xffff8bd180f4   468  str lr, [jssp, #-8]!
0xffff8bd180f8   472  ldr x16, pc+200 (addr 0x0000ffff8bd181c0)    ;; code: STUB, DoubleToIStub, minor: 127618
0xffff8bd180fc   476  blr x16
0xffff8bd18100   480  ldr lr, [jssp], #8
0xffff8bd18104   484  b #+0x24 (addr 0xffff8bd18128)
0xffff8bd18108   488  ldp x10, x8, [x26, #64]
0xffff8bd1810c   492  cmp x2, x10
0xffff8bd18110   496  cset x10, eq
0xffff8bd18114   500  ccmp x2, x8, #nZcv, ne
0xffff8bd18118   504  b.eq #+0x10 (addr 0xffff8bd18128)
0xffff8bd1811c   508  ldr x16, [x26, #40]
0xffff8bd18120   512  cmp x2, x16
0xffff8bd18124   516  b.ne #+0x124 (addr 0xffff8bd18248)
0xffff8bd18128   520  ldr lr, [jssp, #16]
0xffff8bd1812c   524  ldp xzr, fp, [jssp], #24
0xffff8bd18130   528  b #-0x1ac (addr 0xffff8bd17f84)
0xffff8bd18134   532  sub csp, jssp, #0x10 (16)
0xffff8bd18138   536  stp fp, lr, [jssp, #-16]!
0xffff8bd1813c   540  movz fp, #0xa00000000
0xffff8bd18140   544  sub csp, jssp, #0x8 (8)
0xffff8bd18144   548  str fp, [jssp, #-8]!
0xffff8bd18148   552  add fp, jssp, #0x8 (8)
0xffff8bd1814c   556  movz x10, #0x0
0xffff8bd18150   560  mov x16, lr
0xffff8bd18154   564  ldr x17, pc+116 (addr 0x0000ffff8bd181c8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd18158   568  blr x17
0xffff8bd1815c   572  lsl x0, x3, #32
0xffff8bd18160   576  movz x10, #0x0
0xffff8bd18164   580  sub csp, jssp, #0x10 (16)
0xffff8bd18168   584  stp x10, x0, [jssp, #-16]!
0xffff8bd1816c   588  movz x0, #0x2
0xffff8bd18170   592  movz x1, #0x5b88
0xffff8bd18174   596  movk x1, #0xe2, lsl #16
0xffff8bd18178   600  ldr x16, pc+88 (addr 0x0000ffff8bd181d0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd1817c   604  blr x16
0xffff8bd18180   608  str x0, [jssp, #80]
0xffff8bd18184   612  ldr x16, pc+84 (addr 0x0000ffff8bd181d8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd18188   616  blr x16
0xffff8bd1818c   620  ldr lr, [jssp, #16]
0xffff8bd18190   624  ldp xzr, fp, [jssp], #24
0xffff8bd18194   628  b #-0x1cc (addr 0xffff8bd17fc8)
0xffff8bd18198   632  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bd1819c   636  d63f03e0       constant
0xffff8bd181a0   640  5f504259       constant
0xffff8bd181a4   644  00000000       constant
0xffff8bd181a8   648  5f504259       constant
0xffff8bd181ac   652  00000000       constant
0xffff8bd181b0   656  26c04519       constant
0xffff8bd181b4   660  00000000       constant
0xffff8bd181b8   664  8bd170c0       constant
0xffff8bd181bc   668  0000ffff       constant
0xffff8bd181c0   672  8bd17e80       constant
0xffff8bd181c4   676  0000ffff       constant
0xffff8bd181c8   680  8bd06820       constant
0xffff8bd181cc   684  0000ffff       constant
0xffff8bd181d0   688  8bd06260       constant
0xffff8bd181d4   692  0000ffff       constant
0xffff8bd181d8   696  8bd068e0       constant
0xffff8bd181dc   700  0000ffff       constant
0xffff8bd181e0   704  movz x16, #0x0
0xffff8bd181e4   708  sub csp, jssp, #0x10 (16)
0xffff8bd181e8   712  stp fp, lr, [jssp, #-16]!
0xffff8bd181ec   716  bl #+0x64 (addr 0xffff8bd18250)
0xffff8bd181f0   720  movz x16, #0x8
0xffff8bd181f4   724  sub csp, jssp, #0x10 (16)
0xffff8bd181f8   728  stp fp, lr, [jssp, #-16]!
0xffff8bd181fc   732  bl #+0x54 (addr 0xffff8bd18250)
0xffff8bd18200   736  movz x16, #0x10
0xffff8bd18204   740  sub csp, jssp, #0x10 (16)
0xffff8bd18208   744  stp fp, lr, [jssp, #-16]!
0xffff8bd1820c   748  bl #+0x44 (addr 0xffff8bd18250)
0xffff8bd18210   752  movz x16, #0x18
0xffff8bd18214   756  sub csp, jssp, #0x10 (16)
0xffff8bd18218   760  stp fp, lr, [jssp, #-16]!
0xffff8bd1821c   764  bl #+0x34 (addr 0xffff8bd18250)
0xffff8bd18220   768  movz x16, #0x20
0xffff8bd18224   772  sub csp, jssp, #0x10 (16)
0xffff8bd18228   776  stp fp, lr, [jssp, #-16]!
0xffff8bd1822c   780  bl #+0x24 (addr 0xffff8bd18250)
0xffff8bd18230   784  movz x16, #0x28
0xffff8bd18234   788  sub csp, jssp, #0x10 (16)
0xffff8bd18238   792  stp fp, lr, [jssp, #-16]!
0xffff8bd1823c   796  bl #+0x14 (addr 0xffff8bd18250)
0xffff8bd18240   800  movz x16, #0x30
0xffff8bd18244   804  bl #+0x1c (addr 0xffff8bd18260)
0xffff8bd18248   808  movz x16, #0x38
0xffff8bd1824c   812  bl #+0x14 (addr 0xffff8bd18260)
0xffff8bd18250   816  movz x17, #0xa00000000
0xffff8bd18254   820  sub csp, jssp, #0x10 (16)
0xffff8bd18258   824  stp x17, cp, [jssp, #-16]!
0xffff8bd1825c   828  add fp, jssp, #0x10 (16)
0xffff8bd18260   832  ldr x17, pc+24 (addr 0x0000ffff8bd18278)    ;; lazy deoptimization bailout 0
0xffff8bd18264   836  add x17, x17, x16
0xffff8bd18268   840  br x17
0xffff8bd1826c   844  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd18270   848  d63f03e0       constant
0xffff8bd18274   852  d503201f       constant
0xffff8bd18278   856  8bb06000       constant
0xffff8bd1827c   860  0000ffff       constant


Safepoints (size = 21)
0xffff8bd18180   608  000 | x0 | x1 | x5 | x10 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 32)
0xffff8bd17f28  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd17fc8  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd17fe4  embedded object  (0x26c04519 <the hole>)
0xffff8bd18038  code target (STUB)  (0xffff8bd170c0)
0xffff8bd180f8  code target (STUB)  (0xffff8bd17e80)
0xffff8bd18154  code target (STUB)  (0xffff8bd06820)
0xffff8bd18178  code target (STUB)  (0xffff8bd06260)
0xffff8bd18184  code target (STUB)  (0xffff8bd068e0)
0xffff8bd18198  constant pool (size 72)
0xffff8bd18260  runtime entry
0xffff8bd1826c  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 240)
0xffff8bd18300     0  ldur x5, [x1, #15]
0xffff8bd18304     4  ldur x6, [x5, #-1]
0xffff8bd18308     8  ldr x16, pc+104 (addr 0x0000ffff8bd18370)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd1830c    12  cmp x6, x16
0xffff8bd18310    16  b.ne #+0x68 (addr 0xffff8bd18378)
0xffff8bd18314    20  ldur w6, [x1, #27]
0xffff8bd18318    24  mov x7, x0
0xffff8bd1831c    28  tbnz w7, #0, #+0x6c (addr 0xffff8bd18388)
0xffff8bd18320    32  tbnz w2, #0, #+0x1c (addr 0xffff8bd1833c)
0xffff8bd18324    36  asr x9, x2, #32
0xffff8bd18328    40  cmp w9, w6
0xffff8bd1832c    44  b.hs #+0x6c (addr 0xffff8bd18398)
0xffff8bd18330    48  add x1, x5, #0xf (15)
0xffff8bd18334    52  str x7, [x1, w9, sxtw #3]
0xffff8bd18338    56  ret
0xffff8bd1833c    60  ldur x16, [x2, #-1]
0xffff8bd18340    64  ldr x17, [x26, #120]
0xffff8bd18344    68  cmp x16, x17
0xffff8bd18348    72  b.ne #+0x60 (addr 0xffff8bd183a8)
0xffff8bd1834c    76  ldur d29, [x2, #7]
0xffff8bd18350    80  fcvtzs w9, d29
0xffff8bd18354    84  scvtf d0, w9
0xffff8bd18358    88  fcmp d29, d0
0xffff8bd1835c    92  b.ne #+0x4c (addr 0xffff8bd183a8)
0xffff8bd18360    96  b #-0x38 (addr 0xffff8bd18328)
0xffff8bd18364   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd18368   104  d63f03e0       constant
0xffff8bd1836c   108  d503201f       constant
0xffff8bd18370   112  5f504259       constant
0xffff8bd18374   116  00000000       constant
0xffff8bd18378   120  movz x16, #0x0
0xffff8bd1837c   124  sub csp, jssp, #0x10 (16)
0xffff8bd18380   128  stp fp, lr, [jssp, #-16]!
0xffff8bd18384   132  bl #+0x34 (addr 0xffff8bd183b8)
0xffff8bd18388   136  movz x16, #0x8
0xffff8bd1838c   140  sub csp, jssp, #0x10 (16)
0xffff8bd18390   144  stp fp, lr, [jssp, #-16]!
0xffff8bd18394   148  bl #+0x24 (addr 0xffff8bd183b8)
0xffff8bd18398   152  movz x16, #0x10
0xffff8bd1839c   156  sub csp, jssp, #0x10 (16)
0xffff8bd183a0   160  stp fp, lr, [jssp, #-16]!
0xffff8bd183a4   164  bl #+0x14 (addr 0xffff8bd183b8)
0xffff8bd183a8   168  movz x16, #0x18
0xffff8bd183ac   172  sub csp, jssp, #0x10 (16)
0xffff8bd183b0   176  stp fp, lr, [jssp, #-16]!
0xffff8bd183b4   180  bl #+0x4 (addr 0xffff8bd183b8)
0xffff8bd183b8   184  movz x17, #0xa00000000
0xffff8bd183bc   188  sub csp, jssp, #0x10 (16)
0xffff8bd183c0   192  stp x17, cp, [jssp, #-16]!
0xffff8bd183c4   196  add fp, jssp, #0x10 (16)
0xffff8bd183c8   200  ldr x17, pc+24 (addr 0x0000ffff8bd183e0)    ;; lazy deoptimization bailout 0
0xffff8bd183cc   204  add x17, x17, x16
0xffff8bd183d0   208  br x17
0xffff8bd183d4   212  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd183d8   216  d63f03e0       constant
0xffff8bd183dc   220  d503201f       constant
0xffff8bd183e0   224  8bb06000       constant
0xffff8bd183e4   228  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff8bd18308  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18364  constant pool (size 20)
0xffff8bd183c8  runtime entry
0xffff8bd183d4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 240)
0xffff8bd18300     0  ldur x5, [x1, #15]
0xffff8bd18304     4  ldur x6, [x5, #-1]
0xffff8bd18308     8  ldr x16, pc+104 (addr 0x0000ffff8bd18370)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd1830c    12  cmp x6, x16
0xffff8bd18310    16  b.ne #+0x68 (addr 0xffff8bd18378)
0xffff8bd18314    20  ldur w6, [x1, #27]
0xffff8bd18318    24  mov x7, x0
0xffff8bd1831c    28  tbnz w7, #0, #+0x6c (addr 0xffff8bd18388)
0xffff8bd18320    32  tbnz w2, #0, #+0x1c (addr 0xffff8bd1833c)
0xffff8bd18324    36  asr x9, x2, #32
0xffff8bd18328    40  cmp w9, w6
0xffff8bd1832c    44  b.hs #+0x6c (addr 0xffff8bd18398)
0xffff8bd18330    48  add x1, x5, #0xf (15)
0xffff8bd18334    52  str x7, [x1, w9, sxtw #3]
0xffff8bd18338    56  ret
0xffff8bd1833c    60  ldur x16, [x2, #-1]
0xffff8bd18340    64  ldr x17, [x26, #120]
0xffff8bd18344    68  cmp x16, x17
0xffff8bd18348    72  b.ne #+0x60 (addr 0xffff8bd183a8)
0xffff8bd1834c    76  ldur d29, [x2, #7]
0xffff8bd18350    80  fcvtzs w9, d29
0xffff8bd18354    84  scvtf d0, w9
0xffff8bd18358    88  fcmp d29, d0
0xffff8bd1835c    92  b.ne #+0x4c (addr 0xffff8bd183a8)
0xffff8bd18360    96  b #-0x38 (addr 0xffff8bd18328)
0xffff8bd18364   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd18368   104  d63f03e0       constant
0xffff8bd1836c   108  d503201f       constant
0xffff8bd18370   112  5f504259       constant
0xffff8bd18374   116  00000000       constant
0xffff8bd18378   120  movz x16, #0x0
0xffff8bd1837c   124  sub csp, jssp, #0x10 (16)
0xffff8bd18380   128  stp fp, lr, [jssp, #-16]!
0xffff8bd18384   132  bl #+0x34 (addr 0xffff8bd183b8)
0xffff8bd18388   136  movz x16, #0x8
0xffff8bd1838c   140  sub csp, jssp, #0x10 (16)
0xffff8bd18390   144  stp fp, lr, [jssp, #-16]!
0xffff8bd18394   148  bl #+0x24 (addr 0xffff8bd183b8)
0xffff8bd18398   152  movz x16, #0x10
0xffff8bd1839c   156  sub csp, jssp, #0x10 (16)
0xffff8bd183a0   160  stp fp, lr, [jssp, #-16]!
0xffff8bd183a4   164  bl #+0x14 (addr 0xffff8bd183b8)
0xffff8bd183a8   168  movz x16, #0x18
0xffff8bd183ac   172  sub csp, jssp, #0x10 (16)
0xffff8bd183b0   176  stp fp, lr, [jssp, #-16]!
0xffff8bd183b4   180  bl #+0x4 (addr 0xffff8bd183b8)
0xffff8bd183b8   184  movz x17, #0xa00000000
0xffff8bd183bc   188  sub csp, jssp, #0x10 (16)
0xffff8bd183c0   192  stp x17, cp, [jssp, #-16]!
0xffff8bd183c4   196  add fp, jssp, #0x10 (16)
0xffff8bd183c8   200  ldr x17, pc+24 (addr 0x0000ffff8bd183e0)    ;; lazy deoptimization bailout 0
0xffff8bd183cc   204  add x17, x17, x16
0xffff8bd183d0   208  br x17
0xffff8bd183d4   212  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd183d8   216  d63f03e0       constant
0xffff8bd183dc   220  d503201f       constant
0xffff8bd183e0   224  8bb06000       constant
0xffff8bd183e4   228  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff8bd18308  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18364  constant pool (size 20)
0xffff8bd183c8  runtime entry
0xffff8bd183d4  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 869)
0xffff8bd18460     0  ldur x5, [x1, #15]
0xffff8bd18464     4  ldur x6, [x5, #-1]
0xffff8bd18468     8  ldr x16, pc+616 (addr 0x0000ffff8bd186d0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd1846c    12  cmp x6, x16
0xffff8bd18470    16  b.ne #+0x2a0 (addr 0xffff8bd18710)
0xffff8bd18474    20  ldur w6, [x1, #27]
0xffff8bd18478    24  mov x7, x0
0xffff8bd1847c    28  tbnz w7, #0, #+0x2a4 (addr 0xffff8bd18720)
0xffff8bd18480    32  tbnz w2, #0, #+0x118 (addr 0xffff8bd18598)
0xffff8bd18484    36  asr x9, x2, #32
0xffff8bd18488    40  cmp w6, w9
0xffff8bd1848c    44  b.le #+0x10 (addr 0xffff8bd1849c)
0xffff8bd18490    48  cmp w9, w6
0xffff8bd18494    52  b.hs #+0x29c (addr 0xffff8bd18730)
0xffff8bd18498    56  b #+0xf4 (addr 0xffff8bd1858c)
0xffff8bd1849c    60  ldur w8, [x5, #11]
0xffff8bd184a0    64  cmp w8, w9
0xffff8bd184a4    68  b.gt #+0xdc (addr 0xffff8bd18580)
0xffff8bd184a8    72  adds w8, w8, #0x400 (1024)
0xffff8bd184ac    76  b.vs #+0x294 (addr 0xffff8bd18740)
0xffff8bd184b0    80  cmp w9, w8
0xffff8bd184b4    84  b.hs #+0x29c (addr 0xffff8bd18750)
0xffff8bd184b8    88  tbnz w2, #0, #+0x128 (addr 0xffff8bd185e0)
0xffff8bd184bc    92  asr x10, x2, #32
0xffff8bd184c0    96  add w8, w9, w10, lsr #1
0xffff8bd184c4   100  add w8, w8, #0x10 (16)
0xffff8bd184c8   104  movz w16, #0x95ff
0xffff8bd184cc   108  cmp w8, w16, lsl #1
0xffff8bd184d0   112  b.hs #+0x290 (addr 0xffff8bd18760)
0xffff8bd184d4   116  lsl x2, x8, #32
0xffff8bd184d8   120  lsl w3, w8, #3
0xffff8bd184dc   124  add w3, w3, #0x10 (16)
0xffff8bd184e0   128  sxtw x3, w3
0xffff8bd184e4   132  movz x4, #0xe2c0
0xffff8bd184e8   136  movk x4, #0x2cb8, lsl #16
0xffff8bd184ec   140  ldp x10, x16, [x4]
0xffff8bd184f0   144  adds x8, x10, x3
0xffff8bd184f4   148  ccmp x8, x16, #nzCv, lo
0xffff8bd184f8   152  b.hi #+0x168 (addr 0xffff8bd18660)
0xffff8bd184fc   156  str x8, [x4]
0xffff8bd18500   160  orr x10, x10, #0x1
0xffff8bd18504   164  ldr x3, pc+468 (addr 0x0000ffff8bd186d8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd18508   168  stur x3, [x10, #-1]
0xffff8bd1850c   172  stur x2, [x10, #7]
0xffff8bd18510   176  ldur w2, [x10, #11]
0xffff8bd18514   180  cmp w6, w2
0xffff8bd18518   184  b.ge #+0x18 (addr 0xffff8bd18530)
0xffff8bd1851c   188  sub w2, w2, #0x1 (1)
0xffff8bd18520   192  ldr x3, pc+448 (addr 0x0000ffff8bd186e0)    ;; object: 0x26c04519 <the hole>
0xffff8bd18524   196  add x4, x10, #0xf (15)
0xffff8bd18528   200  str x3, [x4, w2, sxtw #3]
0xffff8bd1852c   204  b #-0x18 (addr 0xffff8bd18514)
0xffff8bd18530   208  cmp w6, #0x0 (0)
0xffff8bd18534   212  b.le #+0x1c (addr 0xffff8bd18550)
0xffff8bd18538   216  sub w6, w6, #0x1 (1)
0xffff8bd1853c   220  add x2, x5, #0xf (15)
0xffff8bd18540   224  ldr x3, [x2, w6, sxtw #3]
0xffff8bd18544   228  add x2, x10, #0xf (15)
0xffff8bd18548   232  str x3, [x2, w6, sxtw #3]
0xffff8bd1854c   236  b #-0x1c (addr 0xffff8bd18530)
0xffff8bd18550   240  mov x2, x10
0xffff8bd18554   244  stur x2, [x1, #15]
0xffff8bd18558   248  add x3, x1, #0xf (15)
0xffff8bd1855c   252  and x2, x1, #0xfffffffffff00000
0xffff8bd18560   256  ldr x2, [x2, #8]
0xffff8bd18564   260  tbz w2, #2, #+0x18 (addr 0xffff8bd1857c)
0xffff8bd18568   264  sub csp, jssp, #0x8 (8)
0xffff8bd1856c   268  str lr, [jssp, #-8]!
0xffff8bd18570   272  ldr x16, pc+376 (addr 0x0000ffff8bd186e8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd18574   276  blr x16
0xffff8bd18578   280  ldr lr, [jssp], #8
0xffff8bd1857c   284  mov x5, x10
0xffff8bd18580   288  add w2, w9, #0x1 (1)
0xffff8bd18584   292  lsl x2, x2, #32
0xffff8bd18588   296  stur x2, [x1, #23]
0xffff8bd1858c   300  add x1, x5, #0xf (15)
0xffff8bd18590   304  str x7, [x1, w9, sxtw #3]
0xffff8bd18594   308  ret
0xffff8bd18598   312  sub csp, jssp, #0x10 (16)
0xffff8bd1859c   316  stp fp, lr, [jssp, #-16]!
0xffff8bd185a0   320  movz fp, #0xa00000000
0xffff8bd185a4   324  sub csp, jssp, #0x8 (8)
0xffff8bd185a8   328  str fp, [jssp, #-8]!
0xffff8bd185ac   332  add fp, jssp, #0x8 (8)
0xffff8bd185b0   336  ldur x16, [x2, #-1]
0xffff8bd185b4   340  ldr x17, [x26, #120]
0xffff8bd185b8   344  cmp x16, x17
0xffff8bd185bc   348  b.ne #+0x1b4 (addr 0xffff8bd18770)
0xffff8bd185c0   352  ldur d29, [x2, #7]
0xffff8bd185c4   356  fcvtzs w9, d29
0xffff8bd185c8   360  scvtf d0, w9
0xffff8bd185cc   364  fcmp d29, d0
0xffff8bd185d0   368  b.ne #+0x1a0 (addr 0xffff8bd18770)
0xffff8bd185d4   372  ldr lr, [jssp, #16]
0xffff8bd185d8   376  ldp xzr, fp, [jssp], #24
0xffff8bd185dc   380  b #-0x154 (addr 0xffff8bd18488)
0xffff8bd185e0   384  sub csp, jssp, #0x10 (16)
0xffff8bd185e4   388  stp fp, lr, [jssp, #-16]!
0xffff8bd185e8   392  movz fp, #0xa00000000
0xffff8bd185ec   396  sub csp, jssp, #0x8 (8)
0xffff8bd185f0   400  str fp, [jssp, #-8]!
0xffff8bd185f4   404  add fp, jssp, #0x8 (8)
0xffff8bd185f8   408  ldur x16, [x2, #-1]
0xffff8bd185fc   412  ldr x17, [x26, #120]
0xffff8bd18600   416  cmp x16, x17
0xffff8bd18604   420  b.ne #+0x30 (addr 0xffff8bd18634)
0xffff8bd18608   424  ldur d30, [x2, #7]
0xffff8bd1860c   428  fcvtzs x10, d30
0xffff8bd18610   432  cmp x10, #0x1 (1)
0xffff8bd18614   436  ccmn x10, #1, #nzcV, vc
0xffff8bd18618   440  b.vc #+0x18 (addr 0xffff8bd18630)
0xffff8bd1861c   444  sub csp, jssp, #0x8 (8)
0xffff8bd18620   448  str lr, [jssp, #-8]!
0xffff8bd18624   452  ldr x16, pc+204 (addr 0x0000ffff8bd186f0)    ;; code: STUB, DoubleToIStub, minor: 127618
0xffff8bd18628   456  blr x16
0xffff8bd1862c   460  ldr lr, [jssp], #8
0xffff8bd18630   464  b #+0x24 (addr 0xffff8bd18654)
0xffff8bd18634   468  ldp x10, x8, [x26, #64]
0xffff8bd18638   472  cmp x2, x10
0xffff8bd1863c   476  cset x10, eq
0xffff8bd18640   480  ccmp x2, x8, #nZcv, ne
0xffff8bd18644   484  b.eq #+0x10 (addr 0xffff8bd18654)
0xffff8bd18648   488  ldr x16, [x26, #40]
0xffff8bd1864c   492  cmp x2, x16
0xffff8bd18650   496  b.ne #+0x128 (addr 0xffff8bd18778)
0xffff8bd18654   500  ldr lr, [jssp, #16]
0xffff8bd18658   504  ldp xzr, fp, [jssp], #24
0xffff8bd1865c   508  b #-0x19c (addr 0xffff8bd184c0)
0xffff8bd18660   512  sub csp, jssp, #0x10 (16)
0xffff8bd18664   516  stp fp, lr, [jssp, #-16]!
0xffff8bd18668   520  movz fp, #0xa00000000
0xffff8bd1866c   524  sub csp, jssp, #0x8 (8)
0xffff8bd18670   528  str fp, [jssp, #-8]!
0xffff8bd18674   532  add fp, jssp, #0x8 (8)
0xffff8bd18678   536  movz x10, #0x0
0xffff8bd1867c   540  mov x16, lr
0xffff8bd18680   544  ldr x17, pc+120 (addr 0x0000ffff8bd186f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd18684   548  blr x17
0xffff8bd18688   552  lsl x0, x3, #32
0xffff8bd1868c   556  movz x10, #0x0
0xffff8bd18690   560  sub csp, jssp, #0x10 (16)
0xffff8bd18694   564  stp x10, x0, [jssp, #-16]!
0xffff8bd18698   568  movz x0, #0x2
0xffff8bd1869c   572  movz x1, #0x5b88
0xffff8bd186a0   576  movk x1, #0xe2, lsl #16
0xffff8bd186a4   580  ldr x16, pc+92 (addr 0x0000ffff8bd18700)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd186a8   584  blr x16
0xffff8bd186ac   588  str x0, [jssp, #80]
0xffff8bd186b0   592  ldr x16, pc+88 (addr 0x0000ffff8bd18708)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd186b4   596  blr x16
0xffff8bd186b8   600  ldr lr, [jssp, #16]
0xffff8bd186bc   604  ldp xzr, fp, [jssp], #24
0xffff8bd186c0   608  b #-0x1bc (addr 0xffff8bd18504)
0xffff8bd186c4   612  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff8bd186c8   616  d63f03e0       constant
0xffff8bd186cc   620  d503201f       constant
0xffff8bd186d0   624  5f504259       constant
0xffff8bd186d4   628  00000000       constant
0xffff8bd186d8   632  5f504259       constant
0xffff8bd186dc   636  00000000       constant
0xffff8bd186e0   640  26c04519       constant
0xffff8bd186e4   644  00000000       constant
0xffff8bd186e8   648  8bd170c0       constant
0xffff8bd186ec   652  0000ffff       constant
0xffff8bd186f0   656  8bd17e80       constant
0xffff8bd186f4   660  0000ffff       constant
0xffff8bd186f8   664  8bd06820       constant
0xffff8bd186fc   668  0000ffff       constant
0xffff8bd18700   672  8bd06260       constant
0xffff8bd18704   676  0000ffff       constant
0xffff8bd18708   680  8bd068e0       constant
0xffff8bd1870c   684  0000ffff       constant
0xffff8bd18710   688  movz x16, #0x0
0xffff8bd18714   692  sub csp, jssp, #0x10 (16)
0xffff8bd18718   696  stp fp, lr, [jssp, #-16]!
0xffff8bd1871c   700  bl #+0x64 (addr 0xffff8bd18780)
0xffff8bd18720   704  movz x16, #0x8
0xffff8bd18724   708  sub csp, jssp, #0x10 (16)
0xffff8bd18728   712  stp fp, lr, [jssp, #-16]!
0xffff8bd1872c   716  bl #+0x54 (addr 0xffff8bd18780)
0xffff8bd18730   720  movz x16, #0x10
0xffff8bd18734   724  sub csp, jssp, #0x10 (16)
0xffff8bd18738   728  stp fp, lr, [jssp, #-16]!
0xffff8bd1873c   732  bl #+0x44 (addr 0xffff8bd18780)
0xffff8bd18740   736  movz x16, #0x18
0xffff8bd18744   740  sub csp, jssp, #0x10 (16)
0xffff8bd18748   744  stp fp, lr, [jssp, #-16]!
0xffff8bd1874c   748  bl #+0x34 (addr 0xffff8bd18780)
0xffff8bd18750   752  movz x16, #0x20
0xffff8bd18754   756  sub csp, jssp, #0x10 (16)
0xffff8bd18758   760  stp fp, lr, [jssp, #-16]!
0xffff8bd1875c   764  bl #+0x24 (addr 0xffff8bd18780)
0xffff8bd18760   768  movz x16, #0x28
0xffff8bd18764   772  sub csp, jssp, #0x10 (16)
0xffff8bd18768   776  stp fp, lr, [jssp, #-16]!
0xffff8bd1876c   780  bl #+0x14 (addr 0xffff8bd18780)
0xffff8bd18770   784  movz x16, #0x30
0xffff8bd18774   788  bl #+0x1c (addr 0xffff8bd18790)
0xffff8bd18778   792  movz x16, #0x38
0xffff8bd1877c   796  bl #+0x14 (addr 0xffff8bd18790)
0xffff8bd18780   800  movz x17, #0xa00000000
0xffff8bd18784   804  sub csp, jssp, #0x10 (16)
0xffff8bd18788   808  stp x17, cp, [jssp, #-16]!
0xffff8bd1878c   812  add fp, jssp, #0x10 (16)
0xffff8bd18790   816  ldr x17, pc+24 (addr 0x0000ffff8bd187a8)    ;; lazy deoptimization bailout 0
0xffff8bd18794   820  add x17, x17, x16
0xffff8bd18798   824  br x17
0xffff8bd1879c   828  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd187a0   832  d63f03e0       constant
0xffff8bd187a4   836  d503201f       constant
0xffff8bd187a8   840  8bb06000       constant
0xffff8bd187ac   844  0000ffff       constant


Safepoints (size = 21)
0xffff8bd186ac   588  000 | x0 | x1 | x5 | x10 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 32)
0xffff8bd18468  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18504  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18520  embedded object  (0x26c04519 <the hole>)
0xffff8bd18570  code target (STUB)  (0xffff8bd170c0)
0xffff8bd18624  code target (STUB)  (0xffff8bd17e80)
0xffff8bd18680  code target (STUB)  (0xffff8bd06820)
0xffff8bd186a4  code target (STUB)  (0xffff8bd06260)
0xffff8bd186b0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd186c4  constant pool (size 76)
0xffff8bd18790  runtime entry
0xffff8bd1879c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 869)
0xffff8bd18460     0  ldur x5, [x1, #15]
0xffff8bd18464     4  ldur x6, [x5, #-1]
0xffff8bd18468     8  ldr x16, pc+616 (addr 0x0000ffff8bd186d0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd1846c    12  cmp x6, x16
0xffff8bd18470    16  b.ne #+0x2a0 (addr 0xffff8bd18710)
0xffff8bd18474    20  ldur w6, [x1, #27]
0xffff8bd18478    24  mov x7, x0
0xffff8bd1847c    28  tbnz w7, #0, #+0x2a4 (addr 0xffff8bd18720)
0xffff8bd18480    32  tbnz w2, #0, #+0x118 (addr 0xffff8bd18598)
0xffff8bd18484    36  asr x9, x2, #32
0xffff8bd18488    40  cmp w6, w9
0xffff8bd1848c    44  b.le #+0x10 (addr 0xffff8bd1849c)
0xffff8bd18490    48  cmp w9, w6
0xffff8bd18494    52  b.hs #+0x29c (addr 0xffff8bd18730)
0xffff8bd18498    56  b #+0xf4 (addr 0xffff8bd1858c)
0xffff8bd1849c    60  ldur w8, [x5, #11]
0xffff8bd184a0    64  cmp w8, w9
0xffff8bd184a4    68  b.gt #+0xdc (addr 0xffff8bd18580)
0xffff8bd184a8    72  adds w8, w8, #0x400 (1024)
0xffff8bd184ac    76  b.vs #+0x294 (addr 0xffff8bd18740)
0xffff8bd184b0    80  cmp w9, w8
0xffff8bd184b4    84  b.hs #+0x29c (addr 0xffff8bd18750)
0xffff8bd184b8    88  tbnz w2, #0, #+0x128 (addr 0xffff8bd185e0)
0xffff8bd184bc    92  asr x10, x2, #32
0xffff8bd184c0    96  add w8, w9, w10, lsr #1
0xffff8bd184c4   100  add w8, w8, #0x10 (16)
0xffff8bd184c8   104  movz w16, #0x95ff
0xffff8bd184cc   108  cmp w8, w16, lsl #1
0xffff8bd184d0   112  b.hs #+0x290 (addr 0xffff8bd18760)
0xffff8bd184d4   116  lsl x2, x8, #32
0xffff8bd184d8   120  lsl w3, w8, #3
0xffff8bd184dc   124  add w3, w3, #0x10 (16)
0xffff8bd184e0   128  sxtw x3, w3
0xffff8bd184e4   132  movz x4, #0xe2c0
0xffff8bd184e8   136  movk x4, #0x2cb8, lsl #16
0xffff8bd184ec   140  ldp x10, x16, [x4]
0xffff8bd184f0   144  adds x8, x10, x3
0xffff8bd184f4   148  ccmp x8, x16, #nzCv, lo
0xffff8bd184f8   152  b.hi #+0x168 (addr 0xffff8bd18660)
0xffff8bd184fc   156  str x8, [x4]
0xffff8bd18500   160  orr x10, x10, #0x1
0xffff8bd18504   164  ldr x3, pc+468 (addr 0x0000ffff8bd186d8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd18508   168  stur x3, [x10, #-1]
0xffff8bd1850c   172  stur x2, [x10, #7]
0xffff8bd18510   176  ldur w2, [x10, #11]
0xffff8bd18514   180  cmp w6, w2
0xffff8bd18518   184  b.ge #+0x18 (addr 0xffff8bd18530)
0xffff8bd1851c   188  sub w2, w2, #0x1 (1)
0xffff8bd18520   192  ldr x3, pc+448 (addr 0x0000ffff8bd186e0)    ;; object: 0x26c04519 <the hole>
0xffff8bd18524   196  add x4, x10, #0xf (15)
0xffff8bd18528   200  str x3, [x4, w2, sxtw #3]
0xffff8bd1852c   204  b #-0x18 (addr 0xffff8bd18514)
0xffff8bd18530   208  cmp w6, #0x0 (0)
0xffff8bd18534   212  b.le #+0x1c (addr 0xffff8bd18550)
0xffff8bd18538   216  sub w6, w6, #0x1 (1)
0xffff8bd1853c   220  add x2, x5, #0xf (15)
0xffff8bd18540   224  ldr x3, [x2, w6, sxtw #3]
0xffff8bd18544   228  add x2, x10, #0xf (15)
0xffff8bd18548   232  str x3, [x2, w6, sxtw #3]
0xffff8bd1854c   236  b #-0x1c (addr 0xffff8bd18530)
0xffff8bd18550   240  mov x2, x10
0xffff8bd18554   244  stur x2, [x1, #15]
0xffff8bd18558   248  add x3, x1, #0xf (15)
0xffff8bd1855c   252  and x2, x1, #0xfffffffffff00000
0xffff8bd18560   256  ldr x2, [x2, #8]
0xffff8bd18564   260  tbz w2, #2, #+0x18 (addr 0xffff8bd1857c)
0xffff8bd18568   264  sub csp, jssp, #0x8 (8)
0xffff8bd1856c   268  str lr, [jssp, #-8]!
0xffff8bd18570   272  ldr x16, pc+376 (addr 0x0000ffff8bd186e8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd18574   276  blr x16
0xffff8bd18578   280  ldr lr, [jssp], #8
0xffff8bd1857c   284  mov x5, x10
0xffff8bd18580   288  add w2, w9, #0x1 (1)
0xffff8bd18584   292  lsl x2, x2, #32
0xffff8bd18588   296  stur x2, [x1, #23]
0xffff8bd1858c   300  add x1, x5, #0xf (15)
0xffff8bd18590   304  str x7, [x1, w9, sxtw #3]
0xffff8bd18594   308  ret
0xffff8bd18598   312  sub csp, jssp, #0x10 (16)
0xffff8bd1859c   316  stp fp, lr, [jssp, #-16]!
0xffff8bd185a0   320  movz fp, #0xa00000000
0xffff8bd185a4   324  sub csp, jssp, #0x8 (8)
0xffff8bd185a8   328  str fp, [jssp, #-8]!
0xffff8bd185ac   332  add fp, jssp, #0x8 (8)
0xffff8bd185b0   336  ldur x16, [x2, #-1]
0xffff8bd185b4   340  ldr x17, [x26, #120]
0xffff8bd185b8   344  cmp x16, x17
0xffff8bd185bc   348  b.ne #+0x1b4 (addr 0xffff8bd18770)
0xffff8bd185c0   352  ldur d29, [x2, #7]
0xffff8bd185c4   356  fcvtzs w9, d29
0xffff8bd185c8   360  scvtf d0, w9
0xffff8bd185cc   364  fcmp d29, d0
0xffff8bd185d0   368  b.ne #+0x1a0 (addr 0xffff8bd18770)
0xffff8bd185d4   372  ldr lr, [jssp, #16]
0xffff8bd185d8   376  ldp xzr, fp, [jssp], #24
0xffff8bd185dc   380  b #-0x154 (addr 0xffff8bd18488)
0xffff8bd185e0   384  sub csp, jssp, #0x10 (16)
0xffff8bd185e4   388  stp fp, lr, [jssp, #-16]!
0xffff8bd185e8   392  movz fp, #0xa00000000
0xffff8bd185ec   396  sub csp, jssp, #0x8 (8)
0xffff8bd185f0   400  str fp, [jssp, #-8]!
0xffff8bd185f4   404  add fp, jssp, #0x8 (8)
0xffff8bd185f8   408  ldur x16, [x2, #-1]
0xffff8bd185fc   412  ldr x17, [x26, #120]
0xffff8bd18600   416  cmp x16, x17
0xffff8bd18604   420  b.ne #+0x30 (addr 0xffff8bd18634)
0xffff8bd18608   424  ldur d30, [x2, #7]
0xffff8bd1860c   428  fcvtzs x10, d30
0xffff8bd18610   432  cmp x10, #0x1 (1)
0xffff8bd18614   436  ccmn x10, #1, #nzcV, vc
0xffff8bd18618   440  b.vc #+0x18 (addr 0xffff8bd18630)
0xffff8bd1861c   444  sub csp, jssp, #0x8 (8)
0xffff8bd18620   448  str lr, [jssp, #-8]!
0xffff8bd18624   452  ldr x16, pc+204 (addr 0x0000ffff8bd186f0)    ;; code: STUB, DoubleToIStub, minor: 127618
0xffff8bd18628   456  blr x16
0xffff8bd1862c   460  ldr lr, [jssp], #8
0xffff8bd18630   464  b #+0x24 (addr 0xffff8bd18654)
0xffff8bd18634   468  ldp x10, x8, [x26, #64]
0xffff8bd18638   472  cmp x2, x10
0xffff8bd1863c   476  cset x10, eq
0xffff8bd18640   480  ccmp x2, x8, #nZcv, ne
0xffff8bd18644   484  b.eq #+0x10 (addr 0xffff8bd18654)
0xffff8bd18648   488  ldr x16, [x26, #40]
0xffff8bd1864c   492  cmp x2, x16
0xffff8bd18650   496  b.ne #+0x128 (addr 0xffff8bd18778)
0xffff8bd18654   500  ldr lr, [jssp, #16]
0xffff8bd18658   504  ldp xzr, fp, [jssp], #24
0xffff8bd1865c   508  b #-0x19c (addr 0xffff8bd184c0)
0xffff8bd18660   512  sub csp, jssp, #0x10 (16)
0xffff8bd18664   516  stp fp, lr, [jssp, #-16]!
0xffff8bd18668   520  movz fp, #0xa00000000
0xffff8bd1866c   524  sub csp, jssp, #0x8 (8)
0xffff8bd18670   528  str fp, [jssp, #-8]!
0xffff8bd18674   532  add fp, jssp, #0x8 (8)
0xffff8bd18678   536  movz x10, #0x0
0xffff8bd1867c   540  mov x16, lr
0xffff8bd18680   544  ldr x17, pc+120 (addr 0x0000ffff8bd186f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd18684   548  blr x17
0xffff8bd18688   552  lsl x0, x3, #32
0xffff8bd1868c   556  movz x10, #0x0
0xffff8bd18690   560  sub csp, jssp, #0x10 (16)
0xffff8bd18694   564  stp x10, x0, [jssp, #-16]!
0xffff8bd18698   568  movz x0, #0x2
0xffff8bd1869c   572  movz x1, #0x5b88
0xffff8bd186a0   576  movk x1, #0xe2, lsl #16
0xffff8bd186a4   580  ldr x16, pc+92 (addr 0x0000ffff8bd18700)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd186a8   584  blr x16
0xffff8bd186ac   588  str x0, [jssp, #80]
0xffff8bd186b0   592  ldr x16, pc+88 (addr 0x0000ffff8bd18708)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd186b4   596  blr x16
0xffff8bd186b8   600  ldr lr, [jssp, #16]
0xffff8bd186bc   604  ldp xzr, fp, [jssp], #24
0xffff8bd186c0   608  b #-0x1bc (addr 0xffff8bd18504)
0xffff8bd186c4   612  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff8bd186c8   616  d63f03e0       constant
0xffff8bd186cc   620  d503201f       constant
0xffff8bd186d0   624  5f504259       constant
0xffff8bd186d4   628  00000000       constant
0xffff8bd186d8   632  5f504259       constant
0xffff8bd186dc   636  00000000       constant
0xffff8bd186e0   640  26c04519       constant
0xffff8bd186e4   644  00000000       constant
0xffff8bd186e8   648  8bd170c0       constant
0xffff8bd186ec   652  0000ffff       constant
0xffff8bd186f0   656  8bd17e80       constant
0xffff8bd186f4   660  0000ffff       constant
0xffff8bd186f8   664  8bd06820       constant
0xffff8bd186fc   668  0000ffff       constant
0xffff8bd18700   672  8bd06260       constant
0xffff8bd18704   676  0000ffff       constant
0xffff8bd18708   680  8bd068e0       constant
0xffff8bd1870c   684  0000ffff       constant
0xffff8bd18710   688  movz x16, #0x0
0xffff8bd18714   692  sub csp, jssp, #0x10 (16)
0xffff8bd18718   696  stp fp, lr, [jssp, #-16]!
0xffff8bd1871c   700  bl #+0x64 (addr 0xffff8bd18780)
0xffff8bd18720   704  movz x16, #0x8
0xffff8bd18724   708  sub csp, jssp, #0x10 (16)
0xffff8bd18728   712  stp fp, lr, [jssp, #-16]!
0xffff8bd1872c   716  bl #+0x54 (addr 0xffff8bd18780)
0xffff8bd18730   720  movz x16, #0x10
0xffff8bd18734   724  sub csp, jssp, #0x10 (16)
0xffff8bd18738   728  stp fp, lr, [jssp, #-16]!
0xffff8bd1873c   732  bl #+0x44 (addr 0xffff8bd18780)
0xffff8bd18740   736  movz x16, #0x18
0xffff8bd18744   740  sub csp, jssp, #0x10 (16)
0xffff8bd18748   744  stp fp, lr, [jssp, #-16]!
0xffff8bd1874c   748  bl #+0x34 (addr 0xffff8bd18780)
0xffff8bd18750   752  movz x16, #0x20
0xffff8bd18754   756  sub csp, jssp, #0x10 (16)
0xffff8bd18758   760  stp fp, lr, [jssp, #-16]!
0xffff8bd1875c   764  bl #+0x24 (addr 0xffff8bd18780)
0xffff8bd18760   768  movz x16, #0x28
0xffff8bd18764   772  sub csp, jssp, #0x10 (16)
0xffff8bd18768   776  stp fp, lr, [jssp, #-16]!
0xffff8bd1876c   780  bl #+0x14 (addr 0xffff8bd18780)
0xffff8bd18770   784  movz x16, #0x30
0xffff8bd18774   788  bl #+0x1c (addr 0xffff8bd18790)
0xffff8bd18778   792  movz x16, #0x38
0xffff8bd1877c   796  bl #+0x14 (addr 0xffff8bd18790)
0xffff8bd18780   800  movz x17, #0xa00000000
0xffff8bd18784   804  sub csp, jssp, #0x10 (16)
0xffff8bd18788   808  stp x17, cp, [jssp, #-16]!
0xffff8bd1878c   812  add fp, jssp, #0x10 (16)
0xffff8bd18790   816  ldr x17, pc+24 (addr 0x0000ffff8bd187a8)    ;; lazy deoptimization bailout 0
0xffff8bd18794   820  add x17, x17, x16
0xffff8bd18798   824  br x17
0xffff8bd1879c   828  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd187a0   832  d63f03e0       constant
0xffff8bd187a4   836  d503201f       constant
0xffff8bd187a8   840  8bb06000       constant
0xffff8bd187ac   844  0000ffff       constant


Safepoints (size = 21)
0xffff8bd186ac   588  000 | x0 | x1 | x5 | x10 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 32)
0xffff8bd18468  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18504  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18520  embedded object  (0x26c04519 <the hole>)
0xffff8bd18570  code target (STUB)  (0xffff8bd170c0)
0xffff8bd18624  code target (STUB)  (0xffff8bd17e80)
0xffff8bd18680  code target (STUB)  (0xffff8bd06820)
0xffff8bd186a4  code target (STUB)  (0xffff8bd06260)
0xffff8bd186b0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd186c4  constant pool (size 76)
0xffff8bd18790  runtime entry
0xffff8bd1879c  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff8bd18840     0  ldur x5, [x1, #15]
0xffff8bd18844     4  ldur x6, [x5, #-1]
0xffff8bd18848     8  ldr x16, pc+152 (addr 0x0000ffff8bd188e0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd1884c    12  cmp x6, x16
0xffff8bd18850    16  b.ne #+0xa0 (addr 0xffff8bd188f0)
0xffff8bd18854    20  ldur w6, [x1, #27]
0xffff8bd18858    24  tbnz w2, #0, #+0x54 (addr 0xffff8bd188ac)
0xffff8bd1885c    28  asr x8, x2, #32
0xffff8bd18860    32  cmp w8, w6
0xffff8bd18864    36  b.hs #+0x9c (addr 0xffff8bd18900)
0xffff8bd18868    40  mov x1, x0
0xffff8bd1886c    44  add x2, x5, #0xf (15)
0xffff8bd18870    48  str x1, [x2, w8, sxtw #3]
0xffff8bd18874    52  add x2, x2, w8, sxtw #3
0xffff8bd18878    56  tbz w1, #0, #+0x30 (addr 0xffff8bd188a8)
0xffff8bd1887c    60  and x1, x1, #0xfffffffffff00000
0xffff8bd18880    64  ldr x1, [x1, #8]
0xffff8bd18884    68  tbz w1, #1, #+0x24 (addr 0xffff8bd188a8)
0xffff8bd18888    72  and x1, x5, #0xfffffffffff00000
0xffff8bd1888c    76  ldr x1, [x1, #8]
0xffff8bd18890    80  tbz w1, #2, #+0x18 (addr 0xffff8bd188a8)
0xffff8bd18894    84  sub csp, jssp, #0x8 (8)
0xffff8bd18898    88  str lr, [jssp, #-8]!
0xffff8bd1889c    92  ldr x16, pc+76 (addr 0x0000ffff8bd188e8)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff8bd188a0    96  blr x16
0xffff8bd188a4   100  ldr lr, [jssp], #8
0xffff8bd188a8   104  ret
0xffff8bd188ac   108  ldur x16, [x2, #-1]
0xffff8bd188b0   112  ldr x17, [x26, #120]
0xffff8bd188b4   116  cmp x16, x17
0xffff8bd188b8   120  b.ne #+0x58 (addr 0xffff8bd18910)
0xffff8bd188bc   124  ldur d29, [x2, #7]
0xffff8bd188c0   128  fcvtzs w8, d29
0xffff8bd188c4   132  scvtf d0, w8
0xffff8bd188c8   136  fcmp d29, d0
0xffff8bd188cc   140  b.ne #+0x44 (addr 0xffff8bd18910)
0xffff8bd188d0   144  b #-0x70 (addr 0xffff8bd18860)
0xffff8bd188d4   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd188d8   152  d63f03e0       constant
0xffff8bd188dc   156  d503201f       constant
0xffff8bd188e0   160  5f504259       constant
0xffff8bd188e4   164  00000000       constant
0xffff8bd188e8   168  8bd16760       constant
0xffff8bd188ec   172  0000ffff       constant
0xffff8bd188f0   176  movz x16, #0x0
0xffff8bd188f4   180  sub csp, jssp, #0x10 (16)
0xffff8bd188f8   184  stp fp, lr, [jssp, #-16]!
0xffff8bd188fc   188  bl #+0x24 (addr 0xffff8bd18920)
0xffff8bd18900   192  movz x16, #0x8
0xffff8bd18904   196  sub csp, jssp, #0x10 (16)
0xffff8bd18908   200  stp fp, lr, [jssp, #-16]!
0xffff8bd1890c   204  bl #+0x14 (addr 0xffff8bd18920)
0xffff8bd18910   208  movz x16, #0x10
0xffff8bd18914   212  sub csp, jssp, #0x10 (16)
0xffff8bd18918   216  stp fp, lr, [jssp, #-16]!
0xffff8bd1891c   220  bl #+0x4 (addr 0xffff8bd18920)
0xffff8bd18920   224  movz x17, #0xa00000000
0xffff8bd18924   228  sub csp, jssp, #0x10 (16)
0xffff8bd18928   232  stp x17, cp, [jssp, #-16]!
0xffff8bd1892c   236  add fp, jssp, #0x10 (16)
0xffff8bd18930   240  ldr x17, pc+24 (addr 0x0000ffff8bd18948)    ;; lazy deoptimization bailout 0
0xffff8bd18934   244  add x17, x17, x16
0xffff8bd18938   248  br x17
0xffff8bd1893c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd18940   256  d63f03e0       constant
0xffff8bd18944   260  d503201f       constant
0xffff8bd18948   264  8bb06000       constant
0xffff8bd1894c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff8bd18848  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd1889c  code target (STUB)  (0xffff8bd16760)
0xffff8bd188d4  constant pool (size 28)
0xffff8bd18930  runtime entry
0xffff8bd1893c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff8bd18840     0  ldur x5, [x1, #15]
0xffff8bd18844     4  ldur x6, [x5, #-1]
0xffff8bd18848     8  ldr x16, pc+152 (addr 0x0000ffff8bd188e0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd1884c    12  cmp x6, x16
0xffff8bd18850    16  b.ne #+0xa0 (addr 0xffff8bd188f0)
0xffff8bd18854    20  ldur w6, [x1, #27]
0xffff8bd18858    24  tbnz w2, #0, #+0x54 (addr 0xffff8bd188ac)
0xffff8bd1885c    28  asr x8, x2, #32
0xffff8bd18860    32  cmp w8, w6
0xffff8bd18864    36  b.hs #+0x9c (addr 0xffff8bd18900)
0xffff8bd18868    40  mov x1, x0
0xffff8bd1886c    44  add x2, x5, #0xf (15)
0xffff8bd18870    48  str x1, [x2, w8, sxtw #3]
0xffff8bd18874    52  add x2, x2, w8, sxtw #3
0xffff8bd18878    56  tbz w1, #0, #+0x30 (addr 0xffff8bd188a8)
0xffff8bd1887c    60  and x1, x1, #0xfffffffffff00000
0xffff8bd18880    64  ldr x1, [x1, #8]
0xffff8bd18884    68  tbz w1, #1, #+0x24 (addr 0xffff8bd188a8)
0xffff8bd18888    72  and x1, x5, #0xfffffffffff00000
0xffff8bd1888c    76  ldr x1, [x1, #8]
0xffff8bd18890    80  tbz w1, #2, #+0x18 (addr 0xffff8bd188a8)
0xffff8bd18894    84  sub csp, jssp, #0x8 (8)
0xffff8bd18898    88  str lr, [jssp, #-8]!
0xffff8bd1889c    92  ldr x16, pc+76 (addr 0x0000ffff8bd188e8)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff8bd188a0    96  blr x16
0xffff8bd188a4   100  ldr lr, [jssp], #8
0xffff8bd188a8   104  ret
0xffff8bd188ac   108  ldur x16, [x2, #-1]
0xffff8bd188b0   112  ldr x17, [x26, #120]
0xffff8bd188b4   116  cmp x16, x17
0xffff8bd188b8   120  b.ne #+0x58 (addr 0xffff8bd18910)
0xffff8bd188bc   124  ldur d29, [x2, #7]
0xffff8bd188c0   128  fcvtzs w8, d29
0xffff8bd188c4   132  scvtf d0, w8
0xffff8bd188c8   136  fcmp d29, d0
0xffff8bd188cc   140  b.ne #+0x44 (addr 0xffff8bd18910)
0xffff8bd188d0   144  b #-0x70 (addr 0xffff8bd18860)
0xffff8bd188d4   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd188d8   152  d63f03e0       constant
0xffff8bd188dc   156  d503201f       constant
0xffff8bd188e0   160  5f504259       constant
0xffff8bd188e4   164  00000000       constant
0xffff8bd188e8   168  8bd16760       constant
0xffff8bd188ec   172  0000ffff       constant
0xffff8bd188f0   176  movz x16, #0x0
0xffff8bd188f4   180  sub csp, jssp, #0x10 (16)
0xffff8bd188f8   184  stp fp, lr, [jssp, #-16]!
0xffff8bd188fc   188  bl #+0x24 (addr 0xffff8bd18920)
0xffff8bd18900   192  movz x16, #0x8
0xffff8bd18904   196  sub csp, jssp, #0x10 (16)
0xffff8bd18908   200  stp fp, lr, [jssp, #-16]!
0xffff8bd1890c   204  bl #+0x14 (addr 0xffff8bd18920)
0xffff8bd18910   208  movz x16, #0x10
0xffff8bd18914   212  sub csp, jssp, #0x10 (16)
0xffff8bd18918   216  stp fp, lr, [jssp, #-16]!
0xffff8bd1891c   220  bl #+0x4 (addr 0xffff8bd18920)
0xffff8bd18920   224  movz x17, #0xa00000000
0xffff8bd18924   228  sub csp, jssp, #0x10 (16)
0xffff8bd18928   232  stp x17, cp, [jssp, #-16]!
0xffff8bd1892c   236  add fp, jssp, #0x10 (16)
0xffff8bd18930   240  ldr x17, pc+24 (addr 0x0000ffff8bd18948)    ;; lazy deoptimization bailout 0
0xffff8bd18934   244  add x17, x17, x16
0xffff8bd18938   248  br x17
0xffff8bd1893c   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd18940   256  d63f03e0       constant
0xffff8bd18944   260  d503201f       constant
0xffff8bd18948   264  8bb06000       constant
0xffff8bd1894c   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff8bd18848  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd1889c  code target (STUB)  (0xffff8bd16760)
0xffff8bd188d4  constant pool (size 28)
0xffff8bd18930  runtime entry
0xffff8bd1893c  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 909)
0xffff8bd189c0     0  ldur x5, [x1, #15]
0xffff8bd189c4     4  ldur x6, [x5, #-1]
0xffff8bd189c8     8  ldr x16, pc+664 (addr 0x0000ffff8bd18c60)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd189cc    12  cmp x6, x16
0xffff8bd189d0    16  b.ne #+0x2d8 (addr 0xffff8bd18ca8)
0xffff8bd189d4    20  ldur w6, [x1, #27]
0xffff8bd189d8    24  tbnz w2, #0, #+0x150 (addr 0xffff8bd18b28)
0xffff8bd189dc    28  asr x8, x2, #32
0xffff8bd189e0    32  cmp w6, w8
0xffff8bd189e4    36  b.eq #+0x10 (addr 0xffff8bd189f4)
0xffff8bd189e8    40  cmp w8, w6
0xffff8bd189ec    44  b.hs #+0x2cc (addr 0xffff8bd18cb8)
0xffff8bd189f0    48  b #+0xf4 (addr 0xffff8bd18ae4)
0xffff8bd189f4    52  ldur w7, [x5, #11]
0xffff8bd189f8    56  cmp w7, w8
0xffff8bd189fc    60  b.gt #+0xdc (addr 0xffff8bd18ad8)
0xffff8bd18a00    64  adds w7, w7, #0x400 (1024)
0xffff8bd18a04    68  b.vs #+0x2c4 (addr 0xffff8bd18cc8)
0xffff8bd18a08    72  cmp w8, w7
0xffff8bd18a0c    76  b.hs #+0x2cc (addr 0xffff8bd18cd8)
0xffff8bd18a10    80  tbnz w2, #0, #+0x160 (addr 0xffff8bd18b70)
0xffff8bd18a14    84  asr x9, x2, #32
0xffff8bd18a18    88  add w7, w8, w9, lsr #1
0xffff8bd18a1c    92  add w7, w7, #0x10 (16)
0xffff8bd18a20    96  movz w16, #0x95ff
0xffff8bd18a24   100  cmp w7, w16, lsl #1
0xffff8bd18a28   104  b.hs #+0x2c0 (addr 0xffff8bd18ce8)
0xffff8bd18a2c   108  lsl x2, x7, #32
0xffff8bd18a30   112  lsl w3, w7, #3
0xffff8bd18a34   116  add w3, w3, #0x10 (16)
0xffff8bd18a38   120  sxtw x3, w3
0xffff8bd18a3c   124  movz x4, #0xe2c0
0xffff8bd18a40   128  movk x4, #0x2cb8, lsl #16
0xffff8bd18a44   132  ldp x9, x16, [x4]
0xffff8bd18a48   136  adds x7, x9, x3
0xffff8bd18a4c   140  ccmp x7, x16, #nzCv, lo
0xffff8bd18a50   144  b.hi #+0x1a0 (addr 0xffff8bd18bf0)
0xffff8bd18a54   148  str x7, [x4]
0xffff8bd18a58   152  orr x9, x9, #0x1
0xffff8bd18a5c   156  ldr x3, pc+524 (addr 0x0000ffff8bd18c68)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd18a60   160  stur x3, [x9, #-1]
0xffff8bd18a64   164  stur x2, [x9, #7]
0xffff8bd18a68   168  ldur w2, [x9, #11]
0xffff8bd18a6c   172  cmp w6, w2
0xffff8bd18a70   176  b.ge #+0x18 (addr 0xffff8bd18a88)
0xffff8bd18a74   180  sub w2, w2, #0x1 (1)
0xffff8bd18a78   184  ldr x3, pc+504 (addr 0x0000ffff8bd18c70)    ;; object: 0x26c04519 <the hole>
0xffff8bd18a7c   188  add x4, x9, #0xf (15)
0xffff8bd18a80   192  str x3, [x4, w2, sxtw #3]
0xffff8bd18a84   196  b #-0x18 (addr 0xffff8bd18a6c)
0xffff8bd18a88   200  cmp w6, #0x0 (0)
0xffff8bd18a8c   204  b.le #+0x1c (addr 0xffff8bd18aa8)
0xffff8bd18a90   208  sub w6, w6, #0x1 (1)
0xffff8bd18a94   212  add x2, x5, #0xf (15)
0xffff8bd18a98   216  ldr x3, [x2, w6, sxtw #3]
0xffff8bd18a9c   220  add x2, x9, #0xf (15)
0xffff8bd18aa0   224  str x3, [x2, w6, sxtw #3]
0xffff8bd18aa4   228  b #-0x1c (addr 0xffff8bd18a88)
0xffff8bd18aa8   232  mov x2, x9
0xffff8bd18aac   236  stur x2, [x1, #15]
0xffff8bd18ab0   240  add x3, x1, #0xf (15)
0xffff8bd18ab4   244  and x2, x1, #0xfffffffffff00000
0xffff8bd18ab8   248  ldr x2, [x2, #8]
0xffff8bd18abc   252  tbz w2, #2, #+0x18 (addr 0xffff8bd18ad4)
0xffff8bd18ac0   256  sub csp, jssp, #0x8 (8)
0xffff8bd18ac4   260  str lr, [jssp, #-8]!
0xffff8bd18ac8   264  ldr x16, pc+432 (addr 0x0000ffff8bd18c78)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd18acc   268  blr x16
0xffff8bd18ad0   272  ldr lr, [jssp], #8
0xffff8bd18ad4   276  mov x5, x9
0xffff8bd18ad8   280  add w2, w8, #0x1 (1)
0xffff8bd18adc   284  lsl x2, x2, #32
0xffff8bd18ae0   288  stur x2, [x1, #23]
0xffff8bd18ae4   292  mov x1, x0
0xffff8bd18ae8   296  add x2, x5, #0xf (15)
0xffff8bd18aec   300  str x1, [x2, w8, sxtw #3]
0xffff8bd18af0   304  add x2, x2, w8, sxtw #3
0xffff8bd18af4   308  tbz w1, #0, #+0x30 (addr 0xffff8bd18b24)
0xffff8bd18af8   312  and x1, x1, #0xfffffffffff00000
0xffff8bd18afc   316  ldr x1, [x1, #8]
0xffff8bd18b00   320  tbz w1, #1, #+0x24 (addr 0xffff8bd18b24)
0xffff8bd18b04   324  and x1, x5, #0xfffffffffff00000
0xffff8bd18b08   328  ldr x1, [x1, #8]
0xffff8bd18b0c   332  tbz w1, #2, #+0x18 (addr 0xffff8bd18b24)
0xffff8bd18b10   336  sub csp, jssp, #0x8 (8)
0xffff8bd18b14   340  str lr, [jssp, #-8]!
0xffff8bd18b18   344  ldr x16, pc+360 (addr 0x0000ffff8bd18c80)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff8bd18b1c   348  blr x16
0xffff8bd18b20   352  ldr lr, [jssp], #8
0xffff8bd18b24   356  ret
0xffff8bd18b28   360  sub csp, jssp, #0x10 (16)
0xffff8bd18b2c   364  stp fp, lr, [jssp, #-16]!
0xffff8bd18b30   368  movz fp, #0xa00000000
0xffff8bd18b34   372  sub csp, jssp, #0x8 (8)
0xffff8bd18b38   376  str fp, [jssp, #-8]!
0xffff8bd18b3c   380  add fp, jssp, #0x8 (8)
0xffff8bd18b40   384  ldur x16, [x2, #-1]
0xffff8bd18b44   388  ldr x17, [x26, #120]
0xffff8bd18b48   392  cmp x16, x17
0xffff8bd18b4c   396  b.ne #+0x1ac (addr 0xffff8bd18cf8)
0xffff8bd18b50   400  ldur d29, [x2, #7]
0xffff8bd18b54   404  fcvtzs w8, d29
0xffff8bd18b58   408  scvtf d0, w8
0xffff8bd18b5c   412  fcmp d29, d0
0xffff8bd18b60   416  b.ne #+0x198 (addr 0xffff8bd18cf8)
0xffff8bd18b64   420  ldr lr, [jssp, #16]
0xffff8bd18b68   424  ldp xzr, fp, [jssp], #24
0xffff8bd18b6c   428  b #-0x18c (addr 0xffff8bd189e0)
0xffff8bd18b70   432  sub csp, jssp, #0x10 (16)
0xffff8bd18b74   436  stp fp, lr, [jssp, #-16]!
0xffff8bd18b78   440  movz fp, #0xa00000000
0xffff8bd18b7c   444  sub csp, jssp, #0x8 (8)
0xffff8bd18b80   448  str fp, [jssp, #-8]!
0xffff8bd18b84   452  add fp, jssp, #0x8 (8)
0xffff8bd18b88   456  ldur x16, [x2, #-1]
0xffff8bd18b8c   460  ldr x17, [x26, #120]
0xffff8bd18b90   464  cmp x16, x17
0xffff8bd18b94   468  b.ne #+0x30 (addr 0xffff8bd18bc4)
0xffff8bd18b98   472  ldur d30, [x2, #7]
0xffff8bd18b9c   476  fcvtzs x9, d30
0xffff8bd18ba0   480  cmp x9, #0x1 (1)
0xffff8bd18ba4   484  ccmn x9, #1, #nzcV, vc
0xffff8bd18ba8   488  b.vc #+0x18 (addr 0xffff8bd18bc0)
0xffff8bd18bac   492  sub csp, jssp, #0x8 (8)
0xffff8bd18bb0   496  str lr, [jssp, #-8]!
0xffff8bd18bb4   500  ldr x16, pc+212 (addr 0x0000ffff8bd18c88)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff8bd18bb8   504  blr x16
0xffff8bd18bbc   508  ldr lr, [jssp], #8
0xffff8bd18bc0   512  b #+0x24 (addr 0xffff8bd18be4)
0xffff8bd18bc4   516  ldp x9, x7, [x26, #64]
0xffff8bd18bc8   520  cmp x2, x9
0xffff8bd18bcc   524  cset x9, eq
0xffff8bd18bd0   528  ccmp x2, x7, #nZcv, ne
0xffff8bd18bd4   532  b.eq #+0x10 (addr 0xffff8bd18be4)
0xffff8bd18bd8   536  ldr x16, [x26, #40]
0xffff8bd18bdc   540  cmp x2, x16
0xffff8bd18be0   544  b.ne #+0x120 (addr 0xffff8bd18d00)
0xffff8bd18be4   548  ldr lr, [jssp, #16]
0xffff8bd18be8   552  ldp xzr, fp, [jssp], #24
0xffff8bd18bec   556  b #-0x1d4 (addr 0xffff8bd18a18)
0xffff8bd18bf0   560  sub csp, jssp, #0x10 (16)
0xffff8bd18bf4   564  stp fp, lr, [jssp, #-16]!
0xffff8bd18bf8   568  movz fp, #0xa00000000
0xffff8bd18bfc   572  sub csp, jssp, #0x8 (8)
0xffff8bd18c00   576  str fp, [jssp, #-8]!
0xffff8bd18c04   580  add fp, jssp, #0x8 (8)
0xffff8bd18c08   584  movz x9, #0x0
0xffff8bd18c0c   588  mov x16, lr
0xffff8bd18c10   592  ldr x17, pc+128 (addr 0x0000ffff8bd18c90)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd18c14   596  blr x17
0xffff8bd18c18   600  lsl x0, x3, #32
0xffff8bd18c1c   604  movz x10, #0x0
0xffff8bd18c20   608  sub csp, jssp, #0x10 (16)
0xffff8bd18c24   612  stp x10, x0, [jssp, #-16]!
0xffff8bd18c28   616  movz x0, #0x2
0xffff8bd18c2c   620  movz x1, #0x5b88
0xffff8bd18c30   624  movk x1, #0xe2, lsl #16
0xffff8bd18c34   628  ldr x16, pc+100 (addr 0x0000ffff8bd18c98)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd18c38   632  blr x16
0xffff8bd18c3c   636  str x0, [jssp, #72]
0xffff8bd18c40   640  ldr x16, pc+96 (addr 0x0000ffff8bd18ca0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd18c44   644  blr x16
0xffff8bd18c48   648  ldr lr, [jssp, #16]
0xffff8bd18c4c   652  ldp xzr, fp, [jssp], #24
0xffff8bd18c50   656  b #-0x1f4 (addr 0xffff8bd18a5c)
0xffff8bd18c54   660  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff8bd18c58   664  d63f03e0       constant
0xffff8bd18c5c   668  d503201f       constant
0xffff8bd18c60   672  5f504259       constant
0xffff8bd18c64   676  00000000       constant
0xffff8bd18c68   680  5f504259       constant
0xffff8bd18c6c   684  00000000       constant
0xffff8bd18c70   688  26c04519       constant
0xffff8bd18c74   692  00000000       constant
0xffff8bd18c78   696  8bd170c0       constant
0xffff8bd18c7c   700  0000ffff       constant
0xffff8bd18c80   704  8bd16760       constant
0xffff8bd18c84   708  0000ffff       constant
0xffff8bd18c88   712  8bd178a0       constant
0xffff8bd18c8c   716  0000ffff       constant
0xffff8bd18c90   720  8bd06820       constant
0xffff8bd18c94   724  0000ffff       constant
0xffff8bd18c98   728  8bd06260       constant
0xffff8bd18c9c   732  0000ffff       constant
0xffff8bd18ca0   736  8bd068e0       constant
0xffff8bd18ca4   740  0000ffff       constant
0xffff8bd18ca8   744  movz x16, #0x0
0xffff8bd18cac   748  sub csp, jssp, #0x10 (16)
0xffff8bd18cb0   752  stp fp, lr, [jssp, #-16]!
0xffff8bd18cb4   756  bl #+0x54 (addr 0xffff8bd18d08)
0xffff8bd18cb8   760  movz x16, #0x8
0xffff8bd18cbc   764  sub csp, jssp, #0x10 (16)
0xffff8bd18cc0   768  stp fp, lr, [jssp, #-16]!
0xffff8bd18cc4   772  bl #+0x44 (addr 0xffff8bd18d08)
0xffff8bd18cc8   776  movz x16, #0x10
0xffff8bd18ccc   780  sub csp, jssp, #0x10 (16)
0xffff8bd18cd0   784  stp fp, lr, [jssp, #-16]!
0xffff8bd18cd4   788  bl #+0x34 (addr 0xffff8bd18d08)
0xffff8bd18cd8   792  movz x16, #0x18
0xffff8bd18cdc   796  sub csp, jssp, #0x10 (16)
0xffff8bd18ce0   800  stp fp, lr, [jssp, #-16]!
0xffff8bd18ce4   804  bl #+0x24 (addr 0xffff8bd18d08)
0xffff8bd18ce8   808  movz x16, #0x20
0xffff8bd18cec   812  sub csp, jssp, #0x10 (16)
0xffff8bd18cf0   816  stp fp, lr, [jssp, #-16]!
0xffff8bd18cf4   820  bl #+0x14 (addr 0xffff8bd18d08)
0xffff8bd18cf8   824  movz x16, #0x28
0xffff8bd18cfc   828  bl #+0x1c (addr 0xffff8bd18d18)
0xffff8bd18d00   832  movz x16, #0x30
0xffff8bd18d04   836  bl #+0x14 (addr 0xffff8bd18d18)
0xffff8bd18d08   840  movz x17, #0xa00000000
0xffff8bd18d0c   844  sub csp, jssp, #0x10 (16)
0xffff8bd18d10   848  stp x17, cp, [jssp, #-16]!
0xffff8bd18d14   852  add fp, jssp, #0x10 (16)
0xffff8bd18d18   856  ldr x17, pc+24 (addr 0x0000ffff8bd18d30)    ;; lazy deoptimization bailout 0
0xffff8bd18d1c   860  add x17, x17, x16
0xffff8bd18d20   864  br x17
0xffff8bd18d24   868  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd18d28   872  d63f03e0       constant
0xffff8bd18d2c   876  d503201f       constant
0xffff8bd18d30   880  8bb06000       constant
0xffff8bd18d34   884  0000ffff       constant


Safepoints (size = 21)
0xffff8bd18c3c   636  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff8bd189c8  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18a5c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18a78  embedded object  (0x26c04519 <the hole>)
0xffff8bd18ac8  code target (STUB)  (0xffff8bd170c0)
0xffff8bd18b18  code target (STUB)  (0xffff8bd16760)
0xffff8bd18bb4  code target (STUB)  (0xffff8bd178a0)
0xffff8bd18c10  code target (STUB)  (0xffff8bd06820)
0xffff8bd18c34  code target (STUB)  (0xffff8bd06260)
0xffff8bd18c40  code target (STUB)  (0xffff8bd068e0)
0xffff8bd18c54  constant pool (size 84)
0xffff8bd18d18  runtime entry
0xffff8bd18d24  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 909)
0xffff8bd189c0     0  ldur x5, [x1, #15]
0xffff8bd189c4     4  ldur x6, [x5, #-1]
0xffff8bd189c8     8  ldr x16, pc+664 (addr 0x0000ffff8bd18c60)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd189cc    12  cmp x6, x16
0xffff8bd189d0    16  b.ne #+0x2d8 (addr 0xffff8bd18ca8)
0xffff8bd189d4    20  ldur w6, [x1, #27]
0xffff8bd189d8    24  tbnz w2, #0, #+0x150 (addr 0xffff8bd18b28)
0xffff8bd189dc    28  asr x8, x2, #32
0xffff8bd189e0    32  cmp w6, w8
0xffff8bd189e4    36  b.eq #+0x10 (addr 0xffff8bd189f4)
0xffff8bd189e8    40  cmp w8, w6
0xffff8bd189ec    44  b.hs #+0x2cc (addr 0xffff8bd18cb8)
0xffff8bd189f0    48  b #+0xf4 (addr 0xffff8bd18ae4)
0xffff8bd189f4    52  ldur w7, [x5, #11]
0xffff8bd189f8    56  cmp w7, w8
0xffff8bd189fc    60  b.gt #+0xdc (addr 0xffff8bd18ad8)
0xffff8bd18a00    64  adds w7, w7, #0x400 (1024)
0xffff8bd18a04    68  b.vs #+0x2c4 (addr 0xffff8bd18cc8)
0xffff8bd18a08    72  cmp w8, w7
0xffff8bd18a0c    76  b.hs #+0x2cc (addr 0xffff8bd18cd8)
0xffff8bd18a10    80  tbnz w2, #0, #+0x160 (addr 0xffff8bd18b70)
0xffff8bd18a14    84  asr x9, x2, #32
0xffff8bd18a18    88  add w7, w8, w9, lsr #1
0xffff8bd18a1c    92  add w7, w7, #0x10 (16)
0xffff8bd18a20    96  movz w16, #0x95ff
0xffff8bd18a24   100  cmp w7, w16, lsl #1
0xffff8bd18a28   104  b.hs #+0x2c0 (addr 0xffff8bd18ce8)
0xffff8bd18a2c   108  lsl x2, x7, #32
0xffff8bd18a30   112  lsl w3, w7, #3
0xffff8bd18a34   116  add w3, w3, #0x10 (16)
0xffff8bd18a38   120  sxtw x3, w3
0xffff8bd18a3c   124  movz x4, #0xe2c0
0xffff8bd18a40   128  movk x4, #0x2cb8, lsl #16
0xffff8bd18a44   132  ldp x9, x16, [x4]
0xffff8bd18a48   136  adds x7, x9, x3
0xffff8bd18a4c   140  ccmp x7, x16, #nzCv, lo
0xffff8bd18a50   144  b.hi #+0x1a0 (addr 0xffff8bd18bf0)
0xffff8bd18a54   148  str x7, [x4]
0xffff8bd18a58   152  orr x9, x9, #0x1
0xffff8bd18a5c   156  ldr x3, pc+524 (addr 0x0000ffff8bd18c68)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd18a60   160  stur x3, [x9, #-1]
0xffff8bd18a64   164  stur x2, [x9, #7]
0xffff8bd18a68   168  ldur w2, [x9, #11]
0xffff8bd18a6c   172  cmp w6, w2
0xffff8bd18a70   176  b.ge #+0x18 (addr 0xffff8bd18a88)
0xffff8bd18a74   180  sub w2, w2, #0x1 (1)
0xffff8bd18a78   184  ldr x3, pc+504 (addr 0x0000ffff8bd18c70)    ;; object: 0x26c04519 <the hole>
0xffff8bd18a7c   188  add x4, x9, #0xf (15)
0xffff8bd18a80   192  str x3, [x4, w2, sxtw #3]
0xffff8bd18a84   196  b #-0x18 (addr 0xffff8bd18a6c)
0xffff8bd18a88   200  cmp w6, #0x0 (0)
0xffff8bd18a8c   204  b.le #+0x1c (addr 0xffff8bd18aa8)
0xffff8bd18a90   208  sub w6, w6, #0x1 (1)
0xffff8bd18a94   212  add x2, x5, #0xf (15)
0xffff8bd18a98   216  ldr x3, [x2, w6, sxtw #3]
0xffff8bd18a9c   220  add x2, x9, #0xf (15)
0xffff8bd18aa0   224  str x3, [x2, w6, sxtw #3]
0xffff8bd18aa4   228  b #-0x1c (addr 0xffff8bd18a88)
0xffff8bd18aa8   232  mov x2, x9
0xffff8bd18aac   236  stur x2, [x1, #15]
0xffff8bd18ab0   240  add x3, x1, #0xf (15)
0xffff8bd18ab4   244  and x2, x1, #0xfffffffffff00000
0xffff8bd18ab8   248  ldr x2, [x2, #8]
0xffff8bd18abc   252  tbz w2, #2, #+0x18 (addr 0xffff8bd18ad4)
0xffff8bd18ac0   256  sub csp, jssp, #0x8 (8)
0xffff8bd18ac4   260  str lr, [jssp, #-8]!
0xffff8bd18ac8   264  ldr x16, pc+432 (addr 0x0000ffff8bd18c78)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd18acc   268  blr x16
0xffff8bd18ad0   272  ldr lr, [jssp], #8
0xffff8bd18ad4   276  mov x5, x9
0xffff8bd18ad8   280  add w2, w8, #0x1 (1)
0xffff8bd18adc   284  lsl x2, x2, #32
0xffff8bd18ae0   288  stur x2, [x1, #23]
0xffff8bd18ae4   292  mov x1, x0
0xffff8bd18ae8   296  add x2, x5, #0xf (15)
0xffff8bd18aec   300  str x1, [x2, w8, sxtw #3]
0xffff8bd18af0   304  add x2, x2, w8, sxtw #3
0xffff8bd18af4   308  tbz w1, #0, #+0x30 (addr 0xffff8bd18b24)
0xffff8bd18af8   312  and x1, x1, #0xfffffffffff00000
0xffff8bd18afc   316  ldr x1, [x1, #8]
0xffff8bd18b00   320  tbz w1, #1, #+0x24 (addr 0xffff8bd18b24)
0xffff8bd18b04   324  and x1, x5, #0xfffffffffff00000
0xffff8bd18b08   328  ldr x1, [x1, #8]
0xffff8bd18b0c   332  tbz w1, #2, #+0x18 (addr 0xffff8bd18b24)
0xffff8bd18b10   336  sub csp, jssp, #0x8 (8)
0xffff8bd18b14   340  str lr, [jssp, #-8]!
0xffff8bd18b18   344  ldr x16, pc+360 (addr 0x0000ffff8bd18c80)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff8bd18b1c   348  blr x16
0xffff8bd18b20   352  ldr lr, [jssp], #8
0xffff8bd18b24   356  ret
0xffff8bd18b28   360  sub csp, jssp, #0x10 (16)
0xffff8bd18b2c   364  stp fp, lr, [jssp, #-16]!
0xffff8bd18b30   368  movz fp, #0xa00000000
0xffff8bd18b34   372  sub csp, jssp, #0x8 (8)
0xffff8bd18b38   376  str fp, [jssp, #-8]!
0xffff8bd18b3c   380  add fp, jssp, #0x8 (8)
0xffff8bd18b40   384  ldur x16, [x2, #-1]
0xffff8bd18b44   388  ldr x17, [x26, #120]
0xffff8bd18b48   392  cmp x16, x17
0xffff8bd18b4c   396  b.ne #+0x1ac (addr 0xffff8bd18cf8)
0xffff8bd18b50   400  ldur d29, [x2, #7]
0xffff8bd18b54   404  fcvtzs w8, d29
0xffff8bd18b58   408  scvtf d0, w8
0xffff8bd18b5c   412  fcmp d29, d0
0xffff8bd18b60   416  b.ne #+0x198 (addr 0xffff8bd18cf8)
0xffff8bd18b64   420  ldr lr, [jssp, #16]
0xffff8bd18b68   424  ldp xzr, fp, [jssp], #24
0xffff8bd18b6c   428  b #-0x18c (addr 0xffff8bd189e0)
0xffff8bd18b70   432  sub csp, jssp, #0x10 (16)
0xffff8bd18b74   436  stp fp, lr, [jssp, #-16]!
0xffff8bd18b78   440  movz fp, #0xa00000000
0xffff8bd18b7c   444  sub csp, jssp, #0x8 (8)
0xffff8bd18b80   448  str fp, [jssp, #-8]!
0xffff8bd18b84   452  add fp, jssp, #0x8 (8)
0xffff8bd18b88   456  ldur x16, [x2, #-1]
0xffff8bd18b8c   460  ldr x17, [x26, #120]
0xffff8bd18b90   464  cmp x16, x17
0xffff8bd18b94   468  b.ne #+0x30 (addr 0xffff8bd18bc4)
0xffff8bd18b98   472  ldur d30, [x2, #7]
0xffff8bd18b9c   476  fcvtzs x9, d30
0xffff8bd18ba0   480  cmp x9, #0x1 (1)
0xffff8bd18ba4   484  ccmn x9, #1, #nzcV, vc
0xffff8bd18ba8   488  b.vc #+0x18 (addr 0xffff8bd18bc0)
0xffff8bd18bac   492  sub csp, jssp, #0x8 (8)
0xffff8bd18bb0   496  str lr, [jssp, #-8]!
0xffff8bd18bb4   500  ldr x16, pc+212 (addr 0x0000ffff8bd18c88)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff8bd18bb8   504  blr x16
0xffff8bd18bbc   508  ldr lr, [jssp], #8
0xffff8bd18bc0   512  b #+0x24 (addr 0xffff8bd18be4)
0xffff8bd18bc4   516  ldp x9, x7, [x26, #64]
0xffff8bd18bc8   520  cmp x2, x9
0xffff8bd18bcc   524  cset x9, eq
0xffff8bd18bd0   528  ccmp x2, x7, #nZcv, ne
0xffff8bd18bd4   532  b.eq #+0x10 (addr 0xffff8bd18be4)
0xffff8bd18bd8   536  ldr x16, [x26, #40]
0xffff8bd18bdc   540  cmp x2, x16
0xffff8bd18be0   544  b.ne #+0x120 (addr 0xffff8bd18d00)
0xffff8bd18be4   548  ldr lr, [jssp, #16]
0xffff8bd18be8   552  ldp xzr, fp, [jssp], #24
0xffff8bd18bec   556  b #-0x1d4 (addr 0xffff8bd18a18)
0xffff8bd18bf0   560  sub csp, jssp, #0x10 (16)
0xffff8bd18bf4   564  stp fp, lr, [jssp, #-16]!
0xffff8bd18bf8   568  movz fp, #0xa00000000
0xffff8bd18bfc   572  sub csp, jssp, #0x8 (8)
0xffff8bd18c00   576  str fp, [jssp, #-8]!
0xffff8bd18c04   580  add fp, jssp, #0x8 (8)
0xffff8bd18c08   584  movz x9, #0x0
0xffff8bd18c0c   588  mov x16, lr
0xffff8bd18c10   592  ldr x17, pc+128 (addr 0x0000ffff8bd18c90)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd18c14   596  blr x17
0xffff8bd18c18   600  lsl x0, x3, #32
0xffff8bd18c1c   604  movz x10, #0x0
0xffff8bd18c20   608  sub csp, jssp, #0x10 (16)
0xffff8bd18c24   612  stp x10, x0, [jssp, #-16]!
0xffff8bd18c28   616  movz x0, #0x2
0xffff8bd18c2c   620  movz x1, #0x5b88
0xffff8bd18c30   624  movk x1, #0xe2, lsl #16
0xffff8bd18c34   628  ldr x16, pc+100 (addr 0x0000ffff8bd18c98)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd18c38   632  blr x16
0xffff8bd18c3c   636  str x0, [jssp, #72]
0xffff8bd18c40   640  ldr x16, pc+96 (addr 0x0000ffff8bd18ca0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd18c44   644  blr x16
0xffff8bd18c48   648  ldr lr, [jssp, #16]
0xffff8bd18c4c   652  ldp xzr, fp, [jssp], #24
0xffff8bd18c50   656  b #-0x1f4 (addr 0xffff8bd18a5c)
0xffff8bd18c54   660  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff8bd18c58   664  d63f03e0       constant
0xffff8bd18c5c   668  d503201f       constant
0xffff8bd18c60   672  5f504259       constant
0xffff8bd18c64   676  00000000       constant
0xffff8bd18c68   680  5f504259       constant
0xffff8bd18c6c   684  00000000       constant
0xffff8bd18c70   688  26c04519       constant
0xffff8bd18c74   692  00000000       constant
0xffff8bd18c78   696  8bd170c0       constant
0xffff8bd18c7c   700  0000ffff       constant
0xffff8bd18c80   704  8bd16760       constant
0xffff8bd18c84   708  0000ffff       constant
0xffff8bd18c88   712  8bd178a0       constant
0xffff8bd18c8c   716  0000ffff       constant
0xffff8bd18c90   720  8bd06820       constant
0xffff8bd18c94   724  0000ffff       constant
0xffff8bd18c98   728  8bd06260       constant
0xffff8bd18c9c   732  0000ffff       constant
0xffff8bd18ca0   736  8bd068e0       constant
0xffff8bd18ca4   740  0000ffff       constant
0xffff8bd18ca8   744  movz x16, #0x0
0xffff8bd18cac   748  sub csp, jssp, #0x10 (16)
0xffff8bd18cb0   752  stp fp, lr, [jssp, #-16]!
0xffff8bd18cb4   756  bl #+0x54 (addr 0xffff8bd18d08)
0xffff8bd18cb8   760  movz x16, #0x8
0xffff8bd18cbc   764  sub csp, jssp, #0x10 (16)
0xffff8bd18cc0   768  stp fp, lr, [jssp, #-16]!
0xffff8bd18cc4   772  bl #+0x44 (addr 0xffff8bd18d08)
0xffff8bd18cc8   776  movz x16, #0x10
0xffff8bd18ccc   780  sub csp, jssp, #0x10 (16)
0xffff8bd18cd0   784  stp fp, lr, [jssp, #-16]!
0xffff8bd18cd4   788  bl #+0x34 (addr 0xffff8bd18d08)
0xffff8bd18cd8   792  movz x16, #0x18
0xffff8bd18cdc   796  sub csp, jssp, #0x10 (16)
0xffff8bd18ce0   800  stp fp, lr, [jssp, #-16]!
0xffff8bd18ce4   804  bl #+0x24 (addr 0xffff8bd18d08)
0xffff8bd18ce8   808  movz x16, #0x20
0xffff8bd18cec   812  sub csp, jssp, #0x10 (16)
0xffff8bd18cf0   816  stp fp, lr, [jssp, #-16]!
0xffff8bd18cf4   820  bl #+0x14 (addr 0xffff8bd18d08)
0xffff8bd18cf8   824  movz x16, #0x28
0xffff8bd18cfc   828  bl #+0x1c (addr 0xffff8bd18d18)
0xffff8bd18d00   832  movz x16, #0x30
0xffff8bd18d04   836  bl #+0x14 (addr 0xffff8bd18d18)
0xffff8bd18d08   840  movz x17, #0xa00000000
0xffff8bd18d0c   844  sub csp, jssp, #0x10 (16)
0xffff8bd18d10   848  stp x17, cp, [jssp, #-16]!
0xffff8bd18d14   852  add fp, jssp, #0x10 (16)
0xffff8bd18d18   856  ldr x17, pc+24 (addr 0x0000ffff8bd18d30)    ;; lazy deoptimization bailout 0
0xffff8bd18d1c   860  add x17, x17, x16
0xffff8bd18d20   864  br x17
0xffff8bd18d24   868  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd18d28   872  d63f03e0       constant
0xffff8bd18d2c   876  d503201f       constant
0xffff8bd18d30   880  8bb06000       constant
0xffff8bd18d34   884  0000ffff       constant


Safepoints (size = 21)
0xffff8bd18c3c   636  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff8bd189c8  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18a5c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18a78  embedded object  (0x26c04519 <the hole>)
0xffff8bd18ac8  code target (STUB)  (0xffff8bd170c0)
0xffff8bd18b18  code target (STUB)  (0xffff8bd16760)
0xffff8bd18bb4  code target (STUB)  (0xffff8bd178a0)
0xffff8bd18c10  code target (STUB)  (0xffff8bd06820)
0xffff8bd18c34  code target (STUB)  (0xffff8bd06260)
0xffff8bd18c40  code target (STUB)  (0xffff8bd068e0)
0xffff8bd18c54  constant pool (size 84)
0xffff8bd18d18  runtime entry
0xffff8bd18d24  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff8bd18dc0     0  ldur x5, [x1, #15]
0xffff8bd18dc4     4  ldur x6, [x5, #-1]
0xffff8bd18dc8     8  ldr x16, pc+152 (addr 0x0000ffff8bd18e60)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd18dcc    12  cmp x6, x16
0xffff8bd18dd0    16  b.ne #+0xa0 (addr 0xffff8bd18e70)
0xffff8bd18dd4    20  ldur w6, [x1, #27]
0xffff8bd18dd8    24  tbnz w2, #0, #+0x54 (addr 0xffff8bd18e2c)
0xffff8bd18ddc    28  asr x8, x2, #32
0xffff8bd18de0    32  cmp w8, w6
0xffff8bd18de4    36  b.hs #+0x9c (addr 0xffff8bd18e80)
0xffff8bd18de8    40  mov x1, x0
0xffff8bd18dec    44  add x2, x5, #0xf (15)
0xffff8bd18df0    48  str x1, [x2, w8, sxtw #3]
0xffff8bd18df4    52  add x2, x2, w8, sxtw #3
0xffff8bd18df8    56  tbz w1, #0, #+0x30 (addr 0xffff8bd18e28)
0xffff8bd18dfc    60  and x1, x1, #0xfffffffffff00000
0xffff8bd18e00    64  ldr x1, [x1, #8]
0xffff8bd18e04    68  tbz w1, #1, #+0x24 (addr 0xffff8bd18e28)
0xffff8bd18e08    72  and x1, x5, #0xfffffffffff00000
0xffff8bd18e0c    76  ldr x1, [x1, #8]
0xffff8bd18e10    80  tbz w1, #2, #+0x18 (addr 0xffff8bd18e28)
0xffff8bd18e14    84  sub csp, jssp, #0x8 (8)
0xffff8bd18e18    88  str lr, [jssp, #-8]!
0xffff8bd18e1c    92  ldr x16, pc+76 (addr 0x0000ffff8bd18e68)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff8bd18e20    96  blr x16
0xffff8bd18e24   100  ldr lr, [jssp], #8
0xffff8bd18e28   104  ret
0xffff8bd18e2c   108  ldur x16, [x2, #-1]
0xffff8bd18e30   112  ldr x17, [x26, #120]
0xffff8bd18e34   116  cmp x16, x17
0xffff8bd18e38   120  b.ne #+0x58 (addr 0xffff8bd18e90)
0xffff8bd18e3c   124  ldur d29, [x2, #7]
0xffff8bd18e40   128  fcvtzs w8, d29
0xffff8bd18e44   132  scvtf d0, w8
0xffff8bd18e48   136  fcmp d29, d0
0xffff8bd18e4c   140  b.ne #+0x44 (addr 0xffff8bd18e90)
0xffff8bd18e50   144  b #-0x70 (addr 0xffff8bd18de0)
0xffff8bd18e54   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd18e58   152  d63f03e0       constant
0xffff8bd18e5c   156  d503201f       constant
0xffff8bd18e60   160  5f504259       constant
0xffff8bd18e64   164  00000000       constant
0xffff8bd18e68   168  8bd16760       constant
0xffff8bd18e6c   172  0000ffff       constant
0xffff8bd18e70   176  movz x16, #0x0
0xffff8bd18e74   180  sub csp, jssp, #0x10 (16)
0xffff8bd18e78   184  stp fp, lr, [jssp, #-16]!
0xffff8bd18e7c   188  bl #+0x24 (addr 0xffff8bd18ea0)
0xffff8bd18e80   192  movz x16, #0x8
0xffff8bd18e84   196  sub csp, jssp, #0x10 (16)
0xffff8bd18e88   200  stp fp, lr, [jssp, #-16]!
0xffff8bd18e8c   204  bl #+0x14 (addr 0xffff8bd18ea0)
0xffff8bd18e90   208  movz x16, #0x10
0xffff8bd18e94   212  sub csp, jssp, #0x10 (16)
0xffff8bd18e98   216  stp fp, lr, [jssp, #-16]!
0xffff8bd18e9c   220  bl #+0x4 (addr 0xffff8bd18ea0)
0xffff8bd18ea0   224  movz x17, #0xa00000000
0xffff8bd18ea4   228  sub csp, jssp, #0x10 (16)
0xffff8bd18ea8   232  stp x17, cp, [jssp, #-16]!
0xffff8bd18eac   236  add fp, jssp, #0x10 (16)
0xffff8bd18eb0   240  ldr x17, pc+24 (addr 0x0000ffff8bd18ec8)    ;; lazy deoptimization bailout 0
0xffff8bd18eb4   244  add x17, x17, x16
0xffff8bd18eb8   248  br x17
0xffff8bd18ebc   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd18ec0   256  d63f03e0       constant
0xffff8bd18ec4   260  d503201f       constant
0xffff8bd18ec8   264  8bb06000       constant
0xffff8bd18ecc   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff8bd18dc8  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18e1c  code target (STUB)  (0xffff8bd16760)
0xffff8bd18e54  constant pool (size 28)
0xffff8bd18eb0  runtime entry
0xffff8bd18ebc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 280)
0xffff8bd18dc0     0  ldur x5, [x1, #15]
0xffff8bd18dc4     4  ldur x6, [x5, #-1]
0xffff8bd18dc8     8  ldr x16, pc+152 (addr 0x0000ffff8bd18e60)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd18dcc    12  cmp x6, x16
0xffff8bd18dd0    16  b.ne #+0xa0 (addr 0xffff8bd18e70)
0xffff8bd18dd4    20  ldur w6, [x1, #27]
0xffff8bd18dd8    24  tbnz w2, #0, #+0x54 (addr 0xffff8bd18e2c)
0xffff8bd18ddc    28  asr x8, x2, #32
0xffff8bd18de0    32  cmp w8, w6
0xffff8bd18de4    36  b.hs #+0x9c (addr 0xffff8bd18e80)
0xffff8bd18de8    40  mov x1, x0
0xffff8bd18dec    44  add x2, x5, #0xf (15)
0xffff8bd18df0    48  str x1, [x2, w8, sxtw #3]
0xffff8bd18df4    52  add x2, x2, w8, sxtw #3
0xffff8bd18df8    56  tbz w1, #0, #+0x30 (addr 0xffff8bd18e28)
0xffff8bd18dfc    60  and x1, x1, #0xfffffffffff00000
0xffff8bd18e00    64  ldr x1, [x1, #8]
0xffff8bd18e04    68  tbz w1, #1, #+0x24 (addr 0xffff8bd18e28)
0xffff8bd18e08    72  and x1, x5, #0xfffffffffff00000
0xffff8bd18e0c    76  ldr x1, [x1, #8]
0xffff8bd18e10    80  tbz w1, #2, #+0x18 (addr 0xffff8bd18e28)
0xffff8bd18e14    84  sub csp, jssp, #0x8 (8)
0xffff8bd18e18    88  str lr, [jssp, #-8]!
0xffff8bd18e1c    92  ldr x16, pc+76 (addr 0x0000ffff8bd18e68)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff8bd18e20    96  blr x16
0xffff8bd18e24   100  ldr lr, [jssp], #8
0xffff8bd18e28   104  ret
0xffff8bd18e2c   108  ldur x16, [x2, #-1]
0xffff8bd18e30   112  ldr x17, [x26, #120]
0xffff8bd18e34   116  cmp x16, x17
0xffff8bd18e38   120  b.ne #+0x58 (addr 0xffff8bd18e90)
0xffff8bd18e3c   124  ldur d29, [x2, #7]
0xffff8bd18e40   128  fcvtzs w8, d29
0xffff8bd18e44   132  scvtf d0, w8
0xffff8bd18e48   136  fcmp d29, d0
0xffff8bd18e4c   140  b.ne #+0x44 (addr 0xffff8bd18e90)
0xffff8bd18e50   144  b #-0x70 (addr 0xffff8bd18de0)
0xffff8bd18e54   148  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd18e58   152  d63f03e0       constant
0xffff8bd18e5c   156  d503201f       constant
0xffff8bd18e60   160  5f504259       constant
0xffff8bd18e64   164  00000000       constant
0xffff8bd18e68   168  8bd16760       constant
0xffff8bd18e6c   172  0000ffff       constant
0xffff8bd18e70   176  movz x16, #0x0
0xffff8bd18e74   180  sub csp, jssp, #0x10 (16)
0xffff8bd18e78   184  stp fp, lr, [jssp, #-16]!
0xffff8bd18e7c   188  bl #+0x24 (addr 0xffff8bd18ea0)
0xffff8bd18e80   192  movz x16, #0x8
0xffff8bd18e84   196  sub csp, jssp, #0x10 (16)
0xffff8bd18e88   200  stp fp, lr, [jssp, #-16]!
0xffff8bd18e8c   204  bl #+0x14 (addr 0xffff8bd18ea0)
0xffff8bd18e90   208  movz x16, #0x10
0xffff8bd18e94   212  sub csp, jssp, #0x10 (16)
0xffff8bd18e98   216  stp fp, lr, [jssp, #-16]!
0xffff8bd18e9c   220  bl #+0x4 (addr 0xffff8bd18ea0)
0xffff8bd18ea0   224  movz x17, #0xa00000000
0xffff8bd18ea4   228  sub csp, jssp, #0x10 (16)
0xffff8bd18ea8   232  stp x17, cp, [jssp, #-16]!
0xffff8bd18eac   236  add fp, jssp, #0x10 (16)
0xffff8bd18eb0   240  ldr x17, pc+24 (addr 0x0000ffff8bd18ec8)    ;; lazy deoptimization bailout 0
0xffff8bd18eb4   244  add x17, x17, x16
0xffff8bd18eb8   248  br x17
0xffff8bd18ebc   252  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd18ec0   256  d63f03e0       constant
0xffff8bd18ec4   260  d503201f       constant
0xffff8bd18ec8   264  8bb06000       constant
0xffff8bd18ecc   268  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 20)
0xffff8bd18dc8  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18e1c  code target (STUB)  (0xffff8bd16760)
0xffff8bd18e54  constant pool (size 28)
0xffff8bd18eb0  runtime entry
0xffff8bd18ebc  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 909)
0xffff8bd18f40     0  ldur x5, [x1, #15]
0xffff8bd18f44     4  ldur x6, [x5, #-1]
0xffff8bd18f48     8  ldr x16, pc+664 (addr 0x0000ffff8bd191e0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd18f4c    12  cmp x6, x16
0xffff8bd18f50    16  b.ne #+0x2d8 (addr 0xffff8bd19228)
0xffff8bd18f54    20  ldur w6, [x1, #27]
0xffff8bd18f58    24  tbnz w2, #0, #+0x150 (addr 0xffff8bd190a8)
0xffff8bd18f5c    28  asr x8, x2, #32
0xffff8bd18f60    32  cmp w6, w8
0xffff8bd18f64    36  b.le #+0x10 (addr 0xffff8bd18f74)
0xffff8bd18f68    40  cmp w8, w6
0xffff8bd18f6c    44  b.hs #+0x2cc (addr 0xffff8bd19238)
0xffff8bd18f70    48  b #+0xf4 (addr 0xffff8bd19064)
0xffff8bd18f74    52  ldur w7, [x5, #11]
0xffff8bd18f78    56  cmp w7, w8
0xffff8bd18f7c    60  b.gt #+0xdc (addr 0xffff8bd19058)
0xffff8bd18f80    64  adds w7, w7, #0x400 (1024)
0xffff8bd18f84    68  b.vs #+0x2c4 (addr 0xffff8bd19248)
0xffff8bd18f88    72  cmp w8, w7
0xffff8bd18f8c    76  b.hs #+0x2cc (addr 0xffff8bd19258)
0xffff8bd18f90    80  tbnz w2, #0, #+0x160 (addr 0xffff8bd190f0)
0xffff8bd18f94    84  asr x9, x2, #32
0xffff8bd18f98    88  add w7, w8, w9, lsr #1
0xffff8bd18f9c    92  add w7, w7, #0x10 (16)
0xffff8bd18fa0    96  movz w16, #0x95ff
0xffff8bd18fa4   100  cmp w7, w16, lsl #1
0xffff8bd18fa8   104  b.hs #+0x2c0 (addr 0xffff8bd19268)
0xffff8bd18fac   108  lsl x2, x7, #32
0xffff8bd18fb0   112  lsl w3, w7, #3
0xffff8bd18fb4   116  add w3, w3, #0x10 (16)
0xffff8bd18fb8   120  sxtw x3, w3
0xffff8bd18fbc   124  movz x4, #0xe2c0
0xffff8bd18fc0   128  movk x4, #0x2cb8, lsl #16
0xffff8bd18fc4   132  ldp x9, x16, [x4]
0xffff8bd18fc8   136  adds x7, x9, x3
0xffff8bd18fcc   140  ccmp x7, x16, #nzCv, lo
0xffff8bd18fd0   144  b.hi #+0x1a0 (addr 0xffff8bd19170)
0xffff8bd18fd4   148  str x7, [x4]
0xffff8bd18fd8   152  orr x9, x9, #0x1
0xffff8bd18fdc   156  ldr x3, pc+524 (addr 0x0000ffff8bd191e8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd18fe0   160  stur x3, [x9, #-1]
0xffff8bd18fe4   164  stur x2, [x9, #7]
0xffff8bd18fe8   168  ldur w2, [x9, #11]
0xffff8bd18fec   172  cmp w6, w2
0xffff8bd18ff0   176  b.ge #+0x18 (addr 0xffff8bd19008)
0xffff8bd18ff4   180  sub w2, w2, #0x1 (1)
0xffff8bd18ff8   184  ldr x3, pc+504 (addr 0x0000ffff8bd191f0)    ;; object: 0x26c04519 <the hole>
0xffff8bd18ffc   188  add x4, x9, #0xf (15)
0xffff8bd19000   192  str x3, [x4, w2, sxtw #3]
0xffff8bd19004   196  b #-0x18 (addr 0xffff8bd18fec)
0xffff8bd19008   200  cmp w6, #0x0 (0)
0xffff8bd1900c   204  b.le #+0x1c (addr 0xffff8bd19028)
0xffff8bd19010   208  sub w6, w6, #0x1 (1)
0xffff8bd19014   212  add x2, x5, #0xf (15)
0xffff8bd19018   216  ldr x3, [x2, w6, sxtw #3]
0xffff8bd1901c   220  add x2, x9, #0xf (15)
0xffff8bd19020   224  str x3, [x2, w6, sxtw #3]
0xffff8bd19024   228  b #-0x1c (addr 0xffff8bd19008)
0xffff8bd19028   232  mov x2, x9
0xffff8bd1902c   236  stur x2, [x1, #15]
0xffff8bd19030   240  add x3, x1, #0xf (15)
0xffff8bd19034   244  and x2, x1, #0xfffffffffff00000
0xffff8bd19038   248  ldr x2, [x2, #8]
0xffff8bd1903c   252  tbz w2, #2, #+0x18 (addr 0xffff8bd19054)
0xffff8bd19040   256  sub csp, jssp, #0x8 (8)
0xffff8bd19044   260  str lr, [jssp, #-8]!
0xffff8bd19048   264  ldr x16, pc+432 (addr 0x0000ffff8bd191f8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd1904c   268  blr x16
0xffff8bd19050   272  ldr lr, [jssp], #8
0xffff8bd19054   276  mov x5, x9
0xffff8bd19058   280  add w2, w8, #0x1 (1)
0xffff8bd1905c   284  lsl x2, x2, #32
0xffff8bd19060   288  stur x2, [x1, #23]
0xffff8bd19064   292  mov x1, x0
0xffff8bd19068   296  add x2, x5, #0xf (15)
0xffff8bd1906c   300  str x1, [x2, w8, sxtw #3]
0xffff8bd19070   304  add x2, x2, w8, sxtw #3
0xffff8bd19074   308  tbz w1, #0, #+0x30 (addr 0xffff8bd190a4)
0xffff8bd19078   312  and x1, x1, #0xfffffffffff00000
0xffff8bd1907c   316  ldr x1, [x1, #8]
0xffff8bd19080   320  tbz w1, #1, #+0x24 (addr 0xffff8bd190a4)
0xffff8bd19084   324  and x1, x5, #0xfffffffffff00000
0xffff8bd19088   328  ldr x1, [x1, #8]
0xffff8bd1908c   332  tbz w1, #2, #+0x18 (addr 0xffff8bd190a4)
0xffff8bd19090   336  sub csp, jssp, #0x8 (8)
0xffff8bd19094   340  str lr, [jssp, #-8]!
0xffff8bd19098   344  ldr x16, pc+360 (addr 0x0000ffff8bd19200)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff8bd1909c   348  blr x16
0xffff8bd190a0   352  ldr lr, [jssp], #8
0xffff8bd190a4   356  ret
0xffff8bd190a8   360  sub csp, jssp, #0x10 (16)
0xffff8bd190ac   364  stp fp, lr, [jssp, #-16]!
0xffff8bd190b0   368  movz fp, #0xa00000000
0xffff8bd190b4   372  sub csp, jssp, #0x8 (8)
0xffff8bd190b8   376  str fp, [jssp, #-8]!
0xffff8bd190bc   380  add fp, jssp, #0x8 (8)
0xffff8bd190c0   384  ldur x16, [x2, #-1]
0xffff8bd190c4   388  ldr x17, [x26, #120]
0xffff8bd190c8   392  cmp x16, x17
0xffff8bd190cc   396  b.ne #+0x1ac (addr 0xffff8bd19278)
0xffff8bd190d0   400  ldur d29, [x2, #7]
0xffff8bd190d4   404  fcvtzs w8, d29
0xffff8bd190d8   408  scvtf d0, w8
0xffff8bd190dc   412  fcmp d29, d0
0xffff8bd190e0   416  b.ne #+0x198 (addr 0xffff8bd19278)
0xffff8bd190e4   420  ldr lr, [jssp, #16]
0xffff8bd190e8   424  ldp xzr, fp, [jssp], #24
0xffff8bd190ec   428  b #-0x18c (addr 0xffff8bd18f60)
0xffff8bd190f0   432  sub csp, jssp, #0x10 (16)
0xffff8bd190f4   436  stp fp, lr, [jssp, #-16]!
0xffff8bd190f8   440  movz fp, #0xa00000000
0xffff8bd190fc   444  sub csp, jssp, #0x8 (8)
0xffff8bd19100   448  str fp, [jssp, #-8]!
0xffff8bd19104   452  add fp, jssp, #0x8 (8)
0xffff8bd19108   456  ldur x16, [x2, #-1]
0xffff8bd1910c   460  ldr x17, [x26, #120]
0xffff8bd19110   464  cmp x16, x17
0xffff8bd19114   468  b.ne #+0x30 (addr 0xffff8bd19144)
0xffff8bd19118   472  ldur d30, [x2, #7]
0xffff8bd1911c   476  fcvtzs x9, d30
0xffff8bd19120   480  cmp x9, #0x1 (1)
0xffff8bd19124   484  ccmn x9, #1, #nzcV, vc
0xffff8bd19128   488  b.vc #+0x18 (addr 0xffff8bd19140)
0xffff8bd1912c   492  sub csp, jssp, #0x8 (8)
0xffff8bd19130   496  str lr, [jssp, #-8]!
0xffff8bd19134   500  ldr x16, pc+212 (addr 0x0000ffff8bd19208)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff8bd19138   504  blr x16
0xffff8bd1913c   508  ldr lr, [jssp], #8
0xffff8bd19140   512  b #+0x24 (addr 0xffff8bd19164)
0xffff8bd19144   516  ldp x9, x7, [x26, #64]
0xffff8bd19148   520  cmp x2, x9
0xffff8bd1914c   524  cset x9, eq
0xffff8bd19150   528  ccmp x2, x7, #nZcv, ne
0xffff8bd19154   532  b.eq #+0x10 (addr 0xffff8bd19164)
0xffff8bd19158   536  ldr x16, [x26, #40]
0xffff8bd1915c   540  cmp x2, x16
0xffff8bd19160   544  b.ne #+0x120 (addr 0xffff8bd19280)
0xffff8bd19164   548  ldr lr, [jssp, #16]
0xffff8bd19168   552  ldp xzr, fp, [jssp], #24
0xffff8bd1916c   556  b #-0x1d4 (addr 0xffff8bd18f98)
0xffff8bd19170   560  sub csp, jssp, #0x10 (16)
0xffff8bd19174   564  stp fp, lr, [jssp, #-16]!
0xffff8bd19178   568  movz fp, #0xa00000000
0xffff8bd1917c   572  sub csp, jssp, #0x8 (8)
0xffff8bd19180   576  str fp, [jssp, #-8]!
0xffff8bd19184   580  add fp, jssp, #0x8 (8)
0xffff8bd19188   584  movz x9, #0x0
0xffff8bd1918c   588  mov x16, lr
0xffff8bd19190   592  ldr x17, pc+128 (addr 0x0000ffff8bd19210)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd19194   596  blr x17
0xffff8bd19198   600  lsl x0, x3, #32
0xffff8bd1919c   604  movz x10, #0x0
0xffff8bd191a0   608  sub csp, jssp, #0x10 (16)
0xffff8bd191a4   612  stp x10, x0, [jssp, #-16]!
0xffff8bd191a8   616  movz x0, #0x2
0xffff8bd191ac   620  movz x1, #0x5b88
0xffff8bd191b0   624  movk x1, #0xe2, lsl #16
0xffff8bd191b4   628  ldr x16, pc+100 (addr 0x0000ffff8bd19218)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd191b8   632  blr x16
0xffff8bd191bc   636  str x0, [jssp, #72]
0xffff8bd191c0   640  ldr x16, pc+96 (addr 0x0000ffff8bd19220)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd191c4   644  blr x16
0xffff8bd191c8   648  ldr lr, [jssp, #16]
0xffff8bd191cc   652  ldp xzr, fp, [jssp], #24
0xffff8bd191d0   656  b #-0x1f4 (addr 0xffff8bd18fdc)
0xffff8bd191d4   660  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff8bd191d8   664  d63f03e0       constant
0xffff8bd191dc   668  d503201f       constant
0xffff8bd191e0   672  5f504259       constant
0xffff8bd191e4   676  00000000       constant
0xffff8bd191e8   680  5f504259       constant
0xffff8bd191ec   684  00000000       constant
0xffff8bd191f0   688  26c04519       constant
0xffff8bd191f4   692  00000000       constant
0xffff8bd191f8   696  8bd170c0       constant
0xffff8bd191fc   700  0000ffff       constant
0xffff8bd19200   704  8bd16760       constant
0xffff8bd19204   708  0000ffff       constant
0xffff8bd19208   712  8bd178a0       constant
0xffff8bd1920c   716  0000ffff       constant
0xffff8bd19210   720  8bd06820       constant
0xffff8bd19214   724  0000ffff       constant
0xffff8bd19218   728  8bd06260       constant
0xffff8bd1921c   732  0000ffff       constant
0xffff8bd19220   736  8bd068e0       constant
0xffff8bd19224   740  0000ffff       constant
0xffff8bd19228   744  movz x16, #0x0
0xffff8bd1922c   748  sub csp, jssp, #0x10 (16)
0xffff8bd19230   752  stp fp, lr, [jssp, #-16]!
0xffff8bd19234   756  bl #+0x54 (addr 0xffff8bd19288)
0xffff8bd19238   760  movz x16, #0x8
0xffff8bd1923c   764  sub csp, jssp, #0x10 (16)
0xffff8bd19240   768  stp fp, lr, [jssp, #-16]!
0xffff8bd19244   772  bl #+0x44 (addr 0xffff8bd19288)
0xffff8bd19248   776  movz x16, #0x10
0xffff8bd1924c   780  sub csp, jssp, #0x10 (16)
0xffff8bd19250   784  stp fp, lr, [jssp, #-16]!
0xffff8bd19254   788  bl #+0x34 (addr 0xffff8bd19288)
0xffff8bd19258   792  movz x16, #0x18
0xffff8bd1925c   796  sub csp, jssp, #0x10 (16)
0xffff8bd19260   800  stp fp, lr, [jssp, #-16]!
0xffff8bd19264   804  bl #+0x24 (addr 0xffff8bd19288)
0xffff8bd19268   808  movz x16, #0x20
0xffff8bd1926c   812  sub csp, jssp, #0x10 (16)
0xffff8bd19270   816  stp fp, lr, [jssp, #-16]!
0xffff8bd19274   820  bl #+0x14 (addr 0xffff8bd19288)
0xffff8bd19278   824  movz x16, #0x28
0xffff8bd1927c   828  bl #+0x1c (addr 0xffff8bd19298)
0xffff8bd19280   832  movz x16, #0x30
0xffff8bd19284   836  bl #+0x14 (addr 0xffff8bd19298)
0xffff8bd19288   840  movz x17, #0xa00000000
0xffff8bd1928c   844  sub csp, jssp, #0x10 (16)
0xffff8bd19290   848  stp x17, cp, [jssp, #-16]!
0xffff8bd19294   852  add fp, jssp, #0x10 (16)
0xffff8bd19298   856  ldr x17, pc+24 (addr 0x0000ffff8bd192b0)    ;; lazy deoptimization bailout 0
0xffff8bd1929c   860  add x17, x17, x16
0xffff8bd192a0   864  br x17
0xffff8bd192a4   868  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd192a8   872  d63f03e0       constant
0xffff8bd192ac   876  d503201f       constant
0xffff8bd192b0   880  8bb06000       constant
0xffff8bd192b4   884  0000ffff       constant


Safepoints (size = 21)
0xffff8bd191bc   636  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff8bd18f48  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18fdc  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18ff8  embedded object  (0x26c04519 <the hole>)
0xffff8bd19048  code target (STUB)  (0xffff8bd170c0)
0xffff8bd19098  code target (STUB)  (0xffff8bd16760)
0xffff8bd19134  code target (STUB)  (0xffff8bd178a0)
0xffff8bd19190  code target (STUB)  (0xffff8bd06820)
0xffff8bd191b4  code target (STUB)  (0xffff8bd06260)
0xffff8bd191c0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd191d4  constant pool (size 84)
0xffff8bd19298  runtime entry
0xffff8bd192a4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 909)
0xffff8bd18f40     0  ldur x5, [x1, #15]
0xffff8bd18f44     4  ldur x6, [x5, #-1]
0xffff8bd18f48     8  ldr x16, pc+664 (addr 0x0000ffff8bd191e0)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd18f4c    12  cmp x6, x16
0xffff8bd18f50    16  b.ne #+0x2d8 (addr 0xffff8bd19228)
0xffff8bd18f54    20  ldur w6, [x1, #27]
0xffff8bd18f58    24  tbnz w2, #0, #+0x150 (addr 0xffff8bd190a8)
0xffff8bd18f5c    28  asr x8, x2, #32
0xffff8bd18f60    32  cmp w6, w8
0xffff8bd18f64    36  b.le #+0x10 (addr 0xffff8bd18f74)
0xffff8bd18f68    40  cmp w8, w6
0xffff8bd18f6c    44  b.hs #+0x2cc (addr 0xffff8bd19238)
0xffff8bd18f70    48  b #+0xf4 (addr 0xffff8bd19064)
0xffff8bd18f74    52  ldur w7, [x5, #11]
0xffff8bd18f78    56  cmp w7, w8
0xffff8bd18f7c    60  b.gt #+0xdc (addr 0xffff8bd19058)
0xffff8bd18f80    64  adds w7, w7, #0x400 (1024)
0xffff8bd18f84    68  b.vs #+0x2c4 (addr 0xffff8bd19248)
0xffff8bd18f88    72  cmp w8, w7
0xffff8bd18f8c    76  b.hs #+0x2cc (addr 0xffff8bd19258)
0xffff8bd18f90    80  tbnz w2, #0, #+0x160 (addr 0xffff8bd190f0)
0xffff8bd18f94    84  asr x9, x2, #32
0xffff8bd18f98    88  add w7, w8, w9, lsr #1
0xffff8bd18f9c    92  add w7, w7, #0x10 (16)
0xffff8bd18fa0    96  movz w16, #0x95ff
0xffff8bd18fa4   100  cmp w7, w16, lsl #1
0xffff8bd18fa8   104  b.hs #+0x2c0 (addr 0xffff8bd19268)
0xffff8bd18fac   108  lsl x2, x7, #32
0xffff8bd18fb0   112  lsl w3, w7, #3
0xffff8bd18fb4   116  add w3, w3, #0x10 (16)
0xffff8bd18fb8   120  sxtw x3, w3
0xffff8bd18fbc   124  movz x4, #0xe2c0
0xffff8bd18fc0   128  movk x4, #0x2cb8, lsl #16
0xffff8bd18fc4   132  ldp x9, x16, [x4]
0xffff8bd18fc8   136  adds x7, x9, x3
0xffff8bd18fcc   140  ccmp x7, x16, #nzCv, lo
0xffff8bd18fd0   144  b.hi #+0x1a0 (addr 0xffff8bd19170)
0xffff8bd18fd4   148  str x7, [x4]
0xffff8bd18fd8   152  orr x9, x9, #0x1
0xffff8bd18fdc   156  ldr x3, pc+524 (addr 0x0000ffff8bd191e8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd18fe0   160  stur x3, [x9, #-1]
0xffff8bd18fe4   164  stur x2, [x9, #7]
0xffff8bd18fe8   168  ldur w2, [x9, #11]
0xffff8bd18fec   172  cmp w6, w2
0xffff8bd18ff0   176  b.ge #+0x18 (addr 0xffff8bd19008)
0xffff8bd18ff4   180  sub w2, w2, #0x1 (1)
0xffff8bd18ff8   184  ldr x3, pc+504 (addr 0x0000ffff8bd191f0)    ;; object: 0x26c04519 <the hole>
0xffff8bd18ffc   188  add x4, x9, #0xf (15)
0xffff8bd19000   192  str x3, [x4, w2, sxtw #3]
0xffff8bd19004   196  b #-0x18 (addr 0xffff8bd18fec)
0xffff8bd19008   200  cmp w6, #0x0 (0)
0xffff8bd1900c   204  b.le #+0x1c (addr 0xffff8bd19028)
0xffff8bd19010   208  sub w6, w6, #0x1 (1)
0xffff8bd19014   212  add x2, x5, #0xf (15)
0xffff8bd19018   216  ldr x3, [x2, w6, sxtw #3]
0xffff8bd1901c   220  add x2, x9, #0xf (15)
0xffff8bd19020   224  str x3, [x2, w6, sxtw #3]
0xffff8bd19024   228  b #-0x1c (addr 0xffff8bd19008)
0xffff8bd19028   232  mov x2, x9
0xffff8bd1902c   236  stur x2, [x1, #15]
0xffff8bd19030   240  add x3, x1, #0xf (15)
0xffff8bd19034   244  and x2, x1, #0xfffffffffff00000
0xffff8bd19038   248  ldr x2, [x2, #8]
0xffff8bd1903c   252  tbz w2, #2, #+0x18 (addr 0xffff8bd19054)
0xffff8bd19040   256  sub csp, jssp, #0x8 (8)
0xffff8bd19044   260  str lr, [jssp, #-8]!
0xffff8bd19048   264  ldr x16, pc+432 (addr 0x0000ffff8bd191f8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd1904c   268  blr x16
0xffff8bd19050   272  ldr lr, [jssp], #8
0xffff8bd19054   276  mov x5, x9
0xffff8bd19058   280  add w2, w8, #0x1 (1)
0xffff8bd1905c   284  lsl x2, x2, #32
0xffff8bd19060   288  stur x2, [x1, #23]
0xffff8bd19064   292  mov x1, x0
0xffff8bd19068   296  add x2, x5, #0xf (15)
0xffff8bd1906c   300  str x1, [x2, w8, sxtw #3]
0xffff8bd19070   304  add x2, x2, w8, sxtw #3
0xffff8bd19074   308  tbz w1, #0, #+0x30 (addr 0xffff8bd190a4)
0xffff8bd19078   312  and x1, x1, #0xfffffffffff00000
0xffff8bd1907c   316  ldr x1, [x1, #8]
0xffff8bd19080   320  tbz w1, #1, #+0x24 (addr 0xffff8bd190a4)
0xffff8bd19084   324  and x1, x5, #0xfffffffffff00000
0xffff8bd19088   328  ldr x1, [x1, #8]
0xffff8bd1908c   332  tbz w1, #2, #+0x18 (addr 0xffff8bd190a4)
0xffff8bd19090   336  sub csp, jssp, #0x8 (8)
0xffff8bd19094   340  str lr, [jssp, #-8]!
0xffff8bd19098   344  ldr x16, pc+360 (addr 0x0000ffff8bd19200)    ;; code: STUB, RecordWriteStub, minor: 67621
0xffff8bd1909c   348  blr x16
0xffff8bd190a0   352  ldr lr, [jssp], #8
0xffff8bd190a4   356  ret
0xffff8bd190a8   360  sub csp, jssp, #0x10 (16)
0xffff8bd190ac   364  stp fp, lr, [jssp, #-16]!
0xffff8bd190b0   368  movz fp, #0xa00000000
0xffff8bd190b4   372  sub csp, jssp, #0x8 (8)
0xffff8bd190b8   376  str fp, [jssp, #-8]!
0xffff8bd190bc   380  add fp, jssp, #0x8 (8)
0xffff8bd190c0   384  ldur x16, [x2, #-1]
0xffff8bd190c4   388  ldr x17, [x26, #120]
0xffff8bd190c8   392  cmp x16, x17
0xffff8bd190cc   396  b.ne #+0x1ac (addr 0xffff8bd19278)
0xffff8bd190d0   400  ldur d29, [x2, #7]
0xffff8bd190d4   404  fcvtzs w8, d29
0xffff8bd190d8   408  scvtf d0, w8
0xffff8bd190dc   412  fcmp d29, d0
0xffff8bd190e0   416  b.ne #+0x198 (addr 0xffff8bd19278)
0xffff8bd190e4   420  ldr lr, [jssp, #16]
0xffff8bd190e8   424  ldp xzr, fp, [jssp], #24
0xffff8bd190ec   428  b #-0x18c (addr 0xffff8bd18f60)
0xffff8bd190f0   432  sub csp, jssp, #0x10 (16)
0xffff8bd190f4   436  stp fp, lr, [jssp, #-16]!
0xffff8bd190f8   440  movz fp, #0xa00000000
0xffff8bd190fc   444  sub csp, jssp, #0x8 (8)
0xffff8bd19100   448  str fp, [jssp, #-8]!
0xffff8bd19104   452  add fp, jssp, #0x8 (8)
0xffff8bd19108   456  ldur x16, [x2, #-1]
0xffff8bd1910c   460  ldr x17, [x26, #120]
0xffff8bd19110   464  cmp x16, x17
0xffff8bd19114   468  b.ne #+0x30 (addr 0xffff8bd19144)
0xffff8bd19118   472  ldur d30, [x2, #7]
0xffff8bd1911c   476  fcvtzs x9, d30
0xffff8bd19120   480  cmp x9, #0x1 (1)
0xffff8bd19124   484  ccmn x9, #1, #nzcV, vc
0xffff8bd19128   488  b.vc #+0x18 (addr 0xffff8bd19140)
0xffff8bd1912c   492  sub csp, jssp, #0x8 (8)
0xffff8bd19130   496  str lr, [jssp, #-8]!
0xffff8bd19134   500  ldr x16, pc+212 (addr 0x0000ffff8bd19208)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff8bd19138   504  blr x16
0xffff8bd1913c   508  ldr lr, [jssp], #8
0xffff8bd19140   512  b #+0x24 (addr 0xffff8bd19164)
0xffff8bd19144   516  ldp x9, x7, [x26, #64]
0xffff8bd19148   520  cmp x2, x9
0xffff8bd1914c   524  cset x9, eq
0xffff8bd19150   528  ccmp x2, x7, #nZcv, ne
0xffff8bd19154   532  b.eq #+0x10 (addr 0xffff8bd19164)
0xffff8bd19158   536  ldr x16, [x26, #40]
0xffff8bd1915c   540  cmp x2, x16
0xffff8bd19160   544  b.ne #+0x120 (addr 0xffff8bd19280)
0xffff8bd19164   548  ldr lr, [jssp, #16]
0xffff8bd19168   552  ldp xzr, fp, [jssp], #24
0xffff8bd1916c   556  b #-0x1d4 (addr 0xffff8bd18f98)
0xffff8bd19170   560  sub csp, jssp, #0x10 (16)
0xffff8bd19174   564  stp fp, lr, [jssp, #-16]!
0xffff8bd19178   568  movz fp, #0xa00000000
0xffff8bd1917c   572  sub csp, jssp, #0x8 (8)
0xffff8bd19180   576  str fp, [jssp, #-8]!
0xffff8bd19184   580  add fp, jssp, #0x8 (8)
0xffff8bd19188   584  movz x9, #0x0
0xffff8bd1918c   588  mov x16, lr
0xffff8bd19190   592  ldr x17, pc+128 (addr 0x0000ffff8bd19210)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd19194   596  blr x17
0xffff8bd19198   600  lsl x0, x3, #32
0xffff8bd1919c   604  movz x10, #0x0
0xffff8bd191a0   608  sub csp, jssp, #0x10 (16)
0xffff8bd191a4   612  stp x10, x0, [jssp, #-16]!
0xffff8bd191a8   616  movz x0, #0x2
0xffff8bd191ac   620  movz x1, #0x5b88
0xffff8bd191b0   624  movk x1, #0xe2, lsl #16
0xffff8bd191b4   628  ldr x16, pc+100 (addr 0x0000ffff8bd19218)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd191b8   632  blr x16
0xffff8bd191bc   636  str x0, [jssp, #72]
0xffff8bd191c0   640  ldr x16, pc+96 (addr 0x0000ffff8bd19220)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd191c4   644  blr x16
0xffff8bd191c8   648  ldr lr, [jssp, #16]
0xffff8bd191cc   652  ldp xzr, fp, [jssp], #24
0xffff8bd191d0   656  b #-0x1f4 (addr 0xffff8bd18fdc)
0xffff8bd191d4   660  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff8bd191d8   664  d63f03e0       constant
0xffff8bd191dc   668  d503201f       constant
0xffff8bd191e0   672  5f504259       constant
0xffff8bd191e4   676  00000000       constant
0xffff8bd191e8   680  5f504259       constant
0xffff8bd191ec   684  00000000       constant
0xffff8bd191f0   688  26c04519       constant
0xffff8bd191f4   692  00000000       constant
0xffff8bd191f8   696  8bd170c0       constant
0xffff8bd191fc   700  0000ffff       constant
0xffff8bd19200   704  8bd16760       constant
0xffff8bd19204   708  0000ffff       constant
0xffff8bd19208   712  8bd178a0       constant
0xffff8bd1920c   716  0000ffff       constant
0xffff8bd19210   720  8bd06820       constant
0xffff8bd19214   724  0000ffff       constant
0xffff8bd19218   728  8bd06260       constant
0xffff8bd1921c   732  0000ffff       constant
0xffff8bd19220   736  8bd068e0       constant
0xffff8bd19224   740  0000ffff       constant
0xffff8bd19228   744  movz x16, #0x0
0xffff8bd1922c   748  sub csp, jssp, #0x10 (16)
0xffff8bd19230   752  stp fp, lr, [jssp, #-16]!
0xffff8bd19234   756  bl #+0x54 (addr 0xffff8bd19288)
0xffff8bd19238   760  movz x16, #0x8
0xffff8bd1923c   764  sub csp, jssp, #0x10 (16)
0xffff8bd19240   768  stp fp, lr, [jssp, #-16]!
0xffff8bd19244   772  bl #+0x44 (addr 0xffff8bd19288)
0xffff8bd19248   776  movz x16, #0x10
0xffff8bd1924c   780  sub csp, jssp, #0x10 (16)
0xffff8bd19250   784  stp fp, lr, [jssp, #-16]!
0xffff8bd19254   788  bl #+0x34 (addr 0xffff8bd19288)
0xffff8bd19258   792  movz x16, #0x18
0xffff8bd1925c   796  sub csp, jssp, #0x10 (16)
0xffff8bd19260   800  stp fp, lr, [jssp, #-16]!
0xffff8bd19264   804  bl #+0x24 (addr 0xffff8bd19288)
0xffff8bd19268   808  movz x16, #0x20
0xffff8bd1926c   812  sub csp, jssp, #0x10 (16)
0xffff8bd19270   816  stp fp, lr, [jssp, #-16]!
0xffff8bd19274   820  bl #+0x14 (addr 0xffff8bd19288)
0xffff8bd19278   824  movz x16, #0x28
0xffff8bd1927c   828  bl #+0x1c (addr 0xffff8bd19298)
0xffff8bd19280   832  movz x16, #0x30
0xffff8bd19284   836  bl #+0x14 (addr 0xffff8bd19298)
0xffff8bd19288   840  movz x17, #0xa00000000
0xffff8bd1928c   844  sub csp, jssp, #0x10 (16)
0xffff8bd19290   848  stp x17, cp, [jssp, #-16]!
0xffff8bd19294   852  add fp, jssp, #0x10 (16)
0xffff8bd19298   856  ldr x17, pc+24 (addr 0x0000ffff8bd192b0)    ;; lazy deoptimization bailout 0
0xffff8bd1929c   860  add x17, x17, x16
0xffff8bd192a0   864  br x17
0xffff8bd192a4   868  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd192a8   872  d63f03e0       constant
0xffff8bd192ac   876  d503201f       constant
0xffff8bd192b0   880  8bb06000       constant
0xffff8bd192b4   884  0000ffff       constant


Safepoints (size = 21)
0xffff8bd191bc   636  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 35)
0xffff8bd18f48  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18fdc  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd18ff8  embedded object  (0x26c04519 <the hole>)
0xffff8bd19048  code target (STUB)  (0xffff8bd170c0)
0xffff8bd19098  code target (STUB)  (0xffff8bd16760)
0xffff8bd19134  code target (STUB)  (0xffff8bd178a0)
0xffff8bd19190  code target (STUB)  (0xffff8bd06820)
0xffff8bd191b4  code target (STUB)  (0xffff8bd06260)
0xffff8bd191c0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd191d4  constant pool (size 84)
0xffff8bd19298  runtime entry
0xffff8bd192a4  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd19340     0  ldur x5, [x1, #15]
0xffff8bd19344     4  ldur w6, [x1, #27]
0xffff8bd19348     8  tbnz w2, #0, #+0x40 (addr 0xffff8bd19388)
0xffff8bd1934c    12  asr x8, x2, #32
0xffff8bd19350    16  cmp w8, w6
0xffff8bd19354    20  b.hs #+0x5c (addr 0xffff8bd193b0)
0xffff8bd19358    24  tbz w0, #0, #+0x1c (addr 0xffff8bd19374)
0xffff8bd1935c    28  ldur x16, [x0, #-1]
0xffff8bd19360    32  ldr x17, [x26, #120]
0xffff8bd19364    36  cmp x16, x17
0xffff8bd19368    40  b.ne #+0x58 (addr 0xffff8bd193c0)
0xffff8bd1936c    44  ldur d0, [x0, #7]
0xffff8bd19370    48  b #+0x8 (addr 0xffff8bd19378)
0xffff8bd19374    52  scvtf d0, x0, #32
0xffff8bd19378    56  add x1, x5, #0xf (15)
0xffff8bd1937c    60  fsub d29, d0, d15
0xffff8bd19380    64  str d29, [x1, w8, sxtw #3]
0xffff8bd19384    68  ret
0xffff8bd19388    72  ldur x16, [x2, #-1]
0xffff8bd1938c    76  ldr x17, [x26, #120]
0xffff8bd19390    80  cmp x16, x17
0xffff8bd19394    84  b.ne #+0x3c (addr 0xffff8bd193d0)
0xffff8bd19398    88  ldur d29, [x2, #7]
0xffff8bd1939c    92  fcvtzs w8, d29
0xffff8bd193a0    96  scvtf d0, w8
0xffff8bd193a4   100  fcmp d29, d0
0xffff8bd193a8   104  b.ne #+0x28 (addr 0xffff8bd193d0)
0xffff8bd193ac   108  b #-0x5c (addr 0xffff8bd19350)
0xffff8bd193b0   112  movz x16, #0x0
0xffff8bd193b4   116  sub csp, jssp, #0x10 (16)
0xffff8bd193b8   120  stp fp, lr, [jssp, #-16]!
0xffff8bd193bc   124  bl #+0x24 (addr 0xffff8bd193e0)
0xffff8bd193c0   128  movz x16, #0x8
0xffff8bd193c4   132  sub csp, jssp, #0x10 (16)
0xffff8bd193c8   136  stp fp, lr, [jssp, #-16]!
0xffff8bd193cc   140  bl #+0x14 (addr 0xffff8bd193e0)
0xffff8bd193d0   144  movz x16, #0x10
0xffff8bd193d4   148  sub csp, jssp, #0x10 (16)
0xffff8bd193d8   152  stp fp, lr, [jssp, #-16]!
0xffff8bd193dc   156  bl #+0x4 (addr 0xffff8bd193e0)
0xffff8bd193e0   160  movz x17, #0xa00000000
0xffff8bd193e4   164  sub csp, jssp, #0x10 (16)
0xffff8bd193e8   168  stp x17, cp, [jssp, #-16]!
0xffff8bd193ec   172  add fp, jssp, #0x10 (16)
0xffff8bd193f0   176  ldr x17, pc+24 (addr 0x0000ffff8bd19408)    ;; lazy deoptimization bailout 0
0xffff8bd193f4   180  add x17, x17, x16
0xffff8bd193f8   184  br x17
0xffff8bd193fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd19400   192  d63f03e0       constant
0xffff8bd19404   196  d503201f       constant
0xffff8bd19408   200  8bb06000       constant
0xffff8bd1940c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd193f0  runtime entry
0xffff8bd193fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd19340     0  ldur x5, [x1, #15]
0xffff8bd19344     4  ldur w6, [x1, #27]
0xffff8bd19348     8  tbnz w2, #0, #+0x40 (addr 0xffff8bd19388)
0xffff8bd1934c    12  asr x8, x2, #32
0xffff8bd19350    16  cmp w8, w6
0xffff8bd19354    20  b.hs #+0x5c (addr 0xffff8bd193b0)
0xffff8bd19358    24  tbz w0, #0, #+0x1c (addr 0xffff8bd19374)
0xffff8bd1935c    28  ldur x16, [x0, #-1]
0xffff8bd19360    32  ldr x17, [x26, #120]
0xffff8bd19364    36  cmp x16, x17
0xffff8bd19368    40  b.ne #+0x58 (addr 0xffff8bd193c0)
0xffff8bd1936c    44  ldur d0, [x0, #7]
0xffff8bd19370    48  b #+0x8 (addr 0xffff8bd19378)
0xffff8bd19374    52  scvtf d0, x0, #32
0xffff8bd19378    56  add x1, x5, #0xf (15)
0xffff8bd1937c    60  fsub d29, d0, d15
0xffff8bd19380    64  str d29, [x1, w8, sxtw #3]
0xffff8bd19384    68  ret
0xffff8bd19388    72  ldur x16, [x2, #-1]
0xffff8bd1938c    76  ldr x17, [x26, #120]
0xffff8bd19390    80  cmp x16, x17
0xffff8bd19394    84  b.ne #+0x3c (addr 0xffff8bd193d0)
0xffff8bd19398    88  ldur d29, [x2, #7]
0xffff8bd1939c    92  fcvtzs w8, d29
0xffff8bd193a0    96  scvtf d0, w8
0xffff8bd193a4   100  fcmp d29, d0
0xffff8bd193a8   104  b.ne #+0x28 (addr 0xffff8bd193d0)
0xffff8bd193ac   108  b #-0x5c (addr 0xffff8bd19350)
0xffff8bd193b0   112  movz x16, #0x0
0xffff8bd193b4   116  sub csp, jssp, #0x10 (16)
0xffff8bd193b8   120  stp fp, lr, [jssp, #-16]!
0xffff8bd193bc   124  bl #+0x24 (addr 0xffff8bd193e0)
0xffff8bd193c0   128  movz x16, #0x8
0xffff8bd193c4   132  sub csp, jssp, #0x10 (16)
0xffff8bd193c8   136  stp fp, lr, [jssp, #-16]!
0xffff8bd193cc   140  bl #+0x14 (addr 0xffff8bd193e0)
0xffff8bd193d0   144  movz x16, #0x10
0xffff8bd193d4   148  sub csp, jssp, #0x10 (16)
0xffff8bd193d8   152  stp fp, lr, [jssp, #-16]!
0xffff8bd193dc   156  bl #+0x4 (addr 0xffff8bd193e0)
0xffff8bd193e0   160  movz x17, #0xa00000000
0xffff8bd193e4   164  sub csp, jssp, #0x10 (16)
0xffff8bd193e8   168  stp x17, cp, [jssp, #-16]!
0xffff8bd193ec   172  add fp, jssp, #0x10 (16)
0xffff8bd193f0   176  ldr x17, pc+24 (addr 0x0000ffff8bd19408)    ;; lazy deoptimization bailout 0
0xffff8bd193f4   180  add x17, x17, x16
0xffff8bd193f8   184  br x17
0xffff8bd193fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd19400   192  d63f03e0       constant
0xffff8bd19404   196  d503201f       constant
0xffff8bd19408   200  8bb06000       constant
0xffff8bd1940c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd193f0  runtime entry
0xffff8bd193fc  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 853)
0xffff8bd19480     0  ldur x5, [x1, #15]
0xffff8bd19484     4  ldur w6, [x1, #27]
0xffff8bd19488     8  tbz w0, #0, #+0x1c (addr 0xffff8bd194a4)
0xffff8bd1948c    12  ldur x16, [x0, #-1]
0xffff8bd19490    16  ldr x17, [x26, #120]
0xffff8bd19494    20  cmp x16, x17
0xffff8bd19498    24  b.ne #+0x298 (addr 0xffff8bd19730)
0xffff8bd1949c    28  ldur d0, [x0, #7]
0xffff8bd194a0    32  b #+0x8 (addr 0xffff8bd194a8)
0xffff8bd194a4    36  scvtf d0, x0, #32
0xffff8bd194a8    40  tbnz w2, #0, #+0x11c (addr 0xffff8bd195c4)
0xffff8bd194ac    44  asr x8, x2, #32
0xffff8bd194b0    48  cmp w6, w8
0xffff8bd194b4    52  b.eq #+0x10 (addr 0xffff8bd194c4)
0xffff8bd194b8    56  cmp w8, w6
0xffff8bd194bc    60  b.hs #+0x284 (addr 0xffff8bd19740)
0xffff8bd194c0    64  b #+0xf4 (addr 0xffff8bd195b4)
0xffff8bd194c4    68  ldur w7, [x5, #11]
0xffff8bd194c8    72  cmp w7, w8
0xffff8bd194cc    76  b.gt #+0xdc (addr 0xffff8bd195a8)
0xffff8bd194d0    80  adds w7, w7, #0x400 (1024)
0xffff8bd194d4    84  b.vs #+0x27c (addr 0xffff8bd19750)
0xffff8bd194d8    88  cmp w8, w7
0xffff8bd194dc    92  b.hs #+0x284 (addr 0xffff8bd19760)
0xffff8bd194e0    96  tbnz w2, #0, #+0x12c (addr 0xffff8bd1960c)
0xffff8bd194e4   100  asr x9, x2, #32
0xffff8bd194e8   104  add w7, w8, w9, lsr #1
0xffff8bd194ec   108  add w7, w7, #0x10 (16)
0xffff8bd194f0   112  movz w16, #0x95ff
0xffff8bd194f4   116  cmp w7, w16, lsl #1
0xffff8bd194f8   120  b.hs #+0x278 (addr 0xffff8bd19770)
0xffff8bd194fc   124  lsl x2, x7, #32
0xffff8bd19500   128  lsl w3, w7, #3
0xffff8bd19504   132  add w3, w3, #0x10 (16)
0xffff8bd19508   136  sxtw x3, w3
0xffff8bd1950c   140  movz x4, #0xe2c0
0xffff8bd19510   144  movk x4, #0x2cb8, lsl #16
0xffff8bd19514   148  ldp x9, x16, [x4]
0xffff8bd19518   152  adds x7, x9, x3
0xffff8bd1951c   156  ccmp x7, x16, #nzCv, lo
0xffff8bd19520   160  b.hi #+0x16c (addr 0xffff8bd1968c)
0xffff8bd19524   164  str x7, [x4]
0xffff8bd19528   168  orr x9, x9, #0x1
0xffff8bd1952c   172  ldr x3, pc+468 (addr 0x0000ffff8bd19700)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19530   176  stur x3, [x9, #-1]
0xffff8bd19534   180  stur x2, [x9, #7]
0xffff8bd19538   184  ldr d1, pc+448 (addr 0x0000ffff8bd196f8)
0xffff8bd1953c   188  ldur w2, [x9, #11]
0xffff8bd19540   192  cmp w6, w2
0xffff8bd19544   196  b.ge #+0x14 (addr 0xffff8bd19558)
0xffff8bd19548   200  sub w2, w2, #0x1 (1)
0xffff8bd1954c   204  add x3, x9, #0xf (15)
0xffff8bd19550   208  str d1, [x3, w2, sxtw #3]
0xffff8bd19554   212  b #-0x14 (addr 0xffff8bd19540)
0xffff8bd19558   216  cmp w6, #0x0 (0)
0xffff8bd1955c   220  b.le #+0x1c (addr 0xffff8bd19578)
0xffff8bd19560   224  sub w6, w6, #0x1 (1)
0xffff8bd19564   228  add x2, x5, #0xf (15)
0xffff8bd19568   232  ldr d1, [x2, w6, sxtw #3]
0xffff8bd1956c   236  add x2, x9, #0xf (15)
0xffff8bd19570   240  str d1, [x2, w6, sxtw #3]
0xffff8bd19574   244  b #-0x1c (addr 0xffff8bd19558)
0xffff8bd19578   248  mov x2, x9
0xffff8bd1957c   252  stur x2, [x1, #15]
0xffff8bd19580   256  add x3, x1, #0xf (15)
0xffff8bd19584   260  and x2, x1, #0xfffffffffff00000
0xffff8bd19588   264  ldr x2, [x2, #8]
0xffff8bd1958c   268  tbz w2, #2, #+0x18 (addr 0xffff8bd195a4)
0xffff8bd19590   272  sub csp, jssp, #0x8 (8)
0xffff8bd19594   276  str lr, [jssp, #-8]!
0xffff8bd19598   280  ldr x16, pc+368 (addr 0x0000ffff8bd19708)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd1959c   284  blr x16
0xffff8bd195a0   288  ldr lr, [jssp], #8
0xffff8bd195a4   292  mov x5, x9
0xffff8bd195a8   296  add w2, w8, #0x1 (1)
0xffff8bd195ac   300  lsl x2, x2, #32
0xffff8bd195b0   304  stur x2, [x1, #23]
0xffff8bd195b4   308  add x1, x5, #0xf (15)
0xffff8bd195b8   312  fsub d29, d0, d15
0xffff8bd195bc   316  str d29, [x1, w8, sxtw #3]
0xffff8bd195c0   320  ret
0xffff8bd195c4   324  sub csp, jssp, #0x10 (16)
0xffff8bd195c8   328  stp fp, lr, [jssp, #-16]!
0xffff8bd195cc   332  movz fp, #0xa00000000
0xffff8bd195d0   336  sub csp, jssp, #0x8 (8)
0xffff8bd195d4   340  str fp, [jssp, #-8]!
0xffff8bd195d8   344  add fp, jssp, #0x8 (8)
0xffff8bd195dc   348  ldur x16, [x2, #-1]
0xffff8bd195e0   352  ldr x17, [x26, #120]
0xffff8bd195e4   356  cmp x16, x17
0xffff8bd195e8   360  b.ne #+0x198 (addr 0xffff8bd19780)
0xffff8bd195ec   364  ldur d29, [x2, #7]
0xffff8bd195f0   368  fcvtzs w8, d29
0xffff8bd195f4   372  scvtf d1, w8
0xffff8bd195f8   376  fcmp d29, d1
0xffff8bd195fc   380  b.ne #+0x184 (addr 0xffff8bd19780)
0xffff8bd19600   384  ldr lr, [jssp, #16]
0xffff8bd19604   388  ldp xzr, fp, [jssp], #24
0xffff8bd19608   392  b #-0x158 (addr 0xffff8bd194b0)
0xffff8bd1960c   396  sub csp, jssp, #0x10 (16)
0xffff8bd19610   400  stp fp, lr, [jssp, #-16]!
0xffff8bd19614   404  movz fp, #0xa00000000
0xffff8bd19618   408  sub csp, jssp, #0x8 (8)
0xffff8bd1961c   412  str fp, [jssp, #-8]!
0xffff8bd19620   416  add fp, jssp, #0x8 (8)
0xffff8bd19624   420  ldur x16, [x2, #-1]
0xffff8bd19628   424  ldr x17, [x26, #120]
0xffff8bd1962c   428  cmp x16, x17
0xffff8bd19630   432  b.ne #+0x30 (addr 0xffff8bd19660)
0xffff8bd19634   436  ldur d30, [x2, #7]
0xffff8bd19638   440  fcvtzs x9, d30
0xffff8bd1963c   444  cmp x9, #0x1 (1)
0xffff8bd19640   448  ccmn x9, #1, #nzcV, vc
0xffff8bd19644   452  b.vc #+0x18 (addr 0xffff8bd1965c)
0xffff8bd19648   456  sub csp, jssp, #0x8 (8)
0xffff8bd1964c   460  str lr, [jssp, #-8]!
0xffff8bd19650   464  ldr x16, pc+192 (addr 0x0000ffff8bd19710)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff8bd19654   468  blr x16
0xffff8bd19658   472  ldr lr, [jssp], #8
0xffff8bd1965c   476  b #+0x24 (addr 0xffff8bd19680)
0xffff8bd19660   480  ldp x9, x7, [x26, #64]
0xffff8bd19664   484  cmp x2, x9
0xffff8bd19668   488  cset x9, eq
0xffff8bd1966c   492  ccmp x2, x7, #nZcv, ne
0xffff8bd19670   496  b.eq #+0x10 (addr 0xffff8bd19680)
0xffff8bd19674   500  ldr x16, [x26, #40]
0xffff8bd19678   504  cmp x2, x16
0xffff8bd1967c   508  b.ne #+0x10c (addr 0xffff8bd19788)
0xffff8bd19680   512  ldr lr, [jssp, #16]
0xffff8bd19684   516  ldp xzr, fp, [jssp], #24
0xffff8bd19688   520  b #-0x1a0 (addr 0xffff8bd194e8)
0xffff8bd1968c   524  sub csp, jssp, #0x10 (16)
0xffff8bd19690   528  stp fp, lr, [jssp, #-16]!
0xffff8bd19694   532  movz fp, #0xa00000000
0xffff8bd19698   536  sub csp, jssp, #0x8 (8)
0xffff8bd1969c   540  str fp, [jssp, #-8]!
0xffff8bd196a0   544  add fp, jssp, #0x8 (8)
0xffff8bd196a4   548  movz x9, #0x0
0xffff8bd196a8   552  mov x16, lr
0xffff8bd196ac   556  ldr x17, pc+108 (addr 0x0000ffff8bd19718)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd196b0   560  blr x17
0xffff8bd196b4   564  lsl x0, x3, #32
0xffff8bd196b8   568  movz x10, #0x100000000
0xffff8bd196bc   572  sub csp, jssp, #0x10 (16)
0xffff8bd196c0   576  stp x10, x0, [jssp, #-16]!
0xffff8bd196c4   580  movz x0, #0x2
0xffff8bd196c8   584  movz x1, #0x5b88
0xffff8bd196cc   588  movk x1, #0xe2, lsl #16
0xffff8bd196d0   592  ldr x16, pc+80 (addr 0x0000ffff8bd19720)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd196d4   596  blr x16
0xffff8bd196d8   600  str x0, [jssp, #72]
0xffff8bd196dc   604  ldr x16, pc+76 (addr 0x0000ffff8bd19728)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd196e0   608  blr x16
0xffff8bd196e4   612  ldr lr, [jssp, #16]
0xffff8bd196e8   616  ldp xzr, fp, [jssp], #24
0xffff8bd196ec   620  b #-0x1c0 (addr 0xffff8bd1952c)
0xffff8bd196f0   624  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd196f4   628  d63f03e0       constant
0xffff8bd196f8   632  fff7ffff       constant
0xffff8bd196fc   636  fff7ffff       constant
0xffff8bd19700   640  5f5052d9       constant
0xffff8bd19704   644  00000000       constant
0xffff8bd19708   648  8bd170c0       constant
0xffff8bd1970c   652  0000ffff       constant
0xffff8bd19710   656  8bd178a0       constant
0xffff8bd19714   660  0000ffff       constant
0xffff8bd19718   664  8bd06820       constant
0xffff8bd1971c   668  0000ffff       constant
0xffff8bd19720   672  8bd06260       constant
0xffff8bd19724   676  0000ffff       constant
0xffff8bd19728   680  8bd068e0       constant
0xffff8bd1972c   684  0000ffff       constant
0xffff8bd19730   688  movz x16, #0x0
0xffff8bd19734   692  sub csp, jssp, #0x10 (16)
0xffff8bd19738   696  stp fp, lr, [jssp, #-16]!
0xffff8bd1973c   700  bl #+0x54 (addr 0xffff8bd19790)
0xffff8bd19740   704  movz x16, #0x8
0xffff8bd19744   708  sub csp, jssp, #0x10 (16)
0xffff8bd19748   712  stp fp, lr, [jssp, #-16]!
0xffff8bd1974c   716  bl #+0x44 (addr 0xffff8bd19790)
0xffff8bd19750   720  movz x16, #0x10
0xffff8bd19754   724  sub csp, jssp, #0x10 (16)
0xffff8bd19758   728  stp fp, lr, [jssp, #-16]!
0xffff8bd1975c   732  bl #+0x34 (addr 0xffff8bd19790)
0xffff8bd19760   736  movz x16, #0x18
0xffff8bd19764   740  sub csp, jssp, #0x10 (16)
0xffff8bd19768   744  stp fp, lr, [jssp, #-16]!
0xffff8bd1976c   748  bl #+0x24 (addr 0xffff8bd19790)
0xffff8bd19770   752  movz x16, #0x20
0xffff8bd19774   756  sub csp, jssp, #0x10 (16)
0xffff8bd19778   760  stp fp, lr, [jssp, #-16]!
0xffff8bd1977c   764  bl #+0x14 (addr 0xffff8bd19790)
0xffff8bd19780   768  movz x16, #0x28
0xffff8bd19784   772  bl #+0x1c (addr 0xffff8bd197a0)
0xffff8bd19788   776  movz x16, #0x30
0xffff8bd1978c   780  bl #+0x14 (addr 0xffff8bd197a0)
0xffff8bd19790   784  movz x17, #0xa00000000
0xffff8bd19794   788  sub csp, jssp, #0x10 (16)
0xffff8bd19798   792  stp x17, cp, [jssp, #-16]!
0xffff8bd1979c   796  add fp, jssp, #0x10 (16)
0xffff8bd197a0   800  ldr x17, pc+24 (addr 0x0000ffff8bd197b8)    ;; lazy deoptimization bailout 0
0xffff8bd197a4   804  add x17, x17, x16
0xffff8bd197a8   808  br x17
0xffff8bd197ac   812  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd197b0   816  d63f03e0       constant
0xffff8bd197b4   820  d503201f       constant
0xffff8bd197b8   824  8bb06000       constant
0xffff8bd197bc   828  0000ffff       constant


Safepoints (size = 21)
0xffff8bd196d8   600  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bd1952c  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19598  code target (STUB)  (0xffff8bd170c0)
0xffff8bd19650  code target (STUB)  (0xffff8bd178a0)
0xffff8bd196ac  code target (STUB)  (0xffff8bd06820)
0xffff8bd196d0  code target (STUB)  (0xffff8bd06260)
0xffff8bd196dc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd196f0  constant pool (size 64)
0xffff8bd197a0  runtime entry
0xffff8bd197ac  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 853)
0xffff8bd19480     0  ldur x5, [x1, #15]
0xffff8bd19484     4  ldur w6, [x1, #27]
0xffff8bd19488     8  tbz w0, #0, #+0x1c (addr 0xffff8bd194a4)
0xffff8bd1948c    12  ldur x16, [x0, #-1]
0xffff8bd19490    16  ldr x17, [x26, #120]
0xffff8bd19494    20  cmp x16, x17
0xffff8bd19498    24  b.ne #+0x298 (addr 0xffff8bd19730)
0xffff8bd1949c    28  ldur d0, [x0, #7]
0xffff8bd194a0    32  b #+0x8 (addr 0xffff8bd194a8)
0xffff8bd194a4    36  scvtf d0, x0, #32
0xffff8bd194a8    40  tbnz w2, #0, #+0x11c (addr 0xffff8bd195c4)
0xffff8bd194ac    44  asr x8, x2, #32
0xffff8bd194b0    48  cmp w6, w8
0xffff8bd194b4    52  b.eq #+0x10 (addr 0xffff8bd194c4)
0xffff8bd194b8    56  cmp w8, w6
0xffff8bd194bc    60  b.hs #+0x284 (addr 0xffff8bd19740)
0xffff8bd194c0    64  b #+0xf4 (addr 0xffff8bd195b4)
0xffff8bd194c4    68  ldur w7, [x5, #11]
0xffff8bd194c8    72  cmp w7, w8
0xffff8bd194cc    76  b.gt #+0xdc (addr 0xffff8bd195a8)
0xffff8bd194d0    80  adds w7, w7, #0x400 (1024)
0xffff8bd194d4    84  b.vs #+0x27c (addr 0xffff8bd19750)
0xffff8bd194d8    88  cmp w8, w7
0xffff8bd194dc    92  b.hs #+0x284 (addr 0xffff8bd19760)
0xffff8bd194e0    96  tbnz w2, #0, #+0x12c (addr 0xffff8bd1960c)
0xffff8bd194e4   100  asr x9, x2, #32
0xffff8bd194e8   104  add w7, w8, w9, lsr #1
0xffff8bd194ec   108  add w7, w7, #0x10 (16)
0xffff8bd194f0   112  movz w16, #0x95ff
0xffff8bd194f4   116  cmp w7, w16, lsl #1
0xffff8bd194f8   120  b.hs #+0x278 (addr 0xffff8bd19770)
0xffff8bd194fc   124  lsl x2, x7, #32
0xffff8bd19500   128  lsl w3, w7, #3
0xffff8bd19504   132  add w3, w3, #0x10 (16)
0xffff8bd19508   136  sxtw x3, w3
0xffff8bd1950c   140  movz x4, #0xe2c0
0xffff8bd19510   144  movk x4, #0x2cb8, lsl #16
0xffff8bd19514   148  ldp x9, x16, [x4]
0xffff8bd19518   152  adds x7, x9, x3
0xffff8bd1951c   156  ccmp x7, x16, #nzCv, lo
0xffff8bd19520   160  b.hi #+0x16c (addr 0xffff8bd1968c)
0xffff8bd19524   164  str x7, [x4]
0xffff8bd19528   168  orr x9, x9, #0x1
0xffff8bd1952c   172  ldr x3, pc+468 (addr 0x0000ffff8bd19700)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19530   176  stur x3, [x9, #-1]
0xffff8bd19534   180  stur x2, [x9, #7]
0xffff8bd19538   184  ldr d1, pc+448 (addr 0x0000ffff8bd196f8)
0xffff8bd1953c   188  ldur w2, [x9, #11]
0xffff8bd19540   192  cmp w6, w2
0xffff8bd19544   196  b.ge #+0x14 (addr 0xffff8bd19558)
0xffff8bd19548   200  sub w2, w2, #0x1 (1)
0xffff8bd1954c   204  add x3, x9, #0xf (15)
0xffff8bd19550   208  str d1, [x3, w2, sxtw #3]
0xffff8bd19554   212  b #-0x14 (addr 0xffff8bd19540)
0xffff8bd19558   216  cmp w6, #0x0 (0)
0xffff8bd1955c   220  b.le #+0x1c (addr 0xffff8bd19578)
0xffff8bd19560   224  sub w6, w6, #0x1 (1)
0xffff8bd19564   228  add x2, x5, #0xf (15)
0xffff8bd19568   232  ldr d1, [x2, w6, sxtw #3]
0xffff8bd1956c   236  add x2, x9, #0xf (15)
0xffff8bd19570   240  str d1, [x2, w6, sxtw #3]
0xffff8bd19574   244  b #-0x1c (addr 0xffff8bd19558)
0xffff8bd19578   248  mov x2, x9
0xffff8bd1957c   252  stur x2, [x1, #15]
0xffff8bd19580   256  add x3, x1, #0xf (15)
0xffff8bd19584   260  and x2, x1, #0xfffffffffff00000
0xffff8bd19588   264  ldr x2, [x2, #8]
0xffff8bd1958c   268  tbz w2, #2, #+0x18 (addr 0xffff8bd195a4)
0xffff8bd19590   272  sub csp, jssp, #0x8 (8)
0xffff8bd19594   276  str lr, [jssp, #-8]!
0xffff8bd19598   280  ldr x16, pc+368 (addr 0x0000ffff8bd19708)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd1959c   284  blr x16
0xffff8bd195a0   288  ldr lr, [jssp], #8
0xffff8bd195a4   292  mov x5, x9
0xffff8bd195a8   296  add w2, w8, #0x1 (1)
0xffff8bd195ac   300  lsl x2, x2, #32
0xffff8bd195b0   304  stur x2, [x1, #23]
0xffff8bd195b4   308  add x1, x5, #0xf (15)
0xffff8bd195b8   312  fsub d29, d0, d15
0xffff8bd195bc   316  str d29, [x1, w8, sxtw #3]
0xffff8bd195c0   320  ret
0xffff8bd195c4   324  sub csp, jssp, #0x10 (16)
0xffff8bd195c8   328  stp fp, lr, [jssp, #-16]!
0xffff8bd195cc   332  movz fp, #0xa00000000
0xffff8bd195d0   336  sub csp, jssp, #0x8 (8)
0xffff8bd195d4   340  str fp, [jssp, #-8]!
0xffff8bd195d8   344  add fp, jssp, #0x8 (8)
0xffff8bd195dc   348  ldur x16, [x2, #-1]
0xffff8bd195e0   352  ldr x17, [x26, #120]
0xffff8bd195e4   356  cmp x16, x17
0xffff8bd195e8   360  b.ne #+0x198 (addr 0xffff8bd19780)
0xffff8bd195ec   364  ldur d29, [x2, #7]
0xffff8bd195f0   368  fcvtzs w8, d29
0xffff8bd195f4   372  scvtf d1, w8
0xffff8bd195f8   376  fcmp d29, d1
0xffff8bd195fc   380  b.ne #+0x184 (addr 0xffff8bd19780)
0xffff8bd19600   384  ldr lr, [jssp, #16]
0xffff8bd19604   388  ldp xzr, fp, [jssp], #24
0xffff8bd19608   392  b #-0x158 (addr 0xffff8bd194b0)
0xffff8bd1960c   396  sub csp, jssp, #0x10 (16)
0xffff8bd19610   400  stp fp, lr, [jssp, #-16]!
0xffff8bd19614   404  movz fp, #0xa00000000
0xffff8bd19618   408  sub csp, jssp, #0x8 (8)
0xffff8bd1961c   412  str fp, [jssp, #-8]!
0xffff8bd19620   416  add fp, jssp, #0x8 (8)
0xffff8bd19624   420  ldur x16, [x2, #-1]
0xffff8bd19628   424  ldr x17, [x26, #120]
0xffff8bd1962c   428  cmp x16, x17
0xffff8bd19630   432  b.ne #+0x30 (addr 0xffff8bd19660)
0xffff8bd19634   436  ldur d30, [x2, #7]
0xffff8bd19638   440  fcvtzs x9, d30
0xffff8bd1963c   444  cmp x9, #0x1 (1)
0xffff8bd19640   448  ccmn x9, #1, #nzcV, vc
0xffff8bd19644   452  b.vc #+0x18 (addr 0xffff8bd1965c)
0xffff8bd19648   456  sub csp, jssp, #0x8 (8)
0xffff8bd1964c   460  str lr, [jssp, #-8]!
0xffff8bd19650   464  ldr x16, pc+192 (addr 0x0000ffff8bd19710)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff8bd19654   468  blr x16
0xffff8bd19658   472  ldr lr, [jssp], #8
0xffff8bd1965c   476  b #+0x24 (addr 0xffff8bd19680)
0xffff8bd19660   480  ldp x9, x7, [x26, #64]
0xffff8bd19664   484  cmp x2, x9
0xffff8bd19668   488  cset x9, eq
0xffff8bd1966c   492  ccmp x2, x7, #nZcv, ne
0xffff8bd19670   496  b.eq #+0x10 (addr 0xffff8bd19680)
0xffff8bd19674   500  ldr x16, [x26, #40]
0xffff8bd19678   504  cmp x2, x16
0xffff8bd1967c   508  b.ne #+0x10c (addr 0xffff8bd19788)
0xffff8bd19680   512  ldr lr, [jssp, #16]
0xffff8bd19684   516  ldp xzr, fp, [jssp], #24
0xffff8bd19688   520  b #-0x1a0 (addr 0xffff8bd194e8)
0xffff8bd1968c   524  sub csp, jssp, #0x10 (16)
0xffff8bd19690   528  stp fp, lr, [jssp, #-16]!
0xffff8bd19694   532  movz fp, #0xa00000000
0xffff8bd19698   536  sub csp, jssp, #0x8 (8)
0xffff8bd1969c   540  str fp, [jssp, #-8]!
0xffff8bd196a0   544  add fp, jssp, #0x8 (8)
0xffff8bd196a4   548  movz x9, #0x0
0xffff8bd196a8   552  mov x16, lr
0xffff8bd196ac   556  ldr x17, pc+108 (addr 0x0000ffff8bd19718)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd196b0   560  blr x17
0xffff8bd196b4   564  lsl x0, x3, #32
0xffff8bd196b8   568  movz x10, #0x100000000
0xffff8bd196bc   572  sub csp, jssp, #0x10 (16)
0xffff8bd196c0   576  stp x10, x0, [jssp, #-16]!
0xffff8bd196c4   580  movz x0, #0x2
0xffff8bd196c8   584  movz x1, #0x5b88
0xffff8bd196cc   588  movk x1, #0xe2, lsl #16
0xffff8bd196d0   592  ldr x16, pc+80 (addr 0x0000ffff8bd19720)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd196d4   596  blr x16
0xffff8bd196d8   600  str x0, [jssp, #72]
0xffff8bd196dc   604  ldr x16, pc+76 (addr 0x0000ffff8bd19728)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd196e0   608  blr x16
0xffff8bd196e4   612  ldr lr, [jssp, #16]
0xffff8bd196e8   616  ldp xzr, fp, [jssp], #24
0xffff8bd196ec   620  b #-0x1c0 (addr 0xffff8bd1952c)
0xffff8bd196f0   624  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd196f4   628  d63f03e0       constant
0xffff8bd196f8   632  fff7ffff       constant
0xffff8bd196fc   636  fff7ffff       constant
0xffff8bd19700   640  5f5052d9       constant
0xffff8bd19704   644  00000000       constant
0xffff8bd19708   648  8bd170c0       constant
0xffff8bd1970c   652  0000ffff       constant
0xffff8bd19710   656  8bd178a0       constant
0xffff8bd19714   660  0000ffff       constant
0xffff8bd19718   664  8bd06820       constant
0xffff8bd1971c   668  0000ffff       constant
0xffff8bd19720   672  8bd06260       constant
0xffff8bd19724   676  0000ffff       constant
0xffff8bd19728   680  8bd068e0       constant
0xffff8bd1972c   684  0000ffff       constant
0xffff8bd19730   688  movz x16, #0x0
0xffff8bd19734   692  sub csp, jssp, #0x10 (16)
0xffff8bd19738   696  stp fp, lr, [jssp, #-16]!
0xffff8bd1973c   700  bl #+0x54 (addr 0xffff8bd19790)
0xffff8bd19740   704  movz x16, #0x8
0xffff8bd19744   708  sub csp, jssp, #0x10 (16)
0xffff8bd19748   712  stp fp, lr, [jssp, #-16]!
0xffff8bd1974c   716  bl #+0x44 (addr 0xffff8bd19790)
0xffff8bd19750   720  movz x16, #0x10
0xffff8bd19754   724  sub csp, jssp, #0x10 (16)
0xffff8bd19758   728  stp fp, lr, [jssp, #-16]!
0xffff8bd1975c   732  bl #+0x34 (addr 0xffff8bd19790)
0xffff8bd19760   736  movz x16, #0x18
0xffff8bd19764   740  sub csp, jssp, #0x10 (16)
0xffff8bd19768   744  stp fp, lr, [jssp, #-16]!
0xffff8bd1976c   748  bl #+0x24 (addr 0xffff8bd19790)
0xffff8bd19770   752  movz x16, #0x20
0xffff8bd19774   756  sub csp, jssp, #0x10 (16)
0xffff8bd19778   760  stp fp, lr, [jssp, #-16]!
0xffff8bd1977c   764  bl #+0x14 (addr 0xffff8bd19790)
0xffff8bd19780   768  movz x16, #0x28
0xffff8bd19784   772  bl #+0x1c (addr 0xffff8bd197a0)
0xffff8bd19788   776  movz x16, #0x30
0xffff8bd1978c   780  bl #+0x14 (addr 0xffff8bd197a0)
0xffff8bd19790   784  movz x17, #0xa00000000
0xffff8bd19794   788  sub csp, jssp, #0x10 (16)
0xffff8bd19798   792  stp x17, cp, [jssp, #-16]!
0xffff8bd1979c   796  add fp, jssp, #0x10 (16)
0xffff8bd197a0   800  ldr x17, pc+24 (addr 0x0000ffff8bd197b8)    ;; lazy deoptimization bailout 0
0xffff8bd197a4   804  add x17, x17, x16
0xffff8bd197a8   808  br x17
0xffff8bd197ac   812  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd197b0   816  d63f03e0       constant
0xffff8bd197b4   820  d503201f       constant
0xffff8bd197b8   824  8bb06000       constant
0xffff8bd197bc   828  0000ffff       constant


Safepoints (size = 21)
0xffff8bd196d8   600  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bd1952c  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19598  code target (STUB)  (0xffff8bd170c0)
0xffff8bd19650  code target (STUB)  (0xffff8bd178a0)
0xffff8bd196ac  code target (STUB)  (0xffff8bd06820)
0xffff8bd196d0  code target (STUB)  (0xffff8bd06260)
0xffff8bd196dc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd196f0  constant pool (size 64)
0xffff8bd197a0  runtime entry
0xffff8bd197ac  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd19840     0  ldur x5, [x1, #15]
0xffff8bd19844     4  ldur w6, [x1, #27]
0xffff8bd19848     8  tbnz w2, #0, #+0x40 (addr 0xffff8bd19888)
0xffff8bd1984c    12  asr x8, x2, #32
0xffff8bd19850    16  cmp w8, w6
0xffff8bd19854    20  b.hs #+0x5c (addr 0xffff8bd198b0)
0xffff8bd19858    24  tbz w0, #0, #+0x1c (addr 0xffff8bd19874)
0xffff8bd1985c    28  ldur x16, [x0, #-1]
0xffff8bd19860    32  ldr x17, [x26, #120]
0xffff8bd19864    36  cmp x16, x17
0xffff8bd19868    40  b.ne #+0x58 (addr 0xffff8bd198c0)
0xffff8bd1986c    44  ldur d0, [x0, #7]
0xffff8bd19870    48  b #+0x8 (addr 0xffff8bd19878)
0xffff8bd19874    52  scvtf d0, x0, #32
0xffff8bd19878    56  add x1, x5, #0xf (15)
0xffff8bd1987c    60  fsub d29, d0, d15
0xffff8bd19880    64  str d29, [x1, w8, sxtw #3]
0xffff8bd19884    68  ret
0xffff8bd19888    72  ldur x16, [x2, #-1]
0xffff8bd1988c    76  ldr x17, [x26, #120]
0xffff8bd19890    80  cmp x16, x17
0xffff8bd19894    84  b.ne #+0x3c (addr 0xffff8bd198d0)
0xffff8bd19898    88  ldur d29, [x2, #7]
0xffff8bd1989c    92  fcvtzs w8, d29
0xffff8bd198a0    96  scvtf d0, w8
0xffff8bd198a4   100  fcmp d29, d0
0xffff8bd198a8   104  b.ne #+0x28 (addr 0xffff8bd198d0)
0xffff8bd198ac   108  b #-0x5c (addr 0xffff8bd19850)
0xffff8bd198b0   112  movz x16, #0x0
0xffff8bd198b4   116  sub csp, jssp, #0x10 (16)
0xffff8bd198b8   120  stp fp, lr, [jssp, #-16]!
0xffff8bd198bc   124  bl #+0x24 (addr 0xffff8bd198e0)
0xffff8bd198c0   128  movz x16, #0x8
0xffff8bd198c4   132  sub csp, jssp, #0x10 (16)
0xffff8bd198c8   136  stp fp, lr, [jssp, #-16]!
0xffff8bd198cc   140  bl #+0x14 (addr 0xffff8bd198e0)
0xffff8bd198d0   144  movz x16, #0x10
0xffff8bd198d4   148  sub csp, jssp, #0x10 (16)
0xffff8bd198d8   152  stp fp, lr, [jssp, #-16]!
0xffff8bd198dc   156  bl #+0x4 (addr 0xffff8bd198e0)
0xffff8bd198e0   160  movz x17, #0xa00000000
0xffff8bd198e4   164  sub csp, jssp, #0x10 (16)
0xffff8bd198e8   168  stp x17, cp, [jssp, #-16]!
0xffff8bd198ec   172  add fp, jssp, #0x10 (16)
0xffff8bd198f0   176  ldr x17, pc+24 (addr 0x0000ffff8bd19908)    ;; lazy deoptimization bailout 0
0xffff8bd198f4   180  add x17, x17, x16
0xffff8bd198f8   184  br x17
0xffff8bd198fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd19900   192  d63f03e0       constant
0xffff8bd19904   196  d503201f       constant
0xffff8bd19908   200  8bb06000       constant
0xffff8bd1990c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd198f0  runtime entry
0xffff8bd198fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd19840     0  ldur x5, [x1, #15]
0xffff8bd19844     4  ldur w6, [x1, #27]
0xffff8bd19848     8  tbnz w2, #0, #+0x40 (addr 0xffff8bd19888)
0xffff8bd1984c    12  asr x8, x2, #32
0xffff8bd19850    16  cmp w8, w6
0xffff8bd19854    20  b.hs #+0x5c (addr 0xffff8bd198b0)
0xffff8bd19858    24  tbz w0, #0, #+0x1c (addr 0xffff8bd19874)
0xffff8bd1985c    28  ldur x16, [x0, #-1]
0xffff8bd19860    32  ldr x17, [x26, #120]
0xffff8bd19864    36  cmp x16, x17
0xffff8bd19868    40  b.ne #+0x58 (addr 0xffff8bd198c0)
0xffff8bd1986c    44  ldur d0, [x0, #7]
0xffff8bd19870    48  b #+0x8 (addr 0xffff8bd19878)
0xffff8bd19874    52  scvtf d0, x0, #32
0xffff8bd19878    56  add x1, x5, #0xf (15)
0xffff8bd1987c    60  fsub d29, d0, d15
0xffff8bd19880    64  str d29, [x1, w8, sxtw #3]
0xffff8bd19884    68  ret
0xffff8bd19888    72  ldur x16, [x2, #-1]
0xffff8bd1988c    76  ldr x17, [x26, #120]
0xffff8bd19890    80  cmp x16, x17
0xffff8bd19894    84  b.ne #+0x3c (addr 0xffff8bd198d0)
0xffff8bd19898    88  ldur d29, [x2, #7]
0xffff8bd1989c    92  fcvtzs w8, d29
0xffff8bd198a0    96  scvtf d0, w8
0xffff8bd198a4   100  fcmp d29, d0
0xffff8bd198a8   104  b.ne #+0x28 (addr 0xffff8bd198d0)
0xffff8bd198ac   108  b #-0x5c (addr 0xffff8bd19850)
0xffff8bd198b0   112  movz x16, #0x0
0xffff8bd198b4   116  sub csp, jssp, #0x10 (16)
0xffff8bd198b8   120  stp fp, lr, [jssp, #-16]!
0xffff8bd198bc   124  bl #+0x24 (addr 0xffff8bd198e0)
0xffff8bd198c0   128  movz x16, #0x8
0xffff8bd198c4   132  sub csp, jssp, #0x10 (16)
0xffff8bd198c8   136  stp fp, lr, [jssp, #-16]!
0xffff8bd198cc   140  bl #+0x14 (addr 0xffff8bd198e0)
0xffff8bd198d0   144  movz x16, #0x10
0xffff8bd198d4   148  sub csp, jssp, #0x10 (16)
0xffff8bd198d8   152  stp fp, lr, [jssp, #-16]!
0xffff8bd198dc   156  bl #+0x4 (addr 0xffff8bd198e0)
0xffff8bd198e0   160  movz x17, #0xa00000000
0xffff8bd198e4   164  sub csp, jssp, #0x10 (16)
0xffff8bd198e8   168  stp x17, cp, [jssp, #-16]!
0xffff8bd198ec   172  add fp, jssp, #0x10 (16)
0xffff8bd198f0   176  ldr x17, pc+24 (addr 0x0000ffff8bd19908)    ;; lazy deoptimization bailout 0
0xffff8bd198f4   180  add x17, x17, x16
0xffff8bd198f8   184  br x17
0xffff8bd198fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd19900   192  d63f03e0       constant
0xffff8bd19904   196  d503201f       constant
0xffff8bd19908   200  8bb06000       constant
0xffff8bd1990c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd198f0  runtime entry
0xffff8bd198fc  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 853)
0xffff8bd19980     0  ldur x5, [x1, #15]
0xffff8bd19984     4  ldur w6, [x1, #27]
0xffff8bd19988     8  tbz w0, #0, #+0x1c (addr 0xffff8bd199a4)
0xffff8bd1998c    12  ldur x16, [x0, #-1]
0xffff8bd19990    16  ldr x17, [x26, #120]
0xffff8bd19994    20  cmp x16, x17
0xffff8bd19998    24  b.ne #+0x298 (addr 0xffff8bd19c30)
0xffff8bd1999c    28  ldur d0, [x0, #7]
0xffff8bd199a0    32  b #+0x8 (addr 0xffff8bd199a8)
0xffff8bd199a4    36  scvtf d0, x0, #32
0xffff8bd199a8    40  tbnz w2, #0, #+0x11c (addr 0xffff8bd19ac4)
0xffff8bd199ac    44  asr x8, x2, #32
0xffff8bd199b0    48  cmp w6, w8
0xffff8bd199b4    52  b.le #+0x10 (addr 0xffff8bd199c4)
0xffff8bd199b8    56  cmp w8, w6
0xffff8bd199bc    60  b.hs #+0x284 (addr 0xffff8bd19c40)
0xffff8bd199c0    64  b #+0xf4 (addr 0xffff8bd19ab4)
0xffff8bd199c4    68  ldur w7, [x5, #11]
0xffff8bd199c8    72  cmp w7, w8
0xffff8bd199cc    76  b.gt #+0xdc (addr 0xffff8bd19aa8)
0xffff8bd199d0    80  adds w7, w7, #0x400 (1024)
0xffff8bd199d4    84  b.vs #+0x27c (addr 0xffff8bd19c50)
0xffff8bd199d8    88  cmp w8, w7
0xffff8bd199dc    92  b.hs #+0x284 (addr 0xffff8bd19c60)
0xffff8bd199e0    96  tbnz w2, #0, #+0x12c (addr 0xffff8bd19b0c)
0xffff8bd199e4   100  asr x9, x2, #32
0xffff8bd199e8   104  add w7, w8, w9, lsr #1
0xffff8bd199ec   108  add w7, w7, #0x10 (16)
0xffff8bd199f0   112  movz w16, #0x95ff
0xffff8bd199f4   116  cmp w7, w16, lsl #1
0xffff8bd199f8   120  b.hs #+0x278 (addr 0xffff8bd19c70)
0xffff8bd199fc   124  lsl x2, x7, #32
0xffff8bd19a00   128  lsl w3, w7, #3
0xffff8bd19a04   132  add w3, w3, #0x10 (16)
0xffff8bd19a08   136  sxtw x3, w3
0xffff8bd19a0c   140  movz x4, #0xe2c0
0xffff8bd19a10   144  movk x4, #0x2cb8, lsl #16
0xffff8bd19a14   148  ldp x9, x16, [x4]
0xffff8bd19a18   152  adds x7, x9, x3
0xffff8bd19a1c   156  ccmp x7, x16, #nzCv, lo
0xffff8bd19a20   160  b.hi #+0x16c (addr 0xffff8bd19b8c)
0xffff8bd19a24   164  str x7, [x4]
0xffff8bd19a28   168  orr x9, x9, #0x1
0xffff8bd19a2c   172  ldr x3, pc+468 (addr 0x0000ffff8bd19c00)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19a30   176  stur x3, [x9, #-1]
0xffff8bd19a34   180  stur x2, [x9, #7]
0xffff8bd19a38   184  ldr d1, pc+448 (addr 0x0000ffff8bd19bf8)
0xffff8bd19a3c   188  ldur w2, [x9, #11]
0xffff8bd19a40   192  cmp w6, w2
0xffff8bd19a44   196  b.ge #+0x14 (addr 0xffff8bd19a58)
0xffff8bd19a48   200  sub w2, w2, #0x1 (1)
0xffff8bd19a4c   204  add x3, x9, #0xf (15)
0xffff8bd19a50   208  str d1, [x3, w2, sxtw #3]
0xffff8bd19a54   212  b #-0x14 (addr 0xffff8bd19a40)
0xffff8bd19a58   216  cmp w6, #0x0 (0)
0xffff8bd19a5c   220  b.le #+0x1c (addr 0xffff8bd19a78)
0xffff8bd19a60   224  sub w6, w6, #0x1 (1)
0xffff8bd19a64   228  add x2, x5, #0xf (15)
0xffff8bd19a68   232  ldr d1, [x2, w6, sxtw #3]
0xffff8bd19a6c   236  add x2, x9, #0xf (15)
0xffff8bd19a70   240  str d1, [x2, w6, sxtw #3]
0xffff8bd19a74   244  b #-0x1c (addr 0xffff8bd19a58)
0xffff8bd19a78   248  mov x2, x9
0xffff8bd19a7c   252  stur x2, [x1, #15]
0xffff8bd19a80   256  add x3, x1, #0xf (15)
0xffff8bd19a84   260  and x2, x1, #0xfffffffffff00000
0xffff8bd19a88   264  ldr x2, [x2, #8]
0xffff8bd19a8c   268  tbz w2, #2, #+0x18 (addr 0xffff8bd19aa4)
0xffff8bd19a90   272  sub csp, jssp, #0x8 (8)
0xffff8bd19a94   276  str lr, [jssp, #-8]!
0xffff8bd19a98   280  ldr x16, pc+368 (addr 0x0000ffff8bd19c08)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd19a9c   284  blr x16
0xffff8bd19aa0   288  ldr lr, [jssp], #8
0xffff8bd19aa4   292  mov x5, x9
0xffff8bd19aa8   296  add w2, w8, #0x1 (1)
0xffff8bd19aac   300  lsl x2, x2, #32
0xffff8bd19ab0   304  stur x2, [x1, #23]
0xffff8bd19ab4   308  add x1, x5, #0xf (15)
0xffff8bd19ab8   312  fsub d29, d0, d15
0xffff8bd19abc   316  str d29, [x1, w8, sxtw #3]
0xffff8bd19ac0   320  ret
0xffff8bd19ac4   324  sub csp, jssp, #0x10 (16)
0xffff8bd19ac8   328  stp fp, lr, [jssp, #-16]!
0xffff8bd19acc   332  movz fp, #0xa00000000
0xffff8bd19ad0   336  sub csp, jssp, #0x8 (8)
0xffff8bd19ad4   340  str fp, [jssp, #-8]!
0xffff8bd19ad8   344  add fp, jssp, #0x8 (8)
0xffff8bd19adc   348  ldur x16, [x2, #-1]
0xffff8bd19ae0   352  ldr x17, [x26, #120]
0xffff8bd19ae4   356  cmp x16, x17
0xffff8bd19ae8   360  b.ne #+0x198 (addr 0xffff8bd19c80)
0xffff8bd19aec   364  ldur d29, [x2, #7]
0xffff8bd19af0   368  fcvtzs w8, d29
0xffff8bd19af4   372  scvtf d1, w8
0xffff8bd19af8   376  fcmp d29, d1
0xffff8bd19afc   380  b.ne #+0x184 (addr 0xffff8bd19c80)
0xffff8bd19b00   384  ldr lr, [jssp, #16]
0xffff8bd19b04   388  ldp xzr, fp, [jssp], #24
0xffff8bd19b08   392  b #-0x158 (addr 0xffff8bd199b0)
0xffff8bd19b0c   396  sub csp, jssp, #0x10 (16)
0xffff8bd19b10   400  stp fp, lr, [jssp, #-16]!
0xffff8bd19b14   404  movz fp, #0xa00000000
0xffff8bd19b18   408  sub csp, jssp, #0x8 (8)
0xffff8bd19b1c   412  str fp, [jssp, #-8]!
0xffff8bd19b20   416  add fp, jssp, #0x8 (8)
0xffff8bd19b24   420  ldur x16, [x2, #-1]
0xffff8bd19b28   424  ldr x17, [x26, #120]
0xffff8bd19b2c   428  cmp x16, x17
0xffff8bd19b30   432  b.ne #+0x30 (addr 0xffff8bd19b60)
0xffff8bd19b34   436  ldur d30, [x2, #7]
0xffff8bd19b38   440  fcvtzs x9, d30
0xffff8bd19b3c   444  cmp x9, #0x1 (1)
0xffff8bd19b40   448  ccmn x9, #1, #nzcV, vc
0xffff8bd19b44   452  b.vc #+0x18 (addr 0xffff8bd19b5c)
0xffff8bd19b48   456  sub csp, jssp, #0x8 (8)
0xffff8bd19b4c   460  str lr, [jssp, #-8]!
0xffff8bd19b50   464  ldr x16, pc+192 (addr 0x0000ffff8bd19c10)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff8bd19b54   468  blr x16
0xffff8bd19b58   472  ldr lr, [jssp], #8
0xffff8bd19b5c   476  b #+0x24 (addr 0xffff8bd19b80)
0xffff8bd19b60   480  ldp x9, x7, [x26, #64]
0xffff8bd19b64   484  cmp x2, x9
0xffff8bd19b68   488  cset x9, eq
0xffff8bd19b6c   492  ccmp x2, x7, #nZcv, ne
0xffff8bd19b70   496  b.eq #+0x10 (addr 0xffff8bd19b80)
0xffff8bd19b74   500  ldr x16, [x26, #40]
0xffff8bd19b78   504  cmp x2, x16
0xffff8bd19b7c   508  b.ne #+0x10c (addr 0xffff8bd19c88)
0xffff8bd19b80   512  ldr lr, [jssp, #16]
0xffff8bd19b84   516  ldp xzr, fp, [jssp], #24
0xffff8bd19b88   520  b #-0x1a0 (addr 0xffff8bd199e8)
0xffff8bd19b8c   524  sub csp, jssp, #0x10 (16)
0xffff8bd19b90   528  stp fp, lr, [jssp, #-16]!
0xffff8bd19b94   532  movz fp, #0xa00000000
0xffff8bd19b98   536  sub csp, jssp, #0x8 (8)
0xffff8bd19b9c   540  str fp, [jssp, #-8]!
0xffff8bd19ba0   544  add fp, jssp, #0x8 (8)
0xffff8bd19ba4   548  movz x9, #0x0
0xffff8bd19ba8   552  mov x16, lr
0xffff8bd19bac   556  ldr x17, pc+108 (addr 0x0000ffff8bd19c18)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd19bb0   560  blr x17
0xffff8bd19bb4   564  lsl x0, x3, #32
0xffff8bd19bb8   568  movz x10, #0x100000000
0xffff8bd19bbc   572  sub csp, jssp, #0x10 (16)
0xffff8bd19bc0   576  stp x10, x0, [jssp, #-16]!
0xffff8bd19bc4   580  movz x0, #0x2
0xffff8bd19bc8   584  movz x1, #0x5b88
0xffff8bd19bcc   588  movk x1, #0xe2, lsl #16
0xffff8bd19bd0   592  ldr x16, pc+80 (addr 0x0000ffff8bd19c20)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd19bd4   596  blr x16
0xffff8bd19bd8   600  str x0, [jssp, #72]
0xffff8bd19bdc   604  ldr x16, pc+76 (addr 0x0000ffff8bd19c28)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd19be0   608  blr x16
0xffff8bd19be4   612  ldr lr, [jssp, #16]
0xffff8bd19be8   616  ldp xzr, fp, [jssp], #24
0xffff8bd19bec   620  b #-0x1c0 (addr 0xffff8bd19a2c)
0xffff8bd19bf0   624  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd19bf4   628  d63f03e0       constant
0xffff8bd19bf8   632  fff7ffff       constant
0xffff8bd19bfc   636  fff7ffff       constant
0xffff8bd19c00   640  5f5052d9       constant
0xffff8bd19c04   644  00000000       constant
0xffff8bd19c08   648  8bd170c0       constant
0xffff8bd19c0c   652  0000ffff       constant
0xffff8bd19c10   656  8bd178a0       constant
0xffff8bd19c14   660  0000ffff       constant
0xffff8bd19c18   664  8bd06820       constant
0xffff8bd19c1c   668  0000ffff       constant
0xffff8bd19c20   672  8bd06260       constant
0xffff8bd19c24   676  0000ffff       constant
0xffff8bd19c28   680  8bd068e0       constant
0xffff8bd19c2c   684  0000ffff       constant
0xffff8bd19c30   688  movz x16, #0x0
0xffff8bd19c34   692  sub csp, jssp, #0x10 (16)
0xffff8bd19c38   696  stp fp, lr, [jssp, #-16]!
0xffff8bd19c3c   700  bl #+0x54 (addr 0xffff8bd19c90)
0xffff8bd19c40   704  movz x16, #0x8
0xffff8bd19c44   708  sub csp, jssp, #0x10 (16)
0xffff8bd19c48   712  stp fp, lr, [jssp, #-16]!
0xffff8bd19c4c   716  bl #+0x44 (addr 0xffff8bd19c90)
0xffff8bd19c50   720  movz x16, #0x10
0xffff8bd19c54   724  sub csp, jssp, #0x10 (16)
0xffff8bd19c58   728  stp fp, lr, [jssp, #-16]!
0xffff8bd19c5c   732  bl #+0x34 (addr 0xffff8bd19c90)
0xffff8bd19c60   736  movz x16, #0x18
0xffff8bd19c64   740  sub csp, jssp, #0x10 (16)
0xffff8bd19c68   744  stp fp, lr, [jssp, #-16]!
0xffff8bd19c6c   748  bl #+0x24 (addr 0xffff8bd19c90)
0xffff8bd19c70   752  movz x16, #0x20
0xffff8bd19c74   756  sub csp, jssp, #0x10 (16)
0xffff8bd19c78   760  stp fp, lr, [jssp, #-16]!
0xffff8bd19c7c   764  bl #+0x14 (addr 0xffff8bd19c90)
0xffff8bd19c80   768  movz x16, #0x28
0xffff8bd19c84   772  bl #+0x1c (addr 0xffff8bd19ca0)
0xffff8bd19c88   776  movz x16, #0x30
0xffff8bd19c8c   780  bl #+0x14 (addr 0xffff8bd19ca0)
0xffff8bd19c90   784  movz x17, #0xa00000000
0xffff8bd19c94   788  sub csp, jssp, #0x10 (16)
0xffff8bd19c98   792  stp x17, cp, [jssp, #-16]!
0xffff8bd19c9c   796  add fp, jssp, #0x10 (16)
0xffff8bd19ca0   800  ldr x17, pc+24 (addr 0x0000ffff8bd19cb8)    ;; lazy deoptimization bailout 0
0xffff8bd19ca4   804  add x17, x17, x16
0xffff8bd19ca8   808  br x17
0xffff8bd19cac   812  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd19cb0   816  d63f03e0       constant
0xffff8bd19cb4   820  d503201f       constant
0xffff8bd19cb8   824  8bb06000       constant
0xffff8bd19cbc   828  0000ffff       constant


Safepoints (size = 21)
0xffff8bd19bd8   600  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bd19a2c  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19a98  code target (STUB)  (0xffff8bd170c0)
0xffff8bd19b50  code target (STUB)  (0xffff8bd178a0)
0xffff8bd19bac  code target (STUB)  (0xffff8bd06820)
0xffff8bd19bd0  code target (STUB)  (0xffff8bd06260)
0xffff8bd19bdc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd19bf0  constant pool (size 64)
0xffff8bd19ca0  runtime entry
0xffff8bd19cac  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 853)
0xffff8bd19980     0  ldur x5, [x1, #15]
0xffff8bd19984     4  ldur w6, [x1, #27]
0xffff8bd19988     8  tbz w0, #0, #+0x1c (addr 0xffff8bd199a4)
0xffff8bd1998c    12  ldur x16, [x0, #-1]
0xffff8bd19990    16  ldr x17, [x26, #120]
0xffff8bd19994    20  cmp x16, x17
0xffff8bd19998    24  b.ne #+0x298 (addr 0xffff8bd19c30)
0xffff8bd1999c    28  ldur d0, [x0, #7]
0xffff8bd199a0    32  b #+0x8 (addr 0xffff8bd199a8)
0xffff8bd199a4    36  scvtf d0, x0, #32
0xffff8bd199a8    40  tbnz w2, #0, #+0x11c (addr 0xffff8bd19ac4)
0xffff8bd199ac    44  asr x8, x2, #32
0xffff8bd199b0    48  cmp w6, w8
0xffff8bd199b4    52  b.le #+0x10 (addr 0xffff8bd199c4)
0xffff8bd199b8    56  cmp w8, w6
0xffff8bd199bc    60  b.hs #+0x284 (addr 0xffff8bd19c40)
0xffff8bd199c0    64  b #+0xf4 (addr 0xffff8bd19ab4)
0xffff8bd199c4    68  ldur w7, [x5, #11]
0xffff8bd199c8    72  cmp w7, w8
0xffff8bd199cc    76  b.gt #+0xdc (addr 0xffff8bd19aa8)
0xffff8bd199d0    80  adds w7, w7, #0x400 (1024)
0xffff8bd199d4    84  b.vs #+0x27c (addr 0xffff8bd19c50)
0xffff8bd199d8    88  cmp w8, w7
0xffff8bd199dc    92  b.hs #+0x284 (addr 0xffff8bd19c60)
0xffff8bd199e0    96  tbnz w2, #0, #+0x12c (addr 0xffff8bd19b0c)
0xffff8bd199e4   100  asr x9, x2, #32
0xffff8bd199e8   104  add w7, w8, w9, lsr #1
0xffff8bd199ec   108  add w7, w7, #0x10 (16)
0xffff8bd199f0   112  movz w16, #0x95ff
0xffff8bd199f4   116  cmp w7, w16, lsl #1
0xffff8bd199f8   120  b.hs #+0x278 (addr 0xffff8bd19c70)
0xffff8bd199fc   124  lsl x2, x7, #32
0xffff8bd19a00   128  lsl w3, w7, #3
0xffff8bd19a04   132  add w3, w3, #0x10 (16)
0xffff8bd19a08   136  sxtw x3, w3
0xffff8bd19a0c   140  movz x4, #0xe2c0
0xffff8bd19a10   144  movk x4, #0x2cb8, lsl #16
0xffff8bd19a14   148  ldp x9, x16, [x4]
0xffff8bd19a18   152  adds x7, x9, x3
0xffff8bd19a1c   156  ccmp x7, x16, #nzCv, lo
0xffff8bd19a20   160  b.hi #+0x16c (addr 0xffff8bd19b8c)
0xffff8bd19a24   164  str x7, [x4]
0xffff8bd19a28   168  orr x9, x9, #0x1
0xffff8bd19a2c   172  ldr x3, pc+468 (addr 0x0000ffff8bd19c00)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19a30   176  stur x3, [x9, #-1]
0xffff8bd19a34   180  stur x2, [x9, #7]
0xffff8bd19a38   184  ldr d1, pc+448 (addr 0x0000ffff8bd19bf8)
0xffff8bd19a3c   188  ldur w2, [x9, #11]
0xffff8bd19a40   192  cmp w6, w2
0xffff8bd19a44   196  b.ge #+0x14 (addr 0xffff8bd19a58)
0xffff8bd19a48   200  sub w2, w2, #0x1 (1)
0xffff8bd19a4c   204  add x3, x9, #0xf (15)
0xffff8bd19a50   208  str d1, [x3, w2, sxtw #3]
0xffff8bd19a54   212  b #-0x14 (addr 0xffff8bd19a40)
0xffff8bd19a58   216  cmp w6, #0x0 (0)
0xffff8bd19a5c   220  b.le #+0x1c (addr 0xffff8bd19a78)
0xffff8bd19a60   224  sub w6, w6, #0x1 (1)
0xffff8bd19a64   228  add x2, x5, #0xf (15)
0xffff8bd19a68   232  ldr d1, [x2, w6, sxtw #3]
0xffff8bd19a6c   236  add x2, x9, #0xf (15)
0xffff8bd19a70   240  str d1, [x2, w6, sxtw #3]
0xffff8bd19a74   244  b #-0x1c (addr 0xffff8bd19a58)
0xffff8bd19a78   248  mov x2, x9
0xffff8bd19a7c   252  stur x2, [x1, #15]
0xffff8bd19a80   256  add x3, x1, #0xf (15)
0xffff8bd19a84   260  and x2, x1, #0xfffffffffff00000
0xffff8bd19a88   264  ldr x2, [x2, #8]
0xffff8bd19a8c   268  tbz w2, #2, #+0x18 (addr 0xffff8bd19aa4)
0xffff8bd19a90   272  sub csp, jssp, #0x8 (8)
0xffff8bd19a94   276  str lr, [jssp, #-8]!
0xffff8bd19a98   280  ldr x16, pc+368 (addr 0x0000ffff8bd19c08)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd19a9c   284  blr x16
0xffff8bd19aa0   288  ldr lr, [jssp], #8
0xffff8bd19aa4   292  mov x5, x9
0xffff8bd19aa8   296  add w2, w8, #0x1 (1)
0xffff8bd19aac   300  lsl x2, x2, #32
0xffff8bd19ab0   304  stur x2, [x1, #23]
0xffff8bd19ab4   308  add x1, x5, #0xf (15)
0xffff8bd19ab8   312  fsub d29, d0, d15
0xffff8bd19abc   316  str d29, [x1, w8, sxtw #3]
0xffff8bd19ac0   320  ret
0xffff8bd19ac4   324  sub csp, jssp, #0x10 (16)
0xffff8bd19ac8   328  stp fp, lr, [jssp, #-16]!
0xffff8bd19acc   332  movz fp, #0xa00000000
0xffff8bd19ad0   336  sub csp, jssp, #0x8 (8)
0xffff8bd19ad4   340  str fp, [jssp, #-8]!
0xffff8bd19ad8   344  add fp, jssp, #0x8 (8)
0xffff8bd19adc   348  ldur x16, [x2, #-1]
0xffff8bd19ae0   352  ldr x17, [x26, #120]
0xffff8bd19ae4   356  cmp x16, x17
0xffff8bd19ae8   360  b.ne #+0x198 (addr 0xffff8bd19c80)
0xffff8bd19aec   364  ldur d29, [x2, #7]
0xffff8bd19af0   368  fcvtzs w8, d29
0xffff8bd19af4   372  scvtf d1, w8
0xffff8bd19af8   376  fcmp d29, d1
0xffff8bd19afc   380  b.ne #+0x184 (addr 0xffff8bd19c80)
0xffff8bd19b00   384  ldr lr, [jssp, #16]
0xffff8bd19b04   388  ldp xzr, fp, [jssp], #24
0xffff8bd19b08   392  b #-0x158 (addr 0xffff8bd199b0)
0xffff8bd19b0c   396  sub csp, jssp, #0x10 (16)
0xffff8bd19b10   400  stp fp, lr, [jssp, #-16]!
0xffff8bd19b14   404  movz fp, #0xa00000000
0xffff8bd19b18   408  sub csp, jssp, #0x8 (8)
0xffff8bd19b1c   412  str fp, [jssp, #-8]!
0xffff8bd19b20   416  add fp, jssp, #0x8 (8)
0xffff8bd19b24   420  ldur x16, [x2, #-1]
0xffff8bd19b28   424  ldr x17, [x26, #120]
0xffff8bd19b2c   428  cmp x16, x17
0xffff8bd19b30   432  b.ne #+0x30 (addr 0xffff8bd19b60)
0xffff8bd19b34   436  ldur d30, [x2, #7]
0xffff8bd19b38   440  fcvtzs x9, d30
0xffff8bd19b3c   444  cmp x9, #0x1 (1)
0xffff8bd19b40   448  ccmn x9, #1, #nzcV, vc
0xffff8bd19b44   452  b.vc #+0x18 (addr 0xffff8bd19b5c)
0xffff8bd19b48   456  sub csp, jssp, #0x8 (8)
0xffff8bd19b4c   460  str lr, [jssp, #-8]!
0xffff8bd19b50   464  ldr x16, pc+192 (addr 0x0000ffff8bd19c10)    ;; code: STUB, DoubleToIStub, minor: 127554
0xffff8bd19b54   468  blr x16
0xffff8bd19b58   472  ldr lr, [jssp], #8
0xffff8bd19b5c   476  b #+0x24 (addr 0xffff8bd19b80)
0xffff8bd19b60   480  ldp x9, x7, [x26, #64]
0xffff8bd19b64   484  cmp x2, x9
0xffff8bd19b68   488  cset x9, eq
0xffff8bd19b6c   492  ccmp x2, x7, #nZcv, ne
0xffff8bd19b70   496  b.eq #+0x10 (addr 0xffff8bd19b80)
0xffff8bd19b74   500  ldr x16, [x26, #40]
0xffff8bd19b78   504  cmp x2, x16
0xffff8bd19b7c   508  b.ne #+0x10c (addr 0xffff8bd19c88)
0xffff8bd19b80   512  ldr lr, [jssp, #16]
0xffff8bd19b84   516  ldp xzr, fp, [jssp], #24
0xffff8bd19b88   520  b #-0x1a0 (addr 0xffff8bd199e8)
0xffff8bd19b8c   524  sub csp, jssp, #0x10 (16)
0xffff8bd19b90   528  stp fp, lr, [jssp, #-16]!
0xffff8bd19b94   532  movz fp, #0xa00000000
0xffff8bd19b98   536  sub csp, jssp, #0x8 (8)
0xffff8bd19b9c   540  str fp, [jssp, #-8]!
0xffff8bd19ba0   544  add fp, jssp, #0x8 (8)
0xffff8bd19ba4   548  movz x9, #0x0
0xffff8bd19ba8   552  mov x16, lr
0xffff8bd19bac   556  ldr x17, pc+108 (addr 0x0000ffff8bd19c18)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd19bb0   560  blr x17
0xffff8bd19bb4   564  lsl x0, x3, #32
0xffff8bd19bb8   568  movz x10, #0x100000000
0xffff8bd19bbc   572  sub csp, jssp, #0x10 (16)
0xffff8bd19bc0   576  stp x10, x0, [jssp, #-16]!
0xffff8bd19bc4   580  movz x0, #0x2
0xffff8bd19bc8   584  movz x1, #0x5b88
0xffff8bd19bcc   588  movk x1, #0xe2, lsl #16
0xffff8bd19bd0   592  ldr x16, pc+80 (addr 0x0000ffff8bd19c20)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd19bd4   596  blr x16
0xffff8bd19bd8   600  str x0, [jssp, #72]
0xffff8bd19bdc   604  ldr x16, pc+76 (addr 0x0000ffff8bd19c28)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd19be0   608  blr x16
0xffff8bd19be4   612  ldr lr, [jssp, #16]
0xffff8bd19be8   616  ldp xzr, fp, [jssp], #24
0xffff8bd19bec   620  b #-0x1c0 (addr 0xffff8bd19a2c)
0xffff8bd19bf0   624  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd19bf4   628  d63f03e0       constant
0xffff8bd19bf8   632  fff7ffff       constant
0xffff8bd19bfc   636  fff7ffff       constant
0xffff8bd19c00   640  5f5052d9       constant
0xffff8bd19c04   644  00000000       constant
0xffff8bd19c08   648  8bd170c0       constant
0xffff8bd19c0c   652  0000ffff       constant
0xffff8bd19c10   656  8bd178a0       constant
0xffff8bd19c14   660  0000ffff       constant
0xffff8bd19c18   664  8bd06820       constant
0xffff8bd19c1c   668  0000ffff       constant
0xffff8bd19c20   672  8bd06260       constant
0xffff8bd19c24   676  0000ffff       constant
0xffff8bd19c28   680  8bd068e0       constant
0xffff8bd19c2c   684  0000ffff       constant
0xffff8bd19c30   688  movz x16, #0x0
0xffff8bd19c34   692  sub csp, jssp, #0x10 (16)
0xffff8bd19c38   696  stp fp, lr, [jssp, #-16]!
0xffff8bd19c3c   700  bl #+0x54 (addr 0xffff8bd19c90)
0xffff8bd19c40   704  movz x16, #0x8
0xffff8bd19c44   708  sub csp, jssp, #0x10 (16)
0xffff8bd19c48   712  stp fp, lr, [jssp, #-16]!
0xffff8bd19c4c   716  bl #+0x44 (addr 0xffff8bd19c90)
0xffff8bd19c50   720  movz x16, #0x10
0xffff8bd19c54   724  sub csp, jssp, #0x10 (16)
0xffff8bd19c58   728  stp fp, lr, [jssp, #-16]!
0xffff8bd19c5c   732  bl #+0x34 (addr 0xffff8bd19c90)
0xffff8bd19c60   736  movz x16, #0x18
0xffff8bd19c64   740  sub csp, jssp, #0x10 (16)
0xffff8bd19c68   744  stp fp, lr, [jssp, #-16]!
0xffff8bd19c6c   748  bl #+0x24 (addr 0xffff8bd19c90)
0xffff8bd19c70   752  movz x16, #0x20
0xffff8bd19c74   756  sub csp, jssp, #0x10 (16)
0xffff8bd19c78   760  stp fp, lr, [jssp, #-16]!
0xffff8bd19c7c   764  bl #+0x14 (addr 0xffff8bd19c90)
0xffff8bd19c80   768  movz x16, #0x28
0xffff8bd19c84   772  bl #+0x1c (addr 0xffff8bd19ca0)
0xffff8bd19c88   776  movz x16, #0x30
0xffff8bd19c8c   780  bl #+0x14 (addr 0xffff8bd19ca0)
0xffff8bd19c90   784  movz x17, #0xa00000000
0xffff8bd19c94   788  sub csp, jssp, #0x10 (16)
0xffff8bd19c98   792  stp x17, cp, [jssp, #-16]!
0xffff8bd19c9c   796  add fp, jssp, #0x10 (16)
0xffff8bd19ca0   800  ldr x17, pc+24 (addr 0x0000ffff8bd19cb8)    ;; lazy deoptimization bailout 0
0xffff8bd19ca4   804  add x17, x17, x16
0xffff8bd19ca8   808  br x17
0xffff8bd19cac   812  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd19cb0   816  d63f03e0       constant
0xffff8bd19cb4   820  d503201f       constant
0xffff8bd19cb8   824  8bb06000       constant
0xffff8bd19cbc   828  0000ffff       constant


Safepoints (size = 21)
0xffff8bd19bd8   600  000 | x0 | x1 | x5 | x9 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bd19a2c  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19a98  code target (STUB)  (0xffff8bd170c0)
0xffff8bd19b50  code target (STUB)  (0xffff8bd178a0)
0xffff8bd19bac  code target (STUB)  (0xffff8bd06820)
0xffff8bd19bd0  code target (STUB)  (0xffff8bd06260)
0xffff8bd19bdc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd19bf0  constant pool (size 64)
0xffff8bd19ca0  runtime entry
0xffff8bd19cac  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = TypeofStub
compiler = crankshaft
Instructions (size = 584)
0xffff8bd19d40     0  tbz w3, #0, #+0x14c (addr 0xffff8bd19e8c)
0xffff8bd19d44     4  ldur x0, [x3, #-1]
0xffff8bd19d48     8  ldr x16, pc+344 (addr 0x0000ffff8bd19ea0)    ;; object: 0x5f504411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19d4c    12  cmp x0, x16
0xffff8bd19d50    16  b.eq #+0x134 (addr 0xffff8bd19e84)
0xffff8bd19d54    20  ldur x0, [x3, #-1]
0xffff8bd19d58    24  ldrb w1, [x0, #11]
0xffff8bd19d5c    28  cmp w1, #0x80 (128)
0xffff8bd19d60    32  b.lt #+0x11c (addr 0xffff8bd19e7c)
0xffff8bd19d64    36  cmp w1, #0x83 (131)
0xffff8bd19d68    40  b.eq #+0x10c (addr 0xffff8bd19e74)
0xffff8bd19d6c    44  cmp w1, #0x80 (128)
0xffff8bd19d70    48  b.eq #+0xfc (addr 0xffff8bd19e6c)
0xffff8bd19d74    52  ldrb w1, [x0, #12]
0xffff8bd19d78    56  movz w16, #0x12
0xffff8bd19d7c    60  and w1, w1, w16
0xffff8bd19d80    64  cmp w1, #0x2 (2)
0xffff8bd19d84    68  b.eq #+0xe0 (addr 0xffff8bd19e64)
0xffff8bd19d88    72  ldr x2, pc+288 (addr 0x0000ffff8bd19ea8)    ;; object: 0x5f504519 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19d8c    76  cmp x0, x2
0xffff8bd19d90    80  b.eq #+0xcc (addr 0xffff8bd19e5c)
0xffff8bd19d94    84  ldr x2, pc+284 (addr 0x0000ffff8bd19eb0)    ;; object: 0x5f504571 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19d98    88  cmp x0, x2
0xffff8bd19d9c    92  b.eq #+0xb8 (addr 0xffff8bd19e54)
0xffff8bd19da0    96  ldr x2, pc+280 (addr 0x0000ffff8bd19eb8)    ;; object: 0x5f5045c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19da4   100  cmp x0, x2
0xffff8bd19da8   104  b.eq #+0xa4 (addr 0xffff8bd19e4c)
0xffff8bd19dac   108  ldr x2, pc+276 (addr 0x0000ffff8bd19ec0)    ;; object: 0x5f504621 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19db0   112  cmp x0, x2
0xffff8bd19db4   116  b.eq #+0x90 (addr 0xffff8bd19e44)
0xffff8bd19db8   120  ldr x2, pc+272 (addr 0x0000ffff8bd19ec8)    ;; object: 0x5f504679 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19dbc   124  cmp x0, x2
0xffff8bd19dc0   128  b.eq #+0x7c (addr 0xffff8bd19e3c)
0xffff8bd19dc4   132  ldr x2, pc+268 (addr 0x0000ffff8bd19ed0)    ;; object: 0x5f5046d1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19dc8   136  cmp x0, x2
0xffff8bd19dcc   140  b.eq #+0x68 (addr 0xffff8bd19e34)
0xffff8bd19dd0   144  ldr x2, pc+264 (addr 0x0000ffff8bd19ed8)    ;; object: 0x5f504729 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19dd4   148  cmp x0, x2
0xffff8bd19dd8   152  b.eq #+0x54 (addr 0xffff8bd19e2c)
0xffff8bd19ddc   156  ldr x2, pc+260 (addr 0x0000ffff8bd19ee0)    ;; object: 0x5f504781 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19de0   160  cmp x0, x2
0xffff8bd19de4   164  b.eq #+0x40 (addr 0xffff8bd19e24)
0xffff8bd19de8   168  ldr x2, pc+256 (addr 0x0000ffff8bd19ee8)    ;; object: 0x5f5047d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19dec   172  cmp x0, x2
0xffff8bd19df0   176  b.eq #+0x2c (addr 0xffff8bd19e1c)
0xffff8bd19df4   180  ldr x2, pc+252 (addr 0x0000ffff8bd19ef0)    ;; object: 0x5f504831 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19df8   184  cmp x0, x2
0xffff8bd19dfc   188  b.eq #+0x18 (addr 0xffff8bd19e14)
0xffff8bd19e00   192  cbnz w1, #+0xc (addr 0xffff8bd19e0c)
0xffff8bd19e04   196  ldr x0, pc+244 (addr 0x0000ffff8bd19ef8)    ;; object: 0x26c04499 <String[6]: object>
0xffff8bd19e08   200  b #+0x88 (addr 0xffff8bd19e90)
0xffff8bd19e0c   204  ldr x0, pc+244 (addr 0x0000ffff8bd19f00)    ;; object: 0x26c04451 <String[9]: undefined>
0xffff8bd19e10   208  b #+0x80 (addr 0xffff8bd19e90)
0xffff8bd19e14   212  ldr x0, pc+244 (addr 0x0000ffff8bd19f08)    ;; object: 0x26c04921 <String[8]: bool8x16>
0xffff8bd19e18   216  b #+0x78 (addr 0xffff8bd19e90)
0xffff8bd19e1c   220  ldr x0, pc+244 (addr 0x0000ffff8bd19f10)    ;; object: 0x26c05699 <String[8]: uint8x16>
0xffff8bd19e20   224  b #+0x70 (addr 0xffff8bd19e90)
0xffff8bd19e24   228  ldr x0, pc+244 (addr 0x0000ffff8bd19f18)    ;; object: 0x26c05031 <String[7]: int8x16>
0xffff8bd19e28   232  b #+0x68 (addr 0xffff8bd19e90)
0xffff8bd19e2c   236  ldr x0, pc+244 (addr 0x0000ffff8bd19f20)    ;; object: 0x26c048a1 <String[8]: bool16x8>
0xffff8bd19e30   240  b #+0x60 (addr 0xffff8bd19e90)
0xffff8bd19e34   244  ldr x0, pc+244 (addr 0x0000ffff8bd19f28)    ;; object: 0x26c05619 <String[8]: uint16x8>
0xffff8bd19e38   248  b #+0x58 (addr 0xffff8bd19e90)
0xffff8bd19e3c   252  ldr x0, pc+244 (addr 0x0000ffff8bd19f30)    ;; object: 0x26c04fb1 <String[7]: int16x8>
0xffff8bd19e40   256  b #+0x50 (addr 0xffff8bd19e90)
0xffff8bd19e44   260  ldr x0, pc+244 (addr 0x0000ffff8bd19f38)    ;; object: 0x26c048e1 <String[8]: bool32x4>
0xffff8bd19e48   264  b #+0x48 (addr 0xffff8bd19e90)
0xffff8bd19e4c   268  ldr x0, pc+244 (addr 0x0000ffff8bd19f40)    ;; object: 0x26c05659 <String[8]: uint32x4>
0xffff8bd19e50   272  b #+0x40 (addr 0xffff8bd19e90)
0xffff8bd19e54   276  ldr x0, pc+244 (addr 0x0000ffff8bd19f48)    ;; object: 0x26c04ff1 <String[7]: int32x4>
0xffff8bd19e58   280  b #+0x38 (addr 0xffff8bd19e90)
0xffff8bd19e5c   284  ldr x0, pc+244 (addr 0x0000ffff8bd19f50)    ;; object: 0x26c04d19 <String[9]: float32x4>
0xffff8bd19e60   288  b #+0x30 (addr 0xffff8bd19e90)
0xffff8bd19e64   292  ldr x0, pc+244 (addr 0x0000ffff8bd19f58)    ;; object: 0x26c04da9 <String[8]: function>
0xffff8bd19e68   296  b #+0x28 (addr 0xffff8bd19e90)
0xffff8bd19e6c   300  ldr x0, pc+244 (addr 0x0000ffff8bd19f60)    ;; object: 0x26c05559 <String[6]: symbol>
0xffff8bd19e70   304  b #+0x20 (addr 0xffff8bd19e90)
0xffff8bd19e74   308  ldur x0, [x3, #39]
0xffff8bd19e78   312  b #+0x18 (addr 0xffff8bd19e90)
0xffff8bd19e7c   316  ldr x0, pc+236 (addr 0x0000ffff8bd19f68)    ;; object: 0x26c05519 <String[6]: string>
0xffff8bd19e80   320  b #+0x10 (addr 0xffff8bd19e90)
0xffff8bd19e84   324  ldr x0, pc+236 (addr 0x0000ffff8bd19f70)    ;; object: 0x26c05251 <String[6]: number>
0xffff8bd19e88   328  b #+0x8 (addr 0xffff8bd19e90)
0xffff8bd19e8c   332  ldr x0, pc+236 (addr 0x0000ffff8bd19f78)    ;; object: 0x26c05251 <String[6]: number>
0xffff8bd19e90   336  ret
0xffff8bd19e94   340  5800075f       constant pool begin (num_const = 58)    ;; constant pool
0xffff8bd19e98   344  d63f03e0       constant
0xffff8bd19e9c   348  d503201f       constant
0xffff8bd19ea0   352  5f504411       constant
0xffff8bd19ea4   356  00000000       constant
0xffff8bd19ea8   360  5f504519       constant
0xffff8bd19eac   364  00000000       constant
0xffff8bd19eb0   368  5f504571       constant
0xffff8bd19eb4   372  00000000       constant
0xffff8bd19eb8   376  5f5045c9       constant
0xffff8bd19ebc   380  00000000       constant
0xffff8bd19ec0   384  5f504621       constant
0xffff8bd19ec4   388  00000000       constant
0xffff8bd19ec8   392  5f504679       constant
0xffff8bd19ecc   396  00000000       constant
0xffff8bd19ed0   400  5f5046d1       constant
0xffff8bd19ed4   404  00000000       constant
0xffff8bd19ed8   408  5f504729       constant
0xffff8bd19edc   412  00000000       constant
0xffff8bd19ee0   416  5f504781       constant
0xffff8bd19ee4   420  00000000       constant
0xffff8bd19ee8   424  5f5047d9       constant
0xffff8bd19eec   428  00000000       constant
0xffff8bd19ef0   432  5f504831       constant
0xffff8bd19ef4   436  00000000       constant
0xffff8bd19ef8   440  26c04499       constant
0xffff8bd19efc   444  00000000       constant
0xffff8bd19f00   448  26c04451       constant
0xffff8bd19f04   452  00000000       constant
0xffff8bd19f08   456  26c04921       constant
0xffff8bd19f0c   460  00000000       constant
0xffff8bd19f10   464  26c05699       constant
0xffff8bd19f14   468  00000000       constant
0xffff8bd19f18   472  26c05031       constant
0xffff8bd19f1c   476  00000000       constant
0xffff8bd19f20   480  26c048a1       constant
0xffff8bd19f24   484  00000000       constant
0xffff8bd19f28   488  26c05619       constant
0xffff8bd19f2c   492  00000000       constant
0xffff8bd19f30   496  26c04fb1       constant
0xffff8bd19f34   500  00000000       constant
0xffff8bd19f38   504  26c048e1       constant
0xffff8bd19f3c   508  00000000       constant
0xffff8bd19f40   512  26c05659       constant
0xffff8bd19f44   516  00000000       constant
0xffff8bd19f48   520  26c04ff1       constant
0xffff8bd19f4c   524  00000000       constant
0xffff8bd19f50   528  26c04d19       constant
0xffff8bd19f54   532  00000000       constant
0xffff8bd19f58   536  26c04da9       constant
0xffff8bd19f5c   540  00000000       constant
0xffff8bd19f60   544  26c05559       constant
0xffff8bd19f64   548  00000000       constant
0xffff8bd19f68   552  26c05519       constant
0xffff8bd19f6c   556  00000000       constant
0xffff8bd19f70   560  26c05251       constant
0xffff8bd19f74   564  00000000       constant
0xffff8bd19f78   568  26c05251       constant
0xffff8bd19f7c   572  00000000       constant


Safepoints (size = 8)

RelocInfo (size = 36)
0xffff8bd19d48  embedded object  (0x5f504411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19d88  embedded object  (0x5f504519 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19d94  embedded object  (0x5f504571 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19da0  embedded object  (0x5f5045c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19dac  embedded object  (0x5f504621 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19db8  embedded object  (0x5f504679 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19dc4  embedded object  (0x5f5046d1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19dd0  embedded object  (0x5f504729 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19ddc  embedded object  (0x5f504781 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19de8  embedded object  (0x5f5047d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19df4  embedded object  (0x5f504831 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19e04  embedded object  (0x26c04499 <String[6]: object>)
0xffff8bd19e0c  embedded object  (0x26c04451 <String[9]: undefined>)
0xffff8bd19e14  embedded object  (0x26c04921 <String[8]: bool8x16>)
0xffff8bd19e1c  embedded object  (0x26c05699 <String[8]: uint8x16>)
0xffff8bd19e24  embedded object  (0x26c05031 <String[7]: int8x16>)
0xffff8bd19e2c  embedded object  (0x26c048a1 <String[8]: bool16x8>)
0xffff8bd19e34  embedded object  (0x26c05619 <String[8]: uint16x8>)
0xffff8bd19e3c  embedded object  (0x26c04fb1 <String[7]: int16x8>)
0xffff8bd19e44  embedded object  (0x26c048e1 <String[8]: bool32x4>)
0xffff8bd19e4c  embedded object  (0x26c05659 <String[8]: uint32x4>)
0xffff8bd19e54  embedded object  (0x26c04ff1 <String[7]: int32x4>)
0xffff8bd19e5c  embedded object  (0x26c04d19 <String[9]: float32x4>)
0xffff8bd19e64  embedded object  (0x26c04da9 <String[8]: function>)
0xffff8bd19e6c  embedded object  (0x26c05559 <String[6]: symbol>)
0xffff8bd19e7c  embedded object  (0x26c05519 <String[6]: string>)
0xffff8bd19e84  embedded object  (0x26c05251 <String[6]: number>)
0xffff8bd19e8c  embedded object  (0x26c05251 <String[6]: number>)
0xffff8bd19e94  constant pool (size 236)

--- End code ---
kind = STUB
major_key = TypeofStub
name = TypeofStub
compiler = crankshaft
Instructions (size = 584)
0xffff8bd19d40     0  tbz w3, #0, #+0x14c (addr 0xffff8bd19e8c)
0xffff8bd19d44     4  ldur x0, [x3, #-1]
0xffff8bd19d48     8  ldr x16, pc+344 (addr 0x0000ffff8bd19ea0)    ;; object: 0x5f504411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19d4c    12  cmp x0, x16
0xffff8bd19d50    16  b.eq #+0x134 (addr 0xffff8bd19e84)
0xffff8bd19d54    20  ldur x0, [x3, #-1]
0xffff8bd19d58    24  ldrb w1, [x0, #11]
0xffff8bd19d5c    28  cmp w1, #0x80 (128)
0xffff8bd19d60    32  b.lt #+0x11c (addr 0xffff8bd19e7c)
0xffff8bd19d64    36  cmp w1, #0x83 (131)
0xffff8bd19d68    40  b.eq #+0x10c (addr 0xffff8bd19e74)
0xffff8bd19d6c    44  cmp w1, #0x80 (128)
0xffff8bd19d70    48  b.eq #+0xfc (addr 0xffff8bd19e6c)
0xffff8bd19d74    52  ldrb w1, [x0, #12]
0xffff8bd19d78    56  movz w16, #0x12
0xffff8bd19d7c    60  and w1, w1, w16
0xffff8bd19d80    64  cmp w1, #0x2 (2)
0xffff8bd19d84    68  b.eq #+0xe0 (addr 0xffff8bd19e64)
0xffff8bd19d88    72  ldr x2, pc+288 (addr 0x0000ffff8bd19ea8)    ;; object: 0x5f504519 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19d8c    76  cmp x0, x2
0xffff8bd19d90    80  b.eq #+0xcc (addr 0xffff8bd19e5c)
0xffff8bd19d94    84  ldr x2, pc+284 (addr 0x0000ffff8bd19eb0)    ;; object: 0x5f504571 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19d98    88  cmp x0, x2
0xffff8bd19d9c    92  b.eq #+0xb8 (addr 0xffff8bd19e54)
0xffff8bd19da0    96  ldr x2, pc+280 (addr 0x0000ffff8bd19eb8)    ;; object: 0x5f5045c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19da4   100  cmp x0, x2
0xffff8bd19da8   104  b.eq #+0xa4 (addr 0xffff8bd19e4c)
0xffff8bd19dac   108  ldr x2, pc+276 (addr 0x0000ffff8bd19ec0)    ;; object: 0x5f504621 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19db0   112  cmp x0, x2
0xffff8bd19db4   116  b.eq #+0x90 (addr 0xffff8bd19e44)
0xffff8bd19db8   120  ldr x2, pc+272 (addr 0x0000ffff8bd19ec8)    ;; object: 0x5f504679 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19dbc   124  cmp x0, x2
0xffff8bd19dc0   128  b.eq #+0x7c (addr 0xffff8bd19e3c)
0xffff8bd19dc4   132  ldr x2, pc+268 (addr 0x0000ffff8bd19ed0)    ;; object: 0x5f5046d1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19dc8   136  cmp x0, x2
0xffff8bd19dcc   140  b.eq #+0x68 (addr 0xffff8bd19e34)
0xffff8bd19dd0   144  ldr x2, pc+264 (addr 0x0000ffff8bd19ed8)    ;; object: 0x5f504729 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19dd4   148  cmp x0, x2
0xffff8bd19dd8   152  b.eq #+0x54 (addr 0xffff8bd19e2c)
0xffff8bd19ddc   156  ldr x2, pc+260 (addr 0x0000ffff8bd19ee0)    ;; object: 0x5f504781 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19de0   160  cmp x0, x2
0xffff8bd19de4   164  b.eq #+0x40 (addr 0xffff8bd19e24)
0xffff8bd19de8   168  ldr x2, pc+256 (addr 0x0000ffff8bd19ee8)    ;; object: 0x5f5047d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19dec   172  cmp x0, x2
0xffff8bd19df0   176  b.eq #+0x2c (addr 0xffff8bd19e1c)
0xffff8bd19df4   180  ldr x2, pc+252 (addr 0x0000ffff8bd19ef0)    ;; object: 0x5f504831 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd19df8   184  cmp x0, x2
0xffff8bd19dfc   188  b.eq #+0x18 (addr 0xffff8bd19e14)
0xffff8bd19e00   192  cbnz w1, #+0xc (addr 0xffff8bd19e0c)
0xffff8bd19e04   196  ldr x0, pc+244 (addr 0x0000ffff8bd19ef8)    ;; object: 0x26c04499 <String[6]: object>
0xffff8bd19e08   200  b #+0x88 (addr 0xffff8bd19e90)
0xffff8bd19e0c   204  ldr x0, pc+244 (addr 0x0000ffff8bd19f00)    ;; object: 0x26c04451 <String[9]: undefined>
0xffff8bd19e10   208  b #+0x80 (addr 0xffff8bd19e90)
0xffff8bd19e14   212  ldr x0, pc+244 (addr 0x0000ffff8bd19f08)    ;; object: 0x26c04921 <String[8]: bool8x16>
0xffff8bd19e18   216  b #+0x78 (addr 0xffff8bd19e90)
0xffff8bd19e1c   220  ldr x0, pc+244 (addr 0x0000ffff8bd19f10)    ;; object: 0x26c05699 <String[8]: uint8x16>
0xffff8bd19e20   224  b #+0x70 (addr 0xffff8bd19e90)
0xffff8bd19e24   228  ldr x0, pc+244 (addr 0x0000ffff8bd19f18)    ;; object: 0x26c05031 <String[7]: int8x16>
0xffff8bd19e28   232  b #+0x68 (addr 0xffff8bd19e90)
0xffff8bd19e2c   236  ldr x0, pc+244 (addr 0x0000ffff8bd19f20)    ;; object: 0x26c048a1 <String[8]: bool16x8>
0xffff8bd19e30   240  b #+0x60 (addr 0xffff8bd19e90)
0xffff8bd19e34   244  ldr x0, pc+244 (addr 0x0000ffff8bd19f28)    ;; object: 0x26c05619 <String[8]: uint16x8>
0xffff8bd19e38   248  b #+0x58 (addr 0xffff8bd19e90)
0xffff8bd19e3c   252  ldr x0, pc+244 (addr 0x0000ffff8bd19f30)    ;; object: 0x26c04fb1 <String[7]: int16x8>
0xffff8bd19e40   256  b #+0x50 (addr 0xffff8bd19e90)
0xffff8bd19e44   260  ldr x0, pc+244 (addr 0x0000ffff8bd19f38)    ;; object: 0x26c048e1 <String[8]: bool32x4>
0xffff8bd19e48   264  b #+0x48 (addr 0xffff8bd19e90)
0xffff8bd19e4c   268  ldr x0, pc+244 (addr 0x0000ffff8bd19f40)    ;; object: 0x26c05659 <String[8]: uint32x4>
0xffff8bd19e50   272  b #+0x40 (addr 0xffff8bd19e90)
0xffff8bd19e54   276  ldr x0, pc+244 (addr 0x0000ffff8bd19f48)    ;; object: 0x26c04ff1 <String[7]: int32x4>
0xffff8bd19e58   280  b #+0x38 (addr 0xffff8bd19e90)
0xffff8bd19e5c   284  ldr x0, pc+244 (addr 0x0000ffff8bd19f50)    ;; object: 0x26c04d19 <String[9]: float32x4>
0xffff8bd19e60   288  b #+0x30 (addr 0xffff8bd19e90)
0xffff8bd19e64   292  ldr x0, pc+244 (addr 0x0000ffff8bd19f58)    ;; object: 0x26c04da9 <String[8]: function>
0xffff8bd19e68   296  b #+0x28 (addr 0xffff8bd19e90)
0xffff8bd19e6c   300  ldr x0, pc+244 (addr 0x0000ffff8bd19f60)    ;; object: 0x26c05559 <String[6]: symbol>
0xffff8bd19e70   304  b #+0x20 (addr 0xffff8bd19e90)
0xffff8bd19e74   308  ldur x0, [x3, #39]
0xffff8bd19e78   312  b #+0x18 (addr 0xffff8bd19e90)
0xffff8bd19e7c   316  ldr x0, pc+236 (addr 0x0000ffff8bd19f68)    ;; object: 0x26c05519 <String[6]: string>
0xffff8bd19e80   320  b #+0x10 (addr 0xffff8bd19e90)
0xffff8bd19e84   324  ldr x0, pc+236 (addr 0x0000ffff8bd19f70)    ;; object: 0x26c05251 <String[6]: number>
0xffff8bd19e88   328  b #+0x8 (addr 0xffff8bd19e90)
0xffff8bd19e8c   332  ldr x0, pc+236 (addr 0x0000ffff8bd19f78)    ;; object: 0x26c05251 <String[6]: number>
0xffff8bd19e90   336  ret
0xffff8bd19e94   340  5800075f       constant pool begin (num_const = 58)    ;; constant pool
0xffff8bd19e98   344  d63f03e0       constant
0xffff8bd19e9c   348  d503201f       constant
0xffff8bd19ea0   352  5f504411       constant
0xffff8bd19ea4   356  00000000       constant
0xffff8bd19ea8   360  5f504519       constant
0xffff8bd19eac   364  00000000       constant
0xffff8bd19eb0   368  5f504571       constant
0xffff8bd19eb4   372  00000000       constant
0xffff8bd19eb8   376  5f5045c9       constant
0xffff8bd19ebc   380  00000000       constant
0xffff8bd19ec0   384  5f504621       constant
0xffff8bd19ec4   388  00000000       constant
0xffff8bd19ec8   392  5f504679       constant
0xffff8bd19ecc   396  00000000       constant
0xffff8bd19ed0   400  5f5046d1       constant
0xffff8bd19ed4   404  00000000       constant
0xffff8bd19ed8   408  5f504729       constant
0xffff8bd19edc   412  00000000       constant
0xffff8bd19ee0   416  5f504781       constant
0xffff8bd19ee4   420  00000000       constant
0xffff8bd19ee8   424  5f5047d9       constant
0xffff8bd19eec   428  00000000       constant
0xffff8bd19ef0   432  5f504831       constant
0xffff8bd19ef4   436  00000000       constant
0xffff8bd19ef8   440  26c04499       constant
0xffff8bd19efc   444  00000000       constant
0xffff8bd19f00   448  26c04451       constant
0xffff8bd19f04   452  00000000       constant
0xffff8bd19f08   456  26c04921       constant
0xffff8bd19f0c   460  00000000       constant
0xffff8bd19f10   464  26c05699       constant
0xffff8bd19f14   468  00000000       constant
0xffff8bd19f18   472  26c05031       constant
0xffff8bd19f1c   476  00000000       constant
0xffff8bd19f20   480  26c048a1       constant
0xffff8bd19f24   484  00000000       constant
0xffff8bd19f28   488  26c05619       constant
0xffff8bd19f2c   492  00000000       constant
0xffff8bd19f30   496  26c04fb1       constant
0xffff8bd19f34   500  00000000       constant
0xffff8bd19f38   504  26c048e1       constant
0xffff8bd19f3c   508  00000000       constant
0xffff8bd19f40   512  26c05659       constant
0xffff8bd19f44   516  00000000       constant
0xffff8bd19f48   520  26c04ff1       constant
0xffff8bd19f4c   524  00000000       constant
0xffff8bd19f50   528  26c04d19       constant
0xffff8bd19f54   532  00000000       constant
0xffff8bd19f58   536  26c04da9       constant
0xffff8bd19f5c   540  00000000       constant
0xffff8bd19f60   544  26c05559       constant
0xffff8bd19f64   548  00000000       constant
0xffff8bd19f68   552  26c05519       constant
0xffff8bd19f6c   556  00000000       constant
0xffff8bd19f70   560  26c05251       constant
0xffff8bd19f74   564  00000000       constant
0xffff8bd19f78   568  26c05251       constant
0xffff8bd19f7c   572  00000000       constant


Safepoints (size = 8)

RelocInfo (size = 36)
0xffff8bd19d48  embedded object  (0x5f504411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19d88  embedded object  (0x5f504519 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19d94  embedded object  (0x5f504571 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19da0  embedded object  (0x5f5045c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19dac  embedded object  (0x5f504621 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19db8  embedded object  (0x5f504679 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19dc4  embedded object  (0x5f5046d1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19dd0  embedded object  (0x5f504729 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19ddc  embedded object  (0x5f504781 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19de8  embedded object  (0x5f5047d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19df4  embedded object  (0x5f504831 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd19e04  embedded object  (0x26c04499 <String[6]: object>)
0xffff8bd19e0c  embedded object  (0x26c04451 <String[9]: undefined>)
0xffff8bd19e14  embedded object  (0x26c04921 <String[8]: bool8x16>)
0xffff8bd19e1c  embedded object  (0x26c05699 <String[8]: uint8x16>)
0xffff8bd19e24  embedded object  (0x26c05031 <String[7]: int8x16>)
0xffff8bd19e2c  embedded object  (0x26c048a1 <String[8]: bool16x8>)
0xffff8bd19e34  embedded object  (0x26c05619 <String[8]: uint16x8>)
0xffff8bd19e3c  embedded object  (0x26c04fb1 <String[7]: int16x8>)
0xffff8bd19e44  embedded object  (0x26c048e1 <String[8]: bool32x4>)
0xffff8bd19e4c  embedded object  (0x26c05659 <String[8]: uint32x4>)
0xffff8bd19e54  embedded object  (0x26c04ff1 <String[7]: int32x4>)
0xffff8bd19e5c  embedded object  (0x26c04d19 <String[9]: float32x4>)
0xffff8bd19e64  embedded object  (0x26c04da9 <String[8]: function>)
0xffff8bd19e6c  embedded object  (0x26c05559 <String[6]: symbol>)
0xffff8bd19e7c  embedded object  (0x26c05519 <String[6]: string>)
0xffff8bd19e84  embedded object  (0x26c05251 <String[6]: number>)
0xffff8bd19e8c  embedded object  (0x26c05251 <String[6]: number>)
0xffff8bd19e94  constant pool (size 236)


kind = STUB
major_key = JSEntryStub
name = JSEntryStub
compiler = unknown
Instructions (size = 400)
0xffff8bd1a000     0  movn xzr, #0x1
0xffff8bd1a004     4  stp d14, d15, [csp, #-16]!
0xffff8bd1a008     8  stp d12, d13, [csp, #-16]!
0xffff8bd1a00c    12  stp d10, d11, [csp, #-16]!
0xffff8bd1a010    16  stp d8, d9, [csp, #-16]!
0xffff8bd1a014    20  stp fp, lr, [csp, #-16]!
0xffff8bd1a018    24  stp cp, jssp, [csp, #-16]!
0xffff8bd1a01c    28  stp x25, x26, [csp, #-16]!
0xffff8bd1a020    32  stp x23, x24, [csp, #-16]!
0xffff8bd1a024    36  stp x21, x22, [csp, #-16]!
0xffff8bd1a028    40  stp x19, x20, [csp, #-16]!
0xffff8bd1a02c    44  mov jssp, csp
0xffff8bd1a030    48  mrs x16, fpcr
0xffff8bd1a034    52  tbnz w16, #25, #+0xc (addr 0xffff8bd1a040)
0xffff8bd1a038    56  orr x16, x16, #0x2000000
0xffff8bd1a03c    60  msr fpcr, x16
0xffff8bd1a040    64  fmov d15, xzr
0xffff8bd1a044    68  movn x13, #0x0
0xffff8bd1a048    72  movz x12, #0x100000000
0xffff8bd1a04c    76  ldr x11, pc+244 (addr 0x0000ffff8bd1a140)    ;; external reference (Isolate::c_entry_fp_address)
0xffff8bd1a050    80  ldr x10, [x11]
0xffff8bd1a054    84  sub csp, jssp, #0x20 (32)
0xffff8bd1a058    88  stp x10, xzr, [jssp, #-32]!
0xffff8bd1a05c    92  stp x12, x13, [jssp, #16]
0xffff8bd1a060    96  add fp, jssp, #0x18 (24)
0xffff8bd1a064   100  ldr x10, pc+228 (addr 0x0000ffff8bd1a148)    ;; external reference (Isolate::js_entry_sp_address)
0xffff8bd1a068   104  ldr x11, [x10]
0xffff8bd1a06c   108  cbnz x11, #+0x18 (addr 0xffff8bd1a084)
0xffff8bd1a070   112  str fp, [x10]
0xffff8bd1a074   116  movz x12, #0x100000000
0xffff8bd1a078   120  sub csp, jssp, #0x8 (8)
0xffff8bd1a07c   124  str x12, [jssp, #-8]!
0xffff8bd1a080   128  b #+0xc (addr 0xffff8bd1a08c)
0xffff8bd1a084   132  sub csp, jssp, #0x8 (8)
0xffff8bd1a088   136  str xzr, [jssp, #-8]!
0xffff8bd1a08c   140  b #+0x14 (addr 0xffff8bd1a0a0)
0xffff8bd1a090   144  ldr x10, pc+192 (addr 0x0000ffff8bd1a150)    ;; external reference (Isolate::pending_exception_address)
0xffff8bd1a094   148  str x0, [x10]
0xffff8bd1a098   152  ldr x0, [x26, #344]
0xffff8bd1a09c   156  b #+0x40 (addr 0xffff8bd1a0dc)
0xffff8bd1a0a0   160  ldr x11, pc+184 (addr 0x0000ffff8bd1a158)    ;; external reference (Isolate::handler_address)
0xffff8bd1a0a4   164  ldr x10, [x11]
0xffff8bd1a0a8   168  sub csp, jssp, #0x8 (8)
0xffff8bd1a0ac   172  str x10, [jssp, #-8]!
0xffff8bd1a0b0   176  str jssp, [x11]
0xffff8bd1a0b4   180  ldr x10, pc+172 (addr 0x0000ffff8bd1a160)    ;; object: 0x26c04519 <the hole>
0xffff8bd1a0b8   184  ldr x11, pc+176 (addr 0x0000ffff8bd1a168)    ;; external reference (Isolate::pending_exception_address)
0xffff8bd1a0bc   188  str x10, [x11]
0xffff8bd1a0c0   192  ldr x10, pc+176 (addr 0x0000ffff8bd1a170)    ;; external reference (Builtins::JSEntryTrampoline)
0xffff8bd1a0c4   196  ldr x11, [x10]
0xffff8bd1a0c8   200  add x12, x11, #0x5f (95)
0xffff8bd1a0cc   204  blr x12
0xffff8bd1a0d0   208  ldr x10, [jssp], #8
0xffff8bd1a0d4   212  ldr x11, pc+164 (addr 0x0000ffff8bd1a178)    ;; external reference (Isolate::handler_address)
0xffff8bd1a0d8   216  str x10, [x11]
0xffff8bd1a0dc   220  ldr x10, [jssp], #8
0xffff8bd1a0e0   224  movz x16, #0x100000000
0xffff8bd1a0e4   228  cmp x10, x16
0xffff8bd1a0e8   232  b.ne #+0xc (addr 0xffff8bd1a0f4)
0xffff8bd1a0ec   236  ldr x11, pc+148 (addr 0x0000ffff8bd1a180)    ;; external reference (Isolate::js_entry_sp_address)
0xffff8bd1a0f0   240  str xzr, [x11]
0xffff8bd1a0f4   244  ldr x10, [jssp], #8
0xffff8bd1a0f8   248  ldr x11, pc+144 (addr 0x0000ffff8bd1a188)    ;; external reference (Isolate::c_entry_fp_address)
0xffff8bd1a0fc   252  str x10, [x11]
0xffff8bd1a100   256  add jssp, jssp, #0x18 (24)
0xffff8bd1a104   260  mov csp, jssp
0xffff8bd1a108   264  ldp x19, x20, [csp], #16
0xffff8bd1a10c   268  ldp x21, x22, [csp], #16
0xffff8bd1a110   272  ldp x23, x24, [csp], #16
0xffff8bd1a114   276  ldp x25, x26, [csp], #16
0xffff8bd1a118   280  ldp cp, jssp, [csp], #16
0xffff8bd1a11c   284  ldp fp, lr, [csp], #16
0xffff8bd1a120   288  ldp d8, d9, [csp], #16
0xffff8bd1a124   292  ldp d10, d11, [csp], #16
0xffff8bd1a128   296  ldp d12, d13, [csp], #16
0xffff8bd1a12c   300  ldp d14, d15, [csp], #16
0xffff8bd1a130   304  ret
0xffff8bd1a134   308  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff8bd1a138   312  d63f03e0       constant
0xffff8bd1a13c   316  d503201f       constant
0xffff8bd1a140   320  2cb8edf8       constant
0xffff8bd1a144   324  00000000       constant
0xffff8bd1a148   328  2cb8ee18       constant
0xffff8bd1a14c   332  00000000       constant
0xffff8bd1a150   336  2cb8eda0       constant
0xffff8bd1a154   340  00000000       constant
0xffff8bd1a158   344  2cb8ee00       constant
0xffff8bd1a15c   348  00000000       constant
0xffff8bd1a160   352  26c04519       constant
0xffff8bd1a164   356  00000000       constant
0xffff8bd1a168   360  2cb8eda0       constant
0xffff8bd1a16c   364  00000000       constant
0xffff8bd1a170   368  2cb8fb08       constant
0xffff8bd1a174   372  00000000       constant
0xffff8bd1a178   376  2cb8ee00       constant
0xffff8bd1a17c   380  00000000       constant
0xffff8bd1a180   384  2cb8ee18       constant
0xffff8bd1a184   388  00000000       constant
0xffff8bd1a188   392  2cb8edf8       constant
0xffff8bd1a18c   396  00000000       constant


Handler Table (size = 24)

RelocInfo (size = 27)
0xffff8bd1a04c  external reference (Isolate::c_entry_fp_address)  (0x2cb8edf8)
0xffff8bd1a064  external reference (Isolate::js_entry_sp_address)  (0x2cb8ee18)
0xffff8bd1a090  external reference (Isolate::pending_exception_address)  (0x2cb8eda0)
0xffff8bd1a0a0  external reference (Isolate::handler_address)  (0x2cb8ee00)
0xffff8bd1a0b4  embedded object  (0x26c04519 <the hole>)
0xffff8bd1a0b8  external reference (Isolate::pending_exception_address)  (0x2cb8eda0)
0xffff8bd1a0c0  external reference (Builtins::JSEntryTrampoline)  (0x2cb8fb08)
0xffff8bd1a0d4  external reference (Isolate::handler_address)  (0x2cb8ee00)
0xffff8bd1a0ec  external reference (Isolate::js_entry_sp_address)  (0x2cb8ee18)
0xffff8bd1a0f8  external reference (Isolate::c_entry_fp_address)  (0x2cb8edf8)
0xffff8bd1a134  constant pool (size 92)


kind = STUB
major_key = JSEntryStub
name = JSConstructEntryStub
compiler = unknown
Instructions (size = 400)
0xffff8bd1a200     0  movn xzr, #0x1
0xffff8bd1a204     4  stp d14, d15, [csp, #-16]!
0xffff8bd1a208     8  stp d12, d13, [csp, #-16]!
0xffff8bd1a20c    12  stp d10, d11, [csp, #-16]!
0xffff8bd1a210    16  stp d8, d9, [csp, #-16]!
0xffff8bd1a214    20  stp fp, lr, [csp, #-16]!
0xffff8bd1a218    24  stp cp, jssp, [csp, #-16]!
0xffff8bd1a21c    28  stp x25, x26, [csp, #-16]!
0xffff8bd1a220    32  stp x23, x24, [csp, #-16]!
0xffff8bd1a224    36  stp x21, x22, [csp, #-16]!
0xffff8bd1a228    40  stp x19, x20, [csp, #-16]!
0xffff8bd1a22c    44  mov jssp, csp
0xffff8bd1a230    48  mrs x16, fpcr
0xffff8bd1a234    52  tbnz w16, #25, #+0xc (addr 0xffff8bd1a240)
0xffff8bd1a238    56  orr x16, x16, #0x2000000
0xffff8bd1a23c    60  msr fpcr, x16
0xffff8bd1a240    64  fmov d15, xzr
0xffff8bd1a244    68  movn x13, #0x0
0xffff8bd1a248    72  movz x12, #0x200000000
0xffff8bd1a24c    76  ldr x11, pc+244 (addr 0x0000ffff8bd1a340)    ;; external reference (Isolate::c_entry_fp_address)
0xffff8bd1a250    80  ldr x10, [x11]
0xffff8bd1a254    84  sub csp, jssp, #0x20 (32)
0xffff8bd1a258    88  stp x10, xzr, [jssp, #-32]!
0xffff8bd1a25c    92  stp x12, x13, [jssp, #16]
0xffff8bd1a260    96  add fp, jssp, #0x18 (24)
0xffff8bd1a264   100  ldr x10, pc+228 (addr 0x0000ffff8bd1a348)    ;; external reference (Isolate::js_entry_sp_address)
0xffff8bd1a268   104  ldr x11, [x10]
0xffff8bd1a26c   108  cbnz x11, #+0x18 (addr 0xffff8bd1a284)
0xffff8bd1a270   112  str fp, [x10]
0xffff8bd1a274   116  movz x12, #0x100000000
0xffff8bd1a278   120  sub csp, jssp, #0x8 (8)
0xffff8bd1a27c   124  str x12, [jssp, #-8]!
0xffff8bd1a280   128  b #+0xc (addr 0xffff8bd1a28c)
0xffff8bd1a284   132  sub csp, jssp, #0x8 (8)
0xffff8bd1a288   136  str xzr, [jssp, #-8]!
0xffff8bd1a28c   140  b #+0x14 (addr 0xffff8bd1a2a0)
0xffff8bd1a290   144  ldr x10, pc+192 (addr 0x0000ffff8bd1a350)    ;; external reference (Isolate::pending_exception_address)
0xffff8bd1a294   148  str x0, [x10]
0xffff8bd1a298   152  ldr x0, [x26, #344]
0xffff8bd1a29c   156  b #+0x40 (addr 0xffff8bd1a2dc)
0xffff8bd1a2a0   160  ldr x11, pc+184 (addr 0x0000ffff8bd1a358)    ;; external reference (Isolate::handler_address)
0xffff8bd1a2a4   164  ldr x10, [x11]
0xffff8bd1a2a8   168  sub csp, jssp, #0x8 (8)
0xffff8bd1a2ac   172  str x10, [jssp, #-8]!
0xffff8bd1a2b0   176  str jssp, [x11]
0xffff8bd1a2b4   180  ldr x10, pc+172 (addr 0x0000ffff8bd1a360)    ;; object: 0x26c04519 <the hole>
0xffff8bd1a2b8   184  ldr x11, pc+176 (addr 0x0000ffff8bd1a368)    ;; external reference (Isolate::pending_exception_address)
0xffff8bd1a2bc   188  str x10, [x11]
0xffff8bd1a2c0   192  ldr x10, pc+176 (addr 0x0000ffff8bd1a370)    ;; external reference (Builtins::JSConstructEntryTrampoline)
0xffff8bd1a2c4   196  ldr x11, [x10]
0xffff8bd1a2c8   200  add x12, x11, #0x5f (95)
0xffff8bd1a2cc   204  blr x12
0xffff8bd1a2d0   208  ldr x10, [jssp], #8
0xffff8bd1a2d4   212  ldr x11, pc+164 (addr 0x0000ffff8bd1a378)    ;; external reference (Isolate::handler_address)
0xffff8bd1a2d8   216  str x10, [x11]
0xffff8bd1a2dc   220  ldr x10, [jssp], #8
0xffff8bd1a2e0   224  movz x16, #0x100000000
0xffff8bd1a2e4   228  cmp x10, x16
0xffff8bd1a2e8   232  b.ne #+0xc (addr 0xffff8bd1a2f4)
0xffff8bd1a2ec   236  ldr x11, pc+148 (addr 0x0000ffff8bd1a380)    ;; external reference (Isolate::js_entry_sp_address)
0xffff8bd1a2f0   240  str xzr, [x11]
0xffff8bd1a2f4   244  ldr x10, [jssp], #8
0xffff8bd1a2f8   248  ldr x11, pc+144 (addr 0x0000ffff8bd1a388)    ;; external reference (Isolate::c_entry_fp_address)
0xffff8bd1a2fc   252  str x10, [x11]
0xffff8bd1a300   256  add jssp, jssp, #0x18 (24)
0xffff8bd1a304   260  mov csp, jssp
0xffff8bd1a308   264  ldp x19, x20, [csp], #16
0xffff8bd1a30c   268  ldp x21, x22, [csp], #16
0xffff8bd1a310   272  ldp x23, x24, [csp], #16
0xffff8bd1a314   276  ldp x25, x26, [csp], #16
0xffff8bd1a318   280  ldp cp, jssp, [csp], #16
0xffff8bd1a31c   284  ldp fp, lr, [csp], #16
0xffff8bd1a320   288  ldp d8, d9, [csp], #16
0xffff8bd1a324   292  ldp d10, d11, [csp], #16
0xffff8bd1a328   296  ldp d12, d13, [csp], #16
0xffff8bd1a32c   300  ldp d14, d15, [csp], #16
0xffff8bd1a330   304  ret
0xffff8bd1a334   308  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff8bd1a338   312  d63f03e0       constant
0xffff8bd1a33c   316  d503201f       constant
0xffff8bd1a340   320  2cb8edf8       constant
0xffff8bd1a344   324  00000000       constant
0xffff8bd1a348   328  2cb8ee18       constant
0xffff8bd1a34c   332  00000000       constant
0xffff8bd1a350   336  2cb8eda0       constant
0xffff8bd1a354   340  00000000       constant
0xffff8bd1a358   344  2cb8ee00       constant
0xffff8bd1a35c   348  00000000       constant
0xffff8bd1a360   352  26c04519       constant
0xffff8bd1a364   356  00000000       constant
0xffff8bd1a368   360  2cb8eda0       constant
0xffff8bd1a36c   364  00000000       constant
0xffff8bd1a370   368  2cb8fb10       constant
0xffff8bd1a374   372  00000000       constant
0xffff8bd1a378   376  2cb8ee00       constant
0xffff8bd1a37c   380  00000000       constant
0xffff8bd1a380   384  2cb8ee18       constant
0xffff8bd1a384   388  00000000       constant
0xffff8bd1a388   392  2cb8edf8       constant
0xffff8bd1a38c   396  00000000       constant


Handler Table (size = 24)

RelocInfo (size = 27)
0xffff8bd1a24c  external reference (Isolate::c_entry_fp_address)  (0x2cb8edf8)
0xffff8bd1a264  external reference (Isolate::js_entry_sp_address)  (0x2cb8ee18)
0xffff8bd1a290  external reference (Isolate::pending_exception_address)  (0x2cb8eda0)
0xffff8bd1a2a0  external reference (Isolate::handler_address)  (0x2cb8ee00)
0xffff8bd1a2b4  embedded object  (0x26c04519 <the hole>)
0xffff8bd1a2b8  external reference (Isolate::pending_exception_address)  (0x2cb8eda0)
0xffff8bd1a2c0  external reference (Builtins::JSConstructEntryTrampoline)  (0x2cb8fb10)
0xffff8bd1a2d4  external reference (Isolate::handler_address)  (0x2cb8ee00)
0xffff8bd1a2ec  external reference (Isolate::js_entry_sp_address)  (0x2cb8ee18)
0xffff8bd1a2f8  external reference (Isolate::c_entry_fp_address)  (0x2cb8edf8)
0xffff8bd1a334  constant pool (size 92)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ToObjectStub
compiler = crankshaft
Instructions (size = 333)
0xffff8bd1e440     0  tbz w0, #0, #+0x20 (addr 0xffff8bd1e460)
0xffff8bd1e444     4  ldur x1, [x0, #-1]
0xffff8bd1e448     8  ldrb w2, [x1, #11]
0xffff8bd1e44c    12  cmp w2, #0xb1 (177)
0xffff8bd1e450    16  b.ge #+0x5c (addr 0xffff8bd1e4ac)
0xffff8bd1e454    20  ldrb w1, [x1, #8]
0xffff8bd1e458    24  cbnz w1, #+0xc (addr 0xffff8bd1e464)
0xffff8bd1e45c    28  b #+0xdc (addr 0xffff8bd1e538)
0xffff8bd1e460    32  movz x1, #0x3f
0xffff8bd1e464    36  ldur x2, [cp, #39]
0xffff8bd1e468    40  add x3, x2, #0xf (15)
0xffff8bd1e46c    44  ldr x4, [x3, w1, sxtw #3]
0xffff8bd1e470    48  ldur x1, [x4, #23]
0xffff8bd1e474    52  movz x3, #0xe2c0
0xffff8bd1e478    56  movk x3, #0x2cb8, lsl #16
0xffff8bd1e47c    60  ldp x4, x2, [x3]
0xffff8bd1e480    64  adds x16, x4, #0x20 (32)
0xffff8bd1e484    68  ccmp x16, x2, #nzCv, lo
0xffff8bd1e488    72  b.hi #+0x28 (addr 0xffff8bd1e4b0)
0xffff8bd1e48c    76  str x16, [x3]
0xffff8bd1e490    80  orr x4, x4, #0x1
0xffff8bd1e494    84  stur x1, [x4, #-1]
0xffff8bd1e498    88  ldr x1, [x26, #304]
0xffff8bd1e49c    92  stur x1, [x4, #7]
0xffff8bd1e4a0    96  stur x1, [x4, #15]
0xffff8bd1e4a4   100  stur x0, [x4, #23]
0xffff8bd1e4a8   104  mov x0, x4
0xffff8bd1e4ac   108  ret
0xffff8bd1e4b0   112  sub csp, jssp, #0x10 (16)
0xffff8bd1e4b4   116  stp fp, lr, [jssp, #-16]!
0xffff8bd1e4b8   120  movz fp, #0xa00000000
0xffff8bd1e4bc   124  sub csp, jssp, #0x8 (8)
0xffff8bd1e4c0   128  str fp, [jssp, #-8]!
0xffff8bd1e4c4   132  add fp, jssp, #0x8 (8)
0xffff8bd1e4c8   136  movz x4, #0x0
0xffff8bd1e4cc   140  mov x16, lr
0xffff8bd1e4d0   144  ldr x17, pc+80 (addr 0x0000ffff8bd1e520)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd1e4d4   148  blr x17
0xffff8bd1e4d8   152  movz x0, #0x2000000000
0xffff8bd1e4dc   156  movz x10, #0x0
0xffff8bd1e4e0   160  sub csp, jssp, #0x10 (16)
0xffff8bd1e4e4   164  stp x10, x0, [jssp, #-16]!
0xffff8bd1e4e8   168  movz x0, #0x2
0xffff8bd1e4ec   172  movz x1, #0x5b88
0xffff8bd1e4f0   176  movk x1, #0xe2, lsl #16
0xffff8bd1e4f4   180  ldr x16, pc+52 (addr 0x0000ffff8bd1e528)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd1e4f8   184  blr x16
0xffff8bd1e4fc   188  str x0, [jssp, #32]
0xffff8bd1e500   192  ldr x16, pc+48 (addr 0x0000ffff8bd1e530)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd1e504   196  blr x16
0xffff8bd1e508   200  ldr lr, [jssp, #16]
0xffff8bd1e50c   204  ldp xzr, fp, [jssp], #24
0xffff8bd1e510   208  b #-0x7c (addr 0xffff8bd1e494)
0xffff8bd1e514   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd1e518   216  d63f03e0       constant
0xffff8bd1e51c   220  d503201f       constant
0xffff8bd1e520   224  8bd06820       constant
0xffff8bd1e524   228  0000ffff       constant
0xffff8bd1e528   232  8bd06260       constant
0xffff8bd1e52c   236  0000ffff       constant
0xffff8bd1e530   240  8bd068e0       constant
0xffff8bd1e534   244  0000ffff       constant
0xffff8bd1e538   248  movz x16, #0x0
0xffff8bd1e53c   252  sub csp, jssp, #0x10 (16)
0xffff8bd1e540   256  stp fp, lr, [jssp, #-16]!
0xffff8bd1e544   260  bl #+0x4 (addr 0xffff8bd1e548)
0xffff8bd1e548   264  movz x17, #0xa00000000
0xffff8bd1e54c   268  sub csp, jssp, #0x10 (16)
0xffff8bd1e550   272  stp x17, cp, [jssp, #-16]!
0xffff8bd1e554   276  add fp, jssp, #0x10 (16)
0xffff8bd1e558   280  ldr x17, pc+24 (addr 0x0000ffff8bd1e570)    ;; lazy deoptimization bailout 0
0xffff8bd1e55c   284  add x17, x17, x16
0xffff8bd1e560   288  br x17
0xffff8bd1e564   292  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd1e568   296  d63f03e0       constant
0xffff8bd1e56c   300  d503201f       constant
0xffff8bd1e570   304  8bb06000       constant
0xffff8bd1e574   308  0000ffff       constant


Safepoints (size = 21)
0xffff8bd1e4fc   188  000 | x0 | x1 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 21)
0xffff8bd1e4d0  code target (STUB)  (0xffff8bd06820)
0xffff8bd1e4f4  code target (STUB)  (0xffff8bd06260)
0xffff8bd1e500  code target (STUB)  (0xffff8bd068e0)
0xffff8bd1e514  constant pool (size 36)
0xffff8bd1e558  runtime entry
0xffff8bd1e564  constant pool (size 20)

--- End code ---
kind = STUB
major_key = ToObjectStub
name = ToObjectStub
compiler = crankshaft
Instructions (size = 333)
0xffff8bd1e440     0  tbz w0, #0, #+0x20 (addr 0xffff8bd1e460)
0xffff8bd1e444     4  ldur x1, [x0, #-1]
0xffff8bd1e448     8  ldrb w2, [x1, #11]
0xffff8bd1e44c    12  cmp w2, #0xb1 (177)
0xffff8bd1e450    16  b.ge #+0x5c (addr 0xffff8bd1e4ac)
0xffff8bd1e454    20  ldrb w1, [x1, #8]
0xffff8bd1e458    24  cbnz w1, #+0xc (addr 0xffff8bd1e464)
0xffff8bd1e45c    28  b #+0xdc (addr 0xffff8bd1e538)
0xffff8bd1e460    32  movz x1, #0x3f
0xffff8bd1e464    36  ldur x2, [cp, #39]
0xffff8bd1e468    40  add x3, x2, #0xf (15)
0xffff8bd1e46c    44  ldr x4, [x3, w1, sxtw #3]
0xffff8bd1e470    48  ldur x1, [x4, #23]
0xffff8bd1e474    52  movz x3, #0xe2c0
0xffff8bd1e478    56  movk x3, #0x2cb8, lsl #16
0xffff8bd1e47c    60  ldp x4, x2, [x3]
0xffff8bd1e480    64  adds x16, x4, #0x20 (32)
0xffff8bd1e484    68  ccmp x16, x2, #nzCv, lo
0xffff8bd1e488    72  b.hi #+0x28 (addr 0xffff8bd1e4b0)
0xffff8bd1e48c    76  str x16, [x3]
0xffff8bd1e490    80  orr x4, x4, #0x1
0xffff8bd1e494    84  stur x1, [x4, #-1]
0xffff8bd1e498    88  ldr x1, [x26, #304]
0xffff8bd1e49c    92  stur x1, [x4, #7]
0xffff8bd1e4a0    96  stur x1, [x4, #15]
0xffff8bd1e4a4   100  stur x0, [x4, #23]
0xffff8bd1e4a8   104  mov x0, x4
0xffff8bd1e4ac   108  ret
0xffff8bd1e4b0   112  sub csp, jssp, #0x10 (16)
0xffff8bd1e4b4   116  stp fp, lr, [jssp, #-16]!
0xffff8bd1e4b8   120  movz fp, #0xa00000000
0xffff8bd1e4bc   124  sub csp, jssp, #0x8 (8)
0xffff8bd1e4c0   128  str fp, [jssp, #-8]!
0xffff8bd1e4c4   132  add fp, jssp, #0x8 (8)
0xffff8bd1e4c8   136  movz x4, #0x0
0xffff8bd1e4cc   140  mov x16, lr
0xffff8bd1e4d0   144  ldr x17, pc+80 (addr 0x0000ffff8bd1e520)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd1e4d4   148  blr x17
0xffff8bd1e4d8   152  movz x0, #0x2000000000
0xffff8bd1e4dc   156  movz x10, #0x0
0xffff8bd1e4e0   160  sub csp, jssp, #0x10 (16)
0xffff8bd1e4e4   164  stp x10, x0, [jssp, #-16]!
0xffff8bd1e4e8   168  movz x0, #0x2
0xffff8bd1e4ec   172  movz x1, #0x5b88
0xffff8bd1e4f0   176  movk x1, #0xe2, lsl #16
0xffff8bd1e4f4   180  ldr x16, pc+52 (addr 0x0000ffff8bd1e528)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd1e4f8   184  blr x16
0xffff8bd1e4fc   188  str x0, [jssp, #32]
0xffff8bd1e500   192  ldr x16, pc+48 (addr 0x0000ffff8bd1e530)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd1e504   196  blr x16
0xffff8bd1e508   200  ldr lr, [jssp, #16]
0xffff8bd1e50c   204  ldp xzr, fp, [jssp], #24
0xffff8bd1e510   208  b #-0x7c (addr 0xffff8bd1e494)
0xffff8bd1e514   212  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd1e518   216  d63f03e0       constant
0xffff8bd1e51c   220  d503201f       constant
0xffff8bd1e520   224  8bd06820       constant
0xffff8bd1e524   228  0000ffff       constant
0xffff8bd1e528   232  8bd06260       constant
0xffff8bd1e52c   236  0000ffff       constant
0xffff8bd1e530   240  8bd068e0       constant
0xffff8bd1e534   244  0000ffff       constant
0xffff8bd1e538   248  movz x16, #0x0
0xffff8bd1e53c   252  sub csp, jssp, #0x10 (16)
0xffff8bd1e540   256  stp fp, lr, [jssp, #-16]!
0xffff8bd1e544   260  bl #+0x4 (addr 0xffff8bd1e548)
0xffff8bd1e548   264  movz x17, #0xa00000000
0xffff8bd1e54c   268  sub csp, jssp, #0x10 (16)
0xffff8bd1e550   272  stp x17, cp, [jssp, #-16]!
0xffff8bd1e554   276  add fp, jssp, #0x10 (16)
0xffff8bd1e558   280  ldr x17, pc+24 (addr 0x0000ffff8bd1e570)    ;; lazy deoptimization bailout 0
0xffff8bd1e55c   284  add x17, x17, x16
0xffff8bd1e560   288  br x17
0xffff8bd1e564   292  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd1e568   296  d63f03e0       constant
0xffff8bd1e56c   300  d503201f       constant
0xffff8bd1e570   304  8bb06000       constant
0xffff8bd1e574   308  0000ffff       constant


Safepoints (size = 21)
0xffff8bd1e4fc   188  000 | x0 | x1 | x4 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 21)
0xffff8bd1e4d0  code target (STUB)  (0xffff8bd06820)
0xffff8bd1e4f4  code target (STUB)  (0xffff8bd06260)
0xffff8bd1e500  code target (STUB)  (0xffff8bd068e0)
0xffff8bd1e514  constant pool (size 36)
0xffff8bd1e558  runtime entry
0xffff8bd1e564  constant pool (size 20)


kind = STUB
major_key = FastNewObjectStub
name = FastNewObjectStub
compiler = unknown
Instructions (size = 544)
0xffff8bd20680     0  ldur x2, [x3, #-1]
0xffff8bd20684     4  ldrb w2, [x2, #11]
0xffff8bd20688     8  cmp x2, #0xc9 (201)
0xffff8bd2068c    12  b.ne #+0x1a8 (addr 0xffff8bd20834)
0xffff8bd20690    16  ldur x2, [x3, #23]
0xffff8bd20694    20  tbz w2, #0, #+0x1a0 (addr 0xffff8bd20834)
0xffff8bd20698    24  ldur x0, [x2, #-1]
0xffff8bd2069c    28  ldrb w0, [x0, #11]
0xffff8bd206a0    32  cmp x0, #0x84 (132)
0xffff8bd206a4    36  b.ne #+0x190 (addr 0xffff8bd20834)
0xffff8bd206a8    40  ldur x0, [x2, #31]
0xffff8bd206ac    44  cmp x0, x1
0xffff8bd206b0    48  b.ne #+0x184 (addr 0xffff8bd20834)
0xffff8bd206b4    52  ldrb w4, [x2, #7]
0xffff8bd206b8    56  ldr x6, pc+416 (addr 0x0000ffff8bd20858)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff8bd206bc    60  ldp x0, x16, [x6]
0xffff8bd206c0    64  adds x5, x0, x4, lsl #3
0xffff8bd206c4    68  ccmp x5, x16, #nzCv, lo
0xffff8bd206c8    72  b.hi #+0x110 (addr 0xffff8bd207d8)
0xffff8bd206cc    76  str x5, [x6]
0xffff8bd206d0    80  mov x1, x0
0xffff8bd206d4    84  str x2, [x1], #8
0xffff8bd206d8    88  ldr x3, [x26, #304]
0xffff8bd206dc    92  stp x3, x3, [x1], #16
0xffff8bd206e0    96  ldr x6, [x26, #40]
0xffff8bd206e4   100  ldur w3, [x2, #15]
0xffff8bd206e8   104  tst w3, #0xe0000000
0xffff8bd206ec   108  b.ne #+0x30 (addr 0xffff8bd2071c)
0xffff8bd206f0   112  subs x16, x5, x1
0xffff8bd206f4   116  b.le #+0x20 (addr 0xffff8bd20714)
0xffff8bd206f8   120  str x6, [x1]
0xffff8bd206fc   124  and x16, x16, #0x8
0xffff8bd20700   128  add x1, x1, x16
0xffff8bd20704   132  b #+0x8 (addr 0xffff8bd2070c)
0xffff8bd20708   136  stp x6, x6, [x1], #16
0xffff8bd2070c   140  cmp x1, x5
0xffff8bd20710   144  b.lo #-0x8 (addr 0xffff8bd20708)
0xffff8bd20714   148  add x0, x0, #0x1 (1)
0xffff8bd20718   152  ret
0xffff8bd2071c   156  movz w16, #0x20000000
0xffff8bd20720   160  sub w3, w3, w16
0xffff8bd20724   164  stur w3, [x2, #15]
0xffff8bd20728   168  ldrb w4, [x2, #14]
0xffff8bd2072c   172  sub x4, x5, x4, lsl #3
0xffff8bd20730   176  subs x16, x4, x1
0xffff8bd20734   180  b.le #+0x20 (addr 0xffff8bd20754)
0xffff8bd20738   184  str x6, [x1]
0xffff8bd2073c   188  and x16, x16, #0x8
0xffff8bd20740   192  add x1, x1, x16
0xffff8bd20744   196  b #+0x8 (addr 0xffff8bd2074c)
0xffff8bd20748   200  stp x6, x6, [x1], #16
0xffff8bd2074c   204  cmp x1, x4
0xffff8bd20750   208  b.lo #-0x8 (addr 0xffff8bd20748)
0xffff8bd20754   212  ldr x6, [x26, #16]
0xffff8bd20758   216  subs x16, x5, x1
0xffff8bd2075c   220  b.le #+0x20 (addr 0xffff8bd2077c)
0xffff8bd20760   224  str x6, [x1]
0xffff8bd20764   228  and x16, x16, #0x8
0xffff8bd20768   232  add x1, x1, x16
0xffff8bd2076c   236  b #+0x8 (addr 0xffff8bd20774)
0xffff8bd20770   240  stp x6, x6, [x1], #16
0xffff8bd20774   244  cmp x1, x5
0xffff8bd20778   248  b.lo #-0x8 (addr 0xffff8bd20770)
0xffff8bd2077c   252  add x0, x0, #0x1 (1)
0xffff8bd20780   256  tst w3, #0xe0000000
0xffff8bd20784   260  b.eq #+0x8 (addr 0xffff8bd2078c)
0xffff8bd20788   264  ret
0xffff8bd2078c   268  movz x16, #0xc00000000
0xffff8bd20790   272  sub csp, jssp, #0x10 (16)
0xffff8bd20794   276  stp fp, lr, [jssp, #-16]!
0xffff8bd20798   280  sub csp, jssp, #0x10 (16)
0xffff8bd2079c   284  str x16, [jssp, #-8]!
0xffff8bd207a0   288  ldr x17, pc+192 (addr 0x0000ffff8bd20860)    ;; object: 0xffff8bd20621 <Code: STUB>
0xffff8bd207a4   292  sub csp, jssp, #0x10 (16)
0xffff8bd207a8   296  str x17, [jssp, #-8]!
0xffff8bd207ac   300  add fp, jssp, #0x10 (16)
0xffff8bd207b0   304  sub csp, jssp, #0x10 (16)
0xffff8bd207b4   308  stp x2, x0, [jssp, #-16]!
0xffff8bd207b8   312  movz x0, #0x1
0xffff8bd207bc   316  ldr x1, pc+172 (addr 0x0000ffff8bd20868)    ;; external reference (Runtime::FinalizeInstanceSize)
0xffff8bd207c0   320  ldr x16, pc+176 (addr 0x0000ffff8bd20870)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd207c4   324  blr x16
0xffff8bd207c8   328  ldr x0, [jssp], #8
0xffff8bd207cc   332  mov jssp, fp
0xffff8bd207d0   336  ldp fp, lr, [jssp], #16
0xffff8bd207d4   340  ret
0xffff8bd207d8   344  movz x16, #0xc00000000
0xffff8bd207dc   348  sub csp, jssp, #0x10 (16)
0xffff8bd207e0   352  stp fp, lr, [jssp, #-16]!
0xffff8bd207e4   356  sub csp, jssp, #0x10 (16)
0xffff8bd207e8   360  str x16, [jssp, #-8]!
0xffff8bd207ec   364  ldr x17, pc+140 (addr 0x0000ffff8bd20878)    ;; object: 0xffff8bd20621 <Code: STUB>
0xffff8bd207f0   368  sub csp, jssp, #0x10 (16)
0xffff8bd207f4   372  str x17, [jssp, #-8]!
0xffff8bd207f8   376  add fp, jssp, #0x10 (16)
0xffff8bd207fc   380  lsl x4, x4, #35
0xffff8bd20800   384  sub csp, jssp, #0x10 (16)
0xffff8bd20804   388  stp x4, x2, [jssp, #-16]!
0xffff8bd20808   392  movz x0, #0x1
0xffff8bd2080c   396  ldr x1, pc+116 (addr 0x0000ffff8bd20880)    ;; external reference (Runtime::AllocateInNewSpace)
0xffff8bd20810   400  ldr x16, pc+120 (addr 0x0000ffff8bd20888)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd20814   404  blr x16
0xffff8bd20818   408  ldr x2, [jssp], #8
0xffff8bd2081c   412  mov jssp, fp
0xffff8bd20820   416  ldp fp, lr, [jssp], #16
0xffff8bd20824   420  sub x0, x0, #0x1 (1)
0xffff8bd20828   424  ldrb w5, [x2, #7]
0xffff8bd2082c   428  add x5, x0, x5, lsl #3
0xffff8bd20830   432  b #-0x160 (addr 0xffff8bd206d0)
0xffff8bd20834   436  sub csp, jssp, #0x10 (16)
0xffff8bd20838   440  stp x3, x1, [jssp, #-16]!
0xffff8bd2083c   444  movz x0, #0x2
0xffff8bd20840   448  ldr x1, pc+80 (addr 0x0000ffff8bd20890)    ;; external reference (Runtime::NewObject)
0xffff8bd20844   452  ldr x16, pc+84 (addr 0x0000ffff8bd20898)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd20848   456  br x16
0xffff8bd2084c   460  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff8bd20850   464  d63f03e0       constant
0xffff8bd20854   468  d503201f       constant
0xffff8bd20858   472  2cb8e2c0       constant
0xffff8bd2085c   476  00000000       constant
0xffff8bd20860   480  8bd20621       constant
0xffff8bd20864   484  0000ffff       constant
0xffff8bd20868   488  00e450e0       constant
0xffff8bd2086c   492  00000000       constant
0xffff8bd20870   496  8bd06060       constant
0xffff8bd20874   500  0000ffff       constant
0xffff8bd20878   504  8bd20621       constant
0xffff8bd2087c   508  0000ffff       constant
0xffff8bd20880   512  00e25898       constant
0xffff8bd20884   516  00000000       constant
0xffff8bd20888   520  8bd06060       constant
0xffff8bd2088c   524  0000ffff       constant
0xffff8bd20890   528  00e44dc0       constant
0xffff8bd20894   532  00000000       constant
0xffff8bd20898   536  8bd06060       constant
0xffff8bd2089c   540  0000ffff       constant


RelocInfo (size = 21)
0xffff8bd206b8  external reference (Heap::NewSpaceAllocationTopAddress())  (0x2cb8e2c0)
0xffff8bd207a0  embedded object  (0xffff8bd20621 <Code: STUB>)
0xffff8bd207bc  external reference (Runtime::FinalizeInstanceSize)  (0xe450e0)
0xffff8bd207c0  code target (STUB)  (0xffff8bd06060)
0xffff8bd207ec  embedded object  (0xffff8bd20621 <Code: STUB>)
0xffff8bd2080c  external reference (Runtime::AllocateInNewSpace)  (0xe25898)
0xffff8bd20810  code target (STUB)  (0xffff8bd06060)
0xffff8bd20840  external reference (Runtime::NewObject)  (0xe44dc0)
0xffff8bd20844  code target (STUB)  (0xffff8bd06060)
0xffff8bd2084c  constant pool (size 84)


kind = STUB
major_key = NameDictionaryLookupStub
name = NameDictionaryLookupStub
compiler = unknown
Instructions (size = 616)
0xffff8bd22620     0  ldursw x3, [x0, #35]
0xffff8bd22624     4  sub x3, x3, #0x1 (1)
0xffff8bd22628     8  ldur x4, [x1, #7]
0xffff8bd2262c    12  ldr x5, [x26, #40]
0xffff8bd22630    16  add x2, x4, #0x28 (40)
0xffff8bd22634    20  and x2, x3, x2, lsr #2
0xffff8bd22638    24  add x2, x2, x2, lsl #1
0xffff8bd2263c    28  add x2, x0, x2, lsl #3
0xffff8bd22640    32  ldur x6, [x2, #55]
0xffff8bd22644    36  cmp x6, x5
0xffff8bd22648    40  b.eq #+0x238 (addr 0xffff8bd22880)
0xffff8bd2264c    44  cmp x6, x1
0xffff8bd22650    48  b.eq #+0x228 (addr 0xffff8bd22878)
0xffff8bd22654    52  add x2, x4, #0x3c (60)
0xffff8bd22658    56  and x2, x3, x2, lsr #2
0xffff8bd2265c    60  add x2, x2, x2, lsl #1
0xffff8bd22660    64  add x2, x0, x2, lsl #3
0xffff8bd22664    68  ldur x6, [x2, #55]
0xffff8bd22668    72  cmp x6, x5
0xffff8bd2266c    76  b.eq #+0x214 (addr 0xffff8bd22880)
0xffff8bd22670    80  cmp x6, x1
0xffff8bd22674    84  b.eq #+0x204 (addr 0xffff8bd22878)
0xffff8bd22678    88  add x2, x4, #0x54 (84)
0xffff8bd2267c    92  and x2, x3, x2, lsr #2
0xffff8bd22680    96  add x2, x2, x2, lsl #1
0xffff8bd22684   100  add x2, x0, x2, lsl #3
0xffff8bd22688   104  ldur x6, [x2, #55]
0xffff8bd2268c   108  cmp x6, x5
0xffff8bd22690   112  b.eq #+0x1f0 (addr 0xffff8bd22880)
0xffff8bd22694   116  cmp x6, x1
0xffff8bd22698   120  b.eq #+0x1e0 (addr 0xffff8bd22878)
0xffff8bd2269c   124  add x2, x4, #0x70 (112)
0xffff8bd226a0   128  and x2, x3, x2, lsr #2
0xffff8bd226a4   132  add x2, x2, x2, lsl #1
0xffff8bd226a8   136  add x2, x0, x2, lsl #3
0xffff8bd226ac   140  ldur x6, [x2, #55]
0xffff8bd226b0   144  cmp x6, x5
0xffff8bd226b4   148  b.eq #+0x1cc (addr 0xffff8bd22880)
0xffff8bd226b8   152  cmp x6, x1
0xffff8bd226bc   156  b.eq #+0x1bc (addr 0xffff8bd22878)
0xffff8bd226c0   160  add x2, x4, #0x90 (144)
0xffff8bd226c4   164  and x2, x3, x2, lsr #2
0xffff8bd226c8   168  add x2, x2, x2, lsl #1
0xffff8bd226cc   172  add x2, x0, x2, lsl #3
0xffff8bd226d0   176  ldur x6, [x2, #55]
0xffff8bd226d4   180  cmp x6, x5
0xffff8bd226d8   184  b.eq #+0x1a8 (addr 0xffff8bd22880)
0xffff8bd226dc   188  cmp x6, x1
0xffff8bd226e0   192  b.eq #+0x198 (addr 0xffff8bd22878)
0xffff8bd226e4   196  add x2, x4, #0xb4 (180)
0xffff8bd226e8   200  and x2, x3, x2, lsr #2
0xffff8bd226ec   204  add x2, x2, x2, lsl #1
0xffff8bd226f0   208  add x2, x0, x2, lsl #3
0xffff8bd226f4   212  ldur x6, [x2, #55]
0xffff8bd226f8   216  cmp x6, x5
0xffff8bd226fc   220  b.eq #+0x184 (addr 0xffff8bd22880)
0xffff8bd22700   224  cmp x6, x1
0xffff8bd22704   228  b.eq #+0x174 (addr 0xffff8bd22878)
0xffff8bd22708   232  add x2, x4, #0xdc (220)
0xffff8bd2270c   236  and x2, x3, x2, lsr #2
0xffff8bd22710   240  add x2, x2, x2, lsl #1
0xffff8bd22714   244  add x2, x0, x2, lsl #3
0xffff8bd22718   248  ldur x6, [x2, #55]
0xffff8bd2271c   252  cmp x6, x5
0xffff8bd22720   256  b.eq #+0x160 (addr 0xffff8bd22880)
0xffff8bd22724   260  cmp x6, x1
0xffff8bd22728   264  b.eq #+0x150 (addr 0xffff8bd22878)
0xffff8bd2272c   268  add x2, x4, #0x108 (264)
0xffff8bd22730   272  and x2, x3, x2, lsr #2
0xffff8bd22734   276  add x2, x2, x2, lsl #1
0xffff8bd22738   280  add x2, x0, x2, lsl #3
0xffff8bd2273c   284  ldur x6, [x2, #55]
0xffff8bd22740   288  cmp x6, x5
0xffff8bd22744   292  b.eq #+0x13c (addr 0xffff8bd22880)
0xffff8bd22748   296  cmp x6, x1
0xffff8bd2274c   300  b.eq #+0x12c (addr 0xffff8bd22878)
0xffff8bd22750   304  add x2, x4, #0x138 (312)
0xffff8bd22754   308  and x2, x3, x2, lsr #2
0xffff8bd22758   312  add x2, x2, x2, lsl #1
0xffff8bd2275c   316  add x2, x0, x2, lsl #3
0xffff8bd22760   320  ldur x6, [x2, #55]
0xffff8bd22764   324  cmp x6, x5
0xffff8bd22768   328  b.eq #+0x118 (addr 0xffff8bd22880)
0xffff8bd2276c   332  cmp x6, x1
0xffff8bd22770   336  b.eq #+0x108 (addr 0xffff8bd22878)
0xffff8bd22774   340  add x2, x4, #0x16c (364)
0xffff8bd22778   344  and x2, x3, x2, lsr #2
0xffff8bd2277c   348  add x2, x2, x2, lsl #1
0xffff8bd22780   352  add x2, x0, x2, lsl #3
0xffff8bd22784   356  ldur x6, [x2, #55]
0xffff8bd22788   360  cmp x6, x5
0xffff8bd2278c   364  b.eq #+0xf4 (addr 0xffff8bd22880)
0xffff8bd22790   368  cmp x6, x1
0xffff8bd22794   372  b.eq #+0xe4 (addr 0xffff8bd22878)
0xffff8bd22798   376  add x2, x4, #0x1a4 (420)
0xffff8bd2279c   380  and x2, x3, x2, lsr #2
0xffff8bd227a0   384  add x2, x2, x2, lsl #1
0xffff8bd227a4   388  add x2, x0, x2, lsl #3
0xffff8bd227a8   392  ldur x6, [x2, #55]
0xffff8bd227ac   396  cmp x6, x5
0xffff8bd227b0   400  b.eq #+0xd0 (addr 0xffff8bd22880)
0xffff8bd227b4   404  cmp x6, x1
0xffff8bd227b8   408  b.eq #+0xc0 (addr 0xffff8bd22878)
0xffff8bd227bc   412  add x2, x4, #0x1e0 (480)
0xffff8bd227c0   416  and x2, x3, x2, lsr #2
0xffff8bd227c4   420  add x2, x2, x2, lsl #1
0xffff8bd227c8   424  add x2, x0, x2, lsl #3
0xffff8bd227cc   428  ldur x6, [x2, #55]
0xffff8bd227d0   432  cmp x6, x5
0xffff8bd227d4   436  b.eq #+0xac (addr 0xffff8bd22880)
0xffff8bd227d8   440  cmp x6, x1
0xffff8bd227dc   444  b.eq #+0x9c (addr 0xffff8bd22878)
0xffff8bd227e0   448  add x2, x4, #0x220 (544)
0xffff8bd227e4   452  and x2, x3, x2, lsr #2
0xffff8bd227e8   456  add x2, x2, x2, lsl #1
0xffff8bd227ec   460  add x2, x0, x2, lsl #3
0xffff8bd227f0   464  ldur x6, [x2, #55]
0xffff8bd227f4   468  cmp x6, x5
0xffff8bd227f8   472  b.eq #+0x88 (addr 0xffff8bd22880)
0xffff8bd227fc   476  cmp x6, x1
0xffff8bd22800   480  b.eq #+0x78 (addr 0xffff8bd22878)
0xffff8bd22804   484  add x2, x4, #0x264 (612)
0xffff8bd22808   488  and x2, x3, x2, lsr #2
0xffff8bd2280c   492  add x2, x2, x2, lsl #1
0xffff8bd22810   496  add x2, x0, x2, lsl #3
0xffff8bd22814   500  ldur x6, [x2, #55]
0xffff8bd22818   504  cmp x6, x5
0xffff8bd2281c   508  b.eq #+0x64 (addr 0xffff8bd22880)
0xffff8bd22820   512  cmp x6, x1
0xffff8bd22824   516  b.eq #+0x54 (addr 0xffff8bd22878)
0xffff8bd22828   520  add x2, x4, #0x2ac (684)
0xffff8bd2282c   524  and x2, x3, x2, lsr #2
0xffff8bd22830   528  add x2, x2, x2, lsl #1
0xffff8bd22834   532  add x2, x0, x2, lsl #3
0xffff8bd22838   536  ldur x6, [x2, #55]
0xffff8bd2283c   540  cmp x6, x5
0xffff8bd22840   544  b.eq #+0x40 (addr 0xffff8bd22880)
0xffff8bd22844   548  cmp x6, x1
0xffff8bd22848   552  b.eq #+0x30 (addr 0xffff8bd22878)
0xffff8bd2284c   556  add x2, x4, #0x2f8 (760)
0xffff8bd22850   560  and x2, x3, x2, lsr #2
0xffff8bd22854   564  add x2, x2, x2, lsl #1
0xffff8bd22858   568  add x2, x0, x2, lsl #3
0xffff8bd2285c   572  ldur x6, [x2, #55]
0xffff8bd22860   576  cmp x6, x5
0xffff8bd22864   580  b.eq #+0x1c (addr 0xffff8bd22880)
0xffff8bd22868   584  cmp x6, x1
0xffff8bd2286c   588  b.eq #+0xc (addr 0xffff8bd22878)
0xffff8bd22870   592  movz x0, #0x0
0xffff8bd22874   596  ret
0xffff8bd22878   600  movz x0, #0x1
0xffff8bd2287c   604  ret
0xffff8bd22880   608  movz x0, #0x0
0xffff8bd22884   612  ret


RelocInfo (size = 0)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff8bd22f80     0  adr xzr, #+0x40 (addr 0xffff8bd22fc0)
0xffff8bd22f84     4  adr xzr, #+0x2a8 (addr 0xffff8bd2322c)
0xffff8bd22f88     8  ldr x16, pc+1368 (addr 0x0000ffff8bd234e0)    ;; external reference (store_buffer_top)
0xffff8bd22f8c    12  ldr x10, [x16]
0xffff8bd22f90    16  str x11, [x10], #8
0xffff8bd22f94    20  str x10, [x16]
0xffff8bd22f98    24  tst x10, #0x1ffff
0xffff8bd22f9c    28  b.eq #+0x8 (addr 0xffff8bd22fa4)
0xffff8bd22fa0    32  ret
0xffff8bd22fa4    36  sub csp, jssp, #0x8 (8)
0xffff8bd22fa8    40  str lr, [jssp, #-8]!
0xffff8bd22fac    44  ldr x17, pc+1340 (addr 0x0000ffff8bd234e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd22fb0    48  blr x17
0xffff8bd22fb4    52  ldr lr, [jssp], #8
0xffff8bd22fb8    56  ret
0xffff8bd22fbc    60  ret
0xffff8bd22fc0    64  sub csp, jssp, #0x10 (16)
0xffff8bd22fc4    68  stp x1, x0, [jssp, #-16]!
0xffff8bd22fc8    72  ldr x10, [x11]
0xffff8bd22fcc    76  and x16, x10, #0xfffffffffff00000
0xffff8bd22fd0    80  ldr x16, [x16, #8]
0xffff8bd22fd4    84  tst x16, #0x18
0xffff8bd22fd8    88  b.eq #+0x17c (addr 0xffff8bd23154)
0xffff8bd22fdc    92  and x16, x4, #0xfffffffffff00000
0xffff8bd22fe0    96  ldr x16, [x16, #8]
0xffff8bd22fe4   100  tst x16, #0x18
0xffff8bd22fe8   104  b.ne #+0x16c (addr 0xffff8bd23154)
0xffff8bd22fec   108  and x10, x4, #0xfffffffffff00000
0xffff8bd22ff0   112  ldr x0, [x10, #104]
0xffff8bd22ff4   116  subs x0, x0, #0x1 (1)
0xffff8bd22ff8   120  str x0, [x10, #104]
0xffff8bd22ffc   124  b.mi #+0xc4 (addr 0xffff8bd230c0)
0xffff8bd23000   128  ubfx x16, x4, #8, #12
0xffff8bd23004   132  and x10, x4, #0xfffffffffff00000
0xffff8bd23008   136  add x10, x10, x16, lsl #2
0xffff8bd2300c   140  ubfx x0, x4, #3, #5
0xffff8bd23010   144  ldr x10, [x10, #360]
0xffff8bd23014   148  lsr x10, x10, x0
0xffff8bd23018   152  tbz w10, #0, #+0x8 (addr 0xffff8bd23020)
0xffff8bd2301c   156  tbnz w10, #1, #+0x3c (addr 0xffff8bd23058)
0xffff8bd23020   160  ldp x1, x0, [jssp], #16
0xffff8bd23024   164  ldr x16, pc+1228 (addr 0x0000ffff8bd234f0)    ;; external reference (store_buffer_top)
0xffff8bd23028   168  ldr x10, [x16]
0xffff8bd2302c   172  str x11, [x10], #8
0xffff8bd23030   176  str x10, [x16]
0xffff8bd23034   180  tst x10, #0x1ffff
0xffff8bd23038   184  b.eq #+0x8 (addr 0xffff8bd23040)
0xffff8bd2303c   188  ret
0xffff8bd23040   192  sub csp, jssp, #0x8 (8)
0xffff8bd23044   196  str lr, [jssp, #-8]!
0xffff8bd23048   200  ldr x17, pc+1200 (addr 0x0000ffff8bd234f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2304c   204  blr x17
0xffff8bd23050   208  ldr lr, [jssp], #8
0xffff8bd23054   212  ret
0xffff8bd23058   216  ldr x10, [x11]
0xffff8bd2305c   220  sub csp, jssp, #0x10 (16)
0xffff8bd23060   224  stp x4, x11, [jssp, #-16]!
0xffff8bd23064   228  ubfx x16, x10, #8, #12
0xffff8bd23068   232  and x0, x10, #0xfffffffffff00000
0xffff8bd2306c   236  add x0, x0, x16, lsl #2
0xffff8bd23070   240  ubfx x4, x10, #3, #5
0xffff8bd23074   244  ldr x11, [x0, #360]
0xffff8bd23078   248  lsr x11, x11, x4
0xffff8bd2307c   252  tbz w11, #0, #+0x40 (addr 0xffff8bd230bc)
0xffff8bd23080   256  ldp x4, x11, [jssp], #16
0xffff8bd23084   260  ldp x1, x0, [jssp], #16
0xffff8bd23088   264  ldr x16, pc+1144 (addr 0x0000ffff8bd23500)    ;; external reference (store_buffer_top)
0xffff8bd2308c   268  ldr x10, [x16]
0xffff8bd23090   272  str x11, [x10], #8
0xffff8bd23094   276  str x10, [x16]
0xffff8bd23098   280  tst x10, #0x1ffff
0xffff8bd2309c   284  b.eq #+0x8 (addr 0xffff8bd230a4)
0xffff8bd230a0   288  ret
0xffff8bd230a4   292  sub csp, jssp, #0x8 (8)
0xffff8bd230a8   296  str lr, [jssp, #-8]!
0xffff8bd230ac   300  ldr x17, pc+1116 (addr 0x0000ffff8bd23508)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd230b0   304  blr x17
0xffff8bd230b4   308  ldr lr, [jssp], #8
0xffff8bd230b8   312  ret
0xffff8bd230bc   316  ldp x4, x11, [jssp], #16
0xffff8bd230c0   320  sub csp, jssp, #0x78 (120)
0xffff8bd230c4   324  stp x14, x15, [jssp, #-32]!
0xffff8bd230c8   328  stp x18, lr, [jssp, #16]
0xffff8bd230cc   332  stp x9, x11, [jssp, #-32]!
0xffff8bd230d0   336  stp x12, x13, [jssp, #16]
0xffff8bd230d4   340  stp x5, x6, [jssp, #-32]!
0xffff8bd230d8   344  stp x7, x8, [jssp, #16]
0xffff8bd230dc   348  stp x2, x3, [jssp, #-24]!
0xffff8bd230e0   352  str x4, [jssp, #16]
0xffff8bd230e4   356  mov x0, x4
0xffff8bd230e8   360  mov x1, x11
0xffff8bd230ec   364  ldr x2, pc+1060 (addr 0x0000ffff8bd23510)    ;; external reference (isolate)
0xffff8bd230f0   368  ldr x16, pc+1064 (addr 0x0000ffff8bd23518)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd230f4   372  and csp, jssp, #0xfffffffffffffff0
0xffff8bd230f8   376  blr x16
0xffff8bd230fc   380  ldp x4, x5, [jssp, #16]
0xffff8bd23100   384  ldp x2, x3, [jssp], #32
0xffff8bd23104   388  ldp x8, x9, [jssp, #16]
0xffff8bd23108   392  ldp x6, x7, [jssp], #32
0xffff8bd2310c   396  ldp x13, x14, [jssp, #16]
0xffff8bd23110   400  ldp x11, x12, [jssp], #32
0xffff8bd23114   404  ldr lr, [jssp, #16]
0xffff8bd23118   408  ldp x15, x18, [jssp], #24
0xffff8bd2311c   412  ldp x1, x0, [jssp], #16
0xffff8bd23120   416  ldr x16, pc+1024 (addr 0x0000ffff8bd23520)    ;; external reference (store_buffer_top)
0xffff8bd23124   420  ldr x10, [x16]
0xffff8bd23128   424  str x11, [x10], #8
0xffff8bd2312c   428  str x10, [x16]
0xffff8bd23130   432  tst x10, #0x1ffff
0xffff8bd23134   436  b.eq #+0x8 (addr 0xffff8bd2313c)
0xffff8bd23138   440  ret
0xffff8bd2313c   444  sub csp, jssp, #0x8 (8)
0xffff8bd23140   448  str lr, [jssp, #-8]!
0xffff8bd23144   452  ldr x17, pc+996 (addr 0x0000ffff8bd23528)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd23148   456  blr x17
0xffff8bd2314c   460  ldr lr, [jssp], #8
0xffff8bd23150   464  ret
0xffff8bd23154   468  and x10, x4, #0xfffffffffff00000
0xffff8bd23158   472  ldr x0, [x10, #104]
0xffff8bd2315c   476  subs x0, x0, #0x1 (1)
0xffff8bd23160   480  str x0, [x10, #104]
0xffff8bd23164   484  b.mi #+0x64 (addr 0xffff8bd231c8)
0xffff8bd23168   488  ubfx x16, x4, #8, #12
0xffff8bd2316c   492  and x10, x4, #0xfffffffffff00000
0xffff8bd23170   496  add x10, x10, x16, lsl #2
0xffff8bd23174   500  ubfx x0, x4, #3, #5
0xffff8bd23178   504  ldr x10, [x10, #360]
0xffff8bd2317c   508  lsr x10, x10, x0
0xffff8bd23180   512  tbz w10, #0, #+0x8 (addr 0xffff8bd23188)
0xffff8bd23184   516  tbnz w10, #1, #+0xc (addr 0xffff8bd23190)
0xffff8bd23188   520  ldp x1, x0, [jssp], #16
0xffff8bd2318c   524  ret
0xffff8bd23190   528  ldr x10, [x11]
0xffff8bd23194   532  sub csp, jssp, #0x10 (16)
0xffff8bd23198   536  stp x4, x11, [jssp, #-16]!
0xffff8bd2319c   540  ubfx x16, x10, #8, #12
0xffff8bd231a0   544  and x0, x10, #0xfffffffffff00000
0xffff8bd231a4   548  add x0, x0, x16, lsl #2
0xffff8bd231a8   552  ubfx x4, x10, #3, #5
0xffff8bd231ac   556  ldr x11, [x0, #360]
0xffff8bd231b0   560  lsr x11, x11, x4
0xffff8bd231b4   564  tbz w11, #0, #+0x10 (addr 0xffff8bd231c4)
0xffff8bd231b8   568  ldp x4, x11, [jssp], #16
0xffff8bd231bc   572  ldp x1, x0, [jssp], #16
0xffff8bd231c0   576  ret
0xffff8bd231c4   580  ldp x4, x11, [jssp], #16
0xffff8bd231c8   584  sub csp, jssp, #0x78 (120)
0xffff8bd231cc   588  stp x14, x15, [jssp, #-32]!
0xffff8bd231d0   592  stp x18, lr, [jssp, #16]
0xffff8bd231d4   596  stp x9, x11, [jssp, #-32]!
0xffff8bd231d8   600  stp x12, x13, [jssp, #16]
0xffff8bd231dc   604  stp x5, x6, [jssp, #-32]!
0xffff8bd231e0   608  stp x7, x8, [jssp, #16]
0xffff8bd231e4   612  stp x2, x3, [jssp, #-24]!
0xffff8bd231e8   616  str x4, [jssp, #16]
0xffff8bd231ec   620  mov x0, x4
0xffff8bd231f0   624  mov x1, x11
0xffff8bd231f4   628  ldr x2, pc+828 (addr 0x0000ffff8bd23530)    ;; external reference (isolate)
0xffff8bd231f8   632  ldr x16, pc+832 (addr 0x0000ffff8bd23538)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd231fc   636  and csp, jssp, #0xfffffffffffffff0
0xffff8bd23200   640  blr x16
0xffff8bd23204   644  ldp x4, x5, [jssp, #16]
0xffff8bd23208   648  ldp x2, x3, [jssp], #32
0xffff8bd2320c   652  ldp x8, x9, [jssp, #16]
0xffff8bd23210   656  ldp x6, x7, [jssp], #32
0xffff8bd23214   660  ldp x13, x14, [jssp, #16]
0xffff8bd23218   664  ldp x11, x12, [jssp], #32
0xffff8bd2321c   668  ldr lr, [jssp, #16]
0xffff8bd23220   672  ldp x15, x18, [jssp], #24
0xffff8bd23224   676  ldp x1, x0, [jssp], #16
0xffff8bd23228   680  ret
0xffff8bd2322c   684  sub csp, jssp, #0x10 (16)
0xffff8bd23230   688  stp x1, x0, [jssp, #-16]!
0xffff8bd23234   692  ldr x10, [x11]
0xffff8bd23238   696  and x16, x10, #0xfffffffffff00000
0xffff8bd2323c   700  ldr x16, [x16, #8]
0xffff8bd23240   704  tst x16, #0x18
0xffff8bd23244   708  b.eq #+0x19c (addr 0xffff8bd233e0)
0xffff8bd23248   712  and x16, x4, #0xfffffffffff00000
0xffff8bd2324c   716  ldr x16, [x16, #8]
0xffff8bd23250   720  tst x16, #0x18
0xffff8bd23254   724  b.ne #+0x18c (addr 0xffff8bd233e0)
0xffff8bd23258   728  and x10, x4, #0xfffffffffff00000
0xffff8bd2325c   732  ldr x0, [x10, #104]
0xffff8bd23260   736  subs x0, x0, #0x1 (1)
0xffff8bd23264   740  str x0, [x10, #104]
0xffff8bd23268   744  b.mi #+0xe4 (addr 0xffff8bd2334c)
0xffff8bd2326c   748  ubfx x16, x4, #8, #12
0xffff8bd23270   752  and x10, x4, #0xfffffffffff00000
0xffff8bd23274   756  add x10, x10, x16, lsl #2
0xffff8bd23278   760  ubfx x0, x4, #3, #5
0xffff8bd2327c   764  ldr x10, [x10, #360]
0xffff8bd23280   768  lsr x10, x10, x0
0xffff8bd23284   772  tbz w10, #0, #+0x8 (addr 0xffff8bd2328c)
0xffff8bd23288   776  tbnz w10, #1, #+0x3c (addr 0xffff8bd232c4)
0xffff8bd2328c   780  ldp x1, x0, [jssp], #16
0xffff8bd23290   784  ldr x16, pc+688 (addr 0x0000ffff8bd23540)    ;; external reference (store_buffer_top)
0xffff8bd23294   788  ldr x10, [x16]
0xffff8bd23298   792  str x11, [x10], #8
0xffff8bd2329c   796  str x10, [x16]
0xffff8bd232a0   800  tst x10, #0x1ffff
0xffff8bd232a4   804  b.eq #+0x8 (addr 0xffff8bd232ac)
0xffff8bd232a8   808  ret
0xffff8bd232ac   812  sub csp, jssp, #0x8 (8)
0xffff8bd232b0   816  str lr, [jssp, #-8]!
0xffff8bd232b4   820  ldr x17, pc+660 (addr 0x0000ffff8bd23548)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd232b8   824  blr x17
0xffff8bd232bc   828  ldr lr, [jssp], #8
0xffff8bd232c0   832  ret
0xffff8bd232c4   836  ldr x10, [x11]
0xffff8bd232c8   840  and x0, x10, #0xfffffffffff00000
0xffff8bd232cc   844  ldr x0, [x0, #8]
0xffff8bd232d0   848  tbz w0, #6, #+0x18 (addr 0xffff8bd232e8)
0xffff8bd232d4   852  and x0, x4, #0xfffffffffff00000
0xffff8bd232d8   856  ldr x0, [x0, #8]
0xffff8bd232dc   860  movz x16, #0x58
0xffff8bd232e0   864  tst x0, x16
0xffff8bd232e4   868  b.eq #+0x68 (addr 0xffff8bd2334c)
0xffff8bd232e8   872  sub csp, jssp, #0x10 (16)
0xffff8bd232ec   876  stp x4, x11, [jssp, #-16]!
0xffff8bd232f0   880  ubfx x16, x10, #8, #12
0xffff8bd232f4   884  and x0, x10, #0xfffffffffff00000
0xffff8bd232f8   888  add x0, x0, x16, lsl #2
0xffff8bd232fc   892  ubfx x4, x10, #3, #5
0xffff8bd23300   896  ldr x11, [x0, #360]
0xffff8bd23304   900  lsr x11, x11, x4
0xffff8bd23308   904  tbz w11, #0, #+0x40 (addr 0xffff8bd23348)
0xffff8bd2330c   908  ldp x4, x11, [jssp], #16
0xffff8bd23310   912  ldp x1, x0, [jssp], #16
0xffff8bd23314   916  ldr x16, pc+572 (addr 0x0000ffff8bd23550)    ;; external reference (store_buffer_top)
0xffff8bd23318   920  ldr x10, [x16]
0xffff8bd2331c   924  str x11, [x10], #8
0xffff8bd23320   928  str x10, [x16]
0xffff8bd23324   932  tst x10, #0x1ffff
0xffff8bd23328   936  b.eq #+0x8 (addr 0xffff8bd23330)
0xffff8bd2332c   940  ret
0xffff8bd23330   944  sub csp, jssp, #0x8 (8)
0xffff8bd23334   948  str lr, [jssp, #-8]!
0xffff8bd23338   952  ldr x17, pc+544 (addr 0x0000ffff8bd23558)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2333c   956  blr x17
0xffff8bd23340   960  ldr lr, [jssp], #8
0xffff8bd23344   964  ret
0xffff8bd23348   968  ldp x4, x11, [jssp], #16
0xffff8bd2334c   972  sub csp, jssp, #0x78 (120)
0xffff8bd23350   976  stp x14, x15, [jssp, #-32]!
0xffff8bd23354   980  stp x18, lr, [jssp, #16]
0xffff8bd23358   984  stp x9, x11, [jssp, #-32]!
0xffff8bd2335c   988  stp x12, x13, [jssp, #16]
0xffff8bd23360   992  stp x5, x6, [jssp, #-32]!
0xffff8bd23364   996  stp x7, x8, [jssp, #16]
0xffff8bd23368  1000  stp x2, x3, [jssp, #-24]!
0xffff8bd2336c  1004  str x4, [jssp, #16]
0xffff8bd23370  1008  mov x0, x4
0xffff8bd23374  1012  mov x1, x11
0xffff8bd23378  1016  ldr x2, pc+488 (addr 0x0000ffff8bd23560)    ;; external reference (isolate)
0xffff8bd2337c  1020  ldr x16, pc+492 (addr 0x0000ffff8bd23568)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd23380  1024  and csp, jssp, #0xfffffffffffffff0
0xffff8bd23384  1028  blr x16
0xffff8bd23388  1032  ldp x4, x5, [jssp, #16]
0xffff8bd2338c  1036  ldp x2, x3, [jssp], #32
0xffff8bd23390  1040  ldp x8, x9, [jssp, #16]
0xffff8bd23394  1044  ldp x6, x7, [jssp], #32
0xffff8bd23398  1048  ldp x13, x14, [jssp, #16]
0xffff8bd2339c  1052  ldp x11, x12, [jssp], #32
0xffff8bd233a0  1056  ldr lr, [jssp, #16]
0xffff8bd233a4  1060  ldp x15, x18, [jssp], #24
0xffff8bd233a8  1064  ldp x1, x0, [jssp], #16
0xffff8bd233ac  1068  ldr x16, pc+452 (addr 0x0000ffff8bd23570)    ;; external reference (store_buffer_top)
0xffff8bd233b0  1072  ldr x10, [x16]
0xffff8bd233b4  1076  str x11, [x10], #8
0xffff8bd233b8  1080  str x10, [x16]
0xffff8bd233bc  1084  tst x10, #0x1ffff
0xffff8bd233c0  1088  b.eq #+0x8 (addr 0xffff8bd233c8)
0xffff8bd233c4  1092  ret
0xffff8bd233c8  1096  sub csp, jssp, #0x8 (8)
0xffff8bd233cc  1100  str lr, [jssp, #-8]!
0xffff8bd233d0  1104  ldr x17, pc+424 (addr 0x0000ffff8bd23578)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd233d4  1108  blr x17
0xffff8bd233d8  1112  ldr lr, [jssp], #8
0xffff8bd233dc  1116  ret
0xffff8bd233e0  1120  and x10, x4, #0xfffffffffff00000
0xffff8bd233e4  1124  ldr x0, [x10, #104]
0xffff8bd233e8  1128  subs x0, x0, #0x1 (1)
0xffff8bd233ec  1132  str x0, [x10, #104]
0xffff8bd233f0  1136  b.mi #+0x84 (addr 0xffff8bd23474)
0xffff8bd233f4  1140  ubfx x16, x4, #8, #12
0xffff8bd233f8  1144  and x10, x4, #0xfffffffffff00000
0xffff8bd233fc  1148  add x10, x10, x16, lsl #2
0xffff8bd23400  1152  ubfx x0, x4, #3, #5
0xffff8bd23404  1156  ldr x10, [x10, #360]
0xffff8bd23408  1160  lsr x10, x10, x0
0xffff8bd2340c  1164  tbz w10, #0, #+0x8 (addr 0xffff8bd23414)
0xffff8bd23410  1168  tbnz w10, #1, #+0xc (addr 0xffff8bd2341c)
0xffff8bd23414  1172  ldp x1, x0, [jssp], #16
0xffff8bd23418  1176  ret
0xffff8bd2341c  1180  ldr x10, [x11]
0xffff8bd23420  1184  and x0, x10, #0xfffffffffff00000
0xffff8bd23424  1188  ldr x0, [x0, #8]
0xffff8bd23428  1192  tbz w0, #6, #+0x18 (addr 0xffff8bd23440)
0xffff8bd2342c  1196  and x0, x4, #0xfffffffffff00000
0xffff8bd23430  1200  ldr x0, [x0, #8]
0xffff8bd23434  1204  movz x16, #0x58
0xffff8bd23438  1208  tst x0, x16
0xffff8bd2343c  1212  b.eq #+0x38 (addr 0xffff8bd23474)
0xffff8bd23440  1216  sub csp, jssp, #0x10 (16)
0xffff8bd23444  1220  stp x4, x11, [jssp, #-16]!
0xffff8bd23448  1224  ubfx x16, x10, #8, #12
0xffff8bd2344c  1228  and x0, x10, #0xfffffffffff00000
0xffff8bd23450  1232  add x0, x0, x16, lsl #2
0xffff8bd23454  1236  ubfx x4, x10, #3, #5
0xffff8bd23458  1240  ldr x11, [x0, #360]
0xffff8bd2345c  1244  lsr x11, x11, x4
0xffff8bd23460  1248  tbz w11, #0, #+0x10 (addr 0xffff8bd23470)
0xffff8bd23464  1252  ldp x4, x11, [jssp], #16
0xffff8bd23468  1256  ldp x1, x0, [jssp], #16
0xffff8bd2346c  1260  ret
0xffff8bd23470  1264  ldp x4, x11, [jssp], #16
0xffff8bd23474  1268  sub csp, jssp, #0x78 (120)
0xffff8bd23478  1272  stp x14, x15, [jssp, #-32]!
0xffff8bd2347c  1276  stp x18, lr, [jssp, #16]
0xffff8bd23480  1280  stp x9, x11, [jssp, #-32]!
0xffff8bd23484  1284  stp x12, x13, [jssp, #16]
0xffff8bd23488  1288  stp x5, x6, [jssp, #-32]!
0xffff8bd2348c  1292  stp x7, x8, [jssp, #16]
0xffff8bd23490  1296  stp x2, x3, [jssp, #-24]!
0xffff8bd23494  1300  str x4, [jssp, #16]
0xffff8bd23498  1304  mov x0, x4
0xffff8bd2349c  1308  mov x1, x11
0xffff8bd234a0  1312  ldr x2, pc+224 (addr 0x0000ffff8bd23580)    ;; external reference (isolate)
0xffff8bd234a4  1316  ldr x16, pc+228 (addr 0x0000ffff8bd23588)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd234a8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff8bd234ac  1324  blr x16
0xffff8bd234b0  1328  ldp x4, x5, [jssp, #16]
0xffff8bd234b4  1332  ldp x2, x3, [jssp], #32
0xffff8bd234b8  1336  ldp x8, x9, [jssp, #16]
0xffff8bd234bc  1340  ldp x6, x7, [jssp], #32
0xffff8bd234c0  1344  ldp x13, x14, [jssp, #16]
0xffff8bd234c4  1348  ldp x11, x12, [jssp], #32
0xffff8bd234c8  1352  ldr lr, [jssp, #16]
0xffff8bd234cc  1356  ldp x15, x18, [jssp], #24
0xffff8bd234d0  1360  ldp x1, x0, [jssp], #16
0xffff8bd234d4  1364  ret
0xffff8bd234d8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd234dc  1372  d63f03e0       constant
0xffff8bd234e0  1376  2cb8e8c0       constant
0xffff8bd234e4  1380  00000000       constant
0xffff8bd234e8  1384  8bd064c0       constant
0xffff8bd234ec  1388  0000ffff       constant
0xffff8bd234f0  1392  2cb8e8c0       constant
0xffff8bd234f4  1396  00000000       constant
0xffff8bd234f8  1400  8bd064c0       constant
0xffff8bd234fc  1404  0000ffff       constant
0xffff8bd23500  1408  2cb8e8c0       constant
0xffff8bd23504  1412  00000000       constant
0xffff8bd23508  1416  8bd064c0       constant
0xffff8bd2350c  1420  0000ffff       constant
0xffff8bd23510  1424  2cb8d2d0       constant
0xffff8bd23514  1428  00000000       constant
0xffff8bd23518  1432  00c2d958       constant
0xffff8bd2351c  1436  00000000       constant
0xffff8bd23520  1440  2cb8e8c0       constant
0xffff8bd23524  1444  00000000       constant
0xffff8bd23528  1448  8bd064c0       constant
0xffff8bd2352c  1452  0000ffff       constant
0xffff8bd23530  1456  2cb8d2d0       constant
0xffff8bd23534  1460  00000000       constant
0xffff8bd23538  1464  00c2d958       constant
0xffff8bd2353c  1468  00000000       constant
0xffff8bd23540  1472  2cb8e8c0       constant
0xffff8bd23544  1476  00000000       constant
0xffff8bd23548  1480  8bd064c0       constant
0xffff8bd2354c  1484  0000ffff       constant
0xffff8bd23550  1488  2cb8e8c0       constant
0xffff8bd23554  1492  00000000       constant
0xffff8bd23558  1496  8bd064c0       constant
0xffff8bd2355c  1500  0000ffff       constant
0xffff8bd23560  1504  2cb8d2d0       constant
0xffff8bd23564  1508  00000000       constant
0xffff8bd23568  1512  00c2d958       constant
0xffff8bd2356c  1516  00000000       constant
0xffff8bd23570  1520  2cb8e8c0       constant
0xffff8bd23574  1524  00000000       constant
0xffff8bd23578  1528  8bd064c0       constant
0xffff8bd2357c  1532  0000ffff       constant
0xffff8bd23580  1536  2cb8d2d0       constant
0xffff8bd23584  1540  00000000       constant
0xffff8bd23588  1544  00c2d958       constant
0xffff8bd2358c  1548  00000000       constant


RelocInfo (size = 59)
0xffff8bd22f88  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd22fac  code target (STUB)  (0xffff8bd064c0)
0xffff8bd23024  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd23048  code target (STUB)  (0xffff8bd064c0)
0xffff8bd23088  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd230ac  code target (STUB)  (0xffff8bd064c0)
0xffff8bd230ec  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd230f0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd23120  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd23144  code target (STUB)  (0xffff8bd064c0)
0xffff8bd231f4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd231f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd23290  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd232b4  code target (STUB)  (0xffff8bd064c0)
0xffff8bd23314  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd23338  code target (STUB)  (0xffff8bd064c0)
0xffff8bd23378  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2337c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd233ac  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd233d0  code target (STUB)  (0xffff8bd064c0)
0xffff8bd234a0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd234a4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd234d8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 536)
0xffff8bd23600     0  adr xzr, #+0xc (addr 0xffff8bd2360c)
0xffff8bd23604     4  adr xzr, #+0xe8 (addr 0xffff8bd236ec)
0xffff8bd23608     8  ret
0xffff8bd2360c    12  sub csp, jssp, #0x10 (16)
0xffff8bd23610    16  stp x2, x0, [jssp, #-16]!
0xffff8bd23614    20  and x3, x1, #0xfffffffffff00000
0xffff8bd23618    24  ldr x0, [x3, #104]
0xffff8bd2361c    28  subs x0, x0, #0x1 (1)
0xffff8bd23620    32  str x0, [x3, #104]
0xffff8bd23624    36  b.mi #+0x64 (addr 0xffff8bd23688)
0xffff8bd23628    40  ubfx x16, x1, #8, #12
0xffff8bd2362c    44  and x3, x1, #0xfffffffffff00000
0xffff8bd23630    48  add x3, x3, x16, lsl #2
0xffff8bd23634    52  ubfx x0, x1, #3, #5
0xffff8bd23638    56  ldr x3, [x3, #360]
0xffff8bd2363c    60  lsr x3, x3, x0
0xffff8bd23640    64  tbz w3, #0, #+0x8 (addr 0xffff8bd23648)
0xffff8bd23644    68  tbnz w3, #1, #+0xc (addr 0xffff8bd23650)
0xffff8bd23648    72  ldp x2, x0, [jssp], #16
0xffff8bd2364c    76  ret
0xffff8bd23650    80  ldr x3, [x6]
0xffff8bd23654    84  sub csp, jssp, #0x10 (16)
0xffff8bd23658    88  stp x1, x6, [jssp, #-16]!
0xffff8bd2365c    92  ubfx x16, x3, #8, #12
0xffff8bd23660    96  and x0, x3, #0xfffffffffff00000
0xffff8bd23664   100  add x0, x0, x16, lsl #2
0xffff8bd23668   104  ubfx x1, x3, #3, #5
0xffff8bd2366c   108  ldr x6, [x0, #360]
0xffff8bd23670   112  lsr x6, x6, x1
0xffff8bd23674   116  tbz w6, #0, #+0x10 (addr 0xffff8bd23684)
0xffff8bd23678   120  ldp x1, x6, [jssp], #16
0xffff8bd2367c   124  ldp x2, x0, [jssp], #16
0xffff8bd23680   128  ret
0xffff8bd23684   132  ldp x1, x6, [jssp], #16
0xffff8bd23688   136  sub csp, jssp, #0x78 (120)
0xffff8bd2368c   140  stp x14, x15, [jssp, #-32]!
0xffff8bd23690   144  stp x18, lr, [jssp, #16]
0xffff8bd23694   148  stp x10, x11, [jssp, #-32]!
0xffff8bd23698   152  stp x12, x13, [jssp, #16]
0xffff8bd2369c   156  stp x6, x7, [jssp, #-32]!
0xffff8bd236a0   160  stp x8, x9, [jssp, #16]
0xffff8bd236a4   164  stp x1, x4, [jssp, #-24]!
0xffff8bd236a8   168  str x5, [jssp, #16]
0xffff8bd236ac   172  mov x0, x1
0xffff8bd236b0   176  mov x1, x6
0xffff8bd236b4   180  ldr x2, pc+324 (addr 0x0000ffff8bd237f8)    ;; external reference (isolate)
0xffff8bd236b8   184  ldr x16, pc+328 (addr 0x0000ffff8bd23800)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd236bc   188  and csp, jssp, #0xfffffffffffffff0
0xffff8bd236c0   192  blr x16
0xffff8bd236c4   196  ldp x5, x6, [jssp, #16]
0xffff8bd236c8   200  ldp x1, x4, [jssp], #32
0xffff8bd236cc   204  ldp x9, x10, [jssp, #16]
0xffff8bd236d0   208  ldp x7, x8, [jssp], #32
0xffff8bd236d4   212  ldp x13, x14, [jssp, #16]
0xffff8bd236d8   216  ldp x11, x12, [jssp], #32
0xffff8bd236dc   220  ldr lr, [jssp, #16]
0xffff8bd236e0   224  ldp x15, x18, [jssp], #24
0xffff8bd236e4   228  ldp x2, x0, [jssp], #16
0xffff8bd236e8   232  ret
0xffff8bd236ec   236  sub csp, jssp, #0x10 (16)
0xffff8bd236f0   240  stp x2, x0, [jssp, #-16]!
0xffff8bd236f4   244  and x3, x1, #0xfffffffffff00000
0xffff8bd236f8   248  ldr x0, [x3, #104]
0xffff8bd236fc   252  subs x0, x0, #0x1 (1)
0xffff8bd23700   256  str x0, [x3, #104]
0xffff8bd23704   260  b.mi #+0x84 (addr 0xffff8bd23788)
0xffff8bd23708   264  ubfx x16, x1, #8, #12
0xffff8bd2370c   268  and x3, x1, #0xfffffffffff00000
0xffff8bd23710   272  add x3, x3, x16, lsl #2
0xffff8bd23714   276  ubfx x0, x1, #3, #5
0xffff8bd23718   280  ldr x3, [x3, #360]
0xffff8bd2371c   284  lsr x3, x3, x0
0xffff8bd23720   288  tbz w3, #0, #+0x8 (addr 0xffff8bd23728)
0xffff8bd23724   292  tbnz w3, #1, #+0xc (addr 0xffff8bd23730)
0xffff8bd23728   296  ldp x2, x0, [jssp], #16
0xffff8bd2372c   300  ret
0xffff8bd23730   304  ldr x3, [x6]
0xffff8bd23734   308  and x0, x3, #0xfffffffffff00000
0xffff8bd23738   312  ldr x0, [x0, #8]
0xffff8bd2373c   316  tbz w0, #6, #+0x18 (addr 0xffff8bd23754)
0xffff8bd23740   320  and x0, x1, #0xfffffffffff00000
0xffff8bd23744   324  ldr x0, [x0, #8]
0xffff8bd23748   328  movz x16, #0x58
0xffff8bd2374c   332  tst x0, x16
0xffff8bd23750   336  b.eq #+0x38 (addr 0xffff8bd23788)
0xffff8bd23754   340  sub csp, jssp, #0x10 (16)
0xffff8bd23758   344  stp x1, x6, [jssp, #-16]!
0xffff8bd2375c   348  ubfx x16, x3, #8, #12
0xffff8bd23760   352  and x0, x3, #0xfffffffffff00000
0xffff8bd23764   356  add x0, x0, x16, lsl #2
0xffff8bd23768   360  ubfx x1, x3, #3, #5
0xffff8bd2376c   364  ldr x6, [x0, #360]
0xffff8bd23770   368  lsr x6, x6, x1
0xffff8bd23774   372  tbz w6, #0, #+0x10 (addr 0xffff8bd23784)
0xffff8bd23778   376  ldp x1, x6, [jssp], #16
0xffff8bd2377c   380  ldp x2, x0, [jssp], #16
0xffff8bd23780   384  ret
0xffff8bd23784   388  ldp x1, x6, [jssp], #16
0xffff8bd23788   392  sub csp, jssp, #0x78 (120)
0xffff8bd2378c   396  stp x14, x15, [jssp, #-32]!
0xffff8bd23790   400  stp x18, lr, [jssp, #16]
0xffff8bd23794   404  stp x10, x11, [jssp, #-32]!
0xffff8bd23798   408  stp x12, x13, [jssp, #16]
0xffff8bd2379c   412  stp x6, x7, [jssp, #-32]!
0xffff8bd237a0   416  stp x8, x9, [jssp, #16]
0xffff8bd237a4   420  stp x1, x4, [jssp, #-24]!
0xffff8bd237a8   424  str x5, [jssp, #16]
0xffff8bd237ac   428  mov x0, x1
0xffff8bd237b0   432  mov x1, x6
0xffff8bd237b4   436  ldr x2, pc+84 (addr 0x0000ffff8bd23808)    ;; external reference (isolate)
0xffff8bd237b8   440  ldr x16, pc+88 (addr 0x0000ffff8bd23810)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd237bc   444  and csp, jssp, #0xfffffffffffffff0
0xffff8bd237c0   448  blr x16
0xffff8bd237c4   452  ldp x5, x6, [jssp, #16]
0xffff8bd237c8   456  ldp x1, x4, [jssp], #32
0xffff8bd237cc   460  ldp x9, x10, [jssp, #16]
0xffff8bd237d0   464  ldp x7, x8, [jssp], #32
0xffff8bd237d4   468  ldp x13, x14, [jssp, #16]
0xffff8bd237d8   472  ldp x11, x12, [jssp], #32
0xffff8bd237dc   476  ldr lr, [jssp, #16]
0xffff8bd237e0   480  ldp x15, x18, [jssp], #24
0xffff8bd237e4   484  ldp x2, x0, [jssp], #16
0xffff8bd237e8   488  ret
0xffff8bd237ec   492  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff8bd237f0   496  d63f03e0       constant
0xffff8bd237f4   500  d503201f       constant
0xffff8bd237f8   504  2cb8d2d0       constant
0xffff8bd237fc   508  00000000       constant
0xffff8bd23800   512  00c2d958       constant
0xffff8bd23804   516  00000000       constant
0xffff8bd23808   520  2cb8d2d0       constant
0xffff8bd2380c   524  00000000       constant
0xffff8bd23810   528  00c2d958       constant
0xffff8bd23814   532  00000000       constant


RelocInfo (size = 18)
0xffff8bd236b4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd236b8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd237b4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd237b8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd237ec  constant pool (size 44)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff8bd23880     0  adr xzr, #+0x40 (addr 0xffff8bd238c0)
0xffff8bd23884     4  adr xzr, #+0x2a8 (addr 0xffff8bd23b2c)
0xffff8bd23888     8  ldr x16, pc+1368 (addr 0x0000ffff8bd23de0)    ;; external reference (store_buffer_top)
0xffff8bd2388c    12  ldr x10, [x16]
0xffff8bd23890    16  str x6, [x10], #8
0xffff8bd23894    20  str x10, [x16]
0xffff8bd23898    24  tst x10, #0x1ffff
0xffff8bd2389c    28  b.eq #+0x8 (addr 0xffff8bd238a4)
0xffff8bd238a0    32  ret
0xffff8bd238a4    36  sub csp, jssp, #0x8 (8)
0xffff8bd238a8    40  str lr, [jssp, #-8]!
0xffff8bd238ac    44  ldr x17, pc+1340 (addr 0x0000ffff8bd23de8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd238b0    48  blr x17
0xffff8bd238b4    52  ldr lr, [jssp], #8
0xffff8bd238b8    56  ret
0xffff8bd238bc    60  ret
0xffff8bd238c0    64  sub csp, jssp, #0x10 (16)
0xffff8bd238c4    68  stp x2, x0, [jssp, #-16]!
0xffff8bd238c8    72  ldr x10, [x6]
0xffff8bd238cc    76  and x16, x10, #0xfffffffffff00000
0xffff8bd238d0    80  ldr x16, [x16, #8]
0xffff8bd238d4    84  tst x16, #0x18
0xffff8bd238d8    88  b.eq #+0x17c (addr 0xffff8bd23a54)
0xffff8bd238dc    92  and x16, x1, #0xfffffffffff00000
0xffff8bd238e0    96  ldr x16, [x16, #8]
0xffff8bd238e4   100  tst x16, #0x18
0xffff8bd238e8   104  b.ne #+0x16c (addr 0xffff8bd23a54)
0xffff8bd238ec   108  and x10, x1, #0xfffffffffff00000
0xffff8bd238f0   112  ldr x0, [x10, #104]
0xffff8bd238f4   116  subs x0, x0, #0x1 (1)
0xffff8bd238f8   120  str x0, [x10, #104]
0xffff8bd238fc   124  b.mi #+0xc4 (addr 0xffff8bd239c0)
0xffff8bd23900   128  ubfx x16, x1, #8, #12
0xffff8bd23904   132  and x10, x1, #0xfffffffffff00000
0xffff8bd23908   136  add x10, x10, x16, lsl #2
0xffff8bd2390c   140  ubfx x0, x1, #3, #5
0xffff8bd23910   144  ldr x10, [x10, #360]
0xffff8bd23914   148  lsr x10, x10, x0
0xffff8bd23918   152  tbz w10, #0, #+0x8 (addr 0xffff8bd23920)
0xffff8bd2391c   156  tbnz w10, #1, #+0x3c (addr 0xffff8bd23958)
0xffff8bd23920   160  ldp x2, x0, [jssp], #16
0xffff8bd23924   164  ldr x16, pc+1228 (addr 0x0000ffff8bd23df0)    ;; external reference (store_buffer_top)
0xffff8bd23928   168  ldr x10, [x16]
0xffff8bd2392c   172  str x6, [x10], #8
0xffff8bd23930   176  str x10, [x16]
0xffff8bd23934   180  tst x10, #0x1ffff
0xffff8bd23938   184  b.eq #+0x8 (addr 0xffff8bd23940)
0xffff8bd2393c   188  ret
0xffff8bd23940   192  sub csp, jssp, #0x8 (8)
0xffff8bd23944   196  str lr, [jssp, #-8]!
0xffff8bd23948   200  ldr x17, pc+1200 (addr 0x0000ffff8bd23df8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2394c   204  blr x17
0xffff8bd23950   208  ldr lr, [jssp], #8
0xffff8bd23954   212  ret
0xffff8bd23958   216  ldr x10, [x6]
0xffff8bd2395c   220  sub csp, jssp, #0x10 (16)
0xffff8bd23960   224  stp x1, x6, [jssp, #-16]!
0xffff8bd23964   228  ubfx x16, x10, #8, #12
0xffff8bd23968   232  and x0, x10, #0xfffffffffff00000
0xffff8bd2396c   236  add x0, x0, x16, lsl #2
0xffff8bd23970   240  ubfx x1, x10, #3, #5
0xffff8bd23974   244  ldr x6, [x0, #360]
0xffff8bd23978   248  lsr x6, x6, x1
0xffff8bd2397c   252  tbz w6, #0, #+0x40 (addr 0xffff8bd239bc)
0xffff8bd23980   256  ldp x1, x6, [jssp], #16
0xffff8bd23984   260  ldp x2, x0, [jssp], #16
0xffff8bd23988   264  ldr x16, pc+1144 (addr 0x0000ffff8bd23e00)    ;; external reference (store_buffer_top)
0xffff8bd2398c   268  ldr x10, [x16]
0xffff8bd23990   272  str x6, [x10], #8
0xffff8bd23994   276  str x10, [x16]
0xffff8bd23998   280  tst x10, #0x1ffff
0xffff8bd2399c   284  b.eq #+0x8 (addr 0xffff8bd239a4)
0xffff8bd239a0   288  ret
0xffff8bd239a4   292  sub csp, jssp, #0x8 (8)
0xffff8bd239a8   296  str lr, [jssp, #-8]!
0xffff8bd239ac   300  ldr x17, pc+1116 (addr 0x0000ffff8bd23e08)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd239b0   304  blr x17
0xffff8bd239b4   308  ldr lr, [jssp], #8
0xffff8bd239b8   312  ret
0xffff8bd239bc   316  ldp x1, x6, [jssp], #16
0xffff8bd239c0   320  sub csp, jssp, #0x78 (120)
0xffff8bd239c4   324  stp x14, x15, [jssp, #-32]!
0xffff8bd239c8   328  stp x18, lr, [jssp, #16]
0xffff8bd239cc   332  stp x9, x11, [jssp, #-32]!
0xffff8bd239d0   336  stp x12, x13, [jssp, #16]
0xffff8bd239d4   340  stp x5, x6, [jssp, #-32]!
0xffff8bd239d8   344  stp x7, x8, [jssp, #16]
0xffff8bd239dc   348  stp x1, x3, [jssp, #-24]!
0xffff8bd239e0   352  str x4, [jssp, #16]
0xffff8bd239e4   356  mov x0, x1
0xffff8bd239e8   360  mov x1, x6
0xffff8bd239ec   364  ldr x2, pc+1060 (addr 0x0000ffff8bd23e10)    ;; external reference (isolate)
0xffff8bd239f0   368  ldr x16, pc+1064 (addr 0x0000ffff8bd23e18)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd239f4   372  and csp, jssp, #0xfffffffffffffff0
0xffff8bd239f8   376  blr x16
0xffff8bd239fc   380  ldp x4, x5, [jssp, #16]
0xffff8bd23a00   384  ldp x1, x3, [jssp], #32
0xffff8bd23a04   388  ldp x8, x9, [jssp, #16]
0xffff8bd23a08   392  ldp x6, x7, [jssp], #32
0xffff8bd23a0c   396  ldp x13, x14, [jssp, #16]
0xffff8bd23a10   400  ldp x11, x12, [jssp], #32
0xffff8bd23a14   404  ldr lr, [jssp, #16]
0xffff8bd23a18   408  ldp x15, x18, [jssp], #24
0xffff8bd23a1c   412  ldp x2, x0, [jssp], #16
0xffff8bd23a20   416  ldr x16, pc+1024 (addr 0x0000ffff8bd23e20)    ;; external reference (store_buffer_top)
0xffff8bd23a24   420  ldr x10, [x16]
0xffff8bd23a28   424  str x6, [x10], #8
0xffff8bd23a2c   428  str x10, [x16]
0xffff8bd23a30   432  tst x10, #0x1ffff
0xffff8bd23a34   436  b.eq #+0x8 (addr 0xffff8bd23a3c)
0xffff8bd23a38   440  ret
0xffff8bd23a3c   444  sub csp, jssp, #0x8 (8)
0xffff8bd23a40   448  str lr, [jssp, #-8]!
0xffff8bd23a44   452  ldr x17, pc+996 (addr 0x0000ffff8bd23e28)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd23a48   456  blr x17
0xffff8bd23a4c   460  ldr lr, [jssp], #8
0xffff8bd23a50   464  ret
0xffff8bd23a54   468  and x10, x1, #0xfffffffffff00000
0xffff8bd23a58   472  ldr x0, [x10, #104]
0xffff8bd23a5c   476  subs x0, x0, #0x1 (1)
0xffff8bd23a60   480  str x0, [x10, #104]
0xffff8bd23a64   484  b.mi #+0x64 (addr 0xffff8bd23ac8)
0xffff8bd23a68   488  ubfx x16, x1, #8, #12
0xffff8bd23a6c   492  and x10, x1, #0xfffffffffff00000
0xffff8bd23a70   496  add x10, x10, x16, lsl #2
0xffff8bd23a74   500  ubfx x0, x1, #3, #5
0xffff8bd23a78   504  ldr x10, [x10, #360]
0xffff8bd23a7c   508  lsr x10, x10, x0
0xffff8bd23a80   512  tbz w10, #0, #+0x8 (addr 0xffff8bd23a88)
0xffff8bd23a84   516  tbnz w10, #1, #+0xc (addr 0xffff8bd23a90)
0xffff8bd23a88   520  ldp x2, x0, [jssp], #16
0xffff8bd23a8c   524  ret
0xffff8bd23a90   528  ldr x10, [x6]
0xffff8bd23a94   532  sub csp, jssp, #0x10 (16)
0xffff8bd23a98   536  stp x1, x6, [jssp, #-16]!
0xffff8bd23a9c   540  ubfx x16, x10, #8, #12
0xffff8bd23aa0   544  and x0, x10, #0xfffffffffff00000
0xffff8bd23aa4   548  add x0, x0, x16, lsl #2
0xffff8bd23aa8   552  ubfx x1, x10, #3, #5
0xffff8bd23aac   556  ldr x6, [x0, #360]
0xffff8bd23ab0   560  lsr x6, x6, x1
0xffff8bd23ab4   564  tbz w6, #0, #+0x10 (addr 0xffff8bd23ac4)
0xffff8bd23ab8   568  ldp x1, x6, [jssp], #16
0xffff8bd23abc   572  ldp x2, x0, [jssp], #16
0xffff8bd23ac0   576  ret
0xffff8bd23ac4   580  ldp x1, x6, [jssp], #16
0xffff8bd23ac8   584  sub csp, jssp, #0x78 (120)
0xffff8bd23acc   588  stp x14, x15, [jssp, #-32]!
0xffff8bd23ad0   592  stp x18, lr, [jssp, #16]
0xffff8bd23ad4   596  stp x9, x11, [jssp, #-32]!
0xffff8bd23ad8   600  stp x12, x13, [jssp, #16]
0xffff8bd23adc   604  stp x5, x6, [jssp, #-32]!
0xffff8bd23ae0   608  stp x7, x8, [jssp, #16]
0xffff8bd23ae4   612  stp x1, x3, [jssp, #-24]!
0xffff8bd23ae8   616  str x4, [jssp, #16]
0xffff8bd23aec   620  mov x0, x1
0xffff8bd23af0   624  mov x1, x6
0xffff8bd23af4   628  ldr x2, pc+828 (addr 0x0000ffff8bd23e30)    ;; external reference (isolate)
0xffff8bd23af8   632  ldr x16, pc+832 (addr 0x0000ffff8bd23e38)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd23afc   636  and csp, jssp, #0xfffffffffffffff0
0xffff8bd23b00   640  blr x16
0xffff8bd23b04   644  ldp x4, x5, [jssp, #16]
0xffff8bd23b08   648  ldp x1, x3, [jssp], #32
0xffff8bd23b0c   652  ldp x8, x9, [jssp, #16]
0xffff8bd23b10   656  ldp x6, x7, [jssp], #32
0xffff8bd23b14   660  ldp x13, x14, [jssp, #16]
0xffff8bd23b18   664  ldp x11, x12, [jssp], #32
0xffff8bd23b1c   668  ldr lr, [jssp, #16]
0xffff8bd23b20   672  ldp x15, x18, [jssp], #24
0xffff8bd23b24   676  ldp x2, x0, [jssp], #16
0xffff8bd23b28   680  ret
0xffff8bd23b2c   684  sub csp, jssp, #0x10 (16)
0xffff8bd23b30   688  stp x2, x0, [jssp, #-16]!
0xffff8bd23b34   692  ldr x10, [x6]
0xffff8bd23b38   696  and x16, x10, #0xfffffffffff00000
0xffff8bd23b3c   700  ldr x16, [x16, #8]
0xffff8bd23b40   704  tst x16, #0x18
0xffff8bd23b44   708  b.eq #+0x19c (addr 0xffff8bd23ce0)
0xffff8bd23b48   712  and x16, x1, #0xfffffffffff00000
0xffff8bd23b4c   716  ldr x16, [x16, #8]
0xffff8bd23b50   720  tst x16, #0x18
0xffff8bd23b54   724  b.ne #+0x18c (addr 0xffff8bd23ce0)
0xffff8bd23b58   728  and x10, x1, #0xfffffffffff00000
0xffff8bd23b5c   732  ldr x0, [x10, #104]
0xffff8bd23b60   736  subs x0, x0, #0x1 (1)
0xffff8bd23b64   740  str x0, [x10, #104]
0xffff8bd23b68   744  b.mi #+0xe4 (addr 0xffff8bd23c4c)
0xffff8bd23b6c   748  ubfx x16, x1, #8, #12
0xffff8bd23b70   752  and x10, x1, #0xfffffffffff00000
0xffff8bd23b74   756  add x10, x10, x16, lsl #2
0xffff8bd23b78   760  ubfx x0, x1, #3, #5
0xffff8bd23b7c   764  ldr x10, [x10, #360]
0xffff8bd23b80   768  lsr x10, x10, x0
0xffff8bd23b84   772  tbz w10, #0, #+0x8 (addr 0xffff8bd23b8c)
0xffff8bd23b88   776  tbnz w10, #1, #+0x3c (addr 0xffff8bd23bc4)
0xffff8bd23b8c   780  ldp x2, x0, [jssp], #16
0xffff8bd23b90   784  ldr x16, pc+688 (addr 0x0000ffff8bd23e40)    ;; external reference (store_buffer_top)
0xffff8bd23b94   788  ldr x10, [x16]
0xffff8bd23b98   792  str x6, [x10], #8
0xffff8bd23b9c   796  str x10, [x16]
0xffff8bd23ba0   800  tst x10, #0x1ffff
0xffff8bd23ba4   804  b.eq #+0x8 (addr 0xffff8bd23bac)
0xffff8bd23ba8   808  ret
0xffff8bd23bac   812  sub csp, jssp, #0x8 (8)
0xffff8bd23bb0   816  str lr, [jssp, #-8]!
0xffff8bd23bb4   820  ldr x17, pc+660 (addr 0x0000ffff8bd23e48)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd23bb8   824  blr x17
0xffff8bd23bbc   828  ldr lr, [jssp], #8
0xffff8bd23bc0   832  ret
0xffff8bd23bc4   836  ldr x10, [x6]
0xffff8bd23bc8   840  and x0, x10, #0xfffffffffff00000
0xffff8bd23bcc   844  ldr x0, [x0, #8]
0xffff8bd23bd0   848  tbz w0, #6, #+0x18 (addr 0xffff8bd23be8)
0xffff8bd23bd4   852  and x0, x1, #0xfffffffffff00000
0xffff8bd23bd8   856  ldr x0, [x0, #8]
0xffff8bd23bdc   860  movz x16, #0x58
0xffff8bd23be0   864  tst x0, x16
0xffff8bd23be4   868  b.eq #+0x68 (addr 0xffff8bd23c4c)
0xffff8bd23be8   872  sub csp, jssp, #0x10 (16)
0xffff8bd23bec   876  stp x1, x6, [jssp, #-16]!
0xffff8bd23bf0   880  ubfx x16, x10, #8, #12
0xffff8bd23bf4   884  and x0, x10, #0xfffffffffff00000
0xffff8bd23bf8   888  add x0, x0, x16, lsl #2
0xffff8bd23bfc   892  ubfx x1, x10, #3, #5
0xffff8bd23c00   896  ldr x6, [x0, #360]
0xffff8bd23c04   900  lsr x6, x6, x1
0xffff8bd23c08   904  tbz w6, #0, #+0x40 (addr 0xffff8bd23c48)
0xffff8bd23c0c   908  ldp x1, x6, [jssp], #16
0xffff8bd23c10   912  ldp x2, x0, [jssp], #16
0xffff8bd23c14   916  ldr x16, pc+572 (addr 0x0000ffff8bd23e50)    ;; external reference (store_buffer_top)
0xffff8bd23c18   920  ldr x10, [x16]
0xffff8bd23c1c   924  str x6, [x10], #8
0xffff8bd23c20   928  str x10, [x16]
0xffff8bd23c24   932  tst x10, #0x1ffff
0xffff8bd23c28   936  b.eq #+0x8 (addr 0xffff8bd23c30)
0xffff8bd23c2c   940  ret
0xffff8bd23c30   944  sub csp, jssp, #0x8 (8)
0xffff8bd23c34   948  str lr, [jssp, #-8]!
0xffff8bd23c38   952  ldr x17, pc+544 (addr 0x0000ffff8bd23e58)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd23c3c   956  blr x17
0xffff8bd23c40   960  ldr lr, [jssp], #8
0xffff8bd23c44   964  ret
0xffff8bd23c48   968  ldp x1, x6, [jssp], #16
0xffff8bd23c4c   972  sub csp, jssp, #0x78 (120)
0xffff8bd23c50   976  stp x14, x15, [jssp, #-32]!
0xffff8bd23c54   980  stp x18, lr, [jssp, #16]
0xffff8bd23c58   984  stp x9, x11, [jssp, #-32]!
0xffff8bd23c5c   988  stp x12, x13, [jssp, #16]
0xffff8bd23c60   992  stp x5, x6, [jssp, #-32]!
0xffff8bd23c64   996  stp x7, x8, [jssp, #16]
0xffff8bd23c68  1000  stp x1, x3, [jssp, #-24]!
0xffff8bd23c6c  1004  str x4, [jssp, #16]
0xffff8bd23c70  1008  mov x0, x1
0xffff8bd23c74  1012  mov x1, x6
0xffff8bd23c78  1016  ldr x2, pc+488 (addr 0x0000ffff8bd23e60)    ;; external reference (isolate)
0xffff8bd23c7c  1020  ldr x16, pc+492 (addr 0x0000ffff8bd23e68)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd23c80  1024  and csp, jssp, #0xfffffffffffffff0
0xffff8bd23c84  1028  blr x16
0xffff8bd23c88  1032  ldp x4, x5, [jssp, #16]
0xffff8bd23c8c  1036  ldp x1, x3, [jssp], #32
0xffff8bd23c90  1040  ldp x8, x9, [jssp, #16]
0xffff8bd23c94  1044  ldp x6, x7, [jssp], #32
0xffff8bd23c98  1048  ldp x13, x14, [jssp, #16]
0xffff8bd23c9c  1052  ldp x11, x12, [jssp], #32
0xffff8bd23ca0  1056  ldr lr, [jssp, #16]
0xffff8bd23ca4  1060  ldp x15, x18, [jssp], #24
0xffff8bd23ca8  1064  ldp x2, x0, [jssp], #16
0xffff8bd23cac  1068  ldr x16, pc+452 (addr 0x0000ffff8bd23e70)    ;; external reference (store_buffer_top)
0xffff8bd23cb0  1072  ldr x10, [x16]
0xffff8bd23cb4  1076  str x6, [x10], #8
0xffff8bd23cb8  1080  str x10, [x16]
0xffff8bd23cbc  1084  tst x10, #0x1ffff
0xffff8bd23cc0  1088  b.eq #+0x8 (addr 0xffff8bd23cc8)
0xffff8bd23cc4  1092  ret
0xffff8bd23cc8  1096  sub csp, jssp, #0x8 (8)
0xffff8bd23ccc  1100  str lr, [jssp, #-8]!
0xffff8bd23cd0  1104  ldr x17, pc+424 (addr 0x0000ffff8bd23e78)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd23cd4  1108  blr x17
0xffff8bd23cd8  1112  ldr lr, [jssp], #8
0xffff8bd23cdc  1116  ret
0xffff8bd23ce0  1120  and x10, x1, #0xfffffffffff00000
0xffff8bd23ce4  1124  ldr x0, [x10, #104]
0xffff8bd23ce8  1128  subs x0, x0, #0x1 (1)
0xffff8bd23cec  1132  str x0, [x10, #104]
0xffff8bd23cf0  1136  b.mi #+0x84 (addr 0xffff8bd23d74)
0xffff8bd23cf4  1140  ubfx x16, x1, #8, #12
0xffff8bd23cf8  1144  and x10, x1, #0xfffffffffff00000
0xffff8bd23cfc  1148  add x10, x10, x16, lsl #2
0xffff8bd23d00  1152  ubfx x0, x1, #3, #5
0xffff8bd23d04  1156  ldr x10, [x10, #360]
0xffff8bd23d08  1160  lsr x10, x10, x0
0xffff8bd23d0c  1164  tbz w10, #0, #+0x8 (addr 0xffff8bd23d14)
0xffff8bd23d10  1168  tbnz w10, #1, #+0xc (addr 0xffff8bd23d1c)
0xffff8bd23d14  1172  ldp x2, x0, [jssp], #16
0xffff8bd23d18  1176  ret
0xffff8bd23d1c  1180  ldr x10, [x6]
0xffff8bd23d20  1184  and x0, x10, #0xfffffffffff00000
0xffff8bd23d24  1188  ldr x0, [x0, #8]
0xffff8bd23d28  1192  tbz w0, #6, #+0x18 (addr 0xffff8bd23d40)
0xffff8bd23d2c  1196  and x0, x1, #0xfffffffffff00000
0xffff8bd23d30  1200  ldr x0, [x0, #8]
0xffff8bd23d34  1204  movz x16, #0x58
0xffff8bd23d38  1208  tst x0, x16
0xffff8bd23d3c  1212  b.eq #+0x38 (addr 0xffff8bd23d74)
0xffff8bd23d40  1216  sub csp, jssp, #0x10 (16)
0xffff8bd23d44  1220  stp x1, x6, [jssp, #-16]!
0xffff8bd23d48  1224  ubfx x16, x10, #8, #12
0xffff8bd23d4c  1228  and x0, x10, #0xfffffffffff00000
0xffff8bd23d50  1232  add x0, x0, x16, lsl #2
0xffff8bd23d54  1236  ubfx x1, x10, #3, #5
0xffff8bd23d58  1240  ldr x6, [x0, #360]
0xffff8bd23d5c  1244  lsr x6, x6, x1
0xffff8bd23d60  1248  tbz w6, #0, #+0x10 (addr 0xffff8bd23d70)
0xffff8bd23d64  1252  ldp x1, x6, [jssp], #16
0xffff8bd23d68  1256  ldp x2, x0, [jssp], #16
0xffff8bd23d6c  1260  ret
0xffff8bd23d70  1264  ldp x1, x6, [jssp], #16
0xffff8bd23d74  1268  sub csp, jssp, #0x78 (120)
0xffff8bd23d78  1272  stp x14, x15, [jssp, #-32]!
0xffff8bd23d7c  1276  stp x18, lr, [jssp, #16]
0xffff8bd23d80  1280  stp x9, x11, [jssp, #-32]!
0xffff8bd23d84  1284  stp x12, x13, [jssp, #16]
0xffff8bd23d88  1288  stp x5, x6, [jssp, #-32]!
0xffff8bd23d8c  1292  stp x7, x8, [jssp, #16]
0xffff8bd23d90  1296  stp x1, x3, [jssp, #-24]!
0xffff8bd23d94  1300  str x4, [jssp, #16]
0xffff8bd23d98  1304  mov x0, x1
0xffff8bd23d9c  1308  mov x1, x6
0xffff8bd23da0  1312  ldr x2, pc+224 (addr 0x0000ffff8bd23e80)    ;; external reference (isolate)
0xffff8bd23da4  1316  ldr x16, pc+228 (addr 0x0000ffff8bd23e88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd23da8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff8bd23dac  1324  blr x16
0xffff8bd23db0  1328  ldp x4, x5, [jssp, #16]
0xffff8bd23db4  1332  ldp x1, x3, [jssp], #32
0xffff8bd23db8  1336  ldp x8, x9, [jssp, #16]
0xffff8bd23dbc  1340  ldp x6, x7, [jssp], #32
0xffff8bd23dc0  1344  ldp x13, x14, [jssp, #16]
0xffff8bd23dc4  1348  ldp x11, x12, [jssp], #32
0xffff8bd23dc8  1352  ldr lr, [jssp, #16]
0xffff8bd23dcc  1356  ldp x15, x18, [jssp], #24
0xffff8bd23dd0  1360  ldp x2, x0, [jssp], #16
0xffff8bd23dd4  1364  ret
0xffff8bd23dd8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd23ddc  1372  d63f03e0       constant
0xffff8bd23de0  1376  2cb8e8c0       constant
0xffff8bd23de4  1380  00000000       constant
0xffff8bd23de8  1384  8bd064c0       constant
0xffff8bd23dec  1388  0000ffff       constant
0xffff8bd23df0  1392  2cb8e8c0       constant
0xffff8bd23df4  1396  00000000       constant
0xffff8bd23df8  1400  8bd064c0       constant
0xffff8bd23dfc  1404  0000ffff       constant
0xffff8bd23e00  1408  2cb8e8c0       constant
0xffff8bd23e04  1412  00000000       constant
0xffff8bd23e08  1416  8bd064c0       constant
0xffff8bd23e0c  1420  0000ffff       constant
0xffff8bd23e10  1424  2cb8d2d0       constant
0xffff8bd23e14  1428  00000000       constant
0xffff8bd23e18  1432  00c2d958       constant
0xffff8bd23e1c  1436  00000000       constant
0xffff8bd23e20  1440  2cb8e8c0       constant
0xffff8bd23e24  1444  00000000       constant
0xffff8bd23e28  1448  8bd064c0       constant
0xffff8bd23e2c  1452  0000ffff       constant
0xffff8bd23e30  1456  2cb8d2d0       constant
0xffff8bd23e34  1460  00000000       constant
0xffff8bd23e38  1464  00c2d958       constant
0xffff8bd23e3c  1468  00000000       constant
0xffff8bd23e40  1472  2cb8e8c0       constant
0xffff8bd23e44  1476  00000000       constant
0xffff8bd23e48  1480  8bd064c0       constant
0xffff8bd23e4c  1484  0000ffff       constant
0xffff8bd23e50  1488  2cb8e8c0       constant
0xffff8bd23e54  1492  00000000       constant
0xffff8bd23e58  1496  8bd064c0       constant
0xffff8bd23e5c  1500  0000ffff       constant
0xffff8bd23e60  1504  2cb8d2d0       constant
0xffff8bd23e64  1508  00000000       constant
0xffff8bd23e68  1512  00c2d958       constant
0xffff8bd23e6c  1516  00000000       constant
0xffff8bd23e70  1520  2cb8e8c0       constant
0xffff8bd23e74  1524  00000000       constant
0xffff8bd23e78  1528  8bd064c0       constant
0xffff8bd23e7c  1532  0000ffff       constant
0xffff8bd23e80  1536  2cb8d2d0       constant
0xffff8bd23e84  1540  00000000       constant
0xffff8bd23e88  1544  00c2d958       constant
0xffff8bd23e8c  1548  00000000       constant


RelocInfo (size = 59)
0xffff8bd23888  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd238ac  code target (STUB)  (0xffff8bd064c0)
0xffff8bd23924  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd23948  code target (STUB)  (0xffff8bd064c0)
0xffff8bd23988  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd239ac  code target (STUB)  (0xffff8bd064c0)
0xffff8bd239ec  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd239f0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd23a20  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd23a44  code target (STUB)  (0xffff8bd064c0)
0xffff8bd23af4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd23af8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd23b90  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd23bb4  code target (STUB)  (0xffff8bd064c0)
0xffff8bd23c14  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd23c38  code target (STUB)  (0xffff8bd064c0)
0xffff8bd23c78  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd23c7c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd23cac  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd23cd0  code target (STUB)  (0xffff8bd064c0)
0xffff8bd23da0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd23da4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd23dd8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff8bd23f00     0  adr xzr, #+0x40 (addr 0xffff8bd23f40)
0xffff8bd23f04     4  adr xzr, #+0x2a8 (addr 0xffff8bd241ac)
0xffff8bd23f08     8  ldr x16, pc+1368 (addr 0x0000ffff8bd24460)    ;; external reference (store_buffer_top)
0xffff8bd23f0c    12  ldr x3, [x16]
0xffff8bd23f10    16  str x10, [x3], #8
0xffff8bd23f14    20  str x3, [x16]
0xffff8bd23f18    24  tst x3, #0x1ffff
0xffff8bd23f1c    28  b.eq #+0x8 (addr 0xffff8bd23f24)
0xffff8bd23f20    32  ret
0xffff8bd23f24    36  sub csp, jssp, #0x8 (8)
0xffff8bd23f28    40  str lr, [jssp, #-8]!
0xffff8bd23f2c    44  ldr x17, pc+1340 (addr 0x0000ffff8bd24468)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd23f30    48  blr x17
0xffff8bd23f34    52  ldr lr, [jssp], #8
0xffff8bd23f38    56  ret
0xffff8bd23f3c    60  ret
0xffff8bd23f40    64  sub csp, jssp, #0x10 (16)
0xffff8bd23f44    68  stp x2, x0, [jssp, #-16]!
0xffff8bd23f48    72  ldr x3, [x10]
0xffff8bd23f4c    76  and x16, x3, #0xfffffffffff00000
0xffff8bd23f50    80  ldr x16, [x16, #8]
0xffff8bd23f54    84  tst x16, #0x18
0xffff8bd23f58    88  b.eq #+0x17c (addr 0xffff8bd240d4)
0xffff8bd23f5c    92  and x16, x1, #0xfffffffffff00000
0xffff8bd23f60    96  ldr x16, [x16, #8]
0xffff8bd23f64   100  tst x16, #0x18
0xffff8bd23f68   104  b.ne #+0x16c (addr 0xffff8bd240d4)
0xffff8bd23f6c   108  and x3, x1, #0xfffffffffff00000
0xffff8bd23f70   112  ldr x0, [x3, #104]
0xffff8bd23f74   116  subs x0, x0, #0x1 (1)
0xffff8bd23f78   120  str x0, [x3, #104]
0xffff8bd23f7c   124  b.mi #+0xc4 (addr 0xffff8bd24040)
0xffff8bd23f80   128  ubfx x16, x1, #8, #12
0xffff8bd23f84   132  and x3, x1, #0xfffffffffff00000
0xffff8bd23f88   136  add x3, x3, x16, lsl #2
0xffff8bd23f8c   140  ubfx x0, x1, #3, #5
0xffff8bd23f90   144  ldr x3, [x3, #360]
0xffff8bd23f94   148  lsr x3, x3, x0
0xffff8bd23f98   152  tbz w3, #0, #+0x8 (addr 0xffff8bd23fa0)
0xffff8bd23f9c   156  tbnz w3, #1, #+0x3c (addr 0xffff8bd23fd8)
0xffff8bd23fa0   160  ldp x2, x0, [jssp], #16
0xffff8bd23fa4   164  ldr x16, pc+1228 (addr 0x0000ffff8bd24470)    ;; external reference (store_buffer_top)
0xffff8bd23fa8   168  ldr x3, [x16]
0xffff8bd23fac   172  str x10, [x3], #8
0xffff8bd23fb0   176  str x3, [x16]
0xffff8bd23fb4   180  tst x3, #0x1ffff
0xffff8bd23fb8   184  b.eq #+0x8 (addr 0xffff8bd23fc0)
0xffff8bd23fbc   188  ret
0xffff8bd23fc0   192  sub csp, jssp, #0x8 (8)
0xffff8bd23fc4   196  str lr, [jssp, #-8]!
0xffff8bd23fc8   200  ldr x17, pc+1200 (addr 0x0000ffff8bd24478)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd23fcc   204  blr x17
0xffff8bd23fd0   208  ldr lr, [jssp], #8
0xffff8bd23fd4   212  ret
0xffff8bd23fd8   216  ldr x3, [x10]
0xffff8bd23fdc   220  sub csp, jssp, #0x10 (16)
0xffff8bd23fe0   224  stp x1, x10, [jssp, #-16]!
0xffff8bd23fe4   228  ubfx x16, x3, #8, #12
0xffff8bd23fe8   232  and x0, x3, #0xfffffffffff00000
0xffff8bd23fec   236  add x0, x0, x16, lsl #2
0xffff8bd23ff0   240  ubfx x1, x3, #3, #5
0xffff8bd23ff4   244  ldr x10, [x0, #360]
0xffff8bd23ff8   248  lsr x10, x10, x1
0xffff8bd23ffc   252  tbz w10, #0, #+0x40 (addr 0xffff8bd2403c)
0xffff8bd24000   256  ldp x1, x10, [jssp], #16
0xffff8bd24004   260  ldp x2, x0, [jssp], #16
0xffff8bd24008   264  ldr x16, pc+1144 (addr 0x0000ffff8bd24480)    ;; external reference (store_buffer_top)
0xffff8bd2400c   268  ldr x3, [x16]
0xffff8bd24010   272  str x10, [x3], #8
0xffff8bd24014   276  str x3, [x16]
0xffff8bd24018   280  tst x3, #0x1ffff
0xffff8bd2401c   284  b.eq #+0x8 (addr 0xffff8bd24024)
0xffff8bd24020   288  ret
0xffff8bd24024   292  sub csp, jssp, #0x8 (8)
0xffff8bd24028   296  str lr, [jssp, #-8]!
0xffff8bd2402c   300  ldr x17, pc+1116 (addr 0x0000ffff8bd24488)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd24030   304  blr x17
0xffff8bd24034   308  ldr lr, [jssp], #8
0xffff8bd24038   312  ret
0xffff8bd2403c   316  ldp x1, x10, [jssp], #16
0xffff8bd24040   320  sub csp, jssp, #0x78 (120)
0xffff8bd24044   324  stp x14, x15, [jssp, #-32]!
0xffff8bd24048   328  stp x18, lr, [jssp, #16]
0xffff8bd2404c   332  stp x10, x11, [jssp, #-32]!
0xffff8bd24050   336  stp x12, x13, [jssp, #16]
0xffff8bd24054   340  stp x6, x7, [jssp, #-32]!
0xffff8bd24058   344  stp x8, x9, [jssp, #16]
0xffff8bd2405c   348  stp x1, x4, [jssp, #-24]!
0xffff8bd24060   352  str x5, [jssp, #16]
0xffff8bd24064   356  mov x0, x1
0xffff8bd24068   360  mov x1, x10
0xffff8bd2406c   364  ldr x2, pc+1060 (addr 0x0000ffff8bd24490)    ;; external reference (isolate)
0xffff8bd24070   368  ldr x16, pc+1064 (addr 0x0000ffff8bd24498)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd24074   372  and csp, jssp, #0xfffffffffffffff0
0xffff8bd24078   376  blr x16
0xffff8bd2407c   380  ldp x5, x6, [jssp, #16]
0xffff8bd24080   384  ldp x1, x4, [jssp], #32
0xffff8bd24084   388  ldp x9, x10, [jssp, #16]
0xffff8bd24088   392  ldp x7, x8, [jssp], #32
0xffff8bd2408c   396  ldp x13, x14, [jssp, #16]
0xffff8bd24090   400  ldp x11, x12, [jssp], #32
0xffff8bd24094   404  ldr lr, [jssp, #16]
0xffff8bd24098   408  ldp x15, x18, [jssp], #24
0xffff8bd2409c   412  ldp x2, x0, [jssp], #16
0xffff8bd240a0   416  ldr x16, pc+1024 (addr 0x0000ffff8bd244a0)    ;; external reference (store_buffer_top)
0xffff8bd240a4   420  ldr x3, [x16]
0xffff8bd240a8   424  str x10, [x3], #8
0xffff8bd240ac   428  str x3, [x16]
0xffff8bd240b0   432  tst x3, #0x1ffff
0xffff8bd240b4   436  b.eq #+0x8 (addr 0xffff8bd240bc)
0xffff8bd240b8   440  ret
0xffff8bd240bc   444  sub csp, jssp, #0x8 (8)
0xffff8bd240c0   448  str lr, [jssp, #-8]!
0xffff8bd240c4   452  ldr x17, pc+996 (addr 0x0000ffff8bd244a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd240c8   456  blr x17
0xffff8bd240cc   460  ldr lr, [jssp], #8
0xffff8bd240d0   464  ret
0xffff8bd240d4   468  and x3, x1, #0xfffffffffff00000
0xffff8bd240d8   472  ldr x0, [x3, #104]
0xffff8bd240dc   476  subs x0, x0, #0x1 (1)
0xffff8bd240e0   480  str x0, [x3, #104]
0xffff8bd240e4   484  b.mi #+0x64 (addr 0xffff8bd24148)
0xffff8bd240e8   488  ubfx x16, x1, #8, #12
0xffff8bd240ec   492  and x3, x1, #0xfffffffffff00000
0xffff8bd240f0   496  add x3, x3, x16, lsl #2
0xffff8bd240f4   500  ubfx x0, x1, #3, #5
0xffff8bd240f8   504  ldr x3, [x3, #360]
0xffff8bd240fc   508  lsr x3, x3, x0
0xffff8bd24100   512  tbz w3, #0, #+0x8 (addr 0xffff8bd24108)
0xffff8bd24104   516  tbnz w3, #1, #+0xc (addr 0xffff8bd24110)
0xffff8bd24108   520  ldp x2, x0, [jssp], #16
0xffff8bd2410c   524  ret
0xffff8bd24110   528  ldr x3, [x10]
0xffff8bd24114   532  sub csp, jssp, #0x10 (16)
0xffff8bd24118   536  stp x1, x10, [jssp, #-16]!
0xffff8bd2411c   540  ubfx x16, x3, #8, #12
0xffff8bd24120   544  and x0, x3, #0xfffffffffff00000
0xffff8bd24124   548  add x0, x0, x16, lsl #2
0xffff8bd24128   552  ubfx x1, x3, #3, #5
0xffff8bd2412c   556  ldr x10, [x0, #360]
0xffff8bd24130   560  lsr x10, x10, x1
0xffff8bd24134   564  tbz w10, #0, #+0x10 (addr 0xffff8bd24144)
0xffff8bd24138   568  ldp x1, x10, [jssp], #16
0xffff8bd2413c   572  ldp x2, x0, [jssp], #16
0xffff8bd24140   576  ret
0xffff8bd24144   580  ldp x1, x10, [jssp], #16
0xffff8bd24148   584  sub csp, jssp, #0x78 (120)
0xffff8bd2414c   588  stp x14, x15, [jssp, #-32]!
0xffff8bd24150   592  stp x18, lr, [jssp, #16]
0xffff8bd24154   596  stp x10, x11, [jssp, #-32]!
0xffff8bd24158   600  stp x12, x13, [jssp, #16]
0xffff8bd2415c   604  stp x6, x7, [jssp, #-32]!
0xffff8bd24160   608  stp x8, x9, [jssp, #16]
0xffff8bd24164   612  stp x1, x4, [jssp, #-24]!
0xffff8bd24168   616  str x5, [jssp, #16]
0xffff8bd2416c   620  mov x0, x1
0xffff8bd24170   624  mov x1, x10
0xffff8bd24174   628  ldr x2, pc+828 (addr 0x0000ffff8bd244b0)    ;; external reference (isolate)
0xffff8bd24178   632  ldr x16, pc+832 (addr 0x0000ffff8bd244b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2417c   636  and csp, jssp, #0xfffffffffffffff0
0xffff8bd24180   640  blr x16
0xffff8bd24184   644  ldp x5, x6, [jssp, #16]
0xffff8bd24188   648  ldp x1, x4, [jssp], #32
0xffff8bd2418c   652  ldp x9, x10, [jssp, #16]
0xffff8bd24190   656  ldp x7, x8, [jssp], #32
0xffff8bd24194   660  ldp x13, x14, [jssp, #16]
0xffff8bd24198   664  ldp x11, x12, [jssp], #32
0xffff8bd2419c   668  ldr lr, [jssp, #16]
0xffff8bd241a0   672  ldp x15, x18, [jssp], #24
0xffff8bd241a4   676  ldp x2, x0, [jssp], #16
0xffff8bd241a8   680  ret
0xffff8bd241ac   684  sub csp, jssp, #0x10 (16)
0xffff8bd241b0   688  stp x2, x0, [jssp, #-16]!
0xffff8bd241b4   692  ldr x3, [x10]
0xffff8bd241b8   696  and x16, x3, #0xfffffffffff00000
0xffff8bd241bc   700  ldr x16, [x16, #8]
0xffff8bd241c0   704  tst x16, #0x18
0xffff8bd241c4   708  b.eq #+0x19c (addr 0xffff8bd24360)
0xffff8bd241c8   712  and x16, x1, #0xfffffffffff00000
0xffff8bd241cc   716  ldr x16, [x16, #8]
0xffff8bd241d0   720  tst x16, #0x18
0xffff8bd241d4   724  b.ne #+0x18c (addr 0xffff8bd24360)
0xffff8bd241d8   728  and x3, x1, #0xfffffffffff00000
0xffff8bd241dc   732  ldr x0, [x3, #104]
0xffff8bd241e0   736  subs x0, x0, #0x1 (1)
0xffff8bd241e4   740  str x0, [x3, #104]
0xffff8bd241e8   744  b.mi #+0xe4 (addr 0xffff8bd242cc)
0xffff8bd241ec   748  ubfx x16, x1, #8, #12
0xffff8bd241f0   752  and x3, x1, #0xfffffffffff00000
0xffff8bd241f4   756  add x3, x3, x16, lsl #2
0xffff8bd241f8   760  ubfx x0, x1, #3, #5
0xffff8bd241fc   764  ldr x3, [x3, #360]
0xffff8bd24200   768  lsr x3, x3, x0
0xffff8bd24204   772  tbz w3, #0, #+0x8 (addr 0xffff8bd2420c)
0xffff8bd24208   776  tbnz w3, #1, #+0x3c (addr 0xffff8bd24244)
0xffff8bd2420c   780  ldp x2, x0, [jssp], #16
0xffff8bd24210   784  ldr x16, pc+688 (addr 0x0000ffff8bd244c0)    ;; external reference (store_buffer_top)
0xffff8bd24214   788  ldr x3, [x16]
0xffff8bd24218   792  str x10, [x3], #8
0xffff8bd2421c   796  str x3, [x16]
0xffff8bd24220   800  tst x3, #0x1ffff
0xffff8bd24224   804  b.eq #+0x8 (addr 0xffff8bd2422c)
0xffff8bd24228   808  ret
0xffff8bd2422c   812  sub csp, jssp, #0x8 (8)
0xffff8bd24230   816  str lr, [jssp, #-8]!
0xffff8bd24234   820  ldr x17, pc+660 (addr 0x0000ffff8bd244c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd24238   824  blr x17
0xffff8bd2423c   828  ldr lr, [jssp], #8
0xffff8bd24240   832  ret
0xffff8bd24244   836  ldr x3, [x10]
0xffff8bd24248   840  and x0, x3, #0xfffffffffff00000
0xffff8bd2424c   844  ldr x0, [x0, #8]
0xffff8bd24250   848  tbz w0, #6, #+0x18 (addr 0xffff8bd24268)
0xffff8bd24254   852  and x0, x1, #0xfffffffffff00000
0xffff8bd24258   856  ldr x0, [x0, #8]
0xffff8bd2425c   860  movz x16, #0x58
0xffff8bd24260   864  tst x0, x16
0xffff8bd24264   868  b.eq #+0x68 (addr 0xffff8bd242cc)
0xffff8bd24268   872  sub csp, jssp, #0x10 (16)
0xffff8bd2426c   876  stp x1, x10, [jssp, #-16]!
0xffff8bd24270   880  ubfx x16, x3, #8, #12
0xffff8bd24274   884  and x0, x3, #0xfffffffffff00000
0xffff8bd24278   888  add x0, x0, x16, lsl #2
0xffff8bd2427c   892  ubfx x1, x3, #3, #5
0xffff8bd24280   896  ldr x10, [x0, #360]
0xffff8bd24284   900  lsr x10, x10, x1
0xffff8bd24288   904  tbz w10, #0, #+0x40 (addr 0xffff8bd242c8)
0xffff8bd2428c   908  ldp x1, x10, [jssp], #16
0xffff8bd24290   912  ldp x2, x0, [jssp], #16
0xffff8bd24294   916  ldr x16, pc+572 (addr 0x0000ffff8bd244d0)    ;; external reference (store_buffer_top)
0xffff8bd24298   920  ldr x3, [x16]
0xffff8bd2429c   924  str x10, [x3], #8
0xffff8bd242a0   928  str x3, [x16]
0xffff8bd242a4   932  tst x3, #0x1ffff
0xffff8bd242a8   936  b.eq #+0x8 (addr 0xffff8bd242b0)
0xffff8bd242ac   940  ret
0xffff8bd242b0   944  sub csp, jssp, #0x8 (8)
0xffff8bd242b4   948  str lr, [jssp, #-8]!
0xffff8bd242b8   952  ldr x17, pc+544 (addr 0x0000ffff8bd244d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd242bc   956  blr x17
0xffff8bd242c0   960  ldr lr, [jssp], #8
0xffff8bd242c4   964  ret
0xffff8bd242c8   968  ldp x1, x10, [jssp], #16
0xffff8bd242cc   972  sub csp, jssp, #0x78 (120)
0xffff8bd242d0   976  stp x14, x15, [jssp, #-32]!
0xffff8bd242d4   980  stp x18, lr, [jssp, #16]
0xffff8bd242d8   984  stp x10, x11, [jssp, #-32]!
0xffff8bd242dc   988  stp x12, x13, [jssp, #16]
0xffff8bd242e0   992  stp x6, x7, [jssp, #-32]!
0xffff8bd242e4   996  stp x8, x9, [jssp, #16]
0xffff8bd242e8  1000  stp x1, x4, [jssp, #-24]!
0xffff8bd242ec  1004  str x5, [jssp, #16]
0xffff8bd242f0  1008  mov x0, x1
0xffff8bd242f4  1012  mov x1, x10
0xffff8bd242f8  1016  ldr x2, pc+488 (addr 0x0000ffff8bd244e0)    ;; external reference (isolate)
0xffff8bd242fc  1020  ldr x16, pc+492 (addr 0x0000ffff8bd244e8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd24300  1024  and csp, jssp, #0xfffffffffffffff0
0xffff8bd24304  1028  blr x16
0xffff8bd24308  1032  ldp x5, x6, [jssp, #16]
0xffff8bd2430c  1036  ldp x1, x4, [jssp], #32
0xffff8bd24310  1040  ldp x9, x10, [jssp, #16]
0xffff8bd24314  1044  ldp x7, x8, [jssp], #32
0xffff8bd24318  1048  ldp x13, x14, [jssp, #16]
0xffff8bd2431c  1052  ldp x11, x12, [jssp], #32
0xffff8bd24320  1056  ldr lr, [jssp, #16]
0xffff8bd24324  1060  ldp x15, x18, [jssp], #24
0xffff8bd24328  1064  ldp x2, x0, [jssp], #16
0xffff8bd2432c  1068  ldr x16, pc+452 (addr 0x0000ffff8bd244f0)    ;; external reference (store_buffer_top)
0xffff8bd24330  1072  ldr x3, [x16]
0xffff8bd24334  1076  str x10, [x3], #8
0xffff8bd24338  1080  str x3, [x16]
0xffff8bd2433c  1084  tst x3, #0x1ffff
0xffff8bd24340  1088  b.eq #+0x8 (addr 0xffff8bd24348)
0xffff8bd24344  1092  ret
0xffff8bd24348  1096  sub csp, jssp, #0x8 (8)
0xffff8bd2434c  1100  str lr, [jssp, #-8]!
0xffff8bd24350  1104  ldr x17, pc+424 (addr 0x0000ffff8bd244f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd24354  1108  blr x17
0xffff8bd24358  1112  ldr lr, [jssp], #8
0xffff8bd2435c  1116  ret
0xffff8bd24360  1120  and x3, x1, #0xfffffffffff00000
0xffff8bd24364  1124  ldr x0, [x3, #104]
0xffff8bd24368  1128  subs x0, x0, #0x1 (1)
0xffff8bd2436c  1132  str x0, [x3, #104]
0xffff8bd24370  1136  b.mi #+0x84 (addr 0xffff8bd243f4)
0xffff8bd24374  1140  ubfx x16, x1, #8, #12
0xffff8bd24378  1144  and x3, x1, #0xfffffffffff00000
0xffff8bd2437c  1148  add x3, x3, x16, lsl #2
0xffff8bd24380  1152  ubfx x0, x1, #3, #5
0xffff8bd24384  1156  ldr x3, [x3, #360]
0xffff8bd24388  1160  lsr x3, x3, x0
0xffff8bd2438c  1164  tbz w3, #0, #+0x8 (addr 0xffff8bd24394)
0xffff8bd24390  1168  tbnz w3, #1, #+0xc (addr 0xffff8bd2439c)
0xffff8bd24394  1172  ldp x2, x0, [jssp], #16
0xffff8bd24398  1176  ret
0xffff8bd2439c  1180  ldr x3, [x10]
0xffff8bd243a0  1184  and x0, x3, #0xfffffffffff00000
0xffff8bd243a4  1188  ldr x0, [x0, #8]
0xffff8bd243a8  1192  tbz w0, #6, #+0x18 (addr 0xffff8bd243c0)
0xffff8bd243ac  1196  and x0, x1, #0xfffffffffff00000
0xffff8bd243b0  1200  ldr x0, [x0, #8]
0xffff8bd243b4  1204  movz x16, #0x58
0xffff8bd243b8  1208  tst x0, x16
0xffff8bd243bc  1212  b.eq #+0x38 (addr 0xffff8bd243f4)
0xffff8bd243c0  1216  sub csp, jssp, #0x10 (16)
0xffff8bd243c4  1220  stp x1, x10, [jssp, #-16]!
0xffff8bd243c8  1224  ubfx x16, x3, #8, #12
0xffff8bd243cc  1228  and x0, x3, #0xfffffffffff00000
0xffff8bd243d0  1232  add x0, x0, x16, lsl #2
0xffff8bd243d4  1236  ubfx x1, x3, #3, #5
0xffff8bd243d8  1240  ldr x10, [x0, #360]
0xffff8bd243dc  1244  lsr x10, x10, x1
0xffff8bd243e0  1248  tbz w10, #0, #+0x10 (addr 0xffff8bd243f0)
0xffff8bd243e4  1252  ldp x1, x10, [jssp], #16
0xffff8bd243e8  1256  ldp x2, x0, [jssp], #16
0xffff8bd243ec  1260  ret
0xffff8bd243f0  1264  ldp x1, x10, [jssp], #16
0xffff8bd243f4  1268  sub csp, jssp, #0x78 (120)
0xffff8bd243f8  1272  stp x14, x15, [jssp, #-32]!
0xffff8bd243fc  1276  stp x18, lr, [jssp, #16]
0xffff8bd24400  1280  stp x10, x11, [jssp, #-32]!
0xffff8bd24404  1284  stp x12, x13, [jssp, #16]
0xffff8bd24408  1288  stp x6, x7, [jssp, #-32]!
0xffff8bd2440c  1292  stp x8, x9, [jssp, #16]
0xffff8bd24410  1296  stp x1, x4, [jssp, #-24]!
0xffff8bd24414  1300  str x5, [jssp, #16]
0xffff8bd24418  1304  mov x0, x1
0xffff8bd2441c  1308  mov x1, x10
0xffff8bd24420  1312  ldr x2, pc+224 (addr 0x0000ffff8bd24500)    ;; external reference (isolate)
0xffff8bd24424  1316  ldr x16, pc+228 (addr 0x0000ffff8bd24508)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd24428  1320  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2442c  1324  blr x16
0xffff8bd24430  1328  ldp x5, x6, [jssp, #16]
0xffff8bd24434  1332  ldp x1, x4, [jssp], #32
0xffff8bd24438  1336  ldp x9, x10, [jssp, #16]
0xffff8bd2443c  1340  ldp x7, x8, [jssp], #32
0xffff8bd24440  1344  ldp x13, x14, [jssp, #16]
0xffff8bd24444  1348  ldp x11, x12, [jssp], #32
0xffff8bd24448  1352  ldr lr, [jssp, #16]
0xffff8bd2444c  1356  ldp x15, x18, [jssp], #24
0xffff8bd24450  1360  ldp x2, x0, [jssp], #16
0xffff8bd24454  1364  ret
0xffff8bd24458  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd2445c  1372  d63f03e0       constant
0xffff8bd24460  1376  2cb8e8c0       constant
0xffff8bd24464  1380  00000000       constant
0xffff8bd24468  1384  8bd064c0       constant
0xffff8bd2446c  1388  0000ffff       constant
0xffff8bd24470  1392  2cb8e8c0       constant
0xffff8bd24474  1396  00000000       constant
0xffff8bd24478  1400  8bd064c0       constant
0xffff8bd2447c  1404  0000ffff       constant
0xffff8bd24480  1408  2cb8e8c0       constant
0xffff8bd24484  1412  00000000       constant
0xffff8bd24488  1416  8bd064c0       constant
0xffff8bd2448c  1420  0000ffff       constant
0xffff8bd24490  1424  2cb8d2d0       constant
0xffff8bd24494  1428  00000000       constant
0xffff8bd24498  1432  00c2d958       constant
0xffff8bd2449c  1436  00000000       constant
0xffff8bd244a0  1440  2cb8e8c0       constant
0xffff8bd244a4  1444  00000000       constant
0xffff8bd244a8  1448  8bd064c0       constant
0xffff8bd244ac  1452  0000ffff       constant
0xffff8bd244b0  1456  2cb8d2d0       constant
0xffff8bd244b4  1460  00000000       constant
0xffff8bd244b8  1464  00c2d958       constant
0xffff8bd244bc  1468  00000000       constant
0xffff8bd244c0  1472  2cb8e8c0       constant
0xffff8bd244c4  1476  00000000       constant
0xffff8bd244c8  1480  8bd064c0       constant
0xffff8bd244cc  1484  0000ffff       constant
0xffff8bd244d0  1488  2cb8e8c0       constant
0xffff8bd244d4  1492  00000000       constant
0xffff8bd244d8  1496  8bd064c0       constant
0xffff8bd244dc  1500  0000ffff       constant
0xffff8bd244e0  1504  2cb8d2d0       constant
0xffff8bd244e4  1508  00000000       constant
0xffff8bd244e8  1512  00c2d958       constant
0xffff8bd244ec  1516  00000000       constant
0xffff8bd244f0  1520  2cb8e8c0       constant
0xffff8bd244f4  1524  00000000       constant
0xffff8bd244f8  1528  8bd064c0       constant
0xffff8bd244fc  1532  0000ffff       constant
0xffff8bd24500  1536  2cb8d2d0       constant
0xffff8bd24504  1540  00000000       constant
0xffff8bd24508  1544  00c2d958       constant
0xffff8bd2450c  1548  00000000       constant


RelocInfo (size = 59)
0xffff8bd23f08  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd23f2c  code target (STUB)  (0xffff8bd064c0)
0xffff8bd23fa4  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd23fc8  code target (STUB)  (0xffff8bd064c0)
0xffff8bd24008  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2402c  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2406c  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd24070  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd240a0  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd240c4  code target (STUB)  (0xffff8bd064c0)
0xffff8bd24174  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd24178  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd24210  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd24234  code target (STUB)  (0xffff8bd064c0)
0xffff8bd24294  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd242b8  code target (STUB)  (0xffff8bd064c0)
0xffff8bd242f8  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd242fc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2432c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd24350  code target (STUB)  (0xffff8bd064c0)
0xffff8bd24420  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd24424  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd24458  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff8bd24580     0  adr xzr, #+0x40 (addr 0xffff8bd245c0)
0xffff8bd24584     4  adr xzr, #+0x2a8 (addr 0xffff8bd2482c)
0xffff8bd24588     8  ldr x16, pc+1368 (addr 0x0000ffff8bd24ae0)    ;; external reference (store_buffer_top)
0xffff8bd2458c    12  ldr x5, [x16]
0xffff8bd24590    16  str x13, [x5], #8
0xffff8bd24594    20  str x5, [x16]
0xffff8bd24598    24  tst x5, #0x1ffff
0xffff8bd2459c    28  b.eq #+0x8 (addr 0xffff8bd245a4)
0xffff8bd245a0    32  ret
0xffff8bd245a4    36  sub csp, jssp, #0x8 (8)
0xffff8bd245a8    40  str lr, [jssp, #-8]!
0xffff8bd245ac    44  ldr x17, pc+1340 (addr 0x0000ffff8bd24ae8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd245b0    48  blr x17
0xffff8bd245b4    52  ldr lr, [jssp], #8
0xffff8bd245b8    56  ret
0xffff8bd245bc    60  ret
0xffff8bd245c0    64  sub csp, jssp, #0x10 (16)
0xffff8bd245c4    68  stp x1, x0, [jssp, #-16]!
0xffff8bd245c8    72  ldr x5, [x13]
0xffff8bd245cc    76  and x16, x5, #0xfffffffffff00000
0xffff8bd245d0    80  ldr x16, [x16, #8]
0xffff8bd245d4    84  tst x16, #0x18
0xffff8bd245d8    88  b.eq #+0x17c (addr 0xffff8bd24754)
0xffff8bd245dc    92  and x16, x7, #0xfffffffffff00000
0xffff8bd245e0    96  ldr x16, [x16, #8]
0xffff8bd245e4   100  tst x16, #0x18
0xffff8bd245e8   104  b.ne #+0x16c (addr 0xffff8bd24754)
0xffff8bd245ec   108  and x5, x7, #0xfffffffffff00000
0xffff8bd245f0   112  ldr x0, [x5, #104]
0xffff8bd245f4   116  subs x0, x0, #0x1 (1)
0xffff8bd245f8   120  str x0, [x5, #104]
0xffff8bd245fc   124  b.mi #+0xc4 (addr 0xffff8bd246c0)
0xffff8bd24600   128  ubfx x16, x7, #8, #12
0xffff8bd24604   132  and x5, x7, #0xfffffffffff00000
0xffff8bd24608   136  add x5, x5, x16, lsl #2
0xffff8bd2460c   140  ubfx x0, x7, #3, #5
0xffff8bd24610   144  ldr x5, [x5, #360]
0xffff8bd24614   148  lsr x5, x5, x0
0xffff8bd24618   152  tbz w5, #0, #+0x8 (addr 0xffff8bd24620)
0xffff8bd2461c   156  tbnz w5, #1, #+0x3c (addr 0xffff8bd24658)
0xffff8bd24620   160  ldp x1, x0, [jssp], #16
0xffff8bd24624   164  ldr x16, pc+1228 (addr 0x0000ffff8bd24af0)    ;; external reference (store_buffer_top)
0xffff8bd24628   168  ldr x5, [x16]
0xffff8bd2462c   172  str x13, [x5], #8
0xffff8bd24630   176  str x5, [x16]
0xffff8bd24634   180  tst x5, #0x1ffff
0xffff8bd24638   184  b.eq #+0x8 (addr 0xffff8bd24640)
0xffff8bd2463c   188  ret
0xffff8bd24640   192  sub csp, jssp, #0x8 (8)
0xffff8bd24644   196  str lr, [jssp, #-8]!
0xffff8bd24648   200  ldr x17, pc+1200 (addr 0x0000ffff8bd24af8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2464c   204  blr x17
0xffff8bd24650   208  ldr lr, [jssp], #8
0xffff8bd24654   212  ret
0xffff8bd24658   216  ldr x5, [x13]
0xffff8bd2465c   220  sub csp, jssp, #0x10 (16)
0xffff8bd24660   224  stp x7, x13, [jssp, #-16]!
0xffff8bd24664   228  ubfx x16, x5, #8, #12
0xffff8bd24668   232  and x0, x5, #0xfffffffffff00000
0xffff8bd2466c   236  add x0, x0, x16, lsl #2
0xffff8bd24670   240  ubfx x7, x5, #3, #5
0xffff8bd24674   244  ldr x13, [x0, #360]
0xffff8bd24678   248  lsr x13, x13, x7
0xffff8bd2467c   252  tbz w13, #0, #+0x40 (addr 0xffff8bd246bc)
0xffff8bd24680   256  ldp x7, x13, [jssp], #16
0xffff8bd24684   260  ldp x1, x0, [jssp], #16
0xffff8bd24688   264  ldr x16, pc+1144 (addr 0x0000ffff8bd24b00)    ;; external reference (store_buffer_top)
0xffff8bd2468c   268  ldr x5, [x16]
0xffff8bd24690   272  str x13, [x5], #8
0xffff8bd24694   276  str x5, [x16]
0xffff8bd24698   280  tst x5, #0x1ffff
0xffff8bd2469c   284  b.eq #+0x8 (addr 0xffff8bd246a4)
0xffff8bd246a0   288  ret
0xffff8bd246a4   292  sub csp, jssp, #0x8 (8)
0xffff8bd246a8   296  str lr, [jssp, #-8]!
0xffff8bd246ac   300  ldr x17, pc+1116 (addr 0x0000ffff8bd24b08)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd246b0   304  blr x17
0xffff8bd246b4   308  ldr lr, [jssp], #8
0xffff8bd246b8   312  ret
0xffff8bd246bc   316  ldp x7, x13, [jssp], #16
0xffff8bd246c0   320  sub csp, jssp, #0x78 (120)
0xffff8bd246c4   324  stp x14, x15, [jssp, #-32]!
0xffff8bd246c8   328  stp x18, lr, [jssp, #16]
0xffff8bd246cc   332  stp x10, x11, [jssp, #-32]!
0xffff8bd246d0   336  stp x12, x13, [jssp, #16]
0xffff8bd246d4   340  stp x6, x7, [jssp, #-32]!
0xffff8bd246d8   344  stp x8, x9, [jssp, #16]
0xffff8bd246dc   348  stp x2, x3, [jssp, #-24]!
0xffff8bd246e0   352  str x4, [jssp, #16]
0xffff8bd246e4   356  mov x0, x7
0xffff8bd246e8   360  mov x1, x13
0xffff8bd246ec   364  ldr x2, pc+1060 (addr 0x0000ffff8bd24b10)    ;; external reference (isolate)
0xffff8bd246f0   368  ldr x16, pc+1064 (addr 0x0000ffff8bd24b18)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd246f4   372  and csp, jssp, #0xfffffffffffffff0
0xffff8bd246f8   376  blr x16
0xffff8bd246fc   380  ldp x4, x6, [jssp, #16]
0xffff8bd24700   384  ldp x2, x3, [jssp], #32
0xffff8bd24704   388  ldp x9, x10, [jssp, #16]
0xffff8bd24708   392  ldp x7, x8, [jssp], #32
0xffff8bd2470c   396  ldp x13, x14, [jssp, #16]
0xffff8bd24710   400  ldp x11, x12, [jssp], #32
0xffff8bd24714   404  ldr lr, [jssp, #16]
0xffff8bd24718   408  ldp x15, x18, [jssp], #24
0xffff8bd2471c   412  ldp x1, x0, [jssp], #16
0xffff8bd24720   416  ldr x16, pc+1024 (addr 0x0000ffff8bd24b20)    ;; external reference (store_buffer_top)
0xffff8bd24724   420  ldr x5, [x16]
0xffff8bd24728   424  str x13, [x5], #8
0xffff8bd2472c   428  str x5, [x16]
0xffff8bd24730   432  tst x5, #0x1ffff
0xffff8bd24734   436  b.eq #+0x8 (addr 0xffff8bd2473c)
0xffff8bd24738   440  ret
0xffff8bd2473c   444  sub csp, jssp, #0x8 (8)
0xffff8bd24740   448  str lr, [jssp, #-8]!
0xffff8bd24744   452  ldr x17, pc+996 (addr 0x0000ffff8bd24b28)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd24748   456  blr x17
0xffff8bd2474c   460  ldr lr, [jssp], #8
0xffff8bd24750   464  ret
0xffff8bd24754   468  and x5, x7, #0xfffffffffff00000
0xffff8bd24758   472  ldr x0, [x5, #104]
0xffff8bd2475c   476  subs x0, x0, #0x1 (1)
0xffff8bd24760   480  str x0, [x5, #104]
0xffff8bd24764   484  b.mi #+0x64 (addr 0xffff8bd247c8)
0xffff8bd24768   488  ubfx x16, x7, #8, #12
0xffff8bd2476c   492  and x5, x7, #0xfffffffffff00000
0xffff8bd24770   496  add x5, x5, x16, lsl #2
0xffff8bd24774   500  ubfx x0, x7, #3, #5
0xffff8bd24778   504  ldr x5, [x5, #360]
0xffff8bd2477c   508  lsr x5, x5, x0
0xffff8bd24780   512  tbz w5, #0, #+0x8 (addr 0xffff8bd24788)
0xffff8bd24784   516  tbnz w5, #1, #+0xc (addr 0xffff8bd24790)
0xffff8bd24788   520  ldp x1, x0, [jssp], #16
0xffff8bd2478c   524  ret
0xffff8bd24790   528  ldr x5, [x13]
0xffff8bd24794   532  sub csp, jssp, #0x10 (16)
0xffff8bd24798   536  stp x7, x13, [jssp, #-16]!
0xffff8bd2479c   540  ubfx x16, x5, #8, #12
0xffff8bd247a0   544  and x0, x5, #0xfffffffffff00000
0xffff8bd247a4   548  add x0, x0, x16, lsl #2
0xffff8bd247a8   552  ubfx x7, x5, #3, #5
0xffff8bd247ac   556  ldr x13, [x0, #360]
0xffff8bd247b0   560  lsr x13, x13, x7
0xffff8bd247b4   564  tbz w13, #0, #+0x10 (addr 0xffff8bd247c4)
0xffff8bd247b8   568  ldp x7, x13, [jssp], #16
0xffff8bd247bc   572  ldp x1, x0, [jssp], #16
0xffff8bd247c0   576  ret
0xffff8bd247c4   580  ldp x7, x13, [jssp], #16
0xffff8bd247c8   584  sub csp, jssp, #0x78 (120)
0xffff8bd247cc   588  stp x14, x15, [jssp, #-32]!
0xffff8bd247d0   592  stp x18, lr, [jssp, #16]
0xffff8bd247d4   596  stp x10, x11, [jssp, #-32]!
0xffff8bd247d8   600  stp x12, x13, [jssp, #16]
0xffff8bd247dc   604  stp x6, x7, [jssp, #-32]!
0xffff8bd247e0   608  stp x8, x9, [jssp, #16]
0xffff8bd247e4   612  stp x2, x3, [jssp, #-24]!
0xffff8bd247e8   616  str x4, [jssp, #16]
0xffff8bd247ec   620  mov x0, x7
0xffff8bd247f0   624  mov x1, x13
0xffff8bd247f4   628  ldr x2, pc+828 (addr 0x0000ffff8bd24b30)    ;; external reference (isolate)
0xffff8bd247f8   632  ldr x16, pc+832 (addr 0x0000ffff8bd24b38)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd247fc   636  and csp, jssp, #0xfffffffffffffff0
0xffff8bd24800   640  blr x16
0xffff8bd24804   644  ldp x4, x6, [jssp, #16]
0xffff8bd24808   648  ldp x2, x3, [jssp], #32
0xffff8bd2480c   652  ldp x9, x10, [jssp, #16]
0xffff8bd24810   656  ldp x7, x8, [jssp], #32
0xffff8bd24814   660  ldp x13, x14, [jssp, #16]
0xffff8bd24818   664  ldp x11, x12, [jssp], #32
0xffff8bd2481c   668  ldr lr, [jssp, #16]
0xffff8bd24820   672  ldp x15, x18, [jssp], #24
0xffff8bd24824   676  ldp x1, x0, [jssp], #16
0xffff8bd24828   680  ret
0xffff8bd2482c   684  sub csp, jssp, #0x10 (16)
0xffff8bd24830   688  stp x1, x0, [jssp, #-16]!
0xffff8bd24834   692  ldr x5, [x13]
0xffff8bd24838   696  and x16, x5, #0xfffffffffff00000
0xffff8bd2483c   700  ldr x16, [x16, #8]
0xffff8bd24840   704  tst x16, #0x18
0xffff8bd24844   708  b.eq #+0x19c (addr 0xffff8bd249e0)
0xffff8bd24848   712  and x16, x7, #0xfffffffffff00000
0xffff8bd2484c   716  ldr x16, [x16, #8]
0xffff8bd24850   720  tst x16, #0x18
0xffff8bd24854   724  b.ne #+0x18c (addr 0xffff8bd249e0)
0xffff8bd24858   728  and x5, x7, #0xfffffffffff00000
0xffff8bd2485c   732  ldr x0, [x5, #104]
0xffff8bd24860   736  subs x0, x0, #0x1 (1)
0xffff8bd24864   740  str x0, [x5, #104]
0xffff8bd24868   744  b.mi #+0xe4 (addr 0xffff8bd2494c)
0xffff8bd2486c   748  ubfx x16, x7, #8, #12
0xffff8bd24870   752  and x5, x7, #0xfffffffffff00000
0xffff8bd24874   756  add x5, x5, x16, lsl #2
0xffff8bd24878   760  ubfx x0, x7, #3, #5
0xffff8bd2487c   764  ldr x5, [x5, #360]
0xffff8bd24880   768  lsr x5, x5, x0
0xffff8bd24884   772  tbz w5, #0, #+0x8 (addr 0xffff8bd2488c)
0xffff8bd24888   776  tbnz w5, #1, #+0x3c (addr 0xffff8bd248c4)
0xffff8bd2488c   780  ldp x1, x0, [jssp], #16
0xffff8bd24890   784  ldr x16, pc+688 (addr 0x0000ffff8bd24b40)    ;; external reference (store_buffer_top)
0xffff8bd24894   788  ldr x5, [x16]
0xffff8bd24898   792  str x13, [x5], #8
0xffff8bd2489c   796  str x5, [x16]
0xffff8bd248a0   800  tst x5, #0x1ffff
0xffff8bd248a4   804  b.eq #+0x8 (addr 0xffff8bd248ac)
0xffff8bd248a8   808  ret
0xffff8bd248ac   812  sub csp, jssp, #0x8 (8)
0xffff8bd248b0   816  str lr, [jssp, #-8]!
0xffff8bd248b4   820  ldr x17, pc+660 (addr 0x0000ffff8bd24b48)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd248b8   824  blr x17
0xffff8bd248bc   828  ldr lr, [jssp], #8
0xffff8bd248c0   832  ret
0xffff8bd248c4   836  ldr x5, [x13]
0xffff8bd248c8   840  and x0, x5, #0xfffffffffff00000
0xffff8bd248cc   844  ldr x0, [x0, #8]
0xffff8bd248d0   848  tbz w0, #6, #+0x18 (addr 0xffff8bd248e8)
0xffff8bd248d4   852  and x0, x7, #0xfffffffffff00000
0xffff8bd248d8   856  ldr x0, [x0, #8]
0xffff8bd248dc   860  movz x16, #0x58
0xffff8bd248e0   864  tst x0, x16
0xffff8bd248e4   868  b.eq #+0x68 (addr 0xffff8bd2494c)
0xffff8bd248e8   872  sub csp, jssp, #0x10 (16)
0xffff8bd248ec   876  stp x7, x13, [jssp, #-16]!
0xffff8bd248f0   880  ubfx x16, x5, #8, #12
0xffff8bd248f4   884  and x0, x5, #0xfffffffffff00000
0xffff8bd248f8   888  add x0, x0, x16, lsl #2
0xffff8bd248fc   892  ubfx x7, x5, #3, #5
0xffff8bd24900   896  ldr x13, [x0, #360]
0xffff8bd24904   900  lsr x13, x13, x7
0xffff8bd24908   904  tbz w13, #0, #+0x40 (addr 0xffff8bd24948)
0xffff8bd2490c   908  ldp x7, x13, [jssp], #16
0xffff8bd24910   912  ldp x1, x0, [jssp], #16
0xffff8bd24914   916  ldr x16, pc+572 (addr 0x0000ffff8bd24b50)    ;; external reference (store_buffer_top)
0xffff8bd24918   920  ldr x5, [x16]
0xffff8bd2491c   924  str x13, [x5], #8
0xffff8bd24920   928  str x5, [x16]
0xffff8bd24924   932  tst x5, #0x1ffff
0xffff8bd24928   936  b.eq #+0x8 (addr 0xffff8bd24930)
0xffff8bd2492c   940  ret
0xffff8bd24930   944  sub csp, jssp, #0x8 (8)
0xffff8bd24934   948  str lr, [jssp, #-8]!
0xffff8bd24938   952  ldr x17, pc+544 (addr 0x0000ffff8bd24b58)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2493c   956  blr x17
0xffff8bd24940   960  ldr lr, [jssp], #8
0xffff8bd24944   964  ret
0xffff8bd24948   968  ldp x7, x13, [jssp], #16
0xffff8bd2494c   972  sub csp, jssp, #0x78 (120)
0xffff8bd24950   976  stp x14, x15, [jssp, #-32]!
0xffff8bd24954   980  stp x18, lr, [jssp, #16]
0xffff8bd24958   984  stp x10, x11, [jssp, #-32]!
0xffff8bd2495c   988  stp x12, x13, [jssp, #16]
0xffff8bd24960   992  stp x6, x7, [jssp, #-32]!
0xffff8bd24964   996  stp x8, x9, [jssp, #16]
0xffff8bd24968  1000  stp x2, x3, [jssp, #-24]!
0xffff8bd2496c  1004  str x4, [jssp, #16]
0xffff8bd24970  1008  mov x0, x7
0xffff8bd24974  1012  mov x1, x13
0xffff8bd24978  1016  ldr x2, pc+488 (addr 0x0000ffff8bd24b60)    ;; external reference (isolate)
0xffff8bd2497c  1020  ldr x16, pc+492 (addr 0x0000ffff8bd24b68)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd24980  1024  and csp, jssp, #0xfffffffffffffff0
0xffff8bd24984  1028  blr x16
0xffff8bd24988  1032  ldp x4, x6, [jssp, #16]
0xffff8bd2498c  1036  ldp x2, x3, [jssp], #32
0xffff8bd24990  1040  ldp x9, x10, [jssp, #16]
0xffff8bd24994  1044  ldp x7, x8, [jssp], #32
0xffff8bd24998  1048  ldp x13, x14, [jssp, #16]
0xffff8bd2499c  1052  ldp x11, x12, [jssp], #32
0xffff8bd249a0  1056  ldr lr, [jssp, #16]
0xffff8bd249a4  1060  ldp x15, x18, [jssp], #24
0xffff8bd249a8  1064  ldp x1, x0, [jssp], #16
0xffff8bd249ac  1068  ldr x16, pc+452 (addr 0x0000ffff8bd24b70)    ;; external reference (store_buffer_top)
0xffff8bd249b0  1072  ldr x5, [x16]
0xffff8bd249b4  1076  str x13, [x5], #8
0xffff8bd249b8  1080  str x5, [x16]
0xffff8bd249bc  1084  tst x5, #0x1ffff
0xffff8bd249c0  1088  b.eq #+0x8 (addr 0xffff8bd249c8)
0xffff8bd249c4  1092  ret
0xffff8bd249c8  1096  sub csp, jssp, #0x8 (8)
0xffff8bd249cc  1100  str lr, [jssp, #-8]!
0xffff8bd249d0  1104  ldr x17, pc+424 (addr 0x0000ffff8bd24b78)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd249d4  1108  blr x17
0xffff8bd249d8  1112  ldr lr, [jssp], #8
0xffff8bd249dc  1116  ret
0xffff8bd249e0  1120  and x5, x7, #0xfffffffffff00000
0xffff8bd249e4  1124  ldr x0, [x5, #104]
0xffff8bd249e8  1128  subs x0, x0, #0x1 (1)
0xffff8bd249ec  1132  str x0, [x5, #104]
0xffff8bd249f0  1136  b.mi #+0x84 (addr 0xffff8bd24a74)
0xffff8bd249f4  1140  ubfx x16, x7, #8, #12
0xffff8bd249f8  1144  and x5, x7, #0xfffffffffff00000
0xffff8bd249fc  1148  add x5, x5, x16, lsl #2
0xffff8bd24a00  1152  ubfx x0, x7, #3, #5
0xffff8bd24a04  1156  ldr x5, [x5, #360]
0xffff8bd24a08  1160  lsr x5, x5, x0
0xffff8bd24a0c  1164  tbz w5, #0, #+0x8 (addr 0xffff8bd24a14)
0xffff8bd24a10  1168  tbnz w5, #1, #+0xc (addr 0xffff8bd24a1c)
0xffff8bd24a14  1172  ldp x1, x0, [jssp], #16
0xffff8bd24a18  1176  ret
0xffff8bd24a1c  1180  ldr x5, [x13]
0xffff8bd24a20  1184  and x0, x5, #0xfffffffffff00000
0xffff8bd24a24  1188  ldr x0, [x0, #8]
0xffff8bd24a28  1192  tbz w0, #6, #+0x18 (addr 0xffff8bd24a40)
0xffff8bd24a2c  1196  and x0, x7, #0xfffffffffff00000
0xffff8bd24a30  1200  ldr x0, [x0, #8]
0xffff8bd24a34  1204  movz x16, #0x58
0xffff8bd24a38  1208  tst x0, x16
0xffff8bd24a3c  1212  b.eq #+0x38 (addr 0xffff8bd24a74)
0xffff8bd24a40  1216  sub csp, jssp, #0x10 (16)
0xffff8bd24a44  1220  stp x7, x13, [jssp, #-16]!
0xffff8bd24a48  1224  ubfx x16, x5, #8, #12
0xffff8bd24a4c  1228  and x0, x5, #0xfffffffffff00000
0xffff8bd24a50  1232  add x0, x0, x16, lsl #2
0xffff8bd24a54  1236  ubfx x7, x5, #3, #5
0xffff8bd24a58  1240  ldr x13, [x0, #360]
0xffff8bd24a5c  1244  lsr x13, x13, x7
0xffff8bd24a60  1248  tbz w13, #0, #+0x10 (addr 0xffff8bd24a70)
0xffff8bd24a64  1252  ldp x7, x13, [jssp], #16
0xffff8bd24a68  1256  ldp x1, x0, [jssp], #16
0xffff8bd24a6c  1260  ret
0xffff8bd24a70  1264  ldp x7, x13, [jssp], #16
0xffff8bd24a74  1268  sub csp, jssp, #0x78 (120)
0xffff8bd24a78  1272  stp x14, x15, [jssp, #-32]!
0xffff8bd24a7c  1276  stp x18, lr, [jssp, #16]
0xffff8bd24a80  1280  stp x10, x11, [jssp, #-32]!
0xffff8bd24a84  1284  stp x12, x13, [jssp, #16]
0xffff8bd24a88  1288  stp x6, x7, [jssp, #-32]!
0xffff8bd24a8c  1292  stp x8, x9, [jssp, #16]
0xffff8bd24a90  1296  stp x2, x3, [jssp, #-24]!
0xffff8bd24a94  1300  str x4, [jssp, #16]
0xffff8bd24a98  1304  mov x0, x7
0xffff8bd24a9c  1308  mov x1, x13
0xffff8bd24aa0  1312  ldr x2, pc+224 (addr 0x0000ffff8bd24b80)    ;; external reference (isolate)
0xffff8bd24aa4  1316  ldr x16, pc+228 (addr 0x0000ffff8bd24b88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd24aa8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff8bd24aac  1324  blr x16
0xffff8bd24ab0  1328  ldp x4, x6, [jssp, #16]
0xffff8bd24ab4  1332  ldp x2, x3, [jssp], #32
0xffff8bd24ab8  1336  ldp x9, x10, [jssp, #16]
0xffff8bd24abc  1340  ldp x7, x8, [jssp], #32
0xffff8bd24ac0  1344  ldp x13, x14, [jssp, #16]
0xffff8bd24ac4  1348  ldp x11, x12, [jssp], #32
0xffff8bd24ac8  1352  ldr lr, [jssp, #16]
0xffff8bd24acc  1356  ldp x15, x18, [jssp], #24
0xffff8bd24ad0  1360  ldp x1, x0, [jssp], #16
0xffff8bd24ad4  1364  ret
0xffff8bd24ad8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd24adc  1372  d63f03e0       constant
0xffff8bd24ae0  1376  2cb8e8c0       constant
0xffff8bd24ae4  1380  00000000       constant
0xffff8bd24ae8  1384  8bd064c0       constant
0xffff8bd24aec  1388  0000ffff       constant
0xffff8bd24af0  1392  2cb8e8c0       constant
0xffff8bd24af4  1396  00000000       constant
0xffff8bd24af8  1400  8bd064c0       constant
0xffff8bd24afc  1404  0000ffff       constant
0xffff8bd24b00  1408  2cb8e8c0       constant
0xffff8bd24b04  1412  00000000       constant
0xffff8bd24b08  1416  8bd064c0       constant
0xffff8bd24b0c  1420  0000ffff       constant
0xffff8bd24b10  1424  2cb8d2d0       constant
0xffff8bd24b14  1428  00000000       constant
0xffff8bd24b18  1432  00c2d958       constant
0xffff8bd24b1c  1436  00000000       constant
0xffff8bd24b20  1440  2cb8e8c0       constant
0xffff8bd24b24  1444  00000000       constant
0xffff8bd24b28  1448  8bd064c0       constant
0xffff8bd24b2c  1452  0000ffff       constant
0xffff8bd24b30  1456  2cb8d2d0       constant
0xffff8bd24b34  1460  00000000       constant
0xffff8bd24b38  1464  00c2d958       constant
0xffff8bd24b3c  1468  00000000       constant
0xffff8bd24b40  1472  2cb8e8c0       constant
0xffff8bd24b44  1476  00000000       constant
0xffff8bd24b48  1480  8bd064c0       constant
0xffff8bd24b4c  1484  0000ffff       constant
0xffff8bd24b50  1488  2cb8e8c0       constant
0xffff8bd24b54  1492  00000000       constant
0xffff8bd24b58  1496  8bd064c0       constant
0xffff8bd24b5c  1500  0000ffff       constant
0xffff8bd24b60  1504  2cb8d2d0       constant
0xffff8bd24b64  1508  00000000       constant
0xffff8bd24b68  1512  00c2d958       constant
0xffff8bd24b6c  1516  00000000       constant
0xffff8bd24b70  1520  2cb8e8c0       constant
0xffff8bd24b74  1524  00000000       constant
0xffff8bd24b78  1528  8bd064c0       constant
0xffff8bd24b7c  1532  0000ffff       constant
0xffff8bd24b80  1536  2cb8d2d0       constant
0xffff8bd24b84  1540  00000000       constant
0xffff8bd24b88  1544  00c2d958       constant
0xffff8bd24b8c  1548  00000000       constant


RelocInfo (size = 59)
0xffff8bd24588  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd245ac  code target (STUB)  (0xffff8bd064c0)
0xffff8bd24624  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd24648  code target (STUB)  (0xffff8bd064c0)
0xffff8bd24688  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd246ac  code target (STUB)  (0xffff8bd064c0)
0xffff8bd246ec  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd246f0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd24720  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd24744  code target (STUB)  (0xffff8bd064c0)
0xffff8bd247f4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd247f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd24890  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd248b4  code target (STUB)  (0xffff8bd064c0)
0xffff8bd24914  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd24938  code target (STUB)  (0xffff8bd064c0)
0xffff8bd24978  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2497c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd249ac  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd249d0  code target (STUB)  (0xffff8bd064c0)
0xffff8bd24aa0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd24aa4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd24ad8  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff8bd24c00     0  adr xzr, #+0x40 (addr 0xffff8bd24c40)
0xffff8bd24c04     4  adr xzr, #+0x2a8 (addr 0xffff8bd24eac)
0xffff8bd24c08     8  ldr x16, pc+1368 (addr 0x0000ffff8bd25160)    ;; external reference (store_buffer_top)
0xffff8bd24c0c    12  ldr x7, [x16]
0xffff8bd24c10    16  str x13, [x7], #8
0xffff8bd24c14    20  str x7, [x16]
0xffff8bd24c18    24  tst x7, #0x1ffff
0xffff8bd24c1c    28  b.eq #+0x8 (addr 0xffff8bd24c24)
0xffff8bd24c20    32  ret
0xffff8bd24c24    36  sub csp, jssp, #0x8 (8)
0xffff8bd24c28    40  str lr, [jssp, #-8]!
0xffff8bd24c2c    44  ldr x17, pc+1340 (addr 0x0000ffff8bd25168)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd24c30    48  blr x17
0xffff8bd24c34    52  ldr lr, [jssp], #8
0xffff8bd24c38    56  ret
0xffff8bd24c3c    60  ret
0xffff8bd24c40    64  sub csp, jssp, #0x10 (16)
0xffff8bd24c44    68  stp x2, x0, [jssp, #-16]!
0xffff8bd24c48    72  ldr x7, [x13]
0xffff8bd24c4c    76  and x16, x7, #0xfffffffffff00000
0xffff8bd24c50    80  ldr x16, [x16, #8]
0xffff8bd24c54    84  tst x16, #0x18
0xffff8bd24c58    88  b.eq #+0x17c (addr 0xffff8bd24dd4)
0xffff8bd24c5c    92  and x16, x1, #0xfffffffffff00000
0xffff8bd24c60    96  ldr x16, [x16, #8]
0xffff8bd24c64   100  tst x16, #0x18
0xffff8bd24c68   104  b.ne #+0x16c (addr 0xffff8bd24dd4)
0xffff8bd24c6c   108  and x7, x1, #0xfffffffffff00000
0xffff8bd24c70   112  ldr x0, [x7, #104]
0xffff8bd24c74   116  subs x0, x0, #0x1 (1)
0xffff8bd24c78   120  str x0, [x7, #104]
0xffff8bd24c7c   124  b.mi #+0xc4 (addr 0xffff8bd24d40)
0xffff8bd24c80   128  ubfx x16, x1, #8, #12
0xffff8bd24c84   132  and x7, x1, #0xfffffffffff00000
0xffff8bd24c88   136  add x7, x7, x16, lsl #2
0xffff8bd24c8c   140  ubfx x0, x1, #3, #5
0xffff8bd24c90   144  ldr x7, [x7, #360]
0xffff8bd24c94   148  lsr x7, x7, x0
0xffff8bd24c98   152  tbz w7, #0, #+0x8 (addr 0xffff8bd24ca0)
0xffff8bd24c9c   156  tbnz w7, #1, #+0x3c (addr 0xffff8bd24cd8)
0xffff8bd24ca0   160  ldp x2, x0, [jssp], #16
0xffff8bd24ca4   164  ldr x16, pc+1228 (addr 0x0000ffff8bd25170)    ;; external reference (store_buffer_top)
0xffff8bd24ca8   168  ldr x7, [x16]
0xffff8bd24cac   172  str x13, [x7], #8
0xffff8bd24cb0   176  str x7, [x16]
0xffff8bd24cb4   180  tst x7, #0x1ffff
0xffff8bd24cb8   184  b.eq #+0x8 (addr 0xffff8bd24cc0)
0xffff8bd24cbc   188  ret
0xffff8bd24cc0   192  sub csp, jssp, #0x8 (8)
0xffff8bd24cc4   196  str lr, [jssp, #-8]!
0xffff8bd24cc8   200  ldr x17, pc+1200 (addr 0x0000ffff8bd25178)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd24ccc   204  blr x17
0xffff8bd24cd0   208  ldr lr, [jssp], #8
0xffff8bd24cd4   212  ret
0xffff8bd24cd8   216  ldr x7, [x13]
0xffff8bd24cdc   220  sub csp, jssp, #0x10 (16)
0xffff8bd24ce0   224  stp x1, x13, [jssp, #-16]!
0xffff8bd24ce4   228  ubfx x16, x7, #8, #12
0xffff8bd24ce8   232  and x0, x7, #0xfffffffffff00000
0xffff8bd24cec   236  add x0, x0, x16, lsl #2
0xffff8bd24cf0   240  ubfx x1, x7, #3, #5
0xffff8bd24cf4   244  ldr x13, [x0, #360]
0xffff8bd24cf8   248  lsr x13, x13, x1
0xffff8bd24cfc   252  tbz w13, #0, #+0x40 (addr 0xffff8bd24d3c)
0xffff8bd24d00   256  ldp x1, x13, [jssp], #16
0xffff8bd24d04   260  ldp x2, x0, [jssp], #16
0xffff8bd24d08   264  ldr x16, pc+1144 (addr 0x0000ffff8bd25180)    ;; external reference (store_buffer_top)
0xffff8bd24d0c   268  ldr x7, [x16]
0xffff8bd24d10   272  str x13, [x7], #8
0xffff8bd24d14   276  str x7, [x16]
0xffff8bd24d18   280  tst x7, #0x1ffff
0xffff8bd24d1c   284  b.eq #+0x8 (addr 0xffff8bd24d24)
0xffff8bd24d20   288  ret
0xffff8bd24d24   292  sub csp, jssp, #0x8 (8)
0xffff8bd24d28   296  str lr, [jssp, #-8]!
0xffff8bd24d2c   300  ldr x17, pc+1116 (addr 0x0000ffff8bd25188)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd24d30   304  blr x17
0xffff8bd24d34   308  ldr lr, [jssp], #8
0xffff8bd24d38   312  ret
0xffff8bd24d3c   316  ldp x1, x13, [jssp], #16
0xffff8bd24d40   320  sub csp, jssp, #0x78 (120)
0xffff8bd24d44   324  stp x14, x15, [jssp, #-32]!
0xffff8bd24d48   328  stp x18, lr, [jssp, #16]
0xffff8bd24d4c   332  stp x10, x11, [jssp, #-32]!
0xffff8bd24d50   336  stp x12, x13, [jssp, #16]
0xffff8bd24d54   340  stp x5, x6, [jssp, #-32]!
0xffff8bd24d58   344  stp x8, x9, [jssp, #16]
0xffff8bd24d5c   348  stp x1, x3, [jssp, #-24]!
0xffff8bd24d60   352  str x4, [jssp, #16]
0xffff8bd24d64   356  mov x0, x1
0xffff8bd24d68   360  mov x1, x13
0xffff8bd24d6c   364  ldr x2, pc+1060 (addr 0x0000ffff8bd25190)    ;; external reference (isolate)
0xffff8bd24d70   368  ldr x16, pc+1064 (addr 0x0000ffff8bd25198)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd24d74   372  and csp, jssp, #0xfffffffffffffff0
0xffff8bd24d78   376  blr x16
0xffff8bd24d7c   380  ldp x4, x5, [jssp, #16]
0xffff8bd24d80   384  ldp x1, x3, [jssp], #32
0xffff8bd24d84   388  ldp x9, x10, [jssp, #16]
0xffff8bd24d88   392  ldp x6, x8, [jssp], #32
0xffff8bd24d8c   396  ldp x13, x14, [jssp, #16]
0xffff8bd24d90   400  ldp x11, x12, [jssp], #32
0xffff8bd24d94   404  ldr lr, [jssp, #16]
0xffff8bd24d98   408  ldp x15, x18, [jssp], #24
0xffff8bd24d9c   412  ldp x2, x0, [jssp], #16
0xffff8bd24da0   416  ldr x16, pc+1024 (addr 0x0000ffff8bd251a0)    ;; external reference (store_buffer_top)
0xffff8bd24da4   420  ldr x7, [x16]
0xffff8bd24da8   424  str x13, [x7], #8
0xffff8bd24dac   428  str x7, [x16]
0xffff8bd24db0   432  tst x7, #0x1ffff
0xffff8bd24db4   436  b.eq #+0x8 (addr 0xffff8bd24dbc)
0xffff8bd24db8   440  ret
0xffff8bd24dbc   444  sub csp, jssp, #0x8 (8)
0xffff8bd24dc0   448  str lr, [jssp, #-8]!
0xffff8bd24dc4   452  ldr x17, pc+996 (addr 0x0000ffff8bd251a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd24dc8   456  blr x17
0xffff8bd24dcc   460  ldr lr, [jssp], #8
0xffff8bd24dd0   464  ret
0xffff8bd24dd4   468  and x7, x1, #0xfffffffffff00000
0xffff8bd24dd8   472  ldr x0, [x7, #104]
0xffff8bd24ddc   476  subs x0, x0, #0x1 (1)
0xffff8bd24de0   480  str x0, [x7, #104]
0xffff8bd24de4   484  b.mi #+0x64 (addr 0xffff8bd24e48)
0xffff8bd24de8   488  ubfx x16, x1, #8, #12
0xffff8bd24dec   492  and x7, x1, #0xfffffffffff00000
0xffff8bd24df0   496  add x7, x7, x16, lsl #2
0xffff8bd24df4   500  ubfx x0, x1, #3, #5
0xffff8bd24df8   504  ldr x7, [x7, #360]
0xffff8bd24dfc   508  lsr x7, x7, x0
0xffff8bd24e00   512  tbz w7, #0, #+0x8 (addr 0xffff8bd24e08)
0xffff8bd24e04   516  tbnz w7, #1, #+0xc (addr 0xffff8bd24e10)
0xffff8bd24e08   520  ldp x2, x0, [jssp], #16
0xffff8bd24e0c   524  ret
0xffff8bd24e10   528  ldr x7, [x13]
0xffff8bd24e14   532  sub csp, jssp, #0x10 (16)
0xffff8bd24e18   536  stp x1, x13, [jssp, #-16]!
0xffff8bd24e1c   540  ubfx x16, x7, #8, #12
0xffff8bd24e20   544  and x0, x7, #0xfffffffffff00000
0xffff8bd24e24   548  add x0, x0, x16, lsl #2
0xffff8bd24e28   552  ubfx x1, x7, #3, #5
0xffff8bd24e2c   556  ldr x13, [x0, #360]
0xffff8bd24e30   560  lsr x13, x13, x1
0xffff8bd24e34   564  tbz w13, #0, #+0x10 (addr 0xffff8bd24e44)
0xffff8bd24e38   568  ldp x1, x13, [jssp], #16
0xffff8bd24e3c   572  ldp x2, x0, [jssp], #16
0xffff8bd24e40   576  ret
0xffff8bd24e44   580  ldp x1, x13, [jssp], #16
0xffff8bd24e48   584  sub csp, jssp, #0x78 (120)
0xffff8bd24e4c   588  stp x14, x15, [jssp, #-32]!
0xffff8bd24e50   592  stp x18, lr, [jssp, #16]
0xffff8bd24e54   596  stp x10, x11, [jssp, #-32]!
0xffff8bd24e58   600  stp x12, x13, [jssp, #16]
0xffff8bd24e5c   604  stp x5, x6, [jssp, #-32]!
0xffff8bd24e60   608  stp x8, x9, [jssp, #16]
0xffff8bd24e64   612  stp x1, x3, [jssp, #-24]!
0xffff8bd24e68   616  str x4, [jssp, #16]
0xffff8bd24e6c   620  mov x0, x1
0xffff8bd24e70   624  mov x1, x13
0xffff8bd24e74   628  ldr x2, pc+828 (addr 0x0000ffff8bd251b0)    ;; external reference (isolate)
0xffff8bd24e78   632  ldr x16, pc+832 (addr 0x0000ffff8bd251b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd24e7c   636  and csp, jssp, #0xfffffffffffffff0
0xffff8bd24e80   640  blr x16
0xffff8bd24e84   644  ldp x4, x5, [jssp, #16]
0xffff8bd24e88   648  ldp x1, x3, [jssp], #32
0xffff8bd24e8c   652  ldp x9, x10, [jssp, #16]
0xffff8bd24e90   656  ldp x6, x8, [jssp], #32
0xffff8bd24e94   660  ldp x13, x14, [jssp, #16]
0xffff8bd24e98   664  ldp x11, x12, [jssp], #32
0xffff8bd24e9c   668  ldr lr, [jssp, #16]
0xffff8bd24ea0   672  ldp x15, x18, [jssp], #24
0xffff8bd24ea4   676  ldp x2, x0, [jssp], #16
0xffff8bd24ea8   680  ret
0xffff8bd24eac   684  sub csp, jssp, #0x10 (16)
0xffff8bd24eb0   688  stp x2, x0, [jssp, #-16]!
0xffff8bd24eb4   692  ldr x7, [x13]
0xffff8bd24eb8   696  and x16, x7, #0xfffffffffff00000
0xffff8bd24ebc   700  ldr x16, [x16, #8]
0xffff8bd24ec0   704  tst x16, #0x18
0xffff8bd24ec4   708  b.eq #+0x19c (addr 0xffff8bd25060)
0xffff8bd24ec8   712  and x16, x1, #0xfffffffffff00000
0xffff8bd24ecc   716  ldr x16, [x16, #8]
0xffff8bd24ed0   720  tst x16, #0x18
0xffff8bd24ed4   724  b.ne #+0x18c (addr 0xffff8bd25060)
0xffff8bd24ed8   728  and x7, x1, #0xfffffffffff00000
0xffff8bd24edc   732  ldr x0, [x7, #104]
0xffff8bd24ee0   736  subs x0, x0, #0x1 (1)
0xffff8bd24ee4   740  str x0, [x7, #104]
0xffff8bd24ee8   744  b.mi #+0xe4 (addr 0xffff8bd24fcc)
0xffff8bd24eec   748  ubfx x16, x1, #8, #12
0xffff8bd24ef0   752  and x7, x1, #0xfffffffffff00000
0xffff8bd24ef4   756  add x7, x7, x16, lsl #2
0xffff8bd24ef8   760  ubfx x0, x1, #3, #5
0xffff8bd24efc   764  ldr x7, [x7, #360]
0xffff8bd24f00   768  lsr x7, x7, x0
0xffff8bd24f04   772  tbz w7, #0, #+0x8 (addr 0xffff8bd24f0c)
0xffff8bd24f08   776  tbnz w7, #1, #+0x3c (addr 0xffff8bd24f44)
0xffff8bd24f0c   780  ldp x2, x0, [jssp], #16
0xffff8bd24f10   784  ldr x16, pc+688 (addr 0x0000ffff8bd251c0)    ;; external reference (store_buffer_top)
0xffff8bd24f14   788  ldr x7, [x16]
0xffff8bd24f18   792  str x13, [x7], #8
0xffff8bd24f1c   796  str x7, [x16]
0xffff8bd24f20   800  tst x7, #0x1ffff
0xffff8bd24f24   804  b.eq #+0x8 (addr 0xffff8bd24f2c)
0xffff8bd24f28   808  ret
0xffff8bd24f2c   812  sub csp, jssp, #0x8 (8)
0xffff8bd24f30   816  str lr, [jssp, #-8]!
0xffff8bd24f34   820  ldr x17, pc+660 (addr 0x0000ffff8bd251c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd24f38   824  blr x17
0xffff8bd24f3c   828  ldr lr, [jssp], #8
0xffff8bd24f40   832  ret
0xffff8bd24f44   836  ldr x7, [x13]
0xffff8bd24f48   840  and x0, x7, #0xfffffffffff00000
0xffff8bd24f4c   844  ldr x0, [x0, #8]
0xffff8bd24f50   848  tbz w0, #6, #+0x18 (addr 0xffff8bd24f68)
0xffff8bd24f54   852  and x0, x1, #0xfffffffffff00000
0xffff8bd24f58   856  ldr x0, [x0, #8]
0xffff8bd24f5c   860  movz x16, #0x58
0xffff8bd24f60   864  tst x0, x16
0xffff8bd24f64   868  b.eq #+0x68 (addr 0xffff8bd24fcc)
0xffff8bd24f68   872  sub csp, jssp, #0x10 (16)
0xffff8bd24f6c   876  stp x1, x13, [jssp, #-16]!
0xffff8bd24f70   880  ubfx x16, x7, #8, #12
0xffff8bd24f74   884  and x0, x7, #0xfffffffffff00000
0xffff8bd24f78   888  add x0, x0, x16, lsl #2
0xffff8bd24f7c   892  ubfx x1, x7, #3, #5
0xffff8bd24f80   896  ldr x13, [x0, #360]
0xffff8bd24f84   900  lsr x13, x13, x1
0xffff8bd24f88   904  tbz w13, #0, #+0x40 (addr 0xffff8bd24fc8)
0xffff8bd24f8c   908  ldp x1, x13, [jssp], #16
0xffff8bd24f90   912  ldp x2, x0, [jssp], #16
0xffff8bd24f94   916  ldr x16, pc+572 (addr 0x0000ffff8bd251d0)    ;; external reference (store_buffer_top)
0xffff8bd24f98   920  ldr x7, [x16]
0xffff8bd24f9c   924  str x13, [x7], #8
0xffff8bd24fa0   928  str x7, [x16]
0xffff8bd24fa4   932  tst x7, #0x1ffff
0xffff8bd24fa8   936  b.eq #+0x8 (addr 0xffff8bd24fb0)
0xffff8bd24fac   940  ret
0xffff8bd24fb0   944  sub csp, jssp, #0x8 (8)
0xffff8bd24fb4   948  str lr, [jssp, #-8]!
0xffff8bd24fb8   952  ldr x17, pc+544 (addr 0x0000ffff8bd251d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd24fbc   956  blr x17
0xffff8bd24fc0   960  ldr lr, [jssp], #8
0xffff8bd24fc4   964  ret
0xffff8bd24fc8   968  ldp x1, x13, [jssp], #16
0xffff8bd24fcc   972  sub csp, jssp, #0x78 (120)
0xffff8bd24fd0   976  stp x14, x15, [jssp, #-32]!
0xffff8bd24fd4   980  stp x18, lr, [jssp, #16]
0xffff8bd24fd8   984  stp x10, x11, [jssp, #-32]!
0xffff8bd24fdc   988  stp x12, x13, [jssp, #16]
0xffff8bd24fe0   992  stp x5, x6, [jssp, #-32]!
0xffff8bd24fe4   996  stp x8, x9, [jssp, #16]
0xffff8bd24fe8  1000  stp x1, x3, [jssp, #-24]!
0xffff8bd24fec  1004  str x4, [jssp, #16]
0xffff8bd24ff0  1008  mov x0, x1
0xffff8bd24ff4  1012  mov x1, x13
0xffff8bd24ff8  1016  ldr x2, pc+488 (addr 0x0000ffff8bd251e0)    ;; external reference (isolate)
0xffff8bd24ffc  1020  ldr x16, pc+492 (addr 0x0000ffff8bd251e8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd25000  1024  and csp, jssp, #0xfffffffffffffff0
0xffff8bd25004  1028  blr x16
0xffff8bd25008  1032  ldp x4, x5, [jssp, #16]
0xffff8bd2500c  1036  ldp x1, x3, [jssp], #32
0xffff8bd25010  1040  ldp x9, x10, [jssp, #16]
0xffff8bd25014  1044  ldp x6, x8, [jssp], #32
0xffff8bd25018  1048  ldp x13, x14, [jssp, #16]
0xffff8bd2501c  1052  ldp x11, x12, [jssp], #32
0xffff8bd25020  1056  ldr lr, [jssp, #16]
0xffff8bd25024  1060  ldp x15, x18, [jssp], #24
0xffff8bd25028  1064  ldp x2, x0, [jssp], #16
0xffff8bd2502c  1068  ldr x16, pc+452 (addr 0x0000ffff8bd251f0)    ;; external reference (store_buffer_top)
0xffff8bd25030  1072  ldr x7, [x16]
0xffff8bd25034  1076  str x13, [x7], #8
0xffff8bd25038  1080  str x7, [x16]
0xffff8bd2503c  1084  tst x7, #0x1ffff
0xffff8bd25040  1088  b.eq #+0x8 (addr 0xffff8bd25048)
0xffff8bd25044  1092  ret
0xffff8bd25048  1096  sub csp, jssp, #0x8 (8)
0xffff8bd2504c  1100  str lr, [jssp, #-8]!
0xffff8bd25050  1104  ldr x17, pc+424 (addr 0x0000ffff8bd251f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd25054  1108  blr x17
0xffff8bd25058  1112  ldr lr, [jssp], #8
0xffff8bd2505c  1116  ret
0xffff8bd25060  1120  and x7, x1, #0xfffffffffff00000
0xffff8bd25064  1124  ldr x0, [x7, #104]
0xffff8bd25068  1128  subs x0, x0, #0x1 (1)
0xffff8bd2506c  1132  str x0, [x7, #104]
0xffff8bd25070  1136  b.mi #+0x84 (addr 0xffff8bd250f4)
0xffff8bd25074  1140  ubfx x16, x1, #8, #12
0xffff8bd25078  1144  and x7, x1, #0xfffffffffff00000
0xffff8bd2507c  1148  add x7, x7, x16, lsl #2
0xffff8bd25080  1152  ubfx x0, x1, #3, #5
0xffff8bd25084  1156  ldr x7, [x7, #360]
0xffff8bd25088  1160  lsr x7, x7, x0
0xffff8bd2508c  1164  tbz w7, #0, #+0x8 (addr 0xffff8bd25094)
0xffff8bd25090  1168  tbnz w7, #1, #+0xc (addr 0xffff8bd2509c)
0xffff8bd25094  1172  ldp x2, x0, [jssp], #16
0xffff8bd25098  1176  ret
0xffff8bd2509c  1180  ldr x7, [x13]
0xffff8bd250a0  1184  and x0, x7, #0xfffffffffff00000
0xffff8bd250a4  1188  ldr x0, [x0, #8]
0xffff8bd250a8  1192  tbz w0, #6, #+0x18 (addr 0xffff8bd250c0)
0xffff8bd250ac  1196  and x0, x1, #0xfffffffffff00000
0xffff8bd250b0  1200  ldr x0, [x0, #8]
0xffff8bd250b4  1204  movz x16, #0x58
0xffff8bd250b8  1208  tst x0, x16
0xffff8bd250bc  1212  b.eq #+0x38 (addr 0xffff8bd250f4)
0xffff8bd250c0  1216  sub csp, jssp, #0x10 (16)
0xffff8bd250c4  1220  stp x1, x13, [jssp, #-16]!
0xffff8bd250c8  1224  ubfx x16, x7, #8, #12
0xffff8bd250cc  1228  and x0, x7, #0xfffffffffff00000
0xffff8bd250d0  1232  add x0, x0, x16, lsl #2
0xffff8bd250d4  1236  ubfx x1, x7, #3, #5
0xffff8bd250d8  1240  ldr x13, [x0, #360]
0xffff8bd250dc  1244  lsr x13, x13, x1
0xffff8bd250e0  1248  tbz w13, #0, #+0x10 (addr 0xffff8bd250f0)
0xffff8bd250e4  1252  ldp x1, x13, [jssp], #16
0xffff8bd250e8  1256  ldp x2, x0, [jssp], #16
0xffff8bd250ec  1260  ret
0xffff8bd250f0  1264  ldp x1, x13, [jssp], #16
0xffff8bd250f4  1268  sub csp, jssp, #0x78 (120)
0xffff8bd250f8  1272  stp x14, x15, [jssp, #-32]!
0xffff8bd250fc  1276  stp x18, lr, [jssp, #16]
0xffff8bd25100  1280  stp x10, x11, [jssp, #-32]!
0xffff8bd25104  1284  stp x12, x13, [jssp, #16]
0xffff8bd25108  1288  stp x5, x6, [jssp, #-32]!
0xffff8bd2510c  1292  stp x8, x9, [jssp, #16]
0xffff8bd25110  1296  stp x1, x3, [jssp, #-24]!
0xffff8bd25114  1300  str x4, [jssp, #16]
0xffff8bd25118  1304  mov x0, x1
0xffff8bd2511c  1308  mov x1, x13
0xffff8bd25120  1312  ldr x2, pc+224 (addr 0x0000ffff8bd25200)    ;; external reference (isolate)
0xffff8bd25124  1316  ldr x16, pc+228 (addr 0x0000ffff8bd25208)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd25128  1320  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2512c  1324  blr x16
0xffff8bd25130  1328  ldp x4, x5, [jssp, #16]
0xffff8bd25134  1332  ldp x1, x3, [jssp], #32
0xffff8bd25138  1336  ldp x9, x10, [jssp, #16]
0xffff8bd2513c  1340  ldp x6, x8, [jssp], #32
0xffff8bd25140  1344  ldp x13, x14, [jssp, #16]
0xffff8bd25144  1348  ldp x11, x12, [jssp], #32
0xffff8bd25148  1352  ldr lr, [jssp, #16]
0xffff8bd2514c  1356  ldp x15, x18, [jssp], #24
0xffff8bd25150  1360  ldp x2, x0, [jssp], #16
0xffff8bd25154  1364  ret
0xffff8bd25158  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd2515c  1372  d63f03e0       constant
0xffff8bd25160  1376  2cb8e8c0       constant
0xffff8bd25164  1380  00000000       constant
0xffff8bd25168  1384  8bd064c0       constant
0xffff8bd2516c  1388  0000ffff       constant
0xffff8bd25170  1392  2cb8e8c0       constant
0xffff8bd25174  1396  00000000       constant
0xffff8bd25178  1400  8bd064c0       constant
0xffff8bd2517c  1404  0000ffff       constant
0xffff8bd25180  1408  2cb8e8c0       constant
0xffff8bd25184  1412  00000000       constant
0xffff8bd25188  1416  8bd064c0       constant
0xffff8bd2518c  1420  0000ffff       constant
0xffff8bd25190  1424  2cb8d2d0       constant
0xffff8bd25194  1428  00000000       constant
0xffff8bd25198  1432  00c2d958       constant
0xffff8bd2519c  1436  00000000       constant
0xffff8bd251a0  1440  2cb8e8c0       constant
0xffff8bd251a4  1444  00000000       constant
0xffff8bd251a8  1448  8bd064c0       constant
0xffff8bd251ac  1452  0000ffff       constant
0xffff8bd251b0  1456  2cb8d2d0       constant
0xffff8bd251b4  1460  00000000       constant
0xffff8bd251b8  1464  00c2d958       constant
0xffff8bd251bc  1468  00000000       constant
0xffff8bd251c0  1472  2cb8e8c0       constant
0xffff8bd251c4  1476  00000000       constant
0xffff8bd251c8  1480  8bd064c0       constant
0xffff8bd251cc  1484  0000ffff       constant
0xffff8bd251d0  1488  2cb8e8c0       constant
0xffff8bd251d4  1492  00000000       constant
0xffff8bd251d8  1496  8bd064c0       constant
0xffff8bd251dc  1500  0000ffff       constant
0xffff8bd251e0  1504  2cb8d2d0       constant
0xffff8bd251e4  1508  00000000       constant
0xffff8bd251e8  1512  00c2d958       constant
0xffff8bd251ec  1516  00000000       constant
0xffff8bd251f0  1520  2cb8e8c0       constant
0xffff8bd251f4  1524  00000000       constant
0xffff8bd251f8  1528  8bd064c0       constant
0xffff8bd251fc  1532  0000ffff       constant
0xffff8bd25200  1536  2cb8d2d0       constant
0xffff8bd25204  1540  00000000       constant
0xffff8bd25208  1544  00c2d958       constant
0xffff8bd2520c  1548  00000000       constant


RelocInfo (size = 59)
0xffff8bd24c08  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd24c2c  code target (STUB)  (0xffff8bd064c0)
0xffff8bd24ca4  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd24cc8  code target (STUB)  (0xffff8bd064c0)
0xffff8bd24d08  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd24d2c  code target (STUB)  (0xffff8bd064c0)
0xffff8bd24d6c  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd24d70  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd24da0  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd24dc4  code target (STUB)  (0xffff8bd064c0)
0xffff8bd24e74  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd24e78  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd24f10  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd24f34  code target (STUB)  (0xffff8bd064c0)
0xffff8bd24f94  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd24fb8  code target (STUB)  (0xffff8bd064c0)
0xffff8bd24ff8  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd24ffc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2502c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd25050  code target (STUB)  (0xffff8bd064c0)
0xffff8bd25120  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd25124  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd25158  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 536)
0xffff8bd25280     0  adr xzr, #+0xc (addr 0xffff8bd2528c)
0xffff8bd25284     4  adr xzr, #+0xe8 (addr 0xffff8bd2536c)
0xffff8bd25288     8  ret
0xffff8bd2528c    12  sub csp, jssp, #0x10 (16)
0xffff8bd25290    16  stp x2, x0, [jssp, #-16]!
0xffff8bd25294    20  and x3, x1, #0xfffffffffff00000
0xffff8bd25298    24  ldr x0, [x3, #104]
0xffff8bd2529c    28  subs x0, x0, #0x1 (1)
0xffff8bd252a0    32  str x0, [x3, #104]
0xffff8bd252a4    36  b.mi #+0x64 (addr 0xffff8bd25308)
0xffff8bd252a8    40  ubfx x16, x1, #8, #12
0xffff8bd252ac    44  and x3, x1, #0xfffffffffff00000
0xffff8bd252b0    48  add x3, x3, x16, lsl #2
0xffff8bd252b4    52  ubfx x0, x1, #3, #5
0xffff8bd252b8    56  ldr x3, [x3, #360]
0xffff8bd252bc    60  lsr x3, x3, x0
0xffff8bd252c0    64  tbz w3, #0, #+0x8 (addr 0xffff8bd252c8)
0xffff8bd252c4    68  tbnz w3, #1, #+0xc (addr 0xffff8bd252d0)
0xffff8bd252c8    72  ldp x2, x0, [jssp], #16
0xffff8bd252cc    76  ret
0xffff8bd252d0    80  ldr x3, [x13]
0xffff8bd252d4    84  sub csp, jssp, #0x10 (16)
0xffff8bd252d8    88  stp x1, x13, [jssp, #-16]!
0xffff8bd252dc    92  ubfx x16, x3, #8, #12
0xffff8bd252e0    96  and x0, x3, #0xfffffffffff00000
0xffff8bd252e4   100  add x0, x0, x16, lsl #2
0xffff8bd252e8   104  ubfx x1, x3, #3, #5
0xffff8bd252ec   108  ldr x13, [x0, #360]
0xffff8bd252f0   112  lsr x13, x13, x1
0xffff8bd252f4   116  tbz w13, #0, #+0x10 (addr 0xffff8bd25304)
0xffff8bd252f8   120  ldp x1, x13, [jssp], #16
0xffff8bd252fc   124  ldp x2, x0, [jssp], #16
0xffff8bd25300   128  ret
0xffff8bd25304   132  ldp x1, x13, [jssp], #16
0xffff8bd25308   136  sub csp, jssp, #0x78 (120)
0xffff8bd2530c   140  stp x14, x15, [jssp, #-32]!
0xffff8bd25310   144  stp x18, lr, [jssp, #16]
0xffff8bd25314   148  stp x10, x11, [jssp, #-32]!
0xffff8bd25318   152  stp x12, x13, [jssp, #16]
0xffff8bd2531c   156  stp x6, x7, [jssp, #-32]!
0xffff8bd25320   160  stp x8, x9, [jssp, #16]
0xffff8bd25324   164  stp x1, x4, [jssp, #-24]!
0xffff8bd25328   168  str x5, [jssp, #16]
0xffff8bd2532c   172  mov x0, x1
0xffff8bd25330   176  mov x1, x13
0xffff8bd25334   180  ldr x2, pc+324 (addr 0x0000ffff8bd25478)    ;; external reference (isolate)
0xffff8bd25338   184  ldr x16, pc+328 (addr 0x0000ffff8bd25480)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2533c   188  and csp, jssp, #0xfffffffffffffff0
0xffff8bd25340   192  blr x16
0xffff8bd25344   196  ldp x5, x6, [jssp, #16]
0xffff8bd25348   200  ldp x1, x4, [jssp], #32
0xffff8bd2534c   204  ldp x9, x10, [jssp, #16]
0xffff8bd25350   208  ldp x7, x8, [jssp], #32
0xffff8bd25354   212  ldp x13, x14, [jssp, #16]
0xffff8bd25358   216  ldp x11, x12, [jssp], #32
0xffff8bd2535c   220  ldr lr, [jssp, #16]
0xffff8bd25360   224  ldp x15, x18, [jssp], #24
0xffff8bd25364   228  ldp x2, x0, [jssp], #16
0xffff8bd25368   232  ret
0xffff8bd2536c   236  sub csp, jssp, #0x10 (16)
0xffff8bd25370   240  stp x2, x0, [jssp, #-16]!
0xffff8bd25374   244  and x3, x1, #0xfffffffffff00000
0xffff8bd25378   248  ldr x0, [x3, #104]
0xffff8bd2537c   252  subs x0, x0, #0x1 (1)
0xffff8bd25380   256  str x0, [x3, #104]
0xffff8bd25384   260  b.mi #+0x84 (addr 0xffff8bd25408)
0xffff8bd25388   264  ubfx x16, x1, #8, #12
0xffff8bd2538c   268  and x3, x1, #0xfffffffffff00000
0xffff8bd25390   272  add x3, x3, x16, lsl #2
0xffff8bd25394   276  ubfx x0, x1, #3, #5
0xffff8bd25398   280  ldr x3, [x3, #360]
0xffff8bd2539c   284  lsr x3, x3, x0
0xffff8bd253a0   288  tbz w3, #0, #+0x8 (addr 0xffff8bd253a8)
0xffff8bd253a4   292  tbnz w3, #1, #+0xc (addr 0xffff8bd253b0)
0xffff8bd253a8   296  ldp x2, x0, [jssp], #16
0xffff8bd253ac   300  ret
0xffff8bd253b0   304  ldr x3, [x13]
0xffff8bd253b4   308  and x0, x3, #0xfffffffffff00000
0xffff8bd253b8   312  ldr x0, [x0, #8]
0xffff8bd253bc   316  tbz w0, #6, #+0x18 (addr 0xffff8bd253d4)
0xffff8bd253c0   320  and x0, x1, #0xfffffffffff00000
0xffff8bd253c4   324  ldr x0, [x0, #8]
0xffff8bd253c8   328  movz x16, #0x58
0xffff8bd253cc   332  tst x0, x16
0xffff8bd253d0   336  b.eq #+0x38 (addr 0xffff8bd25408)
0xffff8bd253d4   340  sub csp, jssp, #0x10 (16)
0xffff8bd253d8   344  stp x1, x13, [jssp, #-16]!
0xffff8bd253dc   348  ubfx x16, x3, #8, #12
0xffff8bd253e0   352  and x0, x3, #0xfffffffffff00000
0xffff8bd253e4   356  add x0, x0, x16, lsl #2
0xffff8bd253e8   360  ubfx x1, x3, #3, #5
0xffff8bd253ec   364  ldr x13, [x0, #360]
0xffff8bd253f0   368  lsr x13, x13, x1
0xffff8bd253f4   372  tbz w13, #0, #+0x10 (addr 0xffff8bd25404)
0xffff8bd253f8   376  ldp x1, x13, [jssp], #16
0xffff8bd253fc   380  ldp x2, x0, [jssp], #16
0xffff8bd25400   384  ret
0xffff8bd25404   388  ldp x1, x13, [jssp], #16
0xffff8bd25408   392  sub csp, jssp, #0x78 (120)
0xffff8bd2540c   396  stp x14, x15, [jssp, #-32]!
0xffff8bd25410   400  stp x18, lr, [jssp, #16]
0xffff8bd25414   404  stp x10, x11, [jssp, #-32]!
0xffff8bd25418   408  stp x12, x13, [jssp, #16]
0xffff8bd2541c   412  stp x6, x7, [jssp, #-32]!
0xffff8bd25420   416  stp x8, x9, [jssp, #16]
0xffff8bd25424   420  stp x1, x4, [jssp, #-24]!
0xffff8bd25428   424  str x5, [jssp, #16]
0xffff8bd2542c   428  mov x0, x1
0xffff8bd25430   432  mov x1, x13
0xffff8bd25434   436  ldr x2, pc+84 (addr 0x0000ffff8bd25488)    ;; external reference (isolate)
0xffff8bd25438   440  ldr x16, pc+88 (addr 0x0000ffff8bd25490)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2543c   444  and csp, jssp, #0xfffffffffffffff0
0xffff8bd25440   448  blr x16
0xffff8bd25444   452  ldp x5, x6, [jssp, #16]
0xffff8bd25448   456  ldp x1, x4, [jssp], #32
0xffff8bd2544c   460  ldp x9, x10, [jssp, #16]
0xffff8bd25450   464  ldp x7, x8, [jssp], #32
0xffff8bd25454   468  ldp x13, x14, [jssp, #16]
0xffff8bd25458   472  ldp x11, x12, [jssp], #32
0xffff8bd2545c   476  ldr lr, [jssp, #16]
0xffff8bd25460   480  ldp x15, x18, [jssp], #24
0xffff8bd25464   484  ldp x2, x0, [jssp], #16
0xffff8bd25468   488  ret
0xffff8bd2546c   492  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff8bd25470   496  d63f03e0       constant
0xffff8bd25474   500  d503201f       constant
0xffff8bd25478   504  2cb8d2d0       constant
0xffff8bd2547c   508  00000000       constant
0xffff8bd25480   512  00c2d958       constant
0xffff8bd25484   516  00000000       constant
0xffff8bd25488   520  2cb8d2d0       constant
0xffff8bd2548c   524  00000000       constant
0xffff8bd25490   528  00c2d958       constant
0xffff8bd25494   532  00000000       constant


RelocInfo (size = 18)
0xffff8bd25334  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd25338  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd25434  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd25438  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2546c  constant pool (size 44)


kind = STUB
major_key = InstanceOfStub
name = InstanceOfStub
compiler = unknown
Instructions (size = 296)
0xffff8bd283a0     0  tbz w1, #0, #+0x28 (addr 0xffff8bd283c8)
0xffff8bd283a4     4  ldur x2, [x1, #-1]
0xffff8bd283a8     8  ldr x16, [x26, #376]
0xffff8bd283ac    12  cmp x0, x16
0xffff8bd283b0    16  b.ne #+0x34 (addr 0xffff8bd283e4)
0xffff8bd283b4    20  ldr x16, [x26, #384]
0xffff8bd283b8    24  cmp x2, x16
0xffff8bd283bc    28  b.ne #+0x28 (addr 0xffff8bd283e4)
0xffff8bd283c0    32  ldr x0, [x26, #392]
0xffff8bd283c4    36  ret
0xffff8bd283c8    40  tbz w0, #0, #+0xbc (addr 0xffff8bd28484)
0xffff8bd283cc    44  ldur x3, [x0, #-1]
0xffff8bd283d0    48  ldrb w5, [x3, #11]
0xffff8bd283d4    52  cmp x5, #0xc9 (201)
0xffff8bd283d8    56  b.ne #+0xac (addr 0xffff8bd28484)
0xffff8bd283dc    60  ldr x0, [x26, #72]
0xffff8bd283e0    64  ret
0xffff8bd283e4    68  tbz w0, #0, #+0xa0 (addr 0xffff8bd28484)
0xffff8bd283e8    72  ldur x3, [x0, #-1]
0xffff8bd283ec    76  ldrb w5, [x3, #11]
0xffff8bd283f0    80  cmp x5, #0xc9 (201)
0xffff8bd283f4    84  b.ne #+0x90 (addr 0xffff8bd28484)
0xffff8bd283f8    88  ldrb w5, [x3, #12]
0xffff8bd283fc    92  tbz w5, #7, #+0x88 (addr 0xffff8bd28484)
0xffff8bd28400    96  tbnz w5, #0, #+0x84 (addr 0xffff8bd28484)
0xffff8bd28404   100  ldur x4, [x0, #23]
0xffff8bd28408   104  ldur x5, [x4, #-1]
0xffff8bd2840c   108  ldrb w5, [x5, #11]
0xffff8bd28410   112  cmp x5, #0x84 (132)
0xffff8bd28414   116  b.ne #+0x8 (addr 0xffff8bd2841c)
0xffff8bd28418   120  ldur x4, [x4, #23]
0xffff8bd2841c   124  str x0, [x26, #376]
0xffff8bd28420   128  str x2, [x26, #384]
0xffff8bd28424   132  ldr x0, [x26, #64]
0xffff8bd28428   136  ldr x5, [x26, #56]
0xffff8bd2842c   140  ldrb w3, [x2, #12]
0xffff8bd28430   144  tbnz w3, #6, #+0x34 (addr 0xffff8bd28464)
0xffff8bd28434   148  ldrb w3, [x2, #11]
0xffff8bd28438   152  cmp x3, #0xb1 (177)
0xffff8bd2843c   156  b.eq #+0x28 (addr 0xffff8bd28464)
0xffff8bd28440   160  ldur x1, [x2, #23]
0xffff8bd28444   164  cmp x1, x4
0xffff8bd28448   168  b.eq #+0x14 (addr 0xffff8bd2845c)
0xffff8bd2844c   172  cmp x1, x5
0xffff8bd28450   176  ldur x2, [x1, #-1]
0xffff8bd28454   180  b.ne #-0x28 (addr 0xffff8bd2842c)
0xffff8bd28458   184  ldr x0, [x26, #72]
0xffff8bd2845c   188  str x0, [x26, #392]
0xffff8bd28460   192  ret
0xffff8bd28464   196  sub csp, jssp, #0x10 (16)
0xffff8bd28468   200  stp x4, x1, [jssp, #-16]!
0xffff8bd2846c   204  movz x5, #0x0
0xffff8bd28470   208  str x5, [x26, #376]
0xffff8bd28474   212  movz x0, #0x2
0xffff8bd28478   216  ldr x1, pc+48 (addr 0x0000ffff8bd284a8)    ;; external reference (Runtime::HasInPrototypeChain)
0xffff8bd2847c   220  ldr x16, pc+52 (addr 0x0000ffff8bd284b0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd28480   224  br x16
0xffff8bd28484   228  sub csp, jssp, #0x10 (16)
0xffff8bd28488   232  stp x0, x1, [jssp, #-16]!
0xffff8bd2848c   236  movz x0, #0x2
0xffff8bd28490   240  ldr x1, pc+40 (addr 0x0000ffff8bd284b8)    ;; external reference (Runtime::OrdinaryHasInstance)
0xffff8bd28494   244  ldr x16, pc+44 (addr 0x0000ffff8bd284c0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd28498   248  br x16
0xffff8bd2849c   252  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff8bd284a0   256  d63f03e0       constant
0xffff8bd284a4   260  d503201f       constant
0xffff8bd284a8   264  00e4ad20       constant
0xffff8bd284ac   268  00000000       constant
0xffff8bd284b0   272  8bd06060       constant
0xffff8bd284b4   276  0000ffff       constant
0xffff8bd284b8   280  00e4a740       constant
0xffff8bd284bc   284  00000000       constant
0xffff8bd284c0   288  8bd06060       constant
0xffff8bd284c4   292  0000ffff       constant


RelocInfo (size = 14)
0xffff8bd28478  external reference (Runtime::HasInPrototypeChain)  (0xe4ad20)
0xffff8bd2847c  code target (STUB)  (0xffff8bd06060)
0xffff8bd28490  external reference (Runtime::OrdinaryHasInstance)  (0xe4a740)
0xffff8bd28494  code target (STUB)  (0xffff8bd06060)
0xffff8bd2849c  constant pool (size 44)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 429)
0xffff8bd289c0     0  movz w0, #0x6000
0xffff8bd289c4     4  movk w0, #0x9, lsl #16
0xffff8bd289c8     8  cmp w0, #0x30 (48)
0xffff8bd289cc    12  b.ls #+0x14c (addr 0xffff8bd28b18)
0xffff8bd289d0    16  movz x2, #0xe2c0
0xffff8bd289d4    20  movk x2, #0x2cb8, lsl #16
0xffff8bd289d8    24  ldp x3, x0, [x2]
0xffff8bd289dc    28  adds x16, x3, #0x50 (80)
0xffff8bd289e0    32  ccmp x16, x0, #nzCv, lo
0xffff8bd289e4    36  b.hi #+0x78 (addr 0xffff8bd28a5c)
0xffff8bd289e8    40  str x16, [x2]
0xffff8bd289ec    44  orr x3, x3, #0x1
0xffff8bd289f0    48  movz w0, #0x0
0xffff8bd289f4    52  stur x0, [x3, #31]
0xffff8bd289f8    56  ldur x0, [x1, #23]
0xffff8bd289fc    60  stur x0, [x3, #-1]
0xffff8bd28a00    64  ldr x0, pc+200 (addr 0x0000ffff8bd28ac8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd28a04    68  stur x0, [x3, #7]
0xffff8bd28a08    72  ldr x0, pc+200 (addr 0x0000ffff8bd28ad0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd28a0c    76  stur x0, [x3, #15]
0xffff8bd28a10    80  movz x0, #0x0
0xffff8bd28a14    84  stur x0, [x3, #23]
0xffff8bd28a18    88  add x0, x3, #0x20 (32)
0xffff8bd28a1c    92  ldr x1, pc+188 (addr 0x0000ffff8bd28ad8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd28a20    96  stur x1, [x0, #-1]
0xffff8bd28a24   100  movz x1, #0x400000000
0xffff8bd28a28   104  stur x1, [x0, #7]
0xffff8bd28a2c   108  stur x0, [x3, #15]
0xffff8bd28a30   112  ldr x1, pc+176 (addr 0x0000ffff8bd28ae0)    ;; object: 0x26c04519 <the hole>
0xffff8bd28a34   116  stur x1, [x0, #15]
0xffff8bd28a38   120  ldr x1, pc+176 (addr 0x0000ffff8bd28ae8)    ;; object: 0x26c04519 <the hole>
0xffff8bd28a3c   124  stur x1, [x0, #23]
0xffff8bd28a40   128  ldr x1, pc+176 (addr 0x0000ffff8bd28af0)    ;; object: 0x26c04519 <the hole>
0xffff8bd28a44   132  stur x1, [x0, #31]
0xffff8bd28a48   136  ldr x1, pc+176 (addr 0x0000ffff8bd28af8)    ;; object: 0x26c04519 <the hole>
0xffff8bd28a4c   140  stur x1, [x0, #39]
0xffff8bd28a50   144  mov x0, x3
0xffff8bd28a54   148  add jssp, jssp, #0x8 (8)
0xffff8bd28a58   152  ret
0xffff8bd28a5c   156  sub csp, jssp, #0x10 (16)
0xffff8bd28a60   160  stp fp, lr, [jssp, #-16]!
0xffff8bd28a64   164  movz fp, #0xa00000000
0xffff8bd28a68   168  sub csp, jssp, #0x8 (8)
0xffff8bd28a6c   172  str fp, [jssp, #-8]!
0xffff8bd28a70   176  add fp, jssp, #0x8 (8)
0xffff8bd28a74   180  movz x3, #0x0
0xffff8bd28a78   184  mov x16, lr
0xffff8bd28a7c   188  ldr x17, pc+132 (addr 0x0000ffff8bd28b00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd28a80   192  blr x17
0xffff8bd28a84   196  movz x0, #0x5000000000
0xffff8bd28a88   200  movz x10, #0x0
0xffff8bd28a8c   204  sub csp, jssp, #0x10 (16)
0xffff8bd28a90   208  stp x10, x0, [jssp, #-16]!
0xffff8bd28a94   212  movz x0, #0x2
0xffff8bd28a98   216  movz x1, #0x5b88
0xffff8bd28a9c   220  movk x1, #0xe2, lsl #16
0xffff8bd28aa0   224  ldr x16, pc+104 (addr 0x0000ffff8bd28b08)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd28aa4   228  blr x16
0xffff8bd28aa8   232  str x0, [jssp, #24]
0xffff8bd28aac   236  ldr x16, pc+100 (addr 0x0000ffff8bd28b10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd28ab0   240  blr x16
0xffff8bd28ab4   244  ldr lr, [jssp, #16]
0xffff8bd28ab8   248  ldp xzr, fp, [jssp], #24
0xffff8bd28abc   252  b #-0xcc (addr 0xffff8bd289f0)
0xffff8bd28ac0   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff8bd28ac4   260  d63f03e0       constant
0xffff8bd28ac8   264  26c04201       constant
0xffff8bd28acc   268  00000000       constant
0xffff8bd28ad0   272  26c04201       constant
0xffff8bd28ad4   276  00000000       constant
0xffff8bd28ad8   280  5f504259       constant
0xffff8bd28adc   284  00000000       constant
0xffff8bd28ae0   288  26c04519       constant
0xffff8bd28ae4   292  00000000       constant
0xffff8bd28ae8   296  26c04519       constant
0xffff8bd28aec   300  00000000       constant
0xffff8bd28af0   304  26c04519       constant
0xffff8bd28af4   308  00000000       constant
0xffff8bd28af8   312  26c04519       constant
0xffff8bd28afc   316  00000000       constant
0xffff8bd28b00   320  8bd06820       constant
0xffff8bd28b04   324  0000ffff       constant
0xffff8bd28b08   328  8bd06260       constant
0xffff8bd28b0c   332  0000ffff       constant
0xffff8bd28b10   336  8bd068e0       constant
0xffff8bd28b14   340  0000ffff       constant
0xffff8bd28b18   344  movz x16, #0x0
0xffff8bd28b1c   348  sub csp, jssp, #0x10 (16)
0xffff8bd28b20   352  stp fp, lr, [jssp, #-16]!
0xffff8bd28b24   356  bl #+0x4 (addr 0xffff8bd28b28)
0xffff8bd28b28   360  movz x17, #0xa00000000
0xffff8bd28b2c   364  sub csp, jssp, #0x10 (16)
0xffff8bd28b30   368  stp x17, cp, [jssp, #-16]!
0xffff8bd28b34   372  add fp, jssp, #0x10 (16)
0xffff8bd28b38   376  ldr x17, pc+24 (addr 0x0000ffff8bd28b50)    ;; lazy deoptimization bailout 0
0xffff8bd28b3c   380  add x17, x17, x16
0xffff8bd28b40   384  br x17
0xffff8bd28b44   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd28b48   392  d63f03e0       constant
0xffff8bd28b4c   396  d503201f       constant
0xffff8bd28b50   400  8bb06000       constant
0xffff8bd28b54   404  0000ffff       constant


Safepoints (size = 21)
0xffff8bd28aa8   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff8bd28a00  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd28a08  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd28a1c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd28a30  embedded object  (0x26c04519 <the hole>)
0xffff8bd28a38  embedded object  (0x26c04519 <the hole>)
0xffff8bd28a40  embedded object  (0x26c04519 <the hole>)
0xffff8bd28a48  embedded object  (0x26c04519 <the hole>)
0xffff8bd28a7c  code target (STUB)  (0xffff8bd06820)
0xffff8bd28aa0  code target (STUB)  (0xffff8bd06260)
0xffff8bd28aac  code target (STUB)  (0xffff8bd068e0)
0xffff8bd28ac0  constant pool (size 88)
0xffff8bd28b38  runtime entry
0xffff8bd28b44  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArrayNoArgumentConstructorStub
name = InternalArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 429)
0xffff8bd289c0     0  movz w0, #0x6000
0xffff8bd289c4     4  movk w0, #0x9, lsl #16
0xffff8bd289c8     8  cmp w0, #0x30 (48)
0xffff8bd289cc    12  b.ls #+0x14c (addr 0xffff8bd28b18)
0xffff8bd289d0    16  movz x2, #0xe2c0
0xffff8bd289d4    20  movk x2, #0x2cb8, lsl #16
0xffff8bd289d8    24  ldp x3, x0, [x2]
0xffff8bd289dc    28  adds x16, x3, #0x50 (80)
0xffff8bd289e0    32  ccmp x16, x0, #nzCv, lo
0xffff8bd289e4    36  b.hi #+0x78 (addr 0xffff8bd28a5c)
0xffff8bd289e8    40  str x16, [x2]
0xffff8bd289ec    44  orr x3, x3, #0x1
0xffff8bd289f0    48  movz w0, #0x0
0xffff8bd289f4    52  stur x0, [x3, #31]
0xffff8bd289f8    56  ldur x0, [x1, #23]
0xffff8bd289fc    60  stur x0, [x3, #-1]
0xffff8bd28a00    64  ldr x0, pc+200 (addr 0x0000ffff8bd28ac8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd28a04    68  stur x0, [x3, #7]
0xffff8bd28a08    72  ldr x0, pc+200 (addr 0x0000ffff8bd28ad0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd28a0c    76  stur x0, [x3, #15]
0xffff8bd28a10    80  movz x0, #0x0
0xffff8bd28a14    84  stur x0, [x3, #23]
0xffff8bd28a18    88  add x0, x3, #0x20 (32)
0xffff8bd28a1c    92  ldr x1, pc+188 (addr 0x0000ffff8bd28ad8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd28a20    96  stur x1, [x0, #-1]
0xffff8bd28a24   100  movz x1, #0x400000000
0xffff8bd28a28   104  stur x1, [x0, #7]
0xffff8bd28a2c   108  stur x0, [x3, #15]
0xffff8bd28a30   112  ldr x1, pc+176 (addr 0x0000ffff8bd28ae0)    ;; object: 0x26c04519 <the hole>
0xffff8bd28a34   116  stur x1, [x0, #15]
0xffff8bd28a38   120  ldr x1, pc+176 (addr 0x0000ffff8bd28ae8)    ;; object: 0x26c04519 <the hole>
0xffff8bd28a3c   124  stur x1, [x0, #23]
0xffff8bd28a40   128  ldr x1, pc+176 (addr 0x0000ffff8bd28af0)    ;; object: 0x26c04519 <the hole>
0xffff8bd28a44   132  stur x1, [x0, #31]
0xffff8bd28a48   136  ldr x1, pc+176 (addr 0x0000ffff8bd28af8)    ;; object: 0x26c04519 <the hole>
0xffff8bd28a4c   140  stur x1, [x0, #39]
0xffff8bd28a50   144  mov x0, x3
0xffff8bd28a54   148  add jssp, jssp, #0x8 (8)
0xffff8bd28a58   152  ret
0xffff8bd28a5c   156  sub csp, jssp, #0x10 (16)
0xffff8bd28a60   160  stp fp, lr, [jssp, #-16]!
0xffff8bd28a64   164  movz fp, #0xa00000000
0xffff8bd28a68   168  sub csp, jssp, #0x8 (8)
0xffff8bd28a6c   172  str fp, [jssp, #-8]!
0xffff8bd28a70   176  add fp, jssp, #0x8 (8)
0xffff8bd28a74   180  movz x3, #0x0
0xffff8bd28a78   184  mov x16, lr
0xffff8bd28a7c   188  ldr x17, pc+132 (addr 0x0000ffff8bd28b00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd28a80   192  blr x17
0xffff8bd28a84   196  movz x0, #0x5000000000
0xffff8bd28a88   200  movz x10, #0x0
0xffff8bd28a8c   204  sub csp, jssp, #0x10 (16)
0xffff8bd28a90   208  stp x10, x0, [jssp, #-16]!
0xffff8bd28a94   212  movz x0, #0x2
0xffff8bd28a98   216  movz x1, #0x5b88
0xffff8bd28a9c   220  movk x1, #0xe2, lsl #16
0xffff8bd28aa0   224  ldr x16, pc+104 (addr 0x0000ffff8bd28b08)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd28aa4   228  blr x16
0xffff8bd28aa8   232  str x0, [jssp, #24]
0xffff8bd28aac   236  ldr x16, pc+100 (addr 0x0000ffff8bd28b10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd28ab0   240  blr x16
0xffff8bd28ab4   244  ldr lr, [jssp, #16]
0xffff8bd28ab8   248  ldp xzr, fp, [jssp], #24
0xffff8bd28abc   252  b #-0xcc (addr 0xffff8bd289f0)
0xffff8bd28ac0   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff8bd28ac4   260  d63f03e0       constant
0xffff8bd28ac8   264  26c04201       constant
0xffff8bd28acc   268  00000000       constant
0xffff8bd28ad0   272  26c04201       constant
0xffff8bd28ad4   276  00000000       constant
0xffff8bd28ad8   280  5f504259       constant
0xffff8bd28adc   284  00000000       constant
0xffff8bd28ae0   288  26c04519       constant
0xffff8bd28ae4   292  00000000       constant
0xffff8bd28ae8   296  26c04519       constant
0xffff8bd28aec   300  00000000       constant
0xffff8bd28af0   304  26c04519       constant
0xffff8bd28af4   308  00000000       constant
0xffff8bd28af8   312  26c04519       constant
0xffff8bd28afc   316  00000000       constant
0xffff8bd28b00   320  8bd06820       constant
0xffff8bd28b04   324  0000ffff       constant
0xffff8bd28b08   328  8bd06260       constant
0xffff8bd28b0c   332  0000ffff       constant
0xffff8bd28b10   336  8bd068e0       constant
0xffff8bd28b14   340  0000ffff       constant
0xffff8bd28b18   344  movz x16, #0x0
0xffff8bd28b1c   348  sub csp, jssp, #0x10 (16)
0xffff8bd28b20   352  stp fp, lr, [jssp, #-16]!
0xffff8bd28b24   356  bl #+0x4 (addr 0xffff8bd28b28)
0xffff8bd28b28   360  movz x17, #0xa00000000
0xffff8bd28b2c   364  sub csp, jssp, #0x10 (16)
0xffff8bd28b30   368  stp x17, cp, [jssp, #-16]!
0xffff8bd28b34   372  add fp, jssp, #0x10 (16)
0xffff8bd28b38   376  ldr x17, pc+24 (addr 0x0000ffff8bd28b50)    ;; lazy deoptimization bailout 0
0xffff8bd28b3c   380  add x17, x17, x16
0xffff8bd28b40   384  br x17
0xffff8bd28b44   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd28b48   392  d63f03e0       constant
0xffff8bd28b4c   396  d503201f       constant
0xffff8bd28b50   400  8bb06000       constant
0xffff8bd28b54   404  0000ffff       constant


Safepoints (size = 21)
0xffff8bd28aa8   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff8bd28a00  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd28a08  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd28a1c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd28a30  embedded object  (0x26c04519 <the hole>)
0xffff8bd28a38  embedded object  (0x26c04519 <the hole>)
0xffff8bd28a40  embedded object  (0x26c04519 <the hole>)
0xffff8bd28a48  embedded object  (0x26c04519 <the hole>)
0xffff8bd28a7c  code target (STUB)  (0xffff8bd06820)
0xffff8bd28aa0  code target (STUB)  (0xffff8bd06260)
0xffff8bd28aac  code target (STUB)  (0xffff8bd068e0)
0xffff8bd28ac0  constant pool (size 88)
0xffff8bd28b38  runtime entry
0xffff8bd28b44  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 509)
0xffff8bd28be0     0  movz x16, #0xa00000000
0xffff8bd28be4     4  sub csp, jssp, #0x10 (16)
0xffff8bd28be8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd28bec    12  mov fp, jssp
0xffff8bd28bf0    16  sub csp, jssp, #0x8 (8)
0xffff8bd28bf4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd28bf8    24  stur x16, [fp, #-8]
0xffff8bd28bfc    28  ldr x2, [fp]
0xffff8bd28c00    32  ldur x3, [x2, #-8]
0xffff8bd28c04    36  movz x16, #0xe00000000
0xffff8bd28c08    40  cmp x3, x16
0xffff8bd28c0c    44  csel x3, fp, x2, ne
0xffff8bd28c10    48  ldr x2, [x3, #16]
0xffff8bd28c14    52  tbnz w2, #0, #+0xd0 (addr 0xffff8bd28ce4)
0xffff8bd28c18    56  asr x4, x2, #32
0xffff8bd28c1c    60  movz w16, #0x257f
0xffff8bd28c20    64  cmp w4, w16, lsl #3
0xffff8bd28c24    68  b.hs #+0x16c (addr 0xffff8bd28d90)
0xffff8bd28c28    72  cbz w4, #+0xc (addr 0xffff8bd28c34)
0xffff8bd28c2c    76  mov x2, x4
0xffff8bd28c30    80  b #+0xc (addr 0xffff8bd28c3c)
0xffff8bd28c34    84  movz x2, #0x4
0xffff8bd28c38    88  movz x4, #0x0
0xffff8bd28c3c    92  lsl x3, x2, #32
0xffff8bd28c40    96  lsl x4, x4, #32
0xffff8bd28c44   100  lsl w5, w2, #3
0xffff8bd28c48   104  add w5, w5, #0x10 (16)
0xffff8bd28c4c   108  cmp w5, #0x96000 (614400)
0xffff8bd28c50   112  b.hs #+0x148 (addr 0xffff8bd28d98)
0xffff8bd28c54   116  add w0, w5, #0x20 (32)
0xffff8bd28c58   120  sxtw x0, w0
0xffff8bd28c5c   124  movz x5, #0xe2c0
0xffff8bd28c60   128  movk x5, #0x2cb8, lsl #16
0xffff8bd28c64   132  ldp x7, x16, [x5]
0xffff8bd28c68   136  adds x6, x7, x0
0xffff8bd28c6c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd28c70   144  b.hi #+0x9c (addr 0xffff8bd28d0c)
0xffff8bd28c74   148  str x6, [x5]
0xffff8bd28c78   152  orr x7, x7, #0x1
0xffff8bd28c7c   156  movz w0, #0x0
0xffff8bd28c80   160  stur x0, [x7, #31]
0xffff8bd28c84   164  ldur x0, [x1, #23]
0xffff8bd28c88   168  stur x0, [x7, #-1]
0xffff8bd28c8c   172  ldr x0, pc+204 (addr 0x0000ffff8bd28d58)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd28c90   176  stur x0, [x7, #7]
0xffff8bd28c94   180  ldr x0, pc+204 (addr 0x0000ffff8bd28d60)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd28c98   184  stur x0, [x7, #15]
0xffff8bd28c9c   188  stur x4, [x7, #23]
0xffff8bd28ca0   192  add x0, x7, #0x20 (32)
0xffff8bd28ca4   196  ldr x1, pc+196 (addr 0x0000ffff8bd28d68)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd28ca8   200  stur x1, [x0, #-1]
0xffff8bd28cac   204  stur x3, [x0, #7]
0xffff8bd28cb0   208  stur x0, [x7, #15]
0xffff8bd28cb4   212  cmp w2, #0x0 (0)
0xffff8bd28cb8   216  b.le #+0x18 (addr 0xffff8bd28cd0)
0xffff8bd28cbc   220  sub w2, w2, #0x1 (1)
0xffff8bd28cc0   224  ldr x1, pc+176 (addr 0x0000ffff8bd28d70)    ;; object: 0x26c04519 <the hole>
0xffff8bd28cc4   228  add x3, x0, #0xf (15)
0xffff8bd28cc8   232  str x1, [x3, w2, sxtw #3]
0xffff8bd28ccc   236  b #-0x18 (addr 0xffff8bd28cb4)
0xffff8bd28cd0   240  mov x0, x7
0xffff8bd28cd4   244  mov jssp, fp
0xffff8bd28cd8   248  ldp fp, lr, [jssp], #16
0xffff8bd28cdc   252  add jssp, jssp, #0x10 (16)
0xffff8bd28ce0   256  ret
0xffff8bd28ce4   260  ldur x16, [x2, #-1]
0xffff8bd28ce8   264  ldr x17, [x26, #120]
0xffff8bd28cec   268  cmp x16, x17
0xffff8bd28cf0   272  b.ne #+0xb0 (addr 0xffff8bd28da0)
0xffff8bd28cf4   276  ldur d29, [x2, #7]
0xffff8bd28cf8   280  fcvtzs w4, d29
0xffff8bd28cfc   284  scvtf d0, w4
0xffff8bd28d00   288  fcmp d29, d0
0xffff8bd28d04   292  b.ne #+0x9c (addr 0xffff8bd28da0)
0xffff8bd28d08   296  b #-0xec (addr 0xffff8bd28c1c)
0xffff8bd28d0c   300  movz x7, #0x0
0xffff8bd28d10   304  mov x16, lr
0xffff8bd28d14   308  ldr x17, pc+100 (addr 0x0000ffff8bd28d78)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd28d18   312  blr x17
0xffff8bd28d1c   316  lsl x0, x0, #32
0xffff8bd28d20   320  movz x10, #0x0
0xffff8bd28d24   324  sub csp, jssp, #0x10 (16)
0xffff8bd28d28   328  stp x10, x0, [jssp, #-16]!
0xffff8bd28d2c   332  movz x0, #0x2
0xffff8bd28d30   336  movz x1, #0x5b88
0xffff8bd28d34   340  movk x1, #0xe2, lsl #16
0xffff8bd28d38   344  ldr x16, pc+72 (addr 0x0000ffff8bd28d80)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd28d3c   348  blr x16
0xffff8bd28d40   352  str x0, [jssp, #56]
0xffff8bd28d44   356  ldr x16, pc+68 (addr 0x0000ffff8bd28d88)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd28d48   360  blr x16
0xffff8bd28d4c   364  b #-0xd0 (addr 0xffff8bd28c7c)
0xffff8bd28d50   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd28d54   372  d63f03e0       constant
0xffff8bd28d58   376  26c04201       constant
0xffff8bd28d5c   380  00000000       constant
0xffff8bd28d60   384  26c04201       constant
0xffff8bd28d64   388  00000000       constant
0xffff8bd28d68   392  5f504259       constant
0xffff8bd28d6c   396  00000000       constant
0xffff8bd28d70   400  26c04519       constant
0xffff8bd28d74   404  00000000       constant
0xffff8bd28d78   408  8bd06820       constant
0xffff8bd28d7c   412  0000ffff       constant
0xffff8bd28d80   416  8bd06260       constant
0xffff8bd28d84   420  0000ffff       constant
0xffff8bd28d88   424  8bd068e0       constant
0xffff8bd28d8c   428  0000ffff       constant
0xffff8bd28d90   432  movz x16, #0x0
0xffff8bd28d94   436  bl #+0x14 (addr 0xffff8bd28da8)
0xffff8bd28d98   440  movz x16, #0x8
0xffff8bd28d9c   444  bl #+0xc (addr 0xffff8bd28da8)
0xffff8bd28da0   448  movz x16, #0x10
0xffff8bd28da4   452  bl #+0x4 (addr 0xffff8bd28da8)
0xffff8bd28da8   456  ldr x17, pc+24 (addr 0x0000ffff8bd28dc0)    ;; lazy deoptimization bailout 0
0xffff8bd28dac   460  add x17, x17, x16
0xffff8bd28db0   464  br x17
0xffff8bd28db4   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd28db8   472  d63f03e0       constant
0xffff8bd28dbc   476  d503201f       constant
0xffff8bd28dc0   480  8bb06000       constant
0xffff8bd28dc4   484  0000ffff       constant


Safepoints (size = 21)
0xffff8bd28d40   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd28c8c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd28c94  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd28ca4  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd28cc0  embedded object  (0x26c04519 <the hole>)
0xffff8bd28d14  code target (STUB)  (0xffff8bd06820)
0xffff8bd28d38  code target (STUB)  (0xffff8bd06260)
0xffff8bd28d44  code target (STUB)  (0xffff8bd068e0)
0xffff8bd28d50  constant pool (size 64)
0xffff8bd28da8  runtime entry
0xffff8bd28db4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArraySingleArgumentConstructorStub
name = InternalArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 509)
0xffff8bd28be0     0  movz x16, #0xa00000000
0xffff8bd28be4     4  sub csp, jssp, #0x10 (16)
0xffff8bd28be8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd28bec    12  mov fp, jssp
0xffff8bd28bf0    16  sub csp, jssp, #0x8 (8)
0xffff8bd28bf4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd28bf8    24  stur x16, [fp, #-8]
0xffff8bd28bfc    28  ldr x2, [fp]
0xffff8bd28c00    32  ldur x3, [x2, #-8]
0xffff8bd28c04    36  movz x16, #0xe00000000
0xffff8bd28c08    40  cmp x3, x16
0xffff8bd28c0c    44  csel x3, fp, x2, ne
0xffff8bd28c10    48  ldr x2, [x3, #16]
0xffff8bd28c14    52  tbnz w2, #0, #+0xd0 (addr 0xffff8bd28ce4)
0xffff8bd28c18    56  asr x4, x2, #32
0xffff8bd28c1c    60  movz w16, #0x257f
0xffff8bd28c20    64  cmp w4, w16, lsl #3
0xffff8bd28c24    68  b.hs #+0x16c (addr 0xffff8bd28d90)
0xffff8bd28c28    72  cbz w4, #+0xc (addr 0xffff8bd28c34)
0xffff8bd28c2c    76  mov x2, x4
0xffff8bd28c30    80  b #+0xc (addr 0xffff8bd28c3c)
0xffff8bd28c34    84  movz x2, #0x4
0xffff8bd28c38    88  movz x4, #0x0
0xffff8bd28c3c    92  lsl x3, x2, #32
0xffff8bd28c40    96  lsl x4, x4, #32
0xffff8bd28c44   100  lsl w5, w2, #3
0xffff8bd28c48   104  add w5, w5, #0x10 (16)
0xffff8bd28c4c   108  cmp w5, #0x96000 (614400)
0xffff8bd28c50   112  b.hs #+0x148 (addr 0xffff8bd28d98)
0xffff8bd28c54   116  add w0, w5, #0x20 (32)
0xffff8bd28c58   120  sxtw x0, w0
0xffff8bd28c5c   124  movz x5, #0xe2c0
0xffff8bd28c60   128  movk x5, #0x2cb8, lsl #16
0xffff8bd28c64   132  ldp x7, x16, [x5]
0xffff8bd28c68   136  adds x6, x7, x0
0xffff8bd28c6c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd28c70   144  b.hi #+0x9c (addr 0xffff8bd28d0c)
0xffff8bd28c74   148  str x6, [x5]
0xffff8bd28c78   152  orr x7, x7, #0x1
0xffff8bd28c7c   156  movz w0, #0x0
0xffff8bd28c80   160  stur x0, [x7, #31]
0xffff8bd28c84   164  ldur x0, [x1, #23]
0xffff8bd28c88   168  stur x0, [x7, #-1]
0xffff8bd28c8c   172  ldr x0, pc+204 (addr 0x0000ffff8bd28d58)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd28c90   176  stur x0, [x7, #7]
0xffff8bd28c94   180  ldr x0, pc+204 (addr 0x0000ffff8bd28d60)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd28c98   184  stur x0, [x7, #15]
0xffff8bd28c9c   188  stur x4, [x7, #23]
0xffff8bd28ca0   192  add x0, x7, #0x20 (32)
0xffff8bd28ca4   196  ldr x1, pc+196 (addr 0x0000ffff8bd28d68)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd28ca8   200  stur x1, [x0, #-1]
0xffff8bd28cac   204  stur x3, [x0, #7]
0xffff8bd28cb0   208  stur x0, [x7, #15]
0xffff8bd28cb4   212  cmp w2, #0x0 (0)
0xffff8bd28cb8   216  b.le #+0x18 (addr 0xffff8bd28cd0)
0xffff8bd28cbc   220  sub w2, w2, #0x1 (1)
0xffff8bd28cc0   224  ldr x1, pc+176 (addr 0x0000ffff8bd28d70)    ;; object: 0x26c04519 <the hole>
0xffff8bd28cc4   228  add x3, x0, #0xf (15)
0xffff8bd28cc8   232  str x1, [x3, w2, sxtw #3]
0xffff8bd28ccc   236  b #-0x18 (addr 0xffff8bd28cb4)
0xffff8bd28cd0   240  mov x0, x7
0xffff8bd28cd4   244  mov jssp, fp
0xffff8bd28cd8   248  ldp fp, lr, [jssp], #16
0xffff8bd28cdc   252  add jssp, jssp, #0x10 (16)
0xffff8bd28ce0   256  ret
0xffff8bd28ce4   260  ldur x16, [x2, #-1]
0xffff8bd28ce8   264  ldr x17, [x26, #120]
0xffff8bd28cec   268  cmp x16, x17
0xffff8bd28cf0   272  b.ne #+0xb0 (addr 0xffff8bd28da0)
0xffff8bd28cf4   276  ldur d29, [x2, #7]
0xffff8bd28cf8   280  fcvtzs w4, d29
0xffff8bd28cfc   284  scvtf d0, w4
0xffff8bd28d00   288  fcmp d29, d0
0xffff8bd28d04   292  b.ne #+0x9c (addr 0xffff8bd28da0)
0xffff8bd28d08   296  b #-0xec (addr 0xffff8bd28c1c)
0xffff8bd28d0c   300  movz x7, #0x0
0xffff8bd28d10   304  mov x16, lr
0xffff8bd28d14   308  ldr x17, pc+100 (addr 0x0000ffff8bd28d78)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd28d18   312  blr x17
0xffff8bd28d1c   316  lsl x0, x0, #32
0xffff8bd28d20   320  movz x10, #0x0
0xffff8bd28d24   324  sub csp, jssp, #0x10 (16)
0xffff8bd28d28   328  stp x10, x0, [jssp, #-16]!
0xffff8bd28d2c   332  movz x0, #0x2
0xffff8bd28d30   336  movz x1, #0x5b88
0xffff8bd28d34   340  movk x1, #0xe2, lsl #16
0xffff8bd28d38   344  ldr x16, pc+72 (addr 0x0000ffff8bd28d80)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd28d3c   348  blr x16
0xffff8bd28d40   352  str x0, [jssp, #56]
0xffff8bd28d44   356  ldr x16, pc+68 (addr 0x0000ffff8bd28d88)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd28d48   360  blr x16
0xffff8bd28d4c   364  b #-0xd0 (addr 0xffff8bd28c7c)
0xffff8bd28d50   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd28d54   372  d63f03e0       constant
0xffff8bd28d58   376  26c04201       constant
0xffff8bd28d5c   380  00000000       constant
0xffff8bd28d60   384  26c04201       constant
0xffff8bd28d64   388  00000000       constant
0xffff8bd28d68   392  5f504259       constant
0xffff8bd28d6c   396  00000000       constant
0xffff8bd28d70   400  26c04519       constant
0xffff8bd28d74   404  00000000       constant
0xffff8bd28d78   408  8bd06820       constant
0xffff8bd28d7c   412  0000ffff       constant
0xffff8bd28d80   416  8bd06260       constant
0xffff8bd28d84   420  0000ffff       constant
0xffff8bd28d88   424  8bd068e0       constant
0xffff8bd28d8c   428  0000ffff       constant
0xffff8bd28d90   432  movz x16, #0x0
0xffff8bd28d94   436  bl #+0x14 (addr 0xffff8bd28da8)
0xffff8bd28d98   440  movz x16, #0x8
0xffff8bd28d9c   444  bl #+0xc (addr 0xffff8bd28da8)
0xffff8bd28da0   448  movz x16, #0x10
0xffff8bd28da4   452  bl #+0x4 (addr 0xffff8bd28da8)
0xffff8bd28da8   456  ldr x17, pc+24 (addr 0x0000ffff8bd28dc0)    ;; lazy deoptimization bailout 0
0xffff8bd28dac   460  add x17, x17, x16
0xffff8bd28db0   464  br x17
0xffff8bd28db4   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd28db8   472  d63f03e0       constant
0xffff8bd28dbc   476  d503201f       constant
0xffff8bd28dc0   480  8bb06000       constant
0xffff8bd28dc4   484  0000ffff       constant


Safepoints (size = 21)
0xffff8bd28d40   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd28c8c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd28c94  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd28ca4  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd28cc0  embedded object  (0x26c04519 <the hole>)
0xffff8bd28d14  code target (STUB)  (0xffff8bd06820)
0xffff8bd28d38  code target (STUB)  (0xffff8bd06260)
0xffff8bd28d44  code target (STUB)  (0xffff8bd068e0)
0xffff8bd28d50  constant pool (size 64)
0xffff8bd28da8  runtime entry
0xffff8bd28db4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 437)
0xffff8bd28e40     0  movz x16, #0xa00000000
0xffff8bd28e44     4  sub csp, jssp, #0x10 (16)
0xffff8bd28e48     8  stp fp, lr, [jssp, #-16]!
0xffff8bd28e4c    12  mov fp, jssp
0xffff8bd28e50    16  sub csp, jssp, #0x8 (8)
0xffff8bd28e54    20  sub jssp, jssp, #0x8 (8)
0xffff8bd28e58    24  stur x16, [fp, #-8]
0xffff8bd28e5c    28  movz w16, #0x257f
0xffff8bd28e60    32  cmp w0, w16, lsl #3
0xffff8bd28e64    36  b.hs #+0x14c (addr 0xffff8bd28fb0)
0xffff8bd28e68    40  lsl x2, x0, #32
0xffff8bd28e6c    44  lsl w3, w0, #3
0xffff8bd28e70    48  add w3, w3, #0x10 (16)
0xffff8bd28e74    52  cmp w3, #0x96000 (614400)
0xffff8bd28e78    56  b.hs #+0x140 (addr 0xffff8bd28fb8)
0xffff8bd28e7c    60  add w3, w3, #0x20 (32)
0xffff8bd28e80    64  sxtw x3, w3
0xffff8bd28e84    68  movz x4, #0xe2c0
0xffff8bd28e88    72  movk x4, #0x2cb8, lsl #16
0xffff8bd28e8c    76  ldp x6, x16, [x4]
0xffff8bd28e90    80  adds x5, x6, x3
0xffff8bd28e94    84  ccmp x5, x16, #nzCv, lo
0xffff8bd28e98    88  b.hi #+0x9c (addr 0xffff8bd28f34)
0xffff8bd28e9c    92  str x5, [x4]
0xffff8bd28ea0    96  orr x6, x6, #0x1
0xffff8bd28ea4   100  movz w3, #0x0
0xffff8bd28ea8   104  stur x3, [x6, #31]
0xffff8bd28eac   108  ldur x1, [x1, #23]
0xffff8bd28eb0   112  stur x1, [x6, #-1]
0xffff8bd28eb4   116  ldr x1, pc+204 (addr 0x0000ffff8bd28f80)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd28eb8   120  stur x1, [x6, #7]
0xffff8bd28ebc   124  ldr x1, pc+204 (addr 0x0000ffff8bd28f88)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd28ec0   128  stur x1, [x6, #15]
0xffff8bd28ec4   132  stur x2, [x6, #23]
0xffff8bd28ec8   136  add x1, x6, #0x20 (32)
0xffff8bd28ecc   140  ldr x3, pc+196 (addr 0x0000ffff8bd28f90)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd28ed0   144  stur x3, [x1, #-1]
0xffff8bd28ed4   148  stur x2, [x1, #7]
0xffff8bd28ed8   152  stur x1, [x6, #15]
0xffff8bd28edc   156  ldr x2, [fp]
0xffff8bd28ee0   160  ldur x3, [x2, #-8]
0xffff8bd28ee4   164  movz x16, #0xe00000000
0xffff8bd28ee8   168  cmp x3, x16
0xffff8bd28eec   172  csel x3, fp, x2, ne
0xffff8bd28ef0   176  movz x2, #0x0
0xffff8bd28ef4   180  cmp w0, w2
0xffff8bd28ef8   184  b.le #+0x20 (addr 0xffff8bd28f18)
0xffff8bd28efc   188  sub w4, w0, w2
0xffff8bd28f00   192  add w4, w4, #0x1 (1)
0xffff8bd28f04   196  ldr x4, [x3, w4, uxtw #3]
0xffff8bd28f08   200  add x5, x1, #0xf (15)
0xffff8bd28f0c   204  str x4, [x5, w2, sxtw #3]
0xffff8bd28f10   208  add w2, w2, #0x1 (1)
0xffff8bd28f14   212  b #-0x20 (addr 0xffff8bd28ef4)
0xffff8bd28f18   216  add w0, w0, #0x1 (1)
0xffff8bd28f1c   220  lsl x1, x0, #32
0xffff8bd28f20   224  mov x0, x6
0xffff8bd28f24   228  mov jssp, fp
0xffff8bd28f28   232  ldp fp, lr, [jssp], #16
0xffff8bd28f2c   236  add jssp, jssp, x1, lsr #29
0xffff8bd28f30   240  ret
0xffff8bd28f34   244  movz x6, #0x0
0xffff8bd28f38   248  mov x16, lr
0xffff8bd28f3c   252  ldr x17, pc+92 (addr 0x0000ffff8bd28f98)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd28f40   256  blr x17
0xffff8bd28f44   260  lsl x0, x3, #32
0xffff8bd28f48   264  movz x10, #0x0
0xffff8bd28f4c   268  sub csp, jssp, #0x10 (16)
0xffff8bd28f50   272  stp x10, x0, [jssp, #-16]!
0xffff8bd28f54   276  movz x0, #0x2
0xffff8bd28f58   280  movz x1, #0x5b88
0xffff8bd28f5c   284  movk x1, #0xe2, lsl #16
0xffff8bd28f60   288  ldr x16, pc+64 (addr 0x0000ffff8bd28fa0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd28f64   292  blr x16
0xffff8bd28f68   296  str x0, [jssp, #48]
0xffff8bd28f6c   300  ldr x16, pc+60 (addr 0x0000ffff8bd28fa8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd28f70   304  blr x16
0xffff8bd28f74   308  b #-0xd0 (addr 0xffff8bd28ea4)
0xffff8bd28f78   312  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd28f7c   316  d63f03e0       constant
0xffff8bd28f80   320  26c04201       constant
0xffff8bd28f84   324  00000000       constant
0xffff8bd28f88   328  26c04201       constant
0xffff8bd28f8c   332  00000000       constant
0xffff8bd28f90   336  5f504259       constant
0xffff8bd28f94   340  00000000       constant
0xffff8bd28f98   344  8bd06820       constant
0xffff8bd28f9c   348  0000ffff       constant
0xffff8bd28fa0   352  8bd06260       constant
0xffff8bd28fa4   356  0000ffff       constant
0xffff8bd28fa8   360  8bd068e0       constant
0xffff8bd28fac   364  0000ffff       constant
0xffff8bd28fb0   368  movz x16, #0x0
0xffff8bd28fb4   372  bl #+0xc (addr 0xffff8bd28fc0)
0xffff8bd28fb8   376  movz x16, #0x8
0xffff8bd28fbc   380  bl #+0x4 (addr 0xffff8bd28fc0)
0xffff8bd28fc0   384  ldr x17, pc+24 (addr 0x0000ffff8bd28fd8)    ;; lazy deoptimization bailout 0
0xffff8bd28fc4   388  add x17, x17, x16
0xffff8bd28fc8   392  br x17
0xffff8bd28fcc   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd28fd0   400  d63f03e0       constant
0xffff8bd28fd4   404  d503201f       constant
0xffff8bd28fd8   408  8bb06000       constant
0xffff8bd28fdc   412  0000ffff       constant


Safepoints (size = 21)
0xffff8bd28f68   296  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd28eb4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd28ebc  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd28ecc  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd28f3c  code target (STUB)  (0xffff8bd06820)
0xffff8bd28f60  code target (STUB)  (0xffff8bd06260)
0xffff8bd28f6c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd28f78  constant pool (size 56)
0xffff8bd28fc0  runtime entry
0xffff8bd28fcc  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArrayNArgumentsConstructorStub
name = InternalArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 437)
0xffff8bd28e40     0  movz x16, #0xa00000000
0xffff8bd28e44     4  sub csp, jssp, #0x10 (16)
0xffff8bd28e48     8  stp fp, lr, [jssp, #-16]!
0xffff8bd28e4c    12  mov fp, jssp
0xffff8bd28e50    16  sub csp, jssp, #0x8 (8)
0xffff8bd28e54    20  sub jssp, jssp, #0x8 (8)
0xffff8bd28e58    24  stur x16, [fp, #-8]
0xffff8bd28e5c    28  movz w16, #0x257f
0xffff8bd28e60    32  cmp w0, w16, lsl #3
0xffff8bd28e64    36  b.hs #+0x14c (addr 0xffff8bd28fb0)
0xffff8bd28e68    40  lsl x2, x0, #32
0xffff8bd28e6c    44  lsl w3, w0, #3
0xffff8bd28e70    48  add w3, w3, #0x10 (16)
0xffff8bd28e74    52  cmp w3, #0x96000 (614400)
0xffff8bd28e78    56  b.hs #+0x140 (addr 0xffff8bd28fb8)
0xffff8bd28e7c    60  add w3, w3, #0x20 (32)
0xffff8bd28e80    64  sxtw x3, w3
0xffff8bd28e84    68  movz x4, #0xe2c0
0xffff8bd28e88    72  movk x4, #0x2cb8, lsl #16
0xffff8bd28e8c    76  ldp x6, x16, [x4]
0xffff8bd28e90    80  adds x5, x6, x3
0xffff8bd28e94    84  ccmp x5, x16, #nzCv, lo
0xffff8bd28e98    88  b.hi #+0x9c (addr 0xffff8bd28f34)
0xffff8bd28e9c    92  str x5, [x4]
0xffff8bd28ea0    96  orr x6, x6, #0x1
0xffff8bd28ea4   100  movz w3, #0x0
0xffff8bd28ea8   104  stur x3, [x6, #31]
0xffff8bd28eac   108  ldur x1, [x1, #23]
0xffff8bd28eb0   112  stur x1, [x6, #-1]
0xffff8bd28eb4   116  ldr x1, pc+204 (addr 0x0000ffff8bd28f80)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd28eb8   120  stur x1, [x6, #7]
0xffff8bd28ebc   124  ldr x1, pc+204 (addr 0x0000ffff8bd28f88)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd28ec0   128  stur x1, [x6, #15]
0xffff8bd28ec4   132  stur x2, [x6, #23]
0xffff8bd28ec8   136  add x1, x6, #0x20 (32)
0xffff8bd28ecc   140  ldr x3, pc+196 (addr 0x0000ffff8bd28f90)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd28ed0   144  stur x3, [x1, #-1]
0xffff8bd28ed4   148  stur x2, [x1, #7]
0xffff8bd28ed8   152  stur x1, [x6, #15]
0xffff8bd28edc   156  ldr x2, [fp]
0xffff8bd28ee0   160  ldur x3, [x2, #-8]
0xffff8bd28ee4   164  movz x16, #0xe00000000
0xffff8bd28ee8   168  cmp x3, x16
0xffff8bd28eec   172  csel x3, fp, x2, ne
0xffff8bd28ef0   176  movz x2, #0x0
0xffff8bd28ef4   180  cmp w0, w2
0xffff8bd28ef8   184  b.le #+0x20 (addr 0xffff8bd28f18)
0xffff8bd28efc   188  sub w4, w0, w2
0xffff8bd28f00   192  add w4, w4, #0x1 (1)
0xffff8bd28f04   196  ldr x4, [x3, w4, uxtw #3]
0xffff8bd28f08   200  add x5, x1, #0xf (15)
0xffff8bd28f0c   204  str x4, [x5, w2, sxtw #3]
0xffff8bd28f10   208  add w2, w2, #0x1 (1)
0xffff8bd28f14   212  b #-0x20 (addr 0xffff8bd28ef4)
0xffff8bd28f18   216  add w0, w0, #0x1 (1)
0xffff8bd28f1c   220  lsl x1, x0, #32
0xffff8bd28f20   224  mov x0, x6
0xffff8bd28f24   228  mov jssp, fp
0xffff8bd28f28   232  ldp fp, lr, [jssp], #16
0xffff8bd28f2c   236  add jssp, jssp, x1, lsr #29
0xffff8bd28f30   240  ret
0xffff8bd28f34   244  movz x6, #0x0
0xffff8bd28f38   248  mov x16, lr
0xffff8bd28f3c   252  ldr x17, pc+92 (addr 0x0000ffff8bd28f98)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd28f40   256  blr x17
0xffff8bd28f44   260  lsl x0, x3, #32
0xffff8bd28f48   264  movz x10, #0x0
0xffff8bd28f4c   268  sub csp, jssp, #0x10 (16)
0xffff8bd28f50   272  stp x10, x0, [jssp, #-16]!
0xffff8bd28f54   276  movz x0, #0x2
0xffff8bd28f58   280  movz x1, #0x5b88
0xffff8bd28f5c   284  movk x1, #0xe2, lsl #16
0xffff8bd28f60   288  ldr x16, pc+64 (addr 0x0000ffff8bd28fa0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd28f64   292  blr x16
0xffff8bd28f68   296  str x0, [jssp, #48]
0xffff8bd28f6c   300  ldr x16, pc+60 (addr 0x0000ffff8bd28fa8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd28f70   304  blr x16
0xffff8bd28f74   308  b #-0xd0 (addr 0xffff8bd28ea4)
0xffff8bd28f78   312  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd28f7c   316  d63f03e0       constant
0xffff8bd28f80   320  26c04201       constant
0xffff8bd28f84   324  00000000       constant
0xffff8bd28f88   328  26c04201       constant
0xffff8bd28f8c   332  00000000       constant
0xffff8bd28f90   336  5f504259       constant
0xffff8bd28f94   340  00000000       constant
0xffff8bd28f98   344  8bd06820       constant
0xffff8bd28f9c   348  0000ffff       constant
0xffff8bd28fa0   352  8bd06260       constant
0xffff8bd28fa4   356  0000ffff       constant
0xffff8bd28fa8   360  8bd068e0       constant
0xffff8bd28fac   364  0000ffff       constant
0xffff8bd28fb0   368  movz x16, #0x0
0xffff8bd28fb4   372  bl #+0xc (addr 0xffff8bd28fc0)
0xffff8bd28fb8   376  movz x16, #0x8
0xffff8bd28fbc   380  bl #+0x4 (addr 0xffff8bd28fc0)
0xffff8bd28fc0   384  ldr x17, pc+24 (addr 0x0000ffff8bd28fd8)    ;; lazy deoptimization bailout 0
0xffff8bd28fc4   388  add x17, x17, x16
0xffff8bd28fc8   392  br x17
0xffff8bd28fcc   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd28fd0   400  d63f03e0       constant
0xffff8bd28fd4   404  d503201f       constant
0xffff8bd28fd8   408  8bb06000       constant
0xffff8bd28fdc   412  0000ffff       constant


Safepoints (size = 21)
0xffff8bd28f68   296  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd28eb4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd28ebc  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd28ecc  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd28f3c  code target (STUB)  (0xffff8bd06820)
0xffff8bd28f60  code target (STUB)  (0xffff8bd06260)
0xffff8bd28f6c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd28f78  constant pool (size 56)
0xffff8bd28fc0  runtime entry
0xffff8bd28fcc  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 429)
0xffff8bd29060     0  movz w0, #0x6000
0xffff8bd29064     4  movk w0, #0x9, lsl #16
0xffff8bd29068     8  cmp w0, #0x30 (48)
0xffff8bd2906c    12  b.ls #+0x14c (addr 0xffff8bd291b8)
0xffff8bd29070    16  movz x2, #0xe2c0
0xffff8bd29074    20  movk x2, #0x2cb8, lsl #16
0xffff8bd29078    24  ldp x3, x0, [x2]
0xffff8bd2907c    28  adds x16, x3, #0x50 (80)
0xffff8bd29080    32  ccmp x16, x0, #nzCv, lo
0xffff8bd29084    36  b.hi #+0x78 (addr 0xffff8bd290fc)
0xffff8bd29088    40  str x16, [x2]
0xffff8bd2908c    44  orr x3, x3, #0x1
0xffff8bd29090    48  movz w0, #0x0
0xffff8bd29094    52  stur x0, [x3, #31]
0xffff8bd29098    56  ldur x0, [x1, #23]
0xffff8bd2909c    60  stur x0, [x3, #-1]
0xffff8bd290a0    64  ldr x0, pc+200 (addr 0x0000ffff8bd29168)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd290a4    68  stur x0, [x3, #7]
0xffff8bd290a8    72  ldr x0, pc+200 (addr 0x0000ffff8bd29170)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd290ac    76  stur x0, [x3, #15]
0xffff8bd290b0    80  movz x0, #0x0
0xffff8bd290b4    84  stur x0, [x3, #23]
0xffff8bd290b8    88  add x0, x3, #0x20 (32)
0xffff8bd290bc    92  ldr x1, pc+188 (addr 0x0000ffff8bd29178)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd290c0    96  stur x1, [x0, #-1]
0xffff8bd290c4   100  movz x1, #0x400000000
0xffff8bd290c8   104  stur x1, [x0, #7]
0xffff8bd290cc   108  stur x0, [x3, #15]
0xffff8bd290d0   112  ldr x1, pc+176 (addr 0x0000ffff8bd29180)    ;; object: 0x26c04519 <the hole>
0xffff8bd290d4   116  stur x1, [x0, #15]
0xffff8bd290d8   120  ldr x1, pc+176 (addr 0x0000ffff8bd29188)    ;; object: 0x26c04519 <the hole>
0xffff8bd290dc   124  stur x1, [x0, #23]
0xffff8bd290e0   128  ldr x1, pc+176 (addr 0x0000ffff8bd29190)    ;; object: 0x26c04519 <the hole>
0xffff8bd290e4   132  stur x1, [x0, #31]
0xffff8bd290e8   136  ldr x1, pc+176 (addr 0x0000ffff8bd29198)    ;; object: 0x26c04519 <the hole>
0xffff8bd290ec   140  stur x1, [x0, #39]
0xffff8bd290f0   144  mov x0, x3
0xffff8bd290f4   148  add jssp, jssp, #0x8 (8)
0xffff8bd290f8   152  ret
0xffff8bd290fc   156  sub csp, jssp, #0x10 (16)
0xffff8bd29100   160  stp fp, lr, [jssp, #-16]!
0xffff8bd29104   164  movz fp, #0xa00000000
0xffff8bd29108   168  sub csp, jssp, #0x8 (8)
0xffff8bd2910c   172  str fp, [jssp, #-8]!
0xffff8bd29110   176  add fp, jssp, #0x8 (8)
0xffff8bd29114   180  movz x3, #0x0
0xffff8bd29118   184  mov x16, lr
0xffff8bd2911c   188  ldr x17, pc+132 (addr 0x0000ffff8bd291a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd29120   192  blr x17
0xffff8bd29124   196  movz x0, #0x5000000000
0xffff8bd29128   200  movz x10, #0x0
0xffff8bd2912c   204  sub csp, jssp, #0x10 (16)
0xffff8bd29130   208  stp x10, x0, [jssp, #-16]!
0xffff8bd29134   212  movz x0, #0x2
0xffff8bd29138   216  movz x1, #0x5b88
0xffff8bd2913c   220  movk x1, #0xe2, lsl #16
0xffff8bd29140   224  ldr x16, pc+104 (addr 0x0000ffff8bd291a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd29144   228  blr x16
0xffff8bd29148   232  str x0, [jssp, #24]
0xffff8bd2914c   236  ldr x16, pc+100 (addr 0x0000ffff8bd291b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd29150   240  blr x16
0xffff8bd29154   244  ldr lr, [jssp, #16]
0xffff8bd29158   248  ldp xzr, fp, [jssp], #24
0xffff8bd2915c   252  b #-0xcc (addr 0xffff8bd29090)
0xffff8bd29160   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff8bd29164   260  d63f03e0       constant
0xffff8bd29168   264  26c04201       constant
0xffff8bd2916c   268  00000000       constant
0xffff8bd29170   272  26c04201       constant
0xffff8bd29174   276  00000000       constant
0xffff8bd29178   280  5f504259       constant
0xffff8bd2917c   284  00000000       constant
0xffff8bd29180   288  26c04519       constant
0xffff8bd29184   292  00000000       constant
0xffff8bd29188   296  26c04519       constant
0xffff8bd2918c   300  00000000       constant
0xffff8bd29190   304  26c04519       constant
0xffff8bd29194   308  00000000       constant
0xffff8bd29198   312  26c04519       constant
0xffff8bd2919c   316  00000000       constant
0xffff8bd291a0   320  8bd06820       constant
0xffff8bd291a4   324  0000ffff       constant
0xffff8bd291a8   328  8bd06260       constant
0xffff8bd291ac   332  0000ffff       constant
0xffff8bd291b0   336  8bd068e0       constant
0xffff8bd291b4   340  0000ffff       constant
0xffff8bd291b8   344  movz x16, #0x0
0xffff8bd291bc   348  sub csp, jssp, #0x10 (16)
0xffff8bd291c0   352  stp fp, lr, [jssp, #-16]!
0xffff8bd291c4   356  bl #+0x4 (addr 0xffff8bd291c8)
0xffff8bd291c8   360  movz x17, #0xa00000000
0xffff8bd291cc   364  sub csp, jssp, #0x10 (16)
0xffff8bd291d0   368  stp x17, cp, [jssp, #-16]!
0xffff8bd291d4   372  add fp, jssp, #0x10 (16)
0xffff8bd291d8   376  ldr x17, pc+24 (addr 0x0000ffff8bd291f0)    ;; lazy deoptimization bailout 0
0xffff8bd291dc   380  add x17, x17, x16
0xffff8bd291e0   384  br x17
0xffff8bd291e4   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd291e8   392  d63f03e0       constant
0xffff8bd291ec   396  d503201f       constant
0xffff8bd291f0   400  8bb06000       constant
0xffff8bd291f4   404  0000ffff       constant


Safepoints (size = 21)
0xffff8bd29148   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff8bd290a0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd290a8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd290bc  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd290d0  embedded object  (0x26c04519 <the hole>)
0xffff8bd290d8  embedded object  (0x26c04519 <the hole>)
0xffff8bd290e0  embedded object  (0x26c04519 <the hole>)
0xffff8bd290e8  embedded object  (0x26c04519 <the hole>)
0xffff8bd2911c  code target (STUB)  (0xffff8bd06820)
0xffff8bd29140  code target (STUB)  (0xffff8bd06260)
0xffff8bd2914c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd29160  constant pool (size 88)
0xffff8bd291d8  runtime entry
0xffff8bd291e4  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArrayNoArgumentConstructorStub
name = InternalArrayNoArgumentConstructorStub
compiler = crankshaft
Instructions (size = 429)
0xffff8bd29060     0  movz w0, #0x6000
0xffff8bd29064     4  movk w0, #0x9, lsl #16
0xffff8bd29068     8  cmp w0, #0x30 (48)
0xffff8bd2906c    12  b.ls #+0x14c (addr 0xffff8bd291b8)
0xffff8bd29070    16  movz x2, #0xe2c0
0xffff8bd29074    20  movk x2, #0x2cb8, lsl #16
0xffff8bd29078    24  ldp x3, x0, [x2]
0xffff8bd2907c    28  adds x16, x3, #0x50 (80)
0xffff8bd29080    32  ccmp x16, x0, #nzCv, lo
0xffff8bd29084    36  b.hi #+0x78 (addr 0xffff8bd290fc)
0xffff8bd29088    40  str x16, [x2]
0xffff8bd2908c    44  orr x3, x3, #0x1
0xffff8bd29090    48  movz w0, #0x0
0xffff8bd29094    52  stur x0, [x3, #31]
0xffff8bd29098    56  ldur x0, [x1, #23]
0xffff8bd2909c    60  stur x0, [x3, #-1]
0xffff8bd290a0    64  ldr x0, pc+200 (addr 0x0000ffff8bd29168)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd290a4    68  stur x0, [x3, #7]
0xffff8bd290a8    72  ldr x0, pc+200 (addr 0x0000ffff8bd29170)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd290ac    76  stur x0, [x3, #15]
0xffff8bd290b0    80  movz x0, #0x0
0xffff8bd290b4    84  stur x0, [x3, #23]
0xffff8bd290b8    88  add x0, x3, #0x20 (32)
0xffff8bd290bc    92  ldr x1, pc+188 (addr 0x0000ffff8bd29178)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd290c0    96  stur x1, [x0, #-1]
0xffff8bd290c4   100  movz x1, #0x400000000
0xffff8bd290c8   104  stur x1, [x0, #7]
0xffff8bd290cc   108  stur x0, [x3, #15]
0xffff8bd290d0   112  ldr x1, pc+176 (addr 0x0000ffff8bd29180)    ;; object: 0x26c04519 <the hole>
0xffff8bd290d4   116  stur x1, [x0, #15]
0xffff8bd290d8   120  ldr x1, pc+176 (addr 0x0000ffff8bd29188)    ;; object: 0x26c04519 <the hole>
0xffff8bd290dc   124  stur x1, [x0, #23]
0xffff8bd290e0   128  ldr x1, pc+176 (addr 0x0000ffff8bd29190)    ;; object: 0x26c04519 <the hole>
0xffff8bd290e4   132  stur x1, [x0, #31]
0xffff8bd290e8   136  ldr x1, pc+176 (addr 0x0000ffff8bd29198)    ;; object: 0x26c04519 <the hole>
0xffff8bd290ec   140  stur x1, [x0, #39]
0xffff8bd290f0   144  mov x0, x3
0xffff8bd290f4   148  add jssp, jssp, #0x8 (8)
0xffff8bd290f8   152  ret
0xffff8bd290fc   156  sub csp, jssp, #0x10 (16)
0xffff8bd29100   160  stp fp, lr, [jssp, #-16]!
0xffff8bd29104   164  movz fp, #0xa00000000
0xffff8bd29108   168  sub csp, jssp, #0x8 (8)
0xffff8bd2910c   172  str fp, [jssp, #-8]!
0xffff8bd29110   176  add fp, jssp, #0x8 (8)
0xffff8bd29114   180  movz x3, #0x0
0xffff8bd29118   184  mov x16, lr
0xffff8bd2911c   188  ldr x17, pc+132 (addr 0x0000ffff8bd291a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd29120   192  blr x17
0xffff8bd29124   196  movz x0, #0x5000000000
0xffff8bd29128   200  movz x10, #0x0
0xffff8bd2912c   204  sub csp, jssp, #0x10 (16)
0xffff8bd29130   208  stp x10, x0, [jssp, #-16]!
0xffff8bd29134   212  movz x0, #0x2
0xffff8bd29138   216  movz x1, #0x5b88
0xffff8bd2913c   220  movk x1, #0xe2, lsl #16
0xffff8bd29140   224  ldr x16, pc+104 (addr 0x0000ffff8bd291a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd29144   228  blr x16
0xffff8bd29148   232  str x0, [jssp, #24]
0xffff8bd2914c   236  ldr x16, pc+100 (addr 0x0000ffff8bd291b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd29150   240  blr x16
0xffff8bd29154   244  ldr lr, [jssp, #16]
0xffff8bd29158   248  ldp xzr, fp, [jssp], #24
0xffff8bd2915c   252  b #-0xcc (addr 0xffff8bd29090)
0xffff8bd29160   256  580002bf       constant pool begin (num_const = 21)    ;; constant pool
0xffff8bd29164   260  d63f03e0       constant
0xffff8bd29168   264  26c04201       constant
0xffff8bd2916c   268  00000000       constant
0xffff8bd29170   272  26c04201       constant
0xffff8bd29174   276  00000000       constant
0xffff8bd29178   280  5f504259       constant
0xffff8bd2917c   284  00000000       constant
0xffff8bd29180   288  26c04519       constant
0xffff8bd29184   292  00000000       constant
0xffff8bd29188   296  26c04519       constant
0xffff8bd2918c   300  00000000       constant
0xffff8bd29190   304  26c04519       constant
0xffff8bd29194   308  00000000       constant
0xffff8bd29198   312  26c04519       constant
0xffff8bd2919c   316  00000000       constant
0xffff8bd291a0   320  8bd06820       constant
0xffff8bd291a4   324  0000ffff       constant
0xffff8bd291a8   328  8bd06260       constant
0xffff8bd291ac   332  0000ffff       constant
0xffff8bd291b0   336  8bd068e0       constant
0xffff8bd291b4   340  0000ffff       constant
0xffff8bd291b8   344  movz x16, #0x0
0xffff8bd291bc   348  sub csp, jssp, #0x10 (16)
0xffff8bd291c0   352  stp fp, lr, [jssp, #-16]!
0xffff8bd291c4   356  bl #+0x4 (addr 0xffff8bd291c8)
0xffff8bd291c8   360  movz x17, #0xa00000000
0xffff8bd291cc   364  sub csp, jssp, #0x10 (16)
0xffff8bd291d0   368  stp x17, cp, [jssp, #-16]!
0xffff8bd291d4   372  add fp, jssp, #0x10 (16)
0xffff8bd291d8   376  ldr x17, pc+24 (addr 0x0000ffff8bd291f0)    ;; lazy deoptimization bailout 0
0xffff8bd291dc   380  add x17, x17, x16
0xffff8bd291e0   384  br x17
0xffff8bd291e4   388  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd291e8   392  d63f03e0       constant
0xffff8bd291ec   396  d503201f       constant
0xffff8bd291f0   400  8bb06000       constant
0xffff8bd291f4   404  0000ffff       constant


Safepoints (size = 21)
0xffff8bd29148   232  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 28)
0xffff8bd290a0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd290a8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd290bc  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd290d0  embedded object  (0x26c04519 <the hole>)
0xffff8bd290d8  embedded object  (0x26c04519 <the hole>)
0xffff8bd290e0  embedded object  (0x26c04519 <the hole>)
0xffff8bd290e8  embedded object  (0x26c04519 <the hole>)
0xffff8bd2911c  code target (STUB)  (0xffff8bd06820)
0xffff8bd29140  code target (STUB)  (0xffff8bd06260)
0xffff8bd2914c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd29160  constant pool (size 88)
0xffff8bd291d8  runtime entry
0xffff8bd291e4  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 509)
0xffff8bd29280     0  movz x16, #0xa00000000
0xffff8bd29284     4  sub csp, jssp, #0x10 (16)
0xffff8bd29288     8  stp fp, lr, [jssp, #-16]!
0xffff8bd2928c    12  mov fp, jssp
0xffff8bd29290    16  sub csp, jssp, #0x8 (8)
0xffff8bd29294    20  sub jssp, jssp, #0x8 (8)
0xffff8bd29298    24  stur x16, [fp, #-8]
0xffff8bd2929c    28  ldr x2, [fp]
0xffff8bd292a0    32  ldur x3, [x2, #-8]
0xffff8bd292a4    36  movz x16, #0xe00000000
0xffff8bd292a8    40  cmp x3, x16
0xffff8bd292ac    44  csel x3, fp, x2, ne
0xffff8bd292b0    48  ldr x2, [x3, #16]
0xffff8bd292b4    52  tbnz w2, #0, #+0xd0 (addr 0xffff8bd29384)
0xffff8bd292b8    56  asr x4, x2, #32
0xffff8bd292bc    60  movz w16, #0x257f
0xffff8bd292c0    64  cmp w4, w16, lsl #3
0xffff8bd292c4    68  b.hs #+0x16c (addr 0xffff8bd29430)
0xffff8bd292c8    72  cbz w4, #+0xc (addr 0xffff8bd292d4)
0xffff8bd292cc    76  mov x2, x4
0xffff8bd292d0    80  b #+0xc (addr 0xffff8bd292dc)
0xffff8bd292d4    84  movz x2, #0x4
0xffff8bd292d8    88  movz x4, #0x0
0xffff8bd292dc    92  lsl x3, x2, #32
0xffff8bd292e0    96  lsl x4, x4, #32
0xffff8bd292e4   100  lsl w5, w2, #3
0xffff8bd292e8   104  add w5, w5, #0x10 (16)
0xffff8bd292ec   108  cmp w5, #0x96000 (614400)
0xffff8bd292f0   112  b.hs #+0x148 (addr 0xffff8bd29438)
0xffff8bd292f4   116  add w0, w5, #0x20 (32)
0xffff8bd292f8   120  sxtw x0, w0
0xffff8bd292fc   124  movz x5, #0xe2c0
0xffff8bd29300   128  movk x5, #0x2cb8, lsl #16
0xffff8bd29304   132  ldp x7, x16, [x5]
0xffff8bd29308   136  adds x6, x7, x0
0xffff8bd2930c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd29310   144  b.hi #+0x9c (addr 0xffff8bd293ac)
0xffff8bd29314   148  str x6, [x5]
0xffff8bd29318   152  orr x7, x7, #0x1
0xffff8bd2931c   156  movz w0, #0x0
0xffff8bd29320   160  stur x0, [x7, #31]
0xffff8bd29324   164  ldur x0, [x1, #23]
0xffff8bd29328   168  stur x0, [x7, #-1]
0xffff8bd2932c   172  ldr x0, pc+204 (addr 0x0000ffff8bd293f8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd29330   176  stur x0, [x7, #7]
0xffff8bd29334   180  ldr x0, pc+204 (addr 0x0000ffff8bd29400)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd29338   184  stur x0, [x7, #15]
0xffff8bd2933c   188  stur x4, [x7, #23]
0xffff8bd29340   192  add x0, x7, #0x20 (32)
0xffff8bd29344   196  ldr x1, pc+196 (addr 0x0000ffff8bd29408)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd29348   200  stur x1, [x0, #-1]
0xffff8bd2934c   204  stur x3, [x0, #7]
0xffff8bd29350   208  stur x0, [x7, #15]
0xffff8bd29354   212  cmp w2, #0x0 (0)
0xffff8bd29358   216  b.le #+0x18 (addr 0xffff8bd29370)
0xffff8bd2935c   220  sub w2, w2, #0x1 (1)
0xffff8bd29360   224  ldr x1, pc+176 (addr 0x0000ffff8bd29410)    ;; object: 0x26c04519 <the hole>
0xffff8bd29364   228  add x3, x0, #0xf (15)
0xffff8bd29368   232  str x1, [x3, w2, sxtw #3]
0xffff8bd2936c   236  b #-0x18 (addr 0xffff8bd29354)
0xffff8bd29370   240  mov x0, x7
0xffff8bd29374   244  mov jssp, fp
0xffff8bd29378   248  ldp fp, lr, [jssp], #16
0xffff8bd2937c   252  add jssp, jssp, #0x10 (16)
0xffff8bd29380   256  ret
0xffff8bd29384   260  ldur x16, [x2, #-1]
0xffff8bd29388   264  ldr x17, [x26, #120]
0xffff8bd2938c   268  cmp x16, x17
0xffff8bd29390   272  b.ne #+0xb0 (addr 0xffff8bd29440)
0xffff8bd29394   276  ldur d29, [x2, #7]
0xffff8bd29398   280  fcvtzs w4, d29
0xffff8bd2939c   284  scvtf d0, w4
0xffff8bd293a0   288  fcmp d29, d0
0xffff8bd293a4   292  b.ne #+0x9c (addr 0xffff8bd29440)
0xffff8bd293a8   296  b #-0xec (addr 0xffff8bd292bc)
0xffff8bd293ac   300  movz x7, #0x0
0xffff8bd293b0   304  mov x16, lr
0xffff8bd293b4   308  ldr x17, pc+100 (addr 0x0000ffff8bd29418)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd293b8   312  blr x17
0xffff8bd293bc   316  lsl x0, x0, #32
0xffff8bd293c0   320  movz x10, #0x0
0xffff8bd293c4   324  sub csp, jssp, #0x10 (16)
0xffff8bd293c8   328  stp x10, x0, [jssp, #-16]!
0xffff8bd293cc   332  movz x0, #0x2
0xffff8bd293d0   336  movz x1, #0x5b88
0xffff8bd293d4   340  movk x1, #0xe2, lsl #16
0xffff8bd293d8   344  ldr x16, pc+72 (addr 0x0000ffff8bd29420)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd293dc   348  blr x16
0xffff8bd293e0   352  str x0, [jssp, #56]
0xffff8bd293e4   356  ldr x16, pc+68 (addr 0x0000ffff8bd29428)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd293e8   360  blr x16
0xffff8bd293ec   364  b #-0xd0 (addr 0xffff8bd2931c)
0xffff8bd293f0   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd293f4   372  d63f03e0       constant
0xffff8bd293f8   376  26c04201       constant
0xffff8bd293fc   380  00000000       constant
0xffff8bd29400   384  26c04201       constant
0xffff8bd29404   388  00000000       constant
0xffff8bd29408   392  5f504259       constant
0xffff8bd2940c   396  00000000       constant
0xffff8bd29410   400  26c04519       constant
0xffff8bd29414   404  00000000       constant
0xffff8bd29418   408  8bd06820       constant
0xffff8bd2941c   412  0000ffff       constant
0xffff8bd29420   416  8bd06260       constant
0xffff8bd29424   420  0000ffff       constant
0xffff8bd29428   424  8bd068e0       constant
0xffff8bd2942c   428  0000ffff       constant
0xffff8bd29430   432  movz x16, #0x0
0xffff8bd29434   436  bl #+0x14 (addr 0xffff8bd29448)
0xffff8bd29438   440  movz x16, #0x8
0xffff8bd2943c   444  bl #+0xc (addr 0xffff8bd29448)
0xffff8bd29440   448  movz x16, #0x10
0xffff8bd29444   452  bl #+0x4 (addr 0xffff8bd29448)
0xffff8bd29448   456  ldr x17, pc+24 (addr 0x0000ffff8bd29460)    ;; lazy deoptimization bailout 0
0xffff8bd2944c   460  add x17, x17, x16
0xffff8bd29450   464  br x17
0xffff8bd29454   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd29458   472  d63f03e0       constant
0xffff8bd2945c   476  d503201f       constant
0xffff8bd29460   480  8bb06000       constant
0xffff8bd29464   484  0000ffff       constant


Safepoints (size = 21)
0xffff8bd293e0   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd2932c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd29334  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd29344  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd29360  embedded object  (0x26c04519 <the hole>)
0xffff8bd293b4  code target (STUB)  (0xffff8bd06820)
0xffff8bd293d8  code target (STUB)  (0xffff8bd06260)
0xffff8bd293e4  code target (STUB)  (0xffff8bd068e0)
0xffff8bd293f0  constant pool (size 64)
0xffff8bd29448  runtime entry
0xffff8bd29454  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArraySingleArgumentConstructorStub
name = InternalArraySingleArgumentConstructorStub
compiler = crankshaft
Instructions (size = 509)
0xffff8bd29280     0  movz x16, #0xa00000000
0xffff8bd29284     4  sub csp, jssp, #0x10 (16)
0xffff8bd29288     8  stp fp, lr, [jssp, #-16]!
0xffff8bd2928c    12  mov fp, jssp
0xffff8bd29290    16  sub csp, jssp, #0x8 (8)
0xffff8bd29294    20  sub jssp, jssp, #0x8 (8)
0xffff8bd29298    24  stur x16, [fp, #-8]
0xffff8bd2929c    28  ldr x2, [fp]
0xffff8bd292a0    32  ldur x3, [x2, #-8]
0xffff8bd292a4    36  movz x16, #0xe00000000
0xffff8bd292a8    40  cmp x3, x16
0xffff8bd292ac    44  csel x3, fp, x2, ne
0xffff8bd292b0    48  ldr x2, [x3, #16]
0xffff8bd292b4    52  tbnz w2, #0, #+0xd0 (addr 0xffff8bd29384)
0xffff8bd292b8    56  asr x4, x2, #32
0xffff8bd292bc    60  movz w16, #0x257f
0xffff8bd292c0    64  cmp w4, w16, lsl #3
0xffff8bd292c4    68  b.hs #+0x16c (addr 0xffff8bd29430)
0xffff8bd292c8    72  cbz w4, #+0xc (addr 0xffff8bd292d4)
0xffff8bd292cc    76  mov x2, x4
0xffff8bd292d0    80  b #+0xc (addr 0xffff8bd292dc)
0xffff8bd292d4    84  movz x2, #0x4
0xffff8bd292d8    88  movz x4, #0x0
0xffff8bd292dc    92  lsl x3, x2, #32
0xffff8bd292e0    96  lsl x4, x4, #32
0xffff8bd292e4   100  lsl w5, w2, #3
0xffff8bd292e8   104  add w5, w5, #0x10 (16)
0xffff8bd292ec   108  cmp w5, #0x96000 (614400)
0xffff8bd292f0   112  b.hs #+0x148 (addr 0xffff8bd29438)
0xffff8bd292f4   116  add w0, w5, #0x20 (32)
0xffff8bd292f8   120  sxtw x0, w0
0xffff8bd292fc   124  movz x5, #0xe2c0
0xffff8bd29300   128  movk x5, #0x2cb8, lsl #16
0xffff8bd29304   132  ldp x7, x16, [x5]
0xffff8bd29308   136  adds x6, x7, x0
0xffff8bd2930c   140  ccmp x6, x16, #nzCv, lo
0xffff8bd29310   144  b.hi #+0x9c (addr 0xffff8bd293ac)
0xffff8bd29314   148  str x6, [x5]
0xffff8bd29318   152  orr x7, x7, #0x1
0xffff8bd2931c   156  movz w0, #0x0
0xffff8bd29320   160  stur x0, [x7, #31]
0xffff8bd29324   164  ldur x0, [x1, #23]
0xffff8bd29328   168  stur x0, [x7, #-1]
0xffff8bd2932c   172  ldr x0, pc+204 (addr 0x0000ffff8bd293f8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd29330   176  stur x0, [x7, #7]
0xffff8bd29334   180  ldr x0, pc+204 (addr 0x0000ffff8bd29400)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd29338   184  stur x0, [x7, #15]
0xffff8bd2933c   188  stur x4, [x7, #23]
0xffff8bd29340   192  add x0, x7, #0x20 (32)
0xffff8bd29344   196  ldr x1, pc+196 (addr 0x0000ffff8bd29408)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd29348   200  stur x1, [x0, #-1]
0xffff8bd2934c   204  stur x3, [x0, #7]
0xffff8bd29350   208  stur x0, [x7, #15]
0xffff8bd29354   212  cmp w2, #0x0 (0)
0xffff8bd29358   216  b.le #+0x18 (addr 0xffff8bd29370)
0xffff8bd2935c   220  sub w2, w2, #0x1 (1)
0xffff8bd29360   224  ldr x1, pc+176 (addr 0x0000ffff8bd29410)    ;; object: 0x26c04519 <the hole>
0xffff8bd29364   228  add x3, x0, #0xf (15)
0xffff8bd29368   232  str x1, [x3, w2, sxtw #3]
0xffff8bd2936c   236  b #-0x18 (addr 0xffff8bd29354)
0xffff8bd29370   240  mov x0, x7
0xffff8bd29374   244  mov jssp, fp
0xffff8bd29378   248  ldp fp, lr, [jssp], #16
0xffff8bd2937c   252  add jssp, jssp, #0x10 (16)
0xffff8bd29380   256  ret
0xffff8bd29384   260  ldur x16, [x2, #-1]
0xffff8bd29388   264  ldr x17, [x26, #120]
0xffff8bd2938c   268  cmp x16, x17
0xffff8bd29390   272  b.ne #+0xb0 (addr 0xffff8bd29440)
0xffff8bd29394   276  ldur d29, [x2, #7]
0xffff8bd29398   280  fcvtzs w4, d29
0xffff8bd2939c   284  scvtf d0, w4
0xffff8bd293a0   288  fcmp d29, d0
0xffff8bd293a4   292  b.ne #+0x9c (addr 0xffff8bd29440)
0xffff8bd293a8   296  b #-0xec (addr 0xffff8bd292bc)
0xffff8bd293ac   300  movz x7, #0x0
0xffff8bd293b0   304  mov x16, lr
0xffff8bd293b4   308  ldr x17, pc+100 (addr 0x0000ffff8bd29418)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd293b8   312  blr x17
0xffff8bd293bc   316  lsl x0, x0, #32
0xffff8bd293c0   320  movz x10, #0x0
0xffff8bd293c4   324  sub csp, jssp, #0x10 (16)
0xffff8bd293c8   328  stp x10, x0, [jssp, #-16]!
0xffff8bd293cc   332  movz x0, #0x2
0xffff8bd293d0   336  movz x1, #0x5b88
0xffff8bd293d4   340  movk x1, #0xe2, lsl #16
0xffff8bd293d8   344  ldr x16, pc+72 (addr 0x0000ffff8bd29420)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd293dc   348  blr x16
0xffff8bd293e0   352  str x0, [jssp, #56]
0xffff8bd293e4   356  ldr x16, pc+68 (addr 0x0000ffff8bd29428)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd293e8   360  blr x16
0xffff8bd293ec   364  b #-0xd0 (addr 0xffff8bd2931c)
0xffff8bd293f0   368  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd293f4   372  d63f03e0       constant
0xffff8bd293f8   376  26c04201       constant
0xffff8bd293fc   380  00000000       constant
0xffff8bd29400   384  26c04201       constant
0xffff8bd29404   388  00000000       constant
0xffff8bd29408   392  5f504259       constant
0xffff8bd2940c   396  00000000       constant
0xffff8bd29410   400  26c04519       constant
0xffff8bd29414   404  00000000       constant
0xffff8bd29418   408  8bd06820       constant
0xffff8bd2941c   412  0000ffff       constant
0xffff8bd29420   416  8bd06260       constant
0xffff8bd29424   420  0000ffff       constant
0xffff8bd29428   424  8bd068e0       constant
0xffff8bd2942c   428  0000ffff       constant
0xffff8bd29430   432  movz x16, #0x0
0xffff8bd29434   436  bl #+0x14 (addr 0xffff8bd29448)
0xffff8bd29438   440  movz x16, #0x8
0xffff8bd2943c   444  bl #+0xc (addr 0xffff8bd29448)
0xffff8bd29440   448  movz x16, #0x10
0xffff8bd29444   452  bl #+0x4 (addr 0xffff8bd29448)
0xffff8bd29448   456  ldr x17, pc+24 (addr 0x0000ffff8bd29460)    ;; lazy deoptimization bailout 0
0xffff8bd2944c   460  add x17, x17, x16
0xffff8bd29450   464  br x17
0xffff8bd29454   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd29458   472  d63f03e0       constant
0xffff8bd2945c   476  d503201f       constant
0xffff8bd29460   480  8bb06000       constant
0xffff8bd29464   484  0000ffff       constant


Safepoints (size = 21)
0xffff8bd293e0   352  000 | x1 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd2932c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd29334  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd29344  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd29360  embedded object  (0x26c04519 <the hole>)
0xffff8bd293b4  code target (STUB)  (0xffff8bd06820)
0xffff8bd293d8  code target (STUB)  (0xffff8bd06260)
0xffff8bd293e4  code target (STUB)  (0xffff8bd068e0)
0xffff8bd293f0  constant pool (size 64)
0xffff8bd29448  runtime entry
0xffff8bd29454  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = InternalArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 437)
0xffff8bd294e0     0  movz x16, #0xa00000000
0xffff8bd294e4     4  sub csp, jssp, #0x10 (16)
0xffff8bd294e8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd294ec    12  mov fp, jssp
0xffff8bd294f0    16  sub csp, jssp, #0x8 (8)
0xffff8bd294f4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd294f8    24  stur x16, [fp, #-8]
0xffff8bd294fc    28  movz w16, #0x257f
0xffff8bd29500    32  cmp w0, w16, lsl #3
0xffff8bd29504    36  b.hs #+0x14c (addr 0xffff8bd29650)
0xffff8bd29508    40  lsl x2, x0, #32
0xffff8bd2950c    44  lsl w3, w0, #3
0xffff8bd29510    48  add w3, w3, #0x10 (16)
0xffff8bd29514    52  cmp w3, #0x96000 (614400)
0xffff8bd29518    56  b.hs #+0x140 (addr 0xffff8bd29658)
0xffff8bd2951c    60  add w3, w3, #0x20 (32)
0xffff8bd29520    64  sxtw x3, w3
0xffff8bd29524    68  movz x4, #0xe2c0
0xffff8bd29528    72  movk x4, #0x2cb8, lsl #16
0xffff8bd2952c    76  ldp x6, x16, [x4]
0xffff8bd29530    80  adds x5, x6, x3
0xffff8bd29534    84  ccmp x5, x16, #nzCv, lo
0xffff8bd29538    88  b.hi #+0x9c (addr 0xffff8bd295d4)
0xffff8bd2953c    92  str x5, [x4]
0xffff8bd29540    96  orr x6, x6, #0x1
0xffff8bd29544   100  movz w3, #0x0
0xffff8bd29548   104  stur x3, [x6, #31]
0xffff8bd2954c   108  ldur x1, [x1, #23]
0xffff8bd29550   112  stur x1, [x6, #-1]
0xffff8bd29554   116  ldr x1, pc+204 (addr 0x0000ffff8bd29620)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd29558   120  stur x1, [x6, #7]
0xffff8bd2955c   124  ldr x1, pc+204 (addr 0x0000ffff8bd29628)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd29560   128  stur x1, [x6, #15]
0xffff8bd29564   132  stur x2, [x6, #23]
0xffff8bd29568   136  add x1, x6, #0x20 (32)
0xffff8bd2956c   140  ldr x3, pc+196 (addr 0x0000ffff8bd29630)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd29570   144  stur x3, [x1, #-1]
0xffff8bd29574   148  stur x2, [x1, #7]
0xffff8bd29578   152  stur x1, [x6, #15]
0xffff8bd2957c   156  ldr x2, [fp]
0xffff8bd29580   160  ldur x3, [x2, #-8]
0xffff8bd29584   164  movz x16, #0xe00000000
0xffff8bd29588   168  cmp x3, x16
0xffff8bd2958c   172  csel x3, fp, x2, ne
0xffff8bd29590   176  movz x2, #0x0
0xffff8bd29594   180  cmp w0, w2
0xffff8bd29598   184  b.le #+0x20 (addr 0xffff8bd295b8)
0xffff8bd2959c   188  sub w4, w0, w2
0xffff8bd295a0   192  add w4, w4, #0x1 (1)
0xffff8bd295a4   196  ldr x4, [x3, w4, uxtw #3]
0xffff8bd295a8   200  add x5, x1, #0xf (15)
0xffff8bd295ac   204  str x4, [x5, w2, sxtw #3]
0xffff8bd295b0   208  add w2, w2, #0x1 (1)
0xffff8bd295b4   212  b #-0x20 (addr 0xffff8bd29594)
0xffff8bd295b8   216  add w0, w0, #0x1 (1)
0xffff8bd295bc   220  lsl x1, x0, #32
0xffff8bd295c0   224  mov x0, x6
0xffff8bd295c4   228  mov jssp, fp
0xffff8bd295c8   232  ldp fp, lr, [jssp], #16
0xffff8bd295cc   236  add jssp, jssp, x1, lsr #29
0xffff8bd295d0   240  ret
0xffff8bd295d4   244  movz x6, #0x0
0xffff8bd295d8   248  mov x16, lr
0xffff8bd295dc   252  ldr x17, pc+92 (addr 0x0000ffff8bd29638)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd295e0   256  blr x17
0xffff8bd295e4   260  lsl x0, x3, #32
0xffff8bd295e8   264  movz x10, #0x0
0xffff8bd295ec   268  sub csp, jssp, #0x10 (16)
0xffff8bd295f0   272  stp x10, x0, [jssp, #-16]!
0xffff8bd295f4   276  movz x0, #0x2
0xffff8bd295f8   280  movz x1, #0x5b88
0xffff8bd295fc   284  movk x1, #0xe2, lsl #16
0xffff8bd29600   288  ldr x16, pc+64 (addr 0x0000ffff8bd29640)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd29604   292  blr x16
0xffff8bd29608   296  str x0, [jssp, #48]
0xffff8bd2960c   300  ldr x16, pc+60 (addr 0x0000ffff8bd29648)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd29610   304  blr x16
0xffff8bd29614   308  b #-0xd0 (addr 0xffff8bd29544)
0xffff8bd29618   312  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd2961c   316  d63f03e0       constant
0xffff8bd29620   320  26c04201       constant
0xffff8bd29624   324  00000000       constant
0xffff8bd29628   328  26c04201       constant
0xffff8bd2962c   332  00000000       constant
0xffff8bd29630   336  5f504259       constant
0xffff8bd29634   340  00000000       constant
0xffff8bd29638   344  8bd06820       constant
0xffff8bd2963c   348  0000ffff       constant
0xffff8bd29640   352  8bd06260       constant
0xffff8bd29644   356  0000ffff       constant
0xffff8bd29648   360  8bd068e0       constant
0xffff8bd2964c   364  0000ffff       constant
0xffff8bd29650   368  movz x16, #0x0
0xffff8bd29654   372  bl #+0xc (addr 0xffff8bd29660)
0xffff8bd29658   376  movz x16, #0x8
0xffff8bd2965c   380  bl #+0x4 (addr 0xffff8bd29660)
0xffff8bd29660   384  ldr x17, pc+24 (addr 0x0000ffff8bd29678)    ;; lazy deoptimization bailout 0
0xffff8bd29664   388  add x17, x17, x16
0xffff8bd29668   392  br x17
0xffff8bd2966c   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd29670   400  d63f03e0       constant
0xffff8bd29674   404  d503201f       constant
0xffff8bd29678   408  8bb06000       constant
0xffff8bd2967c   412  0000ffff       constant


Safepoints (size = 21)
0xffff8bd29608   296  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd29554  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd2955c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd2956c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd295dc  code target (STUB)  (0xffff8bd06820)
0xffff8bd29600  code target (STUB)  (0xffff8bd06260)
0xffff8bd2960c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd29618  constant pool (size 56)
0xffff8bd29660  runtime entry
0xffff8bd2966c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = InternalArrayNArgumentsConstructorStub
name = InternalArrayNArgumentsConstructorStub
compiler = crankshaft
Instructions (size = 437)
0xffff8bd294e0     0  movz x16, #0xa00000000
0xffff8bd294e4     4  sub csp, jssp, #0x10 (16)
0xffff8bd294e8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd294ec    12  mov fp, jssp
0xffff8bd294f0    16  sub csp, jssp, #0x8 (8)
0xffff8bd294f4    20  sub jssp, jssp, #0x8 (8)
0xffff8bd294f8    24  stur x16, [fp, #-8]
0xffff8bd294fc    28  movz w16, #0x257f
0xffff8bd29500    32  cmp w0, w16, lsl #3
0xffff8bd29504    36  b.hs #+0x14c (addr 0xffff8bd29650)
0xffff8bd29508    40  lsl x2, x0, #32
0xffff8bd2950c    44  lsl w3, w0, #3
0xffff8bd29510    48  add w3, w3, #0x10 (16)
0xffff8bd29514    52  cmp w3, #0x96000 (614400)
0xffff8bd29518    56  b.hs #+0x140 (addr 0xffff8bd29658)
0xffff8bd2951c    60  add w3, w3, #0x20 (32)
0xffff8bd29520    64  sxtw x3, w3
0xffff8bd29524    68  movz x4, #0xe2c0
0xffff8bd29528    72  movk x4, #0x2cb8, lsl #16
0xffff8bd2952c    76  ldp x6, x16, [x4]
0xffff8bd29530    80  adds x5, x6, x3
0xffff8bd29534    84  ccmp x5, x16, #nzCv, lo
0xffff8bd29538    88  b.hi #+0x9c (addr 0xffff8bd295d4)
0xffff8bd2953c    92  str x5, [x4]
0xffff8bd29540    96  orr x6, x6, #0x1
0xffff8bd29544   100  movz w3, #0x0
0xffff8bd29548   104  stur x3, [x6, #31]
0xffff8bd2954c   108  ldur x1, [x1, #23]
0xffff8bd29550   112  stur x1, [x6, #-1]
0xffff8bd29554   116  ldr x1, pc+204 (addr 0x0000ffff8bd29620)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd29558   120  stur x1, [x6, #7]
0xffff8bd2955c   124  ldr x1, pc+204 (addr 0x0000ffff8bd29628)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd29560   128  stur x1, [x6, #15]
0xffff8bd29564   132  stur x2, [x6, #23]
0xffff8bd29568   136  add x1, x6, #0x20 (32)
0xffff8bd2956c   140  ldr x3, pc+196 (addr 0x0000ffff8bd29630)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd29570   144  stur x3, [x1, #-1]
0xffff8bd29574   148  stur x2, [x1, #7]
0xffff8bd29578   152  stur x1, [x6, #15]
0xffff8bd2957c   156  ldr x2, [fp]
0xffff8bd29580   160  ldur x3, [x2, #-8]
0xffff8bd29584   164  movz x16, #0xe00000000
0xffff8bd29588   168  cmp x3, x16
0xffff8bd2958c   172  csel x3, fp, x2, ne
0xffff8bd29590   176  movz x2, #0x0
0xffff8bd29594   180  cmp w0, w2
0xffff8bd29598   184  b.le #+0x20 (addr 0xffff8bd295b8)
0xffff8bd2959c   188  sub w4, w0, w2
0xffff8bd295a0   192  add w4, w4, #0x1 (1)
0xffff8bd295a4   196  ldr x4, [x3, w4, uxtw #3]
0xffff8bd295a8   200  add x5, x1, #0xf (15)
0xffff8bd295ac   204  str x4, [x5, w2, sxtw #3]
0xffff8bd295b0   208  add w2, w2, #0x1 (1)
0xffff8bd295b4   212  b #-0x20 (addr 0xffff8bd29594)
0xffff8bd295b8   216  add w0, w0, #0x1 (1)
0xffff8bd295bc   220  lsl x1, x0, #32
0xffff8bd295c0   224  mov x0, x6
0xffff8bd295c4   228  mov jssp, fp
0xffff8bd295c8   232  ldp fp, lr, [jssp], #16
0xffff8bd295cc   236  add jssp, jssp, x1, lsr #29
0xffff8bd295d0   240  ret
0xffff8bd295d4   244  movz x6, #0x0
0xffff8bd295d8   248  mov x16, lr
0xffff8bd295dc   252  ldr x17, pc+92 (addr 0x0000ffff8bd29638)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd295e0   256  blr x17
0xffff8bd295e4   260  lsl x0, x3, #32
0xffff8bd295e8   264  movz x10, #0x0
0xffff8bd295ec   268  sub csp, jssp, #0x10 (16)
0xffff8bd295f0   272  stp x10, x0, [jssp, #-16]!
0xffff8bd295f4   276  movz x0, #0x2
0xffff8bd295f8   280  movz x1, #0x5b88
0xffff8bd295fc   284  movk x1, #0xe2, lsl #16
0xffff8bd29600   288  ldr x16, pc+64 (addr 0x0000ffff8bd29640)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd29604   292  blr x16
0xffff8bd29608   296  str x0, [jssp, #48]
0xffff8bd2960c   300  ldr x16, pc+60 (addr 0x0000ffff8bd29648)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd29610   304  blr x16
0xffff8bd29614   308  b #-0xd0 (addr 0xffff8bd29544)
0xffff8bd29618   312  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd2961c   316  d63f03e0       constant
0xffff8bd29620   320  26c04201       constant
0xffff8bd29624   324  00000000       constant
0xffff8bd29628   328  26c04201       constant
0xffff8bd2962c   332  00000000       constant
0xffff8bd29630   336  5f504259       constant
0xffff8bd29634   340  00000000       constant
0xffff8bd29638   344  8bd06820       constant
0xffff8bd2963c   348  0000ffff       constant
0xffff8bd29640   352  8bd06260       constant
0xffff8bd29644   356  0000ffff       constant
0xffff8bd29648   360  8bd068e0       constant
0xffff8bd2964c   364  0000ffff       constant
0xffff8bd29650   368  movz x16, #0x0
0xffff8bd29654   372  bl #+0xc (addr 0xffff8bd29660)
0xffff8bd29658   376  movz x16, #0x8
0xffff8bd2965c   380  bl #+0x4 (addr 0xffff8bd29660)
0xffff8bd29660   384  ldr x17, pc+24 (addr 0x0000ffff8bd29678)    ;; lazy deoptimization bailout 0
0xffff8bd29664   388  add x17, x17, x16
0xffff8bd29668   392  br x17
0xffff8bd2966c   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd29670   400  d63f03e0       constant
0xffff8bd29674   404  d503201f       constant
0xffff8bd29678   408  8bb06000       constant
0xffff8bd2967c   412  0000ffff       constant


Safepoints (size = 21)
0xffff8bd29608   296  000 | x1 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd29554  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd2955c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd2956c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd295dc  code target (STUB)  (0xffff8bd06820)
0xffff8bd29600  code target (STUB)  (0xffff8bd06260)
0xffff8bd2960c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd29618  constant pool (size 56)
0xffff8bd29660  runtime entry
0xffff8bd2966c  constant pool (size 20)


kind = STUB
major_key = InternalArrayConstructorStub
name = InternalArrayConstructorStub
compiler = unknown
Instructions (size = 176)
0xffff8bd29700     0  ldur x10, [x1, #23]
0xffff8bd29704     4  ldrb w3, [x10, #13]
0xffff8bd29708     8  ubfx w3, w3, #3, #5
0xffff8bd2970c    12  cmp w3, #0x2 (2)
0xffff8bd29710    16  b.eq #+0x28 (addr 0xffff8bd29738)
0xffff8bd29714    20  cbz x0, #+0x14 (addr 0xffff8bd29728)
0xffff8bd29718    24  cmp x0, #0x1 (1)
0xffff8bd2971c    28  b.ne #+0x14 (addr 0xffff8bd29730)
0xffff8bd29720    32  ldr x16, pc+88 (addr 0x0000ffff8bd29778)    ;; code: STUB, InternalArraySingleArgumentConstructorStub, minor: 3
0xffff8bd29724    36  br x16
0xffff8bd29728    40  ldr x16, pc+88 (addr 0x0000ffff8bd29780)    ;; code: STUB, InternalArrayNoArgumentConstructorStub, minor: 3
0xffff8bd2972c    44  br x16
0xffff8bd29730    48  ldr x16, pc+88 (addr 0x0000ffff8bd29788)    ;; code: STUB, InternalArrayNArgumentsConstructorStub, minor: 3
0xffff8bd29734    52  br x16
0xffff8bd29738    56  cbz x0, #+0x24 (addr 0xffff8bd2975c)
0xffff8bd2973c    60  cmp x0, #0x1 (1)
0xffff8bd29740    64  b.ne #+0x24 (addr 0xffff8bd29764)
0xffff8bd29744    68  ldr x10, [jssp]
0xffff8bd29748    72  cbz x10, #+0xc (addr 0xffff8bd29754)
0xffff8bd2974c    76  ldr x16, pc+68 (addr 0x0000ffff8bd29790)    ;; code: STUB, InternalArraySingleArgumentConstructorStub, minor: 3
0xffff8bd29750    80  br x16
0xffff8bd29754    84  ldr x16, pc+68 (addr 0x0000ffff8bd29798)    ;; code: STUB, InternalArraySingleArgumentConstructorStub, minor: 2
0xffff8bd29758    88  br x16
0xffff8bd2975c    92  ldr x16, pc+68 (addr 0x0000ffff8bd297a0)    ;; code: STUB, InternalArrayNoArgumentConstructorStub, minor: 2
0xffff8bd29760    96  br x16
0xffff8bd29764   100  ldr x16, pc+68 (addr 0x0000ffff8bd297a8)    ;; code: STUB, InternalArrayNArgumentsConstructorStub, minor: 2
0xffff8bd29768   104  br x16
0xffff8bd2976c   108  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd29770   112  d63f03e0       constant
0xffff8bd29774   116  d503201f       constant
0xffff8bd29778   120  8bd29280       constant
0xffff8bd2977c   124  0000ffff       constant
0xffff8bd29780   128  8bd29060       constant
0xffff8bd29784   132  0000ffff       constant
0xffff8bd29788   136  8bd294e0       constant
0xffff8bd2978c   140  0000ffff       constant
0xffff8bd29790   144  8bd29280       constant
0xffff8bd29794   148  0000ffff       constant
0xffff8bd29798   152  8bd28be0       constant
0xffff8bd2979c   156  0000ffff       constant
0xffff8bd297a0   160  8bd289c0       constant
0xffff8bd297a4   164  0000ffff       constant
0xffff8bd297a8   168  8bd28e40       constant
0xffff8bd297ac   172  0000ffff       constant


RelocInfo (size = 13)
0xffff8bd29720  code target (STUB)  (0xffff8bd29280)
0xffff8bd29728  code target (STUB)  (0xffff8bd29060)
0xffff8bd29730  code target (STUB)  (0xffff8bd294e0)
0xffff8bd2974c  code target (STUB)  (0xffff8bd29280)
0xffff8bd29754  code target (STUB)  (0xffff8bd28be0)
0xffff8bd2975c  code target (STUB)  (0xffff8bd289c0)
0xffff8bd29764  code target (STUB)  (0xffff8bd28e40)
0xffff8bd2976c  constant pool (size 68)


kind = STUB
major_key = ArrayConstructorStub
name = ArrayConstructorStub_Any
compiler = unknown
Instructions (size = 768)
0xffff8bd298c0     0  ldur cp, [x1, #39]
0xffff8bd298c4     4  cmp x3, x1
0xffff8bd298c8     8  b.ne #+0x1e0 (addr 0xffff8bd29aa8)
0xffff8bd298cc    12  ldr x16, [x26, #40]
0xffff8bd298d0    16  cmp x2, x16
0xffff8bd298d4    20  b.eq #+0x1a0 (addr 0xffff8bd29a74)
0xffff8bd298d8    24  ldursw x3, [x2, #11]
0xffff8bd298dc    28  and x3, x3, #0x7fff
0xffff8bd298e0    32  cbz x0, #+0xa4 (addr 0xffff8bd29984)
0xffff8bd298e4    36  cmp x0, #0x1 (1)
0xffff8bd298e8    40  b.ne #+0x114 (addr 0xffff8bd299fc)
0xffff8bd298ec    44  tbnz w3, #0, #+0x20 (addr 0xffff8bd2990c)
0xffff8bd298f0    48  ldr x10, [jssp]
0xffff8bd298f4    52  cbz x10, #+0x18 (addr 0xffff8bd2990c)
0xffff8bd298f8    56  orr x3, x3, #0x1
0xffff8bd298fc    60  ldur x11, [x2, #7]
0xffff8bd29900    64  movz x16, #0x100000000
0xffff8bd29904    68  add x11, x11, x16
0xffff8bd29908    72  stur x11, [x2, #7]
0xffff8bd2990c    76  cbnz x3, #+0xc (addr 0xffff8bd29918)
0xffff8bd29910    80  ldr x16, pc+448 (addr 0x0000ffff8bd29ad0)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 0
0xffff8bd29914    84  br x16
0xffff8bd29918    88  cmp x3, #0x1 (1)
0xffff8bd2991c    92  b.ne #+0xc (addr 0xffff8bd29928)
0xffff8bd29920    96  ldr x16, pc+440 (addr 0x0000ffff8bd29ad8)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 1
0xffff8bd29924   100  br x16
0xffff8bd29928   104  cmp x3, #0x4 (4)
0xffff8bd2992c   108  b.ne #+0xc (addr 0xffff8bd29938)
0xffff8bd29930   112  ldr x16, pc+432 (addr 0x0000ffff8bd29ae0)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 4
0xffff8bd29934   116  br x16
0xffff8bd29938   120  cmp x3, #0x5 (5)
0xffff8bd2993c   124  b.ne #+0xc (addr 0xffff8bd29948)
0xffff8bd29940   128  ldr x16, pc+424 (addr 0x0000ffff8bd29ae8)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 5
0xffff8bd29944   132  br x16
0xffff8bd29948   136  cmp x3, #0x2 (2)
0xffff8bd2994c   140  b.ne #+0xc (addr 0xffff8bd29958)
0xffff8bd29950   144  ldr x16, pc+416 (addr 0x0000ffff8bd29af0)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 2
0xffff8bd29954   148  br x16
0xffff8bd29958   152  cmp x3, #0x3 (3)
0xffff8bd2995c   156  b.ne #+0xc (addr 0xffff8bd29968)
0xffff8bd29960   160  ldr x16, pc+408 (addr 0x0000ffff8bd29af8)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 3
0xffff8bd29964   164  br x16
0xffff8bd29968   168  movz x0, #0x9f00000000
0xffff8bd2996c   172  sub csp, jssp, #0x8 (8)
0xffff8bd29970   176  str x0, [jssp, #-8]!
0xffff8bd29974   180  movz x0, #0x1
0xffff8bd29978   184  ldr x1, pc+392 (addr 0x0000ffff8bd29b00)    ;; external reference (Runtime::Abort)
0xffff8bd2997c   188  ldr x16, pc+396 (addr 0x0000ffff8bd29b08)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd29980   192  blr x16
0xffff8bd29984   196  cbnz x3, #+0xc (addr 0xffff8bd29990)
0xffff8bd29988   200  ldr x16, pc+392 (addr 0x0000ffff8bd29b10)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 0
0xffff8bd2998c   204  br x16
0xffff8bd29990   208  cmp x3, #0x1 (1)
0xffff8bd29994   212  b.ne #+0xc (addr 0xffff8bd299a0)
0xffff8bd29998   216  ldr x16, pc+384 (addr 0x0000ffff8bd29b18)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 1
0xffff8bd2999c   220  br x16
0xffff8bd299a0   224  cmp x3, #0x4 (4)
0xffff8bd299a4   228  b.ne #+0xc (addr 0xffff8bd299b0)
0xffff8bd299a8   232  ldr x16, pc+376 (addr 0x0000ffff8bd29b20)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 4
0xffff8bd299ac   236  br x16
0xffff8bd299b0   240  cmp x3, #0x5 (5)
0xffff8bd299b4   244  b.ne #+0xc (addr 0xffff8bd299c0)
0xffff8bd299b8   248  ldr x16, pc+368 (addr 0x0000ffff8bd29b28)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 5
0xffff8bd299bc   252  br x16
0xffff8bd299c0   256  cmp x3, #0x2 (2)
0xffff8bd299c4   260  b.ne #+0xc (addr 0xffff8bd299d0)
0xffff8bd299c8   264  ldr x16, pc+360 (addr 0x0000ffff8bd29b30)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 2
0xffff8bd299cc   268  br x16
0xffff8bd299d0   272  cmp x3, #0x3 (3)
0xffff8bd299d4   276  b.ne #+0xc (addr 0xffff8bd299e0)
0xffff8bd299d8   280  ldr x16, pc+352 (addr 0x0000ffff8bd29b38)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 3
0xffff8bd299dc   284  br x16
0xffff8bd299e0   288  movz x0, #0x9f00000000
0xffff8bd299e4   292  sub csp, jssp, #0x8 (8)
0xffff8bd299e8   296  str x0, [jssp, #-8]!
0xffff8bd299ec   300  movz x0, #0x1
0xffff8bd299f0   304  ldr x1, pc+336 (addr 0x0000ffff8bd29b40)    ;; external reference (Runtime::Abort)
0xffff8bd299f4   308  ldr x16, pc+340 (addr 0x0000ffff8bd29b48)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd299f8   312  blr x16
0xffff8bd299fc   316  cbnz x3, #+0xc (addr 0xffff8bd29a08)
0xffff8bd29a00   320  ldr x16, pc+336 (addr 0x0000ffff8bd29b50)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 0
0xffff8bd29a04   324  br x16
0xffff8bd29a08   328  cmp x3, #0x1 (1)
0xffff8bd29a0c   332  b.ne #+0xc (addr 0xffff8bd29a18)
0xffff8bd29a10   336  ldr x16, pc+328 (addr 0x0000ffff8bd29b58)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 1
0xffff8bd29a14   340  br x16
0xffff8bd29a18   344  cmp x3, #0x4 (4)
0xffff8bd29a1c   348  b.ne #+0xc (addr 0xffff8bd29a28)
0xffff8bd29a20   352  ldr x16, pc+320 (addr 0x0000ffff8bd29b60)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 4
0xffff8bd29a24   356  br x16
0xffff8bd29a28   360  cmp x3, #0x5 (5)
0xffff8bd29a2c   364  b.ne #+0xc (addr 0xffff8bd29a38)
0xffff8bd29a30   368  ldr x16, pc+312 (addr 0x0000ffff8bd29b68)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 5
0xffff8bd29a34   372  br x16
0xffff8bd29a38   376  cmp x3, #0x2 (2)
0xffff8bd29a3c   380  b.ne #+0xc (addr 0xffff8bd29a48)
0xffff8bd29a40   384  ldr x16, pc+304 (addr 0x0000ffff8bd29b70)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 2
0xffff8bd29a44   388  br x16
0xffff8bd29a48   392  cmp x3, #0x3 (3)
0xffff8bd29a4c   396  b.ne #+0xc (addr 0xffff8bd29a58)
0xffff8bd29a50   400  ldr x16, pc+296 (addr 0x0000ffff8bd29b78)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 3
0xffff8bd29a54   404  br x16
0xffff8bd29a58   408  movz x0, #0x9f00000000
0xffff8bd29a5c   412  sub csp, jssp, #0x8 (8)
0xffff8bd29a60   416  str x0, [jssp, #-8]!
0xffff8bd29a64   420  movz x0, #0x1
0xffff8bd29a68   424  ldr x1, pc+280 (addr 0x0000ffff8bd29b80)    ;; external reference (Runtime::Abort)
0xffff8bd29a6c   428  ldr x16, pc+284 (addr 0x0000ffff8bd29b88)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd29a70   432  blr x16
0xffff8bd29a74   436  cbz x0, #+0x24 (addr 0xffff8bd29a98)
0xffff8bd29a78   440  cmp x0, #0x1 (1)
0xffff8bd29a7c   444  b.ne #+0x24 (addr 0xffff8bd29aa0)
0xffff8bd29a80   448  ldr x10, [jssp]
0xffff8bd29a84   452  cbz x10, #+0xc (addr 0xffff8bd29a90)
0xffff8bd29a88   456  ldr x16, pc+264 (addr 0x0000ffff8bd29b90)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 257
0xffff8bd29a8c   460  br x16
0xffff8bd29a90   464  ldr x16, pc+264 (addr 0x0000ffff8bd29b98)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 256
0xffff8bd29a94   468  br x16
0xffff8bd29a98   472  ldr x16, pc+264 (addr 0x0000ffff8bd29ba0)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 256
0xffff8bd29a9c   476  br x16
0xffff8bd29aa0   480  ldr x16, pc+264 (addr 0x0000ffff8bd29ba8)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 256
0xffff8bd29aa4   484  br x16
0xffff8bd29aa8   488  str x1, [jssp, x0, lsl #3]
0xffff8bd29aac   492  add x0, x0, #0x3 (3)
0xffff8bd29ab0   496  sub csp, jssp, #0x10 (16)
0xffff8bd29ab4   500  stp x2, x3, [jssp, #-16]!
0xffff8bd29ab8   504  ldr x1, pc+248 (addr 0x0000ffff8bd29bb0)    ;; external reference (Runtime::NewArray)
0xffff8bd29abc   508  ldr x16, pc+252 (addr 0x0000ffff8bd29bb8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd29ac0   512  br x16
0xffff8bd29ac4   516  580007df       constant pool begin (num_const = 62)    ;; constant pool
0xffff8bd29ac8   520  d63f03e0       constant
0xffff8bd29acc   524  d503201f       constant
0xffff8bd29ad0   528  8bd082a0       constant
0xffff8bd29ad4   532  0000ffff       constant
0xffff8bd29ad8   536  8bd08840       constant
0xffff8bd29adc   540  0000ffff       constant
0xffff8bd29ae0   544  8bd08e00       constant
0xffff8bd29ae4   548  0000ffff       constant
0xffff8bd29ae8   552  8bd09080       constant
0xffff8bd29aec   556  0000ffff       constant
0xffff8bd29af0   560  8bd09300       constant
0xffff8bd29af4   564  0000ffff       constant
0xffff8bd29af8   568  8bd09580       constant
0xffff8bd29afc   572  0000ffff       constant
0xffff8bd29b00   576  00eda820       constant
0xffff8bd29b04   580  00000000       constant
0xffff8bd29b08   584  8bd06060       constant
0xffff8bd29b0c   588  0000ffff       constant
0xffff8bd29b10   592  8bd069a0       constant
0xffff8bd29b14   596  0000ffff       constant
0xffff8bd29b18   600  8bd06e00       constant
0xffff8bd29b1c   604  0000ffff       constant
0xffff8bd29b20   608  8bd07280       constant
0xffff8bd29b24   612  0000ffff       constant
0xffff8bd29b28   616  8bd07480       constant
0xffff8bd29b2c   620  0000ffff       constant
0xffff8bd29b30   624  8bd07680       constant
0xffff8bd29b34   628  0000ffff       constant
0xffff8bd29b38   632  8bd078a0       constant
0xffff8bd29b3c   636  0000ffff       constant
0xffff8bd29b40   640  00eda820       constant
0xffff8bd29b44   644  00000000       constant
0xffff8bd29b48   648  8bd06060       constant
0xffff8bd29b4c   652  0000ffff       constant
0xffff8bd29b50   656  8bd09fe0       constant
0xffff8bd29b54   660  0000ffff       constant
0xffff8bd29b58   664  8bd0a560       constant
0xffff8bd29b5c   668  0000ffff       constant
0xffff8bd29b60   672  8bd0aae0       constant
0xffff8bd29b64   676  0000ffff       constant
0xffff8bd29b68   680  8bd0ad40       constant
0xffff8bd29b6c   684  0000ffff       constant
0xffff8bd29b70   688  8bd0afa0       constant
0xffff8bd29b74   692  0000ffff       constant
0xffff8bd29b78   696  8bd0b1e0       constant
0xffff8bd29b7c   700  0000ffff       constant
0xffff8bd29b80   704  00eda820       constant
0xffff8bd29b84   708  00000000       constant
0xffff8bd29b88   712  8bd06060       constant
0xffff8bd29b8c   716  0000ffff       constant
0xffff8bd29b90   720  8bd08b80       constant
0xffff8bd29b94   724  0000ffff       constant
0xffff8bd29b98   728  8bd085e0       constant
0xffff8bd29b9c   732  0000ffff       constant
0xffff8bd29ba0   736  8bd06be0       constant
0xffff8bd29ba4   740  0000ffff       constant
0xffff8bd29ba8   744  8bd0a300       constant
0xffff8bd29bac   748  0000ffff       constant
0xffff8bd29bb0   752  00de2850       constant
0xffff8bd29bb4   756  00000000       constant
0xffff8bd29bb8   760  8bd06060       constant
0xffff8bd29bbc   764  0000ffff       constant


RelocInfo (size = 42)
0xffff8bd29910  code target (STUB)  (0xffff8bd082a0)
0xffff8bd29920  code target (STUB)  (0xffff8bd08840)
0xffff8bd29930  code target (STUB)  (0xffff8bd08e00)
0xffff8bd29940  code target (STUB)  (0xffff8bd09080)
0xffff8bd29950  code target (STUB)  (0xffff8bd09300)
0xffff8bd29960  code target (STUB)  (0xffff8bd09580)
0xffff8bd29978  external reference (Runtime::Abort)  (0xeda820)
0xffff8bd2997c  code target (STUB)  (0xffff8bd06060)
0xffff8bd29988  code target (STUB)  (0xffff8bd069a0)
0xffff8bd29998  code target (STUB)  (0xffff8bd06e00)
0xffff8bd299a8  code target (STUB)  (0xffff8bd07280)
0xffff8bd299b8  code target (STUB)  (0xffff8bd07480)
0xffff8bd299c8  code target (STUB)  (0xffff8bd07680)
0xffff8bd299d8  code target (STUB)  (0xffff8bd078a0)
0xffff8bd299f0  external reference (Runtime::Abort)  (0xeda820)
0xffff8bd299f4  code target (STUB)  (0xffff8bd06060)
0xffff8bd29a00  code target (STUB)  (0xffff8bd09fe0)
0xffff8bd29a10  code target (STUB)  (0xffff8bd0a560)
0xffff8bd29a20  code target (STUB)  (0xffff8bd0aae0)
0xffff8bd29a30  code target (STUB)  (0xffff8bd0ad40)
0xffff8bd29a40  code target (STUB)  (0xffff8bd0afa0)
0xffff8bd29a50  code target (STUB)  (0xffff8bd0b1e0)
0xffff8bd29a68  external reference (Runtime::Abort)  (0xeda820)
0xffff8bd29a6c  code target (STUB)  (0xffff8bd06060)
0xffff8bd29a88  code target (STUB)  (0xffff8bd08b80)
0xffff8bd29a90  code target (STUB)  (0xffff8bd085e0)
0xffff8bd29a98  code target (STUB)  (0xffff8bd06be0)
0xffff8bd29aa0  code target (STUB)  (0xffff8bd0a300)
0xffff8bd29ab8  external reference (Runtime::NewArray)  (0xde2850)
0xffff8bd29abc  code target (STUB)  (0xffff8bd06060)
0xffff8bd29ac4  constant pool (size 252)


kind = STUB
major_key = StringToNumberStub
name = StringToNumberStub
compiler = unknown
Instructions (size = 80)
0xffff8bd29cc0     0  ldur x2, [x0, #7]
0xffff8bd29cc4     4  movz x16, #0x2
0xffff8bd29cc8     8  movk x16, #0xe000, lsl #16
0xffff8bd29ccc    12  tst x2, x16
0xffff8bd29cd0    16  b.ne #+0x10 (addr 0xffff8bd29ce0)
0xffff8bd29cd4    20  ubfx x0, x2, #2, #24
0xffff8bd29cd8    24  lsl x0, x0, #32
0xffff8bd29cdc    28  ret
0xffff8bd29ce0    32  sub csp, jssp, #0x8 (8)
0xffff8bd29ce4    36  str x0, [jssp, #-8]!
0xffff8bd29ce8    40  movz x0, #0x1
0xffff8bd29cec    44  ldr x1, pc+20 (addr 0x0000ffff8bd29d00)    ;; external reference (Runtime::StringToNumber)
0xffff8bd29cf0    48  ldr x16, pc+24 (addr 0x0000ffff8bd29d08)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd29cf4    52  br x16
0xffff8bd29cf8    56  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd29cfc    60  d63f03e0       constant
0xffff8bd29d00    64  00e3bf28       constant
0xffff8bd29d04    68  00000000       constant
0xffff8bd29d08    72  8bd06060       constant
0xffff8bd29d0c    76  0000ffff       constant


RelocInfo (size = 9)
0xffff8bd29cec  external reference (Runtime::StringToNumber)  (0xe3bf28)
0xffff8bd29cf0  code target (STUB)  (0xffff8bd06060)
0xffff8bd29cf8  constant pool (size 24)


kind = STUB
major_key = NonNumberToNumberStub
name = NonNumberToNumberStub
compiler = unknown
Instructions (size = 96)
0xffff8bd29d80     0  ldur x1, [x0, #-1]
0xffff8bd29d84     4  ldrb w1, [x1, #11]
0xffff8bd29d88     8  cmp x1, #0x80 (128)
0xffff8bd29d8c    12  b.hs #+0xc (addr 0xffff8bd29d98)
0xffff8bd29d90    16  ldr x16, pc+56 (addr 0x0000ffff8bd29dc8)    ;; code: STUB, StringToNumberStub, minor: 0
0xffff8bd29d94    20  br x16
0xffff8bd29d98    24  cmp x1, #0x83 (131)
0xffff8bd29d9c    28  b.ne #+0xc (addr 0xffff8bd29da8)
0xffff8bd29da0    32  ldur x0, [x0, #15]
0xffff8bd29da4    36  ret
0xffff8bd29da8    40  sub csp, jssp, #0x8 (8)
0xffff8bd29dac    44  str x0, [jssp, #-8]!
0xffff8bd29db0    48  movz x0, #0x1
0xffff8bd29db4    52  ldr x1, pc+28 (addr 0x0000ffff8bd29dd0)    ;; external reference (Runtime::ToNumber)
0xffff8bd29db8    56  ldr x16, pc+32 (addr 0x0000ffff8bd29dd8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd29dbc    60  br x16
0xffff8bd29dc0    64  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd29dc4    68  d63f03e0       constant
0xffff8bd29dc8    72  8bd29cc0       constant
0xffff8bd29dcc    76  0000ffff       constant
0xffff8bd29dd0    80  00e48d48       constant
0xffff8bd29dd4    84  00000000       constant
0xffff8bd29dd8    88  8bd06060       constant
0xffff8bd29ddc    92  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd29d90  code target (STUB)  (0xffff8bd29cc0)
0xffff8bd29db4  external reference (Runtime::ToNumber)  (0xe48d48)
0xffff8bd29db8  code target (STUB)  (0xffff8bd06060)
0xffff8bd29dc0  constant pool (size 32)


kind = STUB
major_key = ToNumberStub
name = ToNumberStub
compiler = unknown
Instructions (size = 56)
0xffff8bd29e40     0  tbnz w0, #0, #+0x8 (addr 0xffff8bd29e48)
0xffff8bd29e44     4  ret
0xffff8bd29e48     8  ldur x1, [x0, #-1]
0xffff8bd29e4c    12  ldrb w1, [x1, #11]
0xffff8bd29e50    16  cmp x1, #0x81 (129)
0xffff8bd29e54    20  b.ne #+0x8 (addr 0xffff8bd29e5c)
0xffff8bd29e58    24  ret
0xffff8bd29e5c    28  ldr x16, pc+20 (addr 0x0000ffff8bd29e70)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff8bd29e60    32  br x16
0xffff8bd29e64    36  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd29e68    40  d63f03e0       constant
0xffff8bd29e6c    44  d503201f       constant
0xffff8bd29e70    48  8bd29d80       constant
0xffff8bd29e74    52  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd29e5c  code target (STUB)  (0xffff8bd29d80)
0xffff8bd29e64  constant pool (size 20)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff8bd2a3e0     0  sub csp, jssp, #0x10 (16)
0xffff8bd2a3e4     4  stp x2, x1, [jssp, #-16]!
0xffff8bd2a3e8     8  ldur x5, [x0, #7]
0xffff8bd2a3ec    12  ubfx x1, x5, #52, #11
0xffff8bd2a3f0    16  cmp x1, #0x453 (1107)
0xffff8bd2a3f4    20  csel x5, xzr, x5, ge
0xffff8bd2a3f8    24  b.ge #+0x1c (addr 0xffff8bd2a414)
0xffff8bd2a3fc    28  ubfx x2, x5, #0, #52
0xffff8bd2a400    32  orr x2, x2, #0x10000000000000
0xffff8bd2a404    36  tst x5, #0x8000000000000000
0xffff8bd2a408    40  cneg x2, x2, ne
0xffff8bd2a40c    44  sub x1, x1, #0x433 (1075)
0xffff8bd2a410    48  lsl x5, x2, x1
0xffff8bd2a414    52  ldp x2, x1, [jssp], #16
0xffff8bd2a418    56  ret


RelocInfo (size = 0)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = NumberToStringStub
compiler = crankshaft
Instructions (size = 477)
0xffff8bd2a480     0  movz x16, #0xa00000000
0xffff8bd2a484     4  sub csp, jssp, #0x10 (16)
0xffff8bd2a488     8  stp fp, lr, [jssp, #-16]!
0xffff8bd2a48c    12  mov fp, jssp
0xffff8bd2a490    16  sub csp, jssp, #0x28 (40)
0xffff8bd2a494    20  sub jssp, jssp, #0x28 (40)
0xffff8bd2a498    24  stur x16, [fp, #-8]
0xffff8bd2a49c    28  str d0, [jssp]
0xffff8bd2a4a0    32  str d1, [jssp, #8]
0xffff8bd2a4a4    36  stur x0, [fp, #-16]
0xffff8bd2a4a8    40  stur cp, [fp, #-24]
0xffff8bd2a4ac    44  mov x1, cp
0xffff8bd2a4b0    48  ldr x2, [x26, #368]
0xffff8bd2a4b4    52  ldur w3, [x2, #11]
0xffff8bd2a4b8    56  asr w3, w3, #1
0xffff8bd2a4bc    60  sub w3, w3, #0x1 (1)
0xffff8bd2a4c0    64  tbz w0, #0, #+0x60 (addr 0xffff8bd2a520)
0xffff8bd2a4c4    68  ldur x4, [x0, #-1]
0xffff8bd2a4c8    72  ldr x16, pc+296 (addr 0x0000ffff8bd2a5f0)    ;; object: 0x5f504411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd2a4cc    76  cmp x4, x16
0xffff8bd2a4d0    80  b.eq #+0x8 (addr 0xffff8bd2a4d8)
0xffff8bd2a4d4    84  b #+0x13c (addr 0xffff8bd2a610)
0xffff8bd2a4d8    88  ldur w4, [x0, #7]
0xffff8bd2a4dc    92  ldur w5, [x0, #11]
0xffff8bd2a4e0    96  eor w4, w5, w4
0xffff8bd2a4e4   100  and w3, w4, w3
0xffff8bd2a4e8   104  lsl w3, w3, #1
0xffff8bd2a4ec   108  add x4, x2, #0xf (15)
0xffff8bd2a4f0   112  ldr x5, [x4, w3, sxtw #3]
0xffff8bd2a4f4   116  tbz w5, #0, #+0x4c (addr 0xffff8bd2a540)
0xffff8bd2a4f8   120  ldur x4, [x5, #-1]
0xffff8bd2a4fc   124  ldr x16, pc+252 (addr 0x0000ffff8bd2a5f8)    ;; object: 0x5f504411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd2a500   128  cmp x4, x16
0xffff8bd2a504   132  b.ne #+0x3c (addr 0xffff8bd2a540)
0xffff8bd2a508   136  ldur d0, [x5, #7]
0xffff8bd2a50c   140  ldur d1, [x0, #7]
0xffff8bd2a510   144  fcmp d0, d1
0xffff8bd2a514   148  b.vs #+0x2c (addr 0xffff8bd2a540)
0xffff8bd2a518   152  b.eq #+0x4c (addr 0xffff8bd2a564)
0xffff8bd2a51c   156  b #+0x24 (addr 0xffff8bd2a540)
0xffff8bd2a520   160  tbnz w0, #0, #+0x68 (addr 0xffff8bd2a588)
0xffff8bd2a524   164  asr x5, x0, #32
0xffff8bd2a528   168  and w3, w5, w3
0xffff8bd2a52c   172  lsl w3, w3, #1
0xffff8bd2a530   176  add x4, x2, #0xf (15)
0xffff8bd2a534   180  ldr x5, [x4, w3, sxtw #3]
0xffff8bd2a538   184  cmp x0, x5
0xffff8bd2a53c   188  b.eq #+0x28 (addr 0xffff8bd2a564)
0xffff8bd2a540   192  sub csp, jssp, #0x8 (8)
0xffff8bd2a544   196  str x0, [jssp, #-8]!
0xffff8bd2a548   200  mov cp, x1
0xffff8bd2a54c   204  movz x0, #0x1
0xffff8bd2a550   208  movz x1, #0xce00
0xffff8bd2a554   212  movk x1, #0xe3, lsl #16
0xffff8bd2a558   216  ldr x16, pc+168 (addr 0x0000ffff8bd2a600)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd2a55c   220  blr x16
0xffff8bd2a560   224  b #+0x10 (addr 0xffff8bd2a570)
0xffff8bd2a564   228  add x0, x2, #0x17 (23)
0xffff8bd2a568   232  ldr x1, [x0, w3, sxtw #3]
0xffff8bd2a56c   236  mov x0, x1
0xffff8bd2a570   240  ldur cp, [fp, #-24]
0xffff8bd2a574   244  ldr d0, [jssp]
0xffff8bd2a578   248  ldr d1, [jssp, #8]
0xffff8bd2a57c   252  mov jssp, fp
0xffff8bd2a580   256  ldp fp, lr, [jssp], #16
0xffff8bd2a584   260  ret
0xffff8bd2a588   264  ldur x16, [x0, #-1]
0xffff8bd2a58c   268  ldr x17, [x26, #120]
0xffff8bd2a590   272  cmp x16, x17
0xffff8bd2a594   276  b.ne #+0x30 (addr 0xffff8bd2a5c4)
0xffff8bd2a598   280  ldur d30, [x0, #7]
0xffff8bd2a59c   284  fcvtzs x5, d30
0xffff8bd2a5a0   288  cmp x5, #0x1 (1)
0xffff8bd2a5a4   292  ccmn x5, #1, #nzcV, vc
0xffff8bd2a5a8   296  b.vc #+0x18 (addr 0xffff8bd2a5c0)
0xffff8bd2a5ac   300  sub csp, jssp, #0x8 (8)
0xffff8bd2a5b0   304  str lr, [jssp, #-8]!
0xffff8bd2a5b4   308  ldr x16, pc+84 (addr 0x0000ffff8bd2a608)    ;; code: STUB, DoubleToIStub, minor: 127296
0xffff8bd2a5b8   312  blr x16
0xffff8bd2a5bc   316  ldr lr, [jssp], #8
0xffff8bd2a5c0   320  b #+0x24 (addr 0xffff8bd2a5e4)
0xffff8bd2a5c4   324  ldp x5, x4, [x26, #64]
0xffff8bd2a5c8   328  cmp x0, x5
0xffff8bd2a5cc   332  cset x5, eq
0xffff8bd2a5d0   336  ccmp x0, x4, #nZcv, ne
0xffff8bd2a5d4   340  b.eq #+0x10 (addr 0xffff8bd2a5e4)
0xffff8bd2a5d8   344  ldr x16, [x26, #40]
0xffff8bd2a5dc   348  cmp x0, x16
0xffff8bd2a5e0   352  b.ne #+0x38 (addr 0xffff8bd2a618)
0xffff8bd2a5e4   356  b #-0xbc (addr 0xffff8bd2a528)
0xffff8bd2a5e8   360  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bd2a5ec   364  d63f03e0       constant
0xffff8bd2a5f0   368  5f504411       constant
0xffff8bd2a5f4   372  00000000       constant
0xffff8bd2a5f8   376  5f504411       constant
0xffff8bd2a5fc   380  00000000       constant
0xffff8bd2a600   384  8bd06060       constant
0xffff8bd2a604   388  0000ffff       constant
0xffff8bd2a608   392  8bd2a3e0       constant
0xffff8bd2a60c   396  0000ffff       constant
0xffff8bd2a610   400  movz x16, #0x0
0xffff8bd2a614   404  bl #+0xc (addr 0xffff8bd2a620)
0xffff8bd2a618   408  movz x16, #0x10
0xffff8bd2a61c   412  bl #+0x4 (addr 0xffff8bd2a620)
0xffff8bd2a620   416  ldr d0, [jssp]
0xffff8bd2a624   420  ldr d1, [jssp, #8]
0xffff8bd2a628   424  ldr x17, pc+24 (addr 0x0000ffff8bd2a640)    ;; lazy deoptimization bailout 0
0xffff8bd2a62c   428  add x17, x17, x16
0xffff8bd2a630   432  br x17
0xffff8bd2a634   436  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd2a638   440  d63f03e0       constant
0xffff8bd2a63c   444  d503201f       constant
0xffff8bd2a640   448  8bb06000       constant
0xffff8bd2a644   452  0000ffff       constant


Safepoints (size = 21)
0xffff8bd2a560   224  0011000 (sp -> fp)       1

RelocInfo (size = 26)
0xffff8bd2a4c8  embedded object  (0x5f504411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd2a4fc  embedded object  (0x5f504411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd2a558  code target (STUB)  (0xffff8bd06060)
0xffff8bd2a5b4  code target (STUB)  (0xffff8bd2a3e0)
0xffff8bd2a5e8  constant pool (size 40)
0xffff8bd2a628  runtime entry
0xffff8bd2a634  constant pool (size 20)

--- End code ---
kind = STUB
major_key = NumberToStringStub
name = NumberToStringStub
compiler = crankshaft
Instructions (size = 477)
0xffff8bd2a480     0  movz x16, #0xa00000000
0xffff8bd2a484     4  sub csp, jssp, #0x10 (16)
0xffff8bd2a488     8  stp fp, lr, [jssp, #-16]!
0xffff8bd2a48c    12  mov fp, jssp
0xffff8bd2a490    16  sub csp, jssp, #0x28 (40)
0xffff8bd2a494    20  sub jssp, jssp, #0x28 (40)
0xffff8bd2a498    24  stur x16, [fp, #-8]
0xffff8bd2a49c    28  str d0, [jssp]
0xffff8bd2a4a0    32  str d1, [jssp, #8]
0xffff8bd2a4a4    36  stur x0, [fp, #-16]
0xffff8bd2a4a8    40  stur cp, [fp, #-24]
0xffff8bd2a4ac    44  mov x1, cp
0xffff8bd2a4b0    48  ldr x2, [x26, #368]
0xffff8bd2a4b4    52  ldur w3, [x2, #11]
0xffff8bd2a4b8    56  asr w3, w3, #1
0xffff8bd2a4bc    60  sub w3, w3, #0x1 (1)
0xffff8bd2a4c0    64  tbz w0, #0, #+0x60 (addr 0xffff8bd2a520)
0xffff8bd2a4c4    68  ldur x4, [x0, #-1]
0xffff8bd2a4c8    72  ldr x16, pc+296 (addr 0x0000ffff8bd2a5f0)    ;; object: 0x5f504411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd2a4cc    76  cmp x4, x16
0xffff8bd2a4d0    80  b.eq #+0x8 (addr 0xffff8bd2a4d8)
0xffff8bd2a4d4    84  b #+0x13c (addr 0xffff8bd2a610)
0xffff8bd2a4d8    88  ldur w4, [x0, #7]
0xffff8bd2a4dc    92  ldur w5, [x0, #11]
0xffff8bd2a4e0    96  eor w4, w5, w4
0xffff8bd2a4e4   100  and w3, w4, w3
0xffff8bd2a4e8   104  lsl w3, w3, #1
0xffff8bd2a4ec   108  add x4, x2, #0xf (15)
0xffff8bd2a4f0   112  ldr x5, [x4, w3, sxtw #3]
0xffff8bd2a4f4   116  tbz w5, #0, #+0x4c (addr 0xffff8bd2a540)
0xffff8bd2a4f8   120  ldur x4, [x5, #-1]
0xffff8bd2a4fc   124  ldr x16, pc+252 (addr 0x0000ffff8bd2a5f8)    ;; object: 0x5f504411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd2a500   128  cmp x4, x16
0xffff8bd2a504   132  b.ne #+0x3c (addr 0xffff8bd2a540)
0xffff8bd2a508   136  ldur d0, [x5, #7]
0xffff8bd2a50c   140  ldur d1, [x0, #7]
0xffff8bd2a510   144  fcmp d0, d1
0xffff8bd2a514   148  b.vs #+0x2c (addr 0xffff8bd2a540)
0xffff8bd2a518   152  b.eq #+0x4c (addr 0xffff8bd2a564)
0xffff8bd2a51c   156  b #+0x24 (addr 0xffff8bd2a540)
0xffff8bd2a520   160  tbnz w0, #0, #+0x68 (addr 0xffff8bd2a588)
0xffff8bd2a524   164  asr x5, x0, #32
0xffff8bd2a528   168  and w3, w5, w3
0xffff8bd2a52c   172  lsl w3, w3, #1
0xffff8bd2a530   176  add x4, x2, #0xf (15)
0xffff8bd2a534   180  ldr x5, [x4, w3, sxtw #3]
0xffff8bd2a538   184  cmp x0, x5
0xffff8bd2a53c   188  b.eq #+0x28 (addr 0xffff8bd2a564)
0xffff8bd2a540   192  sub csp, jssp, #0x8 (8)
0xffff8bd2a544   196  str x0, [jssp, #-8]!
0xffff8bd2a548   200  mov cp, x1
0xffff8bd2a54c   204  movz x0, #0x1
0xffff8bd2a550   208  movz x1, #0xce00
0xffff8bd2a554   212  movk x1, #0xe3, lsl #16
0xffff8bd2a558   216  ldr x16, pc+168 (addr 0x0000ffff8bd2a600)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd2a55c   220  blr x16
0xffff8bd2a560   224  b #+0x10 (addr 0xffff8bd2a570)
0xffff8bd2a564   228  add x0, x2, #0x17 (23)
0xffff8bd2a568   232  ldr x1, [x0, w3, sxtw #3]
0xffff8bd2a56c   236  mov x0, x1
0xffff8bd2a570   240  ldur cp, [fp, #-24]
0xffff8bd2a574   244  ldr d0, [jssp]
0xffff8bd2a578   248  ldr d1, [jssp, #8]
0xffff8bd2a57c   252  mov jssp, fp
0xffff8bd2a580   256  ldp fp, lr, [jssp], #16
0xffff8bd2a584   260  ret
0xffff8bd2a588   264  ldur x16, [x0, #-1]
0xffff8bd2a58c   268  ldr x17, [x26, #120]
0xffff8bd2a590   272  cmp x16, x17
0xffff8bd2a594   276  b.ne #+0x30 (addr 0xffff8bd2a5c4)
0xffff8bd2a598   280  ldur d30, [x0, #7]
0xffff8bd2a59c   284  fcvtzs x5, d30
0xffff8bd2a5a0   288  cmp x5, #0x1 (1)
0xffff8bd2a5a4   292  ccmn x5, #1, #nzcV, vc
0xffff8bd2a5a8   296  b.vc #+0x18 (addr 0xffff8bd2a5c0)
0xffff8bd2a5ac   300  sub csp, jssp, #0x8 (8)
0xffff8bd2a5b0   304  str lr, [jssp, #-8]!
0xffff8bd2a5b4   308  ldr x16, pc+84 (addr 0x0000ffff8bd2a608)    ;; code: STUB, DoubleToIStub, minor: 127296
0xffff8bd2a5b8   312  blr x16
0xffff8bd2a5bc   316  ldr lr, [jssp], #8
0xffff8bd2a5c0   320  b #+0x24 (addr 0xffff8bd2a5e4)
0xffff8bd2a5c4   324  ldp x5, x4, [x26, #64]
0xffff8bd2a5c8   328  cmp x0, x5
0xffff8bd2a5cc   332  cset x5, eq
0xffff8bd2a5d0   336  ccmp x0, x4, #nZcv, ne
0xffff8bd2a5d4   340  b.eq #+0x10 (addr 0xffff8bd2a5e4)
0xffff8bd2a5d8   344  ldr x16, [x26, #40]
0xffff8bd2a5dc   348  cmp x0, x16
0xffff8bd2a5e0   352  b.ne #+0x38 (addr 0xffff8bd2a618)
0xffff8bd2a5e4   356  b #-0xbc (addr 0xffff8bd2a528)
0xffff8bd2a5e8   360  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bd2a5ec   364  d63f03e0       constant
0xffff8bd2a5f0   368  5f504411       constant
0xffff8bd2a5f4   372  00000000       constant
0xffff8bd2a5f8   376  5f504411       constant
0xffff8bd2a5fc   380  00000000       constant
0xffff8bd2a600   384  8bd06060       constant
0xffff8bd2a604   388  0000ffff       constant
0xffff8bd2a608   392  8bd2a3e0       constant
0xffff8bd2a60c   396  0000ffff       constant
0xffff8bd2a610   400  movz x16, #0x0
0xffff8bd2a614   404  bl #+0xc (addr 0xffff8bd2a620)
0xffff8bd2a618   408  movz x16, #0x10
0xffff8bd2a61c   412  bl #+0x4 (addr 0xffff8bd2a620)
0xffff8bd2a620   416  ldr d0, [jssp]
0xffff8bd2a624   420  ldr d1, [jssp, #8]
0xffff8bd2a628   424  ldr x17, pc+24 (addr 0x0000ffff8bd2a640)    ;; lazy deoptimization bailout 0
0xffff8bd2a62c   428  add x17, x17, x16
0xffff8bd2a630   432  br x17
0xffff8bd2a634   436  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd2a638   440  d63f03e0       constant
0xffff8bd2a63c   444  d503201f       constant
0xffff8bd2a640   448  8bb06000       constant
0xffff8bd2a644   452  0000ffff       constant


Safepoints (size = 21)
0xffff8bd2a560   224  0011000 (sp -> fp)       1

RelocInfo (size = 26)
0xffff8bd2a4c8  embedded object  (0x5f504411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd2a4fc  embedded object  (0x5f504411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd2a558  code target (STUB)  (0xffff8bd06060)
0xffff8bd2a5b4  code target (STUB)  (0xffff8bd2a3e0)
0xffff8bd2a5e8  constant pool (size 40)
0xffff8bd2a628  runtime entry
0xffff8bd2a634  constant pool (size 20)


kind = STUB
major_key = ToStringStub
name = ToStringStub
compiler = unknown
Instructions (size = 112)
0xffff8bd2a6c0     0  tbz w0, #0, #+0x20 (addr 0xffff8bd2a6e0)
0xffff8bd2a6c4     4  ldur x1, [x0, #-1]
0xffff8bd2a6c8     8  ldrb w1, [x1, #11]
0xffff8bd2a6cc    12  cmp x1, #0x80 (128)
0xffff8bd2a6d0    16  b.hs #+0x8 (addr 0xffff8bd2a6d8)
0xffff8bd2a6d4    20  ret
0xffff8bd2a6d8    24  cmp x1, #0x81 (129)
0xffff8bd2a6dc    28  b.ne #+0xc (addr 0xffff8bd2a6e8)
0xffff8bd2a6e0    32  ldr x16, pc+56 (addr 0x0000ffff8bd2a718)    ;; code: STUB, NumberToStringStub, minor: 0
0xffff8bd2a6e4    36  br x16
0xffff8bd2a6e8    40  cmp x1, #0x83 (131)
0xffff8bd2a6ec    44  b.ne #+0xc (addr 0xffff8bd2a6f8)
0xffff8bd2a6f0    48  ldur x0, [x0, #7]
0xffff8bd2a6f4    52  ret
0xffff8bd2a6f8    56  sub csp, jssp, #0x8 (8)
0xffff8bd2a6fc    60  str x0, [jssp, #-8]!
0xffff8bd2a700    64  movz x0, #0x1
0xffff8bd2a704    68  ldr x1, pc+28 (addr 0x0000ffff8bd2a720)    ;; external reference (Runtime::ToString)
0xffff8bd2a708    72  ldr x16, pc+32 (addr 0x0000ffff8bd2a728)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd2a70c    76  br x16
0xffff8bd2a710    80  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd2a714    84  d63f03e0       constant
0xffff8bd2a718    88  8bd2a480       constant
0xffff8bd2a71c    92  0000ffff       constant
0xffff8bd2a720    96  00e49508       constant
0xffff8bd2a724   100  00000000       constant
0xffff8bd2a728   104  8bd06060       constant
0xffff8bd2a72c   108  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd2a6e0  code target (STUB)  (0xffff8bd2a480)
0xffff8bd2a704  external reference (Runtime::ToString)  (0xe49508)
0xffff8bd2a708  code target (STUB)  (0xffff8bd06060)
0xffff8bd2a710  constant pool (size 32)


--- Code ---
kind = BUILTIN
name = MathCeil
compiler = turbofan
Instructions (size = 338)
0xffff8bd2b4a0     0  sub jssp, jssp, #0x20 (32)
0xffff8bd2b4a4     4  sub csp, csp, #0x20 (32)
0xffff8bd2b4a8     8  stp x1, cp, [jssp]
0xffff8bd2b4ac    12  stp fp, lr, [jssp, #16]
0xffff8bd2b4b0    16  add fp, jssp, #0x10 (16)
0xffff8bd2b4b4    20  sub csp, jssp, #0x10 (16)
0xffff8bd2b4b8    24  sub jssp, jssp, #0x10 (16)
0xffff8bd2b4bc    28  ldr x0, [jssp, #48]
0xffff8bd2b4c0    32  and x1, x0, #0x1
0xffff8bd2b4c4    36  cmp x1, #0x0 (0)
0xffff8bd2b4c8    40  b.eq #+0x98 (addr 0xffff8bd2b560)
0xffff8bd2b4cc    44  ldur x1, [x0, #-1]
0xffff8bd2b4d0    48  ldr x2, [x26, #120]
0xffff8bd2b4d4    52  cmp x1, x2
0xffff8bd2b4d8    56  b.ne #+0x8c (addr 0xffff8bd2b564)
0xffff8bd2b4dc    60  ldur d0, [x0, #7]
0xffff8bd2b4e0    64  frintp d0, d0
0xffff8bd2b4e4    68  fcvtzs w0, d0
0xffff8bd2b4e8    72  scvtf d1, w0
0xffff8bd2b4ec    76  fcmp d0, d1
0xffff8bd2b4f0    80  b.ne #+0x24 (addr 0xffff8bd2b514)
0xffff8bd2b4f4    84  fcmp d0, #0.0
0xffff8bd2b4f8    88  b.ne #+0x14 (addr 0xffff8bd2b50c)
0xffff8bd2b4fc    92  fmov x1, d0
0xffff8bd2b500    96  lsr x1, x1, #32
0xffff8bd2b504   100  cmp w1, #0x0 (0)
0xffff8bd2b508   104  b.lt #+0xc (addr 0xffff8bd2b514)
0xffff8bd2b50c   108  lsl x0, x0, #32
0xffff8bd2b510   112  b #+0x40 (addr 0xffff8bd2b550)
0xffff8bd2b514   116  movz x0, #0xe2c0
0xffff8bd2b518   120  movk x0, #0x2cb8, lsl #16
0xffff8bd2b51c   124  ldr x1, [x0]
0xffff8bd2b520   128  movz x2, #0xe2c8
0xffff8bd2b524   132  movk x2, #0x2cb8, lsl #16
0xffff8bd2b528   136  ldr x2, [x2]
0xffff8bd2b52c   140  sub x2, x2, x1
0xffff8bd2b530   144  cmp x2, #0x10 (16)
0xffff8bd2b534   148  b.lt #+0x40 (addr 0xffff8bd2b574)
0xffff8bd2b538   152  add x2, x1, #0x10 (16)
0xffff8bd2b53c   156  str x2, [x0]
0xffff8bd2b540   160  add x0, x1, #0x1 (1)
0xffff8bd2b544   164  ldr x1, [x26, #120]
0xffff8bd2b548   168  stur x1, [x0, #-1]
0xffff8bd2b54c   172  stur d0, [x0, #7]
0xffff8bd2b550   176  mov jssp, fp
0xffff8bd2b554   180  ldp fp, lr, [jssp], #16
0xffff8bd2b558   184  add jssp, jssp, #0x10 (16)
0xffff8bd2b55c   188  ret
0xffff8bd2b560   192  b #-0x10 (addr 0xffff8bd2b550)
0xffff8bd2b564   196  ldr cp, [jssp, #24]
0xffff8bd2b568   200  ldr x16, pc+88 (addr 0x0000ffff8bd2b5c0)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff8bd2b56c   204  blr x16
0xffff8bd2b570   208  b #-0xb0 (addr 0xffff8bd2b4c0)
0xffff8bd2b574   212  movz x0, #0x0
0xffff8bd2b578   216  lsl x0, x0, #32
0xffff8bd2b57c   220  movz x1, #0x10
0xffff8bd2b580   224  lsl x1, x1, #32
0xffff8bd2b584   228  sub csp, jssp, #0x10 (16)
0xffff8bd2b588   232  sub jssp, jssp, #0x10 (16)
0xffff8bd2b58c   236  str x1, [jssp, #8]
0xffff8bd2b590   240  str x0, [jssp]
0xffff8bd2b594   244  str d0, [jssp, #24]
0xffff8bd2b598   248  movz x1, #0x5b88
0xffff8bd2b59c   252  movk x1, #0xe2, lsl #16
0xffff8bd2b5a0   256  movz x0, #0x2
0xffff8bd2b5a4   260  movz cp, #0x0
0xffff8bd2b5a8   264  ldr x16, pc+32 (addr 0x0000ffff8bd2b5c8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd2b5ac   268  blr x16
0xffff8bd2b5b0   272  ldr d0, [jssp, #8]
0xffff8bd2b5b4   276  b #-0x70 (addr 0xffff8bd2b544)
0xffff8bd2b5b8   280  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd2b5bc   284  d63f03e0       constant
0xffff8bd2b5c0   288  8bd29d80       constant
0xffff8bd2b5c4   292  0000ffff       constant
0xffff8bd2b5c8   296  8bd06060       constant
0xffff8bd2b5cc   300  0000ffff       constant


Safepoints (size = 34)
0xffff8bd2b570   208  000000 (sp -> fp)  <none>
0xffff8bd2b5b0   272  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff8bd2b568  code target (STUB)  (0xffff8bd29d80)
0xffff8bd2b5a8  code target (STUB)  (0xffff8bd06060)
0xffff8bd2b5b8  constant pool (size 24)

--- End code ---
kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff8bd2b660     0  sub csp, jssp, #0x10 (16)
0xffff8bd2b664     4  stp x2, x1, [jssp, #-16]!
0xffff8bd2b668     8  ldr x0, [jssp, #16]
0xffff8bd2b66c    12  ubfx x1, x0, #52, #11
0xffff8bd2b670    16  cmp x1, #0x453 (1107)
0xffff8bd2b674    20  csel x0, xzr, x0, ge
0xffff8bd2b678    24  b.ge #+0x1c (addr 0xffff8bd2b694)
0xffff8bd2b67c    28  ubfx x2, x0, #0, #52
0xffff8bd2b680    32  orr x2, x2, #0x10000000000000
0xffff8bd2b684    36  tst x0, #0x8000000000000000
0xffff8bd2b688    40  cneg x2, x2, ne
0xffff8bd2b68c    44  sub x1, x1, #0x433 (1075)
0xffff8bd2b690    48  lsl x0, x2, x1
0xffff8bd2b694    52  ldp x2, x1, [jssp], #16
0xffff8bd2b698    56  ret


RelocInfo (size = 0)


--- Code ---
kind = BUILTIN
name = MathClz32
compiler = turbofan
Instructions (size = 205)
0xffff8bd2b700     0  sub jssp, jssp, #0x20 (32)
0xffff8bd2b704     4  sub csp, csp, #0x20 (32)
0xffff8bd2b708     8  stp x1, cp, [jssp]
0xffff8bd2b70c    12  stp fp, lr, [jssp, #16]
0xffff8bd2b710    16  add fp, jssp, #0x10 (16)
0xffff8bd2b714    20  ldr x0, [jssp, #32]
0xffff8bd2b718    24  nop
0xffff8bd2b71c    28  nop
0xffff8bd2b720    32  and x1, x0, #0x1
0xffff8bd2b724    36  cmp x1, #0x0 (0)
0xffff8bd2b728    40  b.eq #+0x44 (addr 0xffff8bd2b76c)
0xffff8bd2b72c    44  ldur x1, [x0, #-1]
0xffff8bd2b730    48  ldr x2, [x26, #120]
0xffff8bd2b734    52  cmp x1, x2
0xffff8bd2b738    56  b.ne #+0x50 (addr 0xffff8bd2b788)
0xffff8bd2b73c    60  ldur d0, [x0, #7]
0xffff8bd2b740    64  fcvtzs x0, d0
0xffff8bd2b744    68  cmp x0, #0x1 (1)
0xffff8bd2b748    72  ccmn x0, #1, #nzcV, vc
0xffff8bd2b74c    76  b.vc #+0x1c (addr 0xffff8bd2b768)
0xffff8bd2b750    80  sub csp, jssp, #0x10 (16)
0xffff8bd2b754    84  str d0, [jssp, #-16]!
0xffff8bd2b758    88  str lr, [jssp, #8]
0xffff8bd2b75c    92  ldr x16, pc+76 (addr 0x0000ffff8bd2b7a8)    ;; code: STUB, DoubleToIStub, minor: 69660
0xffff8bd2b760    96  blr x16
0xffff8bd2b764   100  ldp xzr, lr, [jssp], #16
0xffff8bd2b768   104  b #+0x8 (addr 0xffff8bd2b770)
0xffff8bd2b76c   108  lsr x0, x0, #32
0xffff8bd2b770   112  clz w0, w0
0xffff8bd2b774   116  lsl x0, x0, #32
0xffff8bd2b778   120  mov jssp, fp
0xffff8bd2b77c   124  ldp fp, lr, [jssp], #16
0xffff8bd2b780   128  add jssp, jssp, #0x10 (16)
0xffff8bd2b784   132  ret
0xffff8bd2b788   136  mov x1, cp
0xffff8bd2b78c   140  str cp, [jssp, #8]
0xffff8bd2b790   144  ldr x16, pc+32 (addr 0x0000ffff8bd2b7b0)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff8bd2b794   148  blr x16
0xffff8bd2b798   152  ldr cp, [jssp, #8]
0xffff8bd2b79c   156  b #-0x7c (addr 0xffff8bd2b720)
0xffff8bd2b7a0   160  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd2b7a4   164  d63f03e0       constant
0xffff8bd2b7a8   168  8bd2b660       constant
0xffff8bd2b7ac   172  0000ffff       constant
0xffff8bd2b7b0   176  8bd29d80       constant
0xffff8bd2b7b4   180  0000ffff       constant


Safepoints (size = 21)
0xffff8bd2b798   152  0000 (sp -> fp)  <none>

RelocInfo (size = 10)
0xffff8bd2b75c  code target (STUB)  (0xffff8bd2b660)
0xffff8bd2b790  code target (STUB)  (0xffff8bd29d80)
0xffff8bd2b7a0  constant pool (size 24)

--- End code ---
--- Code ---
kind = BUILTIN
name = MathFloor
compiler = turbofan
Instructions (size = 338)
0xffff8bd2b840     0  sub jssp, jssp, #0x20 (32)
0xffff8bd2b844     4  sub csp, csp, #0x20 (32)
0xffff8bd2b848     8  stp x1, cp, [jssp]
0xffff8bd2b84c    12  stp fp, lr, [jssp, #16]
0xffff8bd2b850    16  add fp, jssp, #0x10 (16)
0xffff8bd2b854    20  sub csp, jssp, #0x10 (16)
0xffff8bd2b858    24  sub jssp, jssp, #0x10 (16)
0xffff8bd2b85c    28  ldr x0, [jssp, #48]
0xffff8bd2b860    32  and x1, x0, #0x1
0xffff8bd2b864    36  cmp x1, #0x0 (0)
0xffff8bd2b868    40  b.eq #+0x98 (addr 0xffff8bd2b900)
0xffff8bd2b86c    44  ldur x1, [x0, #-1]
0xffff8bd2b870    48  ldr x2, [x26, #120]
0xffff8bd2b874    52  cmp x1, x2
0xffff8bd2b878    56  b.ne #+0x8c (addr 0xffff8bd2b904)
0xffff8bd2b87c    60  ldur d0, [x0, #7]
0xffff8bd2b880    64  frintm d0, d0
0xffff8bd2b884    68  fcvtzs w0, d0
0xffff8bd2b888    72  scvtf d1, w0
0xffff8bd2b88c    76  fcmp d0, d1
0xffff8bd2b890    80  b.ne #+0x24 (addr 0xffff8bd2b8b4)
0xffff8bd2b894    84  fcmp d0, #0.0
0xffff8bd2b898    88  b.ne #+0x14 (addr 0xffff8bd2b8ac)
0xffff8bd2b89c    92  fmov x1, d0
0xffff8bd2b8a0    96  lsr x1, x1, #32
0xffff8bd2b8a4   100  cmp w1, #0x0 (0)
0xffff8bd2b8a8   104  b.lt #+0xc (addr 0xffff8bd2b8b4)
0xffff8bd2b8ac   108  lsl x0, x0, #32
0xffff8bd2b8b0   112  b #+0x40 (addr 0xffff8bd2b8f0)
0xffff8bd2b8b4   116  movz x0, #0xe2c0
0xffff8bd2b8b8   120  movk x0, #0x2cb8, lsl #16
0xffff8bd2b8bc   124  ldr x1, [x0]
0xffff8bd2b8c0   128  movz x2, #0xe2c8
0xffff8bd2b8c4   132  movk x2, #0x2cb8, lsl #16
0xffff8bd2b8c8   136  ldr x2, [x2]
0xffff8bd2b8cc   140  sub x2, x2, x1
0xffff8bd2b8d0   144  cmp x2, #0x10 (16)
0xffff8bd2b8d4   148  b.lt #+0x40 (addr 0xffff8bd2b914)
0xffff8bd2b8d8   152  add x2, x1, #0x10 (16)
0xffff8bd2b8dc   156  str x2, [x0]
0xffff8bd2b8e0   160  add x0, x1, #0x1 (1)
0xffff8bd2b8e4   164  ldr x1, [x26, #120]
0xffff8bd2b8e8   168  stur x1, [x0, #-1]
0xffff8bd2b8ec   172  stur d0, [x0, #7]
0xffff8bd2b8f0   176  mov jssp, fp
0xffff8bd2b8f4   180  ldp fp, lr, [jssp], #16
0xffff8bd2b8f8   184  add jssp, jssp, #0x10 (16)
0xffff8bd2b8fc   188  ret
0xffff8bd2b900   192  b #-0x10 (addr 0xffff8bd2b8f0)
0xffff8bd2b904   196  ldr cp, [jssp, #24]
0xffff8bd2b908   200  ldr x16, pc+88 (addr 0x0000ffff8bd2b960)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff8bd2b90c   204  blr x16
0xffff8bd2b910   208  b #-0xb0 (addr 0xffff8bd2b860)
0xffff8bd2b914   212  movz x0, #0x0
0xffff8bd2b918   216  lsl x0, x0, #32
0xffff8bd2b91c   220  movz x1, #0x10
0xffff8bd2b920   224  lsl x1, x1, #32
0xffff8bd2b924   228  sub csp, jssp, #0x10 (16)
0xffff8bd2b928   232  sub jssp, jssp, #0x10 (16)
0xffff8bd2b92c   236  str x1, [jssp, #8]
0xffff8bd2b930   240  str x0, [jssp]
0xffff8bd2b934   244  str d0, [jssp, #24]
0xffff8bd2b938   248  movz x1, #0x5b88
0xffff8bd2b93c   252  movk x1, #0xe2, lsl #16
0xffff8bd2b940   256  movz x0, #0x2
0xffff8bd2b944   260  movz cp, #0x0
0xffff8bd2b948   264  ldr x16, pc+32 (addr 0x0000ffff8bd2b968)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd2b94c   268  blr x16
0xffff8bd2b950   272  ldr d0, [jssp, #8]
0xffff8bd2b954   276  b #-0x70 (addr 0xffff8bd2b8e4)
0xffff8bd2b958   280  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd2b95c   284  d63f03e0       constant
0xffff8bd2b960   288  8bd29d80       constant
0xffff8bd2b964   292  0000ffff       constant
0xffff8bd2b968   296  8bd06060       constant
0xffff8bd2b96c   300  0000ffff       constant


Safepoints (size = 34)
0xffff8bd2b910   208  000000 (sp -> fp)  <none>
0xffff8bd2b950   272  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff8bd2b908  code target (STUB)  (0xffff8bd29d80)
0xffff8bd2b948  code target (STUB)  (0xffff8bd06060)
0xffff8bd2b958  constant pool (size 24)

--- End code ---
--- Code ---
kind = BUILTIN
name = MathRound
compiler = turbofan
Instructions (size = 370)
0xffff8bd2ba00     0  sub jssp, jssp, #0x20 (32)
0xffff8bd2ba04     4  sub csp, csp, #0x20 (32)
0xffff8bd2ba08     8  stp x1, cp, [jssp]
0xffff8bd2ba0c    12  stp fp, lr, [jssp, #16]
0xffff8bd2ba10    16  add fp, jssp, #0x10 (16)
0xffff8bd2ba14    20  sub csp, jssp, #0x10 (16)
0xffff8bd2ba18    24  sub jssp, jssp, #0x10 (16)
0xffff8bd2ba1c    28  ldr x0, [jssp, #48]
0xffff8bd2ba20    32  and x1, x0, #0x1
0xffff8bd2ba24    36  cmp x1, #0x0 (0)
0xffff8bd2ba28    40  b.eq #+0xb4 (addr 0xffff8bd2badc)
0xffff8bd2ba2c    44  ldur x1, [x0, #-1]
0xffff8bd2ba30    48  ldr x2, [x26, #120]
0xffff8bd2ba34    52  cmp x1, x2
0xffff8bd2ba38    56  b.ne #+0xa8 (addr 0xffff8bd2bae0)
0xffff8bd2ba3c    60  ldur d0, [x0, #7]
0xffff8bd2ba40    64  frintp d1, d0
0xffff8bd2ba44    68  fmov d2, #0x60 (0.5000)
0xffff8bd2ba48    72  fsub d2, d1, d2
0xffff8bd2ba4c    76  fcmp d2, d0
0xffff8bd2ba50    80  b.ls #+0x10 (addr 0xffff8bd2ba60)
0xffff8bd2ba54    84  fmov d0, #0x70 (1.0000)
0xffff8bd2ba58    88  fsub d0, d1, d0
0xffff8bd2ba5c    92  fmov d1, d0
0xffff8bd2ba60    96  fcvtzs w0, d1
0xffff8bd2ba64   100  scvtf d0, w0
0xffff8bd2ba68   104  fcmp d1, d0
0xffff8bd2ba6c   108  b.ne #+0x24 (addr 0xffff8bd2ba90)
0xffff8bd2ba70   112  fcmp d1, #0.0
0xffff8bd2ba74   116  b.ne #+0x14 (addr 0xffff8bd2ba88)
0xffff8bd2ba78   120  fmov x1, d1
0xffff8bd2ba7c   124  lsr x1, x1, #32
0xffff8bd2ba80   128  cmp w1, #0x0 (0)
0xffff8bd2ba84   132  b.lt #+0xc (addr 0xffff8bd2ba90)
0xffff8bd2ba88   136  lsl x0, x0, #32
0xffff8bd2ba8c   140  b #+0x40 (addr 0xffff8bd2bacc)
0xffff8bd2ba90   144  movz x0, #0xe2c0
0xffff8bd2ba94   148  movk x0, #0x2cb8, lsl #16
0xffff8bd2ba98   152  ldr x1, [x0]
0xffff8bd2ba9c   156  movz x2, #0xe2c8
0xffff8bd2baa0   160  movk x2, #0x2cb8, lsl #16
0xffff8bd2baa4   164  ldr x2, [x2]
0xffff8bd2baa8   168  sub x2, x2, x1
0xffff8bd2baac   172  cmp x2, #0x10 (16)
0xffff8bd2bab0   176  b.lt #+0x40 (addr 0xffff8bd2baf0)
0xffff8bd2bab4   180  add x2, x1, #0x10 (16)
0xffff8bd2bab8   184  str x2, [x0]
0xffff8bd2babc   188  add x0, x1, #0x1 (1)
0xffff8bd2bac0   192  ldr x1, [x26, #120]
0xffff8bd2bac4   196  stur x1, [x0, #-1]
0xffff8bd2bac8   200  stur d1, [x0, #7]
0xffff8bd2bacc   204  mov jssp, fp
0xffff8bd2bad0   208  ldp fp, lr, [jssp], #16
0xffff8bd2bad4   212  add jssp, jssp, #0x10 (16)
0xffff8bd2bad8   216  ret
0xffff8bd2badc   220  b #-0x10 (addr 0xffff8bd2bacc)
0xffff8bd2bae0   224  ldr cp, [jssp, #24]
0xffff8bd2bae4   228  ldr x16, pc+92 (addr 0x0000ffff8bd2bb40)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff8bd2bae8   232  blr x16
0xffff8bd2baec   236  b #-0xcc (addr 0xffff8bd2ba20)
0xffff8bd2baf0   240  movz x0, #0x0
0xffff8bd2baf4   244  lsl x0, x0, #32
0xffff8bd2baf8   248  movz x1, #0x10
0xffff8bd2bafc   252  lsl x1, x1, #32
0xffff8bd2bb00   256  sub csp, jssp, #0x10 (16)
0xffff8bd2bb04   260  sub jssp, jssp, #0x10 (16)
0xffff8bd2bb08   264  str x1, [jssp, #8]
0xffff8bd2bb0c   268  str x0, [jssp]
0xffff8bd2bb10   272  fmov d0, d1
0xffff8bd2bb14   276  str d1, [jssp, #24]
0xffff8bd2bb18   280  movz x1, #0x5b88
0xffff8bd2bb1c   284  movk x1, #0xe2, lsl #16
0xffff8bd2bb20   288  movz x0, #0x2
0xffff8bd2bb24   292  movz cp, #0x0
0xffff8bd2bb28   296  ldr x16, pc+32 (addr 0x0000ffff8bd2bb48)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd2bb2c   300  blr x16
0xffff8bd2bb30   304  ldr d1, [jssp, #8]
0xffff8bd2bb34   308  b #-0x74 (addr 0xffff8bd2bac0)
0xffff8bd2bb38   312  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd2bb3c   316  d63f03e0       constant
0xffff8bd2bb40   320  8bd29d80       constant
0xffff8bd2bb44   324  0000ffff       constant
0xffff8bd2bb48   328  8bd06060       constant
0xffff8bd2bb4c   332  0000ffff       constant


Safepoints (size = 34)
0xffff8bd2baec   236  000000 (sp -> fp)  <none>
0xffff8bd2bb30   304  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff8bd2bae4  code target (STUB)  (0xffff8bd29d80)
0xffff8bd2bb28  code target (STUB)  (0xffff8bd06060)
0xffff8bd2bb38  constant pool (size 24)

--- End code ---
--- Code ---
kind = BUILTIN
name = MathSqrt
compiler = turbofan
Instructions (size = 346)
0xffff8bd2bbe0     0  sub jssp, jssp, #0x20 (32)
0xffff8bd2bbe4     4  sub csp, csp, #0x20 (32)
0xffff8bd2bbe8     8  stp x1, cp, [jssp]
0xffff8bd2bbec    12  stp fp, lr, [jssp, #16]
0xffff8bd2bbf0    16  add fp, jssp, #0x10 (16)
0xffff8bd2bbf4    20  sub csp, jssp, #0x10 (16)
0xffff8bd2bbf8    24  sub jssp, jssp, #0x10 (16)
0xffff8bd2bbfc    28  ldr x0, [jssp, #48]
0xffff8bd2bc00    32  and x1, x0, #0x1
0xffff8bd2bc04    36  cmp x1, #0x0 (0)
0xffff8bd2bc08    40  b.eq #+0x1c (addr 0xffff8bd2bc24)
0xffff8bd2bc0c    44  ldur x1, [x0, #-1]
0xffff8bd2bc10    48  ldr x2, [x26, #120]
0xffff8bd2bc14    52  cmp x1, x2
0xffff8bd2bc18    56  b.ne #+0x94 (addr 0xffff8bd2bcac)
0xffff8bd2bc1c    60  ldur d0, [x0, #7]
0xffff8bd2bc20    64  b #+0xc (addr 0xffff8bd2bc2c)
0xffff8bd2bc24    68  asr x0, x0, #32
0xffff8bd2bc28    72  scvtf d0, w0
0xffff8bd2bc2c    76  fsqrt d0, d0
0xffff8bd2bc30    80  fcvtzs w0, d0
0xffff8bd2bc34    84  scvtf d1, w0
0xffff8bd2bc38    88  fcmp d0, d1
0xffff8bd2bc3c    92  b.ne #+0x24 (addr 0xffff8bd2bc60)
0xffff8bd2bc40    96  fcmp d0, #0.0
0xffff8bd2bc44   100  b.ne #+0x14 (addr 0xffff8bd2bc58)
0xffff8bd2bc48   104  fmov x1, d0
0xffff8bd2bc4c   108  lsr x1, x1, #32
0xffff8bd2bc50   112  cmp w1, #0x0 (0)
0xffff8bd2bc54   116  b.lt #+0xc (addr 0xffff8bd2bc60)
0xffff8bd2bc58   120  lsl x0, x0, #32
0xffff8bd2bc5c   124  b #+0x40 (addr 0xffff8bd2bc9c)
0xffff8bd2bc60   128  movz x0, #0xe2c0
0xffff8bd2bc64   132  movk x0, #0x2cb8, lsl #16
0xffff8bd2bc68   136  ldr x1, [x0]
0xffff8bd2bc6c   140  movz x2, #0xe2c8
0xffff8bd2bc70   144  movk x2, #0x2cb8, lsl #16
0xffff8bd2bc74   148  ldr x2, [x2]
0xffff8bd2bc78   152  sub x2, x2, x1
0xffff8bd2bc7c   156  cmp x2, #0x10 (16)
0xffff8bd2bc80   160  b.lt #+0x3c (addr 0xffff8bd2bcbc)
0xffff8bd2bc84   164  add x2, x1, #0x10 (16)
0xffff8bd2bc88   168  str x2, [x0]
0xffff8bd2bc8c   172  add x0, x1, #0x1 (1)
0xffff8bd2bc90   176  ldr x1, [x26, #120]
0xffff8bd2bc94   180  stur x1, [x0, #-1]
0xffff8bd2bc98   184  stur d0, [x0, #7]
0xffff8bd2bc9c   188  mov jssp, fp
0xffff8bd2bca0   192  ldp fp, lr, [jssp], #16
0xffff8bd2bca4   196  add jssp, jssp, #0x10 (16)
0xffff8bd2bca8   200  ret
0xffff8bd2bcac   204  ldr cp, [jssp, #24]
0xffff8bd2bcb0   208  ldr x16, pc+88 (addr 0x0000ffff8bd2bd08)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff8bd2bcb4   212  blr x16
0xffff8bd2bcb8   216  b #-0xb8 (addr 0xffff8bd2bc00)
0xffff8bd2bcbc   220  movz x0, #0x0
0xffff8bd2bcc0   224  lsl x0, x0, #32
0xffff8bd2bcc4   228  movz x1, #0x10
0xffff8bd2bcc8   232  lsl x1, x1, #32
0xffff8bd2bccc   236  sub csp, jssp, #0x10 (16)
0xffff8bd2bcd0   240  sub jssp, jssp, #0x10 (16)
0xffff8bd2bcd4   244  str x1, [jssp, #8]
0xffff8bd2bcd8   248  str x0, [jssp]
0xffff8bd2bcdc   252  str d0, [jssp, #24]
0xffff8bd2bce0   256  movz x1, #0x5b88
0xffff8bd2bce4   260  movk x1, #0xe2, lsl #16
0xffff8bd2bce8   264  movz x0, #0x2
0xffff8bd2bcec   268  movz cp, #0x0
0xffff8bd2bcf0   272  ldr x16, pc+32 (addr 0x0000ffff8bd2bd10)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd2bcf4   276  blr x16
0xffff8bd2bcf8   280  ldr d0, [jssp, #8]
0xffff8bd2bcfc   284  b #-0x6c (addr 0xffff8bd2bc90)
0xffff8bd2bd00   288  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd2bd04   292  d63f03e0       constant
0xffff8bd2bd08   296  8bd29d80       constant
0xffff8bd2bd0c   300  0000ffff       constant
0xffff8bd2bd10   304  8bd06060       constant
0xffff8bd2bd14   308  0000ffff       constant


Safepoints (size = 34)
0xffff8bd2bcb8   216  000000 (sp -> fp)  <none>
0xffff8bd2bcf8   280  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff8bd2bcb0  code target (STUB)  (0xffff8bd29d80)
0xffff8bd2bcf0  code target (STUB)  (0xffff8bd06060)
0xffff8bd2bd00  constant pool (size 24)

--- End code ---
--- Code ---
kind = BUILTIN
name = MathTrunc
compiler = turbofan
Instructions (size = 338)
0xffff8bd2bda0     0  sub jssp, jssp, #0x20 (32)
0xffff8bd2bda4     4  sub csp, csp, #0x20 (32)
0xffff8bd2bda8     8  stp x1, cp, [jssp]
0xffff8bd2bdac    12  stp fp, lr, [jssp, #16]
0xffff8bd2bdb0    16  add fp, jssp, #0x10 (16)
0xffff8bd2bdb4    20  sub csp, jssp, #0x10 (16)
0xffff8bd2bdb8    24  sub jssp, jssp, #0x10 (16)
0xffff8bd2bdbc    28  ldr x0, [jssp, #48]
0xffff8bd2bdc0    32  and x1, x0, #0x1
0xffff8bd2bdc4    36  cmp x1, #0x0 (0)
0xffff8bd2bdc8    40  b.eq #+0x98 (addr 0xffff8bd2be60)
0xffff8bd2bdcc    44  ldur x1, [x0, #-1]
0xffff8bd2bdd0    48  ldr x2, [x26, #120]
0xffff8bd2bdd4    52  cmp x1, x2
0xffff8bd2bdd8    56  b.ne #+0x8c (addr 0xffff8bd2be64)
0xffff8bd2bddc    60  ldur d0, [x0, #7]
0xffff8bd2bde0    64  frintz d0, d0
0xffff8bd2bde4    68  fcvtzs w0, d0
0xffff8bd2bde8    72  scvtf d1, w0
0xffff8bd2bdec    76  fcmp d0, d1
0xffff8bd2bdf0    80  b.ne #+0x24 (addr 0xffff8bd2be14)
0xffff8bd2bdf4    84  fcmp d0, #0.0
0xffff8bd2bdf8    88  b.ne #+0x14 (addr 0xffff8bd2be0c)
0xffff8bd2bdfc    92  fmov x1, d0
0xffff8bd2be00    96  lsr x1, x1, #32
0xffff8bd2be04   100  cmp w1, #0x0 (0)
0xffff8bd2be08   104  b.lt #+0xc (addr 0xffff8bd2be14)
0xffff8bd2be0c   108  lsl x0, x0, #32
0xffff8bd2be10   112  b #+0x40 (addr 0xffff8bd2be50)
0xffff8bd2be14   116  movz x0, #0xe2c0
0xffff8bd2be18   120  movk x0, #0x2cb8, lsl #16
0xffff8bd2be1c   124  ldr x1, [x0]
0xffff8bd2be20   128  movz x2, #0xe2c8
0xffff8bd2be24   132  movk x2, #0x2cb8, lsl #16
0xffff8bd2be28   136  ldr x2, [x2]
0xffff8bd2be2c   140  sub x2, x2, x1
0xffff8bd2be30   144  cmp x2, #0x10 (16)
0xffff8bd2be34   148  b.lt #+0x40 (addr 0xffff8bd2be74)
0xffff8bd2be38   152  add x2, x1, #0x10 (16)
0xffff8bd2be3c   156  str x2, [x0]
0xffff8bd2be40   160  add x0, x1, #0x1 (1)
0xffff8bd2be44   164  ldr x1, [x26, #120]
0xffff8bd2be48   168  stur x1, [x0, #-1]
0xffff8bd2be4c   172  stur d0, [x0, #7]
0xffff8bd2be50   176  mov jssp, fp
0xffff8bd2be54   180  ldp fp, lr, [jssp], #16
0xffff8bd2be58   184  add jssp, jssp, #0x10 (16)
0xffff8bd2be5c   188  ret
0xffff8bd2be60   192  b #-0x10 (addr 0xffff8bd2be50)
0xffff8bd2be64   196  ldr cp, [jssp, #24]
0xffff8bd2be68   200  ldr x16, pc+88 (addr 0x0000ffff8bd2bec0)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff8bd2be6c   204  blr x16
0xffff8bd2be70   208  b #-0xb0 (addr 0xffff8bd2bdc0)
0xffff8bd2be74   212  movz x0, #0x0
0xffff8bd2be78   216  lsl x0, x0, #32
0xffff8bd2be7c   220  movz x1, #0x10
0xffff8bd2be80   224  lsl x1, x1, #32
0xffff8bd2be84   228  sub csp, jssp, #0x10 (16)
0xffff8bd2be88   232  sub jssp, jssp, #0x10 (16)
0xffff8bd2be8c   236  str x1, [jssp, #8]
0xffff8bd2be90   240  str x0, [jssp]
0xffff8bd2be94   244  str d0, [jssp, #24]
0xffff8bd2be98   248  movz x1, #0x5b88
0xffff8bd2be9c   252  movk x1, #0xe2, lsl #16
0xffff8bd2bea0   256  movz x0, #0x2
0xffff8bd2bea4   260  movz cp, #0x0
0xffff8bd2bea8   264  ldr x16, pc+32 (addr 0x0000ffff8bd2bec8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd2beac   268  blr x16
0xffff8bd2beb0   272  ldr d0, [jssp, #8]
0xffff8bd2beb4   276  b #-0x70 (addr 0xffff8bd2be44)
0xffff8bd2beb8   280  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd2bebc   284  d63f03e0       constant
0xffff8bd2bec0   288  8bd29d80       constant
0xffff8bd2bec4   292  0000ffff       constant
0xffff8bd2bec8   296  8bd06060       constant
0xffff8bd2becc   300  0000ffff       constant


Safepoints (size = 34)
0xffff8bd2be70   208  000000 (sp -> fp)  <none>
0xffff8bd2beb0   272  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff8bd2be68  code target (STUB)  (0xffff8bd29d80)
0xffff8bd2bea8  code target (STUB)  (0xffff8bd06060)
0xffff8bd2beb8  constant pool (size 24)

--- End code ---
--- Code ---
kind = BUILTIN
name = ObjectHasOwnProperty
compiler = turbofan
Instructions (size = 421)
0xffff8bd2bf60     0  sub jssp, jssp, #0x20 (32)
0xffff8bd2bf64     4  sub csp, csp, #0x20 (32)
0xffff8bd2bf68     8  stp x1, cp, [jssp]
0xffff8bd2bf6c    12  stp fp, lr, [jssp, #16]
0xffff8bd2bf70    16  add fp, jssp, #0x10 (16)
0xffff8bd2bf74    20  ldr x0, [jssp, #40]
0xffff8bd2bf78    24  and x1, x0, #0x1
0xffff8bd2bf7c    28  cmp x1, #0x0 (0)
0xffff8bd2bf80    32  b.eq #+0x154 (addr 0xffff8bd2c0d4)
0xffff8bd2bf84    36  ldur x1, [x0, #-1]
0xffff8bd2bf88    40  ldrb w2, [x1, #11]
0xffff8bd2bf8c    44  ldr x3, [jssp, #32]
0xffff8bd2bf90    48  and x4, x3, #0x1
0xffff8bd2bf94    52  cmp x4, #0x0 (0)
0xffff8bd2bf98    56  b.eq #+0x94 (addr 0xffff8bd2c02c)
0xffff8bd2bf9c    60  ldur x4, [x3, #-1]
0xffff8bd2bfa0    64  ldrb w4, [x4, #11]
0xffff8bd2bfa4    68  cmp w4, #0x80 (128)
0xffff8bd2bfa8    72  b.eq #+0x1c (addr 0xffff8bd2bfc4)
0xffff8bd2bfac    76  tst x4, #0xc0
0xffff8bd2bfb0    80  b.ne #+0xf8 (addr 0xffff8bd2c0a8)
0xffff8bd2bfb4    84  ldur w4, [x3, #7]
0xffff8bd2bfb8    88  tbnz w4, #1, #+0xc (addr 0xffff8bd2bfc4)
0xffff8bd2bfbc    92  ubfx w4, w4, #2, #24
0xffff8bd2bfc0    96  b #+0x7c (addr 0xffff8bd2c03c)
0xffff8bd2bfc4   100  cmp w2, #0xb3 (179)
0xffff8bd2bfc8   104  cset x4, le
0xffff8bd2bfcc   108  cmp w2, #0xb6 (182)
0xffff8bd2bfd0   112  cset x2, eq
0xffff8bd2bfd4   116  orr w2, w4, w2
0xffff8bd2bfd8   120  cbnz w2, #+0xd0 (addr 0xffff8bd2c0a8)
0xffff8bd2bfdc   124  ldur w2, [x1, #15]
0xffff8bd2bfe0   128  ubfx w4, w2, #20, #1
0xffff8bd2bfe4   132  cbnz w4, #+0xc4 (addr 0xffff8bd2c0a8)
0xffff8bd2bfe8   136  ubfx w2, w2, #10, #10
0xffff8bd2bfec   140  cmp w2, #0x100 (256)
0xffff8bd2bff0   144  b.gt #+0xb8 (addr 0xffff8bd2c0a8)
0xffff8bd2bff4   148  ldur x0, [x1, #47]
0xffff8bd2bff8   152  movz x1, #0x0
0xffff8bd2bffc   156  nop
0xffff8bd2c000   160  cmp w1, w2
0xffff8bd2c004   164  b.eq #+0xd0 (addr 0xffff8bd2c0d4)
0xffff8bd2c008   168  add w4, w1, w1, lsl #1
0xffff8bd2c00c   172  add w4, w4, #0x2 (2)
0xffff8bd2c010   176  lsl x4, x4, #3
0xffff8bd2c014   180  add x4, x4, #0xf (15)
0xffff8bd2c018   184  ldr x4, [x0, x4]
0xffff8bd2c01c   188  cmp x4, x3
0xffff8bd2c020   192  b.eq #+0x70 (addr 0xffff8bd2c090)
0xffff8bd2c024   196  add w1, w1, #0x1 (1)
0xffff8bd2c028   200  b #-0x28 (addr 0xffff8bd2c000)
0xffff8bd2c02c   204  and x4, x3, #0x8000000000000001
0xffff8bd2c030   208  cmp x4, #0x0 (0)
0xffff8bd2c034   212  b.ne #+0x74 (addr 0xffff8bd2c0a8)
0xffff8bd2c038   216  asr x4, x3, #32
0xffff8bd2c03c   220  cmp w2, #0xb4 (180)
0xffff8bd2c040   224  cset x5, le
0xffff8bd2c044   228  cmp w2, #0xb6 (182)
0xffff8bd2c048   232  cset x2, eq
0xffff8bd2c04c   236  orr w2, w5, w2
0xffff8bd2c050   240  cbnz w2, #+0x58 (addr 0xffff8bd2c0a8)
0xffff8bd2c054   244  ldrb w1, [x1, #13]
0xffff8bd2c058   248  ubfx w1, w1, #3, #5
0xffff8bd2c05c   252  cmp w1, #0x3 (3)
0xffff8bd2c060   256  b.gt #+0x48 (addr 0xffff8bd2c0a8)
0xffff8bd2c064   260  ldur x0, [x0, #15]
0xffff8bd2c068   264  ldur x1, [x0, #7]
0xffff8bd2c06c   268  lsr x1, x1, #32
0xffff8bd2c070   272  cmp w4, w1
0xffff8bd2c074   276  b.ge #+0x60 (addr 0xffff8bd2c0d4)
0xffff8bd2c078   280  lsl x1, x4, #3
0xffff8bd2c07c   284  add x1, x1, #0xf (15)
0xffff8bd2c080   288  ldr x0, [x0, x1]
0xffff8bd2c084   292  ldr x1, [x26, #88]
0xffff8bd2c088   296  cmp x0, x1
0xffff8bd2c08c   300  b.eq #+0x48 (addr 0xffff8bd2c0d4)
0xffff8bd2c090   304  ldr x0, [x26, #64]
0xffff8bd2c094   308  mov jssp, fp
0xffff8bd2c098   312  ldp fp, lr, [jssp], #16
0xffff8bd2c09c   316  add jssp, jssp, #0x10 (16)
0xffff8bd2c0a0   320  ret
0xffff8bd2c0a4   324  b #+0x30 (addr 0xffff8bd2c0d4)
0xffff8bd2c0a8   328  sub csp, jssp, #0x10 (16)
0xffff8bd2c0ac   332  sub jssp, jssp, #0x10 (16)
0xffff8bd2c0b0   336  str x0, [jssp, #8]
0xffff8bd2c0b4   340  str x3, [jssp]
0xffff8bd2c0b8   344  movz x1, #0xf6c8
0xffff8bd2c0bc   348  movk x1, #0xe3, lsl #16
0xffff8bd2c0c0   352  movz x0, #0x2
0xffff8bd2c0c4   356  ldr cp, [jssp, #24]
0xffff8bd2c0c8   360  ldr x16, pc+32 (addr 0x0000ffff8bd2c0e8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd2c0cc   364  blr x16
0xffff8bd2c0d0   368  b #-0x3c (addr 0xffff8bd2c094)
0xffff8bd2c0d4   372  ldr x0, [x26, #72]
0xffff8bd2c0d8   376  b #-0x44 (addr 0xffff8bd2c094)
0xffff8bd2c0dc   380  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd2c0e0   384  d63f03e0       constant
0xffff8bd2c0e4   388  d503201f       constant
0xffff8bd2c0e8   392  8bd06060       constant
0xffff8bd2c0ec   396  0000ffff       constant


Safepoints (size = 21)
0xffff8bd2c0d0   368  0000 (sp -> fp)  <none>

RelocInfo (size = 9)
0xffff8bd2c0c8  code target (STUB)  (0xffff8bd06060)
0xffff8bd2c0dc  constant pool (size 20)

--- End code ---
kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff8bd2c580     0  adr xzr, #+0x40 (addr 0xffff8bd2c5c0)
0xffff8bd2c584     4  adr xzr, #+0x2a8 (addr 0xffff8bd2c82c)
0xffff8bd2c588     8  ldr x16, pc+1368 (addr 0x0000ffff8bd2cae0)    ;; external reference (store_buffer_top)
0xffff8bd2c58c    12  ldr x6, [x16]
0xffff8bd2c590    16  str x7, [x6], #8
0xffff8bd2c594    20  str x6, [x16]
0xffff8bd2c598    24  tst x6, #0x1ffff
0xffff8bd2c59c    28  b.eq #+0x8 (addr 0xffff8bd2c5a4)
0xffff8bd2c5a0    32  ret
0xffff8bd2c5a4    36  sub csp, jssp, #0x8 (8)
0xffff8bd2c5a8    40  str lr, [jssp, #-8]!
0xffff8bd2c5ac    44  ldr x17, pc+1340 (addr 0x0000ffff8bd2cae8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2c5b0    48  blr x17
0xffff8bd2c5b4    52  ldr lr, [jssp], #8
0xffff8bd2c5b8    56  ret
0xffff8bd2c5bc    60  ret
0xffff8bd2c5c0    64  sub csp, jssp, #0x10 (16)
0xffff8bd2c5c4    68  stp x1, x0, [jssp, #-16]!
0xffff8bd2c5c8    72  ldr x6, [x7]
0xffff8bd2c5cc    76  and x16, x6, #0xfffffffffff00000
0xffff8bd2c5d0    80  ldr x16, [x16, #8]
0xffff8bd2c5d4    84  tst x16, #0x18
0xffff8bd2c5d8    88  b.eq #+0x17c (addr 0xffff8bd2c754)
0xffff8bd2c5dc    92  and x16, x5, #0xfffffffffff00000
0xffff8bd2c5e0    96  ldr x16, [x16, #8]
0xffff8bd2c5e4   100  tst x16, #0x18
0xffff8bd2c5e8   104  b.ne #+0x16c (addr 0xffff8bd2c754)
0xffff8bd2c5ec   108  and x6, x5, #0xfffffffffff00000
0xffff8bd2c5f0   112  ldr x0, [x6, #104]
0xffff8bd2c5f4   116  subs x0, x0, #0x1 (1)
0xffff8bd2c5f8   120  str x0, [x6, #104]
0xffff8bd2c5fc   124  b.mi #+0xc4 (addr 0xffff8bd2c6c0)
0xffff8bd2c600   128  ubfx x16, x5, #8, #12
0xffff8bd2c604   132  and x6, x5, #0xfffffffffff00000
0xffff8bd2c608   136  add x6, x6, x16, lsl #2
0xffff8bd2c60c   140  ubfx x0, x5, #3, #5
0xffff8bd2c610   144  ldr x6, [x6, #360]
0xffff8bd2c614   148  lsr x6, x6, x0
0xffff8bd2c618   152  tbz w6, #0, #+0x8 (addr 0xffff8bd2c620)
0xffff8bd2c61c   156  tbnz w6, #1, #+0x3c (addr 0xffff8bd2c658)
0xffff8bd2c620   160  ldp x1, x0, [jssp], #16
0xffff8bd2c624   164  ldr x16, pc+1228 (addr 0x0000ffff8bd2caf0)    ;; external reference (store_buffer_top)
0xffff8bd2c628   168  ldr x6, [x16]
0xffff8bd2c62c   172  str x7, [x6], #8
0xffff8bd2c630   176  str x6, [x16]
0xffff8bd2c634   180  tst x6, #0x1ffff
0xffff8bd2c638   184  b.eq #+0x8 (addr 0xffff8bd2c640)
0xffff8bd2c63c   188  ret
0xffff8bd2c640   192  sub csp, jssp, #0x8 (8)
0xffff8bd2c644   196  str lr, [jssp, #-8]!
0xffff8bd2c648   200  ldr x17, pc+1200 (addr 0x0000ffff8bd2caf8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2c64c   204  blr x17
0xffff8bd2c650   208  ldr lr, [jssp], #8
0xffff8bd2c654   212  ret
0xffff8bd2c658   216  ldr x6, [x7]
0xffff8bd2c65c   220  sub csp, jssp, #0x10 (16)
0xffff8bd2c660   224  stp x5, x7, [jssp, #-16]!
0xffff8bd2c664   228  ubfx x16, x6, #8, #12
0xffff8bd2c668   232  and x0, x6, #0xfffffffffff00000
0xffff8bd2c66c   236  add x0, x0, x16, lsl #2
0xffff8bd2c670   240  ubfx x5, x6, #3, #5
0xffff8bd2c674   244  ldr x7, [x0, #360]
0xffff8bd2c678   248  lsr x7, x7, x5
0xffff8bd2c67c   252  tbz w7, #0, #+0x40 (addr 0xffff8bd2c6bc)
0xffff8bd2c680   256  ldp x5, x7, [jssp], #16
0xffff8bd2c684   260  ldp x1, x0, [jssp], #16
0xffff8bd2c688   264  ldr x16, pc+1144 (addr 0x0000ffff8bd2cb00)    ;; external reference (store_buffer_top)
0xffff8bd2c68c   268  ldr x6, [x16]
0xffff8bd2c690   272  str x7, [x6], #8
0xffff8bd2c694   276  str x6, [x16]
0xffff8bd2c698   280  tst x6, #0x1ffff
0xffff8bd2c69c   284  b.eq #+0x8 (addr 0xffff8bd2c6a4)
0xffff8bd2c6a0   288  ret
0xffff8bd2c6a4   292  sub csp, jssp, #0x8 (8)
0xffff8bd2c6a8   296  str lr, [jssp, #-8]!
0xffff8bd2c6ac   300  ldr x17, pc+1116 (addr 0x0000ffff8bd2cb08)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2c6b0   304  blr x17
0xffff8bd2c6b4   308  ldr lr, [jssp], #8
0xffff8bd2c6b8   312  ret
0xffff8bd2c6bc   316  ldp x5, x7, [jssp], #16
0xffff8bd2c6c0   320  sub csp, jssp, #0x78 (120)
0xffff8bd2c6c4   324  stp x14, x15, [jssp, #-32]!
0xffff8bd2c6c8   328  stp x18, lr, [jssp, #16]
0xffff8bd2c6cc   332  stp x10, x11, [jssp, #-32]!
0xffff8bd2c6d0   336  stp x12, x13, [jssp, #16]
0xffff8bd2c6d4   340  stp x5, x7, [jssp, #-32]!
0xffff8bd2c6d8   344  stp x8, x9, [jssp, #16]
0xffff8bd2c6dc   348  stp x2, x3, [jssp, #-24]!
0xffff8bd2c6e0   352  str x4, [jssp, #16]
0xffff8bd2c6e4   356  mov x0, x5
0xffff8bd2c6e8   360  mov x1, x7
0xffff8bd2c6ec   364  ldr x2, pc+1060 (addr 0x0000ffff8bd2cb10)    ;; external reference (isolate)
0xffff8bd2c6f0   368  ldr x16, pc+1064 (addr 0x0000ffff8bd2cb18)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2c6f4   372  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2c6f8   376  blr x16
0xffff8bd2c6fc   380  ldp x4, x5, [jssp, #16]
0xffff8bd2c700   384  ldp x2, x3, [jssp], #32
0xffff8bd2c704   388  ldp x9, x10, [jssp, #16]
0xffff8bd2c708   392  ldp x7, x8, [jssp], #32
0xffff8bd2c70c   396  ldp x13, x14, [jssp, #16]
0xffff8bd2c710   400  ldp x11, x12, [jssp], #32
0xffff8bd2c714   404  ldr lr, [jssp, #16]
0xffff8bd2c718   408  ldp x15, x18, [jssp], #24
0xffff8bd2c71c   412  ldp x1, x0, [jssp], #16
0xffff8bd2c720   416  ldr x16, pc+1024 (addr 0x0000ffff8bd2cb20)    ;; external reference (store_buffer_top)
0xffff8bd2c724   420  ldr x6, [x16]
0xffff8bd2c728   424  str x7, [x6], #8
0xffff8bd2c72c   428  str x6, [x16]
0xffff8bd2c730   432  tst x6, #0x1ffff
0xffff8bd2c734   436  b.eq #+0x8 (addr 0xffff8bd2c73c)
0xffff8bd2c738   440  ret
0xffff8bd2c73c   444  sub csp, jssp, #0x8 (8)
0xffff8bd2c740   448  str lr, [jssp, #-8]!
0xffff8bd2c744   452  ldr x17, pc+996 (addr 0x0000ffff8bd2cb28)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2c748   456  blr x17
0xffff8bd2c74c   460  ldr lr, [jssp], #8
0xffff8bd2c750   464  ret
0xffff8bd2c754   468  and x6, x5, #0xfffffffffff00000
0xffff8bd2c758   472  ldr x0, [x6, #104]
0xffff8bd2c75c   476  subs x0, x0, #0x1 (1)
0xffff8bd2c760   480  str x0, [x6, #104]
0xffff8bd2c764   484  b.mi #+0x64 (addr 0xffff8bd2c7c8)
0xffff8bd2c768   488  ubfx x16, x5, #8, #12
0xffff8bd2c76c   492  and x6, x5, #0xfffffffffff00000
0xffff8bd2c770   496  add x6, x6, x16, lsl #2
0xffff8bd2c774   500  ubfx x0, x5, #3, #5
0xffff8bd2c778   504  ldr x6, [x6, #360]
0xffff8bd2c77c   508  lsr x6, x6, x0
0xffff8bd2c780   512  tbz w6, #0, #+0x8 (addr 0xffff8bd2c788)
0xffff8bd2c784   516  tbnz w6, #1, #+0xc (addr 0xffff8bd2c790)
0xffff8bd2c788   520  ldp x1, x0, [jssp], #16
0xffff8bd2c78c   524  ret
0xffff8bd2c790   528  ldr x6, [x7]
0xffff8bd2c794   532  sub csp, jssp, #0x10 (16)
0xffff8bd2c798   536  stp x5, x7, [jssp, #-16]!
0xffff8bd2c79c   540  ubfx x16, x6, #8, #12
0xffff8bd2c7a0   544  and x0, x6, #0xfffffffffff00000
0xffff8bd2c7a4   548  add x0, x0, x16, lsl #2
0xffff8bd2c7a8   552  ubfx x5, x6, #3, #5
0xffff8bd2c7ac   556  ldr x7, [x0, #360]
0xffff8bd2c7b0   560  lsr x7, x7, x5
0xffff8bd2c7b4   564  tbz w7, #0, #+0x10 (addr 0xffff8bd2c7c4)
0xffff8bd2c7b8   568  ldp x5, x7, [jssp], #16
0xffff8bd2c7bc   572  ldp x1, x0, [jssp], #16
0xffff8bd2c7c0   576  ret
0xffff8bd2c7c4   580  ldp x5, x7, [jssp], #16
0xffff8bd2c7c8   584  sub csp, jssp, #0x78 (120)
0xffff8bd2c7cc   588  stp x14, x15, [jssp, #-32]!
0xffff8bd2c7d0   592  stp x18, lr, [jssp, #16]
0xffff8bd2c7d4   596  stp x10, x11, [jssp, #-32]!
0xffff8bd2c7d8   600  stp x12, x13, [jssp, #16]
0xffff8bd2c7dc   604  stp x5, x7, [jssp, #-32]!
0xffff8bd2c7e0   608  stp x8, x9, [jssp, #16]
0xffff8bd2c7e4   612  stp x2, x3, [jssp, #-24]!
0xffff8bd2c7e8   616  str x4, [jssp, #16]
0xffff8bd2c7ec   620  mov x0, x5
0xffff8bd2c7f0   624  mov x1, x7
0xffff8bd2c7f4   628  ldr x2, pc+828 (addr 0x0000ffff8bd2cb30)    ;; external reference (isolate)
0xffff8bd2c7f8   632  ldr x16, pc+832 (addr 0x0000ffff8bd2cb38)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2c7fc   636  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2c800   640  blr x16
0xffff8bd2c804   644  ldp x4, x5, [jssp, #16]
0xffff8bd2c808   648  ldp x2, x3, [jssp], #32
0xffff8bd2c80c   652  ldp x9, x10, [jssp, #16]
0xffff8bd2c810   656  ldp x7, x8, [jssp], #32
0xffff8bd2c814   660  ldp x13, x14, [jssp, #16]
0xffff8bd2c818   664  ldp x11, x12, [jssp], #32
0xffff8bd2c81c   668  ldr lr, [jssp, #16]
0xffff8bd2c820   672  ldp x15, x18, [jssp], #24
0xffff8bd2c824   676  ldp x1, x0, [jssp], #16
0xffff8bd2c828   680  ret
0xffff8bd2c82c   684  sub csp, jssp, #0x10 (16)
0xffff8bd2c830   688  stp x1, x0, [jssp, #-16]!
0xffff8bd2c834   692  ldr x6, [x7]
0xffff8bd2c838   696  and x16, x6, #0xfffffffffff00000
0xffff8bd2c83c   700  ldr x16, [x16, #8]
0xffff8bd2c840   704  tst x16, #0x18
0xffff8bd2c844   708  b.eq #+0x19c (addr 0xffff8bd2c9e0)
0xffff8bd2c848   712  and x16, x5, #0xfffffffffff00000
0xffff8bd2c84c   716  ldr x16, [x16, #8]
0xffff8bd2c850   720  tst x16, #0x18
0xffff8bd2c854   724  b.ne #+0x18c (addr 0xffff8bd2c9e0)
0xffff8bd2c858   728  and x6, x5, #0xfffffffffff00000
0xffff8bd2c85c   732  ldr x0, [x6, #104]
0xffff8bd2c860   736  subs x0, x0, #0x1 (1)
0xffff8bd2c864   740  str x0, [x6, #104]
0xffff8bd2c868   744  b.mi #+0xe4 (addr 0xffff8bd2c94c)
0xffff8bd2c86c   748  ubfx x16, x5, #8, #12
0xffff8bd2c870   752  and x6, x5, #0xfffffffffff00000
0xffff8bd2c874   756  add x6, x6, x16, lsl #2
0xffff8bd2c878   760  ubfx x0, x5, #3, #5
0xffff8bd2c87c   764  ldr x6, [x6, #360]
0xffff8bd2c880   768  lsr x6, x6, x0
0xffff8bd2c884   772  tbz w6, #0, #+0x8 (addr 0xffff8bd2c88c)
0xffff8bd2c888   776  tbnz w6, #1, #+0x3c (addr 0xffff8bd2c8c4)
0xffff8bd2c88c   780  ldp x1, x0, [jssp], #16
0xffff8bd2c890   784  ldr x16, pc+688 (addr 0x0000ffff8bd2cb40)    ;; external reference (store_buffer_top)
0xffff8bd2c894   788  ldr x6, [x16]
0xffff8bd2c898   792  str x7, [x6], #8
0xffff8bd2c89c   796  str x6, [x16]
0xffff8bd2c8a0   800  tst x6, #0x1ffff
0xffff8bd2c8a4   804  b.eq #+0x8 (addr 0xffff8bd2c8ac)
0xffff8bd2c8a8   808  ret
0xffff8bd2c8ac   812  sub csp, jssp, #0x8 (8)
0xffff8bd2c8b0   816  str lr, [jssp, #-8]!
0xffff8bd2c8b4   820  ldr x17, pc+660 (addr 0x0000ffff8bd2cb48)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2c8b8   824  blr x17
0xffff8bd2c8bc   828  ldr lr, [jssp], #8
0xffff8bd2c8c0   832  ret
0xffff8bd2c8c4   836  ldr x6, [x7]
0xffff8bd2c8c8   840  and x0, x6, #0xfffffffffff00000
0xffff8bd2c8cc   844  ldr x0, [x0, #8]
0xffff8bd2c8d0   848  tbz w0, #6, #+0x18 (addr 0xffff8bd2c8e8)
0xffff8bd2c8d4   852  and x0, x5, #0xfffffffffff00000
0xffff8bd2c8d8   856  ldr x0, [x0, #8]
0xffff8bd2c8dc   860  movz x16, #0x58
0xffff8bd2c8e0   864  tst x0, x16
0xffff8bd2c8e4   868  b.eq #+0x68 (addr 0xffff8bd2c94c)
0xffff8bd2c8e8   872  sub csp, jssp, #0x10 (16)
0xffff8bd2c8ec   876  stp x5, x7, [jssp, #-16]!
0xffff8bd2c8f0   880  ubfx x16, x6, #8, #12
0xffff8bd2c8f4   884  and x0, x6, #0xfffffffffff00000
0xffff8bd2c8f8   888  add x0, x0, x16, lsl #2
0xffff8bd2c8fc   892  ubfx x5, x6, #3, #5
0xffff8bd2c900   896  ldr x7, [x0, #360]
0xffff8bd2c904   900  lsr x7, x7, x5
0xffff8bd2c908   904  tbz w7, #0, #+0x40 (addr 0xffff8bd2c948)
0xffff8bd2c90c   908  ldp x5, x7, [jssp], #16
0xffff8bd2c910   912  ldp x1, x0, [jssp], #16
0xffff8bd2c914   916  ldr x16, pc+572 (addr 0x0000ffff8bd2cb50)    ;; external reference (store_buffer_top)
0xffff8bd2c918   920  ldr x6, [x16]
0xffff8bd2c91c   924  str x7, [x6], #8
0xffff8bd2c920   928  str x6, [x16]
0xffff8bd2c924   932  tst x6, #0x1ffff
0xffff8bd2c928   936  b.eq #+0x8 (addr 0xffff8bd2c930)
0xffff8bd2c92c   940  ret
0xffff8bd2c930   944  sub csp, jssp, #0x8 (8)
0xffff8bd2c934   948  str lr, [jssp, #-8]!
0xffff8bd2c938   952  ldr x17, pc+544 (addr 0x0000ffff8bd2cb58)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2c93c   956  blr x17
0xffff8bd2c940   960  ldr lr, [jssp], #8
0xffff8bd2c944   964  ret
0xffff8bd2c948   968  ldp x5, x7, [jssp], #16
0xffff8bd2c94c   972  sub csp, jssp, #0x78 (120)
0xffff8bd2c950   976  stp x14, x15, [jssp, #-32]!
0xffff8bd2c954   980  stp x18, lr, [jssp, #16]
0xffff8bd2c958   984  stp x10, x11, [jssp, #-32]!
0xffff8bd2c95c   988  stp x12, x13, [jssp, #16]
0xffff8bd2c960   992  stp x5, x7, [jssp, #-32]!
0xffff8bd2c964   996  stp x8, x9, [jssp, #16]
0xffff8bd2c968  1000  stp x2, x3, [jssp, #-24]!
0xffff8bd2c96c  1004  str x4, [jssp, #16]
0xffff8bd2c970  1008  mov x0, x5
0xffff8bd2c974  1012  mov x1, x7
0xffff8bd2c978  1016  ldr x2, pc+488 (addr 0x0000ffff8bd2cb60)    ;; external reference (isolate)
0xffff8bd2c97c  1020  ldr x16, pc+492 (addr 0x0000ffff8bd2cb68)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2c980  1024  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2c984  1028  blr x16
0xffff8bd2c988  1032  ldp x4, x5, [jssp, #16]
0xffff8bd2c98c  1036  ldp x2, x3, [jssp], #32
0xffff8bd2c990  1040  ldp x9, x10, [jssp, #16]
0xffff8bd2c994  1044  ldp x7, x8, [jssp], #32
0xffff8bd2c998  1048  ldp x13, x14, [jssp, #16]
0xffff8bd2c99c  1052  ldp x11, x12, [jssp], #32
0xffff8bd2c9a0  1056  ldr lr, [jssp, #16]
0xffff8bd2c9a4  1060  ldp x15, x18, [jssp], #24
0xffff8bd2c9a8  1064  ldp x1, x0, [jssp], #16
0xffff8bd2c9ac  1068  ldr x16, pc+452 (addr 0x0000ffff8bd2cb70)    ;; external reference (store_buffer_top)
0xffff8bd2c9b0  1072  ldr x6, [x16]
0xffff8bd2c9b4  1076  str x7, [x6], #8
0xffff8bd2c9b8  1080  str x6, [x16]
0xffff8bd2c9bc  1084  tst x6, #0x1ffff
0xffff8bd2c9c0  1088  b.eq #+0x8 (addr 0xffff8bd2c9c8)
0xffff8bd2c9c4  1092  ret
0xffff8bd2c9c8  1096  sub csp, jssp, #0x8 (8)
0xffff8bd2c9cc  1100  str lr, [jssp, #-8]!
0xffff8bd2c9d0  1104  ldr x17, pc+424 (addr 0x0000ffff8bd2cb78)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2c9d4  1108  blr x17
0xffff8bd2c9d8  1112  ldr lr, [jssp], #8
0xffff8bd2c9dc  1116  ret
0xffff8bd2c9e0  1120  and x6, x5, #0xfffffffffff00000
0xffff8bd2c9e4  1124  ldr x0, [x6, #104]
0xffff8bd2c9e8  1128  subs x0, x0, #0x1 (1)
0xffff8bd2c9ec  1132  str x0, [x6, #104]
0xffff8bd2c9f0  1136  b.mi #+0x84 (addr 0xffff8bd2ca74)
0xffff8bd2c9f4  1140  ubfx x16, x5, #8, #12
0xffff8bd2c9f8  1144  and x6, x5, #0xfffffffffff00000
0xffff8bd2c9fc  1148  add x6, x6, x16, lsl #2
0xffff8bd2ca00  1152  ubfx x0, x5, #3, #5
0xffff8bd2ca04  1156  ldr x6, [x6, #360]
0xffff8bd2ca08  1160  lsr x6, x6, x0
0xffff8bd2ca0c  1164  tbz w6, #0, #+0x8 (addr 0xffff8bd2ca14)
0xffff8bd2ca10  1168  tbnz w6, #1, #+0xc (addr 0xffff8bd2ca1c)
0xffff8bd2ca14  1172  ldp x1, x0, [jssp], #16
0xffff8bd2ca18  1176  ret
0xffff8bd2ca1c  1180  ldr x6, [x7]
0xffff8bd2ca20  1184  and x0, x6, #0xfffffffffff00000
0xffff8bd2ca24  1188  ldr x0, [x0, #8]
0xffff8bd2ca28  1192  tbz w0, #6, #+0x18 (addr 0xffff8bd2ca40)
0xffff8bd2ca2c  1196  and x0, x5, #0xfffffffffff00000
0xffff8bd2ca30  1200  ldr x0, [x0, #8]
0xffff8bd2ca34  1204  movz x16, #0x58
0xffff8bd2ca38  1208  tst x0, x16
0xffff8bd2ca3c  1212  b.eq #+0x38 (addr 0xffff8bd2ca74)
0xffff8bd2ca40  1216  sub csp, jssp, #0x10 (16)
0xffff8bd2ca44  1220  stp x5, x7, [jssp, #-16]!
0xffff8bd2ca48  1224  ubfx x16, x6, #8, #12
0xffff8bd2ca4c  1228  and x0, x6, #0xfffffffffff00000
0xffff8bd2ca50  1232  add x0, x0, x16, lsl #2
0xffff8bd2ca54  1236  ubfx x5, x6, #3, #5
0xffff8bd2ca58  1240  ldr x7, [x0, #360]
0xffff8bd2ca5c  1244  lsr x7, x7, x5
0xffff8bd2ca60  1248  tbz w7, #0, #+0x10 (addr 0xffff8bd2ca70)
0xffff8bd2ca64  1252  ldp x5, x7, [jssp], #16
0xffff8bd2ca68  1256  ldp x1, x0, [jssp], #16
0xffff8bd2ca6c  1260  ret
0xffff8bd2ca70  1264  ldp x5, x7, [jssp], #16
0xffff8bd2ca74  1268  sub csp, jssp, #0x78 (120)
0xffff8bd2ca78  1272  stp x14, x15, [jssp, #-32]!
0xffff8bd2ca7c  1276  stp x18, lr, [jssp, #16]
0xffff8bd2ca80  1280  stp x10, x11, [jssp, #-32]!
0xffff8bd2ca84  1284  stp x12, x13, [jssp, #16]
0xffff8bd2ca88  1288  stp x5, x7, [jssp, #-32]!
0xffff8bd2ca8c  1292  stp x8, x9, [jssp, #16]
0xffff8bd2ca90  1296  stp x2, x3, [jssp, #-24]!
0xffff8bd2ca94  1300  str x4, [jssp, #16]
0xffff8bd2ca98  1304  mov x0, x5
0xffff8bd2ca9c  1308  mov x1, x7
0xffff8bd2caa0  1312  ldr x2, pc+224 (addr 0x0000ffff8bd2cb80)    ;; external reference (isolate)
0xffff8bd2caa4  1316  ldr x16, pc+228 (addr 0x0000ffff8bd2cb88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2caa8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2caac  1324  blr x16
0xffff8bd2cab0  1328  ldp x4, x5, [jssp, #16]
0xffff8bd2cab4  1332  ldp x2, x3, [jssp], #32
0xffff8bd2cab8  1336  ldp x9, x10, [jssp, #16]
0xffff8bd2cabc  1340  ldp x7, x8, [jssp], #32
0xffff8bd2cac0  1344  ldp x13, x14, [jssp, #16]
0xffff8bd2cac4  1348  ldp x11, x12, [jssp], #32
0xffff8bd2cac8  1352  ldr lr, [jssp, #16]
0xffff8bd2cacc  1356  ldp x15, x18, [jssp], #24
0xffff8bd2cad0  1360  ldp x1, x0, [jssp], #16
0xffff8bd2cad4  1364  ret
0xffff8bd2cad8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd2cadc  1372  d63f03e0       constant
0xffff8bd2cae0  1376  2cb8e8c0       constant
0xffff8bd2cae4  1380  00000000       constant
0xffff8bd2cae8  1384  8bd064c0       constant
0xffff8bd2caec  1388  0000ffff       constant
0xffff8bd2caf0  1392  2cb8e8c0       constant
0xffff8bd2caf4  1396  00000000       constant
0xffff8bd2caf8  1400  8bd064c0       constant
0xffff8bd2cafc  1404  0000ffff       constant
0xffff8bd2cb00  1408  2cb8e8c0       constant
0xffff8bd2cb04  1412  00000000       constant
0xffff8bd2cb08  1416  8bd064c0       constant
0xffff8bd2cb0c  1420  0000ffff       constant
0xffff8bd2cb10  1424  2cb8d2d0       constant
0xffff8bd2cb14  1428  00000000       constant
0xffff8bd2cb18  1432  00c2d958       constant
0xffff8bd2cb1c  1436  00000000       constant
0xffff8bd2cb20  1440  2cb8e8c0       constant
0xffff8bd2cb24  1444  00000000       constant
0xffff8bd2cb28  1448  8bd064c0       constant
0xffff8bd2cb2c  1452  0000ffff       constant
0xffff8bd2cb30  1456  2cb8d2d0       constant
0xffff8bd2cb34  1460  00000000       constant
0xffff8bd2cb38  1464  00c2d958       constant
0xffff8bd2cb3c  1468  00000000       constant
0xffff8bd2cb40  1472  2cb8e8c0       constant
0xffff8bd2cb44  1476  00000000       constant
0xffff8bd2cb48  1480  8bd064c0       constant
0xffff8bd2cb4c  1484  0000ffff       constant
0xffff8bd2cb50  1488  2cb8e8c0       constant
0xffff8bd2cb54  1492  00000000       constant
0xffff8bd2cb58  1496  8bd064c0       constant
0xffff8bd2cb5c  1500  0000ffff       constant
0xffff8bd2cb60  1504  2cb8d2d0       constant
0xffff8bd2cb64  1508  00000000       constant
0xffff8bd2cb68  1512  00c2d958       constant
0xffff8bd2cb6c  1516  00000000       constant
0xffff8bd2cb70  1520  2cb8e8c0       constant
0xffff8bd2cb74  1524  00000000       constant
0xffff8bd2cb78  1528  8bd064c0       constant
0xffff8bd2cb7c  1532  0000ffff       constant
0xffff8bd2cb80  1536  2cb8d2d0       constant
0xffff8bd2cb84  1540  00000000       constant
0xffff8bd2cb88  1544  00c2d958       constant
0xffff8bd2cb8c  1548  00000000       constant


RelocInfo (size = 59)
0xffff8bd2c588  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2c5ac  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2c624  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2c648  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2c688  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2c6ac  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2c6ec  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2c6f0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2c720  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2c744  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2c7f4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2c7f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2c890  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2c8b4  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2c914  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2c938  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2c978  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2c97c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2c9ac  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2c9d0  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2caa0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2caa4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2cad8  constant pool (size 184)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 333)
0xffff8bd2d100     0  movz x2, #0xe2c0
0xffff8bd2d104     4  movk x2, #0x2cb8, lsl #16
0xffff8bd2d108     8  ldp x3, x0, [x2]
0xffff8bd2d10c    12  adds x16, x3, #0x58 (88)
0xffff8bd2d110    16  ccmp x16, x0, #nzCv, lo
0xffff8bd2d114    20  b.hi #+0x64 (addr 0xffff8bd2d178)
0xffff8bd2d118    24  str x16, [x2]
0xffff8bd2d11c    28  orr x3, x3, #0x1
0xffff8bd2d120    32  ldr x0, pc+200 (addr 0x0000ffff8bd2d1e8)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd2d124    36  stur x0, [x3, #-1]
0xffff8bd2d128    40  movz x0, #0x900000000
0xffff8bd2d12c    44  stur x0, [x3, #7]
0xffff8bd2d130    48  stur x1, [x3, #15]
0xffff8bd2d134    52  stur cp, [x3, #23]
0xffff8bd2d138    56  ldr x0, pc+184 (addr 0x0000ffff8bd2d1f0)    ;; object: 0x26c04519 <the hole>
0xffff8bd2d13c    60  stur x0, [x3, #31]
0xffff8bd2d140    64  ldur x0, [cp, #39]
0xffff8bd2d144    68  stur x0, [x3, #39]
0xffff8bd2d148    72  ldr x0, pc+176 (addr 0x0000ffff8bd2d1f8)    ;; object: 0x26c04241 <undefined>
0xffff8bd2d14c    76  stur x0, [x3, #47]
0xffff8bd2d150    80  ldr x0, pc+176 (addr 0x0000ffff8bd2d200)    ;; object: 0x26c04241 <undefined>
0xffff8bd2d154    84  stur x0, [x3, #55]
0xffff8bd2d158    88  ldr x0, pc+176 (addr 0x0000ffff8bd2d208)    ;; object: 0x26c04241 <undefined>
0xffff8bd2d15c    92  stur x0, [x3, #63]
0xffff8bd2d160    96  ldr x0, pc+176 (addr 0x0000ffff8bd2d210)    ;; object: 0x26c04241 <undefined>
0xffff8bd2d164   100  stur x0, [x3, #71]
0xffff8bd2d168   104  ldr x0, pc+176 (addr 0x0000ffff8bd2d218)    ;; object: 0x26c04241 <undefined>
0xffff8bd2d16c   108  stur x0, [x3, #79]
0xffff8bd2d170   112  mov x0, x3
0xffff8bd2d174   116  ret
0xffff8bd2d178   120  sub csp, jssp, #0x10 (16)
0xffff8bd2d17c   124  stp fp, lr, [jssp, #-16]!
0xffff8bd2d180   128  movz fp, #0xa00000000
0xffff8bd2d184   132  sub csp, jssp, #0x8 (8)
0xffff8bd2d188   136  str fp, [jssp, #-8]!
0xffff8bd2d18c   140  add fp, jssp, #0x8 (8)
0xffff8bd2d190   144  movz x3, #0x0
0xffff8bd2d194   148  mov x16, lr
0xffff8bd2d198   152  ldr x17, pc+136 (addr 0x0000ffff8bd2d220)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd2d19c   156  blr x17
0xffff8bd2d1a0   160  movz x0, #0x5800000000
0xffff8bd2d1a4   164  movz x10, #0x0
0xffff8bd2d1a8   168  sub csp, jssp, #0x10 (16)
0xffff8bd2d1ac   172  stp x10, x0, [jssp, #-16]!
0xffff8bd2d1b0   176  movz x0, #0x2
0xffff8bd2d1b4   180  movz x1, #0x5b88
0xffff8bd2d1b8   184  movk x1, #0xe2, lsl #16
0xffff8bd2d1bc   188  ldr x16, pc+108 (addr 0x0000ffff8bd2d228)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd2d1c0   192  blr x16
0xffff8bd2d1c4   196  str x0, [jssp, #24]
0xffff8bd2d1c8   200  ldr x16, pc+104 (addr 0x0000ffff8bd2d230)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd2d1cc   204  blr x16
0xffff8bd2d1d0   208  ldr lr, [jssp, #16]
0xffff8bd2d1d4   212  ldp xzr, fp, [jssp], #24
0xffff8bd2d1d8   216  b #-0xb8 (addr 0xffff8bd2d120)
0xffff8bd2d1dc   220  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff8bd2d1e0   224  d63f03e0       constant
0xffff8bd2d1e4   228  d503201f       constant
0xffff8bd2d1e8   232  5f506149       constant
0xffff8bd2d1ec   236  00000000       constant
0xffff8bd2d1f0   240  26c04519       constant
0xffff8bd2d1f4   244  00000000       constant
0xffff8bd2d1f8   248  26c04241       constant
0xffff8bd2d1fc   252  00000000       constant
0xffff8bd2d200   256  26c04241       constant
0xffff8bd2d204   260  00000000       constant
0xffff8bd2d208   264  26c04241       constant
0xffff8bd2d20c   268  00000000       constant
0xffff8bd2d210   272  26c04241       constant
0xffff8bd2d214   276  00000000       constant
0xffff8bd2d218   280  26c04241       constant
0xffff8bd2d21c   284  00000000       constant
0xffff8bd2d220   288  8bd06820       constant
0xffff8bd2d224   292  0000ffff       constant
0xffff8bd2d228   296  8bd06260       constant
0xffff8bd2d22c   300  0000ffff       constant
0xffff8bd2d230   304  8bd068e0       constant
0xffff8bd2d234   308  0000ffff       constant


Safepoints (size = 21)
0xffff8bd2d1c4   196  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 16)
0xffff8bd2d120  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd2d138  embedded object  (0x26c04519 <the hole>)
0xffff8bd2d148  embedded object  (0x26c04241 <undefined>)
0xffff8bd2d150  embedded object  (0x26c04241 <undefined>)
0xffff8bd2d158  embedded object  (0x26c04241 <undefined>)
0xffff8bd2d160  embedded object  (0x26c04241 <undefined>)
0xffff8bd2d168  embedded object  (0x26c04241 <undefined>)
0xffff8bd2d198  code target (STUB)  (0xffff8bd06820)
0xffff8bd2d1bc  code target (STUB)  (0xffff8bd06260)
0xffff8bd2d1c8  code target (STUB)  (0xffff8bd068e0)
0xffff8bd2d1dc  constant pool (size 92)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1904)
0xffff8bd2d2c0     0  adr xzr, #+0x40 (addr 0xffff8bd2d300)
0xffff8bd2d2c4     4  adr xzr, #+0x358 (addr 0xffff8bd2d61c)
0xffff8bd2d2c8     8  ldr x16, pc+1720 (addr 0x0000ffff8bd2d980)    ;; external reference (store_buffer_top)
0xffff8bd2d2cc    12  ldr x4, [x16]
0xffff8bd2d2d0    16  str x6, [x4], #8
0xffff8bd2d2d4    20  str x4, [x16]
0xffff8bd2d2d8    24  tst x4, #0x1ffff
0xffff8bd2d2dc    28  b.eq #+0x8 (addr 0xffff8bd2d2e4)
0xffff8bd2d2e0    32  ret
0xffff8bd2d2e4    36  sub csp, jssp, #0x8 (8)
0xffff8bd2d2e8    40  str lr, [jssp, #-8]!
0xffff8bd2d2ec    44  ldr x17, pc+1692 (addr 0x0000ffff8bd2d988)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd2d2f0    48  blr x17
0xffff8bd2d2f4    52  ldr lr, [jssp], #8
0xffff8bd2d2f8    56  ret
0xffff8bd2d2fc    60  ret
0xffff8bd2d300    64  sub csp, jssp, #0x10 (16)
0xffff8bd2d304    68  stp x2, x1, [jssp, #-16]!
0xffff8bd2d308    72  ldr x4, [x6]
0xffff8bd2d30c    76  and x16, x4, #0xfffffffffff00000
0xffff8bd2d310    80  ldr x16, [x16, #8]
0xffff8bd2d314    84  tst x16, #0x18
0xffff8bd2d318    88  b.eq #+0x1d4 (addr 0xffff8bd2d4ec)
0xffff8bd2d31c    92  and x16, x0, #0xfffffffffff00000
0xffff8bd2d320    96  ldr x16, [x16, #8]
0xffff8bd2d324   100  tst x16, #0x18
0xffff8bd2d328   104  b.ne #+0x1c4 (addr 0xffff8bd2d4ec)
0xffff8bd2d32c   108  and x4, x0, #0xfffffffffff00000
0xffff8bd2d330   112  ldr x1, [x4, #104]
0xffff8bd2d334   116  subs x1, x1, #0x1 (1)
0xffff8bd2d338   120  str x1, [x4, #104]
0xffff8bd2d33c   124  b.mi #+0xc4 (addr 0xffff8bd2d400)
0xffff8bd2d340   128  ubfx x16, x0, #8, #12
0xffff8bd2d344   132  and x4, x0, #0xfffffffffff00000
0xffff8bd2d348   136  add x4, x4, x16, lsl #2
0xffff8bd2d34c   140  ubfx x1, x0, #3, #5
0xffff8bd2d350   144  ldr x4, [x4, #360]
0xffff8bd2d354   148  lsr x4, x4, x1
0xffff8bd2d358   152  tbz w4, #0, #+0x8 (addr 0xffff8bd2d360)
0xffff8bd2d35c   156  tbnz w4, #1, #+0x3c (addr 0xffff8bd2d398)
0xffff8bd2d360   160  ldp x2, x1, [jssp], #16
0xffff8bd2d364   164  ldr x16, pc+1580 (addr 0x0000ffff8bd2d990)    ;; external reference (store_buffer_top)
0xffff8bd2d368   168  ldr x4, [x16]
0xffff8bd2d36c   172  str x6, [x4], #8
0xffff8bd2d370   176  str x4, [x16]
0xffff8bd2d374   180  tst x4, #0x1ffff
0xffff8bd2d378   184  b.eq #+0x8 (addr 0xffff8bd2d380)
0xffff8bd2d37c   188  ret
0xffff8bd2d380   192  sub csp, jssp, #0x8 (8)
0xffff8bd2d384   196  str lr, [jssp, #-8]!
0xffff8bd2d388   200  ldr x17, pc+1552 (addr 0x0000ffff8bd2d998)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd2d38c   204  blr x17
0xffff8bd2d390   208  ldr lr, [jssp], #8
0xffff8bd2d394   212  ret
0xffff8bd2d398   216  ldr x4, [x6]
0xffff8bd2d39c   220  sub csp, jssp, #0x10 (16)
0xffff8bd2d3a0   224  stp x0, x6, [jssp, #-16]!
0xffff8bd2d3a4   228  ubfx x16, x4, #8, #12
0xffff8bd2d3a8   232  and x1, x4, #0xfffffffffff00000
0xffff8bd2d3ac   236  add x1, x1, x16, lsl #2
0xffff8bd2d3b0   240  ubfx x0, x4, #3, #5
0xffff8bd2d3b4   244  ldr x6, [x1, #360]
0xffff8bd2d3b8   248  lsr x6, x6, x0
0xffff8bd2d3bc   252  tbz w6, #0, #+0x40 (addr 0xffff8bd2d3fc)
0xffff8bd2d3c0   256  ldp x0, x6, [jssp], #16
0xffff8bd2d3c4   260  ldp x2, x1, [jssp], #16
0xffff8bd2d3c8   264  ldr x16, pc+1496 (addr 0x0000ffff8bd2d9a0)    ;; external reference (store_buffer_top)
0xffff8bd2d3cc   268  ldr x4, [x16]
0xffff8bd2d3d0   272  str x6, [x4], #8
0xffff8bd2d3d4   276  str x4, [x16]
0xffff8bd2d3d8   280  tst x4, #0x1ffff
0xffff8bd2d3dc   284  b.eq #+0x8 (addr 0xffff8bd2d3e4)
0xffff8bd2d3e0   288  ret
0xffff8bd2d3e4   292  sub csp, jssp, #0x8 (8)
0xffff8bd2d3e8   296  str lr, [jssp, #-8]!
0xffff8bd2d3ec   300  ldr x17, pc+1468 (addr 0x0000ffff8bd2d9a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd2d3f0   304  blr x17
0xffff8bd2d3f4   308  ldr lr, [jssp], #8
0xffff8bd2d3f8   312  ret
0xffff8bd2d3fc   316  ldp x0, x6, [jssp], #16
0xffff8bd2d400   320  sub csp, jssp, #0x78 (120)
0xffff8bd2d404   324  stp x14, x15, [jssp, #-32]!
0xffff8bd2d408   328  stp x18, lr, [jssp, #16]
0xffff8bd2d40c   332  stp x10, x11, [jssp, #-32]!
0xffff8bd2d410   336  stp x12, x13, [jssp, #16]
0xffff8bd2d414   340  stp x6, x7, [jssp, #-32]!
0xffff8bd2d418   344  stp x8, x9, [jssp, #16]
0xffff8bd2d41c   348  stp x0, x3, [jssp, #-24]!
0xffff8bd2d420   352  str x5, [jssp, #16]
0xffff8bd2d424   356  sub csp, jssp, #0xb0 (176)
0xffff8bd2d428   360  stp d26, d27, [jssp, #-32]!
0xffff8bd2d42c   364  stp d28, d29, [jssp, #16]
0xffff8bd2d430   368  stp d22, d23, [jssp, #-32]!
0xffff8bd2d434   372  stp d24, d25, [jssp, #16]
0xffff8bd2d438   376  stp d18, d19, [jssp, #-32]!
0xffff8bd2d43c   380  stp d20, d21, [jssp, #16]
0xffff8bd2d440   384  stp d6, d7, [jssp, #-32]!
0xffff8bd2d444   388  stp d16, d17, [jssp, #16]
0xffff8bd2d448   392  stp d2, d3, [jssp, #-32]!
0xffff8bd2d44c   396  stp d4, d5, [jssp, #16]
0xffff8bd2d450   400  stp d0, d1, [jssp, #-16]!
0xffff8bd2d454   404  mov x1, x6
0xffff8bd2d458   408  ldr x2, pc+1368 (addr 0x0000ffff8bd2d9b0)    ;; external reference (isolate)
0xffff8bd2d45c   412  ldr x16, pc+1372 (addr 0x0000ffff8bd2d9b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2d460   416  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2d464   420  blr x16
0xffff8bd2d468   424  ldp d2, d3, [jssp, #16]
0xffff8bd2d46c   428  ldp d0, d1, [jssp], #32
0xffff8bd2d470   432  ldp d6, d7, [jssp, #16]
0xffff8bd2d474   436  ldp d4, d5, [jssp], #32
0xffff8bd2d478   440  ldp d18, d19, [jssp, #16]
0xffff8bd2d47c   444  ldp d16, d17, [jssp], #32
0xffff8bd2d480   448  ldp d22, d23, [jssp, #16]
0xffff8bd2d484   452  ldp d20, d21, [jssp], #32
0xffff8bd2d488   456  ldp d26, d27, [jssp, #16]
0xffff8bd2d48c   460  ldp d24, d25, [jssp], #32
0xffff8bd2d490   464  ldp d28, d29, [jssp], #16
0xffff8bd2d494   468  ldp x5, x6, [jssp, #16]
0xffff8bd2d498   472  ldp x0, x3, [jssp], #32
0xffff8bd2d49c   476  ldp x9, x10, [jssp, #16]
0xffff8bd2d4a0   480  ldp x7, x8, [jssp], #32
0xffff8bd2d4a4   484  ldp x13, x14, [jssp, #16]
0xffff8bd2d4a8   488  ldp x11, x12, [jssp], #32
0xffff8bd2d4ac   492  ldr lr, [jssp, #16]
0xffff8bd2d4b0   496  ldp x15, x18, [jssp], #24
0xffff8bd2d4b4   500  ldp x2, x1, [jssp], #16
0xffff8bd2d4b8   504  ldr x16, pc+1288 (addr 0x0000ffff8bd2d9c0)    ;; external reference (store_buffer_top)
0xffff8bd2d4bc   508  ldr x4, [x16]
0xffff8bd2d4c0   512  str x6, [x4], #8
0xffff8bd2d4c4   516  str x4, [x16]
0xffff8bd2d4c8   520  tst x4, #0x1ffff
0xffff8bd2d4cc   524  b.eq #+0x8 (addr 0xffff8bd2d4d4)
0xffff8bd2d4d0   528  ret
0xffff8bd2d4d4   532  sub csp, jssp, #0x8 (8)
0xffff8bd2d4d8   536  str lr, [jssp, #-8]!
0xffff8bd2d4dc   540  ldr x17, pc+1260 (addr 0x0000ffff8bd2d9c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd2d4e0   544  blr x17
0xffff8bd2d4e4   548  ldr lr, [jssp], #8
0xffff8bd2d4e8   552  ret
0xffff8bd2d4ec   556  and x4, x0, #0xfffffffffff00000
0xffff8bd2d4f0   560  ldr x1, [x4, #104]
0xffff8bd2d4f4   564  subs x1, x1, #0x1 (1)
0xffff8bd2d4f8   568  str x1, [x4, #104]
0xffff8bd2d4fc   572  b.mi #+0x64 (addr 0xffff8bd2d560)
0xffff8bd2d500   576  ubfx x16, x0, #8, #12
0xffff8bd2d504   580  and x4, x0, #0xfffffffffff00000
0xffff8bd2d508   584  add x4, x4, x16, lsl #2
0xffff8bd2d50c   588  ubfx x1, x0, #3, #5
0xffff8bd2d510   592  ldr x4, [x4, #360]
0xffff8bd2d514   596  lsr x4, x4, x1
0xffff8bd2d518   600  tbz w4, #0, #+0x8 (addr 0xffff8bd2d520)
0xffff8bd2d51c   604  tbnz w4, #1, #+0xc (addr 0xffff8bd2d528)
0xffff8bd2d520   608  ldp x2, x1, [jssp], #16
0xffff8bd2d524   612  ret
0xffff8bd2d528   616  ldr x4, [x6]
0xffff8bd2d52c   620  sub csp, jssp, #0x10 (16)
0xffff8bd2d530   624  stp x0, x6, [jssp, #-16]!
0xffff8bd2d534   628  ubfx x16, x4, #8, #12
0xffff8bd2d538   632  and x1, x4, #0xfffffffffff00000
0xffff8bd2d53c   636  add x1, x1, x16, lsl #2
0xffff8bd2d540   640  ubfx x0, x4, #3, #5
0xffff8bd2d544   644  ldr x6, [x1, #360]
0xffff8bd2d548   648  lsr x6, x6, x0
0xffff8bd2d54c   652  tbz w6, #0, #+0x10 (addr 0xffff8bd2d55c)
0xffff8bd2d550   656  ldp x0, x6, [jssp], #16
0xffff8bd2d554   660  ldp x2, x1, [jssp], #16
0xffff8bd2d558   664  ret
0xffff8bd2d55c   668  ldp x0, x6, [jssp], #16
0xffff8bd2d560   672  sub csp, jssp, #0x78 (120)
0xffff8bd2d564   676  stp x14, x15, [jssp, #-32]!
0xffff8bd2d568   680  stp x18, lr, [jssp, #16]
0xffff8bd2d56c   684  stp x10, x11, [jssp, #-32]!
0xffff8bd2d570   688  stp x12, x13, [jssp, #16]
0xffff8bd2d574   692  stp x6, x7, [jssp, #-32]!
0xffff8bd2d578   696  stp x8, x9, [jssp, #16]
0xffff8bd2d57c   700  stp x0, x3, [jssp, #-24]!
0xffff8bd2d580   704  str x5, [jssp, #16]
0xffff8bd2d584   708  sub csp, jssp, #0xb0 (176)
0xffff8bd2d588   712  stp d26, d27, [jssp, #-32]!
0xffff8bd2d58c   716  stp d28, d29, [jssp, #16]
0xffff8bd2d590   720  stp d22, d23, [jssp, #-32]!
0xffff8bd2d594   724  stp d24, d25, [jssp, #16]
0xffff8bd2d598   728  stp d18, d19, [jssp, #-32]!
0xffff8bd2d59c   732  stp d20, d21, [jssp, #16]
0xffff8bd2d5a0   736  stp d6, d7, [jssp, #-32]!
0xffff8bd2d5a4   740  stp d16, d17, [jssp, #16]
0xffff8bd2d5a8   744  stp d2, d3, [jssp, #-32]!
0xffff8bd2d5ac   748  stp d4, d5, [jssp, #16]
0xffff8bd2d5b0   752  stp d0, d1, [jssp, #-16]!
0xffff8bd2d5b4   756  mov x1, x6
0xffff8bd2d5b8   760  ldr x2, pc+1048 (addr 0x0000ffff8bd2d9d0)    ;; external reference (isolate)
0xffff8bd2d5bc   764  ldr x16, pc+1052 (addr 0x0000ffff8bd2d9d8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2d5c0   768  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2d5c4   772  blr x16
0xffff8bd2d5c8   776  ldp d2, d3, [jssp, #16]
0xffff8bd2d5cc   780  ldp d0, d1, [jssp], #32
0xffff8bd2d5d0   784  ldp d6, d7, [jssp, #16]
0xffff8bd2d5d4   788  ldp d4, d5, [jssp], #32
0xffff8bd2d5d8   792  ldp d18, d19, [jssp, #16]
0xffff8bd2d5dc   796  ldp d16, d17, [jssp], #32
0xffff8bd2d5e0   800  ldp d22, d23, [jssp, #16]
0xffff8bd2d5e4   804  ldp d20, d21, [jssp], #32
0xffff8bd2d5e8   808  ldp d26, d27, [jssp, #16]
0xffff8bd2d5ec   812  ldp d24, d25, [jssp], #32
0xffff8bd2d5f0   816  ldp d28, d29, [jssp], #16
0xffff8bd2d5f4   820  ldp x5, x6, [jssp, #16]
0xffff8bd2d5f8   824  ldp x0, x3, [jssp], #32
0xffff8bd2d5fc   828  ldp x9, x10, [jssp, #16]
0xffff8bd2d600   832  ldp x7, x8, [jssp], #32
0xffff8bd2d604   836  ldp x13, x14, [jssp, #16]
0xffff8bd2d608   840  ldp x11, x12, [jssp], #32
0xffff8bd2d60c   844  ldr lr, [jssp, #16]
0xffff8bd2d610   848  ldp x15, x18, [jssp], #24
0xffff8bd2d614   852  ldp x2, x1, [jssp], #16
0xffff8bd2d618   856  ret
0xffff8bd2d61c   860  sub csp, jssp, #0x10 (16)
0xffff8bd2d620   864  stp x2, x1, [jssp, #-16]!
0xffff8bd2d624   868  ldr x4, [x6]
0xffff8bd2d628   872  and x16, x4, #0xfffffffffff00000
0xffff8bd2d62c   876  ldr x16, [x16, #8]
0xffff8bd2d630   880  tst x16, #0x18
0xffff8bd2d634   884  b.eq #+0x1f4 (addr 0xffff8bd2d828)
0xffff8bd2d638   888  and x16, x0, #0xfffffffffff00000
0xffff8bd2d63c   892  ldr x16, [x16, #8]
0xffff8bd2d640   896  tst x16, #0x18
0xffff8bd2d644   900  b.ne #+0x1e4 (addr 0xffff8bd2d828)
0xffff8bd2d648   904  and x4, x0, #0xfffffffffff00000
0xffff8bd2d64c   908  ldr x1, [x4, #104]
0xffff8bd2d650   912  subs x1, x1, #0x1 (1)
0xffff8bd2d654   916  str x1, [x4, #104]
0xffff8bd2d658   920  b.mi #+0xe4 (addr 0xffff8bd2d73c)
0xffff8bd2d65c   924  ubfx x16, x0, #8, #12
0xffff8bd2d660   928  and x4, x0, #0xfffffffffff00000
0xffff8bd2d664   932  add x4, x4, x16, lsl #2
0xffff8bd2d668   936  ubfx x1, x0, #3, #5
0xffff8bd2d66c   940  ldr x4, [x4, #360]
0xffff8bd2d670   944  lsr x4, x4, x1
0xffff8bd2d674   948  tbz w4, #0, #+0x8 (addr 0xffff8bd2d67c)
0xffff8bd2d678   952  tbnz w4, #1, #+0x3c (addr 0xffff8bd2d6b4)
0xffff8bd2d67c   956  ldp x2, x1, [jssp], #16
0xffff8bd2d680   960  ldr x16, pc+864 (addr 0x0000ffff8bd2d9e0)    ;; external reference (store_buffer_top)
0xffff8bd2d684   964  ldr x4, [x16]
0xffff8bd2d688   968  str x6, [x4], #8
0xffff8bd2d68c   972  str x4, [x16]
0xffff8bd2d690   976  tst x4, #0x1ffff
0xffff8bd2d694   980  b.eq #+0x8 (addr 0xffff8bd2d69c)
0xffff8bd2d698   984  ret
0xffff8bd2d69c   988  sub csp, jssp, #0x8 (8)
0xffff8bd2d6a0   992  str lr, [jssp, #-8]!
0xffff8bd2d6a4   996  ldr x17, pc+836 (addr 0x0000ffff8bd2d9e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd2d6a8  1000  blr x17
0xffff8bd2d6ac  1004  ldr lr, [jssp], #8
0xffff8bd2d6b0  1008  ret
0xffff8bd2d6b4  1012  ldr x4, [x6]
0xffff8bd2d6b8  1016  and x1, x4, #0xfffffffffff00000
0xffff8bd2d6bc  1020  ldr x1, [x1, #8]
0xffff8bd2d6c0  1024  tbz w1, #6, #+0x18 (addr 0xffff8bd2d6d8)
0xffff8bd2d6c4  1028  and x1, x0, #0xfffffffffff00000
0xffff8bd2d6c8  1032  ldr x1, [x1, #8]
0xffff8bd2d6cc  1036  movz x16, #0x58
0xffff8bd2d6d0  1040  tst x1, x16
0xffff8bd2d6d4  1044  b.eq #+0x68 (addr 0xffff8bd2d73c)
0xffff8bd2d6d8  1048  sub csp, jssp, #0x10 (16)
0xffff8bd2d6dc  1052  stp x0, x6, [jssp, #-16]!
0xffff8bd2d6e0  1056  ubfx x16, x4, #8, #12
0xffff8bd2d6e4  1060  and x1, x4, #0xfffffffffff00000
0xffff8bd2d6e8  1064  add x1, x1, x16, lsl #2
0xffff8bd2d6ec  1068  ubfx x0, x4, #3, #5
0xffff8bd2d6f0  1072  ldr x6, [x1, #360]
0xffff8bd2d6f4  1076  lsr x6, x6, x0
0xffff8bd2d6f8  1080  tbz w6, #0, #+0x40 (addr 0xffff8bd2d738)
0xffff8bd2d6fc  1084  ldp x0, x6, [jssp], #16
0xffff8bd2d700  1088  ldp x2, x1, [jssp], #16
0xffff8bd2d704  1092  ldr x16, pc+748 (addr 0x0000ffff8bd2d9f0)    ;; external reference (store_buffer_top)
0xffff8bd2d708  1096  ldr x4, [x16]
0xffff8bd2d70c  1100  str x6, [x4], #8
0xffff8bd2d710  1104  str x4, [x16]
0xffff8bd2d714  1108  tst x4, #0x1ffff
0xffff8bd2d718  1112  b.eq #+0x8 (addr 0xffff8bd2d720)
0xffff8bd2d71c  1116  ret
0xffff8bd2d720  1120  sub csp, jssp, #0x8 (8)
0xffff8bd2d724  1124  str lr, [jssp, #-8]!
0xffff8bd2d728  1128  ldr x17, pc+720 (addr 0x0000ffff8bd2d9f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd2d72c  1132  blr x17
0xffff8bd2d730  1136  ldr lr, [jssp], #8
0xffff8bd2d734  1140  ret
0xffff8bd2d738  1144  ldp x0, x6, [jssp], #16
0xffff8bd2d73c  1148  sub csp, jssp, #0x78 (120)
0xffff8bd2d740  1152  stp x14, x15, [jssp, #-32]!
0xffff8bd2d744  1156  stp x18, lr, [jssp, #16]
0xffff8bd2d748  1160  stp x10, x11, [jssp, #-32]!
0xffff8bd2d74c  1164  stp x12, x13, [jssp, #16]
0xffff8bd2d750  1168  stp x6, x7, [jssp, #-32]!
0xffff8bd2d754  1172  stp x8, x9, [jssp, #16]
0xffff8bd2d758  1176  stp x0, x3, [jssp, #-24]!
0xffff8bd2d75c  1180  str x5, [jssp, #16]
0xffff8bd2d760  1184  sub csp, jssp, #0xb0 (176)
0xffff8bd2d764  1188  stp d26, d27, [jssp, #-32]!
0xffff8bd2d768  1192  stp d28, d29, [jssp, #16]
0xffff8bd2d76c  1196  stp d22, d23, [jssp, #-32]!
0xffff8bd2d770  1200  stp d24, d25, [jssp, #16]
0xffff8bd2d774  1204  stp d18, d19, [jssp, #-32]!
0xffff8bd2d778  1208  stp d20, d21, [jssp, #16]
0xffff8bd2d77c  1212  stp d6, d7, [jssp, #-32]!
0xffff8bd2d780  1216  stp d16, d17, [jssp, #16]
0xffff8bd2d784  1220  stp d2, d3, [jssp, #-32]!
0xffff8bd2d788  1224  stp d4, d5, [jssp, #16]
0xffff8bd2d78c  1228  stp d0, d1, [jssp, #-16]!
0xffff8bd2d790  1232  mov x1, x6
0xffff8bd2d794  1236  ldr x2, pc+620 (addr 0x0000ffff8bd2da00)    ;; external reference (isolate)
0xffff8bd2d798  1240  ldr x16, pc+624 (addr 0x0000ffff8bd2da08)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2d79c  1244  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2d7a0  1248  blr x16
0xffff8bd2d7a4  1252  ldp d2, d3, [jssp, #16]
0xffff8bd2d7a8  1256  ldp d0, d1, [jssp], #32
0xffff8bd2d7ac  1260  ldp d6, d7, [jssp, #16]
0xffff8bd2d7b0  1264  ldp d4, d5, [jssp], #32
0xffff8bd2d7b4  1268  ldp d18, d19, [jssp, #16]
0xffff8bd2d7b8  1272  ldp d16, d17, [jssp], #32
0xffff8bd2d7bc  1276  ldp d22, d23, [jssp, #16]
0xffff8bd2d7c0  1280  ldp d20, d21, [jssp], #32
0xffff8bd2d7c4  1284  ldp d26, d27, [jssp, #16]
0xffff8bd2d7c8  1288  ldp d24, d25, [jssp], #32
0xffff8bd2d7cc  1292  ldp d28, d29, [jssp], #16
0xffff8bd2d7d0  1296  ldp x5, x6, [jssp, #16]
0xffff8bd2d7d4  1300  ldp x0, x3, [jssp], #32
0xffff8bd2d7d8  1304  ldp x9, x10, [jssp, #16]
0xffff8bd2d7dc  1308  ldp x7, x8, [jssp], #32
0xffff8bd2d7e0  1312  ldp x13, x14, [jssp, #16]
0xffff8bd2d7e4  1316  ldp x11, x12, [jssp], #32
0xffff8bd2d7e8  1320  ldr lr, [jssp, #16]
0xffff8bd2d7ec  1324  ldp x15, x18, [jssp], #24
0xffff8bd2d7f0  1328  ldp x2, x1, [jssp], #16
0xffff8bd2d7f4  1332  ldr x16, pc+540 (addr 0x0000ffff8bd2da10)    ;; external reference (store_buffer_top)
0xffff8bd2d7f8  1336  ldr x4, [x16]
0xffff8bd2d7fc  1340  str x6, [x4], #8
0xffff8bd2d800  1344  str x4, [x16]
0xffff8bd2d804  1348  tst x4, #0x1ffff
0xffff8bd2d808  1352  b.eq #+0x8 (addr 0xffff8bd2d810)
0xffff8bd2d80c  1356  ret
0xffff8bd2d810  1360  sub csp, jssp, #0x8 (8)
0xffff8bd2d814  1364  str lr, [jssp, #-8]!
0xffff8bd2d818  1368  ldr x17, pc+512 (addr 0x0000ffff8bd2da18)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd2d81c  1372  blr x17
0xffff8bd2d820  1376  ldr lr, [jssp], #8
0xffff8bd2d824  1380  ret
0xffff8bd2d828  1384  and x4, x0, #0xfffffffffff00000
0xffff8bd2d82c  1388  ldr x1, [x4, #104]
0xffff8bd2d830  1392  subs x1, x1, #0x1 (1)
0xffff8bd2d834  1396  str x1, [x4, #104]
0xffff8bd2d838  1400  b.mi #+0x84 (addr 0xffff8bd2d8bc)
0xffff8bd2d83c  1404  ubfx x16, x0, #8, #12
0xffff8bd2d840  1408  and x4, x0, #0xfffffffffff00000
0xffff8bd2d844  1412  add x4, x4, x16, lsl #2
0xffff8bd2d848  1416  ubfx x1, x0, #3, #5
0xffff8bd2d84c  1420  ldr x4, [x4, #360]
0xffff8bd2d850  1424  lsr x4, x4, x1
0xffff8bd2d854  1428  tbz w4, #0, #+0x8 (addr 0xffff8bd2d85c)
0xffff8bd2d858  1432  tbnz w4, #1, #+0xc (addr 0xffff8bd2d864)
0xffff8bd2d85c  1436  ldp x2, x1, [jssp], #16
0xffff8bd2d860  1440  ret
0xffff8bd2d864  1444  ldr x4, [x6]
0xffff8bd2d868  1448  and x1, x4, #0xfffffffffff00000
0xffff8bd2d86c  1452  ldr x1, [x1, #8]
0xffff8bd2d870  1456  tbz w1, #6, #+0x18 (addr 0xffff8bd2d888)
0xffff8bd2d874  1460  and x1, x0, #0xfffffffffff00000
0xffff8bd2d878  1464  ldr x1, [x1, #8]
0xffff8bd2d87c  1468  movz x16, #0x58
0xffff8bd2d880  1472  tst x1, x16
0xffff8bd2d884  1476  b.eq #+0x38 (addr 0xffff8bd2d8bc)
0xffff8bd2d888  1480  sub csp, jssp, #0x10 (16)
0xffff8bd2d88c  1484  stp x0, x6, [jssp, #-16]!
0xffff8bd2d890  1488  ubfx x16, x4, #8, #12
0xffff8bd2d894  1492  and x1, x4, #0xfffffffffff00000
0xffff8bd2d898  1496  add x1, x1, x16, lsl #2
0xffff8bd2d89c  1500  ubfx x0, x4, #3, #5
0xffff8bd2d8a0  1504  ldr x6, [x1, #360]
0xffff8bd2d8a4  1508  lsr x6, x6, x0
0xffff8bd2d8a8  1512  tbz w6, #0, #+0x10 (addr 0xffff8bd2d8b8)
0xffff8bd2d8ac  1516  ldp x0, x6, [jssp], #16
0xffff8bd2d8b0  1520  ldp x2, x1, [jssp], #16
0xffff8bd2d8b4  1524  ret
0xffff8bd2d8b8  1528  ldp x0, x6, [jssp], #16
0xffff8bd2d8bc  1532  sub csp, jssp, #0x78 (120)
0xffff8bd2d8c0  1536  stp x14, x15, [jssp, #-32]!
0xffff8bd2d8c4  1540  stp x18, lr, [jssp, #16]
0xffff8bd2d8c8  1544  stp x10, x11, [jssp, #-32]!
0xffff8bd2d8cc  1548  stp x12, x13, [jssp, #16]
0xffff8bd2d8d0  1552  stp x6, x7, [jssp, #-32]!
0xffff8bd2d8d4  1556  stp x8, x9, [jssp, #16]
0xffff8bd2d8d8  1560  stp x0, x3, [jssp, #-24]!
0xffff8bd2d8dc  1564  str x5, [jssp, #16]
0xffff8bd2d8e0  1568  sub csp, jssp, #0xb0 (176)
0xffff8bd2d8e4  1572  stp d26, d27, [jssp, #-32]!
0xffff8bd2d8e8  1576  stp d28, d29, [jssp, #16]
0xffff8bd2d8ec  1580  stp d22, d23, [jssp, #-32]!
0xffff8bd2d8f0  1584  stp d24, d25, [jssp, #16]
0xffff8bd2d8f4  1588  stp d18, d19, [jssp, #-32]!
0xffff8bd2d8f8  1592  stp d20, d21, [jssp, #16]
0xffff8bd2d8fc  1596  stp d6, d7, [jssp, #-32]!
0xffff8bd2d900  1600  stp d16, d17, [jssp, #16]
0xffff8bd2d904  1604  stp d2, d3, [jssp, #-32]!
0xffff8bd2d908  1608  stp d4, d5, [jssp, #16]
0xffff8bd2d90c  1612  stp d0, d1, [jssp, #-16]!
0xffff8bd2d910  1616  mov x1, x6
0xffff8bd2d914  1620  ldr x2, pc+268 (addr 0x0000ffff8bd2da20)    ;; external reference (isolate)
0xffff8bd2d918  1624  ldr x16, pc+272 (addr 0x0000ffff8bd2da28)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2d91c  1628  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2d920  1632  blr x16
0xffff8bd2d924  1636  ldp d2, d3, [jssp, #16]
0xffff8bd2d928  1640  ldp d0, d1, [jssp], #32
0xffff8bd2d92c  1644  ldp d6, d7, [jssp, #16]
0xffff8bd2d930  1648  ldp d4, d5, [jssp], #32
0xffff8bd2d934  1652  ldp d18, d19, [jssp, #16]
0xffff8bd2d938  1656  ldp d16, d17, [jssp], #32
0xffff8bd2d93c  1660  ldp d22, d23, [jssp, #16]
0xffff8bd2d940  1664  ldp d20, d21, [jssp], #32
0xffff8bd2d944  1668  ldp d26, d27, [jssp, #16]
0xffff8bd2d948  1672  ldp d24, d25, [jssp], #32
0xffff8bd2d94c  1676  ldp d28, d29, [jssp], #16
0xffff8bd2d950  1680  ldp x5, x6, [jssp, #16]
0xffff8bd2d954  1684  ldp x0, x3, [jssp], #32
0xffff8bd2d958  1688  ldp x9, x10, [jssp, #16]
0xffff8bd2d95c  1692  ldp x7, x8, [jssp], #32
0xffff8bd2d960  1696  ldp x13, x14, [jssp, #16]
0xffff8bd2d964  1700  ldp x11, x12, [jssp], #32
0xffff8bd2d968  1704  ldr lr, [jssp, #16]
0xffff8bd2d96c  1708  ldp x15, x18, [jssp], #24
0xffff8bd2d970  1712  ldp x2, x1, [jssp], #16
0xffff8bd2d974  1716  ret
0xffff8bd2d978  1720  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd2d97c  1724  d63f03e0       constant
0xffff8bd2d980  1728  2cb8e8c0       constant
0xffff8bd2d984  1732  00000000       constant
0xffff8bd2d988  1736  8bd065a0       constant
0xffff8bd2d98c  1740  0000ffff       constant
0xffff8bd2d990  1744  2cb8e8c0       constant
0xffff8bd2d994  1748  00000000       constant
0xffff8bd2d998  1752  8bd065a0       constant
0xffff8bd2d99c  1756  0000ffff       constant
0xffff8bd2d9a0  1760  2cb8e8c0       constant
0xffff8bd2d9a4  1764  00000000       constant
0xffff8bd2d9a8  1768  8bd065a0       constant
0xffff8bd2d9ac  1772  0000ffff       constant
0xffff8bd2d9b0  1776  2cb8d2d0       constant
0xffff8bd2d9b4  1780  00000000       constant
0xffff8bd2d9b8  1784  00c2d958       constant
0xffff8bd2d9bc  1788  00000000       constant
0xffff8bd2d9c0  1792  2cb8e8c0       constant
0xffff8bd2d9c4  1796  00000000       constant
0xffff8bd2d9c8  1800  8bd065a0       constant
0xffff8bd2d9cc  1804  0000ffff       constant
0xffff8bd2d9d0  1808  2cb8d2d0       constant
0xffff8bd2d9d4  1812  00000000       constant
0xffff8bd2d9d8  1816  00c2d958       constant
0xffff8bd2d9dc  1820  00000000       constant
0xffff8bd2d9e0  1824  2cb8e8c0       constant
0xffff8bd2d9e4  1828  00000000       constant
0xffff8bd2d9e8  1832  8bd065a0       constant
0xffff8bd2d9ec  1836  0000ffff       constant
0xffff8bd2d9f0  1840  2cb8e8c0       constant
0xffff8bd2d9f4  1844  00000000       constant
0xffff8bd2d9f8  1848  8bd065a0       constant
0xffff8bd2d9fc  1852  0000ffff       constant
0xffff8bd2da00  1856  2cb8d2d0       constant
0xffff8bd2da04  1860  00000000       constant
0xffff8bd2da08  1864  00c2d958       constant
0xffff8bd2da0c  1868  00000000       constant
0xffff8bd2da10  1872  2cb8e8c0       constant
0xffff8bd2da14  1876  00000000       constant
0xffff8bd2da18  1880  8bd065a0       constant
0xffff8bd2da1c  1884  0000ffff       constant
0xffff8bd2da20  1888  2cb8d2d0       constant
0xffff8bd2da24  1892  00000000       constant
0xffff8bd2da28  1896  00c2d958       constant
0xffff8bd2da2c  1900  00000000       constant


RelocInfo (size = 65)
0xffff8bd2d2c8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2d2ec  code target (STUB)  (0xffff8bd065a0)
0xffff8bd2d364  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2d388  code target (STUB)  (0xffff8bd065a0)
0xffff8bd2d3c8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2d3ec  code target (STUB)  (0xffff8bd065a0)
0xffff8bd2d458  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2d45c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2d4b8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2d4dc  code target (STUB)  (0xffff8bd065a0)
0xffff8bd2d5b8  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2d5bc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2d680  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2d6a4  code target (STUB)  (0xffff8bd065a0)
0xffff8bd2d704  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2d728  code target (STUB)  (0xffff8bd065a0)
0xffff8bd2d794  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2d798  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2d7f4  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2d818  code target (STUB)  (0xffff8bd065a0)
0xffff8bd2d914  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2d918  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2d978  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1904)
0xffff8bd2daa0     0  adr xzr, #+0x40 (addr 0xffff8bd2dae0)
0xffff8bd2daa4     4  adr xzr, #+0x358 (addr 0xffff8bd2ddfc)
0xffff8bd2daa8     8  ldr x16, pc+1720 (addr 0x0000ffff8bd2e160)    ;; external reference (store_buffer_top)
0xffff8bd2daac    12  ldr x1, [x16]
0xffff8bd2dab0    16  str x2, [x1], #8
0xffff8bd2dab4    20  str x1, [x16]
0xffff8bd2dab8    24  tst x1, #0x1ffff
0xffff8bd2dabc    28  b.eq #+0x8 (addr 0xffff8bd2dac4)
0xffff8bd2dac0    32  ret
0xffff8bd2dac4    36  sub csp, jssp, #0x8 (8)
0xffff8bd2dac8    40  str lr, [jssp, #-8]!
0xffff8bd2dacc    44  ldr x17, pc+1692 (addr 0x0000ffff8bd2e168)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd2dad0    48  blr x17
0xffff8bd2dad4    52  ldr lr, [jssp], #8
0xffff8bd2dad8    56  ret
0xffff8bd2dadc    60  ret
0xffff8bd2dae0    64  sub csp, jssp, #0x10 (16)
0xffff8bd2dae4    68  stp x4, x3, [jssp, #-16]!
0xffff8bd2dae8    72  ldr x1, [x2]
0xffff8bd2daec    76  and x16, x1, #0xfffffffffff00000
0xffff8bd2daf0    80  ldr x16, [x16, #8]
0xffff8bd2daf4    84  tst x16, #0x18
0xffff8bd2daf8    88  b.eq #+0x1d4 (addr 0xffff8bd2dccc)
0xffff8bd2dafc    92  and x16, x0, #0xfffffffffff00000
0xffff8bd2db00    96  ldr x16, [x16, #8]
0xffff8bd2db04   100  tst x16, #0x18
0xffff8bd2db08   104  b.ne #+0x1c4 (addr 0xffff8bd2dccc)
0xffff8bd2db0c   108  and x1, x0, #0xfffffffffff00000
0xffff8bd2db10   112  ldr x3, [x1, #104]
0xffff8bd2db14   116  subs x3, x3, #0x1 (1)
0xffff8bd2db18   120  str x3, [x1, #104]
0xffff8bd2db1c   124  b.mi #+0xc4 (addr 0xffff8bd2dbe0)
0xffff8bd2db20   128  ubfx x16, x0, #8, #12
0xffff8bd2db24   132  and x1, x0, #0xfffffffffff00000
0xffff8bd2db28   136  add x1, x1, x16, lsl #2
0xffff8bd2db2c   140  ubfx x3, x0, #3, #5
0xffff8bd2db30   144  ldr x1, [x1, #360]
0xffff8bd2db34   148  lsr x1, x1, x3
0xffff8bd2db38   152  tbz w1, #0, #+0x8 (addr 0xffff8bd2db40)
0xffff8bd2db3c   156  tbnz w1, #1, #+0x3c (addr 0xffff8bd2db78)
0xffff8bd2db40   160  ldp x4, x3, [jssp], #16
0xffff8bd2db44   164  ldr x16, pc+1580 (addr 0x0000ffff8bd2e170)    ;; external reference (store_buffer_top)
0xffff8bd2db48   168  ldr x1, [x16]
0xffff8bd2db4c   172  str x2, [x1], #8
0xffff8bd2db50   176  str x1, [x16]
0xffff8bd2db54   180  tst x1, #0x1ffff
0xffff8bd2db58   184  b.eq #+0x8 (addr 0xffff8bd2db60)
0xffff8bd2db5c   188  ret
0xffff8bd2db60   192  sub csp, jssp, #0x8 (8)
0xffff8bd2db64   196  str lr, [jssp, #-8]!
0xffff8bd2db68   200  ldr x17, pc+1552 (addr 0x0000ffff8bd2e178)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd2db6c   204  blr x17
0xffff8bd2db70   208  ldr lr, [jssp], #8
0xffff8bd2db74   212  ret
0xffff8bd2db78   216  ldr x1, [x2]
0xffff8bd2db7c   220  sub csp, jssp, #0x10 (16)
0xffff8bd2db80   224  stp x0, x2, [jssp, #-16]!
0xffff8bd2db84   228  ubfx x16, x1, #8, #12
0xffff8bd2db88   232  and x3, x1, #0xfffffffffff00000
0xffff8bd2db8c   236  add x3, x3, x16, lsl #2
0xffff8bd2db90   240  ubfx x0, x1, #3, #5
0xffff8bd2db94   244  ldr x2, [x3, #360]
0xffff8bd2db98   248  lsr x2, x2, x0
0xffff8bd2db9c   252  tbz w2, #0, #+0x40 (addr 0xffff8bd2dbdc)
0xffff8bd2dba0   256  ldp x0, x2, [jssp], #16
0xffff8bd2dba4   260  ldp x4, x3, [jssp], #16
0xffff8bd2dba8   264  ldr x16, pc+1496 (addr 0x0000ffff8bd2e180)    ;; external reference (store_buffer_top)
0xffff8bd2dbac   268  ldr x1, [x16]
0xffff8bd2dbb0   272  str x2, [x1], #8
0xffff8bd2dbb4   276  str x1, [x16]
0xffff8bd2dbb8   280  tst x1, #0x1ffff
0xffff8bd2dbbc   284  b.eq #+0x8 (addr 0xffff8bd2dbc4)
0xffff8bd2dbc0   288  ret
0xffff8bd2dbc4   292  sub csp, jssp, #0x8 (8)
0xffff8bd2dbc8   296  str lr, [jssp, #-8]!
0xffff8bd2dbcc   300  ldr x17, pc+1468 (addr 0x0000ffff8bd2e188)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd2dbd0   304  blr x17
0xffff8bd2dbd4   308  ldr lr, [jssp], #8
0xffff8bd2dbd8   312  ret
0xffff8bd2dbdc   316  ldp x0, x2, [jssp], #16
0xffff8bd2dbe0   320  sub csp, jssp, #0x78 (120)
0xffff8bd2dbe4   324  stp x14, x15, [jssp, #-32]!
0xffff8bd2dbe8   328  stp x18, lr, [jssp, #16]
0xffff8bd2dbec   332  stp x10, x11, [jssp, #-32]!
0xffff8bd2dbf0   336  stp x12, x13, [jssp, #16]
0xffff8bd2dbf4   340  stp x6, x7, [jssp, #-32]!
0xffff8bd2dbf8   344  stp x8, x9, [jssp, #16]
0xffff8bd2dbfc   348  stp x0, x2, [jssp, #-24]!
0xffff8bd2dc00   352  str x5, [jssp, #16]
0xffff8bd2dc04   356  sub csp, jssp, #0xb0 (176)
0xffff8bd2dc08   360  stp d26, d27, [jssp, #-32]!
0xffff8bd2dc0c   364  stp d28, d29, [jssp, #16]
0xffff8bd2dc10   368  stp d22, d23, [jssp, #-32]!
0xffff8bd2dc14   372  stp d24, d25, [jssp, #16]
0xffff8bd2dc18   376  stp d18, d19, [jssp, #-32]!
0xffff8bd2dc1c   380  stp d20, d21, [jssp, #16]
0xffff8bd2dc20   384  stp d6, d7, [jssp, #-32]!
0xffff8bd2dc24   388  stp d16, d17, [jssp, #16]
0xffff8bd2dc28   392  stp d2, d3, [jssp, #-32]!
0xffff8bd2dc2c   396  stp d4, d5, [jssp, #16]
0xffff8bd2dc30   400  stp d0, d1, [jssp, #-16]!
0xffff8bd2dc34   404  mov x1, x2
0xffff8bd2dc38   408  ldr x2, pc+1368 (addr 0x0000ffff8bd2e190)    ;; external reference (isolate)
0xffff8bd2dc3c   412  ldr x16, pc+1372 (addr 0x0000ffff8bd2e198)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2dc40   416  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2dc44   420  blr x16
0xffff8bd2dc48   424  ldp d2, d3, [jssp, #16]
0xffff8bd2dc4c   428  ldp d0, d1, [jssp], #32
0xffff8bd2dc50   432  ldp d6, d7, [jssp, #16]
0xffff8bd2dc54   436  ldp d4, d5, [jssp], #32
0xffff8bd2dc58   440  ldp d18, d19, [jssp, #16]
0xffff8bd2dc5c   444  ldp d16, d17, [jssp], #32
0xffff8bd2dc60   448  ldp d22, d23, [jssp, #16]
0xffff8bd2dc64   452  ldp d20, d21, [jssp], #32
0xffff8bd2dc68   456  ldp d26, d27, [jssp, #16]
0xffff8bd2dc6c   460  ldp d24, d25, [jssp], #32
0xffff8bd2dc70   464  ldp d28, d29, [jssp], #16
0xffff8bd2dc74   468  ldp x5, x6, [jssp, #16]
0xffff8bd2dc78   472  ldp x0, x2, [jssp], #32
0xffff8bd2dc7c   476  ldp x9, x10, [jssp, #16]
0xffff8bd2dc80   480  ldp x7, x8, [jssp], #32
0xffff8bd2dc84   484  ldp x13, x14, [jssp, #16]
0xffff8bd2dc88   488  ldp x11, x12, [jssp], #32
0xffff8bd2dc8c   492  ldr lr, [jssp, #16]
0xffff8bd2dc90   496  ldp x15, x18, [jssp], #24
0xffff8bd2dc94   500  ldp x4, x3, [jssp], #16
0xffff8bd2dc98   504  ldr x16, pc+1288 (addr 0x0000ffff8bd2e1a0)    ;; external reference (store_buffer_top)
0xffff8bd2dc9c   508  ldr x1, [x16]
0xffff8bd2dca0   512  str x2, [x1], #8
0xffff8bd2dca4   516  str x1, [x16]
0xffff8bd2dca8   520  tst x1, #0x1ffff
0xffff8bd2dcac   524  b.eq #+0x8 (addr 0xffff8bd2dcb4)
0xffff8bd2dcb0   528  ret
0xffff8bd2dcb4   532  sub csp, jssp, #0x8 (8)
0xffff8bd2dcb8   536  str lr, [jssp, #-8]!
0xffff8bd2dcbc   540  ldr x17, pc+1260 (addr 0x0000ffff8bd2e1a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd2dcc0   544  blr x17
0xffff8bd2dcc4   548  ldr lr, [jssp], #8
0xffff8bd2dcc8   552  ret
0xffff8bd2dccc   556  and x1, x0, #0xfffffffffff00000
0xffff8bd2dcd0   560  ldr x3, [x1, #104]
0xffff8bd2dcd4   564  subs x3, x3, #0x1 (1)
0xffff8bd2dcd8   568  str x3, [x1, #104]
0xffff8bd2dcdc   572  b.mi #+0x64 (addr 0xffff8bd2dd40)
0xffff8bd2dce0   576  ubfx x16, x0, #8, #12
0xffff8bd2dce4   580  and x1, x0, #0xfffffffffff00000
0xffff8bd2dce8   584  add x1, x1, x16, lsl #2
0xffff8bd2dcec   588  ubfx x3, x0, #3, #5
0xffff8bd2dcf0   592  ldr x1, [x1, #360]
0xffff8bd2dcf4   596  lsr x1, x1, x3
0xffff8bd2dcf8   600  tbz w1, #0, #+0x8 (addr 0xffff8bd2dd00)
0xffff8bd2dcfc   604  tbnz w1, #1, #+0xc (addr 0xffff8bd2dd08)
0xffff8bd2dd00   608  ldp x4, x3, [jssp], #16
0xffff8bd2dd04   612  ret
0xffff8bd2dd08   616  ldr x1, [x2]
0xffff8bd2dd0c   620  sub csp, jssp, #0x10 (16)
0xffff8bd2dd10   624  stp x0, x2, [jssp, #-16]!
0xffff8bd2dd14   628  ubfx x16, x1, #8, #12
0xffff8bd2dd18   632  and x3, x1, #0xfffffffffff00000
0xffff8bd2dd1c   636  add x3, x3, x16, lsl #2
0xffff8bd2dd20   640  ubfx x0, x1, #3, #5
0xffff8bd2dd24   644  ldr x2, [x3, #360]
0xffff8bd2dd28   648  lsr x2, x2, x0
0xffff8bd2dd2c   652  tbz w2, #0, #+0x10 (addr 0xffff8bd2dd3c)
0xffff8bd2dd30   656  ldp x0, x2, [jssp], #16
0xffff8bd2dd34   660  ldp x4, x3, [jssp], #16
0xffff8bd2dd38   664  ret
0xffff8bd2dd3c   668  ldp x0, x2, [jssp], #16
0xffff8bd2dd40   672  sub csp, jssp, #0x78 (120)
0xffff8bd2dd44   676  stp x14, x15, [jssp, #-32]!
0xffff8bd2dd48   680  stp x18, lr, [jssp, #16]
0xffff8bd2dd4c   684  stp x10, x11, [jssp, #-32]!
0xffff8bd2dd50   688  stp x12, x13, [jssp, #16]
0xffff8bd2dd54   692  stp x6, x7, [jssp, #-32]!
0xffff8bd2dd58   696  stp x8, x9, [jssp, #16]
0xffff8bd2dd5c   700  stp x0, x2, [jssp, #-24]!
0xffff8bd2dd60   704  str x5, [jssp, #16]
0xffff8bd2dd64   708  sub csp, jssp, #0xb0 (176)
0xffff8bd2dd68   712  stp d26, d27, [jssp, #-32]!
0xffff8bd2dd6c   716  stp d28, d29, [jssp, #16]
0xffff8bd2dd70   720  stp d22, d23, [jssp, #-32]!
0xffff8bd2dd74   724  stp d24, d25, [jssp, #16]
0xffff8bd2dd78   728  stp d18, d19, [jssp, #-32]!
0xffff8bd2dd7c   732  stp d20, d21, [jssp, #16]
0xffff8bd2dd80   736  stp d6, d7, [jssp, #-32]!
0xffff8bd2dd84   740  stp d16, d17, [jssp, #16]
0xffff8bd2dd88   744  stp d2, d3, [jssp, #-32]!
0xffff8bd2dd8c   748  stp d4, d5, [jssp, #16]
0xffff8bd2dd90   752  stp d0, d1, [jssp, #-16]!
0xffff8bd2dd94   756  mov x1, x2
0xffff8bd2dd98   760  ldr x2, pc+1048 (addr 0x0000ffff8bd2e1b0)    ;; external reference (isolate)
0xffff8bd2dd9c   764  ldr x16, pc+1052 (addr 0x0000ffff8bd2e1b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2dda0   768  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2dda4   772  blr x16
0xffff8bd2dda8   776  ldp d2, d3, [jssp, #16]
0xffff8bd2ddac   780  ldp d0, d1, [jssp], #32
0xffff8bd2ddb0   784  ldp d6, d7, [jssp, #16]
0xffff8bd2ddb4   788  ldp d4, d5, [jssp], #32
0xffff8bd2ddb8   792  ldp d18, d19, [jssp, #16]
0xffff8bd2ddbc   796  ldp d16, d17, [jssp], #32
0xffff8bd2ddc0   800  ldp d22, d23, [jssp, #16]
0xffff8bd2ddc4   804  ldp d20, d21, [jssp], #32
0xffff8bd2ddc8   808  ldp d26, d27, [jssp, #16]
0xffff8bd2ddcc   812  ldp d24, d25, [jssp], #32
0xffff8bd2ddd0   816  ldp d28, d29, [jssp], #16
0xffff8bd2ddd4   820  ldp x5, x6, [jssp, #16]
0xffff8bd2ddd8   824  ldp x0, x2, [jssp], #32
0xffff8bd2dddc   828  ldp x9, x10, [jssp, #16]
0xffff8bd2dde0   832  ldp x7, x8, [jssp], #32
0xffff8bd2dde4   836  ldp x13, x14, [jssp, #16]
0xffff8bd2dde8   840  ldp x11, x12, [jssp], #32
0xffff8bd2ddec   844  ldr lr, [jssp, #16]
0xffff8bd2ddf0   848  ldp x15, x18, [jssp], #24
0xffff8bd2ddf4   852  ldp x4, x3, [jssp], #16
0xffff8bd2ddf8   856  ret
0xffff8bd2ddfc   860  sub csp, jssp, #0x10 (16)
0xffff8bd2de00   864  stp x4, x3, [jssp, #-16]!
0xffff8bd2de04   868  ldr x1, [x2]
0xffff8bd2de08   872  and x16, x1, #0xfffffffffff00000
0xffff8bd2de0c   876  ldr x16, [x16, #8]
0xffff8bd2de10   880  tst x16, #0x18
0xffff8bd2de14   884  b.eq #+0x1f4 (addr 0xffff8bd2e008)
0xffff8bd2de18   888  and x16, x0, #0xfffffffffff00000
0xffff8bd2de1c   892  ldr x16, [x16, #8]
0xffff8bd2de20   896  tst x16, #0x18
0xffff8bd2de24   900  b.ne #+0x1e4 (addr 0xffff8bd2e008)
0xffff8bd2de28   904  and x1, x0, #0xfffffffffff00000
0xffff8bd2de2c   908  ldr x3, [x1, #104]
0xffff8bd2de30   912  subs x3, x3, #0x1 (1)
0xffff8bd2de34   916  str x3, [x1, #104]
0xffff8bd2de38   920  b.mi #+0xe4 (addr 0xffff8bd2df1c)
0xffff8bd2de3c   924  ubfx x16, x0, #8, #12
0xffff8bd2de40   928  and x1, x0, #0xfffffffffff00000
0xffff8bd2de44   932  add x1, x1, x16, lsl #2
0xffff8bd2de48   936  ubfx x3, x0, #3, #5
0xffff8bd2de4c   940  ldr x1, [x1, #360]
0xffff8bd2de50   944  lsr x1, x1, x3
0xffff8bd2de54   948  tbz w1, #0, #+0x8 (addr 0xffff8bd2de5c)
0xffff8bd2de58   952  tbnz w1, #1, #+0x3c (addr 0xffff8bd2de94)
0xffff8bd2de5c   956  ldp x4, x3, [jssp], #16
0xffff8bd2de60   960  ldr x16, pc+864 (addr 0x0000ffff8bd2e1c0)    ;; external reference (store_buffer_top)
0xffff8bd2de64   964  ldr x1, [x16]
0xffff8bd2de68   968  str x2, [x1], #8
0xffff8bd2de6c   972  str x1, [x16]
0xffff8bd2de70   976  tst x1, #0x1ffff
0xffff8bd2de74   980  b.eq #+0x8 (addr 0xffff8bd2de7c)
0xffff8bd2de78   984  ret
0xffff8bd2de7c   988  sub csp, jssp, #0x8 (8)
0xffff8bd2de80   992  str lr, [jssp, #-8]!
0xffff8bd2de84   996  ldr x17, pc+836 (addr 0x0000ffff8bd2e1c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd2de88  1000  blr x17
0xffff8bd2de8c  1004  ldr lr, [jssp], #8
0xffff8bd2de90  1008  ret
0xffff8bd2de94  1012  ldr x1, [x2]
0xffff8bd2de98  1016  and x3, x1, #0xfffffffffff00000
0xffff8bd2de9c  1020  ldr x3, [x3, #8]
0xffff8bd2dea0  1024  tbz w3, #6, #+0x18 (addr 0xffff8bd2deb8)
0xffff8bd2dea4  1028  and x3, x0, #0xfffffffffff00000
0xffff8bd2dea8  1032  ldr x3, [x3, #8]
0xffff8bd2deac  1036  movz x16, #0x58
0xffff8bd2deb0  1040  tst x3, x16
0xffff8bd2deb4  1044  b.eq #+0x68 (addr 0xffff8bd2df1c)
0xffff8bd2deb8  1048  sub csp, jssp, #0x10 (16)
0xffff8bd2debc  1052  stp x0, x2, [jssp, #-16]!
0xffff8bd2dec0  1056  ubfx x16, x1, #8, #12
0xffff8bd2dec4  1060  and x3, x1, #0xfffffffffff00000
0xffff8bd2dec8  1064  add x3, x3, x16, lsl #2
0xffff8bd2decc  1068  ubfx x0, x1, #3, #5
0xffff8bd2ded0  1072  ldr x2, [x3, #360]
0xffff8bd2ded4  1076  lsr x2, x2, x0
0xffff8bd2ded8  1080  tbz w2, #0, #+0x40 (addr 0xffff8bd2df18)
0xffff8bd2dedc  1084  ldp x0, x2, [jssp], #16
0xffff8bd2dee0  1088  ldp x4, x3, [jssp], #16
0xffff8bd2dee4  1092  ldr x16, pc+748 (addr 0x0000ffff8bd2e1d0)    ;; external reference (store_buffer_top)
0xffff8bd2dee8  1096  ldr x1, [x16]
0xffff8bd2deec  1100  str x2, [x1], #8
0xffff8bd2def0  1104  str x1, [x16]
0xffff8bd2def4  1108  tst x1, #0x1ffff
0xffff8bd2def8  1112  b.eq #+0x8 (addr 0xffff8bd2df00)
0xffff8bd2defc  1116  ret
0xffff8bd2df00  1120  sub csp, jssp, #0x8 (8)
0xffff8bd2df04  1124  str lr, [jssp, #-8]!
0xffff8bd2df08  1128  ldr x17, pc+720 (addr 0x0000ffff8bd2e1d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd2df0c  1132  blr x17
0xffff8bd2df10  1136  ldr lr, [jssp], #8
0xffff8bd2df14  1140  ret
0xffff8bd2df18  1144  ldp x0, x2, [jssp], #16
0xffff8bd2df1c  1148  sub csp, jssp, #0x78 (120)
0xffff8bd2df20  1152  stp x14, x15, [jssp, #-32]!
0xffff8bd2df24  1156  stp x18, lr, [jssp, #16]
0xffff8bd2df28  1160  stp x10, x11, [jssp, #-32]!
0xffff8bd2df2c  1164  stp x12, x13, [jssp, #16]
0xffff8bd2df30  1168  stp x6, x7, [jssp, #-32]!
0xffff8bd2df34  1172  stp x8, x9, [jssp, #16]
0xffff8bd2df38  1176  stp x0, x2, [jssp, #-24]!
0xffff8bd2df3c  1180  str x5, [jssp, #16]
0xffff8bd2df40  1184  sub csp, jssp, #0xb0 (176)
0xffff8bd2df44  1188  stp d26, d27, [jssp, #-32]!
0xffff8bd2df48  1192  stp d28, d29, [jssp, #16]
0xffff8bd2df4c  1196  stp d22, d23, [jssp, #-32]!
0xffff8bd2df50  1200  stp d24, d25, [jssp, #16]
0xffff8bd2df54  1204  stp d18, d19, [jssp, #-32]!
0xffff8bd2df58  1208  stp d20, d21, [jssp, #16]
0xffff8bd2df5c  1212  stp d6, d7, [jssp, #-32]!
0xffff8bd2df60  1216  stp d16, d17, [jssp, #16]
0xffff8bd2df64  1220  stp d2, d3, [jssp, #-32]!
0xffff8bd2df68  1224  stp d4, d5, [jssp, #16]
0xffff8bd2df6c  1228  stp d0, d1, [jssp, #-16]!
0xffff8bd2df70  1232  mov x1, x2
0xffff8bd2df74  1236  ldr x2, pc+620 (addr 0x0000ffff8bd2e1e0)    ;; external reference (isolate)
0xffff8bd2df78  1240  ldr x16, pc+624 (addr 0x0000ffff8bd2e1e8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2df7c  1244  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2df80  1248  blr x16
0xffff8bd2df84  1252  ldp d2, d3, [jssp, #16]
0xffff8bd2df88  1256  ldp d0, d1, [jssp], #32
0xffff8bd2df8c  1260  ldp d6, d7, [jssp, #16]
0xffff8bd2df90  1264  ldp d4, d5, [jssp], #32
0xffff8bd2df94  1268  ldp d18, d19, [jssp, #16]
0xffff8bd2df98  1272  ldp d16, d17, [jssp], #32
0xffff8bd2df9c  1276  ldp d22, d23, [jssp, #16]
0xffff8bd2dfa0  1280  ldp d20, d21, [jssp], #32
0xffff8bd2dfa4  1284  ldp d26, d27, [jssp, #16]
0xffff8bd2dfa8  1288  ldp d24, d25, [jssp], #32
0xffff8bd2dfac  1292  ldp d28, d29, [jssp], #16
0xffff8bd2dfb0  1296  ldp x5, x6, [jssp, #16]
0xffff8bd2dfb4  1300  ldp x0, x2, [jssp], #32
0xffff8bd2dfb8  1304  ldp x9, x10, [jssp, #16]
0xffff8bd2dfbc  1308  ldp x7, x8, [jssp], #32
0xffff8bd2dfc0  1312  ldp x13, x14, [jssp, #16]
0xffff8bd2dfc4  1316  ldp x11, x12, [jssp], #32
0xffff8bd2dfc8  1320  ldr lr, [jssp, #16]
0xffff8bd2dfcc  1324  ldp x15, x18, [jssp], #24
0xffff8bd2dfd0  1328  ldp x4, x3, [jssp], #16
0xffff8bd2dfd4  1332  ldr x16, pc+540 (addr 0x0000ffff8bd2e1f0)    ;; external reference (store_buffer_top)
0xffff8bd2dfd8  1336  ldr x1, [x16]
0xffff8bd2dfdc  1340  str x2, [x1], #8
0xffff8bd2dfe0  1344  str x1, [x16]
0xffff8bd2dfe4  1348  tst x1, #0x1ffff
0xffff8bd2dfe8  1352  b.eq #+0x8 (addr 0xffff8bd2dff0)
0xffff8bd2dfec  1356  ret
0xffff8bd2dff0  1360  sub csp, jssp, #0x8 (8)
0xffff8bd2dff4  1364  str lr, [jssp, #-8]!
0xffff8bd2dff8  1368  ldr x17, pc+512 (addr 0x0000ffff8bd2e1f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd2dffc  1372  blr x17
0xffff8bd2e000  1376  ldr lr, [jssp], #8
0xffff8bd2e004  1380  ret
0xffff8bd2e008  1384  and x1, x0, #0xfffffffffff00000
0xffff8bd2e00c  1388  ldr x3, [x1, #104]
0xffff8bd2e010  1392  subs x3, x3, #0x1 (1)
0xffff8bd2e014  1396  str x3, [x1, #104]
0xffff8bd2e018  1400  b.mi #+0x84 (addr 0xffff8bd2e09c)
0xffff8bd2e01c  1404  ubfx x16, x0, #8, #12
0xffff8bd2e020  1408  and x1, x0, #0xfffffffffff00000
0xffff8bd2e024  1412  add x1, x1, x16, lsl #2
0xffff8bd2e028  1416  ubfx x3, x0, #3, #5
0xffff8bd2e02c  1420  ldr x1, [x1, #360]
0xffff8bd2e030  1424  lsr x1, x1, x3
0xffff8bd2e034  1428  tbz w1, #0, #+0x8 (addr 0xffff8bd2e03c)
0xffff8bd2e038  1432  tbnz w1, #1, #+0xc (addr 0xffff8bd2e044)
0xffff8bd2e03c  1436  ldp x4, x3, [jssp], #16
0xffff8bd2e040  1440  ret
0xffff8bd2e044  1444  ldr x1, [x2]
0xffff8bd2e048  1448  and x3, x1, #0xfffffffffff00000
0xffff8bd2e04c  1452  ldr x3, [x3, #8]
0xffff8bd2e050  1456  tbz w3, #6, #+0x18 (addr 0xffff8bd2e068)
0xffff8bd2e054  1460  and x3, x0, #0xfffffffffff00000
0xffff8bd2e058  1464  ldr x3, [x3, #8]
0xffff8bd2e05c  1468  movz x16, #0x58
0xffff8bd2e060  1472  tst x3, x16
0xffff8bd2e064  1476  b.eq #+0x38 (addr 0xffff8bd2e09c)
0xffff8bd2e068  1480  sub csp, jssp, #0x10 (16)
0xffff8bd2e06c  1484  stp x0, x2, [jssp, #-16]!
0xffff8bd2e070  1488  ubfx x16, x1, #8, #12
0xffff8bd2e074  1492  and x3, x1, #0xfffffffffff00000
0xffff8bd2e078  1496  add x3, x3, x16, lsl #2
0xffff8bd2e07c  1500  ubfx x0, x1, #3, #5
0xffff8bd2e080  1504  ldr x2, [x3, #360]
0xffff8bd2e084  1508  lsr x2, x2, x0
0xffff8bd2e088  1512  tbz w2, #0, #+0x10 (addr 0xffff8bd2e098)
0xffff8bd2e08c  1516  ldp x0, x2, [jssp], #16
0xffff8bd2e090  1520  ldp x4, x3, [jssp], #16
0xffff8bd2e094  1524  ret
0xffff8bd2e098  1528  ldp x0, x2, [jssp], #16
0xffff8bd2e09c  1532  sub csp, jssp, #0x78 (120)
0xffff8bd2e0a0  1536  stp x14, x15, [jssp, #-32]!
0xffff8bd2e0a4  1540  stp x18, lr, [jssp, #16]
0xffff8bd2e0a8  1544  stp x10, x11, [jssp, #-32]!
0xffff8bd2e0ac  1548  stp x12, x13, [jssp, #16]
0xffff8bd2e0b0  1552  stp x6, x7, [jssp, #-32]!
0xffff8bd2e0b4  1556  stp x8, x9, [jssp, #16]
0xffff8bd2e0b8  1560  stp x0, x2, [jssp, #-24]!
0xffff8bd2e0bc  1564  str x5, [jssp, #16]
0xffff8bd2e0c0  1568  sub csp, jssp, #0xb0 (176)
0xffff8bd2e0c4  1572  stp d26, d27, [jssp, #-32]!
0xffff8bd2e0c8  1576  stp d28, d29, [jssp, #16]
0xffff8bd2e0cc  1580  stp d22, d23, [jssp, #-32]!
0xffff8bd2e0d0  1584  stp d24, d25, [jssp, #16]
0xffff8bd2e0d4  1588  stp d18, d19, [jssp, #-32]!
0xffff8bd2e0d8  1592  stp d20, d21, [jssp, #16]
0xffff8bd2e0dc  1596  stp d6, d7, [jssp, #-32]!
0xffff8bd2e0e0  1600  stp d16, d17, [jssp, #16]
0xffff8bd2e0e4  1604  stp d2, d3, [jssp, #-32]!
0xffff8bd2e0e8  1608  stp d4, d5, [jssp, #16]
0xffff8bd2e0ec  1612  stp d0, d1, [jssp, #-16]!
0xffff8bd2e0f0  1616  mov x1, x2
0xffff8bd2e0f4  1620  ldr x2, pc+268 (addr 0x0000ffff8bd2e200)    ;; external reference (isolate)
0xffff8bd2e0f8  1624  ldr x16, pc+272 (addr 0x0000ffff8bd2e208)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2e0fc  1628  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2e100  1632  blr x16
0xffff8bd2e104  1636  ldp d2, d3, [jssp, #16]
0xffff8bd2e108  1640  ldp d0, d1, [jssp], #32
0xffff8bd2e10c  1644  ldp d6, d7, [jssp, #16]
0xffff8bd2e110  1648  ldp d4, d5, [jssp], #32
0xffff8bd2e114  1652  ldp d18, d19, [jssp, #16]
0xffff8bd2e118  1656  ldp d16, d17, [jssp], #32
0xffff8bd2e11c  1660  ldp d22, d23, [jssp, #16]
0xffff8bd2e120  1664  ldp d20, d21, [jssp], #32
0xffff8bd2e124  1668  ldp d26, d27, [jssp, #16]
0xffff8bd2e128  1672  ldp d24, d25, [jssp], #32
0xffff8bd2e12c  1676  ldp d28, d29, [jssp], #16
0xffff8bd2e130  1680  ldp x5, x6, [jssp, #16]
0xffff8bd2e134  1684  ldp x0, x2, [jssp], #32
0xffff8bd2e138  1688  ldp x9, x10, [jssp, #16]
0xffff8bd2e13c  1692  ldp x7, x8, [jssp], #32
0xffff8bd2e140  1696  ldp x13, x14, [jssp, #16]
0xffff8bd2e144  1700  ldp x11, x12, [jssp], #32
0xffff8bd2e148  1704  ldr lr, [jssp, #16]
0xffff8bd2e14c  1708  ldp x15, x18, [jssp], #24
0xffff8bd2e150  1712  ldp x4, x3, [jssp], #16
0xffff8bd2e154  1716  ret
0xffff8bd2e158  1720  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd2e15c  1724  d63f03e0       constant
0xffff8bd2e160  1728  2cb8e8c0       constant
0xffff8bd2e164  1732  00000000       constant
0xffff8bd2e168  1736  8bd065a0       constant
0xffff8bd2e16c  1740  0000ffff       constant
0xffff8bd2e170  1744  2cb8e8c0       constant
0xffff8bd2e174  1748  00000000       constant
0xffff8bd2e178  1752  8bd065a0       constant
0xffff8bd2e17c  1756  0000ffff       constant
0xffff8bd2e180  1760  2cb8e8c0       constant
0xffff8bd2e184  1764  00000000       constant
0xffff8bd2e188  1768  8bd065a0       constant
0xffff8bd2e18c  1772  0000ffff       constant
0xffff8bd2e190  1776  2cb8d2d0       constant
0xffff8bd2e194  1780  00000000       constant
0xffff8bd2e198  1784  00c2d958       constant
0xffff8bd2e19c  1788  00000000       constant
0xffff8bd2e1a0  1792  2cb8e8c0       constant
0xffff8bd2e1a4  1796  00000000       constant
0xffff8bd2e1a8  1800  8bd065a0       constant
0xffff8bd2e1ac  1804  0000ffff       constant
0xffff8bd2e1b0  1808  2cb8d2d0       constant
0xffff8bd2e1b4  1812  00000000       constant
0xffff8bd2e1b8  1816  00c2d958       constant
0xffff8bd2e1bc  1820  00000000       constant
0xffff8bd2e1c0  1824  2cb8e8c0       constant
0xffff8bd2e1c4  1828  00000000       constant
0xffff8bd2e1c8  1832  8bd065a0       constant
0xffff8bd2e1cc  1836  0000ffff       constant
0xffff8bd2e1d0  1840  2cb8e8c0       constant
0xffff8bd2e1d4  1844  00000000       constant
0xffff8bd2e1d8  1848  8bd065a0       constant
0xffff8bd2e1dc  1852  0000ffff       constant
0xffff8bd2e1e0  1856  2cb8d2d0       constant
0xffff8bd2e1e4  1860  00000000       constant
0xffff8bd2e1e8  1864  00c2d958       constant
0xffff8bd2e1ec  1868  00000000       constant
0xffff8bd2e1f0  1872  2cb8e8c0       constant
0xffff8bd2e1f4  1876  00000000       constant
0xffff8bd2e1f8  1880  8bd065a0       constant
0xffff8bd2e1fc  1884  0000ffff       constant
0xffff8bd2e200  1888  2cb8d2d0       constant
0xffff8bd2e204  1892  00000000       constant
0xffff8bd2e208  1896  00c2d958       constant
0xffff8bd2e20c  1900  00000000       constant


RelocInfo (size = 65)
0xffff8bd2daa8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2dacc  code target (STUB)  (0xffff8bd065a0)
0xffff8bd2db44  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2db68  code target (STUB)  (0xffff8bd065a0)
0xffff8bd2dba8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2dbcc  code target (STUB)  (0xffff8bd065a0)
0xffff8bd2dc38  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2dc3c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2dc98  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2dcbc  code target (STUB)  (0xffff8bd065a0)
0xffff8bd2dd98  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2dd9c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2de60  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2de84  code target (STUB)  (0xffff8bd065a0)
0xffff8bd2dee4  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2df08  code target (STUB)  (0xffff8bd065a0)
0xffff8bd2df74  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2df78  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2dfd4  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2dff8  code target (STUB)  (0xffff8bd065a0)
0xffff8bd2e0f4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2e0f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2e158  constant pool (size 184)


kind = STUB
major_key = FastNewClosureStub
name = FastNewClosureStub
compiler = crankshaft
Instructions (size = 773)
0xffff8bd2e280     0  movz x1, #0xe2c0
0xffff8bd2e284     4  movk x1, #0x2cb8, lsl #16
0xffff8bd2e288     8  ldp x3, x0, [x1]
0xffff8bd2e28c    12  adds x16, x3, #0x48 (72)
0xffff8bd2e290    16  ccmp x16, x0, #nzCv, lo
0xffff8bd2e294    20  b.hi #+0x1bc (addr 0xffff8bd2e450)
0xffff8bd2e298    24  str x16, [x1]
0xffff8bd2e29c    28  orr x3, x3, #0x1
0xffff8bd2e2a0    32  ldur x0, [cp, #39]
0xffff8bd2e2a4    36  movz x16, #0x2cf
0xffff8bd2e2a8    40  ldr x1, [x0, x16]
0xffff8bd2e2ac    44  stur x1, [x3, #-1]
0xffff8bd2e2b0    48  ldr x1, pc+528 (addr 0x0000ffff8bd2e4c0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd2e2b4    52  stur x1, [x3, #7]
0xffff8bd2e2b8    56  ldr x1, pc+528 (addr 0x0000ffff8bd2e4c8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd2e2bc    60  stur x1, [x3, #15]
0xffff8bd2e2c0    64  ldr x1, pc+528 (addr 0x0000ffff8bd2e4d0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd2e2c4    68  stur x1, [x3, #47]
0xffff8bd2e2c8    72  ldr x1, pc+528 (addr 0x0000ffff8bd2e4d8)    ;; object: 0x26c04519 <the hole>
0xffff8bd2e2cc    76  stur x1, [x3, #23]
0xffff8bd2e2d0    80  stur x2, [x3, #31]
0xffff8bd2e2d4    84  stur cp, [x3, #39]
0xffff8bd2e2d8    88  ldur x1, [x2, #23]
0xffff8bd2e2dc    92  movz x4, #0x0
0xffff8bd2e2e0    96  cmp x1, x4
0xffff8bd2e2e4   100  b.eq #+0x150 (addr 0xffff8bd2e434)
0xffff8bd2e2e8   104  ldur w4, [x1, #11]
0xffff8bd2e2ec   108  subs w4, w4, #0x4 (4)
0xffff8bd2e2f0   112  b.vs #+0x230 (addr 0xffff8bd2e520)
0xffff8bd2e2f4   116  mov x5, x4
0xffff8bd2e2f8   120  cmp w5, #0x1 (1)
0xffff8bd2e2fc   124  b.lt #+0xb4 (addr 0xffff8bd2e3b0)
0xffff8bd2e300   128  add x4, x1, #0xf (15)
0xffff8bd2e304   132  ldr x6, [x4, w5, sxtw #3]
0xffff8bd2e308   136  ldur x4, [x6, #7]
0xffff8bd2e30c   140  add x6, x1, #0x27 (39)
0xffff8bd2e310   144  ldr x7, [x6, w5, sxtw #3]
0xffff8bd2e314   148  add x6, x1, #0x17 (23)
0xffff8bd2e318   152  ldr x8, [x6, w5, sxtw #3]
0xffff8bd2e31c   156  ldur x6, [x8, #7]
0xffff8bd2e320   160  cmp x0, x4
0xffff8bd2e324   164  b.ne #+0x1c (addr 0xffff8bd2e340)
0xffff8bd2e328   168  mov x4, #0xffffffff00000000
0xffff8bd2e32c   172  cmp x7, x4
0xffff8bd2e330   176  b.ne #+0x10 (addr 0xffff8bd2e340)
0xffff8bd2e334   180  movz x4, #0x0
0xffff8bd2e338   184  cmp x6, x4
0xffff8bd2e33c   188  b.ne #+0xc (addr 0xffff8bd2e348)
0xffff8bd2e340   192  sub w5, w5, #0x4 (4)
0xffff8bd2e344   196  b #-0x4c (addr 0xffff8bd2e2f8)
0xffff8bd2e348   200  add x4, x1, #0x1f (31)
0xffff8bd2e34c   204  ldr x7, [x4, w5, sxtw #3]
0xffff8bd2e350   208  ldur x7, [x7, #7]
0xffff8bd2e354   212  movz x4, #0x0
0xffff8bd2e358   216  cmp x7, x4
0xffff8bd2e35c   220  b.eq #+0x50 (addr 0xffff8bd2e3ac)
0xffff8bd2e360   224  add x4, x6, #0x5f (95)
0xffff8bd2e364   228  stur x4, [x3, #55]
0xffff8bd2e368   232  stur x7, [x3, #47]
0xffff8bd2e36c   236  movz x16, #0x557
0xffff8bd2e370   240  ldr x4, [x0, x16]
0xffff8bd2e374   244  stur x4, [x3, #63]
0xffff8bd2e378   248  mov x4, x3
0xffff8bd2e37c   252  movz x16, #0x557
0xffff8bd2e380   256  str x4, [x0, x16]
0xffff8bd2e384   260  add x6, x0, #0x557 (1367)
0xffff8bd2e388   264  and x4, x0, #0xfffffffffff00000
0xffff8bd2e38c   268  ldr x4, [x4, #8]
0xffff8bd2e390   272  tbz w4, #2, #+0x18 (addr 0xffff8bd2e3a8)
0xffff8bd2e394   276  sub csp, jssp, #0x8 (8)
0xffff8bd2e398   280  str lr, [jssp, #-8]!
0xffff8bd2e39c   284  ldr x16, pc+324 (addr 0x0000ffff8bd2e4e0)    ;; code: STUB, RecordWriteStub, minor: 71808
0xffff8bd2e3a0   288  blr x16
0xffff8bd2e3a4   292  ldr lr, [jssp], #8
0xffff8bd2e3a8   296  b #+0x8 (addr 0xffff8bd2e3b0)
0xffff8bd2e3ac   300  b #+0x184 (addr 0xffff8bd2e530)
0xffff8bd2e3b0   304  cmp w5, #0x1 (1)
0xffff8bd2e3b4   308  b.ge #+0x94 (addr 0xffff8bd2e448)
0xffff8bd2e3b8   312  ldur x1, [x1, #15]
0xffff8bd2e3bc   316  ldur x1, [x1, #7]
0xffff8bd2e3c0   320  movz x4, #0x0
0xffff8bd2e3c4   324  cmp x1, x4
0xffff8bd2e3c8   328  b.eq #+0x54 (addr 0xffff8bd2e41c)
0xffff8bd2e3cc   332  add x1, x1, #0x5f (95)
0xffff8bd2e3d0   336  stur x1, [x3, #55]
0xffff8bd2e3d4   340  ldr x1, pc+276 (addr 0x0000ffff8bd2e4e8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd2e3d8   344  stur x1, [x3, #47]
0xffff8bd2e3dc   348  movz x16, #0x557
0xffff8bd2e3e0   352  ldr x1, [x0, x16]
0xffff8bd2e3e4   356  stur x1, [x3, #63]
0xffff8bd2e3e8   360  mov x1, x3
0xffff8bd2e3ec   364  movz x16, #0x557
0xffff8bd2e3f0   368  str x1, [x0, x16]
0xffff8bd2e3f4   372  add x2, x0, #0x557 (1367)
0xffff8bd2e3f8   376  and x1, x0, #0xfffffffffff00000
0xffff8bd2e3fc   380  ldr x1, [x1, #8]
0xffff8bd2e400   384  tbz w1, #2, #+0x18 (addr 0xffff8bd2e418)
0xffff8bd2e404   388  sub csp, jssp, #0x8 (8)
0xffff8bd2e408   392  str lr, [jssp, #-8]!
0xffff8bd2e40c   396  ldr x16, pc+228 (addr 0x0000ffff8bd2e4f0)    ;; code: STUB, RecordWriteStub, minor: 67616
0xffff8bd2e410   400  blr x16
0xffff8bd2e414   404  ldr lr, [jssp], #8
0xffff8bd2e418   408  b #+0x30 (addr 0xffff8bd2e448)
0xffff8bd2e41c   412  ldr x0, pc+220 (addr 0x0000ffff8bd2e4f8)    ;; object: 0x26c04241 <undefined>
0xffff8bd2e420   416  stur x0, [x3, #63]
0xffff8bd2e424   420  ldur x0, [x2, #15]
0xffff8bd2e428   424  add x0, x0, #0x5f (95)
0xffff8bd2e42c   428  stur x0, [x3, #55]
0xffff8bd2e430   432  b #+0x18 (addr 0xffff8bd2e448)
0xffff8bd2e434   436  ldr x0, pc+204 (addr 0x0000ffff8bd2e500)    ;; object: 0x26c04241 <undefined>
0xffff8bd2e438   440  stur x0, [x3, #63]
0xffff8bd2e43c   444  ldur x0, [x2, #15]
0xffff8bd2e440   448  add x0, x0, #0x5f (95)
0xffff8bd2e444   452  stur x0, [x3, #55]
0xffff8bd2e448   456  mov x0, x3
0xffff8bd2e44c   460  ret
0xffff8bd2e450   464  sub csp, jssp, #0x10 (16)
0xffff8bd2e454   468  stp fp, lr, [jssp, #-16]!
0xffff8bd2e458   472  movz fp, #0xa00000000
0xffff8bd2e45c   476  sub csp, jssp, #0x8 (8)
0xffff8bd2e460   480  str fp, [jssp, #-8]!
0xffff8bd2e464   484  add fp, jssp, #0x8 (8)
0xffff8bd2e468   488  movz x3, #0x0
0xffff8bd2e46c   492  mov x16, lr
0xffff8bd2e470   496  ldr x17, pc+152 (addr 0x0000ffff8bd2e508)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd2e474   500  blr x17
0xffff8bd2e478   504  movz x0, #0x4800000000
0xffff8bd2e47c   508  movz x10, #0x0
0xffff8bd2e480   512  sub csp, jssp, #0x10 (16)
0xffff8bd2e484   516  stp x10, x0, [jssp, #-16]!
0xffff8bd2e488   520  movz x0, #0x2
0xffff8bd2e48c   524  movz x1, #0x5b88
0xffff8bd2e490   528  movk x1, #0xe2, lsl #16
0xffff8bd2e494   532  ldr x16, pc+124 (addr 0x0000ffff8bd2e510)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd2e498   536  blr x16
0xffff8bd2e49c   540  str x0, [jssp, #24]
0xffff8bd2e4a0   544  ldr x16, pc+120 (addr 0x0000ffff8bd2e518)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd2e4a4   548  blr x16
0xffff8bd2e4a8   552  ldr lr, [jssp, #16]
0xffff8bd2e4ac   556  ldp xzr, fp, [jssp], #24
0xffff8bd2e4b0   560  b #-0x210 (addr 0xffff8bd2e2a0)
0xffff8bd2e4b4   564  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff8bd2e4b8   568  d63f03e0       constant
0xffff8bd2e4bc   572  d503201f       constant
0xffff8bd2e4c0   576  26c04201       constant
0xffff8bd2e4c4   580  00000000       constant
0xffff8bd2e4c8   584  26c04201       constant
0xffff8bd2e4cc   588  00000000       constant
0xffff8bd2e4d0   592  26c04201       constant
0xffff8bd2e4d4   596  00000000       constant
0xffff8bd2e4d8   600  26c04519       constant
0xffff8bd2e4dc   604  00000000       constant
0xffff8bd2e4e0   608  8bd2d2c0       constant
0xffff8bd2e4e4   612  0000ffff       constant
0xffff8bd2e4e8   616  26c04201       constant
0xffff8bd2e4ec   620  00000000       constant
0xffff8bd2e4f0   624  8bd2daa0       constant
0xffff8bd2e4f4   628  0000ffff       constant
0xffff8bd2e4f8   632  26c04241       constant
0xffff8bd2e4fc   636  00000000       constant
0xffff8bd2e500   640  26c04241       constant
0xffff8bd2e504   644  00000000       constant
0xffff8bd2e508   648  8bd06820       constant
0xffff8bd2e50c   652  0000ffff       constant
0xffff8bd2e510   656  8bd06260       constant
0xffff8bd2e514   660  0000ffff       constant
0xffff8bd2e518   664  8bd068e0       constant
0xffff8bd2e51c   668  0000ffff       constant
0xffff8bd2e520   672  movz x16, #0x0
0xffff8bd2e524   676  sub csp, jssp, #0x10 (16)
0xffff8bd2e528   680  stp fp, lr, [jssp, #-16]!
0xffff8bd2e52c   684  bl #+0x14 (addr 0xffff8bd2e540)
0xffff8bd2e530   688  movz x16, #0x8
0xffff8bd2e534   692  sub csp, jssp, #0x10 (16)
0xffff8bd2e538   696  stp fp, lr, [jssp, #-16]!
0xffff8bd2e53c   700  bl #+0x4 (addr 0xffff8bd2e540)
0xffff8bd2e540   704  movz x17, #0xa00000000
0xffff8bd2e544   708  sub csp, jssp, #0x10 (16)
0xffff8bd2e548   712  stp x17, cp, [jssp, #-16]!
0xffff8bd2e54c   716  add fp, jssp, #0x10 (16)
0xffff8bd2e550   720  ldr x17, pc+24 (addr 0x0000ffff8bd2e568)    ;; lazy deoptimization bailout 0
0xffff8bd2e554   724  add x17, x17, x16
0xffff8bd2e558   728  br x17
0xffff8bd2e55c   732  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd2e560   736  d63f03e0       constant
0xffff8bd2e564   740  d503201f       constant
0xffff8bd2e568   744  8bb06000       constant
0xffff8bd2e56c   748  0000ffff       constant


Safepoints (size = 21)
0xffff8bd2e49c   540  000 | x2 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bd2e2b0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd2e2b8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd2e2c0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd2e2c8  embedded object  (0x26c04519 <the hole>)
0xffff8bd2e39c  code target (STUB)  (0xffff8bd2d2c0)
0xffff8bd2e3d4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd2e40c  code target (STUB)  (0xffff8bd2daa0)
0xffff8bd2e41c  embedded object  (0x26c04241 <undefined>)
0xffff8bd2e434  embedded object  (0x26c04241 <undefined>)
0xffff8bd2e470  code target (STUB)  (0xffff8bd06820)
0xffff8bd2e494  code target (STUB)  (0xffff8bd06260)
0xffff8bd2e4a0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd2e4b4  constant pool (size 108)
0xffff8bd2e550  runtime entry
0xffff8bd2e55c  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff8bd2e600     0  adr xzr, #+0x40 (addr 0xffff8bd2e640)
0xffff8bd2e604     4  adr xzr, #+0x2a8 (addr 0xffff8bd2e8ac)
0xffff8bd2e608     8  ldr x16, pc+1368 (addr 0x0000ffff8bd2eb60)    ;; external reference (store_buffer_top)
0xffff8bd2e60c    12  ldr x0, [x16]
0xffff8bd2e610    16  str x2, [x0], #8
0xffff8bd2e614    20  str x0, [x16]
0xffff8bd2e618    24  tst x0, #0x1ffff
0xffff8bd2e61c    28  b.eq #+0x8 (addr 0xffff8bd2e624)
0xffff8bd2e620    32  ret
0xffff8bd2e624    36  sub csp, jssp, #0x8 (8)
0xffff8bd2e628    40  str lr, [jssp, #-8]!
0xffff8bd2e62c    44  ldr x17, pc+1340 (addr 0x0000ffff8bd2eb68)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2e630    48  blr x17
0xffff8bd2e634    52  ldr lr, [jssp], #8
0xffff8bd2e638    56  ret
0xffff8bd2e63c    60  ret
0xffff8bd2e640    64  sub csp, jssp, #0x10 (16)
0xffff8bd2e644    68  stp x3, x1, [jssp, #-16]!
0xffff8bd2e648    72  ldr x0, [x2]
0xffff8bd2e64c    76  and x16, x0, #0xfffffffffff00000
0xffff8bd2e650    80  ldr x16, [x16, #8]
0xffff8bd2e654    84  tst x16, #0x18
0xffff8bd2e658    88  b.eq #+0x17c (addr 0xffff8bd2e7d4)
0xffff8bd2e65c    92  and x16, cp, #0xfffffffffff00000
0xffff8bd2e660    96  ldr x16, [x16, #8]
0xffff8bd2e664   100  tst x16, #0x18
0xffff8bd2e668   104  b.ne #+0x16c (addr 0xffff8bd2e7d4)
0xffff8bd2e66c   108  and x0, cp, #0xfffffffffff00000
0xffff8bd2e670   112  ldr x1, [x0, #104]
0xffff8bd2e674   116  subs x1, x1, #0x1 (1)
0xffff8bd2e678   120  str x1, [x0, #104]
0xffff8bd2e67c   124  b.mi #+0xc4 (addr 0xffff8bd2e740)
0xffff8bd2e680   128  ubfx x16, cp, #8, #12
0xffff8bd2e684   132  and x0, cp, #0xfffffffffff00000
0xffff8bd2e688   136  add x0, x0, x16, lsl #2
0xffff8bd2e68c   140  ubfx x1, cp, #3, #5
0xffff8bd2e690   144  ldr x0, [x0, #360]
0xffff8bd2e694   148  lsr x0, x0, x1
0xffff8bd2e698   152  tbz w0, #0, #+0x8 (addr 0xffff8bd2e6a0)
0xffff8bd2e69c   156  tbnz w0, #1, #+0x3c (addr 0xffff8bd2e6d8)
0xffff8bd2e6a0   160  ldp x3, x1, [jssp], #16
0xffff8bd2e6a4   164  ldr x16, pc+1228 (addr 0x0000ffff8bd2eb70)    ;; external reference (store_buffer_top)
0xffff8bd2e6a8   168  ldr x0, [x16]
0xffff8bd2e6ac   172  str x2, [x0], #8
0xffff8bd2e6b0   176  str x0, [x16]
0xffff8bd2e6b4   180  tst x0, #0x1ffff
0xffff8bd2e6b8   184  b.eq #+0x8 (addr 0xffff8bd2e6c0)
0xffff8bd2e6bc   188  ret
0xffff8bd2e6c0   192  sub csp, jssp, #0x8 (8)
0xffff8bd2e6c4   196  str lr, [jssp, #-8]!
0xffff8bd2e6c8   200  ldr x17, pc+1200 (addr 0x0000ffff8bd2eb78)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2e6cc   204  blr x17
0xffff8bd2e6d0   208  ldr lr, [jssp], #8
0xffff8bd2e6d4   212  ret
0xffff8bd2e6d8   216  ldr x0, [x2]
0xffff8bd2e6dc   220  sub csp, jssp, #0x10 (16)
0xffff8bd2e6e0   224  stp cp, x2, [jssp, #-16]!
0xffff8bd2e6e4   228  ubfx x16, x0, #8, #12
0xffff8bd2e6e8   232  and x1, x0, #0xfffffffffff00000
0xffff8bd2e6ec   236  add x1, x1, x16, lsl #2
0xffff8bd2e6f0   240  ubfx cp, x0, #3, #5
0xffff8bd2e6f4   244  ldr x2, [x1, #360]
0xffff8bd2e6f8   248  lsr x2, x2, cp
0xffff8bd2e6fc   252  tbz w2, #0, #+0x40 (addr 0xffff8bd2e73c)
0xffff8bd2e700   256  ldp cp, x2, [jssp], #16
0xffff8bd2e704   260  ldp x3, x1, [jssp], #16
0xffff8bd2e708   264  ldr x16, pc+1144 (addr 0x0000ffff8bd2eb80)    ;; external reference (store_buffer_top)
0xffff8bd2e70c   268  ldr x0, [x16]
0xffff8bd2e710   272  str x2, [x0], #8
0xffff8bd2e714   276  str x0, [x16]
0xffff8bd2e718   280  tst x0, #0x1ffff
0xffff8bd2e71c   284  b.eq #+0x8 (addr 0xffff8bd2e724)
0xffff8bd2e720   288  ret
0xffff8bd2e724   292  sub csp, jssp, #0x8 (8)
0xffff8bd2e728   296  str lr, [jssp, #-8]!
0xffff8bd2e72c   300  ldr x17, pc+1116 (addr 0x0000ffff8bd2eb88)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2e730   304  blr x17
0xffff8bd2e734   308  ldr lr, [jssp], #8
0xffff8bd2e738   312  ret
0xffff8bd2e73c   316  ldp cp, x2, [jssp], #16
0xffff8bd2e740   320  sub csp, jssp, #0x78 (120)
0xffff8bd2e744   324  stp x14, x15, [jssp, #-32]!
0xffff8bd2e748   328  stp x18, lr, [jssp, #16]
0xffff8bd2e74c   332  stp x10, x11, [jssp, #-32]!
0xffff8bd2e750   336  stp x12, x13, [jssp, #16]
0xffff8bd2e754   340  stp x6, x7, [jssp, #-32]!
0xffff8bd2e758   344  stp x8, x9, [jssp, #16]
0xffff8bd2e75c   348  stp x2, x4, [jssp, #-24]!
0xffff8bd2e760   352  str x5, [jssp, #16]
0xffff8bd2e764   356  mov x0, cp
0xffff8bd2e768   360  mov x1, x2
0xffff8bd2e76c   364  ldr x2, pc+1060 (addr 0x0000ffff8bd2eb90)    ;; external reference (isolate)
0xffff8bd2e770   368  ldr x16, pc+1064 (addr 0x0000ffff8bd2eb98)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2e774   372  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2e778   376  blr x16
0xffff8bd2e77c   380  ldp x5, x6, [jssp, #16]
0xffff8bd2e780   384  ldp x2, x4, [jssp], #32
0xffff8bd2e784   388  ldp x9, x10, [jssp, #16]
0xffff8bd2e788   392  ldp x7, x8, [jssp], #32
0xffff8bd2e78c   396  ldp x13, x14, [jssp, #16]
0xffff8bd2e790   400  ldp x11, x12, [jssp], #32
0xffff8bd2e794   404  ldr lr, [jssp, #16]
0xffff8bd2e798   408  ldp x15, x18, [jssp], #24
0xffff8bd2e79c   412  ldp x3, x1, [jssp], #16
0xffff8bd2e7a0   416  ldr x16, pc+1024 (addr 0x0000ffff8bd2eba0)    ;; external reference (store_buffer_top)
0xffff8bd2e7a4   420  ldr x0, [x16]
0xffff8bd2e7a8   424  str x2, [x0], #8
0xffff8bd2e7ac   428  str x0, [x16]
0xffff8bd2e7b0   432  tst x0, #0x1ffff
0xffff8bd2e7b4   436  b.eq #+0x8 (addr 0xffff8bd2e7bc)
0xffff8bd2e7b8   440  ret
0xffff8bd2e7bc   444  sub csp, jssp, #0x8 (8)
0xffff8bd2e7c0   448  str lr, [jssp, #-8]!
0xffff8bd2e7c4   452  ldr x17, pc+996 (addr 0x0000ffff8bd2eba8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2e7c8   456  blr x17
0xffff8bd2e7cc   460  ldr lr, [jssp], #8
0xffff8bd2e7d0   464  ret
0xffff8bd2e7d4   468  and x0, cp, #0xfffffffffff00000
0xffff8bd2e7d8   472  ldr x1, [x0, #104]
0xffff8bd2e7dc   476  subs x1, x1, #0x1 (1)
0xffff8bd2e7e0   480  str x1, [x0, #104]
0xffff8bd2e7e4   484  b.mi #+0x64 (addr 0xffff8bd2e848)
0xffff8bd2e7e8   488  ubfx x16, cp, #8, #12
0xffff8bd2e7ec   492  and x0, cp, #0xfffffffffff00000
0xffff8bd2e7f0   496  add x0, x0, x16, lsl #2
0xffff8bd2e7f4   500  ubfx x1, cp, #3, #5
0xffff8bd2e7f8   504  ldr x0, [x0, #360]
0xffff8bd2e7fc   508  lsr x0, x0, x1
0xffff8bd2e800   512  tbz w0, #0, #+0x8 (addr 0xffff8bd2e808)
0xffff8bd2e804   516  tbnz w0, #1, #+0xc (addr 0xffff8bd2e810)
0xffff8bd2e808   520  ldp x3, x1, [jssp], #16
0xffff8bd2e80c   524  ret
0xffff8bd2e810   528  ldr x0, [x2]
0xffff8bd2e814   532  sub csp, jssp, #0x10 (16)
0xffff8bd2e818   536  stp cp, x2, [jssp, #-16]!
0xffff8bd2e81c   540  ubfx x16, x0, #8, #12
0xffff8bd2e820   544  and x1, x0, #0xfffffffffff00000
0xffff8bd2e824   548  add x1, x1, x16, lsl #2
0xffff8bd2e828   552  ubfx cp, x0, #3, #5
0xffff8bd2e82c   556  ldr x2, [x1, #360]
0xffff8bd2e830   560  lsr x2, x2, cp
0xffff8bd2e834   564  tbz w2, #0, #+0x10 (addr 0xffff8bd2e844)
0xffff8bd2e838   568  ldp cp, x2, [jssp], #16
0xffff8bd2e83c   572  ldp x3, x1, [jssp], #16
0xffff8bd2e840   576  ret
0xffff8bd2e844   580  ldp cp, x2, [jssp], #16
0xffff8bd2e848   584  sub csp, jssp, #0x78 (120)
0xffff8bd2e84c   588  stp x14, x15, [jssp, #-32]!
0xffff8bd2e850   592  stp x18, lr, [jssp, #16]
0xffff8bd2e854   596  stp x10, x11, [jssp, #-32]!
0xffff8bd2e858   600  stp x12, x13, [jssp, #16]
0xffff8bd2e85c   604  stp x6, x7, [jssp, #-32]!
0xffff8bd2e860   608  stp x8, x9, [jssp, #16]
0xffff8bd2e864   612  stp x2, x4, [jssp, #-24]!
0xffff8bd2e868   616  str x5, [jssp, #16]
0xffff8bd2e86c   620  mov x0, cp
0xffff8bd2e870   624  mov x1, x2
0xffff8bd2e874   628  ldr x2, pc+828 (addr 0x0000ffff8bd2ebb0)    ;; external reference (isolate)
0xffff8bd2e878   632  ldr x16, pc+832 (addr 0x0000ffff8bd2ebb8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2e87c   636  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2e880   640  blr x16
0xffff8bd2e884   644  ldp x5, x6, [jssp, #16]
0xffff8bd2e888   648  ldp x2, x4, [jssp], #32
0xffff8bd2e88c   652  ldp x9, x10, [jssp, #16]
0xffff8bd2e890   656  ldp x7, x8, [jssp], #32
0xffff8bd2e894   660  ldp x13, x14, [jssp, #16]
0xffff8bd2e898   664  ldp x11, x12, [jssp], #32
0xffff8bd2e89c   668  ldr lr, [jssp, #16]
0xffff8bd2e8a0   672  ldp x15, x18, [jssp], #24
0xffff8bd2e8a4   676  ldp x3, x1, [jssp], #16
0xffff8bd2e8a8   680  ret
0xffff8bd2e8ac   684  sub csp, jssp, #0x10 (16)
0xffff8bd2e8b0   688  stp x3, x1, [jssp, #-16]!
0xffff8bd2e8b4   692  ldr x0, [x2]
0xffff8bd2e8b8   696  and x16, x0, #0xfffffffffff00000
0xffff8bd2e8bc   700  ldr x16, [x16, #8]
0xffff8bd2e8c0   704  tst x16, #0x18
0xffff8bd2e8c4   708  b.eq #+0x19c (addr 0xffff8bd2ea60)
0xffff8bd2e8c8   712  and x16, cp, #0xfffffffffff00000
0xffff8bd2e8cc   716  ldr x16, [x16, #8]
0xffff8bd2e8d0   720  tst x16, #0x18
0xffff8bd2e8d4   724  b.ne #+0x18c (addr 0xffff8bd2ea60)
0xffff8bd2e8d8   728  and x0, cp, #0xfffffffffff00000
0xffff8bd2e8dc   732  ldr x1, [x0, #104]
0xffff8bd2e8e0   736  subs x1, x1, #0x1 (1)
0xffff8bd2e8e4   740  str x1, [x0, #104]
0xffff8bd2e8e8   744  b.mi #+0xe4 (addr 0xffff8bd2e9cc)
0xffff8bd2e8ec   748  ubfx x16, cp, #8, #12
0xffff8bd2e8f0   752  and x0, cp, #0xfffffffffff00000
0xffff8bd2e8f4   756  add x0, x0, x16, lsl #2
0xffff8bd2e8f8   760  ubfx x1, cp, #3, #5
0xffff8bd2e8fc   764  ldr x0, [x0, #360]
0xffff8bd2e900   768  lsr x0, x0, x1
0xffff8bd2e904   772  tbz w0, #0, #+0x8 (addr 0xffff8bd2e90c)
0xffff8bd2e908   776  tbnz w0, #1, #+0x3c (addr 0xffff8bd2e944)
0xffff8bd2e90c   780  ldp x3, x1, [jssp], #16
0xffff8bd2e910   784  ldr x16, pc+688 (addr 0x0000ffff8bd2ebc0)    ;; external reference (store_buffer_top)
0xffff8bd2e914   788  ldr x0, [x16]
0xffff8bd2e918   792  str x2, [x0], #8
0xffff8bd2e91c   796  str x0, [x16]
0xffff8bd2e920   800  tst x0, #0x1ffff
0xffff8bd2e924   804  b.eq #+0x8 (addr 0xffff8bd2e92c)
0xffff8bd2e928   808  ret
0xffff8bd2e92c   812  sub csp, jssp, #0x8 (8)
0xffff8bd2e930   816  str lr, [jssp, #-8]!
0xffff8bd2e934   820  ldr x17, pc+660 (addr 0x0000ffff8bd2ebc8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2e938   824  blr x17
0xffff8bd2e93c   828  ldr lr, [jssp], #8
0xffff8bd2e940   832  ret
0xffff8bd2e944   836  ldr x0, [x2]
0xffff8bd2e948   840  and x1, x0, #0xfffffffffff00000
0xffff8bd2e94c   844  ldr x1, [x1, #8]
0xffff8bd2e950   848  tbz w1, #6, #+0x18 (addr 0xffff8bd2e968)
0xffff8bd2e954   852  and x1, cp, #0xfffffffffff00000
0xffff8bd2e958   856  ldr x1, [x1, #8]
0xffff8bd2e95c   860  movz x16, #0x58
0xffff8bd2e960   864  tst x1, x16
0xffff8bd2e964   868  b.eq #+0x68 (addr 0xffff8bd2e9cc)
0xffff8bd2e968   872  sub csp, jssp, #0x10 (16)
0xffff8bd2e96c   876  stp cp, x2, [jssp, #-16]!
0xffff8bd2e970   880  ubfx x16, x0, #8, #12
0xffff8bd2e974   884  and x1, x0, #0xfffffffffff00000
0xffff8bd2e978   888  add x1, x1, x16, lsl #2
0xffff8bd2e97c   892  ubfx cp, x0, #3, #5
0xffff8bd2e980   896  ldr x2, [x1, #360]
0xffff8bd2e984   900  lsr x2, x2, cp
0xffff8bd2e988   904  tbz w2, #0, #+0x40 (addr 0xffff8bd2e9c8)
0xffff8bd2e98c   908  ldp cp, x2, [jssp], #16
0xffff8bd2e990   912  ldp x3, x1, [jssp], #16
0xffff8bd2e994   916  ldr x16, pc+572 (addr 0x0000ffff8bd2ebd0)    ;; external reference (store_buffer_top)
0xffff8bd2e998   920  ldr x0, [x16]
0xffff8bd2e99c   924  str x2, [x0], #8
0xffff8bd2e9a0   928  str x0, [x16]
0xffff8bd2e9a4   932  tst x0, #0x1ffff
0xffff8bd2e9a8   936  b.eq #+0x8 (addr 0xffff8bd2e9b0)
0xffff8bd2e9ac   940  ret
0xffff8bd2e9b0   944  sub csp, jssp, #0x8 (8)
0xffff8bd2e9b4   948  str lr, [jssp, #-8]!
0xffff8bd2e9b8   952  ldr x17, pc+544 (addr 0x0000ffff8bd2ebd8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2e9bc   956  blr x17
0xffff8bd2e9c0   960  ldr lr, [jssp], #8
0xffff8bd2e9c4   964  ret
0xffff8bd2e9c8   968  ldp cp, x2, [jssp], #16
0xffff8bd2e9cc   972  sub csp, jssp, #0x78 (120)
0xffff8bd2e9d0   976  stp x14, x15, [jssp, #-32]!
0xffff8bd2e9d4   980  stp x18, lr, [jssp, #16]
0xffff8bd2e9d8   984  stp x10, x11, [jssp, #-32]!
0xffff8bd2e9dc   988  stp x12, x13, [jssp, #16]
0xffff8bd2e9e0   992  stp x6, x7, [jssp, #-32]!
0xffff8bd2e9e4   996  stp x8, x9, [jssp, #16]
0xffff8bd2e9e8  1000  stp x2, x4, [jssp, #-24]!
0xffff8bd2e9ec  1004  str x5, [jssp, #16]
0xffff8bd2e9f0  1008  mov x0, cp
0xffff8bd2e9f4  1012  mov x1, x2
0xffff8bd2e9f8  1016  ldr x2, pc+488 (addr 0x0000ffff8bd2ebe0)    ;; external reference (isolate)
0xffff8bd2e9fc  1020  ldr x16, pc+492 (addr 0x0000ffff8bd2ebe8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2ea00  1024  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2ea04  1028  blr x16
0xffff8bd2ea08  1032  ldp x5, x6, [jssp, #16]
0xffff8bd2ea0c  1036  ldp x2, x4, [jssp], #32
0xffff8bd2ea10  1040  ldp x9, x10, [jssp, #16]
0xffff8bd2ea14  1044  ldp x7, x8, [jssp], #32
0xffff8bd2ea18  1048  ldp x13, x14, [jssp, #16]
0xffff8bd2ea1c  1052  ldp x11, x12, [jssp], #32
0xffff8bd2ea20  1056  ldr lr, [jssp, #16]
0xffff8bd2ea24  1060  ldp x15, x18, [jssp], #24
0xffff8bd2ea28  1064  ldp x3, x1, [jssp], #16
0xffff8bd2ea2c  1068  ldr x16, pc+452 (addr 0x0000ffff8bd2ebf0)    ;; external reference (store_buffer_top)
0xffff8bd2ea30  1072  ldr x0, [x16]
0xffff8bd2ea34  1076  str x2, [x0], #8
0xffff8bd2ea38  1080  str x0, [x16]
0xffff8bd2ea3c  1084  tst x0, #0x1ffff
0xffff8bd2ea40  1088  b.eq #+0x8 (addr 0xffff8bd2ea48)
0xffff8bd2ea44  1092  ret
0xffff8bd2ea48  1096  sub csp, jssp, #0x8 (8)
0xffff8bd2ea4c  1100  str lr, [jssp, #-8]!
0xffff8bd2ea50  1104  ldr x17, pc+424 (addr 0x0000ffff8bd2ebf8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2ea54  1108  blr x17
0xffff8bd2ea58  1112  ldr lr, [jssp], #8
0xffff8bd2ea5c  1116  ret
0xffff8bd2ea60  1120  and x0, cp, #0xfffffffffff00000
0xffff8bd2ea64  1124  ldr x1, [x0, #104]
0xffff8bd2ea68  1128  subs x1, x1, #0x1 (1)
0xffff8bd2ea6c  1132  str x1, [x0, #104]
0xffff8bd2ea70  1136  b.mi #+0x84 (addr 0xffff8bd2eaf4)
0xffff8bd2ea74  1140  ubfx x16, cp, #8, #12
0xffff8bd2ea78  1144  and x0, cp, #0xfffffffffff00000
0xffff8bd2ea7c  1148  add x0, x0, x16, lsl #2
0xffff8bd2ea80  1152  ubfx x1, cp, #3, #5
0xffff8bd2ea84  1156  ldr x0, [x0, #360]
0xffff8bd2ea88  1160  lsr x0, x0, x1
0xffff8bd2ea8c  1164  tbz w0, #0, #+0x8 (addr 0xffff8bd2ea94)
0xffff8bd2ea90  1168  tbnz w0, #1, #+0xc (addr 0xffff8bd2ea9c)
0xffff8bd2ea94  1172  ldp x3, x1, [jssp], #16
0xffff8bd2ea98  1176  ret
0xffff8bd2ea9c  1180  ldr x0, [x2]
0xffff8bd2eaa0  1184  and x1, x0, #0xfffffffffff00000
0xffff8bd2eaa4  1188  ldr x1, [x1, #8]
0xffff8bd2eaa8  1192  tbz w1, #6, #+0x18 (addr 0xffff8bd2eac0)
0xffff8bd2eaac  1196  and x1, cp, #0xfffffffffff00000
0xffff8bd2eab0  1200  ldr x1, [x1, #8]
0xffff8bd2eab4  1204  movz x16, #0x58
0xffff8bd2eab8  1208  tst x1, x16
0xffff8bd2eabc  1212  b.eq #+0x38 (addr 0xffff8bd2eaf4)
0xffff8bd2eac0  1216  sub csp, jssp, #0x10 (16)
0xffff8bd2eac4  1220  stp cp, x2, [jssp, #-16]!
0xffff8bd2eac8  1224  ubfx x16, x0, #8, #12
0xffff8bd2eacc  1228  and x1, x0, #0xfffffffffff00000
0xffff8bd2ead0  1232  add x1, x1, x16, lsl #2
0xffff8bd2ead4  1236  ubfx cp, x0, #3, #5
0xffff8bd2ead8  1240  ldr x2, [x1, #360]
0xffff8bd2eadc  1244  lsr x2, x2, cp
0xffff8bd2eae0  1248  tbz w2, #0, #+0x10 (addr 0xffff8bd2eaf0)
0xffff8bd2eae4  1252  ldp cp, x2, [jssp], #16
0xffff8bd2eae8  1256  ldp x3, x1, [jssp], #16
0xffff8bd2eaec  1260  ret
0xffff8bd2eaf0  1264  ldp cp, x2, [jssp], #16
0xffff8bd2eaf4  1268  sub csp, jssp, #0x78 (120)
0xffff8bd2eaf8  1272  stp x14, x15, [jssp, #-32]!
0xffff8bd2eafc  1276  stp x18, lr, [jssp, #16]
0xffff8bd2eb00  1280  stp x10, x11, [jssp, #-32]!
0xffff8bd2eb04  1284  stp x12, x13, [jssp, #16]
0xffff8bd2eb08  1288  stp x6, x7, [jssp, #-32]!
0xffff8bd2eb0c  1292  stp x8, x9, [jssp, #16]
0xffff8bd2eb10  1296  stp x2, x4, [jssp, #-24]!
0xffff8bd2eb14  1300  str x5, [jssp, #16]
0xffff8bd2eb18  1304  mov x0, cp
0xffff8bd2eb1c  1308  mov x1, x2
0xffff8bd2eb20  1312  ldr x2, pc+224 (addr 0x0000ffff8bd2ec00)    ;; external reference (isolate)
0xffff8bd2eb24  1316  ldr x16, pc+228 (addr 0x0000ffff8bd2ec08)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2eb28  1320  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2eb2c  1324  blr x16
0xffff8bd2eb30  1328  ldp x5, x6, [jssp, #16]
0xffff8bd2eb34  1332  ldp x2, x4, [jssp], #32
0xffff8bd2eb38  1336  ldp x9, x10, [jssp, #16]
0xffff8bd2eb3c  1340  ldp x7, x8, [jssp], #32
0xffff8bd2eb40  1344  ldp x13, x14, [jssp, #16]
0xffff8bd2eb44  1348  ldp x11, x12, [jssp], #32
0xffff8bd2eb48  1352  ldr lr, [jssp, #16]
0xffff8bd2eb4c  1356  ldp x15, x18, [jssp], #24
0xffff8bd2eb50  1360  ldp x3, x1, [jssp], #16
0xffff8bd2eb54  1364  ret
0xffff8bd2eb58  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd2eb5c  1372  d63f03e0       constant
0xffff8bd2eb60  1376  2cb8e8c0       constant
0xffff8bd2eb64  1380  00000000       constant
0xffff8bd2eb68  1384  8bd064c0       constant
0xffff8bd2eb6c  1388  0000ffff       constant
0xffff8bd2eb70  1392  2cb8e8c0       constant
0xffff8bd2eb74  1396  00000000       constant
0xffff8bd2eb78  1400  8bd064c0       constant
0xffff8bd2eb7c  1404  0000ffff       constant
0xffff8bd2eb80  1408  2cb8e8c0       constant
0xffff8bd2eb84  1412  00000000       constant
0xffff8bd2eb88  1416  8bd064c0       constant
0xffff8bd2eb8c  1420  0000ffff       constant
0xffff8bd2eb90  1424  2cb8d2d0       constant
0xffff8bd2eb94  1428  00000000       constant
0xffff8bd2eb98  1432  00c2d958       constant
0xffff8bd2eb9c  1436  00000000       constant
0xffff8bd2eba0  1440  2cb8e8c0       constant
0xffff8bd2eba4  1444  00000000       constant
0xffff8bd2eba8  1448  8bd064c0       constant
0xffff8bd2ebac  1452  0000ffff       constant
0xffff8bd2ebb0  1456  2cb8d2d0       constant
0xffff8bd2ebb4  1460  00000000       constant
0xffff8bd2ebb8  1464  00c2d958       constant
0xffff8bd2ebbc  1468  00000000       constant
0xffff8bd2ebc0  1472  2cb8e8c0       constant
0xffff8bd2ebc4  1476  00000000       constant
0xffff8bd2ebc8  1480  8bd064c0       constant
0xffff8bd2ebcc  1484  0000ffff       constant
0xffff8bd2ebd0  1488  2cb8e8c0       constant
0xffff8bd2ebd4  1492  00000000       constant
0xffff8bd2ebd8  1496  8bd064c0       constant
0xffff8bd2ebdc  1500  0000ffff       constant
0xffff8bd2ebe0  1504  2cb8d2d0       constant
0xffff8bd2ebe4  1508  00000000       constant
0xffff8bd2ebe8  1512  00c2d958       constant
0xffff8bd2ebec  1516  00000000       constant
0xffff8bd2ebf0  1520  2cb8e8c0       constant
0xffff8bd2ebf4  1524  00000000       constant
0xffff8bd2ebf8  1528  8bd064c0       constant
0xffff8bd2ebfc  1532  0000ffff       constant
0xffff8bd2ec00  1536  2cb8d2d0       constant
0xffff8bd2ec04  1540  00000000       constant
0xffff8bd2ec08  1544  00c2d958       constant
0xffff8bd2ec0c  1548  00000000       constant


RelocInfo (size = 59)
0xffff8bd2e608  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2e62c  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2e6a4  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2e6c8  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2e708  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2e72c  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2e76c  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2e770  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2e7a0  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2e7c4  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2e874  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2e878  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2e910  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2e934  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2e994  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2e9b8  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2e9f8  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2e9fc  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2ea2c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2ea50  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2eb20  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2eb24  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2eb58  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff8bd2ec80     0  adr xzr, #+0x40 (addr 0xffff8bd2ecc0)
0xffff8bd2ec84     4  adr xzr, #+0x2a8 (addr 0xffff8bd2ef2c)
0xffff8bd2ec88     8  ldr x16, pc+1368 (addr 0x0000ffff8bd2f1e0)    ;; external reference (store_buffer_top)
0xffff8bd2ec8c    12  ldr x10, [x16]
0xffff8bd2ec90    16  str x11, [x10], #8
0xffff8bd2ec94    20  str x10, [x16]
0xffff8bd2ec98    24  tst x10, #0x1ffff
0xffff8bd2ec9c    28  b.eq #+0x8 (addr 0xffff8bd2eca4)
0xffff8bd2eca0    32  ret
0xffff8bd2eca4    36  sub csp, jssp, #0x8 (8)
0xffff8bd2eca8    40  str lr, [jssp, #-8]!
0xffff8bd2ecac    44  ldr x17, pc+1340 (addr 0x0000ffff8bd2f1e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2ecb0    48  blr x17
0xffff8bd2ecb4    52  ldr lr, [jssp], #8
0xffff8bd2ecb8    56  ret
0xffff8bd2ecbc    60  ret
0xffff8bd2ecc0    64  sub csp, jssp, #0x10 (16)
0xffff8bd2ecc4    68  stp x2, x0, [jssp, #-16]!
0xffff8bd2ecc8    72  ldr x10, [x11]
0xffff8bd2eccc    76  and x16, x10, #0xfffffffffff00000
0xffff8bd2ecd0    80  ldr x16, [x16, #8]
0xffff8bd2ecd4    84  tst x16, #0x18
0xffff8bd2ecd8    88  b.eq #+0x17c (addr 0xffff8bd2ee54)
0xffff8bd2ecdc    92  and x16, x1, #0xfffffffffff00000
0xffff8bd2ece0    96  ldr x16, [x16, #8]
0xffff8bd2ece4   100  tst x16, #0x18
0xffff8bd2ece8   104  b.ne #+0x16c (addr 0xffff8bd2ee54)
0xffff8bd2ecec   108  and x10, x1, #0xfffffffffff00000
0xffff8bd2ecf0   112  ldr x0, [x10, #104]
0xffff8bd2ecf4   116  subs x0, x0, #0x1 (1)
0xffff8bd2ecf8   120  str x0, [x10, #104]
0xffff8bd2ecfc   124  b.mi #+0xc4 (addr 0xffff8bd2edc0)
0xffff8bd2ed00   128  ubfx x16, x1, #8, #12
0xffff8bd2ed04   132  and x10, x1, #0xfffffffffff00000
0xffff8bd2ed08   136  add x10, x10, x16, lsl #2
0xffff8bd2ed0c   140  ubfx x0, x1, #3, #5
0xffff8bd2ed10   144  ldr x10, [x10, #360]
0xffff8bd2ed14   148  lsr x10, x10, x0
0xffff8bd2ed18   152  tbz w10, #0, #+0x8 (addr 0xffff8bd2ed20)
0xffff8bd2ed1c   156  tbnz w10, #1, #+0x3c (addr 0xffff8bd2ed58)
0xffff8bd2ed20   160  ldp x2, x0, [jssp], #16
0xffff8bd2ed24   164  ldr x16, pc+1228 (addr 0x0000ffff8bd2f1f0)    ;; external reference (store_buffer_top)
0xffff8bd2ed28   168  ldr x10, [x16]
0xffff8bd2ed2c   172  str x11, [x10], #8
0xffff8bd2ed30   176  str x10, [x16]
0xffff8bd2ed34   180  tst x10, #0x1ffff
0xffff8bd2ed38   184  b.eq #+0x8 (addr 0xffff8bd2ed40)
0xffff8bd2ed3c   188  ret
0xffff8bd2ed40   192  sub csp, jssp, #0x8 (8)
0xffff8bd2ed44   196  str lr, [jssp, #-8]!
0xffff8bd2ed48   200  ldr x17, pc+1200 (addr 0x0000ffff8bd2f1f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2ed4c   204  blr x17
0xffff8bd2ed50   208  ldr lr, [jssp], #8
0xffff8bd2ed54   212  ret
0xffff8bd2ed58   216  ldr x10, [x11]
0xffff8bd2ed5c   220  sub csp, jssp, #0x10 (16)
0xffff8bd2ed60   224  stp x1, x11, [jssp, #-16]!
0xffff8bd2ed64   228  ubfx x16, x10, #8, #12
0xffff8bd2ed68   232  and x0, x10, #0xfffffffffff00000
0xffff8bd2ed6c   236  add x0, x0, x16, lsl #2
0xffff8bd2ed70   240  ubfx x1, x10, #3, #5
0xffff8bd2ed74   244  ldr x11, [x0, #360]
0xffff8bd2ed78   248  lsr x11, x11, x1
0xffff8bd2ed7c   252  tbz w11, #0, #+0x40 (addr 0xffff8bd2edbc)
0xffff8bd2ed80   256  ldp x1, x11, [jssp], #16
0xffff8bd2ed84   260  ldp x2, x0, [jssp], #16
0xffff8bd2ed88   264  ldr x16, pc+1144 (addr 0x0000ffff8bd2f200)    ;; external reference (store_buffer_top)
0xffff8bd2ed8c   268  ldr x10, [x16]
0xffff8bd2ed90   272  str x11, [x10], #8
0xffff8bd2ed94   276  str x10, [x16]
0xffff8bd2ed98   280  tst x10, #0x1ffff
0xffff8bd2ed9c   284  b.eq #+0x8 (addr 0xffff8bd2eda4)
0xffff8bd2eda0   288  ret
0xffff8bd2eda4   292  sub csp, jssp, #0x8 (8)
0xffff8bd2eda8   296  str lr, [jssp, #-8]!
0xffff8bd2edac   300  ldr x17, pc+1116 (addr 0x0000ffff8bd2f208)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2edb0   304  blr x17
0xffff8bd2edb4   308  ldr lr, [jssp], #8
0xffff8bd2edb8   312  ret
0xffff8bd2edbc   316  ldp x1, x11, [jssp], #16
0xffff8bd2edc0   320  sub csp, jssp, #0x78 (120)
0xffff8bd2edc4   324  stp x14, x15, [jssp, #-32]!
0xffff8bd2edc8   328  stp x18, lr, [jssp, #16]
0xffff8bd2edcc   332  stp x9, x11, [jssp, #-32]!
0xffff8bd2edd0   336  stp x12, x13, [jssp, #16]
0xffff8bd2edd4   340  stp x5, x6, [jssp, #-32]!
0xffff8bd2edd8   344  stp x7, x8, [jssp, #16]
0xffff8bd2eddc   348  stp x1, x3, [jssp, #-24]!
0xffff8bd2ede0   352  str x4, [jssp, #16]
0xffff8bd2ede4   356  mov x0, x1
0xffff8bd2ede8   360  mov x1, x11
0xffff8bd2edec   364  ldr x2, pc+1060 (addr 0x0000ffff8bd2f210)    ;; external reference (isolate)
0xffff8bd2edf0   368  ldr x16, pc+1064 (addr 0x0000ffff8bd2f218)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2edf4   372  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2edf8   376  blr x16
0xffff8bd2edfc   380  ldp x4, x5, [jssp, #16]
0xffff8bd2ee00   384  ldp x1, x3, [jssp], #32
0xffff8bd2ee04   388  ldp x8, x9, [jssp, #16]
0xffff8bd2ee08   392  ldp x6, x7, [jssp], #32
0xffff8bd2ee0c   396  ldp x13, x14, [jssp, #16]
0xffff8bd2ee10   400  ldp x11, x12, [jssp], #32
0xffff8bd2ee14   404  ldr lr, [jssp, #16]
0xffff8bd2ee18   408  ldp x15, x18, [jssp], #24
0xffff8bd2ee1c   412  ldp x2, x0, [jssp], #16
0xffff8bd2ee20   416  ldr x16, pc+1024 (addr 0x0000ffff8bd2f220)    ;; external reference (store_buffer_top)
0xffff8bd2ee24   420  ldr x10, [x16]
0xffff8bd2ee28   424  str x11, [x10], #8
0xffff8bd2ee2c   428  str x10, [x16]
0xffff8bd2ee30   432  tst x10, #0x1ffff
0xffff8bd2ee34   436  b.eq #+0x8 (addr 0xffff8bd2ee3c)
0xffff8bd2ee38   440  ret
0xffff8bd2ee3c   444  sub csp, jssp, #0x8 (8)
0xffff8bd2ee40   448  str lr, [jssp, #-8]!
0xffff8bd2ee44   452  ldr x17, pc+996 (addr 0x0000ffff8bd2f228)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2ee48   456  blr x17
0xffff8bd2ee4c   460  ldr lr, [jssp], #8
0xffff8bd2ee50   464  ret
0xffff8bd2ee54   468  and x10, x1, #0xfffffffffff00000
0xffff8bd2ee58   472  ldr x0, [x10, #104]
0xffff8bd2ee5c   476  subs x0, x0, #0x1 (1)
0xffff8bd2ee60   480  str x0, [x10, #104]
0xffff8bd2ee64   484  b.mi #+0x64 (addr 0xffff8bd2eec8)
0xffff8bd2ee68   488  ubfx x16, x1, #8, #12
0xffff8bd2ee6c   492  and x10, x1, #0xfffffffffff00000
0xffff8bd2ee70   496  add x10, x10, x16, lsl #2
0xffff8bd2ee74   500  ubfx x0, x1, #3, #5
0xffff8bd2ee78   504  ldr x10, [x10, #360]
0xffff8bd2ee7c   508  lsr x10, x10, x0
0xffff8bd2ee80   512  tbz w10, #0, #+0x8 (addr 0xffff8bd2ee88)
0xffff8bd2ee84   516  tbnz w10, #1, #+0xc (addr 0xffff8bd2ee90)
0xffff8bd2ee88   520  ldp x2, x0, [jssp], #16
0xffff8bd2ee8c   524  ret
0xffff8bd2ee90   528  ldr x10, [x11]
0xffff8bd2ee94   532  sub csp, jssp, #0x10 (16)
0xffff8bd2ee98   536  stp x1, x11, [jssp, #-16]!
0xffff8bd2ee9c   540  ubfx x16, x10, #8, #12
0xffff8bd2eea0   544  and x0, x10, #0xfffffffffff00000
0xffff8bd2eea4   548  add x0, x0, x16, lsl #2
0xffff8bd2eea8   552  ubfx x1, x10, #3, #5
0xffff8bd2eeac   556  ldr x11, [x0, #360]
0xffff8bd2eeb0   560  lsr x11, x11, x1
0xffff8bd2eeb4   564  tbz w11, #0, #+0x10 (addr 0xffff8bd2eec4)
0xffff8bd2eeb8   568  ldp x1, x11, [jssp], #16
0xffff8bd2eebc   572  ldp x2, x0, [jssp], #16
0xffff8bd2eec0   576  ret
0xffff8bd2eec4   580  ldp x1, x11, [jssp], #16
0xffff8bd2eec8   584  sub csp, jssp, #0x78 (120)
0xffff8bd2eecc   588  stp x14, x15, [jssp, #-32]!
0xffff8bd2eed0   592  stp x18, lr, [jssp, #16]
0xffff8bd2eed4   596  stp x9, x11, [jssp, #-32]!
0xffff8bd2eed8   600  stp x12, x13, [jssp, #16]
0xffff8bd2eedc   604  stp x5, x6, [jssp, #-32]!
0xffff8bd2eee0   608  stp x7, x8, [jssp, #16]
0xffff8bd2eee4   612  stp x1, x3, [jssp, #-24]!
0xffff8bd2eee8   616  str x4, [jssp, #16]
0xffff8bd2eeec   620  mov x0, x1
0xffff8bd2eef0   624  mov x1, x11
0xffff8bd2eef4   628  ldr x2, pc+828 (addr 0x0000ffff8bd2f230)    ;; external reference (isolate)
0xffff8bd2eef8   632  ldr x16, pc+832 (addr 0x0000ffff8bd2f238)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2eefc   636  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2ef00   640  blr x16
0xffff8bd2ef04   644  ldp x4, x5, [jssp, #16]
0xffff8bd2ef08   648  ldp x1, x3, [jssp], #32
0xffff8bd2ef0c   652  ldp x8, x9, [jssp, #16]
0xffff8bd2ef10   656  ldp x6, x7, [jssp], #32
0xffff8bd2ef14   660  ldp x13, x14, [jssp, #16]
0xffff8bd2ef18   664  ldp x11, x12, [jssp], #32
0xffff8bd2ef1c   668  ldr lr, [jssp, #16]
0xffff8bd2ef20   672  ldp x15, x18, [jssp], #24
0xffff8bd2ef24   676  ldp x2, x0, [jssp], #16
0xffff8bd2ef28   680  ret
0xffff8bd2ef2c   684  sub csp, jssp, #0x10 (16)
0xffff8bd2ef30   688  stp x2, x0, [jssp, #-16]!
0xffff8bd2ef34   692  ldr x10, [x11]
0xffff8bd2ef38   696  and x16, x10, #0xfffffffffff00000
0xffff8bd2ef3c   700  ldr x16, [x16, #8]
0xffff8bd2ef40   704  tst x16, #0x18
0xffff8bd2ef44   708  b.eq #+0x19c (addr 0xffff8bd2f0e0)
0xffff8bd2ef48   712  and x16, x1, #0xfffffffffff00000
0xffff8bd2ef4c   716  ldr x16, [x16, #8]
0xffff8bd2ef50   720  tst x16, #0x18
0xffff8bd2ef54   724  b.ne #+0x18c (addr 0xffff8bd2f0e0)
0xffff8bd2ef58   728  and x10, x1, #0xfffffffffff00000
0xffff8bd2ef5c   732  ldr x0, [x10, #104]
0xffff8bd2ef60   736  subs x0, x0, #0x1 (1)
0xffff8bd2ef64   740  str x0, [x10, #104]
0xffff8bd2ef68   744  b.mi #+0xe4 (addr 0xffff8bd2f04c)
0xffff8bd2ef6c   748  ubfx x16, x1, #8, #12
0xffff8bd2ef70   752  and x10, x1, #0xfffffffffff00000
0xffff8bd2ef74   756  add x10, x10, x16, lsl #2
0xffff8bd2ef78   760  ubfx x0, x1, #3, #5
0xffff8bd2ef7c   764  ldr x10, [x10, #360]
0xffff8bd2ef80   768  lsr x10, x10, x0
0xffff8bd2ef84   772  tbz w10, #0, #+0x8 (addr 0xffff8bd2ef8c)
0xffff8bd2ef88   776  tbnz w10, #1, #+0x3c (addr 0xffff8bd2efc4)
0xffff8bd2ef8c   780  ldp x2, x0, [jssp], #16
0xffff8bd2ef90   784  ldr x16, pc+688 (addr 0x0000ffff8bd2f240)    ;; external reference (store_buffer_top)
0xffff8bd2ef94   788  ldr x10, [x16]
0xffff8bd2ef98   792  str x11, [x10], #8
0xffff8bd2ef9c   796  str x10, [x16]
0xffff8bd2efa0   800  tst x10, #0x1ffff
0xffff8bd2efa4   804  b.eq #+0x8 (addr 0xffff8bd2efac)
0xffff8bd2efa8   808  ret
0xffff8bd2efac   812  sub csp, jssp, #0x8 (8)
0xffff8bd2efb0   816  str lr, [jssp, #-8]!
0xffff8bd2efb4   820  ldr x17, pc+660 (addr 0x0000ffff8bd2f248)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2efb8   824  blr x17
0xffff8bd2efbc   828  ldr lr, [jssp], #8
0xffff8bd2efc0   832  ret
0xffff8bd2efc4   836  ldr x10, [x11]
0xffff8bd2efc8   840  and x0, x10, #0xfffffffffff00000
0xffff8bd2efcc   844  ldr x0, [x0, #8]
0xffff8bd2efd0   848  tbz w0, #6, #+0x18 (addr 0xffff8bd2efe8)
0xffff8bd2efd4   852  and x0, x1, #0xfffffffffff00000
0xffff8bd2efd8   856  ldr x0, [x0, #8]
0xffff8bd2efdc   860  movz x16, #0x58
0xffff8bd2efe0   864  tst x0, x16
0xffff8bd2efe4   868  b.eq #+0x68 (addr 0xffff8bd2f04c)
0xffff8bd2efe8   872  sub csp, jssp, #0x10 (16)
0xffff8bd2efec   876  stp x1, x11, [jssp, #-16]!
0xffff8bd2eff0   880  ubfx x16, x10, #8, #12
0xffff8bd2eff4   884  and x0, x10, #0xfffffffffff00000
0xffff8bd2eff8   888  add x0, x0, x16, lsl #2
0xffff8bd2effc   892  ubfx x1, x10, #3, #5
0xffff8bd2f000   896  ldr x11, [x0, #360]
0xffff8bd2f004   900  lsr x11, x11, x1
0xffff8bd2f008   904  tbz w11, #0, #+0x40 (addr 0xffff8bd2f048)
0xffff8bd2f00c   908  ldp x1, x11, [jssp], #16
0xffff8bd2f010   912  ldp x2, x0, [jssp], #16
0xffff8bd2f014   916  ldr x16, pc+572 (addr 0x0000ffff8bd2f250)    ;; external reference (store_buffer_top)
0xffff8bd2f018   920  ldr x10, [x16]
0xffff8bd2f01c   924  str x11, [x10], #8
0xffff8bd2f020   928  str x10, [x16]
0xffff8bd2f024   932  tst x10, #0x1ffff
0xffff8bd2f028   936  b.eq #+0x8 (addr 0xffff8bd2f030)
0xffff8bd2f02c   940  ret
0xffff8bd2f030   944  sub csp, jssp, #0x8 (8)
0xffff8bd2f034   948  str lr, [jssp, #-8]!
0xffff8bd2f038   952  ldr x17, pc+544 (addr 0x0000ffff8bd2f258)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2f03c   956  blr x17
0xffff8bd2f040   960  ldr lr, [jssp], #8
0xffff8bd2f044   964  ret
0xffff8bd2f048   968  ldp x1, x11, [jssp], #16
0xffff8bd2f04c   972  sub csp, jssp, #0x78 (120)
0xffff8bd2f050   976  stp x14, x15, [jssp, #-32]!
0xffff8bd2f054   980  stp x18, lr, [jssp, #16]
0xffff8bd2f058   984  stp x9, x11, [jssp, #-32]!
0xffff8bd2f05c   988  stp x12, x13, [jssp, #16]
0xffff8bd2f060   992  stp x5, x6, [jssp, #-32]!
0xffff8bd2f064   996  stp x7, x8, [jssp, #16]
0xffff8bd2f068  1000  stp x1, x3, [jssp, #-24]!
0xffff8bd2f06c  1004  str x4, [jssp, #16]
0xffff8bd2f070  1008  mov x0, x1
0xffff8bd2f074  1012  mov x1, x11
0xffff8bd2f078  1016  ldr x2, pc+488 (addr 0x0000ffff8bd2f260)    ;; external reference (isolate)
0xffff8bd2f07c  1020  ldr x16, pc+492 (addr 0x0000ffff8bd2f268)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2f080  1024  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2f084  1028  blr x16
0xffff8bd2f088  1032  ldp x4, x5, [jssp, #16]
0xffff8bd2f08c  1036  ldp x1, x3, [jssp], #32
0xffff8bd2f090  1040  ldp x8, x9, [jssp, #16]
0xffff8bd2f094  1044  ldp x6, x7, [jssp], #32
0xffff8bd2f098  1048  ldp x13, x14, [jssp, #16]
0xffff8bd2f09c  1052  ldp x11, x12, [jssp], #32
0xffff8bd2f0a0  1056  ldr lr, [jssp, #16]
0xffff8bd2f0a4  1060  ldp x15, x18, [jssp], #24
0xffff8bd2f0a8  1064  ldp x2, x0, [jssp], #16
0xffff8bd2f0ac  1068  ldr x16, pc+452 (addr 0x0000ffff8bd2f270)    ;; external reference (store_buffer_top)
0xffff8bd2f0b0  1072  ldr x10, [x16]
0xffff8bd2f0b4  1076  str x11, [x10], #8
0xffff8bd2f0b8  1080  str x10, [x16]
0xffff8bd2f0bc  1084  tst x10, #0x1ffff
0xffff8bd2f0c0  1088  b.eq #+0x8 (addr 0xffff8bd2f0c8)
0xffff8bd2f0c4  1092  ret
0xffff8bd2f0c8  1096  sub csp, jssp, #0x8 (8)
0xffff8bd2f0cc  1100  str lr, [jssp, #-8]!
0xffff8bd2f0d0  1104  ldr x17, pc+424 (addr 0x0000ffff8bd2f278)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd2f0d4  1108  blr x17
0xffff8bd2f0d8  1112  ldr lr, [jssp], #8
0xffff8bd2f0dc  1116  ret
0xffff8bd2f0e0  1120  and x10, x1, #0xfffffffffff00000
0xffff8bd2f0e4  1124  ldr x0, [x10, #104]
0xffff8bd2f0e8  1128  subs x0, x0, #0x1 (1)
0xffff8bd2f0ec  1132  str x0, [x10, #104]
0xffff8bd2f0f0  1136  b.mi #+0x84 (addr 0xffff8bd2f174)
0xffff8bd2f0f4  1140  ubfx x16, x1, #8, #12
0xffff8bd2f0f8  1144  and x10, x1, #0xfffffffffff00000
0xffff8bd2f0fc  1148  add x10, x10, x16, lsl #2
0xffff8bd2f100  1152  ubfx x0, x1, #3, #5
0xffff8bd2f104  1156  ldr x10, [x10, #360]
0xffff8bd2f108  1160  lsr x10, x10, x0
0xffff8bd2f10c  1164  tbz w10, #0, #+0x8 (addr 0xffff8bd2f114)
0xffff8bd2f110  1168  tbnz w10, #1, #+0xc (addr 0xffff8bd2f11c)
0xffff8bd2f114  1172  ldp x2, x0, [jssp], #16
0xffff8bd2f118  1176  ret
0xffff8bd2f11c  1180  ldr x10, [x11]
0xffff8bd2f120  1184  and x0, x10, #0xfffffffffff00000
0xffff8bd2f124  1188  ldr x0, [x0, #8]
0xffff8bd2f128  1192  tbz w0, #6, #+0x18 (addr 0xffff8bd2f140)
0xffff8bd2f12c  1196  and x0, x1, #0xfffffffffff00000
0xffff8bd2f130  1200  ldr x0, [x0, #8]
0xffff8bd2f134  1204  movz x16, #0x58
0xffff8bd2f138  1208  tst x0, x16
0xffff8bd2f13c  1212  b.eq #+0x38 (addr 0xffff8bd2f174)
0xffff8bd2f140  1216  sub csp, jssp, #0x10 (16)
0xffff8bd2f144  1220  stp x1, x11, [jssp, #-16]!
0xffff8bd2f148  1224  ubfx x16, x10, #8, #12
0xffff8bd2f14c  1228  and x0, x10, #0xfffffffffff00000
0xffff8bd2f150  1232  add x0, x0, x16, lsl #2
0xffff8bd2f154  1236  ubfx x1, x10, #3, #5
0xffff8bd2f158  1240  ldr x11, [x0, #360]
0xffff8bd2f15c  1244  lsr x11, x11, x1
0xffff8bd2f160  1248  tbz w11, #0, #+0x10 (addr 0xffff8bd2f170)
0xffff8bd2f164  1252  ldp x1, x11, [jssp], #16
0xffff8bd2f168  1256  ldp x2, x0, [jssp], #16
0xffff8bd2f16c  1260  ret
0xffff8bd2f170  1264  ldp x1, x11, [jssp], #16
0xffff8bd2f174  1268  sub csp, jssp, #0x78 (120)
0xffff8bd2f178  1272  stp x14, x15, [jssp, #-32]!
0xffff8bd2f17c  1276  stp x18, lr, [jssp, #16]
0xffff8bd2f180  1280  stp x9, x11, [jssp, #-32]!
0xffff8bd2f184  1284  stp x12, x13, [jssp, #16]
0xffff8bd2f188  1288  stp x5, x6, [jssp, #-32]!
0xffff8bd2f18c  1292  stp x7, x8, [jssp, #16]
0xffff8bd2f190  1296  stp x1, x3, [jssp, #-24]!
0xffff8bd2f194  1300  str x4, [jssp, #16]
0xffff8bd2f198  1304  mov x0, x1
0xffff8bd2f19c  1308  mov x1, x11
0xffff8bd2f1a0  1312  ldr x2, pc+224 (addr 0x0000ffff8bd2f280)    ;; external reference (isolate)
0xffff8bd2f1a4  1316  ldr x16, pc+228 (addr 0x0000ffff8bd2f288)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd2f1a8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff8bd2f1ac  1324  blr x16
0xffff8bd2f1b0  1328  ldp x4, x5, [jssp, #16]
0xffff8bd2f1b4  1332  ldp x1, x3, [jssp], #32
0xffff8bd2f1b8  1336  ldp x8, x9, [jssp, #16]
0xffff8bd2f1bc  1340  ldp x6, x7, [jssp], #32
0xffff8bd2f1c0  1344  ldp x13, x14, [jssp, #16]
0xffff8bd2f1c4  1348  ldp x11, x12, [jssp], #32
0xffff8bd2f1c8  1352  ldr lr, [jssp, #16]
0xffff8bd2f1cc  1356  ldp x15, x18, [jssp], #24
0xffff8bd2f1d0  1360  ldp x2, x0, [jssp], #16
0xffff8bd2f1d4  1364  ret
0xffff8bd2f1d8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd2f1dc  1372  d63f03e0       constant
0xffff8bd2f1e0  1376  2cb8e8c0       constant
0xffff8bd2f1e4  1380  00000000       constant
0xffff8bd2f1e8  1384  8bd064c0       constant
0xffff8bd2f1ec  1388  0000ffff       constant
0xffff8bd2f1f0  1392  2cb8e8c0       constant
0xffff8bd2f1f4  1396  00000000       constant
0xffff8bd2f1f8  1400  8bd064c0       constant
0xffff8bd2f1fc  1404  0000ffff       constant
0xffff8bd2f200  1408  2cb8e8c0       constant
0xffff8bd2f204  1412  00000000       constant
0xffff8bd2f208  1416  8bd064c0       constant
0xffff8bd2f20c  1420  0000ffff       constant
0xffff8bd2f210  1424  2cb8d2d0       constant
0xffff8bd2f214  1428  00000000       constant
0xffff8bd2f218  1432  00c2d958       constant
0xffff8bd2f21c  1436  00000000       constant
0xffff8bd2f220  1440  2cb8e8c0       constant
0xffff8bd2f224  1444  00000000       constant
0xffff8bd2f228  1448  8bd064c0       constant
0xffff8bd2f22c  1452  0000ffff       constant
0xffff8bd2f230  1456  2cb8d2d0       constant
0xffff8bd2f234  1460  00000000       constant
0xffff8bd2f238  1464  00c2d958       constant
0xffff8bd2f23c  1468  00000000       constant
0xffff8bd2f240  1472  2cb8e8c0       constant
0xffff8bd2f244  1476  00000000       constant
0xffff8bd2f248  1480  8bd064c0       constant
0xffff8bd2f24c  1484  0000ffff       constant
0xffff8bd2f250  1488  2cb8e8c0       constant
0xffff8bd2f254  1492  00000000       constant
0xffff8bd2f258  1496  8bd064c0       constant
0xffff8bd2f25c  1500  0000ffff       constant
0xffff8bd2f260  1504  2cb8d2d0       constant
0xffff8bd2f264  1508  00000000       constant
0xffff8bd2f268  1512  00c2d958       constant
0xffff8bd2f26c  1516  00000000       constant
0xffff8bd2f270  1520  2cb8e8c0       constant
0xffff8bd2f274  1524  00000000       constant
0xffff8bd2f278  1528  8bd064c0       constant
0xffff8bd2f27c  1532  0000ffff       constant
0xffff8bd2f280  1536  2cb8d2d0       constant
0xffff8bd2f284  1540  00000000       constant
0xffff8bd2f288  1544  00c2d958       constant
0xffff8bd2f28c  1548  00000000       constant


RelocInfo (size = 59)
0xffff8bd2ec88  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2ecac  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2ed24  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2ed48  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2ed88  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2edac  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2edec  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2edf0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2ee20  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2ee44  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2eef4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2eef8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2ef90  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2efb4  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2f014  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2f038  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2f078  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2f07c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2f0ac  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd2f0d0  code target (STUB)  (0xffff8bd064c0)
0xffff8bd2f1a0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd2f1a4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd2f1d8  constant pool (size 184)


kind = STUB
major_key = FastCloneShallowObjectStub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 493)
0xffff8bd2f300     0  ldur x4, [x3, #47]
0xffff8bd2f304     4  tbnz w2, #0, #+0xb0 (addr 0xffff8bd2f3b4)
0xffff8bd2f308     8  asr x6, x2, #32
0xffff8bd2f30c    12  add x5, x4, #0x17 (23)
0xffff8bd2f310    16  ldr x7, [x5, w6, sxtw #3]
0xffff8bd2f314    20  ldr x4, pc+340 (addr 0x0000ffff8bd2f468)    ;; object: 0x26c04241 <undefined>
0xffff8bd2f318    24  cmp x7, x4
0xffff8bd2f31c    28  b.eq #+0x94 (addr 0xffff8bd2f3b0)
0xffff8bd2f320    32  ldur x4, [x7, #7]
0xffff8bd2f324    36  ldur x5, [x4, #-1]
0xffff8bd2f328    40  ldrb w6, [x5, #7]
0xffff8bd2f32c    44  cmp w6, #0x7 (7)
0xffff8bd2f330    48  b.ne #+0x80 (addr 0xffff8bd2f3b0)
0xffff8bd2f334    52  movz x1, #0xe2c0
0xffff8bd2f338    56  movk x1, #0x2cb8, lsl #16
0xffff8bd2f33c    60  ldp x2, x0, [x1]
0xffff8bd2f340    64  adds x16, x2, #0x48 (72)
0xffff8bd2f344    68  ccmp x16, x0, #nzCv, lo
0xffff8bd2f348    72  b.hi #+0xb4 (addr 0xffff8bd2f3fc)
0xffff8bd2f34c    76  str x16, [x1]
0xffff8bd2f350    80  orr x2, x2, #0x1
0xffff8bd2f354    84  stur x5, [x2, #-1]
0xffff8bd2f358    88  ldur x0, [x4, #7]
0xffff8bd2f35c    92  stur x0, [x2, #7]
0xffff8bd2f360    96  ldur x0, [x4, #15]
0xffff8bd2f364   100  stur x0, [x2, #15]
0xffff8bd2f368   104  ldur x0, [x4, #23]
0xffff8bd2f36c   108  stur x0, [x2, #23]
0xffff8bd2f370   112  ldur x0, [x4, #31]
0xffff8bd2f374   116  stur x0, [x2, #31]
0xffff8bd2f378   120  ldur x0, [x4, #39]
0xffff8bd2f37c   124  stur x0, [x2, #39]
0xffff8bd2f380   128  ldur x0, [x4, #47]
0xffff8bd2f384   132  stur x0, [x2, #47]
0xffff8bd2f388   136  add x0, x2, #0x38 (56)
0xffff8bd2f38c   140  ldr x1, pc+228 (addr 0x0000ffff8bd2f470)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd2f390   144  stur x1, [x0, #-1]
0xffff8bd2f394   148  stur x7, [x0, #7]
0xffff8bd2f398   152  ldur w0, [x7, #35]
0xffff8bd2f39c   156  add w0, w0, #0x1 (1)
0xffff8bd2f3a0   160  lsl x0, x0, #32
0xffff8bd2f3a4   164  stur x0, [x7, #31]
0xffff8bd2f3a8   168  mov x0, x2
0xffff8bd2f3ac   172  ret
0xffff8bd2f3b0   176  b #+0xe0 (addr 0xffff8bd2f490)
0xffff8bd2f3b4   180  sub csp, jssp, #0x10 (16)
0xffff8bd2f3b8   184  stp fp, lr, [jssp, #-16]!
0xffff8bd2f3bc   188  movz fp, #0xa00000000
0xffff8bd2f3c0   192  sub csp, jssp, #0x8 (8)
0xffff8bd2f3c4   196  str fp, [jssp, #-8]!
0xffff8bd2f3c8   200  add fp, jssp, #0x8 (8)
0xffff8bd2f3cc   204  ldur x16, [x2, #-1]
0xffff8bd2f3d0   208  ldr x17, [x26, #120]
0xffff8bd2f3d4   212  cmp x16, x17
0xffff8bd2f3d8   216  b.ne #+0xc8 (addr 0xffff8bd2f4a0)
0xffff8bd2f3dc   220  ldur d29, [x2, #7]
0xffff8bd2f3e0   224  fcvtzs w6, d29
0xffff8bd2f3e4   228  scvtf d0, w6
0xffff8bd2f3e8   232  fcmp d29, d0
0xffff8bd2f3ec   236  b.ne #+0xb4 (addr 0xffff8bd2f4a0)
0xffff8bd2f3f0   240  ldr lr, [jssp, #16]
0xffff8bd2f3f4   244  ldp xzr, fp, [jssp], #24
0xffff8bd2f3f8   248  b #-0xec (addr 0xffff8bd2f30c)
0xffff8bd2f3fc   252  sub csp, jssp, #0x10 (16)
0xffff8bd2f400   256  stp fp, lr, [jssp, #-16]!
0xffff8bd2f404   260  movz fp, #0xa00000000
0xffff8bd2f408   264  sub csp, jssp, #0x8 (8)
0xffff8bd2f40c   268  str fp, [jssp, #-8]!
0xffff8bd2f410   272  add fp, jssp, #0x8 (8)
0xffff8bd2f414   276  movz x2, #0x0
0xffff8bd2f418   280  mov x16, lr
0xffff8bd2f41c   284  ldr x17, pc+92 (addr 0x0000ffff8bd2f478)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd2f420   288  blr x17
0xffff8bd2f424   292  movz x0, #0x4800000000
0xffff8bd2f428   296  movz x10, #0x0
0xffff8bd2f42c   300  sub csp, jssp, #0x10 (16)
0xffff8bd2f430   304  stp x10, x0, [jssp, #-16]!
0xffff8bd2f434   308  movz x0, #0x2
0xffff8bd2f438   312  movz x1, #0x5b88
0xffff8bd2f43c   316  movk x1, #0xe2, lsl #16
0xffff8bd2f440   320  ldr x16, pc+64 (addr 0x0000ffff8bd2f480)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd2f444   324  blr x16
0xffff8bd2f448   328  str x0, [jssp, #16]
0xffff8bd2f44c   332  ldr x16, pc+60 (addr 0x0000ffff8bd2f488)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd2f450   336  blr x16
0xffff8bd2f454   340  ldr lr, [jssp, #16]
0xffff8bd2f458   344  ldp xzr, fp, [jssp], #24
0xffff8bd2f45c   348  b #-0x108 (addr 0xffff8bd2f354)
0xffff8bd2f460   352  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff8bd2f464   356  d63f03e0       constant
0xffff8bd2f468   360  26c04241       constant
0xffff8bd2f46c   364  00000000       constant
0xffff8bd2f470   368  5f505d81       constant
0xffff8bd2f474   372  00000000       constant
0xffff8bd2f478   376  8bd06820       constant
0xffff8bd2f47c   380  0000ffff       constant
0xffff8bd2f480   384  8bd06260       constant
0xffff8bd2f484   388  0000ffff       constant
0xffff8bd2f488   392  8bd068e0       constant
0xffff8bd2f48c   396  0000ffff       constant
0xffff8bd2f490   400  movz x16, #0x0
0xffff8bd2f494   404  sub csp, jssp, #0x10 (16)
0xffff8bd2f498   408  stp fp, lr, [jssp, #-16]!
0xffff8bd2f49c   412  bl #+0xc (addr 0xffff8bd2f4a8)
0xffff8bd2f4a0   416  movz x16, #0x8
0xffff8bd2f4a4   420  bl #+0x14 (addr 0xffff8bd2f4b8)
0xffff8bd2f4a8   424  movz x17, #0xa00000000
0xffff8bd2f4ac   428  sub csp, jssp, #0x10 (16)
0xffff8bd2f4b0   432  stp x17, cp, [jssp, #-16]!
0xffff8bd2f4b4   436  add fp, jssp, #0x10 (16)
0xffff8bd2f4b8   440  ldr x17, pc+24 (addr 0x0000ffff8bd2f4d0)    ;; lazy deoptimization bailout 0
0xffff8bd2f4bc   444  add x17, x17, x16
0xffff8bd2f4c0   448  br x17
0xffff8bd2f4c4   452  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd2f4c8   456  d63f03e0       constant
0xffff8bd2f4cc   460  d503201f       constant
0xffff8bd2f4d0   464  8bb06000       constant
0xffff8bd2f4d4   468  0000ffff       constant


Safepoints (size = 21)
0xffff8bd2f448   328  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff8bd2f314  embedded object  (0x26c04241 <undefined>)
0xffff8bd2f38c  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd2f41c  code target (STUB)  (0xffff8bd06820)
0xffff8bd2f440  code target (STUB)  (0xffff8bd06260)
0xffff8bd2f44c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd2f460  constant pool (size 48)
0xffff8bd2f4b8  runtime entry
0xffff8bd2f4c4  constant pool (size 20)


kind = STORE_IC
major_key = VectorStoreICTrampolineStub
ic_state = GENERIC
extra_ic_state = STRICT
name = VectorStoreICTrampolineStub
compiler = unknown
Instructions (size = 440)
0xffff8bd2f560     0  ldur x3, [fp, #-16]
0xffff8bd2f564     4  ldur x3, [x3, #31]
0xffff8bd2f568     8  ldur x3, [x3, #87]
0xffff8bd2f56c    12  add x5, x3, x4, asr #29
0xffff8bd2f570    16  ldur x5, [x5, #15]
0xffff8bd2f574    20  tbz w1, #0, #+0x174 (addr 0xffff8bd2f6e8)
0xffff8bd2f578    24  ldur x6, [x1, #-1]
0xffff8bd2f57c    28  ldur x7, [x5, #7]
0xffff8bd2f580    32  cmp x7, x6
0xffff8bd2f584    36  b.ne #+0x14 (addr 0xffff8bd2f598)
0xffff8bd2f588    40  add x5, x3, x4, asr #29
0xffff8bd2f58c    44  ldur x5, [x5, #23]
0xffff8bd2f590    48  add x5, x5, #0x5f (95)
0xffff8bd2f594    52  br x5
0xffff8bd2f598    56  ldur x7, [x5, #-1]
0xffff8bd2f59c    60  ldr x16, [x26, #224]
0xffff8bd2f5a0    64  cmp x7, x16
0xffff8bd2f5a4    68  b.ne #+0x5c (addr 0xffff8bd2f600)
0xffff8bd2f5a8    72  ldur x7, [x5, #15]
0xffff8bd2f5ac    76  ldur x7, [x7, #7]
0xffff8bd2f5b0    80  cmp x6, x7
0xffff8bd2f5b4    84  b.ne #+0x10 (addr 0xffff8bd2f5c4)
0xffff8bd2f5b8    88  ldur x5, [x5, #23]
0xffff8bd2f5bc    92  add x5, x5, #0x5f (95)
0xffff8bd2f5c0    96  br x5
0xffff8bd2f5c4   100  ldur x8, [x5, #7]
0xffff8bd2f5c8   104  add x8, x5, x8, asr #29
0xffff8bd2f5cc   108  add x8, x8, #0xf (15)
0xffff8bd2f5d0   112  add x5, x5, #0x1f (31)
0xffff8bd2f5d4   116  ldr x7, [x5]
0xffff8bd2f5d8   120  ldur x7, [x7, #7]
0xffff8bd2f5dc   124  cmp x6, x7
0xffff8bd2f5e0   128  b.ne #+0x10 (addr 0xffff8bd2f5f0)
0xffff8bd2f5e4   132  ldr x5, [x5, #8]
0xffff8bd2f5e8   136  add x5, x5, #0x5f (95)
0xffff8bd2f5ec   140  br x5
0xffff8bd2f5f0   144  add x5, x5, #0x10 (16)
0xffff8bd2f5f4   148  cmp x5, x8
0xffff8bd2f5f8   152  b.lt #-0x24 (addr 0xffff8bd2f5d4)
0xffff8bd2f5fc   156  b #+0xcc (addr 0xffff8bd2f6c8)
0xffff8bd2f600   160  ldr x16, [x26, #2400]
0xffff8bd2f604   164  cmp x5, x16
0xffff8bd2f608   168  b.ne #+0xc0 (addr 0xffff8bd2f6c8)
0xffff8bd2f60c   172  tbz w1, #0, #+0xbc (addr 0xffff8bd2f6c8)
0xffff8bd2f610   176  ldur x5, [x2, #7]
0xffff8bd2f614   180  ldur x6, [x1, #-1]
0xffff8bd2f618   184  add x5, x5, x6
0xffff8bd2f61c   188  movz x16, #0x6902
0xffff8bd2f620   192  eor x5, x5, x16
0xffff8bd2f624   196  ubfx x5, x5, #2, #11
0xffff8bd2f628   200  add x8, x5, x5, lsl #1
0xffff8bd2f62c   204  ldr x6, pc+204 (addr 0x0000ffff8bd2f6f8)    ;; external reference (StubCache::primary_->key)
0xffff8bd2f630   208  add x6, x6, x8, lsl #3
0xffff8bd2f634   212  ldr x7, [x6]
0xffff8bd2f638   216  cmp x2, x7
0xffff8bd2f63c   220  b.ne #+0x34 (addr 0xffff8bd2f670)
0xffff8bd2f640   224  ldr x7, [x6, #16]
0xffff8bd2f644   228  ldur x8, [x1, #-1]
0xffff8bd2f648   232  cmp x7, x8
0xffff8bd2f64c   236  b.ne #+0x24 (addr 0xffff8bd2f670)
0xffff8bd2f650   240  ldr x6, [x6, #8]
0xffff8bd2f654   244  ldur w7, [x6, #63]
0xffff8bd2f658   248  and w7, w7, #0xffffffc7
0xffff8bd2f65c   252  movz w16, #0x6902
0xffff8bd2f660   256  cmp w7, w16
0xffff8bd2f664   260  b.ne #+0xc (addr 0xffff8bd2f670)
0xffff8bd2f668   264  add x6, x6, #0x5f (95)
0xffff8bd2f66c   268  br x6
0xffff8bd2f670   272  sub x5, x5, x2, lsr #2
0xffff8bd2f674   276  movz x16, #0x1a40
0xffff8bd2f678   280  add x5, x5, x16
0xffff8bd2f67c   284  and x5, x5, #0x1ff
0xffff8bd2f680   288  add x8, x5, x5, lsl #1
0xffff8bd2f684   292  ldr x6, pc+124 (addr 0x0000ffff8bd2f700)    ;; external reference (StubCache::secondary_->key)
0xffff8bd2f688   296  add x6, x6, x8, lsl #3
0xffff8bd2f68c   300  ldr x7, [x6]
0xffff8bd2f690   304  cmp x2, x7
0xffff8bd2f694   308  b.ne #+0x34 (addr 0xffff8bd2f6c8)
0xffff8bd2f698   312  ldr x7, [x6, #16]
0xffff8bd2f69c   316  ldur x8, [x1, #-1]
0xffff8bd2f6a0   320  cmp x7, x8
0xffff8bd2f6a4   324  b.ne #+0x24 (addr 0xffff8bd2f6c8)
0xffff8bd2f6a8   328  ldr x6, [x6, #8]
0xffff8bd2f6ac   332  ldur w7, [x6, #63]
0xffff8bd2f6b0   336  and w7, w7, #0xffffffc7
0xffff8bd2f6b4   340  movz w16, #0x6902
0xffff8bd2f6b8   344  cmp w7, w16
0xffff8bd2f6bc   348  b.ne #+0xc (addr 0xffff8bd2f6c8)
0xffff8bd2f6c0   352  add x6, x6, #0x5f (95)
0xffff8bd2f6c4   356  br x6
0xffff8bd2f6c8   360  sub csp, jssp, #0x28 (40)
0xffff8bd2f6cc   364  stp x4, x0, [jssp, #-32]!
0xffff8bd2f6d0   368  stp x2, x1, [jssp, #16]
0xffff8bd2f6d4   372  str x3, [jssp, #-8]!
0xffff8bd2f6d8   376  movz x0, #0x5
0xffff8bd2f6dc   380  ldr x1, pc+44 (addr 0x0000ffff8bd2f708)    ;; external reference (Runtime::StoreIC_Miss)
0xffff8bd2f6e0   384  ldr x16, pc+48 (addr 0x0000ffff8bd2f710)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd2f6e4   388  br x16
0xffff8bd2f6e8   392  ldr x6, [x26, #120]
0xffff8bd2f6ec   396  b #-0x170 (addr 0xffff8bd2f57c)
0xffff8bd2f6f0   400  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bd2f6f4   404  d63f03e0       constant
0xffff8bd2f6f8   408  2cba8950       constant
0xffff8bd2f6fc   412  00000000       constant
0xffff8bd2f700   416  2cbb4950       constant
0xffff8bd2f704   420  00000000       constant
0xffff8bd2f708   424  00c87f60       constant
0xffff8bd2f70c   428  00000000       constant
0xffff8bd2f710   432  8bd06060       constant
0xffff8bd2f714   436  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd2f62c  external reference (StubCache::primary_->key)  (0x2cba8950)
0xffff8bd2f684  external reference (StubCache::secondary_->key)  (0x2cbb4950)
0xffff8bd2f6dc  external reference (Runtime::StoreIC_Miss)  (0xc87f60)
0xffff8bd2f6e0  code target (STUB)  (0xffff8bd06060)
0xffff8bd2f6f0  constant pool (size 40)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 397)
0xffff8bd30360     0  movz x2, #0xe2c0
0xffff8bd30364     4  movk x2, #0x2cb8, lsl #16
0xffff8bd30368     8  ldp x3, x0, [x2]
0xffff8bd3036c    12  adds x16, x3, #0x78 (120)
0xffff8bd30370    16  ccmp x16, x0, #nzCv, lo
0xffff8bd30374    20  b.hi #+0x84 (addr 0xffff8bd303f8)
0xffff8bd30378    24  str x16, [x2]
0xffff8bd3037c    28  orr x3, x3, #0x1
0xffff8bd30380    32  ldr x0, pc+232 (addr 0x0000ffff8bd30468)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd30384    36  stur x0, [x3, #-1]
0xffff8bd30388    40  movz x0, #0xd00000000
0xffff8bd3038c    44  stur x0, [x3, #7]
0xffff8bd30390    48  stur x1, [x3, #15]
0xffff8bd30394    52  stur cp, [x3, #23]
0xffff8bd30398    56  ldr x0, pc+216 (addr 0x0000ffff8bd30470)    ;; object: 0x26c04519 <the hole>
0xffff8bd3039c    60  stur x0, [x3, #31]
0xffff8bd303a0    64  ldur x0, [cp, #39]
0xffff8bd303a4    68  stur x0, [x3, #39]
0xffff8bd303a8    72  ldr x0, pc+208 (addr 0x0000ffff8bd30478)    ;; object: 0x26c04241 <undefined>
0xffff8bd303ac    76  stur x0, [x3, #47]
0xffff8bd303b0    80  ldr x0, pc+208 (addr 0x0000ffff8bd30480)    ;; object: 0x26c04241 <undefined>
0xffff8bd303b4    84  stur x0, [x3, #55]
0xffff8bd303b8    88  ldr x0, pc+208 (addr 0x0000ffff8bd30488)    ;; object: 0x26c04241 <undefined>
0xffff8bd303bc    92  stur x0, [x3, #63]
0xffff8bd303c0    96  ldr x0, pc+208 (addr 0x0000ffff8bd30490)    ;; object: 0x26c04241 <undefined>
0xffff8bd303c4   100  stur x0, [x3, #71]
0xffff8bd303c8   104  ldr x0, pc+208 (addr 0x0000ffff8bd30498)    ;; object: 0x26c04241 <undefined>
0xffff8bd303cc   108  stur x0, [x3, #79]
0xffff8bd303d0   112  ldr x0, pc+208 (addr 0x0000ffff8bd304a0)    ;; object: 0x26c04241 <undefined>
0xffff8bd303d4   116  stur x0, [x3, #87]
0xffff8bd303d8   120  ldr x0, pc+208 (addr 0x0000ffff8bd304a8)    ;; object: 0x26c04241 <undefined>
0xffff8bd303dc   124  stur x0, [x3, #95]
0xffff8bd303e0   128  ldr x0, pc+208 (addr 0x0000ffff8bd304b0)    ;; object: 0x26c04241 <undefined>
0xffff8bd303e4   132  stur x0, [x3, #103]
0xffff8bd303e8   136  ldr x0, pc+208 (addr 0x0000ffff8bd304b8)    ;; object: 0x26c04241 <undefined>
0xffff8bd303ec   140  stur x0, [x3, #111]
0xffff8bd303f0   144  mov x0, x3
0xffff8bd303f4   148  ret
0xffff8bd303f8   152  sub csp, jssp, #0x10 (16)
0xffff8bd303fc   156  stp fp, lr, [jssp, #-16]!
0xffff8bd30400   160  movz fp, #0xa00000000
0xffff8bd30404   164  sub csp, jssp, #0x8 (8)
0xffff8bd30408   168  str fp, [jssp, #-8]!
0xffff8bd3040c   172  add fp, jssp, #0x8 (8)
0xffff8bd30410   176  movz x3, #0x0
0xffff8bd30414   180  mov x16, lr
0xffff8bd30418   184  ldr x17, pc+168 (addr 0x0000ffff8bd304c0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd3041c   188  blr x17
0xffff8bd30420   192  movz x0, #0x7800000000
0xffff8bd30424   196  movz x10, #0x0
0xffff8bd30428   200  sub csp, jssp, #0x10 (16)
0xffff8bd3042c   204  stp x10, x0, [jssp, #-16]!
0xffff8bd30430   208  movz x0, #0x2
0xffff8bd30434   212  movz x1, #0x5b88
0xffff8bd30438   216  movk x1, #0xe2, lsl #16
0xffff8bd3043c   220  ldr x16, pc+140 (addr 0x0000ffff8bd304c8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd30440   224  blr x16
0xffff8bd30444   228  str x0, [jssp, #24]
0xffff8bd30448   232  ldr x16, pc+136 (addr 0x0000ffff8bd304d0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd3044c   236  blr x16
0xffff8bd30450   240  ldr lr, [jssp, #16]
0xffff8bd30454   244  ldp xzr, fp, [jssp], #24
0xffff8bd30458   248  b #-0xd8 (addr 0xffff8bd30380)
0xffff8bd3045c   252  580003df       constant pool begin (num_const = 30)    ;; constant pool
0xffff8bd30460   256  d63f03e0       constant
0xffff8bd30464   260  d503201f       constant
0xffff8bd30468   264  5f506149       constant
0xffff8bd3046c   268  00000000       constant
0xffff8bd30470   272  26c04519       constant
0xffff8bd30474   276  00000000       constant
0xffff8bd30478   280  26c04241       constant
0xffff8bd3047c   284  00000000       constant
0xffff8bd30480   288  26c04241       constant
0xffff8bd30484   292  00000000       constant
0xffff8bd30488   296  26c04241       constant
0xffff8bd3048c   300  00000000       constant
0xffff8bd30490   304  26c04241       constant
0xffff8bd30494   308  00000000       constant
0xffff8bd30498   312  26c04241       constant
0xffff8bd3049c   316  00000000       constant
0xffff8bd304a0   320  26c04241       constant
0xffff8bd304a4   324  00000000       constant
0xffff8bd304a8   328  26c04241       constant
0xffff8bd304ac   332  00000000       constant
0xffff8bd304b0   336  26c04241       constant
0xffff8bd304b4   340  00000000       constant
0xffff8bd304b8   344  26c04241       constant
0xffff8bd304bc   348  00000000       constant
0xffff8bd304c0   352  8bd06820       constant
0xffff8bd304c4   356  0000ffff       constant
0xffff8bd304c8   360  8bd06260       constant
0xffff8bd304cc   364  0000ffff       constant
0xffff8bd304d0   368  8bd068e0       constant
0xffff8bd304d4   372  0000ffff       constant


Safepoints (size = 21)
0xffff8bd30444   228  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 20)
0xffff8bd30380  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd30398  embedded object  (0x26c04519 <the hole>)
0xffff8bd303a8  embedded object  (0x26c04241 <undefined>)
0xffff8bd303b0  embedded object  (0x26c04241 <undefined>)
0xffff8bd303b8  embedded object  (0x26c04241 <undefined>)
0xffff8bd303c0  embedded object  (0x26c04241 <undefined>)
0xffff8bd303c8  embedded object  (0x26c04241 <undefined>)
0xffff8bd303d0  embedded object  (0x26c04241 <undefined>)
0xffff8bd303d8  embedded object  (0x26c04241 <undefined>)
0xffff8bd303e0  embedded object  (0x26c04241 <undefined>)
0xffff8bd303e8  embedded object  (0x26c04241 <undefined>)
0xffff8bd30418  code target (STUB)  (0xffff8bd06820)
0xffff8bd3043c  code target (STUB)  (0xffff8bd06260)
0xffff8bd30448  code target (STUB)  (0xffff8bd068e0)
0xffff8bd3045c  constant pool (size 124)


kind = STUB
major_key = FastNewClosureStub
name = FastNewClosureStub
compiler = crankshaft
Instructions (size = 773)
0xffff8bd30560     0  movz x1, #0xe2c0
0xffff8bd30564     4  movk x1, #0x2cb8, lsl #16
0xffff8bd30568     8  ldp x3, x0, [x1]
0xffff8bd3056c    12  adds x16, x3, #0x48 (72)
0xffff8bd30570    16  ccmp x16, x0, #nzCv, lo
0xffff8bd30574    20  b.hi #+0x1bc (addr 0xffff8bd30730)
0xffff8bd30578    24  str x16, [x1]
0xffff8bd3057c    28  orr x3, x3, #0x1
0xffff8bd30580    32  ldur x0, [cp, #39]
0xffff8bd30584    36  movz x16, #0x297
0xffff8bd30588    40  ldr x1, [x0, x16]
0xffff8bd3058c    44  stur x1, [x3, #-1]
0xffff8bd30590    48  ldr x1, pc+528 (addr 0x0000ffff8bd307a0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd30594    52  stur x1, [x3, #7]
0xffff8bd30598    56  ldr x1, pc+528 (addr 0x0000ffff8bd307a8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd3059c    60  stur x1, [x3, #15]
0xffff8bd305a0    64  ldr x1, pc+528 (addr 0x0000ffff8bd307b0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd305a4    68  stur x1, [x3, #47]
0xffff8bd305a8    72  ldr x1, pc+528 (addr 0x0000ffff8bd307b8)    ;; object: 0x26c04519 <the hole>
0xffff8bd305ac    76  stur x1, [x3, #23]
0xffff8bd305b0    80  stur x2, [x3, #31]
0xffff8bd305b4    84  stur cp, [x3, #39]
0xffff8bd305b8    88  ldur x1, [x2, #23]
0xffff8bd305bc    92  movz x4, #0x0
0xffff8bd305c0    96  cmp x1, x4
0xffff8bd305c4   100  b.eq #+0x150 (addr 0xffff8bd30714)
0xffff8bd305c8   104  ldur w4, [x1, #11]
0xffff8bd305cc   108  subs w4, w4, #0x4 (4)
0xffff8bd305d0   112  b.vs #+0x230 (addr 0xffff8bd30800)
0xffff8bd305d4   116  mov x5, x4
0xffff8bd305d8   120  cmp w5, #0x1 (1)
0xffff8bd305dc   124  b.lt #+0xb4 (addr 0xffff8bd30690)
0xffff8bd305e0   128  add x4, x1, #0xf (15)
0xffff8bd305e4   132  ldr x6, [x4, w5, sxtw #3]
0xffff8bd305e8   136  ldur x4, [x6, #7]
0xffff8bd305ec   140  add x6, x1, #0x27 (39)
0xffff8bd305f0   144  ldr x7, [x6, w5, sxtw #3]
0xffff8bd305f4   148  add x6, x1, #0x17 (23)
0xffff8bd305f8   152  ldr x8, [x6, w5, sxtw #3]
0xffff8bd305fc   156  ldur x6, [x8, #7]
0xffff8bd30600   160  cmp x0, x4
0xffff8bd30604   164  b.ne #+0x1c (addr 0xffff8bd30620)
0xffff8bd30608   168  mov x4, #0xffffffff00000000
0xffff8bd3060c   172  cmp x7, x4
0xffff8bd30610   176  b.ne #+0x10 (addr 0xffff8bd30620)
0xffff8bd30614   180  movz x4, #0x0
0xffff8bd30618   184  cmp x6, x4
0xffff8bd3061c   188  b.ne #+0xc (addr 0xffff8bd30628)
0xffff8bd30620   192  sub w5, w5, #0x4 (4)
0xffff8bd30624   196  b #-0x4c (addr 0xffff8bd305d8)
0xffff8bd30628   200  add x4, x1, #0x1f (31)
0xffff8bd3062c   204  ldr x7, [x4, w5, sxtw #3]
0xffff8bd30630   208  ldur x7, [x7, #7]
0xffff8bd30634   212  movz x4, #0x0
0xffff8bd30638   216  cmp x7, x4
0xffff8bd3063c   220  b.eq #+0x50 (addr 0xffff8bd3068c)
0xffff8bd30640   224  add x4, x6, #0x5f (95)
0xffff8bd30644   228  stur x4, [x3, #55]
0xffff8bd30648   232  stur x7, [x3, #47]
0xffff8bd3064c   236  movz x16, #0x557
0xffff8bd30650   240  ldr x4, [x0, x16]
0xffff8bd30654   244  stur x4, [x3, #63]
0xffff8bd30658   248  mov x4, x3
0xffff8bd3065c   252  movz x16, #0x557
0xffff8bd30660   256  str x4, [x0, x16]
0xffff8bd30664   260  add x6, x0, #0x557 (1367)
0xffff8bd30668   264  and x4, x0, #0xfffffffffff00000
0xffff8bd3066c   268  ldr x4, [x4, #8]
0xffff8bd30670   272  tbz w4, #2, #+0x18 (addr 0xffff8bd30688)
0xffff8bd30674   276  sub csp, jssp, #0x8 (8)
0xffff8bd30678   280  str lr, [jssp, #-8]!
0xffff8bd3067c   284  ldr x16, pc+324 (addr 0x0000ffff8bd307c0)    ;; code: STUB, RecordWriteStub, minor: 71808
0xffff8bd30680   288  blr x16
0xffff8bd30684   292  ldr lr, [jssp], #8
0xffff8bd30688   296  b #+0x8 (addr 0xffff8bd30690)
0xffff8bd3068c   300  b #+0x184 (addr 0xffff8bd30810)
0xffff8bd30690   304  cmp w5, #0x1 (1)
0xffff8bd30694   308  b.ge #+0x94 (addr 0xffff8bd30728)
0xffff8bd30698   312  ldur x1, [x1, #15]
0xffff8bd3069c   316  ldur x1, [x1, #7]
0xffff8bd306a0   320  movz x4, #0x0
0xffff8bd306a4   324  cmp x1, x4
0xffff8bd306a8   328  b.eq #+0x54 (addr 0xffff8bd306fc)
0xffff8bd306ac   332  add x1, x1, #0x5f (95)
0xffff8bd306b0   336  stur x1, [x3, #55]
0xffff8bd306b4   340  ldr x1, pc+276 (addr 0x0000ffff8bd307c8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd306b8   344  stur x1, [x3, #47]
0xffff8bd306bc   348  movz x16, #0x557
0xffff8bd306c0   352  ldr x1, [x0, x16]
0xffff8bd306c4   356  stur x1, [x3, #63]
0xffff8bd306c8   360  mov x1, x3
0xffff8bd306cc   364  movz x16, #0x557
0xffff8bd306d0   368  str x1, [x0, x16]
0xffff8bd306d4   372  add x2, x0, #0x557 (1367)
0xffff8bd306d8   376  and x1, x0, #0xfffffffffff00000
0xffff8bd306dc   380  ldr x1, [x1, #8]
0xffff8bd306e0   384  tbz w1, #2, #+0x18 (addr 0xffff8bd306f8)
0xffff8bd306e4   388  sub csp, jssp, #0x8 (8)
0xffff8bd306e8   392  str lr, [jssp, #-8]!
0xffff8bd306ec   396  ldr x16, pc+228 (addr 0x0000ffff8bd307d0)    ;; code: STUB, RecordWriteStub, minor: 67616
0xffff8bd306f0   400  blr x16
0xffff8bd306f4   404  ldr lr, [jssp], #8
0xffff8bd306f8   408  b #+0x30 (addr 0xffff8bd30728)
0xffff8bd306fc   412  ldr x0, pc+220 (addr 0x0000ffff8bd307d8)    ;; object: 0x26c04241 <undefined>
0xffff8bd30700   416  stur x0, [x3, #63]
0xffff8bd30704   420  ldur x0, [x2, #15]
0xffff8bd30708   424  add x0, x0, #0x5f (95)
0xffff8bd3070c   428  stur x0, [x3, #55]
0xffff8bd30710   432  b #+0x18 (addr 0xffff8bd30728)
0xffff8bd30714   436  ldr x0, pc+204 (addr 0x0000ffff8bd307e0)    ;; object: 0x26c04241 <undefined>
0xffff8bd30718   440  stur x0, [x3, #63]
0xffff8bd3071c   444  ldur x0, [x2, #15]
0xffff8bd30720   448  add x0, x0, #0x5f (95)
0xffff8bd30724   452  stur x0, [x3, #55]
0xffff8bd30728   456  mov x0, x3
0xffff8bd3072c   460  ret
0xffff8bd30730   464  sub csp, jssp, #0x10 (16)
0xffff8bd30734   468  stp fp, lr, [jssp, #-16]!
0xffff8bd30738   472  movz fp, #0xa00000000
0xffff8bd3073c   476  sub csp, jssp, #0x8 (8)
0xffff8bd30740   480  str fp, [jssp, #-8]!
0xffff8bd30744   484  add fp, jssp, #0x8 (8)
0xffff8bd30748   488  movz x3, #0x0
0xffff8bd3074c   492  mov x16, lr
0xffff8bd30750   496  ldr x17, pc+152 (addr 0x0000ffff8bd307e8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd30754   500  blr x17
0xffff8bd30758   504  movz x0, #0x4800000000
0xffff8bd3075c   508  movz x10, #0x0
0xffff8bd30760   512  sub csp, jssp, #0x10 (16)
0xffff8bd30764   516  stp x10, x0, [jssp, #-16]!
0xffff8bd30768   520  movz x0, #0x2
0xffff8bd3076c   524  movz x1, #0x5b88
0xffff8bd30770   528  movk x1, #0xe2, lsl #16
0xffff8bd30774   532  ldr x16, pc+124 (addr 0x0000ffff8bd307f0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd30778   536  blr x16
0xffff8bd3077c   540  str x0, [jssp, #24]
0xffff8bd30780   544  ldr x16, pc+120 (addr 0x0000ffff8bd307f8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd30784   548  blr x16
0xffff8bd30788   552  ldr lr, [jssp, #16]
0xffff8bd3078c   556  ldp xzr, fp, [jssp], #24
0xffff8bd30790   560  b #-0x210 (addr 0xffff8bd30580)
0xffff8bd30794   564  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff8bd30798   568  d63f03e0       constant
0xffff8bd3079c   572  d503201f       constant
0xffff8bd307a0   576  26c04201       constant
0xffff8bd307a4   580  00000000       constant
0xffff8bd307a8   584  26c04201       constant
0xffff8bd307ac   588  00000000       constant
0xffff8bd307b0   592  26c04201       constant
0xffff8bd307b4   596  00000000       constant
0xffff8bd307b8   600  26c04519       constant
0xffff8bd307bc   604  00000000       constant
0xffff8bd307c0   608  8bd2d2c0       constant
0xffff8bd307c4   612  0000ffff       constant
0xffff8bd307c8   616  26c04201       constant
0xffff8bd307cc   620  00000000       constant
0xffff8bd307d0   624  8bd2daa0       constant
0xffff8bd307d4   628  0000ffff       constant
0xffff8bd307d8   632  26c04241       constant
0xffff8bd307dc   636  00000000       constant
0xffff8bd307e0   640  26c04241       constant
0xffff8bd307e4   644  00000000       constant
0xffff8bd307e8   648  8bd06820       constant
0xffff8bd307ec   652  0000ffff       constant
0xffff8bd307f0   656  8bd06260       constant
0xffff8bd307f4   660  0000ffff       constant
0xffff8bd307f8   664  8bd068e0       constant
0xffff8bd307fc   668  0000ffff       constant
0xffff8bd30800   672  movz x16, #0x0
0xffff8bd30804   676  sub csp, jssp, #0x10 (16)
0xffff8bd30808   680  stp fp, lr, [jssp, #-16]!
0xffff8bd3080c   684  bl #+0x14 (addr 0xffff8bd30820)
0xffff8bd30810   688  movz x16, #0x8
0xffff8bd30814   692  sub csp, jssp, #0x10 (16)
0xffff8bd30818   696  stp fp, lr, [jssp, #-16]!
0xffff8bd3081c   700  bl #+0x4 (addr 0xffff8bd30820)
0xffff8bd30820   704  movz x17, #0xa00000000
0xffff8bd30824   708  sub csp, jssp, #0x10 (16)
0xffff8bd30828   712  stp x17, cp, [jssp, #-16]!
0xffff8bd3082c   716  add fp, jssp, #0x10 (16)
0xffff8bd30830   720  ldr x17, pc+24 (addr 0x0000ffff8bd30848)    ;; lazy deoptimization bailout 0
0xffff8bd30834   724  add x17, x17, x16
0xffff8bd30838   728  br x17
0xffff8bd3083c   732  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd30840   736  d63f03e0       constant
0xffff8bd30844   740  d503201f       constant
0xffff8bd30848   744  8bb06000       constant
0xffff8bd3084c   748  0000ffff       constant


Safepoints (size = 21)
0xffff8bd3077c   540  000 | x2 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bd30590  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd30598  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd305a0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd305a8  embedded object  (0x26c04519 <the hole>)
0xffff8bd3067c  code target (STUB)  (0xffff8bd2d2c0)
0xffff8bd306b4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd306ec  code target (STUB)  (0xffff8bd2daa0)
0xffff8bd306fc  embedded object  (0x26c04241 <undefined>)
0xffff8bd30714  embedded object  (0x26c04241 <undefined>)
0xffff8bd30750  code target (STUB)  (0xffff8bd06820)
0xffff8bd30774  code target (STUB)  (0xffff8bd06260)
0xffff8bd30780  code target (STUB)  (0xffff8bd068e0)
0xffff8bd30794  constant pool (size 108)
0xffff8bd30830  runtime entry
0xffff8bd3083c  constant pool (size 20)


kind = LOAD_IC
major_key = LoadICTrampolineStub
ic_state = GENERIC
extra_ic_state = 1
name = LoadICTrampolineStub
compiler = unknown
Instructions (size = 440)
0xffff8bd308e0     0  ldur x3, [fp, #-16]
0xffff8bd308e4     4  ldur x3, [x3, #31]
0xffff8bd308e8     8  ldur x3, [x3, #87]
0xffff8bd308ec    12  add x4, x3, x0, asr #29
0xffff8bd308f0    16  ldur x4, [x4, #15]
0xffff8bd308f4    20  tbz w1, #0, #+0x170 (addr 0xffff8bd30a64)
0xffff8bd308f8    24  ldur x5, [x1, #-1]
0xffff8bd308fc    28  ldur x6, [x4, #7]
0xffff8bd30900    32  cmp x6, x5
0xffff8bd30904    36  b.ne #+0x14 (addr 0xffff8bd30918)
0xffff8bd30908    40  add x4, x3, x0, asr #29
0xffff8bd3090c    44  ldur x4, [x4, #23]
0xffff8bd30910    48  add x4, x4, #0x5f (95)
0xffff8bd30914    52  br x4
0xffff8bd30918    56  ldur x6, [x4, #-1]
0xffff8bd3091c    60  ldr x16, [x26, #224]
0xffff8bd30920    64  cmp x6, x16
0xffff8bd30924    68  b.ne #+0x5c (addr 0xffff8bd30980)
0xffff8bd30928    72  ldur x6, [x4, #15]
0xffff8bd3092c    76  ldur x6, [x6, #7]
0xffff8bd30930    80  cmp x5, x6
0xffff8bd30934    84  b.ne #+0x10 (addr 0xffff8bd30944)
0xffff8bd30938    88  ldur x4, [x4, #23]
0xffff8bd3093c    92  add x4, x4, #0x5f (95)
0xffff8bd30940    96  br x4
0xffff8bd30944   100  ldur x7, [x4, #7]
0xffff8bd30948   104  add x7, x4, x7, asr #29
0xffff8bd3094c   108  add x7, x7, #0xf (15)
0xffff8bd30950   112  add x4, x4, #0x1f (31)
0xffff8bd30954   116  ldr x6, [x4]
0xffff8bd30958   120  ldur x6, [x6, #7]
0xffff8bd3095c   124  cmp x5, x6
0xffff8bd30960   128  b.ne #+0x10 (addr 0xffff8bd30970)
0xffff8bd30964   132  ldr x4, [x4, #8]
0xffff8bd30968   136  add x4, x4, #0x5f (95)
0xffff8bd3096c   140  br x4
0xffff8bd30970   144  add x4, x4, #0x10 (16)
0xffff8bd30974   148  cmp x4, x7
0xffff8bd30978   152  b.lt #-0x24 (addr 0xffff8bd30954)
0xffff8bd3097c   156  b #+0xcc (addr 0xffff8bd30a48)
0xffff8bd30980   160  ldr x16, [x26, #2400]
0xffff8bd30984   164  cmp x4, x16
0xffff8bd30988   168  b.ne #+0xc0 (addr 0xffff8bd30a48)
0xffff8bd3098c   172  tbz w1, #0, #+0xbc (addr 0xffff8bd30a48)
0xffff8bd30990   176  ldur x4, [x2, #7]
0xffff8bd30994   180  ldur x5, [x1, #-1]
0xffff8bd30998   184  add x4, x4, x5
0xffff8bd3099c   188  movz x16, #0x5102
0xffff8bd309a0   192  eor x4, x4, x16
0xffff8bd309a4   196  ubfx x4, x4, #2, #11
0xffff8bd309a8   200  add x7, x4, x4, lsl #1
0xffff8bd309ac   204  ldr x5, pc+204 (addr 0x0000ffff8bd30a78)    ;; external reference (StubCache::primary_->key)
0xffff8bd309b0   208  add x5, x5, x7, lsl #3
0xffff8bd309b4   212  ldr x6, [x5]
0xffff8bd309b8   216  cmp x2, x6
0xffff8bd309bc   220  b.ne #+0x34 (addr 0xffff8bd309f0)
0xffff8bd309c0   224  ldr x6, [x5, #16]
0xffff8bd309c4   228  ldur x7, [x1, #-1]
0xffff8bd309c8   232  cmp x6, x7
0xffff8bd309cc   236  b.ne #+0x24 (addr 0xffff8bd309f0)
0xffff8bd309d0   240  ldr x5, [x5, #8]
0xffff8bd309d4   244  ldur w6, [x5, #63]
0xffff8bd309d8   248  and w6, w6, #0xffffffc7
0xffff8bd309dc   252  movz w16, #0x5102
0xffff8bd309e0   256  cmp w6, w16
0xffff8bd309e4   260  b.ne #+0xc (addr 0xffff8bd309f0)
0xffff8bd309e8   264  add x5, x5, #0x5f (95)
0xffff8bd309ec   268  br x5
0xffff8bd309f0   272  sub x4, x4, x2, lsr #2
0xffff8bd309f4   276  movz x16, #0x1440
0xffff8bd309f8   280  add x4, x4, x16
0xffff8bd309fc   284  and x4, x4, #0x1ff
0xffff8bd30a00   288  add x7, x4, x4, lsl #1
0xffff8bd30a04   292  ldr x5, pc+124 (addr 0x0000ffff8bd30a80)    ;; external reference (StubCache::secondary_->key)
0xffff8bd30a08   296  add x5, x5, x7, lsl #3
0xffff8bd30a0c   300  ldr x6, [x5]
0xffff8bd30a10   304  cmp x2, x6
0xffff8bd30a14   308  b.ne #+0x34 (addr 0xffff8bd30a48)
0xffff8bd30a18   312  ldr x6, [x5, #16]
0xffff8bd30a1c   316  ldur x7, [x1, #-1]
0xffff8bd30a20   320  cmp x6, x7
0xffff8bd30a24   324  b.ne #+0x24 (addr 0xffff8bd30a48)
0xffff8bd30a28   328  ldr x5, [x5, #8]
0xffff8bd30a2c   332  ldur w6, [x5, #63]
0xffff8bd30a30   336  and w6, w6, #0xffffffc7
0xffff8bd30a34   340  movz w16, #0x5102
0xffff8bd30a38   344  cmp w6, w16
0xffff8bd30a3c   348  b.ne #+0xc (addr 0xffff8bd30a48)
0xffff8bd30a40   352  add x5, x5, #0x5f (95)
0xffff8bd30a44   356  br x5
0xffff8bd30a48   360  sub csp, jssp, #0x20 (32)
0xffff8bd30a4c   364  stp x3, x0, [jssp, #-32]!
0xffff8bd30a50   368  stp x2, x1, [jssp, #16]
0xffff8bd30a54   372  movz x0, #0x4
0xffff8bd30a58   376  ldr x1, pc+48 (addr 0x0000ffff8bd30a88)    ;; external reference (Runtime::LoadIC_Miss)
0xffff8bd30a5c   380  ldr x16, pc+52 (addr 0x0000ffff8bd30a90)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd30a60   384  br x16
0xffff8bd30a64   388  ldr x5, [x26, #120]
0xffff8bd30a68   392  b #-0x16c (addr 0xffff8bd308fc)
0xffff8bd30a6c   396  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff8bd30a70   400  d63f03e0       constant
0xffff8bd30a74   404  d503201f       constant
0xffff8bd30a78   408  2cba8950       constant
0xffff8bd30a7c   412  00000000       constant
0xffff8bd30a80   416  2cbb4950       constant
0xffff8bd30a84   420  00000000       constant
0xffff8bd30a88   424  00c86e20       constant
0xffff8bd30a8c   428  00000000       constant
0xffff8bd30a90   432  8bd06060       constant
0xffff8bd30a94   436  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd309ac  external reference (StubCache::primary_->key)  (0x2cba8950)
0xffff8bd30a04  external reference (StubCache::secondary_->key)  (0x2cbb4950)
0xffff8bd30a58  external reference (Runtime::LoadIC_Miss)  (0xc86e20)
0xffff8bd30a5c  code target (STUB)  (0xffff8bd06060)
0xffff8bd30a6c  constant pool (size 44)


kind = STUB
major_key = ArrayConstructorStub
name = ArrayConstructorStub_One
compiler = unknown
Instructions (size = 344)
0xffff8bd30b00     0  ldur cp, [x1, #39]
0xffff8bd30b04     4  cmp x3, x1
0xffff8bd30b08     8  b.ne #+0xc8 (addr 0xffff8bd30bd0)
0xffff8bd30b0c    12  ldr x16, [x26, #40]
0xffff8bd30b10    16  cmp x2, x16
0xffff8bd30b14    20  b.eq #+0xa4 (addr 0xffff8bd30bb8)
0xffff8bd30b18    24  ldursw x3, [x2, #11]
0xffff8bd30b1c    28  and x3, x3, #0x7fff
0xffff8bd30b20    32  tbnz w3, #0, #+0x20 (addr 0xffff8bd30b40)
0xffff8bd30b24    36  ldr x10, [jssp]
0xffff8bd30b28    40  cbz x10, #+0x18 (addr 0xffff8bd30b40)
0xffff8bd30b2c    44  orr x3, x3, #0x1
0xffff8bd30b30    48  ldur x11, [x2, #7]
0xffff8bd30b34    52  movz x16, #0x100000000
0xffff8bd30b38    56  add x11, x11, x16
0xffff8bd30b3c    60  stur x11, [x2, #7]
0xffff8bd30b40    64  cbnz x3, #+0xc (addr 0xffff8bd30b4c)
0xffff8bd30b44    68  ldr x16, pc+180 (addr 0x0000ffff8bd30bf8)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 0
0xffff8bd30b48    72  br x16
0xffff8bd30b4c    76  cmp x3, #0x1 (1)
0xffff8bd30b50    80  b.ne #+0xc (addr 0xffff8bd30b5c)
0xffff8bd30b54    84  ldr x16, pc+172 (addr 0x0000ffff8bd30c00)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 1
0xffff8bd30b58    88  br x16
0xffff8bd30b5c    92  cmp x3, #0x4 (4)
0xffff8bd30b60    96  b.ne #+0xc (addr 0xffff8bd30b6c)
0xffff8bd30b64   100  ldr x16, pc+164 (addr 0x0000ffff8bd30c08)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 4
0xffff8bd30b68   104  br x16
0xffff8bd30b6c   108  cmp x3, #0x5 (5)
0xffff8bd30b70   112  b.ne #+0xc (addr 0xffff8bd30b7c)
0xffff8bd30b74   116  ldr x16, pc+156 (addr 0x0000ffff8bd30c10)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 5
0xffff8bd30b78   120  br x16
0xffff8bd30b7c   124  cmp x3, #0x2 (2)
0xffff8bd30b80   128  b.ne #+0xc (addr 0xffff8bd30b8c)
0xffff8bd30b84   132  ldr x16, pc+148 (addr 0x0000ffff8bd30c18)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 2
0xffff8bd30b88   136  br x16
0xffff8bd30b8c   140  cmp x3, #0x3 (3)
0xffff8bd30b90   144  b.ne #+0xc (addr 0xffff8bd30b9c)
0xffff8bd30b94   148  ldr x16, pc+140 (addr 0x0000ffff8bd30c20)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 3
0xffff8bd30b98   152  br x16
0xffff8bd30b9c   156  movz x0, #0x9f00000000
0xffff8bd30ba0   160  sub csp, jssp, #0x8 (8)
0xffff8bd30ba4   164  str x0, [jssp, #-8]!
0xffff8bd30ba8   168  movz x0, #0x1
0xffff8bd30bac   172  ldr x1, pc+124 (addr 0x0000ffff8bd30c28)    ;; external reference (Runtime::Abort)
0xffff8bd30bb0   176  ldr x16, pc+128 (addr 0x0000ffff8bd30c30)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd30bb4   180  blr x16
0xffff8bd30bb8   184  ldr x10, [jssp]
0xffff8bd30bbc   188  cbz x10, #+0xc (addr 0xffff8bd30bc8)
0xffff8bd30bc0   192  ldr x16, pc+120 (addr 0x0000ffff8bd30c38)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 257
0xffff8bd30bc4   196  br x16
0xffff8bd30bc8   200  ldr x16, pc+120 (addr 0x0000ffff8bd30c40)    ;; code: STUB, ArraySingleArgumentConstructorStub, minor: 256
0xffff8bd30bcc   204  br x16
0xffff8bd30bd0   208  str x1, [jssp, #8]
0xffff8bd30bd4   212  movz x0, #0x4
0xffff8bd30bd8   216  sub csp, jssp, #0x10 (16)
0xffff8bd30bdc   220  stp x2, x3, [jssp, #-16]!
0xffff8bd30be0   224  ldr x1, pc+104 (addr 0x0000ffff8bd30c48)    ;; external reference (Runtime::NewArray)
0xffff8bd30be4   228  ldr x16, pc+108 (addr 0x0000ffff8bd30c50)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd30be8   232  br x16
0xffff8bd30bec   236  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff8bd30bf0   240  d63f03e0       constant
0xffff8bd30bf4   244  d503201f       constant
0xffff8bd30bf8   248  8bd082a0       constant
0xffff8bd30bfc   252  0000ffff       constant
0xffff8bd30c00   256  8bd08840       constant
0xffff8bd30c04   260  0000ffff       constant
0xffff8bd30c08   264  8bd08e00       constant
0xffff8bd30c0c   268  0000ffff       constant
0xffff8bd30c10   272  8bd09080       constant
0xffff8bd30c14   276  0000ffff       constant
0xffff8bd30c18   280  8bd09300       constant
0xffff8bd30c1c   284  0000ffff       constant
0xffff8bd30c20   288  8bd09580       constant
0xffff8bd30c24   292  0000ffff       constant
0xffff8bd30c28   296  00eda820       constant
0xffff8bd30c2c   300  00000000       constant
0xffff8bd30c30   304  8bd06060       constant
0xffff8bd30c34   308  0000ffff       constant
0xffff8bd30c38   312  8bd08b80       constant
0xffff8bd30c3c   316  0000ffff       constant
0xffff8bd30c40   320  8bd085e0       constant
0xffff8bd30c44   324  0000ffff       constant
0xffff8bd30c48   328  00de2850       constant
0xffff8bd30c4c   332  00000000       constant
0xffff8bd30c50   336  8bd06060       constant
0xffff8bd30c54   340  0000ffff       constant


RelocInfo (size = 22)
0xffff8bd30b44  code target (STUB)  (0xffff8bd082a0)
0xffff8bd30b54  code target (STUB)  (0xffff8bd08840)
0xffff8bd30b64  code target (STUB)  (0xffff8bd08e00)
0xffff8bd30b74  code target (STUB)  (0xffff8bd09080)
0xffff8bd30b84  code target (STUB)  (0xffff8bd09300)
0xffff8bd30b94  code target (STUB)  (0xffff8bd09580)
0xffff8bd30bac  external reference (Runtime::Abort)  (0xeda820)
0xffff8bd30bb0  code target (STUB)  (0xffff8bd06060)
0xffff8bd30bc0  code target (STUB)  (0xffff8bd08b80)
0xffff8bd30bc8  code target (STUB)  (0xffff8bd085e0)
0xffff8bd30be0  external reference (Runtime::NewArray)  (0xde2850)
0xffff8bd30be4  code target (STUB)  (0xffff8bd06060)
0xffff8bd30bec  constant pool (size 108)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327681
name = CallICStub(args(1), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff8bd30cc0     0  add x4, x2, x3, asr #29
0xffff8bd30cc4     4  ldur x4, [x4, #15]
0xffff8bd30cc8     8  ldur x5, [x4, #7]
0xffff8bd30ccc    12  cmp x5, x1
0xffff8bd30cd0    16  b.ne #+0x2c (addr 0xffff8bd30cfc)
0xffff8bd30cd4    20  tbz w1, #0, #+0x28 (addr 0xffff8bd30cfc)
0xffff8bd30cd8    24  add x2, x2, x3, asr #29
0xffff8bd30cdc    28  add x2, x2, #0x18 (24)
0xffff8bd30ce0    32  ldur x3, [x2, #-1]
0xffff8bd30ce4    36  movz x16, #0x200000000
0xffff8bd30ce8    40  add x3, x3, x16
0xffff8bd30cec    44  stur x3, [x2, #-1]
0xffff8bd30cf0    48  movz x0, #0x1
0xffff8bd30cf4    52  ldr x16, pc+372 (addr 0x0000ffff8bd30e68)    ;; code: BUILTIN
0xffff8bd30cf8    56  br x16
0xffff8bd30cfc    60  ldr x16, [x26, #2400]
0xffff8bd30d00    64  cmp x4, x16
0xffff8bd30d04    68  b.eq #+0x78 (addr 0xffff8bd30d7c)
0xffff8bd30d08    72  ldur x5, [x4, #-1]
0xffff8bd30d0c    76  ldr x16, [x26, #2736]
0xffff8bd30d10    80  cmp x5, x16
0xffff8bd30d14    84  b.ne #+0x40 (addr 0xffff8bd30d54)
0xffff8bd30d18    88  ldur x5, [cp, #39]
0xffff8bd30d1c    92  ldur x5, [x5, #95]
0xffff8bd30d20    96  cmp x1, x5
0xffff8bd30d24   100  b.ne #+0xec (addr 0xffff8bd30e10)
0xffff8bd30d28   104  movz x0, #0x1
0xffff8bd30d2c   108  add x2, x2, x3, asr #29
0xffff8bd30d30   112  add x2, x2, #0x18 (24)
0xffff8bd30d34   116  ldur x3, [x2, #-1]
0xffff8bd30d38   120  movz x16, #0x200000000
0xffff8bd30d3c   124  add x3, x3, x16
0xffff8bd30d40   128  stur x3, [x2, #-1]
0xffff8bd30d44   132  mov x2, x4
0xffff8bd30d48   136  mov x3, x1
0xffff8bd30d4c   140  ldr x16, pc+292 (addr 0x0000ffff8bd30e70)    ;; code: STUB, ArrayConstructorStub, minor: 2
0xffff8bd30d50   144  br x16
0xffff8bd30d54   148  ldr x16, [x26, #2568]
0xffff8bd30d58   152  cmp x4, x16
0xffff8bd30d5c   156  b.eq #+0xb4 (addr 0xffff8bd30e10)
0xffff8bd30d60   160  ldur x5, [x4, #-1]
0xffff8bd30d64   164  ldrb w5, [x5, #11]
0xffff8bd30d68   168  cmp x5, #0xc9 (201)
0xffff8bd30d6c   172  b.ne #+0xa4 (addr 0xffff8bd30e10)
0xffff8bd30d70   176  add x4, x2, x3, asr #29
0xffff8bd30d74   180  ldr x5, [x26, #2400]
0xffff8bd30d78   184  stur x5, [x4, #15]
0xffff8bd30d7c   188  movz x0, #0x1
0xffff8bd30d80   192  ldr x16, pc+248 (addr 0x0000ffff8bd30e78)    ;; code: BUILTIN
0xffff8bd30d84   196  br x16
0xffff8bd30d88   200  tbz w1, #0, #+0x88 (addr 0xffff8bd30e10)
0xffff8bd30d8c   204  ldur x5, [x1, #-1]
0xffff8bd30d90   208  ldrb w5, [x5, #11]
0xffff8bd30d94   212  cmp x5, #0xc9 (201)
0xffff8bd30d98   216  b.ne #+0x78 (addr 0xffff8bd30e10)
0xffff8bd30d9c   220  ldur x5, [cp, #39]
0xffff8bd30da0   224  ldur x5, [x5, #95]
0xffff8bd30da4   228  cmp x1, x5
0xffff8bd30da8   232  b.eq #+0x68 (addr 0xffff8bd30e10)
0xffff8bd30dac   236  ldur x4, [x1, #39]
0xffff8bd30db0   240  ldur x4, [x4, #39]
0xffff8bd30db4   244  ldur x5, [cp, #39]
0xffff8bd30db8   248  cmp x4, x5
0xffff8bd30dbc   252  b.ne #+0x54 (addr 0xffff8bd30e10)
0xffff8bd30dc0   256  movz x5, #0x200000000
0xffff8bd30dc4   260  adds x4, x2, x3, asr #29
0xffff8bd30dc8   264  stur x5, [x4, #23]
0xffff8bd30dcc   268  movz x16, #0xc00000000
0xffff8bd30dd0   272  sub csp, jssp, #0x10 (16)
0xffff8bd30dd4   276  stp fp, lr, [jssp, #-16]!
0xffff8bd30dd8   280  sub csp, jssp, #0x10 (16)
0xffff8bd30ddc   284  str x16, [jssp, #-8]!
0xffff8bd30de0   288  ldr x17, pc+160 (addr 0x0000ffff8bd30e80)    ;; object: 0xffff8bd30c61 <Code: CALL_IC>
0xffff8bd30de4   292  sub csp, jssp, #0x10 (16)
0xffff8bd30de8   296  str x17, [jssp, #-8]!
0xffff8bd30dec   300  add fp, jssp, #0x10 (16)
0xffff8bd30df0   304  sub csp, jssp, #0x8 (8)
0xffff8bd30df4   308  str x1, [jssp, #-8]!
0xffff8bd30df8   312  ldr x16, pc+144 (addr 0x0000ffff8bd30e88)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bd30dfc   316  blr x16
0xffff8bd30e00   320  ldr x1, [jssp], #8
0xffff8bd30e04   324  mov jssp, fp
0xffff8bd30e08   328  ldp fp, lr, [jssp], #16
0xffff8bd30e0c   332  b #-0x11c (addr 0xffff8bd30cf0)
0xffff8bd30e10   336  movz x16, #0xc00000000
0xffff8bd30e14   340  sub csp, jssp, #0x10 (16)
0xffff8bd30e18   344  stp fp, lr, [jssp, #-16]!
0xffff8bd30e1c   348  sub csp, jssp, #0x10 (16)
0xffff8bd30e20   352  str x16, [jssp, #-8]!
0xffff8bd30e24   356  ldr x17, pc+108 (addr 0x0000ffff8bd30e90)    ;; object: 0xffff8bd30c61 <Code: CALL_IC>
0xffff8bd30e28   360  sub csp, jssp, #0x10 (16)
0xffff8bd30e2c   364  str x17, [jssp, #-8]!
0xffff8bd30e30   368  add fp, jssp, #0x10 (16)
0xffff8bd30e34   372  sub csp, jssp, #0x18 (24)
0xffff8bd30e38   376  stp x3, x2, [jssp, #-24]!
0xffff8bd30e3c   380  str x1, [jssp, #16]
0xffff8bd30e40   384  movz x0, #0x3
0xffff8bd30e44   388  ldr x1, pc+84 (addr 0x0000ffff8bd30e98)    ;; external reference (Runtime::CallIC_Miss)
0xffff8bd30e48   392  ldr x16, pc+88 (addr 0x0000ffff8bd30ea0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd30e4c   396  blr x16
0xffff8bd30e50   400  mov x1, x0
0xffff8bd30e54   404  mov jssp, fp
0xffff8bd30e58   408  ldp fp, lr, [jssp], #16
0xffff8bd30e5c   412  b #-0xe0 (addr 0xffff8bd30d7c)
0xffff8bd30e60   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bd30e64   420  d63f03e0       constant
0xffff8bd30e68   424  8bd1e600       constant
0xffff8bd30e6c   428  0000ffff       constant
0xffff8bd30e70   432  8bd30b00       constant
0xffff8bd30e74   436  0000ffff       constant
0xffff8bd30e78   440  8bd1f6c0       constant
0xffff8bd30e7c   444  0000ffff       constant
0xffff8bd30e80   448  8bd30c61       constant
0xffff8bd30e84   452  0000ffff       constant
0xffff8bd30e88   456  8bd0ddc0       constant
0xffff8bd30e8c   460  0000ffff       constant
0xffff8bd30e90   464  8bd30c61       constant
0xffff8bd30e94   468  0000ffff       constant
0xffff8bd30e98   472  00c86928       constant
0xffff8bd30e9c   476  00000000       constant
0xffff8bd30ea0   480  8bd06060       constant
0xffff8bd30ea4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd30cf4  code target (BUILTIN)  (0xffff8bd1e600)
0xffff8bd30d4c  code target (STUB)  (0xffff8bd30b00)
0xffff8bd30d80  code target (BUILTIN)  (0xffff8bd1f6c0)
0xffff8bd30de0  embedded object  (0xffff8bd30c61 <Code: CALL_IC>)
0xffff8bd30df8  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bd30e24  embedded object  (0xffff8bd30c61 <Code: CALL_IC>)
0xffff8bd30e44  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8bd30e48  code target (STUB)  (0xffff8bd06060)
0xffff8bd30e60  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327681
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8bd30f20     0  ldur x2, [fp, #-16]
0xffff8bd30f24     4  ldur x2, [x2, #31]
0xffff8bd30f28     8  ldur x2, [x2, #87]
0xffff8bd30f2c    12  ldr x16, pc+20 (addr 0x0000ffff8bd30f40)    ;; code: CALL_IC, GENERIC
0xffff8bd30f30    16  br x16
0xffff8bd30f34    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd30f38    24  d63f03e0       constant
0xffff8bd30f3c    28  d503201f       constant
0xffff8bd30f40    32  8bd30cc0       constant
0xffff8bd30f44    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd30f2c  code target (CALL_IC)  (0xffff8bd30cc0)
0xffff8bd30f34  constant pool (size 20)


kind = STUB
major_key = CallConstructStub
name = CallConstructStub
compiler = unknown
Instructions (size = 424)
0xffff8bd30fc0     0  tbz w1, #0, #+0x16c (addr 0xffff8bd3112c)
0xffff8bd30fc4     4  ldur x10, [x1, #-1]
0xffff8bd30fc8     8  ldrb w10, [x10, #11]
0xffff8bd30fcc    12  cmp x10, #0xc9 (201)
0xffff8bd30fd0    16  b.ne #+0x15c (addr 0xffff8bd3112c)
0xffff8bd30fd4    20  add x5, x2, x3, asr #29
0xffff8bd30fd8    24  ldur x5, [x5, #15]
0xffff8bd30fdc    28  ldur x12, [x5, #7]
0xffff8bd30fe0    32  cmp x1, x12
0xffff8bd30fe4    36  b.eq #+0x118 (addr 0xffff8bd310fc)
0xffff8bd30fe8    40  ldr x16, [x26, #2400]
0xffff8bd30fec    44  cmp x5, x16
0xffff8bd30ff0    48  b.eq #+0x10c (addr 0xffff8bd310fc)
0xffff8bd30ff4    52  ldur x11, [x5, #-1]
0xffff8bd30ff8    56  ldr x16, [x26, #264]
0xffff8bd30ffc    60  cmp x11, x16
0xffff8bd31000    64  b.ne #+0xc (addr 0xffff8bd3100c)
0xffff8bd31004    68  tbz w12, #0, #+0x44 (addr 0xffff8bd31048)
0xffff8bd31008    72  b #+0x30 (addr 0xffff8bd31038)
0xffff8bd3100c    76  ldr x16, [x26, #2736]
0xffff8bd31010    80  cmp x11, x16
0xffff8bd31014    84  b.ne #+0x18 (addr 0xffff8bd3102c)
0xffff8bd31018    88  ldur x5, [cp, #39]
0xffff8bd3101c    92  ldur x5, [x5, #95]
0xffff8bd31020    96  cmp x1, x5
0xffff8bd31024   100  b.ne #+0x14 (addr 0xffff8bd31038)
0xffff8bd31028   104  b #+0xd4 (addr 0xffff8bd310fc)
0xffff8bd3102c   108  ldr x16, [x26, #2568]
0xffff8bd31030   112  cmp x5, x16
0xffff8bd31034   116  b.eq #+0x14 (addr 0xffff8bd31048)
0xffff8bd31038   120  add x5, x2, x3, asr #29
0xffff8bd3103c   124  ldr x11, [x26, #2400]
0xffff8bd31040   128  stur x11, [x5, #15]
0xffff8bd31044   132  b #+0xb8 (addr 0xffff8bd310fc)
0xffff8bd31048   136  ldur x5, [cp, #39]
0xffff8bd3104c   140  ldur x5, [x5, #95]
0xffff8bd31050   144  cmp x1, x5
0xffff8bd31054   148  b.ne #+0x58 (addr 0xffff8bd310ac)
0xffff8bd31058   152  movz x16, #0xc00000000
0xffff8bd3105c   156  sub csp, jssp, #0x10 (16)
0xffff8bd31060   160  stp fp, lr, [jssp, #-16]!
0xffff8bd31064   164  sub csp, jssp, #0x10 (16)
0xffff8bd31068   168  str x16, [jssp, #-8]!
0xffff8bd3106c   172  ldr x17, pc+212 (addr 0x0000ffff8bd31140)    ;; object: 0xffff8bd30f61 <Code: STUB>
0xffff8bd31070   176  sub csp, jssp, #0x10 (16)
0xffff8bd31074   180  str x17, [jssp, #-8]!
0xffff8bd31078   184  add fp, jssp, #0x10 (16)
0xffff8bd3107c   188  lsl x0, x0, #32
0xffff8bd31080   192  sub csp, jssp, #0x20 (32)
0xffff8bd31084   196  stp x3, x2, [jssp, #-32]!
0xffff8bd31088   200  stp x1, x0, [jssp, #16]
0xffff8bd3108c   204  ldr x16, pc+188 (addr 0x0000ffff8bd31148)    ;; code: STUB, CreateAllocationSiteStub, minor: 0
0xffff8bd31090   208  blr x16
0xffff8bd31094   212  ldp x1, x0, [jssp, #16]
0xffff8bd31098   216  ldp x3, x2, [jssp], #32
0xffff8bd3109c   220  asr x0, x0, #32
0xffff8bd310a0   224  mov jssp, fp
0xffff8bd310a4   228  ldp fp, lr, [jssp], #16
0xffff8bd310a8   232  b #+0x54 (addr 0xffff8bd310fc)
0xffff8bd310ac   236  movz x16, #0xc00000000
0xffff8bd310b0   240  sub csp, jssp, #0x10 (16)
0xffff8bd310b4   244  stp fp, lr, [jssp, #-16]!
0xffff8bd310b8   248  sub csp, jssp, #0x10 (16)
0xffff8bd310bc   252  str x16, [jssp, #-8]!
0xffff8bd310c0   256  ldr x17, pc+144 (addr 0x0000ffff8bd31150)    ;; object: 0xffff8bd30f61 <Code: STUB>
0xffff8bd310c4   260  sub csp, jssp, #0x10 (16)
0xffff8bd310c8   264  str x17, [jssp, #-8]!
0xffff8bd310cc   268  add fp, jssp, #0x10 (16)
0xffff8bd310d0   272  lsl x0, x0, #32
0xffff8bd310d4   276  sub csp, jssp, #0x20 (32)
0xffff8bd310d8   280  stp x3, x2, [jssp, #-32]!
0xffff8bd310dc   284  stp x1, x0, [jssp, #16]
0xffff8bd310e0   288  ldr x16, pc+120 (addr 0x0000ffff8bd31158)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bd310e4   292  blr x16
0xffff8bd310e8   296  ldp x1, x0, [jssp, #16]
0xffff8bd310ec   300  ldp x3, x2, [jssp], #32
0xffff8bd310f0   304  asr x0, x0, #32
0xffff8bd310f4   308  mov jssp, fp
0xffff8bd310f8   312  ldp fp, lr, [jssp], #16
0xffff8bd310fc   316  add x5, x2, x3, asr #29
0xffff8bd31100   320  ldur x2, [x5, #15]
0xffff8bd31104   324  ldur x5, [x2, #-1]
0xffff8bd31108   328  ldr x16, [x26, #2736]
0xffff8bd3110c   332  cmp x5, x16
0xffff8bd31110   336  b.eq #+0x8 (addr 0xffff8bd31118)
0xffff8bd31114   340  ldr x2, [x26, #40]
0xffff8bd31118   344  mov x3, x1
0xffff8bd3111c   348  ldur x4, [x1, #31]
0xffff8bd31120   352  ldur x4, [x4, #39]
0xffff8bd31124   356  add x4, x4, #0x5f (95)
0xffff8bd31128   360  br x4
0xffff8bd3112c   364  mov x3, x1
0xffff8bd31130   368  ldr x16, pc+48 (addr 0x0000ffff8bd31160)    ;; code: BUILTIN
0xffff8bd31134   372  br x16
0xffff8bd31138   376  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff8bd3113c   380  d63f03e0       constant
0xffff8bd31140   384  8bd30f61       constant
0xffff8bd31144   388  0000ffff       constant
0xffff8bd31148   392  8bd0cbc0       constant
0xffff8bd3114c   396  0000ffff       constant
0xffff8bd31150   400  8bd30f61       constant
0xffff8bd31154   404  0000ffff       constant
0xffff8bd31158   408  8bd0ddc0       constant
0xffff8bd3115c   412  0000ffff       constant
0xffff8bd31160   416  8bd20180       constant
0xffff8bd31164   420  0000ffff       constant


RelocInfo (size = 15)
0xffff8bd3106c  embedded object  (0xffff8bd30f61 <Code: STUB>)
0xffff8bd3108c  code target (STUB)  (0xffff8bd0cbc0)
0xffff8bd310c0  embedded object  (0xffff8bd30f61 <Code: STUB>)
0xffff8bd310e0  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bd31130  code target (BUILTIN)  (0xffff8bd20180)
0xffff8bd31138  constant pool (size 48)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393217
name = CallICStub(args(1), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff8bd31c60     0  add x4, x2, x3, asr #29
0xffff8bd31c64     4  ldur x4, [x4, #15]
0xffff8bd31c68     8  ldur x5, [x4, #7]
0xffff8bd31c6c    12  cmp x5, x1
0xffff8bd31c70    16  b.ne #+0x2c (addr 0xffff8bd31c9c)
0xffff8bd31c74    20  tbz w1, #0, #+0x28 (addr 0xffff8bd31c9c)
0xffff8bd31c78    24  add x2, x2, x3, asr #29
0xffff8bd31c7c    28  add x2, x2, #0x18 (24)
0xffff8bd31c80    32  ldur x3, [x2, #-1]
0xffff8bd31c84    36  movz x16, #0x200000000
0xffff8bd31c88    40  add x3, x3, x16
0xffff8bd31c8c    44  stur x3, [x2, #-1]
0xffff8bd31c90    48  movz x0, #0x1
0xffff8bd31c94    52  ldr x16, pc+372 (addr 0x0000ffff8bd31e08)    ;; code: BUILTIN
0xffff8bd31c98    56  br x16
0xffff8bd31c9c    60  ldr x16, [x26, #2400]
0xffff8bd31ca0    64  cmp x4, x16
0xffff8bd31ca4    68  b.eq #+0x78 (addr 0xffff8bd31d1c)
0xffff8bd31ca8    72  ldur x5, [x4, #-1]
0xffff8bd31cac    76  ldr x16, [x26, #2736]
0xffff8bd31cb0    80  cmp x5, x16
0xffff8bd31cb4    84  b.ne #+0x40 (addr 0xffff8bd31cf4)
0xffff8bd31cb8    88  ldur x5, [cp, #39]
0xffff8bd31cbc    92  ldur x5, [x5, #95]
0xffff8bd31cc0    96  cmp x1, x5
0xffff8bd31cc4   100  b.ne #+0xec (addr 0xffff8bd31db0)
0xffff8bd31cc8   104  movz x0, #0x1
0xffff8bd31ccc   108  add x2, x2, x3, asr #29
0xffff8bd31cd0   112  add x2, x2, #0x18 (24)
0xffff8bd31cd4   116  ldur x3, [x2, #-1]
0xffff8bd31cd8   120  movz x16, #0x200000000
0xffff8bd31cdc   124  add x3, x3, x16
0xffff8bd31ce0   128  stur x3, [x2, #-1]
0xffff8bd31ce4   132  mov x2, x4
0xffff8bd31ce8   136  mov x3, x1
0xffff8bd31cec   140  ldr x16, pc+292 (addr 0x0000ffff8bd31e10)    ;; code: STUB, ArrayConstructorStub, minor: 2
0xffff8bd31cf0   144  br x16
0xffff8bd31cf4   148  ldr x16, [x26, #2568]
0xffff8bd31cf8   152  cmp x4, x16
0xffff8bd31cfc   156  b.eq #+0xb4 (addr 0xffff8bd31db0)
0xffff8bd31d00   160  ldur x5, [x4, #-1]
0xffff8bd31d04   164  ldrb w5, [x5, #11]
0xffff8bd31d08   168  cmp x5, #0xc9 (201)
0xffff8bd31d0c   172  b.ne #+0xa4 (addr 0xffff8bd31db0)
0xffff8bd31d10   176  add x4, x2, x3, asr #29
0xffff8bd31d14   180  ldr x5, [x26, #2400]
0xffff8bd31d18   184  stur x5, [x4, #15]
0xffff8bd31d1c   188  movz x0, #0x1
0xffff8bd31d20   192  ldr x16, pc+248 (addr 0x0000ffff8bd31e18)    ;; code: BUILTIN
0xffff8bd31d24   196  br x16
0xffff8bd31d28   200  tbz w1, #0, #+0x88 (addr 0xffff8bd31db0)
0xffff8bd31d2c   204  ldur x5, [x1, #-1]
0xffff8bd31d30   208  ldrb w5, [x5, #11]
0xffff8bd31d34   212  cmp x5, #0xc9 (201)
0xffff8bd31d38   216  b.ne #+0x78 (addr 0xffff8bd31db0)
0xffff8bd31d3c   220  ldur x5, [cp, #39]
0xffff8bd31d40   224  ldur x5, [x5, #95]
0xffff8bd31d44   228  cmp x1, x5
0xffff8bd31d48   232  b.eq #+0x68 (addr 0xffff8bd31db0)
0xffff8bd31d4c   236  ldur x4, [x1, #39]
0xffff8bd31d50   240  ldur x4, [x4, #39]
0xffff8bd31d54   244  ldur x5, [cp, #39]
0xffff8bd31d58   248  cmp x4, x5
0xffff8bd31d5c   252  b.ne #+0x54 (addr 0xffff8bd31db0)
0xffff8bd31d60   256  movz x5, #0x200000000
0xffff8bd31d64   260  adds x4, x2, x3, asr #29
0xffff8bd31d68   264  stur x5, [x4, #23]
0xffff8bd31d6c   268  movz x16, #0xc00000000
0xffff8bd31d70   272  sub csp, jssp, #0x10 (16)
0xffff8bd31d74   276  stp fp, lr, [jssp, #-16]!
0xffff8bd31d78   280  sub csp, jssp, #0x10 (16)
0xffff8bd31d7c   284  str x16, [jssp, #-8]!
0xffff8bd31d80   288  ldr x17, pc+160 (addr 0x0000ffff8bd31e20)    ;; object: 0xffff8bd31c01 <Code: CALL_IC>
0xffff8bd31d84   292  sub csp, jssp, #0x10 (16)
0xffff8bd31d88   296  str x17, [jssp, #-8]!
0xffff8bd31d8c   300  add fp, jssp, #0x10 (16)
0xffff8bd31d90   304  sub csp, jssp, #0x8 (8)
0xffff8bd31d94   308  str x1, [jssp, #-8]!
0xffff8bd31d98   312  ldr x16, pc+144 (addr 0x0000ffff8bd31e28)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bd31d9c   316  blr x16
0xffff8bd31da0   320  ldr x1, [jssp], #8
0xffff8bd31da4   324  mov jssp, fp
0xffff8bd31da8   328  ldp fp, lr, [jssp], #16
0xffff8bd31dac   332  b #-0x11c (addr 0xffff8bd31c90)
0xffff8bd31db0   336  movz x16, #0xc00000000
0xffff8bd31db4   340  sub csp, jssp, #0x10 (16)
0xffff8bd31db8   344  stp fp, lr, [jssp, #-16]!
0xffff8bd31dbc   348  sub csp, jssp, #0x10 (16)
0xffff8bd31dc0   352  str x16, [jssp, #-8]!
0xffff8bd31dc4   356  ldr x17, pc+108 (addr 0x0000ffff8bd31e30)    ;; object: 0xffff8bd31c01 <Code: CALL_IC>
0xffff8bd31dc8   360  sub csp, jssp, #0x10 (16)
0xffff8bd31dcc   364  str x17, [jssp, #-8]!
0xffff8bd31dd0   368  add fp, jssp, #0x10 (16)
0xffff8bd31dd4   372  sub csp, jssp, #0x18 (24)
0xffff8bd31dd8   376  stp x3, x2, [jssp, #-24]!
0xffff8bd31ddc   380  str x1, [jssp, #16]
0xffff8bd31de0   384  movz x0, #0x3
0xffff8bd31de4   388  ldr x1, pc+84 (addr 0x0000ffff8bd31e38)    ;; external reference (Runtime::CallIC_Miss)
0xffff8bd31de8   392  ldr x16, pc+88 (addr 0x0000ffff8bd31e40)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd31dec   396  blr x16
0xffff8bd31df0   400  mov x1, x0
0xffff8bd31df4   404  mov jssp, fp
0xffff8bd31df8   408  ldp fp, lr, [jssp], #16
0xffff8bd31dfc   412  b #-0xe0 (addr 0xffff8bd31d1c)
0xffff8bd31e00   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bd31e04   420  d63f03e0       constant
0xffff8bd31e08   424  8bd1e820       constant
0xffff8bd31e0c   428  0000ffff       constant
0xffff8bd31e10   432  8bd30b00       constant
0xffff8bd31e14   436  0000ffff       constant
0xffff8bd31e18   440  8bd1f820       constant
0xffff8bd31e1c   444  0000ffff       constant
0xffff8bd31e20   448  8bd31c01       constant
0xffff8bd31e24   452  0000ffff       constant
0xffff8bd31e28   456  8bd0ddc0       constant
0xffff8bd31e2c   460  0000ffff       constant
0xffff8bd31e30   464  8bd31c01       constant
0xffff8bd31e34   468  0000ffff       constant
0xffff8bd31e38   472  00c86928       constant
0xffff8bd31e3c   476  00000000       constant
0xffff8bd31e40   480  8bd06060       constant
0xffff8bd31e44   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd31c94  code target (BUILTIN)  (0xffff8bd1e820)
0xffff8bd31cec  code target (STUB)  (0xffff8bd30b00)
0xffff8bd31d20  code target (BUILTIN)  (0xffff8bd1f820)
0xffff8bd31d80  embedded object  (0xffff8bd31c01 <Code: CALL_IC>)
0xffff8bd31d98  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bd31dc4  embedded object  (0xffff8bd31c01 <Code: CALL_IC>)
0xffff8bd31de4  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8bd31de8  code target (STUB)  (0xffff8bd06060)
0xffff8bd31e00  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393217
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8bd31ec0     0  ldur x2, [fp, #-16]
0xffff8bd31ec4     4  ldur x2, [x2, #31]
0xffff8bd31ec8     8  ldur x2, [x2, #87]
0xffff8bd31ecc    12  ldr x16, pc+20 (addr 0x0000ffff8bd31ee0)    ;; code: CALL_IC, GENERIC
0xffff8bd31ed0    16  br x16
0xffff8bd31ed4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd31ed8    24  d63f03e0       constant
0xffff8bd31edc    28  d503201f       constant
0xffff8bd31ee0    32  8bd31c60       constant
0xffff8bd31ee4    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd31ecc  code target (CALL_IC)  (0xffff8bd31c60)
0xffff8bd31ed4  constant pool (size 20)


kind = STORE_IC
major_key = VectorStoreICTrampolineStub
ic_state = GENERIC
extra_ic_state = 0
name = VectorStoreICTrampolineStub
compiler = unknown
Instructions (size = 440)
0xffff8bd320c0     0  ldur x3, [fp, #-16]
0xffff8bd320c4     4  ldur x3, [x3, #31]
0xffff8bd320c8     8  ldur x3, [x3, #87]
0xffff8bd320cc    12  add x5, x3, x4, asr #29
0xffff8bd320d0    16  ldur x5, [x5, #15]
0xffff8bd320d4    20  tbz w1, #0, #+0x174 (addr 0xffff8bd32248)
0xffff8bd320d8    24  ldur x6, [x1, #-1]
0xffff8bd320dc    28  ldur x7, [x5, #7]
0xffff8bd320e0    32  cmp x7, x6
0xffff8bd320e4    36  b.ne #+0x14 (addr 0xffff8bd320f8)
0xffff8bd320e8    40  add x5, x3, x4, asr #29
0xffff8bd320ec    44  ldur x5, [x5, #23]
0xffff8bd320f0    48  add x5, x5, #0x5f (95)
0xffff8bd320f4    52  br x5
0xffff8bd320f8    56  ldur x7, [x5, #-1]
0xffff8bd320fc    60  ldr x16, [x26, #224]
0xffff8bd32100    64  cmp x7, x16
0xffff8bd32104    68  b.ne #+0x5c (addr 0xffff8bd32160)
0xffff8bd32108    72  ldur x7, [x5, #15]
0xffff8bd3210c    76  ldur x7, [x7, #7]
0xffff8bd32110    80  cmp x6, x7
0xffff8bd32114    84  b.ne #+0x10 (addr 0xffff8bd32124)
0xffff8bd32118    88  ldur x5, [x5, #23]
0xffff8bd3211c    92  add x5, x5, #0x5f (95)
0xffff8bd32120    96  br x5
0xffff8bd32124   100  ldur x8, [x5, #7]
0xffff8bd32128   104  add x8, x5, x8, asr #29
0xffff8bd3212c   108  add x8, x8, #0xf (15)
0xffff8bd32130   112  add x5, x5, #0x1f (31)
0xffff8bd32134   116  ldr x7, [x5]
0xffff8bd32138   120  ldur x7, [x7, #7]
0xffff8bd3213c   124  cmp x6, x7
0xffff8bd32140   128  b.ne #+0x10 (addr 0xffff8bd32150)
0xffff8bd32144   132  ldr x5, [x5, #8]
0xffff8bd32148   136  add x5, x5, #0x5f (95)
0xffff8bd3214c   140  br x5
0xffff8bd32150   144  add x5, x5, #0x10 (16)
0xffff8bd32154   148  cmp x5, x8
0xffff8bd32158   152  b.lt #-0x24 (addr 0xffff8bd32134)
0xffff8bd3215c   156  b #+0xcc (addr 0xffff8bd32228)
0xffff8bd32160   160  ldr x16, [x26, #2400]
0xffff8bd32164   164  cmp x5, x16
0xffff8bd32168   168  b.ne #+0xc0 (addr 0xffff8bd32228)
0xffff8bd3216c   172  tbz w1, #0, #+0xbc (addr 0xffff8bd32228)
0xffff8bd32170   176  ldur x5, [x2, #7]
0xffff8bd32174   180  ldur x6, [x1, #-1]
0xffff8bd32178   184  add x5, x5, x6
0xffff8bd3217c   188  movz x16, #0x6902
0xffff8bd32180   192  eor x5, x5, x16
0xffff8bd32184   196  ubfx x5, x5, #2, #11
0xffff8bd32188   200  add x8, x5, x5, lsl #1
0xffff8bd3218c   204  ldr x6, pc+204 (addr 0x0000ffff8bd32258)    ;; external reference (StubCache::primary_->key)
0xffff8bd32190   208  add x6, x6, x8, lsl #3
0xffff8bd32194   212  ldr x7, [x6]
0xffff8bd32198   216  cmp x2, x7
0xffff8bd3219c   220  b.ne #+0x34 (addr 0xffff8bd321d0)
0xffff8bd321a0   224  ldr x7, [x6, #16]
0xffff8bd321a4   228  ldur x8, [x1, #-1]
0xffff8bd321a8   232  cmp x7, x8
0xffff8bd321ac   236  b.ne #+0x24 (addr 0xffff8bd321d0)
0xffff8bd321b0   240  ldr x6, [x6, #8]
0xffff8bd321b4   244  ldur w7, [x6, #63]
0xffff8bd321b8   248  and w7, w7, #0xffffffc7
0xffff8bd321bc   252  movz w16, #0x6902
0xffff8bd321c0   256  cmp w7, w16
0xffff8bd321c4   260  b.ne #+0xc (addr 0xffff8bd321d0)
0xffff8bd321c8   264  add x6, x6, #0x5f (95)
0xffff8bd321cc   268  br x6
0xffff8bd321d0   272  sub x5, x5, x2, lsr #2
0xffff8bd321d4   276  movz x16, #0x1a40
0xffff8bd321d8   280  add x5, x5, x16
0xffff8bd321dc   284  and x5, x5, #0x1ff
0xffff8bd321e0   288  add x8, x5, x5, lsl #1
0xffff8bd321e4   292  ldr x6, pc+124 (addr 0x0000ffff8bd32260)    ;; external reference (StubCache::secondary_->key)
0xffff8bd321e8   296  add x6, x6, x8, lsl #3
0xffff8bd321ec   300  ldr x7, [x6]
0xffff8bd321f0   304  cmp x2, x7
0xffff8bd321f4   308  b.ne #+0x34 (addr 0xffff8bd32228)
0xffff8bd321f8   312  ldr x7, [x6, #16]
0xffff8bd321fc   316  ldur x8, [x1, #-1]
0xffff8bd32200   320  cmp x7, x8
0xffff8bd32204   324  b.ne #+0x24 (addr 0xffff8bd32228)
0xffff8bd32208   328  ldr x6, [x6, #8]
0xffff8bd3220c   332  ldur w7, [x6, #63]
0xffff8bd32210   336  and w7, w7, #0xffffffc7
0xffff8bd32214   340  movz w16, #0x6902
0xffff8bd32218   344  cmp w7, w16
0xffff8bd3221c   348  b.ne #+0xc (addr 0xffff8bd32228)
0xffff8bd32220   352  add x6, x6, #0x5f (95)
0xffff8bd32224   356  br x6
0xffff8bd32228   360  sub csp, jssp, #0x28 (40)
0xffff8bd3222c   364  stp x4, x0, [jssp, #-32]!
0xffff8bd32230   368  stp x2, x1, [jssp, #16]
0xffff8bd32234   372  str x3, [jssp, #-8]!
0xffff8bd32238   376  movz x0, #0x5
0xffff8bd3223c   380  ldr x1, pc+44 (addr 0x0000ffff8bd32268)    ;; external reference (Runtime::StoreIC_Miss)
0xffff8bd32240   384  ldr x16, pc+48 (addr 0x0000ffff8bd32270)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd32244   388  br x16
0xffff8bd32248   392  ldr x6, [x26, #120]
0xffff8bd3224c   396  b #-0x170 (addr 0xffff8bd320dc)
0xffff8bd32250   400  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bd32254   404  d63f03e0       constant
0xffff8bd32258   408  2cba8950       constant
0xffff8bd3225c   412  00000000       constant
0xffff8bd32260   416  2cbb4950       constant
0xffff8bd32264   420  00000000       constant
0xffff8bd32268   424  00c87f60       constant
0xffff8bd3226c   428  00000000       constant
0xffff8bd32270   432  8bd06060       constant
0xffff8bd32274   436  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd3218c  external reference (StubCache::primary_->key)  (0x2cba8950)
0xffff8bd321e4  external reference (StubCache::secondary_->key)  (0x2cbb4950)
0xffff8bd3223c  external reference (Runtime::StoreIC_Miss)  (0xc87f60)
0xffff8bd32240  code target (STUB)  (0xffff8bd06060)
0xffff8bd32250  constant pool (size 40)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 981)
0xffff8bd32520     0  movz x2, #0xe2c0
0xffff8bd32524     4  movk x2, #0x2cb8, lsl #16
0xffff8bd32528     8  ldp x3, x0, [x2]
0xffff8bd3252c    12  adds x16, x3, #0x180 (384)
0xffff8bd32530    16  ccmp x16, x0, #nzCv, lo
0xffff8bd32534    20  b.hi #+0x1c8 (addr 0xffff8bd326fc)
0xffff8bd32538    24  str x16, [x2]
0xffff8bd3253c    28  orr x3, x3, #0x1
0xffff8bd32540    32  ldr x0, pc+552 (addr 0x0000ffff8bd32768)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd32544    36  stur x0, [x3, #-1]
0xffff8bd32548    40  movz x0, #0x2e00000000
0xffff8bd3254c    44  stur x0, [x3, #7]
0xffff8bd32550    48  stur x1, [x3, #15]
0xffff8bd32554    52  stur cp, [x3, #23]
0xffff8bd32558    56  ldr x0, pc+536 (addr 0x0000ffff8bd32770)    ;; object: 0x26c04519 <the hole>
0xffff8bd3255c    60  stur x0, [x3, #31]
0xffff8bd32560    64  ldur x0, [cp, #39]
0xffff8bd32564    68  stur x0, [x3, #39]
0xffff8bd32568    72  ldr x0, pc+528 (addr 0x0000ffff8bd32778)    ;; object: 0x26c04241 <undefined>
0xffff8bd3256c    76  stur x0, [x3, #47]
0xffff8bd32570    80  ldr x0, pc+528 (addr 0x0000ffff8bd32780)    ;; object: 0x26c04241 <undefined>
0xffff8bd32574    84  stur x0, [x3, #55]
0xffff8bd32578    88  ldr x0, pc+528 (addr 0x0000ffff8bd32788)    ;; object: 0x26c04241 <undefined>
0xffff8bd3257c    92  stur x0, [x3, #63]
0xffff8bd32580    96  ldr x0, pc+528 (addr 0x0000ffff8bd32790)    ;; object: 0x26c04241 <undefined>
0xffff8bd32584   100  stur x0, [x3, #71]
0xffff8bd32588   104  ldr x0, pc+528 (addr 0x0000ffff8bd32798)    ;; object: 0x26c04241 <undefined>
0xffff8bd3258c   108  stur x0, [x3, #79]
0xffff8bd32590   112  ldr x0, pc+528 (addr 0x0000ffff8bd327a0)    ;; object: 0x26c04241 <undefined>
0xffff8bd32594   116  stur x0, [x3, #87]
0xffff8bd32598   120  ldr x0, pc+528 (addr 0x0000ffff8bd327a8)    ;; object: 0x26c04241 <undefined>
0xffff8bd3259c   124  stur x0, [x3, #95]
0xffff8bd325a0   128  ldr x0, pc+528 (addr 0x0000ffff8bd327b0)    ;; object: 0x26c04241 <undefined>
0xffff8bd325a4   132  stur x0, [x3, #103]
0xffff8bd325a8   136  ldr x0, pc+528 (addr 0x0000ffff8bd327b8)    ;; object: 0x26c04241 <undefined>
0xffff8bd325ac   140  stur x0, [x3, #111]
0xffff8bd325b0   144  ldr x0, pc+528 (addr 0x0000ffff8bd327c0)    ;; object: 0x26c04241 <undefined>
0xffff8bd325b4   148  stur x0, [x3, #119]
0xffff8bd325b8   152  ldr x0, pc+528 (addr 0x0000ffff8bd327c8)    ;; object: 0x26c04241 <undefined>
0xffff8bd325bc   156  stur x0, [x3, #127]
0xffff8bd325c0   160  ldr x0, pc+528 (addr 0x0000ffff8bd327d0)    ;; object: 0x26c04241 <undefined>
0xffff8bd325c4   164  stur x0, [x3, #135]
0xffff8bd325c8   168  ldr x0, pc+528 (addr 0x0000ffff8bd327d8)    ;; object: 0x26c04241 <undefined>
0xffff8bd325cc   172  stur x0, [x3, #143]
0xffff8bd325d0   176  ldr x0, pc+528 (addr 0x0000ffff8bd327e0)    ;; object: 0x26c04241 <undefined>
0xffff8bd325d4   180  stur x0, [x3, #151]
0xffff8bd325d8   184  ldr x0, pc+528 (addr 0x0000ffff8bd327e8)    ;; object: 0x26c04241 <undefined>
0xffff8bd325dc   188  stur x0, [x3, #159]
0xffff8bd325e0   192  ldr x0, pc+528 (addr 0x0000ffff8bd327f0)    ;; object: 0x26c04241 <undefined>
0xffff8bd325e4   196  stur x0, [x3, #167]
0xffff8bd325e8   200  ldr x0, pc+528 (addr 0x0000ffff8bd327f8)    ;; object: 0x26c04241 <undefined>
0xffff8bd325ec   204  stur x0, [x3, #175]
0xffff8bd325f0   208  ldr x0, pc+528 (addr 0x0000ffff8bd32800)    ;; object: 0x26c04241 <undefined>
0xffff8bd325f4   212  stur x0, [x3, #183]
0xffff8bd325f8   216  ldr x0, pc+528 (addr 0x0000ffff8bd32808)    ;; object: 0x26c04241 <undefined>
0xffff8bd325fc   220  stur x0, [x3, #191]
0xffff8bd32600   224  ldr x0, pc+528 (addr 0x0000ffff8bd32810)    ;; object: 0x26c04241 <undefined>
0xffff8bd32604   228  stur x0, [x3, #199]
0xffff8bd32608   232  ldr x0, pc+528 (addr 0x0000ffff8bd32818)    ;; object: 0x26c04241 <undefined>
0xffff8bd3260c   236  stur x0, [x3, #207]
0xffff8bd32610   240  ldr x0, pc+528 (addr 0x0000ffff8bd32820)    ;; object: 0x26c04241 <undefined>
0xffff8bd32614   244  stur x0, [x3, #215]
0xffff8bd32618   248  ldr x0, pc+528 (addr 0x0000ffff8bd32828)    ;; object: 0x26c04241 <undefined>
0xffff8bd3261c   252  stur x0, [x3, #223]
0xffff8bd32620   256  ldr x0, pc+528 (addr 0x0000ffff8bd32830)    ;; object: 0x26c04241 <undefined>
0xffff8bd32624   260  stur x0, [x3, #231]
0xffff8bd32628   264  ldr x0, pc+528 (addr 0x0000ffff8bd32838)    ;; object: 0x26c04241 <undefined>
0xffff8bd3262c   268  stur x0, [x3, #239]
0xffff8bd32630   272  ldr x0, pc+528 (addr 0x0000ffff8bd32840)    ;; object: 0x26c04241 <undefined>
0xffff8bd32634   276  stur x0, [x3, #247]
0xffff8bd32638   280  ldr x0, pc+528 (addr 0x0000ffff8bd32848)    ;; object: 0x26c04241 <undefined>
0xffff8bd3263c   284  stur x0, [x3, #255]
0xffff8bd32640   288  ldr x0, pc+528 (addr 0x0000ffff8bd32850)    ;; object: 0x26c04241 <undefined>
0xffff8bd32644   292  movz x16, #0x107
0xffff8bd32648   296  str x0, [x3, x16]
0xffff8bd3264c   300  ldr x0, pc+524 (addr 0x0000ffff8bd32858)    ;; object: 0x26c04241 <undefined>
0xffff8bd32650   304  movz x16, #0x10f
0xffff8bd32654   308  str x0, [x3, x16]
0xffff8bd32658   312  ldr x0, pc+520 (addr 0x0000ffff8bd32860)    ;; object: 0x26c04241 <undefined>
0xffff8bd3265c   316  movz x16, #0x117
0xffff8bd32660   320  str x0, [x3, x16]
0xffff8bd32664   324  ldr x0, pc+516 (addr 0x0000ffff8bd32868)    ;; object: 0x26c04241 <undefined>
0xffff8bd32668   328  movz x16, #0x11f
0xffff8bd3266c   332  str x0, [x3, x16]
0xffff8bd32670   336  ldr x0, pc+512 (addr 0x0000ffff8bd32870)    ;; object: 0x26c04241 <undefined>
0xffff8bd32674   340  movz x16, #0x127
0xffff8bd32678   344  str x0, [x3, x16]
0xffff8bd3267c   348  ldr x0, pc+508 (addr 0x0000ffff8bd32878)    ;; object: 0x26c04241 <undefined>
0xffff8bd32680   352  movz x16, #0x12f
0xffff8bd32684   356  str x0, [x3, x16]
0xffff8bd32688   360  ldr x0, pc+504 (addr 0x0000ffff8bd32880)    ;; object: 0x26c04241 <undefined>
0xffff8bd3268c   364  movz x16, #0x137
0xffff8bd32690   368  str x0, [x3, x16]
0xffff8bd32694   372  ldr x0, pc+500 (addr 0x0000ffff8bd32888)    ;; object: 0x26c04241 <undefined>
0xffff8bd32698   376  movz x16, #0x13f
0xffff8bd3269c   380  str x0, [x3, x16]
0xffff8bd326a0   384  ldr x0, pc+496 (addr 0x0000ffff8bd32890)    ;; object: 0x26c04241 <undefined>
0xffff8bd326a4   388  movz x16, #0x147
0xffff8bd326a8   392  str x0, [x3, x16]
0xffff8bd326ac   396  ldr x0, pc+492 (addr 0x0000ffff8bd32898)    ;; object: 0x26c04241 <undefined>
0xffff8bd326b0   400  movz x16, #0x14f
0xffff8bd326b4   404  str x0, [x3, x16]
0xffff8bd326b8   408  ldr x0, pc+488 (addr 0x0000ffff8bd328a0)    ;; object: 0x26c04241 <undefined>
0xffff8bd326bc   412  movz x16, #0x157
0xffff8bd326c0   416  str x0, [x3, x16]
0xffff8bd326c4   420  ldr x0, pc+484 (addr 0x0000ffff8bd328a8)    ;; object: 0x26c04241 <undefined>
0xffff8bd326c8   424  movz x16, #0x15f
0xffff8bd326cc   428  str x0, [x3, x16]
0xffff8bd326d0   432  ldr x0, pc+480 (addr 0x0000ffff8bd328b0)    ;; object: 0x26c04241 <undefined>
0xffff8bd326d4   436  movz x16, #0x167
0xffff8bd326d8   440  str x0, [x3, x16]
0xffff8bd326dc   444  ldr x0, pc+476 (addr 0x0000ffff8bd328b8)    ;; object: 0x26c04241 <undefined>
0xffff8bd326e0   448  movz x16, #0x16f
0xffff8bd326e4   452  str x0, [x3, x16]
0xffff8bd326e8   456  ldr x0, pc+472 (addr 0x0000ffff8bd328c0)    ;; object: 0x26c04241 <undefined>
0xffff8bd326ec   460  movz x16, #0x177
0xffff8bd326f0   464  str x0, [x3, x16]
0xffff8bd326f4   468  mov x0, x3
0xffff8bd326f8   472  ret
0xffff8bd326fc   476  sub csp, jssp, #0x10 (16)
0xffff8bd32700   480  stp fp, lr, [jssp, #-16]!
0xffff8bd32704   484  movz fp, #0xa00000000
0xffff8bd32708   488  sub csp, jssp, #0x8 (8)
0xffff8bd3270c   492  str fp, [jssp, #-8]!
0xffff8bd32710   496  add fp, jssp, #0x8 (8)
0xffff8bd32714   500  movz x3, #0x0
0xffff8bd32718   504  mov x16, lr
0xffff8bd3271c   508  ldr x17, pc+428 (addr 0x0000ffff8bd328c8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd32720   512  blr x17
0xffff8bd32724   516  movz x0, #0x18000000000
0xffff8bd32728   520  movz x10, #0x0
0xffff8bd3272c   524  sub csp, jssp, #0x10 (16)
0xffff8bd32730   528  stp x10, x0, [jssp, #-16]!
0xffff8bd32734   532  movz x0, #0x2
0xffff8bd32738   536  movz x1, #0x5b88
0xffff8bd3273c   540  movk x1, #0xe2, lsl #16
0xffff8bd32740   544  ldr x16, pc+400 (addr 0x0000ffff8bd328d0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd32744   548  blr x16
0xffff8bd32748   552  str x0, [jssp, #24]
0xffff8bd3274c   556  ldr x16, pc+396 (addr 0x0000ffff8bd328d8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd32750   560  blr x16
0xffff8bd32754   564  ldr lr, [jssp, #16]
0xffff8bd32758   568  ldp xzr, fp, [jssp], #24
0xffff8bd3275c   572  b #-0x21c (addr 0xffff8bd32540)
0xffff8bd32760   576  58000bff       constant pool begin (num_const = 95)    ;; constant pool
0xffff8bd32764   580  d63f03e0       constant
0xffff8bd32768   584  5f506149       constant
0xffff8bd3276c   588  00000000       constant
0xffff8bd32770   592  26c04519       constant
0xffff8bd32774   596  00000000       constant
0xffff8bd32778   600  26c04241       constant
0xffff8bd3277c   604  00000000       constant
0xffff8bd32780   608  26c04241       constant
0xffff8bd32784   612  00000000       constant
0xffff8bd32788   616  26c04241       constant
0xffff8bd3278c   620  00000000       constant
0xffff8bd32790   624  26c04241       constant
0xffff8bd32794   628  00000000       constant
0xffff8bd32798   632  26c04241       constant
0xffff8bd3279c   636  00000000       constant
0xffff8bd327a0   640  26c04241       constant
0xffff8bd327a4   644  00000000       constant
0xffff8bd327a8   648  26c04241       constant
0xffff8bd327ac   652  00000000       constant
0xffff8bd327b0   656  26c04241       constant
0xffff8bd327b4   660  00000000       constant
0xffff8bd327b8   664  26c04241       constant
0xffff8bd327bc   668  00000000       constant
0xffff8bd327c0   672  26c04241       constant
0xffff8bd327c4   676  00000000       constant
0xffff8bd327c8   680  26c04241       constant
0xffff8bd327cc   684  00000000       constant
0xffff8bd327d0   688  26c04241       constant
0xffff8bd327d4   692  00000000       constant
0xffff8bd327d8   696  26c04241       constant
0xffff8bd327dc   700  00000000       constant
0xffff8bd327e0   704  26c04241       constant
0xffff8bd327e4   708  00000000       constant
0xffff8bd327e8   712  26c04241       constant
0xffff8bd327ec   716  00000000       constant
0xffff8bd327f0   720  26c04241       constant
0xffff8bd327f4   724  00000000       constant
0xffff8bd327f8   728  26c04241       constant
0xffff8bd327fc   732  00000000       constant
0xffff8bd32800   736  26c04241       constant
0xffff8bd32804   740  00000000       constant
0xffff8bd32808   744  26c04241       constant
0xffff8bd3280c   748  00000000       constant
0xffff8bd32810   752  26c04241       constant
0xffff8bd32814   756  00000000       constant
0xffff8bd32818   760  26c04241       constant
0xffff8bd3281c   764  00000000       constant
0xffff8bd32820   768  26c04241       constant
0xffff8bd32824   772  00000000       constant
0xffff8bd32828   776  26c04241       constant
0xffff8bd3282c   780  00000000       constant
0xffff8bd32830   784  26c04241       constant
0xffff8bd32834   788  00000000       constant
0xffff8bd32838   792  26c04241       constant
0xffff8bd3283c   796  00000000       constant
0xffff8bd32840   800  26c04241       constant
0xffff8bd32844   804  00000000       constant
0xffff8bd32848   808  26c04241       constant
0xffff8bd3284c   812  00000000       constant
0xffff8bd32850   816  26c04241       constant
0xffff8bd32854   820  00000000       constant
0xffff8bd32858   824  26c04241       constant
0xffff8bd3285c   828  00000000       constant
0xffff8bd32860   832  26c04241       constant
0xffff8bd32864   836  00000000       constant
0xffff8bd32868   840  26c04241       constant
0xffff8bd3286c   844  00000000       constant
0xffff8bd32870   848  26c04241       constant
0xffff8bd32874   852  00000000       constant
0xffff8bd32878   856  26c04241       constant
0xffff8bd3287c   860  00000000       constant
0xffff8bd32880   864  26c04241       constant
0xffff8bd32884   868  00000000       constant
0xffff8bd32888   872  26c04241       constant
0xffff8bd3288c   876  00000000       constant
0xffff8bd32890   880  26c04241       constant
0xffff8bd32894   884  00000000       constant
0xffff8bd32898   888  26c04241       constant
0xffff8bd3289c   892  00000000       constant
0xffff8bd328a0   896  26c04241       constant
0xffff8bd328a4   900  00000000       constant
0xffff8bd328a8   904  26c04241       constant
0xffff8bd328ac   908  00000000       constant
0xffff8bd328b0   912  26c04241       constant
0xffff8bd328b4   916  00000000       constant
0xffff8bd328b8   920  26c04241       constant
0xffff8bd328bc   924  00000000       constant
0xffff8bd328c0   928  26c04241       constant
0xffff8bd328c4   932  00000000       constant
0xffff8bd328c8   936  8bd06820       constant
0xffff8bd328cc   940  0000ffff       constant
0xffff8bd328d0   944  8bd06260       constant
0xffff8bd328d4   948  0000ffff       constant
0xffff8bd328d8   952  8bd068e0       constant
0xffff8bd328dc   956  0000ffff       constant


Safepoints (size = 21)
0xffff8bd32748   552  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 53)
0xffff8bd32540  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd32558  embedded object  (0x26c04519 <the hole>)
0xffff8bd32568  embedded object  (0x26c04241 <undefined>)
0xffff8bd32570  embedded object  (0x26c04241 <undefined>)
0xffff8bd32578  embedded object  (0x26c04241 <undefined>)
0xffff8bd32580  embedded object  (0x26c04241 <undefined>)
0xffff8bd32588  embedded object  (0x26c04241 <undefined>)
0xffff8bd32590  embedded object  (0x26c04241 <undefined>)
0xffff8bd32598  embedded object  (0x26c04241 <undefined>)
0xffff8bd325a0  embedded object  (0x26c04241 <undefined>)
0xffff8bd325a8  embedded object  (0x26c04241 <undefined>)
0xffff8bd325b0  embedded object  (0x26c04241 <undefined>)
0xffff8bd325b8  embedded object  (0x26c04241 <undefined>)
0xffff8bd325c0  embedded object  (0x26c04241 <undefined>)
0xffff8bd325c8  embedded object  (0x26c04241 <undefined>)
0xffff8bd325d0  embedded object  (0x26c04241 <undefined>)
0xffff8bd325d8  embedded object  (0x26c04241 <undefined>)
0xffff8bd325e0  embedded object  (0x26c04241 <undefined>)
0xffff8bd325e8  embedded object  (0x26c04241 <undefined>)
0xffff8bd325f0  embedded object  (0x26c04241 <undefined>)
0xffff8bd325f8  embedded object  (0x26c04241 <undefined>)
0xffff8bd32600  embedded object  (0x26c04241 <undefined>)
0xffff8bd32608  embedded object  (0x26c04241 <undefined>)
0xffff8bd32610  embedded object  (0x26c04241 <undefined>)
0xffff8bd32618  embedded object  (0x26c04241 <undefined>)
0xffff8bd32620  embedded object  (0x26c04241 <undefined>)
0xffff8bd32628  embedded object  (0x26c04241 <undefined>)
0xffff8bd32630  embedded object  (0x26c04241 <undefined>)
0xffff8bd32638  embedded object  (0x26c04241 <undefined>)
0xffff8bd32640  embedded object  (0x26c04241 <undefined>)
0xffff8bd3264c  embedded object  (0x26c04241 <undefined>)
0xffff8bd32658  embedded object  (0x26c04241 <undefined>)
0xffff8bd32664  embedded object  (0x26c04241 <undefined>)
0xffff8bd32670  embedded object  (0x26c04241 <undefined>)
0xffff8bd3267c  embedded object  (0x26c04241 <undefined>)
0xffff8bd32688  embedded object  (0x26c04241 <undefined>)
0xffff8bd32694  embedded object  (0x26c04241 <undefined>)
0xffff8bd326a0  embedded object  (0x26c04241 <undefined>)
0xffff8bd326ac  embedded object  (0x26c04241 <undefined>)
0xffff8bd326b8  embedded object  (0x26c04241 <undefined>)
0xffff8bd326c4  embedded object  (0x26c04241 <undefined>)
0xffff8bd326d0  embedded object  (0x26c04241 <undefined>)
0xffff8bd326dc  embedded object  (0x26c04241 <undefined>)
0xffff8bd326e8  embedded object  (0x26c04241 <undefined>)
0xffff8bd3271c  code target (STUB)  (0xffff8bd06820)
0xffff8bd32740  code target (STUB)  (0xffff8bd06260)
0xffff8bd3274c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd32760  constant pool (size 384)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff8bd32960     0  adr xzr, #+0x40 (addr 0xffff8bd329a0)
0xffff8bd32964     4  adr xzr, #+0x360 (addr 0xffff8bd32cc4)
0xffff8bd32968     8  ldr x16, pc+1736 (addr 0x0000ffff8bd33030)    ;; external reference (store_buffer_top)
0xffff8bd3296c    12  ldr x1, [x16]
0xffff8bd32970    16  str x2, [x1], #8
0xffff8bd32974    20  str x1, [x16]
0xffff8bd32978    24  tst x1, #0x1ffff
0xffff8bd3297c    28  b.eq #+0x8 (addr 0xffff8bd32984)
0xffff8bd32980    32  ret
0xffff8bd32984    36  sub csp, jssp, #0x8 (8)
0xffff8bd32988    40  str lr, [jssp, #-8]!
0xffff8bd3298c    44  ldr x17, pc+1708 (addr 0x0000ffff8bd33038)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd32990    48  blr x17
0xffff8bd32994    52  ldr lr, [jssp], #8
0xffff8bd32998    56  ret
0xffff8bd3299c    60  ret
0xffff8bd329a0    64  sub csp, jssp, #0x10 (16)
0xffff8bd329a4    68  stp x3, x0, [jssp, #-16]!
0xffff8bd329a8    72  ldr x1, [x2]
0xffff8bd329ac    76  and x16, x1, #0xfffffffffff00000
0xffff8bd329b0    80  ldr x16, [x16, #8]
0xffff8bd329b4    84  tst x16, #0x18
0xffff8bd329b8    88  b.eq #+0x1d8 (addr 0xffff8bd32b90)
0xffff8bd329bc    92  and x16, x4, #0xfffffffffff00000
0xffff8bd329c0    96  ldr x16, [x16, #8]
0xffff8bd329c4   100  tst x16, #0x18
0xffff8bd329c8   104  b.ne #+0x1c8 (addr 0xffff8bd32b90)
0xffff8bd329cc   108  and x1, x4, #0xfffffffffff00000
0xffff8bd329d0   112  ldr x0, [x1, #104]
0xffff8bd329d4   116  subs x0, x0, #0x1 (1)
0xffff8bd329d8   120  str x0, [x1, #104]
0xffff8bd329dc   124  b.mi #+0xc4 (addr 0xffff8bd32aa0)
0xffff8bd329e0   128  ubfx x16, x4, #8, #12
0xffff8bd329e4   132  and x1, x4, #0xfffffffffff00000
0xffff8bd329e8   136  add x1, x1, x16, lsl #2
0xffff8bd329ec   140  ubfx x0, x4, #3, #5
0xffff8bd329f0   144  ldr x1, [x1, #360]
0xffff8bd329f4   148  lsr x1, x1, x0
0xffff8bd329f8   152  tbz w1, #0, #+0x8 (addr 0xffff8bd32a00)
0xffff8bd329fc   156  tbnz w1, #1, #+0x3c (addr 0xffff8bd32a38)
0xffff8bd32a00   160  ldp x3, x0, [jssp], #16
0xffff8bd32a04   164  ldr x16, pc+1596 (addr 0x0000ffff8bd33040)    ;; external reference (store_buffer_top)
0xffff8bd32a08   168  ldr x1, [x16]
0xffff8bd32a0c   172  str x2, [x1], #8
0xffff8bd32a10   176  str x1, [x16]
0xffff8bd32a14   180  tst x1, #0x1ffff
0xffff8bd32a18   184  b.eq #+0x8 (addr 0xffff8bd32a20)
0xffff8bd32a1c   188  ret
0xffff8bd32a20   192  sub csp, jssp, #0x8 (8)
0xffff8bd32a24   196  str lr, [jssp, #-8]!
0xffff8bd32a28   200  ldr x17, pc+1568 (addr 0x0000ffff8bd33048)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd32a2c   204  blr x17
0xffff8bd32a30   208  ldr lr, [jssp], #8
0xffff8bd32a34   212  ret
0xffff8bd32a38   216  ldr x1, [x2]
0xffff8bd32a3c   220  sub csp, jssp, #0x10 (16)
0xffff8bd32a40   224  stp x4, x2, [jssp, #-16]!
0xffff8bd32a44   228  ubfx x16, x1, #8, #12
0xffff8bd32a48   232  and x0, x1, #0xfffffffffff00000
0xffff8bd32a4c   236  add x0, x0, x16, lsl #2
0xffff8bd32a50   240  ubfx x4, x1, #3, #5
0xffff8bd32a54   244  ldr x2, [x0, #360]
0xffff8bd32a58   248  lsr x2, x2, x4
0xffff8bd32a5c   252  tbz w2, #0, #+0x40 (addr 0xffff8bd32a9c)
0xffff8bd32a60   256  ldp x4, x2, [jssp], #16
0xffff8bd32a64   260  ldp x3, x0, [jssp], #16
0xffff8bd32a68   264  ldr x16, pc+1512 (addr 0x0000ffff8bd33050)    ;; external reference (store_buffer_top)
0xffff8bd32a6c   268  ldr x1, [x16]
0xffff8bd32a70   272  str x2, [x1], #8
0xffff8bd32a74   276  str x1, [x16]
0xffff8bd32a78   280  tst x1, #0x1ffff
0xffff8bd32a7c   284  b.eq #+0x8 (addr 0xffff8bd32a84)
0xffff8bd32a80   288  ret
0xffff8bd32a84   292  sub csp, jssp, #0x8 (8)
0xffff8bd32a88   296  str lr, [jssp, #-8]!
0xffff8bd32a8c   300  ldr x17, pc+1484 (addr 0x0000ffff8bd33058)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd32a90   304  blr x17
0xffff8bd32a94   308  ldr lr, [jssp], #8
0xffff8bd32a98   312  ret
0xffff8bd32a9c   316  ldp x4, x2, [jssp], #16
0xffff8bd32aa0   320  sub csp, jssp, #0x78 (120)
0xffff8bd32aa4   324  stp x14, x15, [jssp, #-32]!
0xffff8bd32aa8   328  stp x18, lr, [jssp, #16]
0xffff8bd32aac   332  stp x10, x11, [jssp, #-32]!
0xffff8bd32ab0   336  stp x12, x13, [jssp, #16]
0xffff8bd32ab4   340  stp x6, x7, [jssp, #-32]!
0xffff8bd32ab8   344  stp x8, x9, [jssp, #16]
0xffff8bd32abc   348  stp x2, x4, [jssp, #-24]!
0xffff8bd32ac0   352  str x5, [jssp, #16]
0xffff8bd32ac4   356  sub csp, jssp, #0xb0 (176)
0xffff8bd32ac8   360  stp d26, d27, [jssp, #-32]!
0xffff8bd32acc   364  stp d28, d29, [jssp, #16]
0xffff8bd32ad0   368  stp d22, d23, [jssp, #-32]!
0xffff8bd32ad4   372  stp d24, d25, [jssp, #16]
0xffff8bd32ad8   376  stp d18, d19, [jssp, #-32]!
0xffff8bd32adc   380  stp d20, d21, [jssp, #16]
0xffff8bd32ae0   384  stp d6, d7, [jssp, #-32]!
0xffff8bd32ae4   388  stp d16, d17, [jssp, #16]
0xffff8bd32ae8   392  stp d2, d3, [jssp, #-32]!
0xffff8bd32aec   396  stp d4, d5, [jssp, #16]
0xffff8bd32af0   400  stp d0, d1, [jssp, #-16]!
0xffff8bd32af4   404  mov x0, x4
0xffff8bd32af8   408  mov x1, x2
0xffff8bd32afc   412  ldr x2, pc+1380 (addr 0x0000ffff8bd33060)    ;; external reference (isolate)
0xffff8bd32b00   416  ldr x16, pc+1384 (addr 0x0000ffff8bd33068)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd32b04   420  and csp, jssp, #0xfffffffffffffff0
0xffff8bd32b08   424  blr x16
0xffff8bd32b0c   428  ldp d2, d3, [jssp, #16]
0xffff8bd32b10   432  ldp d0, d1, [jssp], #32
0xffff8bd32b14   436  ldp d6, d7, [jssp, #16]
0xffff8bd32b18   440  ldp d4, d5, [jssp], #32
0xffff8bd32b1c   444  ldp d18, d19, [jssp, #16]
0xffff8bd32b20   448  ldp d16, d17, [jssp], #32
0xffff8bd32b24   452  ldp d22, d23, [jssp, #16]
0xffff8bd32b28   456  ldp d20, d21, [jssp], #32
0xffff8bd32b2c   460  ldp d26, d27, [jssp, #16]
0xffff8bd32b30   464  ldp d24, d25, [jssp], #32
0xffff8bd32b34   468  ldp d28, d29, [jssp], #16
0xffff8bd32b38   472  ldp x5, x6, [jssp, #16]
0xffff8bd32b3c   476  ldp x2, x4, [jssp], #32
0xffff8bd32b40   480  ldp x9, x10, [jssp, #16]
0xffff8bd32b44   484  ldp x7, x8, [jssp], #32
0xffff8bd32b48   488  ldp x13, x14, [jssp, #16]
0xffff8bd32b4c   492  ldp x11, x12, [jssp], #32
0xffff8bd32b50   496  ldr lr, [jssp, #16]
0xffff8bd32b54   500  ldp x15, x18, [jssp], #24
0xffff8bd32b58   504  ldp x3, x0, [jssp], #16
0xffff8bd32b5c   508  ldr x16, pc+1300 (addr 0x0000ffff8bd33070)    ;; external reference (store_buffer_top)
0xffff8bd32b60   512  ldr x1, [x16]
0xffff8bd32b64   516  str x2, [x1], #8
0xffff8bd32b68   520  str x1, [x16]
0xffff8bd32b6c   524  tst x1, #0x1ffff
0xffff8bd32b70   528  b.eq #+0x8 (addr 0xffff8bd32b78)
0xffff8bd32b74   532  ret
0xffff8bd32b78   536  sub csp, jssp, #0x8 (8)
0xffff8bd32b7c   540  str lr, [jssp, #-8]!
0xffff8bd32b80   544  ldr x17, pc+1272 (addr 0x0000ffff8bd33078)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd32b84   548  blr x17
0xffff8bd32b88   552  ldr lr, [jssp], #8
0xffff8bd32b8c   556  ret
0xffff8bd32b90   560  and x1, x4, #0xfffffffffff00000
0xffff8bd32b94   564  ldr x0, [x1, #104]
0xffff8bd32b98   568  subs x0, x0, #0x1 (1)
0xffff8bd32b9c   572  str x0, [x1, #104]
0xffff8bd32ba0   576  b.mi #+0x64 (addr 0xffff8bd32c04)
0xffff8bd32ba4   580  ubfx x16, x4, #8, #12
0xffff8bd32ba8   584  and x1, x4, #0xfffffffffff00000
0xffff8bd32bac   588  add x1, x1, x16, lsl #2
0xffff8bd32bb0   592  ubfx x0, x4, #3, #5
0xffff8bd32bb4   596  ldr x1, [x1, #360]
0xffff8bd32bb8   600  lsr x1, x1, x0
0xffff8bd32bbc   604  tbz w1, #0, #+0x8 (addr 0xffff8bd32bc4)
0xffff8bd32bc0   608  tbnz w1, #1, #+0xc (addr 0xffff8bd32bcc)
0xffff8bd32bc4   612  ldp x3, x0, [jssp], #16
0xffff8bd32bc8   616  ret
0xffff8bd32bcc   620  ldr x1, [x2]
0xffff8bd32bd0   624  sub csp, jssp, #0x10 (16)
0xffff8bd32bd4   628  stp x4, x2, [jssp, #-16]!
0xffff8bd32bd8   632  ubfx x16, x1, #8, #12
0xffff8bd32bdc   636  and x0, x1, #0xfffffffffff00000
0xffff8bd32be0   640  add x0, x0, x16, lsl #2
0xffff8bd32be4   644  ubfx x4, x1, #3, #5
0xffff8bd32be8   648  ldr x2, [x0, #360]
0xffff8bd32bec   652  lsr x2, x2, x4
0xffff8bd32bf0   656  tbz w2, #0, #+0x10 (addr 0xffff8bd32c00)
0xffff8bd32bf4   660  ldp x4, x2, [jssp], #16
0xffff8bd32bf8   664  ldp x3, x0, [jssp], #16
0xffff8bd32bfc   668  ret
0xffff8bd32c00   672  ldp x4, x2, [jssp], #16
0xffff8bd32c04   676  sub csp, jssp, #0x78 (120)
0xffff8bd32c08   680  stp x14, x15, [jssp, #-32]!
0xffff8bd32c0c   684  stp x18, lr, [jssp, #16]
0xffff8bd32c10   688  stp x10, x11, [jssp, #-32]!
0xffff8bd32c14   692  stp x12, x13, [jssp, #16]
0xffff8bd32c18   696  stp x6, x7, [jssp, #-32]!
0xffff8bd32c1c   700  stp x8, x9, [jssp, #16]
0xffff8bd32c20   704  stp x2, x4, [jssp, #-24]!
0xffff8bd32c24   708  str x5, [jssp, #16]
0xffff8bd32c28   712  sub csp, jssp, #0xb0 (176)
0xffff8bd32c2c   716  stp d26, d27, [jssp, #-32]!
0xffff8bd32c30   720  stp d28, d29, [jssp, #16]
0xffff8bd32c34   724  stp d22, d23, [jssp, #-32]!
0xffff8bd32c38   728  stp d24, d25, [jssp, #16]
0xffff8bd32c3c   732  stp d18, d19, [jssp, #-32]!
0xffff8bd32c40   736  stp d20, d21, [jssp, #16]
0xffff8bd32c44   740  stp d6, d7, [jssp, #-32]!
0xffff8bd32c48   744  stp d16, d17, [jssp, #16]
0xffff8bd32c4c   748  stp d2, d3, [jssp, #-32]!
0xffff8bd32c50   752  stp d4, d5, [jssp, #16]
0xffff8bd32c54   756  stp d0, d1, [jssp, #-16]!
0xffff8bd32c58   760  mov x0, x4
0xffff8bd32c5c   764  mov x1, x2
0xffff8bd32c60   768  ldr x2, pc+1056 (addr 0x0000ffff8bd33080)    ;; external reference (isolate)
0xffff8bd32c64   772  ldr x16, pc+1060 (addr 0x0000ffff8bd33088)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd32c68   776  and csp, jssp, #0xfffffffffffffff0
0xffff8bd32c6c   780  blr x16
0xffff8bd32c70   784  ldp d2, d3, [jssp, #16]
0xffff8bd32c74   788  ldp d0, d1, [jssp], #32
0xffff8bd32c78   792  ldp d6, d7, [jssp, #16]
0xffff8bd32c7c   796  ldp d4, d5, [jssp], #32
0xffff8bd32c80   800  ldp d18, d19, [jssp, #16]
0xffff8bd32c84   804  ldp d16, d17, [jssp], #32
0xffff8bd32c88   808  ldp d22, d23, [jssp, #16]
0xffff8bd32c8c   812  ldp d20, d21, [jssp], #32
0xffff8bd32c90   816  ldp d26, d27, [jssp, #16]
0xffff8bd32c94   820  ldp d24, d25, [jssp], #32
0xffff8bd32c98   824  ldp d28, d29, [jssp], #16
0xffff8bd32c9c   828  ldp x5, x6, [jssp, #16]
0xffff8bd32ca0   832  ldp x2, x4, [jssp], #32
0xffff8bd32ca4   836  ldp x9, x10, [jssp, #16]
0xffff8bd32ca8   840  ldp x7, x8, [jssp], #32
0xffff8bd32cac   844  ldp x13, x14, [jssp, #16]
0xffff8bd32cb0   848  ldp x11, x12, [jssp], #32
0xffff8bd32cb4   852  ldr lr, [jssp, #16]
0xffff8bd32cb8   856  ldp x15, x18, [jssp], #24
0xffff8bd32cbc   860  ldp x3, x0, [jssp], #16
0xffff8bd32cc0   864  ret
0xffff8bd32cc4   868  sub csp, jssp, #0x10 (16)
0xffff8bd32cc8   872  stp x3, x0, [jssp, #-16]!
0xffff8bd32ccc   876  ldr x1, [x2]
0xffff8bd32cd0   880  and x16, x1, #0xfffffffffff00000
0xffff8bd32cd4   884  ldr x16, [x16, #8]
0xffff8bd32cd8   888  tst x16, #0x18
0xffff8bd32cdc   892  b.eq #+0x1f8 (addr 0xffff8bd32ed4)
0xffff8bd32ce0   896  and x16, x4, #0xfffffffffff00000
0xffff8bd32ce4   900  ldr x16, [x16, #8]
0xffff8bd32ce8   904  tst x16, #0x18
0xffff8bd32cec   908  b.ne #+0x1e8 (addr 0xffff8bd32ed4)
0xffff8bd32cf0   912  and x1, x4, #0xfffffffffff00000
0xffff8bd32cf4   916  ldr x0, [x1, #104]
0xffff8bd32cf8   920  subs x0, x0, #0x1 (1)
0xffff8bd32cfc   924  str x0, [x1, #104]
0xffff8bd32d00   928  b.mi #+0xe4 (addr 0xffff8bd32de4)
0xffff8bd32d04   932  ubfx x16, x4, #8, #12
0xffff8bd32d08   936  and x1, x4, #0xfffffffffff00000
0xffff8bd32d0c   940  add x1, x1, x16, lsl #2
0xffff8bd32d10   944  ubfx x0, x4, #3, #5
0xffff8bd32d14   948  ldr x1, [x1, #360]
0xffff8bd32d18   952  lsr x1, x1, x0
0xffff8bd32d1c   956  tbz w1, #0, #+0x8 (addr 0xffff8bd32d24)
0xffff8bd32d20   960  tbnz w1, #1, #+0x3c (addr 0xffff8bd32d5c)
0xffff8bd32d24   964  ldp x3, x0, [jssp], #16
0xffff8bd32d28   968  ldr x16, pc+872 (addr 0x0000ffff8bd33090)    ;; external reference (store_buffer_top)
0xffff8bd32d2c   972  ldr x1, [x16]
0xffff8bd32d30   976  str x2, [x1], #8
0xffff8bd32d34   980  str x1, [x16]
0xffff8bd32d38   984  tst x1, #0x1ffff
0xffff8bd32d3c   988  b.eq #+0x8 (addr 0xffff8bd32d44)
0xffff8bd32d40   992  ret
0xffff8bd32d44   996  sub csp, jssp, #0x8 (8)
0xffff8bd32d48  1000  str lr, [jssp, #-8]!
0xffff8bd32d4c  1004  ldr x17, pc+844 (addr 0x0000ffff8bd33098)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd32d50  1008  blr x17
0xffff8bd32d54  1012  ldr lr, [jssp], #8
0xffff8bd32d58  1016  ret
0xffff8bd32d5c  1020  ldr x1, [x2]
0xffff8bd32d60  1024  and x0, x1, #0xfffffffffff00000
0xffff8bd32d64  1028  ldr x0, [x0, #8]
0xffff8bd32d68  1032  tbz w0, #6, #+0x18 (addr 0xffff8bd32d80)
0xffff8bd32d6c  1036  and x0, x4, #0xfffffffffff00000
0xffff8bd32d70  1040  ldr x0, [x0, #8]
0xffff8bd32d74  1044  movz x16, #0x58
0xffff8bd32d78  1048  tst x0, x16
0xffff8bd32d7c  1052  b.eq #+0x68 (addr 0xffff8bd32de4)
0xffff8bd32d80  1056  sub csp, jssp, #0x10 (16)
0xffff8bd32d84  1060  stp x4, x2, [jssp, #-16]!
0xffff8bd32d88  1064  ubfx x16, x1, #8, #12
0xffff8bd32d8c  1068  and x0, x1, #0xfffffffffff00000
0xffff8bd32d90  1072  add x0, x0, x16, lsl #2
0xffff8bd32d94  1076  ubfx x4, x1, #3, #5
0xffff8bd32d98  1080  ldr x2, [x0, #360]
0xffff8bd32d9c  1084  lsr x2, x2, x4
0xffff8bd32da0  1088  tbz w2, #0, #+0x40 (addr 0xffff8bd32de0)
0xffff8bd32da4  1092  ldp x4, x2, [jssp], #16
0xffff8bd32da8  1096  ldp x3, x0, [jssp], #16
0xffff8bd32dac  1100  ldr x16, pc+756 (addr 0x0000ffff8bd330a0)    ;; external reference (store_buffer_top)
0xffff8bd32db0  1104  ldr x1, [x16]
0xffff8bd32db4  1108  str x2, [x1], #8
0xffff8bd32db8  1112  str x1, [x16]
0xffff8bd32dbc  1116  tst x1, #0x1ffff
0xffff8bd32dc0  1120  b.eq #+0x8 (addr 0xffff8bd32dc8)
0xffff8bd32dc4  1124  ret
0xffff8bd32dc8  1128  sub csp, jssp, #0x8 (8)
0xffff8bd32dcc  1132  str lr, [jssp, #-8]!
0xffff8bd32dd0  1136  ldr x17, pc+728 (addr 0x0000ffff8bd330a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd32dd4  1140  blr x17
0xffff8bd32dd8  1144  ldr lr, [jssp], #8
0xffff8bd32ddc  1148  ret
0xffff8bd32de0  1152  ldp x4, x2, [jssp], #16
0xffff8bd32de4  1156  sub csp, jssp, #0x78 (120)
0xffff8bd32de8  1160  stp x14, x15, [jssp, #-32]!
0xffff8bd32dec  1164  stp x18, lr, [jssp, #16]
0xffff8bd32df0  1168  stp x10, x11, [jssp, #-32]!
0xffff8bd32df4  1172  stp x12, x13, [jssp, #16]
0xffff8bd32df8  1176  stp x6, x7, [jssp, #-32]!
0xffff8bd32dfc  1180  stp x8, x9, [jssp, #16]
0xffff8bd32e00  1184  stp x2, x4, [jssp, #-24]!
0xffff8bd32e04  1188  str x5, [jssp, #16]
0xffff8bd32e08  1192  sub csp, jssp, #0xb0 (176)
0xffff8bd32e0c  1196  stp d26, d27, [jssp, #-32]!
0xffff8bd32e10  1200  stp d28, d29, [jssp, #16]
0xffff8bd32e14  1204  stp d22, d23, [jssp, #-32]!
0xffff8bd32e18  1208  stp d24, d25, [jssp, #16]
0xffff8bd32e1c  1212  stp d18, d19, [jssp, #-32]!
0xffff8bd32e20  1216  stp d20, d21, [jssp, #16]
0xffff8bd32e24  1220  stp d6, d7, [jssp, #-32]!
0xffff8bd32e28  1224  stp d16, d17, [jssp, #16]
0xffff8bd32e2c  1228  stp d2, d3, [jssp, #-32]!
0xffff8bd32e30  1232  stp d4, d5, [jssp, #16]
0xffff8bd32e34  1236  stp d0, d1, [jssp, #-16]!
0xffff8bd32e38  1240  mov x0, x4
0xffff8bd32e3c  1244  mov x1, x2
0xffff8bd32e40  1248  ldr x2, pc+624 (addr 0x0000ffff8bd330b0)    ;; external reference (isolate)
0xffff8bd32e44  1252  ldr x16, pc+628 (addr 0x0000ffff8bd330b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd32e48  1256  and csp, jssp, #0xfffffffffffffff0
0xffff8bd32e4c  1260  blr x16
0xffff8bd32e50  1264  ldp d2, d3, [jssp, #16]
0xffff8bd32e54  1268  ldp d0, d1, [jssp], #32
0xffff8bd32e58  1272  ldp d6, d7, [jssp, #16]
0xffff8bd32e5c  1276  ldp d4, d5, [jssp], #32
0xffff8bd32e60  1280  ldp d18, d19, [jssp, #16]
0xffff8bd32e64  1284  ldp d16, d17, [jssp], #32
0xffff8bd32e68  1288  ldp d22, d23, [jssp, #16]
0xffff8bd32e6c  1292  ldp d20, d21, [jssp], #32
0xffff8bd32e70  1296  ldp d26, d27, [jssp, #16]
0xffff8bd32e74  1300  ldp d24, d25, [jssp], #32
0xffff8bd32e78  1304  ldp d28, d29, [jssp], #16
0xffff8bd32e7c  1308  ldp x5, x6, [jssp, #16]
0xffff8bd32e80  1312  ldp x2, x4, [jssp], #32
0xffff8bd32e84  1316  ldp x9, x10, [jssp, #16]
0xffff8bd32e88  1320  ldp x7, x8, [jssp], #32
0xffff8bd32e8c  1324  ldp x13, x14, [jssp, #16]
0xffff8bd32e90  1328  ldp x11, x12, [jssp], #32
0xffff8bd32e94  1332  ldr lr, [jssp, #16]
0xffff8bd32e98  1336  ldp x15, x18, [jssp], #24
0xffff8bd32e9c  1340  ldp x3, x0, [jssp], #16
0xffff8bd32ea0  1344  ldr x16, pc+544 (addr 0x0000ffff8bd330c0)    ;; external reference (store_buffer_top)
0xffff8bd32ea4  1348  ldr x1, [x16]
0xffff8bd32ea8  1352  str x2, [x1], #8
0xffff8bd32eac  1356  str x1, [x16]
0xffff8bd32eb0  1360  tst x1, #0x1ffff
0xffff8bd32eb4  1364  b.eq #+0x8 (addr 0xffff8bd32ebc)
0xffff8bd32eb8  1368  ret
0xffff8bd32ebc  1372  sub csp, jssp, #0x8 (8)
0xffff8bd32ec0  1376  str lr, [jssp, #-8]!
0xffff8bd32ec4  1380  ldr x17, pc+516 (addr 0x0000ffff8bd330c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd32ec8  1384  blr x17
0xffff8bd32ecc  1388  ldr lr, [jssp], #8
0xffff8bd32ed0  1392  ret
0xffff8bd32ed4  1396  and x1, x4, #0xfffffffffff00000
0xffff8bd32ed8  1400  ldr x0, [x1, #104]
0xffff8bd32edc  1404  subs x0, x0, #0x1 (1)
0xffff8bd32ee0  1408  str x0, [x1, #104]
0xffff8bd32ee4  1412  b.mi #+0x84 (addr 0xffff8bd32f68)
0xffff8bd32ee8  1416  ubfx x16, x4, #8, #12
0xffff8bd32eec  1420  and x1, x4, #0xfffffffffff00000
0xffff8bd32ef0  1424  add x1, x1, x16, lsl #2
0xffff8bd32ef4  1428  ubfx x0, x4, #3, #5
0xffff8bd32ef8  1432  ldr x1, [x1, #360]
0xffff8bd32efc  1436  lsr x1, x1, x0
0xffff8bd32f00  1440  tbz w1, #0, #+0x8 (addr 0xffff8bd32f08)
0xffff8bd32f04  1444  tbnz w1, #1, #+0xc (addr 0xffff8bd32f10)
0xffff8bd32f08  1448  ldp x3, x0, [jssp], #16
0xffff8bd32f0c  1452  ret
0xffff8bd32f10  1456  ldr x1, [x2]
0xffff8bd32f14  1460  and x0, x1, #0xfffffffffff00000
0xffff8bd32f18  1464  ldr x0, [x0, #8]
0xffff8bd32f1c  1468  tbz w0, #6, #+0x18 (addr 0xffff8bd32f34)
0xffff8bd32f20  1472  and x0, x4, #0xfffffffffff00000
0xffff8bd32f24  1476  ldr x0, [x0, #8]
0xffff8bd32f28  1480  movz x16, #0x58
0xffff8bd32f2c  1484  tst x0, x16
0xffff8bd32f30  1488  b.eq #+0x38 (addr 0xffff8bd32f68)
0xffff8bd32f34  1492  sub csp, jssp, #0x10 (16)
0xffff8bd32f38  1496  stp x4, x2, [jssp, #-16]!
0xffff8bd32f3c  1500  ubfx x16, x1, #8, #12
0xffff8bd32f40  1504  and x0, x1, #0xfffffffffff00000
0xffff8bd32f44  1508  add x0, x0, x16, lsl #2
0xffff8bd32f48  1512  ubfx x4, x1, #3, #5
0xffff8bd32f4c  1516  ldr x2, [x0, #360]
0xffff8bd32f50  1520  lsr x2, x2, x4
0xffff8bd32f54  1524  tbz w2, #0, #+0x10 (addr 0xffff8bd32f64)
0xffff8bd32f58  1528  ldp x4, x2, [jssp], #16
0xffff8bd32f5c  1532  ldp x3, x0, [jssp], #16
0xffff8bd32f60  1536  ret
0xffff8bd32f64  1540  ldp x4, x2, [jssp], #16
0xffff8bd32f68  1544  sub csp, jssp, #0x78 (120)
0xffff8bd32f6c  1548  stp x14, x15, [jssp, #-32]!
0xffff8bd32f70  1552  stp x18, lr, [jssp, #16]
0xffff8bd32f74  1556  stp x10, x11, [jssp, #-32]!
0xffff8bd32f78  1560  stp x12, x13, [jssp, #16]
0xffff8bd32f7c  1564  stp x6, x7, [jssp, #-32]!
0xffff8bd32f80  1568  stp x8, x9, [jssp, #16]
0xffff8bd32f84  1572  stp x2, x4, [jssp, #-24]!
0xffff8bd32f88  1576  str x5, [jssp, #16]
0xffff8bd32f8c  1580  sub csp, jssp, #0xb0 (176)
0xffff8bd32f90  1584  stp d26, d27, [jssp, #-32]!
0xffff8bd32f94  1588  stp d28, d29, [jssp, #16]
0xffff8bd32f98  1592  stp d22, d23, [jssp, #-32]!
0xffff8bd32f9c  1596  stp d24, d25, [jssp, #16]
0xffff8bd32fa0  1600  stp d18, d19, [jssp, #-32]!
0xffff8bd32fa4  1604  stp d20, d21, [jssp, #16]
0xffff8bd32fa8  1608  stp d6, d7, [jssp, #-32]!
0xffff8bd32fac  1612  stp d16, d17, [jssp, #16]
0xffff8bd32fb0  1616  stp d2, d3, [jssp, #-32]!
0xffff8bd32fb4  1620  stp d4, d5, [jssp, #16]
0xffff8bd32fb8  1624  stp d0, d1, [jssp, #-16]!
0xffff8bd32fbc  1628  mov x0, x4
0xffff8bd32fc0  1632  mov x1, x2
0xffff8bd32fc4  1636  ldr x2, pc+268 (addr 0x0000ffff8bd330d0)    ;; external reference (isolate)
0xffff8bd32fc8  1640  ldr x16, pc+272 (addr 0x0000ffff8bd330d8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd32fcc  1644  and csp, jssp, #0xfffffffffffffff0
0xffff8bd32fd0  1648  blr x16
0xffff8bd32fd4  1652  ldp d2, d3, [jssp, #16]
0xffff8bd32fd8  1656  ldp d0, d1, [jssp], #32
0xffff8bd32fdc  1660  ldp d6, d7, [jssp, #16]
0xffff8bd32fe0  1664  ldp d4, d5, [jssp], #32
0xffff8bd32fe4  1668  ldp d18, d19, [jssp, #16]
0xffff8bd32fe8  1672  ldp d16, d17, [jssp], #32
0xffff8bd32fec  1676  ldp d22, d23, [jssp, #16]
0xffff8bd32ff0  1680  ldp d20, d21, [jssp], #32
0xffff8bd32ff4  1684  ldp d26, d27, [jssp, #16]
0xffff8bd32ff8  1688  ldp d24, d25, [jssp], #32
0xffff8bd32ffc  1692  ldp d28, d29, [jssp], #16
0xffff8bd33000  1696  ldp x5, x6, [jssp, #16]
0xffff8bd33004  1700  ldp x2, x4, [jssp], #32
0xffff8bd33008  1704  ldp x9, x10, [jssp, #16]
0xffff8bd3300c  1708  ldp x7, x8, [jssp], #32
0xffff8bd33010  1712  ldp x13, x14, [jssp, #16]
0xffff8bd33014  1716  ldp x11, x12, [jssp], #32
0xffff8bd33018  1720  ldr lr, [jssp, #16]
0xffff8bd3301c  1724  ldp x15, x18, [jssp], #24
0xffff8bd33020  1728  ldp x3, x0, [jssp], #16
0xffff8bd33024  1732  ret
0xffff8bd33028  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd3302c  1740  d63f03e0       constant
0xffff8bd33030  1744  2cb8e8c0       constant
0xffff8bd33034  1748  00000000       constant
0xffff8bd33038  1752  8bd065a0       constant
0xffff8bd3303c  1756  0000ffff       constant
0xffff8bd33040  1760  2cb8e8c0       constant
0xffff8bd33044  1764  00000000       constant
0xffff8bd33048  1768  8bd065a0       constant
0xffff8bd3304c  1772  0000ffff       constant
0xffff8bd33050  1776  2cb8e8c0       constant
0xffff8bd33054  1780  00000000       constant
0xffff8bd33058  1784  8bd065a0       constant
0xffff8bd3305c  1788  0000ffff       constant
0xffff8bd33060  1792  2cb8d2d0       constant
0xffff8bd33064  1796  00000000       constant
0xffff8bd33068  1800  00c2d958       constant
0xffff8bd3306c  1804  00000000       constant
0xffff8bd33070  1808  2cb8e8c0       constant
0xffff8bd33074  1812  00000000       constant
0xffff8bd33078  1816  8bd065a0       constant
0xffff8bd3307c  1820  0000ffff       constant
0xffff8bd33080  1824  2cb8d2d0       constant
0xffff8bd33084  1828  00000000       constant
0xffff8bd33088  1832  00c2d958       constant
0xffff8bd3308c  1836  00000000       constant
0xffff8bd33090  1840  2cb8e8c0       constant
0xffff8bd33094  1844  00000000       constant
0xffff8bd33098  1848  8bd065a0       constant
0xffff8bd3309c  1852  0000ffff       constant
0xffff8bd330a0  1856  2cb8e8c0       constant
0xffff8bd330a4  1860  00000000       constant
0xffff8bd330a8  1864  8bd065a0       constant
0xffff8bd330ac  1868  0000ffff       constant
0xffff8bd330b0  1872  2cb8d2d0       constant
0xffff8bd330b4  1876  00000000       constant
0xffff8bd330b8  1880  00c2d958       constant
0xffff8bd330bc  1884  00000000       constant
0xffff8bd330c0  1888  2cb8e8c0       constant
0xffff8bd330c4  1892  00000000       constant
0xffff8bd330c8  1896  8bd065a0       constant
0xffff8bd330cc  1900  0000ffff       constant
0xffff8bd330d0  1904  2cb8d2d0       constant
0xffff8bd330d4  1908  00000000       constant
0xffff8bd330d8  1912  00c2d958       constant
0xffff8bd330dc  1916  00000000       constant


RelocInfo (size = 65)
0xffff8bd32968  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd3298c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd32a04  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd32a28  code target (STUB)  (0xffff8bd065a0)
0xffff8bd32a68  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd32a8c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd32afc  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd32b00  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd32b5c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd32b80  code target (STUB)  (0xffff8bd065a0)
0xffff8bd32c60  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd32c64  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd32d28  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd32d4c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd32dac  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd32dd0  code target (STUB)  (0xffff8bd065a0)
0xffff8bd32e40  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd32e44  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd32ea0  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd32ec4  code target (STUB)  (0xffff8bd065a0)
0xffff8bd32fc4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd32fc8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd33028  constant pool (size 184)


kind = STUB
major_key = FastCloneShallowArrayStub
name = FastCloneShallowArrayStub
compiler = crankshaft
Instructions (size = 1902)
0xffff8bd33140     0  ldur x0, [x3, #47]
0xffff8bd33144     4  asr x4, x2, #32
0xffff8bd33148     8  add x5, x0, #0x17 (23)
0xffff8bd3314c    12  ldr x6, [x5, w4, sxtw #3]
0xffff8bd33150    16  ldr x0, pc+1456 (addr 0x0000ffff8bd33700)    ;; object: 0x26c04241 <undefined>
0xffff8bd33154    20  cmp x6, x0
0xffff8bd33158    24  b.eq #+0x33c (addr 0xffff8bd33494)
0xffff8bd3315c    28  ldur x0, [x6, #7]
0xffff8bd33160    32  ldur x1, [x0, #15]
0xffff8bd33164    36  ldur w2, [x1, #11]
0xffff8bd33168    40  cbz w2, #+0x2c0 (addr 0xffff8bd33428)
0xffff8bd3316c    44  ldur x3, [x1, #-1]
0xffff8bd33170    48  ldr x16, pc+1432 (addr 0x0000ffff8bd33708)    ;; object: 0x5f504361 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd33174    52  cmp x3, x16
0xffff8bd33178    56  b.eq #+0x24c (addr 0xffff8bd333c4)
0xffff8bd3317c    60  ldur x1, [x1, #-1]
0xffff8bd33180    64  ldr x16, pc+1424 (addr 0x0000ffff8bd33710)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd33184    68  cmp x1, x16
0xffff8bd33188    72  b.eq #+0x120 (addr 0xffff8bd332a8)
0xffff8bd3318c    76  lsl w1, w2, #3
0xffff8bd33190    80  add w1, w1, #0x10 (16)
0xffff8bd33194    84  movz x3, #0xe2c0
0xffff8bd33198    88  movk x3, #0x2cb8, lsl #16
0xffff8bd3319c    92  ldp x4, x2, [x3]
0xffff8bd331a0    96  adds x16, x4, #0x30 (48)
0xffff8bd331a4   100  ccmp x16, x2, #nzCv, lo
0xffff8bd331a8   104  b.hi #+0x2f0 (addr 0xffff8bd33498)
0xffff8bd331ac   108  str x16, [x3]
0xffff8bd331b0   112  orr x4, x4, #0x1
0xffff8bd331b4   116  ldur x2, [x0, #-1]
0xffff8bd331b8   120  stur x2, [x4, #-1]
0xffff8bd331bc   124  ldr x2, pc+1372 (addr 0x0000ffff8bd33718)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd331c0   128  stur x2, [x4, #7]
0xffff8bd331c4   132  ldr x2, pc+1372 (addr 0x0000ffff8bd33720)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd331c8   136  stur x2, [x4, #15]
0xffff8bd331cc   140  movz x2, #0x0
0xffff8bd331d0   144  stur x2, [x4, #23]
0xffff8bd331d4   148  add x2, x4, #0x20 (32)
0xffff8bd331d8   152  ldr x3, pc+1360 (addr 0x0000ffff8bd33728)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd331dc   156  stur x3, [x2, #-1]
0xffff8bd331e0   160  stur x6, [x2, #7]
0xffff8bd331e4   164  ldur w2, [x6, #35]
0xffff8bd331e8   168  add w2, w2, #0x1 (1)
0xffff8bd331ec   172  lsl x2, x2, #32
0xffff8bd331f0   176  stur x2, [x6, #31]
0xffff8bd331f4   180  sxtw x1, w1
0xffff8bd331f8   184  movz x2, #0xe2c0
0xffff8bd331fc   188  movk x2, #0x2cb8, lsl #16
0xffff8bd33200   192  ldp x5, x16, [x2]
0xffff8bd33204   196  adds x3, x5, x1
0xffff8bd33208   200  ccmp x3, x16, #nzCv, lo
0xffff8bd3320c   204  b.hi #+0x2f0 (addr 0xffff8bd334fc)
0xffff8bd33210   208  str x3, [x2]
0xffff8bd33214   212  orr x5, x5, #0x1
0xffff8bd33218   216  mov x1, x5
0xffff8bd3321c   220  stur x1, [x4, #15]
0xffff8bd33220   224  add x2, x4, #0xf (15)
0xffff8bd33224   228  and x1, x4, #0xfffffffffff00000
0xffff8bd33228   232  ldr x1, [x1, #8]
0xffff8bd3322c   236  tbz w1, #2, #+0x18 (addr 0xffff8bd33244)
0xffff8bd33230   240  sub csp, jssp, #0x8 (8)
0xffff8bd33234   244  str lr, [jssp, #-8]!
0xffff8bd33238   248  ldr x16, pc+1272 (addr 0x0000ffff8bd33730)    ;; code: STUB, RecordWriteStub, minor: 67620
0xffff8bd3323c   252  blr x16
0xffff8bd33240   256  ldr lr, [jssp], #8
0xffff8bd33244   260  ldur x1, [x0, #15]
0xffff8bd33248   264  ldur x2, [x1, #-1]
0xffff8bd3324c   268  stur x2, [x5, #-1]
0xffff8bd33250   272  ldur w2, [x1, #11]
0xffff8bd33254   276  lsl x2, x2, #32
0xffff8bd33258   280  stur x2, [x5, #7]
0xffff8bd3325c   284  ldur w0, [x0, #27]
0xffff8bd33260   288  lsl x2, x0, #32
0xffff8bd33264   292  stur x2, [x4, #23]
0xffff8bd33268   296  ldr d0, pc+1168 (addr 0x0000ffff8bd336f8)
0xffff8bd3326c   300  ldur w2, [x5, #11]
0xffff8bd33270   304  cmp w0, w2
0xffff8bd33274   308  b.ge #+0x14 (addr 0xffff8bd33288)
0xffff8bd33278   312  sub w2, w2, #0x1 (1)
0xffff8bd3327c   316  add x3, x5, #0xf (15)
0xffff8bd33280   320  str d0, [x3, w2, sxtw #3]
0xffff8bd33284   324  b #-0x14 (addr 0xffff8bd33270)
0xffff8bd33288   328  cmp w0, #0x0 (0)
0xffff8bd3328c   332  b.le #+0x200 (addr 0xffff8bd3348c)
0xffff8bd33290   336  sub w0, w0, #0x1 (1)
0xffff8bd33294   340  add x2, x1, #0xf (15)
0xffff8bd33298   344  ldr d0, [x2, w0, sxtw #3]
0xffff8bd3329c   348  add x2, x5, #0xf (15)
0xffff8bd332a0   352  str d0, [x2, w0, sxtw #3]
0xffff8bd332a4   356  b #-0x1c (addr 0xffff8bd33288)
0xffff8bd332a8   360  lsl w1, w2, #3
0xffff8bd332ac   364  add w1, w1, #0x10 (16)
0xffff8bd332b0   368  movz x3, #0xe2c0
0xffff8bd332b4   372  movk x3, #0x2cb8, lsl #16
0xffff8bd332b8   376  ldp x4, x2, [x3]
0xffff8bd332bc   380  adds x16, x4, #0x30 (48)
0xffff8bd332c0   384  ccmp x16, x2, #nzCv, lo
0xffff8bd332c4   388  b.hi #+0x29c (addr 0xffff8bd33560)
0xffff8bd332c8   392  str x16, [x3]
0xffff8bd332cc   396  orr x4, x4, #0x1
0xffff8bd332d0   400  ldur x2, [x0, #-1]
0xffff8bd332d4   404  stur x2, [x4, #-1]
0xffff8bd332d8   408  ldr x2, pc+1120 (addr 0x0000ffff8bd33738)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd332dc   412  stur x2, [x4, #7]
0xffff8bd332e0   416  ldr x2, pc+1120 (addr 0x0000ffff8bd33740)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd332e4   420  stur x2, [x4, #15]
0xffff8bd332e8   424  movz x2, #0x0
0xffff8bd332ec   428  stur x2, [x4, #23]
0xffff8bd332f0   432  add x2, x4, #0x20 (32)
0xffff8bd332f4   436  ldr x3, pc+1108 (addr 0x0000ffff8bd33748)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd332f8   440  stur x3, [x2, #-1]
0xffff8bd332fc   444  stur x6, [x2, #7]
0xffff8bd33300   448  ldur w2, [x6, #35]
0xffff8bd33304   452  add w2, w2, #0x1 (1)
0xffff8bd33308   456  lsl x2, x2, #32
0xffff8bd3330c   460  stur x2, [x6, #31]
0xffff8bd33310   464  sxtw x1, w1
0xffff8bd33314   468  movz x2, #0xe2c0
0xffff8bd33318   472  movk x2, #0x2cb8, lsl #16
0xffff8bd3331c   476  ldp x5, x16, [x2]
0xffff8bd33320   480  adds x3, x5, x1
0xffff8bd33324   484  ccmp x3, x16, #nzCv, lo
0xffff8bd33328   488  b.hi #+0x29c (addr 0xffff8bd335c4)
0xffff8bd3332c   492  str x3, [x2]
0xffff8bd33330   496  orr x5, x5, #0x1
0xffff8bd33334   500  mov x1, x5
0xffff8bd33338   504  stur x1, [x4, #15]
0xffff8bd3333c   508  add x2, x4, #0xf (15)
0xffff8bd33340   512  and x1, x4, #0xfffffffffff00000
0xffff8bd33344   516  ldr x1, [x1, #8]
0xffff8bd33348   520  tbz w1, #2, #+0x18 (addr 0xffff8bd33360)
0xffff8bd3334c   524  sub csp, jssp, #0x8 (8)
0xffff8bd33350   528  str lr, [jssp, #-8]!
0xffff8bd33354   532  ldr x16, pc+1020 (addr 0x0000ffff8bd33750)    ;; code: STUB, RecordWriteStub, minor: 67620
0xffff8bd33358   536  blr x16
0xffff8bd3335c   540  ldr lr, [jssp], #8
0xffff8bd33360   544  ldur x1, [x0, #15]
0xffff8bd33364   548  ldur x2, [x1, #-1]
0xffff8bd33368   552  stur x2, [x5, #-1]
0xffff8bd3336c   556  ldur w2, [x1, #11]
0xffff8bd33370   560  lsl x2, x2, #32
0xffff8bd33374   564  stur x2, [x5, #7]
0xffff8bd33378   568  ldur w0, [x0, #27]
0xffff8bd3337c   572  lsl x2, x0, #32
0xffff8bd33380   576  stur x2, [x4, #23]
0xffff8bd33384   580  ldur w2, [x5, #11]
0xffff8bd33388   584  cmp w0, w2
0xffff8bd3338c   588  b.ge #+0x18 (addr 0xffff8bd333a4)
0xffff8bd33390   592  sub w2, w2, #0x1 (1)
0xffff8bd33394   596  ldr x3, pc+964 (addr 0x0000ffff8bd33758)    ;; object: 0x26c04519 <the hole>
0xffff8bd33398   600  add x6, x5, #0xf (15)
0xffff8bd3339c   604  str x3, [x6, w2, sxtw #3]
0xffff8bd333a0   608  b #-0x18 (addr 0xffff8bd33388)
0xffff8bd333a4   612  cmp w0, #0x0 (0)
0xffff8bd333a8   616  b.le #+0xe4 (addr 0xffff8bd3348c)
0xffff8bd333ac   620  sub w0, w0, #0x1 (1)
0xffff8bd333b0   624  add x2, x1, #0xf (15)
0xffff8bd333b4   628  ldr x3, [x2, w0, sxtw #3]
0xffff8bd333b8   632  add x2, x5, #0xf (15)
0xffff8bd333bc   636  str x3, [x2, w0, sxtw #3]
0xffff8bd333c0   640  b #-0x1c (addr 0xffff8bd333a4)
0xffff8bd333c4   644  movz x3, #0xe2c0
0xffff8bd333c8   648  movk x3, #0x2cb8, lsl #16
0xffff8bd333cc   652  ldp x4, x2, [x3]
0xffff8bd333d0   656  adds x16, x4, #0x30 (48)
0xffff8bd333d4   660  ccmp x16, x2, #nzCv, lo
0xffff8bd333d8   664  b.hi #+0x250 (addr 0xffff8bd33628)
0xffff8bd333dc   668  str x16, [x3]
0xffff8bd333e0   672  orr x4, x4, #0x1
0xffff8bd333e4   676  ldur x2, [x0, #-1]
0xffff8bd333e8   680  ldur w0, [x0, #27]
0xffff8bd333ec   684  stur x2, [x4, #-1]
0xffff8bd333f0   688  ldr x2, pc+880 (addr 0x0000ffff8bd33760)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd333f4   692  stur x2, [x4, #7]
0xffff8bd333f8   696  stur x1, [x4, #15]
0xffff8bd333fc   700  lsl x0, x0, #32
0xffff8bd33400   704  stur x0, [x4, #23]
0xffff8bd33404   708  add x0, x4, #0x20 (32)
0xffff8bd33408   712  ldr x1, pc+864 (addr 0x0000ffff8bd33768)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd3340c   716  stur x1, [x0, #-1]
0xffff8bd33410   720  stur x6, [x0, #7]
0xffff8bd33414   724  ldur w0, [x6, #35]
0xffff8bd33418   728  add w0, w0, #0x1 (1)
0xffff8bd3341c   732  lsl x0, x0, #32
0xffff8bd33420   736  stur x0, [x6, #31]
0xffff8bd33424   740  b #+0x68 (addr 0xffff8bd3348c)
0xffff8bd33428   744  movz x2, #0xe2c0
0xffff8bd3342c   748  movk x2, #0x2cb8, lsl #16
0xffff8bd33430   752  ldp x3, x1, [x2]
0xffff8bd33434   756  adds x16, x3, #0x30 (48)
0xffff8bd33438   760  ccmp x16, x1, #nzCv, lo
0xffff8bd3343c   764  b.hi #+0x250 (addr 0xffff8bd3368c)
0xffff8bd33440   768  str x16, [x2]
0xffff8bd33444   772  orr x3, x3, #0x1
0xffff8bd33448   776  ldur x0, [x0, #-1]
0xffff8bd3344c   780  stur x0, [x3, #-1]
0xffff8bd33450   784  ldr x0, pc+800 (addr 0x0000ffff8bd33770)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd33454   788  stur x0, [x3, #7]
0xffff8bd33458   792  ldr x0, pc+800 (addr 0x0000ffff8bd33778)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd3345c   796  stur x0, [x3, #15]
0xffff8bd33460   800  movz x0, #0x0
0xffff8bd33464   804  stur x0, [x3, #23]
0xffff8bd33468   808  add x0, x3, #0x20 (32)
0xffff8bd3346c   812  ldr x1, pc+788 (addr 0x0000ffff8bd33780)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd33470   816  stur x1, [x0, #-1]
0xffff8bd33474   820  stur x6, [x0, #7]
0xffff8bd33478   824  ldur w0, [x6, #35]
0xffff8bd3347c   828  add w0, w0, #0x1 (1)
0xffff8bd33480   832  lsl x0, x0, #32
0xffff8bd33484   836  stur x0, [x6, #31]
0xffff8bd33488   840  mov x4, x3
0xffff8bd3348c   844  mov x0, x4
0xffff8bd33490   848  ret
0xffff8bd33494   852  b #+0x384 (addr 0xffff8bd33818)
0xffff8bd33498   856  sub csp, jssp, #0x10 (16)
0xffff8bd3349c   860  stp fp, lr, [jssp, #-16]!
0xffff8bd334a0   864  movz fp, #0xa00000000
0xffff8bd334a4   868  sub csp, jssp, #0x8 (8)
0xffff8bd334a8   872  str fp, [jssp, #-8]!
0xffff8bd334ac   876  add fp, jssp, #0x8 (8)
0xffff8bd334b0   880  movz x4, #0x0
0xffff8bd334b4   884  mov x16, lr
0xffff8bd334b8   888  ldr x17, pc+720 (addr 0x0000ffff8bd33788)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd334bc   892  blr x17
0xffff8bd334c0   896  movz x0, #0x3000000000
0xffff8bd334c4   900  movz x10, #0x0
0xffff8bd334c8   904  sub csp, jssp, #0x10 (16)
0xffff8bd334cc   908  stp x10, x0, [jssp, #-16]!
0xffff8bd334d0   912  movz x0, #0x2
0xffff8bd334d4   916  movz x1, #0x5b88
0xffff8bd334d8   920  movk x1, #0xe2, lsl #16
0xffff8bd334dc   924  ldr x16, pc+692 (addr 0x0000ffff8bd33790)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd334e0   928  blr x16
0xffff8bd334e4   932  str x0, [jssp, #32]
0xffff8bd334e8   936  ldr x16, pc+688 (addr 0x0000ffff8bd33798)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd334ec   940  blr x16
0xffff8bd334f0   944  ldr lr, [jssp, #16]
0xffff8bd334f4   948  ldp xzr, fp, [jssp], #24
0xffff8bd334f8   952  b #-0x344 (addr 0xffff8bd331b4)
0xffff8bd334fc   956  sub csp, jssp, #0x10 (16)
0xffff8bd33500   960  stp fp, lr, [jssp, #-16]!
0xffff8bd33504   964  movz fp, #0xa00000000
0xffff8bd33508   968  sub csp, jssp, #0x8 (8)
0xffff8bd3350c   972  str fp, [jssp, #-8]!
0xffff8bd33510   976  add fp, jssp, #0x8 (8)
0xffff8bd33514   980  movz x5, #0x0
0xffff8bd33518   984  mov x16, lr
0xffff8bd3351c   988  ldr x17, pc+644 (addr 0x0000ffff8bd337a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd33520   992  blr x17
0xffff8bd33524   996  lsl x0, x1, #32
0xffff8bd33528  1000  movz x10, #0x100000000
0xffff8bd3352c  1004  sub csp, jssp, #0x10 (16)
0xffff8bd33530  1008  stp x10, x0, [jssp, #-16]!
0xffff8bd33534  1012  movz x0, #0x2
0xffff8bd33538  1016  movz x1, #0x5b88
0xffff8bd3353c  1020  movk x1, #0xe2, lsl #16
0xffff8bd33540  1024  ldr x16, pc+616 (addr 0x0000ffff8bd337a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd33544  1028  blr x16
0xffff8bd33548  1032  str x0, [jssp, #40]
0xffff8bd3354c  1036  ldr x16, pc+612 (addr 0x0000ffff8bd337b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd33550  1040  blr x16
0xffff8bd33554  1044  ldr lr, [jssp, #16]
0xffff8bd33558  1048  ldp xzr, fp, [jssp], #24
0xffff8bd3355c  1052  b #-0x344 (addr 0xffff8bd33218)
0xffff8bd33560  1056  sub csp, jssp, #0x10 (16)
0xffff8bd33564  1060  stp fp, lr, [jssp, #-16]!
0xffff8bd33568  1064  movz fp, #0xa00000000
0xffff8bd3356c  1068  sub csp, jssp, #0x8 (8)
0xffff8bd33570  1072  str fp, [jssp, #-8]!
0xffff8bd33574  1076  add fp, jssp, #0x8 (8)
0xffff8bd33578  1080  movz x4, #0x0
0xffff8bd3357c  1084  mov x16, lr
0xffff8bd33580  1088  ldr x17, pc+568 (addr 0x0000ffff8bd337b8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd33584  1092  blr x17
0xffff8bd33588  1096  movz x0, #0x3000000000
0xffff8bd3358c  1100  movz x10, #0x0
0xffff8bd33590  1104  sub csp, jssp, #0x10 (16)
0xffff8bd33594  1108  stp x10, x0, [jssp, #-16]!
0xffff8bd33598  1112  movz x0, #0x2
0xffff8bd3359c  1116  movz x1, #0x5b88
0xffff8bd335a0  1120  movk x1, #0xe2, lsl #16
0xffff8bd335a4  1124  ldr x16, pc+540 (addr 0x0000ffff8bd337c0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd335a8  1128  blr x16
0xffff8bd335ac  1132  str x0, [jssp, #32]
0xffff8bd335b0  1136  ldr x16, pc+536 (addr 0x0000ffff8bd337c8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd335b4  1140  blr x16
0xffff8bd335b8  1144  ldr lr, [jssp, #16]
0xffff8bd335bc  1148  ldp xzr, fp, [jssp], #24
0xffff8bd335c0  1152  b #-0x2f0 (addr 0xffff8bd332d0)
0xffff8bd335c4  1156  sub csp, jssp, #0x10 (16)
0xffff8bd335c8  1160  stp fp, lr, [jssp, #-16]!
0xffff8bd335cc  1164  movz fp, #0xa00000000
0xffff8bd335d0  1168  sub csp, jssp, #0x8 (8)
0xffff8bd335d4  1172  str fp, [jssp, #-8]!
0xffff8bd335d8  1176  add fp, jssp, #0x8 (8)
0xffff8bd335dc  1180  movz x5, #0x0
0xffff8bd335e0  1184  mov x16, lr
0xffff8bd335e4  1188  ldr x17, pc+492 (addr 0x0000ffff8bd337d0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd335e8  1192  blr x17
0xffff8bd335ec  1196  lsl x0, x1, #32
0xffff8bd335f0  1200  movz x10, #0x0
0xffff8bd335f4  1204  sub csp, jssp, #0x10 (16)
0xffff8bd335f8  1208  stp x10, x0, [jssp, #-16]!
0xffff8bd335fc  1212  movz x0, #0x2
0xffff8bd33600  1216  movz x1, #0x5b88
0xffff8bd33604  1220  movk x1, #0xe2, lsl #16
0xffff8bd33608  1224  ldr x16, pc+464 (addr 0x0000ffff8bd337d8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd3360c  1228  blr x16
0xffff8bd33610  1232  str x0, [jssp, #40]
0xffff8bd33614  1236  ldr x16, pc+460 (addr 0x0000ffff8bd337e0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd33618  1240  blr x16
0xffff8bd3361c  1244  ldr lr, [jssp, #16]
0xffff8bd33620  1248  ldp xzr, fp, [jssp], #24
0xffff8bd33624  1252  b #-0x2f0 (addr 0xffff8bd33334)
0xffff8bd33628  1256  sub csp, jssp, #0x10 (16)
0xffff8bd3362c  1260  stp fp, lr, [jssp, #-16]!
0xffff8bd33630  1264  movz fp, #0xa00000000
0xffff8bd33634  1268  sub csp, jssp, #0x8 (8)
0xffff8bd33638  1272  str fp, [jssp, #-8]!
0xffff8bd3363c  1276  add fp, jssp, #0x8 (8)
0xffff8bd33640  1280  movz x4, #0x0
0xffff8bd33644  1284  mov x16, lr
0xffff8bd33648  1288  ldr x17, pc+416 (addr 0x0000ffff8bd337e8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd3364c  1292  blr x17
0xffff8bd33650  1296  movz x0, #0x3000000000
0xffff8bd33654  1300  movz x10, #0x0
0xffff8bd33658  1304  sub csp, jssp, #0x10 (16)
0xffff8bd3365c  1308  stp x10, x0, [jssp, #-16]!
0xffff8bd33660  1312  movz x0, #0x2
0xffff8bd33664  1316  movz x1, #0x5b88
0xffff8bd33668  1320  movk x1, #0xe2, lsl #16
0xffff8bd3366c  1324  ldr x16, pc+388 (addr 0x0000ffff8bd337f0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd33670  1328  blr x16
0xffff8bd33674  1332  str x0, [jssp, #32]
0xffff8bd33678  1336  ldr x16, pc+384 (addr 0x0000ffff8bd337f8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd3367c  1340  blr x16
0xffff8bd33680  1344  ldr lr, [jssp, #16]
0xffff8bd33684  1348  ldp xzr, fp, [jssp], #24
0xffff8bd33688  1352  b #-0x2a4 (addr 0xffff8bd333e4)
0xffff8bd3368c  1356  sub csp, jssp, #0x10 (16)
0xffff8bd33690  1360  stp fp, lr, [jssp, #-16]!
0xffff8bd33694  1364  movz fp, #0xa00000000
0xffff8bd33698  1368  sub csp, jssp, #0x8 (8)
0xffff8bd3369c  1372  str fp, [jssp, #-8]!
0xffff8bd336a0  1376  add fp, jssp, #0x8 (8)
0xffff8bd336a4  1380  movz x3, #0x0
0xffff8bd336a8  1384  mov x16, lr
0xffff8bd336ac  1388  ldr x17, pc+340 (addr 0x0000ffff8bd33800)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd336b0  1392  blr x17
0xffff8bd336b4  1396  movz x0, #0x3000000000
0xffff8bd336b8  1400  movz x10, #0x0
0xffff8bd336bc  1404  sub csp, jssp, #0x10 (16)
0xffff8bd336c0  1408  stp x10, x0, [jssp, #-16]!
0xffff8bd336c4  1412  movz x0, #0x2
0xffff8bd336c8  1416  movz x1, #0x5b88
0xffff8bd336cc  1420  movk x1, #0xe2, lsl #16
0xffff8bd336d0  1424  ldr x16, pc+312 (addr 0x0000ffff8bd33808)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd336d4  1428  blr x16
0xffff8bd336d8  1432  str x0, [jssp, #24]
0xffff8bd336dc  1436  ldr x16, pc+308 (addr 0x0000ffff8bd33810)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd336e0  1440  blr x16
0xffff8bd336e4  1444  ldr lr, [jssp, #16]
0xffff8bd336e8  1448  ldp xzr, fp, [jssp], #24
0xffff8bd336ec  1452  b #-0x2a4 (addr 0xffff8bd33448)
0xffff8bd336f0  1456  5800093f       constant pool begin (num_const = 73)    ;; constant pool
0xffff8bd336f4  1460  d63f03e0       constant
0xffff8bd336f8  1464  fff7ffff       constant
0xffff8bd336fc  1468  fff7ffff       constant
0xffff8bd33700  1472  26c04241       constant
0xffff8bd33704  1476  00000000       constant
0xffff8bd33708  1480  5f504361       constant
0xffff8bd3370c  1484  00000000       constant
0xffff8bd33710  1488  5f504259       constant
0xffff8bd33714  1492  00000000       constant
0xffff8bd33718  1496  26c04201       constant
0xffff8bd3371c  1500  00000000       constant
0xffff8bd33720  1504  26c04201       constant
0xffff8bd33724  1508  00000000       constant
0xffff8bd33728  1512  5f505d81       constant
0xffff8bd3372c  1516  00000000       constant
0xffff8bd33730  1520  8bd32960       constant
0xffff8bd33734  1524  0000ffff       constant
0xffff8bd33738  1528  26c04201       constant
0xffff8bd3373c  1532  00000000       constant
0xffff8bd33740  1536  26c04201       constant
0xffff8bd33744  1540  00000000       constant
0xffff8bd33748  1544  5f505d81       constant
0xffff8bd3374c  1548  00000000       constant
0xffff8bd33750  1552  8bd32960       constant
0xffff8bd33754  1556  0000ffff       constant
0xffff8bd33758  1560  26c04519       constant
0xffff8bd3375c  1564  00000000       constant
0xffff8bd33760  1568  26c04201       constant
0xffff8bd33764  1572  00000000       constant
0xffff8bd33768  1576  5f505d81       constant
0xffff8bd3376c  1580  00000000       constant
0xffff8bd33770  1584  26c04201       constant
0xffff8bd33774  1588  00000000       constant
0xffff8bd33778  1592  26c04201       constant
0xffff8bd3377c  1596  00000000       constant
0xffff8bd33780  1600  5f505d81       constant
0xffff8bd33784  1604  00000000       constant
0xffff8bd33788  1608  8bd06820       constant
0xffff8bd3378c  1612  0000ffff       constant
0xffff8bd33790  1616  8bd06260       constant
0xffff8bd33794  1620  0000ffff       constant
0xffff8bd33798  1624  8bd068e0       constant
0xffff8bd3379c  1628  0000ffff       constant
0xffff8bd337a0  1632  8bd06820       constant
0xffff8bd337a4  1636  0000ffff       constant
0xffff8bd337a8  1640  8bd06260       constant
0xffff8bd337ac  1644  0000ffff       constant
0xffff8bd337b0  1648  8bd068e0       constant
0xffff8bd337b4  1652  0000ffff       constant
0xffff8bd337b8  1656  8bd06820       constant
0xffff8bd337bc  1660  0000ffff       constant
0xffff8bd337c0  1664  8bd06260       constant
0xffff8bd337c4  1668  0000ffff       constant
0xffff8bd337c8  1672  8bd068e0       constant
0xffff8bd337cc  1676  0000ffff       constant
0xffff8bd337d0  1680  8bd06820       constant
0xffff8bd337d4  1684  0000ffff       constant
0xffff8bd337d8  1688  8bd06260       constant
0xffff8bd337dc  1692  0000ffff       constant
0xffff8bd337e0  1696  8bd068e0       constant
0xffff8bd337e4  1700  0000ffff       constant
0xffff8bd337e8  1704  8bd06820       constant
0xffff8bd337ec  1708  0000ffff       constant
0xffff8bd337f0  1712  8bd06260       constant
0xffff8bd337f4  1716  0000ffff       constant
0xffff8bd337f8  1720  8bd068e0       constant
0xffff8bd337fc  1724  0000ffff       constant
0xffff8bd33800  1728  8bd06820       constant
0xffff8bd33804  1732  0000ffff       constant
0xffff8bd33808  1736  8bd06260       constant
0xffff8bd3380c  1740  0000ffff       constant
0xffff8bd33810  1744  8bd068e0       constant
0xffff8bd33814  1748  0000ffff       constant
0xffff8bd33818  1752  movz x16, #0x0
0xffff8bd3381c  1756  sub csp, jssp, #0x10 (16)
0xffff8bd33820  1760  stp fp, lr, [jssp, #-16]!
0xffff8bd33824  1764  bl #+0x4 (addr 0xffff8bd33828)
0xffff8bd33828  1768  movz x17, #0xa00000000
0xffff8bd3382c  1772  sub csp, jssp, #0x10 (16)
0xffff8bd33830  1776  stp x17, cp, [jssp, #-16]!
0xffff8bd33834  1780  add fp, jssp, #0x10 (16)
0xffff8bd33838  1784  ldr x17, pc+24 (addr 0x0000ffff8bd33850)    ;; lazy deoptimization bailout 0
0xffff8bd3383c  1788  add x17, x17, x16
0xffff8bd33840  1792  br x17
0xffff8bd33844  1796  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd33848  1800  d63f03e0       constant
0xffff8bd3384c  1804  d503201f       constant
0xffff8bd33850  1808  8bb06000       constant
0xffff8bd33854  1812  0000ffff       constant


Safepoints (size = 86)
0xffff8bd334e4   932  000 | x0 | x4 | x6 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd33548  1032  000 | x0 | x4 | x5 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd335ac  1132  000 | x0 | x4 | x6 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd33610  1232  000 | x0 | x4 | x5 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd33674  1332  000 | x0 | x1 | x4 | x6 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd336d8  1432  000 | x0 | x3 | x6 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 65)
0xffff8bd33150  embedded object  (0x26c04241 <undefined>)
0xffff8bd33170  embedded object  (0x5f504361 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd33180  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd331bc  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd331c4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd331d8  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd33238  code target (STUB)  (0xffff8bd32960)
0xffff8bd332d8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd332e0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd332f4  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd33354  code target (STUB)  (0xffff8bd32960)
0xffff8bd33394  embedded object  (0x26c04519 <the hole>)
0xffff8bd333f0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd33408  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd33450  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd33458  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd3346c  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd334b8  code target (STUB)  (0xffff8bd06820)
0xffff8bd334dc  code target (STUB)  (0xffff8bd06260)
0xffff8bd334e8  code target (STUB)  (0xffff8bd068e0)
0xffff8bd3351c  code target (STUB)  (0xffff8bd06820)
0xffff8bd33540  code target (STUB)  (0xffff8bd06260)
0xffff8bd3354c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd33580  code target (STUB)  (0xffff8bd06820)
0xffff8bd335a4  code target (STUB)  (0xffff8bd06260)
0xffff8bd335b0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd335e4  code target (STUB)  (0xffff8bd06820)
0xffff8bd33608  code target (STUB)  (0xffff8bd06260)
0xffff8bd33614  code target (STUB)  (0xffff8bd068e0)
0xffff8bd33648  code target (STUB)  (0xffff8bd06820)
0xffff8bd3366c  code target (STUB)  (0xffff8bd06260)
0xffff8bd33678  code target (STUB)  (0xffff8bd068e0)
0xffff8bd336ac  code target (STUB)  (0xffff8bd06820)
0xffff8bd336d0  code target (STUB)  (0xffff8bd06260)
0xffff8bd336dc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd336f0  constant pool (size 296)
0xffff8bd33838  runtime entry
0xffff8bd33844  constant pool (size 20)


kind = KEYED_STORE_IC
major_key = VectorKeyedStoreICTrampolineStub
ic_state = GENERIC
extra_ic_state = 0
name = VectorKeyedStoreICTrampolineStub
compiler = unknown
Instructions (size = 384)
0xffff8bd33920     0  ldur x3, [fp, #-16]
0xffff8bd33924     4  ldur x3, [x3, #31]
0xffff8bd33928     8  ldur x3, [x3, #87]
0xffff8bd3392c    12  add x5, x3, x4, asr #29
0xffff8bd33930    16  ldur x5, [x5, #15]
0xffff8bd33934    20  tbz w1, #0, #+0x140 (addr 0xffff8bd33a74)
0xffff8bd33938    24  ldur x6, [x1, #-1]
0xffff8bd3393c    28  ldur x7, [x5, #7]
0xffff8bd33940    32  cmp x7, x6
0xffff8bd33944    36  b.ne #+0x14 (addr 0xffff8bd33958)
0xffff8bd33948    40  add x5, x3, x4, asr #29
0xffff8bd3394c    44  ldur x5, [x5, #23]
0xffff8bd33950    48  add x5, x5, #0x5f (95)
0xffff8bd33954    52  br x5
0xffff8bd33958    56  ldur x7, [x5, #-1]
0xffff8bd3395c    60  ldr x16, [x26, #224]
0xffff8bd33960    64  cmp x7, x16
0xffff8bd33964    68  b.ne #+0x68 (addr 0xffff8bd339cc)
0xffff8bd33968    72  ldur x8, [x5, #7]
0xffff8bd3396c    76  add x8, x5, x8, asr #29
0xffff8bd33970    80  add x8, x8, #0xf (15)
0xffff8bd33974    84  add x5, x5, #0xf (15)
0xffff8bd33978    88  ldr x7, [x5]
0xffff8bd3397c    92  ldur x7, [x7, #7]
0xffff8bd33980    96  cmp x6, x7
0xffff8bd33984   100  b.ne #+0x38 (addr 0xffff8bd339bc)
0xffff8bd33988   104  ldr x8, [x5, #8]
0xffff8bd3398c   108  ldr x16, [x26, #40]
0xffff8bd33990   112  cmp x8, x16
0xffff8bd33994   116  b.ne #+0x10 (addr 0xffff8bd339a4)
0xffff8bd33998   120  ldr x5, [x5, #16]
0xffff8bd3399c   124  add x5, x5, #0x5f (95)
0xffff8bd339a0   128  br x5
0xffff8bd339a4   132  ldur x8, [x8, #7]
0xffff8bd339a8   136  tbz w8, #0, #+0xac (addr 0xffff8bd33a54)
0xffff8bd339ac   140  ldr x6, [x5, #16]
0xffff8bd339b0   144  mov x5, x8
0xffff8bd339b4   148  add x6, x6, #0x5f (95)
0xffff8bd339b8   152  br x6
0xffff8bd339bc   156  add x5, x5, #0x18 (24)
0xffff8bd339c0   160  cmp x5, x8
0xffff8bd339c4   164  b.lt #-0x4c (addr 0xffff8bd33978)
0xffff8bd339c8   168  b #+0x8c (addr 0xffff8bd33a54)
0xffff8bd339cc   172  ldr x16, [x26, #2400]
0xffff8bd339d0   176  cmp x5, x16
0xffff8bd339d4   180  b.ne #+0xc (addr 0xffff8bd339e0)
0xffff8bd339d8   184  ldr x16, pc+176 (addr 0x0000ffff8bd33a88)    ;; code: KEYED_STORE_IC, MEGAMORPHIC
0xffff8bd339dc   188  br x16
0xffff8bd339e0   192  cmp x2, x5
0xffff8bd339e4   196  b.ne #+0x70 (addr 0xffff8bd33a54)
0xffff8bd339e8   200  add x5, x3, x4, asr #29
0xffff8bd339ec   204  ldur x5, [x5, #23]
0xffff8bd339f0   208  ldur x7, [x5, #15]
0xffff8bd339f4   212  ldur x7, [x7, #7]
0xffff8bd339f8   216  cmp x6, x7
0xffff8bd339fc   220  b.ne #+0x10 (addr 0xffff8bd33a0c)
0xffff8bd33a00   224  ldur x5, [x5, #23]
0xffff8bd33a04   228  add x5, x5, #0x5f (95)
0xffff8bd33a08   232  br x5
0xffff8bd33a0c   236  ldur x8, [x5, #7]
0xffff8bd33a10   240  movz x16, #0x200000000
0xffff8bd33a14   244  cmp x8, x16
0xffff8bd33a18   248  b.eq #+0x3c (addr 0xffff8bd33a54)
0xffff8bd33a1c   252  add x8, x5, x8, asr #29
0xffff8bd33a20   256  add x8, x8, #0xf (15)
0xffff8bd33a24   260  add x5, x5, #0x1f (31)
0xffff8bd33a28   264  ldr x7, [x5]
0xffff8bd33a2c   268  ldur x7, [x7, #7]
0xffff8bd33a30   272  cmp x6, x7
0xffff8bd33a34   276  b.ne #+0x10 (addr 0xffff8bd33a44)
0xffff8bd33a38   280  ldr x5, [x5, #8]
0xffff8bd33a3c   284  add x5, x5, #0x5f (95)
0xffff8bd33a40   288  br x5
0xffff8bd33a44   292  add x5, x5, #0x10 (16)
0xffff8bd33a48   296  cmp x5, x8
0xffff8bd33a4c   300  b.lt #-0x24 (addr 0xffff8bd33a28)
0xffff8bd33a50   304  b #+0x4 (addr 0xffff8bd33a54)
0xffff8bd33a54   308  sub csp, jssp, #0x28 (40)
0xffff8bd33a58   312  stp x4, x0, [jssp, #-32]!
0xffff8bd33a5c   316  stp x2, x1, [jssp, #16]
0xffff8bd33a60   320  str x3, [jssp, #-8]!
0xffff8bd33a64   324  movz x0, #0x5
0xffff8bd33a68   328  ldr x1, pc+40 (addr 0x0000ffff8bd33a90)    ;; external reference (Runtime::KeyedStoreIC_Miss)
0xffff8bd33a6c   332  ldr x16, pc+44 (addr 0x0000ffff8bd33a98)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd33a70   336  br x16
0xffff8bd33a74   340  ldr x6, [x26, #120]
0xffff8bd33a78   344  b #-0x13c (addr 0xffff8bd3393c)
0xffff8bd33a7c   348  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd33a80   352  d63f03e0       constant
0xffff8bd33a84   356  d503201f       constant
0xffff8bd33a88   360  8bd25500       constant
0xffff8bd33a8c   364  0000ffff       constant
0xffff8bd33a90   368  00c88e08       constant
0xffff8bd33a94   372  00000000       constant
0xffff8bd33a98   376  8bd06060       constant
0xffff8bd33a9c   380  0000ffff       constant


RelocInfo (size = 14)
0xffff8bd339d8  code target (KEYED_STORE_IC)  (0xffff8bd25500)
0xffff8bd33a68  external reference (Runtime::KeyedStoreIC_Miss)  (0xc88e08)
0xffff8bd33a6c  code target (STUB)  (0xffff8bd06060)
0xffff8bd33a7c  constant pool (size 36)


kind = STUB
major_key = ArrayConstructorStub
name = ArrayConstructorStub_More_Than_One
compiler = unknown
Instructions (size = 288)
0xffff8bd33b00     0  ldur cp, [x1, #39]
0xffff8bd33b04     4  cmp x3, x1
0xffff8bd33b08     8  b.ne #+0x98 (addr 0xffff8bd33ba0)
0xffff8bd33b0c    12  ldr x16, [x26, #40]
0xffff8bd33b10    16  cmp x2, x16
0xffff8bd33b14    20  b.eq #+0x84 (addr 0xffff8bd33b98)
0xffff8bd33b18    24  ldursw x3, [x2, #11]
0xffff8bd33b1c    28  and x3, x3, #0x7fff
0xffff8bd33b20    32  cbnz x3, #+0xc (addr 0xffff8bd33b2c)
0xffff8bd33b24    36  ldr x16, pc+164 (addr 0x0000ffff8bd33bc8)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 0
0xffff8bd33b28    40  br x16
0xffff8bd33b2c    44  cmp x3, #0x1 (1)
0xffff8bd33b30    48  b.ne #+0xc (addr 0xffff8bd33b3c)
0xffff8bd33b34    52  ldr x16, pc+156 (addr 0x0000ffff8bd33bd0)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 1
0xffff8bd33b38    56  br x16
0xffff8bd33b3c    60  cmp x3, #0x4 (4)
0xffff8bd33b40    64  b.ne #+0xc (addr 0xffff8bd33b4c)
0xffff8bd33b44    68  ldr x16, pc+148 (addr 0x0000ffff8bd33bd8)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 4
0xffff8bd33b48    72  br x16
0xffff8bd33b4c    76  cmp x3, #0x5 (5)
0xffff8bd33b50    80  b.ne #+0xc (addr 0xffff8bd33b5c)
0xffff8bd33b54    84  ldr x16, pc+140 (addr 0x0000ffff8bd33be0)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 5
0xffff8bd33b58    88  br x16
0xffff8bd33b5c    92  cmp x3, #0x2 (2)
0xffff8bd33b60    96  b.ne #+0xc (addr 0xffff8bd33b6c)
0xffff8bd33b64   100  ldr x16, pc+132 (addr 0x0000ffff8bd33be8)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 2
0xffff8bd33b68   104  br x16
0xffff8bd33b6c   108  cmp x3, #0x3 (3)
0xffff8bd33b70   112  b.ne #+0xc (addr 0xffff8bd33b7c)
0xffff8bd33b74   116  ldr x16, pc+124 (addr 0x0000ffff8bd33bf0)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 3
0xffff8bd33b78   120  br x16
0xffff8bd33b7c   124  movz x0, #0x9f00000000
0xffff8bd33b80   128  sub csp, jssp, #0x8 (8)
0xffff8bd33b84   132  str x0, [jssp, #-8]!
0xffff8bd33b88   136  movz x0, #0x1
0xffff8bd33b8c   140  ldr x1, pc+108 (addr 0x0000ffff8bd33bf8)    ;; external reference (Runtime::Abort)
0xffff8bd33b90   144  ldr x16, pc+112 (addr 0x0000ffff8bd33c00)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd33b94   148  blr x16
0xffff8bd33b98   152  ldr x16, pc+112 (addr 0x0000ffff8bd33c08)    ;; code: STUB, ArrayNArgumentsConstructorStub, minor: 256
0xffff8bd33b9c   156  br x16
0xffff8bd33ba0   160  str x1, [jssp, x0, lsl #3]
0xffff8bd33ba4   164  add x0, x0, #0x3 (3)
0xffff8bd33ba8   168  sub csp, jssp, #0x10 (16)
0xffff8bd33bac   172  stp x2, x3, [jssp, #-16]!
0xffff8bd33bb0   176  ldr x1, pc+96 (addr 0x0000ffff8bd33c10)    ;; external reference (Runtime::NewArray)
0xffff8bd33bb4   180  ldr x16, pc+100 (addr 0x0000ffff8bd33c18)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd33bb8   184  br x16
0xffff8bd33bbc   188  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff8bd33bc0   192  d63f03e0       constant
0xffff8bd33bc4   196  d503201f       constant
0xffff8bd33bc8   200  8bd09fe0       constant
0xffff8bd33bcc   204  0000ffff       constant
0xffff8bd33bd0   208  8bd0a560       constant
0xffff8bd33bd4   212  0000ffff       constant
0xffff8bd33bd8   216  8bd0aae0       constant
0xffff8bd33bdc   220  0000ffff       constant
0xffff8bd33be0   224  8bd0ad40       constant
0xffff8bd33be4   228  0000ffff       constant
0xffff8bd33be8   232  8bd0afa0       constant
0xffff8bd33bec   236  0000ffff       constant
0xffff8bd33bf0   240  8bd0b1e0       constant
0xffff8bd33bf4   244  0000ffff       constant
0xffff8bd33bf8   248  00eda820       constant
0xffff8bd33bfc   252  00000000       constant
0xffff8bd33c00   256  8bd06060       constant
0xffff8bd33c04   260  0000ffff       constant
0xffff8bd33c08   264  8bd0a300       constant
0xffff8bd33c0c   268  0000ffff       constant
0xffff8bd33c10   272  00de2850       constant
0xffff8bd33c14   276  00000000       constant
0xffff8bd33c18   280  8bd06060       constant
0xffff8bd33c1c   284  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd33b24  code target (STUB)  (0xffff8bd09fe0)
0xffff8bd33b34  code target (STUB)  (0xffff8bd0a560)
0xffff8bd33b44  code target (STUB)  (0xffff8bd0aae0)
0xffff8bd33b54  code target (STUB)  (0xffff8bd0ad40)
0xffff8bd33b64  code target (STUB)  (0xffff8bd0afa0)
0xffff8bd33b74  code target (STUB)  (0xffff8bd0b1e0)
0xffff8bd33b8c  external reference (Runtime::Abort)  (0xeda820)
0xffff8bd33b90  code target (STUB)  (0xffff8bd06060)
0xffff8bd33b98  code target (STUB)  (0xffff8bd0a300)
0xffff8bd33bb0  external reference (Runtime::NewArray)  (0xde2850)
0xffff8bd33bb4  code target (STUB)  (0xffff8bd06060)
0xffff8bd33bbc  constant pool (size 100)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327682
name = CallICStub(args(2), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff8bd33c80     0  add x4, x2, x3, asr #29
0xffff8bd33c84     4  ldur x4, [x4, #15]
0xffff8bd33c88     8  ldur x5, [x4, #7]
0xffff8bd33c8c    12  cmp x5, x1
0xffff8bd33c90    16  b.ne #+0x2c (addr 0xffff8bd33cbc)
0xffff8bd33c94    20  tbz w1, #0, #+0x28 (addr 0xffff8bd33cbc)
0xffff8bd33c98    24  add x2, x2, x3, asr #29
0xffff8bd33c9c    28  add x2, x2, #0x18 (24)
0xffff8bd33ca0    32  ldur x3, [x2, #-1]
0xffff8bd33ca4    36  movz x16, #0x200000000
0xffff8bd33ca8    40  add x3, x3, x16
0xffff8bd33cac    44  stur x3, [x2, #-1]
0xffff8bd33cb0    48  movz x0, #0x2
0xffff8bd33cb4    52  ldr x16, pc+372 (addr 0x0000ffff8bd33e28)    ;; code: BUILTIN
0xffff8bd33cb8    56  br x16
0xffff8bd33cbc    60  ldr x16, [x26, #2400]
0xffff8bd33cc0    64  cmp x4, x16
0xffff8bd33cc4    68  b.eq #+0x78 (addr 0xffff8bd33d3c)
0xffff8bd33cc8    72  ldur x5, [x4, #-1]
0xffff8bd33ccc    76  ldr x16, [x26, #2736]
0xffff8bd33cd0    80  cmp x5, x16
0xffff8bd33cd4    84  b.ne #+0x40 (addr 0xffff8bd33d14)
0xffff8bd33cd8    88  ldur x5, [cp, #39]
0xffff8bd33cdc    92  ldur x5, [x5, #95]
0xffff8bd33ce0    96  cmp x1, x5
0xffff8bd33ce4   100  b.ne #+0xec (addr 0xffff8bd33dd0)
0xffff8bd33ce8   104  movz x0, #0x2
0xffff8bd33cec   108  add x2, x2, x3, asr #29
0xffff8bd33cf0   112  add x2, x2, #0x18 (24)
0xffff8bd33cf4   116  ldur x3, [x2, #-1]
0xffff8bd33cf8   120  movz x16, #0x200000000
0xffff8bd33cfc   124  add x3, x3, x16
0xffff8bd33d00   128  stur x3, [x2, #-1]
0xffff8bd33d04   132  mov x2, x4
0xffff8bd33d08   136  mov x3, x1
0xffff8bd33d0c   140  ldr x16, pc+292 (addr 0x0000ffff8bd33e30)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff8bd33d10   144  br x16
0xffff8bd33d14   148  ldr x16, [x26, #2568]
0xffff8bd33d18   152  cmp x4, x16
0xffff8bd33d1c   156  b.eq #+0xb4 (addr 0xffff8bd33dd0)
0xffff8bd33d20   160  ldur x5, [x4, #-1]
0xffff8bd33d24   164  ldrb w5, [x5, #11]
0xffff8bd33d28   168  cmp x5, #0xc9 (201)
0xffff8bd33d2c   172  b.ne #+0xa4 (addr 0xffff8bd33dd0)
0xffff8bd33d30   176  add x4, x2, x3, asr #29
0xffff8bd33d34   180  ldr x5, [x26, #2400]
0xffff8bd33d38   184  stur x5, [x4, #15]
0xffff8bd33d3c   188  movz x0, #0x2
0xffff8bd33d40   192  ldr x16, pc+248 (addr 0x0000ffff8bd33e38)    ;; code: BUILTIN
0xffff8bd33d44   196  br x16
0xffff8bd33d48   200  tbz w1, #0, #+0x88 (addr 0xffff8bd33dd0)
0xffff8bd33d4c   204  ldur x5, [x1, #-1]
0xffff8bd33d50   208  ldrb w5, [x5, #11]
0xffff8bd33d54   212  cmp x5, #0xc9 (201)
0xffff8bd33d58   216  b.ne #+0x78 (addr 0xffff8bd33dd0)
0xffff8bd33d5c   220  ldur x5, [cp, #39]
0xffff8bd33d60   224  ldur x5, [x5, #95]
0xffff8bd33d64   228  cmp x1, x5
0xffff8bd33d68   232  b.eq #+0x68 (addr 0xffff8bd33dd0)
0xffff8bd33d6c   236  ldur x4, [x1, #39]
0xffff8bd33d70   240  ldur x4, [x4, #39]
0xffff8bd33d74   244  ldur x5, [cp, #39]
0xffff8bd33d78   248  cmp x4, x5
0xffff8bd33d7c   252  b.ne #+0x54 (addr 0xffff8bd33dd0)
0xffff8bd33d80   256  movz x5, #0x200000000
0xffff8bd33d84   260  adds x4, x2, x3, asr #29
0xffff8bd33d88   264  stur x5, [x4, #23]
0xffff8bd33d8c   268  movz x16, #0xc00000000
0xffff8bd33d90   272  sub csp, jssp, #0x10 (16)
0xffff8bd33d94   276  stp fp, lr, [jssp, #-16]!
0xffff8bd33d98   280  sub csp, jssp, #0x10 (16)
0xffff8bd33d9c   284  str x16, [jssp, #-8]!
0xffff8bd33da0   288  ldr x17, pc+160 (addr 0x0000ffff8bd33e40)    ;; object: 0xffff8bd33c21 <Code: CALL_IC>
0xffff8bd33da4   292  sub csp, jssp, #0x10 (16)
0xffff8bd33da8   296  str x17, [jssp, #-8]!
0xffff8bd33dac   300  add fp, jssp, #0x10 (16)
0xffff8bd33db0   304  sub csp, jssp, #0x8 (8)
0xffff8bd33db4   308  str x1, [jssp, #-8]!
0xffff8bd33db8   312  ldr x16, pc+144 (addr 0x0000ffff8bd33e48)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bd33dbc   316  blr x16
0xffff8bd33dc0   320  ldr x1, [jssp], #8
0xffff8bd33dc4   324  mov jssp, fp
0xffff8bd33dc8   328  ldp fp, lr, [jssp], #16
0xffff8bd33dcc   332  b #-0x11c (addr 0xffff8bd33cb0)
0xffff8bd33dd0   336  movz x16, #0xc00000000
0xffff8bd33dd4   340  sub csp, jssp, #0x10 (16)
0xffff8bd33dd8   344  stp fp, lr, [jssp, #-16]!
0xffff8bd33ddc   348  sub csp, jssp, #0x10 (16)
0xffff8bd33de0   352  str x16, [jssp, #-8]!
0xffff8bd33de4   356  ldr x17, pc+108 (addr 0x0000ffff8bd33e50)    ;; object: 0xffff8bd33c21 <Code: CALL_IC>
0xffff8bd33de8   360  sub csp, jssp, #0x10 (16)
0xffff8bd33dec   364  str x17, [jssp, #-8]!
0xffff8bd33df0   368  add fp, jssp, #0x10 (16)
0xffff8bd33df4   372  sub csp, jssp, #0x18 (24)
0xffff8bd33df8   376  stp x3, x2, [jssp, #-24]!
0xffff8bd33dfc   380  str x1, [jssp, #16]
0xffff8bd33e00   384  movz x0, #0x3
0xffff8bd33e04   388  ldr x1, pc+84 (addr 0x0000ffff8bd33e58)    ;; external reference (Runtime::CallIC_Miss)
0xffff8bd33e08   392  ldr x16, pc+88 (addr 0x0000ffff8bd33e60)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd33e0c   396  blr x16
0xffff8bd33e10   400  mov x1, x0
0xffff8bd33e14   404  mov jssp, fp
0xffff8bd33e18   408  ldp fp, lr, [jssp], #16
0xffff8bd33e1c   412  b #-0xe0 (addr 0xffff8bd33d3c)
0xffff8bd33e20   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bd33e24   420  d63f03e0       constant
0xffff8bd33e28   424  8bd1e600       constant
0xffff8bd33e2c   428  0000ffff       constant
0xffff8bd33e30   432  8bd33b00       constant
0xffff8bd33e34   436  0000ffff       constant
0xffff8bd33e38   440  8bd1f6c0       constant
0xffff8bd33e3c   444  0000ffff       constant
0xffff8bd33e40   448  8bd33c21       constant
0xffff8bd33e44   452  0000ffff       constant
0xffff8bd33e48   456  8bd0ddc0       constant
0xffff8bd33e4c   460  0000ffff       constant
0xffff8bd33e50   464  8bd33c21       constant
0xffff8bd33e54   468  0000ffff       constant
0xffff8bd33e58   472  00c86928       constant
0xffff8bd33e5c   476  00000000       constant
0xffff8bd33e60   480  8bd06060       constant
0xffff8bd33e64   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd33cb4  code target (BUILTIN)  (0xffff8bd1e600)
0xffff8bd33d0c  code target (STUB)  (0xffff8bd33b00)
0xffff8bd33d40  code target (BUILTIN)  (0xffff8bd1f6c0)
0xffff8bd33da0  embedded object  (0xffff8bd33c21 <Code: CALL_IC>)
0xffff8bd33db8  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bd33de4  embedded object  (0xffff8bd33c21 <Code: CALL_IC>)
0xffff8bd33e04  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8bd33e08  code target (STUB)  (0xffff8bd06060)
0xffff8bd33e20  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327682
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8bd33ee0     0  ldur x2, [fp, #-16]
0xffff8bd33ee4     4  ldur x2, [x2, #31]
0xffff8bd33ee8     8  ldur x2, [x2, #87]
0xffff8bd33eec    12  ldr x16, pc+20 (addr 0x0000ffff8bd33f00)    ;; code: CALL_IC, GENERIC
0xffff8bd33ef0    16  br x16
0xffff8bd33ef4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd33ef8    24  d63f03e0       constant
0xffff8bd33efc    28  d503201f       constant
0xffff8bd33f00    32  8bd33c80       constant
0xffff8bd33f04    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd33eec  code target (CALL_IC)  (0xffff8bd33c80)
0xffff8bd33ef4  constant pool (size 20)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327683
name = CallICStub(args(3), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff8bd33f80     0  add x4, x2, x3, asr #29
0xffff8bd33f84     4  ldur x4, [x4, #15]
0xffff8bd33f88     8  ldur x5, [x4, #7]
0xffff8bd33f8c    12  cmp x5, x1
0xffff8bd33f90    16  b.ne #+0x2c (addr 0xffff8bd33fbc)
0xffff8bd33f94    20  tbz w1, #0, #+0x28 (addr 0xffff8bd33fbc)
0xffff8bd33f98    24  add x2, x2, x3, asr #29
0xffff8bd33f9c    28  add x2, x2, #0x18 (24)
0xffff8bd33fa0    32  ldur x3, [x2, #-1]
0xffff8bd33fa4    36  movz x16, #0x200000000
0xffff8bd33fa8    40  add x3, x3, x16
0xffff8bd33fac    44  stur x3, [x2, #-1]
0xffff8bd33fb0    48  movz x0, #0x3
0xffff8bd33fb4    52  ldr x16, pc+372 (addr 0x0000ffff8bd34128)    ;; code: BUILTIN
0xffff8bd33fb8    56  br x16
0xffff8bd33fbc    60  ldr x16, [x26, #2400]
0xffff8bd33fc0    64  cmp x4, x16
0xffff8bd33fc4    68  b.eq #+0x78 (addr 0xffff8bd3403c)
0xffff8bd33fc8    72  ldur x5, [x4, #-1]
0xffff8bd33fcc    76  ldr x16, [x26, #2736]
0xffff8bd33fd0    80  cmp x5, x16
0xffff8bd33fd4    84  b.ne #+0x40 (addr 0xffff8bd34014)
0xffff8bd33fd8    88  ldur x5, [cp, #39]
0xffff8bd33fdc    92  ldur x5, [x5, #95]
0xffff8bd33fe0    96  cmp x1, x5
0xffff8bd33fe4   100  b.ne #+0xec (addr 0xffff8bd340d0)
0xffff8bd33fe8   104  movz x0, #0x3
0xffff8bd33fec   108  add x2, x2, x3, asr #29
0xffff8bd33ff0   112  add x2, x2, #0x18 (24)
0xffff8bd33ff4   116  ldur x3, [x2, #-1]
0xffff8bd33ff8   120  movz x16, #0x200000000
0xffff8bd33ffc   124  add x3, x3, x16
0xffff8bd34000   128  stur x3, [x2, #-1]
0xffff8bd34004   132  mov x2, x4
0xffff8bd34008   136  mov x3, x1
0xffff8bd3400c   140  ldr x16, pc+292 (addr 0x0000ffff8bd34130)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff8bd34010   144  br x16
0xffff8bd34014   148  ldr x16, [x26, #2568]
0xffff8bd34018   152  cmp x4, x16
0xffff8bd3401c   156  b.eq #+0xb4 (addr 0xffff8bd340d0)
0xffff8bd34020   160  ldur x5, [x4, #-1]
0xffff8bd34024   164  ldrb w5, [x5, #11]
0xffff8bd34028   168  cmp x5, #0xc9 (201)
0xffff8bd3402c   172  b.ne #+0xa4 (addr 0xffff8bd340d0)
0xffff8bd34030   176  add x4, x2, x3, asr #29
0xffff8bd34034   180  ldr x5, [x26, #2400]
0xffff8bd34038   184  stur x5, [x4, #15]
0xffff8bd3403c   188  movz x0, #0x3
0xffff8bd34040   192  ldr x16, pc+248 (addr 0x0000ffff8bd34138)    ;; code: BUILTIN
0xffff8bd34044   196  br x16
0xffff8bd34048   200  tbz w1, #0, #+0x88 (addr 0xffff8bd340d0)
0xffff8bd3404c   204  ldur x5, [x1, #-1]
0xffff8bd34050   208  ldrb w5, [x5, #11]
0xffff8bd34054   212  cmp x5, #0xc9 (201)
0xffff8bd34058   216  b.ne #+0x78 (addr 0xffff8bd340d0)
0xffff8bd3405c   220  ldur x5, [cp, #39]
0xffff8bd34060   224  ldur x5, [x5, #95]
0xffff8bd34064   228  cmp x1, x5
0xffff8bd34068   232  b.eq #+0x68 (addr 0xffff8bd340d0)
0xffff8bd3406c   236  ldur x4, [x1, #39]
0xffff8bd34070   240  ldur x4, [x4, #39]
0xffff8bd34074   244  ldur x5, [cp, #39]
0xffff8bd34078   248  cmp x4, x5
0xffff8bd3407c   252  b.ne #+0x54 (addr 0xffff8bd340d0)
0xffff8bd34080   256  movz x5, #0x200000000
0xffff8bd34084   260  adds x4, x2, x3, asr #29
0xffff8bd34088   264  stur x5, [x4, #23]
0xffff8bd3408c   268  movz x16, #0xc00000000
0xffff8bd34090   272  sub csp, jssp, #0x10 (16)
0xffff8bd34094   276  stp fp, lr, [jssp, #-16]!
0xffff8bd34098   280  sub csp, jssp, #0x10 (16)
0xffff8bd3409c   284  str x16, [jssp, #-8]!
0xffff8bd340a0   288  ldr x17, pc+160 (addr 0x0000ffff8bd34140)    ;; object: 0xffff8bd33f21 <Code: CALL_IC>
0xffff8bd340a4   292  sub csp, jssp, #0x10 (16)
0xffff8bd340a8   296  str x17, [jssp, #-8]!
0xffff8bd340ac   300  add fp, jssp, #0x10 (16)
0xffff8bd340b0   304  sub csp, jssp, #0x8 (8)
0xffff8bd340b4   308  str x1, [jssp, #-8]!
0xffff8bd340b8   312  ldr x16, pc+144 (addr 0x0000ffff8bd34148)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bd340bc   316  blr x16
0xffff8bd340c0   320  ldr x1, [jssp], #8
0xffff8bd340c4   324  mov jssp, fp
0xffff8bd340c8   328  ldp fp, lr, [jssp], #16
0xffff8bd340cc   332  b #-0x11c (addr 0xffff8bd33fb0)
0xffff8bd340d0   336  movz x16, #0xc00000000
0xffff8bd340d4   340  sub csp, jssp, #0x10 (16)
0xffff8bd340d8   344  stp fp, lr, [jssp, #-16]!
0xffff8bd340dc   348  sub csp, jssp, #0x10 (16)
0xffff8bd340e0   352  str x16, [jssp, #-8]!
0xffff8bd340e4   356  ldr x17, pc+108 (addr 0x0000ffff8bd34150)    ;; object: 0xffff8bd33f21 <Code: CALL_IC>
0xffff8bd340e8   360  sub csp, jssp, #0x10 (16)
0xffff8bd340ec   364  str x17, [jssp, #-8]!
0xffff8bd340f0   368  add fp, jssp, #0x10 (16)
0xffff8bd340f4   372  sub csp, jssp, #0x18 (24)
0xffff8bd340f8   376  stp x3, x2, [jssp, #-24]!
0xffff8bd340fc   380  str x1, [jssp, #16]
0xffff8bd34100   384  movz x0, #0x3
0xffff8bd34104   388  ldr x1, pc+84 (addr 0x0000ffff8bd34158)    ;; external reference (Runtime::CallIC_Miss)
0xffff8bd34108   392  ldr x16, pc+88 (addr 0x0000ffff8bd34160)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd3410c   396  blr x16
0xffff8bd34110   400  mov x1, x0
0xffff8bd34114   404  mov jssp, fp
0xffff8bd34118   408  ldp fp, lr, [jssp], #16
0xffff8bd3411c   412  b #-0xe0 (addr 0xffff8bd3403c)
0xffff8bd34120   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bd34124   420  d63f03e0       constant
0xffff8bd34128   424  8bd1e600       constant
0xffff8bd3412c   428  0000ffff       constant
0xffff8bd34130   432  8bd33b00       constant
0xffff8bd34134   436  0000ffff       constant
0xffff8bd34138   440  8bd1f6c0       constant
0xffff8bd3413c   444  0000ffff       constant
0xffff8bd34140   448  8bd33f21       constant
0xffff8bd34144   452  0000ffff       constant
0xffff8bd34148   456  8bd0ddc0       constant
0xffff8bd3414c   460  0000ffff       constant
0xffff8bd34150   464  8bd33f21       constant
0xffff8bd34154   468  0000ffff       constant
0xffff8bd34158   472  00c86928       constant
0xffff8bd3415c   476  00000000       constant
0xffff8bd34160   480  8bd06060       constant
0xffff8bd34164   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd33fb4  code target (BUILTIN)  (0xffff8bd1e600)
0xffff8bd3400c  code target (STUB)  (0xffff8bd33b00)
0xffff8bd34040  code target (BUILTIN)  (0xffff8bd1f6c0)
0xffff8bd340a0  embedded object  (0xffff8bd33f21 <Code: CALL_IC>)
0xffff8bd340b8  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bd340e4  embedded object  (0xffff8bd33f21 <Code: CALL_IC>)
0xffff8bd34104  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8bd34108  code target (STUB)  (0xffff8bd06060)
0xffff8bd34120  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327683
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8bd341e0     0  ldur x2, [fp, #-16]
0xffff8bd341e4     4  ldur x2, [x2, #31]
0xffff8bd341e8     8  ldur x2, [x2, #87]
0xffff8bd341ec    12  ldr x16, pc+20 (addr 0x0000ffff8bd34200)    ;; code: CALL_IC, GENERIC
0xffff8bd341f0    16  br x16
0xffff8bd341f4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd341f8    24  d63f03e0       constant
0xffff8bd341fc    28  d503201f       constant
0xffff8bd34200    32  8bd33f80       constant
0xffff8bd34204    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd341ec  code target (CALL_IC)  (0xffff8bd33f80)
0xffff8bd341f4  constant pool (size 20)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327684
name = CallICStub(args(4), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff8bd34280     0  add x4, x2, x3, asr #29
0xffff8bd34284     4  ldur x4, [x4, #15]
0xffff8bd34288     8  ldur x5, [x4, #7]
0xffff8bd3428c    12  cmp x5, x1
0xffff8bd34290    16  b.ne #+0x2c (addr 0xffff8bd342bc)
0xffff8bd34294    20  tbz w1, #0, #+0x28 (addr 0xffff8bd342bc)
0xffff8bd34298    24  add x2, x2, x3, asr #29
0xffff8bd3429c    28  add x2, x2, #0x18 (24)
0xffff8bd342a0    32  ldur x3, [x2, #-1]
0xffff8bd342a4    36  movz x16, #0x200000000
0xffff8bd342a8    40  add x3, x3, x16
0xffff8bd342ac    44  stur x3, [x2, #-1]
0xffff8bd342b0    48  movz x0, #0x4
0xffff8bd342b4    52  ldr x16, pc+372 (addr 0x0000ffff8bd34428)    ;; code: BUILTIN
0xffff8bd342b8    56  br x16
0xffff8bd342bc    60  ldr x16, [x26, #2400]
0xffff8bd342c0    64  cmp x4, x16
0xffff8bd342c4    68  b.eq #+0x78 (addr 0xffff8bd3433c)
0xffff8bd342c8    72  ldur x5, [x4, #-1]
0xffff8bd342cc    76  ldr x16, [x26, #2736]
0xffff8bd342d0    80  cmp x5, x16
0xffff8bd342d4    84  b.ne #+0x40 (addr 0xffff8bd34314)
0xffff8bd342d8    88  ldur x5, [cp, #39]
0xffff8bd342dc    92  ldur x5, [x5, #95]
0xffff8bd342e0    96  cmp x1, x5
0xffff8bd342e4   100  b.ne #+0xec (addr 0xffff8bd343d0)
0xffff8bd342e8   104  movz x0, #0x4
0xffff8bd342ec   108  add x2, x2, x3, asr #29
0xffff8bd342f0   112  add x2, x2, #0x18 (24)
0xffff8bd342f4   116  ldur x3, [x2, #-1]
0xffff8bd342f8   120  movz x16, #0x200000000
0xffff8bd342fc   124  add x3, x3, x16
0xffff8bd34300   128  stur x3, [x2, #-1]
0xffff8bd34304   132  mov x2, x4
0xffff8bd34308   136  mov x3, x1
0xffff8bd3430c   140  ldr x16, pc+292 (addr 0x0000ffff8bd34430)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff8bd34310   144  br x16
0xffff8bd34314   148  ldr x16, [x26, #2568]
0xffff8bd34318   152  cmp x4, x16
0xffff8bd3431c   156  b.eq #+0xb4 (addr 0xffff8bd343d0)
0xffff8bd34320   160  ldur x5, [x4, #-1]
0xffff8bd34324   164  ldrb w5, [x5, #11]
0xffff8bd34328   168  cmp x5, #0xc9 (201)
0xffff8bd3432c   172  b.ne #+0xa4 (addr 0xffff8bd343d0)
0xffff8bd34330   176  add x4, x2, x3, asr #29
0xffff8bd34334   180  ldr x5, [x26, #2400]
0xffff8bd34338   184  stur x5, [x4, #15]
0xffff8bd3433c   188  movz x0, #0x4
0xffff8bd34340   192  ldr x16, pc+248 (addr 0x0000ffff8bd34438)    ;; code: BUILTIN
0xffff8bd34344   196  br x16
0xffff8bd34348   200  tbz w1, #0, #+0x88 (addr 0xffff8bd343d0)
0xffff8bd3434c   204  ldur x5, [x1, #-1]
0xffff8bd34350   208  ldrb w5, [x5, #11]
0xffff8bd34354   212  cmp x5, #0xc9 (201)
0xffff8bd34358   216  b.ne #+0x78 (addr 0xffff8bd343d0)
0xffff8bd3435c   220  ldur x5, [cp, #39]
0xffff8bd34360   224  ldur x5, [x5, #95]
0xffff8bd34364   228  cmp x1, x5
0xffff8bd34368   232  b.eq #+0x68 (addr 0xffff8bd343d0)
0xffff8bd3436c   236  ldur x4, [x1, #39]
0xffff8bd34370   240  ldur x4, [x4, #39]
0xffff8bd34374   244  ldur x5, [cp, #39]
0xffff8bd34378   248  cmp x4, x5
0xffff8bd3437c   252  b.ne #+0x54 (addr 0xffff8bd343d0)
0xffff8bd34380   256  movz x5, #0x200000000
0xffff8bd34384   260  adds x4, x2, x3, asr #29
0xffff8bd34388   264  stur x5, [x4, #23]
0xffff8bd3438c   268  movz x16, #0xc00000000
0xffff8bd34390   272  sub csp, jssp, #0x10 (16)
0xffff8bd34394   276  stp fp, lr, [jssp, #-16]!
0xffff8bd34398   280  sub csp, jssp, #0x10 (16)
0xffff8bd3439c   284  str x16, [jssp, #-8]!
0xffff8bd343a0   288  ldr x17, pc+160 (addr 0x0000ffff8bd34440)    ;; object: 0xffff8bd34221 <Code: CALL_IC>
0xffff8bd343a4   292  sub csp, jssp, #0x10 (16)
0xffff8bd343a8   296  str x17, [jssp, #-8]!
0xffff8bd343ac   300  add fp, jssp, #0x10 (16)
0xffff8bd343b0   304  sub csp, jssp, #0x8 (8)
0xffff8bd343b4   308  str x1, [jssp, #-8]!
0xffff8bd343b8   312  ldr x16, pc+144 (addr 0x0000ffff8bd34448)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bd343bc   316  blr x16
0xffff8bd343c0   320  ldr x1, [jssp], #8
0xffff8bd343c4   324  mov jssp, fp
0xffff8bd343c8   328  ldp fp, lr, [jssp], #16
0xffff8bd343cc   332  b #-0x11c (addr 0xffff8bd342b0)
0xffff8bd343d0   336  movz x16, #0xc00000000
0xffff8bd343d4   340  sub csp, jssp, #0x10 (16)
0xffff8bd343d8   344  stp fp, lr, [jssp, #-16]!
0xffff8bd343dc   348  sub csp, jssp, #0x10 (16)
0xffff8bd343e0   352  str x16, [jssp, #-8]!
0xffff8bd343e4   356  ldr x17, pc+108 (addr 0x0000ffff8bd34450)    ;; object: 0xffff8bd34221 <Code: CALL_IC>
0xffff8bd343e8   360  sub csp, jssp, #0x10 (16)
0xffff8bd343ec   364  str x17, [jssp, #-8]!
0xffff8bd343f0   368  add fp, jssp, #0x10 (16)
0xffff8bd343f4   372  sub csp, jssp, #0x18 (24)
0xffff8bd343f8   376  stp x3, x2, [jssp, #-24]!
0xffff8bd343fc   380  str x1, [jssp, #16]
0xffff8bd34400   384  movz x0, #0x3
0xffff8bd34404   388  ldr x1, pc+84 (addr 0x0000ffff8bd34458)    ;; external reference (Runtime::CallIC_Miss)
0xffff8bd34408   392  ldr x16, pc+88 (addr 0x0000ffff8bd34460)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd3440c   396  blr x16
0xffff8bd34410   400  mov x1, x0
0xffff8bd34414   404  mov jssp, fp
0xffff8bd34418   408  ldp fp, lr, [jssp], #16
0xffff8bd3441c   412  b #-0xe0 (addr 0xffff8bd3433c)
0xffff8bd34420   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bd34424   420  d63f03e0       constant
0xffff8bd34428   424  8bd1e600       constant
0xffff8bd3442c   428  0000ffff       constant
0xffff8bd34430   432  8bd33b00       constant
0xffff8bd34434   436  0000ffff       constant
0xffff8bd34438   440  8bd1f6c0       constant
0xffff8bd3443c   444  0000ffff       constant
0xffff8bd34440   448  8bd34221       constant
0xffff8bd34444   452  0000ffff       constant
0xffff8bd34448   456  8bd0ddc0       constant
0xffff8bd3444c   460  0000ffff       constant
0xffff8bd34450   464  8bd34221       constant
0xffff8bd34454   468  0000ffff       constant
0xffff8bd34458   472  00c86928       constant
0xffff8bd3445c   476  00000000       constant
0xffff8bd34460   480  8bd06060       constant
0xffff8bd34464   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd342b4  code target (BUILTIN)  (0xffff8bd1e600)
0xffff8bd3430c  code target (STUB)  (0xffff8bd33b00)
0xffff8bd34340  code target (BUILTIN)  (0xffff8bd1f6c0)
0xffff8bd343a0  embedded object  (0xffff8bd34221 <Code: CALL_IC>)
0xffff8bd343b8  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bd343e4  embedded object  (0xffff8bd34221 <Code: CALL_IC>)
0xffff8bd34404  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8bd34408  code target (STUB)  (0xffff8bd06060)
0xffff8bd34420  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327684
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8bd344e0     0  ldur x2, [fp, #-16]
0xffff8bd344e4     4  ldur x2, [x2, #31]
0xffff8bd344e8     8  ldur x2, [x2, #87]
0xffff8bd344ec    12  ldr x16, pc+20 (addr 0x0000ffff8bd34500)    ;; code: CALL_IC, GENERIC
0xffff8bd344f0    16  br x16
0xffff8bd344f4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd344f8    24  d63f03e0       constant
0xffff8bd344fc    28  d503201f       constant
0xffff8bd34500    32  8bd34280       constant
0xffff8bd34504    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd344ec  code target (CALL_IC)  (0xffff8bd34280)
0xffff8bd344f4  constant pool (size 20)


kind = STUB
major_key = MathPowStub
name = MathPowStub
compiler = unknown
Instructions (size = 344)
0xffff8bd34580     0  ldp x11, x10, [jssp], #16
0xffff8bd34584     4  tbz w10, #0, #+0x1c (addr 0xffff8bd345a0)
0xffff8bd34588     8  ldur x16, [x10, #-1]
0xffff8bd3458c    12  ldr x17, [x26, #120]
0xffff8bd34590    16  cmp x16, x17
0xffff8bd34594    20  b.ne #+0xd8 (addr 0xffff8bd3466c)
0xffff8bd34598    24  ldur d0, [x10, #7]
0xffff8bd3459c    28  b #+0x8 (addr 0xffff8bd345a4)
0xffff8bd345a0    32  scvtf d0, x10, #32
0xffff8bd345a4    36  tbz w11, #0, #+0x80 (addr 0xffff8bd34624)
0xffff8bd345a8    40  ldur x16, [x11, #-1]
0xffff8bd345ac    44  ldr x17, [x26, #120]
0xffff8bd345b0    48  cmp x16, x17
0xffff8bd345b4    52  b.ne #+0xb8 (addr 0xffff8bd3466c)
0xffff8bd345b8    56  ldur d1, [x11, #7]
0xffff8bd345bc    60  fcvtzs x12, d1
0xffff8bd345c0    64  scvtf d7, x12
0xffff8bd345c4    68  fcmp d1, d7
0xffff8bd345c8    72  b.eq #+0x60 (addr 0xffff8bd34628)
0xffff8bd345cc    76  fmov d4, #0xe0 (-0.5000)
0xffff8bd345d0    80  fmov d3, #0x60 (0.5000)
0xffff8bd345d4    84  fcmp d4, d1
0xffff8bd345d8    88  fccmp d3, d1, #NZcv, ne
0xffff8bd345dc    92  b.ne #+0x90 (addr 0xffff8bd3466c)
0xffff8bd345e0    96  fadd d0, d0, d15
0xffff8bd345e4   100  fsub d7, d0, d0
0xffff8bd345e8   104  fcmp d7, #0.0
0xffff8bd345ec   108  fabs d6, d0
0xffff8bd345f0   112  fcsel d0, d6, d0, vs
0xffff8bd345f4   116  fsqrt d0, d0
0xffff8bd345f8   120  fcmp d1, #0.0
0xffff8bd345fc   124  b.ge #+0x88 (addr 0xffff8bd34684)
0xffff8bd34600   128  fmov d7, #0x70 (1.0000)
0xffff8bd34604   132  fdiv d0, d7, d0
0xffff8bd34608   136  b #+0x7c (addr 0xffff8bd34684)
0xffff8bd3460c   140  mov x19, lr
0xffff8bd34610   144  ldr x16, pc+168 (addr 0x0000ffff8bd346b8)    ;; external reference (power_double_double_function)
0xffff8bd34614   148  and csp, jssp, #0xfffffffffffffff0
0xffff8bd34618   152  blr x16
0xffff8bd3461c   156  mov lr, x19
0xffff8bd34620   160  b #+0x64 (addr 0xffff8bd34684)
0xffff8bd34624   164  asr x12, x11, #32
0xffff8bd34628   168  cmp x12, #0x0 (0)
0xffff8bd3462c   172  cneg x13, x12, mi
0xffff8bd34630   176  fmov d6, d0
0xffff8bd34634   180  fmov d2, d0
0xffff8bd34638   184  fmov d0, #0x70 (1.0000)
0xffff8bd3463c   188  b #+0x10 (addr 0xffff8bd3464c)
0xffff8bd34640   192  fmul d6, d6, d6
0xffff8bd34644   196  lsr x13, x13, #1
0xffff8bd34648   200  cbz x13, #+0x10 (addr 0xffff8bd34658)
0xffff8bd3464c   204  tbz w13, #0, #-0xc (addr 0xffff8bd34640)
0xffff8bd34650   208  fmul d0, d0, d6
0xffff8bd34654   212  b #-0x14 (addr 0xffff8bd34640)
0xffff8bd34658   216  tbz x12, #63, #+0x2c (addr 0xffff8bd34684)
0xffff8bd3465c   220  fmov d7, #0x70 (1.0000)
0xffff8bd34660   224  fdiv d0, d7, d0
0xffff8bd34664   228  fcmp d0, #0.0
0xffff8bd34668   232  b.ne #+0x1c (addr 0xffff8bd34684)
0xffff8bd3466c   236  sub csp, jssp, #0x10 (16)
0xffff8bd34670   240  stp x11, x10, [jssp, #-16]!
0xffff8bd34674   244  movz x0, #0x2
0xffff8bd34678   248  ldr x1, pc+72 (addr 0x0000ffff8bd346c0)    ;; external reference (Runtime::MathPowRT)
0xffff8bd3467c   252  ldr x16, pc+76 (addr 0x0000ffff8bd346c8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd34680   256  br x16
0xffff8bd34684   260  ldr x15, pc+76 (addr 0x0000ffff8bd346d0)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff8bd34688   264  ldp x0, x14, [x15]
0xffff8bd3468c   268  adds x16, x0, #0x10 (16)
0xffff8bd34690   272  ccmp x16, x14, #nzCv, lo
0xffff8bd34694   276  b.hi #-0x28 (addr 0xffff8bd3466c)
0xffff8bd34698   280  str x16, [x15]
0xffff8bd3469c   284  ldr d30, [x26, #120]
0xffff8bd346a0   288  stp d30, d0, [x0]
0xffff8bd346a4   292  orr x0, x0, #0x1
0xffff8bd346a8   296  ret
0xffff8bd346ac   300  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff8bd346b0   304  d63f03e0       constant
0xffff8bd346b4   308  d503201f       constant
0xffff8bd346b8   312  009362e0       constant
0xffff8bd346bc   316  00000000       constant
0xffff8bd346c0   320  00e39ee8       constant
0xffff8bd346c4   324  00000000       constant
0xffff8bd346c8   328  8bd06060       constant
0xffff8bd346cc   332  0000ffff       constant
0xffff8bd346d0   336  2cb8e2c0       constant
0xffff8bd346d4   340  00000000       constant


RelocInfo (size = 17)
0xffff8bd34610  external reference (power_double_double_function)  (0x9362e0)
0xffff8bd34678  external reference (Runtime::MathPowRT)  (0xe39ee8)
0xffff8bd3467c  code target (STUB)  (0xffff8bd06060)
0xffff8bd34684  external reference (Heap::NewSpaceAllocationTopAddress())  (0x2cb8e2c0)
0xffff8bd346ac  constant pool (size 44)


kind = KEYED_LOAD_IC
major_key = KeyedLoadICTrampolineStub
ic_state = GENERIC
extra_ic_state = 0
name = KeyedLoadICTrampolineStub
compiler = unknown
Instructions (size = 368)
0xffff8bd36c80     0  ldur x3, [fp, #-16]
0xffff8bd36c84     4  ldur x3, [x3, #31]
0xffff8bd36c88     8  ldur x3, [x3, #87]
0xffff8bd36c8c    12  add x4, x3, x0, asr #29
0xffff8bd36c90    16  ldur x4, [x4, #15]
0xffff8bd36c94    20  tbz w1, #0, #+0x130 (addr 0xffff8bd36dc4)
0xffff8bd36c98    24  ldur x5, [x1, #-1]
0xffff8bd36c9c    28  ldur x6, [x4, #7]
0xffff8bd36ca0    32  cmp x6, x5
0xffff8bd36ca4    36  b.ne #+0x14 (addr 0xffff8bd36cb8)
0xffff8bd36ca8    40  add x4, x3, x0, asr #29
0xffff8bd36cac    44  ldur x4, [x4, #23]
0xffff8bd36cb0    48  add x4, x4, #0x5f (95)
0xffff8bd36cb4    52  br x4
0xffff8bd36cb8    56  ldur x6, [x4, #-1]
0xffff8bd36cbc    60  ldr x16, [x26, #224]
0xffff8bd36cc0    64  cmp x6, x16
0xffff8bd36cc4    68  b.ne #+0x5c (addr 0xffff8bd36d20)
0xffff8bd36cc8    72  ldur x6, [x4, #15]
0xffff8bd36ccc    76  ldur x6, [x6, #7]
0xffff8bd36cd0    80  cmp x5, x6
0xffff8bd36cd4    84  b.ne #+0x10 (addr 0xffff8bd36ce4)
0xffff8bd36cd8    88  ldur x4, [x4, #23]
0xffff8bd36cdc    92  add x4, x4, #0x5f (95)
0xffff8bd36ce0    96  br x4
0xffff8bd36ce4   100  ldur x7, [x4, #7]
0xffff8bd36ce8   104  add x7, x4, x7, asr #29
0xffff8bd36cec   108  add x7, x7, #0xf (15)
0xffff8bd36cf0   112  add x4, x4, #0x1f (31)
0xffff8bd36cf4   116  ldr x6, [x4]
0xffff8bd36cf8   120  ldur x6, [x6, #7]
0xffff8bd36cfc   124  cmp x5, x6
0xffff8bd36d00   128  b.ne #+0x10 (addr 0xffff8bd36d10)
0xffff8bd36d04   132  ldr x4, [x4, #8]
0xffff8bd36d08   136  add x4, x4, #0x5f (95)
0xffff8bd36d0c   140  br x4
0xffff8bd36d10   144  add x4, x4, #0x10 (16)
0xffff8bd36d14   148  cmp x4, x7
0xffff8bd36d18   152  b.lt #-0x24 (addr 0xffff8bd36cf4)
0xffff8bd36d1c   156  b #+0x8c (addr 0xffff8bd36da8)
0xffff8bd36d20   160  ldr x16, [x26, #2400]
0xffff8bd36d24   164  cmp x4, x16
0xffff8bd36d28   168  b.ne #+0xc (addr 0xffff8bd36d34)
0xffff8bd36d2c   172  ldr x16, pc+172 (addr 0x0000ffff8bd36dd8)    ;; code: KEYED_LOAD_IC, MEGAMORPHIC
0xffff8bd36d30   176  br x16
0xffff8bd36d34   180  cmp x2, x4
0xffff8bd36d38   184  b.ne #+0x70 (addr 0xffff8bd36da8)
0xffff8bd36d3c   188  add x4, x3, x0, asr #29
0xffff8bd36d40   192  ldur x4, [x4, #23]
0xffff8bd36d44   196  ldur x6, [x4, #15]
0xffff8bd36d48   200  ldur x6, [x6, #7]
0xffff8bd36d4c   204  cmp x5, x6
0xffff8bd36d50   208  b.ne #+0x10 (addr 0xffff8bd36d60)
0xffff8bd36d54   212  ldur x4, [x4, #23]
0xffff8bd36d58   216  add x4, x4, #0x5f (95)
0xffff8bd36d5c   220  br x4
0xffff8bd36d60   224  ldur x7, [x4, #7]
0xffff8bd36d64   228  movz x16, #0x200000000
0xffff8bd36d68   232  cmp x7, x16
0xffff8bd36d6c   236  b.eq #+0x3c (addr 0xffff8bd36da8)
0xffff8bd36d70   240  add x7, x4, x7, asr #29
0xffff8bd36d74   244  add x7, x7, #0xf (15)
0xffff8bd36d78   248  add x4, x4, #0x1f (31)
0xffff8bd36d7c   252  ldr x6, [x4]
0xffff8bd36d80   256  ldur x6, [x6, #7]
0xffff8bd36d84   260  cmp x5, x6
0xffff8bd36d88   264  b.ne #+0x10 (addr 0xffff8bd36d98)
0xffff8bd36d8c   268  ldr x4, [x4, #8]
0xffff8bd36d90   272  add x4, x4, #0x5f (95)
0xffff8bd36d94   276  br x4
0xffff8bd36d98   280  add x4, x4, #0x10 (16)
0xffff8bd36d9c   284  cmp x4, x7
0xffff8bd36da0   288  b.lt #-0x24 (addr 0xffff8bd36d7c)
0xffff8bd36da4   292  b #+0x4 (addr 0xffff8bd36da8)
0xffff8bd36da8   296  sub csp, jssp, #0x20 (32)
0xffff8bd36dac   300  stp x3, x0, [jssp, #-32]!
0xffff8bd36db0   304  stp x2, x1, [jssp, #16]
0xffff8bd36db4   308  movz x0, #0x4
0xffff8bd36db8   312  ldr x1, pc+40 (addr 0x0000ffff8bd36de0)    ;; external reference (Runtime::KeyedLoadIC_Miss)
0xffff8bd36dbc   316  ldr x16, pc+44 (addr 0x0000ffff8bd36de8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd36dc0   320  br x16
0xffff8bd36dc4   324  ldr x5, [x26, #120]
0xffff8bd36dc8   328  b #-0x12c (addr 0xffff8bd36c9c)
0xffff8bd36dcc   332  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd36dd0   336  d63f03e0       constant
0xffff8bd36dd4   340  d503201f       constant
0xffff8bd36dd8   344  8bd22900       constant
0xffff8bd36ddc   348  0000ffff       constant
0xffff8bd36de0   352  00c874c0       constant
0xffff8bd36de4   356  00000000       constant
0xffff8bd36de8   360  8bd06060       constant
0xffff8bd36dec   364  0000ffff       constant


RelocInfo (size = 14)
0xffff8bd36d2c  code target (KEYED_LOAD_IC)  (0xffff8bd22900)
0xffff8bd36db8  external reference (Runtime::KeyedLoadIC_Miss)  (0xc874c0)
0xffff8bd36dbc  code target (STUB)  (0xffff8bd06060)
0xffff8bd36dcc  constant pool (size 36)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd36fc0     0  ldur x0, [x1, #-1]
0xffff8bd36fc4     4  ldur x0, [x0, #47]
0xffff8bd36fc8     8  movz x16, #0x587
0xffff8bd36fcc    12  ldr x0, [x0, x16]
0xffff8bd36fd0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd37040     0  ldur x0, [x1, #7]
0xffff8bd37044     4  movz x16, #0x1cf
0xffff8bd37048     8  ldr x0, [x0, x16]
0xffff8bd3704c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff8bd370c0     0  adr xzr, #+0x40 (addr 0xffff8bd37100)
0xffff8bd370c4     4  adr xzr, #+0x360 (addr 0xffff8bd37424)
0xffff8bd370c8     8  ldr x16, pc+1736 (addr 0x0000ffff8bd37790)    ;; external reference (store_buffer_top)
0xffff8bd370cc    12  ldr x13, [x16]
0xffff8bd370d0    16  str x6, [x13], #8
0xffff8bd370d4    20  str x13, [x16]
0xffff8bd370d8    24  tst x13, #0x1ffff
0xffff8bd370dc    28  b.eq #+0x8 (addr 0xffff8bd370e4)
0xffff8bd370e0    32  ret
0xffff8bd370e4    36  sub csp, jssp, #0x8 (8)
0xffff8bd370e8    40  str lr, [jssp, #-8]!
0xffff8bd370ec    44  ldr x17, pc+1708 (addr 0x0000ffff8bd37798)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd370f0    48  blr x17
0xffff8bd370f4    52  ldr lr, [jssp], #8
0xffff8bd370f8    56  ret
0xffff8bd370fc    60  ret
0xffff8bd37100    64  sub csp, jssp, #0x10 (16)
0xffff8bd37104    68  stp x2, x0, [jssp, #-16]!
0xffff8bd37108    72  ldr x13, [x6]
0xffff8bd3710c    76  and x16, x13, #0xfffffffffff00000
0xffff8bd37110    80  ldr x16, [x16, #8]
0xffff8bd37114    84  tst x16, #0x18
0xffff8bd37118    88  b.eq #+0x1d8 (addr 0xffff8bd372f0)
0xffff8bd3711c    92  and x16, x1, #0xfffffffffff00000
0xffff8bd37120    96  ldr x16, [x16, #8]
0xffff8bd37124   100  tst x16, #0x18
0xffff8bd37128   104  b.ne #+0x1c8 (addr 0xffff8bd372f0)
0xffff8bd3712c   108  and x13, x1, #0xfffffffffff00000
0xffff8bd37130   112  ldr x0, [x13, #104]
0xffff8bd37134   116  subs x0, x0, #0x1 (1)
0xffff8bd37138   120  str x0, [x13, #104]
0xffff8bd3713c   124  b.mi #+0xc4 (addr 0xffff8bd37200)
0xffff8bd37140   128  ubfx x16, x1, #8, #12
0xffff8bd37144   132  and x13, x1, #0xfffffffffff00000
0xffff8bd37148   136  add x13, x13, x16, lsl #2
0xffff8bd3714c   140  ubfx x0, x1, #3, #5
0xffff8bd37150   144  ldr x13, [x13, #360]
0xffff8bd37154   148  lsr x13, x13, x0
0xffff8bd37158   152  tbz w13, #0, #+0x8 (addr 0xffff8bd37160)
0xffff8bd3715c   156  tbnz w13, #1, #+0x3c (addr 0xffff8bd37198)
0xffff8bd37160   160  ldp x2, x0, [jssp], #16
0xffff8bd37164   164  ldr x16, pc+1596 (addr 0x0000ffff8bd377a0)    ;; external reference (store_buffer_top)
0xffff8bd37168   168  ldr x13, [x16]
0xffff8bd3716c   172  str x6, [x13], #8
0xffff8bd37170   176  str x13, [x16]
0xffff8bd37174   180  tst x13, #0x1ffff
0xffff8bd37178   184  b.eq #+0x8 (addr 0xffff8bd37180)
0xffff8bd3717c   188  ret
0xffff8bd37180   192  sub csp, jssp, #0x8 (8)
0xffff8bd37184   196  str lr, [jssp, #-8]!
0xffff8bd37188   200  ldr x17, pc+1568 (addr 0x0000ffff8bd377a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd3718c   204  blr x17
0xffff8bd37190   208  ldr lr, [jssp], #8
0xffff8bd37194   212  ret
0xffff8bd37198   216  ldr x13, [x6]
0xffff8bd3719c   220  sub csp, jssp, #0x10 (16)
0xffff8bd371a0   224  stp x1, x6, [jssp, #-16]!
0xffff8bd371a4   228  ubfx x16, x13, #8, #12
0xffff8bd371a8   232  and x0, x13, #0xfffffffffff00000
0xffff8bd371ac   236  add x0, x0, x16, lsl #2
0xffff8bd371b0   240  ubfx x1, x13, #3, #5
0xffff8bd371b4   244  ldr x6, [x0, #360]
0xffff8bd371b8   248  lsr x6, x6, x1
0xffff8bd371bc   252  tbz w6, #0, #+0x40 (addr 0xffff8bd371fc)
0xffff8bd371c0   256  ldp x1, x6, [jssp], #16
0xffff8bd371c4   260  ldp x2, x0, [jssp], #16
0xffff8bd371c8   264  ldr x16, pc+1512 (addr 0x0000ffff8bd377b0)    ;; external reference (store_buffer_top)
0xffff8bd371cc   268  ldr x13, [x16]
0xffff8bd371d0   272  str x6, [x13], #8
0xffff8bd371d4   276  str x13, [x16]
0xffff8bd371d8   280  tst x13, #0x1ffff
0xffff8bd371dc   284  b.eq #+0x8 (addr 0xffff8bd371e4)
0xffff8bd371e0   288  ret
0xffff8bd371e4   292  sub csp, jssp, #0x8 (8)
0xffff8bd371e8   296  str lr, [jssp, #-8]!
0xffff8bd371ec   300  ldr x17, pc+1484 (addr 0x0000ffff8bd377b8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd371f0   304  blr x17
0xffff8bd371f4   308  ldr lr, [jssp], #8
0xffff8bd371f8   312  ret
0xffff8bd371fc   316  ldp x1, x6, [jssp], #16
0xffff8bd37200   320  sub csp, jssp, #0x78 (120)
0xffff8bd37204   324  stp x14, x15, [jssp, #-32]!
0xffff8bd37208   328  stp x18, lr, [jssp, #16]
0xffff8bd3720c   332  stp x9, x10, [jssp, #-32]!
0xffff8bd37210   336  stp x11, x12, [jssp, #16]
0xffff8bd37214   340  stp x5, x6, [jssp, #-32]!
0xffff8bd37218   344  stp x7, x8, [jssp, #16]
0xffff8bd3721c   348  stp x1, x3, [jssp, #-24]!
0xffff8bd37220   352  str x4, [jssp, #16]
0xffff8bd37224   356  sub csp, jssp, #0xb0 (176)
0xffff8bd37228   360  stp d26, d27, [jssp, #-32]!
0xffff8bd3722c   364  stp d28, d29, [jssp, #16]
0xffff8bd37230   368  stp d22, d23, [jssp, #-32]!
0xffff8bd37234   372  stp d24, d25, [jssp, #16]
0xffff8bd37238   376  stp d18, d19, [jssp, #-32]!
0xffff8bd3723c   380  stp d20, d21, [jssp, #16]
0xffff8bd37240   384  stp d6, d7, [jssp, #-32]!
0xffff8bd37244   388  stp d16, d17, [jssp, #16]
0xffff8bd37248   392  stp d2, d3, [jssp, #-32]!
0xffff8bd3724c   396  stp d4, d5, [jssp, #16]
0xffff8bd37250   400  stp d0, d1, [jssp, #-16]!
0xffff8bd37254   404  mov x0, x1
0xffff8bd37258   408  mov x1, x6
0xffff8bd3725c   412  ldr x2, pc+1380 (addr 0x0000ffff8bd377c0)    ;; external reference (isolate)
0xffff8bd37260   416  ldr x16, pc+1384 (addr 0x0000ffff8bd377c8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd37264   420  and csp, jssp, #0xfffffffffffffff0
0xffff8bd37268   424  blr x16
0xffff8bd3726c   428  ldp d2, d3, [jssp, #16]
0xffff8bd37270   432  ldp d0, d1, [jssp], #32
0xffff8bd37274   436  ldp d6, d7, [jssp, #16]
0xffff8bd37278   440  ldp d4, d5, [jssp], #32
0xffff8bd3727c   444  ldp d18, d19, [jssp, #16]
0xffff8bd37280   448  ldp d16, d17, [jssp], #32
0xffff8bd37284   452  ldp d22, d23, [jssp, #16]
0xffff8bd37288   456  ldp d20, d21, [jssp], #32
0xffff8bd3728c   460  ldp d26, d27, [jssp, #16]
0xffff8bd37290   464  ldp d24, d25, [jssp], #32
0xffff8bd37294   468  ldp d28, d29, [jssp], #16
0xffff8bd37298   472  ldp x4, x5, [jssp, #16]
0xffff8bd3729c   476  ldp x1, x3, [jssp], #32
0xffff8bd372a0   480  ldp x8, x9, [jssp, #16]
0xffff8bd372a4   484  ldp x6, x7, [jssp], #32
0xffff8bd372a8   488  ldp x12, x14, [jssp, #16]
0xffff8bd372ac   492  ldp x10, x11, [jssp], #32
0xffff8bd372b0   496  ldr lr, [jssp, #16]
0xffff8bd372b4   500  ldp x15, x18, [jssp], #24
0xffff8bd372b8   504  ldp x2, x0, [jssp], #16
0xffff8bd372bc   508  ldr x16, pc+1300 (addr 0x0000ffff8bd377d0)    ;; external reference (store_buffer_top)
0xffff8bd372c0   512  ldr x13, [x16]
0xffff8bd372c4   516  str x6, [x13], #8
0xffff8bd372c8   520  str x13, [x16]
0xffff8bd372cc   524  tst x13, #0x1ffff
0xffff8bd372d0   528  b.eq #+0x8 (addr 0xffff8bd372d8)
0xffff8bd372d4   532  ret
0xffff8bd372d8   536  sub csp, jssp, #0x8 (8)
0xffff8bd372dc   540  str lr, [jssp, #-8]!
0xffff8bd372e0   544  ldr x17, pc+1272 (addr 0x0000ffff8bd377d8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd372e4   548  blr x17
0xffff8bd372e8   552  ldr lr, [jssp], #8
0xffff8bd372ec   556  ret
0xffff8bd372f0   560  and x13, x1, #0xfffffffffff00000
0xffff8bd372f4   564  ldr x0, [x13, #104]
0xffff8bd372f8   568  subs x0, x0, #0x1 (1)
0xffff8bd372fc   572  str x0, [x13, #104]
0xffff8bd37300   576  b.mi #+0x64 (addr 0xffff8bd37364)
0xffff8bd37304   580  ubfx x16, x1, #8, #12
0xffff8bd37308   584  and x13, x1, #0xfffffffffff00000
0xffff8bd3730c   588  add x13, x13, x16, lsl #2
0xffff8bd37310   592  ubfx x0, x1, #3, #5
0xffff8bd37314   596  ldr x13, [x13, #360]
0xffff8bd37318   600  lsr x13, x13, x0
0xffff8bd3731c   604  tbz w13, #0, #+0x8 (addr 0xffff8bd37324)
0xffff8bd37320   608  tbnz w13, #1, #+0xc (addr 0xffff8bd3732c)
0xffff8bd37324   612  ldp x2, x0, [jssp], #16
0xffff8bd37328   616  ret
0xffff8bd3732c   620  ldr x13, [x6]
0xffff8bd37330   624  sub csp, jssp, #0x10 (16)
0xffff8bd37334   628  stp x1, x6, [jssp, #-16]!
0xffff8bd37338   632  ubfx x16, x13, #8, #12
0xffff8bd3733c   636  and x0, x13, #0xfffffffffff00000
0xffff8bd37340   640  add x0, x0, x16, lsl #2
0xffff8bd37344   644  ubfx x1, x13, #3, #5
0xffff8bd37348   648  ldr x6, [x0, #360]
0xffff8bd3734c   652  lsr x6, x6, x1
0xffff8bd37350   656  tbz w6, #0, #+0x10 (addr 0xffff8bd37360)
0xffff8bd37354   660  ldp x1, x6, [jssp], #16
0xffff8bd37358   664  ldp x2, x0, [jssp], #16
0xffff8bd3735c   668  ret
0xffff8bd37360   672  ldp x1, x6, [jssp], #16
0xffff8bd37364   676  sub csp, jssp, #0x78 (120)
0xffff8bd37368   680  stp x14, x15, [jssp, #-32]!
0xffff8bd3736c   684  stp x18, lr, [jssp, #16]
0xffff8bd37370   688  stp x9, x10, [jssp, #-32]!
0xffff8bd37374   692  stp x11, x12, [jssp, #16]
0xffff8bd37378   696  stp x5, x6, [jssp, #-32]!
0xffff8bd3737c   700  stp x7, x8, [jssp, #16]
0xffff8bd37380   704  stp x1, x3, [jssp, #-24]!
0xffff8bd37384   708  str x4, [jssp, #16]
0xffff8bd37388   712  sub csp, jssp, #0xb0 (176)
0xffff8bd3738c   716  stp d26, d27, [jssp, #-32]!
0xffff8bd37390   720  stp d28, d29, [jssp, #16]
0xffff8bd37394   724  stp d22, d23, [jssp, #-32]!
0xffff8bd37398   728  stp d24, d25, [jssp, #16]
0xffff8bd3739c   732  stp d18, d19, [jssp, #-32]!
0xffff8bd373a0   736  stp d20, d21, [jssp, #16]
0xffff8bd373a4   740  stp d6, d7, [jssp, #-32]!
0xffff8bd373a8   744  stp d16, d17, [jssp, #16]
0xffff8bd373ac   748  stp d2, d3, [jssp, #-32]!
0xffff8bd373b0   752  stp d4, d5, [jssp, #16]
0xffff8bd373b4   756  stp d0, d1, [jssp, #-16]!
0xffff8bd373b8   760  mov x0, x1
0xffff8bd373bc   764  mov x1, x6
0xffff8bd373c0   768  ldr x2, pc+1056 (addr 0x0000ffff8bd377e0)    ;; external reference (isolate)
0xffff8bd373c4   772  ldr x16, pc+1060 (addr 0x0000ffff8bd377e8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd373c8   776  and csp, jssp, #0xfffffffffffffff0
0xffff8bd373cc   780  blr x16
0xffff8bd373d0   784  ldp d2, d3, [jssp, #16]
0xffff8bd373d4   788  ldp d0, d1, [jssp], #32
0xffff8bd373d8   792  ldp d6, d7, [jssp, #16]
0xffff8bd373dc   796  ldp d4, d5, [jssp], #32
0xffff8bd373e0   800  ldp d18, d19, [jssp, #16]
0xffff8bd373e4   804  ldp d16, d17, [jssp], #32
0xffff8bd373e8   808  ldp d22, d23, [jssp, #16]
0xffff8bd373ec   812  ldp d20, d21, [jssp], #32
0xffff8bd373f0   816  ldp d26, d27, [jssp, #16]
0xffff8bd373f4   820  ldp d24, d25, [jssp], #32
0xffff8bd373f8   824  ldp d28, d29, [jssp], #16
0xffff8bd373fc   828  ldp x4, x5, [jssp, #16]
0xffff8bd37400   832  ldp x1, x3, [jssp], #32
0xffff8bd37404   836  ldp x8, x9, [jssp, #16]
0xffff8bd37408   840  ldp x6, x7, [jssp], #32
0xffff8bd3740c   844  ldp x12, x14, [jssp, #16]
0xffff8bd37410   848  ldp x10, x11, [jssp], #32
0xffff8bd37414   852  ldr lr, [jssp, #16]
0xffff8bd37418   856  ldp x15, x18, [jssp], #24
0xffff8bd3741c   860  ldp x2, x0, [jssp], #16
0xffff8bd37420   864  ret
0xffff8bd37424   868  sub csp, jssp, #0x10 (16)
0xffff8bd37428   872  stp x2, x0, [jssp, #-16]!
0xffff8bd3742c   876  ldr x13, [x6]
0xffff8bd37430   880  and x16, x13, #0xfffffffffff00000
0xffff8bd37434   884  ldr x16, [x16, #8]
0xffff8bd37438   888  tst x16, #0x18
0xffff8bd3743c   892  b.eq #+0x1f8 (addr 0xffff8bd37634)
0xffff8bd37440   896  and x16, x1, #0xfffffffffff00000
0xffff8bd37444   900  ldr x16, [x16, #8]
0xffff8bd37448   904  tst x16, #0x18
0xffff8bd3744c   908  b.ne #+0x1e8 (addr 0xffff8bd37634)
0xffff8bd37450   912  and x13, x1, #0xfffffffffff00000
0xffff8bd37454   916  ldr x0, [x13, #104]
0xffff8bd37458   920  subs x0, x0, #0x1 (1)
0xffff8bd3745c   924  str x0, [x13, #104]
0xffff8bd37460   928  b.mi #+0xe4 (addr 0xffff8bd37544)
0xffff8bd37464   932  ubfx x16, x1, #8, #12
0xffff8bd37468   936  and x13, x1, #0xfffffffffff00000
0xffff8bd3746c   940  add x13, x13, x16, lsl #2
0xffff8bd37470   944  ubfx x0, x1, #3, #5
0xffff8bd37474   948  ldr x13, [x13, #360]
0xffff8bd37478   952  lsr x13, x13, x0
0xffff8bd3747c   956  tbz w13, #0, #+0x8 (addr 0xffff8bd37484)
0xffff8bd37480   960  tbnz w13, #1, #+0x3c (addr 0xffff8bd374bc)
0xffff8bd37484   964  ldp x2, x0, [jssp], #16
0xffff8bd37488   968  ldr x16, pc+872 (addr 0x0000ffff8bd377f0)    ;; external reference (store_buffer_top)
0xffff8bd3748c   972  ldr x13, [x16]
0xffff8bd37490   976  str x6, [x13], #8
0xffff8bd37494   980  str x13, [x16]
0xffff8bd37498   984  tst x13, #0x1ffff
0xffff8bd3749c   988  b.eq #+0x8 (addr 0xffff8bd374a4)
0xffff8bd374a0   992  ret
0xffff8bd374a4   996  sub csp, jssp, #0x8 (8)
0xffff8bd374a8  1000  str lr, [jssp, #-8]!
0xffff8bd374ac  1004  ldr x17, pc+844 (addr 0x0000ffff8bd377f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd374b0  1008  blr x17
0xffff8bd374b4  1012  ldr lr, [jssp], #8
0xffff8bd374b8  1016  ret
0xffff8bd374bc  1020  ldr x13, [x6]
0xffff8bd374c0  1024  and x0, x13, #0xfffffffffff00000
0xffff8bd374c4  1028  ldr x0, [x0, #8]
0xffff8bd374c8  1032  tbz w0, #6, #+0x18 (addr 0xffff8bd374e0)
0xffff8bd374cc  1036  and x0, x1, #0xfffffffffff00000
0xffff8bd374d0  1040  ldr x0, [x0, #8]
0xffff8bd374d4  1044  movz x16, #0x58
0xffff8bd374d8  1048  tst x0, x16
0xffff8bd374dc  1052  b.eq #+0x68 (addr 0xffff8bd37544)
0xffff8bd374e0  1056  sub csp, jssp, #0x10 (16)
0xffff8bd374e4  1060  stp x1, x6, [jssp, #-16]!
0xffff8bd374e8  1064  ubfx x16, x13, #8, #12
0xffff8bd374ec  1068  and x0, x13, #0xfffffffffff00000
0xffff8bd374f0  1072  add x0, x0, x16, lsl #2
0xffff8bd374f4  1076  ubfx x1, x13, #3, #5
0xffff8bd374f8  1080  ldr x6, [x0, #360]
0xffff8bd374fc  1084  lsr x6, x6, x1
0xffff8bd37500  1088  tbz w6, #0, #+0x40 (addr 0xffff8bd37540)
0xffff8bd37504  1092  ldp x1, x6, [jssp], #16
0xffff8bd37508  1096  ldp x2, x0, [jssp], #16
0xffff8bd3750c  1100  ldr x16, pc+756 (addr 0x0000ffff8bd37800)    ;; external reference (store_buffer_top)
0xffff8bd37510  1104  ldr x13, [x16]
0xffff8bd37514  1108  str x6, [x13], #8
0xffff8bd37518  1112  str x13, [x16]
0xffff8bd3751c  1116  tst x13, #0x1ffff
0xffff8bd37520  1120  b.eq #+0x8 (addr 0xffff8bd37528)
0xffff8bd37524  1124  ret
0xffff8bd37528  1128  sub csp, jssp, #0x8 (8)
0xffff8bd3752c  1132  str lr, [jssp, #-8]!
0xffff8bd37530  1136  ldr x17, pc+728 (addr 0x0000ffff8bd37808)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd37534  1140  blr x17
0xffff8bd37538  1144  ldr lr, [jssp], #8
0xffff8bd3753c  1148  ret
0xffff8bd37540  1152  ldp x1, x6, [jssp], #16
0xffff8bd37544  1156  sub csp, jssp, #0x78 (120)
0xffff8bd37548  1160  stp x14, x15, [jssp, #-32]!
0xffff8bd3754c  1164  stp x18, lr, [jssp, #16]
0xffff8bd37550  1168  stp x9, x10, [jssp, #-32]!
0xffff8bd37554  1172  stp x11, x12, [jssp, #16]
0xffff8bd37558  1176  stp x5, x6, [jssp, #-32]!
0xffff8bd3755c  1180  stp x7, x8, [jssp, #16]
0xffff8bd37560  1184  stp x1, x3, [jssp, #-24]!
0xffff8bd37564  1188  str x4, [jssp, #16]
0xffff8bd37568  1192  sub csp, jssp, #0xb0 (176)
0xffff8bd3756c  1196  stp d26, d27, [jssp, #-32]!
0xffff8bd37570  1200  stp d28, d29, [jssp, #16]
0xffff8bd37574  1204  stp d22, d23, [jssp, #-32]!
0xffff8bd37578  1208  stp d24, d25, [jssp, #16]
0xffff8bd3757c  1212  stp d18, d19, [jssp, #-32]!
0xffff8bd37580  1216  stp d20, d21, [jssp, #16]
0xffff8bd37584  1220  stp d6, d7, [jssp, #-32]!
0xffff8bd37588  1224  stp d16, d17, [jssp, #16]
0xffff8bd3758c  1228  stp d2, d3, [jssp, #-32]!
0xffff8bd37590  1232  stp d4, d5, [jssp, #16]
0xffff8bd37594  1236  stp d0, d1, [jssp, #-16]!
0xffff8bd37598  1240  mov x0, x1
0xffff8bd3759c  1244  mov x1, x6
0xffff8bd375a0  1248  ldr x2, pc+624 (addr 0x0000ffff8bd37810)    ;; external reference (isolate)
0xffff8bd375a4  1252  ldr x16, pc+628 (addr 0x0000ffff8bd37818)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd375a8  1256  and csp, jssp, #0xfffffffffffffff0
0xffff8bd375ac  1260  blr x16
0xffff8bd375b0  1264  ldp d2, d3, [jssp, #16]
0xffff8bd375b4  1268  ldp d0, d1, [jssp], #32
0xffff8bd375b8  1272  ldp d6, d7, [jssp, #16]
0xffff8bd375bc  1276  ldp d4, d5, [jssp], #32
0xffff8bd375c0  1280  ldp d18, d19, [jssp, #16]
0xffff8bd375c4  1284  ldp d16, d17, [jssp], #32
0xffff8bd375c8  1288  ldp d22, d23, [jssp, #16]
0xffff8bd375cc  1292  ldp d20, d21, [jssp], #32
0xffff8bd375d0  1296  ldp d26, d27, [jssp, #16]
0xffff8bd375d4  1300  ldp d24, d25, [jssp], #32
0xffff8bd375d8  1304  ldp d28, d29, [jssp], #16
0xffff8bd375dc  1308  ldp x4, x5, [jssp, #16]
0xffff8bd375e0  1312  ldp x1, x3, [jssp], #32
0xffff8bd375e4  1316  ldp x8, x9, [jssp, #16]
0xffff8bd375e8  1320  ldp x6, x7, [jssp], #32
0xffff8bd375ec  1324  ldp x12, x14, [jssp, #16]
0xffff8bd375f0  1328  ldp x10, x11, [jssp], #32
0xffff8bd375f4  1332  ldr lr, [jssp, #16]
0xffff8bd375f8  1336  ldp x15, x18, [jssp], #24
0xffff8bd375fc  1340  ldp x2, x0, [jssp], #16
0xffff8bd37600  1344  ldr x16, pc+544 (addr 0x0000ffff8bd37820)    ;; external reference (store_buffer_top)
0xffff8bd37604  1348  ldr x13, [x16]
0xffff8bd37608  1352  str x6, [x13], #8
0xffff8bd3760c  1356  str x13, [x16]
0xffff8bd37610  1360  tst x13, #0x1ffff
0xffff8bd37614  1364  b.eq #+0x8 (addr 0xffff8bd3761c)
0xffff8bd37618  1368  ret
0xffff8bd3761c  1372  sub csp, jssp, #0x8 (8)
0xffff8bd37620  1376  str lr, [jssp, #-8]!
0xffff8bd37624  1380  ldr x17, pc+516 (addr 0x0000ffff8bd37828)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd37628  1384  blr x17
0xffff8bd3762c  1388  ldr lr, [jssp], #8
0xffff8bd37630  1392  ret
0xffff8bd37634  1396  and x13, x1, #0xfffffffffff00000
0xffff8bd37638  1400  ldr x0, [x13, #104]
0xffff8bd3763c  1404  subs x0, x0, #0x1 (1)
0xffff8bd37640  1408  str x0, [x13, #104]
0xffff8bd37644  1412  b.mi #+0x84 (addr 0xffff8bd376c8)
0xffff8bd37648  1416  ubfx x16, x1, #8, #12
0xffff8bd3764c  1420  and x13, x1, #0xfffffffffff00000
0xffff8bd37650  1424  add x13, x13, x16, lsl #2
0xffff8bd37654  1428  ubfx x0, x1, #3, #5
0xffff8bd37658  1432  ldr x13, [x13, #360]
0xffff8bd3765c  1436  lsr x13, x13, x0
0xffff8bd37660  1440  tbz w13, #0, #+0x8 (addr 0xffff8bd37668)
0xffff8bd37664  1444  tbnz w13, #1, #+0xc (addr 0xffff8bd37670)
0xffff8bd37668  1448  ldp x2, x0, [jssp], #16
0xffff8bd3766c  1452  ret
0xffff8bd37670  1456  ldr x13, [x6]
0xffff8bd37674  1460  and x0, x13, #0xfffffffffff00000
0xffff8bd37678  1464  ldr x0, [x0, #8]
0xffff8bd3767c  1468  tbz w0, #6, #+0x18 (addr 0xffff8bd37694)
0xffff8bd37680  1472  and x0, x1, #0xfffffffffff00000
0xffff8bd37684  1476  ldr x0, [x0, #8]
0xffff8bd37688  1480  movz x16, #0x58
0xffff8bd3768c  1484  tst x0, x16
0xffff8bd37690  1488  b.eq #+0x38 (addr 0xffff8bd376c8)
0xffff8bd37694  1492  sub csp, jssp, #0x10 (16)
0xffff8bd37698  1496  stp x1, x6, [jssp, #-16]!
0xffff8bd3769c  1500  ubfx x16, x13, #8, #12
0xffff8bd376a0  1504  and x0, x13, #0xfffffffffff00000
0xffff8bd376a4  1508  add x0, x0, x16, lsl #2
0xffff8bd376a8  1512  ubfx x1, x13, #3, #5
0xffff8bd376ac  1516  ldr x6, [x0, #360]
0xffff8bd376b0  1520  lsr x6, x6, x1
0xffff8bd376b4  1524  tbz w6, #0, #+0x10 (addr 0xffff8bd376c4)
0xffff8bd376b8  1528  ldp x1, x6, [jssp], #16
0xffff8bd376bc  1532  ldp x2, x0, [jssp], #16
0xffff8bd376c0  1536  ret
0xffff8bd376c4  1540  ldp x1, x6, [jssp], #16
0xffff8bd376c8  1544  sub csp, jssp, #0x78 (120)
0xffff8bd376cc  1548  stp x14, x15, [jssp, #-32]!
0xffff8bd376d0  1552  stp x18, lr, [jssp, #16]
0xffff8bd376d4  1556  stp x9, x10, [jssp, #-32]!
0xffff8bd376d8  1560  stp x11, x12, [jssp, #16]
0xffff8bd376dc  1564  stp x5, x6, [jssp, #-32]!
0xffff8bd376e0  1568  stp x7, x8, [jssp, #16]
0xffff8bd376e4  1572  stp x1, x3, [jssp, #-24]!
0xffff8bd376e8  1576  str x4, [jssp, #16]
0xffff8bd376ec  1580  sub csp, jssp, #0xb0 (176)
0xffff8bd376f0  1584  stp d26, d27, [jssp, #-32]!
0xffff8bd376f4  1588  stp d28, d29, [jssp, #16]
0xffff8bd376f8  1592  stp d22, d23, [jssp, #-32]!
0xffff8bd376fc  1596  stp d24, d25, [jssp, #16]
0xffff8bd37700  1600  stp d18, d19, [jssp, #-32]!
0xffff8bd37704  1604  stp d20, d21, [jssp, #16]
0xffff8bd37708  1608  stp d6, d7, [jssp, #-32]!
0xffff8bd3770c  1612  stp d16, d17, [jssp, #16]
0xffff8bd37710  1616  stp d2, d3, [jssp, #-32]!
0xffff8bd37714  1620  stp d4, d5, [jssp, #16]
0xffff8bd37718  1624  stp d0, d1, [jssp, #-16]!
0xffff8bd3771c  1628  mov x0, x1
0xffff8bd37720  1632  mov x1, x6
0xffff8bd37724  1636  ldr x2, pc+268 (addr 0x0000ffff8bd37830)    ;; external reference (isolate)
0xffff8bd37728  1640  ldr x16, pc+272 (addr 0x0000ffff8bd37838)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd3772c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff8bd37730  1648  blr x16
0xffff8bd37734  1652  ldp d2, d3, [jssp, #16]
0xffff8bd37738  1656  ldp d0, d1, [jssp], #32
0xffff8bd3773c  1660  ldp d6, d7, [jssp, #16]
0xffff8bd37740  1664  ldp d4, d5, [jssp], #32
0xffff8bd37744  1668  ldp d18, d19, [jssp, #16]
0xffff8bd37748  1672  ldp d16, d17, [jssp], #32
0xffff8bd3774c  1676  ldp d22, d23, [jssp, #16]
0xffff8bd37750  1680  ldp d20, d21, [jssp], #32
0xffff8bd37754  1684  ldp d26, d27, [jssp, #16]
0xffff8bd37758  1688  ldp d24, d25, [jssp], #32
0xffff8bd3775c  1692  ldp d28, d29, [jssp], #16
0xffff8bd37760  1696  ldp x4, x5, [jssp, #16]
0xffff8bd37764  1700  ldp x1, x3, [jssp], #32
0xffff8bd37768  1704  ldp x8, x9, [jssp, #16]
0xffff8bd3776c  1708  ldp x6, x7, [jssp], #32
0xffff8bd37770  1712  ldp x12, x14, [jssp, #16]
0xffff8bd37774  1716  ldp x10, x11, [jssp], #32
0xffff8bd37778  1720  ldr lr, [jssp, #16]
0xffff8bd3777c  1724  ldp x15, x18, [jssp], #24
0xffff8bd37780  1728  ldp x2, x0, [jssp], #16
0xffff8bd37784  1732  ret
0xffff8bd37788  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd3778c  1740  d63f03e0       constant
0xffff8bd37790  1744  2cb8e8c0       constant
0xffff8bd37794  1748  00000000       constant
0xffff8bd37798  1752  8bd065a0       constant
0xffff8bd3779c  1756  0000ffff       constant
0xffff8bd377a0  1760  2cb8e8c0       constant
0xffff8bd377a4  1764  00000000       constant
0xffff8bd377a8  1768  8bd065a0       constant
0xffff8bd377ac  1772  0000ffff       constant
0xffff8bd377b0  1776  2cb8e8c0       constant
0xffff8bd377b4  1780  00000000       constant
0xffff8bd377b8  1784  8bd065a0       constant
0xffff8bd377bc  1788  0000ffff       constant
0xffff8bd377c0  1792  2cb8d2d0       constant
0xffff8bd377c4  1796  00000000       constant
0xffff8bd377c8  1800  00c2d958       constant
0xffff8bd377cc  1804  00000000       constant
0xffff8bd377d0  1808  2cb8e8c0       constant
0xffff8bd377d4  1812  00000000       constant
0xffff8bd377d8  1816  8bd065a0       constant
0xffff8bd377dc  1820  0000ffff       constant
0xffff8bd377e0  1824  2cb8d2d0       constant
0xffff8bd377e4  1828  00000000       constant
0xffff8bd377e8  1832  00c2d958       constant
0xffff8bd377ec  1836  00000000       constant
0xffff8bd377f0  1840  2cb8e8c0       constant
0xffff8bd377f4  1844  00000000       constant
0xffff8bd377f8  1848  8bd065a0       constant
0xffff8bd377fc  1852  0000ffff       constant
0xffff8bd37800  1856  2cb8e8c0       constant
0xffff8bd37804  1860  00000000       constant
0xffff8bd37808  1864  8bd065a0       constant
0xffff8bd3780c  1868  0000ffff       constant
0xffff8bd37810  1872  2cb8d2d0       constant
0xffff8bd37814  1876  00000000       constant
0xffff8bd37818  1880  00c2d958       constant
0xffff8bd3781c  1884  00000000       constant
0xffff8bd37820  1888  2cb8e8c0       constant
0xffff8bd37824  1892  00000000       constant
0xffff8bd37828  1896  8bd065a0       constant
0xffff8bd3782c  1900  0000ffff       constant
0xffff8bd37830  1904  2cb8d2d0       constant
0xffff8bd37834  1908  00000000       constant
0xffff8bd37838  1912  00c2d958       constant
0xffff8bd3783c  1916  00000000       constant


RelocInfo (size = 65)
0xffff8bd370c8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd370ec  code target (STUB)  (0xffff8bd065a0)
0xffff8bd37164  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd37188  code target (STUB)  (0xffff8bd065a0)
0xffff8bd371c8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd371ec  code target (STUB)  (0xffff8bd065a0)
0xffff8bd3725c  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd37260  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd372bc  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd372e0  code target (STUB)  (0xffff8bd065a0)
0xffff8bd373c0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd373c4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd37488  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd374ac  code target (STUB)  (0xffff8bd065a0)
0xffff8bd3750c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd37530  code target (STUB)  (0xffff8bd065a0)
0xffff8bd375a0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd375a4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd37600  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd37624  code target (STUB)  (0xffff8bd065a0)
0xffff8bd37724  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd37728  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd37788  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff8bd378a0     0  adr xzr, #+0x40 (addr 0xffff8bd378e0)
0xffff8bd378a4     4  adr xzr, #+0x360 (addr 0xffff8bd37c04)
0xffff8bd378a8     8  ldr x16, pc+1736 (addr 0x0000ffff8bd37f70)    ;; external reference (store_buffer_top)
0xffff8bd378ac    12  ldr x2, [x16]
0xffff8bd378b0    16  str x3, [x2], #8
0xffff8bd378b4    20  str x2, [x16]
0xffff8bd378b8    24  tst x2, #0x1ffff
0xffff8bd378bc    28  b.eq #+0x8 (addr 0xffff8bd378c4)
0xffff8bd378c0    32  ret
0xffff8bd378c4    36  sub csp, jssp, #0x8 (8)
0xffff8bd378c8    40  str lr, [jssp, #-8]!
0xffff8bd378cc    44  ldr x17, pc+1708 (addr 0x0000ffff8bd37f78)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd378d0    48  blr x17
0xffff8bd378d4    52  ldr lr, [jssp], #8
0xffff8bd378d8    56  ret
0xffff8bd378dc    60  ret
0xffff8bd378e0    64  sub csp, jssp, #0x10 (16)
0xffff8bd378e4    68  stp x1, x0, [jssp, #-16]!
0xffff8bd378e8    72  ldr x2, [x3]
0xffff8bd378ec    76  and x16, x2, #0xfffffffffff00000
0xffff8bd378f0    80  ldr x16, [x16, #8]
0xffff8bd378f4    84  tst x16, #0x18
0xffff8bd378f8    88  b.eq #+0x1d8 (addr 0xffff8bd37ad0)
0xffff8bd378fc    92  and x16, x4, #0xfffffffffff00000
0xffff8bd37900    96  ldr x16, [x16, #8]
0xffff8bd37904   100  tst x16, #0x18
0xffff8bd37908   104  b.ne #+0x1c8 (addr 0xffff8bd37ad0)
0xffff8bd3790c   108  and x2, x4, #0xfffffffffff00000
0xffff8bd37910   112  ldr x0, [x2, #104]
0xffff8bd37914   116  subs x0, x0, #0x1 (1)
0xffff8bd37918   120  str x0, [x2, #104]
0xffff8bd3791c   124  b.mi #+0xc4 (addr 0xffff8bd379e0)
0xffff8bd37920   128  ubfx x16, x4, #8, #12
0xffff8bd37924   132  and x2, x4, #0xfffffffffff00000
0xffff8bd37928   136  add x2, x2, x16, lsl #2
0xffff8bd3792c   140  ubfx x0, x4, #3, #5
0xffff8bd37930   144  ldr x2, [x2, #360]
0xffff8bd37934   148  lsr x2, x2, x0
0xffff8bd37938   152  tbz w2, #0, #+0x8 (addr 0xffff8bd37940)
0xffff8bd3793c   156  tbnz w2, #1, #+0x3c (addr 0xffff8bd37978)
0xffff8bd37940   160  ldp x1, x0, [jssp], #16
0xffff8bd37944   164  ldr x16, pc+1596 (addr 0x0000ffff8bd37f80)    ;; external reference (store_buffer_top)
0xffff8bd37948   168  ldr x2, [x16]
0xffff8bd3794c   172  str x3, [x2], #8
0xffff8bd37950   176  str x2, [x16]
0xffff8bd37954   180  tst x2, #0x1ffff
0xffff8bd37958   184  b.eq #+0x8 (addr 0xffff8bd37960)
0xffff8bd3795c   188  ret
0xffff8bd37960   192  sub csp, jssp, #0x8 (8)
0xffff8bd37964   196  str lr, [jssp, #-8]!
0xffff8bd37968   200  ldr x17, pc+1568 (addr 0x0000ffff8bd37f88)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd3796c   204  blr x17
0xffff8bd37970   208  ldr lr, [jssp], #8
0xffff8bd37974   212  ret
0xffff8bd37978   216  ldr x2, [x3]
0xffff8bd3797c   220  sub csp, jssp, #0x10 (16)
0xffff8bd37980   224  stp x4, x3, [jssp, #-16]!
0xffff8bd37984   228  ubfx x16, x2, #8, #12
0xffff8bd37988   232  and x0, x2, #0xfffffffffff00000
0xffff8bd3798c   236  add x0, x0, x16, lsl #2
0xffff8bd37990   240  ubfx x4, x2, #3, #5
0xffff8bd37994   244  ldr x3, [x0, #360]
0xffff8bd37998   248  lsr x3, x3, x4
0xffff8bd3799c   252  tbz w3, #0, #+0x40 (addr 0xffff8bd379dc)
0xffff8bd379a0   256  ldp x4, x3, [jssp], #16
0xffff8bd379a4   260  ldp x1, x0, [jssp], #16
0xffff8bd379a8   264  ldr x16, pc+1512 (addr 0x0000ffff8bd37f90)    ;; external reference (store_buffer_top)
0xffff8bd379ac   268  ldr x2, [x16]
0xffff8bd379b0   272  str x3, [x2], #8
0xffff8bd379b4   276  str x2, [x16]
0xffff8bd379b8   280  tst x2, #0x1ffff
0xffff8bd379bc   284  b.eq #+0x8 (addr 0xffff8bd379c4)
0xffff8bd379c0   288  ret
0xffff8bd379c4   292  sub csp, jssp, #0x8 (8)
0xffff8bd379c8   296  str lr, [jssp, #-8]!
0xffff8bd379cc   300  ldr x17, pc+1484 (addr 0x0000ffff8bd37f98)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd379d0   304  blr x17
0xffff8bd379d4   308  ldr lr, [jssp], #8
0xffff8bd379d8   312  ret
0xffff8bd379dc   316  ldp x4, x3, [jssp], #16
0xffff8bd379e0   320  sub csp, jssp, #0x78 (120)
0xffff8bd379e4   324  stp x14, x15, [jssp, #-32]!
0xffff8bd379e8   328  stp x18, lr, [jssp, #16]
0xffff8bd379ec   332  stp x10, x11, [jssp, #-32]!
0xffff8bd379f0   336  stp x12, x13, [jssp, #16]
0xffff8bd379f4   340  stp x6, x7, [jssp, #-32]!
0xffff8bd379f8   344  stp x8, x9, [jssp, #16]
0xffff8bd379fc   348  stp x3, x4, [jssp, #-24]!
0xffff8bd37a00   352  str x5, [jssp, #16]
0xffff8bd37a04   356  sub csp, jssp, #0xb0 (176)
0xffff8bd37a08   360  stp d26, d27, [jssp, #-32]!
0xffff8bd37a0c   364  stp d28, d29, [jssp, #16]
0xffff8bd37a10   368  stp d22, d23, [jssp, #-32]!
0xffff8bd37a14   372  stp d24, d25, [jssp, #16]
0xffff8bd37a18   376  stp d18, d19, [jssp, #-32]!
0xffff8bd37a1c   380  stp d20, d21, [jssp, #16]
0xffff8bd37a20   384  stp d6, d7, [jssp, #-32]!
0xffff8bd37a24   388  stp d16, d17, [jssp, #16]
0xffff8bd37a28   392  stp d2, d3, [jssp, #-32]!
0xffff8bd37a2c   396  stp d4, d5, [jssp, #16]
0xffff8bd37a30   400  stp d0, d1, [jssp, #-16]!
0xffff8bd37a34   404  mov x0, x4
0xffff8bd37a38   408  mov x1, x3
0xffff8bd37a3c   412  ldr x2, pc+1380 (addr 0x0000ffff8bd37fa0)    ;; external reference (isolate)
0xffff8bd37a40   416  ldr x16, pc+1384 (addr 0x0000ffff8bd37fa8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd37a44   420  and csp, jssp, #0xfffffffffffffff0
0xffff8bd37a48   424  blr x16
0xffff8bd37a4c   428  ldp d2, d3, [jssp, #16]
0xffff8bd37a50   432  ldp d0, d1, [jssp], #32
0xffff8bd37a54   436  ldp d6, d7, [jssp, #16]
0xffff8bd37a58   440  ldp d4, d5, [jssp], #32
0xffff8bd37a5c   444  ldp d18, d19, [jssp, #16]
0xffff8bd37a60   448  ldp d16, d17, [jssp], #32
0xffff8bd37a64   452  ldp d22, d23, [jssp, #16]
0xffff8bd37a68   456  ldp d20, d21, [jssp], #32
0xffff8bd37a6c   460  ldp d26, d27, [jssp, #16]
0xffff8bd37a70   464  ldp d24, d25, [jssp], #32
0xffff8bd37a74   468  ldp d28, d29, [jssp], #16
0xffff8bd37a78   472  ldp x5, x6, [jssp, #16]
0xffff8bd37a7c   476  ldp x3, x4, [jssp], #32
0xffff8bd37a80   480  ldp x9, x10, [jssp, #16]
0xffff8bd37a84   484  ldp x7, x8, [jssp], #32
0xffff8bd37a88   488  ldp x13, x14, [jssp, #16]
0xffff8bd37a8c   492  ldp x11, x12, [jssp], #32
0xffff8bd37a90   496  ldr lr, [jssp, #16]
0xffff8bd37a94   500  ldp x15, x18, [jssp], #24
0xffff8bd37a98   504  ldp x1, x0, [jssp], #16
0xffff8bd37a9c   508  ldr x16, pc+1300 (addr 0x0000ffff8bd37fb0)    ;; external reference (store_buffer_top)
0xffff8bd37aa0   512  ldr x2, [x16]
0xffff8bd37aa4   516  str x3, [x2], #8
0xffff8bd37aa8   520  str x2, [x16]
0xffff8bd37aac   524  tst x2, #0x1ffff
0xffff8bd37ab0   528  b.eq #+0x8 (addr 0xffff8bd37ab8)
0xffff8bd37ab4   532  ret
0xffff8bd37ab8   536  sub csp, jssp, #0x8 (8)
0xffff8bd37abc   540  str lr, [jssp, #-8]!
0xffff8bd37ac0   544  ldr x17, pc+1272 (addr 0x0000ffff8bd37fb8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd37ac4   548  blr x17
0xffff8bd37ac8   552  ldr lr, [jssp], #8
0xffff8bd37acc   556  ret
0xffff8bd37ad0   560  and x2, x4, #0xfffffffffff00000
0xffff8bd37ad4   564  ldr x0, [x2, #104]
0xffff8bd37ad8   568  subs x0, x0, #0x1 (1)
0xffff8bd37adc   572  str x0, [x2, #104]
0xffff8bd37ae0   576  b.mi #+0x64 (addr 0xffff8bd37b44)
0xffff8bd37ae4   580  ubfx x16, x4, #8, #12
0xffff8bd37ae8   584  and x2, x4, #0xfffffffffff00000
0xffff8bd37aec   588  add x2, x2, x16, lsl #2
0xffff8bd37af0   592  ubfx x0, x4, #3, #5
0xffff8bd37af4   596  ldr x2, [x2, #360]
0xffff8bd37af8   600  lsr x2, x2, x0
0xffff8bd37afc   604  tbz w2, #0, #+0x8 (addr 0xffff8bd37b04)
0xffff8bd37b00   608  tbnz w2, #1, #+0xc (addr 0xffff8bd37b0c)
0xffff8bd37b04   612  ldp x1, x0, [jssp], #16
0xffff8bd37b08   616  ret
0xffff8bd37b0c   620  ldr x2, [x3]
0xffff8bd37b10   624  sub csp, jssp, #0x10 (16)
0xffff8bd37b14   628  stp x4, x3, [jssp, #-16]!
0xffff8bd37b18   632  ubfx x16, x2, #8, #12
0xffff8bd37b1c   636  and x0, x2, #0xfffffffffff00000
0xffff8bd37b20   640  add x0, x0, x16, lsl #2
0xffff8bd37b24   644  ubfx x4, x2, #3, #5
0xffff8bd37b28   648  ldr x3, [x0, #360]
0xffff8bd37b2c   652  lsr x3, x3, x4
0xffff8bd37b30   656  tbz w3, #0, #+0x10 (addr 0xffff8bd37b40)
0xffff8bd37b34   660  ldp x4, x3, [jssp], #16
0xffff8bd37b38   664  ldp x1, x0, [jssp], #16
0xffff8bd37b3c   668  ret
0xffff8bd37b40   672  ldp x4, x3, [jssp], #16
0xffff8bd37b44   676  sub csp, jssp, #0x78 (120)
0xffff8bd37b48   680  stp x14, x15, [jssp, #-32]!
0xffff8bd37b4c   684  stp x18, lr, [jssp, #16]
0xffff8bd37b50   688  stp x10, x11, [jssp, #-32]!
0xffff8bd37b54   692  stp x12, x13, [jssp, #16]
0xffff8bd37b58   696  stp x6, x7, [jssp, #-32]!
0xffff8bd37b5c   700  stp x8, x9, [jssp, #16]
0xffff8bd37b60   704  stp x3, x4, [jssp, #-24]!
0xffff8bd37b64   708  str x5, [jssp, #16]
0xffff8bd37b68   712  sub csp, jssp, #0xb0 (176)
0xffff8bd37b6c   716  stp d26, d27, [jssp, #-32]!
0xffff8bd37b70   720  stp d28, d29, [jssp, #16]
0xffff8bd37b74   724  stp d22, d23, [jssp, #-32]!
0xffff8bd37b78   728  stp d24, d25, [jssp, #16]
0xffff8bd37b7c   732  stp d18, d19, [jssp, #-32]!
0xffff8bd37b80   736  stp d20, d21, [jssp, #16]
0xffff8bd37b84   740  stp d6, d7, [jssp, #-32]!
0xffff8bd37b88   744  stp d16, d17, [jssp, #16]
0xffff8bd37b8c   748  stp d2, d3, [jssp, #-32]!
0xffff8bd37b90   752  stp d4, d5, [jssp, #16]
0xffff8bd37b94   756  stp d0, d1, [jssp, #-16]!
0xffff8bd37b98   760  mov x0, x4
0xffff8bd37b9c   764  mov x1, x3
0xffff8bd37ba0   768  ldr x2, pc+1056 (addr 0x0000ffff8bd37fc0)    ;; external reference (isolate)
0xffff8bd37ba4   772  ldr x16, pc+1060 (addr 0x0000ffff8bd37fc8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd37ba8   776  and csp, jssp, #0xfffffffffffffff0
0xffff8bd37bac   780  blr x16
0xffff8bd37bb0   784  ldp d2, d3, [jssp, #16]
0xffff8bd37bb4   788  ldp d0, d1, [jssp], #32
0xffff8bd37bb8   792  ldp d6, d7, [jssp, #16]
0xffff8bd37bbc   796  ldp d4, d5, [jssp], #32
0xffff8bd37bc0   800  ldp d18, d19, [jssp, #16]
0xffff8bd37bc4   804  ldp d16, d17, [jssp], #32
0xffff8bd37bc8   808  ldp d22, d23, [jssp, #16]
0xffff8bd37bcc   812  ldp d20, d21, [jssp], #32
0xffff8bd37bd0   816  ldp d26, d27, [jssp, #16]
0xffff8bd37bd4   820  ldp d24, d25, [jssp], #32
0xffff8bd37bd8   824  ldp d28, d29, [jssp], #16
0xffff8bd37bdc   828  ldp x5, x6, [jssp, #16]
0xffff8bd37be0   832  ldp x3, x4, [jssp], #32
0xffff8bd37be4   836  ldp x9, x10, [jssp, #16]
0xffff8bd37be8   840  ldp x7, x8, [jssp], #32
0xffff8bd37bec   844  ldp x13, x14, [jssp, #16]
0xffff8bd37bf0   848  ldp x11, x12, [jssp], #32
0xffff8bd37bf4   852  ldr lr, [jssp, #16]
0xffff8bd37bf8   856  ldp x15, x18, [jssp], #24
0xffff8bd37bfc   860  ldp x1, x0, [jssp], #16
0xffff8bd37c00   864  ret
0xffff8bd37c04   868  sub csp, jssp, #0x10 (16)
0xffff8bd37c08   872  stp x1, x0, [jssp, #-16]!
0xffff8bd37c0c   876  ldr x2, [x3]
0xffff8bd37c10   880  and x16, x2, #0xfffffffffff00000
0xffff8bd37c14   884  ldr x16, [x16, #8]
0xffff8bd37c18   888  tst x16, #0x18
0xffff8bd37c1c   892  b.eq #+0x1f8 (addr 0xffff8bd37e14)
0xffff8bd37c20   896  and x16, x4, #0xfffffffffff00000
0xffff8bd37c24   900  ldr x16, [x16, #8]
0xffff8bd37c28   904  tst x16, #0x18
0xffff8bd37c2c   908  b.ne #+0x1e8 (addr 0xffff8bd37e14)
0xffff8bd37c30   912  and x2, x4, #0xfffffffffff00000
0xffff8bd37c34   916  ldr x0, [x2, #104]
0xffff8bd37c38   920  subs x0, x0, #0x1 (1)
0xffff8bd37c3c   924  str x0, [x2, #104]
0xffff8bd37c40   928  b.mi #+0xe4 (addr 0xffff8bd37d24)
0xffff8bd37c44   932  ubfx x16, x4, #8, #12
0xffff8bd37c48   936  and x2, x4, #0xfffffffffff00000
0xffff8bd37c4c   940  add x2, x2, x16, lsl #2
0xffff8bd37c50   944  ubfx x0, x4, #3, #5
0xffff8bd37c54   948  ldr x2, [x2, #360]
0xffff8bd37c58   952  lsr x2, x2, x0
0xffff8bd37c5c   956  tbz w2, #0, #+0x8 (addr 0xffff8bd37c64)
0xffff8bd37c60   960  tbnz w2, #1, #+0x3c (addr 0xffff8bd37c9c)
0xffff8bd37c64   964  ldp x1, x0, [jssp], #16
0xffff8bd37c68   968  ldr x16, pc+872 (addr 0x0000ffff8bd37fd0)    ;; external reference (store_buffer_top)
0xffff8bd37c6c   972  ldr x2, [x16]
0xffff8bd37c70   976  str x3, [x2], #8
0xffff8bd37c74   980  str x2, [x16]
0xffff8bd37c78   984  tst x2, #0x1ffff
0xffff8bd37c7c   988  b.eq #+0x8 (addr 0xffff8bd37c84)
0xffff8bd37c80   992  ret
0xffff8bd37c84   996  sub csp, jssp, #0x8 (8)
0xffff8bd37c88  1000  str lr, [jssp, #-8]!
0xffff8bd37c8c  1004  ldr x17, pc+844 (addr 0x0000ffff8bd37fd8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd37c90  1008  blr x17
0xffff8bd37c94  1012  ldr lr, [jssp], #8
0xffff8bd37c98  1016  ret
0xffff8bd37c9c  1020  ldr x2, [x3]
0xffff8bd37ca0  1024  and x0, x2, #0xfffffffffff00000
0xffff8bd37ca4  1028  ldr x0, [x0, #8]
0xffff8bd37ca8  1032  tbz w0, #6, #+0x18 (addr 0xffff8bd37cc0)
0xffff8bd37cac  1036  and x0, x4, #0xfffffffffff00000
0xffff8bd37cb0  1040  ldr x0, [x0, #8]
0xffff8bd37cb4  1044  movz x16, #0x58
0xffff8bd37cb8  1048  tst x0, x16
0xffff8bd37cbc  1052  b.eq #+0x68 (addr 0xffff8bd37d24)
0xffff8bd37cc0  1056  sub csp, jssp, #0x10 (16)
0xffff8bd37cc4  1060  stp x4, x3, [jssp, #-16]!
0xffff8bd37cc8  1064  ubfx x16, x2, #8, #12
0xffff8bd37ccc  1068  and x0, x2, #0xfffffffffff00000
0xffff8bd37cd0  1072  add x0, x0, x16, lsl #2
0xffff8bd37cd4  1076  ubfx x4, x2, #3, #5
0xffff8bd37cd8  1080  ldr x3, [x0, #360]
0xffff8bd37cdc  1084  lsr x3, x3, x4
0xffff8bd37ce0  1088  tbz w3, #0, #+0x40 (addr 0xffff8bd37d20)
0xffff8bd37ce4  1092  ldp x4, x3, [jssp], #16
0xffff8bd37ce8  1096  ldp x1, x0, [jssp], #16
0xffff8bd37cec  1100  ldr x16, pc+756 (addr 0x0000ffff8bd37fe0)    ;; external reference (store_buffer_top)
0xffff8bd37cf0  1104  ldr x2, [x16]
0xffff8bd37cf4  1108  str x3, [x2], #8
0xffff8bd37cf8  1112  str x2, [x16]
0xffff8bd37cfc  1116  tst x2, #0x1ffff
0xffff8bd37d00  1120  b.eq #+0x8 (addr 0xffff8bd37d08)
0xffff8bd37d04  1124  ret
0xffff8bd37d08  1128  sub csp, jssp, #0x8 (8)
0xffff8bd37d0c  1132  str lr, [jssp, #-8]!
0xffff8bd37d10  1136  ldr x17, pc+728 (addr 0x0000ffff8bd37fe8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd37d14  1140  blr x17
0xffff8bd37d18  1144  ldr lr, [jssp], #8
0xffff8bd37d1c  1148  ret
0xffff8bd37d20  1152  ldp x4, x3, [jssp], #16
0xffff8bd37d24  1156  sub csp, jssp, #0x78 (120)
0xffff8bd37d28  1160  stp x14, x15, [jssp, #-32]!
0xffff8bd37d2c  1164  stp x18, lr, [jssp, #16]
0xffff8bd37d30  1168  stp x10, x11, [jssp, #-32]!
0xffff8bd37d34  1172  stp x12, x13, [jssp, #16]
0xffff8bd37d38  1176  stp x6, x7, [jssp, #-32]!
0xffff8bd37d3c  1180  stp x8, x9, [jssp, #16]
0xffff8bd37d40  1184  stp x3, x4, [jssp, #-24]!
0xffff8bd37d44  1188  str x5, [jssp, #16]
0xffff8bd37d48  1192  sub csp, jssp, #0xb0 (176)
0xffff8bd37d4c  1196  stp d26, d27, [jssp, #-32]!
0xffff8bd37d50  1200  stp d28, d29, [jssp, #16]
0xffff8bd37d54  1204  stp d22, d23, [jssp, #-32]!
0xffff8bd37d58  1208  stp d24, d25, [jssp, #16]
0xffff8bd37d5c  1212  stp d18, d19, [jssp, #-32]!
0xffff8bd37d60  1216  stp d20, d21, [jssp, #16]
0xffff8bd37d64  1220  stp d6, d7, [jssp, #-32]!
0xffff8bd37d68  1224  stp d16, d17, [jssp, #16]
0xffff8bd37d6c  1228  stp d2, d3, [jssp, #-32]!
0xffff8bd37d70  1232  stp d4, d5, [jssp, #16]
0xffff8bd37d74  1236  stp d0, d1, [jssp, #-16]!
0xffff8bd37d78  1240  mov x0, x4
0xffff8bd37d7c  1244  mov x1, x3
0xffff8bd37d80  1248  ldr x2, pc+624 (addr 0x0000ffff8bd37ff0)    ;; external reference (isolate)
0xffff8bd37d84  1252  ldr x16, pc+628 (addr 0x0000ffff8bd37ff8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd37d88  1256  and csp, jssp, #0xfffffffffffffff0
0xffff8bd37d8c  1260  blr x16
0xffff8bd37d90  1264  ldp d2, d3, [jssp, #16]
0xffff8bd37d94  1268  ldp d0, d1, [jssp], #32
0xffff8bd37d98  1272  ldp d6, d7, [jssp, #16]
0xffff8bd37d9c  1276  ldp d4, d5, [jssp], #32
0xffff8bd37da0  1280  ldp d18, d19, [jssp, #16]
0xffff8bd37da4  1284  ldp d16, d17, [jssp], #32
0xffff8bd37da8  1288  ldp d22, d23, [jssp, #16]
0xffff8bd37dac  1292  ldp d20, d21, [jssp], #32
0xffff8bd37db0  1296  ldp d26, d27, [jssp, #16]
0xffff8bd37db4  1300  ldp d24, d25, [jssp], #32
0xffff8bd37db8  1304  ldp d28, d29, [jssp], #16
0xffff8bd37dbc  1308  ldp x5, x6, [jssp, #16]
0xffff8bd37dc0  1312  ldp x3, x4, [jssp], #32
0xffff8bd37dc4  1316  ldp x9, x10, [jssp, #16]
0xffff8bd37dc8  1320  ldp x7, x8, [jssp], #32
0xffff8bd37dcc  1324  ldp x13, x14, [jssp, #16]
0xffff8bd37dd0  1328  ldp x11, x12, [jssp], #32
0xffff8bd37dd4  1332  ldr lr, [jssp, #16]
0xffff8bd37dd8  1336  ldp x15, x18, [jssp], #24
0xffff8bd37ddc  1340  ldp x1, x0, [jssp], #16
0xffff8bd37de0  1344  ldr x16, pc+544 (addr 0x0000ffff8bd38000)    ;; external reference (store_buffer_top)
0xffff8bd37de4  1348  ldr x2, [x16]
0xffff8bd37de8  1352  str x3, [x2], #8
0xffff8bd37dec  1356  str x2, [x16]
0xffff8bd37df0  1360  tst x2, #0x1ffff
0xffff8bd37df4  1364  b.eq #+0x8 (addr 0xffff8bd37dfc)
0xffff8bd37df8  1368  ret
0xffff8bd37dfc  1372  sub csp, jssp, #0x8 (8)
0xffff8bd37e00  1376  str lr, [jssp, #-8]!
0xffff8bd37e04  1380  ldr x17, pc+516 (addr 0x0000ffff8bd38008)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd37e08  1384  blr x17
0xffff8bd37e0c  1388  ldr lr, [jssp], #8
0xffff8bd37e10  1392  ret
0xffff8bd37e14  1396  and x2, x4, #0xfffffffffff00000
0xffff8bd37e18  1400  ldr x0, [x2, #104]
0xffff8bd37e1c  1404  subs x0, x0, #0x1 (1)
0xffff8bd37e20  1408  str x0, [x2, #104]
0xffff8bd37e24  1412  b.mi #+0x84 (addr 0xffff8bd37ea8)
0xffff8bd37e28  1416  ubfx x16, x4, #8, #12
0xffff8bd37e2c  1420  and x2, x4, #0xfffffffffff00000
0xffff8bd37e30  1424  add x2, x2, x16, lsl #2
0xffff8bd37e34  1428  ubfx x0, x4, #3, #5
0xffff8bd37e38  1432  ldr x2, [x2, #360]
0xffff8bd37e3c  1436  lsr x2, x2, x0
0xffff8bd37e40  1440  tbz w2, #0, #+0x8 (addr 0xffff8bd37e48)
0xffff8bd37e44  1444  tbnz w2, #1, #+0xc (addr 0xffff8bd37e50)
0xffff8bd37e48  1448  ldp x1, x0, [jssp], #16
0xffff8bd37e4c  1452  ret
0xffff8bd37e50  1456  ldr x2, [x3]
0xffff8bd37e54  1460  and x0, x2, #0xfffffffffff00000
0xffff8bd37e58  1464  ldr x0, [x0, #8]
0xffff8bd37e5c  1468  tbz w0, #6, #+0x18 (addr 0xffff8bd37e74)
0xffff8bd37e60  1472  and x0, x4, #0xfffffffffff00000
0xffff8bd37e64  1476  ldr x0, [x0, #8]
0xffff8bd37e68  1480  movz x16, #0x58
0xffff8bd37e6c  1484  tst x0, x16
0xffff8bd37e70  1488  b.eq #+0x38 (addr 0xffff8bd37ea8)
0xffff8bd37e74  1492  sub csp, jssp, #0x10 (16)
0xffff8bd37e78  1496  stp x4, x3, [jssp, #-16]!
0xffff8bd37e7c  1500  ubfx x16, x2, #8, #12
0xffff8bd37e80  1504  and x0, x2, #0xfffffffffff00000
0xffff8bd37e84  1508  add x0, x0, x16, lsl #2
0xffff8bd37e88  1512  ubfx x4, x2, #3, #5
0xffff8bd37e8c  1516  ldr x3, [x0, #360]
0xffff8bd37e90  1520  lsr x3, x3, x4
0xffff8bd37e94  1524  tbz w3, #0, #+0x10 (addr 0xffff8bd37ea4)
0xffff8bd37e98  1528  ldp x4, x3, [jssp], #16
0xffff8bd37e9c  1532  ldp x1, x0, [jssp], #16
0xffff8bd37ea0  1536  ret
0xffff8bd37ea4  1540  ldp x4, x3, [jssp], #16
0xffff8bd37ea8  1544  sub csp, jssp, #0x78 (120)
0xffff8bd37eac  1548  stp x14, x15, [jssp, #-32]!
0xffff8bd37eb0  1552  stp x18, lr, [jssp, #16]
0xffff8bd37eb4  1556  stp x10, x11, [jssp, #-32]!
0xffff8bd37eb8  1560  stp x12, x13, [jssp, #16]
0xffff8bd37ebc  1564  stp x6, x7, [jssp, #-32]!
0xffff8bd37ec0  1568  stp x8, x9, [jssp, #16]
0xffff8bd37ec4  1572  stp x3, x4, [jssp, #-24]!
0xffff8bd37ec8  1576  str x5, [jssp, #16]
0xffff8bd37ecc  1580  sub csp, jssp, #0xb0 (176)
0xffff8bd37ed0  1584  stp d26, d27, [jssp, #-32]!
0xffff8bd37ed4  1588  stp d28, d29, [jssp, #16]
0xffff8bd37ed8  1592  stp d22, d23, [jssp, #-32]!
0xffff8bd37edc  1596  stp d24, d25, [jssp, #16]
0xffff8bd37ee0  1600  stp d18, d19, [jssp, #-32]!
0xffff8bd37ee4  1604  stp d20, d21, [jssp, #16]
0xffff8bd37ee8  1608  stp d6, d7, [jssp, #-32]!
0xffff8bd37eec  1612  stp d16, d17, [jssp, #16]
0xffff8bd37ef0  1616  stp d2, d3, [jssp, #-32]!
0xffff8bd37ef4  1620  stp d4, d5, [jssp, #16]
0xffff8bd37ef8  1624  stp d0, d1, [jssp, #-16]!
0xffff8bd37efc  1628  mov x0, x4
0xffff8bd37f00  1632  mov x1, x3
0xffff8bd37f04  1636  ldr x2, pc+268 (addr 0x0000ffff8bd38010)    ;; external reference (isolate)
0xffff8bd37f08  1640  ldr x16, pc+272 (addr 0x0000ffff8bd38018)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd37f0c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff8bd37f10  1648  blr x16
0xffff8bd37f14  1652  ldp d2, d3, [jssp, #16]
0xffff8bd37f18  1656  ldp d0, d1, [jssp], #32
0xffff8bd37f1c  1660  ldp d6, d7, [jssp, #16]
0xffff8bd37f20  1664  ldp d4, d5, [jssp], #32
0xffff8bd37f24  1668  ldp d18, d19, [jssp, #16]
0xffff8bd37f28  1672  ldp d16, d17, [jssp], #32
0xffff8bd37f2c  1676  ldp d22, d23, [jssp, #16]
0xffff8bd37f30  1680  ldp d20, d21, [jssp], #32
0xffff8bd37f34  1684  ldp d26, d27, [jssp, #16]
0xffff8bd37f38  1688  ldp d24, d25, [jssp], #32
0xffff8bd37f3c  1692  ldp d28, d29, [jssp], #16
0xffff8bd37f40  1696  ldp x5, x6, [jssp, #16]
0xffff8bd37f44  1700  ldp x3, x4, [jssp], #32
0xffff8bd37f48  1704  ldp x9, x10, [jssp, #16]
0xffff8bd37f4c  1708  ldp x7, x8, [jssp], #32
0xffff8bd37f50  1712  ldp x13, x14, [jssp, #16]
0xffff8bd37f54  1716  ldp x11, x12, [jssp], #32
0xffff8bd37f58  1720  ldr lr, [jssp, #16]
0xffff8bd37f5c  1724  ldp x15, x18, [jssp], #24
0xffff8bd37f60  1728  ldp x1, x0, [jssp], #16
0xffff8bd37f64  1732  ret
0xffff8bd37f68  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd37f6c  1740  d63f03e0       constant
0xffff8bd37f70  1744  2cb8e8c0       constant
0xffff8bd37f74  1748  00000000       constant
0xffff8bd37f78  1752  8bd065a0       constant
0xffff8bd37f7c  1756  0000ffff       constant
0xffff8bd37f80  1760  2cb8e8c0       constant
0xffff8bd37f84  1764  00000000       constant
0xffff8bd37f88  1768  8bd065a0       constant
0xffff8bd37f8c  1772  0000ffff       constant
0xffff8bd37f90  1776  2cb8e8c0       constant
0xffff8bd37f94  1780  00000000       constant
0xffff8bd37f98  1784  8bd065a0       constant
0xffff8bd37f9c  1788  0000ffff       constant
0xffff8bd37fa0  1792  2cb8d2d0       constant
0xffff8bd37fa4  1796  00000000       constant
0xffff8bd37fa8  1800  00c2d958       constant
0xffff8bd37fac  1804  00000000       constant
0xffff8bd37fb0  1808  2cb8e8c0       constant
0xffff8bd37fb4  1812  00000000       constant
0xffff8bd37fb8  1816  8bd065a0       constant
0xffff8bd37fbc  1820  0000ffff       constant
0xffff8bd37fc0  1824  2cb8d2d0       constant
0xffff8bd37fc4  1828  00000000       constant
0xffff8bd37fc8  1832  00c2d958       constant
0xffff8bd37fcc  1836  00000000       constant
0xffff8bd37fd0  1840  2cb8e8c0       constant
0xffff8bd37fd4  1844  00000000       constant
0xffff8bd37fd8  1848  8bd065a0       constant
0xffff8bd37fdc  1852  0000ffff       constant
0xffff8bd37fe0  1856  2cb8e8c0       constant
0xffff8bd37fe4  1860  00000000       constant
0xffff8bd37fe8  1864  8bd065a0       constant
0xffff8bd37fec  1868  0000ffff       constant
0xffff8bd37ff0  1872  2cb8d2d0       constant
0xffff8bd37ff4  1876  00000000       constant
0xffff8bd37ff8  1880  00c2d958       constant
0xffff8bd37ffc  1884  00000000       constant
0xffff8bd38000  1888  2cb8e8c0       constant
0xffff8bd38004  1892  00000000       constant
0xffff8bd38008  1896  8bd065a0       constant
0xffff8bd3800c  1900  0000ffff       constant
0xffff8bd38010  1904  2cb8d2d0       constant
0xffff8bd38014  1908  00000000       constant
0xffff8bd38018  1912  00c2d958       constant
0xffff8bd3801c  1916  00000000       constant


RelocInfo (size = 65)
0xffff8bd378a8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd378cc  code target (STUB)  (0xffff8bd065a0)
0xffff8bd37944  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd37968  code target (STUB)  (0xffff8bd065a0)
0xffff8bd379a8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd379cc  code target (STUB)  (0xffff8bd065a0)
0xffff8bd37a3c  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd37a40  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd37a9c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd37ac0  code target (STUB)  (0xffff8bd065a0)
0xffff8bd37ba0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd37ba4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd37c68  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd37c8c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd37cec  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd37d10  code target (STUB)  (0xffff8bd065a0)
0xffff8bd37d80  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd37d84  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd37de0  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd37e04  code target (STUB)  (0xffff8bd065a0)
0xffff8bd37f04  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd37f08  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd37f68  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff8bd38080     0  adr xzr, #+0x40 (addr 0xffff8bd380c0)
0xffff8bd38084     4  adr xzr, #+0x360 (addr 0xffff8bd383e4)
0xffff8bd38088     8  ldr x16, pc+1736 (addr 0x0000ffff8bd38750)    ;; external reference (store_buffer_top)
0xffff8bd3808c    12  ldr x5, [x16]
0xffff8bd38090    16  str x2, [x5], #8
0xffff8bd38094    20  str x5, [x16]
0xffff8bd38098    24  tst x5, #0x1ffff
0xffff8bd3809c    28  b.eq #+0x8 (addr 0xffff8bd380a4)
0xffff8bd380a0    32  ret
0xffff8bd380a4    36  sub csp, jssp, #0x8 (8)
0xffff8bd380a8    40  str lr, [jssp, #-8]!
0xffff8bd380ac    44  ldr x17, pc+1708 (addr 0x0000ffff8bd38758)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd380b0    48  blr x17
0xffff8bd380b4    52  ldr lr, [jssp], #8
0xffff8bd380b8    56  ret
0xffff8bd380bc    60  ret
0xffff8bd380c0    64  sub csp, jssp, #0x10 (16)
0xffff8bd380c4    68  stp x3, x0, [jssp, #-16]!
0xffff8bd380c8    72  ldr x5, [x2]
0xffff8bd380cc    76  and x16, x5, #0xfffffffffff00000
0xffff8bd380d0    80  ldr x16, [x16, #8]
0xffff8bd380d4    84  tst x16, #0x18
0xffff8bd380d8    88  b.eq #+0x1d8 (addr 0xffff8bd382b0)
0xffff8bd380dc    92  and x16, x1, #0xfffffffffff00000
0xffff8bd380e0    96  ldr x16, [x16, #8]
0xffff8bd380e4   100  tst x16, #0x18
0xffff8bd380e8   104  b.ne #+0x1c8 (addr 0xffff8bd382b0)
0xffff8bd380ec   108  and x5, x1, #0xfffffffffff00000
0xffff8bd380f0   112  ldr x0, [x5, #104]
0xffff8bd380f4   116  subs x0, x0, #0x1 (1)
0xffff8bd380f8   120  str x0, [x5, #104]
0xffff8bd380fc   124  b.mi #+0xc4 (addr 0xffff8bd381c0)
0xffff8bd38100   128  ubfx x16, x1, #8, #12
0xffff8bd38104   132  and x5, x1, #0xfffffffffff00000
0xffff8bd38108   136  add x5, x5, x16, lsl #2
0xffff8bd3810c   140  ubfx x0, x1, #3, #5
0xffff8bd38110   144  ldr x5, [x5, #360]
0xffff8bd38114   148  lsr x5, x5, x0
0xffff8bd38118   152  tbz w5, #0, #+0x8 (addr 0xffff8bd38120)
0xffff8bd3811c   156  tbnz w5, #1, #+0x3c (addr 0xffff8bd38158)
0xffff8bd38120   160  ldp x3, x0, [jssp], #16
0xffff8bd38124   164  ldr x16, pc+1596 (addr 0x0000ffff8bd38760)    ;; external reference (store_buffer_top)
0xffff8bd38128   168  ldr x5, [x16]
0xffff8bd3812c   172  str x2, [x5], #8
0xffff8bd38130   176  str x5, [x16]
0xffff8bd38134   180  tst x5, #0x1ffff
0xffff8bd38138   184  b.eq #+0x8 (addr 0xffff8bd38140)
0xffff8bd3813c   188  ret
0xffff8bd38140   192  sub csp, jssp, #0x8 (8)
0xffff8bd38144   196  str lr, [jssp, #-8]!
0xffff8bd38148   200  ldr x17, pc+1568 (addr 0x0000ffff8bd38768)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd3814c   204  blr x17
0xffff8bd38150   208  ldr lr, [jssp], #8
0xffff8bd38154   212  ret
0xffff8bd38158   216  ldr x5, [x2]
0xffff8bd3815c   220  sub csp, jssp, #0x10 (16)
0xffff8bd38160   224  stp x1, x2, [jssp, #-16]!
0xffff8bd38164   228  ubfx x16, x5, #8, #12
0xffff8bd38168   232  and x0, x5, #0xfffffffffff00000
0xffff8bd3816c   236  add x0, x0, x16, lsl #2
0xffff8bd38170   240  ubfx x1, x5, #3, #5
0xffff8bd38174   244  ldr x2, [x0, #360]
0xffff8bd38178   248  lsr x2, x2, x1
0xffff8bd3817c   252  tbz w2, #0, #+0x40 (addr 0xffff8bd381bc)
0xffff8bd38180   256  ldp x1, x2, [jssp], #16
0xffff8bd38184   260  ldp x3, x0, [jssp], #16
0xffff8bd38188   264  ldr x16, pc+1512 (addr 0x0000ffff8bd38770)    ;; external reference (store_buffer_top)
0xffff8bd3818c   268  ldr x5, [x16]
0xffff8bd38190   272  str x2, [x5], #8
0xffff8bd38194   276  str x5, [x16]
0xffff8bd38198   280  tst x5, #0x1ffff
0xffff8bd3819c   284  b.eq #+0x8 (addr 0xffff8bd381a4)
0xffff8bd381a0   288  ret
0xffff8bd381a4   292  sub csp, jssp, #0x8 (8)
0xffff8bd381a8   296  str lr, [jssp, #-8]!
0xffff8bd381ac   300  ldr x17, pc+1484 (addr 0x0000ffff8bd38778)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd381b0   304  blr x17
0xffff8bd381b4   308  ldr lr, [jssp], #8
0xffff8bd381b8   312  ret
0xffff8bd381bc   316  ldp x1, x2, [jssp], #16
0xffff8bd381c0   320  sub csp, jssp, #0x78 (120)
0xffff8bd381c4   324  stp x14, x15, [jssp, #-32]!
0xffff8bd381c8   328  stp x18, lr, [jssp, #16]
0xffff8bd381cc   332  stp x10, x11, [jssp, #-32]!
0xffff8bd381d0   336  stp x12, x13, [jssp, #16]
0xffff8bd381d4   340  stp x6, x7, [jssp, #-32]!
0xffff8bd381d8   344  stp x8, x9, [jssp, #16]
0xffff8bd381dc   348  stp x1, x2, [jssp, #-24]!
0xffff8bd381e0   352  str x4, [jssp, #16]
0xffff8bd381e4   356  sub csp, jssp, #0xb0 (176)
0xffff8bd381e8   360  stp d26, d27, [jssp, #-32]!
0xffff8bd381ec   364  stp d28, d29, [jssp, #16]
0xffff8bd381f0   368  stp d22, d23, [jssp, #-32]!
0xffff8bd381f4   372  stp d24, d25, [jssp, #16]
0xffff8bd381f8   376  stp d18, d19, [jssp, #-32]!
0xffff8bd381fc   380  stp d20, d21, [jssp, #16]
0xffff8bd38200   384  stp d6, d7, [jssp, #-32]!
0xffff8bd38204   388  stp d16, d17, [jssp, #16]
0xffff8bd38208   392  stp d2, d3, [jssp, #-32]!
0xffff8bd3820c   396  stp d4, d5, [jssp, #16]
0xffff8bd38210   400  stp d0, d1, [jssp, #-16]!
0xffff8bd38214   404  mov x0, x1
0xffff8bd38218   408  mov x1, x2
0xffff8bd3821c   412  ldr x2, pc+1380 (addr 0x0000ffff8bd38780)    ;; external reference (isolate)
0xffff8bd38220   416  ldr x16, pc+1384 (addr 0x0000ffff8bd38788)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd38224   420  and csp, jssp, #0xfffffffffffffff0
0xffff8bd38228   424  blr x16
0xffff8bd3822c   428  ldp d2, d3, [jssp, #16]
0xffff8bd38230   432  ldp d0, d1, [jssp], #32
0xffff8bd38234   436  ldp d6, d7, [jssp, #16]
0xffff8bd38238   440  ldp d4, d5, [jssp], #32
0xffff8bd3823c   444  ldp d18, d19, [jssp, #16]
0xffff8bd38240   448  ldp d16, d17, [jssp], #32
0xffff8bd38244   452  ldp d22, d23, [jssp, #16]
0xffff8bd38248   456  ldp d20, d21, [jssp], #32
0xffff8bd3824c   460  ldp d26, d27, [jssp, #16]
0xffff8bd38250   464  ldp d24, d25, [jssp], #32
0xffff8bd38254   468  ldp d28, d29, [jssp], #16
0xffff8bd38258   472  ldp x4, x6, [jssp, #16]
0xffff8bd3825c   476  ldp x1, x2, [jssp], #32
0xffff8bd38260   480  ldp x9, x10, [jssp, #16]
0xffff8bd38264   484  ldp x7, x8, [jssp], #32
0xffff8bd38268   488  ldp x13, x14, [jssp, #16]
0xffff8bd3826c   492  ldp x11, x12, [jssp], #32
0xffff8bd38270   496  ldr lr, [jssp, #16]
0xffff8bd38274   500  ldp x15, x18, [jssp], #24
0xffff8bd38278   504  ldp x3, x0, [jssp], #16
0xffff8bd3827c   508  ldr x16, pc+1300 (addr 0x0000ffff8bd38790)    ;; external reference (store_buffer_top)
0xffff8bd38280   512  ldr x5, [x16]
0xffff8bd38284   516  str x2, [x5], #8
0xffff8bd38288   520  str x5, [x16]
0xffff8bd3828c   524  tst x5, #0x1ffff
0xffff8bd38290   528  b.eq #+0x8 (addr 0xffff8bd38298)
0xffff8bd38294   532  ret
0xffff8bd38298   536  sub csp, jssp, #0x8 (8)
0xffff8bd3829c   540  str lr, [jssp, #-8]!
0xffff8bd382a0   544  ldr x17, pc+1272 (addr 0x0000ffff8bd38798)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd382a4   548  blr x17
0xffff8bd382a8   552  ldr lr, [jssp], #8
0xffff8bd382ac   556  ret
0xffff8bd382b0   560  and x5, x1, #0xfffffffffff00000
0xffff8bd382b4   564  ldr x0, [x5, #104]
0xffff8bd382b8   568  subs x0, x0, #0x1 (1)
0xffff8bd382bc   572  str x0, [x5, #104]
0xffff8bd382c0   576  b.mi #+0x64 (addr 0xffff8bd38324)
0xffff8bd382c4   580  ubfx x16, x1, #8, #12
0xffff8bd382c8   584  and x5, x1, #0xfffffffffff00000
0xffff8bd382cc   588  add x5, x5, x16, lsl #2
0xffff8bd382d0   592  ubfx x0, x1, #3, #5
0xffff8bd382d4   596  ldr x5, [x5, #360]
0xffff8bd382d8   600  lsr x5, x5, x0
0xffff8bd382dc   604  tbz w5, #0, #+0x8 (addr 0xffff8bd382e4)
0xffff8bd382e0   608  tbnz w5, #1, #+0xc (addr 0xffff8bd382ec)
0xffff8bd382e4   612  ldp x3, x0, [jssp], #16
0xffff8bd382e8   616  ret
0xffff8bd382ec   620  ldr x5, [x2]
0xffff8bd382f0   624  sub csp, jssp, #0x10 (16)
0xffff8bd382f4   628  stp x1, x2, [jssp, #-16]!
0xffff8bd382f8   632  ubfx x16, x5, #8, #12
0xffff8bd382fc   636  and x0, x5, #0xfffffffffff00000
0xffff8bd38300   640  add x0, x0, x16, lsl #2
0xffff8bd38304   644  ubfx x1, x5, #3, #5
0xffff8bd38308   648  ldr x2, [x0, #360]
0xffff8bd3830c   652  lsr x2, x2, x1
0xffff8bd38310   656  tbz w2, #0, #+0x10 (addr 0xffff8bd38320)
0xffff8bd38314   660  ldp x1, x2, [jssp], #16
0xffff8bd38318   664  ldp x3, x0, [jssp], #16
0xffff8bd3831c   668  ret
0xffff8bd38320   672  ldp x1, x2, [jssp], #16
0xffff8bd38324   676  sub csp, jssp, #0x78 (120)
0xffff8bd38328   680  stp x14, x15, [jssp, #-32]!
0xffff8bd3832c   684  stp x18, lr, [jssp, #16]
0xffff8bd38330   688  stp x10, x11, [jssp, #-32]!
0xffff8bd38334   692  stp x12, x13, [jssp, #16]
0xffff8bd38338   696  stp x6, x7, [jssp, #-32]!
0xffff8bd3833c   700  stp x8, x9, [jssp, #16]
0xffff8bd38340   704  stp x1, x2, [jssp, #-24]!
0xffff8bd38344   708  str x4, [jssp, #16]
0xffff8bd38348   712  sub csp, jssp, #0xb0 (176)
0xffff8bd3834c   716  stp d26, d27, [jssp, #-32]!
0xffff8bd38350   720  stp d28, d29, [jssp, #16]
0xffff8bd38354   724  stp d22, d23, [jssp, #-32]!
0xffff8bd38358   728  stp d24, d25, [jssp, #16]
0xffff8bd3835c   732  stp d18, d19, [jssp, #-32]!
0xffff8bd38360   736  stp d20, d21, [jssp, #16]
0xffff8bd38364   740  stp d6, d7, [jssp, #-32]!
0xffff8bd38368   744  stp d16, d17, [jssp, #16]
0xffff8bd3836c   748  stp d2, d3, [jssp, #-32]!
0xffff8bd38370   752  stp d4, d5, [jssp, #16]
0xffff8bd38374   756  stp d0, d1, [jssp, #-16]!
0xffff8bd38378   760  mov x0, x1
0xffff8bd3837c   764  mov x1, x2
0xffff8bd38380   768  ldr x2, pc+1056 (addr 0x0000ffff8bd387a0)    ;; external reference (isolate)
0xffff8bd38384   772  ldr x16, pc+1060 (addr 0x0000ffff8bd387a8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd38388   776  and csp, jssp, #0xfffffffffffffff0
0xffff8bd3838c   780  blr x16
0xffff8bd38390   784  ldp d2, d3, [jssp, #16]
0xffff8bd38394   788  ldp d0, d1, [jssp], #32
0xffff8bd38398   792  ldp d6, d7, [jssp, #16]
0xffff8bd3839c   796  ldp d4, d5, [jssp], #32
0xffff8bd383a0   800  ldp d18, d19, [jssp, #16]
0xffff8bd383a4   804  ldp d16, d17, [jssp], #32
0xffff8bd383a8   808  ldp d22, d23, [jssp, #16]
0xffff8bd383ac   812  ldp d20, d21, [jssp], #32
0xffff8bd383b0   816  ldp d26, d27, [jssp, #16]
0xffff8bd383b4   820  ldp d24, d25, [jssp], #32
0xffff8bd383b8   824  ldp d28, d29, [jssp], #16
0xffff8bd383bc   828  ldp x4, x6, [jssp, #16]
0xffff8bd383c0   832  ldp x1, x2, [jssp], #32
0xffff8bd383c4   836  ldp x9, x10, [jssp, #16]
0xffff8bd383c8   840  ldp x7, x8, [jssp], #32
0xffff8bd383cc   844  ldp x13, x14, [jssp, #16]
0xffff8bd383d0   848  ldp x11, x12, [jssp], #32
0xffff8bd383d4   852  ldr lr, [jssp, #16]
0xffff8bd383d8   856  ldp x15, x18, [jssp], #24
0xffff8bd383dc   860  ldp x3, x0, [jssp], #16
0xffff8bd383e0   864  ret
0xffff8bd383e4   868  sub csp, jssp, #0x10 (16)
0xffff8bd383e8   872  stp x3, x0, [jssp, #-16]!
0xffff8bd383ec   876  ldr x5, [x2]
0xffff8bd383f0   880  and x16, x5, #0xfffffffffff00000
0xffff8bd383f4   884  ldr x16, [x16, #8]
0xffff8bd383f8   888  tst x16, #0x18
0xffff8bd383fc   892  b.eq #+0x1f8 (addr 0xffff8bd385f4)
0xffff8bd38400   896  and x16, x1, #0xfffffffffff00000
0xffff8bd38404   900  ldr x16, [x16, #8]
0xffff8bd38408   904  tst x16, #0x18
0xffff8bd3840c   908  b.ne #+0x1e8 (addr 0xffff8bd385f4)
0xffff8bd38410   912  and x5, x1, #0xfffffffffff00000
0xffff8bd38414   916  ldr x0, [x5, #104]
0xffff8bd38418   920  subs x0, x0, #0x1 (1)
0xffff8bd3841c   924  str x0, [x5, #104]
0xffff8bd38420   928  b.mi #+0xe4 (addr 0xffff8bd38504)
0xffff8bd38424   932  ubfx x16, x1, #8, #12
0xffff8bd38428   936  and x5, x1, #0xfffffffffff00000
0xffff8bd3842c   940  add x5, x5, x16, lsl #2
0xffff8bd38430   944  ubfx x0, x1, #3, #5
0xffff8bd38434   948  ldr x5, [x5, #360]
0xffff8bd38438   952  lsr x5, x5, x0
0xffff8bd3843c   956  tbz w5, #0, #+0x8 (addr 0xffff8bd38444)
0xffff8bd38440   960  tbnz w5, #1, #+0x3c (addr 0xffff8bd3847c)
0xffff8bd38444   964  ldp x3, x0, [jssp], #16
0xffff8bd38448   968  ldr x16, pc+872 (addr 0x0000ffff8bd387b0)    ;; external reference (store_buffer_top)
0xffff8bd3844c   972  ldr x5, [x16]
0xffff8bd38450   976  str x2, [x5], #8
0xffff8bd38454   980  str x5, [x16]
0xffff8bd38458   984  tst x5, #0x1ffff
0xffff8bd3845c   988  b.eq #+0x8 (addr 0xffff8bd38464)
0xffff8bd38460   992  ret
0xffff8bd38464   996  sub csp, jssp, #0x8 (8)
0xffff8bd38468  1000  str lr, [jssp, #-8]!
0xffff8bd3846c  1004  ldr x17, pc+844 (addr 0x0000ffff8bd387b8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd38470  1008  blr x17
0xffff8bd38474  1012  ldr lr, [jssp], #8
0xffff8bd38478  1016  ret
0xffff8bd3847c  1020  ldr x5, [x2]
0xffff8bd38480  1024  and x0, x5, #0xfffffffffff00000
0xffff8bd38484  1028  ldr x0, [x0, #8]
0xffff8bd38488  1032  tbz w0, #6, #+0x18 (addr 0xffff8bd384a0)
0xffff8bd3848c  1036  and x0, x1, #0xfffffffffff00000
0xffff8bd38490  1040  ldr x0, [x0, #8]
0xffff8bd38494  1044  movz x16, #0x58
0xffff8bd38498  1048  tst x0, x16
0xffff8bd3849c  1052  b.eq #+0x68 (addr 0xffff8bd38504)
0xffff8bd384a0  1056  sub csp, jssp, #0x10 (16)
0xffff8bd384a4  1060  stp x1, x2, [jssp, #-16]!
0xffff8bd384a8  1064  ubfx x16, x5, #8, #12
0xffff8bd384ac  1068  and x0, x5, #0xfffffffffff00000
0xffff8bd384b0  1072  add x0, x0, x16, lsl #2
0xffff8bd384b4  1076  ubfx x1, x5, #3, #5
0xffff8bd384b8  1080  ldr x2, [x0, #360]
0xffff8bd384bc  1084  lsr x2, x2, x1
0xffff8bd384c0  1088  tbz w2, #0, #+0x40 (addr 0xffff8bd38500)
0xffff8bd384c4  1092  ldp x1, x2, [jssp], #16
0xffff8bd384c8  1096  ldp x3, x0, [jssp], #16
0xffff8bd384cc  1100  ldr x16, pc+756 (addr 0x0000ffff8bd387c0)    ;; external reference (store_buffer_top)
0xffff8bd384d0  1104  ldr x5, [x16]
0xffff8bd384d4  1108  str x2, [x5], #8
0xffff8bd384d8  1112  str x5, [x16]
0xffff8bd384dc  1116  tst x5, #0x1ffff
0xffff8bd384e0  1120  b.eq #+0x8 (addr 0xffff8bd384e8)
0xffff8bd384e4  1124  ret
0xffff8bd384e8  1128  sub csp, jssp, #0x8 (8)
0xffff8bd384ec  1132  str lr, [jssp, #-8]!
0xffff8bd384f0  1136  ldr x17, pc+728 (addr 0x0000ffff8bd387c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd384f4  1140  blr x17
0xffff8bd384f8  1144  ldr lr, [jssp], #8
0xffff8bd384fc  1148  ret
0xffff8bd38500  1152  ldp x1, x2, [jssp], #16
0xffff8bd38504  1156  sub csp, jssp, #0x78 (120)
0xffff8bd38508  1160  stp x14, x15, [jssp, #-32]!
0xffff8bd3850c  1164  stp x18, lr, [jssp, #16]
0xffff8bd38510  1168  stp x10, x11, [jssp, #-32]!
0xffff8bd38514  1172  stp x12, x13, [jssp, #16]
0xffff8bd38518  1176  stp x6, x7, [jssp, #-32]!
0xffff8bd3851c  1180  stp x8, x9, [jssp, #16]
0xffff8bd38520  1184  stp x1, x2, [jssp, #-24]!
0xffff8bd38524  1188  str x4, [jssp, #16]
0xffff8bd38528  1192  sub csp, jssp, #0xb0 (176)
0xffff8bd3852c  1196  stp d26, d27, [jssp, #-32]!
0xffff8bd38530  1200  stp d28, d29, [jssp, #16]
0xffff8bd38534  1204  stp d22, d23, [jssp, #-32]!
0xffff8bd38538  1208  stp d24, d25, [jssp, #16]
0xffff8bd3853c  1212  stp d18, d19, [jssp, #-32]!
0xffff8bd38540  1216  stp d20, d21, [jssp, #16]
0xffff8bd38544  1220  stp d6, d7, [jssp, #-32]!
0xffff8bd38548  1224  stp d16, d17, [jssp, #16]
0xffff8bd3854c  1228  stp d2, d3, [jssp, #-32]!
0xffff8bd38550  1232  stp d4, d5, [jssp, #16]
0xffff8bd38554  1236  stp d0, d1, [jssp, #-16]!
0xffff8bd38558  1240  mov x0, x1
0xffff8bd3855c  1244  mov x1, x2
0xffff8bd38560  1248  ldr x2, pc+624 (addr 0x0000ffff8bd387d0)    ;; external reference (isolate)
0xffff8bd38564  1252  ldr x16, pc+628 (addr 0x0000ffff8bd387d8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd38568  1256  and csp, jssp, #0xfffffffffffffff0
0xffff8bd3856c  1260  blr x16
0xffff8bd38570  1264  ldp d2, d3, [jssp, #16]
0xffff8bd38574  1268  ldp d0, d1, [jssp], #32
0xffff8bd38578  1272  ldp d6, d7, [jssp, #16]
0xffff8bd3857c  1276  ldp d4, d5, [jssp], #32
0xffff8bd38580  1280  ldp d18, d19, [jssp, #16]
0xffff8bd38584  1284  ldp d16, d17, [jssp], #32
0xffff8bd38588  1288  ldp d22, d23, [jssp, #16]
0xffff8bd3858c  1292  ldp d20, d21, [jssp], #32
0xffff8bd38590  1296  ldp d26, d27, [jssp, #16]
0xffff8bd38594  1300  ldp d24, d25, [jssp], #32
0xffff8bd38598  1304  ldp d28, d29, [jssp], #16
0xffff8bd3859c  1308  ldp x4, x6, [jssp, #16]
0xffff8bd385a0  1312  ldp x1, x2, [jssp], #32
0xffff8bd385a4  1316  ldp x9, x10, [jssp, #16]
0xffff8bd385a8  1320  ldp x7, x8, [jssp], #32
0xffff8bd385ac  1324  ldp x13, x14, [jssp, #16]
0xffff8bd385b0  1328  ldp x11, x12, [jssp], #32
0xffff8bd385b4  1332  ldr lr, [jssp, #16]
0xffff8bd385b8  1336  ldp x15, x18, [jssp], #24
0xffff8bd385bc  1340  ldp x3, x0, [jssp], #16
0xffff8bd385c0  1344  ldr x16, pc+544 (addr 0x0000ffff8bd387e0)    ;; external reference (store_buffer_top)
0xffff8bd385c4  1348  ldr x5, [x16]
0xffff8bd385c8  1352  str x2, [x5], #8
0xffff8bd385cc  1356  str x5, [x16]
0xffff8bd385d0  1360  tst x5, #0x1ffff
0xffff8bd385d4  1364  b.eq #+0x8 (addr 0xffff8bd385dc)
0xffff8bd385d8  1368  ret
0xffff8bd385dc  1372  sub csp, jssp, #0x8 (8)
0xffff8bd385e0  1376  str lr, [jssp, #-8]!
0xffff8bd385e4  1380  ldr x17, pc+516 (addr 0x0000ffff8bd387e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd385e8  1384  blr x17
0xffff8bd385ec  1388  ldr lr, [jssp], #8
0xffff8bd385f0  1392  ret
0xffff8bd385f4  1396  and x5, x1, #0xfffffffffff00000
0xffff8bd385f8  1400  ldr x0, [x5, #104]
0xffff8bd385fc  1404  subs x0, x0, #0x1 (1)
0xffff8bd38600  1408  str x0, [x5, #104]
0xffff8bd38604  1412  b.mi #+0x84 (addr 0xffff8bd38688)
0xffff8bd38608  1416  ubfx x16, x1, #8, #12
0xffff8bd3860c  1420  and x5, x1, #0xfffffffffff00000
0xffff8bd38610  1424  add x5, x5, x16, lsl #2
0xffff8bd38614  1428  ubfx x0, x1, #3, #5
0xffff8bd38618  1432  ldr x5, [x5, #360]
0xffff8bd3861c  1436  lsr x5, x5, x0
0xffff8bd38620  1440  tbz w5, #0, #+0x8 (addr 0xffff8bd38628)
0xffff8bd38624  1444  tbnz w5, #1, #+0xc (addr 0xffff8bd38630)
0xffff8bd38628  1448  ldp x3, x0, [jssp], #16
0xffff8bd3862c  1452  ret
0xffff8bd38630  1456  ldr x5, [x2]
0xffff8bd38634  1460  and x0, x5, #0xfffffffffff00000
0xffff8bd38638  1464  ldr x0, [x0, #8]
0xffff8bd3863c  1468  tbz w0, #6, #+0x18 (addr 0xffff8bd38654)
0xffff8bd38640  1472  and x0, x1, #0xfffffffffff00000
0xffff8bd38644  1476  ldr x0, [x0, #8]
0xffff8bd38648  1480  movz x16, #0x58
0xffff8bd3864c  1484  tst x0, x16
0xffff8bd38650  1488  b.eq #+0x38 (addr 0xffff8bd38688)
0xffff8bd38654  1492  sub csp, jssp, #0x10 (16)
0xffff8bd38658  1496  stp x1, x2, [jssp, #-16]!
0xffff8bd3865c  1500  ubfx x16, x5, #8, #12
0xffff8bd38660  1504  and x0, x5, #0xfffffffffff00000
0xffff8bd38664  1508  add x0, x0, x16, lsl #2
0xffff8bd38668  1512  ubfx x1, x5, #3, #5
0xffff8bd3866c  1516  ldr x2, [x0, #360]
0xffff8bd38670  1520  lsr x2, x2, x1
0xffff8bd38674  1524  tbz w2, #0, #+0x10 (addr 0xffff8bd38684)
0xffff8bd38678  1528  ldp x1, x2, [jssp], #16
0xffff8bd3867c  1532  ldp x3, x0, [jssp], #16
0xffff8bd38680  1536  ret
0xffff8bd38684  1540  ldp x1, x2, [jssp], #16
0xffff8bd38688  1544  sub csp, jssp, #0x78 (120)
0xffff8bd3868c  1548  stp x14, x15, [jssp, #-32]!
0xffff8bd38690  1552  stp x18, lr, [jssp, #16]
0xffff8bd38694  1556  stp x10, x11, [jssp, #-32]!
0xffff8bd38698  1560  stp x12, x13, [jssp, #16]
0xffff8bd3869c  1564  stp x6, x7, [jssp, #-32]!
0xffff8bd386a0  1568  stp x8, x9, [jssp, #16]
0xffff8bd386a4  1572  stp x1, x2, [jssp, #-24]!
0xffff8bd386a8  1576  str x4, [jssp, #16]
0xffff8bd386ac  1580  sub csp, jssp, #0xb0 (176)
0xffff8bd386b0  1584  stp d26, d27, [jssp, #-32]!
0xffff8bd386b4  1588  stp d28, d29, [jssp, #16]
0xffff8bd386b8  1592  stp d22, d23, [jssp, #-32]!
0xffff8bd386bc  1596  stp d24, d25, [jssp, #16]
0xffff8bd386c0  1600  stp d18, d19, [jssp, #-32]!
0xffff8bd386c4  1604  stp d20, d21, [jssp, #16]
0xffff8bd386c8  1608  stp d6, d7, [jssp, #-32]!
0xffff8bd386cc  1612  stp d16, d17, [jssp, #16]
0xffff8bd386d0  1616  stp d2, d3, [jssp, #-32]!
0xffff8bd386d4  1620  stp d4, d5, [jssp, #16]
0xffff8bd386d8  1624  stp d0, d1, [jssp, #-16]!
0xffff8bd386dc  1628  mov x0, x1
0xffff8bd386e0  1632  mov x1, x2
0xffff8bd386e4  1636  ldr x2, pc+268 (addr 0x0000ffff8bd387f0)    ;; external reference (isolate)
0xffff8bd386e8  1640  ldr x16, pc+272 (addr 0x0000ffff8bd387f8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd386ec  1644  and csp, jssp, #0xfffffffffffffff0
0xffff8bd386f0  1648  blr x16
0xffff8bd386f4  1652  ldp d2, d3, [jssp, #16]
0xffff8bd386f8  1656  ldp d0, d1, [jssp], #32
0xffff8bd386fc  1660  ldp d6, d7, [jssp, #16]
0xffff8bd38700  1664  ldp d4, d5, [jssp], #32
0xffff8bd38704  1668  ldp d18, d19, [jssp, #16]
0xffff8bd38708  1672  ldp d16, d17, [jssp], #32
0xffff8bd3870c  1676  ldp d22, d23, [jssp, #16]
0xffff8bd38710  1680  ldp d20, d21, [jssp], #32
0xffff8bd38714  1684  ldp d26, d27, [jssp, #16]
0xffff8bd38718  1688  ldp d24, d25, [jssp], #32
0xffff8bd3871c  1692  ldp d28, d29, [jssp], #16
0xffff8bd38720  1696  ldp x4, x6, [jssp, #16]
0xffff8bd38724  1700  ldp x1, x2, [jssp], #32
0xffff8bd38728  1704  ldp x9, x10, [jssp, #16]
0xffff8bd3872c  1708  ldp x7, x8, [jssp], #32
0xffff8bd38730  1712  ldp x13, x14, [jssp, #16]
0xffff8bd38734  1716  ldp x11, x12, [jssp], #32
0xffff8bd38738  1720  ldr lr, [jssp, #16]
0xffff8bd3873c  1724  ldp x15, x18, [jssp], #24
0xffff8bd38740  1728  ldp x3, x0, [jssp], #16
0xffff8bd38744  1732  ret
0xffff8bd38748  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd3874c  1740  d63f03e0       constant
0xffff8bd38750  1744  2cb8e8c0       constant
0xffff8bd38754  1748  00000000       constant
0xffff8bd38758  1752  8bd065a0       constant
0xffff8bd3875c  1756  0000ffff       constant
0xffff8bd38760  1760  2cb8e8c0       constant
0xffff8bd38764  1764  00000000       constant
0xffff8bd38768  1768  8bd065a0       constant
0xffff8bd3876c  1772  0000ffff       constant
0xffff8bd38770  1776  2cb8e8c0       constant
0xffff8bd38774  1780  00000000       constant
0xffff8bd38778  1784  8bd065a0       constant
0xffff8bd3877c  1788  0000ffff       constant
0xffff8bd38780  1792  2cb8d2d0       constant
0xffff8bd38784  1796  00000000       constant
0xffff8bd38788  1800  00c2d958       constant
0xffff8bd3878c  1804  00000000       constant
0xffff8bd38790  1808  2cb8e8c0       constant
0xffff8bd38794  1812  00000000       constant
0xffff8bd38798  1816  8bd065a0       constant
0xffff8bd3879c  1820  0000ffff       constant
0xffff8bd387a0  1824  2cb8d2d0       constant
0xffff8bd387a4  1828  00000000       constant
0xffff8bd387a8  1832  00c2d958       constant
0xffff8bd387ac  1836  00000000       constant
0xffff8bd387b0  1840  2cb8e8c0       constant
0xffff8bd387b4  1844  00000000       constant
0xffff8bd387b8  1848  8bd065a0       constant
0xffff8bd387bc  1852  0000ffff       constant
0xffff8bd387c0  1856  2cb8e8c0       constant
0xffff8bd387c4  1860  00000000       constant
0xffff8bd387c8  1864  8bd065a0       constant
0xffff8bd387cc  1868  0000ffff       constant
0xffff8bd387d0  1872  2cb8d2d0       constant
0xffff8bd387d4  1876  00000000       constant
0xffff8bd387d8  1880  00c2d958       constant
0xffff8bd387dc  1884  00000000       constant
0xffff8bd387e0  1888  2cb8e8c0       constant
0xffff8bd387e4  1892  00000000       constant
0xffff8bd387e8  1896  8bd065a0       constant
0xffff8bd387ec  1900  0000ffff       constant
0xffff8bd387f0  1904  2cb8d2d0       constant
0xffff8bd387f4  1908  00000000       constant
0xffff8bd387f8  1912  00c2d958       constant
0xffff8bd387fc  1916  00000000       constant


RelocInfo (size = 65)
0xffff8bd38088  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd380ac  code target (STUB)  (0xffff8bd065a0)
0xffff8bd38124  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd38148  code target (STUB)  (0xffff8bd065a0)
0xffff8bd38188  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd381ac  code target (STUB)  (0xffff8bd065a0)
0xffff8bd3821c  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd38220  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd3827c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd382a0  code target (STUB)  (0xffff8bd065a0)
0xffff8bd38380  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd38384  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd38448  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd3846c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd384cc  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd384f0  code target (STUB)  (0xffff8bd065a0)
0xffff8bd38560  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd38564  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd385c0  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd385e4  code target (STUB)  (0xffff8bd065a0)
0xffff8bd386e4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd386e8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd38748  constant pool (size 184)


kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff8bd38860     0  ldur x6, [x1, #7]
0xffff8bd38864     4  ldur w7, [x6, #11]
0xffff8bd38868     8  adds w8, w7, #0x3 (3)
0xffff8bd3886c    12  b.vs #+0x1dc (addr 0xffff8bd38a48)
0xffff8bd38870    16  movz w16, #0x95ff
0xffff8bd38874    20  cmp w8, w16, lsl #1
0xffff8bd38878    24  b.hs #+0x1e0 (addr 0xffff8bd38a58)
0xffff8bd3887c    28  lsl x9, x8, #32
0xffff8bd38880    32  lsl w10, w8, #3
0xffff8bd38884    36  add w10, w10, #0x10 (16)
0xffff8bd38888    40  sxtw x10, w10
0xffff8bd3888c    44  movz x11, #0xe2c0
0xffff8bd38890    48  movk x11, #0x2cb8, lsl #16
0xffff8bd38894    52  ldp x13, x16, [x11]
0xffff8bd38898    56  adds x12, x13, x10
0xffff8bd3889c    60  ccmp x12, x16, #nzCv, lo
0xffff8bd388a0    64  b.hi #+0xf8 (addr 0xffff8bd38998)
0xffff8bd388a4    68  str x12, [x11]
0xffff8bd388a8    72  orr x13, x13, #0x1
0xffff8bd388ac    76  ldr x10, pc+348 (addr 0x0000ffff8bd38a08)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd388b0    80  stur x10, [x13, #-1]
0xffff8bd388b4    84  stur x9, [x13, #7]
0xffff8bd388b8    88  cmp w7, w8
0xffff8bd388bc    92  b.ge #+0x18 (addr 0xffff8bd388d4)
0xffff8bd388c0    96  sub w8, w8, #0x1 (1)
0xffff8bd388c4   100  ldr x9, pc+332 (addr 0x0000ffff8bd38a10)    ;; object: 0x26c04241 <undefined>
0xffff8bd388c8   104  add x10, x13, #0xf (15)
0xffff8bd388cc   108  str x9, [x10, w8, sxtw #3]
0xffff8bd388d0   112  b #-0x18 (addr 0xffff8bd388b8)
0xffff8bd388d4   116  cmp w7, #0x0 (0)
0xffff8bd388d8   120  b.le #+0x1c (addr 0xffff8bd388f4)
0xffff8bd388dc   124  sub w7, w7, #0x1 (1)
0xffff8bd388e0   128  add x8, x6, #0xf (15)
0xffff8bd388e4   132  ldr x9, [x8, w7, sxtw #3]
0xffff8bd388e8   136  add x8, x13, #0xf (15)
0xffff8bd388ec   140  str x9, [x8, w7, sxtw #3]
0xffff8bd388f0   144  b #-0x1c (addr 0xffff8bd388d4)
0xffff8bd388f4   148  stur x13, [x1, #7]
0xffff8bd388f8   152  add x6, x1, #0x7 (7)
0xffff8bd388fc   156  and x13, x1, #0xfffffffffff00000
0xffff8bd38900   160  ldr x13, [x13, #8]
0xffff8bd38904   164  tbz w13, #2, #+0x18 (addr 0xffff8bd3891c)
0xffff8bd38908   168  sub csp, jssp, #0x8 (8)
0xffff8bd3890c   172  str lr, [jssp, #-8]!
0xffff8bd38910   176  ldr x16, pc+264 (addr 0x0000ffff8bd38a18)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff8bd38914   180  blr x16
0xffff8bd38918   184  ldr lr, [jssp], #8
0xffff8bd3891c   188  tbz w0, #0, #+0x14c (addr 0xffff8bd38a68)
0xffff8bd38920   192  mov x2, x0
0xffff8bd38924   196  ldur x4, [x1, #7]
0xffff8bd38928   200  stur x2, [x4, #15]
0xffff8bd3892c   204  add x3, x4, #0xf (15)
0xffff8bd38930   208  and x2, x2, #0xfffffffffff00000
0xffff8bd38934   212  ldr x2, [x2, #8]
0xffff8bd38938   216  tbz w2, #1, #+0x24 (addr 0xffff8bd3895c)
0xffff8bd3893c   220  and x2, x4, #0xfffffffffff00000
0xffff8bd38940   224  ldr x2, [x2, #8]
0xffff8bd38944   228  tbz w2, #2, #+0x18 (addr 0xffff8bd3895c)
0xffff8bd38948   232  sub csp, jssp, #0x8 (8)
0xffff8bd3894c   236  str lr, [jssp, #-8]!
0xffff8bd38950   240  ldr x16, pc+208 (addr 0x0000ffff8bd38a20)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bd38954   244  blr x16
0xffff8bd38958   248  ldr lr, [jssp], #8
0xffff8bd3895c   252  stur x5, [x1, #-1]
0xffff8bd38960   256  tbz w5, #0, #+0x34 (addr 0xffff8bd38994)
0xffff8bd38964   260  sub x2, x1, #0x1 (1)
0xffff8bd38968   264  and x5, x5, #0xfffffffffff00000
0xffff8bd3896c   268  ldr x5, [x5, #8]
0xffff8bd38970   272  tbz w5, #1, #+0x24 (addr 0xffff8bd38994)
0xffff8bd38974   276  and x5, x1, #0xfffffffffff00000
0xffff8bd38978   280  ldr x5, [x5, #8]
0xffff8bd3897c   284  tbz w5, #2, #+0x18 (addr 0xffff8bd38994)
0xffff8bd38980   288  sub csp, jssp, #0x8 (8)
0xffff8bd38984   292  str lr, [jssp, #-8]!
0xffff8bd38988   296  ldr x16, pc+160 (addr 0x0000ffff8bd38a28)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd3898c   300  blr x16
0xffff8bd38990   304  ldr lr, [jssp], #8
0xffff8bd38994   308  ret
0xffff8bd38998   312  sub csp, jssp, #0x10 (16)
0xffff8bd3899c   316  stp fp, lr, [jssp, #-16]!
0xffff8bd389a0   320  movz fp, #0xa00000000
0xffff8bd389a4   324  sub csp, jssp, #0x8 (8)
0xffff8bd389a8   328  str fp, [jssp, #-8]!
0xffff8bd389ac   332  add fp, jssp, #0x8 (8)
0xffff8bd389b0   336  movz x13, #0x0
0xffff8bd389b4   340  mov x16, lr
0xffff8bd389b8   344  ldr x17, pc+120 (addr 0x0000ffff8bd38a30)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd389bc   348  blr x17
0xffff8bd389c0   352  lsl x0, x10, #32
0xffff8bd389c4   356  movz x10, #0x0
0xffff8bd389c8   360  sub csp, jssp, #0x10 (16)
0xffff8bd389cc   364  stp x10, x0, [jssp, #-16]!
0xffff8bd389d0   368  movz x0, #0x2
0xffff8bd389d4   372  movz x1, #0x5b88
0xffff8bd389d8   376  movk x1, #0xe2, lsl #16
0xffff8bd389dc   380  ldr x16, pc+92 (addr 0x0000ffff8bd38a38)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd389e0   384  blr x16
0xffff8bd389e4   388  str x0, [jssp, #104]
0xffff8bd389e8   392  ldr x16, pc+88 (addr 0x0000ffff8bd38a40)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd389ec   396  blr x16
0xffff8bd389f0   400  ldr lr, [jssp, #16]
0xffff8bd389f4   404  ldp xzr, fp, [jssp], #24
0xffff8bd389f8   408  b #-0x14c (addr 0xffff8bd388ac)
0xffff8bd389fc   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff8bd38a00   416  d63f03e0       constant
0xffff8bd38a04   420  d503201f       constant
0xffff8bd38a08   424  5f504259       constant
0xffff8bd38a0c   428  00000000       constant
0xffff8bd38a10   432  26c04241       constant
0xffff8bd38a14   436  00000000       constant
0xffff8bd38a18   440  8bd370c0       constant
0xffff8bd38a1c   444  0000ffff       constant
0xffff8bd38a20   448  8bd378a0       constant
0xffff8bd38a24   452  0000ffff       constant
0xffff8bd38a28   456  8bd38080       constant
0xffff8bd38a2c   460  0000ffff       constant
0xffff8bd38a30   464  8bd06820       constant
0xffff8bd38a34   468  0000ffff       constant
0xffff8bd38a38   472  8bd06260       constant
0xffff8bd38a3c   476  0000ffff       constant
0xffff8bd38a40   480  8bd068e0       constant
0xffff8bd38a44   484  0000ffff       constant
0xffff8bd38a48   488  movz x16, #0x0
0xffff8bd38a4c   492  sub csp, jssp, #0x10 (16)
0xffff8bd38a50   496  stp fp, lr, [jssp, #-16]!
0xffff8bd38a54   500  bl #+0x24 (addr 0xffff8bd38a78)
0xffff8bd38a58   504  movz x16, #0x8
0xffff8bd38a5c   508  sub csp, jssp, #0x10 (16)
0xffff8bd38a60   512  stp fp, lr, [jssp, #-16]!
0xffff8bd38a64   516  bl #+0x14 (addr 0xffff8bd38a78)
0xffff8bd38a68   520  movz x16, #0x10
0xffff8bd38a6c   524  sub csp, jssp, #0x10 (16)
0xffff8bd38a70   528  stp fp, lr, [jssp, #-16]!
0xffff8bd38a74   532  bl #+0x4 (addr 0xffff8bd38a78)
0xffff8bd38a78   536  movz x17, #0xa00000000
0xffff8bd38a7c   540  sub csp, jssp, #0x10 (16)
0xffff8bd38a80   544  stp x17, cp, [jssp, #-16]!
0xffff8bd38a84   548  add fp, jssp, #0x10 (16)
0xffff8bd38a88   552  ldr x17, pc+24 (addr 0x0000ffff8bd38aa0)    ;; lazy deoptimization bailout 0
0xffff8bd38a8c   556  add x17, x17, x16
0xffff8bd38a90   560  br x17
0xffff8bd38a94   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd38a98   568  d63f03e0       constant
0xffff8bd38a9c   572  d503201f       constant
0xffff8bd38aa0   576  8bb06000       constant
0xffff8bd38aa4   580  0000ffff       constant


Safepoints (size = 21)
0xffff8bd389e4   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bd388ac  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd388c4  embedded object  (0x26c04241 <undefined>)
0xffff8bd38910  code target (STUB)  (0xffff8bd370c0)
0xffff8bd38950  code target (STUB)  (0xffff8bd378a0)
0xffff8bd38988  code target (STUB)  (0xffff8bd38080)
0xffff8bd389b8  code target (STUB)  (0xffff8bd06820)
0xffff8bd389dc  code target (STUB)  (0xffff8bd06260)
0xffff8bd389e8  code target (STUB)  (0xffff8bd068e0)
0xffff8bd389fc  constant pool (size 76)
0xffff8bd38a88  runtime entry
0xffff8bd38a94  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff8bd38b20     0  sub csp, jssp, #0x8 (8)
0xffff8bd38b24     4  str x3, [jssp, #-8]!
0xffff8bd38b28     8  sub csp, jssp, #0x8 (8)
0xffff8bd38b2c    12  str x4, [jssp, #-8]!
0xffff8bd38b30    16  ldr x3, pc+88 (addr 0x0000ffff8bd38b88)    ;; object: 0x26c57a89 Cell for 0
0xffff8bd38b34    20  ldur x3, [x3, #7]
0xffff8bd38b38    24  cmp x3, #0x0 (0)
0xffff8bd38b3c    28  b.ne #+0x30 (addr 0xffff8bd38b6c)
0xffff8bd38b40    32  tbz w0, #0, #+0x2c (addr 0xffff8bd38b6c)
0xffff8bd38b44    36  ldr x5, pc+76 (addr 0x0000ffff8bd38b90)    ;; object: 0x26c57a99 WeakCell for 0x5f50b581 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd38b48    40  ldur x5, [x5, #7]
0xffff8bd38b4c    44  tbz w5, #0, #+0x20 (addr 0xffff8bd38b6c)
0xffff8bd38b50    48  ldursw x4, [x5, #15]
0xffff8bd38b54    52  tbnz w4, #23, #+0x18 (addr 0xffff8bd38b6c)
0xffff8bd38b58    56  ldr x4, [jssp], #8
0xffff8bd38b5c    60  ldr x3, [jssp], #8
0xffff8bd38b60    64  ldr x2, pc+56 (addr 0x0000ffff8bd38b98)    ;; object: 0x26c05209 <String[4]: next>
0xffff8bd38b64    68  ldr x16, pc+60 (addr 0x0000ffff8bd38ba0)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff8bd38b68    72  br x16
0xffff8bd38b6c    76  ldr x2, pc+60 (addr 0x0000ffff8bd38ba8)    ;; object: 0x26c05209 <String[4]: next>
0xffff8bd38b70    80  ldr x4, [jssp], #8
0xffff8bd38b74    84  ldr x3, [jssp], #8
0xffff8bd38b78    88  ldr x16, pc+56 (addr 0x0000ffff8bd38bb0)    ;; code: BUILTIN
0xffff8bd38b7c    92  br x16
0xffff8bd38b80    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd38b84   100  d63f03e0       constant
0xffff8bd38b88   104  26c57a89       constant
0xffff8bd38b8c   108  00000000       constant
0xffff8bd38b90   112  26c57a99       constant
0xffff8bd38b94   116  00000000       constant
0xffff8bd38b98   120  26c05209       constant
0xffff8bd38b9c   124  00000000       constant
0xffff8bd38ba0   128  8bd38860       constant
0xffff8bd38ba4   132  0000ffff       constant
0xffff8bd38ba8   136  26c05209       constant
0xffff8bd38bac   140  00000000       constant
0xffff8bd38bb0   144  8bd22420       constant
0xffff8bd38bb4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bd38b30  embedded object  (0x26c57a89 Cell for 0)
0xffff8bd38b44  embedded object  (0x26c57a99 WeakCell for 0x5f50b581 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd38b60  embedded object  (0x26c05209 <String[4]: next>)
0xffff8bd38b64  code target (HANDLER)  (0xffff8bd38860)
0xffff8bd38b6c  embedded object  (0x26c05209 <String[4]: next>)
0xffff8bd38b78  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd38b80  constant pool (size 56)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = LT
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff8bd38c20     0  movz x16, #0xc00000000
0xffff8bd38c24     4  sub csp, jssp, #0x10 (16)
0xffff8bd38c28     8  stp fp, lr, [jssp, #-16]!
0xffff8bd38c2c    12  sub csp, jssp, #0x10 (16)
0xffff8bd38c30    16  str x16, [jssp, #-8]!
0xffff8bd38c34    20  ldr x17, pc+92 (addr 0x0000ffff8bd38c90)    ;; object: 0xffff8bd38bc1 <Code: COMPARE_IC>
0xffff8bd38c38    24  sub csp, jssp, #0x10 (16)
0xffff8bd38c3c    28  str x17, [jssp, #-8]!
0xffff8bd38c40    32  add fp, jssp, #0x10 (16)
0xffff8bd38c44    36  sub csp, jssp, #0x18 (24)
0xffff8bd38c48    40  stp lr, x0, [jssp, #-24]!
0xffff8bd38c4c    44  str x1, [jssp, #16]
0xffff8bd38c50    48  movz x10, #0x3100000000
0xffff8bd38c54    52  sub csp, jssp, #0x18 (24)
0xffff8bd38c58    56  stp x10, x0, [jssp, #-24]!
0xffff8bd38c5c    60  str x1, [jssp, #16]
0xffff8bd38c60    64  movz x0, #0x3
0xffff8bd38c64    68  ldr x1, pc+52 (addr 0x0000ffff8bd38c98)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd38c68    72  ldr x16, pc+56 (addr 0x0000ffff8bd38ca0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd38c6c    76  blr x16
0xffff8bd38c70    80  add x11, x0, #0x5f (95)
0xffff8bd38c74    84  ldr x1, [jssp, #16]
0xffff8bd38c78    88  ldp lr, x0, [jssp], #24
0xffff8bd38c7c    92  mov jssp, fp
0xffff8bd38c80    96  ldp fp, lr, [jssp], #16
0xffff8bd38c84   100  br x11
0xffff8bd38c88   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd38c8c   108  d63f03e0       constant
0xffff8bd38c90   112  8bd38bc1       constant
0xffff8bd38c94   116  0000ffff       constant
0xffff8bd38c98   120  00c8a980       constant
0xffff8bd38c9c   124  00000000       constant
0xffff8bd38ca0   128  8bd06060       constant
0xffff8bd38ca4   132  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd38c34  embedded object  (0xffff8bd38bc1 <Code: COMPARE_IC>)
0xffff8bd38c64  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd38c68  code target (STUB)  (0xffff8bd06060)
0xffff8bd38c88  constant pool (size 32)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = LT
name = CompareICStub
compiler = unknown
Instructions (size = 160)
0xffff8bd39120     0  orr x16, x0, x1
0xffff8bd39124     4  tbnz w16, #0, #+0x10 (addr 0xffff8bd39134)
0xffff8bd39128     8  asr x1, x1, #32
0xffff8bd3912c    12  sub x0, x1, x0, asr #32
0xffff8bd39130    16  ret
0xffff8bd39134    20  movz x16, #0xc00000000
0xffff8bd39138    24  sub csp, jssp, #0x10 (16)
0xffff8bd3913c    28  stp fp, lr, [jssp, #-16]!
0xffff8bd39140    32  sub csp, jssp, #0x10 (16)
0xffff8bd39144    36  str x16, [jssp, #-8]!
0xffff8bd39148    40  ldr x17, pc+96 (addr 0x0000ffff8bd391a8)    ;; object: 0xffff8bd390c1 <Code: COMPARE_IC>
0xffff8bd3914c    44  sub csp, jssp, #0x10 (16)
0xffff8bd39150    48  str x17, [jssp, #-8]!
0xffff8bd39154    52  add fp, jssp, #0x10 (16)
0xffff8bd39158    56  sub csp, jssp, #0x18 (24)
0xffff8bd3915c    60  stp lr, x0, [jssp, #-24]!
0xffff8bd39160    64  str x1, [jssp, #16]
0xffff8bd39164    68  movz x10, #0x3100000000
0xffff8bd39168    72  sub csp, jssp, #0x18 (24)
0xffff8bd3916c    76  stp x10, x0, [jssp, #-24]!
0xffff8bd39170    80  str x1, [jssp, #16]
0xffff8bd39174    84  movz x0, #0x3
0xffff8bd39178    88  ldr x1, pc+56 (addr 0x0000ffff8bd391b0)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd3917c    92  ldr x16, pc+60 (addr 0x0000ffff8bd391b8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd39180    96  blr x16
0xffff8bd39184   100  add x11, x0, #0x5f (95)
0xffff8bd39188   104  ldr x1, [jssp, #16]
0xffff8bd3918c   108  ldp lr, x0, [jssp], #24
0xffff8bd39190   112  mov jssp, fp
0xffff8bd39194   116  ldp fp, lr, [jssp], #16
0xffff8bd39198   120  br x11
0xffff8bd3919c   124  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd391a0   128  d63f03e0       constant
0xffff8bd391a4   132  d503201f       constant
0xffff8bd391a8   136  8bd390c1       constant
0xffff8bd391ac   140  0000ffff       constant
0xffff8bd391b0   144  00c8a980       constant
0xffff8bd391b4   148  00000000       constant
0xffff8bd391b8   152  8bd06060       constant
0xffff8bd391bc   156  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd39148  embedded object  (0xffff8bd390c1 <Code: COMPARE_IC>)
0xffff8bd39178  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd3917c  code target (STUB)  (0xffff8bd06060)
0xffff8bd3919c  constant pool (size 36)


kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 168)
0xffff8bd39220     0  ldur x4, [x1, #15]
0xffff8bd39224     4  ldur w5, [x1, #27]
0xffff8bd39228     8  tbnz w2, #0, #+0x20 (addr 0xffff8bd39248)
0xffff8bd3922c    12  asr x7, x2, #32
0xffff8bd39230    16  cmp w7, w5
0xffff8bd39234    20  b.hs #+0x3c (addr 0xffff8bd39270)
0xffff8bd39238    24  add x0, x4, #0xf (15)
0xffff8bd3923c    28  ldr x1, [x0, w7, sxtw #3]
0xffff8bd39240    32  mov x0, x1
0xffff8bd39244    36  ret
0xffff8bd39248    40  ldur x16, [x2, #-1]
0xffff8bd3924c    44  ldr x17, [x26, #120]
0xffff8bd39250    48  cmp x16, x17
0xffff8bd39254    52  b.ne #+0x2c (addr 0xffff8bd39280)
0xffff8bd39258    56  ldur d29, [x2, #7]
0xffff8bd3925c    60  fcvtzs w7, d29
0xffff8bd39260    64  scvtf d0, w7
0xffff8bd39264    68  fcmp d29, d0
0xffff8bd39268    72  b.ne #+0x18 (addr 0xffff8bd39280)
0xffff8bd3926c    76  b #-0x3c (addr 0xffff8bd39230)
0xffff8bd39270    80  movz x16, #0x0
0xffff8bd39274    84  sub csp, jssp, #0x10 (16)
0xffff8bd39278    88  stp fp, lr, [jssp, #-16]!
0xffff8bd3927c    92  bl #+0x14 (addr 0xffff8bd39290)
0xffff8bd39280    96  movz x16, #0x8
0xffff8bd39284   100  sub csp, jssp, #0x10 (16)
0xffff8bd39288   104  stp fp, lr, [jssp, #-16]!
0xffff8bd3928c   108  bl #+0x4 (addr 0xffff8bd39290)
0xffff8bd39290   112  movz x17, #0xa00000000
0xffff8bd39294   116  sub csp, jssp, #0x10 (16)
0xffff8bd39298   120  stp x17, cp, [jssp, #-16]!
0xffff8bd3929c   124  add fp, jssp, #0x10 (16)
0xffff8bd392a0   128  ldr x17, pc+24 (addr 0x0000ffff8bd392b8)    ;; lazy deoptimization bailout 0
0xffff8bd392a4   132  add x17, x17, x16
0xffff8bd392a8   136  br x17
0xffff8bd392ac   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd392b0   144  d63f03e0       constant
0xffff8bd392b4   148  d503201f       constant
0xffff8bd392b8   152  8bb06000       constant
0xffff8bd392bc   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd392a0  runtime entry
0xffff8bd392ac  constant pool (size 20)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bd39340     0  ldur x0, [x1, #23]
0xffff8bd39344     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393218
name = CallICStub(args(2), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff8bd393c0     0  add x4, x2, x3, asr #29
0xffff8bd393c4     4  ldur x4, [x4, #15]
0xffff8bd393c8     8  ldur x5, [x4, #7]
0xffff8bd393cc    12  cmp x5, x1
0xffff8bd393d0    16  b.ne #+0x2c (addr 0xffff8bd393fc)
0xffff8bd393d4    20  tbz w1, #0, #+0x28 (addr 0xffff8bd393fc)
0xffff8bd393d8    24  add x2, x2, x3, asr #29
0xffff8bd393dc    28  add x2, x2, #0x18 (24)
0xffff8bd393e0    32  ldur x3, [x2, #-1]
0xffff8bd393e4    36  movz x16, #0x200000000
0xffff8bd393e8    40  add x3, x3, x16
0xffff8bd393ec    44  stur x3, [x2, #-1]
0xffff8bd393f0    48  movz x0, #0x2
0xffff8bd393f4    52  ldr x16, pc+372 (addr 0x0000ffff8bd39568)    ;; code: BUILTIN
0xffff8bd393f8    56  br x16
0xffff8bd393fc    60  ldr x16, [x26, #2400]
0xffff8bd39400    64  cmp x4, x16
0xffff8bd39404    68  b.eq #+0x78 (addr 0xffff8bd3947c)
0xffff8bd39408    72  ldur x5, [x4, #-1]
0xffff8bd3940c    76  ldr x16, [x26, #2736]
0xffff8bd39410    80  cmp x5, x16
0xffff8bd39414    84  b.ne #+0x40 (addr 0xffff8bd39454)
0xffff8bd39418    88  ldur x5, [cp, #39]
0xffff8bd3941c    92  ldur x5, [x5, #95]
0xffff8bd39420    96  cmp x1, x5
0xffff8bd39424   100  b.ne #+0xec (addr 0xffff8bd39510)
0xffff8bd39428   104  movz x0, #0x2
0xffff8bd3942c   108  add x2, x2, x3, asr #29
0xffff8bd39430   112  add x2, x2, #0x18 (24)
0xffff8bd39434   116  ldur x3, [x2, #-1]
0xffff8bd39438   120  movz x16, #0x200000000
0xffff8bd3943c   124  add x3, x3, x16
0xffff8bd39440   128  stur x3, [x2, #-1]
0xffff8bd39444   132  mov x2, x4
0xffff8bd39448   136  mov x3, x1
0xffff8bd3944c   140  ldr x16, pc+292 (addr 0x0000ffff8bd39570)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff8bd39450   144  br x16
0xffff8bd39454   148  ldr x16, [x26, #2568]
0xffff8bd39458   152  cmp x4, x16
0xffff8bd3945c   156  b.eq #+0xb4 (addr 0xffff8bd39510)
0xffff8bd39460   160  ldur x5, [x4, #-1]
0xffff8bd39464   164  ldrb w5, [x5, #11]
0xffff8bd39468   168  cmp x5, #0xc9 (201)
0xffff8bd3946c   172  b.ne #+0xa4 (addr 0xffff8bd39510)
0xffff8bd39470   176  add x4, x2, x3, asr #29
0xffff8bd39474   180  ldr x5, [x26, #2400]
0xffff8bd39478   184  stur x5, [x4, #15]
0xffff8bd3947c   188  movz x0, #0x2
0xffff8bd39480   192  ldr x16, pc+248 (addr 0x0000ffff8bd39578)    ;; code: BUILTIN
0xffff8bd39484   196  br x16
0xffff8bd39488   200  tbz w1, #0, #+0x88 (addr 0xffff8bd39510)
0xffff8bd3948c   204  ldur x5, [x1, #-1]
0xffff8bd39490   208  ldrb w5, [x5, #11]
0xffff8bd39494   212  cmp x5, #0xc9 (201)
0xffff8bd39498   216  b.ne #+0x78 (addr 0xffff8bd39510)
0xffff8bd3949c   220  ldur x5, [cp, #39]
0xffff8bd394a0   224  ldur x5, [x5, #95]
0xffff8bd394a4   228  cmp x1, x5
0xffff8bd394a8   232  b.eq #+0x68 (addr 0xffff8bd39510)
0xffff8bd394ac   236  ldur x4, [x1, #39]
0xffff8bd394b0   240  ldur x4, [x4, #39]
0xffff8bd394b4   244  ldur x5, [cp, #39]
0xffff8bd394b8   248  cmp x4, x5
0xffff8bd394bc   252  b.ne #+0x54 (addr 0xffff8bd39510)
0xffff8bd394c0   256  movz x5, #0x200000000
0xffff8bd394c4   260  adds x4, x2, x3, asr #29
0xffff8bd394c8   264  stur x5, [x4, #23]
0xffff8bd394cc   268  movz x16, #0xc00000000
0xffff8bd394d0   272  sub csp, jssp, #0x10 (16)
0xffff8bd394d4   276  stp fp, lr, [jssp, #-16]!
0xffff8bd394d8   280  sub csp, jssp, #0x10 (16)
0xffff8bd394dc   284  str x16, [jssp, #-8]!
0xffff8bd394e0   288  ldr x17, pc+160 (addr 0x0000ffff8bd39580)    ;; object: 0xffff8bd39361 <Code: CALL_IC>
0xffff8bd394e4   292  sub csp, jssp, #0x10 (16)
0xffff8bd394e8   296  str x17, [jssp, #-8]!
0xffff8bd394ec   300  add fp, jssp, #0x10 (16)
0xffff8bd394f0   304  sub csp, jssp, #0x8 (8)
0xffff8bd394f4   308  str x1, [jssp, #-8]!
0xffff8bd394f8   312  ldr x16, pc+144 (addr 0x0000ffff8bd39588)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bd394fc   316  blr x16
0xffff8bd39500   320  ldr x1, [jssp], #8
0xffff8bd39504   324  mov jssp, fp
0xffff8bd39508   328  ldp fp, lr, [jssp], #16
0xffff8bd3950c   332  b #-0x11c (addr 0xffff8bd393f0)
0xffff8bd39510   336  movz x16, #0xc00000000
0xffff8bd39514   340  sub csp, jssp, #0x10 (16)
0xffff8bd39518   344  stp fp, lr, [jssp, #-16]!
0xffff8bd3951c   348  sub csp, jssp, #0x10 (16)
0xffff8bd39520   352  str x16, [jssp, #-8]!
0xffff8bd39524   356  ldr x17, pc+108 (addr 0x0000ffff8bd39590)    ;; object: 0xffff8bd39361 <Code: CALL_IC>
0xffff8bd39528   360  sub csp, jssp, #0x10 (16)
0xffff8bd3952c   364  str x17, [jssp, #-8]!
0xffff8bd39530   368  add fp, jssp, #0x10 (16)
0xffff8bd39534   372  sub csp, jssp, #0x18 (24)
0xffff8bd39538   376  stp x3, x2, [jssp, #-24]!
0xffff8bd3953c   380  str x1, [jssp, #16]
0xffff8bd39540   384  movz x0, #0x3
0xffff8bd39544   388  ldr x1, pc+84 (addr 0x0000ffff8bd39598)    ;; external reference (Runtime::CallIC_Miss)
0xffff8bd39548   392  ldr x16, pc+88 (addr 0x0000ffff8bd395a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd3954c   396  blr x16
0xffff8bd39550   400  mov x1, x0
0xffff8bd39554   404  mov jssp, fp
0xffff8bd39558   408  ldp fp, lr, [jssp], #16
0xffff8bd3955c   412  b #-0xe0 (addr 0xffff8bd3947c)
0xffff8bd39560   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bd39564   420  d63f03e0       constant
0xffff8bd39568   424  8bd1e820       constant
0xffff8bd3956c   428  0000ffff       constant
0xffff8bd39570   432  8bd33b00       constant
0xffff8bd39574   436  0000ffff       constant
0xffff8bd39578   440  8bd1f820       constant
0xffff8bd3957c   444  0000ffff       constant
0xffff8bd39580   448  8bd39361       constant
0xffff8bd39584   452  0000ffff       constant
0xffff8bd39588   456  8bd0ddc0       constant
0xffff8bd3958c   460  0000ffff       constant
0xffff8bd39590   464  8bd39361       constant
0xffff8bd39594   468  0000ffff       constant
0xffff8bd39598   472  00c86928       constant
0xffff8bd3959c   476  00000000       constant
0xffff8bd395a0   480  8bd06060       constant
0xffff8bd395a4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd393f4  code target (BUILTIN)  (0xffff8bd1e820)
0xffff8bd3944c  code target (STUB)  (0xffff8bd33b00)
0xffff8bd39480  code target (BUILTIN)  (0xffff8bd1f820)
0xffff8bd394e0  embedded object  (0xffff8bd39361 <Code: CALL_IC>)
0xffff8bd394f8  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bd39524  embedded object  (0xffff8bd39361 <Code: CALL_IC>)
0xffff8bd39544  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8bd39548  code target (STUB)  (0xffff8bd06060)
0xffff8bd39560  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393218
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8bd39620     0  ldur x2, [fp, #-16]
0xffff8bd39624     4  ldur x2, [x2, #31]
0xffff8bd39628     8  ldur x2, [x2, #87]
0xffff8bd3962c    12  ldr x16, pc+20 (addr 0x0000ffff8bd39640)    ;; code: CALL_IC, GENERIC
0xffff8bd39630    16  br x16
0xffff8bd39634    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd39638    24  d63f03e0       constant
0xffff8bd3963c    28  d503201f       constant
0xffff8bd39640    32  8bd393c0       constant
0xffff8bd39644    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd3962c  code target (CALL_IC)  (0xffff8bd393c0)
0xffff8bd39634  constant pool (size 20)


kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
name = ToBooleanICStub(None)
compiler = unknown
Instructions (size = 104)
0xffff8bd39e00     0  movz x16, #0xc00000000
0xffff8bd39e04     4  sub csp, jssp, #0x10 (16)
0xffff8bd39e08     8  stp fp, lr, [jssp, #-16]!
0xffff8bd39e0c    12  sub csp, jssp, #0x10 (16)
0xffff8bd39e10    16  str x16, [jssp, #-8]!
0xffff8bd39e14    20  ldr x17, pc+60 (addr 0x0000ffff8bd39e50)    ;; object: 0xffff8bd39da1 <Code: TO_BOOLEAN_IC>
0xffff8bd39e18    24  sub csp, jssp, #0x10 (16)
0xffff8bd39e1c    28  str x17, [jssp, #-8]!
0xffff8bd39e20    32  add fp, jssp, #0x10 (16)
0xffff8bd39e24    36  sub csp, jssp, #0x8 (8)
0xffff8bd39e28    40  str x0, [jssp, #-8]!
0xffff8bd39e2c    44  movz x0, #0x1
0xffff8bd39e30    48  ldr x1, pc+40 (addr 0x0000ffff8bd39e58)    ;; external reference (Runtime::ToBooleanIC_Miss)
0xffff8bd39e34    52  ldr x16, pc+44 (addr 0x0000ffff8bd39e60)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd39e38    56  blr x16
0xffff8bd39e3c    60  mov jssp, fp
0xffff8bd39e40    64  ldp fp, lr, [jssp], #16
0xffff8bd39e44    68  ret
0xffff8bd39e48    72  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd39e4c    76  d63f03e0       constant
0xffff8bd39e50    80  8bd39da1       constant
0xffff8bd39e54    84  0000ffff       constant
0xffff8bd39e58    88  00c8b000       constant
0xffff8bd39e5c    92  00000000       constant
0xffff8bd39e60    96  8bd06060       constant
0xffff8bd39e64   100  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd39e14  embedded object  (0xffff8bd39da1 <Code: TO_BOOLEAN_IC>)
0xffff8bd39e30  external reference (Runtime::ToBooleanIC_Miss)  (0xc8b000)
0xffff8bd39e34  code target (STUB)  (0xffff8bd06060)
0xffff8bd39e48  constant pool (size 32)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = GTE
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff8bd39ee0     0  movz x16, #0xc00000000
0xffff8bd39ee4     4  sub csp, jssp, #0x10 (16)
0xffff8bd39ee8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd39eec    12  sub csp, jssp, #0x10 (16)
0xffff8bd39ef0    16  str x16, [jssp, #-8]!
0xffff8bd39ef4    20  ldr x17, pc+92 (addr 0x0000ffff8bd39f50)    ;; object: 0xffff8bd39e81 <Code: COMPARE_IC>
0xffff8bd39ef8    24  sub csp, jssp, #0x10 (16)
0xffff8bd39efc    28  str x17, [jssp, #-8]!
0xffff8bd39f00    32  add fp, jssp, #0x10 (16)
0xffff8bd39f04    36  sub csp, jssp, #0x18 (24)
0xffff8bd39f08    40  stp lr, x0, [jssp, #-24]!
0xffff8bd39f0c    44  str x1, [jssp, #16]
0xffff8bd39f10    48  movz x10, #0x3400000000
0xffff8bd39f14    52  sub csp, jssp, #0x18 (24)
0xffff8bd39f18    56  stp x10, x0, [jssp, #-24]!
0xffff8bd39f1c    60  str x1, [jssp, #16]
0xffff8bd39f20    64  movz x0, #0x3
0xffff8bd39f24    68  ldr x1, pc+52 (addr 0x0000ffff8bd39f58)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd39f28    72  ldr x16, pc+56 (addr 0x0000ffff8bd39f60)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd39f2c    76  blr x16
0xffff8bd39f30    80  add x11, x0, #0x5f (95)
0xffff8bd39f34    84  ldr x1, [jssp, #16]
0xffff8bd39f38    88  ldp lr, x0, [jssp], #24
0xffff8bd39f3c    92  mov jssp, fp
0xffff8bd39f40    96  ldp fp, lr, [jssp], #16
0xffff8bd39f44   100  br x11
0xffff8bd39f48   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd39f4c   108  d63f03e0       constant
0xffff8bd39f50   112  8bd39e81       constant
0xffff8bd39f54   116  0000ffff       constant
0xffff8bd39f58   120  00c8a980       constant
0xffff8bd39f5c   124  00000000       constant
0xffff8bd39f60   128  8bd06060       constant
0xffff8bd39f64   132  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd39ef4  embedded object  (0xffff8bd39e81 <Code: COMPARE_IC>)
0xffff8bd39f24  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd39f28  code target (STUB)  (0xffff8bd06060)
0xffff8bd39f48  constant pool (size 32)


kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 16
type = NORMAL
name = ToBooleanICStub(SpecObject)
compiler = crankshaft
Instructions (size = 144)
0xffff8bd3a6e0     0  tbz w0, #0, #+0x48 (addr 0xffff8bd3a728)
0xffff8bd3a6e4     4  ldur x2, [x0, #-1]
0xffff8bd3a6e8     8  ldrb w1, [x2, #12]
0xffff8bd3a6ec    12  tbnz w1, #4, #+0x14 (addr 0xffff8bd3a700)
0xffff8bd3a6f0    16  ldrb w1, [x2, #11]
0xffff8bd3a6f4    20  cmp x1, #0xb1 (177)
0xffff8bd3a6f8    24  b.ge #+0x10 (addr 0xffff8bd3a708)
0xffff8bd3a6fc    28  b #+0x2c (addr 0xffff8bd3a728)
0xffff8bd3a700    32  ldr x0, pc+24 (addr 0x0000ffff8bd3a718)    ;; object: 0x26c042b1 <false>
0xffff8bd3a704    36  ret
0xffff8bd3a708    40  ldr x0, pc+24 (addr 0x0000ffff8bd3a720)    ;; object: 0x26c04281 <true>
0xffff8bd3a70c    44  ret
0xffff8bd3a710    48  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd3a714    52  d63f03e0       constant
0xffff8bd3a718    56  26c042b1       constant
0xffff8bd3a71c    60  00000000       constant
0xffff8bd3a720    64  26c04281       constant
0xffff8bd3a724    68  00000000       constant
0xffff8bd3a728    72  movz x16, #0x0
0xffff8bd3a72c    76  sub csp, jssp, #0x10 (16)
0xffff8bd3a730    80  stp fp, lr, [jssp, #-16]!
0xffff8bd3a734    84  bl #+0x4 (addr 0xffff8bd3a738)
0xffff8bd3a738    88  movz x17, #0xa00000000
0xffff8bd3a73c    92  sub csp, jssp, #0x10 (16)
0xffff8bd3a740    96  stp x17, cp, [jssp, #-16]!
0xffff8bd3a744   100  add fp, jssp, #0x10 (16)
0xffff8bd3a748   104  ldr x17, pc+24 (addr 0x0000ffff8bd3a760)    ;; lazy deoptimization bailout 0
0xffff8bd3a74c   108  add x17, x17, x16
0xffff8bd3a750   112  br x17
0xffff8bd3a754   116  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd3a758   120  d63f03e0       constant
0xffff8bd3a75c   124  d503201f       constant
0xffff8bd3a760   128  8bb06000       constant
0xffff8bd3a764   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd3a700  embedded object  (0x26c042b1 <false>)
0xffff8bd3a708  embedded object  (0x26c04281 <true>)
0xffff8bd3a710  constant pool (size 24)
0xffff8bd3a748  runtime entry
0xffff8bd3a754  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = GTE
name = CompareICStub
compiler = unknown
Instructions (size = 160)
0xffff8bd3a7e0     0  orr x16, x0, x1
0xffff8bd3a7e4     4  tbnz w16, #0, #+0x10 (addr 0xffff8bd3a7f4)
0xffff8bd3a7e8     8  asr x1, x1, #32
0xffff8bd3a7ec    12  sub x0, x1, x0, asr #32
0xffff8bd3a7f0    16  ret
0xffff8bd3a7f4    20  movz x16, #0xc00000000
0xffff8bd3a7f8    24  sub csp, jssp, #0x10 (16)
0xffff8bd3a7fc    28  stp fp, lr, [jssp, #-16]!
0xffff8bd3a800    32  sub csp, jssp, #0x10 (16)
0xffff8bd3a804    36  str x16, [jssp, #-8]!
0xffff8bd3a808    40  ldr x17, pc+96 (addr 0x0000ffff8bd3a868)    ;; object: 0xffff8bd3a781 <Code: COMPARE_IC>
0xffff8bd3a80c    44  sub csp, jssp, #0x10 (16)
0xffff8bd3a810    48  str x17, [jssp, #-8]!
0xffff8bd3a814    52  add fp, jssp, #0x10 (16)
0xffff8bd3a818    56  sub csp, jssp, #0x18 (24)
0xffff8bd3a81c    60  stp lr, x0, [jssp, #-24]!
0xffff8bd3a820    64  str x1, [jssp, #16]
0xffff8bd3a824    68  movz x10, #0x3400000000
0xffff8bd3a828    72  sub csp, jssp, #0x18 (24)
0xffff8bd3a82c    76  stp x10, x0, [jssp, #-24]!
0xffff8bd3a830    80  str x1, [jssp, #16]
0xffff8bd3a834    84  movz x0, #0x3
0xffff8bd3a838    88  ldr x1, pc+56 (addr 0x0000ffff8bd3a870)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd3a83c    92  ldr x16, pc+60 (addr 0x0000ffff8bd3a878)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd3a840    96  blr x16
0xffff8bd3a844   100  add x11, x0, #0x5f (95)
0xffff8bd3a848   104  ldr x1, [jssp, #16]
0xffff8bd3a84c   108  ldp lr, x0, [jssp], #24
0xffff8bd3a850   112  mov jssp, fp
0xffff8bd3a854   116  ldp fp, lr, [jssp], #16
0xffff8bd3a858   120  br x11
0xffff8bd3a85c   124  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd3a860   128  d63f03e0       constant
0xffff8bd3a864   132  d503201f       constant
0xffff8bd3a868   136  8bd3a781       constant
0xffff8bd3a86c   140  0000ffff       constant
0xffff8bd3a870   144  00c8a980       constant
0xffff8bd3a874   148  00000000       constant
0xffff8bd3a878   152  8bd06060       constant
0xffff8bd3a87c   156  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd3a808  embedded object  (0xffff8bd3a781 <Code: COMPARE_IC>)
0xffff8bd3a838  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd3a83c  code target (STUB)  (0xffff8bd06060)
0xffff8bd3a85c  constant pool (size 36)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = EQ
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff8bd3a8e0     0  movz x16, #0xc00000000
0xffff8bd3a8e4     4  sub csp, jssp, #0x10 (16)
0xffff8bd3a8e8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd3a8ec    12  sub csp, jssp, #0x10 (16)
0xffff8bd3a8f0    16  str x16, [jssp, #-8]!
0xffff8bd3a8f4    20  ldr x17, pc+92 (addr 0x0000ffff8bd3a950)    ;; object: 0xffff8bd3a881 <Code: COMPARE_IC>
0xffff8bd3a8f8    24  sub csp, jssp, #0x10 (16)
0xffff8bd3a8fc    28  str x17, [jssp, #-8]!
0xffff8bd3a900    32  add fp, jssp, #0x10 (16)
0xffff8bd3a904    36  sub csp, jssp, #0x18 (24)
0xffff8bd3a908    40  stp lr, x0, [jssp, #-24]!
0xffff8bd3a90c    44  str x1, [jssp, #16]
0xffff8bd3a910    48  movz x10, #0x2d00000000
0xffff8bd3a914    52  sub csp, jssp, #0x18 (24)
0xffff8bd3a918    56  stp x10, x0, [jssp, #-24]!
0xffff8bd3a91c    60  str x1, [jssp, #16]
0xffff8bd3a920    64  movz x0, #0x3
0xffff8bd3a924    68  ldr x1, pc+52 (addr 0x0000ffff8bd3a958)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd3a928    72  ldr x16, pc+56 (addr 0x0000ffff8bd3a960)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd3a92c    76  blr x16
0xffff8bd3a930    80  add x11, x0, #0x5f (95)
0xffff8bd3a934    84  ldr x1, [jssp, #16]
0xffff8bd3a938    88  ldp lr, x0, [jssp], #24
0xffff8bd3a93c    92  mov jssp, fp
0xffff8bd3a940    96  ldp fp, lr, [jssp], #16
0xffff8bd3a944   100  br x11
0xffff8bd3a948   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd3a94c   108  d63f03e0       constant
0xffff8bd3a950   112  8bd3a881       constant
0xffff8bd3a954   116  0000ffff       constant
0xffff8bd3a958   120  00c8a980       constant
0xffff8bd3a95c   124  00000000       constant
0xffff8bd3a960   128  8bd06060       constant
0xffff8bd3a964   132  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd3a8f4  embedded object  (0xffff8bd3a881 <Code: COMPARE_IC>)
0xffff8bd3a924  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd3a928  code target (STUB)  (0xffff8bd06060)
0xffff8bd3a948  constant pool (size 32)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393219
name = CallICStub(args(3), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff8bd3ac00     0  add x4, x2, x3, asr #29
0xffff8bd3ac04     4  ldur x4, [x4, #15]
0xffff8bd3ac08     8  ldur x5, [x4, #7]
0xffff8bd3ac0c    12  cmp x5, x1
0xffff8bd3ac10    16  b.ne #+0x2c (addr 0xffff8bd3ac3c)
0xffff8bd3ac14    20  tbz w1, #0, #+0x28 (addr 0xffff8bd3ac3c)
0xffff8bd3ac18    24  add x2, x2, x3, asr #29
0xffff8bd3ac1c    28  add x2, x2, #0x18 (24)
0xffff8bd3ac20    32  ldur x3, [x2, #-1]
0xffff8bd3ac24    36  movz x16, #0x200000000
0xffff8bd3ac28    40  add x3, x3, x16
0xffff8bd3ac2c    44  stur x3, [x2, #-1]
0xffff8bd3ac30    48  movz x0, #0x3
0xffff8bd3ac34    52  ldr x16, pc+372 (addr 0x0000ffff8bd3ada8)    ;; code: BUILTIN
0xffff8bd3ac38    56  br x16
0xffff8bd3ac3c    60  ldr x16, [x26, #2400]
0xffff8bd3ac40    64  cmp x4, x16
0xffff8bd3ac44    68  b.eq #+0x78 (addr 0xffff8bd3acbc)
0xffff8bd3ac48    72  ldur x5, [x4, #-1]
0xffff8bd3ac4c    76  ldr x16, [x26, #2736]
0xffff8bd3ac50    80  cmp x5, x16
0xffff8bd3ac54    84  b.ne #+0x40 (addr 0xffff8bd3ac94)
0xffff8bd3ac58    88  ldur x5, [cp, #39]
0xffff8bd3ac5c    92  ldur x5, [x5, #95]
0xffff8bd3ac60    96  cmp x1, x5
0xffff8bd3ac64   100  b.ne #+0xec (addr 0xffff8bd3ad50)
0xffff8bd3ac68   104  movz x0, #0x3
0xffff8bd3ac6c   108  add x2, x2, x3, asr #29
0xffff8bd3ac70   112  add x2, x2, #0x18 (24)
0xffff8bd3ac74   116  ldur x3, [x2, #-1]
0xffff8bd3ac78   120  movz x16, #0x200000000
0xffff8bd3ac7c   124  add x3, x3, x16
0xffff8bd3ac80   128  stur x3, [x2, #-1]
0xffff8bd3ac84   132  mov x2, x4
0xffff8bd3ac88   136  mov x3, x1
0xffff8bd3ac8c   140  ldr x16, pc+292 (addr 0x0000ffff8bd3adb0)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff8bd3ac90   144  br x16
0xffff8bd3ac94   148  ldr x16, [x26, #2568]
0xffff8bd3ac98   152  cmp x4, x16
0xffff8bd3ac9c   156  b.eq #+0xb4 (addr 0xffff8bd3ad50)
0xffff8bd3aca0   160  ldur x5, [x4, #-1]
0xffff8bd3aca4   164  ldrb w5, [x5, #11]
0xffff8bd3aca8   168  cmp x5, #0xc9 (201)
0xffff8bd3acac   172  b.ne #+0xa4 (addr 0xffff8bd3ad50)
0xffff8bd3acb0   176  add x4, x2, x3, asr #29
0xffff8bd3acb4   180  ldr x5, [x26, #2400]
0xffff8bd3acb8   184  stur x5, [x4, #15]
0xffff8bd3acbc   188  movz x0, #0x3
0xffff8bd3acc0   192  ldr x16, pc+248 (addr 0x0000ffff8bd3adb8)    ;; code: BUILTIN
0xffff8bd3acc4   196  br x16
0xffff8bd3acc8   200  tbz w1, #0, #+0x88 (addr 0xffff8bd3ad50)
0xffff8bd3accc   204  ldur x5, [x1, #-1]
0xffff8bd3acd0   208  ldrb w5, [x5, #11]
0xffff8bd3acd4   212  cmp x5, #0xc9 (201)
0xffff8bd3acd8   216  b.ne #+0x78 (addr 0xffff8bd3ad50)
0xffff8bd3acdc   220  ldur x5, [cp, #39]
0xffff8bd3ace0   224  ldur x5, [x5, #95]
0xffff8bd3ace4   228  cmp x1, x5
0xffff8bd3ace8   232  b.eq #+0x68 (addr 0xffff8bd3ad50)
0xffff8bd3acec   236  ldur x4, [x1, #39]
0xffff8bd3acf0   240  ldur x4, [x4, #39]
0xffff8bd3acf4   244  ldur x5, [cp, #39]
0xffff8bd3acf8   248  cmp x4, x5
0xffff8bd3acfc   252  b.ne #+0x54 (addr 0xffff8bd3ad50)
0xffff8bd3ad00   256  movz x5, #0x200000000
0xffff8bd3ad04   260  adds x4, x2, x3, asr #29
0xffff8bd3ad08   264  stur x5, [x4, #23]
0xffff8bd3ad0c   268  movz x16, #0xc00000000
0xffff8bd3ad10   272  sub csp, jssp, #0x10 (16)
0xffff8bd3ad14   276  stp fp, lr, [jssp, #-16]!
0xffff8bd3ad18   280  sub csp, jssp, #0x10 (16)
0xffff8bd3ad1c   284  str x16, [jssp, #-8]!
0xffff8bd3ad20   288  ldr x17, pc+160 (addr 0x0000ffff8bd3adc0)    ;; object: 0xffff8bd3aba1 <Code: CALL_IC>
0xffff8bd3ad24   292  sub csp, jssp, #0x10 (16)
0xffff8bd3ad28   296  str x17, [jssp, #-8]!
0xffff8bd3ad2c   300  add fp, jssp, #0x10 (16)
0xffff8bd3ad30   304  sub csp, jssp, #0x8 (8)
0xffff8bd3ad34   308  str x1, [jssp, #-8]!
0xffff8bd3ad38   312  ldr x16, pc+144 (addr 0x0000ffff8bd3adc8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bd3ad3c   316  blr x16
0xffff8bd3ad40   320  ldr x1, [jssp], #8
0xffff8bd3ad44   324  mov jssp, fp
0xffff8bd3ad48   328  ldp fp, lr, [jssp], #16
0xffff8bd3ad4c   332  b #-0x11c (addr 0xffff8bd3ac30)
0xffff8bd3ad50   336  movz x16, #0xc00000000
0xffff8bd3ad54   340  sub csp, jssp, #0x10 (16)
0xffff8bd3ad58   344  stp fp, lr, [jssp, #-16]!
0xffff8bd3ad5c   348  sub csp, jssp, #0x10 (16)
0xffff8bd3ad60   352  str x16, [jssp, #-8]!
0xffff8bd3ad64   356  ldr x17, pc+108 (addr 0x0000ffff8bd3add0)    ;; object: 0xffff8bd3aba1 <Code: CALL_IC>
0xffff8bd3ad68   360  sub csp, jssp, #0x10 (16)
0xffff8bd3ad6c   364  str x17, [jssp, #-8]!
0xffff8bd3ad70   368  add fp, jssp, #0x10 (16)
0xffff8bd3ad74   372  sub csp, jssp, #0x18 (24)
0xffff8bd3ad78   376  stp x3, x2, [jssp, #-24]!
0xffff8bd3ad7c   380  str x1, [jssp, #16]
0xffff8bd3ad80   384  movz x0, #0x3
0xffff8bd3ad84   388  ldr x1, pc+84 (addr 0x0000ffff8bd3add8)    ;; external reference (Runtime::CallIC_Miss)
0xffff8bd3ad88   392  ldr x16, pc+88 (addr 0x0000ffff8bd3ade0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd3ad8c   396  blr x16
0xffff8bd3ad90   400  mov x1, x0
0xffff8bd3ad94   404  mov jssp, fp
0xffff8bd3ad98   408  ldp fp, lr, [jssp], #16
0xffff8bd3ad9c   412  b #-0xe0 (addr 0xffff8bd3acbc)
0xffff8bd3ada0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bd3ada4   420  d63f03e0       constant
0xffff8bd3ada8   424  8bd1e820       constant
0xffff8bd3adac   428  0000ffff       constant
0xffff8bd3adb0   432  8bd33b00       constant
0xffff8bd3adb4   436  0000ffff       constant
0xffff8bd3adb8   440  8bd1f820       constant
0xffff8bd3adbc   444  0000ffff       constant
0xffff8bd3adc0   448  8bd3aba1       constant
0xffff8bd3adc4   452  0000ffff       constant
0xffff8bd3adc8   456  8bd0ddc0       constant
0xffff8bd3adcc   460  0000ffff       constant
0xffff8bd3add0   464  8bd3aba1       constant
0xffff8bd3add4   468  0000ffff       constant
0xffff8bd3add8   472  00c86928       constant
0xffff8bd3addc   476  00000000       constant
0xffff8bd3ade0   480  8bd06060       constant
0xffff8bd3ade4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd3ac34  code target (BUILTIN)  (0xffff8bd1e820)
0xffff8bd3ac8c  code target (STUB)  (0xffff8bd33b00)
0xffff8bd3acc0  code target (BUILTIN)  (0xffff8bd1f820)
0xffff8bd3ad20  embedded object  (0xffff8bd3aba1 <Code: CALL_IC>)
0xffff8bd3ad38  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bd3ad64  embedded object  (0xffff8bd3aba1 <Code: CALL_IC>)
0xffff8bd3ad84  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8bd3ad88  code target (STUB)  (0xffff8bd06060)
0xffff8bd3ada0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393219
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8bd3ae60     0  ldur x2, [fp, #-16]
0xffff8bd3ae64     4  ldur x2, [x2, #31]
0xffff8bd3ae68     8  ldur x2, [x2, #87]
0xffff8bd3ae6c    12  ldr x16, pc+20 (addr 0x0000ffff8bd3ae80)    ;; code: CALL_IC, GENERIC
0xffff8bd3ae70    16  br x16
0xffff8bd3ae74    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd3ae78    24  d63f03e0       constant
0xffff8bd3ae7c    28  d503201f       constant
0xffff8bd3ae80    32  8bd3ac00       constant
0xffff8bd3ae84    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd3ae6c  code target (CALL_IC)  (0xffff8bd3ac00)
0xffff8bd3ae74  constant pool (size 20)


kind = STUB
major_key = BinaryOpWithAllocationSiteStub
name = BinaryOpWithAllocationSiteStub(ADD_CreateAllocationMementos:String*String->String)
compiler = crankshaft
Instructions (size = 1164)
0xffff8bd3b220     0  movz x16, #0xa00000000
0xffff8bd3b224     4  sub csp, jssp, #0x10 (16)
0xffff8bd3b228     8  stp fp, lr, [jssp, #-16]!
0xffff8bd3b22c    12  mov fp, jssp
0xffff8bd3b230    16  sub csp, jssp, #0x28 (40)
0xffff8bd3b234    20  sub jssp, jssp, #0x28 (40)
0xffff8bd3b238    24  stur x16, [fp, #-8]
0xffff8bd3b23c    28  str x2, [jssp, #24]
0xffff8bd3b240    32  str x1, [jssp, #16]
0xffff8bd3b244    36  str x0, [jssp, #8]
0xffff8bd3b248    40  str cp, [jssp]
0xffff8bd3b24c    44  mov x3, cp
0xffff8bd3b250    48  tbz w1, #0, #+0x3d8 (addr 0xffff8bd3b628)
0xffff8bd3b254    52  ldur x4, [x1, #-1]
0xffff8bd3b258    56  ldrb w4, [x4, #11]
0xffff8bd3b25c    60  tbnz w4, #7, #+0x3d4 (addr 0xffff8bd3b630)
0xffff8bd3b260    64  tbz w0, #0, #+0x3d8 (addr 0xffff8bd3b638)
0xffff8bd3b264    68  ldur x4, [x0, #-1]
0xffff8bd3b268    72  ldrb w4, [x4, #11]
0xffff8bd3b26c    76  tbnz w4, #7, #+0x3d4 (addr 0xffff8bd3b640)
0xffff8bd3b270    80  ldur w4, [x1, #19]
0xffff8bd3b274    84  ldur w5, [x0, #19]
0xffff8bd3b278    88  cbz w4, #+0x288 (addr 0xffff8bd3b500)
0xffff8bd3b27c    92  cbz w5, #+0x27c (addr 0xffff8bd3b4f8)
0xffff8bd3b280    96  add w6, w4, w5
0xffff8bd3b284   100  movn w16, #0xe0
0xffff8bd3b288   104  cmp w6, w16, lsr #4
0xffff8bd3b28c   108  b.hs #+0x3bc (addr 0xffff8bd3b648)
0xffff8bd3b290   112  cmp w6, #0xd (13)
0xffff8bd3b294   116  b.ge #+0x1c0 (addr 0xffff8bd3b454)
0xffff8bd3b298   120  ldur x7, [x1, #-1]
0xffff8bd3b29c   124  ldrb w7, [x7, #11]
0xffff8bd3b2a0   128  ldur x8, [x0, #-1]
0xffff8bd3b2a4   132  ldrb w8, [x8, #11]
0xffff8bd3b2a8   136  orr w9, w7, w8
0xffff8bd3b2ac   140  eor w7, w7, w8
0xffff8bd3b2b0   144  and w7, w7, #0x4
0xffff8bd3b2b4   148  cbnz w7, #+0xc (addr 0xffff8bd3b2c0)
0xffff8bd3b2b8   152  and w7, w9, #0x3
0xffff8bd3b2bc   156  cbz w7, #+0x28 (addr 0xffff8bd3b2e4)
0xffff8bd3b2c0   160  sub csp, jssp, #0x10 (16)
0xffff8bd3b2c4   164  stp x0, x1, [jssp, #-16]!
0xffff8bd3b2c8   168  mov cp, x3
0xffff8bd3b2cc   172  movz x0, #0x2
0xffff8bd3b2d0   176  movz x1, #0xa6c0
0xffff8bd3b2d4   180  movk x1, #0xec, lsl #16
0xffff8bd3b2d8   184  ldr x16, pc+728 (addr 0x0000ffff8bd3b5b0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd3b2dc   188  blr x16
0xffff8bd3b2e0   192  b #+0x228 (addr 0xffff8bd3b508)
0xffff8bd3b2e4   196  and w0, w9, #0x4
0xffff8bd3b2e8   200  cbnz w0, #+0x14 (addr 0xffff8bd3b2fc)
0xffff8bd3b2ec   204  lsl w0, w6, #1
0xffff8bd3b2f0   208  mov x1, x0
0xffff8bd3b2f4   212  ldr x0, pc+708 (addr 0x0000ffff8bd3b5b8)    ;; object: 0x5f504ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd3b2f8   216  b #+0xc (addr 0xffff8bd3b304)
0xffff8bd3b2fc   220  mov x1, x6
0xffff8bd3b300   224  ldr x0, pc+704 (addr 0x0000ffff8bd3b5c0)    ;; object: 0x5f504bf9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd3b304   228  add w1, w1, #0x1f (31)
0xffff8bd3b308   232  and w1, w1, #0xfffffff8
0xffff8bd3b30c   236  cmp w1, #0x96000 (614400)
0xffff8bd3b310   240  b.lt #+0x2c (addr 0xffff8bd3b33c)
0xffff8bd3b314   244  sub csp, jssp, #0x10 (16)
0xffff8bd3b318   248  ldp x1, x0, [jssp, #8]
0xffff8bd3b31c   252  stp x1, x0, [jssp, #-16]!
0xffff8bd3b320   256  ldr cp, [jssp, #16]
0xffff8bd3b324   260  movz x0, #0x2
0xffff8bd3b328   264  movz x1, #0xa6c0
0xffff8bd3b32c   268  movk x1, #0xec, lsl #16
0xffff8bd3b330   272  ldr x16, pc+664 (addr 0x0000ffff8bd3b5c8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd3b334   276  blr x16
0xffff8bd3b338   280  b #+0x1d0 (addr 0xffff8bd3b508)
0xffff8bd3b33c   284  add w2, w1, #0x10 (16)
0xffff8bd3b340   288  sxtw x2, w2
0xffff8bd3b344   292  movz x3, #0xe2c0
0xffff8bd3b348   296  movk x3, #0x2cb8, lsl #16
0xffff8bd3b34c   300  ldp x8, x16, [x3]
0xffff8bd3b350   304  adds x7, x8, x2
0xffff8bd3b354   308  ccmp x7, x16, #nzCv, lo
0xffff8bd3b358   312  b.hi #+0x1c0 (addr 0xffff8bd3b518)
0xffff8bd3b35c   316  str x7, [x3]
0xffff8bd3b360   320  orr x8, x8, #0x1
0xffff8bd3b364   324  add x1, x8, w1, sxtw
0xffff8bd3b368   328  ldr x2, pc+616 (addr 0x0000ffff8bd3b5d0)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd3b36c   332  stur x2, [x1, #-1]
0xffff8bd3b370   336  ldr x2, [jssp, #24]
0xffff8bd3b374   340  stur x2, [x1, #7]
0xffff8bd3b378   344  ldur w1, [x2, #35]
0xffff8bd3b37c   348  add w1, w1, #0x1 (1)
0xffff8bd3b380   352  lsl x1, x1, #32
0xffff8bd3b384   356  stur x1, [x2, #31]
0xffff8bd3b388   360  stur x0, [x8, #-1]
0xffff8bd3b38c   364  movz w1, #0x3
0xffff8bd3b390   368  stur w1, [x8, #7]
0xffff8bd3b394   372  lsl x1, x6, #32
0xffff8bd3b398   376  stur x1, [x8, #15]
0xffff8bd3b39c   380  ldr x1, pc+572 (addr 0x0000ffff8bd3b5d8)    ;; object: 0x5f504ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd3b3a0   384  cmp x0, x1
0xffff8bd3b3a4   388  b.eq #+0x58 (addr 0xffff8bd3b3fc)
0xffff8bd3b3a8   392  ldr x1, [jssp, #16]
0xffff8bd3b3ac   396  movz x0, #0x0
0xffff8bd3b3b0   400  cmp w4, w0
0xffff8bd3b3b4   404  b.le #+0x1c (addr 0xffff8bd3b3d0)
0xffff8bd3b3b8   408  add x2, x1, #0x17 (23)
0xffff8bd3b3bc   412  ldrb w3, [x2, w0, sxtw]
0xffff8bd3b3c0   416  add x2, x8, #0x17 (23)
0xffff8bd3b3c4   420  strb w3, [x2, w0, sxtw]
0xffff8bd3b3c8   424  add w0, w0, #0x1 (1)
0xffff8bd3b3cc   428  b #-0x1c (addr 0xffff8bd3b3b0)
0xffff8bd3b3d0   432  ldr x3, [jssp, #8]
0xffff8bd3b3d4   436  movz x0, #0x0
0xffff8bd3b3d8   440  cmp w5, w0
0xffff8bd3b3dc   444  b.le #+0x70 (addr 0xffff8bd3b44c)
0xffff8bd3b3e0   448  add x1, x3, #0x17 (23)
0xffff8bd3b3e4   452  ldrb w2, [x1, w0, sxtw]
0xffff8bd3b3e8   456  add w1, w4, w0
0xffff8bd3b3ec   460  add x6, x8, #0x17 (23)
0xffff8bd3b3f0   464  strb w2, [x6, w1, sxtw]
0xffff8bd3b3f4   468  add w0, w0, #0x1 (1)
0xffff8bd3b3f8   472  b #-0x20 (addr 0xffff8bd3b3d8)
0xffff8bd3b3fc   476  ldp x3, x1, [jssp, #8]
0xffff8bd3b400   480  movz x0, #0x0
0xffff8bd3b404   484  cmp w4, w0
0xffff8bd3b408   488  b.le #+0x1c (addr 0xffff8bd3b424)
0xffff8bd3b40c   492  add x2, x1, #0x17 (23)
0xffff8bd3b410   496  ldrh w6, [x2, w0, sxtw #1]
0xffff8bd3b414   500  add x2, x8, #0x17 (23)
0xffff8bd3b418   504  strh w6, [x2, w0, sxtw #1]
0xffff8bd3b41c   508  add w0, w0, #0x1 (1)
0xffff8bd3b420   512  b #-0x1c (addr 0xffff8bd3b404)
0xffff8bd3b424   516  movz x0, #0x0
0xffff8bd3b428   520  cmp w5, w0
0xffff8bd3b42c   524  b.le #+0x20 (addr 0xffff8bd3b44c)
0xffff8bd3b430   528  add x1, x3, #0x17 (23)
0xffff8bd3b434   532  ldrh w2, [x1, w0, sxtw #1]
0xffff8bd3b438   536  add w1, w4, w0
0xffff8bd3b43c   540  add x6, x8, #0x17 (23)
0xffff8bd3b440   544  strh w2, [x6, w1, sxtw #1]
0xffff8bd3b444   548  add w0, w0, #0x1 (1)
0xffff8bd3b448   552  b #-0x20 (addr 0xffff8bd3b428)
0xffff8bd3b44c   556  mov x0, x8
0xffff8bd3b450   560  b #+0xb8 (addr 0xffff8bd3b508)
0xffff8bd3b454   564  mov x3, x0
0xffff8bd3b458   568  ldur x0, [x1, #-1]
0xffff8bd3b45c   572  ldrb w0, [x0, #11]
0xffff8bd3b460   576  ldur x4, [x3, #-1]
0xffff8bd3b464   580  ldrb w4, [x4, #11]
0xffff8bd3b468   584  movz x7, #0xe2c0
0xffff8bd3b46c   588  movk x7, #0x2cb8, lsl #16
0xffff8bd3b470   592  ldp x8, x5, [x7]
0xffff8bd3b474   596  adds x16, x8, #0x38 (56)
0xffff8bd3b478   600  ccmp x16, x5, #nzCv, lo
0xffff8bd3b47c   604  b.hi #+0xe4 (addr 0xffff8bd3b560)
0xffff8bd3b480   608  str x16, [x7]
0xffff8bd3b484   612  orr x8, x8, #0x1
0xffff8bd3b488   616  add x5, x8, #0x28 (40)
0xffff8bd3b48c   620  ldr x7, pc+340 (addr 0x0000ffff8bd3b5e0)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd3b490   624  stur x7, [x5, #-1]
0xffff8bd3b494   628  stur x2, [x5, #7]
0xffff8bd3b498   632  ldur w5, [x2, #35]
0xffff8bd3b49c   636  add w5, w5, #0x1 (1)
0xffff8bd3b4a0   640  lsl x5, x5, #32
0xffff8bd3b4a4   644  stur x5, [x2, #31]
0xffff8bd3b4a8   648  and w2, w0, w4
0xffff8bd3b4ac   652  eor w0, w0, w4
0xffff8bd3b4b0   656  and w2, w2, #0xc
0xffff8bd3b4b4   660  cbnz w2, #+0x1c (addr 0xffff8bd3b4d0)
0xffff8bd3b4b8   664  and w0, w0, #0xc
0xffff8bd3b4bc   668  cmp w0, #0xc (12)
0xffff8bd3b4c0   672  b.eq #+0x10 (addr 0xffff8bd3b4d0)
0xffff8bd3b4c4   676  ldr x0, pc+292 (addr 0x0000ffff8bd3b5e8)    ;; object: 0x5f504c51 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd3b4c8   680  stur x0, [x8, #-1]
0xffff8bd3b4cc   684  b #+0xc (addr 0xffff8bd3b4d8)
0xffff8bd3b4d0   688  ldr x0, pc+288 (addr 0x0000ffff8bd3b5f0)    ;; object: 0x5f504ca9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd3b4d4   692  stur x0, [x8, #-1]
0xffff8bd3b4d8   696  movz w0, #0x3
0xffff8bd3b4dc   700  stur w0, [x8, #7]
0xffff8bd3b4e0   704  lsl x0, x6, #32
0xffff8bd3b4e4   708  stur x0, [x8, #15]
0xffff8bd3b4e8   712  stur x1, [x8, #23]
0xffff8bd3b4ec   716  stur x3, [x8, #31]
0xffff8bd3b4f0   720  mov x0, x8
0xffff8bd3b4f4   724  b #+0x14 (addr 0xffff8bd3b508)
0xffff8bd3b4f8   728  mov x0, x1
0xffff8bd3b4fc   732  b #+0xc (addr 0xffff8bd3b508)
0xffff8bd3b500   736  mov x3, x0
0xffff8bd3b504   740  mov x0, x3
0xffff8bd3b508   744  ldr cp, [jssp]
0xffff8bd3b50c   748  mov jssp, fp
0xffff8bd3b510   752  ldp fp, lr, [jssp], #16
0xffff8bd3b514   756  ret
0xffff8bd3b518   760  movz x8, #0x0
0xffff8bd3b51c   764  mov x16, lr
0xffff8bd3b520   768  ldr x17, pc+216 (addr 0x0000ffff8bd3b5f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd3b524   772  blr x17
0xffff8bd3b528   776  lsl x0, x2, #32
0xffff8bd3b52c   780  movz x10, #0x0
0xffff8bd3b530   784  sub csp, jssp, #0x10 (16)
0xffff8bd3b534   788  stp x10, x0, [jssp, #-16]!
0xffff8bd3b538   792  ldur cp, [fp, #-40]
0xffff8bd3b53c   796  movz x0, #0x2
0xffff8bd3b540   800  movz x1, #0x5b88
0xffff8bd3b544   804  movk x1, #0xe2, lsl #16
0xffff8bd3b548   808  ldr x16, pc+184 (addr 0x0000ffff8bd3b600)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd3b54c   812  blr x16
0xffff8bd3b550   816  str x0, [jssp, #64]
0xffff8bd3b554   820  ldr x16, pc+180 (addr 0x0000ffff8bd3b608)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd3b558   824  blr x16
0xffff8bd3b55c   828  b #-0x1f8 (addr 0xffff8bd3b364)
0xffff8bd3b560   832  movz x8, #0x0
0xffff8bd3b564   836  mov x16, lr
0xffff8bd3b568   840  ldr x17, pc+168 (addr 0x0000ffff8bd3b610)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd3b56c   844  blr x17
0xffff8bd3b570   848  movz x0, #0x3800000000
0xffff8bd3b574   852  movz x10, #0x0
0xffff8bd3b578   856  sub csp, jssp, #0x10 (16)
0xffff8bd3b57c   860  stp x10, x0, [jssp, #-16]!
0xffff8bd3b580   864  ldur cp, [fp, #-40]
0xffff8bd3b584   868  movz x0, #0x2
0xffff8bd3b588   872  movz x1, #0x5b88
0xffff8bd3b58c   876  movk x1, #0xe2, lsl #16
0xffff8bd3b590   880  ldr x16, pc+136 (addr 0x0000ffff8bd3b618)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd3b594   884  blr x16
0xffff8bd3b598   888  str x0, [jssp, #64]
0xffff8bd3b59c   892  ldr x16, pc+132 (addr 0x0000ffff8bd3b620)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd3b5a0   896  blr x16
0xffff8bd3b5a4   900  b #-0x11c (addr 0xffff8bd3b488)
0xffff8bd3b5a8   904  580003ff       constant pool begin (num_const = 31)    ;; constant pool
0xffff8bd3b5ac   908  d63f03e0       constant
0xffff8bd3b5b0   912  8bd06060       constant
0xffff8bd3b5b4   916  0000ffff       constant
0xffff8bd3b5b8   920  5f504ba1       constant
0xffff8bd3b5bc   924  00000000       constant
0xffff8bd3b5c0   928  5f504bf9       constant
0xffff8bd3b5c4   932  00000000       constant
0xffff8bd3b5c8   936  8bd06060       constant
0xffff8bd3b5cc   940  0000ffff       constant
0xffff8bd3b5d0   944  5f505d81       constant
0xffff8bd3b5d4   948  00000000       constant
0xffff8bd3b5d8   952  5f504ba1       constant
0xffff8bd3b5dc   956  00000000       constant
0xffff8bd3b5e0   960  5f505d81       constant
0xffff8bd3b5e4   964  00000000       constant
0xffff8bd3b5e8   968  5f504c51       constant
0xffff8bd3b5ec   972  00000000       constant
0xffff8bd3b5f0   976  5f504ca9       constant
0xffff8bd3b5f4   980  00000000       constant
0xffff8bd3b5f8   984  8bd06820       constant
0xffff8bd3b5fc   988  0000ffff       constant
0xffff8bd3b600   992  8bd06260       constant
0xffff8bd3b604   996  0000ffff       constant
0xffff8bd3b608  1000  8bd068e0       constant
0xffff8bd3b60c  1004  0000ffff       constant
0xffff8bd3b610  1008  8bd06820       constant
0xffff8bd3b614  1012  0000ffff       constant
0xffff8bd3b618  1016  8bd06260       constant
0xffff8bd3b61c  1020  0000ffff       constant
0xffff8bd3b620  1024  8bd068e0       constant
0xffff8bd3b624  1028  0000ffff       constant
0xffff8bd3b628  1032  movz x16, #0x0
0xffff8bd3b62c  1036  bl #+0x24 (addr 0xffff8bd3b650)
0xffff8bd3b630  1040  movz x16, #0x8
0xffff8bd3b634  1044  bl #+0x1c (addr 0xffff8bd3b650)
0xffff8bd3b638  1048  movz x16, #0x10
0xffff8bd3b63c  1052  bl #+0x14 (addr 0xffff8bd3b650)
0xffff8bd3b640  1056  movz x16, #0x18
0xffff8bd3b644  1060  bl #+0xc (addr 0xffff8bd3b650)
0xffff8bd3b648  1064  movz x16, #0x20
0xffff8bd3b64c  1068  bl #+0x4 (addr 0xffff8bd3b650)
0xffff8bd3b650  1072  ldr x17, pc+24 (addr 0x0000ffff8bd3b668)    ;; lazy deoptimization bailout 0
0xffff8bd3b654  1076  add x17, x17, x16
0xffff8bd3b658  1080  br x17
0xffff8bd3b65c  1084  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd3b660  1088  d63f03e0       constant
0xffff8bd3b664  1092  d503201f       constant
0xffff8bd3b668  1096  8bb06000       constant
0xffff8bd3b66c  1100  0000ffff       constant


Safepoints (size = 60)
0xffff8bd3b2e0   192  1111000 (sp -> fp)       5
0xffff8bd3b338   280  1111000 (sp -> fp)       6
0xffff8bd3b550   816  1111000 | x0 | x8 (sp -> fp)  <none> argc: 2
0xffff8bd3b598   888  1111000 | x1 | x2 | x3 | x8 (sp -> fp)  <none> argc: 2

RelocInfo (size = 37)
0xffff8bd3b2d8  code target (STUB)  (0xffff8bd06060)
0xffff8bd3b2f4  embedded object  (0x5f504ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd3b300  embedded object  (0x5f504bf9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd3b330  code target (STUB)  (0xffff8bd06060)
0xffff8bd3b368  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd3b39c  embedded object  (0x5f504ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd3b48c  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd3b4c4  embedded object  (0x5f504c51 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd3b4d0  embedded object  (0x5f504ca9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd3b520  code target (STUB)  (0xffff8bd06820)
0xffff8bd3b548  code target (STUB)  (0xffff8bd06260)
0xffff8bd3b554  code target (STUB)  (0xffff8bd068e0)
0xffff8bd3b568  code target (STUB)  (0xffff8bd06820)
0xffff8bd3b590  code target (STUB)  (0xffff8bd06260)
0xffff8bd3b59c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd3b5a8  constant pool (size 128)
0xffff8bd3b650  runtime entry
0xffff8bd3b65c  constant pool (size 20)


kind = BINARY_OP_IC
major_key = BinaryOpICWithAllocationSiteStub
ic_state = MONOMORPHIC
extra_ic_state = 8775
type = NORMAL
name = BinaryOpICWithAllocationSiteStub(ADD_CreateAllocationMementos:String*String->String)
compiler = unknown
Instructions (size = 40)
0xffff8bd3b720     0  ldr x2, pc+24 (addr 0x0000ffff8bd3b738)    ;; object: 0x26c04241 <undefined>
0xffff8bd3b724     4  ldr x16, pc+28 (addr 0x0000ffff8bd3b740)    ;; code: STUB, BinaryOpWithAllocationSiteStub, minor: 8775
0xffff8bd3b728     8  br x16
0xffff8bd3b72c    12  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd3b730    16  d63f03e0       constant
0xffff8bd3b734    20  d503201f       constant
0xffff8bd3b738    24  26c04241       constant
0xffff8bd3b73c    28  00000000       constant
0xffff8bd3b740    32  8bd3b220       constant
0xffff8bd3b744    36  0000ffff       constant


RelocInfo (size = 8)
0xffff8bd3b720  embedded object  (0x26c04241 <undefined>)
0xffff8bd3b724  code target (STUB)  (0xffff8bd3b220)
0xffff8bd3b72c  constant pool (size 28)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 285)
0xffff8bd3bc80     0  movz x2, #0xe2c0
0xffff8bd3bc84     4  movk x2, #0x2cb8, lsl #16
0xffff8bd3bc88     8  ldp x3, x0, [x2]
0xffff8bd3bc8c    12  adds x16, x3, #0x40 (64)
0xffff8bd3bc90    16  ccmp x16, x0, #nzCv, lo
0xffff8bd3bc94    20  b.hi #+0x4c (addr 0xffff8bd3bce0)
0xffff8bd3bc98    24  str x16, [x2]
0xffff8bd3bc9c    28  orr x3, x3, #0x1
0xffff8bd3bca0    32  ldr x0, pc+176 (addr 0x0000ffff8bd3bd50)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd3bca4    36  stur x0, [x3, #-1]
0xffff8bd3bca8    40  movz x0, #0x600000000
0xffff8bd3bcac    44  stur x0, [x3, #7]
0xffff8bd3bcb0    48  stur x1, [x3, #15]
0xffff8bd3bcb4    52  stur cp, [x3, #23]
0xffff8bd3bcb8    56  ldr x0, pc+160 (addr 0x0000ffff8bd3bd58)    ;; object: 0x26c04519 <the hole>
0xffff8bd3bcbc    60  stur x0, [x3, #31]
0xffff8bd3bcc0    64  ldur x0, [cp, #39]
0xffff8bd3bcc4    68  stur x0, [x3, #39]
0xffff8bd3bcc8    72  ldr x0, pc+152 (addr 0x0000ffff8bd3bd60)    ;; object: 0x26c04241 <undefined>
0xffff8bd3bccc    76  stur x0, [x3, #47]
0xffff8bd3bcd0    80  ldr x0, pc+152 (addr 0x0000ffff8bd3bd68)    ;; object: 0x26c04241 <undefined>
0xffff8bd3bcd4    84  stur x0, [x3, #55]
0xffff8bd3bcd8    88  mov x0, x3
0xffff8bd3bcdc    92  ret
0xffff8bd3bce0    96  sub csp, jssp, #0x10 (16)
0xffff8bd3bce4   100  stp fp, lr, [jssp, #-16]!
0xffff8bd3bce8   104  movz fp, #0xa00000000
0xffff8bd3bcec   108  sub csp, jssp, #0x8 (8)
0xffff8bd3bcf0   112  str fp, [jssp, #-8]!
0xffff8bd3bcf4   116  add fp, jssp, #0x8 (8)
0xffff8bd3bcf8   120  movz x3, #0x0
0xffff8bd3bcfc   124  mov x16, lr
0xffff8bd3bd00   128  ldr x17, pc+112 (addr 0x0000ffff8bd3bd70)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd3bd04   132  blr x17
0xffff8bd3bd08   136  movz x0, #0x4000000000
0xffff8bd3bd0c   140  movz x10, #0x0
0xffff8bd3bd10   144  sub csp, jssp, #0x10 (16)
0xffff8bd3bd14   148  stp x10, x0, [jssp, #-16]!
0xffff8bd3bd18   152  movz x0, #0x2
0xffff8bd3bd1c   156  movz x1, #0x5b88
0xffff8bd3bd20   160  movk x1, #0xe2, lsl #16
0xffff8bd3bd24   164  ldr x16, pc+84 (addr 0x0000ffff8bd3bd78)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd3bd28   168  blr x16
0xffff8bd3bd2c   172  str x0, [jssp, #24]
0xffff8bd3bd30   176  ldr x16, pc+80 (addr 0x0000ffff8bd3bd80)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd3bd34   180  blr x16
0xffff8bd3bd38   184  ldr lr, [jssp, #16]
0xffff8bd3bd3c   188  ldp xzr, fp, [jssp], #24
0xffff8bd3bd40   192  b #-0xa0 (addr 0xffff8bd3bca0)
0xffff8bd3bd44   196  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd3bd48   200  d63f03e0       constant
0xffff8bd3bd4c   204  d503201f       constant
0xffff8bd3bd50   208  5f506149       constant
0xffff8bd3bd54   212  00000000       constant
0xffff8bd3bd58   216  26c04519       constant
0xffff8bd3bd5c   220  00000000       constant
0xffff8bd3bd60   224  26c04241       constant
0xffff8bd3bd64   228  00000000       constant
0xffff8bd3bd68   232  26c04241       constant
0xffff8bd3bd6c   236  00000000       constant
0xffff8bd3bd70   240  8bd06820       constant
0xffff8bd3bd74   244  0000ffff       constant
0xffff8bd3bd78   248  8bd06260       constant
0xffff8bd3bd7c   252  0000ffff       constant
0xffff8bd3bd80   256  8bd068e0       constant
0xffff8bd3bd84   260  0000ffff       constant


Safepoints (size = 21)
0xffff8bd3bd2c   172  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 13)
0xffff8bd3bca0  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd3bcb8  embedded object  (0x26c04519 <the hole>)
0xffff8bd3bcc8  embedded object  (0x26c04241 <undefined>)
0xffff8bd3bcd0  embedded object  (0x26c04241 <undefined>)
0xffff8bd3bd00  code target (STUB)  (0xffff8bd06820)
0xffff8bd3bd24  code target (STUB)  (0xffff8bd06260)
0xffff8bd3bd30  code target (STUB)  (0xffff8bd068e0)
0xffff8bd3bd44  constant pool (size 68)


kind = KEYED_STORE_IC
major_key = VectorKeyedStoreICTrampolineStub
ic_state = GENERIC
extra_ic_state = STRICT
name = VectorKeyedStoreICTrampolineStub
compiler = unknown
Instructions (size = 384)
0xffff8bd3be00     0  ldur x3, [fp, #-16]
0xffff8bd3be04     4  ldur x3, [x3, #31]
0xffff8bd3be08     8  ldur x3, [x3, #87]
0xffff8bd3be0c    12  add x5, x3, x4, asr #29
0xffff8bd3be10    16  ldur x5, [x5, #15]
0xffff8bd3be14    20  tbz w1, #0, #+0x140 (addr 0xffff8bd3bf54)
0xffff8bd3be18    24  ldur x6, [x1, #-1]
0xffff8bd3be1c    28  ldur x7, [x5, #7]
0xffff8bd3be20    32  cmp x7, x6
0xffff8bd3be24    36  b.ne #+0x14 (addr 0xffff8bd3be38)
0xffff8bd3be28    40  add x5, x3, x4, asr #29
0xffff8bd3be2c    44  ldur x5, [x5, #23]
0xffff8bd3be30    48  add x5, x5, #0x5f (95)
0xffff8bd3be34    52  br x5
0xffff8bd3be38    56  ldur x7, [x5, #-1]
0xffff8bd3be3c    60  ldr x16, [x26, #224]
0xffff8bd3be40    64  cmp x7, x16
0xffff8bd3be44    68  b.ne #+0x68 (addr 0xffff8bd3beac)
0xffff8bd3be48    72  ldur x8, [x5, #7]
0xffff8bd3be4c    76  add x8, x5, x8, asr #29
0xffff8bd3be50    80  add x8, x8, #0xf (15)
0xffff8bd3be54    84  add x5, x5, #0xf (15)
0xffff8bd3be58    88  ldr x7, [x5]
0xffff8bd3be5c    92  ldur x7, [x7, #7]
0xffff8bd3be60    96  cmp x6, x7
0xffff8bd3be64   100  b.ne #+0x38 (addr 0xffff8bd3be9c)
0xffff8bd3be68   104  ldr x8, [x5, #8]
0xffff8bd3be6c   108  ldr x16, [x26, #40]
0xffff8bd3be70   112  cmp x8, x16
0xffff8bd3be74   116  b.ne #+0x10 (addr 0xffff8bd3be84)
0xffff8bd3be78   120  ldr x5, [x5, #16]
0xffff8bd3be7c   124  add x5, x5, #0x5f (95)
0xffff8bd3be80   128  br x5
0xffff8bd3be84   132  ldur x8, [x8, #7]
0xffff8bd3be88   136  tbz w8, #0, #+0xac (addr 0xffff8bd3bf34)
0xffff8bd3be8c   140  ldr x6, [x5, #16]
0xffff8bd3be90   144  mov x5, x8
0xffff8bd3be94   148  add x6, x6, #0x5f (95)
0xffff8bd3be98   152  br x6
0xffff8bd3be9c   156  add x5, x5, #0x18 (24)
0xffff8bd3bea0   160  cmp x5, x8
0xffff8bd3bea4   164  b.lt #-0x4c (addr 0xffff8bd3be58)
0xffff8bd3bea8   168  b #+0x8c (addr 0xffff8bd3bf34)
0xffff8bd3beac   172  ldr x16, [x26, #2400]
0xffff8bd3beb0   176  cmp x5, x16
0xffff8bd3beb4   180  b.ne #+0xc (addr 0xffff8bd3bec0)
0xffff8bd3beb8   184  ldr x16, pc+176 (addr 0x0000ffff8bd3bf68)    ;; code: KEYED_STORE_IC, MEGAMORPHIC
0xffff8bd3bebc   188  br x16
0xffff8bd3bec0   192  cmp x2, x5
0xffff8bd3bec4   196  b.ne #+0x70 (addr 0xffff8bd3bf34)
0xffff8bd3bec8   200  add x5, x3, x4, asr #29
0xffff8bd3becc   204  ldur x5, [x5, #23]
0xffff8bd3bed0   208  ldur x7, [x5, #15]
0xffff8bd3bed4   212  ldur x7, [x7, #7]
0xffff8bd3bed8   216  cmp x6, x7
0xffff8bd3bedc   220  b.ne #+0x10 (addr 0xffff8bd3beec)
0xffff8bd3bee0   224  ldur x5, [x5, #23]
0xffff8bd3bee4   228  add x5, x5, #0x5f (95)
0xffff8bd3bee8   232  br x5
0xffff8bd3beec   236  ldur x8, [x5, #7]
0xffff8bd3bef0   240  movz x16, #0x200000000
0xffff8bd3bef4   244  cmp x8, x16
0xffff8bd3bef8   248  b.eq #+0x3c (addr 0xffff8bd3bf34)
0xffff8bd3befc   252  add x8, x5, x8, asr #29
0xffff8bd3bf00   256  add x8, x8, #0xf (15)
0xffff8bd3bf04   260  add x5, x5, #0x1f (31)
0xffff8bd3bf08   264  ldr x7, [x5]
0xffff8bd3bf0c   268  ldur x7, [x7, #7]
0xffff8bd3bf10   272  cmp x6, x7
0xffff8bd3bf14   276  b.ne #+0x10 (addr 0xffff8bd3bf24)
0xffff8bd3bf18   280  ldr x5, [x5, #8]
0xffff8bd3bf1c   284  add x5, x5, #0x5f (95)
0xffff8bd3bf20   288  br x5
0xffff8bd3bf24   292  add x5, x5, #0x10 (16)
0xffff8bd3bf28   296  cmp x5, x8
0xffff8bd3bf2c   300  b.lt #-0x24 (addr 0xffff8bd3bf08)
0xffff8bd3bf30   304  b #+0x4 (addr 0xffff8bd3bf34)
0xffff8bd3bf34   308  sub csp, jssp, #0x28 (40)
0xffff8bd3bf38   312  stp x4, x0, [jssp, #-32]!
0xffff8bd3bf3c   316  stp x2, x1, [jssp, #16]
0xffff8bd3bf40   320  str x3, [jssp, #-8]!
0xffff8bd3bf44   324  movz x0, #0x5
0xffff8bd3bf48   328  ldr x1, pc+40 (addr 0x0000ffff8bd3bf70)    ;; external reference (Runtime::KeyedStoreIC_Miss)
0xffff8bd3bf4c   332  ldr x16, pc+44 (addr 0x0000ffff8bd3bf78)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd3bf50   336  br x16
0xffff8bd3bf54   340  ldr x6, [x26, #120]
0xffff8bd3bf58   344  b #-0x13c (addr 0xffff8bd3be1c)
0xffff8bd3bf5c   348  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd3bf60   352  d63f03e0       constant
0xffff8bd3bf64   356  d503201f       constant
0xffff8bd3bf68   360  8bd263a0       constant
0xffff8bd3bf6c   364  0000ffff       constant
0xffff8bd3bf70   368  00c88e08       constant
0xffff8bd3bf74   372  00000000       constant
0xffff8bd3bf78   376  8bd06060       constant
0xffff8bd3bf7c   380  0000ffff       constant


RelocInfo (size = 14)
0xffff8bd3beb8  code target (KEYED_STORE_IC)  (0xffff8bd263a0)
0xffff8bd3bf48  external reference (Runtime::KeyedStoreIC_Miss)  (0xc88e08)
0xffff8bd3bf4c  code target (STUB)  (0xffff8bd06060)
0xffff8bd3bf5c  constant pool (size 36)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd3cc20     0  ldur x0, [x1, #7]
0xffff8bd3cc24     4  movz x16, #0x1bf
0xffff8bd3cc28     8  ldr x0, [x0, x16]
0xffff8bd3cc2c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd3cca0     0  ldur x0, [x1, #7]
0xffff8bd3cca4     4  movz x16, #0x1c7
0xffff8bd3cca8     8  ldr x0, [x0, x16]
0xffff8bd3ccac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd3cd20     0  ldur x0, [x1, #7]
0xffff8bd3cd24     4  movz x16, #0x17f
0xffff8bd3cd28     8  ldr x0, [x0, x16]
0xffff8bd3cd2c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd3cda0     0  ldur x0, [x1, #7]
0xffff8bd3cda4     4  movz x16, #0x1af
0xffff8bd3cda8     8  ldr x0, [x0, x16]
0xffff8bd3cdac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd3ce20     0  ldur x0, [x1, #7]
0xffff8bd3ce24     4  movz x16, #0x1b7
0xffff8bd3ce28     8  ldr x0, [x0, x16]
0xffff8bd3ce2c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 88)
0xffff8bd3cea0     0  stur x5, [x1, #-1]
0xffff8bd3cea4     4  tbz w5, #0, #+0x34 (addr 0xffff8bd3ced8)
0xffff8bd3cea8     8  sub x2, x1, #0x1 (1)
0xffff8bd3ceac    12  and x5, x5, #0xfffffffffff00000
0xffff8bd3ceb0    16  ldr x5, [x5, #8]
0xffff8bd3ceb4    20  tbz w5, #1, #+0x24 (addr 0xffff8bd3ced8)
0xffff8bd3ceb8    24  and x5, x1, #0xfffffffffff00000
0xffff8bd3cebc    28  ldr x5, [x5, #8]
0xffff8bd3cec0    32  tbz w5, #2, #+0x18 (addr 0xffff8bd3ced8)
0xffff8bd3cec4    36  sub csp, jssp, #0x8 (8)
0xffff8bd3cec8    40  str lr, [jssp, #-8]!
0xffff8bd3cecc    44  ldr x16, pc+28 (addr 0x0000ffff8bd3cee8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd3ced0    48  blr x16
0xffff8bd3ced4    52  ldr lr, [jssp], #8
0xffff8bd3ced8    56  ret
0xffff8bd3cedc    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd3cee0    64  d63f03e0       constant
0xffff8bd3cee4    68  d503201f       constant
0xffff8bd3cee8    72  8bd38080       constant
0xffff8bd3ceec    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 7)
0xffff8bd3cecc  code target (STUB)  (0xffff8bd38080)
0xffff8bd3cedc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 168)
0xffff8bd3cf60     0  sub csp, jssp, #0x8 (8)
0xffff8bd3cf64     4  str x3, [jssp, #-8]!
0xffff8bd3cf68     8  sub csp, jssp, #0x8 (8)
0xffff8bd3cf6c    12  str x4, [jssp, #-8]!
0xffff8bd3cf70    16  ldr x3, pc+104 (addr 0x0000ffff8bd3cfd8)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bd3cf74    20  ldur x3, [x3, #7]
0xffff8bd3cf78    24  cmp x3, #0x0 (0)
0xffff8bd3cf7c    28  b.ne #+0x3c (addr 0xffff8bd3cfb8)
0xffff8bd3cf80    32  ldr x5, pc+96 (addr 0x0000ffff8bd3cfe0)    ;; object: 0x26c5b101 WeakCell for 0x5f50c6b1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd3cf84    36  ldur x5, [x5, #7]
0xffff8bd3cf88    40  tbz w5, #0, #+0x30 (addr 0xffff8bd3cfb8)
0xffff8bd3cf8c    44  ldursw x4, [x5, #15]
0xffff8bd3cf90    48  tbnz w4, #23, #+0x28 (addr 0xffff8bd3cfb8)
0xffff8bd3cf94    52  ldur x4, [x5, #47]
0xffff8bd3cf98    56  ldur x4, [x4, #119]
0xffff8bd3cf9c    60  cmp x0, x4
0xffff8bd3cfa0    64  b.ne #+0x18 (addr 0xffff8bd3cfb8)
0xffff8bd3cfa4    68  ldr x4, [jssp], #8
0xffff8bd3cfa8    72  ldr x3, [jssp], #8
0xffff8bd3cfac    76  ldr x2, pc+60 (addr 0x0000ffff8bd3cfe8)    ;; object: 0x26c05209 <String[4]: next>
0xffff8bd3cfb0    80  ldr x16, pc+64 (addr 0x0000ffff8bd3cff0)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff8bd3cfb4    84  br x16
0xffff8bd3cfb8    88  ldr x2, pc+64 (addr 0x0000ffff8bd3cff8)    ;; object: 0x26c05209 <String[4]: next>
0xffff8bd3cfbc    92  ldr x4, [jssp], #8
0xffff8bd3cfc0    96  ldr x3, [jssp], #8
0xffff8bd3cfc4   100  ldr x16, pc+60 (addr 0x0000ffff8bd3d000)    ;; code: BUILTIN
0xffff8bd3cfc8   104  br x16
0xffff8bd3cfcc   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bd3cfd0   112  d63f03e0       constant
0xffff8bd3cfd4   116  d503201f       constant
0xffff8bd3cfd8   120  26c5b0f1       constant
0xffff8bd3cfdc   124  00000000       constant
0xffff8bd3cfe0   128  26c5b101       constant
0xffff8bd3cfe4   132  00000000       constant
0xffff8bd3cfe8   136  26c05209       constant
0xffff8bd3cfec   140  00000000       constant
0xffff8bd3cff0   144  8bd3cea0       constant
0xffff8bd3cff4   148  0000ffff       constant
0xffff8bd3cff8   152  26c05209       constant
0xffff8bd3cffc   156  00000000       constant
0xffff8bd3d000   160  8bd22420       constant
0xffff8bd3d004   164  0000ffff       constant


RelocInfo (size = 12)
0xffff8bd3cf70  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bd3cf80  embedded object  (0x26c5b101 WeakCell for 0x5f50c6b1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd3cfac  embedded object  (0x26c05209 <String[4]: next>)
0xffff8bd3cfb0  code target (HANDLER)  (0xffff8bd3cea0)
0xffff8bd3cfb8  embedded object  (0x26c05209 <String[4]: next>)
0xffff8bd3cfc4  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd3cfcc  constant pool (size 60)

kind = STUB
major_key = FastCloneShallowObjectStub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 509)
0xffff8bd3d320     0  ldur x4, [x3, #47]
0xffff8bd3d324     4  tbnz w2, #0, #+0xc0 (addr 0xffff8bd3d3e4)
0xffff8bd3d328     8  asr x6, x2, #32
0xffff8bd3d32c    12  add x5, x4, #0x17 (23)
0xffff8bd3d330    16  ldr x7, [x5, w6, sxtw #3]
0xffff8bd3d334    20  ldr x4, pc+356 (addr 0x0000ffff8bd3d498)    ;; object: 0x26c04241 <undefined>
0xffff8bd3d338    24  cmp x7, x4
0xffff8bd3d33c    28  b.eq #+0xa4 (addr 0xffff8bd3d3e0)
0xffff8bd3d340    32  ldur x4, [x7, #7]
0xffff8bd3d344    36  ldur x5, [x4, #-1]
0xffff8bd3d348    40  ldrb w6, [x5, #7]
0xffff8bd3d34c    44  cmp w6, #0x9 (9)
0xffff8bd3d350    48  b.ne #+0x90 (addr 0xffff8bd3d3e0)
0xffff8bd3d354    52  movz x1, #0xe2c0
0xffff8bd3d358    56  movk x1, #0x2cb8, lsl #16
0xffff8bd3d35c    60  ldp x2, x0, [x1]
0xffff8bd3d360    64  adds x16, x2, #0x58 (88)
0xffff8bd3d364    68  ccmp x16, x0, #nzCv, lo
0xffff8bd3d368    72  b.hi #+0xc4 (addr 0xffff8bd3d42c)
0xffff8bd3d36c    76  str x16, [x1]
0xffff8bd3d370    80  orr x2, x2, #0x1
0xffff8bd3d374    84  stur x5, [x2, #-1]
0xffff8bd3d378    88  ldur x0, [x4, #7]
0xffff8bd3d37c    92  stur x0, [x2, #7]
0xffff8bd3d380    96  ldur x0, [x4, #15]
0xffff8bd3d384   100  stur x0, [x2, #15]
0xffff8bd3d388   104  ldur x0, [x4, #23]
0xffff8bd3d38c   108  stur x0, [x2, #23]
0xffff8bd3d390   112  ldur x0, [x4, #31]
0xffff8bd3d394   116  stur x0, [x2, #31]
0xffff8bd3d398   120  ldur x0, [x4, #39]
0xffff8bd3d39c   124  stur x0, [x2, #39]
0xffff8bd3d3a0   128  ldur x0, [x4, #47]
0xffff8bd3d3a4   132  stur x0, [x2, #47]
0xffff8bd3d3a8   136  ldur x0, [x4, #55]
0xffff8bd3d3ac   140  stur x0, [x2, #55]
0xffff8bd3d3b0   144  ldur x0, [x4, #63]
0xffff8bd3d3b4   148  stur x0, [x2, #63]
0xffff8bd3d3b8   152  add x0, x2, #0x48 (72)
0xffff8bd3d3bc   156  ldr x1, pc+228 (addr 0x0000ffff8bd3d4a0)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd3d3c0   160  stur x1, [x0, #-1]
0xffff8bd3d3c4   164  stur x7, [x0, #7]
0xffff8bd3d3c8   168  ldur w0, [x7, #35]
0xffff8bd3d3cc   172  add w0, w0, #0x1 (1)
0xffff8bd3d3d0   176  lsl x0, x0, #32
0xffff8bd3d3d4   180  stur x0, [x7, #31]
0xffff8bd3d3d8   184  mov x0, x2
0xffff8bd3d3dc   188  ret
0xffff8bd3d3e0   192  b #+0xe0 (addr 0xffff8bd3d4c0)
0xffff8bd3d3e4   196  sub csp, jssp, #0x10 (16)
0xffff8bd3d3e8   200  stp fp, lr, [jssp, #-16]!
0xffff8bd3d3ec   204  movz fp, #0xa00000000
0xffff8bd3d3f0   208  sub csp, jssp, #0x8 (8)
0xffff8bd3d3f4   212  str fp, [jssp, #-8]!
0xffff8bd3d3f8   216  add fp, jssp, #0x8 (8)
0xffff8bd3d3fc   220  ldur x16, [x2, #-1]
0xffff8bd3d400   224  ldr x17, [x26, #120]
0xffff8bd3d404   228  cmp x16, x17
0xffff8bd3d408   232  b.ne #+0xc8 (addr 0xffff8bd3d4d0)
0xffff8bd3d40c   236  ldur d29, [x2, #7]
0xffff8bd3d410   240  fcvtzs w6, d29
0xffff8bd3d414   244  scvtf d0, w6
0xffff8bd3d418   248  fcmp d29, d0
0xffff8bd3d41c   252  b.ne #+0xb4 (addr 0xffff8bd3d4d0)
0xffff8bd3d420   256  ldr lr, [jssp, #16]
0xffff8bd3d424   260  ldp xzr, fp, [jssp], #24
0xffff8bd3d428   264  b #-0xfc (addr 0xffff8bd3d32c)
0xffff8bd3d42c   268  sub csp, jssp, #0x10 (16)
0xffff8bd3d430   272  stp fp, lr, [jssp, #-16]!
0xffff8bd3d434   276  movz fp, #0xa00000000
0xffff8bd3d438   280  sub csp, jssp, #0x8 (8)
0xffff8bd3d43c   284  str fp, [jssp, #-8]!
0xffff8bd3d440   288  add fp, jssp, #0x8 (8)
0xffff8bd3d444   292  movz x2, #0x0
0xffff8bd3d448   296  mov x16, lr
0xffff8bd3d44c   300  ldr x17, pc+92 (addr 0x0000ffff8bd3d4a8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd3d450   304  blr x17
0xffff8bd3d454   308  movz x0, #0x5800000000
0xffff8bd3d458   312  movz x10, #0x0
0xffff8bd3d45c   316  sub csp, jssp, #0x10 (16)
0xffff8bd3d460   320  stp x10, x0, [jssp, #-16]!
0xffff8bd3d464   324  movz x0, #0x2
0xffff8bd3d468   328  movz x1, #0x5b88
0xffff8bd3d46c   332  movk x1, #0xe2, lsl #16
0xffff8bd3d470   336  ldr x16, pc+64 (addr 0x0000ffff8bd3d4b0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd3d474   340  blr x16
0xffff8bd3d478   344  str x0, [jssp, #16]
0xffff8bd3d47c   348  ldr x16, pc+60 (addr 0x0000ffff8bd3d4b8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd3d480   352  blr x16
0xffff8bd3d484   356  ldr lr, [jssp, #16]
0xffff8bd3d488   360  ldp xzr, fp, [jssp], #24
0xffff8bd3d48c   364  b #-0x118 (addr 0xffff8bd3d374)
0xffff8bd3d490   368  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff8bd3d494   372  d63f03e0       constant
0xffff8bd3d498   376  26c04241       constant
0xffff8bd3d49c   380  00000000       constant
0xffff8bd3d4a0   384  5f505d81       constant
0xffff8bd3d4a4   388  00000000       constant
0xffff8bd3d4a8   392  8bd06820       constant
0xffff8bd3d4ac   396  0000ffff       constant
0xffff8bd3d4b0   400  8bd06260       constant
0xffff8bd3d4b4   404  0000ffff       constant
0xffff8bd3d4b8   408  8bd068e0       constant
0xffff8bd3d4bc   412  0000ffff       constant
0xffff8bd3d4c0   416  movz x16, #0x0
0xffff8bd3d4c4   420  sub csp, jssp, #0x10 (16)
0xffff8bd3d4c8   424  stp fp, lr, [jssp, #-16]!
0xffff8bd3d4cc   428  bl #+0xc (addr 0xffff8bd3d4d8)
0xffff8bd3d4d0   432  movz x16, #0x8
0xffff8bd3d4d4   436  bl #+0x14 (addr 0xffff8bd3d4e8)
0xffff8bd3d4d8   440  movz x17, #0xa00000000
0xffff8bd3d4dc   444  sub csp, jssp, #0x10 (16)
0xffff8bd3d4e0   448  stp x17, cp, [jssp, #-16]!
0xffff8bd3d4e4   452  add fp, jssp, #0x10 (16)
0xffff8bd3d4e8   456  ldr x17, pc+24 (addr 0x0000ffff8bd3d500)    ;; lazy deoptimization bailout 0
0xffff8bd3d4ec   460  add x17, x17, x16
0xffff8bd3d4f0   464  br x17
0xffff8bd3d4f4   468  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd3d4f8   472  d63f03e0       constant
0xffff8bd3d4fc   476  d503201f       constant
0xffff8bd3d500   480  8bb06000       constant
0xffff8bd3d504   484  0000ffff       constant


Safepoints (size = 21)
0xffff8bd3d478   344  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff8bd3d334  embedded object  (0x26c04241 <undefined>)
0xffff8bd3d3bc  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd3d44c  code target (STUB)  (0xffff8bd06820)
0xffff8bd3d470  code target (STUB)  (0xffff8bd06260)
0xffff8bd3d47c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd3d490  constant pool (size 48)
0xffff8bd3d4e8  runtime entry
0xffff8bd3d4f4  constant pool (size 20)


kind = STUB
major_key = ArrayConstructorStub
name = ArrayConstructorStub_None
compiler = unknown
Instructions (size = 288)
0xffff8bd3d580     0  ldur cp, [x1, #39]
0xffff8bd3d584     4  cmp x3, x1
0xffff8bd3d588     8  b.ne #+0x98 (addr 0xffff8bd3d620)
0xffff8bd3d58c    12  ldr x16, [x26, #40]
0xffff8bd3d590    16  cmp x2, x16
0xffff8bd3d594    20  b.eq #+0x84 (addr 0xffff8bd3d618)
0xffff8bd3d598    24  ldursw x3, [x2, #11]
0xffff8bd3d59c    28  and x3, x3, #0x7fff
0xffff8bd3d5a0    32  cbnz x3, #+0xc (addr 0xffff8bd3d5ac)
0xffff8bd3d5a4    36  ldr x16, pc+164 (addr 0x0000ffff8bd3d648)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 0
0xffff8bd3d5a8    40  br x16
0xffff8bd3d5ac    44  cmp x3, #0x1 (1)
0xffff8bd3d5b0    48  b.ne #+0xc (addr 0xffff8bd3d5bc)
0xffff8bd3d5b4    52  ldr x16, pc+156 (addr 0x0000ffff8bd3d650)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 1
0xffff8bd3d5b8    56  br x16
0xffff8bd3d5bc    60  cmp x3, #0x4 (4)
0xffff8bd3d5c0    64  b.ne #+0xc (addr 0xffff8bd3d5cc)
0xffff8bd3d5c4    68  ldr x16, pc+148 (addr 0x0000ffff8bd3d658)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 4
0xffff8bd3d5c8    72  br x16
0xffff8bd3d5cc    76  cmp x3, #0x5 (5)
0xffff8bd3d5d0    80  b.ne #+0xc (addr 0xffff8bd3d5dc)
0xffff8bd3d5d4    84  ldr x16, pc+140 (addr 0x0000ffff8bd3d660)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 5
0xffff8bd3d5d8    88  br x16
0xffff8bd3d5dc    92  cmp x3, #0x2 (2)
0xffff8bd3d5e0    96  b.ne #+0xc (addr 0xffff8bd3d5ec)
0xffff8bd3d5e4   100  ldr x16, pc+132 (addr 0x0000ffff8bd3d668)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 2
0xffff8bd3d5e8   104  br x16
0xffff8bd3d5ec   108  cmp x3, #0x3 (3)
0xffff8bd3d5f0   112  b.ne #+0xc (addr 0xffff8bd3d5fc)
0xffff8bd3d5f4   116  ldr x16, pc+124 (addr 0x0000ffff8bd3d670)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 3
0xffff8bd3d5f8   120  br x16
0xffff8bd3d5fc   124  movz x0, #0x9f00000000
0xffff8bd3d600   128  sub csp, jssp, #0x8 (8)
0xffff8bd3d604   132  str x0, [jssp, #-8]!
0xffff8bd3d608   136  movz x0, #0x1
0xffff8bd3d60c   140  ldr x1, pc+108 (addr 0x0000ffff8bd3d678)    ;; external reference (Runtime::Abort)
0xffff8bd3d610   144  ldr x16, pc+112 (addr 0x0000ffff8bd3d680)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd3d614   148  blr x16
0xffff8bd3d618   152  ldr x16, pc+112 (addr 0x0000ffff8bd3d688)    ;; code: STUB, ArrayNoArgumentConstructorStub, minor: 256
0xffff8bd3d61c   156  br x16
0xffff8bd3d620   160  str x1, [jssp]
0xffff8bd3d624   164  movz x0, #0x3
0xffff8bd3d628   168  sub csp, jssp, #0x10 (16)
0xffff8bd3d62c   172  stp x2, x3, [jssp, #-16]!
0xffff8bd3d630   176  ldr x1, pc+96 (addr 0x0000ffff8bd3d690)    ;; external reference (Runtime::NewArray)
0xffff8bd3d634   180  ldr x16, pc+100 (addr 0x0000ffff8bd3d698)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd3d638   184  br x16
0xffff8bd3d63c   188  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff8bd3d640   192  d63f03e0       constant
0xffff8bd3d644   196  d503201f       constant
0xffff8bd3d648   200  8bd069a0       constant
0xffff8bd3d64c   204  0000ffff       constant
0xffff8bd3d650   208  8bd06e00       constant
0xffff8bd3d654   212  0000ffff       constant
0xffff8bd3d658   216  8bd07280       constant
0xffff8bd3d65c   220  0000ffff       constant
0xffff8bd3d660   224  8bd07480       constant
0xffff8bd3d664   228  0000ffff       constant
0xffff8bd3d668   232  8bd07680       constant
0xffff8bd3d66c   236  0000ffff       constant
0xffff8bd3d670   240  8bd078a0       constant
0xffff8bd3d674   244  0000ffff       constant
0xffff8bd3d678   248  00eda820       constant
0xffff8bd3d67c   252  00000000       constant
0xffff8bd3d680   256  8bd06060       constant
0xffff8bd3d684   260  0000ffff       constant
0xffff8bd3d688   264  8bd06be0       constant
0xffff8bd3d68c   268  0000ffff       constant
0xffff8bd3d690   272  00de2850       constant
0xffff8bd3d694   276  00000000       constant
0xffff8bd3d698   280  8bd06060       constant
0xffff8bd3d69c   284  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd3d5a4  code target (STUB)  (0xffff8bd069a0)
0xffff8bd3d5b4  code target (STUB)  (0xffff8bd06e00)
0xffff8bd3d5c4  code target (STUB)  (0xffff8bd07280)
0xffff8bd3d5d4  code target (STUB)  (0xffff8bd07480)
0xffff8bd3d5e4  code target (STUB)  (0xffff8bd07680)
0xffff8bd3d5f4  code target (STUB)  (0xffff8bd078a0)
0xffff8bd3d60c  external reference (Runtime::Abort)  (0xeda820)
0xffff8bd3d610  code target (STUB)  (0xffff8bd06060)
0xffff8bd3d618  code target (STUB)  (0xffff8bd06be0)
0xffff8bd3d630  external reference (Runtime::NewArray)  (0xde2850)
0xffff8bd3d634  code target (STUB)  (0xffff8bd06060)
0xffff8bd3d63c  constant pool (size 100)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393216
name = CallICStub(args(0), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff8bd3d700     0  add x4, x2, x3, asr #29
0xffff8bd3d704     4  ldur x4, [x4, #15]
0xffff8bd3d708     8  ldur x5, [x4, #7]
0xffff8bd3d70c    12  cmp x5, x1
0xffff8bd3d710    16  b.ne #+0x2c (addr 0xffff8bd3d73c)
0xffff8bd3d714    20  tbz w1, #0, #+0x28 (addr 0xffff8bd3d73c)
0xffff8bd3d718    24  add x2, x2, x3, asr #29
0xffff8bd3d71c    28  add x2, x2, #0x18 (24)
0xffff8bd3d720    32  ldur x3, [x2, #-1]
0xffff8bd3d724    36  movz x16, #0x200000000
0xffff8bd3d728    40  add x3, x3, x16
0xffff8bd3d72c    44  stur x3, [x2, #-1]
0xffff8bd3d730    48  movz x0, #0x0
0xffff8bd3d734    52  ldr x16, pc+372 (addr 0x0000ffff8bd3d8a8)    ;; code: BUILTIN
0xffff8bd3d738    56  br x16
0xffff8bd3d73c    60  ldr x16, [x26, #2400]
0xffff8bd3d740    64  cmp x4, x16
0xffff8bd3d744    68  b.eq #+0x78 (addr 0xffff8bd3d7bc)
0xffff8bd3d748    72  ldur x5, [x4, #-1]
0xffff8bd3d74c    76  ldr x16, [x26, #2736]
0xffff8bd3d750    80  cmp x5, x16
0xffff8bd3d754    84  b.ne #+0x40 (addr 0xffff8bd3d794)
0xffff8bd3d758    88  ldur x5, [cp, #39]
0xffff8bd3d75c    92  ldur x5, [x5, #95]
0xffff8bd3d760    96  cmp x1, x5
0xffff8bd3d764   100  b.ne #+0xec (addr 0xffff8bd3d850)
0xffff8bd3d768   104  movz x0, #0x0
0xffff8bd3d76c   108  add x2, x2, x3, asr #29
0xffff8bd3d770   112  add x2, x2, #0x18 (24)
0xffff8bd3d774   116  ldur x3, [x2, #-1]
0xffff8bd3d778   120  movz x16, #0x200000000
0xffff8bd3d77c   124  add x3, x3, x16
0xffff8bd3d780   128  stur x3, [x2, #-1]
0xffff8bd3d784   132  mov x2, x4
0xffff8bd3d788   136  mov x3, x1
0xffff8bd3d78c   140  ldr x16, pc+292 (addr 0x0000ffff8bd3d8b0)    ;; code: STUB, ArrayConstructorStub, minor: 1
0xffff8bd3d790   144  br x16
0xffff8bd3d794   148  ldr x16, [x26, #2568]
0xffff8bd3d798   152  cmp x4, x16
0xffff8bd3d79c   156  b.eq #+0xb4 (addr 0xffff8bd3d850)
0xffff8bd3d7a0   160  ldur x5, [x4, #-1]
0xffff8bd3d7a4   164  ldrb w5, [x5, #11]
0xffff8bd3d7a8   168  cmp x5, #0xc9 (201)
0xffff8bd3d7ac   172  b.ne #+0xa4 (addr 0xffff8bd3d850)
0xffff8bd3d7b0   176  add x4, x2, x3, asr #29
0xffff8bd3d7b4   180  ldr x5, [x26, #2400]
0xffff8bd3d7b8   184  stur x5, [x4, #15]
0xffff8bd3d7bc   188  movz x0, #0x0
0xffff8bd3d7c0   192  ldr x16, pc+248 (addr 0x0000ffff8bd3d8b8)    ;; code: BUILTIN
0xffff8bd3d7c4   196  br x16
0xffff8bd3d7c8   200  tbz w1, #0, #+0x88 (addr 0xffff8bd3d850)
0xffff8bd3d7cc   204  ldur x5, [x1, #-1]
0xffff8bd3d7d0   208  ldrb w5, [x5, #11]
0xffff8bd3d7d4   212  cmp x5, #0xc9 (201)
0xffff8bd3d7d8   216  b.ne #+0x78 (addr 0xffff8bd3d850)
0xffff8bd3d7dc   220  ldur x5, [cp, #39]
0xffff8bd3d7e0   224  ldur x5, [x5, #95]
0xffff8bd3d7e4   228  cmp x1, x5
0xffff8bd3d7e8   232  b.eq #+0x68 (addr 0xffff8bd3d850)
0xffff8bd3d7ec   236  ldur x4, [x1, #39]
0xffff8bd3d7f0   240  ldur x4, [x4, #39]
0xffff8bd3d7f4   244  ldur x5, [cp, #39]
0xffff8bd3d7f8   248  cmp x4, x5
0xffff8bd3d7fc   252  b.ne #+0x54 (addr 0xffff8bd3d850)
0xffff8bd3d800   256  movz x5, #0x200000000
0xffff8bd3d804   260  adds x4, x2, x3, asr #29
0xffff8bd3d808   264  stur x5, [x4, #23]
0xffff8bd3d80c   268  movz x16, #0xc00000000
0xffff8bd3d810   272  sub csp, jssp, #0x10 (16)
0xffff8bd3d814   276  stp fp, lr, [jssp, #-16]!
0xffff8bd3d818   280  sub csp, jssp, #0x10 (16)
0xffff8bd3d81c   284  str x16, [jssp, #-8]!
0xffff8bd3d820   288  ldr x17, pc+160 (addr 0x0000ffff8bd3d8c0)    ;; object: 0xffff8bd3d6a1 <Code: CALL_IC>
0xffff8bd3d824   292  sub csp, jssp, #0x10 (16)
0xffff8bd3d828   296  str x17, [jssp, #-8]!
0xffff8bd3d82c   300  add fp, jssp, #0x10 (16)
0xffff8bd3d830   304  sub csp, jssp, #0x8 (8)
0xffff8bd3d834   308  str x1, [jssp, #-8]!
0xffff8bd3d838   312  ldr x16, pc+144 (addr 0x0000ffff8bd3d8c8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bd3d83c   316  blr x16
0xffff8bd3d840   320  ldr x1, [jssp], #8
0xffff8bd3d844   324  mov jssp, fp
0xffff8bd3d848   328  ldp fp, lr, [jssp], #16
0xffff8bd3d84c   332  b #-0x11c (addr 0xffff8bd3d730)
0xffff8bd3d850   336  movz x16, #0xc00000000
0xffff8bd3d854   340  sub csp, jssp, #0x10 (16)
0xffff8bd3d858   344  stp fp, lr, [jssp, #-16]!
0xffff8bd3d85c   348  sub csp, jssp, #0x10 (16)
0xffff8bd3d860   352  str x16, [jssp, #-8]!
0xffff8bd3d864   356  ldr x17, pc+108 (addr 0x0000ffff8bd3d8d0)    ;; object: 0xffff8bd3d6a1 <Code: CALL_IC>
0xffff8bd3d868   360  sub csp, jssp, #0x10 (16)
0xffff8bd3d86c   364  str x17, [jssp, #-8]!
0xffff8bd3d870   368  add fp, jssp, #0x10 (16)
0xffff8bd3d874   372  sub csp, jssp, #0x18 (24)
0xffff8bd3d878   376  stp x3, x2, [jssp, #-24]!
0xffff8bd3d87c   380  str x1, [jssp, #16]
0xffff8bd3d880   384  movz x0, #0x3
0xffff8bd3d884   388  ldr x1, pc+84 (addr 0x0000ffff8bd3d8d8)    ;; external reference (Runtime::CallIC_Miss)
0xffff8bd3d888   392  ldr x16, pc+88 (addr 0x0000ffff8bd3d8e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd3d88c   396  blr x16
0xffff8bd3d890   400  mov x1, x0
0xffff8bd3d894   404  mov jssp, fp
0xffff8bd3d898   408  ldp fp, lr, [jssp], #16
0xffff8bd3d89c   412  b #-0xe0 (addr 0xffff8bd3d7bc)
0xffff8bd3d8a0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bd3d8a4   420  d63f03e0       constant
0xffff8bd3d8a8   424  8bd1e820       constant
0xffff8bd3d8ac   428  0000ffff       constant
0xffff8bd3d8b0   432  8bd3d580       constant
0xffff8bd3d8b4   436  0000ffff       constant
0xffff8bd3d8b8   440  8bd1f820       constant
0xffff8bd3d8bc   444  0000ffff       constant
0xffff8bd3d8c0   448  8bd3d6a1       constant
0xffff8bd3d8c4   452  0000ffff       constant
0xffff8bd3d8c8   456  8bd0ddc0       constant
0xffff8bd3d8cc   460  0000ffff       constant
0xffff8bd3d8d0   464  8bd3d6a1       constant
0xffff8bd3d8d4   468  0000ffff       constant
0xffff8bd3d8d8   472  00c86928       constant
0xffff8bd3d8dc   476  00000000       constant
0xffff8bd3d8e0   480  8bd06060       constant
0xffff8bd3d8e4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd3d734  code target (BUILTIN)  (0xffff8bd1e820)
0xffff8bd3d78c  code target (STUB)  (0xffff8bd3d580)
0xffff8bd3d7c0  code target (BUILTIN)  (0xffff8bd1f820)
0xffff8bd3d820  embedded object  (0xffff8bd3d6a1 <Code: CALL_IC>)
0xffff8bd3d838  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bd3d864  embedded object  (0xffff8bd3d6a1 <Code: CALL_IC>)
0xffff8bd3d884  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8bd3d888  code target (STUB)  (0xffff8bd06060)
0xffff8bd3d8a0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393216
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8bd3d960     0  ldur x2, [fp, #-16]
0xffff8bd3d964     4  ldur x2, [x2, #31]
0xffff8bd3d968     8  ldur x2, [x2, #87]
0xffff8bd3d96c    12  ldr x16, pc+20 (addr 0x0000ffff8bd3d980)    ;; code: CALL_IC, GENERIC
0xffff8bd3d970    16  br x16
0xffff8bd3d974    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd3d978    24  d63f03e0       constant
0xffff8bd3d97c    28  d503201f       constant
0xffff8bd3d980    32  8bd3d700       constant
0xffff8bd3d984    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd3d96c  code target (CALL_IC)  (0xffff8bd3d700)
0xffff8bd3d974  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff8bd411c0     0  sub csp, jssp, #0x8 (8)
0xffff8bd411c4     4  str x3, [jssp, #-8]!
0xffff8bd411c8     8  sub csp, jssp, #0x8 (8)
0xffff8bd411cc    12  str x4, [jssp, #-8]!
0xffff8bd411d0    16  ldr x3, pc+88 (addr 0x0000ffff8bd41228)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bd411d4    20  ldur x3, [x3, #7]
0xffff8bd411d8    24  cmp x3, #0x0 (0)
0xffff8bd411dc    28  b.ne #+0x30 (addr 0xffff8bd4120c)
0xffff8bd411e0    32  tbz w0, #0, #+0x2c (addr 0xffff8bd4120c)
0xffff8bd411e4    36  ldr x5, pc+76 (addr 0x0000ffff8bd41230)    ;; object: 0x26c62a21 WeakCell for 0x5f50c9c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd411e8    40  ldur x5, [x5, #7]
0xffff8bd411ec    44  tbz w5, #0, #+0x20 (addr 0xffff8bd4120c)
0xffff8bd411f0    48  ldursw x4, [x5, #15]
0xffff8bd411f4    52  tbnz w4, #23, #+0x18 (addr 0xffff8bd4120c)
0xffff8bd411f8    56  ldr x4, [jssp], #8
0xffff8bd411fc    60  ldr x3, [jssp], #8
0xffff8bd41200    64  ldr x2, pc+56 (addr 0x0000ffff8bd41238)    ;; object: 0x26c05209 <String[4]: next>
0xffff8bd41204    68  ldr x16, pc+60 (addr 0x0000ffff8bd41240)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff8bd41208    72  br x16
0xffff8bd4120c    76  ldr x2, pc+60 (addr 0x0000ffff8bd41248)    ;; object: 0x26c05209 <String[4]: next>
0xffff8bd41210    80  ldr x4, [jssp], #8
0xffff8bd41214    84  ldr x3, [jssp], #8
0xffff8bd41218    88  ldr x16, pc+56 (addr 0x0000ffff8bd41250)    ;; code: BUILTIN
0xffff8bd4121c    92  br x16
0xffff8bd41220    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd41224   100  d63f03e0       constant
0xffff8bd41228   104  26c5b0f1       constant
0xffff8bd4122c   108  00000000       constant
0xffff8bd41230   112  26c62a21       constant
0xffff8bd41234   116  00000000       constant
0xffff8bd41238   120  26c05209       constant
0xffff8bd4123c   124  00000000       constant
0xffff8bd41240   128  8bd38860       constant
0xffff8bd41244   132  0000ffff       constant
0xffff8bd41248   136  26c05209       constant
0xffff8bd4124c   140  00000000       constant
0xffff8bd41250   144  8bd22420       constant
0xffff8bd41254   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bd411d0  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bd411e4  embedded object  (0x26c62a21 WeakCell for 0x5f50c9c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd41200  embedded object  (0x26c05209 <String[4]: next>)
0xffff8bd41204  code target (HANDLER)  (0xffff8bd38860)
0xffff8bd4120c  embedded object  (0x26c05209 <String[4]: next>)
0xffff8bd41218  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd41220  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff8bd412c0     0  sub csp, jssp, #0x8 (8)
0xffff8bd412c4     4  str x3, [jssp, #-8]!
0xffff8bd412c8     8  sub csp, jssp, #0x8 (8)
0xffff8bd412cc    12  str x4, [jssp, #-8]!
0xffff8bd412d0    16  ldr x3, pc+88 (addr 0x0000ffff8bd41328)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bd412d4    20  ldur x3, [x3, #7]
0xffff8bd412d8    24  cmp x3, #0x0 (0)
0xffff8bd412dc    28  b.ne #+0x30 (addr 0xffff8bd4130c)
0xffff8bd412e0    32  tbz w0, #0, #+0x2c (addr 0xffff8bd4130c)
0xffff8bd412e4    36  ldr x5, pc+76 (addr 0x0000ffff8bd41330)    ;; object: 0x26c62a21 WeakCell for 0x5f50c9c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd412e8    40  ldur x5, [x5, #7]
0xffff8bd412ec    44  tbz w5, #0, #+0x20 (addr 0xffff8bd4130c)
0xffff8bd412f0    48  ldursw x4, [x5, #15]
0xffff8bd412f4    52  tbnz w4, #23, #+0x18 (addr 0xffff8bd4130c)
0xffff8bd412f8    56  ldr x4, [jssp], #8
0xffff8bd412fc    60  ldr x3, [jssp], #8
0xffff8bd41300    64  ldr x2, pc+56 (addr 0x0000ffff8bd41338)    ;; object: 0x26c05209 <String[4]: next>
0xffff8bd41304    68  ldr x16, pc+60 (addr 0x0000ffff8bd41340)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff8bd41308    72  br x16
0xffff8bd4130c    76  ldr x2, pc+60 (addr 0x0000ffff8bd41348)    ;; object: 0x26c05209 <String[4]: next>
0xffff8bd41310    80  ldr x4, [jssp], #8
0xffff8bd41314    84  ldr x3, [jssp], #8
0xffff8bd41318    88  ldr x16, pc+56 (addr 0x0000ffff8bd41350)    ;; code: BUILTIN
0xffff8bd4131c    92  br x16
0xffff8bd41320    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd41324   100  d63f03e0       constant
0xffff8bd41328   104  26c5b0f1       constant
0xffff8bd4132c   108  00000000       constant
0xffff8bd41330   112  26c62a21       constant
0xffff8bd41334   116  00000000       constant
0xffff8bd41338   120  26c05209       constant
0xffff8bd4133c   124  00000000       constant
0xffff8bd41340   128  8bd38860       constant
0xffff8bd41344   132  0000ffff       constant
0xffff8bd41348   136  26c05209       constant
0xffff8bd4134c   140  00000000       constant
0xffff8bd41350   144  8bd22420       constant
0xffff8bd41354   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bd412d0  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bd412e4  embedded object  (0x26c62a21 WeakCell for 0x5f50c9c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd41300  embedded object  (0x26c05209 <String[4]: next>)
0xffff8bd41304  code target (HANDLER)  (0xffff8bd38860)
0xffff8bd4130c  embedded object  (0x26c05209 <String[4]: next>)
0xffff8bd41318  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd41320  constant pool (size 56)

kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff8bd41580     0  adr xzr, #+0x40 (addr 0xffff8bd415c0)
0xffff8bd41584     4  adr xzr, #+0x360 (addr 0xffff8bd418e4)
0xffff8bd41588     8  ldr x16, pc+1736 (addr 0x0000ffff8bd41c50)    ;; external reference (store_buffer_top)
0xffff8bd4158c    12  ldr x6, [x16]
0xffff8bd41590    16  str x7, [x6], #8
0xffff8bd41594    20  str x6, [x16]
0xffff8bd41598    24  tst x6, #0x1ffff
0xffff8bd4159c    28  b.eq #+0x8 (addr 0xffff8bd415a4)
0xffff8bd415a0    32  ret
0xffff8bd415a4    36  sub csp, jssp, #0x8 (8)
0xffff8bd415a8    40  str lr, [jssp, #-8]!
0xffff8bd415ac    44  ldr x17, pc+1708 (addr 0x0000ffff8bd41c58)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd415b0    48  blr x17
0xffff8bd415b4    52  ldr lr, [jssp], #8
0xffff8bd415b8    56  ret
0xffff8bd415bc    60  ret
0xffff8bd415c0    64  sub csp, jssp, #0x10 (16)
0xffff8bd415c4    68  stp x2, x0, [jssp, #-16]!
0xffff8bd415c8    72  ldr x6, [x7]
0xffff8bd415cc    76  and x16, x6, #0xfffffffffff00000
0xffff8bd415d0    80  ldr x16, [x16, #8]
0xffff8bd415d4    84  tst x16, #0x18
0xffff8bd415d8    88  b.eq #+0x1d8 (addr 0xffff8bd417b0)
0xffff8bd415dc    92  and x16, x1, #0xfffffffffff00000
0xffff8bd415e0    96  ldr x16, [x16, #8]
0xffff8bd415e4   100  tst x16, #0x18
0xffff8bd415e8   104  b.ne #+0x1c8 (addr 0xffff8bd417b0)
0xffff8bd415ec   108  and x6, x1, #0xfffffffffff00000
0xffff8bd415f0   112  ldr x0, [x6, #104]
0xffff8bd415f4   116  subs x0, x0, #0x1 (1)
0xffff8bd415f8   120  str x0, [x6, #104]
0xffff8bd415fc   124  b.mi #+0xc4 (addr 0xffff8bd416c0)
0xffff8bd41600   128  ubfx x16, x1, #8, #12
0xffff8bd41604   132  and x6, x1, #0xfffffffffff00000
0xffff8bd41608   136  add x6, x6, x16, lsl #2
0xffff8bd4160c   140  ubfx x0, x1, #3, #5
0xffff8bd41610   144  ldr x6, [x6, #360]
0xffff8bd41614   148  lsr x6, x6, x0
0xffff8bd41618   152  tbz w6, #0, #+0x8 (addr 0xffff8bd41620)
0xffff8bd4161c   156  tbnz w6, #1, #+0x3c (addr 0xffff8bd41658)
0xffff8bd41620   160  ldp x2, x0, [jssp], #16
0xffff8bd41624   164  ldr x16, pc+1596 (addr 0x0000ffff8bd41c60)    ;; external reference (store_buffer_top)
0xffff8bd41628   168  ldr x6, [x16]
0xffff8bd4162c   172  str x7, [x6], #8
0xffff8bd41630   176  str x6, [x16]
0xffff8bd41634   180  tst x6, #0x1ffff
0xffff8bd41638   184  b.eq #+0x8 (addr 0xffff8bd41640)
0xffff8bd4163c   188  ret
0xffff8bd41640   192  sub csp, jssp, #0x8 (8)
0xffff8bd41644   196  str lr, [jssp, #-8]!
0xffff8bd41648   200  ldr x17, pc+1568 (addr 0x0000ffff8bd41c68)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd4164c   204  blr x17
0xffff8bd41650   208  ldr lr, [jssp], #8
0xffff8bd41654   212  ret
0xffff8bd41658   216  ldr x6, [x7]
0xffff8bd4165c   220  sub csp, jssp, #0x10 (16)
0xffff8bd41660   224  stp x1, x7, [jssp, #-16]!
0xffff8bd41664   228  ubfx x16, x6, #8, #12
0xffff8bd41668   232  and x0, x6, #0xfffffffffff00000
0xffff8bd4166c   236  add x0, x0, x16, lsl #2
0xffff8bd41670   240  ubfx x1, x6, #3, #5
0xffff8bd41674   244  ldr x7, [x0, #360]
0xffff8bd41678   248  lsr x7, x7, x1
0xffff8bd4167c   252  tbz w7, #0, #+0x40 (addr 0xffff8bd416bc)
0xffff8bd41680   256  ldp x1, x7, [jssp], #16
0xffff8bd41684   260  ldp x2, x0, [jssp], #16
0xffff8bd41688   264  ldr x16, pc+1512 (addr 0x0000ffff8bd41c70)    ;; external reference (store_buffer_top)
0xffff8bd4168c   268  ldr x6, [x16]
0xffff8bd41690   272  str x7, [x6], #8
0xffff8bd41694   276  str x6, [x16]
0xffff8bd41698   280  tst x6, #0x1ffff
0xffff8bd4169c   284  b.eq #+0x8 (addr 0xffff8bd416a4)
0xffff8bd416a0   288  ret
0xffff8bd416a4   292  sub csp, jssp, #0x8 (8)
0xffff8bd416a8   296  str lr, [jssp, #-8]!
0xffff8bd416ac   300  ldr x17, pc+1484 (addr 0x0000ffff8bd41c78)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd416b0   304  blr x17
0xffff8bd416b4   308  ldr lr, [jssp], #8
0xffff8bd416b8   312  ret
0xffff8bd416bc   316  ldp x1, x7, [jssp], #16
0xffff8bd416c0   320  sub csp, jssp, #0x78 (120)
0xffff8bd416c4   324  stp x14, x15, [jssp, #-32]!
0xffff8bd416c8   328  stp x18, lr, [jssp, #16]
0xffff8bd416cc   332  stp x10, x11, [jssp, #-32]!
0xffff8bd416d0   336  stp x12, x13, [jssp, #16]
0xffff8bd416d4   340  stp x5, x7, [jssp, #-32]!
0xffff8bd416d8   344  stp x8, x9, [jssp, #16]
0xffff8bd416dc   348  stp x1, x3, [jssp, #-24]!
0xffff8bd416e0   352  str x4, [jssp, #16]
0xffff8bd416e4   356  sub csp, jssp, #0xb0 (176)
0xffff8bd416e8   360  stp d26, d27, [jssp, #-32]!
0xffff8bd416ec   364  stp d28, d29, [jssp, #16]
0xffff8bd416f0   368  stp d22, d23, [jssp, #-32]!
0xffff8bd416f4   372  stp d24, d25, [jssp, #16]
0xffff8bd416f8   376  stp d18, d19, [jssp, #-32]!
0xffff8bd416fc   380  stp d20, d21, [jssp, #16]
0xffff8bd41700   384  stp d6, d7, [jssp, #-32]!
0xffff8bd41704   388  stp d16, d17, [jssp, #16]
0xffff8bd41708   392  stp d2, d3, [jssp, #-32]!
0xffff8bd4170c   396  stp d4, d5, [jssp, #16]
0xffff8bd41710   400  stp d0, d1, [jssp, #-16]!
0xffff8bd41714   404  mov x0, x1
0xffff8bd41718   408  mov x1, x7
0xffff8bd4171c   412  ldr x2, pc+1380 (addr 0x0000ffff8bd41c80)    ;; external reference (isolate)
0xffff8bd41720   416  ldr x16, pc+1384 (addr 0x0000ffff8bd41c88)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd41724   420  and csp, jssp, #0xfffffffffffffff0
0xffff8bd41728   424  blr x16
0xffff8bd4172c   428  ldp d2, d3, [jssp, #16]
0xffff8bd41730   432  ldp d0, d1, [jssp], #32
0xffff8bd41734   436  ldp d6, d7, [jssp, #16]
0xffff8bd41738   440  ldp d4, d5, [jssp], #32
0xffff8bd4173c   444  ldp d18, d19, [jssp, #16]
0xffff8bd41740   448  ldp d16, d17, [jssp], #32
0xffff8bd41744   452  ldp d22, d23, [jssp, #16]
0xffff8bd41748   456  ldp d20, d21, [jssp], #32
0xffff8bd4174c   460  ldp d26, d27, [jssp, #16]
0xffff8bd41750   464  ldp d24, d25, [jssp], #32
0xffff8bd41754   468  ldp d28, d29, [jssp], #16
0xffff8bd41758   472  ldp x4, x5, [jssp, #16]
0xffff8bd4175c   476  ldp x1, x3, [jssp], #32
0xffff8bd41760   480  ldp x9, x10, [jssp, #16]
0xffff8bd41764   484  ldp x7, x8, [jssp], #32
0xffff8bd41768   488  ldp x13, x14, [jssp, #16]
0xffff8bd4176c   492  ldp x11, x12, [jssp], #32
0xffff8bd41770   496  ldr lr, [jssp, #16]
0xffff8bd41774   500  ldp x15, x18, [jssp], #24
0xffff8bd41778   504  ldp x2, x0, [jssp], #16
0xffff8bd4177c   508  ldr x16, pc+1300 (addr 0x0000ffff8bd41c90)    ;; external reference (store_buffer_top)
0xffff8bd41780   512  ldr x6, [x16]
0xffff8bd41784   516  str x7, [x6], #8
0xffff8bd41788   520  str x6, [x16]
0xffff8bd4178c   524  tst x6, #0x1ffff
0xffff8bd41790   528  b.eq #+0x8 (addr 0xffff8bd41798)
0xffff8bd41794   532  ret
0xffff8bd41798   536  sub csp, jssp, #0x8 (8)
0xffff8bd4179c   540  str lr, [jssp, #-8]!
0xffff8bd417a0   544  ldr x17, pc+1272 (addr 0x0000ffff8bd41c98)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd417a4   548  blr x17
0xffff8bd417a8   552  ldr lr, [jssp], #8
0xffff8bd417ac   556  ret
0xffff8bd417b0   560  and x6, x1, #0xfffffffffff00000
0xffff8bd417b4   564  ldr x0, [x6, #104]
0xffff8bd417b8   568  subs x0, x0, #0x1 (1)
0xffff8bd417bc   572  str x0, [x6, #104]
0xffff8bd417c0   576  b.mi #+0x64 (addr 0xffff8bd41824)
0xffff8bd417c4   580  ubfx x16, x1, #8, #12
0xffff8bd417c8   584  and x6, x1, #0xfffffffffff00000
0xffff8bd417cc   588  add x6, x6, x16, lsl #2
0xffff8bd417d0   592  ubfx x0, x1, #3, #5
0xffff8bd417d4   596  ldr x6, [x6, #360]
0xffff8bd417d8   600  lsr x6, x6, x0
0xffff8bd417dc   604  tbz w6, #0, #+0x8 (addr 0xffff8bd417e4)
0xffff8bd417e0   608  tbnz w6, #1, #+0xc (addr 0xffff8bd417ec)
0xffff8bd417e4   612  ldp x2, x0, [jssp], #16
0xffff8bd417e8   616  ret
0xffff8bd417ec   620  ldr x6, [x7]
0xffff8bd417f0   624  sub csp, jssp, #0x10 (16)
0xffff8bd417f4   628  stp x1, x7, [jssp, #-16]!
0xffff8bd417f8   632  ubfx x16, x6, #8, #12
0xffff8bd417fc   636  and x0, x6, #0xfffffffffff00000
0xffff8bd41800   640  add x0, x0, x16, lsl #2
0xffff8bd41804   644  ubfx x1, x6, #3, #5
0xffff8bd41808   648  ldr x7, [x0, #360]
0xffff8bd4180c   652  lsr x7, x7, x1
0xffff8bd41810   656  tbz w7, #0, #+0x10 (addr 0xffff8bd41820)
0xffff8bd41814   660  ldp x1, x7, [jssp], #16
0xffff8bd41818   664  ldp x2, x0, [jssp], #16
0xffff8bd4181c   668  ret
0xffff8bd41820   672  ldp x1, x7, [jssp], #16
0xffff8bd41824   676  sub csp, jssp, #0x78 (120)
0xffff8bd41828   680  stp x14, x15, [jssp, #-32]!
0xffff8bd4182c   684  stp x18, lr, [jssp, #16]
0xffff8bd41830   688  stp x10, x11, [jssp, #-32]!
0xffff8bd41834   692  stp x12, x13, [jssp, #16]
0xffff8bd41838   696  stp x5, x7, [jssp, #-32]!
0xffff8bd4183c   700  stp x8, x9, [jssp, #16]
0xffff8bd41840   704  stp x1, x3, [jssp, #-24]!
0xffff8bd41844   708  str x4, [jssp, #16]
0xffff8bd41848   712  sub csp, jssp, #0xb0 (176)
0xffff8bd4184c   716  stp d26, d27, [jssp, #-32]!
0xffff8bd41850   720  stp d28, d29, [jssp, #16]
0xffff8bd41854   724  stp d22, d23, [jssp, #-32]!
0xffff8bd41858   728  stp d24, d25, [jssp, #16]
0xffff8bd4185c   732  stp d18, d19, [jssp, #-32]!
0xffff8bd41860   736  stp d20, d21, [jssp, #16]
0xffff8bd41864   740  stp d6, d7, [jssp, #-32]!
0xffff8bd41868   744  stp d16, d17, [jssp, #16]
0xffff8bd4186c   748  stp d2, d3, [jssp, #-32]!
0xffff8bd41870   752  stp d4, d5, [jssp, #16]
0xffff8bd41874   756  stp d0, d1, [jssp, #-16]!
0xffff8bd41878   760  mov x0, x1
0xffff8bd4187c   764  mov x1, x7
0xffff8bd41880   768  ldr x2, pc+1056 (addr 0x0000ffff8bd41ca0)    ;; external reference (isolate)
0xffff8bd41884   772  ldr x16, pc+1060 (addr 0x0000ffff8bd41ca8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd41888   776  and csp, jssp, #0xfffffffffffffff0
0xffff8bd4188c   780  blr x16
0xffff8bd41890   784  ldp d2, d3, [jssp, #16]
0xffff8bd41894   788  ldp d0, d1, [jssp], #32
0xffff8bd41898   792  ldp d6, d7, [jssp, #16]
0xffff8bd4189c   796  ldp d4, d5, [jssp], #32
0xffff8bd418a0   800  ldp d18, d19, [jssp, #16]
0xffff8bd418a4   804  ldp d16, d17, [jssp], #32
0xffff8bd418a8   808  ldp d22, d23, [jssp, #16]
0xffff8bd418ac   812  ldp d20, d21, [jssp], #32
0xffff8bd418b0   816  ldp d26, d27, [jssp, #16]
0xffff8bd418b4   820  ldp d24, d25, [jssp], #32
0xffff8bd418b8   824  ldp d28, d29, [jssp], #16
0xffff8bd418bc   828  ldp x4, x5, [jssp, #16]
0xffff8bd418c0   832  ldp x1, x3, [jssp], #32
0xffff8bd418c4   836  ldp x9, x10, [jssp, #16]
0xffff8bd418c8   840  ldp x7, x8, [jssp], #32
0xffff8bd418cc   844  ldp x13, x14, [jssp, #16]
0xffff8bd418d0   848  ldp x11, x12, [jssp], #32
0xffff8bd418d4   852  ldr lr, [jssp, #16]
0xffff8bd418d8   856  ldp x15, x18, [jssp], #24
0xffff8bd418dc   860  ldp x2, x0, [jssp], #16
0xffff8bd418e0   864  ret
0xffff8bd418e4   868  sub csp, jssp, #0x10 (16)
0xffff8bd418e8   872  stp x2, x0, [jssp, #-16]!
0xffff8bd418ec   876  ldr x6, [x7]
0xffff8bd418f0   880  and x16, x6, #0xfffffffffff00000
0xffff8bd418f4   884  ldr x16, [x16, #8]
0xffff8bd418f8   888  tst x16, #0x18
0xffff8bd418fc   892  b.eq #+0x1f8 (addr 0xffff8bd41af4)
0xffff8bd41900   896  and x16, x1, #0xfffffffffff00000
0xffff8bd41904   900  ldr x16, [x16, #8]
0xffff8bd41908   904  tst x16, #0x18
0xffff8bd4190c   908  b.ne #+0x1e8 (addr 0xffff8bd41af4)
0xffff8bd41910   912  and x6, x1, #0xfffffffffff00000
0xffff8bd41914   916  ldr x0, [x6, #104]
0xffff8bd41918   920  subs x0, x0, #0x1 (1)
0xffff8bd4191c   924  str x0, [x6, #104]
0xffff8bd41920   928  b.mi #+0xe4 (addr 0xffff8bd41a04)
0xffff8bd41924   932  ubfx x16, x1, #8, #12
0xffff8bd41928   936  and x6, x1, #0xfffffffffff00000
0xffff8bd4192c   940  add x6, x6, x16, lsl #2
0xffff8bd41930   944  ubfx x0, x1, #3, #5
0xffff8bd41934   948  ldr x6, [x6, #360]
0xffff8bd41938   952  lsr x6, x6, x0
0xffff8bd4193c   956  tbz w6, #0, #+0x8 (addr 0xffff8bd41944)
0xffff8bd41940   960  tbnz w6, #1, #+0x3c (addr 0xffff8bd4197c)
0xffff8bd41944   964  ldp x2, x0, [jssp], #16
0xffff8bd41948   968  ldr x16, pc+872 (addr 0x0000ffff8bd41cb0)    ;; external reference (store_buffer_top)
0xffff8bd4194c   972  ldr x6, [x16]
0xffff8bd41950   976  str x7, [x6], #8
0xffff8bd41954   980  str x6, [x16]
0xffff8bd41958   984  tst x6, #0x1ffff
0xffff8bd4195c   988  b.eq #+0x8 (addr 0xffff8bd41964)
0xffff8bd41960   992  ret
0xffff8bd41964   996  sub csp, jssp, #0x8 (8)
0xffff8bd41968  1000  str lr, [jssp, #-8]!
0xffff8bd4196c  1004  ldr x17, pc+844 (addr 0x0000ffff8bd41cb8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd41970  1008  blr x17
0xffff8bd41974  1012  ldr lr, [jssp], #8
0xffff8bd41978  1016  ret
0xffff8bd4197c  1020  ldr x6, [x7]
0xffff8bd41980  1024  and x0, x6, #0xfffffffffff00000
0xffff8bd41984  1028  ldr x0, [x0, #8]
0xffff8bd41988  1032  tbz w0, #6, #+0x18 (addr 0xffff8bd419a0)
0xffff8bd4198c  1036  and x0, x1, #0xfffffffffff00000
0xffff8bd41990  1040  ldr x0, [x0, #8]
0xffff8bd41994  1044  movz x16, #0x58
0xffff8bd41998  1048  tst x0, x16
0xffff8bd4199c  1052  b.eq #+0x68 (addr 0xffff8bd41a04)
0xffff8bd419a0  1056  sub csp, jssp, #0x10 (16)
0xffff8bd419a4  1060  stp x1, x7, [jssp, #-16]!
0xffff8bd419a8  1064  ubfx x16, x6, #8, #12
0xffff8bd419ac  1068  and x0, x6, #0xfffffffffff00000
0xffff8bd419b0  1072  add x0, x0, x16, lsl #2
0xffff8bd419b4  1076  ubfx x1, x6, #3, #5
0xffff8bd419b8  1080  ldr x7, [x0, #360]
0xffff8bd419bc  1084  lsr x7, x7, x1
0xffff8bd419c0  1088  tbz w7, #0, #+0x40 (addr 0xffff8bd41a00)
0xffff8bd419c4  1092  ldp x1, x7, [jssp], #16
0xffff8bd419c8  1096  ldp x2, x0, [jssp], #16
0xffff8bd419cc  1100  ldr x16, pc+756 (addr 0x0000ffff8bd41cc0)    ;; external reference (store_buffer_top)
0xffff8bd419d0  1104  ldr x6, [x16]
0xffff8bd419d4  1108  str x7, [x6], #8
0xffff8bd419d8  1112  str x6, [x16]
0xffff8bd419dc  1116  tst x6, #0x1ffff
0xffff8bd419e0  1120  b.eq #+0x8 (addr 0xffff8bd419e8)
0xffff8bd419e4  1124  ret
0xffff8bd419e8  1128  sub csp, jssp, #0x8 (8)
0xffff8bd419ec  1132  str lr, [jssp, #-8]!
0xffff8bd419f0  1136  ldr x17, pc+728 (addr 0x0000ffff8bd41cc8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd419f4  1140  blr x17
0xffff8bd419f8  1144  ldr lr, [jssp], #8
0xffff8bd419fc  1148  ret
0xffff8bd41a00  1152  ldp x1, x7, [jssp], #16
0xffff8bd41a04  1156  sub csp, jssp, #0x78 (120)
0xffff8bd41a08  1160  stp x14, x15, [jssp, #-32]!
0xffff8bd41a0c  1164  stp x18, lr, [jssp, #16]
0xffff8bd41a10  1168  stp x10, x11, [jssp, #-32]!
0xffff8bd41a14  1172  stp x12, x13, [jssp, #16]
0xffff8bd41a18  1176  stp x5, x7, [jssp, #-32]!
0xffff8bd41a1c  1180  stp x8, x9, [jssp, #16]
0xffff8bd41a20  1184  stp x1, x3, [jssp, #-24]!
0xffff8bd41a24  1188  str x4, [jssp, #16]
0xffff8bd41a28  1192  sub csp, jssp, #0xb0 (176)
0xffff8bd41a2c  1196  stp d26, d27, [jssp, #-32]!
0xffff8bd41a30  1200  stp d28, d29, [jssp, #16]
0xffff8bd41a34  1204  stp d22, d23, [jssp, #-32]!
0xffff8bd41a38  1208  stp d24, d25, [jssp, #16]
0xffff8bd41a3c  1212  stp d18, d19, [jssp, #-32]!
0xffff8bd41a40  1216  stp d20, d21, [jssp, #16]
0xffff8bd41a44  1220  stp d6, d7, [jssp, #-32]!
0xffff8bd41a48  1224  stp d16, d17, [jssp, #16]
0xffff8bd41a4c  1228  stp d2, d3, [jssp, #-32]!
0xffff8bd41a50  1232  stp d4, d5, [jssp, #16]
0xffff8bd41a54  1236  stp d0, d1, [jssp, #-16]!
0xffff8bd41a58  1240  mov x0, x1
0xffff8bd41a5c  1244  mov x1, x7
0xffff8bd41a60  1248  ldr x2, pc+624 (addr 0x0000ffff8bd41cd0)    ;; external reference (isolate)
0xffff8bd41a64  1252  ldr x16, pc+628 (addr 0x0000ffff8bd41cd8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd41a68  1256  and csp, jssp, #0xfffffffffffffff0
0xffff8bd41a6c  1260  blr x16
0xffff8bd41a70  1264  ldp d2, d3, [jssp, #16]
0xffff8bd41a74  1268  ldp d0, d1, [jssp], #32
0xffff8bd41a78  1272  ldp d6, d7, [jssp, #16]
0xffff8bd41a7c  1276  ldp d4, d5, [jssp], #32
0xffff8bd41a80  1280  ldp d18, d19, [jssp, #16]
0xffff8bd41a84  1284  ldp d16, d17, [jssp], #32
0xffff8bd41a88  1288  ldp d22, d23, [jssp, #16]
0xffff8bd41a8c  1292  ldp d20, d21, [jssp], #32
0xffff8bd41a90  1296  ldp d26, d27, [jssp, #16]
0xffff8bd41a94  1300  ldp d24, d25, [jssp], #32
0xffff8bd41a98  1304  ldp d28, d29, [jssp], #16
0xffff8bd41a9c  1308  ldp x4, x5, [jssp, #16]
0xffff8bd41aa0  1312  ldp x1, x3, [jssp], #32
0xffff8bd41aa4  1316  ldp x9, x10, [jssp, #16]
0xffff8bd41aa8  1320  ldp x7, x8, [jssp], #32
0xffff8bd41aac  1324  ldp x13, x14, [jssp, #16]
0xffff8bd41ab0  1328  ldp x11, x12, [jssp], #32
0xffff8bd41ab4  1332  ldr lr, [jssp, #16]
0xffff8bd41ab8  1336  ldp x15, x18, [jssp], #24
0xffff8bd41abc  1340  ldp x2, x0, [jssp], #16
0xffff8bd41ac0  1344  ldr x16, pc+544 (addr 0x0000ffff8bd41ce0)    ;; external reference (store_buffer_top)
0xffff8bd41ac4  1348  ldr x6, [x16]
0xffff8bd41ac8  1352  str x7, [x6], #8
0xffff8bd41acc  1356  str x6, [x16]
0xffff8bd41ad0  1360  tst x6, #0x1ffff
0xffff8bd41ad4  1364  b.eq #+0x8 (addr 0xffff8bd41adc)
0xffff8bd41ad8  1368  ret
0xffff8bd41adc  1372  sub csp, jssp, #0x8 (8)
0xffff8bd41ae0  1376  str lr, [jssp, #-8]!
0xffff8bd41ae4  1380  ldr x17, pc+516 (addr 0x0000ffff8bd41ce8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd41ae8  1384  blr x17
0xffff8bd41aec  1388  ldr lr, [jssp], #8
0xffff8bd41af0  1392  ret
0xffff8bd41af4  1396  and x6, x1, #0xfffffffffff00000
0xffff8bd41af8  1400  ldr x0, [x6, #104]
0xffff8bd41afc  1404  subs x0, x0, #0x1 (1)
0xffff8bd41b00  1408  str x0, [x6, #104]
0xffff8bd41b04  1412  b.mi #+0x84 (addr 0xffff8bd41b88)
0xffff8bd41b08  1416  ubfx x16, x1, #8, #12
0xffff8bd41b0c  1420  and x6, x1, #0xfffffffffff00000
0xffff8bd41b10  1424  add x6, x6, x16, lsl #2
0xffff8bd41b14  1428  ubfx x0, x1, #3, #5
0xffff8bd41b18  1432  ldr x6, [x6, #360]
0xffff8bd41b1c  1436  lsr x6, x6, x0
0xffff8bd41b20  1440  tbz w6, #0, #+0x8 (addr 0xffff8bd41b28)
0xffff8bd41b24  1444  tbnz w6, #1, #+0xc (addr 0xffff8bd41b30)
0xffff8bd41b28  1448  ldp x2, x0, [jssp], #16
0xffff8bd41b2c  1452  ret
0xffff8bd41b30  1456  ldr x6, [x7]
0xffff8bd41b34  1460  and x0, x6, #0xfffffffffff00000
0xffff8bd41b38  1464  ldr x0, [x0, #8]
0xffff8bd41b3c  1468  tbz w0, #6, #+0x18 (addr 0xffff8bd41b54)
0xffff8bd41b40  1472  and x0, x1, #0xfffffffffff00000
0xffff8bd41b44  1476  ldr x0, [x0, #8]
0xffff8bd41b48  1480  movz x16, #0x58
0xffff8bd41b4c  1484  tst x0, x16
0xffff8bd41b50  1488  b.eq #+0x38 (addr 0xffff8bd41b88)
0xffff8bd41b54  1492  sub csp, jssp, #0x10 (16)
0xffff8bd41b58  1496  stp x1, x7, [jssp, #-16]!
0xffff8bd41b5c  1500  ubfx x16, x6, #8, #12
0xffff8bd41b60  1504  and x0, x6, #0xfffffffffff00000
0xffff8bd41b64  1508  add x0, x0, x16, lsl #2
0xffff8bd41b68  1512  ubfx x1, x6, #3, #5
0xffff8bd41b6c  1516  ldr x7, [x0, #360]
0xffff8bd41b70  1520  lsr x7, x7, x1
0xffff8bd41b74  1524  tbz w7, #0, #+0x10 (addr 0xffff8bd41b84)
0xffff8bd41b78  1528  ldp x1, x7, [jssp], #16
0xffff8bd41b7c  1532  ldp x2, x0, [jssp], #16
0xffff8bd41b80  1536  ret
0xffff8bd41b84  1540  ldp x1, x7, [jssp], #16
0xffff8bd41b88  1544  sub csp, jssp, #0x78 (120)
0xffff8bd41b8c  1548  stp x14, x15, [jssp, #-32]!
0xffff8bd41b90  1552  stp x18, lr, [jssp, #16]
0xffff8bd41b94  1556  stp x10, x11, [jssp, #-32]!
0xffff8bd41b98  1560  stp x12, x13, [jssp, #16]
0xffff8bd41b9c  1564  stp x5, x7, [jssp, #-32]!
0xffff8bd41ba0  1568  stp x8, x9, [jssp, #16]
0xffff8bd41ba4  1572  stp x1, x3, [jssp, #-24]!
0xffff8bd41ba8  1576  str x4, [jssp, #16]
0xffff8bd41bac  1580  sub csp, jssp, #0xb0 (176)
0xffff8bd41bb0  1584  stp d26, d27, [jssp, #-32]!
0xffff8bd41bb4  1588  stp d28, d29, [jssp, #16]
0xffff8bd41bb8  1592  stp d22, d23, [jssp, #-32]!
0xffff8bd41bbc  1596  stp d24, d25, [jssp, #16]
0xffff8bd41bc0  1600  stp d18, d19, [jssp, #-32]!
0xffff8bd41bc4  1604  stp d20, d21, [jssp, #16]
0xffff8bd41bc8  1608  stp d6, d7, [jssp, #-32]!
0xffff8bd41bcc  1612  stp d16, d17, [jssp, #16]
0xffff8bd41bd0  1616  stp d2, d3, [jssp, #-32]!
0xffff8bd41bd4  1620  stp d4, d5, [jssp, #16]
0xffff8bd41bd8  1624  stp d0, d1, [jssp, #-16]!
0xffff8bd41bdc  1628  mov x0, x1
0xffff8bd41be0  1632  mov x1, x7
0xffff8bd41be4  1636  ldr x2, pc+268 (addr 0x0000ffff8bd41cf0)    ;; external reference (isolate)
0xffff8bd41be8  1640  ldr x16, pc+272 (addr 0x0000ffff8bd41cf8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd41bec  1644  and csp, jssp, #0xfffffffffffffff0
0xffff8bd41bf0  1648  blr x16
0xffff8bd41bf4  1652  ldp d2, d3, [jssp, #16]
0xffff8bd41bf8  1656  ldp d0, d1, [jssp], #32
0xffff8bd41bfc  1660  ldp d6, d7, [jssp, #16]
0xffff8bd41c00  1664  ldp d4, d5, [jssp], #32
0xffff8bd41c04  1668  ldp d18, d19, [jssp, #16]
0xffff8bd41c08  1672  ldp d16, d17, [jssp], #32
0xffff8bd41c0c  1676  ldp d22, d23, [jssp, #16]
0xffff8bd41c10  1680  ldp d20, d21, [jssp], #32
0xffff8bd41c14  1684  ldp d26, d27, [jssp, #16]
0xffff8bd41c18  1688  ldp d24, d25, [jssp], #32
0xffff8bd41c1c  1692  ldp d28, d29, [jssp], #16
0xffff8bd41c20  1696  ldp x4, x5, [jssp, #16]
0xffff8bd41c24  1700  ldp x1, x3, [jssp], #32
0xffff8bd41c28  1704  ldp x9, x10, [jssp, #16]
0xffff8bd41c2c  1708  ldp x7, x8, [jssp], #32
0xffff8bd41c30  1712  ldp x13, x14, [jssp, #16]
0xffff8bd41c34  1716  ldp x11, x12, [jssp], #32
0xffff8bd41c38  1720  ldr lr, [jssp, #16]
0xffff8bd41c3c  1724  ldp x15, x18, [jssp], #24
0xffff8bd41c40  1728  ldp x2, x0, [jssp], #16
0xffff8bd41c44  1732  ret
0xffff8bd41c48  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd41c4c  1740  d63f03e0       constant
0xffff8bd41c50  1744  2cb8e8c0       constant
0xffff8bd41c54  1748  00000000       constant
0xffff8bd41c58  1752  8bd065a0       constant
0xffff8bd41c5c  1756  0000ffff       constant
0xffff8bd41c60  1760  2cb8e8c0       constant
0xffff8bd41c64  1764  00000000       constant
0xffff8bd41c68  1768  8bd065a0       constant
0xffff8bd41c6c  1772  0000ffff       constant
0xffff8bd41c70  1776  2cb8e8c0       constant
0xffff8bd41c74  1780  00000000       constant
0xffff8bd41c78  1784  8bd065a0       constant
0xffff8bd41c7c  1788  0000ffff       constant
0xffff8bd41c80  1792  2cb8d2d0       constant
0xffff8bd41c84  1796  00000000       constant
0xffff8bd41c88  1800  00c2d958       constant
0xffff8bd41c8c  1804  00000000       constant
0xffff8bd41c90  1808  2cb8e8c0       constant
0xffff8bd41c94  1812  00000000       constant
0xffff8bd41c98  1816  8bd065a0       constant
0xffff8bd41c9c  1820  0000ffff       constant
0xffff8bd41ca0  1824  2cb8d2d0       constant
0xffff8bd41ca4  1828  00000000       constant
0xffff8bd41ca8  1832  00c2d958       constant
0xffff8bd41cac  1836  00000000       constant
0xffff8bd41cb0  1840  2cb8e8c0       constant
0xffff8bd41cb4  1844  00000000       constant
0xffff8bd41cb8  1848  8bd065a0       constant
0xffff8bd41cbc  1852  0000ffff       constant
0xffff8bd41cc0  1856  2cb8e8c0       constant
0xffff8bd41cc4  1860  00000000       constant
0xffff8bd41cc8  1864  8bd065a0       constant
0xffff8bd41ccc  1868  0000ffff       constant
0xffff8bd41cd0  1872  2cb8d2d0       constant
0xffff8bd41cd4  1876  00000000       constant
0xffff8bd41cd8  1880  00c2d958       constant
0xffff8bd41cdc  1884  00000000       constant
0xffff8bd41ce0  1888  2cb8e8c0       constant
0xffff8bd41ce4  1892  00000000       constant
0xffff8bd41ce8  1896  8bd065a0       constant
0xffff8bd41cec  1900  0000ffff       constant
0xffff8bd41cf0  1904  2cb8d2d0       constant
0xffff8bd41cf4  1908  00000000       constant
0xffff8bd41cf8  1912  00c2d958       constant
0xffff8bd41cfc  1916  00000000       constant


RelocInfo (size = 65)
0xffff8bd41588  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd415ac  code target (STUB)  (0xffff8bd065a0)
0xffff8bd41624  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd41648  code target (STUB)  (0xffff8bd065a0)
0xffff8bd41688  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd416ac  code target (STUB)  (0xffff8bd065a0)
0xffff8bd4171c  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd41720  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd4177c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd417a0  code target (STUB)  (0xffff8bd065a0)
0xffff8bd41880  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd41884  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd41948  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd4196c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd419cc  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd419f0  code target (STUB)  (0xffff8bd065a0)
0xffff8bd41a60  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd41a64  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd41ac0  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd41ae4  code target (STUB)  (0xffff8bd065a0)
0xffff8bd41be4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd41be8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd41c48  constant pool (size 184)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff8bd41d60     0  adr xzr, #+0x40 (addr 0xffff8bd41da0)
0xffff8bd41d64     4  adr xzr, #+0x360 (addr 0xffff8bd420c4)
0xffff8bd41d68     8  ldr x16, pc+1736 (addr 0x0000ffff8bd42430)    ;; external reference (store_buffer_top)
0xffff8bd41d6c    12  ldr x5, [x16]
0xffff8bd41d70    16  str x9, [x5], #8
0xffff8bd41d74    20  str x5, [x16]
0xffff8bd41d78    24  tst x5, #0x1ffff
0xffff8bd41d7c    28  b.eq #+0x8 (addr 0xffff8bd41d84)
0xffff8bd41d80    32  ret
0xffff8bd41d84    36  sub csp, jssp, #0x8 (8)
0xffff8bd41d88    40  str lr, [jssp, #-8]!
0xffff8bd41d8c    44  ldr x17, pc+1708 (addr 0x0000ffff8bd42438)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd41d90    48  blr x17
0xffff8bd41d94    52  ldr lr, [jssp], #8
0xffff8bd41d98    56  ret
0xffff8bd41d9c    60  ret
0xffff8bd41da0    64  sub csp, jssp, #0x10 (16)
0xffff8bd41da4    68  stp x1, x0, [jssp, #-16]!
0xffff8bd41da8    72  ldr x5, [x9]
0xffff8bd41dac    76  and x16, x5, #0xfffffffffff00000
0xffff8bd41db0    80  ldr x16, [x16, #8]
0xffff8bd41db4    84  tst x16, #0x18
0xffff8bd41db8    88  b.eq #+0x1d8 (addr 0xffff8bd41f90)
0xffff8bd41dbc    92  and x16, x8, #0xfffffffffff00000
0xffff8bd41dc0    96  ldr x16, [x16, #8]
0xffff8bd41dc4   100  tst x16, #0x18
0xffff8bd41dc8   104  b.ne #+0x1c8 (addr 0xffff8bd41f90)
0xffff8bd41dcc   108  and x5, x8, #0xfffffffffff00000
0xffff8bd41dd0   112  ldr x0, [x5, #104]
0xffff8bd41dd4   116  subs x0, x0, #0x1 (1)
0xffff8bd41dd8   120  str x0, [x5, #104]
0xffff8bd41ddc   124  b.mi #+0xc4 (addr 0xffff8bd41ea0)
0xffff8bd41de0   128  ubfx x16, x8, #8, #12
0xffff8bd41de4   132  and x5, x8, #0xfffffffffff00000
0xffff8bd41de8   136  add x5, x5, x16, lsl #2
0xffff8bd41dec   140  ubfx x0, x8, #3, #5
0xffff8bd41df0   144  ldr x5, [x5, #360]
0xffff8bd41df4   148  lsr x5, x5, x0
0xffff8bd41df8   152  tbz w5, #0, #+0x8 (addr 0xffff8bd41e00)
0xffff8bd41dfc   156  tbnz w5, #1, #+0x3c (addr 0xffff8bd41e38)
0xffff8bd41e00   160  ldp x1, x0, [jssp], #16
0xffff8bd41e04   164  ldr x16, pc+1596 (addr 0x0000ffff8bd42440)    ;; external reference (store_buffer_top)
0xffff8bd41e08   168  ldr x5, [x16]
0xffff8bd41e0c   172  str x9, [x5], #8
0xffff8bd41e10   176  str x5, [x16]
0xffff8bd41e14   180  tst x5, #0x1ffff
0xffff8bd41e18   184  b.eq #+0x8 (addr 0xffff8bd41e20)
0xffff8bd41e1c   188  ret
0xffff8bd41e20   192  sub csp, jssp, #0x8 (8)
0xffff8bd41e24   196  str lr, [jssp, #-8]!
0xffff8bd41e28   200  ldr x17, pc+1568 (addr 0x0000ffff8bd42448)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd41e2c   204  blr x17
0xffff8bd41e30   208  ldr lr, [jssp], #8
0xffff8bd41e34   212  ret
0xffff8bd41e38   216  ldr x5, [x9]
0xffff8bd41e3c   220  sub csp, jssp, #0x10 (16)
0xffff8bd41e40   224  stp x8, x9, [jssp, #-16]!
0xffff8bd41e44   228  ubfx x16, x5, #8, #12
0xffff8bd41e48   232  and x0, x5, #0xfffffffffff00000
0xffff8bd41e4c   236  add x0, x0, x16, lsl #2
0xffff8bd41e50   240  ubfx x8, x5, #3, #5
0xffff8bd41e54   244  ldr x9, [x0, #360]
0xffff8bd41e58   248  lsr x9, x9, x8
0xffff8bd41e5c   252  tbz w9, #0, #+0x40 (addr 0xffff8bd41e9c)
0xffff8bd41e60   256  ldp x8, x9, [jssp], #16
0xffff8bd41e64   260  ldp x1, x0, [jssp], #16
0xffff8bd41e68   264  ldr x16, pc+1512 (addr 0x0000ffff8bd42450)    ;; external reference (store_buffer_top)
0xffff8bd41e6c   268  ldr x5, [x16]
0xffff8bd41e70   272  str x9, [x5], #8
0xffff8bd41e74   276  str x5, [x16]
0xffff8bd41e78   280  tst x5, #0x1ffff
0xffff8bd41e7c   284  b.eq #+0x8 (addr 0xffff8bd41e84)
0xffff8bd41e80   288  ret
0xffff8bd41e84   292  sub csp, jssp, #0x8 (8)
0xffff8bd41e88   296  str lr, [jssp, #-8]!
0xffff8bd41e8c   300  ldr x17, pc+1484 (addr 0x0000ffff8bd42458)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd41e90   304  blr x17
0xffff8bd41e94   308  ldr lr, [jssp], #8
0xffff8bd41e98   312  ret
0xffff8bd41e9c   316  ldp x8, x9, [jssp], #16
0xffff8bd41ea0   320  sub csp, jssp, #0x78 (120)
0xffff8bd41ea4   324  stp x14, x15, [jssp, #-32]!
0xffff8bd41ea8   328  stp x18, lr, [jssp, #16]
0xffff8bd41eac   332  stp x10, x11, [jssp, #-32]!
0xffff8bd41eb0   336  stp x12, x13, [jssp, #16]
0xffff8bd41eb4   340  stp x6, x7, [jssp, #-32]!
0xffff8bd41eb8   344  stp x8, x9, [jssp, #16]
0xffff8bd41ebc   348  stp x2, x3, [jssp, #-24]!
0xffff8bd41ec0   352  str x4, [jssp, #16]
0xffff8bd41ec4   356  sub csp, jssp, #0xb0 (176)
0xffff8bd41ec8   360  stp d26, d27, [jssp, #-32]!
0xffff8bd41ecc   364  stp d28, d29, [jssp, #16]
0xffff8bd41ed0   368  stp d22, d23, [jssp, #-32]!
0xffff8bd41ed4   372  stp d24, d25, [jssp, #16]
0xffff8bd41ed8   376  stp d18, d19, [jssp, #-32]!
0xffff8bd41edc   380  stp d20, d21, [jssp, #16]
0xffff8bd41ee0   384  stp d6, d7, [jssp, #-32]!
0xffff8bd41ee4   388  stp d16, d17, [jssp, #16]
0xffff8bd41ee8   392  stp d2, d3, [jssp, #-32]!
0xffff8bd41eec   396  stp d4, d5, [jssp, #16]
0xffff8bd41ef0   400  stp d0, d1, [jssp, #-16]!
0xffff8bd41ef4   404  mov x0, x8
0xffff8bd41ef8   408  mov x1, x9
0xffff8bd41efc   412  ldr x2, pc+1380 (addr 0x0000ffff8bd42460)    ;; external reference (isolate)
0xffff8bd41f00   416  ldr x16, pc+1384 (addr 0x0000ffff8bd42468)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd41f04   420  and csp, jssp, #0xfffffffffffffff0
0xffff8bd41f08   424  blr x16
0xffff8bd41f0c   428  ldp d2, d3, [jssp, #16]
0xffff8bd41f10   432  ldp d0, d1, [jssp], #32
0xffff8bd41f14   436  ldp d6, d7, [jssp, #16]
0xffff8bd41f18   440  ldp d4, d5, [jssp], #32
0xffff8bd41f1c   444  ldp d18, d19, [jssp, #16]
0xffff8bd41f20   448  ldp d16, d17, [jssp], #32
0xffff8bd41f24   452  ldp d22, d23, [jssp, #16]
0xffff8bd41f28   456  ldp d20, d21, [jssp], #32
0xffff8bd41f2c   460  ldp d26, d27, [jssp, #16]
0xffff8bd41f30   464  ldp d24, d25, [jssp], #32
0xffff8bd41f34   468  ldp d28, d29, [jssp], #16
0xffff8bd41f38   472  ldp x4, x6, [jssp, #16]
0xffff8bd41f3c   476  ldp x2, x3, [jssp], #32
0xffff8bd41f40   480  ldp x9, x10, [jssp, #16]
0xffff8bd41f44   484  ldp x7, x8, [jssp], #32
0xffff8bd41f48   488  ldp x13, x14, [jssp, #16]
0xffff8bd41f4c   492  ldp x11, x12, [jssp], #32
0xffff8bd41f50   496  ldr lr, [jssp, #16]
0xffff8bd41f54   500  ldp x15, x18, [jssp], #24
0xffff8bd41f58   504  ldp x1, x0, [jssp], #16
0xffff8bd41f5c   508  ldr x16, pc+1300 (addr 0x0000ffff8bd42470)    ;; external reference (store_buffer_top)
0xffff8bd41f60   512  ldr x5, [x16]
0xffff8bd41f64   516  str x9, [x5], #8
0xffff8bd41f68   520  str x5, [x16]
0xffff8bd41f6c   524  tst x5, #0x1ffff
0xffff8bd41f70   528  b.eq #+0x8 (addr 0xffff8bd41f78)
0xffff8bd41f74   532  ret
0xffff8bd41f78   536  sub csp, jssp, #0x8 (8)
0xffff8bd41f7c   540  str lr, [jssp, #-8]!
0xffff8bd41f80   544  ldr x17, pc+1272 (addr 0x0000ffff8bd42478)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd41f84   548  blr x17
0xffff8bd41f88   552  ldr lr, [jssp], #8
0xffff8bd41f8c   556  ret
0xffff8bd41f90   560  and x5, x8, #0xfffffffffff00000
0xffff8bd41f94   564  ldr x0, [x5, #104]
0xffff8bd41f98   568  subs x0, x0, #0x1 (1)
0xffff8bd41f9c   572  str x0, [x5, #104]
0xffff8bd41fa0   576  b.mi #+0x64 (addr 0xffff8bd42004)
0xffff8bd41fa4   580  ubfx x16, x8, #8, #12
0xffff8bd41fa8   584  and x5, x8, #0xfffffffffff00000
0xffff8bd41fac   588  add x5, x5, x16, lsl #2
0xffff8bd41fb0   592  ubfx x0, x8, #3, #5
0xffff8bd41fb4   596  ldr x5, [x5, #360]
0xffff8bd41fb8   600  lsr x5, x5, x0
0xffff8bd41fbc   604  tbz w5, #0, #+0x8 (addr 0xffff8bd41fc4)
0xffff8bd41fc0   608  tbnz w5, #1, #+0xc (addr 0xffff8bd41fcc)
0xffff8bd41fc4   612  ldp x1, x0, [jssp], #16
0xffff8bd41fc8   616  ret
0xffff8bd41fcc   620  ldr x5, [x9]
0xffff8bd41fd0   624  sub csp, jssp, #0x10 (16)
0xffff8bd41fd4   628  stp x8, x9, [jssp, #-16]!
0xffff8bd41fd8   632  ubfx x16, x5, #8, #12
0xffff8bd41fdc   636  and x0, x5, #0xfffffffffff00000
0xffff8bd41fe0   640  add x0, x0, x16, lsl #2
0xffff8bd41fe4   644  ubfx x8, x5, #3, #5
0xffff8bd41fe8   648  ldr x9, [x0, #360]
0xffff8bd41fec   652  lsr x9, x9, x8
0xffff8bd41ff0   656  tbz w9, #0, #+0x10 (addr 0xffff8bd42000)
0xffff8bd41ff4   660  ldp x8, x9, [jssp], #16
0xffff8bd41ff8   664  ldp x1, x0, [jssp], #16
0xffff8bd41ffc   668  ret
0xffff8bd42000   672  ldp x8, x9, [jssp], #16
0xffff8bd42004   676  sub csp, jssp, #0x78 (120)
0xffff8bd42008   680  stp x14, x15, [jssp, #-32]!
0xffff8bd4200c   684  stp x18, lr, [jssp, #16]
0xffff8bd42010   688  stp x10, x11, [jssp, #-32]!
0xffff8bd42014   692  stp x12, x13, [jssp, #16]
0xffff8bd42018   696  stp x6, x7, [jssp, #-32]!
0xffff8bd4201c   700  stp x8, x9, [jssp, #16]
0xffff8bd42020   704  stp x2, x3, [jssp, #-24]!
0xffff8bd42024   708  str x4, [jssp, #16]
0xffff8bd42028   712  sub csp, jssp, #0xb0 (176)
0xffff8bd4202c   716  stp d26, d27, [jssp, #-32]!
0xffff8bd42030   720  stp d28, d29, [jssp, #16]
0xffff8bd42034   724  stp d22, d23, [jssp, #-32]!
0xffff8bd42038   728  stp d24, d25, [jssp, #16]
0xffff8bd4203c   732  stp d18, d19, [jssp, #-32]!
0xffff8bd42040   736  stp d20, d21, [jssp, #16]
0xffff8bd42044   740  stp d6, d7, [jssp, #-32]!
0xffff8bd42048   744  stp d16, d17, [jssp, #16]
0xffff8bd4204c   748  stp d2, d3, [jssp, #-32]!
0xffff8bd42050   752  stp d4, d5, [jssp, #16]
0xffff8bd42054   756  stp d0, d1, [jssp, #-16]!
0xffff8bd42058   760  mov x0, x8
0xffff8bd4205c   764  mov x1, x9
0xffff8bd42060   768  ldr x2, pc+1056 (addr 0x0000ffff8bd42480)    ;; external reference (isolate)
0xffff8bd42064   772  ldr x16, pc+1060 (addr 0x0000ffff8bd42488)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd42068   776  and csp, jssp, #0xfffffffffffffff0
0xffff8bd4206c   780  blr x16
0xffff8bd42070   784  ldp d2, d3, [jssp, #16]
0xffff8bd42074   788  ldp d0, d1, [jssp], #32
0xffff8bd42078   792  ldp d6, d7, [jssp, #16]
0xffff8bd4207c   796  ldp d4, d5, [jssp], #32
0xffff8bd42080   800  ldp d18, d19, [jssp, #16]
0xffff8bd42084   804  ldp d16, d17, [jssp], #32
0xffff8bd42088   808  ldp d22, d23, [jssp, #16]
0xffff8bd4208c   812  ldp d20, d21, [jssp], #32
0xffff8bd42090   816  ldp d26, d27, [jssp, #16]
0xffff8bd42094   820  ldp d24, d25, [jssp], #32
0xffff8bd42098   824  ldp d28, d29, [jssp], #16
0xffff8bd4209c   828  ldp x4, x6, [jssp, #16]
0xffff8bd420a0   832  ldp x2, x3, [jssp], #32
0xffff8bd420a4   836  ldp x9, x10, [jssp, #16]
0xffff8bd420a8   840  ldp x7, x8, [jssp], #32
0xffff8bd420ac   844  ldp x13, x14, [jssp, #16]
0xffff8bd420b0   848  ldp x11, x12, [jssp], #32
0xffff8bd420b4   852  ldr lr, [jssp, #16]
0xffff8bd420b8   856  ldp x15, x18, [jssp], #24
0xffff8bd420bc   860  ldp x1, x0, [jssp], #16
0xffff8bd420c0   864  ret
0xffff8bd420c4   868  sub csp, jssp, #0x10 (16)
0xffff8bd420c8   872  stp x1, x0, [jssp, #-16]!
0xffff8bd420cc   876  ldr x5, [x9]
0xffff8bd420d0   880  and x16, x5, #0xfffffffffff00000
0xffff8bd420d4   884  ldr x16, [x16, #8]
0xffff8bd420d8   888  tst x16, #0x18
0xffff8bd420dc   892  b.eq #+0x1f8 (addr 0xffff8bd422d4)
0xffff8bd420e0   896  and x16, x8, #0xfffffffffff00000
0xffff8bd420e4   900  ldr x16, [x16, #8]
0xffff8bd420e8   904  tst x16, #0x18
0xffff8bd420ec   908  b.ne #+0x1e8 (addr 0xffff8bd422d4)
0xffff8bd420f0   912  and x5, x8, #0xfffffffffff00000
0xffff8bd420f4   916  ldr x0, [x5, #104]
0xffff8bd420f8   920  subs x0, x0, #0x1 (1)
0xffff8bd420fc   924  str x0, [x5, #104]
0xffff8bd42100   928  b.mi #+0xe4 (addr 0xffff8bd421e4)
0xffff8bd42104   932  ubfx x16, x8, #8, #12
0xffff8bd42108   936  and x5, x8, #0xfffffffffff00000
0xffff8bd4210c   940  add x5, x5, x16, lsl #2
0xffff8bd42110   944  ubfx x0, x8, #3, #5
0xffff8bd42114   948  ldr x5, [x5, #360]
0xffff8bd42118   952  lsr x5, x5, x0
0xffff8bd4211c   956  tbz w5, #0, #+0x8 (addr 0xffff8bd42124)
0xffff8bd42120   960  tbnz w5, #1, #+0x3c (addr 0xffff8bd4215c)
0xffff8bd42124   964  ldp x1, x0, [jssp], #16
0xffff8bd42128   968  ldr x16, pc+872 (addr 0x0000ffff8bd42490)    ;; external reference (store_buffer_top)
0xffff8bd4212c   972  ldr x5, [x16]
0xffff8bd42130   976  str x9, [x5], #8
0xffff8bd42134   980  str x5, [x16]
0xffff8bd42138   984  tst x5, #0x1ffff
0xffff8bd4213c   988  b.eq #+0x8 (addr 0xffff8bd42144)
0xffff8bd42140   992  ret
0xffff8bd42144   996  sub csp, jssp, #0x8 (8)
0xffff8bd42148  1000  str lr, [jssp, #-8]!
0xffff8bd4214c  1004  ldr x17, pc+844 (addr 0x0000ffff8bd42498)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd42150  1008  blr x17
0xffff8bd42154  1012  ldr lr, [jssp], #8
0xffff8bd42158  1016  ret
0xffff8bd4215c  1020  ldr x5, [x9]
0xffff8bd42160  1024  and x0, x5, #0xfffffffffff00000
0xffff8bd42164  1028  ldr x0, [x0, #8]
0xffff8bd42168  1032  tbz w0, #6, #+0x18 (addr 0xffff8bd42180)
0xffff8bd4216c  1036  and x0, x8, #0xfffffffffff00000
0xffff8bd42170  1040  ldr x0, [x0, #8]
0xffff8bd42174  1044  movz x16, #0x58
0xffff8bd42178  1048  tst x0, x16
0xffff8bd4217c  1052  b.eq #+0x68 (addr 0xffff8bd421e4)
0xffff8bd42180  1056  sub csp, jssp, #0x10 (16)
0xffff8bd42184  1060  stp x8, x9, [jssp, #-16]!
0xffff8bd42188  1064  ubfx x16, x5, #8, #12
0xffff8bd4218c  1068  and x0, x5, #0xfffffffffff00000
0xffff8bd42190  1072  add x0, x0, x16, lsl #2
0xffff8bd42194  1076  ubfx x8, x5, #3, #5
0xffff8bd42198  1080  ldr x9, [x0, #360]
0xffff8bd4219c  1084  lsr x9, x9, x8
0xffff8bd421a0  1088  tbz w9, #0, #+0x40 (addr 0xffff8bd421e0)
0xffff8bd421a4  1092  ldp x8, x9, [jssp], #16
0xffff8bd421a8  1096  ldp x1, x0, [jssp], #16
0xffff8bd421ac  1100  ldr x16, pc+756 (addr 0x0000ffff8bd424a0)    ;; external reference (store_buffer_top)
0xffff8bd421b0  1104  ldr x5, [x16]
0xffff8bd421b4  1108  str x9, [x5], #8
0xffff8bd421b8  1112  str x5, [x16]
0xffff8bd421bc  1116  tst x5, #0x1ffff
0xffff8bd421c0  1120  b.eq #+0x8 (addr 0xffff8bd421c8)
0xffff8bd421c4  1124  ret
0xffff8bd421c8  1128  sub csp, jssp, #0x8 (8)
0xffff8bd421cc  1132  str lr, [jssp, #-8]!
0xffff8bd421d0  1136  ldr x17, pc+728 (addr 0x0000ffff8bd424a8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd421d4  1140  blr x17
0xffff8bd421d8  1144  ldr lr, [jssp], #8
0xffff8bd421dc  1148  ret
0xffff8bd421e0  1152  ldp x8, x9, [jssp], #16
0xffff8bd421e4  1156  sub csp, jssp, #0x78 (120)
0xffff8bd421e8  1160  stp x14, x15, [jssp, #-32]!
0xffff8bd421ec  1164  stp x18, lr, [jssp, #16]
0xffff8bd421f0  1168  stp x10, x11, [jssp, #-32]!
0xffff8bd421f4  1172  stp x12, x13, [jssp, #16]
0xffff8bd421f8  1176  stp x6, x7, [jssp, #-32]!
0xffff8bd421fc  1180  stp x8, x9, [jssp, #16]
0xffff8bd42200  1184  stp x2, x3, [jssp, #-24]!
0xffff8bd42204  1188  str x4, [jssp, #16]
0xffff8bd42208  1192  sub csp, jssp, #0xb0 (176)
0xffff8bd4220c  1196  stp d26, d27, [jssp, #-32]!
0xffff8bd42210  1200  stp d28, d29, [jssp, #16]
0xffff8bd42214  1204  stp d22, d23, [jssp, #-32]!
0xffff8bd42218  1208  stp d24, d25, [jssp, #16]
0xffff8bd4221c  1212  stp d18, d19, [jssp, #-32]!
0xffff8bd42220  1216  stp d20, d21, [jssp, #16]
0xffff8bd42224  1220  stp d6, d7, [jssp, #-32]!
0xffff8bd42228  1224  stp d16, d17, [jssp, #16]
0xffff8bd4222c  1228  stp d2, d3, [jssp, #-32]!
0xffff8bd42230  1232  stp d4, d5, [jssp, #16]
0xffff8bd42234  1236  stp d0, d1, [jssp, #-16]!
0xffff8bd42238  1240  mov x0, x8
0xffff8bd4223c  1244  mov x1, x9
0xffff8bd42240  1248  ldr x2, pc+624 (addr 0x0000ffff8bd424b0)    ;; external reference (isolate)
0xffff8bd42244  1252  ldr x16, pc+628 (addr 0x0000ffff8bd424b8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd42248  1256  and csp, jssp, #0xfffffffffffffff0
0xffff8bd4224c  1260  blr x16
0xffff8bd42250  1264  ldp d2, d3, [jssp, #16]
0xffff8bd42254  1268  ldp d0, d1, [jssp], #32
0xffff8bd42258  1272  ldp d6, d7, [jssp, #16]
0xffff8bd4225c  1276  ldp d4, d5, [jssp], #32
0xffff8bd42260  1280  ldp d18, d19, [jssp, #16]
0xffff8bd42264  1284  ldp d16, d17, [jssp], #32
0xffff8bd42268  1288  ldp d22, d23, [jssp, #16]
0xffff8bd4226c  1292  ldp d20, d21, [jssp], #32
0xffff8bd42270  1296  ldp d26, d27, [jssp, #16]
0xffff8bd42274  1300  ldp d24, d25, [jssp], #32
0xffff8bd42278  1304  ldp d28, d29, [jssp], #16
0xffff8bd4227c  1308  ldp x4, x6, [jssp, #16]
0xffff8bd42280  1312  ldp x2, x3, [jssp], #32
0xffff8bd42284  1316  ldp x9, x10, [jssp, #16]
0xffff8bd42288  1320  ldp x7, x8, [jssp], #32
0xffff8bd4228c  1324  ldp x13, x14, [jssp, #16]
0xffff8bd42290  1328  ldp x11, x12, [jssp], #32
0xffff8bd42294  1332  ldr lr, [jssp, #16]
0xffff8bd42298  1336  ldp x15, x18, [jssp], #24
0xffff8bd4229c  1340  ldp x1, x0, [jssp], #16
0xffff8bd422a0  1344  ldr x16, pc+544 (addr 0x0000ffff8bd424c0)    ;; external reference (store_buffer_top)
0xffff8bd422a4  1348  ldr x5, [x16]
0xffff8bd422a8  1352  str x9, [x5], #8
0xffff8bd422ac  1356  str x5, [x16]
0xffff8bd422b0  1360  tst x5, #0x1ffff
0xffff8bd422b4  1364  b.eq #+0x8 (addr 0xffff8bd422bc)
0xffff8bd422b8  1368  ret
0xffff8bd422bc  1372  sub csp, jssp, #0x8 (8)
0xffff8bd422c0  1376  str lr, [jssp, #-8]!
0xffff8bd422c4  1380  ldr x17, pc+516 (addr 0x0000ffff8bd424c8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd422c8  1384  blr x17
0xffff8bd422cc  1388  ldr lr, [jssp], #8
0xffff8bd422d0  1392  ret
0xffff8bd422d4  1396  and x5, x8, #0xfffffffffff00000
0xffff8bd422d8  1400  ldr x0, [x5, #104]
0xffff8bd422dc  1404  subs x0, x0, #0x1 (1)
0xffff8bd422e0  1408  str x0, [x5, #104]
0xffff8bd422e4  1412  b.mi #+0x84 (addr 0xffff8bd42368)
0xffff8bd422e8  1416  ubfx x16, x8, #8, #12
0xffff8bd422ec  1420  and x5, x8, #0xfffffffffff00000
0xffff8bd422f0  1424  add x5, x5, x16, lsl #2
0xffff8bd422f4  1428  ubfx x0, x8, #3, #5
0xffff8bd422f8  1432  ldr x5, [x5, #360]
0xffff8bd422fc  1436  lsr x5, x5, x0
0xffff8bd42300  1440  tbz w5, #0, #+0x8 (addr 0xffff8bd42308)
0xffff8bd42304  1444  tbnz w5, #1, #+0xc (addr 0xffff8bd42310)
0xffff8bd42308  1448  ldp x1, x0, [jssp], #16
0xffff8bd4230c  1452  ret
0xffff8bd42310  1456  ldr x5, [x9]
0xffff8bd42314  1460  and x0, x5, #0xfffffffffff00000
0xffff8bd42318  1464  ldr x0, [x0, #8]
0xffff8bd4231c  1468  tbz w0, #6, #+0x18 (addr 0xffff8bd42334)
0xffff8bd42320  1472  and x0, x8, #0xfffffffffff00000
0xffff8bd42324  1476  ldr x0, [x0, #8]
0xffff8bd42328  1480  movz x16, #0x58
0xffff8bd4232c  1484  tst x0, x16
0xffff8bd42330  1488  b.eq #+0x38 (addr 0xffff8bd42368)
0xffff8bd42334  1492  sub csp, jssp, #0x10 (16)
0xffff8bd42338  1496  stp x8, x9, [jssp, #-16]!
0xffff8bd4233c  1500  ubfx x16, x5, #8, #12
0xffff8bd42340  1504  and x0, x5, #0xfffffffffff00000
0xffff8bd42344  1508  add x0, x0, x16, lsl #2
0xffff8bd42348  1512  ubfx x8, x5, #3, #5
0xffff8bd4234c  1516  ldr x9, [x0, #360]
0xffff8bd42350  1520  lsr x9, x9, x8
0xffff8bd42354  1524  tbz w9, #0, #+0x10 (addr 0xffff8bd42364)
0xffff8bd42358  1528  ldp x8, x9, [jssp], #16
0xffff8bd4235c  1532  ldp x1, x0, [jssp], #16
0xffff8bd42360  1536  ret
0xffff8bd42364  1540  ldp x8, x9, [jssp], #16
0xffff8bd42368  1544  sub csp, jssp, #0x78 (120)
0xffff8bd4236c  1548  stp x14, x15, [jssp, #-32]!
0xffff8bd42370  1552  stp x18, lr, [jssp, #16]
0xffff8bd42374  1556  stp x10, x11, [jssp, #-32]!
0xffff8bd42378  1560  stp x12, x13, [jssp, #16]
0xffff8bd4237c  1564  stp x6, x7, [jssp, #-32]!
0xffff8bd42380  1568  stp x8, x9, [jssp, #16]
0xffff8bd42384  1572  stp x2, x3, [jssp, #-24]!
0xffff8bd42388  1576  str x4, [jssp, #16]
0xffff8bd4238c  1580  sub csp, jssp, #0xb0 (176)
0xffff8bd42390  1584  stp d26, d27, [jssp, #-32]!
0xffff8bd42394  1588  stp d28, d29, [jssp, #16]
0xffff8bd42398  1592  stp d22, d23, [jssp, #-32]!
0xffff8bd4239c  1596  stp d24, d25, [jssp, #16]
0xffff8bd423a0  1600  stp d18, d19, [jssp, #-32]!
0xffff8bd423a4  1604  stp d20, d21, [jssp, #16]
0xffff8bd423a8  1608  stp d6, d7, [jssp, #-32]!
0xffff8bd423ac  1612  stp d16, d17, [jssp, #16]
0xffff8bd423b0  1616  stp d2, d3, [jssp, #-32]!
0xffff8bd423b4  1620  stp d4, d5, [jssp, #16]
0xffff8bd423b8  1624  stp d0, d1, [jssp, #-16]!
0xffff8bd423bc  1628  mov x0, x8
0xffff8bd423c0  1632  mov x1, x9
0xffff8bd423c4  1636  ldr x2, pc+268 (addr 0x0000ffff8bd424d0)    ;; external reference (isolate)
0xffff8bd423c8  1640  ldr x16, pc+272 (addr 0x0000ffff8bd424d8)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd423cc  1644  and csp, jssp, #0xfffffffffffffff0
0xffff8bd423d0  1648  blr x16
0xffff8bd423d4  1652  ldp d2, d3, [jssp, #16]
0xffff8bd423d8  1656  ldp d0, d1, [jssp], #32
0xffff8bd423dc  1660  ldp d6, d7, [jssp, #16]
0xffff8bd423e0  1664  ldp d4, d5, [jssp], #32
0xffff8bd423e4  1668  ldp d18, d19, [jssp, #16]
0xffff8bd423e8  1672  ldp d16, d17, [jssp], #32
0xffff8bd423ec  1676  ldp d22, d23, [jssp, #16]
0xffff8bd423f0  1680  ldp d20, d21, [jssp], #32
0xffff8bd423f4  1684  ldp d26, d27, [jssp, #16]
0xffff8bd423f8  1688  ldp d24, d25, [jssp], #32
0xffff8bd423fc  1692  ldp d28, d29, [jssp], #16
0xffff8bd42400  1696  ldp x4, x6, [jssp, #16]
0xffff8bd42404  1700  ldp x2, x3, [jssp], #32
0xffff8bd42408  1704  ldp x9, x10, [jssp, #16]
0xffff8bd4240c  1708  ldp x7, x8, [jssp], #32
0xffff8bd42410  1712  ldp x13, x14, [jssp, #16]
0xffff8bd42414  1716  ldp x11, x12, [jssp], #32
0xffff8bd42418  1720  ldr lr, [jssp, #16]
0xffff8bd4241c  1724  ldp x15, x18, [jssp], #24
0xffff8bd42420  1728  ldp x1, x0, [jssp], #16
0xffff8bd42424  1732  ret
0xffff8bd42428  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd4242c  1740  d63f03e0       constant
0xffff8bd42430  1744  2cb8e8c0       constant
0xffff8bd42434  1748  00000000       constant
0xffff8bd42438  1752  8bd065a0       constant
0xffff8bd4243c  1756  0000ffff       constant
0xffff8bd42440  1760  2cb8e8c0       constant
0xffff8bd42444  1764  00000000       constant
0xffff8bd42448  1768  8bd065a0       constant
0xffff8bd4244c  1772  0000ffff       constant
0xffff8bd42450  1776  2cb8e8c0       constant
0xffff8bd42454  1780  00000000       constant
0xffff8bd42458  1784  8bd065a0       constant
0xffff8bd4245c  1788  0000ffff       constant
0xffff8bd42460  1792  2cb8d2d0       constant
0xffff8bd42464  1796  00000000       constant
0xffff8bd42468  1800  00c2d958       constant
0xffff8bd4246c  1804  00000000       constant
0xffff8bd42470  1808  2cb8e8c0       constant
0xffff8bd42474  1812  00000000       constant
0xffff8bd42478  1816  8bd065a0       constant
0xffff8bd4247c  1820  0000ffff       constant
0xffff8bd42480  1824  2cb8d2d0       constant
0xffff8bd42484  1828  00000000       constant
0xffff8bd42488  1832  00c2d958       constant
0xffff8bd4248c  1836  00000000       constant
0xffff8bd42490  1840  2cb8e8c0       constant
0xffff8bd42494  1844  00000000       constant
0xffff8bd42498  1848  8bd065a0       constant
0xffff8bd4249c  1852  0000ffff       constant
0xffff8bd424a0  1856  2cb8e8c0       constant
0xffff8bd424a4  1860  00000000       constant
0xffff8bd424a8  1864  8bd065a0       constant
0xffff8bd424ac  1868  0000ffff       constant
0xffff8bd424b0  1872  2cb8d2d0       constant
0xffff8bd424b4  1876  00000000       constant
0xffff8bd424b8  1880  00c2d958       constant
0xffff8bd424bc  1884  00000000       constant
0xffff8bd424c0  1888  2cb8e8c0       constant
0xffff8bd424c4  1892  00000000       constant
0xffff8bd424c8  1896  8bd065a0       constant
0xffff8bd424cc  1900  0000ffff       constant
0xffff8bd424d0  1904  2cb8d2d0       constant
0xffff8bd424d4  1908  00000000       constant
0xffff8bd424d8  1912  00c2d958       constant
0xffff8bd424dc  1916  00000000       constant


RelocInfo (size = 65)
0xffff8bd41d68  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd41d8c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd41e04  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd41e28  code target (STUB)  (0xffff8bd065a0)
0xffff8bd41e68  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd41e8c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd41efc  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd41f00  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd41f5c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd41f80  code target (STUB)  (0xffff8bd065a0)
0xffff8bd42060  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd42064  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd42128  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd4214c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd421ac  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd421d0  code target (STUB)  (0xffff8bd065a0)
0xffff8bd42240  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd42244  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd422a0  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd422c4  code target (STUB)  (0xffff8bd065a0)
0xffff8bd423c4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd423c8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd42428  constant pool (size 184)


kind = STUB
major_key = FastArrayPushStub
name = FastArrayPushStub
compiler = crankshaft
Instructions (size = 2199)
0xffff8bd42540     0  movz x16, #0xa00000000
0xffff8bd42544     4  sub csp, jssp, #0x10 (16)
0xffff8bd42548     8  stp fp, lr, [jssp, #-16]!
0xffff8bd4254c    12  mov fp, jssp
0xffff8bd42550    16  sub csp, jssp, #0x8 (8)
0xffff8bd42554    20  sub jssp, jssp, #0x8 (8)
0xffff8bd42558    24  stur x16, [fp, #-8]
0xffff8bd4255c    28  mov x2, fp
0xffff8bd42560    32  add w1, w0, #0x2 (2)
0xffff8bd42564    36  ldr x1, [x2, w1, uxtw #3]
0xffff8bd42568    40  tbz w1, #0, #+0x758 (addr 0xffff8bd42cc0)
0xffff8bd4256c    44  ldur x3, [x1, #-1]
0xffff8bd42570    48  ldur x4, [x1, #-1]
0xffff8bd42574    52  ldrb w4, [x4, #11]
0xffff8bd42578    56  cmp x4, #0xbc (188)
0xffff8bd4257c    60  b.ne #+0x74c (addr 0xffff8bd42cc8)
0xffff8bd42580    64  ldrb w4, [x3, #13]
0xffff8bd42584    68  movz w16, #0x5
0xffff8bd42588    72  and w5, w4, w16
0xffff8bd4258c    76  cmp w5, #0x1 (1)
0xffff8bd42590    80  b.ne #+0x568 (addr 0xffff8bd42af8)
0xffff8bd42594    84  ldrb w5, [x3, #12]
0xffff8bd42598    88  and w5, w5, #0x20
0xffff8bd4259c    92  cmp w5, #0x20 (32)
0xffff8bd425a0    96  b.eq #+0x550 (addr 0xffff8bd42af0)
0xffff8bd425a4   100  ldur w5, [x3, #15]
0xffff8bd425a8   104  and w5, w5, #0x100000
0xffff8bd425ac   108  cmp w5, #0x100000 (1048576)
0xffff8bd425b0   112  b.eq #+0x538 (addr 0xffff8bd42ae8)
0xffff8bd425b4   116  ldur x5, [x3, #47]
0xffff8bd425b8   120  ldur w6, [x5, #43]
0xffff8bd425bc   124  and w5, w6, #0x4
0xffff8bd425c0   128  cmp w5, #0x4 (4)
0xffff8bd425c4   132  b.eq #+0x51c (addr 0xffff8bd42ae0)
0xffff8bd425c8   136  ldr x5, [x26, #56]
0xffff8bd425cc   140  ldr x6, [x26, #304]
0xffff8bd425d0   144  ldur x3, [x3, #23]
0xffff8bd425d4   148  cmp x3, x5
0xffff8bd425d8   152  b.eq #+0x40 (addr 0xffff8bd42618)
0xffff8bd425dc   156  ldur x7, [x3, #-1]
0xffff8bd425e0   160  ldrb w8, [x7, #11]
0xffff8bd425e4   164  cmp w8, #0xb4 (180)
0xffff8bd425e8   168  b.le #+0x20 (addr 0xffff8bd42608)
0xffff8bd425ec   172  cmp w8, #0xb6 (182)
0xffff8bd425f0   176  b.eq #+0x18 (addr 0xffff8bd42608)
0xffff8bd425f4   180  ldur x3, [x3, #15]
0xffff8bd425f8   184  cmp x3, x6
0xffff8bd425fc   188  b.ne #+0x14 (addr 0xffff8bd42610)
0xffff8bd42600   192  mov x3, x7
0xffff8bd42604   196  b #-0x34 (addr 0xffff8bd425d0)
0xffff8bd42608   200  ldr x16, pc+1488 (addr 0x0000ffff8bd42bd8)    ;; lazy deoptimization bailout 2
0xffff8bd4260c   204  blr x16
0xffff8bd42610   208  ldr x16, pc+1488 (addr 0x0000ffff8bd42be0)    ;; lazy deoptimization bailout 3
0xffff8bd42614   212  blr x16
0xffff8bd42618   216  and w3, w4, #0xf8
0xffff8bd4261c   220  lsr w3, w3, #3
0xffff8bd42620   224  cmp w3, #0x1 (1)
0xffff8bd42624   228  b.le #+0x330 (addr 0xffff8bd42954)
0xffff8bd42628   232  cmp w3, #0x3 (3)
0xffff8bd4262c   236  b.le #+0x1b8 (addr 0xffff8bd427e4)
0xffff8bd42630   240  cmp w3, #0x5 (5)
0xffff8bd42634   244  b.le #+0xc (addr 0xffff8bd42640)
0xffff8bd42638   248  ldr x16, pc+1456 (addr 0x0000ffff8bd42be8)    ;; lazy deoptimization bailout 4
0xffff8bd4263c   252  blr x16
0xffff8bd42640   256  movz x3, #0x0
0xffff8bd42644   260  cmp w0, w3
0xffff8bd42648   264  b.le #+0x34 (addr 0xffff8bd4267c)
0xffff8bd4264c   268  sub w4, w0, w3
0xffff8bd42650   272  add w4, w4, #0x1 (1)
0xffff8bd42654   276  ldr x4, [x2, w4, uxtw #3]
0xffff8bd42658   280  tbz w4, #0, #+0x14 (addr 0xffff8bd4266c)
0xffff8bd4265c   284  ldur x4, [x4, #-1]
0xffff8bd42660   288  ldr x16, pc+1480 (addr 0x0000ffff8bd42c28)    ;; object: 0x5f504411 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd42664   292  cmp x4, x16
0xffff8bd42668   296  b.ne #+0xc (addr 0xffff8bd42674)
0xffff8bd4266c   300  add w3, w3, #0x1 (1)
0xffff8bd42670   304  b #-0x2c (addr 0xffff8bd42644)
0xffff8bd42674   308  ldr x16, pc+1404 (addr 0x0000ffff8bd42bf0)    ;; lazy deoptimization bailout 5
0xffff8bd42678   312  blr x16
0xffff8bd4267c   316  ldur w3, [x1, #27]
0xffff8bd42680   320  adds w4, w3, w0
0xffff8bd42684   324  b.vs #+0x64c (addr 0xffff8bd42cd0)
0xffff8bd42688   328  subs w5, w4, #0x1 (1)
0xffff8bd4268c   332  b.vs #+0x64c (addr 0xffff8bd42cd8)
0xffff8bd42690   336  ldur x6, [x1, #15]
0xffff8bd42694   340  cmp w3, w5
0xffff8bd42698   344  b.le #+0x10 (addr 0xffff8bd426a8)
0xffff8bd4269c   348  cmp w5, w3
0xffff8bd426a0   352  b.hs #+0x640 (addr 0xffff8bd42ce0)
0xffff8bd426a4   356  b #+0xe4 (addr 0xffff8bd42788)
0xffff8bd426a8   360  ldur w7, [x6, #11]
0xffff8bd426ac   364  cmp w7, w5
0xffff8bd426b0   368  b.gt #+0xcc (addr 0xffff8bd4277c)
0xffff8bd426b4   372  adds w7, w7, #0x400 (1024)
0xffff8bd426b8   376  b.vs #+0x630 (addr 0xffff8bd42ce8)
0xffff8bd426bc   380  cmp w5, w7
0xffff8bd426c0   384  b.hs #+0x630 (addr 0xffff8bd42cf0)
0xffff8bd426c4   388  add w7, w5, w5, lsr #1
0xffff8bd426c8   392  add w7, w7, #0x10 (16)
0xffff8bd426cc   396  movz w16, #0x95ff
0xffff8bd426d0   400  cmp w7, w16, lsl #1
0xffff8bd426d4   404  b.hs #+0x624 (addr 0xffff8bd42cf8)
0xffff8bd426d8   408  lsl x8, x7, #32
0xffff8bd426dc   412  lsl w9, w7, #3
0xffff8bd426e0   416  add w7, w9, #0x10 (16)
0xffff8bd426e4   420  sxtw x7, w7
0xffff8bd426e8   424  movz x9, #0xe2c0
0xffff8bd426ec   428  movk x9, #0x2cb8, lsl #16
0xffff8bd426f0   432  ldp x11, x16, [x9]
0xffff8bd426f4   436  adds x10, x11, x7
0xffff8bd426f8   440  ccmp x10, x16, #nzCv, lo
0xffff8bd426fc   444  b.hi #+0x404 (addr 0xffff8bd42b00)
0xffff8bd42700   448  str x10, [x9]
0xffff8bd42704   452  orr x11, x11, #0x1
0xffff8bd42708   456  ldr x7, pc+1320 (addr 0x0000ffff8bd42c30)    ;; object: 0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd4270c   460  stur x7, [x11, #-1]
0xffff8bd42710   464  stur x8, [x11, #7]
0xffff8bd42714   468  ldr d0, pc+1292 (addr 0x0000ffff8bd42c20)
0xffff8bd42718   472  ldur w7, [x11, #11]
0xffff8bd4271c   476  cmp w3, w7
0xffff8bd42720   480  b.ge #+0x14 (addr 0xffff8bd42734)
0xffff8bd42724   484  sub w7, w7, #0x1 (1)
0xffff8bd42728   488  add x8, x11, #0xf (15)
0xffff8bd4272c   492  str d0, [x8, w7, sxtw #3]
0xffff8bd42730   496  b #-0x14 (addr 0xffff8bd4271c)
0xffff8bd42734   500  mov x7, x3
0xffff8bd42738   504  cmp w7, #0x0 (0)
0xffff8bd4273c   508  b.le #+0x1c (addr 0xffff8bd42758)
0xffff8bd42740   512  sub w7, w7, #0x1 (1)
0xffff8bd42744   516  add x8, x6, #0xf (15)
0xffff8bd42748   520  ldr d0, [x8, w7, sxtw #3]
0xffff8bd4274c   524  add x8, x11, #0xf (15)
0xffff8bd42750   528  str d0, [x8, w7, sxtw #3]
0xffff8bd42754   532  b #-0x1c (addr 0xffff8bd42738)
0xffff8bd42758   536  mov x6, x11
0xffff8bd4275c   540  stur x6, [x1, #15]
0xffff8bd42760   544  add x7, x1, #0xf (15)
0xffff8bd42764   548  and x6, x1, #0xfffffffffff00000
0xffff8bd42768   552  ldr x6, [x6, #8]
0xffff8bd4276c   556  tbz w6, #2, #+0xc (addr 0xffff8bd42778)
0xffff8bd42770   560  ldr x16, pc+1224 (addr 0x0000ffff8bd42c38)    ;; code: STUB, RecordWriteStub, minor: 72897
0xffff8bd42774   564  blr x16
0xffff8bd42778   568  mov x6, x11
0xffff8bd4277c   572  add w5, w5, #0x1 (1)
0xffff8bd42780   576  lsl x5, x5, #32
0xffff8bd42784   580  stur x5, [x1, #23]
0xffff8bd42788   584  movz x1, #0x0
0xffff8bd4278c   588  cmp w0, w1
0xffff8bd42790   592  b.le #+0x4c (addr 0xffff8bd427dc)
0xffff8bd42794   596  sub w5, w0, w1
0xffff8bd42798   600  add w5, w5, #0x1 (1)
0xffff8bd4279c   604  ldr x5, [x2, w5, uxtw #3]
0xffff8bd427a0   608  adds w7, w1, w3
0xffff8bd427a4   612  b.vs #+0x55c (addr 0xffff8bd42d00)
0xffff8bd427a8   616  tbz w5, #0, #+0x1c (addr 0xffff8bd427c4)
0xffff8bd427ac   620  ldur x16, [x5, #-1]
0xffff8bd427b0   624  ldr x17, [x26, #120]
0xffff8bd427b4   628  cmp x16, x17
0xffff8bd427b8   632  b.ne #+0x550 (addr 0xffff8bd42d08)
0xffff8bd427bc   636  ldur d0, [x5, #7]
0xffff8bd427c0   640  b #+0x8 (addr 0xffff8bd427c8)
0xffff8bd427c4   644  scvtf d0, x5, #32
0xffff8bd427c8   648  add x5, x6, #0xf (15)
0xffff8bd427cc   652  fsub d29, d0, d15
0xffff8bd427d0   656  str d29, [x5, w7, sxtw #3]
0xffff8bd427d4   660  add w1, w1, #0x1 (1)
0xffff8bd427d8   664  b #-0x4c (addr 0xffff8bd4278c)
0xffff8bd427dc   668  lsl x1, x4, #32
0xffff8bd427e0   672  b #+0x2e4 (addr 0xffff8bd42ac4)
0xffff8bd427e4   676  ldur w3, [x1, #27]
0xffff8bd427e8   680  adds w4, w3, w0
0xffff8bd427ec   684  b.vs #+0x524 (addr 0xffff8bd42d10)
0xffff8bd427f0   688  subs w5, w4, #0x1 (1)
0xffff8bd427f4   692  b.vs #+0x524 (addr 0xffff8bd42d18)
0xffff8bd427f8   696  ldur x6, [x1, #15]
0xffff8bd427fc   700  cmp w3, w5
0xffff8bd42800   704  b.le #+0x10 (addr 0xffff8bd42810)
0xffff8bd42804   708  cmp w5, w3
0xffff8bd42808   712  b.hs #+0x518 (addr 0xffff8bd42d20)
0xffff8bd4280c   716  b #+0xe4 (addr 0xffff8bd428f0)
0xffff8bd42810   720  ldur w7, [x6, #11]
0xffff8bd42814   724  cmp w7, w5
0xffff8bd42818   728  b.gt #+0xcc (addr 0xffff8bd428e4)
0xffff8bd4281c   732  adds w7, w7, #0x400 (1024)
0xffff8bd42820   736  b.vs #+0x508 (addr 0xffff8bd42d28)
0xffff8bd42824   740  cmp w5, w7
0xffff8bd42828   744  b.hs #+0x508 (addr 0xffff8bd42d30)
0xffff8bd4282c   748  add w7, w5, w5, lsr #1
0xffff8bd42830   752  add w7, w7, #0x10 (16)
0xffff8bd42834   756  movz w16, #0x95ff
0xffff8bd42838   760  cmp w7, w16, lsl #1
0xffff8bd4283c   764  b.hs #+0x4fc (addr 0xffff8bd42d38)
0xffff8bd42840   768  lsl x8, x7, #32
0xffff8bd42844   772  lsl w9, w7, #3
0xffff8bd42848   776  add w7, w9, #0x10 (16)
0xffff8bd4284c   780  sxtw x7, w7
0xffff8bd42850   784  movz x9, #0xe2c0
0xffff8bd42854   788  movk x9, #0x2cb8, lsl #16
0xffff8bd42858   792  ldp x11, x16, [x9]
0xffff8bd4285c   796  adds x10, x11, x7
0xffff8bd42860   800  ccmp x10, x16, #nzCv, lo
0xffff8bd42864   804  b.hi #+0x2e0 (addr 0xffff8bd42b44)
0xffff8bd42868   808  str x10, [x9]
0xffff8bd4286c   812  orr x11, x11, #0x1
0xffff8bd42870   816  ldr x7, pc+976 (addr 0x0000ffff8bd42c40)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd42874   820  stur x7, [x11, #-1]
0xffff8bd42878   824  stur x8, [x11, #7]
0xffff8bd4287c   828  ldur w7, [x11, #11]
0xffff8bd42880   832  cmp w3, w7
0xffff8bd42884   836  b.ge #+0x18 (addr 0xffff8bd4289c)
0xffff8bd42888   840  sub w7, w7, #0x1 (1)
0xffff8bd4288c   844  ldr x8, pc+956 (addr 0x0000ffff8bd42c48)    ;; object: 0x26c04519 <the hole>
0xffff8bd42890   848  add x9, x11, #0xf (15)
0xffff8bd42894   852  str x8, [x9, w7, sxtw #3]
0xffff8bd42898   856  b #-0x18 (addr 0xffff8bd42880)
0xffff8bd4289c   860  mov x7, x3
0xffff8bd428a0   864  cmp w7, #0x0 (0)
0xffff8bd428a4   868  b.le #+0x1c (addr 0xffff8bd428c0)
0xffff8bd428a8   872  sub w7, w7, #0x1 (1)
0xffff8bd428ac   876  add x8, x6, #0xf (15)
0xffff8bd428b0   880  ldr x9, [x8, w7, sxtw #3]
0xffff8bd428b4   884  add x8, x11, #0xf (15)
0xffff8bd428b8   888  str x9, [x8, w7, sxtw #3]
0xffff8bd428bc   892  b #-0x1c (addr 0xffff8bd428a0)
0xffff8bd428c0   896  mov x6, x11
0xffff8bd428c4   900  stur x6, [x1, #15]
0xffff8bd428c8   904  add x7, x1, #0xf (15)
0xffff8bd428cc   908  and x6, x1, #0xfffffffffff00000
0xffff8bd428d0   912  ldr x6, [x6, #8]
0xffff8bd428d4   916  tbz w6, #2, #+0xc (addr 0xffff8bd428e0)
0xffff8bd428d8   920  ldr x16, pc+888 (addr 0x0000ffff8bd42c50)    ;; code: STUB, RecordWriteStub, minor: 72897
0xffff8bd428dc   924  blr x16
0xffff8bd428e0   928  mov x6, x11
0xffff8bd428e4   932  add w5, w5, #0x1 (1)
0xffff8bd428e8   936  lsl x5, x5, #32
0xffff8bd428ec   940  stur x5, [x1, #23]
0xffff8bd428f0   944  movz x1, #0x0
0xffff8bd428f4   948  cmp w0, w1
0xffff8bd428f8   952  b.le #+0x54 (addr 0xffff8bd4294c)
0xffff8bd428fc   956  sub w5, w0, w1
0xffff8bd42900   960  add w5, w5, #0x1 (1)
0xffff8bd42904   964  ldr x5, [x2, w5, uxtw #3]
0xffff8bd42908   968  adds w7, w1, w3
0xffff8bd4290c   972  b.vs #+0x434 (addr 0xffff8bd42d40)
0xffff8bd42910   976  mov x8, x6
0xffff8bd42914   980  add x9, x8, #0xf (15)
0xffff8bd42918   984  str x5, [x9, w7, sxtw #3]
0xffff8bd4291c   988  add x9, x9, w7, sxtw #3
0xffff8bd42920   992  tbz w5, #0, #+0x24 (addr 0xffff8bd42944)
0xffff8bd42924   996  and x5, x5, #0xfffffffffff00000
0xffff8bd42928  1000  ldr x5, [x5, #8]
0xffff8bd4292c  1004  tbz w5, #1, #+0x18 (addr 0xffff8bd42944)
0xffff8bd42930  1008  and x5, x8, #0xfffffffffff00000
0xffff8bd42934  1012  ldr x5, [x5, #8]
0xffff8bd42938  1016  tbz w5, #2, #+0xc (addr 0xffff8bd42944)
0xffff8bd4293c  1020  ldr x16, pc+796 (addr 0x0000ffff8bd42c58)    ;; code: STUB, RecordWriteStub, minor: 74920
0xffff8bd42940  1024  blr x16
0xffff8bd42944  1028  add w1, w1, #0x1 (1)
0xffff8bd42948  1032  b #-0x54 (addr 0xffff8bd428f4)
0xffff8bd4294c  1036  lsl x1, x4, #32
0xffff8bd42950  1040  b #+0x174 (addr 0xffff8bd42ac4)
0xffff8bd42954  1044  movz x3, #0x0
0xffff8bd42958  1048  cmp w0, w3
0xffff8bd4295c  1052  b.le #+0x24 (addr 0xffff8bd42980)
0xffff8bd42960  1056  sub w4, w0, w3
0xffff8bd42964  1060  add w4, w4, #0x1 (1)
0xffff8bd42968  1064  ldr x4, [x2, w4, uxtw #3]
0xffff8bd4296c  1068  tbnz w4, #0, #+0xc (addr 0xffff8bd42978)
0xffff8bd42970  1072  add w3, w3, #0x1 (1)
0xffff8bd42974  1076  b #-0x1c (addr 0xffff8bd42958)
0xffff8bd42978  1080  ldr x16, pc+640 (addr 0x0000ffff8bd42bf8)    ;; lazy deoptimization bailout 21
0xffff8bd4297c  1084  blr x16
0xffff8bd42980  1088  ldur w3, [x1, #27]
0xffff8bd42984  1092  adds w4, w3, w0
0xffff8bd42988  1096  b.vs #+0x3c0 (addr 0xffff8bd42d48)
0xffff8bd4298c  1100  subs w5, w4, #0x1 (1)
0xffff8bd42990  1104  b.vs #+0x3c0 (addr 0xffff8bd42d50)
0xffff8bd42994  1108  ldur x6, [x1, #15]
0xffff8bd42998  1112  cmp w3, w5
0xffff8bd4299c  1116  b.le #+0x10 (addr 0xffff8bd429ac)
0xffff8bd429a0  1120  cmp w5, w3
0xffff8bd429a4  1124  b.hs #+0x3b4 (addr 0xffff8bd42d58)
0xffff8bd429a8  1128  b #+0xe4 (addr 0xffff8bd42a8c)
0xffff8bd429ac  1132  ldur w7, [x6, #11]
0xffff8bd429b0  1136  cmp w7, w5
0xffff8bd429b4  1140  b.gt #+0xcc (addr 0xffff8bd42a80)
0xffff8bd429b8  1144  adds w7, w7, #0x400 (1024)
0xffff8bd429bc  1148  b.vs #+0x3a4 (addr 0xffff8bd42d60)
0xffff8bd429c0  1152  cmp w5, w7
0xffff8bd429c4  1156  b.hs #+0x3a4 (addr 0xffff8bd42d68)
0xffff8bd429c8  1160  add w7, w5, w5, lsr #1
0xffff8bd429cc  1164  add w7, w7, #0x10 (16)
0xffff8bd429d0  1168  movz w16, #0x95ff
0xffff8bd429d4  1172  cmp w7, w16, lsl #1
0xffff8bd429d8  1176  b.hs #+0x398 (addr 0xffff8bd42d70)
0xffff8bd429dc  1180  lsl x8, x7, #32
0xffff8bd429e0  1184  lsl w9, w7, #3
0xffff8bd429e4  1188  add w7, w9, #0x10 (16)
0xffff8bd429e8  1192  sxtw x7, w7
0xffff8bd429ec  1196  movz x9, #0xe2c0
0xffff8bd429f0  1200  movk x9, #0x2cb8, lsl #16
0xffff8bd429f4  1204  ldp x11, x16, [x9]
0xffff8bd429f8  1208  adds x10, x11, x7
0xffff8bd429fc  1212  ccmp x10, x16, #nzCv, lo
0xffff8bd42a00  1216  b.hi #+0x188 (addr 0xffff8bd42b88)
0xffff8bd42a04  1220  str x10, [x9]
0xffff8bd42a08  1224  orr x11, x11, #0x1
0xffff8bd42a0c  1228  ldr x7, pc+596 (addr 0x0000ffff8bd42c60)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd42a10  1232  stur x7, [x11, #-1]
0xffff8bd42a14  1236  stur x8, [x11, #7]
0xffff8bd42a18  1240  ldur w7, [x11, #11]
0xffff8bd42a1c  1244  cmp w3, w7
0xffff8bd42a20  1248  b.ge #+0x18 (addr 0xffff8bd42a38)
0xffff8bd42a24  1252  sub w7, w7, #0x1 (1)
0xffff8bd42a28  1256  ldr x8, pc+576 (addr 0x0000ffff8bd42c68)    ;; object: 0x26c04519 <the hole>
0xffff8bd42a2c  1260  add x9, x11, #0xf (15)
0xffff8bd42a30  1264  str x8, [x9, w7, sxtw #3]
0xffff8bd42a34  1268  b #-0x18 (addr 0xffff8bd42a1c)
0xffff8bd42a38  1272  mov x7, x3
0xffff8bd42a3c  1276  cmp w7, #0x0 (0)
0xffff8bd42a40  1280  b.le #+0x1c (addr 0xffff8bd42a5c)
0xffff8bd42a44  1284  sub w7, w7, #0x1 (1)
0xffff8bd42a48  1288  add x8, x6, #0xf (15)
0xffff8bd42a4c  1292  ldr x9, [x8, w7, sxtw #3]
0xffff8bd42a50  1296  add x8, x11, #0xf (15)
0xffff8bd42a54  1300  str x9, [x8, w7, sxtw #3]
0xffff8bd42a58  1304  b #-0x1c (addr 0xffff8bd42a3c)
0xffff8bd42a5c  1308  mov x6, x11
0xffff8bd42a60  1312  stur x6, [x1, #15]
0xffff8bd42a64  1316  add x7, x1, #0xf (15)
0xffff8bd42a68  1320  and x6, x1, #0xfffffffffff00000
0xffff8bd42a6c  1324  ldr x6, [x6, #8]
0xffff8bd42a70  1328  tbz w6, #2, #+0xc (addr 0xffff8bd42a7c)
0xffff8bd42a74  1332  ldr x16, pc+508 (addr 0x0000ffff8bd42c70)    ;; code: STUB, RecordWriteStub, minor: 72897
0xffff8bd42a78  1336  blr x16
0xffff8bd42a7c  1340  mov x6, x11
0xffff8bd42a80  1344  add w5, w5, #0x1 (1)
0xffff8bd42a84  1348  lsl x5, x5, #32
0xffff8bd42a88  1352  stur x5, [x1, #23]
0xffff8bd42a8c  1356  movz x1, #0x0
0xffff8bd42a90  1360  cmp w0, w1
0xffff8bd42a94  1364  b.le #+0x2c (addr 0xffff8bd42ac0)
0xffff8bd42a98  1368  sub w5, w0, w1
0xffff8bd42a9c  1372  add w5, w5, #0x1 (1)
0xffff8bd42aa0  1376  ldr x5, [x2, w5, uxtw #3]
0xffff8bd42aa4  1380  adds w7, w1, w3
0xffff8bd42aa8  1384  b.vs #+0x2d0 (addr 0xffff8bd42d78)
0xffff8bd42aac  1388  tbnz w5, #0, #+0x2d4 (addr 0xffff8bd42d80)
0xffff8bd42ab0  1392  add x8, x6, #0xf (15)
0xffff8bd42ab4  1396  str x5, [x8, w7, sxtw #3]
0xffff8bd42ab8  1400  add w1, w1, #0x1 (1)
0xffff8bd42abc  1404  b #-0x2c (addr 0xffff8bd42a90)
0xffff8bd42ac0  1408  lsl x1, x4, #32
0xffff8bd42ac4  1412  add w0, w0, #0x1 (1)
0xffff8bd42ac8  1416  lsl x2, x0, #32
0xffff8bd42acc  1420  mov x0, x1
0xffff8bd42ad0  1424  mov jssp, fp
0xffff8bd42ad4  1428  ldp fp, lr, [jssp], #16
0xffff8bd42ad8  1432  add jssp, jssp, x2, lsr #29
0xffff8bd42adc  1436  ret
0xffff8bd42ae0  1440  ldr x16, pc+288 (addr 0x0000ffff8bd42c00)    ;; lazy deoptimization bailout 30
0xffff8bd42ae4  1444  blr x16
0xffff8bd42ae8  1448  ldr x16, pc+288 (addr 0x0000ffff8bd42c08)    ;; lazy deoptimization bailout 31
0xffff8bd42aec  1452  blr x16
0xffff8bd42af0  1456  ldr x16, pc+288 (addr 0x0000ffff8bd42c10)    ;; lazy deoptimization bailout 32
0xffff8bd42af4  1460  blr x16
0xffff8bd42af8  1464  ldr x16, pc+288 (addr 0x0000ffff8bd42c18)    ;; lazy deoptimization bailout 33
0xffff8bd42afc  1468  blr x16
0xffff8bd42b00  1472  movz x11, #0x0
0xffff8bd42b04  1476  mov x16, lr
0xffff8bd42b08  1480  ldr x17, pc+368 (addr 0x0000ffff8bd42c78)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd42b0c  1484  blr x17
0xffff8bd42b10  1488  lsl x0, x7, #32
0xffff8bd42b14  1492  movz x10, #0x100000000
0xffff8bd42b18  1496  sub csp, jssp, #0x10 (16)
0xffff8bd42b1c  1500  stp x10, x0, [jssp, #-16]!
0xffff8bd42b20  1504  movz x0, #0x2
0xffff8bd42b24  1508  movz x1, #0x5b88
0xffff8bd42b28  1512  movk x1, #0xe2, lsl #16
0xffff8bd42b2c  1516  ldr x16, pc+340 (addr 0x0000ffff8bd42c80)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd42b30  1520  blr x16
0xffff8bd42b34  1524  str x0, [jssp, #88]
0xffff8bd42b38  1528  ldr x16, pc+336 (addr 0x0000ffff8bd42c88)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd42b3c  1532  blr x16
0xffff8bd42b40  1536  b #-0x438 (addr 0xffff8bd42708)
0xffff8bd42b44  1540  movz x11, #0x0
0xffff8bd42b48  1544  mov x16, lr
0xffff8bd42b4c  1548  ldr x17, pc+324 (addr 0x0000ffff8bd42c90)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd42b50  1552  blr x17
0xffff8bd42b54  1556  lsl x0, x7, #32
0xffff8bd42b58  1560  movz x10, #0x0
0xffff8bd42b5c  1564  sub csp, jssp, #0x10 (16)
0xffff8bd42b60  1568  stp x10, x0, [jssp, #-16]!
0xffff8bd42b64  1572  movz x0, #0x2
0xffff8bd42b68  1576  movz x1, #0x5b88
0xffff8bd42b6c  1580  movk x1, #0xe2, lsl #16
0xffff8bd42b70  1584  ldr x16, pc+296 (addr 0x0000ffff8bd42c98)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd42b74  1588  blr x16
0xffff8bd42b78  1592  str x0, [jssp, #88]
0xffff8bd42b7c  1596  ldr x16, pc+292 (addr 0x0000ffff8bd42ca0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd42b80  1600  blr x16
0xffff8bd42b84  1604  b #-0x314 (addr 0xffff8bd42870)
0xffff8bd42b88  1608  movz x11, #0x0
0xffff8bd42b8c  1612  mov x16, lr
0xffff8bd42b90  1616  ldr x17, pc+280 (addr 0x0000ffff8bd42ca8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd42b94  1620  blr x17
0xffff8bd42b98  1624  lsl x0, x7, #32
0xffff8bd42b9c  1628  movz x10, #0x0
0xffff8bd42ba0  1632  sub csp, jssp, #0x10 (16)
0xffff8bd42ba4  1636  stp x10, x0, [jssp, #-16]!
0xffff8bd42ba8  1640  movz x0, #0x2
0xffff8bd42bac  1644  movz x1, #0x5b88
0xffff8bd42bb0  1648  movk x1, #0xe2, lsl #16
0xffff8bd42bb4  1652  ldr x16, pc+252 (addr 0x0000ffff8bd42cb0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd42bb8  1656  blr x16
0xffff8bd42bbc  1660  str x0, [jssp, #88]
0xffff8bd42bc0  1664  ldr x16, pc+248 (addr 0x0000ffff8bd42cb8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd42bc4  1668  blr x16
0xffff8bd42bc8  1672  b #-0x1bc (addr 0xffff8bd42a0c)
0xffff8bd42bcc  1676  5800079f       constant pool begin (num_const = 60)    ;; constant pool
0xffff8bd42bd0  1680  d63f03e0       constant
0xffff8bd42bd4  1684  d503201f       constant
0xffff8bd42bd8  1688  8bb06010       constant
0xffff8bd42bdc  1692  0000ffff       constant
0xffff8bd42be0  1696  8bb06018       constant
0xffff8bd42be4  1700  0000ffff       constant
0xffff8bd42be8  1704  8bb06020       constant
0xffff8bd42bec  1708  0000ffff       constant
0xffff8bd42bf0  1712  8bb06028       constant
0xffff8bd42bf4  1716  0000ffff       constant
0xffff8bd42bf8  1720  8bb060a8       constant
0xffff8bd42bfc  1724  0000ffff       constant
0xffff8bd42c00  1728  8bb060f0       constant
0xffff8bd42c04  1732  0000ffff       constant
0xffff8bd42c08  1736  8bb060f8       constant
0xffff8bd42c0c  1740  0000ffff       constant
0xffff8bd42c10  1744  8bb06100       constant
0xffff8bd42c14  1748  0000ffff       constant
0xffff8bd42c18  1752  8bb06108       constant
0xffff8bd42c1c  1756  0000ffff       constant
0xffff8bd42c20  1760  fff7ffff       constant
0xffff8bd42c24  1764  fff7ffff       constant
0xffff8bd42c28  1768  5f504411       constant
0xffff8bd42c2c  1772  00000000       constant
0xffff8bd42c30  1776  5f5052d9       constant
0xffff8bd42c34  1780  00000000       constant
0xffff8bd42c38  1784  8bd41580       constant
0xffff8bd42c3c  1788  0000ffff       constant
0xffff8bd42c40  1792  5f504259       constant
0xffff8bd42c44  1796  00000000       constant
0xffff8bd42c48  1800  26c04519       constant
0xffff8bd42c4c  1804  00000000       constant
0xffff8bd42c50  1808  8bd41580       constant
0xffff8bd42c54  1812  0000ffff       constant
0xffff8bd42c58  1816  8bd41d60       constant
0xffff8bd42c5c  1820  0000ffff       constant
0xffff8bd42c60  1824  5f504259       constant
0xffff8bd42c64  1828  00000000       constant
0xffff8bd42c68  1832  26c04519       constant
0xffff8bd42c6c  1836  00000000       constant
0xffff8bd42c70  1840  8bd41580       constant
0xffff8bd42c74  1844  0000ffff       constant
0xffff8bd42c78  1848  8bd06820       constant
0xffff8bd42c7c  1852  0000ffff       constant
0xffff8bd42c80  1856  8bd06260       constant
0xffff8bd42c84  1860  0000ffff       constant
0xffff8bd42c88  1864  8bd068e0       constant
0xffff8bd42c8c  1868  0000ffff       constant
0xffff8bd42c90  1872  8bd06820       constant
0xffff8bd42c94  1876  0000ffff       constant
0xffff8bd42c98  1880  8bd06260       constant
0xffff8bd42c9c  1884  0000ffff       constant
0xffff8bd42ca0  1888  8bd068e0       constant
0xffff8bd42ca4  1892  0000ffff       constant
0xffff8bd42ca8  1896  8bd06820       constant
0xffff8bd42cac  1900  0000ffff       constant
0xffff8bd42cb0  1904  8bd06260       constant
0xffff8bd42cb4  1908  0000ffff       constant
0xffff8bd42cb8  1912  8bd068e0       constant
0xffff8bd42cbc  1916  0000ffff       constant
0xffff8bd42cc0  1920  movz x16, #0x0
0xffff8bd42cc4  1924  bl #+0xc4 (addr 0xffff8bd42d88)
0xffff8bd42cc8  1928  movz x16, #0x8
0xffff8bd42ccc  1932  bl #+0xbc (addr 0xffff8bd42d88)
0xffff8bd42cd0  1936  movz x16, #0x30
0xffff8bd42cd4  1940  bl #+0xb4 (addr 0xffff8bd42d88)
0xffff8bd42cd8  1944  movz x16, #0x38
0xffff8bd42cdc  1948  bl #+0xac (addr 0xffff8bd42d88)
0xffff8bd42ce0  1952  movz x16, #0x40
0xffff8bd42ce4  1956  bl #+0xa4 (addr 0xffff8bd42d88)
0xffff8bd42ce8  1960  movz x16, #0x48
0xffff8bd42cec  1964  bl #+0x9c (addr 0xffff8bd42d88)
0xffff8bd42cf0  1968  movz x16, #0x50
0xffff8bd42cf4  1972  bl #+0x94 (addr 0xffff8bd42d88)
0xffff8bd42cf8  1976  movz x16, #0x58
0xffff8bd42cfc  1980  bl #+0x8c (addr 0xffff8bd42d88)
0xffff8bd42d00  1984  movz x16, #0x60
0xffff8bd42d04  1988  bl #+0x84 (addr 0xffff8bd42d88)
0xffff8bd42d08  1992  movz x16, #0x68
0xffff8bd42d0c  1996  bl #+0x7c (addr 0xffff8bd42d88)
0xffff8bd42d10  2000  movz x16, #0x70
0xffff8bd42d14  2004  bl #+0x74 (addr 0xffff8bd42d88)
0xffff8bd42d18  2008  movz x16, #0x78
0xffff8bd42d1c  2012  bl #+0x6c (addr 0xffff8bd42d88)
0xffff8bd42d20  2016  movz x16, #0x80
0xffff8bd42d24  2020  bl #+0x64 (addr 0xffff8bd42d88)
0xffff8bd42d28  2024  movz x16, #0x88
0xffff8bd42d2c  2028  bl #+0x5c (addr 0xffff8bd42d88)
0xffff8bd42d30  2032  movz x16, #0x90
0xffff8bd42d34  2036  bl #+0x54 (addr 0xffff8bd42d88)
0xffff8bd42d38  2040  movz x16, #0x98
0xffff8bd42d3c  2044  bl #+0x4c (addr 0xffff8bd42d88)
0xffff8bd42d40  2048  movz x16, #0xa0
0xffff8bd42d44  2052  bl #+0x44 (addr 0xffff8bd42d88)
0xffff8bd42d48  2056  movz x16, #0xb0
0xffff8bd42d4c  2060  bl #+0x3c (addr 0xffff8bd42d88)
0xffff8bd42d50  2064  movz x16, #0xb8
0xffff8bd42d54  2068  bl #+0x34 (addr 0xffff8bd42d88)
0xffff8bd42d58  2072  movz x16, #0xc0
0xffff8bd42d5c  2076  bl #+0x2c (addr 0xffff8bd42d88)
0xffff8bd42d60  2080  movz x16, #0xc8
0xffff8bd42d64  2084  bl #+0x24 (addr 0xffff8bd42d88)
0xffff8bd42d68  2088  movz x16, #0xd0
0xffff8bd42d6c  2092  bl #+0x1c (addr 0xffff8bd42d88)
0xffff8bd42d70  2096  movz x16, #0xd8
0xffff8bd42d74  2100  bl #+0x14 (addr 0xffff8bd42d88)
0xffff8bd42d78  2104  movz x16, #0xe0
0xffff8bd42d7c  2108  bl #+0xc (addr 0xffff8bd42d88)
0xffff8bd42d80  2112  movz x16, #0xe8
0xffff8bd42d84  2116  bl #+0x4 (addr 0xffff8bd42d88)
0xffff8bd42d88  2120  ldr x17, pc+24 (addr 0x0000ffff8bd42da0)    ;; lazy deoptimization bailout 0
0xffff8bd42d8c  2124  add x17, x17, x16
0xffff8bd42d90  2128  br x17
0xffff8bd42d94  2132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd42d98  2136  d63f03e0       constant
0xffff8bd42d9c  2140  d503201f       constant
0xffff8bd42da0  2144  8bb06000       constant
0xffff8bd42da4  2148  0000ffff       constant


Safepoints (size = 47)
0xffff8bd42b34  1524  000 | x1 | x2 | x6 | x11 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd42b78  1592  000 | x1 | x2 | x6 | x11 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd42bbc  1660  000 | x1 | x2 | x6 | x11 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 71)
0xffff8bd42608  runtime entry
0xffff8bd42610  runtime entry
0xffff8bd42638  runtime entry
0xffff8bd42660  embedded object  (0x5f504411 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd42674  runtime entry
0xffff8bd42708  embedded object  (0x5f5052d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd42770  code target (STUB)  (0xffff8bd41580)
0xffff8bd42870  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd4288c  embedded object  (0x26c04519 <the hole>)
0xffff8bd428d8  code target (STUB)  (0xffff8bd41580)
0xffff8bd4293c  code target (STUB)  (0xffff8bd41d60)
0xffff8bd42978  runtime entry
0xffff8bd42a0c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd42a28  embedded object  (0x26c04519 <the hole>)
0xffff8bd42a74  code target (STUB)  (0xffff8bd41580)
0xffff8bd42ae0  runtime entry
0xffff8bd42ae8  runtime entry
0xffff8bd42af0  runtime entry
0xffff8bd42af8  runtime entry
0xffff8bd42b08  code target (STUB)  (0xffff8bd06820)
0xffff8bd42b2c  code target (STUB)  (0xffff8bd06260)
0xffff8bd42b38  code target (STUB)  (0xffff8bd068e0)
0xffff8bd42b4c  code target (STUB)  (0xffff8bd06820)
0xffff8bd42b70  code target (STUB)  (0xffff8bd06260)
0xffff8bd42b7c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd42b90  code target (STUB)  (0xffff8bd06820)
0xffff8bd42bb4  code target (STUB)  (0xffff8bd06260)
0xffff8bd42bc0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd42bcc  constant pool (size 244)
0xffff8bd42d88  runtime entry
0xffff8bd42d94  constant pool (size 20)


kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 2
type = NORMAL
name = ToBooleanICStub(Bool)
compiler = crankshaft
Instructions (size = 144)
0xffff8bd430a0     0  ldr x16, [x26, #64]
0xffff8bd430a4     4  cmp x0, x16
0xffff8bd430a8     8  b.eq #+0x1c (addr 0xffff8bd430c4)
0xffff8bd430ac    12  ldr x16, [x26, #72]
0xffff8bd430b0    16  cmp x0, x16
0xffff8bd430b4    20  b.eq #+0x8 (addr 0xffff8bd430bc)
0xffff8bd430b8    24  b #+0x30 (addr 0xffff8bd430e8)
0xffff8bd430bc    28  ldr x0, pc+28 (addr 0x0000ffff8bd430d8)    ;; object: 0x26c042b1 <false>
0xffff8bd430c0    32  ret
0xffff8bd430c4    36  ldr x0, pc+28 (addr 0x0000ffff8bd430e0)    ;; object: 0x26c04281 <true>
0xffff8bd430c8    40  ret
0xffff8bd430cc    44  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd430d0    48  d63f03e0       constant
0xffff8bd430d4    52  d503201f       constant
0xffff8bd430d8    56  26c042b1       constant
0xffff8bd430dc    60  00000000       constant
0xffff8bd430e0    64  26c04281       constant
0xffff8bd430e4    68  00000000       constant
0xffff8bd430e8    72  movz x16, #0x0
0xffff8bd430ec    76  sub csp, jssp, #0x10 (16)
0xffff8bd430f0    80  stp fp, lr, [jssp, #-16]!
0xffff8bd430f4    84  bl #+0x4 (addr 0xffff8bd430f8)
0xffff8bd430f8    88  movz x17, #0xa00000000
0xffff8bd430fc    92  sub csp, jssp, #0x10 (16)
0xffff8bd43100    96  stp x17, cp, [jssp, #-16]!
0xffff8bd43104   100  add fp, jssp, #0x10 (16)
0xffff8bd43108   104  ldr x17, pc+24 (addr 0x0000ffff8bd43120)    ;; lazy deoptimization bailout 0
0xffff8bd4310c   108  add x17, x17, x16
0xffff8bd43110   112  br x17
0xffff8bd43114   116  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd43118   120  d63f03e0       constant
0xffff8bd4311c   124  d503201f       constant
0xffff8bd43120   128  8bb06000       constant
0xffff8bd43124   132  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd430bc  embedded object  (0x26c042b1 <false>)
0xffff8bd430c4  embedded object  (0x26c04281 <true>)
0xffff8bd430cc  constant pool (size 28)
0xffff8bd43108  runtime entry
0xffff8bd43114  constant pool (size 20)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd431a0     0  ldur x0, [x1, #-1]
0xffff8bd431a4     4  ldur x0, [x0, #47]
0xffff8bd431a8     8  ldur x0, [x0, #47]
0xffff8bd431ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = hasOwnProperty
compiler = unknown
Instructions (size = 120)
0xffff8bd43220     0  sub csp, jssp, #0x8 (8)
0xffff8bd43224     4  str x3, [jssp, #-8]!
0xffff8bd43228     8  sub csp, jssp, #0x8 (8)
0xffff8bd4322c    12  str x0, [jssp, #-8]!
0xffff8bd43230    16  ldr x0, pc+72 (addr 0x0000ffff8bd43278)    ;; object: 0x26c63e59 Cell for 0
0xffff8bd43234    20  ldur x0, [x0, #7]
0xffff8bd43238    24  cmp x0, #0x0 (0)
0xffff8bd4323c    28  b.ne #+0x14 (addr 0xffff8bd43250)
0xffff8bd43240    32  ldr x3, pc+64 (addr 0x0000ffff8bd43280)    ;; object: 0x26c63e69 WeakCell for 0x26c3ff39 <an Object with map 0x5f50c081>
0xffff8bd43244    36  ldur x3, [x3, #7]
0xffff8bd43248    40  tbz w3, #0, #+0x8 (addr 0xffff8bd43250)
0xffff8bd4324c    44  b #+0x14 (addr 0xffff8bd43260)
0xffff8bd43250    48  ldr x0, [jssp], #8
0xffff8bd43254    52  ldr x3, [jssp], #8
0xffff8bd43258    56  ldr x16, pc+48 (addr 0x0000ffff8bd43288)    ;; code: BUILTIN
0xffff8bd4325c    60  br x16
0xffff8bd43260    64  add jssp, jssp, #0x10 (16)
0xffff8bd43264    68  mov x1, x3
0xffff8bd43268    72  ldr x16, pc+40 (addr 0x0000ffff8bd43290)    ;; code: HANDLER, LoadConstantStub, minor: 0
0xffff8bd4326c    76  br x16
0xffff8bd43270    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bd43274    84  d63f03e0       constant
0xffff8bd43278    88  26c63e59       constant
0xffff8bd4327c    92  00000000       constant
0xffff8bd43280    96  26c63e69       constant
0xffff8bd43284   100  00000000       constant
0xffff8bd43288   104  8bd222e0       constant
0xffff8bd4328c   108  0000ffff       constant
0xffff8bd43290   112  8bd431a0       constant
0xffff8bd43294   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd43230  embedded object  (0x26c63e59 Cell for 0)
0xffff8bd43240  embedded object  (0x26c63e69 WeakCell for 0x26c3ff39 <an Object with map 0x5f50c081>)
0xffff8bd43258  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd43268  code target (HANDLER)  (0xffff8bd431a0)
0xffff8bd43270  constant pool (size 40)

kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd43300     0  ldur x0, [x1, #-1]
0xffff8bd43304     4  ldur x0, [x0, #47]
0xffff8bd43308     8  ldur x0, [x0, #71]
0xffff8bd4330c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd43380     0  ldur x0, [x1, #-1]
0xffff8bd43384     4  ldur x0, [x0, #47]
0xffff8bd43388     8  ldur x0, [x0, #95]
0xffff8bd4338c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd43400     0  ldur x0, [x1, #-1]
0xffff8bd43404     4  ldur x0, [x0, #47]
0xffff8bd43408     8  ldur x0, [x0, #119]
0xffff8bd4340c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd43480     0  ldur x0, [x1, #-1]
0xffff8bd43484     4  ldur x0, [x0, #47]
0xffff8bd43488     8  ldur x0, [x0, #143]
0xffff8bd4348c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd43500     0  ldur x0, [x1, #-1]
0xffff8bd43504     4  ldur x0, [x0, #47]
0xffff8bd43508     8  ldur x0, [x0, #167]
0xffff8bd4350c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = FunctionPrototypeStub
name = FunctionPrototypeStub
compiler = unknown
Instructions (size = 72)
0xffff8bd43580     0  ldur x10, [x1, #23]
0xffff8bd43584     4  ldr x16, [x26, #88]
0xffff8bd43588     8  cmp x10, x16
0xffff8bd4358c    12  b.eq #+0x20 (addr 0xffff8bd435ac)
0xffff8bd43590    16  ldur x11, [x10, #-1]
0xffff8bd43594    20  ldrb w11, [x11, #11]
0xffff8bd43598    24  cmp x11, #0x84 (132)
0xffff8bd4359c    28  b.ne #+0x8 (addr 0xffff8bd435a4)
0xffff8bd435a0    32  ldur x10, [x10, #23]
0xffff8bd435a4    36  mov x0, x10
0xffff8bd435a8    40  ret
0xffff8bd435ac    44  ldr x16, pc+20 (addr 0x0000ffff8bd435c0)    ;; code: BUILTIN
0xffff8bd435b0    48  br x16
0xffff8bd435b4    52  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd435b8    56  d63f03e0       constant
0xffff8bd435bc    60  d503201f       constant
0xffff8bd435c0    64  8bd222e0       constant
0xffff8bd435c4    68  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd435ac  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd435b4  constant pool (size 20)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 653)
0xffff8bd43d60     0  movz x2, #0xe2c0
0xffff8bd43d64     4  movk x2, #0x2cb8, lsl #16
0xffff8bd43d68     8  ldp x3, x0, [x2]
0xffff8bd43d6c    12  adds x16, x3, #0xf8 (248)
0xffff8bd43d70    16  ccmp x16, x0, #nzCv, lo
0xffff8bd43d74    20  b.hi #+0x104 (addr 0xffff8bd43e78)
0xffff8bd43d78    24  str x16, [x2]
0xffff8bd43d7c    28  orr x3, x3, #0x1
0xffff8bd43d80    32  ldr x0, pc+360 (addr 0x0000ffff8bd43ee8)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd43d84    36  stur x0, [x3, #-1]
0xffff8bd43d88    40  movz x0, #0x1d00000000
0xffff8bd43d8c    44  stur x0, [x3, #7]
0xffff8bd43d90    48  stur x1, [x3, #15]
0xffff8bd43d94    52  stur cp, [x3, #23]
0xffff8bd43d98    56  ldr x0, pc+344 (addr 0x0000ffff8bd43ef0)    ;; object: 0x26c04519 <the hole>
0xffff8bd43d9c    60  stur x0, [x3, #31]
0xffff8bd43da0    64  ldur x0, [cp, #39]
0xffff8bd43da4    68  stur x0, [x3, #39]
0xffff8bd43da8    72  ldr x0, pc+336 (addr 0x0000ffff8bd43ef8)    ;; object: 0x26c04241 <undefined>
0xffff8bd43dac    76  stur x0, [x3, #47]
0xffff8bd43db0    80  ldr x0, pc+336 (addr 0x0000ffff8bd43f00)    ;; object: 0x26c04241 <undefined>
0xffff8bd43db4    84  stur x0, [x3, #55]
0xffff8bd43db8    88  ldr x0, pc+336 (addr 0x0000ffff8bd43f08)    ;; object: 0x26c04241 <undefined>
0xffff8bd43dbc    92  stur x0, [x3, #63]
0xffff8bd43dc0    96  ldr x0, pc+336 (addr 0x0000ffff8bd43f10)    ;; object: 0x26c04241 <undefined>
0xffff8bd43dc4   100  stur x0, [x3, #71]
0xffff8bd43dc8   104  ldr x0, pc+336 (addr 0x0000ffff8bd43f18)    ;; object: 0x26c04241 <undefined>
0xffff8bd43dcc   108  stur x0, [x3, #79]
0xffff8bd43dd0   112  ldr x0, pc+336 (addr 0x0000ffff8bd43f20)    ;; object: 0x26c04241 <undefined>
0xffff8bd43dd4   116  stur x0, [x3, #87]
0xffff8bd43dd8   120  ldr x0, pc+336 (addr 0x0000ffff8bd43f28)    ;; object: 0x26c04241 <undefined>
0xffff8bd43ddc   124  stur x0, [x3, #95]
0xffff8bd43de0   128  ldr x0, pc+336 (addr 0x0000ffff8bd43f30)    ;; object: 0x26c04241 <undefined>
0xffff8bd43de4   132  stur x0, [x3, #103]
0xffff8bd43de8   136  ldr x0, pc+336 (addr 0x0000ffff8bd43f38)    ;; object: 0x26c04241 <undefined>
0xffff8bd43dec   140  stur x0, [x3, #111]
0xffff8bd43df0   144  ldr x0, pc+336 (addr 0x0000ffff8bd43f40)    ;; object: 0x26c04241 <undefined>
0xffff8bd43df4   148  stur x0, [x3, #119]
0xffff8bd43df8   152  ldr x0, pc+336 (addr 0x0000ffff8bd43f48)    ;; object: 0x26c04241 <undefined>
0xffff8bd43dfc   156  stur x0, [x3, #127]
0xffff8bd43e00   160  ldr x0, pc+336 (addr 0x0000ffff8bd43f50)    ;; object: 0x26c04241 <undefined>
0xffff8bd43e04   164  stur x0, [x3, #135]
0xffff8bd43e08   168  ldr x0, pc+336 (addr 0x0000ffff8bd43f58)    ;; object: 0x26c04241 <undefined>
0xffff8bd43e0c   172  stur x0, [x3, #143]
0xffff8bd43e10   176  ldr x0, pc+336 (addr 0x0000ffff8bd43f60)    ;; object: 0x26c04241 <undefined>
0xffff8bd43e14   180  stur x0, [x3, #151]
0xffff8bd43e18   184  ldr x0, pc+336 (addr 0x0000ffff8bd43f68)    ;; object: 0x26c04241 <undefined>
0xffff8bd43e1c   188  stur x0, [x3, #159]
0xffff8bd43e20   192  ldr x0, pc+336 (addr 0x0000ffff8bd43f70)    ;; object: 0x26c04241 <undefined>
0xffff8bd43e24   196  stur x0, [x3, #167]
0xffff8bd43e28   200  ldr x0, pc+336 (addr 0x0000ffff8bd43f78)    ;; object: 0x26c04241 <undefined>
0xffff8bd43e2c   204  stur x0, [x3, #175]
0xffff8bd43e30   208  ldr x0, pc+336 (addr 0x0000ffff8bd43f80)    ;; object: 0x26c04241 <undefined>
0xffff8bd43e34   212  stur x0, [x3, #183]
0xffff8bd43e38   216  ldr x0, pc+336 (addr 0x0000ffff8bd43f88)    ;; object: 0x26c04241 <undefined>
0xffff8bd43e3c   220  stur x0, [x3, #191]
0xffff8bd43e40   224  ldr x0, pc+336 (addr 0x0000ffff8bd43f90)    ;; object: 0x26c04241 <undefined>
0xffff8bd43e44   228  stur x0, [x3, #199]
0xffff8bd43e48   232  ldr x0, pc+336 (addr 0x0000ffff8bd43f98)    ;; object: 0x26c04241 <undefined>
0xffff8bd43e4c   236  stur x0, [x3, #207]
0xffff8bd43e50   240  ldr x0, pc+336 (addr 0x0000ffff8bd43fa0)    ;; object: 0x26c04241 <undefined>
0xffff8bd43e54   244  stur x0, [x3, #215]
0xffff8bd43e58   248  ldr x0, pc+336 (addr 0x0000ffff8bd43fa8)    ;; object: 0x26c04241 <undefined>
0xffff8bd43e5c   252  stur x0, [x3, #223]
0xffff8bd43e60   256  ldr x0, pc+336 (addr 0x0000ffff8bd43fb0)    ;; object: 0x26c04241 <undefined>
0xffff8bd43e64   260  stur x0, [x3, #231]
0xffff8bd43e68   264  ldr x0, pc+336 (addr 0x0000ffff8bd43fb8)    ;; object: 0x26c04241 <undefined>
0xffff8bd43e6c   268  stur x0, [x3, #239]
0xffff8bd43e70   272  mov x0, x3
0xffff8bd43e74   276  ret
0xffff8bd43e78   280  sub csp, jssp, #0x10 (16)
0xffff8bd43e7c   284  stp fp, lr, [jssp, #-16]!
0xffff8bd43e80   288  movz fp, #0xa00000000
0xffff8bd43e84   292  sub csp, jssp, #0x8 (8)
0xffff8bd43e88   296  str fp, [jssp, #-8]!
0xffff8bd43e8c   300  add fp, jssp, #0x8 (8)
0xffff8bd43e90   304  movz x3, #0x0
0xffff8bd43e94   308  mov x16, lr
0xffff8bd43e98   312  ldr x17, pc+296 (addr 0x0000ffff8bd43fc0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd43e9c   316  blr x17
0xffff8bd43ea0   320  movz x0, #0xf800000000
0xffff8bd43ea4   324  movz x10, #0x0
0xffff8bd43ea8   328  sub csp, jssp, #0x10 (16)
0xffff8bd43eac   332  stp x10, x0, [jssp, #-16]!
0xffff8bd43eb0   336  movz x0, #0x2
0xffff8bd43eb4   340  movz x1, #0x5b88
0xffff8bd43eb8   344  movk x1, #0xe2, lsl #16
0xffff8bd43ebc   348  ldr x16, pc+268 (addr 0x0000ffff8bd43fc8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd43ec0   352  blr x16
0xffff8bd43ec4   356  str x0, [jssp, #24]
0xffff8bd43ec8   360  ldr x16, pc+264 (addr 0x0000ffff8bd43fd0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd43ecc   364  blr x16
0xffff8bd43ed0   368  ldr lr, [jssp, #16]
0xffff8bd43ed4   372  ldp xzr, fp, [jssp], #24
0xffff8bd43ed8   376  b #-0x158 (addr 0xffff8bd43d80)
0xffff8bd43edc   380  580007df       constant pool begin (num_const = 62)    ;; constant pool
0xffff8bd43ee0   384  d63f03e0       constant
0xffff8bd43ee4   388  d503201f       constant
0xffff8bd43ee8   392  5f506149       constant
0xffff8bd43eec   396  00000000       constant
0xffff8bd43ef0   400  26c04519       constant
0xffff8bd43ef4   404  00000000       constant
0xffff8bd43ef8   408  26c04241       constant
0xffff8bd43efc   412  00000000       constant
0xffff8bd43f00   416  26c04241       constant
0xffff8bd43f04   420  00000000       constant
0xffff8bd43f08   424  26c04241       constant
0xffff8bd43f0c   428  00000000       constant
0xffff8bd43f10   432  26c04241       constant
0xffff8bd43f14   436  00000000       constant
0xffff8bd43f18   440  26c04241       constant
0xffff8bd43f1c   444  00000000       constant
0xffff8bd43f20   448  26c04241       constant
0xffff8bd43f24   452  00000000       constant
0xffff8bd43f28   456  26c04241       constant
0xffff8bd43f2c   460  00000000       constant
0xffff8bd43f30   464  26c04241       constant
0xffff8bd43f34   468  00000000       constant
0xffff8bd43f38   472  26c04241       constant
0xffff8bd43f3c   476  00000000       constant
0xffff8bd43f40   480  26c04241       constant
0xffff8bd43f44   484  00000000       constant
0xffff8bd43f48   488  26c04241       constant
0xffff8bd43f4c   492  00000000       constant
0xffff8bd43f50   496  26c04241       constant
0xffff8bd43f54   500  00000000       constant
0xffff8bd43f58   504  26c04241       constant
0xffff8bd43f5c   508  00000000       constant
0xffff8bd43f60   512  26c04241       constant
0xffff8bd43f64   516  00000000       constant
0xffff8bd43f68   520  26c04241       constant
0xffff8bd43f6c   524  00000000       constant
0xffff8bd43f70   528  26c04241       constant
0xffff8bd43f74   532  00000000       constant
0xffff8bd43f78   536  26c04241       constant
0xffff8bd43f7c   540  00000000       constant
0xffff8bd43f80   544  26c04241       constant
0xffff8bd43f84   548  00000000       constant
0xffff8bd43f88   552  26c04241       constant
0xffff8bd43f8c   556  00000000       constant
0xffff8bd43f90   560  26c04241       constant
0xffff8bd43f94   564  00000000       constant
0xffff8bd43f98   568  26c04241       constant
0xffff8bd43f9c   572  00000000       constant
0xffff8bd43fa0   576  26c04241       constant
0xffff8bd43fa4   580  00000000       constant
0xffff8bd43fa8   584  26c04241       constant
0xffff8bd43fac   588  00000000       constant
0xffff8bd43fb0   592  26c04241       constant
0xffff8bd43fb4   596  00000000       constant
0xffff8bd43fb8   600  26c04241       constant
0xffff8bd43fbc   604  00000000       constant
0xffff8bd43fc0   608  8bd06820       constant
0xffff8bd43fc4   612  0000ffff       constant
0xffff8bd43fc8   616  8bd06260       constant
0xffff8bd43fcc   620  0000ffff       constant
0xffff8bd43fd0   624  8bd068e0       constant
0xffff8bd43fd4   628  0000ffff       constant


Safepoints (size = 21)
0xffff8bd43ec4   356  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 36)
0xffff8bd43d80  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd43d98  embedded object  (0x26c04519 <the hole>)
0xffff8bd43da8  embedded object  (0x26c04241 <undefined>)
0xffff8bd43db0  embedded object  (0x26c04241 <undefined>)
0xffff8bd43db8  embedded object  (0x26c04241 <undefined>)
0xffff8bd43dc0  embedded object  (0x26c04241 <undefined>)
0xffff8bd43dc8  embedded object  (0x26c04241 <undefined>)
0xffff8bd43dd0  embedded object  (0x26c04241 <undefined>)
0xffff8bd43dd8  embedded object  (0x26c04241 <undefined>)
0xffff8bd43de0  embedded object  (0x26c04241 <undefined>)
0xffff8bd43de8  embedded object  (0x26c04241 <undefined>)
0xffff8bd43df0  embedded object  (0x26c04241 <undefined>)
0xffff8bd43df8  embedded object  (0x26c04241 <undefined>)
0xffff8bd43e00  embedded object  (0x26c04241 <undefined>)
0xffff8bd43e08  embedded object  (0x26c04241 <undefined>)
0xffff8bd43e10  embedded object  (0x26c04241 <undefined>)
0xffff8bd43e18  embedded object  (0x26c04241 <undefined>)
0xffff8bd43e20  embedded object  (0x26c04241 <undefined>)
0xffff8bd43e28  embedded object  (0x26c04241 <undefined>)
0xffff8bd43e30  embedded object  (0x26c04241 <undefined>)
0xffff8bd43e38  embedded object  (0x26c04241 <undefined>)
0xffff8bd43e40  embedded object  (0x26c04241 <undefined>)
0xffff8bd43e48  embedded object  (0x26c04241 <undefined>)
0xffff8bd43e50  embedded object  (0x26c04241 <undefined>)
0xffff8bd43e58  embedded object  (0x26c04241 <undefined>)
0xffff8bd43e60  embedded object  (0x26c04241 <undefined>)
0xffff8bd43e68  embedded object  (0x26c04241 <undefined>)
0xffff8bd43e98  code target (STUB)  (0xffff8bd06820)
0xffff8bd43ebc  code target (STUB)  (0xffff8bd06260)
0xffff8bd43ec8  code target (STUB)  (0xffff8bd068e0)
0xffff8bd43edc  constant pool (size 252)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd45980     0  ldur x0, [x1, #7]
0xffff8bd45984     4  movz x16, #0x187
0xffff8bd45988     8  ldr x0, [x0, x16]
0xffff8bd4598c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd45a00     0  ldur x0, [x1, #7]
0xffff8bd45a04     4  movz x16, #0x18f
0xffff8bd45a08     8  ldr x0, [x0, x16]
0xffff8bd45a0c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd45a80     0  ldur x0, [x1, #7]
0xffff8bd45a84     4  movz x16, #0x197
0xffff8bd45a88     8  ldr x0, [x0, x16]
0xffff8bd45a8c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd45b00     0  ldur x0, [x1, #7]
0xffff8bd45b04     4  movz x16, #0x1a7
0xffff8bd45b08     8  ldr x0, [x0, x16]
0xffff8bd45b0c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff8bd45b80     0  sub csp, jssp, #0x8 (8)
0xffff8bd45b84     4  str x3, [jssp, #-8]!
0xffff8bd45b88     8  sub csp, jssp, #0x8 (8)
0xffff8bd45b8c    12  str x4, [jssp, #-8]!
0xffff8bd45b90    16  ldr x3, pc+88 (addr 0x0000ffff8bd45be8)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bd45b94    20  ldur x3, [x3, #7]
0xffff8bd45b98    24  cmp x3, #0x0 (0)
0xffff8bd45b9c    28  b.ne #+0x30 (addr 0xffff8bd45bcc)
0xffff8bd45ba0    32  tbz w0, #0, #+0x2c (addr 0xffff8bd45bcc)
0xffff8bd45ba4    36  ldr x5, pc+76 (addr 0x0000ffff8bd45bf0)    ;; object: 0x26c57a99 WeakCell for 0x5f50b581 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd45ba8    40  ldur x5, [x5, #7]
0xffff8bd45bac    44  tbz w5, #0, #+0x20 (addr 0xffff8bd45bcc)
0xffff8bd45bb0    48  ldursw x4, [x5, #15]
0xffff8bd45bb4    52  tbnz w4, #23, #+0x18 (addr 0xffff8bd45bcc)
0xffff8bd45bb8    56  ldr x4, [jssp], #8
0xffff8bd45bbc    60  ldr x3, [jssp], #8
0xffff8bd45bc0    64  ldr x2, pc+56 (addr 0x0000ffff8bd45bf8)    ;; object: 0x26c05209 <String[4]: next>
0xffff8bd45bc4    68  ldr x16, pc+60 (addr 0x0000ffff8bd45c00)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff8bd45bc8    72  br x16
0xffff8bd45bcc    76  ldr x2, pc+60 (addr 0x0000ffff8bd45c08)    ;; object: 0x26c05209 <String[4]: next>
0xffff8bd45bd0    80  ldr x4, [jssp], #8
0xffff8bd45bd4    84  ldr x3, [jssp], #8
0xffff8bd45bd8    88  ldr x16, pc+56 (addr 0x0000ffff8bd45c10)    ;; code: BUILTIN
0xffff8bd45bdc    92  br x16
0xffff8bd45be0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd45be4   100  d63f03e0       constant
0xffff8bd45be8   104  26c5b0f1       constant
0xffff8bd45bec   108  00000000       constant
0xffff8bd45bf0   112  26c57a99       constant
0xffff8bd45bf4   116  00000000       constant
0xffff8bd45bf8   120  26c05209       constant
0xffff8bd45bfc   124  00000000       constant
0xffff8bd45c00   128  8bd38860       constant
0xffff8bd45c04   132  0000ffff       constant
0xffff8bd45c08   136  26c05209       constant
0xffff8bd45c0c   140  00000000       constant
0xffff8bd45c10   144  8bd22420       constant
0xffff8bd45c14   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bd45b90  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bd45ba4  embedded object  (0x26c57a99 WeakCell for 0x5f50b581 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd45bc0  embedded object  (0x26c05209 <String[4]: next>)
0xffff8bd45bc4  code target (HANDLER)  (0xffff8bd38860)
0xffff8bd45bcc  embedded object  (0x26c05209 <String[4]: next>)
0xffff8bd45bd8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd45be0  constant pool (size 56)

kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 461)
0xffff8bd45fc0     0  movz x2, #0xe2c0
0xffff8bd45fc4     4  movk x2, #0x2cb8, lsl #16
0xffff8bd45fc8     8  ldp x3, x0, [x2]
0xffff8bd45fcc    12  adds x16, x3, #0x98 (152)
0xffff8bd45fd0    16  ccmp x16, x0, #nzCv, lo
0xffff8bd45fd4    20  b.hi #+0xa4 (addr 0xffff8bd46078)
0xffff8bd45fd8    24  str x16, [x2]
0xffff8bd45fdc    28  orr x3, x3, #0x1
0xffff8bd45fe0    32  ldr x0, pc+264 (addr 0x0000ffff8bd460e8)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd45fe4    36  stur x0, [x3, #-1]
0xffff8bd45fe8    40  movz x0, #0x1100000000
0xffff8bd45fec    44  stur x0, [x3, #7]
0xffff8bd45ff0    48  stur x1, [x3, #15]
0xffff8bd45ff4    52  stur cp, [x3, #23]
0xffff8bd45ff8    56  ldr x0, pc+248 (addr 0x0000ffff8bd460f0)    ;; object: 0x26c04519 <the hole>
0xffff8bd45ffc    60  stur x0, [x3, #31]
0xffff8bd46000    64  ldur x0, [cp, #39]
0xffff8bd46004    68  stur x0, [x3, #39]
0xffff8bd46008    72  ldr x0, pc+240 (addr 0x0000ffff8bd460f8)    ;; object: 0x26c04241 <undefined>
0xffff8bd4600c    76  stur x0, [x3, #47]
0xffff8bd46010    80  ldr x0, pc+240 (addr 0x0000ffff8bd46100)    ;; object: 0x26c04241 <undefined>
0xffff8bd46014    84  stur x0, [x3, #55]
0xffff8bd46018    88  ldr x0, pc+240 (addr 0x0000ffff8bd46108)    ;; object: 0x26c04241 <undefined>
0xffff8bd4601c    92  stur x0, [x3, #63]
0xffff8bd46020    96  ldr x0, pc+240 (addr 0x0000ffff8bd46110)    ;; object: 0x26c04241 <undefined>
0xffff8bd46024   100  stur x0, [x3, #71]
0xffff8bd46028   104  ldr x0, pc+240 (addr 0x0000ffff8bd46118)    ;; object: 0x26c04241 <undefined>
0xffff8bd4602c   108  stur x0, [x3, #79]
0xffff8bd46030   112  ldr x0, pc+240 (addr 0x0000ffff8bd46120)    ;; object: 0x26c04241 <undefined>
0xffff8bd46034   116  stur x0, [x3, #87]
0xffff8bd46038   120  ldr x0, pc+240 (addr 0x0000ffff8bd46128)    ;; object: 0x26c04241 <undefined>
0xffff8bd4603c   124  stur x0, [x3, #95]
0xffff8bd46040   128  ldr x0, pc+240 (addr 0x0000ffff8bd46130)    ;; object: 0x26c04241 <undefined>
0xffff8bd46044   132  stur x0, [x3, #103]
0xffff8bd46048   136  ldr x0, pc+240 (addr 0x0000ffff8bd46138)    ;; object: 0x26c04241 <undefined>
0xffff8bd4604c   140  stur x0, [x3, #111]
0xffff8bd46050   144  ldr x0, pc+240 (addr 0x0000ffff8bd46140)    ;; object: 0x26c04241 <undefined>
0xffff8bd46054   148  stur x0, [x3, #119]
0xffff8bd46058   152  ldr x0, pc+240 (addr 0x0000ffff8bd46148)    ;; object: 0x26c04241 <undefined>
0xffff8bd4605c   156  stur x0, [x3, #127]
0xffff8bd46060   160  ldr x0, pc+240 (addr 0x0000ffff8bd46150)    ;; object: 0x26c04241 <undefined>
0xffff8bd46064   164  stur x0, [x3, #135]
0xffff8bd46068   168  ldr x0, pc+240 (addr 0x0000ffff8bd46158)    ;; object: 0x26c04241 <undefined>
0xffff8bd4606c   172  stur x0, [x3, #143]
0xffff8bd46070   176  mov x0, x3
0xffff8bd46074   180  ret
0xffff8bd46078   184  sub csp, jssp, #0x10 (16)
0xffff8bd4607c   188  stp fp, lr, [jssp, #-16]!
0xffff8bd46080   192  movz fp, #0xa00000000
0xffff8bd46084   196  sub csp, jssp, #0x8 (8)
0xffff8bd46088   200  str fp, [jssp, #-8]!
0xffff8bd4608c   204  add fp, jssp, #0x8 (8)
0xffff8bd46090   208  movz x3, #0x0
0xffff8bd46094   212  mov x16, lr
0xffff8bd46098   216  ldr x17, pc+200 (addr 0x0000ffff8bd46160)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd4609c   220  blr x17
0xffff8bd460a0   224  movz x0, #0x9800000000
0xffff8bd460a4   228  movz x10, #0x0
0xffff8bd460a8   232  sub csp, jssp, #0x10 (16)
0xffff8bd460ac   236  stp x10, x0, [jssp, #-16]!
0xffff8bd460b0   240  movz x0, #0x2
0xffff8bd460b4   244  movz x1, #0x5b88
0xffff8bd460b8   248  movk x1, #0xe2, lsl #16
0xffff8bd460bc   252  ldr x16, pc+172 (addr 0x0000ffff8bd46168)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd460c0   256  blr x16
0xffff8bd460c4   260  str x0, [jssp, #24]
0xffff8bd460c8   264  ldr x16, pc+168 (addr 0x0000ffff8bd46170)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd460cc   268  blr x16
0xffff8bd460d0   272  ldr lr, [jssp, #16]
0xffff8bd460d4   276  ldp xzr, fp, [jssp], #24
0xffff8bd460d8   280  b #-0xf8 (addr 0xffff8bd45fe0)
0xffff8bd460dc   284  580004df       constant pool begin (num_const = 38)    ;; constant pool
0xffff8bd460e0   288  d63f03e0       constant
0xffff8bd460e4   292  d503201f       constant
0xffff8bd460e8   296  5f506149       constant
0xffff8bd460ec   300  00000000       constant
0xffff8bd460f0   304  26c04519       constant
0xffff8bd460f4   308  00000000       constant
0xffff8bd460f8   312  26c04241       constant
0xffff8bd460fc   316  00000000       constant
0xffff8bd46100   320  26c04241       constant
0xffff8bd46104   324  00000000       constant
0xffff8bd46108   328  26c04241       constant
0xffff8bd4610c   332  00000000       constant
0xffff8bd46110   336  26c04241       constant
0xffff8bd46114   340  00000000       constant
0xffff8bd46118   344  26c04241       constant
0xffff8bd4611c   348  00000000       constant
0xffff8bd46120   352  26c04241       constant
0xffff8bd46124   356  00000000       constant
0xffff8bd46128   360  26c04241       constant
0xffff8bd4612c   364  00000000       constant
0xffff8bd46130   368  26c04241       constant
0xffff8bd46134   372  00000000       constant
0xffff8bd46138   376  26c04241       constant
0xffff8bd4613c   380  00000000       constant
0xffff8bd46140   384  26c04241       constant
0xffff8bd46144   388  00000000       constant
0xffff8bd46148   392  26c04241       constant
0xffff8bd4614c   396  00000000       constant
0xffff8bd46150   400  26c04241       constant
0xffff8bd46154   404  00000000       constant
0xffff8bd46158   408  26c04241       constant
0xffff8bd4615c   412  00000000       constant
0xffff8bd46160   416  8bd06820       constant
0xffff8bd46164   420  0000ffff       constant
0xffff8bd46168   424  8bd06260       constant
0xffff8bd4616c   428  0000ffff       constant
0xffff8bd46170   432  8bd068e0       constant
0xffff8bd46174   436  0000ffff       constant


Safepoints (size = 21)
0xffff8bd460c4   260  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 24)
0xffff8bd45fe0  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd45ff8  embedded object  (0x26c04519 <the hole>)
0xffff8bd46008  embedded object  (0x26c04241 <undefined>)
0xffff8bd46010  embedded object  (0x26c04241 <undefined>)
0xffff8bd46018  embedded object  (0x26c04241 <undefined>)
0xffff8bd46020  embedded object  (0x26c04241 <undefined>)
0xffff8bd46028  embedded object  (0x26c04241 <undefined>)
0xffff8bd46030  embedded object  (0x26c04241 <undefined>)
0xffff8bd46038  embedded object  (0x26c04241 <undefined>)
0xffff8bd46040  embedded object  (0x26c04241 <undefined>)
0xffff8bd46048  embedded object  (0x26c04241 <undefined>)
0xffff8bd46050  embedded object  (0x26c04241 <undefined>)
0xffff8bd46058  embedded object  (0x26c04241 <undefined>)
0xffff8bd46060  embedded object  (0x26c04241 <undefined>)
0xffff8bd46068  embedded object  (0x26c04241 <undefined>)
0xffff8bd46098  code target (STUB)  (0xffff8bd06820)
0xffff8bd460bc  code target (STUB)  (0xffff8bd06260)
0xffff8bd460c8  code target (STUB)  (0xffff8bd068e0)
0xffff8bd460dc  constant pool (size 156)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 381)
0xffff8bd46b40     0  movz x2, #0xe2c0
0xffff8bd46b44     4  movk x2, #0x2cb8, lsl #16
0xffff8bd46b48     8  ldp x3, x0, [x2]
0xffff8bd46b4c    12  adds x16, x3, #0x70 (112)
0xffff8bd46b50    16  ccmp x16, x0, #nzCv, lo
0xffff8bd46b54    20  b.hi #+0x7c (addr 0xffff8bd46bd0)
0xffff8bd46b58    24  str x16, [x2]
0xffff8bd46b5c    28  orr x3, x3, #0x1
0xffff8bd46b60    32  ldr x0, pc+224 (addr 0x0000ffff8bd46c40)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd46b64    36  stur x0, [x3, #-1]
0xffff8bd46b68    40  movz x0, #0xc00000000
0xffff8bd46b6c    44  stur x0, [x3, #7]
0xffff8bd46b70    48  stur x1, [x3, #15]
0xffff8bd46b74    52  stur cp, [x3, #23]
0xffff8bd46b78    56  ldr x0, pc+208 (addr 0x0000ffff8bd46c48)    ;; object: 0x26c04519 <the hole>
0xffff8bd46b7c    60  stur x0, [x3, #31]
0xffff8bd46b80    64  ldur x0, [cp, #39]
0xffff8bd46b84    68  stur x0, [x3, #39]
0xffff8bd46b88    72  ldr x0, pc+200 (addr 0x0000ffff8bd46c50)    ;; object: 0x26c04241 <undefined>
0xffff8bd46b8c    76  stur x0, [x3, #47]
0xffff8bd46b90    80  ldr x0, pc+200 (addr 0x0000ffff8bd46c58)    ;; object: 0x26c04241 <undefined>
0xffff8bd46b94    84  stur x0, [x3, #55]
0xffff8bd46b98    88  ldr x0, pc+200 (addr 0x0000ffff8bd46c60)    ;; object: 0x26c04241 <undefined>
0xffff8bd46b9c    92  stur x0, [x3, #63]
0xffff8bd46ba0    96  ldr x0, pc+200 (addr 0x0000ffff8bd46c68)    ;; object: 0x26c04241 <undefined>
0xffff8bd46ba4   100  stur x0, [x3, #71]
0xffff8bd46ba8   104  ldr x0, pc+200 (addr 0x0000ffff8bd46c70)    ;; object: 0x26c04241 <undefined>
0xffff8bd46bac   108  stur x0, [x3, #79]
0xffff8bd46bb0   112  ldr x0, pc+200 (addr 0x0000ffff8bd46c78)    ;; object: 0x26c04241 <undefined>
0xffff8bd46bb4   116  stur x0, [x3, #87]
0xffff8bd46bb8   120  ldr x0, pc+200 (addr 0x0000ffff8bd46c80)    ;; object: 0x26c04241 <undefined>
0xffff8bd46bbc   124  stur x0, [x3, #95]
0xffff8bd46bc0   128  ldr x0, pc+200 (addr 0x0000ffff8bd46c88)    ;; object: 0x26c04241 <undefined>
0xffff8bd46bc4   132  stur x0, [x3, #103]
0xffff8bd46bc8   136  mov x0, x3
0xffff8bd46bcc   140  ret
0xffff8bd46bd0   144  sub csp, jssp, #0x10 (16)
0xffff8bd46bd4   148  stp fp, lr, [jssp, #-16]!
0xffff8bd46bd8   152  movz fp, #0xa00000000
0xffff8bd46bdc   156  sub csp, jssp, #0x8 (8)
0xffff8bd46be0   160  str fp, [jssp, #-8]!
0xffff8bd46be4   164  add fp, jssp, #0x8 (8)
0xffff8bd46be8   168  movz x3, #0x0
0xffff8bd46bec   172  mov x16, lr
0xffff8bd46bf0   176  ldr x17, pc+160 (addr 0x0000ffff8bd46c90)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd46bf4   180  blr x17
0xffff8bd46bf8   184  movz x0, #0x7000000000
0xffff8bd46bfc   188  movz x10, #0x0
0xffff8bd46c00   192  sub csp, jssp, #0x10 (16)
0xffff8bd46c04   196  stp x10, x0, [jssp, #-16]!
0xffff8bd46c08   200  movz x0, #0x2
0xffff8bd46c0c   204  movz x1, #0x5b88
0xffff8bd46c10   208  movk x1, #0xe2, lsl #16
0xffff8bd46c14   212  ldr x16, pc+132 (addr 0x0000ffff8bd46c98)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd46c18   216  blr x16
0xffff8bd46c1c   220  str x0, [jssp, #24]
0xffff8bd46c20   224  ldr x16, pc+128 (addr 0x0000ffff8bd46ca0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd46c24   228  blr x16
0xffff8bd46c28   232  ldr lr, [jssp, #16]
0xffff8bd46c2c   236  ldp xzr, fp, [jssp], #24
0xffff8bd46c30   240  b #-0xd0 (addr 0xffff8bd46b60)
0xffff8bd46c34   244  5800039f       constant pool begin (num_const = 28)    ;; constant pool
0xffff8bd46c38   248  d63f03e0       constant
0xffff8bd46c3c   252  d503201f       constant
0xffff8bd46c40   256  5f506149       constant
0xffff8bd46c44   260  00000000       constant
0xffff8bd46c48   264  26c04519       constant
0xffff8bd46c4c   268  00000000       constant
0xffff8bd46c50   272  26c04241       constant
0xffff8bd46c54   276  00000000       constant
0xffff8bd46c58   280  26c04241       constant
0xffff8bd46c5c   284  00000000       constant
0xffff8bd46c60   288  26c04241       constant
0xffff8bd46c64   292  00000000       constant
0xffff8bd46c68   296  26c04241       constant
0xffff8bd46c6c   300  00000000       constant
0xffff8bd46c70   304  26c04241       constant
0xffff8bd46c74   308  00000000       constant
0xffff8bd46c78   312  26c04241       constant
0xffff8bd46c7c   316  00000000       constant
0xffff8bd46c80   320  26c04241       constant
0xffff8bd46c84   324  00000000       constant
0xffff8bd46c88   328  26c04241       constant
0xffff8bd46c8c   332  00000000       constant
0xffff8bd46c90   336  8bd06820       constant
0xffff8bd46c94   340  0000ffff       constant
0xffff8bd46c98   344  8bd06260       constant
0xffff8bd46c9c   348  0000ffff       constant
0xffff8bd46ca0   352  8bd068e0       constant
0xffff8bd46ca4   356  0000ffff       constant


Safepoints (size = 21)
0xffff8bd46c1c   220  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 19)
0xffff8bd46b60  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd46b78  embedded object  (0x26c04519 <the hole>)
0xffff8bd46b88  embedded object  (0x26c04241 <undefined>)
0xffff8bd46b90  embedded object  (0x26c04241 <undefined>)
0xffff8bd46b98  embedded object  (0x26c04241 <undefined>)
0xffff8bd46ba0  embedded object  (0x26c04241 <undefined>)
0xffff8bd46ba8  embedded object  (0x26c04241 <undefined>)
0xffff8bd46bb0  embedded object  (0x26c04241 <undefined>)
0xffff8bd46bb8  embedded object  (0x26c04241 <undefined>)
0xffff8bd46bc0  embedded object  (0x26c04241 <undefined>)
0xffff8bd46bf0  code target (STUB)  (0xffff8bd06820)
0xffff8bd46c14  code target (STUB)  (0xffff8bd06260)
0xffff8bd46c20  code target (STUB)  (0xffff8bd068e0)
0xffff8bd46c34  constant pool (size 116)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327685
name = CallICStub(args(5), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff8bd48400     0  add x4, x2, x3, asr #29
0xffff8bd48404     4  ldur x4, [x4, #15]
0xffff8bd48408     8  ldur x5, [x4, #7]
0xffff8bd4840c    12  cmp x5, x1
0xffff8bd48410    16  b.ne #+0x2c (addr 0xffff8bd4843c)
0xffff8bd48414    20  tbz w1, #0, #+0x28 (addr 0xffff8bd4843c)
0xffff8bd48418    24  add x2, x2, x3, asr #29
0xffff8bd4841c    28  add x2, x2, #0x18 (24)
0xffff8bd48420    32  ldur x3, [x2, #-1]
0xffff8bd48424    36  movz x16, #0x200000000
0xffff8bd48428    40  add x3, x3, x16
0xffff8bd4842c    44  stur x3, [x2, #-1]
0xffff8bd48430    48  movz x0, #0x5
0xffff8bd48434    52  ldr x16, pc+372 (addr 0x0000ffff8bd485a8)    ;; code: BUILTIN
0xffff8bd48438    56  br x16
0xffff8bd4843c    60  ldr x16, [x26, #2400]
0xffff8bd48440    64  cmp x4, x16
0xffff8bd48444    68  b.eq #+0x78 (addr 0xffff8bd484bc)
0xffff8bd48448    72  ldur x5, [x4, #-1]
0xffff8bd4844c    76  ldr x16, [x26, #2736]
0xffff8bd48450    80  cmp x5, x16
0xffff8bd48454    84  b.ne #+0x40 (addr 0xffff8bd48494)
0xffff8bd48458    88  ldur x5, [cp, #39]
0xffff8bd4845c    92  ldur x5, [x5, #95]
0xffff8bd48460    96  cmp x1, x5
0xffff8bd48464   100  b.ne #+0xec (addr 0xffff8bd48550)
0xffff8bd48468   104  movz x0, #0x5
0xffff8bd4846c   108  add x2, x2, x3, asr #29
0xffff8bd48470   112  add x2, x2, #0x18 (24)
0xffff8bd48474   116  ldur x3, [x2, #-1]
0xffff8bd48478   120  movz x16, #0x200000000
0xffff8bd4847c   124  add x3, x3, x16
0xffff8bd48480   128  stur x3, [x2, #-1]
0xffff8bd48484   132  mov x2, x4
0xffff8bd48488   136  mov x3, x1
0xffff8bd4848c   140  ldr x16, pc+292 (addr 0x0000ffff8bd485b0)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff8bd48490   144  br x16
0xffff8bd48494   148  ldr x16, [x26, #2568]
0xffff8bd48498   152  cmp x4, x16
0xffff8bd4849c   156  b.eq #+0xb4 (addr 0xffff8bd48550)
0xffff8bd484a0   160  ldur x5, [x4, #-1]
0xffff8bd484a4   164  ldrb w5, [x5, #11]
0xffff8bd484a8   168  cmp x5, #0xc9 (201)
0xffff8bd484ac   172  b.ne #+0xa4 (addr 0xffff8bd48550)
0xffff8bd484b0   176  add x4, x2, x3, asr #29
0xffff8bd484b4   180  ldr x5, [x26, #2400]
0xffff8bd484b8   184  stur x5, [x4, #15]
0xffff8bd484bc   188  movz x0, #0x5
0xffff8bd484c0   192  ldr x16, pc+248 (addr 0x0000ffff8bd485b8)    ;; code: BUILTIN
0xffff8bd484c4   196  br x16
0xffff8bd484c8   200  tbz w1, #0, #+0x88 (addr 0xffff8bd48550)
0xffff8bd484cc   204  ldur x5, [x1, #-1]
0xffff8bd484d0   208  ldrb w5, [x5, #11]
0xffff8bd484d4   212  cmp x5, #0xc9 (201)
0xffff8bd484d8   216  b.ne #+0x78 (addr 0xffff8bd48550)
0xffff8bd484dc   220  ldur x5, [cp, #39]
0xffff8bd484e0   224  ldur x5, [x5, #95]
0xffff8bd484e4   228  cmp x1, x5
0xffff8bd484e8   232  b.eq #+0x68 (addr 0xffff8bd48550)
0xffff8bd484ec   236  ldur x4, [x1, #39]
0xffff8bd484f0   240  ldur x4, [x4, #39]
0xffff8bd484f4   244  ldur x5, [cp, #39]
0xffff8bd484f8   248  cmp x4, x5
0xffff8bd484fc   252  b.ne #+0x54 (addr 0xffff8bd48550)
0xffff8bd48500   256  movz x5, #0x200000000
0xffff8bd48504   260  adds x4, x2, x3, asr #29
0xffff8bd48508   264  stur x5, [x4, #23]
0xffff8bd4850c   268  movz x16, #0xc00000000
0xffff8bd48510   272  sub csp, jssp, #0x10 (16)
0xffff8bd48514   276  stp fp, lr, [jssp, #-16]!
0xffff8bd48518   280  sub csp, jssp, #0x10 (16)
0xffff8bd4851c   284  str x16, [jssp, #-8]!
0xffff8bd48520   288  ldr x17, pc+160 (addr 0x0000ffff8bd485c0)    ;; object: 0xffff8bd483a1 <Code: CALL_IC>
0xffff8bd48524   292  sub csp, jssp, #0x10 (16)
0xffff8bd48528   296  str x17, [jssp, #-8]!
0xffff8bd4852c   300  add fp, jssp, #0x10 (16)
0xffff8bd48530   304  sub csp, jssp, #0x8 (8)
0xffff8bd48534   308  str x1, [jssp, #-8]!
0xffff8bd48538   312  ldr x16, pc+144 (addr 0x0000ffff8bd485c8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bd4853c   316  blr x16
0xffff8bd48540   320  ldr x1, [jssp], #8
0xffff8bd48544   324  mov jssp, fp
0xffff8bd48548   328  ldp fp, lr, [jssp], #16
0xffff8bd4854c   332  b #-0x11c (addr 0xffff8bd48430)
0xffff8bd48550   336  movz x16, #0xc00000000
0xffff8bd48554   340  sub csp, jssp, #0x10 (16)
0xffff8bd48558   344  stp fp, lr, [jssp, #-16]!
0xffff8bd4855c   348  sub csp, jssp, #0x10 (16)
0xffff8bd48560   352  str x16, [jssp, #-8]!
0xffff8bd48564   356  ldr x17, pc+108 (addr 0x0000ffff8bd485d0)    ;; object: 0xffff8bd483a1 <Code: CALL_IC>
0xffff8bd48568   360  sub csp, jssp, #0x10 (16)
0xffff8bd4856c   364  str x17, [jssp, #-8]!
0xffff8bd48570   368  add fp, jssp, #0x10 (16)
0xffff8bd48574   372  sub csp, jssp, #0x18 (24)
0xffff8bd48578   376  stp x3, x2, [jssp, #-24]!
0xffff8bd4857c   380  str x1, [jssp, #16]
0xffff8bd48580   384  movz x0, #0x3
0xffff8bd48584   388  ldr x1, pc+84 (addr 0x0000ffff8bd485d8)    ;; external reference (Runtime::CallIC_Miss)
0xffff8bd48588   392  ldr x16, pc+88 (addr 0x0000ffff8bd485e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd4858c   396  blr x16
0xffff8bd48590   400  mov x1, x0
0xffff8bd48594   404  mov jssp, fp
0xffff8bd48598   408  ldp fp, lr, [jssp], #16
0xffff8bd4859c   412  b #-0xe0 (addr 0xffff8bd484bc)
0xffff8bd485a0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bd485a4   420  d63f03e0       constant
0xffff8bd485a8   424  8bd1e600       constant
0xffff8bd485ac   428  0000ffff       constant
0xffff8bd485b0   432  8bd33b00       constant
0xffff8bd485b4   436  0000ffff       constant
0xffff8bd485b8   440  8bd1f6c0       constant
0xffff8bd485bc   444  0000ffff       constant
0xffff8bd485c0   448  8bd483a1       constant
0xffff8bd485c4   452  0000ffff       constant
0xffff8bd485c8   456  8bd0ddc0       constant
0xffff8bd485cc   460  0000ffff       constant
0xffff8bd485d0   464  8bd483a1       constant
0xffff8bd485d4   468  0000ffff       constant
0xffff8bd485d8   472  00c86928       constant
0xffff8bd485dc   476  00000000       constant
0xffff8bd485e0   480  8bd06060       constant
0xffff8bd485e4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd48434  code target (BUILTIN)  (0xffff8bd1e600)
0xffff8bd4848c  code target (STUB)  (0xffff8bd33b00)
0xffff8bd484c0  code target (BUILTIN)  (0xffff8bd1f6c0)
0xffff8bd48520  embedded object  (0xffff8bd483a1 <Code: CALL_IC>)
0xffff8bd48538  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bd48564  embedded object  (0xffff8bd483a1 <Code: CALL_IC>)
0xffff8bd48584  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8bd48588  code target (STUB)  (0xffff8bd06060)
0xffff8bd485a0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327685
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8bd48660     0  ldur x2, [fp, #-16]
0xffff8bd48664     4  ldur x2, [x2, #31]
0xffff8bd48668     8  ldur x2, [x2, #87]
0xffff8bd4866c    12  ldr x16, pc+20 (addr 0x0000ffff8bd48680)    ;; code: CALL_IC, GENERIC
0xffff8bd48670    16  br x16
0xffff8bd48674    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd48678    24  d63f03e0       constant
0xffff8bd4867c    28  d503201f       constant
0xffff8bd48680    32  8bd48400       constant
0xffff8bd48684    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd4866c  code target (CALL_IC)  (0xffff8bd48400)
0xffff8bd48674  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = RECEIVER*RECEIVER -> KNOWN_RECEIVER
compare_operation = EQ
name = CompareICStub
compiler = unknown
Instructions (size = 192)
0xffff8bd4ad80     0  and x16, x0, x1
0xffff8bd4ad84     4  tbz w16, #0, #+0x2c (addr 0xffff8bd4adb0)
0xffff8bd4ad88     8  ldr x12, pc+152 (addr 0x0000ffff8bd4ae20)    ;; object: 0x26c747c1 WeakCell for 0x5f50c131 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd4ad8c    12  ldur x12, [x12, #7]
0xffff8bd4ad90    16  ldur x10, [x0, #-1]
0xffff8bd4ad94    20  ldur x11, [x1, #-1]
0xffff8bd4ad98    24  cmp x10, x12
0xffff8bd4ad9c    28  b.ne #+0x14 (addr 0xffff8bd4adb0)
0xffff8bd4ada0    32  cmp x11, x12
0xffff8bd4ada4    36  b.ne #+0xc (addr 0xffff8bd4adb0)
0xffff8bd4ada8    40  sub x0, x0, x1
0xffff8bd4adac    44  ret
0xffff8bd4adb0    48  movz x16, #0xc00000000
0xffff8bd4adb4    52  sub csp, jssp, #0x10 (16)
0xffff8bd4adb8    56  stp fp, lr, [jssp, #-16]!
0xffff8bd4adbc    60  sub csp, jssp, #0x10 (16)
0xffff8bd4adc0    64  str x16, [jssp, #-8]!
0xffff8bd4adc4    68  ldr x17, pc+100 (addr 0x0000ffff8bd4ae28)    ;; object: 0xffff8bd4ad21 <Code: COMPARE_IC>
0xffff8bd4adc8    72  sub csp, jssp, #0x10 (16)
0xffff8bd4adcc    76  str x17, [jssp, #-8]!
0xffff8bd4add0    80  add fp, jssp, #0x10 (16)
0xffff8bd4add4    84  sub csp, jssp, #0x18 (24)
0xffff8bd4add8    88  stp lr, x0, [jssp, #-24]!
0xffff8bd4addc    92  str x1, [jssp, #16]
0xffff8bd4ade0    96  movz x10, #0x2d00000000
0xffff8bd4ade4   100  sub csp, jssp, #0x18 (24)
0xffff8bd4ade8   104  stp x10, x0, [jssp, #-24]!
0xffff8bd4adec   108  str x1, [jssp, #16]
0xffff8bd4adf0   112  movz x0, #0x3
0xffff8bd4adf4   116  ldr x1, pc+60 (addr 0x0000ffff8bd4ae30)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd4adf8   120  ldr x16, pc+64 (addr 0x0000ffff8bd4ae38)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd4adfc   124  blr x16
0xffff8bd4ae00   128  add x11, x0, #0x5f (95)
0xffff8bd4ae04   132  ldr x1, [jssp, #16]
0xffff8bd4ae08   136  ldp lr, x0, [jssp], #24
0xffff8bd4ae0c   140  mov jssp, fp
0xffff8bd4ae10   144  ldp fp, lr, [jssp], #16
0xffff8bd4ae14   148  br x11
0xffff8bd4ae18   152  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bd4ae1c   156  d63f03e0       constant
0xffff8bd4ae20   160  26c747c1       constant
0xffff8bd4ae24   164  00000000       constant
0xffff8bd4ae28   168  8bd4ad21       constant
0xffff8bd4ae2c   172  0000ffff       constant
0xffff8bd4ae30   176  00c8a980       constant
0xffff8bd4ae34   180  00000000       constant
0xffff8bd4ae38   184  8bd06060       constant
0xffff8bd4ae3c   188  0000ffff       constant


RelocInfo (size = 11)
0xffff8bd4ad88  embedded object  (0x26c747c1 WeakCell for 0x5f50c131 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd4adc4  embedded object  (0xffff8bd4ad21 <Code: COMPARE_IC>)
0xffff8bd4adf4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd4adf8  code target (STUB)  (0xffff8bd06060)
0xffff8bd4ae18  constant pool (size 40)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff8bd4aea0     0  movz x16, #0xc00000000
0xffff8bd4aea4     4  sub csp, jssp, #0x10 (16)
0xffff8bd4aea8     8  stp fp, lr, [jssp, #-16]!
0xffff8bd4aeac    12  sub csp, jssp, #0x10 (16)
0xffff8bd4aeb0    16  str x16, [jssp, #-8]!
0xffff8bd4aeb4    20  ldr x17, pc+92 (addr 0x0000ffff8bd4af10)    ;; object: 0xffff8bd4ae41 <Code: COMPARE_IC>
0xffff8bd4aeb8    24  sub csp, jssp, #0x10 (16)
0xffff8bd4aebc    28  str x17, [jssp, #-8]!
0xffff8bd4aec0    32  add fp, jssp, #0x10 (16)
0xffff8bd4aec4    36  sub csp, jssp, #0x18 (24)
0xffff8bd4aec8    40  stp lr, x0, [jssp, #-24]!
0xffff8bd4aecc    44  str x1, [jssp, #16]
0xffff8bd4aed0    48  movz x10, #0x2f00000000
0xffff8bd4aed4    52  sub csp, jssp, #0x18 (24)
0xffff8bd4aed8    56  stp x10, x0, [jssp, #-24]!
0xffff8bd4aedc    60  str x1, [jssp, #16]
0xffff8bd4aee0    64  movz x0, #0x3
0xffff8bd4aee4    68  ldr x1, pc+52 (addr 0x0000ffff8bd4af18)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd4aee8    72  ldr x16, pc+56 (addr 0x0000ffff8bd4af20)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd4aeec    76  blr x16
0xffff8bd4aef0    80  add x11, x0, #0x5f (95)
0xffff8bd4aef4    84  ldr x1, [jssp, #16]
0xffff8bd4aef8    88  ldp lr, x0, [jssp], #24
0xffff8bd4aefc    92  mov jssp, fp
0xffff8bd4af00    96  ldp fp, lr, [jssp], #16
0xffff8bd4af04   100  br x11
0xffff8bd4af08   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd4af0c   108  d63f03e0       constant
0xffff8bd4af10   112  8bd4ae41       constant
0xffff8bd4af14   116  0000ffff       constant
0xffff8bd4af18   120  00c8a980       constant
0xffff8bd4af1c   124  00000000       constant
0xffff8bd4af20   128  8bd06060       constant
0xffff8bd4af24   132  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd4aeb4  embedded object  (0xffff8bd4ae41 <Code: COMPARE_IC>)
0xffff8bd4aee4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd4aee8  code target (STUB)  (0xffff8bd06060)
0xffff8bd4af08  constant pool (size 32)


kind = STUB
major_key = DoubleToIStub
name = DoubleToIStub
compiler = unknown
Instructions (size = 60)
0xffff8bd4b6c0     0  sub csp, jssp, #0x10 (16)
0xffff8bd4b6c4     4  stp x2, x1, [jssp, #-16]!
0xffff8bd4b6c8     8  ldur x7, [x0, #7]
0xffff8bd4b6cc    12  ubfx x1, x7, #52, #11
0xffff8bd4b6d0    16  cmp x1, #0x453 (1107)
0xffff8bd4b6d4    20  csel x7, xzr, x7, ge
0xffff8bd4b6d8    24  b.ge #+0x1c (addr 0xffff8bd4b6f4)
0xffff8bd4b6dc    28  ubfx x2, x7, #0, #52
0xffff8bd4b6e0    32  orr x2, x2, #0x10000000000000
0xffff8bd4b6e4    36  tst x7, #0x8000000000000000
0xffff8bd4b6e8    40  cneg x2, x2, ne
0xffff8bd4b6ec    44  sub x1, x1, #0x433 (1075)
0xffff8bd4b6f0    48  lsl x7, x2, x1
0xffff8bd4b6f4    52  ldp x2, x1, [jssp], #16
0xffff8bd4b6f8    56  ret


RelocInfo (size = 0)


kind = STUB
major_key = BinaryOpWithAllocationSiteStub
name = BinaryOpWithAllocationSiteStub(ADD_CreateAllocationMementos:String*Smi->String)
compiler = crankshaft
Instructions (size = 1377)
0xffff8bd4b760     0  movz x16, #0xa00000000
0xffff8bd4b764     4  sub csp, jssp, #0x10 (16)
0xffff8bd4b768     8  stp fp, lr, [jssp, #-16]!
0xffff8bd4b76c    12  mov fp, jssp
0xffff8bd4b770    16  sub csp, jssp, #0x28 (40)
0xffff8bd4b774    20  sub jssp, jssp, #0x28 (40)
0xffff8bd4b778    24  stur x16, [fp, #-8]
0xffff8bd4b77c    28  str x2, [jssp, #24]
0xffff8bd4b780    32  str x1, [jssp, #16]
0xffff8bd4b784    36  str x0, [jssp, #8]
0xffff8bd4b788    40  str cp, [jssp]
0xffff8bd4b78c    44  mov x3, cp
0xffff8bd4b790    48  tbz w1, #0, #+0x4a8 (addr 0xffff8bd4bc38)
0xffff8bd4b794    52  ldur x4, [x1, #-1]
0xffff8bd4b798    56  ldrb w4, [x4, #11]
0xffff8bd4b79c    60  tbnz w4, #7, #+0x4a4 (addr 0xffff8bd4bc40)
0xffff8bd4b7a0    64  ldr x4, [x26, #368]
0xffff8bd4b7a4    68  ldur w5, [x4, #11]
0xffff8bd4b7a8    72  asr w5, w5, #1
0xffff8bd4b7ac    76  sub w5, w5, #0x1 (1)
0xffff8bd4b7b0    80  tbz w0, #0, #+0xc (addr 0xffff8bd4b7bc)
0xffff8bd4b7b4    84  ldr x16, pc+1012 (addr 0x0000ffff8bd4bba8)    ;; lazy deoptimization bailout 2
0xffff8bd4b7b8    88  blr x16
0xffff8bd4b7bc    92  tbnz w0, #0, #+0x2f4 (addr 0xffff8bd4bab0)
0xffff8bd4b7c0    96  asr x7, x0, #32
0xffff8bd4b7c4   100  and w5, w5, w7
0xffff8bd4b7c8   104  lsl w5, w5, #1
0xffff8bd4b7cc   108  add x6, x4, #0xf (15)
0xffff8bd4b7d0   112  ldr x7, [x6, w5, sxtw #3]
0xffff8bd4b7d4   116  cmp x0, x7
0xffff8bd4b7d8   120  b.eq #+0x28 (addr 0xffff8bd4b800)
0xffff8bd4b7dc   124  sub csp, jssp, #0x8 (8)
0xffff8bd4b7e0   128  str x0, [jssp, #-8]!
0xffff8bd4b7e4   132  mov cp, x3
0xffff8bd4b7e8   136  movz x0, #0x1
0xffff8bd4b7ec   140  movz x1, #0xce00
0xffff8bd4b7f0   144  movk x1, #0xe3, lsl #16
0xffff8bd4b7f4   148  ldr x16, pc+956 (addr 0x0000ffff8bd4bbb0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd4b7f8   152  blr x16
0xffff8bd4b7fc   156  b #+0x10 (addr 0xffff8bd4b80c)
0xffff8bd4b800   160  add x0, x4, #0x17 (23)
0xffff8bd4b804   164  ldr x1, [x0, w5, sxtw #3]
0xffff8bd4b808   168  mov x0, x1
0xffff8bd4b80c   172  ldr x1, [jssp, #16]
0xffff8bd4b810   176  ldur w2, [x1, #19]
0xffff8bd4b814   180  ldur w3, [x0, #19]
0xffff8bd4b818   184  cbz w2, #+0x288 (addr 0xffff8bd4baa0)
0xffff8bd4b81c   188  cbz w3, #+0x27c (addr 0xffff8bd4ba98)
0xffff8bd4b820   192  add w4, w2, w3
0xffff8bd4b824   196  movn w16, #0xe0
0xffff8bd4b828   200  cmp w4, w16, lsr #4
0xffff8bd4b82c   204  b.hs #+0x41c (addr 0xffff8bd4bc48)
0xffff8bd4b830   208  cmp w4, #0xd (13)
0xffff8bd4b834   212  b.ge #+0x1bc (addr 0xffff8bd4b9f0)
0xffff8bd4b838   216  ldur x5, [x1, #-1]
0xffff8bd4b83c   220  ldrb w5, [x5, #11]
0xffff8bd4b840   224  ldur x6, [x0, #-1]
0xffff8bd4b844   228  ldrb w6, [x6, #11]
0xffff8bd4b848   232  orr w7, w5, w6
0xffff8bd4b84c   236  eor w5, w5, w6
0xffff8bd4b850   240  and w5, w5, #0x4
0xffff8bd4b854   244  cbnz w5, #+0xc (addr 0xffff8bd4b860)
0xffff8bd4b858   248  and w5, w7, #0x3
0xffff8bd4b85c   252  cbz w5, #+0x28 (addr 0xffff8bd4b884)
0xffff8bd4b860   256  sub csp, jssp, #0x10 (16)
0xffff8bd4b864   260  stp x0, x1, [jssp, #-16]!
0xffff8bd4b868   264  ldr cp, [jssp, #16]
0xffff8bd4b86c   268  movz x0, #0x2
0xffff8bd4b870   272  movz x1, #0xa6c0
0xffff8bd4b874   276  movk x1, #0xec, lsl #16
0xffff8bd4b878   280  ldr x16, pc+832 (addr 0x0000ffff8bd4bbb8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd4b87c   284  blr x16
0xffff8bd4b880   288  b #+0x220 (addr 0xffff8bd4baa0)
0xffff8bd4b884   292  and w1, w7, #0x4
0xffff8bd4b888   296  cbnz w1, #+0x14 (addr 0xffff8bd4b89c)
0xffff8bd4b88c   300  lsl w1, w4, #1
0xffff8bd4b890   304  mov x5, x1
0xffff8bd4b894   308  ldr x1, pc+812 (addr 0x0000ffff8bd4bbc0)    ;; object: 0x5f504ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd4b898   312  b #+0xc (addr 0xffff8bd4b8a4)
0xffff8bd4b89c   316  mov x5, x4
0xffff8bd4b8a0   320  ldr x1, pc+808 (addr 0x0000ffff8bd4bbc8)    ;; object: 0x5f504bf9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd4b8a4   324  add w5, w5, #0x1f (31)
0xffff8bd4b8a8   328  and w5, w5, #0xfffffff8
0xffff8bd4b8ac   332  cmp w5, #0x96000 (614400)
0xffff8bd4b8b0   336  b.lt #+0x2c (addr 0xffff8bd4b8dc)
0xffff8bd4b8b4   340  sub csp, jssp, #0x10 (16)
0xffff8bd4b8b8   344  ldr x1, [jssp, #16]
0xffff8bd4b8bc   348  stp x0, x1, [jssp, #-16]!
0xffff8bd4b8c0   352  ldr cp, [jssp, #16]
0xffff8bd4b8c4   356  movz x0, #0x2
0xffff8bd4b8c8   360  movz x1, #0xa6c0
0xffff8bd4b8cc   364  movk x1, #0xec, lsl #16
0xffff8bd4b8d0   368  ldr x16, pc+768 (addr 0x0000ffff8bd4bbd0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd4b8d4   372  blr x16
0xffff8bd4b8d8   376  b #+0x1c8 (addr 0xffff8bd4baa0)
0xffff8bd4b8dc   380  add w6, w5, #0x10 (16)
0xffff8bd4b8e0   384  sxtw x6, w6
0xffff8bd4b8e4   388  movz x7, #0xe2c0
0xffff8bd4b8e8   392  movk x7, #0x2cb8, lsl #16
0xffff8bd4b8ec   396  ldp x9, x16, [x7]
0xffff8bd4b8f0   400  adds x8, x9, x6
0xffff8bd4b8f4   404  ccmp x8, x16, #nzCv, lo
0xffff8bd4b8f8   408  b.hi #+0x218 (addr 0xffff8bd4bb10)
0xffff8bd4b8fc   412  str x8, [x7]
0xffff8bd4b900   416  orr x9, x9, #0x1
0xffff8bd4b904   420  add x5, x9, w5, sxtw
0xffff8bd4b908   424  ldr x6, pc+720 (addr 0x0000ffff8bd4bbd8)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd4b90c   428  stur x6, [x5, #-1]
0xffff8bd4b910   432  ldr x6, [jssp, #24]
0xffff8bd4b914   436  stur x6, [x5, #7]
0xffff8bd4b918   440  ldur w5, [x6, #35]
0xffff8bd4b91c   444  add w5, w5, #0x1 (1)
0xffff8bd4b920   448  lsl x5, x5, #32
0xffff8bd4b924   452  stur x5, [x6, #31]
0xffff8bd4b928   456  stur x1, [x9, #-1]
0xffff8bd4b92c   460  movz w5, #0x3
0xffff8bd4b930   464  stur w5, [x9, #7]
0xffff8bd4b934   468  lsl x4, x4, #32
0xffff8bd4b938   472  stur x4, [x9, #15]
0xffff8bd4b93c   476  ldr x4, pc+676 (addr 0x0000ffff8bd4bbe0)    ;; object: 0x5f504ba1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd4b940   480  cmp x1, x4
0xffff8bd4b944   484  b.eq #+0x54 (addr 0xffff8bd4b998)
0xffff8bd4b948   488  ldr x5, [jssp, #16]
0xffff8bd4b94c   492  movz x1, #0x0
0xffff8bd4b950   496  cmp w2, w1
0xffff8bd4b954   500  b.le #+0x1c (addr 0xffff8bd4b970)
0xffff8bd4b958   504  add x4, x5, #0x17 (23)
0xffff8bd4b95c   508  ldrb w6, [x4, w1, sxtw]
0xffff8bd4b960   512  add x4, x9, #0x17 (23)
0xffff8bd4b964   516  strb w6, [x4, w1, sxtw]
0xffff8bd4b968   520  add w1, w1, #0x1 (1)
0xffff8bd4b96c   524  b #-0x1c (addr 0xffff8bd4b950)
0xffff8bd4b970   528  movz x1, #0x0
0xffff8bd4b974   532  cmp w3, w1
0xffff8bd4b978   536  b.le #+0x70 (addr 0xffff8bd4b9e8)
0xffff8bd4b97c   540  add x4, x0, #0x17 (23)
0xffff8bd4b980   544  ldrb w5, [x4, w1, sxtw]
0xffff8bd4b984   548  add w4, w2, w1
0xffff8bd4b988   552  add x6, x9, #0x17 (23)
0xffff8bd4b98c   556  strb w5, [x6, w4, sxtw]
0xffff8bd4b990   560  add w1, w1, #0x1 (1)
0xffff8bd4b994   564  b #-0x20 (addr 0xffff8bd4b974)
0xffff8bd4b998   568  ldr x5, [jssp, #16]
0xffff8bd4b99c   572  movz x1, #0x0
0xffff8bd4b9a0   576  cmp w2, w1
0xffff8bd4b9a4   580  b.le #+0x1c (addr 0xffff8bd4b9c0)
0xffff8bd4b9a8   584  add x4, x5, #0x17 (23)
0xffff8bd4b9ac   588  ldrh w6, [x4, w1, sxtw #1]
0xffff8bd4b9b0   592  add x4, x9, #0x17 (23)
0xffff8bd4b9b4   596  strh w6, [x4, w1, sxtw #1]
0xffff8bd4b9b8   600  add w1, w1, #0x1 (1)
0xffff8bd4b9bc   604  b #-0x1c (addr 0xffff8bd4b9a0)
0xffff8bd4b9c0   608  movz x1, #0x0
0xffff8bd4b9c4   612  cmp w3, w1
0xffff8bd4b9c8   616  b.le #+0x20 (addr 0xffff8bd4b9e8)
0xffff8bd4b9cc   620  add x4, x0, #0x17 (23)
0xffff8bd4b9d0   624  ldrh w5, [x4, w1, sxtw #1]
0xffff8bd4b9d4   628  add w4, w2, w1
0xffff8bd4b9d8   632  add x6, x9, #0x17 (23)
0xffff8bd4b9dc   636  strh w5, [x6, w4, sxtw #1]
0xffff8bd4b9e0   640  add w1, w1, #0x1 (1)
0xffff8bd4b9e4   644  b #-0x20 (addr 0xffff8bd4b9c4)
0xffff8bd4b9e8   648  mov x0, x9
0xffff8bd4b9ec   652  b #+0xb4 (addr 0xffff8bd4baa0)
0xffff8bd4b9f0   656  ldr x6, [jssp, #24]
0xffff8bd4b9f4   660  mov x5, x1
0xffff8bd4b9f8   664  ldur x1, [x5, #-1]
0xffff8bd4b9fc   668  ldrb w1, [x1, #11]
0xffff8bd4ba00   672  ldur x2, [x0, #-1]
0xffff8bd4ba04   676  ldrb w2, [x2, #11]
0xffff8bd4ba08   680  movz x7, #0xe2c0
0xffff8bd4ba0c   684  movk x7, #0x2cb8, lsl #16
0xffff8bd4ba10   688  ldp x8, x3, [x7]
0xffff8bd4ba14   692  adds x16, x8, #0x38 (56)
0xffff8bd4ba18   696  ccmp x16, x3, #nzCv, lo
0xffff8bd4ba1c   700  b.hi #+0x13c (addr 0xffff8bd4bb58)
0xffff8bd4ba20   704  str x16, [x7]
0xffff8bd4ba24   708  orr x8, x8, #0x1
0xffff8bd4ba28   712  add x3, x8, #0x28 (40)
0xffff8bd4ba2c   716  ldr x7, pc+444 (addr 0x0000ffff8bd4bbe8)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd4ba30   720  stur x7, [x3, #-1]
0xffff8bd4ba34   724  stur x6, [x3, #7]
0xffff8bd4ba38   728  ldur w3, [x6, #35]
0xffff8bd4ba3c   732  add w3, w3, #0x1 (1)
0xffff8bd4ba40   736  lsl x3, x3, #32
0xffff8bd4ba44   740  stur x3, [x6, #31]
0xffff8bd4ba48   744  and w3, w1, w2
0xffff8bd4ba4c   748  eor w1, w1, w2
0xffff8bd4ba50   752  and w2, w3, #0xc
0xffff8bd4ba54   756  cbnz w2, #+0x1c (addr 0xffff8bd4ba70)
0xffff8bd4ba58   760  and w1, w1, #0xc
0xffff8bd4ba5c   764  cmp w1, #0xc (12)
0xffff8bd4ba60   768  b.eq #+0x10 (addr 0xffff8bd4ba70)
0xffff8bd4ba64   772  ldr x1, pc+396 (addr 0x0000ffff8bd4bbf0)    ;; object: 0x5f504c51 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd4ba68   776  stur x1, [x8, #-1]
0xffff8bd4ba6c   780  b #+0xc (addr 0xffff8bd4ba78)
0xffff8bd4ba70   784  ldr x1, pc+392 (addr 0x0000ffff8bd4bbf8)    ;; object: 0x5f504ca9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd4ba74   788  stur x1, [x8, #-1]
0xffff8bd4ba78   792  movz w1, #0x3
0xffff8bd4ba7c   796  stur w1, [x8, #7]
0xffff8bd4ba80   800  lsl x1, x4, #32
0xffff8bd4ba84   804  stur x1, [x8, #15]
0xffff8bd4ba88   808  stur x5, [x8, #23]
0xffff8bd4ba8c   812  stur x0, [x8, #31]
0xffff8bd4ba90   816  mov x0, x8
0xffff8bd4ba94   820  b #+0xc (addr 0xffff8bd4baa0)
0xffff8bd4ba98   824  mov x5, x1
0xffff8bd4ba9c   828  mov x0, x5
0xffff8bd4baa0   832  ldr cp, [jssp]
0xffff8bd4baa4   836  mov jssp, fp
0xffff8bd4baa8   840  ldp fp, lr, [jssp], #16
0xffff8bd4baac   844  ret
0xffff8bd4bab0   848  ldur x16, [x0, #-1]
0xffff8bd4bab4   852  ldr x17, [x26, #120]
0xffff8bd4bab8   856  cmp x16, x17
0xffff8bd4babc   860  b.ne #+0x30 (addr 0xffff8bd4baec)
0xffff8bd4bac0   864  ldur d30, [x0, #7]
0xffff8bd4bac4   868  fcvtzs x7, d30
0xffff8bd4bac8   872  cmp x7, #0x1 (1)
0xffff8bd4bacc   876  ccmn x7, #1, #nzcV, vc
0xffff8bd4bad0   880  b.vc #+0x18 (addr 0xffff8bd4bae8)
0xffff8bd4bad4   884  sub csp, jssp, #0x8 (8)
0xffff8bd4bad8   888  str lr, [jssp, #-8]!
0xffff8bd4badc   892  ldr x16, pc+292 (addr 0x0000ffff8bd4bc00)    ;; code: STUB, DoubleToIStub, minor: 127424
0xffff8bd4bae0   896  blr x16
0xffff8bd4bae4   900  ldr lr, [jssp], #8
0xffff8bd4bae8   904  b #+0x24 (addr 0xffff8bd4bb0c)
0xffff8bd4baec   908  ldp x7, x6, [x26, #64]
0xffff8bd4baf0   912  cmp x0, x7
0xffff8bd4baf4   916  cset x7, eq
0xffff8bd4baf8   920  ccmp x0, x6, #nZcv, ne
0xffff8bd4bafc   924  b.eq #+0x10 (addr 0xffff8bd4bb0c)
0xffff8bd4bb00   928  ldr x16, [x26, #40]
0xffff8bd4bb04   932  cmp x0, x16
0xffff8bd4bb08   936  b.ne #+0x148 (addr 0xffff8bd4bc50)
0xffff8bd4bb0c   940  b #-0x348 (addr 0xffff8bd4b7c4)
0xffff8bd4bb10   944  movz x9, #0x0
0xffff8bd4bb14   948  mov x16, lr
0xffff8bd4bb18   952  ldr x17, pc+240 (addr 0x0000ffff8bd4bc08)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd4bb1c   956  blr x17
0xffff8bd4bb20   960  lsl x0, x6, #32
0xffff8bd4bb24   964  movz x10, #0x0
0xffff8bd4bb28   968  sub csp, jssp, #0x10 (16)
0xffff8bd4bb2c   972  stp x10, x0, [jssp, #-16]!
0xffff8bd4bb30   976  ldur cp, [fp, #-40]
0xffff8bd4bb34   980  movz x0, #0x2
0xffff8bd4bb38   984  movz x1, #0x5b88
0xffff8bd4bb3c   988  movk x1, #0xe2, lsl #16
0xffff8bd4bb40   992  ldr x16, pc+208 (addr 0x0000ffff8bd4bc10)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd4bb44   996  blr x16
0xffff8bd4bb48  1000  str x0, [jssp, #72]
0xffff8bd4bb4c  1004  ldr x16, pc+204 (addr 0x0000ffff8bd4bc18)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd4bb50  1008  blr x16
0xffff8bd4bb54  1012  b #-0x250 (addr 0xffff8bd4b904)
0xffff8bd4bb58  1016  movz x8, #0x0
0xffff8bd4bb5c  1020  mov x16, lr
0xffff8bd4bb60  1024  ldr x17, pc+192 (addr 0x0000ffff8bd4bc20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd4bb64  1028  blr x17
0xffff8bd4bb68  1032  movz x0, #0x3800000000
0xffff8bd4bb6c  1036  movz x10, #0x0
0xffff8bd4bb70  1040  sub csp, jssp, #0x10 (16)
0xffff8bd4bb74  1044  stp x10, x0, [jssp, #-16]!
0xffff8bd4bb78  1048  ldur cp, [fp, #-40]
0xffff8bd4bb7c  1052  movz x0, #0x2
0xffff8bd4bb80  1056  movz x1, #0x5b88
0xffff8bd4bb84  1060  movk x1, #0xe2, lsl #16
0xffff8bd4bb88  1064  ldr x16, pc+160 (addr 0x0000ffff8bd4bc28)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd4bb8c  1068  blr x16
0xffff8bd4bb90  1072  str x0, [jssp, #64]
0xffff8bd4bb94  1076  ldr x16, pc+156 (addr 0x0000ffff8bd4bc30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd4bb98  1080  blr x16
0xffff8bd4bb9c  1084  b #-0x174 (addr 0xffff8bd4ba28)
0xffff8bd4bba0  1088  580004bf       constant pool begin (num_const = 37)    ;; constant pool
0xffff8bd4bba4  1092  d63f03e0       constant
0xffff8bd4bba8  1096  8bb06010       constant
0xffff8bd4bbac  1100  0000ffff       constant
0xffff8bd4bbb0  1104  8bd06060       constant
0xffff8bd4bbb4  1108  0000ffff       constant
0xffff8bd4bbb8  1112  8bd06060       constant
0xffff8bd4bbbc  1116  0000ffff       constant
0xffff8bd4bbc0  1120  5f504ba1       constant
0xffff8bd4bbc4  1124  00000000       constant
0xffff8bd4bbc8  1128  5f504bf9       constant
0xffff8bd4bbcc  1132  00000000       constant
0xffff8bd4bbd0  1136  8bd06060       constant
0xffff8bd4bbd4  1140  0000ffff       constant
0xffff8bd4bbd8  1144  5f505d81       constant
0xffff8bd4bbdc  1148  00000000       constant
0xffff8bd4bbe0  1152  5f504ba1       constant
0xffff8bd4bbe4  1156  00000000       constant
0xffff8bd4bbe8  1160  5f505d81       constant
0xffff8bd4bbec  1164  00000000       constant
0xffff8bd4bbf0  1168  5f504c51       constant
0xffff8bd4bbf4  1172  00000000       constant
0xffff8bd4bbf8  1176  5f504ca9       constant
0xffff8bd4bbfc  1180  00000000       constant
0xffff8bd4bc00  1184  8bd4b6c0       constant
0xffff8bd4bc04  1188  0000ffff       constant
0xffff8bd4bc08  1192  8bd06820       constant
0xffff8bd4bc0c  1196  0000ffff       constant
0xffff8bd4bc10  1200  8bd06260       constant
0xffff8bd4bc14  1204  0000ffff       constant
0xffff8bd4bc18  1208  8bd068e0       constant
0xffff8bd4bc1c  1212  0000ffff       constant
0xffff8bd4bc20  1216  8bd06820       constant
0xffff8bd4bc24  1220  0000ffff       constant
0xffff8bd4bc28  1224  8bd06260       constant
0xffff8bd4bc2c  1228  0000ffff       constant
0xffff8bd4bc30  1232  8bd068e0       constant
0xffff8bd4bc34  1236  0000ffff       constant
0xffff8bd4bc38  1240  movz x16, #0x0
0xffff8bd4bc3c  1244  bl #+0x1c (addr 0xffff8bd4bc58)
0xffff8bd4bc40  1248  movz x16, #0x8
0xffff8bd4bc44  1252  bl #+0x14 (addr 0xffff8bd4bc58)
0xffff8bd4bc48  1256  movz x16, #0x20
0xffff8bd4bc4c  1260  bl #+0xc (addr 0xffff8bd4bc58)
0xffff8bd4bc50  1264  movz x16, #0x38
0xffff8bd4bc54  1268  bl #+0x4 (addr 0xffff8bd4bc58)
0xffff8bd4bc58  1272  ldr x17, pc+24 (addr 0x0000ffff8bd4bc70)    ;; lazy deoptimization bailout 0
0xffff8bd4bc5c  1276  add x17, x17, x16
0xffff8bd4bc60  1280  br x17
0xffff8bd4bc64  1284  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd4bc68  1288  d63f03e0       constant
0xffff8bd4bc6c  1292  d503201f       constant
0xffff8bd4bc70  1296  8bb06000       constant
0xffff8bd4bc74  1300  0000ffff       constant


Safepoints (size = 73)
0xffff8bd4b7fc   156  1111000 (sp -> fp)       3
0xffff8bd4b880   288  1111000 (sp -> fp)       5
0xffff8bd4b8d8   376  1111000 (sp -> fp)       6
0xffff8bd4bb48  1000  1011000 | x0 | x1 | x9 (sp -> fp)  <none> argc: 2
0xffff8bd4bb90  1072  1011000 | x0 | x5 | x6 | x8 (sp -> fp)  <none> argc: 2

RelocInfo (size = 45)
0xffff8bd4b7b4  runtime entry
0xffff8bd4b7f4  code target (STUB)  (0xffff8bd06060)
0xffff8bd4b878  code target (STUB)  (0xffff8bd06060)
0xffff8bd4b894  embedded object  (0x5f504ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd4b8a0  embedded object  (0x5f504bf9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd4b8d0  code target (STUB)  (0xffff8bd06060)
0xffff8bd4b908  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd4b93c  embedded object  (0x5f504ba1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd4ba2c  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd4ba64  embedded object  (0x5f504c51 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd4ba70  embedded object  (0x5f504ca9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd4badc  code target (STUB)  (0xffff8bd4b6c0)
0xffff8bd4bb18  code target (STUB)  (0xffff8bd06820)
0xffff8bd4bb40  code target (STUB)  (0xffff8bd06260)
0xffff8bd4bb4c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd4bb60  code target (STUB)  (0xffff8bd06820)
0xffff8bd4bb88  code target (STUB)  (0xffff8bd06260)
0xffff8bd4bb94  code target (STUB)  (0xffff8bd068e0)
0xffff8bd4bba0  constant pool (size 152)
0xffff8bd4bc58  runtime entry
0xffff8bd4bc64  constant pool (size 20)


kind = BINARY_OP_IC
major_key = BinaryOpICWithAllocationSiteStub
ic_state = MONOMORPHIC
extra_ic_state = 2631
type = NORMAL
name = BinaryOpICWithAllocationSiteStub(ADD_CreateAllocationMementos:String*Smi->String)
compiler = unknown
Instructions (size = 40)
0xffff8bd4bd40     0  ldr x2, pc+24 (addr 0x0000ffff8bd4bd58)    ;; object: 0x26c04241 <undefined>
0xffff8bd4bd44     4  ldr x16, pc+28 (addr 0x0000ffff8bd4bd60)    ;; code: STUB, BinaryOpWithAllocationSiteStub, minor: 2631
0xffff8bd4bd48     8  br x16
0xffff8bd4bd4c    12  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd4bd50    16  d63f03e0       constant
0xffff8bd4bd54    20  d503201f       constant
0xffff8bd4bd58    24  26c04241       constant
0xffff8bd4bd5c    28  00000000       constant
0xffff8bd4bd60    32  8bd4b760       constant
0xffff8bd4bd64    36  0000ffff       constant


RelocInfo (size = 8)
0xffff8bd4bd40  embedded object  (0x26c04241 <undefined>)
0xffff8bd4bd44  code target (STUB)  (0xffff8bd4b760)
0xffff8bd4bd4c  constant pool (size 28)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 269)
0xffff8bd4be80     0  movz x2, #0xe2c0
0xffff8bd4be84     4  movk x2, #0x2cb8, lsl #16
0xffff8bd4be88     8  ldp x3, x0, [x2]
0xffff8bd4be8c    12  adds x16, x3, #0x38 (56)
0xffff8bd4be90    16  ccmp x16, x0, #nzCv, lo
0xffff8bd4be94    20  b.hi #+0x44 (addr 0xffff8bd4bed8)
0xffff8bd4be98    24  str x16, [x2]
0xffff8bd4be9c    28  orr x3, x3, #0x1
0xffff8bd4bea0    32  ldr x0, pc+168 (addr 0x0000ffff8bd4bf48)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd4bea4    36  stur x0, [x3, #-1]
0xffff8bd4bea8    40  movz x0, #0x500000000
0xffff8bd4beac    44  stur x0, [x3, #7]
0xffff8bd4beb0    48  stur x1, [x3, #15]
0xffff8bd4beb4    52  stur cp, [x3, #23]
0xffff8bd4beb8    56  ldr x0, pc+152 (addr 0x0000ffff8bd4bf50)    ;; object: 0x26c04519 <the hole>
0xffff8bd4bebc    60  stur x0, [x3, #31]
0xffff8bd4bec0    64  ldur x0, [cp, #39]
0xffff8bd4bec4    68  stur x0, [x3, #39]
0xffff8bd4bec8    72  ldr x0, pc+144 (addr 0x0000ffff8bd4bf58)    ;; object: 0x26c04241 <undefined>
0xffff8bd4becc    76  stur x0, [x3, #47]
0xffff8bd4bed0    80  mov x0, x3
0xffff8bd4bed4    84  ret
0xffff8bd4bed8    88  sub csp, jssp, #0x10 (16)
0xffff8bd4bedc    92  stp fp, lr, [jssp, #-16]!
0xffff8bd4bee0    96  movz fp, #0xa00000000
0xffff8bd4bee4   100  sub csp, jssp, #0x8 (8)
0xffff8bd4bee8   104  str fp, [jssp, #-8]!
0xffff8bd4beec   108  add fp, jssp, #0x8 (8)
0xffff8bd4bef0   112  movz x3, #0x0
0xffff8bd4bef4   116  mov x16, lr
0xffff8bd4bef8   120  ldr x17, pc+104 (addr 0x0000ffff8bd4bf60)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd4befc   124  blr x17
0xffff8bd4bf00   128  movz x0, #0x3800000000
0xffff8bd4bf04   132  movz x10, #0x0
0xffff8bd4bf08   136  sub csp, jssp, #0x10 (16)
0xffff8bd4bf0c   140  stp x10, x0, [jssp, #-16]!
0xffff8bd4bf10   144  movz x0, #0x2
0xffff8bd4bf14   148  movz x1, #0x5b88
0xffff8bd4bf18   152  movk x1, #0xe2, lsl #16
0xffff8bd4bf1c   156  ldr x16, pc+76 (addr 0x0000ffff8bd4bf68)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd4bf20   160  blr x16
0xffff8bd4bf24   164  str x0, [jssp, #24]
0xffff8bd4bf28   168  ldr x16, pc+72 (addr 0x0000ffff8bd4bf70)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd4bf2c   172  blr x16
0xffff8bd4bf30   176  ldr lr, [jssp, #16]
0xffff8bd4bf34   180  ldp xzr, fp, [jssp], #24
0xffff8bd4bf38   184  b #-0x98 (addr 0xffff8bd4bea0)
0xffff8bd4bf3c   188  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bd4bf40   192  d63f03e0       constant
0xffff8bd4bf44   196  d503201f       constant
0xffff8bd4bf48   200  5f506149       constant
0xffff8bd4bf4c   204  00000000       constant
0xffff8bd4bf50   208  26c04519       constant
0xffff8bd4bf54   212  00000000       constant
0xffff8bd4bf58   216  26c04241       constant
0xffff8bd4bf5c   220  00000000       constant
0xffff8bd4bf60   224  8bd06820       constant
0xffff8bd4bf64   228  0000ffff       constant
0xffff8bd4bf68   232  8bd06260       constant
0xffff8bd4bf6c   236  0000ffff       constant
0xffff8bd4bf70   240  8bd068e0       constant
0xffff8bd4bf74   244  0000ffff       constant


Safepoints (size = 21)
0xffff8bd4bf24   164  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 12)
0xffff8bd4bea0  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd4beb8  embedded object  (0x26c04519 <the hole>)
0xffff8bd4bec8  embedded object  (0x26c04241 <undefined>)
0xffff8bd4bef8  code target (STUB)  (0xffff8bd06820)
0xffff8bd4bf1c  code target (STUB)  (0xffff8bd06260)
0xffff8bd4bf28  code target (STUB)  (0xffff8bd068e0)
0xffff8bd4bf3c  constant pool (size 60)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd4c160     0  ldur x0, [x1, #-1]
0xffff8bd4c164     4  ldur x0, [x0, #47]
0xffff8bd4c168     8  ldur x0, [x0, #239]
0xffff8bd4c16c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd52500     0  ldur x0, [x1, #-1]
0xffff8bd52504     4  ldur x0, [x0, #47]
0xffff8bd52508     8  movz x16, #0x7f7
0xffff8bd5250c    12  ldr x0, [x0, x16]
0xffff8bd52510    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393220
name = CallICStub(args(4), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff8bd52580     0  add x4, x2, x3, asr #29
0xffff8bd52584     4  ldur x4, [x4, #15]
0xffff8bd52588     8  ldur x5, [x4, #7]
0xffff8bd5258c    12  cmp x5, x1
0xffff8bd52590    16  b.ne #+0x2c (addr 0xffff8bd525bc)
0xffff8bd52594    20  tbz w1, #0, #+0x28 (addr 0xffff8bd525bc)
0xffff8bd52598    24  add x2, x2, x3, asr #29
0xffff8bd5259c    28  add x2, x2, #0x18 (24)
0xffff8bd525a0    32  ldur x3, [x2, #-1]
0xffff8bd525a4    36  movz x16, #0x200000000
0xffff8bd525a8    40  add x3, x3, x16
0xffff8bd525ac    44  stur x3, [x2, #-1]
0xffff8bd525b0    48  movz x0, #0x4
0xffff8bd525b4    52  ldr x16, pc+372 (addr 0x0000ffff8bd52728)    ;; code: BUILTIN
0xffff8bd525b8    56  br x16
0xffff8bd525bc    60  ldr x16, [x26, #2400]
0xffff8bd525c0    64  cmp x4, x16
0xffff8bd525c4    68  b.eq #+0x78 (addr 0xffff8bd5263c)
0xffff8bd525c8    72  ldur x5, [x4, #-1]
0xffff8bd525cc    76  ldr x16, [x26, #2736]
0xffff8bd525d0    80  cmp x5, x16
0xffff8bd525d4    84  b.ne #+0x40 (addr 0xffff8bd52614)
0xffff8bd525d8    88  ldur x5, [cp, #39]
0xffff8bd525dc    92  ldur x5, [x5, #95]
0xffff8bd525e0    96  cmp x1, x5
0xffff8bd525e4   100  b.ne #+0xec (addr 0xffff8bd526d0)
0xffff8bd525e8   104  movz x0, #0x4
0xffff8bd525ec   108  add x2, x2, x3, asr #29
0xffff8bd525f0   112  add x2, x2, #0x18 (24)
0xffff8bd525f4   116  ldur x3, [x2, #-1]
0xffff8bd525f8   120  movz x16, #0x200000000
0xffff8bd525fc   124  add x3, x3, x16
0xffff8bd52600   128  stur x3, [x2, #-1]
0xffff8bd52604   132  mov x2, x4
0xffff8bd52608   136  mov x3, x1
0xffff8bd5260c   140  ldr x16, pc+292 (addr 0x0000ffff8bd52730)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff8bd52610   144  br x16
0xffff8bd52614   148  ldr x16, [x26, #2568]
0xffff8bd52618   152  cmp x4, x16
0xffff8bd5261c   156  b.eq #+0xb4 (addr 0xffff8bd526d0)
0xffff8bd52620   160  ldur x5, [x4, #-1]
0xffff8bd52624   164  ldrb w5, [x5, #11]
0xffff8bd52628   168  cmp x5, #0xc9 (201)
0xffff8bd5262c   172  b.ne #+0xa4 (addr 0xffff8bd526d0)
0xffff8bd52630   176  add x4, x2, x3, asr #29
0xffff8bd52634   180  ldr x5, [x26, #2400]
0xffff8bd52638   184  stur x5, [x4, #15]
0xffff8bd5263c   188  movz x0, #0x4
0xffff8bd52640   192  ldr x16, pc+248 (addr 0x0000ffff8bd52738)    ;; code: BUILTIN
0xffff8bd52644   196  br x16
0xffff8bd52648   200  tbz w1, #0, #+0x88 (addr 0xffff8bd526d0)
0xffff8bd5264c   204  ldur x5, [x1, #-1]
0xffff8bd52650   208  ldrb w5, [x5, #11]
0xffff8bd52654   212  cmp x5, #0xc9 (201)
0xffff8bd52658   216  b.ne #+0x78 (addr 0xffff8bd526d0)
0xffff8bd5265c   220  ldur x5, [cp, #39]
0xffff8bd52660   224  ldur x5, [x5, #95]
0xffff8bd52664   228  cmp x1, x5
0xffff8bd52668   232  b.eq #+0x68 (addr 0xffff8bd526d0)
0xffff8bd5266c   236  ldur x4, [x1, #39]
0xffff8bd52670   240  ldur x4, [x4, #39]
0xffff8bd52674   244  ldur x5, [cp, #39]
0xffff8bd52678   248  cmp x4, x5
0xffff8bd5267c   252  b.ne #+0x54 (addr 0xffff8bd526d0)
0xffff8bd52680   256  movz x5, #0x200000000
0xffff8bd52684   260  adds x4, x2, x3, asr #29
0xffff8bd52688   264  stur x5, [x4, #23]
0xffff8bd5268c   268  movz x16, #0xc00000000
0xffff8bd52690   272  sub csp, jssp, #0x10 (16)
0xffff8bd52694   276  stp fp, lr, [jssp, #-16]!
0xffff8bd52698   280  sub csp, jssp, #0x10 (16)
0xffff8bd5269c   284  str x16, [jssp, #-8]!
0xffff8bd526a0   288  ldr x17, pc+160 (addr 0x0000ffff8bd52740)    ;; object: 0xffff8bd52521 <Code: CALL_IC>
0xffff8bd526a4   292  sub csp, jssp, #0x10 (16)
0xffff8bd526a8   296  str x17, [jssp, #-8]!
0xffff8bd526ac   300  add fp, jssp, #0x10 (16)
0xffff8bd526b0   304  sub csp, jssp, #0x8 (8)
0xffff8bd526b4   308  str x1, [jssp, #-8]!
0xffff8bd526b8   312  ldr x16, pc+144 (addr 0x0000ffff8bd52748)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bd526bc   316  blr x16
0xffff8bd526c0   320  ldr x1, [jssp], #8
0xffff8bd526c4   324  mov jssp, fp
0xffff8bd526c8   328  ldp fp, lr, [jssp], #16
0xffff8bd526cc   332  b #-0x11c (addr 0xffff8bd525b0)
0xffff8bd526d0   336  movz x16, #0xc00000000
0xffff8bd526d4   340  sub csp, jssp, #0x10 (16)
0xffff8bd526d8   344  stp fp, lr, [jssp, #-16]!
0xffff8bd526dc   348  sub csp, jssp, #0x10 (16)
0xffff8bd526e0   352  str x16, [jssp, #-8]!
0xffff8bd526e4   356  ldr x17, pc+108 (addr 0x0000ffff8bd52750)    ;; object: 0xffff8bd52521 <Code: CALL_IC>
0xffff8bd526e8   360  sub csp, jssp, #0x10 (16)
0xffff8bd526ec   364  str x17, [jssp, #-8]!
0xffff8bd526f0   368  add fp, jssp, #0x10 (16)
0xffff8bd526f4   372  sub csp, jssp, #0x18 (24)
0xffff8bd526f8   376  stp x3, x2, [jssp, #-24]!
0xffff8bd526fc   380  str x1, [jssp, #16]
0xffff8bd52700   384  movz x0, #0x3
0xffff8bd52704   388  ldr x1, pc+84 (addr 0x0000ffff8bd52758)    ;; external reference (Runtime::CallIC_Miss)
0xffff8bd52708   392  ldr x16, pc+88 (addr 0x0000ffff8bd52760)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd5270c   396  blr x16
0xffff8bd52710   400  mov x1, x0
0xffff8bd52714   404  mov jssp, fp
0xffff8bd52718   408  ldp fp, lr, [jssp], #16
0xffff8bd5271c   412  b #-0xe0 (addr 0xffff8bd5263c)
0xffff8bd52720   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bd52724   420  d63f03e0       constant
0xffff8bd52728   424  8bd1e820       constant
0xffff8bd5272c   428  0000ffff       constant
0xffff8bd52730   432  8bd33b00       constant
0xffff8bd52734   436  0000ffff       constant
0xffff8bd52738   440  8bd1f820       constant
0xffff8bd5273c   444  0000ffff       constant
0xffff8bd52740   448  8bd52521       constant
0xffff8bd52744   452  0000ffff       constant
0xffff8bd52748   456  8bd0ddc0       constant
0xffff8bd5274c   460  0000ffff       constant
0xffff8bd52750   464  8bd52521       constant
0xffff8bd52754   468  0000ffff       constant
0xffff8bd52758   472  00c86928       constant
0xffff8bd5275c   476  00000000       constant
0xffff8bd52760   480  8bd06060       constant
0xffff8bd52764   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd525b4  code target (BUILTIN)  (0xffff8bd1e820)
0xffff8bd5260c  code target (STUB)  (0xffff8bd33b00)
0xffff8bd52640  code target (BUILTIN)  (0xffff8bd1f820)
0xffff8bd526a0  embedded object  (0xffff8bd52521 <Code: CALL_IC>)
0xffff8bd526b8  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bd526e4  embedded object  (0xffff8bd52521 <Code: CALL_IC>)
0xffff8bd52704  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8bd52708  code target (STUB)  (0xffff8bd06060)
0xffff8bd52720  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393220
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8bd527e0     0  ldur x2, [fp, #-16]
0xffff8bd527e4     4  ldur x2, [x2, #31]
0xffff8bd527e8     8  ldur x2, [x2, #87]
0xffff8bd527ec    12  ldr x16, pc+20 (addr 0x0000ffff8bd52800)    ;; code: CALL_IC, GENERIC
0xffff8bd527f0    16  br x16
0xffff8bd527f4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd527f8    24  d63f03e0       constant
0xffff8bd527fc    28  d503201f       constant
0xffff8bd52800    32  8bd52580       constant
0xffff8bd52804    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd527ec  code target (CALL_IC)  (0xffff8bd52580)
0xffff8bd527f4  constant pool (size 20)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd569e0     0  ldur x0, [x1, #7]
0xffff8bd569e4     4  movz x16, #0x1d7
0xffff8bd569e8     8  ldr x0, [x0, x16]
0xffff8bd569ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd57320     0  ldur x0, [x1, #7]
0xffff8bd57324     4  movz x16, #0x1df
0xffff8bd57328     8  ldr x0, [x0, x16]
0xffff8bd5732c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd573a0     0  ldur x0, [x1, #-1]
0xffff8bd573a4     4  ldur x0, [x0, #47]
0xffff8bd573a8     8  movz x16, #0x5cf
0xffff8bd573ac    12  ldr x0, [x0, x16]
0xffff8bd573b0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 1165)
0xffff8bd57420     0  movz x2, #0xe2c0
0xffff8bd57424     4  movk x2, #0x2cb8, lsl #16
0xffff8bd57428     8  ldp x3, x0, [x2]
0xffff8bd5742c    12  adds x16, x3, #0x1c8 (456)
0xffff8bd57430    16  ccmp x16, x0, #nzCv, lo
0xffff8bd57434    20  b.hi #+0x234 (addr 0xffff8bd57668)
0xffff8bd57438    24  str x16, [x2]
0xffff8bd5743c    28  orr x3, x3, #0x1
0xffff8bd57440    32  ldr x0, pc+664 (addr 0x0000ffff8bd576d8)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd57444    36  stur x0, [x3, #-1]
0xffff8bd57448    40  movz x0, #0x3700000000
0xffff8bd5744c    44  stur x0, [x3, #7]
0xffff8bd57450    48  stur x1, [x3, #15]
0xffff8bd57454    52  stur cp, [x3, #23]
0xffff8bd57458    56  ldr x0, pc+648 (addr 0x0000ffff8bd576e0)    ;; object: 0x26c04519 <the hole>
0xffff8bd5745c    60  stur x0, [x3, #31]
0xffff8bd57460    64  ldur x0, [cp, #39]
0xffff8bd57464    68  stur x0, [x3, #39]
0xffff8bd57468    72  ldr x0, pc+640 (addr 0x0000ffff8bd576e8)    ;; object: 0x26c04241 <undefined>
0xffff8bd5746c    76  stur x0, [x3, #47]
0xffff8bd57470    80  ldr x0, pc+640 (addr 0x0000ffff8bd576f0)    ;; object: 0x26c04241 <undefined>
0xffff8bd57474    84  stur x0, [x3, #55]
0xffff8bd57478    88  ldr x0, pc+640 (addr 0x0000ffff8bd576f8)    ;; object: 0x26c04241 <undefined>
0xffff8bd5747c    92  stur x0, [x3, #63]
0xffff8bd57480    96  ldr x0, pc+640 (addr 0x0000ffff8bd57700)    ;; object: 0x26c04241 <undefined>
0xffff8bd57484   100  stur x0, [x3, #71]
0xffff8bd57488   104  ldr x0, pc+640 (addr 0x0000ffff8bd57708)    ;; object: 0x26c04241 <undefined>
0xffff8bd5748c   108  stur x0, [x3, #79]
0xffff8bd57490   112  ldr x0, pc+640 (addr 0x0000ffff8bd57710)    ;; object: 0x26c04241 <undefined>
0xffff8bd57494   116  stur x0, [x3, #87]
0xffff8bd57498   120  ldr x0, pc+640 (addr 0x0000ffff8bd57718)    ;; object: 0x26c04241 <undefined>
0xffff8bd5749c   124  stur x0, [x3, #95]
0xffff8bd574a0   128  ldr x0, pc+640 (addr 0x0000ffff8bd57720)    ;; object: 0x26c04241 <undefined>
0xffff8bd574a4   132  stur x0, [x3, #103]
0xffff8bd574a8   136  ldr x0, pc+640 (addr 0x0000ffff8bd57728)    ;; object: 0x26c04241 <undefined>
0xffff8bd574ac   140  stur x0, [x3, #111]
0xffff8bd574b0   144  ldr x0, pc+640 (addr 0x0000ffff8bd57730)    ;; object: 0x26c04241 <undefined>
0xffff8bd574b4   148  stur x0, [x3, #119]
0xffff8bd574b8   152  ldr x0, pc+640 (addr 0x0000ffff8bd57738)    ;; object: 0x26c04241 <undefined>
0xffff8bd574bc   156  stur x0, [x3, #127]
0xffff8bd574c0   160  ldr x0, pc+640 (addr 0x0000ffff8bd57740)    ;; object: 0x26c04241 <undefined>
0xffff8bd574c4   164  stur x0, [x3, #135]
0xffff8bd574c8   168  ldr x0, pc+640 (addr 0x0000ffff8bd57748)    ;; object: 0x26c04241 <undefined>
0xffff8bd574cc   172  stur x0, [x3, #143]
0xffff8bd574d0   176  ldr x0, pc+640 (addr 0x0000ffff8bd57750)    ;; object: 0x26c04241 <undefined>
0xffff8bd574d4   180  stur x0, [x3, #151]
0xffff8bd574d8   184  ldr x0, pc+640 (addr 0x0000ffff8bd57758)    ;; object: 0x26c04241 <undefined>
0xffff8bd574dc   188  stur x0, [x3, #159]
0xffff8bd574e0   192  ldr x0, pc+640 (addr 0x0000ffff8bd57760)    ;; object: 0x26c04241 <undefined>
0xffff8bd574e4   196  stur x0, [x3, #167]
0xffff8bd574e8   200  ldr x0, pc+640 (addr 0x0000ffff8bd57768)    ;; object: 0x26c04241 <undefined>
0xffff8bd574ec   204  stur x0, [x3, #175]
0xffff8bd574f0   208  ldr x0, pc+640 (addr 0x0000ffff8bd57770)    ;; object: 0x26c04241 <undefined>
0xffff8bd574f4   212  stur x0, [x3, #183]
0xffff8bd574f8   216  ldr x0, pc+640 (addr 0x0000ffff8bd57778)    ;; object: 0x26c04241 <undefined>
0xffff8bd574fc   220  stur x0, [x3, #191]
0xffff8bd57500   224  ldr x0, pc+640 (addr 0x0000ffff8bd57780)    ;; object: 0x26c04241 <undefined>
0xffff8bd57504   228  stur x0, [x3, #199]
0xffff8bd57508   232  ldr x0, pc+640 (addr 0x0000ffff8bd57788)    ;; object: 0x26c04241 <undefined>
0xffff8bd5750c   236  stur x0, [x3, #207]
0xffff8bd57510   240  ldr x0, pc+640 (addr 0x0000ffff8bd57790)    ;; object: 0x26c04241 <undefined>
0xffff8bd57514   244  stur x0, [x3, #215]
0xffff8bd57518   248  ldr x0, pc+640 (addr 0x0000ffff8bd57798)    ;; object: 0x26c04241 <undefined>
0xffff8bd5751c   252  stur x0, [x3, #223]
0xffff8bd57520   256  ldr x0, pc+640 (addr 0x0000ffff8bd577a0)    ;; object: 0x26c04241 <undefined>
0xffff8bd57524   260  stur x0, [x3, #231]
0xffff8bd57528   264  ldr x0, pc+640 (addr 0x0000ffff8bd577a8)    ;; object: 0x26c04241 <undefined>
0xffff8bd5752c   268  stur x0, [x3, #239]
0xffff8bd57530   272  ldr x0, pc+640 (addr 0x0000ffff8bd577b0)    ;; object: 0x26c04241 <undefined>
0xffff8bd57534   276  stur x0, [x3, #247]
0xffff8bd57538   280  ldr x0, pc+640 (addr 0x0000ffff8bd577b8)    ;; object: 0x26c04241 <undefined>
0xffff8bd5753c   284  stur x0, [x3, #255]
0xffff8bd57540   288  ldr x0, pc+640 (addr 0x0000ffff8bd577c0)    ;; object: 0x26c04241 <undefined>
0xffff8bd57544   292  movz x16, #0x107
0xffff8bd57548   296  str x0, [x3, x16]
0xffff8bd5754c   300  ldr x0, pc+636 (addr 0x0000ffff8bd577c8)    ;; object: 0x26c04241 <undefined>
0xffff8bd57550   304  movz x16, #0x10f
0xffff8bd57554   308  str x0, [x3, x16]
0xffff8bd57558   312  ldr x0, pc+632 (addr 0x0000ffff8bd577d0)    ;; object: 0x26c04241 <undefined>
0xffff8bd5755c   316  movz x16, #0x117
0xffff8bd57560   320  str x0, [x3, x16]
0xffff8bd57564   324  ldr x0, pc+628 (addr 0x0000ffff8bd577d8)    ;; object: 0x26c04241 <undefined>
0xffff8bd57568   328  movz x16, #0x11f
0xffff8bd5756c   332  str x0, [x3, x16]
0xffff8bd57570   336  ldr x0, pc+624 (addr 0x0000ffff8bd577e0)    ;; object: 0x26c04241 <undefined>
0xffff8bd57574   340  movz x16, #0x127
0xffff8bd57578   344  str x0, [x3, x16]
0xffff8bd5757c   348  ldr x0, pc+620 (addr 0x0000ffff8bd577e8)    ;; object: 0x26c04241 <undefined>
0xffff8bd57580   352  movz x16, #0x12f
0xffff8bd57584   356  str x0, [x3, x16]
0xffff8bd57588   360  ldr x0, pc+616 (addr 0x0000ffff8bd577f0)    ;; object: 0x26c04241 <undefined>
0xffff8bd5758c   364  movz x16, #0x137
0xffff8bd57590   368  str x0, [x3, x16]
0xffff8bd57594   372  ldr x0, pc+612 (addr 0x0000ffff8bd577f8)    ;; object: 0x26c04241 <undefined>
0xffff8bd57598   376  movz x16, #0x13f
0xffff8bd5759c   380  str x0, [x3, x16]
0xffff8bd575a0   384  ldr x0, pc+608 (addr 0x0000ffff8bd57800)    ;; object: 0x26c04241 <undefined>
0xffff8bd575a4   388  movz x16, #0x147
0xffff8bd575a8   392  str x0, [x3, x16]
0xffff8bd575ac   396  ldr x0, pc+604 (addr 0x0000ffff8bd57808)    ;; object: 0x26c04241 <undefined>
0xffff8bd575b0   400  movz x16, #0x14f
0xffff8bd575b4   404  str x0, [x3, x16]
0xffff8bd575b8   408  ldr x0, pc+600 (addr 0x0000ffff8bd57810)    ;; object: 0x26c04241 <undefined>
0xffff8bd575bc   412  movz x16, #0x157
0xffff8bd575c0   416  str x0, [x3, x16]
0xffff8bd575c4   420  ldr x0, pc+596 (addr 0x0000ffff8bd57818)    ;; object: 0x26c04241 <undefined>
0xffff8bd575c8   424  movz x16, #0x15f
0xffff8bd575cc   428  str x0, [x3, x16]
0xffff8bd575d0   432  ldr x0, pc+592 (addr 0x0000ffff8bd57820)    ;; object: 0x26c04241 <undefined>
0xffff8bd575d4   436  movz x16, #0x167
0xffff8bd575d8   440  str x0, [x3, x16]
0xffff8bd575dc   444  ldr x0, pc+588 (addr 0x0000ffff8bd57828)    ;; object: 0x26c04241 <undefined>
0xffff8bd575e0   448  movz x16, #0x16f
0xffff8bd575e4   452  str x0, [x3, x16]
0xffff8bd575e8   456  ldr x0, pc+584 (addr 0x0000ffff8bd57830)    ;; object: 0x26c04241 <undefined>
0xffff8bd575ec   460  movz x16, #0x177
0xffff8bd575f0   464  str x0, [x3, x16]
0xffff8bd575f4   468  ldr x0, pc+580 (addr 0x0000ffff8bd57838)    ;; object: 0x26c04241 <undefined>
0xffff8bd575f8   472  movz x16, #0x17f
0xffff8bd575fc   476  str x0, [x3, x16]
0xffff8bd57600   480  ldr x0, pc+576 (addr 0x0000ffff8bd57840)    ;; object: 0x26c04241 <undefined>
0xffff8bd57604   484  movz x16, #0x187
0xffff8bd57608   488  str x0, [x3, x16]
0xffff8bd5760c   492  ldr x0, pc+572 (addr 0x0000ffff8bd57848)    ;; object: 0x26c04241 <undefined>
0xffff8bd57610   496  movz x16, #0x18f
0xffff8bd57614   500  str x0, [x3, x16]
0xffff8bd57618   504  ldr x0, pc+568 (addr 0x0000ffff8bd57850)    ;; object: 0x26c04241 <undefined>
0xffff8bd5761c   508  movz x16, #0x197
0xffff8bd57620   512  str x0, [x3, x16]
0xffff8bd57624   516  ldr x0, pc+564 (addr 0x0000ffff8bd57858)    ;; object: 0x26c04241 <undefined>
0xffff8bd57628   520  movz x16, #0x19f
0xffff8bd5762c   524  str x0, [x3, x16]
0xffff8bd57630   528  ldr x0, pc+560 (addr 0x0000ffff8bd57860)    ;; object: 0x26c04241 <undefined>
0xffff8bd57634   532  movz x16, #0x1a7
0xffff8bd57638   536  str x0, [x3, x16]
0xffff8bd5763c   540  ldr x0, pc+556 (addr 0x0000ffff8bd57868)    ;; object: 0x26c04241 <undefined>
0xffff8bd57640   544  movz x16, #0x1af
0xffff8bd57644   548  str x0, [x3, x16]
0xffff8bd57648   552  ldr x0, pc+552 (addr 0x0000ffff8bd57870)    ;; object: 0x26c04241 <undefined>
0xffff8bd5764c   556  movz x16, #0x1b7
0xffff8bd57650   560  str x0, [x3, x16]
0xffff8bd57654   564  ldr x0, pc+548 (addr 0x0000ffff8bd57878)    ;; object: 0x26c04241 <undefined>
0xffff8bd57658   568  movz x16, #0x1bf
0xffff8bd5765c   572  str x0, [x3, x16]
0xffff8bd57660   576  mov x0, x3
0xffff8bd57664   580  ret
0xffff8bd57668   584  sub csp, jssp, #0x10 (16)
0xffff8bd5766c   588  stp fp, lr, [jssp, #-16]!
0xffff8bd57670   592  movz fp, #0xa00000000
0xffff8bd57674   596  sub csp, jssp, #0x8 (8)
0xffff8bd57678   600  str fp, [jssp, #-8]!
0xffff8bd5767c   604  add fp, jssp, #0x8 (8)
0xffff8bd57680   608  movz x3, #0x0
0xffff8bd57684   612  mov x16, lr
0xffff8bd57688   616  ldr x17, pc+504 (addr 0x0000ffff8bd57880)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd5768c   620  blr x17
0xffff8bd57690   624  movz x0, #0x1c800000000
0xffff8bd57694   628  movz x10, #0x0
0xffff8bd57698   632  sub csp, jssp, #0x10 (16)
0xffff8bd5769c   636  stp x10, x0, [jssp, #-16]!
0xffff8bd576a0   640  movz x0, #0x2
0xffff8bd576a4   644  movz x1, #0x5b88
0xffff8bd576a8   648  movk x1, #0xe2, lsl #16
0xffff8bd576ac   652  ldr x16, pc+476 (addr 0x0000ffff8bd57888)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd576b0   656  blr x16
0xffff8bd576b4   660  str x0, [jssp, #24]
0xffff8bd576b8   664  ldr x16, pc+472 (addr 0x0000ffff8bd57890)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd576bc   668  blr x16
0xffff8bd576c0   672  ldr lr, [jssp, #16]
0xffff8bd576c4   676  ldp xzr, fp, [jssp], #24
0xffff8bd576c8   680  b #-0x288 (addr 0xffff8bd57440)
0xffff8bd576cc   684  58000e5f       constant pool begin (num_const = 114)    ;; constant pool
0xffff8bd576d0   688  d63f03e0       constant
0xffff8bd576d4   692  d503201f       constant
0xffff8bd576d8   696  5f506149       constant
0xffff8bd576dc   700  00000000       constant
0xffff8bd576e0   704  26c04519       constant
0xffff8bd576e4   708  00000000       constant
0xffff8bd576e8   712  26c04241       constant
0xffff8bd576ec   716  00000000       constant
0xffff8bd576f0   720  26c04241       constant
0xffff8bd576f4   724  00000000       constant
0xffff8bd576f8   728  26c04241       constant
0xffff8bd576fc   732  00000000       constant
0xffff8bd57700   736  26c04241       constant
0xffff8bd57704   740  00000000       constant
0xffff8bd57708   744  26c04241       constant
0xffff8bd5770c   748  00000000       constant
0xffff8bd57710   752  26c04241       constant
0xffff8bd57714   756  00000000       constant
0xffff8bd57718   760  26c04241       constant
0xffff8bd5771c   764  00000000       constant
0xffff8bd57720   768  26c04241       constant
0xffff8bd57724   772  00000000       constant
0xffff8bd57728   776  26c04241       constant
0xffff8bd5772c   780  00000000       constant
0xffff8bd57730   784  26c04241       constant
0xffff8bd57734   788  00000000       constant
0xffff8bd57738   792  26c04241       constant
0xffff8bd5773c   796  00000000       constant
0xffff8bd57740   800  26c04241       constant
0xffff8bd57744   804  00000000       constant
0xffff8bd57748   808  26c04241       constant
0xffff8bd5774c   812  00000000       constant
0xffff8bd57750   816  26c04241       constant
0xffff8bd57754   820  00000000       constant
0xffff8bd57758   824  26c04241       constant
0xffff8bd5775c   828  00000000       constant
0xffff8bd57760   832  26c04241       constant
0xffff8bd57764   836  00000000       constant
0xffff8bd57768   840  26c04241       constant
0xffff8bd5776c   844  00000000       constant
0xffff8bd57770   848  26c04241       constant
0xffff8bd57774   852  00000000       constant
0xffff8bd57778   856  26c04241       constant
0xffff8bd5777c   860  00000000       constant
0xffff8bd57780   864  26c04241       constant
0xffff8bd57784   868  00000000       constant
0xffff8bd57788   872  26c04241       constant
0xffff8bd5778c   876  00000000       constant
0xffff8bd57790   880  26c04241       constant
0xffff8bd57794   884  00000000       constant
0xffff8bd57798   888  26c04241       constant
0xffff8bd5779c   892  00000000       constant
0xffff8bd577a0   896  26c04241       constant
0xffff8bd577a4   900  00000000       constant
0xffff8bd577a8   904  26c04241       constant
0xffff8bd577ac   908  00000000       constant
0xffff8bd577b0   912  26c04241       constant
0xffff8bd577b4   916  00000000       constant
0xffff8bd577b8   920  26c04241       constant
0xffff8bd577bc   924  00000000       constant
0xffff8bd577c0   928  26c04241       constant
0xffff8bd577c4   932  00000000       constant
0xffff8bd577c8   936  26c04241       constant
0xffff8bd577cc   940  00000000       constant
0xffff8bd577d0   944  26c04241       constant
0xffff8bd577d4   948  00000000       constant
0xffff8bd577d8   952  26c04241       constant
0xffff8bd577dc   956  00000000       constant
0xffff8bd577e0   960  26c04241       constant
0xffff8bd577e4   964  00000000       constant
0xffff8bd577e8   968  26c04241       constant
0xffff8bd577ec   972  00000000       constant
0xffff8bd577f0   976  26c04241       constant
0xffff8bd577f4   980  00000000       constant
0xffff8bd577f8   984  26c04241       constant
0xffff8bd577fc   988  00000000       constant
0xffff8bd57800   992  26c04241       constant
0xffff8bd57804   996  00000000       constant
0xffff8bd57808  1000  26c04241       constant
0xffff8bd5780c  1004  00000000       constant
0xffff8bd57810  1008  26c04241       constant
0xffff8bd57814  1012  00000000       constant
0xffff8bd57818  1016  26c04241       constant
0xffff8bd5781c  1020  00000000       constant
0xffff8bd57820  1024  26c04241       constant
0xffff8bd57824  1028  00000000       constant
0xffff8bd57828  1032  26c04241       constant
0xffff8bd5782c  1036  00000000       constant
0xffff8bd57830  1040  26c04241       constant
0xffff8bd57834  1044  00000000       constant
0xffff8bd57838  1048  26c04241       constant
0xffff8bd5783c  1052  00000000       constant
0xffff8bd57840  1056  26c04241       constant
0xffff8bd57844  1060  00000000       constant
0xffff8bd57848  1064  26c04241       constant
0xffff8bd5784c  1068  00000000       constant
0xffff8bd57850  1072  26c04241       constant
0xffff8bd57854  1076  00000000       constant
0xffff8bd57858  1080  26c04241       constant
0xffff8bd5785c  1084  00000000       constant
0xffff8bd57860  1088  26c04241       constant
0xffff8bd57864  1092  00000000       constant
0xffff8bd57868  1096  26c04241       constant
0xffff8bd5786c  1100  00000000       constant
0xffff8bd57870  1104  26c04241       constant
0xffff8bd57874  1108  00000000       constant
0xffff8bd57878  1112  26c04241       constant
0xffff8bd5787c  1116  00000000       constant
0xffff8bd57880  1120  8bd06820       constant
0xffff8bd57884  1124  0000ffff       constant
0xffff8bd57888  1128  8bd06260       constant
0xffff8bd5788c  1132  0000ffff       constant
0xffff8bd57890  1136  8bd068e0       constant
0xffff8bd57894  1140  0000ffff       constant


Safepoints (size = 21)
0xffff8bd576b4   660  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 62)
0xffff8bd57440  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd57458  embedded object  (0x26c04519 <the hole>)
0xffff8bd57468  embedded object  (0x26c04241 <undefined>)
0xffff8bd57470  embedded object  (0x26c04241 <undefined>)
0xffff8bd57478  embedded object  (0x26c04241 <undefined>)
0xffff8bd57480  embedded object  (0x26c04241 <undefined>)
0xffff8bd57488  embedded object  (0x26c04241 <undefined>)
0xffff8bd57490  embedded object  (0x26c04241 <undefined>)
0xffff8bd57498  embedded object  (0x26c04241 <undefined>)
0xffff8bd574a0  embedded object  (0x26c04241 <undefined>)
0xffff8bd574a8  embedded object  (0x26c04241 <undefined>)
0xffff8bd574b0  embedded object  (0x26c04241 <undefined>)
0xffff8bd574b8  embedded object  (0x26c04241 <undefined>)
0xffff8bd574c0  embedded object  (0x26c04241 <undefined>)
0xffff8bd574c8  embedded object  (0x26c04241 <undefined>)
0xffff8bd574d0  embedded object  (0x26c04241 <undefined>)
0xffff8bd574d8  embedded object  (0x26c04241 <undefined>)
0xffff8bd574e0  embedded object  (0x26c04241 <undefined>)
0xffff8bd574e8  embedded object  (0x26c04241 <undefined>)
0xffff8bd574f0  embedded object  (0x26c04241 <undefined>)
0xffff8bd574f8  embedded object  (0x26c04241 <undefined>)
0xffff8bd57500  embedded object  (0x26c04241 <undefined>)
0xffff8bd57508  embedded object  (0x26c04241 <undefined>)
0xffff8bd57510  embedded object  (0x26c04241 <undefined>)
0xffff8bd57518  embedded object  (0x26c04241 <undefined>)
0xffff8bd57520  embedded object  (0x26c04241 <undefined>)
0xffff8bd57528  embedded object  (0x26c04241 <undefined>)
0xffff8bd57530  embedded object  (0x26c04241 <undefined>)
0xffff8bd57538  embedded object  (0x26c04241 <undefined>)
0xffff8bd57540  embedded object  (0x26c04241 <undefined>)
0xffff8bd5754c  embedded object  (0x26c04241 <undefined>)
0xffff8bd57558  embedded object  (0x26c04241 <undefined>)
0xffff8bd57564  embedded object  (0x26c04241 <undefined>)
0xffff8bd57570  embedded object  (0x26c04241 <undefined>)
0xffff8bd5757c  embedded object  (0x26c04241 <undefined>)
0xffff8bd57588  embedded object  (0x26c04241 <undefined>)
0xffff8bd57594  embedded object  (0x26c04241 <undefined>)
0xffff8bd575a0  embedded object  (0x26c04241 <undefined>)
0xffff8bd575ac  embedded object  (0x26c04241 <undefined>)
0xffff8bd575b8  embedded object  (0x26c04241 <undefined>)
0xffff8bd575c4  embedded object  (0x26c04241 <undefined>)
0xffff8bd575d0  embedded object  (0x26c04241 <undefined>)
0xffff8bd575dc  embedded object  (0x26c04241 <undefined>)
0xffff8bd575e8  embedded object  (0x26c04241 <undefined>)
0xffff8bd575f4  embedded object  (0x26c04241 <undefined>)
0xffff8bd57600  embedded object  (0x26c04241 <undefined>)
0xffff8bd5760c  embedded object  (0x26c04241 <undefined>)
0xffff8bd57618  embedded object  (0x26c04241 <undefined>)
0xffff8bd57624  embedded object  (0x26c04241 <undefined>)
0xffff8bd57630  embedded object  (0x26c04241 <undefined>)
0xffff8bd5763c  embedded object  (0x26c04241 <undefined>)
0xffff8bd57648  embedded object  (0x26c04241 <undefined>)
0xffff8bd57654  embedded object  (0x26c04241 <undefined>)
0xffff8bd57688  code target (STUB)  (0xffff8bd06820)
0xffff8bd576ac  code target (STUB)  (0xffff8bd06260)
0xffff8bd576b8  code target (STUB)  (0xffff8bd068e0)
0xffff8bd576cc  constant pool (size 460)


kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff8bd59c60     0  mov x6, x0
0xffff8bd59c64     4  tbnz w6, #0, #+0x5c (addr 0xffff8bd59cc0)
0xffff8bd59c68     8  ldur x3, [x1, #7]
0xffff8bd59c6c    12  stur x6, [x3, #23]
0xffff8bd59c70    16  stur x5, [x1, #-1]
0xffff8bd59c74    20  tbz w5, #0, #+0x34 (addr 0xffff8bd59ca8)
0xffff8bd59c78    24  sub x2, x1, #0x1 (1)
0xffff8bd59c7c    28  and x5, x5, #0xfffffffffff00000
0xffff8bd59c80    32  ldr x5, [x5, #8]
0xffff8bd59c84    36  tbz w5, #1, #+0x24 (addr 0xffff8bd59ca8)
0xffff8bd59c88    40  and x5, x1, #0xfffffffffff00000
0xffff8bd59c8c    44  ldr x5, [x5, #8]
0xffff8bd59c90    48  tbz w5, #2, #+0x18 (addr 0xffff8bd59ca8)
0xffff8bd59c94    52  sub csp, jssp, #0x8 (8)
0xffff8bd59c98    56  str lr, [jssp, #-8]!
0xffff8bd59c9c    60  ldr x16, pc+28 (addr 0x0000ffff8bd59cb8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd59ca0    64  blr x16
0xffff8bd59ca4    68  ldr lr, [jssp], #8
0xffff8bd59ca8    72  ret
0xffff8bd59cac    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd59cb0    80  d63f03e0       constant
0xffff8bd59cb4    84  d503201f       constant
0xffff8bd59cb8    88  8bd38080       constant
0xffff8bd59cbc    92  0000ffff       constant
0xffff8bd59cc0    96  movz x16, #0x0
0xffff8bd59cc4   100  sub csp, jssp, #0x10 (16)
0xffff8bd59cc8   104  stp fp, lr, [jssp, #-16]!
0xffff8bd59ccc   108  bl #+0x4 (addr 0xffff8bd59cd0)
0xffff8bd59cd0   112  movz x17, #0xa00000000
0xffff8bd59cd4   116  sub csp, jssp, #0x10 (16)
0xffff8bd59cd8   120  stp x17, cp, [jssp, #-16]!
0xffff8bd59cdc   124  add fp, jssp, #0x10 (16)
0xffff8bd59ce0   128  ldr x17, pc+24 (addr 0x0000ffff8bd59cf8)    ;; lazy deoptimization bailout 0
0xffff8bd59ce4   132  add x17, x17, x16
0xffff8bd59ce8   136  br x17
0xffff8bd59cec   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd59cf0   144  d63f03e0       constant
0xffff8bd59cf4   148  d503201f       constant
0xffff8bd59cf8   152  8bb06000       constant
0xffff8bd59cfc   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bd59c9c  code target (STUB)  (0xffff8bd38080)
0xffff8bd59cac  constant pool (size 20)
0xffff8bd59ce0  runtime entry
0xffff8bd59cec  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = update
compiler = unknown
Instructions (size = 128)
0xffff8bd59d80     0  sub csp, jssp, #0x8 (8)
0xffff8bd59d84     4  str x3, [jssp, #-8]!
0xffff8bd59d88     8  sub csp, jssp, #0x8 (8)
0xffff8bd59d8c    12  str x4, [jssp, #-8]!
0xffff8bd59d90    16  ldr x5, pc+72 (addr 0x0000ffff8bd59dd8)    ;; object: 0x26c88701 WeakCell for 0x5f510d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd59d94    20  ldur x5, [x5, #7]
0xffff8bd59d98    24  tbz w5, #0, #+0x20 (addr 0xffff8bd59db8)
0xffff8bd59d9c    28  ldursw x4, [x5, #15]
0xffff8bd59da0    32  tbnz w4, #23, #+0x18 (addr 0xffff8bd59db8)
0xffff8bd59da4    36  ldr x4, [jssp], #8
0xffff8bd59da8    40  ldr x3, [jssp], #8
0xffff8bd59dac    44  ldr x2, pc+52 (addr 0x0000ffff8bd59de0)    ;; object: 0x26c83a31 <String[6]: update>
0xffff8bd59db0    48  ldr x16, pc+56 (addr 0x0000ffff8bd59de8)    ;; code: HANDLER, StoreTransitionStub, minor: 172035
0xffff8bd59db4    52  br x16
0xffff8bd59db8    56  ldr x2, pc+56 (addr 0x0000ffff8bd59df0)    ;; object: 0x26c83a31 <String[6]: update>
0xffff8bd59dbc    60  ldr x4, [jssp], #8
0xffff8bd59dc0    64  ldr x3, [jssp], #8
0xffff8bd59dc4    68  ldr x16, pc+52 (addr 0x0000ffff8bd59df8)    ;; code: BUILTIN
0xffff8bd59dc8    72  br x16
0xffff8bd59dcc    76  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff8bd59dd0    80  d63f03e0       constant
0xffff8bd59dd4    84  d503201f       constant
0xffff8bd59dd8    88  26c88701       constant
0xffff8bd59ddc    92  00000000       constant
0xffff8bd59de0    96  26c83a31       constant
0xffff8bd59de4   100  00000000       constant
0xffff8bd59de8   104  8bd59c60       constant
0xffff8bd59dec   108  0000ffff       constant
0xffff8bd59df0   112  26c83a31       constant
0xffff8bd59df4   116  00000000       constant
0xffff8bd59df8   120  8bd22420       constant
0xffff8bd59dfc   124  0000ffff       constant


RelocInfo (size = 11)
0xffff8bd59d90  embedded object  (0x26c88701 WeakCell for 0x5f510d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd59dac  embedded object  (0x26c83a31 <String[6]: update>)
0xffff8bd59db0  code target (HANDLER)  (0xffff8bd59c60)
0xffff8bd59db8  embedded object  (0x26c83a31 <String[6]: update>)
0xffff8bd59dc4  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd59dcc  constant pool (size 52)

kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff8bd59e60     0  mov x6, x0
0xffff8bd59e64     4  tbnz w6, #0, #+0x5c (addr 0xffff8bd59ec0)
0xffff8bd59e68     8  ldur x3, [x1, #7]
0xffff8bd59e6c    12  stur x6, [x3, #31]
0xffff8bd59e70    16  stur x5, [x1, #-1]
0xffff8bd59e74    20  tbz w5, #0, #+0x34 (addr 0xffff8bd59ea8)
0xffff8bd59e78    24  sub x2, x1, #0x1 (1)
0xffff8bd59e7c    28  and x5, x5, #0xfffffffffff00000
0xffff8bd59e80    32  ldr x5, [x5, #8]
0xffff8bd59e84    36  tbz w5, #1, #+0x24 (addr 0xffff8bd59ea8)
0xffff8bd59e88    40  and x5, x1, #0xfffffffffff00000
0xffff8bd59e8c    44  ldr x5, [x5, #8]
0xffff8bd59e90    48  tbz w5, #2, #+0x18 (addr 0xffff8bd59ea8)
0xffff8bd59e94    52  sub csp, jssp, #0x8 (8)
0xffff8bd59e98    56  str lr, [jssp, #-8]!
0xffff8bd59e9c    60  ldr x16, pc+28 (addr 0x0000ffff8bd59eb8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd59ea0    64  blr x16
0xffff8bd59ea4    68  ldr lr, [jssp], #8
0xffff8bd59ea8    72  ret
0xffff8bd59eac    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd59eb0    80  d63f03e0       constant
0xffff8bd59eb4    84  d503201f       constant
0xffff8bd59eb8    88  8bd38080       constant
0xffff8bd59ebc    92  0000ffff       constant
0xffff8bd59ec0    96  movz x16, #0x0
0xffff8bd59ec4   100  sub csp, jssp, #0x10 (16)
0xffff8bd59ec8   104  stp fp, lr, [jssp, #-16]!
0xffff8bd59ecc   108  bl #+0x4 (addr 0xffff8bd59ed0)
0xffff8bd59ed0   112  movz x17, #0xa00000000
0xffff8bd59ed4   116  sub csp, jssp, #0x10 (16)
0xffff8bd59ed8   120  stp x17, cp, [jssp, #-16]!
0xffff8bd59edc   124  add fp, jssp, #0x10 (16)
0xffff8bd59ee0   128  ldr x17, pc+24 (addr 0x0000ffff8bd59ef8)    ;; lazy deoptimization bailout 0
0xffff8bd59ee4   132  add x17, x17, x16
0xffff8bd59ee8   136  br x17
0xffff8bd59eec   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd59ef0   144  d63f03e0       constant
0xffff8bd59ef4   148  d503201f       constant
0xffff8bd59ef8   152  8bb06000       constant
0xffff8bd59efc   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bd59e9c  code target (STUB)  (0xffff8bd38080)
0xffff8bd59eac  constant pool (size 20)
0xffff8bd59ee0  runtime entry
0xffff8bd59eec  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = delete
compiler = unknown
Instructions (size = 128)
0xffff8bd59f80     0  sub csp, jssp, #0x8 (8)
0xffff8bd59f84     4  str x3, [jssp, #-8]!
0xffff8bd59f88     8  sub csp, jssp, #0x8 (8)
0xffff8bd59f8c    12  str x4, [jssp, #-8]!
0xffff8bd59f90    16  ldr x5, pc+72 (addr 0x0000ffff8bd59fd8)    ;; object: 0x26c88809 WeakCell for 0x5f510dd9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd59f94    20  ldur x5, [x5, #7]
0xffff8bd59f98    24  tbz w5, #0, #+0x20 (addr 0xffff8bd59fb8)
0xffff8bd59f9c    28  ldursw x4, [x5, #15]
0xffff8bd59fa0    32  tbnz w4, #23, #+0x18 (addr 0xffff8bd59fb8)
0xffff8bd59fa4    36  ldr x4, [jssp], #8
0xffff8bd59fa8    40  ldr x3, [jssp], #8
0xffff8bd59fac    44  ldr x2, pc+52 (addr 0x0000ffff8bd59fe0)    ;; object: 0x26c83a51 <String[6]: delete>
0xffff8bd59fb0    48  ldr x16, pc+56 (addr 0x0000ffff8bd59fe8)    ;; code: HANDLER, StoreTransitionStub, minor: 172036
0xffff8bd59fb4    52  br x16
0xffff8bd59fb8    56  ldr x2, pc+56 (addr 0x0000ffff8bd59ff0)    ;; object: 0x26c83a51 <String[6]: delete>
0xffff8bd59fbc    60  ldr x4, [jssp], #8
0xffff8bd59fc0    64  ldr x3, [jssp], #8
0xffff8bd59fc4    68  ldr x16, pc+52 (addr 0x0000ffff8bd59ff8)    ;; code: BUILTIN
0xffff8bd59fc8    72  br x16
0xffff8bd59fcc    76  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff8bd59fd0    80  d63f03e0       constant
0xffff8bd59fd4    84  d503201f       constant
0xffff8bd59fd8    88  26c88809       constant
0xffff8bd59fdc    92  00000000       constant
0xffff8bd59fe0    96  26c83a51       constant
0xffff8bd59fe4   100  00000000       constant
0xffff8bd59fe8   104  8bd59e60       constant
0xffff8bd59fec   108  0000ffff       constant
0xffff8bd59ff0   112  26c83a51       constant
0xffff8bd59ff4   116  00000000       constant
0xffff8bd59ff8   120  8bd22420       constant
0xffff8bd59ffc   124  0000ffff       constant


RelocInfo (size = 11)
0xffff8bd59f90  embedded object  (0x26c88809 WeakCell for 0x5f510dd9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd59fac  embedded object  (0x26c83a51 <String[6]: delete>)
0xffff8bd59fb0  code target (HANDLER)  (0xffff8bd59e60)
0xffff8bd59fb8  embedded object  (0x26c83a51 <String[6]: delete>)
0xffff8bd59fc4  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd59fcc  constant pool (size 52)

kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 549)
0xffff8bd5a060     0  ldur x6, [x1, #7]
0xffff8bd5a064     4  ldur w7, [x6, #11]
0xffff8bd5a068     8  adds w8, w7, #0x3 (3)
0xffff8bd5a06c    12  b.vs #+0x1a4 (addr 0xffff8bd5a210)
0xffff8bd5a070    16  movz w16, #0x95ff
0xffff8bd5a074    20  cmp w8, w16, lsl #1
0xffff8bd5a078    24  b.hs #+0x1a8 (addr 0xffff8bd5a220)
0xffff8bd5a07c    28  lsl x9, x8, #32
0xffff8bd5a080    32  lsl w10, w8, #3
0xffff8bd5a084    36  add w10, w10, #0x10 (16)
0xffff8bd5a088    40  sxtw x10, w10
0xffff8bd5a08c    44  movz x11, #0xe2c0
0xffff8bd5a090    48  movk x11, #0x2cb8, lsl #16
0xffff8bd5a094    52  ldp x13, x16, [x11]
0xffff8bd5a098    56  adds x12, x13, x10
0xffff8bd5a09c    60  ccmp x12, x16, #nzCv, lo
0xffff8bd5a0a0    64  b.hi #+0xc8 (addr 0xffff8bd5a168)
0xffff8bd5a0a4    68  str x12, [x11]
0xffff8bd5a0a8    72  orr x13, x13, #0x1
0xffff8bd5a0ac    76  ldr x10, pc+300 (addr 0x0000ffff8bd5a1d8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd5a0b0    80  stur x10, [x13, #-1]
0xffff8bd5a0b4    84  stur x9, [x13, #7]
0xffff8bd5a0b8    88  cmp w7, w8
0xffff8bd5a0bc    92  b.ge #+0x18 (addr 0xffff8bd5a0d4)
0xffff8bd5a0c0    96  sub w8, w8, #0x1 (1)
0xffff8bd5a0c4   100  ldr x9, pc+284 (addr 0x0000ffff8bd5a1e0)    ;; object: 0x26c04241 <undefined>
0xffff8bd5a0c8   104  add x10, x13, #0xf (15)
0xffff8bd5a0cc   108  str x9, [x10, w8, sxtw #3]
0xffff8bd5a0d0   112  b #-0x18 (addr 0xffff8bd5a0b8)
0xffff8bd5a0d4   116  cmp w7, #0x0 (0)
0xffff8bd5a0d8   120  b.le #+0x1c (addr 0xffff8bd5a0f4)
0xffff8bd5a0dc   124  sub w7, w7, #0x1 (1)
0xffff8bd5a0e0   128  add x8, x6, #0xf (15)
0xffff8bd5a0e4   132  ldr x9, [x8, w7, sxtw #3]
0xffff8bd5a0e8   136  add x8, x13, #0xf (15)
0xffff8bd5a0ec   140  str x9, [x8, w7, sxtw #3]
0xffff8bd5a0f0   144  b #-0x1c (addr 0xffff8bd5a0d4)
0xffff8bd5a0f4   148  stur x13, [x1, #7]
0xffff8bd5a0f8   152  add x6, x1, #0x7 (7)
0xffff8bd5a0fc   156  and x13, x1, #0xfffffffffff00000
0xffff8bd5a100   160  ldr x13, [x13, #8]
0xffff8bd5a104   164  tbz w13, #2, #+0x18 (addr 0xffff8bd5a11c)
0xffff8bd5a108   168  sub csp, jssp, #0x8 (8)
0xffff8bd5a10c   172  str lr, [jssp, #-8]!
0xffff8bd5a110   176  ldr x16, pc+216 (addr 0x0000ffff8bd5a1e8)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff8bd5a114   180  blr x16
0xffff8bd5a118   184  ldr lr, [jssp], #8
0xffff8bd5a11c   188  mov x6, x0
0xffff8bd5a120   192  tbnz w6, #0, #+0x110 (addr 0xffff8bd5a230)
0xffff8bd5a124   196  ldur x3, [x1, #7]
0xffff8bd5a128   200  stur x6, [x3, #39]
0xffff8bd5a12c   204  stur x5, [x1, #-1]
0xffff8bd5a130   208  tbz w5, #0, #+0x34 (addr 0xffff8bd5a164)
0xffff8bd5a134   212  sub x2, x1, #0x1 (1)
0xffff8bd5a138   216  and x5, x5, #0xfffffffffff00000
0xffff8bd5a13c   220  ldr x5, [x5, #8]
0xffff8bd5a140   224  tbz w5, #1, #+0x24 (addr 0xffff8bd5a164)
0xffff8bd5a144   228  and x5, x1, #0xfffffffffff00000
0xffff8bd5a148   232  ldr x5, [x5, #8]
0xffff8bd5a14c   236  tbz w5, #2, #+0x18 (addr 0xffff8bd5a164)
0xffff8bd5a150   240  sub csp, jssp, #0x8 (8)
0xffff8bd5a154   244  str lr, [jssp, #-8]!
0xffff8bd5a158   248  ldr x16, pc+152 (addr 0x0000ffff8bd5a1f0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd5a15c   252  blr x16
0xffff8bd5a160   256  ldr lr, [jssp], #8
0xffff8bd5a164   260  ret
0xffff8bd5a168   264  sub csp, jssp, #0x10 (16)
0xffff8bd5a16c   268  stp fp, lr, [jssp, #-16]!
0xffff8bd5a170   272  movz fp, #0xa00000000
0xffff8bd5a174   276  sub csp, jssp, #0x8 (8)
0xffff8bd5a178   280  str fp, [jssp, #-8]!
0xffff8bd5a17c   284  add fp, jssp, #0x8 (8)
0xffff8bd5a180   288  movz x13, #0x0
0xffff8bd5a184   292  mov x16, lr
0xffff8bd5a188   296  ldr x17, pc+112 (addr 0x0000ffff8bd5a1f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd5a18c   300  blr x17
0xffff8bd5a190   304  lsl x0, x10, #32
0xffff8bd5a194   308  movz x10, #0x0
0xffff8bd5a198   312  sub csp, jssp, #0x10 (16)
0xffff8bd5a19c   316  stp x10, x0, [jssp, #-16]!
0xffff8bd5a1a0   320  movz x0, #0x2
0xffff8bd5a1a4   324  movz x1, #0x5b88
0xffff8bd5a1a8   328  movk x1, #0xe2, lsl #16
0xffff8bd5a1ac   332  ldr x16, pc+84 (addr 0x0000ffff8bd5a200)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd5a1b0   336  blr x16
0xffff8bd5a1b4   340  str x0, [jssp, #104]
0xffff8bd5a1b8   344  ldr x16, pc+80 (addr 0x0000ffff8bd5a208)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd5a1bc   348  blr x16
0xffff8bd5a1c0   352  ldr lr, [jssp, #16]
0xffff8bd5a1c4   356  ldp xzr, fp, [jssp], #24
0xffff8bd5a1c8   360  b #-0x11c (addr 0xffff8bd5a0ac)
0xffff8bd5a1cc   364  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd5a1d0   368  d63f03e0       constant
0xffff8bd5a1d4   372  d503201f       constant
0xffff8bd5a1d8   376  5f504259       constant
0xffff8bd5a1dc   380  00000000       constant
0xffff8bd5a1e0   384  26c04241       constant
0xffff8bd5a1e4   388  00000000       constant
0xffff8bd5a1e8   392  8bd370c0       constant
0xffff8bd5a1ec   396  0000ffff       constant
0xffff8bd5a1f0   400  8bd38080       constant
0xffff8bd5a1f4   404  0000ffff       constant
0xffff8bd5a1f8   408  8bd06820       constant
0xffff8bd5a1fc   412  0000ffff       constant
0xffff8bd5a200   416  8bd06260       constant
0xffff8bd5a204   420  0000ffff       constant
0xffff8bd5a208   424  8bd068e0       constant
0xffff8bd5a20c   428  0000ffff       constant
0xffff8bd5a210   432  movz x16, #0x0
0xffff8bd5a214   436  sub csp, jssp, #0x10 (16)
0xffff8bd5a218   440  stp fp, lr, [jssp, #-16]!
0xffff8bd5a21c   444  bl #+0x24 (addr 0xffff8bd5a240)
0xffff8bd5a220   448  movz x16, #0x8
0xffff8bd5a224   452  sub csp, jssp, #0x10 (16)
0xffff8bd5a228   456  stp fp, lr, [jssp, #-16]!
0xffff8bd5a22c   460  bl #+0x14 (addr 0xffff8bd5a240)
0xffff8bd5a230   464  movz x16, #0x10
0xffff8bd5a234   468  sub csp, jssp, #0x10 (16)
0xffff8bd5a238   472  stp fp, lr, [jssp, #-16]!
0xffff8bd5a23c   476  bl #+0x4 (addr 0xffff8bd5a240)
0xffff8bd5a240   480  movz x17, #0xa00000000
0xffff8bd5a244   484  sub csp, jssp, #0x10 (16)
0xffff8bd5a248   488  stp x17, cp, [jssp, #-16]!
0xffff8bd5a24c   492  add fp, jssp, #0x10 (16)
0xffff8bd5a250   496  ldr x17, pc+24 (addr 0x0000ffff8bd5a268)    ;; lazy deoptimization bailout 0
0xffff8bd5a254   500  add x17, x17, x16
0xffff8bd5a258   504  br x17
0xffff8bd5a25c   508  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd5a260   512  d63f03e0       constant
0xffff8bd5a264   516  d503201f       constant
0xffff8bd5a268   520  8bb06000       constant
0xffff8bd5a26c   524  0000ffff       constant


Safepoints (size = 21)
0xffff8bd5a1b4   340  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 29)
0xffff8bd5a0ac  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd5a0c4  embedded object  (0x26c04241 <undefined>)
0xffff8bd5a110  code target (STUB)  (0xffff8bd370c0)
0xffff8bd5a158  code target (STUB)  (0xffff8bd38080)
0xffff8bd5a188  code target (STUB)  (0xffff8bd06820)
0xffff8bd5a1ac  code target (STUB)  (0xffff8bd06260)
0xffff8bd5a1b8  code target (STUB)  (0xffff8bd068e0)
0xffff8bd5a1cc  constant pool (size 68)
0xffff8bd5a250  runtime entry
0xffff8bd5a25c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = setPrototype
compiler = unknown
Instructions (size = 128)
0xffff8bd5a300     0  sub csp, jssp, #0x8 (8)
0xffff8bd5a304     4  str x3, [jssp, #-8]!
0xffff8bd5a308     8  sub csp, jssp, #0x8 (8)
0xffff8bd5a30c    12  str x4, [jssp, #-8]!
0xffff8bd5a310    16  ldr x5, pc+72 (addr 0x0000ffff8bd5a358)    ;; object: 0x26c88911 WeakCell for 0x5f510e31 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd5a314    20  ldur x5, [x5, #7]
0xffff8bd5a318    24  tbz w5, #0, #+0x20 (addr 0xffff8bd5a338)
0xffff8bd5a31c    28  ldursw x4, [x5, #15]
0xffff8bd5a320    32  tbnz w4, #23, #+0x18 (addr 0xffff8bd5a338)
0xffff8bd5a324    36  ldr x4, [jssp], #8
0xffff8bd5a328    40  ldr x3, [jssp], #8
0xffff8bd5a32c    44  ldr x2, pc+52 (addr 0x0000ffff8bd5a360)    ;; object: 0x26c83a71 <String[12]: setPrototype>
0xffff8bd5a330    48  ldr x16, pc+56 (addr 0x0000ffff8bd5a368)    ;; code: HANDLER, StoreTransitionStub, minor: 303109
0xffff8bd5a334    52  br x16
0xffff8bd5a338    56  ldr x2, pc+56 (addr 0x0000ffff8bd5a370)    ;; object: 0x26c83a71 <String[12]: setPrototype>
0xffff8bd5a33c    60  ldr x4, [jssp], #8
0xffff8bd5a340    64  ldr x3, [jssp], #8
0xffff8bd5a344    68  ldr x16, pc+52 (addr 0x0000ffff8bd5a378)    ;; code: BUILTIN
0xffff8bd5a348    72  br x16
0xffff8bd5a34c    76  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff8bd5a350    80  d63f03e0       constant
0xffff8bd5a354    84  d503201f       constant
0xffff8bd5a358    88  26c88911       constant
0xffff8bd5a35c    92  00000000       constant
0xffff8bd5a360    96  26c83a71       constant
0xffff8bd5a364   100  00000000       constant
0xffff8bd5a368   104  8bd5a060       constant
0xffff8bd5a36c   108  0000ffff       constant
0xffff8bd5a370   112  26c83a71       constant
0xffff8bd5a374   116  00000000       constant
0xffff8bd5a378   120  8bd22420       constant
0xffff8bd5a37c   124  0000ffff       constant


RelocInfo (size = 11)
0xffff8bd5a310  embedded object  (0x26c88911 WeakCell for 0x5f510e31 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd5a32c  embedded object  (0x26c83a71 <String[12]: setPrototype>)
0xffff8bd5a330  code target (HANDLER)  (0xffff8bd5a060)
0xffff8bd5a338  embedded object  (0x26c83a71 <String[12]: setPrototype>)
0xffff8bd5a344  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd5a34c  constant pool (size 52)

kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff8bd5a3e0     0  mov x6, x0
0xffff8bd5a3e4     4  tbnz w6, #0, #+0x5c (addr 0xffff8bd5a440)
0xffff8bd5a3e8     8  ldur x3, [x1, #7]
0xffff8bd5a3ec    12  stur x6, [x3, #47]
0xffff8bd5a3f0    16  stur x5, [x1, #-1]
0xffff8bd5a3f4    20  tbz w5, #0, #+0x34 (addr 0xffff8bd5a428)
0xffff8bd5a3f8    24  sub x2, x1, #0x1 (1)
0xffff8bd5a3fc    28  and x5, x5, #0xfffffffffff00000
0xffff8bd5a400    32  ldr x5, [x5, #8]
0xffff8bd5a404    36  tbz w5, #1, #+0x24 (addr 0xffff8bd5a428)
0xffff8bd5a408    40  and x5, x1, #0xfffffffffff00000
0xffff8bd5a40c    44  ldr x5, [x5, #8]
0xffff8bd5a410    48  tbz w5, #2, #+0x18 (addr 0xffff8bd5a428)
0xffff8bd5a414    52  sub csp, jssp, #0x8 (8)
0xffff8bd5a418    56  str lr, [jssp, #-8]!
0xffff8bd5a41c    60  ldr x16, pc+28 (addr 0x0000ffff8bd5a438)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd5a420    64  blr x16
0xffff8bd5a424    68  ldr lr, [jssp], #8
0xffff8bd5a428    72  ret
0xffff8bd5a42c    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd5a430    80  d63f03e0       constant
0xffff8bd5a434    84  d503201f       constant
0xffff8bd5a438    88  8bd38080       constant
0xffff8bd5a43c    92  0000ffff       constant
0xffff8bd5a440    96  movz x16, #0x0
0xffff8bd5a444   100  sub csp, jssp, #0x10 (16)
0xffff8bd5a448   104  stp fp, lr, [jssp, #-16]!
0xffff8bd5a44c   108  bl #+0x4 (addr 0xffff8bd5a450)
0xffff8bd5a450   112  movz x17, #0xa00000000
0xffff8bd5a454   116  sub csp, jssp, #0x10 (16)
0xffff8bd5a458   120  stp x17, cp, [jssp, #-16]!
0xffff8bd5a45c   124  add fp, jssp, #0x10 (16)
0xffff8bd5a460   128  ldr x17, pc+24 (addr 0x0000ffff8bd5a478)    ;; lazy deoptimization bailout 0
0xffff8bd5a464   132  add x17, x17, x16
0xffff8bd5a468   136  br x17
0xffff8bd5a46c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd5a470   144  d63f03e0       constant
0xffff8bd5a474   148  d503201f       constant
0xffff8bd5a478   152  8bb06000       constant
0xffff8bd5a47c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bd5a41c  code target (STUB)  (0xffff8bd38080)
0xffff8bd5a42c  constant pool (size 20)
0xffff8bd5a460  runtime entry
0xffff8bd5a46c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = reconfigure
compiler = unknown
Instructions (size = 128)
0xffff8bd5a500     0  sub csp, jssp, #0x8 (8)
0xffff8bd5a504     4  str x3, [jssp, #-8]!
0xffff8bd5a508     8  sub csp, jssp, #0x8 (8)
0xffff8bd5a50c    12  str x4, [jssp, #-8]!
0xffff8bd5a510    16  ldr x5, pc+72 (addr 0x0000ffff8bd5a558)    ;; object: 0x26c88a91 WeakCell for 0x5f510e89 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd5a514    20  ldur x5, [x5, #7]
0xffff8bd5a518    24  tbz w5, #0, #+0x20 (addr 0xffff8bd5a538)
0xffff8bd5a51c    28  ldursw x4, [x5, #15]
0xffff8bd5a520    32  tbnz w4, #23, #+0x18 (addr 0xffff8bd5a538)
0xffff8bd5a524    36  ldr x4, [jssp], #8
0xffff8bd5a528    40  ldr x3, [jssp], #8
0xffff8bd5a52c    44  ldr x2, pc+52 (addr 0x0000ffff8bd5a560)    ;; object: 0x26c83a99 <String[11]: reconfigure>
0xffff8bd5a530    48  ldr x16, pc+56 (addr 0x0000ffff8bd5a568)    ;; code: HANDLER, StoreTransitionStub, minor: 172038
0xffff8bd5a534    52  br x16
0xffff8bd5a538    56  ldr x2, pc+56 (addr 0x0000ffff8bd5a570)    ;; object: 0x26c83a99 <String[11]: reconfigure>
0xffff8bd5a53c    60  ldr x4, [jssp], #8
0xffff8bd5a540    64  ldr x3, [jssp], #8
0xffff8bd5a544    68  ldr x16, pc+52 (addr 0x0000ffff8bd5a578)    ;; code: BUILTIN
0xffff8bd5a548    72  br x16
0xffff8bd5a54c    76  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff8bd5a550    80  d63f03e0       constant
0xffff8bd5a554    84  d503201f       constant
0xffff8bd5a558    88  26c88a91       constant
0xffff8bd5a55c    92  00000000       constant
0xffff8bd5a560    96  26c83a99       constant
0xffff8bd5a564   100  00000000       constant
0xffff8bd5a568   104  8bd5a3e0       constant
0xffff8bd5a56c   108  0000ffff       constant
0xffff8bd5a570   112  26c83a99       constant
0xffff8bd5a574   116  00000000       constant
0xffff8bd5a578   120  8bd22420       constant
0xffff8bd5a57c   124  0000ffff       constant


RelocInfo (size = 11)
0xffff8bd5a510  embedded object  (0x26c88a91 WeakCell for 0x5f510e89 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd5a52c  embedded object  (0x26c83a99 <String[11]: reconfigure>)
0xffff8bd5a530  code target (HANDLER)  (0xffff8bd5a3e0)
0xffff8bd5a538  embedded object  (0x26c83a99 <String[11]: reconfigure>)
0xffff8bd5a544  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd5a54c  constant pool (size 52)

kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff8bd5a5e0     0  mov x6, x0
0xffff8bd5a5e4     4  tbnz w6, #0, #+0x5c (addr 0xffff8bd5a640)
0xffff8bd5a5e8     8  ldur x3, [x1, #7]
0xffff8bd5a5ec    12  stur x6, [x3, #55]
0xffff8bd5a5f0    16  stur x5, [x1, #-1]
0xffff8bd5a5f4    20  tbz w5, #0, #+0x34 (addr 0xffff8bd5a628)
0xffff8bd5a5f8    24  sub x2, x1, #0x1 (1)
0xffff8bd5a5fc    28  and x5, x5, #0xfffffffffff00000
0xffff8bd5a600    32  ldr x5, [x5, #8]
0xffff8bd5a604    36  tbz w5, #1, #+0x24 (addr 0xffff8bd5a628)
0xffff8bd5a608    40  and x5, x1, #0xfffffffffff00000
0xffff8bd5a60c    44  ldr x5, [x5, #8]
0xffff8bd5a610    48  tbz w5, #2, #+0x18 (addr 0xffff8bd5a628)
0xffff8bd5a614    52  sub csp, jssp, #0x8 (8)
0xffff8bd5a618    56  str lr, [jssp, #-8]!
0xffff8bd5a61c    60  ldr x16, pc+28 (addr 0x0000ffff8bd5a638)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd5a620    64  blr x16
0xffff8bd5a624    68  ldr lr, [jssp], #8
0xffff8bd5a628    72  ret
0xffff8bd5a62c    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd5a630    80  d63f03e0       constant
0xffff8bd5a634    84  d503201f       constant
0xffff8bd5a638    88  8bd38080       constant
0xffff8bd5a63c    92  0000ffff       constant
0xffff8bd5a640    96  movz x16, #0x0
0xffff8bd5a644   100  sub csp, jssp, #0x10 (16)
0xffff8bd5a648   104  stp fp, lr, [jssp, #-16]!
0xffff8bd5a64c   108  bl #+0x4 (addr 0xffff8bd5a650)
0xffff8bd5a650   112  movz x17, #0xa00000000
0xffff8bd5a654   116  sub csp, jssp, #0x10 (16)
0xffff8bd5a658   120  stp x17, cp, [jssp, #-16]!
0xffff8bd5a65c   124  add fp, jssp, #0x10 (16)
0xffff8bd5a660   128  ldr x17, pc+24 (addr 0x0000ffff8bd5a678)    ;; lazy deoptimization bailout 0
0xffff8bd5a664   132  add x17, x17, x16
0xffff8bd5a668   136  br x17
0xffff8bd5a66c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd5a670   144  d63f03e0       constant
0xffff8bd5a674   148  d503201f       constant
0xffff8bd5a678   152  8bb06000       constant
0xffff8bd5a67c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bd5a61c  code target (STUB)  (0xffff8bd38080)
0xffff8bd5a62c  constant pool (size 20)
0xffff8bd5a660  runtime entry
0xffff8bd5a66c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = preventExtensions
compiler = unknown
Instructions (size = 128)
0xffff8bd5a700     0  sub csp, jssp, #0x8 (8)
0xffff8bd5a704     4  str x3, [jssp, #-8]!
0xffff8bd5a708     8  sub csp, jssp, #0x8 (8)
0xffff8bd5a70c    12  str x4, [jssp, #-8]!
0xffff8bd5a710    16  ldr x5, pc+72 (addr 0x0000ffff8bd5a758)    ;; object: 0x26c88b99 WeakCell for 0x5f510ee1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd5a714    20  ldur x5, [x5, #7]
0xffff8bd5a718    24  tbz w5, #0, #+0x20 (addr 0xffff8bd5a738)
0xffff8bd5a71c    28  ldursw x4, [x5, #15]
0xffff8bd5a720    32  tbnz w4, #23, #+0x18 (addr 0xffff8bd5a738)
0xffff8bd5a724    36  ldr x4, [jssp], #8
0xffff8bd5a728    40  ldr x3, [jssp], #8
0xffff8bd5a72c    44  ldr x2, pc+52 (addr 0x0000ffff8bd5a760)    ;; object: 0x26c052d1 <String[17]: preventExtensions>
0xffff8bd5a730    48  ldr x16, pc+56 (addr 0x0000ffff8bd5a768)    ;; code: HANDLER, StoreTransitionStub, minor: 172039
0xffff8bd5a734    52  br x16
0xffff8bd5a738    56  ldr x2, pc+56 (addr 0x0000ffff8bd5a770)    ;; object: 0x26c052d1 <String[17]: preventExtensions>
0xffff8bd5a73c    60  ldr x4, [jssp], #8
0xffff8bd5a740    64  ldr x3, [jssp], #8
0xffff8bd5a744    68  ldr x16, pc+52 (addr 0x0000ffff8bd5a778)    ;; code: BUILTIN
0xffff8bd5a748    72  br x16
0xffff8bd5a74c    76  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff8bd5a750    80  d63f03e0       constant
0xffff8bd5a754    84  d503201f       constant
0xffff8bd5a758    88  26c88b99       constant
0xffff8bd5a75c    92  00000000       constant
0xffff8bd5a760    96  26c052d1       constant
0xffff8bd5a764   100  00000000       constant
0xffff8bd5a768   104  8bd5a5e0       constant
0xffff8bd5a76c   108  0000ffff       constant
0xffff8bd5a770   112  26c052d1       constant
0xffff8bd5a774   116  00000000       constant
0xffff8bd5a778   120  8bd22420       constant
0xffff8bd5a77c   124  0000ffff       constant


RelocInfo (size = 11)
0xffff8bd5a710  embedded object  (0x26c88b99 WeakCell for 0x5f510ee1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd5a72c  embedded object  (0x26c052d1 <String[17]: preventExtensions>)
0xffff8bd5a730  code target (HANDLER)  (0xffff8bd5a5e0)
0xffff8bd5a738  embedded object  (0x26c052d1 <String[17]: preventExtensions>)
0xffff8bd5a744  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd5a74c  constant pool (size 52)

kind = STUB
major_key = ToLengthStub
name = ToLengthStub
compiler = turbofan
Instructions (size = 442)
0xffff8bd5a7e0     0  and x1, x0, #0x8000000000000001
0xffff8bd5a7e4     4  cmp x1, #0x0 (0)
0xffff8bd5a7e8     8  b.eq #+0xb0 (addr 0xffff8bd5a898)
0xffff8bd5a7ec    12  and x1, x0, #0x1
0xffff8bd5a7f0    16  cmp x1, #0x0 (0)
0xffff8bd5a7f4    20  b.eq #+0x154 (addr 0xffff8bd5a948)
0xffff8bd5a7f8    24  ldur x1, [x0, #-1]
0xffff8bd5a7fc    28  ldr x2, [x26, #120]
0xffff8bd5a800    32  cmp x1, x2
0xffff8bd5a804    36  b.ne #+0x98 (addr 0xffff8bd5a89c)
0xffff8bd5a808    40  ldur d0, [x0, #7]
0xffff8bd5a80c    44  fcmp d0, #0.0
0xffff8bd5a810    48  b.le #+0x138 (addr 0xffff8bd5a948)
0xffff8bd5a814    52  ldr d1, pc+324 (addr 0x0000ffff8bd5a958)
0xffff8bd5a818    56  fcmp d1, d0
0xffff8bd5a81c    60  b.ls #+0x124 (addr 0xffff8bd5a940)
0xffff8bd5a820    64  frintm d0, d0
0xffff8bd5a824    68  fcvtzs w0, d0
0xffff8bd5a828    72  scvtf d1, w0
0xffff8bd5a82c    76  fcmp d0, d1
0xffff8bd5a830    80  b.ne #+0x24 (addr 0xffff8bd5a854)
0xffff8bd5a834    84  fcmp d0, #0.0
0xffff8bd5a838    88  b.ne #+0x14 (addr 0xffff8bd5a84c)
0xffff8bd5a83c    92  fmov x1, d0
0xffff8bd5a840    96  lsr x1, x1, #32
0xffff8bd5a844   100  cmp w1, #0x0 (0)
0xffff8bd5a848   104  b.lt #+0xc (addr 0xffff8bd5a854)
0xffff8bd5a84c   108  lsl x0, x0, #32
0xffff8bd5a850   112  b #+0x40 (addr 0xffff8bd5a890)
0xffff8bd5a854   116  movz x0, #0xe2c0
0xffff8bd5a858   120  movk x0, #0x2cb8, lsl #16
0xffff8bd5a85c   124  ldr x1, [x0]
0xffff8bd5a860   128  movz x2, #0xe2c8
0xffff8bd5a864   132  movk x2, #0x2cb8, lsl #16
0xffff8bd5a868   136  ldr x2, [x2]
0xffff8bd5a86c   140  sub x2, x2, x1
0xffff8bd5a870   144  cmp x2, #0x10 (16)
0xffff8bd5a874   148  b.lt #+0x64 (addr 0xffff8bd5a8d8)
0xffff8bd5a878   152  add x2, x1, #0x10 (16)
0xffff8bd5a87c   156  str x2, [x0]
0xffff8bd5a880   160  add x0, x1, #0x1 (1)
0xffff8bd5a884   164  ldr x1, [x26, #120]
0xffff8bd5a888   168  stur x1, [x0, #-1]
0xffff8bd5a88c   172  stur d0, [x0, #7]
0xffff8bd5a890   176  ret
0xffff8bd5a894   180  b #+0xb4 (addr 0xffff8bd5a948)
0xffff8bd5a898   184  ret
0xffff8bd5a89c   188  movz x16, #0xa00000000
0xffff8bd5a8a0   192  sub csp, jssp, #0x10 (16)
0xffff8bd5a8a4   196  stp fp, lr, [jssp, #-16]!
0xffff8bd5a8a8   200  mov fp, jssp
0xffff8bd5a8ac   204  sub csp, jssp, #0x20 (32)
0xffff8bd5a8b0   208  sub jssp, jssp, #0x20 (32)
0xffff8bd5a8b4   212  stur x16, [fp, #-8]
0xffff8bd5a8b8   216  mov x1, cp
0xffff8bd5a8bc   220  str cp, [jssp, #8]
0xffff8bd5a8c0   224  ldr x16, pc+160 (addr 0x0000ffff8bd5a960)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff8bd5a8c4   228  blr x16
0xffff8bd5a8c8   232  ldr cp, [jssp, #8]
0xffff8bd5a8cc   236  mov jssp, fp
0xffff8bd5a8d0   240  ldp fp, lr, [jssp], #16
0xffff8bd5a8d4   244  b #-0xf4 (addr 0xffff8bd5a7e0)
0xffff8bd5a8d8   248  movz x16, #0xa00000000
0xffff8bd5a8dc   252  sub csp, jssp, #0x10 (16)
0xffff8bd5a8e0   256  stp fp, lr, [jssp, #-16]!
0xffff8bd5a8e4   260  mov fp, jssp
0xffff8bd5a8e8   264  sub csp, jssp, #0x20 (32)
0xffff8bd5a8ec   268  sub jssp, jssp, #0x20 (32)
0xffff8bd5a8f0   272  stur x16, [fp, #-8]
0xffff8bd5a8f4   276  movz x0, #0x0
0xffff8bd5a8f8   280  lsl x0, x0, #32
0xffff8bd5a8fc   284  movz x1, #0x10
0xffff8bd5a900   288  lsl x1, x1, #32
0xffff8bd5a904   292  sub csp, jssp, #0x10 (16)
0xffff8bd5a908   296  sub jssp, jssp, #0x10 (16)
0xffff8bd5a90c   300  str x1, [jssp, #8]
0xffff8bd5a910   304  str x0, [jssp]
0xffff8bd5a914   308  str d0, [jssp, #32]
0xffff8bd5a918   312  movz x1, #0x5b88
0xffff8bd5a91c   316  movk x1, #0xe2, lsl #16
0xffff8bd5a920   320  movz x0, #0x2
0xffff8bd5a924   324  movz cp, #0x0
0xffff8bd5a928   328  ldr x16, pc+64 (addr 0x0000ffff8bd5a968)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd5a92c   332  blr x16
0xffff8bd5a930   336  ldr d0, [jssp, #16]
0xffff8bd5a934   340  mov jssp, fp
0xffff8bd5a938   344  ldp fp, lr, [jssp], #16
0xffff8bd5a93c   348  b #-0xb8 (addr 0xffff8bd5a884)
0xffff8bd5a940   352  ldr x0, pc+48 (addr 0x0000ffff8bd5a970)    ;; object: 0x26c88e41 <Number: 9.0072e+15>
0xffff8bd5a944   356  ret
0xffff8bd5a948   360  movz x0, #0x0
0xffff8bd5a94c   364  ret
0xffff8bd5a950   368  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bd5a954   372  d63f03e0       constant
0xffff8bd5a958   376  ffffffff       constant
0xffff8bd5a95c   380  433fffff       constant
0xffff8bd5a960   384  8bd29d80       constant
0xffff8bd5a964   388  0000ffff       constant
0xffff8bd5a968   392  8bd06060       constant
0xffff8bd5a96c   396  0000ffff       constant
0xffff8bd5a970   400  26c88e41       constant
0xffff8bd5a974   404  00000000       constant


Safepoints (size = 34)
0xffff8bd5a8c8   232  010000 (sp -> fp)  <none>
0xffff8bd5a930   336  000000 (sp -> fp)  <none>

RelocInfo (size = 13)
0xffff8bd5a8c0  code target (STUB)  (0xffff8bd29d80)
0xffff8bd5a928  code target (STUB)  (0xffff8bd06060)
0xffff8bd5a940  embedded object  (0x26c88e41 <Number: 9.0072e+15>)
0xffff8bd5a950  constant pool (size 40)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 152)
0xffff8bd5b5e0     0  orr x16, x0, x1
0xffff8bd5b5e4     4  tbnz w16, #0, #+0xc (addr 0xffff8bd5b5f0)
0xffff8bd5b5e8     8  sub x0, x0, x1
0xffff8bd5b5ec    12  ret
0xffff8bd5b5f0    16  movz x16, #0xc00000000
0xffff8bd5b5f4    20  sub csp, jssp, #0x10 (16)
0xffff8bd5b5f8    24  stp fp, lr, [jssp, #-16]!
0xffff8bd5b5fc    28  sub csp, jssp, #0x10 (16)
0xffff8bd5b600    32  str x16, [jssp, #-8]!
0xffff8bd5b604    36  ldr x17, pc+92 (addr 0x0000ffff8bd5b660)    ;; object: 0xffff8bd5b581 <Code: COMPARE_IC>
0xffff8bd5b608    40  sub csp, jssp, #0x10 (16)
0xffff8bd5b60c    44  str x17, [jssp, #-8]!
0xffff8bd5b610    48  add fp, jssp, #0x10 (16)
0xffff8bd5b614    52  sub csp, jssp, #0x18 (24)
0xffff8bd5b618    56  stp lr, x0, [jssp, #-24]!
0xffff8bd5b61c    60  str x1, [jssp, #16]
0xffff8bd5b620    64  movz x10, #0x2f00000000
0xffff8bd5b624    68  sub csp, jssp, #0x18 (24)
0xffff8bd5b628    72  stp x10, x0, [jssp, #-24]!
0xffff8bd5b62c    76  str x1, [jssp, #16]
0xffff8bd5b630    80  movz x0, #0x3
0xffff8bd5b634    84  ldr x1, pc+52 (addr 0x0000ffff8bd5b668)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd5b638    88  ldr x16, pc+56 (addr 0x0000ffff8bd5b670)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd5b63c    92  blr x16
0xffff8bd5b640    96  add x11, x0, #0x5f (95)
0xffff8bd5b644   100  ldr x1, [jssp, #16]
0xffff8bd5b648   104  ldp lr, x0, [jssp], #24
0xffff8bd5b64c   108  mov jssp, fp
0xffff8bd5b650   112  ldp fp, lr, [jssp], #16
0xffff8bd5b654   116  br x11
0xffff8bd5b658   120  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd5b65c   124  d63f03e0       constant
0xffff8bd5b660   128  8bd5b581       constant
0xffff8bd5b664   132  0000ffff       constant
0xffff8bd5b668   136  00c8a980       constant
0xffff8bd5b66c   140  00000000       constant
0xffff8bd5b670   144  8bd06060       constant
0xffff8bd5b674   148  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd5b604  embedded object  (0xffff8bd5b581 <Code: COMPARE_IC>)
0xffff8bd5b634  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd5b638  code target (STUB)  (0xffff8bd06060)
0xffff8bd5b658  constant pool (size 32)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 445)
0xffff8bd5b920     0  movz x2, #0xe2c0
0xffff8bd5b924     4  movk x2, #0x2cb8, lsl #16
0xffff8bd5b928     8  ldp x3, x0, [x2]
0xffff8bd5b92c    12  adds x16, x3, #0x90 (144)
0xffff8bd5b930    16  ccmp x16, x0, #nzCv, lo
0xffff8bd5b934    20  b.hi #+0x9c (addr 0xffff8bd5b9d0)
0xffff8bd5b938    24  str x16, [x2]
0xffff8bd5b93c    28  orr x3, x3, #0x1
0xffff8bd5b940    32  ldr x0, pc+256 (addr 0x0000ffff8bd5ba40)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd5b944    36  stur x0, [x3, #-1]
0xffff8bd5b948    40  movz x0, #0x1000000000
0xffff8bd5b94c    44  stur x0, [x3, #7]
0xffff8bd5b950    48  stur x1, [x3, #15]
0xffff8bd5b954    52  stur cp, [x3, #23]
0xffff8bd5b958    56  ldr x0, pc+240 (addr 0x0000ffff8bd5ba48)    ;; object: 0x26c04519 <the hole>
0xffff8bd5b95c    60  stur x0, [x3, #31]
0xffff8bd5b960    64  ldur x0, [cp, #39]
0xffff8bd5b964    68  stur x0, [x3, #39]
0xffff8bd5b968    72  ldr x0, pc+232 (addr 0x0000ffff8bd5ba50)    ;; object: 0x26c04241 <undefined>
0xffff8bd5b96c    76  stur x0, [x3, #47]
0xffff8bd5b970    80  ldr x0, pc+232 (addr 0x0000ffff8bd5ba58)    ;; object: 0x26c04241 <undefined>
0xffff8bd5b974    84  stur x0, [x3, #55]
0xffff8bd5b978    88  ldr x0, pc+232 (addr 0x0000ffff8bd5ba60)    ;; object: 0x26c04241 <undefined>
0xffff8bd5b97c    92  stur x0, [x3, #63]
0xffff8bd5b980    96  ldr x0, pc+232 (addr 0x0000ffff8bd5ba68)    ;; object: 0x26c04241 <undefined>
0xffff8bd5b984   100  stur x0, [x3, #71]
0xffff8bd5b988   104  ldr x0, pc+232 (addr 0x0000ffff8bd5ba70)    ;; object: 0x26c04241 <undefined>
0xffff8bd5b98c   108  stur x0, [x3, #79]
0xffff8bd5b990   112  ldr x0, pc+232 (addr 0x0000ffff8bd5ba78)    ;; object: 0x26c04241 <undefined>
0xffff8bd5b994   116  stur x0, [x3, #87]
0xffff8bd5b998   120  ldr x0, pc+232 (addr 0x0000ffff8bd5ba80)    ;; object: 0x26c04241 <undefined>
0xffff8bd5b99c   124  stur x0, [x3, #95]
0xffff8bd5b9a0   128  ldr x0, pc+232 (addr 0x0000ffff8bd5ba88)    ;; object: 0x26c04241 <undefined>
0xffff8bd5b9a4   132  stur x0, [x3, #103]
0xffff8bd5b9a8   136  ldr x0, pc+232 (addr 0x0000ffff8bd5ba90)    ;; object: 0x26c04241 <undefined>
0xffff8bd5b9ac   140  stur x0, [x3, #111]
0xffff8bd5b9b0   144  ldr x0, pc+232 (addr 0x0000ffff8bd5ba98)    ;; object: 0x26c04241 <undefined>
0xffff8bd5b9b4   148  stur x0, [x3, #119]
0xffff8bd5b9b8   152  ldr x0, pc+232 (addr 0x0000ffff8bd5baa0)    ;; object: 0x26c04241 <undefined>
0xffff8bd5b9bc   156  stur x0, [x3, #127]
0xffff8bd5b9c0   160  ldr x0, pc+232 (addr 0x0000ffff8bd5baa8)    ;; object: 0x26c04241 <undefined>
0xffff8bd5b9c4   164  stur x0, [x3, #135]
0xffff8bd5b9c8   168  mov x0, x3
0xffff8bd5b9cc   172  ret
0xffff8bd5b9d0   176  sub csp, jssp, #0x10 (16)
0xffff8bd5b9d4   180  stp fp, lr, [jssp, #-16]!
0xffff8bd5b9d8   184  movz fp, #0xa00000000
0xffff8bd5b9dc   188  sub csp, jssp, #0x8 (8)
0xffff8bd5b9e0   192  str fp, [jssp, #-8]!
0xffff8bd5b9e4   196  add fp, jssp, #0x8 (8)
0xffff8bd5b9e8   200  movz x3, #0x0
0xffff8bd5b9ec   204  mov x16, lr
0xffff8bd5b9f0   208  ldr x17, pc+192 (addr 0x0000ffff8bd5bab0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd5b9f4   212  blr x17
0xffff8bd5b9f8   216  movz x0, #0x9000000000
0xffff8bd5b9fc   220  movz x10, #0x0
0xffff8bd5ba00   224  sub csp, jssp, #0x10 (16)
0xffff8bd5ba04   228  stp x10, x0, [jssp, #-16]!
0xffff8bd5ba08   232  movz x0, #0x2
0xffff8bd5ba0c   236  movz x1, #0x5b88
0xffff8bd5ba10   240  movk x1, #0xe2, lsl #16
0xffff8bd5ba14   244  ldr x16, pc+164 (addr 0x0000ffff8bd5bab8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd5ba18   248  blr x16
0xffff8bd5ba1c   252  str x0, [jssp, #24]
0xffff8bd5ba20   256  ldr x16, pc+160 (addr 0x0000ffff8bd5bac0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd5ba24   260  blr x16
0xffff8bd5ba28   264  ldr lr, [jssp, #16]
0xffff8bd5ba2c   268  ldp xzr, fp, [jssp], #24
0xffff8bd5ba30   272  b #-0xf0 (addr 0xffff8bd5b940)
0xffff8bd5ba34   276  5800049f       constant pool begin (num_const = 36)    ;; constant pool
0xffff8bd5ba38   280  d63f03e0       constant
0xffff8bd5ba3c   284  d503201f       constant
0xffff8bd5ba40   288  5f506149       constant
0xffff8bd5ba44   292  00000000       constant
0xffff8bd5ba48   296  26c04519       constant
0xffff8bd5ba4c   300  00000000       constant
0xffff8bd5ba50   304  26c04241       constant
0xffff8bd5ba54   308  00000000       constant
0xffff8bd5ba58   312  26c04241       constant
0xffff8bd5ba5c   316  00000000       constant
0xffff8bd5ba60   320  26c04241       constant
0xffff8bd5ba64   324  00000000       constant
0xffff8bd5ba68   328  26c04241       constant
0xffff8bd5ba6c   332  00000000       constant
0xffff8bd5ba70   336  26c04241       constant
0xffff8bd5ba74   340  00000000       constant
0xffff8bd5ba78   344  26c04241       constant
0xffff8bd5ba7c   348  00000000       constant
0xffff8bd5ba80   352  26c04241       constant
0xffff8bd5ba84   356  00000000       constant
0xffff8bd5ba88   360  26c04241       constant
0xffff8bd5ba8c   364  00000000       constant
0xffff8bd5ba90   368  26c04241       constant
0xffff8bd5ba94   372  00000000       constant
0xffff8bd5ba98   376  26c04241       constant
0xffff8bd5ba9c   380  00000000       constant
0xffff8bd5baa0   384  26c04241       constant
0xffff8bd5baa4   388  00000000       constant
0xffff8bd5baa8   392  26c04241       constant
0xffff8bd5baac   396  00000000       constant
0xffff8bd5bab0   400  8bd06820       constant
0xffff8bd5bab4   404  0000ffff       constant
0xffff8bd5bab8   408  8bd06260       constant
0xffff8bd5babc   412  0000ffff       constant
0xffff8bd5bac0   416  8bd068e0       constant
0xffff8bd5bac4   420  0000ffff       constant


Safepoints (size = 21)
0xffff8bd5ba1c   252  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 23)
0xffff8bd5b940  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd5b958  embedded object  (0x26c04519 <the hole>)
0xffff8bd5b968  embedded object  (0x26c04241 <undefined>)
0xffff8bd5b970  embedded object  (0x26c04241 <undefined>)
0xffff8bd5b978  embedded object  (0x26c04241 <undefined>)
0xffff8bd5b980  embedded object  (0x26c04241 <undefined>)
0xffff8bd5b988  embedded object  (0x26c04241 <undefined>)
0xffff8bd5b990  embedded object  (0x26c04241 <undefined>)
0xffff8bd5b998  embedded object  (0x26c04241 <undefined>)
0xffff8bd5b9a0  embedded object  (0x26c04241 <undefined>)
0xffff8bd5b9a8  embedded object  (0x26c04241 <undefined>)
0xffff8bd5b9b0  embedded object  (0x26c04241 <undefined>)
0xffff8bd5b9b8  embedded object  (0x26c04241 <undefined>)
0xffff8bd5b9c0  embedded object  (0x26c04241 <undefined>)
0xffff8bd5b9f0  code target (STUB)  (0xffff8bd06820)
0xffff8bd5ba14  code target (STUB)  (0xffff8bd06260)
0xffff8bd5ba20  code target (STUB)  (0xffff8bd068e0)
0xffff8bd5ba34  constant pool (size 148)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bd5cee0     0  ldur x0, [x1, #7]
0xffff8bd5cee4     4  ldur x0, [x0, #143]
0xffff8bd5cee8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 327680
name = CallICStub(args(0), NOT_NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff8bd5cf60     0  add x4, x2, x3, asr #29
0xffff8bd5cf64     4  ldur x4, [x4, #15]
0xffff8bd5cf68     8  ldur x5, [x4, #7]
0xffff8bd5cf6c    12  cmp x5, x1
0xffff8bd5cf70    16  b.ne #+0x2c (addr 0xffff8bd5cf9c)
0xffff8bd5cf74    20  tbz w1, #0, #+0x28 (addr 0xffff8bd5cf9c)
0xffff8bd5cf78    24  add x2, x2, x3, asr #29
0xffff8bd5cf7c    28  add x2, x2, #0x18 (24)
0xffff8bd5cf80    32  ldur x3, [x2, #-1]
0xffff8bd5cf84    36  movz x16, #0x200000000
0xffff8bd5cf88    40  add x3, x3, x16
0xffff8bd5cf8c    44  stur x3, [x2, #-1]
0xffff8bd5cf90    48  movz x0, #0x0
0xffff8bd5cf94    52  ldr x16, pc+372 (addr 0x0000ffff8bd5d108)    ;; code: BUILTIN
0xffff8bd5cf98    56  br x16
0xffff8bd5cf9c    60  ldr x16, [x26, #2400]
0xffff8bd5cfa0    64  cmp x4, x16
0xffff8bd5cfa4    68  b.eq #+0x78 (addr 0xffff8bd5d01c)
0xffff8bd5cfa8    72  ldur x5, [x4, #-1]
0xffff8bd5cfac    76  ldr x16, [x26, #2736]
0xffff8bd5cfb0    80  cmp x5, x16
0xffff8bd5cfb4    84  b.ne #+0x40 (addr 0xffff8bd5cff4)
0xffff8bd5cfb8    88  ldur x5, [cp, #39]
0xffff8bd5cfbc    92  ldur x5, [x5, #95]
0xffff8bd5cfc0    96  cmp x1, x5
0xffff8bd5cfc4   100  b.ne #+0xec (addr 0xffff8bd5d0b0)
0xffff8bd5cfc8   104  movz x0, #0x0
0xffff8bd5cfcc   108  add x2, x2, x3, asr #29
0xffff8bd5cfd0   112  add x2, x2, #0x18 (24)
0xffff8bd5cfd4   116  ldur x3, [x2, #-1]
0xffff8bd5cfd8   120  movz x16, #0x200000000
0xffff8bd5cfdc   124  add x3, x3, x16
0xffff8bd5cfe0   128  stur x3, [x2, #-1]
0xffff8bd5cfe4   132  mov x2, x4
0xffff8bd5cfe8   136  mov x3, x1
0xffff8bd5cfec   140  ldr x16, pc+292 (addr 0x0000ffff8bd5d110)    ;; code: STUB, ArrayConstructorStub, minor: 1
0xffff8bd5cff0   144  br x16
0xffff8bd5cff4   148  ldr x16, [x26, #2568]
0xffff8bd5cff8   152  cmp x4, x16
0xffff8bd5cffc   156  b.eq #+0xb4 (addr 0xffff8bd5d0b0)
0xffff8bd5d000   160  ldur x5, [x4, #-1]
0xffff8bd5d004   164  ldrb w5, [x5, #11]
0xffff8bd5d008   168  cmp x5, #0xc9 (201)
0xffff8bd5d00c   172  b.ne #+0xa4 (addr 0xffff8bd5d0b0)
0xffff8bd5d010   176  add x4, x2, x3, asr #29
0xffff8bd5d014   180  ldr x5, [x26, #2400]
0xffff8bd5d018   184  stur x5, [x4, #15]
0xffff8bd5d01c   188  movz x0, #0x0
0xffff8bd5d020   192  ldr x16, pc+248 (addr 0x0000ffff8bd5d118)    ;; code: BUILTIN
0xffff8bd5d024   196  br x16
0xffff8bd5d028   200  tbz w1, #0, #+0x88 (addr 0xffff8bd5d0b0)
0xffff8bd5d02c   204  ldur x5, [x1, #-1]
0xffff8bd5d030   208  ldrb w5, [x5, #11]
0xffff8bd5d034   212  cmp x5, #0xc9 (201)
0xffff8bd5d038   216  b.ne #+0x78 (addr 0xffff8bd5d0b0)
0xffff8bd5d03c   220  ldur x5, [cp, #39]
0xffff8bd5d040   224  ldur x5, [x5, #95]
0xffff8bd5d044   228  cmp x1, x5
0xffff8bd5d048   232  b.eq #+0x68 (addr 0xffff8bd5d0b0)
0xffff8bd5d04c   236  ldur x4, [x1, #39]
0xffff8bd5d050   240  ldur x4, [x4, #39]
0xffff8bd5d054   244  ldur x5, [cp, #39]
0xffff8bd5d058   248  cmp x4, x5
0xffff8bd5d05c   252  b.ne #+0x54 (addr 0xffff8bd5d0b0)
0xffff8bd5d060   256  movz x5, #0x200000000
0xffff8bd5d064   260  adds x4, x2, x3, asr #29
0xffff8bd5d068   264  stur x5, [x4, #23]
0xffff8bd5d06c   268  movz x16, #0xc00000000
0xffff8bd5d070   272  sub csp, jssp, #0x10 (16)
0xffff8bd5d074   276  stp fp, lr, [jssp, #-16]!
0xffff8bd5d078   280  sub csp, jssp, #0x10 (16)
0xffff8bd5d07c   284  str x16, [jssp, #-8]!
0xffff8bd5d080   288  ldr x17, pc+160 (addr 0x0000ffff8bd5d120)    ;; object: 0xffff8bd5cf01 <Code: CALL_IC>
0xffff8bd5d084   292  sub csp, jssp, #0x10 (16)
0xffff8bd5d088   296  str x17, [jssp, #-8]!
0xffff8bd5d08c   300  add fp, jssp, #0x10 (16)
0xffff8bd5d090   304  sub csp, jssp, #0x8 (8)
0xffff8bd5d094   308  str x1, [jssp, #-8]!
0xffff8bd5d098   312  ldr x16, pc+144 (addr 0x0000ffff8bd5d128)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bd5d09c   316  blr x16
0xffff8bd5d0a0   320  ldr x1, [jssp], #8
0xffff8bd5d0a4   324  mov jssp, fp
0xffff8bd5d0a8   328  ldp fp, lr, [jssp], #16
0xffff8bd5d0ac   332  b #-0x11c (addr 0xffff8bd5cf90)
0xffff8bd5d0b0   336  movz x16, #0xc00000000
0xffff8bd5d0b4   340  sub csp, jssp, #0x10 (16)
0xffff8bd5d0b8   344  stp fp, lr, [jssp, #-16]!
0xffff8bd5d0bc   348  sub csp, jssp, #0x10 (16)
0xffff8bd5d0c0   352  str x16, [jssp, #-8]!
0xffff8bd5d0c4   356  ldr x17, pc+108 (addr 0x0000ffff8bd5d130)    ;; object: 0xffff8bd5cf01 <Code: CALL_IC>
0xffff8bd5d0c8   360  sub csp, jssp, #0x10 (16)
0xffff8bd5d0cc   364  str x17, [jssp, #-8]!
0xffff8bd5d0d0   368  add fp, jssp, #0x10 (16)
0xffff8bd5d0d4   372  sub csp, jssp, #0x18 (24)
0xffff8bd5d0d8   376  stp x3, x2, [jssp, #-24]!
0xffff8bd5d0dc   380  str x1, [jssp, #16]
0xffff8bd5d0e0   384  movz x0, #0x3
0xffff8bd5d0e4   388  ldr x1, pc+84 (addr 0x0000ffff8bd5d138)    ;; external reference (Runtime::CallIC_Miss)
0xffff8bd5d0e8   392  ldr x16, pc+88 (addr 0x0000ffff8bd5d140)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd5d0ec   396  blr x16
0xffff8bd5d0f0   400  mov x1, x0
0xffff8bd5d0f4   404  mov jssp, fp
0xffff8bd5d0f8   408  ldp fp, lr, [jssp], #16
0xffff8bd5d0fc   412  b #-0xe0 (addr 0xffff8bd5d01c)
0xffff8bd5d100   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bd5d104   420  d63f03e0       constant
0xffff8bd5d108   424  8bd1e600       constant
0xffff8bd5d10c   428  0000ffff       constant
0xffff8bd5d110   432  8bd3d580       constant
0xffff8bd5d114   436  0000ffff       constant
0xffff8bd5d118   440  8bd1f6c0       constant
0xffff8bd5d11c   444  0000ffff       constant
0xffff8bd5d120   448  8bd5cf01       constant
0xffff8bd5d124   452  0000ffff       constant
0xffff8bd5d128   456  8bd0ddc0       constant
0xffff8bd5d12c   460  0000ffff       constant
0xffff8bd5d130   464  8bd5cf01       constant
0xffff8bd5d134   468  0000ffff       constant
0xffff8bd5d138   472  00c86928       constant
0xffff8bd5d13c   476  00000000       constant
0xffff8bd5d140   480  8bd06060       constant
0xffff8bd5d144   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd5cf94  code target (BUILTIN)  (0xffff8bd1e600)
0xffff8bd5cfec  code target (STUB)  (0xffff8bd3d580)
0xffff8bd5d020  code target (BUILTIN)  (0xffff8bd1f6c0)
0xffff8bd5d080  embedded object  (0xffff8bd5cf01 <Code: CALL_IC>)
0xffff8bd5d098  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bd5d0c4  embedded object  (0xffff8bd5cf01 <Code: CALL_IC>)
0xffff8bd5d0e4  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8bd5d0e8  code target (STUB)  (0xffff8bd06060)
0xffff8bd5d100  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 327680
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8bd5d1c0     0  ldur x2, [fp, #-16]
0xffff8bd5d1c4     4  ldur x2, [x2, #31]
0xffff8bd5d1c8     8  ldur x2, [x2, #87]
0xffff8bd5d1cc    12  ldr x16, pc+20 (addr 0x0000ffff8bd5d1e0)    ;; code: CALL_IC, GENERIC
0xffff8bd5d1d0    16  br x16
0xffff8bd5d1d4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd5d1d8    24  d63f03e0       constant
0xffff8bd5d1dc    28  d503201f       constant
0xffff8bd5d1e0    32  8bd5cf60       constant
0xffff8bd5d1e4    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd5d1cc  code target (CALL_IC)  (0xffff8bd5cf60)
0xffff8bd5d1d4  constant pool (size 20)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 301)
0xffff8bd5e860     0  movz x2, #0xe2c0
0xffff8bd5e864     4  movk x2, #0x2cb8, lsl #16
0xffff8bd5e868     8  ldp x3, x0, [x2]
0xffff8bd5e86c    12  adds x16, x3, #0x48 (72)
0xffff8bd5e870    16  ccmp x16, x0, #nzCv, lo
0xffff8bd5e874    20  b.hi #+0x54 (addr 0xffff8bd5e8c8)
0xffff8bd5e878    24  str x16, [x2]
0xffff8bd5e87c    28  orr x3, x3, #0x1
0xffff8bd5e880    32  ldr x0, pc+184 (addr 0x0000ffff8bd5e938)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd5e884    36  stur x0, [x3, #-1]
0xffff8bd5e888    40  movz x0, #0x700000000
0xffff8bd5e88c    44  stur x0, [x3, #7]
0xffff8bd5e890    48  stur x1, [x3, #15]
0xffff8bd5e894    52  stur cp, [x3, #23]
0xffff8bd5e898    56  ldr x0, pc+168 (addr 0x0000ffff8bd5e940)    ;; object: 0x26c04519 <the hole>
0xffff8bd5e89c    60  stur x0, [x3, #31]
0xffff8bd5e8a0    64  ldur x0, [cp, #39]
0xffff8bd5e8a4    68  stur x0, [x3, #39]
0xffff8bd5e8a8    72  ldr x0, pc+160 (addr 0x0000ffff8bd5e948)    ;; object: 0x26c04241 <undefined>
0xffff8bd5e8ac    76  stur x0, [x3, #47]
0xffff8bd5e8b0    80  ldr x0, pc+160 (addr 0x0000ffff8bd5e950)    ;; object: 0x26c04241 <undefined>
0xffff8bd5e8b4    84  stur x0, [x3, #55]
0xffff8bd5e8b8    88  ldr x0, pc+160 (addr 0x0000ffff8bd5e958)    ;; object: 0x26c04241 <undefined>
0xffff8bd5e8bc    92  stur x0, [x3, #63]
0xffff8bd5e8c0    96  mov x0, x3
0xffff8bd5e8c4   100  ret
0xffff8bd5e8c8   104  sub csp, jssp, #0x10 (16)
0xffff8bd5e8cc   108  stp fp, lr, [jssp, #-16]!
0xffff8bd5e8d0   112  movz fp, #0xa00000000
0xffff8bd5e8d4   116  sub csp, jssp, #0x8 (8)
0xffff8bd5e8d8   120  str fp, [jssp, #-8]!
0xffff8bd5e8dc   124  add fp, jssp, #0x8 (8)
0xffff8bd5e8e0   128  movz x3, #0x0
0xffff8bd5e8e4   132  mov x16, lr
0xffff8bd5e8e8   136  ldr x17, pc+120 (addr 0x0000ffff8bd5e960)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd5e8ec   140  blr x17
0xffff8bd5e8f0   144  movz x0, #0x4800000000
0xffff8bd5e8f4   148  movz x10, #0x0
0xffff8bd5e8f8   152  sub csp, jssp, #0x10 (16)
0xffff8bd5e8fc   156  stp x10, x0, [jssp, #-16]!
0xffff8bd5e900   160  movz x0, #0x2
0xffff8bd5e904   164  movz x1, #0x5b88
0xffff8bd5e908   168  movk x1, #0xe2, lsl #16
0xffff8bd5e90c   172  ldr x16, pc+92 (addr 0x0000ffff8bd5e968)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd5e910   176  blr x16
0xffff8bd5e914   180  str x0, [jssp, #24]
0xffff8bd5e918   184  ldr x16, pc+88 (addr 0x0000ffff8bd5e970)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd5e91c   188  blr x16
0xffff8bd5e920   192  ldr lr, [jssp, #16]
0xffff8bd5e924   196  ldp xzr, fp, [jssp], #24
0xffff8bd5e928   200  b #-0xa8 (addr 0xffff8bd5e880)
0xffff8bd5e92c   204  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff8bd5e930   208  d63f03e0       constant
0xffff8bd5e934   212  d503201f       constant
0xffff8bd5e938   216  5f506149       constant
0xffff8bd5e93c   220  00000000       constant
0xffff8bd5e940   224  26c04519       constant
0xffff8bd5e944   228  00000000       constant
0xffff8bd5e948   232  26c04241       constant
0xffff8bd5e94c   236  00000000       constant
0xffff8bd5e950   240  26c04241       constant
0xffff8bd5e954   244  00000000       constant
0xffff8bd5e958   248  26c04241       constant
0xffff8bd5e95c   252  00000000       constant
0xffff8bd5e960   256  8bd06820       constant
0xffff8bd5e964   260  0000ffff       constant
0xffff8bd5e968   264  8bd06260       constant
0xffff8bd5e96c   268  0000ffff       constant
0xffff8bd5e970   272  8bd068e0       constant
0xffff8bd5e974   276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd5e914   180  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 14)
0xffff8bd5e880  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd5e898  embedded object  (0x26c04519 <the hole>)
0xffff8bd5e8a8  embedded object  (0x26c04241 <undefined>)
0xffff8bd5e8b0  embedded object  (0x26c04241 <undefined>)
0xffff8bd5e8b8  embedded object  (0x26c04241 <undefined>)
0xffff8bd5e8e8  code target (STUB)  (0xffff8bd06820)
0xffff8bd5e90c  code target (STUB)  (0xffff8bd06260)
0xffff8bd5e918  code target (STUB)  (0xffff8bd068e0)
0xffff8bd5e92c  constant pool (size 76)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 365)
0xffff8bd609e0     0  movz x2, #0xe2c0
0xffff8bd609e4     4  movk x2, #0x2cb8, lsl #16
0xffff8bd609e8     8  ldp x3, x0, [x2]
0xffff8bd609ec    12  adds x16, x3, #0x68 (104)
0xffff8bd609f0    16  ccmp x16, x0, #nzCv, lo
0xffff8bd609f4    20  b.hi #+0x74 (addr 0xffff8bd60a68)
0xffff8bd609f8    24  str x16, [x2]
0xffff8bd609fc    28  orr x3, x3, #0x1
0xffff8bd60a00    32  ldr x0, pc+216 (addr 0x0000ffff8bd60ad8)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd60a04    36  stur x0, [x3, #-1]
0xffff8bd60a08    40  movz x0, #0xb00000000
0xffff8bd60a0c    44  stur x0, [x3, #7]
0xffff8bd60a10    48  stur x1, [x3, #15]
0xffff8bd60a14    52  stur cp, [x3, #23]
0xffff8bd60a18    56  ldr x0, pc+200 (addr 0x0000ffff8bd60ae0)    ;; object: 0x26c04519 <the hole>
0xffff8bd60a1c    60  stur x0, [x3, #31]
0xffff8bd60a20    64  ldur x0, [cp, #39]
0xffff8bd60a24    68  stur x0, [x3, #39]
0xffff8bd60a28    72  ldr x0, pc+192 (addr 0x0000ffff8bd60ae8)    ;; object: 0x26c04241 <undefined>
0xffff8bd60a2c    76  stur x0, [x3, #47]
0xffff8bd60a30    80  ldr x0, pc+192 (addr 0x0000ffff8bd60af0)    ;; object: 0x26c04241 <undefined>
0xffff8bd60a34    84  stur x0, [x3, #55]
0xffff8bd60a38    88  ldr x0, pc+192 (addr 0x0000ffff8bd60af8)    ;; object: 0x26c04241 <undefined>
0xffff8bd60a3c    92  stur x0, [x3, #63]
0xffff8bd60a40    96  ldr x0, pc+192 (addr 0x0000ffff8bd60b00)    ;; object: 0x26c04241 <undefined>
0xffff8bd60a44   100  stur x0, [x3, #71]
0xffff8bd60a48   104  ldr x0, pc+192 (addr 0x0000ffff8bd60b08)    ;; object: 0x26c04241 <undefined>
0xffff8bd60a4c   108  stur x0, [x3, #79]
0xffff8bd60a50   112  ldr x0, pc+192 (addr 0x0000ffff8bd60b10)    ;; object: 0x26c04241 <undefined>
0xffff8bd60a54   116  stur x0, [x3, #87]
0xffff8bd60a58   120  ldr x0, pc+192 (addr 0x0000ffff8bd60b18)    ;; object: 0x26c04241 <undefined>
0xffff8bd60a5c   124  stur x0, [x3, #95]
0xffff8bd60a60   128  mov x0, x3
0xffff8bd60a64   132  ret
0xffff8bd60a68   136  sub csp, jssp, #0x10 (16)
0xffff8bd60a6c   140  stp fp, lr, [jssp, #-16]!
0xffff8bd60a70   144  movz fp, #0xa00000000
0xffff8bd60a74   148  sub csp, jssp, #0x8 (8)
0xffff8bd60a78   152  str fp, [jssp, #-8]!
0xffff8bd60a7c   156  add fp, jssp, #0x8 (8)
0xffff8bd60a80   160  movz x3, #0x0
0xffff8bd60a84   164  mov x16, lr
0xffff8bd60a88   168  ldr x17, pc+152 (addr 0x0000ffff8bd60b20)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd60a8c   172  blr x17
0xffff8bd60a90   176  movz x0, #0x6800000000
0xffff8bd60a94   180  movz x10, #0x0
0xffff8bd60a98   184  sub csp, jssp, #0x10 (16)
0xffff8bd60a9c   188  stp x10, x0, [jssp, #-16]!
0xffff8bd60aa0   192  movz x0, #0x2
0xffff8bd60aa4   196  movz x1, #0x5b88
0xffff8bd60aa8   200  movk x1, #0xe2, lsl #16
0xffff8bd60aac   204  ldr x16, pc+124 (addr 0x0000ffff8bd60b28)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd60ab0   208  blr x16
0xffff8bd60ab4   212  str x0, [jssp, #24]
0xffff8bd60ab8   216  ldr x16, pc+120 (addr 0x0000ffff8bd60b30)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd60abc   220  blr x16
0xffff8bd60ac0   224  ldr lr, [jssp, #16]
0xffff8bd60ac4   228  ldp xzr, fp, [jssp], #24
0xffff8bd60ac8   232  b #-0xc8 (addr 0xffff8bd60a00)
0xffff8bd60acc   236  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff8bd60ad0   240  d63f03e0       constant
0xffff8bd60ad4   244  d503201f       constant
0xffff8bd60ad8   248  5f506149       constant
0xffff8bd60adc   252  00000000       constant
0xffff8bd60ae0   256  26c04519       constant
0xffff8bd60ae4   260  00000000       constant
0xffff8bd60ae8   264  26c04241       constant
0xffff8bd60aec   268  00000000       constant
0xffff8bd60af0   272  26c04241       constant
0xffff8bd60af4   276  00000000       constant
0xffff8bd60af8   280  26c04241       constant
0xffff8bd60afc   284  00000000       constant
0xffff8bd60b00   288  26c04241       constant
0xffff8bd60b04   292  00000000       constant
0xffff8bd60b08   296  26c04241       constant
0xffff8bd60b0c   300  00000000       constant
0xffff8bd60b10   304  26c04241       constant
0xffff8bd60b14   308  00000000       constant
0xffff8bd60b18   312  26c04241       constant
0xffff8bd60b1c   316  00000000       constant
0xffff8bd60b20   320  8bd06820       constant
0xffff8bd60b24   324  0000ffff       constant
0xffff8bd60b28   328  8bd06260       constant
0xffff8bd60b2c   332  0000ffff       constant
0xffff8bd60b30   336  8bd068e0       constant
0xffff8bd60b34   340  0000ffff       constant


Safepoints (size = 21)
0xffff8bd60ab4   212  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 18)
0xffff8bd60a00  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd60a18  embedded object  (0x26c04519 <the hole>)
0xffff8bd60a28  embedded object  (0x26c04241 <undefined>)
0xffff8bd60a30  embedded object  (0x26c04241 <undefined>)
0xffff8bd60a38  embedded object  (0x26c04241 <undefined>)
0xffff8bd60a40  embedded object  (0x26c04241 <undefined>)
0xffff8bd60a48  embedded object  (0x26c04241 <undefined>)
0xffff8bd60a50  embedded object  (0x26c04241 <undefined>)
0xffff8bd60a58  embedded object  (0x26c04241 <undefined>)
0xffff8bd60a88  code target (STUB)  (0xffff8bd06820)
0xffff8bd60aac  code target (STUB)  (0xffff8bd06260)
0xffff8bd60ab8  code target (STUB)  (0xffff8bd068e0)
0xffff8bd60acc  constant pool (size 108)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd61b20     0  ldur x0, [x1, #-1]
0xffff8bd61b24     4  ldur x0, [x0, #47]
0xffff8bd61b28     8  movz x16, #0x5ff
0xffff8bd61b2c    12  ldr x0, [x0, x16]
0xffff8bd61b30    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd61ba0     0  ldur x0, [x1, #-1]
0xffff8bd61ba4     4  ldur x0, [x0, #47]
0xffff8bd61ba8     8  movz x16, #0x5e7
0xffff8bd61bac    12  ldr x0, [x0, x16]
0xffff8bd61bb0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 821)
0xffff8bd620e0     0  movz x2, #0xe2c0
0xffff8bd620e4     4  movk x2, #0x2cb8, lsl #16
0xffff8bd620e8     8  ldp x3, x0, [x2]
0xffff8bd620ec    12  adds x16, x3, #0x140 (320)
0xffff8bd620f0    16  ccmp x16, x0, #nzCv, lo
0xffff8bd620f4    20  b.hi #+0x168 (addr 0xffff8bd6225c)
0xffff8bd620f8    24  str x16, [x2]
0xffff8bd620fc    28  orr x3, x3, #0x1
0xffff8bd62100    32  ldr x0, pc+456 (addr 0x0000ffff8bd622c8)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd62104    36  stur x0, [x3, #-1]
0xffff8bd62108    40  movz x0, #0x2600000000
0xffff8bd6210c    44  stur x0, [x3, #7]
0xffff8bd62110    48  stur x1, [x3, #15]
0xffff8bd62114    52  stur cp, [x3, #23]
0xffff8bd62118    56  ldr x0, pc+440 (addr 0x0000ffff8bd622d0)    ;; object: 0x26c04519 <the hole>
0xffff8bd6211c    60  stur x0, [x3, #31]
0xffff8bd62120    64  ldur x0, [cp, #39]
0xffff8bd62124    68  stur x0, [x3, #39]
0xffff8bd62128    72  ldr x0, pc+432 (addr 0x0000ffff8bd622d8)    ;; object: 0x26c04241 <undefined>
0xffff8bd6212c    76  stur x0, [x3, #47]
0xffff8bd62130    80  ldr x0, pc+432 (addr 0x0000ffff8bd622e0)    ;; object: 0x26c04241 <undefined>
0xffff8bd62134    84  stur x0, [x3, #55]
0xffff8bd62138    88  ldr x0, pc+432 (addr 0x0000ffff8bd622e8)    ;; object: 0x26c04241 <undefined>
0xffff8bd6213c    92  stur x0, [x3, #63]
0xffff8bd62140    96  ldr x0, pc+432 (addr 0x0000ffff8bd622f0)    ;; object: 0x26c04241 <undefined>
0xffff8bd62144   100  stur x0, [x3, #71]
0xffff8bd62148   104  ldr x0, pc+432 (addr 0x0000ffff8bd622f8)    ;; object: 0x26c04241 <undefined>
0xffff8bd6214c   108  stur x0, [x3, #79]
0xffff8bd62150   112  ldr x0, pc+432 (addr 0x0000ffff8bd62300)    ;; object: 0x26c04241 <undefined>
0xffff8bd62154   116  stur x0, [x3, #87]
0xffff8bd62158   120  ldr x0, pc+432 (addr 0x0000ffff8bd62308)    ;; object: 0x26c04241 <undefined>
0xffff8bd6215c   124  stur x0, [x3, #95]
0xffff8bd62160   128  ldr x0, pc+432 (addr 0x0000ffff8bd62310)    ;; object: 0x26c04241 <undefined>
0xffff8bd62164   132  stur x0, [x3, #103]
0xffff8bd62168   136  ldr x0, pc+432 (addr 0x0000ffff8bd62318)    ;; object: 0x26c04241 <undefined>
0xffff8bd6216c   140  stur x0, [x3, #111]
0xffff8bd62170   144  ldr x0, pc+432 (addr 0x0000ffff8bd62320)    ;; object: 0x26c04241 <undefined>
0xffff8bd62174   148  stur x0, [x3, #119]
0xffff8bd62178   152  ldr x0, pc+432 (addr 0x0000ffff8bd62328)    ;; object: 0x26c04241 <undefined>
0xffff8bd6217c   156  stur x0, [x3, #127]
0xffff8bd62180   160  ldr x0, pc+432 (addr 0x0000ffff8bd62330)    ;; object: 0x26c04241 <undefined>
0xffff8bd62184   164  stur x0, [x3, #135]
0xffff8bd62188   168  ldr x0, pc+432 (addr 0x0000ffff8bd62338)    ;; object: 0x26c04241 <undefined>
0xffff8bd6218c   172  stur x0, [x3, #143]
0xffff8bd62190   176  ldr x0, pc+432 (addr 0x0000ffff8bd62340)    ;; object: 0x26c04241 <undefined>
0xffff8bd62194   180  stur x0, [x3, #151]
0xffff8bd62198   184  ldr x0, pc+432 (addr 0x0000ffff8bd62348)    ;; object: 0x26c04241 <undefined>
0xffff8bd6219c   188  stur x0, [x3, #159]
0xffff8bd621a0   192  ldr x0, pc+432 (addr 0x0000ffff8bd62350)    ;; object: 0x26c04241 <undefined>
0xffff8bd621a4   196  stur x0, [x3, #167]
0xffff8bd621a8   200  ldr x0, pc+432 (addr 0x0000ffff8bd62358)    ;; object: 0x26c04241 <undefined>
0xffff8bd621ac   204  stur x0, [x3, #175]
0xffff8bd621b0   208  ldr x0, pc+432 (addr 0x0000ffff8bd62360)    ;; object: 0x26c04241 <undefined>
0xffff8bd621b4   212  stur x0, [x3, #183]
0xffff8bd621b8   216  ldr x0, pc+432 (addr 0x0000ffff8bd62368)    ;; object: 0x26c04241 <undefined>
0xffff8bd621bc   220  stur x0, [x3, #191]
0xffff8bd621c0   224  ldr x0, pc+432 (addr 0x0000ffff8bd62370)    ;; object: 0x26c04241 <undefined>
0xffff8bd621c4   228  stur x0, [x3, #199]
0xffff8bd621c8   232  ldr x0, pc+432 (addr 0x0000ffff8bd62378)    ;; object: 0x26c04241 <undefined>
0xffff8bd621cc   236  stur x0, [x3, #207]
0xffff8bd621d0   240  ldr x0, pc+432 (addr 0x0000ffff8bd62380)    ;; object: 0x26c04241 <undefined>
0xffff8bd621d4   244  stur x0, [x3, #215]
0xffff8bd621d8   248  ldr x0, pc+432 (addr 0x0000ffff8bd62388)    ;; object: 0x26c04241 <undefined>
0xffff8bd621dc   252  stur x0, [x3, #223]
0xffff8bd621e0   256  ldr x0, pc+432 (addr 0x0000ffff8bd62390)    ;; object: 0x26c04241 <undefined>
0xffff8bd621e4   260  stur x0, [x3, #231]
0xffff8bd621e8   264  ldr x0, pc+432 (addr 0x0000ffff8bd62398)    ;; object: 0x26c04241 <undefined>
0xffff8bd621ec   268  stur x0, [x3, #239]
0xffff8bd621f0   272  ldr x0, pc+432 (addr 0x0000ffff8bd623a0)    ;; object: 0x26c04241 <undefined>
0xffff8bd621f4   276  stur x0, [x3, #247]
0xffff8bd621f8   280  ldr x0, pc+432 (addr 0x0000ffff8bd623a8)    ;; object: 0x26c04241 <undefined>
0xffff8bd621fc   284  stur x0, [x3, #255]
0xffff8bd62200   288  ldr x0, pc+432 (addr 0x0000ffff8bd623b0)    ;; object: 0x26c04241 <undefined>
0xffff8bd62204   292  movz x16, #0x107
0xffff8bd62208   296  str x0, [x3, x16]
0xffff8bd6220c   300  ldr x0, pc+428 (addr 0x0000ffff8bd623b8)    ;; object: 0x26c04241 <undefined>
0xffff8bd62210   304  movz x16, #0x10f
0xffff8bd62214   308  str x0, [x3, x16]
0xffff8bd62218   312  ldr x0, pc+424 (addr 0x0000ffff8bd623c0)    ;; object: 0x26c04241 <undefined>
0xffff8bd6221c   316  movz x16, #0x117
0xffff8bd62220   320  str x0, [x3, x16]
0xffff8bd62224   324  ldr x0, pc+420 (addr 0x0000ffff8bd623c8)    ;; object: 0x26c04241 <undefined>
0xffff8bd62228   328  movz x16, #0x11f
0xffff8bd6222c   332  str x0, [x3, x16]
0xffff8bd62230   336  ldr x0, pc+416 (addr 0x0000ffff8bd623d0)    ;; object: 0x26c04241 <undefined>
0xffff8bd62234   340  movz x16, #0x127
0xffff8bd62238   344  str x0, [x3, x16]
0xffff8bd6223c   348  ldr x0, pc+412 (addr 0x0000ffff8bd623d8)    ;; object: 0x26c04241 <undefined>
0xffff8bd62240   352  movz x16, #0x12f
0xffff8bd62244   356  str x0, [x3, x16]
0xffff8bd62248   360  ldr x0, pc+408 (addr 0x0000ffff8bd623e0)    ;; object: 0x26c04241 <undefined>
0xffff8bd6224c   364  movz x16, #0x137
0xffff8bd62250   368  str x0, [x3, x16]
0xffff8bd62254   372  mov x0, x3
0xffff8bd62258   376  ret
0xffff8bd6225c   380  sub csp, jssp, #0x10 (16)
0xffff8bd62260   384  stp fp, lr, [jssp, #-16]!
0xffff8bd62264   388  movz fp, #0xa00000000
0xffff8bd62268   392  sub csp, jssp, #0x8 (8)
0xffff8bd6226c   396  str fp, [jssp, #-8]!
0xffff8bd62270   400  add fp, jssp, #0x8 (8)
0xffff8bd62274   404  movz x3, #0x0
0xffff8bd62278   408  mov x16, lr
0xffff8bd6227c   412  ldr x17, pc+364 (addr 0x0000ffff8bd623e8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd62280   416  blr x17
0xffff8bd62284   420  movz x0, #0x14000000000
0xffff8bd62288   424  movz x10, #0x0
0xffff8bd6228c   428  sub csp, jssp, #0x10 (16)
0xffff8bd62290   432  stp x10, x0, [jssp, #-16]!
0xffff8bd62294   436  movz x0, #0x2
0xffff8bd62298   440  movz x1, #0x5b88
0xffff8bd6229c   444  movk x1, #0xe2, lsl #16
0xffff8bd622a0   448  ldr x16, pc+336 (addr 0x0000ffff8bd623f0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd622a4   452  blr x16
0xffff8bd622a8   456  str x0, [jssp, #24]
0xffff8bd622ac   460  ldr x16, pc+332 (addr 0x0000ffff8bd623f8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd622b0   464  blr x16
0xffff8bd622b4   468  ldr lr, [jssp, #16]
0xffff8bd622b8   472  ldp xzr, fp, [jssp], #24
0xffff8bd622bc   476  b #-0x1bc (addr 0xffff8bd62100)
0xffff8bd622c0   480  580009ff       constant pool begin (num_const = 79)    ;; constant pool
0xffff8bd622c4   484  d63f03e0       constant
0xffff8bd622c8   488  5f506149       constant
0xffff8bd622cc   492  00000000       constant
0xffff8bd622d0   496  26c04519       constant
0xffff8bd622d4   500  00000000       constant
0xffff8bd622d8   504  26c04241       constant
0xffff8bd622dc   508  00000000       constant
0xffff8bd622e0   512  26c04241       constant
0xffff8bd622e4   516  00000000       constant
0xffff8bd622e8   520  26c04241       constant
0xffff8bd622ec   524  00000000       constant
0xffff8bd622f0   528  26c04241       constant
0xffff8bd622f4   532  00000000       constant
0xffff8bd622f8   536  26c04241       constant
0xffff8bd622fc   540  00000000       constant
0xffff8bd62300   544  26c04241       constant
0xffff8bd62304   548  00000000       constant
0xffff8bd62308   552  26c04241       constant
0xffff8bd6230c   556  00000000       constant
0xffff8bd62310   560  26c04241       constant
0xffff8bd62314   564  00000000       constant
0xffff8bd62318   568  26c04241       constant
0xffff8bd6231c   572  00000000       constant
0xffff8bd62320   576  26c04241       constant
0xffff8bd62324   580  00000000       constant
0xffff8bd62328   584  26c04241       constant
0xffff8bd6232c   588  00000000       constant
0xffff8bd62330   592  26c04241       constant
0xffff8bd62334   596  00000000       constant
0xffff8bd62338   600  26c04241       constant
0xffff8bd6233c   604  00000000       constant
0xffff8bd62340   608  26c04241       constant
0xffff8bd62344   612  00000000       constant
0xffff8bd62348   616  26c04241       constant
0xffff8bd6234c   620  00000000       constant
0xffff8bd62350   624  26c04241       constant
0xffff8bd62354   628  00000000       constant
0xffff8bd62358   632  26c04241       constant
0xffff8bd6235c   636  00000000       constant
0xffff8bd62360   640  26c04241       constant
0xffff8bd62364   644  00000000       constant
0xffff8bd62368   648  26c04241       constant
0xffff8bd6236c   652  00000000       constant
0xffff8bd62370   656  26c04241       constant
0xffff8bd62374   660  00000000       constant
0xffff8bd62378   664  26c04241       constant
0xffff8bd6237c   668  00000000       constant
0xffff8bd62380   672  26c04241       constant
0xffff8bd62384   676  00000000       constant
0xffff8bd62388   680  26c04241       constant
0xffff8bd6238c   684  00000000       constant
0xffff8bd62390   688  26c04241       constant
0xffff8bd62394   692  00000000       constant
0xffff8bd62398   696  26c04241       constant
0xffff8bd6239c   700  00000000       constant
0xffff8bd623a0   704  26c04241       constant
0xffff8bd623a4   708  00000000       constant
0xffff8bd623a8   712  26c04241       constant
0xffff8bd623ac   716  00000000       constant
0xffff8bd623b0   720  26c04241       constant
0xffff8bd623b4   724  00000000       constant
0xffff8bd623b8   728  26c04241       constant
0xffff8bd623bc   732  00000000       constant
0xffff8bd623c0   736  26c04241       constant
0xffff8bd623c4   740  00000000       constant
0xffff8bd623c8   744  26c04241       constant
0xffff8bd623cc   748  00000000       constant
0xffff8bd623d0   752  26c04241       constant
0xffff8bd623d4   756  00000000       constant
0xffff8bd623d8   760  26c04241       constant
0xffff8bd623dc   764  00000000       constant
0xffff8bd623e0   768  26c04241       constant
0xffff8bd623e4   772  00000000       constant
0xffff8bd623e8   776  8bd06820       constant
0xffff8bd623ec   780  0000ffff       constant
0xffff8bd623f0   784  8bd06260       constant
0xffff8bd623f4   788  0000ffff       constant
0xffff8bd623f8   792  8bd068e0       constant
0xffff8bd623fc   796  0000ffff       constant


Safepoints (size = 21)
0xffff8bd622a8   456  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 45)
0xffff8bd62100  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd62118  embedded object  (0x26c04519 <the hole>)
0xffff8bd62128  embedded object  (0x26c04241 <undefined>)
0xffff8bd62130  embedded object  (0x26c04241 <undefined>)
0xffff8bd62138  embedded object  (0x26c04241 <undefined>)
0xffff8bd62140  embedded object  (0x26c04241 <undefined>)
0xffff8bd62148  embedded object  (0x26c04241 <undefined>)
0xffff8bd62150  embedded object  (0x26c04241 <undefined>)
0xffff8bd62158  embedded object  (0x26c04241 <undefined>)
0xffff8bd62160  embedded object  (0x26c04241 <undefined>)
0xffff8bd62168  embedded object  (0x26c04241 <undefined>)
0xffff8bd62170  embedded object  (0x26c04241 <undefined>)
0xffff8bd62178  embedded object  (0x26c04241 <undefined>)
0xffff8bd62180  embedded object  (0x26c04241 <undefined>)
0xffff8bd62188  embedded object  (0x26c04241 <undefined>)
0xffff8bd62190  embedded object  (0x26c04241 <undefined>)
0xffff8bd62198  embedded object  (0x26c04241 <undefined>)
0xffff8bd621a0  embedded object  (0x26c04241 <undefined>)
0xffff8bd621a8  embedded object  (0x26c04241 <undefined>)
0xffff8bd621b0  embedded object  (0x26c04241 <undefined>)
0xffff8bd621b8  embedded object  (0x26c04241 <undefined>)
0xffff8bd621c0  embedded object  (0x26c04241 <undefined>)
0xffff8bd621c8  embedded object  (0x26c04241 <undefined>)
0xffff8bd621d0  embedded object  (0x26c04241 <undefined>)
0xffff8bd621d8  embedded object  (0x26c04241 <undefined>)
0xffff8bd621e0  embedded object  (0x26c04241 <undefined>)
0xffff8bd621e8  embedded object  (0x26c04241 <undefined>)
0xffff8bd621f0  embedded object  (0x26c04241 <undefined>)
0xffff8bd621f8  embedded object  (0x26c04241 <undefined>)
0xffff8bd62200  embedded object  (0x26c04241 <undefined>)
0xffff8bd6220c  embedded object  (0x26c04241 <undefined>)
0xffff8bd62218  embedded object  (0x26c04241 <undefined>)
0xffff8bd62224  embedded object  (0x26c04241 <undefined>)
0xffff8bd62230  embedded object  (0x26c04241 <undefined>)
0xffff8bd6223c  embedded object  (0x26c04241 <undefined>)
0xffff8bd62248  embedded object  (0x26c04241 <undefined>)
0xffff8bd6227c  code target (STUB)  (0xffff8bd06820)
0xffff8bd622a0  code target (STUB)  (0xffff8bd06260)
0xffff8bd622ac  code target (STUB)  (0xffff8bd068e0)
0xffff8bd622c0  constant pool (size 320)


kind = STUB
major_key = FastNewClosureStub
name = FastNewClosureStub
compiler = crankshaft
Instructions (size = 773)
0xffff8bd62480     0  movz x1, #0xe2c0
0xffff8bd62484     4  movk x1, #0x2cb8, lsl #16
0xffff8bd62488     8  ldp x3, x0, [x1]
0xffff8bd6248c    12  adds x16, x3, #0x48 (72)
0xffff8bd62490    16  ccmp x16, x0, #nzCv, lo
0xffff8bd62494    20  b.hi #+0x1bc (addr 0xffff8bd62650)
0xffff8bd62498    24  str x16, [x1]
0xffff8bd6249c    28  orr x3, x3, #0x1
0xffff8bd624a0    32  ldur x0, [cp, #39]
0xffff8bd624a4    36  movz x16, #0x2d7
0xffff8bd624a8    40  ldr x1, [x0, x16]
0xffff8bd624ac    44  stur x1, [x3, #-1]
0xffff8bd624b0    48  ldr x1, pc+528 (addr 0x0000ffff8bd626c0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd624b4    52  stur x1, [x3, #7]
0xffff8bd624b8    56  ldr x1, pc+528 (addr 0x0000ffff8bd626c8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd624bc    60  stur x1, [x3, #15]
0xffff8bd624c0    64  ldr x1, pc+528 (addr 0x0000ffff8bd626d0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd624c4    68  stur x1, [x3, #47]
0xffff8bd624c8    72  ldr x1, pc+528 (addr 0x0000ffff8bd626d8)    ;; object: 0x26c04519 <the hole>
0xffff8bd624cc    76  stur x1, [x3, #23]
0xffff8bd624d0    80  stur x2, [x3, #31]
0xffff8bd624d4    84  stur cp, [x3, #39]
0xffff8bd624d8    88  ldur x1, [x2, #23]
0xffff8bd624dc    92  movz x4, #0x0
0xffff8bd624e0    96  cmp x1, x4
0xffff8bd624e4   100  b.eq #+0x150 (addr 0xffff8bd62634)
0xffff8bd624e8   104  ldur w4, [x1, #11]
0xffff8bd624ec   108  subs w4, w4, #0x4 (4)
0xffff8bd624f0   112  b.vs #+0x230 (addr 0xffff8bd62720)
0xffff8bd624f4   116  mov x5, x4
0xffff8bd624f8   120  cmp w5, #0x1 (1)
0xffff8bd624fc   124  b.lt #+0xb4 (addr 0xffff8bd625b0)
0xffff8bd62500   128  add x4, x1, #0xf (15)
0xffff8bd62504   132  ldr x6, [x4, w5, sxtw #3]
0xffff8bd62508   136  ldur x4, [x6, #7]
0xffff8bd6250c   140  add x6, x1, #0x27 (39)
0xffff8bd62510   144  ldr x7, [x6, w5, sxtw #3]
0xffff8bd62514   148  add x6, x1, #0x17 (23)
0xffff8bd62518   152  ldr x8, [x6, w5, sxtw #3]
0xffff8bd6251c   156  ldur x6, [x8, #7]
0xffff8bd62520   160  cmp x0, x4
0xffff8bd62524   164  b.ne #+0x1c (addr 0xffff8bd62540)
0xffff8bd62528   168  mov x4, #0xffffffff00000000
0xffff8bd6252c   172  cmp x7, x4
0xffff8bd62530   176  b.ne #+0x10 (addr 0xffff8bd62540)
0xffff8bd62534   180  movz x4, #0x0
0xffff8bd62538   184  cmp x6, x4
0xffff8bd6253c   188  b.ne #+0xc (addr 0xffff8bd62548)
0xffff8bd62540   192  sub w5, w5, #0x4 (4)
0xffff8bd62544   196  b #-0x4c (addr 0xffff8bd624f8)
0xffff8bd62548   200  add x4, x1, #0x1f (31)
0xffff8bd6254c   204  ldr x7, [x4, w5, sxtw #3]
0xffff8bd62550   208  ldur x7, [x7, #7]
0xffff8bd62554   212  movz x4, #0x0
0xffff8bd62558   216  cmp x7, x4
0xffff8bd6255c   220  b.eq #+0x50 (addr 0xffff8bd625ac)
0xffff8bd62560   224  add x4, x6, #0x5f (95)
0xffff8bd62564   228  stur x4, [x3, #55]
0xffff8bd62568   232  stur x7, [x3, #47]
0xffff8bd6256c   236  movz x16, #0x557
0xffff8bd62570   240  ldr x4, [x0, x16]
0xffff8bd62574   244  stur x4, [x3, #63]
0xffff8bd62578   248  mov x4, x3
0xffff8bd6257c   252  movz x16, #0x557
0xffff8bd62580   256  str x4, [x0, x16]
0xffff8bd62584   260  add x6, x0, #0x557 (1367)
0xffff8bd62588   264  and x4, x0, #0xfffffffffff00000
0xffff8bd6258c   268  ldr x4, [x4, #8]
0xffff8bd62590   272  tbz w4, #2, #+0x18 (addr 0xffff8bd625a8)
0xffff8bd62594   276  sub csp, jssp, #0x8 (8)
0xffff8bd62598   280  str lr, [jssp, #-8]!
0xffff8bd6259c   284  ldr x16, pc+324 (addr 0x0000ffff8bd626e0)    ;; code: STUB, RecordWriteStub, minor: 71808
0xffff8bd625a0   288  blr x16
0xffff8bd625a4   292  ldr lr, [jssp], #8
0xffff8bd625a8   296  b #+0x8 (addr 0xffff8bd625b0)
0xffff8bd625ac   300  b #+0x184 (addr 0xffff8bd62730)
0xffff8bd625b0   304  cmp w5, #0x1 (1)
0xffff8bd625b4   308  b.ge #+0x94 (addr 0xffff8bd62648)
0xffff8bd625b8   312  ldur x1, [x1, #15]
0xffff8bd625bc   316  ldur x1, [x1, #7]
0xffff8bd625c0   320  movz x4, #0x0
0xffff8bd625c4   324  cmp x1, x4
0xffff8bd625c8   328  b.eq #+0x54 (addr 0xffff8bd6261c)
0xffff8bd625cc   332  add x1, x1, #0x5f (95)
0xffff8bd625d0   336  stur x1, [x3, #55]
0xffff8bd625d4   340  ldr x1, pc+276 (addr 0x0000ffff8bd626e8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd625d8   344  stur x1, [x3, #47]
0xffff8bd625dc   348  movz x16, #0x557
0xffff8bd625e0   352  ldr x1, [x0, x16]
0xffff8bd625e4   356  stur x1, [x3, #63]
0xffff8bd625e8   360  mov x1, x3
0xffff8bd625ec   364  movz x16, #0x557
0xffff8bd625f0   368  str x1, [x0, x16]
0xffff8bd625f4   372  add x2, x0, #0x557 (1367)
0xffff8bd625f8   376  and x1, x0, #0xfffffffffff00000
0xffff8bd625fc   380  ldr x1, [x1, #8]
0xffff8bd62600   384  tbz w1, #2, #+0x18 (addr 0xffff8bd62618)
0xffff8bd62604   388  sub csp, jssp, #0x8 (8)
0xffff8bd62608   392  str lr, [jssp, #-8]!
0xffff8bd6260c   396  ldr x16, pc+228 (addr 0x0000ffff8bd626f0)    ;; code: STUB, RecordWriteStub, minor: 67616
0xffff8bd62610   400  blr x16
0xffff8bd62614   404  ldr lr, [jssp], #8
0xffff8bd62618   408  b #+0x30 (addr 0xffff8bd62648)
0xffff8bd6261c   412  ldr x0, pc+220 (addr 0x0000ffff8bd626f8)    ;; object: 0x26c04241 <undefined>
0xffff8bd62620   416  stur x0, [x3, #63]
0xffff8bd62624   420  ldur x0, [x2, #15]
0xffff8bd62628   424  add x0, x0, #0x5f (95)
0xffff8bd6262c   428  stur x0, [x3, #55]
0xffff8bd62630   432  b #+0x18 (addr 0xffff8bd62648)
0xffff8bd62634   436  ldr x0, pc+204 (addr 0x0000ffff8bd62700)    ;; object: 0x26c04241 <undefined>
0xffff8bd62638   440  stur x0, [x3, #63]
0xffff8bd6263c   444  ldur x0, [x2, #15]
0xffff8bd62640   448  add x0, x0, #0x5f (95)
0xffff8bd62644   452  stur x0, [x3, #55]
0xffff8bd62648   456  mov x0, x3
0xffff8bd6264c   460  ret
0xffff8bd62650   464  sub csp, jssp, #0x10 (16)
0xffff8bd62654   468  stp fp, lr, [jssp, #-16]!
0xffff8bd62658   472  movz fp, #0xa00000000
0xffff8bd6265c   476  sub csp, jssp, #0x8 (8)
0xffff8bd62660   480  str fp, [jssp, #-8]!
0xffff8bd62664   484  add fp, jssp, #0x8 (8)
0xffff8bd62668   488  movz x3, #0x0
0xffff8bd6266c   492  mov x16, lr
0xffff8bd62670   496  ldr x17, pc+152 (addr 0x0000ffff8bd62708)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd62674   500  blr x17
0xffff8bd62678   504  movz x0, #0x4800000000
0xffff8bd6267c   508  movz x10, #0x0
0xffff8bd62680   512  sub csp, jssp, #0x10 (16)
0xffff8bd62684   516  stp x10, x0, [jssp, #-16]!
0xffff8bd62688   520  movz x0, #0x2
0xffff8bd6268c   524  movz x1, #0x5b88
0xffff8bd62690   528  movk x1, #0xe2, lsl #16
0xffff8bd62694   532  ldr x16, pc+124 (addr 0x0000ffff8bd62710)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd62698   536  blr x16
0xffff8bd6269c   540  str x0, [jssp, #24]
0xffff8bd626a0   544  ldr x16, pc+120 (addr 0x0000ffff8bd62718)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd626a4   548  blr x16
0xffff8bd626a8   552  ldr lr, [jssp, #16]
0xffff8bd626ac   556  ldp xzr, fp, [jssp], #24
0xffff8bd626b0   560  b #-0x210 (addr 0xffff8bd624a0)
0xffff8bd626b4   564  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff8bd626b8   568  d63f03e0       constant
0xffff8bd626bc   572  d503201f       constant
0xffff8bd626c0   576  26c04201       constant
0xffff8bd626c4   580  00000000       constant
0xffff8bd626c8   584  26c04201       constant
0xffff8bd626cc   588  00000000       constant
0xffff8bd626d0   592  26c04201       constant
0xffff8bd626d4   596  00000000       constant
0xffff8bd626d8   600  26c04519       constant
0xffff8bd626dc   604  00000000       constant
0xffff8bd626e0   608  8bd2d2c0       constant
0xffff8bd626e4   612  0000ffff       constant
0xffff8bd626e8   616  26c04201       constant
0xffff8bd626ec   620  00000000       constant
0xffff8bd626f0   624  8bd2daa0       constant
0xffff8bd626f4   628  0000ffff       constant
0xffff8bd626f8   632  26c04241       constant
0xffff8bd626fc   636  00000000       constant
0xffff8bd62700   640  26c04241       constant
0xffff8bd62704   644  00000000       constant
0xffff8bd62708   648  8bd06820       constant
0xffff8bd6270c   652  0000ffff       constant
0xffff8bd62710   656  8bd06260       constant
0xffff8bd62714   660  0000ffff       constant
0xffff8bd62718   664  8bd068e0       constant
0xffff8bd6271c   668  0000ffff       constant
0xffff8bd62720   672  movz x16, #0x0
0xffff8bd62724   676  sub csp, jssp, #0x10 (16)
0xffff8bd62728   680  stp fp, lr, [jssp, #-16]!
0xffff8bd6272c   684  bl #+0x14 (addr 0xffff8bd62740)
0xffff8bd62730   688  movz x16, #0x8
0xffff8bd62734   692  sub csp, jssp, #0x10 (16)
0xffff8bd62738   696  stp fp, lr, [jssp, #-16]!
0xffff8bd6273c   700  bl #+0x4 (addr 0xffff8bd62740)
0xffff8bd62740   704  movz x17, #0xa00000000
0xffff8bd62744   708  sub csp, jssp, #0x10 (16)
0xffff8bd62748   712  stp x17, cp, [jssp, #-16]!
0xffff8bd6274c   716  add fp, jssp, #0x10 (16)
0xffff8bd62750   720  ldr x17, pc+24 (addr 0x0000ffff8bd62768)    ;; lazy deoptimization bailout 0
0xffff8bd62754   724  add x17, x17, x16
0xffff8bd62758   728  br x17
0xffff8bd6275c   732  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd62760   736  d63f03e0       constant
0xffff8bd62764   740  d503201f       constant
0xffff8bd62768   744  8bb06000       constant
0xffff8bd6276c   748  0000ffff       constant


Safepoints (size = 21)
0xffff8bd6269c   540  000 | x2 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bd624b0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd624b8  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd624c0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd624c8  embedded object  (0x26c04519 <the hole>)
0xffff8bd6259c  code target (STUB)  (0xffff8bd2d2c0)
0xffff8bd625d4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd6260c  code target (STUB)  (0xffff8bd2daa0)
0xffff8bd6261c  embedded object  (0x26c04241 <undefined>)
0xffff8bd62634  embedded object  (0x26c04241 <undefined>)
0xffff8bd62670  code target (STUB)  (0xffff8bd06820)
0xffff8bd62694  code target (STUB)  (0xffff8bd06260)
0xffff8bd626a0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd626b4  constant pool (size 108)
0xffff8bd62750  runtime entry
0xffff8bd6275c  constant pool (size 20)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd64020     0  ldur x0, [x1, #7]
0xffff8bd64024     4  movz x16, #0x10f
0xffff8bd64028     8  ldr x0, [x0, x16]
0xffff8bd6402c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd640a0     0  ldur x0, [x1, #7]
0xffff8bd640a4     4  movz x16, #0x11f
0xffff8bd640a8     8  ldr x0, [x0, x16]
0xffff8bd640ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd64120     0  ldur x0, [x1, #7]
0xffff8bd64124     4  movz x16, #0x12f
0xffff8bd64128     8  ldr x0, [x0, x16]
0xffff8bd6412c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd641a0     0  ldur x0, [x1, #7]
0xffff8bd641a4     4  movz x16, #0x127
0xffff8bd641a8     8  ldr x0, [x0, x16]
0xffff8bd641ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd64220     0  ldur x0, [x1, #7]
0xffff8bd64224     4  movz x16, #0x137
0xffff8bd64228     8  ldr x0, [x0, x16]
0xffff8bd6422c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd642a0     0  ldur x0, [x1, #7]
0xffff8bd642a4     4  movz x16, #0x13f
0xffff8bd642a8     8  ldr x0, [x0, x16]
0xffff8bd642ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd64320     0  ldur x0, [x1, #7]
0xffff8bd64324     4  movz x16, #0x147
0xffff8bd64328     8  ldr x0, [x0, x16]
0xffff8bd6432c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 1301)
0xffff8bd646a0     0  movz x2, #0xe2c0
0xffff8bd646a4     4  movk x2, #0x2cb8, lsl #16
0xffff8bd646a8     8  ldp x3, x0, [x2]
0xffff8bd646ac    12  adds x16, x3, #0x200 (512)
0xffff8bd646b0    16  ccmp x16, x0, #nzCv, lo
0xffff8bd646b4    20  b.hi #+0x288 (addr 0xffff8bd6493c)
0xffff8bd646b8    24  str x16, [x2]
0xffff8bd646bc    28  orr x3, x3, #0x1
0xffff8bd646c0    32  ldr x0, pc+744 (addr 0x0000ffff8bd649a8)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd646c4    36  stur x0, [x3, #-1]
0xffff8bd646c8    40  movz x0, #0x3e00000000
0xffff8bd646cc    44  stur x0, [x3, #7]
0xffff8bd646d0    48  stur x1, [x3, #15]
0xffff8bd646d4    52  stur cp, [x3, #23]
0xffff8bd646d8    56  ldr x0, pc+728 (addr 0x0000ffff8bd649b0)    ;; object: 0x26c04519 <the hole>
0xffff8bd646dc    60  stur x0, [x3, #31]
0xffff8bd646e0    64  ldur x0, [cp, #39]
0xffff8bd646e4    68  stur x0, [x3, #39]
0xffff8bd646e8    72  ldr x0, pc+720 (addr 0x0000ffff8bd649b8)    ;; object: 0x26c04241 <undefined>
0xffff8bd646ec    76  stur x0, [x3, #47]
0xffff8bd646f0    80  ldr x0, pc+720 (addr 0x0000ffff8bd649c0)    ;; object: 0x26c04241 <undefined>
0xffff8bd646f4    84  stur x0, [x3, #55]
0xffff8bd646f8    88  ldr x0, pc+720 (addr 0x0000ffff8bd649c8)    ;; object: 0x26c04241 <undefined>
0xffff8bd646fc    92  stur x0, [x3, #63]
0xffff8bd64700    96  ldr x0, pc+720 (addr 0x0000ffff8bd649d0)    ;; object: 0x26c04241 <undefined>
0xffff8bd64704   100  stur x0, [x3, #71]
0xffff8bd64708   104  ldr x0, pc+720 (addr 0x0000ffff8bd649d8)    ;; object: 0x26c04241 <undefined>
0xffff8bd6470c   108  stur x0, [x3, #79]
0xffff8bd64710   112  ldr x0, pc+720 (addr 0x0000ffff8bd649e0)    ;; object: 0x26c04241 <undefined>
0xffff8bd64714   116  stur x0, [x3, #87]
0xffff8bd64718   120  ldr x0, pc+720 (addr 0x0000ffff8bd649e8)    ;; object: 0x26c04241 <undefined>
0xffff8bd6471c   124  stur x0, [x3, #95]
0xffff8bd64720   128  ldr x0, pc+720 (addr 0x0000ffff8bd649f0)    ;; object: 0x26c04241 <undefined>
0xffff8bd64724   132  stur x0, [x3, #103]
0xffff8bd64728   136  ldr x0, pc+720 (addr 0x0000ffff8bd649f8)    ;; object: 0x26c04241 <undefined>
0xffff8bd6472c   140  stur x0, [x3, #111]
0xffff8bd64730   144  ldr x0, pc+720 (addr 0x0000ffff8bd64a00)    ;; object: 0x26c04241 <undefined>
0xffff8bd64734   148  stur x0, [x3, #119]
0xffff8bd64738   152  ldr x0, pc+720 (addr 0x0000ffff8bd64a08)    ;; object: 0x26c04241 <undefined>
0xffff8bd6473c   156  stur x0, [x3, #127]
0xffff8bd64740   160  ldr x0, pc+720 (addr 0x0000ffff8bd64a10)    ;; object: 0x26c04241 <undefined>
0xffff8bd64744   164  stur x0, [x3, #135]
0xffff8bd64748   168  ldr x0, pc+720 (addr 0x0000ffff8bd64a18)    ;; object: 0x26c04241 <undefined>
0xffff8bd6474c   172  stur x0, [x3, #143]
0xffff8bd64750   176  ldr x0, pc+720 (addr 0x0000ffff8bd64a20)    ;; object: 0x26c04241 <undefined>
0xffff8bd64754   180  stur x0, [x3, #151]
0xffff8bd64758   184  ldr x0, pc+720 (addr 0x0000ffff8bd64a28)    ;; object: 0x26c04241 <undefined>
0xffff8bd6475c   188  stur x0, [x3, #159]
0xffff8bd64760   192  ldr x0, pc+720 (addr 0x0000ffff8bd64a30)    ;; object: 0x26c04241 <undefined>
0xffff8bd64764   196  stur x0, [x3, #167]
0xffff8bd64768   200  ldr x0, pc+720 (addr 0x0000ffff8bd64a38)    ;; object: 0x26c04241 <undefined>
0xffff8bd6476c   204  stur x0, [x3, #175]
0xffff8bd64770   208  ldr x0, pc+720 (addr 0x0000ffff8bd64a40)    ;; object: 0x26c04241 <undefined>
0xffff8bd64774   212  stur x0, [x3, #183]
0xffff8bd64778   216  ldr x0, pc+720 (addr 0x0000ffff8bd64a48)    ;; object: 0x26c04241 <undefined>
0xffff8bd6477c   220  stur x0, [x3, #191]
0xffff8bd64780   224  ldr x0, pc+720 (addr 0x0000ffff8bd64a50)    ;; object: 0x26c04241 <undefined>
0xffff8bd64784   228  stur x0, [x3, #199]
0xffff8bd64788   232  ldr x0, pc+720 (addr 0x0000ffff8bd64a58)    ;; object: 0x26c04241 <undefined>
0xffff8bd6478c   236  stur x0, [x3, #207]
0xffff8bd64790   240  ldr x0, pc+720 (addr 0x0000ffff8bd64a60)    ;; object: 0x26c04241 <undefined>
0xffff8bd64794   244  stur x0, [x3, #215]
0xffff8bd64798   248  ldr x0, pc+720 (addr 0x0000ffff8bd64a68)    ;; object: 0x26c04241 <undefined>
0xffff8bd6479c   252  stur x0, [x3, #223]
0xffff8bd647a0   256  ldr x0, pc+720 (addr 0x0000ffff8bd64a70)    ;; object: 0x26c04241 <undefined>
0xffff8bd647a4   260  stur x0, [x3, #231]
0xffff8bd647a8   264  ldr x0, pc+720 (addr 0x0000ffff8bd64a78)    ;; object: 0x26c04241 <undefined>
0xffff8bd647ac   268  stur x0, [x3, #239]
0xffff8bd647b0   272  ldr x0, pc+720 (addr 0x0000ffff8bd64a80)    ;; object: 0x26c04241 <undefined>
0xffff8bd647b4   276  stur x0, [x3, #247]
0xffff8bd647b8   280  ldr x0, pc+720 (addr 0x0000ffff8bd64a88)    ;; object: 0x26c04241 <undefined>
0xffff8bd647bc   284  stur x0, [x3, #255]
0xffff8bd647c0   288  ldr x0, pc+720 (addr 0x0000ffff8bd64a90)    ;; object: 0x26c04241 <undefined>
0xffff8bd647c4   292  movz x16, #0x107
0xffff8bd647c8   296  str x0, [x3, x16]
0xffff8bd647cc   300  ldr x0, pc+716 (addr 0x0000ffff8bd64a98)    ;; object: 0x26c04241 <undefined>
0xffff8bd647d0   304  movz x16, #0x10f
0xffff8bd647d4   308  str x0, [x3, x16]
0xffff8bd647d8   312  ldr x0, pc+712 (addr 0x0000ffff8bd64aa0)    ;; object: 0x26c04241 <undefined>
0xffff8bd647dc   316  movz x16, #0x117
0xffff8bd647e0   320  str x0, [x3, x16]
0xffff8bd647e4   324  ldr x0, pc+708 (addr 0x0000ffff8bd64aa8)    ;; object: 0x26c04241 <undefined>
0xffff8bd647e8   328  movz x16, #0x11f
0xffff8bd647ec   332  str x0, [x3, x16]
0xffff8bd647f0   336  ldr x0, pc+704 (addr 0x0000ffff8bd64ab0)    ;; object: 0x26c04241 <undefined>
0xffff8bd647f4   340  movz x16, #0x127
0xffff8bd647f8   344  str x0, [x3, x16]
0xffff8bd647fc   348  ldr x0, pc+700 (addr 0x0000ffff8bd64ab8)    ;; object: 0x26c04241 <undefined>
0xffff8bd64800   352  movz x16, #0x12f
0xffff8bd64804   356  str x0, [x3, x16]
0xffff8bd64808   360  ldr x0, pc+696 (addr 0x0000ffff8bd64ac0)    ;; object: 0x26c04241 <undefined>
0xffff8bd6480c   364  movz x16, #0x137
0xffff8bd64810   368  str x0, [x3, x16]
0xffff8bd64814   372  ldr x0, pc+692 (addr 0x0000ffff8bd64ac8)    ;; object: 0x26c04241 <undefined>
0xffff8bd64818   376  movz x16, #0x13f
0xffff8bd6481c   380  str x0, [x3, x16]
0xffff8bd64820   384  ldr x0, pc+688 (addr 0x0000ffff8bd64ad0)    ;; object: 0x26c04241 <undefined>
0xffff8bd64824   388  movz x16, #0x147
0xffff8bd64828   392  str x0, [x3, x16]
0xffff8bd6482c   396  ldr x0, pc+684 (addr 0x0000ffff8bd64ad8)    ;; object: 0x26c04241 <undefined>
0xffff8bd64830   400  movz x16, #0x14f
0xffff8bd64834   404  str x0, [x3, x16]
0xffff8bd64838   408  ldr x0, pc+680 (addr 0x0000ffff8bd64ae0)    ;; object: 0x26c04241 <undefined>
0xffff8bd6483c   412  movz x16, #0x157
0xffff8bd64840   416  str x0, [x3, x16]
0xffff8bd64844   420  ldr x0, pc+676 (addr 0x0000ffff8bd64ae8)    ;; object: 0x26c04241 <undefined>
0xffff8bd64848   424  movz x16, #0x15f
0xffff8bd6484c   428  str x0, [x3, x16]
0xffff8bd64850   432  ldr x0, pc+672 (addr 0x0000ffff8bd64af0)    ;; object: 0x26c04241 <undefined>
0xffff8bd64854   436  movz x16, #0x167
0xffff8bd64858   440  str x0, [x3, x16]
0xffff8bd6485c   444  ldr x0, pc+668 (addr 0x0000ffff8bd64af8)    ;; object: 0x26c04241 <undefined>
0xffff8bd64860   448  movz x16, #0x16f
0xffff8bd64864   452  str x0, [x3, x16]
0xffff8bd64868   456  ldr x0, pc+664 (addr 0x0000ffff8bd64b00)    ;; object: 0x26c04241 <undefined>
0xffff8bd6486c   460  movz x16, #0x177
0xffff8bd64870   464  str x0, [x3, x16]
0xffff8bd64874   468  ldr x0, pc+660 (addr 0x0000ffff8bd64b08)    ;; object: 0x26c04241 <undefined>
0xffff8bd64878   472  movz x16, #0x17f
0xffff8bd6487c   476  str x0, [x3, x16]
0xffff8bd64880   480  ldr x0, pc+656 (addr 0x0000ffff8bd64b10)    ;; object: 0x26c04241 <undefined>
0xffff8bd64884   484  movz x16, #0x187
0xffff8bd64888   488  str x0, [x3, x16]
0xffff8bd6488c   492  ldr x0, pc+652 (addr 0x0000ffff8bd64b18)    ;; object: 0x26c04241 <undefined>
0xffff8bd64890   496  movz x16, #0x18f
0xffff8bd64894   500  str x0, [x3, x16]
0xffff8bd64898   504  ldr x0, pc+648 (addr 0x0000ffff8bd64b20)    ;; object: 0x26c04241 <undefined>
0xffff8bd6489c   508  movz x16, #0x197
0xffff8bd648a0   512  str x0, [x3, x16]
0xffff8bd648a4   516  ldr x0, pc+644 (addr 0x0000ffff8bd64b28)    ;; object: 0x26c04241 <undefined>
0xffff8bd648a8   520  movz x16, #0x19f
0xffff8bd648ac   524  str x0, [x3, x16]
0xffff8bd648b0   528  ldr x0, pc+640 (addr 0x0000ffff8bd64b30)    ;; object: 0x26c04241 <undefined>
0xffff8bd648b4   532  movz x16, #0x1a7
0xffff8bd648b8   536  str x0, [x3, x16]
0xffff8bd648bc   540  ldr x0, pc+636 (addr 0x0000ffff8bd64b38)    ;; object: 0x26c04241 <undefined>
0xffff8bd648c0   544  movz x16, #0x1af
0xffff8bd648c4   548  str x0, [x3, x16]
0xffff8bd648c8   552  ldr x0, pc+632 (addr 0x0000ffff8bd64b40)    ;; object: 0x26c04241 <undefined>
0xffff8bd648cc   556  movz x16, #0x1b7
0xffff8bd648d0   560  str x0, [x3, x16]
0xffff8bd648d4   564  ldr x0, pc+628 (addr 0x0000ffff8bd64b48)    ;; object: 0x26c04241 <undefined>
0xffff8bd648d8   568  movz x16, #0x1bf
0xffff8bd648dc   572  str x0, [x3, x16]
0xffff8bd648e0   576  ldr x0, pc+624 (addr 0x0000ffff8bd64b50)    ;; object: 0x26c04241 <undefined>
0xffff8bd648e4   580  movz x16, #0x1c7
0xffff8bd648e8   584  str x0, [x3, x16]
0xffff8bd648ec   588  ldr x0, pc+620 (addr 0x0000ffff8bd64b58)    ;; object: 0x26c04241 <undefined>
0xffff8bd648f0   592  movz x16, #0x1cf
0xffff8bd648f4   596  str x0, [x3, x16]
0xffff8bd648f8   600  ldr x0, pc+616 (addr 0x0000ffff8bd64b60)    ;; object: 0x26c04241 <undefined>
0xffff8bd648fc   604  movz x16, #0x1d7
0xffff8bd64900   608  str x0, [x3, x16]
0xffff8bd64904   612  ldr x0, pc+612 (addr 0x0000ffff8bd64b68)    ;; object: 0x26c04241 <undefined>
0xffff8bd64908   616  movz x16, #0x1df
0xffff8bd6490c   620  str x0, [x3, x16]
0xffff8bd64910   624  ldr x0, pc+608 (addr 0x0000ffff8bd64b70)    ;; object: 0x26c04241 <undefined>
0xffff8bd64914   628  movz x16, #0x1e7
0xffff8bd64918   632  str x0, [x3, x16]
0xffff8bd6491c   636  ldr x0, pc+604 (addr 0x0000ffff8bd64b78)    ;; object: 0x26c04241 <undefined>
0xffff8bd64920   640  movz x16, #0x1ef
0xffff8bd64924   644  str x0, [x3, x16]
0xffff8bd64928   648  ldr x0, pc+600 (addr 0x0000ffff8bd64b80)    ;; object: 0x26c04241 <undefined>
0xffff8bd6492c   652  movz x16, #0x1f7
0xffff8bd64930   656  str x0, [x3, x16]
0xffff8bd64934   660  mov x0, x3
0xffff8bd64938   664  ret
0xffff8bd6493c   668  sub csp, jssp, #0x10 (16)
0xffff8bd64940   672  stp fp, lr, [jssp, #-16]!
0xffff8bd64944   676  movz fp, #0xa00000000
0xffff8bd64948   680  sub csp, jssp, #0x8 (8)
0xffff8bd6494c   684  str fp, [jssp, #-8]!
0xffff8bd64950   688  add fp, jssp, #0x8 (8)
0xffff8bd64954   692  movz x3, #0x0
0xffff8bd64958   696  mov x16, lr
0xffff8bd6495c   700  ldr x17, pc+556 (addr 0x0000ffff8bd64b88)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd64960   704  blr x17
0xffff8bd64964   708  movz x0, #0x20000000000
0xffff8bd64968   712  movz x10, #0x0
0xffff8bd6496c   716  sub csp, jssp, #0x10 (16)
0xffff8bd64970   720  stp x10, x0, [jssp, #-16]!
0xffff8bd64974   724  movz x0, #0x2
0xffff8bd64978   728  movz x1, #0x5b88
0xffff8bd6497c   732  movk x1, #0xe2, lsl #16
0xffff8bd64980   736  ldr x16, pc+528 (addr 0x0000ffff8bd64b90)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd64984   740  blr x16
0xffff8bd64988   744  str x0, [jssp, #24]
0xffff8bd6498c   748  ldr x16, pc+524 (addr 0x0000ffff8bd64b98)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd64990   752  blr x16
0xffff8bd64994   756  ldr lr, [jssp, #16]
0xffff8bd64998   760  ldp xzr, fp, [jssp], #24
0xffff8bd6499c   764  b #-0x2dc (addr 0xffff8bd646c0)
0xffff8bd649a0   768  58000fff       constant pool begin (num_const = 127)    ;; constant pool
0xffff8bd649a4   772  d63f03e0       constant
0xffff8bd649a8   776  5f506149       constant
0xffff8bd649ac   780  00000000       constant
0xffff8bd649b0   784  26c04519       constant
0xffff8bd649b4   788  00000000       constant
0xffff8bd649b8   792  26c04241       constant
0xffff8bd649bc   796  00000000       constant
0xffff8bd649c0   800  26c04241       constant
0xffff8bd649c4   804  00000000       constant
0xffff8bd649c8   808  26c04241       constant
0xffff8bd649cc   812  00000000       constant
0xffff8bd649d0   816  26c04241       constant
0xffff8bd649d4   820  00000000       constant
0xffff8bd649d8   824  26c04241       constant
0xffff8bd649dc   828  00000000       constant
0xffff8bd649e0   832  26c04241       constant
0xffff8bd649e4   836  00000000       constant
0xffff8bd649e8   840  26c04241       constant
0xffff8bd649ec   844  00000000       constant
0xffff8bd649f0   848  26c04241       constant
0xffff8bd649f4   852  00000000       constant
0xffff8bd649f8   856  26c04241       constant
0xffff8bd649fc   860  00000000       constant
0xffff8bd64a00   864  26c04241       constant
0xffff8bd64a04   868  00000000       constant
0xffff8bd64a08   872  26c04241       constant
0xffff8bd64a0c   876  00000000       constant
0xffff8bd64a10   880  26c04241       constant
0xffff8bd64a14   884  00000000       constant
0xffff8bd64a18   888  26c04241       constant
0xffff8bd64a1c   892  00000000       constant
0xffff8bd64a20   896  26c04241       constant
0xffff8bd64a24   900  00000000       constant
0xffff8bd64a28   904  26c04241       constant
0xffff8bd64a2c   908  00000000       constant
0xffff8bd64a30   912  26c04241       constant
0xffff8bd64a34   916  00000000       constant
0xffff8bd64a38   920  26c04241       constant
0xffff8bd64a3c   924  00000000       constant
0xffff8bd64a40   928  26c04241       constant
0xffff8bd64a44   932  00000000       constant
0xffff8bd64a48   936  26c04241       constant
0xffff8bd64a4c   940  00000000       constant
0xffff8bd64a50   944  26c04241       constant
0xffff8bd64a54   948  00000000       constant
0xffff8bd64a58   952  26c04241       constant
0xffff8bd64a5c   956  00000000       constant
0xffff8bd64a60   960  26c04241       constant
0xffff8bd64a64   964  00000000       constant
0xffff8bd64a68   968  26c04241       constant
0xffff8bd64a6c   972  00000000       constant
0xffff8bd64a70   976  26c04241       constant
0xffff8bd64a74   980  00000000       constant
0xffff8bd64a78   984  26c04241       constant
0xffff8bd64a7c   988  00000000       constant
0xffff8bd64a80   992  26c04241       constant
0xffff8bd64a84   996  00000000       constant
0xffff8bd64a88  1000  26c04241       constant
0xffff8bd64a8c  1004  00000000       constant
0xffff8bd64a90  1008  26c04241       constant
0xffff8bd64a94  1012  00000000       constant
0xffff8bd64a98  1016  26c04241       constant
0xffff8bd64a9c  1020  00000000       constant
0xffff8bd64aa0  1024  26c04241       constant
0xffff8bd64aa4  1028  00000000       constant
0xffff8bd64aa8  1032  26c04241       constant
0xffff8bd64aac  1036  00000000       constant
0xffff8bd64ab0  1040  26c04241       constant
0xffff8bd64ab4  1044  00000000       constant
0xffff8bd64ab8  1048  26c04241       constant
0xffff8bd64abc  1052  00000000       constant
0xffff8bd64ac0  1056  26c04241       constant
0xffff8bd64ac4  1060  00000000       constant
0xffff8bd64ac8  1064  26c04241       constant
0xffff8bd64acc  1068  00000000       constant
0xffff8bd64ad0  1072  26c04241       constant
0xffff8bd64ad4  1076  00000000       constant
0xffff8bd64ad8  1080  26c04241       constant
0xffff8bd64adc  1084  00000000       constant
0xffff8bd64ae0  1088  26c04241       constant
0xffff8bd64ae4  1092  00000000       constant
0xffff8bd64ae8  1096  26c04241       constant
0xffff8bd64aec  1100  00000000       constant
0xffff8bd64af0  1104  26c04241       constant
0xffff8bd64af4  1108  00000000       constant
0xffff8bd64af8  1112  26c04241       constant
0xffff8bd64afc  1116  00000000       constant
0xffff8bd64b00  1120  26c04241       constant
0xffff8bd64b04  1124  00000000       constant
0xffff8bd64b08  1128  26c04241       constant
0xffff8bd64b0c  1132  00000000       constant
0xffff8bd64b10  1136  26c04241       constant
0xffff8bd64b14  1140  00000000       constant
0xffff8bd64b18  1144  26c04241       constant
0xffff8bd64b1c  1148  00000000       constant
0xffff8bd64b20  1152  26c04241       constant
0xffff8bd64b24  1156  00000000       constant
0xffff8bd64b28  1160  26c04241       constant
0xffff8bd64b2c  1164  00000000       constant
0xffff8bd64b30  1168  26c04241       constant
0xffff8bd64b34  1172  00000000       constant
0xffff8bd64b38  1176  26c04241       constant
0xffff8bd64b3c  1180  00000000       constant
0xffff8bd64b40  1184  26c04241       constant
0xffff8bd64b44  1188  00000000       constant
0xffff8bd64b48  1192  26c04241       constant
0xffff8bd64b4c  1196  00000000       constant
0xffff8bd64b50  1200  26c04241       constant
0xffff8bd64b54  1204  00000000       constant
0xffff8bd64b58  1208  26c04241       constant
0xffff8bd64b5c  1212  00000000       constant
0xffff8bd64b60  1216  26c04241       constant
0xffff8bd64b64  1220  00000000       constant
0xffff8bd64b68  1224  26c04241       constant
0xffff8bd64b6c  1228  00000000       constant
0xffff8bd64b70  1232  26c04241       constant
0xffff8bd64b74  1236  00000000       constant
0xffff8bd64b78  1240  26c04241       constant
0xffff8bd64b7c  1244  00000000       constant
0xffff8bd64b80  1248  26c04241       constant
0xffff8bd64b84  1252  00000000       constant
0xffff8bd64b88  1256  8bd06820       constant
0xffff8bd64b8c  1260  0000ffff       constant
0xffff8bd64b90  1264  8bd06260       constant
0xffff8bd64b94  1268  0000ffff       constant
0xffff8bd64b98  1272  8bd068e0       constant
0xffff8bd64b9c  1276  0000ffff       constant


Safepoints (size = 21)
0xffff8bd64988   744  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 69)
0xffff8bd646c0  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd646d8  embedded object  (0x26c04519 <the hole>)
0xffff8bd646e8  embedded object  (0x26c04241 <undefined>)
0xffff8bd646f0  embedded object  (0x26c04241 <undefined>)
0xffff8bd646f8  embedded object  (0x26c04241 <undefined>)
0xffff8bd64700  embedded object  (0x26c04241 <undefined>)
0xffff8bd64708  embedded object  (0x26c04241 <undefined>)
0xffff8bd64710  embedded object  (0x26c04241 <undefined>)
0xffff8bd64718  embedded object  (0x26c04241 <undefined>)
0xffff8bd64720  embedded object  (0x26c04241 <undefined>)
0xffff8bd64728  embedded object  (0x26c04241 <undefined>)
0xffff8bd64730  embedded object  (0x26c04241 <undefined>)
0xffff8bd64738  embedded object  (0x26c04241 <undefined>)
0xffff8bd64740  embedded object  (0x26c04241 <undefined>)
0xffff8bd64748  embedded object  (0x26c04241 <undefined>)
0xffff8bd64750  embedded object  (0x26c04241 <undefined>)
0xffff8bd64758  embedded object  (0x26c04241 <undefined>)
0xffff8bd64760  embedded object  (0x26c04241 <undefined>)
0xffff8bd64768  embedded object  (0x26c04241 <undefined>)
0xffff8bd64770  embedded object  (0x26c04241 <undefined>)
0xffff8bd64778  embedded object  (0x26c04241 <undefined>)
0xffff8bd64780  embedded object  (0x26c04241 <undefined>)
0xffff8bd64788  embedded object  (0x26c04241 <undefined>)
0xffff8bd64790  embedded object  (0x26c04241 <undefined>)
0xffff8bd64798  embedded object  (0x26c04241 <undefined>)
0xffff8bd647a0  embedded object  (0x26c04241 <undefined>)
0xffff8bd647a8  embedded object  (0x26c04241 <undefined>)
0xffff8bd647b0  embedded object  (0x26c04241 <undefined>)
0xffff8bd647b8  embedded object  (0x26c04241 <undefined>)
0xffff8bd647c0  embedded object  (0x26c04241 <undefined>)
0xffff8bd647cc  embedded object  (0x26c04241 <undefined>)
0xffff8bd647d8  embedded object  (0x26c04241 <undefined>)
0xffff8bd647e4  embedded object  (0x26c04241 <undefined>)
0xffff8bd647f0  embedded object  (0x26c04241 <undefined>)
0xffff8bd647fc  embedded object  (0x26c04241 <undefined>)
0xffff8bd64808  embedded object  (0x26c04241 <undefined>)
0xffff8bd64814  embedded object  (0x26c04241 <undefined>)
0xffff8bd64820  embedded object  (0x26c04241 <undefined>)
0xffff8bd6482c  embedded object  (0x26c04241 <undefined>)
0xffff8bd64838  embedded object  (0x26c04241 <undefined>)
0xffff8bd64844  embedded object  (0x26c04241 <undefined>)
0xffff8bd64850  embedded object  (0x26c04241 <undefined>)
0xffff8bd6485c  embedded object  (0x26c04241 <undefined>)
0xffff8bd64868  embedded object  (0x26c04241 <undefined>)
0xffff8bd64874  embedded object  (0x26c04241 <undefined>)
0xffff8bd64880  embedded object  (0x26c04241 <undefined>)
0xffff8bd6488c  embedded object  (0x26c04241 <undefined>)
0xffff8bd64898  embedded object  (0x26c04241 <undefined>)
0xffff8bd648a4  embedded object  (0x26c04241 <undefined>)
0xffff8bd648b0  embedded object  (0x26c04241 <undefined>)
0xffff8bd648bc  embedded object  (0x26c04241 <undefined>)
0xffff8bd648c8  embedded object  (0x26c04241 <undefined>)
0xffff8bd648d4  embedded object  (0x26c04241 <undefined>)
0xffff8bd648e0  embedded object  (0x26c04241 <undefined>)
0xffff8bd648ec  embedded object  (0x26c04241 <undefined>)
0xffff8bd648f8  embedded object  (0x26c04241 <undefined>)
0xffff8bd64904  embedded object  (0x26c04241 <undefined>)
0xffff8bd64910  embedded object  (0x26c04241 <undefined>)
0xffff8bd6491c  embedded object  (0x26c04241 <undefined>)
0xffff8bd64928  embedded object  (0x26c04241 <undefined>)
0xffff8bd6495c  code target (STUB)  (0xffff8bd06820)
0xffff8bd64980  code target (STUB)  (0xffff8bd06260)
0xffff8bd6498c  code target (STUB)  (0xffff8bd068e0)
0xffff8bd649a0  constant pool (size 512)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bd67340     0  ldur x0, [x1, #7]
0xffff8bd67344     4  ldur x0, [x0, #55]
0xffff8bd67348     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bd673c0     0  ldur x0, [x1, #7]
0xffff8bd673c4     4  ldur x0, [x0, #39]
0xffff8bd673c8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bd67440     0  ldur x0, [x1, #7]
0xffff8bd67444     4  ldur x0, [x0, #47]
0xffff8bd67448     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bd674c0     0  ldur x0, [x1, #7]
0xffff8bd674c4     4  ldur x0, [x0, #63]
0xffff8bd674c8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bd67540     0  ldur x0, [x1, #7]
0xffff8bd67544     4  ldur x0, [x0, #127]
0xffff8bd67548     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bd675c0     0  ldur x0, [x1, #7]
0xffff8bd675c4     4  ldur x0, [x0, #167]
0xffff8bd675c8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd67640     0  ldur x0, [x1, #-1]
0xffff8bd67644     4  ldur x0, [x0, #47]
0xffff8bd67648     8  movz x16, #0x617
0xffff8bd6764c    12  ldr x0, [x0, x16]
0xffff8bd67650    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd676c0     0  ldur x0, [x1, #7]
0xffff8bd676c4     4  movz x16, #0x157
0xffff8bd676c8     8  ldr x0, [x0, x16]
0xffff8bd676cc    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = INTERNALIZED_STRING*INTERNALIZED_STRING -> INTERNALIZED_STRING
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 184)
0xffff8bd67de0     0  and x16, x1, x0
0xffff8bd67de4     4  tbz w16, #0, #+0x2c (addr 0xffff8bd67e10)
0xffff8bd67de8     8  ldur x11, [x1, #-1]
0xffff8bd67dec    12  ldur x10, [x0, #-1]
0xffff8bd67df0    16  ldrb w11, [x11, #11]
0xffff8bd67df4    20  ldrb w10, [x10, #11]
0xffff8bd67df8    24  orr x12, x11, x10
0xffff8bd67dfc    28  tst x12, #0xc0
0xffff8bd67e00    32  b.ne #+0x10 (addr 0xffff8bd67e10)
0xffff8bd67e04    36  cmp x1, x0
0xffff8bd67e08    40  cset x0, ne
0xffff8bd67e0c    44  ret
0xffff8bd67e10    48  movz x16, #0xc00000000
0xffff8bd67e14    52  sub csp, jssp, #0x10 (16)
0xffff8bd67e18    56  stp fp, lr, [jssp, #-16]!
0xffff8bd67e1c    60  sub csp, jssp, #0x10 (16)
0xffff8bd67e20    64  str x16, [jssp, #-8]!
0xffff8bd67e24    68  ldr x17, pc+92 (addr 0x0000ffff8bd67e80)    ;; object: 0xffff8bd67d81 <Code: COMPARE_IC>
0xffff8bd67e28    72  sub csp, jssp, #0x10 (16)
0xffff8bd67e2c    76  str x17, [jssp, #-8]!
0xffff8bd67e30    80  add fp, jssp, #0x10 (16)
0xffff8bd67e34    84  sub csp, jssp, #0x18 (24)
0xffff8bd67e38    88  stp lr, x0, [jssp, #-24]!
0xffff8bd67e3c    92  str x1, [jssp, #16]
0xffff8bd67e40    96  movz x10, #0x2f00000000
0xffff8bd67e44   100  sub csp, jssp, #0x18 (24)
0xffff8bd67e48   104  stp x10, x0, [jssp, #-24]!
0xffff8bd67e4c   108  str x1, [jssp, #16]
0xffff8bd67e50   112  movz x0, #0x3
0xffff8bd67e54   116  ldr x1, pc+52 (addr 0x0000ffff8bd67e88)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd67e58   120  ldr x16, pc+56 (addr 0x0000ffff8bd67e90)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd67e5c   124  blr x16
0xffff8bd67e60   128  add x11, x0, #0x5f (95)
0xffff8bd67e64   132  ldr x1, [jssp, #16]
0xffff8bd67e68   136  ldp lr, x0, [jssp], #24
0xffff8bd67e6c   140  mov jssp, fp
0xffff8bd67e70   144  ldp fp, lr, [jssp], #16
0xffff8bd67e74   148  br x11
0xffff8bd67e78   152  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd67e7c   156  d63f03e0       constant
0xffff8bd67e80   160  8bd67d81       constant
0xffff8bd67e84   164  0000ffff       constant
0xffff8bd67e88   168  00c8a980       constant
0xffff8bd67e8c   172  00000000       constant
0xffff8bd67e90   176  8bd06060       constant
0xffff8bd67e94   180  0000ffff       constant


RelocInfo (size = 12)
0xffff8bd67e24  embedded object  (0xffff8bd67d81 <Code: COMPARE_IC>)
0xffff8bd67e54  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd67e58  code target (STUB)  (0xffff8bd06060)
0xffff8bd67e78  constant pool (size 32)


kind = STUB
major_key = DirectCEntryStub
name = DirectCEntryStub
compiler = unknown
Instructions (size = 16)
0xffff8bd68200     0  str lr, [csp]
0xffff8bd68204     4  blr x10
0xffff8bd68208     8  ldr lr, [csp]
0xffff8bd6820c    12  ret


RelocInfo (size = 0)


kind = STUB
major_key = CallApiGetterStub
name = CallApiGetterStub
compiler = unknown
Instructions (size = 440)
0xffff8bd68280     0  mov x0, jssp
0xffff8bd68284     4  add x1, x0, #0x8 (8)
0xffff8bd68288     8  sub csp, jssp, #0x10 (16)
0xffff8bd6828c    12  stp fp, lr, [jssp, #-16]!
0xffff8bd68290    16  mov fp, jssp
0xffff8bd68294    20  movz x10, #0x300000000
0xffff8bd68298    24  sub csp, jssp, #0x8 (8)
0xffff8bd6829c    28  str x10, [jssp, #-8]!
0xffff8bd682a0    32  sub csp, jssp, #0x8 (8)
0xffff8bd682a4    36  str xzr, [jssp, #-8]!
0xffff8bd682a8    40  ldr x10, pc+288 (addr 0x0000ffff8bd683c8)    ;; object: 0xffff8bd68221 <Code: STUB>
0xffff8bd682ac    44  sub csp, jssp, #0x8 (8)
0xffff8bd682b0    48  str x10, [jssp, #-8]!
0xffff8bd682b4    52  ldr x10, pc+284 (addr 0x0000ffff8bd683d0)    ;; external reference (Isolate::c_entry_fp_address)
0xffff8bd682b8    56  str fp, [x10]
0xffff8bd682bc    60  ldr x10, pc+284 (addr 0x0000ffff8bd683d8)    ;; external reference (Isolate::context_address)
0xffff8bd682c0    64  str cp, [x10]
0xffff8bd682c4    68  sub csp, jssp, #0x30 (48)
0xffff8bd682c8    72  sub jssp, jssp, #0x30 (48)
0xffff8bd682cc    76  and csp, jssp, #0xfffffffffffffff0
0xffff8bd682d0    80  add x10, csp, #0x8 (8)
0xffff8bd682d4    84  stur x10, [fp, #-16]
0xffff8bd682d8    88  str x1, [csp, #8]
0xffff8bd682dc    92  add x1, csp, #0x8 (8)
0xffff8bd682e0    96  ldr x10, pc+256 (addr 0x0000ffff8bd683e0)    ;; external reference (CpuProfiler::is_profiling)
0xffff8bd682e4   100  ldrb w10, [x10]
0xffff8bd682e8   104  cbz w10, #+0xc (addr 0xffff8bd682f4)
0xffff8bd682ec   108  ldr x3, pc+252 (addr 0x0000ffff8bd683e8)    ;; external reference (InvokeAccessorGetterCallback)
0xffff8bd682f0   112  b #+0x8 (addr 0xffff8bd682f8)
0xffff8bd682f4   116  mov x3, x2
0xffff8bd682f8   120  str x19, [csp, #16]
0xffff8bd682fc   124  str x20, [csp, #24]
0xffff8bd68300   128  str x21, [csp, #32]
0xffff8bd68304   132  str x22, [csp, #40]
0xffff8bd68308   136  ldr x22, pc+232 (addr 0x0000ffff8bd683f0)    ;; external reference (HandleScope::next)
0xffff8bd6830c   140  ldr x19, [x22]
0xffff8bd68310   144  ldr x20, [x22, #8]
0xffff8bd68314   148  ldr w21, [x22, #16]
0xffff8bd68318   152  add w21, w21, #0x1 (1)
0xffff8bd6831c   156  str w21, [x22, #16]
0xffff8bd68320   160  ldr lr, pc+216 (addr 0x0000ffff8bd683f8)    ;; code: STUB, DirectCEntryStub, minor: 0
0xffff8bd68324   164  mov x10, x3
0xffff8bd68328   168  blr lr
0xffff8bd6832c   172  ldr x0, [fp, #56]
0xffff8bd68330   176  str x19, [x22]
0xffff8bd68334   180  sub w21, w21, #0x1 (1)
0xffff8bd68338   184  str w21, [x22, #16]
0xffff8bd6833c   188  ldr x1, [x22, #8]
0xffff8bd68340   192  cmp x20, x1
0xffff8bd68344   196  b.ne #+0x58 (addr 0xffff8bd6839c)
0xffff8bd68348   200  ldr x19, [csp, #16]
0xffff8bd6834c   204  ldr x20, [csp, #24]
0xffff8bd68350   208  ldr x21, [csp, #32]
0xffff8bd68354   212  ldr x22, [csp, #40]
0xffff8bd68358   216  ldr x1, pc+168 (addr 0x0000ffff8bd68400)    ;; external reference (Isolate::context_address)
0xffff8bd6835c   220  ldr cp, [x1]
0xffff8bd68360   224  ldr x1, pc+168 (addr 0x0000ffff8bd68408)    ;; external reference (Isolate::c_entry_fp_address)
0xffff8bd68364   228  str xzr, [x1]
0xffff8bd68368   232  mov jssp, fp
0xffff8bd6836c   236  ldp fp, lr, [jssp], #16
0xffff8bd68370   240  ldr x5, pc+160 (addr 0x0000ffff8bd68410)    ;; external reference (Isolate::scheduled_exception)
0xffff8bd68374   244  ldr x5, [x5]
0xffff8bd68378   248  ldr x16, [x26, #88]
0xffff8bd6837c   252  cmp x5, x16
0xffff8bd68380   256  b.ne #+0xc (addr 0xffff8bd6838c)
0xffff8bd68384   260  add jssp, jssp, #0x40 (64)
0xffff8bd68388   264  ret
0xffff8bd6838c   268  movz x0, #0x0
0xffff8bd68390   272  ldr x1, pc+136 (addr 0x0000ffff8bd68418)    ;; external reference (Runtime::PromoteScheduledException)
0xffff8bd68394   276  ldr x16, pc+140 (addr 0x0000ffff8bd68420)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd68398   280  br x16
0xffff8bd6839c   284  str x20, [x22, #8]
0xffff8bd683a0   288  mov x19, x0
0xffff8bd683a4   292  ldr x0, pc+132 (addr 0x0000ffff8bd68428)    ;; external reference (isolate)
0xffff8bd683a8   296  ldr x16, pc+136 (addr 0x0000ffff8bd68430)    ;; external reference (HandleScope::DeleteExtensions)
0xffff8bd683ac   300  and csp, jssp, #0xfffffffffffffff0
0xffff8bd683b0   304  blr x16
0xffff8bd683b4   308  mov x0, x19
0xffff8bd683b8   312  b #-0x70 (addr 0xffff8bd68348)
0xffff8bd683bc   316  580003df       constant pool begin (num_const = 30)    ;; constant pool
0xffff8bd683c0   320  d63f03e0       constant
0xffff8bd683c4   324  d503201f       constant
0xffff8bd683c8   328  8bd68221       constant
0xffff8bd683cc   332  0000ffff       constant
0xffff8bd683d0   336  2cb8edf8       constant
0xffff8bd683d4   340  00000000       constant
0xffff8bd683d8   344  2cb8ed90       constant
0xffff8bd683dc   348  00000000       constant
0xffff8bd683e0   352  2cbb85e1       constant
0xffff8bd683e4   356  00000000       constant
0xffff8bd683e8   360  009274e0       constant
0xffff8bd683ec   364  00000000       constant
0xffff8bd683f0   368  2cb8ee70       constant
0xffff8bd683f4   372  00000000       constant
0xffff8bd683f8   376  8bd68200       constant
0xffff8bd683fc   380  0000ffff       constant
0xffff8bd68400   384  2cb8ed90       constant
0xffff8bd68404   388  00000000       constant
0xffff8bd68408   392  2cb8edf8       constant
0xffff8bd6840c   396  00000000       constant
0xffff8bd68410   400  2cb8ede0       constant
0xffff8bd68414   404  00000000       constant
0xffff8bd68418   408  00e234b8       constant
0xffff8bd6841c   412  00000000       constant
0xffff8bd68420   416  8bd06060       constant
0xffff8bd68424   420  0000ffff       constant
0xffff8bd68428   424  2cb8d2d0       constant
0xffff8bd6842c   428  00000000       constant
0xffff8bd68430   432  00c05c20       constant
0xffff8bd68434   436  00000000       constant


RelocInfo (size = 31)
0xffff8bd682a8  embedded object  (0xffff8bd68221 <Code: STUB>)
0xffff8bd682b4  external reference (Isolate::c_entry_fp_address)  (0x2cb8edf8)
0xffff8bd682bc  external reference (Isolate::context_address)  (0x2cb8ed90)
0xffff8bd682e0  external reference (CpuProfiler::is_profiling)  (0x2cbb85e1)
0xffff8bd682ec  external reference (InvokeAccessorGetterCallback)  (0x9274e0)
0xffff8bd68308  external reference (HandleScope::next)  (0x2cb8ee70)
0xffff8bd68320  code target (STUB)  (0xffff8bd68200)
0xffff8bd68358  external reference (Isolate::context_address)  (0x2cb8ed90)
0xffff8bd68360  external reference (Isolate::c_entry_fp_address)  (0x2cb8edf8)
0xffff8bd68370  external reference (Isolate::scheduled_exception)  (0x2cb8ede0)
0xffff8bd68390  external reference (Runtime::PromoteScheduledException)  (0xe234b8)
0xffff8bd68394  code target (STUB)  (0xffff8bd06060)
0xffff8bd683a4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd683a8  external reference (HandleScope::DeleteExtensions)  (0xc05c20)
0xffff8bd683bc  constant pool (size 124)


kind = HANDLER
major_key = <NoCache>Stub
name = name
compiler = unknown
Instructions (size = 184)
0xffff8bd684a0     0  sub csp, jssp, #0x8 (8)
0xffff8bd684a4     4  str x3, [jssp, #-8]!
0xffff8bd684a8     8  sub csp, jssp, #0x8 (8)
0xffff8bd684ac    12  str x0, [jssp, #-8]!
0xffff8bd684b0    16  ldr x0, pc+120 (addr 0x0000ffff8bd68528)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bd684b4    20  ldur x0, [x0, #7]
0xffff8bd684b8    24  cmp x0, #0x0 (0)
0xffff8bd684bc    28  b.ne #+0x8 (addr 0xffff8bd684c4)
0xffff8bd684c0    32  b #+0x14 (addr 0xffff8bd684d4)
0xffff8bd684c4    36  ldr x0, [jssp], #8
0xffff8bd684c8    40  ldr x3, [jssp], #8
0xffff8bd684cc    44  ldr x16, pc+100 (addr 0x0000ffff8bd68530)    ;; code: BUILTIN
0xffff8bd684d0    48  br x16
0xffff8bd684d4    52  add jssp, jssp, #0x10 (16)
0xffff8bd684d8    56  sub csp, jssp, #0x8 (8)
0xffff8bd684dc    60  str x1, [jssp, #-8]!
0xffff8bd684e0    64  ldr x4, pc+88 (addr 0x0000ffff8bd68538)    ;; object: 0x26c04241 <undefined>
0xffff8bd684e4    68  ldr x5, [x26, #40]
0xffff8bd684e8    72  ldr x0, pc+88 (addr 0x0000ffff8bd68540)    ;; external reference (isolate)
0xffff8bd684ec    76  sub csp, jssp, #0x28 (40)
0xffff8bd684f0    80  stp x0, x5, [jssp, #-32]!
0xffff8bd684f4    84  stp x5, x4, [jssp, #16]
0xffff8bd684f8    88  str x1, [jssp, #-8]!
0xffff8bd684fc    92  movz x16, #0x0
0xffff8bd68500    96  sub csp, jssp, #0x8 (8)
0xffff8bd68504   100  str x16, [jssp, #-8]!
0xffff8bd68508   104  sub csp, jssp, #0x8 (8)
0xffff8bd6850c   108  str x2, [jssp, #-8]!
0xffff8bd68510   112  ldr x2, pc+56 (addr 0x0000ffff8bd68548)    ;; external reference (Accessors::FunctionNameGetter)
0xffff8bd68514   116  ldr x16, pc+60 (addr 0x0000ffff8bd68550)    ;; code: STUB, CallApiGetterStub, minor: 0
0xffff8bd68518   120  br x16
0xffff8bd6851c   124  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bd68520   128  d63f03e0       constant
0xffff8bd68524   132  d503201f       constant
0xffff8bd68528   136  26c5b0f1       constant
0xffff8bd6852c   140  00000000       constant
0xffff8bd68530   144  8bd222e0       constant
0xffff8bd68534   148  0000ffff       constant
0xffff8bd68538   152  26c04241       constant
0xffff8bd6853c   156  00000000       constant
0xffff8bd68540   160  2cb8d2d0       constant
0xffff8bd68544   164  00000000       constant
0xffff8bd68548   168  008fefd8       constant
0xffff8bd6854c   172  00000000       constant
0xffff8bd68550   176  8bd68280       constant
0xffff8bd68554   180  0000ffff       constant


RelocInfo (size = 14)
0xffff8bd684b0  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bd684cc  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd684e0  embedded object  (0x26c04241 <undefined>)
0xffff8bd684e8  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd68510  external reference (Accessors::FunctionNameGetter)  (0x8fefd8)
0xffff8bd68514  code target (STUB)  (0xffff8bd68280)
0xffff8bd6851c  constant pool (size 60)

kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393221
name = CallICStub(args(5), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff8bd685c0     0  add x4, x2, x3, asr #29
0xffff8bd685c4     4  ldur x4, [x4, #15]
0xffff8bd685c8     8  ldur x5, [x4, #7]
0xffff8bd685cc    12  cmp x5, x1
0xffff8bd685d0    16  b.ne #+0x2c (addr 0xffff8bd685fc)
0xffff8bd685d4    20  tbz w1, #0, #+0x28 (addr 0xffff8bd685fc)
0xffff8bd685d8    24  add x2, x2, x3, asr #29
0xffff8bd685dc    28  add x2, x2, #0x18 (24)
0xffff8bd685e0    32  ldur x3, [x2, #-1]
0xffff8bd685e4    36  movz x16, #0x200000000
0xffff8bd685e8    40  add x3, x3, x16
0xffff8bd685ec    44  stur x3, [x2, #-1]
0xffff8bd685f0    48  movz x0, #0x5
0xffff8bd685f4    52  ldr x16, pc+372 (addr 0x0000ffff8bd68768)    ;; code: BUILTIN
0xffff8bd685f8    56  br x16
0xffff8bd685fc    60  ldr x16, [x26, #2400]
0xffff8bd68600    64  cmp x4, x16
0xffff8bd68604    68  b.eq #+0x78 (addr 0xffff8bd6867c)
0xffff8bd68608    72  ldur x5, [x4, #-1]
0xffff8bd6860c    76  ldr x16, [x26, #2736]
0xffff8bd68610    80  cmp x5, x16
0xffff8bd68614    84  b.ne #+0x40 (addr 0xffff8bd68654)
0xffff8bd68618    88  ldur x5, [cp, #39]
0xffff8bd6861c    92  ldur x5, [x5, #95]
0xffff8bd68620    96  cmp x1, x5
0xffff8bd68624   100  b.ne #+0xec (addr 0xffff8bd68710)
0xffff8bd68628   104  movz x0, #0x5
0xffff8bd6862c   108  add x2, x2, x3, asr #29
0xffff8bd68630   112  add x2, x2, #0x18 (24)
0xffff8bd68634   116  ldur x3, [x2, #-1]
0xffff8bd68638   120  movz x16, #0x200000000
0xffff8bd6863c   124  add x3, x3, x16
0xffff8bd68640   128  stur x3, [x2, #-1]
0xffff8bd68644   132  mov x2, x4
0xffff8bd68648   136  mov x3, x1
0xffff8bd6864c   140  ldr x16, pc+292 (addr 0x0000ffff8bd68770)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff8bd68650   144  br x16
0xffff8bd68654   148  ldr x16, [x26, #2568]
0xffff8bd68658   152  cmp x4, x16
0xffff8bd6865c   156  b.eq #+0xb4 (addr 0xffff8bd68710)
0xffff8bd68660   160  ldur x5, [x4, #-1]
0xffff8bd68664   164  ldrb w5, [x5, #11]
0xffff8bd68668   168  cmp x5, #0xc9 (201)
0xffff8bd6866c   172  b.ne #+0xa4 (addr 0xffff8bd68710)
0xffff8bd68670   176  add x4, x2, x3, asr #29
0xffff8bd68674   180  ldr x5, [x26, #2400]
0xffff8bd68678   184  stur x5, [x4, #15]
0xffff8bd6867c   188  movz x0, #0x5
0xffff8bd68680   192  ldr x16, pc+248 (addr 0x0000ffff8bd68778)    ;; code: BUILTIN
0xffff8bd68684   196  br x16
0xffff8bd68688   200  tbz w1, #0, #+0x88 (addr 0xffff8bd68710)
0xffff8bd6868c   204  ldur x5, [x1, #-1]
0xffff8bd68690   208  ldrb w5, [x5, #11]
0xffff8bd68694   212  cmp x5, #0xc9 (201)
0xffff8bd68698   216  b.ne #+0x78 (addr 0xffff8bd68710)
0xffff8bd6869c   220  ldur x5, [cp, #39]
0xffff8bd686a0   224  ldur x5, [x5, #95]
0xffff8bd686a4   228  cmp x1, x5
0xffff8bd686a8   232  b.eq #+0x68 (addr 0xffff8bd68710)
0xffff8bd686ac   236  ldur x4, [x1, #39]
0xffff8bd686b0   240  ldur x4, [x4, #39]
0xffff8bd686b4   244  ldur x5, [cp, #39]
0xffff8bd686b8   248  cmp x4, x5
0xffff8bd686bc   252  b.ne #+0x54 (addr 0xffff8bd68710)
0xffff8bd686c0   256  movz x5, #0x200000000
0xffff8bd686c4   260  adds x4, x2, x3, asr #29
0xffff8bd686c8   264  stur x5, [x4, #23]
0xffff8bd686cc   268  movz x16, #0xc00000000
0xffff8bd686d0   272  sub csp, jssp, #0x10 (16)
0xffff8bd686d4   276  stp fp, lr, [jssp, #-16]!
0xffff8bd686d8   280  sub csp, jssp, #0x10 (16)
0xffff8bd686dc   284  str x16, [jssp, #-8]!
0xffff8bd686e0   288  ldr x17, pc+160 (addr 0x0000ffff8bd68780)    ;; object: 0xffff8bd68561 <Code: CALL_IC>
0xffff8bd686e4   292  sub csp, jssp, #0x10 (16)
0xffff8bd686e8   296  str x17, [jssp, #-8]!
0xffff8bd686ec   300  add fp, jssp, #0x10 (16)
0xffff8bd686f0   304  sub csp, jssp, #0x8 (8)
0xffff8bd686f4   308  str x1, [jssp, #-8]!
0xffff8bd686f8   312  ldr x16, pc+144 (addr 0x0000ffff8bd68788)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bd686fc   316  blr x16
0xffff8bd68700   320  ldr x1, [jssp], #8
0xffff8bd68704   324  mov jssp, fp
0xffff8bd68708   328  ldp fp, lr, [jssp], #16
0xffff8bd6870c   332  b #-0x11c (addr 0xffff8bd685f0)
0xffff8bd68710   336  movz x16, #0xc00000000
0xffff8bd68714   340  sub csp, jssp, #0x10 (16)
0xffff8bd68718   344  stp fp, lr, [jssp, #-16]!
0xffff8bd6871c   348  sub csp, jssp, #0x10 (16)
0xffff8bd68720   352  str x16, [jssp, #-8]!
0xffff8bd68724   356  ldr x17, pc+108 (addr 0x0000ffff8bd68790)    ;; object: 0xffff8bd68561 <Code: CALL_IC>
0xffff8bd68728   360  sub csp, jssp, #0x10 (16)
0xffff8bd6872c   364  str x17, [jssp, #-8]!
0xffff8bd68730   368  add fp, jssp, #0x10 (16)
0xffff8bd68734   372  sub csp, jssp, #0x18 (24)
0xffff8bd68738   376  stp x3, x2, [jssp, #-24]!
0xffff8bd6873c   380  str x1, [jssp, #16]
0xffff8bd68740   384  movz x0, #0x3
0xffff8bd68744   388  ldr x1, pc+84 (addr 0x0000ffff8bd68798)    ;; external reference (Runtime::CallIC_Miss)
0xffff8bd68748   392  ldr x16, pc+88 (addr 0x0000ffff8bd687a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd6874c   396  blr x16
0xffff8bd68750   400  mov x1, x0
0xffff8bd68754   404  mov jssp, fp
0xffff8bd68758   408  ldp fp, lr, [jssp], #16
0xffff8bd6875c   412  b #-0xe0 (addr 0xffff8bd6867c)
0xffff8bd68760   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bd68764   420  d63f03e0       constant
0xffff8bd68768   424  8bd1e820       constant
0xffff8bd6876c   428  0000ffff       constant
0xffff8bd68770   432  8bd33b00       constant
0xffff8bd68774   436  0000ffff       constant
0xffff8bd68778   440  8bd1f820       constant
0xffff8bd6877c   444  0000ffff       constant
0xffff8bd68780   448  8bd68561       constant
0xffff8bd68784   452  0000ffff       constant
0xffff8bd68788   456  8bd0ddc0       constant
0xffff8bd6878c   460  0000ffff       constant
0xffff8bd68790   464  8bd68561       constant
0xffff8bd68794   468  0000ffff       constant
0xffff8bd68798   472  00c86928       constant
0xffff8bd6879c   476  00000000       constant
0xffff8bd687a0   480  8bd06060       constant
0xffff8bd687a4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd685f4  code target (BUILTIN)  (0xffff8bd1e820)
0xffff8bd6864c  code target (STUB)  (0xffff8bd33b00)
0xffff8bd68680  code target (BUILTIN)  (0xffff8bd1f820)
0xffff8bd686e0  embedded object  (0xffff8bd68561 <Code: CALL_IC>)
0xffff8bd686f8  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bd68724  embedded object  (0xffff8bd68561 <Code: CALL_IC>)
0xffff8bd68744  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8bd68748  code target (STUB)  (0xffff8bd06060)
0xffff8bd68760  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393221
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8bd68820     0  ldur x2, [fp, #-16]
0xffff8bd68824     4  ldur x2, [x2, #31]
0xffff8bd68828     8  ldur x2, [x2, #87]
0xffff8bd6882c    12  ldr x16, pc+20 (addr 0x0000ffff8bd68840)    ;; code: CALL_IC, GENERIC
0xffff8bd68830    16  br x16
0xffff8bd68834    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd68838    24  d63f03e0       constant
0xffff8bd6883c    28  d503201f       constant
0xffff8bd68840    32  8bd685c0       constant
0xffff8bd68844    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd6882c  code target (CALL_IC)  (0xffff8bd685c0)
0xffff8bd68834  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = GT
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff8bd68f60     0  movz x16, #0xc00000000
0xffff8bd68f64     4  sub csp, jssp, #0x10 (16)
0xffff8bd68f68     8  stp fp, lr, [jssp, #-16]!
0xffff8bd68f6c    12  sub csp, jssp, #0x10 (16)
0xffff8bd68f70    16  str x16, [jssp, #-8]!
0xffff8bd68f74    20  ldr x17, pc+92 (addr 0x0000ffff8bd68fd0)    ;; object: 0xffff8bd68f01 <Code: COMPARE_IC>
0xffff8bd68f78    24  sub csp, jssp, #0x10 (16)
0xffff8bd68f7c    28  str x17, [jssp, #-8]!
0xffff8bd68f80    32  add fp, jssp, #0x10 (16)
0xffff8bd68f84    36  sub csp, jssp, #0x18 (24)
0xffff8bd68f88    40  stp lr, x0, [jssp, #-24]!
0xffff8bd68f8c    44  str x1, [jssp, #16]
0xffff8bd68f90    48  movz x10, #0x3200000000
0xffff8bd68f94    52  sub csp, jssp, #0x18 (24)
0xffff8bd68f98    56  stp x10, x0, [jssp, #-24]!
0xffff8bd68f9c    60  str x1, [jssp, #16]
0xffff8bd68fa0    64  movz x0, #0x3
0xffff8bd68fa4    68  ldr x1, pc+52 (addr 0x0000ffff8bd68fd8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd68fa8    72  ldr x16, pc+56 (addr 0x0000ffff8bd68fe0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd68fac    76  blr x16
0xffff8bd68fb0    80  add x11, x0, #0x5f (95)
0xffff8bd68fb4    84  ldr x1, [jssp, #16]
0xffff8bd68fb8    88  ldp lr, x0, [jssp], #24
0xffff8bd68fbc    92  mov jssp, fp
0xffff8bd68fc0    96  ldp fp, lr, [jssp], #16
0xffff8bd68fc4   100  br x11
0xffff8bd68fc8   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd68fcc   108  d63f03e0       constant
0xffff8bd68fd0   112  8bd68f01       constant
0xffff8bd68fd4   116  0000ffff       constant
0xffff8bd68fd8   120  00c8a980       constant
0xffff8bd68fdc   124  00000000       constant
0xffff8bd68fe0   128  8bd06060       constant
0xffff8bd68fe4   132  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd68f74  embedded object  (0xffff8bd68f01 <Code: COMPARE_IC>)
0xffff8bd68fa4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd68fa8  code target (STUB)  (0xffff8bd06060)
0xffff8bd68fc8  constant pool (size 32)


kind = STUB
major_key = SubStringStub
name = SubStringStub
compiler = unknown
Instructions (size = 824)
0xffff8bd69060     0  ldr x0, [jssp]
0xffff8bd69064     4  ldr x15, [jssp, #8]
0xffff8bd69068     8  orr x16, x15, x0
0xffff8bd6906c    12  tbnz w16, #0, #+0x228 (addr 0xffff8bd69294)
0xffff8bd69070    16  asr x15, x15, #32
0xffff8bd69074    20  asr x0, x0, #32
0xffff8bd69078    24  subs x1, x0, x15
0xffff8bd6907c    28  b.mi #+0x218 (addr 0xffff8bd69294)
0xffff8bd69080    32  tbnz w15, #31, #+0x214 (addr 0xffff8bd69294)
0xffff8bd69084    36  ldr x10, [jssp, #16]
0xffff8bd69088    40  tbz w10, #0, #+0x20c (addr 0xffff8bd69294)
0xffff8bd6908c    44  ldur x12, [x10, #-1]
0xffff8bd69090    48  ldrb w12, [x12, #11]
0xffff8bd69094    52  tbnz w12, #7, #+0x200 (addr 0xffff8bd69294)
0xffff8bd69098    56  cmp x1, #0x1 (1)
0xffff8bd6909c    60  b.eq #+0x208 (addr 0xffff8bd692a4)
0xffff8bd690a0    64  ldursw x11, [x10, #19]
0xffff8bd690a4    68  cmp x1, x11
0xffff8bd690a8    72  csel x0, x10, x0, eq
0xffff8bd690ac    76  b.eq #+0x1e0 (addr 0xffff8bd6928c)
0xffff8bd690b0    80  b.hi #+0x1e4 (addr 0xffff8bd69294)
0xffff8bd690b4    84  tst x12, #0x1
0xffff8bd690b8    88  b.eq #+0x38 (addr 0xffff8bd690f0)
0xffff8bd690bc    92  tst x12, #0x2
0xffff8bd690c0    96  b.ne #+0x1c (addr 0xffff8bd690dc)
0xffff8bd690c4   100  ldur x3, [x10, #31]
0xffff8bd690c8   104  ldr x16, [x26, #80]
0xffff8bd690cc   108  cmp x3, x16
0xffff8bd690d0   112  b.ne #+0x1c4 (addr 0xffff8bd69294)
0xffff8bd690d4   116  ldur x10, [x10, #23]
0xffff8bd690d8   120  b #+0x10 (addr 0xffff8bd690e8)
0xffff8bd690dc   124  ldursw x3, [x10, #35]
0xffff8bd690e0   128  add x15, x15, x3
0xffff8bd690e4   132  ldur x10, [x10, #23]
0xffff8bd690e8   136  ldur x3, [x10, #-1]
0xffff8bd690ec   140  ldrb w12, [x3, #11]
0xffff8bd690f0   144  cmp x1, #0xd (13)
0xffff8bd690f4   148  b.lt #+0x84 (addr 0xffff8bd69178)
0xffff8bd690f8   152  tbz w12, #2, #+0x3c (addr 0xffff8bd69134)
0xffff8bd690fc   156  ldr x3, pc+620 (addr 0x0000ffff8bd69368)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff8bd69100   160  ldp x0, x4, [x3]
0xffff8bd69104   164  adds x16, x0, #0x28 (40)
0xffff8bd69108   168  ccmp x16, x4, #nzCv, lo
0xffff8bd6910c   172  b.hi #+0x188 (addr 0xffff8bd69294)
0xffff8bd69110   176  str x16, [x3]
0xffff8bd69114   180  orr x0, x0, #0x1
0xffff8bd69118   184  ldr x4, [x26, #488]
0xffff8bd6911c   188  lsl x3, x1, #32
0xffff8bd69120   192  stur x4, [x0, #-1]
0xffff8bd69124   196  movz x4, #0x3
0xffff8bd69128   200  stur x3, [x0, #15]
0xffff8bd6912c   204  stur x4, [x0, #7]
0xffff8bd69130   208  b #+0x38 (addr 0xffff8bd69168)
0xffff8bd69134   212  ldr x3, pc+572 (addr 0x0000ffff8bd69370)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff8bd69138   216  ldp x0, x4, [x3]
0xffff8bd6913c   220  adds x16, x0, #0x28 (40)
0xffff8bd69140   224  ccmp x16, x4, #nzCv, lo
0xffff8bd69144   228  b.hi #+0x150 (addr 0xffff8bd69294)
0xffff8bd69148   232  str x16, [x3]
0xffff8bd6914c   236  orr x0, x0, #0x1
0xffff8bd69150   240  ldr x4, [x26, #480]
0xffff8bd69154   244  lsl x3, x1, #32
0xffff8bd69158   248  stur x4, [x0, #-1]
0xffff8bd6915c   252  movz x4, #0x3
0xffff8bd69160   256  stur x3, [x0, #15]
0xffff8bd69164   260  stur x4, [x0, #7]
0xffff8bd69168   264  lsl x15, x15, #32
0xffff8bd6916c   268  stur x15, [x0, #31]
0xffff8bd69170   272  stur x10, [x0, #23]
0xffff8bd69174   276  b #+0x118 (addr 0xffff8bd6928c)
0xffff8bd69178   280  tst x12, #0x2
0xffff8bd6917c   284  b.eq #+0x14 (addr 0xffff8bd69190)
0xffff8bd69180   288  tst x12, #0x10
0xffff8bd69184   292  b.ne #+0x110 (addr 0xffff8bd69294)
0xffff8bd69188   296  ldur x13, [x10, #31]
0xffff8bd6918c   300  b #+0x8 (addr 0xffff8bd69194)
0xffff8bd69190   304  add x13, x10, #0x17 (23)
0xffff8bd69194   308  tbz w12, #2, #+0x7c (addr 0xffff8bd69210)
0xffff8bd69198   312  add x3, x1, #0x1f (31)
0xffff8bd6919c   316  and x3, x3, #0xfffffffffffffff8
0xffff8bd691a0   320  ldr x5, pc+472 (addr 0x0000ffff8bd69378)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff8bd691a4   324  ldp x0, x16, [x5]
0xffff8bd691a8   328  adds x4, x0, x3
0xffff8bd691ac   332  ccmp x4, x16, #nzCv, lo
0xffff8bd691b0   336  b.hi #+0xe4 (addr 0xffff8bd69294)
0xffff8bd691b4   340  str x4, [x5]
0xffff8bd691b8   344  orr x0, x0, #0x1
0xffff8bd691bc   348  ldr x4, [x26, #280]
0xffff8bd691c0   352  lsl x3, x1, #32
0xffff8bd691c4   356  stur x4, [x0, #-1]
0xffff8bd691c8   360  movz x4, #0x3
0xffff8bd691cc   364  stur x3, [x0, #15]
0xffff8bd691d0   368  stur x4, [x0, #7]
0xffff8bd691d4   372  add x13, x13, x15
0xffff8bd691d8   376  add x14, x0, #0x17 (23)
0xffff8bd691dc   380  and x3, x1, #0xfffffffffffffff0
0xffff8bd691e0   384  cbz x3, #+0x18 (addr 0xffff8bd691f8)
0xffff8bd691e4   388  sub x3, x3, #0x10 (16)
0xffff8bd691e8   392  ldp x16, x17, [x13], #16
0xffff8bd691ec   396  stp x16, x17, [x14], #16
0xffff8bd691f0   400  cbnz x3, #-0xc (addr 0xffff8bd691e4)
0xffff8bd691f4   404  and x1, x1, #0xf
0xffff8bd691f8   408  cbz x1, #+0x14 (addr 0xffff8bd6920c)
0xffff8bd691fc   412  sub x1, x1, #0x1 (1)
0xffff8bd69200   416  ldrb w16, [x13], #1
0xffff8bd69204   420  strb w16, [x14], #1
0xffff8bd69208   424  cbnz x1, #-0xc (addr 0xffff8bd691fc)
0xffff8bd6920c   428  b #+0x80 (addr 0xffff8bd6928c)
0xffff8bd69210   432  add x3, x1, x1
0xffff8bd69214   436  add x3, x3, #0x1f (31)
0xffff8bd69218   440  and x3, x3, #0xfffffffffffffff8
0xffff8bd6921c   444  ldr x5, pc+356 (addr 0x0000ffff8bd69380)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff8bd69220   448  ldp x0, x16, [x5]
0xffff8bd69224   452  adds x4, x0, x3
0xffff8bd69228   456  ccmp x4, x16, #nzCv, lo
0xffff8bd6922c   460  b.hi #+0x68 (addr 0xffff8bd69294)
0xffff8bd69230   464  str x4, [x5]
0xffff8bd69234   468  orr x0, x0, #0x1
0xffff8bd69238   472  ldr x4, [x26, #456]
0xffff8bd6923c   476  lsl x3, x1, #32
0xffff8bd69240   480  stur x4, [x0, #-1]
0xffff8bd69244   484  movz x4, #0x3
0xffff8bd69248   488  stur x3, [x0, #15]
0xffff8bd6924c   492  stur x4, [x0, #7]
0xffff8bd69250   496  add x13, x13, x15, lsl #1
0xffff8bd69254   500  add x14, x0, #0x17 (23)
0xffff8bd69258   504  add x1, x1, x1
0xffff8bd6925c   508  and x3, x1, #0xfffffffffffffff0
0xffff8bd69260   512  cbz x3, #+0x18 (addr 0xffff8bd69278)
0xffff8bd69264   516  sub x3, x3, #0x10 (16)
0xffff8bd69268   520  ldp x16, x17, [x13], #16
0xffff8bd6926c   524  stp x16, x17, [x14], #16
0xffff8bd69270   528  cbnz x3, #-0xc (addr 0xffff8bd69264)
0xffff8bd69274   532  and x1, x1, #0xf
0xffff8bd69278   536  cbz x1, #+0x14 (addr 0xffff8bd6928c)
0xffff8bd6927c   540  sub x1, x1, #0x1 (1)
0xffff8bd69280   544  ldrb w16, [x13], #1
0xffff8bd69284   548  strb w16, [x14], #1
0xffff8bd69288   552  cbnz x1, #-0xc (addr 0xffff8bd6927c)
0xffff8bd6928c   556  add jssp, jssp, #0x18 (24)
0xffff8bd69290   560  ret
0xffff8bd69294   564  movz x0, #0x3
0xffff8bd69298   568  ldr x1, pc+240 (addr 0x0000ffff8bd69388)    ;; external reference (Runtime::SubString)
0xffff8bd6929c   572  ldr x16, pc+244 (addr 0x0000ffff8bd69390)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd692a0   576  br x16
0xffff8bd692a4   580  lsl x15, x15, #32
0xffff8bd692a8   584  tbnz w15, #0, #+0xb0 (addr 0xffff8bd69358)
0xffff8bd692ac   588  ldursw x1, [x10, #19]
0xffff8bd692b0   592  cmp x1, x15, asr #32
0xffff8bd692b4   596  b.ls #-0x20 (addr 0xffff8bd69294)
0xffff8bd692b8   600  asr x15, x15, #32
0xffff8bd692bc   604  ldur x1, [x10, #-1]
0xffff8bd692c0   608  ldrb w1, [x1, #11]
0xffff8bd692c4   612  tbz w1, #0, #+0x34 (addr 0xffff8bd692f8)
0xffff8bd692c8   616  tbz w1, #1, #+0x14 (addr 0xffff8bd692dc)
0xffff8bd692cc   620  ldur w1, [x10, #35]
0xffff8bd692d0   624  ldur x10, [x10, #23]
0xffff8bd692d4   628  add w15, w15, w1
0xffff8bd692d8   632  b #+0x18 (addr 0xffff8bd692f0)
0xffff8bd692dc   636  ldur x1, [x10, #31]
0xffff8bd692e0   640  ldr x16, [x26, #80]
0xffff8bd692e4   644  cmp x1, x16
0xffff8bd692e8   648  b.ne #+0x70 (addr 0xffff8bd69358)
0xffff8bd692ec   652  ldur x10, [x10, #23]
0xffff8bd692f0   656  ldur x1, [x10, #-1]
0xffff8bd692f4   660  ldrb w1, [x1, #11]
0xffff8bd692f8   664  tst x1, #0x3
0xffff8bd692fc   668  b.ne #+0xc (addr 0xffff8bd69308)
0xffff8bd69300   672  add x10, x10, #0x17 (23)
0xffff8bd69304   676  b #+0x10 (addr 0xffff8bd69314)
0xffff8bd69308   680  tst x1, #0x10
0xffff8bd6930c   684  b.ne #+0x4c (addr 0xffff8bd69358)
0xffff8bd69310   688  ldur x10, [x10, #31]
0xffff8bd69314   692  tbnz w1, #2, #+0xc (addr 0xffff8bd69320)
0xffff8bd69318   696  ldrh w1, [x10, w15, sxtw #1]
0xffff8bd6931c   700  b #+0x8 (addr 0xffff8bd69324)
0xffff8bd69320   704  ldrb w1, [x10, w15, sxtw]
0xffff8bd69324   708  lsl x1, x1, #32
0xffff8bd69328   712  tbnz w1, #0, #+0x34 (addr 0xffff8bd6935c)
0xffff8bd6932c   716  movz x16, #0xff00000000
0xffff8bd69330   720  cmp x1, x16
0xffff8bd69334   724  b.hi #+0x28 (addr 0xffff8bd6935c)
0xffff8bd69338   728  ldr x0, [x26, #400]
0xffff8bd6933c   732  add x0, x0, x1, asr #29
0xffff8bd69340   736  ldur x0, [x0, #15]
0xffff8bd69344   740  ldr x16, [x26, #40]
0xffff8bd69348   744  cmp x0, x16
0xffff8bd6934c   748  b.eq #+0x10 (addr 0xffff8bd6935c)
0xffff8bd69350   752  add jssp, jssp, #0x18 (24)
0xffff8bd69354   756  ret
0xffff8bd69358   760  b #-0xc4 (addr 0xffff8bd69294)
0xffff8bd6935c   764  b #-0xc8 (addr 0xffff8bd69294)
0xffff8bd69360   768  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd69364   772  d63f03e0       constant
0xffff8bd69368   776  2cb8e2c0       constant
0xffff8bd6936c   780  00000000       constant
0xffff8bd69370   784  2cb8e2c0       constant
0xffff8bd69374   788  00000000       constant
0xffff8bd69378   792  2cb8e2c0       constant
0xffff8bd6937c   796  00000000       constant
0xffff8bd69380   800  2cb8e2c0       constant
0xffff8bd69384   804  00000000       constant
0xffff8bd69388   808  00eca0d8       constant
0xffff8bd6938c   812  00000000       constant
0xffff8bd69390   816  8bd06060       constant
0xffff8bd69394   820  0000ffff       constant


RelocInfo (size = 27)
0xffff8bd690fc  external reference (Heap::NewSpaceAllocationTopAddress())  (0x2cb8e2c0)
0xffff8bd69134  external reference (Heap::NewSpaceAllocationTopAddress())  (0x2cb8e2c0)
0xffff8bd691a0  external reference (Heap::NewSpaceAllocationTopAddress())  (0x2cb8e2c0)
0xffff8bd6921c  external reference (Heap::NewSpaceAllocationTopAddress())  (0x2cb8e2c0)
0xffff8bd69298  external reference (Runtime::SubString)  (0xeca0d8)
0xffff8bd6929c  code target (STUB)  (0xffff8bd06060)
0xffff8bd69360  constant pool (size 56)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 493)
0xffff8bd6a5e0     0  movz x2, #0xe2c0
0xffff8bd6a5e4     4  movk x2, #0x2cb8, lsl #16
0xffff8bd6a5e8     8  ldp x3, x0, [x2]
0xffff8bd6a5ec    12  adds x16, x3, #0xa8 (168)
0xffff8bd6a5f0    16  ccmp x16, x0, #nzCv, lo
0xffff8bd6a5f4    20  b.hi #+0xb4 (addr 0xffff8bd6a6a8)
0xffff8bd6a5f8    24  str x16, [x2]
0xffff8bd6a5fc    28  orr x3, x3, #0x1
0xffff8bd6a600    32  ldr x0, pc+280 (addr 0x0000ffff8bd6a718)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd6a604    36  stur x0, [x3, #-1]
0xffff8bd6a608    40  movz x0, #0x1300000000
0xffff8bd6a60c    44  stur x0, [x3, #7]
0xffff8bd6a610    48  stur x1, [x3, #15]
0xffff8bd6a614    52  stur cp, [x3, #23]
0xffff8bd6a618    56  ldr x0, pc+264 (addr 0x0000ffff8bd6a720)    ;; object: 0x26c04519 <the hole>
0xffff8bd6a61c    60  stur x0, [x3, #31]
0xffff8bd6a620    64  ldur x0, [cp, #39]
0xffff8bd6a624    68  stur x0, [x3, #39]
0xffff8bd6a628    72  ldr x0, pc+256 (addr 0x0000ffff8bd6a728)    ;; object: 0x26c04241 <undefined>
0xffff8bd6a62c    76  stur x0, [x3, #47]
0xffff8bd6a630    80  ldr x0, pc+256 (addr 0x0000ffff8bd6a730)    ;; object: 0x26c04241 <undefined>
0xffff8bd6a634    84  stur x0, [x3, #55]
0xffff8bd6a638    88  ldr x0, pc+256 (addr 0x0000ffff8bd6a738)    ;; object: 0x26c04241 <undefined>
0xffff8bd6a63c    92  stur x0, [x3, #63]
0xffff8bd6a640    96  ldr x0, pc+256 (addr 0x0000ffff8bd6a740)    ;; object: 0x26c04241 <undefined>
0xffff8bd6a644   100  stur x0, [x3, #71]
0xffff8bd6a648   104  ldr x0, pc+256 (addr 0x0000ffff8bd6a748)    ;; object: 0x26c04241 <undefined>
0xffff8bd6a64c   108  stur x0, [x3, #79]
0xffff8bd6a650   112  ldr x0, pc+256 (addr 0x0000ffff8bd6a750)    ;; object: 0x26c04241 <undefined>
0xffff8bd6a654   116  stur x0, [x3, #87]
0xffff8bd6a658   120  ldr x0, pc+256 (addr 0x0000ffff8bd6a758)    ;; object: 0x26c04241 <undefined>
0xffff8bd6a65c   124  stur x0, [x3, #95]
0xffff8bd6a660   128  ldr x0, pc+256 (addr 0x0000ffff8bd6a760)    ;; object: 0x26c04241 <undefined>
0xffff8bd6a664   132  stur x0, [x3, #103]
0xffff8bd6a668   136  ldr x0, pc+256 (addr 0x0000ffff8bd6a768)    ;; object: 0x26c04241 <undefined>
0xffff8bd6a66c   140  stur x0, [x3, #111]
0xffff8bd6a670   144  ldr x0, pc+256 (addr 0x0000ffff8bd6a770)    ;; object: 0x26c04241 <undefined>
0xffff8bd6a674   148  stur x0, [x3, #119]
0xffff8bd6a678   152  ldr x0, pc+256 (addr 0x0000ffff8bd6a778)    ;; object: 0x26c04241 <undefined>
0xffff8bd6a67c   156  stur x0, [x3, #127]
0xffff8bd6a680   160  ldr x0, pc+256 (addr 0x0000ffff8bd6a780)    ;; object: 0x26c04241 <undefined>
0xffff8bd6a684   164  stur x0, [x3, #135]
0xffff8bd6a688   168  ldr x0, pc+256 (addr 0x0000ffff8bd6a788)    ;; object: 0x26c04241 <undefined>
0xffff8bd6a68c   172  stur x0, [x3, #143]
0xffff8bd6a690   176  ldr x0, pc+256 (addr 0x0000ffff8bd6a790)    ;; object: 0x26c04241 <undefined>
0xffff8bd6a694   180  stur x0, [x3, #151]
0xffff8bd6a698   184  ldr x0, pc+256 (addr 0x0000ffff8bd6a798)    ;; object: 0x26c04241 <undefined>
0xffff8bd6a69c   188  stur x0, [x3, #159]
0xffff8bd6a6a0   192  mov x0, x3
0xffff8bd6a6a4   196  ret
0xffff8bd6a6a8   200  sub csp, jssp, #0x10 (16)
0xffff8bd6a6ac   204  stp fp, lr, [jssp, #-16]!
0xffff8bd6a6b0   208  movz fp, #0xa00000000
0xffff8bd6a6b4   212  sub csp, jssp, #0x8 (8)
0xffff8bd6a6b8   216  str fp, [jssp, #-8]!
0xffff8bd6a6bc   220  add fp, jssp, #0x8 (8)
0xffff8bd6a6c0   224  movz x3, #0x0
0xffff8bd6a6c4   228  mov x16, lr
0xffff8bd6a6c8   232  ldr x17, pc+216 (addr 0x0000ffff8bd6a7a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd6a6cc   236  blr x17
0xffff8bd6a6d0   240  movz x0, #0xa800000000
0xffff8bd6a6d4   244  movz x10, #0x0
0xffff8bd6a6d8   248  sub csp, jssp, #0x10 (16)
0xffff8bd6a6dc   252  stp x10, x0, [jssp, #-16]!
0xffff8bd6a6e0   256  movz x0, #0x2
0xffff8bd6a6e4   260  movz x1, #0x5b88
0xffff8bd6a6e8   264  movk x1, #0xe2, lsl #16
0xffff8bd6a6ec   268  ldr x16, pc+188 (addr 0x0000ffff8bd6a7a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd6a6f0   272  blr x16
0xffff8bd6a6f4   276  str x0, [jssp, #24]
0xffff8bd6a6f8   280  ldr x16, pc+184 (addr 0x0000ffff8bd6a7b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd6a6fc   284  blr x16
0xffff8bd6a700   288  ldr lr, [jssp, #16]
0xffff8bd6a704   292  ldp xzr, fp, [jssp], #24
0xffff8bd6a708   296  b #-0x108 (addr 0xffff8bd6a600)
0xffff8bd6a70c   300  5800055f       constant pool begin (num_const = 42)    ;; constant pool
0xffff8bd6a710   304  d63f03e0       constant
0xffff8bd6a714   308  d503201f       constant
0xffff8bd6a718   312  5f506149       constant
0xffff8bd6a71c   316  00000000       constant
0xffff8bd6a720   320  26c04519       constant
0xffff8bd6a724   324  00000000       constant
0xffff8bd6a728   328  26c04241       constant
0xffff8bd6a72c   332  00000000       constant
0xffff8bd6a730   336  26c04241       constant
0xffff8bd6a734   340  00000000       constant
0xffff8bd6a738   344  26c04241       constant
0xffff8bd6a73c   348  00000000       constant
0xffff8bd6a740   352  26c04241       constant
0xffff8bd6a744   356  00000000       constant
0xffff8bd6a748   360  26c04241       constant
0xffff8bd6a74c   364  00000000       constant
0xffff8bd6a750   368  26c04241       constant
0xffff8bd6a754   372  00000000       constant
0xffff8bd6a758   376  26c04241       constant
0xffff8bd6a75c   380  00000000       constant
0xffff8bd6a760   384  26c04241       constant
0xffff8bd6a764   388  00000000       constant
0xffff8bd6a768   392  26c04241       constant
0xffff8bd6a76c   396  00000000       constant
0xffff8bd6a770   400  26c04241       constant
0xffff8bd6a774   404  00000000       constant
0xffff8bd6a778   408  26c04241       constant
0xffff8bd6a77c   412  00000000       constant
0xffff8bd6a780   416  26c04241       constant
0xffff8bd6a784   420  00000000       constant
0xffff8bd6a788   424  26c04241       constant
0xffff8bd6a78c   428  00000000       constant
0xffff8bd6a790   432  26c04241       constant
0xffff8bd6a794   436  00000000       constant
0xffff8bd6a798   440  26c04241       constant
0xffff8bd6a79c   444  00000000       constant
0xffff8bd6a7a0   448  8bd06820       constant
0xffff8bd6a7a4   452  0000ffff       constant
0xffff8bd6a7a8   456  8bd06260       constant
0xffff8bd6a7ac   460  0000ffff       constant
0xffff8bd6a7b0   464  8bd068e0       constant
0xffff8bd6a7b4   468  0000ffff       constant


Safepoints (size = 21)
0xffff8bd6a6f4   276  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 26)
0xffff8bd6a600  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd6a618  embedded object  (0x26c04519 <the hole>)
0xffff8bd6a628  embedded object  (0x26c04241 <undefined>)
0xffff8bd6a630  embedded object  (0x26c04241 <undefined>)
0xffff8bd6a638  embedded object  (0x26c04241 <undefined>)
0xffff8bd6a640  embedded object  (0x26c04241 <undefined>)
0xffff8bd6a648  embedded object  (0x26c04241 <undefined>)
0xffff8bd6a650  embedded object  (0x26c04241 <undefined>)
0xffff8bd6a658  embedded object  (0x26c04241 <undefined>)
0xffff8bd6a660  embedded object  (0x26c04241 <undefined>)
0xffff8bd6a668  embedded object  (0x26c04241 <undefined>)
0xffff8bd6a670  embedded object  (0x26c04241 <undefined>)
0xffff8bd6a678  embedded object  (0x26c04241 <undefined>)
0xffff8bd6a680  embedded object  (0x26c04241 <undefined>)
0xffff8bd6a688  embedded object  (0x26c04241 <undefined>)
0xffff8bd6a690  embedded object  (0x26c04241 <undefined>)
0xffff8bd6a698  embedded object  (0x26c04241 <undefined>)
0xffff8bd6a6c8  code target (STUB)  (0xffff8bd06820)
0xffff8bd6a6ec  code target (STUB)  (0xffff8bd06260)
0xffff8bd6a6f8  code target (STUB)  (0xffff8bd068e0)
0xffff8bd6a70c  constant pool (size 172)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bd6c260     0  ldur x0, [x1, #7]
0xffff8bd6c264     4  ldur x0, [x0, #15]
0xffff8bd6c268     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bd6c2e0     0  ldur x0, [x1, #7]
0xffff8bd6c2e4     4  ldur x0, [x0, #23]
0xffff8bd6c2e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bd6c360     0  ldur x0, [x1, #7]
0xffff8bd6c364     4  ldur x0, [x0, #31]
0xffff8bd6c368     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd6d0c0     0  ldur x0, [x1, #7]
0xffff8bd6d0c4     4  movz x16, #0x167
0xffff8bd6d0c8     8  ldr x0, [x0, x16]
0xffff8bd6d0cc    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd6d140     0  ldur x0, [x1, #7]
0xffff8bd6d144     4  movz x16, #0x16f
0xffff8bd6d148     8  ldr x0, [x0, x16]
0xffff8bd6d14c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = FastNewClosureStub
name = FastNewClosureStub
compiler = crankshaft
Instructions (size = 773)
0xffff8bd6e060     0  movz x1, #0xe2c0
0xffff8bd6e064     4  movk x1, #0x2cb8, lsl #16
0xffff8bd6e068     8  ldp x3, x0, [x1]
0xffff8bd6e06c    12  adds x16, x3, #0x48 (72)
0xffff8bd6e070    16  ccmp x16, x0, #nzCv, lo
0xffff8bd6e074    20  b.hi #+0x1bc (addr 0xffff8bd6e230)
0xffff8bd6e078    24  str x16, [x1]
0xffff8bd6e07c    28  orr x3, x3, #0x1
0xffff8bd6e080    32  ldur x0, [cp, #39]
0xffff8bd6e084    36  movz x16, #0x2d7
0xffff8bd6e088    40  ldr x1, [x0, x16]
0xffff8bd6e08c    44  stur x1, [x3, #-1]
0xffff8bd6e090    48  ldr x1, pc+528 (addr 0x0000ffff8bd6e2a0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd6e094    52  stur x1, [x3, #7]
0xffff8bd6e098    56  ldr x1, pc+528 (addr 0x0000ffff8bd6e2a8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd6e09c    60  stur x1, [x3, #15]
0xffff8bd6e0a0    64  ldr x1, pc+528 (addr 0x0000ffff8bd6e2b0)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd6e0a4    68  stur x1, [x3, #47]
0xffff8bd6e0a8    72  ldr x1, pc+528 (addr 0x0000ffff8bd6e2b8)    ;; object: 0x26c04519 <the hole>
0xffff8bd6e0ac    76  stur x1, [x3, #23]
0xffff8bd6e0b0    80  stur x2, [x3, #31]
0xffff8bd6e0b4    84  stur cp, [x3, #39]
0xffff8bd6e0b8    88  ldur x1, [x2, #23]
0xffff8bd6e0bc    92  movz x4, #0x0
0xffff8bd6e0c0    96  cmp x1, x4
0xffff8bd6e0c4   100  b.eq #+0x150 (addr 0xffff8bd6e214)
0xffff8bd6e0c8   104  ldur w4, [x1, #11]
0xffff8bd6e0cc   108  subs w4, w4, #0x4 (4)
0xffff8bd6e0d0   112  b.vs #+0x230 (addr 0xffff8bd6e300)
0xffff8bd6e0d4   116  mov x5, x4
0xffff8bd6e0d8   120  cmp w5, #0x1 (1)
0xffff8bd6e0dc   124  b.lt #+0xb4 (addr 0xffff8bd6e190)
0xffff8bd6e0e0   128  add x4, x1, #0xf (15)
0xffff8bd6e0e4   132  ldr x6, [x4, w5, sxtw #3]
0xffff8bd6e0e8   136  ldur x4, [x6, #7]
0xffff8bd6e0ec   140  add x6, x1, #0x27 (39)
0xffff8bd6e0f0   144  ldr x7, [x6, w5, sxtw #3]
0xffff8bd6e0f4   148  add x6, x1, #0x17 (23)
0xffff8bd6e0f8   152  ldr x8, [x6, w5, sxtw #3]
0xffff8bd6e0fc   156  ldur x6, [x8, #7]
0xffff8bd6e100   160  cmp x0, x4
0xffff8bd6e104   164  b.ne #+0x1c (addr 0xffff8bd6e120)
0xffff8bd6e108   168  mov x4, #0xffffffff00000000
0xffff8bd6e10c   172  cmp x7, x4
0xffff8bd6e110   176  b.ne #+0x10 (addr 0xffff8bd6e120)
0xffff8bd6e114   180  movz x4, #0x0
0xffff8bd6e118   184  cmp x6, x4
0xffff8bd6e11c   188  b.ne #+0xc (addr 0xffff8bd6e128)
0xffff8bd6e120   192  sub w5, w5, #0x4 (4)
0xffff8bd6e124   196  b #-0x4c (addr 0xffff8bd6e0d8)
0xffff8bd6e128   200  add x4, x1, #0x1f (31)
0xffff8bd6e12c   204  ldr x7, [x4, w5, sxtw #3]
0xffff8bd6e130   208  ldur x7, [x7, #7]
0xffff8bd6e134   212  movz x4, #0x0
0xffff8bd6e138   216  cmp x7, x4
0xffff8bd6e13c   220  b.eq #+0x50 (addr 0xffff8bd6e18c)
0xffff8bd6e140   224  add x4, x6, #0x5f (95)
0xffff8bd6e144   228  stur x4, [x3, #55]
0xffff8bd6e148   232  stur x7, [x3, #47]
0xffff8bd6e14c   236  movz x16, #0x557
0xffff8bd6e150   240  ldr x4, [x0, x16]
0xffff8bd6e154   244  stur x4, [x3, #63]
0xffff8bd6e158   248  mov x4, x3
0xffff8bd6e15c   252  movz x16, #0x557
0xffff8bd6e160   256  str x4, [x0, x16]
0xffff8bd6e164   260  add x6, x0, #0x557 (1367)
0xffff8bd6e168   264  and x4, x0, #0xfffffffffff00000
0xffff8bd6e16c   268  ldr x4, [x4, #8]
0xffff8bd6e170   272  tbz w4, #2, #+0x18 (addr 0xffff8bd6e188)
0xffff8bd6e174   276  sub csp, jssp, #0x8 (8)
0xffff8bd6e178   280  str lr, [jssp, #-8]!
0xffff8bd6e17c   284  ldr x16, pc+324 (addr 0x0000ffff8bd6e2c0)    ;; code: STUB, RecordWriteStub, minor: 71808
0xffff8bd6e180   288  blr x16
0xffff8bd6e184   292  ldr lr, [jssp], #8
0xffff8bd6e188   296  b #+0x8 (addr 0xffff8bd6e190)
0xffff8bd6e18c   300  b #+0x184 (addr 0xffff8bd6e310)
0xffff8bd6e190   304  cmp w5, #0x1 (1)
0xffff8bd6e194   308  b.ge #+0x94 (addr 0xffff8bd6e228)
0xffff8bd6e198   312  ldur x1, [x1, #15]
0xffff8bd6e19c   316  ldur x1, [x1, #7]
0xffff8bd6e1a0   320  movz x4, #0x0
0xffff8bd6e1a4   324  cmp x1, x4
0xffff8bd6e1a8   328  b.eq #+0x54 (addr 0xffff8bd6e1fc)
0xffff8bd6e1ac   332  add x1, x1, #0x5f (95)
0xffff8bd6e1b0   336  stur x1, [x3, #55]
0xffff8bd6e1b4   340  ldr x1, pc+276 (addr 0x0000ffff8bd6e2c8)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd6e1b8   344  stur x1, [x3, #47]
0xffff8bd6e1bc   348  movz x16, #0x557
0xffff8bd6e1c0   352  ldr x1, [x0, x16]
0xffff8bd6e1c4   356  stur x1, [x3, #63]
0xffff8bd6e1c8   360  mov x1, x3
0xffff8bd6e1cc   364  movz x16, #0x557
0xffff8bd6e1d0   368  str x1, [x0, x16]
0xffff8bd6e1d4   372  add x2, x0, #0x557 (1367)
0xffff8bd6e1d8   376  and x1, x0, #0xfffffffffff00000
0xffff8bd6e1dc   380  ldr x1, [x1, #8]
0xffff8bd6e1e0   384  tbz w1, #2, #+0x18 (addr 0xffff8bd6e1f8)
0xffff8bd6e1e4   388  sub csp, jssp, #0x8 (8)
0xffff8bd6e1e8   392  str lr, [jssp, #-8]!
0xffff8bd6e1ec   396  ldr x16, pc+228 (addr 0x0000ffff8bd6e2d0)    ;; code: STUB, RecordWriteStub, minor: 67616
0xffff8bd6e1f0   400  blr x16
0xffff8bd6e1f4   404  ldr lr, [jssp], #8
0xffff8bd6e1f8   408  b #+0x30 (addr 0xffff8bd6e228)
0xffff8bd6e1fc   412  ldr x0, pc+220 (addr 0x0000ffff8bd6e2d8)    ;; object: 0x26c04241 <undefined>
0xffff8bd6e200   416  stur x0, [x3, #63]
0xffff8bd6e204   420  ldur x0, [x2, #15]
0xffff8bd6e208   424  add x0, x0, #0x5f (95)
0xffff8bd6e20c   428  stur x0, [x3, #55]
0xffff8bd6e210   432  b #+0x18 (addr 0xffff8bd6e228)
0xffff8bd6e214   436  ldr x0, pc+204 (addr 0x0000ffff8bd6e2e0)    ;; object: 0x26c04241 <undefined>
0xffff8bd6e218   440  stur x0, [x3, #63]
0xffff8bd6e21c   444  ldur x0, [x2, #15]
0xffff8bd6e220   448  add x0, x0, #0x5f (95)
0xffff8bd6e224   452  stur x0, [x3, #55]
0xffff8bd6e228   456  mov x0, x3
0xffff8bd6e22c   460  ret
0xffff8bd6e230   464  sub csp, jssp, #0x10 (16)
0xffff8bd6e234   468  stp fp, lr, [jssp, #-16]!
0xffff8bd6e238   472  movz fp, #0xa00000000
0xffff8bd6e23c   476  sub csp, jssp, #0x8 (8)
0xffff8bd6e240   480  str fp, [jssp, #-8]!
0xffff8bd6e244   484  add fp, jssp, #0x8 (8)
0xffff8bd6e248   488  movz x3, #0x0
0xffff8bd6e24c   492  mov x16, lr
0xffff8bd6e250   496  ldr x17, pc+152 (addr 0x0000ffff8bd6e2e8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd6e254   500  blr x17
0xffff8bd6e258   504  movz x0, #0x4800000000
0xffff8bd6e25c   508  movz x10, #0x0
0xffff8bd6e260   512  sub csp, jssp, #0x10 (16)
0xffff8bd6e264   516  stp x10, x0, [jssp, #-16]!
0xffff8bd6e268   520  movz x0, #0x2
0xffff8bd6e26c   524  movz x1, #0x5b88
0xffff8bd6e270   528  movk x1, #0xe2, lsl #16
0xffff8bd6e274   532  ldr x16, pc+124 (addr 0x0000ffff8bd6e2f0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd6e278   536  blr x16
0xffff8bd6e27c   540  str x0, [jssp, #24]
0xffff8bd6e280   544  ldr x16, pc+120 (addr 0x0000ffff8bd6e2f8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd6e284   548  blr x16
0xffff8bd6e288   552  ldr lr, [jssp, #16]
0xffff8bd6e28c   556  ldp xzr, fp, [jssp], #24
0xffff8bd6e290   560  b #-0x210 (addr 0xffff8bd6e080)
0xffff8bd6e294   564  5800035f       constant pool begin (num_const = 26)    ;; constant pool
0xffff8bd6e298   568  d63f03e0       constant
0xffff8bd6e29c   572  d503201f       constant
0xffff8bd6e2a0   576  26c04201       constant
0xffff8bd6e2a4   580  00000000       constant
0xffff8bd6e2a8   584  26c04201       constant
0xffff8bd6e2ac   588  00000000       constant
0xffff8bd6e2b0   592  26c04201       constant
0xffff8bd6e2b4   596  00000000       constant
0xffff8bd6e2b8   600  26c04519       constant
0xffff8bd6e2bc   604  00000000       constant
0xffff8bd6e2c0   608  8bd2d2c0       constant
0xffff8bd6e2c4   612  0000ffff       constant
0xffff8bd6e2c8   616  26c04201       constant
0xffff8bd6e2cc   620  00000000       constant
0xffff8bd6e2d0   624  8bd2daa0       constant
0xffff8bd6e2d4   628  0000ffff       constant
0xffff8bd6e2d8   632  26c04241       constant
0xffff8bd6e2dc   636  00000000       constant
0xffff8bd6e2e0   640  26c04241       constant
0xffff8bd6e2e4   644  00000000       constant
0xffff8bd6e2e8   648  8bd06820       constant
0xffff8bd6e2ec   652  0000ffff       constant
0xffff8bd6e2f0   656  8bd06260       constant
0xffff8bd6e2f4   660  0000ffff       constant
0xffff8bd6e2f8   664  8bd068e0       constant
0xffff8bd6e2fc   668  0000ffff       constant
0xffff8bd6e300   672  movz x16, #0x0
0xffff8bd6e304   676  sub csp, jssp, #0x10 (16)
0xffff8bd6e308   680  stp fp, lr, [jssp, #-16]!
0xffff8bd6e30c   684  bl #+0x14 (addr 0xffff8bd6e320)
0xffff8bd6e310   688  movz x16, #0x8
0xffff8bd6e314   692  sub csp, jssp, #0x10 (16)
0xffff8bd6e318   696  stp fp, lr, [jssp, #-16]!
0xffff8bd6e31c   700  bl #+0x4 (addr 0xffff8bd6e320)
0xffff8bd6e320   704  movz x17, #0xa00000000
0xffff8bd6e324   708  sub csp, jssp, #0x10 (16)
0xffff8bd6e328   712  stp x17, cp, [jssp, #-16]!
0xffff8bd6e32c   716  add fp, jssp, #0x10 (16)
0xffff8bd6e330   720  ldr x17, pc+24 (addr 0x0000ffff8bd6e348)    ;; lazy deoptimization bailout 0
0xffff8bd6e334   724  add x17, x17, x16
0xffff8bd6e338   728  br x17
0xffff8bd6e33c   732  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd6e340   736  d63f03e0       constant
0xffff8bd6e344   740  d503201f       constant
0xffff8bd6e348   744  8bb06000       constant
0xffff8bd6e34c   748  0000ffff       constant


Safepoints (size = 21)
0xffff8bd6e27c   540  000 | x2 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bd6e090  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd6e098  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd6e0a0  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd6e0a8  embedded object  (0x26c04519 <the hole>)
0xffff8bd6e17c  code target (STUB)  (0xffff8bd2d2c0)
0xffff8bd6e1b4  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd6e1ec  code target (STUB)  (0xffff8bd2daa0)
0xffff8bd6e1fc  embedded object  (0x26c04241 <undefined>)
0xffff8bd6e214  embedded object  (0x26c04241 <undefined>)
0xffff8bd6e250  code target (STUB)  (0xffff8bd06820)
0xffff8bd6e274  code target (STUB)  (0xffff8bd06260)
0xffff8bd6e280  code target (STUB)  (0xffff8bd068e0)
0xffff8bd6e294  constant pool (size 108)
0xffff8bd6e330  runtime entry
0xffff8bd6e33c  constant pool (size 20)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd71c60     0  ldur x0, [x1, #-1]
0xffff8bd71c64     4  ldur x0, [x0, #47]
0xffff8bd71c68     8  movz x16, #0x737
0xffff8bd71c6c    12  ldr x0, [x0, x16]
0xffff8bd71c70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd71ce0     0  ldur x0, [x1, #-1]
0xffff8bd71ce4     4  ldur x0, [x0, #47]
0xffff8bd71ce8     8  movz x16, #0x74f
0xffff8bd71cec    12  ldr x0, [x0, x16]
0xffff8bd71cf0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd71d60     0  ldur x0, [x1, #-1]
0xffff8bd71d64     4  ldur x0, [x0, #47]
0xffff8bd71d68     8  movz x16, #0x767
0xffff8bd71d6c    12  ldr x0, [x0, x16]
0xffff8bd71d70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bd71de0     0  ldur x0, [x1, #7]
0xffff8bd71de4     4  ldur x0, [x0, #191]
0xffff8bd71de8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bd71e60     0  ldur x0, [x1, #7]
0xffff8bd71e64     4  ldur x0, [x0, #199]
0xffff8bd71e68     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 317)
0xffff8bd722e0     0  movz x2, #0xe2c0
0xffff8bd722e4     4  movk x2, #0x2cb8, lsl #16
0xffff8bd722e8     8  ldp x3, x0, [x2]
0xffff8bd722ec    12  adds x16, x3, #0x50 (80)
0xffff8bd722f0    16  ccmp x16, x0, #nzCv, lo
0xffff8bd722f4    20  b.hi #+0x5c (addr 0xffff8bd72350)
0xffff8bd722f8    24  str x16, [x2]
0xffff8bd722fc    28  orr x3, x3, #0x1
0xffff8bd72300    32  ldr x0, pc+192 (addr 0x0000ffff8bd723c0)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd72304    36  stur x0, [x3, #-1]
0xffff8bd72308    40  movz x0, #0x800000000
0xffff8bd7230c    44  stur x0, [x3, #7]
0xffff8bd72310    48  stur x1, [x3, #15]
0xffff8bd72314    52  stur cp, [x3, #23]
0xffff8bd72318    56  ldr x0, pc+176 (addr 0x0000ffff8bd723c8)    ;; object: 0x26c04519 <the hole>
0xffff8bd7231c    60  stur x0, [x3, #31]
0xffff8bd72320    64  ldur x0, [cp, #39]
0xffff8bd72324    68  stur x0, [x3, #39]
0xffff8bd72328    72  ldr x0, pc+168 (addr 0x0000ffff8bd723d0)    ;; object: 0x26c04241 <undefined>
0xffff8bd7232c    76  stur x0, [x3, #47]
0xffff8bd72330    80  ldr x0, pc+168 (addr 0x0000ffff8bd723d8)    ;; object: 0x26c04241 <undefined>
0xffff8bd72334    84  stur x0, [x3, #55]
0xffff8bd72338    88  ldr x0, pc+168 (addr 0x0000ffff8bd723e0)    ;; object: 0x26c04241 <undefined>
0xffff8bd7233c    92  stur x0, [x3, #63]
0xffff8bd72340    96  ldr x0, pc+168 (addr 0x0000ffff8bd723e8)    ;; object: 0x26c04241 <undefined>
0xffff8bd72344   100  stur x0, [x3, #71]
0xffff8bd72348   104  mov x0, x3
0xffff8bd7234c   108  ret
0xffff8bd72350   112  sub csp, jssp, #0x10 (16)
0xffff8bd72354   116  stp fp, lr, [jssp, #-16]!
0xffff8bd72358   120  movz fp, #0xa00000000
0xffff8bd7235c   124  sub csp, jssp, #0x8 (8)
0xffff8bd72360   128  str fp, [jssp, #-8]!
0xffff8bd72364   132  add fp, jssp, #0x8 (8)
0xffff8bd72368   136  movz x3, #0x0
0xffff8bd7236c   140  mov x16, lr
0xffff8bd72370   144  ldr x17, pc+128 (addr 0x0000ffff8bd723f0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd72374   148  blr x17
0xffff8bd72378   152  movz x0, #0x5000000000
0xffff8bd7237c   156  movz x10, #0x0
0xffff8bd72380   160  sub csp, jssp, #0x10 (16)
0xffff8bd72384   164  stp x10, x0, [jssp, #-16]!
0xffff8bd72388   168  movz x0, #0x2
0xffff8bd7238c   172  movz x1, #0x5b88
0xffff8bd72390   176  movk x1, #0xe2, lsl #16
0xffff8bd72394   180  ldr x16, pc+100 (addr 0x0000ffff8bd723f8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd72398   184  blr x16
0xffff8bd7239c   188  str x0, [jssp, #24]
0xffff8bd723a0   192  ldr x16, pc+96 (addr 0x0000ffff8bd72400)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd723a4   196  blr x16
0xffff8bd723a8   200  ldr lr, [jssp, #16]
0xffff8bd723ac   204  ldp xzr, fp, [jssp], #24
0xffff8bd723b0   208  b #-0xb0 (addr 0xffff8bd72300)
0xffff8bd723b4   212  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff8bd723b8   216  d63f03e0       constant
0xffff8bd723bc   220  d503201f       constant
0xffff8bd723c0   224  5f506149       constant
0xffff8bd723c4   228  00000000       constant
0xffff8bd723c8   232  26c04519       constant
0xffff8bd723cc   236  00000000       constant
0xffff8bd723d0   240  26c04241       constant
0xffff8bd723d4   244  00000000       constant
0xffff8bd723d8   248  26c04241       constant
0xffff8bd723dc   252  00000000       constant
0xffff8bd723e0   256  26c04241       constant
0xffff8bd723e4   260  00000000       constant
0xffff8bd723e8   264  26c04241       constant
0xffff8bd723ec   268  00000000       constant
0xffff8bd723f0   272  8bd06820       constant
0xffff8bd723f4   276  0000ffff       constant
0xffff8bd723f8   280  8bd06260       constant
0xffff8bd723fc   284  0000ffff       constant
0xffff8bd72400   288  8bd068e0       constant
0xffff8bd72404   292  0000ffff       constant


Safepoints (size = 21)
0xffff8bd7239c   188  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 15)
0xffff8bd72300  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd72318  embedded object  (0x26c04519 <the hole>)
0xffff8bd72328  embedded object  (0x26c04241 <undefined>)
0xffff8bd72330  embedded object  (0x26c04241 <undefined>)
0xffff8bd72338  embedded object  (0x26c04241 <undefined>)
0xffff8bd72340  embedded object  (0x26c04241 <undefined>)
0xffff8bd72370  code target (STUB)  (0xffff8bd06820)
0xffff8bd72394  code target (STUB)  (0xffff8bd06260)
0xffff8bd723a0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd723b4  constant pool (size 84)


kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 1
type = NORMAL
name = ToBooleanICStub(Undefined)
compiler = crankshaft
Instructions (size = 128)
0xffff8bd729c0     0  ldr x16, [x26, #40]
0xffff8bd729c4     4  cmp x0, x16
0xffff8bd729c8     8  b.eq #+0x8 (addr 0xffff8bd729d0)
0xffff8bd729cc    12  b #+0x2c (addr 0xffff8bd729f8)
0xffff8bd729d0    16  ldr x0, pc+24 (addr 0x0000ffff8bd729e8)    ;; object: 0x26c042b1 <false>
0xffff8bd729d4    20  ret
0xffff8bd729d8    24  ldr x0, pc+24 (addr 0x0000ffff8bd729f0)    ;; object: 0x26c04281 <true>
0xffff8bd729dc    28  ret
0xffff8bd729e0    32  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd729e4    36  d63f03e0       constant
0xffff8bd729e8    40  26c042b1       constant
0xffff8bd729ec    44  00000000       constant
0xffff8bd729f0    48  26c04281       constant
0xffff8bd729f4    52  00000000       constant
0xffff8bd729f8    56  movz x16, #0x0
0xffff8bd729fc    60  sub csp, jssp, #0x10 (16)
0xffff8bd72a00    64  stp fp, lr, [jssp, #-16]!
0xffff8bd72a04    68  bl #+0x4 (addr 0xffff8bd72a08)
0xffff8bd72a08    72  movz x17, #0xa00000000
0xffff8bd72a0c    76  sub csp, jssp, #0x10 (16)
0xffff8bd72a10    80  stp x17, cp, [jssp, #-16]!
0xffff8bd72a14    84  add fp, jssp, #0x10 (16)
0xffff8bd72a18    88  ldr x17, pc+24 (addr 0x0000ffff8bd72a30)    ;; lazy deoptimization bailout 0
0xffff8bd72a1c    92  add x17, x17, x16
0xffff8bd72a20    96  br x17
0xffff8bd72a24   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd72a28   104  d63f03e0       constant
0xffff8bd72a2c   108  d503201f       constant
0xffff8bd72a30   112  8bb06000       constant
0xffff8bd72a34   116  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd729d0  embedded object  (0x26c042b1 <false>)
0xffff8bd729d8  embedded object  (0x26c04281 <true>)
0xffff8bd729e0  constant pool (size 24)
0xffff8bd72a18  runtime entry
0xffff8bd72a24  constant pool (size 20)


kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff8bd72aa0     0  mov x2, x0
0xffff8bd72aa4     4  stur x2, [x1, #23]
0xffff8bd72aa8     8  tbz w2, #0, #+0x34 (addr 0xffff8bd72adc)
0xffff8bd72aac    12  add x3, x1, #0x17 (23)
0xffff8bd72ab0    16  and x2, x2, #0xfffffffffff00000
0xffff8bd72ab4    20  ldr x2, [x2, #8]
0xffff8bd72ab8    24  tbz w2, #1, #+0x24 (addr 0xffff8bd72adc)
0xffff8bd72abc    28  and x2, x1, #0xfffffffffff00000
0xffff8bd72ac0    32  ldr x2, [x2, #8]
0xffff8bd72ac4    36  tbz w2, #2, #+0x18 (addr 0xffff8bd72adc)
0xffff8bd72ac8    40  sub csp, jssp, #0x8 (8)
0xffff8bd72acc    44  str lr, [jssp, #-8]!
0xffff8bd72ad0    48  ldr x16, pc+24 (addr 0x0000ffff8bd72ae8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd72ad4    52  blr x16
0xffff8bd72ad8    56  ldr lr, [jssp], #8
0xffff8bd72adc    60  ret
0xffff8bd72ae0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd72ae4    68  d63f03e0       constant
0xffff8bd72ae8    72  8bd170c0       constant
0xffff8bd72aec    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 7)
0xffff8bd72ad0  code target (STUB)  (0xffff8bd170c0)
0xffff8bd72ae0  constant pool (size 16)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = EQ
name = CompareICStub
compiler = unknown
Instructions (size = 152)
0xffff8bd78bc0     0  orr x16, x0, x1
0xffff8bd78bc4     4  tbnz w16, #0, #+0xc (addr 0xffff8bd78bd0)
0xffff8bd78bc8     8  sub x0, x0, x1
0xffff8bd78bcc    12  ret
0xffff8bd78bd0    16  movz x16, #0xc00000000
0xffff8bd78bd4    20  sub csp, jssp, #0x10 (16)
0xffff8bd78bd8    24  stp fp, lr, [jssp, #-16]!
0xffff8bd78bdc    28  sub csp, jssp, #0x10 (16)
0xffff8bd78be0    32  str x16, [jssp, #-8]!
0xffff8bd78be4    36  ldr x17, pc+92 (addr 0x0000ffff8bd78c40)    ;; object: 0xffff8bd78b61 <Code: COMPARE_IC>
0xffff8bd78be8    40  sub csp, jssp, #0x10 (16)
0xffff8bd78bec    44  str x17, [jssp, #-8]!
0xffff8bd78bf0    48  add fp, jssp, #0x10 (16)
0xffff8bd78bf4    52  sub csp, jssp, #0x18 (24)
0xffff8bd78bf8    56  stp lr, x0, [jssp, #-24]!
0xffff8bd78bfc    60  str x1, [jssp, #16]
0xffff8bd78c00    64  movz x10, #0x2d00000000
0xffff8bd78c04    68  sub csp, jssp, #0x18 (24)
0xffff8bd78c08    72  stp x10, x0, [jssp, #-24]!
0xffff8bd78c0c    76  str x1, [jssp, #16]
0xffff8bd78c10    80  movz x0, #0x3
0xffff8bd78c14    84  ldr x1, pc+52 (addr 0x0000ffff8bd78c48)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd78c18    88  ldr x16, pc+56 (addr 0x0000ffff8bd78c50)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd78c1c    92  blr x16
0xffff8bd78c20    96  add x11, x0, #0x5f (95)
0xffff8bd78c24   100  ldr x1, [jssp, #16]
0xffff8bd78c28   104  ldp lr, x0, [jssp], #24
0xffff8bd78c2c   108  mov jssp, fp
0xffff8bd78c30   112  ldp fp, lr, [jssp], #16
0xffff8bd78c34   116  br x11
0xffff8bd78c38   120  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd78c3c   124  d63f03e0       constant
0xffff8bd78c40   128  8bd78b61       constant
0xffff8bd78c44   132  0000ffff       constant
0xffff8bd78c48   136  00c8a980       constant
0xffff8bd78c4c   140  00000000       constant
0xffff8bd78c50   144  8bd06060       constant
0xffff8bd78c54   148  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd78be4  embedded object  (0xffff8bd78b61 <Code: COMPARE_IC>)
0xffff8bd78c14  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd78c18  code target (STUB)  (0xffff8bd06060)
0xffff8bd78c38  constant pool (size 32)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 120)
0xffff8bd78cc0     0  sub csp, jssp, #0x8 (8)
0xffff8bd78cc4     4  str x3, [jssp, #-8]!
0xffff8bd78cc8     8  sub csp, jssp, #0x8 (8)
0xffff8bd78ccc    12  str x0, [jssp, #-8]!
0xffff8bd78cd0    16  ldr x0, pc+72 (addr 0x0000ffff8bd78d18)    ;; object: 0x26cad1b1 Cell for 0
0xffff8bd78cd4    20  ldur x0, [x0, #7]
0xffff8bd78cd8    24  cmp x0, #0x0 (0)
0xffff8bd78cdc    28  b.ne #+0x14 (addr 0xffff8bd78cf0)
0xffff8bd78ce0    32  ldr x3, pc+64 (addr 0x0000ffff8bd78d20)    ;; object: 0x26cad1c1 WeakCell for 0x5657bb31 <an Object with map 0x5f513f01>
0xffff8bd78ce4    36  ldur x3, [x3, #7]
0xffff8bd78ce8    40  tbz w3, #0, #+0x8 (addr 0xffff8bd78cf0)
0xffff8bd78cec    44  b #+0x14 (addr 0xffff8bd78d00)
0xffff8bd78cf0    48  ldr x0, [jssp], #8
0xffff8bd78cf4    52  ldr x3, [jssp], #8
0xffff8bd78cf8    56  ldr x16, pc+48 (addr 0x0000ffff8bd78d28)    ;; code: BUILTIN
0xffff8bd78cfc    60  br x16
0xffff8bd78d00    64  add jssp, jssp, #0x10 (16)
0xffff8bd78d04    68  mov x1, x3
0xffff8bd78d08    72  ldr x16, pc+40 (addr 0x0000ffff8bd78d30)    ;; code: HANDLER, LoadConstantStub, minor: 0
0xffff8bd78d0c    76  br x16
0xffff8bd78d10    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bd78d14    84  d63f03e0       constant
0xffff8bd78d18    88  26cad1b1       constant
0xffff8bd78d1c    92  00000000       constant
0xffff8bd78d20    96  26cad1c1       constant
0xffff8bd78d24   100  00000000       constant
0xffff8bd78d28   104  8bd222e0       constant
0xffff8bd78d2c   108  0000ffff       constant
0xffff8bd78d30   112  8bd431a0       constant
0xffff8bd78d34   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd78cd0  embedded object  (0x26cad1b1 Cell for 0)
0xffff8bd78ce0  embedded object  (0x26cad1c1 WeakCell for 0x5657bb31 <an Object with map 0x5f513f01>)
0xffff8bd78cf8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd78d08  code target (HANDLER)  (0xffff8bd431a0)
0xffff8bd78d10  constant pool (size 40)

kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bd78da0     0  ldur x0, [x1, #31]
0xffff8bd78da4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bd78e20     0  ldur x0, [x1, #39]
0xffff8bd78e24     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff8bd78ea0     0  mov x5, x0
0xffff8bd78ea4     4  tbnz w5, #0, #+0xc (addr 0xffff8bd78eb0)
0xffff8bd78ea8     8  stur x5, [x1, #31]
0xffff8bd78eac    12  ret
0xffff8bd78eb0    16  movz x16, #0x0
0xffff8bd78eb4    20  sub csp, jssp, #0x10 (16)
0xffff8bd78eb8    24  stp fp, lr, [jssp, #-16]!
0xffff8bd78ebc    28  bl #+0x4 (addr 0xffff8bd78ec0)
0xffff8bd78ec0    32  movz x17, #0xa00000000
0xffff8bd78ec4    36  sub csp, jssp, #0x10 (16)
0xffff8bd78ec8    40  stp x17, cp, [jssp, #-16]!
0xffff8bd78ecc    44  add fp, jssp, #0x10 (16)
0xffff8bd78ed0    48  ldr x17, pc+24 (addr 0x0000ffff8bd78ee8)    ;; lazy deoptimization bailout 0
0xffff8bd78ed4    52  add x17, x17, x16
0xffff8bd78ed8    56  br x17
0xffff8bd78edc    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd78ee0    64  d63f03e0       constant
0xffff8bd78ee4    68  d503201f       constant
0xffff8bd78ee8    72  8bb06000       constant
0xffff8bd78eec    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff8bd78ed0  runtime entry
0xffff8bd78edc  constant pool (size 20)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd78f60     0  ldur x0, [x1, #-1]
0xffff8bd78f64     4  ldur x0, [x0, #47]
0xffff8bd78f68     8  movz x16, #0xdc7
0xffff8bd78f6c    12  ldr x0, [x0, x16]
0xffff8bd78f70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd78fe0     0  ldur x0, [x1, #-1]
0xffff8bd78fe4     4  ldur x0, [x0, #47]
0xffff8bd78fe8     8  movz x16, #0x6a7
0xffff8bd78fec    12  ldr x0, [x0, x16]
0xffff8bd78ff0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd79060     0  ldur x0, [x1, #-1]
0xffff8bd79064     4  ldur x0, [x0, #47]
0xffff8bd79068     8  movz x16, #0x6bf
0xffff8bd7906c    12  ldr x0, [x0, x16]
0xffff8bd79070    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd790e0     0  ldur x0, [x1, #-1]
0xffff8bd790e4     4  ldur x0, [x0, #47]
0xffff8bd790e8     8  movz x16, #0x6ef
0xffff8bd790ec    12  ldr x0, [x0, x16]
0xffff8bd790f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd79160     0  ldur x0, [x1, #-1]
0xffff8bd79164     4  ldur x0, [x0, #47]
0xffff8bd79168     8  movz x16, #0xddf
0xffff8bd7916c    12  ldr x0, [x0, x16]
0xffff8bd79170    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd791e0     0  ldur x0, [x1, #-1]
0xffff8bd791e4     4  ldur x0, [x0, #47]
0xffff8bd791e8     8  movz x16, #0xdf7
0xffff8bd791ec    12  ldr x0, [x0, x16]
0xffff8bd791f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd79260     0  ldur x0, [x1, #-1]
0xffff8bd79264     4  ldur x0, [x0, #47]
0xffff8bd79268     8  movz x16, #0xe27
0xffff8bd7926c    12  ldr x0, [x0, x16]
0xffff8bd79270    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd792e0     0  ldur x0, [x1, #-1]
0xffff8bd792e4     4  ldur x0, [x0, #47]
0xffff8bd792e8     8  movz x16, #0xd1f
0xffff8bd792ec    12  ldr x0, [x0, x16]
0xffff8bd792f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd79360     0  ldur x0, [x1, #-1]
0xffff8bd79364     4  ldur x0, [x0, #47]
0xffff8bd79368     8  movz x16, #0xd37
0xffff8bd7936c    12  ldr x0, [x0, x16]
0xffff8bd79370    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd793e0     0  ldur x0, [x1, #-1]
0xffff8bd793e4     4  ldur x0, [x0, #47]
0xffff8bd793e8     8  movz x16, #0x647
0xffff8bd793ec    12  ldr x0, [x0, x16]
0xffff8bd793f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd79460     0  ldur x0, [x1, #-1]
0xffff8bd79464     4  ldur x0, [x0, #47]
0xffff8bd79468     8  movz x16, #0x65f
0xffff8bd7946c    12  ldr x0, [x0, x16]
0xffff8bd79470    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd794e0     0  ldur x0, [x1, #-1]
0xffff8bd794e4     4  ldur x0, [x0, #47]
0xffff8bd794e8     8  movz x16, #0x71f
0xffff8bd794ec    12  ldr x0, [x0, x16]
0xffff8bd794f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd79560     0  ldur x0, [x1, #7]
0xffff8bd79564     4  movz x16, #0x1ef
0xffff8bd79568     8  ldr x0, [x0, x16]
0xffff8bd7956c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd795e0     0  ldur x0, [x1, #7]
0xffff8bd795e4     4  movz x16, #0x1f7
0xffff8bd795e8     8  ldr x0, [x0, x16]
0xffff8bd795ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd79660     0  ldur x0, [x1, #-1]
0xffff8bd79664     4  ldur x0, [x0, #47]
0xffff8bd79668     8  movz x16, #0xd7f
0xffff8bd7966c    12  ldr x0, [x0, x16]
0xffff8bd79670    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd796e0     0  ldur x0, [x1, #-1]
0xffff8bd796e4     4  ldur x0, [x0, #47]
0xffff8bd796e8     8  movz x16, #0xd97
0xffff8bd796ec    12  ldr x0, [x0, x16]
0xffff8bd796f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd79760     0  ldur x0, [x1, #-1]
0xffff8bd79764     4  ldur x0, [x0, #47]
0xffff8bd79768     8  movz x16, #0xdaf
0xffff8bd7976c    12  ldr x0, [x0, x16]
0xffff8bd79770    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd797e0     0  ldur x0, [x1, #-1]
0xffff8bd797e4     4  ldur x0, [x0, #47]
0xffff8bd797e8     8  movz x16, #0xbcf
0xffff8bd797ec    12  ldr x0, [x0, x16]
0xffff8bd797f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd79860     0  ldur x0, [x1, #-1]
0xffff8bd79864     4  ldur x0, [x0, #47]
0xffff8bd79868     8  movz x16, #0xbe7
0xffff8bd7986c    12  ldr x0, [x0, x16]
0xffff8bd79870    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd798e0     0  ldur x0, [x1, #-1]
0xffff8bd798e4     4  ldur x0, [x0, #47]
0xffff8bd798e8     8  movz x16, #0xbff
0xffff8bd798ec    12  ldr x0, [x0, x16]
0xffff8bd798f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd79960     0  ldur x0, [x1, #-1]
0xffff8bd79964     4  ldur x0, [x0, #47]
0xffff8bd79968     8  movz x16, #0xc17
0xffff8bd7996c    12  ldr x0, [x0, x16]
0xffff8bd79970    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd799e0     0  ldur x0, [x1, #-1]
0xffff8bd799e4     4  ldur x0, [x0, #47]
0xffff8bd799e8     8  movz x16, #0xc2f
0xffff8bd799ec    12  ldr x0, [x0, x16]
0xffff8bd799f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd79a60     0  ldur x0, [x1, #-1]
0xffff8bd79a64     4  ldur x0, [x0, #47]
0xffff8bd79a68     8  movz x16, #0xc47
0xffff8bd79a6c    12  ldr x0, [x0, x16]
0xffff8bd79a70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd79ae0     0  ldur x0, [x1, #-1]
0xffff8bd79ae4     4  ldur x0, [x0, #47]
0xffff8bd79ae8     8  movz x16, #0xd4f
0xffff8bd79aec    12  ldr x0, [x0, x16]
0xffff8bd79af0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd79b60     0  ldur x0, [x1, #-1]
0xffff8bd79b64     4  ldur x0, [x0, #47]
0xffff8bd79b68     8  movz x16, #0xd67
0xffff8bd79b6c    12  ldr x0, [x0, x16]
0xffff8bd79b70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd79be0     0  ldur x0, [x1, #-1]
0xffff8bd79be4     4  ldur x0, [x0, #47]
0xffff8bd79be8     8  movz x16, #0x77f
0xffff8bd79bec    12  ldr x0, [x0, x16]
0xffff8bd79bf0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd79c60     0  ldur x0, [x1, #-1]
0xffff8bd79c64     4  ldur x0, [x0, #47]
0xffff8bd79c68     8  movz x16, #0x677
0xffff8bd79c6c    12  ldr x0, [x0, x16]
0xffff8bd79c70    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd79ce0     0  ldur x0, [x1, #7]
0xffff8bd79ce4     4  movz x16, #0x19f
0xffff8bd79ce8     8  ldr x0, [x0, x16]
0xffff8bd79cec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd7b1c0     0  ldur x0, [x1, #-1]
0xffff8bd7b1c4     4  ldur x0, [x0, #47]
0xffff8bd7b1c8     8  movz x16, #0x20f
0xffff8bd7b1cc    12  ldr x0, [x0, x16]
0xffff8bd7b1d0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd7b240     0  ldur x0, [x1, #-1]
0xffff8bd7b244     4  ldur x0, [x0, #47]
0xffff8bd7b248     8  movz x16, #0x227
0xffff8bd7b24c    12  ldr x0, [x0, x16]
0xffff8bd7b250    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd7b2c0     0  ldur x0, [x1, #-1]
0xffff8bd7b2c4     4  ldur x0, [x0, #47]
0xffff8bd7b2c8     8  movz x16, #0x23f
0xffff8bd7b2cc    12  ldr x0, [x0, x16]
0xffff8bd7b2d0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd7b340     0  ldur x0, [x1, #-1]
0xffff8bd7b344     4  ldur x0, [x0, #47]
0xffff8bd7b348     8  movz x16, #0x257
0xffff8bd7b34c    12  ldr x0, [x0, x16]
0xffff8bd7b350    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd7b3c0     0  ldur x0, [x1, #-1]
0xffff8bd7b3c4     4  ldur x0, [x0, #47]
0xffff8bd7b3c8     8  movz x16, #0x26f
0xffff8bd7b3cc    12  ldr x0, [x0, x16]
0xffff8bd7b3d0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd7b440     0  ldur x0, [x1, #-1]
0xffff8bd7b444     4  ldur x0, [x0, #47]
0xffff8bd7b448     8  movz x16, #0x287
0xffff8bd7b44c    12  ldr x0, [x0, x16]
0xffff8bd7b450    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bd7b4c0     0  ldur x0, [x1, #7]
0xffff8bd7b4c4     4  ldur x0, [x0, #135]
0xffff8bd7b4c8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bd7b540     0  ldur x0, [x1, #7]
0xffff8bd7b544     4  ldur x0, [x0, #151]
0xffff8bd7b548     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 3
type = NORMAL
name = ToBooleanICStub(Undefined,Bool)
compiler = crankshaft
Instructions (size = 152)
0xffff8bd7b5c0     0  ldr x16, [x26, #40]
0xffff8bd7b5c4     4  cmp x0, x16
0xffff8bd7b5c8     8  b.eq #+0x20 (addr 0xffff8bd7b5e8)
0xffff8bd7b5cc    12  ldr x16, [x26, #64]
0xffff8bd7b5d0    16  cmp x0, x16
0xffff8bd7b5d4    20  b.eq #+0x1c (addr 0xffff8bd7b5f0)
0xffff8bd7b5d8    24  ldr x16, [x26, #72]
0xffff8bd7b5dc    28  cmp x0, x16
0xffff8bd7b5e0    32  b.eq #+0x8 (addr 0xffff8bd7b5e8)
0xffff8bd7b5e4    36  b #+0x2c (addr 0xffff8bd7b610)
0xffff8bd7b5e8    40  ldr x0, pc+24 (addr 0x0000ffff8bd7b600)    ;; object: 0x26c042b1 <false>
0xffff8bd7b5ec    44  ret
0xffff8bd7b5f0    48  ldr x0, pc+24 (addr 0x0000ffff8bd7b608)    ;; object: 0x26c04281 <true>
0xffff8bd7b5f4    52  ret
0xffff8bd7b5f8    56  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd7b5fc    60  d63f03e0       constant
0xffff8bd7b600    64  26c042b1       constant
0xffff8bd7b604    68  00000000       constant
0xffff8bd7b608    72  26c04281       constant
0xffff8bd7b60c    76  00000000       constant
0xffff8bd7b610    80  movz x16, #0x0
0xffff8bd7b614    84  sub csp, jssp, #0x10 (16)
0xffff8bd7b618    88  stp fp, lr, [jssp, #-16]!
0xffff8bd7b61c    92  bl #+0x4 (addr 0xffff8bd7b620)
0xffff8bd7b620    96  movz x17, #0xa00000000
0xffff8bd7b624   100  sub csp, jssp, #0x10 (16)
0xffff8bd7b628   104  stp x17, cp, [jssp, #-16]!
0xffff8bd7b62c   108  add fp, jssp, #0x10 (16)
0xffff8bd7b630   112  ldr x17, pc+24 (addr 0x0000ffff8bd7b648)    ;; lazy deoptimization bailout 0
0xffff8bd7b634   116  add x17, x17, x16
0xffff8bd7b638   120  br x17
0xffff8bd7b63c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd7b640   128  d63f03e0       constant
0xffff8bd7b644   132  d503201f       constant
0xffff8bd7b648   136  8bb06000       constant
0xffff8bd7b64c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd7b5e8  embedded object  (0x26c042b1 <false>)
0xffff8bd7b5f0  embedded object  (0x26c04281 <true>)
0xffff8bd7b5f8  constant pool (size 24)
0xffff8bd7b630  runtime entry
0xffff8bd7b63c  constant pool (size 20)


kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bd7c000     0  ldur x0, [x1, #7]
0xffff8bd7c004     4  ldur x0, [x0, #119]
0xffff8bd7c008     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff8bd7c540     0  sub csp, jssp, #0x8 (8)
0xffff8bd7c544     4  str x3, [jssp, #-8]!
0xffff8bd7c548     8  sub csp, jssp, #0x8 (8)
0xffff8bd7c54c    12  str x4, [jssp, #-8]!
0xffff8bd7c550    16  ldr x3, pc+88 (addr 0x0000ffff8bd7c5a8)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bd7c554    20  ldur x3, [x3, #7]
0xffff8bd7c558    24  cmp x3, #0x0 (0)
0xffff8bd7c55c    28  b.ne #+0x30 (addr 0xffff8bd7c58c)
0xffff8bd7c560    32  tbz w0, #0, #+0x2c (addr 0xffff8bd7c58c)
0xffff8bd7c564    36  ldr x5, pc+76 (addr 0x0000ffff8bd7c5b0)    ;; object: 0x26cb0739 WeakCell for 0x5f516479 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd7c568    40  ldur x5, [x5, #7]
0xffff8bd7c56c    44  tbz w5, #0, #+0x20 (addr 0xffff8bd7c58c)
0xffff8bd7c570    48  ldursw x4, [x5, #15]
0xffff8bd7c574    52  tbnz w4, #23, #+0x18 (addr 0xffff8bd7c58c)
0xffff8bd7c578    56  ldr x4, [jssp], #8
0xffff8bd7c57c    60  ldr x3, [jssp], #8
0xffff8bd7c580    64  ldr x2, pc+56 (addr 0x0000ffff8bd7c5b8)    ;; object: 0x26c05209 <String[4]: next>
0xffff8bd7c584    68  ldr x16, pc+60 (addr 0x0000ffff8bd7c5c0)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff8bd7c588    72  br x16
0xffff8bd7c58c    76  ldr x2, pc+60 (addr 0x0000ffff8bd7c5c8)    ;; object: 0x26c05209 <String[4]: next>
0xffff8bd7c590    80  ldr x4, [jssp], #8
0xffff8bd7c594    84  ldr x3, [jssp], #8
0xffff8bd7c598    88  ldr x16, pc+56 (addr 0x0000ffff8bd7c5d0)    ;; code: BUILTIN
0xffff8bd7c59c    92  br x16
0xffff8bd7c5a0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd7c5a4   100  d63f03e0       constant
0xffff8bd7c5a8   104  26c5b0f1       constant
0xffff8bd7c5ac   108  00000000       constant
0xffff8bd7c5b0   112  26cb0739       constant
0xffff8bd7c5b4   116  00000000       constant
0xffff8bd7c5b8   120  26c05209       constant
0xffff8bd7c5bc   124  00000000       constant
0xffff8bd7c5c0   128  8bd38860       constant
0xffff8bd7c5c4   132  0000ffff       constant
0xffff8bd7c5c8   136  26c05209       constant
0xffff8bd7c5cc   140  00000000       constant
0xffff8bd7c5d0   144  8bd22420       constant
0xffff8bd7c5d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bd7c550  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bd7c564  embedded object  (0x26cb0739 WeakCell for 0x5f516479 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd7c580  embedded object  (0x26c05209 <String[4]: next>)
0xffff8bd7c584  code target (HANDLER)  (0xffff8bd38860)
0xffff8bd7c58c  embedded object  (0x26c05209 <String[4]: next>)
0xffff8bd7c598  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd7c5a0  constant pool (size 56)

kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd7cc40     0  ldur x0, [x1, #-1]
0xffff8bd7cc44     4  ldur x0, [x0, #47]
0xffff8bd7cc48     8  movz x16, #0x1c7
0xffff8bd7cc4c    12  ldr x0, [x0, x16]
0xffff8bd7cc50    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd7ccc0     0  ldur x0, [x1, #-1]
0xffff8bd7ccc4     4  ldur x0, [x0, #47]
0xffff8bd7ccc8     8  movz x16, #0x1df
0xffff8bd7cccc    12  ldr x0, [x0, x16]
0xffff8bd7ccd0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd7cd40     0  ldur x0, [x1, #-1]
0xffff8bd7cd44     4  ldur x0, [x0, #47]
0xffff8bd7cd48     8  movz x16, #0x1f7
0xffff8bd7cd4c    12  ldr x0, [x0, x16]
0xffff8bd7cd50    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*INTERNALIZED_STRING -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff8bd7d920     0  orr x16, x1, x0
0xffff8bd7d924     4  tbnz w16, #0, #+0x10 (addr 0xffff8bd7d934)
0xffff8bd7d928     8  asr x1, x1, #32
0xffff8bd7d92c    12  sub x0, x1, x0, asr #32
0xffff8bd7d930    16  ret
0xffff8bd7d934    20  cmp x0, x1
0xffff8bd7d938    24  b.ne #+0x30 (addr 0xffff8bd7d968)
0xffff8bd7d93c    28  ldur x16, [x0, #-1]
0xffff8bd7d940    32  ldr x17, [x26, #120]
0xffff8bd7d944    36  cmp x16, x17
0xffff8bd7d948    40  b.eq #+0xc (addr 0xffff8bd7d954)
0xffff8bd7d94c    44  movz x0, #0x0
0xffff8bd7d950    48  ret
0xffff8bd7d954    52  ldur d0, [x0, #7]
0xffff8bd7d958    56  fcmp d0, d0
0xffff8bd7d95c    60  b.vc #-0x10 (addr 0xffff8bd7d94c)
0xffff8bd7d960    64  movn x0, #0x0
0xffff8bd7d964    68  ret
0xffff8bd7d968    72  and x16, x1, x0
0xffff8bd7d96c    76  tbnz w16, #0, #+0x64 (addr 0xffff8bd7d9d0)
0xffff8bd7d970    80  tbz w0, #0, #+0x24 (addr 0xffff8bd7d994)
0xffff8bd7d974    84  ldur x16, [x0, #-1]
0xffff8bd7d978    88  ldr x17, [x26, #120]
0xffff8bd7d97c    92  cmp x16, x17
0xffff8bd7d980    96  b.eq #+0x8 (addr 0xffff8bd7d988)
0xffff8bd7d984   100  ret
0xffff8bd7d988   104  ldur d0, [x0, #7]
0xffff8bd7d98c   108  scvtf d1, x1, #32
0xffff8bd7d990   112  b #+0x24 (addr 0xffff8bd7d9b4)
0xffff8bd7d994   116  ldur x16, [x1, #-1]
0xffff8bd7d998   120  ldr x17, [x26, #120]
0xffff8bd7d99c   124  cmp x16, x17
0xffff8bd7d9a0   128  b.eq #+0xc (addr 0xffff8bd7d9ac)
0xffff8bd7d9a4   132  movz x0, #0x1
0xffff8bd7d9a8   136  ret
0xffff8bd7d9ac   140  ldur d1, [x1, #7]
0xffff8bd7d9b0   144  scvtf d0, x0, #32
0xffff8bd7d9b4   148  fcmp d1, d0
0xffff8bd7d9b8   152  b.vs #+0x10 (addr 0xffff8bd7d9c8)
0xffff8bd7d9bc   156  cset x0, gt
0xffff8bd7d9c0   160  csinv x0, x0, xzr, ge
0xffff8bd7d9c4   164  ret
0xffff8bd7d9c8   168  movn x0, #0x0
0xffff8bd7d9cc   172  ret
0xffff8bd7d9d0   176  ldur x10, [x0, #-1]
0xffff8bd7d9d4   180  ldur x12, [x1, #-1]
0xffff8bd7d9d8   184  ldrb w11, [x10, #11]
0xffff8bd7d9dc   188  ldrb w13, [x12, #11]
0xffff8bd7d9e0   192  cmp x11, #0xb1 (177)
0xffff8bd7d9e4   196  b.lt #+0x8 (addr 0xffff8bd7d9ec)
0xffff8bd7d9e8   200  ret
0xffff8bd7d9ec   204  cmp x11, #0x83 (131)
0xffff8bd7d9f0   208  movz x16, #0x83
0xffff8bd7d9f4   212  ccmp x13, x16, #nZcv, ne
0xffff8bd7d9f8   216  movz x16, #0xb1
0xffff8bd7d9fc   220  ccmp x13, x16, #NzcV, ne
0xffff8bd7da00   224  b.ge #-0x18 (addr 0xffff8bd7d9e8)
0xffff8bd7da04   228  orr x14, x13, x11
0xffff8bd7da08   232  tst x14, #0xc0
0xffff8bd7da0c   236  b.eq #-0x24 (addr 0xffff8bd7d9e8)
0xffff8bd7da10   240  cmp x11, #0x81 (129)
0xffff8bd7da14   244  b.ne #+0x18 (addr 0xffff8bd7da2c)
0xffff8bd7da18   248  cmp x12, x10
0xffff8bd7da1c   252  b.ne #+0x10 (addr 0xffff8bd7da2c)
0xffff8bd7da20   256  ldur d1, [x1, #7]
0xffff8bd7da24   260  ldur d0, [x0, #7]
0xffff8bd7da28   264  b #-0x74 (addr 0xffff8bd7d9b4)
0xffff8bd7da2c   268  movz x16, #0x87
0xffff8bd7da30   272  and x14, x13, x16
0xffff8bd7da34   276  movz x16, #0x87
0xffff8bd7da38   280  and x15, x11, x16
0xffff8bd7da3c   284  cmp x14, #0x4 (4)
0xffff8bd7da40   288  ccmp x15, #4, #nzcv, eq
0xffff8bd7da44   292  b.ne #+0x5c (addr 0xffff8bd7daa0)
0xffff8bd7da48   296  ldur x10, [x1, #15]
0xffff8bd7da4c   300  ldur x11, [x0, #15]
0xffff8bd7da50   304  cmp x10, x11
0xffff8bd7da54   308  b.eq #+0xc (addr 0xffff8bd7da60)
0xffff8bd7da58   312  movz x0, #0x100000000
0xffff8bd7da5c   316  ret
0xffff8bd7da60   320  cbnz x10, #+0xc (addr 0xffff8bd7da6c)
0xffff8bd7da64   324  movz x0, #0x0
0xffff8bd7da68   328  ret
0xffff8bd7da6c   332  asr x10, x10, #32
0xffff8bd7da70   336  add x11, x10, #0x17 (23)
0xffff8bd7da74   340  add x1, x1, x11
0xffff8bd7da78   344  add x0, x0, x11
0xffff8bd7da7c   348  neg x10, x10
0xffff8bd7da80   352  ldrb w11, [x1, x10]
0xffff8bd7da84   356  ldrb w12, [x0, x10]
0xffff8bd7da88   360  cmp x11, x12
0xffff8bd7da8c   364  b.ne #-0x34 (addr 0xffff8bd7da58)
0xffff8bd7da90   368  add x10, x10, #0x1 (1)
0xffff8bd7da94   372  cbnz x10, #-0x14 (addr 0xffff8bd7da80)
0xffff8bd7da98   376  movz x0, #0x0
0xffff8bd7da9c   380  ret
0xffff8bd7daa0   384  movz x16, #0xc00000000
0xffff8bd7daa4   388  sub csp, jssp, #0x10 (16)
0xffff8bd7daa8   392  stp fp, lr, [jssp, #-16]!
0xffff8bd7daac   396  sub csp, jssp, #0x10 (16)
0xffff8bd7dab0   400  str x16, [jssp, #-8]!
0xffff8bd7dab4   404  ldr x17, pc+172 (addr 0x0000ffff8bd7db60)    ;; object: 0xffff8bd7d8c1 <Code: COMPARE_IC>
0xffff8bd7dab8   408  sub csp, jssp, #0x10 (16)
0xffff8bd7dabc   412  str x17, [jssp, #-8]!
0xffff8bd7dac0   416  add fp, jssp, #0x10 (16)
0xffff8bd7dac4   420  sub csp, jssp, #0x10 (16)
0xffff8bd7dac8   424  stp x0, x1, [jssp, #-16]!
0xffff8bd7dacc   428  movz x0, #0x2
0xffff8bd7dad0   432  ldr x1, pc+152 (addr 0x0000ffff8bd7db68)    ;; external reference (Runtime::StrictEqual)
0xffff8bd7dad4   436  ldr x16, pc+156 (addr 0x0000ffff8bd7db70)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd7dad8   440  blr x16
0xffff8bd7dadc   444  mov jssp, fp
0xffff8bd7dae0   448  ldp fp, lr, [jssp], #16
0xffff8bd7dae4   452  ldr x1, [x26, #64]
0xffff8bd7dae8   456  sub x0, x0, x1
0xffff8bd7daec   460  ret
0xffff8bd7daf0   464  movz x16, #0xc00000000
0xffff8bd7daf4   468  sub csp, jssp, #0x10 (16)
0xffff8bd7daf8   472  stp fp, lr, [jssp, #-16]!
0xffff8bd7dafc   476  sub csp, jssp, #0x10 (16)
0xffff8bd7db00   480  str x16, [jssp, #-8]!
0xffff8bd7db04   484  ldr x17, pc+116 (addr 0x0000ffff8bd7db78)    ;; object: 0xffff8bd7d8c1 <Code: COMPARE_IC>
0xffff8bd7db08   488  sub csp, jssp, #0x10 (16)
0xffff8bd7db0c   492  str x17, [jssp, #-8]!
0xffff8bd7db10   496  add fp, jssp, #0x10 (16)
0xffff8bd7db14   500  sub csp, jssp, #0x18 (24)
0xffff8bd7db18   504  stp lr, x0, [jssp, #-24]!
0xffff8bd7db1c   508  str x1, [jssp, #16]
0xffff8bd7db20   512  movz x10, #0x2f00000000
0xffff8bd7db24   516  sub csp, jssp, #0x18 (24)
0xffff8bd7db28   520  stp x10, x0, [jssp, #-24]!
0xffff8bd7db2c   524  str x1, [jssp, #16]
0xffff8bd7db30   528  movz x0, #0x3
0xffff8bd7db34   532  ldr x1, pc+76 (addr 0x0000ffff8bd7db80)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd7db38   536  ldr x16, pc+80 (addr 0x0000ffff8bd7db88)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd7db3c   540  blr x16
0xffff8bd7db40   544  add x11, x0, #0x5f (95)
0xffff8bd7db44   548  ldr x1, [jssp, #16]
0xffff8bd7db48   552  ldp lr, x0, [jssp], #24
0xffff8bd7db4c   556  mov jssp, fp
0xffff8bd7db50   560  ldp fp, lr, [jssp], #16
0xffff8bd7db54   564  br x11
0xffff8bd7db58   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd7db5c   572  d63f03e0       constant
0xffff8bd7db60   576  8bd7d8c1       constant
0xffff8bd7db64   580  0000ffff       constant
0xffff8bd7db68   584  00e50928       constant
0xffff8bd7db6c   588  00000000       constant
0xffff8bd7db70   592  8bd06060       constant
0xffff8bd7db74   596  0000ffff       constant
0xffff8bd7db78   600  8bd7d8c1       constant
0xffff8bd7db7c   604  0000ffff       constant
0xffff8bd7db80   608  00c8a980       constant
0xffff8bd7db84   612  00000000       constant
0xffff8bd7db88   616  8bd06060       constant
0xffff8bd7db8c   620  0000ffff       constant


RelocInfo (size = 16)
0xffff8bd7dab4  embedded object  (0xffff8bd7d8c1 <Code: COMPARE_IC>)
0xffff8bd7dad0  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff8bd7dad4  code target (STUB)  (0xffff8bd06060)
0xffff8bd7db04  embedded object  (0xffff8bd7d8c1 <Code: COMPARE_IC>)
0xffff8bd7db34  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd7db38  code target (STUB)  (0xffff8bd06060)
0xffff8bd7db58  constant pool (size 56)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = GT
name = CompareICStub
compiler = unknown
Instructions (size = 160)
0xffff8bd7e240     0  orr x16, x0, x1
0xffff8bd7e244     4  tbnz w16, #0, #+0x10 (addr 0xffff8bd7e254)
0xffff8bd7e248     8  asr x1, x1, #32
0xffff8bd7e24c    12  sub x0, x1, x0, asr #32
0xffff8bd7e250    16  ret
0xffff8bd7e254    20  movz x16, #0xc00000000
0xffff8bd7e258    24  sub csp, jssp, #0x10 (16)
0xffff8bd7e25c    28  stp fp, lr, [jssp, #-16]!
0xffff8bd7e260    32  sub csp, jssp, #0x10 (16)
0xffff8bd7e264    36  str x16, [jssp, #-8]!
0xffff8bd7e268    40  ldr x17, pc+96 (addr 0x0000ffff8bd7e2c8)    ;; object: 0xffff8bd7e1e1 <Code: COMPARE_IC>
0xffff8bd7e26c    44  sub csp, jssp, #0x10 (16)
0xffff8bd7e270    48  str x17, [jssp, #-8]!
0xffff8bd7e274    52  add fp, jssp, #0x10 (16)
0xffff8bd7e278    56  sub csp, jssp, #0x18 (24)
0xffff8bd7e27c    60  stp lr, x0, [jssp, #-24]!
0xffff8bd7e280    64  str x1, [jssp, #16]
0xffff8bd7e284    68  movz x10, #0x3200000000
0xffff8bd7e288    72  sub csp, jssp, #0x18 (24)
0xffff8bd7e28c    76  stp x10, x0, [jssp, #-24]!
0xffff8bd7e290    80  str x1, [jssp, #16]
0xffff8bd7e294    84  movz x0, #0x3
0xffff8bd7e298    88  ldr x1, pc+56 (addr 0x0000ffff8bd7e2d0)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd7e29c    92  ldr x16, pc+60 (addr 0x0000ffff8bd7e2d8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd7e2a0    96  blr x16
0xffff8bd7e2a4   100  add x11, x0, #0x5f (95)
0xffff8bd7e2a8   104  ldr x1, [jssp, #16]
0xffff8bd7e2ac   108  ldp lr, x0, [jssp], #24
0xffff8bd7e2b0   112  mov jssp, fp
0xffff8bd7e2b4   116  ldp fp, lr, [jssp], #16
0xffff8bd7e2b8   120  br x11
0xffff8bd7e2bc   124  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd7e2c0   128  d63f03e0       constant
0xffff8bd7e2c4   132  d503201f       constant
0xffff8bd7e2c8   136  8bd7e1e1       constant
0xffff8bd7e2cc   140  0000ffff       constant
0xffff8bd7e2d0   144  00c8a980       constant
0xffff8bd7e2d4   148  00000000       constant
0xffff8bd7e2d8   152  8bd06060       constant
0xffff8bd7e2dc   156  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd7e268  embedded object  (0xffff8bd7e1e1 <Code: COMPARE_IC>)
0xffff8bd7e298  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd7e29c  code target (STUB)  (0xffff8bd06060)
0xffff8bd7e2bc  constant pool (size 36)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd7f9e0     0  ldur x4, [x1, #15]
0xffff8bd7f9e4     4  ldur w5, [x1, #27]
0xffff8bd7f9e8     8  tbnz w2, #0, #+0x44 (addr 0xffff8bd7fa2c)
0xffff8bd7f9ec    12  asr x7, x2, #32
0xffff8bd7f9f0    16  cmp w7, w5
0xffff8bd7f9f4    20  b.hs #+0x60 (addr 0xffff8bd7fa54)
0xffff8bd7f9f8    24  add x5, x4, #0xf (15)
0xffff8bd7f9fc    28  ldr x6, [x5, w7, sxtw #3]
0xffff8bd7fa00    32  ldr x16, [x26, #88]
0xffff8bd7fa04    36  cmp x6, x16
0xffff8bd7fa08    40  b.ne #+0x1c (addr 0xffff8bd7fa24)
0xffff8bd7fa0c    44  ldr x6, [x26, #1160]
0xffff8bd7fa10    48  ldur x6, [x6, #7]
0xffff8bd7fa14    52  movz x16, #0x100000000
0xffff8bd7fa18    56  cmp x6, x16
0xffff8bd7fa1c    60  b.ne #+0x48 (addr 0xffff8bd7fa64)
0xffff8bd7fa20    64  ldr x6, [x26, #40]
0xffff8bd7fa24    68  mov x0, x6
0xffff8bd7fa28    72  ret
0xffff8bd7fa2c    76  ldur x16, [x2, #-1]
0xffff8bd7fa30    80  ldr x17, [x26, #120]
0xffff8bd7fa34    84  cmp x16, x17
0xffff8bd7fa38    88  b.ne #+0x3c (addr 0xffff8bd7fa74)
0xffff8bd7fa3c    92  ldur d29, [x2, #7]
0xffff8bd7fa40    96  fcvtzs w7, d29
0xffff8bd7fa44   100  scvtf d0, w7
0xffff8bd7fa48   104  fcmp d29, d0
0xffff8bd7fa4c   108  b.ne #+0x28 (addr 0xffff8bd7fa74)
0xffff8bd7fa50   112  b #-0x60 (addr 0xffff8bd7f9f0)
0xffff8bd7fa54   116  movz x16, #0x0
0xffff8bd7fa58   120  sub csp, jssp, #0x10 (16)
0xffff8bd7fa5c   124  stp fp, lr, [jssp, #-16]!
0xffff8bd7fa60   128  bl #+0x24 (addr 0xffff8bd7fa84)
0xffff8bd7fa64   132  movz x16, #0x8
0xffff8bd7fa68   136  sub csp, jssp, #0x10 (16)
0xffff8bd7fa6c   140  stp fp, lr, [jssp, #-16]!
0xffff8bd7fa70   144  bl #+0x14 (addr 0xffff8bd7fa84)
0xffff8bd7fa74   148  movz x16, #0x10
0xffff8bd7fa78   152  sub csp, jssp, #0x10 (16)
0xffff8bd7fa7c   156  stp fp, lr, [jssp, #-16]!
0xffff8bd7fa80   160  bl #+0x4 (addr 0xffff8bd7fa84)
0xffff8bd7fa84   164  movz x17, #0xa00000000
0xffff8bd7fa88   168  sub csp, jssp, #0x10 (16)
0xffff8bd7fa8c   172  stp x17, cp, [jssp, #-16]!
0xffff8bd7fa90   176  add fp, jssp, #0x10 (16)
0xffff8bd7fa94   180  ldr x17, pc+20 (addr 0x0000ffff8bd7faa8)    ;; lazy deoptimization bailout 0
0xffff8bd7fa98   184  add x17, x17, x16
0xffff8bd7fa9c   188  br x17
0xffff8bd7faa0   192  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd7faa4   196  d63f03e0       constant
0xffff8bd7faa8   200  8bb06000       constant
0xffff8bd7faac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd7fa94  runtime entry
0xffff8bd7faa0  constant pool (size 16)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd7f9e0     0  ldur x4, [x1, #15]
0xffff8bd7f9e4     4  ldur w5, [x1, #27]
0xffff8bd7f9e8     8  tbnz w2, #0, #+0x44 (addr 0xffff8bd7fa2c)
0xffff8bd7f9ec    12  asr x7, x2, #32
0xffff8bd7f9f0    16  cmp w7, w5
0xffff8bd7f9f4    20  b.hs #+0x60 (addr 0xffff8bd7fa54)
0xffff8bd7f9f8    24  add x5, x4, #0xf (15)
0xffff8bd7f9fc    28  ldr x6, [x5, w7, sxtw #3]
0xffff8bd7fa00    32  ldr x16, [x26, #88]
0xffff8bd7fa04    36  cmp x6, x16
0xffff8bd7fa08    40  b.ne #+0x1c (addr 0xffff8bd7fa24)
0xffff8bd7fa0c    44  ldr x6, [x26, #1160]
0xffff8bd7fa10    48  ldur x6, [x6, #7]
0xffff8bd7fa14    52  movz x16, #0x100000000
0xffff8bd7fa18    56  cmp x6, x16
0xffff8bd7fa1c    60  b.ne #+0x48 (addr 0xffff8bd7fa64)
0xffff8bd7fa20    64  ldr x6, [x26, #40]
0xffff8bd7fa24    68  mov x0, x6
0xffff8bd7fa28    72  ret
0xffff8bd7fa2c    76  ldur x16, [x2, #-1]
0xffff8bd7fa30    80  ldr x17, [x26, #120]
0xffff8bd7fa34    84  cmp x16, x17
0xffff8bd7fa38    88  b.ne #+0x3c (addr 0xffff8bd7fa74)
0xffff8bd7fa3c    92  ldur d29, [x2, #7]
0xffff8bd7fa40    96  fcvtzs w7, d29
0xffff8bd7fa44   100  scvtf d0, w7
0xffff8bd7fa48   104  fcmp d29, d0
0xffff8bd7fa4c   108  b.ne #+0x28 (addr 0xffff8bd7fa74)
0xffff8bd7fa50   112  b #-0x60 (addr 0xffff8bd7f9f0)
0xffff8bd7fa54   116  movz x16, #0x0
0xffff8bd7fa58   120  sub csp, jssp, #0x10 (16)
0xffff8bd7fa5c   124  stp fp, lr, [jssp, #-16]!
0xffff8bd7fa60   128  bl #+0x24 (addr 0xffff8bd7fa84)
0xffff8bd7fa64   132  movz x16, #0x8
0xffff8bd7fa68   136  sub csp, jssp, #0x10 (16)
0xffff8bd7fa6c   140  stp fp, lr, [jssp, #-16]!
0xffff8bd7fa70   144  bl #+0x14 (addr 0xffff8bd7fa84)
0xffff8bd7fa74   148  movz x16, #0x10
0xffff8bd7fa78   152  sub csp, jssp, #0x10 (16)
0xffff8bd7fa7c   156  stp fp, lr, [jssp, #-16]!
0xffff8bd7fa80   160  bl #+0x4 (addr 0xffff8bd7fa84)
0xffff8bd7fa84   164  movz x17, #0xa00000000
0xffff8bd7fa88   168  sub csp, jssp, #0x10 (16)
0xffff8bd7fa8c   172  stp x17, cp, [jssp, #-16]!
0xffff8bd7fa90   176  add fp, jssp, #0x10 (16)
0xffff8bd7fa94   180  ldr x17, pc+20 (addr 0x0000ffff8bd7faa8)    ;; lazy deoptimization bailout 0
0xffff8bd7fa98   184  add x17, x17, x16
0xffff8bd7fa9c   188  br x17
0xffff8bd7faa0   192  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd7faa4   196  d63f03e0       constant
0xffff8bd7faa8   200  8bb06000       constant
0xffff8bd7faac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bd7fa94  runtime entry
0xffff8bd7faa0  constant pool (size 16)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastCloneRegExpStub
compiler = crankshaft
Instructions (size = 357)
0xffff8bd7fb20     0  ldur x4, [x3, #47]
0xffff8bd7fb24     4  asr x5, x2, #32
0xffff8bd7fb28     8  add x6, x4, #0x17 (23)
0xffff8bd7fb2c    12  ldr x7, [x6, w5, sxtw #3]
0xffff8bd7fb30    16  ldr x4, pc+224 (addr 0x0000ffff8bd7fc10)    ;; object: 0x26c04241 <undefined>
0xffff8bd7fb34    20  cmp x7, x4
0xffff8bd7fb38    24  b.eq #+0x64 (addr 0xffff8bd7fb9c)
0xffff8bd7fb3c    28  movz x1, #0xe2c0
0xffff8bd7fb40    32  movk x1, #0x2cb8, lsl #16
0xffff8bd7fb44    36  ldp x2, x0, [x1]
0xffff8bd7fb48    40  adds x16, x2, #0x38 (56)
0xffff8bd7fb4c    44  ccmp x16, x0, #nzCv, lo
0xffff8bd7fb50    48  b.hi #+0x50 (addr 0xffff8bd7fba0)
0xffff8bd7fb54    52  str x16, [x1]
0xffff8bd7fb58    56  orr x2, x2, #0x1
0xffff8bd7fb5c    60  ldur x0, [x7, #-1]
0xffff8bd7fb60    64  stur x0, [x2, #-1]
0xffff8bd7fb64    68  ldur x0, [x7, #7]
0xffff8bd7fb68    72  stur x0, [x2, #7]
0xffff8bd7fb6c    76  ldur x0, [x7, #15]
0xffff8bd7fb70    80  stur x0, [x2, #15]
0xffff8bd7fb74    84  ldur x0, [x7, #23]
0xffff8bd7fb78    88  stur x0, [x2, #23]
0xffff8bd7fb7c    92  ldur x0, [x7, #31]
0xffff8bd7fb80    96  stur x0, [x2, #31]
0xffff8bd7fb84   100  ldur x0, [x7, #39]
0xffff8bd7fb88   104  stur x0, [x2, #39]
0xffff8bd7fb8c   108  ldur x0, [x7, #47]
0xffff8bd7fb90   112  stur x0, [x2, #47]
0xffff8bd7fb94   116  mov x0, x2
0xffff8bd7fb98   120  ret
0xffff8bd7fb9c   124  b #+0x94 (addr 0xffff8bd7fc30)
0xffff8bd7fba0   128  sub csp, jssp, #0x10 (16)
0xffff8bd7fba4   132  stp fp, lr, [jssp, #-16]!
0xffff8bd7fba8   136  movz fp, #0xa00000000
0xffff8bd7fbac   140  sub csp, jssp, #0x8 (8)
0xffff8bd7fbb0   144  str fp, [jssp, #-8]!
0xffff8bd7fbb4   148  add fp, jssp, #0x8 (8)
0xffff8bd7fbb8   152  movz x2, #0x0
0xffff8bd7fbbc   156  mov x16, lr
0xffff8bd7fbc0   160  ldr x17, pc+88 (addr 0x0000ffff8bd7fc18)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd7fbc4   164  blr x17
0xffff8bd7fbc8   168  movz x0, #0x3800000000
0xffff8bd7fbcc   172  movz x10, #0x0
0xffff8bd7fbd0   176  sub csp, jssp, #0x10 (16)
0xffff8bd7fbd4   180  stp x10, x0, [jssp, #-16]!
0xffff8bd7fbd8   184  movz x0, #0x2
0xffff8bd7fbdc   188  movz x1, #0x5b88
0xffff8bd7fbe0   192  movk x1, #0xe2, lsl #16
0xffff8bd7fbe4   196  ldr x16, pc+60 (addr 0x0000ffff8bd7fc20)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd7fbe8   200  blr x16
0xffff8bd7fbec   204  str x0, [jssp, #16]
0xffff8bd7fbf0   208  ldr x16, pc+56 (addr 0x0000ffff8bd7fc28)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd7fbf4   212  blr x16
0xffff8bd7fbf8   216  ldr lr, [jssp, #16]
0xffff8bd7fbfc   220  ldp xzr, fp, [jssp], #24
0xffff8bd7fc00   224  b #-0xa4 (addr 0xffff8bd7fb5c)
0xffff8bd7fc04   228  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff8bd7fc08   232  d63f03e0       constant
0xffff8bd7fc0c   236  d503201f       constant
0xffff8bd7fc10   240  26c04241       constant
0xffff8bd7fc14   244  00000000       constant
0xffff8bd7fc18   248  8bd06820       constant
0xffff8bd7fc1c   252  0000ffff       constant
0xffff8bd7fc20   256  8bd06260       constant
0xffff8bd7fc24   260  0000ffff       constant
0xffff8bd7fc28   264  8bd068e0       constant
0xffff8bd7fc2c   268  0000ffff       constant
0xffff8bd7fc30   272  movz x16, #0x0
0xffff8bd7fc34   276  sub csp, jssp, #0x10 (16)
0xffff8bd7fc38   280  stp fp, lr, [jssp, #-16]!
0xffff8bd7fc3c   284  bl #+0x4 (addr 0xffff8bd7fc40)
0xffff8bd7fc40   288  movz x17, #0xa00000000
0xffff8bd7fc44   292  sub csp, jssp, #0x10 (16)
0xffff8bd7fc48   296  stp x17, cp, [jssp, #-16]!
0xffff8bd7fc4c   300  add fp, jssp, #0x10 (16)
0xffff8bd7fc50   304  ldr x17, pc+24 (addr 0x0000ffff8bd7fc68)    ;; lazy deoptimization bailout 0
0xffff8bd7fc54   308  add x17, x17, x16
0xffff8bd7fc58   312  br x17
0xffff8bd7fc5c   316  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd7fc60   320  d63f03e0       constant
0xffff8bd7fc64   324  d503201f       constant
0xffff8bd7fc68   328  8bb06000       constant
0xffff8bd7fc6c   332  0000ffff       constant


Safepoints (size = 21)
0xffff8bd7fbec   204  000 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 22)
0xffff8bd7fb30  embedded object  (0x26c04241 <undefined>)
0xffff8bd7fbc0  code target (STUB)  (0xffff8bd06820)
0xffff8bd7fbe4  code target (STUB)  (0xffff8bd06260)
0xffff8bd7fbf0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd7fc04  constant pool (size 44)
0xffff8bd7fc50  runtime entry
0xffff8bd7fc5c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = FastCloneRegExpStub
name = FastCloneRegExpStub
compiler = crankshaft
Instructions (size = 357)
0xffff8bd7fb20     0  ldur x4, [x3, #47]
0xffff8bd7fb24     4  asr x5, x2, #32
0xffff8bd7fb28     8  add x6, x4, #0x17 (23)
0xffff8bd7fb2c    12  ldr x7, [x6, w5, sxtw #3]
0xffff8bd7fb30    16  ldr x4, pc+224 (addr 0x0000ffff8bd7fc10)    ;; object: 0x26c04241 <undefined>
0xffff8bd7fb34    20  cmp x7, x4
0xffff8bd7fb38    24  b.eq #+0x64 (addr 0xffff8bd7fb9c)
0xffff8bd7fb3c    28  movz x1, #0xe2c0
0xffff8bd7fb40    32  movk x1, #0x2cb8, lsl #16
0xffff8bd7fb44    36  ldp x2, x0, [x1]
0xffff8bd7fb48    40  adds x16, x2, #0x38 (56)
0xffff8bd7fb4c    44  ccmp x16, x0, #nzCv, lo
0xffff8bd7fb50    48  b.hi #+0x50 (addr 0xffff8bd7fba0)
0xffff8bd7fb54    52  str x16, [x1]
0xffff8bd7fb58    56  orr x2, x2, #0x1
0xffff8bd7fb5c    60  ldur x0, [x7, #-1]
0xffff8bd7fb60    64  stur x0, [x2, #-1]
0xffff8bd7fb64    68  ldur x0, [x7, #7]
0xffff8bd7fb68    72  stur x0, [x2, #7]
0xffff8bd7fb6c    76  ldur x0, [x7, #15]
0xffff8bd7fb70    80  stur x0, [x2, #15]
0xffff8bd7fb74    84  ldur x0, [x7, #23]
0xffff8bd7fb78    88  stur x0, [x2, #23]
0xffff8bd7fb7c    92  ldur x0, [x7, #31]
0xffff8bd7fb80    96  stur x0, [x2, #31]
0xffff8bd7fb84   100  ldur x0, [x7, #39]
0xffff8bd7fb88   104  stur x0, [x2, #39]
0xffff8bd7fb8c   108  ldur x0, [x7, #47]
0xffff8bd7fb90   112  stur x0, [x2, #47]
0xffff8bd7fb94   116  mov x0, x2
0xffff8bd7fb98   120  ret
0xffff8bd7fb9c   124  b #+0x94 (addr 0xffff8bd7fc30)
0xffff8bd7fba0   128  sub csp, jssp, #0x10 (16)
0xffff8bd7fba4   132  stp fp, lr, [jssp, #-16]!
0xffff8bd7fba8   136  movz fp, #0xa00000000
0xffff8bd7fbac   140  sub csp, jssp, #0x8 (8)
0xffff8bd7fbb0   144  str fp, [jssp, #-8]!
0xffff8bd7fbb4   148  add fp, jssp, #0x8 (8)
0xffff8bd7fbb8   152  movz x2, #0x0
0xffff8bd7fbbc   156  mov x16, lr
0xffff8bd7fbc0   160  ldr x17, pc+88 (addr 0x0000ffff8bd7fc18)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd7fbc4   164  blr x17
0xffff8bd7fbc8   168  movz x0, #0x3800000000
0xffff8bd7fbcc   172  movz x10, #0x0
0xffff8bd7fbd0   176  sub csp, jssp, #0x10 (16)
0xffff8bd7fbd4   180  stp x10, x0, [jssp, #-16]!
0xffff8bd7fbd8   184  movz x0, #0x2
0xffff8bd7fbdc   188  movz x1, #0x5b88
0xffff8bd7fbe0   192  movk x1, #0xe2, lsl #16
0xffff8bd7fbe4   196  ldr x16, pc+60 (addr 0x0000ffff8bd7fc20)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd7fbe8   200  blr x16
0xffff8bd7fbec   204  str x0, [jssp, #16]
0xffff8bd7fbf0   208  ldr x16, pc+56 (addr 0x0000ffff8bd7fc28)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd7fbf4   212  blr x16
0xffff8bd7fbf8   216  ldr lr, [jssp, #16]
0xffff8bd7fbfc   220  ldp xzr, fp, [jssp], #24
0xffff8bd7fc00   224  b #-0xa4 (addr 0xffff8bd7fb5c)
0xffff8bd7fc04   228  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff8bd7fc08   232  d63f03e0       constant
0xffff8bd7fc0c   236  d503201f       constant
0xffff8bd7fc10   240  26c04241       constant
0xffff8bd7fc14   244  00000000       constant
0xffff8bd7fc18   248  8bd06820       constant
0xffff8bd7fc1c   252  0000ffff       constant
0xffff8bd7fc20   256  8bd06260       constant
0xffff8bd7fc24   260  0000ffff       constant
0xffff8bd7fc28   264  8bd068e0       constant
0xffff8bd7fc2c   268  0000ffff       constant
0xffff8bd7fc30   272  movz x16, #0x0
0xffff8bd7fc34   276  sub csp, jssp, #0x10 (16)
0xffff8bd7fc38   280  stp fp, lr, [jssp, #-16]!
0xffff8bd7fc3c   284  bl #+0x4 (addr 0xffff8bd7fc40)
0xffff8bd7fc40   288  movz x17, #0xa00000000
0xffff8bd7fc44   292  sub csp, jssp, #0x10 (16)
0xffff8bd7fc48   296  stp x17, cp, [jssp, #-16]!
0xffff8bd7fc4c   300  add fp, jssp, #0x10 (16)
0xffff8bd7fc50   304  ldr x17, pc+24 (addr 0x0000ffff8bd7fc68)    ;; lazy deoptimization bailout 0
0xffff8bd7fc54   308  add x17, x17, x16
0xffff8bd7fc58   312  br x17
0xffff8bd7fc5c   316  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd7fc60   320  d63f03e0       constant
0xffff8bd7fc64   324  d503201f       constant
0xffff8bd7fc68   328  8bb06000       constant
0xffff8bd7fc6c   332  0000ffff       constant


Safepoints (size = 21)
0xffff8bd7fbec   204  000 | x2 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 22)
0xffff8bd7fb30  embedded object  (0x26c04241 <undefined>)
0xffff8bd7fbc0  code target (STUB)  (0xffff8bd06820)
0xffff8bd7fbe4  code target (STUB)  (0xffff8bd06260)
0xffff8bd7fbf0  code target (STUB)  (0xffff8bd068e0)
0xffff8bd7fc04  constant pool (size 44)
0xffff8bd7fc50  runtime entry
0xffff8bd7fc5c  constant pool (size 20)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 8
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 128)
0xffff8bd80ba0     0  cbz x0, #+0xc (addr 0xffff8bd80bac)
0xffff8bd80ba4     4  tbz w0, #0, #+0x10 (addr 0xffff8bd80bb4)
0xffff8bd80ba8     8  b #+0x30 (addr 0xffff8bd80bd8)
0xffff8bd80bac    12  ldr x0, pc+28 (addr 0x0000ffff8bd80bc8)    ;; object: 0x26c042b1 <false>
0xffff8bd80bb0    16  ret
0xffff8bd80bb4    20  ldr x0, pc+28 (addr 0x0000ffff8bd80bd0)    ;; object: 0x26c04281 <true>
0xffff8bd80bb8    24  ret
0xffff8bd80bbc    28  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd80bc0    32  d63f03e0       constant
0xffff8bd80bc4    36  d503201f       constant
0xffff8bd80bc8    40  26c042b1       constant
0xffff8bd80bcc    44  00000000       constant
0xffff8bd80bd0    48  26c04281       constant
0xffff8bd80bd4    52  00000000       constant
0xffff8bd80bd8    56  movz x16, #0x0
0xffff8bd80bdc    60  sub csp, jssp, #0x10 (16)
0xffff8bd80be0    64  stp fp, lr, [jssp, #-16]!
0xffff8bd80be4    68  bl #+0x4 (addr 0xffff8bd80be8)
0xffff8bd80be8    72  movz x17, #0xa00000000
0xffff8bd80bec    76  sub csp, jssp, #0x10 (16)
0xffff8bd80bf0    80  stp x17, cp, [jssp, #-16]!
0xffff8bd80bf4    84  add fp, jssp, #0x10 (16)
0xffff8bd80bf8    88  ldr x17, pc+24 (addr 0x0000ffff8bd80c10)    ;; lazy deoptimization bailout 0
0xffff8bd80bfc    92  add x17, x17, x16
0xffff8bd80c00    96  br x17
0xffff8bd80c04   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd80c08   104  d63f03e0       constant
0xffff8bd80c0c   108  d503201f       constant
0xffff8bd80c10   112  8bb06000       constant
0xffff8bd80c14   116  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd80bac  embedded object  (0x26c042b1 <false>)
0xffff8bd80bb4  embedded object  (0x26c04281 <true>)
0xffff8bd80bbc  constant pool (size 28)
0xffff8bd80bf8  runtime entry
0xffff8bd80c04  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 8
type = NORMAL
name = ToBooleanICStub(Smi)
compiler = crankshaft
Instructions (size = 128)
0xffff8bd80ba0     0  cbz x0, #+0xc (addr 0xffff8bd80bac)
0xffff8bd80ba4     4  tbz w0, #0, #+0x10 (addr 0xffff8bd80bb4)
0xffff8bd80ba8     8  b #+0x30 (addr 0xffff8bd80bd8)
0xffff8bd80bac    12  ldr x0, pc+28 (addr 0x0000ffff8bd80bc8)    ;; object: 0x26c042b1 <false>
0xffff8bd80bb0    16  ret
0xffff8bd80bb4    20  ldr x0, pc+28 (addr 0x0000ffff8bd80bd0)    ;; object: 0x26c04281 <true>
0xffff8bd80bb8    24  ret
0xffff8bd80bbc    28  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd80bc0    32  d63f03e0       constant
0xffff8bd80bc4    36  d503201f       constant
0xffff8bd80bc8    40  26c042b1       constant
0xffff8bd80bcc    44  00000000       constant
0xffff8bd80bd0    48  26c04281       constant
0xffff8bd80bd4    52  00000000       constant
0xffff8bd80bd8    56  movz x16, #0x0
0xffff8bd80bdc    60  sub csp, jssp, #0x10 (16)
0xffff8bd80be0    64  stp fp, lr, [jssp, #-16]!
0xffff8bd80be4    68  bl #+0x4 (addr 0xffff8bd80be8)
0xffff8bd80be8    72  movz x17, #0xa00000000
0xffff8bd80bec    76  sub csp, jssp, #0x10 (16)
0xffff8bd80bf0    80  stp x17, cp, [jssp, #-16]!
0xffff8bd80bf4    84  add fp, jssp, #0x10 (16)
0xffff8bd80bf8    88  ldr x17, pc+24 (addr 0x0000ffff8bd80c10)    ;; lazy deoptimization bailout 0
0xffff8bd80bfc    92  add x17, x17, x16
0xffff8bd80c00    96  br x17
0xffff8bd80c04   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd80c08   104  d63f03e0       constant
0xffff8bd80c0c   108  d503201f       constant
0xffff8bd80c10   112  8bb06000       constant
0xffff8bd80c14   116  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd80bac  embedded object  (0x26c042b1 <false>)
0xffff8bd80bb4  embedded object  (0x26c04281 <true>)
0xffff8bd80bbc  constant pool (size 28)
0xffff8bd80bf8  runtime entry
0xffff8bd80c04  constant pool (size 20)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1552)
0xffff8bd80f80     0  adr xzr, #+0x40 (addr 0xffff8bd80fc0)
0xffff8bd80f84     4  adr xzr, #+0x2a8 (addr 0xffff8bd8122c)
0xffff8bd80f88     8  ldr x16, pc+1368 (addr 0x0000ffff8bd814e0)    ;; external reference (store_buffer_top)
0xffff8bd80f8c    12  ldr x10, [x16]
0xffff8bd80f90    16  str x11, [x10], #8
0xffff8bd80f94    20  str x10, [x16]
0xffff8bd80f98    24  tst x10, #0x1ffff
0xffff8bd80f9c    28  b.eq #+0x8 (addr 0xffff8bd80fa4)
0xffff8bd80fa0    32  ret
0xffff8bd80fa4    36  sub csp, jssp, #0x8 (8)
0xffff8bd80fa8    40  str lr, [jssp, #-8]!
0xffff8bd80fac    44  ldr x17, pc+1340 (addr 0x0000ffff8bd814e8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd80fb0    48  blr x17
0xffff8bd80fb4    52  ldr lr, [jssp], #8
0xffff8bd80fb8    56  ret
0xffff8bd80fbc    60  ret
0xffff8bd80fc0    64  sub csp, jssp, #0x10 (16)
0xffff8bd80fc4    68  stp x1, x0, [jssp, #-16]!
0xffff8bd80fc8    72  ldr x10, [x11]
0xffff8bd80fcc    76  and x16, x10, #0xfffffffffff00000
0xffff8bd80fd0    80  ldr x16, [x16, #8]
0xffff8bd80fd4    84  tst x16, #0x18
0xffff8bd80fd8    88  b.eq #+0x17c (addr 0xffff8bd81154)
0xffff8bd80fdc    92  and x16, x21, #0xfffffffffff00000
0xffff8bd80fe0    96  ldr x16, [x16, #8]
0xffff8bd80fe4   100  tst x16, #0x18
0xffff8bd80fe8   104  b.ne #+0x16c (addr 0xffff8bd81154)
0xffff8bd80fec   108  and x10, x21, #0xfffffffffff00000
0xffff8bd80ff0   112  ldr x0, [x10, #104]
0xffff8bd80ff4   116  subs x0, x0, #0x1 (1)
0xffff8bd80ff8   120  str x0, [x10, #104]
0xffff8bd80ffc   124  b.mi #+0xc4 (addr 0xffff8bd810c0)
0xffff8bd81000   128  ubfx x16, x21, #8, #12
0xffff8bd81004   132  and x10, x21, #0xfffffffffff00000
0xffff8bd81008   136  add x10, x10, x16, lsl #2
0xffff8bd8100c   140  ubfx x0, x21, #3, #5
0xffff8bd81010   144  ldr x10, [x10, #360]
0xffff8bd81014   148  lsr x10, x10, x0
0xffff8bd81018   152  tbz w10, #0, #+0x8 (addr 0xffff8bd81020)
0xffff8bd8101c   156  tbnz w10, #1, #+0x3c (addr 0xffff8bd81058)
0xffff8bd81020   160  ldp x1, x0, [jssp], #16
0xffff8bd81024   164  ldr x16, pc+1228 (addr 0x0000ffff8bd814f0)    ;; external reference (store_buffer_top)
0xffff8bd81028   168  ldr x10, [x16]
0xffff8bd8102c   172  str x11, [x10], #8
0xffff8bd81030   176  str x10, [x16]
0xffff8bd81034   180  tst x10, #0x1ffff
0xffff8bd81038   184  b.eq #+0x8 (addr 0xffff8bd81040)
0xffff8bd8103c   188  ret
0xffff8bd81040   192  sub csp, jssp, #0x8 (8)
0xffff8bd81044   196  str lr, [jssp, #-8]!
0xffff8bd81048   200  ldr x17, pc+1200 (addr 0x0000ffff8bd814f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd8104c   204  blr x17
0xffff8bd81050   208  ldr lr, [jssp], #8
0xffff8bd81054   212  ret
0xffff8bd81058   216  ldr x10, [x11]
0xffff8bd8105c   220  sub csp, jssp, #0x10 (16)
0xffff8bd81060   224  stp x21, x11, [jssp, #-16]!
0xffff8bd81064   228  ubfx x16, x10, #8, #12
0xffff8bd81068   232  and x0, x10, #0xfffffffffff00000
0xffff8bd8106c   236  add x0, x0, x16, lsl #2
0xffff8bd81070   240  ubfx x21, x10, #3, #5
0xffff8bd81074   244  ldr x11, [x0, #360]
0xffff8bd81078   248  lsr x11, x11, x21
0xffff8bd8107c   252  tbz w11, #0, #+0x40 (addr 0xffff8bd810bc)
0xffff8bd81080   256  ldp x21, x11, [jssp], #16
0xffff8bd81084   260  ldp x1, x0, [jssp], #16
0xffff8bd81088   264  ldr x16, pc+1144 (addr 0x0000ffff8bd81500)    ;; external reference (store_buffer_top)
0xffff8bd8108c   268  ldr x10, [x16]
0xffff8bd81090   272  str x11, [x10], #8
0xffff8bd81094   276  str x10, [x16]
0xffff8bd81098   280  tst x10, #0x1ffff
0xffff8bd8109c   284  b.eq #+0x8 (addr 0xffff8bd810a4)
0xffff8bd810a0   288  ret
0xffff8bd810a4   292  sub csp, jssp, #0x8 (8)
0xffff8bd810a8   296  str lr, [jssp, #-8]!
0xffff8bd810ac   300  ldr x17, pc+1116 (addr 0x0000ffff8bd81508)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd810b0   304  blr x17
0xffff8bd810b4   308  ldr lr, [jssp], #8
0xffff8bd810b8   312  ret
0xffff8bd810bc   316  ldp x21, x11, [jssp], #16
0xffff8bd810c0   320  sub csp, jssp, #0x78 (120)
0xffff8bd810c4   324  stp x14, x15, [jssp, #-32]!
0xffff8bd810c8   328  stp x18, lr, [jssp, #16]
0xffff8bd810cc   332  stp x9, x11, [jssp, #-32]!
0xffff8bd810d0   336  stp x12, x13, [jssp, #16]
0xffff8bd810d4   340  stp x5, x6, [jssp, #-32]!
0xffff8bd810d8   344  stp x7, x8, [jssp, #16]
0xffff8bd810dc   348  stp x2, x3, [jssp, #-24]!
0xffff8bd810e0   352  str x4, [jssp, #16]
0xffff8bd810e4   356  mov x0, x21
0xffff8bd810e8   360  mov x1, x11
0xffff8bd810ec   364  ldr x2, pc+1060 (addr 0x0000ffff8bd81510)    ;; external reference (isolate)
0xffff8bd810f0   368  ldr x16, pc+1064 (addr 0x0000ffff8bd81518)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd810f4   372  and csp, jssp, #0xfffffffffffffff0
0xffff8bd810f8   376  blr x16
0xffff8bd810fc   380  ldp x4, x5, [jssp, #16]
0xffff8bd81100   384  ldp x2, x3, [jssp], #32
0xffff8bd81104   388  ldp x8, x9, [jssp, #16]
0xffff8bd81108   392  ldp x6, x7, [jssp], #32
0xffff8bd8110c   396  ldp x13, x14, [jssp, #16]
0xffff8bd81110   400  ldp x11, x12, [jssp], #32
0xffff8bd81114   404  ldr lr, [jssp, #16]
0xffff8bd81118   408  ldp x15, x18, [jssp], #24
0xffff8bd8111c   412  ldp x1, x0, [jssp], #16
0xffff8bd81120   416  ldr x16, pc+1024 (addr 0x0000ffff8bd81520)    ;; external reference (store_buffer_top)
0xffff8bd81124   420  ldr x10, [x16]
0xffff8bd81128   424  str x11, [x10], #8
0xffff8bd8112c   428  str x10, [x16]
0xffff8bd81130   432  tst x10, #0x1ffff
0xffff8bd81134   436  b.eq #+0x8 (addr 0xffff8bd8113c)
0xffff8bd81138   440  ret
0xffff8bd8113c   444  sub csp, jssp, #0x8 (8)
0xffff8bd81140   448  str lr, [jssp, #-8]!
0xffff8bd81144   452  ldr x17, pc+996 (addr 0x0000ffff8bd81528)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd81148   456  blr x17
0xffff8bd8114c   460  ldr lr, [jssp], #8
0xffff8bd81150   464  ret
0xffff8bd81154   468  and x10, x21, #0xfffffffffff00000
0xffff8bd81158   472  ldr x0, [x10, #104]
0xffff8bd8115c   476  subs x0, x0, #0x1 (1)
0xffff8bd81160   480  str x0, [x10, #104]
0xffff8bd81164   484  b.mi #+0x64 (addr 0xffff8bd811c8)
0xffff8bd81168   488  ubfx x16, x21, #8, #12
0xffff8bd8116c   492  and x10, x21, #0xfffffffffff00000
0xffff8bd81170   496  add x10, x10, x16, lsl #2
0xffff8bd81174   500  ubfx x0, x21, #3, #5
0xffff8bd81178   504  ldr x10, [x10, #360]
0xffff8bd8117c   508  lsr x10, x10, x0
0xffff8bd81180   512  tbz w10, #0, #+0x8 (addr 0xffff8bd81188)
0xffff8bd81184   516  tbnz w10, #1, #+0xc (addr 0xffff8bd81190)
0xffff8bd81188   520  ldp x1, x0, [jssp], #16
0xffff8bd8118c   524  ret
0xffff8bd81190   528  ldr x10, [x11]
0xffff8bd81194   532  sub csp, jssp, #0x10 (16)
0xffff8bd81198   536  stp x21, x11, [jssp, #-16]!
0xffff8bd8119c   540  ubfx x16, x10, #8, #12
0xffff8bd811a0   544  and x0, x10, #0xfffffffffff00000
0xffff8bd811a4   548  add x0, x0, x16, lsl #2
0xffff8bd811a8   552  ubfx x21, x10, #3, #5
0xffff8bd811ac   556  ldr x11, [x0, #360]
0xffff8bd811b0   560  lsr x11, x11, x21
0xffff8bd811b4   564  tbz w11, #0, #+0x10 (addr 0xffff8bd811c4)
0xffff8bd811b8   568  ldp x21, x11, [jssp], #16
0xffff8bd811bc   572  ldp x1, x0, [jssp], #16
0xffff8bd811c0   576  ret
0xffff8bd811c4   580  ldp x21, x11, [jssp], #16
0xffff8bd811c8   584  sub csp, jssp, #0x78 (120)
0xffff8bd811cc   588  stp x14, x15, [jssp, #-32]!
0xffff8bd811d0   592  stp x18, lr, [jssp, #16]
0xffff8bd811d4   596  stp x9, x11, [jssp, #-32]!
0xffff8bd811d8   600  stp x12, x13, [jssp, #16]
0xffff8bd811dc   604  stp x5, x6, [jssp, #-32]!
0xffff8bd811e0   608  stp x7, x8, [jssp, #16]
0xffff8bd811e4   612  stp x2, x3, [jssp, #-24]!
0xffff8bd811e8   616  str x4, [jssp, #16]
0xffff8bd811ec   620  mov x0, x21
0xffff8bd811f0   624  mov x1, x11
0xffff8bd811f4   628  ldr x2, pc+828 (addr 0x0000ffff8bd81530)    ;; external reference (isolate)
0xffff8bd811f8   632  ldr x16, pc+832 (addr 0x0000ffff8bd81538)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd811fc   636  and csp, jssp, #0xfffffffffffffff0
0xffff8bd81200   640  blr x16
0xffff8bd81204   644  ldp x4, x5, [jssp, #16]
0xffff8bd81208   648  ldp x2, x3, [jssp], #32
0xffff8bd8120c   652  ldp x8, x9, [jssp, #16]
0xffff8bd81210   656  ldp x6, x7, [jssp], #32
0xffff8bd81214   660  ldp x13, x14, [jssp, #16]
0xffff8bd81218   664  ldp x11, x12, [jssp], #32
0xffff8bd8121c   668  ldr lr, [jssp, #16]
0xffff8bd81220   672  ldp x15, x18, [jssp], #24
0xffff8bd81224   676  ldp x1, x0, [jssp], #16
0xffff8bd81228   680  ret
0xffff8bd8122c   684  sub csp, jssp, #0x10 (16)
0xffff8bd81230   688  stp x1, x0, [jssp, #-16]!
0xffff8bd81234   692  ldr x10, [x11]
0xffff8bd81238   696  and x16, x10, #0xfffffffffff00000
0xffff8bd8123c   700  ldr x16, [x16, #8]
0xffff8bd81240   704  tst x16, #0x18
0xffff8bd81244   708  b.eq #+0x19c (addr 0xffff8bd813e0)
0xffff8bd81248   712  and x16, x21, #0xfffffffffff00000
0xffff8bd8124c   716  ldr x16, [x16, #8]
0xffff8bd81250   720  tst x16, #0x18
0xffff8bd81254   724  b.ne #+0x18c (addr 0xffff8bd813e0)
0xffff8bd81258   728  and x10, x21, #0xfffffffffff00000
0xffff8bd8125c   732  ldr x0, [x10, #104]
0xffff8bd81260   736  subs x0, x0, #0x1 (1)
0xffff8bd81264   740  str x0, [x10, #104]
0xffff8bd81268   744  b.mi #+0xe4 (addr 0xffff8bd8134c)
0xffff8bd8126c   748  ubfx x16, x21, #8, #12
0xffff8bd81270   752  and x10, x21, #0xfffffffffff00000
0xffff8bd81274   756  add x10, x10, x16, lsl #2
0xffff8bd81278   760  ubfx x0, x21, #3, #5
0xffff8bd8127c   764  ldr x10, [x10, #360]
0xffff8bd81280   768  lsr x10, x10, x0
0xffff8bd81284   772  tbz w10, #0, #+0x8 (addr 0xffff8bd8128c)
0xffff8bd81288   776  tbnz w10, #1, #+0x3c (addr 0xffff8bd812c4)
0xffff8bd8128c   780  ldp x1, x0, [jssp], #16
0xffff8bd81290   784  ldr x16, pc+688 (addr 0x0000ffff8bd81540)    ;; external reference (store_buffer_top)
0xffff8bd81294   788  ldr x10, [x16]
0xffff8bd81298   792  str x11, [x10], #8
0xffff8bd8129c   796  str x10, [x16]
0xffff8bd812a0   800  tst x10, #0x1ffff
0xffff8bd812a4   804  b.eq #+0x8 (addr 0xffff8bd812ac)
0xffff8bd812a8   808  ret
0xffff8bd812ac   812  sub csp, jssp, #0x8 (8)
0xffff8bd812b0   816  str lr, [jssp, #-8]!
0xffff8bd812b4   820  ldr x17, pc+660 (addr 0x0000ffff8bd81548)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd812b8   824  blr x17
0xffff8bd812bc   828  ldr lr, [jssp], #8
0xffff8bd812c0   832  ret
0xffff8bd812c4   836  ldr x10, [x11]
0xffff8bd812c8   840  and x0, x10, #0xfffffffffff00000
0xffff8bd812cc   844  ldr x0, [x0, #8]
0xffff8bd812d0   848  tbz w0, #6, #+0x18 (addr 0xffff8bd812e8)
0xffff8bd812d4   852  and x0, x21, #0xfffffffffff00000
0xffff8bd812d8   856  ldr x0, [x0, #8]
0xffff8bd812dc   860  movz x16, #0x58
0xffff8bd812e0   864  tst x0, x16
0xffff8bd812e4   868  b.eq #+0x68 (addr 0xffff8bd8134c)
0xffff8bd812e8   872  sub csp, jssp, #0x10 (16)
0xffff8bd812ec   876  stp x21, x11, [jssp, #-16]!
0xffff8bd812f0   880  ubfx x16, x10, #8, #12
0xffff8bd812f4   884  and x0, x10, #0xfffffffffff00000
0xffff8bd812f8   888  add x0, x0, x16, lsl #2
0xffff8bd812fc   892  ubfx x21, x10, #3, #5
0xffff8bd81300   896  ldr x11, [x0, #360]
0xffff8bd81304   900  lsr x11, x11, x21
0xffff8bd81308   904  tbz w11, #0, #+0x40 (addr 0xffff8bd81348)
0xffff8bd8130c   908  ldp x21, x11, [jssp], #16
0xffff8bd81310   912  ldp x1, x0, [jssp], #16
0xffff8bd81314   916  ldr x16, pc+572 (addr 0x0000ffff8bd81550)    ;; external reference (store_buffer_top)
0xffff8bd81318   920  ldr x10, [x16]
0xffff8bd8131c   924  str x11, [x10], #8
0xffff8bd81320   928  str x10, [x16]
0xffff8bd81324   932  tst x10, #0x1ffff
0xffff8bd81328   936  b.eq #+0x8 (addr 0xffff8bd81330)
0xffff8bd8132c   940  ret
0xffff8bd81330   944  sub csp, jssp, #0x8 (8)
0xffff8bd81334   948  str lr, [jssp, #-8]!
0xffff8bd81338   952  ldr x17, pc+544 (addr 0x0000ffff8bd81558)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd8133c   956  blr x17
0xffff8bd81340   960  ldr lr, [jssp], #8
0xffff8bd81344   964  ret
0xffff8bd81348   968  ldp x21, x11, [jssp], #16
0xffff8bd8134c   972  sub csp, jssp, #0x78 (120)
0xffff8bd81350   976  stp x14, x15, [jssp, #-32]!
0xffff8bd81354   980  stp x18, lr, [jssp, #16]
0xffff8bd81358   984  stp x9, x11, [jssp, #-32]!
0xffff8bd8135c   988  stp x12, x13, [jssp, #16]
0xffff8bd81360   992  stp x5, x6, [jssp, #-32]!
0xffff8bd81364   996  stp x7, x8, [jssp, #16]
0xffff8bd81368  1000  stp x2, x3, [jssp, #-24]!
0xffff8bd8136c  1004  str x4, [jssp, #16]
0xffff8bd81370  1008  mov x0, x21
0xffff8bd81374  1012  mov x1, x11
0xffff8bd81378  1016  ldr x2, pc+488 (addr 0x0000ffff8bd81560)    ;; external reference (isolate)
0xffff8bd8137c  1020  ldr x16, pc+492 (addr 0x0000ffff8bd81568)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd81380  1024  and csp, jssp, #0xfffffffffffffff0
0xffff8bd81384  1028  blr x16
0xffff8bd81388  1032  ldp x4, x5, [jssp, #16]
0xffff8bd8138c  1036  ldp x2, x3, [jssp], #32
0xffff8bd81390  1040  ldp x8, x9, [jssp, #16]
0xffff8bd81394  1044  ldp x6, x7, [jssp], #32
0xffff8bd81398  1048  ldp x13, x14, [jssp, #16]
0xffff8bd8139c  1052  ldp x11, x12, [jssp], #32
0xffff8bd813a0  1056  ldr lr, [jssp, #16]
0xffff8bd813a4  1060  ldp x15, x18, [jssp], #24
0xffff8bd813a8  1064  ldp x1, x0, [jssp], #16
0xffff8bd813ac  1068  ldr x16, pc+452 (addr 0x0000ffff8bd81570)    ;; external reference (store_buffer_top)
0xffff8bd813b0  1072  ldr x10, [x16]
0xffff8bd813b4  1076  str x11, [x10], #8
0xffff8bd813b8  1080  str x10, [x16]
0xffff8bd813bc  1084  tst x10, #0x1ffff
0xffff8bd813c0  1088  b.eq #+0x8 (addr 0xffff8bd813c8)
0xffff8bd813c4  1092  ret
0xffff8bd813c8  1096  sub csp, jssp, #0x8 (8)
0xffff8bd813cc  1100  str lr, [jssp, #-8]!
0xffff8bd813d0  1104  ldr x17, pc+424 (addr 0x0000ffff8bd81578)    ;; code: STUB, StoreBufferOverflowStub, minor: 0
0xffff8bd813d4  1108  blr x17
0xffff8bd813d8  1112  ldr lr, [jssp], #8
0xffff8bd813dc  1116  ret
0xffff8bd813e0  1120  and x10, x21, #0xfffffffffff00000
0xffff8bd813e4  1124  ldr x0, [x10, #104]
0xffff8bd813e8  1128  subs x0, x0, #0x1 (1)
0xffff8bd813ec  1132  str x0, [x10, #104]
0xffff8bd813f0  1136  b.mi #+0x84 (addr 0xffff8bd81474)
0xffff8bd813f4  1140  ubfx x16, x21, #8, #12
0xffff8bd813f8  1144  and x10, x21, #0xfffffffffff00000
0xffff8bd813fc  1148  add x10, x10, x16, lsl #2
0xffff8bd81400  1152  ubfx x0, x21, #3, #5
0xffff8bd81404  1156  ldr x10, [x10, #360]
0xffff8bd81408  1160  lsr x10, x10, x0
0xffff8bd8140c  1164  tbz w10, #0, #+0x8 (addr 0xffff8bd81414)
0xffff8bd81410  1168  tbnz w10, #1, #+0xc (addr 0xffff8bd8141c)
0xffff8bd81414  1172  ldp x1, x0, [jssp], #16
0xffff8bd81418  1176  ret
0xffff8bd8141c  1180  ldr x10, [x11]
0xffff8bd81420  1184  and x0, x10, #0xfffffffffff00000
0xffff8bd81424  1188  ldr x0, [x0, #8]
0xffff8bd81428  1192  tbz w0, #6, #+0x18 (addr 0xffff8bd81440)
0xffff8bd8142c  1196  and x0, x21, #0xfffffffffff00000
0xffff8bd81430  1200  ldr x0, [x0, #8]
0xffff8bd81434  1204  movz x16, #0x58
0xffff8bd81438  1208  tst x0, x16
0xffff8bd8143c  1212  b.eq #+0x38 (addr 0xffff8bd81474)
0xffff8bd81440  1216  sub csp, jssp, #0x10 (16)
0xffff8bd81444  1220  stp x21, x11, [jssp, #-16]!
0xffff8bd81448  1224  ubfx x16, x10, #8, #12
0xffff8bd8144c  1228  and x0, x10, #0xfffffffffff00000
0xffff8bd81450  1232  add x0, x0, x16, lsl #2
0xffff8bd81454  1236  ubfx x21, x10, #3, #5
0xffff8bd81458  1240  ldr x11, [x0, #360]
0xffff8bd8145c  1244  lsr x11, x11, x21
0xffff8bd81460  1248  tbz w11, #0, #+0x10 (addr 0xffff8bd81470)
0xffff8bd81464  1252  ldp x21, x11, [jssp], #16
0xffff8bd81468  1256  ldp x1, x0, [jssp], #16
0xffff8bd8146c  1260  ret
0xffff8bd81470  1264  ldp x21, x11, [jssp], #16
0xffff8bd81474  1268  sub csp, jssp, #0x78 (120)
0xffff8bd81478  1272  stp x14, x15, [jssp, #-32]!
0xffff8bd8147c  1276  stp x18, lr, [jssp, #16]
0xffff8bd81480  1280  stp x9, x11, [jssp, #-32]!
0xffff8bd81484  1284  stp x12, x13, [jssp, #16]
0xffff8bd81488  1288  stp x5, x6, [jssp, #-32]!
0xffff8bd8148c  1292  stp x7, x8, [jssp, #16]
0xffff8bd81490  1296  stp x2, x3, [jssp, #-24]!
0xffff8bd81494  1300  str x4, [jssp, #16]
0xffff8bd81498  1304  mov x0, x21
0xffff8bd8149c  1308  mov x1, x11
0xffff8bd814a0  1312  ldr x2, pc+224 (addr 0x0000ffff8bd81580)    ;; external reference (isolate)
0xffff8bd814a4  1316  ldr x16, pc+228 (addr 0x0000ffff8bd81588)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd814a8  1320  and csp, jssp, #0xfffffffffffffff0
0xffff8bd814ac  1324  blr x16
0xffff8bd814b0  1328  ldp x4, x5, [jssp, #16]
0xffff8bd814b4  1332  ldp x2, x3, [jssp], #32
0xffff8bd814b8  1336  ldp x8, x9, [jssp, #16]
0xffff8bd814bc  1340  ldp x6, x7, [jssp], #32
0xffff8bd814c0  1344  ldp x13, x14, [jssp, #16]
0xffff8bd814c4  1348  ldp x11, x12, [jssp], #32
0xffff8bd814c8  1352  ldr lr, [jssp, #16]
0xffff8bd814cc  1356  ldp x15, x18, [jssp], #24
0xffff8bd814d0  1360  ldp x1, x0, [jssp], #16
0xffff8bd814d4  1364  ret
0xffff8bd814d8  1368  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd814dc  1372  d63f03e0       constant
0xffff8bd814e0  1376  2cb8e8c0       constant
0xffff8bd814e4  1380  00000000       constant
0xffff8bd814e8  1384  8bd064c0       constant
0xffff8bd814ec  1388  0000ffff       constant
0xffff8bd814f0  1392  2cb8e8c0       constant
0xffff8bd814f4  1396  00000000       constant
0xffff8bd814f8  1400  8bd064c0       constant
0xffff8bd814fc  1404  0000ffff       constant
0xffff8bd81500  1408  2cb8e8c0       constant
0xffff8bd81504  1412  00000000       constant
0xffff8bd81508  1416  8bd064c0       constant
0xffff8bd8150c  1420  0000ffff       constant
0xffff8bd81510  1424  2cb8d2d0       constant
0xffff8bd81514  1428  00000000       constant
0xffff8bd81518  1432  00c2d958       constant
0xffff8bd8151c  1436  00000000       constant
0xffff8bd81520  1440  2cb8e8c0       constant
0xffff8bd81524  1444  00000000       constant
0xffff8bd81528  1448  8bd064c0       constant
0xffff8bd8152c  1452  0000ffff       constant
0xffff8bd81530  1456  2cb8d2d0       constant
0xffff8bd81534  1460  00000000       constant
0xffff8bd81538  1464  00c2d958       constant
0xffff8bd8153c  1468  00000000       constant
0xffff8bd81540  1472  2cb8e8c0       constant
0xffff8bd81544  1476  00000000       constant
0xffff8bd81548  1480  8bd064c0       constant
0xffff8bd8154c  1484  0000ffff       constant
0xffff8bd81550  1488  2cb8e8c0       constant
0xffff8bd81554  1492  00000000       constant
0xffff8bd81558  1496  8bd064c0       constant
0xffff8bd8155c  1500  0000ffff       constant
0xffff8bd81560  1504  2cb8d2d0       constant
0xffff8bd81564  1508  00000000       constant
0xffff8bd81568  1512  00c2d958       constant
0xffff8bd8156c  1516  00000000       constant
0xffff8bd81570  1520  2cb8e8c0       constant
0xffff8bd81574  1524  00000000       constant
0xffff8bd81578  1528  8bd064c0       constant
0xffff8bd8157c  1532  0000ffff       constant
0xffff8bd81580  1536  2cb8d2d0       constant
0xffff8bd81584  1540  00000000       constant
0xffff8bd81588  1544  00c2d958       constant
0xffff8bd8158c  1548  00000000       constant


RelocInfo (size = 59)
0xffff8bd80f88  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd80fac  code target (STUB)  (0xffff8bd064c0)
0xffff8bd81024  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd81048  code target (STUB)  (0xffff8bd064c0)
0xffff8bd81088  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd810ac  code target (STUB)  (0xffff8bd064c0)
0xffff8bd810ec  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd810f0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd81120  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd81144  code target (STUB)  (0xffff8bd064c0)
0xffff8bd811f4  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd811f8  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd81290  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd812b4  code target (STUB)  (0xffff8bd064c0)
0xffff8bd81314  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd81338  code target (STUB)  (0xffff8bd064c0)
0xffff8bd81378  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd8137c  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd813ac  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd813d0  code target (STUB)  (0xffff8bd064c0)
0xffff8bd814a0  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd814a4  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd814d8  constant pool (size 184)


kind = STUB
major_key = RegExpExecStub
name = RegExpExecStub
compiler = unknown
Instructions (size = 944)
0xffff8bd81600     0  ldr x10, pc+776 (addr 0x0000ffff8bd81908)    ;; external reference (RegExpStack::memory_size())
0xffff8bd81604     4  ldr x10, [x10]
0xffff8bd81608     8  cbz x10, #+0x2c0 (addr 0xffff8bd818c8)
0xffff8bd8160c    12  ldr x3, [jssp, #24]
0xffff8bd81610    16  tbz w3, #0, #+0x2b8 (addr 0xffff8bd818c8)
0xffff8bd81614    20  ldur x10, [x3, #-1]
0xffff8bd81618    24  ldrb w10, [x10, #11]
0xffff8bd8161c    28  cmp x10, #0xc7 (199)
0xffff8bd81620    32  b.ne #+0x2a8 (addr 0xffff8bd818c8)
0xffff8bd81624    36  ldur x20, [x3, #23]
0xffff8bd81628    40  ldur x10, [x20, #15]
0xffff8bd8162c    44  movz x16, #0x200000000
0xffff8bd81630    48  cmp x10, x16
0xffff8bd81634    52  b.ne #+0x294 (addr 0xffff8bd818c8)
0xffff8bd81638    56  ldursw x10, [x20, #83]
0xffff8bd8163c    60  add x10, x10, x10
0xffff8bd81640    64  cmp x10, #0x7e (126)
0xffff8bd81644    68  b.hi #+0x284 (addr 0xffff8bd818c8)
0xffff8bd81648    72  movz w5, #0x0
0xffff8bd8164c    76  ldr x19, [jssp, #16]
0xffff8bd81650    80  tbz w19, #0, #+0x278 (addr 0xffff8bd818c8)
0xffff8bd81654    84  ldur x2, [x19, #15]
0xffff8bd81658    88  ldur x10, [x19, #-1]
0xffff8bd8165c    92  ldrb w0, [x10, #11]
0xffff8bd81660    96  movz w16, #0x93
0xffff8bd81664   100  and w6, w0, w16
0xffff8bd81668   104  cbz w6, #+0x24 (addr 0xffff8bd8168c)
0xffff8bd8166c   108  cmp w6, #0x2 (2)
0xffff8bd81670   112  b.ge #+0x268 (addr 0xffff8bd818d8)
0xffff8bd81674   116  ldur x10, [x19, #31]
0xffff8bd81678   120  ldr x16, [x26, #80]
0xffff8bd8167c   124  cmp x10, x16
0xffff8bd81680   128  b.ne #+0x248 (addr 0xffff8bd818c8)
0xffff8bd81684   132  ldur x19, [x19, #23]
0xffff8bd81688   136  b #-0x30 (addr 0xffff8bd81658)
0xffff8bd8168c   140  ldr x10, [jssp, #8]
0xffff8bd81690   144  tbnz w10, #0, #+0x238 (addr 0xffff8bd818c8)
0xffff8bd81694   148  cmp x2, x10
0xffff8bd81698   152  b.ls #+0x230 (addr 0xffff8bd818c8)
0xffff8bd8169c   156  asr x1, x10, #32
0xffff8bd816a0   160  movz x10, #0x8
0xffff8bd816a4   164  ands w4, w0, #0x4
0xffff8bd816a8   168  csel x10, xzr, x10, ne
0xffff8bd816ac   172  add x10, x20, x10
0xffff8bd816b0   176  ldur x22, [x10, #39]
0xffff8bd816b4   180  tbz w22, #0, #+0x214 (addr 0xffff8bd818c8)
0xffff8bd816b8   184  sub csp, jssp, #0x10 (16)
0xffff8bd816bc   188  stp fp, lr, [jssp, #-16]!
0xffff8bd816c0   192  mov fp, jssp
0xffff8bd816c4   196  movz x10, #0x300000000
0xffff8bd816c8   200  sub csp, jssp, #0x8 (8)
0xffff8bd816cc   204  str x10, [jssp, #-8]!
0xffff8bd816d0   208  sub csp, jssp, #0x8 (8)
0xffff8bd816d4   212  str xzr, [jssp, #-8]!
0xffff8bd816d8   216  ldr x10, pc+568 (addr 0x0000ffff8bd81910)    ;; object: 0xffff8bd815a1 <Code: STUB>
0xffff8bd816dc   220  sub csp, jssp, #0x8 (8)
0xffff8bd816e0   224  str x10, [jssp, #-8]!
0xffff8bd816e4   228  ldr x10, pc+564 (addr 0x0000ffff8bd81918)    ;; external reference (Isolate::c_entry_fp_address)
0xffff8bd816e8   232  str fp, [x10]
0xffff8bd816ec   236  ldr x10, pc+564 (addr 0x0000ffff8bd81920)    ;; external reference (Isolate::context_address)
0xffff8bd816f0   240  str cp, [x10]
0xffff8bd816f4   244  sub csp, jssp, #0x10 (16)
0xffff8bd816f8   248  sub jssp, jssp, #0x10 (16)
0xffff8bd816fc   252  and csp, jssp, #0xfffffffffffffff0
0xffff8bd81700   256  add x10, csp, #0x8 (8)
0xffff8bd81704   260  stur x10, [fp, #-16]
0xffff8bd81708   264  ldr x10, pc+544 (addr 0x0000ffff8bd81928)    ;; external reference (isolate)
0xffff8bd8170c   268  str x10, [csp, #8]
0xffff8bd81710   272  add x13, x19, #0x17 (23)
0xffff8bd81714   276  ldr x19, [fp, #32]
0xffff8bd81718   280  ldur w11, [x19, #19]
0xffff8bd8171c   284  ubfx w4, w4, #2, #1
0xffff8bd81720   288  eor w4, w4, #0x1
0xffff8bd81724   292  lsl w12, w1, w4
0xffff8bd81728   296  lsl w11, w11, w4
0xffff8bd8172c   300  lsl w5, w5, w4
0xffff8bd81730   304  mov x0, x19
0xffff8bd81734   308  add w10, w12, w5
0xffff8bd81738   312  add x2, x13, w10, uxtw
0xffff8bd8173c   316  sub w10, w11, w12
0xffff8bd81740   320  add x3, x2, w10, uxtw
0xffff8bd81744   324  ldr x4, pc+492 (addr 0x0000ffff8bd81930)    ;; external reference (OffsetsVector::static_offsets_vector)
0xffff8bd81748   328  movz x5, #0x0
0xffff8bd8174c   332  ldr x10, pc+492 (addr 0x0000ffff8bd81938)    ;; external reference (RegExpStack::memory_address())
0xffff8bd81750   336  ldr x10, [x10]
0xffff8bd81754   340  ldr x11, pc+492 (addr 0x0000ffff8bd81940)    ;; external reference (RegExpStack::memory_size())
0xffff8bd81758   344  ldr x11, [x11]
0xffff8bd8175c   348  add x6, x10, x11
0xffff8bd81760   352  movz x7, #0x1
0xffff8bd81764   356  add x22, x22, #0x5f (95)
0xffff8bd81768   360  ldr lr, pc+480 (addr 0x0000ffff8bd81948)    ;; code: STUB, DirectCEntryStub, minor: 0
0xffff8bd8176c   364  mov x10, x22
0xffff8bd81770   368  blr lr
0xffff8bd81774   372  ldr x10, pc+476 (addr 0x0000ffff8bd81950)    ;; external reference (Isolate::context_address)
0xffff8bd81778   376  ldr cp, [x10]
0xffff8bd8177c   380  ldr x10, pc+476 (addr 0x0000ffff8bd81958)    ;; external reference (Isolate::c_entry_fp_address)
0xffff8bd81780   384  str xzr, [x10]
0xffff8bd81784   388  mov jssp, fp
0xffff8bd81788   392  ldp fp, lr, [jssp], #16
0xffff8bd8178c   396  cbz w0, #+0x130 (addr 0xffff8bd818bc)
0xffff8bd81790   400  cmn w0, #0x1 (1)
0xffff8bd81794   404  b.eq #+0x104 (addr 0xffff8bd81898)
0xffff8bd81798   408  cmn w0, #0x2 (2)
0xffff8bd8179c   412  b.eq #+0x12c (addr 0xffff8bd818c8)
0xffff8bd817a0   416  ldursw x10, [x20, #83]
0xffff8bd817a4   420  add x10, x10, x10
0xffff8bd817a8   424  add x12, x10, #0x2 (2)
0xffff8bd817ac   428  ldr x10, [jssp]
0xffff8bd817b0   432  tbz w10, #0, #+0x118 (addr 0xffff8bd818c8)
0xffff8bd817b4   436  ldur x11, [x10, #-1]
0xffff8bd817b8   440  ldrb w11, [x11, #11]
0xffff8bd817bc   444  cmp x11, #0xbc (188)
0xffff8bd817c0   448  b.ne #+0x108 (addr 0xffff8bd818c8)
0xffff8bd817c4   452  ldur x21, [x10, #15]
0xffff8bd817c8   456  ldur x10, [x21, #-1]
0xffff8bd817cc   460  ldr x16, [x26, #224]
0xffff8bd817d0   464  cmp x10, x16
0xffff8bd817d4   468  b.ne #+0xf4 (addr 0xffff8bd818c8)
0xffff8bd817d8   472  ldursw x10, [x21, #11]
0xffff8bd817dc   476  add x11, x12, #0x3 (3)
0xffff8bd817e0   480  cmp x11, x10
0xffff8bd817e4   484  b.gt #+0xe4 (addr 0xffff8bd818c8)
0xffff8bd817e8   488  lsl x10, x12, #32
0xffff8bd817ec   492  stur x10, [x21, #15]
0xffff8bd817f0   496  stur x19, [x21, #23]
0xffff8bd817f4   500  mov x10, x19
0xffff8bd817f8   504  tbz w10, #0, #+0x34 (addr 0xffff8bd8182c)
0xffff8bd817fc   508  add x11, x21, #0x17 (23)
0xffff8bd81800   512  and x10, x10, #0xfffffffffff00000
0xffff8bd81804   516  ldr x10, [x10, #8]
0xffff8bd81808   520  tbz w10, #1, #+0x24 (addr 0xffff8bd8182c)
0xffff8bd8180c   524  and x10, x21, #0xfffffffffff00000
0xffff8bd81810   528  ldr x10, [x10, #8]
0xffff8bd81814   532  tbz w10, #2, #+0x18 (addr 0xffff8bd8182c)
0xffff8bd81818   536  sub csp, jssp, #0x8 (8)
0xffff8bd8181c   540  str lr, [jssp, #-8]!
0xffff8bd81820   544  ldr x16, pc+320 (addr 0x0000ffff8bd81960)    ;; code: STUB, RecordWriteStub, minor: 11605
0xffff8bd81824   548  blr x16
0xffff8bd81828   552  ldr lr, [jssp], #8
0xffff8bd8182c   556  stur x19, [x21, #31]
0xffff8bd81830   560  mov x10, x19
0xffff8bd81834   564  tbz w10, #0, #+0x34 (addr 0xffff8bd81868)
0xffff8bd81838   568  add x11, x21, #0x1f (31)
0xffff8bd8183c   572  and x10, x10, #0xfffffffffff00000
0xffff8bd81840   576  ldr x10, [x10, #8]
0xffff8bd81844   580  tbz w10, #1, #+0x24 (addr 0xffff8bd81868)
0xffff8bd81848   584  and x10, x21, #0xfffffffffff00000
0xffff8bd8184c   588  ldr x10, [x10, #8]
0xffff8bd81850   592  tbz w10, #2, #+0x18 (addr 0xffff8bd81868)
0xffff8bd81854   596  sub csp, jssp, #0x8 (8)
0xffff8bd81858   600  str lr, [jssp, #-8]!
0xffff8bd8185c   604  ldr x16, pc+268 (addr 0x0000ffff8bd81968)    ;; code: STUB, RecordWriteStub, minor: 11605
0xffff8bd81860   608  blr x16
0xffff8bd81864   612  ldr lr, [jssp], #8
0xffff8bd81868   616  ldr x14, pc+264 (addr 0x0000ffff8bd81970)    ;; external reference (OffsetsVector::static_offsets_vector)
0xffff8bd8186c   620  add x13, x21, #0x27 (39)
0xffff8bd81870   624  subs x12, x12, #0x2 (2)
0xffff8bd81874   628  b.mi #+0x18 (addr 0xffff8bd8188c)
0xffff8bd81878   632  ldr x15, [x14], #8
0xffff8bd8187c   636  lsl x10, x15, #32
0xffff8bd81880   640  and x11, x15, #0xffffffff00000000
0xffff8bd81884   644  stp x10, x11, [x13], #16
0xffff8bd81888   648  b #-0x18 (addr 0xffff8bd81870)
0xffff8bd8188c   652  ldr x0, [jssp]
0xffff8bd81890   656  add jssp, jssp, #0x20 (32)
0xffff8bd81894   660  ret
0xffff8bd81898   664  ldr x10, pc+224 (addr 0x0000ffff8bd81978)    ;; object: 0x26c04519 <the hole>
0xffff8bd8189c   668  ldr x11, pc+228 (addr 0x0000ffff8bd81980)    ;; external reference (Isolate::pending_exception_address)
0xffff8bd818a0   672  ldr x0, [x11]
0xffff8bd818a4   676  cmp x10, x0
0xffff8bd818a8   680  b.eq #+0x20 (addr 0xffff8bd818c8)
0xffff8bd818ac   684  movz x0, #0x4
0xffff8bd818b0   688  ldr x1, pc+216 (addr 0x0000ffff8bd81988)    ;; external reference (Runtime::RegExpExecReThrow)
0xffff8bd818b4   692  ldr x16, pc+220 (addr 0x0000ffff8bd81990)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd818b8   696  br x16
0xffff8bd818bc   700  ldr x0, pc+220 (addr 0x0000ffff8bd81998)    ;; object: 0x26c04211 <null>
0xffff8bd818c0   704  add jssp, jssp, #0x20 (32)
0xffff8bd818c4   708  ret
0xffff8bd818c8   712  movz x0, #0x4
0xffff8bd818cc   716  ldr x1, pc+212 (addr 0x0000ffff8bd819a0)    ;; external reference (Runtime::RegExpExec)
0xffff8bd818d0   720  ldr x16, pc+216 (addr 0x0000ffff8bd819a8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd818d4   724  br x16
0xffff8bd818d8   728  b.ne #+0x10 (addr 0xffff8bd818e8)
0xffff8bd818dc   732  ldur x19, [x19, #31]
0xffff8bd818e0   736  sub x19, x19, #0x17 (23)
0xffff8bd818e4   740  b #-0x258 (addr 0xffff8bd8168c)
0xffff8bd818e8   744  movz w16, #0x90
0xffff8bd818ec   748  tst w6, w16
0xffff8bd818f0   752  b.ne #-0x28 (addr 0xffff8bd818c8)
0xffff8bd818f4   756  ldur w5, [x19, #35]
0xffff8bd818f8   760  ldur x19, [x19, #23]
0xffff8bd818fc   764  b #-0x2a4 (addr 0xffff8bd81658)
0xffff8bd81900   768  5800057f       constant pool begin (num_const = 43)    ;; constant pool
0xffff8bd81904   772  d63f03e0       constant
0xffff8bd81908   776  2cbb7988       constant
0xffff8bd8190c   780  00000000       constant
0xffff8bd81910   784  8bd815a1       constant
0xffff8bd81914   788  0000ffff       constant
0xffff8bd81918   792  2cb8edf8       constant
0xffff8bd8191c   796  00000000       constant
0xffff8bd81920   800  2cb8ed90       constant
0xffff8bd81924   804  00000000       constant
0xffff8bd81928   808  2cb8d2d0       constant
0xffff8bd8192c   812  00000000       constant
0xffff8bd81930   816  2cb91e28       constant
0xffff8bd81934   820  00000000       constant
0xffff8bd81938   824  2cbb7980       constant
0xffff8bd8193c   828  00000000       constant
0xffff8bd81940   832  2cbb7988       constant
0xffff8bd81944   836  00000000       constant
0xffff8bd81948   840  8bd68200       constant
0xffff8bd8194c   844  0000ffff       constant
0xffff8bd81950   848  2cb8ed90       constant
0xffff8bd81954   852  00000000       constant
0xffff8bd81958   856  2cb8edf8       constant
0xffff8bd8195c   860  00000000       constant
0xffff8bd81960   864  8bd80f80       constant
0xffff8bd81964   868  0000ffff       constant
0xffff8bd81968   872  8bd80f80       constant
0xffff8bd8196c   876  0000ffff       constant
0xffff8bd81970   880  2cb91e28       constant
0xffff8bd81974   884  00000000       constant
0xffff8bd81978   888  26c04519       constant
0xffff8bd8197c   892  00000000       constant
0xffff8bd81980   896  2cb8eda0       constant
0xffff8bd81984   900  00000000       constant
0xffff8bd81988   904  00e59010       constant
0xffff8bd8198c   908  00000000       constant
0xffff8bd81990   912  8bd06060       constant
0xffff8bd81994   916  0000ffff       constant
0xffff8bd81998   920  26c04211       constant
0xffff8bd8199c   924  00000000       constant
0xffff8bd819a0   928  00e57200       constant
0xffff8bd819a4   932  00000000       constant
0xffff8bd819a8   936  8bd06060       constant
0xffff8bd819ac   940  0000ffff       constant


RelocInfo (size = 44)
0xffff8bd81600  external reference (RegExpStack::memory_size())  (0x2cbb7988)
0xffff8bd816d8  embedded object  (0xffff8bd815a1 <Code: STUB>)
0xffff8bd816e4  external reference (Isolate::c_entry_fp_address)  (0x2cb8edf8)
0xffff8bd816ec  external reference (Isolate::context_address)  (0x2cb8ed90)
0xffff8bd81708  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd81744  external reference (OffsetsVector::static_offsets_vector)  (0x2cb91e28)
0xffff8bd8174c  external reference (RegExpStack::memory_address())  (0x2cbb7980)
0xffff8bd81754  external reference (RegExpStack::memory_size())  (0x2cbb7988)
0xffff8bd81768  code target (STUB)  (0xffff8bd68200)
0xffff8bd81774  external reference (Isolate::context_address)  (0x2cb8ed90)
0xffff8bd8177c  external reference (Isolate::c_entry_fp_address)  (0x2cb8edf8)
0xffff8bd81820  code target (STUB)  (0xffff8bd80f80)
0xffff8bd8185c  code target (STUB)  (0xffff8bd80f80)
0xffff8bd81868  external reference (OffsetsVector::static_offsets_vector)  (0x2cb91e28)
0xffff8bd81898  embedded object  (0x26c04519 <the hole>)
0xffff8bd8189c  external reference (Isolate::pending_exception_address)  (0x2cb8eda0)
0xffff8bd818b0  external reference (Runtime::RegExpExecReThrow)  (0xe59010)
0xffff8bd818b4  code target (STUB)  (0xffff8bd06060)
0xffff8bd818bc  embedded object  (0x26c04211 <null>)
0xffff8bd818cc  external reference (Runtime::RegExpExec)  (0xe57200)
0xffff8bd818d0  code target (STUB)  (0xffff8bd06060)
0xffff8bd81900  constant pool (size 176)


kind = STUB
major_key = RecordWriteStub
name = RecordWriteStub
compiler = unknown
Instructions (size = 1920)
0xffff8bd81a20     0  adr xzr, #+0x40 (addr 0xffff8bd81a60)
0xffff8bd81a24     4  adr xzr, #+0x360 (addr 0xffff8bd81d84)
0xffff8bd81a28     8  ldr x16, pc+1736 (addr 0x0000ffff8bd820f0)    ;; external reference (store_buffer_top)
0xffff8bd81a2c    12  ldr x3, [x16]
0xffff8bd81a30    16  str x4, [x3], #8
0xffff8bd81a34    20  str x3, [x16]
0xffff8bd81a38    24  tst x3, #0x1ffff
0xffff8bd81a3c    28  b.eq #+0x8 (addr 0xffff8bd81a44)
0xffff8bd81a40    32  ret
0xffff8bd81a44    36  sub csp, jssp, #0x8 (8)
0xffff8bd81a48    40  str lr, [jssp, #-8]!
0xffff8bd81a4c    44  ldr x17, pc+1708 (addr 0x0000ffff8bd820f8)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd81a50    48  blr x17
0xffff8bd81a54    52  ldr lr, [jssp], #8
0xffff8bd81a58    56  ret
0xffff8bd81a5c    60  ret
0xffff8bd81a60    64  sub csp, jssp, #0x10 (16)
0xffff8bd81a64    68  stp x1, x0, [jssp, #-16]!
0xffff8bd81a68    72  ldr x3, [x4]
0xffff8bd81a6c    76  and x16, x3, #0xfffffffffff00000
0xffff8bd81a70    80  ldr x16, [x16, #8]
0xffff8bd81a74    84  tst x16, #0x18
0xffff8bd81a78    88  b.eq #+0x1d8 (addr 0xffff8bd81c50)
0xffff8bd81a7c    92  and x16, x6, #0xfffffffffff00000
0xffff8bd81a80    96  ldr x16, [x16, #8]
0xffff8bd81a84   100  tst x16, #0x18
0xffff8bd81a88   104  b.ne #+0x1c8 (addr 0xffff8bd81c50)
0xffff8bd81a8c   108  and x3, x6, #0xfffffffffff00000
0xffff8bd81a90   112  ldr x0, [x3, #104]
0xffff8bd81a94   116  subs x0, x0, #0x1 (1)
0xffff8bd81a98   120  str x0, [x3, #104]
0xffff8bd81a9c   124  b.mi #+0xc4 (addr 0xffff8bd81b60)
0xffff8bd81aa0   128  ubfx x16, x6, #8, #12
0xffff8bd81aa4   132  and x3, x6, #0xfffffffffff00000
0xffff8bd81aa8   136  add x3, x3, x16, lsl #2
0xffff8bd81aac   140  ubfx x0, x6, #3, #5
0xffff8bd81ab0   144  ldr x3, [x3, #360]
0xffff8bd81ab4   148  lsr x3, x3, x0
0xffff8bd81ab8   152  tbz w3, #0, #+0x8 (addr 0xffff8bd81ac0)
0xffff8bd81abc   156  tbnz w3, #1, #+0x3c (addr 0xffff8bd81af8)
0xffff8bd81ac0   160  ldp x1, x0, [jssp], #16
0xffff8bd81ac4   164  ldr x16, pc+1596 (addr 0x0000ffff8bd82100)    ;; external reference (store_buffer_top)
0xffff8bd81ac8   168  ldr x3, [x16]
0xffff8bd81acc   172  str x4, [x3], #8
0xffff8bd81ad0   176  str x3, [x16]
0xffff8bd81ad4   180  tst x3, #0x1ffff
0xffff8bd81ad8   184  b.eq #+0x8 (addr 0xffff8bd81ae0)
0xffff8bd81adc   188  ret
0xffff8bd81ae0   192  sub csp, jssp, #0x8 (8)
0xffff8bd81ae4   196  str lr, [jssp, #-8]!
0xffff8bd81ae8   200  ldr x17, pc+1568 (addr 0x0000ffff8bd82108)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd81aec   204  blr x17
0xffff8bd81af0   208  ldr lr, [jssp], #8
0xffff8bd81af4   212  ret
0xffff8bd81af8   216  ldr x3, [x4]
0xffff8bd81afc   220  sub csp, jssp, #0x10 (16)
0xffff8bd81b00   224  stp x6, x4, [jssp, #-16]!
0xffff8bd81b04   228  ubfx x16, x3, #8, #12
0xffff8bd81b08   232  and x0, x3, #0xfffffffffff00000
0xffff8bd81b0c   236  add x0, x0, x16, lsl #2
0xffff8bd81b10   240  ubfx x6, x3, #3, #5
0xffff8bd81b14   244  ldr x4, [x0, #360]
0xffff8bd81b18   248  lsr x4, x4, x6
0xffff8bd81b1c   252  tbz w4, #0, #+0x40 (addr 0xffff8bd81b5c)
0xffff8bd81b20   256  ldp x6, x4, [jssp], #16
0xffff8bd81b24   260  ldp x1, x0, [jssp], #16
0xffff8bd81b28   264  ldr x16, pc+1512 (addr 0x0000ffff8bd82110)    ;; external reference (store_buffer_top)
0xffff8bd81b2c   268  ldr x3, [x16]
0xffff8bd81b30   272  str x4, [x3], #8
0xffff8bd81b34   276  str x3, [x16]
0xffff8bd81b38   280  tst x3, #0x1ffff
0xffff8bd81b3c   284  b.eq #+0x8 (addr 0xffff8bd81b44)
0xffff8bd81b40   288  ret
0xffff8bd81b44   292  sub csp, jssp, #0x8 (8)
0xffff8bd81b48   296  str lr, [jssp, #-8]!
0xffff8bd81b4c   300  ldr x17, pc+1484 (addr 0x0000ffff8bd82118)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd81b50   304  blr x17
0xffff8bd81b54   308  ldr lr, [jssp], #8
0xffff8bd81b58   312  ret
0xffff8bd81b5c   316  ldp x6, x4, [jssp], #16
0xffff8bd81b60   320  sub csp, jssp, #0x78 (120)
0xffff8bd81b64   324  stp x14, x15, [jssp, #-32]!
0xffff8bd81b68   328  stp x18, lr, [jssp, #16]
0xffff8bd81b6c   332  stp x10, x11, [jssp, #-32]!
0xffff8bd81b70   336  stp x12, x13, [jssp, #16]
0xffff8bd81b74   340  stp x6, x7, [jssp, #-32]!
0xffff8bd81b78   344  stp x8, x9, [jssp, #16]
0xffff8bd81b7c   348  stp x2, x4, [jssp, #-24]!
0xffff8bd81b80   352  str x5, [jssp, #16]
0xffff8bd81b84   356  sub csp, jssp, #0xb0 (176)
0xffff8bd81b88   360  stp d26, d27, [jssp, #-32]!
0xffff8bd81b8c   364  stp d28, d29, [jssp, #16]
0xffff8bd81b90   368  stp d22, d23, [jssp, #-32]!
0xffff8bd81b94   372  stp d24, d25, [jssp, #16]
0xffff8bd81b98   376  stp d18, d19, [jssp, #-32]!
0xffff8bd81b9c   380  stp d20, d21, [jssp, #16]
0xffff8bd81ba0   384  stp d6, d7, [jssp, #-32]!
0xffff8bd81ba4   388  stp d16, d17, [jssp, #16]
0xffff8bd81ba8   392  stp d2, d3, [jssp, #-32]!
0xffff8bd81bac   396  stp d4, d5, [jssp, #16]
0xffff8bd81bb0   400  stp d0, d1, [jssp, #-16]!
0xffff8bd81bb4   404  mov x0, x6
0xffff8bd81bb8   408  mov x1, x4
0xffff8bd81bbc   412  ldr x2, pc+1380 (addr 0x0000ffff8bd82120)    ;; external reference (isolate)
0xffff8bd81bc0   416  ldr x16, pc+1384 (addr 0x0000ffff8bd82128)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd81bc4   420  and csp, jssp, #0xfffffffffffffff0
0xffff8bd81bc8   424  blr x16
0xffff8bd81bcc   428  ldp d2, d3, [jssp, #16]
0xffff8bd81bd0   432  ldp d0, d1, [jssp], #32
0xffff8bd81bd4   436  ldp d6, d7, [jssp, #16]
0xffff8bd81bd8   440  ldp d4, d5, [jssp], #32
0xffff8bd81bdc   444  ldp d18, d19, [jssp, #16]
0xffff8bd81be0   448  ldp d16, d17, [jssp], #32
0xffff8bd81be4   452  ldp d22, d23, [jssp, #16]
0xffff8bd81be8   456  ldp d20, d21, [jssp], #32
0xffff8bd81bec   460  ldp d26, d27, [jssp, #16]
0xffff8bd81bf0   464  ldp d24, d25, [jssp], #32
0xffff8bd81bf4   468  ldp d28, d29, [jssp], #16
0xffff8bd81bf8   472  ldp x5, x6, [jssp, #16]
0xffff8bd81bfc   476  ldp x2, x4, [jssp], #32
0xffff8bd81c00   480  ldp x9, x10, [jssp, #16]
0xffff8bd81c04   484  ldp x7, x8, [jssp], #32
0xffff8bd81c08   488  ldp x13, x14, [jssp, #16]
0xffff8bd81c0c   492  ldp x11, x12, [jssp], #32
0xffff8bd81c10   496  ldr lr, [jssp, #16]
0xffff8bd81c14   500  ldp x15, x18, [jssp], #24
0xffff8bd81c18   504  ldp x1, x0, [jssp], #16
0xffff8bd81c1c   508  ldr x16, pc+1300 (addr 0x0000ffff8bd82130)    ;; external reference (store_buffer_top)
0xffff8bd81c20   512  ldr x3, [x16]
0xffff8bd81c24   516  str x4, [x3], #8
0xffff8bd81c28   520  str x3, [x16]
0xffff8bd81c2c   524  tst x3, #0x1ffff
0xffff8bd81c30   528  b.eq #+0x8 (addr 0xffff8bd81c38)
0xffff8bd81c34   532  ret
0xffff8bd81c38   536  sub csp, jssp, #0x8 (8)
0xffff8bd81c3c   540  str lr, [jssp, #-8]!
0xffff8bd81c40   544  ldr x17, pc+1272 (addr 0x0000ffff8bd82138)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd81c44   548  blr x17
0xffff8bd81c48   552  ldr lr, [jssp], #8
0xffff8bd81c4c   556  ret
0xffff8bd81c50   560  and x3, x6, #0xfffffffffff00000
0xffff8bd81c54   564  ldr x0, [x3, #104]
0xffff8bd81c58   568  subs x0, x0, #0x1 (1)
0xffff8bd81c5c   572  str x0, [x3, #104]
0xffff8bd81c60   576  b.mi #+0x64 (addr 0xffff8bd81cc4)
0xffff8bd81c64   580  ubfx x16, x6, #8, #12
0xffff8bd81c68   584  and x3, x6, #0xfffffffffff00000
0xffff8bd81c6c   588  add x3, x3, x16, lsl #2
0xffff8bd81c70   592  ubfx x0, x6, #3, #5
0xffff8bd81c74   596  ldr x3, [x3, #360]
0xffff8bd81c78   600  lsr x3, x3, x0
0xffff8bd81c7c   604  tbz w3, #0, #+0x8 (addr 0xffff8bd81c84)
0xffff8bd81c80   608  tbnz w3, #1, #+0xc (addr 0xffff8bd81c8c)
0xffff8bd81c84   612  ldp x1, x0, [jssp], #16
0xffff8bd81c88   616  ret
0xffff8bd81c8c   620  ldr x3, [x4]
0xffff8bd81c90   624  sub csp, jssp, #0x10 (16)
0xffff8bd81c94   628  stp x6, x4, [jssp, #-16]!
0xffff8bd81c98   632  ubfx x16, x3, #8, #12
0xffff8bd81c9c   636  and x0, x3, #0xfffffffffff00000
0xffff8bd81ca0   640  add x0, x0, x16, lsl #2
0xffff8bd81ca4   644  ubfx x6, x3, #3, #5
0xffff8bd81ca8   648  ldr x4, [x0, #360]
0xffff8bd81cac   652  lsr x4, x4, x6
0xffff8bd81cb0   656  tbz w4, #0, #+0x10 (addr 0xffff8bd81cc0)
0xffff8bd81cb4   660  ldp x6, x4, [jssp], #16
0xffff8bd81cb8   664  ldp x1, x0, [jssp], #16
0xffff8bd81cbc   668  ret
0xffff8bd81cc0   672  ldp x6, x4, [jssp], #16
0xffff8bd81cc4   676  sub csp, jssp, #0x78 (120)
0xffff8bd81cc8   680  stp x14, x15, [jssp, #-32]!
0xffff8bd81ccc   684  stp x18, lr, [jssp, #16]
0xffff8bd81cd0   688  stp x10, x11, [jssp, #-32]!
0xffff8bd81cd4   692  stp x12, x13, [jssp, #16]
0xffff8bd81cd8   696  stp x6, x7, [jssp, #-32]!
0xffff8bd81cdc   700  stp x8, x9, [jssp, #16]
0xffff8bd81ce0   704  stp x2, x4, [jssp, #-24]!
0xffff8bd81ce4   708  str x5, [jssp, #16]
0xffff8bd81ce8   712  sub csp, jssp, #0xb0 (176)
0xffff8bd81cec   716  stp d26, d27, [jssp, #-32]!
0xffff8bd81cf0   720  stp d28, d29, [jssp, #16]
0xffff8bd81cf4   724  stp d22, d23, [jssp, #-32]!
0xffff8bd81cf8   728  stp d24, d25, [jssp, #16]
0xffff8bd81cfc   732  stp d18, d19, [jssp, #-32]!
0xffff8bd81d00   736  stp d20, d21, [jssp, #16]
0xffff8bd81d04   740  stp d6, d7, [jssp, #-32]!
0xffff8bd81d08   744  stp d16, d17, [jssp, #16]
0xffff8bd81d0c   748  stp d2, d3, [jssp, #-32]!
0xffff8bd81d10   752  stp d4, d5, [jssp, #16]
0xffff8bd81d14   756  stp d0, d1, [jssp, #-16]!
0xffff8bd81d18   760  mov x0, x6
0xffff8bd81d1c   764  mov x1, x4
0xffff8bd81d20   768  ldr x2, pc+1056 (addr 0x0000ffff8bd82140)    ;; external reference (isolate)
0xffff8bd81d24   772  ldr x16, pc+1060 (addr 0x0000ffff8bd82148)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd81d28   776  and csp, jssp, #0xfffffffffffffff0
0xffff8bd81d2c   780  blr x16
0xffff8bd81d30   784  ldp d2, d3, [jssp, #16]
0xffff8bd81d34   788  ldp d0, d1, [jssp], #32
0xffff8bd81d38   792  ldp d6, d7, [jssp, #16]
0xffff8bd81d3c   796  ldp d4, d5, [jssp], #32
0xffff8bd81d40   800  ldp d18, d19, [jssp, #16]
0xffff8bd81d44   804  ldp d16, d17, [jssp], #32
0xffff8bd81d48   808  ldp d22, d23, [jssp, #16]
0xffff8bd81d4c   812  ldp d20, d21, [jssp], #32
0xffff8bd81d50   816  ldp d26, d27, [jssp, #16]
0xffff8bd81d54   820  ldp d24, d25, [jssp], #32
0xffff8bd81d58   824  ldp d28, d29, [jssp], #16
0xffff8bd81d5c   828  ldp x5, x6, [jssp, #16]
0xffff8bd81d60   832  ldp x2, x4, [jssp], #32
0xffff8bd81d64   836  ldp x9, x10, [jssp, #16]
0xffff8bd81d68   840  ldp x7, x8, [jssp], #32
0xffff8bd81d6c   844  ldp x13, x14, [jssp, #16]
0xffff8bd81d70   848  ldp x11, x12, [jssp], #32
0xffff8bd81d74   852  ldr lr, [jssp, #16]
0xffff8bd81d78   856  ldp x15, x18, [jssp], #24
0xffff8bd81d7c   860  ldp x1, x0, [jssp], #16
0xffff8bd81d80   864  ret
0xffff8bd81d84   868  sub csp, jssp, #0x10 (16)
0xffff8bd81d88   872  stp x1, x0, [jssp, #-16]!
0xffff8bd81d8c   876  ldr x3, [x4]
0xffff8bd81d90   880  and x16, x3, #0xfffffffffff00000
0xffff8bd81d94   884  ldr x16, [x16, #8]
0xffff8bd81d98   888  tst x16, #0x18
0xffff8bd81d9c   892  b.eq #+0x1f8 (addr 0xffff8bd81f94)
0xffff8bd81da0   896  and x16, x6, #0xfffffffffff00000
0xffff8bd81da4   900  ldr x16, [x16, #8]
0xffff8bd81da8   904  tst x16, #0x18
0xffff8bd81dac   908  b.ne #+0x1e8 (addr 0xffff8bd81f94)
0xffff8bd81db0   912  and x3, x6, #0xfffffffffff00000
0xffff8bd81db4   916  ldr x0, [x3, #104]
0xffff8bd81db8   920  subs x0, x0, #0x1 (1)
0xffff8bd81dbc   924  str x0, [x3, #104]
0xffff8bd81dc0   928  b.mi #+0xe4 (addr 0xffff8bd81ea4)
0xffff8bd81dc4   932  ubfx x16, x6, #8, #12
0xffff8bd81dc8   936  and x3, x6, #0xfffffffffff00000
0xffff8bd81dcc   940  add x3, x3, x16, lsl #2
0xffff8bd81dd0   944  ubfx x0, x6, #3, #5
0xffff8bd81dd4   948  ldr x3, [x3, #360]
0xffff8bd81dd8   952  lsr x3, x3, x0
0xffff8bd81ddc   956  tbz w3, #0, #+0x8 (addr 0xffff8bd81de4)
0xffff8bd81de0   960  tbnz w3, #1, #+0x3c (addr 0xffff8bd81e1c)
0xffff8bd81de4   964  ldp x1, x0, [jssp], #16
0xffff8bd81de8   968  ldr x16, pc+872 (addr 0x0000ffff8bd82150)    ;; external reference (store_buffer_top)
0xffff8bd81dec   972  ldr x3, [x16]
0xffff8bd81df0   976  str x4, [x3], #8
0xffff8bd81df4   980  str x3, [x16]
0xffff8bd81df8   984  tst x3, #0x1ffff
0xffff8bd81dfc   988  b.eq #+0x8 (addr 0xffff8bd81e04)
0xffff8bd81e00   992  ret
0xffff8bd81e04   996  sub csp, jssp, #0x8 (8)
0xffff8bd81e08  1000  str lr, [jssp, #-8]!
0xffff8bd81e0c  1004  ldr x17, pc+844 (addr 0x0000ffff8bd82158)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd81e10  1008  blr x17
0xffff8bd81e14  1012  ldr lr, [jssp], #8
0xffff8bd81e18  1016  ret
0xffff8bd81e1c  1020  ldr x3, [x4]
0xffff8bd81e20  1024  and x0, x3, #0xfffffffffff00000
0xffff8bd81e24  1028  ldr x0, [x0, #8]
0xffff8bd81e28  1032  tbz w0, #6, #+0x18 (addr 0xffff8bd81e40)
0xffff8bd81e2c  1036  and x0, x6, #0xfffffffffff00000
0xffff8bd81e30  1040  ldr x0, [x0, #8]
0xffff8bd81e34  1044  movz x16, #0x58
0xffff8bd81e38  1048  tst x0, x16
0xffff8bd81e3c  1052  b.eq #+0x68 (addr 0xffff8bd81ea4)
0xffff8bd81e40  1056  sub csp, jssp, #0x10 (16)
0xffff8bd81e44  1060  stp x6, x4, [jssp, #-16]!
0xffff8bd81e48  1064  ubfx x16, x3, #8, #12
0xffff8bd81e4c  1068  and x0, x3, #0xfffffffffff00000
0xffff8bd81e50  1072  add x0, x0, x16, lsl #2
0xffff8bd81e54  1076  ubfx x6, x3, #3, #5
0xffff8bd81e58  1080  ldr x4, [x0, #360]
0xffff8bd81e5c  1084  lsr x4, x4, x6
0xffff8bd81e60  1088  tbz w4, #0, #+0x40 (addr 0xffff8bd81ea0)
0xffff8bd81e64  1092  ldp x6, x4, [jssp], #16
0xffff8bd81e68  1096  ldp x1, x0, [jssp], #16
0xffff8bd81e6c  1100  ldr x16, pc+756 (addr 0x0000ffff8bd82160)    ;; external reference (store_buffer_top)
0xffff8bd81e70  1104  ldr x3, [x16]
0xffff8bd81e74  1108  str x4, [x3], #8
0xffff8bd81e78  1112  str x3, [x16]
0xffff8bd81e7c  1116  tst x3, #0x1ffff
0xffff8bd81e80  1120  b.eq #+0x8 (addr 0xffff8bd81e88)
0xffff8bd81e84  1124  ret
0xffff8bd81e88  1128  sub csp, jssp, #0x8 (8)
0xffff8bd81e8c  1132  str lr, [jssp, #-8]!
0xffff8bd81e90  1136  ldr x17, pc+728 (addr 0x0000ffff8bd82168)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd81e94  1140  blr x17
0xffff8bd81e98  1144  ldr lr, [jssp], #8
0xffff8bd81e9c  1148  ret
0xffff8bd81ea0  1152  ldp x6, x4, [jssp], #16
0xffff8bd81ea4  1156  sub csp, jssp, #0x78 (120)
0xffff8bd81ea8  1160  stp x14, x15, [jssp, #-32]!
0xffff8bd81eac  1164  stp x18, lr, [jssp, #16]
0xffff8bd81eb0  1168  stp x10, x11, [jssp, #-32]!
0xffff8bd81eb4  1172  stp x12, x13, [jssp, #16]
0xffff8bd81eb8  1176  stp x6, x7, [jssp, #-32]!
0xffff8bd81ebc  1180  stp x8, x9, [jssp, #16]
0xffff8bd81ec0  1184  stp x2, x4, [jssp, #-24]!
0xffff8bd81ec4  1188  str x5, [jssp, #16]
0xffff8bd81ec8  1192  sub csp, jssp, #0xb0 (176)
0xffff8bd81ecc  1196  stp d26, d27, [jssp, #-32]!
0xffff8bd81ed0  1200  stp d28, d29, [jssp, #16]
0xffff8bd81ed4  1204  stp d22, d23, [jssp, #-32]!
0xffff8bd81ed8  1208  stp d24, d25, [jssp, #16]
0xffff8bd81edc  1212  stp d18, d19, [jssp, #-32]!
0xffff8bd81ee0  1216  stp d20, d21, [jssp, #16]
0xffff8bd81ee4  1220  stp d6, d7, [jssp, #-32]!
0xffff8bd81ee8  1224  stp d16, d17, [jssp, #16]
0xffff8bd81eec  1228  stp d2, d3, [jssp, #-32]!
0xffff8bd81ef0  1232  stp d4, d5, [jssp, #16]
0xffff8bd81ef4  1236  stp d0, d1, [jssp, #-16]!
0xffff8bd81ef8  1240  mov x0, x6
0xffff8bd81efc  1244  mov x1, x4
0xffff8bd81f00  1248  ldr x2, pc+624 (addr 0x0000ffff8bd82170)    ;; external reference (isolate)
0xffff8bd81f04  1252  ldr x16, pc+628 (addr 0x0000ffff8bd82178)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd81f08  1256  and csp, jssp, #0xfffffffffffffff0
0xffff8bd81f0c  1260  blr x16
0xffff8bd81f10  1264  ldp d2, d3, [jssp, #16]
0xffff8bd81f14  1268  ldp d0, d1, [jssp], #32
0xffff8bd81f18  1272  ldp d6, d7, [jssp, #16]
0xffff8bd81f1c  1276  ldp d4, d5, [jssp], #32
0xffff8bd81f20  1280  ldp d18, d19, [jssp, #16]
0xffff8bd81f24  1284  ldp d16, d17, [jssp], #32
0xffff8bd81f28  1288  ldp d22, d23, [jssp, #16]
0xffff8bd81f2c  1292  ldp d20, d21, [jssp], #32
0xffff8bd81f30  1296  ldp d26, d27, [jssp, #16]
0xffff8bd81f34  1300  ldp d24, d25, [jssp], #32
0xffff8bd81f38  1304  ldp d28, d29, [jssp], #16
0xffff8bd81f3c  1308  ldp x5, x6, [jssp, #16]
0xffff8bd81f40  1312  ldp x2, x4, [jssp], #32
0xffff8bd81f44  1316  ldp x9, x10, [jssp, #16]
0xffff8bd81f48  1320  ldp x7, x8, [jssp], #32
0xffff8bd81f4c  1324  ldp x13, x14, [jssp, #16]
0xffff8bd81f50  1328  ldp x11, x12, [jssp], #32
0xffff8bd81f54  1332  ldr lr, [jssp, #16]
0xffff8bd81f58  1336  ldp x15, x18, [jssp], #24
0xffff8bd81f5c  1340  ldp x1, x0, [jssp], #16
0xffff8bd81f60  1344  ldr x16, pc+544 (addr 0x0000ffff8bd82180)    ;; external reference (store_buffer_top)
0xffff8bd81f64  1348  ldr x3, [x16]
0xffff8bd81f68  1352  str x4, [x3], #8
0xffff8bd81f6c  1356  str x3, [x16]
0xffff8bd81f70  1360  tst x3, #0x1ffff
0xffff8bd81f74  1364  b.eq #+0x8 (addr 0xffff8bd81f7c)
0xffff8bd81f78  1368  ret
0xffff8bd81f7c  1372  sub csp, jssp, #0x8 (8)
0xffff8bd81f80  1376  str lr, [jssp, #-8]!
0xffff8bd81f84  1380  ldr x17, pc+516 (addr 0x0000ffff8bd82188)    ;; code: STUB, StoreBufferOverflowStub, minor: 1
0xffff8bd81f88  1384  blr x17
0xffff8bd81f8c  1388  ldr lr, [jssp], #8
0xffff8bd81f90  1392  ret
0xffff8bd81f94  1396  and x3, x6, #0xfffffffffff00000
0xffff8bd81f98  1400  ldr x0, [x3, #104]
0xffff8bd81f9c  1404  subs x0, x0, #0x1 (1)
0xffff8bd81fa0  1408  str x0, [x3, #104]
0xffff8bd81fa4  1412  b.mi #+0x84 (addr 0xffff8bd82028)
0xffff8bd81fa8  1416  ubfx x16, x6, #8, #12
0xffff8bd81fac  1420  and x3, x6, #0xfffffffffff00000
0xffff8bd81fb0  1424  add x3, x3, x16, lsl #2
0xffff8bd81fb4  1428  ubfx x0, x6, #3, #5
0xffff8bd81fb8  1432  ldr x3, [x3, #360]
0xffff8bd81fbc  1436  lsr x3, x3, x0
0xffff8bd81fc0  1440  tbz w3, #0, #+0x8 (addr 0xffff8bd81fc8)
0xffff8bd81fc4  1444  tbnz w3, #1, #+0xc (addr 0xffff8bd81fd0)
0xffff8bd81fc8  1448  ldp x1, x0, [jssp], #16
0xffff8bd81fcc  1452  ret
0xffff8bd81fd0  1456  ldr x3, [x4]
0xffff8bd81fd4  1460  and x0, x3, #0xfffffffffff00000
0xffff8bd81fd8  1464  ldr x0, [x0, #8]
0xffff8bd81fdc  1468  tbz w0, #6, #+0x18 (addr 0xffff8bd81ff4)
0xffff8bd81fe0  1472  and x0, x6, #0xfffffffffff00000
0xffff8bd81fe4  1476  ldr x0, [x0, #8]
0xffff8bd81fe8  1480  movz x16, #0x58
0xffff8bd81fec  1484  tst x0, x16
0xffff8bd81ff0  1488  b.eq #+0x38 (addr 0xffff8bd82028)
0xffff8bd81ff4  1492  sub csp, jssp, #0x10 (16)
0xffff8bd81ff8  1496  stp x6, x4, [jssp, #-16]!
0xffff8bd81ffc  1500  ubfx x16, x3, #8, #12
0xffff8bd82000  1504  and x0, x3, #0xfffffffffff00000
0xffff8bd82004  1508  add x0, x0, x16, lsl #2
0xffff8bd82008  1512  ubfx x6, x3, #3, #5
0xffff8bd8200c  1516  ldr x4, [x0, #360]
0xffff8bd82010  1520  lsr x4, x4, x6
0xffff8bd82014  1524  tbz w4, #0, #+0x10 (addr 0xffff8bd82024)
0xffff8bd82018  1528  ldp x6, x4, [jssp], #16
0xffff8bd8201c  1532  ldp x1, x0, [jssp], #16
0xffff8bd82020  1536  ret
0xffff8bd82024  1540  ldp x6, x4, [jssp], #16
0xffff8bd82028  1544  sub csp, jssp, #0x78 (120)
0xffff8bd8202c  1548  stp x14, x15, [jssp, #-32]!
0xffff8bd82030  1552  stp x18, lr, [jssp, #16]
0xffff8bd82034  1556  stp x10, x11, [jssp, #-32]!
0xffff8bd82038  1560  stp x12, x13, [jssp, #16]
0xffff8bd8203c  1564  stp x6, x7, [jssp, #-32]!
0xffff8bd82040  1568  stp x8, x9, [jssp, #16]
0xffff8bd82044  1572  stp x2, x4, [jssp, #-24]!
0xffff8bd82048  1576  str x5, [jssp, #16]
0xffff8bd8204c  1580  sub csp, jssp, #0xb0 (176)
0xffff8bd82050  1584  stp d26, d27, [jssp, #-32]!
0xffff8bd82054  1588  stp d28, d29, [jssp, #16]
0xffff8bd82058  1592  stp d22, d23, [jssp, #-32]!
0xffff8bd8205c  1596  stp d24, d25, [jssp, #16]
0xffff8bd82060  1600  stp d18, d19, [jssp, #-32]!
0xffff8bd82064  1604  stp d20, d21, [jssp, #16]
0xffff8bd82068  1608  stp d6, d7, [jssp, #-32]!
0xffff8bd8206c  1612  stp d16, d17, [jssp, #16]
0xffff8bd82070  1616  stp d2, d3, [jssp, #-32]!
0xffff8bd82074  1620  stp d4, d5, [jssp, #16]
0xffff8bd82078  1624  stp d0, d1, [jssp, #-16]!
0xffff8bd8207c  1628  mov x0, x6
0xffff8bd82080  1632  mov x1, x4
0xffff8bd82084  1636  ldr x2, pc+268 (addr 0x0000ffff8bd82190)    ;; external reference (isolate)
0xffff8bd82088  1640  ldr x16, pc+272 (addr 0x0000ffff8bd82198)    ;; external reference (IncrementalMarking::RecordWrite)
0xffff8bd8208c  1644  and csp, jssp, #0xfffffffffffffff0
0xffff8bd82090  1648  blr x16
0xffff8bd82094  1652  ldp d2, d3, [jssp, #16]
0xffff8bd82098  1656  ldp d0, d1, [jssp], #32
0xffff8bd8209c  1660  ldp d6, d7, [jssp, #16]
0xffff8bd820a0  1664  ldp d4, d5, [jssp], #32
0xffff8bd820a4  1668  ldp d18, d19, [jssp, #16]
0xffff8bd820a8  1672  ldp d16, d17, [jssp], #32
0xffff8bd820ac  1676  ldp d22, d23, [jssp, #16]
0xffff8bd820b0  1680  ldp d20, d21, [jssp], #32
0xffff8bd820b4  1684  ldp d26, d27, [jssp, #16]
0xffff8bd820b8  1688  ldp d24, d25, [jssp], #32
0xffff8bd820bc  1692  ldp d28, d29, [jssp], #16
0xffff8bd820c0  1696  ldp x5, x6, [jssp, #16]
0xffff8bd820c4  1700  ldp x2, x4, [jssp], #32
0xffff8bd820c8  1704  ldp x9, x10, [jssp, #16]
0xffff8bd820cc  1708  ldp x7, x8, [jssp], #32
0xffff8bd820d0  1712  ldp x13, x14, [jssp, #16]
0xffff8bd820d4  1716  ldp x11, x12, [jssp], #32
0xffff8bd820d8  1720  ldr lr, [jssp, #16]
0xffff8bd820dc  1724  ldp x15, x18, [jssp], #24
0xffff8bd820e0  1728  ldp x1, x0, [jssp], #16
0xffff8bd820e4  1732  ret
0xffff8bd820e8  1736  580005bf       constant pool begin (num_const = 45)    ;; constant pool
0xffff8bd820ec  1740  d63f03e0       constant
0xffff8bd820f0  1744  2cb8e8c0       constant
0xffff8bd820f4  1748  00000000       constant
0xffff8bd820f8  1752  8bd065a0       constant
0xffff8bd820fc  1756  0000ffff       constant
0xffff8bd82100  1760  2cb8e8c0       constant
0xffff8bd82104  1764  00000000       constant
0xffff8bd82108  1768  8bd065a0       constant
0xffff8bd8210c  1772  0000ffff       constant
0xffff8bd82110  1776  2cb8e8c0       constant
0xffff8bd82114  1780  00000000       constant
0xffff8bd82118  1784  8bd065a0       constant
0xffff8bd8211c  1788  0000ffff       constant
0xffff8bd82120  1792  2cb8d2d0       constant
0xffff8bd82124  1796  00000000       constant
0xffff8bd82128  1800  00c2d958       constant
0xffff8bd8212c  1804  00000000       constant
0xffff8bd82130  1808  2cb8e8c0       constant
0xffff8bd82134  1812  00000000       constant
0xffff8bd82138  1816  8bd065a0       constant
0xffff8bd8213c  1820  0000ffff       constant
0xffff8bd82140  1824  2cb8d2d0       constant
0xffff8bd82144  1828  00000000       constant
0xffff8bd82148  1832  00c2d958       constant
0xffff8bd8214c  1836  00000000       constant
0xffff8bd82150  1840  2cb8e8c0       constant
0xffff8bd82154  1844  00000000       constant
0xffff8bd82158  1848  8bd065a0       constant
0xffff8bd8215c  1852  0000ffff       constant
0xffff8bd82160  1856  2cb8e8c0       constant
0xffff8bd82164  1860  00000000       constant
0xffff8bd82168  1864  8bd065a0       constant
0xffff8bd8216c  1868  0000ffff       constant
0xffff8bd82170  1872  2cb8d2d0       constant
0xffff8bd82174  1876  00000000       constant
0xffff8bd82178  1880  00c2d958       constant
0xffff8bd8217c  1884  00000000       constant
0xffff8bd82180  1888  2cb8e8c0       constant
0xffff8bd82184  1892  00000000       constant
0xffff8bd82188  1896  8bd065a0       constant
0xffff8bd8218c  1900  0000ffff       constant
0xffff8bd82190  1904  2cb8d2d0       constant
0xffff8bd82194  1908  00000000       constant
0xffff8bd82198  1912  00c2d958       constant
0xffff8bd8219c  1916  00000000       constant


RelocInfo (size = 65)
0xffff8bd81a28  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd81a4c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd81ac4  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd81ae8  code target (STUB)  (0xffff8bd065a0)
0xffff8bd81b28  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd81b4c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd81bbc  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd81bc0  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd81c1c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd81c40  code target (STUB)  (0xffff8bd065a0)
0xffff8bd81d20  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd81d24  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd81de8  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd81e0c  code target (STUB)  (0xffff8bd065a0)
0xffff8bd81e6c  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd81e90  code target (STUB)  (0xffff8bd065a0)
0xffff8bd81f00  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd81f04  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd81f60  external reference (store_buffer_top)  (0x2cb8e8c0)
0xffff8bd81f84  code target (STUB)  (0xffff8bd065a0)
0xffff8bd82084  external reference (isolate)  (0x2cb8d2d0)
0xffff8bd82088  external reference (IncrementalMarking::RecordWrite)  (0xc2d958)
0xffff8bd820e8  constant pool (size 184)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = RegExpConstructResultStub
compiler = crankshaft
Instructions (size = 826)
0xffff8bd82200     0  tbnz w2, #0, #+0x100 (addr 0xffff8bd82300)
0xffff8bd82204     4  asr x4, x2, #32
0xffff8bd82208     8  movz w16, #0x257f
0xffff8bd8220c    12  cmp w4, w16, lsl #3
0xffff8bd82210    16  b.hs #+0x2a8 (addr 0xffff8bd824b8)
0xffff8bd82214    20  lsl w3, w4, #3
0xffff8bd82218    24  add w3, w3, #0x10 (16)
0xffff8bd8221c    28  movz x5, #0xe2c0
0xffff8bd82220    32  movk x5, #0x2cb8, lsl #16
0xffff8bd82224    36  ldp x6, x4, [x5]
0xffff8bd82228    40  adds x16, x6, #0x30 (48)
0xffff8bd8222c    44  ccmp x16, x4, #nzCv, lo
0xffff8bd82230    48  b.hi #+0x118 (addr 0xffff8bd82348)
0xffff8bd82234    52  str x16, [x5]
0xffff8bd82238    56  orr x6, x6, #0x1
0xffff8bd8223c    60  ldur x4, [cp, #39]
0xffff8bd82240    64  movz x16, #0x257
0xffff8bd82244    68  ldr x4, [x4, x16]
0xffff8bd82248    72  stur x4, [x6, #-1]
0xffff8bd8224c    76  ldr x4, pc+532 (addr 0x0000ffff8bd82460)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd82250    80  stur x4, [x6, #7]
0xffff8bd82254    84  ldr x4, pc+532 (addr 0x0000ffff8bd82468)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd82258    88  stur x4, [x6, #15]
0xffff8bd8225c    92  stur x2, [x6, #23]
0xffff8bd82260    96  stur x1, [x6, #31]
0xffff8bd82264   100  stur x0, [x6, #39]
0xffff8bd82268   104  sxtw x3, w3
0xffff8bd8226c   108  movz x4, #0xe2c0
0xffff8bd82270   112  movk x4, #0x2cb8, lsl #16
0xffff8bd82274   116  ldp x7, x16, [x4]
0xffff8bd82278   120  adds x5, x7, x3
0xffff8bd8227c   124  ccmp x5, x16, #nzCv, lo
0xffff8bd82280   128  b.hi #+0x12c (addr 0xffff8bd823ac)
0xffff8bd82284   132  str x5, [x4]
0xffff8bd82288   136  orr x7, x7, #0x1
0xffff8bd8228c   140  ldr x3, pc+484 (addr 0x0000ffff8bd82470)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd82290   144  stur x3, [x7, #-1]
0xffff8bd82294   148  mov x3, x2
0xffff8bd82298   152  tbnz w3, #0, #+0x230 (addr 0xffff8bd824c8)
0xffff8bd8229c   156  stur x3, [x7, #7]
0xffff8bd822a0   160  mov x3, x7
0xffff8bd822a4   164  stur x3, [x6, #15]
0xffff8bd822a8   168  add x4, x6, #0xf (15)
0xffff8bd822ac   172  and x3, x6, #0xfffffffffff00000
0xffff8bd822b0   176  ldr x3, [x3, #8]
0xffff8bd822b4   180  tbz w3, #2, #+0x18 (addr 0xffff8bd822cc)
0xffff8bd822b8   184  sub csp, jssp, #0x8 (8)
0xffff8bd822bc   188  str lr, [jssp, #-8]!
0xffff8bd822c0   192  ldr x16, pc+440 (addr 0x0000ffff8bd82478)    ;; code: STUB, RecordWriteStub, minor: 69734
0xffff8bd822c4   196  blr x16
0xffff8bd822c8   200  ldr lr, [jssp], #8
0xffff8bd822cc   204  mov x3, x2
0xffff8bd822d0   208  tbnz w3, #0, #+0x140 (addr 0xffff8bd82410)
0xffff8bd822d4   212  asr x5, x3, #32
0xffff8bd822d8   216  cmp w5, #0x0 (0)
0xffff8bd822dc   220  b.le #+0x1c (addr 0xffff8bd822f8)
0xffff8bd822e0   224  sub w3, w5, #0x1 (1)
0xffff8bd822e4   228  ldr x4, pc+412 (addr 0x0000ffff8bd82480)    ;; object: 0x26c04241 <undefined>
0xffff8bd822e8   232  add x5, x7, #0xf (15)
0xffff8bd822ec   236  str x4, [x5, w3, sxtw #3]
0xffff8bd822f0   240  lsl x3, x3, #32
0xffff8bd822f4   244  b #-0x24 (addr 0xffff8bd822d0)
0xffff8bd822f8   248  mov x0, x6
0xffff8bd822fc   252  ret
0xffff8bd82300   256  sub csp, jssp, #0x10 (16)
0xffff8bd82304   260  stp fp, lr, [jssp, #-16]!
0xffff8bd82308   264  movz fp, #0xa00000000
0xffff8bd8230c   268  sub csp, jssp, #0x8 (8)
0xffff8bd82310   272  str fp, [jssp, #-8]!
0xffff8bd82314   276  add fp, jssp, #0x8 (8)
0xffff8bd82318   280  ldur x16, [x2, #-1]
0xffff8bd8231c   284  ldr x17, [x26, #120]
0xffff8bd82320   288  cmp x16, x17
0xffff8bd82324   292  b.ne #+0x1b4 (addr 0xffff8bd824d8)
0xffff8bd82328   296  ldur d29, [x2, #7]
0xffff8bd8232c   300  fcvtzs w4, d29
0xffff8bd82330   304  scvtf d0, w4
0xffff8bd82334   308  fcmp d29, d0
0xffff8bd82338   312  b.ne #+0x1a0 (addr 0xffff8bd824d8)
0xffff8bd8233c   316  ldr lr, [jssp, #16]
0xffff8bd82340   320  ldp xzr, fp, [jssp], #24
0xffff8bd82344   324  b #-0x13c (addr 0xffff8bd82208)
0xffff8bd82348   328  sub csp, jssp, #0x10 (16)
0xffff8bd8234c   332  stp fp, lr, [jssp, #-16]!
0xffff8bd82350   336  movz fp, #0xa00000000
0xffff8bd82354   340  sub csp, jssp, #0x8 (8)
0xffff8bd82358   344  str fp, [jssp, #-8]!
0xffff8bd8235c   348  add fp, jssp, #0x8 (8)
0xffff8bd82360   352  movz x6, #0x0
0xffff8bd82364   356  mov x16, lr
0xffff8bd82368   360  ldr x17, pc+288 (addr 0x0000ffff8bd82488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd8236c   364  blr x17
0xffff8bd82370   368  movz x0, #0x3000000000
0xffff8bd82374   372  movz x10, #0x0
0xffff8bd82378   376  sub csp, jssp, #0x10 (16)
0xffff8bd8237c   380  stp x10, x0, [jssp, #-16]!
0xffff8bd82380   384  movz x0, #0x2
0xffff8bd82384   388  movz x1, #0x5b88
0xffff8bd82388   392  movk x1, #0xe2, lsl #16
0xffff8bd8238c   396  ldr x16, pc+260 (addr 0x0000ffff8bd82490)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd82390   400  blr x16
0xffff8bd82394   404  str x0, [jssp, #48]
0xffff8bd82398   408  ldr x16, pc+256 (addr 0x0000ffff8bd82498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd8239c   412  blr x16
0xffff8bd823a0   416  ldr lr, [jssp, #16]
0xffff8bd823a4   420  ldp xzr, fp, [jssp], #24
0xffff8bd823a8   424  b #-0x16c (addr 0xffff8bd8223c)
0xffff8bd823ac   428  sub csp, jssp, #0x10 (16)
0xffff8bd823b0   432  stp fp, lr, [jssp, #-16]!
0xffff8bd823b4   436  movz fp, #0xa00000000
0xffff8bd823b8   440  sub csp, jssp, #0x8 (8)
0xffff8bd823bc   444  str fp, [jssp, #-8]!
0xffff8bd823c0   448  add fp, jssp, #0x8 (8)
0xffff8bd823c4   452  movz x7, #0x0
0xffff8bd823c8   456  mov x16, lr
0xffff8bd823cc   460  ldr x17, pc+212 (addr 0x0000ffff8bd824a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd823d0   464  blr x17
0xffff8bd823d4   468  lsl x0, x3, #32
0xffff8bd823d8   472  movz x10, #0x0
0xffff8bd823dc   476  sub csp, jssp, #0x10 (16)
0xffff8bd823e0   480  stp x10, x0, [jssp, #-16]!
0xffff8bd823e4   484  movz x0, #0x2
0xffff8bd823e8   488  movz x1, #0x5b88
0xffff8bd823ec   492  movk x1, #0xe2, lsl #16
0xffff8bd823f0   496  ldr x16, pc+184 (addr 0x0000ffff8bd824a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd823f4   500  blr x16
0xffff8bd823f8   504  str x0, [jssp, #56]
0xffff8bd823fc   508  ldr x16, pc+180 (addr 0x0000ffff8bd824b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd82400   512  blr x16
0xffff8bd82404   516  ldr lr, [jssp, #16]
0xffff8bd82408   520  ldp xzr, fp, [jssp], #24
0xffff8bd8240c   524  b #-0x180 (addr 0xffff8bd8228c)
0xffff8bd82410   528  sub csp, jssp, #0x10 (16)
0xffff8bd82414   532  stp fp, lr, [jssp, #-16]!
0xffff8bd82418   536  movz fp, #0xa00000000
0xffff8bd8241c   540  sub csp, jssp, #0x8 (8)
0xffff8bd82420   544  str fp, [jssp, #-8]!
0xffff8bd82424   548  add fp, jssp, #0x8 (8)
0xffff8bd82428   552  ldur x16, [x3, #-1]
0xffff8bd8242c   556  ldr x17, [x26, #120]
0xffff8bd82430   560  cmp x16, x17
0xffff8bd82434   564  b.ne #+0xac (addr 0xffff8bd824e0)
0xffff8bd82438   568  ldur d29, [x3, #7]
0xffff8bd8243c   572  fcvtzs w5, d29
0xffff8bd82440   576  scvtf d0, w5
0xffff8bd82444   580  fcmp d29, d0
0xffff8bd82448   584  b.ne #+0x98 (addr 0xffff8bd824e0)
0xffff8bd8244c   588  ldr lr, [jssp, #16]
0xffff8bd82450   592  ldp xzr, fp, [jssp], #24
0xffff8bd82454   596  b #-0x17c (addr 0xffff8bd822d8)
0xffff8bd82458   600  580002ff       constant pool begin (num_const = 23)    ;; constant pool
0xffff8bd8245c   604  d63f03e0       constant
0xffff8bd82460   608  26c04201       constant
0xffff8bd82464   612  00000000       constant
0xffff8bd82468   616  26c04201       constant
0xffff8bd8246c   620  00000000       constant
0xffff8bd82470   624  5f504259       constant
0xffff8bd82474   628  00000000       constant
0xffff8bd82478   632  8bd81a20       constant
0xffff8bd8247c   636  0000ffff       constant
0xffff8bd82480   640  26c04241       constant
0xffff8bd82484   644  00000000       constant
0xffff8bd82488   648  8bd06820       constant
0xffff8bd8248c   652  0000ffff       constant
0xffff8bd82490   656  8bd06260       constant
0xffff8bd82494   660  0000ffff       constant
0xffff8bd82498   664  8bd068e0       constant
0xffff8bd8249c   668  0000ffff       constant
0xffff8bd824a0   672  8bd06820       constant
0xffff8bd824a4   676  0000ffff       constant
0xffff8bd824a8   680  8bd06260       constant
0xffff8bd824ac   684  0000ffff       constant
0xffff8bd824b0   688  8bd068e0       constant
0xffff8bd824b4   692  0000ffff       constant
0xffff8bd824b8   696  movz x16, #0x0
0xffff8bd824bc   700  sub csp, jssp, #0x10 (16)
0xffff8bd824c0   704  stp fp, lr, [jssp, #-16]!
0xffff8bd824c4   708  bl #+0x24 (addr 0xffff8bd824e8)
0xffff8bd824c8   712  movz x16, #0x8
0xffff8bd824cc   716  sub csp, jssp, #0x10 (16)
0xffff8bd824d0   720  stp fp, lr, [jssp, #-16]!
0xffff8bd824d4   724  bl #+0x14 (addr 0xffff8bd824e8)
0xffff8bd824d8   728  movz x16, #0x10
0xffff8bd824dc   732  bl #+0x1c (addr 0xffff8bd824f8)
0xffff8bd824e0   736  movz x16, #0x18
0xffff8bd824e4   740  bl #+0x14 (addr 0xffff8bd824f8)
0xffff8bd824e8   744  movz x17, #0xa00000000
0xffff8bd824ec   748  sub csp, jssp, #0x10 (16)
0xffff8bd824f0   752  stp x17, cp, [jssp, #-16]!
0xffff8bd824f4   756  add fp, jssp, #0x10 (16)
0xffff8bd824f8   760  ldr x17, pc+24 (addr 0x0000ffff8bd82510)    ;; lazy deoptimization bailout 0
0xffff8bd824fc   764  add x17, x17, x16
0xffff8bd82500   768  br x17
0xffff8bd82504   772  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd82508   776  d63f03e0       constant
0xffff8bd8250c   780  d503201f       constant
0xffff8bd82510   784  8bb06000       constant
0xffff8bd82514   788  0000ffff       constant


Safepoints (size = 34)
0xffff8bd82394   404  000 | x0 | x1 | x2 | x6 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd823f8   504  000 | x0 | x1 | x2 | x6 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 33)
0xffff8bd8224c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd82254  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd8228c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd822c0  code target (STUB)  (0xffff8bd81a20)
0xffff8bd822e4  embedded object  (0x26c04241 <undefined>)
0xffff8bd82368  code target (STUB)  (0xffff8bd06820)
0xffff8bd8238c  code target (STUB)  (0xffff8bd06260)
0xffff8bd82398  code target (STUB)  (0xffff8bd068e0)
0xffff8bd823cc  code target (STUB)  (0xffff8bd06820)
0xffff8bd823f0  code target (STUB)  (0xffff8bd06260)
0xffff8bd823fc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd82458  constant pool (size 96)
0xffff8bd824f8  runtime entry
0xffff8bd82504  constant pool (size 20)

--- End code ---
kind = STUB
major_key = RegExpConstructResultStub
name = RegExpConstructResultStub
compiler = crankshaft
Instructions (size = 826)
0xffff8bd82200     0  tbnz w2, #0, #+0x100 (addr 0xffff8bd82300)
0xffff8bd82204     4  asr x4, x2, #32
0xffff8bd82208     8  movz w16, #0x257f
0xffff8bd8220c    12  cmp w4, w16, lsl #3
0xffff8bd82210    16  b.hs #+0x2a8 (addr 0xffff8bd824b8)
0xffff8bd82214    20  lsl w3, w4, #3
0xffff8bd82218    24  add w3, w3, #0x10 (16)
0xffff8bd8221c    28  movz x5, #0xe2c0
0xffff8bd82220    32  movk x5, #0x2cb8, lsl #16
0xffff8bd82224    36  ldp x6, x4, [x5]
0xffff8bd82228    40  adds x16, x6, #0x30 (48)
0xffff8bd8222c    44  ccmp x16, x4, #nzCv, lo
0xffff8bd82230    48  b.hi #+0x118 (addr 0xffff8bd82348)
0xffff8bd82234    52  str x16, [x5]
0xffff8bd82238    56  orr x6, x6, #0x1
0xffff8bd8223c    60  ldur x4, [cp, #39]
0xffff8bd82240    64  movz x16, #0x257
0xffff8bd82244    68  ldr x4, [x4, x16]
0xffff8bd82248    72  stur x4, [x6, #-1]
0xffff8bd8224c    76  ldr x4, pc+532 (addr 0x0000ffff8bd82460)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd82250    80  stur x4, [x6, #7]
0xffff8bd82254    84  ldr x4, pc+532 (addr 0x0000ffff8bd82468)    ;; object: 0x26c04201 <FixedArray[0]>
0xffff8bd82258    88  stur x4, [x6, #15]
0xffff8bd8225c    92  stur x2, [x6, #23]
0xffff8bd82260    96  stur x1, [x6, #31]
0xffff8bd82264   100  stur x0, [x6, #39]
0xffff8bd82268   104  sxtw x3, w3
0xffff8bd8226c   108  movz x4, #0xe2c0
0xffff8bd82270   112  movk x4, #0x2cb8, lsl #16
0xffff8bd82274   116  ldp x7, x16, [x4]
0xffff8bd82278   120  adds x5, x7, x3
0xffff8bd8227c   124  ccmp x5, x16, #nzCv, lo
0xffff8bd82280   128  b.hi #+0x12c (addr 0xffff8bd823ac)
0xffff8bd82284   132  str x5, [x4]
0xffff8bd82288   136  orr x7, x7, #0x1
0xffff8bd8228c   140  ldr x3, pc+484 (addr 0x0000ffff8bd82470)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd82290   144  stur x3, [x7, #-1]
0xffff8bd82294   148  mov x3, x2
0xffff8bd82298   152  tbnz w3, #0, #+0x230 (addr 0xffff8bd824c8)
0xffff8bd8229c   156  stur x3, [x7, #7]
0xffff8bd822a0   160  mov x3, x7
0xffff8bd822a4   164  stur x3, [x6, #15]
0xffff8bd822a8   168  add x4, x6, #0xf (15)
0xffff8bd822ac   172  and x3, x6, #0xfffffffffff00000
0xffff8bd822b0   176  ldr x3, [x3, #8]
0xffff8bd822b4   180  tbz w3, #2, #+0x18 (addr 0xffff8bd822cc)
0xffff8bd822b8   184  sub csp, jssp, #0x8 (8)
0xffff8bd822bc   188  str lr, [jssp, #-8]!
0xffff8bd822c0   192  ldr x16, pc+440 (addr 0x0000ffff8bd82478)    ;; code: STUB, RecordWriteStub, minor: 69734
0xffff8bd822c4   196  blr x16
0xffff8bd822c8   200  ldr lr, [jssp], #8
0xffff8bd822cc   204  mov x3, x2
0xffff8bd822d0   208  tbnz w3, #0, #+0x140 (addr 0xffff8bd82410)
0xffff8bd822d4   212  asr x5, x3, #32
0xffff8bd822d8   216  cmp w5, #0x0 (0)
0xffff8bd822dc   220  b.le #+0x1c (addr 0xffff8bd822f8)
0xffff8bd822e0   224  sub w3, w5, #0x1 (1)
0xffff8bd822e4   228  ldr x4, pc+412 (addr 0x0000ffff8bd82480)    ;; object: 0x26c04241 <undefined>
0xffff8bd822e8   232  add x5, x7, #0xf (15)
0xffff8bd822ec   236  str x4, [x5, w3, sxtw #3]
0xffff8bd822f0   240  lsl x3, x3, #32
0xffff8bd822f4   244  b #-0x24 (addr 0xffff8bd822d0)
0xffff8bd822f8   248  mov x0, x6
0xffff8bd822fc   252  ret
0xffff8bd82300   256  sub csp, jssp, #0x10 (16)
0xffff8bd82304   260  stp fp, lr, [jssp, #-16]!
0xffff8bd82308   264  movz fp, #0xa00000000
0xffff8bd8230c   268  sub csp, jssp, #0x8 (8)
0xffff8bd82310   272  str fp, [jssp, #-8]!
0xffff8bd82314   276  add fp, jssp, #0x8 (8)
0xffff8bd82318   280  ldur x16, [x2, #-1]
0xffff8bd8231c   284  ldr x17, [x26, #120]
0xffff8bd82320   288  cmp x16, x17
0xffff8bd82324   292  b.ne #+0x1b4 (addr 0xffff8bd824d8)
0xffff8bd82328   296  ldur d29, [x2, #7]
0xffff8bd8232c   300  fcvtzs w4, d29
0xffff8bd82330   304  scvtf d0, w4
0xffff8bd82334   308  fcmp d29, d0
0xffff8bd82338   312  b.ne #+0x1a0 (addr 0xffff8bd824d8)
0xffff8bd8233c   316  ldr lr, [jssp, #16]
0xffff8bd82340   320  ldp xzr, fp, [jssp], #24
0xffff8bd82344   324  b #-0x13c (addr 0xffff8bd82208)
0xffff8bd82348   328  sub csp, jssp, #0x10 (16)
0xffff8bd8234c   332  stp fp, lr, [jssp, #-16]!
0xffff8bd82350   336  movz fp, #0xa00000000
0xffff8bd82354   340  sub csp, jssp, #0x8 (8)
0xffff8bd82358   344  str fp, [jssp, #-8]!
0xffff8bd8235c   348  add fp, jssp, #0x8 (8)
0xffff8bd82360   352  movz x6, #0x0
0xffff8bd82364   356  mov x16, lr
0xffff8bd82368   360  ldr x17, pc+288 (addr 0x0000ffff8bd82488)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd8236c   364  blr x17
0xffff8bd82370   368  movz x0, #0x3000000000
0xffff8bd82374   372  movz x10, #0x0
0xffff8bd82378   376  sub csp, jssp, #0x10 (16)
0xffff8bd8237c   380  stp x10, x0, [jssp, #-16]!
0xffff8bd82380   384  movz x0, #0x2
0xffff8bd82384   388  movz x1, #0x5b88
0xffff8bd82388   392  movk x1, #0xe2, lsl #16
0xffff8bd8238c   396  ldr x16, pc+260 (addr 0x0000ffff8bd82490)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd82390   400  blr x16
0xffff8bd82394   404  str x0, [jssp, #48]
0xffff8bd82398   408  ldr x16, pc+256 (addr 0x0000ffff8bd82498)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd8239c   412  blr x16
0xffff8bd823a0   416  ldr lr, [jssp, #16]
0xffff8bd823a4   420  ldp xzr, fp, [jssp], #24
0xffff8bd823a8   424  b #-0x16c (addr 0xffff8bd8223c)
0xffff8bd823ac   428  sub csp, jssp, #0x10 (16)
0xffff8bd823b0   432  stp fp, lr, [jssp, #-16]!
0xffff8bd823b4   436  movz fp, #0xa00000000
0xffff8bd823b8   440  sub csp, jssp, #0x8 (8)
0xffff8bd823bc   444  str fp, [jssp, #-8]!
0xffff8bd823c0   448  add fp, jssp, #0x8 (8)
0xffff8bd823c4   452  movz x7, #0x0
0xffff8bd823c8   456  mov x16, lr
0xffff8bd823cc   460  ldr x17, pc+212 (addr 0x0000ffff8bd824a0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd823d0   464  blr x17
0xffff8bd823d4   468  lsl x0, x3, #32
0xffff8bd823d8   472  movz x10, #0x0
0xffff8bd823dc   476  sub csp, jssp, #0x10 (16)
0xffff8bd823e0   480  stp x10, x0, [jssp, #-16]!
0xffff8bd823e4   484  movz x0, #0x2
0xffff8bd823e8   488  movz x1, #0x5b88
0xffff8bd823ec   492  movk x1, #0xe2, lsl #16
0xffff8bd823f0   496  ldr x16, pc+184 (addr 0x0000ffff8bd824a8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd823f4   500  blr x16
0xffff8bd823f8   504  str x0, [jssp, #56]
0xffff8bd823fc   508  ldr x16, pc+180 (addr 0x0000ffff8bd824b0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd82400   512  blr x16
0xffff8bd82404   516  ldr lr, [jssp, #16]
0xffff8bd82408   520  ldp xzr, fp, [jssp], #24
0xffff8bd8240c   524  b #-0x180 (addr 0xffff8bd8228c)
0xffff8bd82410   528  sub csp, jssp, #0x10 (16)
0xffff8bd82414   532  stp fp, lr, [jssp, #-16]!
0xffff8bd82418   536  movz fp, #0xa00000000
0xffff8bd8241c   540  sub csp, jssp, #0x8 (8)
0xffff8bd82420   544  str fp, [jssp, #-8]!
0xffff8bd82424   548  add fp, jssp, #0x8 (8)
0xffff8bd82428   552  ldur x16, [x3, #-1]
0xffff8bd8242c   556  ldr x17, [x26, #120]
0xffff8bd82430   560  cmp x16, x17
0xffff8bd82434   564  b.ne #+0xac (addr 0xffff8bd824e0)
0xffff8bd82438   568  ldur d29, [x3, #7]
0xffff8bd8243c   572  fcvtzs w5, d29
0xffff8bd82440   576  scvtf d0, w5
0xffff8bd82444   580  fcmp d29, d0
0xffff8bd82448   584  b.ne #+0x98 (addr 0xffff8bd824e0)
0xffff8bd8244c   588  ldr lr, [jssp, #16]
0xffff8bd82450   592  ldp xzr, fp, [jssp], #24
0xffff8bd82454   596  b #-0x17c (addr 0xffff8bd822d8)
0xffff8bd82458   600  580002ff       constant pool begin (num_const = 23)    ;; constant pool
0xffff8bd8245c   604  d63f03e0       constant
0xffff8bd82460   608  26c04201       constant
0xffff8bd82464   612  00000000       constant
0xffff8bd82468   616  26c04201       constant
0xffff8bd8246c   620  00000000       constant
0xffff8bd82470   624  5f504259       constant
0xffff8bd82474   628  00000000       constant
0xffff8bd82478   632  8bd81a20       constant
0xffff8bd8247c   636  0000ffff       constant
0xffff8bd82480   640  26c04241       constant
0xffff8bd82484   644  00000000       constant
0xffff8bd82488   648  8bd06820       constant
0xffff8bd8248c   652  0000ffff       constant
0xffff8bd82490   656  8bd06260       constant
0xffff8bd82494   660  0000ffff       constant
0xffff8bd82498   664  8bd068e0       constant
0xffff8bd8249c   668  0000ffff       constant
0xffff8bd824a0   672  8bd06820       constant
0xffff8bd824a4   676  0000ffff       constant
0xffff8bd824a8   680  8bd06260       constant
0xffff8bd824ac   684  0000ffff       constant
0xffff8bd824b0   688  8bd068e0       constant
0xffff8bd824b4   692  0000ffff       constant
0xffff8bd824b8   696  movz x16, #0x0
0xffff8bd824bc   700  sub csp, jssp, #0x10 (16)
0xffff8bd824c0   704  stp fp, lr, [jssp, #-16]!
0xffff8bd824c4   708  bl #+0x24 (addr 0xffff8bd824e8)
0xffff8bd824c8   712  movz x16, #0x8
0xffff8bd824cc   716  sub csp, jssp, #0x10 (16)
0xffff8bd824d0   720  stp fp, lr, [jssp, #-16]!
0xffff8bd824d4   724  bl #+0x14 (addr 0xffff8bd824e8)
0xffff8bd824d8   728  movz x16, #0x10
0xffff8bd824dc   732  bl #+0x1c (addr 0xffff8bd824f8)
0xffff8bd824e0   736  movz x16, #0x18
0xffff8bd824e4   740  bl #+0x14 (addr 0xffff8bd824f8)
0xffff8bd824e8   744  movz x17, #0xa00000000
0xffff8bd824ec   748  sub csp, jssp, #0x10 (16)
0xffff8bd824f0   752  stp x17, cp, [jssp, #-16]!
0xffff8bd824f4   756  add fp, jssp, #0x10 (16)
0xffff8bd824f8   760  ldr x17, pc+24 (addr 0x0000ffff8bd82510)    ;; lazy deoptimization bailout 0
0xffff8bd824fc   764  add x17, x17, x16
0xffff8bd82500   768  br x17
0xffff8bd82504   772  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd82508   776  d63f03e0       constant
0xffff8bd8250c   780  d503201f       constant
0xffff8bd82510   784  8bb06000       constant
0xffff8bd82514   788  0000ffff       constant


Safepoints (size = 34)
0xffff8bd82394   404  000 | x0 | x1 | x2 | x6 | x27 (sp -> fp)  <none> argc: 2
0xffff8bd823f8   504  000 | x0 | x1 | x2 | x6 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 33)
0xffff8bd8224c  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd82254  embedded object  (0x26c04201 <FixedArray[0]>)
0xffff8bd8228c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd822c0  code target (STUB)  (0xffff8bd81a20)
0xffff8bd822e4  embedded object  (0x26c04241 <undefined>)
0xffff8bd82368  code target (STUB)  (0xffff8bd06820)
0xffff8bd8238c  code target (STUB)  (0xffff8bd06260)
0xffff8bd82398  code target (STUB)  (0xffff8bd068e0)
0xffff8bd823cc  code target (STUB)  (0xffff8bd06820)
0xffff8bd823f0  code target (STUB)  (0xffff8bd06260)
0xffff8bd823fc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd82458  constant pool (size 96)
0xffff8bd824f8  runtime entry
0xffff8bd82504  constant pool (size 20)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 4
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 128)
0xffff8bd834a0     0  ldr x16, [x26, #56]
0xffff8bd834a4     4  cmp x0, x16
0xffff8bd834a8     8  b.eq #+0x8 (addr 0xffff8bd834b0)
0xffff8bd834ac    12  b #+0x2c (addr 0xffff8bd834d8)
0xffff8bd834b0    16  ldr x0, pc+24 (addr 0x0000ffff8bd834c8)    ;; object: 0x26c042b1 <false>
0xffff8bd834b4    20  ret
0xffff8bd834b8    24  ldr x0, pc+24 (addr 0x0000ffff8bd834d0)    ;; object: 0x26c04281 <true>
0xffff8bd834bc    28  ret
0xffff8bd834c0    32  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd834c4    36  d63f03e0       constant
0xffff8bd834c8    40  26c042b1       constant
0xffff8bd834cc    44  00000000       constant
0xffff8bd834d0    48  26c04281       constant
0xffff8bd834d4    52  00000000       constant
0xffff8bd834d8    56  movz x16, #0x0
0xffff8bd834dc    60  sub csp, jssp, #0x10 (16)
0xffff8bd834e0    64  stp fp, lr, [jssp, #-16]!
0xffff8bd834e4    68  bl #+0x4 (addr 0xffff8bd834e8)
0xffff8bd834e8    72  movz x17, #0xa00000000
0xffff8bd834ec    76  sub csp, jssp, #0x10 (16)
0xffff8bd834f0    80  stp x17, cp, [jssp, #-16]!
0xffff8bd834f4    84  add fp, jssp, #0x10 (16)
0xffff8bd834f8    88  ldr x17, pc+24 (addr 0x0000ffff8bd83510)    ;; lazy deoptimization bailout 0
0xffff8bd834fc    92  add x17, x17, x16
0xffff8bd83500    96  br x17
0xffff8bd83504   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd83508   104  d63f03e0       constant
0xffff8bd8350c   108  d503201f       constant
0xffff8bd83510   112  8bb06000       constant
0xffff8bd83514   116  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd834b0  embedded object  (0x26c042b1 <false>)
0xffff8bd834b8  embedded object  (0x26c04281 <true>)
0xffff8bd834c0  constant pool (size 24)
0xffff8bd834f8  runtime entry
0xffff8bd83504  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 4
type = NORMAL
name = ToBooleanICStub(Null)
compiler = crankshaft
Instructions (size = 128)
0xffff8bd834a0     0  ldr x16, [x26, #56]
0xffff8bd834a4     4  cmp x0, x16
0xffff8bd834a8     8  b.eq #+0x8 (addr 0xffff8bd834b0)
0xffff8bd834ac    12  b #+0x2c (addr 0xffff8bd834d8)
0xffff8bd834b0    16  ldr x0, pc+24 (addr 0x0000ffff8bd834c8)    ;; object: 0x26c042b1 <false>
0xffff8bd834b4    20  ret
0xffff8bd834b8    24  ldr x0, pc+24 (addr 0x0000ffff8bd834d0)    ;; object: 0x26c04281 <true>
0xffff8bd834bc    28  ret
0xffff8bd834c0    32  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd834c4    36  d63f03e0       constant
0xffff8bd834c8    40  26c042b1       constant
0xffff8bd834cc    44  00000000       constant
0xffff8bd834d0    48  26c04281       constant
0xffff8bd834d4    52  00000000       constant
0xffff8bd834d8    56  movz x16, #0x0
0xffff8bd834dc    60  sub csp, jssp, #0x10 (16)
0xffff8bd834e0    64  stp fp, lr, [jssp, #-16]!
0xffff8bd834e4    68  bl #+0x4 (addr 0xffff8bd834e8)
0xffff8bd834e8    72  movz x17, #0xa00000000
0xffff8bd834ec    76  sub csp, jssp, #0x10 (16)
0xffff8bd834f0    80  stp x17, cp, [jssp, #-16]!
0xffff8bd834f4    84  add fp, jssp, #0x10 (16)
0xffff8bd834f8    88  ldr x17, pc+24 (addr 0x0000ffff8bd83510)    ;; lazy deoptimization bailout 0
0xffff8bd834fc    92  add x17, x17, x16
0xffff8bd83500    96  br x17
0xffff8bd83504   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd83508   104  d63f03e0       constant
0xffff8bd8350c   108  d503201f       constant
0xffff8bd83510   112  8bb06000       constant
0xffff8bd83514   116  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd834b0  embedded object  (0x26c042b1 <false>)
0xffff8bd834b8  embedded object  (0x26c04281 <true>)
0xffff8bd834c0  constant pool (size 24)
0xffff8bd834f8  runtime entry
0xffff8bd83504  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 509)
0xffff8bd87c00     0  movz x2, #0xe2c0
0xffff8bd87c04     4  movk x2, #0x2cb8, lsl #16
0xffff8bd87c08     8  ldp x3, x0, [x2]
0xffff8bd87c0c    12  adds x16, x3, #0xb0 (176)
0xffff8bd87c10    16  ccmp x16, x0, #nzCv, lo
0xffff8bd87c14    20  b.hi #+0xbc (addr 0xffff8bd87cd0)
0xffff8bd87c18    24  str x16, [x2]
0xffff8bd87c1c    28  orr x3, x3, #0x1
0xffff8bd87c20    32  ldr x0, pc+288 (addr 0x0000ffff8bd87d40)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd87c24    36  stur x0, [x3, #-1]
0xffff8bd87c28    40  movz x0, #0x1400000000
0xffff8bd87c2c    44  stur x0, [x3, #7]
0xffff8bd87c30    48  stur x1, [x3, #15]
0xffff8bd87c34    52  stur cp, [x3, #23]
0xffff8bd87c38    56  ldr x0, pc+272 (addr 0x0000ffff8bd87d48)    ;; object: 0x26c04519 <the hole>
0xffff8bd87c3c    60  stur x0, [x3, #31]
0xffff8bd87c40    64  ldur x0, [cp, #39]
0xffff8bd87c44    68  stur x0, [x3, #39]
0xffff8bd87c48    72  ldr x0, pc+264 (addr 0x0000ffff8bd87d50)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c4c    76  stur x0, [x3, #47]
0xffff8bd87c50    80  ldr x0, pc+264 (addr 0x0000ffff8bd87d58)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c54    84  stur x0, [x3, #55]
0xffff8bd87c58    88  ldr x0, pc+264 (addr 0x0000ffff8bd87d60)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c5c    92  stur x0, [x3, #63]
0xffff8bd87c60    96  ldr x0, pc+264 (addr 0x0000ffff8bd87d68)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c64   100  stur x0, [x3, #71]
0xffff8bd87c68   104  ldr x0, pc+264 (addr 0x0000ffff8bd87d70)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c6c   108  stur x0, [x3, #79]
0xffff8bd87c70   112  ldr x0, pc+264 (addr 0x0000ffff8bd87d78)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c74   116  stur x0, [x3, #87]
0xffff8bd87c78   120  ldr x0, pc+264 (addr 0x0000ffff8bd87d80)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c7c   124  stur x0, [x3, #95]
0xffff8bd87c80   128  ldr x0, pc+264 (addr 0x0000ffff8bd87d88)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c84   132  stur x0, [x3, #103]
0xffff8bd87c88   136  ldr x0, pc+264 (addr 0x0000ffff8bd87d90)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c8c   140  stur x0, [x3, #111]
0xffff8bd87c90   144  ldr x0, pc+264 (addr 0x0000ffff8bd87d98)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c94   148  stur x0, [x3, #119]
0xffff8bd87c98   152  ldr x0, pc+264 (addr 0x0000ffff8bd87da0)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c9c   156  stur x0, [x3, #127]
0xffff8bd87ca0   160  ldr x0, pc+264 (addr 0x0000ffff8bd87da8)    ;; object: 0x26c04241 <undefined>
0xffff8bd87ca4   164  stur x0, [x3, #135]
0xffff8bd87ca8   168  ldr x0, pc+264 (addr 0x0000ffff8bd87db0)    ;; object: 0x26c04241 <undefined>
0xffff8bd87cac   172  stur x0, [x3, #143]
0xffff8bd87cb0   176  ldr x0, pc+264 (addr 0x0000ffff8bd87db8)    ;; object: 0x26c04241 <undefined>
0xffff8bd87cb4   180  stur x0, [x3, #151]
0xffff8bd87cb8   184  ldr x0, pc+264 (addr 0x0000ffff8bd87dc0)    ;; object: 0x26c04241 <undefined>
0xffff8bd87cbc   188  stur x0, [x3, #159]
0xffff8bd87cc0   192  ldr x0, pc+264 (addr 0x0000ffff8bd87dc8)    ;; object: 0x26c04241 <undefined>
0xffff8bd87cc4   196  stur x0, [x3, #167]
0xffff8bd87cc8   200  mov x0, x3
0xffff8bd87ccc   204  ret
0xffff8bd87cd0   208  sub csp, jssp, #0x10 (16)
0xffff8bd87cd4   212  stp fp, lr, [jssp, #-16]!
0xffff8bd87cd8   216  movz fp, #0xa00000000
0xffff8bd87cdc   220  sub csp, jssp, #0x8 (8)
0xffff8bd87ce0   224  str fp, [jssp, #-8]!
0xffff8bd87ce4   228  add fp, jssp, #0x8 (8)
0xffff8bd87ce8   232  movz x3, #0x0
0xffff8bd87cec   236  mov x16, lr
0xffff8bd87cf0   240  ldr x17, pc+224 (addr 0x0000ffff8bd87dd0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd87cf4   244  blr x17
0xffff8bd87cf8   248  movz x0, #0xb000000000
0xffff8bd87cfc   252  movz x10, #0x0
0xffff8bd87d00   256  sub csp, jssp, #0x10 (16)
0xffff8bd87d04   260  stp x10, x0, [jssp, #-16]!
0xffff8bd87d08   264  movz x0, #0x2
0xffff8bd87d0c   268  movz x1, #0x5b88
0xffff8bd87d10   272  movk x1, #0xe2, lsl #16
0xffff8bd87d14   276  ldr x16, pc+196 (addr 0x0000ffff8bd87dd8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd87d18   280  blr x16
0xffff8bd87d1c   284  str x0, [jssp, #24]
0xffff8bd87d20   288  ldr x16, pc+192 (addr 0x0000ffff8bd87de0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd87d24   292  blr x16
0xffff8bd87d28   296  ldr lr, [jssp, #16]
0xffff8bd87d2c   300  ldp xzr, fp, [jssp], #24
0xffff8bd87d30   304  b #-0x110 (addr 0xffff8bd87c20)
0xffff8bd87d34   308  5800059f       constant pool begin (num_const = 44)    ;; constant pool
0xffff8bd87d38   312  d63f03e0       constant
0xffff8bd87d3c   316  d503201f       constant
0xffff8bd87d40   320  5f506149       constant
0xffff8bd87d44   324  00000000       constant
0xffff8bd87d48   328  26c04519       constant
0xffff8bd87d4c   332  00000000       constant
0xffff8bd87d50   336  26c04241       constant
0xffff8bd87d54   340  00000000       constant
0xffff8bd87d58   344  26c04241       constant
0xffff8bd87d5c   348  00000000       constant
0xffff8bd87d60   352  26c04241       constant
0xffff8bd87d64   356  00000000       constant
0xffff8bd87d68   360  26c04241       constant
0xffff8bd87d6c   364  00000000       constant
0xffff8bd87d70   368  26c04241       constant
0xffff8bd87d74   372  00000000       constant
0xffff8bd87d78   376  26c04241       constant
0xffff8bd87d7c   380  00000000       constant
0xffff8bd87d80   384  26c04241       constant
0xffff8bd87d84   388  00000000       constant
0xffff8bd87d88   392  26c04241       constant
0xffff8bd87d8c   396  00000000       constant
0xffff8bd87d90   400  26c04241       constant
0xffff8bd87d94   404  00000000       constant
0xffff8bd87d98   408  26c04241       constant
0xffff8bd87d9c   412  00000000       constant
0xffff8bd87da0   416  26c04241       constant
0xffff8bd87da4   420  00000000       constant
0xffff8bd87da8   424  26c04241       constant
0xffff8bd87dac   428  00000000       constant
0xffff8bd87db0   432  26c04241       constant
0xffff8bd87db4   436  00000000       constant
0xffff8bd87db8   440  26c04241       constant
0xffff8bd87dbc   444  00000000       constant
0xffff8bd87dc0   448  26c04241       constant
0xffff8bd87dc4   452  00000000       constant
0xffff8bd87dc8   456  26c04241       constant
0xffff8bd87dcc   460  00000000       constant
0xffff8bd87dd0   464  8bd06820       constant
0xffff8bd87dd4   468  0000ffff       constant
0xffff8bd87dd8   472  8bd06260       constant
0xffff8bd87ddc   476  0000ffff       constant
0xffff8bd87de0   480  8bd068e0       constant
0xffff8bd87de4   484  0000ffff       constant


Safepoints (size = 21)
0xffff8bd87d1c   284  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd87c20  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd87c38  embedded object  (0x26c04519 <the hole>)
0xffff8bd87c48  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c50  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c58  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c60  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c68  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c70  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c78  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c80  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c88  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c90  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c98  embedded object  (0x26c04241 <undefined>)
0xffff8bd87ca0  embedded object  (0x26c04241 <undefined>)
0xffff8bd87ca8  embedded object  (0x26c04241 <undefined>)
0xffff8bd87cb0  embedded object  (0x26c04241 <undefined>)
0xffff8bd87cb8  embedded object  (0x26c04241 <undefined>)
0xffff8bd87cc0  embedded object  (0x26c04241 <undefined>)
0xffff8bd87cf0  code target (STUB)  (0xffff8bd06820)
0xffff8bd87d14  code target (STUB)  (0xffff8bd06260)
0xffff8bd87d20  code target (STUB)  (0xffff8bd068e0)
0xffff8bd87d34  constant pool (size 180)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 509)
0xffff8bd87c00     0  movz x2, #0xe2c0
0xffff8bd87c04     4  movk x2, #0x2cb8, lsl #16
0xffff8bd87c08     8  ldp x3, x0, [x2]
0xffff8bd87c0c    12  adds x16, x3, #0xb0 (176)
0xffff8bd87c10    16  ccmp x16, x0, #nzCv, lo
0xffff8bd87c14    20  b.hi #+0xbc (addr 0xffff8bd87cd0)
0xffff8bd87c18    24  str x16, [x2]
0xffff8bd87c1c    28  orr x3, x3, #0x1
0xffff8bd87c20    32  ldr x0, pc+288 (addr 0x0000ffff8bd87d40)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd87c24    36  stur x0, [x3, #-1]
0xffff8bd87c28    40  movz x0, #0x1400000000
0xffff8bd87c2c    44  stur x0, [x3, #7]
0xffff8bd87c30    48  stur x1, [x3, #15]
0xffff8bd87c34    52  stur cp, [x3, #23]
0xffff8bd87c38    56  ldr x0, pc+272 (addr 0x0000ffff8bd87d48)    ;; object: 0x26c04519 <the hole>
0xffff8bd87c3c    60  stur x0, [x3, #31]
0xffff8bd87c40    64  ldur x0, [cp, #39]
0xffff8bd87c44    68  stur x0, [x3, #39]
0xffff8bd87c48    72  ldr x0, pc+264 (addr 0x0000ffff8bd87d50)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c4c    76  stur x0, [x3, #47]
0xffff8bd87c50    80  ldr x0, pc+264 (addr 0x0000ffff8bd87d58)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c54    84  stur x0, [x3, #55]
0xffff8bd87c58    88  ldr x0, pc+264 (addr 0x0000ffff8bd87d60)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c5c    92  stur x0, [x3, #63]
0xffff8bd87c60    96  ldr x0, pc+264 (addr 0x0000ffff8bd87d68)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c64   100  stur x0, [x3, #71]
0xffff8bd87c68   104  ldr x0, pc+264 (addr 0x0000ffff8bd87d70)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c6c   108  stur x0, [x3, #79]
0xffff8bd87c70   112  ldr x0, pc+264 (addr 0x0000ffff8bd87d78)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c74   116  stur x0, [x3, #87]
0xffff8bd87c78   120  ldr x0, pc+264 (addr 0x0000ffff8bd87d80)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c7c   124  stur x0, [x3, #95]
0xffff8bd87c80   128  ldr x0, pc+264 (addr 0x0000ffff8bd87d88)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c84   132  stur x0, [x3, #103]
0xffff8bd87c88   136  ldr x0, pc+264 (addr 0x0000ffff8bd87d90)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c8c   140  stur x0, [x3, #111]
0xffff8bd87c90   144  ldr x0, pc+264 (addr 0x0000ffff8bd87d98)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c94   148  stur x0, [x3, #119]
0xffff8bd87c98   152  ldr x0, pc+264 (addr 0x0000ffff8bd87da0)    ;; object: 0x26c04241 <undefined>
0xffff8bd87c9c   156  stur x0, [x3, #127]
0xffff8bd87ca0   160  ldr x0, pc+264 (addr 0x0000ffff8bd87da8)    ;; object: 0x26c04241 <undefined>
0xffff8bd87ca4   164  stur x0, [x3, #135]
0xffff8bd87ca8   168  ldr x0, pc+264 (addr 0x0000ffff8bd87db0)    ;; object: 0x26c04241 <undefined>
0xffff8bd87cac   172  stur x0, [x3, #143]
0xffff8bd87cb0   176  ldr x0, pc+264 (addr 0x0000ffff8bd87db8)    ;; object: 0x26c04241 <undefined>
0xffff8bd87cb4   180  stur x0, [x3, #151]
0xffff8bd87cb8   184  ldr x0, pc+264 (addr 0x0000ffff8bd87dc0)    ;; object: 0x26c04241 <undefined>
0xffff8bd87cbc   188  stur x0, [x3, #159]
0xffff8bd87cc0   192  ldr x0, pc+264 (addr 0x0000ffff8bd87dc8)    ;; object: 0x26c04241 <undefined>
0xffff8bd87cc4   196  stur x0, [x3, #167]
0xffff8bd87cc8   200  mov x0, x3
0xffff8bd87ccc   204  ret
0xffff8bd87cd0   208  sub csp, jssp, #0x10 (16)
0xffff8bd87cd4   212  stp fp, lr, [jssp, #-16]!
0xffff8bd87cd8   216  movz fp, #0xa00000000
0xffff8bd87cdc   220  sub csp, jssp, #0x8 (8)
0xffff8bd87ce0   224  str fp, [jssp, #-8]!
0xffff8bd87ce4   228  add fp, jssp, #0x8 (8)
0xffff8bd87ce8   232  movz x3, #0x0
0xffff8bd87cec   236  mov x16, lr
0xffff8bd87cf0   240  ldr x17, pc+224 (addr 0x0000ffff8bd87dd0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd87cf4   244  blr x17
0xffff8bd87cf8   248  movz x0, #0xb000000000
0xffff8bd87cfc   252  movz x10, #0x0
0xffff8bd87d00   256  sub csp, jssp, #0x10 (16)
0xffff8bd87d04   260  stp x10, x0, [jssp, #-16]!
0xffff8bd87d08   264  movz x0, #0x2
0xffff8bd87d0c   268  movz x1, #0x5b88
0xffff8bd87d10   272  movk x1, #0xe2, lsl #16
0xffff8bd87d14   276  ldr x16, pc+196 (addr 0x0000ffff8bd87dd8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd87d18   280  blr x16
0xffff8bd87d1c   284  str x0, [jssp, #24]
0xffff8bd87d20   288  ldr x16, pc+192 (addr 0x0000ffff8bd87de0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd87d24   292  blr x16
0xffff8bd87d28   296  ldr lr, [jssp, #16]
0xffff8bd87d2c   300  ldp xzr, fp, [jssp], #24
0xffff8bd87d30   304  b #-0x110 (addr 0xffff8bd87c20)
0xffff8bd87d34   308  5800059f       constant pool begin (num_const = 44)    ;; constant pool
0xffff8bd87d38   312  d63f03e0       constant
0xffff8bd87d3c   316  d503201f       constant
0xffff8bd87d40   320  5f506149       constant
0xffff8bd87d44   324  00000000       constant
0xffff8bd87d48   328  26c04519       constant
0xffff8bd87d4c   332  00000000       constant
0xffff8bd87d50   336  26c04241       constant
0xffff8bd87d54   340  00000000       constant
0xffff8bd87d58   344  26c04241       constant
0xffff8bd87d5c   348  00000000       constant
0xffff8bd87d60   352  26c04241       constant
0xffff8bd87d64   356  00000000       constant
0xffff8bd87d68   360  26c04241       constant
0xffff8bd87d6c   364  00000000       constant
0xffff8bd87d70   368  26c04241       constant
0xffff8bd87d74   372  00000000       constant
0xffff8bd87d78   376  26c04241       constant
0xffff8bd87d7c   380  00000000       constant
0xffff8bd87d80   384  26c04241       constant
0xffff8bd87d84   388  00000000       constant
0xffff8bd87d88   392  26c04241       constant
0xffff8bd87d8c   396  00000000       constant
0xffff8bd87d90   400  26c04241       constant
0xffff8bd87d94   404  00000000       constant
0xffff8bd87d98   408  26c04241       constant
0xffff8bd87d9c   412  00000000       constant
0xffff8bd87da0   416  26c04241       constant
0xffff8bd87da4   420  00000000       constant
0xffff8bd87da8   424  26c04241       constant
0xffff8bd87dac   428  00000000       constant
0xffff8bd87db0   432  26c04241       constant
0xffff8bd87db4   436  00000000       constant
0xffff8bd87db8   440  26c04241       constant
0xffff8bd87dbc   444  00000000       constant
0xffff8bd87dc0   448  26c04241       constant
0xffff8bd87dc4   452  00000000       constant
0xffff8bd87dc8   456  26c04241       constant
0xffff8bd87dcc   460  00000000       constant
0xffff8bd87dd0   464  8bd06820       constant
0xffff8bd87dd4   468  0000ffff       constant
0xffff8bd87dd8   472  8bd06260       constant
0xffff8bd87ddc   476  0000ffff       constant
0xffff8bd87de0   480  8bd068e0       constant
0xffff8bd87de4   484  0000ffff       constant


Safepoints (size = 21)
0xffff8bd87d1c   284  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 27)
0xffff8bd87c20  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd87c38  embedded object  (0x26c04519 <the hole>)
0xffff8bd87c48  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c50  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c58  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c60  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c68  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c70  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c78  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c80  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c88  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c90  embedded object  (0x26c04241 <undefined>)
0xffff8bd87c98  embedded object  (0x26c04241 <undefined>)
0xffff8bd87ca0  embedded object  (0x26c04241 <undefined>)
0xffff8bd87ca8  embedded object  (0x26c04241 <undefined>)
0xffff8bd87cb0  embedded object  (0x26c04241 <undefined>)
0xffff8bd87cb8  embedded object  (0x26c04241 <undefined>)
0xffff8bd87cc0  embedded object  (0x26c04241 <undefined>)
0xffff8bd87cf0  code target (STUB)  (0xffff8bd06820)
0xffff8bd87d14  code target (STUB)  (0xffff8bd06260)
0xffff8bd87d20  code target (STUB)  (0xffff8bd068e0)
0xffff8bd87d34  constant pool (size 180)


kind = HANDLER
major_key = <NoCache>Stub
name = undefined
compiler = unknown
Instructions (size = 112)
0xffff8bd89140     0  sub csp, jssp, #0x8 (8)
0xffff8bd89144     4  str x3, [jssp, #-8]!
0xffff8bd89148     8  sub csp, jssp, #0x8 (8)
0xffff8bd8914c    12  str x0, [jssp, #-8]!
0xffff8bd89150    16  ldr x0, pc+72 (addr 0x0000ffff8bd89198)    ;; object: 0x26cc5d51 Cell for 0
0xffff8bd89154    20  ldur x0, [x0, #7]
0xffff8bd89158    24  cmp x0, #0x0 (0)
0xffff8bd8915c    28  b.ne #+0x20 (addr 0xffff8bd8917c)
0xffff8bd89160    32  ldr x0, pc+64 (addr 0x0000ffff8bd891a0)    ;; object: 0x26cc5d61 WeakCell for 0x26c58101 PropertyCell for 0x26c04241 <undefined>
0xffff8bd89164    36  ldur x0, [x0, #7]
0xffff8bd89168    40  tbz w0, #0, #+0x14 (addr 0xffff8bd8917c)
0xffff8bd8916c    44  ldur x0, [x0, #15]
0xffff8bd89170    48  add jssp, jssp, #0x10 (16)
0xffff8bd89174    52  ret
0xffff8bd89178    56  b #+0x14 (addr 0xffff8bd8918c)
0xffff8bd8917c    60  ldr x0, [jssp], #8
0xffff8bd89180    64  ldr x3, [jssp], #8
0xffff8bd89184    68  ldr x16, pc+36 (addr 0x0000ffff8bd891a8)    ;; code: BUILTIN
0xffff8bd89188    72  br x16
0xffff8bd8918c    76  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd89190    80  d63f03e0       constant
0xffff8bd89194    84  d503201f       constant
0xffff8bd89198    88  26cc5d51       constant
0xffff8bd8919c    92  00000000       constant
0xffff8bd891a0    96  26cc5d61       constant
0xffff8bd891a4   100  00000000       constant
0xffff8bd891a8   104  8bd222e0       constant
0xffff8bd891ac   108  0000ffff       constant


RelocInfo (size = 9)
0xffff8bd89150  embedded object  (0x26cc5d51 Cell for 0)
0xffff8bd89160  embedded object  (0x26cc5d61 WeakCell for 0x26c58101 PropertyCell for 0x26c04241 <undefined>)
0xffff8bd89184  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd8918c  constant pool (size 36)

kind = HANDLER
major_key = <NoCache>Stub
name = Object
compiler = unknown
Instructions (size = 120)
0xffff8bd89220     0  sub csp, jssp, #0x8 (8)
0xffff8bd89224     4  str x3, [jssp, #-8]!
0xffff8bd89228     8  sub csp, jssp, #0x8 (8)
0xffff8bd8922c    12  str x0, [jssp, #-8]!
0xffff8bd89230    16  ldr x0, pc+80 (addr 0x0000ffff8bd89280)    ;; object: 0x26cc5d51 Cell for 0
0xffff8bd89234    20  ldur x0, [x0, #7]
0xffff8bd89238    24  cmp x0, #0x0 (0)
0xffff8bd8923c    28  b.ne #+0x2c (addr 0xffff8bd89268)
0xffff8bd89240    32  ldr x0, pc+72 (addr 0x0000ffff8bd89288)    ;; object: 0x26cc5dc9 WeakCell for 0x26c40909 PropertyCell for 0x26c3fef1 <JS Function Object (SharedFunctionInfo 0x26c3fe49)>
0xffff8bd89244    36  ldur x0, [x0, #7]
0xffff8bd89248    40  tbz w0, #0, #+0x20 (addr 0xffff8bd89268)
0xffff8bd8924c    44  ldur x0, [x0, #15]
0xffff8bd89250    48  ldr x16, [x26, #88]
0xffff8bd89254    52  cmp x0, x16
0xffff8bd89258    56  b.eq #+0x10 (addr 0xffff8bd89268)
0xffff8bd8925c    60  add jssp, jssp, #0x10 (16)
0xffff8bd89260    64  ret
0xffff8bd89264    68  b #+0x14 (addr 0xffff8bd89278)
0xffff8bd89268    72  ldr x0, [jssp], #8
0xffff8bd8926c    76  ldr x3, [jssp], #8
0xffff8bd89270    80  ldr x16, pc+32 (addr 0x0000ffff8bd89290)    ;; code: BUILTIN
0xffff8bd89274    84  br x16
0xffff8bd89278    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd8927c    92  d63f03e0       constant
0xffff8bd89280    96  26cc5d51       constant
0xffff8bd89284   100  00000000       constant
0xffff8bd89288   104  26cc5dc9       constant
0xffff8bd8928c   108  00000000       constant
0xffff8bd89290   112  8bd222e0       constant
0xffff8bd89294   116  0000ffff       constant


RelocInfo (size = 9)
0xffff8bd89230  embedded object  (0x26cc5d51 Cell for 0)
0xffff8bd89240  embedded object  (0x26cc5dc9 WeakCell for 0x26c40909 PropertyCell for 0x26c3fef1 <JS Function Object (SharedFunctionInfo 0x26c3fe49)>)
0xffff8bd89270  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd89278  constant pool (size 32)

kind = STUB
major_key = ToNameStub
name = ToNameStub
compiler = unknown
Instructions (size = 112)
0xffff8bd89300     0  tbz w0, #0, #+0x20 (addr 0xffff8bd89320)
0xffff8bd89304     4  ldur x1, [x0, #-1]
0xffff8bd89308     8  ldrb w1, [x1, #11]
0xffff8bd8930c    12  cmp x1, #0x80 (128)
0xffff8bd89310    16  b.hi #+0x8 (addr 0xffff8bd89318)
0xffff8bd89314    20  ret
0xffff8bd89318    24  cmp x1, #0x81 (129)
0xffff8bd8931c    28  b.ne #+0xc (addr 0xffff8bd89328)
0xffff8bd89320    32  ldr x16, pc+56 (addr 0x0000ffff8bd89358)    ;; code: STUB, NumberToStringStub, minor: 0
0xffff8bd89324    36  br x16
0xffff8bd89328    40  cmp x1, #0x83 (131)
0xffff8bd8932c    44  b.ne #+0xc (addr 0xffff8bd89338)
0xffff8bd89330    48  ldur x0, [x0, #7]
0xffff8bd89334    52  ret
0xffff8bd89338    56  sub csp, jssp, #0x8 (8)
0xffff8bd8933c    60  str x0, [jssp, #-8]!
0xffff8bd89340    64  movz x0, #0x1
0xffff8bd89344    68  ldr x1, pc+28 (addr 0x0000ffff8bd89360)    ;; external reference (Runtime::ToName)
0xffff8bd89348    72  ldr x16, pc+32 (addr 0x0000ffff8bd89368)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd8934c    76  br x16
0xffff8bd89350    80  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd89354    84  d63f03e0       constant
0xffff8bd89358    88  8bd2a480       constant
0xffff8bd8935c    92  0000ffff       constant
0xffff8bd89360    96  00e497a0       constant
0xffff8bd89364   100  00000000       constant
0xffff8bd89368   104  8bd06060       constant
0xffff8bd8936c   108  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd89320  code target (STUB)  (0xffff8bd2a480)
0xffff8bd89344  external reference (Runtime::ToName)  (0xe497a0)
0xffff8bd89348  code target (STUB)  (0xffff8bd06060)
0xffff8bd89350  constant pool (size 32)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = RECEIVER*GENERIC -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff8bd8a5a0     0  orr x16, x1, x0
0xffff8bd8a5a4     4  tbnz w16, #0, #+0x10 (addr 0xffff8bd8a5b4)
0xffff8bd8a5a8     8  asr x1, x1, #32
0xffff8bd8a5ac    12  sub x0, x1, x0, asr #32
0xffff8bd8a5b0    16  ret
0xffff8bd8a5b4    20  cmp x0, x1
0xffff8bd8a5b8    24  b.ne #+0x30 (addr 0xffff8bd8a5e8)
0xffff8bd8a5bc    28  ldur x16, [x0, #-1]
0xffff8bd8a5c0    32  ldr x17, [x26, #120]
0xffff8bd8a5c4    36  cmp x16, x17
0xffff8bd8a5c8    40  b.eq #+0xc (addr 0xffff8bd8a5d4)
0xffff8bd8a5cc    44  movz x0, #0x0
0xffff8bd8a5d0    48  ret
0xffff8bd8a5d4    52  ldur d0, [x0, #7]
0xffff8bd8a5d8    56  fcmp d0, d0
0xffff8bd8a5dc    60  b.vc #-0x10 (addr 0xffff8bd8a5cc)
0xffff8bd8a5e0    64  movn x0, #0x0
0xffff8bd8a5e4    68  ret
0xffff8bd8a5e8    72  and x16, x1, x0
0xffff8bd8a5ec    76  tbnz w16, #0, #+0x64 (addr 0xffff8bd8a650)
0xffff8bd8a5f0    80  tbz w0, #0, #+0x24 (addr 0xffff8bd8a614)
0xffff8bd8a5f4    84  ldur x16, [x0, #-1]
0xffff8bd8a5f8    88  ldr x17, [x26, #120]
0xffff8bd8a5fc    92  cmp x16, x17
0xffff8bd8a600    96  b.eq #+0x8 (addr 0xffff8bd8a608)
0xffff8bd8a604   100  ret
0xffff8bd8a608   104  ldur d0, [x0, #7]
0xffff8bd8a60c   108  scvtf d1, x1, #32
0xffff8bd8a610   112  b #+0x24 (addr 0xffff8bd8a634)
0xffff8bd8a614   116  ldur x16, [x1, #-1]
0xffff8bd8a618   120  ldr x17, [x26, #120]
0xffff8bd8a61c   124  cmp x16, x17
0xffff8bd8a620   128  b.eq #+0xc (addr 0xffff8bd8a62c)
0xffff8bd8a624   132  movz x0, #0x1
0xffff8bd8a628   136  ret
0xffff8bd8a62c   140  ldur d1, [x1, #7]
0xffff8bd8a630   144  scvtf d0, x0, #32
0xffff8bd8a634   148  fcmp d1, d0
0xffff8bd8a638   152  b.vs #+0x10 (addr 0xffff8bd8a648)
0xffff8bd8a63c   156  cset x0, gt
0xffff8bd8a640   160  csinv x0, x0, xzr, ge
0xffff8bd8a644   164  ret
0xffff8bd8a648   168  movn x0, #0x0
0xffff8bd8a64c   172  ret
0xffff8bd8a650   176  ldur x10, [x0, #-1]
0xffff8bd8a654   180  ldur x12, [x1, #-1]
0xffff8bd8a658   184  ldrb w11, [x10, #11]
0xffff8bd8a65c   188  ldrb w13, [x12, #11]
0xffff8bd8a660   192  cmp x11, #0xb1 (177)
0xffff8bd8a664   196  b.lt #+0x8 (addr 0xffff8bd8a66c)
0xffff8bd8a668   200  ret
0xffff8bd8a66c   204  cmp x11, #0x83 (131)
0xffff8bd8a670   208  movz x16, #0x83
0xffff8bd8a674   212  ccmp x13, x16, #nZcv, ne
0xffff8bd8a678   216  movz x16, #0xb1
0xffff8bd8a67c   220  ccmp x13, x16, #NzcV, ne
0xffff8bd8a680   224  b.ge #-0x18 (addr 0xffff8bd8a668)
0xffff8bd8a684   228  orr x14, x13, x11
0xffff8bd8a688   232  tst x14, #0xc0
0xffff8bd8a68c   236  b.eq #-0x24 (addr 0xffff8bd8a668)
0xffff8bd8a690   240  cmp x11, #0x81 (129)
0xffff8bd8a694   244  b.ne #+0x18 (addr 0xffff8bd8a6ac)
0xffff8bd8a698   248  cmp x12, x10
0xffff8bd8a69c   252  b.ne #+0x10 (addr 0xffff8bd8a6ac)
0xffff8bd8a6a0   256  ldur d1, [x1, #7]
0xffff8bd8a6a4   260  ldur d0, [x0, #7]
0xffff8bd8a6a8   264  b #-0x74 (addr 0xffff8bd8a634)
0xffff8bd8a6ac   268  movz x16, #0x87
0xffff8bd8a6b0   272  and x14, x13, x16
0xffff8bd8a6b4   276  movz x16, #0x87
0xffff8bd8a6b8   280  and x15, x11, x16
0xffff8bd8a6bc   284  cmp x14, #0x4 (4)
0xffff8bd8a6c0   288  ccmp x15, #4, #nzcv, eq
0xffff8bd8a6c4   292  b.ne #+0x5c (addr 0xffff8bd8a720)
0xffff8bd8a6c8   296  ldur x10, [x1, #15]
0xffff8bd8a6cc   300  ldur x11, [x0, #15]
0xffff8bd8a6d0   304  cmp x10, x11
0xffff8bd8a6d4   308  b.eq #+0xc (addr 0xffff8bd8a6e0)
0xffff8bd8a6d8   312  movz x0, #0x100000000
0xffff8bd8a6dc   316  ret
0xffff8bd8a6e0   320  cbnz x10, #+0xc (addr 0xffff8bd8a6ec)
0xffff8bd8a6e4   324  movz x0, #0x0
0xffff8bd8a6e8   328  ret
0xffff8bd8a6ec   332  asr x10, x10, #32
0xffff8bd8a6f0   336  add x11, x10, #0x17 (23)
0xffff8bd8a6f4   340  add x1, x1, x11
0xffff8bd8a6f8   344  add x0, x0, x11
0xffff8bd8a6fc   348  neg x10, x10
0xffff8bd8a700   352  ldrb w11, [x1, x10]
0xffff8bd8a704   356  ldrb w12, [x0, x10]
0xffff8bd8a708   360  cmp x11, x12
0xffff8bd8a70c   364  b.ne #-0x34 (addr 0xffff8bd8a6d8)
0xffff8bd8a710   368  add x10, x10, #0x1 (1)
0xffff8bd8a714   372  cbnz x10, #-0x14 (addr 0xffff8bd8a700)
0xffff8bd8a718   376  movz x0, #0x0
0xffff8bd8a71c   380  ret
0xffff8bd8a720   384  movz x16, #0xc00000000
0xffff8bd8a724   388  sub csp, jssp, #0x10 (16)
0xffff8bd8a728   392  stp fp, lr, [jssp, #-16]!
0xffff8bd8a72c   396  sub csp, jssp, #0x10 (16)
0xffff8bd8a730   400  str x16, [jssp, #-8]!
0xffff8bd8a734   404  ldr x17, pc+172 (addr 0x0000ffff8bd8a7e0)    ;; object: 0xffff8bd8a541 <Code: COMPARE_IC>
0xffff8bd8a738   408  sub csp, jssp, #0x10 (16)
0xffff8bd8a73c   412  str x17, [jssp, #-8]!
0xffff8bd8a740   416  add fp, jssp, #0x10 (16)
0xffff8bd8a744   420  sub csp, jssp, #0x10 (16)
0xffff8bd8a748   424  stp x0, x1, [jssp, #-16]!
0xffff8bd8a74c   428  movz x0, #0x2
0xffff8bd8a750   432  ldr x1, pc+152 (addr 0x0000ffff8bd8a7e8)    ;; external reference (Runtime::StrictEqual)
0xffff8bd8a754   436  ldr x16, pc+156 (addr 0x0000ffff8bd8a7f0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd8a758   440  blr x16
0xffff8bd8a75c   444  mov jssp, fp
0xffff8bd8a760   448  ldp fp, lr, [jssp], #16
0xffff8bd8a764   452  ldr x1, [x26, #64]
0xffff8bd8a768   456  sub x0, x0, x1
0xffff8bd8a76c   460  ret
0xffff8bd8a770   464  movz x16, #0xc00000000
0xffff8bd8a774   468  sub csp, jssp, #0x10 (16)
0xffff8bd8a778   472  stp fp, lr, [jssp, #-16]!
0xffff8bd8a77c   476  sub csp, jssp, #0x10 (16)
0xffff8bd8a780   480  str x16, [jssp, #-8]!
0xffff8bd8a784   484  ldr x17, pc+116 (addr 0x0000ffff8bd8a7f8)    ;; object: 0xffff8bd8a541 <Code: COMPARE_IC>
0xffff8bd8a788   488  sub csp, jssp, #0x10 (16)
0xffff8bd8a78c   492  str x17, [jssp, #-8]!
0xffff8bd8a790   496  add fp, jssp, #0x10 (16)
0xffff8bd8a794   500  sub csp, jssp, #0x18 (24)
0xffff8bd8a798   504  stp lr, x0, [jssp, #-24]!
0xffff8bd8a79c   508  str x1, [jssp, #16]
0xffff8bd8a7a0   512  movz x10, #0x2f00000000
0xffff8bd8a7a4   516  sub csp, jssp, #0x18 (24)
0xffff8bd8a7a8   520  stp x10, x0, [jssp, #-24]!
0xffff8bd8a7ac   524  str x1, [jssp, #16]
0xffff8bd8a7b0   528  movz x0, #0x3
0xffff8bd8a7b4   532  ldr x1, pc+76 (addr 0x0000ffff8bd8a800)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd8a7b8   536  ldr x16, pc+80 (addr 0x0000ffff8bd8a808)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd8a7bc   540  blr x16
0xffff8bd8a7c0   544  add x11, x0, #0x5f (95)
0xffff8bd8a7c4   548  ldr x1, [jssp, #16]
0xffff8bd8a7c8   552  ldp lr, x0, [jssp], #24
0xffff8bd8a7cc   556  mov jssp, fp
0xffff8bd8a7d0   560  ldp fp, lr, [jssp], #16
0xffff8bd8a7d4   564  br x11
0xffff8bd8a7d8   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd8a7dc   572  d63f03e0       constant
0xffff8bd8a7e0   576  8bd8a541       constant
0xffff8bd8a7e4   580  0000ffff       constant
0xffff8bd8a7e8   584  00e50928       constant
0xffff8bd8a7ec   588  00000000       constant
0xffff8bd8a7f0   592  8bd06060       constant
0xffff8bd8a7f4   596  0000ffff       constant
0xffff8bd8a7f8   600  8bd8a541       constant
0xffff8bd8a7fc   604  0000ffff       constant
0xffff8bd8a800   608  00c8a980       constant
0xffff8bd8a804   612  00000000       constant
0xffff8bd8a808   616  8bd06060       constant
0xffff8bd8a80c   620  0000ffff       constant


RelocInfo (size = 16)
0xffff8bd8a734  embedded object  (0xffff8bd8a541 <Code: COMPARE_IC>)
0xffff8bd8a750  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff8bd8a754  code target (STUB)  (0xffff8bd06060)
0xffff8bd8a784  embedded object  (0xffff8bd8a541 <Code: COMPARE_IC>)
0xffff8bd8a7b4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd8a7b8  code target (STUB)  (0xffff8bd06060)
0xffff8bd8a7d8  constant pool (size 56)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd8b020     0  ldur x0, [x1, #-1]
0xffff8bd8b024     4  ldur x0, [x0, #47]
0xffff8bd8b028     8  ldur x0, [x0, #191]
0xffff8bd8b02c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd8b020     0  ldur x0, [x1, #-1]
0xffff8bd8b024     4  ldur x0, [x0, #47]
0xffff8bd8b028     8  ldur x0, [x0, #191]
0xffff8bd8b02c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd8b0a0     0  ldur x0, [x1, #-1]
0xffff8bd8b0a4     4  ldur x0, [x0, #47]
0xffff8bd8b0a8     8  ldur x0, [x0, #215]
0xffff8bd8b0ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bd8b0a0     0  ldur x0, [x1, #-1]
0xffff8bd8b0a4     4  ldur x0, [x0, #47]
0xffff8bd8b0a8     8  ldur x0, [x0, #215]
0xffff8bd8b0ac    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = STUB
major_key = NameDictionaryLookupStub
name = NameDictionaryLookupStub
compiler = unknown
Instructions (size = 968)
0xffff8bd8b120     0  ldursw x3, [x0, #35]
0xffff8bd8b124     4  sub x3, x3, #0x1 (1)
0xffff8bd8b128     8  ldur x4, [x1, #7]
0xffff8bd8b12c    12  ldr x5, [x26, #40]
0xffff8bd8b130    16  add x2, x4, #0x28 (40)
0xffff8bd8b134    20  and x2, x3, x2, lsr #2
0xffff8bd8b138    24  add x2, x2, x2, lsl #1
0xffff8bd8b13c    28  add x2, x0, x2, lsl #3
0xffff8bd8b140    32  ldur x6, [x2, #55]
0xffff8bd8b144    36  cmp x6, x5
0xffff8bd8b148    40  b.eq #+0x398 (addr 0xffff8bd8b4e0)
0xffff8bd8b14c    44  cmp x6, x1
0xffff8bd8b150    48  b.eq #+0x388 (addr 0xffff8bd8b4d8)
0xffff8bd8b154    52  ldur x6, [x6, #-1]
0xffff8bd8b158    56  ldrb w6, [x6, #11]
0xffff8bd8b15c    60  tst x6, #0xc0
0xffff8bd8b160    64  movz x16, #0x80
0xffff8bd8b164    68  ccmp x6, x16, #nZcv, ne
0xffff8bd8b168    72  b.ne #+0x370 (addr 0xffff8bd8b4d8)
0xffff8bd8b16c    76  add x2, x4, #0x3c (60)
0xffff8bd8b170    80  and x2, x3, x2, lsr #2
0xffff8bd8b174    84  add x2, x2, x2, lsl #1
0xffff8bd8b178    88  add x2, x0, x2, lsl #3
0xffff8bd8b17c    92  ldur x6, [x2, #55]
0xffff8bd8b180    96  cmp x6, x5
0xffff8bd8b184   100  b.eq #+0x35c (addr 0xffff8bd8b4e0)
0xffff8bd8b188   104  cmp x6, x1
0xffff8bd8b18c   108  b.eq #+0x34c (addr 0xffff8bd8b4d8)
0xffff8bd8b190   112  ldur x6, [x6, #-1]
0xffff8bd8b194   116  ldrb w6, [x6, #11]
0xffff8bd8b198   120  tst x6, #0xc0
0xffff8bd8b19c   124  movz x16, #0x80
0xffff8bd8b1a0   128  ccmp x6, x16, #nZcv, ne
0xffff8bd8b1a4   132  b.ne #+0x334 (addr 0xffff8bd8b4d8)
0xffff8bd8b1a8   136  add x2, x4, #0x54 (84)
0xffff8bd8b1ac   140  and x2, x3, x2, lsr #2
0xffff8bd8b1b0   144  add x2, x2, x2, lsl #1
0xffff8bd8b1b4   148  add x2, x0, x2, lsl #3
0xffff8bd8b1b8   152  ldur x6, [x2, #55]
0xffff8bd8b1bc   156  cmp x6, x5
0xffff8bd8b1c0   160  b.eq #+0x320 (addr 0xffff8bd8b4e0)
0xffff8bd8b1c4   164  cmp x6, x1
0xffff8bd8b1c8   168  b.eq #+0x310 (addr 0xffff8bd8b4d8)
0xffff8bd8b1cc   172  ldur x6, [x6, #-1]
0xffff8bd8b1d0   176  ldrb w6, [x6, #11]
0xffff8bd8b1d4   180  tst x6, #0xc0
0xffff8bd8b1d8   184  movz x16, #0x80
0xffff8bd8b1dc   188  ccmp x6, x16, #nZcv, ne
0xffff8bd8b1e0   192  b.ne #+0x2f8 (addr 0xffff8bd8b4d8)
0xffff8bd8b1e4   196  add x2, x4, #0x70 (112)
0xffff8bd8b1e8   200  and x2, x3, x2, lsr #2
0xffff8bd8b1ec   204  add x2, x2, x2, lsl #1
0xffff8bd8b1f0   208  add x2, x0, x2, lsl #3
0xffff8bd8b1f4   212  ldur x6, [x2, #55]
0xffff8bd8b1f8   216  cmp x6, x5
0xffff8bd8b1fc   220  b.eq #+0x2e4 (addr 0xffff8bd8b4e0)
0xffff8bd8b200   224  cmp x6, x1
0xffff8bd8b204   228  b.eq #+0x2d4 (addr 0xffff8bd8b4d8)
0xffff8bd8b208   232  ldur x6, [x6, #-1]
0xffff8bd8b20c   236  ldrb w6, [x6, #11]
0xffff8bd8b210   240  tst x6, #0xc0
0xffff8bd8b214   244  movz x16, #0x80
0xffff8bd8b218   248  ccmp x6, x16, #nZcv, ne
0xffff8bd8b21c   252  b.ne #+0x2bc (addr 0xffff8bd8b4d8)
0xffff8bd8b220   256  add x2, x4, #0x90 (144)
0xffff8bd8b224   260  and x2, x3, x2, lsr #2
0xffff8bd8b228   264  add x2, x2, x2, lsl #1
0xffff8bd8b22c   268  add x2, x0, x2, lsl #3
0xffff8bd8b230   272  ldur x6, [x2, #55]
0xffff8bd8b234   276  cmp x6, x5
0xffff8bd8b238   280  b.eq #+0x2a8 (addr 0xffff8bd8b4e0)
0xffff8bd8b23c   284  cmp x6, x1
0xffff8bd8b240   288  b.eq #+0x298 (addr 0xffff8bd8b4d8)
0xffff8bd8b244   292  ldur x6, [x6, #-1]
0xffff8bd8b248   296  ldrb w6, [x6, #11]
0xffff8bd8b24c   300  tst x6, #0xc0
0xffff8bd8b250   304  movz x16, #0x80
0xffff8bd8b254   308  ccmp x6, x16, #nZcv, ne
0xffff8bd8b258   312  b.ne #+0x280 (addr 0xffff8bd8b4d8)
0xffff8bd8b25c   316  add x2, x4, #0xb4 (180)
0xffff8bd8b260   320  and x2, x3, x2, lsr #2
0xffff8bd8b264   324  add x2, x2, x2, lsl #1
0xffff8bd8b268   328  add x2, x0, x2, lsl #3
0xffff8bd8b26c   332  ldur x6, [x2, #55]
0xffff8bd8b270   336  cmp x6, x5
0xffff8bd8b274   340  b.eq #+0x26c (addr 0xffff8bd8b4e0)
0xffff8bd8b278   344  cmp x6, x1
0xffff8bd8b27c   348  b.eq #+0x25c (addr 0xffff8bd8b4d8)
0xffff8bd8b280   352  ldur x6, [x6, #-1]
0xffff8bd8b284   356  ldrb w6, [x6, #11]
0xffff8bd8b288   360  tst x6, #0xc0
0xffff8bd8b28c   364  movz x16, #0x80
0xffff8bd8b290   368  ccmp x6, x16, #nZcv, ne
0xffff8bd8b294   372  b.ne #+0x244 (addr 0xffff8bd8b4d8)
0xffff8bd8b298   376  add x2, x4, #0xdc (220)
0xffff8bd8b29c   380  and x2, x3, x2, lsr #2
0xffff8bd8b2a0   384  add x2, x2, x2, lsl #1
0xffff8bd8b2a4   388  add x2, x0, x2, lsl #3
0xffff8bd8b2a8   392  ldur x6, [x2, #55]
0xffff8bd8b2ac   396  cmp x6, x5
0xffff8bd8b2b0   400  b.eq #+0x230 (addr 0xffff8bd8b4e0)
0xffff8bd8b2b4   404  cmp x6, x1
0xffff8bd8b2b8   408  b.eq #+0x220 (addr 0xffff8bd8b4d8)
0xffff8bd8b2bc   412  ldur x6, [x6, #-1]
0xffff8bd8b2c0   416  ldrb w6, [x6, #11]
0xffff8bd8b2c4   420  tst x6, #0xc0
0xffff8bd8b2c8   424  movz x16, #0x80
0xffff8bd8b2cc   428  ccmp x6, x16, #nZcv, ne
0xffff8bd8b2d0   432  b.ne #+0x208 (addr 0xffff8bd8b4d8)
0xffff8bd8b2d4   436  add x2, x4, #0x108 (264)
0xffff8bd8b2d8   440  and x2, x3, x2, lsr #2
0xffff8bd8b2dc   444  add x2, x2, x2, lsl #1
0xffff8bd8b2e0   448  add x2, x0, x2, lsl #3
0xffff8bd8b2e4   452  ldur x6, [x2, #55]
0xffff8bd8b2e8   456  cmp x6, x5
0xffff8bd8b2ec   460  b.eq #+0x1f4 (addr 0xffff8bd8b4e0)
0xffff8bd8b2f0   464  cmp x6, x1
0xffff8bd8b2f4   468  b.eq #+0x1e4 (addr 0xffff8bd8b4d8)
0xffff8bd8b2f8   472  ldur x6, [x6, #-1]
0xffff8bd8b2fc   476  ldrb w6, [x6, #11]
0xffff8bd8b300   480  tst x6, #0xc0
0xffff8bd8b304   484  movz x16, #0x80
0xffff8bd8b308   488  ccmp x6, x16, #nZcv, ne
0xffff8bd8b30c   492  b.ne #+0x1cc (addr 0xffff8bd8b4d8)
0xffff8bd8b310   496  add x2, x4, #0x138 (312)
0xffff8bd8b314   500  and x2, x3, x2, lsr #2
0xffff8bd8b318   504  add x2, x2, x2, lsl #1
0xffff8bd8b31c   508  add x2, x0, x2, lsl #3
0xffff8bd8b320   512  ldur x6, [x2, #55]
0xffff8bd8b324   516  cmp x6, x5
0xffff8bd8b328   520  b.eq #+0x1b8 (addr 0xffff8bd8b4e0)
0xffff8bd8b32c   524  cmp x6, x1
0xffff8bd8b330   528  b.eq #+0x1a8 (addr 0xffff8bd8b4d8)
0xffff8bd8b334   532  ldur x6, [x6, #-1]
0xffff8bd8b338   536  ldrb w6, [x6, #11]
0xffff8bd8b33c   540  tst x6, #0xc0
0xffff8bd8b340   544  movz x16, #0x80
0xffff8bd8b344   548  ccmp x6, x16, #nZcv, ne
0xffff8bd8b348   552  b.ne #+0x190 (addr 0xffff8bd8b4d8)
0xffff8bd8b34c   556  add x2, x4, #0x16c (364)
0xffff8bd8b350   560  and x2, x3, x2, lsr #2
0xffff8bd8b354   564  add x2, x2, x2, lsl #1
0xffff8bd8b358   568  add x2, x0, x2, lsl #3
0xffff8bd8b35c   572  ldur x6, [x2, #55]
0xffff8bd8b360   576  cmp x6, x5
0xffff8bd8b364   580  b.eq #+0x17c (addr 0xffff8bd8b4e0)
0xffff8bd8b368   584  cmp x6, x1
0xffff8bd8b36c   588  b.eq #+0x16c (addr 0xffff8bd8b4d8)
0xffff8bd8b370   592  ldur x6, [x6, #-1]
0xffff8bd8b374   596  ldrb w6, [x6, #11]
0xffff8bd8b378   600  tst x6, #0xc0
0xffff8bd8b37c   604  movz x16, #0x80
0xffff8bd8b380   608  ccmp x6, x16, #nZcv, ne
0xffff8bd8b384   612  b.ne #+0x154 (addr 0xffff8bd8b4d8)
0xffff8bd8b388   616  add x2, x4, #0x1a4 (420)
0xffff8bd8b38c   620  and x2, x3, x2, lsr #2
0xffff8bd8b390   624  add x2, x2, x2, lsl #1
0xffff8bd8b394   628  add x2, x0, x2, lsl #3
0xffff8bd8b398   632  ldur x6, [x2, #55]
0xffff8bd8b39c   636  cmp x6, x5
0xffff8bd8b3a0   640  b.eq #+0x140 (addr 0xffff8bd8b4e0)
0xffff8bd8b3a4   644  cmp x6, x1
0xffff8bd8b3a8   648  b.eq #+0x130 (addr 0xffff8bd8b4d8)
0xffff8bd8b3ac   652  ldur x6, [x6, #-1]
0xffff8bd8b3b0   656  ldrb w6, [x6, #11]
0xffff8bd8b3b4   660  tst x6, #0xc0
0xffff8bd8b3b8   664  movz x16, #0x80
0xffff8bd8b3bc   668  ccmp x6, x16, #nZcv, ne
0xffff8bd8b3c0   672  b.ne #+0x118 (addr 0xffff8bd8b4d8)
0xffff8bd8b3c4   676  add x2, x4, #0x1e0 (480)
0xffff8bd8b3c8   680  and x2, x3, x2, lsr #2
0xffff8bd8b3cc   684  add x2, x2, x2, lsl #1
0xffff8bd8b3d0   688  add x2, x0, x2, lsl #3
0xffff8bd8b3d4   692  ldur x6, [x2, #55]
0xffff8bd8b3d8   696  cmp x6, x5
0xffff8bd8b3dc   700  b.eq #+0x104 (addr 0xffff8bd8b4e0)
0xffff8bd8b3e0   704  cmp x6, x1
0xffff8bd8b3e4   708  b.eq #+0xf4 (addr 0xffff8bd8b4d8)
0xffff8bd8b3e8   712  ldur x6, [x6, #-1]
0xffff8bd8b3ec   716  ldrb w6, [x6, #11]
0xffff8bd8b3f0   720  tst x6, #0xc0
0xffff8bd8b3f4   724  movz x16, #0x80
0xffff8bd8b3f8   728  ccmp x6, x16, #nZcv, ne
0xffff8bd8b3fc   732  b.ne #+0xdc (addr 0xffff8bd8b4d8)
0xffff8bd8b400   736  add x2, x4, #0x220 (544)
0xffff8bd8b404   740  and x2, x3, x2, lsr #2
0xffff8bd8b408   744  add x2, x2, x2, lsl #1
0xffff8bd8b40c   748  add x2, x0, x2, lsl #3
0xffff8bd8b410   752  ldur x6, [x2, #55]
0xffff8bd8b414   756  cmp x6, x5
0xffff8bd8b418   760  b.eq #+0xc8 (addr 0xffff8bd8b4e0)
0xffff8bd8b41c   764  cmp x6, x1
0xffff8bd8b420   768  b.eq #+0xb8 (addr 0xffff8bd8b4d8)
0xffff8bd8b424   772  ldur x6, [x6, #-1]
0xffff8bd8b428   776  ldrb w6, [x6, #11]
0xffff8bd8b42c   780  tst x6, #0xc0
0xffff8bd8b430   784  movz x16, #0x80
0xffff8bd8b434   788  ccmp x6, x16, #nZcv, ne
0xffff8bd8b438   792  b.ne #+0xa0 (addr 0xffff8bd8b4d8)
0xffff8bd8b43c   796  add x2, x4, #0x264 (612)
0xffff8bd8b440   800  and x2, x3, x2, lsr #2
0xffff8bd8b444   804  add x2, x2, x2, lsl #1
0xffff8bd8b448   808  add x2, x0, x2, lsl #3
0xffff8bd8b44c   812  ldur x6, [x2, #55]
0xffff8bd8b450   816  cmp x6, x5
0xffff8bd8b454   820  b.eq #+0x8c (addr 0xffff8bd8b4e0)
0xffff8bd8b458   824  cmp x6, x1
0xffff8bd8b45c   828  b.eq #+0x7c (addr 0xffff8bd8b4d8)
0xffff8bd8b460   832  ldur x6, [x6, #-1]
0xffff8bd8b464   836  ldrb w6, [x6, #11]
0xffff8bd8b468   840  tst x6, #0xc0
0xffff8bd8b46c   844  movz x16, #0x80
0xffff8bd8b470   848  ccmp x6, x16, #nZcv, ne
0xffff8bd8b474   852  b.ne #+0x64 (addr 0xffff8bd8b4d8)
0xffff8bd8b478   856  add x2, x4, #0x2ac (684)
0xffff8bd8b47c   860  and x2, x3, x2, lsr #2
0xffff8bd8b480   864  add x2, x2, x2, lsl #1
0xffff8bd8b484   868  add x2, x0, x2, lsl #3
0xffff8bd8b488   872  ldur x6, [x2, #55]
0xffff8bd8b48c   876  cmp x6, x5
0xffff8bd8b490   880  b.eq #+0x50 (addr 0xffff8bd8b4e0)
0xffff8bd8b494   884  cmp x6, x1
0xffff8bd8b498   888  b.eq #+0x40 (addr 0xffff8bd8b4d8)
0xffff8bd8b49c   892  ldur x6, [x6, #-1]
0xffff8bd8b4a0   896  ldrb w6, [x6, #11]
0xffff8bd8b4a4   900  tst x6, #0xc0
0xffff8bd8b4a8   904  movz x16, #0x80
0xffff8bd8b4ac   908  ccmp x6, x16, #nZcv, ne
0xffff8bd8b4b0   912  b.ne #+0x28 (addr 0xffff8bd8b4d8)
0xffff8bd8b4b4   916  add x2, x4, #0x2f8 (760)
0xffff8bd8b4b8   920  and x2, x3, x2, lsr #2
0xffff8bd8b4bc   924  add x2, x2, x2, lsl #1
0xffff8bd8b4c0   928  add x2, x0, x2, lsl #3
0xffff8bd8b4c4   932  ldur x6, [x2, #55]
0xffff8bd8b4c8   936  cmp x6, x5
0xffff8bd8b4cc   940  b.eq #+0x14 (addr 0xffff8bd8b4e0)
0xffff8bd8b4d0   944  cmp x6, x1
0xffff8bd8b4d4   948  b.eq #+0x4 (addr 0xffff8bd8b4d8)
0xffff8bd8b4d8   952  movz x0, #0x1
0xffff8bd8b4dc   956  ret
0xffff8bd8b4e0   960  movz x0, #0x0
0xffff8bd8b4e4   964  ret


RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = hasOwnProperty
compiler = unknown
Instructions (size = 656)
0xffff8bd8b560     0  sub csp, jssp, #0x8 (8)
0xffff8bd8b564     4  str x3, [jssp, #-8]!
0xffff8bd8b568     8  sub csp, jssp, #0x8 (8)
0xffff8bd8b56c    12  str x0, [jssp, #-8]!
0xffff8bd8b570    16  ldr x0, pc+560 (addr 0x0000ffff8bd8b7a0)    ;; object: 0x26c63e59 Cell for 0
0xffff8bd8b574    20  ldur x0, [x0, #7]
0xffff8bd8b578    24  cmp x0, #0x0 (0)
0xffff8bd8b57c    28  b.ne #+0x1f8 (addr 0xffff8bd8b774)
0xffff8bd8b580    32  ldur x4, [x1, #-1]
0xffff8bd8b584    36  ldrb w0, [x4, #12]
0xffff8bd8b588    40  movz x16, #0x44
0xffff8bd8b58c    44  tst x0, x16
0xffff8bd8b590    48  b.ne #+0x1e4 (addr 0xffff8bd8b774)
0xffff8bd8b594    52  ldrb w0, [x4, #11]
0xffff8bd8b598    56  cmp x0, #0xb1 (177)
0xffff8bd8b59c    60  b.lt #+0x1d8 (addr 0xffff8bd8b774)
0xffff8bd8b5a0    64  ldur x0, [x1, #7]
0xffff8bd8b5a4    68  ldur x4, [x0, #-1]
0xffff8bd8b5a8    72  ldr x16, [x26, #432]
0xffff8bd8b5ac    76  cmp x4, x16
0xffff8bd8b5b0    80  b.ne #+0x1c4 (addr 0xffff8bd8b774)
0xffff8bd8b5b4    84  ldursw x4, [x0, #35]
0xffff8bd8b5b8    88  sub x4, x4, #0x1 (1)
0xffff8bd8b5bc    92  movz x16, #0x66a6
0xffff8bd8b5c0    96  movk x16, #0x34ac, lsl #16
0xffff8bd8b5c4   100  and x4, x4, x16
0xffff8bd8b5c8   104  add x4, x4, x4, lsl #1
0xffff8bd8b5cc   108  add x4, x0, x4, lsl #3
0xffff8bd8b5d0   112  ldur x4, [x4, #55]
0xffff8bd8b5d4   116  ldr x16, [x26, #40]
0xffff8bd8b5d8   120  cmp x4, x16
0xffff8bd8b5dc   124  b.eq #+0x188 (addr 0xffff8bd8b764)
0xffff8bd8b5e0   128  ldr x16, pc+456 (addr 0x0000ffff8bd8b7a8)    ;; object: 0x26c417b1 <String[14]: hasOwnProperty>
0xffff8bd8b5e4   132  cmp x4, x16
0xffff8bd8b5e8   136  b.eq #+0x18c (addr 0xffff8bd8b774)
0xffff8bd8b5ec   140  ldr x16, [x26, #88]
0xffff8bd8b5f0   144  cmp x4, x16
0xffff8bd8b5f4   148  b.eq #+0x1c (addr 0xffff8bd8b610)
0xffff8bd8b5f8   152  ldur x4, [x4, #-1]
0xffff8bd8b5fc   156  ldrb w4, [x4, #11]
0xffff8bd8b600   160  tst x4, #0xc0
0xffff8bd8b604   164  movz x16, #0x80
0xffff8bd8b608   168  ccmp x4, x16, #nZcv, ne
0xffff8bd8b60c   172  b.ne #+0x168 (addr 0xffff8bd8b774)
0xffff8bd8b610   176  ldursw x4, [x0, #35]
0xffff8bd8b614   180  sub x4, x4, #0x1 (1)
0xffff8bd8b618   184  movz x16, #0x66a7
0xffff8bd8b61c   188  movk x16, #0x34ac, lsl #16
0xffff8bd8b620   192  and x4, x4, x16
0xffff8bd8b624   196  add x4, x4, x4, lsl #1
0xffff8bd8b628   200  add x4, x0, x4, lsl #3
0xffff8bd8b62c   204  ldur x4, [x4, #55]
0xffff8bd8b630   208  ldr x16, [x26, #40]
0xffff8bd8b634   212  cmp x4, x16
0xffff8bd8b638   216  b.eq #+0x12c (addr 0xffff8bd8b764)
0xffff8bd8b63c   220  ldr x16, pc+372 (addr 0x0000ffff8bd8b7b0)    ;; object: 0x26c417b1 <String[14]: hasOwnProperty>
0xffff8bd8b640   224  cmp x4, x16
0xffff8bd8b644   228  b.eq #+0x130 (addr 0xffff8bd8b774)
0xffff8bd8b648   232  ldr x16, [x26, #88]
0xffff8bd8b64c   236  cmp x4, x16
0xffff8bd8b650   240  b.eq #+0x1c (addr 0xffff8bd8b66c)
0xffff8bd8b654   244  ldur x4, [x4, #-1]
0xffff8bd8b658   248  ldrb w4, [x4, #11]
0xffff8bd8b65c   252  tst x4, #0xc0
0xffff8bd8b660   256  movz x16, #0x80
0xffff8bd8b664   260  ccmp x4, x16, #nZcv, ne
0xffff8bd8b668   264  b.ne #+0x10c (addr 0xffff8bd8b774)
0xffff8bd8b66c   268  ldursw x4, [x0, #35]
0xffff8bd8b670   272  sub x4, x4, #0x1 (1)
0xffff8bd8b674   276  movz x16, #0x66a9
0xffff8bd8b678   280  movk x16, #0x34ac, lsl #16
0xffff8bd8b67c   284  and x4, x4, x16
0xffff8bd8b680   288  add x4, x4, x4, lsl #1
0xffff8bd8b684   292  add x4, x0, x4, lsl #3
0xffff8bd8b688   296  ldur x4, [x4, #55]
0xffff8bd8b68c   300  ldr x16, [x26, #40]
0xffff8bd8b690   304  cmp x4, x16
0xffff8bd8b694   308  b.eq #+0xd0 (addr 0xffff8bd8b764)
0xffff8bd8b698   312  ldr x16, pc+288 (addr 0x0000ffff8bd8b7b8)    ;; object: 0x26c417b1 <String[14]: hasOwnProperty>
0xffff8bd8b69c   316  cmp x4, x16
0xffff8bd8b6a0   320  b.eq #+0xd4 (addr 0xffff8bd8b774)
0xffff8bd8b6a4   324  ldr x16, [x26, #88]
0xffff8bd8b6a8   328  cmp x4, x16
0xffff8bd8b6ac   332  b.eq #+0x1c (addr 0xffff8bd8b6c8)
0xffff8bd8b6b0   336  ldur x4, [x4, #-1]
0xffff8bd8b6b4   340  ldrb w4, [x4, #11]
0xffff8bd8b6b8   344  tst x4, #0xc0
0xffff8bd8b6bc   348  movz x16, #0x80
0xffff8bd8b6c0   352  ccmp x4, x16, #nZcv, ne
0xffff8bd8b6c4   356  b.ne #+0xb0 (addr 0xffff8bd8b774)
0xffff8bd8b6c8   360  ldursw x4, [x0, #35]
0xffff8bd8b6cc   364  sub x4, x4, #0x1 (1)
0xffff8bd8b6d0   368  movz x16, #0x66ac
0xffff8bd8b6d4   372  movk x16, #0x34ac, lsl #16
0xffff8bd8b6d8   376  and x4, x4, x16
0xffff8bd8b6dc   380  add x4, x4, x4, lsl #1
0xffff8bd8b6e0   384  add x4, x0, x4, lsl #3
0xffff8bd8b6e4   388  ldur x4, [x4, #55]
0xffff8bd8b6e8   392  ldr x16, [x26, #40]
0xffff8bd8b6ec   396  cmp x4, x16
0xffff8bd8b6f0   400  b.eq #+0x74 (addr 0xffff8bd8b764)
0xffff8bd8b6f4   404  ldr x16, pc+204 (addr 0x0000ffff8bd8b7c0)    ;; object: 0x26c417b1 <String[14]: hasOwnProperty>
0xffff8bd8b6f8   408  cmp x4, x16
0xffff8bd8b6fc   412  b.eq #+0x78 (addr 0xffff8bd8b774)
0xffff8bd8b700   416  ldr x16, [x26, #88]
0xffff8bd8b704   420  cmp x4, x16
0xffff8bd8b708   424  b.eq #+0x1c (addr 0xffff8bd8b724)
0xffff8bd8b70c   428  ldur x4, [x4, #-1]
0xffff8bd8b710   432  ldrb w4, [x4, #11]
0xffff8bd8b714   436  tst x4, #0xc0
0xffff8bd8b718   440  movz x16, #0x80
0xffff8bd8b71c   444  ccmp x4, x16, #nZcv, ne
0xffff8bd8b720   448  b.ne #+0x54 (addr 0xffff8bd8b774)
0xffff8bd8b724   452  sub csp, jssp, #0x38 (56)
0xffff8bd8b728   456  stp x3, x5, [jssp, #-32]!
0xffff8bd8b72c   460  stp x6, lr, [jssp, #16]
0xffff8bd8b730   464  stp x0, x1, [jssp, #-24]!
0xffff8bd8b734   468  str x2, [jssp, #16]
0xffff8bd8b738   472  ldur x0, [x1, #7]
0xffff8bd8b73c   476  ldr x1, pc+140 (addr 0x0000ffff8bd8b7c8)    ;; object: 0x26c417b1 <String[14]: hasOwnProperty>
0xffff8bd8b740   480  ldr x16, pc+144 (addr 0x0000ffff8bd8b7d0)    ;; code: STUB, NameDictionaryLookupStub, minor: 1
0xffff8bd8b744   484  blr x16
0xffff8bd8b748   488  mov x4, x0
0xffff8bd8b74c   492  ldp x2, x3, [jssp, #16]
0xffff8bd8b750   496  ldp x0, x1, [jssp], #32
0xffff8bd8b754   500  ldr lr, [jssp, #16]
0xffff8bd8b758   504  ldp x5, x6, [jssp], #24
0xffff8bd8b75c   508  cbz x4, #+0x8 (addr 0xffff8bd8b764)
0xffff8bd8b760   512  b #+0x14 (addr 0xffff8bd8b774)
0xffff8bd8b764   516  ldr x3, pc+116 (addr 0x0000ffff8bd8b7d8)    ;; object: 0x26cc7a51 WeakCell for 0x26c3ff39 <an Object with map 0x5f50c081>
0xffff8bd8b768   520  ldur x3, [x3, #7]
0xffff8bd8b76c   524  tbz w3, #0, #+0x8 (addr 0xffff8bd8b774)
0xffff8bd8b770   528  b #+0x14 (addr 0xffff8bd8b784)
0xffff8bd8b774   532  ldr x0, [jssp], #8
0xffff8bd8b778   536  ldr x3, [jssp], #8
0xffff8bd8b77c   540  ldr x16, pc+100 (addr 0x0000ffff8bd8b7e0)    ;; code: BUILTIN
0xffff8bd8b780   544  br x16
0xffff8bd8b784   548  add jssp, jssp, #0x10 (16)
0xffff8bd8b788   552  mov x1, x3
0xffff8bd8b78c   556  ldr x16, pc+92 (addr 0x0000ffff8bd8b7e8)    ;; code: HANDLER, LoadConstantStub, minor: 0
0xffff8bd8b790   560  br x16
0xffff8bd8b794   564  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff8bd8b798   568  d63f03e0       constant
0xffff8bd8b79c   572  d503201f       constant
0xffff8bd8b7a0   576  26c63e59       constant
0xffff8bd8b7a4   580  00000000       constant
0xffff8bd8b7a8   584  26c417b1       constant
0xffff8bd8b7ac   588  00000000       constant
0xffff8bd8b7b0   592  26c417b1       constant
0xffff8bd8b7b4   596  00000000       constant
0xffff8bd8b7b8   600  26c417b1       constant
0xffff8bd8b7bc   604  00000000       constant
0xffff8bd8b7c0   608  26c417b1       constant
0xffff8bd8b7c4   612  00000000       constant
0xffff8bd8b7c8   616  26c417b1       constant
0xffff8bd8b7cc   620  00000000       constant
0xffff8bd8b7d0   624  8bd8b120       constant
0xffff8bd8b7d4   628  0000ffff       constant
0xffff8bd8b7d8   632  26cc7a51       constant
0xffff8bd8b7dc   636  00000000       constant
0xffff8bd8b7e0   640  8bd222e0       constant
0xffff8bd8b7e4   644  0000ffff       constant
0xffff8bd8b7e8   648  8bd431a0       constant
0xffff8bd8b7ec   652  0000ffff       constant


RelocInfo (size = 26)
0xffff8bd8b570  embedded object  (0x26c63e59 Cell for 0)
0xffff8bd8b5e0  embedded object  (0x26c417b1 <String[14]: hasOwnProperty>)
0xffff8bd8b63c  embedded object  (0x26c417b1 <String[14]: hasOwnProperty>)
0xffff8bd8b698  embedded object  (0x26c417b1 <String[14]: hasOwnProperty>)
0xffff8bd8b6f4  embedded object  (0x26c417b1 <String[14]: hasOwnProperty>)
0xffff8bd8b73c  embedded object  (0x26c417b1 <String[14]: hasOwnProperty>)
0xffff8bd8b740  code target (STUB)  (0xffff8bd8b120)
0xffff8bd8b764  embedded object  (0x26cc7a51 WeakCell for 0x26c3ff39 <an Object with map 0x5f50c081>)
0xffff8bd8b77c  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd8b78c  code target (HANDLER)  (0xffff8bd431a0)
0xffff8bd8b794  constant pool (size 92)

kind = HANDLER
major_key = <NoCache>Stub
name = push
compiler = unknown
Instructions (size = 120)
0xffff8bd8b860     0  sub csp, jssp, #0x8 (8)
0xffff8bd8b864     4  str x3, [jssp, #-8]!
0xffff8bd8b868     8  sub csp, jssp, #0x8 (8)
0xffff8bd8b86c    12  str x0, [jssp, #-8]!
0xffff8bd8b870    16  ldr x0, pc+72 (addr 0x0000ffff8bd8b8b8)    ;; object: 0x26cc7b09 Cell for 0
0xffff8bd8b874    20  ldur x0, [x0, #7]
0xffff8bd8b878    24  cmp x0, #0x0 (0)
0xffff8bd8b87c    28  b.ne #+0x14 (addr 0xffff8bd8b890)
0xffff8bd8b880    32  ldr x3, pc+64 (addr 0x0000ffff8bd8b8c0)    ;; object: 0x26cc7b19 WeakCell for 0x56526419 <JS Array[0]>
0xffff8bd8b884    36  ldur x3, [x3, #7]
0xffff8bd8b888    40  tbz w3, #0, #+0x8 (addr 0xffff8bd8b890)
0xffff8bd8b88c    44  b #+0x14 (addr 0xffff8bd8b8a0)
0xffff8bd8b890    48  ldr x0, [jssp], #8
0xffff8bd8b894    52  ldr x3, [jssp], #8
0xffff8bd8b898    56  ldr x16, pc+48 (addr 0x0000ffff8bd8b8c8)    ;; code: BUILTIN
0xffff8bd8b89c    60  br x16
0xffff8bd8b8a0    64  add jssp, jssp, #0x10 (16)
0xffff8bd8b8a4    68  mov x1, x3
0xffff8bd8b8a8    72  ldr x16, pc+40 (addr 0x0000ffff8bd8b8d0)    ;; code: HANDLER, LoadConstantStub, minor: 7
0xffff8bd8b8ac    76  br x16
0xffff8bd8b8b0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bd8b8b4    84  d63f03e0       constant
0xffff8bd8b8b8    88  26cc7b09       constant
0xffff8bd8b8bc    92  00000000       constant
0xffff8bd8b8c0    96  26cc7b19       constant
0xffff8bd8b8c4   100  00000000       constant
0xffff8bd8b8c8   104  8bd222e0       constant
0xffff8bd8b8cc   108  0000ffff       constant
0xffff8bd8b8d0   112  8bd8b0a0       constant
0xffff8bd8b8d4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd8b870  embedded object  (0x26cc7b09 Cell for 0)
0xffff8bd8b880  embedded object  (0x26cc7b19 WeakCell for 0x56526419 <JS Array[0]>)
0xffff8bd8b898  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd8b8a8  code target (HANDLER)  (0xffff8bd8b0a0)
0xffff8bd8b8b0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd8b940     0  tbz w0, #0, #+0x90 (addr 0xffff8bd8b9d0)
0xffff8bd8b944     4  mov x2, x0
0xffff8bd8b948     8  stur x2, [x1, #23]
0xffff8bd8b94c    12  add x3, x1, #0x17 (23)
0xffff8bd8b950    16  and x2, x2, #0xfffffffffff00000
0xffff8bd8b954    20  ldr x2, [x2, #8]
0xffff8bd8b958    24  tbz w2, #1, #+0x24 (addr 0xffff8bd8b97c)
0xffff8bd8b95c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd8b960    32  ldr x2, [x2, #8]
0xffff8bd8b964    36  tbz w2, #2, #+0x18 (addr 0xffff8bd8b97c)
0xffff8bd8b968    40  sub csp, jssp, #0x8 (8)
0xffff8bd8b96c    44  str lr, [jssp, #-8]!
0xffff8bd8b970    48  ldr x16, pc+80 (addr 0x0000ffff8bd8b9c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd8b974    52  blr x16
0xffff8bd8b978    56  ldr lr, [jssp], #8
0xffff8bd8b97c    60  stur x5, [x1, #-1]
0xffff8bd8b980    64  tbz w5, #0, #+0x34 (addr 0xffff8bd8b9b4)
0xffff8bd8b984    68  sub x2, x1, #0x1 (1)
0xffff8bd8b988    72  and x5, x5, #0xfffffffffff00000
0xffff8bd8b98c    76  ldr x5, [x5, #8]
0xffff8bd8b990    80  tbz w5, #1, #+0x24 (addr 0xffff8bd8b9b4)
0xffff8bd8b994    84  and x5, x1, #0xfffffffffff00000
0xffff8bd8b998    88  ldr x5, [x5, #8]
0xffff8bd8b99c    92  tbz w5, #2, #+0x18 (addr 0xffff8bd8b9b4)
0xffff8bd8b9a0    96  sub csp, jssp, #0x8 (8)
0xffff8bd8b9a4   100  str lr, [jssp, #-8]!
0xffff8bd8b9a8   104  ldr x16, pc+32 (addr 0x0000ffff8bd8b9c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd8b9ac   108  blr x16
0xffff8bd8b9b0   112  ldr lr, [jssp], #8
0xffff8bd8b9b4   116  ret
0xffff8bd8b9b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd8b9bc   124  d63f03e0       constant
0xffff8bd8b9c0   128  8bd170c0       constant
0xffff8bd8b9c4   132  0000ffff       constant
0xffff8bd8b9c8   136  8bd38080       constant
0xffff8bd8b9cc   140  0000ffff       constant
0xffff8bd8b9d0   144  movz x16, #0x0
0xffff8bd8b9d4   148  sub csp, jssp, #0x10 (16)
0xffff8bd8b9d8   152  stp fp, lr, [jssp, #-16]!
0xffff8bd8b9dc   156  bl #+0x4 (addr 0xffff8bd8b9e0)
0xffff8bd8b9e0   160  movz x17, #0xa00000000
0xffff8bd8b9e4   164  sub csp, jssp, #0x10 (16)
0xffff8bd8b9e8   168  stp x17, cp, [jssp, #-16]!
0xffff8bd8b9ec   172  add fp, jssp, #0x10 (16)
0xffff8bd8b9f0   176  ldr x17, pc+24 (addr 0x0000ffff8bd8ba08)    ;; lazy deoptimization bailout 0
0xffff8bd8b9f4   180  add x17, x17, x16
0xffff8bd8b9f8   184  br x17
0xffff8bd8b9fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd8ba00   192  d63f03e0       constant
0xffff8bd8ba04   196  d503201f       constant
0xffff8bd8ba08   200  8bb06000       constant
0xffff8bd8ba0c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd8b970  code target (STUB)  (0xffff8bd170c0)
0xffff8bd8b9a8  code target (STUB)  (0xffff8bd38080)
0xffff8bd8b9b8  constant pool (size 24)
0xffff8bd8b9f0  runtime entry
0xffff8bd8b9fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd8b940     0  tbz w0, #0, #+0x90 (addr 0xffff8bd8b9d0)
0xffff8bd8b944     4  mov x2, x0
0xffff8bd8b948     8  stur x2, [x1, #23]
0xffff8bd8b94c    12  add x3, x1, #0x17 (23)
0xffff8bd8b950    16  and x2, x2, #0xfffffffffff00000
0xffff8bd8b954    20  ldr x2, [x2, #8]
0xffff8bd8b958    24  tbz w2, #1, #+0x24 (addr 0xffff8bd8b97c)
0xffff8bd8b95c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd8b960    32  ldr x2, [x2, #8]
0xffff8bd8b964    36  tbz w2, #2, #+0x18 (addr 0xffff8bd8b97c)
0xffff8bd8b968    40  sub csp, jssp, #0x8 (8)
0xffff8bd8b96c    44  str lr, [jssp, #-8]!
0xffff8bd8b970    48  ldr x16, pc+80 (addr 0x0000ffff8bd8b9c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd8b974    52  blr x16
0xffff8bd8b978    56  ldr lr, [jssp], #8
0xffff8bd8b97c    60  stur x5, [x1, #-1]
0xffff8bd8b980    64  tbz w5, #0, #+0x34 (addr 0xffff8bd8b9b4)
0xffff8bd8b984    68  sub x2, x1, #0x1 (1)
0xffff8bd8b988    72  and x5, x5, #0xfffffffffff00000
0xffff8bd8b98c    76  ldr x5, [x5, #8]
0xffff8bd8b990    80  tbz w5, #1, #+0x24 (addr 0xffff8bd8b9b4)
0xffff8bd8b994    84  and x5, x1, #0xfffffffffff00000
0xffff8bd8b998    88  ldr x5, [x5, #8]
0xffff8bd8b99c    92  tbz w5, #2, #+0x18 (addr 0xffff8bd8b9b4)
0xffff8bd8b9a0    96  sub csp, jssp, #0x8 (8)
0xffff8bd8b9a4   100  str lr, [jssp, #-8]!
0xffff8bd8b9a8   104  ldr x16, pc+32 (addr 0x0000ffff8bd8b9c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd8b9ac   108  blr x16
0xffff8bd8b9b0   112  ldr lr, [jssp], #8
0xffff8bd8b9b4   116  ret
0xffff8bd8b9b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd8b9bc   124  d63f03e0       constant
0xffff8bd8b9c0   128  8bd170c0       constant
0xffff8bd8b9c4   132  0000ffff       constant
0xffff8bd8b9c8   136  8bd38080       constant
0xffff8bd8b9cc   140  0000ffff       constant
0xffff8bd8b9d0   144  movz x16, #0x0
0xffff8bd8b9d4   148  sub csp, jssp, #0x10 (16)
0xffff8bd8b9d8   152  stp fp, lr, [jssp, #-16]!
0xffff8bd8b9dc   156  bl #+0x4 (addr 0xffff8bd8b9e0)
0xffff8bd8b9e0   160  movz x17, #0xa00000000
0xffff8bd8b9e4   164  sub csp, jssp, #0x10 (16)
0xffff8bd8b9e8   168  stp x17, cp, [jssp, #-16]!
0xffff8bd8b9ec   172  add fp, jssp, #0x10 (16)
0xffff8bd8b9f0   176  ldr x17, pc+24 (addr 0x0000ffff8bd8ba08)    ;; lazy deoptimization bailout 0
0xffff8bd8b9f4   180  add x17, x17, x16
0xffff8bd8b9f8   184  br x17
0xffff8bd8b9fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd8ba00   192  d63f03e0       constant
0xffff8bd8ba04   196  d503201f       constant
0xffff8bd8ba08   200  8bb06000       constant
0xffff8bd8ba0c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd8b970  code target (STUB)  (0xffff8bd170c0)
0xffff8bd8b9a8  code target (STUB)  (0xffff8bd38080)
0xffff8bd8b9b8  constant pool (size 24)
0xffff8bd8b9f0  runtime entry
0xffff8bd8b9fc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = filename
compiler = unknown
Instructions (size = 152)
0xffff8bd8ba80     0  sub csp, jssp, #0x8 (8)
0xffff8bd8ba84     4  str x3, [jssp, #-8]!
0xffff8bd8ba88     8  sub csp, jssp, #0x8 (8)
0xffff8bd8ba8c    12  str x4, [jssp, #-8]!
0xffff8bd8ba90    16  ldr x3, pc+88 (addr 0x0000ffff8bd8bae8)    ;; object: 0x26cc7ba9 Cell for 0
0xffff8bd8ba94    20  ldur x3, [x3, #7]
0xffff8bd8ba98    24  cmp x3, #0x0 (0)
0xffff8bd8ba9c    28  b.ne #+0x30 (addr 0xffff8bd8bacc)
0xffff8bd8baa0    32  tbz w0, #0, #+0x2c (addr 0xffff8bd8bacc)
0xffff8bd8baa4    36  ldr x5, pc+76 (addr 0x0000ffff8bd8baf0)    ;; object: 0x26cc2219 WeakCell for 0x5f51b2d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd8baa8    40  ldur x5, [x5, #7]
0xffff8bd8baac    44  tbz w5, #0, #+0x20 (addr 0xffff8bd8bacc)
0xffff8bd8bab0    48  ldursw x4, [x5, #15]
0xffff8bd8bab4    52  tbnz w4, #23, #+0x18 (addr 0xffff8bd8bacc)
0xffff8bd8bab8    56  ldr x4, [jssp], #8
0xffff8bd8babc    60  ldr x3, [jssp], #8
0xffff8bd8bac0    64  ldr x2, pc+56 (addr 0x0000ffff8bd8baf8)    ;; object: 0x26cb9cf1 <String[8]: filename>
0xffff8bd8bac4    68  ldr x16, pc+60 (addr 0x0000ffff8bd8bb00)    ;; code: HANDLER, StoreTransitionStub, minor: 198659
0xffff8bd8bac8    72  br x16
0xffff8bd8bacc    76  ldr x2, pc+60 (addr 0x0000ffff8bd8bb08)    ;; object: 0x26cb9cf1 <String[8]: filename>
0xffff8bd8bad0    80  ldr x4, [jssp], #8
0xffff8bd8bad4    84  ldr x3, [jssp], #8
0xffff8bd8bad8    88  ldr x16, pc+56 (addr 0x0000ffff8bd8bb10)    ;; code: BUILTIN
0xffff8bd8badc    92  br x16
0xffff8bd8bae0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd8bae4   100  d63f03e0       constant
0xffff8bd8bae8   104  26cc7ba9       constant
0xffff8bd8baec   108  00000000       constant
0xffff8bd8baf0   112  26cc2219       constant
0xffff8bd8baf4   116  00000000       constant
0xffff8bd8baf8   120  26cb9cf1       constant
0xffff8bd8bafc   124  00000000       constant
0xffff8bd8bb00   128  8bd8b940       constant
0xffff8bd8bb04   132  0000ffff       constant
0xffff8bd8bb08   136  26cb9cf1       constant
0xffff8bd8bb0c   140  00000000       constant
0xffff8bd8bb10   144  8bd22420       constant
0xffff8bd8bb14   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bd8ba90  embedded object  (0x26cc7ba9 Cell for 0)
0xffff8bd8baa4  embedded object  (0x26cc2219 WeakCell for 0x5f51b2d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd8bac0  embedded object  (0x26cb9cf1 <String[8]: filename>)
0xffff8bd8bac4  code target (HANDLER)  (0xffff8bd8b940)
0xffff8bd8bacc  embedded object  (0x26cb9cf1 <String[8]: filename>)
0xffff8bd8bad8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd8bae0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd8bb80     0  tbz w0, #0, #+0x90 (addr 0xffff8bd8bc10)
0xffff8bd8bb84     4  mov x2, x0
0xffff8bd8bb88     8  stur x2, [x1, #31]
0xffff8bd8bb8c    12  add x3, x1, #0x1f (31)
0xffff8bd8bb90    16  and x2, x2, #0xfffffffffff00000
0xffff8bd8bb94    20  ldr x2, [x2, #8]
0xffff8bd8bb98    24  tbz w2, #1, #+0x24 (addr 0xffff8bd8bbbc)
0xffff8bd8bb9c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd8bba0    32  ldr x2, [x2, #8]
0xffff8bd8bba4    36  tbz w2, #2, #+0x18 (addr 0xffff8bd8bbbc)
0xffff8bd8bba8    40  sub csp, jssp, #0x8 (8)
0xffff8bd8bbac    44  str lr, [jssp, #-8]!
0xffff8bd8bbb0    48  ldr x16, pc+80 (addr 0x0000ffff8bd8bc00)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd8bbb4    52  blr x16
0xffff8bd8bbb8    56  ldr lr, [jssp], #8
0xffff8bd8bbbc    60  stur x5, [x1, #-1]
0xffff8bd8bbc0    64  tbz w5, #0, #+0x34 (addr 0xffff8bd8bbf4)
0xffff8bd8bbc4    68  sub x2, x1, #0x1 (1)
0xffff8bd8bbc8    72  and x5, x5, #0xfffffffffff00000
0xffff8bd8bbcc    76  ldr x5, [x5, #8]
0xffff8bd8bbd0    80  tbz w5, #1, #+0x24 (addr 0xffff8bd8bbf4)
0xffff8bd8bbd4    84  and x5, x1, #0xfffffffffff00000
0xffff8bd8bbd8    88  ldr x5, [x5, #8]
0xffff8bd8bbdc    92  tbz w5, #2, #+0x18 (addr 0xffff8bd8bbf4)
0xffff8bd8bbe0    96  sub csp, jssp, #0x8 (8)
0xffff8bd8bbe4   100  str lr, [jssp, #-8]!
0xffff8bd8bbe8   104  ldr x16, pc+32 (addr 0x0000ffff8bd8bc08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd8bbec   108  blr x16
0xffff8bd8bbf0   112  ldr lr, [jssp], #8
0xffff8bd8bbf4   116  ret
0xffff8bd8bbf8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd8bbfc   124  d63f03e0       constant
0xffff8bd8bc00   128  8bd170c0       constant
0xffff8bd8bc04   132  0000ffff       constant
0xffff8bd8bc08   136  8bd38080       constant
0xffff8bd8bc0c   140  0000ffff       constant
0xffff8bd8bc10   144  movz x16, #0x0
0xffff8bd8bc14   148  sub csp, jssp, #0x10 (16)
0xffff8bd8bc18   152  stp fp, lr, [jssp, #-16]!
0xffff8bd8bc1c   156  bl #+0x4 (addr 0xffff8bd8bc20)
0xffff8bd8bc20   160  movz x17, #0xa00000000
0xffff8bd8bc24   164  sub csp, jssp, #0x10 (16)
0xffff8bd8bc28   168  stp x17, cp, [jssp, #-16]!
0xffff8bd8bc2c   172  add fp, jssp, #0x10 (16)
0xffff8bd8bc30   176  ldr x17, pc+24 (addr 0x0000ffff8bd8bc48)    ;; lazy deoptimization bailout 0
0xffff8bd8bc34   180  add x17, x17, x16
0xffff8bd8bc38   184  br x17
0xffff8bd8bc3c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd8bc40   192  d63f03e0       constant
0xffff8bd8bc44   196  d503201f       constant
0xffff8bd8bc48   200  8bb06000       constant
0xffff8bd8bc4c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd8bbb0  code target (STUB)  (0xffff8bd170c0)
0xffff8bd8bbe8  code target (STUB)  (0xffff8bd38080)
0xffff8bd8bbf8  constant pool (size 24)
0xffff8bd8bc30  runtime entry
0xffff8bd8bc3c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd8bb80     0  tbz w0, #0, #+0x90 (addr 0xffff8bd8bc10)
0xffff8bd8bb84     4  mov x2, x0
0xffff8bd8bb88     8  stur x2, [x1, #31]
0xffff8bd8bb8c    12  add x3, x1, #0x1f (31)
0xffff8bd8bb90    16  and x2, x2, #0xfffffffffff00000
0xffff8bd8bb94    20  ldr x2, [x2, #8]
0xffff8bd8bb98    24  tbz w2, #1, #+0x24 (addr 0xffff8bd8bbbc)
0xffff8bd8bb9c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd8bba0    32  ldr x2, [x2, #8]
0xffff8bd8bba4    36  tbz w2, #2, #+0x18 (addr 0xffff8bd8bbbc)
0xffff8bd8bba8    40  sub csp, jssp, #0x8 (8)
0xffff8bd8bbac    44  str lr, [jssp, #-8]!
0xffff8bd8bbb0    48  ldr x16, pc+80 (addr 0x0000ffff8bd8bc00)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd8bbb4    52  blr x16
0xffff8bd8bbb8    56  ldr lr, [jssp], #8
0xffff8bd8bbbc    60  stur x5, [x1, #-1]
0xffff8bd8bbc0    64  tbz w5, #0, #+0x34 (addr 0xffff8bd8bbf4)
0xffff8bd8bbc4    68  sub x2, x1, #0x1 (1)
0xffff8bd8bbc8    72  and x5, x5, #0xfffffffffff00000
0xffff8bd8bbcc    76  ldr x5, [x5, #8]
0xffff8bd8bbd0    80  tbz w5, #1, #+0x24 (addr 0xffff8bd8bbf4)
0xffff8bd8bbd4    84  and x5, x1, #0xfffffffffff00000
0xffff8bd8bbd8    88  ldr x5, [x5, #8]
0xffff8bd8bbdc    92  tbz w5, #2, #+0x18 (addr 0xffff8bd8bbf4)
0xffff8bd8bbe0    96  sub csp, jssp, #0x8 (8)
0xffff8bd8bbe4   100  str lr, [jssp, #-8]!
0xffff8bd8bbe8   104  ldr x16, pc+32 (addr 0x0000ffff8bd8bc08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd8bbec   108  blr x16
0xffff8bd8bbf0   112  ldr lr, [jssp], #8
0xffff8bd8bbf4   116  ret
0xffff8bd8bbf8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd8bbfc   124  d63f03e0       constant
0xffff8bd8bc00   128  8bd170c0       constant
0xffff8bd8bc04   132  0000ffff       constant
0xffff8bd8bc08   136  8bd38080       constant
0xffff8bd8bc0c   140  0000ffff       constant
0xffff8bd8bc10   144  movz x16, #0x0
0xffff8bd8bc14   148  sub csp, jssp, #0x10 (16)
0xffff8bd8bc18   152  stp fp, lr, [jssp, #-16]!
0xffff8bd8bc1c   156  bl #+0x4 (addr 0xffff8bd8bc20)
0xffff8bd8bc20   160  movz x17, #0xa00000000
0xffff8bd8bc24   164  sub csp, jssp, #0x10 (16)
0xffff8bd8bc28   168  stp x17, cp, [jssp, #-16]!
0xffff8bd8bc2c   172  add fp, jssp, #0x10 (16)
0xffff8bd8bc30   176  ldr x17, pc+24 (addr 0x0000ffff8bd8bc48)    ;; lazy deoptimization bailout 0
0xffff8bd8bc34   180  add x17, x17, x16
0xffff8bd8bc38   184  br x17
0xffff8bd8bc3c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd8bc40   192  d63f03e0       constant
0xffff8bd8bc44   196  d503201f       constant
0xffff8bd8bc48   200  8bb06000       constant
0xffff8bd8bc4c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd8bbb0  code target (STUB)  (0xffff8bd170c0)
0xffff8bd8bbe8  code target (STUB)  (0xffff8bd38080)
0xffff8bd8bbf8  constant pool (size 24)
0xffff8bd8bc30  runtime entry
0xffff8bd8bc3c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = id
compiler = unknown
Instructions (size = 152)
0xffff8bd8bcc0     0  sub csp, jssp, #0x8 (8)
0xffff8bd8bcc4     4  str x3, [jssp, #-8]!
0xffff8bd8bcc8     8  sub csp, jssp, #0x8 (8)
0xffff8bd8bccc    12  str x4, [jssp, #-8]!
0xffff8bd8bcd0    16  ldr x3, pc+88 (addr 0x0000ffff8bd8bd28)    ;; object: 0x26cc7ba9 Cell for 0
0xffff8bd8bcd4    20  ldur x3, [x3, #7]
0xffff8bd8bcd8    24  cmp x3, #0x0 (0)
0xffff8bd8bcdc    28  b.ne #+0x30 (addr 0xffff8bd8bd0c)
0xffff8bd8bce0    32  tbz w0, #0, #+0x2c (addr 0xffff8bd8bd0c)
0xffff8bd8bce4    36  ldr x5, pc+76 (addr 0x0000ffff8bd8bd30)    ;; object: 0x26cc2231 WeakCell for 0x5f51b331 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd8bce8    40  ldur x5, [x5, #7]
0xffff8bd8bcec    44  tbz w5, #0, #+0x20 (addr 0xffff8bd8bd0c)
0xffff8bd8bcf0    48  ldursw x4, [x5, #15]
0xffff8bd8bcf4    52  tbnz w4, #23, #+0x18 (addr 0xffff8bd8bd0c)
0xffff8bd8bcf8    56  ldr x4, [jssp], #8
0xffff8bd8bcfc    60  ldr x3, [jssp], #8
0xffff8bd8bd00    64  ldr x2, pc+56 (addr 0x0000ffff8bd8bd38)    ;; object: 0x26c4e919 <String[2]: id>
0xffff8bd8bd04    68  ldr x16, pc+60 (addr 0x0000ffff8bd8bd40)    ;; code: HANDLER, StoreTransitionStub, minor: 198660
0xffff8bd8bd08    72  br x16
0xffff8bd8bd0c    76  ldr x2, pc+60 (addr 0x0000ffff8bd8bd48)    ;; object: 0x26c4e919 <String[2]: id>
0xffff8bd8bd10    80  ldr x4, [jssp], #8
0xffff8bd8bd14    84  ldr x3, [jssp], #8
0xffff8bd8bd18    88  ldr x16, pc+56 (addr 0x0000ffff8bd8bd50)    ;; code: BUILTIN
0xffff8bd8bd1c    92  br x16
0xffff8bd8bd20    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd8bd24   100  d63f03e0       constant
0xffff8bd8bd28   104  26cc7ba9       constant
0xffff8bd8bd2c   108  00000000       constant
0xffff8bd8bd30   112  26cc2231       constant
0xffff8bd8bd34   116  00000000       constant
0xffff8bd8bd38   120  26c4e919       constant
0xffff8bd8bd3c   124  00000000       constant
0xffff8bd8bd40   128  8bd8bb80       constant
0xffff8bd8bd44   132  0000ffff       constant
0xffff8bd8bd48   136  26c4e919       constant
0xffff8bd8bd4c   140  00000000       constant
0xffff8bd8bd50   144  8bd22420       constant
0xffff8bd8bd54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bd8bcd0  embedded object  (0x26cc7ba9 Cell for 0)
0xffff8bd8bce4  embedded object  (0x26cc2231 WeakCell for 0x5f51b331 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd8bd00  embedded object  (0x26c4e919 <String[2]: id>)
0xffff8bd8bd04  code target (HANDLER)  (0xffff8bd8bb80)
0xffff8bd8bd0c  embedded object  (0x26c4e919 <String[2]: id>)
0xffff8bd8bd18  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd8bd20  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd8bdc0     0  tbz w0, #0, #+0x90 (addr 0xffff8bd8be50)
0xffff8bd8bdc4     4  mov x2, x0
0xffff8bd8bdc8     8  stur x2, [x1, #39]
0xffff8bd8bdcc    12  add x3, x1, #0x27 (39)
0xffff8bd8bdd0    16  and x2, x2, #0xfffffffffff00000
0xffff8bd8bdd4    20  ldr x2, [x2, #8]
0xffff8bd8bdd8    24  tbz w2, #1, #+0x24 (addr 0xffff8bd8bdfc)
0xffff8bd8bddc    28  and x2, x1, #0xfffffffffff00000
0xffff8bd8bde0    32  ldr x2, [x2, #8]
0xffff8bd8bde4    36  tbz w2, #2, #+0x18 (addr 0xffff8bd8bdfc)
0xffff8bd8bde8    40  sub csp, jssp, #0x8 (8)
0xffff8bd8bdec    44  str lr, [jssp, #-8]!
0xffff8bd8bdf0    48  ldr x16, pc+80 (addr 0x0000ffff8bd8be40)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd8bdf4    52  blr x16
0xffff8bd8bdf8    56  ldr lr, [jssp], #8
0xffff8bd8bdfc    60  stur x5, [x1, #-1]
0xffff8bd8be00    64  tbz w5, #0, #+0x34 (addr 0xffff8bd8be34)
0xffff8bd8be04    68  sub x2, x1, #0x1 (1)
0xffff8bd8be08    72  and x5, x5, #0xfffffffffff00000
0xffff8bd8be0c    76  ldr x5, [x5, #8]
0xffff8bd8be10    80  tbz w5, #1, #+0x24 (addr 0xffff8bd8be34)
0xffff8bd8be14    84  and x5, x1, #0xfffffffffff00000
0xffff8bd8be18    88  ldr x5, [x5, #8]
0xffff8bd8be1c    92  tbz w5, #2, #+0x18 (addr 0xffff8bd8be34)
0xffff8bd8be20    96  sub csp, jssp, #0x8 (8)
0xffff8bd8be24   100  str lr, [jssp, #-8]!
0xffff8bd8be28   104  ldr x16, pc+32 (addr 0x0000ffff8bd8be48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd8be2c   108  blr x16
0xffff8bd8be30   112  ldr lr, [jssp], #8
0xffff8bd8be34   116  ret
0xffff8bd8be38   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd8be3c   124  d63f03e0       constant
0xffff8bd8be40   128  8bd170c0       constant
0xffff8bd8be44   132  0000ffff       constant
0xffff8bd8be48   136  8bd38080       constant
0xffff8bd8be4c   140  0000ffff       constant
0xffff8bd8be50   144  movz x16, #0x0
0xffff8bd8be54   148  sub csp, jssp, #0x10 (16)
0xffff8bd8be58   152  stp fp, lr, [jssp, #-16]!
0xffff8bd8be5c   156  bl #+0x4 (addr 0xffff8bd8be60)
0xffff8bd8be60   160  movz x17, #0xa00000000
0xffff8bd8be64   164  sub csp, jssp, #0x10 (16)
0xffff8bd8be68   168  stp x17, cp, [jssp, #-16]!
0xffff8bd8be6c   172  add fp, jssp, #0x10 (16)
0xffff8bd8be70   176  ldr x17, pc+24 (addr 0x0000ffff8bd8be88)    ;; lazy deoptimization bailout 0
0xffff8bd8be74   180  add x17, x17, x16
0xffff8bd8be78   184  br x17
0xffff8bd8be7c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd8be80   192  d63f03e0       constant
0xffff8bd8be84   196  d503201f       constant
0xffff8bd8be88   200  8bb06000       constant
0xffff8bd8be8c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd8bdf0  code target (STUB)  (0xffff8bd170c0)
0xffff8bd8be28  code target (STUB)  (0xffff8bd38080)
0xffff8bd8be38  constant pool (size 24)
0xffff8bd8be70  runtime entry
0xffff8bd8be7c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd8bdc0     0  tbz w0, #0, #+0x90 (addr 0xffff8bd8be50)
0xffff8bd8bdc4     4  mov x2, x0
0xffff8bd8bdc8     8  stur x2, [x1, #39]
0xffff8bd8bdcc    12  add x3, x1, #0x27 (39)
0xffff8bd8bdd0    16  and x2, x2, #0xfffffffffff00000
0xffff8bd8bdd4    20  ldr x2, [x2, #8]
0xffff8bd8bdd8    24  tbz w2, #1, #+0x24 (addr 0xffff8bd8bdfc)
0xffff8bd8bddc    28  and x2, x1, #0xfffffffffff00000
0xffff8bd8bde0    32  ldr x2, [x2, #8]
0xffff8bd8bde4    36  tbz w2, #2, #+0x18 (addr 0xffff8bd8bdfc)
0xffff8bd8bde8    40  sub csp, jssp, #0x8 (8)
0xffff8bd8bdec    44  str lr, [jssp, #-8]!
0xffff8bd8bdf0    48  ldr x16, pc+80 (addr 0x0000ffff8bd8be40)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd8bdf4    52  blr x16
0xffff8bd8bdf8    56  ldr lr, [jssp], #8
0xffff8bd8bdfc    60  stur x5, [x1, #-1]
0xffff8bd8be00    64  tbz w5, #0, #+0x34 (addr 0xffff8bd8be34)
0xffff8bd8be04    68  sub x2, x1, #0x1 (1)
0xffff8bd8be08    72  and x5, x5, #0xfffffffffff00000
0xffff8bd8be0c    76  ldr x5, [x5, #8]
0xffff8bd8be10    80  tbz w5, #1, #+0x24 (addr 0xffff8bd8be34)
0xffff8bd8be14    84  and x5, x1, #0xfffffffffff00000
0xffff8bd8be18    88  ldr x5, [x5, #8]
0xffff8bd8be1c    92  tbz w5, #2, #+0x18 (addr 0xffff8bd8be34)
0xffff8bd8be20    96  sub csp, jssp, #0x8 (8)
0xffff8bd8be24   100  str lr, [jssp, #-8]!
0xffff8bd8be28   104  ldr x16, pc+32 (addr 0x0000ffff8bd8be48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd8be2c   108  blr x16
0xffff8bd8be30   112  ldr lr, [jssp], #8
0xffff8bd8be34   116  ret
0xffff8bd8be38   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd8be3c   124  d63f03e0       constant
0xffff8bd8be40   128  8bd170c0       constant
0xffff8bd8be44   132  0000ffff       constant
0xffff8bd8be48   136  8bd38080       constant
0xffff8bd8be4c   140  0000ffff       constant
0xffff8bd8be50   144  movz x16, #0x0
0xffff8bd8be54   148  sub csp, jssp, #0x10 (16)
0xffff8bd8be58   152  stp fp, lr, [jssp, #-16]!
0xffff8bd8be5c   156  bl #+0x4 (addr 0xffff8bd8be60)
0xffff8bd8be60   160  movz x17, #0xa00000000
0xffff8bd8be64   164  sub csp, jssp, #0x10 (16)
0xffff8bd8be68   168  stp x17, cp, [jssp, #-16]!
0xffff8bd8be6c   172  add fp, jssp, #0x10 (16)
0xffff8bd8be70   176  ldr x17, pc+24 (addr 0x0000ffff8bd8be88)    ;; lazy deoptimization bailout 0
0xffff8bd8be74   180  add x17, x17, x16
0xffff8bd8be78   184  br x17
0xffff8bd8be7c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd8be80   192  d63f03e0       constant
0xffff8bd8be84   196  d503201f       constant
0xffff8bd8be88   200  8bb06000       constant
0xffff8bd8be8c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd8bdf0  code target (STUB)  (0xffff8bd170c0)
0xffff8bd8be28  code target (STUB)  (0xffff8bd38080)
0xffff8bd8be38  constant pool (size 24)
0xffff8bd8be70  runtime entry
0xffff8bd8be7c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = exports
compiler = unknown
Instructions (size = 152)
0xffff8bd8bf00     0  sub csp, jssp, #0x8 (8)
0xffff8bd8bf04     4  str x3, [jssp, #-8]!
0xffff8bd8bf08     8  sub csp, jssp, #0x8 (8)
0xffff8bd8bf0c    12  str x4, [jssp, #-8]!
0xffff8bd8bf10    16  ldr x3, pc+88 (addr 0x0000ffff8bd8bf68)    ;; object: 0x26cc7ba9 Cell for 0
0xffff8bd8bf14    20  ldur x3, [x3, #7]
0xffff8bd8bf18    24  cmp x3, #0x0 (0)
0xffff8bd8bf1c    28  b.ne #+0x30 (addr 0xffff8bd8bf4c)
0xffff8bd8bf20    32  tbz w0, #0, #+0x2c (addr 0xffff8bd8bf4c)
0xffff8bd8bf24    36  ldr x5, pc+76 (addr 0x0000ffff8bd8bf70)    ;; object: 0x26cc2281 WeakCell for 0x5f51b389 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd8bf28    40  ldur x5, [x5, #7]
0xffff8bd8bf2c    44  tbz w5, #0, #+0x20 (addr 0xffff8bd8bf4c)
0xffff8bd8bf30    48  ldursw x4, [x5, #15]
0xffff8bd8bf34    52  tbnz w4, #23, #+0x18 (addr 0xffff8bd8bf4c)
0xffff8bd8bf38    56  ldr x4, [jssp], #8
0xffff8bd8bf3c    60  ldr x3, [jssp], #8
0xffff8bd8bf40    64  ldr x2, pc+56 (addr 0x0000ffff8bd8bf78)    ;; object: 0x26cb2651 <String[7]: exports>
0xffff8bd8bf44    68  ldr x16, pc+60 (addr 0x0000ffff8bd8bf80)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff8bd8bf48    72  br x16
0xffff8bd8bf4c    76  ldr x2, pc+60 (addr 0x0000ffff8bd8bf88)    ;; object: 0x26cb2651 <String[7]: exports>
0xffff8bd8bf50    80  ldr x4, [jssp], #8
0xffff8bd8bf54    84  ldr x3, [jssp], #8
0xffff8bd8bf58    88  ldr x16, pc+56 (addr 0x0000ffff8bd8bf90)    ;; code: BUILTIN
0xffff8bd8bf5c    92  br x16
0xffff8bd8bf60    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd8bf64   100  d63f03e0       constant
0xffff8bd8bf68   104  26cc7ba9       constant
0xffff8bd8bf6c   108  00000000       constant
0xffff8bd8bf70   112  26cc2281       constant
0xffff8bd8bf74   116  00000000       constant
0xffff8bd8bf78   120  26cb2651       constant
0xffff8bd8bf7c   124  00000000       constant
0xffff8bd8bf80   128  8bd8bdc0       constant
0xffff8bd8bf84   132  0000ffff       constant
0xffff8bd8bf88   136  26cb2651       constant
0xffff8bd8bf8c   140  00000000       constant
0xffff8bd8bf90   144  8bd22420       constant
0xffff8bd8bf94   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bd8bf10  embedded object  (0x26cc7ba9 Cell for 0)
0xffff8bd8bf24  embedded object  (0x26cc2281 WeakCell for 0x5f51b389 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd8bf40  embedded object  (0x26cb2651 <String[7]: exports>)
0xffff8bd8bf44  code target (HANDLER)  (0xffff8bd8bdc0)
0xffff8bd8bf4c  embedded object  (0x26cb2651 <String[7]: exports>)
0xffff8bd8bf58  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd8bf60  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd8c000     0  tbz w0, #0, #+0x90 (addr 0xffff8bd8c090)
0xffff8bd8c004     4  mov x2, x0
0xffff8bd8c008     8  stur x2, [x1, #47]
0xffff8bd8c00c    12  add x3, x1, #0x2f (47)
0xffff8bd8c010    16  and x2, x2, #0xfffffffffff00000
0xffff8bd8c014    20  ldr x2, [x2, #8]
0xffff8bd8c018    24  tbz w2, #1, #+0x24 (addr 0xffff8bd8c03c)
0xffff8bd8c01c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd8c020    32  ldr x2, [x2, #8]
0xffff8bd8c024    36  tbz w2, #2, #+0x18 (addr 0xffff8bd8c03c)
0xffff8bd8c028    40  sub csp, jssp, #0x8 (8)
0xffff8bd8c02c    44  str lr, [jssp, #-8]!
0xffff8bd8c030    48  ldr x16, pc+80 (addr 0x0000ffff8bd8c080)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd8c034    52  blr x16
0xffff8bd8c038    56  ldr lr, [jssp], #8
0xffff8bd8c03c    60  stur x5, [x1, #-1]
0xffff8bd8c040    64  tbz w5, #0, #+0x34 (addr 0xffff8bd8c074)
0xffff8bd8c044    68  sub x2, x1, #0x1 (1)
0xffff8bd8c048    72  and x5, x5, #0xfffffffffff00000
0xffff8bd8c04c    76  ldr x5, [x5, #8]
0xffff8bd8c050    80  tbz w5, #1, #+0x24 (addr 0xffff8bd8c074)
0xffff8bd8c054    84  and x5, x1, #0xfffffffffff00000
0xffff8bd8c058    88  ldr x5, [x5, #8]
0xffff8bd8c05c    92  tbz w5, #2, #+0x18 (addr 0xffff8bd8c074)
0xffff8bd8c060    96  sub csp, jssp, #0x8 (8)
0xffff8bd8c064   100  str lr, [jssp, #-8]!
0xffff8bd8c068   104  ldr x16, pc+32 (addr 0x0000ffff8bd8c088)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd8c06c   108  blr x16
0xffff8bd8c070   112  ldr lr, [jssp], #8
0xffff8bd8c074   116  ret
0xffff8bd8c078   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd8c07c   124  d63f03e0       constant
0xffff8bd8c080   128  8bd170c0       constant
0xffff8bd8c084   132  0000ffff       constant
0xffff8bd8c088   136  8bd38080       constant
0xffff8bd8c08c   140  0000ffff       constant
0xffff8bd8c090   144  movz x16, #0x0
0xffff8bd8c094   148  sub csp, jssp, #0x10 (16)
0xffff8bd8c098   152  stp fp, lr, [jssp, #-16]!
0xffff8bd8c09c   156  bl #+0x4 (addr 0xffff8bd8c0a0)
0xffff8bd8c0a0   160  movz x17, #0xa00000000
0xffff8bd8c0a4   164  sub csp, jssp, #0x10 (16)
0xffff8bd8c0a8   168  stp x17, cp, [jssp, #-16]!
0xffff8bd8c0ac   172  add fp, jssp, #0x10 (16)
0xffff8bd8c0b0   176  ldr x17, pc+24 (addr 0x0000ffff8bd8c0c8)    ;; lazy deoptimization bailout 0
0xffff8bd8c0b4   180  add x17, x17, x16
0xffff8bd8c0b8   184  br x17
0xffff8bd8c0bc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd8c0c0   192  d63f03e0       constant
0xffff8bd8c0c4   196  d503201f       constant
0xffff8bd8c0c8   200  8bb06000       constant
0xffff8bd8c0cc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd8c030  code target (STUB)  (0xffff8bd170c0)
0xffff8bd8c068  code target (STUB)  (0xffff8bd38080)
0xffff8bd8c078  constant pool (size 24)
0xffff8bd8c0b0  runtime entry
0xffff8bd8c0bc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd8c000     0  tbz w0, #0, #+0x90 (addr 0xffff8bd8c090)
0xffff8bd8c004     4  mov x2, x0
0xffff8bd8c008     8  stur x2, [x1, #47]
0xffff8bd8c00c    12  add x3, x1, #0x2f (47)
0xffff8bd8c010    16  and x2, x2, #0xfffffffffff00000
0xffff8bd8c014    20  ldr x2, [x2, #8]
0xffff8bd8c018    24  tbz w2, #1, #+0x24 (addr 0xffff8bd8c03c)
0xffff8bd8c01c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd8c020    32  ldr x2, [x2, #8]
0xffff8bd8c024    36  tbz w2, #2, #+0x18 (addr 0xffff8bd8c03c)
0xffff8bd8c028    40  sub csp, jssp, #0x8 (8)
0xffff8bd8c02c    44  str lr, [jssp, #-8]!
0xffff8bd8c030    48  ldr x16, pc+80 (addr 0x0000ffff8bd8c080)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd8c034    52  blr x16
0xffff8bd8c038    56  ldr lr, [jssp], #8
0xffff8bd8c03c    60  stur x5, [x1, #-1]
0xffff8bd8c040    64  tbz w5, #0, #+0x34 (addr 0xffff8bd8c074)
0xffff8bd8c044    68  sub x2, x1, #0x1 (1)
0xffff8bd8c048    72  and x5, x5, #0xfffffffffff00000
0xffff8bd8c04c    76  ldr x5, [x5, #8]
0xffff8bd8c050    80  tbz w5, #1, #+0x24 (addr 0xffff8bd8c074)
0xffff8bd8c054    84  and x5, x1, #0xfffffffffff00000
0xffff8bd8c058    88  ldr x5, [x5, #8]
0xffff8bd8c05c    92  tbz w5, #2, #+0x18 (addr 0xffff8bd8c074)
0xffff8bd8c060    96  sub csp, jssp, #0x8 (8)
0xffff8bd8c064   100  str lr, [jssp, #-8]!
0xffff8bd8c068   104  ldr x16, pc+32 (addr 0x0000ffff8bd8c088)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd8c06c   108  blr x16
0xffff8bd8c070   112  ldr lr, [jssp], #8
0xffff8bd8c074   116  ret
0xffff8bd8c078   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd8c07c   124  d63f03e0       constant
0xffff8bd8c080   128  8bd170c0       constant
0xffff8bd8c084   132  0000ffff       constant
0xffff8bd8c088   136  8bd38080       constant
0xffff8bd8c08c   140  0000ffff       constant
0xffff8bd8c090   144  movz x16, #0x0
0xffff8bd8c094   148  sub csp, jssp, #0x10 (16)
0xffff8bd8c098   152  stp fp, lr, [jssp, #-16]!
0xffff8bd8c09c   156  bl #+0x4 (addr 0xffff8bd8c0a0)
0xffff8bd8c0a0   160  movz x17, #0xa00000000
0xffff8bd8c0a4   164  sub csp, jssp, #0x10 (16)
0xffff8bd8c0a8   168  stp x17, cp, [jssp, #-16]!
0xffff8bd8c0ac   172  add fp, jssp, #0x10 (16)
0xffff8bd8c0b0   176  ldr x17, pc+24 (addr 0x0000ffff8bd8c0c8)    ;; lazy deoptimization bailout 0
0xffff8bd8c0b4   180  add x17, x17, x16
0xffff8bd8c0b8   184  br x17
0xffff8bd8c0bc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd8c0c0   192  d63f03e0       constant
0xffff8bd8c0c4   196  d503201f       constant
0xffff8bd8c0c8   200  8bb06000       constant
0xffff8bd8c0cc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd8c030  code target (STUB)  (0xffff8bd170c0)
0xffff8bd8c068  code target (STUB)  (0xffff8bd38080)
0xffff8bd8c078  constant pool (size 24)
0xffff8bd8c0b0  runtime entry
0xffff8bd8c0bc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = loaded
compiler = unknown
Instructions (size = 152)
0xffff8bd8c140     0  sub csp, jssp, #0x8 (8)
0xffff8bd8c144     4  str x3, [jssp, #-8]!
0xffff8bd8c148     8  sub csp, jssp, #0x8 (8)
0xffff8bd8c14c    12  str x4, [jssp, #-8]!
0xffff8bd8c150    16  ldr x3, pc+88 (addr 0x0000ffff8bd8c1a8)    ;; object: 0x26cc7ba9 Cell for 0
0xffff8bd8c154    20  ldur x3, [x3, #7]
0xffff8bd8c158    24  cmp x3, #0x0 (0)
0xffff8bd8c15c    28  b.ne #+0x30 (addr 0xffff8bd8c18c)
0xffff8bd8c160    32  tbz w0, #0, #+0x2c (addr 0xffff8bd8c18c)
0xffff8bd8c164    36  ldr x5, pc+76 (addr 0x0000ffff8bd8c1b0)    ;; object: 0x26cc2299 WeakCell for 0x5f51b3e1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd8c168    40  ldur x5, [x5, #7]
0xffff8bd8c16c    44  tbz w5, #0, #+0x20 (addr 0xffff8bd8c18c)
0xffff8bd8c170    48  ldursw x4, [x5, #15]
0xffff8bd8c174    52  tbnz w4, #23, #+0x18 (addr 0xffff8bd8c18c)
0xffff8bd8c178    56  ldr x4, [jssp], #8
0xffff8bd8c17c    60  ldr x3, [jssp], #8
0xffff8bd8c180    64  ldr x2, pc+56 (addr 0x0000ffff8bd8c1b8)    ;; object: 0x26cba9e1 <String[6]: loaded>
0xffff8bd8c184    68  ldr x16, pc+60 (addr 0x0000ffff8bd8c1c0)    ;; code: HANDLER, StoreTransitionStub, minor: 198662
0xffff8bd8c188    72  br x16
0xffff8bd8c18c    76  ldr x2, pc+60 (addr 0x0000ffff8bd8c1c8)    ;; object: 0x26cba9e1 <String[6]: loaded>
0xffff8bd8c190    80  ldr x4, [jssp], #8
0xffff8bd8c194    84  ldr x3, [jssp], #8
0xffff8bd8c198    88  ldr x16, pc+56 (addr 0x0000ffff8bd8c1d0)    ;; code: BUILTIN
0xffff8bd8c19c    92  br x16
0xffff8bd8c1a0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd8c1a4   100  d63f03e0       constant
0xffff8bd8c1a8   104  26cc7ba9       constant
0xffff8bd8c1ac   108  00000000       constant
0xffff8bd8c1b0   112  26cc2299       constant
0xffff8bd8c1b4   116  00000000       constant
0xffff8bd8c1b8   120  26cba9e1       constant
0xffff8bd8c1bc   124  00000000       constant
0xffff8bd8c1c0   128  8bd8c000       constant
0xffff8bd8c1c4   132  0000ffff       constant
0xffff8bd8c1c8   136  26cba9e1       constant
0xffff8bd8c1cc   140  00000000       constant
0xffff8bd8c1d0   144  8bd22420       constant
0xffff8bd8c1d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bd8c150  embedded object  (0x26cc7ba9 Cell for 0)
0xffff8bd8c164  embedded object  (0x26cc2299 WeakCell for 0x5f51b3e1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd8c180  embedded object  (0x26cba9e1 <String[6]: loaded>)
0xffff8bd8c184  code target (HANDLER)  (0xffff8bd8c000)
0xffff8bd8c18c  embedded object  (0x26cba9e1 <String[6]: loaded>)
0xffff8bd8c198  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd8c1a0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd8c240     0  tbz w0, #0, #+0x90 (addr 0xffff8bd8c2d0)
0xffff8bd8c244     4  mov x2, x0
0xffff8bd8c248     8  stur x2, [x1, #55]
0xffff8bd8c24c    12  add x3, x1, #0x37 (55)
0xffff8bd8c250    16  and x2, x2, #0xfffffffffff00000
0xffff8bd8c254    20  ldr x2, [x2, #8]
0xffff8bd8c258    24  tbz w2, #1, #+0x24 (addr 0xffff8bd8c27c)
0xffff8bd8c25c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd8c260    32  ldr x2, [x2, #8]
0xffff8bd8c264    36  tbz w2, #2, #+0x18 (addr 0xffff8bd8c27c)
0xffff8bd8c268    40  sub csp, jssp, #0x8 (8)
0xffff8bd8c26c    44  str lr, [jssp, #-8]!
0xffff8bd8c270    48  ldr x16, pc+80 (addr 0x0000ffff8bd8c2c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd8c274    52  blr x16
0xffff8bd8c278    56  ldr lr, [jssp], #8
0xffff8bd8c27c    60  stur x5, [x1, #-1]
0xffff8bd8c280    64  tbz w5, #0, #+0x34 (addr 0xffff8bd8c2b4)
0xffff8bd8c284    68  sub x2, x1, #0x1 (1)
0xffff8bd8c288    72  and x5, x5, #0xfffffffffff00000
0xffff8bd8c28c    76  ldr x5, [x5, #8]
0xffff8bd8c290    80  tbz w5, #1, #+0x24 (addr 0xffff8bd8c2b4)
0xffff8bd8c294    84  and x5, x1, #0xfffffffffff00000
0xffff8bd8c298    88  ldr x5, [x5, #8]
0xffff8bd8c29c    92  tbz w5, #2, #+0x18 (addr 0xffff8bd8c2b4)
0xffff8bd8c2a0    96  sub csp, jssp, #0x8 (8)
0xffff8bd8c2a4   100  str lr, [jssp, #-8]!
0xffff8bd8c2a8   104  ldr x16, pc+32 (addr 0x0000ffff8bd8c2c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd8c2ac   108  blr x16
0xffff8bd8c2b0   112  ldr lr, [jssp], #8
0xffff8bd8c2b4   116  ret
0xffff8bd8c2b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd8c2bc   124  d63f03e0       constant
0xffff8bd8c2c0   128  8bd170c0       constant
0xffff8bd8c2c4   132  0000ffff       constant
0xffff8bd8c2c8   136  8bd38080       constant
0xffff8bd8c2cc   140  0000ffff       constant
0xffff8bd8c2d0   144  movz x16, #0x0
0xffff8bd8c2d4   148  sub csp, jssp, #0x10 (16)
0xffff8bd8c2d8   152  stp fp, lr, [jssp, #-16]!
0xffff8bd8c2dc   156  bl #+0x4 (addr 0xffff8bd8c2e0)
0xffff8bd8c2e0   160  movz x17, #0xa00000000
0xffff8bd8c2e4   164  sub csp, jssp, #0x10 (16)
0xffff8bd8c2e8   168  stp x17, cp, [jssp, #-16]!
0xffff8bd8c2ec   172  add fp, jssp, #0x10 (16)
0xffff8bd8c2f0   176  ldr x17, pc+24 (addr 0x0000ffff8bd8c308)    ;; lazy deoptimization bailout 0
0xffff8bd8c2f4   180  add x17, x17, x16
0xffff8bd8c2f8   184  br x17
0xffff8bd8c2fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd8c300   192  d63f03e0       constant
0xffff8bd8c304   196  d503201f       constant
0xffff8bd8c308   200  8bb06000       constant
0xffff8bd8c30c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd8c270  code target (STUB)  (0xffff8bd170c0)
0xffff8bd8c2a8  code target (STUB)  (0xffff8bd38080)
0xffff8bd8c2b8  constant pool (size 24)
0xffff8bd8c2f0  runtime entry
0xffff8bd8c2fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bd8c240     0  tbz w0, #0, #+0x90 (addr 0xffff8bd8c2d0)
0xffff8bd8c244     4  mov x2, x0
0xffff8bd8c248     8  stur x2, [x1, #55]
0xffff8bd8c24c    12  add x3, x1, #0x37 (55)
0xffff8bd8c250    16  and x2, x2, #0xfffffffffff00000
0xffff8bd8c254    20  ldr x2, [x2, #8]
0xffff8bd8c258    24  tbz w2, #1, #+0x24 (addr 0xffff8bd8c27c)
0xffff8bd8c25c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd8c260    32  ldr x2, [x2, #8]
0xffff8bd8c264    36  tbz w2, #2, #+0x18 (addr 0xffff8bd8c27c)
0xffff8bd8c268    40  sub csp, jssp, #0x8 (8)
0xffff8bd8c26c    44  str lr, [jssp, #-8]!
0xffff8bd8c270    48  ldr x16, pc+80 (addr 0x0000ffff8bd8c2c0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd8c274    52  blr x16
0xffff8bd8c278    56  ldr lr, [jssp], #8
0xffff8bd8c27c    60  stur x5, [x1, #-1]
0xffff8bd8c280    64  tbz w5, #0, #+0x34 (addr 0xffff8bd8c2b4)
0xffff8bd8c284    68  sub x2, x1, #0x1 (1)
0xffff8bd8c288    72  and x5, x5, #0xfffffffffff00000
0xffff8bd8c28c    76  ldr x5, [x5, #8]
0xffff8bd8c290    80  tbz w5, #1, #+0x24 (addr 0xffff8bd8c2b4)
0xffff8bd8c294    84  and x5, x1, #0xfffffffffff00000
0xffff8bd8c298    88  ldr x5, [x5, #8]
0xffff8bd8c29c    92  tbz w5, #2, #+0x18 (addr 0xffff8bd8c2b4)
0xffff8bd8c2a0    96  sub csp, jssp, #0x8 (8)
0xffff8bd8c2a4   100  str lr, [jssp, #-8]!
0xffff8bd8c2a8   104  ldr x16, pc+32 (addr 0x0000ffff8bd8c2c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd8c2ac   108  blr x16
0xffff8bd8c2b0   112  ldr lr, [jssp], #8
0xffff8bd8c2b4   116  ret
0xffff8bd8c2b8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bd8c2bc   124  d63f03e0       constant
0xffff8bd8c2c0   128  8bd170c0       constant
0xffff8bd8c2c4   132  0000ffff       constant
0xffff8bd8c2c8   136  8bd38080       constant
0xffff8bd8c2cc   140  0000ffff       constant
0xffff8bd8c2d0   144  movz x16, #0x0
0xffff8bd8c2d4   148  sub csp, jssp, #0x10 (16)
0xffff8bd8c2d8   152  stp fp, lr, [jssp, #-16]!
0xffff8bd8c2dc   156  bl #+0x4 (addr 0xffff8bd8c2e0)
0xffff8bd8c2e0   160  movz x17, #0xa00000000
0xffff8bd8c2e4   164  sub csp, jssp, #0x10 (16)
0xffff8bd8c2e8   168  stp x17, cp, [jssp, #-16]!
0xffff8bd8c2ec   172  add fp, jssp, #0x10 (16)
0xffff8bd8c2f0   176  ldr x17, pc+24 (addr 0x0000ffff8bd8c308)    ;; lazy deoptimization bailout 0
0xffff8bd8c2f4   180  add x17, x17, x16
0xffff8bd8c2f8   184  br x17
0xffff8bd8c2fc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd8c300   192  d63f03e0       constant
0xffff8bd8c304   196  d503201f       constant
0xffff8bd8c308   200  8bb06000       constant
0xffff8bd8c30c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd8c270  code target (STUB)  (0xffff8bd170c0)
0xffff8bd8c2a8  code target (STUB)  (0xffff8bd38080)
0xffff8bd8c2b8  constant pool (size 24)
0xffff8bd8c2f0  runtime entry
0xffff8bd8c2fc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = loading
compiler = unknown
Instructions (size = 152)
0xffff8bd8c380     0  sub csp, jssp, #0x8 (8)
0xffff8bd8c384     4  str x3, [jssp, #-8]!
0xffff8bd8c388     8  sub csp, jssp, #0x8 (8)
0xffff8bd8c38c    12  str x4, [jssp, #-8]!
0xffff8bd8c390    16  ldr x3, pc+88 (addr 0x0000ffff8bd8c3e8)    ;; object: 0x26cc7ba9 Cell for 0
0xffff8bd8c394    20  ldur x3, [x3, #7]
0xffff8bd8c398    24  cmp x3, #0x0 (0)
0xffff8bd8c39c    28  b.ne #+0x30 (addr 0xffff8bd8c3cc)
0xffff8bd8c3a0    32  tbz w0, #0, #+0x2c (addr 0xffff8bd8c3cc)
0xffff8bd8c3a4    36  ldr x5, pc+76 (addr 0x0000ffff8bd8c3f0)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd8c3a8    40  ldur x5, [x5, #7]
0xffff8bd8c3ac    44  tbz w5, #0, #+0x20 (addr 0xffff8bd8c3cc)
0xffff8bd8c3b0    48  ldursw x4, [x5, #15]
0xffff8bd8c3b4    52  tbnz w4, #23, #+0x18 (addr 0xffff8bd8c3cc)
0xffff8bd8c3b8    56  ldr x4, [jssp], #8
0xffff8bd8c3bc    60  ldr x3, [jssp], #8
0xffff8bd8c3c0    64  ldr x2, pc+56 (addr 0x0000ffff8bd8c3f8)    ;; object: 0x26cbaa01 <String[7]: loading>
0xffff8bd8c3c4    68  ldr x16, pc+60 (addr 0x0000ffff8bd8c400)    ;; code: HANDLER, StoreTransitionStub, minor: 198663
0xffff8bd8c3c8    72  br x16
0xffff8bd8c3cc    76  ldr x2, pc+60 (addr 0x0000ffff8bd8c408)    ;; object: 0x26cbaa01 <String[7]: loading>
0xffff8bd8c3d0    80  ldr x4, [jssp], #8
0xffff8bd8c3d4    84  ldr x3, [jssp], #8
0xffff8bd8c3d8    88  ldr x16, pc+56 (addr 0x0000ffff8bd8c410)    ;; code: BUILTIN
0xffff8bd8c3dc    92  br x16
0xffff8bd8c3e0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd8c3e4   100  d63f03e0       constant
0xffff8bd8c3e8   104  26cc7ba9       constant
0xffff8bd8c3ec   108  00000000       constant
0xffff8bd8c3f0   112  26cc22b1       constant
0xffff8bd8c3f4   116  00000000       constant
0xffff8bd8c3f8   120  26cbaa01       constant
0xffff8bd8c3fc   124  00000000       constant
0xffff8bd8c400   128  8bd8c240       constant
0xffff8bd8c404   132  0000ffff       constant
0xffff8bd8c408   136  26cbaa01       constant
0xffff8bd8c40c   140  00000000       constant
0xffff8bd8c410   144  8bd22420       constant
0xffff8bd8c414   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bd8c390  embedded object  (0x26cc7ba9 Cell for 0)
0xffff8bd8c3a4  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd8c3c0  embedded object  (0x26cbaa01 <String[7]: loading>)
0xffff8bd8c3c4  code target (HANDLER)  (0xffff8bd8c240)
0xffff8bd8c3cc  embedded object  (0x26cbaa01 <String[7]: loading>)
0xffff8bd8c3d8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd8c3e0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = cache
compiler = unknown
Instructions (size = 120)
0xffff8bd8c480     0  sub csp, jssp, #0x8 (8)
0xffff8bd8c484     4  str x3, [jssp, #-8]!
0xffff8bd8c488     8  sub csp, jssp, #0x8 (8)
0xffff8bd8c48c    12  str x0, [jssp, #-8]!
0xffff8bd8c490    16  ldr x0, pc+72 (addr 0x0000ffff8bd8c4d8)    ;; object: 0x26cc7ba9 Cell for 0
0xffff8bd8c494    20  ldur x0, [x0, #7]
0xffff8bd8c498    24  cmp x0, #0x0 (0)
0xffff8bd8c49c    28  b.ne #+0x14 (addr 0xffff8bd8c4b0)
0xffff8bd8c4a0    32  ldr x3, pc+64 (addr 0x0000ffff8bd8c4e0)    ;; object: 0x26cc8009 WeakCell for 0x565a3531 <an Object with map 0x5f51b229>
0xffff8bd8c4a4    36  ldur x3, [x3, #7]
0xffff8bd8c4a8    40  tbz w3, #0, #+0x8 (addr 0xffff8bd8c4b0)
0xffff8bd8c4ac    44  b #+0x14 (addr 0xffff8bd8c4c0)
0xffff8bd8c4b0    48  ldr x0, [jssp], #8
0xffff8bd8c4b4    52  ldr x3, [jssp], #8
0xffff8bd8c4b8    56  ldr x16, pc+48 (addr 0x0000ffff8bd8c4e8)    ;; code: BUILTIN
0xffff8bd8c4bc    60  br x16
0xffff8bd8c4c0    64  add jssp, jssp, #0x10 (16)
0xffff8bd8c4c4    68  mov x1, x3
0xffff8bd8c4c8    72  ldr x16, pc+40 (addr 0x0000ffff8bd8c4f0)    ;; code: HANDLER, LoadConstantStub, minor: 2
0xffff8bd8c4cc    76  br x16
0xffff8bd8c4d0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bd8c4d4    84  d63f03e0       constant
0xffff8bd8c4d8    88  26cc7ba9       constant
0xffff8bd8c4dc    92  00000000       constant
0xffff8bd8c4e0    96  26cc8009       constant
0xffff8bd8c4e4   100  00000000       constant
0xffff8bd8c4e8   104  8bd222e0       constant
0xffff8bd8c4ec   108  0000ffff       constant
0xffff8bd8c4f0   112  8bd43380       constant
0xffff8bd8c4f4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd8c490  embedded object  (0x26cc7ba9 Cell for 0)
0xffff8bd8c4a0  embedded object  (0x26cc8009 WeakCell for 0x565a3531 <an Object with map 0x5f51b229>)
0xffff8bd8c4b8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd8c4c8  code target (HANDLER)  (0xffff8bd43380)
0xffff8bd8c4d0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = util
compiler = unknown
Instructions (size = 184)
0xffff8bd8c560     0  sub csp, jssp, #0x8 (8)
0xffff8bd8c564     4  str x3, [jssp, #-8]!
0xffff8bd8c568     8  sub csp, jssp, #0x8 (8)
0xffff8bd8c56c    12  str x4, [jssp, #-8]!
0xffff8bd8c570    16  ldr x3, pc+112 (addr 0x0000ffff8bd8c5e0)    ;; object: 0x26c63e59 Cell for 0
0xffff8bd8c574    20  ldur x3, [x3, #7]
0xffff8bd8c578    24  cmp x3, #0x0 (0)
0xffff8bd8c57c    28  b.ne #+0x44 (addr 0xffff8bd8c5c0)
0xffff8bd8c580    32  tbz w0, #0, #+0x40 (addr 0xffff8bd8c5c0)
0xffff8bd8c584    36  ldur x3, [x0, #-1]
0xffff8bd8c588    40  ldr x4, pc+96 (addr 0x0000ffff8bd8c5e8)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd8c58c    44  ldur x4, [x4, #7]
0xffff8bd8c590    48  cmp x3, x4
0xffff8bd8c594    52  b.ne #+0x2c (addr 0xffff8bd8c5c0)
0xffff8bd8c598    56  ldr x5, pc+88 (addr 0x0000ffff8bd8c5f0)    ;; object: 0x26cc8071 WeakCell for 0x5f51c1f9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd8c59c    60  ldur x5, [x5, #7]
0xffff8bd8c5a0    64  tbz w5, #0, #+0x20 (addr 0xffff8bd8c5c0)
0xffff8bd8c5a4    68  ldursw x4, [x5, #15]
0xffff8bd8c5a8    72  tbnz w4, #23, #+0x18 (addr 0xffff8bd8c5c0)
0xffff8bd8c5ac    76  ldr x4, [jssp], #8
0xffff8bd8c5b0    80  ldr x3, [jssp], #8
0xffff8bd8c5b4    84  ldr x2, pc+68 (addr 0x0000ffff8bd8c5f8)    ;; object: 0x26cba081 <String[4]: util>
0xffff8bd8c5b8    88  ldr x16, pc+72 (addr 0x0000ffff8bd8c600)    ;; code: HANDLER, StoreTransitionStub, minor: 198660
0xffff8bd8c5bc    92  br x16
0xffff8bd8c5c0    96  ldr x2, pc+72 (addr 0x0000ffff8bd8c608)    ;; object: 0x26cba081 <String[4]: util>
0xffff8bd8c5c4   100  ldr x4, [jssp], #8
0xffff8bd8c5c8   104  ldr x3, [jssp], #8
0xffff8bd8c5cc   108  ldr x16, pc+68 (addr 0x0000ffff8bd8c610)    ;; code: BUILTIN
0xffff8bd8c5d0   112  br x16
0xffff8bd8c5d4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd8c5d8   120  d63f03e0       constant
0xffff8bd8c5dc   124  d503201f       constant
0xffff8bd8c5e0   128  26c63e59       constant
0xffff8bd8c5e4   132  00000000       constant
0xffff8bd8c5e8   136  26cc22b1       constant
0xffff8bd8c5ec   140  00000000       constant
0xffff8bd8c5f0   144  26cc8071       constant
0xffff8bd8c5f4   148  00000000       constant
0xffff8bd8c5f8   152  26cba081       constant
0xffff8bd8c5fc   156  00000000       constant
0xffff8bd8c600   160  8bd8bb80       constant
0xffff8bd8c604   164  0000ffff       constant
0xffff8bd8c608   168  26cba081       constant
0xffff8bd8c60c   172  00000000       constant
0xffff8bd8c610   176  8bd22420       constant
0xffff8bd8c614   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bd8c570  embedded object  (0x26c63e59 Cell for 0)
0xffff8bd8c588  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd8c598  embedded object  (0x26cc8071 WeakCell for 0x5f51c1f9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd8c5b4  embedded object  (0x26cba081 <String[4]: util>)
0xffff8bd8c5b8  code target (HANDLER)  (0xffff8bd8bb80)
0xffff8bd8c5c0  embedded object  (0x26cba081 <String[4]: util>)
0xffff8bd8c5cc  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd8c5d4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = compile
compiler = unknown
Instructions (size = 120)
0xffff8bd8c680     0  sub csp, jssp, #0x8 (8)
0xffff8bd8c684     4  str x3, [jssp, #-8]!
0xffff8bd8c688     8  sub csp, jssp, #0x8 (8)
0xffff8bd8c68c    12  str x0, [jssp, #-8]!
0xffff8bd8c690    16  ldr x0, pc+72 (addr 0x0000ffff8bd8c6d8)    ;; object: 0x26cc7ba9 Cell for 0
0xffff8bd8c694    20  ldur x0, [x0, #7]
0xffff8bd8c698    24  cmp x0, #0x0 (0)
0xffff8bd8c69c    28  b.ne #+0x14 (addr 0xffff8bd8c6b0)
0xffff8bd8c6a0    32  ldr x3, pc+64 (addr 0x0000ffff8bd8c6e0)    ;; object: 0x26cc80a9 WeakCell for 0x565a3531 <an Object with map 0x5f51b229>
0xffff8bd8c6a4    36  ldur x3, [x3, #7]
0xffff8bd8c6a8    40  tbz w3, #0, #+0x8 (addr 0xffff8bd8c6b0)
0xffff8bd8c6ac    44  b #+0x14 (addr 0xffff8bd8c6c0)
0xffff8bd8c6b0    48  ldr x0, [jssp], #8
0xffff8bd8c6b4    52  ldr x3, [jssp], #8
0xffff8bd8c6b8    56  ldr x16, pc+48 (addr 0x0000ffff8bd8c6e8)    ;; code: BUILTIN
0xffff8bd8c6bc    60  br x16
0xffff8bd8c6c0    64  add jssp, jssp, #0x10 (16)
0xffff8bd8c6c4    68  mov x1, x3
0xffff8bd8c6c8    72  ldr x16, pc+40 (addr 0x0000ffff8bd8c6f0)    ;; code: HANDLER, LoadConstantStub, minor: 1
0xffff8bd8c6cc    76  br x16
0xffff8bd8c6d0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bd8c6d4    84  d63f03e0       constant
0xffff8bd8c6d8    88  26cc7ba9       constant
0xffff8bd8c6dc    92  00000000       constant
0xffff8bd8c6e0    96  26cc80a9       constant
0xffff8bd8c6e4   100  00000000       constant
0xffff8bd8c6e8   104  8bd222e0       constant
0xffff8bd8c6ec   108  0000ffff       constant
0xffff8bd8c6f0   112  8bd43300       constant
0xffff8bd8c6f4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd8c690  embedded object  (0x26cc7ba9 Cell for 0)
0xffff8bd8c6a0  embedded object  (0x26cc80a9 WeakCell for 0x565a3531 <an Object with map 0x5f51b229>)
0xffff8bd8c6b8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd8c6c8  code target (HANDLER)  (0xffff8bd43300)
0xffff8bd8c6d0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd8c760     0  ldur x0, [x1, #-1]
0xffff8bd8c764     4  ldur x0, [x0, #47]
0xffff8bd8c768     8  movz x16, #0x11f
0xffff8bd8c76c    12  ldr x0, [x0, x16]
0xffff8bd8c770    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd8c760     0  ldur x0, [x1, #-1]
0xffff8bd8c764     4  ldur x0, [x0, #47]
0xffff8bd8c768     8  movz x16, #0x11f
0xffff8bd8c76c    12  ldr x0, [x0, x16]
0xffff8bd8c770    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd8c7e0     0  ldur x0, [x1, #-1]
0xffff8bd8c7e4     4  ldur x0, [x0, #47]
0xffff8bd8c7e8     8  movz x16, #0x137
0xffff8bd8c7ec    12  ldr x0, [x0, x16]
0xffff8bd8c7f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bd8c7e0     0  ldur x0, [x1, #-1]
0xffff8bd8c7e4     4  ldur x0, [x0, #47]
0xffff8bd8c7e8     8  movz x16, #0x137
0xffff8bd8c7ec    12  ldr x0, [x0, x16]
0xffff8bd8c7f0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff8bd8c860     0  tbz w0, #0, #+0x50 (addr 0xffff8bd8c8b0)
0xffff8bd8c864     4  mov x2, x0
0xffff8bd8c868     8  stur x2, [x1, #55]
0xffff8bd8c86c    12  add x3, x1, #0x37 (55)
0xffff8bd8c870    16  and x2, x2, #0xfffffffffff00000
0xffff8bd8c874    20  ldr x2, [x2, #8]
0xffff8bd8c878    24  tbz w2, #1, #+0x24 (addr 0xffff8bd8c89c)
0xffff8bd8c87c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd8c880    32  ldr x2, [x2, #8]
0xffff8bd8c884    36  tbz w2, #2, #+0x18 (addr 0xffff8bd8c89c)
0xffff8bd8c888    40  sub csp, jssp, #0x8 (8)
0xffff8bd8c88c    44  str lr, [jssp, #-8]!
0xffff8bd8c890    48  ldr x16, pc+24 (addr 0x0000ffff8bd8c8a8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd8c894    52  blr x16
0xffff8bd8c898    56  ldr lr, [jssp], #8
0xffff8bd8c89c    60  ret
0xffff8bd8c8a0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd8c8a4    68  d63f03e0       constant
0xffff8bd8c8a8    72  8bd170c0       constant
0xffff8bd8c8ac    76  0000ffff       constant
0xffff8bd8c8b0    80  movz x16, #0x0
0xffff8bd8c8b4    84  sub csp, jssp, #0x10 (16)
0xffff8bd8c8b8    88  stp fp, lr, [jssp, #-16]!
0xffff8bd8c8bc    92  bl #+0x4 (addr 0xffff8bd8c8c0)
0xffff8bd8c8c0    96  movz x17, #0xa00000000
0xffff8bd8c8c4   100  sub csp, jssp, #0x10 (16)
0xffff8bd8c8c8   104  stp x17, cp, [jssp, #-16]!
0xffff8bd8c8cc   108  add fp, jssp, #0x10 (16)
0xffff8bd8c8d0   112  ldr x17, pc+24 (addr 0x0000ffff8bd8c8e8)    ;; lazy deoptimization bailout 0
0xffff8bd8c8d4   116  add x17, x17, x16
0xffff8bd8c8d8   120  br x17
0xffff8bd8c8dc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd8c8e0   128  d63f03e0       constant
0xffff8bd8c8e4   132  d503201f       constant
0xffff8bd8c8e8   136  8bb06000       constant
0xffff8bd8c8ec   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bd8c890  code target (STUB)  (0xffff8bd170c0)
0xffff8bd8c8a0  constant pool (size 16)
0xffff8bd8c8d0  runtime entry
0xffff8bd8c8dc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff8bd8c860     0  tbz w0, #0, #+0x50 (addr 0xffff8bd8c8b0)
0xffff8bd8c864     4  mov x2, x0
0xffff8bd8c868     8  stur x2, [x1, #55]
0xffff8bd8c86c    12  add x3, x1, #0x37 (55)
0xffff8bd8c870    16  and x2, x2, #0xfffffffffff00000
0xffff8bd8c874    20  ldr x2, [x2, #8]
0xffff8bd8c878    24  tbz w2, #1, #+0x24 (addr 0xffff8bd8c89c)
0xffff8bd8c87c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd8c880    32  ldr x2, [x2, #8]
0xffff8bd8c884    36  tbz w2, #2, #+0x18 (addr 0xffff8bd8c89c)
0xffff8bd8c888    40  sub csp, jssp, #0x8 (8)
0xffff8bd8c88c    44  str lr, [jssp, #-8]!
0xffff8bd8c890    48  ldr x16, pc+24 (addr 0x0000ffff8bd8c8a8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd8c894    52  blr x16
0xffff8bd8c898    56  ldr lr, [jssp], #8
0xffff8bd8c89c    60  ret
0xffff8bd8c8a0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd8c8a4    68  d63f03e0       constant
0xffff8bd8c8a8    72  8bd170c0       constant
0xffff8bd8c8ac    76  0000ffff       constant
0xffff8bd8c8b0    80  movz x16, #0x0
0xffff8bd8c8b4    84  sub csp, jssp, #0x10 (16)
0xffff8bd8c8b8    88  stp fp, lr, [jssp, #-16]!
0xffff8bd8c8bc    92  bl #+0x4 (addr 0xffff8bd8c8c0)
0xffff8bd8c8c0    96  movz x17, #0xa00000000
0xffff8bd8c8c4   100  sub csp, jssp, #0x10 (16)
0xffff8bd8c8c8   104  stp x17, cp, [jssp, #-16]!
0xffff8bd8c8cc   108  add fp, jssp, #0x10 (16)
0xffff8bd8c8d0   112  ldr x17, pc+24 (addr 0x0000ffff8bd8c8e8)    ;; lazy deoptimization bailout 0
0xffff8bd8c8d4   116  add x17, x17, x16
0xffff8bd8c8d8   120  br x17
0xffff8bd8c8dc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd8c8e0   128  d63f03e0       constant
0xffff8bd8c8e4   132  d503201f       constant
0xffff8bd8c8e8   136  8bb06000       constant
0xffff8bd8c8ec   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bd8c890  code target (STUB)  (0xffff8bd170c0)
0xffff8bd8c8a0  constant pool (size 16)
0xffff8bd8c8d0  runtime entry
0xffff8bd8c8dc  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff8bd8c960     0  tbz w0, #0, #+0x50 (addr 0xffff8bd8c9b0)
0xffff8bd8c964     4  mov x2, x0
0xffff8bd8c968     8  stur x2, [x1, #23]
0xffff8bd8c96c    12  add x3, x1, #0x17 (23)
0xffff8bd8c970    16  and x2, x2, #0xfffffffffff00000
0xffff8bd8c974    20  ldr x2, [x2, #8]
0xffff8bd8c978    24  tbz w2, #1, #+0x24 (addr 0xffff8bd8c99c)
0xffff8bd8c97c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd8c980    32  ldr x2, [x2, #8]
0xffff8bd8c984    36  tbz w2, #2, #+0x18 (addr 0xffff8bd8c99c)
0xffff8bd8c988    40  sub csp, jssp, #0x8 (8)
0xffff8bd8c98c    44  str lr, [jssp, #-8]!
0xffff8bd8c990    48  ldr x16, pc+24 (addr 0x0000ffff8bd8c9a8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd8c994    52  blr x16
0xffff8bd8c998    56  ldr lr, [jssp], #8
0xffff8bd8c99c    60  ret
0xffff8bd8c9a0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd8c9a4    68  d63f03e0       constant
0xffff8bd8c9a8    72  8bd170c0       constant
0xffff8bd8c9ac    76  0000ffff       constant
0xffff8bd8c9b0    80  movz x16, #0x0
0xffff8bd8c9b4    84  sub csp, jssp, #0x10 (16)
0xffff8bd8c9b8    88  stp fp, lr, [jssp, #-16]!
0xffff8bd8c9bc    92  bl #+0x4 (addr 0xffff8bd8c9c0)
0xffff8bd8c9c0    96  movz x17, #0xa00000000
0xffff8bd8c9c4   100  sub csp, jssp, #0x10 (16)
0xffff8bd8c9c8   104  stp x17, cp, [jssp, #-16]!
0xffff8bd8c9cc   108  add fp, jssp, #0x10 (16)
0xffff8bd8c9d0   112  ldr x17, pc+24 (addr 0x0000ffff8bd8c9e8)    ;; lazy deoptimization bailout 0
0xffff8bd8c9d4   116  add x17, x17, x16
0xffff8bd8c9d8   120  br x17
0xffff8bd8c9dc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd8c9e0   128  d63f03e0       constant
0xffff8bd8c9e4   132  d503201f       constant
0xffff8bd8c9e8   136  8bb06000       constant
0xffff8bd8c9ec   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bd8c990  code target (STUB)  (0xffff8bd170c0)
0xffff8bd8c9a0  constant pool (size 16)
0xffff8bd8c9d0  runtime entry
0xffff8bd8c9dc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff8bd8c960     0  tbz w0, #0, #+0x50 (addr 0xffff8bd8c9b0)
0xffff8bd8c964     4  mov x2, x0
0xffff8bd8c968     8  stur x2, [x1, #23]
0xffff8bd8c96c    12  add x3, x1, #0x17 (23)
0xffff8bd8c970    16  and x2, x2, #0xfffffffffff00000
0xffff8bd8c974    20  ldr x2, [x2, #8]
0xffff8bd8c978    24  tbz w2, #1, #+0x24 (addr 0xffff8bd8c99c)
0xffff8bd8c97c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd8c980    32  ldr x2, [x2, #8]
0xffff8bd8c984    36  tbz w2, #2, #+0x18 (addr 0xffff8bd8c99c)
0xffff8bd8c988    40  sub csp, jssp, #0x8 (8)
0xffff8bd8c98c    44  str lr, [jssp, #-8]!
0xffff8bd8c990    48  ldr x16, pc+24 (addr 0x0000ffff8bd8c9a8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd8c994    52  blr x16
0xffff8bd8c998    56  ldr lr, [jssp], #8
0xffff8bd8c99c    60  ret
0xffff8bd8c9a0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd8c9a4    68  d63f03e0       constant
0xffff8bd8c9a8    72  8bd170c0       constant
0xffff8bd8c9ac    76  0000ffff       constant
0xffff8bd8c9b0    80  movz x16, #0x0
0xffff8bd8c9b4    84  sub csp, jssp, #0x10 (16)
0xffff8bd8c9b8    88  stp fp, lr, [jssp, #-16]!
0xffff8bd8c9bc    92  bl #+0x4 (addr 0xffff8bd8c9c0)
0xffff8bd8c9c0    96  movz x17, #0xa00000000
0xffff8bd8c9c4   100  sub csp, jssp, #0x10 (16)
0xffff8bd8c9c8   104  stp x17, cp, [jssp, #-16]!
0xffff8bd8c9cc   108  add fp, jssp, #0x10 (16)
0xffff8bd8c9d0   112  ldr x17, pc+24 (addr 0x0000ffff8bd8c9e8)    ;; lazy deoptimization bailout 0
0xffff8bd8c9d4   116  add x17, x17, x16
0xffff8bd8c9d8   120  br x17
0xffff8bd8c9dc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd8c9e0   128  d63f03e0       constant
0xffff8bd8c9e4   132  d503201f       constant
0xffff8bd8c9e8   136  8bb06000       constant
0xffff8bd8c9ec   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bd8c990  code target (STUB)  (0xffff8bd170c0)
0xffff8bd8c9a0  constant pool (size 16)
0xffff8bd8c9d0  runtime entry
0xffff8bd8c9dc  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 941)
0xffff8bd8ca60     0  movz x2, #0xe2c0
0xffff8bd8ca64     4  movk x2, #0x2cb8, lsl #16
0xffff8bd8ca68     8  ldp x3, x0, [x2]
0xffff8bd8ca6c    12  adds x16, x3, #0x170 (368)
0xffff8bd8ca70    16  ccmp x16, x0, #nzCv, lo
0xffff8bd8ca74    20  b.hi #+0x1b0 (addr 0xffff8bd8cc24)
0xffff8bd8ca78    24  str x16, [x2]
0xffff8bd8ca7c    28  orr x3, x3, #0x1
0xffff8bd8ca80    32  ldr x0, pc+528 (addr 0x0000ffff8bd8cc90)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd8ca84    36  stur x0, [x3, #-1]
0xffff8bd8ca88    40  movz x0, #0x2c00000000
0xffff8bd8ca8c    44  stur x0, [x3, #7]
0xffff8bd8ca90    48  stur x1, [x3, #15]
0xffff8bd8ca94    52  stur cp, [x3, #23]
0xffff8bd8ca98    56  ldr x0, pc+512 (addr 0x0000ffff8bd8cc98)    ;; object: 0x26c04519 <the hole>
0xffff8bd8ca9c    60  stur x0, [x3, #31]
0xffff8bd8caa0    64  ldur x0, [cp, #39]
0xffff8bd8caa4    68  stur x0, [x3, #39]
0xffff8bd8caa8    72  ldr x0, pc+504 (addr 0x0000ffff8bd8cca0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8caac    76  stur x0, [x3, #47]
0xffff8bd8cab0    80  ldr x0, pc+504 (addr 0x0000ffff8bd8cca8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cab4    84  stur x0, [x3, #55]
0xffff8bd8cab8    88  ldr x0, pc+504 (addr 0x0000ffff8bd8ccb0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cabc    92  stur x0, [x3, #63]
0xffff8bd8cac0    96  ldr x0, pc+504 (addr 0x0000ffff8bd8ccb8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cac4   100  stur x0, [x3, #71]
0xffff8bd8cac8   104  ldr x0, pc+504 (addr 0x0000ffff8bd8ccc0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cacc   108  stur x0, [x3, #79]
0xffff8bd8cad0   112  ldr x0, pc+504 (addr 0x0000ffff8bd8ccc8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cad4   116  stur x0, [x3, #87]
0xffff8bd8cad8   120  ldr x0, pc+504 (addr 0x0000ffff8bd8ccd0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cadc   124  stur x0, [x3, #95]
0xffff8bd8cae0   128  ldr x0, pc+504 (addr 0x0000ffff8bd8ccd8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cae4   132  stur x0, [x3, #103]
0xffff8bd8cae8   136  ldr x0, pc+504 (addr 0x0000ffff8bd8cce0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8caec   140  stur x0, [x3, #111]
0xffff8bd8caf0   144  ldr x0, pc+504 (addr 0x0000ffff8bd8cce8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8caf4   148  stur x0, [x3, #119]
0xffff8bd8caf8   152  ldr x0, pc+504 (addr 0x0000ffff8bd8ccf0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cafc   156  stur x0, [x3, #127]
0xffff8bd8cb00   160  ldr x0, pc+504 (addr 0x0000ffff8bd8ccf8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb04   164  stur x0, [x3, #135]
0xffff8bd8cb08   168  ldr x0, pc+504 (addr 0x0000ffff8bd8cd00)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb0c   172  stur x0, [x3, #143]
0xffff8bd8cb10   176  ldr x0, pc+504 (addr 0x0000ffff8bd8cd08)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb14   180  stur x0, [x3, #151]
0xffff8bd8cb18   184  ldr x0, pc+504 (addr 0x0000ffff8bd8cd10)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb1c   188  stur x0, [x3, #159]
0xffff8bd8cb20   192  ldr x0, pc+504 (addr 0x0000ffff8bd8cd18)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb24   196  stur x0, [x3, #167]
0xffff8bd8cb28   200  ldr x0, pc+504 (addr 0x0000ffff8bd8cd20)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb2c   204  stur x0, [x3, #175]
0xffff8bd8cb30   208  ldr x0, pc+504 (addr 0x0000ffff8bd8cd28)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb34   212  stur x0, [x3, #183]
0xffff8bd8cb38   216  ldr x0, pc+504 (addr 0x0000ffff8bd8cd30)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb3c   220  stur x0, [x3, #191]
0xffff8bd8cb40   224  ldr x0, pc+504 (addr 0x0000ffff8bd8cd38)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb44   228  stur x0, [x3, #199]
0xffff8bd8cb48   232  ldr x0, pc+504 (addr 0x0000ffff8bd8cd40)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb4c   236  stur x0, [x3, #207]
0xffff8bd8cb50   240  ldr x0, pc+504 (addr 0x0000ffff8bd8cd48)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb54   244  stur x0, [x3, #215]
0xffff8bd8cb58   248  ldr x0, pc+504 (addr 0x0000ffff8bd8cd50)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb5c   252  stur x0, [x3, #223]
0xffff8bd8cb60   256  ldr x0, pc+504 (addr 0x0000ffff8bd8cd58)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb64   260  stur x0, [x3, #231]
0xffff8bd8cb68   264  ldr x0, pc+504 (addr 0x0000ffff8bd8cd60)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb6c   268  stur x0, [x3, #239]
0xffff8bd8cb70   272  ldr x0, pc+504 (addr 0x0000ffff8bd8cd68)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb74   276  stur x0, [x3, #247]
0xffff8bd8cb78   280  ldr x0, pc+504 (addr 0x0000ffff8bd8cd70)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb7c   284  stur x0, [x3, #255]
0xffff8bd8cb80   288  ldr x0, pc+504 (addr 0x0000ffff8bd8cd78)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb84   292  movz x16, #0x107
0xffff8bd8cb88   296  str x0, [x3, x16]
0xffff8bd8cb8c   300  ldr x0, pc+500 (addr 0x0000ffff8bd8cd80)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb90   304  movz x16, #0x10f
0xffff8bd8cb94   308  str x0, [x3, x16]
0xffff8bd8cb98   312  ldr x0, pc+496 (addr 0x0000ffff8bd8cd88)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb9c   316  movz x16, #0x117
0xffff8bd8cba0   320  str x0, [x3, x16]
0xffff8bd8cba4   324  ldr x0, pc+492 (addr 0x0000ffff8bd8cd90)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cba8   328  movz x16, #0x11f
0xffff8bd8cbac   332  str x0, [x3, x16]
0xffff8bd8cbb0   336  ldr x0, pc+488 (addr 0x0000ffff8bd8cd98)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cbb4   340  movz x16, #0x127
0xffff8bd8cbb8   344  str x0, [x3, x16]
0xffff8bd8cbbc   348  ldr x0, pc+484 (addr 0x0000ffff8bd8cda0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cbc0   352  movz x16, #0x12f
0xffff8bd8cbc4   356  str x0, [x3, x16]
0xffff8bd8cbc8   360  ldr x0, pc+480 (addr 0x0000ffff8bd8cda8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cbcc   364  movz x16, #0x137
0xffff8bd8cbd0   368  str x0, [x3, x16]
0xffff8bd8cbd4   372  ldr x0, pc+476 (addr 0x0000ffff8bd8cdb0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cbd8   376  movz x16, #0x13f
0xffff8bd8cbdc   380  str x0, [x3, x16]
0xffff8bd8cbe0   384  ldr x0, pc+472 (addr 0x0000ffff8bd8cdb8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cbe4   388  movz x16, #0x147
0xffff8bd8cbe8   392  str x0, [x3, x16]
0xffff8bd8cbec   396  ldr x0, pc+468 (addr 0x0000ffff8bd8cdc0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cbf0   400  movz x16, #0x14f
0xffff8bd8cbf4   404  str x0, [x3, x16]
0xffff8bd8cbf8   408  ldr x0, pc+464 (addr 0x0000ffff8bd8cdc8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cbfc   412  movz x16, #0x157
0xffff8bd8cc00   416  str x0, [x3, x16]
0xffff8bd8cc04   420  ldr x0, pc+460 (addr 0x0000ffff8bd8cdd0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cc08   424  movz x16, #0x15f
0xffff8bd8cc0c   428  str x0, [x3, x16]
0xffff8bd8cc10   432  ldr x0, pc+456 (addr 0x0000ffff8bd8cdd8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cc14   436  movz x16, #0x167
0xffff8bd8cc18   440  str x0, [x3, x16]
0xffff8bd8cc1c   444  mov x0, x3
0xffff8bd8cc20   448  ret
0xffff8bd8cc24   452  sub csp, jssp, #0x10 (16)
0xffff8bd8cc28   456  stp fp, lr, [jssp, #-16]!
0xffff8bd8cc2c   460  movz fp, #0xa00000000
0xffff8bd8cc30   464  sub csp, jssp, #0x8 (8)
0xffff8bd8cc34   468  str fp, [jssp, #-8]!
0xffff8bd8cc38   472  add fp, jssp, #0x8 (8)
0xffff8bd8cc3c   476  movz x3, #0x0
0xffff8bd8cc40   480  mov x16, lr
0xffff8bd8cc44   484  ldr x17, pc+412 (addr 0x0000ffff8bd8cde0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd8cc48   488  blr x17
0xffff8bd8cc4c   492  movz x0, #0x17000000000
0xffff8bd8cc50   496  movz x10, #0x0
0xffff8bd8cc54   500  sub csp, jssp, #0x10 (16)
0xffff8bd8cc58   504  stp x10, x0, [jssp, #-16]!
0xffff8bd8cc5c   508  movz x0, #0x2
0xffff8bd8cc60   512  movz x1, #0x5b88
0xffff8bd8cc64   516  movk x1, #0xe2, lsl #16
0xffff8bd8cc68   520  ldr x16, pc+384 (addr 0x0000ffff8bd8cde8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd8cc6c   524  blr x16
0xffff8bd8cc70   528  str x0, [jssp, #24]
0xffff8bd8cc74   532  ldr x16, pc+380 (addr 0x0000ffff8bd8cdf0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd8cc78   536  blr x16
0xffff8bd8cc7c   540  ldr lr, [jssp, #16]
0xffff8bd8cc80   544  ldp xzr, fp, [jssp], #24
0xffff8bd8cc84   548  b #-0x204 (addr 0xffff8bd8ca80)
0xffff8bd8cc88   552  58000b7f       constant pool begin (num_const = 91)    ;; constant pool
0xffff8bd8cc8c   556  d63f03e0       constant
0xffff8bd8cc90   560  5f506149       constant
0xffff8bd8cc94   564  00000000       constant
0xffff8bd8cc98   568  26c04519       constant
0xffff8bd8cc9c   572  00000000       constant
0xffff8bd8cca0   576  26c04241       constant
0xffff8bd8cca4   580  00000000       constant
0xffff8bd8cca8   584  26c04241       constant
0xffff8bd8ccac   588  00000000       constant
0xffff8bd8ccb0   592  26c04241       constant
0xffff8bd8ccb4   596  00000000       constant
0xffff8bd8ccb8   600  26c04241       constant
0xffff8bd8ccbc   604  00000000       constant
0xffff8bd8ccc0   608  26c04241       constant
0xffff8bd8ccc4   612  00000000       constant
0xffff8bd8ccc8   616  26c04241       constant
0xffff8bd8cccc   620  00000000       constant
0xffff8bd8ccd0   624  26c04241       constant
0xffff8bd8ccd4   628  00000000       constant
0xffff8bd8ccd8   632  26c04241       constant
0xffff8bd8ccdc   636  00000000       constant
0xffff8bd8cce0   640  26c04241       constant
0xffff8bd8cce4   644  00000000       constant
0xffff8bd8cce8   648  26c04241       constant
0xffff8bd8ccec   652  00000000       constant
0xffff8bd8ccf0   656  26c04241       constant
0xffff8bd8ccf4   660  00000000       constant
0xffff8bd8ccf8   664  26c04241       constant
0xffff8bd8ccfc   668  00000000       constant
0xffff8bd8cd00   672  26c04241       constant
0xffff8bd8cd04   676  00000000       constant
0xffff8bd8cd08   680  26c04241       constant
0xffff8bd8cd0c   684  00000000       constant
0xffff8bd8cd10   688  26c04241       constant
0xffff8bd8cd14   692  00000000       constant
0xffff8bd8cd18   696  26c04241       constant
0xffff8bd8cd1c   700  00000000       constant
0xffff8bd8cd20   704  26c04241       constant
0xffff8bd8cd24   708  00000000       constant
0xffff8bd8cd28   712  26c04241       constant
0xffff8bd8cd2c   716  00000000       constant
0xffff8bd8cd30   720  26c04241       constant
0xffff8bd8cd34   724  00000000       constant
0xffff8bd8cd38   728  26c04241       constant
0xffff8bd8cd3c   732  00000000       constant
0xffff8bd8cd40   736  26c04241       constant
0xffff8bd8cd44   740  00000000       constant
0xffff8bd8cd48   744  26c04241       constant
0xffff8bd8cd4c   748  00000000       constant
0xffff8bd8cd50   752  26c04241       constant
0xffff8bd8cd54   756  00000000       constant
0xffff8bd8cd58   760  26c04241       constant
0xffff8bd8cd5c   764  00000000       constant
0xffff8bd8cd60   768  26c04241       constant
0xffff8bd8cd64   772  00000000       constant
0xffff8bd8cd68   776  26c04241       constant
0xffff8bd8cd6c   780  00000000       constant
0xffff8bd8cd70   784  26c04241       constant
0xffff8bd8cd74   788  00000000       constant
0xffff8bd8cd78   792  26c04241       constant
0xffff8bd8cd7c   796  00000000       constant
0xffff8bd8cd80   800  26c04241       constant
0xffff8bd8cd84   804  00000000       constant
0xffff8bd8cd88   808  26c04241       constant
0xffff8bd8cd8c   812  00000000       constant
0xffff8bd8cd90   816  26c04241       constant
0xffff8bd8cd94   820  00000000       constant
0xffff8bd8cd98   824  26c04241       constant
0xffff8bd8cd9c   828  00000000       constant
0xffff8bd8cda0   832  26c04241       constant
0xffff8bd8cda4   836  00000000       constant
0xffff8bd8cda8   840  26c04241       constant
0xffff8bd8cdac   844  00000000       constant
0xffff8bd8cdb0   848  26c04241       constant
0xffff8bd8cdb4   852  00000000       constant
0xffff8bd8cdb8   856  26c04241       constant
0xffff8bd8cdbc   860  00000000       constant
0xffff8bd8cdc0   864  26c04241       constant
0xffff8bd8cdc4   868  00000000       constant
0xffff8bd8cdc8   872  26c04241       constant
0xffff8bd8cdcc   876  00000000       constant
0xffff8bd8cdd0   880  26c04241       constant
0xffff8bd8cdd4   884  00000000       constant
0xffff8bd8cdd8   888  26c04241       constant
0xffff8bd8cddc   892  00000000       constant
0xffff8bd8cde0   896  8bd06820       constant
0xffff8bd8cde4   900  0000ffff       constant
0xffff8bd8cde8   904  8bd06260       constant
0xffff8bd8cdec   908  0000ffff       constant
0xffff8bd8cdf0   912  8bd068e0       constant
0xffff8bd8cdf4   916  0000ffff       constant


Safepoints (size = 21)
0xffff8bd8cc70   528  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 51)
0xffff8bd8ca80  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd8ca98  embedded object  (0x26c04519 <the hole>)
0xffff8bd8caa8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cab0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cab8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cac0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cac8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cad0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cad8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cae0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cae8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8caf0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8caf8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb00  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb08  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb10  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb18  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb20  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb28  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb30  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb38  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb40  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb48  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb50  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb58  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb60  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb68  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb70  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb78  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb80  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb8c  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb98  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cba4  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cbb0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cbbc  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cbc8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cbd4  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cbe0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cbec  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cbf8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cc04  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cc10  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cc44  code target (STUB)  (0xffff8bd06820)
0xffff8bd8cc68  code target (STUB)  (0xffff8bd06260)
0xffff8bd8cc74  code target (STUB)  (0xffff8bd068e0)
0xffff8bd8cc88  constant pool (size 368)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 941)
0xffff8bd8ca60     0  movz x2, #0xe2c0
0xffff8bd8ca64     4  movk x2, #0x2cb8, lsl #16
0xffff8bd8ca68     8  ldp x3, x0, [x2]
0xffff8bd8ca6c    12  adds x16, x3, #0x170 (368)
0xffff8bd8ca70    16  ccmp x16, x0, #nzCv, lo
0xffff8bd8ca74    20  b.hi #+0x1b0 (addr 0xffff8bd8cc24)
0xffff8bd8ca78    24  str x16, [x2]
0xffff8bd8ca7c    28  orr x3, x3, #0x1
0xffff8bd8ca80    32  ldr x0, pc+528 (addr 0x0000ffff8bd8cc90)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd8ca84    36  stur x0, [x3, #-1]
0xffff8bd8ca88    40  movz x0, #0x2c00000000
0xffff8bd8ca8c    44  stur x0, [x3, #7]
0xffff8bd8ca90    48  stur x1, [x3, #15]
0xffff8bd8ca94    52  stur cp, [x3, #23]
0xffff8bd8ca98    56  ldr x0, pc+512 (addr 0x0000ffff8bd8cc98)    ;; object: 0x26c04519 <the hole>
0xffff8bd8ca9c    60  stur x0, [x3, #31]
0xffff8bd8caa0    64  ldur x0, [cp, #39]
0xffff8bd8caa4    68  stur x0, [x3, #39]
0xffff8bd8caa8    72  ldr x0, pc+504 (addr 0x0000ffff8bd8cca0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8caac    76  stur x0, [x3, #47]
0xffff8bd8cab0    80  ldr x0, pc+504 (addr 0x0000ffff8bd8cca8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cab4    84  stur x0, [x3, #55]
0xffff8bd8cab8    88  ldr x0, pc+504 (addr 0x0000ffff8bd8ccb0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cabc    92  stur x0, [x3, #63]
0xffff8bd8cac0    96  ldr x0, pc+504 (addr 0x0000ffff8bd8ccb8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cac4   100  stur x0, [x3, #71]
0xffff8bd8cac8   104  ldr x0, pc+504 (addr 0x0000ffff8bd8ccc0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cacc   108  stur x0, [x3, #79]
0xffff8bd8cad0   112  ldr x0, pc+504 (addr 0x0000ffff8bd8ccc8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cad4   116  stur x0, [x3, #87]
0xffff8bd8cad8   120  ldr x0, pc+504 (addr 0x0000ffff8bd8ccd0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cadc   124  stur x0, [x3, #95]
0xffff8bd8cae0   128  ldr x0, pc+504 (addr 0x0000ffff8bd8ccd8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cae4   132  stur x0, [x3, #103]
0xffff8bd8cae8   136  ldr x0, pc+504 (addr 0x0000ffff8bd8cce0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8caec   140  stur x0, [x3, #111]
0xffff8bd8caf0   144  ldr x0, pc+504 (addr 0x0000ffff8bd8cce8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8caf4   148  stur x0, [x3, #119]
0xffff8bd8caf8   152  ldr x0, pc+504 (addr 0x0000ffff8bd8ccf0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cafc   156  stur x0, [x3, #127]
0xffff8bd8cb00   160  ldr x0, pc+504 (addr 0x0000ffff8bd8ccf8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb04   164  stur x0, [x3, #135]
0xffff8bd8cb08   168  ldr x0, pc+504 (addr 0x0000ffff8bd8cd00)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb0c   172  stur x0, [x3, #143]
0xffff8bd8cb10   176  ldr x0, pc+504 (addr 0x0000ffff8bd8cd08)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb14   180  stur x0, [x3, #151]
0xffff8bd8cb18   184  ldr x0, pc+504 (addr 0x0000ffff8bd8cd10)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb1c   188  stur x0, [x3, #159]
0xffff8bd8cb20   192  ldr x0, pc+504 (addr 0x0000ffff8bd8cd18)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb24   196  stur x0, [x3, #167]
0xffff8bd8cb28   200  ldr x0, pc+504 (addr 0x0000ffff8bd8cd20)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb2c   204  stur x0, [x3, #175]
0xffff8bd8cb30   208  ldr x0, pc+504 (addr 0x0000ffff8bd8cd28)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb34   212  stur x0, [x3, #183]
0xffff8bd8cb38   216  ldr x0, pc+504 (addr 0x0000ffff8bd8cd30)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb3c   220  stur x0, [x3, #191]
0xffff8bd8cb40   224  ldr x0, pc+504 (addr 0x0000ffff8bd8cd38)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb44   228  stur x0, [x3, #199]
0xffff8bd8cb48   232  ldr x0, pc+504 (addr 0x0000ffff8bd8cd40)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb4c   236  stur x0, [x3, #207]
0xffff8bd8cb50   240  ldr x0, pc+504 (addr 0x0000ffff8bd8cd48)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb54   244  stur x0, [x3, #215]
0xffff8bd8cb58   248  ldr x0, pc+504 (addr 0x0000ffff8bd8cd50)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb5c   252  stur x0, [x3, #223]
0xffff8bd8cb60   256  ldr x0, pc+504 (addr 0x0000ffff8bd8cd58)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb64   260  stur x0, [x3, #231]
0xffff8bd8cb68   264  ldr x0, pc+504 (addr 0x0000ffff8bd8cd60)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb6c   268  stur x0, [x3, #239]
0xffff8bd8cb70   272  ldr x0, pc+504 (addr 0x0000ffff8bd8cd68)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb74   276  stur x0, [x3, #247]
0xffff8bd8cb78   280  ldr x0, pc+504 (addr 0x0000ffff8bd8cd70)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb7c   284  stur x0, [x3, #255]
0xffff8bd8cb80   288  ldr x0, pc+504 (addr 0x0000ffff8bd8cd78)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb84   292  movz x16, #0x107
0xffff8bd8cb88   296  str x0, [x3, x16]
0xffff8bd8cb8c   300  ldr x0, pc+500 (addr 0x0000ffff8bd8cd80)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb90   304  movz x16, #0x10f
0xffff8bd8cb94   308  str x0, [x3, x16]
0xffff8bd8cb98   312  ldr x0, pc+496 (addr 0x0000ffff8bd8cd88)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cb9c   316  movz x16, #0x117
0xffff8bd8cba0   320  str x0, [x3, x16]
0xffff8bd8cba4   324  ldr x0, pc+492 (addr 0x0000ffff8bd8cd90)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cba8   328  movz x16, #0x11f
0xffff8bd8cbac   332  str x0, [x3, x16]
0xffff8bd8cbb0   336  ldr x0, pc+488 (addr 0x0000ffff8bd8cd98)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cbb4   340  movz x16, #0x127
0xffff8bd8cbb8   344  str x0, [x3, x16]
0xffff8bd8cbbc   348  ldr x0, pc+484 (addr 0x0000ffff8bd8cda0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cbc0   352  movz x16, #0x12f
0xffff8bd8cbc4   356  str x0, [x3, x16]
0xffff8bd8cbc8   360  ldr x0, pc+480 (addr 0x0000ffff8bd8cda8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cbcc   364  movz x16, #0x137
0xffff8bd8cbd0   368  str x0, [x3, x16]
0xffff8bd8cbd4   372  ldr x0, pc+476 (addr 0x0000ffff8bd8cdb0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cbd8   376  movz x16, #0x13f
0xffff8bd8cbdc   380  str x0, [x3, x16]
0xffff8bd8cbe0   384  ldr x0, pc+472 (addr 0x0000ffff8bd8cdb8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cbe4   388  movz x16, #0x147
0xffff8bd8cbe8   392  str x0, [x3, x16]
0xffff8bd8cbec   396  ldr x0, pc+468 (addr 0x0000ffff8bd8cdc0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cbf0   400  movz x16, #0x14f
0xffff8bd8cbf4   404  str x0, [x3, x16]
0xffff8bd8cbf8   408  ldr x0, pc+464 (addr 0x0000ffff8bd8cdc8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cbfc   412  movz x16, #0x157
0xffff8bd8cc00   416  str x0, [x3, x16]
0xffff8bd8cc04   420  ldr x0, pc+460 (addr 0x0000ffff8bd8cdd0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cc08   424  movz x16, #0x15f
0xffff8bd8cc0c   428  str x0, [x3, x16]
0xffff8bd8cc10   432  ldr x0, pc+456 (addr 0x0000ffff8bd8cdd8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8cc14   436  movz x16, #0x167
0xffff8bd8cc18   440  str x0, [x3, x16]
0xffff8bd8cc1c   444  mov x0, x3
0xffff8bd8cc20   448  ret
0xffff8bd8cc24   452  sub csp, jssp, #0x10 (16)
0xffff8bd8cc28   456  stp fp, lr, [jssp, #-16]!
0xffff8bd8cc2c   460  movz fp, #0xa00000000
0xffff8bd8cc30   464  sub csp, jssp, #0x8 (8)
0xffff8bd8cc34   468  str fp, [jssp, #-8]!
0xffff8bd8cc38   472  add fp, jssp, #0x8 (8)
0xffff8bd8cc3c   476  movz x3, #0x0
0xffff8bd8cc40   480  mov x16, lr
0xffff8bd8cc44   484  ldr x17, pc+412 (addr 0x0000ffff8bd8cde0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd8cc48   488  blr x17
0xffff8bd8cc4c   492  movz x0, #0x17000000000
0xffff8bd8cc50   496  movz x10, #0x0
0xffff8bd8cc54   500  sub csp, jssp, #0x10 (16)
0xffff8bd8cc58   504  stp x10, x0, [jssp, #-16]!
0xffff8bd8cc5c   508  movz x0, #0x2
0xffff8bd8cc60   512  movz x1, #0x5b88
0xffff8bd8cc64   516  movk x1, #0xe2, lsl #16
0xffff8bd8cc68   520  ldr x16, pc+384 (addr 0x0000ffff8bd8cde8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd8cc6c   524  blr x16
0xffff8bd8cc70   528  str x0, [jssp, #24]
0xffff8bd8cc74   532  ldr x16, pc+380 (addr 0x0000ffff8bd8cdf0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd8cc78   536  blr x16
0xffff8bd8cc7c   540  ldr lr, [jssp, #16]
0xffff8bd8cc80   544  ldp xzr, fp, [jssp], #24
0xffff8bd8cc84   548  b #-0x204 (addr 0xffff8bd8ca80)
0xffff8bd8cc88   552  58000b7f       constant pool begin (num_const = 91)    ;; constant pool
0xffff8bd8cc8c   556  d63f03e0       constant
0xffff8bd8cc90   560  5f506149       constant
0xffff8bd8cc94   564  00000000       constant
0xffff8bd8cc98   568  26c04519       constant
0xffff8bd8cc9c   572  00000000       constant
0xffff8bd8cca0   576  26c04241       constant
0xffff8bd8cca4   580  00000000       constant
0xffff8bd8cca8   584  26c04241       constant
0xffff8bd8ccac   588  00000000       constant
0xffff8bd8ccb0   592  26c04241       constant
0xffff8bd8ccb4   596  00000000       constant
0xffff8bd8ccb8   600  26c04241       constant
0xffff8bd8ccbc   604  00000000       constant
0xffff8bd8ccc0   608  26c04241       constant
0xffff8bd8ccc4   612  00000000       constant
0xffff8bd8ccc8   616  26c04241       constant
0xffff8bd8cccc   620  00000000       constant
0xffff8bd8ccd0   624  26c04241       constant
0xffff8bd8ccd4   628  00000000       constant
0xffff8bd8ccd8   632  26c04241       constant
0xffff8bd8ccdc   636  00000000       constant
0xffff8bd8cce0   640  26c04241       constant
0xffff8bd8cce4   644  00000000       constant
0xffff8bd8cce8   648  26c04241       constant
0xffff8bd8ccec   652  00000000       constant
0xffff8bd8ccf0   656  26c04241       constant
0xffff8bd8ccf4   660  00000000       constant
0xffff8bd8ccf8   664  26c04241       constant
0xffff8bd8ccfc   668  00000000       constant
0xffff8bd8cd00   672  26c04241       constant
0xffff8bd8cd04   676  00000000       constant
0xffff8bd8cd08   680  26c04241       constant
0xffff8bd8cd0c   684  00000000       constant
0xffff8bd8cd10   688  26c04241       constant
0xffff8bd8cd14   692  00000000       constant
0xffff8bd8cd18   696  26c04241       constant
0xffff8bd8cd1c   700  00000000       constant
0xffff8bd8cd20   704  26c04241       constant
0xffff8bd8cd24   708  00000000       constant
0xffff8bd8cd28   712  26c04241       constant
0xffff8bd8cd2c   716  00000000       constant
0xffff8bd8cd30   720  26c04241       constant
0xffff8bd8cd34   724  00000000       constant
0xffff8bd8cd38   728  26c04241       constant
0xffff8bd8cd3c   732  00000000       constant
0xffff8bd8cd40   736  26c04241       constant
0xffff8bd8cd44   740  00000000       constant
0xffff8bd8cd48   744  26c04241       constant
0xffff8bd8cd4c   748  00000000       constant
0xffff8bd8cd50   752  26c04241       constant
0xffff8bd8cd54   756  00000000       constant
0xffff8bd8cd58   760  26c04241       constant
0xffff8bd8cd5c   764  00000000       constant
0xffff8bd8cd60   768  26c04241       constant
0xffff8bd8cd64   772  00000000       constant
0xffff8bd8cd68   776  26c04241       constant
0xffff8bd8cd6c   780  00000000       constant
0xffff8bd8cd70   784  26c04241       constant
0xffff8bd8cd74   788  00000000       constant
0xffff8bd8cd78   792  26c04241       constant
0xffff8bd8cd7c   796  00000000       constant
0xffff8bd8cd80   800  26c04241       constant
0xffff8bd8cd84   804  00000000       constant
0xffff8bd8cd88   808  26c04241       constant
0xffff8bd8cd8c   812  00000000       constant
0xffff8bd8cd90   816  26c04241       constant
0xffff8bd8cd94   820  00000000       constant
0xffff8bd8cd98   824  26c04241       constant
0xffff8bd8cd9c   828  00000000       constant
0xffff8bd8cda0   832  26c04241       constant
0xffff8bd8cda4   836  00000000       constant
0xffff8bd8cda8   840  26c04241       constant
0xffff8bd8cdac   844  00000000       constant
0xffff8bd8cdb0   848  26c04241       constant
0xffff8bd8cdb4   852  00000000       constant
0xffff8bd8cdb8   856  26c04241       constant
0xffff8bd8cdbc   860  00000000       constant
0xffff8bd8cdc0   864  26c04241       constant
0xffff8bd8cdc4   868  00000000       constant
0xffff8bd8cdc8   872  26c04241       constant
0xffff8bd8cdcc   876  00000000       constant
0xffff8bd8cdd0   880  26c04241       constant
0xffff8bd8cdd4   884  00000000       constant
0xffff8bd8cdd8   888  26c04241       constant
0xffff8bd8cddc   892  00000000       constant
0xffff8bd8cde0   896  8bd06820       constant
0xffff8bd8cde4   900  0000ffff       constant
0xffff8bd8cde8   904  8bd06260       constant
0xffff8bd8cdec   908  0000ffff       constant
0xffff8bd8cdf0   912  8bd068e0       constant
0xffff8bd8cdf4   916  0000ffff       constant


Safepoints (size = 21)
0xffff8bd8cc70   528  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 51)
0xffff8bd8ca80  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd8ca98  embedded object  (0x26c04519 <the hole>)
0xffff8bd8caa8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cab0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cab8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cac0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cac8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cad0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cad8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cae0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cae8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8caf0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8caf8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb00  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb08  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb10  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb18  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb20  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb28  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb30  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb38  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb40  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb48  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb50  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb58  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb60  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb68  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb70  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb78  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb80  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb8c  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cb98  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cba4  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cbb0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cbbc  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cbc8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cbd4  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cbe0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cbec  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cbf8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cc04  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cc10  embedded object  (0x26c04241 <undefined>)
0xffff8bd8cc44  code target (STUB)  (0xffff8bd06820)
0xffff8bd8cc68  code target (STUB)  (0xffff8bd06260)
0xffff8bd8cc74  code target (STUB)  (0xffff8bd068e0)
0xffff8bd8cc88  constant pool (size 368)


kind = HANDLER
major_key = <NoCache>Stub
name = runInThisContext
compiler = unknown
Instructions (size = 120)
0xffff8bd8f420     0  sub csp, jssp, #0x8 (8)
0xffff8bd8f424     4  str x3, [jssp, #-8]!
0xffff8bd8f428     8  sub csp, jssp, #0x8 (8)
0xffff8bd8f42c    12  str x0, [jssp, #-8]!
0xffff8bd8f430    16  ldr x0, pc+72 (addr 0x0000ffff8bd8f478)    ;; object: 0x26ccde09 Cell for 0
0xffff8bd8f434    20  ldur x0, [x0, #7]
0xffff8bd8f438    24  cmp x0, #0x0 (0)
0xffff8bd8f43c    28  b.ne #+0x14 (addr 0xffff8bd8f450)
0xffff8bd8f440    32  ldr x3, pc+64 (addr 0x0000ffff8bd8f480)    ;; object: 0x26ccde19 WeakCell for 0x5659cef9 <an Object with map 0x5f51a571>
0xffff8bd8f444    36  ldur x3, [x3, #7]
0xffff8bd8f448    40  tbz w3, #0, #+0x8 (addr 0xffff8bd8f450)
0xffff8bd8f44c    44  b #+0x14 (addr 0xffff8bd8f460)
0xffff8bd8f450    48  ldr x0, [jssp], #8
0xffff8bd8f454    52  ldr x3, [jssp], #8
0xffff8bd8f458    56  ldr x16, pc+48 (addr 0x0000ffff8bd8f488)    ;; code: BUILTIN
0xffff8bd8f45c    60  br x16
0xffff8bd8f460    64  add jssp, jssp, #0x10 (16)
0xffff8bd8f464    68  mov x1, x3
0xffff8bd8f468    72  ldr x16, pc+40 (addr 0x0000ffff8bd8f490)    ;; code: HANDLER, LoadConstantStub, minor: 1
0xffff8bd8f46c    76  br x16
0xffff8bd8f470    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bd8f474    84  d63f03e0       constant
0xffff8bd8f478    88  26ccde09       constant
0xffff8bd8f47c    92  00000000       constant
0xffff8bd8f480    96  26ccde19       constant
0xffff8bd8f484   100  00000000       constant
0xffff8bd8f488   104  8bd222e0       constant
0xffff8bd8f48c   108  0000ffff       constant
0xffff8bd8f490   112  8bd43300       constant
0xffff8bd8f494   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd8f430  embedded object  (0x26ccde09 Cell for 0)
0xffff8bd8f440  embedded object  (0x26ccde19 WeakCell for 0x5659cef9 <an Object with map 0x5f51a571>)
0xffff8bd8f458  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd8f468  code target (HANDLER)  (0xffff8bd43300)
0xffff8bd8f470  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = buffer
compiler = unknown
Instructions (size = 184)
0xffff8bd8f500     0  sub csp, jssp, #0x8 (8)
0xffff8bd8f504     4  str x3, [jssp, #-8]!
0xffff8bd8f508     8  sub csp, jssp, #0x8 (8)
0xffff8bd8f50c    12  str x4, [jssp, #-8]!
0xffff8bd8f510    16  ldr x3, pc+112 (addr 0x0000ffff8bd8f580)    ;; object: 0x26c63e59 Cell for 0
0xffff8bd8f514    20  ldur x3, [x3, #7]
0xffff8bd8f518    24  cmp x3, #0x0 (0)
0xffff8bd8f51c    28  b.ne #+0x44 (addr 0xffff8bd8f560)
0xffff8bd8f520    32  tbz w0, #0, #+0x40 (addr 0xffff8bd8f560)
0xffff8bd8f524    36  ldur x3, [x0, #-1]
0xffff8bd8f528    40  ldr x4, pc+96 (addr 0x0000ffff8bd8f588)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd8f52c    44  ldur x4, [x4, #7]
0xffff8bd8f530    48  cmp x3, x4
0xffff8bd8f534    52  b.ne #+0x2c (addr 0xffff8bd8f560)
0xffff8bd8f538    56  ldr x5, pc+88 (addr 0x0000ffff8bd8f590)    ;; object: 0x26ccf261 WeakCell for 0x5f51ca91 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd8f53c    60  ldur x5, [x5, #7]
0xffff8bd8f540    64  tbz w5, #0, #+0x20 (addr 0xffff8bd8f560)
0xffff8bd8f544    68  ldursw x4, [x5, #15]
0xffff8bd8f548    72  tbnz w4, #23, #+0x18 (addr 0xffff8bd8f560)
0xffff8bd8f54c    76  ldr x4, [jssp], #8
0xffff8bd8f550    80  ldr x3, [jssp], #8
0xffff8bd8f554    84  ldr x2, pc+68 (addr 0x0000ffff8bd8f598)    ;; object: 0x26c780a9 <String[6]: buffer>
0xffff8bd8f558    88  ldr x16, pc+72 (addr 0x0000ffff8bd8f5a0)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff8bd8f55c    92  br x16
0xffff8bd8f560    96  ldr x2, pc+72 (addr 0x0000ffff8bd8f5a8)    ;; object: 0x26c780a9 <String[6]: buffer>
0xffff8bd8f564   100  ldr x4, [jssp], #8
0xffff8bd8f568   104  ldr x3, [jssp], #8
0xffff8bd8f56c   108  ldr x16, pc+68 (addr 0x0000ffff8bd8f5b0)    ;; code: BUILTIN
0xffff8bd8f570   112  br x16
0xffff8bd8f574   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd8f578   120  d63f03e0       constant
0xffff8bd8f57c   124  d503201f       constant
0xffff8bd8f580   128  26c63e59       constant
0xffff8bd8f584   132  00000000       constant
0xffff8bd8f588   136  26cc22b1       constant
0xffff8bd8f58c   140  00000000       constant
0xffff8bd8f590   144  26ccf261       constant
0xffff8bd8f594   148  00000000       constant
0xffff8bd8f598   152  26c780a9       constant
0xffff8bd8f59c   156  00000000       constant
0xffff8bd8f5a0   160  8bd8bdc0       constant
0xffff8bd8f5a4   164  0000ffff       constant
0xffff8bd8f5a8   168  26c780a9       constant
0xffff8bd8f5ac   172  00000000       constant
0xffff8bd8f5b0   176  8bd22420       constant
0xffff8bd8f5b4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bd8f510  embedded object  (0x26c63e59 Cell for 0)
0xffff8bd8f528  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd8f538  embedded object  (0x26ccf261 WeakCell for 0x5f51ca91 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd8f554  embedded object  (0x26c780a9 <String[6]: buffer>)
0xffff8bd8f558  code target (HANDLER)  (0xffff8bd8bdc0)
0xffff8bd8f560  embedded object  (0x26c780a9 <String[6]: buffer>)
0xffff8bd8f56c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd8f574  constant pool (size 68)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 861)
0xffff8bd8f620     0  movz x2, #0xe2c0
0xffff8bd8f624     4  movk x2, #0x2cb8, lsl #16
0xffff8bd8f628     8  ldp x3, x0, [x2]
0xffff8bd8f62c    12  adds x16, x3, #0x150 (336)
0xffff8bd8f630    16  ccmp x16, x0, #nzCv, lo
0xffff8bd8f634    20  b.hi #+0x180 (addr 0xffff8bd8f7b4)
0xffff8bd8f638    24  str x16, [x2]
0xffff8bd8f63c    28  orr x3, x3, #0x1
0xffff8bd8f640    32  ldr x0, pc+480 (addr 0x0000ffff8bd8f820)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd8f644    36  stur x0, [x3, #-1]
0xffff8bd8f648    40  movz x0, #0x2800000000
0xffff8bd8f64c    44  stur x0, [x3, #7]
0xffff8bd8f650    48  stur x1, [x3, #15]
0xffff8bd8f654    52  stur cp, [x3, #23]
0xffff8bd8f658    56  ldr x0, pc+464 (addr 0x0000ffff8bd8f828)    ;; object: 0x26c04519 <the hole>
0xffff8bd8f65c    60  stur x0, [x3, #31]
0xffff8bd8f660    64  ldur x0, [cp, #39]
0xffff8bd8f664    68  stur x0, [x3, #39]
0xffff8bd8f668    72  ldr x0, pc+456 (addr 0x0000ffff8bd8f830)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f66c    76  stur x0, [x3, #47]
0xffff8bd8f670    80  ldr x0, pc+456 (addr 0x0000ffff8bd8f838)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f674    84  stur x0, [x3, #55]
0xffff8bd8f678    88  ldr x0, pc+456 (addr 0x0000ffff8bd8f840)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f67c    92  stur x0, [x3, #63]
0xffff8bd8f680    96  ldr x0, pc+456 (addr 0x0000ffff8bd8f848)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f684   100  stur x0, [x3, #71]
0xffff8bd8f688   104  ldr x0, pc+456 (addr 0x0000ffff8bd8f850)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f68c   108  stur x0, [x3, #79]
0xffff8bd8f690   112  ldr x0, pc+456 (addr 0x0000ffff8bd8f858)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f694   116  stur x0, [x3, #87]
0xffff8bd8f698   120  ldr x0, pc+456 (addr 0x0000ffff8bd8f860)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f69c   124  stur x0, [x3, #95]
0xffff8bd8f6a0   128  ldr x0, pc+456 (addr 0x0000ffff8bd8f868)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6a4   132  stur x0, [x3, #103]
0xffff8bd8f6a8   136  ldr x0, pc+456 (addr 0x0000ffff8bd8f870)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6ac   140  stur x0, [x3, #111]
0xffff8bd8f6b0   144  ldr x0, pc+456 (addr 0x0000ffff8bd8f878)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6b4   148  stur x0, [x3, #119]
0xffff8bd8f6b8   152  ldr x0, pc+456 (addr 0x0000ffff8bd8f880)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6bc   156  stur x0, [x3, #127]
0xffff8bd8f6c0   160  ldr x0, pc+456 (addr 0x0000ffff8bd8f888)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6c4   164  stur x0, [x3, #135]
0xffff8bd8f6c8   168  ldr x0, pc+456 (addr 0x0000ffff8bd8f890)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6cc   172  stur x0, [x3, #143]
0xffff8bd8f6d0   176  ldr x0, pc+456 (addr 0x0000ffff8bd8f898)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6d4   180  stur x0, [x3, #151]
0xffff8bd8f6d8   184  ldr x0, pc+456 (addr 0x0000ffff8bd8f8a0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6dc   188  stur x0, [x3, #159]
0xffff8bd8f6e0   192  ldr x0, pc+456 (addr 0x0000ffff8bd8f8a8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6e4   196  stur x0, [x3, #167]
0xffff8bd8f6e8   200  ldr x0, pc+456 (addr 0x0000ffff8bd8f8b0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6ec   204  stur x0, [x3, #175]
0xffff8bd8f6f0   208  ldr x0, pc+456 (addr 0x0000ffff8bd8f8b8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6f4   212  stur x0, [x3, #183]
0xffff8bd8f6f8   216  ldr x0, pc+456 (addr 0x0000ffff8bd8f8c0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6fc   220  stur x0, [x3, #191]
0xffff8bd8f700   224  ldr x0, pc+456 (addr 0x0000ffff8bd8f8c8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f704   228  stur x0, [x3, #199]
0xffff8bd8f708   232  ldr x0, pc+456 (addr 0x0000ffff8bd8f8d0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f70c   236  stur x0, [x3, #207]
0xffff8bd8f710   240  ldr x0, pc+456 (addr 0x0000ffff8bd8f8d8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f714   244  stur x0, [x3, #215]
0xffff8bd8f718   248  ldr x0, pc+456 (addr 0x0000ffff8bd8f8e0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f71c   252  stur x0, [x3, #223]
0xffff8bd8f720   256  ldr x0, pc+456 (addr 0x0000ffff8bd8f8e8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f724   260  stur x0, [x3, #231]
0xffff8bd8f728   264  ldr x0, pc+456 (addr 0x0000ffff8bd8f8f0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f72c   268  stur x0, [x3, #239]
0xffff8bd8f730   272  ldr x0, pc+456 (addr 0x0000ffff8bd8f8f8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f734   276  stur x0, [x3, #247]
0xffff8bd8f738   280  ldr x0, pc+456 (addr 0x0000ffff8bd8f900)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f73c   284  stur x0, [x3, #255]
0xffff8bd8f740   288  ldr x0, pc+456 (addr 0x0000ffff8bd8f908)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f744   292  movz x16, #0x107
0xffff8bd8f748   296  str x0, [x3, x16]
0xffff8bd8f74c   300  ldr x0, pc+452 (addr 0x0000ffff8bd8f910)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f750   304  movz x16, #0x10f
0xffff8bd8f754   308  str x0, [x3, x16]
0xffff8bd8f758   312  ldr x0, pc+448 (addr 0x0000ffff8bd8f918)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f75c   316  movz x16, #0x117
0xffff8bd8f760   320  str x0, [x3, x16]
0xffff8bd8f764   324  ldr x0, pc+444 (addr 0x0000ffff8bd8f920)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f768   328  movz x16, #0x11f
0xffff8bd8f76c   332  str x0, [x3, x16]
0xffff8bd8f770   336  ldr x0, pc+440 (addr 0x0000ffff8bd8f928)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f774   340  movz x16, #0x127
0xffff8bd8f778   344  str x0, [x3, x16]
0xffff8bd8f77c   348  ldr x0, pc+436 (addr 0x0000ffff8bd8f930)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f780   352  movz x16, #0x12f
0xffff8bd8f784   356  str x0, [x3, x16]
0xffff8bd8f788   360  ldr x0, pc+432 (addr 0x0000ffff8bd8f938)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f78c   364  movz x16, #0x137
0xffff8bd8f790   368  str x0, [x3, x16]
0xffff8bd8f794   372  ldr x0, pc+428 (addr 0x0000ffff8bd8f940)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f798   376  movz x16, #0x13f
0xffff8bd8f79c   380  str x0, [x3, x16]
0xffff8bd8f7a0   384  ldr x0, pc+424 (addr 0x0000ffff8bd8f948)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f7a4   388  movz x16, #0x147
0xffff8bd8f7a8   392  str x0, [x3, x16]
0xffff8bd8f7ac   396  mov x0, x3
0xffff8bd8f7b0   400  ret
0xffff8bd8f7b4   404  sub csp, jssp, #0x10 (16)
0xffff8bd8f7b8   408  stp fp, lr, [jssp, #-16]!
0xffff8bd8f7bc   412  movz fp, #0xa00000000
0xffff8bd8f7c0   416  sub csp, jssp, #0x8 (8)
0xffff8bd8f7c4   420  str fp, [jssp, #-8]!
0xffff8bd8f7c8   424  add fp, jssp, #0x8 (8)
0xffff8bd8f7cc   428  movz x3, #0x0
0xffff8bd8f7d0   432  mov x16, lr
0xffff8bd8f7d4   436  ldr x17, pc+380 (addr 0x0000ffff8bd8f950)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd8f7d8   440  blr x17
0xffff8bd8f7dc   444  movz x0, #0x15000000000
0xffff8bd8f7e0   448  movz x10, #0x0
0xffff8bd8f7e4   452  sub csp, jssp, #0x10 (16)
0xffff8bd8f7e8   456  stp x10, x0, [jssp, #-16]!
0xffff8bd8f7ec   460  movz x0, #0x2
0xffff8bd8f7f0   464  movz x1, #0x5b88
0xffff8bd8f7f4   468  movk x1, #0xe2, lsl #16
0xffff8bd8f7f8   472  ldr x16, pc+352 (addr 0x0000ffff8bd8f958)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd8f7fc   476  blr x16
0xffff8bd8f800   480  str x0, [jssp, #24]
0xffff8bd8f804   484  ldr x16, pc+348 (addr 0x0000ffff8bd8f960)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd8f808   488  blr x16
0xffff8bd8f80c   492  ldr lr, [jssp, #16]
0xffff8bd8f810   496  ldp xzr, fp, [jssp], #24
0xffff8bd8f814   500  b #-0x1d4 (addr 0xffff8bd8f640)
0xffff8bd8f818   504  58000a7f       constant pool begin (num_const = 83)    ;; constant pool
0xffff8bd8f81c   508  d63f03e0       constant
0xffff8bd8f820   512  5f506149       constant
0xffff8bd8f824   516  00000000       constant
0xffff8bd8f828   520  26c04519       constant
0xffff8bd8f82c   524  00000000       constant
0xffff8bd8f830   528  26c04241       constant
0xffff8bd8f834   532  00000000       constant
0xffff8bd8f838   536  26c04241       constant
0xffff8bd8f83c   540  00000000       constant
0xffff8bd8f840   544  26c04241       constant
0xffff8bd8f844   548  00000000       constant
0xffff8bd8f848   552  26c04241       constant
0xffff8bd8f84c   556  00000000       constant
0xffff8bd8f850   560  26c04241       constant
0xffff8bd8f854   564  00000000       constant
0xffff8bd8f858   568  26c04241       constant
0xffff8bd8f85c   572  00000000       constant
0xffff8bd8f860   576  26c04241       constant
0xffff8bd8f864   580  00000000       constant
0xffff8bd8f868   584  26c04241       constant
0xffff8bd8f86c   588  00000000       constant
0xffff8bd8f870   592  26c04241       constant
0xffff8bd8f874   596  00000000       constant
0xffff8bd8f878   600  26c04241       constant
0xffff8bd8f87c   604  00000000       constant
0xffff8bd8f880   608  26c04241       constant
0xffff8bd8f884   612  00000000       constant
0xffff8bd8f888   616  26c04241       constant
0xffff8bd8f88c   620  00000000       constant
0xffff8bd8f890   624  26c04241       constant
0xffff8bd8f894   628  00000000       constant
0xffff8bd8f898   632  26c04241       constant
0xffff8bd8f89c   636  00000000       constant
0xffff8bd8f8a0   640  26c04241       constant
0xffff8bd8f8a4   644  00000000       constant
0xffff8bd8f8a8   648  26c04241       constant
0xffff8bd8f8ac   652  00000000       constant
0xffff8bd8f8b0   656  26c04241       constant
0xffff8bd8f8b4   660  00000000       constant
0xffff8bd8f8b8   664  26c04241       constant
0xffff8bd8f8bc   668  00000000       constant
0xffff8bd8f8c0   672  26c04241       constant
0xffff8bd8f8c4   676  00000000       constant
0xffff8bd8f8c8   680  26c04241       constant
0xffff8bd8f8cc   684  00000000       constant
0xffff8bd8f8d0   688  26c04241       constant
0xffff8bd8f8d4   692  00000000       constant
0xffff8bd8f8d8   696  26c04241       constant
0xffff8bd8f8dc   700  00000000       constant
0xffff8bd8f8e0   704  26c04241       constant
0xffff8bd8f8e4   708  00000000       constant
0xffff8bd8f8e8   712  26c04241       constant
0xffff8bd8f8ec   716  00000000       constant
0xffff8bd8f8f0   720  26c04241       constant
0xffff8bd8f8f4   724  00000000       constant
0xffff8bd8f8f8   728  26c04241       constant
0xffff8bd8f8fc   732  00000000       constant
0xffff8bd8f900   736  26c04241       constant
0xffff8bd8f904   740  00000000       constant
0xffff8bd8f908   744  26c04241       constant
0xffff8bd8f90c   748  00000000       constant
0xffff8bd8f910   752  26c04241       constant
0xffff8bd8f914   756  00000000       constant
0xffff8bd8f918   760  26c04241       constant
0xffff8bd8f91c   764  00000000       constant
0xffff8bd8f920   768  26c04241       constant
0xffff8bd8f924   772  00000000       constant
0xffff8bd8f928   776  26c04241       constant
0xffff8bd8f92c   780  00000000       constant
0xffff8bd8f930   784  26c04241       constant
0xffff8bd8f934   788  00000000       constant
0xffff8bd8f938   792  26c04241       constant
0xffff8bd8f93c   796  00000000       constant
0xffff8bd8f940   800  26c04241       constant
0xffff8bd8f944   804  00000000       constant
0xffff8bd8f948   808  26c04241       constant
0xffff8bd8f94c   812  00000000       constant
0xffff8bd8f950   816  8bd06820       constant
0xffff8bd8f954   820  0000ffff       constant
0xffff8bd8f958   824  8bd06260       constant
0xffff8bd8f95c   828  0000ffff       constant
0xffff8bd8f960   832  8bd068e0       constant
0xffff8bd8f964   836  0000ffff       constant


Safepoints (size = 21)
0xffff8bd8f800   480  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 47)
0xffff8bd8f640  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd8f658  embedded object  (0x26c04519 <the hole>)
0xffff8bd8f668  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f670  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f678  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f680  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f688  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f690  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f698  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6a0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6a8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6b0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6b8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6c0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6c8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6d0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6d8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6e0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6e8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6f0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6f8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f700  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f708  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f710  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f718  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f720  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f728  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f730  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f738  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f740  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f74c  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f758  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f764  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f770  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f77c  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f788  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f794  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f7a0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f7d4  code target (STUB)  (0xffff8bd06820)
0xffff8bd8f7f8  code target (STUB)  (0xffff8bd06260)
0xffff8bd8f804  code target (STUB)  (0xffff8bd068e0)
0xffff8bd8f818  constant pool (size 336)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 861)
0xffff8bd8f620     0  movz x2, #0xe2c0
0xffff8bd8f624     4  movk x2, #0x2cb8, lsl #16
0xffff8bd8f628     8  ldp x3, x0, [x2]
0xffff8bd8f62c    12  adds x16, x3, #0x150 (336)
0xffff8bd8f630    16  ccmp x16, x0, #nzCv, lo
0xffff8bd8f634    20  b.hi #+0x180 (addr 0xffff8bd8f7b4)
0xffff8bd8f638    24  str x16, [x2]
0xffff8bd8f63c    28  orr x3, x3, #0x1
0xffff8bd8f640    32  ldr x0, pc+480 (addr 0x0000ffff8bd8f820)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd8f644    36  stur x0, [x3, #-1]
0xffff8bd8f648    40  movz x0, #0x2800000000
0xffff8bd8f64c    44  stur x0, [x3, #7]
0xffff8bd8f650    48  stur x1, [x3, #15]
0xffff8bd8f654    52  stur cp, [x3, #23]
0xffff8bd8f658    56  ldr x0, pc+464 (addr 0x0000ffff8bd8f828)    ;; object: 0x26c04519 <the hole>
0xffff8bd8f65c    60  stur x0, [x3, #31]
0xffff8bd8f660    64  ldur x0, [cp, #39]
0xffff8bd8f664    68  stur x0, [x3, #39]
0xffff8bd8f668    72  ldr x0, pc+456 (addr 0x0000ffff8bd8f830)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f66c    76  stur x0, [x3, #47]
0xffff8bd8f670    80  ldr x0, pc+456 (addr 0x0000ffff8bd8f838)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f674    84  stur x0, [x3, #55]
0xffff8bd8f678    88  ldr x0, pc+456 (addr 0x0000ffff8bd8f840)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f67c    92  stur x0, [x3, #63]
0xffff8bd8f680    96  ldr x0, pc+456 (addr 0x0000ffff8bd8f848)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f684   100  stur x0, [x3, #71]
0xffff8bd8f688   104  ldr x0, pc+456 (addr 0x0000ffff8bd8f850)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f68c   108  stur x0, [x3, #79]
0xffff8bd8f690   112  ldr x0, pc+456 (addr 0x0000ffff8bd8f858)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f694   116  stur x0, [x3, #87]
0xffff8bd8f698   120  ldr x0, pc+456 (addr 0x0000ffff8bd8f860)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f69c   124  stur x0, [x3, #95]
0xffff8bd8f6a0   128  ldr x0, pc+456 (addr 0x0000ffff8bd8f868)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6a4   132  stur x0, [x3, #103]
0xffff8bd8f6a8   136  ldr x0, pc+456 (addr 0x0000ffff8bd8f870)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6ac   140  stur x0, [x3, #111]
0xffff8bd8f6b0   144  ldr x0, pc+456 (addr 0x0000ffff8bd8f878)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6b4   148  stur x0, [x3, #119]
0xffff8bd8f6b8   152  ldr x0, pc+456 (addr 0x0000ffff8bd8f880)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6bc   156  stur x0, [x3, #127]
0xffff8bd8f6c0   160  ldr x0, pc+456 (addr 0x0000ffff8bd8f888)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6c4   164  stur x0, [x3, #135]
0xffff8bd8f6c8   168  ldr x0, pc+456 (addr 0x0000ffff8bd8f890)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6cc   172  stur x0, [x3, #143]
0xffff8bd8f6d0   176  ldr x0, pc+456 (addr 0x0000ffff8bd8f898)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6d4   180  stur x0, [x3, #151]
0xffff8bd8f6d8   184  ldr x0, pc+456 (addr 0x0000ffff8bd8f8a0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6dc   188  stur x0, [x3, #159]
0xffff8bd8f6e0   192  ldr x0, pc+456 (addr 0x0000ffff8bd8f8a8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6e4   196  stur x0, [x3, #167]
0xffff8bd8f6e8   200  ldr x0, pc+456 (addr 0x0000ffff8bd8f8b0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6ec   204  stur x0, [x3, #175]
0xffff8bd8f6f0   208  ldr x0, pc+456 (addr 0x0000ffff8bd8f8b8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6f4   212  stur x0, [x3, #183]
0xffff8bd8f6f8   216  ldr x0, pc+456 (addr 0x0000ffff8bd8f8c0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f6fc   220  stur x0, [x3, #191]
0xffff8bd8f700   224  ldr x0, pc+456 (addr 0x0000ffff8bd8f8c8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f704   228  stur x0, [x3, #199]
0xffff8bd8f708   232  ldr x0, pc+456 (addr 0x0000ffff8bd8f8d0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f70c   236  stur x0, [x3, #207]
0xffff8bd8f710   240  ldr x0, pc+456 (addr 0x0000ffff8bd8f8d8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f714   244  stur x0, [x3, #215]
0xffff8bd8f718   248  ldr x0, pc+456 (addr 0x0000ffff8bd8f8e0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f71c   252  stur x0, [x3, #223]
0xffff8bd8f720   256  ldr x0, pc+456 (addr 0x0000ffff8bd8f8e8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f724   260  stur x0, [x3, #231]
0xffff8bd8f728   264  ldr x0, pc+456 (addr 0x0000ffff8bd8f8f0)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f72c   268  stur x0, [x3, #239]
0xffff8bd8f730   272  ldr x0, pc+456 (addr 0x0000ffff8bd8f8f8)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f734   276  stur x0, [x3, #247]
0xffff8bd8f738   280  ldr x0, pc+456 (addr 0x0000ffff8bd8f900)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f73c   284  stur x0, [x3, #255]
0xffff8bd8f740   288  ldr x0, pc+456 (addr 0x0000ffff8bd8f908)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f744   292  movz x16, #0x107
0xffff8bd8f748   296  str x0, [x3, x16]
0xffff8bd8f74c   300  ldr x0, pc+452 (addr 0x0000ffff8bd8f910)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f750   304  movz x16, #0x10f
0xffff8bd8f754   308  str x0, [x3, x16]
0xffff8bd8f758   312  ldr x0, pc+448 (addr 0x0000ffff8bd8f918)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f75c   316  movz x16, #0x117
0xffff8bd8f760   320  str x0, [x3, x16]
0xffff8bd8f764   324  ldr x0, pc+444 (addr 0x0000ffff8bd8f920)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f768   328  movz x16, #0x11f
0xffff8bd8f76c   332  str x0, [x3, x16]
0xffff8bd8f770   336  ldr x0, pc+440 (addr 0x0000ffff8bd8f928)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f774   340  movz x16, #0x127
0xffff8bd8f778   344  str x0, [x3, x16]
0xffff8bd8f77c   348  ldr x0, pc+436 (addr 0x0000ffff8bd8f930)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f780   352  movz x16, #0x12f
0xffff8bd8f784   356  str x0, [x3, x16]
0xffff8bd8f788   360  ldr x0, pc+432 (addr 0x0000ffff8bd8f938)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f78c   364  movz x16, #0x137
0xffff8bd8f790   368  str x0, [x3, x16]
0xffff8bd8f794   372  ldr x0, pc+428 (addr 0x0000ffff8bd8f940)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f798   376  movz x16, #0x13f
0xffff8bd8f79c   380  str x0, [x3, x16]
0xffff8bd8f7a0   384  ldr x0, pc+424 (addr 0x0000ffff8bd8f948)    ;; object: 0x26c04241 <undefined>
0xffff8bd8f7a4   388  movz x16, #0x147
0xffff8bd8f7a8   392  str x0, [x3, x16]
0xffff8bd8f7ac   396  mov x0, x3
0xffff8bd8f7b0   400  ret
0xffff8bd8f7b4   404  sub csp, jssp, #0x10 (16)
0xffff8bd8f7b8   408  stp fp, lr, [jssp, #-16]!
0xffff8bd8f7bc   412  movz fp, #0xa00000000
0xffff8bd8f7c0   416  sub csp, jssp, #0x8 (8)
0xffff8bd8f7c4   420  str fp, [jssp, #-8]!
0xffff8bd8f7c8   424  add fp, jssp, #0x8 (8)
0xffff8bd8f7cc   428  movz x3, #0x0
0xffff8bd8f7d0   432  mov x16, lr
0xffff8bd8f7d4   436  ldr x17, pc+380 (addr 0x0000ffff8bd8f950)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd8f7d8   440  blr x17
0xffff8bd8f7dc   444  movz x0, #0x15000000000
0xffff8bd8f7e0   448  movz x10, #0x0
0xffff8bd8f7e4   452  sub csp, jssp, #0x10 (16)
0xffff8bd8f7e8   456  stp x10, x0, [jssp, #-16]!
0xffff8bd8f7ec   460  movz x0, #0x2
0xffff8bd8f7f0   464  movz x1, #0x5b88
0xffff8bd8f7f4   468  movk x1, #0xe2, lsl #16
0xffff8bd8f7f8   472  ldr x16, pc+352 (addr 0x0000ffff8bd8f958)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd8f7fc   476  blr x16
0xffff8bd8f800   480  str x0, [jssp, #24]
0xffff8bd8f804   484  ldr x16, pc+348 (addr 0x0000ffff8bd8f960)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd8f808   488  blr x16
0xffff8bd8f80c   492  ldr lr, [jssp, #16]
0xffff8bd8f810   496  ldp xzr, fp, [jssp], #24
0xffff8bd8f814   500  b #-0x1d4 (addr 0xffff8bd8f640)
0xffff8bd8f818   504  58000a7f       constant pool begin (num_const = 83)    ;; constant pool
0xffff8bd8f81c   508  d63f03e0       constant
0xffff8bd8f820   512  5f506149       constant
0xffff8bd8f824   516  00000000       constant
0xffff8bd8f828   520  26c04519       constant
0xffff8bd8f82c   524  00000000       constant
0xffff8bd8f830   528  26c04241       constant
0xffff8bd8f834   532  00000000       constant
0xffff8bd8f838   536  26c04241       constant
0xffff8bd8f83c   540  00000000       constant
0xffff8bd8f840   544  26c04241       constant
0xffff8bd8f844   548  00000000       constant
0xffff8bd8f848   552  26c04241       constant
0xffff8bd8f84c   556  00000000       constant
0xffff8bd8f850   560  26c04241       constant
0xffff8bd8f854   564  00000000       constant
0xffff8bd8f858   568  26c04241       constant
0xffff8bd8f85c   572  00000000       constant
0xffff8bd8f860   576  26c04241       constant
0xffff8bd8f864   580  00000000       constant
0xffff8bd8f868   584  26c04241       constant
0xffff8bd8f86c   588  00000000       constant
0xffff8bd8f870   592  26c04241       constant
0xffff8bd8f874   596  00000000       constant
0xffff8bd8f878   600  26c04241       constant
0xffff8bd8f87c   604  00000000       constant
0xffff8bd8f880   608  26c04241       constant
0xffff8bd8f884   612  00000000       constant
0xffff8bd8f888   616  26c04241       constant
0xffff8bd8f88c   620  00000000       constant
0xffff8bd8f890   624  26c04241       constant
0xffff8bd8f894   628  00000000       constant
0xffff8bd8f898   632  26c04241       constant
0xffff8bd8f89c   636  00000000       constant
0xffff8bd8f8a0   640  26c04241       constant
0xffff8bd8f8a4   644  00000000       constant
0xffff8bd8f8a8   648  26c04241       constant
0xffff8bd8f8ac   652  00000000       constant
0xffff8bd8f8b0   656  26c04241       constant
0xffff8bd8f8b4   660  00000000       constant
0xffff8bd8f8b8   664  26c04241       constant
0xffff8bd8f8bc   668  00000000       constant
0xffff8bd8f8c0   672  26c04241       constant
0xffff8bd8f8c4   676  00000000       constant
0xffff8bd8f8c8   680  26c04241       constant
0xffff8bd8f8cc   684  00000000       constant
0xffff8bd8f8d0   688  26c04241       constant
0xffff8bd8f8d4   692  00000000       constant
0xffff8bd8f8d8   696  26c04241       constant
0xffff8bd8f8dc   700  00000000       constant
0xffff8bd8f8e0   704  26c04241       constant
0xffff8bd8f8e4   708  00000000       constant
0xffff8bd8f8e8   712  26c04241       constant
0xffff8bd8f8ec   716  00000000       constant
0xffff8bd8f8f0   720  26c04241       constant
0xffff8bd8f8f4   724  00000000       constant
0xffff8bd8f8f8   728  26c04241       constant
0xffff8bd8f8fc   732  00000000       constant
0xffff8bd8f900   736  26c04241       constant
0xffff8bd8f904   740  00000000       constant
0xffff8bd8f908   744  26c04241       constant
0xffff8bd8f90c   748  00000000       constant
0xffff8bd8f910   752  26c04241       constant
0xffff8bd8f914   756  00000000       constant
0xffff8bd8f918   760  26c04241       constant
0xffff8bd8f91c   764  00000000       constant
0xffff8bd8f920   768  26c04241       constant
0xffff8bd8f924   772  00000000       constant
0xffff8bd8f928   776  26c04241       constant
0xffff8bd8f92c   780  00000000       constant
0xffff8bd8f930   784  26c04241       constant
0xffff8bd8f934   788  00000000       constant
0xffff8bd8f938   792  26c04241       constant
0xffff8bd8f93c   796  00000000       constant
0xffff8bd8f940   800  26c04241       constant
0xffff8bd8f944   804  00000000       constant
0xffff8bd8f948   808  26c04241       constant
0xffff8bd8f94c   812  00000000       constant
0xffff8bd8f950   816  8bd06820       constant
0xffff8bd8f954   820  0000ffff       constant
0xffff8bd8f958   824  8bd06260       constant
0xffff8bd8f95c   828  0000ffff       constant
0xffff8bd8f960   832  8bd068e0       constant
0xffff8bd8f964   836  0000ffff       constant


Safepoints (size = 21)
0xffff8bd8f800   480  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 47)
0xffff8bd8f640  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd8f658  embedded object  (0x26c04519 <the hole>)
0xffff8bd8f668  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f670  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f678  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f680  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f688  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f690  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f698  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6a0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6a8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6b0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6b8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6c0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6c8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6d0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6d8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6e0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6e8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6f0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f6f8  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f700  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f708  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f710  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f718  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f720  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f728  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f730  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f738  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f740  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f74c  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f758  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f764  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f770  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f77c  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f788  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f794  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f7a0  embedded object  (0x26c04241 <undefined>)
0xffff8bd8f7d4  code target (STUB)  (0xffff8bd06820)
0xffff8bd8f7f8  code target (STUB)  (0xffff8bd06260)
0xffff8bd8f804  code target (STUB)  (0xffff8bd068e0)
0xffff8bd8f818  constant pool (size 336)


kind = HANDLER
major_key = <NoCache>Stub
name = process
compiler = unknown
Instructions (size = 120)
0xffff8bd93300     0  sub csp, jssp, #0x8 (8)
0xffff8bd93304     4  str x3, [jssp, #-8]!
0xffff8bd93308     8  sub csp, jssp, #0x8 (8)
0xffff8bd9330c    12  str x0, [jssp, #-8]!
0xffff8bd93310    16  ldr x0, pc+80 (addr 0x0000ffff8bd93360)    ;; object: 0x26cc5d51 Cell for 0
0xffff8bd93314    20  ldur x0, [x0, #7]
0xffff8bd93318    24  cmp x0, #0x0 (0)
0xffff8bd9331c    28  b.ne #+0x2c (addr 0xffff8bd93348)
0xffff8bd93320    32  ldr x0, pc+72 (addr 0x0000ffff8bd93368)    ;; object: 0x26cd89f9 WeakCell for 0x26cc79b9 PropertyCell for 0x56592ce9 <a process with map 0x5f51c0f1>
0xffff8bd93324    36  ldur x0, [x0, #7]
0xffff8bd93328    40  tbz w0, #0, #+0x20 (addr 0xffff8bd93348)
0xffff8bd9332c    44  ldur x0, [x0, #15]
0xffff8bd93330    48  ldr x16, [x26, #88]
0xffff8bd93334    52  cmp x0, x16
0xffff8bd93338    56  b.eq #+0x10 (addr 0xffff8bd93348)
0xffff8bd9333c    60  add jssp, jssp, #0x10 (16)
0xffff8bd93340    64  ret
0xffff8bd93344    68  b #+0x14 (addr 0xffff8bd93358)
0xffff8bd93348    72  ldr x0, [jssp], #8
0xffff8bd9334c    76  ldr x3, [jssp], #8
0xffff8bd93350    80  ldr x16, pc+32 (addr 0x0000ffff8bd93370)    ;; code: BUILTIN
0xffff8bd93354    84  br x16
0xffff8bd93358    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd9335c    92  d63f03e0       constant
0xffff8bd93360    96  26cc5d51       constant
0xffff8bd93364   100  00000000       constant
0xffff8bd93368   104  26cd89f9       constant
0xffff8bd9336c   108  00000000       constant
0xffff8bd93370   112  8bd222e0       constant
0xffff8bd93374   116  0000ffff       constant


RelocInfo (size = 9)
0xffff8bd93310  embedded object  (0x26cc5d51 Cell for 0)
0xffff8bd93320  embedded object  (0x26cd89f9 WeakCell for 0x26cc79b9 PropertyCell for 0x56592ce9 <a process with map 0x5f51c0f1>)
0xffff8bd93350  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd93358  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = internal/util
compiler = unknown
Instructions (size = 184)
0xffff8bd933e0     0  sub csp, jssp, #0x8 (8)
0xffff8bd933e4     4  str x3, [jssp, #-8]!
0xffff8bd933e8     8  sub csp, jssp, #0x8 (8)
0xffff8bd933ec    12  str x4, [jssp, #-8]!
0xffff8bd933f0    16  ldr x3, pc+112 (addr 0x0000ffff8bd93460)    ;; object: 0x26c63e59 Cell for 0
0xffff8bd933f4    20  ldur x3, [x3, #7]
0xffff8bd933f8    24  cmp x3, #0x0 (0)
0xffff8bd933fc    28  b.ne #+0x44 (addr 0xffff8bd93440)
0xffff8bd93400    32  tbz w0, #0, #+0x40 (addr 0xffff8bd93440)
0xffff8bd93404    36  ldur x3, [x0, #-1]
0xffff8bd93408    40  ldr x4, pc+96 (addr 0x0000ffff8bd93468)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd9340c    44  ldur x4, [x4, #7]
0xffff8bd93410    48  cmp x3, x4
0xffff8bd93414    52  b.ne #+0x2c (addr 0xffff8bd93440)
0xffff8bd93418    56  ldr x5, pc+88 (addr 0x0000ffff8bd93470)    ;; object: 0x26cdacf1 WeakCell for 0x5f51f2c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd9341c    60  ldur x5, [x5, #7]
0xffff8bd93420    64  tbz w5, #0, #+0x20 (addr 0xffff8bd93440)
0xffff8bd93424    68  ldursw x4, [x5, #15]
0xffff8bd93428    72  tbnz w4, #23, #+0x18 (addr 0xffff8bd93440)
0xffff8bd9342c    76  ldr x4, [jssp], #8
0xffff8bd93430    80  ldr x3, [jssp], #8
0xffff8bd93434    84  ldr x2, pc+68 (addr 0x0000ffff8bd93478)    ;; object: 0x26cb9451 <String[13]: internal/util>
0xffff8bd93438    88  ldr x16, pc+72 (addr 0x0000ffff8bd93480)    ;; code: HANDLER, StoreTransitionStub, minor: 198662
0xffff8bd9343c    92  br x16
0xffff8bd93440    96  ldr x2, pc+72 (addr 0x0000ffff8bd93488)    ;; object: 0x26cb9451 <String[13]: internal/util>
0xffff8bd93444   100  ldr x4, [jssp], #8
0xffff8bd93448   104  ldr x3, [jssp], #8
0xffff8bd9344c   108  ldr x16, pc+68 (addr 0x0000ffff8bd93490)    ;; code: BUILTIN
0xffff8bd93450   112  br x16
0xffff8bd93454   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd93458   120  d63f03e0       constant
0xffff8bd9345c   124  d503201f       constant
0xffff8bd93460   128  26c63e59       constant
0xffff8bd93464   132  00000000       constant
0xffff8bd93468   136  26cc22b1       constant
0xffff8bd9346c   140  00000000       constant
0xffff8bd93470   144  26cdacf1       constant
0xffff8bd93474   148  00000000       constant
0xffff8bd93478   152  26cb9451       constant
0xffff8bd9347c   156  00000000       constant
0xffff8bd93480   160  8bd8c000       constant
0xffff8bd93484   164  0000ffff       constant
0xffff8bd93488   168  26cb9451       constant
0xffff8bd9348c   172  00000000       constant
0xffff8bd93490   176  8bd22420       constant
0xffff8bd93494   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bd933f0  embedded object  (0x26c63e59 Cell for 0)
0xffff8bd93408  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd93418  embedded object  (0x26cdacf1 WeakCell for 0x5f51f2c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd93434  embedded object  (0x26cb9451 <String[13]: internal/util>)
0xffff8bd93438  code target (HANDLER)  (0xffff8bd8c000)
0xffff8bd93440  embedded object  (0x26cb9451 <String[13]: internal/util>)
0xffff8bd9344c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd93454  constant pool (size 68)

kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 262145
name = CallICStub(args(1), NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff8bd93500     0  add x4, x2, x3, asr #29
0xffff8bd93504     4  ldur x4, [x4, #15]
0xffff8bd93508     8  ldur x5, [x4, #7]
0xffff8bd9350c    12  cmp x5, x1
0xffff8bd93510    16  b.ne #+0x2c (addr 0xffff8bd9353c)
0xffff8bd93514    20  tbz w1, #0, #+0x28 (addr 0xffff8bd9353c)
0xffff8bd93518    24  add x2, x2, x3, asr #29
0xffff8bd9351c    28  add x2, x2, #0x18 (24)
0xffff8bd93520    32  ldur x3, [x2, #-1]
0xffff8bd93524    36  movz x16, #0x200000000
0xffff8bd93528    40  add x3, x3, x16
0xffff8bd9352c    44  stur x3, [x2, #-1]
0xffff8bd93530    48  movz x0, #0x1
0xffff8bd93534    52  ldr x16, pc+372 (addr 0x0000ffff8bd936a8)    ;; code: BUILTIN
0xffff8bd93538    56  br x16
0xffff8bd9353c    60  ldr x16, [x26, #2400]
0xffff8bd93540    64  cmp x4, x16
0xffff8bd93544    68  b.eq #+0x78 (addr 0xffff8bd935bc)
0xffff8bd93548    72  ldur x5, [x4, #-1]
0xffff8bd9354c    76  ldr x16, [x26, #2736]
0xffff8bd93550    80  cmp x5, x16
0xffff8bd93554    84  b.ne #+0x40 (addr 0xffff8bd93594)
0xffff8bd93558    88  ldur x5, [cp, #39]
0xffff8bd9355c    92  ldur x5, [x5, #95]
0xffff8bd93560    96  cmp x1, x5
0xffff8bd93564   100  b.ne #+0xec (addr 0xffff8bd93650)
0xffff8bd93568   104  movz x0, #0x1
0xffff8bd9356c   108  add x2, x2, x3, asr #29
0xffff8bd93570   112  add x2, x2, #0x18 (24)
0xffff8bd93574   116  ldur x3, [x2, #-1]
0xffff8bd93578   120  movz x16, #0x200000000
0xffff8bd9357c   124  add x3, x3, x16
0xffff8bd93580   128  stur x3, [x2, #-1]
0xffff8bd93584   132  mov x2, x4
0xffff8bd93588   136  mov x3, x1
0xffff8bd9358c   140  ldr x16, pc+292 (addr 0x0000ffff8bd936b0)    ;; code: STUB, ArrayConstructorStub, minor: 2
0xffff8bd93590   144  br x16
0xffff8bd93594   148  ldr x16, [x26, #2568]
0xffff8bd93598   152  cmp x4, x16
0xffff8bd9359c   156  b.eq #+0xb4 (addr 0xffff8bd93650)
0xffff8bd935a0   160  ldur x5, [x4, #-1]
0xffff8bd935a4   164  ldrb w5, [x5, #11]
0xffff8bd935a8   168  cmp x5, #0xc9 (201)
0xffff8bd935ac   172  b.ne #+0xa4 (addr 0xffff8bd93650)
0xffff8bd935b0   176  add x4, x2, x3, asr #29
0xffff8bd935b4   180  ldr x5, [x26, #2400]
0xffff8bd935b8   184  stur x5, [x4, #15]
0xffff8bd935bc   188  movz x0, #0x1
0xffff8bd935c0   192  ldr x16, pc+248 (addr 0x0000ffff8bd936b8)    ;; code: BUILTIN
0xffff8bd935c4   196  br x16
0xffff8bd935c8   200  tbz w1, #0, #+0x88 (addr 0xffff8bd93650)
0xffff8bd935cc   204  ldur x5, [x1, #-1]
0xffff8bd935d0   208  ldrb w5, [x5, #11]
0xffff8bd935d4   212  cmp x5, #0xc9 (201)
0xffff8bd935d8   216  b.ne #+0x78 (addr 0xffff8bd93650)
0xffff8bd935dc   220  ldur x5, [cp, #39]
0xffff8bd935e0   224  ldur x5, [x5, #95]
0xffff8bd935e4   228  cmp x1, x5
0xffff8bd935e8   232  b.eq #+0x68 (addr 0xffff8bd93650)
0xffff8bd935ec   236  ldur x4, [x1, #39]
0xffff8bd935f0   240  ldur x4, [x4, #39]
0xffff8bd935f4   244  ldur x5, [cp, #39]
0xffff8bd935f8   248  cmp x4, x5
0xffff8bd935fc   252  b.ne #+0x54 (addr 0xffff8bd93650)
0xffff8bd93600   256  movz x5, #0x200000000
0xffff8bd93604   260  adds x4, x2, x3, asr #29
0xffff8bd93608   264  stur x5, [x4, #23]
0xffff8bd9360c   268  movz x16, #0xc00000000
0xffff8bd93610   272  sub csp, jssp, #0x10 (16)
0xffff8bd93614   276  stp fp, lr, [jssp, #-16]!
0xffff8bd93618   280  sub csp, jssp, #0x10 (16)
0xffff8bd9361c   284  str x16, [jssp, #-8]!
0xffff8bd93620   288  ldr x17, pc+160 (addr 0x0000ffff8bd936c0)    ;; object: 0xffff8bd934a1 <Code: CALL_IC>
0xffff8bd93624   292  sub csp, jssp, #0x10 (16)
0xffff8bd93628   296  str x17, [jssp, #-8]!
0xffff8bd9362c   300  add fp, jssp, #0x10 (16)
0xffff8bd93630   304  sub csp, jssp, #0x8 (8)
0xffff8bd93634   308  str x1, [jssp, #-8]!
0xffff8bd93638   312  ldr x16, pc+144 (addr 0x0000ffff8bd936c8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bd9363c   316  blr x16
0xffff8bd93640   320  ldr x1, [jssp], #8
0xffff8bd93644   324  mov jssp, fp
0xffff8bd93648   328  ldp fp, lr, [jssp], #16
0xffff8bd9364c   332  b #-0x11c (addr 0xffff8bd93530)
0xffff8bd93650   336  movz x16, #0xc00000000
0xffff8bd93654   340  sub csp, jssp, #0x10 (16)
0xffff8bd93658   344  stp fp, lr, [jssp, #-16]!
0xffff8bd9365c   348  sub csp, jssp, #0x10 (16)
0xffff8bd93660   352  str x16, [jssp, #-8]!
0xffff8bd93664   356  ldr x17, pc+108 (addr 0x0000ffff8bd936d0)    ;; object: 0xffff8bd934a1 <Code: CALL_IC>
0xffff8bd93668   360  sub csp, jssp, #0x10 (16)
0xffff8bd9366c   364  str x17, [jssp, #-8]!
0xffff8bd93670   368  add fp, jssp, #0x10 (16)
0xffff8bd93674   372  sub csp, jssp, #0x18 (24)
0xffff8bd93678   376  stp x3, x2, [jssp, #-24]!
0xffff8bd9367c   380  str x1, [jssp, #16]
0xffff8bd93680   384  movz x0, #0x3
0xffff8bd93684   388  ldr x1, pc+84 (addr 0x0000ffff8bd936d8)    ;; external reference (Runtime::CallIC_Miss)
0xffff8bd93688   392  ldr x16, pc+88 (addr 0x0000ffff8bd936e0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd9368c   396  blr x16
0xffff8bd93690   400  mov x1, x0
0xffff8bd93694   404  mov jssp, fp
0xffff8bd93698   408  ldp fp, lr, [jssp], #16
0xffff8bd9369c   412  b #-0xe0 (addr 0xffff8bd935bc)
0xffff8bd936a0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bd936a4   420  d63f03e0       constant
0xffff8bd936a8   424  8bd1e280       constant
0xffff8bd936ac   428  0000ffff       constant
0xffff8bd936b0   432  8bd30b00       constant
0xffff8bd936b4   436  0000ffff       constant
0xffff8bd936b8   440  8bd1f560       constant
0xffff8bd936bc   444  0000ffff       constant
0xffff8bd936c0   448  8bd934a1       constant
0xffff8bd936c4   452  0000ffff       constant
0xffff8bd936c8   456  8bd0ddc0       constant
0xffff8bd936cc   460  0000ffff       constant
0xffff8bd936d0   464  8bd934a1       constant
0xffff8bd936d4   468  0000ffff       constant
0xffff8bd936d8   472  00c86928       constant
0xffff8bd936dc   476  00000000       constant
0xffff8bd936e0   480  8bd06060       constant
0xffff8bd936e4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8bd93534  code target (BUILTIN)  (0xffff8bd1e280)
0xffff8bd9358c  code target (STUB)  (0xffff8bd30b00)
0xffff8bd935c0  code target (BUILTIN)  (0xffff8bd1f560)
0xffff8bd93620  embedded object  (0xffff8bd934a1 <Code: CALL_IC>)
0xffff8bd93638  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bd93664  embedded object  (0xffff8bd934a1 <Code: CALL_IC>)
0xffff8bd93684  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8bd93688  code target (STUB)  (0xffff8bd06060)
0xffff8bd936a0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 262145
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8bd93760     0  ldur x2, [fp, #-16]
0xffff8bd93764     4  ldur x2, [x2, #31]
0xffff8bd93768     8  ldur x2, [x2, #87]
0xffff8bd9376c    12  ldr x16, pc+20 (addr 0x0000ffff8bd93780)    ;; code: CALL_IC, GENERIC
0xffff8bd93770    16  br x16
0xffff8bd93774    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd93778    24  d63f03e0       constant
0xffff8bd9377c    28  d503201f       constant
0xffff8bd93780    32  8bd93500       constant
0xffff8bd93784    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8bd9376c  code target (CALL_IC)  (0xffff8bd93500)
0xffff8bd93774  constant pool (size 20)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 32
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 152)
0xffff8bd94840     0  tbz w0, #0, #+0x50 (addr 0xffff8bd94890)
0xffff8bd94844     4  ldur x2, [x0, #-1]
0xffff8bd94848     8  ldrb w1, [x2, #11]
0xffff8bd9484c    12  cmp x1, #0x80 (128)
0xffff8bd94850    16  b.ge #+0x10 (addr 0xffff8bd94860)
0xffff8bd94854    20  ldur x1, [x0, #15]
0xffff8bd94858    24  cbz x1, #+0xc (addr 0xffff8bd94864)
0xffff8bd9485c    28  b #+0x10 (addr 0xffff8bd9486c)
0xffff8bd94860    32  b #+0x30 (addr 0xffff8bd94890)
0xffff8bd94864    36  ldr x0, pc+28 (addr 0x0000ffff8bd94880)    ;; object: 0x26c042b1 <false>
0xffff8bd94868    40  ret
0xffff8bd9486c    44  ldr x0, pc+28 (addr 0x0000ffff8bd94888)    ;; object: 0x26c04281 <true>
0xffff8bd94870    48  ret
0xffff8bd94874    52  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd94878    56  d63f03e0       constant
0xffff8bd9487c    60  d503201f       constant
0xffff8bd94880    64  26c042b1       constant
0xffff8bd94884    68  00000000       constant
0xffff8bd94888    72  26c04281       constant
0xffff8bd9488c    76  00000000       constant
0xffff8bd94890    80  movz x16, #0x0
0xffff8bd94894    84  sub csp, jssp, #0x10 (16)
0xffff8bd94898    88  stp fp, lr, [jssp, #-16]!
0xffff8bd9489c    92  bl #+0x4 (addr 0xffff8bd948a0)
0xffff8bd948a0    96  movz x17, #0xa00000000
0xffff8bd948a4   100  sub csp, jssp, #0x10 (16)
0xffff8bd948a8   104  stp x17, cp, [jssp, #-16]!
0xffff8bd948ac   108  add fp, jssp, #0x10 (16)
0xffff8bd948b0   112  ldr x17, pc+24 (addr 0x0000ffff8bd948c8)    ;; lazy deoptimization bailout 0
0xffff8bd948b4   116  add x17, x17, x16
0xffff8bd948b8   120  br x17
0xffff8bd948bc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd948c0   128  d63f03e0       constant
0xffff8bd948c4   132  d503201f       constant
0xffff8bd948c8   136  8bb06000       constant
0xffff8bd948cc   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd94864  embedded object  (0x26c042b1 <false>)
0xffff8bd9486c  embedded object  (0x26c04281 <true>)
0xffff8bd94874  constant pool (size 28)
0xffff8bd948b0  runtime entry
0xffff8bd948bc  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 32
type = NORMAL
name = ToBooleanICStub(String)
compiler = crankshaft
Instructions (size = 152)
0xffff8bd94840     0  tbz w0, #0, #+0x50 (addr 0xffff8bd94890)
0xffff8bd94844     4  ldur x2, [x0, #-1]
0xffff8bd94848     8  ldrb w1, [x2, #11]
0xffff8bd9484c    12  cmp x1, #0x80 (128)
0xffff8bd94850    16  b.ge #+0x10 (addr 0xffff8bd94860)
0xffff8bd94854    20  ldur x1, [x0, #15]
0xffff8bd94858    24  cbz x1, #+0xc (addr 0xffff8bd94864)
0xffff8bd9485c    28  b #+0x10 (addr 0xffff8bd9486c)
0xffff8bd94860    32  b #+0x30 (addr 0xffff8bd94890)
0xffff8bd94864    36  ldr x0, pc+28 (addr 0x0000ffff8bd94880)    ;; object: 0x26c042b1 <false>
0xffff8bd94868    40  ret
0xffff8bd9486c    44  ldr x0, pc+28 (addr 0x0000ffff8bd94888)    ;; object: 0x26c04281 <true>
0xffff8bd94870    48  ret
0xffff8bd94874    52  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd94878    56  d63f03e0       constant
0xffff8bd9487c    60  d503201f       constant
0xffff8bd94880    64  26c042b1       constant
0xffff8bd94884    68  00000000       constant
0xffff8bd94888    72  26c04281       constant
0xffff8bd9488c    76  00000000       constant
0xffff8bd94890    80  movz x16, #0x0
0xffff8bd94894    84  sub csp, jssp, #0x10 (16)
0xffff8bd94898    88  stp fp, lr, [jssp, #-16]!
0xffff8bd9489c    92  bl #+0x4 (addr 0xffff8bd948a0)
0xffff8bd948a0    96  movz x17, #0xa00000000
0xffff8bd948a4   100  sub csp, jssp, #0x10 (16)
0xffff8bd948a8   104  stp x17, cp, [jssp, #-16]!
0xffff8bd948ac   108  add fp, jssp, #0x10 (16)
0xffff8bd948b0   112  ldr x17, pc+24 (addr 0x0000ffff8bd948c8)    ;; lazy deoptimization bailout 0
0xffff8bd948b4   116  add x17, x17, x16
0xffff8bd948b8   120  br x17
0xffff8bd948bc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd948c0   128  d63f03e0       constant
0xffff8bd948c4   132  d503201f       constant
0xffff8bd948c8   136  8bb06000       constant
0xffff8bd948cc   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd94864  embedded object  (0x26c042b1 <false>)
0xffff8bd9486c  embedded object  (0x26c04281 <true>)
0xffff8bd94874  constant pool (size 28)
0xffff8bd948b0  runtime entry
0xffff8bd948bc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = Symbol
compiler = unknown
Instructions (size = 120)
0xffff8bd94940     0  sub csp, jssp, #0x8 (8)
0xffff8bd94944     4  str x3, [jssp, #-8]!
0xffff8bd94948     8  sub csp, jssp, #0x8 (8)
0xffff8bd9494c    12  str x0, [jssp, #-8]!
0xffff8bd94950    16  ldr x0, pc+80 (addr 0x0000ffff8bd949a0)    ;; object: 0x26cc5d51 Cell for 0
0xffff8bd94954    20  ldur x0, [x0, #7]
0xffff8bd94958    24  cmp x0, #0x0 (0)
0xffff8bd9495c    28  b.ne #+0x2c (addr 0xffff8bd94988)
0xffff8bd94960    32  ldr x0, pc+72 (addr 0x0000ffff8bd949a8)    ;; object: 0x26cdd079 WeakCell for 0x26c42b39 PropertyCell for 0x26c42ad1 <JS Function Symbol (SharedFunctionInfo 0x26c42a29)>
0xffff8bd94964    36  ldur x0, [x0, #7]
0xffff8bd94968    40  tbz w0, #0, #+0x20 (addr 0xffff8bd94988)
0xffff8bd9496c    44  ldur x0, [x0, #15]
0xffff8bd94970    48  ldr x16, [x26, #88]
0xffff8bd94974    52  cmp x0, x16
0xffff8bd94978    56  b.eq #+0x10 (addr 0xffff8bd94988)
0xffff8bd9497c    60  add jssp, jssp, #0x10 (16)
0xffff8bd94980    64  ret
0xffff8bd94984    68  b #+0x14 (addr 0xffff8bd94998)
0xffff8bd94988    72  ldr x0, [jssp], #8
0xffff8bd9498c    76  ldr x3, [jssp], #8
0xffff8bd94990    80  ldr x16, pc+32 (addr 0x0000ffff8bd949b0)    ;; code: BUILTIN
0xffff8bd94994    84  br x16
0xffff8bd94998    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd9499c    92  d63f03e0       constant
0xffff8bd949a0    96  26cc5d51       constant
0xffff8bd949a4   100  00000000       constant
0xffff8bd949a8   104  26cdd079       constant
0xffff8bd949ac   108  00000000       constant
0xffff8bd949b0   112  8bd222e0       constant
0xffff8bd949b4   116  0000ffff       constant


RelocInfo (size = 9)
0xffff8bd94950  embedded object  (0x26cc5d51 Cell for 0)
0xffff8bd94960  embedded object  (0x26cdd079 WeakCell for 0x26c42b39 PropertyCell for 0x26c42ad1 <JS Function Symbol (SharedFunctionInfo 0x26c42a29)>)
0xffff8bd94990  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd94998  constant pool (size 32)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff8bd94a20     0  tbz w0, #0, #+0x50 (addr 0xffff8bd94a70)
0xffff8bd94a24     4  mov x2, x0
0xffff8bd94a28     8  stur x2, [x1, #47]
0xffff8bd94a2c    12  add x3, x1, #0x2f (47)
0xffff8bd94a30    16  and x2, x2, #0xfffffffffff00000
0xffff8bd94a34    20  ldr x2, [x2, #8]
0xffff8bd94a38    24  tbz w2, #1, #+0x24 (addr 0xffff8bd94a5c)
0xffff8bd94a3c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd94a40    32  ldr x2, [x2, #8]
0xffff8bd94a44    36  tbz w2, #2, #+0x18 (addr 0xffff8bd94a5c)
0xffff8bd94a48    40  sub csp, jssp, #0x8 (8)
0xffff8bd94a4c    44  str lr, [jssp, #-8]!
0xffff8bd94a50    48  ldr x16, pc+24 (addr 0x0000ffff8bd94a68)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd94a54    52  blr x16
0xffff8bd94a58    56  ldr lr, [jssp], #8
0xffff8bd94a5c    60  ret
0xffff8bd94a60    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd94a64    68  d63f03e0       constant
0xffff8bd94a68    72  8bd170c0       constant
0xffff8bd94a6c    76  0000ffff       constant
0xffff8bd94a70    80  movz x16, #0x0
0xffff8bd94a74    84  sub csp, jssp, #0x10 (16)
0xffff8bd94a78    88  stp fp, lr, [jssp, #-16]!
0xffff8bd94a7c    92  bl #+0x4 (addr 0xffff8bd94a80)
0xffff8bd94a80    96  movz x17, #0xa00000000
0xffff8bd94a84   100  sub csp, jssp, #0x10 (16)
0xffff8bd94a88   104  stp x17, cp, [jssp, #-16]!
0xffff8bd94a8c   108  add fp, jssp, #0x10 (16)
0xffff8bd94a90   112  ldr x17, pc+24 (addr 0x0000ffff8bd94aa8)    ;; lazy deoptimization bailout 0
0xffff8bd94a94   116  add x17, x17, x16
0xffff8bd94a98   120  br x17
0xffff8bd94a9c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd94aa0   128  d63f03e0       constant
0xffff8bd94aa4   132  d503201f       constant
0xffff8bd94aa8   136  8bb06000       constant
0xffff8bd94aac   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bd94a50  code target (STUB)  (0xffff8bd170c0)
0xffff8bd94a60  constant pool (size 16)
0xffff8bd94a90  runtime entry
0xffff8bd94a9c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff8bd94a20     0  tbz w0, #0, #+0x50 (addr 0xffff8bd94a70)
0xffff8bd94a24     4  mov x2, x0
0xffff8bd94a28     8  stur x2, [x1, #47]
0xffff8bd94a2c    12  add x3, x1, #0x2f (47)
0xffff8bd94a30    16  and x2, x2, #0xfffffffffff00000
0xffff8bd94a34    20  ldr x2, [x2, #8]
0xffff8bd94a38    24  tbz w2, #1, #+0x24 (addr 0xffff8bd94a5c)
0xffff8bd94a3c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd94a40    32  ldr x2, [x2, #8]
0xffff8bd94a44    36  tbz w2, #2, #+0x18 (addr 0xffff8bd94a5c)
0xffff8bd94a48    40  sub csp, jssp, #0x8 (8)
0xffff8bd94a4c    44  str lr, [jssp, #-8]!
0xffff8bd94a50    48  ldr x16, pc+24 (addr 0x0000ffff8bd94a68)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd94a54    52  blr x16
0xffff8bd94a58    56  ldr lr, [jssp], #8
0xffff8bd94a5c    60  ret
0xffff8bd94a60    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd94a64    68  d63f03e0       constant
0xffff8bd94a68    72  8bd170c0       constant
0xffff8bd94a6c    76  0000ffff       constant
0xffff8bd94a70    80  movz x16, #0x0
0xffff8bd94a74    84  sub csp, jssp, #0x10 (16)
0xffff8bd94a78    88  stp fp, lr, [jssp, #-16]!
0xffff8bd94a7c    92  bl #+0x4 (addr 0xffff8bd94a80)
0xffff8bd94a80    96  movz x17, #0xa00000000
0xffff8bd94a84   100  sub csp, jssp, #0x10 (16)
0xffff8bd94a88   104  stp x17, cp, [jssp, #-16]!
0xffff8bd94a8c   108  add fp, jssp, #0x10 (16)
0xffff8bd94a90   112  ldr x17, pc+24 (addr 0x0000ffff8bd94aa8)    ;; lazy deoptimization bailout 0
0xffff8bd94a94   116  add x17, x17, x16
0xffff8bd94a98   120  br x17
0xffff8bd94a9c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd94aa0   128  d63f03e0       constant
0xffff8bd94aa4   132  d503201f       constant
0xffff8bd94aa8   136  8bb06000       constant
0xffff8bd94aac   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bd94a50  code target (STUB)  (0xffff8bd170c0)
0xffff8bd94a60  constant pool (size 16)
0xffff8bd94a90  runtime entry
0xffff8bd94a9c  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 344)
0xffff8bd951e0     0  ldur x5, [x1, #15]
0xffff8bd951e4     4  ldur w6, [x5, #11]
0xffff8bd951e8     8  ldur x16, [x1, #23]
0xffff8bd951ec    12  ldur x16, [x16, #39]
0xffff8bd951f0    16  tst x16, #0x8
0xffff8bd951f4    20  b.ne #+0xcc (addr 0xffff8bd952c0)
0xffff8bd951f8    24  ldur x7, [x5, #23]
0xffff8bd951fc    28  ldur x5, [x5, #15]
0xffff8bd95200    32  add x5, x7, x5
0xffff8bd95204    36  tbnz w2, #0, #+0x20 (addr 0xffff8bd95224)
0xffff8bd95208    40  asr x8, x2, #32
0xffff8bd9520c    44  cmp w8, w6
0xffff8bd95210    48  b.hs #+0xc0 (addr 0xffff8bd952d0)
0xffff8bd95214    52  tbnz w0, #0, #+0x38 (addr 0xffff8bd9524c)
0xffff8bd95218    56  asr x7, x0, #32
0xffff8bd9521c    60  str w7, [x5, w8, sxtw #2]
0xffff8bd95220    64  ret
0xffff8bd95224    68  ldur x16, [x2, #-1]
0xffff8bd95228    72  ldr x17, [x26, #120]
0xffff8bd9522c    76  cmp x16, x17
0xffff8bd95230    80  b.ne #+0xb0 (addr 0xffff8bd952e0)
0xffff8bd95234    84  ldur d29, [x2, #7]
0xffff8bd95238    88  fcvtzs w8, d29
0xffff8bd9523c    92  scvtf d0, w8
0xffff8bd95240    96  fcmp d29, d0
0xffff8bd95244   100  b.ne #+0x9c (addr 0xffff8bd952e0)
0xffff8bd95248   104  b #-0x3c (addr 0xffff8bd9520c)
0xffff8bd9524c   108  ldur x16, [x0, #-1]
0xffff8bd95250   112  ldr x17, [x26, #120]
0xffff8bd95254   116  cmp x16, x17
0xffff8bd95258   120  b.ne #+0x30 (addr 0xffff8bd95288)
0xffff8bd9525c   124  ldur d30, [x0, #7]
0xffff8bd95260   128  fcvtzs x7, d30
0xffff8bd95264   132  cmp x7, #0x1 (1)
0xffff8bd95268   136  ccmn x7, #1, #nzcV, vc
0xffff8bd9526c   140  b.vc #+0x18 (addr 0xffff8bd95284)
0xffff8bd95270   144  sub csp, jssp, #0x8 (8)
0xffff8bd95274   148  str lr, [jssp, #-8]!
0xffff8bd95278   152  ldr x16, pc+64 (addr 0x0000ffff8bd952b8)    ;; code: STUB, DoubleToIStub, minor: 127424
0xffff8bd9527c   156  blr x16
0xffff8bd95280   160  ldr lr, [jssp], #8
0xffff8bd95284   164  b #+0x24 (addr 0xffff8bd952a8)
0xffff8bd95288   168  ldp x7, x6, [x26, #64]
0xffff8bd9528c   172  cmp x0, x7
0xffff8bd95290   176  cset x7, eq
0xffff8bd95294   180  ccmp x0, x6, #nZcv, ne
0xffff8bd95298   184  b.eq #+0x10 (addr 0xffff8bd952a8)
0xffff8bd9529c   188  ldr x16, [x26, #40]
0xffff8bd952a0   192  cmp x0, x16
0xffff8bd952a4   196  b.ne #+0x4c (addr 0xffff8bd952f0)
0xffff8bd952a8   200  b #-0x8c (addr 0xffff8bd9521c)
0xffff8bd952ac   204  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd952b0   208  d63f03e0       constant
0xffff8bd952b4   212  d503201f       constant
0xffff8bd952b8   216  8bd4b6c0       constant
0xffff8bd952bc   220  0000ffff       constant
0xffff8bd952c0   224  movz x16, #0x0
0xffff8bd952c4   228  sub csp, jssp, #0x10 (16)
0xffff8bd952c8   232  stp fp, lr, [jssp, #-16]!
0xffff8bd952cc   236  bl #+0x34 (addr 0xffff8bd95300)
0xffff8bd952d0   240  movz x16, #0x8
0xffff8bd952d4   244  sub csp, jssp, #0x10 (16)
0xffff8bd952d8   248  stp fp, lr, [jssp, #-16]!
0xffff8bd952dc   252  bl #+0x24 (addr 0xffff8bd95300)
0xffff8bd952e0   256  movz x16, #0x10
0xffff8bd952e4   260  sub csp, jssp, #0x10 (16)
0xffff8bd952e8   264  stp fp, lr, [jssp, #-16]!
0xffff8bd952ec   268  bl #+0x14 (addr 0xffff8bd95300)
0xffff8bd952f0   272  movz x16, #0x18
0xffff8bd952f4   276  sub csp, jssp, #0x10 (16)
0xffff8bd952f8   280  stp fp, lr, [jssp, #-16]!
0xffff8bd952fc   284  bl #+0x4 (addr 0xffff8bd95300)
0xffff8bd95300   288  movz x17, #0xa00000000
0xffff8bd95304   292  sub csp, jssp, #0x10 (16)
0xffff8bd95308   296  stp x17, cp, [jssp, #-16]!
0xffff8bd9530c   300  add fp, jssp, #0x10 (16)
0xffff8bd95310   304  ldr x17, pc+24 (addr 0x0000ffff8bd95328)    ;; lazy deoptimization bailout 0
0xffff8bd95314   308  add x17, x17, x16
0xffff8bd95318   312  br x17
0xffff8bd9531c   316  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd95320   320  d63f03e0       constant
0xffff8bd95324   324  d503201f       constant
0xffff8bd95328   328  8bb06000       constant
0xffff8bd9532c   332  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff8bd95278  code target (STUB)  (0xffff8bd4b6c0)
0xffff8bd952ac  constant pool (size 20)
0xffff8bd95310  runtime entry
0xffff8bd9531c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFastElementStub
name = StoreFastElementStub
compiler = crankshaft
Instructions (size = 344)
0xffff8bd951e0     0  ldur x5, [x1, #15]
0xffff8bd951e4     4  ldur w6, [x5, #11]
0xffff8bd951e8     8  ldur x16, [x1, #23]
0xffff8bd951ec    12  ldur x16, [x16, #39]
0xffff8bd951f0    16  tst x16, #0x8
0xffff8bd951f4    20  b.ne #+0xcc (addr 0xffff8bd952c0)
0xffff8bd951f8    24  ldur x7, [x5, #23]
0xffff8bd951fc    28  ldur x5, [x5, #15]
0xffff8bd95200    32  add x5, x7, x5
0xffff8bd95204    36  tbnz w2, #0, #+0x20 (addr 0xffff8bd95224)
0xffff8bd95208    40  asr x8, x2, #32
0xffff8bd9520c    44  cmp w8, w6
0xffff8bd95210    48  b.hs #+0xc0 (addr 0xffff8bd952d0)
0xffff8bd95214    52  tbnz w0, #0, #+0x38 (addr 0xffff8bd9524c)
0xffff8bd95218    56  asr x7, x0, #32
0xffff8bd9521c    60  str w7, [x5, w8, sxtw #2]
0xffff8bd95220    64  ret
0xffff8bd95224    68  ldur x16, [x2, #-1]
0xffff8bd95228    72  ldr x17, [x26, #120]
0xffff8bd9522c    76  cmp x16, x17
0xffff8bd95230    80  b.ne #+0xb0 (addr 0xffff8bd952e0)
0xffff8bd95234    84  ldur d29, [x2, #7]
0xffff8bd95238    88  fcvtzs w8, d29
0xffff8bd9523c    92  scvtf d0, w8
0xffff8bd95240    96  fcmp d29, d0
0xffff8bd95244   100  b.ne #+0x9c (addr 0xffff8bd952e0)
0xffff8bd95248   104  b #-0x3c (addr 0xffff8bd9520c)
0xffff8bd9524c   108  ldur x16, [x0, #-1]
0xffff8bd95250   112  ldr x17, [x26, #120]
0xffff8bd95254   116  cmp x16, x17
0xffff8bd95258   120  b.ne #+0x30 (addr 0xffff8bd95288)
0xffff8bd9525c   124  ldur d30, [x0, #7]
0xffff8bd95260   128  fcvtzs x7, d30
0xffff8bd95264   132  cmp x7, #0x1 (1)
0xffff8bd95268   136  ccmn x7, #1, #nzcV, vc
0xffff8bd9526c   140  b.vc #+0x18 (addr 0xffff8bd95284)
0xffff8bd95270   144  sub csp, jssp, #0x8 (8)
0xffff8bd95274   148  str lr, [jssp, #-8]!
0xffff8bd95278   152  ldr x16, pc+64 (addr 0x0000ffff8bd952b8)    ;; code: STUB, DoubleToIStub, minor: 127424
0xffff8bd9527c   156  blr x16
0xffff8bd95280   160  ldr lr, [jssp], #8
0xffff8bd95284   164  b #+0x24 (addr 0xffff8bd952a8)
0xffff8bd95288   168  ldp x7, x6, [x26, #64]
0xffff8bd9528c   172  cmp x0, x7
0xffff8bd95290   176  cset x7, eq
0xffff8bd95294   180  ccmp x0, x6, #nZcv, ne
0xffff8bd95298   184  b.eq #+0x10 (addr 0xffff8bd952a8)
0xffff8bd9529c   188  ldr x16, [x26, #40]
0xffff8bd952a0   192  cmp x0, x16
0xffff8bd952a4   196  b.ne #+0x4c (addr 0xffff8bd952f0)
0xffff8bd952a8   200  b #-0x8c (addr 0xffff8bd9521c)
0xffff8bd952ac   204  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd952b0   208  d63f03e0       constant
0xffff8bd952b4   212  d503201f       constant
0xffff8bd952b8   216  8bd4b6c0       constant
0xffff8bd952bc   220  0000ffff       constant
0xffff8bd952c0   224  movz x16, #0x0
0xffff8bd952c4   228  sub csp, jssp, #0x10 (16)
0xffff8bd952c8   232  stp fp, lr, [jssp, #-16]!
0xffff8bd952cc   236  bl #+0x34 (addr 0xffff8bd95300)
0xffff8bd952d0   240  movz x16, #0x8
0xffff8bd952d4   244  sub csp, jssp, #0x10 (16)
0xffff8bd952d8   248  stp fp, lr, [jssp, #-16]!
0xffff8bd952dc   252  bl #+0x24 (addr 0xffff8bd95300)
0xffff8bd952e0   256  movz x16, #0x10
0xffff8bd952e4   260  sub csp, jssp, #0x10 (16)
0xffff8bd952e8   264  stp fp, lr, [jssp, #-16]!
0xffff8bd952ec   268  bl #+0x14 (addr 0xffff8bd95300)
0xffff8bd952f0   272  movz x16, #0x18
0xffff8bd952f4   276  sub csp, jssp, #0x10 (16)
0xffff8bd952f8   280  stp fp, lr, [jssp, #-16]!
0xffff8bd952fc   284  bl #+0x4 (addr 0xffff8bd95300)
0xffff8bd95300   288  movz x17, #0xa00000000
0xffff8bd95304   292  sub csp, jssp, #0x10 (16)
0xffff8bd95308   296  stp x17, cp, [jssp, #-16]!
0xffff8bd9530c   300  add fp, jssp, #0x10 (16)
0xffff8bd95310   304  ldr x17, pc+24 (addr 0x0000ffff8bd95328)    ;; lazy deoptimization bailout 0
0xffff8bd95314   308  add x17, x17, x16
0xffff8bd95318   312  br x17
0xffff8bd9531c   316  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd95320   320  d63f03e0       constant
0xffff8bd95324   324  d503201f       constant
0xffff8bd95328   328  8bb06000       constant
0xffff8bd9532c   332  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 19)
0xffff8bd95278  code target (STUB)  (0xffff8bd4b6c0)
0xffff8bd952ac  constant pool (size 20)
0xffff8bd95310  runtime entry
0xffff8bd9531c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = Uint8Array
compiler = unknown
Instructions (size = 120)
0xffff8bd959e0     0  sub csp, jssp, #0x8 (8)
0xffff8bd959e4     4  str x3, [jssp, #-8]!
0xffff8bd959e8     8  sub csp, jssp, #0x8 (8)
0xffff8bd959ec    12  str x0, [jssp, #-8]!
0xffff8bd959f0    16  ldr x0, pc+80 (addr 0x0000ffff8bd95a40)    ;; object: 0x26cc5d51 Cell for 0
0xffff8bd959f4    20  ldur x0, [x0, #7]
0xffff8bd959f8    24  cmp x0, #0x0 (0)
0xffff8bd959fc    28  b.ne #+0x2c (addr 0xffff8bd95a28)
0xffff8bd95a00    32  ldr x0, pc+72 (addr 0x0000ffff8bd95a48)    ;; object: 0x26cdf5c9 WeakCell for 0x26c48251 PropertyCell for 0x26c481e9 <JS Function Uint8Array (SharedFunctionInfo 0x26c48141)>
0xffff8bd95a04    36  ldur x0, [x0, #7]
0xffff8bd95a08    40  tbz w0, #0, #+0x20 (addr 0xffff8bd95a28)
0xffff8bd95a0c    44  ldur x0, [x0, #15]
0xffff8bd95a10    48  ldr x16, [x26, #88]
0xffff8bd95a14    52  cmp x0, x16
0xffff8bd95a18    56  b.eq #+0x10 (addr 0xffff8bd95a28)
0xffff8bd95a1c    60  add jssp, jssp, #0x10 (16)
0xffff8bd95a20    64  ret
0xffff8bd95a24    68  b #+0x14 (addr 0xffff8bd95a38)
0xffff8bd95a28    72  ldr x0, [jssp], #8
0xffff8bd95a2c    76  ldr x3, [jssp], #8
0xffff8bd95a30    80  ldr x16, pc+32 (addr 0x0000ffff8bd95a50)    ;; code: BUILTIN
0xffff8bd95a34    84  br x16
0xffff8bd95a38    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd95a3c    92  d63f03e0       constant
0xffff8bd95a40    96  26cc5d51       constant
0xffff8bd95a44   100  00000000       constant
0xffff8bd95a48   104  26cdf5c9       constant
0xffff8bd95a4c   108  00000000       constant
0xffff8bd95a50   112  8bd222e0       constant
0xffff8bd95a54   116  0000ffff       constant


RelocInfo (size = 9)
0xffff8bd959f0  embedded object  (0x26cc5d51 Cell for 0)
0xffff8bd95a00  embedded object  (0x26cdf5c9 WeakCell for 0x26c48251 PropertyCell for 0x26c481e9 <JS Function Uint8Array (SharedFunctionInfo 0x26c48141)>)
0xffff8bd95a30  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd95a38  constant pool (size 32)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bd95ac0     0  ldur x0, [x1, #47]
0xffff8bd95ac4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bd95ac0     0  ldur x0, [x1, #47]
0xffff8bd95ac4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 17
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bd95b40     0  ldr x16, [x26, #40]
0xffff8bd95b44     4  cmp x0, x16
0xffff8bd95b48     8  b.eq #+0x24 (addr 0xffff8bd95b6c)
0xffff8bd95b4c    12  tbz w0, #0, #+0x4c (addr 0xffff8bd95b98)
0xffff8bd95b50    16  ldur x2, [x0, #-1]
0xffff8bd95b54    20  ldrb w1, [x2, #12]
0xffff8bd95b58    24  tbnz w1, #4, #+0x14 (addr 0xffff8bd95b6c)
0xffff8bd95b5c    28  ldrb w1, [x2, #11]
0xffff8bd95b60    32  cmp x1, #0xb1 (177)
0xffff8bd95b64    36  b.ge #+0x10 (addr 0xffff8bd95b74)
0xffff8bd95b68    40  b #+0x30 (addr 0xffff8bd95b98)
0xffff8bd95b6c    44  ldr x0, pc+28 (addr 0x0000ffff8bd95b88)    ;; object: 0x26c042b1 <false>
0xffff8bd95b70    48  ret
0xffff8bd95b74    52  ldr x0, pc+28 (addr 0x0000ffff8bd95b90)    ;; object: 0x26c04281 <true>
0xffff8bd95b78    56  ret
0xffff8bd95b7c    60  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd95b80    64  d63f03e0       constant
0xffff8bd95b84    68  d503201f       constant
0xffff8bd95b88    72  26c042b1       constant
0xffff8bd95b8c    76  00000000       constant
0xffff8bd95b90    80  26c04281       constant
0xffff8bd95b94    84  00000000       constant
0xffff8bd95b98    88  movz x16, #0x0
0xffff8bd95b9c    92  sub csp, jssp, #0x10 (16)
0xffff8bd95ba0    96  stp fp, lr, [jssp, #-16]!
0xffff8bd95ba4   100  bl #+0x4 (addr 0xffff8bd95ba8)
0xffff8bd95ba8   104  movz x17, #0xa00000000
0xffff8bd95bac   108  sub csp, jssp, #0x10 (16)
0xffff8bd95bb0   112  stp x17, cp, [jssp, #-16]!
0xffff8bd95bb4   116  add fp, jssp, #0x10 (16)
0xffff8bd95bb8   120  ldr x17, pc+24 (addr 0x0000ffff8bd95bd0)    ;; lazy deoptimization bailout 0
0xffff8bd95bbc   124  add x17, x17, x16
0xffff8bd95bc0   128  br x17
0xffff8bd95bc4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd95bc8   136  d63f03e0       constant
0xffff8bd95bcc   140  d503201f       constant
0xffff8bd95bd0   144  8bb06000       constant
0xffff8bd95bd4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd95b6c  embedded object  (0x26c042b1 <false>)
0xffff8bd95b74  embedded object  (0x26c04281 <true>)
0xffff8bd95b7c  constant pool (size 28)
0xffff8bd95bb8  runtime entry
0xffff8bd95bc4  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 17
type = NORMAL
name = ToBooleanICStub(Undefined,SpecObject)
compiler = crankshaft
Instructions (size = 160)
0xffff8bd95b40     0  ldr x16, [x26, #40]
0xffff8bd95b44     4  cmp x0, x16
0xffff8bd95b48     8  b.eq #+0x24 (addr 0xffff8bd95b6c)
0xffff8bd95b4c    12  tbz w0, #0, #+0x4c (addr 0xffff8bd95b98)
0xffff8bd95b50    16  ldur x2, [x0, #-1]
0xffff8bd95b54    20  ldrb w1, [x2, #12]
0xffff8bd95b58    24  tbnz w1, #4, #+0x14 (addr 0xffff8bd95b6c)
0xffff8bd95b5c    28  ldrb w1, [x2, #11]
0xffff8bd95b60    32  cmp x1, #0xb1 (177)
0xffff8bd95b64    36  b.ge #+0x10 (addr 0xffff8bd95b74)
0xffff8bd95b68    40  b #+0x30 (addr 0xffff8bd95b98)
0xffff8bd95b6c    44  ldr x0, pc+28 (addr 0x0000ffff8bd95b88)    ;; object: 0x26c042b1 <false>
0xffff8bd95b70    48  ret
0xffff8bd95b74    52  ldr x0, pc+28 (addr 0x0000ffff8bd95b90)    ;; object: 0x26c04281 <true>
0xffff8bd95b78    56  ret
0xffff8bd95b7c    60  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd95b80    64  d63f03e0       constant
0xffff8bd95b84    68  d503201f       constant
0xffff8bd95b88    72  26c042b1       constant
0xffff8bd95b8c    76  00000000       constant
0xffff8bd95b90    80  26c04281       constant
0xffff8bd95b94    84  00000000       constant
0xffff8bd95b98    88  movz x16, #0x0
0xffff8bd95b9c    92  sub csp, jssp, #0x10 (16)
0xffff8bd95ba0    96  stp fp, lr, [jssp, #-16]!
0xffff8bd95ba4   100  bl #+0x4 (addr 0xffff8bd95ba8)
0xffff8bd95ba8   104  movz x17, #0xa00000000
0xffff8bd95bac   108  sub csp, jssp, #0x10 (16)
0xffff8bd95bb0   112  stp x17, cp, [jssp, #-16]!
0xffff8bd95bb4   116  add fp, jssp, #0x10 (16)
0xffff8bd95bb8   120  ldr x17, pc+24 (addr 0x0000ffff8bd95bd0)    ;; lazy deoptimization bailout 0
0xffff8bd95bbc   124  add x17, x17, x16
0xffff8bd95bc0   128  br x17
0xffff8bd95bc4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd95bc8   136  d63f03e0       constant
0xffff8bd95bcc   140  d503201f       constant
0xffff8bd95bd0   144  8bb06000       constant
0xffff8bd95bd4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd95b6c  embedded object  (0x26c042b1 <false>)
0xffff8bd95b74  embedded object  (0x26c04281 <true>)
0xffff8bd95b7c  constant pool (size 28)
0xffff8bd95bb8  runtime entry
0xffff8bd95bc4  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*BOOLEAN -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff8bd96240     0  orr x16, x1, x0
0xffff8bd96244     4  tbnz w16, #0, #+0x10 (addr 0xffff8bd96254)
0xffff8bd96248     8  asr x1, x1, #32
0xffff8bd9624c    12  sub x0, x1, x0, asr #32
0xffff8bd96250    16  ret
0xffff8bd96254    20  cmp x0, x1
0xffff8bd96258    24  b.ne #+0x30 (addr 0xffff8bd96288)
0xffff8bd9625c    28  ldur x16, [x0, #-1]
0xffff8bd96260    32  ldr x17, [x26, #120]
0xffff8bd96264    36  cmp x16, x17
0xffff8bd96268    40  b.eq #+0xc (addr 0xffff8bd96274)
0xffff8bd9626c    44  movz x0, #0x0
0xffff8bd96270    48  ret
0xffff8bd96274    52  ldur d0, [x0, #7]
0xffff8bd96278    56  fcmp d0, d0
0xffff8bd9627c    60  b.vc #-0x10 (addr 0xffff8bd9626c)
0xffff8bd96280    64  movn x0, #0x0
0xffff8bd96284    68  ret
0xffff8bd96288    72  and x16, x1, x0
0xffff8bd9628c    76  tbnz w16, #0, #+0x64 (addr 0xffff8bd962f0)
0xffff8bd96290    80  tbz w0, #0, #+0x24 (addr 0xffff8bd962b4)
0xffff8bd96294    84  ldur x16, [x0, #-1]
0xffff8bd96298    88  ldr x17, [x26, #120]
0xffff8bd9629c    92  cmp x16, x17
0xffff8bd962a0    96  b.eq #+0x8 (addr 0xffff8bd962a8)
0xffff8bd962a4   100  ret
0xffff8bd962a8   104  ldur d0, [x0, #7]
0xffff8bd962ac   108  scvtf d1, x1, #32
0xffff8bd962b0   112  b #+0x24 (addr 0xffff8bd962d4)
0xffff8bd962b4   116  ldur x16, [x1, #-1]
0xffff8bd962b8   120  ldr x17, [x26, #120]
0xffff8bd962bc   124  cmp x16, x17
0xffff8bd962c0   128  b.eq #+0xc (addr 0xffff8bd962cc)
0xffff8bd962c4   132  movz x0, #0x1
0xffff8bd962c8   136  ret
0xffff8bd962cc   140  ldur d1, [x1, #7]
0xffff8bd962d0   144  scvtf d0, x0, #32
0xffff8bd962d4   148  fcmp d1, d0
0xffff8bd962d8   152  b.vs #+0x10 (addr 0xffff8bd962e8)
0xffff8bd962dc   156  cset x0, gt
0xffff8bd962e0   160  csinv x0, x0, xzr, ge
0xffff8bd962e4   164  ret
0xffff8bd962e8   168  movn x0, #0x0
0xffff8bd962ec   172  ret
0xffff8bd962f0   176  ldur x10, [x0, #-1]
0xffff8bd962f4   180  ldur x12, [x1, #-1]
0xffff8bd962f8   184  ldrb w11, [x10, #11]
0xffff8bd962fc   188  ldrb w13, [x12, #11]
0xffff8bd96300   192  cmp x11, #0xb1 (177)
0xffff8bd96304   196  b.lt #+0x8 (addr 0xffff8bd9630c)
0xffff8bd96308   200  ret
0xffff8bd9630c   204  cmp x11, #0x83 (131)
0xffff8bd96310   208  movz x16, #0x83
0xffff8bd96314   212  ccmp x13, x16, #nZcv, ne
0xffff8bd96318   216  movz x16, #0xb1
0xffff8bd9631c   220  ccmp x13, x16, #NzcV, ne
0xffff8bd96320   224  b.ge #-0x18 (addr 0xffff8bd96308)
0xffff8bd96324   228  orr x14, x13, x11
0xffff8bd96328   232  tst x14, #0xc0
0xffff8bd9632c   236  b.eq #-0x24 (addr 0xffff8bd96308)
0xffff8bd96330   240  cmp x11, #0x81 (129)
0xffff8bd96334   244  b.ne #+0x18 (addr 0xffff8bd9634c)
0xffff8bd96338   248  cmp x12, x10
0xffff8bd9633c   252  b.ne #+0x10 (addr 0xffff8bd9634c)
0xffff8bd96340   256  ldur d1, [x1, #7]
0xffff8bd96344   260  ldur d0, [x0, #7]
0xffff8bd96348   264  b #-0x74 (addr 0xffff8bd962d4)
0xffff8bd9634c   268  movz x16, #0x87
0xffff8bd96350   272  and x14, x13, x16
0xffff8bd96354   276  movz x16, #0x87
0xffff8bd96358   280  and x15, x11, x16
0xffff8bd9635c   284  cmp x14, #0x4 (4)
0xffff8bd96360   288  ccmp x15, #4, #nzcv, eq
0xffff8bd96364   292  b.ne #+0x5c (addr 0xffff8bd963c0)
0xffff8bd96368   296  ldur x10, [x1, #15]
0xffff8bd9636c   300  ldur x11, [x0, #15]
0xffff8bd96370   304  cmp x10, x11
0xffff8bd96374   308  b.eq #+0xc (addr 0xffff8bd96380)
0xffff8bd96378   312  movz x0, #0x100000000
0xffff8bd9637c   316  ret
0xffff8bd96380   320  cbnz x10, #+0xc (addr 0xffff8bd9638c)
0xffff8bd96384   324  movz x0, #0x0
0xffff8bd96388   328  ret
0xffff8bd9638c   332  asr x10, x10, #32
0xffff8bd96390   336  add x11, x10, #0x17 (23)
0xffff8bd96394   340  add x1, x1, x11
0xffff8bd96398   344  add x0, x0, x11
0xffff8bd9639c   348  neg x10, x10
0xffff8bd963a0   352  ldrb w11, [x1, x10]
0xffff8bd963a4   356  ldrb w12, [x0, x10]
0xffff8bd963a8   360  cmp x11, x12
0xffff8bd963ac   364  b.ne #-0x34 (addr 0xffff8bd96378)
0xffff8bd963b0   368  add x10, x10, #0x1 (1)
0xffff8bd963b4   372  cbnz x10, #-0x14 (addr 0xffff8bd963a0)
0xffff8bd963b8   376  movz x0, #0x0
0xffff8bd963bc   380  ret
0xffff8bd963c0   384  movz x16, #0xc00000000
0xffff8bd963c4   388  sub csp, jssp, #0x10 (16)
0xffff8bd963c8   392  stp fp, lr, [jssp, #-16]!
0xffff8bd963cc   396  sub csp, jssp, #0x10 (16)
0xffff8bd963d0   400  str x16, [jssp, #-8]!
0xffff8bd963d4   404  ldr x17, pc+172 (addr 0x0000ffff8bd96480)    ;; object: 0xffff8bd961e1 <Code: COMPARE_IC>
0xffff8bd963d8   408  sub csp, jssp, #0x10 (16)
0xffff8bd963dc   412  str x17, [jssp, #-8]!
0xffff8bd963e0   416  add fp, jssp, #0x10 (16)
0xffff8bd963e4   420  sub csp, jssp, #0x10 (16)
0xffff8bd963e8   424  stp x0, x1, [jssp, #-16]!
0xffff8bd963ec   428  movz x0, #0x2
0xffff8bd963f0   432  ldr x1, pc+152 (addr 0x0000ffff8bd96488)    ;; external reference (Runtime::StrictEqual)
0xffff8bd963f4   436  ldr x16, pc+156 (addr 0x0000ffff8bd96490)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd963f8   440  blr x16
0xffff8bd963fc   444  mov jssp, fp
0xffff8bd96400   448  ldp fp, lr, [jssp], #16
0xffff8bd96404   452  ldr x1, [x26, #64]
0xffff8bd96408   456  sub x0, x0, x1
0xffff8bd9640c   460  ret
0xffff8bd96410   464  movz x16, #0xc00000000
0xffff8bd96414   468  sub csp, jssp, #0x10 (16)
0xffff8bd96418   472  stp fp, lr, [jssp, #-16]!
0xffff8bd9641c   476  sub csp, jssp, #0x10 (16)
0xffff8bd96420   480  str x16, [jssp, #-8]!
0xffff8bd96424   484  ldr x17, pc+116 (addr 0x0000ffff8bd96498)    ;; object: 0xffff8bd961e1 <Code: COMPARE_IC>
0xffff8bd96428   488  sub csp, jssp, #0x10 (16)
0xffff8bd9642c   492  str x17, [jssp, #-8]!
0xffff8bd96430   496  add fp, jssp, #0x10 (16)
0xffff8bd96434   500  sub csp, jssp, #0x18 (24)
0xffff8bd96438   504  stp lr, x0, [jssp, #-24]!
0xffff8bd9643c   508  str x1, [jssp, #16]
0xffff8bd96440   512  movz x10, #0x2f00000000
0xffff8bd96444   516  sub csp, jssp, #0x18 (24)
0xffff8bd96448   520  stp x10, x0, [jssp, #-24]!
0xffff8bd9644c   524  str x1, [jssp, #16]
0xffff8bd96450   528  movz x0, #0x3
0xffff8bd96454   532  ldr x1, pc+76 (addr 0x0000ffff8bd964a0)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd96458   536  ldr x16, pc+80 (addr 0x0000ffff8bd964a8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd9645c   540  blr x16
0xffff8bd96460   544  add x11, x0, #0x5f (95)
0xffff8bd96464   548  ldr x1, [jssp, #16]
0xffff8bd96468   552  ldp lr, x0, [jssp], #24
0xffff8bd9646c   556  mov jssp, fp
0xffff8bd96470   560  ldp fp, lr, [jssp], #16
0xffff8bd96474   564  br x11
0xffff8bd96478   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd9647c   572  d63f03e0       constant
0xffff8bd96480   576  8bd961e1       constant
0xffff8bd96484   580  0000ffff       constant
0xffff8bd96488   584  00e50928       constant
0xffff8bd9648c   588  00000000       constant
0xffff8bd96490   592  8bd06060       constant
0xffff8bd96494   596  0000ffff       constant
0xffff8bd96498   600  8bd961e1       constant
0xffff8bd9649c   604  0000ffff       constant
0xffff8bd964a0   608  00c8a980       constant
0xffff8bd964a4   612  00000000       constant
0xffff8bd964a8   616  8bd06060       constant
0xffff8bd964ac   620  0000ffff       constant


RelocInfo (size = 16)
0xffff8bd963d4  embedded object  (0xffff8bd961e1 <Code: COMPARE_IC>)
0xffff8bd963f0  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff8bd963f4  code target (STUB)  (0xffff8bd06060)
0xffff8bd96424  embedded object  (0xffff8bd961e1 <Code: COMPARE_IC>)
0xffff8bd96454  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd96458  code target (STUB)  (0xffff8bd06060)
0xffff8bd96478  constant pool (size 56)


kind = HANDLER
major_key = <NoCache>Stub
name = global
compiler = unknown
Instructions (size = 120)
0xffff8bd96520     0  sub csp, jssp, #0x8 (8)
0xffff8bd96524     4  str x3, [jssp, #-8]!
0xffff8bd96528     8  sub csp, jssp, #0x8 (8)
0xffff8bd9652c    12  str x0, [jssp, #-8]!
0xffff8bd96530    16  ldr x0, pc+80 (addr 0x0000ffff8bd96580)    ;; object: 0x26cc5d51 Cell for 0
0xffff8bd96534    20  ldur x0, [x0, #7]
0xffff8bd96538    24  cmp x0, #0x0 (0)
0xffff8bd9653c    28  b.ne #+0x2c (addr 0xffff8bd96568)
0xffff8bd96540    32  ldr x0, pc+72 (addr 0x0000ffff8bd96588)    ;; object: 0x26ce35c9 WeakCell for 0x26cbca39 PropertyCell for 0x565153b9 <JS Global Object>
0xffff8bd96544    36  ldur x0, [x0, #7]
0xffff8bd96548    40  tbz w0, #0, #+0x20 (addr 0xffff8bd96568)
0xffff8bd9654c    44  ldur x0, [x0, #15]
0xffff8bd96550    48  ldr x16, [x26, #88]
0xffff8bd96554    52  cmp x0, x16
0xffff8bd96558    56  b.eq #+0x10 (addr 0xffff8bd96568)
0xffff8bd9655c    60  add jssp, jssp, #0x10 (16)
0xffff8bd96560    64  ret
0xffff8bd96564    68  b #+0x14 (addr 0xffff8bd96578)
0xffff8bd96568    72  ldr x0, [jssp], #8
0xffff8bd9656c    76  ldr x3, [jssp], #8
0xffff8bd96570    80  ldr x16, pc+32 (addr 0x0000ffff8bd96590)    ;; code: BUILTIN
0xffff8bd96574    84  br x16
0xffff8bd96578    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bd9657c    92  d63f03e0       constant
0xffff8bd96580    96  26cc5d51       constant
0xffff8bd96584   100  00000000       constant
0xffff8bd96588   104  26ce35c9       constant
0xffff8bd9658c   108  00000000       constant
0xffff8bd96590   112  8bd222e0       constant
0xffff8bd96594   116  0000ffff       constant


RelocInfo (size = 9)
0xffff8bd96530  embedded object  (0x26cc5d51 Cell for 0)
0xffff8bd96540  embedded object  (0x26ce35c9 WeakCell for 0x26cbca39 PropertyCell for 0x565153b9 <JS Global Object>)
0xffff8bd96570  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd96578  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = process
compiler = unknown
Instructions (size = 184)
0xffff8bd96600     0  sub csp, jssp, #0x8 (8)
0xffff8bd96604     4  str x3, [jssp, #-8]!
0xffff8bd96608     8  sub csp, jssp, #0x8 (8)
0xffff8bd9660c    12  str x0, [jssp, #-8]!
0xffff8bd96610    16  ldr x0, pc+144 (addr 0x0000ffff8bd966a0)    ;; object: 0x26ce3629 Cell for 0
0xffff8bd96614    20  ldur x0, [x0, #7]
0xffff8bd96618    24  cmp x0, #0x0 (0)
0xffff8bd9661c    28  b.ne #+0x68 (addr 0xffff8bd96684)
0xffff8bd96620    32  mov x16, fp
0xffff8bd96624    36  ldur x4, [x16, #-8]
0xffff8bd96628    40  tbnz w4, #0, #+0xc (addr 0xffff8bd96634)
0xffff8bd9662c    44  ldr x16, [x16]
0xffff8bd96630    48  b #-0xc (addr 0xffff8bd96624)
0xffff8bd96634    52  ldur x4, [x4, #39]
0xffff8bd96638    56  ldur x16, [x1, #23]
0xffff8bd9663c    60  cmp x4, x16
0xffff8bd96640    64  b.eq #+0x1c (addr 0xffff8bd9665c)
0xffff8bd96644    68  movz x17, #0x26f
0xffff8bd96648    72  ldr x4, [x4, x17]
0xffff8bd9664c    76  movz x17, #0x26f
0xffff8bd96650    80  ldr x16, [x16, x17]
0xffff8bd96654    84  cmp x4, x16
0xffff8bd96658    88  b.ne #+0x2c (addr 0xffff8bd96684)
0xffff8bd9665c    92  ldr x0, pc+76 (addr 0x0000ffff8bd966a8)    ;; object: 0x26ce3639 WeakCell for 0x26cc79b9 PropertyCell for 0x56592ce9 <a process with map 0x5f51c0f1>
0xffff8bd96660    96  ldur x0, [x0, #7]
0xffff8bd96664   100  tbz w0, #0, #+0x20 (addr 0xffff8bd96684)
0xffff8bd96668   104  ldur x0, [x0, #15]
0xffff8bd9666c   108  ldr x16, [x26, #88]
0xffff8bd96670   112  cmp x0, x16
0xffff8bd96674   116  b.eq #+0x10 (addr 0xffff8bd96684)
0xffff8bd96678   120  add jssp, jssp, #0x10 (16)
0xffff8bd9667c   124  ret
0xffff8bd96680   128  b #+0x14 (addr 0xffff8bd96694)
0xffff8bd96684   132  ldr x0, [jssp], #8
0xffff8bd96688   136  ldr x3, [jssp], #8
0xffff8bd9668c   140  ldr x16, pc+36 (addr 0x0000ffff8bd966b0)    ;; code: BUILTIN
0xffff8bd96690   144  br x16
0xffff8bd96694   148  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bd96698   152  d63f03e0       constant
0xffff8bd9669c   156  d503201f       constant
0xffff8bd966a0   160  26ce3629       constant
0xffff8bd966a4   164  00000000       constant
0xffff8bd966a8   168  26ce3639       constant
0xffff8bd966ac   172  00000000       constant
0xffff8bd966b0   176  8bd222e0       constant
0xffff8bd966b4   180  0000ffff       constant


RelocInfo (size = 11)
0xffff8bd96610  embedded object  (0x26ce3629 Cell for 0)
0xffff8bd9665c  embedded object  (0x26ce3639 WeakCell for 0x26cc79b9 PropertyCell for 0x56592ce9 <a process with map 0x5f51c0f1>)
0xffff8bd9668c  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd96694  constant pool (size 36)

kind = HANDLER
major_key = <NoCache>Stub
name = noDeprecation
compiler = unknown
Instructions (size = 632)
0xffff8bd96720     0  sub csp, jssp, #0x8 (8)
0xffff8bd96724     4  str x3, [jssp, #-8]!
0xffff8bd96728     8  sub csp, jssp, #0x8 (8)
0xffff8bd9672c    12  str x0, [jssp, #-8]!
0xffff8bd96730    16  ldr x0, pc+544 (addr 0x0000ffff8bd96950)    ;; object: 0x26ce3709 Cell for 0
0xffff8bd96734    20  ldur x0, [x0, #7]
0xffff8bd96738    24  cmp x0, #0x0 (0)
0xffff8bd9673c    28  b.ne #+0x1f8 (addr 0xffff8bd96934)
0xffff8bd96740    32  ldur x4, [x1, #-1]
0xffff8bd96744    36  ldrb w0, [x4, #12]
0xffff8bd96748    40  movz x16, #0x44
0xffff8bd9674c    44  tst x0, x16
0xffff8bd96750    48  b.ne #+0x1e4 (addr 0xffff8bd96934)
0xffff8bd96754    52  ldrb w0, [x4, #11]
0xffff8bd96758    56  cmp x0, #0xb1 (177)
0xffff8bd9675c    60  b.lt #+0x1d8 (addr 0xffff8bd96934)
0xffff8bd96760    64  ldur x0, [x1, #7]
0xffff8bd96764    68  ldur x4, [x0, #-1]
0xffff8bd96768    72  ldr x16, [x26, #432]
0xffff8bd9676c    76  cmp x4, x16
0xffff8bd96770    80  b.ne #+0x1c4 (addr 0xffff8bd96934)
0xffff8bd96774    84  ldursw x4, [x0, #35]
0xffff8bd96778    88  sub x4, x4, #0x1 (1)
0xffff8bd9677c    92  movz x16, #0xa9ba
0xffff8bd96780    96  movk x16, #0x225a, lsl #16
0xffff8bd96784   100  and x4, x4, x16
0xffff8bd96788   104  add x4, x4, x4, lsl #1
0xffff8bd9678c   108  add x4, x0, x4, lsl #3
0xffff8bd96790   112  ldur x4, [x4, #55]
0xffff8bd96794   116  ldr x16, [x26, #40]
0xffff8bd96798   120  cmp x4, x16
0xffff8bd9679c   124  b.eq #+0x188 (addr 0xffff8bd96924)
0xffff8bd967a0   128  ldr x16, pc+440 (addr 0x0000ffff8bd96958)    ;; object: 0x26cdae31 <String[13]: noDeprecation>
0xffff8bd967a4   132  cmp x4, x16
0xffff8bd967a8   136  b.eq #+0x18c (addr 0xffff8bd96934)
0xffff8bd967ac   140  ldr x16, [x26, #88]
0xffff8bd967b0   144  cmp x4, x16
0xffff8bd967b4   148  b.eq #+0x1c (addr 0xffff8bd967d0)
0xffff8bd967b8   152  ldur x4, [x4, #-1]
0xffff8bd967bc   156  ldrb w4, [x4, #11]
0xffff8bd967c0   160  tst x4, #0xc0
0xffff8bd967c4   164  movz x16, #0x80
0xffff8bd967c8   168  ccmp x4, x16, #nZcv, ne
0xffff8bd967cc   172  b.ne #+0x168 (addr 0xffff8bd96934)
0xffff8bd967d0   176  ldursw x4, [x0, #35]
0xffff8bd967d4   180  sub x4, x4, #0x1 (1)
0xffff8bd967d8   184  movz x16, #0xa9bb
0xffff8bd967dc   188  movk x16, #0x225a, lsl #16
0xffff8bd967e0   192  and x4, x4, x16
0xffff8bd967e4   196  add x4, x4, x4, lsl #1
0xffff8bd967e8   200  add x4, x0, x4, lsl #3
0xffff8bd967ec   204  ldur x4, [x4, #55]
0xffff8bd967f0   208  ldr x16, [x26, #40]
0xffff8bd967f4   212  cmp x4, x16
0xffff8bd967f8   216  b.eq #+0x12c (addr 0xffff8bd96924)
0xffff8bd967fc   220  ldr x16, pc+356 (addr 0x0000ffff8bd96960)    ;; object: 0x26cdae31 <String[13]: noDeprecation>
0xffff8bd96800   224  cmp x4, x16
0xffff8bd96804   228  b.eq #+0x130 (addr 0xffff8bd96934)
0xffff8bd96808   232  ldr x16, [x26, #88]
0xffff8bd9680c   236  cmp x4, x16
0xffff8bd96810   240  b.eq #+0x1c (addr 0xffff8bd9682c)
0xffff8bd96814   244  ldur x4, [x4, #-1]
0xffff8bd96818   248  ldrb w4, [x4, #11]
0xffff8bd9681c   252  tst x4, #0xc0
0xffff8bd96820   256  movz x16, #0x80
0xffff8bd96824   260  ccmp x4, x16, #nZcv, ne
0xffff8bd96828   264  b.ne #+0x10c (addr 0xffff8bd96934)
0xffff8bd9682c   268  ldursw x4, [x0, #35]
0xffff8bd96830   272  sub x4, x4, #0x1 (1)
0xffff8bd96834   276  movz x16, #0xa9bd
0xffff8bd96838   280  movk x16, #0x225a, lsl #16
0xffff8bd9683c   284  and x4, x4, x16
0xffff8bd96840   288  add x4, x4, x4, lsl #1
0xffff8bd96844   292  add x4, x0, x4, lsl #3
0xffff8bd96848   296  ldur x4, [x4, #55]
0xffff8bd9684c   300  ldr x16, [x26, #40]
0xffff8bd96850   304  cmp x4, x16
0xffff8bd96854   308  b.eq #+0xd0 (addr 0xffff8bd96924)
0xffff8bd96858   312  ldr x16, pc+272 (addr 0x0000ffff8bd96968)    ;; object: 0x26cdae31 <String[13]: noDeprecation>
0xffff8bd9685c   316  cmp x4, x16
0xffff8bd96860   320  b.eq #+0xd4 (addr 0xffff8bd96934)
0xffff8bd96864   324  ldr x16, [x26, #88]
0xffff8bd96868   328  cmp x4, x16
0xffff8bd9686c   332  b.eq #+0x1c (addr 0xffff8bd96888)
0xffff8bd96870   336  ldur x4, [x4, #-1]
0xffff8bd96874   340  ldrb w4, [x4, #11]
0xffff8bd96878   344  tst x4, #0xc0
0xffff8bd9687c   348  movz x16, #0x80
0xffff8bd96880   352  ccmp x4, x16, #nZcv, ne
0xffff8bd96884   356  b.ne #+0xb0 (addr 0xffff8bd96934)
0xffff8bd96888   360  ldursw x4, [x0, #35]
0xffff8bd9688c   364  sub x4, x4, #0x1 (1)
0xffff8bd96890   368  movz x16, #0xa9c0
0xffff8bd96894   372  movk x16, #0x225a, lsl #16
0xffff8bd96898   376  and x4, x4, x16
0xffff8bd9689c   380  add x4, x4, x4, lsl #1
0xffff8bd968a0   384  add x4, x0, x4, lsl #3
0xffff8bd968a4   388  ldur x4, [x4, #55]
0xffff8bd968a8   392  ldr x16, [x26, #40]
0xffff8bd968ac   396  cmp x4, x16
0xffff8bd968b0   400  b.eq #+0x74 (addr 0xffff8bd96924)
0xffff8bd968b4   404  ldr x16, pc+188 (addr 0x0000ffff8bd96970)    ;; object: 0x26cdae31 <String[13]: noDeprecation>
0xffff8bd968b8   408  cmp x4, x16
0xffff8bd968bc   412  b.eq #+0x78 (addr 0xffff8bd96934)
0xffff8bd968c0   416  ldr x16, [x26, #88]
0xffff8bd968c4   420  cmp x4, x16
0xffff8bd968c8   424  b.eq #+0x1c (addr 0xffff8bd968e4)
0xffff8bd968cc   428  ldur x4, [x4, #-1]
0xffff8bd968d0   432  ldrb w4, [x4, #11]
0xffff8bd968d4   436  tst x4, #0xc0
0xffff8bd968d8   440  movz x16, #0x80
0xffff8bd968dc   444  ccmp x4, x16, #nZcv, ne
0xffff8bd968e0   448  b.ne #+0x54 (addr 0xffff8bd96934)
0xffff8bd968e4   452  sub csp, jssp, #0x38 (56)
0xffff8bd968e8   456  stp x3, x5, [jssp, #-32]!
0xffff8bd968ec   460  stp x6, lr, [jssp, #16]
0xffff8bd968f0   464  stp x0, x1, [jssp, #-24]!
0xffff8bd968f4   468  str x2, [jssp, #16]
0xffff8bd968f8   472  ldur x0, [x1, #7]
0xffff8bd968fc   476  ldr x1, pc+124 (addr 0x0000ffff8bd96978)    ;; object: 0x26cdae31 <String[13]: noDeprecation>
0xffff8bd96900   480  ldr x16, pc+128 (addr 0x0000ffff8bd96980)    ;; code: STUB, NameDictionaryLookupStub, minor: 1
0xffff8bd96904   484  blr x16
0xffff8bd96908   488  mov x4, x0
0xffff8bd9690c   492  ldp x2, x3, [jssp, #16]
0xffff8bd96910   496  ldp x0, x1, [jssp], #32
0xffff8bd96914   500  ldr lr, [jssp, #16]
0xffff8bd96918   504  ldp x5, x6, [jssp], #24
0xffff8bd9691c   508  cbz x4, #+0x8 (addr 0xffff8bd96924)
0xffff8bd96920   512  b #+0x14 (addr 0xffff8bd96934)
0xffff8bd96924   516  add jssp, jssp, #0x10 (16)
0xffff8bd96928   520  ldr x0, pc+96 (addr 0x0000ffff8bd96988)    ;; object: 0x26c04241 <undefined>
0xffff8bd9692c   524  ret
0xffff8bd96930   528  b #+0x14 (addr 0xffff8bd96944)
0xffff8bd96934   532  ldr x0, [jssp], #8
0xffff8bd96938   536  ldr x3, [jssp], #8
0xffff8bd9693c   540  ldr x16, pc+84 (addr 0x0000ffff8bd96990)    ;; code: BUILTIN
0xffff8bd96940   544  br x16
0xffff8bd96944   548  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff8bd96948   552  d63f03e0       constant
0xffff8bd9694c   556  d503201f       constant
0xffff8bd96950   560  26ce3709       constant
0xffff8bd96954   564  00000000       constant
0xffff8bd96958   568  26cdae31       constant
0xffff8bd9695c   572  00000000       constant
0xffff8bd96960   576  26cdae31       constant
0xffff8bd96964   580  00000000       constant
0xffff8bd96968   584  26cdae31       constant
0xffff8bd9696c   588  00000000       constant
0xffff8bd96970   592  26cdae31       constant
0xffff8bd96974   596  00000000       constant
0xffff8bd96978   600  26cdae31       constant
0xffff8bd9697c   604  00000000       constant
0xffff8bd96980   608  8bd8b120       constant
0xffff8bd96984   612  0000ffff       constant
0xffff8bd96988   616  26c04241       constant
0xffff8bd9698c   620  00000000       constant
0xffff8bd96990   624  8bd222e0       constant
0xffff8bd96994   628  0000ffff       constant


RelocInfo (size = 25)
0xffff8bd96730  embedded object  (0x26ce3709 Cell for 0)
0xffff8bd967a0  embedded object  (0x26cdae31 <String[13]: noDeprecation>)
0xffff8bd967fc  embedded object  (0x26cdae31 <String[13]: noDeprecation>)
0xffff8bd96858  embedded object  (0x26cdae31 <String[13]: noDeprecation>)
0xffff8bd968b4  embedded object  (0x26cdae31 <String[13]: noDeprecation>)
0xffff8bd968fc  embedded object  (0x26cdae31 <String[13]: noDeprecation>)
0xffff8bd96900  code target (STUB)  (0xffff8bd8b120)
0xffff8bd96928  embedded object  (0x26c04241 <undefined>)
0xffff8bd9693c  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd96944  constant pool (size 84)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff8bd96a00     0  sub csp, jssp, #0x8 (8)
0xffff8bd96a04     4  str x3, [jssp, #-8]!
0xffff8bd96a08     8  sub csp, jssp, #0x8 (8)
0xffff8bd96a0c    12  str x4, [jssp, #-8]!
0xffff8bd96a10    16  ldr x3, pc+104 (addr 0x0000ffff8bd96a78)    ;; object: 0x26ce3839 Cell for 0
0xffff8bd96a14    20  ldur x3, [x3, #7]
0xffff8bd96a18    24  cmp x3, #0x0 (0)
0xffff8bd96a1c    28  b.ne #+0x8 (addr 0xffff8bd96a24)
0xffff8bd96a20    32  b #+0x18 (addr 0xffff8bd96a38)
0xffff8bd96a24    36  ldr x2, pc+92 (addr 0x0000ffff8bd96a80)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bd96a28    40  ldr x4, [jssp], #8
0xffff8bd96a2c    44  ldr x3, [jssp], #8
0xffff8bd96a30    48  ldr x16, pc+88 (addr 0x0000ffff8bd96a88)    ;; code: BUILTIN
0xffff8bd96a34    52  br x16
0xffff8bd96a38    56  add jssp, jssp, #0x10 (16)
0xffff8bd96a3c    60  ldr x3, pc+84 (addr 0x0000ffff8bd96a90)    ;; object: 0x26c404a9 <AccessorInfo>
0xffff8bd96a40    64  ldr x4, pc+88 (addr 0x0000ffff8bd96a98)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bd96a44    68  sub csp, jssp, #0x28 (40)
0xffff8bd96a48    72  stp x4, x3, [jssp, #-32]!
0xffff8bd96a4c    76  stp x1, x1, [jssp, #16]
0xffff8bd96a50    80  str x0, [jssp, #-8]!
0xffff8bd96a54    84  movz x16, #0x100000000
0xffff8bd96a58    88  sub csp, jssp, #0x8 (8)
0xffff8bd96a5c    92  str x16, [jssp, #-8]!
0xffff8bd96a60    96  movz x0, #0x6
0xffff8bd96a64   100  ldr x1, pc+60 (addr 0x0000ffff8bd96aa0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff8bd96a68   104  ldr x16, pc+64 (addr 0x0000ffff8bd96aa8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd96a6c   108  br x16
0xffff8bd96a70   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd96a74   116  d63f03e0       constant
0xffff8bd96a78   120  26ce3839       constant
0xffff8bd96a7c   124  00000000       constant
0xffff8bd96a80   128  26c05371       constant
0xffff8bd96a84   132  00000000       constant
0xffff8bd96a88   136  8bd22420       constant
0xffff8bd96a8c   140  0000ffff       constant
0xffff8bd96a90   144  26c404a9       constant
0xffff8bd96a94   148  00000000       constant
0xffff8bd96a98   152  26c05371       constant
0xffff8bd96a9c   156  00000000       constant
0xffff8bd96aa0   160  00c8b560       constant
0xffff8bd96aa4   164  00000000       constant
0xffff8bd96aa8   168  8bd06060       constant
0xffff8bd96aac   172  0000ffff       constant


RelocInfo (size = 14)
0xffff8bd96a10  embedded object  (0x26ce3839 Cell for 0)
0xffff8bd96a24  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bd96a30  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd96a3c  embedded object  (0x26c404a9 <AccessorInfo>)
0xffff8bd96a40  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bd96a64  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff8bd96a68  code target (STUB)  (0xffff8bd06060)
0xffff8bd96a70  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff8bd96b20     0  sub csp, jssp, #0x8 (8)
0xffff8bd96b24     4  str x3, [jssp, #-8]!
0xffff8bd96b28     8  sub csp, jssp, #0x8 (8)
0xffff8bd96b2c    12  str x4, [jssp, #-8]!
0xffff8bd96b30    16  ldr x3, pc+104 (addr 0x0000ffff8bd96b98)    ;; object: 0x26ce3941 Cell for 0
0xffff8bd96b34    20  ldur x3, [x3, #7]
0xffff8bd96b38    24  cmp x3, #0x0 (0)
0xffff8bd96b3c    28  b.ne #+0x8 (addr 0xffff8bd96b44)
0xffff8bd96b40    32  b #+0x18 (addr 0xffff8bd96b58)
0xffff8bd96b44    36  ldr x2, pc+92 (addr 0x0000ffff8bd96ba0)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bd96b48    40  ldr x4, [jssp], #8
0xffff8bd96b4c    44  ldr x3, [jssp], #8
0xffff8bd96b50    48  ldr x16, pc+88 (addr 0x0000ffff8bd96ba8)    ;; code: BUILTIN
0xffff8bd96b54    52  br x16
0xffff8bd96b58    56  add jssp, jssp, #0x10 (16)
0xffff8bd96b5c    60  ldr x3, pc+84 (addr 0x0000ffff8bd96bb0)    ;; object: 0x26c404a9 <AccessorInfo>
0xffff8bd96b60    64  ldr x4, pc+88 (addr 0x0000ffff8bd96bb8)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bd96b64    68  sub csp, jssp, #0x28 (40)
0xffff8bd96b68    72  stp x4, x3, [jssp, #-32]!
0xffff8bd96b6c    76  stp x1, x1, [jssp, #16]
0xffff8bd96b70    80  str x0, [jssp, #-8]!
0xffff8bd96b74    84  movz x16, #0x100000000
0xffff8bd96b78    88  sub csp, jssp, #0x8 (8)
0xffff8bd96b7c    92  str x16, [jssp, #-8]!
0xffff8bd96b80    96  movz x0, #0x6
0xffff8bd96b84   100  ldr x1, pc+60 (addr 0x0000ffff8bd96bc0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff8bd96b88   104  ldr x16, pc+64 (addr 0x0000ffff8bd96bc8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd96b8c   108  br x16
0xffff8bd96b90   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd96b94   116  d63f03e0       constant
0xffff8bd96b98   120  26ce3941       constant
0xffff8bd96b9c   124  00000000       constant
0xffff8bd96ba0   128  26c05371       constant
0xffff8bd96ba4   132  00000000       constant
0xffff8bd96ba8   136  8bd22420       constant
0xffff8bd96bac   140  0000ffff       constant
0xffff8bd96bb0   144  26c404a9       constant
0xffff8bd96bb4   148  00000000       constant
0xffff8bd96bb8   152  26c05371       constant
0xffff8bd96bbc   156  00000000       constant
0xffff8bd96bc0   160  00c8b560       constant
0xffff8bd96bc4   164  00000000       constant
0xffff8bd96bc8   168  8bd06060       constant
0xffff8bd96bcc   172  0000ffff       constant


RelocInfo (size = 14)
0xffff8bd96b30  embedded object  (0x26ce3941 Cell for 0)
0xffff8bd96b44  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bd96b50  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd96b5c  embedded object  (0x26c404a9 <AccessorInfo>)
0xffff8bd96b60  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bd96b84  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff8bd96b88  code target (STUB)  (0xffff8bd06060)
0xffff8bd96b90  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff8bd96c40     0  sub csp, jssp, #0x8 (8)
0xffff8bd96c44     4  str x3, [jssp, #-8]!
0xffff8bd96c48     8  sub csp, jssp, #0x8 (8)
0xffff8bd96c4c    12  str x4, [jssp, #-8]!
0xffff8bd96c50    16  ldr x3, pc+104 (addr 0x0000ffff8bd96cb8)    ;; object: 0x26ce3a49 Cell for 0
0xffff8bd96c54    20  ldur x3, [x3, #7]
0xffff8bd96c58    24  cmp x3, #0x0 (0)
0xffff8bd96c5c    28  b.ne #+0x8 (addr 0xffff8bd96c64)
0xffff8bd96c60    32  b #+0x18 (addr 0xffff8bd96c78)
0xffff8bd96c64    36  ldr x2, pc+92 (addr 0x0000ffff8bd96cc0)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bd96c68    40  ldr x4, [jssp], #8
0xffff8bd96c6c    44  ldr x3, [jssp], #8
0xffff8bd96c70    48  ldr x16, pc+88 (addr 0x0000ffff8bd96cc8)    ;; code: BUILTIN
0xffff8bd96c74    52  br x16
0xffff8bd96c78    56  add jssp, jssp, #0x10 (16)
0xffff8bd96c7c    60  ldr x3, pc+84 (addr 0x0000ffff8bd96cd0)    ;; object: 0x26c404a9 <AccessorInfo>
0xffff8bd96c80    64  ldr x4, pc+88 (addr 0x0000ffff8bd96cd8)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bd96c84    68  sub csp, jssp, #0x28 (40)
0xffff8bd96c88    72  stp x4, x3, [jssp, #-32]!
0xffff8bd96c8c    76  stp x1, x1, [jssp, #16]
0xffff8bd96c90    80  str x0, [jssp, #-8]!
0xffff8bd96c94    84  movz x16, #0x100000000
0xffff8bd96c98    88  sub csp, jssp, #0x8 (8)
0xffff8bd96c9c    92  str x16, [jssp, #-8]!
0xffff8bd96ca0    96  movz x0, #0x6
0xffff8bd96ca4   100  ldr x1, pc+60 (addr 0x0000ffff8bd96ce0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff8bd96ca8   104  ldr x16, pc+64 (addr 0x0000ffff8bd96ce8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd96cac   108  br x16
0xffff8bd96cb0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd96cb4   116  d63f03e0       constant
0xffff8bd96cb8   120  26ce3a49       constant
0xffff8bd96cbc   124  00000000       constant
0xffff8bd96cc0   128  26c05371       constant
0xffff8bd96cc4   132  00000000       constant
0xffff8bd96cc8   136  8bd22420       constant
0xffff8bd96ccc   140  0000ffff       constant
0xffff8bd96cd0   144  26c404a9       constant
0xffff8bd96cd4   148  00000000       constant
0xffff8bd96cd8   152  26c05371       constant
0xffff8bd96cdc   156  00000000       constant
0xffff8bd96ce0   160  00c8b560       constant
0xffff8bd96ce4   164  00000000       constant
0xffff8bd96ce8   168  8bd06060       constant
0xffff8bd96cec   172  0000ffff       constant


RelocInfo (size = 14)
0xffff8bd96c50  embedded object  (0x26ce3a49 Cell for 0)
0xffff8bd96c64  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bd96c70  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd96c7c  embedded object  (0x26c404a9 <AccessorInfo>)
0xffff8bd96c80  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bd96ca4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff8bd96ca8  code target (STUB)  (0xffff8bd06060)
0xffff8bd96cb0  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff8bd973e0     0  sub csp, jssp, #0x8 (8)
0xffff8bd973e4     4  str x3, [jssp, #-8]!
0xffff8bd973e8     8  sub csp, jssp, #0x8 (8)
0xffff8bd973ec    12  str x4, [jssp, #-8]!
0xffff8bd973f0    16  ldr x3, pc+104 (addr 0x0000ffff8bd97458)    ;; object: 0x26ce41d1 Cell for 0
0xffff8bd973f4    20  ldur x3, [x3, #7]
0xffff8bd973f8    24  cmp x3, #0x0 (0)
0xffff8bd973fc    28  b.ne #+0x8 (addr 0xffff8bd97404)
0xffff8bd97400    32  b #+0x18 (addr 0xffff8bd97418)
0xffff8bd97404    36  ldr x2, pc+92 (addr 0x0000ffff8bd97460)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bd97408    40  ldr x4, [jssp], #8
0xffff8bd9740c    44  ldr x3, [jssp], #8
0xffff8bd97410    48  ldr x16, pc+88 (addr 0x0000ffff8bd97468)    ;; code: BUILTIN
0xffff8bd97414    52  br x16
0xffff8bd97418    56  add jssp, jssp, #0x10 (16)
0xffff8bd9741c    60  ldr x3, pc+84 (addr 0x0000ffff8bd97470)    ;; object: 0x26c404a9 <AccessorInfo>
0xffff8bd97420    64  ldr x4, pc+88 (addr 0x0000ffff8bd97478)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bd97424    68  sub csp, jssp, #0x28 (40)
0xffff8bd97428    72  stp x4, x3, [jssp, #-32]!
0xffff8bd9742c    76  stp x1, x1, [jssp, #16]
0xffff8bd97430    80  str x0, [jssp, #-8]!
0xffff8bd97434    84  movz x16, #0x100000000
0xffff8bd97438    88  sub csp, jssp, #0x8 (8)
0xffff8bd9743c    92  str x16, [jssp, #-8]!
0xffff8bd97440    96  movz x0, #0x6
0xffff8bd97444   100  ldr x1, pc+60 (addr 0x0000ffff8bd97480)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff8bd97448   104  ldr x16, pc+64 (addr 0x0000ffff8bd97488)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd9744c   108  br x16
0xffff8bd97450   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd97454   116  d63f03e0       constant
0xffff8bd97458   120  26ce41d1       constant
0xffff8bd9745c   124  00000000       constant
0xffff8bd97460   128  26c05371       constant
0xffff8bd97464   132  00000000       constant
0xffff8bd97468   136  8bd22420       constant
0xffff8bd9746c   140  0000ffff       constant
0xffff8bd97470   144  26c404a9       constant
0xffff8bd97474   148  00000000       constant
0xffff8bd97478   152  26c05371       constant
0xffff8bd9747c   156  00000000       constant
0xffff8bd97480   160  00c8b560       constant
0xffff8bd97484   164  00000000       constant
0xffff8bd97488   168  8bd06060       constant
0xffff8bd9748c   172  0000ffff       constant


RelocInfo (size = 14)
0xffff8bd973f0  embedded object  (0x26ce41d1 Cell for 0)
0xffff8bd97404  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bd97410  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd9741c  embedded object  (0x26c404a9 <AccessorInfo>)
0xffff8bd97420  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bd97444  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff8bd97448  code target (STUB)  (0xffff8bd06060)
0xffff8bd97450  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff8bd97640     0  sub csp, jssp, #0x8 (8)
0xffff8bd97644     4  str x3, [jssp, #-8]!
0xffff8bd97648     8  sub csp, jssp, #0x8 (8)
0xffff8bd9764c    12  str x4, [jssp, #-8]!
0xffff8bd97650    16  ldr x3, pc+104 (addr 0x0000ffff8bd976b8)    ;; object: 0x26ce4409 Cell for 0
0xffff8bd97654    20  ldur x3, [x3, #7]
0xffff8bd97658    24  cmp x3, #0x0 (0)
0xffff8bd9765c    28  b.ne #+0x8 (addr 0xffff8bd97664)
0xffff8bd97660    32  b #+0x18 (addr 0xffff8bd97678)
0xffff8bd97664    36  ldr x2, pc+92 (addr 0x0000ffff8bd976c0)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bd97668    40  ldr x4, [jssp], #8
0xffff8bd9766c    44  ldr x3, [jssp], #8
0xffff8bd97670    48  ldr x16, pc+88 (addr 0x0000ffff8bd976c8)    ;; code: BUILTIN
0xffff8bd97674    52  br x16
0xffff8bd97678    56  add jssp, jssp, #0x10 (16)
0xffff8bd9767c    60  ldr x3, pc+84 (addr 0x0000ffff8bd976d0)    ;; object: 0x26c404a9 <AccessorInfo>
0xffff8bd97680    64  ldr x4, pc+88 (addr 0x0000ffff8bd976d8)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bd97684    68  sub csp, jssp, #0x28 (40)
0xffff8bd97688    72  stp x4, x3, [jssp, #-32]!
0xffff8bd9768c    76  stp x1, x1, [jssp, #16]
0xffff8bd97690    80  str x0, [jssp, #-8]!
0xffff8bd97694    84  movz x16, #0x100000000
0xffff8bd97698    88  sub csp, jssp, #0x8 (8)
0xffff8bd9769c    92  str x16, [jssp, #-8]!
0xffff8bd976a0    96  movz x0, #0x6
0xffff8bd976a4   100  ldr x1, pc+60 (addr 0x0000ffff8bd976e0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff8bd976a8   104  ldr x16, pc+64 (addr 0x0000ffff8bd976e8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd976ac   108  br x16
0xffff8bd976b0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd976b4   116  d63f03e0       constant
0xffff8bd976b8   120  26ce4409       constant
0xffff8bd976bc   124  00000000       constant
0xffff8bd976c0   128  26c05371       constant
0xffff8bd976c4   132  00000000       constant
0xffff8bd976c8   136  8bd22420       constant
0xffff8bd976cc   140  0000ffff       constant
0xffff8bd976d0   144  26c404a9       constant
0xffff8bd976d4   148  00000000       constant
0xffff8bd976d8   152  26c05371       constant
0xffff8bd976dc   156  00000000       constant
0xffff8bd976e0   160  00c8b560       constant
0xffff8bd976e4   164  00000000       constant
0xffff8bd976e8   168  8bd06060       constant
0xffff8bd976ec   172  0000ffff       constant


RelocInfo (size = 14)
0xffff8bd97650  embedded object  (0x26ce4409 Cell for 0)
0xffff8bd97664  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bd97670  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd9767c  embedded object  (0x26c404a9 <AccessorInfo>)
0xffff8bd97680  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bd976a4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff8bd976a8  code target (STUB)  (0xffff8bd06060)
0xffff8bd976b0  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff8bd97760     0  sub csp, jssp, #0x8 (8)
0xffff8bd97764     4  str x3, [jssp, #-8]!
0xffff8bd97768     8  sub csp, jssp, #0x8 (8)
0xffff8bd9776c    12  str x4, [jssp, #-8]!
0xffff8bd97770    16  ldr x3, pc+104 (addr 0x0000ffff8bd977d8)    ;; object: 0x26ce4631 Cell for 0
0xffff8bd97774    20  ldur x3, [x3, #7]
0xffff8bd97778    24  cmp x3, #0x0 (0)
0xffff8bd9777c    28  b.ne #+0x8 (addr 0xffff8bd97784)
0xffff8bd97780    32  b #+0x18 (addr 0xffff8bd97798)
0xffff8bd97784    36  ldr x2, pc+92 (addr 0x0000ffff8bd977e0)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bd97788    40  ldr x4, [jssp], #8
0xffff8bd9778c    44  ldr x3, [jssp], #8
0xffff8bd97790    48  ldr x16, pc+88 (addr 0x0000ffff8bd977e8)    ;; code: BUILTIN
0xffff8bd97794    52  br x16
0xffff8bd97798    56  add jssp, jssp, #0x10 (16)
0xffff8bd9779c    60  ldr x3, pc+84 (addr 0x0000ffff8bd977f0)    ;; object: 0x26c404a9 <AccessorInfo>
0xffff8bd977a0    64  ldr x4, pc+88 (addr 0x0000ffff8bd977f8)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bd977a4    68  sub csp, jssp, #0x28 (40)
0xffff8bd977a8    72  stp x4, x3, [jssp, #-32]!
0xffff8bd977ac    76  stp x1, x1, [jssp, #16]
0xffff8bd977b0    80  str x0, [jssp, #-8]!
0xffff8bd977b4    84  movz x16, #0x100000000
0xffff8bd977b8    88  sub csp, jssp, #0x8 (8)
0xffff8bd977bc    92  str x16, [jssp, #-8]!
0xffff8bd977c0    96  movz x0, #0x6
0xffff8bd977c4   100  ldr x1, pc+60 (addr 0x0000ffff8bd97800)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff8bd977c8   104  ldr x16, pc+64 (addr 0x0000ffff8bd97808)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd977cc   108  br x16
0xffff8bd977d0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd977d4   116  d63f03e0       constant
0xffff8bd977d8   120  26ce4631       constant
0xffff8bd977dc   124  00000000       constant
0xffff8bd977e0   128  26c05371       constant
0xffff8bd977e4   132  00000000       constant
0xffff8bd977e8   136  8bd22420       constant
0xffff8bd977ec   140  0000ffff       constant
0xffff8bd977f0   144  26c404a9       constant
0xffff8bd977f4   148  00000000       constant
0xffff8bd977f8   152  26c05371       constant
0xffff8bd977fc   156  00000000       constant
0xffff8bd97800   160  00c8b560       constant
0xffff8bd97804   164  00000000       constant
0xffff8bd97808   168  8bd06060       constant
0xffff8bd9780c   172  0000ffff       constant


RelocInfo (size = 14)
0xffff8bd97770  embedded object  (0x26ce4631 Cell for 0)
0xffff8bd97784  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bd97790  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd9779c  embedded object  (0x26c404a9 <AccessorInfo>)
0xffff8bd977a0  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bd977c4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff8bd977c8  code target (STUB)  (0xffff8bd06060)
0xffff8bd977d0  constant pool (size 64)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff8bd97880     0  sub csp, jssp, #0x8 (8)
0xffff8bd97884     4  str x3, [jssp, #-8]!
0xffff8bd97888     8  sub csp, jssp, #0x8 (8)
0xffff8bd9788c    12  str x4, [jssp, #-8]!
0xffff8bd97890    16  ldr x3, pc+104 (addr 0x0000ffff8bd978f8)    ;; object: 0x26ce4709 Cell for 0
0xffff8bd97894    20  ldur x3, [x3, #7]
0xffff8bd97898    24  cmp x3, #0x0 (0)
0xffff8bd9789c    28  b.ne #+0x8 (addr 0xffff8bd978a4)
0xffff8bd978a0    32  b #+0x18 (addr 0xffff8bd978b8)
0xffff8bd978a4    36  ldr x2, pc+92 (addr 0x0000ffff8bd97900)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bd978a8    40  ldr x4, [jssp], #8
0xffff8bd978ac    44  ldr x3, [jssp], #8
0xffff8bd978b0    48  ldr x16, pc+88 (addr 0x0000ffff8bd97908)    ;; code: BUILTIN
0xffff8bd978b4    52  br x16
0xffff8bd978b8    56  add jssp, jssp, #0x10 (16)
0xffff8bd978bc    60  ldr x3, pc+84 (addr 0x0000ffff8bd97910)    ;; object: 0x26c404a9 <AccessorInfo>
0xffff8bd978c0    64  ldr x4, pc+88 (addr 0x0000ffff8bd97918)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bd978c4    68  sub csp, jssp, #0x28 (40)
0xffff8bd978c8    72  stp x4, x3, [jssp, #-32]!
0xffff8bd978cc    76  stp x1, x1, [jssp, #16]
0xffff8bd978d0    80  str x0, [jssp, #-8]!
0xffff8bd978d4    84  movz x16, #0x100000000
0xffff8bd978d8    88  sub csp, jssp, #0x8 (8)
0xffff8bd978dc    92  str x16, [jssp, #-8]!
0xffff8bd978e0    96  movz x0, #0x6
0xffff8bd978e4   100  ldr x1, pc+60 (addr 0x0000ffff8bd97920)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff8bd978e8   104  ldr x16, pc+64 (addr 0x0000ffff8bd97928)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd978ec   108  br x16
0xffff8bd978f0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bd978f4   116  d63f03e0       constant
0xffff8bd978f8   120  26ce4709       constant
0xffff8bd978fc   124  00000000       constant
0xffff8bd97900   128  26c05371       constant
0xffff8bd97904   132  00000000       constant
0xffff8bd97908   136  8bd22420       constant
0xffff8bd9790c   140  0000ffff       constant
0xffff8bd97910   144  26c404a9       constant
0xffff8bd97914   148  00000000       constant
0xffff8bd97918   152  26c05371       constant
0xffff8bd9791c   156  00000000       constant
0xffff8bd97920   160  00c8b560       constant
0xffff8bd97924   164  00000000       constant
0xffff8bd97928   168  8bd06060       constant
0xffff8bd9792c   172  0000ffff       constant


RelocInfo (size = 14)
0xffff8bd97890  embedded object  (0x26ce4709 Cell for 0)
0xffff8bd978a4  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bd978b0  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd978bc  embedded object  (0x26c404a9 <AccessorInfo>)
0xffff8bd978c0  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bd978e4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff8bd978e8  code target (STUB)  (0xffff8bd06060)
0xffff8bd978f0  constant pool (size 64)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff8bd979a0     0  tbz w0, #0, #+0x50 (addr 0xffff8bd979f0)
0xffff8bd979a4     4  mov x2, x0
0xffff8bd979a8     8  stur x2, [x1, #31]
0xffff8bd979ac    12  add x3, x1, #0x1f (31)
0xffff8bd979b0    16  and x2, x2, #0xfffffffffff00000
0xffff8bd979b4    20  ldr x2, [x2, #8]
0xffff8bd979b8    24  tbz w2, #1, #+0x24 (addr 0xffff8bd979dc)
0xffff8bd979bc    28  and x2, x1, #0xfffffffffff00000
0xffff8bd979c0    32  ldr x2, [x2, #8]
0xffff8bd979c4    36  tbz w2, #2, #+0x18 (addr 0xffff8bd979dc)
0xffff8bd979c8    40  sub csp, jssp, #0x8 (8)
0xffff8bd979cc    44  str lr, [jssp, #-8]!
0xffff8bd979d0    48  ldr x16, pc+24 (addr 0x0000ffff8bd979e8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd979d4    52  blr x16
0xffff8bd979d8    56  ldr lr, [jssp], #8
0xffff8bd979dc    60  ret
0xffff8bd979e0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd979e4    68  d63f03e0       constant
0xffff8bd979e8    72  8bd170c0       constant
0xffff8bd979ec    76  0000ffff       constant
0xffff8bd979f0    80  movz x16, #0x0
0xffff8bd979f4    84  sub csp, jssp, #0x10 (16)
0xffff8bd979f8    88  stp fp, lr, [jssp, #-16]!
0xffff8bd979fc    92  bl #+0x4 (addr 0xffff8bd97a00)
0xffff8bd97a00    96  movz x17, #0xa00000000
0xffff8bd97a04   100  sub csp, jssp, #0x10 (16)
0xffff8bd97a08   104  stp x17, cp, [jssp, #-16]!
0xffff8bd97a0c   108  add fp, jssp, #0x10 (16)
0xffff8bd97a10   112  ldr x17, pc+24 (addr 0x0000ffff8bd97a28)    ;; lazy deoptimization bailout 0
0xffff8bd97a14   116  add x17, x17, x16
0xffff8bd97a18   120  br x17
0xffff8bd97a1c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd97a20   128  d63f03e0       constant
0xffff8bd97a24   132  d503201f       constant
0xffff8bd97a28   136  8bb06000       constant
0xffff8bd97a2c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bd979d0  code target (STUB)  (0xffff8bd170c0)
0xffff8bd979e0  constant pool (size 16)
0xffff8bd97a10  runtime entry
0xffff8bd97a1c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff8bd979a0     0  tbz w0, #0, #+0x50 (addr 0xffff8bd979f0)
0xffff8bd979a4     4  mov x2, x0
0xffff8bd979a8     8  stur x2, [x1, #31]
0xffff8bd979ac    12  add x3, x1, #0x1f (31)
0xffff8bd979b0    16  and x2, x2, #0xfffffffffff00000
0xffff8bd979b4    20  ldr x2, [x2, #8]
0xffff8bd979b8    24  tbz w2, #1, #+0x24 (addr 0xffff8bd979dc)
0xffff8bd979bc    28  and x2, x1, #0xfffffffffff00000
0xffff8bd979c0    32  ldr x2, [x2, #8]
0xffff8bd979c4    36  tbz w2, #2, #+0x18 (addr 0xffff8bd979dc)
0xffff8bd979c8    40  sub csp, jssp, #0x8 (8)
0xffff8bd979cc    44  str lr, [jssp, #-8]!
0xffff8bd979d0    48  ldr x16, pc+24 (addr 0x0000ffff8bd979e8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd979d4    52  blr x16
0xffff8bd979d8    56  ldr lr, [jssp], #8
0xffff8bd979dc    60  ret
0xffff8bd979e0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd979e4    68  d63f03e0       constant
0xffff8bd979e8    72  8bd170c0       constant
0xffff8bd979ec    76  0000ffff       constant
0xffff8bd979f0    80  movz x16, #0x0
0xffff8bd979f4    84  sub csp, jssp, #0x10 (16)
0xffff8bd979f8    88  stp fp, lr, [jssp, #-16]!
0xffff8bd979fc    92  bl #+0x4 (addr 0xffff8bd97a00)
0xffff8bd97a00    96  movz x17, #0xa00000000
0xffff8bd97a04   100  sub csp, jssp, #0x10 (16)
0xffff8bd97a08   104  stp x17, cp, [jssp, #-16]!
0xffff8bd97a0c   108  add fp, jssp, #0x10 (16)
0xffff8bd97a10   112  ldr x17, pc+24 (addr 0x0000ffff8bd97a28)    ;; lazy deoptimization bailout 0
0xffff8bd97a14   116  add x17, x17, x16
0xffff8bd97a18   120  br x17
0xffff8bd97a1c   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd97a20   128  d63f03e0       constant
0xffff8bd97a24   132  d503201f       constant
0xffff8bd97a28   136  8bb06000       constant
0xffff8bd97a2c   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bd979d0  code target (STUB)  (0xffff8bd170c0)
0xffff8bd979e0  constant pool (size 16)
0xffff8bd97a10  runtime entry
0xffff8bd97a1c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = timers
compiler = unknown
Instructions (size = 184)
0xffff8bd97f40     0  sub csp, jssp, #0x8 (8)
0xffff8bd97f44     4  str x3, [jssp, #-8]!
0xffff8bd97f48     8  sub csp, jssp, #0x8 (8)
0xffff8bd97f4c    12  str x4, [jssp, #-8]!
0xffff8bd97f50    16  ldr x3, pc+112 (addr 0x0000ffff8bd97fc0)    ;; object: 0x26c63e59 Cell for 0
0xffff8bd97f54    20  ldur x3, [x3, #7]
0xffff8bd97f58    24  cmp x3, #0x0 (0)
0xffff8bd97f5c    28  b.ne #+0x44 (addr 0xffff8bd97fa0)
0xffff8bd97f60    32  tbz w0, #0, #+0x40 (addr 0xffff8bd97fa0)
0xffff8bd97f64    36  ldur x3, [x0, #-1]
0xffff8bd97f68    40  ldr x4, pc+96 (addr 0x0000ffff8bd97fc8)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd97f6c    44  ldur x4, [x4, #7]
0xffff8bd97f70    48  cmp x3, x4
0xffff8bd97f74    52  b.ne #+0x2c (addr 0xffff8bd97fa0)
0xffff8bd97f78    56  ldr x5, pc+88 (addr 0x0000ffff8bd97fd0)    ;; object: 0x26ce4b41 WeakCell for 0x5f524441 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd97f7c    60  ldur x5, [x5, #7]
0xffff8bd97f80    64  tbz w5, #0, #+0x20 (addr 0xffff8bd97fa0)
0xffff8bd97f84    68  ldursw x4, [x5, #15]
0xffff8bd97f88    72  tbnz w4, #23, #+0x18 (addr 0xffff8bd97fa0)
0xffff8bd97f8c    76  ldr x4, [jssp], #8
0xffff8bd97f90    80  ldr x3, [jssp], #8
0xffff8bd97f94    84  ldr x2, pc+68 (addr 0x0000ffff8bd97fd8)    ;; object: 0x26cba181 <String[6]: timers>
0xffff8bd97f98    88  ldr x16, pc+72 (addr 0x0000ffff8bd97fe0)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff8bd97f9c    92  br x16
0xffff8bd97fa0    96  ldr x2, pc+72 (addr 0x0000ffff8bd97fe8)    ;; object: 0x26cba181 <String[6]: timers>
0xffff8bd97fa4   100  ldr x4, [jssp], #8
0xffff8bd97fa8   104  ldr x3, [jssp], #8
0xffff8bd97fac   108  ldr x16, pc+68 (addr 0x0000ffff8bd97ff0)    ;; code: BUILTIN
0xffff8bd97fb0   112  br x16
0xffff8bd97fb4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd97fb8   120  d63f03e0       constant
0xffff8bd97fbc   124  d503201f       constant
0xffff8bd97fc0   128  26c63e59       constant
0xffff8bd97fc4   132  00000000       constant
0xffff8bd97fc8   136  26cc22b1       constant
0xffff8bd97fcc   140  00000000       constant
0xffff8bd97fd0   144  26ce4b41       constant
0xffff8bd97fd4   148  00000000       constant
0xffff8bd97fd8   152  26cba181       constant
0xffff8bd97fdc   156  00000000       constant
0xffff8bd97fe0   160  8bd38860       constant
0xffff8bd97fe4   164  0000ffff       constant
0xffff8bd97fe8   168  26cba181       constant
0xffff8bd97fec   172  00000000       constant
0xffff8bd97ff0   176  8bd22420       constant
0xffff8bd97ff4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bd97f50  embedded object  (0x26c63e59 Cell for 0)
0xffff8bd97f68  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd97f78  embedded object  (0x26ce4b41 WeakCell for 0x5f524441 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd97f94  embedded object  (0x26cba181 <String[6]: timers>)
0xffff8bd97f98  code target (HANDLER)  (0xffff8bd38860)
0xffff8bd97fa0  embedded object  (0x26cba181 <String[6]: timers>)
0xffff8bd97fac  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd97fb4  constant pool (size 68)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 741)
0xffff8bd98060     0  movz x2, #0xe2c0
0xffff8bd98064     4  movk x2, #0x2cb8, lsl #16
0xffff8bd98068     8  ldp x3, x0, [x2]
0xffff8bd9806c    12  adds x16, x3, #0x120 (288)
0xffff8bd98070    16  ccmp x16, x0, #nzCv, lo
0xffff8bd98074    20  b.hi #+0x138 (addr 0xffff8bd981ac)
0xffff8bd98078    24  str x16, [x2]
0xffff8bd9807c    28  orr x3, x3, #0x1
0xffff8bd98080    32  ldr x0, pc+408 (addr 0x0000ffff8bd98218)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd98084    36  stur x0, [x3, #-1]
0xffff8bd98088    40  movz x0, #0x2200000000
0xffff8bd9808c    44  stur x0, [x3, #7]
0xffff8bd98090    48  stur x1, [x3, #15]
0xffff8bd98094    52  stur cp, [x3, #23]
0xffff8bd98098    56  ldr x0, pc+392 (addr 0x0000ffff8bd98220)    ;; object: 0x26c04519 <the hole>
0xffff8bd9809c    60  stur x0, [x3, #31]
0xffff8bd980a0    64  ldur x0, [cp, #39]
0xffff8bd980a4    68  stur x0, [x3, #39]
0xffff8bd980a8    72  ldr x0, pc+384 (addr 0x0000ffff8bd98228)    ;; object: 0x26c04241 <undefined>
0xffff8bd980ac    76  stur x0, [x3, #47]
0xffff8bd980b0    80  ldr x0, pc+384 (addr 0x0000ffff8bd98230)    ;; object: 0x26c04241 <undefined>
0xffff8bd980b4    84  stur x0, [x3, #55]
0xffff8bd980b8    88  ldr x0, pc+384 (addr 0x0000ffff8bd98238)    ;; object: 0x26c04241 <undefined>
0xffff8bd980bc    92  stur x0, [x3, #63]
0xffff8bd980c0    96  ldr x0, pc+384 (addr 0x0000ffff8bd98240)    ;; object: 0x26c04241 <undefined>
0xffff8bd980c4   100  stur x0, [x3, #71]
0xffff8bd980c8   104  ldr x0, pc+384 (addr 0x0000ffff8bd98248)    ;; object: 0x26c04241 <undefined>
0xffff8bd980cc   108  stur x0, [x3, #79]
0xffff8bd980d0   112  ldr x0, pc+384 (addr 0x0000ffff8bd98250)    ;; object: 0x26c04241 <undefined>
0xffff8bd980d4   116  stur x0, [x3, #87]
0xffff8bd980d8   120  ldr x0, pc+384 (addr 0x0000ffff8bd98258)    ;; object: 0x26c04241 <undefined>
0xffff8bd980dc   124  stur x0, [x3, #95]
0xffff8bd980e0   128  ldr x0, pc+384 (addr 0x0000ffff8bd98260)    ;; object: 0x26c04241 <undefined>
0xffff8bd980e4   132  stur x0, [x3, #103]
0xffff8bd980e8   136  ldr x0, pc+384 (addr 0x0000ffff8bd98268)    ;; object: 0x26c04241 <undefined>
0xffff8bd980ec   140  stur x0, [x3, #111]
0xffff8bd980f0   144  ldr x0, pc+384 (addr 0x0000ffff8bd98270)    ;; object: 0x26c04241 <undefined>
0xffff8bd980f4   148  stur x0, [x3, #119]
0xffff8bd980f8   152  ldr x0, pc+384 (addr 0x0000ffff8bd98278)    ;; object: 0x26c04241 <undefined>
0xffff8bd980fc   156  stur x0, [x3, #127]
0xffff8bd98100   160  ldr x0, pc+384 (addr 0x0000ffff8bd98280)    ;; object: 0x26c04241 <undefined>
0xffff8bd98104   164  stur x0, [x3, #135]
0xffff8bd98108   168  ldr x0, pc+384 (addr 0x0000ffff8bd98288)    ;; object: 0x26c04241 <undefined>
0xffff8bd9810c   172  stur x0, [x3, #143]
0xffff8bd98110   176  ldr x0, pc+384 (addr 0x0000ffff8bd98290)    ;; object: 0x26c04241 <undefined>
0xffff8bd98114   180  stur x0, [x3, #151]
0xffff8bd98118   184  ldr x0, pc+384 (addr 0x0000ffff8bd98298)    ;; object: 0x26c04241 <undefined>
0xffff8bd9811c   188  stur x0, [x3, #159]
0xffff8bd98120   192  ldr x0, pc+384 (addr 0x0000ffff8bd982a0)    ;; object: 0x26c04241 <undefined>
0xffff8bd98124   196  stur x0, [x3, #167]
0xffff8bd98128   200  ldr x0, pc+384 (addr 0x0000ffff8bd982a8)    ;; object: 0x26c04241 <undefined>
0xffff8bd9812c   204  stur x0, [x3, #175]
0xffff8bd98130   208  ldr x0, pc+384 (addr 0x0000ffff8bd982b0)    ;; object: 0x26c04241 <undefined>
0xffff8bd98134   212  stur x0, [x3, #183]
0xffff8bd98138   216  ldr x0, pc+384 (addr 0x0000ffff8bd982b8)    ;; object: 0x26c04241 <undefined>
0xffff8bd9813c   220  stur x0, [x3, #191]
0xffff8bd98140   224  ldr x0, pc+384 (addr 0x0000ffff8bd982c0)    ;; object: 0x26c04241 <undefined>
0xffff8bd98144   228  stur x0, [x3, #199]
0xffff8bd98148   232  ldr x0, pc+384 (addr 0x0000ffff8bd982c8)    ;; object: 0x26c04241 <undefined>
0xffff8bd9814c   236  stur x0, [x3, #207]
0xffff8bd98150   240  ldr x0, pc+384 (addr 0x0000ffff8bd982d0)    ;; object: 0x26c04241 <undefined>
0xffff8bd98154   244  stur x0, [x3, #215]
0xffff8bd98158   248  ldr x0, pc+384 (addr 0x0000ffff8bd982d8)    ;; object: 0x26c04241 <undefined>
0xffff8bd9815c   252  stur x0, [x3, #223]
0xffff8bd98160   256  ldr x0, pc+384 (addr 0x0000ffff8bd982e0)    ;; object: 0x26c04241 <undefined>
0xffff8bd98164   260  stur x0, [x3, #231]
0xffff8bd98168   264  ldr x0, pc+384 (addr 0x0000ffff8bd982e8)    ;; object: 0x26c04241 <undefined>
0xffff8bd9816c   268  stur x0, [x3, #239]
0xffff8bd98170   272  ldr x0, pc+384 (addr 0x0000ffff8bd982f0)    ;; object: 0x26c04241 <undefined>
0xffff8bd98174   276  stur x0, [x3, #247]
0xffff8bd98178   280  ldr x0, pc+384 (addr 0x0000ffff8bd982f8)    ;; object: 0x26c04241 <undefined>
0xffff8bd9817c   284  stur x0, [x3, #255]
0xffff8bd98180   288  ldr x0, pc+384 (addr 0x0000ffff8bd98300)    ;; object: 0x26c04241 <undefined>
0xffff8bd98184   292  movz x16, #0x107
0xffff8bd98188   296  str x0, [x3, x16]
0xffff8bd9818c   300  ldr x0, pc+380 (addr 0x0000ffff8bd98308)    ;; object: 0x26c04241 <undefined>
0xffff8bd98190   304  movz x16, #0x10f
0xffff8bd98194   308  str x0, [x3, x16]
0xffff8bd98198   312  ldr x0, pc+376 (addr 0x0000ffff8bd98310)    ;; object: 0x26c04241 <undefined>
0xffff8bd9819c   316  movz x16, #0x117
0xffff8bd981a0   320  str x0, [x3, x16]
0xffff8bd981a4   324  mov x0, x3
0xffff8bd981a8   328  ret
0xffff8bd981ac   332  sub csp, jssp, #0x10 (16)
0xffff8bd981b0   336  stp fp, lr, [jssp, #-16]!
0xffff8bd981b4   340  movz fp, #0xa00000000
0xffff8bd981b8   344  sub csp, jssp, #0x8 (8)
0xffff8bd981bc   348  str fp, [jssp, #-8]!
0xffff8bd981c0   352  add fp, jssp, #0x8 (8)
0xffff8bd981c4   356  movz x3, #0x0
0xffff8bd981c8   360  mov x16, lr
0xffff8bd981cc   364  ldr x17, pc+332 (addr 0x0000ffff8bd98318)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd981d0   368  blr x17
0xffff8bd981d4   372  movz x0, #0x12000000000
0xffff8bd981d8   376  movz x10, #0x0
0xffff8bd981dc   380  sub csp, jssp, #0x10 (16)
0xffff8bd981e0   384  stp x10, x0, [jssp, #-16]!
0xffff8bd981e4   388  movz x0, #0x2
0xffff8bd981e8   392  movz x1, #0x5b88
0xffff8bd981ec   396  movk x1, #0xe2, lsl #16
0xffff8bd981f0   400  ldr x16, pc+304 (addr 0x0000ffff8bd98320)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd981f4   404  blr x16
0xffff8bd981f8   408  str x0, [jssp, #24]
0xffff8bd981fc   412  ldr x16, pc+300 (addr 0x0000ffff8bd98328)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd98200   416  blr x16
0xffff8bd98204   420  ldr lr, [jssp, #16]
0xffff8bd98208   424  ldp xzr, fp, [jssp], #24
0xffff8bd9820c   428  b #-0x18c (addr 0xffff8bd98080)
0xffff8bd98210   432  580008ff       constant pool begin (num_const = 71)    ;; constant pool
0xffff8bd98214   436  d63f03e0       constant
0xffff8bd98218   440  5f506149       constant
0xffff8bd9821c   444  00000000       constant
0xffff8bd98220   448  26c04519       constant
0xffff8bd98224   452  00000000       constant
0xffff8bd98228   456  26c04241       constant
0xffff8bd9822c   460  00000000       constant
0xffff8bd98230   464  26c04241       constant
0xffff8bd98234   468  00000000       constant
0xffff8bd98238   472  26c04241       constant
0xffff8bd9823c   476  00000000       constant
0xffff8bd98240   480  26c04241       constant
0xffff8bd98244   484  00000000       constant
0xffff8bd98248   488  26c04241       constant
0xffff8bd9824c   492  00000000       constant
0xffff8bd98250   496  26c04241       constant
0xffff8bd98254   500  00000000       constant
0xffff8bd98258   504  26c04241       constant
0xffff8bd9825c   508  00000000       constant
0xffff8bd98260   512  26c04241       constant
0xffff8bd98264   516  00000000       constant
0xffff8bd98268   520  26c04241       constant
0xffff8bd9826c   524  00000000       constant
0xffff8bd98270   528  26c04241       constant
0xffff8bd98274   532  00000000       constant
0xffff8bd98278   536  26c04241       constant
0xffff8bd9827c   540  00000000       constant
0xffff8bd98280   544  26c04241       constant
0xffff8bd98284   548  00000000       constant
0xffff8bd98288   552  26c04241       constant
0xffff8bd9828c   556  00000000       constant
0xffff8bd98290   560  26c04241       constant
0xffff8bd98294   564  00000000       constant
0xffff8bd98298   568  26c04241       constant
0xffff8bd9829c   572  00000000       constant
0xffff8bd982a0   576  26c04241       constant
0xffff8bd982a4   580  00000000       constant
0xffff8bd982a8   584  26c04241       constant
0xffff8bd982ac   588  00000000       constant
0xffff8bd982b0   592  26c04241       constant
0xffff8bd982b4   596  00000000       constant
0xffff8bd982b8   600  26c04241       constant
0xffff8bd982bc   604  00000000       constant
0xffff8bd982c0   608  26c04241       constant
0xffff8bd982c4   612  00000000       constant
0xffff8bd982c8   616  26c04241       constant
0xffff8bd982cc   620  00000000       constant
0xffff8bd982d0   624  26c04241       constant
0xffff8bd982d4   628  00000000       constant
0xffff8bd982d8   632  26c04241       constant
0xffff8bd982dc   636  00000000       constant
0xffff8bd982e0   640  26c04241       constant
0xffff8bd982e4   644  00000000       constant
0xffff8bd982e8   648  26c04241       constant
0xffff8bd982ec   652  00000000       constant
0xffff8bd982f0   656  26c04241       constant
0xffff8bd982f4   660  00000000       constant
0xffff8bd982f8   664  26c04241       constant
0xffff8bd982fc   668  00000000       constant
0xffff8bd98300   672  26c04241       constant
0xffff8bd98304   676  00000000       constant
0xffff8bd98308   680  26c04241       constant
0xffff8bd9830c   684  00000000       constant
0xffff8bd98310   688  26c04241       constant
0xffff8bd98314   692  00000000       constant
0xffff8bd98318   696  8bd06820       constant
0xffff8bd9831c   700  0000ffff       constant
0xffff8bd98320   704  8bd06260       constant
0xffff8bd98324   708  0000ffff       constant
0xffff8bd98328   712  8bd068e0       constant
0xffff8bd9832c   716  0000ffff       constant


Safepoints (size = 21)
0xffff8bd981f8   408  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 41)
0xffff8bd98080  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd98098  embedded object  (0x26c04519 <the hole>)
0xffff8bd980a8  embedded object  (0x26c04241 <undefined>)
0xffff8bd980b0  embedded object  (0x26c04241 <undefined>)
0xffff8bd980b8  embedded object  (0x26c04241 <undefined>)
0xffff8bd980c0  embedded object  (0x26c04241 <undefined>)
0xffff8bd980c8  embedded object  (0x26c04241 <undefined>)
0xffff8bd980d0  embedded object  (0x26c04241 <undefined>)
0xffff8bd980d8  embedded object  (0x26c04241 <undefined>)
0xffff8bd980e0  embedded object  (0x26c04241 <undefined>)
0xffff8bd980e8  embedded object  (0x26c04241 <undefined>)
0xffff8bd980f0  embedded object  (0x26c04241 <undefined>)
0xffff8bd980f8  embedded object  (0x26c04241 <undefined>)
0xffff8bd98100  embedded object  (0x26c04241 <undefined>)
0xffff8bd98108  embedded object  (0x26c04241 <undefined>)
0xffff8bd98110  embedded object  (0x26c04241 <undefined>)
0xffff8bd98118  embedded object  (0x26c04241 <undefined>)
0xffff8bd98120  embedded object  (0x26c04241 <undefined>)
0xffff8bd98128  embedded object  (0x26c04241 <undefined>)
0xffff8bd98130  embedded object  (0x26c04241 <undefined>)
0xffff8bd98138  embedded object  (0x26c04241 <undefined>)
0xffff8bd98140  embedded object  (0x26c04241 <undefined>)
0xffff8bd98148  embedded object  (0x26c04241 <undefined>)
0xffff8bd98150  embedded object  (0x26c04241 <undefined>)
0xffff8bd98158  embedded object  (0x26c04241 <undefined>)
0xffff8bd98160  embedded object  (0x26c04241 <undefined>)
0xffff8bd98168  embedded object  (0x26c04241 <undefined>)
0xffff8bd98170  embedded object  (0x26c04241 <undefined>)
0xffff8bd98178  embedded object  (0x26c04241 <undefined>)
0xffff8bd98180  embedded object  (0x26c04241 <undefined>)
0xffff8bd9818c  embedded object  (0x26c04241 <undefined>)
0xffff8bd98198  embedded object  (0x26c04241 <undefined>)
0xffff8bd981cc  code target (STUB)  (0xffff8bd06820)
0xffff8bd981f0  code target (STUB)  (0xffff8bd06260)
0xffff8bd981fc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd98210  constant pool (size 288)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 741)
0xffff8bd98060     0  movz x2, #0xe2c0
0xffff8bd98064     4  movk x2, #0x2cb8, lsl #16
0xffff8bd98068     8  ldp x3, x0, [x2]
0xffff8bd9806c    12  adds x16, x3, #0x120 (288)
0xffff8bd98070    16  ccmp x16, x0, #nzCv, lo
0xffff8bd98074    20  b.hi #+0x138 (addr 0xffff8bd981ac)
0xffff8bd98078    24  str x16, [x2]
0xffff8bd9807c    28  orr x3, x3, #0x1
0xffff8bd98080    32  ldr x0, pc+408 (addr 0x0000ffff8bd98218)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd98084    36  stur x0, [x3, #-1]
0xffff8bd98088    40  movz x0, #0x2200000000
0xffff8bd9808c    44  stur x0, [x3, #7]
0xffff8bd98090    48  stur x1, [x3, #15]
0xffff8bd98094    52  stur cp, [x3, #23]
0xffff8bd98098    56  ldr x0, pc+392 (addr 0x0000ffff8bd98220)    ;; object: 0x26c04519 <the hole>
0xffff8bd9809c    60  stur x0, [x3, #31]
0xffff8bd980a0    64  ldur x0, [cp, #39]
0xffff8bd980a4    68  stur x0, [x3, #39]
0xffff8bd980a8    72  ldr x0, pc+384 (addr 0x0000ffff8bd98228)    ;; object: 0x26c04241 <undefined>
0xffff8bd980ac    76  stur x0, [x3, #47]
0xffff8bd980b0    80  ldr x0, pc+384 (addr 0x0000ffff8bd98230)    ;; object: 0x26c04241 <undefined>
0xffff8bd980b4    84  stur x0, [x3, #55]
0xffff8bd980b8    88  ldr x0, pc+384 (addr 0x0000ffff8bd98238)    ;; object: 0x26c04241 <undefined>
0xffff8bd980bc    92  stur x0, [x3, #63]
0xffff8bd980c0    96  ldr x0, pc+384 (addr 0x0000ffff8bd98240)    ;; object: 0x26c04241 <undefined>
0xffff8bd980c4   100  stur x0, [x3, #71]
0xffff8bd980c8   104  ldr x0, pc+384 (addr 0x0000ffff8bd98248)    ;; object: 0x26c04241 <undefined>
0xffff8bd980cc   108  stur x0, [x3, #79]
0xffff8bd980d0   112  ldr x0, pc+384 (addr 0x0000ffff8bd98250)    ;; object: 0x26c04241 <undefined>
0xffff8bd980d4   116  stur x0, [x3, #87]
0xffff8bd980d8   120  ldr x0, pc+384 (addr 0x0000ffff8bd98258)    ;; object: 0x26c04241 <undefined>
0xffff8bd980dc   124  stur x0, [x3, #95]
0xffff8bd980e0   128  ldr x0, pc+384 (addr 0x0000ffff8bd98260)    ;; object: 0x26c04241 <undefined>
0xffff8bd980e4   132  stur x0, [x3, #103]
0xffff8bd980e8   136  ldr x0, pc+384 (addr 0x0000ffff8bd98268)    ;; object: 0x26c04241 <undefined>
0xffff8bd980ec   140  stur x0, [x3, #111]
0xffff8bd980f0   144  ldr x0, pc+384 (addr 0x0000ffff8bd98270)    ;; object: 0x26c04241 <undefined>
0xffff8bd980f4   148  stur x0, [x3, #119]
0xffff8bd980f8   152  ldr x0, pc+384 (addr 0x0000ffff8bd98278)    ;; object: 0x26c04241 <undefined>
0xffff8bd980fc   156  stur x0, [x3, #127]
0xffff8bd98100   160  ldr x0, pc+384 (addr 0x0000ffff8bd98280)    ;; object: 0x26c04241 <undefined>
0xffff8bd98104   164  stur x0, [x3, #135]
0xffff8bd98108   168  ldr x0, pc+384 (addr 0x0000ffff8bd98288)    ;; object: 0x26c04241 <undefined>
0xffff8bd9810c   172  stur x0, [x3, #143]
0xffff8bd98110   176  ldr x0, pc+384 (addr 0x0000ffff8bd98290)    ;; object: 0x26c04241 <undefined>
0xffff8bd98114   180  stur x0, [x3, #151]
0xffff8bd98118   184  ldr x0, pc+384 (addr 0x0000ffff8bd98298)    ;; object: 0x26c04241 <undefined>
0xffff8bd9811c   188  stur x0, [x3, #159]
0xffff8bd98120   192  ldr x0, pc+384 (addr 0x0000ffff8bd982a0)    ;; object: 0x26c04241 <undefined>
0xffff8bd98124   196  stur x0, [x3, #167]
0xffff8bd98128   200  ldr x0, pc+384 (addr 0x0000ffff8bd982a8)    ;; object: 0x26c04241 <undefined>
0xffff8bd9812c   204  stur x0, [x3, #175]
0xffff8bd98130   208  ldr x0, pc+384 (addr 0x0000ffff8bd982b0)    ;; object: 0x26c04241 <undefined>
0xffff8bd98134   212  stur x0, [x3, #183]
0xffff8bd98138   216  ldr x0, pc+384 (addr 0x0000ffff8bd982b8)    ;; object: 0x26c04241 <undefined>
0xffff8bd9813c   220  stur x0, [x3, #191]
0xffff8bd98140   224  ldr x0, pc+384 (addr 0x0000ffff8bd982c0)    ;; object: 0x26c04241 <undefined>
0xffff8bd98144   228  stur x0, [x3, #199]
0xffff8bd98148   232  ldr x0, pc+384 (addr 0x0000ffff8bd982c8)    ;; object: 0x26c04241 <undefined>
0xffff8bd9814c   236  stur x0, [x3, #207]
0xffff8bd98150   240  ldr x0, pc+384 (addr 0x0000ffff8bd982d0)    ;; object: 0x26c04241 <undefined>
0xffff8bd98154   244  stur x0, [x3, #215]
0xffff8bd98158   248  ldr x0, pc+384 (addr 0x0000ffff8bd982d8)    ;; object: 0x26c04241 <undefined>
0xffff8bd9815c   252  stur x0, [x3, #223]
0xffff8bd98160   256  ldr x0, pc+384 (addr 0x0000ffff8bd982e0)    ;; object: 0x26c04241 <undefined>
0xffff8bd98164   260  stur x0, [x3, #231]
0xffff8bd98168   264  ldr x0, pc+384 (addr 0x0000ffff8bd982e8)    ;; object: 0x26c04241 <undefined>
0xffff8bd9816c   268  stur x0, [x3, #239]
0xffff8bd98170   272  ldr x0, pc+384 (addr 0x0000ffff8bd982f0)    ;; object: 0x26c04241 <undefined>
0xffff8bd98174   276  stur x0, [x3, #247]
0xffff8bd98178   280  ldr x0, pc+384 (addr 0x0000ffff8bd982f8)    ;; object: 0x26c04241 <undefined>
0xffff8bd9817c   284  stur x0, [x3, #255]
0xffff8bd98180   288  ldr x0, pc+384 (addr 0x0000ffff8bd98300)    ;; object: 0x26c04241 <undefined>
0xffff8bd98184   292  movz x16, #0x107
0xffff8bd98188   296  str x0, [x3, x16]
0xffff8bd9818c   300  ldr x0, pc+380 (addr 0x0000ffff8bd98308)    ;; object: 0x26c04241 <undefined>
0xffff8bd98190   304  movz x16, #0x10f
0xffff8bd98194   308  str x0, [x3, x16]
0xffff8bd98198   312  ldr x0, pc+376 (addr 0x0000ffff8bd98310)    ;; object: 0x26c04241 <undefined>
0xffff8bd9819c   316  movz x16, #0x117
0xffff8bd981a0   320  str x0, [x3, x16]
0xffff8bd981a4   324  mov x0, x3
0xffff8bd981a8   328  ret
0xffff8bd981ac   332  sub csp, jssp, #0x10 (16)
0xffff8bd981b0   336  stp fp, lr, [jssp, #-16]!
0xffff8bd981b4   340  movz fp, #0xa00000000
0xffff8bd981b8   344  sub csp, jssp, #0x8 (8)
0xffff8bd981bc   348  str fp, [jssp, #-8]!
0xffff8bd981c0   352  add fp, jssp, #0x8 (8)
0xffff8bd981c4   356  movz x3, #0x0
0xffff8bd981c8   360  mov x16, lr
0xffff8bd981cc   364  ldr x17, pc+332 (addr 0x0000ffff8bd98318)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd981d0   368  blr x17
0xffff8bd981d4   372  movz x0, #0x12000000000
0xffff8bd981d8   376  movz x10, #0x0
0xffff8bd981dc   380  sub csp, jssp, #0x10 (16)
0xffff8bd981e0   384  stp x10, x0, [jssp, #-16]!
0xffff8bd981e4   388  movz x0, #0x2
0xffff8bd981e8   392  movz x1, #0x5b88
0xffff8bd981ec   396  movk x1, #0xe2, lsl #16
0xffff8bd981f0   400  ldr x16, pc+304 (addr 0x0000ffff8bd98320)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd981f4   404  blr x16
0xffff8bd981f8   408  str x0, [jssp, #24]
0xffff8bd981fc   412  ldr x16, pc+300 (addr 0x0000ffff8bd98328)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd98200   416  blr x16
0xffff8bd98204   420  ldr lr, [jssp, #16]
0xffff8bd98208   424  ldp xzr, fp, [jssp], #24
0xffff8bd9820c   428  b #-0x18c (addr 0xffff8bd98080)
0xffff8bd98210   432  580008ff       constant pool begin (num_const = 71)    ;; constant pool
0xffff8bd98214   436  d63f03e0       constant
0xffff8bd98218   440  5f506149       constant
0xffff8bd9821c   444  00000000       constant
0xffff8bd98220   448  26c04519       constant
0xffff8bd98224   452  00000000       constant
0xffff8bd98228   456  26c04241       constant
0xffff8bd9822c   460  00000000       constant
0xffff8bd98230   464  26c04241       constant
0xffff8bd98234   468  00000000       constant
0xffff8bd98238   472  26c04241       constant
0xffff8bd9823c   476  00000000       constant
0xffff8bd98240   480  26c04241       constant
0xffff8bd98244   484  00000000       constant
0xffff8bd98248   488  26c04241       constant
0xffff8bd9824c   492  00000000       constant
0xffff8bd98250   496  26c04241       constant
0xffff8bd98254   500  00000000       constant
0xffff8bd98258   504  26c04241       constant
0xffff8bd9825c   508  00000000       constant
0xffff8bd98260   512  26c04241       constant
0xffff8bd98264   516  00000000       constant
0xffff8bd98268   520  26c04241       constant
0xffff8bd9826c   524  00000000       constant
0xffff8bd98270   528  26c04241       constant
0xffff8bd98274   532  00000000       constant
0xffff8bd98278   536  26c04241       constant
0xffff8bd9827c   540  00000000       constant
0xffff8bd98280   544  26c04241       constant
0xffff8bd98284   548  00000000       constant
0xffff8bd98288   552  26c04241       constant
0xffff8bd9828c   556  00000000       constant
0xffff8bd98290   560  26c04241       constant
0xffff8bd98294   564  00000000       constant
0xffff8bd98298   568  26c04241       constant
0xffff8bd9829c   572  00000000       constant
0xffff8bd982a0   576  26c04241       constant
0xffff8bd982a4   580  00000000       constant
0xffff8bd982a8   584  26c04241       constant
0xffff8bd982ac   588  00000000       constant
0xffff8bd982b0   592  26c04241       constant
0xffff8bd982b4   596  00000000       constant
0xffff8bd982b8   600  26c04241       constant
0xffff8bd982bc   604  00000000       constant
0xffff8bd982c0   608  26c04241       constant
0xffff8bd982c4   612  00000000       constant
0xffff8bd982c8   616  26c04241       constant
0xffff8bd982cc   620  00000000       constant
0xffff8bd982d0   624  26c04241       constant
0xffff8bd982d4   628  00000000       constant
0xffff8bd982d8   632  26c04241       constant
0xffff8bd982dc   636  00000000       constant
0xffff8bd982e0   640  26c04241       constant
0xffff8bd982e4   644  00000000       constant
0xffff8bd982e8   648  26c04241       constant
0xffff8bd982ec   652  00000000       constant
0xffff8bd982f0   656  26c04241       constant
0xffff8bd982f4   660  00000000       constant
0xffff8bd982f8   664  26c04241       constant
0xffff8bd982fc   668  00000000       constant
0xffff8bd98300   672  26c04241       constant
0xffff8bd98304   676  00000000       constant
0xffff8bd98308   680  26c04241       constant
0xffff8bd9830c   684  00000000       constant
0xffff8bd98310   688  26c04241       constant
0xffff8bd98314   692  00000000       constant
0xffff8bd98318   696  8bd06820       constant
0xffff8bd9831c   700  0000ffff       constant
0xffff8bd98320   704  8bd06260       constant
0xffff8bd98324   708  0000ffff       constant
0xffff8bd98328   712  8bd068e0       constant
0xffff8bd9832c   716  0000ffff       constant


Safepoints (size = 21)
0xffff8bd981f8   408  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 41)
0xffff8bd98080  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd98098  embedded object  (0x26c04519 <the hole>)
0xffff8bd980a8  embedded object  (0x26c04241 <undefined>)
0xffff8bd980b0  embedded object  (0x26c04241 <undefined>)
0xffff8bd980b8  embedded object  (0x26c04241 <undefined>)
0xffff8bd980c0  embedded object  (0x26c04241 <undefined>)
0xffff8bd980c8  embedded object  (0x26c04241 <undefined>)
0xffff8bd980d0  embedded object  (0x26c04241 <undefined>)
0xffff8bd980d8  embedded object  (0x26c04241 <undefined>)
0xffff8bd980e0  embedded object  (0x26c04241 <undefined>)
0xffff8bd980e8  embedded object  (0x26c04241 <undefined>)
0xffff8bd980f0  embedded object  (0x26c04241 <undefined>)
0xffff8bd980f8  embedded object  (0x26c04241 <undefined>)
0xffff8bd98100  embedded object  (0x26c04241 <undefined>)
0xffff8bd98108  embedded object  (0x26c04241 <undefined>)
0xffff8bd98110  embedded object  (0x26c04241 <undefined>)
0xffff8bd98118  embedded object  (0x26c04241 <undefined>)
0xffff8bd98120  embedded object  (0x26c04241 <undefined>)
0xffff8bd98128  embedded object  (0x26c04241 <undefined>)
0xffff8bd98130  embedded object  (0x26c04241 <undefined>)
0xffff8bd98138  embedded object  (0x26c04241 <undefined>)
0xffff8bd98140  embedded object  (0x26c04241 <undefined>)
0xffff8bd98148  embedded object  (0x26c04241 <undefined>)
0xffff8bd98150  embedded object  (0x26c04241 <undefined>)
0xffff8bd98158  embedded object  (0x26c04241 <undefined>)
0xffff8bd98160  embedded object  (0x26c04241 <undefined>)
0xffff8bd98168  embedded object  (0x26c04241 <undefined>)
0xffff8bd98170  embedded object  (0x26c04241 <undefined>)
0xffff8bd98178  embedded object  (0x26c04241 <undefined>)
0xffff8bd98180  embedded object  (0x26c04241 <undefined>)
0xffff8bd9818c  embedded object  (0x26c04241 <undefined>)
0xffff8bd98198  embedded object  (0x26c04241 <undefined>)
0xffff8bd981cc  code target (STUB)  (0xffff8bd06820)
0xffff8bd981f0  code target (STUB)  (0xffff8bd06260)
0xffff8bd981fc  code target (STUB)  (0xffff8bd068e0)
0xffff8bd98210  constant pool (size 288)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bd99940     0  tbz w0, #0, #+0x98 (addr 0xffff8bd999d8)
0xffff8bd99944     4  mov x2, x0
0xffff8bd99948     8  ldur x4, [x1, #7]
0xffff8bd9994c    12  stur x2, [x4, #23]
0xffff8bd99950    16  add x3, x4, #0x17 (23)
0xffff8bd99954    20  and x2, x2, #0xfffffffffff00000
0xffff8bd99958    24  ldr x2, [x2, #8]
0xffff8bd9995c    28  tbz w2, #1, #+0x24 (addr 0xffff8bd99980)
0xffff8bd99960    32  and x2, x4, #0xfffffffffff00000
0xffff8bd99964    36  ldr x2, [x2, #8]
0xffff8bd99968    40  tbz w2, #2, #+0x18 (addr 0xffff8bd99980)
0xffff8bd9996c    44  sub csp, jssp, #0x8 (8)
0xffff8bd99970    48  str lr, [jssp, #-8]!
0xffff8bd99974    52  ldr x16, pc+84 (addr 0x0000ffff8bd999c8)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bd99978    56  blr x16
0xffff8bd9997c    60  ldr lr, [jssp], #8
0xffff8bd99980    64  stur x5, [x1, #-1]
0xffff8bd99984    68  tbz w5, #0, #+0x34 (addr 0xffff8bd999b8)
0xffff8bd99988    72  sub x2, x1, #0x1 (1)
0xffff8bd9998c    76  and x5, x5, #0xfffffffffff00000
0xffff8bd99990    80  ldr x5, [x5, #8]
0xffff8bd99994    84  tbz w5, #1, #+0x24 (addr 0xffff8bd999b8)
0xffff8bd99998    88  and x5, x1, #0xfffffffffff00000
0xffff8bd9999c    92  ldr x5, [x5, #8]
0xffff8bd999a0    96  tbz w5, #2, #+0x18 (addr 0xffff8bd999b8)
0xffff8bd999a4   100  sub csp, jssp, #0x8 (8)
0xffff8bd999a8   104  str lr, [jssp, #-8]!
0xffff8bd999ac   108  ldr x16, pc+36 (addr 0x0000ffff8bd999d0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd999b0   112  blr x16
0xffff8bd999b4   116  ldr lr, [jssp], #8
0xffff8bd999b8   120  ret
0xffff8bd999bc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd999c0   128  d63f03e0       constant
0xffff8bd999c4   132  d503201f       constant
0xffff8bd999c8   136  8bd378a0       constant
0xffff8bd999cc   140  0000ffff       constant
0xffff8bd999d0   144  8bd38080       constant
0xffff8bd999d4   148  0000ffff       constant
0xffff8bd999d8   152  movz x16, #0x0
0xffff8bd999dc   156  sub csp, jssp, #0x10 (16)
0xffff8bd999e0   160  stp fp, lr, [jssp, #-16]!
0xffff8bd999e4   164  bl #+0x4 (addr 0xffff8bd999e8)
0xffff8bd999e8   168  movz x17, #0xa00000000
0xffff8bd999ec   172  sub csp, jssp, #0x10 (16)
0xffff8bd999f0   176  stp x17, cp, [jssp, #-16]!
0xffff8bd999f4   180  add fp, jssp, #0x10 (16)
0xffff8bd999f8   184  ldr x17, pc+24 (addr 0x0000ffff8bd99a10)    ;; lazy deoptimization bailout 0
0xffff8bd999fc   188  add x17, x17, x16
0xffff8bd99a00   192  br x17
0xffff8bd99a04   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd99a08   200  d63f03e0       constant
0xffff8bd99a0c   204  d503201f       constant
0xffff8bd99a10   208  8bb06000       constant
0xffff8bd99a14   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd99974  code target (STUB)  (0xffff8bd378a0)
0xffff8bd999ac  code target (STUB)  (0xffff8bd38080)
0xffff8bd999bc  constant pool (size 28)
0xffff8bd999f8  runtime entry
0xffff8bd99a04  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bd99940     0  tbz w0, #0, #+0x98 (addr 0xffff8bd999d8)
0xffff8bd99944     4  mov x2, x0
0xffff8bd99948     8  ldur x4, [x1, #7]
0xffff8bd9994c    12  stur x2, [x4, #23]
0xffff8bd99950    16  add x3, x4, #0x17 (23)
0xffff8bd99954    20  and x2, x2, #0xfffffffffff00000
0xffff8bd99958    24  ldr x2, [x2, #8]
0xffff8bd9995c    28  tbz w2, #1, #+0x24 (addr 0xffff8bd99980)
0xffff8bd99960    32  and x2, x4, #0xfffffffffff00000
0xffff8bd99964    36  ldr x2, [x2, #8]
0xffff8bd99968    40  tbz w2, #2, #+0x18 (addr 0xffff8bd99980)
0xffff8bd9996c    44  sub csp, jssp, #0x8 (8)
0xffff8bd99970    48  str lr, [jssp, #-8]!
0xffff8bd99974    52  ldr x16, pc+84 (addr 0x0000ffff8bd999c8)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bd99978    56  blr x16
0xffff8bd9997c    60  ldr lr, [jssp], #8
0xffff8bd99980    64  stur x5, [x1, #-1]
0xffff8bd99984    68  tbz w5, #0, #+0x34 (addr 0xffff8bd999b8)
0xffff8bd99988    72  sub x2, x1, #0x1 (1)
0xffff8bd9998c    76  and x5, x5, #0xfffffffffff00000
0xffff8bd99990    80  ldr x5, [x5, #8]
0xffff8bd99994    84  tbz w5, #1, #+0x24 (addr 0xffff8bd999b8)
0xffff8bd99998    88  and x5, x1, #0xfffffffffff00000
0xffff8bd9999c    92  ldr x5, [x5, #8]
0xffff8bd999a0    96  tbz w5, #2, #+0x18 (addr 0xffff8bd999b8)
0xffff8bd999a4   100  sub csp, jssp, #0x8 (8)
0xffff8bd999a8   104  str lr, [jssp, #-8]!
0xffff8bd999ac   108  ldr x16, pc+36 (addr 0x0000ffff8bd999d0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd999b0   112  blr x16
0xffff8bd999b4   116  ldr lr, [jssp], #8
0xffff8bd999b8   120  ret
0xffff8bd999bc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd999c0   128  d63f03e0       constant
0xffff8bd999c4   132  d503201f       constant
0xffff8bd999c8   136  8bd378a0       constant
0xffff8bd999cc   140  0000ffff       constant
0xffff8bd999d0   144  8bd38080       constant
0xffff8bd999d4   148  0000ffff       constant
0xffff8bd999d8   152  movz x16, #0x0
0xffff8bd999dc   156  sub csp, jssp, #0x10 (16)
0xffff8bd999e0   160  stp fp, lr, [jssp, #-16]!
0xffff8bd999e4   164  bl #+0x4 (addr 0xffff8bd999e8)
0xffff8bd999e8   168  movz x17, #0xa00000000
0xffff8bd999ec   172  sub csp, jssp, #0x10 (16)
0xffff8bd999f0   176  stp x17, cp, [jssp, #-16]!
0xffff8bd999f4   180  add fp, jssp, #0x10 (16)
0xffff8bd999f8   184  ldr x17, pc+24 (addr 0x0000ffff8bd99a10)    ;; lazy deoptimization bailout 0
0xffff8bd999fc   188  add x17, x17, x16
0xffff8bd99a00   192  br x17
0xffff8bd99a04   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd99a08   200  d63f03e0       constant
0xffff8bd99a0c   204  d503201f       constant
0xffff8bd99a10   208  8bb06000       constant
0xffff8bd99a14   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd99974  code target (STUB)  (0xffff8bd378a0)
0xffff8bd999ac  code target (STUB)  (0xffff8bd38080)
0xffff8bd999bc  constant pool (size 28)
0xffff8bd999f8  runtime entry
0xffff8bd99a04  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/linkedlist
compiler = unknown
Instructions (size = 184)
0xffff8bd99a80     0  sub csp, jssp, #0x8 (8)
0xffff8bd99a84     4  str x3, [jssp, #-8]!
0xffff8bd99a88     8  sub csp, jssp, #0x8 (8)
0xffff8bd99a8c    12  str x4, [jssp, #-8]!
0xffff8bd99a90    16  ldr x3, pc+112 (addr 0x0000ffff8bd99b00)    ;; object: 0x26c63e59 Cell for 0
0xffff8bd99a94    20  ldur x3, [x3, #7]
0xffff8bd99a98    24  cmp x3, #0x0 (0)
0xffff8bd99a9c    28  b.ne #+0x44 (addr 0xffff8bd99ae0)
0xffff8bd99aa0    32  tbz w0, #0, #+0x40 (addr 0xffff8bd99ae0)
0xffff8bd99aa4    36  ldur x3, [x0, #-1]
0xffff8bd99aa8    40  ldr x4, pc+96 (addr 0x0000ffff8bd99b08)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd99aac    44  ldur x4, [x4, #7]
0xffff8bd99ab0    48  cmp x3, x4
0xffff8bd99ab4    52  b.ne #+0x2c (addr 0xffff8bd99ae0)
0xffff8bd99ab8    56  ldr x5, pc+88 (addr 0x0000ffff8bd99b10)    ;; object: 0x26ce8e49 WeakCell for 0x5f524de1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd99abc    60  ldur x5, [x5, #7]
0xffff8bd99ac0    64  tbz w5, #0, #+0x20 (addr 0xffff8bd99ae0)
0xffff8bd99ac4    68  ldursw x4, [x5, #15]
0xffff8bd99ac8    72  tbnz w4, #23, #+0x18 (addr 0xffff8bd99ae0)
0xffff8bd99acc    76  ldr x4, [jssp], #8
0xffff8bd99ad0    80  ldr x3, [jssp], #8
0xffff8bd99ad4    84  ldr x2, pc+68 (addr 0x0000ffff8bd99b18)    ;; object: 0x26cbe2f9 <String[19]: internal/linkedlist>
0xffff8bd99ad8    88  ldr x16, pc+72 (addr 0x0000ffff8bd99b20)    ;; code: HANDLER, StoreTransitionStub, minor: 196611
0xffff8bd99adc    92  br x16
0xffff8bd99ae0    96  ldr x2, pc+72 (addr 0x0000ffff8bd99b28)    ;; object: 0x26cbe2f9 <String[19]: internal/linkedlist>
0xffff8bd99ae4   100  ldr x4, [jssp], #8
0xffff8bd99ae8   104  ldr x3, [jssp], #8
0xffff8bd99aec   108  ldr x16, pc+68 (addr 0x0000ffff8bd99b30)    ;; code: BUILTIN
0xffff8bd99af0   112  br x16
0xffff8bd99af4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd99af8   120  d63f03e0       constant
0xffff8bd99afc   124  d503201f       constant
0xffff8bd99b00   128  26c63e59       constant
0xffff8bd99b04   132  00000000       constant
0xffff8bd99b08   136  26cc22b1       constant
0xffff8bd99b0c   140  00000000       constant
0xffff8bd99b10   144  26ce8e49       constant
0xffff8bd99b14   148  00000000       constant
0xffff8bd99b18   152  26cbe2f9       constant
0xffff8bd99b1c   156  00000000       constant
0xffff8bd99b20   160  8bd99940       constant
0xffff8bd99b24   164  0000ffff       constant
0xffff8bd99b28   168  26cbe2f9       constant
0xffff8bd99b2c   172  00000000       constant
0xffff8bd99b30   176  8bd22420       constant
0xffff8bd99b34   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bd99a90  embedded object  (0x26c63e59 Cell for 0)
0xffff8bd99aa8  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd99ab8  embedded object  (0x26ce8e49 WeakCell for 0x5f524de1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd99ad4  embedded object  (0x26cbe2f9 <String[19]: internal/linkedlist>)
0xffff8bd99ad8  code target (HANDLER)  (0xffff8bd99940)
0xffff8bd99ae0  embedded object  (0x26cbe2f9 <String[19]: internal/linkedlist>)
0xffff8bd99aec  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd99af4  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bd9a100     0  tbz w0, #0, #+0x98 (addr 0xffff8bd9a198)
0xffff8bd9a104     4  mov x2, x0
0xffff8bd9a108     8  ldur x4, [x1, #7]
0xffff8bd9a10c    12  stur x2, [x4, #31]
0xffff8bd9a110    16  add x3, x4, #0x1f (31)
0xffff8bd9a114    20  and x2, x2, #0xfffffffffff00000
0xffff8bd9a118    24  ldr x2, [x2, #8]
0xffff8bd9a11c    28  tbz w2, #1, #+0x24 (addr 0xffff8bd9a140)
0xffff8bd9a120    32  and x2, x4, #0xfffffffffff00000
0xffff8bd9a124    36  ldr x2, [x2, #8]
0xffff8bd9a128    40  tbz w2, #2, #+0x18 (addr 0xffff8bd9a140)
0xffff8bd9a12c    44  sub csp, jssp, #0x8 (8)
0xffff8bd9a130    48  str lr, [jssp, #-8]!
0xffff8bd9a134    52  ldr x16, pc+84 (addr 0x0000ffff8bd9a188)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bd9a138    56  blr x16
0xffff8bd9a13c    60  ldr lr, [jssp], #8
0xffff8bd9a140    64  stur x5, [x1, #-1]
0xffff8bd9a144    68  tbz w5, #0, #+0x34 (addr 0xffff8bd9a178)
0xffff8bd9a148    72  sub x2, x1, #0x1 (1)
0xffff8bd9a14c    76  and x5, x5, #0xfffffffffff00000
0xffff8bd9a150    80  ldr x5, [x5, #8]
0xffff8bd9a154    84  tbz w5, #1, #+0x24 (addr 0xffff8bd9a178)
0xffff8bd9a158    88  and x5, x1, #0xfffffffffff00000
0xffff8bd9a15c    92  ldr x5, [x5, #8]
0xffff8bd9a160    96  tbz w5, #2, #+0x18 (addr 0xffff8bd9a178)
0xffff8bd9a164   100  sub csp, jssp, #0x8 (8)
0xffff8bd9a168   104  str lr, [jssp, #-8]!
0xffff8bd9a16c   108  ldr x16, pc+36 (addr 0x0000ffff8bd9a190)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd9a170   112  blr x16
0xffff8bd9a174   116  ldr lr, [jssp], #8
0xffff8bd9a178   120  ret
0xffff8bd9a17c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd9a180   128  d63f03e0       constant
0xffff8bd9a184   132  d503201f       constant
0xffff8bd9a188   136  8bd378a0       constant
0xffff8bd9a18c   140  0000ffff       constant
0xffff8bd9a190   144  8bd38080       constant
0xffff8bd9a194   148  0000ffff       constant
0xffff8bd9a198   152  movz x16, #0x0
0xffff8bd9a19c   156  sub csp, jssp, #0x10 (16)
0xffff8bd9a1a0   160  stp fp, lr, [jssp, #-16]!
0xffff8bd9a1a4   164  bl #+0x4 (addr 0xffff8bd9a1a8)
0xffff8bd9a1a8   168  movz x17, #0xa00000000
0xffff8bd9a1ac   172  sub csp, jssp, #0x10 (16)
0xffff8bd9a1b0   176  stp x17, cp, [jssp, #-16]!
0xffff8bd9a1b4   180  add fp, jssp, #0x10 (16)
0xffff8bd9a1b8   184  ldr x17, pc+24 (addr 0x0000ffff8bd9a1d0)    ;; lazy deoptimization bailout 0
0xffff8bd9a1bc   188  add x17, x17, x16
0xffff8bd9a1c0   192  br x17
0xffff8bd9a1c4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd9a1c8   200  d63f03e0       constant
0xffff8bd9a1cc   204  d503201f       constant
0xffff8bd9a1d0   208  8bb06000       constant
0xffff8bd9a1d4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd9a134  code target (STUB)  (0xffff8bd378a0)
0xffff8bd9a16c  code target (STUB)  (0xffff8bd38080)
0xffff8bd9a17c  constant pool (size 28)
0xffff8bd9a1b8  runtime entry
0xffff8bd9a1c4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bd9a100     0  tbz w0, #0, #+0x98 (addr 0xffff8bd9a198)
0xffff8bd9a104     4  mov x2, x0
0xffff8bd9a108     8  ldur x4, [x1, #7]
0xffff8bd9a10c    12  stur x2, [x4, #31]
0xffff8bd9a110    16  add x3, x4, #0x1f (31)
0xffff8bd9a114    20  and x2, x2, #0xfffffffffff00000
0xffff8bd9a118    24  ldr x2, [x2, #8]
0xffff8bd9a11c    28  tbz w2, #1, #+0x24 (addr 0xffff8bd9a140)
0xffff8bd9a120    32  and x2, x4, #0xfffffffffff00000
0xffff8bd9a124    36  ldr x2, [x2, #8]
0xffff8bd9a128    40  tbz w2, #2, #+0x18 (addr 0xffff8bd9a140)
0xffff8bd9a12c    44  sub csp, jssp, #0x8 (8)
0xffff8bd9a130    48  str lr, [jssp, #-8]!
0xffff8bd9a134    52  ldr x16, pc+84 (addr 0x0000ffff8bd9a188)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bd9a138    56  blr x16
0xffff8bd9a13c    60  ldr lr, [jssp], #8
0xffff8bd9a140    64  stur x5, [x1, #-1]
0xffff8bd9a144    68  tbz w5, #0, #+0x34 (addr 0xffff8bd9a178)
0xffff8bd9a148    72  sub x2, x1, #0x1 (1)
0xffff8bd9a14c    76  and x5, x5, #0xfffffffffff00000
0xffff8bd9a150    80  ldr x5, [x5, #8]
0xffff8bd9a154    84  tbz w5, #1, #+0x24 (addr 0xffff8bd9a178)
0xffff8bd9a158    88  and x5, x1, #0xfffffffffff00000
0xffff8bd9a15c    92  ldr x5, [x5, #8]
0xffff8bd9a160    96  tbz w5, #2, #+0x18 (addr 0xffff8bd9a178)
0xffff8bd9a164   100  sub csp, jssp, #0x8 (8)
0xffff8bd9a168   104  str lr, [jssp, #-8]!
0xffff8bd9a16c   108  ldr x16, pc+36 (addr 0x0000ffff8bd9a190)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd9a170   112  blr x16
0xffff8bd9a174   116  ldr lr, [jssp], #8
0xffff8bd9a178   120  ret
0xffff8bd9a17c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bd9a180   128  d63f03e0       constant
0xffff8bd9a184   132  d503201f       constant
0xffff8bd9a188   136  8bd378a0       constant
0xffff8bd9a18c   140  0000ffff       constant
0xffff8bd9a190   144  8bd38080       constant
0xffff8bd9a194   148  0000ffff       constant
0xffff8bd9a198   152  movz x16, #0x0
0xffff8bd9a19c   156  sub csp, jssp, #0x10 (16)
0xffff8bd9a1a0   160  stp fp, lr, [jssp, #-16]!
0xffff8bd9a1a4   164  bl #+0x4 (addr 0xffff8bd9a1a8)
0xffff8bd9a1a8   168  movz x17, #0xa00000000
0xffff8bd9a1ac   172  sub csp, jssp, #0x10 (16)
0xffff8bd9a1b0   176  stp x17, cp, [jssp, #-16]!
0xffff8bd9a1b4   180  add fp, jssp, #0x10 (16)
0xffff8bd9a1b8   184  ldr x17, pc+24 (addr 0x0000ffff8bd9a1d0)    ;; lazy deoptimization bailout 0
0xffff8bd9a1bc   188  add x17, x17, x16
0xffff8bd9a1c0   192  br x17
0xffff8bd9a1c4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd9a1c8   200  d63f03e0       constant
0xffff8bd9a1cc   204  d503201f       constant
0xffff8bd9a1d0   208  8bb06000       constant
0xffff8bd9a1d4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bd9a134  code target (STUB)  (0xffff8bd378a0)
0xffff8bd9a16c  code target (STUB)  (0xffff8bd38080)
0xffff8bd9a17c  constant pool (size 28)
0xffff8bd9a1b8  runtime entry
0xffff8bd9a1c4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = assert
compiler = unknown
Instructions (size = 184)
0xffff8bd9a240     0  sub csp, jssp, #0x8 (8)
0xffff8bd9a244     4  str x3, [jssp, #-8]!
0xffff8bd9a248     8  sub csp, jssp, #0x8 (8)
0xffff8bd9a24c    12  str x4, [jssp, #-8]!
0xffff8bd9a250    16  ldr x3, pc+112 (addr 0x0000ffff8bd9a2c0)    ;; object: 0x26c63e59 Cell for 0
0xffff8bd9a254    20  ldur x3, [x3, #7]
0xffff8bd9a258    24  cmp x3, #0x0 (0)
0xffff8bd9a25c    28  b.ne #+0x44 (addr 0xffff8bd9a2a0)
0xffff8bd9a260    32  tbz w0, #0, #+0x40 (addr 0xffff8bd9a2a0)
0xffff8bd9a264    36  ldur x3, [x0, #-1]
0xffff8bd9a268    40  ldr x4, pc+96 (addr 0x0000ffff8bd9a2c8)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd9a26c    44  ldur x4, [x4, #7]
0xffff8bd9a270    48  cmp x3, x4
0xffff8bd9a274    52  b.ne #+0x2c (addr 0xffff8bd9a2a0)
0xffff8bd9a278    56  ldr x5, pc+88 (addr 0x0000ffff8bd9a2d0)    ;; object: 0x26ce9b51 WeakCell for 0x5f5250a1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd9a27c    60  ldur x5, [x5, #7]
0xffff8bd9a280    64  tbz w5, #0, #+0x20 (addr 0xffff8bd9a2a0)
0xffff8bd9a284    68  ldursw x4, [x5, #15]
0xffff8bd9a288    72  tbnz w4, #23, #+0x18 (addr 0xffff8bd9a2a0)
0xffff8bd9a28c    76  ldr x4, [jssp], #8
0xffff8bd9a290    80  ldr x3, [jssp], #8
0xffff8bd9a294    84  ldr x2, pc+68 (addr 0x0000ffff8bd9a2d8)    ;; object: 0x26cbdc41 <String[6]: assert>
0xffff8bd9a298    88  ldr x16, pc+72 (addr 0x0000ffff8bd9a2e0)    ;; code: HANDLER, StoreTransitionStub, minor: 196612
0xffff8bd9a29c    92  br x16
0xffff8bd9a2a0    96  ldr x2, pc+72 (addr 0x0000ffff8bd9a2e8)    ;; object: 0x26cbdc41 <String[6]: assert>
0xffff8bd9a2a4   100  ldr x4, [jssp], #8
0xffff8bd9a2a8   104  ldr x3, [jssp], #8
0xffff8bd9a2ac   108  ldr x16, pc+68 (addr 0x0000ffff8bd9a2f0)    ;; code: BUILTIN
0xffff8bd9a2b0   112  br x16
0xffff8bd9a2b4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd9a2b8   120  d63f03e0       constant
0xffff8bd9a2bc   124  d503201f       constant
0xffff8bd9a2c0   128  26c63e59       constant
0xffff8bd9a2c4   132  00000000       constant
0xffff8bd9a2c8   136  26cc22b1       constant
0xffff8bd9a2cc   140  00000000       constant
0xffff8bd9a2d0   144  26ce9b51       constant
0xffff8bd9a2d4   148  00000000       constant
0xffff8bd9a2d8   152  26cbdc41       constant
0xffff8bd9a2dc   156  00000000       constant
0xffff8bd9a2e0   160  8bd9a100       constant
0xffff8bd9a2e4   164  0000ffff       constant
0xffff8bd9a2e8   168  26cbdc41       constant
0xffff8bd9a2ec   172  00000000       constant
0xffff8bd9a2f0   176  8bd22420       constant
0xffff8bd9a2f4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bd9a250  embedded object  (0x26c63e59 Cell for 0)
0xffff8bd9a268  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd9a278  embedded object  (0x26ce9b51 WeakCell for 0x5f5250a1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd9a294  embedded object  (0x26cbdc41 <String[6]: assert>)
0xffff8bd9a298  code target (HANDLER)  (0xffff8bd9a100)
0xffff8bd9a2a0  embedded object  (0x26cbdc41 <String[6]: assert>)
0xffff8bd9a2ac  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd9a2b4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = exec
compiler = unknown
Instructions (size = 120)
0xffff8bd9c7a0     0  sub csp, jssp, #0x8 (8)
0xffff8bd9c7a4     4  str x3, [jssp, #-8]!
0xffff8bd9c7a8     8  sub csp, jssp, #0x8 (8)
0xffff8bd9c7ac    12  str x0, [jssp, #-8]!
0xffff8bd9c7b0    16  ldr x0, pc+72 (addr 0x0000ffff8bd9c7f8)    ;; object: 0x26ced491 Cell for 0
0xffff8bd9c7b4    20  ldur x0, [x0, #7]
0xffff8bd9c7b8    24  cmp x0, #0x0 (0)
0xffff8bd9c7bc    28  b.ne #+0x14 (addr 0xffff8bd9c7d0)
0xffff8bd9c7c0    32  ldr x3, pc+64 (addr 0x0000ffff8bd9c800)    ;; object: 0x26ced4a1 WeakCell for 0x5655ea99 <an Object with map 0x5f5164d1>
0xffff8bd9c7c4    36  ldur x3, [x3, #7]
0xffff8bd9c7c8    40  tbz w3, #0, #+0x8 (addr 0xffff8bd9c7d0)
0xffff8bd9c7cc    44  b #+0x14 (addr 0xffff8bd9c7e0)
0xffff8bd9c7d0    48  ldr x0, [jssp], #8
0xffff8bd9c7d4    52  ldr x3, [jssp], #8
0xffff8bd9c7d8    56  ldr x16, pc+48 (addr 0x0000ffff8bd9c808)    ;; code: BUILTIN
0xffff8bd9c7dc    60  br x16
0xffff8bd9c7e0    64  add jssp, jssp, #0x10 (16)
0xffff8bd9c7e4    68  mov x1, x3
0xffff8bd9c7e8    72  ldr x16, pc+40 (addr 0x0000ffff8bd9c810)    ;; code: HANDLER, LoadFieldStub, minor: 2
0xffff8bd9c7ec    76  br x16
0xffff8bd9c7f0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bd9c7f4    84  d63f03e0       constant
0xffff8bd9c7f8    88  26ced491       constant
0xffff8bd9c7fc    92  00000000       constant
0xffff8bd9c800    96  26ced4a1       constant
0xffff8bd9c804   100  00000000       constant
0xffff8bd9c808   104  8bd222e0       constant
0xffff8bd9c80c   108  0000ffff       constant
0xffff8bd9c810   112  8bd6c260       constant
0xffff8bd9c814   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bd9c7b0  embedded object  (0x26ced491 Cell for 0)
0xffff8bd9c7c0  embedded object  (0x26ced4a1 WeakCell for 0x5655ea99 <an Object with map 0x5f5164d1>)
0xffff8bd9c7d8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bd9c7e8  code target (HANDLER)  (0xffff8bd6c260)
0xffff8bd9c7f0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff8bd9cd40     0  mov x2, x0
0xffff8bd9cd44     4  stur x2, [x1, #47]
0xffff8bd9cd48     8  tbz w2, #0, #+0x34 (addr 0xffff8bd9cd7c)
0xffff8bd9cd4c    12  add x3, x1, #0x2f (47)
0xffff8bd9cd50    16  and x2, x2, #0xfffffffffff00000
0xffff8bd9cd54    20  ldr x2, [x2, #8]
0xffff8bd9cd58    24  tbz w2, #1, #+0x24 (addr 0xffff8bd9cd7c)
0xffff8bd9cd5c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd9cd60    32  ldr x2, [x2, #8]
0xffff8bd9cd64    36  tbz w2, #2, #+0x18 (addr 0xffff8bd9cd7c)
0xffff8bd9cd68    40  sub csp, jssp, #0x8 (8)
0xffff8bd9cd6c    44  str lr, [jssp, #-8]!
0xffff8bd9cd70    48  ldr x16, pc+24 (addr 0x0000ffff8bd9cd88)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd9cd74    52  blr x16
0xffff8bd9cd78    56  ldr lr, [jssp], #8
0xffff8bd9cd7c    60  ret
0xffff8bd9cd80    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd9cd84    68  d63f03e0       constant
0xffff8bd9cd88    72  8bd170c0       constant
0xffff8bd9cd8c    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 7)
0xffff8bd9cd70  code target (STUB)  (0xffff8bd170c0)
0xffff8bd9cd80  constant pool (size 16)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff8bd9cd40     0  mov x2, x0
0xffff8bd9cd44     4  stur x2, [x1, #47]
0xffff8bd9cd48     8  tbz w2, #0, #+0x34 (addr 0xffff8bd9cd7c)
0xffff8bd9cd4c    12  add x3, x1, #0x2f (47)
0xffff8bd9cd50    16  and x2, x2, #0xfffffffffff00000
0xffff8bd9cd54    20  ldr x2, [x2, #8]
0xffff8bd9cd58    24  tbz w2, #1, #+0x24 (addr 0xffff8bd9cd7c)
0xffff8bd9cd5c    28  and x2, x1, #0xfffffffffff00000
0xffff8bd9cd60    32  ldr x2, [x2, #8]
0xffff8bd9cd64    36  tbz w2, #2, #+0x18 (addr 0xffff8bd9cd7c)
0xffff8bd9cd68    40  sub csp, jssp, #0x8 (8)
0xffff8bd9cd6c    44  str lr, [jssp, #-8]!
0xffff8bd9cd70    48  ldr x16, pc+24 (addr 0x0000ffff8bd9cd88)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bd9cd74    52  blr x16
0xffff8bd9cd78    56  ldr lr, [jssp], #8
0xffff8bd9cd7c    60  ret
0xffff8bd9cd80    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bd9cd84    68  d63f03e0       constant
0xffff8bd9cd88    72  8bd170c0       constant
0xffff8bd9cd8c    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 7)
0xffff8bd9cd70  code target (STUB)  (0xffff8bd170c0)
0xffff8bd9cd80  constant pool (size 16)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff8bd9d3c0     0  ldur x6, [x1, #7]
0xffff8bd9d3c4     4  ldur w7, [x6, #11]
0xffff8bd9d3c8     8  adds w8, w7, #0x3 (3)
0xffff8bd9d3cc    12  b.vs #+0x1dc (addr 0xffff8bd9d5a8)
0xffff8bd9d3d0    16  movz w16, #0x95ff
0xffff8bd9d3d4    20  cmp w8, w16, lsl #1
0xffff8bd9d3d8    24  b.hs #+0x1e0 (addr 0xffff8bd9d5b8)
0xffff8bd9d3dc    28  lsl x9, x8, #32
0xffff8bd9d3e0    32  lsl w10, w8, #3
0xffff8bd9d3e4    36  add w10, w10, #0x10 (16)
0xffff8bd9d3e8    40  sxtw x10, w10
0xffff8bd9d3ec    44  movz x11, #0xe2c0
0xffff8bd9d3f0    48  movk x11, #0x2cb8, lsl #16
0xffff8bd9d3f4    52  ldp x13, x16, [x11]
0xffff8bd9d3f8    56  adds x12, x13, x10
0xffff8bd9d3fc    60  ccmp x12, x16, #nzCv, lo
0xffff8bd9d400    64  b.hi #+0xf8 (addr 0xffff8bd9d4f8)
0xffff8bd9d404    68  str x12, [x11]
0xffff8bd9d408    72  orr x13, x13, #0x1
0xffff8bd9d40c    76  ldr x10, pc+348 (addr 0x0000ffff8bd9d568)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd9d410    80  stur x10, [x13, #-1]
0xffff8bd9d414    84  stur x9, [x13, #7]
0xffff8bd9d418    88  cmp w7, w8
0xffff8bd9d41c    92  b.ge #+0x18 (addr 0xffff8bd9d434)
0xffff8bd9d420    96  sub w8, w8, #0x1 (1)
0xffff8bd9d424   100  ldr x9, pc+332 (addr 0x0000ffff8bd9d570)    ;; object: 0x26c04241 <undefined>
0xffff8bd9d428   104  add x10, x13, #0xf (15)
0xffff8bd9d42c   108  str x9, [x10, w8, sxtw #3]
0xffff8bd9d430   112  b #-0x18 (addr 0xffff8bd9d418)
0xffff8bd9d434   116  cmp w7, #0x0 (0)
0xffff8bd9d438   120  b.le #+0x1c (addr 0xffff8bd9d454)
0xffff8bd9d43c   124  sub w7, w7, #0x1 (1)
0xffff8bd9d440   128  add x8, x6, #0xf (15)
0xffff8bd9d444   132  ldr x9, [x8, w7, sxtw #3]
0xffff8bd9d448   136  add x8, x13, #0xf (15)
0xffff8bd9d44c   140  str x9, [x8, w7, sxtw #3]
0xffff8bd9d450   144  b #-0x1c (addr 0xffff8bd9d434)
0xffff8bd9d454   148  stur x13, [x1, #7]
0xffff8bd9d458   152  add x6, x1, #0x7 (7)
0xffff8bd9d45c   156  and x13, x1, #0xfffffffffff00000
0xffff8bd9d460   160  ldr x13, [x13, #8]
0xffff8bd9d464   164  tbz w13, #2, #+0x18 (addr 0xffff8bd9d47c)
0xffff8bd9d468   168  sub csp, jssp, #0x8 (8)
0xffff8bd9d46c   172  str lr, [jssp, #-8]!
0xffff8bd9d470   176  ldr x16, pc+264 (addr 0x0000ffff8bd9d578)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff8bd9d474   180  blr x16
0xffff8bd9d478   184  ldr lr, [jssp], #8
0xffff8bd9d47c   188  tbz w0, #0, #+0x14c (addr 0xffff8bd9d5c8)
0xffff8bd9d480   192  mov x2, x0
0xffff8bd9d484   196  ldur x4, [x1, #7]
0xffff8bd9d488   200  stur x2, [x4, #39]
0xffff8bd9d48c   204  add x3, x4, #0x27 (39)
0xffff8bd9d490   208  and x2, x2, #0xfffffffffff00000
0xffff8bd9d494   212  ldr x2, [x2, #8]
0xffff8bd9d498   216  tbz w2, #1, #+0x24 (addr 0xffff8bd9d4bc)
0xffff8bd9d49c   220  and x2, x4, #0xfffffffffff00000
0xffff8bd9d4a0   224  ldr x2, [x2, #8]
0xffff8bd9d4a4   228  tbz w2, #2, #+0x18 (addr 0xffff8bd9d4bc)
0xffff8bd9d4a8   232  sub csp, jssp, #0x8 (8)
0xffff8bd9d4ac   236  str lr, [jssp, #-8]!
0xffff8bd9d4b0   240  ldr x16, pc+208 (addr 0x0000ffff8bd9d580)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bd9d4b4   244  blr x16
0xffff8bd9d4b8   248  ldr lr, [jssp], #8
0xffff8bd9d4bc   252  stur x5, [x1, #-1]
0xffff8bd9d4c0   256  tbz w5, #0, #+0x34 (addr 0xffff8bd9d4f4)
0xffff8bd9d4c4   260  sub x2, x1, #0x1 (1)
0xffff8bd9d4c8   264  and x5, x5, #0xfffffffffff00000
0xffff8bd9d4cc   268  ldr x5, [x5, #8]
0xffff8bd9d4d0   272  tbz w5, #1, #+0x24 (addr 0xffff8bd9d4f4)
0xffff8bd9d4d4   276  and x5, x1, #0xfffffffffff00000
0xffff8bd9d4d8   280  ldr x5, [x5, #8]
0xffff8bd9d4dc   284  tbz w5, #2, #+0x18 (addr 0xffff8bd9d4f4)
0xffff8bd9d4e0   288  sub csp, jssp, #0x8 (8)
0xffff8bd9d4e4   292  str lr, [jssp, #-8]!
0xffff8bd9d4e8   296  ldr x16, pc+160 (addr 0x0000ffff8bd9d588)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd9d4ec   300  blr x16
0xffff8bd9d4f0   304  ldr lr, [jssp], #8
0xffff8bd9d4f4   308  ret
0xffff8bd9d4f8   312  sub csp, jssp, #0x10 (16)
0xffff8bd9d4fc   316  stp fp, lr, [jssp, #-16]!
0xffff8bd9d500   320  movz fp, #0xa00000000
0xffff8bd9d504   324  sub csp, jssp, #0x8 (8)
0xffff8bd9d508   328  str fp, [jssp, #-8]!
0xffff8bd9d50c   332  add fp, jssp, #0x8 (8)
0xffff8bd9d510   336  movz x13, #0x0
0xffff8bd9d514   340  mov x16, lr
0xffff8bd9d518   344  ldr x17, pc+120 (addr 0x0000ffff8bd9d590)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd9d51c   348  blr x17
0xffff8bd9d520   352  lsl x0, x10, #32
0xffff8bd9d524   356  movz x10, #0x0
0xffff8bd9d528   360  sub csp, jssp, #0x10 (16)
0xffff8bd9d52c   364  stp x10, x0, [jssp, #-16]!
0xffff8bd9d530   368  movz x0, #0x2
0xffff8bd9d534   372  movz x1, #0x5b88
0xffff8bd9d538   376  movk x1, #0xe2, lsl #16
0xffff8bd9d53c   380  ldr x16, pc+92 (addr 0x0000ffff8bd9d598)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd9d540   384  blr x16
0xffff8bd9d544   388  str x0, [jssp, #104]
0xffff8bd9d548   392  ldr x16, pc+88 (addr 0x0000ffff8bd9d5a0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd9d54c   396  blr x16
0xffff8bd9d550   400  ldr lr, [jssp, #16]
0xffff8bd9d554   404  ldp xzr, fp, [jssp], #24
0xffff8bd9d558   408  b #-0x14c (addr 0xffff8bd9d40c)
0xffff8bd9d55c   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff8bd9d560   416  d63f03e0       constant
0xffff8bd9d564   420  d503201f       constant
0xffff8bd9d568   424  5f504259       constant
0xffff8bd9d56c   428  00000000       constant
0xffff8bd9d570   432  26c04241       constant
0xffff8bd9d574   436  00000000       constant
0xffff8bd9d578   440  8bd370c0       constant
0xffff8bd9d57c   444  0000ffff       constant
0xffff8bd9d580   448  8bd378a0       constant
0xffff8bd9d584   452  0000ffff       constant
0xffff8bd9d588   456  8bd38080       constant
0xffff8bd9d58c   460  0000ffff       constant
0xffff8bd9d590   464  8bd06820       constant
0xffff8bd9d594   468  0000ffff       constant
0xffff8bd9d598   472  8bd06260       constant
0xffff8bd9d59c   476  0000ffff       constant
0xffff8bd9d5a0   480  8bd068e0       constant
0xffff8bd9d5a4   484  0000ffff       constant
0xffff8bd9d5a8   488  movz x16, #0x0
0xffff8bd9d5ac   492  sub csp, jssp, #0x10 (16)
0xffff8bd9d5b0   496  stp fp, lr, [jssp, #-16]!
0xffff8bd9d5b4   500  bl #+0x24 (addr 0xffff8bd9d5d8)
0xffff8bd9d5b8   504  movz x16, #0x8
0xffff8bd9d5bc   508  sub csp, jssp, #0x10 (16)
0xffff8bd9d5c0   512  stp fp, lr, [jssp, #-16]!
0xffff8bd9d5c4   516  bl #+0x14 (addr 0xffff8bd9d5d8)
0xffff8bd9d5c8   520  movz x16, #0x10
0xffff8bd9d5cc   524  sub csp, jssp, #0x10 (16)
0xffff8bd9d5d0   528  stp fp, lr, [jssp, #-16]!
0xffff8bd9d5d4   532  bl #+0x4 (addr 0xffff8bd9d5d8)
0xffff8bd9d5d8   536  movz x17, #0xa00000000
0xffff8bd9d5dc   540  sub csp, jssp, #0x10 (16)
0xffff8bd9d5e0   544  stp x17, cp, [jssp, #-16]!
0xffff8bd9d5e4   548  add fp, jssp, #0x10 (16)
0xffff8bd9d5e8   552  ldr x17, pc+24 (addr 0x0000ffff8bd9d600)    ;; lazy deoptimization bailout 0
0xffff8bd9d5ec   556  add x17, x17, x16
0xffff8bd9d5f0   560  br x17
0xffff8bd9d5f4   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd9d5f8   568  d63f03e0       constant
0xffff8bd9d5fc   572  d503201f       constant
0xffff8bd9d600   576  8bb06000       constant
0xffff8bd9d604   580  0000ffff       constant


Safepoints (size = 21)
0xffff8bd9d544   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bd9d40c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd9d424  embedded object  (0x26c04241 <undefined>)
0xffff8bd9d470  code target (STUB)  (0xffff8bd370c0)
0xffff8bd9d4b0  code target (STUB)  (0xffff8bd378a0)
0xffff8bd9d4e8  code target (STUB)  (0xffff8bd38080)
0xffff8bd9d518  code target (STUB)  (0xffff8bd06820)
0xffff8bd9d53c  code target (STUB)  (0xffff8bd06260)
0xffff8bd9d548  code target (STUB)  (0xffff8bd068e0)
0xffff8bd9d55c  constant pool (size 76)
0xffff8bd9d5e8  runtime entry
0xffff8bd9d5f4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff8bd9d3c0     0  ldur x6, [x1, #7]
0xffff8bd9d3c4     4  ldur w7, [x6, #11]
0xffff8bd9d3c8     8  adds w8, w7, #0x3 (3)
0xffff8bd9d3cc    12  b.vs #+0x1dc (addr 0xffff8bd9d5a8)
0xffff8bd9d3d0    16  movz w16, #0x95ff
0xffff8bd9d3d4    20  cmp w8, w16, lsl #1
0xffff8bd9d3d8    24  b.hs #+0x1e0 (addr 0xffff8bd9d5b8)
0xffff8bd9d3dc    28  lsl x9, x8, #32
0xffff8bd9d3e0    32  lsl w10, w8, #3
0xffff8bd9d3e4    36  add w10, w10, #0x10 (16)
0xffff8bd9d3e8    40  sxtw x10, w10
0xffff8bd9d3ec    44  movz x11, #0xe2c0
0xffff8bd9d3f0    48  movk x11, #0x2cb8, lsl #16
0xffff8bd9d3f4    52  ldp x13, x16, [x11]
0xffff8bd9d3f8    56  adds x12, x13, x10
0xffff8bd9d3fc    60  ccmp x12, x16, #nzCv, lo
0xffff8bd9d400    64  b.hi #+0xf8 (addr 0xffff8bd9d4f8)
0xffff8bd9d404    68  str x12, [x11]
0xffff8bd9d408    72  orr x13, x13, #0x1
0xffff8bd9d40c    76  ldr x10, pc+348 (addr 0x0000ffff8bd9d568)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bd9d410    80  stur x10, [x13, #-1]
0xffff8bd9d414    84  stur x9, [x13, #7]
0xffff8bd9d418    88  cmp w7, w8
0xffff8bd9d41c    92  b.ge #+0x18 (addr 0xffff8bd9d434)
0xffff8bd9d420    96  sub w8, w8, #0x1 (1)
0xffff8bd9d424   100  ldr x9, pc+332 (addr 0x0000ffff8bd9d570)    ;; object: 0x26c04241 <undefined>
0xffff8bd9d428   104  add x10, x13, #0xf (15)
0xffff8bd9d42c   108  str x9, [x10, w8, sxtw #3]
0xffff8bd9d430   112  b #-0x18 (addr 0xffff8bd9d418)
0xffff8bd9d434   116  cmp w7, #0x0 (0)
0xffff8bd9d438   120  b.le #+0x1c (addr 0xffff8bd9d454)
0xffff8bd9d43c   124  sub w7, w7, #0x1 (1)
0xffff8bd9d440   128  add x8, x6, #0xf (15)
0xffff8bd9d444   132  ldr x9, [x8, w7, sxtw #3]
0xffff8bd9d448   136  add x8, x13, #0xf (15)
0xffff8bd9d44c   140  str x9, [x8, w7, sxtw #3]
0xffff8bd9d450   144  b #-0x1c (addr 0xffff8bd9d434)
0xffff8bd9d454   148  stur x13, [x1, #7]
0xffff8bd9d458   152  add x6, x1, #0x7 (7)
0xffff8bd9d45c   156  and x13, x1, #0xfffffffffff00000
0xffff8bd9d460   160  ldr x13, [x13, #8]
0xffff8bd9d464   164  tbz w13, #2, #+0x18 (addr 0xffff8bd9d47c)
0xffff8bd9d468   168  sub csp, jssp, #0x8 (8)
0xffff8bd9d46c   172  str lr, [jssp, #-8]!
0xffff8bd9d470   176  ldr x16, pc+264 (addr 0x0000ffff8bd9d578)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff8bd9d474   180  blr x16
0xffff8bd9d478   184  ldr lr, [jssp], #8
0xffff8bd9d47c   188  tbz w0, #0, #+0x14c (addr 0xffff8bd9d5c8)
0xffff8bd9d480   192  mov x2, x0
0xffff8bd9d484   196  ldur x4, [x1, #7]
0xffff8bd9d488   200  stur x2, [x4, #39]
0xffff8bd9d48c   204  add x3, x4, #0x27 (39)
0xffff8bd9d490   208  and x2, x2, #0xfffffffffff00000
0xffff8bd9d494   212  ldr x2, [x2, #8]
0xffff8bd9d498   216  tbz w2, #1, #+0x24 (addr 0xffff8bd9d4bc)
0xffff8bd9d49c   220  and x2, x4, #0xfffffffffff00000
0xffff8bd9d4a0   224  ldr x2, [x2, #8]
0xffff8bd9d4a4   228  tbz w2, #2, #+0x18 (addr 0xffff8bd9d4bc)
0xffff8bd9d4a8   232  sub csp, jssp, #0x8 (8)
0xffff8bd9d4ac   236  str lr, [jssp, #-8]!
0xffff8bd9d4b0   240  ldr x16, pc+208 (addr 0x0000ffff8bd9d580)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bd9d4b4   244  blr x16
0xffff8bd9d4b8   248  ldr lr, [jssp], #8
0xffff8bd9d4bc   252  stur x5, [x1, #-1]
0xffff8bd9d4c0   256  tbz w5, #0, #+0x34 (addr 0xffff8bd9d4f4)
0xffff8bd9d4c4   260  sub x2, x1, #0x1 (1)
0xffff8bd9d4c8   264  and x5, x5, #0xfffffffffff00000
0xffff8bd9d4cc   268  ldr x5, [x5, #8]
0xffff8bd9d4d0   272  tbz w5, #1, #+0x24 (addr 0xffff8bd9d4f4)
0xffff8bd9d4d4   276  and x5, x1, #0xfffffffffff00000
0xffff8bd9d4d8   280  ldr x5, [x5, #8]
0xffff8bd9d4dc   284  tbz w5, #2, #+0x18 (addr 0xffff8bd9d4f4)
0xffff8bd9d4e0   288  sub csp, jssp, #0x8 (8)
0xffff8bd9d4e4   292  str lr, [jssp, #-8]!
0xffff8bd9d4e8   296  ldr x16, pc+160 (addr 0x0000ffff8bd9d588)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bd9d4ec   300  blr x16
0xffff8bd9d4f0   304  ldr lr, [jssp], #8
0xffff8bd9d4f4   308  ret
0xffff8bd9d4f8   312  sub csp, jssp, #0x10 (16)
0xffff8bd9d4fc   316  stp fp, lr, [jssp, #-16]!
0xffff8bd9d500   320  movz fp, #0xa00000000
0xffff8bd9d504   324  sub csp, jssp, #0x8 (8)
0xffff8bd9d508   328  str fp, [jssp, #-8]!
0xffff8bd9d50c   332  add fp, jssp, #0x8 (8)
0xffff8bd9d510   336  movz x13, #0x0
0xffff8bd9d514   340  mov x16, lr
0xffff8bd9d518   344  ldr x17, pc+120 (addr 0x0000ffff8bd9d590)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bd9d51c   348  blr x17
0xffff8bd9d520   352  lsl x0, x10, #32
0xffff8bd9d524   356  movz x10, #0x0
0xffff8bd9d528   360  sub csp, jssp, #0x10 (16)
0xffff8bd9d52c   364  stp x10, x0, [jssp, #-16]!
0xffff8bd9d530   368  movz x0, #0x2
0xffff8bd9d534   372  movz x1, #0x5b88
0xffff8bd9d538   376  movk x1, #0xe2, lsl #16
0xffff8bd9d53c   380  ldr x16, pc+92 (addr 0x0000ffff8bd9d598)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bd9d540   384  blr x16
0xffff8bd9d544   388  str x0, [jssp, #104]
0xffff8bd9d548   392  ldr x16, pc+88 (addr 0x0000ffff8bd9d5a0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bd9d54c   396  blr x16
0xffff8bd9d550   400  ldr lr, [jssp, #16]
0xffff8bd9d554   404  ldp xzr, fp, [jssp], #24
0xffff8bd9d558   408  b #-0x14c (addr 0xffff8bd9d40c)
0xffff8bd9d55c   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff8bd9d560   416  d63f03e0       constant
0xffff8bd9d564   420  d503201f       constant
0xffff8bd9d568   424  5f504259       constant
0xffff8bd9d56c   428  00000000       constant
0xffff8bd9d570   432  26c04241       constant
0xffff8bd9d574   436  00000000       constant
0xffff8bd9d578   440  8bd370c0       constant
0xffff8bd9d57c   444  0000ffff       constant
0xffff8bd9d580   448  8bd378a0       constant
0xffff8bd9d584   452  0000ffff       constant
0xffff8bd9d588   456  8bd38080       constant
0xffff8bd9d58c   460  0000ffff       constant
0xffff8bd9d590   464  8bd06820       constant
0xffff8bd9d594   468  0000ffff       constant
0xffff8bd9d598   472  8bd06260       constant
0xffff8bd9d59c   476  0000ffff       constant
0xffff8bd9d5a0   480  8bd068e0       constant
0xffff8bd9d5a4   484  0000ffff       constant
0xffff8bd9d5a8   488  movz x16, #0x0
0xffff8bd9d5ac   492  sub csp, jssp, #0x10 (16)
0xffff8bd9d5b0   496  stp fp, lr, [jssp, #-16]!
0xffff8bd9d5b4   500  bl #+0x24 (addr 0xffff8bd9d5d8)
0xffff8bd9d5b8   504  movz x16, #0x8
0xffff8bd9d5bc   508  sub csp, jssp, #0x10 (16)
0xffff8bd9d5c0   512  stp fp, lr, [jssp, #-16]!
0xffff8bd9d5c4   516  bl #+0x14 (addr 0xffff8bd9d5d8)
0xffff8bd9d5c8   520  movz x16, #0x10
0xffff8bd9d5cc   524  sub csp, jssp, #0x10 (16)
0xffff8bd9d5d0   528  stp fp, lr, [jssp, #-16]!
0xffff8bd9d5d4   532  bl #+0x4 (addr 0xffff8bd9d5d8)
0xffff8bd9d5d8   536  movz x17, #0xa00000000
0xffff8bd9d5dc   540  sub csp, jssp, #0x10 (16)
0xffff8bd9d5e0   544  stp x17, cp, [jssp, #-16]!
0xffff8bd9d5e4   548  add fp, jssp, #0x10 (16)
0xffff8bd9d5e8   552  ldr x17, pc+24 (addr 0x0000ffff8bd9d600)    ;; lazy deoptimization bailout 0
0xffff8bd9d5ec   556  add x17, x17, x16
0xffff8bd9d5f0   560  br x17
0xffff8bd9d5f4   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bd9d5f8   568  d63f03e0       constant
0xffff8bd9d5fc   572  d503201f       constant
0xffff8bd9d600   576  8bb06000       constant
0xffff8bd9d604   580  0000ffff       constant


Safepoints (size = 21)
0xffff8bd9d544   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bd9d40c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bd9d424  embedded object  (0x26c04241 <undefined>)
0xffff8bd9d470  code target (STUB)  (0xffff8bd370c0)
0xffff8bd9d4b0  code target (STUB)  (0xffff8bd378a0)
0xffff8bd9d4e8  code target (STUB)  (0xffff8bd38080)
0xffff8bd9d518  code target (STUB)  (0xffff8bd06820)
0xffff8bd9d53c  code target (STUB)  (0xffff8bd06260)
0xffff8bd9d548  code target (STUB)  (0xffff8bd068e0)
0xffff8bd9d55c  constant pool (size 76)
0xffff8bd9d5e8  runtime entry
0xffff8bd9d5f4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/process
compiler = unknown
Instructions (size = 184)
0xffff8bd9d680     0  sub csp, jssp, #0x8 (8)
0xffff8bd9d684     4  str x3, [jssp, #-8]!
0xffff8bd9d688     8  sub csp, jssp, #0x8 (8)
0xffff8bd9d68c    12  str x4, [jssp, #-8]!
0xffff8bd9d690    16  ldr x3, pc+112 (addr 0x0000ffff8bd9d700)    ;; object: 0x26c63e59 Cell for 0
0xffff8bd9d694    20  ldur x3, [x3, #7]
0xffff8bd9d698    24  cmp x3, #0x0 (0)
0xffff8bd9d69c    28  b.ne #+0x44 (addr 0xffff8bd9d6e0)
0xffff8bd9d6a0    32  tbz w0, #0, #+0x40 (addr 0xffff8bd9d6e0)
0xffff8bd9d6a4    36  ldur x3, [x0, #-1]
0xffff8bd9d6a8    40  ldr x4, pc+96 (addr 0x0000ffff8bd9d708)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd9d6ac    44  ldur x4, [x4, #7]
0xffff8bd9d6b0    48  cmp x3, x4
0xffff8bd9d6b4    52  b.ne #+0x2c (addr 0xffff8bd9d6e0)
0xffff8bd9d6b8    56  ldr x5, pc+88 (addr 0x0000ffff8bd9d710)    ;; object: 0x26cee969 WeakCell for 0x5f525f11 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bd9d6bc    60  ldur x5, [x5, #7]
0xffff8bd9d6c0    64  tbz w5, #0, #+0x20 (addr 0xffff8bd9d6e0)
0xffff8bd9d6c4    68  ldursw x4, [x5, #15]
0xffff8bd9d6c8    72  tbnz w4, #23, #+0x18 (addr 0xffff8bd9d6e0)
0xffff8bd9d6cc    76  ldr x4, [jssp], #8
0xffff8bd9d6d0    80  ldr x3, [jssp], #8
0xffff8bd9d6d4    84  ldr x2, pc+68 (addr 0x0000ffff8bd9d718)    ;; object: 0x26cb9649 <String[16]: internal/process>
0xffff8bd9d6d8    88  ldr x16, pc+72 (addr 0x0000ffff8bd9d720)    ;; code: HANDLER, StoreTransitionStub, minor: 327685
0xffff8bd9d6dc    92  br x16
0xffff8bd9d6e0    96  ldr x2, pc+72 (addr 0x0000ffff8bd9d728)    ;; object: 0x26cb9649 <String[16]: internal/process>
0xffff8bd9d6e4   100  ldr x4, [jssp], #8
0xffff8bd9d6e8   104  ldr x3, [jssp], #8
0xffff8bd9d6ec   108  ldr x16, pc+68 (addr 0x0000ffff8bd9d730)    ;; code: BUILTIN
0xffff8bd9d6f0   112  br x16
0xffff8bd9d6f4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bd9d6f8   120  d63f03e0       constant
0xffff8bd9d6fc   124  d503201f       constant
0xffff8bd9d700   128  26c63e59       constant
0xffff8bd9d704   132  00000000       constant
0xffff8bd9d708   136  26cc22b1       constant
0xffff8bd9d70c   140  00000000       constant
0xffff8bd9d710   144  26cee969       constant
0xffff8bd9d714   148  00000000       constant
0xffff8bd9d718   152  26cb9649       constant
0xffff8bd9d71c   156  00000000       constant
0xffff8bd9d720   160  8bd9d3c0       constant
0xffff8bd9d724   164  0000ffff       constant
0xffff8bd9d728   168  26cb9649       constant
0xffff8bd9d72c   172  00000000       constant
0xffff8bd9d730   176  8bd22420       constant
0xffff8bd9d734   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bd9d690  embedded object  (0x26c63e59 Cell for 0)
0xffff8bd9d6a8  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd9d6b8  embedded object  (0x26cee969 WeakCell for 0x5f525f11 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bd9d6d4  embedded object  (0x26cb9649 <String[16]: internal/process>)
0xffff8bd9d6d8  code target (HANDLER)  (0xffff8bd9d3c0)
0xffff8bd9d6e0  embedded object  (0x26cb9649 <String[16]: internal/process>)
0xffff8bd9d6ec  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bd9d6f4  constant pool (size 68)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*GENERIC -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff8bd9faa0     0  orr x16, x1, x0
0xffff8bd9faa4     4  tbnz w16, #0, #+0x10 (addr 0xffff8bd9fab4)
0xffff8bd9faa8     8  asr x1, x1, #32
0xffff8bd9faac    12  sub x0, x1, x0, asr #32
0xffff8bd9fab0    16  ret
0xffff8bd9fab4    20  cmp x0, x1
0xffff8bd9fab8    24  b.ne #+0x30 (addr 0xffff8bd9fae8)
0xffff8bd9fabc    28  ldur x16, [x0, #-1]
0xffff8bd9fac0    32  ldr x17, [x26, #120]
0xffff8bd9fac4    36  cmp x16, x17
0xffff8bd9fac8    40  b.eq #+0xc (addr 0xffff8bd9fad4)
0xffff8bd9facc    44  movz x0, #0x0
0xffff8bd9fad0    48  ret
0xffff8bd9fad4    52  ldur d0, [x0, #7]
0xffff8bd9fad8    56  fcmp d0, d0
0xffff8bd9fadc    60  b.vc #-0x10 (addr 0xffff8bd9facc)
0xffff8bd9fae0    64  movn x0, #0x0
0xffff8bd9fae4    68  ret
0xffff8bd9fae8    72  and x16, x1, x0
0xffff8bd9faec    76  tbnz w16, #0, #+0x64 (addr 0xffff8bd9fb50)
0xffff8bd9faf0    80  tbz w0, #0, #+0x24 (addr 0xffff8bd9fb14)
0xffff8bd9faf4    84  ldur x16, [x0, #-1]
0xffff8bd9faf8    88  ldr x17, [x26, #120]
0xffff8bd9fafc    92  cmp x16, x17
0xffff8bd9fb00    96  b.eq #+0x8 (addr 0xffff8bd9fb08)
0xffff8bd9fb04   100  ret
0xffff8bd9fb08   104  ldur d0, [x0, #7]
0xffff8bd9fb0c   108  scvtf d1, x1, #32
0xffff8bd9fb10   112  b #+0x24 (addr 0xffff8bd9fb34)
0xffff8bd9fb14   116  ldur x16, [x1, #-1]
0xffff8bd9fb18   120  ldr x17, [x26, #120]
0xffff8bd9fb1c   124  cmp x16, x17
0xffff8bd9fb20   128  b.eq #+0xc (addr 0xffff8bd9fb2c)
0xffff8bd9fb24   132  movz x0, #0x1
0xffff8bd9fb28   136  ret
0xffff8bd9fb2c   140  ldur d1, [x1, #7]
0xffff8bd9fb30   144  scvtf d0, x0, #32
0xffff8bd9fb34   148  fcmp d1, d0
0xffff8bd9fb38   152  b.vs #+0x10 (addr 0xffff8bd9fb48)
0xffff8bd9fb3c   156  cset x0, gt
0xffff8bd9fb40   160  csinv x0, x0, xzr, ge
0xffff8bd9fb44   164  ret
0xffff8bd9fb48   168  movn x0, #0x0
0xffff8bd9fb4c   172  ret
0xffff8bd9fb50   176  ldur x10, [x0, #-1]
0xffff8bd9fb54   180  ldur x12, [x1, #-1]
0xffff8bd9fb58   184  ldrb w11, [x10, #11]
0xffff8bd9fb5c   188  ldrb w13, [x12, #11]
0xffff8bd9fb60   192  cmp x11, #0xb1 (177)
0xffff8bd9fb64   196  b.lt #+0x8 (addr 0xffff8bd9fb6c)
0xffff8bd9fb68   200  ret
0xffff8bd9fb6c   204  cmp x11, #0x83 (131)
0xffff8bd9fb70   208  movz x16, #0x83
0xffff8bd9fb74   212  ccmp x13, x16, #nZcv, ne
0xffff8bd9fb78   216  movz x16, #0xb1
0xffff8bd9fb7c   220  ccmp x13, x16, #NzcV, ne
0xffff8bd9fb80   224  b.ge #-0x18 (addr 0xffff8bd9fb68)
0xffff8bd9fb84   228  orr x14, x13, x11
0xffff8bd9fb88   232  tst x14, #0xc0
0xffff8bd9fb8c   236  b.eq #-0x24 (addr 0xffff8bd9fb68)
0xffff8bd9fb90   240  cmp x11, #0x81 (129)
0xffff8bd9fb94   244  b.ne #+0x18 (addr 0xffff8bd9fbac)
0xffff8bd9fb98   248  cmp x12, x10
0xffff8bd9fb9c   252  b.ne #+0x10 (addr 0xffff8bd9fbac)
0xffff8bd9fba0   256  ldur d1, [x1, #7]
0xffff8bd9fba4   260  ldur d0, [x0, #7]
0xffff8bd9fba8   264  b #-0x74 (addr 0xffff8bd9fb34)
0xffff8bd9fbac   268  movz x16, #0x87
0xffff8bd9fbb0   272  and x14, x13, x16
0xffff8bd9fbb4   276  movz x16, #0x87
0xffff8bd9fbb8   280  and x15, x11, x16
0xffff8bd9fbbc   284  cmp x14, #0x4 (4)
0xffff8bd9fbc0   288  ccmp x15, #4, #nzcv, eq
0xffff8bd9fbc4   292  b.ne #+0x5c (addr 0xffff8bd9fc20)
0xffff8bd9fbc8   296  ldur x10, [x1, #15]
0xffff8bd9fbcc   300  ldur x11, [x0, #15]
0xffff8bd9fbd0   304  cmp x10, x11
0xffff8bd9fbd4   308  b.eq #+0xc (addr 0xffff8bd9fbe0)
0xffff8bd9fbd8   312  movz x0, #0x100000000
0xffff8bd9fbdc   316  ret
0xffff8bd9fbe0   320  cbnz x10, #+0xc (addr 0xffff8bd9fbec)
0xffff8bd9fbe4   324  movz x0, #0x0
0xffff8bd9fbe8   328  ret
0xffff8bd9fbec   332  asr x10, x10, #32
0xffff8bd9fbf0   336  add x11, x10, #0x17 (23)
0xffff8bd9fbf4   340  add x1, x1, x11
0xffff8bd9fbf8   344  add x0, x0, x11
0xffff8bd9fbfc   348  neg x10, x10
0xffff8bd9fc00   352  ldrb w11, [x1, x10]
0xffff8bd9fc04   356  ldrb w12, [x0, x10]
0xffff8bd9fc08   360  cmp x11, x12
0xffff8bd9fc0c   364  b.ne #-0x34 (addr 0xffff8bd9fbd8)
0xffff8bd9fc10   368  add x10, x10, #0x1 (1)
0xffff8bd9fc14   372  cbnz x10, #-0x14 (addr 0xffff8bd9fc00)
0xffff8bd9fc18   376  movz x0, #0x0
0xffff8bd9fc1c   380  ret
0xffff8bd9fc20   384  movz x16, #0xc00000000
0xffff8bd9fc24   388  sub csp, jssp, #0x10 (16)
0xffff8bd9fc28   392  stp fp, lr, [jssp, #-16]!
0xffff8bd9fc2c   396  sub csp, jssp, #0x10 (16)
0xffff8bd9fc30   400  str x16, [jssp, #-8]!
0xffff8bd9fc34   404  ldr x17, pc+172 (addr 0x0000ffff8bd9fce0)    ;; object: 0xffff8bd9fa41 <Code: COMPARE_IC>
0xffff8bd9fc38   408  sub csp, jssp, #0x10 (16)
0xffff8bd9fc3c   412  str x17, [jssp, #-8]!
0xffff8bd9fc40   416  add fp, jssp, #0x10 (16)
0xffff8bd9fc44   420  sub csp, jssp, #0x10 (16)
0xffff8bd9fc48   424  stp x0, x1, [jssp, #-16]!
0xffff8bd9fc4c   428  movz x0, #0x2
0xffff8bd9fc50   432  ldr x1, pc+152 (addr 0x0000ffff8bd9fce8)    ;; external reference (Runtime::StrictEqual)
0xffff8bd9fc54   436  ldr x16, pc+156 (addr 0x0000ffff8bd9fcf0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd9fc58   440  blr x16
0xffff8bd9fc5c   444  mov jssp, fp
0xffff8bd9fc60   448  ldp fp, lr, [jssp], #16
0xffff8bd9fc64   452  ldr x1, [x26, #64]
0xffff8bd9fc68   456  sub x0, x0, x1
0xffff8bd9fc6c   460  ret
0xffff8bd9fc70   464  movz x16, #0xc00000000
0xffff8bd9fc74   468  sub csp, jssp, #0x10 (16)
0xffff8bd9fc78   472  stp fp, lr, [jssp, #-16]!
0xffff8bd9fc7c   476  sub csp, jssp, #0x10 (16)
0xffff8bd9fc80   480  str x16, [jssp, #-8]!
0xffff8bd9fc84   484  ldr x17, pc+116 (addr 0x0000ffff8bd9fcf8)    ;; object: 0xffff8bd9fa41 <Code: COMPARE_IC>
0xffff8bd9fc88   488  sub csp, jssp, #0x10 (16)
0xffff8bd9fc8c   492  str x17, [jssp, #-8]!
0xffff8bd9fc90   496  add fp, jssp, #0x10 (16)
0xffff8bd9fc94   500  sub csp, jssp, #0x18 (24)
0xffff8bd9fc98   504  stp lr, x0, [jssp, #-24]!
0xffff8bd9fc9c   508  str x1, [jssp, #16]
0xffff8bd9fca0   512  movz x10, #0x2f00000000
0xffff8bd9fca4   516  sub csp, jssp, #0x18 (24)
0xffff8bd9fca8   520  stp x10, x0, [jssp, #-24]!
0xffff8bd9fcac   524  str x1, [jssp, #16]
0xffff8bd9fcb0   528  movz x0, #0x3
0xffff8bd9fcb4   532  ldr x1, pc+76 (addr 0x0000ffff8bd9fd00)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd9fcb8   536  ldr x16, pc+80 (addr 0x0000ffff8bd9fd08)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd9fcbc   540  blr x16
0xffff8bd9fcc0   544  add x11, x0, #0x5f (95)
0xffff8bd9fcc4   548  ldr x1, [jssp, #16]
0xffff8bd9fcc8   552  ldp lr, x0, [jssp], #24
0xffff8bd9fccc   556  mov jssp, fp
0xffff8bd9fcd0   560  ldp fp, lr, [jssp], #16
0xffff8bd9fcd4   564  br x11
0xffff8bd9fcd8   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bd9fcdc   572  d63f03e0       constant
0xffff8bd9fce0   576  8bd9fa41       constant
0xffff8bd9fce4   580  0000ffff       constant
0xffff8bd9fce8   584  00e50928       constant
0xffff8bd9fcec   588  00000000       constant
0xffff8bd9fcf0   592  8bd06060       constant
0xffff8bd9fcf4   596  0000ffff       constant
0xffff8bd9fcf8   600  8bd9fa41       constant
0xffff8bd9fcfc   604  0000ffff       constant
0xffff8bd9fd00   608  00c8a980       constant
0xffff8bd9fd04   612  00000000       constant
0xffff8bd9fd08   616  8bd06060       constant
0xffff8bd9fd0c   620  0000ffff       constant


RelocInfo (size = 16)
0xffff8bd9fc34  embedded object  (0xffff8bd9fa41 <Code: COMPARE_IC>)
0xffff8bd9fc50  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff8bd9fc54  code target (STUB)  (0xffff8bd06060)
0xffff8bd9fc84  embedded object  (0xffff8bd9fa41 <Code: COMPARE_IC>)
0xffff8bd9fcb4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd9fcb8  code target (STUB)  (0xffff8bd06060)
0xffff8bd9fcd8  constant pool (size 56)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = NUMBER*SMI -> NUMBER
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 232)
0xffff8bd9fd80     0  tbnz w0, #0, #+0x58 (addr 0xffff8bd9fdd8)
0xffff8bd9fd84     4  scvtf d0, x0, #32
0xffff8bd9fd88     8  scvtf d1, x1, #32
0xffff8bd9fd8c    12  tbz w0, #0, #+0x18 (addr 0xffff8bd9fda4)
0xffff8bd9fd90    16  ldur x16, [x0, #-1]
0xffff8bd9fd94    20  ldr x17, [x26, #120]
0xffff8bd9fd98    24  cmp x16, x17
0xffff8bd9fd9c    28  b.ne #+0x3c (addr 0xffff8bd9fdd8)
0xffff8bd9fda0    32  ldur d0, [x0, #7]
0xffff8bd9fda4    36  tbz w1, #0, #+0x18 (addr 0xffff8bd9fdbc)
0xffff8bd9fda8    40  ldur x16, [x1, #-1]
0xffff8bd9fdac    44  ldr x17, [x26, #120]
0xffff8bd9fdb0    48  cmp x16, x17
0xffff8bd9fdb4    52  b.ne #+0x24 (addr 0xffff8bd9fdd8)
0xffff8bd9fdb8    56  ldur d1, [x1, #7]
0xffff8bd9fdbc    60  fcmp d1, d0
0xffff8bd9fdc0    64  b.vs #+0x10 (addr 0xffff8bd9fdd0)
0xffff8bd9fdc4    68  cset x0, gt
0xffff8bd9fdc8    72  csinv x0, x0, xzr, ge
0xffff8bd9fdcc    76  ret
0xffff8bd9fdd0    80  ldr x16, pc+120 (addr 0x0000ffff8bd9fe48)    ;; code: COMPARE_IC, GENERIC
0xffff8bd9fdd4    84  br x16
0xffff8bd9fdd8    88  movz x16, #0xc00000000
0xffff8bd9fddc    92  sub csp, jssp, #0x10 (16)
0xffff8bd9fde0    96  stp fp, lr, [jssp, #-16]!
0xffff8bd9fde4   100  sub csp, jssp, #0x10 (16)
0xffff8bd9fde8   104  str x16, [jssp, #-8]!
0xffff8bd9fdec   108  ldr x17, pc+100 (addr 0x0000ffff8bd9fe50)    ;; object: 0xffff8bd9fd21 <Code: COMPARE_IC>
0xffff8bd9fdf0   112  sub csp, jssp, #0x10 (16)
0xffff8bd9fdf4   116  str x17, [jssp, #-8]!
0xffff8bd9fdf8   120  add fp, jssp, #0x10 (16)
0xffff8bd9fdfc   124  sub csp, jssp, #0x18 (24)
0xffff8bd9fe00   128  stp lr, x0, [jssp, #-24]!
0xffff8bd9fe04   132  str x1, [jssp, #16]
0xffff8bd9fe08   136  movz x10, #0x2f00000000
0xffff8bd9fe0c   140  sub csp, jssp, #0x18 (24)
0xffff8bd9fe10   144  stp x10, x0, [jssp, #-24]!
0xffff8bd9fe14   148  str x1, [jssp, #16]
0xffff8bd9fe18   152  movz x0, #0x3
0xffff8bd9fe1c   156  ldr x1, pc+60 (addr 0x0000ffff8bd9fe58)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bd9fe20   160  ldr x16, pc+64 (addr 0x0000ffff8bd9fe60)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bd9fe24   164  blr x16
0xffff8bd9fe28   168  add x11, x0, #0x5f (95)
0xffff8bd9fe2c   172  ldr x1, [jssp, #16]
0xffff8bd9fe30   176  ldp lr, x0, [jssp], #24
0xffff8bd9fe34   180  mov jssp, fp
0xffff8bd9fe38   184  ldp fp, lr, [jssp], #16
0xffff8bd9fe3c   188  br x11
0xffff8bd9fe40   192  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bd9fe44   196  d63f03e0       constant
0xffff8bd9fe48   200  8bd9faa0       constant
0xffff8bd9fe4c   204  0000ffff       constant
0xffff8bd9fe50   208  8bd9fd21       constant
0xffff8bd9fe54   212  0000ffff       constant
0xffff8bd9fe58   216  00c8a980       constant
0xffff8bd9fe5c   220  00000000       constant
0xffff8bd9fe60   224  8bd06060       constant
0xffff8bd9fe64   228  0000ffff       constant


RelocInfo (size = 13)
0xffff8bd9fdd0  code target (COMPARE_IC)  (0xffff8bd9faa0)
0xffff8bd9fdec  embedded object  (0xffff8bd9fd21 <Code: COMPARE_IC>)
0xffff8bd9fe1c  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bd9fe20  code target (STUB)  (0xffff8bd06060)
0xffff8bd9fe40  constant pool (size 40)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = ToIntegerStub
compiler = turbofan
Instructions (size = 386)
0xffff8bda28a0     0  and x1, x0, #0x1
0xffff8bda28a4     4  cmp x1, #0x0 (0)
0xffff8bda28a8     8  b.eq #+0x90 (addr 0xffff8bda2938)
0xffff8bda28ac    12  ldur x1, [x0, #-1]
0xffff8bda28b0    16  ldr x2, [x26, #120]
0xffff8bda28b4    20  cmp x1, x2
0xffff8bda28b8    24  b.ne #+0x84 (addr 0xffff8bda293c)
0xffff8bda28bc    28  ldur d0, [x0, #7]
0xffff8bda28c0    32  fcmp d0, d0
0xffff8bda28c4    36  b.ne #+0xb4 (addr 0xffff8bda2978)
0xffff8bda28c8    40  frintz d0, d0
0xffff8bda28cc    44  fcvtzs w0, d0
0xffff8bda28d0    48  scvtf d1, w0
0xffff8bda28d4    52  fcmp d0, d1
0xffff8bda28d8    56  b.ne #+0x24 (addr 0xffff8bda28fc)
0xffff8bda28dc    60  fcmp d0, #0.0
0xffff8bda28e0    64  b.ne #+0x14 (addr 0xffff8bda28f4)
0xffff8bda28e4    68  fmov x1, d0
0xffff8bda28e8    72  lsr x1, x1, #32
0xffff8bda28ec    76  cmp w1, #0x0 (0)
0xffff8bda28f0    80  b.lt #+0xc (addr 0xffff8bda28fc)
0xffff8bda28f4    84  lsl x0, x0, #32
0xffff8bda28f8    88  b #+0x40 (addr 0xffff8bda2938)
0xffff8bda28fc    92  movz x0, #0xe2c0
0xffff8bda2900    96  movk x0, #0x2cb8, lsl #16
0xffff8bda2904   100  ldr x1, [x0]
0xffff8bda2908   104  movz x2, #0xe2c8
0xffff8bda290c   108  movk x2, #0x2cb8, lsl #16
0xffff8bda2910   112  ldr x2, [x2]
0xffff8bda2914   116  sub x2, x2, x1
0xffff8bda2918   120  cmp x2, #0x10 (16)
0xffff8bda291c   124  b.lt #+0x64 (addr 0xffff8bda2980)
0xffff8bda2920   128  add x2, x1, #0x10 (16)
0xffff8bda2924   132  str x2, [x0]
0xffff8bda2928   136  add x0, x1, #0x1 (1)
0xffff8bda292c   140  ldr x1, [x26, #120]
0xffff8bda2930   144  stur x1, [x0, #-1]
0xffff8bda2934   148  stur d0, [x0, #7]
0xffff8bda2938   152  ret
0xffff8bda293c   156  movz x16, #0xa00000000
0xffff8bda2940   160  sub csp, jssp, #0x10 (16)
0xffff8bda2944   164  stp fp, lr, [jssp, #-16]!
0xffff8bda2948   168  mov fp, jssp
0xffff8bda294c   172  sub csp, jssp, #0x20 (32)
0xffff8bda2950   176  sub jssp, jssp, #0x20 (32)
0xffff8bda2954   180  stur x16, [fp, #-8]
0xffff8bda2958   184  mov x1, cp
0xffff8bda295c   188  str cp, [jssp, #8]
0xffff8bda2960   192  ldr x16, pc+144 (addr 0x0000ffff8bda29f0)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff8bda2964   196  blr x16
0xffff8bda2968   200  ldr cp, [jssp, #8]
0xffff8bda296c   204  mov jssp, fp
0xffff8bda2970   208  ldp fp, lr, [jssp], #16
0xffff8bda2974   212  b #-0xd4 (addr 0xffff8bda28a0)
0xffff8bda2978   216  movz x0, #0x0
0xffff8bda297c   220  ret
0xffff8bda2980   224  movz x16, #0xa00000000
0xffff8bda2984   228  sub csp, jssp, #0x10 (16)
0xffff8bda2988   232  stp fp, lr, [jssp, #-16]!
0xffff8bda298c   236  mov fp, jssp
0xffff8bda2990   240  sub csp, jssp, #0x20 (32)
0xffff8bda2994   244  sub jssp, jssp, #0x20 (32)
0xffff8bda2998   248  stur x16, [fp, #-8]
0xffff8bda299c   252  movz x0, #0x0
0xffff8bda29a0   256  lsl x0, x0, #32
0xffff8bda29a4   260  movz x1, #0x10
0xffff8bda29a8   264  lsl x1, x1, #32
0xffff8bda29ac   268  sub csp, jssp, #0x10 (16)
0xffff8bda29b0   272  sub jssp, jssp, #0x10 (16)
0xffff8bda29b4   276  str x1, [jssp, #8]
0xffff8bda29b8   280  str x0, [jssp]
0xffff8bda29bc   284  str d0, [jssp, #32]
0xffff8bda29c0   288  movz x1, #0x5b88
0xffff8bda29c4   292  movk x1, #0xe2, lsl #16
0xffff8bda29c8   296  movz x0, #0x2
0xffff8bda29cc   300  movz cp, #0x0
0xffff8bda29d0   304  ldr x16, pc+40 (addr 0x0000ffff8bda29f8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bda29d4   308  blr x16
0xffff8bda29d8   312  ldr d0, [jssp, #16]
0xffff8bda29dc   316  mov jssp, fp
0xffff8bda29e0   320  ldp fp, lr, [jssp], #16
0xffff8bda29e4   324  b #-0xb8 (addr 0xffff8bda292c)
0xffff8bda29e8   328  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bda29ec   332  d63f03e0       constant
0xffff8bda29f0   336  8bd29d80       constant
0xffff8bda29f4   340  0000ffff       constant
0xffff8bda29f8   344  8bd06060       constant
0xffff8bda29fc   348  0000ffff       constant


Safepoints (size = 34)
0xffff8bda2968   200  010000 (sp -> fp)  <none>
0xffff8bda29d8   312  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff8bda2960  code target (STUB)  (0xffff8bd29d80)
0xffff8bda29d0  code target (STUB)  (0xffff8bd06060)
0xffff8bda29e8  constant pool (size 24)

--- End code ---
kind = STUB
major_key = ToIntegerStub
name = ToIntegerStub
compiler = turbofan
Instructions (size = 386)
0xffff8bda28a0     0  and x1, x0, #0x1
0xffff8bda28a4     4  cmp x1, #0x0 (0)
0xffff8bda28a8     8  b.eq #+0x90 (addr 0xffff8bda2938)
0xffff8bda28ac    12  ldur x1, [x0, #-1]
0xffff8bda28b0    16  ldr x2, [x26, #120]
0xffff8bda28b4    20  cmp x1, x2
0xffff8bda28b8    24  b.ne #+0x84 (addr 0xffff8bda293c)
0xffff8bda28bc    28  ldur d0, [x0, #7]
0xffff8bda28c0    32  fcmp d0, d0
0xffff8bda28c4    36  b.ne #+0xb4 (addr 0xffff8bda2978)
0xffff8bda28c8    40  frintz d0, d0
0xffff8bda28cc    44  fcvtzs w0, d0
0xffff8bda28d0    48  scvtf d1, w0
0xffff8bda28d4    52  fcmp d0, d1
0xffff8bda28d8    56  b.ne #+0x24 (addr 0xffff8bda28fc)
0xffff8bda28dc    60  fcmp d0, #0.0
0xffff8bda28e0    64  b.ne #+0x14 (addr 0xffff8bda28f4)
0xffff8bda28e4    68  fmov x1, d0
0xffff8bda28e8    72  lsr x1, x1, #32
0xffff8bda28ec    76  cmp w1, #0x0 (0)
0xffff8bda28f0    80  b.lt #+0xc (addr 0xffff8bda28fc)
0xffff8bda28f4    84  lsl x0, x0, #32
0xffff8bda28f8    88  b #+0x40 (addr 0xffff8bda2938)
0xffff8bda28fc    92  movz x0, #0xe2c0
0xffff8bda2900    96  movk x0, #0x2cb8, lsl #16
0xffff8bda2904   100  ldr x1, [x0]
0xffff8bda2908   104  movz x2, #0xe2c8
0xffff8bda290c   108  movk x2, #0x2cb8, lsl #16
0xffff8bda2910   112  ldr x2, [x2]
0xffff8bda2914   116  sub x2, x2, x1
0xffff8bda2918   120  cmp x2, #0x10 (16)
0xffff8bda291c   124  b.lt #+0x64 (addr 0xffff8bda2980)
0xffff8bda2920   128  add x2, x1, #0x10 (16)
0xffff8bda2924   132  str x2, [x0]
0xffff8bda2928   136  add x0, x1, #0x1 (1)
0xffff8bda292c   140  ldr x1, [x26, #120]
0xffff8bda2930   144  stur x1, [x0, #-1]
0xffff8bda2934   148  stur d0, [x0, #7]
0xffff8bda2938   152  ret
0xffff8bda293c   156  movz x16, #0xa00000000
0xffff8bda2940   160  sub csp, jssp, #0x10 (16)
0xffff8bda2944   164  stp fp, lr, [jssp, #-16]!
0xffff8bda2948   168  mov fp, jssp
0xffff8bda294c   172  sub csp, jssp, #0x20 (32)
0xffff8bda2950   176  sub jssp, jssp, #0x20 (32)
0xffff8bda2954   180  stur x16, [fp, #-8]
0xffff8bda2958   184  mov x1, cp
0xffff8bda295c   188  str cp, [jssp, #8]
0xffff8bda2960   192  ldr x16, pc+144 (addr 0x0000ffff8bda29f0)    ;; code: STUB, NonNumberToNumberStub, minor: 0
0xffff8bda2964   196  blr x16
0xffff8bda2968   200  ldr cp, [jssp, #8]
0xffff8bda296c   204  mov jssp, fp
0xffff8bda2970   208  ldp fp, lr, [jssp], #16
0xffff8bda2974   212  b #-0xd4 (addr 0xffff8bda28a0)
0xffff8bda2978   216  movz x0, #0x0
0xffff8bda297c   220  ret
0xffff8bda2980   224  movz x16, #0xa00000000
0xffff8bda2984   228  sub csp, jssp, #0x10 (16)
0xffff8bda2988   232  stp fp, lr, [jssp, #-16]!
0xffff8bda298c   236  mov fp, jssp
0xffff8bda2990   240  sub csp, jssp, #0x20 (32)
0xffff8bda2994   244  sub jssp, jssp, #0x20 (32)
0xffff8bda2998   248  stur x16, [fp, #-8]
0xffff8bda299c   252  movz x0, #0x0
0xffff8bda29a0   256  lsl x0, x0, #32
0xffff8bda29a4   260  movz x1, #0x10
0xffff8bda29a8   264  lsl x1, x1, #32
0xffff8bda29ac   268  sub csp, jssp, #0x10 (16)
0xffff8bda29b0   272  sub jssp, jssp, #0x10 (16)
0xffff8bda29b4   276  str x1, [jssp, #8]
0xffff8bda29b8   280  str x0, [jssp]
0xffff8bda29bc   284  str d0, [jssp, #32]
0xffff8bda29c0   288  movz x1, #0x5b88
0xffff8bda29c4   292  movk x1, #0xe2, lsl #16
0xffff8bda29c8   296  movz x0, #0x2
0xffff8bda29cc   300  movz cp, #0x0
0xffff8bda29d0   304  ldr x16, pc+40 (addr 0x0000ffff8bda29f8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bda29d4   308  blr x16
0xffff8bda29d8   312  ldr d0, [jssp, #16]
0xffff8bda29dc   316  mov jssp, fp
0xffff8bda29e0   320  ldp fp, lr, [jssp], #16
0xffff8bda29e4   324  b #-0xb8 (addr 0xffff8bda292c)
0xffff8bda29e8   328  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bda29ec   332  d63f03e0       constant
0xffff8bda29f0   336  8bd29d80       constant
0xffff8bda29f4   340  0000ffff       constant
0xffff8bda29f8   344  8bd06060       constant
0xffff8bda29fc   348  0000ffff       constant


Safepoints (size = 34)
0xffff8bda2968   200  010000 (sp -> fp)  <none>
0xffff8bda29d8   312  000000 (sp -> fp)  <none>

RelocInfo (size = 12)
0xffff8bda2960  code target (STUB)  (0xffff8bd29d80)
0xffff8bda29d0  code target (STUB)  (0xffff8bd06060)
0xffff8bda29e8  constant pool (size 24)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = RECEIVER*RECEIVER -> KNOWN_RECEIVER
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 192)
0xffff8bda3fe0     0  and x16, x0, x1
0xffff8bda3fe4     4  tbz w16, #0, #+0x2c (addr 0xffff8bda4010)
0xffff8bda3fe8     8  ldr x12, pc+152 (addr 0x0000ffff8bda4080)    ;; object: 0x26cf2f21 WeakCell for 0x5f506671 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bda3fec    12  ldur x12, [x12, #7]
0xffff8bda3ff0    16  ldur x10, [x0, #-1]
0xffff8bda3ff4    20  ldur x11, [x1, #-1]
0xffff8bda3ff8    24  cmp x10, x12
0xffff8bda3ffc    28  b.ne #+0x14 (addr 0xffff8bda4010)
0xffff8bda4000    32  cmp x11, x12
0xffff8bda4004    36  b.ne #+0xc (addr 0xffff8bda4010)
0xffff8bda4008    40  sub x0, x0, x1
0xffff8bda400c    44  ret
0xffff8bda4010    48  movz x16, #0xc00000000
0xffff8bda4014    52  sub csp, jssp, #0x10 (16)
0xffff8bda4018    56  stp fp, lr, [jssp, #-16]!
0xffff8bda401c    60  sub csp, jssp, #0x10 (16)
0xffff8bda4020    64  str x16, [jssp, #-8]!
0xffff8bda4024    68  ldr x17, pc+100 (addr 0x0000ffff8bda4088)    ;; object: 0xffff8bda3f81 <Code: COMPARE_IC>
0xffff8bda4028    72  sub csp, jssp, #0x10 (16)
0xffff8bda402c    76  str x17, [jssp, #-8]!
0xffff8bda4030    80  add fp, jssp, #0x10 (16)
0xffff8bda4034    84  sub csp, jssp, #0x18 (24)
0xffff8bda4038    88  stp lr, x0, [jssp, #-24]!
0xffff8bda403c    92  str x1, [jssp, #16]
0xffff8bda4040    96  movz x10, #0x2f00000000
0xffff8bda4044   100  sub csp, jssp, #0x18 (24)
0xffff8bda4048   104  stp x10, x0, [jssp, #-24]!
0xffff8bda404c   108  str x1, [jssp, #16]
0xffff8bda4050   112  movz x0, #0x3
0xffff8bda4054   116  ldr x1, pc+60 (addr 0x0000ffff8bda4090)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bda4058   120  ldr x16, pc+64 (addr 0x0000ffff8bda4098)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bda405c   124  blr x16
0xffff8bda4060   128  add x11, x0, #0x5f (95)
0xffff8bda4064   132  ldr x1, [jssp, #16]
0xffff8bda4068   136  ldp lr, x0, [jssp], #24
0xffff8bda406c   140  mov jssp, fp
0xffff8bda4070   144  ldp fp, lr, [jssp], #16
0xffff8bda4074   148  br x11
0xffff8bda4078   152  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bda407c   156  d63f03e0       constant
0xffff8bda4080   160  26cf2f21       constant
0xffff8bda4084   164  00000000       constant
0xffff8bda4088   168  8bda3f81       constant
0xffff8bda408c   172  0000ffff       constant
0xffff8bda4090   176  00c8a980       constant
0xffff8bda4094   180  00000000       constant
0xffff8bda4098   184  8bd06060       constant
0xffff8bda409c   188  0000ffff       constant


RelocInfo (size = 11)
0xffff8bda3fe8  embedded object  (0x26cf2f21 WeakCell for 0x5f506671 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bda4024  embedded object  (0xffff8bda3f81 <Code: COMPARE_IC>)
0xffff8bda4054  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bda4058  code target (STUB)  (0xffff8bd06060)
0xffff8bda4078  constant pool (size 40)


kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 120)
0xffff8bda4900     0  sub csp, jssp, #0x8 (8)
0xffff8bda4904     4  str x3, [jssp, #-8]!
0xffff8bda4908     8  sub csp, jssp, #0x8 (8)
0xffff8bda490c    12  str x0, [jssp, #-8]!
0xffff8bda4910    16  ldr x0, pc+72 (addr 0x0000ffff8bda4958)    ;; object: 0x26ced491 Cell for 0
0xffff8bda4914    20  ldur x0, [x0, #7]
0xffff8bda4918    24  cmp x0, #0x0 (0)
0xffff8bda491c    28  b.ne #+0x14 (addr 0xffff8bda4930)
0xffff8bda4920    32  ldr x3, pc+64 (addr 0x0000ffff8bda4960)    ;; object: 0x26cf3289 WeakCell for 0x5655ea99 <an Object with map 0x5f5164d1>
0xffff8bda4924    36  ldur x3, [x3, #7]
0xffff8bda4928    40  tbz w3, #0, #+0x8 (addr 0xffff8bda4930)
0xffff8bda492c    44  b #+0x14 (addr 0xffff8bda4940)
0xffff8bda4930    48  ldr x0, [jssp], #8
0xffff8bda4934    52  ldr x3, [jssp], #8
0xffff8bda4938    56  ldr x16, pc+48 (addr 0x0000ffff8bda4968)    ;; code: BUILTIN
0xffff8bda493c    60  br x16
0xffff8bda4940    64  add jssp, jssp, #0x10 (16)
0xffff8bda4944    68  mov x1, x3
0xffff8bda4948    72  ldr x16, pc+40 (addr 0x0000ffff8bda4970)    ;; code: HANDLER, LoadFieldStub, minor: 4
0xffff8bda494c    76  br x16
0xffff8bda4950    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bda4954    84  d63f03e0       constant
0xffff8bda4958    88  26ced491       constant
0xffff8bda495c    92  00000000       constant
0xffff8bda4960    96  26cf3289       constant
0xffff8bda4964   100  00000000       constant
0xffff8bda4968   104  8bd222e0       constant
0xffff8bda496c   108  0000ffff       constant
0xffff8bda4970   112  8bd6c360       constant
0xffff8bda4974   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bda4910  embedded object  (0x26ced491 Cell for 0)
0xffff8bda4920  embedded object  (0x26cf3289 WeakCell for 0x5655ea99 <an Object with map 0x5f5164d1>)
0xffff8bda4938  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bda4948  code target (HANDLER)  (0xffff8bd6c360)
0xffff8bda4950  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bda49e0     0  ldur x0, [x1, #15]
0xffff8bda49e4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bda49e0     0  ldur x0, [x1, #15]
0xffff8bda49e4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = global
compiler = unknown
Instructions (size = 216)
0xffff8bda4a60     0  sub csp, jssp, #0x8 (8)
0xffff8bda4a64     4  str x3, [jssp, #-8]!
0xffff8bda4a68     8  sub csp, jssp, #0x8 (8)
0xffff8bda4a6c    12  str x0, [jssp, #-8]!
0xffff8bda4a70    16  ldr x0, pc+160 (addr 0x0000ffff8bda4b10)    ;; object: 0x26ced491 Cell for 0
0xffff8bda4a74    20  ldur x0, [x0, #7]
0xffff8bda4a78    24  cmp x0, #0x0 (0)
0xffff8bda4a7c    28  b.ne #+0x14 (addr 0xffff8bda4a90)
0xffff8bda4a80    32  ldr x3, pc+152 (addr 0x0000ffff8bda4b18)    ;; object: 0x26cf32e9 WeakCell for 0x5655ea99 <an Object with map 0x5f5164d1>
0xffff8bda4a84    36  ldur x3, [x3, #7]
0xffff8bda4a88    40  tbz w3, #0, #+0x8 (addr 0xffff8bda4a90)
0xffff8bda4a8c    44  b #+0x14 (addr 0xffff8bda4aa0)
0xffff8bda4a90    48  ldr x0, [jssp], #8
0xffff8bda4a94    52  ldr x3, [jssp], #8
0xffff8bda4a98    56  ldr x16, pc+136 (addr 0x0000ffff8bda4b20)    ;; code: BUILTIN
0xffff8bda4a9c    60  br x16
0xffff8bda4aa0    64  add jssp, jssp, #0x10 (16)
0xffff8bda4aa4    68  movz x16, #0xc00000000
0xffff8bda4aa8    72  sub csp, jssp, #0x10 (16)
0xffff8bda4aac    76  stp fp, lr, [jssp, #-16]!
0xffff8bda4ab0    80  sub csp, jssp, #0x10 (16)
0xffff8bda4ab4    84  str x16, [jssp, #-8]!
0xffff8bda4ab8    88  ldr x17, pc+112 (addr 0x0000ffff8bda4b28)    ;; object: 0xffff8bda4a01 <Code: HANDLER>
0xffff8bda4abc    92  sub csp, jssp, #0x10 (16)
0xffff8bda4ac0    96  str x17, [jssp, #-8]!
0xffff8bda4ac4   100  add fp, jssp, #0x10 (16)
0xffff8bda4ac8   104  sub csp, jssp, #0x8 (8)
0xffff8bda4acc   108  str cp, [jssp, #-8]!
0xffff8bda4ad0   112  sub csp, jssp, #0x8 (8)
0xffff8bda4ad4   116  str x1, [jssp, #-8]!
0xffff8bda4ad8   120  ldur x1, [x3, #-1]
0xffff8bda4adc   124  ldur x1, [x1, #47]
0xffff8bda4ae0   128  movz x16, #0x11f
0xffff8bda4ae4   132  ldr x1, [x1, x16]
0xffff8bda4ae8   136  ldur x1, [x1, #7]
0xffff8bda4aec   140  movz x0, #0x0
0xffff8bda4af0   144  ldr x16, pc+64 (addr 0x0000ffff8bda4b30)    ;; code: BUILTIN
0xffff8bda4af4   148  blr x16
0xffff8bda4af8   152  ldr cp, [jssp], #8
0xffff8bda4afc   156  mov jssp, fp
0xffff8bda4b00   160  ldp fp, lr, [jssp], #16
0xffff8bda4b04   164  ret
0xffff8bda4b08   168  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff8bda4b0c   172  d63f03e0       constant
0xffff8bda4b10   176  26ced491       constant
0xffff8bda4b14   180  00000000       constant
0xffff8bda4b18   184  26cf32e9       constant
0xffff8bda4b1c   188  00000000       constant
0xffff8bda4b20   192  8bd222e0       constant
0xffff8bda4b24   196  0000ffff       constant
0xffff8bda4b28   200  8bda4a01       constant
0xffff8bda4b2c   204  0000ffff       constant
0xffff8bda4b30   208  8bd1e600       constant
0xffff8bda4b34   212  0000ffff       constant


RelocInfo (size = 11)
0xffff8bda4a70  embedded object  (0x26ced491 Cell for 0)
0xffff8bda4a80  embedded object  (0x26cf32e9 WeakCell for 0x5655ea99 <an Object with map 0x5f5164d1>)
0xffff8bda4a98  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bda4ab8  embedded object  (0xffff8bda4a01 <Code: HANDLER>)
0xffff8bda4af0  code target (BUILTIN)  (0xffff8bd1e600)
0xffff8bda4b08  constant pool (size 48)

kind = HANDLER
major_key = <NoCache>Stub
name = unicode
compiler = unknown
Instructions (size = 216)
0xffff8bda4ba0     0  sub csp, jssp, #0x8 (8)
0xffff8bda4ba4     4  str x3, [jssp, #-8]!
0xffff8bda4ba8     8  sub csp, jssp, #0x8 (8)
0xffff8bda4bac    12  str x0, [jssp, #-8]!
0xffff8bda4bb0    16  ldr x0, pc+160 (addr 0x0000ffff8bda4c50)    ;; object: 0x26ced491 Cell for 0
0xffff8bda4bb4    20  ldur x0, [x0, #7]
0xffff8bda4bb8    24  cmp x0, #0x0 (0)
0xffff8bda4bbc    28  b.ne #+0x14 (addr 0xffff8bda4bd0)
0xffff8bda4bc0    32  ldr x3, pc+152 (addr 0x0000ffff8bda4c58)    ;; object: 0x26cf3321 WeakCell for 0x5655ea99 <an Object with map 0x5f5164d1>
0xffff8bda4bc4    36  ldur x3, [x3, #7]
0xffff8bda4bc8    40  tbz w3, #0, #+0x8 (addr 0xffff8bda4bd0)
0xffff8bda4bcc    44  b #+0x14 (addr 0xffff8bda4be0)
0xffff8bda4bd0    48  ldr x0, [jssp], #8
0xffff8bda4bd4    52  ldr x3, [jssp], #8
0xffff8bda4bd8    56  ldr x16, pc+136 (addr 0x0000ffff8bda4c60)    ;; code: BUILTIN
0xffff8bda4bdc    60  br x16
0xffff8bda4be0    64  add jssp, jssp, #0x10 (16)
0xffff8bda4be4    68  movz x16, #0xc00000000
0xffff8bda4be8    72  sub csp, jssp, #0x10 (16)
0xffff8bda4bec    76  stp fp, lr, [jssp, #-16]!
0xffff8bda4bf0    80  sub csp, jssp, #0x10 (16)
0xffff8bda4bf4    84  str x16, [jssp, #-8]!
0xffff8bda4bf8    88  ldr x17, pc+112 (addr 0x0000ffff8bda4c68)    ;; object: 0xffff8bda4b41 <Code: HANDLER>
0xffff8bda4bfc    92  sub csp, jssp, #0x10 (16)
0xffff8bda4c00    96  str x17, [jssp, #-8]!
0xffff8bda4c04   100  add fp, jssp, #0x10 (16)
0xffff8bda4c08   104  sub csp, jssp, #0x8 (8)
0xffff8bda4c0c   108  str cp, [jssp, #-8]!
0xffff8bda4c10   112  sub csp, jssp, #0x8 (8)
0xffff8bda4c14   116  str x1, [jssp, #-8]!
0xffff8bda4c18   120  ldur x1, [x3, #-1]
0xffff8bda4c1c   124  ldur x1, [x1, #47]
0xffff8bda4c20   128  movz x16, #0x197
0xffff8bda4c24   132  ldr x1, [x1, x16]
0xffff8bda4c28   136  ldur x1, [x1, #7]
0xffff8bda4c2c   140  movz x0, #0x0
0xffff8bda4c30   144  ldr x16, pc+64 (addr 0x0000ffff8bda4c70)    ;; code: BUILTIN
0xffff8bda4c34   148  blr x16
0xffff8bda4c38   152  ldr cp, [jssp], #8
0xffff8bda4c3c   156  mov jssp, fp
0xffff8bda4c40   160  ldp fp, lr, [jssp], #16
0xffff8bda4c44   164  ret
0xffff8bda4c48   168  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff8bda4c4c   172  d63f03e0       constant
0xffff8bda4c50   176  26ced491       constant
0xffff8bda4c54   180  00000000       constant
0xffff8bda4c58   184  26cf3321       constant
0xffff8bda4c5c   188  00000000       constant
0xffff8bda4c60   192  8bd222e0       constant
0xffff8bda4c64   196  0000ffff       constant
0xffff8bda4c68   200  8bda4b41       constant
0xffff8bda4c6c   204  0000ffff       constant
0xffff8bda4c70   208  8bd1e600       constant
0xffff8bda4c74   212  0000ffff       constant


RelocInfo (size = 11)
0xffff8bda4bb0  embedded object  (0x26ced491 Cell for 0)
0xffff8bda4bc0  embedded object  (0x26cf3321 WeakCell for 0x5655ea99 <an Object with map 0x5f5164d1>)
0xffff8bda4bd8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bda4bf8  embedded object  (0xffff8bda4b41 <Code: HANDLER>)
0xffff8bda4c30  code target (BUILTIN)  (0xffff8bd1e600)
0xffff8bda4c48  constant pool (size 48)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = RECEIVER*INTERNALIZED_STRING -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff8bda5900     0  orr x16, x1, x0
0xffff8bda5904     4  tbnz w16, #0, #+0x10 (addr 0xffff8bda5914)
0xffff8bda5908     8  asr x1, x1, #32
0xffff8bda590c    12  sub x0, x1, x0, asr #32
0xffff8bda5910    16  ret
0xffff8bda5914    20  cmp x0, x1
0xffff8bda5918    24  b.ne #+0x30 (addr 0xffff8bda5948)
0xffff8bda591c    28  ldur x16, [x0, #-1]
0xffff8bda5920    32  ldr x17, [x26, #120]
0xffff8bda5924    36  cmp x16, x17
0xffff8bda5928    40  b.eq #+0xc (addr 0xffff8bda5934)
0xffff8bda592c    44  movz x0, #0x0
0xffff8bda5930    48  ret
0xffff8bda5934    52  ldur d0, [x0, #7]
0xffff8bda5938    56  fcmp d0, d0
0xffff8bda593c    60  b.vc #-0x10 (addr 0xffff8bda592c)
0xffff8bda5940    64  movn x0, #0x0
0xffff8bda5944    68  ret
0xffff8bda5948    72  and x16, x1, x0
0xffff8bda594c    76  tbnz w16, #0, #+0x64 (addr 0xffff8bda59b0)
0xffff8bda5950    80  tbz w0, #0, #+0x24 (addr 0xffff8bda5974)
0xffff8bda5954    84  ldur x16, [x0, #-1]
0xffff8bda5958    88  ldr x17, [x26, #120]
0xffff8bda595c    92  cmp x16, x17
0xffff8bda5960    96  b.eq #+0x8 (addr 0xffff8bda5968)
0xffff8bda5964   100  ret
0xffff8bda5968   104  ldur d0, [x0, #7]
0xffff8bda596c   108  scvtf d1, x1, #32
0xffff8bda5970   112  b #+0x24 (addr 0xffff8bda5994)
0xffff8bda5974   116  ldur x16, [x1, #-1]
0xffff8bda5978   120  ldr x17, [x26, #120]
0xffff8bda597c   124  cmp x16, x17
0xffff8bda5980   128  b.eq #+0xc (addr 0xffff8bda598c)
0xffff8bda5984   132  movz x0, #0x1
0xffff8bda5988   136  ret
0xffff8bda598c   140  ldur d1, [x1, #7]
0xffff8bda5990   144  scvtf d0, x0, #32
0xffff8bda5994   148  fcmp d1, d0
0xffff8bda5998   152  b.vs #+0x10 (addr 0xffff8bda59a8)
0xffff8bda599c   156  cset x0, gt
0xffff8bda59a0   160  csinv x0, x0, xzr, ge
0xffff8bda59a4   164  ret
0xffff8bda59a8   168  movn x0, #0x0
0xffff8bda59ac   172  ret
0xffff8bda59b0   176  ldur x10, [x0, #-1]
0xffff8bda59b4   180  ldur x12, [x1, #-1]
0xffff8bda59b8   184  ldrb w11, [x10, #11]
0xffff8bda59bc   188  ldrb w13, [x12, #11]
0xffff8bda59c0   192  cmp x11, #0xb1 (177)
0xffff8bda59c4   196  b.lt #+0x8 (addr 0xffff8bda59cc)
0xffff8bda59c8   200  ret
0xffff8bda59cc   204  cmp x11, #0x83 (131)
0xffff8bda59d0   208  movz x16, #0x83
0xffff8bda59d4   212  ccmp x13, x16, #nZcv, ne
0xffff8bda59d8   216  movz x16, #0xb1
0xffff8bda59dc   220  ccmp x13, x16, #NzcV, ne
0xffff8bda59e0   224  b.ge #-0x18 (addr 0xffff8bda59c8)
0xffff8bda59e4   228  orr x14, x13, x11
0xffff8bda59e8   232  tst x14, #0xc0
0xffff8bda59ec   236  b.eq #-0x24 (addr 0xffff8bda59c8)
0xffff8bda59f0   240  cmp x11, #0x81 (129)
0xffff8bda59f4   244  b.ne #+0x18 (addr 0xffff8bda5a0c)
0xffff8bda59f8   248  cmp x12, x10
0xffff8bda59fc   252  b.ne #+0x10 (addr 0xffff8bda5a0c)
0xffff8bda5a00   256  ldur d1, [x1, #7]
0xffff8bda5a04   260  ldur d0, [x0, #7]
0xffff8bda5a08   264  b #-0x74 (addr 0xffff8bda5994)
0xffff8bda5a0c   268  movz x16, #0x87
0xffff8bda5a10   272  and x14, x13, x16
0xffff8bda5a14   276  movz x16, #0x87
0xffff8bda5a18   280  and x15, x11, x16
0xffff8bda5a1c   284  cmp x14, #0x4 (4)
0xffff8bda5a20   288  ccmp x15, #4, #nzcv, eq
0xffff8bda5a24   292  b.ne #+0x5c (addr 0xffff8bda5a80)
0xffff8bda5a28   296  ldur x10, [x1, #15]
0xffff8bda5a2c   300  ldur x11, [x0, #15]
0xffff8bda5a30   304  cmp x10, x11
0xffff8bda5a34   308  b.eq #+0xc (addr 0xffff8bda5a40)
0xffff8bda5a38   312  movz x0, #0x100000000
0xffff8bda5a3c   316  ret
0xffff8bda5a40   320  cbnz x10, #+0xc (addr 0xffff8bda5a4c)
0xffff8bda5a44   324  movz x0, #0x0
0xffff8bda5a48   328  ret
0xffff8bda5a4c   332  asr x10, x10, #32
0xffff8bda5a50   336  add x11, x10, #0x17 (23)
0xffff8bda5a54   340  add x1, x1, x11
0xffff8bda5a58   344  add x0, x0, x11
0xffff8bda5a5c   348  neg x10, x10
0xffff8bda5a60   352  ldrb w11, [x1, x10]
0xffff8bda5a64   356  ldrb w12, [x0, x10]
0xffff8bda5a68   360  cmp x11, x12
0xffff8bda5a6c   364  b.ne #-0x34 (addr 0xffff8bda5a38)
0xffff8bda5a70   368  add x10, x10, #0x1 (1)
0xffff8bda5a74   372  cbnz x10, #-0x14 (addr 0xffff8bda5a60)
0xffff8bda5a78   376  movz x0, #0x0
0xffff8bda5a7c   380  ret
0xffff8bda5a80   384  movz x16, #0xc00000000
0xffff8bda5a84   388  sub csp, jssp, #0x10 (16)
0xffff8bda5a88   392  stp fp, lr, [jssp, #-16]!
0xffff8bda5a8c   396  sub csp, jssp, #0x10 (16)
0xffff8bda5a90   400  str x16, [jssp, #-8]!
0xffff8bda5a94   404  ldr x17, pc+172 (addr 0x0000ffff8bda5b40)    ;; object: 0xffff8bda58a1 <Code: COMPARE_IC>
0xffff8bda5a98   408  sub csp, jssp, #0x10 (16)
0xffff8bda5a9c   412  str x17, [jssp, #-8]!
0xffff8bda5aa0   416  add fp, jssp, #0x10 (16)
0xffff8bda5aa4   420  sub csp, jssp, #0x10 (16)
0xffff8bda5aa8   424  stp x0, x1, [jssp, #-16]!
0xffff8bda5aac   428  movz x0, #0x2
0xffff8bda5ab0   432  ldr x1, pc+152 (addr 0x0000ffff8bda5b48)    ;; external reference (Runtime::StrictEqual)
0xffff8bda5ab4   436  ldr x16, pc+156 (addr 0x0000ffff8bda5b50)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bda5ab8   440  blr x16
0xffff8bda5abc   444  mov jssp, fp
0xffff8bda5ac0   448  ldp fp, lr, [jssp], #16
0xffff8bda5ac4   452  ldr x1, [x26, #64]
0xffff8bda5ac8   456  sub x0, x0, x1
0xffff8bda5acc   460  ret
0xffff8bda5ad0   464  movz x16, #0xc00000000
0xffff8bda5ad4   468  sub csp, jssp, #0x10 (16)
0xffff8bda5ad8   472  stp fp, lr, [jssp, #-16]!
0xffff8bda5adc   476  sub csp, jssp, #0x10 (16)
0xffff8bda5ae0   480  str x16, [jssp, #-8]!
0xffff8bda5ae4   484  ldr x17, pc+116 (addr 0x0000ffff8bda5b58)    ;; object: 0xffff8bda58a1 <Code: COMPARE_IC>
0xffff8bda5ae8   488  sub csp, jssp, #0x10 (16)
0xffff8bda5aec   492  str x17, [jssp, #-8]!
0xffff8bda5af0   496  add fp, jssp, #0x10 (16)
0xffff8bda5af4   500  sub csp, jssp, #0x18 (24)
0xffff8bda5af8   504  stp lr, x0, [jssp, #-24]!
0xffff8bda5afc   508  str x1, [jssp, #16]
0xffff8bda5b00   512  movz x10, #0x2f00000000
0xffff8bda5b04   516  sub csp, jssp, #0x18 (24)
0xffff8bda5b08   520  stp x10, x0, [jssp, #-24]!
0xffff8bda5b0c   524  str x1, [jssp, #16]
0xffff8bda5b10   528  movz x0, #0x3
0xffff8bda5b14   532  ldr x1, pc+76 (addr 0x0000ffff8bda5b60)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bda5b18   536  ldr x16, pc+80 (addr 0x0000ffff8bda5b68)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bda5b1c   540  blr x16
0xffff8bda5b20   544  add x11, x0, #0x5f (95)
0xffff8bda5b24   548  ldr x1, [jssp, #16]
0xffff8bda5b28   552  ldp lr, x0, [jssp], #24
0xffff8bda5b2c   556  mov jssp, fp
0xffff8bda5b30   560  ldp fp, lr, [jssp], #16
0xffff8bda5b34   564  br x11
0xffff8bda5b38   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bda5b3c   572  d63f03e0       constant
0xffff8bda5b40   576  8bda58a1       constant
0xffff8bda5b44   580  0000ffff       constant
0xffff8bda5b48   584  00e50928       constant
0xffff8bda5b4c   588  00000000       constant
0xffff8bda5b50   592  8bd06060       constant
0xffff8bda5b54   596  0000ffff       constant
0xffff8bda5b58   600  8bda58a1       constant
0xffff8bda5b5c   604  0000ffff       constant
0xffff8bda5b60   608  00c8a980       constant
0xffff8bda5b64   612  00000000       constant
0xffff8bda5b68   616  8bd06060       constant
0xffff8bda5b6c   620  0000ffff       constant


RelocInfo (size = 16)
0xffff8bda5a94  embedded object  (0xffff8bda58a1 <Code: COMPARE_IC>)
0xffff8bda5ab0  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff8bda5ab4  code target (STUB)  (0xffff8bd06060)
0xffff8bda5ae4  embedded object  (0xffff8bda58a1 <Code: COMPARE_IC>)
0xffff8bda5b14  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bda5b18  code target (STUB)  (0xffff8bd06060)
0xffff8bda5b38  constant pool (size 56)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda5de0     0  ldur x0, [x1, #7]
0xffff8bda5de4     4  ldur x0, [x0, #71]
0xffff8bda5de8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda5de0     0  ldur x0, [x1, #7]
0xffff8bda5de4     4  ldur x0, [x0, #71]
0xffff8bda5de8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda5e60     0  ldur x0, [x1, #7]
0xffff8bda5e64     4  ldur x0, [x0, #79]
0xffff8bda5e68     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda5e60     0  ldur x0, [x1, #7]
0xffff8bda5e64     4  ldur x0, [x0, #79]
0xffff8bda5e68     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda5ee0     0  ldur x0, [x1, #7]
0xffff8bda5ee4     4  ldur x0, [x0, #87]
0xffff8bda5ee8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda5ee0     0  ldur x0, [x1, #7]
0xffff8bda5ee4     4  ldur x0, [x0, #87]
0xffff8bda5ee8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda5f60     0  ldur x0, [x1, #7]
0xffff8bda5f64     4  ldur x0, [x0, #95]
0xffff8bda5f68     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda5f60     0  ldur x0, [x1, #7]
0xffff8bda5f64     4  ldur x0, [x0, #95]
0xffff8bda5f68     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda5fe0     0  ldur x0, [x1, #7]
0xffff8bda5fe4     4  ldur x0, [x0, #103]
0xffff8bda5fe8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda5fe0     0  ldur x0, [x1, #7]
0xffff8bda5fe4     4  ldur x0, [x0, #103]
0xffff8bda5fe8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda6060     0  ldur x0, [x1, #7]
0xffff8bda6064     4  ldur x0, [x0, #111]
0xffff8bda6068     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda6060     0  ldur x0, [x1, #7]
0xffff8bda6064     4  ldur x0, [x0, #111]
0xffff8bda6068     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda60e0     0  ldur x0, [x1, #7]
0xffff8bda60e4     4  ldur x0, [x0, #159]
0xffff8bda60e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda60e0     0  ldur x0, [x1, #7]
0xffff8bda60e4     4  ldur x0, [x0, #159]
0xffff8bda60e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda6160     0  ldur x0, [x1, #7]
0xffff8bda6164     4  ldur x0, [x0, #175]
0xffff8bda6168     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda6160     0  ldur x0, [x1, #7]
0xffff8bda6164     4  ldur x0, [x0, #175]
0xffff8bda6168     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda61e0     0  ldur x0, [x1, #7]
0xffff8bda61e4     4  ldur x0, [x0, #183]
0xffff8bda61e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda61e0     0  ldur x0, [x1, #7]
0xffff8bda61e4     4  ldur x0, [x0, #183]
0xffff8bda61e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda6260     0  ldur x0, [x1, #7]
0xffff8bda6264     4  ldur x0, [x0, #207]
0xffff8bda6268     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda6260     0  ldur x0, [x1, #7]
0xffff8bda6264     4  ldur x0, [x0, #207]
0xffff8bda6268     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda62e0     0  ldur x0, [x1, #7]
0xffff8bda62e4     4  ldur x0, [x0, #215]
0xffff8bda62e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda62e0     0  ldur x0, [x1, #7]
0xffff8bda62e4     4  ldur x0, [x0, #215]
0xffff8bda62e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda6360     0  ldur x0, [x1, #7]
0xffff8bda6364     4  ldur x0, [x0, #223]
0xffff8bda6368     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda6360     0  ldur x0, [x1, #7]
0xffff8bda6364     4  ldur x0, [x0, #223]
0xffff8bda6368     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda63e0     0  ldur x0, [x1, #7]
0xffff8bda63e4     4  ldur x0, [x0, #231]
0xffff8bda63e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda63e0     0  ldur x0, [x1, #7]
0xffff8bda63e4     4  ldur x0, [x0, #231]
0xffff8bda63e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda6460     0  ldur x0, [x1, #7]
0xffff8bda6464     4  ldur x0, [x0, #239]
0xffff8bda6468     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda6460     0  ldur x0, [x1, #7]
0xffff8bda6464     4  ldur x0, [x0, #239]
0xffff8bda6468     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda64e0     0  ldur x0, [x1, #7]
0xffff8bda64e4     4  ldur x0, [x0, #247]
0xffff8bda64e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda64e0     0  ldur x0, [x1, #7]
0xffff8bda64e4     4  ldur x0, [x0, #247]
0xffff8bda64e8     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda6560     0  ldur x0, [x1, #7]
0xffff8bda6564     4  ldur x0, [x0, #255]
0xffff8bda6568     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 20)
0xffff8bda6560     0  ldur x0, [x1, #7]
0xffff8bda6564     4  ldur x0, [x0, #255]
0xffff8bda6568     8  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bda65e0     0  ldur x0, [x1, #7]
0xffff8bda65e4     4  movz x16, #0x107
0xffff8bda65e8     8  ldr x0, [x0, x16]
0xffff8bda65ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bda65e0     0  ldur x0, [x1, #7]
0xffff8bda65e4     4  movz x16, #0x107
0xffff8bda65e8     8  ldr x0, [x0, x16]
0xffff8bda65ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bda6660     0  ldur x0, [x1, #7]
0xffff8bda6664     4  movz x16, #0x117
0xffff8bda6668     8  ldr x0, [x0, x16]
0xffff8bda666c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bda6660     0  ldur x0, [x1, #7]
0xffff8bda6664     4  movz x16, #0x117
0xffff8bda6668     8  ldr x0, [x0, x16]
0xffff8bda666c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bda66e0     0  ldur x0, [x1, #7]
0xffff8bda66e4     4  movz x16, #0x14f
0xffff8bda66e8     8  ldr x0, [x0, x16]
0xffff8bda66ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bda66e0     0  ldur x0, [x1, #7]
0xffff8bda66e4     4  movz x16, #0x14f
0xffff8bda66e8     8  ldr x0, [x0, x16]
0xffff8bda66ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bda6760     0  ldur x0, [x1, #7]
0xffff8bda6764     4  movz x16, #0x15f
0xffff8bda6768     8  ldr x0, [x0, x16]
0xffff8bda676c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bda6760     0  ldur x0, [x1, #7]
0xffff8bda6764     4  movz x16, #0x15f
0xffff8bda6768     8  ldr x0, [x0, x16]
0xffff8bda676c    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bda67e0     0  ldur x0, [x1, #7]
0xffff8bda67e4     4  movz x16, #0x177
0xffff8bda67e8     8  ldr x0, [x0, x16]
0xffff8bda67ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 24)
0xffff8bda67e0     0  ldur x0, [x1, #7]
0xffff8bda67e4     4  movz x16, #0x177
0xffff8bda67e8     8  ldr x0, [x0, x16]
0xffff8bda67ec    12  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = Intl
compiler = unknown
Instructions (size = 120)
0xffff8bda6860     0  sub csp, jssp, #0x8 (8)
0xffff8bda6864     4  str x3, [jssp, #-8]!
0xffff8bda6868     8  sub csp, jssp, #0x8 (8)
0xffff8bda686c    12  str x0, [jssp, #-8]!
0xffff8bda6870    16  ldr x0, pc+80 (addr 0x0000ffff8bda68c0)    ;; object: 0x26cc5d51 Cell for 0
0xffff8bda6874    20  ldur x0, [x0, #7]
0xffff8bda6878    24  cmp x0, #0x0 (0)
0xffff8bda687c    28  b.ne #+0x2c (addr 0xffff8bda68a8)
0xffff8bda6880    32  ldr x0, pc+72 (addr 0x0000ffff8bda68c8)    ;; object: 0x26cf4e89 WeakCell for 0x26ca8f41 PropertyCell for 0x56943859 <an Object with map 0x5f515031>
0xffff8bda6884    36  ldur x0, [x0, #7]
0xffff8bda6888    40  tbz w0, #0, #+0x20 (addr 0xffff8bda68a8)
0xffff8bda688c    44  ldur x0, [x0, #15]
0xffff8bda6890    48  ldr x16, [x26, #88]
0xffff8bda6894    52  cmp x0, x16
0xffff8bda6898    56  b.eq #+0x10 (addr 0xffff8bda68a8)
0xffff8bda689c    60  add jssp, jssp, #0x10 (16)
0xffff8bda68a0    64  ret
0xffff8bda68a4    68  b #+0x14 (addr 0xffff8bda68b8)
0xffff8bda68a8    72  ldr x0, [jssp], #8
0xffff8bda68ac    76  ldr x3, [jssp], #8
0xffff8bda68b0    80  ldr x16, pc+32 (addr 0x0000ffff8bda68d0)    ;; code: BUILTIN
0xffff8bda68b4    84  br x16
0xffff8bda68b8    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bda68bc    92  d63f03e0       constant
0xffff8bda68c0    96  26cc5d51       constant
0xffff8bda68c4   100  00000000       constant
0xffff8bda68c8   104  26cf4e89       constant
0xffff8bda68cc   108  00000000       constant
0xffff8bda68d0   112  8bd222e0       constant
0xffff8bda68d4   116  0000ffff       constant


RelocInfo (size = 9)
0xffff8bda6870  embedded object  (0x26cc5d51 Cell for 0)
0xffff8bda6880  embedded object  (0x26cf4e89 WeakCell for 0x26ca8f41 PropertyCell for 0x56943859 <an Object with map 0x5f515031>)
0xffff8bda68b0  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bda68b8  constant pool (size 32)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bda6940     0  tbz w0, #0, #+0x98 (addr 0xffff8bda69d8)
0xffff8bda6944     4  mov x2, x0
0xffff8bda6948     8  ldur x4, [x1, #7]
0xffff8bda694c    12  stur x2, [x4, #47]
0xffff8bda6950    16  add x3, x4, #0x2f (47)
0xffff8bda6954    20  and x2, x2, #0xfffffffffff00000
0xffff8bda6958    24  ldr x2, [x2, #8]
0xffff8bda695c    28  tbz w2, #1, #+0x24 (addr 0xffff8bda6980)
0xffff8bda6960    32  and x2, x4, #0xfffffffffff00000
0xffff8bda6964    36  ldr x2, [x2, #8]
0xffff8bda6968    40  tbz w2, #2, #+0x18 (addr 0xffff8bda6980)
0xffff8bda696c    44  sub csp, jssp, #0x8 (8)
0xffff8bda6970    48  str lr, [jssp, #-8]!
0xffff8bda6974    52  ldr x16, pc+84 (addr 0x0000ffff8bda69c8)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bda6978    56  blr x16
0xffff8bda697c    60  ldr lr, [jssp], #8
0xffff8bda6980    64  stur x5, [x1, #-1]
0xffff8bda6984    68  tbz w5, #0, #+0x34 (addr 0xffff8bda69b8)
0xffff8bda6988    72  sub x2, x1, #0x1 (1)
0xffff8bda698c    76  and x5, x5, #0xfffffffffff00000
0xffff8bda6990    80  ldr x5, [x5, #8]
0xffff8bda6994    84  tbz w5, #1, #+0x24 (addr 0xffff8bda69b8)
0xffff8bda6998    88  and x5, x1, #0xfffffffffff00000
0xffff8bda699c    92  ldr x5, [x5, #8]
0xffff8bda69a0    96  tbz w5, #2, #+0x18 (addr 0xffff8bda69b8)
0xffff8bda69a4   100  sub csp, jssp, #0x8 (8)
0xffff8bda69a8   104  str lr, [jssp, #-8]!
0xffff8bda69ac   108  ldr x16, pc+36 (addr 0x0000ffff8bda69d0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bda69b0   112  blr x16
0xffff8bda69b4   116  ldr lr, [jssp], #8
0xffff8bda69b8   120  ret
0xffff8bda69bc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bda69c0   128  d63f03e0       constant
0xffff8bda69c4   132  d503201f       constant
0xffff8bda69c8   136  8bd378a0       constant
0xffff8bda69cc   140  0000ffff       constant
0xffff8bda69d0   144  8bd38080       constant
0xffff8bda69d4   148  0000ffff       constant
0xffff8bda69d8   152  movz x16, #0x0
0xffff8bda69dc   156  sub csp, jssp, #0x10 (16)
0xffff8bda69e0   160  stp fp, lr, [jssp, #-16]!
0xffff8bda69e4   164  bl #+0x4 (addr 0xffff8bda69e8)
0xffff8bda69e8   168  movz x17, #0xa00000000
0xffff8bda69ec   172  sub csp, jssp, #0x10 (16)
0xffff8bda69f0   176  stp x17, cp, [jssp, #-16]!
0xffff8bda69f4   180  add fp, jssp, #0x10 (16)
0xffff8bda69f8   184  ldr x17, pc+24 (addr 0x0000ffff8bda6a10)    ;; lazy deoptimization bailout 0
0xffff8bda69fc   188  add x17, x17, x16
0xffff8bda6a00   192  br x17
0xffff8bda6a04   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bda6a08   200  d63f03e0       constant
0xffff8bda6a0c   204  d503201f       constant
0xffff8bda6a10   208  8bb06000       constant
0xffff8bda6a14   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bda6974  code target (STUB)  (0xffff8bd378a0)
0xffff8bda69ac  code target (STUB)  (0xffff8bd38080)
0xffff8bda69bc  constant pool (size 28)
0xffff8bda69f8  runtime entry
0xffff8bda6a04  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bda6940     0  tbz w0, #0, #+0x98 (addr 0xffff8bda69d8)
0xffff8bda6944     4  mov x2, x0
0xffff8bda6948     8  ldur x4, [x1, #7]
0xffff8bda694c    12  stur x2, [x4, #47]
0xffff8bda6950    16  add x3, x4, #0x2f (47)
0xffff8bda6954    20  and x2, x2, #0xfffffffffff00000
0xffff8bda6958    24  ldr x2, [x2, #8]
0xffff8bda695c    28  tbz w2, #1, #+0x24 (addr 0xffff8bda6980)
0xffff8bda6960    32  and x2, x4, #0xfffffffffff00000
0xffff8bda6964    36  ldr x2, [x2, #8]
0xffff8bda6968    40  tbz w2, #2, #+0x18 (addr 0xffff8bda6980)
0xffff8bda696c    44  sub csp, jssp, #0x8 (8)
0xffff8bda6970    48  str lr, [jssp, #-8]!
0xffff8bda6974    52  ldr x16, pc+84 (addr 0x0000ffff8bda69c8)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bda6978    56  blr x16
0xffff8bda697c    60  ldr lr, [jssp], #8
0xffff8bda6980    64  stur x5, [x1, #-1]
0xffff8bda6984    68  tbz w5, #0, #+0x34 (addr 0xffff8bda69b8)
0xffff8bda6988    72  sub x2, x1, #0x1 (1)
0xffff8bda698c    76  and x5, x5, #0xfffffffffff00000
0xffff8bda6990    80  ldr x5, [x5, #8]
0xffff8bda6994    84  tbz w5, #1, #+0x24 (addr 0xffff8bda69b8)
0xffff8bda6998    88  and x5, x1, #0xfffffffffff00000
0xffff8bda699c    92  ldr x5, [x5, #8]
0xffff8bda69a0    96  tbz w5, #2, #+0x18 (addr 0xffff8bda69b8)
0xffff8bda69a4   100  sub csp, jssp, #0x8 (8)
0xffff8bda69a8   104  str lr, [jssp, #-8]!
0xffff8bda69ac   108  ldr x16, pc+36 (addr 0x0000ffff8bda69d0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bda69b0   112  blr x16
0xffff8bda69b4   116  ldr lr, [jssp], #8
0xffff8bda69b8   120  ret
0xffff8bda69bc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bda69c0   128  d63f03e0       constant
0xffff8bda69c4   132  d503201f       constant
0xffff8bda69c8   136  8bd378a0       constant
0xffff8bda69cc   140  0000ffff       constant
0xffff8bda69d0   144  8bd38080       constant
0xffff8bda69d4   148  0000ffff       constant
0xffff8bda69d8   152  movz x16, #0x0
0xffff8bda69dc   156  sub csp, jssp, #0x10 (16)
0xffff8bda69e0   160  stp fp, lr, [jssp, #-16]!
0xffff8bda69e4   164  bl #+0x4 (addr 0xffff8bda69e8)
0xffff8bda69e8   168  movz x17, #0xa00000000
0xffff8bda69ec   172  sub csp, jssp, #0x10 (16)
0xffff8bda69f0   176  stp x17, cp, [jssp, #-16]!
0xffff8bda69f4   180  add fp, jssp, #0x10 (16)
0xffff8bda69f8   184  ldr x17, pc+24 (addr 0x0000ffff8bda6a10)    ;; lazy deoptimization bailout 0
0xffff8bda69fc   188  add x17, x17, x16
0xffff8bda6a00   192  br x17
0xffff8bda6a04   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bda6a08   200  d63f03e0       constant
0xffff8bda6a0c   204  d503201f       constant
0xffff8bda6a10   208  8bb06000       constant
0xffff8bda6a14   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bda6974  code target (STUB)  (0xffff8bd378a0)
0xffff8bda69ac  code target (STUB)  (0xffff8bd38080)
0xffff8bda69bc  constant pool (size 28)
0xffff8bda69f8  runtime entry
0xffff8bda6a04  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/process/warning
compiler = unknown
Instructions (size = 184)
0xffff8bda6a80     0  sub csp, jssp, #0x8 (8)
0xffff8bda6a84     4  str x3, [jssp, #-8]!
0xffff8bda6a88     8  sub csp, jssp, #0x8 (8)
0xffff8bda6a8c    12  str x4, [jssp, #-8]!
0xffff8bda6a90    16  ldr x3, pc+112 (addr 0x0000ffff8bda6b00)    ;; object: 0x26c63e59 Cell for 0
0xffff8bda6a94    20  ldur x3, [x3, #7]
0xffff8bda6a98    24  cmp x3, #0x0 (0)
0xffff8bda6a9c    28  b.ne #+0x44 (addr 0xffff8bda6ae0)
0xffff8bda6aa0    32  tbz w0, #0, #+0x40 (addr 0xffff8bda6ae0)
0xffff8bda6aa4    36  ldur x3, [x0, #-1]
0xffff8bda6aa8    40  ldr x4, pc+96 (addr 0x0000ffff8bda6b08)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bda6aac    44  ldur x4, [x4, #7]
0xffff8bda6ab0    48  cmp x3, x4
0xffff8bda6ab4    52  b.ne #+0x2c (addr 0xffff8bda6ae0)
0xffff8bda6ab8    56  ldr x5, pc+88 (addr 0x0000ffff8bda6b10)    ;; object: 0x26cf4fd1 WeakCell for 0x5f527a91 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bda6abc    60  ldur x5, [x5, #7]
0xffff8bda6ac0    64  tbz w5, #0, #+0x20 (addr 0xffff8bda6ae0)
0xffff8bda6ac4    68  ldursw x4, [x5, #15]
0xffff8bda6ac8    72  tbnz w4, #23, #+0x18 (addr 0xffff8bda6ae0)
0xffff8bda6acc    76  ldr x4, [jssp], #8
0xffff8bda6ad0    80  ldr x3, [jssp], #8
0xffff8bda6ad4    84  ldr x2, pc+68 (addr 0x0000ffff8bda6b18)    ;; object: 0x26cb9731 <String[24]: internal/process/warning>
0xffff8bda6ad8    88  ldr x16, pc+72 (addr 0x0000ffff8bda6b20)    ;; code: HANDLER, StoreTransitionStub, minor: 196614
0xffff8bda6adc    92  br x16
0xffff8bda6ae0    96  ldr x2, pc+72 (addr 0x0000ffff8bda6b28)    ;; object: 0x26cb9731 <String[24]: internal/process/warning>
0xffff8bda6ae4   100  ldr x4, [jssp], #8
0xffff8bda6ae8   104  ldr x3, [jssp], #8
0xffff8bda6aec   108  ldr x16, pc+68 (addr 0x0000ffff8bda6b30)    ;; code: BUILTIN
0xffff8bda6af0   112  br x16
0xffff8bda6af4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bda6af8   120  d63f03e0       constant
0xffff8bda6afc   124  d503201f       constant
0xffff8bda6b00   128  26c63e59       constant
0xffff8bda6b04   132  00000000       constant
0xffff8bda6b08   136  26cc22b1       constant
0xffff8bda6b0c   140  00000000       constant
0xffff8bda6b10   144  26cf4fd1       constant
0xffff8bda6b14   148  00000000       constant
0xffff8bda6b18   152  26cb9731       constant
0xffff8bda6b1c   156  00000000       constant
0xffff8bda6b20   160  8bda6940       constant
0xffff8bda6b24   164  0000ffff       constant
0xffff8bda6b28   168  26cb9731       constant
0xffff8bda6b2c   172  00000000       constant
0xffff8bda6b30   176  8bd22420       constant
0xffff8bda6b34   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bda6a90  embedded object  (0x26c63e59 Cell for 0)
0xffff8bda6aa8  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bda6ab8  embedded object  (0x26cf4fd1 WeakCell for 0x5f527a91 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bda6ad4  embedded object  (0x26cb9731 <String[24]: internal/process/warning>)
0xffff8bda6ad8  code target (HANDLER)  (0xffff8bda6940)
0xffff8bda6ae0  embedded object  (0x26cb9731 <String[24]: internal/process/warning>)
0xffff8bda6aec  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bda6af4  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bda87a0     0  tbz w0, #0, #+0x98 (addr 0xffff8bda8838)
0xffff8bda87a4     4  mov x2, x0
0xffff8bda87a8     8  ldur x4, [x1, #7]
0xffff8bda87ac    12  stur x2, [x4, #55]
0xffff8bda87b0    16  add x3, x4, #0x37 (55)
0xffff8bda87b4    20  and x2, x2, #0xfffffffffff00000
0xffff8bda87b8    24  ldr x2, [x2, #8]
0xffff8bda87bc    28  tbz w2, #1, #+0x24 (addr 0xffff8bda87e0)
0xffff8bda87c0    32  and x2, x4, #0xfffffffffff00000
0xffff8bda87c4    36  ldr x2, [x2, #8]
0xffff8bda87c8    40  tbz w2, #2, #+0x18 (addr 0xffff8bda87e0)
0xffff8bda87cc    44  sub csp, jssp, #0x8 (8)
0xffff8bda87d0    48  str lr, [jssp, #-8]!
0xffff8bda87d4    52  ldr x16, pc+84 (addr 0x0000ffff8bda8828)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bda87d8    56  blr x16
0xffff8bda87dc    60  ldr lr, [jssp], #8
0xffff8bda87e0    64  stur x5, [x1, #-1]
0xffff8bda87e4    68  tbz w5, #0, #+0x34 (addr 0xffff8bda8818)
0xffff8bda87e8    72  sub x2, x1, #0x1 (1)
0xffff8bda87ec    76  and x5, x5, #0xfffffffffff00000
0xffff8bda87f0    80  ldr x5, [x5, #8]
0xffff8bda87f4    84  tbz w5, #1, #+0x24 (addr 0xffff8bda8818)
0xffff8bda87f8    88  and x5, x1, #0xfffffffffff00000
0xffff8bda87fc    92  ldr x5, [x5, #8]
0xffff8bda8800    96  tbz w5, #2, #+0x18 (addr 0xffff8bda8818)
0xffff8bda8804   100  sub csp, jssp, #0x8 (8)
0xffff8bda8808   104  str lr, [jssp, #-8]!
0xffff8bda880c   108  ldr x16, pc+36 (addr 0x0000ffff8bda8830)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bda8810   112  blr x16
0xffff8bda8814   116  ldr lr, [jssp], #8
0xffff8bda8818   120  ret
0xffff8bda881c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bda8820   128  d63f03e0       constant
0xffff8bda8824   132  d503201f       constant
0xffff8bda8828   136  8bd378a0       constant
0xffff8bda882c   140  0000ffff       constant
0xffff8bda8830   144  8bd38080       constant
0xffff8bda8834   148  0000ffff       constant
0xffff8bda8838   152  movz x16, #0x0
0xffff8bda883c   156  sub csp, jssp, #0x10 (16)
0xffff8bda8840   160  stp fp, lr, [jssp, #-16]!
0xffff8bda8844   164  bl #+0x4 (addr 0xffff8bda8848)
0xffff8bda8848   168  movz x17, #0xa00000000
0xffff8bda884c   172  sub csp, jssp, #0x10 (16)
0xffff8bda8850   176  stp x17, cp, [jssp, #-16]!
0xffff8bda8854   180  add fp, jssp, #0x10 (16)
0xffff8bda8858   184  ldr x17, pc+24 (addr 0x0000ffff8bda8870)    ;; lazy deoptimization bailout 0
0xffff8bda885c   188  add x17, x17, x16
0xffff8bda8860   192  br x17
0xffff8bda8864   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bda8868   200  d63f03e0       constant
0xffff8bda886c   204  d503201f       constant
0xffff8bda8870   208  8bb06000       constant
0xffff8bda8874   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bda87d4  code target (STUB)  (0xffff8bd378a0)
0xffff8bda880c  code target (STUB)  (0xffff8bd38080)
0xffff8bda881c  constant pool (size 28)
0xffff8bda8858  runtime entry
0xffff8bda8864  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bda87a0     0  tbz w0, #0, #+0x98 (addr 0xffff8bda8838)
0xffff8bda87a4     4  mov x2, x0
0xffff8bda87a8     8  ldur x4, [x1, #7]
0xffff8bda87ac    12  stur x2, [x4, #55]
0xffff8bda87b0    16  add x3, x4, #0x37 (55)
0xffff8bda87b4    20  and x2, x2, #0xfffffffffff00000
0xffff8bda87b8    24  ldr x2, [x2, #8]
0xffff8bda87bc    28  tbz w2, #1, #+0x24 (addr 0xffff8bda87e0)
0xffff8bda87c0    32  and x2, x4, #0xfffffffffff00000
0xffff8bda87c4    36  ldr x2, [x2, #8]
0xffff8bda87c8    40  tbz w2, #2, #+0x18 (addr 0xffff8bda87e0)
0xffff8bda87cc    44  sub csp, jssp, #0x8 (8)
0xffff8bda87d0    48  str lr, [jssp, #-8]!
0xffff8bda87d4    52  ldr x16, pc+84 (addr 0x0000ffff8bda8828)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bda87d8    56  blr x16
0xffff8bda87dc    60  ldr lr, [jssp], #8
0xffff8bda87e0    64  stur x5, [x1, #-1]
0xffff8bda87e4    68  tbz w5, #0, #+0x34 (addr 0xffff8bda8818)
0xffff8bda87e8    72  sub x2, x1, #0x1 (1)
0xffff8bda87ec    76  and x5, x5, #0xfffffffffff00000
0xffff8bda87f0    80  ldr x5, [x5, #8]
0xffff8bda87f4    84  tbz w5, #1, #+0x24 (addr 0xffff8bda8818)
0xffff8bda87f8    88  and x5, x1, #0xfffffffffff00000
0xffff8bda87fc    92  ldr x5, [x5, #8]
0xffff8bda8800    96  tbz w5, #2, #+0x18 (addr 0xffff8bda8818)
0xffff8bda8804   100  sub csp, jssp, #0x8 (8)
0xffff8bda8808   104  str lr, [jssp, #-8]!
0xffff8bda880c   108  ldr x16, pc+36 (addr 0x0000ffff8bda8830)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bda8810   112  blr x16
0xffff8bda8814   116  ldr lr, [jssp], #8
0xffff8bda8818   120  ret
0xffff8bda881c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bda8820   128  d63f03e0       constant
0xffff8bda8824   132  d503201f       constant
0xffff8bda8828   136  8bd378a0       constant
0xffff8bda882c   140  0000ffff       constant
0xffff8bda8830   144  8bd38080       constant
0xffff8bda8834   148  0000ffff       constant
0xffff8bda8838   152  movz x16, #0x0
0xffff8bda883c   156  sub csp, jssp, #0x10 (16)
0xffff8bda8840   160  stp fp, lr, [jssp, #-16]!
0xffff8bda8844   164  bl #+0x4 (addr 0xffff8bda8848)
0xffff8bda8848   168  movz x17, #0xa00000000
0xffff8bda884c   172  sub csp, jssp, #0x10 (16)
0xffff8bda8850   176  stp x17, cp, [jssp, #-16]!
0xffff8bda8854   180  add fp, jssp, #0x10 (16)
0xffff8bda8858   184  ldr x17, pc+24 (addr 0x0000ffff8bda8870)    ;; lazy deoptimization bailout 0
0xffff8bda885c   188  add x17, x17, x16
0xffff8bda8860   192  br x17
0xffff8bda8864   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bda8868   200  d63f03e0       constant
0xffff8bda886c   204  d503201f       constant
0xffff8bda8870   208  8bb06000       constant
0xffff8bda8874   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bda87d4  code target (STUB)  (0xffff8bd378a0)
0xffff8bda880c  code target (STUB)  (0xffff8bd38080)
0xffff8bda881c  constant pool (size 28)
0xffff8bda8858  runtime entry
0xffff8bda8864  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/process/next_tick
compiler = unknown
Instructions (size = 184)
0xffff8bda88e0     0  sub csp, jssp, #0x8 (8)
0xffff8bda88e4     4  str x3, [jssp, #-8]!
0xffff8bda88e8     8  sub csp, jssp, #0x8 (8)
0xffff8bda88ec    12  str x4, [jssp, #-8]!
0xffff8bda88f0    16  ldr x3, pc+112 (addr 0x0000ffff8bda8960)    ;; object: 0x26c63e59 Cell for 0
0xffff8bda88f4    20  ldur x3, [x3, #7]
0xffff8bda88f8    24  cmp x3, #0x0 (0)
0xffff8bda88fc    28  b.ne #+0x44 (addr 0xffff8bda8940)
0xffff8bda8900    32  tbz w0, #0, #+0x40 (addr 0xffff8bda8940)
0xffff8bda8904    36  ldur x3, [x0, #-1]
0xffff8bda8908    40  ldr x4, pc+96 (addr 0x0000ffff8bda8968)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bda890c    44  ldur x4, [x4, #7]
0xffff8bda8910    48  cmp x3, x4
0xffff8bda8914    52  b.ne #+0x2c (addr 0xffff8bda8940)
0xffff8bda8918    56  ldr x5, pc+88 (addr 0x0000ffff8bda8970)    ;; object: 0x26cf6569 WeakCell for 0x5f527b99 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bda891c    60  ldur x5, [x5, #7]
0xffff8bda8920    64  tbz w5, #0, #+0x20 (addr 0xffff8bda8940)
0xffff8bda8924    68  ldursw x4, [x5, #15]
0xffff8bda8928    72  tbnz w4, #23, #+0x18 (addr 0xffff8bda8940)
0xffff8bda892c    76  ldr x4, [jssp], #8
0xffff8bda8930    80  ldr x3, [jssp], #8
0xffff8bda8934    84  ldr x2, pc+68 (addr 0x0000ffff8bda8978)    ;; object: 0x26cb9781 <String[26]: internal/process/next_tick>
0xffff8bda8938    88  ldr x16, pc+72 (addr 0x0000ffff8bda8980)    ;; code: HANDLER, StoreTransitionStub, minor: 196615
0xffff8bda893c    92  br x16
0xffff8bda8940    96  ldr x2, pc+72 (addr 0x0000ffff8bda8988)    ;; object: 0x26cb9781 <String[26]: internal/process/next_tick>
0xffff8bda8944   100  ldr x4, [jssp], #8
0xffff8bda8948   104  ldr x3, [jssp], #8
0xffff8bda894c   108  ldr x16, pc+68 (addr 0x0000ffff8bda8990)    ;; code: BUILTIN
0xffff8bda8950   112  br x16
0xffff8bda8954   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bda8958   120  d63f03e0       constant
0xffff8bda895c   124  d503201f       constant
0xffff8bda8960   128  26c63e59       constant
0xffff8bda8964   132  00000000       constant
0xffff8bda8968   136  26cc22b1       constant
0xffff8bda896c   140  00000000       constant
0xffff8bda8970   144  26cf6569       constant
0xffff8bda8974   148  00000000       constant
0xffff8bda8978   152  26cb9781       constant
0xffff8bda897c   156  00000000       constant
0xffff8bda8980   160  8bda87a0       constant
0xffff8bda8984   164  0000ffff       constant
0xffff8bda8988   168  26cb9781       constant
0xffff8bda898c   172  00000000       constant
0xffff8bda8990   176  8bd22420       constant
0xffff8bda8994   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bda88f0  embedded object  (0x26c63e59 Cell for 0)
0xffff8bda8908  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bda8918  embedded object  (0x26cf6569 WeakCell for 0x5f527b99 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bda8934  embedded object  (0x26cb9781 <String[26]: internal/process/next_tick>)
0xffff8bda8938  code target (HANDLER)  (0xffff8bda87a0)
0xffff8bda8940  embedded object  (0x26cb9781 <String[26]: internal/process/next_tick>)
0xffff8bda894c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bda8954  constant pool (size 68)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 429)
0xffff8bda8d60     0  movz x2, #0xe2c0
0xffff8bda8d64     4  movk x2, #0x2cb8, lsl #16
0xffff8bda8d68     8  ldp x3, x0, [x2]
0xffff8bda8d6c    12  adds x16, x3, #0x88 (136)
0xffff8bda8d70    16  ccmp x16, x0, #nzCv, lo
0xffff8bda8d74    20  b.hi #+0x94 (addr 0xffff8bda8e08)
0xffff8bda8d78    24  str x16, [x2]
0xffff8bda8d7c    28  orr x3, x3, #0x1
0xffff8bda8d80    32  ldr x0, pc+248 (addr 0x0000ffff8bda8e78)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bda8d84    36  stur x0, [x3, #-1]
0xffff8bda8d88    40  movz x0, #0xf00000000
0xffff8bda8d8c    44  stur x0, [x3, #7]
0xffff8bda8d90    48  stur x1, [x3, #15]
0xffff8bda8d94    52  stur cp, [x3, #23]
0xffff8bda8d98    56  ldr x0, pc+232 (addr 0x0000ffff8bda8e80)    ;; object: 0x26c04519 <the hole>
0xffff8bda8d9c    60  stur x0, [x3, #31]
0xffff8bda8da0    64  ldur x0, [cp, #39]
0xffff8bda8da4    68  stur x0, [x3, #39]
0xffff8bda8da8    72  ldr x0, pc+224 (addr 0x0000ffff8bda8e88)    ;; object: 0x26c04241 <undefined>
0xffff8bda8dac    76  stur x0, [x3, #47]
0xffff8bda8db0    80  ldr x0, pc+224 (addr 0x0000ffff8bda8e90)    ;; object: 0x26c04241 <undefined>
0xffff8bda8db4    84  stur x0, [x3, #55]
0xffff8bda8db8    88  ldr x0, pc+224 (addr 0x0000ffff8bda8e98)    ;; object: 0x26c04241 <undefined>
0xffff8bda8dbc    92  stur x0, [x3, #63]
0xffff8bda8dc0    96  ldr x0, pc+224 (addr 0x0000ffff8bda8ea0)    ;; object: 0x26c04241 <undefined>
0xffff8bda8dc4   100  stur x0, [x3, #71]
0xffff8bda8dc8   104  ldr x0, pc+224 (addr 0x0000ffff8bda8ea8)    ;; object: 0x26c04241 <undefined>
0xffff8bda8dcc   108  stur x0, [x3, #79]
0xffff8bda8dd0   112  ldr x0, pc+224 (addr 0x0000ffff8bda8eb0)    ;; object: 0x26c04241 <undefined>
0xffff8bda8dd4   116  stur x0, [x3, #87]
0xffff8bda8dd8   120  ldr x0, pc+224 (addr 0x0000ffff8bda8eb8)    ;; object: 0x26c04241 <undefined>
0xffff8bda8ddc   124  stur x0, [x3, #95]
0xffff8bda8de0   128  ldr x0, pc+224 (addr 0x0000ffff8bda8ec0)    ;; object: 0x26c04241 <undefined>
0xffff8bda8de4   132  stur x0, [x3, #103]
0xffff8bda8de8   136  ldr x0, pc+224 (addr 0x0000ffff8bda8ec8)    ;; object: 0x26c04241 <undefined>
0xffff8bda8dec   140  stur x0, [x3, #111]
0xffff8bda8df0   144  ldr x0, pc+224 (addr 0x0000ffff8bda8ed0)    ;; object: 0x26c04241 <undefined>
0xffff8bda8df4   148  stur x0, [x3, #119]
0xffff8bda8df8   152  ldr x0, pc+224 (addr 0x0000ffff8bda8ed8)    ;; object: 0x26c04241 <undefined>
0xffff8bda8dfc   156  stur x0, [x3, #127]
0xffff8bda8e00   160  mov x0, x3
0xffff8bda8e04   164  ret
0xffff8bda8e08   168  sub csp, jssp, #0x10 (16)
0xffff8bda8e0c   172  stp fp, lr, [jssp, #-16]!
0xffff8bda8e10   176  movz fp, #0xa00000000
0xffff8bda8e14   180  sub csp, jssp, #0x8 (8)
0xffff8bda8e18   184  str fp, [jssp, #-8]!
0xffff8bda8e1c   188  add fp, jssp, #0x8 (8)
0xffff8bda8e20   192  movz x3, #0x0
0xffff8bda8e24   196  mov x16, lr
0xffff8bda8e28   200  ldr x17, pc+184 (addr 0x0000ffff8bda8ee0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bda8e2c   204  blr x17
0xffff8bda8e30   208  movz x0, #0x8800000000
0xffff8bda8e34   212  movz x10, #0x0
0xffff8bda8e38   216  sub csp, jssp, #0x10 (16)
0xffff8bda8e3c   220  stp x10, x0, [jssp, #-16]!
0xffff8bda8e40   224  movz x0, #0x2
0xffff8bda8e44   228  movz x1, #0x5b88
0xffff8bda8e48   232  movk x1, #0xe2, lsl #16
0xffff8bda8e4c   236  ldr x16, pc+156 (addr 0x0000ffff8bda8ee8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bda8e50   240  blr x16
0xffff8bda8e54   244  str x0, [jssp, #24]
0xffff8bda8e58   248  ldr x16, pc+152 (addr 0x0000ffff8bda8ef0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bda8e5c   252  blr x16
0xffff8bda8e60   256  ldr lr, [jssp, #16]
0xffff8bda8e64   260  ldp xzr, fp, [jssp], #24
0xffff8bda8e68   264  b #-0xe8 (addr 0xffff8bda8d80)
0xffff8bda8e6c   268  5800045f       constant pool begin (num_const = 34)    ;; constant pool
0xffff8bda8e70   272  d63f03e0       constant
0xffff8bda8e74   276  d503201f       constant
0xffff8bda8e78   280  5f506149       constant
0xffff8bda8e7c   284  00000000       constant
0xffff8bda8e80   288  26c04519       constant
0xffff8bda8e84   292  00000000       constant
0xffff8bda8e88   296  26c04241       constant
0xffff8bda8e8c   300  00000000       constant
0xffff8bda8e90   304  26c04241       constant
0xffff8bda8e94   308  00000000       constant
0xffff8bda8e98   312  26c04241       constant
0xffff8bda8e9c   316  00000000       constant
0xffff8bda8ea0   320  26c04241       constant
0xffff8bda8ea4   324  00000000       constant
0xffff8bda8ea8   328  26c04241       constant
0xffff8bda8eac   332  00000000       constant
0xffff8bda8eb0   336  26c04241       constant
0xffff8bda8eb4   340  00000000       constant
0xffff8bda8eb8   344  26c04241       constant
0xffff8bda8ebc   348  00000000       constant
0xffff8bda8ec0   352  26c04241       constant
0xffff8bda8ec4   356  00000000       constant
0xffff8bda8ec8   360  26c04241       constant
0xffff8bda8ecc   364  00000000       constant
0xffff8bda8ed0   368  26c04241       constant
0xffff8bda8ed4   372  00000000       constant
0xffff8bda8ed8   376  26c04241       constant
0xffff8bda8edc   380  00000000       constant
0xffff8bda8ee0   384  8bd06820       constant
0xffff8bda8ee4   388  0000ffff       constant
0xffff8bda8ee8   392  8bd06260       constant
0xffff8bda8eec   396  0000ffff       constant
0xffff8bda8ef0   400  8bd068e0       constant
0xffff8bda8ef4   404  0000ffff       constant


Safepoints (size = 21)
0xffff8bda8e54   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 22)
0xffff8bda8d80  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bda8d98  embedded object  (0x26c04519 <the hole>)
0xffff8bda8da8  embedded object  (0x26c04241 <undefined>)
0xffff8bda8db0  embedded object  (0x26c04241 <undefined>)
0xffff8bda8db8  embedded object  (0x26c04241 <undefined>)
0xffff8bda8dc0  embedded object  (0x26c04241 <undefined>)
0xffff8bda8dc8  embedded object  (0x26c04241 <undefined>)
0xffff8bda8dd0  embedded object  (0x26c04241 <undefined>)
0xffff8bda8dd8  embedded object  (0x26c04241 <undefined>)
0xffff8bda8de0  embedded object  (0x26c04241 <undefined>)
0xffff8bda8de8  embedded object  (0x26c04241 <undefined>)
0xffff8bda8df0  embedded object  (0x26c04241 <undefined>)
0xffff8bda8df8  embedded object  (0x26c04241 <undefined>)
0xffff8bda8e28  code target (STUB)  (0xffff8bd06820)
0xffff8bda8e4c  code target (STUB)  (0xffff8bd06260)
0xffff8bda8e58  code target (STUB)  (0xffff8bd068e0)
0xffff8bda8e6c  constant pool (size 140)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 429)
0xffff8bda8d60     0  movz x2, #0xe2c0
0xffff8bda8d64     4  movk x2, #0x2cb8, lsl #16
0xffff8bda8d68     8  ldp x3, x0, [x2]
0xffff8bda8d6c    12  adds x16, x3, #0x88 (136)
0xffff8bda8d70    16  ccmp x16, x0, #nzCv, lo
0xffff8bda8d74    20  b.hi #+0x94 (addr 0xffff8bda8e08)
0xffff8bda8d78    24  str x16, [x2]
0xffff8bda8d7c    28  orr x3, x3, #0x1
0xffff8bda8d80    32  ldr x0, pc+248 (addr 0x0000ffff8bda8e78)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bda8d84    36  stur x0, [x3, #-1]
0xffff8bda8d88    40  movz x0, #0xf00000000
0xffff8bda8d8c    44  stur x0, [x3, #7]
0xffff8bda8d90    48  stur x1, [x3, #15]
0xffff8bda8d94    52  stur cp, [x3, #23]
0xffff8bda8d98    56  ldr x0, pc+232 (addr 0x0000ffff8bda8e80)    ;; object: 0x26c04519 <the hole>
0xffff8bda8d9c    60  stur x0, [x3, #31]
0xffff8bda8da0    64  ldur x0, [cp, #39]
0xffff8bda8da4    68  stur x0, [x3, #39]
0xffff8bda8da8    72  ldr x0, pc+224 (addr 0x0000ffff8bda8e88)    ;; object: 0x26c04241 <undefined>
0xffff8bda8dac    76  stur x0, [x3, #47]
0xffff8bda8db0    80  ldr x0, pc+224 (addr 0x0000ffff8bda8e90)    ;; object: 0x26c04241 <undefined>
0xffff8bda8db4    84  stur x0, [x3, #55]
0xffff8bda8db8    88  ldr x0, pc+224 (addr 0x0000ffff8bda8e98)    ;; object: 0x26c04241 <undefined>
0xffff8bda8dbc    92  stur x0, [x3, #63]
0xffff8bda8dc0    96  ldr x0, pc+224 (addr 0x0000ffff8bda8ea0)    ;; object: 0x26c04241 <undefined>
0xffff8bda8dc4   100  stur x0, [x3, #71]
0xffff8bda8dc8   104  ldr x0, pc+224 (addr 0x0000ffff8bda8ea8)    ;; object: 0x26c04241 <undefined>
0xffff8bda8dcc   108  stur x0, [x3, #79]
0xffff8bda8dd0   112  ldr x0, pc+224 (addr 0x0000ffff8bda8eb0)    ;; object: 0x26c04241 <undefined>
0xffff8bda8dd4   116  stur x0, [x3, #87]
0xffff8bda8dd8   120  ldr x0, pc+224 (addr 0x0000ffff8bda8eb8)    ;; object: 0x26c04241 <undefined>
0xffff8bda8ddc   124  stur x0, [x3, #95]
0xffff8bda8de0   128  ldr x0, pc+224 (addr 0x0000ffff8bda8ec0)    ;; object: 0x26c04241 <undefined>
0xffff8bda8de4   132  stur x0, [x3, #103]
0xffff8bda8de8   136  ldr x0, pc+224 (addr 0x0000ffff8bda8ec8)    ;; object: 0x26c04241 <undefined>
0xffff8bda8dec   140  stur x0, [x3, #111]
0xffff8bda8df0   144  ldr x0, pc+224 (addr 0x0000ffff8bda8ed0)    ;; object: 0x26c04241 <undefined>
0xffff8bda8df4   148  stur x0, [x3, #119]
0xffff8bda8df8   152  ldr x0, pc+224 (addr 0x0000ffff8bda8ed8)    ;; object: 0x26c04241 <undefined>
0xffff8bda8dfc   156  stur x0, [x3, #127]
0xffff8bda8e00   160  mov x0, x3
0xffff8bda8e04   164  ret
0xffff8bda8e08   168  sub csp, jssp, #0x10 (16)
0xffff8bda8e0c   172  stp fp, lr, [jssp, #-16]!
0xffff8bda8e10   176  movz fp, #0xa00000000
0xffff8bda8e14   180  sub csp, jssp, #0x8 (8)
0xffff8bda8e18   184  str fp, [jssp, #-8]!
0xffff8bda8e1c   188  add fp, jssp, #0x8 (8)
0xffff8bda8e20   192  movz x3, #0x0
0xffff8bda8e24   196  mov x16, lr
0xffff8bda8e28   200  ldr x17, pc+184 (addr 0x0000ffff8bda8ee0)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bda8e2c   204  blr x17
0xffff8bda8e30   208  movz x0, #0x8800000000
0xffff8bda8e34   212  movz x10, #0x0
0xffff8bda8e38   216  sub csp, jssp, #0x10 (16)
0xffff8bda8e3c   220  stp x10, x0, [jssp, #-16]!
0xffff8bda8e40   224  movz x0, #0x2
0xffff8bda8e44   228  movz x1, #0x5b88
0xffff8bda8e48   232  movk x1, #0xe2, lsl #16
0xffff8bda8e4c   236  ldr x16, pc+156 (addr 0x0000ffff8bda8ee8)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bda8e50   240  blr x16
0xffff8bda8e54   244  str x0, [jssp, #24]
0xffff8bda8e58   248  ldr x16, pc+152 (addr 0x0000ffff8bda8ef0)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bda8e5c   252  blr x16
0xffff8bda8e60   256  ldr lr, [jssp, #16]
0xffff8bda8e64   260  ldp xzr, fp, [jssp], #24
0xffff8bda8e68   264  b #-0xe8 (addr 0xffff8bda8d80)
0xffff8bda8e6c   268  5800045f       constant pool begin (num_const = 34)    ;; constant pool
0xffff8bda8e70   272  d63f03e0       constant
0xffff8bda8e74   276  d503201f       constant
0xffff8bda8e78   280  5f506149       constant
0xffff8bda8e7c   284  00000000       constant
0xffff8bda8e80   288  26c04519       constant
0xffff8bda8e84   292  00000000       constant
0xffff8bda8e88   296  26c04241       constant
0xffff8bda8e8c   300  00000000       constant
0xffff8bda8e90   304  26c04241       constant
0xffff8bda8e94   308  00000000       constant
0xffff8bda8e98   312  26c04241       constant
0xffff8bda8e9c   316  00000000       constant
0xffff8bda8ea0   320  26c04241       constant
0xffff8bda8ea4   324  00000000       constant
0xffff8bda8ea8   328  26c04241       constant
0xffff8bda8eac   332  00000000       constant
0xffff8bda8eb0   336  26c04241       constant
0xffff8bda8eb4   340  00000000       constant
0xffff8bda8eb8   344  26c04241       constant
0xffff8bda8ebc   348  00000000       constant
0xffff8bda8ec0   352  26c04241       constant
0xffff8bda8ec4   356  00000000       constant
0xffff8bda8ec8   360  26c04241       constant
0xffff8bda8ecc   364  00000000       constant
0xffff8bda8ed0   368  26c04241       constant
0xffff8bda8ed4   372  00000000       constant
0xffff8bda8ed8   376  26c04241       constant
0xffff8bda8edc   380  00000000       constant
0xffff8bda8ee0   384  8bd06820       constant
0xffff8bda8ee4   388  0000ffff       constant
0xffff8bda8ee8   392  8bd06260       constant
0xffff8bda8eec   396  0000ffff       constant
0xffff8bda8ef0   400  8bd068e0       constant
0xffff8bda8ef4   404  0000ffff       constant


Safepoints (size = 21)
0xffff8bda8e54   244  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 22)
0xffff8bda8d80  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bda8d98  embedded object  (0x26c04519 <the hole>)
0xffff8bda8da8  embedded object  (0x26c04241 <undefined>)
0xffff8bda8db0  embedded object  (0x26c04241 <undefined>)
0xffff8bda8db8  embedded object  (0x26c04241 <undefined>)
0xffff8bda8dc0  embedded object  (0x26c04241 <undefined>)
0xffff8bda8dc8  embedded object  (0x26c04241 <undefined>)
0xffff8bda8dd0  embedded object  (0x26c04241 <undefined>)
0xffff8bda8dd8  embedded object  (0x26c04241 <undefined>)
0xffff8bda8de0  embedded object  (0x26c04241 <undefined>)
0xffff8bda8de8  embedded object  (0x26c04241 <undefined>)
0xffff8bda8df0  embedded object  (0x26c04241 <undefined>)
0xffff8bda8df8  embedded object  (0x26c04241 <undefined>)
0xffff8bda8e28  code target (STUB)  (0xffff8bd06820)
0xffff8bda8e4c  code target (STUB)  (0xffff8bd06260)
0xffff8bda8e58  code target (STUB)  (0xffff8bd068e0)
0xffff8bda8e6c  constant pool (size 140)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff8bda9780     0  ldur x6, [x1, #7]
0xffff8bda9784     4  ldur w7, [x6, #11]
0xffff8bda9788     8  adds w8, w7, #0x3 (3)
0xffff8bda978c    12  b.vs #+0x1dc (addr 0xffff8bda9968)
0xffff8bda9790    16  movz w16, #0x95ff
0xffff8bda9794    20  cmp w8, w16, lsl #1
0xffff8bda9798    24  b.hs #+0x1e0 (addr 0xffff8bda9978)
0xffff8bda979c    28  lsl x9, x8, #32
0xffff8bda97a0    32  lsl w10, w8, #3
0xffff8bda97a4    36  add w10, w10, #0x10 (16)
0xffff8bda97a8    40  sxtw x10, w10
0xffff8bda97ac    44  movz x11, #0xe2c0
0xffff8bda97b0    48  movk x11, #0x2cb8, lsl #16
0xffff8bda97b4    52  ldp x13, x16, [x11]
0xffff8bda97b8    56  adds x12, x13, x10
0xffff8bda97bc    60  ccmp x12, x16, #nzCv, lo
0xffff8bda97c0    64  b.hi #+0xf8 (addr 0xffff8bda98b8)
0xffff8bda97c4    68  str x12, [x11]
0xffff8bda97c8    72  orr x13, x13, #0x1
0xffff8bda97cc    76  ldr x10, pc+348 (addr 0x0000ffff8bda9928)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bda97d0    80  stur x10, [x13, #-1]
0xffff8bda97d4    84  stur x9, [x13, #7]
0xffff8bda97d8    88  cmp w7, w8
0xffff8bda97dc    92  b.ge #+0x18 (addr 0xffff8bda97f4)
0xffff8bda97e0    96  sub w8, w8, #0x1 (1)
0xffff8bda97e4   100  ldr x9, pc+332 (addr 0x0000ffff8bda9930)    ;; object: 0x26c04241 <undefined>
0xffff8bda97e8   104  add x10, x13, #0xf (15)
0xffff8bda97ec   108  str x9, [x10, w8, sxtw #3]
0xffff8bda97f0   112  b #-0x18 (addr 0xffff8bda97d8)
0xffff8bda97f4   116  cmp w7, #0x0 (0)
0xffff8bda97f8   120  b.le #+0x1c (addr 0xffff8bda9814)
0xffff8bda97fc   124  sub w7, w7, #0x1 (1)
0xffff8bda9800   128  add x8, x6, #0xf (15)
0xffff8bda9804   132  ldr x9, [x8, w7, sxtw #3]
0xffff8bda9808   136  add x8, x13, #0xf (15)
0xffff8bda980c   140  str x9, [x8, w7, sxtw #3]
0xffff8bda9810   144  b #-0x1c (addr 0xffff8bda97f4)
0xffff8bda9814   148  stur x13, [x1, #7]
0xffff8bda9818   152  add x6, x1, #0x7 (7)
0xffff8bda981c   156  and x13, x1, #0xfffffffffff00000
0xffff8bda9820   160  ldr x13, [x13, #8]
0xffff8bda9824   164  tbz w13, #2, #+0x18 (addr 0xffff8bda983c)
0xffff8bda9828   168  sub csp, jssp, #0x8 (8)
0xffff8bda982c   172  str lr, [jssp, #-8]!
0xffff8bda9830   176  ldr x16, pc+264 (addr 0x0000ffff8bda9938)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff8bda9834   180  blr x16
0xffff8bda9838   184  ldr lr, [jssp], #8
0xffff8bda983c   188  tbz w0, #0, #+0x14c (addr 0xffff8bda9988)
0xffff8bda9840   192  mov x2, x0
0xffff8bda9844   196  ldur x4, [x1, #7]
0xffff8bda9848   200  stur x2, [x4, #63]
0xffff8bda984c   204  add x3, x4, #0x3f (63)
0xffff8bda9850   208  and x2, x2, #0xfffffffffff00000
0xffff8bda9854   212  ldr x2, [x2, #8]
0xffff8bda9858   216  tbz w2, #1, #+0x24 (addr 0xffff8bda987c)
0xffff8bda985c   220  and x2, x4, #0xfffffffffff00000
0xffff8bda9860   224  ldr x2, [x2, #8]
0xffff8bda9864   228  tbz w2, #2, #+0x18 (addr 0xffff8bda987c)
0xffff8bda9868   232  sub csp, jssp, #0x8 (8)
0xffff8bda986c   236  str lr, [jssp, #-8]!
0xffff8bda9870   240  ldr x16, pc+208 (addr 0x0000ffff8bda9940)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bda9874   244  blr x16
0xffff8bda9878   248  ldr lr, [jssp], #8
0xffff8bda987c   252  stur x5, [x1, #-1]
0xffff8bda9880   256  tbz w5, #0, #+0x34 (addr 0xffff8bda98b4)
0xffff8bda9884   260  sub x2, x1, #0x1 (1)
0xffff8bda9888   264  and x5, x5, #0xfffffffffff00000
0xffff8bda988c   268  ldr x5, [x5, #8]
0xffff8bda9890   272  tbz w5, #1, #+0x24 (addr 0xffff8bda98b4)
0xffff8bda9894   276  and x5, x1, #0xfffffffffff00000
0xffff8bda9898   280  ldr x5, [x5, #8]
0xffff8bda989c   284  tbz w5, #2, #+0x18 (addr 0xffff8bda98b4)
0xffff8bda98a0   288  sub csp, jssp, #0x8 (8)
0xffff8bda98a4   292  str lr, [jssp, #-8]!
0xffff8bda98a8   296  ldr x16, pc+160 (addr 0x0000ffff8bda9948)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bda98ac   300  blr x16
0xffff8bda98b0   304  ldr lr, [jssp], #8
0xffff8bda98b4   308  ret
0xffff8bda98b8   312  sub csp, jssp, #0x10 (16)
0xffff8bda98bc   316  stp fp, lr, [jssp, #-16]!
0xffff8bda98c0   320  movz fp, #0xa00000000
0xffff8bda98c4   324  sub csp, jssp, #0x8 (8)
0xffff8bda98c8   328  str fp, [jssp, #-8]!
0xffff8bda98cc   332  add fp, jssp, #0x8 (8)
0xffff8bda98d0   336  movz x13, #0x0
0xffff8bda98d4   340  mov x16, lr
0xffff8bda98d8   344  ldr x17, pc+120 (addr 0x0000ffff8bda9950)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bda98dc   348  blr x17
0xffff8bda98e0   352  lsl x0, x10, #32
0xffff8bda98e4   356  movz x10, #0x0
0xffff8bda98e8   360  sub csp, jssp, #0x10 (16)
0xffff8bda98ec   364  stp x10, x0, [jssp, #-16]!
0xffff8bda98f0   368  movz x0, #0x2
0xffff8bda98f4   372  movz x1, #0x5b88
0xffff8bda98f8   376  movk x1, #0xe2, lsl #16
0xffff8bda98fc   380  ldr x16, pc+92 (addr 0x0000ffff8bda9958)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bda9900   384  blr x16
0xffff8bda9904   388  str x0, [jssp, #104]
0xffff8bda9908   392  ldr x16, pc+88 (addr 0x0000ffff8bda9960)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bda990c   396  blr x16
0xffff8bda9910   400  ldr lr, [jssp, #16]
0xffff8bda9914   404  ldp xzr, fp, [jssp], #24
0xffff8bda9918   408  b #-0x14c (addr 0xffff8bda97cc)
0xffff8bda991c   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff8bda9920   416  d63f03e0       constant
0xffff8bda9924   420  d503201f       constant
0xffff8bda9928   424  5f504259       constant
0xffff8bda992c   428  00000000       constant
0xffff8bda9930   432  26c04241       constant
0xffff8bda9934   436  00000000       constant
0xffff8bda9938   440  8bd370c0       constant
0xffff8bda993c   444  0000ffff       constant
0xffff8bda9940   448  8bd378a0       constant
0xffff8bda9944   452  0000ffff       constant
0xffff8bda9948   456  8bd38080       constant
0xffff8bda994c   460  0000ffff       constant
0xffff8bda9950   464  8bd06820       constant
0xffff8bda9954   468  0000ffff       constant
0xffff8bda9958   472  8bd06260       constant
0xffff8bda995c   476  0000ffff       constant
0xffff8bda9960   480  8bd068e0       constant
0xffff8bda9964   484  0000ffff       constant
0xffff8bda9968   488  movz x16, #0x0
0xffff8bda996c   492  sub csp, jssp, #0x10 (16)
0xffff8bda9970   496  stp fp, lr, [jssp, #-16]!
0xffff8bda9974   500  bl #+0x24 (addr 0xffff8bda9998)
0xffff8bda9978   504  movz x16, #0x8
0xffff8bda997c   508  sub csp, jssp, #0x10 (16)
0xffff8bda9980   512  stp fp, lr, [jssp, #-16]!
0xffff8bda9984   516  bl #+0x14 (addr 0xffff8bda9998)
0xffff8bda9988   520  movz x16, #0x10
0xffff8bda998c   524  sub csp, jssp, #0x10 (16)
0xffff8bda9990   528  stp fp, lr, [jssp, #-16]!
0xffff8bda9994   532  bl #+0x4 (addr 0xffff8bda9998)
0xffff8bda9998   536  movz x17, #0xa00000000
0xffff8bda999c   540  sub csp, jssp, #0x10 (16)
0xffff8bda99a0   544  stp x17, cp, [jssp, #-16]!
0xffff8bda99a4   548  add fp, jssp, #0x10 (16)
0xffff8bda99a8   552  ldr x17, pc+24 (addr 0x0000ffff8bda99c0)    ;; lazy deoptimization bailout 0
0xffff8bda99ac   556  add x17, x17, x16
0xffff8bda99b0   560  br x17
0xffff8bda99b4   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bda99b8   568  d63f03e0       constant
0xffff8bda99bc   572  d503201f       constant
0xffff8bda99c0   576  8bb06000       constant
0xffff8bda99c4   580  0000ffff       constant


Safepoints (size = 21)
0xffff8bda9904   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bda97cc  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bda97e4  embedded object  (0x26c04241 <undefined>)
0xffff8bda9830  code target (STUB)  (0xffff8bd370c0)
0xffff8bda9870  code target (STUB)  (0xffff8bd378a0)
0xffff8bda98a8  code target (STUB)  (0xffff8bd38080)
0xffff8bda98d8  code target (STUB)  (0xffff8bd06820)
0xffff8bda98fc  code target (STUB)  (0xffff8bd06260)
0xffff8bda9908  code target (STUB)  (0xffff8bd068e0)
0xffff8bda991c  constant pool (size 76)
0xffff8bda99a8  runtime entry
0xffff8bda99b4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff8bda9780     0  ldur x6, [x1, #7]
0xffff8bda9784     4  ldur w7, [x6, #11]
0xffff8bda9788     8  adds w8, w7, #0x3 (3)
0xffff8bda978c    12  b.vs #+0x1dc (addr 0xffff8bda9968)
0xffff8bda9790    16  movz w16, #0x95ff
0xffff8bda9794    20  cmp w8, w16, lsl #1
0xffff8bda9798    24  b.hs #+0x1e0 (addr 0xffff8bda9978)
0xffff8bda979c    28  lsl x9, x8, #32
0xffff8bda97a0    32  lsl w10, w8, #3
0xffff8bda97a4    36  add w10, w10, #0x10 (16)
0xffff8bda97a8    40  sxtw x10, w10
0xffff8bda97ac    44  movz x11, #0xe2c0
0xffff8bda97b0    48  movk x11, #0x2cb8, lsl #16
0xffff8bda97b4    52  ldp x13, x16, [x11]
0xffff8bda97b8    56  adds x12, x13, x10
0xffff8bda97bc    60  ccmp x12, x16, #nzCv, lo
0xffff8bda97c0    64  b.hi #+0xf8 (addr 0xffff8bda98b8)
0xffff8bda97c4    68  str x12, [x11]
0xffff8bda97c8    72  orr x13, x13, #0x1
0xffff8bda97cc    76  ldr x10, pc+348 (addr 0x0000ffff8bda9928)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bda97d0    80  stur x10, [x13, #-1]
0xffff8bda97d4    84  stur x9, [x13, #7]
0xffff8bda97d8    88  cmp w7, w8
0xffff8bda97dc    92  b.ge #+0x18 (addr 0xffff8bda97f4)
0xffff8bda97e0    96  sub w8, w8, #0x1 (1)
0xffff8bda97e4   100  ldr x9, pc+332 (addr 0x0000ffff8bda9930)    ;; object: 0x26c04241 <undefined>
0xffff8bda97e8   104  add x10, x13, #0xf (15)
0xffff8bda97ec   108  str x9, [x10, w8, sxtw #3]
0xffff8bda97f0   112  b #-0x18 (addr 0xffff8bda97d8)
0xffff8bda97f4   116  cmp w7, #0x0 (0)
0xffff8bda97f8   120  b.le #+0x1c (addr 0xffff8bda9814)
0xffff8bda97fc   124  sub w7, w7, #0x1 (1)
0xffff8bda9800   128  add x8, x6, #0xf (15)
0xffff8bda9804   132  ldr x9, [x8, w7, sxtw #3]
0xffff8bda9808   136  add x8, x13, #0xf (15)
0xffff8bda980c   140  str x9, [x8, w7, sxtw #3]
0xffff8bda9810   144  b #-0x1c (addr 0xffff8bda97f4)
0xffff8bda9814   148  stur x13, [x1, #7]
0xffff8bda9818   152  add x6, x1, #0x7 (7)
0xffff8bda981c   156  and x13, x1, #0xfffffffffff00000
0xffff8bda9820   160  ldr x13, [x13, #8]
0xffff8bda9824   164  tbz w13, #2, #+0x18 (addr 0xffff8bda983c)
0xffff8bda9828   168  sub csp, jssp, #0x8 (8)
0xffff8bda982c   172  str lr, [jssp, #-8]!
0xffff8bda9830   176  ldr x16, pc+264 (addr 0x0000ffff8bda9938)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff8bda9834   180  blr x16
0xffff8bda9838   184  ldr lr, [jssp], #8
0xffff8bda983c   188  tbz w0, #0, #+0x14c (addr 0xffff8bda9988)
0xffff8bda9840   192  mov x2, x0
0xffff8bda9844   196  ldur x4, [x1, #7]
0xffff8bda9848   200  stur x2, [x4, #63]
0xffff8bda984c   204  add x3, x4, #0x3f (63)
0xffff8bda9850   208  and x2, x2, #0xfffffffffff00000
0xffff8bda9854   212  ldr x2, [x2, #8]
0xffff8bda9858   216  tbz w2, #1, #+0x24 (addr 0xffff8bda987c)
0xffff8bda985c   220  and x2, x4, #0xfffffffffff00000
0xffff8bda9860   224  ldr x2, [x2, #8]
0xffff8bda9864   228  tbz w2, #2, #+0x18 (addr 0xffff8bda987c)
0xffff8bda9868   232  sub csp, jssp, #0x8 (8)
0xffff8bda986c   236  str lr, [jssp, #-8]!
0xffff8bda9870   240  ldr x16, pc+208 (addr 0x0000ffff8bda9940)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bda9874   244  blr x16
0xffff8bda9878   248  ldr lr, [jssp], #8
0xffff8bda987c   252  stur x5, [x1, #-1]
0xffff8bda9880   256  tbz w5, #0, #+0x34 (addr 0xffff8bda98b4)
0xffff8bda9884   260  sub x2, x1, #0x1 (1)
0xffff8bda9888   264  and x5, x5, #0xfffffffffff00000
0xffff8bda988c   268  ldr x5, [x5, #8]
0xffff8bda9890   272  tbz w5, #1, #+0x24 (addr 0xffff8bda98b4)
0xffff8bda9894   276  and x5, x1, #0xfffffffffff00000
0xffff8bda9898   280  ldr x5, [x5, #8]
0xffff8bda989c   284  tbz w5, #2, #+0x18 (addr 0xffff8bda98b4)
0xffff8bda98a0   288  sub csp, jssp, #0x8 (8)
0xffff8bda98a4   292  str lr, [jssp, #-8]!
0xffff8bda98a8   296  ldr x16, pc+160 (addr 0x0000ffff8bda9948)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bda98ac   300  blr x16
0xffff8bda98b0   304  ldr lr, [jssp], #8
0xffff8bda98b4   308  ret
0xffff8bda98b8   312  sub csp, jssp, #0x10 (16)
0xffff8bda98bc   316  stp fp, lr, [jssp, #-16]!
0xffff8bda98c0   320  movz fp, #0xa00000000
0xffff8bda98c4   324  sub csp, jssp, #0x8 (8)
0xffff8bda98c8   328  str fp, [jssp, #-8]!
0xffff8bda98cc   332  add fp, jssp, #0x8 (8)
0xffff8bda98d0   336  movz x13, #0x0
0xffff8bda98d4   340  mov x16, lr
0xffff8bda98d8   344  ldr x17, pc+120 (addr 0x0000ffff8bda9950)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bda98dc   348  blr x17
0xffff8bda98e0   352  lsl x0, x10, #32
0xffff8bda98e4   356  movz x10, #0x0
0xffff8bda98e8   360  sub csp, jssp, #0x10 (16)
0xffff8bda98ec   364  stp x10, x0, [jssp, #-16]!
0xffff8bda98f0   368  movz x0, #0x2
0xffff8bda98f4   372  movz x1, #0x5b88
0xffff8bda98f8   376  movk x1, #0xe2, lsl #16
0xffff8bda98fc   380  ldr x16, pc+92 (addr 0x0000ffff8bda9958)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bda9900   384  blr x16
0xffff8bda9904   388  str x0, [jssp, #104]
0xffff8bda9908   392  ldr x16, pc+88 (addr 0x0000ffff8bda9960)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bda990c   396  blr x16
0xffff8bda9910   400  ldr lr, [jssp, #16]
0xffff8bda9914   404  ldp xzr, fp, [jssp], #24
0xffff8bda9918   408  b #-0x14c (addr 0xffff8bda97cc)
0xffff8bda991c   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff8bda9920   416  d63f03e0       constant
0xffff8bda9924   420  d503201f       constant
0xffff8bda9928   424  5f504259       constant
0xffff8bda992c   428  00000000       constant
0xffff8bda9930   432  26c04241       constant
0xffff8bda9934   436  00000000       constant
0xffff8bda9938   440  8bd370c0       constant
0xffff8bda993c   444  0000ffff       constant
0xffff8bda9940   448  8bd378a0       constant
0xffff8bda9944   452  0000ffff       constant
0xffff8bda9948   456  8bd38080       constant
0xffff8bda994c   460  0000ffff       constant
0xffff8bda9950   464  8bd06820       constant
0xffff8bda9954   468  0000ffff       constant
0xffff8bda9958   472  8bd06260       constant
0xffff8bda995c   476  0000ffff       constant
0xffff8bda9960   480  8bd068e0       constant
0xffff8bda9964   484  0000ffff       constant
0xffff8bda9968   488  movz x16, #0x0
0xffff8bda996c   492  sub csp, jssp, #0x10 (16)
0xffff8bda9970   496  stp fp, lr, [jssp, #-16]!
0xffff8bda9974   500  bl #+0x24 (addr 0xffff8bda9998)
0xffff8bda9978   504  movz x16, #0x8
0xffff8bda997c   508  sub csp, jssp, #0x10 (16)
0xffff8bda9980   512  stp fp, lr, [jssp, #-16]!
0xffff8bda9984   516  bl #+0x14 (addr 0xffff8bda9998)
0xffff8bda9988   520  movz x16, #0x10
0xffff8bda998c   524  sub csp, jssp, #0x10 (16)
0xffff8bda9990   528  stp fp, lr, [jssp, #-16]!
0xffff8bda9994   532  bl #+0x4 (addr 0xffff8bda9998)
0xffff8bda9998   536  movz x17, #0xa00000000
0xffff8bda999c   540  sub csp, jssp, #0x10 (16)
0xffff8bda99a0   544  stp x17, cp, [jssp, #-16]!
0xffff8bda99a4   548  add fp, jssp, #0x10 (16)
0xffff8bda99a8   552  ldr x17, pc+24 (addr 0x0000ffff8bda99c0)    ;; lazy deoptimization bailout 0
0xffff8bda99ac   556  add x17, x17, x16
0xffff8bda99b0   560  br x17
0xffff8bda99b4   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bda99b8   568  d63f03e0       constant
0xffff8bda99bc   572  d503201f       constant
0xffff8bda99c0   576  8bb06000       constant
0xffff8bda99c4   580  0000ffff       constant


Safepoints (size = 21)
0xffff8bda9904   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bda97cc  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bda97e4  embedded object  (0x26c04241 <undefined>)
0xffff8bda9830  code target (STUB)  (0xffff8bd370c0)
0xffff8bda9870  code target (STUB)  (0xffff8bd378a0)
0xffff8bda98a8  code target (STUB)  (0xffff8bd38080)
0xffff8bda98d8  code target (STUB)  (0xffff8bd06820)
0xffff8bda98fc  code target (STUB)  (0xffff8bd06260)
0xffff8bda9908  code target (STUB)  (0xffff8bd068e0)
0xffff8bda991c  constant pool (size 76)
0xffff8bda99a8  runtime entry
0xffff8bda99b4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/process/promises
compiler = unknown
Instructions (size = 184)
0xffff8bda9a40     0  sub csp, jssp, #0x8 (8)
0xffff8bda9a44     4  str x3, [jssp, #-8]!
0xffff8bda9a48     8  sub csp, jssp, #0x8 (8)
0xffff8bda9a4c    12  str x4, [jssp, #-8]!
0xffff8bda9a50    16  ldr x3, pc+112 (addr 0x0000ffff8bda9ac0)    ;; object: 0x26c63e59 Cell for 0
0xffff8bda9a54    20  ldur x3, [x3, #7]
0xffff8bda9a58    24  cmp x3, #0x0 (0)
0xffff8bda9a5c    28  b.ne #+0x44 (addr 0xffff8bda9aa0)
0xffff8bda9a60    32  tbz w0, #0, #+0x40 (addr 0xffff8bda9aa0)
0xffff8bda9a64    36  ldur x3, [x0, #-1]
0xffff8bda9a68    40  ldr x4, pc+96 (addr 0x0000ffff8bda9ac8)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bda9a6c    44  ldur x4, [x4, #7]
0xffff8bda9a70    48  cmp x3, x4
0xffff8bda9a74    52  b.ne #+0x2c (addr 0xffff8bda9aa0)
0xffff8bda9a78    56  ldr x5, pc+88 (addr 0x0000ffff8bda9ad0)    ;; object: 0x26cf78b1 WeakCell for 0x5f527c49 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bda9a7c    60  ldur x5, [x5, #7]
0xffff8bda9a80    64  tbz w5, #0, #+0x20 (addr 0xffff8bda9aa0)
0xffff8bda9a84    68  ldursw x4, [x5, #15]
0xffff8bda9a88    72  tbnz w4, #23, #+0x18 (addr 0xffff8bda9aa0)
0xffff8bda9a8c    76  ldr x4, [jssp], #8
0xffff8bda9a90    80  ldr x3, [jssp], #8
0xffff8bda9a94    84  ldr x2, pc+68 (addr 0x0000ffff8bda9ad8)    ;; object: 0x26cbe351 <String[25]: internal/process/promises>
0xffff8bda9a98    88  ldr x16, pc+72 (addr 0x0000ffff8bda9ae0)    ;; code: HANDLER, StoreTransitionStub, minor: 327688
0xffff8bda9a9c    92  br x16
0xffff8bda9aa0    96  ldr x2, pc+72 (addr 0x0000ffff8bda9ae8)    ;; object: 0x26cbe351 <String[25]: internal/process/promises>
0xffff8bda9aa4   100  ldr x4, [jssp], #8
0xffff8bda9aa8   104  ldr x3, [jssp], #8
0xffff8bda9aac   108  ldr x16, pc+68 (addr 0x0000ffff8bda9af0)    ;; code: BUILTIN
0xffff8bda9ab0   112  br x16
0xffff8bda9ab4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bda9ab8   120  d63f03e0       constant
0xffff8bda9abc   124  d503201f       constant
0xffff8bda9ac0   128  26c63e59       constant
0xffff8bda9ac4   132  00000000       constant
0xffff8bda9ac8   136  26cc22b1       constant
0xffff8bda9acc   140  00000000       constant
0xffff8bda9ad0   144  26cf78b1       constant
0xffff8bda9ad4   148  00000000       constant
0xffff8bda9ad8   152  26cbe351       constant
0xffff8bda9adc   156  00000000       constant
0xffff8bda9ae0   160  8bda9780       constant
0xffff8bda9ae4   164  0000ffff       constant
0xffff8bda9ae8   168  26cbe351       constant
0xffff8bda9aec   172  00000000       constant
0xffff8bda9af0   176  8bd22420       constant
0xffff8bda9af4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bda9a50  embedded object  (0x26c63e59 Cell for 0)
0xffff8bda9a68  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bda9a78  embedded object  (0x26cf78b1 WeakCell for 0x5f527c49 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bda9a94  embedded object  (0x26cbe351 <String[25]: internal/process/promises>)
0xffff8bda9a98  code target (HANDLER)  (0xffff8bda9780)
0xffff8bda9aa0  embedded object  (0x26cbe351 <String[25]: internal/process/promises>)
0xffff8bda9aac  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bda9ab4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = WeakMap
compiler = unknown
Instructions (size = 120)
0xffff8bdaa120     0  sub csp, jssp, #0x8 (8)
0xffff8bdaa124     4  str x3, [jssp, #-8]!
0xffff8bdaa128     8  sub csp, jssp, #0x8 (8)
0xffff8bdaa12c    12  str x0, [jssp, #-8]!
0xffff8bdaa130    16  ldr x0, pc+80 (addr 0x0000ffff8bdaa180)    ;; object: 0x26cc5d51 Cell for 0
0xffff8bdaa134    20  ldur x0, [x0, #7]
0xffff8bdaa138    24  cmp x0, #0x0 (0)
0xffff8bdaa13c    28  b.ne #+0x2c (addr 0xffff8bdaa168)
0xffff8bdaa140    32  ldr x0, pc+72 (addr 0x0000ffff8bdaa188)    ;; object: 0x26cf8569 WeakCell for 0x26c491f9 PropertyCell for 0x26c49191 <JS Function WeakMap (SharedFunctionInfo 0x26c490e9)>
0xffff8bdaa144    36  ldur x0, [x0, #7]
0xffff8bdaa148    40  tbz w0, #0, #+0x20 (addr 0xffff8bdaa168)
0xffff8bdaa14c    44  ldur x0, [x0, #15]
0xffff8bdaa150    48  ldr x16, [x26, #88]
0xffff8bdaa154    52  cmp x0, x16
0xffff8bdaa158    56  b.eq #+0x10 (addr 0xffff8bdaa168)
0xffff8bdaa15c    60  add jssp, jssp, #0x10 (16)
0xffff8bdaa160    64  ret
0xffff8bdaa164    68  b #+0x14 (addr 0xffff8bdaa178)
0xffff8bdaa168    72  ldr x0, [jssp], #8
0xffff8bdaa16c    76  ldr x3, [jssp], #8
0xffff8bdaa170    80  ldr x16, pc+32 (addr 0x0000ffff8bdaa190)    ;; code: BUILTIN
0xffff8bdaa174    84  br x16
0xffff8bdaa178    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bdaa17c    92  d63f03e0       constant
0xffff8bdaa180    96  26cc5d51       constant
0xffff8bdaa184   100  00000000       constant
0xffff8bdaa188   104  26cf8569       constant
0xffff8bdaa18c   108  00000000       constant
0xffff8bdaa190   112  8bd222e0       constant
0xffff8bdaa194   116  0000ffff       constant


RelocInfo (size = 9)
0xffff8bdaa130  embedded object  (0x26cc5d51 Cell for 0)
0xffff8bdaa140  embedded object  (0x26cf8569 WeakCell for 0x26c491f9 PropertyCell for 0x26c49191 <JS Function WeakMap (SharedFunctionInfo 0x26c490e9)>)
0xffff8bdaa170  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdaa178  constant pool (size 32)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bdaa500     0  tbz w0, #0, #+0x98 (addr 0xffff8bdaa598)
0xffff8bdaa504     4  mov x2, x0
0xffff8bdaa508     8  ldur x4, [x1, #7]
0xffff8bdaa50c    12  stur x2, [x4, #71]
0xffff8bdaa510    16  add x3, x4, #0x47 (71)
0xffff8bdaa514    20  and x2, x2, #0xfffffffffff00000
0xffff8bdaa518    24  ldr x2, [x2, #8]
0xffff8bdaa51c    28  tbz w2, #1, #+0x24 (addr 0xffff8bdaa540)
0xffff8bdaa520    32  and x2, x4, #0xfffffffffff00000
0xffff8bdaa524    36  ldr x2, [x2, #8]
0xffff8bdaa528    40  tbz w2, #2, #+0x18 (addr 0xffff8bdaa540)
0xffff8bdaa52c    44  sub csp, jssp, #0x8 (8)
0xffff8bdaa530    48  str lr, [jssp, #-8]!
0xffff8bdaa534    52  ldr x16, pc+84 (addr 0x0000ffff8bdaa588)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdaa538    56  blr x16
0xffff8bdaa53c    60  ldr lr, [jssp], #8
0xffff8bdaa540    64  stur x5, [x1, #-1]
0xffff8bdaa544    68  tbz w5, #0, #+0x34 (addr 0xffff8bdaa578)
0xffff8bdaa548    72  sub x2, x1, #0x1 (1)
0xffff8bdaa54c    76  and x5, x5, #0xfffffffffff00000
0xffff8bdaa550    80  ldr x5, [x5, #8]
0xffff8bdaa554    84  tbz w5, #1, #+0x24 (addr 0xffff8bdaa578)
0xffff8bdaa558    88  and x5, x1, #0xfffffffffff00000
0xffff8bdaa55c    92  ldr x5, [x5, #8]
0xffff8bdaa560    96  tbz w5, #2, #+0x18 (addr 0xffff8bdaa578)
0xffff8bdaa564   100  sub csp, jssp, #0x8 (8)
0xffff8bdaa568   104  str lr, [jssp, #-8]!
0xffff8bdaa56c   108  ldr x16, pc+36 (addr 0x0000ffff8bdaa590)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdaa570   112  blr x16
0xffff8bdaa574   116  ldr lr, [jssp], #8
0xffff8bdaa578   120  ret
0xffff8bdaa57c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bdaa580   128  d63f03e0       constant
0xffff8bdaa584   132  d503201f       constant
0xffff8bdaa588   136  8bd378a0       constant
0xffff8bdaa58c   140  0000ffff       constant
0xffff8bdaa590   144  8bd38080       constant
0xffff8bdaa594   148  0000ffff       constant
0xffff8bdaa598   152  movz x16, #0x0
0xffff8bdaa59c   156  sub csp, jssp, #0x10 (16)
0xffff8bdaa5a0   160  stp fp, lr, [jssp, #-16]!
0xffff8bdaa5a4   164  bl #+0x4 (addr 0xffff8bdaa5a8)
0xffff8bdaa5a8   168  movz x17, #0xa00000000
0xffff8bdaa5ac   172  sub csp, jssp, #0x10 (16)
0xffff8bdaa5b0   176  stp x17, cp, [jssp, #-16]!
0xffff8bdaa5b4   180  add fp, jssp, #0x10 (16)
0xffff8bdaa5b8   184  ldr x17, pc+24 (addr 0x0000ffff8bdaa5d0)    ;; lazy deoptimization bailout 0
0xffff8bdaa5bc   188  add x17, x17, x16
0xffff8bdaa5c0   192  br x17
0xffff8bdaa5c4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdaa5c8   200  d63f03e0       constant
0xffff8bdaa5cc   204  d503201f       constant
0xffff8bdaa5d0   208  8bb06000       constant
0xffff8bdaa5d4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdaa534  code target (STUB)  (0xffff8bd378a0)
0xffff8bdaa56c  code target (STUB)  (0xffff8bd38080)
0xffff8bdaa57c  constant pool (size 28)
0xffff8bdaa5b8  runtime entry
0xffff8bdaa5c4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bdaa500     0  tbz w0, #0, #+0x98 (addr 0xffff8bdaa598)
0xffff8bdaa504     4  mov x2, x0
0xffff8bdaa508     8  ldur x4, [x1, #7]
0xffff8bdaa50c    12  stur x2, [x4, #71]
0xffff8bdaa510    16  add x3, x4, #0x47 (71)
0xffff8bdaa514    20  and x2, x2, #0xfffffffffff00000
0xffff8bdaa518    24  ldr x2, [x2, #8]
0xffff8bdaa51c    28  tbz w2, #1, #+0x24 (addr 0xffff8bdaa540)
0xffff8bdaa520    32  and x2, x4, #0xfffffffffff00000
0xffff8bdaa524    36  ldr x2, [x2, #8]
0xffff8bdaa528    40  tbz w2, #2, #+0x18 (addr 0xffff8bdaa540)
0xffff8bdaa52c    44  sub csp, jssp, #0x8 (8)
0xffff8bdaa530    48  str lr, [jssp, #-8]!
0xffff8bdaa534    52  ldr x16, pc+84 (addr 0x0000ffff8bdaa588)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdaa538    56  blr x16
0xffff8bdaa53c    60  ldr lr, [jssp], #8
0xffff8bdaa540    64  stur x5, [x1, #-1]
0xffff8bdaa544    68  tbz w5, #0, #+0x34 (addr 0xffff8bdaa578)
0xffff8bdaa548    72  sub x2, x1, #0x1 (1)
0xffff8bdaa54c    76  and x5, x5, #0xfffffffffff00000
0xffff8bdaa550    80  ldr x5, [x5, #8]
0xffff8bdaa554    84  tbz w5, #1, #+0x24 (addr 0xffff8bdaa578)
0xffff8bdaa558    88  and x5, x1, #0xfffffffffff00000
0xffff8bdaa55c    92  ldr x5, [x5, #8]
0xffff8bdaa560    96  tbz w5, #2, #+0x18 (addr 0xffff8bdaa578)
0xffff8bdaa564   100  sub csp, jssp, #0x8 (8)
0xffff8bdaa568   104  str lr, [jssp, #-8]!
0xffff8bdaa56c   108  ldr x16, pc+36 (addr 0x0000ffff8bdaa590)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdaa570   112  blr x16
0xffff8bdaa574   116  ldr lr, [jssp], #8
0xffff8bdaa578   120  ret
0xffff8bdaa57c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bdaa580   128  d63f03e0       constant
0xffff8bdaa584   132  d503201f       constant
0xffff8bdaa588   136  8bd378a0       constant
0xffff8bdaa58c   140  0000ffff       constant
0xffff8bdaa590   144  8bd38080       constant
0xffff8bdaa594   148  0000ffff       constant
0xffff8bdaa598   152  movz x16, #0x0
0xffff8bdaa59c   156  sub csp, jssp, #0x10 (16)
0xffff8bdaa5a0   160  stp fp, lr, [jssp, #-16]!
0xffff8bdaa5a4   164  bl #+0x4 (addr 0xffff8bdaa5a8)
0xffff8bdaa5a8   168  movz x17, #0xa00000000
0xffff8bdaa5ac   172  sub csp, jssp, #0x10 (16)
0xffff8bdaa5b0   176  stp x17, cp, [jssp, #-16]!
0xffff8bdaa5b4   180  add fp, jssp, #0x10 (16)
0xffff8bdaa5b8   184  ldr x17, pc+24 (addr 0x0000ffff8bdaa5d0)    ;; lazy deoptimization bailout 0
0xffff8bdaa5bc   188  add x17, x17, x16
0xffff8bdaa5c0   192  br x17
0xffff8bdaa5c4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdaa5c8   200  d63f03e0       constant
0xffff8bdaa5cc   204  d503201f       constant
0xffff8bdaa5d0   208  8bb06000       constant
0xffff8bdaa5d4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdaa534  code target (STUB)  (0xffff8bd378a0)
0xffff8bdaa56c  code target (STUB)  (0xffff8bd38080)
0xffff8bdaa57c  constant pool (size 28)
0xffff8bdaa5b8  runtime entry
0xffff8bdaa5c4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/process/stdio
compiler = unknown
Instructions (size = 184)
0xffff8bdaa640     0  sub csp, jssp, #0x8 (8)
0xffff8bdaa644     4  str x3, [jssp, #-8]!
0xffff8bdaa648     8  sub csp, jssp, #0x8 (8)
0xffff8bdaa64c    12  str x4, [jssp, #-8]!
0xffff8bdaa650    16  ldr x3, pc+112 (addr 0x0000ffff8bdaa6c0)    ;; object: 0x26c63e59 Cell for 0
0xffff8bdaa654    20  ldur x3, [x3, #7]
0xffff8bdaa658    24  cmp x3, #0x0 (0)
0xffff8bdaa65c    28  b.ne #+0x44 (addr 0xffff8bdaa6a0)
0xffff8bdaa660    32  tbz w0, #0, #+0x40 (addr 0xffff8bdaa6a0)
0xffff8bdaa664    36  ldur x3, [x0, #-1]
0xffff8bdaa668    40  ldr x4, pc+96 (addr 0x0000ffff8bdaa6c8)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdaa66c    44  ldur x4, [x4, #7]
0xffff8bdaa670    48  cmp x3, x4
0xffff8bdaa674    52  b.ne #+0x2c (addr 0xffff8bdaa6a0)
0xffff8bdaa678    56  ldr x5, pc+88 (addr 0x0000ffff8bdaa6d0)    ;; object: 0x26cf8dd1 WeakCell for 0x5f527da9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdaa67c    60  ldur x5, [x5, #7]
0xffff8bdaa680    64  tbz w5, #0, #+0x20 (addr 0xffff8bdaa6a0)
0xffff8bdaa684    68  ldursw x4, [x5, #15]
0xffff8bdaa688    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdaa6a0)
0xffff8bdaa68c    76  ldr x4, [jssp], #8
0xffff8bdaa690    80  ldr x3, [jssp], #8
0xffff8bdaa694    84  ldr x2, pc+68 (addr 0x0000ffff8bdaa6d8)    ;; object: 0x26cb97b9 <String[22]: internal/process/stdio>
0xffff8bdaa698    88  ldr x16, pc+72 (addr 0x0000ffff8bdaa6e0)    ;; code: HANDLER, StoreTransitionStub, minor: 196617
0xffff8bdaa69c    92  br x16
0xffff8bdaa6a0    96  ldr x2, pc+72 (addr 0x0000ffff8bdaa6e8)    ;; object: 0x26cb97b9 <String[22]: internal/process/stdio>
0xffff8bdaa6a4   100  ldr x4, [jssp], #8
0xffff8bdaa6a8   104  ldr x3, [jssp], #8
0xffff8bdaa6ac   108  ldr x16, pc+68 (addr 0x0000ffff8bdaa6f0)    ;; code: BUILTIN
0xffff8bdaa6b0   112  br x16
0xffff8bdaa6b4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdaa6b8   120  d63f03e0       constant
0xffff8bdaa6bc   124  d503201f       constant
0xffff8bdaa6c0   128  26c63e59       constant
0xffff8bdaa6c4   132  00000000       constant
0xffff8bdaa6c8   136  26cc22b1       constant
0xffff8bdaa6cc   140  00000000       constant
0xffff8bdaa6d0   144  26cf8dd1       constant
0xffff8bdaa6d4   148  00000000       constant
0xffff8bdaa6d8   152  26cb97b9       constant
0xffff8bdaa6dc   156  00000000       constant
0xffff8bdaa6e0   160  8bdaa500       constant
0xffff8bdaa6e4   164  0000ffff       constant
0xffff8bdaa6e8   168  26cb97b9       constant
0xffff8bdaa6ec   172  00000000       constant
0xffff8bdaa6f0   176  8bd22420       constant
0xffff8bdaa6f4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdaa650  embedded object  (0x26c63e59 Cell for 0)
0xffff8bdaa668  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdaa678  embedded object  (0x26cf8dd1 WeakCell for 0x5f527da9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdaa694  embedded object  (0x26cb97b9 <String[22]: internal/process/stdio>)
0xffff8bdaa698  code target (HANDLER)  (0xffff8bdaa500)
0xffff8bdaa6a0  embedded object  (0x26cb97b9 <String[22]: internal/process/stdio>)
0xffff8bdaa6ac  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdaa6b4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = newListener
compiler = unknown
Instructions (size = 144)
0xffff8bdab640     0  sub csp, jssp, #0x8 (8)
0xffff8bdab644     4  str x3, [jssp, #-8]!
0xffff8bdab648     8  sub csp, jssp, #0x8 (8)
0xffff8bdab64c    12  str x4, [jssp, #-8]!
0xffff8bdab650    16  ldr x5, pc+88 (addr 0x0000ffff8bdab6a8)    ;; object: 0x26cfabf9 WeakCell for 0x5f527e01 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdab654    20  ldur x5, [x5, #7]
0xffff8bdab658    24  tbz w5, #0, #+0x30 (addr 0xffff8bdab688)
0xffff8bdab65c    28  ldursw x4, [x5, #15]
0xffff8bdab660    32  tbnz w4, #23, #+0x28 (addr 0xffff8bdab688)
0xffff8bdab664    36  ldur x4, [x5, #47]
0xffff8bdab668    40  ldur x4, [x4, #71]
0xffff8bdab66c    44  cmp x0, x4
0xffff8bdab670    48  b.ne #+0x18 (addr 0xffff8bdab688)
0xffff8bdab674    52  ldr x4, [jssp], #8
0xffff8bdab678    56  ldr x3, [jssp], #8
0xffff8bdab67c    60  ldr x2, pc+52 (addr 0x0000ffff8bdab6b0)    ;; object: 0x26cc3819 <String[11]: newListener>
0xffff8bdab680    64  ldr x16, pc+56 (addr 0x0000ffff8bdab6b8)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff8bdab684    68  br x16
0xffff8bdab688    72  ldr x2, pc+56 (addr 0x0000ffff8bdab6c0)    ;; object: 0x26cc3819 <String[11]: newListener>
0xffff8bdab68c    76  ldr x4, [jssp], #8
0xffff8bdab690    80  ldr x3, [jssp], #8
0xffff8bdab694    84  ldr x16, pc+52 (addr 0x0000ffff8bdab6c8)    ;; code: BUILTIN
0xffff8bdab698    88  br x16
0xffff8bdab69c    92  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff8bdab6a0    96  d63f03e0       constant
0xffff8bdab6a4   100  d503201f       constant
0xffff8bdab6a8   104  26cfabf9       constant
0xffff8bdab6ac   108  00000000       constant
0xffff8bdab6b0   112  26cc3819       constant
0xffff8bdab6b4   116  00000000       constant
0xffff8bdab6b8   120  8bd3cea0       constant
0xffff8bdab6bc   124  0000ffff       constant
0xffff8bdab6c0   128  26cc3819       constant
0xffff8bdab6c4   132  00000000       constant
0xffff8bdab6c8   136  8bd22420       constant
0xffff8bdab6cc   140  0000ffff       constant


RelocInfo (size = 11)
0xffff8bdab650  embedded object  (0x26cfabf9 WeakCell for 0x5f527e01 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdab67c  embedded object  (0x26cc3819 <String[11]: newListener>)
0xffff8bdab680  code target (HANDLER)  (0xffff8bd3cea0)
0xffff8bdab688  embedded object  (0x26cc3819 <String[11]: newListener>)
0xffff8bdab694  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdab69c  constant pool (size 52)

kind = STUB
major_key = FastNewStrictArgumentsStub
name = FastNewStrictArgumentsStub
compiler = unknown
Instructions (size = 336)
0xffff8bdab740     0  mov x2, fp
0xffff8bdab744     4  b #+0x8 (addr 0xffff8bdab74c)
0xffff8bdab748     8  ldr x2, [x2]
0xffff8bdab74c    12  ldur x3, [x2, #-16]
0xffff8bdab750    16  cmp x3, x1
0xffff8bdab754    20  b.ne #-0xc (addr 0xffff8bdab748)
0xffff8bdab758    24  ldr x3, [x2]
0xffff8bdab75c    28  ldur x4, [x3, #-8]
0xffff8bdab760    32  movz x16, #0xe00000000
0xffff8bdab764    36  cmp x4, x16
0xffff8bdab768    40  b.eq #+0x18 (addr 0xffff8bdab780)
0xffff8bdab76c    44  ldur x1, [x1, #31]
0xffff8bdab770    48  ldursw x0, [x1, #99]
0xffff8bdab774    52  add x2, x2, x0, lsl #3
0xffff8bdab778    56  add x2, x2, #0x8 (8)
0xffff8bdab77c    60  b #+0x10 (addr 0xffff8bdab78c)
0xffff8bdab780    64  ldursw x0, [x3, #-20]
0xffff8bdab784    68  add x2, x3, x0, lsl #3
0xffff8bdab788    72  add x2, x2, #0x8 (8)
0xffff8bdab78c    76  movz x1, #0x30
0xffff8bdab790    80  add x1, x1, x0, lsl #3
0xffff8bdab794    84  ldr x5, pc+220 (addr 0x0000ffff8bdab870)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff8bdab798    88  ldp x3, x16, [x5]
0xffff8bdab79c    92  adds x4, x3, x1
0xffff8bdab7a0    96  ccmp x4, x16, #nzCv, lo
0xffff8bdab7a4   100  b.hi #+0x64 (addr 0xffff8bdab808)
0xffff8bdab7a8   104  str x4, [x5]
0xffff8bdab7ac   108  orr x3, x3, #0x1
0xffff8bdab7b0   112  lsl x6, x0, #32
0xffff8bdab7b4   116  ldr x1, [x26, #224]
0xffff8bdab7b8   120  stur x1, [x3, #-1]
0xffff8bdab7bc   124  stur x6, [x3, #7]
0xffff8bdab7c0   128  add x4, x3, #0x10 (16)
0xffff8bdab7c4   132  add x0, x4, x0, lsl #3
0xffff8bdab7c8   136  cmp x4, x0
0xffff8bdab7cc   140  b.eq #+0x18 (addr 0xffff8bdab7e4)
0xffff8bdab7d0   144  ldr x5, [x2]
0xffff8bdab7d4   148  stur x5, [x4, #-1]
0xffff8bdab7d8   152  sub x2, x2, #0x8 (8)
0xffff8bdab7dc   156  add x4, x4, #0x8 (8)
0xffff8bdab7e0   160  b #-0x18 (addr 0xffff8bdab7c8)
0xffff8bdab7e4   164  ldur x1, [cp, #39]
0xffff8bdab7e8   168  movz x16, #0x2c7
0xffff8bdab7ec   172  ldr x1, [x1, x16]
0xffff8bdab7f0   176  stur x1, [x0, #-1]
0xffff8bdab7f4   180  ldr x1, [x26, #304]
0xffff8bdab7f8   184  stur x1, [x0, #7]
0xffff8bdab7fc   188  stur x3, [x0, #15]
0xffff8bdab800   192  stur x6, [x0, #23]
0xffff8bdab804   196  ret
0xffff8bdab808   200  movz x16, #0xc00000000
0xffff8bdab80c   204  sub csp, jssp, #0x10 (16)
0xffff8bdab810   208  stp fp, lr, [jssp, #-16]!
0xffff8bdab814   212  sub csp, jssp, #0x10 (16)
0xffff8bdab818   216  str x16, [jssp, #-8]!
0xffff8bdab81c   220  ldr x17, pc+92 (addr 0x0000ffff8bdab878)    ;; object: 0xffff8bdab6e1 <Code: STUB>
0xffff8bdab820   224  sub csp, jssp, #0x10 (16)
0xffff8bdab824   228  str x17, [jssp, #-8]!
0xffff8bdab828   232  add fp, jssp, #0x10 (16)
0xffff8bdab82c   236  lsl x0, x0, #32
0xffff8bdab830   240  lsl x1, x1, #32
0xffff8bdab834   244  sub csp, jssp, #0x18 (24)
0xffff8bdab838   248  stp x1, x2, [jssp, #-24]!
0xffff8bdab83c   252  str x0, [jssp, #16]
0xffff8bdab840   256  movz x0, #0x1
0xffff8bdab844   260  ldr x1, pc+60 (addr 0x0000ffff8bdab880)    ;; external reference (Runtime::AllocateInNewSpace)
0xffff8bdab848   264  ldr x16, pc+64 (addr 0x0000ffff8bdab888)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdab84c   268  blr x16
0xffff8bdab850   272  mov x3, x0
0xffff8bdab854   276  ldp x2, x0, [jssp], #16
0xffff8bdab858   280  asr x0, x0, #32
0xffff8bdab85c   284  mov jssp, fp
0xffff8bdab860   288  ldp fp, lr, [jssp], #16
0xffff8bdab864   292  b #-0xb4 (addr 0xffff8bdab7b0)
0xffff8bdab868   296  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdab86c   300  d63f03e0       constant
0xffff8bdab870   304  2cb8e2c0       constant
0xffff8bdab874   308  00000000       constant
0xffff8bdab878   312  8bdab6e1       constant
0xffff8bdab87c   316  0000ffff       constant
0xffff8bdab880   320  00e25898       constant
0xffff8bdab884   324  00000000       constant
0xffff8bdab888   328  8bd06060       constant
0xffff8bdab88c   332  0000ffff       constant


RelocInfo (size = 16)
0xffff8bdab794  external reference (Heap::NewSpaceAllocationTopAddress())  (0x2cb8e2c0)
0xffff8bdab81c  embedded object  (0xffff8bdab6e1 <Code: STUB>)
0xffff8bdab844  external reference (Runtime::AllocateInNewSpace)  (0xe25898)
0xffff8bdab848  code target (STUB)  (0xffff8bd06060)
0xffff8bdab868  constant pool (size 40)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393222
name = CallICStub(args(6), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff8bdab900     0  add x4, x2, x3, asr #29
0xffff8bdab904     4  ldur x4, [x4, #15]
0xffff8bdab908     8  ldur x5, [x4, #7]
0xffff8bdab90c    12  cmp x5, x1
0xffff8bdab910    16  b.ne #+0x2c (addr 0xffff8bdab93c)
0xffff8bdab914    20  tbz w1, #0, #+0x28 (addr 0xffff8bdab93c)
0xffff8bdab918    24  add x2, x2, x3, asr #29
0xffff8bdab91c    28  add x2, x2, #0x18 (24)
0xffff8bdab920    32  ldur x3, [x2, #-1]
0xffff8bdab924    36  movz x16, #0x200000000
0xffff8bdab928    40  add x3, x3, x16
0xffff8bdab92c    44  stur x3, [x2, #-1]
0xffff8bdab930    48  movz x0, #0x6
0xffff8bdab934    52  ldr x16, pc+372 (addr 0x0000ffff8bdabaa8)    ;; code: BUILTIN
0xffff8bdab938    56  br x16
0xffff8bdab93c    60  ldr x16, [x26, #2400]
0xffff8bdab940    64  cmp x4, x16
0xffff8bdab944    68  b.eq #+0x78 (addr 0xffff8bdab9bc)
0xffff8bdab948    72  ldur x5, [x4, #-1]
0xffff8bdab94c    76  ldr x16, [x26, #2736]
0xffff8bdab950    80  cmp x5, x16
0xffff8bdab954    84  b.ne #+0x40 (addr 0xffff8bdab994)
0xffff8bdab958    88  ldur x5, [cp, #39]
0xffff8bdab95c    92  ldur x5, [x5, #95]
0xffff8bdab960    96  cmp x1, x5
0xffff8bdab964   100  b.ne #+0xec (addr 0xffff8bdaba50)
0xffff8bdab968   104  movz x0, #0x6
0xffff8bdab96c   108  add x2, x2, x3, asr #29
0xffff8bdab970   112  add x2, x2, #0x18 (24)
0xffff8bdab974   116  ldur x3, [x2, #-1]
0xffff8bdab978   120  movz x16, #0x200000000
0xffff8bdab97c   124  add x3, x3, x16
0xffff8bdab980   128  stur x3, [x2, #-1]
0xffff8bdab984   132  mov x2, x4
0xffff8bdab988   136  mov x3, x1
0xffff8bdab98c   140  ldr x16, pc+292 (addr 0x0000ffff8bdabab0)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff8bdab990   144  br x16
0xffff8bdab994   148  ldr x16, [x26, #2568]
0xffff8bdab998   152  cmp x4, x16
0xffff8bdab99c   156  b.eq #+0xb4 (addr 0xffff8bdaba50)
0xffff8bdab9a0   160  ldur x5, [x4, #-1]
0xffff8bdab9a4   164  ldrb w5, [x5, #11]
0xffff8bdab9a8   168  cmp x5, #0xc9 (201)
0xffff8bdab9ac   172  b.ne #+0xa4 (addr 0xffff8bdaba50)
0xffff8bdab9b0   176  add x4, x2, x3, asr #29
0xffff8bdab9b4   180  ldr x5, [x26, #2400]
0xffff8bdab9b8   184  stur x5, [x4, #15]
0xffff8bdab9bc   188  movz x0, #0x6
0xffff8bdab9c0   192  ldr x16, pc+248 (addr 0x0000ffff8bdabab8)    ;; code: BUILTIN
0xffff8bdab9c4   196  br x16
0xffff8bdab9c8   200  tbz w1, #0, #+0x88 (addr 0xffff8bdaba50)
0xffff8bdab9cc   204  ldur x5, [x1, #-1]
0xffff8bdab9d0   208  ldrb w5, [x5, #11]
0xffff8bdab9d4   212  cmp x5, #0xc9 (201)
0xffff8bdab9d8   216  b.ne #+0x78 (addr 0xffff8bdaba50)
0xffff8bdab9dc   220  ldur x5, [cp, #39]
0xffff8bdab9e0   224  ldur x5, [x5, #95]
0xffff8bdab9e4   228  cmp x1, x5
0xffff8bdab9e8   232  b.eq #+0x68 (addr 0xffff8bdaba50)
0xffff8bdab9ec   236  ldur x4, [x1, #39]
0xffff8bdab9f0   240  ldur x4, [x4, #39]
0xffff8bdab9f4   244  ldur x5, [cp, #39]
0xffff8bdab9f8   248  cmp x4, x5
0xffff8bdab9fc   252  b.ne #+0x54 (addr 0xffff8bdaba50)
0xffff8bdaba00   256  movz x5, #0x200000000
0xffff8bdaba04   260  adds x4, x2, x3, asr #29
0xffff8bdaba08   264  stur x5, [x4, #23]
0xffff8bdaba0c   268  movz x16, #0xc00000000
0xffff8bdaba10   272  sub csp, jssp, #0x10 (16)
0xffff8bdaba14   276  stp fp, lr, [jssp, #-16]!
0xffff8bdaba18   280  sub csp, jssp, #0x10 (16)
0xffff8bdaba1c   284  str x16, [jssp, #-8]!
0xffff8bdaba20   288  ldr x17, pc+160 (addr 0x0000ffff8bdabac0)    ;; object: 0xffff8bdab8a1 <Code: CALL_IC>
0xffff8bdaba24   292  sub csp, jssp, #0x10 (16)
0xffff8bdaba28   296  str x17, [jssp, #-8]!
0xffff8bdaba2c   300  add fp, jssp, #0x10 (16)
0xffff8bdaba30   304  sub csp, jssp, #0x8 (8)
0xffff8bdaba34   308  str x1, [jssp, #-8]!
0xffff8bdaba38   312  ldr x16, pc+144 (addr 0x0000ffff8bdabac8)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bdaba3c   316  blr x16
0xffff8bdaba40   320  ldr x1, [jssp], #8
0xffff8bdaba44   324  mov jssp, fp
0xffff8bdaba48   328  ldp fp, lr, [jssp], #16
0xffff8bdaba4c   332  b #-0x11c (addr 0xffff8bdab930)
0xffff8bdaba50   336  movz x16, #0xc00000000
0xffff8bdaba54   340  sub csp, jssp, #0x10 (16)
0xffff8bdaba58   344  stp fp, lr, [jssp, #-16]!
0xffff8bdaba5c   348  sub csp, jssp, #0x10 (16)
0xffff8bdaba60   352  str x16, [jssp, #-8]!
0xffff8bdaba64   356  ldr x17, pc+108 (addr 0x0000ffff8bdabad0)    ;; object: 0xffff8bdab8a1 <Code: CALL_IC>
0xffff8bdaba68   360  sub csp, jssp, #0x10 (16)
0xffff8bdaba6c   364  str x17, [jssp, #-8]!
0xffff8bdaba70   368  add fp, jssp, #0x10 (16)
0xffff8bdaba74   372  sub csp, jssp, #0x18 (24)
0xffff8bdaba78   376  stp x3, x2, [jssp, #-24]!
0xffff8bdaba7c   380  str x1, [jssp, #16]
0xffff8bdaba80   384  movz x0, #0x3
0xffff8bdaba84   388  ldr x1, pc+84 (addr 0x0000ffff8bdabad8)    ;; external reference (Runtime::CallIC_Miss)
0xffff8bdaba88   392  ldr x16, pc+88 (addr 0x0000ffff8bdabae0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdaba8c   396  blr x16
0xffff8bdaba90   400  mov x1, x0
0xffff8bdaba94   404  mov jssp, fp
0xffff8bdaba98   408  ldp fp, lr, [jssp], #16
0xffff8bdaba9c   412  b #-0xe0 (addr 0xffff8bdab9bc)
0xffff8bdabaa0   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bdabaa4   420  d63f03e0       constant
0xffff8bdabaa8   424  8bd1e820       constant
0xffff8bdabaac   428  0000ffff       constant
0xffff8bdabab0   432  8bd33b00       constant
0xffff8bdabab4   436  0000ffff       constant
0xffff8bdabab8   440  8bd1f820       constant
0xffff8bdababc   444  0000ffff       constant
0xffff8bdabac0   448  8bdab8a1       constant
0xffff8bdabac4   452  0000ffff       constant
0xffff8bdabac8   456  8bd0ddc0       constant
0xffff8bdabacc   460  0000ffff       constant
0xffff8bdabad0   464  8bdab8a1       constant
0xffff8bdabad4   468  0000ffff       constant
0xffff8bdabad8   472  00c86928       constant
0xffff8bdabadc   476  00000000       constant
0xffff8bdabae0   480  8bd06060       constant
0xffff8bdabae4   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8bdab934  code target (BUILTIN)  (0xffff8bd1e820)
0xffff8bdab98c  code target (STUB)  (0xffff8bd33b00)
0xffff8bdab9c0  code target (BUILTIN)  (0xffff8bd1f820)
0xffff8bdaba20  embedded object  (0xffff8bdab8a1 <Code: CALL_IC>)
0xffff8bdaba38  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bdaba64  embedded object  (0xffff8bdab8a1 <Code: CALL_IC>)
0xffff8bdaba84  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8bdaba88  code target (STUB)  (0xffff8bd06060)
0xffff8bdabaa0  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393222
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8bdabb60     0  ldur x2, [fp, #-16]
0xffff8bdabb64     4  ldur x2, [x2, #31]
0xffff8bdabb68     8  ldur x2, [x2, #87]
0xffff8bdabb6c    12  ldr x16, pc+20 (addr 0x0000ffff8bdabb80)    ;; code: CALL_IC, GENERIC
0xffff8bdabb70    16  br x16
0xffff8bdabb74    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdabb78    24  d63f03e0       constant
0xffff8bdabb7c    28  d503201f       constant
0xffff8bdabb80    32  8bdab900       constant
0xffff8bdabb84    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8bdabb6c  code target (CALL_IC)  (0xffff8bdab900)
0xffff8bdabb74  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 168)
0xffff8bdacde0     0  ldur x4, [x1, #15]
0xffff8bdacde4     4  ldur w5, [x4, #11]
0xffff8bdacde8     8  tbnz w2, #0, #+0x20 (addr 0xffff8bdace08)
0xffff8bdacdec    12  asr x7, x2, #32
0xffff8bdacdf0    16  cmp w7, w5
0xffff8bdacdf4    20  b.hs #+0x3c (addr 0xffff8bdace30)
0xffff8bdacdf8    24  add x0, x4, #0xf (15)
0xffff8bdacdfc    28  ldr x1, [x0, w7, sxtw #3]
0xffff8bdace00    32  mov x0, x1
0xffff8bdace04    36  ret
0xffff8bdace08    40  ldur x16, [x2, #-1]
0xffff8bdace0c    44  ldr x17, [x26, #120]
0xffff8bdace10    48  cmp x16, x17
0xffff8bdace14    52  b.ne #+0x2c (addr 0xffff8bdace40)
0xffff8bdace18    56  ldur d29, [x2, #7]
0xffff8bdace1c    60  fcvtzs w7, d29
0xffff8bdace20    64  scvtf d0, w7
0xffff8bdace24    68  fcmp d29, d0
0xffff8bdace28    72  b.ne #+0x18 (addr 0xffff8bdace40)
0xffff8bdace2c    76  b #-0x3c (addr 0xffff8bdacdf0)
0xffff8bdace30    80  movz x16, #0x0
0xffff8bdace34    84  sub csp, jssp, #0x10 (16)
0xffff8bdace38    88  stp fp, lr, [jssp, #-16]!
0xffff8bdace3c    92  bl #+0x14 (addr 0xffff8bdace50)
0xffff8bdace40    96  movz x16, #0x8
0xffff8bdace44   100  sub csp, jssp, #0x10 (16)
0xffff8bdace48   104  stp fp, lr, [jssp, #-16]!
0xffff8bdace4c   108  bl #+0x4 (addr 0xffff8bdace50)
0xffff8bdace50   112  movz x17, #0xa00000000
0xffff8bdace54   116  sub csp, jssp, #0x10 (16)
0xffff8bdace58   120  stp x17, cp, [jssp, #-16]!
0xffff8bdace5c   124  add fp, jssp, #0x10 (16)
0xffff8bdace60   128  ldr x17, pc+24 (addr 0x0000ffff8bdace78)    ;; lazy deoptimization bailout 0
0xffff8bdace64   132  add x17, x17, x16
0xffff8bdace68   136  br x17
0xffff8bdace6c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdace70   144  d63f03e0       constant
0xffff8bdace74   148  d503201f       constant
0xffff8bdace78   152  8bb06000       constant
0xffff8bdace7c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bdace60  runtime entry
0xffff8bdace6c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 168)
0xffff8bdacde0     0  ldur x4, [x1, #15]
0xffff8bdacde4     4  ldur w5, [x4, #11]
0xffff8bdacde8     8  tbnz w2, #0, #+0x20 (addr 0xffff8bdace08)
0xffff8bdacdec    12  asr x7, x2, #32
0xffff8bdacdf0    16  cmp w7, w5
0xffff8bdacdf4    20  b.hs #+0x3c (addr 0xffff8bdace30)
0xffff8bdacdf8    24  add x0, x4, #0xf (15)
0xffff8bdacdfc    28  ldr x1, [x0, w7, sxtw #3]
0xffff8bdace00    32  mov x0, x1
0xffff8bdace04    36  ret
0xffff8bdace08    40  ldur x16, [x2, #-1]
0xffff8bdace0c    44  ldr x17, [x26, #120]
0xffff8bdace10    48  cmp x16, x17
0xffff8bdace14    52  b.ne #+0x2c (addr 0xffff8bdace40)
0xffff8bdace18    56  ldur d29, [x2, #7]
0xffff8bdace1c    60  fcvtzs w7, d29
0xffff8bdace20    64  scvtf d0, w7
0xffff8bdace24    68  fcmp d29, d0
0xffff8bdace28    72  b.ne #+0x18 (addr 0xffff8bdace40)
0xffff8bdace2c    76  b #-0x3c (addr 0xffff8bdacdf0)
0xffff8bdace30    80  movz x16, #0x0
0xffff8bdace34    84  sub csp, jssp, #0x10 (16)
0xffff8bdace38    88  stp fp, lr, [jssp, #-16]!
0xffff8bdace3c    92  bl #+0x14 (addr 0xffff8bdace50)
0xffff8bdace40    96  movz x16, #0x8
0xffff8bdace44   100  sub csp, jssp, #0x10 (16)
0xffff8bdace48   104  stp fp, lr, [jssp, #-16]!
0xffff8bdace4c   108  bl #+0x4 (addr 0xffff8bdace50)
0xffff8bdace50   112  movz x17, #0xa00000000
0xffff8bdace54   116  sub csp, jssp, #0x10 (16)
0xffff8bdace58   120  stp x17, cp, [jssp, #-16]!
0xffff8bdace5c   124  add fp, jssp, #0x10 (16)
0xffff8bdace60   128  ldr x17, pc+24 (addr 0x0000ffff8bdace78)    ;; lazy deoptimization bailout 0
0xffff8bdace64   132  add x17, x17, x16
0xffff8bdace68   136  br x17
0xffff8bdace6c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdace70   144  d63f03e0       constant
0xffff8bdace74   148  d503201f       constant
0xffff8bdace78   152  8bb06000       constant
0xffff8bdace7c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bdace60  runtime entry
0xffff8bdace6c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = removeListener
compiler = unknown
Instructions (size = 144)
0xffff8bdade80     0  sub csp, jssp, #0x8 (8)
0xffff8bdade84     4  str x3, [jssp, #-8]!
0xffff8bdade88     8  sub csp, jssp, #0x8 (8)
0xffff8bdade8c    12  str x4, [jssp, #-8]!
0xffff8bdade90    16  ldr x5, pc+88 (addr 0x0000ffff8bdadee8)    ;; object: 0x26cff459 WeakCell for 0x5f52caa9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdade94    20  ldur x5, [x5, #7]
0xffff8bdade98    24  tbz w5, #0, #+0x30 (addr 0xffff8bdadec8)
0xffff8bdade9c    28  ldursw x4, [x5, #15]
0xffff8bdadea0    32  tbnz w4, #23, #+0x28 (addr 0xffff8bdadec8)
0xffff8bdadea4    36  ldur x4, [x5, #47]
0xffff8bdadea8    40  ldur x4, [x4, #95]
0xffff8bdadeac    44  cmp x0, x4
0xffff8bdadeb0    48  b.ne #+0x18 (addr 0xffff8bdadec8)
0xffff8bdadeb4    52  ldr x4, [jssp], #8
0xffff8bdadeb8    56  ldr x3, [jssp], #8
0xffff8bdadebc    60  ldr x2, pc+52 (addr 0x0000ffff8bdadef0)    ;; object: 0x26cc3a59 <String[14]: removeListener>
0xffff8bdadec0    64  ldr x16, pc+56 (addr 0x0000ffff8bdadef8)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff8bdadec4    68  br x16
0xffff8bdadec8    72  ldr x2, pc+56 (addr 0x0000ffff8bdadf00)    ;; object: 0x26cc3a59 <String[14]: removeListener>
0xffff8bdadecc    76  ldr x4, [jssp], #8
0xffff8bdaded0    80  ldr x3, [jssp], #8
0xffff8bdaded4    84  ldr x16, pc+52 (addr 0x0000ffff8bdadf08)    ;; code: BUILTIN
0xffff8bdaded8    88  br x16
0xffff8bdadedc    92  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff8bdadee0    96  d63f03e0       constant
0xffff8bdadee4   100  d503201f       constant
0xffff8bdadee8   104  26cff459       constant
0xffff8bdadeec   108  00000000       constant
0xffff8bdadef0   112  26cc3a59       constant
0xffff8bdadef4   116  00000000       constant
0xffff8bdadef8   120  8bd3cea0       constant
0xffff8bdadefc   124  0000ffff       constant
0xffff8bdadf00   128  26cc3a59       constant
0xffff8bdadf04   132  00000000       constant
0xffff8bdadf08   136  8bd22420       constant
0xffff8bdadf0c   140  0000ffff       constant


RelocInfo (size = 11)
0xffff8bdade90  embedded object  (0x26cff459 WeakCell for 0x5f52caa9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdadebc  embedded object  (0x26cc3a59 <String[14]: removeListener>)
0xffff8bdadec0  code target (HANDLER)  (0xffff8bd3cea0)
0xffff8bdadec8  embedded object  (0x26cc3a59 <String[14]: removeListener>)
0xffff8bdaded4  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdadedc  constant pool (size 52)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = STRING*INTERNALIZED_STRING -> STRING
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 416)
0xffff8bdadf80     0  and x16, x0, x1
0xffff8bdadf84     4  tbz w16, #0, #+0xfc (addr 0xffff8bdae080)
0xffff8bdadf88     8  ldur x11, [x1, #-1]
0xffff8bdadf8c    12  ldur x10, [x0, #-1]
0xffff8bdadf90    16  ldrb w11, [x11, #11]
0xffff8bdadf94    20  ldrb w10, [x10, #11]
0xffff8bdadf98    24  orr x12, x11, x10
0xffff8bdadf9c    28  tbnz w12, #7, #+0xe4 (addr 0xffff8bdae080)
0xffff8bdadfa0    32  cmp x1, x0
0xffff8bdadfa4    36  b.ne #+0xc (addr 0xffff8bdadfb0)
0xffff8bdadfa8    40  movz x0, #0x0
0xffff8bdadfac    44  ret
0xffff8bdadfb0    48  orr x12, x11, x10
0xffff8bdadfb4    52  tbnz w12, #6, #+0x8 (addr 0xffff8bdadfbc)
0xffff8bdadfb8    56  ret
0xffff8bdadfbc    60  movz x16, #0x87
0xffff8bdadfc0    64  and x12, x11, x16
0xffff8bdadfc4    68  movz x16, #0x87
0xffff8bdadfc8    72  and x13, x10, x16
0xffff8bdadfcc    76  cmp x12, #0x4 (4)
0xffff8bdadfd0    80  ccmp x13, #4, #nzcv, eq
0xffff8bdadfd4    84  b.ne #+0x5c (addr 0xffff8bdae030)
0xffff8bdadfd8    88  ldur x10, [x1, #15]
0xffff8bdadfdc    92  ldur x11, [x0, #15]
0xffff8bdadfe0    96  cmp x10, x11
0xffff8bdadfe4   100  b.eq #+0xc (addr 0xffff8bdadff0)
0xffff8bdadfe8   104  movz x0, #0x100000000
0xffff8bdadfec   108  ret
0xffff8bdadff0   112  cbnz x10, #+0xc (addr 0xffff8bdadffc)
0xffff8bdadff4   116  movz x0, #0x0
0xffff8bdadff8   120  ret
0xffff8bdadffc   124  asr x10, x10, #32
0xffff8bdae000   128  add x11, x10, #0x17 (23)
0xffff8bdae004   132  add x1, x1, x11
0xffff8bdae008   136  add x0, x0, x11
0xffff8bdae00c   140  neg x10, x10
0xffff8bdae010   144  ldrb w11, [x1, x10]
0xffff8bdae014   148  ldrb w12, [x0, x10]
0xffff8bdae018   152  cmp x11, x12
0xffff8bdae01c   156  b.ne #-0x34 (addr 0xffff8bdadfe8)
0xffff8bdae020   160  add x10, x10, #0x1 (1)
0xffff8bdae024   164  cbnz x10, #-0x14 (addr 0xffff8bdae010)
0xffff8bdae028   168  movz x0, #0x0
0xffff8bdae02c   172  ret
0xffff8bdae030   176  movz x16, #0xc00000000
0xffff8bdae034   180  sub csp, jssp, #0x10 (16)
0xffff8bdae038   184  stp fp, lr, [jssp, #-16]!
0xffff8bdae03c   188  sub csp, jssp, #0x10 (16)
0xffff8bdae040   192  str x16, [jssp, #-8]!
0xffff8bdae044   196  ldr x17, pc+172 (addr 0x0000ffff8bdae0f0)    ;; object: 0xffff8bdadf21 <Code: COMPARE_IC>
0xffff8bdae048   200  sub csp, jssp, #0x10 (16)
0xffff8bdae04c   204  str x17, [jssp, #-8]!
0xffff8bdae050   208  add fp, jssp, #0x10 (16)
0xffff8bdae054   212  sub csp, jssp, #0x10 (16)
0xffff8bdae058   216  stp x0, x1, [jssp, #-16]!
0xffff8bdae05c   220  movz x0, #0x2
0xffff8bdae060   224  ldr x1, pc+152 (addr 0x0000ffff8bdae0f8)    ;; external reference (Runtime::StringEqual)
0xffff8bdae064   228  ldr x16, pc+156 (addr 0x0000ffff8bdae100)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdae068   232  blr x16
0xffff8bdae06c   236  mov jssp, fp
0xffff8bdae070   240  ldp fp, lr, [jssp], #16
0xffff8bdae074   244  ldr x1, [x26, #64]
0xffff8bdae078   248  sub x0, x0, x1
0xffff8bdae07c   252  ret
0xffff8bdae080   256  movz x16, #0xc00000000
0xffff8bdae084   260  sub csp, jssp, #0x10 (16)
0xffff8bdae088   264  stp fp, lr, [jssp, #-16]!
0xffff8bdae08c   268  sub csp, jssp, #0x10 (16)
0xffff8bdae090   272  str x16, [jssp, #-8]!
0xffff8bdae094   276  ldr x17, pc+116 (addr 0x0000ffff8bdae108)    ;; object: 0xffff8bdadf21 <Code: COMPARE_IC>
0xffff8bdae098   280  sub csp, jssp, #0x10 (16)
0xffff8bdae09c   284  str x17, [jssp, #-8]!
0xffff8bdae0a0   288  add fp, jssp, #0x10 (16)
0xffff8bdae0a4   292  sub csp, jssp, #0x18 (24)
0xffff8bdae0a8   296  stp lr, x0, [jssp, #-24]!
0xffff8bdae0ac   300  str x1, [jssp, #16]
0xffff8bdae0b0   304  movz x10, #0x2f00000000
0xffff8bdae0b4   308  sub csp, jssp, #0x18 (24)
0xffff8bdae0b8   312  stp x10, x0, [jssp, #-24]!
0xffff8bdae0bc   316  str x1, [jssp, #16]
0xffff8bdae0c0   320  movz x0, #0x3
0xffff8bdae0c4   324  ldr x1, pc+76 (addr 0x0000ffff8bdae110)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bdae0c8   328  ldr x16, pc+80 (addr 0x0000ffff8bdae118)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdae0cc   332  blr x16
0xffff8bdae0d0   336  add x11, x0, #0x5f (95)
0xffff8bdae0d4   340  ldr x1, [jssp, #16]
0xffff8bdae0d8   344  ldp lr, x0, [jssp], #24
0xffff8bdae0dc   348  mov jssp, fp
0xffff8bdae0e0   352  ldp fp, lr, [jssp], #16
0xffff8bdae0e4   356  br x11
0xffff8bdae0e8   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdae0ec   364  d63f03e0       constant
0xffff8bdae0f0   368  8bdadf21       constant
0xffff8bdae0f4   372  0000ffff       constant
0xffff8bdae0f8   376  00ed0748       constant
0xffff8bdae0fc   380  00000000       constant
0xffff8bdae100   384  8bd06060       constant
0xffff8bdae104   388  0000ffff       constant
0xffff8bdae108   392  8bdadf21       constant
0xffff8bdae10c   396  0000ffff       constant
0xffff8bdae110   400  00c8a980       constant
0xffff8bdae114   404  00000000       constant
0xffff8bdae118   408  8bd06060       constant
0xffff8bdae11c   412  0000ffff       constant


RelocInfo (size = 16)
0xffff8bdae044  embedded object  (0xffff8bdadf21 <Code: COMPARE_IC>)
0xffff8bdae060  external reference (Runtime::StringEqual)  (0xed0748)
0xffff8bdae064  code target (STUB)  (0xffff8bd06060)
0xffff8bdae094  embedded object  (0xffff8bdadf21 <Code: COMPARE_IC>)
0xffff8bdae0c4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bdae0c8  code target (STUB)  (0xffff8bd06060)
0xffff8bdae0e8  constant pool (size 56)


kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 262146
name = CallICStub(args(2), NULL_OR_UNDEFINED, 
compiler = unknown
Instructions (size = 488)
0xffff8bdae180     0  add x4, x2, x3, asr #29
0xffff8bdae184     4  ldur x4, [x4, #15]
0xffff8bdae188     8  ldur x5, [x4, #7]
0xffff8bdae18c    12  cmp x5, x1
0xffff8bdae190    16  b.ne #+0x2c (addr 0xffff8bdae1bc)
0xffff8bdae194    20  tbz w1, #0, #+0x28 (addr 0xffff8bdae1bc)
0xffff8bdae198    24  add x2, x2, x3, asr #29
0xffff8bdae19c    28  add x2, x2, #0x18 (24)
0xffff8bdae1a0    32  ldur x3, [x2, #-1]
0xffff8bdae1a4    36  movz x16, #0x200000000
0xffff8bdae1a8    40  add x3, x3, x16
0xffff8bdae1ac    44  stur x3, [x2, #-1]
0xffff8bdae1b0    48  movz x0, #0x2
0xffff8bdae1b4    52  ldr x16, pc+372 (addr 0x0000ffff8bdae328)    ;; code: BUILTIN
0xffff8bdae1b8    56  br x16
0xffff8bdae1bc    60  ldr x16, [x26, #2400]
0xffff8bdae1c0    64  cmp x4, x16
0xffff8bdae1c4    68  b.eq #+0x78 (addr 0xffff8bdae23c)
0xffff8bdae1c8    72  ldur x5, [x4, #-1]
0xffff8bdae1cc    76  ldr x16, [x26, #2736]
0xffff8bdae1d0    80  cmp x5, x16
0xffff8bdae1d4    84  b.ne #+0x40 (addr 0xffff8bdae214)
0xffff8bdae1d8    88  ldur x5, [cp, #39]
0xffff8bdae1dc    92  ldur x5, [x5, #95]
0xffff8bdae1e0    96  cmp x1, x5
0xffff8bdae1e4   100  b.ne #+0xec (addr 0xffff8bdae2d0)
0xffff8bdae1e8   104  movz x0, #0x2
0xffff8bdae1ec   108  add x2, x2, x3, asr #29
0xffff8bdae1f0   112  add x2, x2, #0x18 (24)
0xffff8bdae1f4   116  ldur x3, [x2, #-1]
0xffff8bdae1f8   120  movz x16, #0x200000000
0xffff8bdae1fc   124  add x3, x3, x16
0xffff8bdae200   128  stur x3, [x2, #-1]
0xffff8bdae204   132  mov x2, x4
0xffff8bdae208   136  mov x3, x1
0xffff8bdae20c   140  ldr x16, pc+292 (addr 0x0000ffff8bdae330)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff8bdae210   144  br x16
0xffff8bdae214   148  ldr x16, [x26, #2568]
0xffff8bdae218   152  cmp x4, x16
0xffff8bdae21c   156  b.eq #+0xb4 (addr 0xffff8bdae2d0)
0xffff8bdae220   160  ldur x5, [x4, #-1]
0xffff8bdae224   164  ldrb w5, [x5, #11]
0xffff8bdae228   168  cmp x5, #0xc9 (201)
0xffff8bdae22c   172  b.ne #+0xa4 (addr 0xffff8bdae2d0)
0xffff8bdae230   176  add x4, x2, x3, asr #29
0xffff8bdae234   180  ldr x5, [x26, #2400]
0xffff8bdae238   184  stur x5, [x4, #15]
0xffff8bdae23c   188  movz x0, #0x2
0xffff8bdae240   192  ldr x16, pc+248 (addr 0x0000ffff8bdae338)    ;; code: BUILTIN
0xffff8bdae244   196  br x16
0xffff8bdae248   200  tbz w1, #0, #+0x88 (addr 0xffff8bdae2d0)
0xffff8bdae24c   204  ldur x5, [x1, #-1]
0xffff8bdae250   208  ldrb w5, [x5, #11]
0xffff8bdae254   212  cmp x5, #0xc9 (201)
0xffff8bdae258   216  b.ne #+0x78 (addr 0xffff8bdae2d0)
0xffff8bdae25c   220  ldur x5, [cp, #39]
0xffff8bdae260   224  ldur x5, [x5, #95]
0xffff8bdae264   228  cmp x1, x5
0xffff8bdae268   232  b.eq #+0x68 (addr 0xffff8bdae2d0)
0xffff8bdae26c   236  ldur x4, [x1, #39]
0xffff8bdae270   240  ldur x4, [x4, #39]
0xffff8bdae274   244  ldur x5, [cp, #39]
0xffff8bdae278   248  cmp x4, x5
0xffff8bdae27c   252  b.ne #+0x54 (addr 0xffff8bdae2d0)
0xffff8bdae280   256  movz x5, #0x200000000
0xffff8bdae284   260  adds x4, x2, x3, asr #29
0xffff8bdae288   264  stur x5, [x4, #23]
0xffff8bdae28c   268  movz x16, #0xc00000000
0xffff8bdae290   272  sub csp, jssp, #0x10 (16)
0xffff8bdae294   276  stp fp, lr, [jssp, #-16]!
0xffff8bdae298   280  sub csp, jssp, #0x10 (16)
0xffff8bdae29c   284  str x16, [jssp, #-8]!
0xffff8bdae2a0   288  ldr x17, pc+160 (addr 0x0000ffff8bdae340)    ;; object: 0xffff8bdae121 <Code: CALL_IC>
0xffff8bdae2a4   292  sub csp, jssp, #0x10 (16)
0xffff8bdae2a8   296  str x17, [jssp, #-8]!
0xffff8bdae2ac   300  add fp, jssp, #0x10 (16)
0xffff8bdae2b0   304  sub csp, jssp, #0x8 (8)
0xffff8bdae2b4   308  str x1, [jssp, #-8]!
0xffff8bdae2b8   312  ldr x16, pc+144 (addr 0x0000ffff8bdae348)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8bdae2bc   316  blr x16
0xffff8bdae2c0   320  ldr x1, [jssp], #8
0xffff8bdae2c4   324  mov jssp, fp
0xffff8bdae2c8   328  ldp fp, lr, [jssp], #16
0xffff8bdae2cc   332  b #-0x11c (addr 0xffff8bdae1b0)
0xffff8bdae2d0   336  movz x16, #0xc00000000
0xffff8bdae2d4   340  sub csp, jssp, #0x10 (16)
0xffff8bdae2d8   344  stp fp, lr, [jssp, #-16]!
0xffff8bdae2dc   348  sub csp, jssp, #0x10 (16)
0xffff8bdae2e0   352  str x16, [jssp, #-8]!
0xffff8bdae2e4   356  ldr x17, pc+108 (addr 0x0000ffff8bdae350)    ;; object: 0xffff8bdae121 <Code: CALL_IC>
0xffff8bdae2e8   360  sub csp, jssp, #0x10 (16)
0xffff8bdae2ec   364  str x17, [jssp, #-8]!
0xffff8bdae2f0   368  add fp, jssp, #0x10 (16)
0xffff8bdae2f4   372  sub csp, jssp, #0x18 (24)
0xffff8bdae2f8   376  stp x3, x2, [jssp, #-24]!
0xffff8bdae2fc   380  str x1, [jssp, #16]
0xffff8bdae300   384  movz x0, #0x3
0xffff8bdae304   388  ldr x1, pc+84 (addr 0x0000ffff8bdae358)    ;; external reference (Runtime::CallIC_Miss)
0xffff8bdae308   392  ldr x16, pc+88 (addr 0x0000ffff8bdae360)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdae30c   396  blr x16
0xffff8bdae310   400  mov x1, x0
0xffff8bdae314   404  mov jssp, fp
0xffff8bdae318   408  ldp fp, lr, [jssp], #16
0xffff8bdae31c   412  b #-0xe0 (addr 0xffff8bdae23c)
0xffff8bdae320   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8bdae324   420  d63f03e0       constant
0xffff8bdae328   424  8bd1e280       constant
0xffff8bdae32c   428  0000ffff       constant
0xffff8bdae330   432  8bd33b00       constant
0xffff8bdae334   436  0000ffff       constant
0xffff8bdae338   440  8bd1f560       constant
0xffff8bdae33c   444  0000ffff       constant
0xffff8bdae340   448  8bdae121       constant
0xffff8bdae344   452  0000ffff       constant
0xffff8bdae348   456  8bd0ddc0       constant
0xffff8bdae34c   460  0000ffff       constant
0xffff8bdae350   464  8bdae121       constant
0xffff8bdae354   468  0000ffff       constant
0xffff8bdae358   472  00c86928       constant
0xffff8bdae35c   476  00000000       constant
0xffff8bdae360   480  8bd06060       constant
0xffff8bdae364   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8bdae1b4  code target (BUILTIN)  (0xffff8bd1e280)
0xffff8bdae20c  code target (STUB)  (0xffff8bd33b00)
0xffff8bdae240  code target (BUILTIN)  (0xffff8bd1f560)
0xffff8bdae2a0  embedded object  (0xffff8bdae121 <Code: CALL_IC>)
0xffff8bdae2b8  code target (STUB)  (0xffff8bd0ddc0)
0xffff8bdae2e4  embedded object  (0xffff8bdae121 <Code: CALL_IC>)
0xffff8bdae304  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8bdae308  code target (STUB)  (0xffff8bd06060)
0xffff8bdae320  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 262146
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8bdae3e0     0  ldur x2, [fp, #-16]
0xffff8bdae3e4     4  ldur x2, [x2, #31]
0xffff8bdae3e8     8  ldur x2, [x2, #87]
0xffff8bdae3ec    12  ldr x16, pc+20 (addr 0x0000ffff8bdae400)    ;; code: CALL_IC, GENERIC
0xffff8bdae3f0    16  br x16
0xffff8bdae3f4    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdae3f8    24  d63f03e0       constant
0xffff8bdae3fc    28  d503201f       constant
0xffff8bdae400    32  8bdae180       constant
0xffff8bdae404    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8bdae3ec  code target (CALL_IC)  (0xffff8bdae180)
0xffff8bdae3f4  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bdaed80     0  tbz w0, #0, #+0x98 (addr 0xffff8bdaee18)
0xffff8bdaed84     4  mov x2, x0
0xffff8bdaed88     8  ldur x4, [x1, #7]
0xffff8bdaed8c    12  stur x2, [x4, #79]
0xffff8bdaed90    16  add x3, x4, #0x4f (79)
0xffff8bdaed94    20  and x2, x2, #0xfffffffffff00000
0xffff8bdaed98    24  ldr x2, [x2, #8]
0xffff8bdaed9c    28  tbz w2, #1, #+0x24 (addr 0xffff8bdaedc0)
0xffff8bdaeda0    32  and x2, x4, #0xfffffffffff00000
0xffff8bdaeda4    36  ldr x2, [x2, #8]
0xffff8bdaeda8    40  tbz w2, #2, #+0x18 (addr 0xffff8bdaedc0)
0xffff8bdaedac    44  sub csp, jssp, #0x8 (8)
0xffff8bdaedb0    48  str lr, [jssp, #-8]!
0xffff8bdaedb4    52  ldr x16, pc+84 (addr 0x0000ffff8bdaee08)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdaedb8    56  blr x16
0xffff8bdaedbc    60  ldr lr, [jssp], #8
0xffff8bdaedc0    64  stur x5, [x1, #-1]
0xffff8bdaedc4    68  tbz w5, #0, #+0x34 (addr 0xffff8bdaedf8)
0xffff8bdaedc8    72  sub x2, x1, #0x1 (1)
0xffff8bdaedcc    76  and x5, x5, #0xfffffffffff00000
0xffff8bdaedd0    80  ldr x5, [x5, #8]
0xffff8bdaedd4    84  tbz w5, #1, #+0x24 (addr 0xffff8bdaedf8)
0xffff8bdaedd8    88  and x5, x1, #0xfffffffffff00000
0xffff8bdaeddc    92  ldr x5, [x5, #8]
0xffff8bdaede0    96  tbz w5, #2, #+0x18 (addr 0xffff8bdaedf8)
0xffff8bdaede4   100  sub csp, jssp, #0x8 (8)
0xffff8bdaede8   104  str lr, [jssp, #-8]!
0xffff8bdaedec   108  ldr x16, pc+36 (addr 0x0000ffff8bdaee10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdaedf0   112  blr x16
0xffff8bdaedf4   116  ldr lr, [jssp], #8
0xffff8bdaedf8   120  ret
0xffff8bdaedfc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bdaee00   128  d63f03e0       constant
0xffff8bdaee04   132  d503201f       constant
0xffff8bdaee08   136  8bd378a0       constant
0xffff8bdaee0c   140  0000ffff       constant
0xffff8bdaee10   144  8bd38080       constant
0xffff8bdaee14   148  0000ffff       constant
0xffff8bdaee18   152  movz x16, #0x0
0xffff8bdaee1c   156  sub csp, jssp, #0x10 (16)
0xffff8bdaee20   160  stp fp, lr, [jssp, #-16]!
0xffff8bdaee24   164  bl #+0x4 (addr 0xffff8bdaee28)
0xffff8bdaee28   168  movz x17, #0xa00000000
0xffff8bdaee2c   172  sub csp, jssp, #0x10 (16)
0xffff8bdaee30   176  stp x17, cp, [jssp, #-16]!
0xffff8bdaee34   180  add fp, jssp, #0x10 (16)
0xffff8bdaee38   184  ldr x17, pc+24 (addr 0x0000ffff8bdaee50)    ;; lazy deoptimization bailout 0
0xffff8bdaee3c   188  add x17, x17, x16
0xffff8bdaee40   192  br x17
0xffff8bdaee44   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdaee48   200  d63f03e0       constant
0xffff8bdaee4c   204  d503201f       constant
0xffff8bdaee50   208  8bb06000       constant
0xffff8bdaee54   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdaedb4  code target (STUB)  (0xffff8bd378a0)
0xffff8bdaedec  code target (STUB)  (0xffff8bd38080)
0xffff8bdaedfc  constant pool (size 28)
0xffff8bdaee38  runtime entry
0xffff8bdaee44  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bdaed80     0  tbz w0, #0, #+0x98 (addr 0xffff8bdaee18)
0xffff8bdaed84     4  mov x2, x0
0xffff8bdaed88     8  ldur x4, [x1, #7]
0xffff8bdaed8c    12  stur x2, [x4, #79]
0xffff8bdaed90    16  add x3, x4, #0x4f (79)
0xffff8bdaed94    20  and x2, x2, #0xfffffffffff00000
0xffff8bdaed98    24  ldr x2, [x2, #8]
0xffff8bdaed9c    28  tbz w2, #1, #+0x24 (addr 0xffff8bdaedc0)
0xffff8bdaeda0    32  and x2, x4, #0xfffffffffff00000
0xffff8bdaeda4    36  ldr x2, [x2, #8]
0xffff8bdaeda8    40  tbz w2, #2, #+0x18 (addr 0xffff8bdaedc0)
0xffff8bdaedac    44  sub csp, jssp, #0x8 (8)
0xffff8bdaedb0    48  str lr, [jssp, #-8]!
0xffff8bdaedb4    52  ldr x16, pc+84 (addr 0x0000ffff8bdaee08)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdaedb8    56  blr x16
0xffff8bdaedbc    60  ldr lr, [jssp], #8
0xffff8bdaedc0    64  stur x5, [x1, #-1]
0xffff8bdaedc4    68  tbz w5, #0, #+0x34 (addr 0xffff8bdaedf8)
0xffff8bdaedc8    72  sub x2, x1, #0x1 (1)
0xffff8bdaedcc    76  and x5, x5, #0xfffffffffff00000
0xffff8bdaedd0    80  ldr x5, [x5, #8]
0xffff8bdaedd4    84  tbz w5, #1, #+0x24 (addr 0xffff8bdaedf8)
0xffff8bdaedd8    88  and x5, x1, #0xfffffffffff00000
0xffff8bdaeddc    92  ldr x5, [x5, #8]
0xffff8bdaede0    96  tbz w5, #2, #+0x18 (addr 0xffff8bdaedf8)
0xffff8bdaede4   100  sub csp, jssp, #0x8 (8)
0xffff8bdaede8   104  str lr, [jssp, #-8]!
0xffff8bdaedec   108  ldr x16, pc+36 (addr 0x0000ffff8bdaee10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdaedf0   112  blr x16
0xffff8bdaedf4   116  ldr lr, [jssp], #8
0xffff8bdaedf8   120  ret
0xffff8bdaedfc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bdaee00   128  d63f03e0       constant
0xffff8bdaee04   132  d503201f       constant
0xffff8bdaee08   136  8bd378a0       constant
0xffff8bdaee0c   140  0000ffff       constant
0xffff8bdaee10   144  8bd38080       constant
0xffff8bdaee14   148  0000ffff       constant
0xffff8bdaee18   152  movz x16, #0x0
0xffff8bdaee1c   156  sub csp, jssp, #0x10 (16)
0xffff8bdaee20   160  stp fp, lr, [jssp, #-16]!
0xffff8bdaee24   164  bl #+0x4 (addr 0xffff8bdaee28)
0xffff8bdaee28   168  movz x17, #0xa00000000
0xffff8bdaee2c   172  sub csp, jssp, #0x10 (16)
0xffff8bdaee30   176  stp x17, cp, [jssp, #-16]!
0xffff8bdaee34   180  add fp, jssp, #0x10 (16)
0xffff8bdaee38   184  ldr x17, pc+24 (addr 0x0000ffff8bdaee50)    ;; lazy deoptimization bailout 0
0xffff8bdaee3c   188  add x17, x17, x16
0xffff8bdaee40   192  br x17
0xffff8bdaee44   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdaee48   200  d63f03e0       constant
0xffff8bdaee4c   204  d503201f       constant
0xffff8bdaee50   208  8bb06000       constant
0xffff8bdaee54   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdaedb4  code target (STUB)  (0xffff8bd378a0)
0xffff8bdaedec  code target (STUB)  (0xffff8bd38080)
0xffff8bdaedfc  constant pool (size 28)
0xffff8bdaee38  runtime entry
0xffff8bdaee44  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = path
compiler = unknown
Instructions (size = 184)
0xffff8bdaeec0     0  sub csp, jssp, #0x8 (8)
0xffff8bdaeec4     4  str x3, [jssp, #-8]!
0xffff8bdaeec8     8  sub csp, jssp, #0x8 (8)
0xffff8bdaeecc    12  str x4, [jssp, #-8]!
0xffff8bdaeed0    16  ldr x3, pc+112 (addr 0x0000ffff8bdaef40)    ;; object: 0x26c63e59 Cell for 0
0xffff8bdaeed4    20  ldur x3, [x3, #7]
0xffff8bdaeed8    24  cmp x3, #0x0 (0)
0xffff8bdaeedc    28  b.ne #+0x44 (addr 0xffff8bdaef20)
0xffff8bdaeee0    32  tbz w0, #0, #+0x40 (addr 0xffff8bdaef20)
0xffff8bdaeee4    36  ldur x3, [x0, #-1]
0xffff8bdaeee8    40  ldr x4, pc+96 (addr 0x0000ffff8bdaef48)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdaeeec    44  ldur x4, [x4, #7]
0xffff8bdaeef0    48  cmp x3, x4
0xffff8bdaeef4    52  b.ne #+0x2c (addr 0xffff8bdaef20)
0xffff8bdaeef8    56  ldr x5, pc+88 (addr 0x0000ffff8bdaef50)    ;; object: 0x26cffb89 WeakCell for 0x5f52cbb1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdaeefc    60  ldur x5, [x5, #7]
0xffff8bdaef00    64  tbz w5, #0, #+0x20 (addr 0xffff8bdaef20)
0xffff8bdaef04    68  ldursw x4, [x5, #15]
0xffff8bdaef08    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdaef20)
0xffff8bdaef0c    76  ldr x4, [jssp], #8
0xffff8bdaef10    80  ldr x3, [jssp], #8
0xffff8bdaef14    84  ldr x2, pc+68 (addr 0x0000ffff8bdaef58)    ;; object: 0x26cb2e69 <String[4]: path>
0xffff8bdaef18    88  ldr x16, pc+72 (addr 0x0000ffff8bdaef60)    ;; code: HANDLER, StoreTransitionStub, minor: 196618
0xffff8bdaef1c    92  br x16
0xffff8bdaef20    96  ldr x2, pc+72 (addr 0x0000ffff8bdaef68)    ;; object: 0x26cb2e69 <String[4]: path>
0xffff8bdaef24   100  ldr x4, [jssp], #8
0xffff8bdaef28   104  ldr x3, [jssp], #8
0xffff8bdaef2c   108  ldr x16, pc+68 (addr 0x0000ffff8bdaef70)    ;; code: BUILTIN
0xffff8bdaef30   112  br x16
0xffff8bdaef34   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdaef38   120  d63f03e0       constant
0xffff8bdaef3c   124  d503201f       constant
0xffff8bdaef40   128  26c63e59       constant
0xffff8bdaef44   132  00000000       constant
0xffff8bdaef48   136  26cc22b1       constant
0xffff8bdaef4c   140  00000000       constant
0xffff8bdaef50   144  26cffb89       constant
0xffff8bdaef54   148  00000000       constant
0xffff8bdaef58   152  26cb2e69       constant
0xffff8bdaef5c   156  00000000       constant
0xffff8bdaef60   160  8bdaed80       constant
0xffff8bdaef64   164  0000ffff       constant
0xffff8bdaef68   168  26cb2e69       constant
0xffff8bdaef6c   172  00000000       constant
0xffff8bdaef70   176  8bd22420       constant
0xffff8bdaef74   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdaeed0  embedded object  (0x26c63e59 Cell for 0)
0xffff8bdaeee8  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdaeef8  embedded object  (0x26cffb89 WeakCell for 0x5f52cbb1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdaef14  embedded object  (0x26cb2e69 <String[4]: path>)
0xffff8bdaef18  code target (HANDLER)  (0xffff8bdaed80)
0xffff8bdaef20  embedded object  (0x26cb2e69 <String[4]: path>)
0xffff8bdaef2c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdaef34  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = charCodeAt
compiler = unknown
Instructions (size = 152)
0xffff8bdb0e00     0  sub csp, jssp, #0x8 (8)
0xffff8bdb0e04     4  str x3, [jssp, #-8]!
0xffff8bdb0e08     8  sub csp, jssp, #0x8 (8)
0xffff8bdb0e0c    12  str x0, [jssp, #-8]!
0xffff8bdb0e10    16  ldur x3, [cp, #39]
0xffff8bdb0e14    20  movz x16, #0x2e7
0xffff8bdb0e18    24  ldr x3, [x3, x16]
0xffff8bdb0e1c    28  ldur x3, [x3, #23]
0xffff8bdb0e20    32  ldur x3, [x3, #23]
0xffff8bdb0e24    36  ldr x0, pc+84 (addr 0x0000ffff8bdb0e78)    ;; object: 0x26c63e59 Cell for 0
0xffff8bdb0e28    40  ldur x0, [x0, #7]
0xffff8bdb0e2c    44  cmp x0, #0x0 (0)
0xffff8bdb0e30    48  b.ne #+0x1c (addr 0xffff8bdb0e4c)
0xffff8bdb0e34    52  ldur x0, [x3, #-1]
0xffff8bdb0e38    56  ldr x4, pc+72 (addr 0x0000ffff8bdb0e80)    ;; object: 0x32706e39 WeakCell for 0x5f5156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff8bdb0e3c    60  ldur x4, [x4, #7]
0xffff8bdb0e40    64  cmp x0, x4
0xffff8bdb0e44    68  b.ne #+0x8 (addr 0xffff8bdb0e4c)
0xffff8bdb0e48    72  b #+0x14 (addr 0xffff8bdb0e5c)
0xffff8bdb0e4c    76  ldr x0, [jssp], #8
0xffff8bdb0e50    80  ldr x3, [jssp], #8
0xffff8bdb0e54    84  ldr x16, pc+52 (addr 0x0000ffff8bdb0e88)    ;; code: BUILTIN
0xffff8bdb0e58    88  br x16
0xffff8bdb0e5c    92  add jssp, jssp, #0x10 (16)
0xffff8bdb0e60    96  mov x1, x3
0xffff8bdb0e64   100  ldr x16, pc+44 (addr 0x0000ffff8bdb0e90)    ;; code: HANDLER, LoadConstantStub, minor: 5
0xffff8bdb0e68   104  br x16
0xffff8bdb0e6c   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff8bdb0e70   112  d63f03e0       constant
0xffff8bdb0e74   116  d503201f       constant
0xffff8bdb0e78   120  26c63e59       constant
0xffff8bdb0e7c   124  00000000       constant
0xffff8bdb0e80   128  32706e39       constant
0xffff8bdb0e84   132  00000000       constant
0xffff8bdb0e88   136  8bd222e0       constant
0xffff8bdb0e8c   140  0000ffff       constant
0xffff8bdb0e90   144  8bd43500       constant
0xffff8bdb0e94   148  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdb0e24  embedded object  (0x26c63e59 Cell for 0)
0xffff8bdb0e38  embedded object  (0x32706e39 WeakCell for 0x5f5156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff8bdb0e54  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdb0e64  code target (HANDLER)  (0xffff8bd43500)
0xffff8bdb0e6c  constant pool (size 44)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = UNINITIALIZED
extra_ic_state = 0
compare_state = UNINITIALIZED*UNINITIALIZED -> UNINITIALIZED
compare_operation = LTE
name = CompareICStub
compiler = unknown
Instructions (size = 136)
0xffff8bdb0f00     0  movz x16, #0xc00000000
0xffff8bdb0f04     4  sub csp, jssp, #0x10 (16)
0xffff8bdb0f08     8  stp fp, lr, [jssp, #-16]!
0xffff8bdb0f0c    12  sub csp, jssp, #0x10 (16)
0xffff8bdb0f10    16  str x16, [jssp, #-8]!
0xffff8bdb0f14    20  ldr x17, pc+92 (addr 0x0000ffff8bdb0f70)    ;; object: 0xffff8bdb0ea1 <Code: COMPARE_IC>
0xffff8bdb0f18    24  sub csp, jssp, #0x10 (16)
0xffff8bdb0f1c    28  str x17, [jssp, #-8]!
0xffff8bdb0f20    32  add fp, jssp, #0x10 (16)
0xffff8bdb0f24    36  sub csp, jssp, #0x18 (24)
0xffff8bdb0f28    40  stp lr, x0, [jssp, #-24]!
0xffff8bdb0f2c    44  str x1, [jssp, #16]
0xffff8bdb0f30    48  movz x10, #0x3300000000
0xffff8bdb0f34    52  sub csp, jssp, #0x18 (24)
0xffff8bdb0f38    56  stp x10, x0, [jssp, #-24]!
0xffff8bdb0f3c    60  str x1, [jssp, #16]
0xffff8bdb0f40    64  movz x0, #0x3
0xffff8bdb0f44    68  ldr x1, pc+52 (addr 0x0000ffff8bdb0f78)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bdb0f48    72  ldr x16, pc+56 (addr 0x0000ffff8bdb0f80)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdb0f4c    76  blr x16
0xffff8bdb0f50    80  add x11, x0, #0x5f (95)
0xffff8bdb0f54    84  ldr x1, [jssp, #16]
0xffff8bdb0f58    88  ldp lr, x0, [jssp], #24
0xffff8bdb0f5c    92  mov jssp, fp
0xffff8bdb0f60    96  ldp fp, lr, [jssp], #16
0xffff8bdb0f64   100  br x11
0xffff8bdb0f68   104  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bdb0f6c   108  d63f03e0       constant
0xffff8bdb0f70   112  8bdb0ea1       constant
0xffff8bdb0f74   116  0000ffff       constant
0xffff8bdb0f78   120  00c8a980       constant
0xffff8bdb0f7c   124  00000000       constant
0xffff8bdb0f80   128  8bd06060       constant
0xffff8bdb0f84   132  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdb0f14  embedded object  (0xffff8bdb0ea1 <Code: COMPARE_IC>)
0xffff8bdb0f44  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bdb0f48  code target (STUB)  (0xffff8bd06060)
0xffff8bdb0f68  constant pool (size 32)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*SMI -> SMI
compare_operation = LTE
name = CompareICStub
compiler = unknown
Instructions (size = 160)
0xffff8bdb2220     0  orr x16, x0, x1
0xffff8bdb2224     4  tbnz w16, #0, #+0x10 (addr 0xffff8bdb2234)
0xffff8bdb2228     8  asr x1, x1, #32
0xffff8bdb222c    12  sub x0, x1, x0, asr #32
0xffff8bdb2230    16  ret
0xffff8bdb2234    20  movz x16, #0xc00000000
0xffff8bdb2238    24  sub csp, jssp, #0x10 (16)
0xffff8bdb223c    28  stp fp, lr, [jssp, #-16]!
0xffff8bdb2240    32  sub csp, jssp, #0x10 (16)
0xffff8bdb2244    36  str x16, [jssp, #-8]!
0xffff8bdb2248    40  ldr x17, pc+96 (addr 0x0000ffff8bdb22a8)    ;; object: 0xffff8bdb21c1 <Code: COMPARE_IC>
0xffff8bdb224c    44  sub csp, jssp, #0x10 (16)
0xffff8bdb2250    48  str x17, [jssp, #-8]!
0xffff8bdb2254    52  add fp, jssp, #0x10 (16)
0xffff8bdb2258    56  sub csp, jssp, #0x18 (24)
0xffff8bdb225c    60  stp lr, x0, [jssp, #-24]!
0xffff8bdb2260    64  str x1, [jssp, #16]
0xffff8bdb2264    68  movz x10, #0x3300000000
0xffff8bdb2268    72  sub csp, jssp, #0x18 (24)
0xffff8bdb226c    76  stp x10, x0, [jssp, #-24]!
0xffff8bdb2270    80  str x1, [jssp, #16]
0xffff8bdb2274    84  movz x0, #0x3
0xffff8bdb2278    88  ldr x1, pc+56 (addr 0x0000ffff8bdb22b0)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bdb227c    92  ldr x16, pc+60 (addr 0x0000ffff8bdb22b8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdb2280    96  blr x16
0xffff8bdb2284   100  add x11, x0, #0x5f (95)
0xffff8bdb2288   104  ldr x1, [jssp, #16]
0xffff8bdb228c   108  ldp lr, x0, [jssp], #24
0xffff8bdb2290   112  mov jssp, fp
0xffff8bdb2294   116  ldp fp, lr, [jssp], #16
0xffff8bdb2298   120  br x11
0xffff8bdb229c   124  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bdb22a0   128  d63f03e0       constant
0xffff8bdb22a4   132  d503201f       constant
0xffff8bdb22a8   136  8bdb21c1       constant
0xffff8bdb22ac   140  0000ffff       constant
0xffff8bdb22b0   144  00c8a980       constant
0xffff8bdb22b4   148  00000000       constant
0xffff8bdb22b8   152  8bd06060       constant
0xffff8bdb22bc   156  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdb2248  embedded object  (0xffff8bdb21c1 <Code: COMPARE_IC>)
0xffff8bdb2278  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bdb227c  code target (STUB)  (0xffff8bd06060)
0xffff8bdb229c  constant pool (size 36)


kind = HANDLER
major_key = <NoCache>Stub
name = slice
compiler = unknown
Instructions (size = 152)
0xffff8bdb29a0     0  sub csp, jssp, #0x8 (8)
0xffff8bdb29a4     4  str x3, [jssp, #-8]!
0xffff8bdb29a8     8  sub csp, jssp, #0x8 (8)
0xffff8bdb29ac    12  str x0, [jssp, #-8]!
0xffff8bdb29b0    16  ldur x3, [cp, #39]
0xffff8bdb29b4    20  movz x16, #0x2e7
0xffff8bdb29b8    24  ldr x3, [x3, x16]
0xffff8bdb29bc    28  ldur x3, [x3, #23]
0xffff8bdb29c0    32  ldur x3, [x3, #23]
0xffff8bdb29c4    36  ldr x0, pc+84 (addr 0x0000ffff8bdb2a18)    ;; object: 0x26c63e59 Cell for 0
0xffff8bdb29c8    40  ldur x0, [x0, #7]
0xffff8bdb29cc    44  cmp x0, #0x0 (0)
0xffff8bdb29d0    48  b.ne #+0x1c (addr 0xffff8bdb29ec)
0xffff8bdb29d4    52  ldur x0, [x3, #-1]
0xffff8bdb29d8    56  ldr x4, pc+72 (addr 0x0000ffff8bdb2a20)    ;; object: 0x32706e39 WeakCell for 0x5f5156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff8bdb29dc    60  ldur x4, [x4, #7]
0xffff8bdb29e0    64  cmp x0, x4
0xffff8bdb29e4    68  b.ne #+0x8 (addr 0xffff8bdb29ec)
0xffff8bdb29e8    72  b #+0x14 (addr 0xffff8bdb29fc)
0xffff8bdb29ec    76  ldr x0, [jssp], #8
0xffff8bdb29f0    80  ldr x3, [jssp], #8
0xffff8bdb29f4    84  ldr x16, pc+52 (addr 0x0000ffff8bdb2a28)    ;; code: BUILTIN
0xffff8bdb29f8    88  br x16
0xffff8bdb29fc    92  add jssp, jssp, #0x10 (16)
0xffff8bdb2a00    96  mov x1, x3
0xffff8bdb2a04   100  ldr x16, pc+44 (addr 0x0000ffff8bdb2a30)    ;; code: HANDLER, LoadConstantStub, minor: 18
0xffff8bdb2a08   104  br x16
0xffff8bdb2a0c   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff8bdb2a10   112  d63f03e0       constant
0xffff8bdb2a14   116  d503201f       constant
0xffff8bdb2a18   120  26c63e59       constant
0xffff8bdb2a1c   124  00000000       constant
0xffff8bdb2a20   128  32706e39       constant
0xffff8bdb2a24   132  00000000       constant
0xffff8bdb2a28   136  8bd222e0       constant
0xffff8bdb2a2c   140  0000ffff       constant
0xffff8bdb2a30   144  8bd7ccc0       constant
0xffff8bdb2a34   148  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdb29c4  embedded object  (0x26c63e59 Cell for 0)
0xffff8bdb29d8  embedded object  (0x32706e39 WeakCell for 0x5f5156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff8bdb29f4  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdb2a04  code target (HANDLER)  (0xffff8bd7ccc0)
0xffff8bdb2a0c  constant pool (size 44)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff8bdb2b40     0  ldur x6, [x1, #7]
0xffff8bdb2b44     4  ldur w7, [x6, #11]
0xffff8bdb2b48     8  adds w8, w7, #0x3 (3)
0xffff8bdb2b4c    12  b.vs #+0x1dc (addr 0xffff8bdb2d28)
0xffff8bdb2b50    16  movz w16, #0x95ff
0xffff8bdb2b54    20  cmp w8, w16, lsl #1
0xffff8bdb2b58    24  b.hs #+0x1e0 (addr 0xffff8bdb2d38)
0xffff8bdb2b5c    28  lsl x9, x8, #32
0xffff8bdb2b60    32  lsl w10, w8, #3
0xffff8bdb2b64    36  add w10, w10, #0x10 (16)
0xffff8bdb2b68    40  sxtw x10, w10
0xffff8bdb2b6c    44  movz x11, #0xe2c0
0xffff8bdb2b70    48  movk x11, #0x2cb8, lsl #16
0xffff8bdb2b74    52  ldp x13, x16, [x11]
0xffff8bdb2b78    56  adds x12, x13, x10
0xffff8bdb2b7c    60  ccmp x12, x16, #nzCv, lo
0xffff8bdb2b80    64  b.hi #+0xf8 (addr 0xffff8bdb2c78)
0xffff8bdb2b84    68  str x12, [x11]
0xffff8bdb2b88    72  orr x13, x13, #0x1
0xffff8bdb2b8c    76  ldr x10, pc+348 (addr 0x0000ffff8bdb2ce8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bdb2b90    80  stur x10, [x13, #-1]
0xffff8bdb2b94    84  stur x9, [x13, #7]
0xffff8bdb2b98    88  cmp w7, w8
0xffff8bdb2b9c    92  b.ge #+0x18 (addr 0xffff8bdb2bb4)
0xffff8bdb2ba0    96  sub w8, w8, #0x1 (1)
0xffff8bdb2ba4   100  ldr x9, pc+332 (addr 0x0000ffff8bdb2cf0)    ;; object: 0x26c04241 <undefined>
0xffff8bdb2ba8   104  add x10, x13, #0xf (15)
0xffff8bdb2bac   108  str x9, [x10, w8, sxtw #3]
0xffff8bdb2bb0   112  b #-0x18 (addr 0xffff8bdb2b98)
0xffff8bdb2bb4   116  cmp w7, #0x0 (0)
0xffff8bdb2bb8   120  b.le #+0x1c (addr 0xffff8bdb2bd4)
0xffff8bdb2bbc   124  sub w7, w7, #0x1 (1)
0xffff8bdb2bc0   128  add x8, x6, #0xf (15)
0xffff8bdb2bc4   132  ldr x9, [x8, w7, sxtw #3]
0xffff8bdb2bc8   136  add x8, x13, #0xf (15)
0xffff8bdb2bcc   140  str x9, [x8, w7, sxtw #3]
0xffff8bdb2bd0   144  b #-0x1c (addr 0xffff8bdb2bb4)
0xffff8bdb2bd4   148  stur x13, [x1, #7]
0xffff8bdb2bd8   152  add x6, x1, #0x7 (7)
0xffff8bdb2bdc   156  and x13, x1, #0xfffffffffff00000
0xffff8bdb2be0   160  ldr x13, [x13, #8]
0xffff8bdb2be4   164  tbz w13, #2, #+0x18 (addr 0xffff8bdb2bfc)
0xffff8bdb2be8   168  sub csp, jssp, #0x8 (8)
0xffff8bdb2bec   172  str lr, [jssp, #-8]!
0xffff8bdb2bf0   176  ldr x16, pc+264 (addr 0x0000ffff8bdb2cf8)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff8bdb2bf4   180  blr x16
0xffff8bdb2bf8   184  ldr lr, [jssp], #8
0xffff8bdb2bfc   188  tbz w0, #0, #+0x14c (addr 0xffff8bdb2d48)
0xffff8bdb2c00   192  mov x2, x0
0xffff8bdb2c04   196  ldur x4, [x1, #7]
0xffff8bdb2c08   200  stur x2, [x4, #87]
0xffff8bdb2c0c   204  add x3, x4, #0x57 (87)
0xffff8bdb2c10   208  and x2, x2, #0xfffffffffff00000
0xffff8bdb2c14   212  ldr x2, [x2, #8]
0xffff8bdb2c18   216  tbz w2, #1, #+0x24 (addr 0xffff8bdb2c3c)
0xffff8bdb2c1c   220  and x2, x4, #0xfffffffffff00000
0xffff8bdb2c20   224  ldr x2, [x2, #8]
0xffff8bdb2c24   228  tbz w2, #2, #+0x18 (addr 0xffff8bdb2c3c)
0xffff8bdb2c28   232  sub csp, jssp, #0x8 (8)
0xffff8bdb2c2c   236  str lr, [jssp, #-8]!
0xffff8bdb2c30   240  ldr x16, pc+208 (addr 0x0000ffff8bdb2d00)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdb2c34   244  blr x16
0xffff8bdb2c38   248  ldr lr, [jssp], #8
0xffff8bdb2c3c   252  stur x5, [x1, #-1]
0xffff8bdb2c40   256  tbz w5, #0, #+0x34 (addr 0xffff8bdb2c74)
0xffff8bdb2c44   260  sub x2, x1, #0x1 (1)
0xffff8bdb2c48   264  and x5, x5, #0xfffffffffff00000
0xffff8bdb2c4c   268  ldr x5, [x5, #8]
0xffff8bdb2c50   272  tbz w5, #1, #+0x24 (addr 0xffff8bdb2c74)
0xffff8bdb2c54   276  and x5, x1, #0xfffffffffff00000
0xffff8bdb2c58   280  ldr x5, [x5, #8]
0xffff8bdb2c5c   284  tbz w5, #2, #+0x18 (addr 0xffff8bdb2c74)
0xffff8bdb2c60   288  sub csp, jssp, #0x8 (8)
0xffff8bdb2c64   292  str lr, [jssp, #-8]!
0xffff8bdb2c68   296  ldr x16, pc+160 (addr 0x0000ffff8bdb2d08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdb2c6c   300  blr x16
0xffff8bdb2c70   304  ldr lr, [jssp], #8
0xffff8bdb2c74   308  ret
0xffff8bdb2c78   312  sub csp, jssp, #0x10 (16)
0xffff8bdb2c7c   316  stp fp, lr, [jssp, #-16]!
0xffff8bdb2c80   320  movz fp, #0xa00000000
0xffff8bdb2c84   324  sub csp, jssp, #0x8 (8)
0xffff8bdb2c88   328  str fp, [jssp, #-8]!
0xffff8bdb2c8c   332  add fp, jssp, #0x8 (8)
0xffff8bdb2c90   336  movz x13, #0x0
0xffff8bdb2c94   340  mov x16, lr
0xffff8bdb2c98   344  ldr x17, pc+120 (addr 0x0000ffff8bdb2d10)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdb2c9c   348  blr x17
0xffff8bdb2ca0   352  lsl x0, x10, #32
0xffff8bdb2ca4   356  movz x10, #0x0
0xffff8bdb2ca8   360  sub csp, jssp, #0x10 (16)
0xffff8bdb2cac   364  stp x10, x0, [jssp, #-16]!
0xffff8bdb2cb0   368  movz x0, #0x2
0xffff8bdb2cb4   372  movz x1, #0x5b88
0xffff8bdb2cb8   376  movk x1, #0xe2, lsl #16
0xffff8bdb2cbc   380  ldr x16, pc+92 (addr 0x0000ffff8bdb2d18)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdb2cc0   384  blr x16
0xffff8bdb2cc4   388  str x0, [jssp, #104]
0xffff8bdb2cc8   392  ldr x16, pc+88 (addr 0x0000ffff8bdb2d20)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdb2ccc   396  blr x16
0xffff8bdb2cd0   400  ldr lr, [jssp, #16]
0xffff8bdb2cd4   404  ldp xzr, fp, [jssp], #24
0xffff8bdb2cd8   408  b #-0x14c (addr 0xffff8bdb2b8c)
0xffff8bdb2cdc   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff8bdb2ce0   416  d63f03e0       constant
0xffff8bdb2ce4   420  d503201f       constant
0xffff8bdb2ce8   424  5f504259       constant
0xffff8bdb2cec   428  00000000       constant
0xffff8bdb2cf0   432  26c04241       constant
0xffff8bdb2cf4   436  00000000       constant
0xffff8bdb2cf8   440  8bd370c0       constant
0xffff8bdb2cfc   444  0000ffff       constant
0xffff8bdb2d00   448  8bd378a0       constant
0xffff8bdb2d04   452  0000ffff       constant
0xffff8bdb2d08   456  8bd38080       constant
0xffff8bdb2d0c   460  0000ffff       constant
0xffff8bdb2d10   464  8bd06820       constant
0xffff8bdb2d14   468  0000ffff       constant
0xffff8bdb2d18   472  8bd06260       constant
0xffff8bdb2d1c   476  0000ffff       constant
0xffff8bdb2d20   480  8bd068e0       constant
0xffff8bdb2d24   484  0000ffff       constant
0xffff8bdb2d28   488  movz x16, #0x0
0xffff8bdb2d2c   492  sub csp, jssp, #0x10 (16)
0xffff8bdb2d30   496  stp fp, lr, [jssp, #-16]!
0xffff8bdb2d34   500  bl #+0x24 (addr 0xffff8bdb2d58)
0xffff8bdb2d38   504  movz x16, #0x8
0xffff8bdb2d3c   508  sub csp, jssp, #0x10 (16)
0xffff8bdb2d40   512  stp fp, lr, [jssp, #-16]!
0xffff8bdb2d44   516  bl #+0x14 (addr 0xffff8bdb2d58)
0xffff8bdb2d48   520  movz x16, #0x10
0xffff8bdb2d4c   524  sub csp, jssp, #0x10 (16)
0xffff8bdb2d50   528  stp fp, lr, [jssp, #-16]!
0xffff8bdb2d54   532  bl #+0x4 (addr 0xffff8bdb2d58)
0xffff8bdb2d58   536  movz x17, #0xa00000000
0xffff8bdb2d5c   540  sub csp, jssp, #0x10 (16)
0xffff8bdb2d60   544  stp x17, cp, [jssp, #-16]!
0xffff8bdb2d64   548  add fp, jssp, #0x10 (16)
0xffff8bdb2d68   552  ldr x17, pc+24 (addr 0x0000ffff8bdb2d80)    ;; lazy deoptimization bailout 0
0xffff8bdb2d6c   556  add x17, x17, x16
0xffff8bdb2d70   560  br x17
0xffff8bdb2d74   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdb2d78   568  d63f03e0       constant
0xffff8bdb2d7c   572  d503201f       constant
0xffff8bdb2d80   576  8bb06000       constant
0xffff8bdb2d84   580  0000ffff       constant


Safepoints (size = 21)
0xffff8bdb2cc4   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bdb2b8c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bdb2ba4  embedded object  (0x26c04241 <undefined>)
0xffff8bdb2bf0  code target (STUB)  (0xffff8bd370c0)
0xffff8bdb2c30  code target (STUB)  (0xffff8bd378a0)
0xffff8bdb2c68  code target (STUB)  (0xffff8bd38080)
0xffff8bdb2c98  code target (STUB)  (0xffff8bd06820)
0xffff8bdb2cbc  code target (STUB)  (0xffff8bd06260)
0xffff8bdb2cc8  code target (STUB)  (0xffff8bd068e0)
0xffff8bdb2cdc  constant pool (size 76)
0xffff8bdb2d68  runtime entry
0xffff8bdb2d74  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff8bdb2b40     0  ldur x6, [x1, #7]
0xffff8bdb2b44     4  ldur w7, [x6, #11]
0xffff8bdb2b48     8  adds w8, w7, #0x3 (3)
0xffff8bdb2b4c    12  b.vs #+0x1dc (addr 0xffff8bdb2d28)
0xffff8bdb2b50    16  movz w16, #0x95ff
0xffff8bdb2b54    20  cmp w8, w16, lsl #1
0xffff8bdb2b58    24  b.hs #+0x1e0 (addr 0xffff8bdb2d38)
0xffff8bdb2b5c    28  lsl x9, x8, #32
0xffff8bdb2b60    32  lsl w10, w8, #3
0xffff8bdb2b64    36  add w10, w10, #0x10 (16)
0xffff8bdb2b68    40  sxtw x10, w10
0xffff8bdb2b6c    44  movz x11, #0xe2c0
0xffff8bdb2b70    48  movk x11, #0x2cb8, lsl #16
0xffff8bdb2b74    52  ldp x13, x16, [x11]
0xffff8bdb2b78    56  adds x12, x13, x10
0xffff8bdb2b7c    60  ccmp x12, x16, #nzCv, lo
0xffff8bdb2b80    64  b.hi #+0xf8 (addr 0xffff8bdb2c78)
0xffff8bdb2b84    68  str x12, [x11]
0xffff8bdb2b88    72  orr x13, x13, #0x1
0xffff8bdb2b8c    76  ldr x10, pc+348 (addr 0x0000ffff8bdb2ce8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bdb2b90    80  stur x10, [x13, #-1]
0xffff8bdb2b94    84  stur x9, [x13, #7]
0xffff8bdb2b98    88  cmp w7, w8
0xffff8bdb2b9c    92  b.ge #+0x18 (addr 0xffff8bdb2bb4)
0xffff8bdb2ba0    96  sub w8, w8, #0x1 (1)
0xffff8bdb2ba4   100  ldr x9, pc+332 (addr 0x0000ffff8bdb2cf0)    ;; object: 0x26c04241 <undefined>
0xffff8bdb2ba8   104  add x10, x13, #0xf (15)
0xffff8bdb2bac   108  str x9, [x10, w8, sxtw #3]
0xffff8bdb2bb0   112  b #-0x18 (addr 0xffff8bdb2b98)
0xffff8bdb2bb4   116  cmp w7, #0x0 (0)
0xffff8bdb2bb8   120  b.le #+0x1c (addr 0xffff8bdb2bd4)
0xffff8bdb2bbc   124  sub w7, w7, #0x1 (1)
0xffff8bdb2bc0   128  add x8, x6, #0xf (15)
0xffff8bdb2bc4   132  ldr x9, [x8, w7, sxtw #3]
0xffff8bdb2bc8   136  add x8, x13, #0xf (15)
0xffff8bdb2bcc   140  str x9, [x8, w7, sxtw #3]
0xffff8bdb2bd0   144  b #-0x1c (addr 0xffff8bdb2bb4)
0xffff8bdb2bd4   148  stur x13, [x1, #7]
0xffff8bdb2bd8   152  add x6, x1, #0x7 (7)
0xffff8bdb2bdc   156  and x13, x1, #0xfffffffffff00000
0xffff8bdb2be0   160  ldr x13, [x13, #8]
0xffff8bdb2be4   164  tbz w13, #2, #+0x18 (addr 0xffff8bdb2bfc)
0xffff8bdb2be8   168  sub csp, jssp, #0x8 (8)
0xffff8bdb2bec   172  str lr, [jssp, #-8]!
0xffff8bdb2bf0   176  ldr x16, pc+264 (addr 0x0000ffff8bdb2cf8)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff8bdb2bf4   180  blr x16
0xffff8bdb2bf8   184  ldr lr, [jssp], #8
0xffff8bdb2bfc   188  tbz w0, #0, #+0x14c (addr 0xffff8bdb2d48)
0xffff8bdb2c00   192  mov x2, x0
0xffff8bdb2c04   196  ldur x4, [x1, #7]
0xffff8bdb2c08   200  stur x2, [x4, #87]
0xffff8bdb2c0c   204  add x3, x4, #0x57 (87)
0xffff8bdb2c10   208  and x2, x2, #0xfffffffffff00000
0xffff8bdb2c14   212  ldr x2, [x2, #8]
0xffff8bdb2c18   216  tbz w2, #1, #+0x24 (addr 0xffff8bdb2c3c)
0xffff8bdb2c1c   220  and x2, x4, #0xfffffffffff00000
0xffff8bdb2c20   224  ldr x2, [x2, #8]
0xffff8bdb2c24   228  tbz w2, #2, #+0x18 (addr 0xffff8bdb2c3c)
0xffff8bdb2c28   232  sub csp, jssp, #0x8 (8)
0xffff8bdb2c2c   236  str lr, [jssp, #-8]!
0xffff8bdb2c30   240  ldr x16, pc+208 (addr 0x0000ffff8bdb2d00)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdb2c34   244  blr x16
0xffff8bdb2c38   248  ldr lr, [jssp], #8
0xffff8bdb2c3c   252  stur x5, [x1, #-1]
0xffff8bdb2c40   256  tbz w5, #0, #+0x34 (addr 0xffff8bdb2c74)
0xffff8bdb2c44   260  sub x2, x1, #0x1 (1)
0xffff8bdb2c48   264  and x5, x5, #0xfffffffffff00000
0xffff8bdb2c4c   268  ldr x5, [x5, #8]
0xffff8bdb2c50   272  tbz w5, #1, #+0x24 (addr 0xffff8bdb2c74)
0xffff8bdb2c54   276  and x5, x1, #0xfffffffffff00000
0xffff8bdb2c58   280  ldr x5, [x5, #8]
0xffff8bdb2c5c   284  tbz w5, #2, #+0x18 (addr 0xffff8bdb2c74)
0xffff8bdb2c60   288  sub csp, jssp, #0x8 (8)
0xffff8bdb2c64   292  str lr, [jssp, #-8]!
0xffff8bdb2c68   296  ldr x16, pc+160 (addr 0x0000ffff8bdb2d08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdb2c6c   300  blr x16
0xffff8bdb2c70   304  ldr lr, [jssp], #8
0xffff8bdb2c74   308  ret
0xffff8bdb2c78   312  sub csp, jssp, #0x10 (16)
0xffff8bdb2c7c   316  stp fp, lr, [jssp, #-16]!
0xffff8bdb2c80   320  movz fp, #0xa00000000
0xffff8bdb2c84   324  sub csp, jssp, #0x8 (8)
0xffff8bdb2c88   328  str fp, [jssp, #-8]!
0xffff8bdb2c8c   332  add fp, jssp, #0x8 (8)
0xffff8bdb2c90   336  movz x13, #0x0
0xffff8bdb2c94   340  mov x16, lr
0xffff8bdb2c98   344  ldr x17, pc+120 (addr 0x0000ffff8bdb2d10)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdb2c9c   348  blr x17
0xffff8bdb2ca0   352  lsl x0, x10, #32
0xffff8bdb2ca4   356  movz x10, #0x0
0xffff8bdb2ca8   360  sub csp, jssp, #0x10 (16)
0xffff8bdb2cac   364  stp x10, x0, [jssp, #-16]!
0xffff8bdb2cb0   368  movz x0, #0x2
0xffff8bdb2cb4   372  movz x1, #0x5b88
0xffff8bdb2cb8   376  movk x1, #0xe2, lsl #16
0xffff8bdb2cbc   380  ldr x16, pc+92 (addr 0x0000ffff8bdb2d18)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdb2cc0   384  blr x16
0xffff8bdb2cc4   388  str x0, [jssp, #104]
0xffff8bdb2cc8   392  ldr x16, pc+88 (addr 0x0000ffff8bdb2d20)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdb2ccc   396  blr x16
0xffff8bdb2cd0   400  ldr lr, [jssp, #16]
0xffff8bdb2cd4   404  ldp xzr, fp, [jssp], #24
0xffff8bdb2cd8   408  b #-0x14c (addr 0xffff8bdb2b8c)
0xffff8bdb2cdc   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff8bdb2ce0   416  d63f03e0       constant
0xffff8bdb2ce4   420  d503201f       constant
0xffff8bdb2ce8   424  5f504259       constant
0xffff8bdb2cec   428  00000000       constant
0xffff8bdb2cf0   432  26c04241       constant
0xffff8bdb2cf4   436  00000000       constant
0xffff8bdb2cf8   440  8bd370c0       constant
0xffff8bdb2cfc   444  0000ffff       constant
0xffff8bdb2d00   448  8bd378a0       constant
0xffff8bdb2d04   452  0000ffff       constant
0xffff8bdb2d08   456  8bd38080       constant
0xffff8bdb2d0c   460  0000ffff       constant
0xffff8bdb2d10   464  8bd06820       constant
0xffff8bdb2d14   468  0000ffff       constant
0xffff8bdb2d18   472  8bd06260       constant
0xffff8bdb2d1c   476  0000ffff       constant
0xffff8bdb2d20   480  8bd068e0       constant
0xffff8bdb2d24   484  0000ffff       constant
0xffff8bdb2d28   488  movz x16, #0x0
0xffff8bdb2d2c   492  sub csp, jssp, #0x10 (16)
0xffff8bdb2d30   496  stp fp, lr, [jssp, #-16]!
0xffff8bdb2d34   500  bl #+0x24 (addr 0xffff8bdb2d58)
0xffff8bdb2d38   504  movz x16, #0x8
0xffff8bdb2d3c   508  sub csp, jssp, #0x10 (16)
0xffff8bdb2d40   512  stp fp, lr, [jssp, #-16]!
0xffff8bdb2d44   516  bl #+0x14 (addr 0xffff8bdb2d58)
0xffff8bdb2d48   520  movz x16, #0x10
0xffff8bdb2d4c   524  sub csp, jssp, #0x10 (16)
0xffff8bdb2d50   528  stp fp, lr, [jssp, #-16]!
0xffff8bdb2d54   532  bl #+0x4 (addr 0xffff8bdb2d58)
0xffff8bdb2d58   536  movz x17, #0xa00000000
0xffff8bdb2d5c   540  sub csp, jssp, #0x10 (16)
0xffff8bdb2d60   544  stp x17, cp, [jssp, #-16]!
0xffff8bdb2d64   548  add fp, jssp, #0x10 (16)
0xffff8bdb2d68   552  ldr x17, pc+24 (addr 0x0000ffff8bdb2d80)    ;; lazy deoptimization bailout 0
0xffff8bdb2d6c   556  add x17, x17, x16
0xffff8bdb2d70   560  br x17
0xffff8bdb2d74   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdb2d78   568  d63f03e0       constant
0xffff8bdb2d7c   572  d503201f       constant
0xffff8bdb2d80   576  8bb06000       constant
0xffff8bdb2d84   580  0000ffff       constant


Safepoints (size = 21)
0xffff8bdb2cc4   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bdb2b8c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bdb2ba4  embedded object  (0x26c04241 <undefined>)
0xffff8bdb2bf0  code target (STUB)  (0xffff8bd370c0)
0xffff8bdb2c30  code target (STUB)  (0xffff8bd378a0)
0xffff8bdb2c68  code target (STUB)  (0xffff8bd38080)
0xffff8bdb2c98  code target (STUB)  (0xffff8bd06820)
0xffff8bdb2cbc  code target (STUB)  (0xffff8bd06260)
0xffff8bdb2cc8  code target (STUB)  (0xffff8bd068e0)
0xffff8bdb2cdc  constant pool (size 76)
0xffff8bdb2d68  runtime entry
0xffff8bdb2d74  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = module
compiler = unknown
Instructions (size = 184)
0xffff8bdb2e00     0  sub csp, jssp, #0x8 (8)
0xffff8bdb2e04     4  str x3, [jssp, #-8]!
0xffff8bdb2e08     8  sub csp, jssp, #0x8 (8)
0xffff8bdb2e0c    12  str x4, [jssp, #-8]!
0xffff8bdb2e10    16  ldr x3, pc+112 (addr 0x0000ffff8bdb2e80)    ;; object: 0x26c63e59 Cell for 0
0xffff8bdb2e14    20  ldur x3, [x3, #7]
0xffff8bdb2e18    24  cmp x3, #0x0 (0)
0xffff8bdb2e1c    28  b.ne #+0x44 (addr 0xffff8bdb2e60)
0xffff8bdb2e20    32  tbz w0, #0, #+0x40 (addr 0xffff8bdb2e60)
0xffff8bdb2e24    36  ldur x3, [x0, #-1]
0xffff8bdb2e28    40  ldr x4, pc+96 (addr 0x0000ffff8bdb2e88)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdb2e2c    44  ldur x4, [x4, #7]
0xffff8bdb2e30    48  cmp x3, x4
0xffff8bdb2e34    52  b.ne #+0x2c (addr 0xffff8bdb2e60)
0xffff8bdb2e38    56  ldr x5, pc+88 (addr 0x0000ffff8bdb2e90)    ;; object: 0x32707701 WeakCell for 0x5f52d189 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdb2e3c    60  ldur x5, [x5, #7]
0xffff8bdb2e40    64  tbz w5, #0, #+0x20 (addr 0xffff8bdb2e60)
0xffff8bdb2e44    68  ldursw x4, [x5, #15]
0xffff8bdb2e48    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdb2e60)
0xffff8bdb2e4c    76  ldr x4, [jssp], #8
0xffff8bdb2e50    80  ldr x3, [jssp], #8
0xffff8bdb2e54    84  ldr x2, pc+68 (addr 0x0000ffff8bdb2e98)    ;; object: 0x26cb9c61 <String[6]: module>
0xffff8bdb2e58    88  ldr x16, pc+72 (addr 0x0000ffff8bdb2ea0)    ;; code: HANDLER, StoreTransitionStub, minor: 327691
0xffff8bdb2e5c    92  br x16
0xffff8bdb2e60    96  ldr x2, pc+72 (addr 0x0000ffff8bdb2ea8)    ;; object: 0x26cb9c61 <String[6]: module>
0xffff8bdb2e64   100  ldr x4, [jssp], #8
0xffff8bdb2e68   104  ldr x3, [jssp], #8
0xffff8bdb2e6c   108  ldr x16, pc+68 (addr 0x0000ffff8bdb2eb0)    ;; code: BUILTIN
0xffff8bdb2e70   112  br x16
0xffff8bdb2e74   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdb2e78   120  d63f03e0       constant
0xffff8bdb2e7c   124  d503201f       constant
0xffff8bdb2e80   128  26c63e59       constant
0xffff8bdb2e84   132  00000000       constant
0xffff8bdb2e88   136  26cc22b1       constant
0xffff8bdb2e8c   140  00000000       constant
0xffff8bdb2e90   144  32707701       constant
0xffff8bdb2e94   148  00000000       constant
0xffff8bdb2e98   152  26cb9c61       constant
0xffff8bdb2e9c   156  00000000       constant
0xffff8bdb2ea0   160  8bdb2b40       constant
0xffff8bdb2ea4   164  0000ffff       constant
0xffff8bdb2ea8   168  26cb9c61       constant
0xffff8bdb2eac   172  00000000       constant
0xffff8bdb2eb0   176  8bd22420       constant
0xffff8bdb2eb4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdb2e10  embedded object  (0x26c63e59 Cell for 0)
0xffff8bdb2e28  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdb2e38  embedded object  (0x32707701 WeakCell for 0x5f52d189 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdb2e54  embedded object  (0x26cb9c61 <String[6]: module>)
0xffff8bdb2e58  code target (HANDLER)  (0xffff8bdb2b40)
0xffff8bdb2e60  embedded object  (0x26cb9c61 <String[6]: module>)
0xffff8bdb2e6c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdb2e74  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bdb4c80     0  tbz w0, #0, #+0x98 (addr 0xffff8bdb4d18)
0xffff8bdb4c84     4  mov x2, x0
0xffff8bdb4c88     8  ldur x4, [x1, #7]
0xffff8bdb4c8c    12  stur x2, [x4, #95]
0xffff8bdb4c90    16  add x3, x4, #0x5f (95)
0xffff8bdb4c94    20  and x2, x2, #0xfffffffffff00000
0xffff8bdb4c98    24  ldr x2, [x2, #8]
0xffff8bdb4c9c    28  tbz w2, #1, #+0x24 (addr 0xffff8bdb4cc0)
0xffff8bdb4ca0    32  and x2, x4, #0xfffffffffff00000
0xffff8bdb4ca4    36  ldr x2, [x2, #8]
0xffff8bdb4ca8    40  tbz w2, #2, #+0x18 (addr 0xffff8bdb4cc0)
0xffff8bdb4cac    44  sub csp, jssp, #0x8 (8)
0xffff8bdb4cb0    48  str lr, [jssp, #-8]!
0xffff8bdb4cb4    52  ldr x16, pc+84 (addr 0x0000ffff8bdb4d08)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdb4cb8    56  blr x16
0xffff8bdb4cbc    60  ldr lr, [jssp], #8
0xffff8bdb4cc0    64  stur x5, [x1, #-1]
0xffff8bdb4cc4    68  tbz w5, #0, #+0x34 (addr 0xffff8bdb4cf8)
0xffff8bdb4cc8    72  sub x2, x1, #0x1 (1)
0xffff8bdb4ccc    76  and x5, x5, #0xfffffffffff00000
0xffff8bdb4cd0    80  ldr x5, [x5, #8]
0xffff8bdb4cd4    84  tbz w5, #1, #+0x24 (addr 0xffff8bdb4cf8)
0xffff8bdb4cd8    88  and x5, x1, #0xfffffffffff00000
0xffff8bdb4cdc    92  ldr x5, [x5, #8]
0xffff8bdb4ce0    96  tbz w5, #2, #+0x18 (addr 0xffff8bdb4cf8)
0xffff8bdb4ce4   100  sub csp, jssp, #0x8 (8)
0xffff8bdb4ce8   104  str lr, [jssp, #-8]!
0xffff8bdb4cec   108  ldr x16, pc+36 (addr 0x0000ffff8bdb4d10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdb4cf0   112  blr x16
0xffff8bdb4cf4   116  ldr lr, [jssp], #8
0xffff8bdb4cf8   120  ret
0xffff8bdb4cfc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bdb4d00   128  d63f03e0       constant
0xffff8bdb4d04   132  d503201f       constant
0xffff8bdb4d08   136  8bd378a0       constant
0xffff8bdb4d0c   140  0000ffff       constant
0xffff8bdb4d10   144  8bd38080       constant
0xffff8bdb4d14   148  0000ffff       constant
0xffff8bdb4d18   152  movz x16, #0x0
0xffff8bdb4d1c   156  sub csp, jssp, #0x10 (16)
0xffff8bdb4d20   160  stp fp, lr, [jssp, #-16]!
0xffff8bdb4d24   164  bl #+0x4 (addr 0xffff8bdb4d28)
0xffff8bdb4d28   168  movz x17, #0xa00000000
0xffff8bdb4d2c   172  sub csp, jssp, #0x10 (16)
0xffff8bdb4d30   176  stp x17, cp, [jssp, #-16]!
0xffff8bdb4d34   180  add fp, jssp, #0x10 (16)
0xffff8bdb4d38   184  ldr x17, pc+24 (addr 0x0000ffff8bdb4d50)    ;; lazy deoptimization bailout 0
0xffff8bdb4d3c   188  add x17, x17, x16
0xffff8bdb4d40   192  br x17
0xffff8bdb4d44   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdb4d48   200  d63f03e0       constant
0xffff8bdb4d4c   204  d503201f       constant
0xffff8bdb4d50   208  8bb06000       constant
0xffff8bdb4d54   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdb4cb4  code target (STUB)  (0xffff8bd378a0)
0xffff8bdb4cec  code target (STUB)  (0xffff8bd38080)
0xffff8bdb4cfc  constant pool (size 28)
0xffff8bdb4d38  runtime entry
0xffff8bdb4d44  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bdb4c80     0  tbz w0, #0, #+0x98 (addr 0xffff8bdb4d18)
0xffff8bdb4c84     4  mov x2, x0
0xffff8bdb4c88     8  ldur x4, [x1, #7]
0xffff8bdb4c8c    12  stur x2, [x4, #95]
0xffff8bdb4c90    16  add x3, x4, #0x5f (95)
0xffff8bdb4c94    20  and x2, x2, #0xfffffffffff00000
0xffff8bdb4c98    24  ldr x2, [x2, #8]
0xffff8bdb4c9c    28  tbz w2, #1, #+0x24 (addr 0xffff8bdb4cc0)
0xffff8bdb4ca0    32  and x2, x4, #0xfffffffffff00000
0xffff8bdb4ca4    36  ldr x2, [x2, #8]
0xffff8bdb4ca8    40  tbz w2, #2, #+0x18 (addr 0xffff8bdb4cc0)
0xffff8bdb4cac    44  sub csp, jssp, #0x8 (8)
0xffff8bdb4cb0    48  str lr, [jssp, #-8]!
0xffff8bdb4cb4    52  ldr x16, pc+84 (addr 0x0000ffff8bdb4d08)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdb4cb8    56  blr x16
0xffff8bdb4cbc    60  ldr lr, [jssp], #8
0xffff8bdb4cc0    64  stur x5, [x1, #-1]
0xffff8bdb4cc4    68  tbz w5, #0, #+0x34 (addr 0xffff8bdb4cf8)
0xffff8bdb4cc8    72  sub x2, x1, #0x1 (1)
0xffff8bdb4ccc    76  and x5, x5, #0xfffffffffff00000
0xffff8bdb4cd0    80  ldr x5, [x5, #8]
0xffff8bdb4cd4    84  tbz w5, #1, #+0x24 (addr 0xffff8bdb4cf8)
0xffff8bdb4cd8    88  and x5, x1, #0xfffffffffff00000
0xffff8bdb4cdc    92  ldr x5, [x5, #8]
0xffff8bdb4ce0    96  tbz w5, #2, #+0x18 (addr 0xffff8bdb4cf8)
0xffff8bdb4ce4   100  sub csp, jssp, #0x8 (8)
0xffff8bdb4ce8   104  str lr, [jssp, #-8]!
0xffff8bdb4cec   108  ldr x16, pc+36 (addr 0x0000ffff8bdb4d10)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdb4cf0   112  blr x16
0xffff8bdb4cf4   116  ldr lr, [jssp], #8
0xffff8bdb4cf8   120  ret
0xffff8bdb4cfc   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bdb4d00   128  d63f03e0       constant
0xffff8bdb4d04   132  d503201f       constant
0xffff8bdb4d08   136  8bd378a0       constant
0xffff8bdb4d0c   140  0000ffff       constant
0xffff8bdb4d10   144  8bd38080       constant
0xffff8bdb4d14   148  0000ffff       constant
0xffff8bdb4d18   152  movz x16, #0x0
0xffff8bdb4d1c   156  sub csp, jssp, #0x10 (16)
0xffff8bdb4d20   160  stp fp, lr, [jssp, #-16]!
0xffff8bdb4d24   164  bl #+0x4 (addr 0xffff8bdb4d28)
0xffff8bdb4d28   168  movz x17, #0xa00000000
0xffff8bdb4d2c   172  sub csp, jssp, #0x10 (16)
0xffff8bdb4d30   176  stp x17, cp, [jssp, #-16]!
0xffff8bdb4d34   180  add fp, jssp, #0x10 (16)
0xffff8bdb4d38   184  ldr x17, pc+24 (addr 0x0000ffff8bdb4d50)    ;; lazy deoptimization bailout 0
0xffff8bdb4d3c   188  add x17, x17, x16
0xffff8bdb4d40   192  br x17
0xffff8bdb4d44   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdb4d48   200  d63f03e0       constant
0xffff8bdb4d4c   204  d503201f       constant
0xffff8bdb4d50   208  8bb06000       constant
0xffff8bdb4d54   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdb4cb4  code target (STUB)  (0xffff8bd378a0)
0xffff8bdb4cec  code target (STUB)  (0xffff8bd38080)
0xffff8bdb4cfc  constant pool (size 28)
0xffff8bdb4d38  runtime entry
0xffff8bdb4d44  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/module
compiler = unknown
Instructions (size = 184)
0xffff8bdb4dc0     0  sub csp, jssp, #0x8 (8)
0xffff8bdb4dc4     4  str x3, [jssp, #-8]!
0xffff8bdb4dc8     8  sub csp, jssp, #0x8 (8)
0xffff8bdb4dcc    12  str x4, [jssp, #-8]!
0xffff8bdb4dd0    16  ldr x3, pc+112 (addr 0x0000ffff8bdb4e40)    ;; object: 0x26c63e59 Cell for 0
0xffff8bdb4dd4    20  ldur x3, [x3, #7]
0xffff8bdb4dd8    24  cmp x3, #0x0 (0)
0xffff8bdb4ddc    28  b.ne #+0x44 (addr 0xffff8bdb4e20)
0xffff8bdb4de0    32  tbz w0, #0, #+0x40 (addr 0xffff8bdb4e20)
0xffff8bdb4de4    36  ldur x3, [x0, #-1]
0xffff8bdb4de8    40  ldr x4, pc+96 (addr 0x0000ffff8bdb4e48)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdb4dec    44  ldur x4, [x4, #7]
0xffff8bdb4df0    48  cmp x3, x4
0xffff8bdb4df4    52  b.ne #+0x2c (addr 0xffff8bdb4e20)
0xffff8bdb4df8    56  ldr x5, pc+88 (addr 0x0000ffff8bdb4e50)    ;; object: 0x3270a861 WeakCell for 0x5f52d1e1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdb4dfc    60  ldur x5, [x5, #7]
0xffff8bdb4e00    64  tbz w5, #0, #+0x20 (addr 0xffff8bdb4e20)
0xffff8bdb4e04    68  ldursw x4, [x5, #15]
0xffff8bdb4e08    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdb4e20)
0xffff8bdb4e0c    76  ldr x4, [jssp], #8
0xffff8bdb4e10    80  ldr x3, [jssp], #8
0xffff8bdb4e14    84  ldr x2, pc+68 (addr 0x0000ffff8bdb4e58)    ;; object: 0x26cb9b81 <String[15]: internal/module>
0xffff8bdb4e18    88  ldr x16, pc+72 (addr 0x0000ffff8bdb4e60)    ;; code: HANDLER, StoreTransitionStub, minor: 196620
0xffff8bdb4e1c    92  br x16
0xffff8bdb4e20    96  ldr x2, pc+72 (addr 0x0000ffff8bdb4e68)    ;; object: 0x26cb9b81 <String[15]: internal/module>
0xffff8bdb4e24   100  ldr x4, [jssp], #8
0xffff8bdb4e28   104  ldr x3, [jssp], #8
0xffff8bdb4e2c   108  ldr x16, pc+68 (addr 0x0000ffff8bdb4e70)    ;; code: BUILTIN
0xffff8bdb4e30   112  br x16
0xffff8bdb4e34   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdb4e38   120  d63f03e0       constant
0xffff8bdb4e3c   124  d503201f       constant
0xffff8bdb4e40   128  26c63e59       constant
0xffff8bdb4e44   132  00000000       constant
0xffff8bdb4e48   136  26cc22b1       constant
0xffff8bdb4e4c   140  00000000       constant
0xffff8bdb4e50   144  3270a861       constant
0xffff8bdb4e54   148  00000000       constant
0xffff8bdb4e58   152  26cb9b81       constant
0xffff8bdb4e5c   156  00000000       constant
0xffff8bdb4e60   160  8bdb4c80       constant
0xffff8bdb4e64   164  0000ffff       constant
0xffff8bdb4e68   168  26cb9b81       constant
0xffff8bdb4e6c   172  00000000       constant
0xffff8bdb4e70   176  8bd22420       constant
0xffff8bdb4e74   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdb4dd0  embedded object  (0x26c63e59 Cell for 0)
0xffff8bdb4de8  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdb4df8  embedded object  (0x3270a861 WeakCell for 0x5f52d1e1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdb4e14  embedded object  (0x26cb9b81 <String[15]: internal/module>)
0xffff8bdb4e18  code target (HANDLER)  (0xffff8bdb4c80)
0xffff8bdb4e20  embedded object  (0x26cb9b81 <String[15]: internal/module>)
0xffff8bdb4e2c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdb4e34  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bdb53c0     0  tbz w0, #0, #+0x98 (addr 0xffff8bdb5458)
0xffff8bdb53c4     4  mov x2, x0
0xffff8bdb53c8     8  ldur x4, [x1, #7]
0xffff8bdb53cc    12  stur x2, [x4, #103]
0xffff8bdb53d0    16  add x3, x4, #0x67 (103)
0xffff8bdb53d4    20  and x2, x2, #0xfffffffffff00000
0xffff8bdb53d8    24  ldr x2, [x2, #8]
0xffff8bdb53dc    28  tbz w2, #1, #+0x24 (addr 0xffff8bdb5400)
0xffff8bdb53e0    32  and x2, x4, #0xfffffffffff00000
0xffff8bdb53e4    36  ldr x2, [x2, #8]
0xffff8bdb53e8    40  tbz w2, #2, #+0x18 (addr 0xffff8bdb5400)
0xffff8bdb53ec    44  sub csp, jssp, #0x8 (8)
0xffff8bdb53f0    48  str lr, [jssp, #-8]!
0xffff8bdb53f4    52  ldr x16, pc+84 (addr 0x0000ffff8bdb5448)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdb53f8    56  blr x16
0xffff8bdb53fc    60  ldr lr, [jssp], #8
0xffff8bdb5400    64  stur x5, [x1, #-1]
0xffff8bdb5404    68  tbz w5, #0, #+0x34 (addr 0xffff8bdb5438)
0xffff8bdb5408    72  sub x2, x1, #0x1 (1)
0xffff8bdb540c    76  and x5, x5, #0xfffffffffff00000
0xffff8bdb5410    80  ldr x5, [x5, #8]
0xffff8bdb5414    84  tbz w5, #1, #+0x24 (addr 0xffff8bdb5438)
0xffff8bdb5418    88  and x5, x1, #0xfffffffffff00000
0xffff8bdb541c    92  ldr x5, [x5, #8]
0xffff8bdb5420    96  tbz w5, #2, #+0x18 (addr 0xffff8bdb5438)
0xffff8bdb5424   100  sub csp, jssp, #0x8 (8)
0xffff8bdb5428   104  str lr, [jssp, #-8]!
0xffff8bdb542c   108  ldr x16, pc+36 (addr 0x0000ffff8bdb5450)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdb5430   112  blr x16
0xffff8bdb5434   116  ldr lr, [jssp], #8
0xffff8bdb5438   120  ret
0xffff8bdb543c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bdb5440   128  d63f03e0       constant
0xffff8bdb5444   132  d503201f       constant
0xffff8bdb5448   136  8bd378a0       constant
0xffff8bdb544c   140  0000ffff       constant
0xffff8bdb5450   144  8bd38080       constant
0xffff8bdb5454   148  0000ffff       constant
0xffff8bdb5458   152  movz x16, #0x0
0xffff8bdb545c   156  sub csp, jssp, #0x10 (16)
0xffff8bdb5460   160  stp fp, lr, [jssp, #-16]!
0xffff8bdb5464   164  bl #+0x4 (addr 0xffff8bdb5468)
0xffff8bdb5468   168  movz x17, #0xa00000000
0xffff8bdb546c   172  sub csp, jssp, #0x10 (16)
0xffff8bdb5470   176  stp x17, cp, [jssp, #-16]!
0xffff8bdb5474   180  add fp, jssp, #0x10 (16)
0xffff8bdb5478   184  ldr x17, pc+24 (addr 0x0000ffff8bdb5490)    ;; lazy deoptimization bailout 0
0xffff8bdb547c   188  add x17, x17, x16
0xffff8bdb5480   192  br x17
0xffff8bdb5484   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdb5488   200  d63f03e0       constant
0xffff8bdb548c   204  d503201f       constant
0xffff8bdb5490   208  8bb06000       constant
0xffff8bdb5494   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdb53f4  code target (STUB)  (0xffff8bd378a0)
0xffff8bdb542c  code target (STUB)  (0xffff8bd38080)
0xffff8bdb543c  constant pool (size 28)
0xffff8bdb5478  runtime entry
0xffff8bdb5484  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bdb53c0     0  tbz w0, #0, #+0x98 (addr 0xffff8bdb5458)
0xffff8bdb53c4     4  mov x2, x0
0xffff8bdb53c8     8  ldur x4, [x1, #7]
0xffff8bdb53cc    12  stur x2, [x4, #103]
0xffff8bdb53d0    16  add x3, x4, #0x67 (103)
0xffff8bdb53d4    20  and x2, x2, #0xfffffffffff00000
0xffff8bdb53d8    24  ldr x2, [x2, #8]
0xffff8bdb53dc    28  tbz w2, #1, #+0x24 (addr 0xffff8bdb5400)
0xffff8bdb53e0    32  and x2, x4, #0xfffffffffff00000
0xffff8bdb53e4    36  ldr x2, [x2, #8]
0xffff8bdb53e8    40  tbz w2, #2, #+0x18 (addr 0xffff8bdb5400)
0xffff8bdb53ec    44  sub csp, jssp, #0x8 (8)
0xffff8bdb53f0    48  str lr, [jssp, #-8]!
0xffff8bdb53f4    52  ldr x16, pc+84 (addr 0x0000ffff8bdb5448)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdb53f8    56  blr x16
0xffff8bdb53fc    60  ldr lr, [jssp], #8
0xffff8bdb5400    64  stur x5, [x1, #-1]
0xffff8bdb5404    68  tbz w5, #0, #+0x34 (addr 0xffff8bdb5438)
0xffff8bdb5408    72  sub x2, x1, #0x1 (1)
0xffff8bdb540c    76  and x5, x5, #0xfffffffffff00000
0xffff8bdb5410    80  ldr x5, [x5, #8]
0xffff8bdb5414    84  tbz w5, #1, #+0x24 (addr 0xffff8bdb5438)
0xffff8bdb5418    88  and x5, x1, #0xfffffffffff00000
0xffff8bdb541c    92  ldr x5, [x5, #8]
0xffff8bdb5420    96  tbz w5, #2, #+0x18 (addr 0xffff8bdb5438)
0xffff8bdb5424   100  sub csp, jssp, #0x8 (8)
0xffff8bdb5428   104  str lr, [jssp, #-8]!
0xffff8bdb542c   108  ldr x16, pc+36 (addr 0x0000ffff8bdb5450)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdb5430   112  blr x16
0xffff8bdb5434   116  ldr lr, [jssp], #8
0xffff8bdb5438   120  ret
0xffff8bdb543c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bdb5440   128  d63f03e0       constant
0xffff8bdb5444   132  d503201f       constant
0xffff8bdb5448   136  8bd378a0       constant
0xffff8bdb544c   140  0000ffff       constant
0xffff8bdb5450   144  8bd38080       constant
0xffff8bdb5454   148  0000ffff       constant
0xffff8bdb5458   152  movz x16, #0x0
0xffff8bdb545c   156  sub csp, jssp, #0x10 (16)
0xffff8bdb5460   160  stp fp, lr, [jssp, #-16]!
0xffff8bdb5464   164  bl #+0x4 (addr 0xffff8bdb5468)
0xffff8bdb5468   168  movz x17, #0xa00000000
0xffff8bdb546c   172  sub csp, jssp, #0x10 (16)
0xffff8bdb5470   176  stp x17, cp, [jssp, #-16]!
0xffff8bdb5474   180  add fp, jssp, #0x10 (16)
0xffff8bdb5478   184  ldr x17, pc+24 (addr 0x0000ffff8bdb5490)    ;; lazy deoptimization bailout 0
0xffff8bdb547c   188  add x17, x17, x16
0xffff8bdb5480   192  br x17
0xffff8bdb5484   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdb5488   200  d63f03e0       constant
0xffff8bdb548c   204  d503201f       constant
0xffff8bdb5490   208  8bb06000       constant
0xffff8bdb5494   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdb53f4  code target (STUB)  (0xffff8bd378a0)
0xffff8bdb542c  code target (STUB)  (0xffff8bd38080)
0xffff8bdb543c  constant pool (size 28)
0xffff8bdb5478  runtime entry
0xffff8bdb5484  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = vm
compiler = unknown
Instructions (size = 184)
0xffff8bdb5500     0  sub csp, jssp, #0x8 (8)
0xffff8bdb5504     4  str x3, [jssp, #-8]!
0xffff8bdb5508     8  sub csp, jssp, #0x8 (8)
0xffff8bdb550c    12  str x4, [jssp, #-8]!
0xffff8bdb5510    16  ldr x3, pc+112 (addr 0x0000ffff8bdb5580)    ;; object: 0x26c63e59 Cell for 0
0xffff8bdb5514    20  ldur x3, [x3, #7]
0xffff8bdb5518    24  cmp x3, #0x0 (0)
0xffff8bdb551c    28  b.ne #+0x44 (addr 0xffff8bdb5560)
0xffff8bdb5520    32  tbz w0, #0, #+0x40 (addr 0xffff8bdb5560)
0xffff8bdb5524    36  ldur x3, [x0, #-1]
0xffff8bdb5528    40  ldr x4, pc+96 (addr 0x0000ffff8bdb5588)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdb552c    44  ldur x4, [x4, #7]
0xffff8bdb5530    48  cmp x3, x4
0xffff8bdb5534    52  b.ne #+0x2c (addr 0xffff8bdb5560)
0xffff8bdb5538    56  ldr x5, pc+88 (addr 0x0000ffff8bdb5590)    ;; object: 0x3270b391 WeakCell for 0x5f52d3f1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdb553c    60  ldur x5, [x5, #7]
0xffff8bdb5540    64  tbz w5, #0, #+0x20 (addr 0xffff8bdb5560)
0xffff8bdb5544    68  ldursw x4, [x5, #15]
0xffff8bdb5548    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdb5560)
0xffff8bdb554c    76  ldr x4, [jssp], #8
0xffff8bdb5550    80  ldr x3, [jssp], #8
0xffff8bdb5554    84  ldr x2, pc+68 (addr 0x0000ffff8bdb5598)    ;; object: 0x26cb9cb1 <String[2]: vm>
0xffff8bdb5558    88  ldr x16, pc+72 (addr 0x0000ffff8bdb55a0)    ;; code: HANDLER, StoreTransitionStub, minor: 196621
0xffff8bdb555c    92  br x16
0xffff8bdb5560    96  ldr x2, pc+72 (addr 0x0000ffff8bdb55a8)    ;; object: 0x26cb9cb1 <String[2]: vm>
0xffff8bdb5564   100  ldr x4, [jssp], #8
0xffff8bdb5568   104  ldr x3, [jssp], #8
0xffff8bdb556c   108  ldr x16, pc+68 (addr 0x0000ffff8bdb55b0)    ;; code: BUILTIN
0xffff8bdb5570   112  br x16
0xffff8bdb5574   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdb5578   120  d63f03e0       constant
0xffff8bdb557c   124  d503201f       constant
0xffff8bdb5580   128  26c63e59       constant
0xffff8bdb5584   132  00000000       constant
0xffff8bdb5588   136  26cc22b1       constant
0xffff8bdb558c   140  00000000       constant
0xffff8bdb5590   144  3270b391       constant
0xffff8bdb5594   148  00000000       constant
0xffff8bdb5598   152  26cb9cb1       constant
0xffff8bdb559c   156  00000000       constant
0xffff8bdb55a0   160  8bdb53c0       constant
0xffff8bdb55a4   164  0000ffff       constant
0xffff8bdb55a8   168  26cb9cb1       constant
0xffff8bdb55ac   172  00000000       constant
0xffff8bdb55b0   176  8bd22420       constant
0xffff8bdb55b4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdb5510  embedded object  (0x26c63e59 Cell for 0)
0xffff8bdb5528  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdb5538  embedded object  (0x3270b391 WeakCell for 0x5f52d3f1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdb5554  embedded object  (0x26cb9cb1 <String[2]: vm>)
0xffff8bdb5558  code target (HANDLER)  (0xffff8bdb53c0)
0xffff8bdb5560  embedded object  (0x26cb9cb1 <String[2]: vm>)
0xffff8bdb556c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdb5574  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff8bdb6040     0  ldur x6, [x1, #7]
0xffff8bdb6044     4  ldur w7, [x6, #11]
0xffff8bdb6048     8  adds w8, w7, #0x3 (3)
0xffff8bdb604c    12  b.vs #+0x1dc (addr 0xffff8bdb6228)
0xffff8bdb6050    16  movz w16, #0x95ff
0xffff8bdb6054    20  cmp w8, w16, lsl #1
0xffff8bdb6058    24  b.hs #+0x1e0 (addr 0xffff8bdb6238)
0xffff8bdb605c    28  lsl x9, x8, #32
0xffff8bdb6060    32  lsl w10, w8, #3
0xffff8bdb6064    36  add w10, w10, #0x10 (16)
0xffff8bdb6068    40  sxtw x10, w10
0xffff8bdb606c    44  movz x11, #0xe2c0
0xffff8bdb6070    48  movk x11, #0x2cb8, lsl #16
0xffff8bdb6074    52  ldp x13, x16, [x11]
0xffff8bdb6078    56  adds x12, x13, x10
0xffff8bdb607c    60  ccmp x12, x16, #nzCv, lo
0xffff8bdb6080    64  b.hi #+0xf8 (addr 0xffff8bdb6178)
0xffff8bdb6084    68  str x12, [x11]
0xffff8bdb6088    72  orr x13, x13, #0x1
0xffff8bdb608c    76  ldr x10, pc+348 (addr 0x0000ffff8bdb61e8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bdb6090    80  stur x10, [x13, #-1]
0xffff8bdb6094    84  stur x9, [x13, #7]
0xffff8bdb6098    88  cmp w7, w8
0xffff8bdb609c    92  b.ge #+0x18 (addr 0xffff8bdb60b4)
0xffff8bdb60a0    96  sub w8, w8, #0x1 (1)
0xffff8bdb60a4   100  ldr x9, pc+332 (addr 0x0000ffff8bdb61f0)    ;; object: 0x26c04241 <undefined>
0xffff8bdb60a8   104  add x10, x13, #0xf (15)
0xffff8bdb60ac   108  str x9, [x10, w8, sxtw #3]
0xffff8bdb60b0   112  b #-0x18 (addr 0xffff8bdb6098)
0xffff8bdb60b4   116  cmp w7, #0x0 (0)
0xffff8bdb60b8   120  b.le #+0x1c (addr 0xffff8bdb60d4)
0xffff8bdb60bc   124  sub w7, w7, #0x1 (1)
0xffff8bdb60c0   128  add x8, x6, #0xf (15)
0xffff8bdb60c4   132  ldr x9, [x8, w7, sxtw #3]
0xffff8bdb60c8   136  add x8, x13, #0xf (15)
0xffff8bdb60cc   140  str x9, [x8, w7, sxtw #3]
0xffff8bdb60d0   144  b #-0x1c (addr 0xffff8bdb60b4)
0xffff8bdb60d4   148  stur x13, [x1, #7]
0xffff8bdb60d8   152  add x6, x1, #0x7 (7)
0xffff8bdb60dc   156  and x13, x1, #0xfffffffffff00000
0xffff8bdb60e0   160  ldr x13, [x13, #8]
0xffff8bdb60e4   164  tbz w13, #2, #+0x18 (addr 0xffff8bdb60fc)
0xffff8bdb60e8   168  sub csp, jssp, #0x8 (8)
0xffff8bdb60ec   172  str lr, [jssp, #-8]!
0xffff8bdb60f0   176  ldr x16, pc+264 (addr 0x0000ffff8bdb61f8)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff8bdb60f4   180  blr x16
0xffff8bdb60f8   184  ldr lr, [jssp], #8
0xffff8bdb60fc   188  tbz w0, #0, #+0x14c (addr 0xffff8bdb6248)
0xffff8bdb6100   192  mov x2, x0
0xffff8bdb6104   196  ldur x4, [x1, #7]
0xffff8bdb6108   200  stur x2, [x4, #111]
0xffff8bdb610c   204  add x3, x4, #0x6f (111)
0xffff8bdb6110   208  and x2, x2, #0xfffffffffff00000
0xffff8bdb6114   212  ldr x2, [x2, #8]
0xffff8bdb6118   216  tbz w2, #1, #+0x24 (addr 0xffff8bdb613c)
0xffff8bdb611c   220  and x2, x4, #0xfffffffffff00000
0xffff8bdb6120   224  ldr x2, [x2, #8]
0xffff8bdb6124   228  tbz w2, #2, #+0x18 (addr 0xffff8bdb613c)
0xffff8bdb6128   232  sub csp, jssp, #0x8 (8)
0xffff8bdb612c   236  str lr, [jssp, #-8]!
0xffff8bdb6130   240  ldr x16, pc+208 (addr 0x0000ffff8bdb6200)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdb6134   244  blr x16
0xffff8bdb6138   248  ldr lr, [jssp], #8
0xffff8bdb613c   252  stur x5, [x1, #-1]
0xffff8bdb6140   256  tbz w5, #0, #+0x34 (addr 0xffff8bdb6174)
0xffff8bdb6144   260  sub x2, x1, #0x1 (1)
0xffff8bdb6148   264  and x5, x5, #0xfffffffffff00000
0xffff8bdb614c   268  ldr x5, [x5, #8]
0xffff8bdb6150   272  tbz w5, #1, #+0x24 (addr 0xffff8bdb6174)
0xffff8bdb6154   276  and x5, x1, #0xfffffffffff00000
0xffff8bdb6158   280  ldr x5, [x5, #8]
0xffff8bdb615c   284  tbz w5, #2, #+0x18 (addr 0xffff8bdb6174)
0xffff8bdb6160   288  sub csp, jssp, #0x8 (8)
0xffff8bdb6164   292  str lr, [jssp, #-8]!
0xffff8bdb6168   296  ldr x16, pc+160 (addr 0x0000ffff8bdb6208)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdb616c   300  blr x16
0xffff8bdb6170   304  ldr lr, [jssp], #8
0xffff8bdb6174   308  ret
0xffff8bdb6178   312  sub csp, jssp, #0x10 (16)
0xffff8bdb617c   316  stp fp, lr, [jssp, #-16]!
0xffff8bdb6180   320  movz fp, #0xa00000000
0xffff8bdb6184   324  sub csp, jssp, #0x8 (8)
0xffff8bdb6188   328  str fp, [jssp, #-8]!
0xffff8bdb618c   332  add fp, jssp, #0x8 (8)
0xffff8bdb6190   336  movz x13, #0x0
0xffff8bdb6194   340  mov x16, lr
0xffff8bdb6198   344  ldr x17, pc+120 (addr 0x0000ffff8bdb6210)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdb619c   348  blr x17
0xffff8bdb61a0   352  lsl x0, x10, #32
0xffff8bdb61a4   356  movz x10, #0x0
0xffff8bdb61a8   360  sub csp, jssp, #0x10 (16)
0xffff8bdb61ac   364  stp x10, x0, [jssp, #-16]!
0xffff8bdb61b0   368  movz x0, #0x2
0xffff8bdb61b4   372  movz x1, #0x5b88
0xffff8bdb61b8   376  movk x1, #0xe2, lsl #16
0xffff8bdb61bc   380  ldr x16, pc+92 (addr 0x0000ffff8bdb6218)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdb61c0   384  blr x16
0xffff8bdb61c4   388  str x0, [jssp, #104]
0xffff8bdb61c8   392  ldr x16, pc+88 (addr 0x0000ffff8bdb6220)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdb61cc   396  blr x16
0xffff8bdb61d0   400  ldr lr, [jssp, #16]
0xffff8bdb61d4   404  ldp xzr, fp, [jssp], #24
0xffff8bdb61d8   408  b #-0x14c (addr 0xffff8bdb608c)
0xffff8bdb61dc   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff8bdb61e0   416  d63f03e0       constant
0xffff8bdb61e4   420  d503201f       constant
0xffff8bdb61e8   424  5f504259       constant
0xffff8bdb61ec   428  00000000       constant
0xffff8bdb61f0   432  26c04241       constant
0xffff8bdb61f4   436  00000000       constant
0xffff8bdb61f8   440  8bd370c0       constant
0xffff8bdb61fc   444  0000ffff       constant
0xffff8bdb6200   448  8bd378a0       constant
0xffff8bdb6204   452  0000ffff       constant
0xffff8bdb6208   456  8bd38080       constant
0xffff8bdb620c   460  0000ffff       constant
0xffff8bdb6210   464  8bd06820       constant
0xffff8bdb6214   468  0000ffff       constant
0xffff8bdb6218   472  8bd06260       constant
0xffff8bdb621c   476  0000ffff       constant
0xffff8bdb6220   480  8bd068e0       constant
0xffff8bdb6224   484  0000ffff       constant
0xffff8bdb6228   488  movz x16, #0x0
0xffff8bdb622c   492  sub csp, jssp, #0x10 (16)
0xffff8bdb6230   496  stp fp, lr, [jssp, #-16]!
0xffff8bdb6234   500  bl #+0x24 (addr 0xffff8bdb6258)
0xffff8bdb6238   504  movz x16, #0x8
0xffff8bdb623c   508  sub csp, jssp, #0x10 (16)
0xffff8bdb6240   512  stp fp, lr, [jssp, #-16]!
0xffff8bdb6244   516  bl #+0x14 (addr 0xffff8bdb6258)
0xffff8bdb6248   520  movz x16, #0x10
0xffff8bdb624c   524  sub csp, jssp, #0x10 (16)
0xffff8bdb6250   528  stp fp, lr, [jssp, #-16]!
0xffff8bdb6254   532  bl #+0x4 (addr 0xffff8bdb6258)
0xffff8bdb6258   536  movz x17, #0xa00000000
0xffff8bdb625c   540  sub csp, jssp, #0x10 (16)
0xffff8bdb6260   544  stp x17, cp, [jssp, #-16]!
0xffff8bdb6264   548  add fp, jssp, #0x10 (16)
0xffff8bdb6268   552  ldr x17, pc+24 (addr 0x0000ffff8bdb6280)    ;; lazy deoptimization bailout 0
0xffff8bdb626c   556  add x17, x17, x16
0xffff8bdb6270   560  br x17
0xffff8bdb6274   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdb6278   568  d63f03e0       constant
0xffff8bdb627c   572  d503201f       constant
0xffff8bdb6280   576  8bb06000       constant
0xffff8bdb6284   580  0000ffff       constant


Safepoints (size = 21)
0xffff8bdb61c4   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bdb608c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bdb60a4  embedded object  (0x26c04241 <undefined>)
0xffff8bdb60f0  code target (STUB)  (0xffff8bd370c0)
0xffff8bdb6130  code target (STUB)  (0xffff8bd378a0)
0xffff8bdb6168  code target (STUB)  (0xffff8bd38080)
0xffff8bdb6198  code target (STUB)  (0xffff8bd06820)
0xffff8bdb61bc  code target (STUB)  (0xffff8bd06260)
0xffff8bdb61c8  code target (STUB)  (0xffff8bd068e0)
0xffff8bdb61dc  constant pool (size 76)
0xffff8bdb6268  runtime entry
0xffff8bdb6274  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 605)
0xffff8bdb6040     0  ldur x6, [x1, #7]
0xffff8bdb6044     4  ldur w7, [x6, #11]
0xffff8bdb6048     8  adds w8, w7, #0x3 (3)
0xffff8bdb604c    12  b.vs #+0x1dc (addr 0xffff8bdb6228)
0xffff8bdb6050    16  movz w16, #0x95ff
0xffff8bdb6054    20  cmp w8, w16, lsl #1
0xffff8bdb6058    24  b.hs #+0x1e0 (addr 0xffff8bdb6238)
0xffff8bdb605c    28  lsl x9, x8, #32
0xffff8bdb6060    32  lsl w10, w8, #3
0xffff8bdb6064    36  add w10, w10, #0x10 (16)
0xffff8bdb6068    40  sxtw x10, w10
0xffff8bdb606c    44  movz x11, #0xe2c0
0xffff8bdb6070    48  movk x11, #0x2cb8, lsl #16
0xffff8bdb6074    52  ldp x13, x16, [x11]
0xffff8bdb6078    56  adds x12, x13, x10
0xffff8bdb607c    60  ccmp x12, x16, #nzCv, lo
0xffff8bdb6080    64  b.hi #+0xf8 (addr 0xffff8bdb6178)
0xffff8bdb6084    68  str x12, [x11]
0xffff8bdb6088    72  orr x13, x13, #0x1
0xffff8bdb608c    76  ldr x10, pc+348 (addr 0x0000ffff8bdb61e8)    ;; object: 0x5f504259 <Map(FAST_SMI_ELEMENTS)>
0xffff8bdb6090    80  stur x10, [x13, #-1]
0xffff8bdb6094    84  stur x9, [x13, #7]
0xffff8bdb6098    88  cmp w7, w8
0xffff8bdb609c    92  b.ge #+0x18 (addr 0xffff8bdb60b4)
0xffff8bdb60a0    96  sub w8, w8, #0x1 (1)
0xffff8bdb60a4   100  ldr x9, pc+332 (addr 0x0000ffff8bdb61f0)    ;; object: 0x26c04241 <undefined>
0xffff8bdb60a8   104  add x10, x13, #0xf (15)
0xffff8bdb60ac   108  str x9, [x10, w8, sxtw #3]
0xffff8bdb60b0   112  b #-0x18 (addr 0xffff8bdb6098)
0xffff8bdb60b4   116  cmp w7, #0x0 (0)
0xffff8bdb60b8   120  b.le #+0x1c (addr 0xffff8bdb60d4)
0xffff8bdb60bc   124  sub w7, w7, #0x1 (1)
0xffff8bdb60c0   128  add x8, x6, #0xf (15)
0xffff8bdb60c4   132  ldr x9, [x8, w7, sxtw #3]
0xffff8bdb60c8   136  add x8, x13, #0xf (15)
0xffff8bdb60cc   140  str x9, [x8, w7, sxtw #3]
0xffff8bdb60d0   144  b #-0x1c (addr 0xffff8bdb60b4)
0xffff8bdb60d4   148  stur x13, [x1, #7]
0xffff8bdb60d8   152  add x6, x1, #0x7 (7)
0xffff8bdb60dc   156  and x13, x1, #0xfffffffffff00000
0xffff8bdb60e0   160  ldr x13, [x13, #8]
0xffff8bdb60e4   164  tbz w13, #2, #+0x18 (addr 0xffff8bdb60fc)
0xffff8bdb60e8   168  sub csp, jssp, #0x8 (8)
0xffff8bdb60ec   172  str lr, [jssp, #-8]!
0xffff8bdb60f0   176  ldr x16, pc+264 (addr 0x0000ffff8bdb61f8)    ;; code: STUB, RecordWriteStub, minor: 72097
0xffff8bdb60f4   180  blr x16
0xffff8bdb60f8   184  ldr lr, [jssp], #8
0xffff8bdb60fc   188  tbz w0, #0, #+0x14c (addr 0xffff8bdb6248)
0xffff8bdb6100   192  mov x2, x0
0xffff8bdb6104   196  ldur x4, [x1, #7]
0xffff8bdb6108   200  stur x2, [x4, #111]
0xffff8bdb610c   204  add x3, x4, #0x6f (111)
0xffff8bdb6110   208  and x2, x2, #0xfffffffffff00000
0xffff8bdb6114   212  ldr x2, [x2, #8]
0xffff8bdb6118   216  tbz w2, #1, #+0x24 (addr 0xffff8bdb613c)
0xffff8bdb611c   220  and x2, x4, #0xfffffffffff00000
0xffff8bdb6120   224  ldr x2, [x2, #8]
0xffff8bdb6124   228  tbz w2, #2, #+0x18 (addr 0xffff8bdb613c)
0xffff8bdb6128   232  sub csp, jssp, #0x8 (8)
0xffff8bdb612c   236  str lr, [jssp, #-8]!
0xffff8bdb6130   240  ldr x16, pc+208 (addr 0x0000ffff8bdb6200)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdb6134   244  blr x16
0xffff8bdb6138   248  ldr lr, [jssp], #8
0xffff8bdb613c   252  stur x5, [x1, #-1]
0xffff8bdb6140   256  tbz w5, #0, #+0x34 (addr 0xffff8bdb6174)
0xffff8bdb6144   260  sub x2, x1, #0x1 (1)
0xffff8bdb6148   264  and x5, x5, #0xfffffffffff00000
0xffff8bdb614c   268  ldr x5, [x5, #8]
0xffff8bdb6150   272  tbz w5, #1, #+0x24 (addr 0xffff8bdb6174)
0xffff8bdb6154   276  and x5, x1, #0xfffffffffff00000
0xffff8bdb6158   280  ldr x5, [x5, #8]
0xffff8bdb615c   284  tbz w5, #2, #+0x18 (addr 0xffff8bdb6174)
0xffff8bdb6160   288  sub csp, jssp, #0x8 (8)
0xffff8bdb6164   292  str lr, [jssp, #-8]!
0xffff8bdb6168   296  ldr x16, pc+160 (addr 0x0000ffff8bdb6208)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdb616c   300  blr x16
0xffff8bdb6170   304  ldr lr, [jssp], #8
0xffff8bdb6174   308  ret
0xffff8bdb6178   312  sub csp, jssp, #0x10 (16)
0xffff8bdb617c   316  stp fp, lr, [jssp, #-16]!
0xffff8bdb6180   320  movz fp, #0xa00000000
0xffff8bdb6184   324  sub csp, jssp, #0x8 (8)
0xffff8bdb6188   328  str fp, [jssp, #-8]!
0xffff8bdb618c   332  add fp, jssp, #0x8 (8)
0xffff8bdb6190   336  movz x13, #0x0
0xffff8bdb6194   340  mov x16, lr
0xffff8bdb6198   344  ldr x17, pc+120 (addr 0x0000ffff8bdb6210)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdb619c   348  blr x17
0xffff8bdb61a0   352  lsl x0, x10, #32
0xffff8bdb61a4   356  movz x10, #0x0
0xffff8bdb61a8   360  sub csp, jssp, #0x10 (16)
0xffff8bdb61ac   364  stp x10, x0, [jssp, #-16]!
0xffff8bdb61b0   368  movz x0, #0x2
0xffff8bdb61b4   372  movz x1, #0x5b88
0xffff8bdb61b8   376  movk x1, #0xe2, lsl #16
0xffff8bdb61bc   380  ldr x16, pc+92 (addr 0x0000ffff8bdb6218)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdb61c0   384  blr x16
0xffff8bdb61c4   388  str x0, [jssp, #104]
0xffff8bdb61c8   392  ldr x16, pc+88 (addr 0x0000ffff8bdb6220)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdb61cc   396  blr x16
0xffff8bdb61d0   400  ldr lr, [jssp, #16]
0xffff8bdb61d4   404  ldp xzr, fp, [jssp], #24
0xffff8bdb61d8   408  b #-0x14c (addr 0xffff8bdb608c)
0xffff8bdb61dc   412  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff8bdb61e0   416  d63f03e0       constant
0xffff8bdb61e4   420  d503201f       constant
0xffff8bdb61e8   424  5f504259       constant
0xffff8bdb61ec   428  00000000       constant
0xffff8bdb61f0   432  26c04241       constant
0xffff8bdb61f4   436  00000000       constant
0xffff8bdb61f8   440  8bd370c0       constant
0xffff8bdb61fc   444  0000ffff       constant
0xffff8bdb6200   448  8bd378a0       constant
0xffff8bdb6204   452  0000ffff       constant
0xffff8bdb6208   456  8bd38080       constant
0xffff8bdb620c   460  0000ffff       constant
0xffff8bdb6210   464  8bd06820       constant
0xffff8bdb6214   468  0000ffff       constant
0xffff8bdb6218   472  8bd06260       constant
0xffff8bdb621c   476  0000ffff       constant
0xffff8bdb6220   480  8bd068e0       constant
0xffff8bdb6224   484  0000ffff       constant
0xffff8bdb6228   488  movz x16, #0x0
0xffff8bdb622c   492  sub csp, jssp, #0x10 (16)
0xffff8bdb6230   496  stp fp, lr, [jssp, #-16]!
0xffff8bdb6234   500  bl #+0x24 (addr 0xffff8bdb6258)
0xffff8bdb6238   504  movz x16, #0x8
0xffff8bdb623c   508  sub csp, jssp, #0x10 (16)
0xffff8bdb6240   512  stp fp, lr, [jssp, #-16]!
0xffff8bdb6244   516  bl #+0x14 (addr 0xffff8bdb6258)
0xffff8bdb6248   520  movz x16, #0x10
0xffff8bdb624c   524  sub csp, jssp, #0x10 (16)
0xffff8bdb6250   528  stp fp, lr, [jssp, #-16]!
0xffff8bdb6254   532  bl #+0x4 (addr 0xffff8bdb6258)
0xffff8bdb6258   536  movz x17, #0xa00000000
0xffff8bdb625c   540  sub csp, jssp, #0x10 (16)
0xffff8bdb6260   544  stp x17, cp, [jssp, #-16]!
0xffff8bdb6264   548  add fp, jssp, #0x10 (16)
0xffff8bdb6268   552  ldr x17, pc+24 (addr 0x0000ffff8bdb6280)    ;; lazy deoptimization bailout 0
0xffff8bdb626c   556  add x17, x17, x16
0xffff8bdb6270   560  br x17
0xffff8bdb6274   564  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdb6278   568  d63f03e0       constant
0xffff8bdb627c   572  d503201f       constant
0xffff8bdb6280   576  8bb06000       constant
0xffff8bdb6284   580  0000ffff       constant


Safepoints (size = 21)
0xffff8bdb61c4   388  000 | x0 | x1 | x2 | x3 | x5 | x6 | x13 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 30)
0xffff8bdb608c  embedded object  (0x5f504259 <Map(FAST_SMI_ELEMENTS)>)
0xffff8bdb60a4  embedded object  (0x26c04241 <undefined>)
0xffff8bdb60f0  code target (STUB)  (0xffff8bd370c0)
0xffff8bdb6130  code target (STUB)  (0xffff8bd378a0)
0xffff8bdb6168  code target (STUB)  (0xffff8bd38080)
0xffff8bdb6198  code target (STUB)  (0xffff8bd06820)
0xffff8bdb61bc  code target (STUB)  (0xffff8bd06260)
0xffff8bdb61c8  code target (STUB)  (0xffff8bd068e0)
0xffff8bdb61dc  constant pool (size 76)
0xffff8bdb6268  runtime entry
0xffff8bdb6274  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = fs
compiler = unknown
Instructions (size = 184)
0xffff8bdb6300     0  sub csp, jssp, #0x8 (8)
0xffff8bdb6304     4  str x3, [jssp, #-8]!
0xffff8bdb6308     8  sub csp, jssp, #0x8 (8)
0xffff8bdb630c    12  str x4, [jssp, #-8]!
0xffff8bdb6310    16  ldr x3, pc+112 (addr 0x0000ffff8bdb6380)    ;; object: 0x26c63e59 Cell for 0
0xffff8bdb6314    20  ldur x3, [x3, #7]
0xffff8bdb6318    24  cmp x3, #0x0 (0)
0xffff8bdb631c    28  b.ne #+0x44 (addr 0xffff8bdb6360)
0xffff8bdb6320    32  tbz w0, #0, #+0x40 (addr 0xffff8bdb6360)
0xffff8bdb6324    36  ldur x3, [x0, #-1]
0xffff8bdb6328    40  ldr x4, pc+96 (addr 0x0000ffff8bdb6388)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdb632c    44  ldur x4, [x4, #7]
0xffff8bdb6330    48  cmp x3, x4
0xffff8bdb6334    52  b.ne #+0x2c (addr 0xffff8bdb6360)
0xffff8bdb6338    56  ldr x5, pc+88 (addr 0x0000ffff8bdb6390)    ;; object: 0x3270ca39 WeakCell for 0x5f52d869 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdb633c    60  ldur x5, [x5, #7]
0xffff8bdb6340    64  tbz w5, #0, #+0x20 (addr 0xffff8bdb6360)
0xffff8bdb6344    68  ldursw x4, [x5, #15]
0xffff8bdb6348    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdb6360)
0xffff8bdb634c    76  ldr x4, [jssp], #8
0xffff8bdb6350    80  ldr x3, [jssp], #8
0xffff8bdb6354    84  ldr x2, pc+68 (addr 0x0000ffff8bdb6398)    ;; object: 0x26cb9cd1 <String[2]: fs>
0xffff8bdb6358    88  ldr x16, pc+72 (addr 0x0000ffff8bdb63a0)    ;; code: HANDLER, StoreTransitionStub, minor: 327694
0xffff8bdb635c    92  br x16
0xffff8bdb6360    96  ldr x2, pc+72 (addr 0x0000ffff8bdb63a8)    ;; object: 0x26cb9cd1 <String[2]: fs>
0xffff8bdb6364   100  ldr x4, [jssp], #8
0xffff8bdb6368   104  ldr x3, [jssp], #8
0xffff8bdb636c   108  ldr x16, pc+68 (addr 0x0000ffff8bdb63b0)    ;; code: BUILTIN
0xffff8bdb6370   112  br x16
0xffff8bdb6374   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdb6378   120  d63f03e0       constant
0xffff8bdb637c   124  d503201f       constant
0xffff8bdb6380   128  26c63e59       constant
0xffff8bdb6384   132  00000000       constant
0xffff8bdb6388   136  26cc22b1       constant
0xffff8bdb638c   140  00000000       constant
0xffff8bdb6390   144  3270ca39       constant
0xffff8bdb6394   148  00000000       constant
0xffff8bdb6398   152  26cb9cd1       constant
0xffff8bdb639c   156  00000000       constant
0xffff8bdb63a0   160  8bdb6040       constant
0xffff8bdb63a4   164  0000ffff       constant
0xffff8bdb63a8   168  26cb9cd1       constant
0xffff8bdb63ac   172  00000000       constant
0xffff8bdb63b0   176  8bd22420       constant
0xffff8bdb63b4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdb6310  embedded object  (0x26c63e59 Cell for 0)
0xffff8bdb6328  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdb6338  embedded object  (0x3270ca39 WeakCell for 0x5f52d869 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdb6354  embedded object  (0x26cb9cd1 <String[2]: fs>)
0xffff8bdb6358  code target (HANDLER)  (0xffff8bdb6040)
0xffff8bdb6360  embedded object  (0x26cb9cd1 <String[2]: fs>)
0xffff8bdb636c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdb6374  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = runInThisContext
compiler = unknown
Instructions (size = 120)
0xffff8bdbc220     0  sub csp, jssp, #0x8 (8)
0xffff8bdbc224     4  str x3, [jssp, #-8]!
0xffff8bdbc228     8  sub csp, jssp, #0x8 (8)
0xffff8bdbc22c    12  str x0, [jssp, #-8]!
0xffff8bdbc230    16  ldr x0, pc+72 (addr 0x0000ffff8bdbc278)    ;; object: 0x32717749 Cell for 0
0xffff8bdbc234    20  ldur x0, [x0, #7]
0xffff8bdbc238    24  cmp x0, #0x0 (0)
0xffff8bdbc23c    28  b.ne #+0x14 (addr 0xffff8bdbc250)
0xffff8bdbc240    32  ldr x3, pc+64 (addr 0x0000ffff8bdbc280)    ;; object: 0x32717759 WeakCell for 0x56951f71 <an Object with map 0x5f52d4f9>
0xffff8bdbc244    36  ldur x3, [x3, #7]
0xffff8bdbc248    40  tbz w3, #0, #+0x8 (addr 0xffff8bdbc250)
0xffff8bdbc24c    44  b #+0x14 (addr 0xffff8bdbc260)
0xffff8bdbc250    48  ldr x0, [jssp], #8
0xffff8bdbc254    52  ldr x3, [jssp], #8
0xffff8bdbc258    56  ldr x16, pc+48 (addr 0x0000ffff8bdbc288)    ;; code: BUILTIN
0xffff8bdbc25c    60  br x16
0xffff8bdbc260    64  add jssp, jssp, #0x10 (16)
0xffff8bdbc264    68  mov x1, x3
0xffff8bdbc268    72  ldr x16, pc+40 (addr 0x0000ffff8bdbc290)    ;; code: HANDLER, LoadFieldStub, minor: 2051
0xffff8bdbc26c    76  br x16
0xffff8bdbc270    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdbc274    84  d63f03e0       constant
0xffff8bdbc278    88  32717749       constant
0xffff8bdbc27c    92  00000000       constant
0xffff8bdbc280    96  32717759       constant
0xffff8bdbc284   100  00000000       constant
0xffff8bdbc288   104  8bd222e0       constant
0xffff8bdbc28c   108  0000ffff       constant
0xffff8bdbc290   112  8bd39340       constant
0xffff8bdbc294   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdbc230  embedded object  (0x32717749 Cell for 0)
0xffff8bdbc240  embedded object  (0x32717759 WeakCell for 0x56951f71 <an Object with map 0x5f52d4f9>)
0xffff8bdbc258  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdbc268  code target (HANDLER)  (0xffff8bd39340)
0xffff8bdbc270  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bdbc5e0     0  tbz w0, #0, #+0x98 (addr 0xffff8bdbc678)
0xffff8bdbc5e4     4  mov x2, x0
0xffff8bdbc5e8     8  ldur x4, [x1, #7]
0xffff8bdbc5ec    12  stur x2, [x4, #119]
0xffff8bdbc5f0    16  add x3, x4, #0x77 (119)
0xffff8bdbc5f4    20  and x2, x2, #0xfffffffffff00000
0xffff8bdbc5f8    24  ldr x2, [x2, #8]
0xffff8bdbc5fc    28  tbz w2, #1, #+0x24 (addr 0xffff8bdbc620)
0xffff8bdbc600    32  and x2, x4, #0xfffffffffff00000
0xffff8bdbc604    36  ldr x2, [x2, #8]
0xffff8bdbc608    40  tbz w2, #2, #+0x18 (addr 0xffff8bdbc620)
0xffff8bdbc60c    44  sub csp, jssp, #0x8 (8)
0xffff8bdbc610    48  str lr, [jssp, #-8]!
0xffff8bdbc614    52  ldr x16, pc+84 (addr 0x0000ffff8bdbc668)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdbc618    56  blr x16
0xffff8bdbc61c    60  ldr lr, [jssp], #8
0xffff8bdbc620    64  stur x5, [x1, #-1]
0xffff8bdbc624    68  tbz w5, #0, #+0x34 (addr 0xffff8bdbc658)
0xffff8bdbc628    72  sub x2, x1, #0x1 (1)
0xffff8bdbc62c    76  and x5, x5, #0xfffffffffff00000
0xffff8bdbc630    80  ldr x5, [x5, #8]
0xffff8bdbc634    84  tbz w5, #1, #+0x24 (addr 0xffff8bdbc658)
0xffff8bdbc638    88  and x5, x1, #0xfffffffffff00000
0xffff8bdbc63c    92  ldr x5, [x5, #8]
0xffff8bdbc640    96  tbz w5, #2, #+0x18 (addr 0xffff8bdbc658)
0xffff8bdbc644   100  sub csp, jssp, #0x8 (8)
0xffff8bdbc648   104  str lr, [jssp, #-8]!
0xffff8bdbc64c   108  ldr x16, pc+36 (addr 0x0000ffff8bdbc670)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdbc650   112  blr x16
0xffff8bdbc654   116  ldr lr, [jssp], #8
0xffff8bdbc658   120  ret
0xffff8bdbc65c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bdbc660   128  d63f03e0       constant
0xffff8bdbc664   132  d503201f       constant
0xffff8bdbc668   136  8bd378a0       constant
0xffff8bdbc66c   140  0000ffff       constant
0xffff8bdbc670   144  8bd38080       constant
0xffff8bdbc674   148  0000ffff       constant
0xffff8bdbc678   152  movz x16, #0x0
0xffff8bdbc67c   156  sub csp, jssp, #0x10 (16)
0xffff8bdbc680   160  stp fp, lr, [jssp, #-16]!
0xffff8bdbc684   164  bl #+0x4 (addr 0xffff8bdbc688)
0xffff8bdbc688   168  movz x17, #0xa00000000
0xffff8bdbc68c   172  sub csp, jssp, #0x10 (16)
0xffff8bdbc690   176  stp x17, cp, [jssp, #-16]!
0xffff8bdbc694   180  add fp, jssp, #0x10 (16)
0xffff8bdbc698   184  ldr x17, pc+24 (addr 0x0000ffff8bdbc6b0)    ;; lazy deoptimization bailout 0
0xffff8bdbc69c   188  add x17, x17, x16
0xffff8bdbc6a0   192  br x17
0xffff8bdbc6a4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdbc6a8   200  d63f03e0       constant
0xffff8bdbc6ac   204  d503201f       constant
0xffff8bdbc6b0   208  8bb06000       constant
0xffff8bdbc6b4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdbc614  code target (STUB)  (0xffff8bd378a0)
0xffff8bdbc64c  code target (STUB)  (0xffff8bd38080)
0xffff8bdbc65c  constant pool (size 28)
0xffff8bdbc698  runtime entry
0xffff8bdbc6a4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bdbc5e0     0  tbz w0, #0, #+0x98 (addr 0xffff8bdbc678)
0xffff8bdbc5e4     4  mov x2, x0
0xffff8bdbc5e8     8  ldur x4, [x1, #7]
0xffff8bdbc5ec    12  stur x2, [x4, #119]
0xffff8bdbc5f0    16  add x3, x4, #0x77 (119)
0xffff8bdbc5f4    20  and x2, x2, #0xfffffffffff00000
0xffff8bdbc5f8    24  ldr x2, [x2, #8]
0xffff8bdbc5fc    28  tbz w2, #1, #+0x24 (addr 0xffff8bdbc620)
0xffff8bdbc600    32  and x2, x4, #0xfffffffffff00000
0xffff8bdbc604    36  ldr x2, [x2, #8]
0xffff8bdbc608    40  tbz w2, #2, #+0x18 (addr 0xffff8bdbc620)
0xffff8bdbc60c    44  sub csp, jssp, #0x8 (8)
0xffff8bdbc610    48  str lr, [jssp, #-8]!
0xffff8bdbc614    52  ldr x16, pc+84 (addr 0x0000ffff8bdbc668)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdbc618    56  blr x16
0xffff8bdbc61c    60  ldr lr, [jssp], #8
0xffff8bdbc620    64  stur x5, [x1, #-1]
0xffff8bdbc624    68  tbz w5, #0, #+0x34 (addr 0xffff8bdbc658)
0xffff8bdbc628    72  sub x2, x1, #0x1 (1)
0xffff8bdbc62c    76  and x5, x5, #0xfffffffffff00000
0xffff8bdbc630    80  ldr x5, [x5, #8]
0xffff8bdbc634    84  tbz w5, #1, #+0x24 (addr 0xffff8bdbc658)
0xffff8bdbc638    88  and x5, x1, #0xfffffffffff00000
0xffff8bdbc63c    92  ldr x5, [x5, #8]
0xffff8bdbc640    96  tbz w5, #2, #+0x18 (addr 0xffff8bdbc658)
0xffff8bdbc644   100  sub csp, jssp, #0x8 (8)
0xffff8bdbc648   104  str lr, [jssp, #-8]!
0xffff8bdbc64c   108  ldr x16, pc+36 (addr 0x0000ffff8bdbc670)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdbc650   112  blr x16
0xffff8bdbc654   116  ldr lr, [jssp], #8
0xffff8bdbc658   120  ret
0xffff8bdbc65c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bdbc660   128  d63f03e0       constant
0xffff8bdbc664   132  d503201f       constant
0xffff8bdbc668   136  8bd378a0       constant
0xffff8bdbc66c   140  0000ffff       constant
0xffff8bdbc670   144  8bd38080       constant
0xffff8bdbc674   148  0000ffff       constant
0xffff8bdbc678   152  movz x16, #0x0
0xffff8bdbc67c   156  sub csp, jssp, #0x10 (16)
0xffff8bdbc680   160  stp fp, lr, [jssp, #-16]!
0xffff8bdbc684   164  bl #+0x4 (addr 0xffff8bdbc688)
0xffff8bdbc688   168  movz x17, #0xa00000000
0xffff8bdbc68c   172  sub csp, jssp, #0x10 (16)
0xffff8bdbc690   176  stp x17, cp, [jssp, #-16]!
0xffff8bdbc694   180  add fp, jssp, #0x10 (16)
0xffff8bdbc698   184  ldr x17, pc+24 (addr 0x0000ffff8bdbc6b0)    ;; lazy deoptimization bailout 0
0xffff8bdbc69c   188  add x17, x17, x16
0xffff8bdbc6a0   192  br x17
0xffff8bdbc6a4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdbc6a8   200  d63f03e0       constant
0xffff8bdbc6ac   204  d503201f       constant
0xffff8bdbc6b0   208  8bb06000       constant
0xffff8bdbc6b4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdbc614  code target (STUB)  (0xffff8bd378a0)
0xffff8bdbc64c  code target (STUB)  (0xffff8bd38080)
0xffff8bdbc65c  constant pool (size 28)
0xffff8bdbc698  runtime entry
0xffff8bdbc6a4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = stream
compiler = unknown
Instructions (size = 184)
0xffff8bdbc720     0  sub csp, jssp, #0x8 (8)
0xffff8bdbc724     4  str x3, [jssp, #-8]!
0xffff8bdbc728     8  sub csp, jssp, #0x8 (8)
0xffff8bdbc72c    12  str x4, [jssp, #-8]!
0xffff8bdbc730    16  ldr x3, pc+112 (addr 0x0000ffff8bdbc7a0)    ;; object: 0x26c63e59 Cell for 0
0xffff8bdbc734    20  ldur x3, [x3, #7]
0xffff8bdbc738    24  cmp x3, #0x0 (0)
0xffff8bdbc73c    28  b.ne #+0x44 (addr 0xffff8bdbc780)
0xffff8bdbc740    32  tbz w0, #0, #+0x40 (addr 0xffff8bdbc780)
0xffff8bdbc744    36  ldur x3, [x0, #-1]
0xffff8bdbc748    40  ldr x4, pc+96 (addr 0x0000ffff8bdbc7a8)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdbc74c    44  ldur x4, [x4, #7]
0xffff8bdbc750    48  cmp x3, x4
0xffff8bdbc754    52  b.ne #+0x2c (addr 0xffff8bdbc780)
0xffff8bdbc758    56  ldr x5, pc+88 (addr 0x0000ffff8bdbc7b0)    ;; object: 0x3271c4a9 WeakCell for 0x5f52fe91 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdbc75c    60  ldur x5, [x5, #7]
0xffff8bdbc760    64  tbz w5, #0, #+0x20 (addr 0xffff8bdbc780)
0xffff8bdbc764    68  ldursw x4, [x5, #15]
0xffff8bdbc768    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdbc780)
0xffff8bdbc76c    76  ldr x4, [jssp], #8
0xffff8bdbc770    80  ldr x3, [jssp], #8
0xffff8bdbc774    84  ldr x2, pc+68 (addr 0x0000ffff8bdbc7b8)    ;; object: 0x26cbe091 <String[6]: stream>
0xffff8bdbc778    88  ldr x16, pc+72 (addr 0x0000ffff8bdbc7c0)    ;; code: HANDLER, StoreTransitionStub, minor: 196623
0xffff8bdbc77c    92  br x16
0xffff8bdbc780    96  ldr x2, pc+72 (addr 0x0000ffff8bdbc7c8)    ;; object: 0x26cbe091 <String[6]: stream>
0xffff8bdbc784   100  ldr x4, [jssp], #8
0xffff8bdbc788   104  ldr x3, [jssp], #8
0xffff8bdbc78c   108  ldr x16, pc+68 (addr 0x0000ffff8bdbc7d0)    ;; code: BUILTIN
0xffff8bdbc790   112  br x16
0xffff8bdbc794   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdbc798   120  d63f03e0       constant
0xffff8bdbc79c   124  d503201f       constant
0xffff8bdbc7a0   128  26c63e59       constant
0xffff8bdbc7a4   132  00000000       constant
0xffff8bdbc7a8   136  26cc22b1       constant
0xffff8bdbc7ac   140  00000000       constant
0xffff8bdbc7b0   144  3271c4a9       constant
0xffff8bdbc7b4   148  00000000       constant
0xffff8bdbc7b8   152  26cbe091       constant
0xffff8bdbc7bc   156  00000000       constant
0xffff8bdbc7c0   160  8bdbc5e0       constant
0xffff8bdbc7c4   164  0000ffff       constant
0xffff8bdbc7c8   168  26cbe091       constant
0xffff8bdbc7cc   172  00000000       constant
0xffff8bdbc7d0   176  8bd22420       constant
0xffff8bdbc7d4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdbc730  embedded object  (0x26c63e59 Cell for 0)
0xffff8bdbc748  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdbc758  embedded object  (0x3271c4a9 WeakCell for 0x5f52fe91 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdbc774  embedded object  (0x26cbe091 <String[6]: stream>)
0xffff8bdbc778  code target (HANDLER)  (0xffff8bdbc5e0)
0xffff8bdbc780  embedded object  (0x26cbe091 <String[6]: stream>)
0xffff8bdbc78c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdbc794  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = call
compiler = unknown
Instructions (size = 120)
0xffff8bdbce00     0  sub csp, jssp, #0x8 (8)
0xffff8bdbce04     4  str x3, [jssp, #-8]!
0xffff8bdbce08     8  sub csp, jssp, #0x8 (8)
0xffff8bdbce0c    12  str x0, [jssp, #-8]!
0xffff8bdbce10    16  ldr x0, pc+72 (addr 0x0000ffff8bdbce58)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bdbce14    20  ldur x0, [x0, #7]
0xffff8bdbce18    24  cmp x0, #0x0 (0)
0xffff8bdbce1c    28  b.ne #+0x14 (addr 0xffff8bdbce30)
0xffff8bdbce20    32  ldr x3, pc+64 (addr 0x0000ffff8bdbce60)    ;; object: 0x3271cb01 WeakCell for 0x26c40019 <JS Function (SharedFunctionInfo 0x26c3ff71)>
0xffff8bdbce24    36  ldur x3, [x3, #7]
0xffff8bdbce28    40  tbz w3, #0, #+0x8 (addr 0xffff8bdbce30)
0xffff8bdbce2c    44  b #+0x14 (addr 0xffff8bdbce40)
0xffff8bdbce30    48  ldr x0, [jssp], #8
0xffff8bdbce34    52  ldr x3, [jssp], #8
0xffff8bdbce38    56  ldr x16, pc+48 (addr 0x0000ffff8bdbce68)    ;; code: BUILTIN
0xffff8bdbce3c    60  br x16
0xffff8bdbce40    64  add jssp, jssp, #0x10 (16)
0xffff8bdbce44    68  mov x1, x3
0xffff8bdbce48    72  ldr x16, pc+40 (addr 0x0000ffff8bdbce70)    ;; code: HANDLER, LoadConstantStub, minor: 6
0xffff8bdbce4c    76  br x16
0xffff8bdbce50    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdbce54    84  d63f03e0       constant
0xffff8bdbce58    88  26c5b0f1       constant
0xffff8bdbce5c    92  00000000       constant
0xffff8bdbce60    96  3271cb01       constant
0xffff8bdbce64   100  00000000       constant
0xffff8bdbce68   104  8bd222e0       constant
0xffff8bdbce6c   108  0000ffff       constant
0xffff8bdbce70   112  8bd8b020       constant
0xffff8bdbce74   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdbce10  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bdbce20  embedded object  (0x3271cb01 WeakCell for 0x26c40019 <JS Function (SharedFunctionInfo 0x26c3ff71)>)
0xffff8bdbce38  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdbce48  code target (HANDLER)  (0xffff8bd8b020)
0xffff8bdbce50  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bdbcee0     0  tbz w0, #0, #+0x98 (addr 0xffff8bdbcf78)
0xffff8bdbcee4     4  mov x2, x0
0xffff8bdbcee8     8  ldur x4, [x1, #7]
0xffff8bdbceec    12  stur x2, [x4, #127]
0xffff8bdbcef0    16  add x3, x4, #0x7f (127)
0xffff8bdbcef4    20  and x2, x2, #0xfffffffffff00000
0xffff8bdbcef8    24  ldr x2, [x2, #8]
0xffff8bdbcefc    28  tbz w2, #1, #+0x24 (addr 0xffff8bdbcf20)
0xffff8bdbcf00    32  and x2, x4, #0xfffffffffff00000
0xffff8bdbcf04    36  ldr x2, [x2, #8]
0xffff8bdbcf08    40  tbz w2, #2, #+0x18 (addr 0xffff8bdbcf20)
0xffff8bdbcf0c    44  sub csp, jssp, #0x8 (8)
0xffff8bdbcf10    48  str lr, [jssp, #-8]!
0xffff8bdbcf14    52  ldr x16, pc+84 (addr 0x0000ffff8bdbcf68)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdbcf18    56  blr x16
0xffff8bdbcf1c    60  ldr lr, [jssp], #8
0xffff8bdbcf20    64  stur x5, [x1, #-1]
0xffff8bdbcf24    68  tbz w5, #0, #+0x34 (addr 0xffff8bdbcf58)
0xffff8bdbcf28    72  sub x2, x1, #0x1 (1)
0xffff8bdbcf2c    76  and x5, x5, #0xfffffffffff00000
0xffff8bdbcf30    80  ldr x5, [x5, #8]
0xffff8bdbcf34    84  tbz w5, #1, #+0x24 (addr 0xffff8bdbcf58)
0xffff8bdbcf38    88  and x5, x1, #0xfffffffffff00000
0xffff8bdbcf3c    92  ldr x5, [x5, #8]
0xffff8bdbcf40    96  tbz w5, #2, #+0x18 (addr 0xffff8bdbcf58)
0xffff8bdbcf44   100  sub csp, jssp, #0x8 (8)
0xffff8bdbcf48   104  str lr, [jssp, #-8]!
0xffff8bdbcf4c   108  ldr x16, pc+36 (addr 0x0000ffff8bdbcf70)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdbcf50   112  blr x16
0xffff8bdbcf54   116  ldr lr, [jssp], #8
0xffff8bdbcf58   120  ret
0xffff8bdbcf5c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bdbcf60   128  d63f03e0       constant
0xffff8bdbcf64   132  d503201f       constant
0xffff8bdbcf68   136  8bd378a0       constant
0xffff8bdbcf6c   140  0000ffff       constant
0xffff8bdbcf70   144  8bd38080       constant
0xffff8bdbcf74   148  0000ffff       constant
0xffff8bdbcf78   152  movz x16, #0x0
0xffff8bdbcf7c   156  sub csp, jssp, #0x10 (16)
0xffff8bdbcf80   160  stp fp, lr, [jssp, #-16]!
0xffff8bdbcf84   164  bl #+0x4 (addr 0xffff8bdbcf88)
0xffff8bdbcf88   168  movz x17, #0xa00000000
0xffff8bdbcf8c   172  sub csp, jssp, #0x10 (16)
0xffff8bdbcf90   176  stp x17, cp, [jssp, #-16]!
0xffff8bdbcf94   180  add fp, jssp, #0x10 (16)
0xffff8bdbcf98   184  ldr x17, pc+24 (addr 0x0000ffff8bdbcfb0)    ;; lazy deoptimization bailout 0
0xffff8bdbcf9c   188  add x17, x17, x16
0xffff8bdbcfa0   192  br x17
0xffff8bdbcfa4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdbcfa8   200  d63f03e0       constant
0xffff8bdbcfac   204  d503201f       constant
0xffff8bdbcfb0   208  8bb06000       constant
0xffff8bdbcfb4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdbcf14  code target (STUB)  (0xffff8bd378a0)
0xffff8bdbcf4c  code target (STUB)  (0xffff8bd38080)
0xffff8bdbcf5c  constant pool (size 28)
0xffff8bdbcf98  runtime entry
0xffff8bdbcfa4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bdbcee0     0  tbz w0, #0, #+0x98 (addr 0xffff8bdbcf78)
0xffff8bdbcee4     4  mov x2, x0
0xffff8bdbcee8     8  ldur x4, [x1, #7]
0xffff8bdbceec    12  stur x2, [x4, #127]
0xffff8bdbcef0    16  add x3, x4, #0x7f (127)
0xffff8bdbcef4    20  and x2, x2, #0xfffffffffff00000
0xffff8bdbcef8    24  ldr x2, [x2, #8]
0xffff8bdbcefc    28  tbz w2, #1, #+0x24 (addr 0xffff8bdbcf20)
0xffff8bdbcf00    32  and x2, x4, #0xfffffffffff00000
0xffff8bdbcf04    36  ldr x2, [x2, #8]
0xffff8bdbcf08    40  tbz w2, #2, #+0x18 (addr 0xffff8bdbcf20)
0xffff8bdbcf0c    44  sub csp, jssp, #0x8 (8)
0xffff8bdbcf10    48  str lr, [jssp, #-8]!
0xffff8bdbcf14    52  ldr x16, pc+84 (addr 0x0000ffff8bdbcf68)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdbcf18    56  blr x16
0xffff8bdbcf1c    60  ldr lr, [jssp], #8
0xffff8bdbcf20    64  stur x5, [x1, #-1]
0xffff8bdbcf24    68  tbz w5, #0, #+0x34 (addr 0xffff8bdbcf58)
0xffff8bdbcf28    72  sub x2, x1, #0x1 (1)
0xffff8bdbcf2c    76  and x5, x5, #0xfffffffffff00000
0xffff8bdbcf30    80  ldr x5, [x5, #8]
0xffff8bdbcf34    84  tbz w5, #1, #+0x24 (addr 0xffff8bdbcf58)
0xffff8bdbcf38    88  and x5, x1, #0xfffffffffff00000
0xffff8bdbcf3c    92  ldr x5, [x5, #8]
0xffff8bdbcf40    96  tbz w5, #2, #+0x18 (addr 0xffff8bdbcf58)
0xffff8bdbcf44   100  sub csp, jssp, #0x8 (8)
0xffff8bdbcf48   104  str lr, [jssp, #-8]!
0xffff8bdbcf4c   108  ldr x16, pc+36 (addr 0x0000ffff8bdbcf70)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdbcf50   112  blr x16
0xffff8bdbcf54   116  ldr lr, [jssp], #8
0xffff8bdbcf58   120  ret
0xffff8bdbcf5c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bdbcf60   128  d63f03e0       constant
0xffff8bdbcf64   132  d503201f       constant
0xffff8bdbcf68   136  8bd378a0       constant
0xffff8bdbcf6c   140  0000ffff       constant
0xffff8bdbcf70   144  8bd38080       constant
0xffff8bdbcf74   148  0000ffff       constant
0xffff8bdbcf78   152  movz x16, #0x0
0xffff8bdbcf7c   156  sub csp, jssp, #0x10 (16)
0xffff8bdbcf80   160  stp fp, lr, [jssp, #-16]!
0xffff8bdbcf84   164  bl #+0x4 (addr 0xffff8bdbcf88)
0xffff8bdbcf88   168  movz x17, #0xa00000000
0xffff8bdbcf8c   172  sub csp, jssp, #0x10 (16)
0xffff8bdbcf90   176  stp x17, cp, [jssp, #-16]!
0xffff8bdbcf94   180  add fp, jssp, #0x10 (16)
0xffff8bdbcf98   184  ldr x17, pc+24 (addr 0x0000ffff8bdbcfb0)    ;; lazy deoptimization bailout 0
0xffff8bdbcf9c   188  add x17, x17, x16
0xffff8bdbcfa0   192  br x17
0xffff8bdbcfa4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdbcfa8   200  d63f03e0       constant
0xffff8bdbcfac   204  d503201f       constant
0xffff8bdbcfb0   208  8bb06000       constant
0xffff8bdbcfb4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdbcf14  code target (STUB)  (0xffff8bd378a0)
0xffff8bdbcf4c  code target (STUB)  (0xffff8bd38080)
0xffff8bdbcf5c  constant pool (size 28)
0xffff8bdbcf98  runtime entry
0xffff8bdbcfa4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = internal/streams/legacy
compiler = unknown
Instructions (size = 184)
0xffff8bdbd020     0  sub csp, jssp, #0x8 (8)
0xffff8bdbd024     4  str x3, [jssp, #-8]!
0xffff8bdbd028     8  sub csp, jssp, #0x8 (8)
0xffff8bdbd02c    12  str x4, [jssp, #-8]!
0xffff8bdbd030    16  ldr x3, pc+112 (addr 0x0000ffff8bdbd0a0)    ;; object: 0x26c63e59 Cell for 0
0xffff8bdbd034    20  ldur x3, [x3, #7]
0xffff8bdbd038    24  cmp x3, #0x0 (0)
0xffff8bdbd03c    28  b.ne #+0x44 (addr 0xffff8bdbd080)
0xffff8bdbd040    32  tbz w0, #0, #+0x40 (addr 0xffff8bdbd080)
0xffff8bdbd044    36  ldur x3, [x0, #-1]
0xffff8bdbd048    40  ldr x4, pc+96 (addr 0x0000ffff8bdbd0a8)    ;; object: 0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdbd04c    44  ldur x4, [x4, #7]
0xffff8bdbd050    48  cmp x3, x4
0xffff8bdbd054    52  b.ne #+0x2c (addr 0xffff8bdbd080)
0xffff8bdbd058    56  ldr x5, pc+88 (addr 0x0000ffff8bdbd0b0)    ;; object: 0x3271cc81 WeakCell for 0x5f52fee9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdbd05c    60  ldur x5, [x5, #7]
0xffff8bdbd060    64  tbz w5, #0, #+0x20 (addr 0xffff8bdbd080)
0xffff8bdbd064    68  ldursw x4, [x5, #15]
0xffff8bdbd068    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdbd080)
0xffff8bdbd06c    76  ldr x4, [jssp], #8
0xffff8bdbd070    80  ldr x3, [jssp], #8
0xffff8bdbd074    84  ldr x2, pc+68 (addr 0x0000ffff8bdbd0b8)    ;; object: 0x26cbe491 <String[23]: internal/streams/legacy>
0xffff8bdbd078    88  ldr x16, pc+72 (addr 0x0000ffff8bdbd0c0)    ;; code: HANDLER, StoreTransitionStub, minor: 196624
0xffff8bdbd07c    92  br x16
0xffff8bdbd080    96  ldr x2, pc+72 (addr 0x0000ffff8bdbd0c8)    ;; object: 0x26cbe491 <String[23]: internal/streams/legacy>
0xffff8bdbd084   100  ldr x4, [jssp], #8
0xffff8bdbd088   104  ldr x3, [jssp], #8
0xffff8bdbd08c   108  ldr x16, pc+68 (addr 0x0000ffff8bdbd0d0)    ;; code: BUILTIN
0xffff8bdbd090   112  br x16
0xffff8bdbd094   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdbd098   120  d63f03e0       constant
0xffff8bdbd09c   124  d503201f       constant
0xffff8bdbd0a0   128  26c63e59       constant
0xffff8bdbd0a4   132  00000000       constant
0xffff8bdbd0a8   136  26cc22b1       constant
0xffff8bdbd0ac   140  00000000       constant
0xffff8bdbd0b0   144  3271cc81       constant
0xffff8bdbd0b4   148  00000000       constant
0xffff8bdbd0b8   152  26cbe491       constant
0xffff8bdbd0bc   156  00000000       constant
0xffff8bdbd0c0   160  8bdbcee0       constant
0xffff8bdbd0c4   164  0000ffff       constant
0xffff8bdbd0c8   168  26cbe491       constant
0xffff8bdbd0cc   172  00000000       constant
0xffff8bdbd0d0   176  8bd22420       constant
0xffff8bdbd0d4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdbd030  embedded object  (0x26c63e59 Cell for 0)
0xffff8bdbd048  embedded object  (0x26cc22b1 WeakCell for 0x5f51b439 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdbd058  embedded object  (0x3271cc81 WeakCell for 0x5f52fee9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdbd074  embedded object  (0x26cbe491 <String[23]: internal/streams/legacy>)
0xffff8bdbd078  code target (HANDLER)  (0xffff8bdbcee0)
0xffff8bdbd080  embedded object  (0x26cbe491 <String[23]: internal/streams/legacy>)
0xffff8bdbd08c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdbd094  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = super_
compiler = unknown
Instructions (size = 152)
0xffff8bdbd620     0  sub csp, jssp, #0x8 (8)
0xffff8bdbd624     4  str x3, [jssp, #-8]!
0xffff8bdbd628     8  sub csp, jssp, #0x8 (8)
0xffff8bdbd62c    12  str x4, [jssp, #-8]!
0xffff8bdbd630    16  ldr x3, pc+88 (addr 0x0000ffff8bdbd688)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bdbd634    20  ldur x3, [x3, #7]
0xffff8bdbd638    24  cmp x3, #0x0 (0)
0xffff8bdbd63c    28  b.ne #+0x30 (addr 0xffff8bdbd66c)
0xffff8bdbd640    32  tbz w0, #0, #+0x2c (addr 0xffff8bdbd66c)
0xffff8bdbd644    36  ldr x5, pc+76 (addr 0x0000ffff8bdbd690)    ;; object: 0x3271d5d9 WeakCell for 0x5f52ff41 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdbd648    40  ldur x5, [x5, #7]
0xffff8bdbd64c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdbd66c)
0xffff8bdbd650    48  ldursw x4, [x5, #15]
0xffff8bdbd654    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdbd66c)
0xffff8bdbd658    56  ldr x4, [jssp], #8
0xffff8bdbd65c    60  ldr x3, [jssp], #8
0xffff8bdbd660    64  ldr x2, pc+56 (addr 0x0000ffff8bdbd698)    ;; object: 0x26cc9f09 <String[6]: super_>
0xffff8bdbd664    68  ldr x16, pc+60 (addr 0x0000ffff8bdbd6a0)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff8bdbd668    72  br x16
0xffff8bdbd66c    76  ldr x2, pc+60 (addr 0x0000ffff8bdbd6a8)    ;; object: 0x26cc9f09 <String[6]: super_>
0xffff8bdbd670    80  ldr x4, [jssp], #8
0xffff8bdbd674    84  ldr x3, [jssp], #8
0xffff8bdbd678    88  ldr x16, pc+56 (addr 0x0000ffff8bdbd6b0)    ;; code: BUILTIN
0xffff8bdbd67c    92  br x16
0xffff8bdbd680    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdbd684   100  d63f03e0       constant
0xffff8bdbd688   104  26c5b0f1       constant
0xffff8bdbd68c   108  00000000       constant
0xffff8bdbd690   112  3271d5d9       constant
0xffff8bdbd694   116  00000000       constant
0xffff8bdbd698   120  26cc9f09       constant
0xffff8bdbd69c   124  00000000       constant
0xffff8bdbd6a0   128  8bd38860       constant
0xffff8bdbd6a4   132  0000ffff       constant
0xffff8bdbd6a8   136  26cc9f09       constant
0xffff8bdbd6ac   140  00000000       constant
0xffff8bdbd6b0   144  8bd22420       constant
0xffff8bdbd6b4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdbd630  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bdbd644  embedded object  (0x3271d5d9 WeakCell for 0x5f52ff41 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdbd660  embedded object  (0x26cc9f09 <String[6]: super_>)
0xffff8bdbd664  code target (HANDLER)  (0xffff8bd38860)
0xffff8bdbd66c  embedded object  (0x26cc9f09 <String[6]: super_>)
0xffff8bdbd678  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdbd680  constant pool (size 56)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 781)
0xffff8bdbd720     0  movz x2, #0xe2c0
0xffff8bdbd724     4  movk x2, #0x2cb8, lsl #16
0xffff8bdbd728     8  ldp x3, x0, [x2]
0xffff8bdbd72c    12  adds x16, x3, #0x130 (304)
0xffff8bdbd730    16  ccmp x16, x0, #nzCv, lo
0xffff8bdbd734    20  b.hi #+0x150 (addr 0xffff8bdbd884)
0xffff8bdbd738    24  str x16, [x2]
0xffff8bdbd73c    28  orr x3, x3, #0x1
0xffff8bdbd740    32  ldr x0, pc+432 (addr 0x0000ffff8bdbd8f0)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdbd744    36  stur x0, [x3, #-1]
0xffff8bdbd748    40  movz x0, #0x2400000000
0xffff8bdbd74c    44  stur x0, [x3, #7]
0xffff8bdbd750    48  stur x1, [x3, #15]
0xffff8bdbd754    52  stur cp, [x3, #23]
0xffff8bdbd758    56  ldr x0, pc+416 (addr 0x0000ffff8bdbd8f8)    ;; object: 0x26c04519 <the hole>
0xffff8bdbd75c    60  stur x0, [x3, #31]
0xffff8bdbd760    64  ldur x0, [cp, #39]
0xffff8bdbd764    68  stur x0, [x3, #39]
0xffff8bdbd768    72  ldr x0, pc+408 (addr 0x0000ffff8bdbd900)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd76c    76  stur x0, [x3, #47]
0xffff8bdbd770    80  ldr x0, pc+408 (addr 0x0000ffff8bdbd908)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd774    84  stur x0, [x3, #55]
0xffff8bdbd778    88  ldr x0, pc+408 (addr 0x0000ffff8bdbd910)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd77c    92  stur x0, [x3, #63]
0xffff8bdbd780    96  ldr x0, pc+408 (addr 0x0000ffff8bdbd918)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd784   100  stur x0, [x3, #71]
0xffff8bdbd788   104  ldr x0, pc+408 (addr 0x0000ffff8bdbd920)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd78c   108  stur x0, [x3, #79]
0xffff8bdbd790   112  ldr x0, pc+408 (addr 0x0000ffff8bdbd928)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd794   116  stur x0, [x3, #87]
0xffff8bdbd798   120  ldr x0, pc+408 (addr 0x0000ffff8bdbd930)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd79c   124  stur x0, [x3, #95]
0xffff8bdbd7a0   128  ldr x0, pc+408 (addr 0x0000ffff8bdbd938)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7a4   132  stur x0, [x3, #103]
0xffff8bdbd7a8   136  ldr x0, pc+408 (addr 0x0000ffff8bdbd940)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7ac   140  stur x0, [x3, #111]
0xffff8bdbd7b0   144  ldr x0, pc+408 (addr 0x0000ffff8bdbd948)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7b4   148  stur x0, [x3, #119]
0xffff8bdbd7b8   152  ldr x0, pc+408 (addr 0x0000ffff8bdbd950)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7bc   156  stur x0, [x3, #127]
0xffff8bdbd7c0   160  ldr x0, pc+408 (addr 0x0000ffff8bdbd958)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7c4   164  stur x0, [x3, #135]
0xffff8bdbd7c8   168  ldr x0, pc+408 (addr 0x0000ffff8bdbd960)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7cc   172  stur x0, [x3, #143]
0xffff8bdbd7d0   176  ldr x0, pc+408 (addr 0x0000ffff8bdbd968)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7d4   180  stur x0, [x3, #151]
0xffff8bdbd7d8   184  ldr x0, pc+408 (addr 0x0000ffff8bdbd970)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7dc   188  stur x0, [x3, #159]
0xffff8bdbd7e0   192  ldr x0, pc+408 (addr 0x0000ffff8bdbd978)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7e4   196  stur x0, [x3, #167]
0xffff8bdbd7e8   200  ldr x0, pc+408 (addr 0x0000ffff8bdbd980)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7ec   204  stur x0, [x3, #175]
0xffff8bdbd7f0   208  ldr x0, pc+408 (addr 0x0000ffff8bdbd988)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7f4   212  stur x0, [x3, #183]
0xffff8bdbd7f8   216  ldr x0, pc+408 (addr 0x0000ffff8bdbd990)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7fc   220  stur x0, [x3, #191]
0xffff8bdbd800   224  ldr x0, pc+408 (addr 0x0000ffff8bdbd998)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd804   228  stur x0, [x3, #199]
0xffff8bdbd808   232  ldr x0, pc+408 (addr 0x0000ffff8bdbd9a0)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd80c   236  stur x0, [x3, #207]
0xffff8bdbd810   240  ldr x0, pc+408 (addr 0x0000ffff8bdbd9a8)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd814   244  stur x0, [x3, #215]
0xffff8bdbd818   248  ldr x0, pc+408 (addr 0x0000ffff8bdbd9b0)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd81c   252  stur x0, [x3, #223]
0xffff8bdbd820   256  ldr x0, pc+408 (addr 0x0000ffff8bdbd9b8)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd824   260  stur x0, [x3, #231]
0xffff8bdbd828   264  ldr x0, pc+408 (addr 0x0000ffff8bdbd9c0)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd82c   268  stur x0, [x3, #239]
0xffff8bdbd830   272  ldr x0, pc+408 (addr 0x0000ffff8bdbd9c8)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd834   276  stur x0, [x3, #247]
0xffff8bdbd838   280  ldr x0, pc+408 (addr 0x0000ffff8bdbd9d0)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd83c   284  stur x0, [x3, #255]
0xffff8bdbd840   288  ldr x0, pc+408 (addr 0x0000ffff8bdbd9d8)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd844   292  movz x16, #0x107
0xffff8bdbd848   296  str x0, [x3, x16]
0xffff8bdbd84c   300  ldr x0, pc+404 (addr 0x0000ffff8bdbd9e0)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd850   304  movz x16, #0x10f
0xffff8bdbd854   308  str x0, [x3, x16]
0xffff8bdbd858   312  ldr x0, pc+400 (addr 0x0000ffff8bdbd9e8)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd85c   316  movz x16, #0x117
0xffff8bdbd860   320  str x0, [x3, x16]
0xffff8bdbd864   324  ldr x0, pc+396 (addr 0x0000ffff8bdbd9f0)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd868   328  movz x16, #0x11f
0xffff8bdbd86c   332  str x0, [x3, x16]
0xffff8bdbd870   336  ldr x0, pc+392 (addr 0x0000ffff8bdbd9f8)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd874   340  movz x16, #0x127
0xffff8bdbd878   344  str x0, [x3, x16]
0xffff8bdbd87c   348  mov x0, x3
0xffff8bdbd880   352  ret
0xffff8bdbd884   356  sub csp, jssp, #0x10 (16)
0xffff8bdbd888   360  stp fp, lr, [jssp, #-16]!
0xffff8bdbd88c   364  movz fp, #0xa00000000
0xffff8bdbd890   368  sub csp, jssp, #0x8 (8)
0xffff8bdbd894   372  str fp, [jssp, #-8]!
0xffff8bdbd898   376  add fp, jssp, #0x8 (8)
0xffff8bdbd89c   380  movz x3, #0x0
0xffff8bdbd8a0   384  mov x16, lr
0xffff8bdbd8a4   388  ldr x17, pc+348 (addr 0x0000ffff8bdbda00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdbd8a8   392  blr x17
0xffff8bdbd8ac   396  movz x0, #0x13000000000
0xffff8bdbd8b0   400  movz x10, #0x0
0xffff8bdbd8b4   404  sub csp, jssp, #0x10 (16)
0xffff8bdbd8b8   408  stp x10, x0, [jssp, #-16]!
0xffff8bdbd8bc   412  movz x0, #0x2
0xffff8bdbd8c0   416  movz x1, #0x5b88
0xffff8bdbd8c4   420  movk x1, #0xe2, lsl #16
0xffff8bdbd8c8   424  ldr x16, pc+320 (addr 0x0000ffff8bdbda08)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdbd8cc   428  blr x16
0xffff8bdbd8d0   432  str x0, [jssp, #24]
0xffff8bdbd8d4   436  ldr x16, pc+316 (addr 0x0000ffff8bdbda10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdbd8d8   440  blr x16
0xffff8bdbd8dc   444  ldr lr, [jssp, #16]
0xffff8bdbd8e0   448  ldp xzr, fp, [jssp], #24
0xffff8bdbd8e4   452  b #-0x1a4 (addr 0xffff8bdbd740)
0xffff8bdbd8e8   456  5800097f       constant pool begin (num_const = 75)    ;; constant pool
0xffff8bdbd8ec   460  d63f03e0       constant
0xffff8bdbd8f0   464  5f506149       constant
0xffff8bdbd8f4   468  00000000       constant
0xffff8bdbd8f8   472  26c04519       constant
0xffff8bdbd8fc   476  00000000       constant
0xffff8bdbd900   480  26c04241       constant
0xffff8bdbd904   484  00000000       constant
0xffff8bdbd908   488  26c04241       constant
0xffff8bdbd90c   492  00000000       constant
0xffff8bdbd910   496  26c04241       constant
0xffff8bdbd914   500  00000000       constant
0xffff8bdbd918   504  26c04241       constant
0xffff8bdbd91c   508  00000000       constant
0xffff8bdbd920   512  26c04241       constant
0xffff8bdbd924   516  00000000       constant
0xffff8bdbd928   520  26c04241       constant
0xffff8bdbd92c   524  00000000       constant
0xffff8bdbd930   528  26c04241       constant
0xffff8bdbd934   532  00000000       constant
0xffff8bdbd938   536  26c04241       constant
0xffff8bdbd93c   540  00000000       constant
0xffff8bdbd940   544  26c04241       constant
0xffff8bdbd944   548  00000000       constant
0xffff8bdbd948   552  26c04241       constant
0xffff8bdbd94c   556  00000000       constant
0xffff8bdbd950   560  26c04241       constant
0xffff8bdbd954   564  00000000       constant
0xffff8bdbd958   568  26c04241       constant
0xffff8bdbd95c   572  00000000       constant
0xffff8bdbd960   576  26c04241       constant
0xffff8bdbd964   580  00000000       constant
0xffff8bdbd968   584  26c04241       constant
0xffff8bdbd96c   588  00000000       constant
0xffff8bdbd970   592  26c04241       constant
0xffff8bdbd974   596  00000000       constant
0xffff8bdbd978   600  26c04241       constant
0xffff8bdbd97c   604  00000000       constant
0xffff8bdbd980   608  26c04241       constant
0xffff8bdbd984   612  00000000       constant
0xffff8bdbd988   616  26c04241       constant
0xffff8bdbd98c   620  00000000       constant
0xffff8bdbd990   624  26c04241       constant
0xffff8bdbd994   628  00000000       constant
0xffff8bdbd998   632  26c04241       constant
0xffff8bdbd99c   636  00000000       constant
0xffff8bdbd9a0   640  26c04241       constant
0xffff8bdbd9a4   644  00000000       constant
0xffff8bdbd9a8   648  26c04241       constant
0xffff8bdbd9ac   652  00000000       constant
0xffff8bdbd9b0   656  26c04241       constant
0xffff8bdbd9b4   660  00000000       constant
0xffff8bdbd9b8   664  26c04241       constant
0xffff8bdbd9bc   668  00000000       constant
0xffff8bdbd9c0   672  26c04241       constant
0xffff8bdbd9c4   676  00000000       constant
0xffff8bdbd9c8   680  26c04241       constant
0xffff8bdbd9cc   684  00000000       constant
0xffff8bdbd9d0   688  26c04241       constant
0xffff8bdbd9d4   692  00000000       constant
0xffff8bdbd9d8   696  26c04241       constant
0xffff8bdbd9dc   700  00000000       constant
0xffff8bdbd9e0   704  26c04241       constant
0xffff8bdbd9e4   708  00000000       constant
0xffff8bdbd9e8   712  26c04241       constant
0xffff8bdbd9ec   716  00000000       constant
0xffff8bdbd9f0   720  26c04241       constant
0xffff8bdbd9f4   724  00000000       constant
0xffff8bdbd9f8   728  26c04241       constant
0xffff8bdbd9fc   732  00000000       constant
0xffff8bdbda00   736  8bd06820       constant
0xffff8bdbda04   740  0000ffff       constant
0xffff8bdbda08   744  8bd06260       constant
0xffff8bdbda0c   748  0000ffff       constant
0xffff8bdbda10   752  8bd068e0       constant
0xffff8bdbda14   756  0000ffff       constant


Safepoints (size = 21)
0xffff8bdbd8d0   432  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 43)
0xffff8bdbd740  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdbd758  embedded object  (0x26c04519 <the hole>)
0xffff8bdbd768  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd770  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd778  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd780  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd788  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd790  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd798  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7a0  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7a8  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7b0  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7b8  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7c0  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7c8  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7d0  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7d8  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7e0  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7e8  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7f0  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7f8  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd800  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd808  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd810  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd818  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd820  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd828  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd830  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd838  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd840  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd84c  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd858  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd864  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd870  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd8a4  code target (STUB)  (0xffff8bd06820)
0xffff8bdbd8c8  code target (STUB)  (0xffff8bd06260)
0xffff8bdbd8d4  code target (STUB)  (0xffff8bd068e0)
0xffff8bdbd8e8  constant pool (size 304)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 781)
0xffff8bdbd720     0  movz x2, #0xe2c0
0xffff8bdbd724     4  movk x2, #0x2cb8, lsl #16
0xffff8bdbd728     8  ldp x3, x0, [x2]
0xffff8bdbd72c    12  adds x16, x3, #0x130 (304)
0xffff8bdbd730    16  ccmp x16, x0, #nzCv, lo
0xffff8bdbd734    20  b.hi #+0x150 (addr 0xffff8bdbd884)
0xffff8bdbd738    24  str x16, [x2]
0xffff8bdbd73c    28  orr x3, x3, #0x1
0xffff8bdbd740    32  ldr x0, pc+432 (addr 0x0000ffff8bdbd8f0)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdbd744    36  stur x0, [x3, #-1]
0xffff8bdbd748    40  movz x0, #0x2400000000
0xffff8bdbd74c    44  stur x0, [x3, #7]
0xffff8bdbd750    48  stur x1, [x3, #15]
0xffff8bdbd754    52  stur cp, [x3, #23]
0xffff8bdbd758    56  ldr x0, pc+416 (addr 0x0000ffff8bdbd8f8)    ;; object: 0x26c04519 <the hole>
0xffff8bdbd75c    60  stur x0, [x3, #31]
0xffff8bdbd760    64  ldur x0, [cp, #39]
0xffff8bdbd764    68  stur x0, [x3, #39]
0xffff8bdbd768    72  ldr x0, pc+408 (addr 0x0000ffff8bdbd900)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd76c    76  stur x0, [x3, #47]
0xffff8bdbd770    80  ldr x0, pc+408 (addr 0x0000ffff8bdbd908)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd774    84  stur x0, [x3, #55]
0xffff8bdbd778    88  ldr x0, pc+408 (addr 0x0000ffff8bdbd910)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd77c    92  stur x0, [x3, #63]
0xffff8bdbd780    96  ldr x0, pc+408 (addr 0x0000ffff8bdbd918)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd784   100  stur x0, [x3, #71]
0xffff8bdbd788   104  ldr x0, pc+408 (addr 0x0000ffff8bdbd920)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd78c   108  stur x0, [x3, #79]
0xffff8bdbd790   112  ldr x0, pc+408 (addr 0x0000ffff8bdbd928)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd794   116  stur x0, [x3, #87]
0xffff8bdbd798   120  ldr x0, pc+408 (addr 0x0000ffff8bdbd930)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd79c   124  stur x0, [x3, #95]
0xffff8bdbd7a0   128  ldr x0, pc+408 (addr 0x0000ffff8bdbd938)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7a4   132  stur x0, [x3, #103]
0xffff8bdbd7a8   136  ldr x0, pc+408 (addr 0x0000ffff8bdbd940)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7ac   140  stur x0, [x3, #111]
0xffff8bdbd7b0   144  ldr x0, pc+408 (addr 0x0000ffff8bdbd948)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7b4   148  stur x0, [x3, #119]
0xffff8bdbd7b8   152  ldr x0, pc+408 (addr 0x0000ffff8bdbd950)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7bc   156  stur x0, [x3, #127]
0xffff8bdbd7c0   160  ldr x0, pc+408 (addr 0x0000ffff8bdbd958)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7c4   164  stur x0, [x3, #135]
0xffff8bdbd7c8   168  ldr x0, pc+408 (addr 0x0000ffff8bdbd960)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7cc   172  stur x0, [x3, #143]
0xffff8bdbd7d0   176  ldr x0, pc+408 (addr 0x0000ffff8bdbd968)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7d4   180  stur x0, [x3, #151]
0xffff8bdbd7d8   184  ldr x0, pc+408 (addr 0x0000ffff8bdbd970)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7dc   188  stur x0, [x3, #159]
0xffff8bdbd7e0   192  ldr x0, pc+408 (addr 0x0000ffff8bdbd978)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7e4   196  stur x0, [x3, #167]
0xffff8bdbd7e8   200  ldr x0, pc+408 (addr 0x0000ffff8bdbd980)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7ec   204  stur x0, [x3, #175]
0xffff8bdbd7f0   208  ldr x0, pc+408 (addr 0x0000ffff8bdbd988)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7f4   212  stur x0, [x3, #183]
0xffff8bdbd7f8   216  ldr x0, pc+408 (addr 0x0000ffff8bdbd990)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd7fc   220  stur x0, [x3, #191]
0xffff8bdbd800   224  ldr x0, pc+408 (addr 0x0000ffff8bdbd998)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd804   228  stur x0, [x3, #199]
0xffff8bdbd808   232  ldr x0, pc+408 (addr 0x0000ffff8bdbd9a0)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd80c   236  stur x0, [x3, #207]
0xffff8bdbd810   240  ldr x0, pc+408 (addr 0x0000ffff8bdbd9a8)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd814   244  stur x0, [x3, #215]
0xffff8bdbd818   248  ldr x0, pc+408 (addr 0x0000ffff8bdbd9b0)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd81c   252  stur x0, [x3, #223]
0xffff8bdbd820   256  ldr x0, pc+408 (addr 0x0000ffff8bdbd9b8)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd824   260  stur x0, [x3, #231]
0xffff8bdbd828   264  ldr x0, pc+408 (addr 0x0000ffff8bdbd9c0)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd82c   268  stur x0, [x3, #239]
0xffff8bdbd830   272  ldr x0, pc+408 (addr 0x0000ffff8bdbd9c8)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd834   276  stur x0, [x3, #247]
0xffff8bdbd838   280  ldr x0, pc+408 (addr 0x0000ffff8bdbd9d0)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd83c   284  stur x0, [x3, #255]
0xffff8bdbd840   288  ldr x0, pc+408 (addr 0x0000ffff8bdbd9d8)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd844   292  movz x16, #0x107
0xffff8bdbd848   296  str x0, [x3, x16]
0xffff8bdbd84c   300  ldr x0, pc+404 (addr 0x0000ffff8bdbd9e0)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd850   304  movz x16, #0x10f
0xffff8bdbd854   308  str x0, [x3, x16]
0xffff8bdbd858   312  ldr x0, pc+400 (addr 0x0000ffff8bdbd9e8)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd85c   316  movz x16, #0x117
0xffff8bdbd860   320  str x0, [x3, x16]
0xffff8bdbd864   324  ldr x0, pc+396 (addr 0x0000ffff8bdbd9f0)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd868   328  movz x16, #0x11f
0xffff8bdbd86c   332  str x0, [x3, x16]
0xffff8bdbd870   336  ldr x0, pc+392 (addr 0x0000ffff8bdbd9f8)    ;; object: 0x26c04241 <undefined>
0xffff8bdbd874   340  movz x16, #0x127
0xffff8bdbd878   344  str x0, [x3, x16]
0xffff8bdbd87c   348  mov x0, x3
0xffff8bdbd880   352  ret
0xffff8bdbd884   356  sub csp, jssp, #0x10 (16)
0xffff8bdbd888   360  stp fp, lr, [jssp, #-16]!
0xffff8bdbd88c   364  movz fp, #0xa00000000
0xffff8bdbd890   368  sub csp, jssp, #0x8 (8)
0xffff8bdbd894   372  str fp, [jssp, #-8]!
0xffff8bdbd898   376  add fp, jssp, #0x8 (8)
0xffff8bdbd89c   380  movz x3, #0x0
0xffff8bdbd8a0   384  mov x16, lr
0xffff8bdbd8a4   388  ldr x17, pc+348 (addr 0x0000ffff8bdbda00)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdbd8a8   392  blr x17
0xffff8bdbd8ac   396  movz x0, #0x13000000000
0xffff8bdbd8b0   400  movz x10, #0x0
0xffff8bdbd8b4   404  sub csp, jssp, #0x10 (16)
0xffff8bdbd8b8   408  stp x10, x0, [jssp, #-16]!
0xffff8bdbd8bc   412  movz x0, #0x2
0xffff8bdbd8c0   416  movz x1, #0x5b88
0xffff8bdbd8c4   420  movk x1, #0xe2, lsl #16
0xffff8bdbd8c8   424  ldr x16, pc+320 (addr 0x0000ffff8bdbda08)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdbd8cc   428  blr x16
0xffff8bdbd8d0   432  str x0, [jssp, #24]
0xffff8bdbd8d4   436  ldr x16, pc+316 (addr 0x0000ffff8bdbda10)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdbd8d8   440  blr x16
0xffff8bdbd8dc   444  ldr lr, [jssp, #16]
0xffff8bdbd8e0   448  ldp xzr, fp, [jssp], #24
0xffff8bdbd8e4   452  b #-0x1a4 (addr 0xffff8bdbd740)
0xffff8bdbd8e8   456  5800097f       constant pool begin (num_const = 75)    ;; constant pool
0xffff8bdbd8ec   460  d63f03e0       constant
0xffff8bdbd8f0   464  5f506149       constant
0xffff8bdbd8f4   468  00000000       constant
0xffff8bdbd8f8   472  26c04519       constant
0xffff8bdbd8fc   476  00000000       constant
0xffff8bdbd900   480  26c04241       constant
0xffff8bdbd904   484  00000000       constant
0xffff8bdbd908   488  26c04241       constant
0xffff8bdbd90c   492  00000000       constant
0xffff8bdbd910   496  26c04241       constant
0xffff8bdbd914   500  00000000       constant
0xffff8bdbd918   504  26c04241       constant
0xffff8bdbd91c   508  00000000       constant
0xffff8bdbd920   512  26c04241       constant
0xffff8bdbd924   516  00000000       constant
0xffff8bdbd928   520  26c04241       constant
0xffff8bdbd92c   524  00000000       constant
0xffff8bdbd930   528  26c04241       constant
0xffff8bdbd934   532  00000000       constant
0xffff8bdbd938   536  26c04241       constant
0xffff8bdbd93c   540  00000000       constant
0xffff8bdbd940   544  26c04241       constant
0xffff8bdbd944   548  00000000       constant
0xffff8bdbd948   552  26c04241       constant
0xffff8bdbd94c   556  00000000       constant
0xffff8bdbd950   560  26c04241       constant
0xffff8bdbd954   564  00000000       constant
0xffff8bdbd958   568  26c04241       constant
0xffff8bdbd95c   572  00000000       constant
0xffff8bdbd960   576  26c04241       constant
0xffff8bdbd964   580  00000000       constant
0xffff8bdbd968   584  26c04241       constant
0xffff8bdbd96c   588  00000000       constant
0xffff8bdbd970   592  26c04241       constant
0xffff8bdbd974   596  00000000       constant
0xffff8bdbd978   600  26c04241       constant
0xffff8bdbd97c   604  00000000       constant
0xffff8bdbd980   608  26c04241       constant
0xffff8bdbd984   612  00000000       constant
0xffff8bdbd988   616  26c04241       constant
0xffff8bdbd98c   620  00000000       constant
0xffff8bdbd990   624  26c04241       constant
0xffff8bdbd994   628  00000000       constant
0xffff8bdbd998   632  26c04241       constant
0xffff8bdbd99c   636  00000000       constant
0xffff8bdbd9a0   640  26c04241       constant
0xffff8bdbd9a4   644  00000000       constant
0xffff8bdbd9a8   648  26c04241       constant
0xffff8bdbd9ac   652  00000000       constant
0xffff8bdbd9b0   656  26c04241       constant
0xffff8bdbd9b4   660  00000000       constant
0xffff8bdbd9b8   664  26c04241       constant
0xffff8bdbd9bc   668  00000000       constant
0xffff8bdbd9c0   672  26c04241       constant
0xffff8bdbd9c4   676  00000000       constant
0xffff8bdbd9c8   680  26c04241       constant
0xffff8bdbd9cc   684  00000000       constant
0xffff8bdbd9d0   688  26c04241       constant
0xffff8bdbd9d4   692  00000000       constant
0xffff8bdbd9d8   696  26c04241       constant
0xffff8bdbd9dc   700  00000000       constant
0xffff8bdbd9e0   704  26c04241       constant
0xffff8bdbd9e4   708  00000000       constant
0xffff8bdbd9e8   712  26c04241       constant
0xffff8bdbd9ec   716  00000000       constant
0xffff8bdbd9f0   720  26c04241       constant
0xffff8bdbd9f4   724  00000000       constant
0xffff8bdbd9f8   728  26c04241       constant
0xffff8bdbd9fc   732  00000000       constant
0xffff8bdbda00   736  8bd06820       constant
0xffff8bdbda04   740  0000ffff       constant
0xffff8bdbda08   744  8bd06260       constant
0xffff8bdbda0c   748  0000ffff       constant
0xffff8bdbda10   752  8bd068e0       constant
0xffff8bdbda14   756  0000ffff       constant


Safepoints (size = 21)
0xffff8bdbd8d0   432  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 43)
0xffff8bdbd740  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdbd758  embedded object  (0x26c04519 <the hole>)
0xffff8bdbd768  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd770  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd778  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd780  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd788  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd790  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd798  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7a0  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7a8  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7b0  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7b8  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7c0  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7c8  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7d0  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7d8  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7e0  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7e8  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7f0  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd7f8  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd800  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd808  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd810  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd818  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd820  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd828  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd830  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd838  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd840  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd84c  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd858  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd864  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd870  embedded object  (0x26c04241 <undefined>)
0xffff8bdbd8a4  code target (STUB)  (0xffff8bd06820)
0xffff8bdbd8c8  code target (STUB)  (0xffff8bd06260)
0xffff8bdbd8d4  code target (STUB)  (0xffff8bd068e0)
0xffff8bdbd8e8  constant pool (size 304)


kind = HANDLER
major_key = <NoCache>Stub
name = toUpperCase
compiler = unknown
Instructions (size = 152)
0xffff8bdbf0a0     0  sub csp, jssp, #0x8 (8)
0xffff8bdbf0a4     4  str x3, [jssp, #-8]!
0xffff8bdbf0a8     8  sub csp, jssp, #0x8 (8)
0xffff8bdbf0ac    12  str x0, [jssp, #-8]!
0xffff8bdbf0b0    16  ldur x3, [cp, #39]
0xffff8bdbf0b4    20  movz x16, #0x2e7
0xffff8bdbf0b8    24  ldr x3, [x3, x16]
0xffff8bdbf0bc    28  ldur x3, [x3, #23]
0xffff8bdbf0c0    32  ldur x3, [x3, #23]
0xffff8bdbf0c4    36  ldr x0, pc+84 (addr 0x0000ffff8bdbf118)    ;; object: 0x26c63e59 Cell for 0
0xffff8bdbf0c8    40  ldur x0, [x0, #7]
0xffff8bdbf0cc    44  cmp x0, #0x0 (0)
0xffff8bdbf0d0    48  b.ne #+0x1c (addr 0xffff8bdbf0ec)
0xffff8bdbf0d4    52  ldur x0, [x3, #-1]
0xffff8bdbf0d8    56  ldr x4, pc+72 (addr 0x0000ffff8bdbf120)    ;; object: 0x32706e39 WeakCell for 0x5f5156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff8bdbf0dc    60  ldur x4, [x4, #7]
0xffff8bdbf0e0    64  cmp x0, x4
0xffff8bdbf0e4    68  b.ne #+0x8 (addr 0xffff8bdbf0ec)
0xffff8bdbf0e8    72  b #+0x14 (addr 0xffff8bdbf0fc)
0xffff8bdbf0ec    76  ldr x0, [jssp], #8
0xffff8bdbf0f0    80  ldr x3, [jssp], #8
0xffff8bdbf0f4    84  ldr x16, pc+52 (addr 0x0000ffff8bdbf128)    ;; code: BUILTIN
0xffff8bdbf0f8    88  br x16
0xffff8bdbf0fc    92  add jssp, jssp, #0x10 (16)
0xffff8bdbf100    96  mov x1, x3
0xffff8bdbf104   100  ldr x16, pc+44 (addr 0x0000ffff8bdbf130)    ;; code: HANDLER, LoadConstantStub, minor: 25
0xffff8bdbf108   104  br x16
0xffff8bdbf10c   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff8bdbf110   112  d63f03e0       constant
0xffff8bdbf114   116  d503201f       constant
0xffff8bdbf118   120  26c63e59       constant
0xffff8bdbf11c   124  00000000       constant
0xffff8bdbf120   128  32706e39       constant
0xffff8bdbf124   132  00000000       constant
0xffff8bdbf128   136  8bd222e0       constant
0xffff8bdbf12c   140  0000ffff       constant
0xffff8bdbf130   144  8bd7b440       constant
0xffff8bdbf134   148  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdbf0c4  embedded object  (0x26c63e59 Cell for 0)
0xffff8bdbf0d8  embedded object  (0x32706e39 WeakCell for 0x5f5156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff8bdbf0f4  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdbf104  code target (HANDLER)  (0xffff8bd7b440)
0xffff8bdbf10c  constant pool (size 44)

kind = HANDLER
major_key = <NoCache>Stub
name = RegExp
compiler = unknown
Instructions (size = 120)
0xffff8bdbf1a0     0  sub csp, jssp, #0x8 (8)
0xffff8bdbf1a4     4  str x3, [jssp, #-8]!
0xffff8bdbf1a8     8  sub csp, jssp, #0x8 (8)
0xffff8bdbf1ac    12  str x0, [jssp, #-8]!
0xffff8bdbf1b0    16  ldr x0, pc+80 (addr 0x0000ffff8bdbf200)    ;; object: 0x26cc5d51 Cell for 0
0xffff8bdbf1b4    20  ldur x0, [x0, #7]
0xffff8bdbf1b8    24  cmp x0, #0x0 (0)
0xffff8bdbf1bc    28  b.ne #+0x2c (addr 0xffff8bdbf1e8)
0xffff8bdbf1c0    32  ldr x0, pc+72 (addr 0x0000ffff8bdbf208)    ;; object: 0x32720c49 WeakCell for 0x26c46281 PropertyCell for 0x26c46219 <JS Function RegExp (SharedFunctionInfo 0x26c46171)>
0xffff8bdbf1c4    36  ldur x0, [x0, #7]
0xffff8bdbf1c8    40  tbz w0, #0, #+0x20 (addr 0xffff8bdbf1e8)
0xffff8bdbf1cc    44  ldur x0, [x0, #15]
0xffff8bdbf1d0    48  ldr x16, [x26, #88]
0xffff8bdbf1d4    52  cmp x0, x16
0xffff8bdbf1d8    56  b.eq #+0x10 (addr 0xffff8bdbf1e8)
0xffff8bdbf1dc    60  add jssp, jssp, #0x10 (16)
0xffff8bdbf1e0    64  ret
0xffff8bdbf1e4    68  b #+0x14 (addr 0xffff8bdbf1f8)
0xffff8bdbf1e8    72  ldr x0, [jssp], #8
0xffff8bdbf1ec    76  ldr x3, [jssp], #8
0xffff8bdbf1f0    80  ldr x16, pc+32 (addr 0x0000ffff8bdbf210)    ;; code: BUILTIN
0xffff8bdbf1f4    84  br x16
0xffff8bdbf1f8    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bdbf1fc    92  d63f03e0       constant
0xffff8bdbf200    96  26cc5d51       constant
0xffff8bdbf204   100  00000000       constant
0xffff8bdbf208   104  32720c49       constant
0xffff8bdbf20c   108  00000000       constant
0xffff8bdbf210   112  8bd222e0       constant
0xffff8bdbf214   116  0000ffff       constant


RelocInfo (size = 9)
0xffff8bdbf1b0  embedded object  (0x26cc5d51 Cell for 0)
0xffff8bdbf1c0  embedded object  (0x32720c49 WeakCell for 0x26c46281 PropertyCell for 0x26c46219 <JS Function RegExp (SharedFunctionInfo 0x26c46171)>)
0xffff8bdbf1f0  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdbf1f8  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = test
compiler = unknown
Instructions (size = 120)
0xffff8bdbf280     0  sub csp, jssp, #0x8 (8)
0xffff8bdbf284     4  str x3, [jssp, #-8]!
0xffff8bdbf288     8  sub csp, jssp, #0x8 (8)
0xffff8bdbf28c    12  str x0, [jssp, #-8]!
0xffff8bdbf290    16  ldr x0, pc+72 (addr 0x0000ffff8bdbf2d8)    ;; object: 0x26ced491 Cell for 0
0xffff8bdbf294    20  ldur x0, [x0, #7]
0xffff8bdbf298    24  cmp x0, #0x0 (0)
0xffff8bdbf29c    28  b.ne #+0x14 (addr 0xffff8bdbf2b0)
0xffff8bdbf2a0    32  ldr x3, pc+64 (addr 0x0000ffff8bdbf2e0)    ;; object: 0x32720c81 WeakCell for 0x5696ca81 <an Object with map 0x5f5164d1>
0xffff8bdbf2a4    36  ldur x3, [x3, #7]
0xffff8bdbf2a8    40  tbz w3, #0, #+0x8 (addr 0xffff8bdbf2b0)
0xffff8bdbf2ac    44  b #+0x14 (addr 0xffff8bdbf2c0)
0xffff8bdbf2b0    48  ldr x0, [jssp], #8
0xffff8bdbf2b4    52  ldr x3, [jssp], #8
0xffff8bdbf2b8    56  ldr x16, pc+48 (addr 0x0000ffff8bdbf2e8)    ;; code: BUILTIN
0xffff8bdbf2bc    60  br x16
0xffff8bdbf2c0    64  add jssp, jssp, #0x10 (16)
0xffff8bdbf2c4    68  mov x1, x3
0xffff8bdbf2c8    72  ldr x16, pc+40 (addr 0x0000ffff8bdbf2f0)    ;; code: HANDLER, LoadFieldStub, minor: 7
0xffff8bdbf2cc    76  br x16
0xffff8bdbf2d0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdbf2d4    84  d63f03e0       constant
0xffff8bdbf2d8    88  26ced491       constant
0xffff8bdbf2dc    92  00000000       constant
0xffff8bdbf2e0    96  32720c81       constant
0xffff8bdbf2e4   100  00000000       constant
0xffff8bdbf2e8   104  8bd222e0       constant
0xffff8bdbf2ec   108  0000ffff       constant
0xffff8bdbf2f0   112  8bd67340       constant
0xffff8bdbf2f4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdbf290  embedded object  (0x26ced491 Cell for 0)
0xffff8bdbf2a0  embedded object  (0x32720c81 WeakCell for 0x5696ca81 <an Object with map 0x5f5164d1>)
0xffff8bdbf2b8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdbf2c8  code target (HANDLER)  (0xffff8bd67340)
0xffff8bdbf2d0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = super_
compiler = unknown
Instructions (size = 168)
0xffff8bdbff00     0  sub csp, jssp, #0x8 (8)
0xffff8bdbff04     4  str x3, [jssp, #-8]!
0xffff8bdbff08     8  sub csp, jssp, #0x8 (8)
0xffff8bdbff0c    12  str x4, [jssp, #-8]!
0xffff8bdbff10    16  ldr x3, pc+104 (addr 0x0000ffff8bdbff78)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bdbff14    20  ldur x3, [x3, #7]
0xffff8bdbff18    24  cmp x3, #0x0 (0)
0xffff8bdbff1c    28  b.ne #+0x3c (addr 0xffff8bdbff58)
0xffff8bdbff20    32  ldr x5, pc+96 (addr 0x0000ffff8bdbff80)    ;; object: 0x32721e39 WeakCell for 0x5f530469 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdbff24    36  ldur x5, [x5, #7]
0xffff8bdbff28    40  tbz w5, #0, #+0x30 (addr 0xffff8bdbff58)
0xffff8bdbff2c    44  ldursw x4, [x5, #15]
0xffff8bdbff30    48  tbnz w4, #23, #+0x28 (addr 0xffff8bdbff58)
0xffff8bdbff34    52  ldur x4, [x5, #47]
0xffff8bdbff38    56  ldur x4, [x4, #143]
0xffff8bdbff3c    60  cmp x0, x4
0xffff8bdbff40    64  b.ne #+0x18 (addr 0xffff8bdbff58)
0xffff8bdbff44    68  ldr x4, [jssp], #8
0xffff8bdbff48    72  ldr x3, [jssp], #8
0xffff8bdbff4c    76  ldr x2, pc+60 (addr 0x0000ffff8bdbff88)    ;; object: 0x26cc9f09 <String[6]: super_>
0xffff8bdbff50    80  ldr x16, pc+64 (addr 0x0000ffff8bdbff90)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff8bdbff54    84  br x16
0xffff8bdbff58    88  ldr x2, pc+64 (addr 0x0000ffff8bdbff98)    ;; object: 0x26cc9f09 <String[6]: super_>
0xffff8bdbff5c    92  ldr x4, [jssp], #8
0xffff8bdbff60    96  ldr x3, [jssp], #8
0xffff8bdbff64   100  ldr x16, pc+60 (addr 0x0000ffff8bdbffa0)    ;; code: BUILTIN
0xffff8bdbff68   104  br x16
0xffff8bdbff6c   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdbff70   112  d63f03e0       constant
0xffff8bdbff74   116  d503201f       constant
0xffff8bdbff78   120  26c5b0f1       constant
0xffff8bdbff7c   124  00000000       constant
0xffff8bdbff80   128  32721e39       constant
0xffff8bdbff84   132  00000000       constant
0xffff8bdbff88   136  26cc9f09       constant
0xffff8bdbff8c   140  00000000       constant
0xffff8bdbff90   144  8bd3cea0       constant
0xffff8bdbff94   148  0000ffff       constant
0xffff8bdbff98   152  26cc9f09       constant
0xffff8bdbff9c   156  00000000       constant
0xffff8bdbffa0   160  8bd22420       constant
0xffff8bdbffa4   164  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdbff10  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bdbff20  embedded object  (0x32721e39 WeakCell for 0x5f530469 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdbff4c  embedded object  (0x26cc9f09 <String[6]: super_>)
0xffff8bdbff50  code target (HANDLER)  (0xffff8bd3cea0)
0xffff8bdbff58  embedded object  (0x26cc9f09 <String[6]: super_>)
0xffff8bdbff64  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdbff6c  constant pool (size 60)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 621)
0xffff8bdc0020     0  movz x2, #0xe2c0
0xffff8bdc0024     4  movk x2, #0x2cb8, lsl #16
0xffff8bdc0028     8  ldp x3, x0, [x2]
0xffff8bdc002c    12  adds x16, x3, #0xe8 (232)
0xffff8bdc0030    16  ccmp x16, x0, #nzCv, lo
0xffff8bdc0034    20  b.hi #+0xf4 (addr 0xffff8bdc0128)
0xffff8bdc0038    24  str x16, [x2]
0xffff8bdc003c    28  orr x3, x3, #0x1
0xffff8bdc0040    32  ldr x0, pc+344 (addr 0x0000ffff8bdc0198)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdc0044    36  stur x0, [x3, #-1]
0xffff8bdc0048    40  movz x0, #0x1b00000000
0xffff8bdc004c    44  stur x0, [x3, #7]
0xffff8bdc0050    48  stur x1, [x3, #15]
0xffff8bdc0054    52  stur cp, [x3, #23]
0xffff8bdc0058    56  ldr x0, pc+328 (addr 0x0000ffff8bdc01a0)    ;; object: 0x26c04519 <the hole>
0xffff8bdc005c    60  stur x0, [x3, #31]
0xffff8bdc0060    64  ldur x0, [cp, #39]
0xffff8bdc0064    68  stur x0, [x3, #39]
0xffff8bdc0068    72  ldr x0, pc+320 (addr 0x0000ffff8bdc01a8)    ;; object: 0x26c04241 <undefined>
0xffff8bdc006c    76  stur x0, [x3, #47]
0xffff8bdc0070    80  ldr x0, pc+320 (addr 0x0000ffff8bdc01b0)    ;; object: 0x26c04241 <undefined>
0xffff8bdc0074    84  stur x0, [x3, #55]
0xffff8bdc0078    88  ldr x0, pc+320 (addr 0x0000ffff8bdc01b8)    ;; object: 0x26c04241 <undefined>
0xffff8bdc007c    92  stur x0, [x3, #63]
0xffff8bdc0080    96  ldr x0, pc+320 (addr 0x0000ffff8bdc01c0)    ;; object: 0x26c04241 <undefined>
0xffff8bdc0084   100  stur x0, [x3, #71]
0xffff8bdc0088   104  ldr x0, pc+320 (addr 0x0000ffff8bdc01c8)    ;; object: 0x26c04241 <undefined>
0xffff8bdc008c   108  stur x0, [x3, #79]
0xffff8bdc0090   112  ldr x0, pc+320 (addr 0x0000ffff8bdc01d0)    ;; object: 0x26c04241 <undefined>
0xffff8bdc0094   116  stur x0, [x3, #87]
0xffff8bdc0098   120  ldr x0, pc+320 (addr 0x0000ffff8bdc01d8)    ;; object: 0x26c04241 <undefined>
0xffff8bdc009c   124  stur x0, [x3, #95]
0xffff8bdc00a0   128  ldr x0, pc+320 (addr 0x0000ffff8bdc01e0)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00a4   132  stur x0, [x3, #103]
0xffff8bdc00a8   136  ldr x0, pc+320 (addr 0x0000ffff8bdc01e8)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00ac   140  stur x0, [x3, #111]
0xffff8bdc00b0   144  ldr x0, pc+320 (addr 0x0000ffff8bdc01f0)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00b4   148  stur x0, [x3, #119]
0xffff8bdc00b8   152  ldr x0, pc+320 (addr 0x0000ffff8bdc01f8)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00bc   156  stur x0, [x3, #127]
0xffff8bdc00c0   160  ldr x0, pc+320 (addr 0x0000ffff8bdc0200)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00c4   164  stur x0, [x3, #135]
0xffff8bdc00c8   168  ldr x0, pc+320 (addr 0x0000ffff8bdc0208)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00cc   172  stur x0, [x3, #143]
0xffff8bdc00d0   176  ldr x0, pc+320 (addr 0x0000ffff8bdc0210)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00d4   180  stur x0, [x3, #151]
0xffff8bdc00d8   184  ldr x0, pc+320 (addr 0x0000ffff8bdc0218)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00dc   188  stur x0, [x3, #159]
0xffff8bdc00e0   192  ldr x0, pc+320 (addr 0x0000ffff8bdc0220)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00e4   196  stur x0, [x3, #167]
0xffff8bdc00e8   200  ldr x0, pc+320 (addr 0x0000ffff8bdc0228)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00ec   204  stur x0, [x3, #175]
0xffff8bdc00f0   208  ldr x0, pc+320 (addr 0x0000ffff8bdc0230)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00f4   212  stur x0, [x3, #183]
0xffff8bdc00f8   216  ldr x0, pc+320 (addr 0x0000ffff8bdc0238)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00fc   220  stur x0, [x3, #191]
0xffff8bdc0100   224  ldr x0, pc+320 (addr 0x0000ffff8bdc0240)    ;; object: 0x26c04241 <undefined>
0xffff8bdc0104   228  stur x0, [x3, #199]
0xffff8bdc0108   232  ldr x0, pc+320 (addr 0x0000ffff8bdc0248)    ;; object: 0x26c04241 <undefined>
0xffff8bdc010c   236  stur x0, [x3, #207]
0xffff8bdc0110   240  ldr x0, pc+320 (addr 0x0000ffff8bdc0250)    ;; object: 0x26c04241 <undefined>
0xffff8bdc0114   244  stur x0, [x3, #215]
0xffff8bdc0118   248  ldr x0, pc+320 (addr 0x0000ffff8bdc0258)    ;; object: 0x26c04241 <undefined>
0xffff8bdc011c   252  stur x0, [x3, #223]
0xffff8bdc0120   256  mov x0, x3
0xffff8bdc0124   260  ret
0xffff8bdc0128   264  sub csp, jssp, #0x10 (16)
0xffff8bdc012c   268  stp fp, lr, [jssp, #-16]!
0xffff8bdc0130   272  movz fp, #0xa00000000
0xffff8bdc0134   276  sub csp, jssp, #0x8 (8)
0xffff8bdc0138   280  str fp, [jssp, #-8]!
0xffff8bdc013c   284  add fp, jssp, #0x8 (8)
0xffff8bdc0140   288  movz x3, #0x0
0xffff8bdc0144   292  mov x16, lr
0xffff8bdc0148   296  ldr x17, pc+280 (addr 0x0000ffff8bdc0260)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdc014c   300  blr x17
0xffff8bdc0150   304  movz x0, #0xe800000000
0xffff8bdc0154   308  movz x10, #0x0
0xffff8bdc0158   312  sub csp, jssp, #0x10 (16)
0xffff8bdc015c   316  stp x10, x0, [jssp, #-16]!
0xffff8bdc0160   320  movz x0, #0x2
0xffff8bdc0164   324  movz x1, #0x5b88
0xffff8bdc0168   328  movk x1, #0xe2, lsl #16
0xffff8bdc016c   332  ldr x16, pc+252 (addr 0x0000ffff8bdc0268)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdc0170   336  blr x16
0xffff8bdc0174   340  str x0, [jssp, #24]
0xffff8bdc0178   344  ldr x16, pc+248 (addr 0x0000ffff8bdc0270)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdc017c   348  blr x16
0xffff8bdc0180   352  ldr lr, [jssp, #16]
0xffff8bdc0184   356  ldp xzr, fp, [jssp], #24
0xffff8bdc0188   360  b #-0x148 (addr 0xffff8bdc0040)
0xffff8bdc018c   364  5800075f       constant pool begin (num_const = 58)    ;; constant pool
0xffff8bdc0190   368  d63f03e0       constant
0xffff8bdc0194   372  d503201f       constant
0xffff8bdc0198   376  5f506149       constant
0xffff8bdc019c   380  00000000       constant
0xffff8bdc01a0   384  26c04519       constant
0xffff8bdc01a4   388  00000000       constant
0xffff8bdc01a8   392  26c04241       constant
0xffff8bdc01ac   396  00000000       constant
0xffff8bdc01b0   400  26c04241       constant
0xffff8bdc01b4   404  00000000       constant
0xffff8bdc01b8   408  26c04241       constant
0xffff8bdc01bc   412  00000000       constant
0xffff8bdc01c0   416  26c04241       constant
0xffff8bdc01c4   420  00000000       constant
0xffff8bdc01c8   424  26c04241       constant
0xffff8bdc01cc   428  00000000       constant
0xffff8bdc01d0   432  26c04241       constant
0xffff8bdc01d4   436  00000000       constant
0xffff8bdc01d8   440  26c04241       constant
0xffff8bdc01dc   444  00000000       constant
0xffff8bdc01e0   448  26c04241       constant
0xffff8bdc01e4   452  00000000       constant
0xffff8bdc01e8   456  26c04241       constant
0xffff8bdc01ec   460  00000000       constant
0xffff8bdc01f0   464  26c04241       constant
0xffff8bdc01f4   468  00000000       constant
0xffff8bdc01f8   472  26c04241       constant
0xffff8bdc01fc   476  00000000       constant
0xffff8bdc0200   480  26c04241       constant
0xffff8bdc0204   484  00000000       constant
0xffff8bdc0208   488  26c04241       constant
0xffff8bdc020c   492  00000000       constant
0xffff8bdc0210   496  26c04241       constant
0xffff8bdc0214   500  00000000       constant
0xffff8bdc0218   504  26c04241       constant
0xffff8bdc021c   508  00000000       constant
0xffff8bdc0220   512  26c04241       constant
0xffff8bdc0224   516  00000000       constant
0xffff8bdc0228   520  26c04241       constant
0xffff8bdc022c   524  00000000       constant
0xffff8bdc0230   528  26c04241       constant
0xffff8bdc0234   532  00000000       constant
0xffff8bdc0238   536  26c04241       constant
0xffff8bdc023c   540  00000000       constant
0xffff8bdc0240   544  26c04241       constant
0xffff8bdc0244   548  00000000       constant
0xffff8bdc0248   552  26c04241       constant
0xffff8bdc024c   556  00000000       constant
0xffff8bdc0250   560  26c04241       constant
0xffff8bdc0254   564  00000000       constant
0xffff8bdc0258   568  26c04241       constant
0xffff8bdc025c   572  00000000       constant
0xffff8bdc0260   576  8bd06820       constant
0xffff8bdc0264   580  0000ffff       constant
0xffff8bdc0268   584  8bd06260       constant
0xffff8bdc026c   588  0000ffff       constant
0xffff8bdc0270   592  8bd068e0       constant
0xffff8bdc0274   596  0000ffff       constant


Safepoints (size = 21)
0xffff8bdc0174   340  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff8bdc0040  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdc0058  embedded object  (0x26c04519 <the hole>)
0xffff8bdc0068  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0070  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0078  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0080  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0088  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0090  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0098  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00a0  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00a8  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00b0  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00b8  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00c0  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00c8  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00d0  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00d8  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00e0  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00e8  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00f0  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00f8  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0100  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0108  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0110  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0118  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0148  code target (STUB)  (0xffff8bd06820)
0xffff8bdc016c  code target (STUB)  (0xffff8bd06260)
0xffff8bdc0178  code target (STUB)  (0xffff8bd068e0)
0xffff8bdc018c  constant pool (size 236)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 621)
0xffff8bdc0020     0  movz x2, #0xe2c0
0xffff8bdc0024     4  movk x2, #0x2cb8, lsl #16
0xffff8bdc0028     8  ldp x3, x0, [x2]
0xffff8bdc002c    12  adds x16, x3, #0xe8 (232)
0xffff8bdc0030    16  ccmp x16, x0, #nzCv, lo
0xffff8bdc0034    20  b.hi #+0xf4 (addr 0xffff8bdc0128)
0xffff8bdc0038    24  str x16, [x2]
0xffff8bdc003c    28  orr x3, x3, #0x1
0xffff8bdc0040    32  ldr x0, pc+344 (addr 0x0000ffff8bdc0198)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdc0044    36  stur x0, [x3, #-1]
0xffff8bdc0048    40  movz x0, #0x1b00000000
0xffff8bdc004c    44  stur x0, [x3, #7]
0xffff8bdc0050    48  stur x1, [x3, #15]
0xffff8bdc0054    52  stur cp, [x3, #23]
0xffff8bdc0058    56  ldr x0, pc+328 (addr 0x0000ffff8bdc01a0)    ;; object: 0x26c04519 <the hole>
0xffff8bdc005c    60  stur x0, [x3, #31]
0xffff8bdc0060    64  ldur x0, [cp, #39]
0xffff8bdc0064    68  stur x0, [x3, #39]
0xffff8bdc0068    72  ldr x0, pc+320 (addr 0x0000ffff8bdc01a8)    ;; object: 0x26c04241 <undefined>
0xffff8bdc006c    76  stur x0, [x3, #47]
0xffff8bdc0070    80  ldr x0, pc+320 (addr 0x0000ffff8bdc01b0)    ;; object: 0x26c04241 <undefined>
0xffff8bdc0074    84  stur x0, [x3, #55]
0xffff8bdc0078    88  ldr x0, pc+320 (addr 0x0000ffff8bdc01b8)    ;; object: 0x26c04241 <undefined>
0xffff8bdc007c    92  stur x0, [x3, #63]
0xffff8bdc0080    96  ldr x0, pc+320 (addr 0x0000ffff8bdc01c0)    ;; object: 0x26c04241 <undefined>
0xffff8bdc0084   100  stur x0, [x3, #71]
0xffff8bdc0088   104  ldr x0, pc+320 (addr 0x0000ffff8bdc01c8)    ;; object: 0x26c04241 <undefined>
0xffff8bdc008c   108  stur x0, [x3, #79]
0xffff8bdc0090   112  ldr x0, pc+320 (addr 0x0000ffff8bdc01d0)    ;; object: 0x26c04241 <undefined>
0xffff8bdc0094   116  stur x0, [x3, #87]
0xffff8bdc0098   120  ldr x0, pc+320 (addr 0x0000ffff8bdc01d8)    ;; object: 0x26c04241 <undefined>
0xffff8bdc009c   124  stur x0, [x3, #95]
0xffff8bdc00a0   128  ldr x0, pc+320 (addr 0x0000ffff8bdc01e0)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00a4   132  stur x0, [x3, #103]
0xffff8bdc00a8   136  ldr x0, pc+320 (addr 0x0000ffff8bdc01e8)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00ac   140  stur x0, [x3, #111]
0xffff8bdc00b0   144  ldr x0, pc+320 (addr 0x0000ffff8bdc01f0)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00b4   148  stur x0, [x3, #119]
0xffff8bdc00b8   152  ldr x0, pc+320 (addr 0x0000ffff8bdc01f8)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00bc   156  stur x0, [x3, #127]
0xffff8bdc00c0   160  ldr x0, pc+320 (addr 0x0000ffff8bdc0200)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00c4   164  stur x0, [x3, #135]
0xffff8bdc00c8   168  ldr x0, pc+320 (addr 0x0000ffff8bdc0208)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00cc   172  stur x0, [x3, #143]
0xffff8bdc00d0   176  ldr x0, pc+320 (addr 0x0000ffff8bdc0210)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00d4   180  stur x0, [x3, #151]
0xffff8bdc00d8   184  ldr x0, pc+320 (addr 0x0000ffff8bdc0218)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00dc   188  stur x0, [x3, #159]
0xffff8bdc00e0   192  ldr x0, pc+320 (addr 0x0000ffff8bdc0220)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00e4   196  stur x0, [x3, #167]
0xffff8bdc00e8   200  ldr x0, pc+320 (addr 0x0000ffff8bdc0228)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00ec   204  stur x0, [x3, #175]
0xffff8bdc00f0   208  ldr x0, pc+320 (addr 0x0000ffff8bdc0230)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00f4   212  stur x0, [x3, #183]
0xffff8bdc00f8   216  ldr x0, pc+320 (addr 0x0000ffff8bdc0238)    ;; object: 0x26c04241 <undefined>
0xffff8bdc00fc   220  stur x0, [x3, #191]
0xffff8bdc0100   224  ldr x0, pc+320 (addr 0x0000ffff8bdc0240)    ;; object: 0x26c04241 <undefined>
0xffff8bdc0104   228  stur x0, [x3, #199]
0xffff8bdc0108   232  ldr x0, pc+320 (addr 0x0000ffff8bdc0248)    ;; object: 0x26c04241 <undefined>
0xffff8bdc010c   236  stur x0, [x3, #207]
0xffff8bdc0110   240  ldr x0, pc+320 (addr 0x0000ffff8bdc0250)    ;; object: 0x26c04241 <undefined>
0xffff8bdc0114   244  stur x0, [x3, #215]
0xffff8bdc0118   248  ldr x0, pc+320 (addr 0x0000ffff8bdc0258)    ;; object: 0x26c04241 <undefined>
0xffff8bdc011c   252  stur x0, [x3, #223]
0xffff8bdc0120   256  mov x0, x3
0xffff8bdc0124   260  ret
0xffff8bdc0128   264  sub csp, jssp, #0x10 (16)
0xffff8bdc012c   268  stp fp, lr, [jssp, #-16]!
0xffff8bdc0130   272  movz fp, #0xa00000000
0xffff8bdc0134   276  sub csp, jssp, #0x8 (8)
0xffff8bdc0138   280  str fp, [jssp, #-8]!
0xffff8bdc013c   284  add fp, jssp, #0x8 (8)
0xffff8bdc0140   288  movz x3, #0x0
0xffff8bdc0144   292  mov x16, lr
0xffff8bdc0148   296  ldr x17, pc+280 (addr 0x0000ffff8bdc0260)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdc014c   300  blr x17
0xffff8bdc0150   304  movz x0, #0xe800000000
0xffff8bdc0154   308  movz x10, #0x0
0xffff8bdc0158   312  sub csp, jssp, #0x10 (16)
0xffff8bdc015c   316  stp x10, x0, [jssp, #-16]!
0xffff8bdc0160   320  movz x0, #0x2
0xffff8bdc0164   324  movz x1, #0x5b88
0xffff8bdc0168   328  movk x1, #0xe2, lsl #16
0xffff8bdc016c   332  ldr x16, pc+252 (addr 0x0000ffff8bdc0268)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdc0170   336  blr x16
0xffff8bdc0174   340  str x0, [jssp, #24]
0xffff8bdc0178   344  ldr x16, pc+248 (addr 0x0000ffff8bdc0270)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdc017c   348  blr x16
0xffff8bdc0180   352  ldr lr, [jssp, #16]
0xffff8bdc0184   356  ldp xzr, fp, [jssp], #24
0xffff8bdc0188   360  b #-0x148 (addr 0xffff8bdc0040)
0xffff8bdc018c   364  5800075f       constant pool begin (num_const = 58)    ;; constant pool
0xffff8bdc0190   368  d63f03e0       constant
0xffff8bdc0194   372  d503201f       constant
0xffff8bdc0198   376  5f506149       constant
0xffff8bdc019c   380  00000000       constant
0xffff8bdc01a0   384  26c04519       constant
0xffff8bdc01a4   388  00000000       constant
0xffff8bdc01a8   392  26c04241       constant
0xffff8bdc01ac   396  00000000       constant
0xffff8bdc01b0   400  26c04241       constant
0xffff8bdc01b4   404  00000000       constant
0xffff8bdc01b8   408  26c04241       constant
0xffff8bdc01bc   412  00000000       constant
0xffff8bdc01c0   416  26c04241       constant
0xffff8bdc01c4   420  00000000       constant
0xffff8bdc01c8   424  26c04241       constant
0xffff8bdc01cc   428  00000000       constant
0xffff8bdc01d0   432  26c04241       constant
0xffff8bdc01d4   436  00000000       constant
0xffff8bdc01d8   440  26c04241       constant
0xffff8bdc01dc   444  00000000       constant
0xffff8bdc01e0   448  26c04241       constant
0xffff8bdc01e4   452  00000000       constant
0xffff8bdc01e8   456  26c04241       constant
0xffff8bdc01ec   460  00000000       constant
0xffff8bdc01f0   464  26c04241       constant
0xffff8bdc01f4   468  00000000       constant
0xffff8bdc01f8   472  26c04241       constant
0xffff8bdc01fc   476  00000000       constant
0xffff8bdc0200   480  26c04241       constant
0xffff8bdc0204   484  00000000       constant
0xffff8bdc0208   488  26c04241       constant
0xffff8bdc020c   492  00000000       constant
0xffff8bdc0210   496  26c04241       constant
0xffff8bdc0214   500  00000000       constant
0xffff8bdc0218   504  26c04241       constant
0xffff8bdc021c   508  00000000       constant
0xffff8bdc0220   512  26c04241       constant
0xffff8bdc0224   516  00000000       constant
0xffff8bdc0228   520  26c04241       constant
0xffff8bdc022c   524  00000000       constant
0xffff8bdc0230   528  26c04241       constant
0xffff8bdc0234   532  00000000       constant
0xffff8bdc0238   536  26c04241       constant
0xffff8bdc023c   540  00000000       constant
0xffff8bdc0240   544  26c04241       constant
0xffff8bdc0244   548  00000000       constant
0xffff8bdc0248   552  26c04241       constant
0xffff8bdc024c   556  00000000       constant
0xffff8bdc0250   560  26c04241       constant
0xffff8bdc0254   564  00000000       constant
0xffff8bdc0258   568  26c04241       constant
0xffff8bdc025c   572  00000000       constant
0xffff8bdc0260   576  8bd06820       constant
0xffff8bdc0264   580  0000ffff       constant
0xffff8bdc0268   584  8bd06260       constant
0xffff8bdc026c   588  0000ffff       constant
0xffff8bdc0270   592  8bd068e0       constant
0xffff8bdc0274   596  0000ffff       constant


Safepoints (size = 21)
0xffff8bdc0174   340  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 34)
0xffff8bdc0040  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdc0058  embedded object  (0x26c04519 <the hole>)
0xffff8bdc0068  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0070  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0078  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0080  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0088  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0090  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0098  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00a0  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00a8  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00b0  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00b8  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00c0  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00c8  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00d0  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00d8  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00e0  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00e8  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00f0  embedded object  (0x26c04241 <undefined>)
0xffff8bdc00f8  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0100  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0108  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0110  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0118  embedded object  (0x26c04241 <undefined>)
0xffff8bdc0148  code target (STUB)  (0xffff8bd06820)
0xffff8bdc016c  code target (STUB)  (0xffff8bd06260)
0xffff8bdc0178  code target (STUB)  (0xffff8bd068e0)
0xffff8bdc018c  constant pool (size 236)


kind = LOAD_IC
major_key = LoadICTrampolineStub
ic_state = GENERIC
extra_ic_state = 0
name = LoadICTrampolineStub
compiler = unknown
Instructions (size = 440)
0xffff8bdc0300     0  ldur x3, [fp, #-16]
0xffff8bdc0304     4  ldur x3, [x3, #31]
0xffff8bdc0308     8  ldur x3, [x3, #87]
0xffff8bdc030c    12  add x4, x3, x0, asr #29
0xffff8bdc0310    16  ldur x4, [x4, #15]
0xffff8bdc0314    20  tbz w1, #0, #+0x170 (addr 0xffff8bdc0484)
0xffff8bdc0318    24  ldur x5, [x1, #-1]
0xffff8bdc031c    28  ldur x6, [x4, #7]
0xffff8bdc0320    32  cmp x6, x5
0xffff8bdc0324    36  b.ne #+0x14 (addr 0xffff8bdc0338)
0xffff8bdc0328    40  add x4, x3, x0, asr #29
0xffff8bdc032c    44  ldur x4, [x4, #23]
0xffff8bdc0330    48  add x4, x4, #0x5f (95)
0xffff8bdc0334    52  br x4
0xffff8bdc0338    56  ldur x6, [x4, #-1]
0xffff8bdc033c    60  ldr x16, [x26, #224]
0xffff8bdc0340    64  cmp x6, x16
0xffff8bdc0344    68  b.ne #+0x5c (addr 0xffff8bdc03a0)
0xffff8bdc0348    72  ldur x6, [x4, #15]
0xffff8bdc034c    76  ldur x6, [x6, #7]
0xffff8bdc0350    80  cmp x5, x6
0xffff8bdc0354    84  b.ne #+0x10 (addr 0xffff8bdc0364)
0xffff8bdc0358    88  ldur x4, [x4, #23]
0xffff8bdc035c    92  add x4, x4, #0x5f (95)
0xffff8bdc0360    96  br x4
0xffff8bdc0364   100  ldur x7, [x4, #7]
0xffff8bdc0368   104  add x7, x4, x7, asr #29
0xffff8bdc036c   108  add x7, x7, #0xf (15)
0xffff8bdc0370   112  add x4, x4, #0x1f (31)
0xffff8bdc0374   116  ldr x6, [x4]
0xffff8bdc0378   120  ldur x6, [x6, #7]
0xffff8bdc037c   124  cmp x5, x6
0xffff8bdc0380   128  b.ne #+0x10 (addr 0xffff8bdc0390)
0xffff8bdc0384   132  ldr x4, [x4, #8]
0xffff8bdc0388   136  add x4, x4, #0x5f (95)
0xffff8bdc038c   140  br x4
0xffff8bdc0390   144  add x4, x4, #0x10 (16)
0xffff8bdc0394   148  cmp x4, x7
0xffff8bdc0398   152  b.lt #-0x24 (addr 0xffff8bdc0374)
0xffff8bdc039c   156  b #+0xcc (addr 0xffff8bdc0468)
0xffff8bdc03a0   160  ldr x16, [x26, #2400]
0xffff8bdc03a4   164  cmp x4, x16
0xffff8bdc03a8   168  b.ne #+0xc0 (addr 0xffff8bdc0468)
0xffff8bdc03ac   172  tbz w1, #0, #+0xbc (addr 0xffff8bdc0468)
0xffff8bdc03b0   176  ldur x4, [x2, #7]
0xffff8bdc03b4   180  ldur x5, [x1, #-1]
0xffff8bdc03b8   184  add x4, x4, x5
0xffff8bdc03bc   188  movz x16, #0x5102
0xffff8bdc03c0   192  eor x4, x4, x16
0xffff8bdc03c4   196  ubfx x4, x4, #2, #11
0xffff8bdc03c8   200  add x7, x4, x4, lsl #1
0xffff8bdc03cc   204  ldr x5, pc+204 (addr 0x0000ffff8bdc0498)    ;; external reference (StubCache::primary_->key)
0xffff8bdc03d0   208  add x5, x5, x7, lsl #3
0xffff8bdc03d4   212  ldr x6, [x5]
0xffff8bdc03d8   216  cmp x2, x6
0xffff8bdc03dc   220  b.ne #+0x34 (addr 0xffff8bdc0410)
0xffff8bdc03e0   224  ldr x6, [x5, #16]
0xffff8bdc03e4   228  ldur x7, [x1, #-1]
0xffff8bdc03e8   232  cmp x6, x7
0xffff8bdc03ec   236  b.ne #+0x24 (addr 0xffff8bdc0410)
0xffff8bdc03f0   240  ldr x5, [x5, #8]
0xffff8bdc03f4   244  ldur w6, [x5, #63]
0xffff8bdc03f8   248  and w6, w6, #0xffffffc7
0xffff8bdc03fc   252  movz w16, #0x5102
0xffff8bdc0400   256  cmp w6, w16
0xffff8bdc0404   260  b.ne #+0xc (addr 0xffff8bdc0410)
0xffff8bdc0408   264  add x5, x5, #0x5f (95)
0xffff8bdc040c   268  br x5
0xffff8bdc0410   272  sub x4, x4, x2, lsr #2
0xffff8bdc0414   276  movz x16, #0x1440
0xffff8bdc0418   280  add x4, x4, x16
0xffff8bdc041c   284  and x4, x4, #0x1ff
0xffff8bdc0420   288  add x7, x4, x4, lsl #1
0xffff8bdc0424   292  ldr x5, pc+124 (addr 0x0000ffff8bdc04a0)    ;; external reference (StubCache::secondary_->key)
0xffff8bdc0428   296  add x5, x5, x7, lsl #3
0xffff8bdc042c   300  ldr x6, [x5]
0xffff8bdc0430   304  cmp x2, x6
0xffff8bdc0434   308  b.ne #+0x34 (addr 0xffff8bdc0468)
0xffff8bdc0438   312  ldr x6, [x5, #16]
0xffff8bdc043c   316  ldur x7, [x1, #-1]
0xffff8bdc0440   320  cmp x6, x7
0xffff8bdc0444   324  b.ne #+0x24 (addr 0xffff8bdc0468)
0xffff8bdc0448   328  ldr x5, [x5, #8]
0xffff8bdc044c   332  ldur w6, [x5, #63]
0xffff8bdc0450   336  and w6, w6, #0xffffffc7
0xffff8bdc0454   340  movz w16, #0x5102
0xffff8bdc0458   344  cmp w6, w16
0xffff8bdc045c   348  b.ne #+0xc (addr 0xffff8bdc0468)
0xffff8bdc0460   352  add x5, x5, #0x5f (95)
0xffff8bdc0464   356  br x5
0xffff8bdc0468   360  sub csp, jssp, #0x20 (32)
0xffff8bdc046c   364  stp x3, x0, [jssp, #-32]!
0xffff8bdc0470   368  stp x2, x1, [jssp, #16]
0xffff8bdc0474   372  movz x0, #0x4
0xffff8bdc0478   376  ldr x1, pc+48 (addr 0x0000ffff8bdc04a8)    ;; external reference (Runtime::LoadIC_Miss)
0xffff8bdc047c   380  ldr x16, pc+52 (addr 0x0000ffff8bdc04b0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdc0480   384  br x16
0xffff8bdc0484   388  ldr x5, [x26, #120]
0xffff8bdc0488   392  b #-0x16c (addr 0xffff8bdc031c)
0xffff8bdc048c   396  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff8bdc0490   400  d63f03e0       constant
0xffff8bdc0494   404  d503201f       constant
0xffff8bdc0498   408  2cba8950       constant
0xffff8bdc049c   412  00000000       constant
0xffff8bdc04a0   416  2cbb4950       constant
0xffff8bdc04a4   420  00000000       constant
0xffff8bdc04a8   424  00c86e20       constant
0xffff8bdc04ac   428  00000000       constant
0xffff8bdc04b0   432  8bd06060       constant
0xffff8bdc04b4   436  0000ffff       constant


RelocInfo (size = 19)
0xffff8bdc03cc  external reference (StubCache::primary_->key)  (0x2cba8950)
0xffff8bdc0424  external reference (StubCache::secondary_->key)  (0x2cbb4950)
0xffff8bdc0478  external reference (Runtime::LoadIC_Miss)  (0xc86e20)
0xffff8bdc047c  code target (STUB)  (0xffff8bd06060)
0xffff8bdc048c  constant pool (size 44)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bdc1ac0     0  ldur x0, [x1, #55]
0xffff8bdc1ac4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bdc1ac0     0  ldur x0, [x1, #55]
0xffff8bdc1ac4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = super_
compiler = unknown
Instructions (size = 168)
0xffff8bdc1b40     0  sub csp, jssp, #0x8 (8)
0xffff8bdc1b44     4  str x3, [jssp, #-8]!
0xffff8bdc1b48     8  sub csp, jssp, #0x8 (8)
0xffff8bdc1b4c    12  str x4, [jssp, #-8]!
0xffff8bdc1b50    16  ldr x3, pc+104 (addr 0x0000ffff8bdc1bb8)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bdc1b54    20  ldur x3, [x3, #7]
0xffff8bdc1b58    24  cmp x3, #0x0 (0)
0xffff8bdc1b5c    28  b.ne #+0x3c (addr 0xffff8bdc1b98)
0xffff8bdc1b60    32  ldr x5, pc+96 (addr 0x0000ffff8bdc1bc0)    ;; object: 0x32725349 WeakCell for 0x5f530af1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdc1b64    36  ldur x5, [x5, #7]
0xffff8bdc1b68    40  tbz w5, #0, #+0x30 (addr 0xffff8bdc1b98)
0xffff8bdc1b6c    44  ldursw x4, [x5, #15]
0xffff8bdc1b70    48  tbnz w4, #23, #+0x28 (addr 0xffff8bdc1b98)
0xffff8bdc1b74    52  ldur x4, [x5, #47]
0xffff8bdc1b78    56  ldur x4, [x4, #143]
0xffff8bdc1b7c    60  cmp x0, x4
0xffff8bdc1b80    64  b.ne #+0x18 (addr 0xffff8bdc1b98)
0xffff8bdc1b84    68  ldr x4, [jssp], #8
0xffff8bdc1b88    72  ldr x3, [jssp], #8
0xffff8bdc1b8c    76  ldr x2, pc+60 (addr 0x0000ffff8bdc1bc8)    ;; object: 0x26cc9f09 <String[6]: super_>
0xffff8bdc1b90    80  ldr x16, pc+64 (addr 0x0000ffff8bdc1bd0)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff8bdc1b94    84  br x16
0xffff8bdc1b98    88  ldr x2, pc+64 (addr 0x0000ffff8bdc1bd8)    ;; object: 0x26cc9f09 <String[6]: super_>
0xffff8bdc1b9c    92  ldr x4, [jssp], #8
0xffff8bdc1ba0    96  ldr x3, [jssp], #8
0xffff8bdc1ba4   100  ldr x16, pc+60 (addr 0x0000ffff8bdc1be0)    ;; code: BUILTIN
0xffff8bdc1ba8   104  br x16
0xffff8bdc1bac   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdc1bb0   112  d63f03e0       constant
0xffff8bdc1bb4   116  d503201f       constant
0xffff8bdc1bb8   120  26c5b0f1       constant
0xffff8bdc1bbc   124  00000000       constant
0xffff8bdc1bc0   128  32725349       constant
0xffff8bdc1bc4   132  00000000       constant
0xffff8bdc1bc8   136  26cc9f09       constant
0xffff8bdc1bcc   140  00000000       constant
0xffff8bdc1bd0   144  8bd3cea0       constant
0xffff8bdc1bd4   148  0000ffff       constant
0xffff8bdc1bd8   152  26cc9f09       constant
0xffff8bdc1bdc   156  00000000       constant
0xffff8bdc1be0   160  8bd22420       constant
0xffff8bdc1be4   164  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdc1b50  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bdc1b60  embedded object  (0x32725349 WeakCell for 0x5f530af1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdc1b8c  embedded object  (0x26cc9f09 <String[6]: super_>)
0xffff8bdc1b90  code target (HANDLER)  (0xffff8bd3cea0)
0xffff8bdc1b98  embedded object  (0x26cc9f09 <String[6]: super_>)
0xffff8bdc1ba4  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdc1bac  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff8bdc1d00     0  sub csp, jssp, #0x8 (8)
0xffff8bdc1d04     4  str x3, [jssp, #-8]!
0xffff8bdc1d08     8  sub csp, jssp, #0x8 (8)
0xffff8bdc1d0c    12  str x4, [jssp, #-8]!
0xffff8bdc1d10    16  ldr x3, pc+104 (addr 0x0000ffff8bdc1d78)    ;; object: 0x327255d9 Cell for 0
0xffff8bdc1d14    20  ldur x3, [x3, #7]
0xffff8bdc1d18    24  cmp x3, #0x0 (0)
0xffff8bdc1d1c    28  b.ne #+0x8 (addr 0xffff8bdc1d24)
0xffff8bdc1d20    32  b #+0x18 (addr 0xffff8bdc1d38)
0xffff8bdc1d24    36  ldr x2, pc+92 (addr 0x0000ffff8bdc1d80)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bdc1d28    40  ldr x4, [jssp], #8
0xffff8bdc1d2c    44  ldr x3, [jssp], #8
0xffff8bdc1d30    48  ldr x16, pc+88 (addr 0x0000ffff8bdc1d88)    ;; code: BUILTIN
0xffff8bdc1d34    52  br x16
0xffff8bdc1d38    56  add jssp, jssp, #0x10 (16)
0xffff8bdc1d3c    60  ldr x3, pc+84 (addr 0x0000ffff8bdc1d90)    ;; object: 0x26c404a9 <AccessorInfo>
0xffff8bdc1d40    64  ldr x4, pc+88 (addr 0x0000ffff8bdc1d98)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bdc1d44    68  sub csp, jssp, #0x28 (40)
0xffff8bdc1d48    72  stp x4, x3, [jssp, #-32]!
0xffff8bdc1d4c    76  stp x1, x1, [jssp, #16]
0xffff8bdc1d50    80  str x0, [jssp, #-8]!
0xffff8bdc1d54    84  movz x16, #0x100000000
0xffff8bdc1d58    88  sub csp, jssp, #0x8 (8)
0xffff8bdc1d5c    92  str x16, [jssp, #-8]!
0xffff8bdc1d60    96  movz x0, #0x6
0xffff8bdc1d64   100  ldr x1, pc+60 (addr 0x0000ffff8bdc1da0)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff8bdc1d68   104  ldr x16, pc+64 (addr 0x0000ffff8bdc1da8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdc1d6c   108  br x16
0xffff8bdc1d70   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bdc1d74   116  d63f03e0       constant
0xffff8bdc1d78   120  327255d9       constant
0xffff8bdc1d7c   124  00000000       constant
0xffff8bdc1d80   128  26c05371       constant
0xffff8bdc1d84   132  00000000       constant
0xffff8bdc1d88   136  8bd22420       constant
0xffff8bdc1d8c   140  0000ffff       constant
0xffff8bdc1d90   144  26c404a9       constant
0xffff8bdc1d94   148  00000000       constant
0xffff8bdc1d98   152  26c05371       constant
0xffff8bdc1d9c   156  00000000       constant
0xffff8bdc1da0   160  00c8b560       constant
0xffff8bdc1da4   164  00000000       constant
0xffff8bdc1da8   168  8bd06060       constant
0xffff8bdc1dac   172  0000ffff       constant


RelocInfo (size = 14)
0xffff8bdc1d10  embedded object  (0x327255d9 Cell for 0)
0xffff8bdc1d24  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bdc1d30  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdc1d3c  embedded object  (0x26c404a9 <AccessorInfo>)
0xffff8bdc1d40  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bdc1d64  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff8bdc1d68  code target (STUB)  (0xffff8bd06060)
0xffff8bdc1d70  constant pool (size 64)

--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 64
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 136)
0xffff8bdc1e20     0  tbz w0, #0, #+0x40 (addr 0xffff8bdc1e60)
0xffff8bdc1e24     4  ldur x2, [x0, #-1]
0xffff8bdc1e28     8  ldrb w1, [x2, #11]
0xffff8bdc1e2c    12  cmp x1, #0x80 (128)
0xffff8bdc1e30    16  b.eq #+0x10 (addr 0xffff8bdc1e40)
0xffff8bdc1e34    20  b #+0x2c (addr 0xffff8bdc1e60)
0xffff8bdc1e38    24  ldr x0, pc+24 (addr 0x0000ffff8bdc1e50)    ;; object: 0x26c042b1 <false>
0xffff8bdc1e3c    28  ret
0xffff8bdc1e40    32  ldr x0, pc+24 (addr 0x0000ffff8bdc1e58)    ;; object: 0x26c04281 <true>
0xffff8bdc1e44    36  ret
0xffff8bdc1e48    40  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdc1e4c    44  d63f03e0       constant
0xffff8bdc1e50    48  26c042b1       constant
0xffff8bdc1e54    52  00000000       constant
0xffff8bdc1e58    56  26c04281       constant
0xffff8bdc1e5c    60  00000000       constant
0xffff8bdc1e60    64  movz x16, #0x0
0xffff8bdc1e64    68  sub csp, jssp, #0x10 (16)
0xffff8bdc1e68    72  stp fp, lr, [jssp, #-16]!
0xffff8bdc1e6c    76  bl #+0x4 (addr 0xffff8bdc1e70)
0xffff8bdc1e70    80  movz x17, #0xa00000000
0xffff8bdc1e74    84  sub csp, jssp, #0x10 (16)
0xffff8bdc1e78    88  stp x17, cp, [jssp, #-16]!
0xffff8bdc1e7c    92  add fp, jssp, #0x10 (16)
0xffff8bdc1e80    96  ldr x17, pc+24 (addr 0x0000ffff8bdc1e98)    ;; lazy deoptimization bailout 0
0xffff8bdc1e84   100  add x17, x17, x16
0xffff8bdc1e88   104  br x17
0xffff8bdc1e8c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdc1e90   112  d63f03e0       constant
0xffff8bdc1e94   116  d503201f       constant
0xffff8bdc1e98   120  8bb06000       constant
0xffff8bdc1e9c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdc1e38  embedded object  (0x26c042b1 <false>)
0xffff8bdc1e40  embedded object  (0x26c04281 <true>)
0xffff8bdc1e48  constant pool (size 24)
0xffff8bdc1e80  runtime entry
0xffff8bdc1e8c  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 64
type = NORMAL
name = ToBooleanICStub(Symbol)
compiler = crankshaft
Instructions (size = 136)
0xffff8bdc1e20     0  tbz w0, #0, #+0x40 (addr 0xffff8bdc1e60)
0xffff8bdc1e24     4  ldur x2, [x0, #-1]
0xffff8bdc1e28     8  ldrb w1, [x2, #11]
0xffff8bdc1e2c    12  cmp x1, #0x80 (128)
0xffff8bdc1e30    16  b.eq #+0x10 (addr 0xffff8bdc1e40)
0xffff8bdc1e34    20  b #+0x2c (addr 0xffff8bdc1e60)
0xffff8bdc1e38    24  ldr x0, pc+24 (addr 0x0000ffff8bdc1e50)    ;; object: 0x26c042b1 <false>
0xffff8bdc1e3c    28  ret
0xffff8bdc1e40    32  ldr x0, pc+24 (addr 0x0000ffff8bdc1e58)    ;; object: 0x26c04281 <true>
0xffff8bdc1e44    36  ret
0xffff8bdc1e48    40  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdc1e4c    44  d63f03e0       constant
0xffff8bdc1e50    48  26c042b1       constant
0xffff8bdc1e54    52  00000000       constant
0xffff8bdc1e58    56  26c04281       constant
0xffff8bdc1e5c    60  00000000       constant
0xffff8bdc1e60    64  movz x16, #0x0
0xffff8bdc1e64    68  sub csp, jssp, #0x10 (16)
0xffff8bdc1e68    72  stp fp, lr, [jssp, #-16]!
0xffff8bdc1e6c    76  bl #+0x4 (addr 0xffff8bdc1e70)
0xffff8bdc1e70    80  movz x17, #0xa00000000
0xffff8bdc1e74    84  sub csp, jssp, #0x10 (16)
0xffff8bdc1e78    88  stp x17, cp, [jssp, #-16]!
0xffff8bdc1e7c    92  add fp, jssp, #0x10 (16)
0xffff8bdc1e80    96  ldr x17, pc+24 (addr 0x0000ffff8bdc1e98)    ;; lazy deoptimization bailout 0
0xffff8bdc1e84   100  add x17, x17, x16
0xffff8bdc1e88   104  br x17
0xffff8bdc1e8c   108  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdc1e90   112  d63f03e0       constant
0xffff8bdc1e94   116  d503201f       constant
0xffff8bdc1e98   120  8bb06000       constant
0xffff8bdc1e9c   124  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdc1e38  embedded object  (0x26c042b1 <false>)
0xffff8bdc1e40  embedded object  (0x26c04281 <true>)
0xffff8bdc1e48  constant pool (size 24)
0xffff8bdc1e80  runtime entry
0xffff8bdc1e8c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff8bdc3c80     0  sub csp, jssp, #0x8 (8)
0xffff8bdc3c84     4  str x3, [jssp, #-8]!
0xffff8bdc3c88     8  sub csp, jssp, #0x8 (8)
0xffff8bdc3c8c    12  str x4, [jssp, #-8]!
0xffff8bdc3c90    16  ldr x3, pc+104 (addr 0x0000ffff8bdc3cf8)    ;; object: 0x3272e999 Cell for 0
0xffff8bdc3c94    20  ldur x3, [x3, #7]
0xffff8bdc3c98    24  cmp x3, #0x0 (0)
0xffff8bdc3c9c    28  b.ne #+0x8 (addr 0xffff8bdc3ca4)
0xffff8bdc3ca0    32  b #+0x18 (addr 0xffff8bdc3cb8)
0xffff8bdc3ca4    36  ldr x2, pc+92 (addr 0x0000ffff8bdc3d00)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bdc3ca8    40  ldr x4, [jssp], #8
0xffff8bdc3cac    44  ldr x3, [jssp], #8
0xffff8bdc3cb0    48  ldr x16, pc+88 (addr 0x0000ffff8bdc3d08)    ;; code: BUILTIN
0xffff8bdc3cb4    52  br x16
0xffff8bdc3cb8    56  add jssp, jssp, #0x10 (16)
0xffff8bdc3cbc    60  ldr x3, pc+84 (addr 0x0000ffff8bdc3d10)    ;; object: 0x26c404a9 <AccessorInfo>
0xffff8bdc3cc0    64  ldr x4, pc+88 (addr 0x0000ffff8bdc3d18)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bdc3cc4    68  sub csp, jssp, #0x28 (40)
0xffff8bdc3cc8    72  stp x4, x3, [jssp, #-32]!
0xffff8bdc3ccc    76  stp x1, x1, [jssp, #16]
0xffff8bdc3cd0    80  str x0, [jssp, #-8]!
0xffff8bdc3cd4    84  movz x16, #0x100000000
0xffff8bdc3cd8    88  sub csp, jssp, #0x8 (8)
0xffff8bdc3cdc    92  str x16, [jssp, #-8]!
0xffff8bdc3ce0    96  movz x0, #0x6
0xffff8bdc3ce4   100  ldr x1, pc+60 (addr 0x0000ffff8bdc3d20)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff8bdc3ce8   104  ldr x16, pc+64 (addr 0x0000ffff8bdc3d28)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdc3cec   108  br x16
0xffff8bdc3cf0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bdc3cf4   116  d63f03e0       constant
0xffff8bdc3cf8   120  3272e999       constant
0xffff8bdc3cfc   124  00000000       constant
0xffff8bdc3d00   128  26c05371       constant
0xffff8bdc3d04   132  00000000       constant
0xffff8bdc3d08   136  8bd22420       constant
0xffff8bdc3d0c   140  0000ffff       constant
0xffff8bdc3d10   144  26c404a9       constant
0xffff8bdc3d14   148  00000000       constant
0xffff8bdc3d18   152  26c05371       constant
0xffff8bdc3d1c   156  00000000       constant
0xffff8bdc3d20   160  00c8b560       constant
0xffff8bdc3d24   164  00000000       constant
0xffff8bdc3d28   168  8bd06060       constant
0xffff8bdc3d2c   172  0000ffff       constant


RelocInfo (size = 14)
0xffff8bdc3c90  embedded object  (0x3272e999 Cell for 0)
0xffff8bdc3ca4  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bdc3cb0  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdc3cbc  embedded object  (0x26c404a9 <AccessorInfo>)
0xffff8bdc3cc0  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bdc3ce4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff8bdc3ce8  code target (STUB)  (0xffff8bd06060)
0xffff8bdc3cf0  constant pool (size 64)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bdcb800     0  movz x2, #0xe2c0
0xffff8bdcb804     4  movk x2, #0x2cb8, lsl #16
0xffff8bdcb808     8  ldp x3, x0, [x2]
0xffff8bdcb80c    12  adds x16, x3, #0x60 (96)
0xffff8bdcb810    16  ccmp x16, x0, #nzCv, lo
0xffff8bdcb814    20  b.hi #+0x6c (addr 0xffff8bdcb880)
0xffff8bdcb818    24  str x16, [x2]
0xffff8bdcb81c    28  orr x3, x3, #0x1
0xffff8bdcb820    32  ldr x0, pc+208 (addr 0x0000ffff8bdcb8f0)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdcb824    36  stur x0, [x3, #-1]
0xffff8bdcb828    40  movz x0, #0xa00000000
0xffff8bdcb82c    44  stur x0, [x3, #7]
0xffff8bdcb830    48  stur x1, [x3, #15]
0xffff8bdcb834    52  stur cp, [x3, #23]
0xffff8bdcb838    56  ldr x0, pc+192 (addr 0x0000ffff8bdcb8f8)    ;; object: 0x26c04519 <the hole>
0xffff8bdcb83c    60  stur x0, [x3, #31]
0xffff8bdcb840    64  ldur x0, [cp, #39]
0xffff8bdcb844    68  stur x0, [x3, #39]
0xffff8bdcb848    72  ldr x0, pc+184 (addr 0x0000ffff8bdcb900)    ;; object: 0x26c04241 <undefined>
0xffff8bdcb84c    76  stur x0, [x3, #47]
0xffff8bdcb850    80  ldr x0, pc+184 (addr 0x0000ffff8bdcb908)    ;; object: 0x26c04241 <undefined>
0xffff8bdcb854    84  stur x0, [x3, #55]
0xffff8bdcb858    88  ldr x0, pc+184 (addr 0x0000ffff8bdcb910)    ;; object: 0x26c04241 <undefined>
0xffff8bdcb85c    92  stur x0, [x3, #63]
0xffff8bdcb860    96  ldr x0, pc+184 (addr 0x0000ffff8bdcb918)    ;; object: 0x26c04241 <undefined>
0xffff8bdcb864   100  stur x0, [x3, #71]
0xffff8bdcb868   104  ldr x0, pc+184 (addr 0x0000ffff8bdcb920)    ;; object: 0x26c04241 <undefined>
0xffff8bdcb86c   108  stur x0, [x3, #79]
0xffff8bdcb870   112  ldr x0, pc+184 (addr 0x0000ffff8bdcb928)    ;; object: 0x26c04241 <undefined>
0xffff8bdcb874   116  stur x0, [x3, #87]
0xffff8bdcb878   120  mov x0, x3
0xffff8bdcb87c   124  ret
0xffff8bdcb880   128  sub csp, jssp, #0x10 (16)
0xffff8bdcb884   132  stp fp, lr, [jssp, #-16]!
0xffff8bdcb888   136  movz fp, #0xa00000000
0xffff8bdcb88c   140  sub csp, jssp, #0x8 (8)
0xffff8bdcb890   144  str fp, [jssp, #-8]!
0xffff8bdcb894   148  add fp, jssp, #0x8 (8)
0xffff8bdcb898   152  movz x3, #0x0
0xffff8bdcb89c   156  mov x16, lr
0xffff8bdcb8a0   160  ldr x17, pc+144 (addr 0x0000ffff8bdcb930)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdcb8a4   164  blr x17
0xffff8bdcb8a8   168  movz x0, #0x6000000000
0xffff8bdcb8ac   172  movz x10, #0x0
0xffff8bdcb8b0   176  sub csp, jssp, #0x10 (16)
0xffff8bdcb8b4   180  stp x10, x0, [jssp, #-16]!
0xffff8bdcb8b8   184  movz x0, #0x2
0xffff8bdcb8bc   188  movz x1, #0x5b88
0xffff8bdcb8c0   192  movk x1, #0xe2, lsl #16
0xffff8bdcb8c4   196  ldr x16, pc+116 (addr 0x0000ffff8bdcb938)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdcb8c8   200  blr x16
0xffff8bdcb8cc   204  str x0, [jssp, #24]
0xffff8bdcb8d0   208  ldr x16, pc+112 (addr 0x0000ffff8bdcb940)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdcb8d4   212  blr x16
0xffff8bdcb8d8   216  ldr lr, [jssp, #16]
0xffff8bdcb8dc   220  ldp xzr, fp, [jssp], #24
0xffff8bdcb8e0   224  b #-0xc0 (addr 0xffff8bdcb820)
0xffff8bdcb8e4   228  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff8bdcb8e8   232  d63f03e0       constant
0xffff8bdcb8ec   236  d503201f       constant
0xffff8bdcb8f0   240  5f506149       constant
0xffff8bdcb8f4   244  00000000       constant
0xffff8bdcb8f8   248  26c04519       constant
0xffff8bdcb8fc   252  00000000       constant
0xffff8bdcb900   256  26c04241       constant
0xffff8bdcb904   260  00000000       constant
0xffff8bdcb908   264  26c04241       constant
0xffff8bdcb90c   268  00000000       constant
0xffff8bdcb910   272  26c04241       constant
0xffff8bdcb914   276  00000000       constant
0xffff8bdcb918   280  26c04241       constant
0xffff8bdcb91c   284  00000000       constant
0xffff8bdcb920   288  26c04241       constant
0xffff8bdcb924   292  00000000       constant
0xffff8bdcb928   296  26c04241       constant
0xffff8bdcb92c   300  00000000       constant
0xffff8bdcb930   304  8bd06820       constant
0xffff8bdcb934   308  0000ffff       constant
0xffff8bdcb938   312  8bd06260       constant
0xffff8bdcb93c   316  0000ffff       constant
0xffff8bdcb940   320  8bd068e0       constant
0xffff8bdcb944   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bdcb8cc   204  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 17)
0xffff8bdcb820  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdcb838  embedded object  (0x26c04519 <the hole>)
0xffff8bdcb848  embedded object  (0x26c04241 <undefined>)
0xffff8bdcb850  embedded object  (0x26c04241 <undefined>)
0xffff8bdcb858  embedded object  (0x26c04241 <undefined>)
0xffff8bdcb860  embedded object  (0x26c04241 <undefined>)
0xffff8bdcb868  embedded object  (0x26c04241 <undefined>)
0xffff8bdcb870  embedded object  (0x26c04241 <undefined>)
0xffff8bdcb8a0  code target (STUB)  (0xffff8bd06820)
0xffff8bdcb8c4  code target (STUB)  (0xffff8bd06260)
0xffff8bdcb8d0  code target (STUB)  (0xffff8bd068e0)
0xffff8bdcb8e4  constant pool (size 100)

--- End code ---
kind = STUB
major_key = FastNewContextStub
name = FastNewContextStub
compiler = crankshaft
Instructions (size = 349)
0xffff8bdcb800     0  movz x2, #0xe2c0
0xffff8bdcb804     4  movk x2, #0x2cb8, lsl #16
0xffff8bdcb808     8  ldp x3, x0, [x2]
0xffff8bdcb80c    12  adds x16, x3, #0x60 (96)
0xffff8bdcb810    16  ccmp x16, x0, #nzCv, lo
0xffff8bdcb814    20  b.hi #+0x6c (addr 0xffff8bdcb880)
0xffff8bdcb818    24  str x16, [x2]
0xffff8bdcb81c    28  orr x3, x3, #0x1
0xffff8bdcb820    32  ldr x0, pc+208 (addr 0x0000ffff8bdcb8f0)    ;; object: 0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdcb824    36  stur x0, [x3, #-1]
0xffff8bdcb828    40  movz x0, #0xa00000000
0xffff8bdcb82c    44  stur x0, [x3, #7]
0xffff8bdcb830    48  stur x1, [x3, #15]
0xffff8bdcb834    52  stur cp, [x3, #23]
0xffff8bdcb838    56  ldr x0, pc+192 (addr 0x0000ffff8bdcb8f8)    ;; object: 0x26c04519 <the hole>
0xffff8bdcb83c    60  stur x0, [x3, #31]
0xffff8bdcb840    64  ldur x0, [cp, #39]
0xffff8bdcb844    68  stur x0, [x3, #39]
0xffff8bdcb848    72  ldr x0, pc+184 (addr 0x0000ffff8bdcb900)    ;; object: 0x26c04241 <undefined>
0xffff8bdcb84c    76  stur x0, [x3, #47]
0xffff8bdcb850    80  ldr x0, pc+184 (addr 0x0000ffff8bdcb908)    ;; object: 0x26c04241 <undefined>
0xffff8bdcb854    84  stur x0, [x3, #55]
0xffff8bdcb858    88  ldr x0, pc+184 (addr 0x0000ffff8bdcb910)    ;; object: 0x26c04241 <undefined>
0xffff8bdcb85c    92  stur x0, [x3, #63]
0xffff8bdcb860    96  ldr x0, pc+184 (addr 0x0000ffff8bdcb918)    ;; object: 0x26c04241 <undefined>
0xffff8bdcb864   100  stur x0, [x3, #71]
0xffff8bdcb868   104  ldr x0, pc+184 (addr 0x0000ffff8bdcb920)    ;; object: 0x26c04241 <undefined>
0xffff8bdcb86c   108  stur x0, [x3, #79]
0xffff8bdcb870   112  ldr x0, pc+184 (addr 0x0000ffff8bdcb928)    ;; object: 0x26c04241 <undefined>
0xffff8bdcb874   116  stur x0, [x3, #87]
0xffff8bdcb878   120  mov x0, x3
0xffff8bdcb87c   124  ret
0xffff8bdcb880   128  sub csp, jssp, #0x10 (16)
0xffff8bdcb884   132  stp fp, lr, [jssp, #-16]!
0xffff8bdcb888   136  movz fp, #0xa00000000
0xffff8bdcb88c   140  sub csp, jssp, #0x8 (8)
0xffff8bdcb890   144  str fp, [jssp, #-8]!
0xffff8bdcb894   148  add fp, jssp, #0x8 (8)
0xffff8bdcb898   152  movz x3, #0x0
0xffff8bdcb89c   156  mov x16, lr
0xffff8bdcb8a0   160  ldr x17, pc+144 (addr 0x0000ffff8bdcb930)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdcb8a4   164  blr x17
0xffff8bdcb8a8   168  movz x0, #0x6000000000
0xffff8bdcb8ac   172  movz x10, #0x0
0xffff8bdcb8b0   176  sub csp, jssp, #0x10 (16)
0xffff8bdcb8b4   180  stp x10, x0, [jssp, #-16]!
0xffff8bdcb8b8   184  movz x0, #0x2
0xffff8bdcb8bc   188  movz x1, #0x5b88
0xffff8bdcb8c0   192  movk x1, #0xe2, lsl #16
0xffff8bdcb8c4   196  ldr x16, pc+116 (addr 0x0000ffff8bdcb938)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdcb8c8   200  blr x16
0xffff8bdcb8cc   204  str x0, [jssp, #24]
0xffff8bdcb8d0   208  ldr x16, pc+112 (addr 0x0000ffff8bdcb940)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdcb8d4   212  blr x16
0xffff8bdcb8d8   216  ldr lr, [jssp, #16]
0xffff8bdcb8dc   220  ldp xzr, fp, [jssp], #24
0xffff8bdcb8e0   224  b #-0xc0 (addr 0xffff8bdcb820)
0xffff8bdcb8e4   228  5800031f       constant pool begin (num_const = 24)    ;; constant pool
0xffff8bdcb8e8   232  d63f03e0       constant
0xffff8bdcb8ec   236  d503201f       constant
0xffff8bdcb8f0   240  5f506149       constant
0xffff8bdcb8f4   244  00000000       constant
0xffff8bdcb8f8   248  26c04519       constant
0xffff8bdcb8fc   252  00000000       constant
0xffff8bdcb900   256  26c04241       constant
0xffff8bdcb904   260  00000000       constant
0xffff8bdcb908   264  26c04241       constant
0xffff8bdcb90c   268  00000000       constant
0xffff8bdcb910   272  26c04241       constant
0xffff8bdcb914   276  00000000       constant
0xffff8bdcb918   280  26c04241       constant
0xffff8bdcb91c   284  00000000       constant
0xffff8bdcb920   288  26c04241       constant
0xffff8bdcb924   292  00000000       constant
0xffff8bdcb928   296  26c04241       constant
0xffff8bdcb92c   300  00000000       constant
0xffff8bdcb930   304  8bd06820       constant
0xffff8bdcb934   308  0000ffff       constant
0xffff8bdcb938   312  8bd06260       constant
0xffff8bdcb93c   316  0000ffff       constant
0xffff8bdcb940   320  8bd068e0       constant
0xffff8bdcb944   324  0000ffff       constant


Safepoints (size = 21)
0xffff8bdcb8cc   204  000 | x1 | x3 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 17)
0xffff8bdcb820  embedded object  (0x5f506149 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdcb838  embedded object  (0x26c04519 <the hole>)
0xffff8bdcb848  embedded object  (0x26c04241 <undefined>)
0xffff8bdcb850  embedded object  (0x26c04241 <undefined>)
0xffff8bdcb858  embedded object  (0x26c04241 <undefined>)
0xffff8bdcb860  embedded object  (0x26c04241 <undefined>)
0xffff8bdcb868  embedded object  (0x26c04241 <undefined>)
0xffff8bdcb870  embedded object  (0x26c04241 <undefined>)
0xffff8bdcb8a0  code target (STUB)  (0xffff8bd06820)
0xffff8bdcb8c4  code target (STUB)  (0xffff8bd06260)
0xffff8bdcb8d0  code target (STUB)  (0xffff8bd068e0)
0xffff8bdcb8e4  constant pool (size 100)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 192)
0xffff8bdcfa60     0  ldur x4, [x1, #15]
0xffff8bdcfa64     4  ldur w5, [x1, #27]
0xffff8bdcfa68     8  tbnz w2, #0, #+0x2c (addr 0xffff8bdcfa94)
0xffff8bdcfa6c    12  asr x7, x2, #32
0xffff8bdcfa70    16  cmp w7, w5
0xffff8bdcfa74    20  b.hs #+0x48 (addr 0xffff8bdcfabc)
0xffff8bdcfa78    24  add x5, x4, #0xf (15)
0xffff8bdcfa7c    28  ldr x6, [x5, w7, sxtw #3]
0xffff8bdcfa80    32  ldr x16, [x26, #88]
0xffff8bdcfa84    36  cmp x6, x16
0xffff8bdcfa88    40  b.eq #+0x44 (addr 0xffff8bdcfacc)
0xffff8bdcfa8c    44  mov x0, x6
0xffff8bdcfa90    48  ret
0xffff8bdcfa94    52  ldur x16, [x2, #-1]
0xffff8bdcfa98    56  ldr x17, [x26, #120]
0xffff8bdcfa9c    60  cmp x16, x17
0xffff8bdcfaa0    64  b.ne #+0x3c (addr 0xffff8bdcfadc)
0xffff8bdcfaa4    68  ldur d29, [x2, #7]
0xffff8bdcfaa8    72  fcvtzs w7, d29
0xffff8bdcfaac    76  scvtf d0, w7
0xffff8bdcfab0    80  fcmp d29, d0
0xffff8bdcfab4    84  b.ne #+0x28 (addr 0xffff8bdcfadc)
0xffff8bdcfab8    88  b #-0x48 (addr 0xffff8bdcfa70)
0xffff8bdcfabc    92  movz x16, #0x0
0xffff8bdcfac0    96  sub csp, jssp, #0x10 (16)
0xffff8bdcfac4   100  stp fp, lr, [jssp, #-16]!
0xffff8bdcfac8   104  bl #+0x24 (addr 0xffff8bdcfaec)
0xffff8bdcfacc   108  movz x16, #0x8
0xffff8bdcfad0   112  sub csp, jssp, #0x10 (16)
0xffff8bdcfad4   116  stp fp, lr, [jssp, #-16]!
0xffff8bdcfad8   120  bl #+0x14 (addr 0xffff8bdcfaec)
0xffff8bdcfadc   124  movz x16, #0x10
0xffff8bdcfae0   128  sub csp, jssp, #0x10 (16)
0xffff8bdcfae4   132  stp fp, lr, [jssp, #-16]!
0xffff8bdcfae8   136  bl #+0x4 (addr 0xffff8bdcfaec)
0xffff8bdcfaec   140  movz x17, #0xa00000000
0xffff8bdcfaf0   144  sub csp, jssp, #0x10 (16)
0xffff8bdcfaf4   148  stp x17, cp, [jssp, #-16]!
0xffff8bdcfaf8   152  add fp, jssp, #0x10 (16)
0xffff8bdcfafc   156  ldr x17, pc+20 (addr 0x0000ffff8bdcfb10)    ;; lazy deoptimization bailout 0
0xffff8bdcfb00   160  add x17, x17, x16
0xffff8bdcfb04   164  br x17
0xffff8bdcfb08   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdcfb0c   172  d63f03e0       constant
0xffff8bdcfb10   176  8bb06000       constant
0xffff8bdcfb14   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bdcfafc  runtime entry
0xffff8bdcfb08  constant pool (size 16)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 192)
0xffff8bdcfa60     0  ldur x4, [x1, #15]
0xffff8bdcfa64     4  ldur w5, [x1, #27]
0xffff8bdcfa68     8  tbnz w2, #0, #+0x2c (addr 0xffff8bdcfa94)
0xffff8bdcfa6c    12  asr x7, x2, #32
0xffff8bdcfa70    16  cmp w7, w5
0xffff8bdcfa74    20  b.hs #+0x48 (addr 0xffff8bdcfabc)
0xffff8bdcfa78    24  add x5, x4, #0xf (15)
0xffff8bdcfa7c    28  ldr x6, [x5, w7, sxtw #3]
0xffff8bdcfa80    32  ldr x16, [x26, #88]
0xffff8bdcfa84    36  cmp x6, x16
0xffff8bdcfa88    40  b.eq #+0x44 (addr 0xffff8bdcfacc)
0xffff8bdcfa8c    44  mov x0, x6
0xffff8bdcfa90    48  ret
0xffff8bdcfa94    52  ldur x16, [x2, #-1]
0xffff8bdcfa98    56  ldr x17, [x26, #120]
0xffff8bdcfa9c    60  cmp x16, x17
0xffff8bdcfaa0    64  b.ne #+0x3c (addr 0xffff8bdcfadc)
0xffff8bdcfaa4    68  ldur d29, [x2, #7]
0xffff8bdcfaa8    72  fcvtzs w7, d29
0xffff8bdcfaac    76  scvtf d0, w7
0xffff8bdcfab0    80  fcmp d29, d0
0xffff8bdcfab4    84  b.ne #+0x28 (addr 0xffff8bdcfadc)
0xffff8bdcfab8    88  b #-0x48 (addr 0xffff8bdcfa70)
0xffff8bdcfabc    92  movz x16, #0x0
0xffff8bdcfac0    96  sub csp, jssp, #0x10 (16)
0xffff8bdcfac4   100  stp fp, lr, [jssp, #-16]!
0xffff8bdcfac8   104  bl #+0x24 (addr 0xffff8bdcfaec)
0xffff8bdcfacc   108  movz x16, #0x8
0xffff8bdcfad0   112  sub csp, jssp, #0x10 (16)
0xffff8bdcfad4   116  stp fp, lr, [jssp, #-16]!
0xffff8bdcfad8   120  bl #+0x14 (addr 0xffff8bdcfaec)
0xffff8bdcfadc   124  movz x16, #0x10
0xffff8bdcfae0   128  sub csp, jssp, #0x10 (16)
0xffff8bdcfae4   132  stp fp, lr, [jssp, #-16]!
0xffff8bdcfae8   136  bl #+0x4 (addr 0xffff8bdcfaec)
0xffff8bdcfaec   140  movz x17, #0xa00000000
0xffff8bdcfaf0   144  sub csp, jssp, #0x10 (16)
0xffff8bdcfaf4   148  stp x17, cp, [jssp, #-16]!
0xffff8bdcfaf8   152  add fp, jssp, #0x10 (16)
0xffff8bdcfafc   156  ldr x17, pc+20 (addr 0x0000ffff8bdcfb10)    ;; lazy deoptimization bailout 0
0xffff8bdcfb00   160  add x17, x17, x16
0xffff8bdcfb04   164  br x17
0xffff8bdcfb08   168  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdcfb0c   172  d63f03e0       constant
0xffff8bdcfb10   176  8bb06000       constant
0xffff8bdcfb14   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bdcfafc  runtime entry
0xffff8bdcfb08  constant pool (size 16)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*STRING -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 624)
0xffff8bdd0200     0  orr x16, x1, x0
0xffff8bdd0204     4  tbnz w16, #0, #+0x10 (addr 0xffff8bdd0214)
0xffff8bdd0208     8  asr x1, x1, #32
0xffff8bdd020c    12  sub x0, x1, x0, asr #32
0xffff8bdd0210    16  ret
0xffff8bdd0214    20  cmp x0, x1
0xffff8bdd0218    24  b.ne #+0x30 (addr 0xffff8bdd0248)
0xffff8bdd021c    28  ldur x16, [x0, #-1]
0xffff8bdd0220    32  ldr x17, [x26, #120]
0xffff8bdd0224    36  cmp x16, x17
0xffff8bdd0228    40  b.eq #+0xc (addr 0xffff8bdd0234)
0xffff8bdd022c    44  movz x0, #0x0
0xffff8bdd0230    48  ret
0xffff8bdd0234    52  ldur d0, [x0, #7]
0xffff8bdd0238    56  fcmp d0, d0
0xffff8bdd023c    60  b.vc #-0x10 (addr 0xffff8bdd022c)
0xffff8bdd0240    64  movn x0, #0x0
0xffff8bdd0244    68  ret
0xffff8bdd0248    72  and x16, x1, x0
0xffff8bdd024c    76  tbnz w16, #0, #+0x64 (addr 0xffff8bdd02b0)
0xffff8bdd0250    80  tbz w0, #0, #+0x24 (addr 0xffff8bdd0274)
0xffff8bdd0254    84  ldur x16, [x0, #-1]
0xffff8bdd0258    88  ldr x17, [x26, #120]
0xffff8bdd025c    92  cmp x16, x17
0xffff8bdd0260    96  b.eq #+0x8 (addr 0xffff8bdd0268)
0xffff8bdd0264   100  ret
0xffff8bdd0268   104  ldur d0, [x0, #7]
0xffff8bdd026c   108  scvtf d1, x1, #32
0xffff8bdd0270   112  b #+0x24 (addr 0xffff8bdd0294)
0xffff8bdd0274   116  ldur x16, [x1, #-1]
0xffff8bdd0278   120  ldr x17, [x26, #120]
0xffff8bdd027c   124  cmp x16, x17
0xffff8bdd0280   128  b.eq #+0xc (addr 0xffff8bdd028c)
0xffff8bdd0284   132  movz x0, #0x1
0xffff8bdd0288   136  ret
0xffff8bdd028c   140  ldur d1, [x1, #7]
0xffff8bdd0290   144  scvtf d0, x0, #32
0xffff8bdd0294   148  fcmp d1, d0
0xffff8bdd0298   152  b.vs #+0x10 (addr 0xffff8bdd02a8)
0xffff8bdd029c   156  cset x0, gt
0xffff8bdd02a0   160  csinv x0, x0, xzr, ge
0xffff8bdd02a4   164  ret
0xffff8bdd02a8   168  movn x0, #0x0
0xffff8bdd02ac   172  ret
0xffff8bdd02b0   176  ldur x10, [x0, #-1]
0xffff8bdd02b4   180  ldur x12, [x1, #-1]
0xffff8bdd02b8   184  ldrb w11, [x10, #11]
0xffff8bdd02bc   188  ldrb w13, [x12, #11]
0xffff8bdd02c0   192  cmp x11, #0xb1 (177)
0xffff8bdd02c4   196  b.lt #+0x8 (addr 0xffff8bdd02cc)
0xffff8bdd02c8   200  ret
0xffff8bdd02cc   204  cmp x11, #0x83 (131)
0xffff8bdd02d0   208  movz x16, #0x83
0xffff8bdd02d4   212  ccmp x13, x16, #nZcv, ne
0xffff8bdd02d8   216  movz x16, #0xb1
0xffff8bdd02dc   220  ccmp x13, x16, #NzcV, ne
0xffff8bdd02e0   224  b.ge #-0x18 (addr 0xffff8bdd02c8)
0xffff8bdd02e4   228  orr x14, x13, x11
0xffff8bdd02e8   232  tst x14, #0xc0
0xffff8bdd02ec   236  b.eq #-0x24 (addr 0xffff8bdd02c8)
0xffff8bdd02f0   240  cmp x11, #0x81 (129)
0xffff8bdd02f4   244  b.ne #+0x18 (addr 0xffff8bdd030c)
0xffff8bdd02f8   248  cmp x12, x10
0xffff8bdd02fc   252  b.ne #+0x10 (addr 0xffff8bdd030c)
0xffff8bdd0300   256  ldur d1, [x1, #7]
0xffff8bdd0304   260  ldur d0, [x0, #7]
0xffff8bdd0308   264  b #-0x74 (addr 0xffff8bdd0294)
0xffff8bdd030c   268  movz x16, #0x87
0xffff8bdd0310   272  and x14, x13, x16
0xffff8bdd0314   276  movz x16, #0x87
0xffff8bdd0318   280  and x15, x11, x16
0xffff8bdd031c   284  cmp x14, #0x4 (4)
0xffff8bdd0320   288  ccmp x15, #4, #nzcv, eq
0xffff8bdd0324   292  b.ne #+0x5c (addr 0xffff8bdd0380)
0xffff8bdd0328   296  ldur x10, [x1, #15]
0xffff8bdd032c   300  ldur x11, [x0, #15]
0xffff8bdd0330   304  cmp x10, x11
0xffff8bdd0334   308  b.eq #+0xc (addr 0xffff8bdd0340)
0xffff8bdd0338   312  movz x0, #0x100000000
0xffff8bdd033c   316  ret
0xffff8bdd0340   320  cbnz x10, #+0xc (addr 0xffff8bdd034c)
0xffff8bdd0344   324  movz x0, #0x0
0xffff8bdd0348   328  ret
0xffff8bdd034c   332  asr x10, x10, #32
0xffff8bdd0350   336  add x11, x10, #0x17 (23)
0xffff8bdd0354   340  add x1, x1, x11
0xffff8bdd0358   344  add x0, x0, x11
0xffff8bdd035c   348  neg x10, x10
0xffff8bdd0360   352  ldrb w11, [x1, x10]
0xffff8bdd0364   356  ldrb w12, [x0, x10]
0xffff8bdd0368   360  cmp x11, x12
0xffff8bdd036c   364  b.ne #-0x34 (addr 0xffff8bdd0338)
0xffff8bdd0370   368  add x10, x10, #0x1 (1)
0xffff8bdd0374   372  cbnz x10, #-0x14 (addr 0xffff8bdd0360)
0xffff8bdd0378   376  movz x0, #0x0
0xffff8bdd037c   380  ret
0xffff8bdd0380   384  movz x16, #0xc00000000
0xffff8bdd0384   388  sub csp, jssp, #0x10 (16)
0xffff8bdd0388   392  stp fp, lr, [jssp, #-16]!
0xffff8bdd038c   396  sub csp, jssp, #0x10 (16)
0xffff8bdd0390   400  str x16, [jssp, #-8]!
0xffff8bdd0394   404  ldr x17, pc+172 (addr 0x0000ffff8bdd0440)    ;; object: 0xffff8bdd01a1 <Code: COMPARE_IC>
0xffff8bdd0398   408  sub csp, jssp, #0x10 (16)
0xffff8bdd039c   412  str x17, [jssp, #-8]!
0xffff8bdd03a0   416  add fp, jssp, #0x10 (16)
0xffff8bdd03a4   420  sub csp, jssp, #0x10 (16)
0xffff8bdd03a8   424  stp x0, x1, [jssp, #-16]!
0xffff8bdd03ac   428  movz x0, #0x2
0xffff8bdd03b0   432  ldr x1, pc+152 (addr 0x0000ffff8bdd0448)    ;; external reference (Runtime::StrictEqual)
0xffff8bdd03b4   436  ldr x16, pc+156 (addr 0x0000ffff8bdd0450)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdd03b8   440  blr x16
0xffff8bdd03bc   444  mov jssp, fp
0xffff8bdd03c0   448  ldp fp, lr, [jssp], #16
0xffff8bdd03c4   452  ldr x1, [x26, #64]
0xffff8bdd03c8   456  sub x0, x0, x1
0xffff8bdd03cc   460  ret
0xffff8bdd03d0   464  movz x16, #0xc00000000
0xffff8bdd03d4   468  sub csp, jssp, #0x10 (16)
0xffff8bdd03d8   472  stp fp, lr, [jssp, #-16]!
0xffff8bdd03dc   476  sub csp, jssp, #0x10 (16)
0xffff8bdd03e0   480  str x16, [jssp, #-8]!
0xffff8bdd03e4   484  ldr x17, pc+116 (addr 0x0000ffff8bdd0458)    ;; object: 0xffff8bdd01a1 <Code: COMPARE_IC>
0xffff8bdd03e8   488  sub csp, jssp, #0x10 (16)
0xffff8bdd03ec   492  str x17, [jssp, #-8]!
0xffff8bdd03f0   496  add fp, jssp, #0x10 (16)
0xffff8bdd03f4   500  sub csp, jssp, #0x18 (24)
0xffff8bdd03f8   504  stp lr, x0, [jssp, #-24]!
0xffff8bdd03fc   508  str x1, [jssp, #16]
0xffff8bdd0400   512  movz x10, #0x2f00000000
0xffff8bdd0404   516  sub csp, jssp, #0x18 (24)
0xffff8bdd0408   520  stp x10, x0, [jssp, #-24]!
0xffff8bdd040c   524  str x1, [jssp, #16]
0xffff8bdd0410   528  movz x0, #0x3
0xffff8bdd0414   532  ldr x1, pc+76 (addr 0x0000ffff8bdd0460)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bdd0418   536  ldr x16, pc+80 (addr 0x0000ffff8bdd0468)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdd041c   540  blr x16
0xffff8bdd0420   544  add x11, x0, #0x5f (95)
0xffff8bdd0424   548  ldr x1, [jssp, #16]
0xffff8bdd0428   552  ldp lr, x0, [jssp], #24
0xffff8bdd042c   556  mov jssp, fp
0xffff8bdd0430   560  ldp fp, lr, [jssp], #16
0xffff8bdd0434   564  br x11
0xffff8bdd0438   568  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdd043c   572  d63f03e0       constant
0xffff8bdd0440   576  8bdd01a1       constant
0xffff8bdd0444   580  0000ffff       constant
0xffff8bdd0448   584  00e50928       constant
0xffff8bdd044c   588  00000000       constant
0xffff8bdd0450   592  8bd06060       constant
0xffff8bdd0454   596  0000ffff       constant
0xffff8bdd0458   600  8bdd01a1       constant
0xffff8bdd045c   604  0000ffff       constant
0xffff8bdd0460   608  00c8a980       constant
0xffff8bdd0464   612  00000000       constant
0xffff8bdd0468   616  8bd06060       constant
0xffff8bdd046c   620  0000ffff       constant


RelocInfo (size = 16)
0xffff8bdd0394  embedded object  (0xffff8bdd01a1 <Code: COMPARE_IC>)
0xffff8bdd03b0  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff8bdd03b4  code target (STUB)  (0xffff8bd06060)
0xffff8bdd03e4  embedded object  (0xffff8bdd01a1 <Code: COMPARE_IC>)
0xffff8bdd0414  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bdd0418  code target (STUB)  (0xffff8bd06060)
0xffff8bdd0438  constant pool (size 56)


kind = HANDLER
major_key = <NoCache>Stub
name = indexOf
compiler = unknown
Instructions (size = 152)
0xffff8bdd0820     0  sub csp, jssp, #0x8 (8)
0xffff8bdd0824     4  str x3, [jssp, #-8]!
0xffff8bdd0828     8  sub csp, jssp, #0x8 (8)
0xffff8bdd082c    12  str x0, [jssp, #-8]!
0xffff8bdd0830    16  ldur x3, [cp, #39]
0xffff8bdd0834    20  movz x16, #0x2e7
0xffff8bdd0838    24  ldr x3, [x3, x16]
0xffff8bdd083c    28  ldur x3, [x3, #23]
0xffff8bdd0840    32  ldur x3, [x3, #23]
0xffff8bdd0844    36  ldr x0, pc+84 (addr 0x0000ffff8bdd0898)    ;; object: 0x26c63e59 Cell for 0
0xffff8bdd0848    40  ldur x0, [x0, #7]
0xffff8bdd084c    44  cmp x0, #0x0 (0)
0xffff8bdd0850    48  b.ne #+0x1c (addr 0xffff8bdd086c)
0xffff8bdd0854    52  ldur x0, [x3, #-1]
0xffff8bdd0858    56  ldr x4, pc+72 (addr 0x0000ffff8bdd08a0)    ;; object: 0x32706e39 WeakCell for 0x5f5156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff8bdd085c    60  ldur x4, [x4, #7]
0xffff8bdd0860    64  cmp x0, x4
0xffff8bdd0864    68  b.ne #+0x8 (addr 0xffff8bdd086c)
0xffff8bdd0868    72  b #+0x14 (addr 0xffff8bdd087c)
0xffff8bdd086c    76  ldr x0, [jssp], #8
0xffff8bdd0870    80  ldr x3, [jssp], #8
0xffff8bdd0874    84  ldr x16, pc+52 (addr 0x0000ffff8bdd08a8)    ;; code: BUILTIN
0xffff8bdd0878    88  br x16
0xffff8bdd087c    92  add jssp, jssp, #0x10 (16)
0xffff8bdd0880    96  mov x1, x3
0xffff8bdd0884   100  ldr x16, pc+44 (addr 0x0000ffff8bdd08b0)    ;; code: HANDLER, LoadConstantStub, minor: 10
0xffff8bdd0888   104  br x16
0xffff8bdd088c   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff8bdd0890   112  d63f03e0       constant
0xffff8bdd0894   116  d503201f       constant
0xffff8bdd0898   120  26c63e59       constant
0xffff8bdd089c   124  00000000       constant
0xffff8bdd08a0   128  32706e39       constant
0xffff8bdd08a4   132  00000000       constant
0xffff8bdd08a8   136  8bd222e0       constant
0xffff8bdd08ac   140  0000ffff       constant
0xffff8bdd08b0   144  8bd8c760       constant
0xffff8bdd08b4   148  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdd0844  embedded object  (0x26c63e59 Cell for 0)
0xffff8bdd0858  embedded object  (0x32706e39 WeakCell for 0x5f5156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff8bdd0874  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdd0884  code target (HANDLER)  (0xffff8bd8c760)
0xffff8bdd088c  constant pool (size 44)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 413)
0xffff8bdd12e0     0  ldur x4, [x1, #15]
0xffff8bdd12e4     4  ldur w5, [x4, #11]
0xffff8bdd12e8     8  ldur x16, [x1, #23]
0xffff8bdd12ec    12  ldur x16, [x16, #39]
0xffff8bdd12f0    16  tst x16, #0x8
0xffff8bdd12f4    20  b.ne #+0x11c (addr 0xffff8bdd1410)
0xffff8bdd12f8    24  ldur x6, [x4, #23]
0xffff8bdd12fc    28  ldur x4, [x4, #15]
0xffff8bdd1300    32  add x4, x6, x4
0xffff8bdd1304    36  tbnz w2, #0, #+0x48 (addr 0xffff8bdd134c)
0xffff8bdd1308    40  asr x7, x2, #32
0xffff8bdd130c    44  cmp w7, w5
0xffff8bdd1310    48  b.hs #+0x110 (addr 0xffff8bdd1420)
0xffff8bdd1314    52  ldr d0, [x4, w7, sxtw #3]
0xffff8bdd1318    56  movz x1, #0xe2c0
0xffff8bdd131c    60  movk x1, #0x2cb8, lsl #16
0xffff8bdd1320    64  ldp x2, x0, [x1]
0xffff8bdd1324    68  adds x16, x2, #0x10 (16)
0xffff8bdd1328    72  ccmp x16, x0, #nzCv, lo
0xffff8bdd132c    76  b.hi #+0x68 (addr 0xffff8bdd1394)
0xffff8bdd1330    80  str x16, [x1]
0xffff8bdd1334    84  ldr x1, [x26, #120]
0xffff8bdd1338    88  str x1, [x2]
0xffff8bdd133c    92  orr x2, x2, #0x1
0xffff8bdd1340    96  stur d0, [x2, #7]
0xffff8bdd1344   100  mov x0, x2
0xffff8bdd1348   104  ret
0xffff8bdd134c   108  sub csp, jssp, #0x10 (16)
0xffff8bdd1350   112  stp fp, lr, [jssp, #-16]!
0xffff8bdd1354   116  movz fp, #0xa00000000
0xffff8bdd1358   120  sub csp, jssp, #0x8 (8)
0xffff8bdd135c   124  str fp, [jssp, #-8]!
0xffff8bdd1360   128  add fp, jssp, #0x8 (8)
0xffff8bdd1364   132  ldur x16, [x2, #-1]
0xffff8bdd1368   136  ldr x17, [x26, #120]
0xffff8bdd136c   140  cmp x16, x17
0xffff8bdd1370   144  b.ne #+0xc0 (addr 0xffff8bdd1430)
0xffff8bdd1374   148  ldur d29, [x2, #7]
0xffff8bdd1378   152  fcvtzs w7, d29
0xffff8bdd137c   156  scvtf d0, w7
0xffff8bdd1380   160  fcmp d29, d0
0xffff8bdd1384   164  b.ne #+0xac (addr 0xffff8bdd1430)
0xffff8bdd1388   168  ldr lr, [jssp, #16]
0xffff8bdd138c   172  ldp xzr, fp, [jssp], #24
0xffff8bdd1390   176  b #-0x84 (addr 0xffff8bdd130c)
0xffff8bdd1394   180  sub csp, jssp, #0x10 (16)
0xffff8bdd1398   184  stp fp, lr, [jssp, #-16]!
0xffff8bdd139c   188  movz fp, #0xa00000000
0xffff8bdd13a0   192  sub csp, jssp, #0x8 (8)
0xffff8bdd13a4   196  str fp, [jssp, #-8]!
0xffff8bdd13a8   200  add fp, jssp, #0x8 (8)
0xffff8bdd13ac   204  movz x2, #0x0
0xffff8bdd13b0   208  mov x16, lr
0xffff8bdd13b4   212  ldr x17, pc+68 (addr 0x0000ffff8bdd13f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdd13b8   216  blr x17
0xffff8bdd13bc   220  ldur cp, [fp, #-8]
0xffff8bdd13c0   224  movz x0, #0x0
0xffff8bdd13c4   228  movz x1, #0x4b48
0xffff8bdd13c8   232  movk x1, #0xe4, lsl #16
0xffff8bdd13cc   236  ldr x16, pc+52 (addr 0x0000ffff8bdd1400)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdd13d0   240  blr x16
0xffff8bdd13d4   244  str x0, [jssp, #16]
0xffff8bdd13d8   248  ldr x16, pc+48 (addr 0x0000ffff8bdd1408)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdd13dc   252  blr x16
0xffff8bdd13e0   256  ldr lr, [jssp, #16]
0xffff8bdd13e4   260  ldp xzr, fp, [jssp], #24
0xffff8bdd13e8   264  b #-0xa8 (addr 0xffff8bdd1340)
0xffff8bdd13ec   268  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bdd13f0   272  d63f03e0       constant
0xffff8bdd13f4   276  d503201f       constant
0xffff8bdd13f8   280  8bd06820       constant
0xffff8bdd13fc   284  0000ffff       constant
0xffff8bdd1400   288  8bd06260       constant
0xffff8bdd1404   292  0000ffff       constant
0xffff8bdd1408   296  8bd068e0       constant
0xffff8bdd140c   300  0000ffff       constant
0xffff8bdd1410   304  movz x16, #0x0
0xffff8bdd1414   308  sub csp, jssp, #0x10 (16)
0xffff8bdd1418   312  stp fp, lr, [jssp, #-16]!
0xffff8bdd141c   316  bl #+0x1c (addr 0xffff8bdd1438)
0xffff8bdd1420   320  movz x16, #0x8
0xffff8bdd1424   324  sub csp, jssp, #0x10 (16)
0xffff8bdd1428   328  stp fp, lr, [jssp, #-16]!
0xffff8bdd142c   332  bl #+0xc (addr 0xffff8bdd1438)
0xffff8bdd1430   336  movz x16, #0x10
0xffff8bdd1434   340  bl #+0x14 (addr 0xffff8bdd1448)
0xffff8bdd1438   344  movz x17, #0xa00000000
0xffff8bdd143c   348  sub csp, jssp, #0x10 (16)
0xffff8bdd1440   352  stp x17, cp, [jssp, #-16]!
0xffff8bdd1444   356  add fp, jssp, #0x10 (16)
0xffff8bdd1448   360  ldr x17, pc+24 (addr 0x0000ffff8bdd1460)    ;; lazy deoptimization bailout 0
0xffff8bdd144c   364  add x17, x17, x16
0xffff8bdd1450   368  br x17
0xffff8bdd1454   372  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd1458   376  d63f03e0       constant
0xffff8bdd145c   380  d503201f       constant
0xffff8bdd1460   384  8bb06000       constant
0xffff8bdd1464   388  0000ffff       constant


Safepoints (size = 21)
0xffff8bdd13d4   244  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bdd13b4  code target (STUB)  (0xffff8bd06820)
0xffff8bdd13cc  code target (STUB)  (0xffff8bd06260)
0xffff8bdd13d8  code target (STUB)  (0xffff8bd068e0)
0xffff8bdd13ec  constant pool (size 36)
0xffff8bdd1448  runtime entry
0xffff8bdd1454  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 413)
0xffff8bdd12e0     0  ldur x4, [x1, #15]
0xffff8bdd12e4     4  ldur w5, [x4, #11]
0xffff8bdd12e8     8  ldur x16, [x1, #23]
0xffff8bdd12ec    12  ldur x16, [x16, #39]
0xffff8bdd12f0    16  tst x16, #0x8
0xffff8bdd12f4    20  b.ne #+0x11c (addr 0xffff8bdd1410)
0xffff8bdd12f8    24  ldur x6, [x4, #23]
0xffff8bdd12fc    28  ldur x4, [x4, #15]
0xffff8bdd1300    32  add x4, x6, x4
0xffff8bdd1304    36  tbnz w2, #0, #+0x48 (addr 0xffff8bdd134c)
0xffff8bdd1308    40  asr x7, x2, #32
0xffff8bdd130c    44  cmp w7, w5
0xffff8bdd1310    48  b.hs #+0x110 (addr 0xffff8bdd1420)
0xffff8bdd1314    52  ldr d0, [x4, w7, sxtw #3]
0xffff8bdd1318    56  movz x1, #0xe2c0
0xffff8bdd131c    60  movk x1, #0x2cb8, lsl #16
0xffff8bdd1320    64  ldp x2, x0, [x1]
0xffff8bdd1324    68  adds x16, x2, #0x10 (16)
0xffff8bdd1328    72  ccmp x16, x0, #nzCv, lo
0xffff8bdd132c    76  b.hi #+0x68 (addr 0xffff8bdd1394)
0xffff8bdd1330    80  str x16, [x1]
0xffff8bdd1334    84  ldr x1, [x26, #120]
0xffff8bdd1338    88  str x1, [x2]
0xffff8bdd133c    92  orr x2, x2, #0x1
0xffff8bdd1340    96  stur d0, [x2, #7]
0xffff8bdd1344   100  mov x0, x2
0xffff8bdd1348   104  ret
0xffff8bdd134c   108  sub csp, jssp, #0x10 (16)
0xffff8bdd1350   112  stp fp, lr, [jssp, #-16]!
0xffff8bdd1354   116  movz fp, #0xa00000000
0xffff8bdd1358   120  sub csp, jssp, #0x8 (8)
0xffff8bdd135c   124  str fp, [jssp, #-8]!
0xffff8bdd1360   128  add fp, jssp, #0x8 (8)
0xffff8bdd1364   132  ldur x16, [x2, #-1]
0xffff8bdd1368   136  ldr x17, [x26, #120]
0xffff8bdd136c   140  cmp x16, x17
0xffff8bdd1370   144  b.ne #+0xc0 (addr 0xffff8bdd1430)
0xffff8bdd1374   148  ldur d29, [x2, #7]
0xffff8bdd1378   152  fcvtzs w7, d29
0xffff8bdd137c   156  scvtf d0, w7
0xffff8bdd1380   160  fcmp d29, d0
0xffff8bdd1384   164  b.ne #+0xac (addr 0xffff8bdd1430)
0xffff8bdd1388   168  ldr lr, [jssp, #16]
0xffff8bdd138c   172  ldp xzr, fp, [jssp], #24
0xffff8bdd1390   176  b #-0x84 (addr 0xffff8bdd130c)
0xffff8bdd1394   180  sub csp, jssp, #0x10 (16)
0xffff8bdd1398   184  stp fp, lr, [jssp, #-16]!
0xffff8bdd139c   188  movz fp, #0xa00000000
0xffff8bdd13a0   192  sub csp, jssp, #0x8 (8)
0xffff8bdd13a4   196  str fp, [jssp, #-8]!
0xffff8bdd13a8   200  add fp, jssp, #0x8 (8)
0xffff8bdd13ac   204  movz x2, #0x0
0xffff8bdd13b0   208  mov x16, lr
0xffff8bdd13b4   212  ldr x17, pc+68 (addr 0x0000ffff8bdd13f8)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdd13b8   216  blr x17
0xffff8bdd13bc   220  ldur cp, [fp, #-8]
0xffff8bdd13c0   224  movz x0, #0x0
0xffff8bdd13c4   228  movz x1, #0x4b48
0xffff8bdd13c8   232  movk x1, #0xe4, lsl #16
0xffff8bdd13cc   236  ldr x16, pc+52 (addr 0x0000ffff8bdd1400)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdd13d0   240  blr x16
0xffff8bdd13d4   244  str x0, [jssp, #16]
0xffff8bdd13d8   248  ldr x16, pc+48 (addr 0x0000ffff8bdd1408)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdd13dc   252  blr x16
0xffff8bdd13e0   256  ldr lr, [jssp, #16]
0xffff8bdd13e4   260  ldp xzr, fp, [jssp], #24
0xffff8bdd13e8   264  b #-0xa8 (addr 0xffff8bdd1340)
0xffff8bdd13ec   268  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8bdd13f0   272  d63f03e0       constant
0xffff8bdd13f4   276  d503201f       constant
0xffff8bdd13f8   280  8bd06820       constant
0xffff8bdd13fc   284  0000ffff       constant
0xffff8bdd1400   288  8bd06260       constant
0xffff8bdd1404   292  0000ffff       constant
0xffff8bdd1408   296  8bd068e0       constant
0xffff8bdd140c   300  0000ffff       constant
0xffff8bdd1410   304  movz x16, #0x0
0xffff8bdd1414   308  sub csp, jssp, #0x10 (16)
0xffff8bdd1418   312  stp fp, lr, [jssp, #-16]!
0xffff8bdd141c   316  bl #+0x1c (addr 0xffff8bdd1438)
0xffff8bdd1420   320  movz x16, #0x8
0xffff8bdd1424   324  sub csp, jssp, #0x10 (16)
0xffff8bdd1428   328  stp fp, lr, [jssp, #-16]!
0xffff8bdd142c   332  bl #+0xc (addr 0xffff8bdd1438)
0xffff8bdd1430   336  movz x16, #0x10
0xffff8bdd1434   340  bl #+0x14 (addr 0xffff8bdd1448)
0xffff8bdd1438   344  movz x17, #0xa00000000
0xffff8bdd143c   348  sub csp, jssp, #0x10 (16)
0xffff8bdd1440   352  stp x17, cp, [jssp, #-16]!
0xffff8bdd1444   356  add fp, jssp, #0x10 (16)
0xffff8bdd1448   360  ldr x17, pc+24 (addr 0x0000ffff8bdd1460)    ;; lazy deoptimization bailout 0
0xffff8bdd144c   364  add x17, x17, x16
0xffff8bdd1450   368  br x17
0xffff8bdd1454   372  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd1458   376  d63f03e0       constant
0xffff8bdd145c   380  d503201f       constant
0xffff8bdd1460   384  8bb06000       constant
0xffff8bdd1464   388  0000ffff       constant


Safepoints (size = 21)
0xffff8bdd13d4   244  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8bdd13b4  code target (STUB)  (0xffff8bd06820)
0xffff8bdd13cc  code target (STUB)  (0xffff8bd06260)
0xffff8bdd13d8  code target (STUB)  (0xffff8bd068e0)
0xffff8bdd13ec  constant pool (size 36)
0xffff8bdd1448  runtime entry
0xffff8bdd1454  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = Date
compiler = unknown
Instructions (size = 120)
0xffff8bdd1a60     0  sub csp, jssp, #0x8 (8)
0xffff8bdd1a64     4  str x3, [jssp, #-8]!
0xffff8bdd1a68     8  sub csp, jssp, #0x8 (8)
0xffff8bdd1a6c    12  str x0, [jssp, #-8]!
0xffff8bdd1a70    16  ldr x0, pc+80 (addr 0x0000ffff8bdd1ac0)    ;; object: 0x26cc5d51 Cell for 0
0xffff8bdd1a74    20  ldur x0, [x0, #7]
0xffff8bdd1a78    24  cmp x0, #0x0 (0)
0xffff8bdd1a7c    28  b.ne #+0x2c (addr 0xffff8bdd1aa8)
0xffff8bdd1a80    32  ldr x0, pc+72 (addr 0x0000ffff8bdd1ac8)    ;; object: 0x32734939 WeakCell for 0x26c42ca1 PropertyCell for 0x26c42c39 <JS Function Date (SharedFunctionInfo 0x26c42b91)>
0xffff8bdd1a84    36  ldur x0, [x0, #7]
0xffff8bdd1a88    40  tbz w0, #0, #+0x20 (addr 0xffff8bdd1aa8)
0xffff8bdd1a8c    44  ldur x0, [x0, #15]
0xffff8bdd1a90    48  ldr x16, [x26, #88]
0xffff8bdd1a94    52  cmp x0, x16
0xffff8bdd1a98    56  b.eq #+0x10 (addr 0xffff8bdd1aa8)
0xffff8bdd1a9c    60  add jssp, jssp, #0x10 (16)
0xffff8bdd1aa0    64  ret
0xffff8bdd1aa4    68  b #+0x14 (addr 0xffff8bdd1ab8)
0xffff8bdd1aa8    72  ldr x0, [jssp], #8
0xffff8bdd1aac    76  ldr x3, [jssp], #8
0xffff8bdd1ab0    80  ldr x16, pc+32 (addr 0x0000ffff8bdd1ad0)    ;; code: BUILTIN
0xffff8bdd1ab4    84  br x16
0xffff8bdd1ab8    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bdd1abc    92  d63f03e0       constant
0xffff8bdd1ac0    96  26cc5d51       constant
0xffff8bdd1ac4   100  00000000       constant
0xffff8bdd1ac8   104  32734939       constant
0xffff8bdd1acc   108  00000000       constant
0xffff8bdd1ad0   112  8bd222e0       constant
0xffff8bdd1ad4   116  0000ffff       constant


RelocInfo (size = 9)
0xffff8bdd1a70  embedded object  (0x26cc5d51 Cell for 0)
0xffff8bdd1a80  embedded object  (0x32734939 WeakCell for 0x26c42ca1 PropertyCell for 0x26c42c39 <JS Function Date (SharedFunctionInfo 0x26c42b91)>)
0xffff8bdd1ab0  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdd1ab8  constant pool (size 32)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = STRING*SMI -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 632)
0xffff8bdd2a40     0  tbnz w0, #0, #+0x1d4 (addr 0xffff8bdd2c14)
0xffff8bdd2a44     4  orr x16, x1, x0
0xffff8bdd2a48     8  tbnz w16, #0, #+0x10 (addr 0xffff8bdd2a58)
0xffff8bdd2a4c    12  asr x1, x1, #32
0xffff8bdd2a50    16  sub x0, x1, x0, asr #32
0xffff8bdd2a54    20  ret
0xffff8bdd2a58    24  cmp x0, x1
0xffff8bdd2a5c    28  b.ne #+0x30 (addr 0xffff8bdd2a8c)
0xffff8bdd2a60    32  ldur x16, [x0, #-1]
0xffff8bdd2a64    36  ldr x17, [x26, #120]
0xffff8bdd2a68    40  cmp x16, x17
0xffff8bdd2a6c    44  b.eq #+0xc (addr 0xffff8bdd2a78)
0xffff8bdd2a70    48  movz x0, #0x0
0xffff8bdd2a74    52  ret
0xffff8bdd2a78    56  ldur d0, [x0, #7]
0xffff8bdd2a7c    60  fcmp d0, d0
0xffff8bdd2a80    64  b.vc #-0x10 (addr 0xffff8bdd2a70)
0xffff8bdd2a84    68  movn x0, #0x0
0xffff8bdd2a88    72  ret
0xffff8bdd2a8c    76  and x16, x1, x0
0xffff8bdd2a90    80  tbnz w16, #0, #+0x64 (addr 0xffff8bdd2af4)
0xffff8bdd2a94    84  tbz w0, #0, #+0x24 (addr 0xffff8bdd2ab8)
0xffff8bdd2a98    88  ldur x16, [x0, #-1]
0xffff8bdd2a9c    92  ldr x17, [x26, #120]
0xffff8bdd2aa0    96  cmp x16, x17
0xffff8bdd2aa4   100  b.eq #+0x8 (addr 0xffff8bdd2aac)
0xffff8bdd2aa8   104  ret
0xffff8bdd2aac   108  ldur d0, [x0, #7]
0xffff8bdd2ab0   112  scvtf d1, x1, #32
0xffff8bdd2ab4   116  b #+0x24 (addr 0xffff8bdd2ad8)
0xffff8bdd2ab8   120  ldur x16, [x1, #-1]
0xffff8bdd2abc   124  ldr x17, [x26, #120]
0xffff8bdd2ac0   128  cmp x16, x17
0xffff8bdd2ac4   132  b.eq #+0xc (addr 0xffff8bdd2ad0)
0xffff8bdd2ac8   136  movz x0, #0x1
0xffff8bdd2acc   140  ret
0xffff8bdd2ad0   144  ldur d1, [x1, #7]
0xffff8bdd2ad4   148  scvtf d0, x0, #32
0xffff8bdd2ad8   152  fcmp d1, d0
0xffff8bdd2adc   156  b.vs #+0x10 (addr 0xffff8bdd2aec)
0xffff8bdd2ae0   160  cset x0, gt
0xffff8bdd2ae4   164  csinv x0, x0, xzr, ge
0xffff8bdd2ae8   168  ret
0xffff8bdd2aec   172  movn x0, #0x0
0xffff8bdd2af0   176  ret
0xffff8bdd2af4   180  ldur x10, [x0, #-1]
0xffff8bdd2af8   184  ldur x12, [x1, #-1]
0xffff8bdd2afc   188  ldrb w11, [x10, #11]
0xffff8bdd2b00   192  ldrb w13, [x12, #11]
0xffff8bdd2b04   196  cmp x11, #0xb1 (177)
0xffff8bdd2b08   200  b.lt #+0x8 (addr 0xffff8bdd2b10)
0xffff8bdd2b0c   204  ret
0xffff8bdd2b10   208  cmp x11, #0x83 (131)
0xffff8bdd2b14   212  movz x16, #0x83
0xffff8bdd2b18   216  ccmp x13, x16, #nZcv, ne
0xffff8bdd2b1c   220  movz x16, #0xb1
0xffff8bdd2b20   224  ccmp x13, x16, #NzcV, ne
0xffff8bdd2b24   228  b.ge #-0x18 (addr 0xffff8bdd2b0c)
0xffff8bdd2b28   232  orr x14, x13, x11
0xffff8bdd2b2c   236  tst x14, #0xc0
0xffff8bdd2b30   240  b.eq #-0x24 (addr 0xffff8bdd2b0c)
0xffff8bdd2b34   244  cmp x11, #0x81 (129)
0xffff8bdd2b38   248  b.ne #+0x18 (addr 0xffff8bdd2b50)
0xffff8bdd2b3c   252  cmp x12, x10
0xffff8bdd2b40   256  b.ne #+0x10 (addr 0xffff8bdd2b50)
0xffff8bdd2b44   260  ldur d1, [x1, #7]
0xffff8bdd2b48   264  ldur d0, [x0, #7]
0xffff8bdd2b4c   268  b #-0x74 (addr 0xffff8bdd2ad8)
0xffff8bdd2b50   272  movz x16, #0x87
0xffff8bdd2b54   276  and x14, x13, x16
0xffff8bdd2b58   280  movz x16, #0x87
0xffff8bdd2b5c   284  and x15, x11, x16
0xffff8bdd2b60   288  cmp x14, #0x4 (4)
0xffff8bdd2b64   292  ccmp x15, #4, #nzcv, eq
0xffff8bdd2b68   296  b.ne #+0x5c (addr 0xffff8bdd2bc4)
0xffff8bdd2b6c   300  ldur x10, [x1, #15]
0xffff8bdd2b70   304  ldur x11, [x0, #15]
0xffff8bdd2b74   308  cmp x10, x11
0xffff8bdd2b78   312  b.eq #+0xc (addr 0xffff8bdd2b84)
0xffff8bdd2b7c   316  movz x0, #0x100000000
0xffff8bdd2b80   320  ret
0xffff8bdd2b84   324  cbnz x10, #+0xc (addr 0xffff8bdd2b90)
0xffff8bdd2b88   328  movz x0, #0x0
0xffff8bdd2b8c   332  ret
0xffff8bdd2b90   336  asr x10, x10, #32
0xffff8bdd2b94   340  add x11, x10, #0x17 (23)
0xffff8bdd2b98   344  add x1, x1, x11
0xffff8bdd2b9c   348  add x0, x0, x11
0xffff8bdd2ba0   352  neg x10, x10
0xffff8bdd2ba4   356  ldrb w11, [x1, x10]
0xffff8bdd2ba8   360  ldrb w12, [x0, x10]
0xffff8bdd2bac   364  cmp x11, x12
0xffff8bdd2bb0   368  b.ne #-0x34 (addr 0xffff8bdd2b7c)
0xffff8bdd2bb4   372  add x10, x10, #0x1 (1)
0xffff8bdd2bb8   376  cbnz x10, #-0x14 (addr 0xffff8bdd2ba4)
0xffff8bdd2bbc   380  movz x0, #0x0
0xffff8bdd2bc0   384  ret
0xffff8bdd2bc4   388  movz x16, #0xc00000000
0xffff8bdd2bc8   392  sub csp, jssp, #0x10 (16)
0xffff8bdd2bcc   396  stp fp, lr, [jssp, #-16]!
0xffff8bdd2bd0   400  sub csp, jssp, #0x10 (16)
0xffff8bdd2bd4   404  str x16, [jssp, #-8]!
0xffff8bdd2bd8   408  ldr x17, pc+176 (addr 0x0000ffff8bdd2c88)    ;; object: 0xffff8bdd29e1 <Code: COMPARE_IC>
0xffff8bdd2bdc   412  sub csp, jssp, #0x10 (16)
0xffff8bdd2be0   416  str x17, [jssp, #-8]!
0xffff8bdd2be4   420  add fp, jssp, #0x10 (16)
0xffff8bdd2be8   424  sub csp, jssp, #0x10 (16)
0xffff8bdd2bec   428  stp x0, x1, [jssp, #-16]!
0xffff8bdd2bf0   432  movz x0, #0x2
0xffff8bdd2bf4   436  ldr x1, pc+156 (addr 0x0000ffff8bdd2c90)    ;; external reference (Runtime::StrictEqual)
0xffff8bdd2bf8   440  ldr x16, pc+160 (addr 0x0000ffff8bdd2c98)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdd2bfc   444  blr x16
0xffff8bdd2c00   448  mov jssp, fp
0xffff8bdd2c04   452  ldp fp, lr, [jssp], #16
0xffff8bdd2c08   456  ldr x1, [x26, #64]
0xffff8bdd2c0c   460  sub x0, x0, x1
0xffff8bdd2c10   464  ret
0xffff8bdd2c14   468  movz x16, #0xc00000000
0xffff8bdd2c18   472  sub csp, jssp, #0x10 (16)
0xffff8bdd2c1c   476  stp fp, lr, [jssp, #-16]!
0xffff8bdd2c20   480  sub csp, jssp, #0x10 (16)
0xffff8bdd2c24   484  str x16, [jssp, #-8]!
0xffff8bdd2c28   488  ldr x17, pc+120 (addr 0x0000ffff8bdd2ca0)    ;; object: 0xffff8bdd29e1 <Code: COMPARE_IC>
0xffff8bdd2c2c   492  sub csp, jssp, #0x10 (16)
0xffff8bdd2c30   496  str x17, [jssp, #-8]!
0xffff8bdd2c34   500  add fp, jssp, #0x10 (16)
0xffff8bdd2c38   504  sub csp, jssp, #0x18 (24)
0xffff8bdd2c3c   508  stp lr, x0, [jssp, #-24]!
0xffff8bdd2c40   512  str x1, [jssp, #16]
0xffff8bdd2c44   516  movz x10, #0x2f00000000
0xffff8bdd2c48   520  sub csp, jssp, #0x18 (24)
0xffff8bdd2c4c   524  stp x10, x0, [jssp, #-24]!
0xffff8bdd2c50   528  str x1, [jssp, #16]
0xffff8bdd2c54   532  movz x0, #0x3
0xffff8bdd2c58   536  ldr x1, pc+80 (addr 0x0000ffff8bdd2ca8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bdd2c5c   540  ldr x16, pc+84 (addr 0x0000ffff8bdd2cb0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdd2c60   544  blr x16
0xffff8bdd2c64   548  add x11, x0, #0x5f (95)
0xffff8bdd2c68   552  ldr x1, [jssp, #16]
0xffff8bdd2c6c   556  ldp lr, x0, [jssp], #24
0xffff8bdd2c70   560  mov jssp, fp
0xffff8bdd2c74   564  ldp fp, lr, [jssp], #16
0xffff8bdd2c78   568  br x11
0xffff8bdd2c7c   572  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdd2c80   576  d63f03e0       constant
0xffff8bdd2c84   580  d503201f       constant
0xffff8bdd2c88   584  8bdd29e1       constant
0xffff8bdd2c8c   588  0000ffff       constant
0xffff8bdd2c90   592  00e50928       constant
0xffff8bdd2c94   596  00000000       constant
0xffff8bdd2c98   600  8bd06060       constant
0xffff8bdd2c9c   604  0000ffff       constant
0xffff8bdd2ca0   608  8bdd29e1       constant
0xffff8bdd2ca4   612  0000ffff       constant
0xffff8bdd2ca8   616  00c8a980       constant
0xffff8bdd2cac   620  00000000       constant
0xffff8bdd2cb0   624  8bd06060       constant
0xffff8bdd2cb4   628  0000ffff       constant


RelocInfo (size = 16)
0xffff8bdd2bd8  embedded object  (0xffff8bdd29e1 <Code: COMPARE_IC>)
0xffff8bdd2bf4  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff8bdd2bf8  code target (STUB)  (0xffff8bd06060)
0xffff8bdd2c28  embedded object  (0xffff8bdd29e1 <Code: COMPARE_IC>)
0xffff8bdd2c58  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bdd2c5c  code target (STUB)  (0xffff8bd06060)
0xffff8bdd2c7c  constant pool (size 60)


kind = HANDLER
major_key = <NoCache>Stub
name = get
compiler = unknown
Instructions (size = 120)
0xffff8bdd2fa0     0  sub csp, jssp, #0x8 (8)
0xffff8bdd2fa4     4  str x3, [jssp, #-8]!
0xffff8bdd2fa8     8  sub csp, jssp, #0x8 (8)
0xffff8bdd2fac    12  str x0, [jssp, #-8]!
0xffff8bdd2fb0    16  ldr x0, pc+72 (addr 0x0000ffff8bdd2ff8)    ;; object: 0x32735189 Cell for 0
0xffff8bdd2fb4    20  ldur x0, [x0, #7]
0xffff8bdd2fb8    24  cmp x0, #0x0 (0)
0xffff8bdd2fbc    28  b.ne #+0x14 (addr 0xffff8bdd2fd0)
0xffff8bdd2fc0    32  ldr x3, pc+64 (addr 0x0000ffff8bdd3000)    ;; object: 0x32735199 WeakCell for 0x569757c1 <an Object with map 0x5f511eb1>
0xffff8bdd2fc4    36  ldur x3, [x3, #7]
0xffff8bdd2fc8    40  tbz w3, #0, #+0x8 (addr 0xffff8bdd2fd0)
0xffff8bdd2fcc    44  b #+0x14 (addr 0xffff8bdd2fe0)
0xffff8bdd2fd0    48  ldr x0, [jssp], #8
0xffff8bdd2fd4    52  ldr x3, [jssp], #8
0xffff8bdd2fd8    56  ldr x16, pc+48 (addr 0x0000ffff8bdd3008)    ;; code: BUILTIN
0xffff8bdd2fdc    60  br x16
0xffff8bdd2fe0    64  add jssp, jssp, #0x10 (16)
0xffff8bdd2fe4    68  mov x1, x3
0xffff8bdd2fe8    72  ldr x16, pc+40 (addr 0x0000ffff8bdd3010)    ;; code: HANDLER, LoadConstantStub, minor: 3
0xffff8bdd2fec    76  br x16
0xffff8bdd2ff0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdd2ff4    84  d63f03e0       constant
0xffff8bdd2ff8    88  32735189       constant
0xffff8bdd2ffc    92  00000000       constant
0xffff8bdd3000    96  32735199       constant
0xffff8bdd3004   100  00000000       constant
0xffff8bdd3008   104  8bd222e0       constant
0xffff8bdd300c   108  0000ffff       constant
0xffff8bdd3010   112  8bd43400       constant
0xffff8bdd3014   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdd2fb0  embedded object  (0x32735189 Cell for 0)
0xffff8bdd2fc0  embedded object  (0x32735199 WeakCell for 0x569757c1 <an Object with map 0x5f511eb1>)
0xffff8bdd2fd8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdd2fe8  code target (HANDLER)  (0xffff8bd43400)
0xffff8bdd2ff0  constant pool (size 40)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = STRING*STRING -> STRING
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 416)
0xffff8bdd3080     0  and x16, x0, x1
0xffff8bdd3084     4  tbz w16, #0, #+0xfc (addr 0xffff8bdd3180)
0xffff8bdd3088     8  ldur x11, [x1, #-1]
0xffff8bdd308c    12  ldur x10, [x0, #-1]
0xffff8bdd3090    16  ldrb w11, [x11, #11]
0xffff8bdd3094    20  ldrb w10, [x10, #11]
0xffff8bdd3098    24  orr x12, x11, x10
0xffff8bdd309c    28  tbnz w12, #7, #+0xe4 (addr 0xffff8bdd3180)
0xffff8bdd30a0    32  cmp x1, x0
0xffff8bdd30a4    36  b.ne #+0xc (addr 0xffff8bdd30b0)
0xffff8bdd30a8    40  movz x0, #0x0
0xffff8bdd30ac    44  ret
0xffff8bdd30b0    48  orr x12, x11, x10
0xffff8bdd30b4    52  tbnz w12, #6, #+0x8 (addr 0xffff8bdd30bc)
0xffff8bdd30b8    56  ret
0xffff8bdd30bc    60  movz x16, #0x87
0xffff8bdd30c0    64  and x12, x11, x16
0xffff8bdd30c4    68  movz x16, #0x87
0xffff8bdd30c8    72  and x13, x10, x16
0xffff8bdd30cc    76  cmp x12, #0x4 (4)
0xffff8bdd30d0    80  ccmp x13, #4, #nzcv, eq
0xffff8bdd30d4    84  b.ne #+0x5c (addr 0xffff8bdd3130)
0xffff8bdd30d8    88  ldur x10, [x1, #15]
0xffff8bdd30dc    92  ldur x11, [x0, #15]
0xffff8bdd30e0    96  cmp x10, x11
0xffff8bdd30e4   100  b.eq #+0xc (addr 0xffff8bdd30f0)
0xffff8bdd30e8   104  movz x0, #0x100000000
0xffff8bdd30ec   108  ret
0xffff8bdd30f0   112  cbnz x10, #+0xc (addr 0xffff8bdd30fc)
0xffff8bdd30f4   116  movz x0, #0x0
0xffff8bdd30f8   120  ret
0xffff8bdd30fc   124  asr x10, x10, #32
0xffff8bdd3100   128  add x11, x10, #0x17 (23)
0xffff8bdd3104   132  add x1, x1, x11
0xffff8bdd3108   136  add x0, x0, x11
0xffff8bdd310c   140  neg x10, x10
0xffff8bdd3110   144  ldrb w11, [x1, x10]
0xffff8bdd3114   148  ldrb w12, [x0, x10]
0xffff8bdd3118   152  cmp x11, x12
0xffff8bdd311c   156  b.ne #-0x34 (addr 0xffff8bdd30e8)
0xffff8bdd3120   160  add x10, x10, #0x1 (1)
0xffff8bdd3124   164  cbnz x10, #-0x14 (addr 0xffff8bdd3110)
0xffff8bdd3128   168  movz x0, #0x0
0xffff8bdd312c   172  ret
0xffff8bdd3130   176  movz x16, #0xc00000000
0xffff8bdd3134   180  sub csp, jssp, #0x10 (16)
0xffff8bdd3138   184  stp fp, lr, [jssp, #-16]!
0xffff8bdd313c   188  sub csp, jssp, #0x10 (16)
0xffff8bdd3140   192  str x16, [jssp, #-8]!
0xffff8bdd3144   196  ldr x17, pc+172 (addr 0x0000ffff8bdd31f0)    ;; object: 0xffff8bdd3021 <Code: COMPARE_IC>
0xffff8bdd3148   200  sub csp, jssp, #0x10 (16)
0xffff8bdd314c   204  str x17, [jssp, #-8]!
0xffff8bdd3150   208  add fp, jssp, #0x10 (16)
0xffff8bdd3154   212  sub csp, jssp, #0x10 (16)
0xffff8bdd3158   216  stp x0, x1, [jssp, #-16]!
0xffff8bdd315c   220  movz x0, #0x2
0xffff8bdd3160   224  ldr x1, pc+152 (addr 0x0000ffff8bdd31f8)    ;; external reference (Runtime::StringEqual)
0xffff8bdd3164   228  ldr x16, pc+156 (addr 0x0000ffff8bdd3200)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdd3168   232  blr x16
0xffff8bdd316c   236  mov jssp, fp
0xffff8bdd3170   240  ldp fp, lr, [jssp], #16
0xffff8bdd3174   244  ldr x1, [x26, #64]
0xffff8bdd3178   248  sub x0, x0, x1
0xffff8bdd317c   252  ret
0xffff8bdd3180   256  movz x16, #0xc00000000
0xffff8bdd3184   260  sub csp, jssp, #0x10 (16)
0xffff8bdd3188   264  stp fp, lr, [jssp, #-16]!
0xffff8bdd318c   268  sub csp, jssp, #0x10 (16)
0xffff8bdd3190   272  str x16, [jssp, #-8]!
0xffff8bdd3194   276  ldr x17, pc+116 (addr 0x0000ffff8bdd3208)    ;; object: 0xffff8bdd3021 <Code: COMPARE_IC>
0xffff8bdd3198   280  sub csp, jssp, #0x10 (16)
0xffff8bdd319c   284  str x17, [jssp, #-8]!
0xffff8bdd31a0   288  add fp, jssp, #0x10 (16)
0xffff8bdd31a4   292  sub csp, jssp, #0x18 (24)
0xffff8bdd31a8   296  stp lr, x0, [jssp, #-24]!
0xffff8bdd31ac   300  str x1, [jssp, #16]
0xffff8bdd31b0   304  movz x10, #0x2f00000000
0xffff8bdd31b4   308  sub csp, jssp, #0x18 (24)
0xffff8bdd31b8   312  stp x10, x0, [jssp, #-24]!
0xffff8bdd31bc   316  str x1, [jssp, #16]
0xffff8bdd31c0   320  movz x0, #0x3
0xffff8bdd31c4   324  ldr x1, pc+76 (addr 0x0000ffff8bdd3210)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bdd31c8   328  ldr x16, pc+80 (addr 0x0000ffff8bdd3218)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdd31cc   332  blr x16
0xffff8bdd31d0   336  add x11, x0, #0x5f (95)
0xffff8bdd31d4   340  ldr x1, [jssp, #16]
0xffff8bdd31d8   344  ldp lr, x0, [jssp], #24
0xffff8bdd31dc   348  mov jssp, fp
0xffff8bdd31e0   352  ldp fp, lr, [jssp], #16
0xffff8bdd31e4   356  br x11
0xffff8bdd31e8   360  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdd31ec   364  d63f03e0       constant
0xffff8bdd31f0   368  8bdd3021       constant
0xffff8bdd31f4   372  0000ffff       constant
0xffff8bdd31f8   376  00ed0748       constant
0xffff8bdd31fc   380  00000000       constant
0xffff8bdd3200   384  8bd06060       constant
0xffff8bdd3204   388  0000ffff       constant
0xffff8bdd3208   392  8bdd3021       constant
0xffff8bdd320c   396  0000ffff       constant
0xffff8bdd3210   400  00c8a980       constant
0xffff8bdd3214   404  00000000       constant
0xffff8bdd3218   408  8bd06060       constant
0xffff8bdd321c   412  0000ffff       constant


RelocInfo (size = 16)
0xffff8bdd3144  embedded object  (0xffff8bdd3021 <Code: COMPARE_IC>)
0xffff8bdd3160  external reference (Runtime::StringEqual)  (0xed0748)
0xffff8bdd3164  code target (STUB)  (0xffff8bd06060)
0xffff8bdd3194  embedded object  (0xffff8bdd3021 <Code: COMPARE_IC>)
0xffff8bdd31c4  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bdd31c8  code target (STUB)  (0xffff8bd06060)
0xffff8bdd31e8  constant pool (size 56)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bdd34a0     0  ldur x0, [x1, #-1]
0xffff8bdd34a4     4  ldur x0, [x0, #47]
0xffff8bdd34a8     8  movz x16, #0x197
0xffff8bdd34ac    12  ldr x0, [x0, x16]
0xffff8bdd34b0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bdd34a0     0  ldur x0, [x1, #-1]
0xffff8bdd34a4     4  ldur x0, [x0, #47]
0xffff8bdd34a8     8  movz x16, #0x197
0xffff8bdd34ac    12  ldr x0, [x0, x16]
0xffff8bdd34b0    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bdd3520     0  ldur x0, [x1, #63]
0xffff8bdd3524     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bdd3520     0  ldur x0, [x1, #63]
0xffff8bdd3524     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*GENERIC -> GENERIC
compare_operation = LT
name = CompareICStub
compiler = unknown
Instructions (size = 512)
0xffff8bdd35a0     0  orr x16, x1, x0
0xffff8bdd35a4     4  tbnz w16, #0, #+0x10 (addr 0xffff8bdd35b4)
0xffff8bdd35a8     8  asr x1, x1, #32
0xffff8bdd35ac    12  sub x0, x1, x0, asr #32
0xffff8bdd35b0    16  ret
0xffff8bdd35b4    20  cmp x0, x1
0xffff8bdd35b8    24  b.ne #+0x2c (addr 0xffff8bdd35e4)
0xffff8bdd35bc    28  ldur x10, [x0, #-1]
0xffff8bdd35c0    32  ldrb w10, [x10, #11]
0xffff8bdd35c4    36  cmp x10, #0xb1 (177)
0xffff8bdd35c8    40  b.ge #+0x118 (addr 0xffff8bdd36e0)
0xffff8bdd35cc    44  cmp x10, #0x80 (128)
0xffff8bdd35d0    48  b.eq #+0x110 (addr 0xffff8bdd36e0)
0xffff8bdd35d4    52  cmp x10, #0x82 (130)
0xffff8bdd35d8    56  b.eq #+0x108 (addr 0xffff8bdd36e0)
0xffff8bdd35dc    60  movz x0, #0x1
0xffff8bdd35e0    64  ret
0xffff8bdd35e4    68  and x16, x1, x0
0xffff8bdd35e8    72  tbnz w16, #0, #+0x58 (addr 0xffff8bdd3640)
0xffff8bdd35ec    76  tbz w0, #0, #+0x20 (addr 0xffff8bdd360c)
0xffff8bdd35f0    80  ldur x16, [x0, #-1]
0xffff8bdd35f4    84  ldr x17, [x26, #120]
0xffff8bdd35f8    88  cmp x16, x17
0xffff8bdd35fc    92  b.ne #+0xe4 (addr 0xffff8bdd36e0)
0xffff8bdd3600    96  ldur d0, [x0, #7]
0xffff8bdd3604   100  scvtf d1, x1, #32
0xffff8bdd3608   104  b #+0x1c (addr 0xffff8bdd3624)
0xffff8bdd360c   108  ldur x16, [x1, #-1]
0xffff8bdd3610   112  ldr x17, [x26, #120]
0xffff8bdd3614   116  cmp x16, x17
0xffff8bdd3618   120  b.ne #+0xc8 (addr 0xffff8bdd36e0)
0xffff8bdd361c   124  ldur d1, [x1, #7]
0xffff8bdd3620   128  scvtf d0, x0, #32
0xffff8bdd3624   132  fcmp d1, d0
0xffff8bdd3628   136  b.vs #+0x10 (addr 0xffff8bdd3638)
0xffff8bdd362c   140  cset x0, gt
0xffff8bdd3630   144  csinv x0, x0, xzr, ge
0xffff8bdd3634   148  ret
0xffff8bdd3638   152  movz x0, #0x1
0xffff8bdd363c   156  ret
0xffff8bdd3640   160  ldur x10, [x0, #-1]
0xffff8bdd3644   164  ldur x12, [x1, #-1]
0xffff8bdd3648   168  ldrb w11, [x10, #11]
0xffff8bdd364c   172  ldrb w13, [x12, #11]
0xffff8bdd3650   176  cmp x11, #0x81 (129)
0xffff8bdd3654   180  b.ne #+0x18 (addr 0xffff8bdd366c)
0xffff8bdd3658   184  cmp x12, x10
0xffff8bdd365c   188  b.ne #+0x10 (addr 0xffff8bdd366c)
0xffff8bdd3660   192  ldur d1, [x1, #7]
0xffff8bdd3664   196  ldur d0, [x0, #7]
0xffff8bdd3668   200  b #-0x44 (addr 0xffff8bdd3624)
0xffff8bdd366c   204  movz x16, #0x87
0xffff8bdd3670   208  and x14, x13, x16
0xffff8bdd3674   212  movz x16, #0x87
0xffff8bdd3678   216  and x15, x11, x16
0xffff8bdd367c   220  cmp x14, #0x4 (4)
0xffff8bdd3680   224  ccmp x15, #4, #nzcv, eq
0xffff8bdd3684   228  b.ne #+0x5c (addr 0xffff8bdd36e0)
0xffff8bdd3688   232  ldur x10, [x1, #15]
0xffff8bdd368c   236  ldur x11, [x0, #15]
0xffff8bdd3690   240  subs x12, x10, x11
0xffff8bdd3694   244  csel x10, x11, x10, gt
0xffff8bdd3698   248  cbz x10, #+0x30 (addr 0xffff8bdd36c8)
0xffff8bdd369c   252  asr x10, x10, #32
0xffff8bdd36a0   256  add x11, x10, #0x17 (23)
0xffff8bdd36a4   260  add x1, x1, x11
0xffff8bdd36a8   264  add x0, x0, x11
0xffff8bdd36ac   268  neg x10, x10
0xffff8bdd36b0   272  ldrb w11, [x1, x10]
0xffff8bdd36b4   276  ldrb w13, [x0, x10]
0xffff8bdd36b8   280  cmp x11, x13
0xffff8bdd36bc   284  b.ne #+0x10 (addr 0xffff8bdd36cc)
0xffff8bdd36c0   288  add x10, x10, #0x1 (1)
0xffff8bdd36c4   292  cbnz x10, #-0x14 (addr 0xffff8bdd36b0)
0xffff8bdd36c8   296  subs x0, x12, #0x0 (0)
0xffff8bdd36cc   300  movz x10, #0x100000000
0xffff8bdd36d0   304  mov x11, #0xffffffff00000000
0xffff8bdd36d4   308  csel x0, x10, x0, gt
0xffff8bdd36d8   312  csel x0, x11, x0, lt
0xffff8bdd36dc   316  ret
0xffff8bdd36e0   320  sub csp, jssp, #0x10 (16)
0xffff8bdd36e4   324  stp x0, x1, [jssp, #-16]!
0xffff8bdd36e8   328  movz x10, #0x100000000
0xffff8bdd36ec   332  sub csp, jssp, #0x8 (8)
0xffff8bdd36f0   336  str x10, [jssp, #-8]!
0xffff8bdd36f4   340  movz x0, #0x3
0xffff8bdd36f8   344  ldr x1, pc+128 (addr 0x0000ffff8bdd3778)    ;; external reference (Runtime::Compare)
0xffff8bdd36fc   348  ldr x16, pc+132 (addr 0x0000ffff8bdd3780)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdd3700   352  br x16
0xffff8bdd3704   356  movz x16, #0xc00000000
0xffff8bdd3708   360  sub csp, jssp, #0x10 (16)
0xffff8bdd370c   364  stp fp, lr, [jssp, #-16]!
0xffff8bdd3710   368  sub csp, jssp, #0x10 (16)
0xffff8bdd3714   372  str x16, [jssp, #-8]!
0xffff8bdd3718   376  ldr x17, pc+112 (addr 0x0000ffff8bdd3788)    ;; object: 0xffff8bdd3541 <Code: COMPARE_IC>
0xffff8bdd371c   380  sub csp, jssp, #0x10 (16)
0xffff8bdd3720   384  str x17, [jssp, #-8]!
0xffff8bdd3724   388  add fp, jssp, #0x10 (16)
0xffff8bdd3728   392  sub csp, jssp, #0x18 (24)
0xffff8bdd372c   396  stp lr, x0, [jssp, #-24]!
0xffff8bdd3730   400  str x1, [jssp, #16]
0xffff8bdd3734   404  movz x10, #0x3100000000
0xffff8bdd3738   408  sub csp, jssp, #0x18 (24)
0xffff8bdd373c   412  stp x10, x0, [jssp, #-24]!
0xffff8bdd3740   416  str x1, [jssp, #16]
0xffff8bdd3744   420  movz x0, #0x3
0xffff8bdd3748   424  ldr x1, pc+72 (addr 0x0000ffff8bdd3790)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bdd374c   428  ldr x16, pc+76 (addr 0x0000ffff8bdd3798)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdd3750   432  blr x16
0xffff8bdd3754   436  add x11, x0, #0x5f (95)
0xffff8bdd3758   440  ldr x1, [jssp, #16]
0xffff8bdd375c   444  ldp lr, x0, [jssp], #24
0xffff8bdd3760   448  mov jssp, fp
0xffff8bdd3764   452  ldp fp, lr, [jssp], #16
0xffff8bdd3768   456  br x11
0xffff8bdd376c   460  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff8bdd3770   464  d63f03e0       constant
0xffff8bdd3774   468  d503201f       constant
0xffff8bdd3778   472  00e49ea8       constant
0xffff8bdd377c   476  00000000       constant
0xffff8bdd3780   480  8bd06060       constant
0xffff8bdd3784   484  0000ffff       constant
0xffff8bdd3788   488  8bdd3541       constant
0xffff8bdd378c   492  0000ffff       constant
0xffff8bdd3790   496  00c8a980       constant
0xffff8bdd3794   500  00000000       constant
0xffff8bdd3798   504  8bd06060       constant
0xffff8bdd379c   508  0000ffff       constant


RelocInfo (size = 15)
0xffff8bdd36f8  external reference (Runtime::Compare)  (0xe49ea8)
0xffff8bdd36fc  code target (STUB)  (0xffff8bd06060)
0xffff8bdd3718  embedded object  (0xffff8bdd3541 <Code: COMPARE_IC>)
0xffff8bdd3748  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bdd374c  code target (STUB)  (0xffff8bd06060)
0xffff8bdd376c  constant pool (size 52)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = NUMBER*SMI -> NUMBER
compare_operation = LT
name = CompareICStub
compiler = unknown
Instructions (size = 280)
0xffff8bdd3800     0  tbnz w0, #0, #+0x88 (addr 0xffff8bdd3888)
0xffff8bdd3804     4  scvtf d0, x0, #32
0xffff8bdd3808     8  scvtf d1, x1, #32
0xffff8bdd380c    12  tbz w0, #0, #+0x18 (addr 0xffff8bdd3824)
0xffff8bdd3810    16  ldur x16, [x0, #-1]
0xffff8bdd3814    20  ldr x17, [x26, #120]
0xffff8bdd3818    24  cmp x16, x17
0xffff8bdd381c    28  b.ne #+0x3c (addr 0xffff8bdd3858)
0xffff8bdd3820    32  ldur d0, [x0, #7]
0xffff8bdd3824    36  tbz w1, #0, #+0x18 (addr 0xffff8bdd383c)
0xffff8bdd3828    40  ldur x16, [x1, #-1]
0xffff8bdd382c    44  ldr x17, [x26, #120]
0xffff8bdd3830    48  cmp x16, x17
0xffff8bdd3834    52  b.ne #+0x48 (addr 0xffff8bdd387c)
0xffff8bdd3838    56  ldur d1, [x1, #7]
0xffff8bdd383c    60  fcmp d1, d0
0xffff8bdd3840    64  b.vs #+0x10 (addr 0xffff8bdd3850)
0xffff8bdd3844    68  cset x0, gt
0xffff8bdd3848    72  csinv x0, x0, xzr, ge
0xffff8bdd384c    76  ret
0xffff8bdd3850    80  ldr x16, pc+168 (addr 0x0000ffff8bdd38f8)    ;; code: COMPARE_IC, GENERIC
0xffff8bdd3854    84  br x16
0xffff8bdd3858    88  ldr x16, [x26, #40]
0xffff8bdd385c    92  cmp x0, x16
0xffff8bdd3860    96  b.ne #+0x28 (addr 0xffff8bdd3888)
0xffff8bdd3864   100  tbz w1, #0, #-0x14 (addr 0xffff8bdd3850)
0xffff8bdd3868   104  ldur x16, [x1, #-1]
0xffff8bdd386c   108  ldr x17, [x26, #120]
0xffff8bdd3870   112  cmp x16, x17
0xffff8bdd3874   116  b.ne #+0x8 (addr 0xffff8bdd387c)
0xffff8bdd3878   120  b #-0x28 (addr 0xffff8bdd3850)
0xffff8bdd387c   124  ldr x16, [x26, #40]
0xffff8bdd3880   128  cmp x1, x16
0xffff8bdd3884   132  b.eq #-0x34 (addr 0xffff8bdd3850)
0xffff8bdd3888   136  movz x16, #0xc00000000
0xffff8bdd388c   140  sub csp, jssp, #0x10 (16)
0xffff8bdd3890   144  stp fp, lr, [jssp, #-16]!
0xffff8bdd3894   148  sub csp, jssp, #0x10 (16)
0xffff8bdd3898   152  str x16, [jssp, #-8]!
0xffff8bdd389c   156  ldr x17, pc+100 (addr 0x0000ffff8bdd3900)    ;; object: 0xffff8bdd37a1 <Code: COMPARE_IC>
0xffff8bdd38a0   160  sub csp, jssp, #0x10 (16)
0xffff8bdd38a4   164  str x17, [jssp, #-8]!
0xffff8bdd38a8   168  add fp, jssp, #0x10 (16)
0xffff8bdd38ac   172  sub csp, jssp, #0x18 (24)
0xffff8bdd38b0   176  stp lr, x0, [jssp, #-24]!
0xffff8bdd38b4   180  str x1, [jssp, #16]
0xffff8bdd38b8   184  movz x10, #0x3100000000
0xffff8bdd38bc   188  sub csp, jssp, #0x18 (24)
0xffff8bdd38c0   192  stp x10, x0, [jssp, #-24]!
0xffff8bdd38c4   196  str x1, [jssp, #16]
0xffff8bdd38c8   200  movz x0, #0x3
0xffff8bdd38cc   204  ldr x1, pc+60 (addr 0x0000ffff8bdd3908)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bdd38d0   208  ldr x16, pc+64 (addr 0x0000ffff8bdd3910)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdd38d4   212  blr x16
0xffff8bdd38d8   216  add x11, x0, #0x5f (95)
0xffff8bdd38dc   220  ldr x1, [jssp, #16]
0xffff8bdd38e0   224  ldp lr, x0, [jssp], #24
0xffff8bdd38e4   228  mov jssp, fp
0xffff8bdd38e8   232  ldp fp, lr, [jssp], #16
0xffff8bdd38ec   236  br x11
0xffff8bdd38f0   240  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdd38f4   244  d63f03e0       constant
0xffff8bdd38f8   248  8bdd35a0       constant
0xffff8bdd38fc   252  0000ffff       constant
0xffff8bdd3900   256  8bdd37a1       constant
0xffff8bdd3904   260  0000ffff       constant
0xffff8bdd3908   264  00c8a980       constant
0xffff8bdd390c   268  00000000       constant
0xffff8bdd3910   272  8bd06060       constant
0xffff8bdd3914   276  0000ffff       constant


RelocInfo (size = 15)
0xffff8bdd3850  code target (COMPARE_IC)  (0xffff8bdd35a0)
0xffff8bdd389c  embedded object  (0xffff8bdd37a1 <Code: COMPARE_IC>)
0xffff8bdd38cc  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bdd38d0  code target (STUB)  (0xffff8bd06060)
0xffff8bdd38f0  constant pool (size 40)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd3980     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd399c)
0xffff8bdd3984     4  ldur x16, [x0, #-1]
0xffff8bdd3988     8  ldr x17, [x26, #120]
0xffff8bdd398c    12  cmp x16, x17
0xffff8bdd3990    16  b.ne #+0x60 (addr 0xffff8bdd39f0)
0xffff8bdd3994    20  ldur d0, [x0, #7]
0xffff8bdd3998    24  b #+0x8 (addr 0xffff8bdd39a0)
0xffff8bdd399c    28  scvtf d0, x0, #32
0xffff8bdd39a0    32  stur d0, [x1, #23]
0xffff8bdd39a4    36  stur x5, [x1, #-1]
0xffff8bdd39a8    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd39dc)
0xffff8bdd39ac    44  sub x2, x1, #0x1 (1)
0xffff8bdd39b0    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd39b4    52  ldr x5, [x5, #8]
0xffff8bdd39b8    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd39dc)
0xffff8bdd39bc    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd39c0    64  ldr x5, [x5, #8]
0xffff8bdd39c4    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd39dc)
0xffff8bdd39c8    72  sub csp, jssp, #0x8 (8)
0xffff8bdd39cc    76  str lr, [jssp, #-8]!
0xffff8bdd39d0    80  ldr x16, pc+24 (addr 0x0000ffff8bdd39e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd39d4    84  blr x16
0xffff8bdd39d8    88  ldr lr, [jssp], #8
0xffff8bdd39dc    92  ret
0xffff8bdd39e0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd39e4   100  d63f03e0       constant
0xffff8bdd39e8   104  8bd38080       constant
0xffff8bdd39ec   108  0000ffff       constant
0xffff8bdd39f0   112  movz x16, #0x0
0xffff8bdd39f4   116  sub csp, jssp, #0x10 (16)
0xffff8bdd39f8   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd39fc   124  bl #+0x4 (addr 0xffff8bdd3a00)
0xffff8bdd3a00   128  movz x17, #0xa00000000
0xffff8bdd3a04   132  sub csp, jssp, #0x10 (16)
0xffff8bdd3a08   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd3a0c   140  add fp, jssp, #0x10 (16)
0xffff8bdd3a10   144  ldr x17, pc+24 (addr 0x0000ffff8bdd3a28)    ;; lazy deoptimization bailout 0
0xffff8bdd3a14   148  add x17, x17, x16
0xffff8bdd3a18   152  br x17
0xffff8bdd3a1c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd3a20   160  d63f03e0       constant
0xffff8bdd3a24   164  d503201f       constant
0xffff8bdd3a28   168  8bb06000       constant
0xffff8bdd3a2c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd39d0  code target (STUB)  (0xffff8bd38080)
0xffff8bdd39e0  constant pool (size 16)
0xffff8bdd3a10  runtime entry
0xffff8bdd3a1c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd3980     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd399c)
0xffff8bdd3984     4  ldur x16, [x0, #-1]
0xffff8bdd3988     8  ldr x17, [x26, #120]
0xffff8bdd398c    12  cmp x16, x17
0xffff8bdd3990    16  b.ne #+0x60 (addr 0xffff8bdd39f0)
0xffff8bdd3994    20  ldur d0, [x0, #7]
0xffff8bdd3998    24  b #+0x8 (addr 0xffff8bdd39a0)
0xffff8bdd399c    28  scvtf d0, x0, #32
0xffff8bdd39a0    32  stur d0, [x1, #23]
0xffff8bdd39a4    36  stur x5, [x1, #-1]
0xffff8bdd39a8    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd39dc)
0xffff8bdd39ac    44  sub x2, x1, #0x1 (1)
0xffff8bdd39b0    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd39b4    52  ldr x5, [x5, #8]
0xffff8bdd39b8    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd39dc)
0xffff8bdd39bc    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd39c0    64  ldr x5, [x5, #8]
0xffff8bdd39c4    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd39dc)
0xffff8bdd39c8    72  sub csp, jssp, #0x8 (8)
0xffff8bdd39cc    76  str lr, [jssp, #-8]!
0xffff8bdd39d0    80  ldr x16, pc+24 (addr 0x0000ffff8bdd39e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd39d4    84  blr x16
0xffff8bdd39d8    88  ldr lr, [jssp], #8
0xffff8bdd39dc    92  ret
0xffff8bdd39e0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd39e4   100  d63f03e0       constant
0xffff8bdd39e8   104  8bd38080       constant
0xffff8bdd39ec   108  0000ffff       constant
0xffff8bdd39f0   112  movz x16, #0x0
0xffff8bdd39f4   116  sub csp, jssp, #0x10 (16)
0xffff8bdd39f8   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd39fc   124  bl #+0x4 (addr 0xffff8bdd3a00)
0xffff8bdd3a00   128  movz x17, #0xa00000000
0xffff8bdd3a04   132  sub csp, jssp, #0x10 (16)
0xffff8bdd3a08   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd3a0c   140  add fp, jssp, #0x10 (16)
0xffff8bdd3a10   144  ldr x17, pc+24 (addr 0x0000ffff8bdd3a28)    ;; lazy deoptimization bailout 0
0xffff8bdd3a14   148  add x17, x17, x16
0xffff8bdd3a18   152  br x17
0xffff8bdd3a1c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd3a20   160  d63f03e0       constant
0xffff8bdd3a24   164  d503201f       constant
0xffff8bdd3a28   168  8bb06000       constant
0xffff8bdd3a2c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd39d0  code target (STUB)  (0xffff8bd38080)
0xffff8bdd39e0  constant pool (size 16)
0xffff8bdd3a10  runtime entry
0xffff8bdd3a1c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = dev
compiler = unknown
Instructions (size = 152)
0xffff8bdd3aa0     0  sub csp, jssp, #0x8 (8)
0xffff8bdd3aa4     4  str x3, [jssp, #-8]!
0xffff8bdd3aa8     8  sub csp, jssp, #0x8 (8)
0xffff8bdd3aac    12  str x4, [jssp, #-8]!
0xffff8bdd3ab0    16  ldr x3, pc+88 (addr 0x0000ffff8bdd3b08)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd3ab4    20  ldur x3, [x3, #7]
0xffff8bdd3ab8    24  cmp x3, #0x0 (0)
0xffff8bdd3abc    28  b.ne #+0x2c (addr 0xffff8bdd3ae8)
0xffff8bdd3ac0    32  ldr x5, pc+80 (addr 0x0000ffff8bdd3b10)    ;; object: 0x32735379 WeakCell for 0x5f535c11 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd3ac4    36  ldur x5, [x5, #7]
0xffff8bdd3ac8    40  tbz w5, #0, #+0x20 (addr 0xffff8bdd3ae8)
0xffff8bdd3acc    44  ldursw x4, [x5, #15]
0xffff8bdd3ad0    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdd3ae8)
0xffff8bdd3ad4    52  ldr x4, [jssp], #8
0xffff8bdd3ad8    56  ldr x3, [jssp], #8
0xffff8bdd3adc    60  ldr x2, pc+60 (addr 0x0000ffff8bdd3b18)    ;; object: 0x3270d0c9 <String[3]: dev>
0xffff8bdd3ae0    64  ldr x16, pc+64 (addr 0x0000ffff8bdd3b20)    ;; code: HANDLER, StoreTransitionStub, minor: 194563
0xffff8bdd3ae4    68  br x16
0xffff8bdd3ae8    72  ldr x2, pc+64 (addr 0x0000ffff8bdd3b28)    ;; object: 0x3270d0c9 <String[3]: dev>
0xffff8bdd3aec    76  ldr x4, [jssp], #8
0xffff8bdd3af0    80  ldr x3, [jssp], #8
0xffff8bdd3af4    84  ldr x16, pc+60 (addr 0x0000ffff8bdd3b30)    ;; code: BUILTIN
0xffff8bdd3af8    88  br x16
0xffff8bdd3afc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdd3b00    96  d63f03e0       constant
0xffff8bdd3b04   100  d503201f       constant
0xffff8bdd3b08   104  327353d1       constant
0xffff8bdd3b0c   108  00000000       constant
0xffff8bdd3b10   112  32735379       constant
0xffff8bdd3b14   116  00000000       constant
0xffff8bdd3b18   120  3270d0c9       constant
0xffff8bdd3b1c   124  00000000       constant
0xffff8bdd3b20   128  8bdd3980       constant
0xffff8bdd3b24   132  0000ffff       constant
0xffff8bdd3b28   136  3270d0c9       constant
0xffff8bdd3b2c   140  00000000       constant
0xffff8bdd3b30   144  8bd22420       constant
0xffff8bdd3b34   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdd3ab0  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd3ac0  embedded object  (0x32735379 WeakCell for 0x5f535c11 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd3adc  embedded object  (0x3270d0c9 <String[3]: dev>)
0xffff8bdd3ae0  code target (HANDLER)  (0xffff8bdd3980)
0xffff8bdd3ae8  embedded object  (0x3270d0c9 <String[3]: dev>)
0xffff8bdd3af4  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdd3afc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd3ba0     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd3bbc)
0xffff8bdd3ba4     4  ldur x16, [x0, #-1]
0xffff8bdd3ba8     8  ldr x17, [x26, #120]
0xffff8bdd3bac    12  cmp x16, x17
0xffff8bdd3bb0    16  b.ne #+0x60 (addr 0xffff8bdd3c10)
0xffff8bdd3bb4    20  ldur d0, [x0, #7]
0xffff8bdd3bb8    24  b #+0x8 (addr 0xffff8bdd3bc0)
0xffff8bdd3bbc    28  scvtf d0, x0, #32
0xffff8bdd3bc0    32  stur d0, [x1, #31]
0xffff8bdd3bc4    36  stur x5, [x1, #-1]
0xffff8bdd3bc8    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd3bfc)
0xffff8bdd3bcc    44  sub x2, x1, #0x1 (1)
0xffff8bdd3bd0    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd3bd4    52  ldr x5, [x5, #8]
0xffff8bdd3bd8    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd3bfc)
0xffff8bdd3bdc    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd3be0    64  ldr x5, [x5, #8]
0xffff8bdd3be4    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd3bfc)
0xffff8bdd3be8    72  sub csp, jssp, #0x8 (8)
0xffff8bdd3bec    76  str lr, [jssp, #-8]!
0xffff8bdd3bf0    80  ldr x16, pc+24 (addr 0x0000ffff8bdd3c08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd3bf4    84  blr x16
0xffff8bdd3bf8    88  ldr lr, [jssp], #8
0xffff8bdd3bfc    92  ret
0xffff8bdd3c00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd3c04   100  d63f03e0       constant
0xffff8bdd3c08   104  8bd38080       constant
0xffff8bdd3c0c   108  0000ffff       constant
0xffff8bdd3c10   112  movz x16, #0x0
0xffff8bdd3c14   116  sub csp, jssp, #0x10 (16)
0xffff8bdd3c18   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd3c1c   124  bl #+0x4 (addr 0xffff8bdd3c20)
0xffff8bdd3c20   128  movz x17, #0xa00000000
0xffff8bdd3c24   132  sub csp, jssp, #0x10 (16)
0xffff8bdd3c28   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd3c2c   140  add fp, jssp, #0x10 (16)
0xffff8bdd3c30   144  ldr x17, pc+24 (addr 0x0000ffff8bdd3c48)    ;; lazy deoptimization bailout 0
0xffff8bdd3c34   148  add x17, x17, x16
0xffff8bdd3c38   152  br x17
0xffff8bdd3c3c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd3c40   160  d63f03e0       constant
0xffff8bdd3c44   164  d503201f       constant
0xffff8bdd3c48   168  8bb06000       constant
0xffff8bdd3c4c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd3bf0  code target (STUB)  (0xffff8bd38080)
0xffff8bdd3c00  constant pool (size 16)
0xffff8bdd3c30  runtime entry
0xffff8bdd3c3c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd3ba0     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd3bbc)
0xffff8bdd3ba4     4  ldur x16, [x0, #-1]
0xffff8bdd3ba8     8  ldr x17, [x26, #120]
0xffff8bdd3bac    12  cmp x16, x17
0xffff8bdd3bb0    16  b.ne #+0x60 (addr 0xffff8bdd3c10)
0xffff8bdd3bb4    20  ldur d0, [x0, #7]
0xffff8bdd3bb8    24  b #+0x8 (addr 0xffff8bdd3bc0)
0xffff8bdd3bbc    28  scvtf d0, x0, #32
0xffff8bdd3bc0    32  stur d0, [x1, #31]
0xffff8bdd3bc4    36  stur x5, [x1, #-1]
0xffff8bdd3bc8    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd3bfc)
0xffff8bdd3bcc    44  sub x2, x1, #0x1 (1)
0xffff8bdd3bd0    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd3bd4    52  ldr x5, [x5, #8]
0xffff8bdd3bd8    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd3bfc)
0xffff8bdd3bdc    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd3be0    64  ldr x5, [x5, #8]
0xffff8bdd3be4    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd3bfc)
0xffff8bdd3be8    72  sub csp, jssp, #0x8 (8)
0xffff8bdd3bec    76  str lr, [jssp, #-8]!
0xffff8bdd3bf0    80  ldr x16, pc+24 (addr 0x0000ffff8bdd3c08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd3bf4    84  blr x16
0xffff8bdd3bf8    88  ldr lr, [jssp], #8
0xffff8bdd3bfc    92  ret
0xffff8bdd3c00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd3c04   100  d63f03e0       constant
0xffff8bdd3c08   104  8bd38080       constant
0xffff8bdd3c0c   108  0000ffff       constant
0xffff8bdd3c10   112  movz x16, #0x0
0xffff8bdd3c14   116  sub csp, jssp, #0x10 (16)
0xffff8bdd3c18   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd3c1c   124  bl #+0x4 (addr 0xffff8bdd3c20)
0xffff8bdd3c20   128  movz x17, #0xa00000000
0xffff8bdd3c24   132  sub csp, jssp, #0x10 (16)
0xffff8bdd3c28   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd3c2c   140  add fp, jssp, #0x10 (16)
0xffff8bdd3c30   144  ldr x17, pc+24 (addr 0x0000ffff8bdd3c48)    ;; lazy deoptimization bailout 0
0xffff8bdd3c34   148  add x17, x17, x16
0xffff8bdd3c38   152  br x17
0xffff8bdd3c3c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd3c40   160  d63f03e0       constant
0xffff8bdd3c44   164  d503201f       constant
0xffff8bdd3c48   168  8bb06000       constant
0xffff8bdd3c4c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd3bf0  code target (STUB)  (0xffff8bd38080)
0xffff8bdd3c00  constant pool (size 16)
0xffff8bdd3c30  runtime entry
0xffff8bdd3c3c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = mode
compiler = unknown
Instructions (size = 152)
0xffff8bdd3cc0     0  sub csp, jssp, #0x8 (8)
0xffff8bdd3cc4     4  str x3, [jssp, #-8]!
0xffff8bdd3cc8     8  sub csp, jssp, #0x8 (8)
0xffff8bdd3ccc    12  str x4, [jssp, #-8]!
0xffff8bdd3cd0    16  ldr x3, pc+88 (addr 0x0000ffff8bdd3d28)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd3cd4    20  ldur x3, [x3, #7]
0xffff8bdd3cd8    24  cmp x3, #0x0 (0)
0xffff8bdd3cdc    28  b.ne #+0x2c (addr 0xffff8bdd3d08)
0xffff8bdd3ce0    32  ldr x5, pc+80 (addr 0x0000ffff8bdd3d30)    ;; object: 0x327354d9 WeakCell for 0x5f535c69 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd3ce4    36  ldur x5, [x5, #7]
0xffff8bdd3ce8    40  tbz w5, #0, #+0x20 (addr 0xffff8bdd3d08)
0xffff8bdd3cec    44  ldursw x4, [x5, #15]
0xffff8bdd3cf0    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdd3d08)
0xffff8bdd3cf4    52  ldr x4, [jssp], #8
0xffff8bdd3cf8    56  ldr x3, [jssp], #8
0xffff8bdd3cfc    60  ldr x2, pc+60 (addr 0x0000ffff8bdd3d38)    ;; object: 0x3270d0e9 <String[4]: mode>
0xffff8bdd3d00    64  ldr x16, pc+64 (addr 0x0000ffff8bdd3d40)    ;; code: HANDLER, StoreTransitionStub, minor: 194564
0xffff8bdd3d04    68  br x16
0xffff8bdd3d08    72  ldr x2, pc+64 (addr 0x0000ffff8bdd3d48)    ;; object: 0x3270d0e9 <String[4]: mode>
0xffff8bdd3d0c    76  ldr x4, [jssp], #8
0xffff8bdd3d10    80  ldr x3, [jssp], #8
0xffff8bdd3d14    84  ldr x16, pc+60 (addr 0x0000ffff8bdd3d50)    ;; code: BUILTIN
0xffff8bdd3d18    88  br x16
0xffff8bdd3d1c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdd3d20    96  d63f03e0       constant
0xffff8bdd3d24   100  d503201f       constant
0xffff8bdd3d28   104  327353d1       constant
0xffff8bdd3d2c   108  00000000       constant
0xffff8bdd3d30   112  327354d9       constant
0xffff8bdd3d34   116  00000000       constant
0xffff8bdd3d38   120  3270d0e9       constant
0xffff8bdd3d3c   124  00000000       constant
0xffff8bdd3d40   128  8bdd3ba0       constant
0xffff8bdd3d44   132  0000ffff       constant
0xffff8bdd3d48   136  3270d0e9       constant
0xffff8bdd3d4c   140  00000000       constant
0xffff8bdd3d50   144  8bd22420       constant
0xffff8bdd3d54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdd3cd0  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd3ce0  embedded object  (0x327354d9 WeakCell for 0x5f535c69 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd3cfc  embedded object  (0x3270d0e9 <String[4]: mode>)
0xffff8bdd3d00  code target (HANDLER)  (0xffff8bdd3ba0)
0xffff8bdd3d08  embedded object  (0x3270d0e9 <String[4]: mode>)
0xffff8bdd3d14  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdd3d1c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd3dc0     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd3ddc)
0xffff8bdd3dc4     4  ldur x16, [x0, #-1]
0xffff8bdd3dc8     8  ldr x17, [x26, #120]
0xffff8bdd3dcc    12  cmp x16, x17
0xffff8bdd3dd0    16  b.ne #+0x60 (addr 0xffff8bdd3e30)
0xffff8bdd3dd4    20  ldur d0, [x0, #7]
0xffff8bdd3dd8    24  b #+0x8 (addr 0xffff8bdd3de0)
0xffff8bdd3ddc    28  scvtf d0, x0, #32
0xffff8bdd3de0    32  stur d0, [x1, #39]
0xffff8bdd3de4    36  stur x5, [x1, #-1]
0xffff8bdd3de8    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd3e1c)
0xffff8bdd3dec    44  sub x2, x1, #0x1 (1)
0xffff8bdd3df0    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd3df4    52  ldr x5, [x5, #8]
0xffff8bdd3df8    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd3e1c)
0xffff8bdd3dfc    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd3e00    64  ldr x5, [x5, #8]
0xffff8bdd3e04    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd3e1c)
0xffff8bdd3e08    72  sub csp, jssp, #0x8 (8)
0xffff8bdd3e0c    76  str lr, [jssp, #-8]!
0xffff8bdd3e10    80  ldr x16, pc+24 (addr 0x0000ffff8bdd3e28)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd3e14    84  blr x16
0xffff8bdd3e18    88  ldr lr, [jssp], #8
0xffff8bdd3e1c    92  ret
0xffff8bdd3e20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd3e24   100  d63f03e0       constant
0xffff8bdd3e28   104  8bd38080       constant
0xffff8bdd3e2c   108  0000ffff       constant
0xffff8bdd3e30   112  movz x16, #0x0
0xffff8bdd3e34   116  sub csp, jssp, #0x10 (16)
0xffff8bdd3e38   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd3e3c   124  bl #+0x4 (addr 0xffff8bdd3e40)
0xffff8bdd3e40   128  movz x17, #0xa00000000
0xffff8bdd3e44   132  sub csp, jssp, #0x10 (16)
0xffff8bdd3e48   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd3e4c   140  add fp, jssp, #0x10 (16)
0xffff8bdd3e50   144  ldr x17, pc+24 (addr 0x0000ffff8bdd3e68)    ;; lazy deoptimization bailout 0
0xffff8bdd3e54   148  add x17, x17, x16
0xffff8bdd3e58   152  br x17
0xffff8bdd3e5c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd3e60   160  d63f03e0       constant
0xffff8bdd3e64   164  d503201f       constant
0xffff8bdd3e68   168  8bb06000       constant
0xffff8bdd3e6c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd3e10  code target (STUB)  (0xffff8bd38080)
0xffff8bdd3e20  constant pool (size 16)
0xffff8bdd3e50  runtime entry
0xffff8bdd3e5c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd3dc0     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd3ddc)
0xffff8bdd3dc4     4  ldur x16, [x0, #-1]
0xffff8bdd3dc8     8  ldr x17, [x26, #120]
0xffff8bdd3dcc    12  cmp x16, x17
0xffff8bdd3dd0    16  b.ne #+0x60 (addr 0xffff8bdd3e30)
0xffff8bdd3dd4    20  ldur d0, [x0, #7]
0xffff8bdd3dd8    24  b #+0x8 (addr 0xffff8bdd3de0)
0xffff8bdd3ddc    28  scvtf d0, x0, #32
0xffff8bdd3de0    32  stur d0, [x1, #39]
0xffff8bdd3de4    36  stur x5, [x1, #-1]
0xffff8bdd3de8    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd3e1c)
0xffff8bdd3dec    44  sub x2, x1, #0x1 (1)
0xffff8bdd3df0    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd3df4    52  ldr x5, [x5, #8]
0xffff8bdd3df8    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd3e1c)
0xffff8bdd3dfc    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd3e00    64  ldr x5, [x5, #8]
0xffff8bdd3e04    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd3e1c)
0xffff8bdd3e08    72  sub csp, jssp, #0x8 (8)
0xffff8bdd3e0c    76  str lr, [jssp, #-8]!
0xffff8bdd3e10    80  ldr x16, pc+24 (addr 0x0000ffff8bdd3e28)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd3e14    84  blr x16
0xffff8bdd3e18    88  ldr lr, [jssp], #8
0xffff8bdd3e1c    92  ret
0xffff8bdd3e20    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd3e24   100  d63f03e0       constant
0xffff8bdd3e28   104  8bd38080       constant
0xffff8bdd3e2c   108  0000ffff       constant
0xffff8bdd3e30   112  movz x16, #0x0
0xffff8bdd3e34   116  sub csp, jssp, #0x10 (16)
0xffff8bdd3e38   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd3e3c   124  bl #+0x4 (addr 0xffff8bdd3e40)
0xffff8bdd3e40   128  movz x17, #0xa00000000
0xffff8bdd3e44   132  sub csp, jssp, #0x10 (16)
0xffff8bdd3e48   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd3e4c   140  add fp, jssp, #0x10 (16)
0xffff8bdd3e50   144  ldr x17, pc+24 (addr 0x0000ffff8bdd3e68)    ;; lazy deoptimization bailout 0
0xffff8bdd3e54   148  add x17, x17, x16
0xffff8bdd3e58   152  br x17
0xffff8bdd3e5c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd3e60   160  d63f03e0       constant
0xffff8bdd3e64   164  d503201f       constant
0xffff8bdd3e68   168  8bb06000       constant
0xffff8bdd3e6c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd3e10  code target (STUB)  (0xffff8bd38080)
0xffff8bdd3e20  constant pool (size 16)
0xffff8bdd3e50  runtime entry
0xffff8bdd3e5c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = nlink
compiler = unknown
Instructions (size = 152)
0xffff8bdd3ee0     0  sub csp, jssp, #0x8 (8)
0xffff8bdd3ee4     4  str x3, [jssp, #-8]!
0xffff8bdd3ee8     8  sub csp, jssp, #0x8 (8)
0xffff8bdd3eec    12  str x4, [jssp, #-8]!
0xffff8bdd3ef0    16  ldr x3, pc+88 (addr 0x0000ffff8bdd3f48)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd3ef4    20  ldur x3, [x3, #7]
0xffff8bdd3ef8    24  cmp x3, #0x0 (0)
0xffff8bdd3efc    28  b.ne #+0x2c (addr 0xffff8bdd3f28)
0xffff8bdd3f00    32  ldr x5, pc+80 (addr 0x0000ffff8bdd3f50)    ;; object: 0x327355d1 WeakCell for 0x5f535cc1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd3f04    36  ldur x5, [x5, #7]
0xffff8bdd3f08    40  tbz w5, #0, #+0x20 (addr 0xffff8bdd3f28)
0xffff8bdd3f0c    44  ldursw x4, [x5, #15]
0xffff8bdd3f10    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdd3f28)
0xffff8bdd3f14    52  ldr x4, [jssp], #8
0xffff8bdd3f18    56  ldr x3, [jssp], #8
0xffff8bdd3f1c    60  ldr x2, pc+60 (addr 0x0000ffff8bdd3f58)    ;; object: 0x3270d109 <String[5]: nlink>
0xffff8bdd3f20    64  ldr x16, pc+64 (addr 0x0000ffff8bdd3f60)    ;; code: HANDLER, StoreTransitionStub, minor: 194565
0xffff8bdd3f24    68  br x16
0xffff8bdd3f28    72  ldr x2, pc+64 (addr 0x0000ffff8bdd3f68)    ;; object: 0x3270d109 <String[5]: nlink>
0xffff8bdd3f2c    76  ldr x4, [jssp], #8
0xffff8bdd3f30    80  ldr x3, [jssp], #8
0xffff8bdd3f34    84  ldr x16, pc+60 (addr 0x0000ffff8bdd3f70)    ;; code: BUILTIN
0xffff8bdd3f38    88  br x16
0xffff8bdd3f3c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdd3f40    96  d63f03e0       constant
0xffff8bdd3f44   100  d503201f       constant
0xffff8bdd3f48   104  327353d1       constant
0xffff8bdd3f4c   108  00000000       constant
0xffff8bdd3f50   112  327355d1       constant
0xffff8bdd3f54   116  00000000       constant
0xffff8bdd3f58   120  3270d109       constant
0xffff8bdd3f5c   124  00000000       constant
0xffff8bdd3f60   128  8bdd3dc0       constant
0xffff8bdd3f64   132  0000ffff       constant
0xffff8bdd3f68   136  3270d109       constant
0xffff8bdd3f6c   140  00000000       constant
0xffff8bdd3f70   144  8bd22420       constant
0xffff8bdd3f74   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdd3ef0  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd3f00  embedded object  (0x327355d1 WeakCell for 0x5f535cc1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd3f1c  embedded object  (0x3270d109 <String[5]: nlink>)
0xffff8bdd3f20  code target (HANDLER)  (0xffff8bdd3dc0)
0xffff8bdd3f28  embedded object  (0x3270d109 <String[5]: nlink>)
0xffff8bdd3f34  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdd3f3c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd3fe0     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd3ffc)
0xffff8bdd3fe4     4  ldur x16, [x0, #-1]
0xffff8bdd3fe8     8  ldr x17, [x26, #120]
0xffff8bdd3fec    12  cmp x16, x17
0xffff8bdd3ff0    16  b.ne #+0x60 (addr 0xffff8bdd4050)
0xffff8bdd3ff4    20  ldur d0, [x0, #7]
0xffff8bdd3ff8    24  b #+0x8 (addr 0xffff8bdd4000)
0xffff8bdd3ffc    28  scvtf d0, x0, #32
0xffff8bdd4000    32  stur d0, [x1, #47]
0xffff8bdd4004    36  stur x5, [x1, #-1]
0xffff8bdd4008    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd403c)
0xffff8bdd400c    44  sub x2, x1, #0x1 (1)
0xffff8bdd4010    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd4014    52  ldr x5, [x5, #8]
0xffff8bdd4018    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd403c)
0xffff8bdd401c    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd4020    64  ldr x5, [x5, #8]
0xffff8bdd4024    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd403c)
0xffff8bdd4028    72  sub csp, jssp, #0x8 (8)
0xffff8bdd402c    76  str lr, [jssp, #-8]!
0xffff8bdd4030    80  ldr x16, pc+24 (addr 0x0000ffff8bdd4048)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd4034    84  blr x16
0xffff8bdd4038    88  ldr lr, [jssp], #8
0xffff8bdd403c    92  ret
0xffff8bdd4040    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd4044   100  d63f03e0       constant
0xffff8bdd4048   104  8bd38080       constant
0xffff8bdd404c   108  0000ffff       constant
0xffff8bdd4050   112  movz x16, #0x0
0xffff8bdd4054   116  sub csp, jssp, #0x10 (16)
0xffff8bdd4058   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd405c   124  bl #+0x4 (addr 0xffff8bdd4060)
0xffff8bdd4060   128  movz x17, #0xa00000000
0xffff8bdd4064   132  sub csp, jssp, #0x10 (16)
0xffff8bdd4068   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd406c   140  add fp, jssp, #0x10 (16)
0xffff8bdd4070   144  ldr x17, pc+24 (addr 0x0000ffff8bdd4088)    ;; lazy deoptimization bailout 0
0xffff8bdd4074   148  add x17, x17, x16
0xffff8bdd4078   152  br x17
0xffff8bdd407c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd4080   160  d63f03e0       constant
0xffff8bdd4084   164  d503201f       constant
0xffff8bdd4088   168  8bb06000       constant
0xffff8bdd408c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd4030  code target (STUB)  (0xffff8bd38080)
0xffff8bdd4040  constant pool (size 16)
0xffff8bdd4070  runtime entry
0xffff8bdd407c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd3fe0     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd3ffc)
0xffff8bdd3fe4     4  ldur x16, [x0, #-1]
0xffff8bdd3fe8     8  ldr x17, [x26, #120]
0xffff8bdd3fec    12  cmp x16, x17
0xffff8bdd3ff0    16  b.ne #+0x60 (addr 0xffff8bdd4050)
0xffff8bdd3ff4    20  ldur d0, [x0, #7]
0xffff8bdd3ff8    24  b #+0x8 (addr 0xffff8bdd4000)
0xffff8bdd3ffc    28  scvtf d0, x0, #32
0xffff8bdd4000    32  stur d0, [x1, #47]
0xffff8bdd4004    36  stur x5, [x1, #-1]
0xffff8bdd4008    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd403c)
0xffff8bdd400c    44  sub x2, x1, #0x1 (1)
0xffff8bdd4010    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd4014    52  ldr x5, [x5, #8]
0xffff8bdd4018    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd403c)
0xffff8bdd401c    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd4020    64  ldr x5, [x5, #8]
0xffff8bdd4024    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd403c)
0xffff8bdd4028    72  sub csp, jssp, #0x8 (8)
0xffff8bdd402c    76  str lr, [jssp, #-8]!
0xffff8bdd4030    80  ldr x16, pc+24 (addr 0x0000ffff8bdd4048)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd4034    84  blr x16
0xffff8bdd4038    88  ldr lr, [jssp], #8
0xffff8bdd403c    92  ret
0xffff8bdd4040    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd4044   100  d63f03e0       constant
0xffff8bdd4048   104  8bd38080       constant
0xffff8bdd404c   108  0000ffff       constant
0xffff8bdd4050   112  movz x16, #0x0
0xffff8bdd4054   116  sub csp, jssp, #0x10 (16)
0xffff8bdd4058   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd405c   124  bl #+0x4 (addr 0xffff8bdd4060)
0xffff8bdd4060   128  movz x17, #0xa00000000
0xffff8bdd4064   132  sub csp, jssp, #0x10 (16)
0xffff8bdd4068   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd406c   140  add fp, jssp, #0x10 (16)
0xffff8bdd4070   144  ldr x17, pc+24 (addr 0x0000ffff8bdd4088)    ;; lazy deoptimization bailout 0
0xffff8bdd4074   148  add x17, x17, x16
0xffff8bdd4078   152  br x17
0xffff8bdd407c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd4080   160  d63f03e0       constant
0xffff8bdd4084   164  d503201f       constant
0xffff8bdd4088   168  8bb06000       constant
0xffff8bdd408c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd4030  code target (STUB)  (0xffff8bd38080)
0xffff8bdd4040  constant pool (size 16)
0xffff8bdd4070  runtime entry
0xffff8bdd407c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = uid
compiler = unknown
Instructions (size = 152)
0xffff8bdd4100     0  sub csp, jssp, #0x8 (8)
0xffff8bdd4104     4  str x3, [jssp, #-8]!
0xffff8bdd4108     8  sub csp, jssp, #0x8 (8)
0xffff8bdd410c    12  str x4, [jssp, #-8]!
0xffff8bdd4110    16  ldr x3, pc+88 (addr 0x0000ffff8bdd4168)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd4114    20  ldur x3, [x3, #7]
0xffff8bdd4118    24  cmp x3, #0x0 (0)
0xffff8bdd411c    28  b.ne #+0x2c (addr 0xffff8bdd4148)
0xffff8bdd4120    32  ldr x5, pc+80 (addr 0x0000ffff8bdd4170)    ;; object: 0x327356c9 WeakCell for 0x5f535d19 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd4124    36  ldur x5, [x5, #7]
0xffff8bdd4128    40  tbz w5, #0, #+0x20 (addr 0xffff8bdd4148)
0xffff8bdd412c    44  ldursw x4, [x5, #15]
0xffff8bdd4130    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdd4148)
0xffff8bdd4134    52  ldr x4, [jssp], #8
0xffff8bdd4138    56  ldr x3, [jssp], #8
0xffff8bdd413c    60  ldr x2, pc+60 (addr 0x0000ffff8bdd4178)    ;; object: 0x26cb33a9 <String[3]: uid>
0xffff8bdd4140    64  ldr x16, pc+64 (addr 0x0000ffff8bdd4180)    ;; code: HANDLER, StoreTransitionStub, minor: 194566
0xffff8bdd4144    68  br x16
0xffff8bdd4148    72  ldr x2, pc+64 (addr 0x0000ffff8bdd4188)    ;; object: 0x26cb33a9 <String[3]: uid>
0xffff8bdd414c    76  ldr x4, [jssp], #8
0xffff8bdd4150    80  ldr x3, [jssp], #8
0xffff8bdd4154    84  ldr x16, pc+60 (addr 0x0000ffff8bdd4190)    ;; code: BUILTIN
0xffff8bdd4158    88  br x16
0xffff8bdd415c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdd4160    96  d63f03e0       constant
0xffff8bdd4164   100  d503201f       constant
0xffff8bdd4168   104  327353d1       constant
0xffff8bdd416c   108  00000000       constant
0xffff8bdd4170   112  327356c9       constant
0xffff8bdd4174   116  00000000       constant
0xffff8bdd4178   120  26cb33a9       constant
0xffff8bdd417c   124  00000000       constant
0xffff8bdd4180   128  8bdd3fe0       constant
0xffff8bdd4184   132  0000ffff       constant
0xffff8bdd4188   136  26cb33a9       constant
0xffff8bdd418c   140  00000000       constant
0xffff8bdd4190   144  8bd22420       constant
0xffff8bdd4194   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdd4110  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd4120  embedded object  (0x327356c9 WeakCell for 0x5f535d19 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd413c  embedded object  (0x26cb33a9 <String[3]: uid>)
0xffff8bdd4140  code target (HANDLER)  (0xffff8bdd3fe0)
0xffff8bdd4148  embedded object  (0x26cb33a9 <String[3]: uid>)
0xffff8bdd4154  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdd415c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd4200     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd421c)
0xffff8bdd4204     4  ldur x16, [x0, #-1]
0xffff8bdd4208     8  ldr x17, [x26, #120]
0xffff8bdd420c    12  cmp x16, x17
0xffff8bdd4210    16  b.ne #+0x60 (addr 0xffff8bdd4270)
0xffff8bdd4214    20  ldur d0, [x0, #7]
0xffff8bdd4218    24  b #+0x8 (addr 0xffff8bdd4220)
0xffff8bdd421c    28  scvtf d0, x0, #32
0xffff8bdd4220    32  stur d0, [x1, #55]
0xffff8bdd4224    36  stur x5, [x1, #-1]
0xffff8bdd4228    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd425c)
0xffff8bdd422c    44  sub x2, x1, #0x1 (1)
0xffff8bdd4230    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd4234    52  ldr x5, [x5, #8]
0xffff8bdd4238    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd425c)
0xffff8bdd423c    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd4240    64  ldr x5, [x5, #8]
0xffff8bdd4244    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd425c)
0xffff8bdd4248    72  sub csp, jssp, #0x8 (8)
0xffff8bdd424c    76  str lr, [jssp, #-8]!
0xffff8bdd4250    80  ldr x16, pc+24 (addr 0x0000ffff8bdd4268)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd4254    84  blr x16
0xffff8bdd4258    88  ldr lr, [jssp], #8
0xffff8bdd425c    92  ret
0xffff8bdd4260    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd4264   100  d63f03e0       constant
0xffff8bdd4268   104  8bd38080       constant
0xffff8bdd426c   108  0000ffff       constant
0xffff8bdd4270   112  movz x16, #0x0
0xffff8bdd4274   116  sub csp, jssp, #0x10 (16)
0xffff8bdd4278   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd427c   124  bl #+0x4 (addr 0xffff8bdd4280)
0xffff8bdd4280   128  movz x17, #0xa00000000
0xffff8bdd4284   132  sub csp, jssp, #0x10 (16)
0xffff8bdd4288   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd428c   140  add fp, jssp, #0x10 (16)
0xffff8bdd4290   144  ldr x17, pc+24 (addr 0x0000ffff8bdd42a8)    ;; lazy deoptimization bailout 0
0xffff8bdd4294   148  add x17, x17, x16
0xffff8bdd4298   152  br x17
0xffff8bdd429c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd42a0   160  d63f03e0       constant
0xffff8bdd42a4   164  d503201f       constant
0xffff8bdd42a8   168  8bb06000       constant
0xffff8bdd42ac   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd4250  code target (STUB)  (0xffff8bd38080)
0xffff8bdd4260  constant pool (size 16)
0xffff8bdd4290  runtime entry
0xffff8bdd429c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd4200     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd421c)
0xffff8bdd4204     4  ldur x16, [x0, #-1]
0xffff8bdd4208     8  ldr x17, [x26, #120]
0xffff8bdd420c    12  cmp x16, x17
0xffff8bdd4210    16  b.ne #+0x60 (addr 0xffff8bdd4270)
0xffff8bdd4214    20  ldur d0, [x0, #7]
0xffff8bdd4218    24  b #+0x8 (addr 0xffff8bdd4220)
0xffff8bdd421c    28  scvtf d0, x0, #32
0xffff8bdd4220    32  stur d0, [x1, #55]
0xffff8bdd4224    36  stur x5, [x1, #-1]
0xffff8bdd4228    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd425c)
0xffff8bdd422c    44  sub x2, x1, #0x1 (1)
0xffff8bdd4230    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd4234    52  ldr x5, [x5, #8]
0xffff8bdd4238    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd425c)
0xffff8bdd423c    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd4240    64  ldr x5, [x5, #8]
0xffff8bdd4244    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd425c)
0xffff8bdd4248    72  sub csp, jssp, #0x8 (8)
0xffff8bdd424c    76  str lr, [jssp, #-8]!
0xffff8bdd4250    80  ldr x16, pc+24 (addr 0x0000ffff8bdd4268)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd4254    84  blr x16
0xffff8bdd4258    88  ldr lr, [jssp], #8
0xffff8bdd425c    92  ret
0xffff8bdd4260    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd4264   100  d63f03e0       constant
0xffff8bdd4268   104  8bd38080       constant
0xffff8bdd426c   108  0000ffff       constant
0xffff8bdd4270   112  movz x16, #0x0
0xffff8bdd4274   116  sub csp, jssp, #0x10 (16)
0xffff8bdd4278   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd427c   124  bl #+0x4 (addr 0xffff8bdd4280)
0xffff8bdd4280   128  movz x17, #0xa00000000
0xffff8bdd4284   132  sub csp, jssp, #0x10 (16)
0xffff8bdd4288   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd428c   140  add fp, jssp, #0x10 (16)
0xffff8bdd4290   144  ldr x17, pc+24 (addr 0x0000ffff8bdd42a8)    ;; lazy deoptimization bailout 0
0xffff8bdd4294   148  add x17, x17, x16
0xffff8bdd4298   152  br x17
0xffff8bdd429c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd42a0   160  d63f03e0       constant
0xffff8bdd42a4   164  d503201f       constant
0xffff8bdd42a8   168  8bb06000       constant
0xffff8bdd42ac   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd4250  code target (STUB)  (0xffff8bd38080)
0xffff8bdd4260  constant pool (size 16)
0xffff8bdd4290  runtime entry
0xffff8bdd429c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = gid
compiler = unknown
Instructions (size = 152)
0xffff8bdd4320     0  sub csp, jssp, #0x8 (8)
0xffff8bdd4324     4  str x3, [jssp, #-8]!
0xffff8bdd4328     8  sub csp, jssp, #0x8 (8)
0xffff8bdd432c    12  str x4, [jssp, #-8]!
0xffff8bdd4330    16  ldr x3, pc+88 (addr 0x0000ffff8bdd4388)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd4334    20  ldur x3, [x3, #7]
0xffff8bdd4338    24  cmp x3, #0x0 (0)
0xffff8bdd433c    28  b.ne #+0x2c (addr 0xffff8bdd4368)
0xffff8bdd4340    32  ldr x5, pc+80 (addr 0x0000ffff8bdd4390)    ;; object: 0x327357c1 WeakCell for 0x5f535d71 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd4344    36  ldur x5, [x5, #7]
0xffff8bdd4348    40  tbz w5, #0, #+0x20 (addr 0xffff8bdd4368)
0xffff8bdd434c    44  ldursw x4, [x5, #15]
0xffff8bdd4350    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdd4368)
0xffff8bdd4354    52  ldr x4, [jssp], #8
0xffff8bdd4358    56  ldr x3, [jssp], #8
0xffff8bdd435c    60  ldr x2, pc+60 (addr 0x0000ffff8bdd4398)    ;; object: 0x26cb2771 <String[3]: gid>
0xffff8bdd4360    64  ldr x16, pc+64 (addr 0x0000ffff8bdd43a0)    ;; code: HANDLER, StoreTransitionStub, minor: 194567
0xffff8bdd4364    68  br x16
0xffff8bdd4368    72  ldr x2, pc+64 (addr 0x0000ffff8bdd43a8)    ;; object: 0x26cb2771 <String[3]: gid>
0xffff8bdd436c    76  ldr x4, [jssp], #8
0xffff8bdd4370    80  ldr x3, [jssp], #8
0xffff8bdd4374    84  ldr x16, pc+60 (addr 0x0000ffff8bdd43b0)    ;; code: BUILTIN
0xffff8bdd4378    88  br x16
0xffff8bdd437c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdd4380    96  d63f03e0       constant
0xffff8bdd4384   100  d503201f       constant
0xffff8bdd4388   104  327353d1       constant
0xffff8bdd438c   108  00000000       constant
0xffff8bdd4390   112  327357c1       constant
0xffff8bdd4394   116  00000000       constant
0xffff8bdd4398   120  26cb2771       constant
0xffff8bdd439c   124  00000000       constant
0xffff8bdd43a0   128  8bdd4200       constant
0xffff8bdd43a4   132  0000ffff       constant
0xffff8bdd43a8   136  26cb2771       constant
0xffff8bdd43ac   140  00000000       constant
0xffff8bdd43b0   144  8bd22420       constant
0xffff8bdd43b4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdd4330  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd4340  embedded object  (0x327357c1 WeakCell for 0x5f535d71 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd435c  embedded object  (0x26cb2771 <String[3]: gid>)
0xffff8bdd4360  code target (HANDLER)  (0xffff8bdd4200)
0xffff8bdd4368  embedded object  (0x26cb2771 <String[3]: gid>)
0xffff8bdd4374  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdd437c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd4420     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd443c)
0xffff8bdd4424     4  ldur x16, [x0, #-1]
0xffff8bdd4428     8  ldr x17, [x26, #120]
0xffff8bdd442c    12  cmp x16, x17
0xffff8bdd4430    16  b.ne #+0x60 (addr 0xffff8bdd4490)
0xffff8bdd4434    20  ldur d0, [x0, #7]
0xffff8bdd4438    24  b #+0x8 (addr 0xffff8bdd4440)
0xffff8bdd443c    28  scvtf d0, x0, #32
0xffff8bdd4440    32  stur d0, [x1, #63]
0xffff8bdd4444    36  stur x5, [x1, #-1]
0xffff8bdd4448    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd447c)
0xffff8bdd444c    44  sub x2, x1, #0x1 (1)
0xffff8bdd4450    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd4454    52  ldr x5, [x5, #8]
0xffff8bdd4458    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd447c)
0xffff8bdd445c    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd4460    64  ldr x5, [x5, #8]
0xffff8bdd4464    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd447c)
0xffff8bdd4468    72  sub csp, jssp, #0x8 (8)
0xffff8bdd446c    76  str lr, [jssp, #-8]!
0xffff8bdd4470    80  ldr x16, pc+24 (addr 0x0000ffff8bdd4488)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd4474    84  blr x16
0xffff8bdd4478    88  ldr lr, [jssp], #8
0xffff8bdd447c    92  ret
0xffff8bdd4480    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd4484   100  d63f03e0       constant
0xffff8bdd4488   104  8bd38080       constant
0xffff8bdd448c   108  0000ffff       constant
0xffff8bdd4490   112  movz x16, #0x0
0xffff8bdd4494   116  sub csp, jssp, #0x10 (16)
0xffff8bdd4498   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd449c   124  bl #+0x4 (addr 0xffff8bdd44a0)
0xffff8bdd44a0   128  movz x17, #0xa00000000
0xffff8bdd44a4   132  sub csp, jssp, #0x10 (16)
0xffff8bdd44a8   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd44ac   140  add fp, jssp, #0x10 (16)
0xffff8bdd44b0   144  ldr x17, pc+24 (addr 0x0000ffff8bdd44c8)    ;; lazy deoptimization bailout 0
0xffff8bdd44b4   148  add x17, x17, x16
0xffff8bdd44b8   152  br x17
0xffff8bdd44bc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd44c0   160  d63f03e0       constant
0xffff8bdd44c4   164  d503201f       constant
0xffff8bdd44c8   168  8bb06000       constant
0xffff8bdd44cc   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd4470  code target (STUB)  (0xffff8bd38080)
0xffff8bdd4480  constant pool (size 16)
0xffff8bdd44b0  runtime entry
0xffff8bdd44bc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd4420     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd443c)
0xffff8bdd4424     4  ldur x16, [x0, #-1]
0xffff8bdd4428     8  ldr x17, [x26, #120]
0xffff8bdd442c    12  cmp x16, x17
0xffff8bdd4430    16  b.ne #+0x60 (addr 0xffff8bdd4490)
0xffff8bdd4434    20  ldur d0, [x0, #7]
0xffff8bdd4438    24  b #+0x8 (addr 0xffff8bdd4440)
0xffff8bdd443c    28  scvtf d0, x0, #32
0xffff8bdd4440    32  stur d0, [x1, #63]
0xffff8bdd4444    36  stur x5, [x1, #-1]
0xffff8bdd4448    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd447c)
0xffff8bdd444c    44  sub x2, x1, #0x1 (1)
0xffff8bdd4450    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd4454    52  ldr x5, [x5, #8]
0xffff8bdd4458    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd447c)
0xffff8bdd445c    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd4460    64  ldr x5, [x5, #8]
0xffff8bdd4464    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd447c)
0xffff8bdd4468    72  sub csp, jssp, #0x8 (8)
0xffff8bdd446c    76  str lr, [jssp, #-8]!
0xffff8bdd4470    80  ldr x16, pc+24 (addr 0x0000ffff8bdd4488)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd4474    84  blr x16
0xffff8bdd4478    88  ldr lr, [jssp], #8
0xffff8bdd447c    92  ret
0xffff8bdd4480    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd4484   100  d63f03e0       constant
0xffff8bdd4488   104  8bd38080       constant
0xffff8bdd448c   108  0000ffff       constant
0xffff8bdd4490   112  movz x16, #0x0
0xffff8bdd4494   116  sub csp, jssp, #0x10 (16)
0xffff8bdd4498   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd449c   124  bl #+0x4 (addr 0xffff8bdd44a0)
0xffff8bdd44a0   128  movz x17, #0xa00000000
0xffff8bdd44a4   132  sub csp, jssp, #0x10 (16)
0xffff8bdd44a8   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd44ac   140  add fp, jssp, #0x10 (16)
0xffff8bdd44b0   144  ldr x17, pc+24 (addr 0x0000ffff8bdd44c8)    ;; lazy deoptimization bailout 0
0xffff8bdd44b4   148  add x17, x17, x16
0xffff8bdd44b8   152  br x17
0xffff8bdd44bc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd44c0   160  d63f03e0       constant
0xffff8bdd44c4   164  d503201f       constant
0xffff8bdd44c8   168  8bb06000       constant
0xffff8bdd44cc   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd4470  code target (STUB)  (0xffff8bd38080)
0xffff8bdd4480  constant pool (size 16)
0xffff8bdd44b0  runtime entry
0xffff8bdd44bc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = rdev
compiler = unknown
Instructions (size = 152)
0xffff8bdd4540     0  sub csp, jssp, #0x8 (8)
0xffff8bdd4544     4  str x3, [jssp, #-8]!
0xffff8bdd4548     8  sub csp, jssp, #0x8 (8)
0xffff8bdd454c    12  str x4, [jssp, #-8]!
0xffff8bdd4550    16  ldr x3, pc+88 (addr 0x0000ffff8bdd45a8)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd4554    20  ldur x3, [x3, #7]
0xffff8bdd4558    24  cmp x3, #0x0 (0)
0xffff8bdd455c    28  b.ne #+0x2c (addr 0xffff8bdd4588)
0xffff8bdd4560    32  ldr x5, pc+80 (addr 0x0000ffff8bdd45b0)    ;; object: 0x327358b9 WeakCell for 0x5f535dc9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd4564    36  ldur x5, [x5, #7]
0xffff8bdd4568    40  tbz w5, #0, #+0x20 (addr 0xffff8bdd4588)
0xffff8bdd456c    44  ldursw x4, [x5, #15]
0xffff8bdd4570    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdd4588)
0xffff8bdd4574    52  ldr x4, [jssp], #8
0xffff8bdd4578    56  ldr x3, [jssp], #8
0xffff8bdd457c    60  ldr x2, pc+60 (addr 0x0000ffff8bdd45b8)    ;; object: 0x3270d129 <String[4]: rdev>
0xffff8bdd4580    64  ldr x16, pc+64 (addr 0x0000ffff8bdd45c0)    ;; code: HANDLER, StoreTransitionStub, minor: 194568
0xffff8bdd4584    68  br x16
0xffff8bdd4588    72  ldr x2, pc+64 (addr 0x0000ffff8bdd45c8)    ;; object: 0x3270d129 <String[4]: rdev>
0xffff8bdd458c    76  ldr x4, [jssp], #8
0xffff8bdd4590    80  ldr x3, [jssp], #8
0xffff8bdd4594    84  ldr x16, pc+60 (addr 0x0000ffff8bdd45d0)    ;; code: BUILTIN
0xffff8bdd4598    88  br x16
0xffff8bdd459c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdd45a0    96  d63f03e0       constant
0xffff8bdd45a4   100  d503201f       constant
0xffff8bdd45a8   104  327353d1       constant
0xffff8bdd45ac   108  00000000       constant
0xffff8bdd45b0   112  327358b9       constant
0xffff8bdd45b4   116  00000000       constant
0xffff8bdd45b8   120  3270d129       constant
0xffff8bdd45bc   124  00000000       constant
0xffff8bdd45c0   128  8bdd4420       constant
0xffff8bdd45c4   132  0000ffff       constant
0xffff8bdd45c8   136  3270d129       constant
0xffff8bdd45cc   140  00000000       constant
0xffff8bdd45d0   144  8bd22420       constant
0xffff8bdd45d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdd4550  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd4560  embedded object  (0x327358b9 WeakCell for 0x5f535dc9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd457c  embedded object  (0x3270d129 <String[4]: rdev>)
0xffff8bdd4580  code target (HANDLER)  (0xffff8bdd4420)
0xffff8bdd4588  embedded object  (0x3270d129 <String[4]: rdev>)
0xffff8bdd4594  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdd459c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd4640     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd465c)
0xffff8bdd4644     4  ldur x16, [x0, #-1]
0xffff8bdd4648     8  ldr x17, [x26, #120]
0xffff8bdd464c    12  cmp x16, x17
0xffff8bdd4650    16  b.ne #+0x60 (addr 0xffff8bdd46b0)
0xffff8bdd4654    20  ldur d0, [x0, #7]
0xffff8bdd4658    24  b #+0x8 (addr 0xffff8bdd4660)
0xffff8bdd465c    28  scvtf d0, x0, #32
0xffff8bdd4660    32  stur d0, [x1, #71]
0xffff8bdd4664    36  stur x5, [x1, #-1]
0xffff8bdd4668    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd469c)
0xffff8bdd466c    44  sub x2, x1, #0x1 (1)
0xffff8bdd4670    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd4674    52  ldr x5, [x5, #8]
0xffff8bdd4678    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd469c)
0xffff8bdd467c    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd4680    64  ldr x5, [x5, #8]
0xffff8bdd4684    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd469c)
0xffff8bdd4688    72  sub csp, jssp, #0x8 (8)
0xffff8bdd468c    76  str lr, [jssp, #-8]!
0xffff8bdd4690    80  ldr x16, pc+24 (addr 0x0000ffff8bdd46a8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd4694    84  blr x16
0xffff8bdd4698    88  ldr lr, [jssp], #8
0xffff8bdd469c    92  ret
0xffff8bdd46a0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd46a4   100  d63f03e0       constant
0xffff8bdd46a8   104  8bd38080       constant
0xffff8bdd46ac   108  0000ffff       constant
0xffff8bdd46b0   112  movz x16, #0x0
0xffff8bdd46b4   116  sub csp, jssp, #0x10 (16)
0xffff8bdd46b8   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd46bc   124  bl #+0x4 (addr 0xffff8bdd46c0)
0xffff8bdd46c0   128  movz x17, #0xa00000000
0xffff8bdd46c4   132  sub csp, jssp, #0x10 (16)
0xffff8bdd46c8   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd46cc   140  add fp, jssp, #0x10 (16)
0xffff8bdd46d0   144  ldr x17, pc+24 (addr 0x0000ffff8bdd46e8)    ;; lazy deoptimization bailout 0
0xffff8bdd46d4   148  add x17, x17, x16
0xffff8bdd46d8   152  br x17
0xffff8bdd46dc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd46e0   160  d63f03e0       constant
0xffff8bdd46e4   164  d503201f       constant
0xffff8bdd46e8   168  8bb06000       constant
0xffff8bdd46ec   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd4690  code target (STUB)  (0xffff8bd38080)
0xffff8bdd46a0  constant pool (size 16)
0xffff8bdd46d0  runtime entry
0xffff8bdd46dc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd4640     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd465c)
0xffff8bdd4644     4  ldur x16, [x0, #-1]
0xffff8bdd4648     8  ldr x17, [x26, #120]
0xffff8bdd464c    12  cmp x16, x17
0xffff8bdd4650    16  b.ne #+0x60 (addr 0xffff8bdd46b0)
0xffff8bdd4654    20  ldur d0, [x0, #7]
0xffff8bdd4658    24  b #+0x8 (addr 0xffff8bdd4660)
0xffff8bdd465c    28  scvtf d0, x0, #32
0xffff8bdd4660    32  stur d0, [x1, #71]
0xffff8bdd4664    36  stur x5, [x1, #-1]
0xffff8bdd4668    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd469c)
0xffff8bdd466c    44  sub x2, x1, #0x1 (1)
0xffff8bdd4670    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd4674    52  ldr x5, [x5, #8]
0xffff8bdd4678    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd469c)
0xffff8bdd467c    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd4680    64  ldr x5, [x5, #8]
0xffff8bdd4684    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd469c)
0xffff8bdd4688    72  sub csp, jssp, #0x8 (8)
0xffff8bdd468c    76  str lr, [jssp, #-8]!
0xffff8bdd4690    80  ldr x16, pc+24 (addr 0x0000ffff8bdd46a8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd4694    84  blr x16
0xffff8bdd4698    88  ldr lr, [jssp], #8
0xffff8bdd469c    92  ret
0xffff8bdd46a0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd46a4   100  d63f03e0       constant
0xffff8bdd46a8   104  8bd38080       constant
0xffff8bdd46ac   108  0000ffff       constant
0xffff8bdd46b0   112  movz x16, #0x0
0xffff8bdd46b4   116  sub csp, jssp, #0x10 (16)
0xffff8bdd46b8   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd46bc   124  bl #+0x4 (addr 0xffff8bdd46c0)
0xffff8bdd46c0   128  movz x17, #0xa00000000
0xffff8bdd46c4   132  sub csp, jssp, #0x10 (16)
0xffff8bdd46c8   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd46cc   140  add fp, jssp, #0x10 (16)
0xffff8bdd46d0   144  ldr x17, pc+24 (addr 0x0000ffff8bdd46e8)    ;; lazy deoptimization bailout 0
0xffff8bdd46d4   148  add x17, x17, x16
0xffff8bdd46d8   152  br x17
0xffff8bdd46dc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd46e0   160  d63f03e0       constant
0xffff8bdd46e4   164  d503201f       constant
0xffff8bdd46e8   168  8bb06000       constant
0xffff8bdd46ec   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd4690  code target (STUB)  (0xffff8bd38080)
0xffff8bdd46a0  constant pool (size 16)
0xffff8bdd46d0  runtime entry
0xffff8bdd46dc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = blksize
compiler = unknown
Instructions (size = 152)
0xffff8bdd4760     0  sub csp, jssp, #0x8 (8)
0xffff8bdd4764     4  str x3, [jssp, #-8]!
0xffff8bdd4768     8  sub csp, jssp, #0x8 (8)
0xffff8bdd476c    12  str x4, [jssp, #-8]!
0xffff8bdd4770    16  ldr x3, pc+88 (addr 0x0000ffff8bdd47c8)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd4774    20  ldur x3, [x3, #7]
0xffff8bdd4778    24  cmp x3, #0x0 (0)
0xffff8bdd477c    28  b.ne #+0x2c (addr 0xffff8bdd47a8)
0xffff8bdd4780    32  ldr x5, pc+80 (addr 0x0000ffff8bdd47d0)    ;; object: 0x327359b1 WeakCell for 0x5f535e21 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd4784    36  ldur x5, [x5, #7]
0xffff8bdd4788    40  tbz w5, #0, #+0x20 (addr 0xffff8bdd47a8)
0xffff8bdd478c    44  ldursw x4, [x5, #15]
0xffff8bdd4790    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdd47a8)
0xffff8bdd4794    52  ldr x4, [jssp], #8
0xffff8bdd4798    56  ldr x3, [jssp], #8
0xffff8bdd479c    60  ldr x2, pc+60 (addr 0x0000ffff8bdd47d8)    ;; object: 0x3270d149 <String[7]: blksize>
0xffff8bdd47a0    64  ldr x16, pc+64 (addr 0x0000ffff8bdd47e0)    ;; code: HANDLER, StoreTransitionStub, minor: 194569
0xffff8bdd47a4    68  br x16
0xffff8bdd47a8    72  ldr x2, pc+64 (addr 0x0000ffff8bdd47e8)    ;; object: 0x3270d149 <String[7]: blksize>
0xffff8bdd47ac    76  ldr x4, [jssp], #8
0xffff8bdd47b0    80  ldr x3, [jssp], #8
0xffff8bdd47b4    84  ldr x16, pc+60 (addr 0x0000ffff8bdd47f0)    ;; code: BUILTIN
0xffff8bdd47b8    88  br x16
0xffff8bdd47bc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdd47c0    96  d63f03e0       constant
0xffff8bdd47c4   100  d503201f       constant
0xffff8bdd47c8   104  327353d1       constant
0xffff8bdd47cc   108  00000000       constant
0xffff8bdd47d0   112  327359b1       constant
0xffff8bdd47d4   116  00000000       constant
0xffff8bdd47d8   120  3270d149       constant
0xffff8bdd47dc   124  00000000       constant
0xffff8bdd47e0   128  8bdd4640       constant
0xffff8bdd47e4   132  0000ffff       constant
0xffff8bdd47e8   136  3270d149       constant
0xffff8bdd47ec   140  00000000       constant
0xffff8bdd47f0   144  8bd22420       constant
0xffff8bdd47f4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdd4770  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd4780  embedded object  (0x327359b1 WeakCell for 0x5f535e21 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd479c  embedded object  (0x3270d149 <String[7]: blksize>)
0xffff8bdd47a0  code target (HANDLER)  (0xffff8bdd4640)
0xffff8bdd47a8  embedded object  (0x3270d149 <String[7]: blksize>)
0xffff8bdd47b4  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdd47bc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd4860     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd487c)
0xffff8bdd4864     4  ldur x16, [x0, #-1]
0xffff8bdd4868     8  ldr x17, [x26, #120]
0xffff8bdd486c    12  cmp x16, x17
0xffff8bdd4870    16  b.ne #+0x60 (addr 0xffff8bdd48d0)
0xffff8bdd4874    20  ldur d0, [x0, #7]
0xffff8bdd4878    24  b #+0x8 (addr 0xffff8bdd4880)
0xffff8bdd487c    28  scvtf d0, x0, #32
0xffff8bdd4880    32  stur d0, [x1, #79]
0xffff8bdd4884    36  stur x5, [x1, #-1]
0xffff8bdd4888    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd48bc)
0xffff8bdd488c    44  sub x2, x1, #0x1 (1)
0xffff8bdd4890    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd4894    52  ldr x5, [x5, #8]
0xffff8bdd4898    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd48bc)
0xffff8bdd489c    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd48a0    64  ldr x5, [x5, #8]
0xffff8bdd48a4    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd48bc)
0xffff8bdd48a8    72  sub csp, jssp, #0x8 (8)
0xffff8bdd48ac    76  str lr, [jssp, #-8]!
0xffff8bdd48b0    80  ldr x16, pc+24 (addr 0x0000ffff8bdd48c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd48b4    84  blr x16
0xffff8bdd48b8    88  ldr lr, [jssp], #8
0xffff8bdd48bc    92  ret
0xffff8bdd48c0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd48c4   100  d63f03e0       constant
0xffff8bdd48c8   104  8bd38080       constant
0xffff8bdd48cc   108  0000ffff       constant
0xffff8bdd48d0   112  movz x16, #0x0
0xffff8bdd48d4   116  sub csp, jssp, #0x10 (16)
0xffff8bdd48d8   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd48dc   124  bl #+0x4 (addr 0xffff8bdd48e0)
0xffff8bdd48e0   128  movz x17, #0xa00000000
0xffff8bdd48e4   132  sub csp, jssp, #0x10 (16)
0xffff8bdd48e8   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd48ec   140  add fp, jssp, #0x10 (16)
0xffff8bdd48f0   144  ldr x17, pc+24 (addr 0x0000ffff8bdd4908)    ;; lazy deoptimization bailout 0
0xffff8bdd48f4   148  add x17, x17, x16
0xffff8bdd48f8   152  br x17
0xffff8bdd48fc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd4900   160  d63f03e0       constant
0xffff8bdd4904   164  d503201f       constant
0xffff8bdd4908   168  8bb06000       constant
0xffff8bdd490c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd48b0  code target (STUB)  (0xffff8bd38080)
0xffff8bdd48c0  constant pool (size 16)
0xffff8bdd48f0  runtime entry
0xffff8bdd48fc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd4860     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd487c)
0xffff8bdd4864     4  ldur x16, [x0, #-1]
0xffff8bdd4868     8  ldr x17, [x26, #120]
0xffff8bdd486c    12  cmp x16, x17
0xffff8bdd4870    16  b.ne #+0x60 (addr 0xffff8bdd48d0)
0xffff8bdd4874    20  ldur d0, [x0, #7]
0xffff8bdd4878    24  b #+0x8 (addr 0xffff8bdd4880)
0xffff8bdd487c    28  scvtf d0, x0, #32
0xffff8bdd4880    32  stur d0, [x1, #79]
0xffff8bdd4884    36  stur x5, [x1, #-1]
0xffff8bdd4888    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd48bc)
0xffff8bdd488c    44  sub x2, x1, #0x1 (1)
0xffff8bdd4890    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd4894    52  ldr x5, [x5, #8]
0xffff8bdd4898    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd48bc)
0xffff8bdd489c    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd48a0    64  ldr x5, [x5, #8]
0xffff8bdd48a4    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd48bc)
0xffff8bdd48a8    72  sub csp, jssp, #0x8 (8)
0xffff8bdd48ac    76  str lr, [jssp, #-8]!
0xffff8bdd48b0    80  ldr x16, pc+24 (addr 0x0000ffff8bdd48c8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd48b4    84  blr x16
0xffff8bdd48b8    88  ldr lr, [jssp], #8
0xffff8bdd48bc    92  ret
0xffff8bdd48c0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd48c4   100  d63f03e0       constant
0xffff8bdd48c8   104  8bd38080       constant
0xffff8bdd48cc   108  0000ffff       constant
0xffff8bdd48d0   112  movz x16, #0x0
0xffff8bdd48d4   116  sub csp, jssp, #0x10 (16)
0xffff8bdd48d8   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd48dc   124  bl #+0x4 (addr 0xffff8bdd48e0)
0xffff8bdd48e0   128  movz x17, #0xa00000000
0xffff8bdd48e4   132  sub csp, jssp, #0x10 (16)
0xffff8bdd48e8   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd48ec   140  add fp, jssp, #0x10 (16)
0xffff8bdd48f0   144  ldr x17, pc+24 (addr 0x0000ffff8bdd4908)    ;; lazy deoptimization bailout 0
0xffff8bdd48f4   148  add x17, x17, x16
0xffff8bdd48f8   152  br x17
0xffff8bdd48fc   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd4900   160  d63f03e0       constant
0xffff8bdd4904   164  d503201f       constant
0xffff8bdd4908   168  8bb06000       constant
0xffff8bdd490c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd48b0  code target (STUB)  (0xffff8bd38080)
0xffff8bdd48c0  constant pool (size 16)
0xffff8bdd48f0  runtime entry
0xffff8bdd48fc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = ino
compiler = unknown
Instructions (size = 152)
0xffff8bdd4980     0  sub csp, jssp, #0x8 (8)
0xffff8bdd4984     4  str x3, [jssp, #-8]!
0xffff8bdd4988     8  sub csp, jssp, #0x8 (8)
0xffff8bdd498c    12  str x4, [jssp, #-8]!
0xffff8bdd4990    16  ldr x3, pc+88 (addr 0x0000ffff8bdd49e8)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd4994    20  ldur x3, [x3, #7]
0xffff8bdd4998    24  cmp x3, #0x0 (0)
0xffff8bdd499c    28  b.ne #+0x2c (addr 0xffff8bdd49c8)
0xffff8bdd49a0    32  ldr x5, pc+80 (addr 0x0000ffff8bdd49f0)    ;; object: 0x32735aa9 WeakCell for 0x5f535e79 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd49a4    36  ldur x5, [x5, #7]
0xffff8bdd49a8    40  tbz w5, #0, #+0x20 (addr 0xffff8bdd49c8)
0xffff8bdd49ac    44  ldursw x4, [x5, #15]
0xffff8bdd49b0    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdd49c8)
0xffff8bdd49b4    52  ldr x4, [jssp], #8
0xffff8bdd49b8    56  ldr x3, [jssp], #8
0xffff8bdd49bc    60  ldr x2, pc+60 (addr 0x0000ffff8bdd49f8)    ;; object: 0x3270d169 <String[3]: ino>
0xffff8bdd49c0    64  ldr x16, pc+64 (addr 0x0000ffff8bdd4a00)    ;; code: HANDLER, StoreTransitionStub, minor: 194570
0xffff8bdd49c4    68  br x16
0xffff8bdd49c8    72  ldr x2, pc+64 (addr 0x0000ffff8bdd4a08)    ;; object: 0x3270d169 <String[3]: ino>
0xffff8bdd49cc    76  ldr x4, [jssp], #8
0xffff8bdd49d0    80  ldr x3, [jssp], #8
0xffff8bdd49d4    84  ldr x16, pc+60 (addr 0x0000ffff8bdd4a10)    ;; code: BUILTIN
0xffff8bdd49d8    88  br x16
0xffff8bdd49dc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdd49e0    96  d63f03e0       constant
0xffff8bdd49e4   100  d503201f       constant
0xffff8bdd49e8   104  327353d1       constant
0xffff8bdd49ec   108  00000000       constant
0xffff8bdd49f0   112  32735aa9       constant
0xffff8bdd49f4   116  00000000       constant
0xffff8bdd49f8   120  3270d169       constant
0xffff8bdd49fc   124  00000000       constant
0xffff8bdd4a00   128  8bdd4860       constant
0xffff8bdd4a04   132  0000ffff       constant
0xffff8bdd4a08   136  3270d169       constant
0xffff8bdd4a0c   140  00000000       constant
0xffff8bdd4a10   144  8bd22420       constant
0xffff8bdd4a14   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdd4990  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd49a0  embedded object  (0x32735aa9 WeakCell for 0x5f535e79 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd49bc  embedded object  (0x3270d169 <String[3]: ino>)
0xffff8bdd49c0  code target (HANDLER)  (0xffff8bdd4860)
0xffff8bdd49c8  embedded object  (0x3270d169 <String[3]: ino>)
0xffff8bdd49d4  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdd49dc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd4a80     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd4a9c)
0xffff8bdd4a84     4  ldur x16, [x0, #-1]
0xffff8bdd4a88     8  ldr x17, [x26, #120]
0xffff8bdd4a8c    12  cmp x16, x17
0xffff8bdd4a90    16  b.ne #+0x60 (addr 0xffff8bdd4af0)
0xffff8bdd4a94    20  ldur d0, [x0, #7]
0xffff8bdd4a98    24  b #+0x8 (addr 0xffff8bdd4aa0)
0xffff8bdd4a9c    28  scvtf d0, x0, #32
0xffff8bdd4aa0    32  stur d0, [x1, #87]
0xffff8bdd4aa4    36  stur x5, [x1, #-1]
0xffff8bdd4aa8    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd4adc)
0xffff8bdd4aac    44  sub x2, x1, #0x1 (1)
0xffff8bdd4ab0    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd4ab4    52  ldr x5, [x5, #8]
0xffff8bdd4ab8    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd4adc)
0xffff8bdd4abc    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd4ac0    64  ldr x5, [x5, #8]
0xffff8bdd4ac4    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd4adc)
0xffff8bdd4ac8    72  sub csp, jssp, #0x8 (8)
0xffff8bdd4acc    76  str lr, [jssp, #-8]!
0xffff8bdd4ad0    80  ldr x16, pc+24 (addr 0x0000ffff8bdd4ae8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd4ad4    84  blr x16
0xffff8bdd4ad8    88  ldr lr, [jssp], #8
0xffff8bdd4adc    92  ret
0xffff8bdd4ae0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd4ae4   100  d63f03e0       constant
0xffff8bdd4ae8   104  8bd38080       constant
0xffff8bdd4aec   108  0000ffff       constant
0xffff8bdd4af0   112  movz x16, #0x0
0xffff8bdd4af4   116  sub csp, jssp, #0x10 (16)
0xffff8bdd4af8   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd4afc   124  bl #+0x4 (addr 0xffff8bdd4b00)
0xffff8bdd4b00   128  movz x17, #0xa00000000
0xffff8bdd4b04   132  sub csp, jssp, #0x10 (16)
0xffff8bdd4b08   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd4b0c   140  add fp, jssp, #0x10 (16)
0xffff8bdd4b10   144  ldr x17, pc+24 (addr 0x0000ffff8bdd4b28)    ;; lazy deoptimization bailout 0
0xffff8bdd4b14   148  add x17, x17, x16
0xffff8bdd4b18   152  br x17
0xffff8bdd4b1c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd4b20   160  d63f03e0       constant
0xffff8bdd4b24   164  d503201f       constant
0xffff8bdd4b28   168  8bb06000       constant
0xffff8bdd4b2c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd4ad0  code target (STUB)  (0xffff8bd38080)
0xffff8bdd4ae0  constant pool (size 16)
0xffff8bdd4b10  runtime entry
0xffff8bdd4b1c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd4a80     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd4a9c)
0xffff8bdd4a84     4  ldur x16, [x0, #-1]
0xffff8bdd4a88     8  ldr x17, [x26, #120]
0xffff8bdd4a8c    12  cmp x16, x17
0xffff8bdd4a90    16  b.ne #+0x60 (addr 0xffff8bdd4af0)
0xffff8bdd4a94    20  ldur d0, [x0, #7]
0xffff8bdd4a98    24  b #+0x8 (addr 0xffff8bdd4aa0)
0xffff8bdd4a9c    28  scvtf d0, x0, #32
0xffff8bdd4aa0    32  stur d0, [x1, #87]
0xffff8bdd4aa4    36  stur x5, [x1, #-1]
0xffff8bdd4aa8    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd4adc)
0xffff8bdd4aac    44  sub x2, x1, #0x1 (1)
0xffff8bdd4ab0    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd4ab4    52  ldr x5, [x5, #8]
0xffff8bdd4ab8    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd4adc)
0xffff8bdd4abc    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd4ac0    64  ldr x5, [x5, #8]
0xffff8bdd4ac4    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd4adc)
0xffff8bdd4ac8    72  sub csp, jssp, #0x8 (8)
0xffff8bdd4acc    76  str lr, [jssp, #-8]!
0xffff8bdd4ad0    80  ldr x16, pc+24 (addr 0x0000ffff8bdd4ae8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd4ad4    84  blr x16
0xffff8bdd4ad8    88  ldr lr, [jssp], #8
0xffff8bdd4adc    92  ret
0xffff8bdd4ae0    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd4ae4   100  d63f03e0       constant
0xffff8bdd4ae8   104  8bd38080       constant
0xffff8bdd4aec   108  0000ffff       constant
0xffff8bdd4af0   112  movz x16, #0x0
0xffff8bdd4af4   116  sub csp, jssp, #0x10 (16)
0xffff8bdd4af8   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd4afc   124  bl #+0x4 (addr 0xffff8bdd4b00)
0xffff8bdd4b00   128  movz x17, #0xa00000000
0xffff8bdd4b04   132  sub csp, jssp, #0x10 (16)
0xffff8bdd4b08   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd4b0c   140  add fp, jssp, #0x10 (16)
0xffff8bdd4b10   144  ldr x17, pc+24 (addr 0x0000ffff8bdd4b28)    ;; lazy deoptimization bailout 0
0xffff8bdd4b14   148  add x17, x17, x16
0xffff8bdd4b18   152  br x17
0xffff8bdd4b1c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd4b20   160  d63f03e0       constant
0xffff8bdd4b24   164  d503201f       constant
0xffff8bdd4b28   168  8bb06000       constant
0xffff8bdd4b2c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd4ad0  code target (STUB)  (0xffff8bd38080)
0xffff8bdd4ae0  constant pool (size 16)
0xffff8bdd4b10  runtime entry
0xffff8bdd4b1c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = size
compiler = unknown
Instructions (size = 152)
0xffff8bdd4ba0     0  sub csp, jssp, #0x8 (8)
0xffff8bdd4ba4     4  str x3, [jssp, #-8]!
0xffff8bdd4ba8     8  sub csp, jssp, #0x8 (8)
0xffff8bdd4bac    12  str x4, [jssp, #-8]!
0xffff8bdd4bb0    16  ldr x3, pc+88 (addr 0x0000ffff8bdd4c08)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd4bb4    20  ldur x3, [x3, #7]
0xffff8bdd4bb8    24  cmp x3, #0x0 (0)
0xffff8bdd4bbc    28  b.ne #+0x2c (addr 0xffff8bdd4be8)
0xffff8bdd4bc0    32  ldr x5, pc+80 (addr 0x0000ffff8bdd4c10)    ;; object: 0x32735ba1 WeakCell for 0x5f535ed1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd4bc4    36  ldur x5, [x5, #7]
0xffff8bdd4bc8    40  tbz w5, #0, #+0x20 (addr 0xffff8bdd4be8)
0xffff8bdd4bcc    44  ldursw x4, [x5, #15]
0xffff8bdd4bd0    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdd4be8)
0xffff8bdd4bd4    52  ldr x4, [jssp], #8
0xffff8bdd4bd8    56  ldr x3, [jssp], #8
0xffff8bdd4bdc    60  ldr x2, pc+60 (addr 0x0000ffff8bdd4c18)    ;; object: 0x26c89861 <String[4]: size>
0xffff8bdd4be0    64  ldr x16, pc+64 (addr 0x0000ffff8bdd4c20)    ;; code: HANDLER, StoreTransitionStub, minor: 194571
0xffff8bdd4be4    68  br x16
0xffff8bdd4be8    72  ldr x2, pc+64 (addr 0x0000ffff8bdd4c28)    ;; object: 0x26c89861 <String[4]: size>
0xffff8bdd4bec    76  ldr x4, [jssp], #8
0xffff8bdd4bf0    80  ldr x3, [jssp], #8
0xffff8bdd4bf4    84  ldr x16, pc+60 (addr 0x0000ffff8bdd4c30)    ;; code: BUILTIN
0xffff8bdd4bf8    88  br x16
0xffff8bdd4bfc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdd4c00    96  d63f03e0       constant
0xffff8bdd4c04   100  d503201f       constant
0xffff8bdd4c08   104  327353d1       constant
0xffff8bdd4c0c   108  00000000       constant
0xffff8bdd4c10   112  32735ba1       constant
0xffff8bdd4c14   116  00000000       constant
0xffff8bdd4c18   120  26c89861       constant
0xffff8bdd4c1c   124  00000000       constant
0xffff8bdd4c20   128  8bdd4a80       constant
0xffff8bdd4c24   132  0000ffff       constant
0xffff8bdd4c28   136  26c89861       constant
0xffff8bdd4c2c   140  00000000       constant
0xffff8bdd4c30   144  8bd22420       constant
0xffff8bdd4c34   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdd4bb0  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd4bc0  embedded object  (0x32735ba1 WeakCell for 0x5f535ed1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd4bdc  embedded object  (0x26c89861 <String[4]: size>)
0xffff8bdd4be0  code target (HANDLER)  (0xffff8bdd4a80)
0xffff8bdd4be8  embedded object  (0x26c89861 <String[4]: size>)
0xffff8bdd4bf4  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdd4bfc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd4ca0     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd4cbc)
0xffff8bdd4ca4     4  ldur x16, [x0, #-1]
0xffff8bdd4ca8     8  ldr x17, [x26, #120]
0xffff8bdd4cac    12  cmp x16, x17
0xffff8bdd4cb0    16  b.ne #+0x60 (addr 0xffff8bdd4d10)
0xffff8bdd4cb4    20  ldur d0, [x0, #7]
0xffff8bdd4cb8    24  b #+0x8 (addr 0xffff8bdd4cc0)
0xffff8bdd4cbc    28  scvtf d0, x0, #32
0xffff8bdd4cc0    32  stur d0, [x1, #95]
0xffff8bdd4cc4    36  stur x5, [x1, #-1]
0xffff8bdd4cc8    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd4cfc)
0xffff8bdd4ccc    44  sub x2, x1, #0x1 (1)
0xffff8bdd4cd0    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd4cd4    52  ldr x5, [x5, #8]
0xffff8bdd4cd8    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd4cfc)
0xffff8bdd4cdc    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd4ce0    64  ldr x5, [x5, #8]
0xffff8bdd4ce4    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd4cfc)
0xffff8bdd4ce8    72  sub csp, jssp, #0x8 (8)
0xffff8bdd4cec    76  str lr, [jssp, #-8]!
0xffff8bdd4cf0    80  ldr x16, pc+24 (addr 0x0000ffff8bdd4d08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd4cf4    84  blr x16
0xffff8bdd4cf8    88  ldr lr, [jssp], #8
0xffff8bdd4cfc    92  ret
0xffff8bdd4d00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd4d04   100  d63f03e0       constant
0xffff8bdd4d08   104  8bd38080       constant
0xffff8bdd4d0c   108  0000ffff       constant
0xffff8bdd4d10   112  movz x16, #0x0
0xffff8bdd4d14   116  sub csp, jssp, #0x10 (16)
0xffff8bdd4d18   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd4d1c   124  bl #+0x4 (addr 0xffff8bdd4d20)
0xffff8bdd4d20   128  movz x17, #0xa00000000
0xffff8bdd4d24   132  sub csp, jssp, #0x10 (16)
0xffff8bdd4d28   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd4d2c   140  add fp, jssp, #0x10 (16)
0xffff8bdd4d30   144  ldr x17, pc+24 (addr 0x0000ffff8bdd4d48)    ;; lazy deoptimization bailout 0
0xffff8bdd4d34   148  add x17, x17, x16
0xffff8bdd4d38   152  br x17
0xffff8bdd4d3c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd4d40   160  d63f03e0       constant
0xffff8bdd4d44   164  d503201f       constant
0xffff8bdd4d48   168  8bb06000       constant
0xffff8bdd4d4c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd4cf0  code target (STUB)  (0xffff8bd38080)
0xffff8bdd4d00  constant pool (size 16)
0xffff8bdd4d30  runtime entry
0xffff8bdd4d3c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdd4ca0     0  tbz w0, #0, #+0x1c (addr 0xffff8bdd4cbc)
0xffff8bdd4ca4     4  ldur x16, [x0, #-1]
0xffff8bdd4ca8     8  ldr x17, [x26, #120]
0xffff8bdd4cac    12  cmp x16, x17
0xffff8bdd4cb0    16  b.ne #+0x60 (addr 0xffff8bdd4d10)
0xffff8bdd4cb4    20  ldur d0, [x0, #7]
0xffff8bdd4cb8    24  b #+0x8 (addr 0xffff8bdd4cc0)
0xffff8bdd4cbc    28  scvtf d0, x0, #32
0xffff8bdd4cc0    32  stur d0, [x1, #95]
0xffff8bdd4cc4    36  stur x5, [x1, #-1]
0xffff8bdd4cc8    40  tbz w5, #0, #+0x34 (addr 0xffff8bdd4cfc)
0xffff8bdd4ccc    44  sub x2, x1, #0x1 (1)
0xffff8bdd4cd0    48  and x5, x5, #0xfffffffffff00000
0xffff8bdd4cd4    52  ldr x5, [x5, #8]
0xffff8bdd4cd8    56  tbz w5, #1, #+0x24 (addr 0xffff8bdd4cfc)
0xffff8bdd4cdc    60  and x5, x1, #0xfffffffffff00000
0xffff8bdd4ce0    64  ldr x5, [x5, #8]
0xffff8bdd4ce4    68  tbz w5, #2, #+0x18 (addr 0xffff8bdd4cfc)
0xffff8bdd4ce8    72  sub csp, jssp, #0x8 (8)
0xffff8bdd4cec    76  str lr, [jssp, #-8]!
0xffff8bdd4cf0    80  ldr x16, pc+24 (addr 0x0000ffff8bdd4d08)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd4cf4    84  blr x16
0xffff8bdd4cf8    88  ldr lr, [jssp], #8
0xffff8bdd4cfc    92  ret
0xffff8bdd4d00    96  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdd4d04   100  d63f03e0       constant
0xffff8bdd4d08   104  8bd38080       constant
0xffff8bdd4d0c   108  0000ffff       constant
0xffff8bdd4d10   112  movz x16, #0x0
0xffff8bdd4d14   116  sub csp, jssp, #0x10 (16)
0xffff8bdd4d18   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd4d1c   124  bl #+0x4 (addr 0xffff8bdd4d20)
0xffff8bdd4d20   128  movz x17, #0xa00000000
0xffff8bdd4d24   132  sub csp, jssp, #0x10 (16)
0xffff8bdd4d28   136  stp x17, cp, [jssp, #-16]!
0xffff8bdd4d2c   140  add fp, jssp, #0x10 (16)
0xffff8bdd4d30   144  ldr x17, pc+24 (addr 0x0000ffff8bdd4d48)    ;; lazy deoptimization bailout 0
0xffff8bdd4d34   148  add x17, x17, x16
0xffff8bdd4d38   152  br x17
0xffff8bdd4d3c   156  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd4d40   160  d63f03e0       constant
0xffff8bdd4d44   164  d503201f       constant
0xffff8bdd4d48   168  8bb06000       constant
0xffff8bdd4d4c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 17)
0xffff8bdd4cf0  code target (STUB)  (0xffff8bd38080)
0xffff8bdd4d00  constant pool (size 16)
0xffff8bdd4d30  runtime entry
0xffff8bdd4d3c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = blocks
compiler = unknown
Instructions (size = 152)
0xffff8bdd4dc0     0  sub csp, jssp, #0x8 (8)
0xffff8bdd4dc4     4  str x3, [jssp, #-8]!
0xffff8bdd4dc8     8  sub csp, jssp, #0x8 (8)
0xffff8bdd4dcc    12  str x4, [jssp, #-8]!
0xffff8bdd4dd0    16  ldr x3, pc+88 (addr 0x0000ffff8bdd4e28)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd4dd4    20  ldur x3, [x3, #7]
0xffff8bdd4dd8    24  cmp x3, #0x0 (0)
0xffff8bdd4ddc    28  b.ne #+0x2c (addr 0xffff8bdd4e08)
0xffff8bdd4de0    32  ldr x5, pc+80 (addr 0x0000ffff8bdd4e30)    ;; object: 0x32735c99 WeakCell for 0x5f535f29 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd4de4    36  ldur x5, [x5, #7]
0xffff8bdd4de8    40  tbz w5, #0, #+0x20 (addr 0xffff8bdd4e08)
0xffff8bdd4dec    44  ldursw x4, [x5, #15]
0xffff8bdd4df0    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdd4e08)
0xffff8bdd4df4    52  ldr x4, [jssp], #8
0xffff8bdd4df8    56  ldr x3, [jssp], #8
0xffff8bdd4dfc    60  ldr x2, pc+60 (addr 0x0000ffff8bdd4e38)    ;; object: 0x3270d189 <String[6]: blocks>
0xffff8bdd4e00    64  ldr x16, pc+64 (addr 0x0000ffff8bdd4e40)    ;; code: HANDLER, StoreTransitionStub, minor: 194572
0xffff8bdd4e04    68  br x16
0xffff8bdd4e08    72  ldr x2, pc+64 (addr 0x0000ffff8bdd4e48)    ;; object: 0x3270d189 <String[6]: blocks>
0xffff8bdd4e0c    76  ldr x4, [jssp], #8
0xffff8bdd4e10    80  ldr x3, [jssp], #8
0xffff8bdd4e14    84  ldr x16, pc+60 (addr 0x0000ffff8bdd4e50)    ;; code: BUILTIN
0xffff8bdd4e18    88  br x16
0xffff8bdd4e1c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdd4e20    96  d63f03e0       constant
0xffff8bdd4e24   100  d503201f       constant
0xffff8bdd4e28   104  327353d1       constant
0xffff8bdd4e2c   108  00000000       constant
0xffff8bdd4e30   112  32735c99       constant
0xffff8bdd4e34   116  00000000       constant
0xffff8bdd4e38   120  3270d189       constant
0xffff8bdd4e3c   124  00000000       constant
0xffff8bdd4e40   128  8bdd4ca0       constant
0xffff8bdd4e44   132  0000ffff       constant
0xffff8bdd4e48   136  3270d189       constant
0xffff8bdd4e4c   140  00000000       constant
0xffff8bdd4e50   144  8bd22420       constant
0xffff8bdd4e54   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdd4dd0  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd4de0  embedded object  (0x32735c99 WeakCell for 0x5f535f29 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd4dfc  embedded object  (0x3270d189 <String[6]: blocks>)
0xffff8bdd4e00  code target (HANDLER)  (0xffff8bdd4ca0)
0xffff8bdd4e08  embedded object  (0x3270d189 <String[6]: blocks>)
0xffff8bdd4e14  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdd4e1c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdd4ec0     0  tbz w0, #0, #+0x90 (addr 0xffff8bdd4f50)
0xffff8bdd4ec4     4  mov x2, x0
0xffff8bdd4ec8     8  stur x2, [x1, #103]
0xffff8bdd4ecc    12  add x3, x1, #0x67 (103)
0xffff8bdd4ed0    16  and x2, x2, #0xfffffffffff00000
0xffff8bdd4ed4    20  ldr x2, [x2, #8]
0xffff8bdd4ed8    24  tbz w2, #1, #+0x24 (addr 0xffff8bdd4efc)
0xffff8bdd4edc    28  and x2, x1, #0xfffffffffff00000
0xffff8bdd4ee0    32  ldr x2, [x2, #8]
0xffff8bdd4ee4    36  tbz w2, #2, #+0x18 (addr 0xffff8bdd4efc)
0xffff8bdd4ee8    40  sub csp, jssp, #0x8 (8)
0xffff8bdd4eec    44  str lr, [jssp, #-8]!
0xffff8bdd4ef0    48  ldr x16, pc+80 (addr 0x0000ffff8bdd4f40)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdd4ef4    52  blr x16
0xffff8bdd4ef8    56  ldr lr, [jssp], #8
0xffff8bdd4efc    60  stur x5, [x1, #-1]
0xffff8bdd4f00    64  tbz w5, #0, #+0x34 (addr 0xffff8bdd4f34)
0xffff8bdd4f04    68  sub x2, x1, #0x1 (1)
0xffff8bdd4f08    72  and x5, x5, #0xfffffffffff00000
0xffff8bdd4f0c    76  ldr x5, [x5, #8]
0xffff8bdd4f10    80  tbz w5, #1, #+0x24 (addr 0xffff8bdd4f34)
0xffff8bdd4f14    84  and x5, x1, #0xfffffffffff00000
0xffff8bdd4f18    88  ldr x5, [x5, #8]
0xffff8bdd4f1c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdd4f34)
0xffff8bdd4f20    96  sub csp, jssp, #0x8 (8)
0xffff8bdd4f24   100  str lr, [jssp, #-8]!
0xffff8bdd4f28   104  ldr x16, pc+32 (addr 0x0000ffff8bdd4f48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd4f2c   108  blr x16
0xffff8bdd4f30   112  ldr lr, [jssp], #8
0xffff8bdd4f34   116  ret
0xffff8bdd4f38   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdd4f3c   124  d63f03e0       constant
0xffff8bdd4f40   128  8bd170c0       constant
0xffff8bdd4f44   132  0000ffff       constant
0xffff8bdd4f48   136  8bd38080       constant
0xffff8bdd4f4c   140  0000ffff       constant
0xffff8bdd4f50   144  movz x16, #0x0
0xffff8bdd4f54   148  sub csp, jssp, #0x10 (16)
0xffff8bdd4f58   152  stp fp, lr, [jssp, #-16]!
0xffff8bdd4f5c   156  bl #+0x4 (addr 0xffff8bdd4f60)
0xffff8bdd4f60   160  movz x17, #0xa00000000
0xffff8bdd4f64   164  sub csp, jssp, #0x10 (16)
0xffff8bdd4f68   168  stp x17, cp, [jssp, #-16]!
0xffff8bdd4f6c   172  add fp, jssp, #0x10 (16)
0xffff8bdd4f70   176  ldr x17, pc+24 (addr 0x0000ffff8bdd4f88)    ;; lazy deoptimization bailout 0
0xffff8bdd4f74   180  add x17, x17, x16
0xffff8bdd4f78   184  br x17
0xffff8bdd4f7c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd4f80   192  d63f03e0       constant
0xffff8bdd4f84   196  d503201f       constant
0xffff8bdd4f88   200  8bb06000       constant
0xffff8bdd4f8c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdd4ef0  code target (STUB)  (0xffff8bd170c0)
0xffff8bdd4f28  code target (STUB)  (0xffff8bd38080)
0xffff8bdd4f38  constant pool (size 24)
0xffff8bdd4f70  runtime entry
0xffff8bdd4f7c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdd4ec0     0  tbz w0, #0, #+0x90 (addr 0xffff8bdd4f50)
0xffff8bdd4ec4     4  mov x2, x0
0xffff8bdd4ec8     8  stur x2, [x1, #103]
0xffff8bdd4ecc    12  add x3, x1, #0x67 (103)
0xffff8bdd4ed0    16  and x2, x2, #0xfffffffffff00000
0xffff8bdd4ed4    20  ldr x2, [x2, #8]
0xffff8bdd4ed8    24  tbz w2, #1, #+0x24 (addr 0xffff8bdd4efc)
0xffff8bdd4edc    28  and x2, x1, #0xfffffffffff00000
0xffff8bdd4ee0    32  ldr x2, [x2, #8]
0xffff8bdd4ee4    36  tbz w2, #2, #+0x18 (addr 0xffff8bdd4efc)
0xffff8bdd4ee8    40  sub csp, jssp, #0x8 (8)
0xffff8bdd4eec    44  str lr, [jssp, #-8]!
0xffff8bdd4ef0    48  ldr x16, pc+80 (addr 0x0000ffff8bdd4f40)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdd4ef4    52  blr x16
0xffff8bdd4ef8    56  ldr lr, [jssp], #8
0xffff8bdd4efc    60  stur x5, [x1, #-1]
0xffff8bdd4f00    64  tbz w5, #0, #+0x34 (addr 0xffff8bdd4f34)
0xffff8bdd4f04    68  sub x2, x1, #0x1 (1)
0xffff8bdd4f08    72  and x5, x5, #0xfffffffffff00000
0xffff8bdd4f0c    76  ldr x5, [x5, #8]
0xffff8bdd4f10    80  tbz w5, #1, #+0x24 (addr 0xffff8bdd4f34)
0xffff8bdd4f14    84  and x5, x1, #0xfffffffffff00000
0xffff8bdd4f18    88  ldr x5, [x5, #8]
0xffff8bdd4f1c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdd4f34)
0xffff8bdd4f20    96  sub csp, jssp, #0x8 (8)
0xffff8bdd4f24   100  str lr, [jssp, #-8]!
0xffff8bdd4f28   104  ldr x16, pc+32 (addr 0x0000ffff8bdd4f48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd4f2c   108  blr x16
0xffff8bdd4f30   112  ldr lr, [jssp], #8
0xffff8bdd4f34   116  ret
0xffff8bdd4f38   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdd4f3c   124  d63f03e0       constant
0xffff8bdd4f40   128  8bd170c0       constant
0xffff8bdd4f44   132  0000ffff       constant
0xffff8bdd4f48   136  8bd38080       constant
0xffff8bdd4f4c   140  0000ffff       constant
0xffff8bdd4f50   144  movz x16, #0x0
0xffff8bdd4f54   148  sub csp, jssp, #0x10 (16)
0xffff8bdd4f58   152  stp fp, lr, [jssp, #-16]!
0xffff8bdd4f5c   156  bl #+0x4 (addr 0xffff8bdd4f60)
0xffff8bdd4f60   160  movz x17, #0xa00000000
0xffff8bdd4f64   164  sub csp, jssp, #0x10 (16)
0xffff8bdd4f68   168  stp x17, cp, [jssp, #-16]!
0xffff8bdd4f6c   172  add fp, jssp, #0x10 (16)
0xffff8bdd4f70   176  ldr x17, pc+24 (addr 0x0000ffff8bdd4f88)    ;; lazy deoptimization bailout 0
0xffff8bdd4f74   180  add x17, x17, x16
0xffff8bdd4f78   184  br x17
0xffff8bdd4f7c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd4f80   192  d63f03e0       constant
0xffff8bdd4f84   196  d503201f       constant
0xffff8bdd4f88   200  8bb06000       constant
0xffff8bdd4f8c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdd4ef0  code target (STUB)  (0xffff8bd170c0)
0xffff8bdd4f28  code target (STUB)  (0xffff8bd38080)
0xffff8bdd4f38  constant pool (size 24)
0xffff8bdd4f70  runtime entry
0xffff8bdd4f7c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = atime
compiler = unknown
Instructions (size = 184)
0xffff8bdd5000     0  sub csp, jssp, #0x8 (8)
0xffff8bdd5004     4  str x3, [jssp, #-8]!
0xffff8bdd5008     8  sub csp, jssp, #0x8 (8)
0xffff8bdd500c    12  str x4, [jssp, #-8]!
0xffff8bdd5010    16  ldr x3, pc+112 (addr 0x0000ffff8bdd5080)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd5014    20  ldur x3, [x3, #7]
0xffff8bdd5018    24  cmp x3, #0x0 (0)
0xffff8bdd501c    28  b.ne #+0x44 (addr 0xffff8bdd5060)
0xffff8bdd5020    32  tbz w0, #0, #+0x40 (addr 0xffff8bdd5060)
0xffff8bdd5024    36  ldur x3, [x0, #-1]
0xffff8bdd5028    40  ldr x4, pc+96 (addr 0x0000ffff8bdd5088)    ;; object: 0x32734909 WeakCell for 0x5f507e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>
0xffff8bdd502c    44  ldur x4, [x4, #7]
0xffff8bdd5030    48  cmp x3, x4
0xffff8bdd5034    52  b.ne #+0x2c (addr 0xffff8bdd5060)
0xffff8bdd5038    56  ldr x5, pc+88 (addr 0x0000ffff8bdd5090)    ;; object: 0x32735d91 WeakCell for 0x5f535f81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd503c    60  ldur x5, [x5, #7]
0xffff8bdd5040    64  tbz w5, #0, #+0x20 (addr 0xffff8bdd5060)
0xffff8bdd5044    68  ldursw x4, [x5, #15]
0xffff8bdd5048    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdd5060)
0xffff8bdd504c    76  ldr x4, [jssp], #8
0xffff8bdd5050    80  ldr x3, [jssp], #8
0xffff8bdd5054    84  ldr x2, pc+68 (addr 0x0000ffff8bdd5098)    ;; object: 0x3270d249 <String[5]: atime>
0xffff8bdd5058    88  ldr x16, pc+72 (addr 0x0000ffff8bdd50a0)    ;; code: HANDLER, StoreTransitionStub, minor: 198669
0xffff8bdd505c    92  br x16
0xffff8bdd5060    96  ldr x2, pc+72 (addr 0x0000ffff8bdd50a8)    ;; object: 0x3270d249 <String[5]: atime>
0xffff8bdd5064   100  ldr x4, [jssp], #8
0xffff8bdd5068   104  ldr x3, [jssp], #8
0xffff8bdd506c   108  ldr x16, pc+68 (addr 0x0000ffff8bdd50b0)    ;; code: BUILTIN
0xffff8bdd5070   112  br x16
0xffff8bdd5074   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdd5078   120  d63f03e0       constant
0xffff8bdd507c   124  d503201f       constant
0xffff8bdd5080   128  327353d1       constant
0xffff8bdd5084   132  00000000       constant
0xffff8bdd5088   136  32734909       constant
0xffff8bdd508c   140  00000000       constant
0xffff8bdd5090   144  32735d91       constant
0xffff8bdd5094   148  00000000       constant
0xffff8bdd5098   152  3270d249       constant
0xffff8bdd509c   156  00000000       constant
0xffff8bdd50a0   160  8bdd4ec0       constant
0xffff8bdd50a4   164  0000ffff       constant
0xffff8bdd50a8   168  3270d249       constant
0xffff8bdd50ac   172  00000000       constant
0xffff8bdd50b0   176  8bd22420       constant
0xffff8bdd50b4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdd5010  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd5028  embedded object  (0x32734909 WeakCell for 0x5f507e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>)
0xffff8bdd5038  embedded object  (0x32735d91 WeakCell for 0x5f535f81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd5054  embedded object  (0x3270d249 <String[5]: atime>)
0xffff8bdd5058  code target (HANDLER)  (0xffff8bdd4ec0)
0xffff8bdd5060  embedded object  (0x3270d249 <String[5]: atime>)
0xffff8bdd506c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdd5074  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdd5120     0  tbz w0, #0, #+0x90 (addr 0xffff8bdd51b0)
0xffff8bdd5124     4  mov x2, x0
0xffff8bdd5128     8  stur x2, [x1, #111]
0xffff8bdd512c    12  add x3, x1, #0x6f (111)
0xffff8bdd5130    16  and x2, x2, #0xfffffffffff00000
0xffff8bdd5134    20  ldr x2, [x2, #8]
0xffff8bdd5138    24  tbz w2, #1, #+0x24 (addr 0xffff8bdd515c)
0xffff8bdd513c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdd5140    32  ldr x2, [x2, #8]
0xffff8bdd5144    36  tbz w2, #2, #+0x18 (addr 0xffff8bdd515c)
0xffff8bdd5148    40  sub csp, jssp, #0x8 (8)
0xffff8bdd514c    44  str lr, [jssp, #-8]!
0xffff8bdd5150    48  ldr x16, pc+80 (addr 0x0000ffff8bdd51a0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdd5154    52  blr x16
0xffff8bdd5158    56  ldr lr, [jssp], #8
0xffff8bdd515c    60  stur x5, [x1, #-1]
0xffff8bdd5160    64  tbz w5, #0, #+0x34 (addr 0xffff8bdd5194)
0xffff8bdd5164    68  sub x2, x1, #0x1 (1)
0xffff8bdd5168    72  and x5, x5, #0xfffffffffff00000
0xffff8bdd516c    76  ldr x5, [x5, #8]
0xffff8bdd5170    80  tbz w5, #1, #+0x24 (addr 0xffff8bdd5194)
0xffff8bdd5174    84  and x5, x1, #0xfffffffffff00000
0xffff8bdd5178    88  ldr x5, [x5, #8]
0xffff8bdd517c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdd5194)
0xffff8bdd5180    96  sub csp, jssp, #0x8 (8)
0xffff8bdd5184   100  str lr, [jssp, #-8]!
0xffff8bdd5188   104  ldr x16, pc+32 (addr 0x0000ffff8bdd51a8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd518c   108  blr x16
0xffff8bdd5190   112  ldr lr, [jssp], #8
0xffff8bdd5194   116  ret
0xffff8bdd5198   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdd519c   124  d63f03e0       constant
0xffff8bdd51a0   128  8bd170c0       constant
0xffff8bdd51a4   132  0000ffff       constant
0xffff8bdd51a8   136  8bd38080       constant
0xffff8bdd51ac   140  0000ffff       constant
0xffff8bdd51b0   144  movz x16, #0x0
0xffff8bdd51b4   148  sub csp, jssp, #0x10 (16)
0xffff8bdd51b8   152  stp fp, lr, [jssp, #-16]!
0xffff8bdd51bc   156  bl #+0x4 (addr 0xffff8bdd51c0)
0xffff8bdd51c0   160  movz x17, #0xa00000000
0xffff8bdd51c4   164  sub csp, jssp, #0x10 (16)
0xffff8bdd51c8   168  stp x17, cp, [jssp, #-16]!
0xffff8bdd51cc   172  add fp, jssp, #0x10 (16)
0xffff8bdd51d0   176  ldr x17, pc+24 (addr 0x0000ffff8bdd51e8)    ;; lazy deoptimization bailout 0
0xffff8bdd51d4   180  add x17, x17, x16
0xffff8bdd51d8   184  br x17
0xffff8bdd51dc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd51e0   192  d63f03e0       constant
0xffff8bdd51e4   196  d503201f       constant
0xffff8bdd51e8   200  8bb06000       constant
0xffff8bdd51ec   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdd5150  code target (STUB)  (0xffff8bd170c0)
0xffff8bdd5188  code target (STUB)  (0xffff8bd38080)
0xffff8bdd5198  constant pool (size 24)
0xffff8bdd51d0  runtime entry
0xffff8bdd51dc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdd5120     0  tbz w0, #0, #+0x90 (addr 0xffff8bdd51b0)
0xffff8bdd5124     4  mov x2, x0
0xffff8bdd5128     8  stur x2, [x1, #111]
0xffff8bdd512c    12  add x3, x1, #0x6f (111)
0xffff8bdd5130    16  and x2, x2, #0xfffffffffff00000
0xffff8bdd5134    20  ldr x2, [x2, #8]
0xffff8bdd5138    24  tbz w2, #1, #+0x24 (addr 0xffff8bdd515c)
0xffff8bdd513c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdd5140    32  ldr x2, [x2, #8]
0xffff8bdd5144    36  tbz w2, #2, #+0x18 (addr 0xffff8bdd515c)
0xffff8bdd5148    40  sub csp, jssp, #0x8 (8)
0xffff8bdd514c    44  str lr, [jssp, #-8]!
0xffff8bdd5150    48  ldr x16, pc+80 (addr 0x0000ffff8bdd51a0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdd5154    52  blr x16
0xffff8bdd5158    56  ldr lr, [jssp], #8
0xffff8bdd515c    60  stur x5, [x1, #-1]
0xffff8bdd5160    64  tbz w5, #0, #+0x34 (addr 0xffff8bdd5194)
0xffff8bdd5164    68  sub x2, x1, #0x1 (1)
0xffff8bdd5168    72  and x5, x5, #0xfffffffffff00000
0xffff8bdd516c    76  ldr x5, [x5, #8]
0xffff8bdd5170    80  tbz w5, #1, #+0x24 (addr 0xffff8bdd5194)
0xffff8bdd5174    84  and x5, x1, #0xfffffffffff00000
0xffff8bdd5178    88  ldr x5, [x5, #8]
0xffff8bdd517c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdd5194)
0xffff8bdd5180    96  sub csp, jssp, #0x8 (8)
0xffff8bdd5184   100  str lr, [jssp, #-8]!
0xffff8bdd5188   104  ldr x16, pc+32 (addr 0x0000ffff8bdd51a8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd518c   108  blr x16
0xffff8bdd5190   112  ldr lr, [jssp], #8
0xffff8bdd5194   116  ret
0xffff8bdd5198   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdd519c   124  d63f03e0       constant
0xffff8bdd51a0   128  8bd170c0       constant
0xffff8bdd51a4   132  0000ffff       constant
0xffff8bdd51a8   136  8bd38080       constant
0xffff8bdd51ac   140  0000ffff       constant
0xffff8bdd51b0   144  movz x16, #0x0
0xffff8bdd51b4   148  sub csp, jssp, #0x10 (16)
0xffff8bdd51b8   152  stp fp, lr, [jssp, #-16]!
0xffff8bdd51bc   156  bl #+0x4 (addr 0xffff8bdd51c0)
0xffff8bdd51c0   160  movz x17, #0xa00000000
0xffff8bdd51c4   164  sub csp, jssp, #0x10 (16)
0xffff8bdd51c8   168  stp x17, cp, [jssp, #-16]!
0xffff8bdd51cc   172  add fp, jssp, #0x10 (16)
0xffff8bdd51d0   176  ldr x17, pc+24 (addr 0x0000ffff8bdd51e8)    ;; lazy deoptimization bailout 0
0xffff8bdd51d4   180  add x17, x17, x16
0xffff8bdd51d8   184  br x17
0xffff8bdd51dc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd51e0   192  d63f03e0       constant
0xffff8bdd51e4   196  d503201f       constant
0xffff8bdd51e8   200  8bb06000       constant
0xffff8bdd51ec   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdd5150  code target (STUB)  (0xffff8bd170c0)
0xffff8bdd5188  code target (STUB)  (0xffff8bd38080)
0xffff8bdd5198  constant pool (size 24)
0xffff8bdd51d0  runtime entry
0xffff8bdd51dc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = mtime
compiler = unknown
Instructions (size = 184)
0xffff8bdd5260     0  sub csp, jssp, #0x8 (8)
0xffff8bdd5264     4  str x3, [jssp, #-8]!
0xffff8bdd5268     8  sub csp, jssp, #0x8 (8)
0xffff8bdd526c    12  str x4, [jssp, #-8]!
0xffff8bdd5270    16  ldr x3, pc+112 (addr 0x0000ffff8bdd52e0)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd5274    20  ldur x3, [x3, #7]
0xffff8bdd5278    24  cmp x3, #0x0 (0)
0xffff8bdd527c    28  b.ne #+0x44 (addr 0xffff8bdd52c0)
0xffff8bdd5280    32  tbz w0, #0, #+0x40 (addr 0xffff8bdd52c0)
0xffff8bdd5284    36  ldur x3, [x0, #-1]
0xffff8bdd5288    40  ldr x4, pc+96 (addr 0x0000ffff8bdd52e8)    ;; object: 0x32734909 WeakCell for 0x5f507e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>
0xffff8bdd528c    44  ldur x4, [x4, #7]
0xffff8bdd5290    48  cmp x3, x4
0xffff8bdd5294    52  b.ne #+0x2c (addr 0xffff8bdd52c0)
0xffff8bdd5298    56  ldr x5, pc+88 (addr 0x0000ffff8bdd52f0)    ;; object: 0x32735e81 WeakCell for 0x5f535fd9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd529c    60  ldur x5, [x5, #7]
0xffff8bdd52a0    64  tbz w5, #0, #+0x20 (addr 0xffff8bdd52c0)
0xffff8bdd52a4    68  ldursw x4, [x5, #15]
0xffff8bdd52a8    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdd52c0)
0xffff8bdd52ac    76  ldr x4, [jssp], #8
0xffff8bdd52b0    80  ldr x3, [jssp], #8
0xffff8bdd52b4    84  ldr x2, pc+68 (addr 0x0000ffff8bdd52f8)    ;; object: 0x3270d269 <String[5]: mtime>
0xffff8bdd52b8    88  ldr x16, pc+72 (addr 0x0000ffff8bdd5300)    ;; code: HANDLER, StoreTransitionStub, minor: 198670
0xffff8bdd52bc    92  br x16
0xffff8bdd52c0    96  ldr x2, pc+72 (addr 0x0000ffff8bdd5308)    ;; object: 0x3270d269 <String[5]: mtime>
0xffff8bdd52c4   100  ldr x4, [jssp], #8
0xffff8bdd52c8   104  ldr x3, [jssp], #8
0xffff8bdd52cc   108  ldr x16, pc+68 (addr 0x0000ffff8bdd5310)    ;; code: BUILTIN
0xffff8bdd52d0   112  br x16
0xffff8bdd52d4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdd52d8   120  d63f03e0       constant
0xffff8bdd52dc   124  d503201f       constant
0xffff8bdd52e0   128  327353d1       constant
0xffff8bdd52e4   132  00000000       constant
0xffff8bdd52e8   136  32734909       constant
0xffff8bdd52ec   140  00000000       constant
0xffff8bdd52f0   144  32735e81       constant
0xffff8bdd52f4   148  00000000       constant
0xffff8bdd52f8   152  3270d269       constant
0xffff8bdd52fc   156  00000000       constant
0xffff8bdd5300   160  8bdd5120       constant
0xffff8bdd5304   164  0000ffff       constant
0xffff8bdd5308   168  3270d269       constant
0xffff8bdd530c   172  00000000       constant
0xffff8bdd5310   176  8bd22420       constant
0xffff8bdd5314   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdd5270  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd5288  embedded object  (0x32734909 WeakCell for 0x5f507e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>)
0xffff8bdd5298  embedded object  (0x32735e81 WeakCell for 0x5f535fd9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd52b4  embedded object  (0x3270d269 <String[5]: mtime>)
0xffff8bdd52b8  code target (HANDLER)  (0xffff8bdd5120)
0xffff8bdd52c0  embedded object  (0x3270d269 <String[5]: mtime>)
0xffff8bdd52cc  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdd52d4  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdd5380     0  tbz w0, #0, #+0x90 (addr 0xffff8bdd5410)
0xffff8bdd5384     4  mov x2, x0
0xffff8bdd5388     8  stur x2, [x1, #119]
0xffff8bdd538c    12  add x3, x1, #0x77 (119)
0xffff8bdd5390    16  and x2, x2, #0xfffffffffff00000
0xffff8bdd5394    20  ldr x2, [x2, #8]
0xffff8bdd5398    24  tbz w2, #1, #+0x24 (addr 0xffff8bdd53bc)
0xffff8bdd539c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdd53a0    32  ldr x2, [x2, #8]
0xffff8bdd53a4    36  tbz w2, #2, #+0x18 (addr 0xffff8bdd53bc)
0xffff8bdd53a8    40  sub csp, jssp, #0x8 (8)
0xffff8bdd53ac    44  str lr, [jssp, #-8]!
0xffff8bdd53b0    48  ldr x16, pc+80 (addr 0x0000ffff8bdd5400)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdd53b4    52  blr x16
0xffff8bdd53b8    56  ldr lr, [jssp], #8
0xffff8bdd53bc    60  stur x5, [x1, #-1]
0xffff8bdd53c0    64  tbz w5, #0, #+0x34 (addr 0xffff8bdd53f4)
0xffff8bdd53c4    68  sub x2, x1, #0x1 (1)
0xffff8bdd53c8    72  and x5, x5, #0xfffffffffff00000
0xffff8bdd53cc    76  ldr x5, [x5, #8]
0xffff8bdd53d0    80  tbz w5, #1, #+0x24 (addr 0xffff8bdd53f4)
0xffff8bdd53d4    84  and x5, x1, #0xfffffffffff00000
0xffff8bdd53d8    88  ldr x5, [x5, #8]
0xffff8bdd53dc    92  tbz w5, #2, #+0x18 (addr 0xffff8bdd53f4)
0xffff8bdd53e0    96  sub csp, jssp, #0x8 (8)
0xffff8bdd53e4   100  str lr, [jssp, #-8]!
0xffff8bdd53e8   104  ldr x16, pc+32 (addr 0x0000ffff8bdd5408)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd53ec   108  blr x16
0xffff8bdd53f0   112  ldr lr, [jssp], #8
0xffff8bdd53f4   116  ret
0xffff8bdd53f8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdd53fc   124  d63f03e0       constant
0xffff8bdd5400   128  8bd170c0       constant
0xffff8bdd5404   132  0000ffff       constant
0xffff8bdd5408   136  8bd38080       constant
0xffff8bdd540c   140  0000ffff       constant
0xffff8bdd5410   144  movz x16, #0x0
0xffff8bdd5414   148  sub csp, jssp, #0x10 (16)
0xffff8bdd5418   152  stp fp, lr, [jssp, #-16]!
0xffff8bdd541c   156  bl #+0x4 (addr 0xffff8bdd5420)
0xffff8bdd5420   160  movz x17, #0xa00000000
0xffff8bdd5424   164  sub csp, jssp, #0x10 (16)
0xffff8bdd5428   168  stp x17, cp, [jssp, #-16]!
0xffff8bdd542c   172  add fp, jssp, #0x10 (16)
0xffff8bdd5430   176  ldr x17, pc+24 (addr 0x0000ffff8bdd5448)    ;; lazy deoptimization bailout 0
0xffff8bdd5434   180  add x17, x17, x16
0xffff8bdd5438   184  br x17
0xffff8bdd543c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd5440   192  d63f03e0       constant
0xffff8bdd5444   196  d503201f       constant
0xffff8bdd5448   200  8bb06000       constant
0xffff8bdd544c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdd53b0  code target (STUB)  (0xffff8bd170c0)
0xffff8bdd53e8  code target (STUB)  (0xffff8bd38080)
0xffff8bdd53f8  constant pool (size 24)
0xffff8bdd5430  runtime entry
0xffff8bdd543c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdd5380     0  tbz w0, #0, #+0x90 (addr 0xffff8bdd5410)
0xffff8bdd5384     4  mov x2, x0
0xffff8bdd5388     8  stur x2, [x1, #119]
0xffff8bdd538c    12  add x3, x1, #0x77 (119)
0xffff8bdd5390    16  and x2, x2, #0xfffffffffff00000
0xffff8bdd5394    20  ldr x2, [x2, #8]
0xffff8bdd5398    24  tbz w2, #1, #+0x24 (addr 0xffff8bdd53bc)
0xffff8bdd539c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdd53a0    32  ldr x2, [x2, #8]
0xffff8bdd53a4    36  tbz w2, #2, #+0x18 (addr 0xffff8bdd53bc)
0xffff8bdd53a8    40  sub csp, jssp, #0x8 (8)
0xffff8bdd53ac    44  str lr, [jssp, #-8]!
0xffff8bdd53b0    48  ldr x16, pc+80 (addr 0x0000ffff8bdd5400)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdd53b4    52  blr x16
0xffff8bdd53b8    56  ldr lr, [jssp], #8
0xffff8bdd53bc    60  stur x5, [x1, #-1]
0xffff8bdd53c0    64  tbz w5, #0, #+0x34 (addr 0xffff8bdd53f4)
0xffff8bdd53c4    68  sub x2, x1, #0x1 (1)
0xffff8bdd53c8    72  and x5, x5, #0xfffffffffff00000
0xffff8bdd53cc    76  ldr x5, [x5, #8]
0xffff8bdd53d0    80  tbz w5, #1, #+0x24 (addr 0xffff8bdd53f4)
0xffff8bdd53d4    84  and x5, x1, #0xfffffffffff00000
0xffff8bdd53d8    88  ldr x5, [x5, #8]
0xffff8bdd53dc    92  tbz w5, #2, #+0x18 (addr 0xffff8bdd53f4)
0xffff8bdd53e0    96  sub csp, jssp, #0x8 (8)
0xffff8bdd53e4   100  str lr, [jssp, #-8]!
0xffff8bdd53e8   104  ldr x16, pc+32 (addr 0x0000ffff8bdd5408)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd53ec   108  blr x16
0xffff8bdd53f0   112  ldr lr, [jssp], #8
0xffff8bdd53f4   116  ret
0xffff8bdd53f8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdd53fc   124  d63f03e0       constant
0xffff8bdd5400   128  8bd170c0       constant
0xffff8bdd5404   132  0000ffff       constant
0xffff8bdd5408   136  8bd38080       constant
0xffff8bdd540c   140  0000ffff       constant
0xffff8bdd5410   144  movz x16, #0x0
0xffff8bdd5414   148  sub csp, jssp, #0x10 (16)
0xffff8bdd5418   152  stp fp, lr, [jssp, #-16]!
0xffff8bdd541c   156  bl #+0x4 (addr 0xffff8bdd5420)
0xffff8bdd5420   160  movz x17, #0xa00000000
0xffff8bdd5424   164  sub csp, jssp, #0x10 (16)
0xffff8bdd5428   168  stp x17, cp, [jssp, #-16]!
0xffff8bdd542c   172  add fp, jssp, #0x10 (16)
0xffff8bdd5430   176  ldr x17, pc+24 (addr 0x0000ffff8bdd5448)    ;; lazy deoptimization bailout 0
0xffff8bdd5434   180  add x17, x17, x16
0xffff8bdd5438   184  br x17
0xffff8bdd543c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd5440   192  d63f03e0       constant
0xffff8bdd5444   196  d503201f       constant
0xffff8bdd5448   200  8bb06000       constant
0xffff8bdd544c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdd53b0  code target (STUB)  (0xffff8bd170c0)
0xffff8bdd53e8  code target (STUB)  (0xffff8bd38080)
0xffff8bdd53f8  constant pool (size 24)
0xffff8bdd5430  runtime entry
0xffff8bdd543c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = ctime
compiler = unknown
Instructions (size = 184)
0xffff8bdd54c0     0  sub csp, jssp, #0x8 (8)
0xffff8bdd54c4     4  str x3, [jssp, #-8]!
0xffff8bdd54c8     8  sub csp, jssp, #0x8 (8)
0xffff8bdd54cc    12  str x4, [jssp, #-8]!
0xffff8bdd54d0    16  ldr x3, pc+112 (addr 0x0000ffff8bdd5540)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd54d4    20  ldur x3, [x3, #7]
0xffff8bdd54d8    24  cmp x3, #0x0 (0)
0xffff8bdd54dc    28  b.ne #+0x44 (addr 0xffff8bdd5520)
0xffff8bdd54e0    32  tbz w0, #0, #+0x40 (addr 0xffff8bdd5520)
0xffff8bdd54e4    36  ldur x3, [x0, #-1]
0xffff8bdd54e8    40  ldr x4, pc+96 (addr 0x0000ffff8bdd5548)    ;; object: 0x32734909 WeakCell for 0x5f507e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>
0xffff8bdd54ec    44  ldur x4, [x4, #7]
0xffff8bdd54f0    48  cmp x3, x4
0xffff8bdd54f4    52  b.ne #+0x2c (addr 0xffff8bdd5520)
0xffff8bdd54f8    56  ldr x5, pc+88 (addr 0x0000ffff8bdd5550)    ;; object: 0x32735f71 WeakCell for 0x5f536031 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd54fc    60  ldur x5, [x5, #7]
0xffff8bdd5500    64  tbz w5, #0, #+0x20 (addr 0xffff8bdd5520)
0xffff8bdd5504    68  ldursw x4, [x5, #15]
0xffff8bdd5508    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdd5520)
0xffff8bdd550c    76  ldr x4, [jssp], #8
0xffff8bdd5510    80  ldr x3, [jssp], #8
0xffff8bdd5514    84  ldr x2, pc+68 (addr 0x0000ffff8bdd5558)    ;; object: 0x3270d289 <String[5]: ctime>
0xffff8bdd5518    88  ldr x16, pc+72 (addr 0x0000ffff8bdd5560)    ;; code: HANDLER, StoreTransitionStub, minor: 198671
0xffff8bdd551c    92  br x16
0xffff8bdd5520    96  ldr x2, pc+72 (addr 0x0000ffff8bdd5568)    ;; object: 0x3270d289 <String[5]: ctime>
0xffff8bdd5524   100  ldr x4, [jssp], #8
0xffff8bdd5528   104  ldr x3, [jssp], #8
0xffff8bdd552c   108  ldr x16, pc+68 (addr 0x0000ffff8bdd5570)    ;; code: BUILTIN
0xffff8bdd5530   112  br x16
0xffff8bdd5534   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdd5538   120  d63f03e0       constant
0xffff8bdd553c   124  d503201f       constant
0xffff8bdd5540   128  327353d1       constant
0xffff8bdd5544   132  00000000       constant
0xffff8bdd5548   136  32734909       constant
0xffff8bdd554c   140  00000000       constant
0xffff8bdd5550   144  32735f71       constant
0xffff8bdd5554   148  00000000       constant
0xffff8bdd5558   152  3270d289       constant
0xffff8bdd555c   156  00000000       constant
0xffff8bdd5560   160  8bdd5380       constant
0xffff8bdd5564   164  0000ffff       constant
0xffff8bdd5568   168  3270d289       constant
0xffff8bdd556c   172  00000000       constant
0xffff8bdd5570   176  8bd22420       constant
0xffff8bdd5574   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdd54d0  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd54e8  embedded object  (0x32734909 WeakCell for 0x5f507e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>)
0xffff8bdd54f8  embedded object  (0x32735f71 WeakCell for 0x5f536031 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd5514  embedded object  (0x3270d289 <String[5]: ctime>)
0xffff8bdd5518  code target (HANDLER)  (0xffff8bdd5380)
0xffff8bdd5520  embedded object  (0x3270d289 <String[5]: ctime>)
0xffff8bdd552c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdd5534  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdd55e0     0  tbz w0, #0, #+0x90 (addr 0xffff8bdd5670)
0xffff8bdd55e4     4  mov x2, x0
0xffff8bdd55e8     8  stur x2, [x1, #127]
0xffff8bdd55ec    12  add x3, x1, #0x7f (127)
0xffff8bdd55f0    16  and x2, x2, #0xfffffffffff00000
0xffff8bdd55f4    20  ldr x2, [x2, #8]
0xffff8bdd55f8    24  tbz w2, #1, #+0x24 (addr 0xffff8bdd561c)
0xffff8bdd55fc    28  and x2, x1, #0xfffffffffff00000
0xffff8bdd5600    32  ldr x2, [x2, #8]
0xffff8bdd5604    36  tbz w2, #2, #+0x18 (addr 0xffff8bdd561c)
0xffff8bdd5608    40  sub csp, jssp, #0x8 (8)
0xffff8bdd560c    44  str lr, [jssp, #-8]!
0xffff8bdd5610    48  ldr x16, pc+80 (addr 0x0000ffff8bdd5660)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdd5614    52  blr x16
0xffff8bdd5618    56  ldr lr, [jssp], #8
0xffff8bdd561c    60  stur x5, [x1, #-1]
0xffff8bdd5620    64  tbz w5, #0, #+0x34 (addr 0xffff8bdd5654)
0xffff8bdd5624    68  sub x2, x1, #0x1 (1)
0xffff8bdd5628    72  and x5, x5, #0xfffffffffff00000
0xffff8bdd562c    76  ldr x5, [x5, #8]
0xffff8bdd5630    80  tbz w5, #1, #+0x24 (addr 0xffff8bdd5654)
0xffff8bdd5634    84  and x5, x1, #0xfffffffffff00000
0xffff8bdd5638    88  ldr x5, [x5, #8]
0xffff8bdd563c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdd5654)
0xffff8bdd5640    96  sub csp, jssp, #0x8 (8)
0xffff8bdd5644   100  str lr, [jssp, #-8]!
0xffff8bdd5648   104  ldr x16, pc+32 (addr 0x0000ffff8bdd5668)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd564c   108  blr x16
0xffff8bdd5650   112  ldr lr, [jssp], #8
0xffff8bdd5654   116  ret
0xffff8bdd5658   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdd565c   124  d63f03e0       constant
0xffff8bdd5660   128  8bd170c0       constant
0xffff8bdd5664   132  0000ffff       constant
0xffff8bdd5668   136  8bd38080       constant
0xffff8bdd566c   140  0000ffff       constant
0xffff8bdd5670   144  movz x16, #0x0
0xffff8bdd5674   148  sub csp, jssp, #0x10 (16)
0xffff8bdd5678   152  stp fp, lr, [jssp, #-16]!
0xffff8bdd567c   156  bl #+0x4 (addr 0xffff8bdd5680)
0xffff8bdd5680   160  movz x17, #0xa00000000
0xffff8bdd5684   164  sub csp, jssp, #0x10 (16)
0xffff8bdd5688   168  stp x17, cp, [jssp, #-16]!
0xffff8bdd568c   172  add fp, jssp, #0x10 (16)
0xffff8bdd5690   176  ldr x17, pc+24 (addr 0x0000ffff8bdd56a8)    ;; lazy deoptimization bailout 0
0xffff8bdd5694   180  add x17, x17, x16
0xffff8bdd5698   184  br x17
0xffff8bdd569c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd56a0   192  d63f03e0       constant
0xffff8bdd56a4   196  d503201f       constant
0xffff8bdd56a8   200  8bb06000       constant
0xffff8bdd56ac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdd5610  code target (STUB)  (0xffff8bd170c0)
0xffff8bdd5648  code target (STUB)  (0xffff8bd38080)
0xffff8bdd5658  constant pool (size 24)
0xffff8bdd5690  runtime entry
0xffff8bdd569c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdd55e0     0  tbz w0, #0, #+0x90 (addr 0xffff8bdd5670)
0xffff8bdd55e4     4  mov x2, x0
0xffff8bdd55e8     8  stur x2, [x1, #127]
0xffff8bdd55ec    12  add x3, x1, #0x7f (127)
0xffff8bdd55f0    16  and x2, x2, #0xfffffffffff00000
0xffff8bdd55f4    20  ldr x2, [x2, #8]
0xffff8bdd55f8    24  tbz w2, #1, #+0x24 (addr 0xffff8bdd561c)
0xffff8bdd55fc    28  and x2, x1, #0xfffffffffff00000
0xffff8bdd5600    32  ldr x2, [x2, #8]
0xffff8bdd5604    36  tbz w2, #2, #+0x18 (addr 0xffff8bdd561c)
0xffff8bdd5608    40  sub csp, jssp, #0x8 (8)
0xffff8bdd560c    44  str lr, [jssp, #-8]!
0xffff8bdd5610    48  ldr x16, pc+80 (addr 0x0000ffff8bdd5660)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdd5614    52  blr x16
0xffff8bdd5618    56  ldr lr, [jssp], #8
0xffff8bdd561c    60  stur x5, [x1, #-1]
0xffff8bdd5620    64  tbz w5, #0, #+0x34 (addr 0xffff8bdd5654)
0xffff8bdd5624    68  sub x2, x1, #0x1 (1)
0xffff8bdd5628    72  and x5, x5, #0xfffffffffff00000
0xffff8bdd562c    76  ldr x5, [x5, #8]
0xffff8bdd5630    80  tbz w5, #1, #+0x24 (addr 0xffff8bdd5654)
0xffff8bdd5634    84  and x5, x1, #0xfffffffffff00000
0xffff8bdd5638    88  ldr x5, [x5, #8]
0xffff8bdd563c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdd5654)
0xffff8bdd5640    96  sub csp, jssp, #0x8 (8)
0xffff8bdd5644   100  str lr, [jssp, #-8]!
0xffff8bdd5648   104  ldr x16, pc+32 (addr 0x0000ffff8bdd5668)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdd564c   108  blr x16
0xffff8bdd5650   112  ldr lr, [jssp], #8
0xffff8bdd5654   116  ret
0xffff8bdd5658   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdd565c   124  d63f03e0       constant
0xffff8bdd5660   128  8bd170c0       constant
0xffff8bdd5664   132  0000ffff       constant
0xffff8bdd5668   136  8bd38080       constant
0xffff8bdd566c   140  0000ffff       constant
0xffff8bdd5670   144  movz x16, #0x0
0xffff8bdd5674   148  sub csp, jssp, #0x10 (16)
0xffff8bdd5678   152  stp fp, lr, [jssp, #-16]!
0xffff8bdd567c   156  bl #+0x4 (addr 0xffff8bdd5680)
0xffff8bdd5680   160  movz x17, #0xa00000000
0xffff8bdd5684   164  sub csp, jssp, #0x10 (16)
0xffff8bdd5688   168  stp x17, cp, [jssp, #-16]!
0xffff8bdd568c   172  add fp, jssp, #0x10 (16)
0xffff8bdd5690   176  ldr x17, pc+24 (addr 0x0000ffff8bdd56a8)    ;; lazy deoptimization bailout 0
0xffff8bdd5694   180  add x17, x17, x16
0xffff8bdd5698   184  br x17
0xffff8bdd569c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd56a0   192  d63f03e0       constant
0xffff8bdd56a4   196  d503201f       constant
0xffff8bdd56a8   200  8bb06000       constant
0xffff8bdd56ac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdd5610  code target (STUB)  (0xffff8bd170c0)
0xffff8bdd5648  code target (STUB)  (0xffff8bd38080)
0xffff8bdd5658  constant pool (size 24)
0xffff8bdd5690  runtime entry
0xffff8bdd569c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = birthtime
compiler = unknown
Instructions (size = 184)
0xffff8bdd5720     0  sub csp, jssp, #0x8 (8)
0xffff8bdd5724     4  str x3, [jssp, #-8]!
0xffff8bdd5728     8  sub csp, jssp, #0x8 (8)
0xffff8bdd572c    12  str x4, [jssp, #-8]!
0xffff8bdd5730    16  ldr x3, pc+112 (addr 0x0000ffff8bdd57a0)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd5734    20  ldur x3, [x3, #7]
0xffff8bdd5738    24  cmp x3, #0x0 (0)
0xffff8bdd573c    28  b.ne #+0x44 (addr 0xffff8bdd5780)
0xffff8bdd5740    32  tbz w0, #0, #+0x40 (addr 0xffff8bdd5780)
0xffff8bdd5744    36  ldur x3, [x0, #-1]
0xffff8bdd5748    40  ldr x4, pc+96 (addr 0x0000ffff8bdd57a8)    ;; object: 0x32734909 WeakCell for 0x5f507e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>
0xffff8bdd574c    44  ldur x4, [x4, #7]
0xffff8bdd5750    48  cmp x3, x4
0xffff8bdd5754    52  b.ne #+0x2c (addr 0xffff8bdd5780)
0xffff8bdd5758    56  ldr x5, pc+88 (addr 0x0000ffff8bdd57b0)    ;; object: 0x32736061 WeakCell for 0x5f536089 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd575c    60  ldur x5, [x5, #7]
0xffff8bdd5760    64  tbz w5, #0, #+0x20 (addr 0xffff8bdd5780)
0xffff8bdd5764    68  ldursw x4, [x5, #15]
0xffff8bdd5768    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdd5780)
0xffff8bdd576c    76  ldr x4, [jssp], #8
0xffff8bdd5770    80  ldr x3, [jssp], #8
0xffff8bdd5774    84  ldr x2, pc+68 (addr 0x0000ffff8bdd57b8)    ;; object: 0x3270d2a9 <String[9]: birthtime>
0xffff8bdd5778    88  ldr x16, pc+72 (addr 0x0000ffff8bdd57c0)    ;; code: HANDLER, StoreTransitionStub, minor: 198672
0xffff8bdd577c    92  br x16
0xffff8bdd5780    96  ldr x2, pc+72 (addr 0x0000ffff8bdd57c8)    ;; object: 0x3270d2a9 <String[9]: birthtime>
0xffff8bdd5784   100  ldr x4, [jssp], #8
0xffff8bdd5788   104  ldr x3, [jssp], #8
0xffff8bdd578c   108  ldr x16, pc+68 (addr 0x0000ffff8bdd57d0)    ;; code: BUILTIN
0xffff8bdd5790   112  br x16
0xffff8bdd5794   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdd5798   120  d63f03e0       constant
0xffff8bdd579c   124  d503201f       constant
0xffff8bdd57a0   128  327353d1       constant
0xffff8bdd57a4   132  00000000       constant
0xffff8bdd57a8   136  32734909       constant
0xffff8bdd57ac   140  00000000       constant
0xffff8bdd57b0   144  32736061       constant
0xffff8bdd57b4   148  00000000       constant
0xffff8bdd57b8   152  3270d2a9       constant
0xffff8bdd57bc   156  00000000       constant
0xffff8bdd57c0   160  8bdd55e0       constant
0xffff8bdd57c4   164  0000ffff       constant
0xffff8bdd57c8   168  3270d2a9       constant
0xffff8bdd57cc   172  00000000       constant
0xffff8bdd57d0   176  8bd22420       constant
0xffff8bdd57d4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdd5730  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd5748  embedded object  (0x32734909 WeakCell for 0x5f507e29 <Map(FAST_HOLEY_SMI_ELEMENTS)>)
0xffff8bdd5758  embedded object  (0x32736061 WeakCell for 0x5f536089 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd5774  embedded object  (0x3270d2a9 <String[9]: birthtime>)
0xffff8bdd5778  code target (HANDLER)  (0xffff8bdd55e0)
0xffff8bdd5780  embedded object  (0x3270d2a9 <String[9]: birthtime>)
0xffff8bdd578c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdd5794  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = isSymbolicLink
compiler = unknown
Instructions (size = 120)
0xffff8bdd5840     0  sub csp, jssp, #0x8 (8)
0xffff8bdd5844     4  str x3, [jssp, #-8]!
0xffff8bdd5848     8  sub csp, jssp, #0x8 (8)
0xffff8bdd584c    12  str x0, [jssp, #-8]!
0xffff8bdd5850    16  ldr x0, pc+72 (addr 0x0000ffff8bdd5898)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd5854    20  ldur x0, [x0, #7]
0xffff8bdd5858    24  cmp x0, #0x0 (0)
0xffff8bdd585c    28  b.ne #+0x14 (addr 0xffff8bdd5870)
0xffff8bdd5860    32  ldr x3, pc+64 (addr 0x0000ffff8bdd58a0)    ;; object: 0x32736151 WeakCell for 0x569f2831 <an Object with map 0x5f5320f1>
0xffff8bdd5864    36  ldur x3, [x3, #7]
0xffff8bdd5868    40  tbz w3, #0, #+0x8 (addr 0xffff8bdd5870)
0xffff8bdd586c    44  b #+0x14 (addr 0xffff8bdd5880)
0xffff8bdd5870    48  ldr x0, [jssp], #8
0xffff8bdd5874    52  ldr x3, [jssp], #8
0xffff8bdd5878    56  ldr x16, pc+48 (addr 0x0000ffff8bdd58a8)    ;; code: BUILTIN
0xffff8bdd587c    60  br x16
0xffff8bdd5880    64  add jssp, jssp, #0x10 (16)
0xffff8bdd5884    68  mov x1, x3
0xffff8bdd5888    72  ldr x16, pc+40 (addr 0x0000ffff8bdd58b0)    ;; code: HANDLER, LoadConstantStub, minor: 6
0xffff8bdd588c    76  br x16
0xffff8bdd5890    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdd5894    84  d63f03e0       constant
0xffff8bdd5898    88  327353d1       constant
0xffff8bdd589c    92  00000000       constant
0xffff8bdd58a0    96  32736151       constant
0xffff8bdd58a4   100  00000000       constant
0xffff8bdd58a8   104  8bd222e0       constant
0xffff8bdd58ac   108  0000ffff       constant
0xffff8bdd58b0   112  8bd8b020       constant
0xffff8bdd58b4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdd5850  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd5860  embedded object  (0x32736151 WeakCell for 0x569f2831 <an Object with map 0x5f5320f1>)
0xffff8bdd5878  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdd5888  code target (HANDLER)  (0xffff8bd8b020)
0xffff8bdd5890  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _checkModeProperty
compiler = unknown
Instructions (size = 120)
0xffff8bdd5920     0  sub csp, jssp, #0x8 (8)
0xffff8bdd5924     4  str x3, [jssp, #-8]!
0xffff8bdd5928     8  sub csp, jssp, #0x8 (8)
0xffff8bdd592c    12  str x0, [jssp, #-8]!
0xffff8bdd5930    16  ldr x0, pc+72 (addr 0x0000ffff8bdd5978)    ;; object: 0x327353d1 Cell for 0
0xffff8bdd5934    20  ldur x0, [x0, #7]
0xffff8bdd5938    24  cmp x0, #0x0 (0)
0xffff8bdd593c    28  b.ne #+0x14 (addr 0xffff8bdd5950)
0xffff8bdd5940    32  ldr x3, pc+64 (addr 0x0000ffff8bdd5980)    ;; object: 0x327361a1 WeakCell for 0x569f2831 <an Object with map 0x5f5320f1>
0xffff8bdd5944    36  ldur x3, [x3, #7]
0xffff8bdd5948    40  tbz w3, #0, #+0x8 (addr 0xffff8bdd5950)
0xffff8bdd594c    44  b #+0x14 (addr 0xffff8bdd5960)
0xffff8bdd5950    48  ldr x0, [jssp], #8
0xffff8bdd5954    52  ldr x3, [jssp], #8
0xffff8bdd5958    56  ldr x16, pc+48 (addr 0x0000ffff8bdd5988)    ;; code: BUILTIN
0xffff8bdd595c    60  br x16
0xffff8bdd5960    64  add jssp, jssp, #0x10 (16)
0xffff8bdd5964    68  mov x1, x3
0xffff8bdd5968    72  ldr x16, pc+40 (addr 0x0000ffff8bdd5990)    ;; code: HANDLER, LoadConstantStub, minor: 1
0xffff8bdd596c    76  br x16
0xffff8bdd5970    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdd5974    84  d63f03e0       constant
0xffff8bdd5978    88  327353d1       constant
0xffff8bdd597c    92  00000000       constant
0xffff8bdd5980    96  327361a1       constant
0xffff8bdd5984   100  00000000       constant
0xffff8bdd5988   104  8bd222e0       constant
0xffff8bdd598c   108  0000ffff       constant
0xffff8bdd5990   112  8bd43300       constant
0xffff8bdd5994   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdd5930  embedded object  (0x327353d1 Cell for 0)
0xffff8bdd5940  embedded object  (0x327361a1 WeakCell for 0x569f2831 <an Object with map 0x5f5320f1>)
0xffff8bdd5958  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdd5968  code target (HANDLER)  (0xffff8bd43300)
0xffff8bdd5970  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 197)
0xffff8bdd5a00     0  ldur d0, [x1, #31]
0xffff8bdd5a04     4  movz x1, #0xe2c0
0xffff8bdd5a08     8  movk x1, #0x2cb8, lsl #16
0xffff8bdd5a0c    12  ldp x2, x0, [x1]
0xffff8bdd5a10    16  adds x16, x2, #0x10 (16)
0xffff8bdd5a14    20  ccmp x16, x0, #nzCv, lo
0xffff8bdd5a18    24  b.hi #+0x20 (addr 0xffff8bdd5a38)
0xffff8bdd5a1c    28  str x16, [x1]
0xffff8bdd5a20    32  ldr x1, [x26, #120]
0xffff8bdd5a24    36  str x1, [x2]
0xffff8bdd5a28    40  orr x2, x2, #0x1
0xffff8bdd5a2c    44  stur d0, [x2, #7]
0xffff8bdd5a30    48  mov x0, x2
0xffff8bdd5a34    52  ret
0xffff8bdd5a38    56  sub csp, jssp, #0x10 (16)
0xffff8bdd5a3c    60  stp fp, lr, [jssp, #-16]!
0xffff8bdd5a40    64  movz fp, #0xa00000000
0xffff8bdd5a44    68  sub csp, jssp, #0x8 (8)
0xffff8bdd5a48    72  str fp, [jssp, #-8]!
0xffff8bdd5a4c    76  add fp, jssp, #0x8 (8)
0xffff8bdd5a50    80  movz x2, #0x0
0xffff8bdd5a54    84  mov x16, lr
0xffff8bdd5a58    88  ldr x17, pc+64 (addr 0x0000ffff8bdd5a98)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdd5a5c    92  blr x17
0xffff8bdd5a60    96  ldur cp, [fp, #-8]
0xffff8bdd5a64   100  movz x0, #0x0
0xffff8bdd5a68   104  movz x1, #0x4b48
0xffff8bdd5a6c   108  movk x1, #0xe4, lsl #16
0xffff8bdd5a70   112  ldr x16, pc+48 (addr 0x0000ffff8bdd5aa0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdd5a74   116  blr x16
0xffff8bdd5a78   120  str x0, [jssp, #16]
0xffff8bdd5a7c   124  ldr x16, pc+44 (addr 0x0000ffff8bdd5aa8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdd5a80   128  blr x16
0xffff8bdd5a84   132  ldr lr, [jssp, #16]
0xffff8bdd5a88   136  ldp xzr, fp, [jssp], #24
0xffff8bdd5a8c   140  b #-0x60 (addr 0xffff8bdd5a2c)
0xffff8bdd5a90   144  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bdd5a94   148  d63f03e0       constant
0xffff8bdd5a98   152  8bd06820       constant
0xffff8bdd5a9c   156  0000ffff       constant
0xffff8bdd5aa0   160  8bd06260       constant
0xffff8bdd5aa4   164  0000ffff       constant
0xffff8bdd5aa8   168  8bd068e0       constant
0xffff8bdd5aac   172  0000ffff       constant


Safepoints (size = 21)
0xffff8bdd5a78   120  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 11)
0xffff8bdd5a58  code target (STUB)  (0xffff8bd06820)
0xffff8bdd5a70  code target (STUB)  (0xffff8bd06260)
0xffff8bdd5a7c  code target (STUB)  (0xffff8bd068e0)
0xffff8bdd5a90  constant pool (size 32)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 197)
0xffff8bdd5a00     0  ldur d0, [x1, #31]
0xffff8bdd5a04     4  movz x1, #0xe2c0
0xffff8bdd5a08     8  movk x1, #0x2cb8, lsl #16
0xffff8bdd5a0c    12  ldp x2, x0, [x1]
0xffff8bdd5a10    16  adds x16, x2, #0x10 (16)
0xffff8bdd5a14    20  ccmp x16, x0, #nzCv, lo
0xffff8bdd5a18    24  b.hi #+0x20 (addr 0xffff8bdd5a38)
0xffff8bdd5a1c    28  str x16, [x1]
0xffff8bdd5a20    32  ldr x1, [x26, #120]
0xffff8bdd5a24    36  str x1, [x2]
0xffff8bdd5a28    40  orr x2, x2, #0x1
0xffff8bdd5a2c    44  stur d0, [x2, #7]
0xffff8bdd5a30    48  mov x0, x2
0xffff8bdd5a34    52  ret
0xffff8bdd5a38    56  sub csp, jssp, #0x10 (16)
0xffff8bdd5a3c    60  stp fp, lr, [jssp, #-16]!
0xffff8bdd5a40    64  movz fp, #0xa00000000
0xffff8bdd5a44    68  sub csp, jssp, #0x8 (8)
0xffff8bdd5a48    72  str fp, [jssp, #-8]!
0xffff8bdd5a4c    76  add fp, jssp, #0x8 (8)
0xffff8bdd5a50    80  movz x2, #0x0
0xffff8bdd5a54    84  mov x16, lr
0xffff8bdd5a58    88  ldr x17, pc+64 (addr 0x0000ffff8bdd5a98)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdd5a5c    92  blr x17
0xffff8bdd5a60    96  ldur cp, [fp, #-8]
0xffff8bdd5a64   100  movz x0, #0x0
0xffff8bdd5a68   104  movz x1, #0x4b48
0xffff8bdd5a6c   108  movk x1, #0xe4, lsl #16
0xffff8bdd5a70   112  ldr x16, pc+48 (addr 0x0000ffff8bdd5aa0)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdd5a74   116  blr x16
0xffff8bdd5a78   120  str x0, [jssp, #16]
0xffff8bdd5a7c   124  ldr x16, pc+44 (addr 0x0000ffff8bdd5aa8)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdd5a80   128  blr x16
0xffff8bdd5a84   132  ldr lr, [jssp, #16]
0xffff8bdd5a88   136  ldp xzr, fp, [jssp], #24
0xffff8bdd5a8c   140  b #-0x60 (addr 0xffff8bdd5a2c)
0xffff8bdd5a90   144  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bdd5a94   148  d63f03e0       constant
0xffff8bdd5a98   152  8bd06820       constant
0xffff8bdd5a9c   156  0000ffff       constant
0xffff8bdd5aa0   160  8bd06260       constant
0xffff8bdd5aa4   164  0000ffff       constant
0xffff8bdd5aa8   168  8bd068e0       constant
0xffff8bdd5aac   172  0000ffff       constant


Safepoints (size = 21)
0xffff8bdd5a78   120  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 11)
0xffff8bdd5a58  code target (STUB)  (0xffff8bd06820)
0xffff8bdd5a70  code target (STUB)  (0xffff8bd06260)
0xffff8bdd5a7c  code target (STUB)  (0xffff8bd068e0)
0xffff8bdd5a90  constant pool (size 32)


kind = HANDLER
major_key = <NoCache>Stub
name = set
compiler = unknown
Instructions (size = 120)
0xffff8bdd5b40     0  sub csp, jssp, #0x8 (8)
0xffff8bdd5b44     4  str x3, [jssp, #-8]!
0xffff8bdd5b48     8  sub csp, jssp, #0x8 (8)
0xffff8bdd5b4c    12  str x0, [jssp, #-8]!
0xffff8bdd5b50    16  ldr x0, pc+72 (addr 0x0000ffff8bdd5b98)    ;; object: 0x32735189 Cell for 0
0xffff8bdd5b54    20  ldur x0, [x0, #7]
0xffff8bdd5b58    24  cmp x0, #0x0 (0)
0xffff8bdd5b5c    28  b.ne #+0x14 (addr 0xffff8bdd5b70)
0xffff8bdd5b60    32  ldr x3, pc+64 (addr 0x0000ffff8bdd5ba0)    ;; object: 0x32736229 WeakCell for 0x569757c1 <an Object with map 0x5f511eb1>
0xffff8bdd5b64    36  ldur x3, [x3, #7]
0xffff8bdd5b68    40  tbz w3, #0, #+0x8 (addr 0xffff8bdd5b70)
0xffff8bdd5b6c    44  b #+0x14 (addr 0xffff8bdd5b80)
0xffff8bdd5b70    48  ldr x0, [jssp], #8
0xffff8bdd5b74    52  ldr x3, [jssp], #8
0xffff8bdd5b78    56  ldr x16, pc+48 (addr 0x0000ffff8bdd5ba8)    ;; code: BUILTIN
0xffff8bdd5b7c    60  br x16
0xffff8bdd5b80    64  add jssp, jssp, #0x10 (16)
0xffff8bdd5b84    68  mov x1, x3
0xffff8bdd5b88    72  ldr x16, pc+40 (addr 0x0000ffff8bdd5bb0)    ;; code: HANDLER, LoadConstantStub, minor: 4
0xffff8bdd5b8c    76  br x16
0xffff8bdd5b90    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdd5b94    84  d63f03e0       constant
0xffff8bdd5b98    88  32735189       constant
0xffff8bdd5b9c    92  00000000       constant
0xffff8bdd5ba0    96  32736229       constant
0xffff8bdd5ba4   100  00000000       constant
0xffff8bdd5ba8   104  8bd222e0       constant
0xffff8bdd5bac   108  0000ffff       constant
0xffff8bdd5bb0   112  8bd43480       constant
0xffff8bdd5bb4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdd5b50  embedded object  (0x32735189 Cell for 0)
0xffff8bdd5b60  embedded object  (0x32736229 WeakCell for 0x569757c1 <an Object with map 0x5f511eb1>)
0xffff8bdd5b78  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdd5b88  code target (HANDLER)  (0xffff8bd43480)
0xffff8bdd5b90  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 192)
0xffff8bdd7d60     0  ldur x4, [x1, #15]
0xffff8bdd7d64     4  ldur w5, [x1, #27]
0xffff8bdd7d68     8  tbnz w2, #0, #+0x20 (addr 0xffff8bdd7d88)
0xffff8bdd7d6c    12  asr x7, x2, #32
0xffff8bdd7d70    16  cmp w7, w5
0xffff8bdd7d74    20  b.hs #+0x5c (addr 0xffff8bdd7dd0)
0xffff8bdd7d78    24  add x0, x4, w7, sxtw #3
0xffff8bdd7d7c    28  ldur w1, [x0, #19]
0xffff8bdd7d80    32  lsl x0, x1, #32
0xffff8bdd7d84    36  ret
0xffff8bdd7d88    40  sub csp, jssp, #0x10 (16)
0xffff8bdd7d8c    44  stp fp, lr, [jssp, #-16]!
0xffff8bdd7d90    48  movz fp, #0xa00000000
0xffff8bdd7d94    52  sub csp, jssp, #0x8 (8)
0xffff8bdd7d98    56  str fp, [jssp, #-8]!
0xffff8bdd7d9c    60  add fp, jssp, #0x8 (8)
0xffff8bdd7da0    64  ldur x16, [x2, #-1]
0xffff8bdd7da4    68  ldr x17, [x26, #120]
0xffff8bdd7da8    72  cmp x16, x17
0xffff8bdd7dac    76  b.ne #+0x34 (addr 0xffff8bdd7de0)
0xffff8bdd7db0    80  ldur d29, [x2, #7]
0xffff8bdd7db4    84  fcvtzs w7, d29
0xffff8bdd7db8    88  scvtf d0, w7
0xffff8bdd7dbc    92  fcmp d29, d0
0xffff8bdd7dc0    96  b.ne #+0x20 (addr 0xffff8bdd7de0)
0xffff8bdd7dc4   100  ldr lr, [jssp, #16]
0xffff8bdd7dc8   104  ldp xzr, fp, [jssp], #24
0xffff8bdd7dcc   108  b #-0x5c (addr 0xffff8bdd7d70)
0xffff8bdd7dd0   112  movz x16, #0x0
0xffff8bdd7dd4   116  sub csp, jssp, #0x10 (16)
0xffff8bdd7dd8   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd7ddc   124  bl #+0xc (addr 0xffff8bdd7de8)
0xffff8bdd7de0   128  movz x16, #0x8
0xffff8bdd7de4   132  bl #+0x14 (addr 0xffff8bdd7df8)
0xffff8bdd7de8   136  movz x17, #0xa00000000
0xffff8bdd7dec   140  sub csp, jssp, #0x10 (16)
0xffff8bdd7df0   144  stp x17, cp, [jssp, #-16]!
0xffff8bdd7df4   148  add fp, jssp, #0x10 (16)
0xffff8bdd7df8   152  ldr x17, pc+24 (addr 0x0000ffff8bdd7e10)    ;; lazy deoptimization bailout 0
0xffff8bdd7dfc   156  add x17, x17, x16
0xffff8bdd7e00   160  br x17
0xffff8bdd7e04   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd7e08   168  d63f03e0       constant
0xffff8bdd7e0c   172  d503201f       constant
0xffff8bdd7e10   176  8bb06000       constant
0xffff8bdd7e14   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bdd7df8  runtime entry
0xffff8bdd7e04  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 192)
0xffff8bdd7d60     0  ldur x4, [x1, #15]
0xffff8bdd7d64     4  ldur w5, [x1, #27]
0xffff8bdd7d68     8  tbnz w2, #0, #+0x20 (addr 0xffff8bdd7d88)
0xffff8bdd7d6c    12  asr x7, x2, #32
0xffff8bdd7d70    16  cmp w7, w5
0xffff8bdd7d74    20  b.hs #+0x5c (addr 0xffff8bdd7dd0)
0xffff8bdd7d78    24  add x0, x4, w7, sxtw #3
0xffff8bdd7d7c    28  ldur w1, [x0, #19]
0xffff8bdd7d80    32  lsl x0, x1, #32
0xffff8bdd7d84    36  ret
0xffff8bdd7d88    40  sub csp, jssp, #0x10 (16)
0xffff8bdd7d8c    44  stp fp, lr, [jssp, #-16]!
0xffff8bdd7d90    48  movz fp, #0xa00000000
0xffff8bdd7d94    52  sub csp, jssp, #0x8 (8)
0xffff8bdd7d98    56  str fp, [jssp, #-8]!
0xffff8bdd7d9c    60  add fp, jssp, #0x8 (8)
0xffff8bdd7da0    64  ldur x16, [x2, #-1]
0xffff8bdd7da4    68  ldr x17, [x26, #120]
0xffff8bdd7da8    72  cmp x16, x17
0xffff8bdd7dac    76  b.ne #+0x34 (addr 0xffff8bdd7de0)
0xffff8bdd7db0    80  ldur d29, [x2, #7]
0xffff8bdd7db4    84  fcvtzs w7, d29
0xffff8bdd7db8    88  scvtf d0, w7
0xffff8bdd7dbc    92  fcmp d29, d0
0xffff8bdd7dc0    96  b.ne #+0x20 (addr 0xffff8bdd7de0)
0xffff8bdd7dc4   100  ldr lr, [jssp, #16]
0xffff8bdd7dc8   104  ldp xzr, fp, [jssp], #24
0xffff8bdd7dcc   108  b #-0x5c (addr 0xffff8bdd7d70)
0xffff8bdd7dd0   112  movz x16, #0x0
0xffff8bdd7dd4   116  sub csp, jssp, #0x10 (16)
0xffff8bdd7dd8   120  stp fp, lr, [jssp, #-16]!
0xffff8bdd7ddc   124  bl #+0xc (addr 0xffff8bdd7de8)
0xffff8bdd7de0   128  movz x16, #0x8
0xffff8bdd7de4   132  bl #+0x14 (addr 0xffff8bdd7df8)
0xffff8bdd7de8   136  movz x17, #0xa00000000
0xffff8bdd7dec   140  sub csp, jssp, #0x10 (16)
0xffff8bdd7df0   144  stp x17, cp, [jssp, #-16]!
0xffff8bdd7df4   148  add fp, jssp, #0x10 (16)
0xffff8bdd7df8   152  ldr x17, pc+24 (addr 0x0000ffff8bdd7e10)    ;; lazy deoptimization bailout 0
0xffff8bdd7dfc   156  add x17, x17, x16
0xffff8bdd7e00   160  br x17
0xffff8bdd7e04   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd7e08   168  d63f03e0       constant
0xffff8bdd7e0c   172  d503201f       constant
0xffff8bdd7e10   176  8bb06000       constant
0xffff8bdd7e14   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bdd7df8  runtime entry
0xffff8bdd7e04  constant pool (size 20)


--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 477)
0xffff8bdd8ac0     0  ldur x4, [x3, #47]
0xffff8bdd8ac4     4  tbnz w2, #0, #+0xa0 (addr 0xffff8bdd8b64)
0xffff8bdd8ac8     8  asr x6, x2, #32
0xffff8bdd8acc    12  add x5, x4, #0x17 (23)
0xffff8bdd8ad0    16  ldr x7, [x5, w6, sxtw #3]
0xffff8bdd8ad4    20  ldr x4, pc+324 (addr 0x0000ffff8bdd8c18)    ;; object: 0x26c04241 <undefined>
0xffff8bdd8ad8    24  cmp x7, x4
0xffff8bdd8adc    28  b.eq #+0x84 (addr 0xffff8bdd8b60)
0xffff8bdd8ae0    32  ldur x4, [x7, #7]
0xffff8bdd8ae4    36  ldur x5, [x4, #-1]
0xffff8bdd8ae8    40  ldrb w6, [x5, #7]
0xffff8bdd8aec    44  cmp w6, #0x5 (5)
0xffff8bdd8af0    48  b.ne #+0x70 (addr 0xffff8bdd8b60)
0xffff8bdd8af4    52  movz x1, #0xe2c0
0xffff8bdd8af8    56  movk x1, #0x2cb8, lsl #16
0xffff8bdd8afc    60  ldp x2, x0, [x1]
0xffff8bdd8b00    64  adds x16, x2, #0x38 (56)
0xffff8bdd8b04    68  ccmp x16, x0, #nzCv, lo
0xffff8bdd8b08    72  b.hi #+0xa4 (addr 0xffff8bdd8bac)
0xffff8bdd8b0c    76  str x16, [x1]
0xffff8bdd8b10    80  orr x2, x2, #0x1
0xffff8bdd8b14    84  stur x5, [x2, #-1]
0xffff8bdd8b18    88  ldur x0, [x4, #7]
0xffff8bdd8b1c    92  stur x0, [x2, #7]
0xffff8bdd8b20    96  ldur x0, [x4, #15]
0xffff8bdd8b24   100  stur x0, [x2, #15]
0xffff8bdd8b28   104  ldur x0, [x4, #23]
0xffff8bdd8b2c   108  stur x0, [x2, #23]
0xffff8bdd8b30   112  ldur x0, [x4, #31]
0xffff8bdd8b34   116  stur x0, [x2, #31]
0xffff8bdd8b38   120  add x0, x2, #0x28 (40)
0xffff8bdd8b3c   124  ldr x1, pc+228 (addr 0x0000ffff8bdd8c20)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd8b40   128  stur x1, [x0, #-1]
0xffff8bdd8b44   132  stur x7, [x0, #7]
0xffff8bdd8b48   136  ldur w0, [x7, #35]
0xffff8bdd8b4c   140  add w0, w0, #0x1 (1)
0xffff8bdd8b50   144  lsl x0, x0, #32
0xffff8bdd8b54   148  stur x0, [x7, #31]
0xffff8bdd8b58   152  mov x0, x2
0xffff8bdd8b5c   156  ret
0xffff8bdd8b60   160  b #+0xe0 (addr 0xffff8bdd8c40)
0xffff8bdd8b64   164  sub csp, jssp, #0x10 (16)
0xffff8bdd8b68   168  stp fp, lr, [jssp, #-16]!
0xffff8bdd8b6c   172  movz fp, #0xa00000000
0xffff8bdd8b70   176  sub csp, jssp, #0x8 (8)
0xffff8bdd8b74   180  str fp, [jssp, #-8]!
0xffff8bdd8b78   184  add fp, jssp, #0x8 (8)
0xffff8bdd8b7c   188  ldur x16, [x2, #-1]
0xffff8bdd8b80   192  ldr x17, [x26, #120]
0xffff8bdd8b84   196  cmp x16, x17
0xffff8bdd8b88   200  b.ne #+0xc8 (addr 0xffff8bdd8c50)
0xffff8bdd8b8c   204  ldur d29, [x2, #7]
0xffff8bdd8b90   208  fcvtzs w6, d29
0xffff8bdd8b94   212  scvtf d0, w6
0xffff8bdd8b98   216  fcmp d29, d0
0xffff8bdd8b9c   220  b.ne #+0xb4 (addr 0xffff8bdd8c50)
0xffff8bdd8ba0   224  ldr lr, [jssp, #16]
0xffff8bdd8ba4   228  ldp xzr, fp, [jssp], #24
0xffff8bdd8ba8   232  b #-0xdc (addr 0xffff8bdd8acc)
0xffff8bdd8bac   236  sub csp, jssp, #0x10 (16)
0xffff8bdd8bb0   240  stp fp, lr, [jssp, #-16]!
0xffff8bdd8bb4   244  movz fp, #0xa00000000
0xffff8bdd8bb8   248  sub csp, jssp, #0x8 (8)
0xffff8bdd8bbc   252  str fp, [jssp, #-8]!
0xffff8bdd8bc0   256  add fp, jssp, #0x8 (8)
0xffff8bdd8bc4   260  movz x2, #0x0
0xffff8bdd8bc8   264  mov x16, lr
0xffff8bdd8bcc   268  ldr x17, pc+92 (addr 0x0000ffff8bdd8c28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdd8bd0   272  blr x17
0xffff8bdd8bd4   276  movz x0, #0x3800000000
0xffff8bdd8bd8   280  movz x10, #0x0
0xffff8bdd8bdc   284  sub csp, jssp, #0x10 (16)
0xffff8bdd8be0   288  stp x10, x0, [jssp, #-16]!
0xffff8bdd8be4   292  movz x0, #0x2
0xffff8bdd8be8   296  movz x1, #0x5b88
0xffff8bdd8bec   300  movk x1, #0xe2, lsl #16
0xffff8bdd8bf0   304  ldr x16, pc+64 (addr 0x0000ffff8bdd8c30)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdd8bf4   308  blr x16
0xffff8bdd8bf8   312  str x0, [jssp, #16]
0xffff8bdd8bfc   316  ldr x16, pc+60 (addr 0x0000ffff8bdd8c38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdd8c00   320  blr x16
0xffff8bdd8c04   324  ldr lr, [jssp, #16]
0xffff8bdd8c08   328  ldp xzr, fp, [jssp], #24
0xffff8bdd8c0c   332  b #-0xf8 (addr 0xffff8bdd8b14)
0xffff8bdd8c10   336  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff8bdd8c14   340  d63f03e0       constant
0xffff8bdd8c18   344  26c04241       constant
0xffff8bdd8c1c   348  00000000       constant
0xffff8bdd8c20   352  5f505d81       constant
0xffff8bdd8c24   356  00000000       constant
0xffff8bdd8c28   360  8bd06820       constant
0xffff8bdd8c2c   364  0000ffff       constant
0xffff8bdd8c30   368  8bd06260       constant
0xffff8bdd8c34   372  0000ffff       constant
0xffff8bdd8c38   376  8bd068e0       constant
0xffff8bdd8c3c   380  0000ffff       constant
0xffff8bdd8c40   384  movz x16, #0x0
0xffff8bdd8c44   388  sub csp, jssp, #0x10 (16)
0xffff8bdd8c48   392  stp fp, lr, [jssp, #-16]!
0xffff8bdd8c4c   396  bl #+0xc (addr 0xffff8bdd8c58)
0xffff8bdd8c50   400  movz x16, #0x8
0xffff8bdd8c54   404  bl #+0x14 (addr 0xffff8bdd8c68)
0xffff8bdd8c58   408  movz x17, #0xa00000000
0xffff8bdd8c5c   412  sub csp, jssp, #0x10 (16)
0xffff8bdd8c60   416  stp x17, cp, [jssp, #-16]!
0xffff8bdd8c64   420  add fp, jssp, #0x10 (16)
0xffff8bdd8c68   424  ldr x17, pc+24 (addr 0x0000ffff8bdd8c80)    ;; lazy deoptimization bailout 0
0xffff8bdd8c6c   428  add x17, x17, x16
0xffff8bdd8c70   432  br x17
0xffff8bdd8c74   436  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd8c78   440  d63f03e0       constant
0xffff8bdd8c7c   444  d503201f       constant
0xffff8bdd8c80   448  8bb06000       constant
0xffff8bdd8c84   452  0000ffff       constant


Safepoints (size = 21)
0xffff8bdd8bf8   312  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff8bdd8ad4  embedded object  (0x26c04241 <undefined>)
0xffff8bdd8b3c  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd8bcc  code target (STUB)  (0xffff8bd06820)
0xffff8bdd8bf0  code target (STUB)  (0xffff8bd06260)
0xffff8bdd8bfc  code target (STUB)  (0xffff8bd068e0)
0xffff8bdd8c10  constant pool (size 48)
0xffff8bdd8c68  runtime entry
0xffff8bdd8c74  constant pool (size 20)

--- End code ---
kind = STUB
major_key = FastCloneShallowObjectStub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 477)
0xffff8bdd8ac0     0  ldur x4, [x3, #47]
0xffff8bdd8ac4     4  tbnz w2, #0, #+0xa0 (addr 0xffff8bdd8b64)
0xffff8bdd8ac8     8  asr x6, x2, #32
0xffff8bdd8acc    12  add x5, x4, #0x17 (23)
0xffff8bdd8ad0    16  ldr x7, [x5, w6, sxtw #3]
0xffff8bdd8ad4    20  ldr x4, pc+324 (addr 0x0000ffff8bdd8c18)    ;; object: 0x26c04241 <undefined>
0xffff8bdd8ad8    24  cmp x7, x4
0xffff8bdd8adc    28  b.eq #+0x84 (addr 0xffff8bdd8b60)
0xffff8bdd8ae0    32  ldur x4, [x7, #7]
0xffff8bdd8ae4    36  ldur x5, [x4, #-1]
0xffff8bdd8ae8    40  ldrb w6, [x5, #7]
0xffff8bdd8aec    44  cmp w6, #0x5 (5)
0xffff8bdd8af0    48  b.ne #+0x70 (addr 0xffff8bdd8b60)
0xffff8bdd8af4    52  movz x1, #0xe2c0
0xffff8bdd8af8    56  movk x1, #0x2cb8, lsl #16
0xffff8bdd8afc    60  ldp x2, x0, [x1]
0xffff8bdd8b00    64  adds x16, x2, #0x38 (56)
0xffff8bdd8b04    68  ccmp x16, x0, #nzCv, lo
0xffff8bdd8b08    72  b.hi #+0xa4 (addr 0xffff8bdd8bac)
0xffff8bdd8b0c    76  str x16, [x1]
0xffff8bdd8b10    80  orr x2, x2, #0x1
0xffff8bdd8b14    84  stur x5, [x2, #-1]
0xffff8bdd8b18    88  ldur x0, [x4, #7]
0xffff8bdd8b1c    92  stur x0, [x2, #7]
0xffff8bdd8b20    96  ldur x0, [x4, #15]
0xffff8bdd8b24   100  stur x0, [x2, #15]
0xffff8bdd8b28   104  ldur x0, [x4, #23]
0xffff8bdd8b2c   108  stur x0, [x2, #23]
0xffff8bdd8b30   112  ldur x0, [x4, #31]
0xffff8bdd8b34   116  stur x0, [x2, #31]
0xffff8bdd8b38   120  add x0, x2, #0x28 (40)
0xffff8bdd8b3c   124  ldr x1, pc+228 (addr 0x0000ffff8bdd8c20)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdd8b40   128  stur x1, [x0, #-1]
0xffff8bdd8b44   132  stur x7, [x0, #7]
0xffff8bdd8b48   136  ldur w0, [x7, #35]
0xffff8bdd8b4c   140  add w0, w0, #0x1 (1)
0xffff8bdd8b50   144  lsl x0, x0, #32
0xffff8bdd8b54   148  stur x0, [x7, #31]
0xffff8bdd8b58   152  mov x0, x2
0xffff8bdd8b5c   156  ret
0xffff8bdd8b60   160  b #+0xe0 (addr 0xffff8bdd8c40)
0xffff8bdd8b64   164  sub csp, jssp, #0x10 (16)
0xffff8bdd8b68   168  stp fp, lr, [jssp, #-16]!
0xffff8bdd8b6c   172  movz fp, #0xa00000000
0xffff8bdd8b70   176  sub csp, jssp, #0x8 (8)
0xffff8bdd8b74   180  str fp, [jssp, #-8]!
0xffff8bdd8b78   184  add fp, jssp, #0x8 (8)
0xffff8bdd8b7c   188  ldur x16, [x2, #-1]
0xffff8bdd8b80   192  ldr x17, [x26, #120]
0xffff8bdd8b84   196  cmp x16, x17
0xffff8bdd8b88   200  b.ne #+0xc8 (addr 0xffff8bdd8c50)
0xffff8bdd8b8c   204  ldur d29, [x2, #7]
0xffff8bdd8b90   208  fcvtzs w6, d29
0xffff8bdd8b94   212  scvtf d0, w6
0xffff8bdd8b98   216  fcmp d29, d0
0xffff8bdd8b9c   220  b.ne #+0xb4 (addr 0xffff8bdd8c50)
0xffff8bdd8ba0   224  ldr lr, [jssp, #16]
0xffff8bdd8ba4   228  ldp xzr, fp, [jssp], #24
0xffff8bdd8ba8   232  b #-0xdc (addr 0xffff8bdd8acc)
0xffff8bdd8bac   236  sub csp, jssp, #0x10 (16)
0xffff8bdd8bb0   240  stp fp, lr, [jssp, #-16]!
0xffff8bdd8bb4   244  movz fp, #0xa00000000
0xffff8bdd8bb8   248  sub csp, jssp, #0x8 (8)
0xffff8bdd8bbc   252  str fp, [jssp, #-8]!
0xffff8bdd8bc0   256  add fp, jssp, #0x8 (8)
0xffff8bdd8bc4   260  movz x2, #0x0
0xffff8bdd8bc8   264  mov x16, lr
0xffff8bdd8bcc   268  ldr x17, pc+92 (addr 0x0000ffff8bdd8c28)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdd8bd0   272  blr x17
0xffff8bdd8bd4   276  movz x0, #0x3800000000
0xffff8bdd8bd8   280  movz x10, #0x0
0xffff8bdd8bdc   284  sub csp, jssp, #0x10 (16)
0xffff8bdd8be0   288  stp x10, x0, [jssp, #-16]!
0xffff8bdd8be4   292  movz x0, #0x2
0xffff8bdd8be8   296  movz x1, #0x5b88
0xffff8bdd8bec   300  movk x1, #0xe2, lsl #16
0xffff8bdd8bf0   304  ldr x16, pc+64 (addr 0x0000ffff8bdd8c30)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdd8bf4   308  blr x16
0xffff8bdd8bf8   312  str x0, [jssp, #16]
0xffff8bdd8bfc   316  ldr x16, pc+60 (addr 0x0000ffff8bdd8c38)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdd8c00   320  blr x16
0xffff8bdd8c04   324  ldr lr, [jssp, #16]
0xffff8bdd8c08   328  ldp xzr, fp, [jssp], #24
0xffff8bdd8c0c   332  b #-0xf8 (addr 0xffff8bdd8b14)
0xffff8bdd8c10   336  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff8bdd8c14   340  d63f03e0       constant
0xffff8bdd8c18   344  26c04241       constant
0xffff8bdd8c1c   348  00000000       constant
0xffff8bdd8c20   352  5f505d81       constant
0xffff8bdd8c24   356  00000000       constant
0xffff8bdd8c28   360  8bd06820       constant
0xffff8bdd8c2c   364  0000ffff       constant
0xffff8bdd8c30   368  8bd06260       constant
0xffff8bdd8c34   372  0000ffff       constant
0xffff8bdd8c38   376  8bd068e0       constant
0xffff8bdd8c3c   380  0000ffff       constant
0xffff8bdd8c40   384  movz x16, #0x0
0xffff8bdd8c44   388  sub csp, jssp, #0x10 (16)
0xffff8bdd8c48   392  stp fp, lr, [jssp, #-16]!
0xffff8bdd8c4c   396  bl #+0xc (addr 0xffff8bdd8c58)
0xffff8bdd8c50   400  movz x16, #0x8
0xffff8bdd8c54   404  bl #+0x14 (addr 0xffff8bdd8c68)
0xffff8bdd8c58   408  movz x17, #0xa00000000
0xffff8bdd8c5c   412  sub csp, jssp, #0x10 (16)
0xffff8bdd8c60   416  stp x17, cp, [jssp, #-16]!
0xffff8bdd8c64   420  add fp, jssp, #0x10 (16)
0xffff8bdd8c68   424  ldr x17, pc+24 (addr 0x0000ffff8bdd8c80)    ;; lazy deoptimization bailout 0
0xffff8bdd8c6c   428  add x17, x17, x16
0xffff8bdd8c70   432  br x17
0xffff8bdd8c74   436  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdd8c78   440  d63f03e0       constant
0xffff8bdd8c7c   444  d503201f       constant
0xffff8bdd8c80   448  8bb06000       constant
0xffff8bdd8c84   452  0000ffff       constant


Safepoints (size = 21)
0xffff8bdd8bf8   312  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff8bdd8ad4  embedded object  (0x26c04241 <undefined>)
0xffff8bdd8b3c  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdd8bcc  code target (STUB)  (0xffff8bd06820)
0xffff8bdd8bf0  code target (STUB)  (0xffff8bd06260)
0xffff8bdd8bfc  code target (STUB)  (0xffff8bd068e0)
0xffff8bdd8c10  constant pool (size 48)
0xffff8bdd8c68  runtime entry
0xffff8bdd8c74  constant pool (size 20)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MEGAMORPHIC
extra_ic_state = 2709
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 181)
0xffff8bddaa00     0  movz x16, #0xa00000000
0xffff8bddaa04     4  sub csp, jssp, #0x10 (16)
0xffff8bddaa08     8  stp fp, lr, [jssp, #-16]!
0xffff8bddaa0c    12  mov fp, jssp
0xffff8bddaa10    16  sub csp, jssp, #0x20 (32)
0xffff8bddaa14    20  sub jssp, jssp, #0x20 (32)
0xffff8bddaa18    24  stur x16, [fp, #-8]
0xffff8bddaa1c    28  str x1, [jssp, #16]
0xffff8bddaa20    32  str x0, [jssp, #8]
0xffff8bddaa24    36  str cp, [jssp]
0xffff8bddaa28    40  mov x3, cp
0xffff8bddaa2c    44  mov x2, x0
0xffff8bddaa30    48  tbnz w2, #0, #+0x48 (addr 0xffff8bddaa78)
0xffff8bddaa34    52  sub csp, jssp, #0x10 (16)
0xffff8bddaa38    56  stp x2, x1, [jssp, #-16]!
0xffff8bddaa3c    60  mov cp, x3
0xffff8bddaa40    64  movz x0, #0x2
0xffff8bddaa44    68  movz x1, #0xf938
0xffff8bddaa48    72  movk x1, #0xe4, lsl #16
0xffff8bddaa4c    76  ldr x16, pc+36 (addr 0x0000ffff8bddaa70)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bddaa50    80  blr x16
0xffff8bddaa54    84  ldr cp, [jssp]
0xffff8bddaa58    88  mov jssp, fp
0xffff8bddaa5c    92  ldp fp, lr, [jssp], #16
0xffff8bddaa60    96  ret
0xffff8bddaa64   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bddaa68   104  d63f03e0       constant
0xffff8bddaa6c   108  d503201f       constant
0xffff8bddaa70   112  8bd06060       constant
0xffff8bddaa74   116  0000ffff       constant
0xffff8bddaa78   120  movz x16, #0x0
0xffff8bddaa7c   124  bl #+0x4 (addr 0xffff8bddaa80)
0xffff8bddaa80   128  ldr x17, pc+24 (addr 0x0000ffff8bddaa98)    ;; lazy deoptimization bailout 0
0xffff8bddaa84   132  add x17, x17, x16
0xffff8bddaa88   136  br x17
0xffff8bddaa8c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bddaa90   144  d63f03e0       constant
0xffff8bddaa94   148  d503201f       constant
0xffff8bddaa98   152  8bb06000       constant
0xffff8bddaa9c   156  0000ffff       constant


Safepoints (size = 21)
0xffff8bddaa54    84  111000 (sp -> fp)       1

RelocInfo (size = 17)
0xffff8bddaa4c  code target (STUB)  (0xffff8bd06060)
0xffff8bddaa64  constant pool (size 20)
0xffff8bddaa80  runtime entry
0xffff8bddaa8c  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MEGAMORPHIC
extra_ic_state = 2709
name = BinaryOpICStub(SHR:Generic*Smi->Smi)
compiler = crankshaft
Instructions (size = 181)
0xffff8bddaa00     0  movz x16, #0xa00000000
0xffff8bddaa04     4  sub csp, jssp, #0x10 (16)
0xffff8bddaa08     8  stp fp, lr, [jssp, #-16]!
0xffff8bddaa0c    12  mov fp, jssp
0xffff8bddaa10    16  sub csp, jssp, #0x20 (32)
0xffff8bddaa14    20  sub jssp, jssp, #0x20 (32)
0xffff8bddaa18    24  stur x16, [fp, #-8]
0xffff8bddaa1c    28  str x1, [jssp, #16]
0xffff8bddaa20    32  str x0, [jssp, #8]
0xffff8bddaa24    36  str cp, [jssp]
0xffff8bddaa28    40  mov x3, cp
0xffff8bddaa2c    44  mov x2, x0
0xffff8bddaa30    48  tbnz w2, #0, #+0x48 (addr 0xffff8bddaa78)
0xffff8bddaa34    52  sub csp, jssp, #0x10 (16)
0xffff8bddaa38    56  stp x2, x1, [jssp, #-16]!
0xffff8bddaa3c    60  mov cp, x3
0xffff8bddaa40    64  movz x0, #0x2
0xffff8bddaa44    68  movz x1, #0xf938
0xffff8bddaa48    72  movk x1, #0xe4, lsl #16
0xffff8bddaa4c    76  ldr x16, pc+36 (addr 0x0000ffff8bddaa70)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bddaa50    80  blr x16
0xffff8bddaa54    84  ldr cp, [jssp]
0xffff8bddaa58    88  mov jssp, fp
0xffff8bddaa5c    92  ldp fp, lr, [jssp], #16
0xffff8bddaa60    96  ret
0xffff8bddaa64   100  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bddaa68   104  d63f03e0       constant
0xffff8bddaa6c   108  d503201f       constant
0xffff8bddaa70   112  8bd06060       constant
0xffff8bddaa74   116  0000ffff       constant
0xffff8bddaa78   120  movz x16, #0x0
0xffff8bddaa7c   124  bl #+0x4 (addr 0xffff8bddaa80)
0xffff8bddaa80   128  ldr x17, pc+24 (addr 0x0000ffff8bddaa98)    ;; lazy deoptimization bailout 0
0xffff8bddaa84   132  add x17, x17, x16
0xffff8bddaa88   136  br x17
0xffff8bddaa8c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bddaa90   144  d63f03e0       constant
0xffff8bddaa94   148  d503201f       constant
0xffff8bddaa98   152  8bb06000       constant
0xffff8bddaa9c   156  0000ffff       constant


Safepoints (size = 21)
0xffff8bddaa54    84  111000 (sp -> fp)       1

RelocInfo (size = 17)
0xffff8bddaa4c  code target (STUB)  (0xffff8bd06060)
0xffff8bddaa64  constant pool (size 20)
0xffff8bddaa80  runtime entry
0xffff8bddaa8c  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*STRING -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 632)
0xffff8bddab20     0  tbnz w1, #0, #+0x1d4 (addr 0xffff8bddacf4)
0xffff8bddab24     4  orr x16, x1, x0
0xffff8bddab28     8  tbnz w16, #0, #+0x10 (addr 0xffff8bddab38)
0xffff8bddab2c    12  asr x1, x1, #32
0xffff8bddab30    16  sub x0, x1, x0, asr #32
0xffff8bddab34    20  ret
0xffff8bddab38    24  cmp x0, x1
0xffff8bddab3c    28  b.ne #+0x30 (addr 0xffff8bddab6c)
0xffff8bddab40    32  ldur x16, [x0, #-1]
0xffff8bddab44    36  ldr x17, [x26, #120]
0xffff8bddab48    40  cmp x16, x17
0xffff8bddab4c    44  b.eq #+0xc (addr 0xffff8bddab58)
0xffff8bddab50    48  movz x0, #0x0
0xffff8bddab54    52  ret
0xffff8bddab58    56  ldur d0, [x0, #7]
0xffff8bddab5c    60  fcmp d0, d0
0xffff8bddab60    64  b.vc #-0x10 (addr 0xffff8bddab50)
0xffff8bddab64    68  movn x0, #0x0
0xffff8bddab68    72  ret
0xffff8bddab6c    76  and x16, x1, x0
0xffff8bddab70    80  tbnz w16, #0, #+0x64 (addr 0xffff8bddabd4)
0xffff8bddab74    84  tbz w0, #0, #+0x24 (addr 0xffff8bddab98)
0xffff8bddab78    88  ldur x16, [x0, #-1]
0xffff8bddab7c    92  ldr x17, [x26, #120]
0xffff8bddab80    96  cmp x16, x17
0xffff8bddab84   100  b.eq #+0x8 (addr 0xffff8bddab8c)
0xffff8bddab88   104  ret
0xffff8bddab8c   108  ldur d0, [x0, #7]
0xffff8bddab90   112  scvtf d1, x1, #32
0xffff8bddab94   116  b #+0x24 (addr 0xffff8bddabb8)
0xffff8bddab98   120  ldur x16, [x1, #-1]
0xffff8bddab9c   124  ldr x17, [x26, #120]
0xffff8bddaba0   128  cmp x16, x17
0xffff8bddaba4   132  b.eq #+0xc (addr 0xffff8bddabb0)
0xffff8bddaba8   136  movz x0, #0x1
0xffff8bddabac   140  ret
0xffff8bddabb0   144  ldur d1, [x1, #7]
0xffff8bddabb4   148  scvtf d0, x0, #32
0xffff8bddabb8   152  fcmp d1, d0
0xffff8bddabbc   156  b.vs #+0x10 (addr 0xffff8bddabcc)
0xffff8bddabc0   160  cset x0, gt
0xffff8bddabc4   164  csinv x0, x0, xzr, ge
0xffff8bddabc8   168  ret
0xffff8bddabcc   172  movn x0, #0x0
0xffff8bddabd0   176  ret
0xffff8bddabd4   180  ldur x10, [x0, #-1]
0xffff8bddabd8   184  ldur x12, [x1, #-1]
0xffff8bddabdc   188  ldrb w11, [x10, #11]
0xffff8bddabe0   192  ldrb w13, [x12, #11]
0xffff8bddabe4   196  cmp x11, #0xb1 (177)
0xffff8bddabe8   200  b.lt #+0x8 (addr 0xffff8bddabf0)
0xffff8bddabec   204  ret
0xffff8bddabf0   208  cmp x11, #0x83 (131)
0xffff8bddabf4   212  movz x16, #0x83
0xffff8bddabf8   216  ccmp x13, x16, #nZcv, ne
0xffff8bddabfc   220  movz x16, #0xb1
0xffff8bddac00   224  ccmp x13, x16, #NzcV, ne
0xffff8bddac04   228  b.ge #-0x18 (addr 0xffff8bddabec)
0xffff8bddac08   232  orr x14, x13, x11
0xffff8bddac0c   236  tst x14, #0xc0
0xffff8bddac10   240  b.eq #-0x24 (addr 0xffff8bddabec)
0xffff8bddac14   244  cmp x11, #0x81 (129)
0xffff8bddac18   248  b.ne #+0x18 (addr 0xffff8bddac30)
0xffff8bddac1c   252  cmp x12, x10
0xffff8bddac20   256  b.ne #+0x10 (addr 0xffff8bddac30)
0xffff8bddac24   260  ldur d1, [x1, #7]
0xffff8bddac28   264  ldur d0, [x0, #7]
0xffff8bddac2c   268  b #-0x74 (addr 0xffff8bddabb8)
0xffff8bddac30   272  movz x16, #0x87
0xffff8bddac34   276  and x14, x13, x16
0xffff8bddac38   280  movz x16, #0x87
0xffff8bddac3c   284  and x15, x11, x16
0xffff8bddac40   288  cmp x14, #0x4 (4)
0xffff8bddac44   292  ccmp x15, #4, #nzcv, eq
0xffff8bddac48   296  b.ne #+0x5c (addr 0xffff8bddaca4)
0xffff8bddac4c   300  ldur x10, [x1, #15]
0xffff8bddac50   304  ldur x11, [x0, #15]
0xffff8bddac54   308  cmp x10, x11
0xffff8bddac58   312  b.eq #+0xc (addr 0xffff8bddac64)
0xffff8bddac5c   316  movz x0, #0x100000000
0xffff8bddac60   320  ret
0xffff8bddac64   324  cbnz x10, #+0xc (addr 0xffff8bddac70)
0xffff8bddac68   328  movz x0, #0x0
0xffff8bddac6c   332  ret
0xffff8bddac70   336  asr x10, x10, #32
0xffff8bddac74   340  add x11, x10, #0x17 (23)
0xffff8bddac78   344  add x1, x1, x11
0xffff8bddac7c   348  add x0, x0, x11
0xffff8bddac80   352  neg x10, x10
0xffff8bddac84   356  ldrb w11, [x1, x10]
0xffff8bddac88   360  ldrb w12, [x0, x10]
0xffff8bddac8c   364  cmp x11, x12
0xffff8bddac90   368  b.ne #-0x34 (addr 0xffff8bddac5c)
0xffff8bddac94   372  add x10, x10, #0x1 (1)
0xffff8bddac98   376  cbnz x10, #-0x14 (addr 0xffff8bddac84)
0xffff8bddac9c   380  movz x0, #0x0
0xffff8bddaca0   384  ret
0xffff8bddaca4   388  movz x16, #0xc00000000
0xffff8bddaca8   392  sub csp, jssp, #0x10 (16)
0xffff8bddacac   396  stp fp, lr, [jssp, #-16]!
0xffff8bddacb0   400  sub csp, jssp, #0x10 (16)
0xffff8bddacb4   404  str x16, [jssp, #-8]!
0xffff8bddacb8   408  ldr x17, pc+176 (addr 0x0000ffff8bddad68)    ;; object: 0xffff8bddaac1 <Code: COMPARE_IC>
0xffff8bddacbc   412  sub csp, jssp, #0x10 (16)
0xffff8bddacc0   416  str x17, [jssp, #-8]!
0xffff8bddacc4   420  add fp, jssp, #0x10 (16)
0xffff8bddacc8   424  sub csp, jssp, #0x10 (16)
0xffff8bddaccc   428  stp x0, x1, [jssp, #-16]!
0xffff8bddacd0   432  movz x0, #0x2
0xffff8bddacd4   436  ldr x1, pc+156 (addr 0x0000ffff8bddad70)    ;; external reference (Runtime::StrictEqual)
0xffff8bddacd8   440  ldr x16, pc+160 (addr 0x0000ffff8bddad78)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bddacdc   444  blr x16
0xffff8bddace0   448  mov jssp, fp
0xffff8bddace4   452  ldp fp, lr, [jssp], #16
0xffff8bddace8   456  ldr x1, [x26, #64]
0xffff8bddacec   460  sub x0, x0, x1
0xffff8bddacf0   464  ret
0xffff8bddacf4   468  movz x16, #0xc00000000
0xffff8bddacf8   472  sub csp, jssp, #0x10 (16)
0xffff8bddacfc   476  stp fp, lr, [jssp, #-16]!
0xffff8bddad00   480  sub csp, jssp, #0x10 (16)
0xffff8bddad04   484  str x16, [jssp, #-8]!
0xffff8bddad08   488  ldr x17, pc+120 (addr 0x0000ffff8bddad80)    ;; object: 0xffff8bddaac1 <Code: COMPARE_IC>
0xffff8bddad0c   492  sub csp, jssp, #0x10 (16)
0xffff8bddad10   496  str x17, [jssp, #-8]!
0xffff8bddad14   500  add fp, jssp, #0x10 (16)
0xffff8bddad18   504  sub csp, jssp, #0x18 (24)
0xffff8bddad1c   508  stp lr, x0, [jssp, #-24]!
0xffff8bddad20   512  str x1, [jssp, #16]
0xffff8bddad24   516  movz x10, #0x2f00000000
0xffff8bddad28   520  sub csp, jssp, #0x18 (24)
0xffff8bddad2c   524  stp x10, x0, [jssp, #-24]!
0xffff8bddad30   528  str x1, [jssp, #16]
0xffff8bddad34   532  movz x0, #0x3
0xffff8bddad38   536  ldr x1, pc+80 (addr 0x0000ffff8bddad88)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bddad3c   540  ldr x16, pc+84 (addr 0x0000ffff8bddad90)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bddad40   544  blr x16
0xffff8bddad44   548  add x11, x0, #0x5f (95)
0xffff8bddad48   552  ldr x1, [jssp, #16]
0xffff8bddad4c   556  ldp lr, x0, [jssp], #24
0xffff8bddad50   560  mov jssp, fp
0xffff8bddad54   564  ldp fp, lr, [jssp], #16
0xffff8bddad58   568  br x11
0xffff8bddad5c   572  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bddad60   576  d63f03e0       constant
0xffff8bddad64   580  d503201f       constant
0xffff8bddad68   584  8bddaac1       constant
0xffff8bddad6c   588  0000ffff       constant
0xffff8bddad70   592  00e50928       constant
0xffff8bddad74   596  00000000       constant
0xffff8bddad78   600  8bd06060       constant
0xffff8bddad7c   604  0000ffff       constant
0xffff8bddad80   608  8bddaac1       constant
0xffff8bddad84   612  0000ffff       constant
0xffff8bddad88   616  00c8a980       constant
0xffff8bddad8c   620  00000000       constant
0xffff8bddad90   624  8bd06060       constant
0xffff8bddad94   628  0000ffff       constant


RelocInfo (size = 16)
0xffff8bddacb8  embedded object  (0xffff8bddaac1 <Code: COMPARE_IC>)
0xffff8bddacd4  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff8bddacd8  code target (STUB)  (0xffff8bd06060)
0xffff8bddad08  embedded object  (0xffff8bddaac1 <Code: COMPARE_IC>)
0xffff8bddad38  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bddad3c  code target (STUB)  (0xffff8bd06060)
0xffff8bddad5c  constant pool (size 60)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*GENERIC -> GENERIC
compare_operation = LTE
name = CompareICStub
compiler = unknown
Instructions (size = 568)
0xffff8bdddba0     0  orr x16, x1, x0
0xffff8bdddba4     4  tbnz w16, #0, #+0x10 (addr 0xffff8bdddbb4)
0xffff8bdddba8     8  asr x1, x1, #32
0xffff8bdddbac    12  sub x0, x1, x0, asr #32
0xffff8bdddbb0    16  ret
0xffff8bdddbb4    20  cmp x0, x1
0xffff8bdddbb8    24  b.ne #+0x64 (addr 0xffff8bdddc1c)
0xffff8bdddbbc    28  ldur x10, [x0, #-1]
0xffff8bdddbc0    32  ldrb w10, [x10, #11]
0xffff8bdddbc4    36  cmp x10, #0x81 (129)
0xffff8bdddbc8    40  b.eq #+0x40 (addr 0xffff8bdddc08)
0xffff8bdddbcc    44  cmp x10, #0xb1 (177)
0xffff8bdddbd0    48  b.ge #+0x148 (addr 0xffff8bdddd18)
0xffff8bdddbd4    52  cmp x10, #0x80 (128)
0xffff8bdddbd8    56  b.eq #+0x140 (addr 0xffff8bdddd18)
0xffff8bdddbdc    60  cmp x10, #0x82 (130)
0xffff8bdddbe0    64  b.eq #+0x138 (addr 0xffff8bdddd18)
0xffff8bdddbe4    68  cmp x10, #0x83 (131)
0xffff8bdddbe8    72  b.ne #+0x18 (addr 0xffff8bdddc00)
0xffff8bdddbec    76  ldr x16, [x26, #40]
0xffff8bdddbf0    80  cmp x0, x16
0xffff8bdddbf4    84  b.ne #+0xc (addr 0xffff8bdddc00)
0xffff8bdddbf8    88  movz x0, #0x1
0xffff8bdddbfc    92  ret
0xffff8bdddc00    96  movz x0, #0x0
0xffff8bdddc04   100  ret
0xffff8bdddc08   104  ldur d0, [x0, #7]
0xffff8bdddc0c   108  fcmp d0, d0
0xffff8bdddc10   112  b.vc #-0x10 (addr 0xffff8bdddc00)
0xffff8bdddc14   116  movz x0, #0x1
0xffff8bdddc18   120  ret
0xffff8bdddc1c   124  and x16, x1, x0
0xffff8bdddc20   128  tbnz w16, #0, #+0x58 (addr 0xffff8bdddc78)
0xffff8bdddc24   132  tbz w0, #0, #+0x20 (addr 0xffff8bdddc44)
0xffff8bdddc28   136  ldur x16, [x0, #-1]
0xffff8bdddc2c   140  ldr x17, [x26, #120]
0xffff8bdddc30   144  cmp x16, x17
0xffff8bdddc34   148  b.ne #+0xe4 (addr 0xffff8bdddd18)
0xffff8bdddc38   152  ldur d0, [x0, #7]
0xffff8bdddc3c   156  scvtf d1, x1, #32
0xffff8bdddc40   160  b #+0x1c (addr 0xffff8bdddc5c)
0xffff8bdddc44   164  ldur x16, [x1, #-1]
0xffff8bdddc48   168  ldr x17, [x26, #120]
0xffff8bdddc4c   172  cmp x16, x17
0xffff8bdddc50   176  b.ne #+0xc8 (addr 0xffff8bdddd18)
0xffff8bdddc54   180  ldur d1, [x1, #7]
0xffff8bdddc58   184  scvtf d0, x0, #32
0xffff8bdddc5c   188  fcmp d1, d0
0xffff8bdddc60   192  b.vs #+0x10 (addr 0xffff8bdddc70)
0xffff8bdddc64   196  cset x0, gt
0xffff8bdddc68   200  csinv x0, x0, xzr, ge
0xffff8bdddc6c   204  ret
0xffff8bdddc70   208  movz x0, #0x1
0xffff8bdddc74   212  ret
0xffff8bdddc78   216  ldur x10, [x0, #-1]
0xffff8bdddc7c   220  ldur x12, [x1, #-1]
0xffff8bdddc80   224  ldrb w11, [x10, #11]
0xffff8bdddc84   228  ldrb w13, [x12, #11]
0xffff8bdddc88   232  cmp x11, #0x81 (129)
0xffff8bdddc8c   236  b.ne #+0x18 (addr 0xffff8bdddca4)
0xffff8bdddc90   240  cmp x12, x10
0xffff8bdddc94   244  b.ne #+0x10 (addr 0xffff8bdddca4)
0xffff8bdddc98   248  ldur d1, [x1, #7]
0xffff8bdddc9c   252  ldur d0, [x0, #7]
0xffff8bdddca0   256  b #-0x44 (addr 0xffff8bdddc5c)
0xffff8bdddca4   260  movz x16, #0x87
0xffff8bdddca8   264  and x14, x13, x16
0xffff8bdddcac   268  movz x16, #0x87
0xffff8bdddcb0   272  and x15, x11, x16
0xffff8bdddcb4   276  cmp x14, #0x4 (4)
0xffff8bdddcb8   280  ccmp x15, #4, #nzcv, eq
0xffff8bdddcbc   284  b.ne #+0x5c (addr 0xffff8bdddd18)
0xffff8bdddcc0   288  ldur x10, [x1, #15]
0xffff8bdddcc4   292  ldur x11, [x0, #15]
0xffff8bdddcc8   296  subs x12, x10, x11
0xffff8bdddccc   300  csel x10, x11, x10, gt
0xffff8bdddcd0   304  cbz x10, #+0x30 (addr 0xffff8bdddd00)
0xffff8bdddcd4   308  asr x10, x10, #32
0xffff8bdddcd8   312  add x11, x10, #0x17 (23)
0xffff8bdddcdc   316  add x1, x1, x11
0xffff8bdddce0   320  add x0, x0, x11
0xffff8bdddce4   324  neg x10, x10
0xffff8bdddce8   328  ldrb w11, [x1, x10]
0xffff8bdddcec   332  ldrb w13, [x0, x10]
0xffff8bdddcf0   336  cmp x11, x13
0xffff8bdddcf4   340  b.ne #+0x10 (addr 0xffff8bdddd04)
0xffff8bdddcf8   344  add x10, x10, #0x1 (1)
0xffff8bdddcfc   348  cbnz x10, #-0x14 (addr 0xffff8bdddce8)
0xffff8bdddd00   352  subs x0, x12, #0x0 (0)
0xffff8bdddd04   356  movz x10, #0x100000000
0xffff8bdddd08   360  mov x11, #0xffffffff00000000
0xffff8bdddd0c   364  csel x0, x10, x0, gt
0xffff8bdddd10   368  csel x0, x11, x0, lt
0xffff8bdddd14   372  ret
0xffff8bdddd18   376  sub csp, jssp, #0x10 (16)
0xffff8bdddd1c   380  stp x0, x1, [jssp, #-16]!
0xffff8bdddd20   384  movz x10, #0x100000000
0xffff8bdddd24   388  sub csp, jssp, #0x8 (8)
0xffff8bdddd28   392  str x10, [jssp, #-8]!
0xffff8bdddd2c   396  movz x0, #0x3
0xffff8bdddd30   400  ldr x1, pc+128 (addr 0x0000ffff8bddddb0)    ;; external reference (Runtime::Compare)
0xffff8bdddd34   404  ldr x16, pc+132 (addr 0x0000ffff8bddddb8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdddd38   408  br x16
0xffff8bdddd3c   412  movz x16, #0xc00000000
0xffff8bdddd40   416  sub csp, jssp, #0x10 (16)
0xffff8bdddd44   420  stp fp, lr, [jssp, #-16]!
0xffff8bdddd48   424  sub csp, jssp, #0x10 (16)
0xffff8bdddd4c   428  str x16, [jssp, #-8]!
0xffff8bdddd50   432  ldr x17, pc+112 (addr 0x0000ffff8bddddc0)    ;; object: 0xffff8bdddb41 <Code: COMPARE_IC>
0xffff8bdddd54   436  sub csp, jssp, #0x10 (16)
0xffff8bdddd58   440  str x17, [jssp, #-8]!
0xffff8bdddd5c   444  add fp, jssp, #0x10 (16)
0xffff8bdddd60   448  sub csp, jssp, #0x18 (24)
0xffff8bdddd64   452  stp lr, x0, [jssp, #-24]!
0xffff8bdddd68   456  str x1, [jssp, #16]
0xffff8bdddd6c   460  movz x10, #0x3300000000
0xffff8bdddd70   464  sub csp, jssp, #0x18 (24)
0xffff8bdddd74   468  stp x10, x0, [jssp, #-24]!
0xffff8bdddd78   472  str x1, [jssp, #16]
0xffff8bdddd7c   476  movz x0, #0x3
0xffff8bdddd80   480  ldr x1, pc+72 (addr 0x0000ffff8bddddc8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bdddd84   484  ldr x16, pc+76 (addr 0x0000ffff8bddddd0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdddd88   488  blr x16
0xffff8bdddd8c   492  add x11, x0, #0x5f (95)
0xffff8bdddd90   496  ldr x1, [jssp, #16]
0xffff8bdddd94   500  ldp lr, x0, [jssp], #24
0xffff8bdddd98   504  mov jssp, fp
0xffff8bdddd9c   508  ldp fp, lr, [jssp], #16
0xffff8bdddda0   512  br x11
0xffff8bdddda4   516  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff8bdddda8   520  d63f03e0       constant
0xffff8bddddac   524  d503201f       constant
0xffff8bddddb0   528  00e49ea8       constant
0xffff8bddddb4   532  00000000       constant
0xffff8bddddb8   536  8bd06060       constant
0xffff8bddddbc   540  0000ffff       constant
0xffff8bddddc0   544  8bdddb41       constant
0xffff8bddddc4   548  0000ffff       constant
0xffff8bddddc8   552  00c8a980       constant
0xffff8bddddcc   556  00000000       constant
0xffff8bddddd0   560  8bd06060       constant
0xffff8bddddd4   564  0000ffff       constant


RelocInfo (size = 15)
0xffff8bdddd30  external reference (Runtime::Compare)  (0xe49ea8)
0xffff8bdddd34  code target (STUB)  (0xffff8bd06060)
0xffff8bdddd50  embedded object  (0xffff8bdddb41 <Code: COMPARE_IC>)
0xffff8bdddd80  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bdddd84  code target (STUB)  (0xffff8bd06060)
0xffff8bdddda4  constant pool (size 52)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = NUMBER*SMI -> NUMBER
compare_operation = LTE
name = CompareICStub
compiler = unknown
Instructions (size = 280)
0xffff8bddde40     0  tbnz w0, #0, #+0x88 (addr 0xffff8bdddec8)
0xffff8bddde44     4  scvtf d0, x0, #32
0xffff8bddde48     8  scvtf d1, x1, #32
0xffff8bddde4c    12  tbz w0, #0, #+0x18 (addr 0xffff8bddde64)
0xffff8bddde50    16  ldur x16, [x0, #-1]
0xffff8bddde54    20  ldr x17, [x26, #120]
0xffff8bddde58    24  cmp x16, x17
0xffff8bddde5c    28  b.ne #+0x3c (addr 0xffff8bddde98)
0xffff8bddde60    32  ldur d0, [x0, #7]
0xffff8bddde64    36  tbz w1, #0, #+0x18 (addr 0xffff8bddde7c)
0xffff8bddde68    40  ldur x16, [x1, #-1]
0xffff8bddde6c    44  ldr x17, [x26, #120]
0xffff8bddde70    48  cmp x16, x17
0xffff8bddde74    52  b.ne #+0x48 (addr 0xffff8bdddebc)
0xffff8bddde78    56  ldur d1, [x1, #7]
0xffff8bddde7c    60  fcmp d1, d0
0xffff8bddde80    64  b.vs #+0x10 (addr 0xffff8bddde90)
0xffff8bddde84    68  cset x0, gt
0xffff8bddde88    72  csinv x0, x0, xzr, ge
0xffff8bddde8c    76  ret
0xffff8bddde90    80  ldr x16, pc+168 (addr 0x0000ffff8bdddf38)    ;; code: COMPARE_IC, GENERIC
0xffff8bddde94    84  br x16
0xffff8bddde98    88  ldr x16, [x26, #40]
0xffff8bddde9c    92  cmp x0, x16
0xffff8bdddea0    96  b.ne #+0x28 (addr 0xffff8bdddec8)
0xffff8bdddea4   100  tbz w1, #0, #-0x14 (addr 0xffff8bddde90)
0xffff8bdddea8   104  ldur x16, [x1, #-1]
0xffff8bdddeac   108  ldr x17, [x26, #120]
0xffff8bdddeb0   112  cmp x16, x17
0xffff8bdddeb4   116  b.ne #+0x8 (addr 0xffff8bdddebc)
0xffff8bdddeb8   120  b #-0x28 (addr 0xffff8bddde90)
0xffff8bdddebc   124  ldr x16, [x26, #40]
0xffff8bdddec0   128  cmp x1, x16
0xffff8bdddec4   132  b.eq #-0x34 (addr 0xffff8bddde90)
0xffff8bdddec8   136  movz x16, #0xc00000000
0xffff8bdddecc   140  sub csp, jssp, #0x10 (16)
0xffff8bddded0   144  stp fp, lr, [jssp, #-16]!
0xffff8bddded4   148  sub csp, jssp, #0x10 (16)
0xffff8bddded8   152  str x16, [jssp, #-8]!
0xffff8bdddedc   156  ldr x17, pc+100 (addr 0x0000ffff8bdddf40)    ;; object: 0xffff8bdddde1 <Code: COMPARE_IC>
0xffff8bdddee0   160  sub csp, jssp, #0x10 (16)
0xffff8bdddee4   164  str x17, [jssp, #-8]!
0xffff8bdddee8   168  add fp, jssp, #0x10 (16)
0xffff8bdddeec   172  sub csp, jssp, #0x18 (24)
0xffff8bdddef0   176  stp lr, x0, [jssp, #-24]!
0xffff8bdddef4   180  str x1, [jssp, #16]
0xffff8bdddef8   184  movz x10, #0x3300000000
0xffff8bdddefc   188  sub csp, jssp, #0x18 (24)
0xffff8bdddf00   192  stp x10, x0, [jssp, #-24]!
0xffff8bdddf04   196  str x1, [jssp, #16]
0xffff8bdddf08   200  movz x0, #0x3
0xffff8bdddf0c   204  ldr x1, pc+60 (addr 0x0000ffff8bdddf48)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bdddf10   208  ldr x16, pc+64 (addr 0x0000ffff8bdddf50)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdddf14   212  blr x16
0xffff8bdddf18   216  add x11, x0, #0x5f (95)
0xffff8bdddf1c   220  ldr x1, [jssp, #16]
0xffff8bdddf20   224  ldp lr, x0, [jssp], #24
0xffff8bdddf24   228  mov jssp, fp
0xffff8bdddf28   232  ldp fp, lr, [jssp], #16
0xffff8bdddf2c   236  br x11
0xffff8bdddf30   240  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdddf34   244  d63f03e0       constant
0xffff8bdddf38   248  8bdddba0       constant
0xffff8bdddf3c   252  0000ffff       constant
0xffff8bdddf40   256  8bdddde1       constant
0xffff8bdddf44   260  0000ffff       constant
0xffff8bdddf48   264  00c8a980       constant
0xffff8bdddf4c   268  00000000       constant
0xffff8bdddf50   272  8bd06060       constant
0xffff8bdddf54   276  0000ffff       constant


RelocInfo (size = 15)
0xffff8bddde90  code target (COMPARE_IC)  (0xffff8bdddba0)
0xffff8bdddedc  embedded object  (0xffff8bdddde1 <Code: COMPARE_IC>)
0xffff8bdddf0c  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bdddf10  code target (STUB)  (0xffff8bd06060)
0xffff8bdddf30  constant pool (size 40)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*GENERIC -> GENERIC
compare_operation = GT
name = CompareICStub
compiler = unknown
Instructions (size = 512)
0xffff8bdddfc0     0  orr x16, x1, x0
0xffff8bdddfc4     4  tbnz w16, #0, #+0x10 (addr 0xffff8bdddfd4)
0xffff8bdddfc8     8  asr x1, x1, #32
0xffff8bdddfcc    12  sub x0, x1, x0, asr #32
0xffff8bdddfd0    16  ret
0xffff8bdddfd4    20  cmp x0, x1
0xffff8bdddfd8    24  b.ne #+0x2c (addr 0xffff8bdde004)
0xffff8bdddfdc    28  ldur x10, [x0, #-1]
0xffff8bdddfe0    32  ldrb w10, [x10, #11]
0xffff8bdddfe4    36  cmp x10, #0xb1 (177)
0xffff8bdddfe8    40  b.ge #+0x118 (addr 0xffff8bdde100)
0xffff8bdddfec    44  cmp x10, #0x80 (128)
0xffff8bdddff0    48  b.eq #+0x110 (addr 0xffff8bdde100)
0xffff8bdddff4    52  cmp x10, #0x82 (130)
0xffff8bdddff8    56  b.eq #+0x108 (addr 0xffff8bdde100)
0xffff8bdddffc    60  movn x0, #0x0
0xffff8bdde000    64  ret
0xffff8bdde004    68  and x16, x1, x0
0xffff8bdde008    72  tbnz w16, #0, #+0x58 (addr 0xffff8bdde060)
0xffff8bdde00c    76  tbz w0, #0, #+0x20 (addr 0xffff8bdde02c)
0xffff8bdde010    80  ldur x16, [x0, #-1]
0xffff8bdde014    84  ldr x17, [x26, #120]
0xffff8bdde018    88  cmp x16, x17
0xffff8bdde01c    92  b.ne #+0xe4 (addr 0xffff8bdde100)
0xffff8bdde020    96  ldur d0, [x0, #7]
0xffff8bdde024   100  scvtf d1, x1, #32
0xffff8bdde028   104  b #+0x1c (addr 0xffff8bdde044)
0xffff8bdde02c   108  ldur x16, [x1, #-1]
0xffff8bdde030   112  ldr x17, [x26, #120]
0xffff8bdde034   116  cmp x16, x17
0xffff8bdde038   120  b.ne #+0xc8 (addr 0xffff8bdde100)
0xffff8bdde03c   124  ldur d1, [x1, #7]
0xffff8bdde040   128  scvtf d0, x0, #32
0xffff8bdde044   132  fcmp d1, d0
0xffff8bdde048   136  b.vs #+0x10 (addr 0xffff8bdde058)
0xffff8bdde04c   140  cset x0, gt
0xffff8bdde050   144  csinv x0, x0, xzr, ge
0xffff8bdde054   148  ret
0xffff8bdde058   152  movn x0, #0x0
0xffff8bdde05c   156  ret
0xffff8bdde060   160  ldur x10, [x0, #-1]
0xffff8bdde064   164  ldur x12, [x1, #-1]
0xffff8bdde068   168  ldrb w11, [x10, #11]
0xffff8bdde06c   172  ldrb w13, [x12, #11]
0xffff8bdde070   176  cmp x11, #0x81 (129)
0xffff8bdde074   180  b.ne #+0x18 (addr 0xffff8bdde08c)
0xffff8bdde078   184  cmp x12, x10
0xffff8bdde07c   188  b.ne #+0x10 (addr 0xffff8bdde08c)
0xffff8bdde080   192  ldur d1, [x1, #7]
0xffff8bdde084   196  ldur d0, [x0, #7]
0xffff8bdde088   200  b #-0x44 (addr 0xffff8bdde044)
0xffff8bdde08c   204  movz x16, #0x87
0xffff8bdde090   208  and x14, x13, x16
0xffff8bdde094   212  movz x16, #0x87
0xffff8bdde098   216  and x15, x11, x16
0xffff8bdde09c   220  cmp x14, #0x4 (4)
0xffff8bdde0a0   224  ccmp x15, #4, #nzcv, eq
0xffff8bdde0a4   228  b.ne #+0x5c (addr 0xffff8bdde100)
0xffff8bdde0a8   232  ldur x10, [x1, #15]
0xffff8bdde0ac   236  ldur x11, [x0, #15]
0xffff8bdde0b0   240  subs x12, x10, x11
0xffff8bdde0b4   244  csel x10, x11, x10, gt
0xffff8bdde0b8   248  cbz x10, #+0x30 (addr 0xffff8bdde0e8)
0xffff8bdde0bc   252  asr x10, x10, #32
0xffff8bdde0c0   256  add x11, x10, #0x17 (23)
0xffff8bdde0c4   260  add x1, x1, x11
0xffff8bdde0c8   264  add x0, x0, x11
0xffff8bdde0cc   268  neg x10, x10
0xffff8bdde0d0   272  ldrb w11, [x1, x10]
0xffff8bdde0d4   276  ldrb w13, [x0, x10]
0xffff8bdde0d8   280  cmp x11, x13
0xffff8bdde0dc   284  b.ne #+0x10 (addr 0xffff8bdde0ec)
0xffff8bdde0e0   288  add x10, x10, #0x1 (1)
0xffff8bdde0e4   292  cbnz x10, #-0x14 (addr 0xffff8bdde0d0)
0xffff8bdde0e8   296  subs x0, x12, #0x0 (0)
0xffff8bdde0ec   300  movz x10, #0x100000000
0xffff8bdde0f0   304  mov x11, #0xffffffff00000000
0xffff8bdde0f4   308  csel x0, x10, x0, gt
0xffff8bdde0f8   312  csel x0, x11, x0, lt
0xffff8bdde0fc   316  ret
0xffff8bdde100   320  sub csp, jssp, #0x10 (16)
0xffff8bdde104   324  stp x0, x1, [jssp, #-16]!
0xffff8bdde108   328  mov x10, #0xffffffff00000000
0xffff8bdde10c   332  sub csp, jssp, #0x8 (8)
0xffff8bdde110   336  str x10, [jssp, #-8]!
0xffff8bdde114   340  movz x0, #0x3
0xffff8bdde118   344  ldr x1, pc+128 (addr 0x0000ffff8bdde198)    ;; external reference (Runtime::Compare)
0xffff8bdde11c   348  ldr x16, pc+132 (addr 0x0000ffff8bdde1a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdde120   352  br x16
0xffff8bdde124   356  movz x16, #0xc00000000
0xffff8bdde128   360  sub csp, jssp, #0x10 (16)
0xffff8bdde12c   364  stp fp, lr, [jssp, #-16]!
0xffff8bdde130   368  sub csp, jssp, #0x10 (16)
0xffff8bdde134   372  str x16, [jssp, #-8]!
0xffff8bdde138   376  ldr x17, pc+112 (addr 0x0000ffff8bdde1a8)    ;; object: 0xffff8bdddf61 <Code: COMPARE_IC>
0xffff8bdde13c   380  sub csp, jssp, #0x10 (16)
0xffff8bdde140   384  str x17, [jssp, #-8]!
0xffff8bdde144   388  add fp, jssp, #0x10 (16)
0xffff8bdde148   392  sub csp, jssp, #0x18 (24)
0xffff8bdde14c   396  stp lr, x0, [jssp, #-24]!
0xffff8bdde150   400  str x1, [jssp, #16]
0xffff8bdde154   404  movz x10, #0x3200000000
0xffff8bdde158   408  sub csp, jssp, #0x18 (24)
0xffff8bdde15c   412  stp x10, x0, [jssp, #-24]!
0xffff8bdde160   416  str x1, [jssp, #16]
0xffff8bdde164   420  movz x0, #0x3
0xffff8bdde168   424  ldr x1, pc+72 (addr 0x0000ffff8bdde1b0)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bdde16c   428  ldr x16, pc+76 (addr 0x0000ffff8bdde1b8)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdde170   432  blr x16
0xffff8bdde174   436  add x11, x0, #0x5f (95)
0xffff8bdde178   440  ldr x1, [jssp, #16]
0xffff8bdde17c   444  ldp lr, x0, [jssp], #24
0xffff8bdde180   448  mov jssp, fp
0xffff8bdde184   452  ldp fp, lr, [jssp], #16
0xffff8bdde188   456  br x11
0xffff8bdde18c   460  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff8bdde190   464  d63f03e0       constant
0xffff8bdde194   468  d503201f       constant
0xffff8bdde198   472  00e49ea8       constant
0xffff8bdde19c   476  00000000       constant
0xffff8bdde1a0   480  8bd06060       constant
0xffff8bdde1a4   484  0000ffff       constant
0xffff8bdde1a8   488  8bdddf61       constant
0xffff8bdde1ac   492  0000ffff       constant
0xffff8bdde1b0   496  00c8a980       constant
0xffff8bdde1b4   500  00000000       constant
0xffff8bdde1b8   504  8bd06060       constant
0xffff8bdde1bc   508  0000ffff       constant


RelocInfo (size = 15)
0xffff8bdde118  external reference (Runtime::Compare)  (0xe49ea8)
0xffff8bdde11c  code target (STUB)  (0xffff8bd06060)
0xffff8bdde138  embedded object  (0xffff8bdddf61 <Code: COMPARE_IC>)
0xffff8bdde168  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bdde16c  code target (STUB)  (0xffff8bd06060)
0xffff8bdde18c  constant pool (size 52)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = NUMBER*SMI -> NUMBER
compare_operation = GT
name = CompareICStub
compiler = unknown
Instructions (size = 280)
0xffff8bdde220     0  tbnz w0, #0, #+0x88 (addr 0xffff8bdde2a8)
0xffff8bdde224     4  scvtf d0, x0, #32
0xffff8bdde228     8  scvtf d1, x1, #32
0xffff8bdde22c    12  tbz w0, #0, #+0x18 (addr 0xffff8bdde244)
0xffff8bdde230    16  ldur x16, [x0, #-1]
0xffff8bdde234    20  ldr x17, [x26, #120]
0xffff8bdde238    24  cmp x16, x17
0xffff8bdde23c    28  b.ne #+0x3c (addr 0xffff8bdde278)
0xffff8bdde240    32  ldur d0, [x0, #7]
0xffff8bdde244    36  tbz w1, #0, #+0x18 (addr 0xffff8bdde25c)
0xffff8bdde248    40  ldur x16, [x1, #-1]
0xffff8bdde24c    44  ldr x17, [x26, #120]
0xffff8bdde250    48  cmp x16, x17
0xffff8bdde254    52  b.ne #+0x48 (addr 0xffff8bdde29c)
0xffff8bdde258    56  ldur d1, [x1, #7]
0xffff8bdde25c    60  fcmp d1, d0
0xffff8bdde260    64  b.vs #+0x10 (addr 0xffff8bdde270)
0xffff8bdde264    68  cset x0, gt
0xffff8bdde268    72  csinv x0, x0, xzr, ge
0xffff8bdde26c    76  ret
0xffff8bdde270    80  ldr x16, pc+168 (addr 0x0000ffff8bdde318)    ;; code: COMPARE_IC, GENERIC
0xffff8bdde274    84  br x16
0xffff8bdde278    88  ldr x16, [x26, #40]
0xffff8bdde27c    92  cmp x0, x16
0xffff8bdde280    96  b.ne #+0x28 (addr 0xffff8bdde2a8)
0xffff8bdde284   100  tbz w1, #0, #-0x14 (addr 0xffff8bdde270)
0xffff8bdde288   104  ldur x16, [x1, #-1]
0xffff8bdde28c   108  ldr x17, [x26, #120]
0xffff8bdde290   112  cmp x16, x17
0xffff8bdde294   116  b.ne #+0x8 (addr 0xffff8bdde29c)
0xffff8bdde298   120  b #-0x28 (addr 0xffff8bdde270)
0xffff8bdde29c   124  ldr x16, [x26, #40]
0xffff8bdde2a0   128  cmp x1, x16
0xffff8bdde2a4   132  b.eq #-0x34 (addr 0xffff8bdde270)
0xffff8bdde2a8   136  movz x16, #0xc00000000
0xffff8bdde2ac   140  sub csp, jssp, #0x10 (16)
0xffff8bdde2b0   144  stp fp, lr, [jssp, #-16]!
0xffff8bdde2b4   148  sub csp, jssp, #0x10 (16)
0xffff8bdde2b8   152  str x16, [jssp, #-8]!
0xffff8bdde2bc   156  ldr x17, pc+100 (addr 0x0000ffff8bdde320)    ;; object: 0xffff8bdde1c1 <Code: COMPARE_IC>
0xffff8bdde2c0   160  sub csp, jssp, #0x10 (16)
0xffff8bdde2c4   164  str x17, [jssp, #-8]!
0xffff8bdde2c8   168  add fp, jssp, #0x10 (16)
0xffff8bdde2cc   172  sub csp, jssp, #0x18 (24)
0xffff8bdde2d0   176  stp lr, x0, [jssp, #-24]!
0xffff8bdde2d4   180  str x1, [jssp, #16]
0xffff8bdde2d8   184  movz x10, #0x3200000000
0xffff8bdde2dc   188  sub csp, jssp, #0x18 (24)
0xffff8bdde2e0   192  stp x10, x0, [jssp, #-24]!
0xffff8bdde2e4   196  str x1, [jssp, #16]
0xffff8bdde2e8   200  movz x0, #0x3
0xffff8bdde2ec   204  ldr x1, pc+60 (addr 0x0000ffff8bdde328)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bdde2f0   208  ldr x16, pc+64 (addr 0x0000ffff8bdde330)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdde2f4   212  blr x16
0xffff8bdde2f8   216  add x11, x0, #0x5f (95)
0xffff8bdde2fc   220  ldr x1, [jssp, #16]
0xffff8bdde300   224  ldp lr, x0, [jssp], #24
0xffff8bdde304   228  mov jssp, fp
0xffff8bdde308   232  ldp fp, lr, [jssp], #16
0xffff8bdde30c   236  br x11
0xffff8bdde310   240  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdde314   244  d63f03e0       constant
0xffff8bdde318   248  8bdddfc0       constant
0xffff8bdde31c   252  0000ffff       constant
0xffff8bdde320   256  8bdde1c1       constant
0xffff8bdde324   260  0000ffff       constant
0xffff8bdde328   264  00c8a980       constant
0xffff8bdde32c   268  00000000       constant
0xffff8bdde330   272  8bd06060       constant
0xffff8bdde334   276  0000ffff       constant


RelocInfo (size = 15)
0xffff8bdde270  code target (COMPARE_IC)  (0xffff8bdddfc0)
0xffff8bdde2bc  embedded object  (0xffff8bdde1c1 <Code: COMPARE_IC>)
0xffff8bdde2ec  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bdde2f0  code target (STUB)  (0xffff8bd06060)
0xffff8bdde310  constant pool (size 40)


kind = HANDLER
major_key = <NoCache>Stub
name = Math
compiler = unknown
Instructions (size = 120)
0xffff8bdded40     0  sub csp, jssp, #0x8 (8)
0xffff8bdded44     4  str x3, [jssp, #-8]!
0xffff8bdded48     8  sub csp, jssp, #0x8 (8)
0xffff8bdded4c    12  str x0, [jssp, #-8]!
0xffff8bdded50    16  ldr x0, pc+80 (addr 0x0000ffff8bddeda0)    ;; object: 0x26cc5d51 Cell for 0
0xffff8bdded54    20  ldur x0, [x0, #7]
0xffff8bdded58    24  cmp x0, #0x0 (0)
0xffff8bdded5c    28  b.ne #+0x2c (addr 0xffff8bdded88)
0xffff8bdded60    32  ldr x0, pc+72 (addr 0x0000ffff8bddeda8)    ;; object: 0x327c7bf9 WeakCell for 0x26c46e89 PropertyCell for 0x26c46e51 <a Math with map 0x5f50e5a1>
0xffff8bdded64    36  ldur x0, [x0, #7]
0xffff8bdded68    40  tbz w0, #0, #+0x20 (addr 0xffff8bdded88)
0xffff8bdded6c    44  ldur x0, [x0, #15]
0xffff8bdded70    48  ldr x16, [x26, #88]
0xffff8bdded74    52  cmp x0, x16
0xffff8bdded78    56  b.eq #+0x10 (addr 0xffff8bdded88)
0xffff8bdded7c    60  add jssp, jssp, #0x10 (16)
0xffff8bdded80    64  ret
0xffff8bdded84    68  b #+0x14 (addr 0xffff8bdded98)
0xffff8bdded88    72  ldr x0, [jssp], #8
0xffff8bdded8c    76  ldr x3, [jssp], #8
0xffff8bdded90    80  ldr x16, pc+32 (addr 0x0000ffff8bddedb0)    ;; code: BUILTIN
0xffff8bdded94    84  br x16
0xffff8bdded98    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bdded9c    92  d63f03e0       constant
0xffff8bddeda0    96  26cc5d51       constant
0xffff8bddeda4   100  00000000       constant
0xffff8bddeda8   104  327c7bf9       constant
0xffff8bddedac   108  00000000       constant
0xffff8bddedb0   112  8bd222e0       constant
0xffff8bddedb4   116  0000ffff       constant


RelocInfo (size = 9)
0xffff8bdded50  embedded object  (0x26cc5d51 Cell for 0)
0xffff8bdded60  embedded object  (0x327c7bf9 WeakCell for 0x26c46e89 PropertyCell for 0x26c46e51 <a Math with map 0x5f50e5a1>)
0xffff8bdded90  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdded98  constant pool (size 32)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bddee20     0  ldur x0, [x1, #-1]
0xffff8bddee24     4  ldur x0, [x0, #47]
0xffff8bddee28     8  movz x16, #0x14f
0xffff8bddee2c    12  ldr x0, [x0, x16]
0xffff8bddee30    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bddee20     0  ldur x0, [x1, #-1]
0xffff8bddee24     4  ldur x0, [x0, #47]
0xffff8bddee28     8  movz x16, #0x14f
0xffff8bddee2c    12  ldr x0, [x0, x16]
0xffff8bddee30    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = BINARY_OP_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 1179
type = NORMAL
name = BinaryOpICStub
compiler = crankshaft
Instructions (size = 192)
0xffff8bddfa20     0  mov x2, x1
0xffff8bddfa24     4  tbnz w2, #0, #+0x44 (addr 0xffff8bddfa68)
0xffff8bddfa28     8  mov x3, x0
0xffff8bddfa2c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bddfa78)
0xffff8bddfa30    16  asr x3, x3, #32
0xffff8bddfa34    20  cmp w3, #0x1 (1)
0xffff8bddfa38    24  b.eq #+0x8 (addr 0xffff8bddfa40)
0xffff8bddfa3c    28  b #+0x4c (addr 0xffff8bddfa88)
0xffff8bddfa40    32  asr x2, x2, #32
0xffff8bddfa44    36  tbz w2, #31, #+0x18 (addr 0xffff8bddfa5c)
0xffff8bddfa48    40  neg w2, w2
0xffff8bddfa4c    44  movz w2, #0x0
0xffff8bddfa50    48  negs w2, w2
0xffff8bddfa54    52  b.eq #+0x44 (addr 0xffff8bddfa98)
0xffff8bddfa58    56  b #+0x8 (addr 0xffff8bddfa60)
0xffff8bddfa5c    60  movz w2, #0x0
0xffff8bddfa60    64  lsl x0, x2, #32
0xffff8bddfa64    68  ret
0xffff8bddfa68    72  movz x16, #0x0
0xffff8bddfa6c    76  sub csp, jssp, #0x10 (16)
0xffff8bddfa70    80  stp fp, lr, [jssp, #-16]!
0xffff8bddfa74    84  bl #+0x34 (addr 0xffff8bddfaa8)
0xffff8bddfa78    88  movz x16, #0x8
0xffff8bddfa7c    92  sub csp, jssp, #0x10 (16)
0xffff8bddfa80    96  stp fp, lr, [jssp, #-16]!
0xffff8bddfa84   100  bl #+0x24 (addr 0xffff8bddfaa8)
0xffff8bddfa88   104  movz x16, #0x10
0xffff8bddfa8c   108  sub csp, jssp, #0x10 (16)
0xffff8bddfa90   112  stp fp, lr, [jssp, #-16]!
0xffff8bddfa94   116  bl #+0x14 (addr 0xffff8bddfaa8)
0xffff8bddfa98   120  movz x16, #0x18
0xffff8bddfa9c   124  sub csp, jssp, #0x10 (16)
0xffff8bddfaa0   128  stp fp, lr, [jssp, #-16]!
0xffff8bddfaa4   132  bl #+0x4 (addr 0xffff8bddfaa8)
0xffff8bddfaa8   136  movz x17, #0xa00000000
0xffff8bddfaac   140  sub csp, jssp, #0x10 (16)
0xffff8bddfab0   144  stp x17, cp, [jssp, #-16]!
0xffff8bddfab4   148  add fp, jssp, #0x10 (16)
0xffff8bddfab8   152  ldr x17, pc+24 (addr 0x0000ffff8bddfad0)    ;; lazy deoptimization bailout 0
0xffff8bddfabc   156  add x17, x17, x16
0xffff8bddfac0   160  br x17
0xffff8bddfac4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bddfac8   168  d63f03e0       constant
0xffff8bddfacc   172  d503201f       constant
0xffff8bddfad0   176  8bb06000       constant
0xffff8bddfad4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bddfab8  runtime entry
0xffff8bddfac4  constant pool (size 20)

--- End code ---
kind = BINARY_OP_IC
major_key = BinaryOpICStub
ic_state = MONOMORPHIC
extra_ic_state = 1179
type = NORMAL
name = BinaryOpICStub(MOD:Smi*1->Smi)
compiler = crankshaft
Instructions (size = 192)
0xffff8bddfa20     0  mov x2, x1
0xffff8bddfa24     4  tbnz w2, #0, #+0x44 (addr 0xffff8bddfa68)
0xffff8bddfa28     8  mov x3, x0
0xffff8bddfa2c    12  tbnz w3, #0, #+0x4c (addr 0xffff8bddfa78)
0xffff8bddfa30    16  asr x3, x3, #32
0xffff8bddfa34    20  cmp w3, #0x1 (1)
0xffff8bddfa38    24  b.eq #+0x8 (addr 0xffff8bddfa40)
0xffff8bddfa3c    28  b #+0x4c (addr 0xffff8bddfa88)
0xffff8bddfa40    32  asr x2, x2, #32
0xffff8bddfa44    36  tbz w2, #31, #+0x18 (addr 0xffff8bddfa5c)
0xffff8bddfa48    40  neg w2, w2
0xffff8bddfa4c    44  movz w2, #0x0
0xffff8bddfa50    48  negs w2, w2
0xffff8bddfa54    52  b.eq #+0x44 (addr 0xffff8bddfa98)
0xffff8bddfa58    56  b #+0x8 (addr 0xffff8bddfa60)
0xffff8bddfa5c    60  movz w2, #0x0
0xffff8bddfa60    64  lsl x0, x2, #32
0xffff8bddfa64    68  ret
0xffff8bddfa68    72  movz x16, #0x0
0xffff8bddfa6c    76  sub csp, jssp, #0x10 (16)
0xffff8bddfa70    80  stp fp, lr, [jssp, #-16]!
0xffff8bddfa74    84  bl #+0x34 (addr 0xffff8bddfaa8)
0xffff8bddfa78    88  movz x16, #0x8
0xffff8bddfa7c    92  sub csp, jssp, #0x10 (16)
0xffff8bddfa80    96  stp fp, lr, [jssp, #-16]!
0xffff8bddfa84   100  bl #+0x24 (addr 0xffff8bddfaa8)
0xffff8bddfa88   104  movz x16, #0x10
0xffff8bddfa8c   108  sub csp, jssp, #0x10 (16)
0xffff8bddfa90   112  stp fp, lr, [jssp, #-16]!
0xffff8bddfa94   116  bl #+0x14 (addr 0xffff8bddfaa8)
0xffff8bddfa98   120  movz x16, #0x18
0xffff8bddfa9c   124  sub csp, jssp, #0x10 (16)
0xffff8bddfaa0   128  stp fp, lr, [jssp, #-16]!
0xffff8bddfaa4   132  bl #+0x4 (addr 0xffff8bddfaa8)
0xffff8bddfaa8   136  movz x17, #0xa00000000
0xffff8bddfaac   140  sub csp, jssp, #0x10 (16)
0xffff8bddfab0   144  stp x17, cp, [jssp, #-16]!
0xffff8bddfab4   148  add fp, jssp, #0x10 (16)
0xffff8bddfab8   152  ldr x17, pc+24 (addr 0x0000ffff8bddfad0)    ;; lazy deoptimization bailout 0
0xffff8bddfabc   156  add x17, x17, x16
0xffff8bddfac0   160  br x17
0xffff8bddfac4   164  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bddfac8   168  d63f03e0       constant
0xffff8bddfacc   172  d503201f       constant
0xffff8bddfad0   176  8bb06000       constant
0xffff8bddfad4   180  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bddfab8  runtime entry
0xffff8bddfac4  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = SMI*NUMBER -> NUMBER
compare_operation = LT
name = CompareICStub
compiler = unknown
Instructions (size = 280)
0xffff8bde0ae0     0  tbnz w1, #0, #+0x88 (addr 0xffff8bde0b68)
0xffff8bde0ae4     4  scvtf d0, x0, #32
0xffff8bde0ae8     8  scvtf d1, x1, #32
0xffff8bde0aec    12  tbz w0, #0, #+0x18 (addr 0xffff8bde0b04)
0xffff8bde0af0    16  ldur x16, [x0, #-1]
0xffff8bde0af4    20  ldr x17, [x26, #120]
0xffff8bde0af8    24  cmp x16, x17
0xffff8bde0afc    28  b.ne #+0x3c (addr 0xffff8bde0b38)
0xffff8bde0b00    32  ldur d0, [x0, #7]
0xffff8bde0b04    36  tbz w1, #0, #+0x18 (addr 0xffff8bde0b1c)
0xffff8bde0b08    40  ldur x16, [x1, #-1]
0xffff8bde0b0c    44  ldr x17, [x26, #120]
0xffff8bde0b10    48  cmp x16, x17
0xffff8bde0b14    52  b.ne #+0x48 (addr 0xffff8bde0b5c)
0xffff8bde0b18    56  ldur d1, [x1, #7]
0xffff8bde0b1c    60  fcmp d1, d0
0xffff8bde0b20    64  b.vs #+0x10 (addr 0xffff8bde0b30)
0xffff8bde0b24    68  cset x0, gt
0xffff8bde0b28    72  csinv x0, x0, xzr, ge
0xffff8bde0b2c    76  ret
0xffff8bde0b30    80  ldr x16, pc+168 (addr 0x0000ffff8bde0bd8)    ;; code: COMPARE_IC, GENERIC
0xffff8bde0b34    84  br x16
0xffff8bde0b38    88  ldr x16, [x26, #40]
0xffff8bde0b3c    92  cmp x0, x16
0xffff8bde0b40    96  b.ne #+0x28 (addr 0xffff8bde0b68)
0xffff8bde0b44   100  tbz w1, #0, #-0x14 (addr 0xffff8bde0b30)
0xffff8bde0b48   104  ldur x16, [x1, #-1]
0xffff8bde0b4c   108  ldr x17, [x26, #120]
0xffff8bde0b50   112  cmp x16, x17
0xffff8bde0b54   116  b.ne #+0x8 (addr 0xffff8bde0b5c)
0xffff8bde0b58   120  b #-0x28 (addr 0xffff8bde0b30)
0xffff8bde0b5c   124  ldr x16, [x26, #40]
0xffff8bde0b60   128  cmp x1, x16
0xffff8bde0b64   132  b.eq #-0x34 (addr 0xffff8bde0b30)
0xffff8bde0b68   136  movz x16, #0xc00000000
0xffff8bde0b6c   140  sub csp, jssp, #0x10 (16)
0xffff8bde0b70   144  stp fp, lr, [jssp, #-16]!
0xffff8bde0b74   148  sub csp, jssp, #0x10 (16)
0xffff8bde0b78   152  str x16, [jssp, #-8]!
0xffff8bde0b7c   156  ldr x17, pc+100 (addr 0x0000ffff8bde0be0)    ;; object: 0xffff8bde0a81 <Code: COMPARE_IC>
0xffff8bde0b80   160  sub csp, jssp, #0x10 (16)
0xffff8bde0b84   164  str x17, [jssp, #-8]!
0xffff8bde0b88   168  add fp, jssp, #0x10 (16)
0xffff8bde0b8c   172  sub csp, jssp, #0x18 (24)
0xffff8bde0b90   176  stp lr, x0, [jssp, #-24]!
0xffff8bde0b94   180  str x1, [jssp, #16]
0xffff8bde0b98   184  movz x10, #0x3100000000
0xffff8bde0b9c   188  sub csp, jssp, #0x18 (24)
0xffff8bde0ba0   192  stp x10, x0, [jssp, #-24]!
0xffff8bde0ba4   196  str x1, [jssp, #16]
0xffff8bde0ba8   200  movz x0, #0x3
0xffff8bde0bac   204  ldr x1, pc+60 (addr 0x0000ffff8bde0be8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bde0bb0   208  ldr x16, pc+64 (addr 0x0000ffff8bde0bf0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bde0bb4   212  blr x16
0xffff8bde0bb8   216  add x11, x0, #0x5f (95)
0xffff8bde0bbc   220  ldr x1, [jssp, #16]
0xffff8bde0bc0   224  ldp lr, x0, [jssp], #24
0xffff8bde0bc4   228  mov jssp, fp
0xffff8bde0bc8   232  ldp fp, lr, [jssp], #16
0xffff8bde0bcc   236  br x11
0xffff8bde0bd0   240  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bde0bd4   244  d63f03e0       constant
0xffff8bde0bd8   248  8bdd35a0       constant
0xffff8bde0bdc   252  0000ffff       constant
0xffff8bde0be0   256  8bde0a81       constant
0xffff8bde0be4   260  0000ffff       constant
0xffff8bde0be8   264  00c8a980       constant
0xffff8bde0bec   268  00000000       constant
0xffff8bde0bf0   272  8bd06060       constant
0xffff8bde0bf4   276  0000ffff       constant


RelocInfo (size = 15)
0xffff8bde0b30  code target (COMPARE_IC)  (0xffff8bdd35a0)
0xffff8bde0b7c  embedded object  (0xffff8bde0a81 <Code: COMPARE_IC>)
0xffff8bde0bac  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bde0bb0  code target (STUB)  (0xffff8bd06060)
0xffff8bde0bd0  constant pool (size 40)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 34
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 176)
0xffff8bde4400     0  ldr x16, [x26, #64]
0xffff8bde4404     4  cmp x0, x16
0xffff8bde4408     8  b.eq #+0x3c (addr 0xffff8bde4444)
0xffff8bde440c    12  ldr x16, [x26, #72]
0xffff8bde4410    16  cmp x0, x16
0xffff8bde4414    20  b.eq #+0x28 (addr 0xffff8bde443c)
0xffff8bde4418    24  tbz w0, #0, #+0x50 (addr 0xffff8bde4468)
0xffff8bde441c    28  ldur x2, [x0, #-1]
0xffff8bde4420    32  ldrb w1, [x2, #11]
0xffff8bde4424    36  cmp x1, #0x80 (128)
0xffff8bde4428    40  b.ge #+0x10 (addr 0xffff8bde4438)
0xffff8bde442c    44  ldur x1, [x0, #15]
0xffff8bde4430    48  cbz x1, #+0xc (addr 0xffff8bde443c)
0xffff8bde4434    52  b #+0x10 (addr 0xffff8bde4444)
0xffff8bde4438    56  b #+0x30 (addr 0xffff8bde4468)
0xffff8bde443c    60  ldr x0, pc+28 (addr 0x0000ffff8bde4458)    ;; object: 0x26c042b1 <false>
0xffff8bde4440    64  ret
0xffff8bde4444    68  ldr x0, pc+28 (addr 0x0000ffff8bde4460)    ;; object: 0x26c04281 <true>
0xffff8bde4448    72  ret
0xffff8bde444c    76  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bde4450    80  d63f03e0       constant
0xffff8bde4454    84  d503201f       constant
0xffff8bde4458    88  26c042b1       constant
0xffff8bde445c    92  00000000       constant
0xffff8bde4460    96  26c04281       constant
0xffff8bde4464   100  00000000       constant
0xffff8bde4468   104  movz x16, #0x0
0xffff8bde446c   108  sub csp, jssp, #0x10 (16)
0xffff8bde4470   112  stp fp, lr, [jssp, #-16]!
0xffff8bde4474   116  bl #+0x4 (addr 0xffff8bde4478)
0xffff8bde4478   120  movz x17, #0xa00000000
0xffff8bde447c   124  sub csp, jssp, #0x10 (16)
0xffff8bde4480   128  stp x17, cp, [jssp, #-16]!
0xffff8bde4484   132  add fp, jssp, #0x10 (16)
0xffff8bde4488   136  ldr x17, pc+24 (addr 0x0000ffff8bde44a0)    ;; lazy deoptimization bailout 0
0xffff8bde448c   140  add x17, x17, x16
0xffff8bde4490   144  br x17
0xffff8bde4494   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bde4498   152  d63f03e0       constant
0xffff8bde449c   156  d503201f       constant
0xffff8bde44a0   160  8bb06000       constant
0xffff8bde44a4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bde443c  embedded object  (0x26c042b1 <false>)
0xffff8bde4444  embedded object  (0x26c04281 <true>)
0xffff8bde444c  constant pool (size 28)
0xffff8bde4488  runtime entry
0xffff8bde4494  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 34
type = NORMAL
name = ToBooleanICStub(Bool,String)
compiler = crankshaft
Instructions (size = 176)
0xffff8bde4400     0  ldr x16, [x26, #64]
0xffff8bde4404     4  cmp x0, x16
0xffff8bde4408     8  b.eq #+0x3c (addr 0xffff8bde4444)
0xffff8bde440c    12  ldr x16, [x26, #72]
0xffff8bde4410    16  cmp x0, x16
0xffff8bde4414    20  b.eq #+0x28 (addr 0xffff8bde443c)
0xffff8bde4418    24  tbz w0, #0, #+0x50 (addr 0xffff8bde4468)
0xffff8bde441c    28  ldur x2, [x0, #-1]
0xffff8bde4420    32  ldrb w1, [x2, #11]
0xffff8bde4424    36  cmp x1, #0x80 (128)
0xffff8bde4428    40  b.ge #+0x10 (addr 0xffff8bde4438)
0xffff8bde442c    44  ldur x1, [x0, #15]
0xffff8bde4430    48  cbz x1, #+0xc (addr 0xffff8bde443c)
0xffff8bde4434    52  b #+0x10 (addr 0xffff8bde4444)
0xffff8bde4438    56  b #+0x30 (addr 0xffff8bde4468)
0xffff8bde443c    60  ldr x0, pc+28 (addr 0x0000ffff8bde4458)    ;; object: 0x26c042b1 <false>
0xffff8bde4440    64  ret
0xffff8bde4444    68  ldr x0, pc+28 (addr 0x0000ffff8bde4460)    ;; object: 0x26c04281 <true>
0xffff8bde4448    72  ret
0xffff8bde444c    76  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bde4450    80  d63f03e0       constant
0xffff8bde4454    84  d503201f       constant
0xffff8bde4458    88  26c042b1       constant
0xffff8bde445c    92  00000000       constant
0xffff8bde4460    96  26c04281       constant
0xffff8bde4464   100  00000000       constant
0xffff8bde4468   104  movz x16, #0x0
0xffff8bde446c   108  sub csp, jssp, #0x10 (16)
0xffff8bde4470   112  stp fp, lr, [jssp, #-16]!
0xffff8bde4474   116  bl #+0x4 (addr 0xffff8bde4478)
0xffff8bde4478   120  movz x17, #0xa00000000
0xffff8bde447c   124  sub csp, jssp, #0x10 (16)
0xffff8bde4480   128  stp x17, cp, [jssp, #-16]!
0xffff8bde4484   132  add fp, jssp, #0x10 (16)
0xffff8bde4488   136  ldr x17, pc+24 (addr 0x0000ffff8bde44a0)    ;; lazy deoptimization bailout 0
0xffff8bde448c   140  add x17, x17, x16
0xffff8bde4490   144  br x17
0xffff8bde4494   148  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bde4498   152  d63f03e0       constant
0xffff8bde449c   156  d503201f       constant
0xffff8bde44a0   160  8bb06000       constant
0xffff8bde44a4   164  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bde443c  embedded object  (0x26c042b1 <false>)
0xffff8bde4444  embedded object  (0x26c04281 <true>)
0xffff8bde444c  constant pool (size 28)
0xffff8bde4488  runtime entry
0xffff8bde4494  constant pool (size 20)


--- Code ---
kind = TO_BOOLEAN_IC
major_key = <NoCache>Stub
ic_state = MONOMORPHIC
extra_ic_state = 20
type = NORMAL
name = ToBooleanICStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bde4520     0  ldr x16, [x26, #56]
0xffff8bde4524     4  cmp x0, x16
0xffff8bde4528     8  b.eq #+0x24 (addr 0xffff8bde454c)
0xffff8bde452c    12  tbz w0, #0, #+0x4c (addr 0xffff8bde4578)
0xffff8bde4530    16  ldur x2, [x0, #-1]
0xffff8bde4534    20  ldrb w1, [x2, #12]
0xffff8bde4538    24  tbnz w1, #4, #+0x14 (addr 0xffff8bde454c)
0xffff8bde453c    28  ldrb w1, [x2, #11]
0xffff8bde4540    32  cmp x1, #0xb1 (177)
0xffff8bde4544    36  b.ge #+0x10 (addr 0xffff8bde4554)
0xffff8bde4548    40  b #+0x30 (addr 0xffff8bde4578)
0xffff8bde454c    44  ldr x0, pc+28 (addr 0x0000ffff8bde4568)    ;; object: 0x26c042b1 <false>
0xffff8bde4550    48  ret
0xffff8bde4554    52  ldr x0, pc+28 (addr 0x0000ffff8bde4570)    ;; object: 0x26c04281 <true>
0xffff8bde4558    56  ret
0xffff8bde455c    60  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bde4560    64  d63f03e0       constant
0xffff8bde4564    68  d503201f       constant
0xffff8bde4568    72  26c042b1       constant
0xffff8bde456c    76  00000000       constant
0xffff8bde4570    80  26c04281       constant
0xffff8bde4574    84  00000000       constant
0xffff8bde4578    88  movz x16, #0x0
0xffff8bde457c    92  sub csp, jssp, #0x10 (16)
0xffff8bde4580    96  stp fp, lr, [jssp, #-16]!
0xffff8bde4584   100  bl #+0x4 (addr 0xffff8bde4588)
0xffff8bde4588   104  movz x17, #0xa00000000
0xffff8bde458c   108  sub csp, jssp, #0x10 (16)
0xffff8bde4590   112  stp x17, cp, [jssp, #-16]!
0xffff8bde4594   116  add fp, jssp, #0x10 (16)
0xffff8bde4598   120  ldr x17, pc+24 (addr 0x0000ffff8bde45b0)    ;; lazy deoptimization bailout 0
0xffff8bde459c   124  add x17, x17, x16
0xffff8bde45a0   128  br x17
0xffff8bde45a4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bde45a8   136  d63f03e0       constant
0xffff8bde45ac   140  d503201f       constant
0xffff8bde45b0   144  8bb06000       constant
0xffff8bde45b4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bde454c  embedded object  (0x26c042b1 <false>)
0xffff8bde4554  embedded object  (0x26c04281 <true>)
0xffff8bde455c  constant pool (size 28)
0xffff8bde4598  runtime entry
0xffff8bde45a4  constant pool (size 20)

--- End code ---
kind = TO_BOOLEAN_IC
major_key = ToBooleanICStub
ic_state = MONOMORPHIC
extra_ic_state = 20
type = NORMAL
name = ToBooleanICStub(Null,SpecObject)
compiler = crankshaft
Instructions (size = 160)
0xffff8bde4520     0  ldr x16, [x26, #56]
0xffff8bde4524     4  cmp x0, x16
0xffff8bde4528     8  b.eq #+0x24 (addr 0xffff8bde454c)
0xffff8bde452c    12  tbz w0, #0, #+0x4c (addr 0xffff8bde4578)
0xffff8bde4530    16  ldur x2, [x0, #-1]
0xffff8bde4534    20  ldrb w1, [x2, #12]
0xffff8bde4538    24  tbnz w1, #4, #+0x14 (addr 0xffff8bde454c)
0xffff8bde453c    28  ldrb w1, [x2, #11]
0xffff8bde4540    32  cmp x1, #0xb1 (177)
0xffff8bde4544    36  b.ge #+0x10 (addr 0xffff8bde4554)
0xffff8bde4548    40  b #+0x30 (addr 0xffff8bde4578)
0xffff8bde454c    44  ldr x0, pc+28 (addr 0x0000ffff8bde4568)    ;; object: 0x26c042b1 <false>
0xffff8bde4550    48  ret
0xffff8bde4554    52  ldr x0, pc+28 (addr 0x0000ffff8bde4570)    ;; object: 0x26c04281 <true>
0xffff8bde4558    56  ret
0xffff8bde455c    60  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bde4560    64  d63f03e0       constant
0xffff8bde4564    68  d503201f       constant
0xffff8bde4568    72  26c042b1       constant
0xffff8bde456c    76  00000000       constant
0xffff8bde4570    80  26c04281       constant
0xffff8bde4574    84  00000000       constant
0xffff8bde4578    88  movz x16, #0x0
0xffff8bde457c    92  sub csp, jssp, #0x10 (16)
0xffff8bde4580    96  stp fp, lr, [jssp, #-16]!
0xffff8bde4584   100  bl #+0x4 (addr 0xffff8bde4588)
0xffff8bde4588   104  movz x17, #0xa00000000
0xffff8bde458c   108  sub csp, jssp, #0x10 (16)
0xffff8bde4590   112  stp x17, cp, [jssp, #-16]!
0xffff8bde4594   116  add fp, jssp, #0x10 (16)
0xffff8bde4598   120  ldr x17, pc+24 (addr 0x0000ffff8bde45b0)    ;; lazy deoptimization bailout 0
0xffff8bde459c   124  add x17, x17, x16
0xffff8bde45a0   128  br x17
0xffff8bde45a4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bde45a8   136  d63f03e0       constant
0xffff8bde45ac   140  d503201f       constant
0xffff8bde45b0   144  8bb06000       constant
0xffff8bde45b4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bde454c  embedded object  (0x26c042b1 <false>)
0xffff8bde4554  embedded object  (0x26c04281 <true>)
0xffff8bde455c  constant pool (size 28)
0xffff8bde4598  runtime entry
0xffff8bde45a4  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bde4620     0  ldur x0, [x1, #-1]
0xffff8bde4624     4  ldur x0, [x0, #47]
0xffff8bde4628     8  movz x16, #0x17f
0xffff8bde462c    12  ldr x0, [x0, x16]
0xffff8bde4630    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bde4620     0  ldur x0, [x1, #-1]
0xffff8bde4624     4  ldur x0, [x0, #47]
0xffff8bde4628     8  movz x16, #0x17f
0xffff8bde462c    12  ldr x0, [x0, x16]
0xffff8bde4630    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = JSON
compiler = unknown
Instructions (size = 120)
0xffff8bde5580     0  sub csp, jssp, #0x8 (8)
0xffff8bde5584     4  str x3, [jssp, #-8]!
0xffff8bde5588     8  sub csp, jssp, #0x8 (8)
0xffff8bde558c    12  str x0, [jssp, #-8]!
0xffff8bde5590    16  ldr x0, pc+80 (addr 0x0000ffff8bde55e0)    ;; object: 0x26cc5d51 Cell for 0
0xffff8bde5594    20  ldur x0, [x0, #7]
0xffff8bde5598    24  cmp x0, #0x0 (0)
0xffff8bde559c    28  b.ne #+0x2c (addr 0xffff8bde55c8)
0xffff8bde55a0    32  ldr x0, pc+72 (addr 0x0000ffff8bde55e8)    ;; object: 0x327cb1c1 WeakCell for 0x26c46d21 PropertyCell for 0x26c46ce9 <a JSON with map 0x5f513b91>
0xffff8bde55a4    36  ldur x0, [x0, #7]
0xffff8bde55a8    40  tbz w0, #0, #+0x20 (addr 0xffff8bde55c8)
0xffff8bde55ac    44  ldur x0, [x0, #15]
0xffff8bde55b0    48  ldr x16, [x26, #88]
0xffff8bde55b4    52  cmp x0, x16
0xffff8bde55b8    56  b.eq #+0x10 (addr 0xffff8bde55c8)
0xffff8bde55bc    60  add jssp, jssp, #0x10 (16)
0xffff8bde55c0    64  ret
0xffff8bde55c4    68  b #+0x14 (addr 0xffff8bde55d8)
0xffff8bde55c8    72  ldr x0, [jssp], #8
0xffff8bde55cc    76  ldr x3, [jssp], #8
0xffff8bde55d0    80  ldr x16, pc+32 (addr 0x0000ffff8bde55f0)    ;; code: BUILTIN
0xffff8bde55d4    84  br x16
0xffff8bde55d8    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bde55dc    92  d63f03e0       constant
0xffff8bde55e0    96  26cc5d51       constant
0xffff8bde55e4   100  00000000       constant
0xffff8bde55e8   104  327cb1c1       constant
0xffff8bde55ec   108  00000000       constant
0xffff8bde55f0   112  8bd222e0       constant
0xffff8bde55f4   116  0000ffff       constant


RelocInfo (size = 9)
0xffff8bde5590  embedded object  (0x26cc5d51 Cell for 0)
0xffff8bde55a0  embedded object  (0x327cb1c1 WeakCell for 0x26c46d21 PropertyCell for 0x26c46ce9 <a JSON with map 0x5f513b91>)
0xffff8bde55d0  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde55d8  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = toString
compiler = unknown
Instructions (size = 152)
0xffff8bde5660     0  sub csp, jssp, #0x8 (8)
0xffff8bde5664     4  str x3, [jssp, #-8]!
0xffff8bde5668     8  sub csp, jssp, #0x8 (8)
0xffff8bde566c    12  str x0, [jssp, #-8]!
0xffff8bde5670    16  ldur x3, [cp, #39]
0xffff8bde5674    20  movz x16, #0x2e7
0xffff8bde5678    24  ldr x3, [x3, x16]
0xffff8bde567c    28  ldur x3, [x3, #23]
0xffff8bde5680    32  ldur x3, [x3, #23]
0xffff8bde5684    36  ldr x0, pc+84 (addr 0x0000ffff8bde56d8)    ;; object: 0x26c63e59 Cell for 0
0xffff8bde5688    40  ldur x0, [x0, #7]
0xffff8bde568c    44  cmp x0, #0x0 (0)
0xffff8bde5690    48  b.ne #+0x1c (addr 0xffff8bde56ac)
0xffff8bde5694    52  ldur x0, [x3, #-1]
0xffff8bde5698    56  ldr x4, pc+72 (addr 0x0000ffff8bde56e0)    ;; object: 0x32706e39 WeakCell for 0x5f5156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>
0xffff8bde569c    60  ldur x4, [x4, #7]
0xffff8bde56a0    64  cmp x0, x4
0xffff8bde56a4    68  b.ne #+0x8 (addr 0xffff8bde56ac)
0xffff8bde56a8    72  b #+0x14 (addr 0xffff8bde56bc)
0xffff8bde56ac    76  ldr x0, [jssp], #8
0xffff8bde56b0    80  ldr x3, [jssp], #8
0xffff8bde56b4    84  ldr x16, pc+52 (addr 0x0000ffff8bde56e8)    ;; code: BUILTIN
0xffff8bde56b8    88  br x16
0xffff8bde56bc    92  add jssp, jssp, #0x10 (16)
0xffff8bde56c0    96  mov x1, x3
0xffff8bde56c4   100  ldr x16, pc+44 (addr 0x0000ffff8bde56f0)    ;; code: HANDLER, LoadConstantStub, minor: 3
0xffff8bde56c8   104  br x16
0xffff8bde56cc   108  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff8bde56d0   112  d63f03e0       constant
0xffff8bde56d4   116  d503201f       constant
0xffff8bde56d8   120  26c63e59       constant
0xffff8bde56dc   124  00000000       constant
0xffff8bde56e0   128  32706e39       constant
0xffff8bde56e4   132  00000000       constant
0xffff8bde56e8   136  8bd222e0       constant
0xffff8bde56ec   140  0000ffff       constant
0xffff8bde56f0   144  8bd43400       constant
0xffff8bde56f4   148  0000ffff       constant


RelocInfo (size = 10)
0xffff8bde5684  embedded object  (0x26c63e59 Cell for 0)
0xffff8bde5698  embedded object  (0x32706e39 WeakCell for 0x5f5156b9 <Map(FAST_STRING_WRAPPER_ELEMENTS)>)
0xffff8bde56b4  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde56c4  code target (HANDLER)  (0xffff8bd43400)
0xffff8bde56cc  constant pool (size 44)

kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 96)
0xffff8bde5760     0  sub csp, jssp, #0x8 (8)
0xffff8bde5764     4  str x3, [jssp, #-8]!
0xffff8bde5768     8  sub csp, jssp, #0x8 (8)
0xffff8bde576c    12  str x0, [jssp, #-8]!
0xffff8bde5770    16  ldr x0, pc+56 (addr 0x0000ffff8bde57a8)    ;; object: 0x26c63e59 Cell for 0
0xffff8bde5774    20  ldur x0, [x0, #7]
0xffff8bde5778    24  cmp x0, #0x0 (0)
0xffff8bde577c    28  b.ne #+0x14 (addr 0xffff8bde5790)
0xffff8bde5780    32  add jssp, jssp, #0x10 (16)
0xffff8bde5784    36  ldr x0, pc+44 (addr 0x0000ffff8bde57b0)    ;; object: 0x26c04241 <undefined>
0xffff8bde5788    40  ret
0xffff8bde578c    44  b #+0x14 (addr 0xffff8bde57a0)
0xffff8bde5790    48  ldr x0, [jssp], #8
0xffff8bde5794    52  ldr x3, [jssp], #8
0xffff8bde5798    56  ldr x16, pc+32 (addr 0x0000ffff8bde57b8)    ;; code: BUILTIN
0xffff8bde579c    60  br x16
0xffff8bde57a0    64  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bde57a4    68  d63f03e0       constant
0xffff8bde57a8    72  26c63e59       constant
0xffff8bde57ac    76  00000000       constant
0xffff8bde57b0    80  26c04241       constant
0xffff8bde57b4    84  00000000       constant
0xffff8bde57b8    88  8bd222e0       constant
0xffff8bde57bc    92  0000ffff       constant


RelocInfo (size = 9)
0xffff8bde5770  embedded object  (0x26c63e59 Cell for 0)
0xffff8bde5784  embedded object  (0x26c04241 <undefined>)
0xffff8bde5798  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde57a0  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = id
compiler = unknown
Instructions (size = 152)
0xffff8bde5820     0  sub csp, jssp, #0x8 (8)
0xffff8bde5824     4  str x3, [jssp, #-8]!
0xffff8bde5828     8  sub csp, jssp, #0x8 (8)
0xffff8bde582c    12  str x4, [jssp, #-8]!
0xffff8bde5830    16  ldr x3, pc+88 (addr 0x0000ffff8bde5888)    ;; object: 0x327cb411 Cell for 0
0xffff8bde5834    20  ldur x3, [x3, #7]
0xffff8bde5838    24  cmp x3, #0x0 (0)
0xffff8bde583c    28  b.ne #+0x30 (addr 0xffff8bde586c)
0xffff8bde5840    32  tbz w0, #0, #+0x2c (addr 0xffff8bde586c)
0xffff8bde5844    36  ldr x5, pc+76 (addr 0x0000ffff8bde5890)    ;; object: 0x32736b19 WeakCell for 0x5f5362f1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde5848    40  ldur x5, [x5, #7]
0xffff8bde584c    44  tbz w5, #0, #+0x20 (addr 0xffff8bde586c)
0xffff8bde5850    48  ldursw x4, [x5, #15]
0xffff8bde5854    52  tbnz w4, #23, #+0x18 (addr 0xffff8bde586c)
0xffff8bde5858    56  ldr x4, [jssp], #8
0xffff8bde585c    60  ldr x3, [jssp], #8
0xffff8bde5860    64  ldr x2, pc+56 (addr 0x0000ffff8bde5898)    ;; object: 0x26c4e919 <String[2]: id>
0xffff8bde5864    68  ldr x16, pc+60 (addr 0x0000ffff8bde58a0)    ;; code: HANDLER, StoreTransitionStub, minor: 198659
0xffff8bde5868    72  br x16
0xffff8bde586c    76  ldr x2, pc+60 (addr 0x0000ffff8bde58a8)    ;; object: 0x26c4e919 <String[2]: id>
0xffff8bde5870    80  ldr x4, [jssp], #8
0xffff8bde5874    84  ldr x3, [jssp], #8
0xffff8bde5878    88  ldr x16, pc+56 (addr 0x0000ffff8bde58b0)    ;; code: BUILTIN
0xffff8bde587c    92  br x16
0xffff8bde5880    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bde5884   100  d63f03e0       constant
0xffff8bde5888   104  327cb411       constant
0xffff8bde588c   108  00000000       constant
0xffff8bde5890   112  32736b19       constant
0xffff8bde5894   116  00000000       constant
0xffff8bde5898   120  26c4e919       constant
0xffff8bde589c   124  00000000       constant
0xffff8bde58a0   128  8bd8b940       constant
0xffff8bde58a4   132  0000ffff       constant
0xffff8bde58a8   136  26c4e919       constant
0xffff8bde58ac   140  00000000       constant
0xffff8bde58b0   144  8bd22420       constant
0xffff8bde58b4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bde5830  embedded object  (0x327cb411 Cell for 0)
0xffff8bde5844  embedded object  (0x32736b19 WeakCell for 0x5f5362f1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde5860  embedded object  (0x26c4e919 <String[2]: id>)
0xffff8bde5864  code target (HANDLER)  (0xffff8bd8b940)
0xffff8bde586c  embedded object  (0x26c4e919 <String[2]: id>)
0xffff8bde5878  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bde5880  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = exports
compiler = unknown
Instructions (size = 152)
0xffff8bde5920     0  sub csp, jssp, #0x8 (8)
0xffff8bde5924     4  str x3, [jssp, #-8]!
0xffff8bde5928     8  sub csp, jssp, #0x8 (8)
0xffff8bde592c    12  str x4, [jssp, #-8]!
0xffff8bde5930    16  ldr x3, pc+88 (addr 0x0000ffff8bde5988)    ;; object: 0x327cb411 Cell for 0
0xffff8bde5934    20  ldur x3, [x3, #7]
0xffff8bde5938    24  cmp x3, #0x0 (0)
0xffff8bde593c    28  b.ne #+0x30 (addr 0xffff8bde596c)
0xffff8bde5940    32  tbz w0, #0, #+0x2c (addr 0xffff8bde596c)
0xffff8bde5944    36  ldr x5, pc+76 (addr 0x0000ffff8bde5990)    ;; object: 0x32736b69 WeakCell for 0x5f536349 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde5948    40  ldur x5, [x5, #7]
0xffff8bde594c    44  tbz w5, #0, #+0x20 (addr 0xffff8bde596c)
0xffff8bde5950    48  ldursw x4, [x5, #15]
0xffff8bde5954    52  tbnz w4, #23, #+0x18 (addr 0xffff8bde596c)
0xffff8bde5958    56  ldr x4, [jssp], #8
0xffff8bde595c    60  ldr x3, [jssp], #8
0xffff8bde5960    64  ldr x2, pc+56 (addr 0x0000ffff8bde5998)    ;; object: 0x26cb2651 <String[7]: exports>
0xffff8bde5964    68  ldr x16, pc+60 (addr 0x0000ffff8bde59a0)    ;; code: HANDLER, StoreTransitionStub, minor: 198660
0xffff8bde5968    72  br x16
0xffff8bde596c    76  ldr x2, pc+60 (addr 0x0000ffff8bde59a8)    ;; object: 0x26cb2651 <String[7]: exports>
0xffff8bde5970    80  ldr x4, [jssp], #8
0xffff8bde5974    84  ldr x3, [jssp], #8
0xffff8bde5978    88  ldr x16, pc+56 (addr 0x0000ffff8bde59b0)    ;; code: BUILTIN
0xffff8bde597c    92  br x16
0xffff8bde5980    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bde5984   100  d63f03e0       constant
0xffff8bde5988   104  327cb411       constant
0xffff8bde598c   108  00000000       constant
0xffff8bde5990   112  32736b69       constant
0xffff8bde5994   116  00000000       constant
0xffff8bde5998   120  26cb2651       constant
0xffff8bde599c   124  00000000       constant
0xffff8bde59a0   128  8bd8bb80       constant
0xffff8bde59a4   132  0000ffff       constant
0xffff8bde59a8   136  26cb2651       constant
0xffff8bde59ac   140  00000000       constant
0xffff8bde59b0   144  8bd22420       constant
0xffff8bde59b4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bde5930  embedded object  (0x327cb411 Cell for 0)
0xffff8bde5944  embedded object  (0x32736b69 WeakCell for 0x5f536349 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde5960  embedded object  (0x26cb2651 <String[7]: exports>)
0xffff8bde5964  code target (HANDLER)  (0xffff8bd8bb80)
0xffff8bde596c  embedded object  (0x26cb2651 <String[7]: exports>)
0xffff8bde5978  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bde5980  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = parent
compiler = unknown
Instructions (size = 152)
0xffff8bde5a20     0  sub csp, jssp, #0x8 (8)
0xffff8bde5a24     4  str x3, [jssp, #-8]!
0xffff8bde5a28     8  sub csp, jssp, #0x8 (8)
0xffff8bde5a2c    12  str x4, [jssp, #-8]!
0xffff8bde5a30    16  ldr x3, pc+88 (addr 0x0000ffff8bde5a88)    ;; object: 0x327cb411 Cell for 0
0xffff8bde5a34    20  ldur x3, [x3, #7]
0xffff8bde5a38    24  cmp x3, #0x0 (0)
0xffff8bde5a3c    28  b.ne #+0x30 (addr 0xffff8bde5a6c)
0xffff8bde5a40    32  tbz w0, #0, #+0x2c (addr 0xffff8bde5a6c)
0xffff8bde5a44    36  ldr x5, pc+76 (addr 0x0000ffff8bde5a90)    ;; object: 0x32736b81 WeakCell for 0x5f5363a1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde5a48    40  ldur x5, [x5, #7]
0xffff8bde5a4c    44  tbz w5, #0, #+0x20 (addr 0xffff8bde5a6c)
0xffff8bde5a50    48  ldursw x4, [x5, #15]
0xffff8bde5a54    52  tbnz w4, #23, #+0x18 (addr 0xffff8bde5a6c)
0xffff8bde5a58    56  ldr x4, [jssp], #8
0xffff8bde5a5c    60  ldr x3, [jssp], #8
0xffff8bde5a60    64  ldr x2, pc+56 (addr 0x0000ffff8bde5a98)    ;; object: 0x26ccfca1 <String[6]: parent>
0xffff8bde5a64    68  ldr x16, pc+60 (addr 0x0000ffff8bde5aa0)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff8bde5a68    72  br x16
0xffff8bde5a6c    76  ldr x2, pc+60 (addr 0x0000ffff8bde5aa8)    ;; object: 0x26ccfca1 <String[6]: parent>
0xffff8bde5a70    80  ldr x4, [jssp], #8
0xffff8bde5a74    84  ldr x3, [jssp], #8
0xffff8bde5a78    88  ldr x16, pc+56 (addr 0x0000ffff8bde5ab0)    ;; code: BUILTIN
0xffff8bde5a7c    92  br x16
0xffff8bde5a80    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bde5a84   100  d63f03e0       constant
0xffff8bde5a88   104  327cb411       constant
0xffff8bde5a8c   108  00000000       constant
0xffff8bde5a90   112  32736b81       constant
0xffff8bde5a94   116  00000000       constant
0xffff8bde5a98   120  26ccfca1       constant
0xffff8bde5a9c   124  00000000       constant
0xffff8bde5aa0   128  8bd8bdc0       constant
0xffff8bde5aa4   132  0000ffff       constant
0xffff8bde5aa8   136  26ccfca1       constant
0xffff8bde5aac   140  00000000       constant
0xffff8bde5ab0   144  8bd22420       constant
0xffff8bde5ab4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bde5a30  embedded object  (0x327cb411 Cell for 0)
0xffff8bde5a44  embedded object  (0x32736b81 WeakCell for 0x5f5363a1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde5a60  embedded object  (0x26ccfca1 <String[6]: parent>)
0xffff8bde5a64  code target (HANDLER)  (0xffff8bd8bdc0)
0xffff8bde5a6c  embedded object  (0x26ccfca1 <String[6]: parent>)
0xffff8bde5a78  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bde5a80  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = filename
compiler = unknown
Instructions (size = 152)
0xffff8bde5b20     0  sub csp, jssp, #0x8 (8)
0xffff8bde5b24     4  str x3, [jssp, #-8]!
0xffff8bde5b28     8  sub csp, jssp, #0x8 (8)
0xffff8bde5b2c    12  str x4, [jssp, #-8]!
0xffff8bde5b30    16  ldr x3, pc+88 (addr 0x0000ffff8bde5b88)    ;; object: 0x327cb411 Cell for 0
0xffff8bde5b34    20  ldur x3, [x3, #7]
0xffff8bde5b38    24  cmp x3, #0x0 (0)
0xffff8bde5b3c    28  b.ne #+0x30 (addr 0xffff8bde5b6c)
0xffff8bde5b40    32  tbz w0, #0, #+0x2c (addr 0xffff8bde5b6c)
0xffff8bde5b44    36  ldr x5, pc+76 (addr 0x0000ffff8bde5b90)    ;; object: 0x32736b99 WeakCell for 0x5f5363f9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde5b48    40  ldur x5, [x5, #7]
0xffff8bde5b4c    44  tbz w5, #0, #+0x20 (addr 0xffff8bde5b6c)
0xffff8bde5b50    48  ldursw x4, [x5, #15]
0xffff8bde5b54    52  tbnz w4, #23, #+0x18 (addr 0xffff8bde5b6c)
0xffff8bde5b58    56  ldr x4, [jssp], #8
0xffff8bde5b5c    60  ldr x3, [jssp], #8
0xffff8bde5b60    64  ldr x2, pc+56 (addr 0x0000ffff8bde5b98)    ;; object: 0x26cb9cf1 <String[8]: filename>
0xffff8bde5b64    68  ldr x16, pc+60 (addr 0x0000ffff8bde5ba0)    ;; code: HANDLER, StoreTransitionStub, minor: 198662
0xffff8bde5b68    72  br x16
0xffff8bde5b6c    76  ldr x2, pc+60 (addr 0x0000ffff8bde5ba8)    ;; object: 0x26cb9cf1 <String[8]: filename>
0xffff8bde5b70    80  ldr x4, [jssp], #8
0xffff8bde5b74    84  ldr x3, [jssp], #8
0xffff8bde5b78    88  ldr x16, pc+56 (addr 0x0000ffff8bde5bb0)    ;; code: BUILTIN
0xffff8bde5b7c    92  br x16
0xffff8bde5b80    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bde5b84   100  d63f03e0       constant
0xffff8bde5b88   104  327cb411       constant
0xffff8bde5b8c   108  00000000       constant
0xffff8bde5b90   112  32736b99       constant
0xffff8bde5b94   116  00000000       constant
0xffff8bde5b98   120  26cb9cf1       constant
0xffff8bde5b9c   124  00000000       constant
0xffff8bde5ba0   128  8bd8c000       constant
0xffff8bde5ba4   132  0000ffff       constant
0xffff8bde5ba8   136  26cb9cf1       constant
0xffff8bde5bac   140  00000000       constant
0xffff8bde5bb0   144  8bd22420       constant
0xffff8bde5bb4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bde5b30  embedded object  (0x327cb411 Cell for 0)
0xffff8bde5b44  embedded object  (0x32736b99 WeakCell for 0x5f5363f9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde5b60  embedded object  (0x26cb9cf1 <String[8]: filename>)
0xffff8bde5b64  code target (HANDLER)  (0xffff8bd8c000)
0xffff8bde5b6c  embedded object  (0x26cb9cf1 <String[8]: filename>)
0xffff8bde5b78  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bde5b80  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = loaded
compiler = unknown
Instructions (size = 152)
0xffff8bde5c20     0  sub csp, jssp, #0x8 (8)
0xffff8bde5c24     4  str x3, [jssp, #-8]!
0xffff8bde5c28     8  sub csp, jssp, #0x8 (8)
0xffff8bde5c2c    12  str x4, [jssp, #-8]!
0xffff8bde5c30    16  ldr x3, pc+88 (addr 0x0000ffff8bde5c88)    ;; object: 0x327cb411 Cell for 0
0xffff8bde5c34    20  ldur x3, [x3, #7]
0xffff8bde5c38    24  cmp x3, #0x0 (0)
0xffff8bde5c3c    28  b.ne #+0x30 (addr 0xffff8bde5c6c)
0xffff8bde5c40    32  tbz w0, #0, #+0x2c (addr 0xffff8bde5c6c)
0xffff8bde5c44    36  ldr x5, pc+76 (addr 0x0000ffff8bde5c90)    ;; object: 0x32736bb1 WeakCell for 0x5f536451 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde5c48    40  ldur x5, [x5, #7]
0xffff8bde5c4c    44  tbz w5, #0, #+0x20 (addr 0xffff8bde5c6c)
0xffff8bde5c50    48  ldursw x4, [x5, #15]
0xffff8bde5c54    52  tbnz w4, #23, #+0x18 (addr 0xffff8bde5c6c)
0xffff8bde5c58    56  ldr x4, [jssp], #8
0xffff8bde5c5c    60  ldr x3, [jssp], #8
0xffff8bde5c60    64  ldr x2, pc+56 (addr 0x0000ffff8bde5c98)    ;; object: 0x26cba9e1 <String[6]: loaded>
0xffff8bde5c64    68  ldr x16, pc+60 (addr 0x0000ffff8bde5ca0)    ;; code: HANDLER, StoreTransitionStub, minor: 198663
0xffff8bde5c68    72  br x16
0xffff8bde5c6c    76  ldr x2, pc+60 (addr 0x0000ffff8bde5ca8)    ;; object: 0x26cba9e1 <String[6]: loaded>
0xffff8bde5c70    80  ldr x4, [jssp], #8
0xffff8bde5c74    84  ldr x3, [jssp], #8
0xffff8bde5c78    88  ldr x16, pc+56 (addr 0x0000ffff8bde5cb0)    ;; code: BUILTIN
0xffff8bde5c7c    92  br x16
0xffff8bde5c80    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bde5c84   100  d63f03e0       constant
0xffff8bde5c88   104  327cb411       constant
0xffff8bde5c8c   108  00000000       constant
0xffff8bde5c90   112  32736bb1       constant
0xffff8bde5c94   116  00000000       constant
0xffff8bde5c98   120  26cba9e1       constant
0xffff8bde5c9c   124  00000000       constant
0xffff8bde5ca0   128  8bd8c240       constant
0xffff8bde5ca4   132  0000ffff       constant
0xffff8bde5ca8   136  26cba9e1       constant
0xffff8bde5cac   140  00000000       constant
0xffff8bde5cb0   144  8bd22420       constant
0xffff8bde5cb4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bde5c30  embedded object  (0x327cb411 Cell for 0)
0xffff8bde5c44  embedded object  (0x32736bb1 WeakCell for 0x5f536451 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde5c60  embedded object  (0x26cba9e1 <String[6]: loaded>)
0xffff8bde5c64  code target (HANDLER)  (0xffff8bd8c240)
0xffff8bde5c6c  embedded object  (0x26cba9e1 <String[6]: loaded>)
0xffff8bde5c78  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bde5c80  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bde5d20     0  tbz w0, #0, #+0x90 (addr 0xffff8bde5db0)
0xffff8bde5d24     4  mov x2, x0
0xffff8bde5d28     8  stur x2, [x1, #63]
0xffff8bde5d2c    12  add x3, x1, #0x3f (63)
0xffff8bde5d30    16  and x2, x2, #0xfffffffffff00000
0xffff8bde5d34    20  ldr x2, [x2, #8]
0xffff8bde5d38    24  tbz w2, #1, #+0x24 (addr 0xffff8bde5d5c)
0xffff8bde5d3c    28  and x2, x1, #0xfffffffffff00000
0xffff8bde5d40    32  ldr x2, [x2, #8]
0xffff8bde5d44    36  tbz w2, #2, #+0x18 (addr 0xffff8bde5d5c)
0xffff8bde5d48    40  sub csp, jssp, #0x8 (8)
0xffff8bde5d4c    44  str lr, [jssp, #-8]!
0xffff8bde5d50    48  ldr x16, pc+80 (addr 0x0000ffff8bde5da0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bde5d54    52  blr x16
0xffff8bde5d58    56  ldr lr, [jssp], #8
0xffff8bde5d5c    60  stur x5, [x1, #-1]
0xffff8bde5d60    64  tbz w5, #0, #+0x34 (addr 0xffff8bde5d94)
0xffff8bde5d64    68  sub x2, x1, #0x1 (1)
0xffff8bde5d68    72  and x5, x5, #0xfffffffffff00000
0xffff8bde5d6c    76  ldr x5, [x5, #8]
0xffff8bde5d70    80  tbz w5, #1, #+0x24 (addr 0xffff8bde5d94)
0xffff8bde5d74    84  and x5, x1, #0xfffffffffff00000
0xffff8bde5d78    88  ldr x5, [x5, #8]
0xffff8bde5d7c    92  tbz w5, #2, #+0x18 (addr 0xffff8bde5d94)
0xffff8bde5d80    96  sub csp, jssp, #0x8 (8)
0xffff8bde5d84   100  str lr, [jssp, #-8]!
0xffff8bde5d88   104  ldr x16, pc+32 (addr 0x0000ffff8bde5da8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bde5d8c   108  blr x16
0xffff8bde5d90   112  ldr lr, [jssp], #8
0xffff8bde5d94   116  ret
0xffff8bde5d98   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bde5d9c   124  d63f03e0       constant
0xffff8bde5da0   128  8bd170c0       constant
0xffff8bde5da4   132  0000ffff       constant
0xffff8bde5da8   136  8bd38080       constant
0xffff8bde5dac   140  0000ffff       constant
0xffff8bde5db0   144  movz x16, #0x0
0xffff8bde5db4   148  sub csp, jssp, #0x10 (16)
0xffff8bde5db8   152  stp fp, lr, [jssp, #-16]!
0xffff8bde5dbc   156  bl #+0x4 (addr 0xffff8bde5dc0)
0xffff8bde5dc0   160  movz x17, #0xa00000000
0xffff8bde5dc4   164  sub csp, jssp, #0x10 (16)
0xffff8bde5dc8   168  stp x17, cp, [jssp, #-16]!
0xffff8bde5dcc   172  add fp, jssp, #0x10 (16)
0xffff8bde5dd0   176  ldr x17, pc+24 (addr 0x0000ffff8bde5de8)    ;; lazy deoptimization bailout 0
0xffff8bde5dd4   180  add x17, x17, x16
0xffff8bde5dd8   184  br x17
0xffff8bde5ddc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bde5de0   192  d63f03e0       constant
0xffff8bde5de4   196  d503201f       constant
0xffff8bde5de8   200  8bb06000       constant
0xffff8bde5dec   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bde5d50  code target (STUB)  (0xffff8bd170c0)
0xffff8bde5d88  code target (STUB)  (0xffff8bd38080)
0xffff8bde5d98  constant pool (size 24)
0xffff8bde5dd0  runtime entry
0xffff8bde5ddc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bde5d20     0  tbz w0, #0, #+0x90 (addr 0xffff8bde5db0)
0xffff8bde5d24     4  mov x2, x0
0xffff8bde5d28     8  stur x2, [x1, #63]
0xffff8bde5d2c    12  add x3, x1, #0x3f (63)
0xffff8bde5d30    16  and x2, x2, #0xfffffffffff00000
0xffff8bde5d34    20  ldr x2, [x2, #8]
0xffff8bde5d38    24  tbz w2, #1, #+0x24 (addr 0xffff8bde5d5c)
0xffff8bde5d3c    28  and x2, x1, #0xfffffffffff00000
0xffff8bde5d40    32  ldr x2, [x2, #8]
0xffff8bde5d44    36  tbz w2, #2, #+0x18 (addr 0xffff8bde5d5c)
0xffff8bde5d48    40  sub csp, jssp, #0x8 (8)
0xffff8bde5d4c    44  str lr, [jssp, #-8]!
0xffff8bde5d50    48  ldr x16, pc+80 (addr 0x0000ffff8bde5da0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bde5d54    52  blr x16
0xffff8bde5d58    56  ldr lr, [jssp], #8
0xffff8bde5d5c    60  stur x5, [x1, #-1]
0xffff8bde5d60    64  tbz w5, #0, #+0x34 (addr 0xffff8bde5d94)
0xffff8bde5d64    68  sub x2, x1, #0x1 (1)
0xffff8bde5d68    72  and x5, x5, #0xfffffffffff00000
0xffff8bde5d6c    76  ldr x5, [x5, #8]
0xffff8bde5d70    80  tbz w5, #1, #+0x24 (addr 0xffff8bde5d94)
0xffff8bde5d74    84  and x5, x1, #0xfffffffffff00000
0xffff8bde5d78    88  ldr x5, [x5, #8]
0xffff8bde5d7c    92  tbz w5, #2, #+0x18 (addr 0xffff8bde5d94)
0xffff8bde5d80    96  sub csp, jssp, #0x8 (8)
0xffff8bde5d84   100  str lr, [jssp, #-8]!
0xffff8bde5d88   104  ldr x16, pc+32 (addr 0x0000ffff8bde5da8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bde5d8c   108  blr x16
0xffff8bde5d90   112  ldr lr, [jssp], #8
0xffff8bde5d94   116  ret
0xffff8bde5d98   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bde5d9c   124  d63f03e0       constant
0xffff8bde5da0   128  8bd170c0       constant
0xffff8bde5da4   132  0000ffff       constant
0xffff8bde5da8   136  8bd38080       constant
0xffff8bde5dac   140  0000ffff       constant
0xffff8bde5db0   144  movz x16, #0x0
0xffff8bde5db4   148  sub csp, jssp, #0x10 (16)
0xffff8bde5db8   152  stp fp, lr, [jssp, #-16]!
0xffff8bde5dbc   156  bl #+0x4 (addr 0xffff8bde5dc0)
0xffff8bde5dc0   160  movz x17, #0xa00000000
0xffff8bde5dc4   164  sub csp, jssp, #0x10 (16)
0xffff8bde5dc8   168  stp x17, cp, [jssp, #-16]!
0xffff8bde5dcc   172  add fp, jssp, #0x10 (16)
0xffff8bde5dd0   176  ldr x17, pc+24 (addr 0x0000ffff8bde5de8)    ;; lazy deoptimization bailout 0
0xffff8bde5dd4   180  add x17, x17, x16
0xffff8bde5dd8   184  br x17
0xffff8bde5ddc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bde5de0   192  d63f03e0       constant
0xffff8bde5de4   196  d503201f       constant
0xffff8bde5de8   200  8bb06000       constant
0xffff8bde5dec   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bde5d50  code target (STUB)  (0xffff8bd170c0)
0xffff8bde5d88  code target (STUB)  (0xffff8bd38080)
0xffff8bde5d98  constant pool (size 24)
0xffff8bde5dd0  runtime entry
0xffff8bde5ddc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = children
compiler = unknown
Instructions (size = 152)
0xffff8bde5e60     0  sub csp, jssp, #0x8 (8)
0xffff8bde5e64     4  str x3, [jssp, #-8]!
0xffff8bde5e68     8  sub csp, jssp, #0x8 (8)
0xffff8bde5e6c    12  str x4, [jssp, #-8]!
0xffff8bde5e70    16  ldr x3, pc+88 (addr 0x0000ffff8bde5ec8)    ;; object: 0x327cb411 Cell for 0
0xffff8bde5e74    20  ldur x3, [x3, #7]
0xffff8bde5e78    24  cmp x3, #0x0 (0)
0xffff8bde5e7c    28  b.ne #+0x30 (addr 0xffff8bde5eac)
0xffff8bde5e80    32  tbz w0, #0, #+0x2c (addr 0xffff8bde5eac)
0xffff8bde5e84    36  ldr x5, pc+76 (addr 0x0000ffff8bde5ed0)    ;; object: 0x32736c01 WeakCell for 0x5f5364a9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde5e88    40  ldur x5, [x5, #7]
0xffff8bde5e8c    44  tbz w5, #0, #+0x20 (addr 0xffff8bde5eac)
0xffff8bde5e90    48  ldursw x4, [x5, #15]
0xffff8bde5e94    52  tbnz w4, #23, #+0x18 (addr 0xffff8bde5eac)
0xffff8bde5e98    56  ldr x4, [jssp], #8
0xffff8bde5e9c    60  ldr x3, [jssp], #8
0xffff8bde5ea0    64  ldr x2, pc+56 (addr 0x0000ffff8bde5ed8)    ;; object: 0x327079a9 <String[8]: children>
0xffff8bde5ea4    68  ldr x16, pc+60 (addr 0x0000ffff8bde5ee0)    ;; code: HANDLER, StoreTransitionStub, minor: 198664
0xffff8bde5ea8    72  br x16
0xffff8bde5eac    76  ldr x2, pc+60 (addr 0x0000ffff8bde5ee8)    ;; object: 0x327079a9 <String[8]: children>
0xffff8bde5eb0    80  ldr x4, [jssp], #8
0xffff8bde5eb4    84  ldr x3, [jssp], #8
0xffff8bde5eb8    88  ldr x16, pc+56 (addr 0x0000ffff8bde5ef0)    ;; code: BUILTIN
0xffff8bde5ebc    92  br x16
0xffff8bde5ec0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bde5ec4   100  d63f03e0       constant
0xffff8bde5ec8   104  327cb411       constant
0xffff8bde5ecc   108  00000000       constant
0xffff8bde5ed0   112  32736c01       constant
0xffff8bde5ed4   116  00000000       constant
0xffff8bde5ed8   120  327079a9       constant
0xffff8bde5edc   124  00000000       constant
0xffff8bde5ee0   128  8bde5d20       constant
0xffff8bde5ee4   132  0000ffff       constant
0xffff8bde5ee8   136  327079a9       constant
0xffff8bde5eec   140  00000000       constant
0xffff8bde5ef0   144  8bd22420       constant
0xffff8bde5ef4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bde5e70  embedded object  (0x327cb411 Cell for 0)
0xffff8bde5e84  embedded object  (0x32736c01 WeakCell for 0x5f5364a9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde5ea0  embedded object  (0x327079a9 <String[8]: children>)
0xffff8bde5ea4  code target (HANDLER)  (0xffff8bde5d20)
0xffff8bde5eac  embedded object  (0x327079a9 <String[8]: children>)
0xffff8bde5eb8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bde5ec0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = load
compiler = unknown
Instructions (size = 120)
0xffff8bde5f60     0  sub csp, jssp, #0x8 (8)
0xffff8bde5f64     4  str x3, [jssp, #-8]!
0xffff8bde5f68     8  sub csp, jssp, #0x8 (8)
0xffff8bde5f6c    12  str x0, [jssp, #-8]!
0xffff8bde5f70    16  ldr x0, pc+72 (addr 0x0000ffff8bde5fb8)    ;; object: 0x327cb411 Cell for 0
0xffff8bde5f74    20  ldur x0, [x0, #7]
0xffff8bde5f78    24  cmp x0, #0x0 (0)
0xffff8bde5f7c    28  b.ne #+0x14 (addr 0xffff8bde5f90)
0xffff8bde5f80    32  ldr x3, pc+64 (addr 0x0000ffff8bde5fc0)    ;; object: 0x327cb5e1 WeakCell for 0x565405e9 <an Object with map 0x5f535009>
0xffff8bde5f84    36  ldur x3, [x3, #7]
0xffff8bde5f88    40  tbz w3, #0, #+0x8 (addr 0xffff8bde5f90)
0xffff8bde5f8c    44  b #+0x14 (addr 0xffff8bde5fa0)
0xffff8bde5f90    48  ldr x0, [jssp], #8
0xffff8bde5f94    52  ldr x3, [jssp], #8
0xffff8bde5f98    56  ldr x16, pc+48 (addr 0x0000ffff8bde5fc8)    ;; code: BUILTIN
0xffff8bde5f9c    60  br x16
0xffff8bde5fa0    64  add jssp, jssp, #0x10 (16)
0xffff8bde5fa4    68  mov x1, x3
0xffff8bde5fa8    72  ldr x16, pc+40 (addr 0x0000ffff8bde5fd0)    ;; code: HANDLER, LoadConstantStub, minor: 1
0xffff8bde5fac    76  br x16
0xffff8bde5fb0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bde5fb4    84  d63f03e0       constant
0xffff8bde5fb8    88  327cb411       constant
0xffff8bde5fbc    92  00000000       constant
0xffff8bde5fc0    96  327cb5e1       constant
0xffff8bde5fc4   100  00000000       constant
0xffff8bde5fc8   104  8bd222e0       constant
0xffff8bde5fcc   108  0000ffff       constant
0xffff8bde5fd0   112  8bd43300       constant
0xffff8bde5fd4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bde5f70  embedded object  (0x327cb411 Cell for 0)
0xffff8bde5f80  embedded object  (0x327cb5e1 WeakCell for 0x565405e9 <an Object with map 0x5f535009>)
0xffff8bde5f98  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde5fa8  code target (HANDLER)  (0xffff8bd43300)
0xffff8bde5fb0  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bde6040     0  ldur x0, [x1, #71]
0xffff8bde6044     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bde6040     0  ldur x0, [x1, #71]
0xffff8bde6044     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bde60c0     0  tbz w0, #0, #+0x90 (addr 0xffff8bde6150)
0xffff8bde60c4     4  mov x2, x0
0xffff8bde60c8     8  stur x2, [x1, #71]
0xffff8bde60cc    12  add x3, x1, #0x47 (71)
0xffff8bde60d0    16  and x2, x2, #0xfffffffffff00000
0xffff8bde60d4    20  ldr x2, [x2, #8]
0xffff8bde60d8    24  tbz w2, #1, #+0x24 (addr 0xffff8bde60fc)
0xffff8bde60dc    28  and x2, x1, #0xfffffffffff00000
0xffff8bde60e0    32  ldr x2, [x2, #8]
0xffff8bde60e4    36  tbz w2, #2, #+0x18 (addr 0xffff8bde60fc)
0xffff8bde60e8    40  sub csp, jssp, #0x8 (8)
0xffff8bde60ec    44  str lr, [jssp, #-8]!
0xffff8bde60f0    48  ldr x16, pc+80 (addr 0x0000ffff8bde6140)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bde60f4    52  blr x16
0xffff8bde60f8    56  ldr lr, [jssp], #8
0xffff8bde60fc    60  stur x5, [x1, #-1]
0xffff8bde6100    64  tbz w5, #0, #+0x34 (addr 0xffff8bde6134)
0xffff8bde6104    68  sub x2, x1, #0x1 (1)
0xffff8bde6108    72  and x5, x5, #0xfffffffffff00000
0xffff8bde610c    76  ldr x5, [x5, #8]
0xffff8bde6110    80  tbz w5, #1, #+0x24 (addr 0xffff8bde6134)
0xffff8bde6114    84  and x5, x1, #0xfffffffffff00000
0xffff8bde6118    88  ldr x5, [x5, #8]
0xffff8bde611c    92  tbz w5, #2, #+0x18 (addr 0xffff8bde6134)
0xffff8bde6120    96  sub csp, jssp, #0x8 (8)
0xffff8bde6124   100  str lr, [jssp, #-8]!
0xffff8bde6128   104  ldr x16, pc+32 (addr 0x0000ffff8bde6148)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bde612c   108  blr x16
0xffff8bde6130   112  ldr lr, [jssp], #8
0xffff8bde6134   116  ret
0xffff8bde6138   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bde613c   124  d63f03e0       constant
0xffff8bde6140   128  8bd170c0       constant
0xffff8bde6144   132  0000ffff       constant
0xffff8bde6148   136  8bd38080       constant
0xffff8bde614c   140  0000ffff       constant
0xffff8bde6150   144  movz x16, #0x0
0xffff8bde6154   148  sub csp, jssp, #0x10 (16)
0xffff8bde6158   152  stp fp, lr, [jssp, #-16]!
0xffff8bde615c   156  bl #+0x4 (addr 0xffff8bde6160)
0xffff8bde6160   160  movz x17, #0xa00000000
0xffff8bde6164   164  sub csp, jssp, #0x10 (16)
0xffff8bde6168   168  stp x17, cp, [jssp, #-16]!
0xffff8bde616c   172  add fp, jssp, #0x10 (16)
0xffff8bde6170   176  ldr x17, pc+24 (addr 0x0000ffff8bde6188)    ;; lazy deoptimization bailout 0
0xffff8bde6174   180  add x17, x17, x16
0xffff8bde6178   184  br x17
0xffff8bde617c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bde6180   192  d63f03e0       constant
0xffff8bde6184   196  d503201f       constant
0xffff8bde6188   200  8bb06000       constant
0xffff8bde618c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bde60f0  code target (STUB)  (0xffff8bd170c0)
0xffff8bde6128  code target (STUB)  (0xffff8bd38080)
0xffff8bde6138  constant pool (size 24)
0xffff8bde6170  runtime entry
0xffff8bde617c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bde60c0     0  tbz w0, #0, #+0x90 (addr 0xffff8bde6150)
0xffff8bde60c4     4  mov x2, x0
0xffff8bde60c8     8  stur x2, [x1, #71]
0xffff8bde60cc    12  add x3, x1, #0x47 (71)
0xffff8bde60d0    16  and x2, x2, #0xfffffffffff00000
0xffff8bde60d4    20  ldr x2, [x2, #8]
0xffff8bde60d8    24  tbz w2, #1, #+0x24 (addr 0xffff8bde60fc)
0xffff8bde60dc    28  and x2, x1, #0xfffffffffff00000
0xffff8bde60e0    32  ldr x2, [x2, #8]
0xffff8bde60e4    36  tbz w2, #2, #+0x18 (addr 0xffff8bde60fc)
0xffff8bde60e8    40  sub csp, jssp, #0x8 (8)
0xffff8bde60ec    44  str lr, [jssp, #-8]!
0xffff8bde60f0    48  ldr x16, pc+80 (addr 0x0000ffff8bde6140)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bde60f4    52  blr x16
0xffff8bde60f8    56  ldr lr, [jssp], #8
0xffff8bde60fc    60  stur x5, [x1, #-1]
0xffff8bde6100    64  tbz w5, #0, #+0x34 (addr 0xffff8bde6134)
0xffff8bde6104    68  sub x2, x1, #0x1 (1)
0xffff8bde6108    72  and x5, x5, #0xfffffffffff00000
0xffff8bde610c    76  ldr x5, [x5, #8]
0xffff8bde6110    80  tbz w5, #1, #+0x24 (addr 0xffff8bde6134)
0xffff8bde6114    84  and x5, x1, #0xfffffffffff00000
0xffff8bde6118    88  ldr x5, [x5, #8]
0xffff8bde611c    92  tbz w5, #2, #+0x18 (addr 0xffff8bde6134)
0xffff8bde6120    96  sub csp, jssp, #0x8 (8)
0xffff8bde6124   100  str lr, [jssp, #-8]!
0xffff8bde6128   104  ldr x16, pc+32 (addr 0x0000ffff8bde6148)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bde612c   108  blr x16
0xffff8bde6130   112  ldr lr, [jssp], #8
0xffff8bde6134   116  ret
0xffff8bde6138   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bde613c   124  d63f03e0       constant
0xffff8bde6140   128  8bd170c0       constant
0xffff8bde6144   132  0000ffff       constant
0xffff8bde6148   136  8bd38080       constant
0xffff8bde614c   140  0000ffff       constant
0xffff8bde6150   144  movz x16, #0x0
0xffff8bde6154   148  sub csp, jssp, #0x10 (16)
0xffff8bde6158   152  stp fp, lr, [jssp, #-16]!
0xffff8bde615c   156  bl #+0x4 (addr 0xffff8bde6160)
0xffff8bde6160   160  movz x17, #0xa00000000
0xffff8bde6164   164  sub csp, jssp, #0x10 (16)
0xffff8bde6168   168  stp x17, cp, [jssp, #-16]!
0xffff8bde616c   172  add fp, jssp, #0x10 (16)
0xffff8bde6170   176  ldr x17, pc+24 (addr 0x0000ffff8bde6188)    ;; lazy deoptimization bailout 0
0xffff8bde6174   180  add x17, x17, x16
0xffff8bde6178   184  br x17
0xffff8bde617c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bde6180   192  d63f03e0       constant
0xffff8bde6184   196  d503201f       constant
0xffff8bde6188   200  8bb06000       constant
0xffff8bde618c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bde60f0  code target (STUB)  (0xffff8bd170c0)
0xffff8bde6128  code target (STUB)  (0xffff8bd38080)
0xffff8bde6138  constant pool (size 24)
0xffff8bde6170  runtime entry
0xffff8bde617c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = paths
compiler = unknown
Instructions (size = 152)
0xffff8bde6200     0  sub csp, jssp, #0x8 (8)
0xffff8bde6204     4  str x3, [jssp, #-8]!
0xffff8bde6208     8  sub csp, jssp, #0x8 (8)
0xffff8bde620c    12  str x4, [jssp, #-8]!
0xffff8bde6210    16  ldr x3, pc+88 (addr 0x0000ffff8bde6268)    ;; object: 0x327cb411 Cell for 0
0xffff8bde6214    20  ldur x3, [x3, #7]
0xffff8bde6218    24  cmp x3, #0x0 (0)
0xffff8bde621c    28  b.ne #+0x30 (addr 0xffff8bde624c)
0xffff8bde6220    32  tbz w0, #0, #+0x2c (addr 0xffff8bde624c)
0xffff8bde6224    36  ldr x5, pc+76 (addr 0x0000ffff8bde6270)    ;; object: 0x327c5369 WeakCell for 0x5f536559 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde6228    40  ldur x5, [x5, #7]
0xffff8bde622c    44  tbz w5, #0, #+0x20 (addr 0xffff8bde624c)
0xffff8bde6230    48  ldursw x4, [x5, #15]
0xffff8bde6234    52  tbnz w4, #23, #+0x18 (addr 0xffff8bde624c)
0xffff8bde6238    56  ldr x4, [jssp], #8
0xffff8bde623c    60  ldr x3, [jssp], #8
0xffff8bde6240    64  ldr x2, pc+56 (addr 0x0000ffff8bde6278)    ;; object: 0x26cba4c1 <String[5]: paths>
0xffff8bde6244    68  ldr x16, pc+60 (addr 0x0000ffff8bde6280)    ;; code: HANDLER, StoreTransitionStub, minor: 198665
0xffff8bde6248    72  br x16
0xffff8bde624c    76  ldr x2, pc+60 (addr 0x0000ffff8bde6288)    ;; object: 0x26cba4c1 <String[5]: paths>
0xffff8bde6250    80  ldr x4, [jssp], #8
0xffff8bde6254    84  ldr x3, [jssp], #8
0xffff8bde6258    88  ldr x16, pc+56 (addr 0x0000ffff8bde6290)    ;; code: BUILTIN
0xffff8bde625c    92  br x16
0xffff8bde6260    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bde6264   100  d63f03e0       constant
0xffff8bde6268   104  327cb411       constant
0xffff8bde626c   108  00000000       constant
0xffff8bde6270   112  327c5369       constant
0xffff8bde6274   116  00000000       constant
0xffff8bde6278   120  26cba4c1       constant
0xffff8bde627c   124  00000000       constant
0xffff8bde6280   128  8bde60c0       constant
0xffff8bde6284   132  0000ffff       constant
0xffff8bde6288   136  26cba4c1       constant
0xffff8bde628c   140  00000000       constant
0xffff8bde6290   144  8bd22420       constant
0xffff8bde6294   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bde6210  embedded object  (0x327cb411 Cell for 0)
0xffff8bde6224  embedded object  (0x327c5369 WeakCell for 0x5f536559 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde6240  embedded object  (0x26cba4c1 <String[5]: paths>)
0xffff8bde6244  code target (HANDLER)  (0xffff8bde60c0)
0xffff8bde624c  embedded object  (0x26cba4c1 <String[5]: paths>)
0xffff8bde6258  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bde6260  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bde6300     0  ldur x0, [x1, #87]
0xffff8bde6304     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bde6300     0  ldur x0, [x1, #87]
0xffff8bde6304     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bde6380     0  ldur x0, [x1, #-1]
0xffff8bde6384     4  ldur x0, [x0, #47]
0xffff8bde6388     8  movz x16, #0x1af
0xffff8bde638c    12  ldr x0, [x0, x16]
0xffff8bde6390    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bde6380     0  ldur x0, [x1, #-1]
0xffff8bde6384     4  ldur x0, [x0, #47]
0xffff8bde6388     8  movz x16, #0x1af
0xffff8bde638c    12  ldr x0, [x0, x16]
0xffff8bde6390    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = isFile
compiler = unknown
Instructions (size = 120)
0xffff8bde6400     0  sub csp, jssp, #0x8 (8)
0xffff8bde6404     4  str x3, [jssp, #-8]!
0xffff8bde6408     8  sub csp, jssp, #0x8 (8)
0xffff8bde640c    12  str x0, [jssp, #-8]!
0xffff8bde6410    16  ldr x0, pc+72 (addr 0x0000ffff8bde6458)    ;; object: 0x327353d1 Cell for 0
0xffff8bde6414    20  ldur x0, [x0, #7]
0xffff8bde6418    24  cmp x0, #0x0 (0)
0xffff8bde641c    28  b.ne #+0x14 (addr 0xffff8bde6430)
0xffff8bde6420    32  ldr x3, pc+64 (addr 0x0000ffff8bde6460)    ;; object: 0x327cb781 WeakCell for 0x5653b019 <an Object with map 0x5f5320f1>
0xffff8bde6424    36  ldur x3, [x3, #7]
0xffff8bde6428    40  tbz w3, #0, #+0x8 (addr 0xffff8bde6430)
0xffff8bde642c    44  b #+0x14 (addr 0xffff8bde6440)
0xffff8bde6430    48  ldr x0, [jssp], #8
0xffff8bde6434    52  ldr x3, [jssp], #8
0xffff8bde6438    56  ldr x16, pc+48 (addr 0x0000ffff8bde6468)    ;; code: BUILTIN
0xffff8bde643c    60  br x16
0xffff8bde6440    64  add jssp, jssp, #0x10 (16)
0xffff8bde6444    68  mov x1, x3
0xffff8bde6448    72  ldr x16, pc+40 (addr 0x0000ffff8bde6470)    ;; code: HANDLER, LoadConstantStub, minor: 3
0xffff8bde644c    76  br x16
0xffff8bde6450    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bde6454    84  d63f03e0       constant
0xffff8bde6458    88  327353d1       constant
0xffff8bde645c    92  00000000       constant
0xffff8bde6460    96  327cb781       constant
0xffff8bde6464   100  00000000       constant
0xffff8bde6468   104  8bd222e0       constant
0xffff8bde646c   108  0000ffff       constant
0xffff8bde6470   112  8bd43400       constant
0xffff8bde6474   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bde6410  embedded object  (0x327353d1 Cell for 0)
0xffff8bde6420  embedded object  (0x327cb781 WeakCell for 0x5653b019 <an Object with map 0x5f5320f1>)
0xffff8bde6438  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde6448  code target (HANDLER)  (0xffff8bd43400)
0xffff8bde6450  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 197)
0xffff8bde64e0     0  ldur d0, [x1, #87]
0xffff8bde64e4     4  movz x1, #0xe2c0
0xffff8bde64e8     8  movk x1, #0x2cb8, lsl #16
0xffff8bde64ec    12  ldp x2, x0, [x1]
0xffff8bde64f0    16  adds x16, x2, #0x10 (16)
0xffff8bde64f4    20  ccmp x16, x0, #nzCv, lo
0xffff8bde64f8    24  b.hi #+0x20 (addr 0xffff8bde6518)
0xffff8bde64fc    28  str x16, [x1]
0xffff8bde6500    32  ldr x1, [x26, #120]
0xffff8bde6504    36  str x1, [x2]
0xffff8bde6508    40  orr x2, x2, #0x1
0xffff8bde650c    44  stur d0, [x2, #7]
0xffff8bde6510    48  mov x0, x2
0xffff8bde6514    52  ret
0xffff8bde6518    56  sub csp, jssp, #0x10 (16)
0xffff8bde651c    60  stp fp, lr, [jssp, #-16]!
0xffff8bde6520    64  movz fp, #0xa00000000
0xffff8bde6524    68  sub csp, jssp, #0x8 (8)
0xffff8bde6528    72  str fp, [jssp, #-8]!
0xffff8bde652c    76  add fp, jssp, #0x8 (8)
0xffff8bde6530    80  movz x2, #0x0
0xffff8bde6534    84  mov x16, lr
0xffff8bde6538    88  ldr x17, pc+64 (addr 0x0000ffff8bde6578)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bde653c    92  blr x17
0xffff8bde6540    96  ldur cp, [fp, #-8]
0xffff8bde6544   100  movz x0, #0x0
0xffff8bde6548   104  movz x1, #0x4b48
0xffff8bde654c   108  movk x1, #0xe4, lsl #16
0xffff8bde6550   112  ldr x16, pc+48 (addr 0x0000ffff8bde6580)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bde6554   116  blr x16
0xffff8bde6558   120  str x0, [jssp, #16]
0xffff8bde655c   124  ldr x16, pc+44 (addr 0x0000ffff8bde6588)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bde6560   128  blr x16
0xffff8bde6564   132  ldr lr, [jssp, #16]
0xffff8bde6568   136  ldp xzr, fp, [jssp], #24
0xffff8bde656c   140  b #-0x60 (addr 0xffff8bde650c)
0xffff8bde6570   144  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bde6574   148  d63f03e0       constant
0xffff8bde6578   152  8bd06820       constant
0xffff8bde657c   156  0000ffff       constant
0xffff8bde6580   160  8bd06260       constant
0xffff8bde6584   164  0000ffff       constant
0xffff8bde6588   168  8bd068e0       constant
0xffff8bde658c   172  0000ffff       constant


Safepoints (size = 21)
0xffff8bde6558   120  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 11)
0xffff8bde6538  code target (STUB)  (0xffff8bd06820)
0xffff8bde6550  code target (STUB)  (0xffff8bd06260)
0xffff8bde655c  code target (STUB)  (0xffff8bd068e0)
0xffff8bde6570  constant pool (size 32)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 197)
0xffff8bde64e0     0  ldur d0, [x1, #87]
0xffff8bde64e4     4  movz x1, #0xe2c0
0xffff8bde64e8     8  movk x1, #0x2cb8, lsl #16
0xffff8bde64ec    12  ldp x2, x0, [x1]
0xffff8bde64f0    16  adds x16, x2, #0x10 (16)
0xffff8bde64f4    20  ccmp x16, x0, #nzCv, lo
0xffff8bde64f8    24  b.hi #+0x20 (addr 0xffff8bde6518)
0xffff8bde64fc    28  str x16, [x1]
0xffff8bde6500    32  ldr x1, [x26, #120]
0xffff8bde6504    36  str x1, [x2]
0xffff8bde6508    40  orr x2, x2, #0x1
0xffff8bde650c    44  stur d0, [x2, #7]
0xffff8bde6510    48  mov x0, x2
0xffff8bde6514    52  ret
0xffff8bde6518    56  sub csp, jssp, #0x10 (16)
0xffff8bde651c    60  stp fp, lr, [jssp, #-16]!
0xffff8bde6520    64  movz fp, #0xa00000000
0xffff8bde6524    68  sub csp, jssp, #0x8 (8)
0xffff8bde6528    72  str fp, [jssp, #-8]!
0xffff8bde652c    76  add fp, jssp, #0x8 (8)
0xffff8bde6530    80  movz x2, #0x0
0xffff8bde6534    84  mov x16, lr
0xffff8bde6538    88  ldr x17, pc+64 (addr 0x0000ffff8bde6578)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bde653c    92  blr x17
0xffff8bde6540    96  ldur cp, [fp, #-8]
0xffff8bde6544   100  movz x0, #0x0
0xffff8bde6548   104  movz x1, #0x4b48
0xffff8bde654c   108  movk x1, #0xe4, lsl #16
0xffff8bde6550   112  ldr x16, pc+48 (addr 0x0000ffff8bde6580)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bde6554   116  blr x16
0xffff8bde6558   120  str x0, [jssp, #16]
0xffff8bde655c   124  ldr x16, pc+44 (addr 0x0000ffff8bde6588)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bde6560   128  blr x16
0xffff8bde6564   132  ldr lr, [jssp, #16]
0xffff8bde6568   136  ldp xzr, fp, [jssp], #24
0xffff8bde656c   140  b #-0x60 (addr 0xffff8bde650c)
0xffff8bde6570   144  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bde6574   148  d63f03e0       constant
0xffff8bde6578   152  8bd06820       constant
0xffff8bde657c   156  0000ffff       constant
0xffff8bde6580   160  8bd06260       constant
0xffff8bde6584   164  0000ffff       constant
0xffff8bde6588   168  8bd068e0       constant
0xffff8bde658c   172  0000ffff       constant


Safepoints (size = 21)
0xffff8bde6558   120  000 | x2 | x27 (sp -> fp)  <none>

RelocInfo (size = 11)
0xffff8bde6538  code target (STUB)  (0xffff8bd06820)
0xffff8bde6550  code target (STUB)  (0xffff8bd06260)
0xffff8bde655c  code target (STUB)  (0xffff8bd068e0)
0xffff8bde6570  constant pool (size 32)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bde6620     0  ldur x0, [x1, #-1]
0xffff8bde6624     4  ldur x0, [x0, #47]
0xffff8bde6628     8  movz x16, #0x2b7
0xffff8bde662c    12  ldr x0, [x0, x16]
0xffff8bde6630    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bde6620     0  ldur x0, [x1, #-1]
0xffff8bde6624     4  ldur x0, [x0, #47]
0xffff8bde6628     8  movz x16, #0x2b7
0xffff8bde662c    12  ldr x0, [x0, x16]
0xffff8bde6630    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = slice
compiler = unknown
Instructions (size = 120)
0xffff8bde66a0     0  sub csp, jssp, #0x8 (8)
0xffff8bde66a4     4  str x3, [jssp, #-8]!
0xffff8bde66a8     8  sub csp, jssp, #0x8 (8)
0xffff8bde66ac    12  str x0, [jssp, #-8]!
0xffff8bde66b0    16  ldr x0, pc+72 (addr 0x0000ffff8bde66f8)    ;; object: 0x327cb899 Cell for 0
0xffff8bde66b4    20  ldur x0, [x0, #7]
0xffff8bde66b8    24  cmp x0, #0x0 (0)
0xffff8bde66bc    28  b.ne #+0x14 (addr 0xffff8bde66d0)
0xffff8bde66c0    32  ldr x3, pc+64 (addr 0x0000ffff8bde6700)    ;; object: 0x327cb8a9 WeakCell for 0x327408e9 <a FastBuffer with map 0x5f522341>
0xffff8bde66c4    36  ldur x3, [x3, #7]
0xffff8bde66c8    40  tbz w3, #0, #+0x8 (addr 0xffff8bde66d0)
0xffff8bde66cc    44  b #+0x14 (addr 0xffff8bde66e0)
0xffff8bde66d0    48  ldr x0, [jssp], #8
0xffff8bde66d4    52  ldr x3, [jssp], #8
0xffff8bde66d8    56  ldr x16, pc+48 (addr 0x0000ffff8bde6708)    ;; code: BUILTIN
0xffff8bde66dc    60  br x16
0xffff8bde66e0    64  add jssp, jssp, #0x10 (16)
0xffff8bde66e4    68  mov x1, x3
0xffff8bde66e8    72  ldr x16, pc+40 (addr 0x0000ffff8bde6710)    ;; code: HANDLER, LoadConstantStub, minor: 27
0xffff8bde66ec    76  br x16
0xffff8bde66f0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bde66f4    84  d63f03e0       constant
0xffff8bde66f8    88  327cb899       constant
0xffff8bde66fc    92  00000000       constant
0xffff8bde6700    96  327cb8a9       constant
0xffff8bde6704   100  00000000       constant
0xffff8bde6708   104  8bd222e0       constant
0xffff8bde670c   108  0000ffff       constant
0xffff8bde6710   112  8bde6620       constant
0xffff8bde6714   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bde66b0  embedded object  (0x327cb899 Cell for 0)
0xffff8bde66c0  embedded object  (0x327cb8a9 WeakCell for 0x327408e9 <a FastBuffer with map 0x5f522341>)
0xffff8bde66d8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde66e8  code target (HANDLER)  (0xffff8bde6620)
0xffff8bde66f0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = length
compiler = unknown
Instructions (size = 216)
0xffff8bde6780     0  sub csp, jssp, #0x8 (8)
0xffff8bde6784     4  str x3, [jssp, #-8]!
0xffff8bde6788     8  sub csp, jssp, #0x8 (8)
0xffff8bde678c    12  str x0, [jssp, #-8]!
0xffff8bde6790    16  ldr x0, pc+160 (addr 0x0000ffff8bde6830)    ;; object: 0x327cb899 Cell for 0
0xffff8bde6794    20  ldur x0, [x0, #7]
0xffff8bde6798    24  cmp x0, #0x0 (0)
0xffff8bde679c    28  b.ne #+0x14 (addr 0xffff8bde67b0)
0xffff8bde67a0    32  ldr x3, pc+152 (addr 0x0000ffff8bde6838)    ;; object: 0x327cb921 WeakCell for 0x327a6e11 <an Object with map 0x5f514111>
0xffff8bde67a4    36  ldur x3, [x3, #7]
0xffff8bde67a8    40  tbz w3, #0, #+0x8 (addr 0xffff8bde67b0)
0xffff8bde67ac    44  b #+0x14 (addr 0xffff8bde67c0)
0xffff8bde67b0    48  ldr x0, [jssp], #8
0xffff8bde67b4    52  ldr x3, [jssp], #8
0xffff8bde67b8    56  ldr x16, pc+136 (addr 0x0000ffff8bde6840)    ;; code: BUILTIN
0xffff8bde67bc    60  br x16
0xffff8bde67c0    64  add jssp, jssp, #0x10 (16)
0xffff8bde67c4    68  movz x16, #0xc00000000
0xffff8bde67c8    72  sub csp, jssp, #0x10 (16)
0xffff8bde67cc    76  stp fp, lr, [jssp, #-16]!
0xffff8bde67d0    80  sub csp, jssp, #0x10 (16)
0xffff8bde67d4    84  str x16, [jssp, #-8]!
0xffff8bde67d8    88  ldr x17, pc+112 (addr 0x0000ffff8bde6848)    ;; object: 0xffff8bde6721 <Code: HANDLER>
0xffff8bde67dc    92  sub csp, jssp, #0x10 (16)
0xffff8bde67e0    96  str x17, [jssp, #-8]!
0xffff8bde67e4   100  add fp, jssp, #0x10 (16)
0xffff8bde67e8   104  sub csp, jssp, #0x8 (8)
0xffff8bde67ec   108  str cp, [jssp, #-8]!
0xffff8bde67f0   112  sub csp, jssp, #0x8 (8)
0xffff8bde67f4   116  str x1, [jssp, #-8]!
0xffff8bde67f8   120  ldur x1, [x3, #-1]
0xffff8bde67fc   124  ldur x1, [x1, #47]
0xffff8bde6800   128  ldur x1, [x1, #143]
0xffff8bde6804   132  ldur x1, [x1, #7]
0xffff8bde6808   136  movz x0, #0x0
0xffff8bde680c   140  ldr x16, pc+68 (addr 0x0000ffff8bde6850)    ;; code: BUILTIN
0xffff8bde6810   144  blr x16
0xffff8bde6814   148  ldr cp, [jssp], #8
0xffff8bde6818   152  mov jssp, fp
0xffff8bde681c   156  ldp fp, lr, [jssp], #16
0xffff8bde6820   160  ret
0xffff8bde6824   164  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff8bde6828   168  d63f03e0       constant
0xffff8bde682c   172  d503201f       constant
0xffff8bde6830   176  327cb899       constant
0xffff8bde6834   180  00000000       constant
0xffff8bde6838   184  327cb921       constant
0xffff8bde683c   188  00000000       constant
0xffff8bde6840   192  8bd222e0       constant
0xffff8bde6844   196  0000ffff       constant
0xffff8bde6848   200  8bde6721       constant
0xffff8bde684c   204  0000ffff       constant
0xffff8bde6850   208  8bd1e600       constant
0xffff8bde6854   212  0000ffff       constant


RelocInfo (size = 11)
0xffff8bde6790  embedded object  (0x327cb899 Cell for 0)
0xffff8bde67a0  embedded object  (0x327cb921 WeakCell for 0x327a6e11 <an Object with map 0x5f514111>)
0xffff8bde67b8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde67d8  embedded object  (0xffff8bde6721 <Code: HANDLER>)
0xffff8bde680c  code target (BUILTIN)  (0xffff8bd1e600)
0xffff8bde6824  constant pool (size 52)

kind = HANDLER
major_key = <NoCache>Stub
name = Number
compiler = unknown
Instructions (size = 120)
0xffff8bde68c0     0  sub csp, jssp, #0x8 (8)
0xffff8bde68c4     4  str x3, [jssp, #-8]!
0xffff8bde68c8     8  sub csp, jssp, #0x8 (8)
0xffff8bde68cc    12  str x0, [jssp, #-8]!
0xffff8bde68d0    16  ldr x0, pc+80 (addr 0x0000ffff8bde6920)    ;; object: 0x26cc5d51 Cell for 0
0xffff8bde68d4    20  ldur x0, [x0, #7]
0xffff8bde68d8    24  cmp x0, #0x0 (0)
0xffff8bde68dc    28  b.ne #+0x2c (addr 0xffff8bde6908)
0xffff8bde68e0    32  ldr x0, pc+72 (addr 0x0000ffff8bde6928)    ;; object: 0x327cb959 WeakCell for 0x26c423d9 PropertyCell for 0x26c42371 <JS Function Number (SharedFunctionInfo 0x26c422c9)>
0xffff8bde68e4    36  ldur x0, [x0, #7]
0xffff8bde68e8    40  tbz w0, #0, #+0x20 (addr 0xffff8bde6908)
0xffff8bde68ec    44  ldur x0, [x0, #15]
0xffff8bde68f0    48  ldr x16, [x26, #88]
0xffff8bde68f4    52  cmp x0, x16
0xffff8bde68f8    56  b.eq #+0x10 (addr 0xffff8bde6908)
0xffff8bde68fc    60  add jssp, jssp, #0x10 (16)
0xffff8bde6900    64  ret
0xffff8bde6904    68  b #+0x14 (addr 0xffff8bde6918)
0xffff8bde6908    72  ldr x0, [jssp], #8
0xffff8bde690c    76  ldr x3, [jssp], #8
0xffff8bde6910    80  ldr x16, pc+32 (addr 0x0000ffff8bde6930)    ;; code: BUILTIN
0xffff8bde6914    84  br x16
0xffff8bde6918    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bde691c    92  d63f03e0       constant
0xffff8bde6920    96  26cc5d51       constant
0xffff8bde6924   100  00000000       constant
0xffff8bde6928   104  327cb959       constant
0xffff8bde692c   108  00000000       constant
0xffff8bde6930   112  8bd222e0       constant
0xffff8bde6934   116  0000ffff       constant


RelocInfo (size = 9)
0xffff8bde68d0  embedded object  (0x26cc5d51 Cell for 0)
0xffff8bde68e0  embedded object  (0x327cb959 WeakCell for 0x26c423d9 PropertyCell for 0x26c42371 <JS Function Number (SharedFunctionInfo 0x26c422c9)>)
0xffff8bde6910  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde6918  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = buffer
compiler = unknown
Instructions (size = 216)
0xffff8bde69a0     0  sub csp, jssp, #0x8 (8)
0xffff8bde69a4     4  str x3, [jssp, #-8]!
0xffff8bde69a8     8  sub csp, jssp, #0x8 (8)
0xffff8bde69ac    12  str x0, [jssp, #-8]!
0xffff8bde69b0    16  ldr x0, pc+160 (addr 0x0000ffff8bde6a50)    ;; object: 0x327cb899 Cell for 0
0xffff8bde69b4    20  ldur x0, [x0, #7]
0xffff8bde69b8    24  cmp x0, #0x0 (0)
0xffff8bde69bc    28  b.ne #+0x14 (addr 0xffff8bde69d0)
0xffff8bde69c0    32  ldr x3, pc+152 (addr 0x0000ffff8bde6a58)    ;; object: 0x327cb9c1 WeakCell for 0x327a6e11 <an Object with map 0x5f514111>
0xffff8bde69c4    36  ldur x3, [x3, #7]
0xffff8bde69c8    40  tbz w3, #0, #+0x8 (addr 0xffff8bde69d0)
0xffff8bde69cc    44  b #+0x14 (addr 0xffff8bde69e0)
0xffff8bde69d0    48  ldr x0, [jssp], #8
0xffff8bde69d4    52  ldr x3, [jssp], #8
0xffff8bde69d8    56  ldr x16, pc+136 (addr 0x0000ffff8bde6a60)    ;; code: BUILTIN
0xffff8bde69dc    60  br x16
0xffff8bde69e0    64  add jssp, jssp, #0x10 (16)
0xffff8bde69e4    68  movz x16, #0xc00000000
0xffff8bde69e8    72  sub csp, jssp, #0x10 (16)
0xffff8bde69ec    76  stp fp, lr, [jssp, #-16]!
0xffff8bde69f0    80  sub csp, jssp, #0x10 (16)
0xffff8bde69f4    84  str x16, [jssp, #-8]!
0xffff8bde69f8    88  ldr x17, pc+112 (addr 0x0000ffff8bde6a68)    ;; object: 0xffff8bde6941 <Code: HANDLER>
0xffff8bde69fc    92  sub csp, jssp, #0x10 (16)
0xffff8bde6a00    96  str x17, [jssp, #-8]!
0xffff8bde6a04   100  add fp, jssp, #0x10 (16)
0xffff8bde6a08   104  sub csp, jssp, #0x8 (8)
0xffff8bde6a0c   108  str cp, [jssp, #-8]!
0xffff8bde6a10   112  sub csp, jssp, #0x8 (8)
0xffff8bde6a14   116  str x1, [jssp, #-8]!
0xffff8bde6a18   120  ldur x1, [x3, #-1]
0xffff8bde6a1c   124  ldur x1, [x1, #47]
0xffff8bde6a20   128  ldur x1, [x1, #71]
0xffff8bde6a24   132  ldur x1, [x1, #7]
0xffff8bde6a28   136  movz x0, #0x0
0xffff8bde6a2c   140  ldr x16, pc+68 (addr 0x0000ffff8bde6a70)    ;; code: BUILTIN
0xffff8bde6a30   144  blr x16
0xffff8bde6a34   148  ldr cp, [jssp], #8
0xffff8bde6a38   152  mov jssp, fp
0xffff8bde6a3c   156  ldp fp, lr, [jssp], #16
0xffff8bde6a40   160  ret
0xffff8bde6a44   164  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff8bde6a48   168  d63f03e0       constant
0xffff8bde6a4c   172  d503201f       constant
0xffff8bde6a50   176  327cb899       constant
0xffff8bde6a54   180  00000000       constant
0xffff8bde6a58   184  327cb9c1       constant
0xffff8bde6a5c   188  00000000       constant
0xffff8bde6a60   192  8bd222e0       constant
0xffff8bde6a64   196  0000ffff       constant
0xffff8bde6a68   200  8bde6941       constant
0xffff8bde6a6c   204  0000ffff       constant
0xffff8bde6a70   208  8bd1e600       constant
0xffff8bde6a74   212  0000ffff       constant


RelocInfo (size = 11)
0xffff8bde69b0  embedded object  (0x327cb899 Cell for 0)
0xffff8bde69c0  embedded object  (0x327cb9c1 WeakCell for 0x327a6e11 <an Object with map 0x5f514111>)
0xffff8bde69d8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde69f8  embedded object  (0xffff8bde6941 <Code: HANDLER>)
0xffff8bde6a2c  code target (BUILTIN)  (0xffff8bd1e600)
0xffff8bde6a44  constant pool (size 52)

kind = HANDLER
major_key = <NoCache>Stub
name = byteOffset
compiler = unknown
Instructions (size = 216)
0xffff8bde6ae0     0  sub csp, jssp, #0x8 (8)
0xffff8bde6ae4     4  str x3, [jssp, #-8]!
0xffff8bde6ae8     8  sub csp, jssp, #0x8 (8)
0xffff8bde6aec    12  str x0, [jssp, #-8]!
0xffff8bde6af0    16  ldr x0, pc+160 (addr 0x0000ffff8bde6b90)    ;; object: 0x327cb899 Cell for 0
0xffff8bde6af4    20  ldur x0, [x0, #7]
0xffff8bde6af8    24  cmp x0, #0x0 (0)
0xffff8bde6afc    28  b.ne #+0x14 (addr 0xffff8bde6b10)
0xffff8bde6b00    32  ldr x3, pc+152 (addr 0x0000ffff8bde6b98)    ;; object: 0x327cb9f9 WeakCell for 0x327a6e11 <an Object with map 0x5f514111>
0xffff8bde6b04    36  ldur x3, [x3, #7]
0xffff8bde6b08    40  tbz w3, #0, #+0x8 (addr 0xffff8bde6b10)
0xffff8bde6b0c    44  b #+0x14 (addr 0xffff8bde6b20)
0xffff8bde6b10    48  ldr x0, [jssp], #8
0xffff8bde6b14    52  ldr x3, [jssp], #8
0xffff8bde6b18    56  ldr x16, pc+136 (addr 0x0000ffff8bde6ba0)    ;; code: BUILTIN
0xffff8bde6b1c    60  br x16
0xffff8bde6b20    64  add jssp, jssp, #0x10 (16)
0xffff8bde6b24    68  movz x16, #0xc00000000
0xffff8bde6b28    72  sub csp, jssp, #0x10 (16)
0xffff8bde6b2c    76  stp fp, lr, [jssp, #-16]!
0xffff8bde6b30    80  sub csp, jssp, #0x10 (16)
0xffff8bde6b34    84  str x16, [jssp, #-8]!
0xffff8bde6b38    88  ldr x17, pc+112 (addr 0x0000ffff8bde6ba8)    ;; object: 0xffff8bde6a81 <Code: HANDLER>
0xffff8bde6b3c    92  sub csp, jssp, #0x10 (16)
0xffff8bde6b40    96  str x17, [jssp, #-8]!
0xffff8bde6b44   100  add fp, jssp, #0x10 (16)
0xffff8bde6b48   104  sub csp, jssp, #0x8 (8)
0xffff8bde6b4c   108  str cp, [jssp, #-8]!
0xffff8bde6b50   112  sub csp, jssp, #0x8 (8)
0xffff8bde6b54   116  str x1, [jssp, #-8]!
0xffff8bde6b58   120  ldur x1, [x3, #-1]
0xffff8bde6b5c   124  ldur x1, [x1, #47]
0xffff8bde6b60   128  ldur x1, [x1, #95]
0xffff8bde6b64   132  ldur x1, [x1, #7]
0xffff8bde6b68   136  movz x0, #0x0
0xffff8bde6b6c   140  ldr x16, pc+68 (addr 0x0000ffff8bde6bb0)    ;; code: BUILTIN
0xffff8bde6b70   144  blr x16
0xffff8bde6b74   148  ldr cp, [jssp], #8
0xffff8bde6b78   152  mov jssp, fp
0xffff8bde6b7c   156  ldp fp, lr, [jssp], #16
0xffff8bde6b80   160  ret
0xffff8bde6b84   164  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff8bde6b88   168  d63f03e0       constant
0xffff8bde6b8c   172  d503201f       constant
0xffff8bde6b90   176  327cb899       constant
0xffff8bde6b94   180  00000000       constant
0xffff8bde6b98   184  327cb9f9       constant
0xffff8bde6b9c   188  00000000       constant
0xffff8bde6ba0   192  8bd222e0       constant
0xffff8bde6ba4   196  0000ffff       constant
0xffff8bde6ba8   200  8bde6a81       constant
0xffff8bde6bac   204  0000ffff       constant
0xffff8bde6bb0   208  8bd1e600       constant
0xffff8bde6bb4   212  0000ffff       constant


RelocInfo (size = 11)
0xffff8bde6af0  embedded object  (0x327cb899 Cell for 0)
0xffff8bde6b00  embedded object  (0x327cb9f9 WeakCell for 0x327a6e11 <an Object with map 0x5f514111>)
0xffff8bde6b18  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde6b38  embedded object  (0xffff8bde6a81 <Code: HANDLER>)
0xffff8bde6b6c  code target (BUILTIN)  (0xffff8bd1e600)
0xffff8bde6b84  constant pool (size 52)

kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 120)
0xffff8bde6c20     0  sub csp, jssp, #0x8 (8)
0xffff8bde6c24     4  str x3, [jssp, #-8]!
0xffff8bde6c28     8  sub csp, jssp, #0x8 (8)
0xffff8bde6c2c    12  str x0, [jssp, #-8]!
0xffff8bde6c30    16  ldr x0, pc+72 (addr 0x0000ffff8bde6c78)    ;; object: 0x327cbab1 Cell for 0
0xffff8bde6c34    20  ldur x0, [x0, #7]
0xffff8bde6c38    24  cmp x0, #0x0 (0)
0xffff8bde6c3c    28  b.ne #+0x14 (addr 0xffff8bde6c50)
0xffff8bde6c40    32  ldr x3, pc+64 (addr 0x0000ffff8bde6c80)    ;; object: 0x327cbac1 WeakCell for 0x26c40019 <JS Function (SharedFunctionInfo 0x26c3ff71)>
0xffff8bde6c44    36  ldur x3, [x3, #7]
0xffff8bde6c48    40  tbz w3, #0, #+0x8 (addr 0xffff8bde6c50)
0xffff8bde6c4c    44  b #+0x14 (addr 0xffff8bde6c60)
0xffff8bde6c50    48  ldr x0, [jssp], #8
0xffff8bde6c54    52  ldr x3, [jssp], #8
0xffff8bde6c58    56  ldr x16, pc+48 (addr 0x0000ffff8bde6c88)    ;; code: BUILTIN
0xffff8bde6c5c    60  br x16
0xffff8bde6c60    64  add jssp, jssp, #0x10 (16)
0xffff8bde6c64    68  mov x1, x3
0xffff8bde6c68    72  ldr x16, pc+40 (addr 0x0000ffff8bde6c90)    ;; code: HANDLER, LoadConstantStub, minor: 8
0xffff8bde6c6c    76  br x16
0xffff8bde6c70    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bde6c74    84  d63f03e0       constant
0xffff8bde6c78    88  327cbab1       constant
0xffff8bde6c7c    92  00000000       constant
0xffff8bde6c80    96  327cbac1       constant
0xffff8bde6c84   100  00000000       constant
0xffff8bde6c88   104  8bd222e0       constant
0xffff8bde6c8c   108  0000ffff       constant
0xffff8bde6c90   112  8bd4c160       constant
0xffff8bde6c94   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bde6c30  embedded object  (0x327cbab1 Cell for 0)
0xffff8bde6c40  embedded object  (0x327cbac1 WeakCell for 0x26c40019 <JS Function (SharedFunctionInfo 0x26c3ff71)>)
0xffff8bde6c58  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde6c68  code target (HANDLER)  (0xffff8bd4c160)
0xffff8bde6c70  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = toString
compiler = unknown
Instructions (size = 120)
0xffff8bde6d00     0  sub csp, jssp, #0x8 (8)
0xffff8bde6d04     4  str x3, [jssp, #-8]!
0xffff8bde6d08     8  sub csp, jssp, #0x8 (8)
0xffff8bde6d0c    12  str x0, [jssp, #-8]!
0xffff8bde6d10    16  ldr x0, pc+72 (addr 0x0000ffff8bde6d58)    ;; object: 0x327cb899 Cell for 0
0xffff8bde6d14    20  ldur x0, [x0, #7]
0xffff8bde6d18    24  cmp x0, #0x0 (0)
0xffff8bde6d1c    28  b.ne #+0x14 (addr 0xffff8bde6d30)
0xffff8bde6d20    32  ldr x3, pc+64 (addr 0x0000ffff8bde6d60)    ;; object: 0x327cbb11 WeakCell for 0x327408e9 <a FastBuffer with map 0x5f522341>
0xffff8bde6d24    36  ldur x3, [x3, #7]
0xffff8bde6d28    40  tbz w3, #0, #+0x8 (addr 0xffff8bde6d30)
0xffff8bde6d2c    44  b #+0x14 (addr 0xffff8bde6d40)
0xffff8bde6d30    48  ldr x0, [jssp], #8
0xffff8bde6d34    52  ldr x3, [jssp], #8
0xffff8bde6d38    56  ldr x16, pc+48 (addr 0x0000ffff8bde6d68)    ;; code: BUILTIN
0xffff8bde6d3c    60  br x16
0xffff8bde6d40    64  add jssp, jssp, #0x10 (16)
0xffff8bde6d44    68  mov x1, x3
0xffff8bde6d48    72  ldr x16, pc+40 (addr 0x0000ffff8bde6d70)    ;; code: HANDLER, LoadConstantStub, minor: 16
0xffff8bde6d4c    76  br x16
0xffff8bde6d50    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bde6d54    84  d63f03e0       constant
0xffff8bde6d58    88  327cb899       constant
0xffff8bde6d5c    92  00000000       constant
0xffff8bde6d60    96  327cbb11       constant
0xffff8bde6d64   100  00000000       constant
0xffff8bde6d68   104  8bd222e0       constant
0xffff8bde6d6c   108  0000ffff       constant
0xffff8bde6d70   112  8bde6380       constant
0xffff8bde6d74   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bde6d10  embedded object  (0x327cb899 Cell for 0)
0xffff8bde6d20  embedded object  (0x327cbb11 WeakCell for 0x327408e9 <a FastBuffer with map 0x5f522341>)
0xffff8bde6d38  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde6d48  code target (HANDLER)  (0xffff8bde6380)
0xffff8bde6d50  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = apply
compiler = unknown
Instructions (size = 120)
0xffff8bde6de0     0  sub csp, jssp, #0x8 (8)
0xffff8bde6de4     4  str x3, [jssp, #-8]!
0xffff8bde6de8     8  sub csp, jssp, #0x8 (8)
0xffff8bde6dec    12  str x0, [jssp, #-8]!
0xffff8bde6df0    16  ldr x0, pc+72 (addr 0x0000ffff8bde6e38)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bde6df4    20  ldur x0, [x0, #7]
0xffff8bde6df8    24  cmp x0, #0x0 (0)
0xffff8bde6dfc    28  b.ne #+0x14 (addr 0xffff8bde6e10)
0xffff8bde6e00    32  ldr x3, pc+64 (addr 0x0000ffff8bde6e40)    ;; object: 0x327cbb49 WeakCell for 0x26c40019 <JS Function (SharedFunctionInfo 0x26c3ff71)>
0xffff8bde6e04    36  ldur x3, [x3, #7]
0xffff8bde6e08    40  tbz w3, #0, #+0x8 (addr 0xffff8bde6e10)
0xffff8bde6e0c    44  b #+0x14 (addr 0xffff8bde6e20)
0xffff8bde6e10    48  ldr x0, [jssp], #8
0xffff8bde6e14    52  ldr x3, [jssp], #8
0xffff8bde6e18    56  ldr x16, pc+48 (addr 0x0000ffff8bde6e48)    ;; code: BUILTIN
0xffff8bde6e1c    60  br x16
0xffff8bde6e20    64  add jssp, jssp, #0x10 (16)
0xffff8bde6e24    68  mov x1, x3
0xffff8bde6e28    72  ldr x16, pc+40 (addr 0x0000ffff8bde6e50)    ;; code: HANDLER, LoadConstantStub, minor: 4
0xffff8bde6e2c    76  br x16
0xffff8bde6e30    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bde6e34    84  d63f03e0       constant
0xffff8bde6e38    88  26c5b0f1       constant
0xffff8bde6e3c    92  00000000       constant
0xffff8bde6e40    96  327cbb49       constant
0xffff8bde6e44   100  00000000       constant
0xffff8bde6e48   104  8bd222e0       constant
0xffff8bde6e4c   108  0000ffff       constant
0xffff8bde6e50   112  8bd43480       constant
0xffff8bde6e54   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bde6df0  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bde6e00  embedded object  (0x327cbb49 WeakCell for 0x26c40019 <JS Function (SharedFunctionInfo 0x26c3ff71)>)
0xffff8bde6e18  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde6e28  code target (HANDLER)  (0xffff8bd43480)
0xffff8bde6e30  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = utf8Slice
compiler = unknown
Instructions (size = 120)
0xffff8bde6ec0     0  sub csp, jssp, #0x8 (8)
0xffff8bde6ec4     4  str x3, [jssp, #-8]!
0xffff8bde6ec8     8  sub csp, jssp, #0x8 (8)
0xffff8bde6ecc    12  str x0, [jssp, #-8]!
0xffff8bde6ed0    16  ldr x0, pc+72 (addr 0x0000ffff8bde6f18)    ;; object: 0x327cb899 Cell for 0
0xffff8bde6ed4    20  ldur x0, [x0, #7]
0xffff8bde6ed8    24  cmp x0, #0x0 (0)
0xffff8bde6edc    28  b.ne #+0x14 (addr 0xffff8bde6ef0)
0xffff8bde6ee0    32  ldr x3, pc+64 (addr 0x0000ffff8bde6f20)    ;; object: 0x327cbb81 WeakCell for 0x327408e9 <a FastBuffer with map 0x5f522341>
0xffff8bde6ee4    36  ldur x3, [x3, #7]
0xffff8bde6ee8    40  tbz w3, #0, #+0x8 (addr 0xffff8bde6ef0)
0xffff8bde6eec    44  b #+0x14 (addr 0xffff8bde6f00)
0xffff8bde6ef0    48  ldr x0, [jssp], #8
0xffff8bde6ef4    52  ldr x3, [jssp], #8
0xffff8bde6ef8    56  ldr x16, pc+48 (addr 0x0000ffff8bde6f28)    ;; code: BUILTIN
0xffff8bde6efc    60  br x16
0xffff8bde6f00    64  add jssp, jssp, #0x10 (16)
0xffff8bde6f04    68  mov x1, x3
0xffff8bde6f08    72  ldr x16, pc+40 (addr 0x0000ffff8bde6f30)    ;; code: HANDLER, LoadConstantStub, minor: 6
0xffff8bde6f0c    76  br x16
0xffff8bde6f10    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bde6f14    84  d63f03e0       constant
0xffff8bde6f18    88  327cb899       constant
0xffff8bde6f1c    92  00000000       constant
0xffff8bde6f20    96  327cbb81       constant
0xffff8bde6f24   100  00000000       constant
0xffff8bde6f28   104  8bd222e0       constant
0xffff8bde6f2c   108  0000ffff       constant
0xffff8bde6f30   112  8bd8b020       constant
0xffff8bde6f34   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bde6ed0  embedded object  (0x327cb899 Cell for 0)
0xffff8bde6ee0  embedded object  (0x327cbb81 WeakCell for 0x327408e9 <a FastBuffer with map 0x5f522341>)
0xffff8bde6ef8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde6f08  code target (HANDLER)  (0xffff8bd8b020)
0xffff8bde6f10  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _compile
compiler = unknown
Instructions (size = 120)
0xffff8bde6fa0     0  sub csp, jssp, #0x8 (8)
0xffff8bde6fa4     4  str x3, [jssp, #-8]!
0xffff8bde6fa8     8  sub csp, jssp, #0x8 (8)
0xffff8bde6fac    12  str x0, [jssp, #-8]!
0xffff8bde6fb0    16  ldr x0, pc+72 (addr 0x0000ffff8bde6ff8)    ;; object: 0x327cb411 Cell for 0
0xffff8bde6fb4    20  ldur x0, [x0, #7]
0xffff8bde6fb8    24  cmp x0, #0x0 (0)
0xffff8bde6fbc    28  b.ne #+0x14 (addr 0xffff8bde6fd0)
0xffff8bde6fc0    32  ldr x3, pc+64 (addr 0x0000ffff8bde7000)    ;; object: 0x327cbbb9 WeakCell for 0x565405e9 <an Object with map 0x5f535009>
0xffff8bde6fc4    36  ldur x3, [x3, #7]
0xffff8bde6fc8    40  tbz w3, #0, #+0x8 (addr 0xffff8bde6fd0)
0xffff8bde6fcc    44  b #+0x14 (addr 0xffff8bde6fe0)
0xffff8bde6fd0    48  ldr x0, [jssp], #8
0xffff8bde6fd4    52  ldr x3, [jssp], #8
0xffff8bde6fd8    56  ldr x16, pc+48 (addr 0x0000ffff8bde7008)    ;; code: BUILTIN
0xffff8bde6fdc    60  br x16
0xffff8bde6fe0    64  add jssp, jssp, #0x10 (16)
0xffff8bde6fe4    68  mov x1, x3
0xffff8bde6fe8    72  ldr x16, pc+40 (addr 0x0000ffff8bde7010)    ;; code: HANDLER, LoadConstantStub, minor: 3
0xffff8bde6fec    76  br x16
0xffff8bde6ff0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bde6ff4    84  d63f03e0       constant
0xffff8bde6ff8    88  327cb411       constant
0xffff8bde6ffc    92  00000000       constant
0xffff8bde7000    96  327cbbb9       constant
0xffff8bde7004   100  00000000       constant
0xffff8bde7008   104  8bd222e0       constant
0xffff8bde700c   108  0000ffff       constant
0xffff8bde7010   112  8bd43400       constant
0xffff8bde7014   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bde6fb0  embedded object  (0x327cb411 Cell for 0)
0xffff8bde6fc0  embedded object  (0x327cbbb9 WeakCell for 0x565405e9 <an Object with map 0x5f535009>)
0xffff8bde6fd8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde6fe8  code target (HANDLER)  (0xffff8bd43400)
0xffff8bde6ff0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _debugWaitConnect
compiler = unknown
Instructions (size = 632)
0xffff8bde73c0     0  sub csp, jssp, #0x8 (8)
0xffff8bde73c4     4  str x3, [jssp, #-8]!
0xffff8bde73c8     8  sub csp, jssp, #0x8 (8)
0xffff8bde73cc    12  str x0, [jssp, #-8]!
0xffff8bde73d0    16  ldr x0, pc+544 (addr 0x0000ffff8bde75f0)    ;; object: 0x26ce3709 Cell for 0
0xffff8bde73d4    20  ldur x0, [x0, #7]
0xffff8bde73d8    24  cmp x0, #0x0 (0)
0xffff8bde73dc    28  b.ne #+0x1f8 (addr 0xffff8bde75d4)
0xffff8bde73e0    32  ldur x4, [x1, #-1]
0xffff8bde73e4    36  ldrb w0, [x4, #12]
0xffff8bde73e8    40  movz x16, #0x44
0xffff8bde73ec    44  tst x0, x16
0xffff8bde73f0    48  b.ne #+0x1e4 (addr 0xffff8bde75d4)
0xffff8bde73f4    52  ldrb w0, [x4, #11]
0xffff8bde73f8    56  cmp x0, #0xb1 (177)
0xffff8bde73fc    60  b.lt #+0x1d8 (addr 0xffff8bde75d4)
0xffff8bde7400    64  ldur x0, [x1, #7]
0xffff8bde7404    68  ldur x4, [x0, #-1]
0xffff8bde7408    72  ldr x16, [x26, #432]
0xffff8bde740c    76  cmp x4, x16
0xffff8bde7410    80  b.ne #+0x1c4 (addr 0xffff8bde75d4)
0xffff8bde7414    84  ldursw x4, [x0, #35]
0xffff8bde7418    88  sub x4, x4, #0x1 (1)
0xffff8bde741c    92  movz x16, #0x1693
0xffff8bde7420    96  movk x16, #0x3e08, lsl #16
0xffff8bde7424   100  and x4, x4, x16
0xffff8bde7428   104  add x4, x4, x4, lsl #1
0xffff8bde742c   108  add x4, x0, x4, lsl #3
0xffff8bde7430   112  ldur x4, [x4, #55]
0xffff8bde7434   116  ldr x16, [x26, #40]
0xffff8bde7438   120  cmp x4, x16
0xffff8bde743c   124  b.eq #+0x188 (addr 0xffff8bde75c4)
0xffff8bde7440   128  ldr x16, pc+440 (addr 0x0000ffff8bde75f8)    ;; object: 0x26cba8a1 <String[17]: _debugWaitConnect>
0xffff8bde7444   132  cmp x4, x16
0xffff8bde7448   136  b.eq #+0x18c (addr 0xffff8bde75d4)
0xffff8bde744c   140  ldr x16, [x26, #88]
0xffff8bde7450   144  cmp x4, x16
0xffff8bde7454   148  b.eq #+0x1c (addr 0xffff8bde7470)
0xffff8bde7458   152  ldur x4, [x4, #-1]
0xffff8bde745c   156  ldrb w4, [x4, #11]
0xffff8bde7460   160  tst x4, #0xc0
0xffff8bde7464   164  movz x16, #0x80
0xffff8bde7468   168  ccmp x4, x16, #nZcv, ne
0xffff8bde746c   172  b.ne #+0x168 (addr 0xffff8bde75d4)
0xffff8bde7470   176  ldursw x4, [x0, #35]
0xffff8bde7474   180  sub x4, x4, #0x1 (1)
0xffff8bde7478   184  movz x16, #0x1694
0xffff8bde747c   188  movk x16, #0x3e08, lsl #16
0xffff8bde7480   192  and x4, x4, x16
0xffff8bde7484   196  add x4, x4, x4, lsl #1
0xffff8bde7488   200  add x4, x0, x4, lsl #3
0xffff8bde748c   204  ldur x4, [x4, #55]
0xffff8bde7490   208  ldr x16, [x26, #40]
0xffff8bde7494   212  cmp x4, x16
0xffff8bde7498   216  b.eq #+0x12c (addr 0xffff8bde75c4)
0xffff8bde749c   220  ldr x16, pc+356 (addr 0x0000ffff8bde7600)    ;; object: 0x26cba8a1 <String[17]: _debugWaitConnect>
0xffff8bde74a0   224  cmp x4, x16
0xffff8bde74a4   228  b.eq #+0x130 (addr 0xffff8bde75d4)
0xffff8bde74a8   232  ldr x16, [x26, #88]
0xffff8bde74ac   236  cmp x4, x16
0xffff8bde74b0   240  b.eq #+0x1c (addr 0xffff8bde74cc)
0xffff8bde74b4   244  ldur x4, [x4, #-1]
0xffff8bde74b8   248  ldrb w4, [x4, #11]
0xffff8bde74bc   252  tst x4, #0xc0
0xffff8bde74c0   256  movz x16, #0x80
0xffff8bde74c4   260  ccmp x4, x16, #nZcv, ne
0xffff8bde74c8   264  b.ne #+0x10c (addr 0xffff8bde75d4)
0xffff8bde74cc   268  ldursw x4, [x0, #35]
0xffff8bde74d0   272  sub x4, x4, #0x1 (1)
0xffff8bde74d4   276  movz x16, #0x1696
0xffff8bde74d8   280  movk x16, #0x3e08, lsl #16
0xffff8bde74dc   284  and x4, x4, x16
0xffff8bde74e0   288  add x4, x4, x4, lsl #1
0xffff8bde74e4   292  add x4, x0, x4, lsl #3
0xffff8bde74e8   296  ldur x4, [x4, #55]
0xffff8bde74ec   300  ldr x16, [x26, #40]
0xffff8bde74f0   304  cmp x4, x16
0xffff8bde74f4   308  b.eq #+0xd0 (addr 0xffff8bde75c4)
0xffff8bde74f8   312  ldr x16, pc+272 (addr 0x0000ffff8bde7608)    ;; object: 0x26cba8a1 <String[17]: _debugWaitConnect>
0xffff8bde74fc   316  cmp x4, x16
0xffff8bde7500   320  b.eq #+0xd4 (addr 0xffff8bde75d4)
0xffff8bde7504   324  ldr x16, [x26, #88]
0xffff8bde7508   328  cmp x4, x16
0xffff8bde750c   332  b.eq #+0x1c (addr 0xffff8bde7528)
0xffff8bde7510   336  ldur x4, [x4, #-1]
0xffff8bde7514   340  ldrb w4, [x4, #11]
0xffff8bde7518   344  tst x4, #0xc0
0xffff8bde751c   348  movz x16, #0x80
0xffff8bde7520   352  ccmp x4, x16, #nZcv, ne
0xffff8bde7524   356  b.ne #+0xb0 (addr 0xffff8bde75d4)
0xffff8bde7528   360  ldursw x4, [x0, #35]
0xffff8bde752c   364  sub x4, x4, #0x1 (1)
0xffff8bde7530   368  movz x16, #0x1699
0xffff8bde7534   372  movk x16, #0x3e08, lsl #16
0xffff8bde7538   376  and x4, x4, x16
0xffff8bde753c   380  add x4, x4, x4, lsl #1
0xffff8bde7540   384  add x4, x0, x4, lsl #3
0xffff8bde7544   388  ldur x4, [x4, #55]
0xffff8bde7548   392  ldr x16, [x26, #40]
0xffff8bde754c   396  cmp x4, x16
0xffff8bde7550   400  b.eq #+0x74 (addr 0xffff8bde75c4)
0xffff8bde7554   404  ldr x16, pc+188 (addr 0x0000ffff8bde7610)    ;; object: 0x26cba8a1 <String[17]: _debugWaitConnect>
0xffff8bde7558   408  cmp x4, x16
0xffff8bde755c   412  b.eq #+0x78 (addr 0xffff8bde75d4)
0xffff8bde7560   416  ldr x16, [x26, #88]
0xffff8bde7564   420  cmp x4, x16
0xffff8bde7568   424  b.eq #+0x1c (addr 0xffff8bde7584)
0xffff8bde756c   428  ldur x4, [x4, #-1]
0xffff8bde7570   432  ldrb w4, [x4, #11]
0xffff8bde7574   436  tst x4, #0xc0
0xffff8bde7578   440  movz x16, #0x80
0xffff8bde757c   444  ccmp x4, x16, #nZcv, ne
0xffff8bde7580   448  b.ne #+0x54 (addr 0xffff8bde75d4)
0xffff8bde7584   452  sub csp, jssp, #0x38 (56)
0xffff8bde7588   456  stp x3, x5, [jssp, #-32]!
0xffff8bde758c   460  stp x6, lr, [jssp, #16]
0xffff8bde7590   464  stp x0, x1, [jssp, #-24]!
0xffff8bde7594   468  str x2, [jssp, #16]
0xffff8bde7598   472  ldur x0, [x1, #7]
0xffff8bde759c   476  ldr x1, pc+124 (addr 0x0000ffff8bde7618)    ;; object: 0x26cba8a1 <String[17]: _debugWaitConnect>
0xffff8bde75a0   480  ldr x16, pc+128 (addr 0x0000ffff8bde7620)    ;; code: STUB, NameDictionaryLookupStub, minor: 1
0xffff8bde75a4   484  blr x16
0xffff8bde75a8   488  mov x4, x0
0xffff8bde75ac   492  ldp x2, x3, [jssp, #16]
0xffff8bde75b0   496  ldp x0, x1, [jssp], #32
0xffff8bde75b4   500  ldr lr, [jssp, #16]
0xffff8bde75b8   504  ldp x5, x6, [jssp], #24
0xffff8bde75bc   508  cbz x4, #+0x8 (addr 0xffff8bde75c4)
0xffff8bde75c0   512  b #+0x14 (addr 0xffff8bde75d4)
0xffff8bde75c4   516  add jssp, jssp, #0x10 (16)
0xffff8bde75c8   520  ldr x0, pc+96 (addr 0x0000ffff8bde7628)    ;; object: 0x26c04241 <undefined>
0xffff8bde75cc   524  ret
0xffff8bde75d0   528  b #+0x14 (addr 0xffff8bde75e4)
0xffff8bde75d4   532  ldr x0, [jssp], #8
0xffff8bde75d8   536  ldr x3, [jssp], #8
0xffff8bde75dc   540  ldr x16, pc+84 (addr 0x0000ffff8bde7630)    ;; code: BUILTIN
0xffff8bde75e0   544  br x16
0xffff8bde75e4   548  5800029f       constant pool begin (num_const = 20)    ;; constant pool
0xffff8bde75e8   552  d63f03e0       constant
0xffff8bde75ec   556  d503201f       constant
0xffff8bde75f0   560  26ce3709       constant
0xffff8bde75f4   564  00000000       constant
0xffff8bde75f8   568  26cba8a1       constant
0xffff8bde75fc   572  00000000       constant
0xffff8bde7600   576  26cba8a1       constant
0xffff8bde7604   580  00000000       constant
0xffff8bde7608   584  26cba8a1       constant
0xffff8bde760c   588  00000000       constant
0xffff8bde7610   592  26cba8a1       constant
0xffff8bde7614   596  00000000       constant
0xffff8bde7618   600  26cba8a1       constant
0xffff8bde761c   604  00000000       constant
0xffff8bde7620   608  8bd8b120       constant
0xffff8bde7624   612  0000ffff       constant
0xffff8bde7628   616  26c04241       constant
0xffff8bde762c   620  00000000       constant
0xffff8bde7630   624  8bd222e0       constant
0xffff8bde7634   628  0000ffff       constant


RelocInfo (size = 25)
0xffff8bde73d0  embedded object  (0x26ce3709 Cell for 0)
0xffff8bde7440  embedded object  (0x26cba8a1 <String[17]: _debugWaitConnect>)
0xffff8bde749c  embedded object  (0x26cba8a1 <String[17]: _debugWaitConnect>)
0xffff8bde74f8  embedded object  (0x26cba8a1 <String[17]: _debugWaitConnect>)
0xffff8bde7554  embedded object  (0x26cba8a1 <String[17]: _debugWaitConnect>)
0xffff8bde759c  embedded object  (0x26cba8a1 <String[17]: _debugWaitConnect>)
0xffff8bde75a0  code target (STUB)  (0xffff8bd8b120)
0xffff8bde75c8  embedded object  (0x26c04241 <undefined>)
0xffff8bde75dc  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde75e4  constant pool (size 84)

kind = HANDLER
major_key = <NoCache>Stub
name = constructor
compiler = unknown
Instructions (size = 120)
0xffff8bde76a0     0  sub csp, jssp, #0x8 (8)
0xffff8bde76a4     4  str x3, [jssp, #-8]!
0xffff8bde76a8     8  sub csp, jssp, #0x8 (8)
0xffff8bde76ac    12  str x0, [jssp, #-8]!
0xffff8bde76b0    16  ldr x0, pc+72 (addr 0x0000ffff8bde76f8)    ;; object: 0x327cb411 Cell for 0
0xffff8bde76b4    20  ldur x0, [x0, #7]
0xffff8bde76b8    24  cmp x0, #0x0 (0)
0xffff8bde76bc    28  b.ne #+0x14 (addr 0xffff8bde76d0)
0xffff8bde76c0    32  ldr x3, pc+64 (addr 0x0000ffff8bde7700)    ;; object: 0x327cc231 WeakCell for 0x565405e9 <an Object with map 0x5f535009>
0xffff8bde76c4    36  ldur x3, [x3, #7]
0xffff8bde76c8    40  tbz w3, #0, #+0x8 (addr 0xffff8bde76d0)
0xffff8bde76cc    44  b #+0x14 (addr 0xffff8bde76e0)
0xffff8bde76d0    48  ldr x0, [jssp], #8
0xffff8bde76d4    52  ldr x3, [jssp], #8
0xffff8bde76d8    56  ldr x16, pc+48 (addr 0x0000ffff8bde7708)    ;; code: BUILTIN
0xffff8bde76dc    60  br x16
0xffff8bde76e0    64  add jssp, jssp, #0x10 (16)
0xffff8bde76e4    68  mov x1, x3
0xffff8bde76e8    72  ldr x16, pc+40 (addr 0x0000ffff8bde7710)    ;; code: HANDLER, LoadConstantStub, minor: 0
0xffff8bde76ec    76  br x16
0xffff8bde76f0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bde76f4    84  d63f03e0       constant
0xffff8bde76f8    88  327cb411       constant
0xffff8bde76fc    92  00000000       constant
0xffff8bde7700    96  327cc231       constant
0xffff8bde7704   100  00000000       constant
0xffff8bde7708   104  8bd222e0       constant
0xffff8bde770c   108  0000ffff       constant
0xffff8bde7710   112  8bd431a0       constant
0xffff8bde7714   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bde76b0  embedded object  (0x327cb411 Cell for 0)
0xffff8bde76c0  embedded object  (0x327cc231 WeakCell for 0x565405e9 <an Object with map 0x5f535009>)
0xffff8bde76d8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bde76e8  code target (HANDLER)  (0xffff8bd431a0)
0xffff8bde76f0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = resolve
compiler = unknown
Instructions (size = 152)
0xffff8bde7780     0  sub csp, jssp, #0x8 (8)
0xffff8bde7784     4  str x3, [jssp, #-8]!
0xffff8bde7788     8  sub csp, jssp, #0x8 (8)
0xffff8bde778c    12  str x4, [jssp, #-8]!
0xffff8bde7790    16  ldr x3, pc+88 (addr 0x0000ffff8bde77e8)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bde7794    20  ldur x3, [x3, #7]
0xffff8bde7798    24  cmp x3, #0x0 (0)
0xffff8bde779c    28  b.ne #+0x30 (addr 0xffff8bde77cc)
0xffff8bde77a0    32  tbz w0, #0, #+0x2c (addr 0xffff8bde77cc)
0xffff8bde77a4    36  ldr x5, pc+76 (addr 0x0000ffff8bde77f0)    ;; object: 0x327cc269 WeakCell for 0x5f5368c9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde77a8    40  ldur x5, [x5, #7]
0xffff8bde77ac    44  tbz w5, #0, #+0x20 (addr 0xffff8bde77cc)
0xffff8bde77b0    48  ldursw x4, [x5, #15]
0xffff8bde77b4    52  tbnz w4, #23, #+0x18 (addr 0xffff8bde77cc)
0xffff8bde77b8    56  ldr x4, [jssp], #8
0xffff8bde77bc    60  ldr x3, [jssp], #8
0xffff8bde77c0    64  ldr x2, pc+56 (addr 0x0000ffff8bde77f8)    ;; object: 0x26c8fcd9 <String[7]: resolve>
0xffff8bde77c4    68  ldr x16, pc+60 (addr 0x0000ffff8bde7800)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff8bde77c8    72  br x16
0xffff8bde77cc    76  ldr x2, pc+60 (addr 0x0000ffff8bde7808)    ;; object: 0x26c8fcd9 <String[7]: resolve>
0xffff8bde77d0    80  ldr x4, [jssp], #8
0xffff8bde77d4    84  ldr x3, [jssp], #8
0xffff8bde77d8    88  ldr x16, pc+56 (addr 0x0000ffff8bde7810)    ;; code: BUILTIN
0xffff8bde77dc    92  br x16
0xffff8bde77e0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bde77e4   100  d63f03e0       constant
0xffff8bde77e8   104  26c5b0f1       constant
0xffff8bde77ec   108  00000000       constant
0xffff8bde77f0   112  327cc269       constant
0xffff8bde77f4   116  00000000       constant
0xffff8bde77f8   120  26c8fcd9       constant
0xffff8bde77fc   124  00000000       constant
0xffff8bde7800   128  8bd38860       constant
0xffff8bde7804   132  0000ffff       constant
0xffff8bde7808   136  26c8fcd9       constant
0xffff8bde780c   140  00000000       constant
0xffff8bde7810   144  8bd22420       constant
0xffff8bde7814   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bde7790  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bde77a4  embedded object  (0x327cc269 WeakCell for 0x5f5368c9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde77c0  embedded object  (0x26c8fcd9 <String[7]: resolve>)
0xffff8bde77c4  code target (HANDLER)  (0xffff8bd38860)
0xffff8bde77cc  embedded object  (0x26c8fcd9 <String[7]: resolve>)
0xffff8bde77d8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bde77e0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = main
compiler = unknown
Instructions (size = 184)
0xffff8bde7880     0  sub csp, jssp, #0x8 (8)
0xffff8bde7884     4  str x3, [jssp, #-8]!
0xffff8bde7888     8  sub csp, jssp, #0x8 (8)
0xffff8bde788c    12  str x4, [jssp, #-8]!
0xffff8bde7890    16  ldr x3, pc+112 (addr 0x0000ffff8bde7900)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bde7894    20  ldur x3, [x3, #7]
0xffff8bde7898    24  cmp x3, #0x0 (0)
0xffff8bde789c    28  b.ne #+0x44 (addr 0xffff8bde78e0)
0xffff8bde78a0    32  tbz w0, #0, #+0x40 (addr 0xffff8bde78e0)
0xffff8bde78a4    36  ldur x3, [x0, #-1]
0xffff8bde78a8    40  ldr x4, pc+96 (addr 0x0000ffff8bde7908)    ;; object: 0x327c5369 WeakCell for 0x5f536559 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde78ac    44  ldur x4, [x4, #7]
0xffff8bde78b0    48  cmp x3, x4
0xffff8bde78b4    52  b.ne #+0x2c (addr 0xffff8bde78e0)
0xffff8bde78b8    56  ldr x5, pc+88 (addr 0x0000ffff8bde7910)    ;; object: 0x327cc2a1 WeakCell for 0x5f536921 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde78bc    60  ldur x5, [x5, #7]
0xffff8bde78c0    64  tbz w5, #0, #+0x20 (addr 0xffff8bde78e0)
0xffff8bde78c4    68  ldursw x4, [x5, #15]
0xffff8bde78c8    72  tbnz w4, #23, #+0x18 (addr 0xffff8bde78e0)
0xffff8bde78cc    76  ldr x4, [jssp], #8
0xffff8bde78d0    80  ldr x3, [jssp], #8
0xffff8bde78d4    84  ldr x2, pc+68 (addr 0x0000ffff8bde7918)    ;; object: 0x32707b89 <String[4]: main>
0xffff8bde78d8    88  ldr x16, pc+72 (addr 0x0000ffff8bde7920)    ;; code: HANDLER, StoreTransitionStub, minor: 196611
0xffff8bde78dc    92  br x16
0xffff8bde78e0    96  ldr x2, pc+72 (addr 0x0000ffff8bde7928)    ;; object: 0x32707b89 <String[4]: main>
0xffff8bde78e4   100  ldr x4, [jssp], #8
0xffff8bde78e8   104  ldr x3, [jssp], #8
0xffff8bde78ec   108  ldr x16, pc+68 (addr 0x0000ffff8bde7930)    ;; code: BUILTIN
0xffff8bde78f0   112  br x16
0xffff8bde78f4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bde78f8   120  d63f03e0       constant
0xffff8bde78fc   124  d503201f       constant
0xffff8bde7900   128  26c5b0f1       constant
0xffff8bde7904   132  00000000       constant
0xffff8bde7908   136  327c5369       constant
0xffff8bde790c   140  00000000       constant
0xffff8bde7910   144  327cc2a1       constant
0xffff8bde7914   148  00000000       constant
0xffff8bde7918   152  32707b89       constant
0xffff8bde791c   156  00000000       constant
0xffff8bde7920   160  8bd99940       constant
0xffff8bde7924   164  0000ffff       constant
0xffff8bde7928   168  32707b89       constant
0xffff8bde792c   172  00000000       constant
0xffff8bde7930   176  8bd22420       constant
0xffff8bde7934   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bde7890  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bde78a8  embedded object  (0x327c5369 WeakCell for 0x5f536559 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde78b8  embedded object  (0x327cc2a1 WeakCell for 0x5f536921 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde78d4  embedded object  (0x32707b89 <String[4]: main>)
0xffff8bde78d8  code target (HANDLER)  (0xffff8bd99940)
0xffff8bde78e0  embedded object  (0x32707b89 <String[4]: main>)
0xffff8bde78ec  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bde78f4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = extensions
compiler = unknown
Instructions (size = 184)
0xffff8bde79a0     0  sub csp, jssp, #0x8 (8)
0xffff8bde79a4     4  str x3, [jssp, #-8]!
0xffff8bde79a8     8  sub csp, jssp, #0x8 (8)
0xffff8bde79ac    12  str x4, [jssp, #-8]!
0xffff8bde79b0    16  ldr x3, pc+112 (addr 0x0000ffff8bde7a20)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bde79b4    20  ldur x3, [x3, #7]
0xffff8bde79b8    24  cmp x3, #0x0 (0)
0xffff8bde79bc    28  b.ne #+0x44 (addr 0xffff8bde7a00)
0xffff8bde79c0    32  tbz w0, #0, #+0x40 (addr 0xffff8bde7a00)
0xffff8bde79c4    36  ldur x3, [x0, #-1]
0xffff8bde79c8    40  ldr x4, pc+96 (addr 0x0000ffff8bde7a28)    ;; object: 0x3272e741 WeakCell for 0x5f535111 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde79cc    44  ldur x4, [x4, #7]
0xffff8bde79d0    48  cmp x3, x4
0xffff8bde79d4    52  b.ne #+0x2c (addr 0xffff8bde7a00)
0xffff8bde79d8    56  ldr x5, pc+88 (addr 0x0000ffff8bde7a30)    ;; object: 0x327cc2d9 WeakCell for 0x5f536979 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde79dc    60  ldur x5, [x5, #7]
0xffff8bde79e0    64  tbz w5, #0, #+0x20 (addr 0xffff8bde7a00)
0xffff8bde79e4    68  ldursw x4, [x5, #15]
0xffff8bde79e8    72  tbnz w4, #23, #+0x18 (addr 0xffff8bde7a00)
0xffff8bde79ec    76  ldr x4, [jssp], #8
0xffff8bde79f0    80  ldr x3, [jssp], #8
0xffff8bde79f4    84  ldr x2, pc+68 (addr 0x0000ffff8bde7a38)    ;; object: 0x3270a9e9 <String[10]: extensions>
0xffff8bde79f8    88  ldr x16, pc+72 (addr 0x0000ffff8bde7a40)    ;; code: HANDLER, StoreTransitionStub, minor: 196612
0xffff8bde79fc    92  br x16
0xffff8bde7a00    96  ldr x2, pc+72 (addr 0x0000ffff8bde7a48)    ;; object: 0x3270a9e9 <String[10]: extensions>
0xffff8bde7a04   100  ldr x4, [jssp], #8
0xffff8bde7a08   104  ldr x3, [jssp], #8
0xffff8bde7a0c   108  ldr x16, pc+68 (addr 0x0000ffff8bde7a50)    ;; code: BUILTIN
0xffff8bde7a10   112  br x16
0xffff8bde7a14   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bde7a18   120  d63f03e0       constant
0xffff8bde7a1c   124  d503201f       constant
0xffff8bde7a20   128  26c5b0f1       constant
0xffff8bde7a24   132  00000000       constant
0xffff8bde7a28   136  3272e741       constant
0xffff8bde7a2c   140  00000000       constant
0xffff8bde7a30   144  327cc2d9       constant
0xffff8bde7a34   148  00000000       constant
0xffff8bde7a38   152  3270a9e9       constant
0xffff8bde7a3c   156  00000000       constant
0xffff8bde7a40   160  8bd9a100       constant
0xffff8bde7a44   164  0000ffff       constant
0xffff8bde7a48   168  3270a9e9       constant
0xffff8bde7a4c   172  00000000       constant
0xffff8bde7a50   176  8bd22420       constant
0xffff8bde7a54   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bde79b0  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bde79c8  embedded object  (0x3272e741 WeakCell for 0x5f535111 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde79d8  embedded object  (0x327cc2d9 WeakCell for 0x5f536979 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde79f4  embedded object  (0x3270a9e9 <String[10]: extensions>)
0xffff8bde79f8  code target (HANDLER)  (0xffff8bd9a100)
0xffff8bde7a00  embedded object  (0x3270a9e9 <String[10]: extensions>)
0xffff8bde7a0c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bde7a14  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = cache
compiler = unknown
Instructions (size = 184)
0xffff8bde7ac0     0  sub csp, jssp, #0x8 (8)
0xffff8bde7ac4     4  str x3, [jssp, #-8]!
0xffff8bde7ac8     8  sub csp, jssp, #0x8 (8)
0xffff8bde7acc    12  str x4, [jssp, #-8]!
0xffff8bde7ad0    16  ldr x3, pc+112 (addr 0x0000ffff8bde7b40)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bde7ad4    20  ldur x3, [x3, #7]
0xffff8bde7ad8    24  cmp x3, #0x0 (0)
0xffff8bde7adc    28  b.ne #+0x44 (addr 0xffff8bde7b20)
0xffff8bde7ae0    32  tbz w0, #0, #+0x40 (addr 0xffff8bde7b20)
0xffff8bde7ae4    36  ldur x3, [x0, #-1]
0xffff8bde7ae8    40  ldr x4, pc+96 (addr 0x0000ffff8bde7b48)    ;; object: 0x327cb5c9 WeakCell for 0x5f536871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde7aec    44  ldur x4, [x4, #7]
0xffff8bde7af0    48  cmp x3, x4
0xffff8bde7af4    52  b.ne #+0x2c (addr 0xffff8bde7b20)
0xffff8bde7af8    56  ldr x5, pc+88 (addr 0x0000ffff8bde7b50)    ;; object: 0x327cc311 WeakCell for 0x5f5369d1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde7afc    60  ldur x5, [x5, #7]
0xffff8bde7b00    64  tbz w5, #0, #+0x20 (addr 0xffff8bde7b20)
0xffff8bde7b04    68  ldursw x4, [x5, #15]
0xffff8bde7b08    72  tbnz w4, #23, #+0x18 (addr 0xffff8bde7b20)
0xffff8bde7b0c    76  ldr x4, [jssp], #8
0xffff8bde7b10    80  ldr x3, [jssp], #8
0xffff8bde7b14    84  ldr x2, pc+68 (addr 0x0000ffff8bde7b58)    ;; object: 0x26cbab51 <String[5]: cache>
0xffff8bde7b18    88  ldr x16, pc+72 (addr 0x0000ffff8bde7b60)    ;; code: HANDLER, StoreTransitionStub, minor: 327685
0xffff8bde7b1c    92  br x16
0xffff8bde7b20    96  ldr x2, pc+72 (addr 0x0000ffff8bde7b68)    ;; object: 0x26cbab51 <String[5]: cache>
0xffff8bde7b24   100  ldr x4, [jssp], #8
0xffff8bde7b28   104  ldr x3, [jssp], #8
0xffff8bde7b2c   108  ldr x16, pc+68 (addr 0x0000ffff8bde7b70)    ;; code: BUILTIN
0xffff8bde7b30   112  br x16
0xffff8bde7b34   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bde7b38   120  d63f03e0       constant
0xffff8bde7b3c   124  d503201f       constant
0xffff8bde7b40   128  26c5b0f1       constant
0xffff8bde7b44   132  00000000       constant
0xffff8bde7b48   136  327cb5c9       constant
0xffff8bde7b4c   140  00000000       constant
0xffff8bde7b50   144  327cc311       constant
0xffff8bde7b54   148  00000000       constant
0xffff8bde7b58   152  26cbab51       constant
0xffff8bde7b5c   156  00000000       constant
0xffff8bde7b60   160  8bd9d3c0       constant
0xffff8bde7b64   164  0000ffff       constant
0xffff8bde7b68   168  26cbab51       constant
0xffff8bde7b6c   172  00000000       constant
0xffff8bde7b70   176  8bd22420       constant
0xffff8bde7b74   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bde7ad0  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bde7ae8  embedded object  (0x327cb5c9 WeakCell for 0x5f536871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde7af8  embedded object  (0x327cc311 WeakCell for 0x5f5369d1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde7b14  embedded object  (0x26cbab51 <String[5]: cache>)
0xffff8bde7b18  code target (HANDLER)  (0xffff8bd9d3c0)
0xffff8bde7b20  embedded object  (0x26cbab51 <String[5]: cache>)
0xffff8bde7b2c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bde7b34  constant pool (size 68)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 469)
0xffff8bde8e20     0  ldur x4, [x3, #47]
0xffff8bde8e24     4  tbnz w2, #0, #+0x98 (addr 0xffff8bde8ebc)
0xffff8bde8e28     8  asr x6, x2, #32
0xffff8bde8e2c    12  add x5, x4, #0x17 (23)
0xffff8bde8e30    16  ldr x7, [x5, w6, sxtw #3]
0xffff8bde8e34    20  ldr x4, pc+316 (addr 0x0000ffff8bde8f70)    ;; object: 0x26c04241 <undefined>
0xffff8bde8e38    24  cmp x7, x4
0xffff8bde8e3c    28  b.eq #+0x7c (addr 0xffff8bde8eb8)
0xffff8bde8e40    32  ldur x4, [x7, #7]
0xffff8bde8e44    36  ldur x5, [x4, #-1]
0xffff8bde8e48    40  ldrb w6, [x5, #7]
0xffff8bde8e4c    44  cmp w6, #0x4 (4)
0xffff8bde8e50    48  b.ne #+0x68 (addr 0xffff8bde8eb8)
0xffff8bde8e54    52  movz x1, #0xe2c0
0xffff8bde8e58    56  movk x1, #0x2cb8, lsl #16
0xffff8bde8e5c    60  ldp x2, x0, [x1]
0xffff8bde8e60    64  adds x16, x2, #0x30 (48)
0xffff8bde8e64    68  ccmp x16, x0, #nzCv, lo
0xffff8bde8e68    72  b.hi #+0x9c (addr 0xffff8bde8f04)
0xffff8bde8e6c    76  str x16, [x1]
0xffff8bde8e70    80  orr x2, x2, #0x1
0xffff8bde8e74    84  stur x5, [x2, #-1]
0xffff8bde8e78    88  ldur x0, [x4, #7]
0xffff8bde8e7c    92  stur x0, [x2, #7]
0xffff8bde8e80    96  ldur x0, [x4, #15]
0xffff8bde8e84   100  stur x0, [x2, #15]
0xffff8bde8e88   104  ldur x0, [x4, #23]
0xffff8bde8e8c   108  stur x0, [x2, #23]
0xffff8bde8e90   112  add x0, x2, #0x20 (32)
0xffff8bde8e94   116  ldr x1, pc+228 (addr 0x0000ffff8bde8f78)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde8e98   120  stur x1, [x0, #-1]
0xffff8bde8e9c   124  stur x7, [x0, #7]
0xffff8bde8ea0   128  ldur w0, [x7, #35]
0xffff8bde8ea4   132  add w0, w0, #0x1 (1)
0xffff8bde8ea8   136  lsl x0, x0, #32
0xffff8bde8eac   140  stur x0, [x7, #31]
0xffff8bde8eb0   144  mov x0, x2
0xffff8bde8eb4   148  ret
0xffff8bde8eb8   152  b #+0xe0 (addr 0xffff8bde8f98)
0xffff8bde8ebc   156  sub csp, jssp, #0x10 (16)
0xffff8bde8ec0   160  stp fp, lr, [jssp, #-16]!
0xffff8bde8ec4   164  movz fp, #0xa00000000
0xffff8bde8ec8   168  sub csp, jssp, #0x8 (8)
0xffff8bde8ecc   172  str fp, [jssp, #-8]!
0xffff8bde8ed0   176  add fp, jssp, #0x8 (8)
0xffff8bde8ed4   180  ldur x16, [x2, #-1]
0xffff8bde8ed8   184  ldr x17, [x26, #120]
0xffff8bde8edc   188  cmp x16, x17
0xffff8bde8ee0   192  b.ne #+0xc8 (addr 0xffff8bde8fa8)
0xffff8bde8ee4   196  ldur d29, [x2, #7]
0xffff8bde8ee8   200  fcvtzs w6, d29
0xffff8bde8eec   204  scvtf d0, w6
0xffff8bde8ef0   208  fcmp d29, d0
0xffff8bde8ef4   212  b.ne #+0xb4 (addr 0xffff8bde8fa8)
0xffff8bde8ef8   216  ldr lr, [jssp, #16]
0xffff8bde8efc   220  ldp xzr, fp, [jssp], #24
0xffff8bde8f00   224  b #-0xd4 (addr 0xffff8bde8e2c)
0xffff8bde8f04   228  sub csp, jssp, #0x10 (16)
0xffff8bde8f08   232  stp fp, lr, [jssp, #-16]!
0xffff8bde8f0c   236  movz fp, #0xa00000000
0xffff8bde8f10   240  sub csp, jssp, #0x8 (8)
0xffff8bde8f14   244  str fp, [jssp, #-8]!
0xffff8bde8f18   248  add fp, jssp, #0x8 (8)
0xffff8bde8f1c   252  movz x2, #0x0
0xffff8bde8f20   256  mov x16, lr
0xffff8bde8f24   260  ldr x17, pc+92 (addr 0x0000ffff8bde8f80)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bde8f28   264  blr x17
0xffff8bde8f2c   268  movz x0, #0x3000000000
0xffff8bde8f30   272  movz x10, #0x0
0xffff8bde8f34   276  sub csp, jssp, #0x10 (16)
0xffff8bde8f38   280  stp x10, x0, [jssp, #-16]!
0xffff8bde8f3c   284  movz x0, #0x2
0xffff8bde8f40   288  movz x1, #0x5b88
0xffff8bde8f44   292  movk x1, #0xe2, lsl #16
0xffff8bde8f48   296  ldr x16, pc+64 (addr 0x0000ffff8bde8f88)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bde8f4c   300  blr x16
0xffff8bde8f50   304  str x0, [jssp, #16]
0xffff8bde8f54   308  ldr x16, pc+60 (addr 0x0000ffff8bde8f90)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bde8f58   312  blr x16
0xffff8bde8f5c   316  ldr lr, [jssp, #16]
0xffff8bde8f60   320  ldp xzr, fp, [jssp], #24
0xffff8bde8f64   324  b #-0xf0 (addr 0xffff8bde8e74)
0xffff8bde8f68   328  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff8bde8f6c   332  d63f03e0       constant
0xffff8bde8f70   336  26c04241       constant
0xffff8bde8f74   340  00000000       constant
0xffff8bde8f78   344  5f505d81       constant
0xffff8bde8f7c   348  00000000       constant
0xffff8bde8f80   352  8bd06820       constant
0xffff8bde8f84   356  0000ffff       constant
0xffff8bde8f88   360  8bd06260       constant
0xffff8bde8f8c   364  0000ffff       constant
0xffff8bde8f90   368  8bd068e0       constant
0xffff8bde8f94   372  0000ffff       constant
0xffff8bde8f98   376  movz x16, #0x0
0xffff8bde8f9c   380  sub csp, jssp, #0x10 (16)
0xffff8bde8fa0   384  stp fp, lr, [jssp, #-16]!
0xffff8bde8fa4   388  bl #+0xc (addr 0xffff8bde8fb0)
0xffff8bde8fa8   392  movz x16, #0x8
0xffff8bde8fac   396  bl #+0x14 (addr 0xffff8bde8fc0)
0xffff8bde8fb0   400  movz x17, #0xa00000000
0xffff8bde8fb4   404  sub csp, jssp, #0x10 (16)
0xffff8bde8fb8   408  stp x17, cp, [jssp, #-16]!
0xffff8bde8fbc   412  add fp, jssp, #0x10 (16)
0xffff8bde8fc0   416  ldr x17, pc+24 (addr 0x0000ffff8bde8fd8)    ;; lazy deoptimization bailout 0
0xffff8bde8fc4   420  add x17, x17, x16
0xffff8bde8fc8   424  br x17
0xffff8bde8fcc   428  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bde8fd0   432  d63f03e0       constant
0xffff8bde8fd4   436  d503201f       constant
0xffff8bde8fd8   440  8bb06000       constant
0xffff8bde8fdc   444  0000ffff       constant


Safepoints (size = 21)
0xffff8bde8f50   304  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff8bde8e34  embedded object  (0x26c04241 <undefined>)
0xffff8bde8e94  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde8f24  code target (STUB)  (0xffff8bd06820)
0xffff8bde8f48  code target (STUB)  (0xffff8bd06260)
0xffff8bde8f54  code target (STUB)  (0xffff8bd068e0)
0xffff8bde8f68  constant pool (size 48)
0xffff8bde8fc0  runtime entry
0xffff8bde8fcc  constant pool (size 20)

--- End code ---
kind = STUB
major_key = FastCloneShallowObjectStub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 469)
0xffff8bde8e20     0  ldur x4, [x3, #47]
0xffff8bde8e24     4  tbnz w2, #0, #+0x98 (addr 0xffff8bde8ebc)
0xffff8bde8e28     8  asr x6, x2, #32
0xffff8bde8e2c    12  add x5, x4, #0x17 (23)
0xffff8bde8e30    16  ldr x7, [x5, w6, sxtw #3]
0xffff8bde8e34    20  ldr x4, pc+316 (addr 0x0000ffff8bde8f70)    ;; object: 0x26c04241 <undefined>
0xffff8bde8e38    24  cmp x7, x4
0xffff8bde8e3c    28  b.eq #+0x7c (addr 0xffff8bde8eb8)
0xffff8bde8e40    32  ldur x4, [x7, #7]
0xffff8bde8e44    36  ldur x5, [x4, #-1]
0xffff8bde8e48    40  ldrb w6, [x5, #7]
0xffff8bde8e4c    44  cmp w6, #0x4 (4)
0xffff8bde8e50    48  b.ne #+0x68 (addr 0xffff8bde8eb8)
0xffff8bde8e54    52  movz x1, #0xe2c0
0xffff8bde8e58    56  movk x1, #0x2cb8, lsl #16
0xffff8bde8e5c    60  ldp x2, x0, [x1]
0xffff8bde8e60    64  adds x16, x2, #0x30 (48)
0xffff8bde8e64    68  ccmp x16, x0, #nzCv, lo
0xffff8bde8e68    72  b.hi #+0x9c (addr 0xffff8bde8f04)
0xffff8bde8e6c    76  str x16, [x1]
0xffff8bde8e70    80  orr x2, x2, #0x1
0xffff8bde8e74    84  stur x5, [x2, #-1]
0xffff8bde8e78    88  ldur x0, [x4, #7]
0xffff8bde8e7c    92  stur x0, [x2, #7]
0xffff8bde8e80    96  ldur x0, [x4, #15]
0xffff8bde8e84   100  stur x0, [x2, #15]
0xffff8bde8e88   104  ldur x0, [x4, #23]
0xffff8bde8e8c   108  stur x0, [x2, #23]
0xffff8bde8e90   112  add x0, x2, #0x20 (32)
0xffff8bde8e94   116  ldr x1, pc+228 (addr 0x0000ffff8bde8f78)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bde8e98   120  stur x1, [x0, #-1]
0xffff8bde8e9c   124  stur x7, [x0, #7]
0xffff8bde8ea0   128  ldur w0, [x7, #35]
0xffff8bde8ea4   132  add w0, w0, #0x1 (1)
0xffff8bde8ea8   136  lsl x0, x0, #32
0xffff8bde8eac   140  stur x0, [x7, #31]
0xffff8bde8eb0   144  mov x0, x2
0xffff8bde8eb4   148  ret
0xffff8bde8eb8   152  b #+0xe0 (addr 0xffff8bde8f98)
0xffff8bde8ebc   156  sub csp, jssp, #0x10 (16)
0xffff8bde8ec0   160  stp fp, lr, [jssp, #-16]!
0xffff8bde8ec4   164  movz fp, #0xa00000000
0xffff8bde8ec8   168  sub csp, jssp, #0x8 (8)
0xffff8bde8ecc   172  str fp, [jssp, #-8]!
0xffff8bde8ed0   176  add fp, jssp, #0x8 (8)
0xffff8bde8ed4   180  ldur x16, [x2, #-1]
0xffff8bde8ed8   184  ldr x17, [x26, #120]
0xffff8bde8edc   188  cmp x16, x17
0xffff8bde8ee0   192  b.ne #+0xc8 (addr 0xffff8bde8fa8)
0xffff8bde8ee4   196  ldur d29, [x2, #7]
0xffff8bde8ee8   200  fcvtzs w6, d29
0xffff8bde8eec   204  scvtf d0, w6
0xffff8bde8ef0   208  fcmp d29, d0
0xffff8bde8ef4   212  b.ne #+0xb4 (addr 0xffff8bde8fa8)
0xffff8bde8ef8   216  ldr lr, [jssp, #16]
0xffff8bde8efc   220  ldp xzr, fp, [jssp], #24
0xffff8bde8f00   224  b #-0xd4 (addr 0xffff8bde8e2c)
0xffff8bde8f04   228  sub csp, jssp, #0x10 (16)
0xffff8bde8f08   232  stp fp, lr, [jssp, #-16]!
0xffff8bde8f0c   236  movz fp, #0xa00000000
0xffff8bde8f10   240  sub csp, jssp, #0x8 (8)
0xffff8bde8f14   244  str fp, [jssp, #-8]!
0xffff8bde8f18   248  add fp, jssp, #0x8 (8)
0xffff8bde8f1c   252  movz x2, #0x0
0xffff8bde8f20   256  mov x16, lr
0xffff8bde8f24   260  ldr x17, pc+92 (addr 0x0000ffff8bde8f80)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bde8f28   264  blr x17
0xffff8bde8f2c   268  movz x0, #0x3000000000
0xffff8bde8f30   272  movz x10, #0x0
0xffff8bde8f34   276  sub csp, jssp, #0x10 (16)
0xffff8bde8f38   280  stp x10, x0, [jssp, #-16]!
0xffff8bde8f3c   284  movz x0, #0x2
0xffff8bde8f40   288  movz x1, #0x5b88
0xffff8bde8f44   292  movk x1, #0xe2, lsl #16
0xffff8bde8f48   296  ldr x16, pc+64 (addr 0x0000ffff8bde8f88)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bde8f4c   300  blr x16
0xffff8bde8f50   304  str x0, [jssp, #16]
0xffff8bde8f54   308  ldr x16, pc+60 (addr 0x0000ffff8bde8f90)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bde8f58   312  blr x16
0xffff8bde8f5c   316  ldr lr, [jssp, #16]
0xffff8bde8f60   320  ldp xzr, fp, [jssp], #24
0xffff8bde8f64   324  b #-0xf0 (addr 0xffff8bde8e74)
0xffff8bde8f68   328  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff8bde8f6c   332  d63f03e0       constant
0xffff8bde8f70   336  26c04241       constant
0xffff8bde8f74   340  00000000       constant
0xffff8bde8f78   344  5f505d81       constant
0xffff8bde8f7c   348  00000000       constant
0xffff8bde8f80   352  8bd06820       constant
0xffff8bde8f84   356  0000ffff       constant
0xffff8bde8f88   360  8bd06260       constant
0xffff8bde8f8c   364  0000ffff       constant
0xffff8bde8f90   368  8bd068e0       constant
0xffff8bde8f94   372  0000ffff       constant
0xffff8bde8f98   376  movz x16, #0x0
0xffff8bde8f9c   380  sub csp, jssp, #0x10 (16)
0xffff8bde8fa0   384  stp fp, lr, [jssp, #-16]!
0xffff8bde8fa4   388  bl #+0xc (addr 0xffff8bde8fb0)
0xffff8bde8fa8   392  movz x16, #0x8
0xffff8bde8fac   396  bl #+0x14 (addr 0xffff8bde8fc0)
0xffff8bde8fb0   400  movz x17, #0xa00000000
0xffff8bde8fb4   404  sub csp, jssp, #0x10 (16)
0xffff8bde8fb8   408  stp x17, cp, [jssp, #-16]!
0xffff8bde8fbc   412  add fp, jssp, #0x10 (16)
0xffff8bde8fc0   416  ldr x17, pc+24 (addr 0x0000ffff8bde8fd8)    ;; lazy deoptimization bailout 0
0xffff8bde8fc4   420  add x17, x17, x16
0xffff8bde8fc8   424  br x17
0xffff8bde8fcc   428  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bde8fd0   432  d63f03e0       constant
0xffff8bde8fd4   436  d503201f       constant
0xffff8bde8fd8   440  8bb06000       constant
0xffff8bde8fdc   444  0000ffff       constant


Safepoints (size = 21)
0xffff8bde8f50   304  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff8bde8e34  embedded object  (0x26c04241 <undefined>)
0xffff8bde8e94  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bde8f24  code target (STUB)  (0xffff8bd06820)
0xffff8bde8f48  code target (STUB)  (0xffff8bd06260)
0xffff8bde8f54  code target (STUB)  (0xffff8bd068e0)
0xffff8bde8f68  constant pool (size 48)
0xffff8bde8fc0  runtime entry
0xffff8bde8fcc  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*SMI -> GENERIC
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 632)
0xffff8bdeb2e0     0  tbnz w0, #0, #+0x1d4 (addr 0xffff8bdeb4b4)
0xffff8bdeb2e4     4  orr x16, x1, x0
0xffff8bdeb2e8     8  tbnz w16, #0, #+0x10 (addr 0xffff8bdeb2f8)
0xffff8bdeb2ec    12  asr x1, x1, #32
0xffff8bdeb2f0    16  sub x0, x1, x0, asr #32
0xffff8bdeb2f4    20  ret
0xffff8bdeb2f8    24  cmp x0, x1
0xffff8bdeb2fc    28  b.ne #+0x30 (addr 0xffff8bdeb32c)
0xffff8bdeb300    32  ldur x16, [x0, #-1]
0xffff8bdeb304    36  ldr x17, [x26, #120]
0xffff8bdeb308    40  cmp x16, x17
0xffff8bdeb30c    44  b.eq #+0xc (addr 0xffff8bdeb318)
0xffff8bdeb310    48  movz x0, #0x0
0xffff8bdeb314    52  ret
0xffff8bdeb318    56  ldur d0, [x0, #7]
0xffff8bdeb31c    60  fcmp d0, d0
0xffff8bdeb320    64  b.vc #-0x10 (addr 0xffff8bdeb310)
0xffff8bdeb324    68  movn x0, #0x0
0xffff8bdeb328    72  ret
0xffff8bdeb32c    76  and x16, x1, x0
0xffff8bdeb330    80  tbnz w16, #0, #+0x64 (addr 0xffff8bdeb394)
0xffff8bdeb334    84  tbz w0, #0, #+0x24 (addr 0xffff8bdeb358)
0xffff8bdeb338    88  ldur x16, [x0, #-1]
0xffff8bdeb33c    92  ldr x17, [x26, #120]
0xffff8bdeb340    96  cmp x16, x17
0xffff8bdeb344   100  b.eq #+0x8 (addr 0xffff8bdeb34c)
0xffff8bdeb348   104  ret
0xffff8bdeb34c   108  ldur d0, [x0, #7]
0xffff8bdeb350   112  scvtf d1, x1, #32
0xffff8bdeb354   116  b #+0x24 (addr 0xffff8bdeb378)
0xffff8bdeb358   120  ldur x16, [x1, #-1]
0xffff8bdeb35c   124  ldr x17, [x26, #120]
0xffff8bdeb360   128  cmp x16, x17
0xffff8bdeb364   132  b.eq #+0xc (addr 0xffff8bdeb370)
0xffff8bdeb368   136  movz x0, #0x1
0xffff8bdeb36c   140  ret
0xffff8bdeb370   144  ldur d1, [x1, #7]
0xffff8bdeb374   148  scvtf d0, x0, #32
0xffff8bdeb378   152  fcmp d1, d0
0xffff8bdeb37c   156  b.vs #+0x10 (addr 0xffff8bdeb38c)
0xffff8bdeb380   160  cset x0, gt
0xffff8bdeb384   164  csinv x0, x0, xzr, ge
0xffff8bdeb388   168  ret
0xffff8bdeb38c   172  movn x0, #0x0
0xffff8bdeb390   176  ret
0xffff8bdeb394   180  ldur x10, [x0, #-1]
0xffff8bdeb398   184  ldur x12, [x1, #-1]
0xffff8bdeb39c   188  ldrb w11, [x10, #11]
0xffff8bdeb3a0   192  ldrb w13, [x12, #11]
0xffff8bdeb3a4   196  cmp x11, #0xb1 (177)
0xffff8bdeb3a8   200  b.lt #+0x8 (addr 0xffff8bdeb3b0)
0xffff8bdeb3ac   204  ret
0xffff8bdeb3b0   208  cmp x11, #0x83 (131)
0xffff8bdeb3b4   212  movz x16, #0x83
0xffff8bdeb3b8   216  ccmp x13, x16, #nZcv, ne
0xffff8bdeb3bc   220  movz x16, #0xb1
0xffff8bdeb3c0   224  ccmp x13, x16, #NzcV, ne
0xffff8bdeb3c4   228  b.ge #-0x18 (addr 0xffff8bdeb3ac)
0xffff8bdeb3c8   232  orr x14, x13, x11
0xffff8bdeb3cc   236  tst x14, #0xc0
0xffff8bdeb3d0   240  b.eq #-0x24 (addr 0xffff8bdeb3ac)
0xffff8bdeb3d4   244  cmp x11, #0x81 (129)
0xffff8bdeb3d8   248  b.ne #+0x18 (addr 0xffff8bdeb3f0)
0xffff8bdeb3dc   252  cmp x12, x10
0xffff8bdeb3e0   256  b.ne #+0x10 (addr 0xffff8bdeb3f0)
0xffff8bdeb3e4   260  ldur d1, [x1, #7]
0xffff8bdeb3e8   264  ldur d0, [x0, #7]
0xffff8bdeb3ec   268  b #-0x74 (addr 0xffff8bdeb378)
0xffff8bdeb3f0   272  movz x16, #0x87
0xffff8bdeb3f4   276  and x14, x13, x16
0xffff8bdeb3f8   280  movz x16, #0x87
0xffff8bdeb3fc   284  and x15, x11, x16
0xffff8bdeb400   288  cmp x14, #0x4 (4)
0xffff8bdeb404   292  ccmp x15, #4, #nzcv, eq
0xffff8bdeb408   296  b.ne #+0x5c (addr 0xffff8bdeb464)
0xffff8bdeb40c   300  ldur x10, [x1, #15]
0xffff8bdeb410   304  ldur x11, [x0, #15]
0xffff8bdeb414   308  cmp x10, x11
0xffff8bdeb418   312  b.eq #+0xc (addr 0xffff8bdeb424)
0xffff8bdeb41c   316  movz x0, #0x100000000
0xffff8bdeb420   320  ret
0xffff8bdeb424   324  cbnz x10, #+0xc (addr 0xffff8bdeb430)
0xffff8bdeb428   328  movz x0, #0x0
0xffff8bdeb42c   332  ret
0xffff8bdeb430   336  asr x10, x10, #32
0xffff8bdeb434   340  add x11, x10, #0x17 (23)
0xffff8bdeb438   344  add x1, x1, x11
0xffff8bdeb43c   348  add x0, x0, x11
0xffff8bdeb440   352  neg x10, x10
0xffff8bdeb444   356  ldrb w11, [x1, x10]
0xffff8bdeb448   360  ldrb w12, [x0, x10]
0xffff8bdeb44c   364  cmp x11, x12
0xffff8bdeb450   368  b.ne #-0x34 (addr 0xffff8bdeb41c)
0xffff8bdeb454   372  add x10, x10, #0x1 (1)
0xffff8bdeb458   376  cbnz x10, #-0x14 (addr 0xffff8bdeb444)
0xffff8bdeb45c   380  movz x0, #0x0
0xffff8bdeb460   384  ret
0xffff8bdeb464   388  movz x16, #0xc00000000
0xffff8bdeb468   392  sub csp, jssp, #0x10 (16)
0xffff8bdeb46c   396  stp fp, lr, [jssp, #-16]!
0xffff8bdeb470   400  sub csp, jssp, #0x10 (16)
0xffff8bdeb474   404  str x16, [jssp, #-8]!
0xffff8bdeb478   408  ldr x17, pc+176 (addr 0x0000ffff8bdeb528)    ;; object: 0xffff8bdeb281 <Code: COMPARE_IC>
0xffff8bdeb47c   412  sub csp, jssp, #0x10 (16)
0xffff8bdeb480   416  str x17, [jssp, #-8]!
0xffff8bdeb484   420  add fp, jssp, #0x10 (16)
0xffff8bdeb488   424  sub csp, jssp, #0x10 (16)
0xffff8bdeb48c   428  stp x0, x1, [jssp, #-16]!
0xffff8bdeb490   432  movz x0, #0x2
0xffff8bdeb494   436  ldr x1, pc+156 (addr 0x0000ffff8bdeb530)    ;; external reference (Runtime::StrictEqual)
0xffff8bdeb498   440  ldr x16, pc+160 (addr 0x0000ffff8bdeb538)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdeb49c   444  blr x16
0xffff8bdeb4a0   448  mov jssp, fp
0xffff8bdeb4a4   452  ldp fp, lr, [jssp], #16
0xffff8bdeb4a8   456  ldr x1, [x26, #64]
0xffff8bdeb4ac   460  sub x0, x0, x1
0xffff8bdeb4b0   464  ret
0xffff8bdeb4b4   468  movz x16, #0xc00000000
0xffff8bdeb4b8   472  sub csp, jssp, #0x10 (16)
0xffff8bdeb4bc   476  stp fp, lr, [jssp, #-16]!
0xffff8bdeb4c0   480  sub csp, jssp, #0x10 (16)
0xffff8bdeb4c4   484  str x16, [jssp, #-8]!
0xffff8bdeb4c8   488  ldr x17, pc+120 (addr 0x0000ffff8bdeb540)    ;; object: 0xffff8bdeb281 <Code: COMPARE_IC>
0xffff8bdeb4cc   492  sub csp, jssp, #0x10 (16)
0xffff8bdeb4d0   496  str x17, [jssp, #-8]!
0xffff8bdeb4d4   500  add fp, jssp, #0x10 (16)
0xffff8bdeb4d8   504  sub csp, jssp, #0x18 (24)
0xffff8bdeb4dc   508  stp lr, x0, [jssp, #-24]!
0xffff8bdeb4e0   512  str x1, [jssp, #16]
0xffff8bdeb4e4   516  movz x10, #0x2f00000000
0xffff8bdeb4e8   520  sub csp, jssp, #0x18 (24)
0xffff8bdeb4ec   524  stp x10, x0, [jssp, #-24]!
0xffff8bdeb4f0   528  str x1, [jssp, #16]
0xffff8bdeb4f4   532  movz x0, #0x3
0xffff8bdeb4f8   536  ldr x1, pc+80 (addr 0x0000ffff8bdeb548)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bdeb4fc   540  ldr x16, pc+84 (addr 0x0000ffff8bdeb550)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdeb500   544  blr x16
0xffff8bdeb504   548  add x11, x0, #0x5f (95)
0xffff8bdeb508   552  ldr x1, [jssp, #16]
0xffff8bdeb50c   556  ldp lr, x0, [jssp], #24
0xffff8bdeb510   560  mov jssp, fp
0xffff8bdeb514   564  ldp fp, lr, [jssp], #16
0xffff8bdeb518   568  br x11
0xffff8bdeb51c   572  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdeb520   576  d63f03e0       constant
0xffff8bdeb524   580  d503201f       constant
0xffff8bdeb528   584  8bdeb281       constant
0xffff8bdeb52c   588  0000ffff       constant
0xffff8bdeb530   592  00e50928       constant
0xffff8bdeb534   596  00000000       constant
0xffff8bdeb538   600  8bd06060       constant
0xffff8bdeb53c   604  0000ffff       constant
0xffff8bdeb540   608  8bdeb281       constant
0xffff8bdeb544   612  0000ffff       constant
0xffff8bdeb548   616  00c8a980       constant
0xffff8bdeb54c   620  00000000       constant
0xffff8bdeb550   624  8bd06060       constant
0xffff8bdeb554   628  0000ffff       constant


RelocInfo (size = 16)
0xffff8bdeb478  embedded object  (0xffff8bdeb281 <Code: COMPARE_IC>)
0xffff8bdeb494  external reference (Runtime::StrictEqual)  (0xe50928)
0xffff8bdeb498  code target (STUB)  (0xffff8bd06060)
0xffff8bdeb4c8  embedded object  (0xffff8bdeb281 <Code: COMPARE_IC>)
0xffff8bdeb4f8  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bdeb4fc  code target (STUB)  (0xffff8bd06060)
0xffff8bdeb51c  constant pool (size 60)


kind = HANDLER
major_key = <NoCache>Stub
name = domain
compiler = unknown
Instructions (size = 152)
0xffff8bdeb9a0     0  sub csp, jssp, #0x8 (8)
0xffff8bdeb9a4     4  str x3, [jssp, #-8]!
0xffff8bdeb9a8     8  sub csp, jssp, #0x8 (8)
0xffff8bdeb9ac    12  str x4, [jssp, #-8]!
0xffff8bdeb9b0    16  ldr x3, pc+88 (addr 0x0000ffff8bdeba08)    ;; object: 0x327d1d11 Cell for 0
0xffff8bdeb9b4    20  ldur x3, [x3, #7]
0xffff8bdeb9b8    24  cmp x3, #0x0 (0)
0xffff8bdeb9bc    28  b.ne #+0x30 (addr 0xffff8bdeb9ec)
0xffff8bdeb9c0    32  tbz w0, #0, #+0x2c (addr 0xffff8bdeb9ec)
0xffff8bdeb9c4    36  ldr x5, pc+76 (addr 0x0000ffff8bdeba10)    ;; object: 0x327d1c51 WeakCell for 0x5f538a79 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdeb9c8    40  ldur x5, [x5, #7]
0xffff8bdeb9cc    44  tbz w5, #0, #+0x20 (addr 0xffff8bdeb9ec)
0xffff8bdeb9d0    48  ldursw x4, [x5, #15]
0xffff8bdeb9d4    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdeb9ec)
0xffff8bdeb9d8    56  ldr x4, [jssp], #8
0xffff8bdeb9dc    60  ldr x3, [jssp], #8
0xffff8bdeb9e0    64  ldr x2, pc+56 (addr 0x0000ffff8bdeba18)    ;; object: 0x26cb2439 <String[6]: domain>
0xffff8bdeb9e4    68  ldr x16, pc+60 (addr 0x0000ffff8bdeba20)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff8bdeb9e8    72  br x16
0xffff8bdeb9ec    76  ldr x2, pc+60 (addr 0x0000ffff8bdeba28)    ;; object: 0x26cb2439 <String[6]: domain>
0xffff8bdeb9f0    80  ldr x4, [jssp], #8
0xffff8bdeb9f4    84  ldr x3, [jssp], #8
0xffff8bdeb9f8    88  ldr x16, pc+56 (addr 0x0000ffff8bdeba30)    ;; code: BUILTIN
0xffff8bdeb9fc    92  br x16
0xffff8bdeba00    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdeba04   100  d63f03e0       constant
0xffff8bdeba08   104  327d1d11       constant
0xffff8bdeba0c   108  00000000       constant
0xffff8bdeba10   112  327d1c51       constant
0xffff8bdeba14   116  00000000       constant
0xffff8bdeba18   120  26cb2439       constant
0xffff8bdeba1c   124  00000000       constant
0xffff8bdeba20   128  8bd8bdc0       constant
0xffff8bdeba24   132  0000ffff       constant
0xffff8bdeba28   136  26cb2439       constant
0xffff8bdeba2c   140  00000000       constant
0xffff8bdeba30   144  8bd22420       constant
0xffff8bdeba34   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdeb9b0  embedded object  (0x327d1d11 Cell for 0)
0xffff8bdeb9c4  embedded object  (0x327d1c51 WeakCell for 0x5f538a79 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdeb9e0  embedded object  (0x26cb2439 <String[6]: domain>)
0xffff8bdeb9e4  code target (HANDLER)  (0xffff8bd8bdc0)
0xffff8bdeb9ec  embedded object  (0x26cb2439 <String[6]: domain>)
0xffff8bdeb9f8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdeba00  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = _events
compiler = unknown
Instructions (size = 120)
0xffff8bdebaa0     0  sub csp, jssp, #0x8 (8)
0xffff8bdebaa4     4  str x3, [jssp, #-8]!
0xffff8bdebaa8     8  sub csp, jssp, #0x8 (8)
0xffff8bdebaac    12  str x0, [jssp, #-8]!
0xffff8bdebab0    16  ldr x0, pc+72 (addr 0x0000ffff8bdebaf8)    ;; object: 0x327d1d11 Cell for 0
0xffff8bdebab4    20  ldur x0, [x0, #7]
0xffff8bdebab8    24  cmp x0, #0x0 (0)
0xffff8bdebabc    28  b.ne #+0x14 (addr 0xffff8bdebad0)
0xffff8bdebac0    32  ldr x3, pc+64 (addr 0x0000ffff8bdebb00)    ;; object: 0x327d1d41 WeakCell for 0x327acc41 <an Object with map 0x5f51bf39>
0xffff8bdebac4    36  ldur x3, [x3, #7]
0xffff8bdebac8    40  tbz w3, #0, #+0x8 (addr 0xffff8bdebad0)
0xffff8bdebacc    44  b #+0x14 (addr 0xffff8bdebae0)
0xffff8bdebad0    48  ldr x0, [jssp], #8
0xffff8bdebad4    52  ldr x3, [jssp], #8
0xffff8bdebad8    56  ldr x16, pc+48 (addr 0x0000ffff8bdebb08)    ;; code: BUILTIN
0xffff8bdebadc    60  br x16
0xffff8bdebae0    64  add jssp, jssp, #0x10 (16)
0xffff8bdebae4    68  mov x1, x3
0xffff8bdebae8    72  ldr x16, pc+40 (addr 0x0000ffff8bdebb10)    ;; code: HANDLER, LoadFieldStub, minor: 2052
0xffff8bdebaec    76  br x16
0xffff8bdebaf0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdebaf4    84  d63f03e0       constant
0xffff8bdebaf8    88  327d1d11       constant
0xffff8bdebafc    92  00000000       constant
0xffff8bdebb00    96  327d1d41       constant
0xffff8bdebb04   100  00000000       constant
0xffff8bdebb08   104  8bd222e0       constant
0xffff8bdebb0c   108  0000ffff       constant
0xffff8bdebb10   112  8bd78da0       constant
0xffff8bdebb14   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdebab0  embedded object  (0x327d1d11 Cell for 0)
0xffff8bdebac0  embedded object  (0x327d1d41 WeakCell for 0x327acc41 <an Object with map 0x5f51bf39>)
0xffff8bdebad8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdebae8  code target (HANDLER)  (0xffff8bd78da0)
0xffff8bdebaf0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _maxListeners
compiler = unknown
Instructions (size = 120)
0xffff8bdebca0     0  sub csp, jssp, #0x8 (8)
0xffff8bdebca4     4  str x3, [jssp, #-8]!
0xffff8bdebca8     8  sub csp, jssp, #0x8 (8)
0xffff8bdebcac    12  str x0, [jssp, #-8]!
0xffff8bdebcb0    16  ldr x0, pc+72 (addr 0x0000ffff8bdebcf8)    ;; object: 0x327d1d11 Cell for 0
0xffff8bdebcb4    20  ldur x0, [x0, #7]
0xffff8bdebcb8    24  cmp x0, #0x0 (0)
0xffff8bdebcbc    28  b.ne #+0x14 (addr 0xffff8bdebcd0)
0xffff8bdebcc0    32  ldr x3, pc+64 (addr 0x0000ffff8bdebd00)    ;; object: 0x327d1e89 WeakCell for 0x327acc41 <an Object with map 0x5f51bf39>
0xffff8bdebcc4    36  ldur x3, [x3, #7]
0xffff8bdebcc8    40  tbz w3, #0, #+0x8 (addr 0xffff8bdebcd0)
0xffff8bdebccc    44  b #+0x14 (addr 0xffff8bdebce0)
0xffff8bdebcd0    48  ldr x0, [jssp], #8
0xffff8bdebcd4    52  ldr x3, [jssp], #8
0xffff8bdebcd8    56  ldr x16, pc+48 (addr 0x0000ffff8bdebd08)    ;; code: BUILTIN
0xffff8bdebcdc    60  br x16
0xffff8bdebce0    64  add jssp, jssp, #0x10 (16)
0xffff8bdebce4    68  mov x1, x3
0xffff8bdebce8    72  ldr x16, pc+40 (addr 0x0000ffff8bdebd10)    ;; code: HANDLER, LoadFieldStub, minor: 2053
0xffff8bdebcec    76  br x16
0xffff8bdebcf0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdebcf4    84  d63f03e0       constant
0xffff8bdebcf8    88  327d1d11       constant
0xffff8bdebcfc    92  00000000       constant
0xffff8bdebd00    96  327d1e89       constant
0xffff8bdebd04   100  00000000       constant
0xffff8bdebd08   104  8bd222e0       constant
0xffff8bdebd0c   108  0000ffff       constant
0xffff8bdebd10   112  8bd78e20       constant
0xffff8bdebd14   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdebcb0  embedded object  (0x327d1d11 Cell for 0)
0xffff8bdebcc0  embedded object  (0x327d1e89 WeakCell for 0x327acc41 <an Object with map 0x5f51bf39>)
0xffff8bdebcd8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdebce8  code target (HANDLER)  (0xffff8bd78e20)
0xffff8bdebcf0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _maxListeners
compiler = unknown
Instructions (size = 152)
0xffff8bdebd80     0  sub csp, jssp, #0x8 (8)
0xffff8bdebd84     4  str x3, [jssp, #-8]!
0xffff8bdebd88     8  sub csp, jssp, #0x8 (8)
0xffff8bdebd8c    12  str x4, [jssp, #-8]!
0xffff8bdebd90    16  ldr x3, pc+88 (addr 0x0000ffff8bdebde8)    ;; object: 0x327d1d11 Cell for 0
0xffff8bdebd94    20  ldur x3, [x3, #7]
0xffff8bdebd98    24  cmp x3, #0x0 (0)
0xffff8bdebd9c    28  b.ne #+0x30 (addr 0xffff8bdebdcc)
0xffff8bdebda0    32  tbz w0, #0, #+0x2c (addr 0xffff8bdebdcc)
0xffff8bdebda4    36  ldr x5, pc+76 (addr 0x0000ffff8bdebdf0)    ;; object: 0x327d1ec1 WeakCell for 0x5f538bd9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdebda8    40  ldur x5, [x5, #7]
0xffff8bdebdac    44  tbz w5, #0, #+0x20 (addr 0xffff8bdebdcc)
0xffff8bdebdb0    48  ldursw x4, [x5, #15]
0xffff8bdebdb4    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdebdcc)
0xffff8bdebdb8    56  ldr x4, [jssp], #8
0xffff8bdebdbc    60  ldr x3, [jssp], #8
0xffff8bdebdc0    64  ldr x2, pc+56 (addr 0x0000ffff8bdebdf8)    ;; object: 0x26cc32b1 <String[13]: _maxListeners>
0xffff8bdebdc4    68  ldr x16, pc+60 (addr 0x0000ffff8bdebe00)    ;; code: HANDLER, StoreTransitionStub, minor: 198664
0xffff8bdebdc8    72  br x16
0xffff8bdebdcc    76  ldr x2, pc+60 (addr 0x0000ffff8bdebe08)    ;; object: 0x26cc32b1 <String[13]: _maxListeners>
0xffff8bdebdd0    80  ldr x4, [jssp], #8
0xffff8bdebdd4    84  ldr x3, [jssp], #8
0xffff8bdebdd8    88  ldr x16, pc+56 (addr 0x0000ffff8bdebe10)    ;; code: BUILTIN
0xffff8bdebddc    92  br x16
0xffff8bdebde0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdebde4   100  d63f03e0       constant
0xffff8bdebde8   104  327d1d11       constant
0xffff8bdebdec   108  00000000       constant
0xffff8bdebdf0   112  327d1ec1       constant
0xffff8bdebdf4   116  00000000       constant
0xffff8bdebdf8   120  26cc32b1       constant
0xffff8bdebdfc   124  00000000       constant
0xffff8bdebe00   128  8bde5d20       constant
0xffff8bdebe04   132  0000ffff       constant
0xffff8bdebe08   136  26cc32b1       constant
0xffff8bdebe0c   140  00000000       constant
0xffff8bdebe10   144  8bd22420       constant
0xffff8bdebe14   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdebd90  embedded object  (0x327d1d11 Cell for 0)
0xffff8bdebda4  embedded object  (0x327d1ec1 WeakCell for 0x5f538bd9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdebdc0  embedded object  (0x26cc32b1 <String[13]: _maxListeners>)
0xffff8bdebdc4  code target (HANDLER)  (0xffff8bde5d20)
0xffff8bdebdcc  embedded object  (0x26cc32b1 <String[13]: _maxListeners>)
0xffff8bdebdd8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdebde0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 96)
0xffff8bdebe80     0  sub csp, jssp, #0x8 (8)
0xffff8bdebe84     4  str x3, [jssp, #-8]!
0xffff8bdebe88     8  sub csp, jssp, #0x8 (8)
0xffff8bdebe8c    12  str x0, [jssp, #-8]!
0xffff8bdebe90    16  ldr x0, pc+56 (addr 0x0000ffff8bdebec8)    ;; object: 0x327d1f99 Cell for 0
0xffff8bdebe94    20  ldur x0, [x0, #7]
0xffff8bdebe98    24  cmp x0, #0x0 (0)
0xffff8bdebe9c    28  b.ne #+0x14 (addr 0xffff8bdebeb0)
0xffff8bdebea0    32  add jssp, jssp, #0x10 (16)
0xffff8bdebea4    36  ldr x0, pc+44 (addr 0x0000ffff8bdebed0)    ;; object: 0x26c04241 <undefined>
0xffff8bdebea8    40  ret
0xffff8bdebeac    44  b #+0x14 (addr 0xffff8bdebec0)
0xffff8bdebeb0    48  ldr x0, [jssp], #8
0xffff8bdebeb4    52  ldr x3, [jssp], #8
0xffff8bdebeb8    56  ldr x16, pc+32 (addr 0x0000ffff8bdebed8)    ;; code: BUILTIN
0xffff8bdebebc    60  br x16
0xffff8bdebec0    64  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bdebec4    68  d63f03e0       constant
0xffff8bdebec8    72  327d1f99       constant
0xffff8bdebecc    76  00000000       constant
0xffff8bdebed0    80  26c04241       constant
0xffff8bdebed4    84  00000000       constant
0xffff8bdebed8    88  8bd222e0       constant
0xffff8bdebedc    92  0000ffff       constant


RelocInfo (size = 9)
0xffff8bdebe90  embedded object  (0x327d1f99 Cell for 0)
0xffff8bdebea4  embedded object  (0x26c04241 <undefined>)
0xffff8bdebeb8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdebec0  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = end
compiler = unknown
Instructions (size = 168)
0xffff8bdebf40     0  sub csp, jssp, #0x8 (8)
0xffff8bdebf44     4  str x3, [jssp, #-8]!
0xffff8bdebf48     8  sub csp, jssp, #0x8 (8)
0xffff8bdebf4c    12  str x4, [jssp, #-8]!
0xffff8bdebf50    16  ldr x3, pc+104 (addr 0x0000ffff8bdebfb8)    ;; object: 0x327d1f99 Cell for 0
0xffff8bdebf54    20  ldur x3, [x3, #7]
0xffff8bdebf58    24  cmp x3, #0x0 (0)
0xffff8bdebf5c    28  b.ne #+0x3c (addr 0xffff8bdebf98)
0xffff8bdebf60    32  ldr x5, pc+96 (addr 0x0000ffff8bdebfc0)    ;; object: 0x327d1fe1 WeakCell for 0x5f538d39 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdebf64    36  ldur x5, [x5, #7]
0xffff8bdebf68    40  tbz w5, #0, #+0x30 (addr 0xffff8bdebf98)
0xffff8bdebf6c    44  ldursw x4, [x5, #15]
0xffff8bdebf70    48  tbnz w4, #23, #+0x28 (addr 0xffff8bdebf98)
0xffff8bdebf74    52  ldur x4, [x5, #47]
0xffff8bdebf78    56  ldur x4, [x4, #47]
0xffff8bdebf7c    60  cmp x0, x4
0xffff8bdebf80    64  b.ne #+0x18 (addr 0xffff8bdebf98)
0xffff8bdebf84    68  ldr x4, [jssp], #8
0xffff8bdebf88    72  ldr x3, [jssp], #8
0xffff8bdebf8c    76  ldr x2, pc+60 (addr 0x0000ffff8bdebfc8)    ;; object: 0x26c93989 <String[3]: end>
0xffff8bdebf90    80  ldr x16, pc+64 (addr 0x0000ffff8bdebfd0)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff8bdebf94    84  br x16
0xffff8bdebf98    88  ldr x2, pc+64 (addr 0x0000ffff8bdebfd8)    ;; object: 0x26c93989 <String[3]: end>
0xffff8bdebf9c    92  ldr x4, [jssp], #8
0xffff8bdebfa0    96  ldr x3, [jssp], #8
0xffff8bdebfa4   100  ldr x16, pc+60 (addr 0x0000ffff8bdebfe0)    ;; code: BUILTIN
0xffff8bdebfa8   104  br x16
0xffff8bdebfac   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdebfb0   112  d63f03e0       constant
0xffff8bdebfb4   116  d503201f       constant
0xffff8bdebfb8   120  327d1f99       constant
0xffff8bdebfbc   124  00000000       constant
0xffff8bdebfc0   128  327d1fe1       constant
0xffff8bdebfc4   132  00000000       constant
0xffff8bdebfc8   136  26c93989       constant
0xffff8bdebfcc   140  00000000       constant
0xffff8bdebfd0   144  8bd3cea0       constant
0xffff8bdebfd4   148  0000ffff       constant
0xffff8bdebfd8   152  26c93989       constant
0xffff8bdebfdc   156  00000000       constant
0xffff8bdebfe0   160  8bd22420       constant
0xffff8bdebfe4   164  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdebf50  embedded object  (0x327d1f99 Cell for 0)
0xffff8bdebf60  embedded object  (0x327d1fe1 WeakCell for 0x5f538d39 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdebf8c  embedded object  (0x26c93989 <String[3]: end>)
0xffff8bdebf90  code target (HANDLER)  (0xffff8bd3cea0)
0xffff8bdebf98  embedded object  (0x26c93989 <String[3]: end>)
0xffff8bdebfa4  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdebfac  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff8bdec060     0  mov x5, x0
0xffff8bdec064     4  tbnz w5, #0, #+0xc (addr 0xffff8bdec070)
0xffff8bdec068     8  stur x5, [x1, #55]
0xffff8bdec06c    12  ret
0xffff8bdec070    16  movz x16, #0x0
0xffff8bdec074    20  sub csp, jssp, #0x10 (16)
0xffff8bdec078    24  stp fp, lr, [jssp, #-16]!
0xffff8bdec07c    28  bl #+0x4 (addr 0xffff8bdec080)
0xffff8bdec080    32  movz x17, #0xa00000000
0xffff8bdec084    36  sub csp, jssp, #0x10 (16)
0xffff8bdec088    40  stp x17, cp, [jssp, #-16]!
0xffff8bdec08c    44  add fp, jssp, #0x10 (16)
0xffff8bdec090    48  ldr x17, pc+24 (addr 0x0000ffff8bdec0a8)    ;; lazy deoptimization bailout 0
0xffff8bdec094    52  add x17, x17, x16
0xffff8bdec098    56  br x17
0xffff8bdec09c    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdec0a0    64  d63f03e0       constant
0xffff8bdec0a4    68  d503201f       constant
0xffff8bdec0a8    72  8bb06000       constant
0xffff8bdec0ac    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff8bdec090  runtime entry
0xffff8bdec09c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff8bdec060     0  mov x5, x0
0xffff8bdec064     4  tbnz w5, #0, #+0xc (addr 0xffff8bdec070)
0xffff8bdec068     8  stur x5, [x1, #55]
0xffff8bdec06c    12  ret
0xffff8bdec070    16  movz x16, #0x0
0xffff8bdec074    20  sub csp, jssp, #0x10 (16)
0xffff8bdec078    24  stp fp, lr, [jssp, #-16]!
0xffff8bdec07c    28  bl #+0x4 (addr 0xffff8bdec080)
0xffff8bdec080    32  movz x17, #0xa00000000
0xffff8bdec084    36  sub csp, jssp, #0x10 (16)
0xffff8bdec088    40  stp x17, cp, [jssp, #-16]!
0xffff8bdec08c    44  add fp, jssp, #0x10 (16)
0xffff8bdec090    48  ldr x17, pc+24 (addr 0x0000ffff8bdec0a8)    ;; lazy deoptimization bailout 0
0xffff8bdec094    52  add x17, x17, x16
0xffff8bdec098    56  br x17
0xffff8bdec09c    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdec0a0    64  d63f03e0       constant
0xffff8bdec0a4    68  d503201f       constant
0xffff8bdec0a8    72  8bb06000       constant
0xffff8bdec0ac    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff8bdec090  runtime entry
0xffff8bdec09c  constant pool (size 20)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff8bdf1860     0  tbz w0, #0, #+0x50 (addr 0xffff8bdf18b0)
0xffff8bdf1864     4  mov x2, x0
0xffff8bdf1868     8  stur x2, [x1, #39]
0xffff8bdf186c    12  add x3, x1, #0x27 (39)
0xffff8bdf1870    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf1874    20  ldr x2, [x2, #8]
0xffff8bdf1878    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf189c)
0xffff8bdf187c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf1880    32  ldr x2, [x2, #8]
0xffff8bdf1884    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf189c)
0xffff8bdf1888    40  sub csp, jssp, #0x8 (8)
0xffff8bdf188c    44  str lr, [jssp, #-8]!
0xffff8bdf1890    48  ldr x16, pc+24 (addr 0x0000ffff8bdf18a8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf1894    52  blr x16
0xffff8bdf1898    56  ldr lr, [jssp], #8
0xffff8bdf189c    60  ret
0xffff8bdf18a0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf18a4    68  d63f03e0       constant
0xffff8bdf18a8    72  8bd170c0       constant
0xffff8bdf18ac    76  0000ffff       constant
0xffff8bdf18b0    80  movz x16, #0x0
0xffff8bdf18b4    84  sub csp, jssp, #0x10 (16)
0xffff8bdf18b8    88  stp fp, lr, [jssp, #-16]!
0xffff8bdf18bc    92  bl #+0x4 (addr 0xffff8bdf18c0)
0xffff8bdf18c0    96  movz x17, #0xa00000000
0xffff8bdf18c4   100  sub csp, jssp, #0x10 (16)
0xffff8bdf18c8   104  stp x17, cp, [jssp, #-16]!
0xffff8bdf18cc   108  add fp, jssp, #0x10 (16)
0xffff8bdf18d0   112  ldr x17, pc+24 (addr 0x0000ffff8bdf18e8)    ;; lazy deoptimization bailout 0
0xffff8bdf18d4   116  add x17, x17, x16
0xffff8bdf18d8   120  br x17
0xffff8bdf18dc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf18e0   128  d63f03e0       constant
0xffff8bdf18e4   132  d503201f       constant
0xffff8bdf18e8   136  8bb06000       constant
0xffff8bdf18ec   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf1890  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf18a0  constant pool (size 16)
0xffff8bdf18d0  runtime entry
0xffff8bdf18dc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff8bdf1860     0  tbz w0, #0, #+0x50 (addr 0xffff8bdf18b0)
0xffff8bdf1864     4  mov x2, x0
0xffff8bdf1868     8  stur x2, [x1, #39]
0xffff8bdf186c    12  add x3, x1, #0x27 (39)
0xffff8bdf1870    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf1874    20  ldr x2, [x2, #8]
0xffff8bdf1878    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf189c)
0xffff8bdf187c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf1880    32  ldr x2, [x2, #8]
0xffff8bdf1884    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf189c)
0xffff8bdf1888    40  sub csp, jssp, #0x8 (8)
0xffff8bdf188c    44  str lr, [jssp, #-8]!
0xffff8bdf1890    48  ldr x16, pc+24 (addr 0x0000ffff8bdf18a8)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf1894    52  blr x16
0xffff8bdf1898    56  ldr lr, [jssp], #8
0xffff8bdf189c    60  ret
0xffff8bdf18a0    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf18a4    68  d63f03e0       constant
0xffff8bdf18a8    72  8bd170c0       constant
0xffff8bdf18ac    76  0000ffff       constant
0xffff8bdf18b0    80  movz x16, #0x0
0xffff8bdf18b4    84  sub csp, jssp, #0x10 (16)
0xffff8bdf18b8    88  stp fp, lr, [jssp, #-16]!
0xffff8bdf18bc    92  bl #+0x4 (addr 0xffff8bdf18c0)
0xffff8bdf18c0    96  movz x17, #0xa00000000
0xffff8bdf18c4   100  sub csp, jssp, #0x10 (16)
0xffff8bdf18c8   104  stp x17, cp, [jssp, #-16]!
0xffff8bdf18cc   108  add fp, jssp, #0x10 (16)
0xffff8bdf18d0   112  ldr x17, pc+24 (addr 0x0000ffff8bdf18e8)    ;; lazy deoptimization bailout 0
0xffff8bdf18d4   116  add x17, x17, x16
0xffff8bdf18d8   120  br x17
0xffff8bdf18dc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf18e0   128  d63f03e0       constant
0xffff8bdf18e4   132  d503201f       constant
0xffff8bdf18e8   136  8bb06000       constant
0xffff8bdf18ec   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf1890  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf18a0  constant pool (size 16)
0xffff8bdf18d0  runtime entry
0xffff8bdf18dc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = prototype
compiler = unknown
Instructions (size = 176)
0xffff8bdf1960     0  sub csp, jssp, #0x8 (8)
0xffff8bdf1964     4  str x3, [jssp, #-8]!
0xffff8bdf1968     8  sub csp, jssp, #0x8 (8)
0xffff8bdf196c    12  str x4, [jssp, #-8]!
0xffff8bdf1970    16  ldr x3, pc+104 (addr 0x0000ffff8bdf19d8)    ;; object: 0x327e6931 Cell for 0
0xffff8bdf1974    20  ldur x3, [x3, #7]
0xffff8bdf1978    24  cmp x3, #0x0 (0)
0xffff8bdf197c    28  b.ne #+0x8 (addr 0xffff8bdf1984)
0xffff8bdf1980    32  b #+0x18 (addr 0xffff8bdf1998)
0xffff8bdf1984    36  ldr x2, pc+92 (addr 0x0000ffff8bdf19e0)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bdf1988    40  ldr x4, [jssp], #8
0xffff8bdf198c    44  ldr x3, [jssp], #8
0xffff8bdf1990    48  ldr x16, pc+88 (addr 0x0000ffff8bdf19e8)    ;; code: BUILTIN
0xffff8bdf1994    52  br x16
0xffff8bdf1998    56  add jssp, jssp, #0x10 (16)
0xffff8bdf199c    60  ldr x3, pc+84 (addr 0x0000ffff8bdf19f0)    ;; object: 0x26c404a9 <AccessorInfo>
0xffff8bdf19a0    64  ldr x4, pc+88 (addr 0x0000ffff8bdf19f8)    ;; object: 0x26c05371 <String[9]: prototype>
0xffff8bdf19a4    68  sub csp, jssp, #0x28 (40)
0xffff8bdf19a8    72  stp x4, x3, [jssp, #-32]!
0xffff8bdf19ac    76  stp x1, x1, [jssp, #16]
0xffff8bdf19b0    80  str x0, [jssp, #-8]!
0xffff8bdf19b4    84  movz x16, #0x100000000
0xffff8bdf19b8    88  sub csp, jssp, #0x8 (8)
0xffff8bdf19bc    92  str x16, [jssp, #-8]!
0xffff8bdf19c0    96  movz x0, #0x6
0xffff8bdf19c4   100  ldr x1, pc+60 (addr 0x0000ffff8bdf1a00)    ;; external reference (Runtime::StoreCallbackProperty)
0xffff8bdf19c8   104  ldr x16, pc+64 (addr 0x0000ffff8bdf1a08)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdf19cc   108  br x16
0xffff8bdf19d0   112  580001ff       constant pool begin (num_const = 15)    ;; constant pool
0xffff8bdf19d4   116  d63f03e0       constant
0xffff8bdf19d8   120  327e6931       constant
0xffff8bdf19dc   124  00000000       constant
0xffff8bdf19e0   128  26c05371       constant
0xffff8bdf19e4   132  00000000       constant
0xffff8bdf19e8   136  8bd22420       constant
0xffff8bdf19ec   140  0000ffff       constant
0xffff8bdf19f0   144  26c404a9       constant
0xffff8bdf19f4   148  00000000       constant
0xffff8bdf19f8   152  26c05371       constant
0xffff8bdf19fc   156  00000000       constant
0xffff8bdf1a00   160  00c8b560       constant
0xffff8bdf1a04   164  00000000       constant
0xffff8bdf1a08   168  8bd06060       constant
0xffff8bdf1a0c   172  0000ffff       constant


RelocInfo (size = 14)
0xffff8bdf1970  embedded object  (0x327e6931 Cell for 0)
0xffff8bdf1984  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bdf1990  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf199c  embedded object  (0x26c404a9 <AccessorInfo>)
0xffff8bdf19a0  embedded object  (0x26c05371 <String[9]: prototype>)
0xffff8bdf19c4  external reference (Runtime::StoreCallbackProperty)  (0xc8b560)
0xffff8bdf19c8  code target (STUB)  (0xffff8bd06060)
0xffff8bdf19d0  constant pool (size 64)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf5a00     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf5a90)
0xffff8bdf5a04     4  mov x2, x0
0xffff8bdf5a08     8  stur x2, [x1, #79]
0xffff8bdf5a0c    12  add x3, x1, #0x4f (79)
0xffff8bdf5a10    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf5a14    20  ldr x2, [x2, #8]
0xffff8bdf5a18    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf5a3c)
0xffff8bdf5a1c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf5a20    32  ldr x2, [x2, #8]
0xffff8bdf5a24    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf5a3c)
0xffff8bdf5a28    40  sub csp, jssp, #0x8 (8)
0xffff8bdf5a2c    44  str lr, [jssp, #-8]!
0xffff8bdf5a30    48  ldr x16, pc+80 (addr 0x0000ffff8bdf5a80)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf5a34    52  blr x16
0xffff8bdf5a38    56  ldr lr, [jssp], #8
0xffff8bdf5a3c    60  stur x5, [x1, #-1]
0xffff8bdf5a40    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf5a74)
0xffff8bdf5a44    68  sub x2, x1, #0x1 (1)
0xffff8bdf5a48    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf5a4c    76  ldr x5, [x5, #8]
0xffff8bdf5a50    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf5a74)
0xffff8bdf5a54    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf5a58    88  ldr x5, [x5, #8]
0xffff8bdf5a5c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf5a74)
0xffff8bdf5a60    96  sub csp, jssp, #0x8 (8)
0xffff8bdf5a64   100  str lr, [jssp, #-8]!
0xffff8bdf5a68   104  ldr x16, pc+32 (addr 0x0000ffff8bdf5a88)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf5a6c   108  blr x16
0xffff8bdf5a70   112  ldr lr, [jssp], #8
0xffff8bdf5a74   116  ret
0xffff8bdf5a78   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf5a7c   124  d63f03e0       constant
0xffff8bdf5a80   128  8bd170c0       constant
0xffff8bdf5a84   132  0000ffff       constant
0xffff8bdf5a88   136  8bd38080       constant
0xffff8bdf5a8c   140  0000ffff       constant
0xffff8bdf5a90   144  movz x16, #0x0
0xffff8bdf5a94   148  sub csp, jssp, #0x10 (16)
0xffff8bdf5a98   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf5a9c   156  bl #+0x4 (addr 0xffff8bdf5aa0)
0xffff8bdf5aa0   160  movz x17, #0xa00000000
0xffff8bdf5aa4   164  sub csp, jssp, #0x10 (16)
0xffff8bdf5aa8   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf5aac   172  add fp, jssp, #0x10 (16)
0xffff8bdf5ab0   176  ldr x17, pc+24 (addr 0x0000ffff8bdf5ac8)    ;; lazy deoptimization bailout 0
0xffff8bdf5ab4   180  add x17, x17, x16
0xffff8bdf5ab8   184  br x17
0xffff8bdf5abc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf5ac0   192  d63f03e0       constant
0xffff8bdf5ac4   196  d503201f       constant
0xffff8bdf5ac8   200  8bb06000       constant
0xffff8bdf5acc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf5a30  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf5a68  code target (STUB)  (0xffff8bd38080)
0xffff8bdf5a78  constant pool (size 24)
0xffff8bdf5ab0  runtime entry
0xffff8bdf5abc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf5a00     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf5a90)
0xffff8bdf5a04     4  mov x2, x0
0xffff8bdf5a08     8  stur x2, [x1, #79]
0xffff8bdf5a0c    12  add x3, x1, #0x4f (79)
0xffff8bdf5a10    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf5a14    20  ldr x2, [x2, #8]
0xffff8bdf5a18    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf5a3c)
0xffff8bdf5a1c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf5a20    32  ldr x2, [x2, #8]
0xffff8bdf5a24    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf5a3c)
0xffff8bdf5a28    40  sub csp, jssp, #0x8 (8)
0xffff8bdf5a2c    44  str lr, [jssp, #-8]!
0xffff8bdf5a30    48  ldr x16, pc+80 (addr 0x0000ffff8bdf5a80)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf5a34    52  blr x16
0xffff8bdf5a38    56  ldr lr, [jssp], #8
0xffff8bdf5a3c    60  stur x5, [x1, #-1]
0xffff8bdf5a40    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf5a74)
0xffff8bdf5a44    68  sub x2, x1, #0x1 (1)
0xffff8bdf5a48    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf5a4c    76  ldr x5, [x5, #8]
0xffff8bdf5a50    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf5a74)
0xffff8bdf5a54    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf5a58    88  ldr x5, [x5, #8]
0xffff8bdf5a5c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf5a74)
0xffff8bdf5a60    96  sub csp, jssp, #0x8 (8)
0xffff8bdf5a64   100  str lr, [jssp, #-8]!
0xffff8bdf5a68   104  ldr x16, pc+32 (addr 0x0000ffff8bdf5a88)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf5a6c   108  blr x16
0xffff8bdf5a70   112  ldr lr, [jssp], #8
0xffff8bdf5a74   116  ret
0xffff8bdf5a78   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf5a7c   124  d63f03e0       constant
0xffff8bdf5a80   128  8bd170c0       constant
0xffff8bdf5a84   132  0000ffff       constant
0xffff8bdf5a88   136  8bd38080       constant
0xffff8bdf5a8c   140  0000ffff       constant
0xffff8bdf5a90   144  movz x16, #0x0
0xffff8bdf5a94   148  sub csp, jssp, #0x10 (16)
0xffff8bdf5a98   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf5a9c   156  bl #+0x4 (addr 0xffff8bdf5aa0)
0xffff8bdf5aa0   160  movz x17, #0xa00000000
0xffff8bdf5aa4   164  sub csp, jssp, #0x10 (16)
0xffff8bdf5aa8   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf5aac   172  add fp, jssp, #0x10 (16)
0xffff8bdf5ab0   176  ldr x17, pc+24 (addr 0x0000ffff8bdf5ac8)    ;; lazy deoptimization bailout 0
0xffff8bdf5ab4   180  add x17, x17, x16
0xffff8bdf5ab8   184  br x17
0xffff8bdf5abc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf5ac0   192  d63f03e0       constant
0xffff8bdf5ac4   196  d503201f       constant
0xffff8bdf5ac8   200  8bb06000       constant
0xffff8bdf5acc   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf5a30  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf5a68  code target (STUB)  (0xffff8bd38080)
0xffff8bdf5a78  constant pool (size 24)
0xffff8bdf5ab0  runtime entry
0xffff8bdf5abc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = domain
compiler = unknown
Instructions (size = 152)
0xffff8bdf5b40     0  sub csp, jssp, #0x8 (8)
0xffff8bdf5b44     4  str x3, [jssp, #-8]!
0xffff8bdf5b48     8  sub csp, jssp, #0x8 (8)
0xffff8bdf5b4c    12  str x4, [jssp, #-8]!
0xffff8bdf5b50    16  ldr x3, pc+88 (addr 0x0000ffff8bdf5ba8)    ;; object: 0x327e9019 Cell for 0
0xffff8bdf5b54    20  ldur x3, [x3, #7]
0xffff8bdf5b58    24  cmp x3, #0x0 (0)
0xffff8bdf5b5c    28  b.ne #+0x30 (addr 0xffff8bdf5b8c)
0xffff8bdf5b60    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf5b8c)
0xffff8bdf5b64    36  ldr x5, pc+76 (addr 0x0000ffff8bdf5bb0)    ;; object: 0x327e8f01 WeakCell for 0x5f540481 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf5b68    40  ldur x5, [x5, #7]
0xffff8bdf5b6c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf5b8c)
0xffff8bdf5b70    48  ldursw x4, [x5, #15]
0xffff8bdf5b74    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf5b8c)
0xffff8bdf5b78    56  ldr x4, [jssp], #8
0xffff8bdf5b7c    60  ldr x3, [jssp], #8
0xffff8bdf5b80    64  ldr x2, pc+56 (addr 0x0000ffff8bdf5bb8)    ;; object: 0x26cb2439 <String[6]: domain>
0xffff8bdf5b84    68  ldr x16, pc+60 (addr 0x0000ffff8bdf5bc0)    ;; code: HANDLER, StoreTransitionStub, minor: 198666
0xffff8bdf5b88    72  br x16
0xffff8bdf5b8c    76  ldr x2, pc+60 (addr 0x0000ffff8bdf5bc8)    ;; object: 0x26cb2439 <String[6]: domain>
0xffff8bdf5b90    80  ldr x4, [jssp], #8
0xffff8bdf5b94    84  ldr x3, [jssp], #8
0xffff8bdf5b98    88  ldr x16, pc+56 (addr 0x0000ffff8bdf5bd0)    ;; code: BUILTIN
0xffff8bdf5b9c    92  br x16
0xffff8bdf5ba0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf5ba4   100  d63f03e0       constant
0xffff8bdf5ba8   104  327e9019       constant
0xffff8bdf5bac   108  00000000       constant
0xffff8bdf5bb0   112  327e8f01       constant
0xffff8bdf5bb4   116  00000000       constant
0xffff8bdf5bb8   120  26cb2439       constant
0xffff8bdf5bbc   124  00000000       constant
0xffff8bdf5bc0   128  8bdf5a00       constant
0xffff8bdf5bc4   132  0000ffff       constant
0xffff8bdf5bc8   136  26cb2439       constant
0xffff8bdf5bcc   140  00000000       constant
0xffff8bdf5bd0   144  8bd22420       constant
0xffff8bdf5bd4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf5b50  embedded object  (0x327e9019 Cell for 0)
0xffff8bdf5b64  embedded object  (0x327e8f01 WeakCell for 0x5f540481 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf5b80  embedded object  (0x26cb2439 <String[6]: domain>)
0xffff8bdf5b84  code target (HANDLER)  (0xffff8bdf5a00)
0xffff8bdf5b8c  embedded object  (0x26cb2439 <String[6]: domain>)
0xffff8bdf5b98  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf5ba0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = _events
compiler = unknown
Instructions (size = 120)
0xffff8bdf5c40     0  sub csp, jssp, #0x8 (8)
0xffff8bdf5c44     4  str x3, [jssp, #-8]!
0xffff8bdf5c48     8  sub csp, jssp, #0x8 (8)
0xffff8bdf5c4c    12  str x0, [jssp, #-8]!
0xffff8bdf5c50    16  ldr x0, pc+72 (addr 0x0000ffff8bdf5c98)    ;; object: 0x327e9019 Cell for 0
0xffff8bdf5c54    20  ldur x0, [x0, #7]
0xffff8bdf5c58    24  cmp x0, #0x0 (0)
0xffff8bdf5c5c    28  b.ne #+0x14 (addr 0xffff8bdf5c70)
0xffff8bdf5c60    32  ldr x3, pc+64 (addr 0x0000ffff8bdf5ca0)    ;; object: 0x327e9101 WeakCell for 0x327acc41 <an Object with map 0x5f51bf39>
0xffff8bdf5c64    36  ldur x3, [x3, #7]
0xffff8bdf5c68    40  tbz w3, #0, #+0x8 (addr 0xffff8bdf5c70)
0xffff8bdf5c6c    44  b #+0x14 (addr 0xffff8bdf5c80)
0xffff8bdf5c70    48  ldr x0, [jssp], #8
0xffff8bdf5c74    52  ldr x3, [jssp], #8
0xffff8bdf5c78    56  ldr x16, pc+48 (addr 0x0000ffff8bdf5ca8)    ;; code: BUILTIN
0xffff8bdf5c7c    60  br x16
0xffff8bdf5c80    64  add jssp, jssp, #0x10 (16)
0xffff8bdf5c84    68  mov x1, x3
0xffff8bdf5c88    72  ldr x16, pc+40 (addr 0x0000ffff8bdf5cb0)    ;; code: HANDLER, LoadFieldStub, minor: 2052
0xffff8bdf5c8c    76  br x16
0xffff8bdf5c90    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdf5c94    84  d63f03e0       constant
0xffff8bdf5c98    88  327e9019       constant
0xffff8bdf5c9c    92  00000000       constant
0xffff8bdf5ca0    96  327e9101       constant
0xffff8bdf5ca4   100  00000000       constant
0xffff8bdf5ca8   104  8bd222e0       constant
0xffff8bdf5cac   108  0000ffff       constant
0xffff8bdf5cb0   112  8bd78da0       constant
0xffff8bdf5cb4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdf5c50  embedded object  (0x327e9019 Cell for 0)
0xffff8bdf5c60  embedded object  (0x327e9101 WeakCell for 0x327acc41 <an Object with map 0x5f51bf39>)
0xffff8bdf5c78  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdf5c88  code target (HANDLER)  (0xffff8bd78da0)
0xffff8bdf5c90  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf5d20     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf5db0)
0xffff8bdf5d24     4  mov x2, x0
0xffff8bdf5d28     8  stur x2, [x1, #87]
0xffff8bdf5d2c    12  add x3, x1, #0x57 (87)
0xffff8bdf5d30    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf5d34    20  ldr x2, [x2, #8]
0xffff8bdf5d38    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf5d5c)
0xffff8bdf5d3c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf5d40    32  ldr x2, [x2, #8]
0xffff8bdf5d44    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf5d5c)
0xffff8bdf5d48    40  sub csp, jssp, #0x8 (8)
0xffff8bdf5d4c    44  str lr, [jssp, #-8]!
0xffff8bdf5d50    48  ldr x16, pc+80 (addr 0x0000ffff8bdf5da0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf5d54    52  blr x16
0xffff8bdf5d58    56  ldr lr, [jssp], #8
0xffff8bdf5d5c    60  stur x5, [x1, #-1]
0xffff8bdf5d60    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf5d94)
0xffff8bdf5d64    68  sub x2, x1, #0x1 (1)
0xffff8bdf5d68    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf5d6c    76  ldr x5, [x5, #8]
0xffff8bdf5d70    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf5d94)
0xffff8bdf5d74    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf5d78    88  ldr x5, [x5, #8]
0xffff8bdf5d7c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf5d94)
0xffff8bdf5d80    96  sub csp, jssp, #0x8 (8)
0xffff8bdf5d84   100  str lr, [jssp, #-8]!
0xffff8bdf5d88   104  ldr x16, pc+32 (addr 0x0000ffff8bdf5da8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf5d8c   108  blr x16
0xffff8bdf5d90   112  ldr lr, [jssp], #8
0xffff8bdf5d94   116  ret
0xffff8bdf5d98   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf5d9c   124  d63f03e0       constant
0xffff8bdf5da0   128  8bd170c0       constant
0xffff8bdf5da4   132  0000ffff       constant
0xffff8bdf5da8   136  8bd38080       constant
0xffff8bdf5dac   140  0000ffff       constant
0xffff8bdf5db0   144  movz x16, #0x0
0xffff8bdf5db4   148  sub csp, jssp, #0x10 (16)
0xffff8bdf5db8   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf5dbc   156  bl #+0x4 (addr 0xffff8bdf5dc0)
0xffff8bdf5dc0   160  movz x17, #0xa00000000
0xffff8bdf5dc4   164  sub csp, jssp, #0x10 (16)
0xffff8bdf5dc8   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf5dcc   172  add fp, jssp, #0x10 (16)
0xffff8bdf5dd0   176  ldr x17, pc+24 (addr 0x0000ffff8bdf5de8)    ;; lazy deoptimization bailout 0
0xffff8bdf5dd4   180  add x17, x17, x16
0xffff8bdf5dd8   184  br x17
0xffff8bdf5ddc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf5de0   192  d63f03e0       constant
0xffff8bdf5de4   196  d503201f       constant
0xffff8bdf5de8   200  8bb06000       constant
0xffff8bdf5dec   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf5d50  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf5d88  code target (STUB)  (0xffff8bd38080)
0xffff8bdf5d98  constant pool (size 24)
0xffff8bdf5dd0  runtime entry
0xffff8bdf5ddc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf5d20     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf5db0)
0xffff8bdf5d24     4  mov x2, x0
0xffff8bdf5d28     8  stur x2, [x1, #87]
0xffff8bdf5d2c    12  add x3, x1, #0x57 (87)
0xffff8bdf5d30    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf5d34    20  ldr x2, [x2, #8]
0xffff8bdf5d38    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf5d5c)
0xffff8bdf5d3c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf5d40    32  ldr x2, [x2, #8]
0xffff8bdf5d44    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf5d5c)
0xffff8bdf5d48    40  sub csp, jssp, #0x8 (8)
0xffff8bdf5d4c    44  str lr, [jssp, #-8]!
0xffff8bdf5d50    48  ldr x16, pc+80 (addr 0x0000ffff8bdf5da0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf5d54    52  blr x16
0xffff8bdf5d58    56  ldr lr, [jssp], #8
0xffff8bdf5d5c    60  stur x5, [x1, #-1]
0xffff8bdf5d60    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf5d94)
0xffff8bdf5d64    68  sub x2, x1, #0x1 (1)
0xffff8bdf5d68    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf5d6c    76  ldr x5, [x5, #8]
0xffff8bdf5d70    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf5d94)
0xffff8bdf5d74    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf5d78    88  ldr x5, [x5, #8]
0xffff8bdf5d7c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf5d94)
0xffff8bdf5d80    96  sub csp, jssp, #0x8 (8)
0xffff8bdf5d84   100  str lr, [jssp, #-8]!
0xffff8bdf5d88   104  ldr x16, pc+32 (addr 0x0000ffff8bdf5da8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf5d8c   108  blr x16
0xffff8bdf5d90   112  ldr lr, [jssp], #8
0xffff8bdf5d94   116  ret
0xffff8bdf5d98   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf5d9c   124  d63f03e0       constant
0xffff8bdf5da0   128  8bd170c0       constant
0xffff8bdf5da4   132  0000ffff       constant
0xffff8bdf5da8   136  8bd38080       constant
0xffff8bdf5dac   140  0000ffff       constant
0xffff8bdf5db0   144  movz x16, #0x0
0xffff8bdf5db4   148  sub csp, jssp, #0x10 (16)
0xffff8bdf5db8   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf5dbc   156  bl #+0x4 (addr 0xffff8bdf5dc0)
0xffff8bdf5dc0   160  movz x17, #0xa00000000
0xffff8bdf5dc4   164  sub csp, jssp, #0x10 (16)
0xffff8bdf5dc8   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf5dcc   172  add fp, jssp, #0x10 (16)
0xffff8bdf5dd0   176  ldr x17, pc+24 (addr 0x0000ffff8bdf5de8)    ;; lazy deoptimization bailout 0
0xffff8bdf5dd4   180  add x17, x17, x16
0xffff8bdf5dd8   184  br x17
0xffff8bdf5ddc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf5de0   192  d63f03e0       constant
0xffff8bdf5de4   196  d503201f       constant
0xffff8bdf5de8   200  8bb06000       constant
0xffff8bdf5dec   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf5d50  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf5d88  code target (STUB)  (0xffff8bd38080)
0xffff8bdf5d98  constant pool (size 24)
0xffff8bdf5dd0  runtime entry
0xffff8bdf5ddc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = _events
compiler = unknown
Instructions (size = 152)
0xffff8bdf5e60     0  sub csp, jssp, #0x8 (8)
0xffff8bdf5e64     4  str x3, [jssp, #-8]!
0xffff8bdf5e68     8  sub csp, jssp, #0x8 (8)
0xffff8bdf5e6c    12  str x4, [jssp, #-8]!
0xffff8bdf5e70    16  ldr x3, pc+88 (addr 0x0000ffff8bdf5ec8)    ;; object: 0x327e9019 Cell for 0
0xffff8bdf5e74    20  ldur x3, [x3, #7]
0xffff8bdf5e78    24  cmp x3, #0x0 (0)
0xffff8bdf5e7c    28  b.ne #+0x30 (addr 0xffff8bdf5eac)
0xffff8bdf5e80    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf5eac)
0xffff8bdf5e84    36  ldr x5, pc+76 (addr 0x0000ffff8bdf5ed0)    ;; object: 0x327e9151 WeakCell for 0x5f5404d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf5e88    40  ldur x5, [x5, #7]
0xffff8bdf5e8c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf5eac)
0xffff8bdf5e90    48  ldursw x4, [x5, #15]
0xffff8bdf5e94    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf5eac)
0xffff8bdf5e98    56  ldr x4, [jssp], #8
0xffff8bdf5e9c    60  ldr x3, [jssp], #8
0xffff8bdf5ea0    64  ldr x2, pc+56 (addr 0x0000ffff8bdf5ed8)    ;; object: 0x26cb2591 <String[7]: _events>
0xffff8bdf5ea4    68  ldr x16, pc+60 (addr 0x0000ffff8bdf5ee0)    ;; code: HANDLER, StoreTransitionStub, minor: 198667
0xffff8bdf5ea8    72  br x16
0xffff8bdf5eac    76  ldr x2, pc+60 (addr 0x0000ffff8bdf5ee8)    ;; object: 0x26cb2591 <String[7]: _events>
0xffff8bdf5eb0    80  ldr x4, [jssp], #8
0xffff8bdf5eb4    84  ldr x3, [jssp], #8
0xffff8bdf5eb8    88  ldr x16, pc+56 (addr 0x0000ffff8bdf5ef0)    ;; code: BUILTIN
0xffff8bdf5ebc    92  br x16
0xffff8bdf5ec0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf5ec4   100  d63f03e0       constant
0xffff8bdf5ec8   104  327e9019       constant
0xffff8bdf5ecc   108  00000000       constant
0xffff8bdf5ed0   112  327e9151       constant
0xffff8bdf5ed4   116  00000000       constant
0xffff8bdf5ed8   120  26cb2591       constant
0xffff8bdf5edc   124  00000000       constant
0xffff8bdf5ee0   128  8bdf5d20       constant
0xffff8bdf5ee4   132  0000ffff       constant
0xffff8bdf5ee8   136  26cb2591       constant
0xffff8bdf5eec   140  00000000       constant
0xffff8bdf5ef0   144  8bd22420       constant
0xffff8bdf5ef4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf5e70  embedded object  (0x327e9019 Cell for 0)
0xffff8bdf5e84  embedded object  (0x327e9151 WeakCell for 0x5f5404d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf5ea0  embedded object  (0x26cb2591 <String[7]: _events>)
0xffff8bdf5ea4  code target (HANDLER)  (0xffff8bdf5d20)
0xffff8bdf5eac  embedded object  (0x26cb2591 <String[7]: _events>)
0xffff8bdf5eb8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf5ec0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf5f60     0  mov x6, x0
0xffff8bdf5f64     4  tbnz w6, #0, #+0x54 (addr 0xffff8bdf5fb8)
0xffff8bdf5f68     8  stur x6, [x1, #95]
0xffff8bdf5f6c    12  stur x5, [x1, #-1]
0xffff8bdf5f70    16  tbz w5, #0, #+0x34 (addr 0xffff8bdf5fa4)
0xffff8bdf5f74    20  sub x2, x1, #0x1 (1)
0xffff8bdf5f78    24  and x5, x5, #0xfffffffffff00000
0xffff8bdf5f7c    28  ldr x5, [x5, #8]
0xffff8bdf5f80    32  tbz w5, #1, #+0x24 (addr 0xffff8bdf5fa4)
0xffff8bdf5f84    36  and x5, x1, #0xfffffffffff00000
0xffff8bdf5f88    40  ldr x5, [x5, #8]
0xffff8bdf5f8c    44  tbz w5, #2, #+0x18 (addr 0xffff8bdf5fa4)
0xffff8bdf5f90    48  sub csp, jssp, #0x8 (8)
0xffff8bdf5f94    52  str lr, [jssp, #-8]!
0xffff8bdf5f98    56  ldr x16, pc+24 (addr 0x0000ffff8bdf5fb0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf5f9c    60  blr x16
0xffff8bdf5fa0    64  ldr lr, [jssp], #8
0xffff8bdf5fa4    68  ret
0xffff8bdf5fa8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf5fac    76  d63f03e0       constant
0xffff8bdf5fb0    80  8bd38080       constant
0xffff8bdf5fb4    84  0000ffff       constant
0xffff8bdf5fb8    88  movz x16, #0x0
0xffff8bdf5fbc    92  sub csp, jssp, #0x10 (16)
0xffff8bdf5fc0    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf5fc4   100  bl #+0x4 (addr 0xffff8bdf5fc8)
0xffff8bdf5fc8   104  movz x17, #0xa00000000
0xffff8bdf5fcc   108  sub csp, jssp, #0x10 (16)
0xffff8bdf5fd0   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf5fd4   116  add fp, jssp, #0x10 (16)
0xffff8bdf5fd8   120  ldr x17, pc+24 (addr 0x0000ffff8bdf5ff0)    ;; lazy deoptimization bailout 0
0xffff8bdf5fdc   124  add x17, x17, x16
0xffff8bdf5fe0   128  br x17
0xffff8bdf5fe4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf5fe8   136  d63f03e0       constant
0xffff8bdf5fec   140  d503201f       constant
0xffff8bdf5ff0   144  8bb06000       constant
0xffff8bdf5ff4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf5f98  code target (STUB)  (0xffff8bd38080)
0xffff8bdf5fa8  constant pool (size 16)
0xffff8bdf5fd8  runtime entry
0xffff8bdf5fe4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf5f60     0  mov x6, x0
0xffff8bdf5f64     4  tbnz w6, #0, #+0x54 (addr 0xffff8bdf5fb8)
0xffff8bdf5f68     8  stur x6, [x1, #95]
0xffff8bdf5f6c    12  stur x5, [x1, #-1]
0xffff8bdf5f70    16  tbz w5, #0, #+0x34 (addr 0xffff8bdf5fa4)
0xffff8bdf5f74    20  sub x2, x1, #0x1 (1)
0xffff8bdf5f78    24  and x5, x5, #0xfffffffffff00000
0xffff8bdf5f7c    28  ldr x5, [x5, #8]
0xffff8bdf5f80    32  tbz w5, #1, #+0x24 (addr 0xffff8bdf5fa4)
0xffff8bdf5f84    36  and x5, x1, #0xfffffffffff00000
0xffff8bdf5f88    40  ldr x5, [x5, #8]
0xffff8bdf5f8c    44  tbz w5, #2, #+0x18 (addr 0xffff8bdf5fa4)
0xffff8bdf5f90    48  sub csp, jssp, #0x8 (8)
0xffff8bdf5f94    52  str lr, [jssp, #-8]!
0xffff8bdf5f98    56  ldr x16, pc+24 (addr 0x0000ffff8bdf5fb0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf5f9c    60  blr x16
0xffff8bdf5fa0    64  ldr lr, [jssp], #8
0xffff8bdf5fa4    68  ret
0xffff8bdf5fa8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf5fac    76  d63f03e0       constant
0xffff8bdf5fb0    80  8bd38080       constant
0xffff8bdf5fb4    84  0000ffff       constant
0xffff8bdf5fb8    88  movz x16, #0x0
0xffff8bdf5fbc    92  sub csp, jssp, #0x10 (16)
0xffff8bdf5fc0    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf5fc4   100  bl #+0x4 (addr 0xffff8bdf5fc8)
0xffff8bdf5fc8   104  movz x17, #0xa00000000
0xffff8bdf5fcc   108  sub csp, jssp, #0x10 (16)
0xffff8bdf5fd0   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf5fd4   116  add fp, jssp, #0x10 (16)
0xffff8bdf5fd8   120  ldr x17, pc+24 (addr 0x0000ffff8bdf5ff0)    ;; lazy deoptimization bailout 0
0xffff8bdf5fdc   124  add x17, x17, x16
0xffff8bdf5fe0   128  br x17
0xffff8bdf5fe4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf5fe8   136  d63f03e0       constant
0xffff8bdf5fec   140  d503201f       constant
0xffff8bdf5ff0   144  8bb06000       constant
0xffff8bdf5ff4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf5f98  code target (STUB)  (0xffff8bd38080)
0xffff8bdf5fa8  constant pool (size 16)
0xffff8bdf5fd8  runtime entry
0xffff8bdf5fe4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = _eventsCount
compiler = unknown
Instructions (size = 152)
0xffff8bdf6060     0  sub csp, jssp, #0x8 (8)
0xffff8bdf6064     4  str x3, [jssp, #-8]!
0xffff8bdf6068     8  sub csp, jssp, #0x8 (8)
0xffff8bdf606c    12  str x4, [jssp, #-8]!
0xffff8bdf6070    16  ldr x3, pc+88 (addr 0x0000ffff8bdf60c8)    ;; object: 0x327e9019 Cell for 0
0xffff8bdf6074    20  ldur x3, [x3, #7]
0xffff8bdf6078    24  cmp x3, #0x0 (0)
0xffff8bdf607c    28  b.ne #+0x2c (addr 0xffff8bdf60a8)
0xffff8bdf6080    32  ldr x5, pc+80 (addr 0x0000ffff8bdf60d0)    ;; object: 0x327e9241 WeakCell for 0x5f540531 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf6084    36  ldur x5, [x5, #7]
0xffff8bdf6088    40  tbz w5, #0, #+0x20 (addr 0xffff8bdf60a8)
0xffff8bdf608c    44  ldursw x4, [x5, #15]
0xffff8bdf6090    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdf60a8)
0xffff8bdf6094    52  ldr x4, [jssp], #8
0xffff8bdf6098    56  ldr x3, [jssp], #8
0xffff8bdf609c    60  ldr x2, pc+60 (addr 0x0000ffff8bdf60d8)    ;; object: 0x26cb93b9 <String[12]: _eventsCount>
0xffff8bdf60a0    64  ldr x16, pc+64 (addr 0x0000ffff8bdf60e0)    ;; code: HANDLER, StoreTransitionStub, minor: 174092
0xffff8bdf60a4    68  br x16
0xffff8bdf60a8    72  ldr x2, pc+64 (addr 0x0000ffff8bdf60e8)    ;; object: 0x26cb93b9 <String[12]: _eventsCount>
0xffff8bdf60ac    76  ldr x4, [jssp], #8
0xffff8bdf60b0    80  ldr x3, [jssp], #8
0xffff8bdf60b4    84  ldr x16, pc+60 (addr 0x0000ffff8bdf60f0)    ;; code: BUILTIN
0xffff8bdf60b8    88  br x16
0xffff8bdf60bc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdf60c0    96  d63f03e0       constant
0xffff8bdf60c4   100  d503201f       constant
0xffff8bdf60c8   104  327e9019       constant
0xffff8bdf60cc   108  00000000       constant
0xffff8bdf60d0   112  327e9241       constant
0xffff8bdf60d4   116  00000000       constant
0xffff8bdf60d8   120  26cb93b9       constant
0xffff8bdf60dc   124  00000000       constant
0xffff8bdf60e0   128  8bdf5f60       constant
0xffff8bdf60e4   132  0000ffff       constant
0xffff8bdf60e8   136  26cb93b9       constant
0xffff8bdf60ec   140  00000000       constant
0xffff8bdf60f0   144  8bd22420       constant
0xffff8bdf60f4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf6070  embedded object  (0x327e9019 Cell for 0)
0xffff8bdf6080  embedded object  (0x327e9241 WeakCell for 0x5f540531 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf609c  embedded object  (0x26cb93b9 <String[12]: _eventsCount>)
0xffff8bdf60a0  code target (HANDLER)  (0xffff8bdf5f60)
0xffff8bdf60a8  embedded object  (0x26cb93b9 <String[12]: _eventsCount>)
0xffff8bdf60b4  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf60bc  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = _maxListeners
compiler = unknown
Instructions (size = 120)
0xffff8bdf6160     0  sub csp, jssp, #0x8 (8)
0xffff8bdf6164     4  str x3, [jssp, #-8]!
0xffff8bdf6168     8  sub csp, jssp, #0x8 (8)
0xffff8bdf616c    12  str x0, [jssp, #-8]!
0xffff8bdf6170    16  ldr x0, pc+72 (addr 0x0000ffff8bdf61b8)    ;; object: 0x327e9019 Cell for 0
0xffff8bdf6174    20  ldur x0, [x0, #7]
0xffff8bdf6178    24  cmp x0, #0x0 (0)
0xffff8bdf617c    28  b.ne #+0x14 (addr 0xffff8bdf6190)
0xffff8bdf6180    32  ldr x3, pc+64 (addr 0x0000ffff8bdf61c0)    ;; object: 0x327e9331 WeakCell for 0x327acc41 <an Object with map 0x5f51bf39>
0xffff8bdf6184    36  ldur x3, [x3, #7]
0xffff8bdf6188    40  tbz w3, #0, #+0x8 (addr 0xffff8bdf6190)
0xffff8bdf618c    44  b #+0x14 (addr 0xffff8bdf61a0)
0xffff8bdf6190    48  ldr x0, [jssp], #8
0xffff8bdf6194    52  ldr x3, [jssp], #8
0xffff8bdf6198    56  ldr x16, pc+48 (addr 0x0000ffff8bdf61c8)    ;; code: BUILTIN
0xffff8bdf619c    60  br x16
0xffff8bdf61a0    64  add jssp, jssp, #0x10 (16)
0xffff8bdf61a4    68  mov x1, x3
0xffff8bdf61a8    72  ldr x16, pc+40 (addr 0x0000ffff8bdf61d0)    ;; code: HANDLER, LoadFieldStub, minor: 2053
0xffff8bdf61ac    76  br x16
0xffff8bdf61b0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdf61b4    84  d63f03e0       constant
0xffff8bdf61b8    88  327e9019       constant
0xffff8bdf61bc    92  00000000       constant
0xffff8bdf61c0    96  327e9331       constant
0xffff8bdf61c4   100  00000000       constant
0xffff8bdf61c8   104  8bd222e0       constant
0xffff8bdf61cc   108  0000ffff       constant
0xffff8bdf61d0   112  8bd78e20       constant
0xffff8bdf61d4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdf6170  embedded object  (0x327e9019 Cell for 0)
0xffff8bdf6180  embedded object  (0x327e9331 WeakCell for 0x327acc41 <an Object with map 0x5f51bf39>)
0xffff8bdf6198  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdf61a8  code target (HANDLER)  (0xffff8bd78e20)
0xffff8bdf61b0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = _maxListeners
compiler = unknown
Instructions (size = 152)
0xffff8bdf6240     0  sub csp, jssp, #0x8 (8)
0xffff8bdf6244     4  str x3, [jssp, #-8]!
0xffff8bdf6248     8  sub csp, jssp, #0x8 (8)
0xffff8bdf624c    12  str x4, [jssp, #-8]!
0xffff8bdf6250    16  ldr x3, pc+88 (addr 0x0000ffff8bdf62a8)    ;; object: 0x327e9019 Cell for 0
0xffff8bdf6254    20  ldur x3, [x3, #7]
0xffff8bdf6258    24  cmp x3, #0x0 (0)
0xffff8bdf625c    28  b.ne #+0x30 (addr 0xffff8bdf628c)
0xffff8bdf6260    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf628c)
0xffff8bdf6264    36  ldr x5, pc+76 (addr 0x0000ffff8bdf62b0)    ;; object: 0x327e9369 WeakCell for 0x5f540589 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf6268    40  ldur x5, [x5, #7]
0xffff8bdf626c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf628c)
0xffff8bdf6270    48  ldursw x4, [x5, #15]
0xffff8bdf6274    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf628c)
0xffff8bdf6278    56  ldr x4, [jssp], #8
0xffff8bdf627c    60  ldr x3, [jssp], #8
0xffff8bdf6280    64  ldr x2, pc+56 (addr 0x0000ffff8bdf62b8)    ;; object: 0x26cc32b1 <String[13]: _maxListeners>
0xffff8bdf6284    68  ldr x16, pc+60 (addr 0x0000ffff8bdf62c0)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff8bdf6288    72  br x16
0xffff8bdf628c    76  ldr x2, pc+60 (addr 0x0000ffff8bdf62c8)    ;; object: 0x26cc32b1 <String[13]: _maxListeners>
0xffff8bdf6290    80  ldr x4, [jssp], #8
0xffff8bdf6294    84  ldr x3, [jssp], #8
0xffff8bdf6298    88  ldr x16, pc+56 (addr 0x0000ffff8bdf62d0)    ;; code: BUILTIN
0xffff8bdf629c    92  br x16
0xffff8bdf62a0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf62a4   100  d63f03e0       constant
0xffff8bdf62a8   104  327e9019       constant
0xffff8bdf62ac   108  00000000       constant
0xffff8bdf62b0   112  327e9369       constant
0xffff8bdf62b4   116  00000000       constant
0xffff8bdf62b8   120  26cc32b1       constant
0xffff8bdf62bc   124  00000000       constant
0xffff8bdf62c0   128  8bd38860       constant
0xffff8bdf62c4   132  0000ffff       constant
0xffff8bdf62c8   136  26cc32b1       constant
0xffff8bdf62cc   140  00000000       constant
0xffff8bdf62d0   144  8bd22420       constant
0xffff8bdf62d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf6250  embedded object  (0x327e9019 Cell for 0)
0xffff8bdf6264  embedded object  (0x327e9369 WeakCell for 0x5f540589 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf6280  embedded object  (0x26cc32b1 <String[13]: _maxListeners>)
0xffff8bdf6284  code target (HANDLER)  (0xffff8bd38860)
0xffff8bdf628c  embedded object  (0x26cc32b1 <String[13]: _maxListeners>)
0xffff8bdf6298  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf62a0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = objectMode
compiler = unknown
Instructions (size = 152)
0xffff8bdf6340     0  sub csp, jssp, #0x8 (8)
0xffff8bdf6344     4  str x3, [jssp, #-8]!
0xffff8bdf6348     8  sub csp, jssp, #0x8 (8)
0xffff8bdf634c    12  str x4, [jssp, #-8]!
0xffff8bdf6350    16  ldr x3, pc+88 (addr 0x0000ffff8bdf63a8)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf6354    20  ldur x3, [x3, #7]
0xffff8bdf6358    24  cmp x3, #0x0 (0)
0xffff8bdf635c    28  b.ne #+0x30 (addr 0xffff8bdf638c)
0xffff8bdf6360    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf638c)
0xffff8bdf6364    36  ldr x5, pc+76 (addr 0x0000ffff8bdf63b0)    ;; object: 0x327d1489 WeakCell for 0x5f538029 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf6368    40  ldur x5, [x5, #7]
0xffff8bdf636c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf638c)
0xffff8bdf6370    48  ldursw x4, [x5, #15]
0xffff8bdf6374    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf638c)
0xffff8bdf6378    56  ldr x4, [jssp], #8
0xffff8bdf637c    60  ldr x3, [jssp], #8
0xffff8bdf6380    64  ldr x2, pc+56 (addr 0x0000ffff8bdf63b8)    ;; object: 0x3271d821 <String[10]: objectMode>
0xffff8bdf6384    68  ldr x16, pc+60 (addr 0x0000ffff8bdf63c0)    ;; code: HANDLER, StoreTransitionStub, minor: 198659
0xffff8bdf6388    72  br x16
0xffff8bdf638c    76  ldr x2, pc+60 (addr 0x0000ffff8bdf63c8)    ;; object: 0x3271d821 <String[10]: objectMode>
0xffff8bdf6390    80  ldr x4, [jssp], #8
0xffff8bdf6394    84  ldr x3, [jssp], #8
0xffff8bdf6398    88  ldr x16, pc+56 (addr 0x0000ffff8bdf63d0)    ;; code: BUILTIN
0xffff8bdf639c    92  br x16
0xffff8bdf63a0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf63a4   100  d63f03e0       constant
0xffff8bdf63a8   104  327e93f9       constant
0xffff8bdf63ac   108  00000000       constant
0xffff8bdf63b0   112  327d1489       constant
0xffff8bdf63b4   116  00000000       constant
0xffff8bdf63b8   120  3271d821       constant
0xffff8bdf63bc   124  00000000       constant
0xffff8bdf63c0   128  8bd8b940       constant
0xffff8bdf63c4   132  0000ffff       constant
0xffff8bdf63c8   136  3271d821       constant
0xffff8bdf63cc   140  00000000       constant
0xffff8bdf63d0   144  8bd22420       constant
0xffff8bdf63d4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf6350  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf6364  embedded object  (0x327d1489 WeakCell for 0x5f538029 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf6380  embedded object  (0x3271d821 <String[10]: objectMode>)
0xffff8bdf6384  code target (HANDLER)  (0xffff8bd8b940)
0xffff8bdf638c  embedded object  (0x3271d821 <String[10]: objectMode>)
0xffff8bdf6398  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf63a0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 120)
0xffff8bdf6440     0  sub csp, jssp, #0x8 (8)
0xffff8bdf6444     4  str x3, [jssp, #-8]!
0xffff8bdf6448     8  sub csp, jssp, #0x8 (8)
0xffff8bdf644c    12  str x0, [jssp, #-8]!
0xffff8bdf6450    16  ldr x0, pc+72 (addr 0x0000ffff8bdf6498)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bdf6454    20  ldur x0, [x0, #7]
0xffff8bdf6458    24  cmp x0, #0x0 (0)
0xffff8bdf645c    28  b.ne #+0x14 (addr 0xffff8bdf6470)
0xffff8bdf6460    32  ldr x3, pc+64 (addr 0x0000ffff8bdf64a0)    ;; object: 0x327e9459 WeakCell for 0x26c40019 <JS Function (SharedFunctionInfo 0x26c3ff71)>
0xffff8bdf6464    36  ldur x3, [x3, #7]
0xffff8bdf6468    40  tbz w3, #0, #+0x8 (addr 0xffff8bdf6470)
0xffff8bdf646c    44  b #+0x14 (addr 0xffff8bdf6480)
0xffff8bdf6470    48  ldr x0, [jssp], #8
0xffff8bdf6474    52  ldr x3, [jssp], #8
0xffff8bdf6478    56  ldr x16, pc+48 (addr 0x0000ffff8bdf64a8)    ;; code: BUILTIN
0xffff8bdf647c    60  br x16
0xffff8bdf6480    64  add jssp, jssp, #0x10 (16)
0xffff8bdf6484    68  mov x1, x3
0xffff8bdf6488    72  ldr x16, pc+40 (addr 0x0000ffff8bdf64b0)    ;; code: HANDLER, LoadConstantStub, minor: 8
0xffff8bdf648c    76  br x16
0xffff8bdf6490    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdf6494    84  d63f03e0       constant
0xffff8bdf6498    88  26c5b0f1       constant
0xffff8bdf649c    92  00000000       constant
0xffff8bdf64a0    96  327e9459       constant
0xffff8bdf64a4   100  00000000       constant
0xffff8bdf64a8   104  8bd222e0       constant
0xffff8bdf64ac   108  0000ffff       constant
0xffff8bdf64b0   112  8bd4c160       constant
0xffff8bdf64b4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdf6450  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bdf6460  embedded object  (0x327e9459 WeakCell for 0x26c40019 <JS Function (SharedFunctionInfo 0x26c3ff71)>)
0xffff8bdf6478  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdf6488  code target (HANDLER)  (0xffff8bd4c160)
0xffff8bdf6490  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf6520     0  mov x6, x0
0xffff8bdf6524     4  tbnz w6, #0, #+0x54 (addr 0xffff8bdf6578)
0xffff8bdf6528     8  stur x6, [x1, #31]
0xffff8bdf652c    12  stur x5, [x1, #-1]
0xffff8bdf6530    16  tbz w5, #0, #+0x34 (addr 0xffff8bdf6564)
0xffff8bdf6534    20  sub x2, x1, #0x1 (1)
0xffff8bdf6538    24  and x5, x5, #0xfffffffffff00000
0xffff8bdf653c    28  ldr x5, [x5, #8]
0xffff8bdf6540    32  tbz w5, #1, #+0x24 (addr 0xffff8bdf6564)
0xffff8bdf6544    36  and x5, x1, #0xfffffffffff00000
0xffff8bdf6548    40  ldr x5, [x5, #8]
0xffff8bdf654c    44  tbz w5, #2, #+0x18 (addr 0xffff8bdf6564)
0xffff8bdf6550    48  sub csp, jssp, #0x8 (8)
0xffff8bdf6554    52  str lr, [jssp, #-8]!
0xffff8bdf6558    56  ldr x16, pc+24 (addr 0x0000ffff8bdf6570)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf655c    60  blr x16
0xffff8bdf6560    64  ldr lr, [jssp], #8
0xffff8bdf6564    68  ret
0xffff8bdf6568    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf656c    76  d63f03e0       constant
0xffff8bdf6570    80  8bd38080       constant
0xffff8bdf6574    84  0000ffff       constant
0xffff8bdf6578    88  movz x16, #0x0
0xffff8bdf657c    92  sub csp, jssp, #0x10 (16)
0xffff8bdf6580    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf6584   100  bl #+0x4 (addr 0xffff8bdf6588)
0xffff8bdf6588   104  movz x17, #0xa00000000
0xffff8bdf658c   108  sub csp, jssp, #0x10 (16)
0xffff8bdf6590   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf6594   116  add fp, jssp, #0x10 (16)
0xffff8bdf6598   120  ldr x17, pc+24 (addr 0x0000ffff8bdf65b0)    ;; lazy deoptimization bailout 0
0xffff8bdf659c   124  add x17, x17, x16
0xffff8bdf65a0   128  br x17
0xffff8bdf65a4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf65a8   136  d63f03e0       constant
0xffff8bdf65ac   140  d503201f       constant
0xffff8bdf65b0   144  8bb06000       constant
0xffff8bdf65b4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf6558  code target (STUB)  (0xffff8bd38080)
0xffff8bdf6568  constant pool (size 16)
0xffff8bdf6598  runtime entry
0xffff8bdf65a4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf6520     0  mov x6, x0
0xffff8bdf6524     4  tbnz w6, #0, #+0x54 (addr 0xffff8bdf6578)
0xffff8bdf6528     8  stur x6, [x1, #31]
0xffff8bdf652c    12  stur x5, [x1, #-1]
0xffff8bdf6530    16  tbz w5, #0, #+0x34 (addr 0xffff8bdf6564)
0xffff8bdf6534    20  sub x2, x1, #0x1 (1)
0xffff8bdf6538    24  and x5, x5, #0xfffffffffff00000
0xffff8bdf653c    28  ldr x5, [x5, #8]
0xffff8bdf6540    32  tbz w5, #1, #+0x24 (addr 0xffff8bdf6564)
0xffff8bdf6544    36  and x5, x1, #0xfffffffffff00000
0xffff8bdf6548    40  ldr x5, [x5, #8]
0xffff8bdf654c    44  tbz w5, #2, #+0x18 (addr 0xffff8bdf6564)
0xffff8bdf6550    48  sub csp, jssp, #0x8 (8)
0xffff8bdf6554    52  str lr, [jssp, #-8]!
0xffff8bdf6558    56  ldr x16, pc+24 (addr 0x0000ffff8bdf6570)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf655c    60  blr x16
0xffff8bdf6560    64  ldr lr, [jssp], #8
0xffff8bdf6564    68  ret
0xffff8bdf6568    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf656c    76  d63f03e0       constant
0xffff8bdf6570    80  8bd38080       constant
0xffff8bdf6574    84  0000ffff       constant
0xffff8bdf6578    88  movz x16, #0x0
0xffff8bdf657c    92  sub csp, jssp, #0x10 (16)
0xffff8bdf6580    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf6584   100  bl #+0x4 (addr 0xffff8bdf6588)
0xffff8bdf6588   104  movz x17, #0xa00000000
0xffff8bdf658c   108  sub csp, jssp, #0x10 (16)
0xffff8bdf6590   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf6594   116  add fp, jssp, #0x10 (16)
0xffff8bdf6598   120  ldr x17, pc+24 (addr 0x0000ffff8bdf65b0)    ;; lazy deoptimization bailout 0
0xffff8bdf659c   124  add x17, x17, x16
0xffff8bdf65a0   128  br x17
0xffff8bdf65a4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf65a8   136  d63f03e0       constant
0xffff8bdf65ac   140  d503201f       constant
0xffff8bdf65b0   144  8bb06000       constant
0xffff8bdf65b4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf6558  code target (STUB)  (0xffff8bd38080)
0xffff8bdf6568  constant pool (size 16)
0xffff8bdf6598  runtime entry
0xffff8bdf65a4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = highWaterMark
compiler = unknown
Instructions (size = 152)
0xffff8bdf6620     0  sub csp, jssp, #0x8 (8)
0xffff8bdf6624     4  str x3, [jssp, #-8]!
0xffff8bdf6628     8  sub csp, jssp, #0x8 (8)
0xffff8bdf662c    12  str x4, [jssp, #-8]!
0xffff8bdf6630    16  ldr x3, pc+88 (addr 0x0000ffff8bdf6688)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf6634    20  ldur x3, [x3, #7]
0xffff8bdf6638    24  cmp x3, #0x0 (0)
0xffff8bdf663c    28  b.ne #+0x2c (addr 0xffff8bdf6668)
0xffff8bdf6640    32  ldr x5, pc+80 (addr 0x0000ffff8bdf6690)    ;; object: 0x327d14c1 WeakCell for 0x5f538081 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf6644    36  ldur x5, [x5, #7]
0xffff8bdf6648    40  tbz w5, #0, #+0x20 (addr 0xffff8bdf6668)
0xffff8bdf664c    44  ldursw x4, [x5, #15]
0xffff8bdf6650    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdf6668)
0xffff8bdf6654    52  ldr x4, [jssp], #8
0xffff8bdf6658    56  ldr x3, [jssp], #8
0xffff8bdf665c    60  ldr x2, pc+60 (addr 0x0000ffff8bdf6698)    ;; object: 0x26cf91d9 <String[13]: highWaterMark>
0xffff8bdf6660    64  ldr x16, pc+64 (addr 0x0000ffff8bdf66a0)    ;; code: HANDLER, StoreTransitionStub, minor: 174084
0xffff8bdf6664    68  br x16
0xffff8bdf6668    72  ldr x2, pc+64 (addr 0x0000ffff8bdf66a8)    ;; object: 0x26cf91d9 <String[13]: highWaterMark>
0xffff8bdf666c    76  ldr x4, [jssp], #8
0xffff8bdf6670    80  ldr x3, [jssp], #8
0xffff8bdf6674    84  ldr x16, pc+60 (addr 0x0000ffff8bdf66b0)    ;; code: BUILTIN
0xffff8bdf6678    88  br x16
0xffff8bdf667c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdf6680    96  d63f03e0       constant
0xffff8bdf6684   100  d503201f       constant
0xffff8bdf6688   104  327e93f9       constant
0xffff8bdf668c   108  00000000       constant
0xffff8bdf6690   112  327d14c1       constant
0xffff8bdf6694   116  00000000       constant
0xffff8bdf6698   120  26cf91d9       constant
0xffff8bdf669c   124  00000000       constant
0xffff8bdf66a0   128  8bdf6520       constant
0xffff8bdf66a4   132  0000ffff       constant
0xffff8bdf66a8   136  26cf91d9       constant
0xffff8bdf66ac   140  00000000       constant
0xffff8bdf66b0   144  8bd22420       constant
0xffff8bdf66b4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf6630  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf6640  embedded object  (0x327d14c1 WeakCell for 0x5f538081 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf665c  embedded object  (0x26cf91d9 <String[13]: highWaterMark>)
0xffff8bdf6660  code target (HANDLER)  (0xffff8bdf6520)
0xffff8bdf6668  embedded object  (0x26cf91d9 <String[13]: highWaterMark>)
0xffff8bdf6674  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf667c  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = needDrain
compiler = unknown
Instructions (size = 152)
0xffff8bdf6720     0  sub csp, jssp, #0x8 (8)
0xffff8bdf6724     4  str x3, [jssp, #-8]!
0xffff8bdf6728     8  sub csp, jssp, #0x8 (8)
0xffff8bdf672c    12  str x4, [jssp, #-8]!
0xffff8bdf6730    16  ldr x3, pc+88 (addr 0x0000ffff8bdf6788)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf6734    20  ldur x3, [x3, #7]
0xffff8bdf6738    24  cmp x3, #0x0 (0)
0xffff8bdf673c    28  b.ne #+0x30 (addr 0xffff8bdf676c)
0xffff8bdf6740    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf676c)
0xffff8bdf6744    36  ldr x5, pc+76 (addr 0x0000ffff8bdf6790)    ;; object: 0x327d14d9 WeakCell for 0x5f5380d9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf6748    40  ldur x5, [x5, #7]
0xffff8bdf674c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf676c)
0xffff8bdf6750    48  ldursw x4, [x5, #15]
0xffff8bdf6754    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf676c)
0xffff8bdf6758    56  ldr x4, [jssp], #8
0xffff8bdf675c    60  ldr x3, [jssp], #8
0xffff8bdf6760    64  ldr x2, pc+56 (addr 0x0000ffff8bdf6798)    ;; object: 0x3271e111 <String[9]: needDrain>
0xffff8bdf6764    68  ldr x16, pc+60 (addr 0x0000ffff8bdf67a0)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff8bdf6768    72  br x16
0xffff8bdf676c    76  ldr x2, pc+60 (addr 0x0000ffff8bdf67a8)    ;; object: 0x3271e111 <String[9]: needDrain>
0xffff8bdf6770    80  ldr x4, [jssp], #8
0xffff8bdf6774    84  ldr x3, [jssp], #8
0xffff8bdf6778    88  ldr x16, pc+56 (addr 0x0000ffff8bdf67b0)    ;; code: BUILTIN
0xffff8bdf677c    92  br x16
0xffff8bdf6780    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf6784   100  d63f03e0       constant
0xffff8bdf6788   104  327e93f9       constant
0xffff8bdf678c   108  00000000       constant
0xffff8bdf6790   112  327d14d9       constant
0xffff8bdf6794   116  00000000       constant
0xffff8bdf6798   120  3271e111       constant
0xffff8bdf679c   124  00000000       constant
0xffff8bdf67a0   128  8bd8bdc0       constant
0xffff8bdf67a4   132  0000ffff       constant
0xffff8bdf67a8   136  3271e111       constant
0xffff8bdf67ac   140  00000000       constant
0xffff8bdf67b0   144  8bd22420       constant
0xffff8bdf67b4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf6730  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf6744  embedded object  (0x327d14d9 WeakCell for 0x5f5380d9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf6760  embedded object  (0x3271e111 <String[9]: needDrain>)
0xffff8bdf6764  code target (HANDLER)  (0xffff8bd8bdc0)
0xffff8bdf676c  embedded object  (0x3271e111 <String[9]: needDrain>)
0xffff8bdf6778  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf6780  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = ending
compiler = unknown
Instructions (size = 152)
0xffff8bdf6820     0  sub csp, jssp, #0x8 (8)
0xffff8bdf6824     4  str x3, [jssp, #-8]!
0xffff8bdf6828     8  sub csp, jssp, #0x8 (8)
0xffff8bdf682c    12  str x4, [jssp, #-8]!
0xffff8bdf6830    16  ldr x3, pc+88 (addr 0x0000ffff8bdf6888)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf6834    20  ldur x3, [x3, #7]
0xffff8bdf6838    24  cmp x3, #0x0 (0)
0xffff8bdf683c    28  b.ne #+0x30 (addr 0xffff8bdf686c)
0xffff8bdf6840    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf686c)
0xffff8bdf6844    36  ldr x5, pc+76 (addr 0x0000ffff8bdf6890)    ;; object: 0x327d14f1 WeakCell for 0x5f538131 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf6848    40  ldur x5, [x5, #7]
0xffff8bdf684c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf686c)
0xffff8bdf6850    48  ldursw x4, [x5, #15]
0xffff8bdf6854    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf686c)
0xffff8bdf6858    56  ldr x4, [jssp], #8
0xffff8bdf685c    60  ldr x3, [jssp], #8
0xffff8bdf6860    64  ldr x2, pc+56 (addr 0x0000ffff8bdf6898)    ;; object: 0x32722889 <String[6]: ending>
0xffff8bdf6864    68  ldr x16, pc+60 (addr 0x0000ffff8bdf68a0)    ;; code: HANDLER, StoreTransitionStub, minor: 198662
0xffff8bdf6868    72  br x16
0xffff8bdf686c    76  ldr x2, pc+60 (addr 0x0000ffff8bdf68a8)    ;; object: 0x32722889 <String[6]: ending>
0xffff8bdf6870    80  ldr x4, [jssp], #8
0xffff8bdf6874    84  ldr x3, [jssp], #8
0xffff8bdf6878    88  ldr x16, pc+56 (addr 0x0000ffff8bdf68b0)    ;; code: BUILTIN
0xffff8bdf687c    92  br x16
0xffff8bdf6880    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf6884   100  d63f03e0       constant
0xffff8bdf6888   104  327e93f9       constant
0xffff8bdf688c   108  00000000       constant
0xffff8bdf6890   112  327d14f1       constant
0xffff8bdf6894   116  00000000       constant
0xffff8bdf6898   120  32722889       constant
0xffff8bdf689c   124  00000000       constant
0xffff8bdf68a0   128  8bd8c000       constant
0xffff8bdf68a4   132  0000ffff       constant
0xffff8bdf68a8   136  32722889       constant
0xffff8bdf68ac   140  00000000       constant
0xffff8bdf68b0   144  8bd22420       constant
0xffff8bdf68b4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf6830  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf6844  embedded object  (0x327d14f1 WeakCell for 0x5f538131 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf6860  embedded object  (0x32722889 <String[6]: ending>)
0xffff8bdf6864  code target (HANDLER)  (0xffff8bd8c000)
0xffff8bdf686c  embedded object  (0x32722889 <String[6]: ending>)
0xffff8bdf6878  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf6880  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = ended
compiler = unknown
Instructions (size = 152)
0xffff8bdf6920     0  sub csp, jssp, #0x8 (8)
0xffff8bdf6924     4  str x3, [jssp, #-8]!
0xffff8bdf6928     8  sub csp, jssp, #0x8 (8)
0xffff8bdf692c    12  str x4, [jssp, #-8]!
0xffff8bdf6930    16  ldr x3, pc+88 (addr 0x0000ffff8bdf6988)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf6934    20  ldur x3, [x3, #7]
0xffff8bdf6938    24  cmp x3, #0x0 (0)
0xffff8bdf693c    28  b.ne #+0x30 (addr 0xffff8bdf696c)
0xffff8bdf6940    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf696c)
0xffff8bdf6944    36  ldr x5, pc+76 (addr 0x0000ffff8bdf6990)    ;; object: 0x327d1509 WeakCell for 0x5f538189 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf6948    40  ldur x5, [x5, #7]
0xffff8bdf694c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf696c)
0xffff8bdf6950    48  ldursw x4, [x5, #15]
0xffff8bdf6954    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf696c)
0xffff8bdf6958    56  ldr x4, [jssp], #8
0xffff8bdf695c    60  ldr x3, [jssp], #8
0xffff8bdf6960    64  ldr x2, pc+56 (addr 0x0000ffff8bdf6998)    ;; object: 0x26cf92f1 <String[5]: ended>
0xffff8bdf6964    68  ldr x16, pc+60 (addr 0x0000ffff8bdf69a0)    ;; code: HANDLER, StoreTransitionStub, minor: 198663
0xffff8bdf6968    72  br x16
0xffff8bdf696c    76  ldr x2, pc+60 (addr 0x0000ffff8bdf69a8)    ;; object: 0x26cf92f1 <String[5]: ended>
0xffff8bdf6970    80  ldr x4, [jssp], #8
0xffff8bdf6974    84  ldr x3, [jssp], #8
0xffff8bdf6978    88  ldr x16, pc+56 (addr 0x0000ffff8bdf69b0)    ;; code: BUILTIN
0xffff8bdf697c    92  br x16
0xffff8bdf6980    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf6984   100  d63f03e0       constant
0xffff8bdf6988   104  327e93f9       constant
0xffff8bdf698c   108  00000000       constant
0xffff8bdf6990   112  327d1509       constant
0xffff8bdf6994   116  00000000       constant
0xffff8bdf6998   120  26cf92f1       constant
0xffff8bdf699c   124  00000000       constant
0xffff8bdf69a0   128  8bd8c240       constant
0xffff8bdf69a4   132  0000ffff       constant
0xffff8bdf69a8   136  26cf92f1       constant
0xffff8bdf69ac   140  00000000       constant
0xffff8bdf69b0   144  8bd22420       constant
0xffff8bdf69b4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf6930  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf6944  embedded object  (0x327d1509 WeakCell for 0x5f538189 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf6960  embedded object  (0x26cf92f1 <String[5]: ended>)
0xffff8bdf6964  code target (HANDLER)  (0xffff8bd8c240)
0xffff8bdf696c  embedded object  (0x26cf92f1 <String[5]: ended>)
0xffff8bdf6978  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf6980  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = finished
compiler = unknown
Instructions (size = 152)
0xffff8bdf6a20     0  sub csp, jssp, #0x8 (8)
0xffff8bdf6a24     4  str x3, [jssp, #-8]!
0xffff8bdf6a28     8  sub csp, jssp, #0x8 (8)
0xffff8bdf6a2c    12  str x4, [jssp, #-8]!
0xffff8bdf6a30    16  ldr x3, pc+88 (addr 0x0000ffff8bdf6a88)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf6a34    20  ldur x3, [x3, #7]
0xffff8bdf6a38    24  cmp x3, #0x0 (0)
0xffff8bdf6a3c    28  b.ne #+0x30 (addr 0xffff8bdf6a6c)
0xffff8bdf6a40    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf6a6c)
0xffff8bdf6a44    36  ldr x5, pc+76 (addr 0x0000ffff8bdf6a90)    ;; object: 0x327d1521 WeakCell for 0x5f5381e1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf6a48    40  ldur x5, [x5, #7]
0xffff8bdf6a4c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf6a6c)
0xffff8bdf6a50    48  ldursw x4, [x5, #15]
0xffff8bdf6a54    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf6a6c)
0xffff8bdf6a58    56  ldr x4, [jssp], #8
0xffff8bdf6a5c    60  ldr x3, [jssp], #8
0xffff8bdf6a60    64  ldr x2, pc+56 (addr 0x0000ffff8bdf6a98)    ;; object: 0x327228a9 <String[8]: finished>
0xffff8bdf6a64    68  ldr x16, pc+60 (addr 0x0000ffff8bdf6aa0)    ;; code: HANDLER, StoreTransitionStub, minor: 198664
0xffff8bdf6a68    72  br x16
0xffff8bdf6a6c    76  ldr x2, pc+60 (addr 0x0000ffff8bdf6aa8)    ;; object: 0x327228a9 <String[8]: finished>
0xffff8bdf6a70    80  ldr x4, [jssp], #8
0xffff8bdf6a74    84  ldr x3, [jssp], #8
0xffff8bdf6a78    88  ldr x16, pc+56 (addr 0x0000ffff8bdf6ab0)    ;; code: BUILTIN
0xffff8bdf6a7c    92  br x16
0xffff8bdf6a80    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf6a84   100  d63f03e0       constant
0xffff8bdf6a88   104  327e93f9       constant
0xffff8bdf6a8c   108  00000000       constant
0xffff8bdf6a90   112  327d1521       constant
0xffff8bdf6a94   116  00000000       constant
0xffff8bdf6a98   120  327228a9       constant
0xffff8bdf6a9c   124  00000000       constant
0xffff8bdf6aa0   128  8bde5d20       constant
0xffff8bdf6aa4   132  0000ffff       constant
0xffff8bdf6aa8   136  327228a9       constant
0xffff8bdf6aac   140  00000000       constant
0xffff8bdf6ab0   144  8bd22420       constant
0xffff8bdf6ab4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf6a30  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf6a44  embedded object  (0x327d1521 WeakCell for 0x5f5381e1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf6a60  embedded object  (0x327228a9 <String[8]: finished>)
0xffff8bdf6a64  code target (HANDLER)  (0xffff8bde5d20)
0xffff8bdf6a6c  embedded object  (0x327228a9 <String[8]: finished>)
0xffff8bdf6a78  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf6a80  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = decodeStrings
compiler = unknown
Instructions (size = 152)
0xffff8bdf6b20     0  sub csp, jssp, #0x8 (8)
0xffff8bdf6b24     4  str x3, [jssp, #-8]!
0xffff8bdf6b28     8  sub csp, jssp, #0x8 (8)
0xffff8bdf6b2c    12  str x4, [jssp, #-8]!
0xffff8bdf6b30    16  ldr x3, pc+88 (addr 0x0000ffff8bdf6b88)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf6b34    20  ldur x3, [x3, #7]
0xffff8bdf6b38    24  cmp x3, #0x0 (0)
0xffff8bdf6b3c    28  b.ne #+0x30 (addr 0xffff8bdf6b6c)
0xffff8bdf6b40    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf6b6c)
0xffff8bdf6b44    36  ldr x5, pc+76 (addr 0x0000ffff8bdf6b90)    ;; object: 0x327d1539 WeakCell for 0x5f538239 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf6b48    40  ldur x5, [x5, #7]
0xffff8bdf6b4c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf6b6c)
0xffff8bdf6b50    48  ldursw x4, [x5, #15]
0xffff8bdf6b54    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf6b6c)
0xffff8bdf6b58    56  ldr x4, [jssp], #8
0xffff8bdf6b5c    60  ldr x3, [jssp], #8
0xffff8bdf6b60    64  ldr x2, pc+56 (addr 0x0000ffff8bdf6b98)    ;; object: 0x327228e9 <String[13]: decodeStrings>
0xffff8bdf6b64    68  ldr x16, pc+60 (addr 0x0000ffff8bdf6ba0)    ;; code: HANDLER, StoreTransitionStub, minor: 198665
0xffff8bdf6b68    72  br x16
0xffff8bdf6b6c    76  ldr x2, pc+60 (addr 0x0000ffff8bdf6ba8)    ;; object: 0x327228e9 <String[13]: decodeStrings>
0xffff8bdf6b70    80  ldr x4, [jssp], #8
0xffff8bdf6b74    84  ldr x3, [jssp], #8
0xffff8bdf6b78    88  ldr x16, pc+56 (addr 0x0000ffff8bdf6bb0)    ;; code: BUILTIN
0xffff8bdf6b7c    92  br x16
0xffff8bdf6b80    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf6b84   100  d63f03e0       constant
0xffff8bdf6b88   104  327e93f9       constant
0xffff8bdf6b8c   108  00000000       constant
0xffff8bdf6b90   112  327d1539       constant
0xffff8bdf6b94   116  00000000       constant
0xffff8bdf6b98   120  327228e9       constant
0xffff8bdf6b9c   124  00000000       constant
0xffff8bdf6ba0   128  8bde60c0       constant
0xffff8bdf6ba4   132  0000ffff       constant
0xffff8bdf6ba8   136  327228e9       constant
0xffff8bdf6bac   140  00000000       constant
0xffff8bdf6bb0   144  8bd22420       constant
0xffff8bdf6bb4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf6b30  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf6b44  embedded object  (0x327d1539 WeakCell for 0x5f538239 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf6b60  embedded object  (0x327228e9 <String[13]: decodeStrings>)
0xffff8bdf6b64  code target (HANDLER)  (0xffff8bde60c0)
0xffff8bdf6b6c  embedded object  (0x327228e9 <String[13]: decodeStrings>)
0xffff8bdf6b78  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf6b80  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = defaultEncoding
compiler = unknown
Instructions (size = 152)
0xffff8bdf6c20     0  sub csp, jssp, #0x8 (8)
0xffff8bdf6c24     4  str x3, [jssp, #-8]!
0xffff8bdf6c28     8  sub csp, jssp, #0x8 (8)
0xffff8bdf6c2c    12  str x4, [jssp, #-8]!
0xffff8bdf6c30    16  ldr x3, pc+88 (addr 0x0000ffff8bdf6c88)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf6c34    20  ldur x3, [x3, #7]
0xffff8bdf6c38    24  cmp x3, #0x0 (0)
0xffff8bdf6c3c    28  b.ne #+0x30 (addr 0xffff8bdf6c6c)
0xffff8bdf6c40    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf6c6c)
0xffff8bdf6c44    36  ldr x5, pc+76 (addr 0x0000ffff8bdf6c90)    ;; object: 0x327d1551 WeakCell for 0x5f538291 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf6c48    40  ldur x5, [x5, #7]
0xffff8bdf6c4c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf6c6c)
0xffff8bdf6c50    48  ldursw x4, [x5, #15]
0xffff8bdf6c54    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf6c6c)
0xffff8bdf6c58    56  ldr x4, [jssp], #8
0xffff8bdf6c5c    60  ldr x3, [jssp], #8
0xffff8bdf6c60    64  ldr x2, pc+56 (addr 0x0000ffff8bdf6c98)    ;; object: 0x3271da19 <String[15]: defaultEncoding>
0xffff8bdf6c64    68  ldr x16, pc+60 (addr 0x0000ffff8bdf6ca0)    ;; code: HANDLER, StoreTransitionStub, minor: 198666
0xffff8bdf6c68    72  br x16
0xffff8bdf6c6c    76  ldr x2, pc+60 (addr 0x0000ffff8bdf6ca8)    ;; object: 0x3271da19 <String[15]: defaultEncoding>
0xffff8bdf6c70    80  ldr x4, [jssp], #8
0xffff8bdf6c74    84  ldr x3, [jssp], #8
0xffff8bdf6c78    88  ldr x16, pc+56 (addr 0x0000ffff8bdf6cb0)    ;; code: BUILTIN
0xffff8bdf6c7c    92  br x16
0xffff8bdf6c80    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf6c84   100  d63f03e0       constant
0xffff8bdf6c88   104  327e93f9       constant
0xffff8bdf6c8c   108  00000000       constant
0xffff8bdf6c90   112  327d1551       constant
0xffff8bdf6c94   116  00000000       constant
0xffff8bdf6c98   120  3271da19       constant
0xffff8bdf6c9c   124  00000000       constant
0xffff8bdf6ca0   128  8bdf5a00       constant
0xffff8bdf6ca4   132  0000ffff       constant
0xffff8bdf6ca8   136  3271da19       constant
0xffff8bdf6cac   140  00000000       constant
0xffff8bdf6cb0   144  8bd22420       constant
0xffff8bdf6cb4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf6c30  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf6c44  embedded object  (0x327d1551 WeakCell for 0x5f538291 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf6c60  embedded object  (0x3271da19 <String[15]: defaultEncoding>)
0xffff8bdf6c64  code target (HANDLER)  (0xffff8bdf5a00)
0xffff8bdf6c6c  embedded object  (0x3271da19 <String[15]: defaultEncoding>)
0xffff8bdf6c78  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf6c80  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf6d20     0  mov x6, x0
0xffff8bdf6d24     4  tbnz w6, #0, #+0x54 (addr 0xffff8bdf6d78)
0xffff8bdf6d28     8  stur x6, [x1, #87]
0xffff8bdf6d2c    12  stur x5, [x1, #-1]
0xffff8bdf6d30    16  tbz w5, #0, #+0x34 (addr 0xffff8bdf6d64)
0xffff8bdf6d34    20  sub x2, x1, #0x1 (1)
0xffff8bdf6d38    24  and x5, x5, #0xfffffffffff00000
0xffff8bdf6d3c    28  ldr x5, [x5, #8]
0xffff8bdf6d40    32  tbz w5, #1, #+0x24 (addr 0xffff8bdf6d64)
0xffff8bdf6d44    36  and x5, x1, #0xfffffffffff00000
0xffff8bdf6d48    40  ldr x5, [x5, #8]
0xffff8bdf6d4c    44  tbz w5, #2, #+0x18 (addr 0xffff8bdf6d64)
0xffff8bdf6d50    48  sub csp, jssp, #0x8 (8)
0xffff8bdf6d54    52  str lr, [jssp, #-8]!
0xffff8bdf6d58    56  ldr x16, pc+24 (addr 0x0000ffff8bdf6d70)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf6d5c    60  blr x16
0xffff8bdf6d60    64  ldr lr, [jssp], #8
0xffff8bdf6d64    68  ret
0xffff8bdf6d68    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf6d6c    76  d63f03e0       constant
0xffff8bdf6d70    80  8bd38080       constant
0xffff8bdf6d74    84  0000ffff       constant
0xffff8bdf6d78    88  movz x16, #0x0
0xffff8bdf6d7c    92  sub csp, jssp, #0x10 (16)
0xffff8bdf6d80    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf6d84   100  bl #+0x4 (addr 0xffff8bdf6d88)
0xffff8bdf6d88   104  movz x17, #0xa00000000
0xffff8bdf6d8c   108  sub csp, jssp, #0x10 (16)
0xffff8bdf6d90   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf6d94   116  add fp, jssp, #0x10 (16)
0xffff8bdf6d98   120  ldr x17, pc+24 (addr 0x0000ffff8bdf6db0)    ;; lazy deoptimization bailout 0
0xffff8bdf6d9c   124  add x17, x17, x16
0xffff8bdf6da0   128  br x17
0xffff8bdf6da4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf6da8   136  d63f03e0       constant
0xffff8bdf6dac   140  d503201f       constant
0xffff8bdf6db0   144  8bb06000       constant
0xffff8bdf6db4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf6d58  code target (STUB)  (0xffff8bd38080)
0xffff8bdf6d68  constant pool (size 16)
0xffff8bdf6d98  runtime entry
0xffff8bdf6da4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf6d20     0  mov x6, x0
0xffff8bdf6d24     4  tbnz w6, #0, #+0x54 (addr 0xffff8bdf6d78)
0xffff8bdf6d28     8  stur x6, [x1, #87]
0xffff8bdf6d2c    12  stur x5, [x1, #-1]
0xffff8bdf6d30    16  tbz w5, #0, #+0x34 (addr 0xffff8bdf6d64)
0xffff8bdf6d34    20  sub x2, x1, #0x1 (1)
0xffff8bdf6d38    24  and x5, x5, #0xfffffffffff00000
0xffff8bdf6d3c    28  ldr x5, [x5, #8]
0xffff8bdf6d40    32  tbz w5, #1, #+0x24 (addr 0xffff8bdf6d64)
0xffff8bdf6d44    36  and x5, x1, #0xfffffffffff00000
0xffff8bdf6d48    40  ldr x5, [x5, #8]
0xffff8bdf6d4c    44  tbz w5, #2, #+0x18 (addr 0xffff8bdf6d64)
0xffff8bdf6d50    48  sub csp, jssp, #0x8 (8)
0xffff8bdf6d54    52  str lr, [jssp, #-8]!
0xffff8bdf6d58    56  ldr x16, pc+24 (addr 0x0000ffff8bdf6d70)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf6d5c    60  blr x16
0xffff8bdf6d60    64  ldr lr, [jssp], #8
0xffff8bdf6d64    68  ret
0xffff8bdf6d68    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf6d6c    76  d63f03e0       constant
0xffff8bdf6d70    80  8bd38080       constant
0xffff8bdf6d74    84  0000ffff       constant
0xffff8bdf6d78    88  movz x16, #0x0
0xffff8bdf6d7c    92  sub csp, jssp, #0x10 (16)
0xffff8bdf6d80    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf6d84   100  bl #+0x4 (addr 0xffff8bdf6d88)
0xffff8bdf6d88   104  movz x17, #0xa00000000
0xffff8bdf6d8c   108  sub csp, jssp, #0x10 (16)
0xffff8bdf6d90   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf6d94   116  add fp, jssp, #0x10 (16)
0xffff8bdf6d98   120  ldr x17, pc+24 (addr 0x0000ffff8bdf6db0)    ;; lazy deoptimization bailout 0
0xffff8bdf6d9c   124  add x17, x17, x16
0xffff8bdf6da0   128  br x17
0xffff8bdf6da4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf6da8   136  d63f03e0       constant
0xffff8bdf6dac   140  d503201f       constant
0xffff8bdf6db0   144  8bb06000       constant
0xffff8bdf6db4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf6d58  code target (STUB)  (0xffff8bd38080)
0xffff8bdf6d68  constant pool (size 16)
0xffff8bdf6d98  runtime entry
0xffff8bdf6da4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = length
compiler = unknown
Instructions (size = 152)
0xffff8bdf6e20     0  sub csp, jssp, #0x8 (8)
0xffff8bdf6e24     4  str x3, [jssp, #-8]!
0xffff8bdf6e28     8  sub csp, jssp, #0x8 (8)
0xffff8bdf6e2c    12  str x4, [jssp, #-8]!
0xffff8bdf6e30    16  ldr x3, pc+88 (addr 0x0000ffff8bdf6e88)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf6e34    20  ldur x3, [x3, #7]
0xffff8bdf6e38    24  cmp x3, #0x0 (0)
0xffff8bdf6e3c    28  b.ne #+0x2c (addr 0xffff8bdf6e68)
0xffff8bdf6e40    32  ldr x5, pc+80 (addr 0x0000ffff8bdf6e90)    ;; object: 0x327d1569 WeakCell for 0x5f5382e9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf6e44    36  ldur x5, [x5, #7]
0xffff8bdf6e48    40  tbz w5, #0, #+0x20 (addr 0xffff8bdf6e68)
0xffff8bdf6e4c    44  ldursw x4, [x5, #15]
0xffff8bdf6e50    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdf6e68)
0xffff8bdf6e54    52  ldr x4, [jssp], #8
0xffff8bdf6e58    56  ldr x3, [jssp], #8
0xffff8bdf6e5c    60  ldr x2, pc+60 (addr 0x0000ffff8bdf6e98)    ;; object: 0x26c05141 <String[6]: length>
0xffff8bdf6e60    64  ldr x16, pc+64 (addr 0x0000ffff8bdf6ea0)    ;; code: HANDLER, StoreTransitionStub, minor: 174091
0xffff8bdf6e64    68  br x16
0xffff8bdf6e68    72  ldr x2, pc+64 (addr 0x0000ffff8bdf6ea8)    ;; object: 0x26c05141 <String[6]: length>
0xffff8bdf6e6c    76  ldr x4, [jssp], #8
0xffff8bdf6e70    80  ldr x3, [jssp], #8
0xffff8bdf6e74    84  ldr x16, pc+60 (addr 0x0000ffff8bdf6eb0)    ;; code: BUILTIN
0xffff8bdf6e78    88  br x16
0xffff8bdf6e7c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdf6e80    96  d63f03e0       constant
0xffff8bdf6e84   100  d503201f       constant
0xffff8bdf6e88   104  327e93f9       constant
0xffff8bdf6e8c   108  00000000       constant
0xffff8bdf6e90   112  327d1569       constant
0xffff8bdf6e94   116  00000000       constant
0xffff8bdf6e98   120  26c05141       constant
0xffff8bdf6e9c   124  00000000       constant
0xffff8bdf6ea0   128  8bdf6d20       constant
0xffff8bdf6ea4   132  0000ffff       constant
0xffff8bdf6ea8   136  26c05141       constant
0xffff8bdf6eac   140  00000000       constant
0xffff8bdf6eb0   144  8bd22420       constant
0xffff8bdf6eb4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf6e30  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf6e40  embedded object  (0x327d1569 WeakCell for 0x5f5382e9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf6e5c  embedded object  (0x26c05141 <String[6]: length>)
0xffff8bdf6e60  code target (HANDLER)  (0xffff8bdf6d20)
0xffff8bdf6e68  embedded object  (0x26c05141 <String[6]: length>)
0xffff8bdf6e74  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf6e7c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf6f20     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf6fb0)
0xffff8bdf6f24     4  mov x2, x0
0xffff8bdf6f28     8  stur x2, [x1, #95]
0xffff8bdf6f2c    12  add x3, x1, #0x5f (95)
0xffff8bdf6f30    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf6f34    20  ldr x2, [x2, #8]
0xffff8bdf6f38    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf6f5c)
0xffff8bdf6f3c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf6f40    32  ldr x2, [x2, #8]
0xffff8bdf6f44    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf6f5c)
0xffff8bdf6f48    40  sub csp, jssp, #0x8 (8)
0xffff8bdf6f4c    44  str lr, [jssp, #-8]!
0xffff8bdf6f50    48  ldr x16, pc+80 (addr 0x0000ffff8bdf6fa0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf6f54    52  blr x16
0xffff8bdf6f58    56  ldr lr, [jssp], #8
0xffff8bdf6f5c    60  stur x5, [x1, #-1]
0xffff8bdf6f60    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf6f94)
0xffff8bdf6f64    68  sub x2, x1, #0x1 (1)
0xffff8bdf6f68    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf6f6c    76  ldr x5, [x5, #8]
0xffff8bdf6f70    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf6f94)
0xffff8bdf6f74    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf6f78    88  ldr x5, [x5, #8]
0xffff8bdf6f7c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf6f94)
0xffff8bdf6f80    96  sub csp, jssp, #0x8 (8)
0xffff8bdf6f84   100  str lr, [jssp, #-8]!
0xffff8bdf6f88   104  ldr x16, pc+32 (addr 0x0000ffff8bdf6fa8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf6f8c   108  blr x16
0xffff8bdf6f90   112  ldr lr, [jssp], #8
0xffff8bdf6f94   116  ret
0xffff8bdf6f98   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf6f9c   124  d63f03e0       constant
0xffff8bdf6fa0   128  8bd170c0       constant
0xffff8bdf6fa4   132  0000ffff       constant
0xffff8bdf6fa8   136  8bd38080       constant
0xffff8bdf6fac   140  0000ffff       constant
0xffff8bdf6fb0   144  movz x16, #0x0
0xffff8bdf6fb4   148  sub csp, jssp, #0x10 (16)
0xffff8bdf6fb8   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf6fbc   156  bl #+0x4 (addr 0xffff8bdf6fc0)
0xffff8bdf6fc0   160  movz x17, #0xa00000000
0xffff8bdf6fc4   164  sub csp, jssp, #0x10 (16)
0xffff8bdf6fc8   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf6fcc   172  add fp, jssp, #0x10 (16)
0xffff8bdf6fd0   176  ldr x17, pc+24 (addr 0x0000ffff8bdf6fe8)    ;; lazy deoptimization bailout 0
0xffff8bdf6fd4   180  add x17, x17, x16
0xffff8bdf6fd8   184  br x17
0xffff8bdf6fdc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf6fe0   192  d63f03e0       constant
0xffff8bdf6fe4   196  d503201f       constant
0xffff8bdf6fe8   200  8bb06000       constant
0xffff8bdf6fec   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf6f50  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf6f88  code target (STUB)  (0xffff8bd38080)
0xffff8bdf6f98  constant pool (size 24)
0xffff8bdf6fd0  runtime entry
0xffff8bdf6fdc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf6f20     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf6fb0)
0xffff8bdf6f24     4  mov x2, x0
0xffff8bdf6f28     8  stur x2, [x1, #95]
0xffff8bdf6f2c    12  add x3, x1, #0x5f (95)
0xffff8bdf6f30    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf6f34    20  ldr x2, [x2, #8]
0xffff8bdf6f38    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf6f5c)
0xffff8bdf6f3c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf6f40    32  ldr x2, [x2, #8]
0xffff8bdf6f44    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf6f5c)
0xffff8bdf6f48    40  sub csp, jssp, #0x8 (8)
0xffff8bdf6f4c    44  str lr, [jssp, #-8]!
0xffff8bdf6f50    48  ldr x16, pc+80 (addr 0x0000ffff8bdf6fa0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf6f54    52  blr x16
0xffff8bdf6f58    56  ldr lr, [jssp], #8
0xffff8bdf6f5c    60  stur x5, [x1, #-1]
0xffff8bdf6f60    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf6f94)
0xffff8bdf6f64    68  sub x2, x1, #0x1 (1)
0xffff8bdf6f68    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf6f6c    76  ldr x5, [x5, #8]
0xffff8bdf6f70    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf6f94)
0xffff8bdf6f74    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf6f78    88  ldr x5, [x5, #8]
0xffff8bdf6f7c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf6f94)
0xffff8bdf6f80    96  sub csp, jssp, #0x8 (8)
0xffff8bdf6f84   100  str lr, [jssp, #-8]!
0xffff8bdf6f88   104  ldr x16, pc+32 (addr 0x0000ffff8bdf6fa8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf6f8c   108  blr x16
0xffff8bdf6f90   112  ldr lr, [jssp], #8
0xffff8bdf6f94   116  ret
0xffff8bdf6f98   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf6f9c   124  d63f03e0       constant
0xffff8bdf6fa0   128  8bd170c0       constant
0xffff8bdf6fa4   132  0000ffff       constant
0xffff8bdf6fa8   136  8bd38080       constant
0xffff8bdf6fac   140  0000ffff       constant
0xffff8bdf6fb0   144  movz x16, #0x0
0xffff8bdf6fb4   148  sub csp, jssp, #0x10 (16)
0xffff8bdf6fb8   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf6fbc   156  bl #+0x4 (addr 0xffff8bdf6fc0)
0xffff8bdf6fc0   160  movz x17, #0xa00000000
0xffff8bdf6fc4   164  sub csp, jssp, #0x10 (16)
0xffff8bdf6fc8   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf6fcc   172  add fp, jssp, #0x10 (16)
0xffff8bdf6fd0   176  ldr x17, pc+24 (addr 0x0000ffff8bdf6fe8)    ;; lazy deoptimization bailout 0
0xffff8bdf6fd4   180  add x17, x17, x16
0xffff8bdf6fd8   184  br x17
0xffff8bdf6fdc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf6fe0   192  d63f03e0       constant
0xffff8bdf6fe4   196  d503201f       constant
0xffff8bdf6fe8   200  8bb06000       constant
0xffff8bdf6fec   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf6f50  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf6f88  code target (STUB)  (0xffff8bd38080)
0xffff8bdf6f98  constant pool (size 24)
0xffff8bdf6fd0  runtime entry
0xffff8bdf6fdc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = writing
compiler = unknown
Instructions (size = 152)
0xffff8bdf7060     0  sub csp, jssp, #0x8 (8)
0xffff8bdf7064     4  str x3, [jssp, #-8]!
0xffff8bdf7068     8  sub csp, jssp, #0x8 (8)
0xffff8bdf706c    12  str x4, [jssp, #-8]!
0xffff8bdf7070    16  ldr x3, pc+88 (addr 0x0000ffff8bdf70c8)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf7074    20  ldur x3, [x3, #7]
0xffff8bdf7078    24  cmp x3, #0x0 (0)
0xffff8bdf707c    28  b.ne #+0x30 (addr 0xffff8bdf70ac)
0xffff8bdf7080    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf70ac)
0xffff8bdf7084    36  ldr x5, pc+76 (addr 0x0000ffff8bdf70d0)    ;; object: 0x327d1581 WeakCell for 0x5f538341 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf7088    40  ldur x5, [x5, #7]
0xffff8bdf708c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf70ac)
0xffff8bdf7090    48  ldursw x4, [x5, #15]
0xffff8bdf7094    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf70ac)
0xffff8bdf7098    56  ldr x4, [jssp], #8
0xffff8bdf709c    60  ldr x3, [jssp], #8
0xffff8bdf70a0    64  ldr x2, pc+56 (addr 0x0000ffff8bdf70d8)    ;; object: 0x32722911 <String[7]: writing>
0xffff8bdf70a4    68  ldr x16, pc+60 (addr 0x0000ffff8bdf70e0)    ;; code: HANDLER, StoreTransitionStub, minor: 198668
0xffff8bdf70a8    72  br x16
0xffff8bdf70ac    76  ldr x2, pc+60 (addr 0x0000ffff8bdf70e8)    ;; object: 0x32722911 <String[7]: writing>
0xffff8bdf70b0    80  ldr x4, [jssp], #8
0xffff8bdf70b4    84  ldr x3, [jssp], #8
0xffff8bdf70b8    88  ldr x16, pc+56 (addr 0x0000ffff8bdf70f0)    ;; code: BUILTIN
0xffff8bdf70bc    92  br x16
0xffff8bdf70c0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf70c4   100  d63f03e0       constant
0xffff8bdf70c8   104  327e93f9       constant
0xffff8bdf70cc   108  00000000       constant
0xffff8bdf70d0   112  327d1581       constant
0xffff8bdf70d4   116  00000000       constant
0xffff8bdf70d8   120  32722911       constant
0xffff8bdf70dc   124  00000000       constant
0xffff8bdf70e0   128  8bdf6f20       constant
0xffff8bdf70e4   132  0000ffff       constant
0xffff8bdf70e8   136  32722911       constant
0xffff8bdf70ec   140  00000000       constant
0xffff8bdf70f0   144  8bd22420       constant
0xffff8bdf70f4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf7070  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf7084  embedded object  (0x327d1581 WeakCell for 0x5f538341 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf70a0  embedded object  (0x32722911 <String[7]: writing>)
0xffff8bdf70a4  code target (HANDLER)  (0xffff8bdf6f20)
0xffff8bdf70ac  embedded object  (0x32722911 <String[7]: writing>)
0xffff8bdf70b8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf70c0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf7160     0  mov x6, x0
0xffff8bdf7164     4  tbnz w6, #0, #+0x54 (addr 0xffff8bdf71b8)
0xffff8bdf7168     8  stur x6, [x1, #103]
0xffff8bdf716c    12  stur x5, [x1, #-1]
0xffff8bdf7170    16  tbz w5, #0, #+0x34 (addr 0xffff8bdf71a4)
0xffff8bdf7174    20  sub x2, x1, #0x1 (1)
0xffff8bdf7178    24  and x5, x5, #0xfffffffffff00000
0xffff8bdf717c    28  ldr x5, [x5, #8]
0xffff8bdf7180    32  tbz w5, #1, #+0x24 (addr 0xffff8bdf71a4)
0xffff8bdf7184    36  and x5, x1, #0xfffffffffff00000
0xffff8bdf7188    40  ldr x5, [x5, #8]
0xffff8bdf718c    44  tbz w5, #2, #+0x18 (addr 0xffff8bdf71a4)
0xffff8bdf7190    48  sub csp, jssp, #0x8 (8)
0xffff8bdf7194    52  str lr, [jssp, #-8]!
0xffff8bdf7198    56  ldr x16, pc+24 (addr 0x0000ffff8bdf71b0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf719c    60  blr x16
0xffff8bdf71a0    64  ldr lr, [jssp], #8
0xffff8bdf71a4    68  ret
0xffff8bdf71a8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf71ac    76  d63f03e0       constant
0xffff8bdf71b0    80  8bd38080       constant
0xffff8bdf71b4    84  0000ffff       constant
0xffff8bdf71b8    88  movz x16, #0x0
0xffff8bdf71bc    92  sub csp, jssp, #0x10 (16)
0xffff8bdf71c0    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf71c4   100  bl #+0x4 (addr 0xffff8bdf71c8)
0xffff8bdf71c8   104  movz x17, #0xa00000000
0xffff8bdf71cc   108  sub csp, jssp, #0x10 (16)
0xffff8bdf71d0   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf71d4   116  add fp, jssp, #0x10 (16)
0xffff8bdf71d8   120  ldr x17, pc+24 (addr 0x0000ffff8bdf71f0)    ;; lazy deoptimization bailout 0
0xffff8bdf71dc   124  add x17, x17, x16
0xffff8bdf71e0   128  br x17
0xffff8bdf71e4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf71e8   136  d63f03e0       constant
0xffff8bdf71ec   140  d503201f       constant
0xffff8bdf71f0   144  8bb06000       constant
0xffff8bdf71f4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf7198  code target (STUB)  (0xffff8bd38080)
0xffff8bdf71a8  constant pool (size 16)
0xffff8bdf71d8  runtime entry
0xffff8bdf71e4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf7160     0  mov x6, x0
0xffff8bdf7164     4  tbnz w6, #0, #+0x54 (addr 0xffff8bdf71b8)
0xffff8bdf7168     8  stur x6, [x1, #103]
0xffff8bdf716c    12  stur x5, [x1, #-1]
0xffff8bdf7170    16  tbz w5, #0, #+0x34 (addr 0xffff8bdf71a4)
0xffff8bdf7174    20  sub x2, x1, #0x1 (1)
0xffff8bdf7178    24  and x5, x5, #0xfffffffffff00000
0xffff8bdf717c    28  ldr x5, [x5, #8]
0xffff8bdf7180    32  tbz w5, #1, #+0x24 (addr 0xffff8bdf71a4)
0xffff8bdf7184    36  and x5, x1, #0xfffffffffff00000
0xffff8bdf7188    40  ldr x5, [x5, #8]
0xffff8bdf718c    44  tbz w5, #2, #+0x18 (addr 0xffff8bdf71a4)
0xffff8bdf7190    48  sub csp, jssp, #0x8 (8)
0xffff8bdf7194    52  str lr, [jssp, #-8]!
0xffff8bdf7198    56  ldr x16, pc+24 (addr 0x0000ffff8bdf71b0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf719c    60  blr x16
0xffff8bdf71a0    64  ldr lr, [jssp], #8
0xffff8bdf71a4    68  ret
0xffff8bdf71a8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf71ac    76  d63f03e0       constant
0xffff8bdf71b0    80  8bd38080       constant
0xffff8bdf71b4    84  0000ffff       constant
0xffff8bdf71b8    88  movz x16, #0x0
0xffff8bdf71bc    92  sub csp, jssp, #0x10 (16)
0xffff8bdf71c0    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf71c4   100  bl #+0x4 (addr 0xffff8bdf71c8)
0xffff8bdf71c8   104  movz x17, #0xa00000000
0xffff8bdf71cc   108  sub csp, jssp, #0x10 (16)
0xffff8bdf71d0   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf71d4   116  add fp, jssp, #0x10 (16)
0xffff8bdf71d8   120  ldr x17, pc+24 (addr 0x0000ffff8bdf71f0)    ;; lazy deoptimization bailout 0
0xffff8bdf71dc   124  add x17, x17, x16
0xffff8bdf71e0   128  br x17
0xffff8bdf71e4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf71e8   136  d63f03e0       constant
0xffff8bdf71ec   140  d503201f       constant
0xffff8bdf71f0   144  8bb06000       constant
0xffff8bdf71f4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf7198  code target (STUB)  (0xffff8bd38080)
0xffff8bdf71a8  constant pool (size 16)
0xffff8bdf71d8  runtime entry
0xffff8bdf71e4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = corked
compiler = unknown
Instructions (size = 152)
0xffff8bdf7260     0  sub csp, jssp, #0x8 (8)
0xffff8bdf7264     4  str x3, [jssp, #-8]!
0xffff8bdf7268     8  sub csp, jssp, #0x8 (8)
0xffff8bdf726c    12  str x4, [jssp, #-8]!
0xffff8bdf7270    16  ldr x3, pc+88 (addr 0x0000ffff8bdf72c8)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf7274    20  ldur x3, [x3, #7]
0xffff8bdf7278    24  cmp x3, #0x0 (0)
0xffff8bdf727c    28  b.ne #+0x2c (addr 0xffff8bdf72a8)
0xffff8bdf7280    32  ldr x5, pc+80 (addr 0x0000ffff8bdf72d0)    ;; object: 0x327d1599 WeakCell for 0x5f538399 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf7284    36  ldur x5, [x5, #7]
0xffff8bdf7288    40  tbz w5, #0, #+0x20 (addr 0xffff8bdf72a8)
0xffff8bdf728c    44  ldursw x4, [x5, #15]
0xffff8bdf7290    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdf72a8)
0xffff8bdf7294    52  ldr x4, [jssp], #8
0xffff8bdf7298    56  ldr x3, [jssp], #8
0xffff8bdf729c    60  ldr x2, pc+60 (addr 0x0000ffff8bdf72d8)    ;; object: 0x32722931 <String[6]: corked>
0xffff8bdf72a0    64  ldr x16, pc+64 (addr 0x0000ffff8bdf72e0)    ;; code: HANDLER, StoreTransitionStub, minor: 174093
0xffff8bdf72a4    68  br x16
0xffff8bdf72a8    72  ldr x2, pc+64 (addr 0x0000ffff8bdf72e8)    ;; object: 0x32722931 <String[6]: corked>
0xffff8bdf72ac    76  ldr x4, [jssp], #8
0xffff8bdf72b0    80  ldr x3, [jssp], #8
0xffff8bdf72b4    84  ldr x16, pc+60 (addr 0x0000ffff8bdf72f0)    ;; code: BUILTIN
0xffff8bdf72b8    88  br x16
0xffff8bdf72bc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdf72c0    96  d63f03e0       constant
0xffff8bdf72c4   100  d503201f       constant
0xffff8bdf72c8   104  327e93f9       constant
0xffff8bdf72cc   108  00000000       constant
0xffff8bdf72d0   112  327d1599       constant
0xffff8bdf72d4   116  00000000       constant
0xffff8bdf72d8   120  32722931       constant
0xffff8bdf72dc   124  00000000       constant
0xffff8bdf72e0   128  8bdf7160       constant
0xffff8bdf72e4   132  0000ffff       constant
0xffff8bdf72e8   136  32722931       constant
0xffff8bdf72ec   140  00000000       constant
0xffff8bdf72f0   144  8bd22420       constant
0xffff8bdf72f4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf7270  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf7280  embedded object  (0x327d1599 WeakCell for 0x5f538399 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf729c  embedded object  (0x32722931 <String[6]: corked>)
0xffff8bdf72a0  code target (HANDLER)  (0xffff8bdf7160)
0xffff8bdf72a8  embedded object  (0x32722931 <String[6]: corked>)
0xffff8bdf72b4  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf72bc  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = sync
compiler = unknown
Instructions (size = 152)
0xffff8bdf7360     0  sub csp, jssp, #0x8 (8)
0xffff8bdf7364     4  str x3, [jssp, #-8]!
0xffff8bdf7368     8  sub csp, jssp, #0x8 (8)
0xffff8bdf736c    12  str x4, [jssp, #-8]!
0xffff8bdf7370    16  ldr x3, pc+88 (addr 0x0000ffff8bdf73c8)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf7374    20  ldur x3, [x3, #7]
0xffff8bdf7378    24  cmp x3, #0x0 (0)
0xffff8bdf737c    28  b.ne #+0x30 (addr 0xffff8bdf73ac)
0xffff8bdf7380    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf73ac)
0xffff8bdf7384    36  ldr x5, pc+76 (addr 0x0000ffff8bdf73d0)    ;; object: 0x327d15b1 WeakCell for 0x5f5383f1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf7388    40  ldur x5, [x5, #7]
0xffff8bdf738c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf73ac)
0xffff8bdf7390    48  ldursw x4, [x5, #15]
0xffff8bdf7394    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf73ac)
0xffff8bdf7398    56  ldr x4, [jssp], #8
0xffff8bdf739c    60  ldr x3, [jssp], #8
0xffff8bdf73a0    64  ldr x2, pc+56 (addr 0x0000ffff8bdf73d8)    ;; object: 0x3271d951 <String[4]: sync>
0xffff8bdf73a4    68  ldr x16, pc+60 (addr 0x0000ffff8bdf73e0)    ;; code: HANDLER, StoreTransitionStub, minor: 198670
0xffff8bdf73a8    72  br x16
0xffff8bdf73ac    76  ldr x2, pc+60 (addr 0x0000ffff8bdf73e8)    ;; object: 0x3271d951 <String[4]: sync>
0xffff8bdf73b0    80  ldr x4, [jssp], #8
0xffff8bdf73b4    84  ldr x3, [jssp], #8
0xffff8bdf73b8    88  ldr x16, pc+56 (addr 0x0000ffff8bdf73f0)    ;; code: BUILTIN
0xffff8bdf73bc    92  br x16
0xffff8bdf73c0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf73c4   100  d63f03e0       constant
0xffff8bdf73c8   104  327e93f9       constant
0xffff8bdf73cc   108  00000000       constant
0xffff8bdf73d0   112  327d15b1       constant
0xffff8bdf73d4   116  00000000       constant
0xffff8bdf73d8   120  3271d951       constant
0xffff8bdf73dc   124  00000000       constant
0xffff8bdf73e0   128  8bdd5120       constant
0xffff8bdf73e4   132  0000ffff       constant
0xffff8bdf73e8   136  3271d951       constant
0xffff8bdf73ec   140  00000000       constant
0xffff8bdf73f0   144  8bd22420       constant
0xffff8bdf73f4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf7370  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf7384  embedded object  (0x327d15b1 WeakCell for 0x5f5383f1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf73a0  embedded object  (0x3271d951 <String[4]: sync>)
0xffff8bdf73a4  code target (HANDLER)  (0xffff8bdd5120)
0xffff8bdf73ac  embedded object  (0x3271d951 <String[4]: sync>)
0xffff8bdf73b8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf73c0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = bufferProcessing
compiler = unknown
Instructions (size = 152)
0xffff8bdf7460     0  sub csp, jssp, #0x8 (8)
0xffff8bdf7464     4  str x3, [jssp, #-8]!
0xffff8bdf7468     8  sub csp, jssp, #0x8 (8)
0xffff8bdf746c    12  str x4, [jssp, #-8]!
0xffff8bdf7470    16  ldr x3, pc+88 (addr 0x0000ffff8bdf74c8)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf7474    20  ldur x3, [x3, #7]
0xffff8bdf7478    24  cmp x3, #0x0 (0)
0xffff8bdf747c    28  b.ne #+0x30 (addr 0xffff8bdf74ac)
0xffff8bdf7480    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf74ac)
0xffff8bdf7484    36  ldr x5, pc+76 (addr 0x0000ffff8bdf74d0)    ;; object: 0x327d15c9 WeakCell for 0x5f538449 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf7488    40  ldur x5, [x5, #7]
0xffff8bdf748c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf74ac)
0xffff8bdf7490    48  ldursw x4, [x5, #15]
0xffff8bdf7494    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf74ac)
0xffff8bdf7498    56  ldr x4, [jssp], #8
0xffff8bdf749c    60  ldr x3, [jssp], #8
0xffff8bdf74a0    64  ldr x2, pc+56 (addr 0x0000ffff8bdf74d8)    ;; object: 0x32722951 <String[16]: bufferProcessing>
0xffff8bdf74a4    68  ldr x16, pc+60 (addr 0x0000ffff8bdf74e0)    ;; code: HANDLER, StoreTransitionStub, minor: 198671
0xffff8bdf74a8    72  br x16
0xffff8bdf74ac    76  ldr x2, pc+60 (addr 0x0000ffff8bdf74e8)    ;; object: 0x32722951 <String[16]: bufferProcessing>
0xffff8bdf74b0    80  ldr x4, [jssp], #8
0xffff8bdf74b4    84  ldr x3, [jssp], #8
0xffff8bdf74b8    88  ldr x16, pc+56 (addr 0x0000ffff8bdf74f0)    ;; code: BUILTIN
0xffff8bdf74bc    92  br x16
0xffff8bdf74c0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf74c4   100  d63f03e0       constant
0xffff8bdf74c8   104  327e93f9       constant
0xffff8bdf74cc   108  00000000       constant
0xffff8bdf74d0   112  327d15c9       constant
0xffff8bdf74d4   116  00000000       constant
0xffff8bdf74d8   120  32722951       constant
0xffff8bdf74dc   124  00000000       constant
0xffff8bdf74e0   128  8bdd5380       constant
0xffff8bdf74e4   132  0000ffff       constant
0xffff8bdf74e8   136  32722951       constant
0xffff8bdf74ec   140  00000000       constant
0xffff8bdf74f0   144  8bd22420       constant
0xffff8bdf74f4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf7470  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf7484  embedded object  (0x327d15c9 WeakCell for 0x5f538449 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf74a0  embedded object  (0x32722951 <String[16]: bufferProcessing>)
0xffff8bdf74a4  code target (HANDLER)  (0xffff8bdd5380)
0xffff8bdf74ac  embedded object  (0x32722951 <String[16]: bufferProcessing>)
0xffff8bdf74b8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf74c0  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = onwrite
compiler = unknown
Instructions (size = 152)
0xffff8bdf7560     0  sub csp, jssp, #0x8 (8)
0xffff8bdf7564     4  str x3, [jssp, #-8]!
0xffff8bdf7568     8  sub csp, jssp, #0x8 (8)
0xffff8bdf756c    12  str x4, [jssp, #-8]!
0xffff8bdf7570    16  ldr x3, pc+88 (addr 0x0000ffff8bdf75c8)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf7574    20  ldur x3, [x3, #7]
0xffff8bdf7578    24  cmp x3, #0x0 (0)
0xffff8bdf757c    28  b.ne #+0x30 (addr 0xffff8bdf75ac)
0xffff8bdf7580    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf75ac)
0xffff8bdf7584    36  ldr x5, pc+76 (addr 0x0000ffff8bdf75d0)    ;; object: 0x327e9969 WeakCell for 0x5f5405e1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf7588    40  ldur x5, [x5, #7]
0xffff8bdf758c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf75ac)
0xffff8bdf7590    48  ldursw x4, [x5, #15]
0xffff8bdf7594    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf75ac)
0xffff8bdf7598    56  ldr x4, [jssp], #8
0xffff8bdf759c    60  ldr x3, [jssp], #8
0xffff8bdf75a0    64  ldr x2, pc+56 (addr 0x0000ffff8bdf75d8)    ;; object: 0x26cb2dc1 <String[7]: onwrite>
0xffff8bdf75a4    68  ldr x16, pc+60 (addr 0x0000ffff8bdf75e0)    ;; code: HANDLER, StoreTransitionStub, minor: 198672
0xffff8bdf75a8    72  br x16
0xffff8bdf75ac    76  ldr x2, pc+60 (addr 0x0000ffff8bdf75e8)    ;; object: 0x26cb2dc1 <String[7]: onwrite>
0xffff8bdf75b0    80  ldr x4, [jssp], #8
0xffff8bdf75b4    84  ldr x3, [jssp], #8
0xffff8bdf75b8    88  ldr x16, pc+56 (addr 0x0000ffff8bdf75f0)    ;; code: BUILTIN
0xffff8bdf75bc    92  br x16
0xffff8bdf75c0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf75c4   100  d63f03e0       constant
0xffff8bdf75c8   104  327e93f9       constant
0xffff8bdf75cc   108  00000000       constant
0xffff8bdf75d0   112  327e9969       constant
0xffff8bdf75d4   116  00000000       constant
0xffff8bdf75d8   120  26cb2dc1       constant
0xffff8bdf75dc   124  00000000       constant
0xffff8bdf75e0   128  8bdd55e0       constant
0xffff8bdf75e4   132  0000ffff       constant
0xffff8bdf75e8   136  26cb2dc1       constant
0xffff8bdf75ec   140  00000000       constant
0xffff8bdf75f0   144  8bd22420       constant
0xffff8bdf75f4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf7570  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf7584  embedded object  (0x327e9969 WeakCell for 0x5f5405e1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf75a0  embedded object  (0x26cb2dc1 <String[7]: onwrite>)
0xffff8bdf75a4  code target (HANDLER)  (0xffff8bdd55e0)
0xffff8bdf75ac  embedded object  (0x26cb2dc1 <String[7]: onwrite>)
0xffff8bdf75b8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf75c0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf7660     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf76f0)
0xffff8bdf7664     4  mov x2, x0
0xffff8bdf7668     8  stur x2, [x1, #135]
0xffff8bdf766c    12  add x3, x1, #0x87 (135)
0xffff8bdf7670    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf7674    20  ldr x2, [x2, #8]
0xffff8bdf7678    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf769c)
0xffff8bdf767c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf7680    32  ldr x2, [x2, #8]
0xffff8bdf7684    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf769c)
0xffff8bdf7688    40  sub csp, jssp, #0x8 (8)
0xffff8bdf768c    44  str lr, [jssp, #-8]!
0xffff8bdf7690    48  ldr x16, pc+80 (addr 0x0000ffff8bdf76e0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf7694    52  blr x16
0xffff8bdf7698    56  ldr lr, [jssp], #8
0xffff8bdf769c    60  stur x5, [x1, #-1]
0xffff8bdf76a0    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf76d4)
0xffff8bdf76a4    68  sub x2, x1, #0x1 (1)
0xffff8bdf76a8    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf76ac    76  ldr x5, [x5, #8]
0xffff8bdf76b0    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf76d4)
0xffff8bdf76b4    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf76b8    88  ldr x5, [x5, #8]
0xffff8bdf76bc    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf76d4)
0xffff8bdf76c0    96  sub csp, jssp, #0x8 (8)
0xffff8bdf76c4   100  str lr, [jssp, #-8]!
0xffff8bdf76c8   104  ldr x16, pc+32 (addr 0x0000ffff8bdf76e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf76cc   108  blr x16
0xffff8bdf76d0   112  ldr lr, [jssp], #8
0xffff8bdf76d4   116  ret
0xffff8bdf76d8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf76dc   124  d63f03e0       constant
0xffff8bdf76e0   128  8bd170c0       constant
0xffff8bdf76e4   132  0000ffff       constant
0xffff8bdf76e8   136  8bd38080       constant
0xffff8bdf76ec   140  0000ffff       constant
0xffff8bdf76f0   144  movz x16, #0x0
0xffff8bdf76f4   148  sub csp, jssp, #0x10 (16)
0xffff8bdf76f8   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf76fc   156  bl #+0x4 (addr 0xffff8bdf7700)
0xffff8bdf7700   160  movz x17, #0xa00000000
0xffff8bdf7704   164  sub csp, jssp, #0x10 (16)
0xffff8bdf7708   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf770c   172  add fp, jssp, #0x10 (16)
0xffff8bdf7710   176  ldr x17, pc+24 (addr 0x0000ffff8bdf7728)    ;; lazy deoptimization bailout 0
0xffff8bdf7714   180  add x17, x17, x16
0xffff8bdf7718   184  br x17
0xffff8bdf771c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf7720   192  d63f03e0       constant
0xffff8bdf7724   196  d503201f       constant
0xffff8bdf7728   200  8bb06000       constant
0xffff8bdf772c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf7690  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf76c8  code target (STUB)  (0xffff8bd38080)
0xffff8bdf76d8  constant pool (size 24)
0xffff8bdf7710  runtime entry
0xffff8bdf771c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf7660     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf76f0)
0xffff8bdf7664     4  mov x2, x0
0xffff8bdf7668     8  stur x2, [x1, #135]
0xffff8bdf766c    12  add x3, x1, #0x87 (135)
0xffff8bdf7670    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf7674    20  ldr x2, [x2, #8]
0xffff8bdf7678    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf769c)
0xffff8bdf767c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf7680    32  ldr x2, [x2, #8]
0xffff8bdf7684    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf769c)
0xffff8bdf7688    40  sub csp, jssp, #0x8 (8)
0xffff8bdf768c    44  str lr, [jssp, #-8]!
0xffff8bdf7690    48  ldr x16, pc+80 (addr 0x0000ffff8bdf76e0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf7694    52  blr x16
0xffff8bdf7698    56  ldr lr, [jssp], #8
0xffff8bdf769c    60  stur x5, [x1, #-1]
0xffff8bdf76a0    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf76d4)
0xffff8bdf76a4    68  sub x2, x1, #0x1 (1)
0xffff8bdf76a8    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf76ac    76  ldr x5, [x5, #8]
0xffff8bdf76b0    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf76d4)
0xffff8bdf76b4    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf76b8    88  ldr x5, [x5, #8]
0xffff8bdf76bc    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf76d4)
0xffff8bdf76c0    96  sub csp, jssp, #0x8 (8)
0xffff8bdf76c4   100  str lr, [jssp, #-8]!
0xffff8bdf76c8   104  ldr x16, pc+32 (addr 0x0000ffff8bdf76e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf76cc   108  blr x16
0xffff8bdf76d0   112  ldr lr, [jssp], #8
0xffff8bdf76d4   116  ret
0xffff8bdf76d8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf76dc   124  d63f03e0       constant
0xffff8bdf76e0   128  8bd170c0       constant
0xffff8bdf76e4   132  0000ffff       constant
0xffff8bdf76e8   136  8bd38080       constant
0xffff8bdf76ec   140  0000ffff       constant
0xffff8bdf76f0   144  movz x16, #0x0
0xffff8bdf76f4   148  sub csp, jssp, #0x10 (16)
0xffff8bdf76f8   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf76fc   156  bl #+0x4 (addr 0xffff8bdf7700)
0xffff8bdf7700   160  movz x17, #0xa00000000
0xffff8bdf7704   164  sub csp, jssp, #0x10 (16)
0xffff8bdf7708   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf770c   172  add fp, jssp, #0x10 (16)
0xffff8bdf7710   176  ldr x17, pc+24 (addr 0x0000ffff8bdf7728)    ;; lazy deoptimization bailout 0
0xffff8bdf7714   180  add x17, x17, x16
0xffff8bdf7718   184  br x17
0xffff8bdf771c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf7720   192  d63f03e0       constant
0xffff8bdf7724   196  d503201f       constant
0xffff8bdf7728   200  8bb06000       constant
0xffff8bdf772c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf7690  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf76c8  code target (STUB)  (0xffff8bd38080)
0xffff8bdf76d8  constant pool (size 24)
0xffff8bdf7710  runtime entry
0xffff8bdf771c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = writecb
compiler = unknown
Instructions (size = 152)
0xffff8bdf77a0     0  sub csp, jssp, #0x8 (8)
0xffff8bdf77a4     4  str x3, [jssp, #-8]!
0xffff8bdf77a8     8  sub csp, jssp, #0x8 (8)
0xffff8bdf77ac    12  str x4, [jssp, #-8]!
0xffff8bdf77b0    16  ldr x3, pc+88 (addr 0x0000ffff8bdf7808)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf77b4    20  ldur x3, [x3, #7]
0xffff8bdf77b8    24  cmp x3, #0x0 (0)
0xffff8bdf77bc    28  b.ne #+0x30 (addr 0xffff8bdf77ec)
0xffff8bdf77c0    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf77ec)
0xffff8bdf77c4    36  ldr x5, pc+76 (addr 0x0000ffff8bdf7810)    ;; object: 0x327e99a1 WeakCell for 0x5f540639 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf77c8    40  ldur x5, [x5, #7]
0xffff8bdf77cc    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf77ec)
0xffff8bdf77d0    48  ldursw x4, [x5, #15]
0xffff8bdf77d4    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf77ec)
0xffff8bdf77d8    56  ldr x4, [jssp], #8
0xffff8bdf77dc    60  ldr x3, [jssp], #8
0xffff8bdf77e0    64  ldr x2, pc+56 (addr 0x0000ffff8bdf7818)    ;; object: 0x32722979 <String[7]: writecb>
0xffff8bdf77e4    68  ldr x16, pc+60 (addr 0x0000ffff8bdf7820)    ;; code: HANDLER, StoreTransitionStub, minor: 198673
0xffff8bdf77e8    72  br x16
0xffff8bdf77ec    76  ldr x2, pc+60 (addr 0x0000ffff8bdf7828)    ;; object: 0x32722979 <String[7]: writecb>
0xffff8bdf77f0    80  ldr x4, [jssp], #8
0xffff8bdf77f4    84  ldr x3, [jssp], #8
0xffff8bdf77f8    88  ldr x16, pc+56 (addr 0x0000ffff8bdf7830)    ;; code: BUILTIN
0xffff8bdf77fc    92  br x16
0xffff8bdf7800    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf7804   100  d63f03e0       constant
0xffff8bdf7808   104  327e93f9       constant
0xffff8bdf780c   108  00000000       constant
0xffff8bdf7810   112  327e99a1       constant
0xffff8bdf7814   116  00000000       constant
0xffff8bdf7818   120  32722979       constant
0xffff8bdf781c   124  00000000       constant
0xffff8bdf7820   128  8bdf7660       constant
0xffff8bdf7824   132  0000ffff       constant
0xffff8bdf7828   136  32722979       constant
0xffff8bdf782c   140  00000000       constant
0xffff8bdf7830   144  8bd22420       constant
0xffff8bdf7834   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf77b0  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf77c4  embedded object  (0x327e99a1 WeakCell for 0x5f540639 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf77e0  embedded object  (0x32722979 <String[7]: writecb>)
0xffff8bdf77e4  code target (HANDLER)  (0xffff8bdf7660)
0xffff8bdf77ec  embedded object  (0x32722979 <String[7]: writecb>)
0xffff8bdf77f8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf7800  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf78a0     0  mov x6, x0
0xffff8bdf78a4     4  tbnz w6, #0, #+0x54 (addr 0xffff8bdf78f8)
0xffff8bdf78a8     8  stur x6, [x1, #143]
0xffff8bdf78ac    12  stur x5, [x1, #-1]
0xffff8bdf78b0    16  tbz w5, #0, #+0x34 (addr 0xffff8bdf78e4)
0xffff8bdf78b4    20  sub x2, x1, #0x1 (1)
0xffff8bdf78b8    24  and x5, x5, #0xfffffffffff00000
0xffff8bdf78bc    28  ldr x5, [x5, #8]
0xffff8bdf78c0    32  tbz w5, #1, #+0x24 (addr 0xffff8bdf78e4)
0xffff8bdf78c4    36  and x5, x1, #0xfffffffffff00000
0xffff8bdf78c8    40  ldr x5, [x5, #8]
0xffff8bdf78cc    44  tbz w5, #2, #+0x18 (addr 0xffff8bdf78e4)
0xffff8bdf78d0    48  sub csp, jssp, #0x8 (8)
0xffff8bdf78d4    52  str lr, [jssp, #-8]!
0xffff8bdf78d8    56  ldr x16, pc+24 (addr 0x0000ffff8bdf78f0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf78dc    60  blr x16
0xffff8bdf78e0    64  ldr lr, [jssp], #8
0xffff8bdf78e4    68  ret
0xffff8bdf78e8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf78ec    76  d63f03e0       constant
0xffff8bdf78f0    80  8bd38080       constant
0xffff8bdf78f4    84  0000ffff       constant
0xffff8bdf78f8    88  movz x16, #0x0
0xffff8bdf78fc    92  sub csp, jssp, #0x10 (16)
0xffff8bdf7900    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf7904   100  bl #+0x4 (addr 0xffff8bdf7908)
0xffff8bdf7908   104  movz x17, #0xa00000000
0xffff8bdf790c   108  sub csp, jssp, #0x10 (16)
0xffff8bdf7910   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf7914   116  add fp, jssp, #0x10 (16)
0xffff8bdf7918   120  ldr x17, pc+24 (addr 0x0000ffff8bdf7930)    ;; lazy deoptimization bailout 0
0xffff8bdf791c   124  add x17, x17, x16
0xffff8bdf7920   128  br x17
0xffff8bdf7924   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf7928   136  d63f03e0       constant
0xffff8bdf792c   140  d503201f       constant
0xffff8bdf7930   144  8bb06000       constant
0xffff8bdf7934   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf78d8  code target (STUB)  (0xffff8bd38080)
0xffff8bdf78e8  constant pool (size 16)
0xffff8bdf7918  runtime entry
0xffff8bdf7924  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf78a0     0  mov x6, x0
0xffff8bdf78a4     4  tbnz w6, #0, #+0x54 (addr 0xffff8bdf78f8)
0xffff8bdf78a8     8  stur x6, [x1, #143]
0xffff8bdf78ac    12  stur x5, [x1, #-1]
0xffff8bdf78b0    16  tbz w5, #0, #+0x34 (addr 0xffff8bdf78e4)
0xffff8bdf78b4    20  sub x2, x1, #0x1 (1)
0xffff8bdf78b8    24  and x5, x5, #0xfffffffffff00000
0xffff8bdf78bc    28  ldr x5, [x5, #8]
0xffff8bdf78c0    32  tbz w5, #1, #+0x24 (addr 0xffff8bdf78e4)
0xffff8bdf78c4    36  and x5, x1, #0xfffffffffff00000
0xffff8bdf78c8    40  ldr x5, [x5, #8]
0xffff8bdf78cc    44  tbz w5, #2, #+0x18 (addr 0xffff8bdf78e4)
0xffff8bdf78d0    48  sub csp, jssp, #0x8 (8)
0xffff8bdf78d4    52  str lr, [jssp, #-8]!
0xffff8bdf78d8    56  ldr x16, pc+24 (addr 0x0000ffff8bdf78f0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf78dc    60  blr x16
0xffff8bdf78e0    64  ldr lr, [jssp], #8
0xffff8bdf78e4    68  ret
0xffff8bdf78e8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf78ec    76  d63f03e0       constant
0xffff8bdf78f0    80  8bd38080       constant
0xffff8bdf78f4    84  0000ffff       constant
0xffff8bdf78f8    88  movz x16, #0x0
0xffff8bdf78fc    92  sub csp, jssp, #0x10 (16)
0xffff8bdf7900    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf7904   100  bl #+0x4 (addr 0xffff8bdf7908)
0xffff8bdf7908   104  movz x17, #0xa00000000
0xffff8bdf790c   108  sub csp, jssp, #0x10 (16)
0xffff8bdf7910   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf7914   116  add fp, jssp, #0x10 (16)
0xffff8bdf7918   120  ldr x17, pc+24 (addr 0x0000ffff8bdf7930)    ;; lazy deoptimization bailout 0
0xffff8bdf791c   124  add x17, x17, x16
0xffff8bdf7920   128  br x17
0xffff8bdf7924   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf7928   136  d63f03e0       constant
0xffff8bdf792c   140  d503201f       constant
0xffff8bdf7930   144  8bb06000       constant
0xffff8bdf7934   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf78d8  code target (STUB)  (0xffff8bd38080)
0xffff8bdf78e8  constant pool (size 16)
0xffff8bdf7918  runtime entry
0xffff8bdf7924  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = writelen
compiler = unknown
Instructions (size = 152)
0xffff8bdf79a0     0  sub csp, jssp, #0x8 (8)
0xffff8bdf79a4     4  str x3, [jssp, #-8]!
0xffff8bdf79a8     8  sub csp, jssp, #0x8 (8)
0xffff8bdf79ac    12  str x4, [jssp, #-8]!
0xffff8bdf79b0    16  ldr x3, pc+88 (addr 0x0000ffff8bdf7a08)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf79b4    20  ldur x3, [x3, #7]
0xffff8bdf79b8    24  cmp x3, #0x0 (0)
0xffff8bdf79bc    28  b.ne #+0x2c (addr 0xffff8bdf79e8)
0xffff8bdf79c0    32  ldr x5, pc+80 (addr 0x0000ffff8bdf7a10)    ;; object: 0x327e9a91 WeakCell for 0x5f540691 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf79c4    36  ldur x5, [x5, #7]
0xffff8bdf79c8    40  tbz w5, #0, #+0x20 (addr 0xffff8bdf79e8)
0xffff8bdf79cc    44  ldursw x4, [x5, #15]
0xffff8bdf79d0    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdf79e8)
0xffff8bdf79d4    52  ldr x4, [jssp], #8
0xffff8bdf79d8    56  ldr x3, [jssp], #8
0xffff8bdf79dc    60  ldr x2, pc+60 (addr 0x0000ffff8bdf7a18)    ;; object: 0x32722999 <String[8]: writelen>
0xffff8bdf79e0    64  ldr x16, pc+64 (addr 0x0000ffff8bdf7a20)    ;; code: HANDLER, StoreTransitionStub, minor: 174098
0xffff8bdf79e4    68  br x16
0xffff8bdf79e8    72  ldr x2, pc+64 (addr 0x0000ffff8bdf7a28)    ;; object: 0x32722999 <String[8]: writelen>
0xffff8bdf79ec    76  ldr x4, [jssp], #8
0xffff8bdf79f0    80  ldr x3, [jssp], #8
0xffff8bdf79f4    84  ldr x16, pc+60 (addr 0x0000ffff8bdf7a30)    ;; code: BUILTIN
0xffff8bdf79f8    88  br x16
0xffff8bdf79fc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdf7a00    96  d63f03e0       constant
0xffff8bdf7a04   100  d503201f       constant
0xffff8bdf7a08   104  327e93f9       constant
0xffff8bdf7a0c   108  00000000       constant
0xffff8bdf7a10   112  327e9a91       constant
0xffff8bdf7a14   116  00000000       constant
0xffff8bdf7a18   120  32722999       constant
0xffff8bdf7a1c   124  00000000       constant
0xffff8bdf7a20   128  8bdf78a0       constant
0xffff8bdf7a24   132  0000ffff       constant
0xffff8bdf7a28   136  32722999       constant
0xffff8bdf7a2c   140  00000000       constant
0xffff8bdf7a30   144  8bd22420       constant
0xffff8bdf7a34   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf79b0  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf79c0  embedded object  (0x327e9a91 WeakCell for 0x5f540691 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf79dc  embedded object  (0x32722999 <String[8]: writelen>)
0xffff8bdf79e0  code target (HANDLER)  (0xffff8bdf78a0)
0xffff8bdf79e8  embedded object  (0x32722999 <String[8]: writelen>)
0xffff8bdf79f4  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf79fc  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf7aa0     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf7b30)
0xffff8bdf7aa4     4  mov x2, x0
0xffff8bdf7aa8     8  stur x2, [x1, #151]
0xffff8bdf7aac    12  add x3, x1, #0x97 (151)
0xffff8bdf7ab0    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf7ab4    20  ldr x2, [x2, #8]
0xffff8bdf7ab8    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf7adc)
0xffff8bdf7abc    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf7ac0    32  ldr x2, [x2, #8]
0xffff8bdf7ac4    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf7adc)
0xffff8bdf7ac8    40  sub csp, jssp, #0x8 (8)
0xffff8bdf7acc    44  str lr, [jssp, #-8]!
0xffff8bdf7ad0    48  ldr x16, pc+80 (addr 0x0000ffff8bdf7b20)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf7ad4    52  blr x16
0xffff8bdf7ad8    56  ldr lr, [jssp], #8
0xffff8bdf7adc    60  stur x5, [x1, #-1]
0xffff8bdf7ae0    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf7b14)
0xffff8bdf7ae4    68  sub x2, x1, #0x1 (1)
0xffff8bdf7ae8    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf7aec    76  ldr x5, [x5, #8]
0xffff8bdf7af0    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf7b14)
0xffff8bdf7af4    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf7af8    88  ldr x5, [x5, #8]
0xffff8bdf7afc    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf7b14)
0xffff8bdf7b00    96  sub csp, jssp, #0x8 (8)
0xffff8bdf7b04   100  str lr, [jssp, #-8]!
0xffff8bdf7b08   104  ldr x16, pc+32 (addr 0x0000ffff8bdf7b28)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf7b0c   108  blr x16
0xffff8bdf7b10   112  ldr lr, [jssp], #8
0xffff8bdf7b14   116  ret
0xffff8bdf7b18   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf7b1c   124  d63f03e0       constant
0xffff8bdf7b20   128  8bd170c0       constant
0xffff8bdf7b24   132  0000ffff       constant
0xffff8bdf7b28   136  8bd38080       constant
0xffff8bdf7b2c   140  0000ffff       constant
0xffff8bdf7b30   144  movz x16, #0x0
0xffff8bdf7b34   148  sub csp, jssp, #0x10 (16)
0xffff8bdf7b38   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf7b3c   156  bl #+0x4 (addr 0xffff8bdf7b40)
0xffff8bdf7b40   160  movz x17, #0xa00000000
0xffff8bdf7b44   164  sub csp, jssp, #0x10 (16)
0xffff8bdf7b48   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf7b4c   172  add fp, jssp, #0x10 (16)
0xffff8bdf7b50   176  ldr x17, pc+24 (addr 0x0000ffff8bdf7b68)    ;; lazy deoptimization bailout 0
0xffff8bdf7b54   180  add x17, x17, x16
0xffff8bdf7b58   184  br x17
0xffff8bdf7b5c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf7b60   192  d63f03e0       constant
0xffff8bdf7b64   196  d503201f       constant
0xffff8bdf7b68   200  8bb06000       constant
0xffff8bdf7b6c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf7ad0  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf7b08  code target (STUB)  (0xffff8bd38080)
0xffff8bdf7b18  constant pool (size 24)
0xffff8bdf7b50  runtime entry
0xffff8bdf7b5c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf7aa0     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf7b30)
0xffff8bdf7aa4     4  mov x2, x0
0xffff8bdf7aa8     8  stur x2, [x1, #151]
0xffff8bdf7aac    12  add x3, x1, #0x97 (151)
0xffff8bdf7ab0    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf7ab4    20  ldr x2, [x2, #8]
0xffff8bdf7ab8    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf7adc)
0xffff8bdf7abc    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf7ac0    32  ldr x2, [x2, #8]
0xffff8bdf7ac4    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf7adc)
0xffff8bdf7ac8    40  sub csp, jssp, #0x8 (8)
0xffff8bdf7acc    44  str lr, [jssp, #-8]!
0xffff8bdf7ad0    48  ldr x16, pc+80 (addr 0x0000ffff8bdf7b20)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf7ad4    52  blr x16
0xffff8bdf7ad8    56  ldr lr, [jssp], #8
0xffff8bdf7adc    60  stur x5, [x1, #-1]
0xffff8bdf7ae0    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf7b14)
0xffff8bdf7ae4    68  sub x2, x1, #0x1 (1)
0xffff8bdf7ae8    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf7aec    76  ldr x5, [x5, #8]
0xffff8bdf7af0    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf7b14)
0xffff8bdf7af4    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf7af8    88  ldr x5, [x5, #8]
0xffff8bdf7afc    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf7b14)
0xffff8bdf7b00    96  sub csp, jssp, #0x8 (8)
0xffff8bdf7b04   100  str lr, [jssp, #-8]!
0xffff8bdf7b08   104  ldr x16, pc+32 (addr 0x0000ffff8bdf7b28)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf7b0c   108  blr x16
0xffff8bdf7b10   112  ldr lr, [jssp], #8
0xffff8bdf7b14   116  ret
0xffff8bdf7b18   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf7b1c   124  d63f03e0       constant
0xffff8bdf7b20   128  8bd170c0       constant
0xffff8bdf7b24   132  0000ffff       constant
0xffff8bdf7b28   136  8bd38080       constant
0xffff8bdf7b2c   140  0000ffff       constant
0xffff8bdf7b30   144  movz x16, #0x0
0xffff8bdf7b34   148  sub csp, jssp, #0x10 (16)
0xffff8bdf7b38   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf7b3c   156  bl #+0x4 (addr 0xffff8bdf7b40)
0xffff8bdf7b40   160  movz x17, #0xa00000000
0xffff8bdf7b44   164  sub csp, jssp, #0x10 (16)
0xffff8bdf7b48   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf7b4c   172  add fp, jssp, #0x10 (16)
0xffff8bdf7b50   176  ldr x17, pc+24 (addr 0x0000ffff8bdf7b68)    ;; lazy deoptimization bailout 0
0xffff8bdf7b54   180  add x17, x17, x16
0xffff8bdf7b58   184  br x17
0xffff8bdf7b5c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf7b60   192  d63f03e0       constant
0xffff8bdf7b64   196  d503201f       constant
0xffff8bdf7b68   200  8bb06000       constant
0xffff8bdf7b6c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf7ad0  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf7b08  code target (STUB)  (0xffff8bd38080)
0xffff8bdf7b18  constant pool (size 24)
0xffff8bdf7b50  runtime entry
0xffff8bdf7b5c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = bufferedRequest
compiler = unknown
Instructions (size = 152)
0xffff8bdf7be0     0  sub csp, jssp, #0x8 (8)
0xffff8bdf7be4     4  str x3, [jssp, #-8]!
0xffff8bdf7be8     8  sub csp, jssp, #0x8 (8)
0xffff8bdf7bec    12  str x4, [jssp, #-8]!
0xffff8bdf7bf0    16  ldr x3, pc+88 (addr 0x0000ffff8bdf7c48)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf7bf4    20  ldur x3, [x3, #7]
0xffff8bdf7bf8    24  cmp x3, #0x0 (0)
0xffff8bdf7bfc    28  b.ne #+0x30 (addr 0xffff8bdf7c2c)
0xffff8bdf7c00    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf7c2c)
0xffff8bdf7c04    36  ldr x5, pc+76 (addr 0x0000ffff8bdf7c50)    ;; object: 0x327e9b81 WeakCell for 0x5f5406e9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf7c08    40  ldur x5, [x5, #7]
0xffff8bdf7c0c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf7c2c)
0xffff8bdf7c10    48  ldursw x4, [x5, #15]
0xffff8bdf7c14    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf7c2c)
0xffff8bdf7c18    56  ldr x4, [jssp], #8
0xffff8bdf7c1c    60  ldr x3, [jssp], #8
0xffff8bdf7c20    64  ldr x2, pc+56 (addr 0x0000ffff8bdf7c58)    ;; object: 0x327229b9 <String[15]: bufferedRequest>
0xffff8bdf7c24    68  ldr x16, pc+60 (addr 0x0000ffff8bdf7c60)    ;; code: HANDLER, StoreTransitionStub, minor: 198675
0xffff8bdf7c28    72  br x16
0xffff8bdf7c2c    76  ldr x2, pc+60 (addr 0x0000ffff8bdf7c68)    ;; object: 0x327229b9 <String[15]: bufferedRequest>
0xffff8bdf7c30    80  ldr x4, [jssp], #8
0xffff8bdf7c34    84  ldr x3, [jssp], #8
0xffff8bdf7c38    88  ldr x16, pc+56 (addr 0x0000ffff8bdf7c70)    ;; code: BUILTIN
0xffff8bdf7c3c    92  br x16
0xffff8bdf7c40    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf7c44   100  d63f03e0       constant
0xffff8bdf7c48   104  327e93f9       constant
0xffff8bdf7c4c   108  00000000       constant
0xffff8bdf7c50   112  327e9b81       constant
0xffff8bdf7c54   116  00000000       constant
0xffff8bdf7c58   120  327229b9       constant
0xffff8bdf7c5c   124  00000000       constant
0xffff8bdf7c60   128  8bdf7aa0       constant
0xffff8bdf7c64   132  0000ffff       constant
0xffff8bdf7c68   136  327229b9       constant
0xffff8bdf7c6c   140  00000000       constant
0xffff8bdf7c70   144  8bd22420       constant
0xffff8bdf7c74   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf7bf0  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf7c04  embedded object  (0x327e9b81 WeakCell for 0x5f5406e9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf7c20  embedded object  (0x327229b9 <String[15]: bufferedRequest>)
0xffff8bdf7c24  code target (HANDLER)  (0xffff8bdf7aa0)
0xffff8bdf7c2c  embedded object  (0x327229b9 <String[15]: bufferedRequest>)
0xffff8bdf7c38  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf7c40  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf7ce0     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf7d70)
0xffff8bdf7ce4     4  mov x2, x0
0xffff8bdf7ce8     8  stur x2, [x1, #159]
0xffff8bdf7cec    12  add x3, x1, #0x9f (159)
0xffff8bdf7cf0    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf7cf4    20  ldr x2, [x2, #8]
0xffff8bdf7cf8    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf7d1c)
0xffff8bdf7cfc    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf7d00    32  ldr x2, [x2, #8]
0xffff8bdf7d04    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf7d1c)
0xffff8bdf7d08    40  sub csp, jssp, #0x8 (8)
0xffff8bdf7d0c    44  str lr, [jssp, #-8]!
0xffff8bdf7d10    48  ldr x16, pc+80 (addr 0x0000ffff8bdf7d60)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf7d14    52  blr x16
0xffff8bdf7d18    56  ldr lr, [jssp], #8
0xffff8bdf7d1c    60  stur x5, [x1, #-1]
0xffff8bdf7d20    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf7d54)
0xffff8bdf7d24    68  sub x2, x1, #0x1 (1)
0xffff8bdf7d28    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf7d2c    76  ldr x5, [x5, #8]
0xffff8bdf7d30    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf7d54)
0xffff8bdf7d34    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf7d38    88  ldr x5, [x5, #8]
0xffff8bdf7d3c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf7d54)
0xffff8bdf7d40    96  sub csp, jssp, #0x8 (8)
0xffff8bdf7d44   100  str lr, [jssp, #-8]!
0xffff8bdf7d48   104  ldr x16, pc+32 (addr 0x0000ffff8bdf7d68)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf7d4c   108  blr x16
0xffff8bdf7d50   112  ldr lr, [jssp], #8
0xffff8bdf7d54   116  ret
0xffff8bdf7d58   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf7d5c   124  d63f03e0       constant
0xffff8bdf7d60   128  8bd170c0       constant
0xffff8bdf7d64   132  0000ffff       constant
0xffff8bdf7d68   136  8bd38080       constant
0xffff8bdf7d6c   140  0000ffff       constant
0xffff8bdf7d70   144  movz x16, #0x0
0xffff8bdf7d74   148  sub csp, jssp, #0x10 (16)
0xffff8bdf7d78   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf7d7c   156  bl #+0x4 (addr 0xffff8bdf7d80)
0xffff8bdf7d80   160  movz x17, #0xa00000000
0xffff8bdf7d84   164  sub csp, jssp, #0x10 (16)
0xffff8bdf7d88   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf7d8c   172  add fp, jssp, #0x10 (16)
0xffff8bdf7d90   176  ldr x17, pc+24 (addr 0x0000ffff8bdf7da8)    ;; lazy deoptimization bailout 0
0xffff8bdf7d94   180  add x17, x17, x16
0xffff8bdf7d98   184  br x17
0xffff8bdf7d9c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf7da0   192  d63f03e0       constant
0xffff8bdf7da4   196  d503201f       constant
0xffff8bdf7da8   200  8bb06000       constant
0xffff8bdf7dac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf7d10  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf7d48  code target (STUB)  (0xffff8bd38080)
0xffff8bdf7d58  constant pool (size 24)
0xffff8bdf7d90  runtime entry
0xffff8bdf7d9c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf7ce0     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf7d70)
0xffff8bdf7ce4     4  mov x2, x0
0xffff8bdf7ce8     8  stur x2, [x1, #159]
0xffff8bdf7cec    12  add x3, x1, #0x9f (159)
0xffff8bdf7cf0    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf7cf4    20  ldr x2, [x2, #8]
0xffff8bdf7cf8    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf7d1c)
0xffff8bdf7cfc    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf7d00    32  ldr x2, [x2, #8]
0xffff8bdf7d04    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf7d1c)
0xffff8bdf7d08    40  sub csp, jssp, #0x8 (8)
0xffff8bdf7d0c    44  str lr, [jssp, #-8]!
0xffff8bdf7d10    48  ldr x16, pc+80 (addr 0x0000ffff8bdf7d60)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf7d14    52  blr x16
0xffff8bdf7d18    56  ldr lr, [jssp], #8
0xffff8bdf7d1c    60  stur x5, [x1, #-1]
0xffff8bdf7d20    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf7d54)
0xffff8bdf7d24    68  sub x2, x1, #0x1 (1)
0xffff8bdf7d28    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf7d2c    76  ldr x5, [x5, #8]
0xffff8bdf7d30    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf7d54)
0xffff8bdf7d34    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf7d38    88  ldr x5, [x5, #8]
0xffff8bdf7d3c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf7d54)
0xffff8bdf7d40    96  sub csp, jssp, #0x8 (8)
0xffff8bdf7d44   100  str lr, [jssp, #-8]!
0xffff8bdf7d48   104  ldr x16, pc+32 (addr 0x0000ffff8bdf7d68)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf7d4c   108  blr x16
0xffff8bdf7d50   112  ldr lr, [jssp], #8
0xffff8bdf7d54   116  ret
0xffff8bdf7d58   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf7d5c   124  d63f03e0       constant
0xffff8bdf7d60   128  8bd170c0       constant
0xffff8bdf7d64   132  0000ffff       constant
0xffff8bdf7d68   136  8bd38080       constant
0xffff8bdf7d6c   140  0000ffff       constant
0xffff8bdf7d70   144  movz x16, #0x0
0xffff8bdf7d74   148  sub csp, jssp, #0x10 (16)
0xffff8bdf7d78   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf7d7c   156  bl #+0x4 (addr 0xffff8bdf7d80)
0xffff8bdf7d80   160  movz x17, #0xa00000000
0xffff8bdf7d84   164  sub csp, jssp, #0x10 (16)
0xffff8bdf7d88   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf7d8c   172  add fp, jssp, #0x10 (16)
0xffff8bdf7d90   176  ldr x17, pc+24 (addr 0x0000ffff8bdf7da8)    ;; lazy deoptimization bailout 0
0xffff8bdf7d94   180  add x17, x17, x16
0xffff8bdf7d98   184  br x17
0xffff8bdf7d9c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf7da0   192  d63f03e0       constant
0xffff8bdf7da4   196  d503201f       constant
0xffff8bdf7da8   200  8bb06000       constant
0xffff8bdf7dac   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf7d10  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf7d48  code target (STUB)  (0xffff8bd38080)
0xffff8bdf7d58  constant pool (size 24)
0xffff8bdf7d90  runtime entry
0xffff8bdf7d9c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = lastBufferedRequest
compiler = unknown
Instructions (size = 152)
0xffff8bdf7e20     0  sub csp, jssp, #0x8 (8)
0xffff8bdf7e24     4  str x3, [jssp, #-8]!
0xffff8bdf7e28     8  sub csp, jssp, #0x8 (8)
0xffff8bdf7e2c    12  str x4, [jssp, #-8]!
0xffff8bdf7e30    16  ldr x3, pc+88 (addr 0x0000ffff8bdf7e88)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf7e34    20  ldur x3, [x3, #7]
0xffff8bdf7e38    24  cmp x3, #0x0 (0)
0xffff8bdf7e3c    28  b.ne #+0x30 (addr 0xffff8bdf7e6c)
0xffff8bdf7e40    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf7e6c)
0xffff8bdf7e44    36  ldr x5, pc+76 (addr 0x0000ffff8bdf7e90)    ;; object: 0x327e9c71 WeakCell for 0x5f540741 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf7e48    40  ldur x5, [x5, #7]
0xffff8bdf7e4c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf7e6c)
0xffff8bdf7e50    48  ldursw x4, [x5, #15]
0xffff8bdf7e54    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf7e6c)
0xffff8bdf7e58    56  ldr x4, [jssp], #8
0xffff8bdf7e5c    60  ldr x3, [jssp], #8
0xffff8bdf7e60    64  ldr x2, pc+56 (addr 0x0000ffff8bdf7e98)    ;; object: 0x327229e1 <String[19]: lastBufferedRequest>
0xffff8bdf7e64    68  ldr x16, pc+60 (addr 0x0000ffff8bdf7ea0)    ;; code: HANDLER, StoreTransitionStub, minor: 198676
0xffff8bdf7e68    72  br x16
0xffff8bdf7e6c    76  ldr x2, pc+60 (addr 0x0000ffff8bdf7ea8)    ;; object: 0x327229e1 <String[19]: lastBufferedRequest>
0xffff8bdf7e70    80  ldr x4, [jssp], #8
0xffff8bdf7e74    84  ldr x3, [jssp], #8
0xffff8bdf7e78    88  ldr x16, pc+56 (addr 0x0000ffff8bdf7eb0)    ;; code: BUILTIN
0xffff8bdf7e7c    92  br x16
0xffff8bdf7e80    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf7e84   100  d63f03e0       constant
0xffff8bdf7e88   104  327e93f9       constant
0xffff8bdf7e8c   108  00000000       constant
0xffff8bdf7e90   112  327e9c71       constant
0xffff8bdf7e94   116  00000000       constant
0xffff8bdf7e98   120  327229e1       constant
0xffff8bdf7e9c   124  00000000       constant
0xffff8bdf7ea0   128  8bdf7ce0       constant
0xffff8bdf7ea4   132  0000ffff       constant
0xffff8bdf7ea8   136  327229e1       constant
0xffff8bdf7eac   140  00000000       constant
0xffff8bdf7eb0   144  8bd22420       constant
0xffff8bdf7eb4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf7e30  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf7e44  embedded object  (0x327e9c71 WeakCell for 0x5f540741 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf7e60  embedded object  (0x327229e1 <String[19]: lastBufferedRequest>)
0xffff8bdf7e64  code target (HANDLER)  (0xffff8bdf7ce0)
0xffff8bdf7e6c  embedded object  (0x327229e1 <String[19]: lastBufferedRequest>)
0xffff8bdf7e78  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf7e80  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf7f20     0  mov x6, x0
0xffff8bdf7f24     4  tbnz w6, #0, #+0x54 (addr 0xffff8bdf7f78)
0xffff8bdf7f28     8  stur x6, [x1, #167]
0xffff8bdf7f2c    12  stur x5, [x1, #-1]
0xffff8bdf7f30    16  tbz w5, #0, #+0x34 (addr 0xffff8bdf7f64)
0xffff8bdf7f34    20  sub x2, x1, #0x1 (1)
0xffff8bdf7f38    24  and x5, x5, #0xfffffffffff00000
0xffff8bdf7f3c    28  ldr x5, [x5, #8]
0xffff8bdf7f40    32  tbz w5, #1, #+0x24 (addr 0xffff8bdf7f64)
0xffff8bdf7f44    36  and x5, x1, #0xfffffffffff00000
0xffff8bdf7f48    40  ldr x5, [x5, #8]
0xffff8bdf7f4c    44  tbz w5, #2, #+0x18 (addr 0xffff8bdf7f64)
0xffff8bdf7f50    48  sub csp, jssp, #0x8 (8)
0xffff8bdf7f54    52  str lr, [jssp, #-8]!
0xffff8bdf7f58    56  ldr x16, pc+24 (addr 0x0000ffff8bdf7f70)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf7f5c    60  blr x16
0xffff8bdf7f60    64  ldr lr, [jssp], #8
0xffff8bdf7f64    68  ret
0xffff8bdf7f68    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf7f6c    76  d63f03e0       constant
0xffff8bdf7f70    80  8bd38080       constant
0xffff8bdf7f74    84  0000ffff       constant
0xffff8bdf7f78    88  movz x16, #0x0
0xffff8bdf7f7c    92  sub csp, jssp, #0x10 (16)
0xffff8bdf7f80    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf7f84   100  bl #+0x4 (addr 0xffff8bdf7f88)
0xffff8bdf7f88   104  movz x17, #0xa00000000
0xffff8bdf7f8c   108  sub csp, jssp, #0x10 (16)
0xffff8bdf7f90   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf7f94   116  add fp, jssp, #0x10 (16)
0xffff8bdf7f98   120  ldr x17, pc+24 (addr 0x0000ffff8bdf7fb0)    ;; lazy deoptimization bailout 0
0xffff8bdf7f9c   124  add x17, x17, x16
0xffff8bdf7fa0   128  br x17
0xffff8bdf7fa4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf7fa8   136  d63f03e0       constant
0xffff8bdf7fac   140  d503201f       constant
0xffff8bdf7fb0   144  8bb06000       constant
0xffff8bdf7fb4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf7f58  code target (STUB)  (0xffff8bd38080)
0xffff8bdf7f68  constant pool (size 16)
0xffff8bdf7f98  runtime entry
0xffff8bdf7fa4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf7f20     0  mov x6, x0
0xffff8bdf7f24     4  tbnz w6, #0, #+0x54 (addr 0xffff8bdf7f78)
0xffff8bdf7f28     8  stur x6, [x1, #167]
0xffff8bdf7f2c    12  stur x5, [x1, #-1]
0xffff8bdf7f30    16  tbz w5, #0, #+0x34 (addr 0xffff8bdf7f64)
0xffff8bdf7f34    20  sub x2, x1, #0x1 (1)
0xffff8bdf7f38    24  and x5, x5, #0xfffffffffff00000
0xffff8bdf7f3c    28  ldr x5, [x5, #8]
0xffff8bdf7f40    32  tbz w5, #1, #+0x24 (addr 0xffff8bdf7f64)
0xffff8bdf7f44    36  and x5, x1, #0xfffffffffff00000
0xffff8bdf7f48    40  ldr x5, [x5, #8]
0xffff8bdf7f4c    44  tbz w5, #2, #+0x18 (addr 0xffff8bdf7f64)
0xffff8bdf7f50    48  sub csp, jssp, #0x8 (8)
0xffff8bdf7f54    52  str lr, [jssp, #-8]!
0xffff8bdf7f58    56  ldr x16, pc+24 (addr 0x0000ffff8bdf7f70)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf7f5c    60  blr x16
0xffff8bdf7f60    64  ldr lr, [jssp], #8
0xffff8bdf7f64    68  ret
0xffff8bdf7f68    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf7f6c    76  d63f03e0       constant
0xffff8bdf7f70    80  8bd38080       constant
0xffff8bdf7f74    84  0000ffff       constant
0xffff8bdf7f78    88  movz x16, #0x0
0xffff8bdf7f7c    92  sub csp, jssp, #0x10 (16)
0xffff8bdf7f80    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf7f84   100  bl #+0x4 (addr 0xffff8bdf7f88)
0xffff8bdf7f88   104  movz x17, #0xa00000000
0xffff8bdf7f8c   108  sub csp, jssp, #0x10 (16)
0xffff8bdf7f90   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf7f94   116  add fp, jssp, #0x10 (16)
0xffff8bdf7f98   120  ldr x17, pc+24 (addr 0x0000ffff8bdf7fb0)    ;; lazy deoptimization bailout 0
0xffff8bdf7f9c   124  add x17, x17, x16
0xffff8bdf7fa0   128  br x17
0xffff8bdf7fa4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf7fa8   136  d63f03e0       constant
0xffff8bdf7fac   140  d503201f       constant
0xffff8bdf7fb0   144  8bb06000       constant
0xffff8bdf7fb4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf7f58  code target (STUB)  (0xffff8bd38080)
0xffff8bdf7f68  constant pool (size 16)
0xffff8bdf7f98  runtime entry
0xffff8bdf7fa4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = pendingcb
compiler = unknown
Instructions (size = 152)
0xffff8bdf8020     0  sub csp, jssp, #0x8 (8)
0xffff8bdf8024     4  str x3, [jssp, #-8]!
0xffff8bdf8028     8  sub csp, jssp, #0x8 (8)
0xffff8bdf802c    12  str x4, [jssp, #-8]!
0xffff8bdf8030    16  ldr x3, pc+88 (addr 0x0000ffff8bdf8088)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf8034    20  ldur x3, [x3, #7]
0xffff8bdf8038    24  cmp x3, #0x0 (0)
0xffff8bdf803c    28  b.ne #+0x2c (addr 0xffff8bdf8068)
0xffff8bdf8040    32  ldr x5, pc+80 (addr 0x0000ffff8bdf8090)    ;; object: 0x327e9d61 WeakCell for 0x5f540799 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf8044    36  ldur x5, [x5, #7]
0xffff8bdf8048    40  tbz w5, #0, #+0x20 (addr 0xffff8bdf8068)
0xffff8bdf804c    44  ldursw x4, [x5, #15]
0xffff8bdf8050    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdf8068)
0xffff8bdf8054    52  ldr x4, [jssp], #8
0xffff8bdf8058    56  ldr x3, [jssp], #8
0xffff8bdf805c    60  ldr x2, pc+60 (addr 0x0000ffff8bdf8098)    ;; object: 0x32722a11 <String[9]: pendingcb>
0xffff8bdf8060    64  ldr x16, pc+64 (addr 0x0000ffff8bdf80a0)    ;; code: HANDLER, StoreTransitionStub, minor: 174101
0xffff8bdf8064    68  br x16
0xffff8bdf8068    72  ldr x2, pc+64 (addr 0x0000ffff8bdf80a8)    ;; object: 0x32722a11 <String[9]: pendingcb>
0xffff8bdf806c    76  ldr x4, [jssp], #8
0xffff8bdf8070    80  ldr x3, [jssp], #8
0xffff8bdf8074    84  ldr x16, pc+60 (addr 0x0000ffff8bdf80b0)    ;; code: BUILTIN
0xffff8bdf8078    88  br x16
0xffff8bdf807c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdf8080    96  d63f03e0       constant
0xffff8bdf8084   100  d503201f       constant
0xffff8bdf8088   104  327e93f9       constant
0xffff8bdf808c   108  00000000       constant
0xffff8bdf8090   112  327e9d61       constant
0xffff8bdf8094   116  00000000       constant
0xffff8bdf8098   120  32722a11       constant
0xffff8bdf809c   124  00000000       constant
0xffff8bdf80a0   128  8bdf7f20       constant
0xffff8bdf80a4   132  0000ffff       constant
0xffff8bdf80a8   136  32722a11       constant
0xffff8bdf80ac   140  00000000       constant
0xffff8bdf80b0   144  8bd22420       constant
0xffff8bdf80b4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf8030  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf8040  embedded object  (0x327e9d61 WeakCell for 0x5f540799 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf805c  embedded object  (0x32722a11 <String[9]: pendingcb>)
0xffff8bdf8060  code target (HANDLER)  (0xffff8bdf7f20)
0xffff8bdf8068  embedded object  (0x32722a11 <String[9]: pendingcb>)
0xffff8bdf8074  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf807c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf8120     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf81b0)
0xffff8bdf8124     4  mov x2, x0
0xffff8bdf8128     8  stur x2, [x1, #175]
0xffff8bdf812c    12  add x3, x1, #0xaf (175)
0xffff8bdf8130    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf8134    20  ldr x2, [x2, #8]
0xffff8bdf8138    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf815c)
0xffff8bdf813c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf8140    32  ldr x2, [x2, #8]
0xffff8bdf8144    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf815c)
0xffff8bdf8148    40  sub csp, jssp, #0x8 (8)
0xffff8bdf814c    44  str lr, [jssp, #-8]!
0xffff8bdf8150    48  ldr x16, pc+80 (addr 0x0000ffff8bdf81a0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf8154    52  blr x16
0xffff8bdf8158    56  ldr lr, [jssp], #8
0xffff8bdf815c    60  stur x5, [x1, #-1]
0xffff8bdf8160    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf8194)
0xffff8bdf8164    68  sub x2, x1, #0x1 (1)
0xffff8bdf8168    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf816c    76  ldr x5, [x5, #8]
0xffff8bdf8170    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf8194)
0xffff8bdf8174    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf8178    88  ldr x5, [x5, #8]
0xffff8bdf817c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf8194)
0xffff8bdf8180    96  sub csp, jssp, #0x8 (8)
0xffff8bdf8184   100  str lr, [jssp, #-8]!
0xffff8bdf8188   104  ldr x16, pc+32 (addr 0x0000ffff8bdf81a8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf818c   108  blr x16
0xffff8bdf8190   112  ldr lr, [jssp], #8
0xffff8bdf8194   116  ret
0xffff8bdf8198   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf819c   124  d63f03e0       constant
0xffff8bdf81a0   128  8bd170c0       constant
0xffff8bdf81a4   132  0000ffff       constant
0xffff8bdf81a8   136  8bd38080       constant
0xffff8bdf81ac   140  0000ffff       constant
0xffff8bdf81b0   144  movz x16, #0x0
0xffff8bdf81b4   148  sub csp, jssp, #0x10 (16)
0xffff8bdf81b8   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf81bc   156  bl #+0x4 (addr 0xffff8bdf81c0)
0xffff8bdf81c0   160  movz x17, #0xa00000000
0xffff8bdf81c4   164  sub csp, jssp, #0x10 (16)
0xffff8bdf81c8   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf81cc   172  add fp, jssp, #0x10 (16)
0xffff8bdf81d0   176  ldr x17, pc+24 (addr 0x0000ffff8bdf81e8)    ;; lazy deoptimization bailout 0
0xffff8bdf81d4   180  add x17, x17, x16
0xffff8bdf81d8   184  br x17
0xffff8bdf81dc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf81e0   192  d63f03e0       constant
0xffff8bdf81e4   196  d503201f       constant
0xffff8bdf81e8   200  8bb06000       constant
0xffff8bdf81ec   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf8150  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf8188  code target (STUB)  (0xffff8bd38080)
0xffff8bdf8198  constant pool (size 24)
0xffff8bdf81d0  runtime entry
0xffff8bdf81dc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf8120     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf81b0)
0xffff8bdf8124     4  mov x2, x0
0xffff8bdf8128     8  stur x2, [x1, #175]
0xffff8bdf812c    12  add x3, x1, #0xaf (175)
0xffff8bdf8130    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf8134    20  ldr x2, [x2, #8]
0xffff8bdf8138    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf815c)
0xffff8bdf813c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf8140    32  ldr x2, [x2, #8]
0xffff8bdf8144    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf815c)
0xffff8bdf8148    40  sub csp, jssp, #0x8 (8)
0xffff8bdf814c    44  str lr, [jssp, #-8]!
0xffff8bdf8150    48  ldr x16, pc+80 (addr 0x0000ffff8bdf81a0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf8154    52  blr x16
0xffff8bdf8158    56  ldr lr, [jssp], #8
0xffff8bdf815c    60  stur x5, [x1, #-1]
0xffff8bdf8160    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf8194)
0xffff8bdf8164    68  sub x2, x1, #0x1 (1)
0xffff8bdf8168    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf816c    76  ldr x5, [x5, #8]
0xffff8bdf8170    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf8194)
0xffff8bdf8174    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf8178    88  ldr x5, [x5, #8]
0xffff8bdf817c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf8194)
0xffff8bdf8180    96  sub csp, jssp, #0x8 (8)
0xffff8bdf8184   100  str lr, [jssp, #-8]!
0xffff8bdf8188   104  ldr x16, pc+32 (addr 0x0000ffff8bdf81a8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf818c   108  blr x16
0xffff8bdf8190   112  ldr lr, [jssp], #8
0xffff8bdf8194   116  ret
0xffff8bdf8198   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf819c   124  d63f03e0       constant
0xffff8bdf81a0   128  8bd170c0       constant
0xffff8bdf81a4   132  0000ffff       constant
0xffff8bdf81a8   136  8bd38080       constant
0xffff8bdf81ac   140  0000ffff       constant
0xffff8bdf81b0   144  movz x16, #0x0
0xffff8bdf81b4   148  sub csp, jssp, #0x10 (16)
0xffff8bdf81b8   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf81bc   156  bl #+0x4 (addr 0xffff8bdf81c0)
0xffff8bdf81c0   160  movz x17, #0xa00000000
0xffff8bdf81c4   164  sub csp, jssp, #0x10 (16)
0xffff8bdf81c8   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf81cc   172  add fp, jssp, #0x10 (16)
0xffff8bdf81d0   176  ldr x17, pc+24 (addr 0x0000ffff8bdf81e8)    ;; lazy deoptimization bailout 0
0xffff8bdf81d4   180  add x17, x17, x16
0xffff8bdf81d8   184  br x17
0xffff8bdf81dc   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf81e0   192  d63f03e0       constant
0xffff8bdf81e4   196  d503201f       constant
0xffff8bdf81e8   200  8bb06000       constant
0xffff8bdf81ec   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf8150  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf8188  code target (STUB)  (0xffff8bd38080)
0xffff8bdf8198  constant pool (size 24)
0xffff8bdf81d0  runtime entry
0xffff8bdf81dc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = prefinished
compiler = unknown
Instructions (size = 152)
0xffff8bdf8260     0  sub csp, jssp, #0x8 (8)
0xffff8bdf8264     4  str x3, [jssp, #-8]!
0xffff8bdf8268     8  sub csp, jssp, #0x8 (8)
0xffff8bdf826c    12  str x4, [jssp, #-8]!
0xffff8bdf8270    16  ldr x3, pc+88 (addr 0x0000ffff8bdf82c8)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf8274    20  ldur x3, [x3, #7]
0xffff8bdf8278    24  cmp x3, #0x0 (0)
0xffff8bdf827c    28  b.ne #+0x30 (addr 0xffff8bdf82ac)
0xffff8bdf8280    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf82ac)
0xffff8bdf8284    36  ldr x5, pc+76 (addr 0x0000ffff8bdf82d0)    ;; object: 0x327e9e51 WeakCell for 0x5f5407f1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf8288    40  ldur x5, [x5, #7]
0xffff8bdf828c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf82ac)
0xffff8bdf8290    48  ldursw x4, [x5, #15]
0xffff8bdf8294    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf82ac)
0xffff8bdf8298    56  ldr x4, [jssp], #8
0xffff8bdf829c    60  ldr x3, [jssp], #8
0xffff8bdf82a0    64  ldr x2, pc+56 (addr 0x0000ffff8bdf82d8)    ;; object: 0x32722a39 <String[11]: prefinished>
0xffff8bdf82a4    68  ldr x16, pc+60 (addr 0x0000ffff8bdf82e0)    ;; code: HANDLER, StoreTransitionStub, minor: 198678
0xffff8bdf82a8    72  br x16
0xffff8bdf82ac    76  ldr x2, pc+60 (addr 0x0000ffff8bdf82e8)    ;; object: 0x32722a39 <String[11]: prefinished>
0xffff8bdf82b0    80  ldr x4, [jssp], #8
0xffff8bdf82b4    84  ldr x3, [jssp], #8
0xffff8bdf82b8    88  ldr x16, pc+56 (addr 0x0000ffff8bdf82f0)    ;; code: BUILTIN
0xffff8bdf82bc    92  br x16
0xffff8bdf82c0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf82c4   100  d63f03e0       constant
0xffff8bdf82c8   104  327e93f9       constant
0xffff8bdf82cc   108  00000000       constant
0xffff8bdf82d0   112  327e9e51       constant
0xffff8bdf82d4   116  00000000       constant
0xffff8bdf82d8   120  32722a39       constant
0xffff8bdf82dc   124  00000000       constant
0xffff8bdf82e0   128  8bdf8120       constant
0xffff8bdf82e4   132  0000ffff       constant
0xffff8bdf82e8   136  32722a39       constant
0xffff8bdf82ec   140  00000000       constant
0xffff8bdf82f0   144  8bd22420       constant
0xffff8bdf82f4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf8270  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf8284  embedded object  (0x327e9e51 WeakCell for 0x5f5407f1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf82a0  embedded object  (0x32722a39 <String[11]: prefinished>)
0xffff8bdf82a4  code target (HANDLER)  (0xffff8bdf8120)
0xffff8bdf82ac  embedded object  (0x32722a39 <String[11]: prefinished>)
0xffff8bdf82b8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf82c0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf8360     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf83f0)
0xffff8bdf8364     4  mov x2, x0
0xffff8bdf8368     8  stur x2, [x1, #183]
0xffff8bdf836c    12  add x3, x1, #0xb7 (183)
0xffff8bdf8370    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf8374    20  ldr x2, [x2, #8]
0xffff8bdf8378    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf839c)
0xffff8bdf837c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf8380    32  ldr x2, [x2, #8]
0xffff8bdf8384    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf839c)
0xffff8bdf8388    40  sub csp, jssp, #0x8 (8)
0xffff8bdf838c    44  str lr, [jssp, #-8]!
0xffff8bdf8390    48  ldr x16, pc+80 (addr 0x0000ffff8bdf83e0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf8394    52  blr x16
0xffff8bdf8398    56  ldr lr, [jssp], #8
0xffff8bdf839c    60  stur x5, [x1, #-1]
0xffff8bdf83a0    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf83d4)
0xffff8bdf83a4    68  sub x2, x1, #0x1 (1)
0xffff8bdf83a8    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf83ac    76  ldr x5, [x5, #8]
0xffff8bdf83b0    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf83d4)
0xffff8bdf83b4    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf83b8    88  ldr x5, [x5, #8]
0xffff8bdf83bc    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf83d4)
0xffff8bdf83c0    96  sub csp, jssp, #0x8 (8)
0xffff8bdf83c4   100  str lr, [jssp, #-8]!
0xffff8bdf83c8   104  ldr x16, pc+32 (addr 0x0000ffff8bdf83e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf83cc   108  blr x16
0xffff8bdf83d0   112  ldr lr, [jssp], #8
0xffff8bdf83d4   116  ret
0xffff8bdf83d8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf83dc   124  d63f03e0       constant
0xffff8bdf83e0   128  8bd170c0       constant
0xffff8bdf83e4   132  0000ffff       constant
0xffff8bdf83e8   136  8bd38080       constant
0xffff8bdf83ec   140  0000ffff       constant
0xffff8bdf83f0   144  movz x16, #0x0
0xffff8bdf83f4   148  sub csp, jssp, #0x10 (16)
0xffff8bdf83f8   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf83fc   156  bl #+0x4 (addr 0xffff8bdf8400)
0xffff8bdf8400   160  movz x17, #0xa00000000
0xffff8bdf8404   164  sub csp, jssp, #0x10 (16)
0xffff8bdf8408   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf840c   172  add fp, jssp, #0x10 (16)
0xffff8bdf8410   176  ldr x17, pc+24 (addr 0x0000ffff8bdf8428)    ;; lazy deoptimization bailout 0
0xffff8bdf8414   180  add x17, x17, x16
0xffff8bdf8418   184  br x17
0xffff8bdf841c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf8420   192  d63f03e0       constant
0xffff8bdf8424   196  d503201f       constant
0xffff8bdf8428   200  8bb06000       constant
0xffff8bdf842c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf8390  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf83c8  code target (STUB)  (0xffff8bd38080)
0xffff8bdf83d8  constant pool (size 24)
0xffff8bdf8410  runtime entry
0xffff8bdf841c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf8360     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf83f0)
0xffff8bdf8364     4  mov x2, x0
0xffff8bdf8368     8  stur x2, [x1, #183]
0xffff8bdf836c    12  add x3, x1, #0xb7 (183)
0xffff8bdf8370    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf8374    20  ldr x2, [x2, #8]
0xffff8bdf8378    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf839c)
0xffff8bdf837c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf8380    32  ldr x2, [x2, #8]
0xffff8bdf8384    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf839c)
0xffff8bdf8388    40  sub csp, jssp, #0x8 (8)
0xffff8bdf838c    44  str lr, [jssp, #-8]!
0xffff8bdf8390    48  ldr x16, pc+80 (addr 0x0000ffff8bdf83e0)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf8394    52  blr x16
0xffff8bdf8398    56  ldr lr, [jssp], #8
0xffff8bdf839c    60  stur x5, [x1, #-1]
0xffff8bdf83a0    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf83d4)
0xffff8bdf83a4    68  sub x2, x1, #0x1 (1)
0xffff8bdf83a8    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf83ac    76  ldr x5, [x5, #8]
0xffff8bdf83b0    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf83d4)
0xffff8bdf83b4    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf83b8    88  ldr x5, [x5, #8]
0xffff8bdf83bc    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf83d4)
0xffff8bdf83c0    96  sub csp, jssp, #0x8 (8)
0xffff8bdf83c4   100  str lr, [jssp, #-8]!
0xffff8bdf83c8   104  ldr x16, pc+32 (addr 0x0000ffff8bdf83e8)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf83cc   108  blr x16
0xffff8bdf83d0   112  ldr lr, [jssp], #8
0xffff8bdf83d4   116  ret
0xffff8bdf83d8   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf83dc   124  d63f03e0       constant
0xffff8bdf83e0   128  8bd170c0       constant
0xffff8bdf83e4   132  0000ffff       constant
0xffff8bdf83e8   136  8bd38080       constant
0xffff8bdf83ec   140  0000ffff       constant
0xffff8bdf83f0   144  movz x16, #0x0
0xffff8bdf83f4   148  sub csp, jssp, #0x10 (16)
0xffff8bdf83f8   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf83fc   156  bl #+0x4 (addr 0xffff8bdf8400)
0xffff8bdf8400   160  movz x17, #0xa00000000
0xffff8bdf8404   164  sub csp, jssp, #0x10 (16)
0xffff8bdf8408   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf840c   172  add fp, jssp, #0x10 (16)
0xffff8bdf8410   176  ldr x17, pc+24 (addr 0x0000ffff8bdf8428)    ;; lazy deoptimization bailout 0
0xffff8bdf8414   180  add x17, x17, x16
0xffff8bdf8418   184  br x17
0xffff8bdf841c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf8420   192  d63f03e0       constant
0xffff8bdf8424   196  d503201f       constant
0xffff8bdf8428   200  8bb06000       constant
0xffff8bdf842c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf8390  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf83c8  code target (STUB)  (0xffff8bd38080)
0xffff8bdf83d8  constant pool (size 24)
0xffff8bdf8410  runtime entry
0xffff8bdf841c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = errorEmitted
compiler = unknown
Instructions (size = 152)
0xffff8bdf84a0     0  sub csp, jssp, #0x8 (8)
0xffff8bdf84a4     4  str x3, [jssp, #-8]!
0xffff8bdf84a8     8  sub csp, jssp, #0x8 (8)
0xffff8bdf84ac    12  str x4, [jssp, #-8]!
0xffff8bdf84b0    16  ldr x3, pc+88 (addr 0x0000ffff8bdf8508)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf84b4    20  ldur x3, [x3, #7]
0xffff8bdf84b8    24  cmp x3, #0x0 (0)
0xffff8bdf84bc    28  b.ne #+0x30 (addr 0xffff8bdf84ec)
0xffff8bdf84c0    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf84ec)
0xffff8bdf84c4    36  ldr x5, pc+76 (addr 0x0000ffff8bdf8510)    ;; object: 0x327e9f41 WeakCell for 0x5f540849 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf84c8    40  ldur x5, [x5, #7]
0xffff8bdf84cc    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf84ec)
0xffff8bdf84d0    48  ldursw x4, [x5, #15]
0xffff8bdf84d4    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf84ec)
0xffff8bdf84d8    56  ldr x4, [jssp], #8
0xffff8bdf84dc    60  ldr x3, [jssp], #8
0xffff8bdf84e0    64  ldr x2, pc+56 (addr 0x0000ffff8bdf8518)    ;; object: 0x32722a61 <String[12]: errorEmitted>
0xffff8bdf84e4    68  ldr x16, pc+60 (addr 0x0000ffff8bdf8520)    ;; code: HANDLER, StoreTransitionStub, minor: 198679
0xffff8bdf84e8    72  br x16
0xffff8bdf84ec    76  ldr x2, pc+60 (addr 0x0000ffff8bdf8528)    ;; object: 0x32722a61 <String[12]: errorEmitted>
0xffff8bdf84f0    80  ldr x4, [jssp], #8
0xffff8bdf84f4    84  ldr x3, [jssp], #8
0xffff8bdf84f8    88  ldr x16, pc+56 (addr 0x0000ffff8bdf8530)    ;; code: BUILTIN
0xffff8bdf84fc    92  br x16
0xffff8bdf8500    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf8504   100  d63f03e0       constant
0xffff8bdf8508   104  327e93f9       constant
0xffff8bdf850c   108  00000000       constant
0xffff8bdf8510   112  327e9f41       constant
0xffff8bdf8514   116  00000000       constant
0xffff8bdf8518   120  32722a61       constant
0xffff8bdf851c   124  00000000       constant
0xffff8bdf8520   128  8bdf8360       constant
0xffff8bdf8524   132  0000ffff       constant
0xffff8bdf8528   136  32722a61       constant
0xffff8bdf852c   140  00000000       constant
0xffff8bdf8530   144  8bd22420       constant
0xffff8bdf8534   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf84b0  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf84c4  embedded object  (0x327e9f41 WeakCell for 0x5f540849 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf84e0  embedded object  (0x32722a61 <String[12]: errorEmitted>)
0xffff8bdf84e4  code target (HANDLER)  (0xffff8bdf8360)
0xffff8bdf84ec  embedded object  (0x32722a61 <String[12]: errorEmitted>)
0xffff8bdf84f8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf8500  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf85a0     0  mov x6, x0
0xffff8bdf85a4     4  tbnz w6, #0, #+0x54 (addr 0xffff8bdf85f8)
0xffff8bdf85a8     8  stur x6, [x1, #191]
0xffff8bdf85ac    12  stur x5, [x1, #-1]
0xffff8bdf85b0    16  tbz w5, #0, #+0x34 (addr 0xffff8bdf85e4)
0xffff8bdf85b4    20  sub x2, x1, #0x1 (1)
0xffff8bdf85b8    24  and x5, x5, #0xfffffffffff00000
0xffff8bdf85bc    28  ldr x5, [x5, #8]
0xffff8bdf85c0    32  tbz w5, #1, #+0x24 (addr 0xffff8bdf85e4)
0xffff8bdf85c4    36  and x5, x1, #0xfffffffffff00000
0xffff8bdf85c8    40  ldr x5, [x5, #8]
0xffff8bdf85cc    44  tbz w5, #2, #+0x18 (addr 0xffff8bdf85e4)
0xffff8bdf85d0    48  sub csp, jssp, #0x8 (8)
0xffff8bdf85d4    52  str lr, [jssp, #-8]!
0xffff8bdf85d8    56  ldr x16, pc+24 (addr 0x0000ffff8bdf85f0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf85dc    60  blr x16
0xffff8bdf85e0    64  ldr lr, [jssp], #8
0xffff8bdf85e4    68  ret
0xffff8bdf85e8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf85ec    76  d63f03e0       constant
0xffff8bdf85f0    80  8bd38080       constant
0xffff8bdf85f4    84  0000ffff       constant
0xffff8bdf85f8    88  movz x16, #0x0
0xffff8bdf85fc    92  sub csp, jssp, #0x10 (16)
0xffff8bdf8600    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf8604   100  bl #+0x4 (addr 0xffff8bdf8608)
0xffff8bdf8608   104  movz x17, #0xa00000000
0xffff8bdf860c   108  sub csp, jssp, #0x10 (16)
0xffff8bdf8610   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf8614   116  add fp, jssp, #0x10 (16)
0xffff8bdf8618   120  ldr x17, pc+24 (addr 0x0000ffff8bdf8630)    ;; lazy deoptimization bailout 0
0xffff8bdf861c   124  add x17, x17, x16
0xffff8bdf8620   128  br x17
0xffff8bdf8624   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf8628   136  d63f03e0       constant
0xffff8bdf862c   140  d503201f       constant
0xffff8bdf8630   144  8bb06000       constant
0xffff8bdf8634   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf85d8  code target (STUB)  (0xffff8bd38080)
0xffff8bdf85e8  constant pool (size 16)
0xffff8bdf8618  runtime entry
0xffff8bdf8624  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf85a0     0  mov x6, x0
0xffff8bdf85a4     4  tbnz w6, #0, #+0x54 (addr 0xffff8bdf85f8)
0xffff8bdf85a8     8  stur x6, [x1, #191]
0xffff8bdf85ac    12  stur x5, [x1, #-1]
0xffff8bdf85b0    16  tbz w5, #0, #+0x34 (addr 0xffff8bdf85e4)
0xffff8bdf85b4    20  sub x2, x1, #0x1 (1)
0xffff8bdf85b8    24  and x5, x5, #0xfffffffffff00000
0xffff8bdf85bc    28  ldr x5, [x5, #8]
0xffff8bdf85c0    32  tbz w5, #1, #+0x24 (addr 0xffff8bdf85e4)
0xffff8bdf85c4    36  and x5, x1, #0xfffffffffff00000
0xffff8bdf85c8    40  ldr x5, [x5, #8]
0xffff8bdf85cc    44  tbz w5, #2, #+0x18 (addr 0xffff8bdf85e4)
0xffff8bdf85d0    48  sub csp, jssp, #0x8 (8)
0xffff8bdf85d4    52  str lr, [jssp, #-8]!
0xffff8bdf85d8    56  ldr x16, pc+24 (addr 0x0000ffff8bdf85f0)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf85dc    60  blr x16
0xffff8bdf85e0    64  ldr lr, [jssp], #8
0xffff8bdf85e4    68  ret
0xffff8bdf85e8    72  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf85ec    76  d63f03e0       constant
0xffff8bdf85f0    80  8bd38080       constant
0xffff8bdf85f4    84  0000ffff       constant
0xffff8bdf85f8    88  movz x16, #0x0
0xffff8bdf85fc    92  sub csp, jssp, #0x10 (16)
0xffff8bdf8600    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf8604   100  bl #+0x4 (addr 0xffff8bdf8608)
0xffff8bdf8608   104  movz x17, #0xa00000000
0xffff8bdf860c   108  sub csp, jssp, #0x10 (16)
0xffff8bdf8610   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf8614   116  add fp, jssp, #0x10 (16)
0xffff8bdf8618   120  ldr x17, pc+24 (addr 0x0000ffff8bdf8630)    ;; lazy deoptimization bailout 0
0xffff8bdf861c   124  add x17, x17, x16
0xffff8bdf8620   128  br x17
0xffff8bdf8624   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf8628   136  d63f03e0       constant
0xffff8bdf862c   140  d503201f       constant
0xffff8bdf8630   144  8bb06000       constant
0xffff8bdf8634   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf85d8  code target (STUB)  (0xffff8bd38080)
0xffff8bdf85e8  constant pool (size 16)
0xffff8bdf8618  runtime entry
0xffff8bdf8624  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = bufferedRequestCount
compiler = unknown
Instructions (size = 152)
0xffff8bdf86a0     0  sub csp, jssp, #0x8 (8)
0xffff8bdf86a4     4  str x3, [jssp, #-8]!
0xffff8bdf86a8     8  sub csp, jssp, #0x8 (8)
0xffff8bdf86ac    12  str x4, [jssp, #-8]!
0xffff8bdf86b0    16  ldr x3, pc+88 (addr 0x0000ffff8bdf8708)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf86b4    20  ldur x3, [x3, #7]
0xffff8bdf86b8    24  cmp x3, #0x0 (0)
0xffff8bdf86bc    28  b.ne #+0x2c (addr 0xffff8bdf86e8)
0xffff8bdf86c0    32  ldr x5, pc+80 (addr 0x0000ffff8bdf8710)    ;; object: 0x327ea031 WeakCell for 0x5f5408a1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf86c4    36  ldur x5, [x5, #7]
0xffff8bdf86c8    40  tbz w5, #0, #+0x20 (addr 0xffff8bdf86e8)
0xffff8bdf86cc    44  ldursw x4, [x5, #15]
0xffff8bdf86d0    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdf86e8)
0xffff8bdf86d4    52  ldr x4, [jssp], #8
0xffff8bdf86d8    56  ldr x3, [jssp], #8
0xffff8bdf86dc    60  ldr x2, pc+60 (addr 0x0000ffff8bdf8718)    ;; object: 0x32722a89 <String[20]: bufferedRequestCount>
0xffff8bdf86e0    64  ldr x16, pc+64 (addr 0x0000ffff8bdf8720)    ;; code: HANDLER, StoreTransitionStub, minor: 174104
0xffff8bdf86e4    68  br x16
0xffff8bdf86e8    72  ldr x2, pc+64 (addr 0x0000ffff8bdf8728)    ;; object: 0x32722a89 <String[20]: bufferedRequestCount>
0xffff8bdf86ec    76  ldr x4, [jssp], #8
0xffff8bdf86f0    80  ldr x3, [jssp], #8
0xffff8bdf86f4    84  ldr x16, pc+60 (addr 0x0000ffff8bdf8730)    ;; code: BUILTIN
0xffff8bdf86f8    88  br x16
0xffff8bdf86fc    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdf8700    96  d63f03e0       constant
0xffff8bdf8704   100  d503201f       constant
0xffff8bdf8708   104  327e93f9       constant
0xffff8bdf870c   108  00000000       constant
0xffff8bdf8710   112  327ea031       constant
0xffff8bdf8714   116  00000000       constant
0xffff8bdf8718   120  32722a89       constant
0xffff8bdf871c   124  00000000       constant
0xffff8bdf8720   128  8bdf85a0       constant
0xffff8bdf8724   132  0000ffff       constant
0xffff8bdf8728   136  32722a89       constant
0xffff8bdf872c   140  00000000       constant
0xffff8bdf8730   144  8bd22420       constant
0xffff8bdf8734   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf86b0  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf86c0  embedded object  (0x327ea031 WeakCell for 0x5f5408a1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf86dc  embedded object  (0x32722a89 <String[20]: bufferedRequestCount>)
0xffff8bdf86e0  code target (HANDLER)  (0xffff8bdf85a0)
0xffff8bdf86e8  embedded object  (0x32722a89 <String[20]: bufferedRequestCount>)
0xffff8bdf86f4  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf86fc  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = next
compiler = unknown
Instructions (size = 152)
0xffff8bdf87a0     0  sub csp, jssp, #0x8 (8)
0xffff8bdf87a4     4  str x3, [jssp, #-8]!
0xffff8bdf87a8     8  sub csp, jssp, #0x8 (8)
0xffff8bdf87ac    12  str x4, [jssp, #-8]!
0xffff8bdf87b0    16  ldr x3, pc+88 (addr 0x0000ffff8bdf8808)    ;; object: 0x327ea161 Cell for 0
0xffff8bdf87b4    20  ldur x3, [x3, #7]
0xffff8bdf87b8    24  cmp x3, #0x0 (0)
0xffff8bdf87bc    28  b.ne #+0x30 (addr 0xffff8bdf87ec)
0xffff8bdf87c0    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf87ec)
0xffff8bdf87c4    36  ldr x5, pc+76 (addr 0x0000ffff8bdf8810)    ;; object: 0x327d19c9 WeakCell for 0x5f538869 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf87c8    40  ldur x5, [x5, #7]
0xffff8bdf87cc    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf87ec)
0xffff8bdf87d0    48  ldursw x4, [x5, #15]
0xffff8bdf87d4    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf87ec)
0xffff8bdf87d8    56  ldr x4, [jssp], #8
0xffff8bdf87dc    60  ldr x3, [jssp], #8
0xffff8bdf87e0    64  ldr x2, pc+56 (addr 0x0000ffff8bdf8818)    ;; object: 0x26c05209 <String[4]: next>
0xffff8bdf87e4    68  ldr x16, pc+60 (addr 0x0000ffff8bdf8820)    ;; code: HANDLER, StoreTransitionStub, minor: 198659
0xffff8bdf87e8    72  br x16
0xffff8bdf87ec    76  ldr x2, pc+60 (addr 0x0000ffff8bdf8828)    ;; object: 0x26c05209 <String[4]: next>
0xffff8bdf87f0    80  ldr x4, [jssp], #8
0xffff8bdf87f4    84  ldr x3, [jssp], #8
0xffff8bdf87f8    88  ldr x16, pc+56 (addr 0x0000ffff8bdf8830)    ;; code: BUILTIN
0xffff8bdf87fc    92  br x16
0xffff8bdf8800    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf8804   100  d63f03e0       constant
0xffff8bdf8808   104  327ea161       constant
0xffff8bdf880c   108  00000000       constant
0xffff8bdf8810   112  327d19c9       constant
0xffff8bdf8814   116  00000000       constant
0xffff8bdf8818   120  26c05209       constant
0xffff8bdf881c   124  00000000       constant
0xffff8bdf8820   128  8bd8b940       constant
0xffff8bdf8824   132  0000ffff       constant
0xffff8bdf8828   136  26c05209       constant
0xffff8bdf882c   140  00000000       constant
0xffff8bdf8830   144  8bd22420       constant
0xffff8bdf8834   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf87b0  embedded object  (0x327ea161 Cell for 0)
0xffff8bdf87c4  embedded object  (0x327d19c9 WeakCell for 0x5f538869 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf87e0  embedded object  (0x26c05209 <String[4]: next>)
0xffff8bdf87e4  code target (HANDLER)  (0xffff8bd8b940)
0xffff8bdf87ec  embedded object  (0x26c05209 <String[4]: next>)
0xffff8bdf87f8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf8800  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = entry
compiler = unknown
Instructions (size = 152)
0xffff8bdf88a0     0  sub csp, jssp, #0x8 (8)
0xffff8bdf88a4     4  str x3, [jssp, #-8]!
0xffff8bdf88a8     8  sub csp, jssp, #0x8 (8)
0xffff8bdf88ac    12  str x4, [jssp, #-8]!
0xffff8bdf88b0    16  ldr x3, pc+88 (addr 0x0000ffff8bdf8908)    ;; object: 0x327ea161 Cell for 0
0xffff8bdf88b4    20  ldur x3, [x3, #7]
0xffff8bdf88b8    24  cmp x3, #0x0 (0)
0xffff8bdf88bc    28  b.ne #+0x30 (addr 0xffff8bdf88ec)
0xffff8bdf88c0    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf88ec)
0xffff8bdf88c4    36  ldr x5, pc+76 (addr 0x0000ffff8bdf8910)    ;; object: 0x327d19e1 WeakCell for 0x5f5388c1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf88c8    40  ldur x5, [x5, #7]
0xffff8bdf88cc    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf88ec)
0xffff8bdf88d0    48  ldursw x4, [x5, #15]
0xffff8bdf88d4    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf88ec)
0xffff8bdf88d8    56  ldr x4, [jssp], #8
0xffff8bdf88dc    60  ldr x3, [jssp], #8
0xffff8bdf88e0    64  ldr x2, pc+56 (addr 0x0000ffff8bdf8918)    ;; object: 0x32720e89 <String[5]: entry>
0xffff8bdf88e4    68  ldr x16, pc+60 (addr 0x0000ffff8bdf8920)    ;; code: HANDLER, StoreTransitionStub, minor: 198660
0xffff8bdf88e8    72  br x16
0xffff8bdf88ec    76  ldr x2, pc+60 (addr 0x0000ffff8bdf8928)    ;; object: 0x32720e89 <String[5]: entry>
0xffff8bdf88f0    80  ldr x4, [jssp], #8
0xffff8bdf88f4    84  ldr x3, [jssp], #8
0xffff8bdf88f8    88  ldr x16, pc+56 (addr 0x0000ffff8bdf8930)    ;; code: BUILTIN
0xffff8bdf88fc    92  br x16
0xffff8bdf8900    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf8904   100  d63f03e0       constant
0xffff8bdf8908   104  327ea161       constant
0xffff8bdf890c   108  00000000       constant
0xffff8bdf8910   112  327d19e1       constant
0xffff8bdf8914   116  00000000       constant
0xffff8bdf8918   120  32720e89       constant
0xffff8bdf891c   124  00000000       constant
0xffff8bdf8920   128  8bd8bb80       constant
0xffff8bdf8924   132  0000ffff       constant
0xffff8bdf8928   136  32720e89       constant
0xffff8bdf892c   140  00000000       constant
0xffff8bdf8930   144  8bd22420       constant
0xffff8bdf8934   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf88b0  embedded object  (0x327ea161 Cell for 0)
0xffff8bdf88c4  embedded object  (0x327d19e1 WeakCell for 0x5f5388c1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf88e0  embedded object  (0x32720e89 <String[5]: entry>)
0xffff8bdf88e4  code target (HANDLER)  (0xffff8bd8bb80)
0xffff8bdf88ec  embedded object  (0x32720e89 <String[5]: entry>)
0xffff8bdf88f8  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf8900  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = finish
compiler = unknown
Instructions (size = 184)
0xffff8bdf89a0     0  sub csp, jssp, #0x8 (8)
0xffff8bdf89a4     4  str x3, [jssp, #-8]!
0xffff8bdf89a8     8  sub csp, jssp, #0x8 (8)
0xffff8bdf89ac    12  str x4, [jssp, #-8]!
0xffff8bdf89b0    16  ldr x3, pc+112 (addr 0x0000ffff8bdf8a20)    ;; object: 0x327ea161 Cell for 0
0xffff8bdf89b4    20  ldur x3, [x3, #7]
0xffff8bdf89b8    24  cmp x3, #0x0 (0)
0xffff8bdf89bc    28  b.ne #+0x44 (addr 0xffff8bdf8a00)
0xffff8bdf89c0    32  tbz w0, #0, #+0x40 (addr 0xffff8bdf8a00)
0xffff8bdf89c4    36  ldur x3, [x0, #-1]
0xffff8bdf89c8    40  ldr x4, pc+96 (addr 0x0000ffff8bdf8a28)    ;; object: 0x26cc71e1 WeakCell for 0x5f506989 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf89cc    44  ldur x4, [x4, #7]
0xffff8bdf89d0    48  cmp x3, x4
0xffff8bdf89d4    52  b.ne #+0x2c (addr 0xffff8bdf8a00)
0xffff8bdf89d8    56  ldr x5, pc+88 (addr 0x0000ffff8bdf8a30)    ;; object: 0x327ea211 WeakCell for 0x5f5408f9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf89dc    60  ldur x5, [x5, #7]
0xffff8bdf89e0    64  tbz w5, #0, #+0x20 (addr 0xffff8bdf8a00)
0xffff8bdf89e4    68  ldursw x4, [x5, #15]
0xffff8bdf89e8    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdf8a00)
0xffff8bdf89ec    76  ldr x4, [jssp], #8
0xffff8bdf89f0    80  ldr x3, [jssp], #8
0xffff8bdf89f4    84  ldr x2, pc+68 (addr 0x0000ffff8bdf8a38)    ;; object: 0x3270f0e9 <String[6]: finish>
0xffff8bdf89f8    88  ldr x16, pc+72 (addr 0x0000ffff8bdf8a40)    ;; code: HANDLER, StoreTransitionStub, minor: 198661
0xffff8bdf89fc    92  br x16
0xffff8bdf8a00    96  ldr x2, pc+72 (addr 0x0000ffff8bdf8a48)    ;; object: 0x3270f0e9 <String[6]: finish>
0xffff8bdf8a04   100  ldr x4, [jssp], #8
0xffff8bdf8a08   104  ldr x3, [jssp], #8
0xffff8bdf8a0c   108  ldr x16, pc+68 (addr 0x0000ffff8bdf8a50)    ;; code: BUILTIN
0xffff8bdf8a10   112  br x16
0xffff8bdf8a14   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdf8a18   120  d63f03e0       constant
0xffff8bdf8a1c   124  d503201f       constant
0xffff8bdf8a20   128  327ea161       constant
0xffff8bdf8a24   132  00000000       constant
0xffff8bdf8a28   136  26cc71e1       constant
0xffff8bdf8a2c   140  00000000       constant
0xffff8bdf8a30   144  327ea211       constant
0xffff8bdf8a34   148  00000000       constant
0xffff8bdf8a38   152  3270f0e9       constant
0xffff8bdf8a3c   156  00000000       constant
0xffff8bdf8a40   160  8bd8bdc0       constant
0xffff8bdf8a44   164  0000ffff       constant
0xffff8bdf8a48   168  3270f0e9       constant
0xffff8bdf8a4c   172  00000000       constant
0xffff8bdf8a50   176  8bd22420       constant
0xffff8bdf8a54   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdf89b0  embedded object  (0x327ea161 Cell for 0)
0xffff8bdf89c8  embedded object  (0x26cc71e1 WeakCell for 0x5f506989 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf89d8  embedded object  (0x327ea211 WeakCell for 0x5f5408f9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf89f4  embedded object  (0x3270f0e9 <String[6]: finish>)
0xffff8bdf89f8  code target (HANDLER)  (0xffff8bd8bdc0)
0xffff8bdf8a00  embedded object  (0x3270f0e9 <String[6]: finish>)
0xffff8bdf8a0c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf8a14  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf8ac0     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf8b50)
0xffff8bdf8ac4     4  mov x2, x0
0xffff8bdf8ac8     8  stur x2, [x1, #199]
0xffff8bdf8acc    12  add x3, x1, #0xc7 (199)
0xffff8bdf8ad0    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf8ad4    20  ldr x2, [x2, #8]
0xffff8bdf8ad8    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf8afc)
0xffff8bdf8adc    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf8ae0    32  ldr x2, [x2, #8]
0xffff8bdf8ae4    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf8afc)
0xffff8bdf8ae8    40  sub csp, jssp, #0x8 (8)
0xffff8bdf8aec    44  str lr, [jssp, #-8]!
0xffff8bdf8af0    48  ldr x16, pc+80 (addr 0x0000ffff8bdf8b40)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf8af4    52  blr x16
0xffff8bdf8af8    56  ldr lr, [jssp], #8
0xffff8bdf8afc    60  stur x5, [x1, #-1]
0xffff8bdf8b00    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf8b34)
0xffff8bdf8b04    68  sub x2, x1, #0x1 (1)
0xffff8bdf8b08    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf8b0c    76  ldr x5, [x5, #8]
0xffff8bdf8b10    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf8b34)
0xffff8bdf8b14    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf8b18    88  ldr x5, [x5, #8]
0xffff8bdf8b1c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf8b34)
0xffff8bdf8b20    96  sub csp, jssp, #0x8 (8)
0xffff8bdf8b24   100  str lr, [jssp, #-8]!
0xffff8bdf8b28   104  ldr x16, pc+32 (addr 0x0000ffff8bdf8b48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf8b2c   108  blr x16
0xffff8bdf8b30   112  ldr lr, [jssp], #8
0xffff8bdf8b34   116  ret
0xffff8bdf8b38   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf8b3c   124  d63f03e0       constant
0xffff8bdf8b40   128  8bd170c0       constant
0xffff8bdf8b44   132  0000ffff       constant
0xffff8bdf8b48   136  8bd38080       constant
0xffff8bdf8b4c   140  0000ffff       constant
0xffff8bdf8b50   144  movz x16, #0x0
0xffff8bdf8b54   148  sub csp, jssp, #0x10 (16)
0xffff8bdf8b58   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf8b5c   156  bl #+0x4 (addr 0xffff8bdf8b60)
0xffff8bdf8b60   160  movz x17, #0xa00000000
0xffff8bdf8b64   164  sub csp, jssp, #0x10 (16)
0xffff8bdf8b68   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf8b6c   172  add fp, jssp, #0x10 (16)
0xffff8bdf8b70   176  ldr x17, pc+24 (addr 0x0000ffff8bdf8b88)    ;; lazy deoptimization bailout 0
0xffff8bdf8b74   180  add x17, x17, x16
0xffff8bdf8b78   184  br x17
0xffff8bdf8b7c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf8b80   192  d63f03e0       constant
0xffff8bdf8b84   196  d503201f       constant
0xffff8bdf8b88   200  8bb06000       constant
0xffff8bdf8b8c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf8af0  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf8b28  code target (STUB)  (0xffff8bd38080)
0xffff8bdf8b38  constant pool (size 24)
0xffff8bdf8b70  runtime entry
0xffff8bdf8b7c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 216)
0xffff8bdf8ac0     0  tbz w0, #0, #+0x90 (addr 0xffff8bdf8b50)
0xffff8bdf8ac4     4  mov x2, x0
0xffff8bdf8ac8     8  stur x2, [x1, #199]
0xffff8bdf8acc    12  add x3, x1, #0xc7 (199)
0xffff8bdf8ad0    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf8ad4    20  ldr x2, [x2, #8]
0xffff8bdf8ad8    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf8afc)
0xffff8bdf8adc    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf8ae0    32  ldr x2, [x2, #8]
0xffff8bdf8ae4    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf8afc)
0xffff8bdf8ae8    40  sub csp, jssp, #0x8 (8)
0xffff8bdf8aec    44  str lr, [jssp, #-8]!
0xffff8bdf8af0    48  ldr x16, pc+80 (addr 0x0000ffff8bdf8b40)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf8af4    52  blr x16
0xffff8bdf8af8    56  ldr lr, [jssp], #8
0xffff8bdf8afc    60  stur x5, [x1, #-1]
0xffff8bdf8b00    64  tbz w5, #0, #+0x34 (addr 0xffff8bdf8b34)
0xffff8bdf8b04    68  sub x2, x1, #0x1 (1)
0xffff8bdf8b08    72  and x5, x5, #0xfffffffffff00000
0xffff8bdf8b0c    76  ldr x5, [x5, #8]
0xffff8bdf8b10    80  tbz w5, #1, #+0x24 (addr 0xffff8bdf8b34)
0xffff8bdf8b14    84  and x5, x1, #0xfffffffffff00000
0xffff8bdf8b18    88  ldr x5, [x5, #8]
0xffff8bdf8b1c    92  tbz w5, #2, #+0x18 (addr 0xffff8bdf8b34)
0xffff8bdf8b20    96  sub csp, jssp, #0x8 (8)
0xffff8bdf8b24   100  str lr, [jssp, #-8]!
0xffff8bdf8b28   104  ldr x16, pc+32 (addr 0x0000ffff8bdf8b48)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdf8b2c   108  blr x16
0xffff8bdf8b30   112  ldr lr, [jssp], #8
0xffff8bdf8b34   116  ret
0xffff8bdf8b38   120  580000bf       constant pool begin (num_const = 5)    ;; constant pool
0xffff8bdf8b3c   124  d63f03e0       constant
0xffff8bdf8b40   128  8bd170c0       constant
0xffff8bdf8b44   132  0000ffff       constant
0xffff8bdf8b48   136  8bd38080       constant
0xffff8bdf8b4c   140  0000ffff       constant
0xffff8bdf8b50   144  movz x16, #0x0
0xffff8bdf8b54   148  sub csp, jssp, #0x10 (16)
0xffff8bdf8b58   152  stp fp, lr, [jssp, #-16]!
0xffff8bdf8b5c   156  bl #+0x4 (addr 0xffff8bdf8b60)
0xffff8bdf8b60   160  movz x17, #0xa00000000
0xffff8bdf8b64   164  sub csp, jssp, #0x10 (16)
0xffff8bdf8b68   168  stp x17, cp, [jssp, #-16]!
0xffff8bdf8b6c   172  add fp, jssp, #0x10 (16)
0xffff8bdf8b70   176  ldr x17, pc+24 (addr 0x0000ffff8bdf8b88)    ;; lazy deoptimization bailout 0
0xffff8bdf8b74   180  add x17, x17, x16
0xffff8bdf8b78   184  br x17
0xffff8bdf8b7c   188  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf8b80   192  d63f03e0       constant
0xffff8bdf8b84   196  d503201f       constant
0xffff8bdf8b88   200  8bb06000       constant
0xffff8bdf8b8c   204  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdf8af0  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf8b28  code target (STUB)  (0xffff8bd38080)
0xffff8bdf8b38  constant pool (size 24)
0xffff8bdf8b70  runtime entry
0xffff8bdf8b7c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = corkedRequestsFree
compiler = unknown
Instructions (size = 184)
0xffff8bdf8c00     0  sub csp, jssp, #0x8 (8)
0xffff8bdf8c04     4  str x3, [jssp, #-8]!
0xffff8bdf8c08     8  sub csp, jssp, #0x8 (8)
0xffff8bdf8c0c    12  str x4, [jssp, #-8]!
0xffff8bdf8c10    16  ldr x3, pc+112 (addr 0x0000ffff8bdf8c80)    ;; object: 0x327e93f9 Cell for 0
0xffff8bdf8c14    20  ldur x3, [x3, #7]
0xffff8bdf8c18    24  cmp x3, #0x0 (0)
0xffff8bdf8c1c    28  b.ne #+0x44 (addr 0xffff8bdf8c60)
0xffff8bdf8c20    32  tbz w0, #0, #+0x40 (addr 0xffff8bdf8c60)
0xffff8bdf8c24    36  ldur x3, [x0, #-1]
0xffff8bdf8c28    40  ldr x4, pc+96 (addr 0x0000ffff8bdf8c88)    ;; object: 0x327ea211 WeakCell for 0x5f5408f9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf8c2c    44  ldur x4, [x4, #7]
0xffff8bdf8c30    48  cmp x3, x4
0xffff8bdf8c34    52  b.ne #+0x2c (addr 0xffff8bdf8c60)
0xffff8bdf8c38    56  ldr x5, pc+88 (addr 0x0000ffff8bdf8c90)    ;; object: 0x327ea249 WeakCell for 0x5f540951 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf8c3c    60  ldur x5, [x5, #7]
0xffff8bdf8c40    64  tbz w5, #0, #+0x20 (addr 0xffff8bdf8c60)
0xffff8bdf8c44    68  ldursw x4, [x5, #15]
0xffff8bdf8c48    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdf8c60)
0xffff8bdf8c4c    76  ldr x4, [jssp], #8
0xffff8bdf8c50    80  ldr x3, [jssp], #8
0xffff8bdf8c54    84  ldr x2, pc+68 (addr 0x0000ffff8bdf8c98)    ;; object: 0x32722ab9 <String[18]: corkedRequestsFree>
0xffff8bdf8c58    88  ldr x16, pc+72 (addr 0x0000ffff8bdf8ca0)    ;; code: HANDLER, StoreTransitionStub, minor: 198681
0xffff8bdf8c5c    92  br x16
0xffff8bdf8c60    96  ldr x2, pc+72 (addr 0x0000ffff8bdf8ca8)    ;; object: 0x32722ab9 <String[18]: corkedRequestsFree>
0xffff8bdf8c64   100  ldr x4, [jssp], #8
0xffff8bdf8c68   104  ldr x3, [jssp], #8
0xffff8bdf8c6c   108  ldr x16, pc+68 (addr 0x0000ffff8bdf8cb0)    ;; code: BUILTIN
0xffff8bdf8c70   112  br x16
0xffff8bdf8c74   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdf8c78   120  d63f03e0       constant
0xffff8bdf8c7c   124  d503201f       constant
0xffff8bdf8c80   128  327e93f9       constant
0xffff8bdf8c84   132  00000000       constant
0xffff8bdf8c88   136  327ea211       constant
0xffff8bdf8c8c   140  00000000       constant
0xffff8bdf8c90   144  327ea249       constant
0xffff8bdf8c94   148  00000000       constant
0xffff8bdf8c98   152  32722ab9       constant
0xffff8bdf8c9c   156  00000000       constant
0xffff8bdf8ca0   160  8bdf8ac0       constant
0xffff8bdf8ca4   164  0000ffff       constant
0xffff8bdf8ca8   168  32722ab9       constant
0xffff8bdf8cac   172  00000000       constant
0xffff8bdf8cb0   176  8bd22420       constant
0xffff8bdf8cb4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdf8c10  embedded object  (0x327e93f9 Cell for 0)
0xffff8bdf8c28  embedded object  (0x327ea211 WeakCell for 0x5f5408f9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf8c38  embedded object  (0x327ea249 WeakCell for 0x5f540951 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf8c54  embedded object  (0x32722ab9 <String[18]: corkedRequestsFree>)
0xffff8bdf8c58  code target (HANDLER)  (0xffff8bdf8ac0)
0xffff8bdf8c60  embedded object  (0x32722ab9 <String[18]: corkedRequestsFree>)
0xffff8bdf8c6c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf8c74  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = _writableState
compiler = unknown
Instructions (size = 184)
0xffff8bdf8d20     0  sub csp, jssp, #0x8 (8)
0xffff8bdf8d24     4  str x3, [jssp, #-8]!
0xffff8bdf8d28     8  sub csp, jssp, #0x8 (8)
0xffff8bdf8d2c    12  str x4, [jssp, #-8]!
0xffff8bdf8d30    16  ldr x3, pc+112 (addr 0x0000ffff8bdf8da0)    ;; object: 0x327e9019 Cell for 0
0xffff8bdf8d34    20  ldur x3, [x3, #7]
0xffff8bdf8d38    24  cmp x3, #0x0 (0)
0xffff8bdf8d3c    28  b.ne #+0x44 (addr 0xffff8bdf8d80)
0xffff8bdf8d40    32  tbz w0, #0, #+0x40 (addr 0xffff8bdf8d80)
0xffff8bdf8d44    36  ldur x3, [x0, #-1]
0xffff8bdf8d48    40  ldr x4, pc+96 (addr 0x0000ffff8bdf8da8)    ;; object: 0x327ea249 WeakCell for 0x5f540951 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf8d4c    44  ldur x4, [x4, #7]
0xffff8bdf8d50    48  cmp x3, x4
0xffff8bdf8d54    52  b.ne #+0x2c (addr 0xffff8bdf8d80)
0xffff8bdf8d58    56  ldr x5, pc+88 (addr 0x0000ffff8bdf8db0)    ;; object: 0x327ea339 WeakCell for 0x5f5409a9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf8d5c    60  ldur x5, [x5, #7]
0xffff8bdf8d60    64  tbz w5, #0, #+0x20 (addr 0xffff8bdf8d80)
0xffff8bdf8d64    68  ldursw x4, [x5, #15]
0xffff8bdf8d68    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdf8d80)
0xffff8bdf8d6c    76  ldr x4, [jssp], #8
0xffff8bdf8d70    80  ldr x3, [jssp], #8
0xffff8bdf8d74    84  ldr x2, pc+68 (addr 0x0000ffff8bdf8db8)    ;; object: 0x26cf92c9 <String[14]: _writableState>
0xffff8bdf8d78    88  ldr x16, pc+72 (addr 0x0000ffff8bdf8dc0)    ;; code: HANDLER, StoreTransitionStub, minor: 196611
0xffff8bdf8d7c    92  br x16
0xffff8bdf8d80    96  ldr x2, pc+72 (addr 0x0000ffff8bdf8dc8)    ;; object: 0x26cf92c9 <String[14]: _writableState>
0xffff8bdf8d84   100  ldr x4, [jssp], #8
0xffff8bdf8d88   104  ldr x3, [jssp], #8
0xffff8bdf8d8c   108  ldr x16, pc+68 (addr 0x0000ffff8bdf8dd0)    ;; code: BUILTIN
0xffff8bdf8d90   112  br x16
0xffff8bdf8d94   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdf8d98   120  d63f03e0       constant
0xffff8bdf8d9c   124  d503201f       constant
0xffff8bdf8da0   128  327e9019       constant
0xffff8bdf8da4   132  00000000       constant
0xffff8bdf8da8   136  327ea249       constant
0xffff8bdf8dac   140  00000000       constant
0xffff8bdf8db0   144  327ea339       constant
0xffff8bdf8db4   148  00000000       constant
0xffff8bdf8db8   152  26cf92c9       constant
0xffff8bdf8dbc   156  00000000       constant
0xffff8bdf8dc0   160  8bd99940       constant
0xffff8bdf8dc4   164  0000ffff       constant
0xffff8bdf8dc8   168  26cf92c9       constant
0xffff8bdf8dcc   172  00000000       constant
0xffff8bdf8dd0   176  8bd22420       constant
0xffff8bdf8dd4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdf8d30  embedded object  (0x327e9019 Cell for 0)
0xffff8bdf8d48  embedded object  (0x327ea249 WeakCell for 0x5f540951 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf8d58  embedded object  (0x327ea339 WeakCell for 0x5f5409a9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf8d74  embedded object  (0x26cf92c9 <String[14]: _writableState>)
0xffff8bdf8d78  code target (HANDLER)  (0xffff8bd99940)
0xffff8bdf8d80  embedded object  (0x26cf92c9 <String[14]: _writableState>)
0xffff8bdf8d8c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf8d94  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = writable
compiler = unknown
Instructions (size = 152)
0xffff8bdf8e40     0  sub csp, jssp, #0x8 (8)
0xffff8bdf8e44     4  str x3, [jssp, #-8]!
0xffff8bdf8e48     8  sub csp, jssp, #0x8 (8)
0xffff8bdf8e4c    12  str x4, [jssp, #-8]!
0xffff8bdf8e50    16  ldr x3, pc+88 (addr 0x0000ffff8bdf8ea8)    ;; object: 0x327e9019 Cell for 0
0xffff8bdf8e54    20  ldur x3, [x3, #7]
0xffff8bdf8e58    24  cmp x3, #0x0 (0)
0xffff8bdf8e5c    28  b.ne #+0x30 (addr 0xffff8bdf8e8c)
0xffff8bdf8e60    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf8e8c)
0xffff8bdf8e64    36  ldr x5, pc+76 (addr 0x0000ffff8bdf8eb0)    ;; object: 0x327ea371 WeakCell for 0x5f540a01 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf8e68    40  ldur x5, [x5, #7]
0xffff8bdf8e6c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf8e8c)
0xffff8bdf8e70    48  ldursw x4, [x5, #15]
0xffff8bdf8e74    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf8e8c)
0xffff8bdf8e78    56  ldr x4, [jssp], #8
0xffff8bdf8e7c    60  ldr x3, [jssp], #8
0xffff8bdf8e80    64  ldr x2, pc+56 (addr 0x0000ffff8bdf8eb8)    ;; object: 0x26c057a9 <String[8]: writable>
0xffff8bdf8e84    68  ldr x16, pc+60 (addr 0x0000ffff8bdf8ec0)    ;; code: HANDLER, StoreTransitionStub, minor: 196612
0xffff8bdf8e88    72  br x16
0xffff8bdf8e8c    76  ldr x2, pc+60 (addr 0x0000ffff8bdf8ec8)    ;; object: 0x26c057a9 <String[8]: writable>
0xffff8bdf8e90    80  ldr x4, [jssp], #8
0xffff8bdf8e94    84  ldr x3, [jssp], #8
0xffff8bdf8e98    88  ldr x16, pc+56 (addr 0x0000ffff8bdf8ed0)    ;; code: BUILTIN
0xffff8bdf8e9c    92  br x16
0xffff8bdf8ea0    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf8ea4   100  d63f03e0       constant
0xffff8bdf8ea8   104  327e9019       constant
0xffff8bdf8eac   108  00000000       constant
0xffff8bdf8eb0   112  327ea371       constant
0xffff8bdf8eb4   116  00000000       constant
0xffff8bdf8eb8   120  26c057a9       constant
0xffff8bdf8ebc   124  00000000       constant
0xffff8bdf8ec0   128  8bd9a100       constant
0xffff8bdf8ec4   132  0000ffff       constant
0xffff8bdf8ec8   136  26c057a9       constant
0xffff8bdf8ecc   140  00000000       constant
0xffff8bdf8ed0   144  8bd22420       constant
0xffff8bdf8ed4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf8e50  embedded object  (0x327e9019 Cell for 0)
0xffff8bdf8e64  embedded object  (0x327ea371 WeakCell for 0x5f540a01 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf8e80  embedded object  (0x26c057a9 <String[8]: writable>)
0xffff8bdf8e84  code target (HANDLER)  (0xffff8bd9a100)
0xffff8bdf8e8c  embedded object  (0x26c057a9 <String[8]: writable>)
0xffff8bdf8e98  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf8ea0  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff8bdf8f40     0  tbz w0, #0, #+0x50 (addr 0xffff8bdf8f90)
0xffff8bdf8f44     4  mov x2, x0
0xffff8bdf8f48     8  stur x2, [x1, #79]
0xffff8bdf8f4c    12  add x3, x1, #0x4f (79)
0xffff8bdf8f50    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf8f54    20  ldr x2, [x2, #8]
0xffff8bdf8f58    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf8f7c)
0xffff8bdf8f5c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf8f60    32  ldr x2, [x2, #8]
0xffff8bdf8f64    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf8f7c)
0xffff8bdf8f68    40  sub csp, jssp, #0x8 (8)
0xffff8bdf8f6c    44  str lr, [jssp, #-8]!
0xffff8bdf8f70    48  ldr x16, pc+24 (addr 0x0000ffff8bdf8f88)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf8f74    52  blr x16
0xffff8bdf8f78    56  ldr lr, [jssp], #8
0xffff8bdf8f7c    60  ret
0xffff8bdf8f80    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf8f84    68  d63f03e0       constant
0xffff8bdf8f88    72  8bd170c0       constant
0xffff8bdf8f8c    76  0000ffff       constant
0xffff8bdf8f90    80  movz x16, #0x0
0xffff8bdf8f94    84  sub csp, jssp, #0x10 (16)
0xffff8bdf8f98    88  stp fp, lr, [jssp, #-16]!
0xffff8bdf8f9c    92  bl #+0x4 (addr 0xffff8bdf8fa0)
0xffff8bdf8fa0    96  movz x17, #0xa00000000
0xffff8bdf8fa4   100  sub csp, jssp, #0x10 (16)
0xffff8bdf8fa8   104  stp x17, cp, [jssp, #-16]!
0xffff8bdf8fac   108  add fp, jssp, #0x10 (16)
0xffff8bdf8fb0   112  ldr x17, pc+24 (addr 0x0000ffff8bdf8fc8)    ;; lazy deoptimization bailout 0
0xffff8bdf8fb4   116  add x17, x17, x16
0xffff8bdf8fb8   120  br x17
0xffff8bdf8fbc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf8fc0   128  d63f03e0       constant
0xffff8bdf8fc4   132  d503201f       constant
0xffff8bdf8fc8   136  8bb06000       constant
0xffff8bdf8fcc   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf8f70  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf8f80  constant pool (size 16)
0xffff8bdf8fb0  runtime entry
0xffff8bdf8fbc  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 152)
0xffff8bdf8f40     0  tbz w0, #0, #+0x50 (addr 0xffff8bdf8f90)
0xffff8bdf8f44     4  mov x2, x0
0xffff8bdf8f48     8  stur x2, [x1, #79]
0xffff8bdf8f4c    12  add x3, x1, #0x4f (79)
0xffff8bdf8f50    16  and x2, x2, #0xfffffffffff00000
0xffff8bdf8f54    20  ldr x2, [x2, #8]
0xffff8bdf8f58    24  tbz w2, #1, #+0x24 (addr 0xffff8bdf8f7c)
0xffff8bdf8f5c    28  and x2, x1, #0xfffffffffff00000
0xffff8bdf8f60    32  ldr x2, [x2, #8]
0xffff8bdf8f64    36  tbz w2, #2, #+0x18 (addr 0xffff8bdf8f7c)
0xffff8bdf8f68    40  sub csp, jssp, #0x8 (8)
0xffff8bdf8f6c    44  str lr, [jssp, #-8]!
0xffff8bdf8f70    48  ldr x16, pc+24 (addr 0x0000ffff8bdf8f88)    ;; code: STUB, RecordWriteStub, minor: 68673
0xffff8bdf8f74    52  blr x16
0xffff8bdf8f78    56  ldr lr, [jssp], #8
0xffff8bdf8f7c    60  ret
0xffff8bdf8f80    64  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdf8f84    68  d63f03e0       constant
0xffff8bdf8f88    72  8bd170c0       constant
0xffff8bdf8f8c    76  0000ffff       constant
0xffff8bdf8f90    80  movz x16, #0x0
0xffff8bdf8f94    84  sub csp, jssp, #0x10 (16)
0xffff8bdf8f98    88  stp fp, lr, [jssp, #-16]!
0xffff8bdf8f9c    92  bl #+0x4 (addr 0xffff8bdf8fa0)
0xffff8bdf8fa0    96  movz x17, #0xa00000000
0xffff8bdf8fa4   100  sub csp, jssp, #0x10 (16)
0xffff8bdf8fa8   104  stp x17, cp, [jssp, #-16]!
0xffff8bdf8fac   108  add fp, jssp, #0x10 (16)
0xffff8bdf8fb0   112  ldr x17, pc+24 (addr 0x0000ffff8bdf8fc8)    ;; lazy deoptimization bailout 0
0xffff8bdf8fb4   116  add x17, x17, x16
0xffff8bdf8fb8   120  br x17
0xffff8bdf8fbc   124  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf8fc0   128  d63f03e0       constant
0xffff8bdf8fc4   132  d503201f       constant
0xffff8bdf8fc8   136  8bb06000       constant
0xffff8bdf8fcc   140  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf8f70  code target (STUB)  (0xffff8bd170c0)
0xffff8bdf8f80  constant pool (size 16)
0xffff8bdf8fb0  runtime entry
0xffff8bdf8fbc  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = _events
compiler = unknown
Instructions (size = 120)
0xffff8bdf9040     0  sub csp, jssp, #0x8 (8)
0xffff8bdf9044     4  str x3, [jssp, #-8]!
0xffff8bdf9048     8  sub csp, jssp, #0x8 (8)
0xffff8bdf904c    12  str x0, [jssp, #-8]!
0xffff8bdf9050    16  ldr x0, pc+72 (addr 0x0000ffff8bdf9098)    ;; object: 0x327ea479 Cell for 0
0xffff8bdf9054    20  ldur x0, [x0, #7]
0xffff8bdf9058    24  cmp x0, #0x0 (0)
0xffff8bdf905c    28  b.ne #+0x14 (addr 0xffff8bdf9070)
0xffff8bdf9060    32  ldr x3, pc+64 (addr 0x0000ffff8bdf90a0)    ;; object: 0x327ea489 WeakCell for 0x327acc41 <an Object with map 0x5f51bf39>
0xffff8bdf9064    36  ldur x3, [x3, #7]
0xffff8bdf9068    40  tbz w3, #0, #+0x8 (addr 0xffff8bdf9070)
0xffff8bdf906c    44  b #+0x14 (addr 0xffff8bdf9080)
0xffff8bdf9070    48  ldr x0, [jssp], #8
0xffff8bdf9074    52  ldr x3, [jssp], #8
0xffff8bdf9078    56  ldr x16, pc+48 (addr 0x0000ffff8bdf90a8)    ;; code: BUILTIN
0xffff8bdf907c    60  br x16
0xffff8bdf9080    64  add jssp, jssp, #0x10 (16)
0xffff8bdf9084    68  mov x1, x3
0xffff8bdf9088    72  ldr x16, pc+40 (addr 0x0000ffff8bdf90b0)    ;; code: HANDLER, LoadFieldStub, minor: 2052
0xffff8bdf908c    76  br x16
0xffff8bdf9090    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdf9094    84  d63f03e0       constant
0xffff8bdf9098    88  327ea479       constant
0xffff8bdf909c    92  00000000       constant
0xffff8bdf90a0    96  327ea489       constant
0xffff8bdf90a4   100  00000000       constant
0xffff8bdf90a8   104  8bd222e0       constant
0xffff8bdf90ac   108  0000ffff       constant
0xffff8bdf90b0   112  8bd78da0       constant
0xffff8bdf90b4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdf9050  embedded object  (0x327ea479 Cell for 0)
0xffff8bdf9060  embedded object  (0x327ea489 WeakCell for 0x327acc41 <an Object with map 0x5f51bf39>)
0xffff8bdf9078  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdf9088  code target (HANDLER)  (0xffff8bd78da0)
0xffff8bdf9090  constant pool (size 40)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf9120     0  tbz w0, #0, #+0x58 (addr 0xffff8bdf9178)
0xffff8bdf9124     4  mov x2, x0
0xffff8bdf9128     8  ldur x4, [x1, #7]
0xffff8bdf912c    12  stur x2, [x4, #15]
0xffff8bdf9130    16  add x3, x4, #0xf (15)
0xffff8bdf9134    20  and x2, x2, #0xfffffffffff00000
0xffff8bdf9138    24  ldr x2, [x2, #8]
0xffff8bdf913c    28  tbz w2, #1, #+0x24 (addr 0xffff8bdf9160)
0xffff8bdf9140    32  and x2, x4, #0xfffffffffff00000
0xffff8bdf9144    36  ldr x2, [x2, #8]
0xffff8bdf9148    40  tbz w2, #2, #+0x18 (addr 0xffff8bdf9160)
0xffff8bdf914c    44  sub csp, jssp, #0x8 (8)
0xffff8bdf9150    48  str lr, [jssp, #-8]!
0xffff8bdf9154    52  ldr x16, pc+28 (addr 0x0000ffff8bdf9170)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdf9158    56  blr x16
0xffff8bdf915c    60  ldr lr, [jssp], #8
0xffff8bdf9160    64  ret
0xffff8bdf9164    68  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf9168    72  d63f03e0       constant
0xffff8bdf916c    76  d503201f       constant
0xffff8bdf9170    80  8bd378a0       constant
0xffff8bdf9174    84  0000ffff       constant
0xffff8bdf9178    88  movz x16, #0x0
0xffff8bdf917c    92  sub csp, jssp, #0x10 (16)
0xffff8bdf9180    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf9184   100  bl #+0x4 (addr 0xffff8bdf9188)
0xffff8bdf9188   104  movz x17, #0xa00000000
0xffff8bdf918c   108  sub csp, jssp, #0x10 (16)
0xffff8bdf9190   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf9194   116  add fp, jssp, #0x10 (16)
0xffff8bdf9198   120  ldr x17, pc+24 (addr 0x0000ffff8bdf91b0)    ;; lazy deoptimization bailout 0
0xffff8bdf919c   124  add x17, x17, x16
0xffff8bdf91a0   128  br x17
0xffff8bdf91a4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf91a8   136  d63f03e0       constant
0xffff8bdf91ac   140  d503201f       constant
0xffff8bdf91b0   144  8bb06000       constant
0xffff8bdf91b4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf9154  code target (STUB)  (0xffff8bd378a0)
0xffff8bdf9164  constant pool (size 20)
0xffff8bdf9198  runtime entry
0xffff8bdf91a4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 160)
0xffff8bdf9120     0  tbz w0, #0, #+0x58 (addr 0xffff8bdf9178)
0xffff8bdf9124     4  mov x2, x0
0xffff8bdf9128     8  ldur x4, [x1, #7]
0xffff8bdf912c    12  stur x2, [x4, #15]
0xffff8bdf9130    16  add x3, x4, #0xf (15)
0xffff8bdf9134    20  and x2, x2, #0xfffffffffff00000
0xffff8bdf9138    24  ldr x2, [x2, #8]
0xffff8bdf913c    28  tbz w2, #1, #+0x24 (addr 0xffff8bdf9160)
0xffff8bdf9140    32  and x2, x4, #0xfffffffffff00000
0xffff8bdf9144    36  ldr x2, [x2, #8]
0xffff8bdf9148    40  tbz w2, #2, #+0x18 (addr 0xffff8bdf9160)
0xffff8bdf914c    44  sub csp, jssp, #0x8 (8)
0xffff8bdf9150    48  str lr, [jssp, #-8]!
0xffff8bdf9154    52  ldr x16, pc+28 (addr 0x0000ffff8bdf9170)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdf9158    56  blr x16
0xffff8bdf915c    60  ldr lr, [jssp], #8
0xffff8bdf9160    64  ret
0xffff8bdf9164    68  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf9168    72  d63f03e0       constant
0xffff8bdf916c    76  d503201f       constant
0xffff8bdf9170    80  8bd378a0       constant
0xffff8bdf9174    84  0000ffff       constant
0xffff8bdf9178    88  movz x16, #0x0
0xffff8bdf917c    92  sub csp, jssp, #0x10 (16)
0xffff8bdf9180    96  stp fp, lr, [jssp, #-16]!
0xffff8bdf9184   100  bl #+0x4 (addr 0xffff8bdf9188)
0xffff8bdf9188   104  movz x17, #0xa00000000
0xffff8bdf918c   108  sub csp, jssp, #0x10 (16)
0xffff8bdf9190   112  stp x17, cp, [jssp, #-16]!
0xffff8bdf9194   116  add fp, jssp, #0x10 (16)
0xffff8bdf9198   120  ldr x17, pc+24 (addr 0x0000ffff8bdf91b0)    ;; lazy deoptimization bailout 0
0xffff8bdf919c   124  add x17, x17, x16
0xffff8bdf91a0   128  br x17
0xffff8bdf91a4   132  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdf91a8   136  d63f03e0       constant
0xffff8bdf91ac   140  d503201f       constant
0xffff8bdf91b0   144  8bb06000       constant
0xffff8bdf91b4   148  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdf9154  code target (STUB)  (0xffff8bd378a0)
0xffff8bdf9164  constant pool (size 20)
0xffff8bdf9198  runtime entry
0xffff8bdf91a4  constant pool (size 20)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = BOOLEAN*BOOLEAN -> BOOLEAN
compare_operation = EQ_STRICT
name = CompareICStub
compiler = unknown
Instructions (size = 184)
0xffff8bdf9220     0  tbz w1, #0, #+0x30 (addr 0xffff8bdf9250)
0xffff8bdf9224     4  ldur x2, [x1, #-1]
0xffff8bdf9228     8  ldr x16, [x26, #840]
0xffff8bdf922c    12  cmp x2, x16
0xffff8bdf9230    16  b.ne #+0x20 (addr 0xffff8bdf9250)
0xffff8bdf9234    20  tbz w0, #0, #+0x1c (addr 0xffff8bdf9250)
0xffff8bdf9238    24  ldur x3, [x0, #-1]
0xffff8bdf923c    28  ldr x16, [x26, #840]
0xffff8bdf9240    32  cmp x3, x16
0xffff8bdf9244    36  b.ne #+0xc (addr 0xffff8bdf9250)
0xffff8bdf9248    40  sub x0, x1, x0
0xffff8bdf924c    44  ret
0xffff8bdf9250    48  movz x16, #0xc00000000
0xffff8bdf9254    52  sub csp, jssp, #0x10 (16)
0xffff8bdf9258    56  stp fp, lr, [jssp, #-16]!
0xffff8bdf925c    60  sub csp, jssp, #0x10 (16)
0xffff8bdf9260    64  str x16, [jssp, #-8]!
0xffff8bdf9264    68  ldr x17, pc+92 (addr 0x0000ffff8bdf92c0)    ;; object: 0xffff8bdf91c1 <Code: COMPARE_IC>
0xffff8bdf9268    72  sub csp, jssp, #0x10 (16)
0xffff8bdf926c    76  str x17, [jssp, #-8]!
0xffff8bdf9270    80  add fp, jssp, #0x10 (16)
0xffff8bdf9274    84  sub csp, jssp, #0x18 (24)
0xffff8bdf9278    88  stp lr, x0, [jssp, #-24]!
0xffff8bdf927c    92  str x1, [jssp, #16]
0xffff8bdf9280    96  movz x10, #0x2f00000000
0xffff8bdf9284   100  sub csp, jssp, #0x18 (24)
0xffff8bdf9288   104  stp x10, x0, [jssp, #-24]!
0xffff8bdf928c   108  str x1, [jssp, #16]
0xffff8bdf9290   112  movz x0, #0x3
0xffff8bdf9294   116  ldr x1, pc+52 (addr 0x0000ffff8bdf92c8)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8bdf9298   120  ldr x16, pc+56 (addr 0x0000ffff8bdf92d0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdf929c   124  blr x16
0xffff8bdf92a0   128  add x11, x0, #0x5f (95)
0xffff8bdf92a4   132  ldr x1, [jssp, #16]
0xffff8bdf92a8   136  ldp lr, x0, [jssp], #24
0xffff8bdf92ac   140  mov jssp, fp
0xffff8bdf92b0   144  ldp fp, lr, [jssp], #16
0xffff8bdf92b4   148  br x11
0xffff8bdf92b8   152  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bdf92bc   156  d63f03e0       constant
0xffff8bdf92c0   160  8bdf91c1       constant
0xffff8bdf92c4   164  0000ffff       constant
0xffff8bdf92c8   168  00c8a980       constant
0xffff8bdf92cc   172  00000000       constant
0xffff8bdf92d0   176  8bd06060       constant
0xffff8bdf92d4   180  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf9264  embedded object  (0xffff8bdf91c1 <Code: COMPARE_IC>)
0xffff8bdf9294  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8bdf9298  code target (STUB)  (0xffff8bd06060)
0xffff8bdf92b8  constant pool (size 32)


kind = HANDLER
major_key = <NoCache>Stub
name = end
compiler = unknown
Instructions (size = 152)
0xffff8bdf9ee0     0  sub csp, jssp, #0x8 (8)
0xffff8bdf9ee4     4  str x3, [jssp, #-8]!
0xffff8bdf9ee8     8  sub csp, jssp, #0x8 (8)
0xffff8bdf9eec    12  str x4, [jssp, #-8]!
0xffff8bdf9ef0    16  ldr x3, pc+88 (addr 0x0000ffff8bdf9f48)    ;; object: 0x327d1f99 Cell for 0
0xffff8bdf9ef4    20  ldur x3, [x3, #7]
0xffff8bdf9ef8    24  cmp x3, #0x0 (0)
0xffff8bdf9efc    28  b.ne #+0x30 (addr 0xffff8bdf9f2c)
0xffff8bdf9f00    32  tbz w0, #0, #+0x2c (addr 0xffff8bdf9f2c)
0xffff8bdf9f04    36  ldr x5, pc+76 (addr 0x0000ffff8bdf9f50)    ;; object: 0x327eace1 WeakCell for 0x5f540b09 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdf9f08    40  ldur x5, [x5, #7]
0xffff8bdf9f0c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdf9f2c)
0xffff8bdf9f10    48  ldursw x4, [x5, #15]
0xffff8bdf9f14    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdf9f2c)
0xffff8bdf9f18    56  ldr x4, [jssp], #8
0xffff8bdf9f1c    60  ldr x3, [jssp], #8
0xffff8bdf9f20    64  ldr x2, pc+56 (addr 0x0000ffff8bdf9f58)    ;; object: 0x26c93989 <String[3]: end>
0xffff8bdf9f24    68  ldr x16, pc+60 (addr 0x0000ffff8bdf9f60)    ;; code: HANDLER, StoreTransitionStub, minor: 198659
0xffff8bdf9f28    72  br x16
0xffff8bdf9f2c    76  ldr x2, pc+60 (addr 0x0000ffff8bdf9f68)    ;; object: 0x26c93989 <String[3]: end>
0xffff8bdf9f30    80  ldr x4, [jssp], #8
0xffff8bdf9f34    84  ldr x3, [jssp], #8
0xffff8bdf9f38    88  ldr x16, pc+56 (addr 0x0000ffff8bdf9f70)    ;; code: BUILTIN
0xffff8bdf9f3c    92  br x16
0xffff8bdf9f40    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdf9f44   100  d63f03e0       constant
0xffff8bdf9f48   104  327d1f99       constant
0xffff8bdf9f4c   108  00000000       constant
0xffff8bdf9f50   112  327eace1       constant
0xffff8bdf9f54   116  00000000       constant
0xffff8bdf9f58   120  26c93989       constant
0xffff8bdf9f5c   124  00000000       constant
0xffff8bdf9f60   128  8bd8b940       constant
0xffff8bdf9f64   132  0000ffff       constant
0xffff8bdf9f68   136  26c93989       constant
0xffff8bdf9f6c   140  00000000       constant
0xffff8bdf9f70   144  8bd22420       constant
0xffff8bdf9f74   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdf9ef0  embedded object  (0x327d1f99 Cell for 0)
0xffff8bdf9f04  embedded object  (0x327eace1 WeakCell for 0x5f540b09 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdf9f20  embedded object  (0x26c93989 <String[3]: end>)
0xffff8bdf9f24  code target (HANDLER)  (0xffff8bd8b940)
0xffff8bdf9f2c  embedded object  (0x26c93989 <String[3]: end>)
0xffff8bdf9f38  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdf9f40  constant pool (size 56)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bdf9fe0     0  ldur x0, [x1, #95]
0xffff8bdf9fe4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadFieldStub
name = LoadFieldStub
compiler = crankshaft
Instructions (size = 16)
0xffff8bdf9fe0     0  ldur x0, [x1, #95]
0xffff8bdf9fe4     4  ret


Safepoints (size = 8)

RelocInfo (size = 0)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff8bdfa060     0  mov x5, x0
0xffff8bdfa064     4  tbnz w5, #0, #+0xc (addr 0xffff8bdfa070)
0xffff8bdfa068     8  stur x5, [x1, #95]
0xffff8bdfa06c    12  ret
0xffff8bdfa070    16  movz x16, #0x0
0xffff8bdfa074    20  sub csp, jssp, #0x10 (16)
0xffff8bdfa078    24  stp fp, lr, [jssp, #-16]!
0xffff8bdfa07c    28  bl #+0x4 (addr 0xffff8bdfa080)
0xffff8bdfa080    32  movz x17, #0xa00000000
0xffff8bdfa084    36  sub csp, jssp, #0x10 (16)
0xffff8bdfa088    40  stp x17, cp, [jssp, #-16]!
0xffff8bdfa08c    44  add fp, jssp, #0x10 (16)
0xffff8bdfa090    48  ldr x17, pc+24 (addr 0x0000ffff8bdfa0a8)    ;; lazy deoptimization bailout 0
0xffff8bdfa094    52  add x17, x17, x16
0xffff8bdfa098    56  br x17
0xffff8bdfa09c    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdfa0a0    64  d63f03e0       constant
0xffff8bdfa0a4    68  d503201f       constant
0xffff8bdfa0a8    72  8bb06000       constant
0xffff8bdfa0ac    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff8bdfa090  runtime entry
0xffff8bdfa09c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreFieldStub
name = StoreFieldStub
compiler = crankshaft
Instructions (size = 88)
0xffff8bdfa060     0  mov x5, x0
0xffff8bdfa064     4  tbnz w5, #0, #+0xc (addr 0xffff8bdfa070)
0xffff8bdfa068     8  stur x5, [x1, #95]
0xffff8bdfa06c    12  ret
0xffff8bdfa070    16  movz x16, #0x0
0xffff8bdfa074    20  sub csp, jssp, #0x10 (16)
0xffff8bdfa078    24  stp fp, lr, [jssp, #-16]!
0xffff8bdfa07c    28  bl #+0x4 (addr 0xffff8bdfa080)
0xffff8bdfa080    32  movz x17, #0xa00000000
0xffff8bdfa084    36  sub csp, jssp, #0x10 (16)
0xffff8bdfa088    40  stp x17, cp, [jssp, #-16]!
0xffff8bdfa08c    44  add fp, jssp, #0x10 (16)
0xffff8bdfa090    48  ldr x17, pc+24 (addr 0x0000ffff8bdfa0a8)    ;; lazy deoptimization bailout 0
0xffff8bdfa094    52  add x17, x17, x16
0xffff8bdfa098    56  br x17
0xffff8bdfa09c    60  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdfa0a0    64  d63f03e0       constant
0xffff8bdfa0a4    68  d503201f       constant
0xffff8bdfa0a8    72  8bb06000       constant
0xffff8bdfa0ac    76  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 8)
0xffff8bdfa090  runtime entry
0xffff8bdfa09c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = on
compiler = unknown
Instructions (size = 120)
0xffff8bdfa120     0  sub csp, jssp, #0x8 (8)
0xffff8bdfa124     4  str x3, [jssp, #-8]!
0xffff8bdfa128     8  sub csp, jssp, #0x8 (8)
0xffff8bdfa12c    12  str x0, [jssp, #-8]!
0xffff8bdfa130    16  ldr x0, pc+72 (addr 0x0000ffff8bdfa178)    ;; object: 0x327eadf1 Cell for 0
0xffff8bdfa134    20  ldur x0, [x0, #7]
0xffff8bdfa138    24  cmp x0, #0x0 (0)
0xffff8bdfa13c    28  b.ne #+0x14 (addr 0xffff8bdfa150)
0xffff8bdfa140    32  ldr x3, pc+64 (addr 0x0000ffff8bdfa180)    ;; object: 0x327eae01 WeakCell for 0x327acc41 <an Object with map 0x5f51bf39>
0xffff8bdfa144    36  ldur x3, [x3, #7]
0xffff8bdfa148    40  tbz w3, #0, #+0x8 (addr 0xffff8bdfa150)
0xffff8bdfa14c    44  b #+0x14 (addr 0xffff8bdfa160)
0xffff8bdfa150    48  ldr x0, [jssp], #8
0xffff8bdfa154    52  ldr x3, [jssp], #8
0xffff8bdfa158    56  ldr x16, pc+48 (addr 0x0000ffff8bdfa188)    ;; code: BUILTIN
0xffff8bdfa15c    60  br x16
0xffff8bdfa160    64  add jssp, jssp, #0x10 (16)
0xffff8bdfa164    68  mov x1, x3
0xffff8bdfa168    72  ldr x16, pc+40 (addr 0x0000ffff8bdfa190)    ;; code: HANDLER, LoadConstantStub, minor: 8
0xffff8bdfa16c    76  br x16
0xffff8bdfa170    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdfa174    84  d63f03e0       constant
0xffff8bdfa178    88  327eadf1       constant
0xffff8bdfa17c    92  00000000       constant
0xffff8bdfa180    96  327eae01       constant
0xffff8bdfa184   100  00000000       constant
0xffff8bdfa188   104  8bd222e0       constant
0xffff8bdfa18c   108  0000ffff       constant
0xffff8bdfa190   112  8bd4c160       constant
0xffff8bdfa194   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdfa130  embedded object  (0x327eadf1 Cell for 0)
0xffff8bdfa140  embedded object  (0x327eae01 WeakCell for 0x327acc41 <an Object with map 0x5f51bf39>)
0xffff8bdfa158  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdfa168  code target (HANDLER)  (0xffff8bd4c160)
0xffff8bdfa170  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = finish
compiler = unknown
Instructions (size = 168)
0xffff8bdfa200     0  sub csp, jssp, #0x8 (8)
0xffff8bdfa204     4  str x3, [jssp, #-8]!
0xffff8bdfa208     8  sub csp, jssp, #0x8 (8)
0xffff8bdfa20c    12  str x4, [jssp, #-8]!
0xffff8bdfa210    16  ldr x3, pc+104 (addr 0x0000ffff8bdfa278)    ;; object: 0x327d1f99 Cell for 0
0xffff8bdfa214    20  ldur x3, [x3, #7]
0xffff8bdfa218    24  cmp x3, #0x0 (0)
0xffff8bdfa21c    28  b.ne #+0x3c (addr 0xffff8bdfa258)
0xffff8bdfa220    32  ldr x5, pc+96 (addr 0x0000ffff8bdfa280)    ;; object: 0x327eae51 WeakCell for 0x5f540b61 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfa224    36  ldur x5, [x5, #7]
0xffff8bdfa228    40  tbz w5, #0, #+0x30 (addr 0xffff8bdfa258)
0xffff8bdfa22c    44  ldursw x4, [x5, #15]
0xffff8bdfa230    48  tbnz w4, #23, #+0x28 (addr 0xffff8bdfa258)
0xffff8bdfa234    52  ldur x4, [x5, #47]
0xffff8bdfa238    56  ldur x4, [x4, #71]
0xffff8bdfa23c    60  cmp x0, x4
0xffff8bdfa240    64  b.ne #+0x18 (addr 0xffff8bdfa258)
0xffff8bdfa244    68  ldr x4, [jssp], #8
0xffff8bdfa248    72  ldr x3, [jssp], #8
0xffff8bdfa24c    76  ldr x2, pc+60 (addr 0x0000ffff8bdfa288)    ;; object: 0x3270f0e9 <String[6]: finish>
0xffff8bdfa250    80  ldr x16, pc+64 (addr 0x0000ffff8bdfa290)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff8bdfa254    84  br x16
0xffff8bdfa258    88  ldr x2, pc+64 (addr 0x0000ffff8bdfa298)    ;; object: 0x3270f0e9 <String[6]: finish>
0xffff8bdfa25c    92  ldr x4, [jssp], #8
0xffff8bdfa260    96  ldr x3, [jssp], #8
0xffff8bdfa264   100  ldr x16, pc+60 (addr 0x0000ffff8bdfa2a0)    ;; code: BUILTIN
0xffff8bdfa268   104  br x16
0xffff8bdfa26c   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdfa270   112  d63f03e0       constant
0xffff8bdfa274   116  d503201f       constant
0xffff8bdfa278   120  327d1f99       constant
0xffff8bdfa27c   124  00000000       constant
0xffff8bdfa280   128  327eae51       constant
0xffff8bdfa284   132  00000000       constant
0xffff8bdfa288   136  3270f0e9       constant
0xffff8bdfa28c   140  00000000       constant
0xffff8bdfa290   144  8bd3cea0       constant
0xffff8bdfa294   148  0000ffff       constant
0xffff8bdfa298   152  3270f0e9       constant
0xffff8bdfa29c   156  00000000       constant
0xffff8bdfa2a0   160  8bd22420       constant
0xffff8bdfa2a4   164  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdfa210  embedded object  (0x327d1f99 Cell for 0)
0xffff8bdfa220  embedded object  (0x327eae51 WeakCell for 0x5f540b61 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfa24c  embedded object  (0x3270f0e9 <String[6]: finish>)
0xffff8bdfa250  code target (HANDLER)  (0xffff8bd3cea0)
0xffff8bdfa258  embedded object  (0x3270f0e9 <String[6]: finish>)
0xffff8bdfa264  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdfa26c  constant pool (size 60)

kind = HANDLER
major_key = <NoCache>Stub
name = _socketEnd
compiler = unknown
Instructions (size = 168)
0xffff8bdfa320     0  sub csp, jssp, #0x8 (8)
0xffff8bdfa324     4  str x3, [jssp, #-8]!
0xffff8bdfa328     8  sub csp, jssp, #0x8 (8)
0xffff8bdfa32c    12  str x4, [jssp, #-8]!
0xffff8bdfa330    16  ldr x3, pc+104 (addr 0x0000ffff8bdfa398)    ;; object: 0x327d1f99 Cell for 0
0xffff8bdfa334    20  ldur x3, [x3, #7]
0xffff8bdfa338    24  cmp x3, #0x0 (0)
0xffff8bdfa33c    28  b.ne #+0x3c (addr 0xffff8bdfa378)
0xffff8bdfa340    32  ldr x5, pc+96 (addr 0x0000ffff8bdfa3a0)    ;; object: 0x327eaea1 WeakCell for 0x5f540bb9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfa344    36  ldur x5, [x5, #7]
0xffff8bdfa348    40  tbz w5, #0, #+0x30 (addr 0xffff8bdfa378)
0xffff8bdfa34c    44  ldursw x4, [x5, #15]
0xffff8bdfa350    48  tbnz w4, #23, #+0x28 (addr 0xffff8bdfa378)
0xffff8bdfa354    52  ldur x4, [x5, #47]
0xffff8bdfa358    56  ldur x4, [x4, #95]
0xffff8bdfa35c    60  cmp x0, x4
0xffff8bdfa360    64  b.ne #+0x18 (addr 0xffff8bdfa378)
0xffff8bdfa364    68  ldr x4, [jssp], #8
0xffff8bdfa368    72  ldr x3, [jssp], #8
0xffff8bdfa36c    76  ldr x2, pc+60 (addr 0x0000ffff8bdfa3a8)    ;; object: 0x327d3e71 <String[10]: _socketEnd>
0xffff8bdfa370    80  ldr x16, pc+64 (addr 0x0000ffff8bdfa3b0)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff8bdfa374    84  br x16
0xffff8bdfa378    88  ldr x2, pc+64 (addr 0x0000ffff8bdfa3b8)    ;; object: 0x327d3e71 <String[10]: _socketEnd>
0xffff8bdfa37c    92  ldr x4, [jssp], #8
0xffff8bdfa380    96  ldr x3, [jssp], #8
0xffff8bdfa384   100  ldr x16, pc+60 (addr 0x0000ffff8bdfa3c0)    ;; code: BUILTIN
0xffff8bdfa388   104  br x16
0xffff8bdfa38c   108  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdfa390   112  d63f03e0       constant
0xffff8bdfa394   116  d503201f       constant
0xffff8bdfa398   120  327d1f99       constant
0xffff8bdfa39c   124  00000000       constant
0xffff8bdfa3a0   128  327eaea1       constant
0xffff8bdfa3a4   132  00000000       constant
0xffff8bdfa3a8   136  327d3e71       constant
0xffff8bdfa3ac   140  00000000       constant
0xffff8bdfa3b0   144  8bd3cea0       constant
0xffff8bdfa3b4   148  0000ffff       constant
0xffff8bdfa3b8   152  327d3e71       constant
0xffff8bdfa3bc   156  00000000       constant
0xffff8bdfa3c0   160  8bd22420       constant
0xffff8bdfa3c4   164  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdfa330  embedded object  (0x327d1f99 Cell for 0)
0xffff8bdfa340  embedded object  (0x327eaea1 WeakCell for 0x5f540bb9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfa36c  embedded object  (0x327d3e71 <String[10]: _socketEnd>)
0xffff8bdfa370  code target (HANDLER)  (0xffff8bd3cea0)
0xffff8bdfa378  embedded object  (0x327d3e71 <String[10]: _socketEnd>)
0xffff8bdfa384  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdfa38c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdfa7a0     0  ldur x4, [x1, #15]
0xffff8bdfa7a4     4  ldur w5, [x1, #27]
0xffff8bdfa7a8     8  tbnz w2, #0, #+0x24 (addr 0xffff8bdfa7cc)
0xffff8bdfa7ac    12  asr x7, x2, #32
0xffff8bdfa7b0    16  cmp w7, w5
0xffff8bdfa7b4    20  b.hs #+0x40 (addr 0xffff8bdfa7f4)
0xffff8bdfa7b8    24  add x5, x4, #0xf (15)
0xffff8bdfa7bc    28  ldr x6, [x5, w7, sxtw #3]
0xffff8bdfa7c0    32  tbnz w6, #0, #+0x44 (addr 0xffff8bdfa804)
0xffff8bdfa7c4    36  mov x0, x6
0xffff8bdfa7c8    40  ret
0xffff8bdfa7cc    44  ldur x16, [x2, #-1]
0xffff8bdfa7d0    48  ldr x17, [x26, #120]
0xffff8bdfa7d4    52  cmp x16, x17
0xffff8bdfa7d8    56  b.ne #+0x3c (addr 0xffff8bdfa814)
0xffff8bdfa7dc    60  ldur d29, [x2, #7]
0xffff8bdfa7e0    64  fcvtzs w7, d29
0xffff8bdfa7e4    68  scvtf d0, w7
0xffff8bdfa7e8    72  fcmp d29, d0
0xffff8bdfa7ec    76  b.ne #+0x28 (addr 0xffff8bdfa814)
0xffff8bdfa7f0    80  b #-0x40 (addr 0xffff8bdfa7b0)
0xffff8bdfa7f4    84  movz x16, #0x0
0xffff8bdfa7f8    88  sub csp, jssp, #0x10 (16)
0xffff8bdfa7fc    92  stp fp, lr, [jssp, #-16]!
0xffff8bdfa800    96  bl #+0x24 (addr 0xffff8bdfa824)
0xffff8bdfa804   100  movz x16, #0x8
0xffff8bdfa808   104  sub csp, jssp, #0x10 (16)
0xffff8bdfa80c   108  stp fp, lr, [jssp, #-16]!
0xffff8bdfa810   112  bl #+0x14 (addr 0xffff8bdfa824)
0xffff8bdfa814   116  movz x16, #0x10
0xffff8bdfa818   120  sub csp, jssp, #0x10 (16)
0xffff8bdfa81c   124  stp fp, lr, [jssp, #-16]!
0xffff8bdfa820   128  bl #+0x4 (addr 0xffff8bdfa824)
0xffff8bdfa824   132  movz x17, #0xa00000000
0xffff8bdfa828   136  sub csp, jssp, #0x10 (16)
0xffff8bdfa82c   140  stp x17, cp, [jssp, #-16]!
0xffff8bdfa830   144  add fp, jssp, #0x10 (16)
0xffff8bdfa834   148  ldr x17, pc+20 (addr 0x0000ffff8bdfa848)    ;; lazy deoptimization bailout 0
0xffff8bdfa838   152  add x17, x17, x16
0xffff8bdfa83c   156  br x17
0xffff8bdfa840   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdfa844   164  d63f03e0       constant
0xffff8bdfa848   168  8bb06000       constant
0xffff8bdfa84c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bdfa834  runtime entry
0xffff8bdfa840  constant pool (size 16)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 184)
0xffff8bdfa7a0     0  ldur x4, [x1, #15]
0xffff8bdfa7a4     4  ldur w5, [x1, #27]
0xffff8bdfa7a8     8  tbnz w2, #0, #+0x24 (addr 0xffff8bdfa7cc)
0xffff8bdfa7ac    12  asr x7, x2, #32
0xffff8bdfa7b0    16  cmp w7, w5
0xffff8bdfa7b4    20  b.hs #+0x40 (addr 0xffff8bdfa7f4)
0xffff8bdfa7b8    24  add x5, x4, #0xf (15)
0xffff8bdfa7bc    28  ldr x6, [x5, w7, sxtw #3]
0xffff8bdfa7c0    32  tbnz w6, #0, #+0x44 (addr 0xffff8bdfa804)
0xffff8bdfa7c4    36  mov x0, x6
0xffff8bdfa7c8    40  ret
0xffff8bdfa7cc    44  ldur x16, [x2, #-1]
0xffff8bdfa7d0    48  ldr x17, [x26, #120]
0xffff8bdfa7d4    52  cmp x16, x17
0xffff8bdfa7d8    56  b.ne #+0x3c (addr 0xffff8bdfa814)
0xffff8bdfa7dc    60  ldur d29, [x2, #7]
0xffff8bdfa7e0    64  fcvtzs w7, d29
0xffff8bdfa7e4    68  scvtf d0, w7
0xffff8bdfa7e8    72  fcmp d29, d0
0xffff8bdfa7ec    76  b.ne #+0x28 (addr 0xffff8bdfa814)
0xffff8bdfa7f0    80  b #-0x40 (addr 0xffff8bdfa7b0)
0xffff8bdfa7f4    84  movz x16, #0x0
0xffff8bdfa7f8    88  sub csp, jssp, #0x10 (16)
0xffff8bdfa7fc    92  stp fp, lr, [jssp, #-16]!
0xffff8bdfa800    96  bl #+0x24 (addr 0xffff8bdfa824)
0xffff8bdfa804   100  movz x16, #0x8
0xffff8bdfa808   104  sub csp, jssp, #0x10 (16)
0xffff8bdfa80c   108  stp fp, lr, [jssp, #-16]!
0xffff8bdfa810   112  bl #+0x14 (addr 0xffff8bdfa824)
0xffff8bdfa814   116  movz x16, #0x10
0xffff8bdfa818   120  sub csp, jssp, #0x10 (16)
0xffff8bdfa81c   124  stp fp, lr, [jssp, #-16]!
0xffff8bdfa820   128  bl #+0x4 (addr 0xffff8bdfa824)
0xffff8bdfa824   132  movz x17, #0xa00000000
0xffff8bdfa828   136  sub csp, jssp, #0x10 (16)
0xffff8bdfa82c   140  stp x17, cp, [jssp, #-16]!
0xffff8bdfa830   144  add fp, jssp, #0x10 (16)
0xffff8bdfa834   148  ldr x17, pc+20 (addr 0x0000ffff8bdfa848)    ;; lazy deoptimization bailout 0
0xffff8bdfa838   152  add x17, x17, x16
0xffff8bdfa83c   156  br x17
0xffff8bdfa840   160  5800007f       constant pool begin (num_const = 3)    ;; constant pool
0xffff8bdfa844   164  d63f03e0       constant
0xffff8bdfa848   168  8bb06000       constant
0xffff8bdfa84c   172  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 10)
0xffff8bdfa834  runtime entry
0xffff8bdfa840  constant pool (size 16)


--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff8bdfa8c0     0  mov x6, x0
0xffff8bdfa8c4     4  tbnz w6, #0, #+0x5c (addr 0xffff8bdfa920)
0xffff8bdfa8c8     8  ldur x3, [x1, #7]
0xffff8bdfa8cc    12  stur x6, [x3, #143]
0xffff8bdfa8d0    16  stur x5, [x1, #-1]
0xffff8bdfa8d4    20  tbz w5, #0, #+0x34 (addr 0xffff8bdfa908)
0xffff8bdfa8d8    24  sub x2, x1, #0x1 (1)
0xffff8bdfa8dc    28  and x5, x5, #0xfffffffffff00000
0xffff8bdfa8e0    32  ldr x5, [x5, #8]
0xffff8bdfa8e4    36  tbz w5, #1, #+0x24 (addr 0xffff8bdfa908)
0xffff8bdfa8e8    40  and x5, x1, #0xfffffffffff00000
0xffff8bdfa8ec    44  ldr x5, [x5, #8]
0xffff8bdfa8f0    48  tbz w5, #2, #+0x18 (addr 0xffff8bdfa908)
0xffff8bdfa8f4    52  sub csp, jssp, #0x8 (8)
0xffff8bdfa8f8    56  str lr, [jssp, #-8]!
0xffff8bdfa8fc    60  ldr x16, pc+28 (addr 0x0000ffff8bdfa918)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdfa900    64  blr x16
0xffff8bdfa904    68  ldr lr, [jssp], #8
0xffff8bdfa908    72  ret
0xffff8bdfa90c    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdfa910    80  d63f03e0       constant
0xffff8bdfa914    84  d503201f       constant
0xffff8bdfa918    88  8bd38080       constant
0xffff8bdfa91c    92  0000ffff       constant
0xffff8bdfa920    96  movz x16, #0x0
0xffff8bdfa924   100  sub csp, jssp, #0x10 (16)
0xffff8bdfa928   104  stp fp, lr, [jssp, #-16]!
0xffff8bdfa92c   108  bl #+0x4 (addr 0xffff8bdfa930)
0xffff8bdfa930   112  movz x17, #0xa00000000
0xffff8bdfa934   116  sub csp, jssp, #0x10 (16)
0xffff8bdfa938   120  stp x17, cp, [jssp, #-16]!
0xffff8bdfa93c   124  add fp, jssp, #0x10 (16)
0xffff8bdfa940   128  ldr x17, pc+24 (addr 0x0000ffff8bdfa958)    ;; lazy deoptimization bailout 0
0xffff8bdfa944   132  add x17, x17, x16
0xffff8bdfa948   136  br x17
0xffff8bdfa94c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdfa950   144  d63f03e0       constant
0xffff8bdfa954   148  d503201f       constant
0xffff8bdfa958   152  8bb06000       constant
0xffff8bdfa95c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdfa8fc  code target (STUB)  (0xffff8bd38080)
0xffff8bdfa90c  constant pool (size 20)
0xffff8bdfa940  runtime entry
0xffff8bdfa94c  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 168)
0xffff8bdfa8c0     0  mov x6, x0
0xffff8bdfa8c4     4  tbnz w6, #0, #+0x5c (addr 0xffff8bdfa920)
0xffff8bdfa8c8     8  ldur x3, [x1, #7]
0xffff8bdfa8cc    12  stur x6, [x3, #143]
0xffff8bdfa8d0    16  stur x5, [x1, #-1]
0xffff8bdfa8d4    20  tbz w5, #0, #+0x34 (addr 0xffff8bdfa908)
0xffff8bdfa8d8    24  sub x2, x1, #0x1 (1)
0xffff8bdfa8dc    28  and x5, x5, #0xfffffffffff00000
0xffff8bdfa8e0    32  ldr x5, [x5, #8]
0xffff8bdfa8e4    36  tbz w5, #1, #+0x24 (addr 0xffff8bdfa908)
0xffff8bdfa8e8    40  and x5, x1, #0xfffffffffff00000
0xffff8bdfa8ec    44  ldr x5, [x5, #8]
0xffff8bdfa8f0    48  tbz w5, #2, #+0x18 (addr 0xffff8bdfa908)
0xffff8bdfa8f4    52  sub csp, jssp, #0x8 (8)
0xffff8bdfa8f8    56  str lr, [jssp, #-8]!
0xffff8bdfa8fc    60  ldr x16, pc+28 (addr 0x0000ffff8bdfa918)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdfa900    64  blr x16
0xffff8bdfa904    68  ldr lr, [jssp], #8
0xffff8bdfa908    72  ret
0xffff8bdfa90c    76  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdfa910    80  d63f03e0       constant
0xffff8bdfa914    84  d503201f       constant
0xffff8bdfa918    88  8bd38080       constant
0xffff8bdfa91c    92  0000ffff       constant
0xffff8bdfa920    96  movz x16, #0x0
0xffff8bdfa924   100  sub csp, jssp, #0x10 (16)
0xffff8bdfa928   104  stp fp, lr, [jssp, #-16]!
0xffff8bdfa92c   108  bl #+0x4 (addr 0xffff8bdfa930)
0xffff8bdfa930   112  movz x17, #0xa00000000
0xffff8bdfa934   116  sub csp, jssp, #0x10 (16)
0xffff8bdfa938   120  stp x17, cp, [jssp, #-16]!
0xffff8bdfa93c   124  add fp, jssp, #0x10 (16)
0xffff8bdfa940   128  ldr x17, pc+24 (addr 0x0000ffff8bdfa958)    ;; lazy deoptimization bailout 0
0xffff8bdfa944   132  add x17, x17, x16
0xffff8bdfa948   136  br x17
0xffff8bdfa94c   140  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdfa950   144  d63f03e0       constant
0xffff8bdfa954   148  d503201f       constant
0xffff8bdfa958   152  8bb06000       constant
0xffff8bdfa95c   156  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 15)
0xffff8bdfa8fc  code target (STUB)  (0xffff8bd38080)
0xffff8bdfa90c  constant pool (size 20)
0xffff8bdfa940  runtime entry
0xffff8bdfa94c  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = fd
compiler = unknown
Instructions (size = 152)
0xffff8bdfa9e0     0  sub csp, jssp, #0x8 (8)
0xffff8bdfa9e4     4  str x3, [jssp, #-8]!
0xffff8bdfa9e8     8  sub csp, jssp, #0x8 (8)
0xffff8bdfa9ec    12  str x4, [jssp, #-8]!
0xffff8bdfa9f0    16  ldr x3, pc+88 (addr 0x0000ffff8bdfaa48)    ;; object: 0x327e9019 Cell for 0
0xffff8bdfa9f4    20  ldur x3, [x3, #7]
0xffff8bdfa9f8    24  cmp x3, #0x0 (0)
0xffff8bdfa9fc    28  b.ne #+0x2c (addr 0xffff8bdfaa28)
0xffff8bdfaa00    32  ldr x5, pc+80 (addr 0x0000ffff8bdfaa50)    ;; object: 0x327eb3d1 WeakCell for 0x5f5410e1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfaa04    36  ldur x5, [x5, #7]
0xffff8bdfaa08    40  tbz w5, #0, #+0x20 (addr 0xffff8bdfaa28)
0xffff8bdfaa0c    44  ldursw x4, [x5, #15]
0xffff8bdfaa10    48  tbnz w4, #23, #+0x18 (addr 0xffff8bdfaa28)
0xffff8bdfaa14    52  ldr x4, [jssp], #8
0xffff8bdfaa18    56  ldr x3, [jssp], #8
0xffff8bdfaa1c    60  ldr x2, pc+60 (addr 0x0000ffff8bdfaa58)    ;; object: 0x26cb2709 <String[2]: fd>
0xffff8bdfaa20    64  ldr x16, pc+64 (addr 0x0000ffff8bdfaa60)    ;; code: HANDLER, StoreTransitionStub, minor: 172050
0xffff8bdfaa24    68  br x16
0xffff8bdfaa28    72  ldr x2, pc+64 (addr 0x0000ffff8bdfaa68)    ;; object: 0x26cb2709 <String[2]: fd>
0xffff8bdfaa2c    76  ldr x4, [jssp], #8
0xffff8bdfaa30    80  ldr x3, [jssp], #8
0xffff8bdfaa34    84  ldr x16, pc+60 (addr 0x0000ffff8bdfaa70)    ;; code: BUILTIN
0xffff8bdfaa38    88  br x16
0xffff8bdfaa3c    92  580001df       constant pool begin (num_const = 14)    ;; constant pool
0xffff8bdfaa40    96  d63f03e0       constant
0xffff8bdfaa44   100  d503201f       constant
0xffff8bdfaa48   104  327e9019       constant
0xffff8bdfaa4c   108  00000000       constant
0xffff8bdfaa50   112  327eb3d1       constant
0xffff8bdfaa54   116  00000000       constant
0xffff8bdfaa58   120  26cb2709       constant
0xffff8bdfaa5c   124  00000000       constant
0xffff8bdfaa60   128  8bdfa8c0       constant
0xffff8bdfaa64   132  0000ffff       constant
0xffff8bdfaa68   136  26cb2709       constant
0xffff8bdfaa6c   140  00000000       constant
0xffff8bdfaa70   144  8bd22420       constant
0xffff8bdfaa74   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdfa9f0  embedded object  (0x327e9019 Cell for 0)
0xffff8bdfaa00  embedded object  (0x327eb3d1 WeakCell for 0x5f5410e1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfaa1c  embedded object  (0x26cb2709 <String[2]: fd>)
0xffff8bdfaa20  code target (HANDLER)  (0xffff8bdfa8c0)
0xffff8bdfaa28  embedded object  (0x26cb2709 <String[2]: fd>)
0xffff8bdfaa34  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdfaa3c  constant pool (size 60)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bdfaae0     0  tbz w0, #0, #+0x98 (addr 0xffff8bdfab78)
0xffff8bdfaae4     4  mov x2, x0
0xffff8bdfaae8     8  ldur x4, [x1, #7]
0xffff8bdfaaec    12  stur x2, [x4, #151]
0xffff8bdfaaf0    16  add x3, x4, #0x97 (151)
0xffff8bdfaaf4    20  and x2, x2, #0xfffffffffff00000
0xffff8bdfaaf8    24  ldr x2, [x2, #8]
0xffff8bdfaafc    28  tbz w2, #1, #+0x24 (addr 0xffff8bdfab20)
0xffff8bdfab00    32  and x2, x4, #0xfffffffffff00000
0xffff8bdfab04    36  ldr x2, [x2, #8]
0xffff8bdfab08    40  tbz w2, #2, #+0x18 (addr 0xffff8bdfab20)
0xffff8bdfab0c    44  sub csp, jssp, #0x8 (8)
0xffff8bdfab10    48  str lr, [jssp, #-8]!
0xffff8bdfab14    52  ldr x16, pc+84 (addr 0x0000ffff8bdfab68)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdfab18    56  blr x16
0xffff8bdfab1c    60  ldr lr, [jssp], #8
0xffff8bdfab20    64  stur x5, [x1, #-1]
0xffff8bdfab24    68  tbz w5, #0, #+0x34 (addr 0xffff8bdfab58)
0xffff8bdfab28    72  sub x2, x1, #0x1 (1)
0xffff8bdfab2c    76  and x5, x5, #0xfffffffffff00000
0xffff8bdfab30    80  ldr x5, [x5, #8]
0xffff8bdfab34    84  tbz w5, #1, #+0x24 (addr 0xffff8bdfab58)
0xffff8bdfab38    88  and x5, x1, #0xfffffffffff00000
0xffff8bdfab3c    92  ldr x5, [x5, #8]
0xffff8bdfab40    96  tbz w5, #2, #+0x18 (addr 0xffff8bdfab58)
0xffff8bdfab44   100  sub csp, jssp, #0x8 (8)
0xffff8bdfab48   104  str lr, [jssp, #-8]!
0xffff8bdfab4c   108  ldr x16, pc+36 (addr 0x0000ffff8bdfab70)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdfab50   112  blr x16
0xffff8bdfab54   116  ldr lr, [jssp], #8
0xffff8bdfab58   120  ret
0xffff8bdfab5c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bdfab60   128  d63f03e0       constant
0xffff8bdfab64   132  d503201f       constant
0xffff8bdfab68   136  8bd378a0       constant
0xffff8bdfab6c   140  0000ffff       constant
0xffff8bdfab70   144  8bd38080       constant
0xffff8bdfab74   148  0000ffff       constant
0xffff8bdfab78   152  movz x16, #0x0
0xffff8bdfab7c   156  sub csp, jssp, #0x10 (16)
0xffff8bdfab80   160  stp fp, lr, [jssp, #-16]!
0xffff8bdfab84   164  bl #+0x4 (addr 0xffff8bdfab88)
0xffff8bdfab88   168  movz x17, #0xa00000000
0xffff8bdfab8c   172  sub csp, jssp, #0x10 (16)
0xffff8bdfab90   176  stp x17, cp, [jssp, #-16]!
0xffff8bdfab94   180  add fp, jssp, #0x10 (16)
0xffff8bdfab98   184  ldr x17, pc+24 (addr 0x0000ffff8bdfabb0)    ;; lazy deoptimization bailout 0
0xffff8bdfab9c   188  add x17, x17, x16
0xffff8bdfaba0   192  br x17
0xffff8bdfaba4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdfaba8   200  d63f03e0       constant
0xffff8bdfabac   204  d503201f       constant
0xffff8bdfabb0   208  8bb06000       constant
0xffff8bdfabb4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdfab14  code target (STUB)  (0xffff8bd378a0)
0xffff8bdfab4c  code target (STUB)  (0xffff8bd38080)
0xffff8bdfab5c  constant pool (size 28)
0xffff8bdfab98  runtime entry
0xffff8bdfaba4  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = StoreTransitionStub
name = StoreTransitionStub
compiler = crankshaft
Instructions (size = 224)
0xffff8bdfaae0     0  tbz w0, #0, #+0x98 (addr 0xffff8bdfab78)
0xffff8bdfaae4     4  mov x2, x0
0xffff8bdfaae8     8  ldur x4, [x1, #7]
0xffff8bdfaaec    12  stur x2, [x4, #151]
0xffff8bdfaaf0    16  add x3, x4, #0x97 (151)
0xffff8bdfaaf4    20  and x2, x2, #0xfffffffffff00000
0xffff8bdfaaf8    24  ldr x2, [x2, #8]
0xffff8bdfaafc    28  tbz w2, #1, #+0x24 (addr 0xffff8bdfab20)
0xffff8bdfab00    32  and x2, x4, #0xfffffffffff00000
0xffff8bdfab04    36  ldr x2, [x2, #8]
0xffff8bdfab08    40  tbz w2, #2, #+0x18 (addr 0xffff8bdfab20)
0xffff8bdfab0c    44  sub csp, jssp, #0x8 (8)
0xffff8bdfab10    48  str lr, [jssp, #-8]!
0xffff8bdfab14    52  ldr x16, pc+84 (addr 0x0000ffff8bdfab68)    ;; code: STUB, RecordWriteStub, minor: 68676
0xffff8bdfab18    56  blr x16
0xffff8bdfab1c    60  ldr lr, [jssp], #8
0xffff8bdfab20    64  stur x5, [x1, #-1]
0xffff8bdfab24    68  tbz w5, #0, #+0x34 (addr 0xffff8bdfab58)
0xffff8bdfab28    72  sub x2, x1, #0x1 (1)
0xffff8bdfab2c    76  and x5, x5, #0xfffffffffff00000
0xffff8bdfab30    80  ldr x5, [x5, #8]
0xffff8bdfab34    84  tbz w5, #1, #+0x24 (addr 0xffff8bdfab58)
0xffff8bdfab38    88  and x5, x1, #0xfffffffffff00000
0xffff8bdfab3c    92  ldr x5, [x5, #8]
0xffff8bdfab40    96  tbz w5, #2, #+0x18 (addr 0xffff8bdfab58)
0xffff8bdfab44   100  sub csp, jssp, #0x8 (8)
0xffff8bdfab48   104  str lr, [jssp, #-8]!
0xffff8bdfab4c   108  ldr x16, pc+36 (addr 0x0000ffff8bdfab70)    ;; code: STUB, RecordWriteStub, minor: 67745
0xffff8bdfab50   112  blr x16
0xffff8bdfab54   116  ldr lr, [jssp], #8
0xffff8bdfab58   120  ret
0xffff8bdfab5c   124  580000df       constant pool begin (num_const = 6)    ;; constant pool
0xffff8bdfab60   128  d63f03e0       constant
0xffff8bdfab64   132  d503201f       constant
0xffff8bdfab68   136  8bd378a0       constant
0xffff8bdfab6c   140  0000ffff       constant
0xffff8bdfab70   144  8bd38080       constant
0xffff8bdfab74   148  0000ffff       constant
0xffff8bdfab78   152  movz x16, #0x0
0xffff8bdfab7c   156  sub csp, jssp, #0x10 (16)
0xffff8bdfab80   160  stp fp, lr, [jssp, #-16]!
0xffff8bdfab84   164  bl #+0x4 (addr 0xffff8bdfab88)
0xffff8bdfab88   168  movz x17, #0xa00000000
0xffff8bdfab8c   172  sub csp, jssp, #0x10 (16)
0xffff8bdfab90   176  stp x17, cp, [jssp, #-16]!
0xffff8bdfab94   180  add fp, jssp, #0x10 (16)
0xffff8bdfab98   184  ldr x17, pc+24 (addr 0x0000ffff8bdfabb0)    ;; lazy deoptimization bailout 0
0xffff8bdfab9c   188  add x17, x17, x16
0xffff8bdfaba0   192  br x17
0xffff8bdfaba4   196  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdfaba8   200  d63f03e0       constant
0xffff8bdfabac   204  d503201f       constant
0xffff8bdfabb0   208  8bb06000       constant
0xffff8bdfabb4   212  0000ffff       constant


Safepoints (size = 8)

RelocInfo (size = 16)
0xffff8bdfab14  code target (STUB)  (0xffff8bd378a0)
0xffff8bdfab4c  code target (STUB)  (0xffff8bd38080)
0xffff8bdfab5c  constant pool (size 28)
0xffff8bdfab98  runtime entry
0xffff8bdfaba4  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = _isStdio
compiler = unknown
Instructions (size = 152)
0xffff8bdfac20     0  sub csp, jssp, #0x8 (8)
0xffff8bdfac24     4  str x3, [jssp, #-8]!
0xffff8bdfac28     8  sub csp, jssp, #0x8 (8)
0xffff8bdfac2c    12  str x4, [jssp, #-8]!
0xffff8bdfac30    16  ldr x3, pc+88 (addr 0x0000ffff8bdfac88)    ;; object: 0x327e9019 Cell for 0
0xffff8bdfac34    20  ldur x3, [x3, #7]
0xffff8bdfac38    24  cmp x3, #0x0 (0)
0xffff8bdfac3c    28  b.ne #+0x30 (addr 0xffff8bdfac6c)
0xffff8bdfac40    32  tbz w0, #0, #+0x2c (addr 0xffff8bdfac6c)
0xffff8bdfac44    36  ldr x5, pc+76 (addr 0x0000ffff8bdfac90)    ;; object: 0x327eb4c1 WeakCell for 0x5f541139 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfac48    40  ldur x5, [x5, #7]
0xffff8bdfac4c    44  tbz w5, #0, #+0x20 (addr 0xffff8bdfac6c)
0xffff8bdfac50    48  ldursw x4, [x5, #15]
0xffff8bdfac54    52  tbnz w4, #23, #+0x18 (addr 0xffff8bdfac6c)
0xffff8bdfac58    56  ldr x4, [jssp], #8
0xffff8bdfac5c    60  ldr x3, [jssp], #8
0xffff8bdfac60    64  ldr x2, pc+56 (addr 0x0000ffff8bdfac98)    ;; object: 0x26cf94b1 <String[8]: _isStdio>
0xffff8bdfac64    68  ldr x16, pc+60 (addr 0x0000ffff8bdfaca0)    ;; code: HANDLER, StoreTransitionStub, minor: 196627
0xffff8bdfac68    72  br x16
0xffff8bdfac6c    76  ldr x2, pc+60 (addr 0x0000ffff8bdfaca8)    ;; object: 0x26cf94b1 <String[8]: _isStdio>
0xffff8bdfac70    80  ldr x4, [jssp], #8
0xffff8bdfac74    84  ldr x3, [jssp], #8
0xffff8bdfac78    88  ldr x16, pc+56 (addr 0x0000ffff8bdfacb0)    ;; code: BUILTIN
0xffff8bdfac7c    92  br x16
0xffff8bdfac80    96  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8bdfac84   100  d63f03e0       constant
0xffff8bdfac88   104  327e9019       constant
0xffff8bdfac8c   108  00000000       constant
0xffff8bdfac90   112  327eb4c1       constant
0xffff8bdfac94   116  00000000       constant
0xffff8bdfac98   120  26cf94b1       constant
0xffff8bdfac9c   124  00000000       constant
0xffff8bdfaca0   128  8bdfaae0       constant
0xffff8bdfaca4   132  0000ffff       constant
0xffff8bdfaca8   136  26cf94b1       constant
0xffff8bdfacac   140  00000000       constant
0xffff8bdfacb0   144  8bd22420       constant
0xffff8bdfacb4   148  0000ffff       constant


RelocInfo (size = 12)
0xffff8bdfac30  embedded object  (0x327e9019 Cell for 0)
0xffff8bdfac44  embedded object  (0x327eb4c1 WeakCell for 0x5f541139 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfac60  embedded object  (0x26cf94b1 <String[8]: _isStdio>)
0xffff8bdfac64  code target (HANDLER)  (0xffff8bdfaae0)
0xffff8bdfac6c  embedded object  (0x26cf94b1 <String[8]: _isStdio>)
0xffff8bdfac78  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdfac80  constant pool (size 56)

kind = HANDLER
major_key = <NoCache>Stub
name = emit
compiler = unknown
Instructions (size = 656)
0xffff8bdfad20     0  sub csp, jssp, #0x8 (8)
0xffff8bdfad24     4  str x3, [jssp, #-8]!
0xffff8bdfad28     8  sub csp, jssp, #0x8 (8)
0xffff8bdfad2c    12  str x0, [jssp, #-8]!
0xffff8bdfad30    16  ldr x0, pc+560 (addr 0x0000ffff8bdfaf60)    ;; object: 0x26ce3709 Cell for 0
0xffff8bdfad34    20  ldur x0, [x0, #7]
0xffff8bdfad38    24  cmp x0, #0x0 (0)
0xffff8bdfad3c    28  b.ne #+0x1f8 (addr 0xffff8bdfaf34)
0xffff8bdfad40    32  ldur x4, [x1, #-1]
0xffff8bdfad44    36  ldrb w0, [x4, #12]
0xffff8bdfad48    40  movz x16, #0x44
0xffff8bdfad4c    44  tst x0, x16
0xffff8bdfad50    48  b.ne #+0x1e4 (addr 0xffff8bdfaf34)
0xffff8bdfad54    52  ldrb w0, [x4, #11]
0xffff8bdfad58    56  cmp x0, #0xb1 (177)
0xffff8bdfad5c    60  b.lt #+0x1d8 (addr 0xffff8bdfaf34)
0xffff8bdfad60    64  ldur x0, [x1, #7]
0xffff8bdfad64    68  ldur x4, [x0, #-1]
0xffff8bdfad68    72  ldr x16, [x26, #432]
0xffff8bdfad6c    76  cmp x4, x16
0xffff8bdfad70    80  b.ne #+0x1c4 (addr 0xffff8bdfaf34)
0xffff8bdfad74    84  ldursw x4, [x0, #35]
0xffff8bdfad78    88  sub x4, x4, #0x1 (1)
0xffff8bdfad7c    92  movz x16, #0x21fa
0xffff8bdfad80    96  movk x16, #0x253c, lsl #16
0xffff8bdfad84   100  and x4, x4, x16
0xffff8bdfad88   104  add x4, x4, x4, lsl #1
0xffff8bdfad8c   108  add x4, x0, x4, lsl #3
0xffff8bdfad90   112  ldur x4, [x4, #55]
0xffff8bdfad94   116  ldr x16, [x26, #40]
0xffff8bdfad98   120  cmp x4, x16
0xffff8bdfad9c   124  b.eq #+0x188 (addr 0xffff8bdfaf24)
0xffff8bdfada0   128  ldr x16, pc+456 (addr 0x0000ffff8bdfaf68)    ;; object: 0x26cba409 <String[4]: emit>
0xffff8bdfada4   132  cmp x4, x16
0xffff8bdfada8   136  b.eq #+0x18c (addr 0xffff8bdfaf34)
0xffff8bdfadac   140  ldr x16, [x26, #88]
0xffff8bdfadb0   144  cmp x4, x16
0xffff8bdfadb4   148  b.eq #+0x1c (addr 0xffff8bdfadd0)
0xffff8bdfadb8   152  ldur x4, [x4, #-1]
0xffff8bdfadbc   156  ldrb w4, [x4, #11]
0xffff8bdfadc0   160  tst x4, #0xc0
0xffff8bdfadc4   164  movz x16, #0x80
0xffff8bdfadc8   168  ccmp x4, x16, #nZcv, ne
0xffff8bdfadcc   172  b.ne #+0x168 (addr 0xffff8bdfaf34)
0xffff8bdfadd0   176  ldursw x4, [x0, #35]
0xffff8bdfadd4   180  sub x4, x4, #0x1 (1)
0xffff8bdfadd8   184  movz x16, #0x21fb
0xffff8bdfaddc   188  movk x16, #0x253c, lsl #16
0xffff8bdfade0   192  and x4, x4, x16
0xffff8bdfade4   196  add x4, x4, x4, lsl #1
0xffff8bdfade8   200  add x4, x0, x4, lsl #3
0xffff8bdfadec   204  ldur x4, [x4, #55]
0xffff8bdfadf0   208  ldr x16, [x26, #40]
0xffff8bdfadf4   212  cmp x4, x16
0xffff8bdfadf8   216  b.eq #+0x12c (addr 0xffff8bdfaf24)
0xffff8bdfadfc   220  ldr x16, pc+372 (addr 0x0000ffff8bdfaf70)    ;; object: 0x26cba409 <String[4]: emit>
0xffff8bdfae00   224  cmp x4, x16
0xffff8bdfae04   228  b.eq #+0x130 (addr 0xffff8bdfaf34)
0xffff8bdfae08   232  ldr x16, [x26, #88]
0xffff8bdfae0c   236  cmp x4, x16
0xffff8bdfae10   240  b.eq #+0x1c (addr 0xffff8bdfae2c)
0xffff8bdfae14   244  ldur x4, [x4, #-1]
0xffff8bdfae18   248  ldrb w4, [x4, #11]
0xffff8bdfae1c   252  tst x4, #0xc0
0xffff8bdfae20   256  movz x16, #0x80
0xffff8bdfae24   260  ccmp x4, x16, #nZcv, ne
0xffff8bdfae28   264  b.ne #+0x10c (addr 0xffff8bdfaf34)
0xffff8bdfae2c   268  ldursw x4, [x0, #35]
0xffff8bdfae30   272  sub x4, x4, #0x1 (1)
0xffff8bdfae34   276  movz x16, #0x21fd
0xffff8bdfae38   280  movk x16, #0x253c, lsl #16
0xffff8bdfae3c   284  and x4, x4, x16
0xffff8bdfae40   288  add x4, x4, x4, lsl #1
0xffff8bdfae44   292  add x4, x0, x4, lsl #3
0xffff8bdfae48   296  ldur x4, [x4, #55]
0xffff8bdfae4c   300  ldr x16, [x26, #40]
0xffff8bdfae50   304  cmp x4, x16
0xffff8bdfae54   308  b.eq #+0xd0 (addr 0xffff8bdfaf24)
0xffff8bdfae58   312  ldr x16, pc+288 (addr 0x0000ffff8bdfaf78)    ;; object: 0x26cba409 <String[4]: emit>
0xffff8bdfae5c   316  cmp x4, x16
0xffff8bdfae60   320  b.eq #+0xd4 (addr 0xffff8bdfaf34)
0xffff8bdfae64   324  ldr x16, [x26, #88]
0xffff8bdfae68   328  cmp x4, x16
0xffff8bdfae6c   332  b.eq #+0x1c (addr 0xffff8bdfae88)
0xffff8bdfae70   336  ldur x4, [x4, #-1]
0xffff8bdfae74   340  ldrb w4, [x4, #11]
0xffff8bdfae78   344  tst x4, #0xc0
0xffff8bdfae7c   348  movz x16, #0x80
0xffff8bdfae80   352  ccmp x4, x16, #nZcv, ne
0xffff8bdfae84   356  b.ne #+0xb0 (addr 0xffff8bdfaf34)
0xffff8bdfae88   360  ldursw x4, [x0, #35]
0xffff8bdfae8c   364  sub x4, x4, #0x1 (1)
0xffff8bdfae90   368  movz x16, #0x2200
0xffff8bdfae94   372  movk x16, #0x253c, lsl #16
0xffff8bdfae98   376  and x4, x4, x16
0xffff8bdfae9c   380  add x4, x4, x4, lsl #1
0xffff8bdfaea0   384  add x4, x0, x4, lsl #3
0xffff8bdfaea4   388  ldur x4, [x4, #55]
0xffff8bdfaea8   392  ldr x16, [x26, #40]
0xffff8bdfaeac   396  cmp x4, x16
0xffff8bdfaeb0   400  b.eq #+0x74 (addr 0xffff8bdfaf24)
0xffff8bdfaeb4   404  ldr x16, pc+204 (addr 0x0000ffff8bdfaf80)    ;; object: 0x26cba409 <String[4]: emit>
0xffff8bdfaeb8   408  cmp x4, x16
0xffff8bdfaebc   412  b.eq #+0x78 (addr 0xffff8bdfaf34)
0xffff8bdfaec0   416  ldr x16, [x26, #88]
0xffff8bdfaec4   420  cmp x4, x16
0xffff8bdfaec8   424  b.eq #+0x1c (addr 0xffff8bdfaee4)
0xffff8bdfaecc   428  ldur x4, [x4, #-1]
0xffff8bdfaed0   432  ldrb w4, [x4, #11]
0xffff8bdfaed4   436  tst x4, #0xc0
0xffff8bdfaed8   440  movz x16, #0x80
0xffff8bdfaedc   444  ccmp x4, x16, #nZcv, ne
0xffff8bdfaee0   448  b.ne #+0x54 (addr 0xffff8bdfaf34)
0xffff8bdfaee4   452  sub csp, jssp, #0x38 (56)
0xffff8bdfaee8   456  stp x3, x5, [jssp, #-32]!
0xffff8bdfaeec   460  stp x6, lr, [jssp, #16]
0xffff8bdfaef0   464  stp x0, x1, [jssp, #-24]!
0xffff8bdfaef4   468  str x2, [jssp, #16]
0xffff8bdfaef8   472  ldur x0, [x1, #7]
0xffff8bdfaefc   476  ldr x1, pc+140 (addr 0x0000ffff8bdfaf88)    ;; object: 0x26cba409 <String[4]: emit>
0xffff8bdfaf00   480  ldr x16, pc+144 (addr 0x0000ffff8bdfaf90)    ;; code: STUB, NameDictionaryLookupStub, minor: 1
0xffff8bdfaf04   484  blr x16
0xffff8bdfaf08   488  mov x4, x0
0xffff8bdfaf0c   492  ldp x2, x3, [jssp, #16]
0xffff8bdfaf10   496  ldp x0, x1, [jssp], #32
0xffff8bdfaf14   500  ldr lr, [jssp, #16]
0xffff8bdfaf18   504  ldp x5, x6, [jssp], #24
0xffff8bdfaf1c   508  cbz x4, #+0x8 (addr 0xffff8bdfaf24)
0xffff8bdfaf20   512  b #+0x14 (addr 0xffff8bdfaf34)
0xffff8bdfaf24   516  ldr x3, pc+116 (addr 0x0000ffff8bdfaf98)    ;; object: 0x327eb6c1 WeakCell for 0x327acc41 <an Object with map 0x5f51bf39>
0xffff8bdfaf28   520  ldur x3, [x3, #7]
0xffff8bdfaf2c   524  tbz w3, #0, #+0x8 (addr 0xffff8bdfaf34)
0xffff8bdfaf30   528  b #+0x14 (addr 0xffff8bdfaf44)
0xffff8bdfaf34   532  ldr x0, [jssp], #8
0xffff8bdfaf38   536  ldr x3, [jssp], #8
0xffff8bdfaf3c   540  ldr x16, pc+100 (addr 0x0000ffff8bdfafa0)    ;; code: BUILTIN
0xffff8bdfaf40   544  br x16
0xffff8bdfaf44   548  add jssp, jssp, #0x10 (16)
0xffff8bdfaf48   552  mov x1, x3
0xffff8bdfaf4c   556  ldr x16, pc+92 (addr 0x0000ffff8bdfafa8)    ;; code: HANDLER, LoadConstantStub, minor: 6
0xffff8bdfaf50   560  br x16
0xffff8bdfaf54   564  580002df       constant pool begin (num_const = 22)    ;; constant pool
0xffff8bdfaf58   568  d63f03e0       constant
0xffff8bdfaf5c   572  d503201f       constant
0xffff8bdfaf60   576  26ce3709       constant
0xffff8bdfaf64   580  00000000       constant
0xffff8bdfaf68   584  26cba409       constant
0xffff8bdfaf6c   588  00000000       constant
0xffff8bdfaf70   592  26cba409       constant
0xffff8bdfaf74   596  00000000       constant
0xffff8bdfaf78   600  26cba409       constant
0xffff8bdfaf7c   604  00000000       constant
0xffff8bdfaf80   608  26cba409       constant
0xffff8bdfaf84   612  00000000       constant
0xffff8bdfaf88   616  26cba409       constant
0xffff8bdfaf8c   620  00000000       constant
0xffff8bdfaf90   624  8bd8b120       constant
0xffff8bdfaf94   628  0000ffff       constant
0xffff8bdfaf98   632  327eb6c1       constant
0xffff8bdfaf9c   636  00000000       constant
0xffff8bdfafa0   640  8bd222e0       constant
0xffff8bdfafa4   644  0000ffff       constant
0xffff8bdfafa8   648  8bd8b020       constant
0xffff8bdfafac   652  0000ffff       constant


RelocInfo (size = 26)
0xffff8bdfad30  embedded object  (0x26ce3709 Cell for 0)
0xffff8bdfada0  embedded object  (0x26cba409 <String[4]: emit>)
0xffff8bdfadfc  embedded object  (0x26cba409 <String[4]: emit>)
0xffff8bdfae58  embedded object  (0x26cba409 <String[4]: emit>)
0xffff8bdfaeb4  embedded object  (0x26cba409 <String[4]: emit>)
0xffff8bdfaefc  embedded object  (0x26cba409 <String[4]: emit>)
0xffff8bdfaf00  code target (STUB)  (0xffff8bd8b120)
0xffff8bdfaf24  embedded object  (0x327eb6c1 WeakCell for 0x327acc41 <an Object with map 0x5f51bf39>)
0xffff8bdfaf3c  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdfaf4c  code target (HANDLER)  (0xffff8bd8b020)
0xffff8bdfaf54  constant pool (size 92)

kind = HANDLER
major_key = <NoCache>Stub
compiler = unknown
Instructions (size = 96)
0xffff8bdfb020     0  sub csp, jssp, #0x8 (8)
0xffff8bdfb024     4  str x3, [jssp, #-8]!
0xffff8bdfb028     8  sub csp, jssp, #0x8 (8)
0xffff8bdfb02c    12  str x0, [jssp, #-8]!
0xffff8bdfb030    16  ldr x0, pc+56 (addr 0x0000ffff8bdfb068)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bdfb034    20  ldur x0, [x0, #7]
0xffff8bdfb038    24  cmp x0, #0x0 (0)
0xffff8bdfb03c    28  b.ne #+0x14 (addr 0xffff8bdfb050)
0xffff8bdfb040    32  add jssp, jssp, #0x10 (16)
0xffff8bdfb044    36  ldr x0, pc+44 (addr 0x0000ffff8bdfb070)    ;; object: 0x26c04241 <undefined>
0xffff8bdfb048    40  ret
0xffff8bdfb04c    44  b #+0x14 (addr 0xffff8bdfb060)
0xffff8bdfb050    48  ldr x0, [jssp], #8
0xffff8bdfb054    52  ldr x3, [jssp], #8
0xffff8bdfb058    56  ldr x16, pc+32 (addr 0x0000ffff8bdfb078)    ;; code: BUILTIN
0xffff8bdfb05c    60  br x16
0xffff8bdfb060    64  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8bdfb064    68  d63f03e0       constant
0xffff8bdfb068    72  26c5b0f1       constant
0xffff8bdfb06c    76  00000000       constant
0xffff8bdfb070    80  26c04241       constant
0xffff8bdfb074    84  00000000       constant
0xffff8bdfb078    88  8bd222e0       constant
0xffff8bdfb07c    92  0000ffff       constant


RelocInfo (size = 9)
0xffff8bdfb030  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bdfb044  embedded object  (0x26c04241 <undefined>)
0xffff8bdfb058  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdfb060  constant pool (size 32)

kind = HANDLER
major_key = <NoCache>Stub
name = SIGWINCH
compiler = unknown
Instructions (size = 144)
0xffff8bdfb0e0     0  sub csp, jssp, #0x8 (8)
0xffff8bdfb0e4     4  str x3, [jssp, #-8]!
0xffff8bdfb0e8     8  sub csp, jssp, #0x8 (8)
0xffff8bdfb0ec    12  str x4, [jssp, #-8]!
0xffff8bdfb0f0    16  ldr x5, pc+88 (addr 0x0000ffff8bdfb148)    ;; object: 0x327ec769 WeakCell for 0x5f541a81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfb0f4    20  ldur x5, [x5, #7]
0xffff8bdfb0f8    24  tbz w5, #0, #+0x30 (addr 0xffff8bdfb128)
0xffff8bdfb0fc    28  ldursw x4, [x5, #15]
0xffff8bdfb100    32  tbnz w4, #23, #+0x28 (addr 0xffff8bdfb128)
0xffff8bdfb104    36  ldur x4, [x5, #47]
0xffff8bdfb108    40  ldur x4, [x4, #119]
0xffff8bdfb10c    44  cmp x0, x4
0xffff8bdfb110    48  b.ne #+0x18 (addr 0xffff8bdfb128)
0xffff8bdfb114    52  ldr x4, [jssp], #8
0xffff8bdfb118    56  ldr x3, [jssp], #8
0xffff8bdfb11c    60  ldr x2, pc+52 (addr 0x0000ffff8bdfb150)    ;; object: 0x26cf9081 <String[8]: SIGWINCH>
0xffff8bdfb120    64  ldr x16, pc+56 (addr 0x0000ffff8bdfb158)    ;; code: HANDLER, StoreTransitionStub, minor: 0
0xffff8bdfb124    68  br x16
0xffff8bdfb128    72  ldr x2, pc+56 (addr 0x0000ffff8bdfb160)    ;; object: 0x26cf9081 <String[8]: SIGWINCH>
0xffff8bdfb12c    76  ldr x4, [jssp], #8
0xffff8bdfb130    80  ldr x3, [jssp], #8
0xffff8bdfb134    84  ldr x16, pc+52 (addr 0x0000ffff8bdfb168)    ;; code: BUILTIN
0xffff8bdfb138    88  br x16
0xffff8bdfb13c    92  5800019f       constant pool begin (num_const = 12)    ;; constant pool
0xffff8bdfb140    96  d63f03e0       constant
0xffff8bdfb144   100  d503201f       constant
0xffff8bdfb148   104  327ec769       constant
0xffff8bdfb14c   108  00000000       constant
0xffff8bdfb150   112  26cf9081       constant
0xffff8bdfb154   116  00000000       constant
0xffff8bdfb158   120  8bd3cea0       constant
0xffff8bdfb15c   124  0000ffff       constant
0xffff8bdfb160   128  26cf9081       constant
0xffff8bdfb164   132  00000000       constant
0xffff8bdfb168   136  8bd22420       constant
0xffff8bdfb16c   140  0000ffff       constant


RelocInfo (size = 11)
0xffff8bdfb0f0  embedded object  (0x327ec769 WeakCell for 0x5f541a81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfb11c  embedded object  (0x26cf9081 <String[8]: SIGWINCH>)
0xffff8bdfb120  code target (HANDLER)  (0xffff8bd3cea0)
0xffff8bdfb128  embedded object  (0x26cf9081 <String[8]: SIGWINCH>)
0xffff8bdfb134  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdfb13c  constant pool (size 52)

--- Code ---
kind = STUB
major_key = <NoCache>Stub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 485)
0xffff8bdfb1e0     0  ldur x4, [x3, #47]
0xffff8bdfb1e4     4  tbnz w2, #0, #+0xa8 (addr 0xffff8bdfb28c)
0xffff8bdfb1e8     8  asr x6, x2, #32
0xffff8bdfb1ec    12  add x5, x4, #0x17 (23)
0xffff8bdfb1f0    16  ldr x7, [x5, w6, sxtw #3]
0xffff8bdfb1f4    20  ldr x4, pc+332 (addr 0x0000ffff8bdfb340)    ;; object: 0x26c04241 <undefined>
0xffff8bdfb1f8    24  cmp x7, x4
0xffff8bdfb1fc    28  b.eq #+0x8c (addr 0xffff8bdfb288)
0xffff8bdfb200    32  ldur x4, [x7, #7]
0xffff8bdfb204    36  ldur x5, [x4, #-1]
0xffff8bdfb208    40  ldrb w6, [x5, #7]
0xffff8bdfb20c    44  cmp w6, #0x6 (6)
0xffff8bdfb210    48  b.ne #+0x78 (addr 0xffff8bdfb288)
0xffff8bdfb214    52  movz x1, #0xe2c0
0xffff8bdfb218    56  movk x1, #0x2cb8, lsl #16
0xffff8bdfb21c    60  ldp x2, x0, [x1]
0xffff8bdfb220    64  adds x16, x2, #0x40 (64)
0xffff8bdfb224    68  ccmp x16, x0, #nzCv, lo
0xffff8bdfb228    72  b.hi #+0xac (addr 0xffff8bdfb2d4)
0xffff8bdfb22c    76  str x16, [x1]
0xffff8bdfb230    80  orr x2, x2, #0x1
0xffff8bdfb234    84  stur x5, [x2, #-1]
0xffff8bdfb238    88  ldur x0, [x4, #7]
0xffff8bdfb23c    92  stur x0, [x2, #7]
0xffff8bdfb240    96  ldur x0, [x4, #15]
0xffff8bdfb244   100  stur x0, [x2, #15]
0xffff8bdfb248   104  ldur x0, [x4, #23]
0xffff8bdfb24c   108  stur x0, [x2, #23]
0xffff8bdfb250   112  ldur x0, [x4, #31]
0xffff8bdfb254   116  stur x0, [x2, #31]
0xffff8bdfb258   120  ldur x0, [x4, #39]
0xffff8bdfb25c   124  stur x0, [x2, #39]
0xffff8bdfb260   128  add x0, x2, #0x30 (48)
0xffff8bdfb264   132  ldr x1, pc+228 (addr 0x0000ffff8bdfb348)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfb268   136  stur x1, [x0, #-1]
0xffff8bdfb26c   140  stur x7, [x0, #7]
0xffff8bdfb270   144  ldur w0, [x7, #35]
0xffff8bdfb274   148  add w0, w0, #0x1 (1)
0xffff8bdfb278   152  lsl x0, x0, #32
0xffff8bdfb27c   156  stur x0, [x7, #31]
0xffff8bdfb280   160  mov x0, x2
0xffff8bdfb284   164  ret
0xffff8bdfb288   168  b #+0xe0 (addr 0xffff8bdfb368)
0xffff8bdfb28c   172  sub csp, jssp, #0x10 (16)
0xffff8bdfb290   176  stp fp, lr, [jssp, #-16]!
0xffff8bdfb294   180  movz fp, #0xa00000000
0xffff8bdfb298   184  sub csp, jssp, #0x8 (8)
0xffff8bdfb29c   188  str fp, [jssp, #-8]!
0xffff8bdfb2a0   192  add fp, jssp, #0x8 (8)
0xffff8bdfb2a4   196  ldur x16, [x2, #-1]
0xffff8bdfb2a8   200  ldr x17, [x26, #120]
0xffff8bdfb2ac   204  cmp x16, x17
0xffff8bdfb2b0   208  b.ne #+0xc8 (addr 0xffff8bdfb378)
0xffff8bdfb2b4   212  ldur d29, [x2, #7]
0xffff8bdfb2b8   216  fcvtzs w6, d29
0xffff8bdfb2bc   220  scvtf d0, w6
0xffff8bdfb2c0   224  fcmp d29, d0
0xffff8bdfb2c4   228  b.ne #+0xb4 (addr 0xffff8bdfb378)
0xffff8bdfb2c8   232  ldr lr, [jssp, #16]
0xffff8bdfb2cc   236  ldp xzr, fp, [jssp], #24
0xffff8bdfb2d0   240  b #-0xe4 (addr 0xffff8bdfb1ec)
0xffff8bdfb2d4   244  sub csp, jssp, #0x10 (16)
0xffff8bdfb2d8   248  stp fp, lr, [jssp, #-16]!
0xffff8bdfb2dc   252  movz fp, #0xa00000000
0xffff8bdfb2e0   256  sub csp, jssp, #0x8 (8)
0xffff8bdfb2e4   260  str fp, [jssp, #-8]!
0xffff8bdfb2e8   264  add fp, jssp, #0x8 (8)
0xffff8bdfb2ec   268  movz x2, #0x0
0xffff8bdfb2f0   272  mov x16, lr
0xffff8bdfb2f4   276  ldr x17, pc+92 (addr 0x0000ffff8bdfb350)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdfb2f8   280  blr x17
0xffff8bdfb2fc   284  movz x0, #0x4000000000
0xffff8bdfb300   288  movz x10, #0x0
0xffff8bdfb304   292  sub csp, jssp, #0x10 (16)
0xffff8bdfb308   296  stp x10, x0, [jssp, #-16]!
0xffff8bdfb30c   300  movz x0, #0x2
0xffff8bdfb310   304  movz x1, #0x5b88
0xffff8bdfb314   308  movk x1, #0xe2, lsl #16
0xffff8bdfb318   312  ldr x16, pc+64 (addr 0x0000ffff8bdfb358)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdfb31c   316  blr x16
0xffff8bdfb320   320  str x0, [jssp, #16]
0xffff8bdfb324   324  ldr x16, pc+60 (addr 0x0000ffff8bdfb360)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdfb328   328  blr x16
0xffff8bdfb32c   332  ldr lr, [jssp, #16]
0xffff8bdfb330   336  ldp xzr, fp, [jssp], #24
0xffff8bdfb334   340  b #-0x100 (addr 0xffff8bdfb234)
0xffff8bdfb338   344  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff8bdfb33c   348  d63f03e0       constant
0xffff8bdfb340   352  26c04241       constant
0xffff8bdfb344   356  00000000       constant
0xffff8bdfb348   360  5f505d81       constant
0xffff8bdfb34c   364  00000000       constant
0xffff8bdfb350   368  8bd06820       constant
0xffff8bdfb354   372  0000ffff       constant
0xffff8bdfb358   376  8bd06260       constant
0xffff8bdfb35c   380  0000ffff       constant
0xffff8bdfb360   384  8bd068e0       constant
0xffff8bdfb364   388  0000ffff       constant
0xffff8bdfb368   392  movz x16, #0x0
0xffff8bdfb36c   396  sub csp, jssp, #0x10 (16)
0xffff8bdfb370   400  stp fp, lr, [jssp, #-16]!
0xffff8bdfb374   404  bl #+0xc (addr 0xffff8bdfb380)
0xffff8bdfb378   408  movz x16, #0x8
0xffff8bdfb37c   412  bl #+0x14 (addr 0xffff8bdfb390)
0xffff8bdfb380   416  movz x17, #0xa00000000
0xffff8bdfb384   420  sub csp, jssp, #0x10 (16)
0xffff8bdfb388   424  stp x17, cp, [jssp, #-16]!
0xffff8bdfb38c   428  add fp, jssp, #0x10 (16)
0xffff8bdfb390   432  ldr x17, pc+24 (addr 0x0000ffff8bdfb3a8)    ;; lazy deoptimization bailout 0
0xffff8bdfb394   436  add x17, x17, x16
0xffff8bdfb398   440  br x17
0xffff8bdfb39c   444  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdfb3a0   448  d63f03e0       constant
0xffff8bdfb3a4   452  d503201f       constant
0xffff8bdfb3a8   456  8bb06000       constant
0xffff8bdfb3ac   460  0000ffff       constant


Safepoints (size = 21)
0xffff8bdfb320   320  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff8bdfb1f4  embedded object  (0x26c04241 <undefined>)
0xffff8bdfb264  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfb2f4  code target (STUB)  (0xffff8bd06820)
0xffff8bdfb318  code target (STUB)  (0xffff8bd06260)
0xffff8bdfb324  code target (STUB)  (0xffff8bd068e0)
0xffff8bdfb338  constant pool (size 48)
0xffff8bdfb390  runtime entry
0xffff8bdfb39c  constant pool (size 20)

--- End code ---
kind = STUB
major_key = FastCloneShallowObjectStub
name = FastCloneShallowObjectStub
compiler = crankshaft
Instructions (size = 485)
0xffff8bdfb1e0     0  ldur x4, [x3, #47]
0xffff8bdfb1e4     4  tbnz w2, #0, #+0xa8 (addr 0xffff8bdfb28c)
0xffff8bdfb1e8     8  asr x6, x2, #32
0xffff8bdfb1ec    12  add x5, x4, #0x17 (23)
0xffff8bdfb1f0    16  ldr x7, [x5, w6, sxtw #3]
0xffff8bdfb1f4    20  ldr x4, pc+332 (addr 0x0000ffff8bdfb340)    ;; object: 0x26c04241 <undefined>
0xffff8bdfb1f8    24  cmp x7, x4
0xffff8bdfb1fc    28  b.eq #+0x8c (addr 0xffff8bdfb288)
0xffff8bdfb200    32  ldur x4, [x7, #7]
0xffff8bdfb204    36  ldur x5, [x4, #-1]
0xffff8bdfb208    40  ldrb w6, [x5, #7]
0xffff8bdfb20c    44  cmp w6, #0x6 (6)
0xffff8bdfb210    48  b.ne #+0x78 (addr 0xffff8bdfb288)
0xffff8bdfb214    52  movz x1, #0xe2c0
0xffff8bdfb218    56  movk x1, #0x2cb8, lsl #16
0xffff8bdfb21c    60  ldp x2, x0, [x1]
0xffff8bdfb220    64  adds x16, x2, #0x40 (64)
0xffff8bdfb224    68  ccmp x16, x0, #nzCv, lo
0xffff8bdfb228    72  b.hi #+0xac (addr 0xffff8bdfb2d4)
0xffff8bdfb22c    76  str x16, [x1]
0xffff8bdfb230    80  orr x2, x2, #0x1
0xffff8bdfb234    84  stur x5, [x2, #-1]
0xffff8bdfb238    88  ldur x0, [x4, #7]
0xffff8bdfb23c    92  stur x0, [x2, #7]
0xffff8bdfb240    96  ldur x0, [x4, #15]
0xffff8bdfb244   100  stur x0, [x2, #15]
0xffff8bdfb248   104  ldur x0, [x4, #23]
0xffff8bdfb24c   108  stur x0, [x2, #23]
0xffff8bdfb250   112  ldur x0, [x4, #31]
0xffff8bdfb254   116  stur x0, [x2, #31]
0xffff8bdfb258   120  ldur x0, [x4, #39]
0xffff8bdfb25c   124  stur x0, [x2, #39]
0xffff8bdfb260   128  add x0, x2, #0x30 (48)
0xffff8bdfb264   132  ldr x1, pc+228 (addr 0x0000ffff8bdfb348)    ;; object: 0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfb268   136  stur x1, [x0, #-1]
0xffff8bdfb26c   140  stur x7, [x0, #7]
0xffff8bdfb270   144  ldur w0, [x7, #35]
0xffff8bdfb274   148  add w0, w0, #0x1 (1)
0xffff8bdfb278   152  lsl x0, x0, #32
0xffff8bdfb27c   156  stur x0, [x7, #31]
0xffff8bdfb280   160  mov x0, x2
0xffff8bdfb284   164  ret
0xffff8bdfb288   168  b #+0xe0 (addr 0xffff8bdfb368)
0xffff8bdfb28c   172  sub csp, jssp, #0x10 (16)
0xffff8bdfb290   176  stp fp, lr, [jssp, #-16]!
0xffff8bdfb294   180  movz fp, #0xa00000000
0xffff8bdfb298   184  sub csp, jssp, #0x8 (8)
0xffff8bdfb29c   188  str fp, [jssp, #-8]!
0xffff8bdfb2a0   192  add fp, jssp, #0x8 (8)
0xffff8bdfb2a4   196  ldur x16, [x2, #-1]
0xffff8bdfb2a8   200  ldr x17, [x26, #120]
0xffff8bdfb2ac   204  cmp x16, x17
0xffff8bdfb2b0   208  b.ne #+0xc8 (addr 0xffff8bdfb378)
0xffff8bdfb2b4   212  ldur d29, [x2, #7]
0xffff8bdfb2b8   216  fcvtzs w6, d29
0xffff8bdfb2bc   220  scvtf d0, w6
0xffff8bdfb2c0   224  fcmp d29, d0
0xffff8bdfb2c4   228  b.ne #+0xb4 (addr 0xffff8bdfb378)
0xffff8bdfb2c8   232  ldr lr, [jssp, #16]
0xffff8bdfb2cc   236  ldp xzr, fp, [jssp], #24
0xffff8bdfb2d0   240  b #-0xe4 (addr 0xffff8bdfb1ec)
0xffff8bdfb2d4   244  sub csp, jssp, #0x10 (16)
0xffff8bdfb2d8   248  stp fp, lr, [jssp, #-16]!
0xffff8bdfb2dc   252  movz fp, #0xa00000000
0xffff8bdfb2e0   256  sub csp, jssp, #0x8 (8)
0xffff8bdfb2e4   260  str fp, [jssp, #-8]!
0xffff8bdfb2e8   264  add fp, jssp, #0x8 (8)
0xffff8bdfb2ec   268  movz x2, #0x0
0xffff8bdfb2f0   272  mov x16, lr
0xffff8bdfb2f4   276  ldr x17, pc+92 (addr 0x0000ffff8bdfb350)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8bdfb2f8   280  blr x17
0xffff8bdfb2fc   284  movz x0, #0x4000000000
0xffff8bdfb300   288  movz x10, #0x0
0xffff8bdfb304   292  sub csp, jssp, #0x10 (16)
0xffff8bdfb308   296  stp x10, x0, [jssp, #-16]!
0xffff8bdfb30c   300  movz x0, #0x2
0xffff8bdfb310   304  movz x1, #0x5b88
0xffff8bdfb314   308  movk x1, #0xe2, lsl #16
0xffff8bdfb318   312  ldr x16, pc+64 (addr 0x0000ffff8bdfb358)    ;; code: STUB, CEntryStub, minor: 5
0xffff8bdfb31c   316  blr x16
0xffff8bdfb320   320  str x0, [jssp, #16]
0xffff8bdfb324   324  ldr x16, pc+60 (addr 0x0000ffff8bdfb360)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8bdfb328   328  blr x16
0xffff8bdfb32c   332  ldr lr, [jssp, #16]
0xffff8bdfb330   336  ldp xzr, fp, [jssp], #24
0xffff8bdfb334   340  b #-0x100 (addr 0xffff8bdfb234)
0xffff8bdfb338   344  5800017f       constant pool begin (num_const = 11)    ;; constant pool
0xffff8bdfb33c   348  d63f03e0       constant
0xffff8bdfb340   352  26c04241       constant
0xffff8bdfb344   356  00000000       constant
0xffff8bdfb348   360  5f505d81       constant
0xffff8bdfb34c   364  00000000       constant
0xffff8bdfb350   368  8bd06820       constant
0xffff8bdfb354   372  0000ffff       constant
0xffff8bdfb358   376  8bd06260       constant
0xffff8bdfb35c   380  0000ffff       constant
0xffff8bdfb360   384  8bd068e0       constant
0xffff8bdfb364   388  0000ffff       constant
0xffff8bdfb368   392  movz x16, #0x0
0xffff8bdfb36c   396  sub csp, jssp, #0x10 (16)
0xffff8bdfb370   400  stp fp, lr, [jssp, #-16]!
0xffff8bdfb374   404  bl #+0xc (addr 0xffff8bdfb380)
0xffff8bdfb378   408  movz x16, #0x8
0xffff8bdfb37c   412  bl #+0x14 (addr 0xffff8bdfb390)
0xffff8bdfb380   416  movz x17, #0xa00000000
0xffff8bdfb384   420  sub csp, jssp, #0x10 (16)
0xffff8bdfb388   424  stp x17, cp, [jssp, #-16]!
0xffff8bdfb38c   428  add fp, jssp, #0x10 (16)
0xffff8bdfb390   432  ldr x17, pc+24 (addr 0x0000ffff8bdfb3a8)    ;; lazy deoptimization bailout 0
0xffff8bdfb394   436  add x17, x17, x16
0xffff8bdfb398   440  br x17
0xffff8bdfb39c   444  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8bdfb3a0   448  d63f03e0       constant
0xffff8bdfb3a4   452  d503201f       constant
0xffff8bdfb3a8   456  8bb06000       constant
0xffff8bdfb3ac   460  0000ffff       constant


Safepoints (size = 21)
0xffff8bdfb320   320  000 | x2 | x4 | x5 | x7 | x27 (sp -> fp)  <none> argc: 2

RelocInfo (size = 25)
0xffff8bdfb1f4  embedded object  (0x26c04241 <undefined>)
0xffff8bdfb264  embedded object  (0x5f505d81 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfb2f4  code target (STUB)  (0xffff8bd06820)
0xffff8bdfb318  code target (STUB)  (0xffff8bd06260)
0xffff8bdfb324  code target (STUB)  (0xffff8bd068e0)
0xffff8bdfb338  constant pool (size 48)
0xffff8bdfb390  runtime entry
0xffff8bdfb39c  constant pool (size 20)


kind = STUB
major_key = FastNewRestParameterStub
name = FastNewRestParameterStub
compiler = unknown
Instructions (size = 512)
0xffff8bdfc080     0  mov x2, fp
0xffff8bdfc084     4  b #+0x8 (addr 0xffff8bdfc08c)
0xffff8bdfc088     8  ldr x2, [x2]
0xffff8bdfc08c    12  ldur x3, [x2, #-16]
0xffff8bdfc090    16  cmp x3, x1
0xffff8bdfc094    20  b.ne #-0xc (addr 0xffff8bdfc088)
0xffff8bdfc098    24  ldr x2, [x2]
0xffff8bdfc09c    28  ldur x3, [x2, #-8]
0xffff8bdfc0a0    32  movz x16, #0xe00000000
0xffff8bdfc0a4    36  cmp x3, x16
0xffff8bdfc0a8    40  b.ne #+0x18 (addr 0xffff8bdfc0c0)
0xffff8bdfc0ac    44  ldursw x0, [x2, #-20]
0xffff8bdfc0b0    48  ldur x1, [x1, #31]
0xffff8bdfc0b4    52  ldursw x1, [x1, #99]
0xffff8bdfc0b8    56  subs x0, x0, x1
0xffff8bdfc0bc    60  b.gt #+0x94 (addr 0xffff8bdfc150)
0xffff8bdfc0c0    64  ldr x1, pc+384 (addr 0x0000ffff8bdfc240)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff8bdfc0c4    68  ldp x0, x2, [x1]
0xffff8bdfc0c8    72  adds x16, x0, #0x20 (32)
0xffff8bdfc0cc    76  ccmp x16, x2, #nzCv, lo
0xffff8bdfc0d0    80  b.hi #+0x34 (addr 0xffff8bdfc104)
0xffff8bdfc0d4    84  str x16, [x1]
0xffff8bdfc0d8    88  orr x0, x0, #0x1
0xffff8bdfc0dc    92  ldur x1, [cp, #39]
0xffff8bdfc0e0    96  movz x16, #0x187
0xffff8bdfc0e4   100  ldr x1, [x1, x16]
0xffff8bdfc0e8   104  stur x1, [x0, #-1]
0xffff8bdfc0ec   108  ldr x1, [x26, #304]
0xffff8bdfc0f0   112  stur x1, [x0, #7]
0xffff8bdfc0f4   116  stur x1, [x0, #15]
0xffff8bdfc0f8   120  movz x1, #0x0
0xffff8bdfc0fc   124  stur x1, [x0, #23]
0xffff8bdfc100   128  ret
0xffff8bdfc104   132  movz x16, #0xc00000000
0xffff8bdfc108   136  sub csp, jssp, #0x10 (16)
0xffff8bdfc10c   140  stp fp, lr, [jssp, #-16]!
0xffff8bdfc110   144  sub csp, jssp, #0x10 (16)
0xffff8bdfc114   148  str x16, [jssp, #-8]!
0xffff8bdfc118   152  ldr x17, pc+304 (addr 0x0000ffff8bdfc248)    ;; object: 0xffff8bdfc021 <Code: STUB>
0xffff8bdfc11c   156  sub csp, jssp, #0x10 (16)
0xffff8bdfc120   160  str x17, [jssp, #-8]!
0xffff8bdfc124   164  add fp, jssp, #0x10 (16)
0xffff8bdfc128   168  movz x16, #0x2000000000
0xffff8bdfc12c   172  sub csp, jssp, #0x8 (8)
0xffff8bdfc130   176  str x16, [jssp, #-8]!
0xffff8bdfc134   180  movz x0, #0x1
0xffff8bdfc138   184  ldr x1, pc+280 (addr 0x0000ffff8bdfc250)    ;; external reference (Runtime::AllocateInNewSpace)
0xffff8bdfc13c   188  ldr x16, pc+284 (addr 0x0000ffff8bdfc258)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdfc140   192  blr x16
0xffff8bdfc144   196  mov jssp, fp
0xffff8bdfc148   200  ldp fp, lr, [jssp], #16
0xffff8bdfc14c   204  b #-0x70 (addr 0xffff8bdfc0dc)
0xffff8bdfc150   208  add x2, x2, x0, lsl #3
0xffff8bdfc154   212  add x2, x2, #0x8 (8)
0xffff8bdfc158   216  movz x1, #0x30
0xffff8bdfc15c   220  add x1, x1, x0, lsl #3
0xffff8bdfc160   224  ldr x5, pc+256 (addr 0x0000ffff8bdfc260)    ;; external reference (Heap::NewSpaceAllocationTopAddress())
0xffff8bdfc164   228  ldp x3, x16, [x5]
0xffff8bdfc168   232  adds x4, x3, x1
0xffff8bdfc16c   236  ccmp x4, x16, #nzCv, lo
0xffff8bdfc170   240  b.hi #+0x64 (addr 0xffff8bdfc1d4)
0xffff8bdfc174   244  str x4, [x5]
0xffff8bdfc178   248  orr x3, x3, #0x1
0xffff8bdfc17c   252  lsl x6, x0, #32
0xffff8bdfc180   256  ldr x1, [x26, #224]
0xffff8bdfc184   260  stur x1, [x3, #-1]
0xffff8bdfc188   264  stur x6, [x3, #7]
0xffff8bdfc18c   268  add x4, x3, #0x10 (16)
0xffff8bdfc190   272  add x0, x4, x0, lsl #3
0xffff8bdfc194   276  cmp x4, x0
0xffff8bdfc198   280  b.eq #+0x18 (addr 0xffff8bdfc1b0)
0xffff8bdfc19c   284  ldr x5, [x2]
0xffff8bdfc1a0   288  stur x5, [x4, #-1]
0xffff8bdfc1a4   292  sub x2, x2, #0x8 (8)
0xffff8bdfc1a8   296  add x4, x4, #0x8 (8)
0xffff8bdfc1ac   300  b #-0x18 (addr 0xffff8bdfc194)
0xffff8bdfc1b0   304  ldur x1, [cp, #39]
0xffff8bdfc1b4   308  movz x16, #0x187
0xffff8bdfc1b8   312  ldr x1, [x1, x16]
0xffff8bdfc1bc   316  stur x1, [x0, #-1]
0xffff8bdfc1c0   320  ldr x1, [x26, #304]
0xffff8bdfc1c4   324  stur x1, [x0, #7]
0xffff8bdfc1c8   328  stur x3, [x0, #15]
0xffff8bdfc1cc   332  stur x6, [x0, #23]
0xffff8bdfc1d0   336  ret
0xffff8bdfc1d4   340  movz x16, #0xc00000000
0xffff8bdfc1d8   344  sub csp, jssp, #0x10 (16)
0xffff8bdfc1dc   348  stp fp, lr, [jssp, #-16]!
0xffff8bdfc1e0   352  sub csp, jssp, #0x10 (16)
0xffff8bdfc1e4   356  str x16, [jssp, #-8]!
0xffff8bdfc1e8   360  ldr x17, pc+128 (addr 0x0000ffff8bdfc268)    ;; object: 0xffff8bdfc021 <Code: STUB>
0xffff8bdfc1ec   364  sub csp, jssp, #0x10 (16)
0xffff8bdfc1f0   368  str x17, [jssp, #-8]!
0xffff8bdfc1f4   372  add fp, jssp, #0x10 (16)
0xffff8bdfc1f8   376  lsl x0, x0, #32
0xffff8bdfc1fc   380  lsl x1, x1, #32
0xffff8bdfc200   384  sub csp, jssp, #0x18 (24)
0xffff8bdfc204   388  stp x1, x2, [jssp, #-24]!
0xffff8bdfc208   392  str x0, [jssp, #16]
0xffff8bdfc20c   396  movz x0, #0x1
0xffff8bdfc210   400  ldr x1, pc+96 (addr 0x0000ffff8bdfc270)    ;; external reference (Runtime::AllocateInNewSpace)
0xffff8bdfc214   404  ldr x16, pc+100 (addr 0x0000ffff8bdfc278)    ;; code: STUB, CEntryStub, minor: 4
0xffff8bdfc218   408  blr x16
0xffff8bdfc21c   412  mov x3, x0
0xffff8bdfc220   416  ldp x2, x0, [jssp], #16
0xffff8bdfc224   420  asr x0, x0, #32
0xffff8bdfc228   424  mov jssp, fp
0xffff8bdfc22c   428  ldp fp, lr, [jssp], #16
0xffff8bdfc230   432  b #-0xb4 (addr 0xffff8bdfc17c)
0xffff8bdfc234   436  5800025f       constant pool begin (num_const = 18)    ;; constant pool
0xffff8bdfc238   440  d63f03e0       constant
0xffff8bdfc23c   444  d503201f       constant
0xffff8bdfc240   448  2cb8e2c0       constant
0xffff8bdfc244   452  00000000       constant
0xffff8bdfc248   456  8bdfc021       constant
0xffff8bdfc24c   460  0000ffff       constant
0xffff8bdfc250   464  00e25898       constant
0xffff8bdfc254   468  00000000       constant
0xffff8bdfc258   472  8bd06060       constant
0xffff8bdfc25c   476  0000ffff       constant
0xffff8bdfc260   480  2cb8e2c0       constant
0xffff8bdfc264   484  00000000       constant
0xffff8bdfc268   488  8bdfc021       constant
0xffff8bdfc26c   492  0000ffff       constant
0xffff8bdfc270   496  00e25898       constant
0xffff8bdfc274   500  00000000       constant
0xffff8bdfc278   504  8bd06060       constant
0xffff8bdfc27c   508  0000ffff       constant


RelocInfo (size = 24)
0xffff8bdfc0c0  external reference (Heap::NewSpaceAllocationTopAddress())  (0x2cb8e2c0)
0xffff8bdfc118  embedded object  (0xffff8bdfc021 <Code: STUB>)
0xffff8bdfc138  external reference (Runtime::AllocateInNewSpace)  (0xe25898)
0xffff8bdfc13c  code target (STUB)  (0xffff8bd06060)
0xffff8bdfc160  external reference (Heap::NewSpaceAllocationTopAddress())  (0x2cb8e2c0)
0xffff8bdfc1e8  embedded object  (0xffff8bdfc021 <Code: STUB>)
0xffff8bdfc210  external reference (Runtime::AllocateInNewSpace)  (0xe25898)
0xffff8bdfc214  code target (STUB)  (0xffff8bd06060)
0xffff8bdfc234  constant pool (size 76)


kind = HANDLER
major_key = <NoCache>Stub
name = info
compiler = unknown
Instructions (size = 120)
0xffff8bdfc600     0  sub csp, jssp, #0x8 (8)
0xffff8bdfc604     4  str x3, [jssp, #-8]!
0xffff8bdfc608     8  sub csp, jssp, #0x8 (8)
0xffff8bdfc60c    12  str x0, [jssp, #-8]!
0xffff8bdfc610    16  ldr x0, pc+72 (addr 0x0000ffff8bdfc658)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfc614    20  ldur x0, [x0, #7]
0xffff8bdfc618    24  cmp x0, #0x0 (0)
0xffff8bdfc61c    28  b.ne #+0x14 (addr 0xffff8bdfc630)
0xffff8bdfc620    32  ldr x3, pc+64 (addr 0x0000ffff8bdfc660)    ;; object: 0x327ed131 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>
0xffff8bdfc624    36  ldur x3, [x3, #7]
0xffff8bdfc628    40  tbz w3, #0, #+0x8 (addr 0xffff8bdfc630)
0xffff8bdfc62c    44  b #+0x14 (addr 0xffff8bdfc640)
0xffff8bdfc630    48  ldr x0, [jssp], #8
0xffff8bdfc634    52  ldr x3, [jssp], #8
0xffff8bdfc638    56  ldr x16, pc+48 (addr 0x0000ffff8bdfc668)    ;; code: BUILTIN
0xffff8bdfc63c    60  br x16
0xffff8bdfc640    64  add jssp, jssp, #0x10 (16)
0xffff8bdfc644    68  mov x1, x3
0xffff8bdfc648    72  ldr x16, pc+40 (addr 0x0000ffff8bdfc670)    ;; code: HANDLER, LoadConstantStub, minor: 2
0xffff8bdfc64c    76  br x16
0xffff8bdfc650    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdfc654    84  d63f03e0       constant
0xffff8bdfc658    88  327ed121       constant
0xffff8bdfc65c    92  00000000       constant
0xffff8bdfc660    96  327ed131       constant
0xffff8bdfc664   100  00000000       constant
0xffff8bdfc668   104  8bd222e0       constant
0xffff8bdfc66c   108  0000ffff       constant
0xffff8bdfc670   112  8bd43380       constant
0xffff8bdfc674   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdfc610  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfc620  embedded object  (0x327ed131 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>)
0xffff8bdfc638  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdfc648  code target (HANDLER)  (0xffff8bd43380)
0xffff8bdfc650  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = bind
compiler = unknown
Instructions (size = 120)
0xffff8bdfc6e0     0  sub csp, jssp, #0x8 (8)
0xffff8bdfc6e4     4  str x3, [jssp, #-8]!
0xffff8bdfc6e8     8  sub csp, jssp, #0x8 (8)
0xffff8bdfc6ec    12  str x0, [jssp, #-8]!
0xffff8bdfc6f0    16  ldr x0, pc+72 (addr 0x0000ffff8bdfc738)    ;; object: 0x26c5b0f1 Cell for 0
0xffff8bdfc6f4    20  ldur x0, [x0, #7]
0xffff8bdfc6f8    24  cmp x0, #0x0 (0)
0xffff8bdfc6fc    28  b.ne #+0x14 (addr 0xffff8bdfc710)
0xffff8bdfc700    32  ldr x3, pc+64 (addr 0x0000ffff8bdfc740)    ;; object: 0x327ed181 WeakCell for 0x26c40019 <JS Function (SharedFunctionInfo 0x26c3ff71)>
0xffff8bdfc704    36  ldur x3, [x3, #7]
0xffff8bdfc708    40  tbz w3, #0, #+0x8 (addr 0xffff8bdfc710)
0xffff8bdfc70c    44  b #+0x14 (addr 0xffff8bdfc720)
0xffff8bdfc710    48  ldr x0, [jssp], #8
0xffff8bdfc714    52  ldr x3, [jssp], #8
0xffff8bdfc718    56  ldr x16, pc+48 (addr 0x0000ffff8bdfc748)    ;; code: BUILTIN
0xffff8bdfc71c    60  br x16
0xffff8bdfc720    64  add jssp, jssp, #0x10 (16)
0xffff8bdfc724    68  mov x1, x3
0xffff8bdfc728    72  ldr x16, pc+40 (addr 0x0000ffff8bdfc750)    ;; code: HANDLER, LoadConstantStub, minor: 5
0xffff8bdfc72c    76  br x16
0xffff8bdfc730    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdfc734    84  d63f03e0       constant
0xffff8bdfc738    88  26c5b0f1       constant
0xffff8bdfc73c    92  00000000       constant
0xffff8bdfc740    96  327ed181       constant
0xffff8bdfc744   100  00000000       constant
0xffff8bdfc748   104  8bd222e0       constant
0xffff8bdfc74c   108  0000ffff       constant
0xffff8bdfc750   112  8bd43500       constant
0xffff8bdfc754   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdfc6f0  embedded object  (0x26c5b0f1 Cell for 0)
0xffff8bdfc700  embedded object  (0x327ed181 WeakCell for 0x26c40019 <JS Function (SharedFunctionInfo 0x26c3ff71)>)
0xffff8bdfc718  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdfc728  code target (HANDLER)  (0xffff8bd43500)
0xffff8bdfc730  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = info
compiler = unknown
Instructions (size = 184)
0xffff8bdfc7c0     0  sub csp, jssp, #0x8 (8)
0xffff8bdfc7c4     4  str x3, [jssp, #-8]!
0xffff8bdfc7c8     8  sub csp, jssp, #0x8 (8)
0xffff8bdfc7cc    12  str x4, [jssp, #-8]!
0xffff8bdfc7d0    16  ldr x3, pc+112 (addr 0x0000ffff8bdfc840)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfc7d4    20  ldur x3, [x3, #7]
0xffff8bdfc7d8    24  cmp x3, #0x0 (0)
0xffff8bdfc7dc    28  b.ne #+0x44 (addr 0xffff8bdfc820)
0xffff8bdfc7e0    32  tbz w0, #0, #+0x40 (addr 0xffff8bdfc820)
0xffff8bdfc7e4    36  ldur x3, [x0, #-1]
0xffff8bdfc7e8    40  ldr x4, pc+96 (addr 0x0000ffff8bdfc848)    ;; object: 0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfc7ec    44  ldur x4, [x4, #7]
0xffff8bdfc7f0    48  cmp x3, x4
0xffff8bdfc7f4    52  b.ne #+0x2c (addr 0xffff8bdfc820)
0xffff8bdfc7f8    56  ldr x5, pc+88 (addr 0x0000ffff8bdfc850)    ;; object: 0x327ed1b9 WeakCell for 0x5f541df1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfc7fc    60  ldur x5, [x5, #7]
0xffff8bdfc800    64  tbz w5, #0, #+0x20 (addr 0xffff8bdfc820)
0xffff8bdfc804    68  ldursw x4, [x5, #15]
0xffff8bdfc808    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdfc820)
0xffff8bdfc80c    76  ldr x4, [jssp], #8
0xffff8bdfc810    80  ldr x3, [jssp], #8
0xffff8bdfc814    84  ldr x2, pc+68 (addr 0x0000ffff8bdfc858)    ;; object: 0x327cc8a9 <String[4]: info>
0xffff8bdfc818    88  ldr x16, pc+72 (addr 0x0000ffff8bdfc860)    ;; code: HANDLER, StoreTransitionStub, minor: 198663
0xffff8bdfc81c    92  br x16
0xffff8bdfc820    96  ldr x2, pc+72 (addr 0x0000ffff8bdfc868)    ;; object: 0x327cc8a9 <String[4]: info>
0xffff8bdfc824   100  ldr x4, [jssp], #8
0xffff8bdfc828   104  ldr x3, [jssp], #8
0xffff8bdfc82c   108  ldr x16, pc+68 (addr 0x0000ffff8bdfc870)    ;; code: BUILTIN
0xffff8bdfc830   112  br x16
0xffff8bdfc834   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdfc838   120  d63f03e0       constant
0xffff8bdfc83c   124  d503201f       constant
0xffff8bdfc840   128  327ed121       constant
0xffff8bdfc844   132  00000000       constant
0xffff8bdfc848   136  327ed0b1       constant
0xffff8bdfc84c   140  00000000       constant
0xffff8bdfc850   144  327ed1b9       constant
0xffff8bdfc854   148  00000000       constant
0xffff8bdfc858   152  327cc8a9       constant
0xffff8bdfc85c   156  00000000       constant
0xffff8bdfc860   160  8bd8c240       constant
0xffff8bdfc864   164  0000ffff       constant
0xffff8bdfc868   168  327cc8a9       constant
0xffff8bdfc86c   172  00000000       constant
0xffff8bdfc870   176  8bd22420       constant
0xffff8bdfc874   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdfc7d0  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfc7e8  embedded object  (0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfc7f8  embedded object  (0x327ed1b9 WeakCell for 0x5f541df1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfc814  embedded object  (0x327cc8a9 <String[4]: info>)
0xffff8bdfc818  code target (HANDLER)  (0xffff8bd8c240)
0xffff8bdfc820  embedded object  (0x327cc8a9 <String[4]: info>)
0xffff8bdfc82c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdfc834  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = warn
compiler = unknown
Instructions (size = 120)
0xffff8bdfc8e0     0  sub csp, jssp, #0x8 (8)
0xffff8bdfc8e4     4  str x3, [jssp, #-8]!
0xffff8bdfc8e8     8  sub csp, jssp, #0x8 (8)
0xffff8bdfc8ec    12  str x0, [jssp, #-8]!
0xffff8bdfc8f0    16  ldr x0, pc+72 (addr 0x0000ffff8bdfc938)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfc8f4    20  ldur x0, [x0, #7]
0xffff8bdfc8f8    24  cmp x0, #0x0 (0)
0xffff8bdfc8fc    28  b.ne #+0x14 (addr 0xffff8bdfc910)
0xffff8bdfc900    32  ldr x3, pc+64 (addr 0x0000ffff8bdfc940)    ;; object: 0x327ed1f1 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>
0xffff8bdfc904    36  ldur x3, [x3, #7]
0xffff8bdfc908    40  tbz w3, #0, #+0x8 (addr 0xffff8bdfc910)
0xffff8bdfc90c    44  b #+0x14 (addr 0xffff8bdfc920)
0xffff8bdfc910    48  ldr x0, [jssp], #8
0xffff8bdfc914    52  ldr x3, [jssp], #8
0xffff8bdfc918    56  ldr x16, pc+48 (addr 0x0000ffff8bdfc948)    ;; code: BUILTIN
0xffff8bdfc91c    60  br x16
0xffff8bdfc920    64  add jssp, jssp, #0x10 (16)
0xffff8bdfc924    68  mov x1, x3
0xffff8bdfc928    72  ldr x16, pc+40 (addr 0x0000ffff8bdfc950)    ;; code: HANDLER, LoadConstantStub, minor: 3
0xffff8bdfc92c    76  br x16
0xffff8bdfc930    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdfc934    84  d63f03e0       constant
0xffff8bdfc938    88  327ed121       constant
0xffff8bdfc93c    92  00000000       constant
0xffff8bdfc940    96  327ed1f1       constant
0xffff8bdfc944   100  00000000       constant
0xffff8bdfc948   104  8bd222e0       constant
0xffff8bdfc94c   108  0000ffff       constant
0xffff8bdfc950   112  8bd43400       constant
0xffff8bdfc954   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdfc8f0  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfc900  embedded object  (0x327ed1f1 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>)
0xffff8bdfc918  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdfc928  code target (HANDLER)  (0xffff8bd43400)
0xffff8bdfc930  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = warn
compiler = unknown
Instructions (size = 184)
0xffff8bdfcce0     0  sub csp, jssp, #0x8 (8)
0xffff8bdfcce4     4  str x3, [jssp, #-8]!
0xffff8bdfcce8     8  sub csp, jssp, #0x8 (8)
0xffff8bdfccec    12  str x4, [jssp, #-8]!
0xffff8bdfccf0    16  ldr x3, pc+112 (addr 0x0000ffff8bdfcd60)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfccf4    20  ldur x3, [x3, #7]
0xffff8bdfccf8    24  cmp x3, #0x0 (0)
0xffff8bdfccfc    28  b.ne #+0x44 (addr 0xffff8bdfcd40)
0xffff8bdfcd00    32  tbz w0, #0, #+0x40 (addr 0xffff8bdfcd40)
0xffff8bdfcd04    36  ldur x3, [x0, #-1]
0xffff8bdfcd08    40  ldr x4, pc+96 (addr 0x0000ffff8bdfcd68)    ;; object: 0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfcd0c    44  ldur x4, [x4, #7]
0xffff8bdfcd10    48  cmp x3, x4
0xffff8bdfcd14    52  b.ne #+0x2c (addr 0xffff8bdfcd40)
0xffff8bdfcd18    56  ldr x5, pc+88 (addr 0x0000ffff8bdfcd70)    ;; object: 0x327ed3a1 WeakCell for 0x5f541e49 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfcd1c    60  ldur x5, [x5, #7]
0xffff8bdfcd20    64  tbz w5, #0, #+0x20 (addr 0xffff8bdfcd40)
0xffff8bdfcd24    68  ldursw x4, [x5, #15]
0xffff8bdfcd28    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdfcd40)
0xffff8bdfcd2c    76  ldr x4, [jssp], #8
0xffff8bdfcd30    80  ldr x3, [jssp], #8
0xffff8bdfcd34    84  ldr x2, pc+68 (addr 0x0000ffff8bdfcd78)    ;; object: 0x327cc8c9 <String[4]: warn>
0xffff8bdfcd38    88  ldr x16, pc+72 (addr 0x0000ffff8bdfcd80)    ;; code: HANDLER, StoreTransitionStub, minor: 198664
0xffff8bdfcd3c    92  br x16
0xffff8bdfcd40    96  ldr x2, pc+72 (addr 0x0000ffff8bdfcd88)    ;; object: 0x327cc8c9 <String[4]: warn>
0xffff8bdfcd44   100  ldr x4, [jssp], #8
0xffff8bdfcd48   104  ldr x3, [jssp], #8
0xffff8bdfcd4c   108  ldr x16, pc+68 (addr 0x0000ffff8bdfcd90)    ;; code: BUILTIN
0xffff8bdfcd50   112  br x16
0xffff8bdfcd54   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdfcd58   120  d63f03e0       constant
0xffff8bdfcd5c   124  d503201f       constant
0xffff8bdfcd60   128  327ed121       constant
0xffff8bdfcd64   132  00000000       constant
0xffff8bdfcd68   136  327ed0b1       constant
0xffff8bdfcd6c   140  00000000       constant
0xffff8bdfcd70   144  327ed3a1       constant
0xffff8bdfcd74   148  00000000       constant
0xffff8bdfcd78   152  327cc8c9       constant
0xffff8bdfcd7c   156  00000000       constant
0xffff8bdfcd80   160  8bde5d20       constant
0xffff8bdfcd84   164  0000ffff       constant
0xffff8bdfcd88   168  327cc8c9       constant
0xffff8bdfcd8c   172  00000000       constant
0xffff8bdfcd90   176  8bd22420       constant
0xffff8bdfcd94   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdfccf0  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfcd08  embedded object  (0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfcd18  embedded object  (0x327ed3a1 WeakCell for 0x5f541e49 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfcd34  embedded object  (0x327cc8c9 <String[4]: warn>)
0xffff8bdfcd38  code target (HANDLER)  (0xffff8bde5d20)
0xffff8bdfcd40  embedded object  (0x327cc8c9 <String[4]: warn>)
0xffff8bdfcd4c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdfcd54  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = error
compiler = unknown
Instructions (size = 120)
0xffff8bdfce00     0  sub csp, jssp, #0x8 (8)
0xffff8bdfce04     4  str x3, [jssp, #-8]!
0xffff8bdfce08     8  sub csp, jssp, #0x8 (8)
0xffff8bdfce0c    12  str x0, [jssp, #-8]!
0xffff8bdfce10    16  ldr x0, pc+72 (addr 0x0000ffff8bdfce58)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfce14    20  ldur x0, [x0, #7]
0xffff8bdfce18    24  cmp x0, #0x0 (0)
0xffff8bdfce1c    28  b.ne #+0x14 (addr 0xffff8bdfce30)
0xffff8bdfce20    32  ldr x3, pc+64 (addr 0x0000ffff8bdfce60)    ;; object: 0x327ed3d9 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>
0xffff8bdfce24    36  ldur x3, [x3, #7]
0xffff8bdfce28    40  tbz w3, #0, #+0x8 (addr 0xffff8bdfce30)
0xffff8bdfce2c    44  b #+0x14 (addr 0xffff8bdfce40)
0xffff8bdfce30    48  ldr x0, [jssp], #8
0xffff8bdfce34    52  ldr x3, [jssp], #8
0xffff8bdfce38    56  ldr x16, pc+48 (addr 0x0000ffff8bdfce68)    ;; code: BUILTIN
0xffff8bdfce3c    60  br x16
0xffff8bdfce40    64  add jssp, jssp, #0x10 (16)
0xffff8bdfce44    68  mov x1, x3
0xffff8bdfce48    72  ldr x16, pc+40 (addr 0x0000ffff8bdfce70)    ;; code: HANDLER, LoadConstantStub, minor: 4
0xffff8bdfce4c    76  br x16
0xffff8bdfce50    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdfce54    84  d63f03e0       constant
0xffff8bdfce58    88  327ed121       constant
0xffff8bdfce5c    92  00000000       constant
0xffff8bdfce60    96  327ed3d9       constant
0xffff8bdfce64   100  00000000       constant
0xffff8bdfce68   104  8bd222e0       constant
0xffff8bdfce6c   108  0000ffff       constant
0xffff8bdfce70   112  8bd43480       constant
0xffff8bdfce74   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdfce10  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfce20  embedded object  (0x327ed3d9 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>)
0xffff8bdfce38  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdfce48  code target (HANDLER)  (0xffff8bd43480)
0xffff8bdfce50  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = error
compiler = unknown
Instructions (size = 184)
0xffff8bdfcee0     0  sub csp, jssp, #0x8 (8)
0xffff8bdfcee4     4  str x3, [jssp, #-8]!
0xffff8bdfcee8     8  sub csp, jssp, #0x8 (8)
0xffff8bdfceec    12  str x4, [jssp, #-8]!
0xffff8bdfcef0    16  ldr x3, pc+112 (addr 0x0000ffff8bdfcf60)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfcef4    20  ldur x3, [x3, #7]
0xffff8bdfcef8    24  cmp x3, #0x0 (0)
0xffff8bdfcefc    28  b.ne #+0x44 (addr 0xffff8bdfcf40)
0xffff8bdfcf00    32  tbz w0, #0, #+0x40 (addr 0xffff8bdfcf40)
0xffff8bdfcf04    36  ldur x3, [x0, #-1]
0xffff8bdfcf08    40  ldr x4, pc+96 (addr 0x0000ffff8bdfcf68)    ;; object: 0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfcf0c    44  ldur x4, [x4, #7]
0xffff8bdfcf10    48  cmp x3, x4
0xffff8bdfcf14    52  b.ne #+0x2c (addr 0xffff8bdfcf40)
0xffff8bdfcf18    56  ldr x5, pc+88 (addr 0x0000ffff8bdfcf70)    ;; object: 0x327ed411 WeakCell for 0x5f541ea1 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfcf1c    60  ldur x5, [x5, #7]
0xffff8bdfcf20    64  tbz w5, #0, #+0x20 (addr 0xffff8bdfcf40)
0xffff8bdfcf24    68  ldursw x4, [x5, #15]
0xffff8bdfcf28    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdfcf40)
0xffff8bdfcf2c    76  ldr x4, [jssp], #8
0xffff8bdfcf30    80  ldr x3, [jssp], #8
0xffff8bdfcf34    84  ldr x2, pc+68 (addr 0x0000ffff8bdfcf78)    ;; object: 0x26cb2571 <String[5]: error>
0xffff8bdfcf38    88  ldr x16, pc+72 (addr 0x0000ffff8bdfcf80)    ;; code: HANDLER, StoreTransitionStub, minor: 198665
0xffff8bdfcf3c    92  br x16
0xffff8bdfcf40    96  ldr x2, pc+72 (addr 0x0000ffff8bdfcf88)    ;; object: 0x26cb2571 <String[5]: error>
0xffff8bdfcf44   100  ldr x4, [jssp], #8
0xffff8bdfcf48   104  ldr x3, [jssp], #8
0xffff8bdfcf4c   108  ldr x16, pc+68 (addr 0x0000ffff8bdfcf90)    ;; code: BUILTIN
0xffff8bdfcf50   112  br x16
0xffff8bdfcf54   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdfcf58   120  d63f03e0       constant
0xffff8bdfcf5c   124  d503201f       constant
0xffff8bdfcf60   128  327ed121       constant
0xffff8bdfcf64   132  00000000       constant
0xffff8bdfcf68   136  327ed0b1       constant
0xffff8bdfcf6c   140  00000000       constant
0xffff8bdfcf70   144  327ed411       constant
0xffff8bdfcf74   148  00000000       constant
0xffff8bdfcf78   152  26cb2571       constant
0xffff8bdfcf7c   156  00000000       constant
0xffff8bdfcf80   160  8bde60c0       constant
0xffff8bdfcf84   164  0000ffff       constant
0xffff8bdfcf88   168  26cb2571       constant
0xffff8bdfcf8c   172  00000000       constant
0xffff8bdfcf90   176  8bd22420       constant
0xffff8bdfcf94   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdfcef0  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfcf08  embedded object  (0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfcf18  embedded object  (0x327ed411 WeakCell for 0x5f541ea1 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfcf34  embedded object  (0x26cb2571 <String[5]: error>)
0xffff8bdfcf38  code target (HANDLER)  (0xffff8bde60c0)
0xffff8bdfcf40  embedded object  (0x26cb2571 <String[5]: error>)
0xffff8bdfcf4c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdfcf54  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = dir
compiler = unknown
Instructions (size = 120)
0xffff8bdfd000     0  sub csp, jssp, #0x8 (8)
0xffff8bdfd004     4  str x3, [jssp, #-8]!
0xffff8bdfd008     8  sub csp, jssp, #0x8 (8)
0xffff8bdfd00c    12  str x0, [jssp, #-8]!
0xffff8bdfd010    16  ldr x0, pc+72 (addr 0x0000ffff8bdfd058)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfd014    20  ldur x0, [x0, #7]
0xffff8bdfd018    24  cmp x0, #0x0 (0)
0xffff8bdfd01c    28  b.ne #+0x14 (addr 0xffff8bdfd030)
0xffff8bdfd020    32  ldr x3, pc+64 (addr 0x0000ffff8bdfd060)    ;; object: 0x327ed449 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>
0xffff8bdfd024    36  ldur x3, [x3, #7]
0xffff8bdfd028    40  tbz w3, #0, #+0x8 (addr 0xffff8bdfd030)
0xffff8bdfd02c    44  b #+0x14 (addr 0xffff8bdfd040)
0xffff8bdfd030    48  ldr x0, [jssp], #8
0xffff8bdfd034    52  ldr x3, [jssp], #8
0xffff8bdfd038    56  ldr x16, pc+48 (addr 0x0000ffff8bdfd068)    ;; code: BUILTIN
0xffff8bdfd03c    60  br x16
0xffff8bdfd040    64  add jssp, jssp, #0x10 (16)
0xffff8bdfd044    68  mov x1, x3
0xffff8bdfd048    72  ldr x16, pc+40 (addr 0x0000ffff8bdfd070)    ;; code: HANDLER, LoadConstantStub, minor: 5
0xffff8bdfd04c    76  br x16
0xffff8bdfd050    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdfd054    84  d63f03e0       constant
0xffff8bdfd058    88  327ed121       constant
0xffff8bdfd05c    92  00000000       constant
0xffff8bdfd060    96  327ed449       constant
0xffff8bdfd064   100  00000000       constant
0xffff8bdfd068   104  8bd222e0       constant
0xffff8bdfd06c   108  0000ffff       constant
0xffff8bdfd070   112  8bd43500       constant
0xffff8bdfd074   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdfd010  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfd020  embedded object  (0x327ed449 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>)
0xffff8bdfd038  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdfd048  code target (HANDLER)  (0xffff8bd43500)
0xffff8bdfd050  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = dir
compiler = unknown
Instructions (size = 184)
0xffff8bdfd460     0  sub csp, jssp, #0x8 (8)
0xffff8bdfd464     4  str x3, [jssp, #-8]!
0xffff8bdfd468     8  sub csp, jssp, #0x8 (8)
0xffff8bdfd46c    12  str x4, [jssp, #-8]!
0xffff8bdfd470    16  ldr x3, pc+112 (addr 0x0000ffff8bdfd4e0)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfd474    20  ldur x3, [x3, #7]
0xffff8bdfd478    24  cmp x3, #0x0 (0)
0xffff8bdfd47c    28  b.ne #+0x44 (addr 0xffff8bdfd4c0)
0xffff8bdfd480    32  tbz w0, #0, #+0x40 (addr 0xffff8bdfd4c0)
0xffff8bdfd484    36  ldur x3, [x0, #-1]
0xffff8bdfd488    40  ldr x4, pc+96 (addr 0x0000ffff8bdfd4e8)    ;; object: 0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfd48c    44  ldur x4, [x4, #7]
0xffff8bdfd490    48  cmp x3, x4
0xffff8bdfd494    52  b.ne #+0x2c (addr 0xffff8bdfd4c0)
0xffff8bdfd498    56  ldr x5, pc+88 (addr 0x0000ffff8bdfd4f0)    ;; object: 0x327ed659 WeakCell for 0x5f541ef9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfd49c    60  ldur x5, [x5, #7]
0xffff8bdfd4a0    64  tbz w5, #0, #+0x20 (addr 0xffff8bdfd4c0)
0xffff8bdfd4a4    68  ldursw x4, [x5, #15]
0xffff8bdfd4a8    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdfd4c0)
0xffff8bdfd4ac    76  ldr x4, [jssp], #8
0xffff8bdfd4b0    80  ldr x3, [jssp], #8
0xffff8bdfd4b4    84  ldr x2, pc+68 (addr 0x0000ffff8bdfd4f8)    ;; object: 0x26ccffd1 <String[3]: dir>
0xffff8bdfd4b8    88  ldr x16, pc+72 (addr 0x0000ffff8bdfd500)    ;; code: HANDLER, StoreTransitionStub, minor: 198666
0xffff8bdfd4bc    92  br x16
0xffff8bdfd4c0    96  ldr x2, pc+72 (addr 0x0000ffff8bdfd508)    ;; object: 0x26ccffd1 <String[3]: dir>
0xffff8bdfd4c4   100  ldr x4, [jssp], #8
0xffff8bdfd4c8   104  ldr x3, [jssp], #8
0xffff8bdfd4cc   108  ldr x16, pc+68 (addr 0x0000ffff8bdfd510)    ;; code: BUILTIN
0xffff8bdfd4d0   112  br x16
0xffff8bdfd4d4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdfd4d8   120  d63f03e0       constant
0xffff8bdfd4dc   124  d503201f       constant
0xffff8bdfd4e0   128  327ed121       constant
0xffff8bdfd4e4   132  00000000       constant
0xffff8bdfd4e8   136  327ed0b1       constant
0xffff8bdfd4ec   140  00000000       constant
0xffff8bdfd4f0   144  327ed659       constant
0xffff8bdfd4f4   148  00000000       constant
0xffff8bdfd4f8   152  26ccffd1       constant
0xffff8bdfd4fc   156  00000000       constant
0xffff8bdfd500   160  8bdf5a00       constant
0xffff8bdfd504   164  0000ffff       constant
0xffff8bdfd508   168  26ccffd1       constant
0xffff8bdfd50c   172  00000000       constant
0xffff8bdfd510   176  8bd22420       constant
0xffff8bdfd514   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdfd470  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfd488  embedded object  (0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfd498  embedded object  (0x327ed659 WeakCell for 0x5f541ef9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfd4b4  embedded object  (0x26ccffd1 <String[3]: dir>)
0xffff8bdfd4b8  code target (HANDLER)  (0xffff8bdf5a00)
0xffff8bdfd4c0  embedded object  (0x26ccffd1 <String[3]: dir>)
0xffff8bdfd4cc  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdfd4d4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = time
compiler = unknown
Instructions (size = 120)
0xffff8bdfd580     0  sub csp, jssp, #0x8 (8)
0xffff8bdfd584     4  str x3, [jssp, #-8]!
0xffff8bdfd588     8  sub csp, jssp, #0x8 (8)
0xffff8bdfd58c    12  str x0, [jssp, #-8]!
0xffff8bdfd590    16  ldr x0, pc+72 (addr 0x0000ffff8bdfd5d8)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfd594    20  ldur x0, [x0, #7]
0xffff8bdfd598    24  cmp x0, #0x0 (0)
0xffff8bdfd59c    28  b.ne #+0x14 (addr 0xffff8bdfd5b0)
0xffff8bdfd5a0    32  ldr x3, pc+64 (addr 0x0000ffff8bdfd5e0)    ;; object: 0x327ed691 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>
0xffff8bdfd5a4    36  ldur x3, [x3, #7]
0xffff8bdfd5a8    40  tbz w3, #0, #+0x8 (addr 0xffff8bdfd5b0)
0xffff8bdfd5ac    44  b #+0x14 (addr 0xffff8bdfd5c0)
0xffff8bdfd5b0    48  ldr x0, [jssp], #8
0xffff8bdfd5b4    52  ldr x3, [jssp], #8
0xffff8bdfd5b8    56  ldr x16, pc+48 (addr 0x0000ffff8bdfd5e8)    ;; code: BUILTIN
0xffff8bdfd5bc    60  br x16
0xffff8bdfd5c0    64  add jssp, jssp, #0x10 (16)
0xffff8bdfd5c4    68  mov x1, x3
0xffff8bdfd5c8    72  ldr x16, pc+40 (addr 0x0000ffff8bdfd5f0)    ;; code: HANDLER, LoadConstantStub, minor: 6
0xffff8bdfd5cc    76  br x16
0xffff8bdfd5d0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdfd5d4    84  d63f03e0       constant
0xffff8bdfd5d8    88  327ed121       constant
0xffff8bdfd5dc    92  00000000       constant
0xffff8bdfd5e0    96  327ed691       constant
0xffff8bdfd5e4   100  00000000       constant
0xffff8bdfd5e8   104  8bd222e0       constant
0xffff8bdfd5ec   108  0000ffff       constant
0xffff8bdfd5f0   112  8bd8b020       constant
0xffff8bdfd5f4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdfd590  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfd5a0  embedded object  (0x327ed691 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>)
0xffff8bdfd5b8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdfd5c8  code target (HANDLER)  (0xffff8bd8b020)
0xffff8bdfd5d0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = time
compiler = unknown
Instructions (size = 184)
0xffff8bdfd880     0  sub csp, jssp, #0x8 (8)
0xffff8bdfd884     4  str x3, [jssp, #-8]!
0xffff8bdfd888     8  sub csp, jssp, #0x8 (8)
0xffff8bdfd88c    12  str x4, [jssp, #-8]!
0xffff8bdfd890    16  ldr x3, pc+112 (addr 0x0000ffff8bdfd900)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfd894    20  ldur x3, [x3, #7]
0xffff8bdfd898    24  cmp x3, #0x0 (0)
0xffff8bdfd89c    28  b.ne #+0x44 (addr 0xffff8bdfd8e0)
0xffff8bdfd8a0    32  tbz w0, #0, #+0x40 (addr 0xffff8bdfd8e0)
0xffff8bdfd8a4    36  ldur x3, [x0, #-1]
0xffff8bdfd8a8    40  ldr x4, pc+96 (addr 0x0000ffff8bdfd908)    ;; object: 0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfd8ac    44  ldur x4, [x4, #7]
0xffff8bdfd8b0    48  cmp x3, x4
0xffff8bdfd8b4    52  b.ne #+0x2c (addr 0xffff8bdfd8e0)
0xffff8bdfd8b8    56  ldr x5, pc+88 (addr 0x0000ffff8bdfd910)    ;; object: 0x327ed829 WeakCell for 0x5f541f51 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfd8bc    60  ldur x5, [x5, #7]
0xffff8bdfd8c0    64  tbz w5, #0, #+0x20 (addr 0xffff8bdfd8e0)
0xffff8bdfd8c4    68  ldursw x4, [x5, #15]
0xffff8bdfd8c8    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdfd8e0)
0xffff8bdfd8cc    76  ldr x4, [jssp], #8
0xffff8bdfd8d0    80  ldr x3, [jssp], #8
0xffff8bdfd8d4    84  ldr x2, pc+68 (addr 0x0000ffff8bdfd918)    ;; object: 0x26ca2941 <String[4]: time>
0xffff8bdfd8d8    88  ldr x16, pc+72 (addr 0x0000ffff8bdfd920)    ;; code: HANDLER, StoreTransitionStub, minor: 198667
0xffff8bdfd8dc    92  br x16
0xffff8bdfd8e0    96  ldr x2, pc+72 (addr 0x0000ffff8bdfd928)    ;; object: 0x26ca2941 <String[4]: time>
0xffff8bdfd8e4   100  ldr x4, [jssp], #8
0xffff8bdfd8e8   104  ldr x3, [jssp], #8
0xffff8bdfd8ec   108  ldr x16, pc+68 (addr 0x0000ffff8bdfd930)    ;; code: BUILTIN
0xffff8bdfd8f0   112  br x16
0xffff8bdfd8f4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdfd8f8   120  d63f03e0       constant
0xffff8bdfd8fc   124  d503201f       constant
0xffff8bdfd900   128  327ed121       constant
0xffff8bdfd904   132  00000000       constant
0xffff8bdfd908   136  327ed0b1       constant
0xffff8bdfd90c   140  00000000       constant
0xffff8bdfd910   144  327ed829       constant
0xffff8bdfd914   148  00000000       constant
0xffff8bdfd918   152  26ca2941       constant
0xffff8bdfd91c   156  00000000       constant
0xffff8bdfd920   160  8bdf5d20       constant
0xffff8bdfd924   164  0000ffff       constant
0xffff8bdfd928   168  26ca2941       constant
0xffff8bdfd92c   172  00000000       constant
0xffff8bdfd930   176  8bd22420       constant
0xffff8bdfd934   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdfd890  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfd8a8  embedded object  (0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfd8b8  embedded object  (0x327ed829 WeakCell for 0x5f541f51 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfd8d4  embedded object  (0x26ca2941 <String[4]: time>)
0xffff8bdfd8d8  code target (HANDLER)  (0xffff8bdf5d20)
0xffff8bdfd8e0  embedded object  (0x26ca2941 <String[4]: time>)
0xffff8bdfd8ec  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdfd8f4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = timeEnd
compiler = unknown
Instructions (size = 120)
0xffff8bdfd9a0     0  sub csp, jssp, #0x8 (8)
0xffff8bdfd9a4     4  str x3, [jssp, #-8]!
0xffff8bdfd9a8     8  sub csp, jssp, #0x8 (8)
0xffff8bdfd9ac    12  str x0, [jssp, #-8]!
0xffff8bdfd9b0    16  ldr x0, pc+72 (addr 0x0000ffff8bdfd9f8)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfd9b4    20  ldur x0, [x0, #7]
0xffff8bdfd9b8    24  cmp x0, #0x0 (0)
0xffff8bdfd9bc    28  b.ne #+0x14 (addr 0xffff8bdfd9d0)
0xffff8bdfd9c0    32  ldr x3, pc+64 (addr 0x0000ffff8bdfda00)    ;; object: 0x327ed861 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>
0xffff8bdfd9c4    36  ldur x3, [x3, #7]
0xffff8bdfd9c8    40  tbz w3, #0, #+0x8 (addr 0xffff8bdfd9d0)
0xffff8bdfd9cc    44  b #+0x14 (addr 0xffff8bdfd9e0)
0xffff8bdfd9d0    48  ldr x0, [jssp], #8
0xffff8bdfd9d4    52  ldr x3, [jssp], #8
0xffff8bdfd9d8    56  ldr x16, pc+48 (addr 0x0000ffff8bdfda08)    ;; code: BUILTIN
0xffff8bdfd9dc    60  br x16
0xffff8bdfd9e0    64  add jssp, jssp, #0x10 (16)
0xffff8bdfd9e4    68  mov x1, x3
0xffff8bdfd9e8    72  ldr x16, pc+40 (addr 0x0000ffff8bdfda10)    ;; code: HANDLER, LoadConstantStub, minor: 7
0xffff8bdfd9ec    76  br x16
0xffff8bdfd9f0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdfd9f4    84  d63f03e0       constant
0xffff8bdfd9f8    88  327ed121       constant
0xffff8bdfd9fc    92  00000000       constant
0xffff8bdfda00    96  327ed861       constant
0xffff8bdfda04   100  00000000       constant
0xffff8bdfda08   104  8bd222e0       constant
0xffff8bdfda0c   108  0000ffff       constant
0xffff8bdfda10   112  8bd8b0a0       constant
0xffff8bdfda14   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdfd9b0  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfd9c0  embedded object  (0x327ed861 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>)
0xffff8bdfd9d8  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdfd9e8  code target (HANDLER)  (0xffff8bd8b0a0)
0xffff8bdfd9f0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = timeEnd
compiler = unknown
Instructions (size = 184)
0xffff8bdfe040     0  sub csp, jssp, #0x8 (8)
0xffff8bdfe044     4  str x3, [jssp, #-8]!
0xffff8bdfe048     8  sub csp, jssp, #0x8 (8)
0xffff8bdfe04c    12  str x4, [jssp, #-8]!
0xffff8bdfe050    16  ldr x3, pc+112 (addr 0x0000ffff8bdfe0c0)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfe054    20  ldur x3, [x3, #7]
0xffff8bdfe058    24  cmp x3, #0x0 (0)
0xffff8bdfe05c    28  b.ne #+0x44 (addr 0xffff8bdfe0a0)
0xffff8bdfe060    32  tbz w0, #0, #+0x40 (addr 0xffff8bdfe0a0)
0xffff8bdfe064    36  ldur x3, [x0, #-1]
0xffff8bdfe068    40  ldr x4, pc+96 (addr 0x0000ffff8bdfe0c8)    ;; object: 0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfe06c    44  ldur x4, [x4, #7]
0xffff8bdfe070    48  cmp x3, x4
0xffff8bdfe074    52  b.ne #+0x2c (addr 0xffff8bdfe0a0)
0xffff8bdfe078    56  ldr x5, pc+88 (addr 0x0000ffff8bdfe0d0)    ;; object: 0x327edb59 WeakCell for 0x5f541fa9 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfe07c    60  ldur x5, [x5, #7]
0xffff8bdfe080    64  tbz w5, #0, #+0x20 (addr 0xffff8bdfe0a0)
0xffff8bdfe084    68  ldursw x4, [x5, #15]
0xffff8bdfe088    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdfe0a0)
0xffff8bdfe08c    76  ldr x4, [jssp], #8
0xffff8bdfe090    80  ldr x3, [jssp], #8
0xffff8bdfe094    84  ldr x2, pc+68 (addr 0x0000ffff8bdfe0d8)    ;; object: 0x327cc909 <String[7]: timeEnd>
0xffff8bdfe098    88  ldr x16, pc+72 (addr 0x0000ffff8bdfe0e0)    ;; code: HANDLER, StoreTransitionStub, minor: 327682
0xffff8bdfe09c    92  br x16
0xffff8bdfe0a0    96  ldr x2, pc+72 (addr 0x0000ffff8bdfe0e8)    ;; object: 0x327cc909 <String[7]: timeEnd>
0xffff8bdfe0a4   100  ldr x4, [jssp], #8
0xffff8bdfe0a8   104  ldr x3, [jssp], #8
0xffff8bdfe0ac   108  ldr x16, pc+68 (addr 0x0000ffff8bdfe0f0)    ;; code: BUILTIN
0xffff8bdfe0b0   112  br x16
0xffff8bdfe0b4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdfe0b8   120  d63f03e0       constant
0xffff8bdfe0bc   124  d503201f       constant
0xffff8bdfe0c0   128  327ed121       constant
0xffff8bdfe0c4   132  00000000       constant
0xffff8bdfe0c8   136  327ed0b1       constant
0xffff8bdfe0cc   140  00000000       constant
0xffff8bdfe0d0   144  327edb59       constant
0xffff8bdfe0d4   148  00000000       constant
0xffff8bdfe0d8   152  327cc909       constant
0xffff8bdfe0dc   156  00000000       constant
0xffff8bdfe0e0   160  8bd38860       constant
0xffff8bdfe0e4   164  0000ffff       constant
0xffff8bdfe0e8   168  327cc909       constant
0xffff8bdfe0ec   172  00000000       constant
0xffff8bdfe0f0   176  8bd22420       constant
0xffff8bdfe0f4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdfe050  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfe068  embedded object  (0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfe078  embedded object  (0x327edb59 WeakCell for 0x5f541fa9 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfe094  embedded object  (0x327cc909 <String[7]: timeEnd>)
0xffff8bdfe098  code target (HANDLER)  (0xffff8bd38860)
0xffff8bdfe0a0  embedded object  (0x327cc909 <String[7]: timeEnd>)
0xffff8bdfe0ac  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdfe0b4  constant pool (size 68)

kind = HANDLER
major_key = <NoCache>Stub
name = trace
compiler = unknown
Instructions (size = 120)
0xffff8bdfe160     0  sub csp, jssp, #0x8 (8)
0xffff8bdfe164     4  str x3, [jssp, #-8]!
0xffff8bdfe168     8  sub csp, jssp, #0x8 (8)
0xffff8bdfe16c    12  str x0, [jssp, #-8]!
0xffff8bdfe170    16  ldr x0, pc+72 (addr 0x0000ffff8bdfe1b8)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfe174    20  ldur x0, [x0, #7]
0xffff8bdfe178    24  cmp x0, #0x0 (0)
0xffff8bdfe17c    28  b.ne #+0x14 (addr 0xffff8bdfe190)
0xffff8bdfe180    32  ldr x3, pc+64 (addr 0x0000ffff8bdfe1c0)    ;; object: 0x327edb91 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>
0xffff8bdfe184    36  ldur x3, [x3, #7]
0xffff8bdfe188    40  tbz w3, #0, #+0x8 (addr 0xffff8bdfe190)
0xffff8bdfe18c    44  b #+0x14 (addr 0xffff8bdfe1a0)
0xffff8bdfe190    48  ldr x0, [jssp], #8
0xffff8bdfe194    52  ldr x3, [jssp], #8
0xffff8bdfe198    56  ldr x16, pc+48 (addr 0x0000ffff8bdfe1c8)    ;; code: BUILTIN
0xffff8bdfe19c    60  br x16
0xffff8bdfe1a0    64  add jssp, jssp, #0x10 (16)
0xffff8bdfe1a4    68  mov x1, x3
0xffff8bdfe1a8    72  ldr x16, pc+40 (addr 0x0000ffff8bdfe1d0)    ;; code: HANDLER, LoadConstantStub, minor: 8
0xffff8bdfe1ac    76  br x16
0xffff8bdfe1b0    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdfe1b4    84  d63f03e0       constant
0xffff8bdfe1b8    88  327ed121       constant
0xffff8bdfe1bc    92  00000000       constant
0xffff8bdfe1c0    96  327edb91       constant
0xffff8bdfe1c4   100  00000000       constant
0xffff8bdfe1c8   104  8bd222e0       constant
0xffff8bdfe1cc   108  0000ffff       constant
0xffff8bdfe1d0   112  8bd4c160       constant
0xffff8bdfe1d4   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdfe170  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfe180  embedded object  (0x327edb91 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>)
0xffff8bdfe198  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdfe1a8  code target (HANDLER)  (0xffff8bd4c160)
0xffff8bdfe1b0  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = trace
compiler = unknown
Instructions (size = 184)
0xffff8bdfe660     0  sub csp, jssp, #0x8 (8)
0xffff8bdfe664     4  str x3, [jssp, #-8]!
0xffff8bdfe668     8  sub csp, jssp, #0x8 (8)
0xffff8bdfe66c    12  str x4, [jssp, #-8]!
0xffff8bdfe670    16  ldr x3, pc+112 (addr 0x0000ffff8bdfe6e0)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfe674    20  ldur x3, [x3, #7]
0xffff8bdfe678    24  cmp x3, #0x0 (0)
0xffff8bdfe67c    28  b.ne #+0x44 (addr 0xffff8bdfe6c0)
0xffff8bdfe680    32  tbz w0, #0, #+0x40 (addr 0xffff8bdfe6c0)
0xffff8bdfe684    36  ldur x3, [x0, #-1]
0xffff8bdfe688    40  ldr x4, pc+96 (addr 0x0000ffff8bdfe6e8)    ;; object: 0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfe68c    44  ldur x4, [x4, #7]
0xffff8bdfe690    48  cmp x3, x4
0xffff8bdfe694    52  b.ne #+0x2c (addr 0xffff8bdfe6c0)
0xffff8bdfe698    56  ldr x5, pc+88 (addr 0x0000ffff8bdfe6f0)    ;; object: 0x327eddd9 WeakCell for 0x5f542001 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfe69c    60  ldur x5, [x5, #7]
0xffff8bdfe6a0    64  tbz w5, #0, #+0x20 (addr 0xffff8bdfe6c0)
0xffff8bdfe6a4    68  ldursw x4, [x5, #15]
0xffff8bdfe6a8    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdfe6c0)
0xffff8bdfe6ac    76  ldr x4, [jssp], #8
0xffff8bdfe6b0    80  ldr x3, [jssp], #8
0xffff8bdfe6b4    84  ldr x2, pc+68 (addr 0x0000ffff8bdfe6f8)    ;; object: 0x26cdaea9 <String[5]: trace>
0xffff8bdfe6b8    88  ldr x16, pc+72 (addr 0x0000ffff8bdfe700)    ;; code: HANDLER, StoreTransitionStub, minor: 196611
0xffff8bdfe6bc    92  br x16
0xffff8bdfe6c0    96  ldr x2, pc+72 (addr 0x0000ffff8bdfe708)    ;; object: 0x26cdaea9 <String[5]: trace>
0xffff8bdfe6c4   100  ldr x4, [jssp], #8
0xffff8bdfe6c8   104  ldr x3, [jssp], #8
0xffff8bdfe6cc   108  ldr x16, pc+68 (addr 0x0000ffff8bdfe710)    ;; code: BUILTIN
0xffff8bdfe6d0   112  br x16
0xffff8bdfe6d4   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdfe6d8   120  d63f03e0       constant
0xffff8bdfe6dc   124  d503201f       constant
0xffff8bdfe6e0   128  327ed121       constant
0xffff8bdfe6e4   132  00000000       constant
0xffff8bdfe6e8   136  327ed0b1       constant
0xffff8bdfe6ec   140  00000000       constant
0xffff8bdfe6f0   144  327eddd9       constant
0xffff8bdfe6f4   148  00000000       constant
0xffff8bdfe6f8   152  26cdaea9       constant
0xffff8bdfe6fc   156  00000000       constant
0xffff8bdfe700   160  8bd99940       constant
0xffff8bdfe704   164  0000ffff       constant
0xffff8bdfe708   168  26cdaea9       constant
0xffff8bdfe70c   172  00000000       constant
0xffff8bdfe710   176  8bd22420       constant
0xffff8bdfe714   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdfe670  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfe688  embedded object  (0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfe698  embedded object  (0x327eddd9 WeakCell for 0x5f542001 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfe6b4  embedded object  (0x26cdaea9 <String[5]: trace>)
0xffff8bdfe6b8  code target (HANDLER)  (0xffff8bd99940)
0xffff8bdfe6c0  embedded object  (0x26cdaea9 <String[5]: trace>)
0xffff8bdfe6cc  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdfe6d4  constant pool (size 68)

--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bdfe780     0  ldur x0, [x1, #-1]
0xffff8bdfe784     4  ldur x0, [x0, #47]
0xffff8bdfe788     8  movz x16, #0x107
0xffff8bdfe78c    12  ldr x0, [x0, x16]
0xffff8bdfe790    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)

--- End code ---
kind = HANDLER
major_key = LoadConstantStub
name = LoadConstantStub
compiler = crankshaft
Instructions (size = 28)
0xffff8bdfe780     0  ldur x0, [x1, #-1]
0xffff8bdfe784     4  ldur x0, [x0, #47]
0xffff8bdfe788     8  movz x16, #0x107
0xffff8bdfe78c    12  ldr x0, [x0, x16]
0xffff8bdfe790    16  ret


Safepoints (size = 8)

RelocInfo (size = 0)


kind = HANDLER
major_key = <NoCache>Stub
name = assert
compiler = unknown
Instructions (size = 120)
0xffff8bdfe800     0  sub csp, jssp, #0x8 (8)
0xffff8bdfe804     4  str x3, [jssp, #-8]!
0xffff8bdfe808     8  sub csp, jssp, #0x8 (8)
0xffff8bdfe80c    12  str x0, [jssp, #-8]!
0xffff8bdfe810    16  ldr x0, pc+72 (addr 0x0000ffff8bdfe858)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfe814    20  ldur x0, [x0, #7]
0xffff8bdfe818    24  cmp x0, #0x0 (0)
0xffff8bdfe81c    28  b.ne #+0x14 (addr 0xffff8bdfe830)
0xffff8bdfe820    32  ldr x3, pc+64 (addr 0x0000ffff8bdfe860)    ;; object: 0x327ede11 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>
0xffff8bdfe824    36  ldur x3, [x3, #7]
0xffff8bdfe828    40  tbz w3, #0, #+0x8 (addr 0xffff8bdfe830)
0xffff8bdfe82c    44  b #+0x14 (addr 0xffff8bdfe840)
0xffff8bdfe830    48  ldr x0, [jssp], #8
0xffff8bdfe834    52  ldr x3, [jssp], #8
0xffff8bdfe838    56  ldr x16, pc+48 (addr 0x0000ffff8bdfe868)    ;; code: BUILTIN
0xffff8bdfe83c    60  br x16
0xffff8bdfe840    64  add jssp, jssp, #0x10 (16)
0xffff8bdfe844    68  mov x1, x3
0xffff8bdfe848    72  ldr x16, pc+40 (addr 0x0000ffff8bdfe870)    ;; code: HANDLER, LoadConstantStub, minor: 9
0xffff8bdfe84c    76  br x16
0xffff8bdfe850    80  5800013f       constant pool begin (num_const = 9)    ;; constant pool
0xffff8bdfe854    84  d63f03e0       constant
0xffff8bdfe858    88  327ed121       constant
0xffff8bdfe85c    92  00000000       constant
0xffff8bdfe860    96  327ede11       constant
0xffff8bdfe864   100  00000000       constant
0xffff8bdfe868   104  8bd222e0       constant
0xffff8bdfe86c   108  0000ffff       constant
0xffff8bdfe870   112  8bdfe780       constant
0xffff8bdfe874   116  0000ffff       constant


RelocInfo (size = 10)
0xffff8bdfe810  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfe820  embedded object  (0x327ede11 WeakCell for 0x5654f651 <an Object with map 0x5f536d99>)
0xffff8bdfe838  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8bdfe848  code target (HANDLER)  (0xffff8bdfe780)
0xffff8bdfe850  constant pool (size 40)

kind = HANDLER
major_key = <NoCache>Stub
name = assert
compiler = unknown
Instructions (size = 184)
0xffff8bdfec20     0  sub csp, jssp, #0x8 (8)
0xffff8bdfec24     4  str x3, [jssp, #-8]!
0xffff8bdfec28     8  sub csp, jssp, #0x8 (8)
0xffff8bdfec2c    12  str x4, [jssp, #-8]!
0xffff8bdfec30    16  ldr x3, pc+112 (addr 0x0000ffff8bdfeca0)    ;; object: 0x327ed121 Cell for 0
0xffff8bdfec34    20  ldur x3, [x3, #7]
0xffff8bdfec38    24  cmp x3, #0x0 (0)
0xffff8bdfec3c    28  b.ne #+0x44 (addr 0xffff8bdfec80)
0xffff8bdfec40    32  tbz w0, #0, #+0x40 (addr 0xffff8bdfec80)
0xffff8bdfec44    36  ldur x3, [x0, #-1]
0xffff8bdfec48    40  ldr x4, pc+96 (addr 0x0000ffff8bdfeca8)    ;; object: 0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfec4c    44  ldur x4, [x4, #7]
0xffff8bdfec50    48  cmp x3, x4
0xffff8bdfec54    52  b.ne #+0x2c (addr 0xffff8bdfec80)
0xffff8bdfec58    56  ldr x5, pc+88 (addr 0x0000ffff8bdfecb0)    ;; object: 0x327edfd9 WeakCell for 0x5f542059 <Map(FAST_HOLEY_ELEMENTS)>
0xffff8bdfec5c    60  ldur x5, [x5, #7]
0xffff8bdfec60    64  tbz w5, #0, #+0x20 (addr 0xffff8bdfec80)
0xffff8bdfec64    68  ldursw x4, [x5, #15]
0xffff8bdfec68    72  tbnz w4, #23, #+0x18 (addr 0xffff8bdfec80)
0xffff8bdfec6c    76  ldr x4, [jssp], #8
0xffff8bdfec70    80  ldr x3, [jssp], #8
0xffff8bdfec74    84  ldr x2, pc+68 (addr 0x0000ffff8bdfecb8)    ;; object: 0x26cbdc41 <String[6]: assert>
0xffff8bdfec78    88  ldr x16, pc+72 (addr 0x0000ffff8bdfecc0)    ;; code: HANDLER, StoreTransitionStub, minor: 196612
0xffff8bdfec7c    92  br x16
0xffff8bdfec80    96  ldr x2, pc+72 (addr 0x0000ffff8bdfecc8)    ;; object: 0x26cbdc41 <String[6]: assert>
0xffff8bdfec84   100  ldr x4, [jssp], #8
0xffff8bdfec88   104  ldr x3, [jssp], #8
0xffff8bdfec8c   108  ldr x16, pc+68 (addr 0x0000ffff8bdfecd0)    ;; code: BUILTIN
0xffff8bdfec90   112  br x16
0xffff8bdfec94   116  5800021f       constant pool begin (num_const = 16)    ;; constant pool
0xffff8bdfec98   120  d63f03e0       constant
0xffff8bdfec9c   124  d503201f       constant
0xffff8bdfeca0   128  327ed121       constant
0xffff8bdfeca4   132  00000000       constant
0xffff8bdfeca8   136  327ed0b1       constant
0xffff8bdfecac   140  00000000       constant
0xffff8bdfecb0   144  327edfd9       constant
0xffff8bdfecb4   148  00000000       constant
0xffff8bdfecb8   152  26cbdc41       constant
0xffff8bdfecbc   156  00000000       constant
0xffff8bdfecc0   160  8bd9a100       constant
0xffff8bdfecc4   164  0000ffff       constant
0xffff8bdfecc8   168  26cbdc41       constant
0xffff8bdfeccc   172  00000000       constant
0xffff8bdfecd0   176  8bd22420       constant
0xffff8bdfecd4   180  0000ffff       constant


RelocInfo (size = 13)
0xffff8bdfec30  embedded object  (0x327ed121 Cell for 0)
0xffff8bdfec48  embedded object  (0x327ed0b1 WeakCell for 0x5f50a871 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfec58  embedded object  (0x327edfd9 WeakCell for 0x5f542059 <Map(FAST_HOLEY_ELEMENTS)>)
0xffff8bdfec74  embedded object  (0x26cbdc41 <String[6]: assert>)
0xffff8bdfec78  code target (HANDLER)  (0xffff8bd9a100)
0xffff8bdfec80  embedded object  (0x26cbdc41 <String[6]: assert>)
0xffff8bdfec8c  code target (BUILTIN)  (0xffff8bd22420)
0xffff8bdfec94  constant pool (size 68)

kind = CALL_IC
major_key = CallICStub
ic_state = GENERIC
extra_ic_state = 393223
name = CallICStub(args(7), ANY, 
compiler = unknown
Instructions (size = 488)
0xffff8be097a0     0  add x4, x2, x3, asr #29
0xffff8be097a4     4  ldur x4, [x4, #15]
0xffff8be097a8     8  ldur x5, [x4, #7]
0xffff8be097ac    12  cmp x5, x1
0xffff8be097b0    16  b.ne #+0x2c (addr 0xffff8be097dc)
0xffff8be097b4    20  tbz w1, #0, #+0x28 (addr 0xffff8be097dc)
0xffff8be097b8    24  add x2, x2, x3, asr #29
0xffff8be097bc    28  add x2, x2, #0x18 (24)
0xffff8be097c0    32  ldur x3, [x2, #-1]
0xffff8be097c4    36  movz x16, #0x200000000
0xffff8be097c8    40  add x3, x3, x16
0xffff8be097cc    44  stur x3, [x2, #-1]
0xffff8be097d0    48  movz x0, #0x7
0xffff8be097d4    52  ldr x16, pc+372 (addr 0x0000ffff8be09948)    ;; code: BUILTIN
0xffff8be097d8    56  br x16
0xffff8be097dc    60  ldr x16, [x26, #2400]
0xffff8be097e0    64  cmp x4, x16
0xffff8be097e4    68  b.eq #+0x78 (addr 0xffff8be0985c)
0xffff8be097e8    72  ldur x5, [x4, #-1]
0xffff8be097ec    76  ldr x16, [x26, #2736]
0xffff8be097f0    80  cmp x5, x16
0xffff8be097f4    84  b.ne #+0x40 (addr 0xffff8be09834)
0xffff8be097f8    88  ldur x5, [cp, #39]
0xffff8be097fc    92  ldur x5, [x5, #95]
0xffff8be09800    96  cmp x1, x5
0xffff8be09804   100  b.ne #+0xec (addr 0xffff8be098f0)
0xffff8be09808   104  movz x0, #0x7
0xffff8be0980c   108  add x2, x2, x3, asr #29
0xffff8be09810   112  add x2, x2, #0x18 (24)
0xffff8be09814   116  ldur x3, [x2, #-1]
0xffff8be09818   120  movz x16, #0x200000000
0xffff8be0981c   124  add x3, x3, x16
0xffff8be09820   128  stur x3, [x2, #-1]
0xffff8be09824   132  mov x2, x4
0xffff8be09828   136  mov x3, x1
0xffff8be0982c   140  ldr x16, pc+292 (addr 0x0000ffff8be09950)    ;; code: STUB, ArrayConstructorStub, minor: 3
0xffff8be09830   144  br x16
0xffff8be09834   148  ldr x16, [x26, #2568]
0xffff8be09838   152  cmp x4, x16
0xffff8be0983c   156  b.eq #+0xb4 (addr 0xffff8be098f0)
0xffff8be09840   160  ldur x5, [x4, #-1]
0xffff8be09844   164  ldrb w5, [x5, #11]
0xffff8be09848   168  cmp x5, #0xc9 (201)
0xffff8be0984c   172  b.ne #+0xa4 (addr 0xffff8be098f0)
0xffff8be09850   176  add x4, x2, x3, asr #29
0xffff8be09854   180  ldr x5, [x26, #2400]
0xffff8be09858   184  stur x5, [x4, #15]
0xffff8be0985c   188  movz x0, #0x7
0xffff8be09860   192  ldr x16, pc+248 (addr 0x0000ffff8be09958)    ;; code: BUILTIN
0xffff8be09864   196  br x16
0xffff8be09868   200  tbz w1, #0, #+0x88 (addr 0xffff8be098f0)
0xffff8be0986c   204  ldur x5, [x1, #-1]
0xffff8be09870   208  ldrb w5, [x5, #11]
0xffff8be09874   212  cmp x5, #0xc9 (201)
0xffff8be09878   216  b.ne #+0x78 (addr 0xffff8be098f0)
0xffff8be0987c   220  ldur x5, [cp, #39]
0xffff8be09880   224  ldur x5, [x5, #95]
0xffff8be09884   228  cmp x1, x5
0xffff8be09888   232  b.eq #+0x68 (addr 0xffff8be098f0)
0xffff8be0988c   236  ldur x4, [x1, #39]
0xffff8be09890   240  ldur x4, [x4, #39]
0xffff8be09894   244  ldur x5, [cp, #39]
0xffff8be09898   248  cmp x4, x5
0xffff8be0989c   252  b.ne #+0x54 (addr 0xffff8be098f0)
0xffff8be098a0   256  movz x5, #0x200000000
0xffff8be098a4   260  adds x4, x2, x3, asr #29
0xffff8be098a8   264  stur x5, [x4, #23]
0xffff8be098ac   268  movz x16, #0xc00000000
0xffff8be098b0   272  sub csp, jssp, #0x10 (16)
0xffff8be098b4   276  stp fp, lr, [jssp, #-16]!
0xffff8be098b8   280  sub csp, jssp, #0x10 (16)
0xffff8be098bc   284  str x16, [jssp, #-8]!
0xffff8be098c0   288  ldr x17, pc+160 (addr 0x0000ffff8be09960)    ;; object: 0xffff8be09741 <Code: CALL_IC>
0xffff8be098c4   292  sub csp, jssp, #0x10 (16)
0xffff8be098c8   296  str x17, [jssp, #-8]!
0xffff8be098cc   300  add fp, jssp, #0x10 (16)
0xffff8be098d0   304  sub csp, jssp, #0x8 (8)
0xffff8be098d4   308  str x1, [jssp, #-8]!
0xffff8be098d8   312  ldr x16, pc+144 (addr 0x0000ffff8be09968)    ;; code: STUB, CreateWeakCellStub, minor: 0
0xffff8be098dc   316  blr x16
0xffff8be098e0   320  ldr x1, [jssp], #8
0xffff8be098e4   324  mov jssp, fp
0xffff8be098e8   328  ldp fp, lr, [jssp], #16
0xffff8be098ec   332  b #-0x11c (addr 0xffff8be097d0)
0xffff8be098f0   336  movz x16, #0xc00000000
0xffff8be098f4   340  sub csp, jssp, #0x10 (16)
0xffff8be098f8   344  stp fp, lr, [jssp, #-16]!
0xffff8be098fc   348  sub csp, jssp, #0x10 (16)
0xffff8be09900   352  str x16, [jssp, #-8]!
0xffff8be09904   356  ldr x17, pc+108 (addr 0x0000ffff8be09970)    ;; object: 0xffff8be09741 <Code: CALL_IC>
0xffff8be09908   360  sub csp, jssp, #0x10 (16)
0xffff8be0990c   364  str x17, [jssp, #-8]!
0xffff8be09910   368  add fp, jssp, #0x10 (16)
0xffff8be09914   372  sub csp, jssp, #0x18 (24)
0xffff8be09918   376  stp x3, x2, [jssp, #-24]!
0xffff8be0991c   380  str x1, [jssp, #16]
0xffff8be09920   384  movz x0, #0x3
0xffff8be09924   388  ldr x1, pc+84 (addr 0x0000ffff8be09978)    ;; external reference (Runtime::CallIC_Miss)
0xffff8be09928   392  ldr x16, pc+88 (addr 0x0000ffff8be09980)    ;; code: STUB, CEntryStub, minor: 4
0xffff8be0992c   396  blr x16
0xffff8be09930   400  mov x1, x0
0xffff8be09934   404  mov jssp, fp
0xffff8be09938   408  ldp fp, lr, [jssp], #16
0xffff8be0993c   412  b #-0xe0 (addr 0xffff8be0985c)
0xffff8be09940   416  5800023f       constant pool begin (num_const = 17)    ;; constant pool
0xffff8be09944   420  d63f03e0       constant
0xffff8be09948   424  8bd1e820       constant
0xffff8be0994c   428  0000ffff       constant
0xffff8be09950   432  8bd33b00       constant
0xffff8be09954   436  0000ffff       constant
0xffff8be09958   440  8bd1f820       constant
0xffff8be0995c   444  0000ffff       constant
0xffff8be09960   448  8be09741       constant
0xffff8be09964   452  0000ffff       constant
0xffff8be09968   456  8bd0ddc0       constant
0xffff8be0996c   460  0000ffff       constant
0xffff8be09970   464  8be09741       constant
0xffff8be09974   468  0000ffff       constant
0xffff8be09978   472  00c86928       constant
0xffff8be0997c   476  00000000       constant
0xffff8be09980   480  8bd06060       constant
0xffff8be09984   484  0000ffff       constant


RelocInfo (size = 19)
0xffff8be097d4  code target (BUILTIN)  (0xffff8bd1e820)
0xffff8be0982c  code target (STUB)  (0xffff8bd33b00)
0xffff8be09860  code target (BUILTIN)  (0xffff8bd1f820)
0xffff8be098c0  embedded object  (0xffff8be09741 <Code: CALL_IC>)
0xffff8be098d8  code target (STUB)  (0xffff8bd0ddc0)
0xffff8be09904  embedded object  (0xffff8be09741 <Code: CALL_IC>)
0xffff8be09924  external reference (Runtime::CallIC_Miss)  (0xc86928)
0xffff8be09928  code target (STUB)  (0xffff8bd06060)
0xffff8be09940  constant pool (size 72)


kind = CALL_IC
major_key = CallICTrampolineStub
ic_state = GENERIC
extra_ic_state = 393223
name = CallICTrampolineStub
compiler = unknown
Instructions (size = 40)
0xffff8be09a00     0  ldur x2, [fp, #-16]
0xffff8be09a04     4  ldur x2, [x2, #31]
0xffff8be09a08     8  ldur x2, [x2, #87]
0xffff8be09a0c    12  ldr x16, pc+20 (addr 0x0000ffff8be09a20)    ;; code: CALL_IC, GENERIC
0xffff8be09a10    16  br x16
0xffff8be09a14    20  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8be09a18    24  d63f03e0       constant
0xffff8be09a1c    28  d503201f       constant
0xffff8be09a20    32  8be097a0       constant
0xffff8be09a24    36  0000ffff       constant


RelocInfo (size = 7)
0xffff8be09a0c  code target (CALL_IC)  (0xffff8be097a0)
0xffff8be09a14  constant pool (size 20)


kind = HANDLER
major_key = <NoCache>Stub
name = isFinite
compiler = unknown
Instructions (size = 120)
0xffff8be0d2e0     0  sub csp, jssp, #0x8 (8)
0xffff8be0d2e4     4  str x3, [jssp, #-8]!
0xffff8be0d2e8     8  sub csp, jssp, #0x8 (8)
0xffff8be0d2ec    12  str x0, [jssp, #-8]!
0xffff8be0d2f0    16  ldr x0, pc+80 (addr 0x0000ffff8be0d340)    ;; object: 0x26cc5d51 Cell for 0
0xffff8be0d2f4    20  ldur x0, [x0, #7]
0xffff8be0d2f8    24  cmp x0, #0x0 (0)
0xffff8be0d2fc    28  b.ne #+0x2c (addr 0xffff8be0d328)
0xffff8be0d300    32  ldr x0, pc+72 (addr 0x0000ffff8be0d348)    ;; object: 0x327f06f9 WeakCell for 0x26c584e1 PropertyCell for 0x327689e1 <JS Function isFinite (SharedFunctionInfo 0x26c539f1)>
0xffff8be0d304    36  ldur x0, [x0, #7]
0xffff8be0d308    40  tbz w0, #0, #+0x20 (addr 0xffff8be0d328)
0xffff8be0d30c    44  ldur x0, [x0, #15]
0xffff8be0d310    48  ldr x16, [x26, #88]
0xffff8be0d314    52  cmp x0, x16
0xffff8be0d318    56  b.eq #+0x10 (addr 0xffff8be0d328)
0xffff8be0d31c    60  add jssp, jssp, #0x10 (16)
0xffff8be0d320    64  ret
0xffff8be0d324    68  b #+0x14 (addr 0xffff8be0d338)
0xffff8be0d328    72  ldr x0, [jssp], #8
0xffff8be0d32c    76  ldr x3, [jssp], #8
0xffff8be0d330    80  ldr x16, pc+32 (addr 0x0000ffff8be0d350)    ;; code: BUILTIN
0xffff8be0d334    84  br x16
0xffff8be0d338    88  580000ff       constant pool begin (num_const = 7)    ;; constant pool
0xffff8be0d33c    92  d63f03e0       constant
0xffff8be0d340    96  26cc5d51       constant
0xffff8be0d344   100  00000000       constant
0xffff8be0d348   104  327f06f9       constant
0xffff8be0d34c   108  00000000       constant
0xffff8be0d350   112  8bd222e0       constant
0xffff8be0d354   116  0000ffff       constant


RelocInfo (size = 9)
0xffff8be0d2f0  embedded object  (0x26cc5d51 Cell for 0)
0xffff8be0d300  embedded object  (0x327f06f9 WeakCell for 0x26c584e1 PropertyCell for 0x327689e1 <JS Function isFinite (SharedFunctionInfo 0x26c539f1)>)
0xffff8be0d330  code target (BUILTIN)  (0xffff8bd222e0)
0xffff8be0d338  constant pool (size 32)

kind = COMPARE_IC
major_key = CompareICStub
ic_state = GENERIC
extra_ic_state = 0
compare_state = GENERIC*GENERIC -> GENERIC
compare_operation = EQ
name = CompareICStub
compiler = unknown
Instructions (size = 664)
0xffff8be0d3c0     0  orr x16, x1, x0
0xffff8be0d3c4     4  tbnz w16, #0, #+0x10 (addr 0xffff8be0d3d4)
0xffff8be0d3c8     8  asr x1, x1, #32
0xffff8be0d3cc    12  sub x0, x1, x0, asr #32
0xffff8be0d3d0    16  ret
0xffff8be0d3d4    20  cmp x0, x1
0xffff8be0d3d8    24  b.ne #+0x30 (addr 0xffff8be0d408)
0xffff8be0d3dc    28  ldur x16, [x0, #-1]
0xffff8be0d3e0    32  ldr x17, [x26, #120]
0xffff8be0d3e4    36  cmp x16, x17
0xffff8be0d3e8    40  b.eq #+0xc (addr 0xffff8be0d3f4)
0xffff8be0d3ec    44  movz x0, #0x0
0xffff8be0d3f0    48  ret
0xffff8be0d3f4    52  ldur d0, [x0, #7]
0xffff8be0d3f8    56  fcmp d0, d0
0xffff8be0d3fc    60  b.vc #-0x10 (addr 0xffff8be0d3ec)
0xffff8be0d400    64  movn x0, #0x0
0xffff8be0d404    68  ret
0xffff8be0d408    72  and x16, x1, x0
0xffff8be0d40c    76  tbnz w16, #0, #+0x58 (addr 0xffff8be0d464)
0xffff8be0d410    80  tbz w0, #0, #+0x20 (addr 0xffff8be0d430)
0xffff8be0d414    84  ldur x16, [x0, #-1]
0xffff8be0d418    88  ldr x17, [x26, #120]
0xffff8be0d41c    92  cmp x16, x17
0xffff8be0d420    96  b.ne #+0x148 (addr 0xffff8be0d568)
0xffff8be0d424   100  ldur d0, [x0, #7]
0xffff8be0d428   104  scvtf d1, x1, #32
0xffff8be0d42c   108  b #+0x1c (addr 0xffff8be0d448)
0xffff8be0d430   112  ldur x16, [x1, #-1]
0xffff8be0d434   116  ldr x17, [x26, #120]
0xffff8be0d438   120  cmp x16, x17
0xffff8be0d43c   124  b.ne #+0x12c (addr 0xffff8be0d568)
0xffff8be0d440   128  ldur d1, [x1, #7]
0xffff8be0d444   132  scvtf d0, x0, #32
0xffff8be0d448   136  fcmp d1, d0
0xffff8be0d44c   140  b.vs #+0x10 (addr 0xffff8be0d45c)
0xffff8be0d450   144  cset x0, gt
0xffff8be0d454   148  csinv x0, x0, xzr, ge
0xffff8be0d458   152  ret
0xffff8be0d45c   156  movn x0, #0x0
0xffff8be0d460   160  ret
0xffff8be0d464   164  ldur x10, [x0, #-1]
0xffff8be0d468   168  ldur x12, [x1, #-1]
0xffff8be0d46c   172  ldrb w11, [x10, #11]
0xffff8be0d470   176  ldrb w13, [x12, #11]
0xffff8be0d474   180  cmp x11, #0x81 (129)
0xffff8be0d478   184  b.ne #+0x18 (addr 0xffff8be0d490)
0xffff8be0d47c   188  cmp x12, x10
0xffff8be0d480   192  b.ne #+0x74 (addr 0xffff8be0d4f4)
0xffff8be0d484   196  ldur d1, [x1, #7]
0xffff8be0d488   200  ldur d0, [x0, #7]
0xffff8be0d48c   204  b #-0x44 (addr 0xffff8be0d448)
0xffff8be0d490   208  tbnz w11, #7, #+0x14 (addr 0xffff8be0d4a4)
0xffff8be0d494   212  tbnz w11, #6, #+0x60 (addr 0xffff8be0d4f4)
0xffff8be0d498   216  tbnz w13, #7, #+0xd0 (addr 0xffff8be0d568)
0xffff8be0d49c   220  tbnz w13, #6, #+0x58 (addr 0xffff8be0d4f4)
0xffff8be0d4a0   224  ret
0xffff8be0d4a4   228  ldrb w11, [x10, #12]
0xffff8be0d4a8   232  ldrb w13, [x12, #12]
0xffff8be0d4ac   236  tbnz w11, #4, #+0x24 (addr 0xffff8be0d4d0)
0xffff8be0d4b0   240  tbnz w13, #4, #+0x1c (addr 0xffff8be0d4cc)
0xffff8be0d4b4   244  ldrb w11, [x10, #11]
0xffff8be0d4b8   248  cmp x11, #0xb1 (177)
0xffff8be0d4bc   252  b.lt #+0xac (addr 0xffff8be0d568)
0xffff8be0d4c0   256  ldrb w13, [x12, #11]
0xffff8be0d4c4   260  cmp x13, #0xb1 (177)
0xffff8be0d4c8   264  b.lt #+0xa0 (addr 0xffff8be0d568)
0xffff8be0d4cc   268  ret
0xffff8be0d4d0   272  tbz w13, #4, #-0x4 (addr 0xffff8be0d4cc)
0xffff8be0d4d4   276  ldrb w11, [x10, #11]
0xffff8be0d4d8   280  cmp x11, #0x83 (131)
0xffff8be0d4dc   284  b.eq #+0x10 (addr 0xffff8be0d4ec)
0xffff8be0d4e0   288  ldrb w13, [x12, #11]
0xffff8be0d4e4   292  cmp x13, #0x83 (131)
0xffff8be0d4e8   296  b.ne #-0x1c (addr 0xffff8be0d4cc)
0xffff8be0d4ec   300  movz x0, #0x0
0xffff8be0d4f0   304  ret
0xffff8be0d4f4   308  movz x16, #0x87
0xffff8be0d4f8   312  and x14, x13, x16
0xffff8be0d4fc   316  movz x16, #0x87
0xffff8be0d500   320  and x15, x11, x16
0xffff8be0d504   324  cmp x14, #0x4 (4)
0xffff8be0d508   328  ccmp x15, #4, #nzcv, eq
0xffff8be0d50c   332  b.ne #+0x5c (addr 0xffff8be0d568)
0xffff8be0d510   336  ldur x10, [x1, #15]
0xffff8be0d514   340  ldur x11, [x0, #15]
0xffff8be0d518   344  cmp x10, x11
0xffff8be0d51c   348  b.eq #+0xc (addr 0xffff8be0d528)
0xffff8be0d520   352  movz x0, #0x100000000
0xffff8be0d524   356  ret
0xffff8be0d528   360  cbnz x10, #+0xc (addr 0xffff8be0d534)
0xffff8be0d52c   364  movz x0, #0x0
0xffff8be0d530   368  ret
0xffff8be0d534   372  asr x10, x10, #32
0xffff8be0d538   376  add x11, x10, #0x17 (23)
0xffff8be0d53c   380  add x1, x1, x11
0xffff8be0d540   384  add x0, x0, x11
0xffff8be0d544   388  neg x10, x10
0xffff8be0d548   392  ldrb w11, [x1, x10]
0xffff8be0d54c   396  ldrb w12, [x0, x10]
0xffff8be0d550   400  cmp x11, x12
0xffff8be0d554   404  b.ne #-0x34 (addr 0xffff8be0d520)
0xffff8be0d558   408  add x10, x10, #0x1 (1)
0xffff8be0d55c   412  cbnz x10, #-0x14 (addr 0xffff8be0d548)
0xffff8be0d560   416  movz x0, #0x0
0xffff8be0d564   420  ret
0xffff8be0d568   424  movz x16, #0xc00000000
0xffff8be0d56c   428  sub csp, jssp, #0x10 (16)
0xffff8be0d570   432  stp fp, lr, [jssp, #-16]!
0xffff8be0d574   436  sub csp, jssp, #0x10 (16)
0xffff8be0d578   440  str x16, [jssp, #-8]!
0xffff8be0d57c   444  ldr x17, pc+172 (addr 0x0000ffff8be0d628)    ;; object: 0xffff8be0d361 <Code: COMPARE_IC>
0xffff8be0d580   448  sub csp, jssp, #0x10 (16)
0xffff8be0d584   452  str x17, [jssp, #-8]!
0xffff8be0d588   456  add fp, jssp, #0x10 (16)
0xffff8be0d58c   460  sub csp, jssp, #0x10 (16)
0xffff8be0d590   464  stp x0, x1, [jssp, #-16]!
0xffff8be0d594   468  movz x0, #0x2
0xffff8be0d598   472  ldr x1, pc+152 (addr 0x0000ffff8be0d630)    ;; external reference (Runtime::Equal)
0xffff8be0d59c   476  ldr x16, pc+156 (addr 0x0000ffff8be0d638)    ;; code: STUB, CEntryStub, minor: 4
0xffff8be0d5a0   480  blr x16
0xffff8be0d5a4   484  mov jssp, fp
0xffff8be0d5a8   488  ldp fp, lr, [jssp], #16
0xffff8be0d5ac   492  ldr x1, [x26, #64]
0xffff8be0d5b0   496  sub x0, x0, x1
0xffff8be0d5b4   500  ret
0xffff8be0d5b8   504  movz x16, #0xc00000000
0xffff8be0d5bc   508  sub csp, jssp, #0x10 (16)
0xffff8be0d5c0   512  stp fp, lr, [jssp, #-16]!
0xffff8be0d5c4   516  sub csp, jssp, #0x10 (16)
0xffff8be0d5c8   520  str x16, [jssp, #-8]!
0xffff8be0d5cc   524  ldr x17, pc+116 (addr 0x0000ffff8be0d640)    ;; object: 0xffff8be0d361 <Code: COMPARE_IC>
0xffff8be0d5d0   528  sub csp, jssp, #0x10 (16)
0xffff8be0d5d4   532  str x17, [jssp, #-8]!
0xffff8be0d5d8   536  add fp, jssp, #0x10 (16)
0xffff8be0d5dc   540  sub csp, jssp, #0x18 (24)
0xffff8be0d5e0   544  stp lr, x0, [jssp, #-24]!
0xffff8be0d5e4   548  str x1, [jssp, #16]
0xffff8be0d5e8   552  movz x10, #0x2d00000000
0xffff8be0d5ec   556  sub csp, jssp, #0x18 (24)
0xffff8be0d5f0   560  stp x10, x0, [jssp, #-24]!
0xffff8be0d5f4   564  str x1, [jssp, #16]
0xffff8be0d5f8   568  movz x0, #0x3
0xffff8be0d5fc   572  ldr x1, pc+76 (addr 0x0000ffff8be0d648)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8be0d600   576  ldr x16, pc+80 (addr 0x0000ffff8be0d650)    ;; code: STUB, CEntryStub, minor: 4
0xffff8be0d604   580  blr x16
0xffff8be0d608   584  add x11, x0, #0x5f (95)
0xffff8be0d60c   588  ldr x1, [jssp, #16]
0xffff8be0d610   592  ldp lr, x0, [jssp], #24
0xffff8be0d614   596  mov jssp, fp
0xffff8be0d618   600  ldp fp, lr, [jssp], #16
0xffff8be0d61c   604  br x11
0xffff8be0d620   608  580001bf       constant pool begin (num_const = 13)    ;; constant pool
0xffff8be0d624   612  d63f03e0       constant
0xffff8be0d628   616  8be0d361       constant
0xffff8be0d62c   620  0000ffff       constant
0xffff8be0d630   624  00e503b8       constant
0xffff8be0d634   628  00000000       constant
0xffff8be0d638   632  8bd06060       constant
0xffff8be0d63c   636  0000ffff       constant
0xffff8be0d640   640  8be0d361       constant
0xffff8be0d644   644  0000ffff       constant
0xffff8be0d648   648  00c8a980       constant
0xffff8be0d64c   652  00000000       constant
0xffff8be0d650   656  8bd06060       constant
0xffff8be0d654   660  0000ffff       constant


RelocInfo (size = 16)
0xffff8be0d57c  embedded object  (0xffff8be0d361 <Code: COMPARE_IC>)
0xffff8be0d598  external reference (Runtime::Equal)  (0xe503b8)
0xffff8be0d59c  code target (STUB)  (0xffff8bd06060)
0xffff8be0d5cc  embedded object  (0xffff8be0d361 <Code: COMPARE_IC>)
0xffff8be0d5fc  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8be0d600  code target (STUB)  (0xffff8bd06060)
0xffff8be0d620  constant pool (size 56)


kind = COMPARE_IC
major_key = CompareICStub
ic_state = MONOMORPHIC
extra_ic_state = 0
type = NORMAL
compare_state = NUMBER*NUMBER -> NUMBER
compare_operation = EQ
name = CompareICStub
compiler = unknown
Instructions (size = 232)
0xffff8be0d6c0     0  scvtf d0, x0, #32
0xffff8be0d6c4     4  scvtf d1, x1, #32
0xffff8be0d6c8     8  tbz w0, #0, #+0x18 (addr 0xffff8be0d6e0)
0xffff8be0d6cc    12  ldur x16, [x0, #-1]
0xffff8be0d6d0    16  ldr x17, [x26, #120]
0xffff8be0d6d4    20  cmp x16, x17
0xffff8be0d6d8    24  b.ne #+0x3c (addr 0xffff8be0d714)
0xffff8be0d6dc    28  ldur d0, [x0, #7]
0xffff8be0d6e0    32  tbz w1, #0, #+0x18 (addr 0xffff8be0d6f8)
0xffff8be0d6e4    36  ldur x16, [x1, #-1]
0xffff8be0d6e8    40  ldr x17, [x26, #120]
0xffff8be0d6ec    44  cmp x16, x17
0xffff8be0d6f0    48  b.ne #+0x24 (addr 0xffff8be0d714)
0xffff8be0d6f4    52  ldur d1, [x1, #7]
0xffff8be0d6f8    56  fcmp d1, d0
0xffff8be0d6fc    60  b.vs #+0x10 (addr 0xffff8be0d70c)
0xffff8be0d700    64  cset x0, gt
0xffff8be0d704    68  csinv x0, x0, xzr, ge
0xffff8be0d708    72  ret
0xffff8be0d70c    76  ldr x16, pc+124 (addr 0x0000ffff8be0d788)    ;; code: COMPARE_IC, GENERIC
0xffff8be0d710    80  br x16
0xffff8be0d714    84  movz x16, #0xc00000000
0xffff8be0d718    88  sub csp, jssp, #0x10 (16)
0xffff8be0d71c    92  stp fp, lr, [jssp, #-16]!
0xffff8be0d720    96  sub csp, jssp, #0x10 (16)
0xffff8be0d724   100  str x16, [jssp, #-8]!
0xffff8be0d728   104  ldr x17, pc+104 (addr 0x0000ffff8be0d790)    ;; object: 0xffff8be0d661 <Code: COMPARE_IC>
0xffff8be0d72c   108  sub csp, jssp, #0x10 (16)
0xffff8be0d730   112  str x17, [jssp, #-8]!
0xffff8be0d734   116  add fp, jssp, #0x10 (16)
0xffff8be0d738   120  sub csp, jssp, #0x18 (24)
0xffff8be0d73c   124  stp lr, x0, [jssp, #-24]!
0xffff8be0d740   128  str x1, [jssp, #16]
0xffff8be0d744   132  movz x10, #0x2d00000000
0xffff8be0d748   136  sub csp, jssp, #0x18 (24)
0xffff8be0d74c   140  stp x10, x0, [jssp, #-24]!
0xffff8be0d750   144  str x1, [jssp, #16]
0xffff8be0d754   148  movz x0, #0x3
0xffff8be0d758   152  ldr x1, pc+64 (addr 0x0000ffff8be0d798)    ;; external reference (Runtime::CompareIC_Miss)
0xffff8be0d75c   156  ldr x16, pc+68 (addr 0x0000ffff8be0d7a0)    ;; code: STUB, CEntryStub, minor: 4
0xffff8be0d760   160  blr x16
0xffff8be0d764   164  add x11, x0, #0x5f (95)
0xffff8be0d768   168  ldr x1, [jssp, #16]
0xffff8be0d76c   172  ldp lr, x0, [jssp], #24
0xffff8be0d770   176  mov jssp, fp
0xffff8be0d774   180  ldp fp, lr, [jssp], #16
0xffff8be0d778   184  br x11
0xffff8be0d77c   188  5800015f       constant pool begin (num_const = 10)    ;; constant pool
0xffff8be0d780   192  d63f03e0       constant
0xffff8be0d784   196  d503201f       constant
0xffff8be0d788   200  8be0d3c0       constant
0xffff8be0d78c   204  0000ffff       constant
0xffff8be0d790   208  8be0d661       constant
0xffff8be0d794   212  0000ffff       constant
0xffff8be0d798   216  00c8a980       constant
0xffff8be0d79c   220  00000000       constant
0xffff8be0d7a0   224  8bd06060       constant
0xffff8be0d7a4   228  0000ffff       constant


RelocInfo (size = 13)
0xffff8be0d70c  code target (COMPARE_IC)  (0xffff8be0d3c0)
0xffff8be0d728  embedded object  (0xffff8be0d661 <Code: COMPARE_IC>)
0xffff8be0d758  external reference (Runtime::CompareIC_Miss)  (0xc8a980)
0xffff8be0d75c  code target (STUB)  (0xffff8bd06060)
0xffff8be0d77c  constant pool (size 44)


root
--- Code ---
kind = HANDLER
major_key = <NoCache>Stub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 437)
0xffff8be0f920     0  ldur x4, [x1, #15]
0xffff8be0f924     4  ldur w5, [x4, #11]
0xffff8be0f928     8  ldur x16, [x1, #23]
0xffff8be0f92c    12  ldur x16, [x16, #39]
0xffff8be0f930    16  tst x16, #0x8
0xffff8be0f934    20  b.ne #+0x134 (addr 0xffff8be0fa68)
0xffff8be0f938    24  ldur x6, [x4, #23]
0xffff8be0f93c    28  ldur x4, [x4, #15]
0xffff8be0f940    32  add x4, x6, x4
0xffff8be0f944    36  tbnz w2, #0, #+0x2c (addr 0xffff8be0f970)
0xffff8be0f948    40  asr x7, x2, #32
0xffff8be0f94c    44  cmp w7, w5
0xffff8be0f950    48  b.hs #+0x128 (addr 0xffff8be0fa78)
0xffff8be0f954    52  ldr w2, [x4, w7, sxtw #2]
0xffff8be0f958    56  movn w16, #0x80000000
0xffff8be0f95c    60  cmp w2, w16
0xffff8be0f960    64  b.hi #+0x58 (addr 0xffff8be0f9b8)
0xffff8be0f964    68  lsl x3, x2, #32
0xffff8be0f968    72  mov x0, x3
0xffff8be0f96c    76  ret
0xffff8be0f970    80  sub csp, jssp, #0x10 (16)
0xffff8be0f974    84  stp fp, lr, [jssp, #-16]!
0xffff8be0f978    88  movz fp, #0xa00000000
0xffff8be0f97c    92  sub csp, jssp, #0x8 (8)
0xffff8be0f980    96  str fp, [jssp, #-8]!
0xffff8be0f984   100  add fp, jssp, #0x8 (8)
0xffff8be0f988   104  ldur x16, [x2, #-1]
0xffff8be0f98c   108  ldr x17, [x26, #120]
0xffff8be0f990   112  cmp x16, x17
0xffff8be0f994   116  b.ne #+0xf4 (addr 0xffff8be0fa88)
0xffff8be0f998   120  ldur d29, [x2, #7]
0xffff8be0f99c   124  fcvtzs w7, d29
0xffff8be0f9a0   128  scvtf d0, w7
0xffff8be0f9a4   132  fcmp d29, d0
0xffff8be0f9a8   136  b.ne #+0xe0 (addr 0xffff8be0fa88)
0xffff8be0f9ac   140  ldr lr, [jssp, #16]
0xffff8be0f9b0   144  ldp xzr, fp, [jssp], #24
0xffff8be0f9b4   148  b #-0x68 (addr 0xffff8be0f94c)
0xffff8be0f9b8   152  sub csp, jssp, #0x10 (16)
0xffff8be0f9bc   156  stp fp, lr, [jssp, #-16]!
0xffff8be0f9c0   160  movz fp, #0xa00000000
0xffff8be0f9c4   164  sub csp, jssp, #0x8 (8)
0xffff8be0f9c8   168  str fp, [jssp, #-8]!
0xffff8be0f9cc   172  add fp, jssp, #0x8 (8)
0xffff8be0f9d0   176  movz x1, #0xe2c0
0xffff8be0f9d4   180  movk x1, #0x2cb8, lsl #16
0xffff8be0f9d8   184  ldp x3, x0, [x1]
0xffff8be0f9dc   188  adds x16, x3, #0x10 (16)
0xffff8be0f9e0   192  ccmp x16, x0, #nzCv, lo
0xffff8be0f9e4   196  b.hi #+0x18 (addr 0xffff8be0f9fc)
0xffff8be0f9e8   200  str x16, [x1]
0xffff8be0f9ec   204  ldr x1, [x26, #120]
0xffff8be0f9f0   208  str x1, [x3]
0xffff8be0f9f4   212  orr x3, x3, #0x1
0xffff8be0f9f8   216  b #+0x38 (addr 0xffff8be0fa30)
0xffff8be0f9fc   220  movz x3, #0x0
0xffff8be0fa00   224  mov x16, lr
0xffff8be0fa04   228  ldr x17, pc+76 (addr 0x0000ffff8be0fa50)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8be0fa08   232  blr x17
0xffff8be0fa0c   236  ldur cp, [fp, #-8]
0xffff8be0fa10   240  movz x0, #0x0
0xffff8be0fa14   244  movz x1, #0x4b48
0xffff8be0fa18   248  movk x1, #0xe4, lsl #16
0xffff8be0fa1c   252  ldr x16, pc+60 (addr 0x0000ffff8be0fa58)    ;; code: STUB, CEntryStub, minor: 5
0xffff8be0fa20   256  blr x16
0xffff8be0fa24   260  str x0, [jssp, #24]
0xffff8be0fa28   264  ldr x16, pc+56 (addr 0x0000ffff8be0fa60)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8be0fa2c   268  blr x16
0xffff8be0fa30   272  ucvtf d29, w2
0xffff8be0fa34   276  stur d29, [x3, #7]
0xffff8be0fa38   280  ldr lr, [jssp, #16]
0xffff8be0fa3c   284  ldp xzr, fp, [jssp], #24
0xffff8be0fa40   288  b #-0xd8 (addr 0xffff8be0f968)
0xffff8be0fa44   292  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8be0fa48   296  d63f03e0       constant
0xffff8be0fa4c   300  d503201f       constant
0xffff8be0fa50   304  8bd06820       constant
0xffff8be0fa54   308  0000ffff       constant
0xffff8be0fa58   312  8bd06260       constant
0xffff8be0fa5c   316  0000ffff       constant
0xffff8be0fa60   320  8bd068e0       constant
0xffff8be0fa64   324  0000ffff       constant
0xffff8be0fa68   328  movz x16, #0x0
0xffff8be0fa6c   332  sub csp, jssp, #0x10 (16)
0xffff8be0fa70   336  stp fp, lr, [jssp, #-16]!
0xffff8be0fa74   340  bl #+0x1c (addr 0xffff8be0fa90)
0xffff8be0fa78   344  movz x16, #0x8
0xffff8be0fa7c   348  sub csp, jssp, #0x10 (16)
0xffff8be0fa80   352  stp fp, lr, [jssp, #-16]!
0xffff8be0fa84   356  bl #+0xc (addr 0xffff8be0fa90)
0xffff8be0fa88   360  movz x16, #0x10
0xffff8be0fa8c   364  bl #+0x14 (addr 0xffff8be0faa0)
0xffff8be0fa90   368  movz x17, #0xa00000000
0xffff8be0fa94   372  sub csp, jssp, #0x10 (16)
0xffff8be0fa98   376  stp x17, cp, [jssp, #-16]!
0xffff8be0fa9c   380  add fp, jssp, #0x10 (16)
0xffff8be0faa0   384  ldr x17, pc+24 (addr 0x0000ffff8be0fab8)    ;; lazy deoptimization bailout 0
0xffff8be0faa4   388  add x17, x17, x16
0xffff8be0faa8   392  br x17
0xffff8be0faac   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8be0fab0   400  d63f03e0       constant
0xffff8be0fab4   404  d503201f       constant
0xffff8be0fab8   408  8bb06000       constant
0xffff8be0fabc   412  0000ffff       constant


Safepoints (size = 21)
0xffff8be0fa24   260  000 | x3 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8be0fa04  code target (STUB)  (0xffff8bd06820)
0xffff8be0fa1c  code target (STUB)  (0xffff8bd06260)
0xffff8be0fa28  code target (STUB)  (0xffff8bd068e0)
0xffff8be0fa44  constant pool (size 36)
0xffff8be0faa0  runtime entry
0xffff8be0faac  constant pool (size 20)

--- End code ---
kind = HANDLER
major_key = LoadFastElementStub
name = LoadFastElementStub
compiler = crankshaft
Instructions (size = 437)
0xffff8be0f920     0  ldur x4, [x1, #15]
0xffff8be0f924     4  ldur w5, [x4, #11]
0xffff8be0f928     8  ldur x16, [x1, #23]
0xffff8be0f92c    12  ldur x16, [x16, #39]
0xffff8be0f930    16  tst x16, #0x8
0xffff8be0f934    20  b.ne #+0x134 (addr 0xffff8be0fa68)
0xffff8be0f938    24  ldur x6, [x4, #23]
0xffff8be0f93c    28  ldur x4, [x4, #15]
0xffff8be0f940    32  add x4, x6, x4
0xffff8be0f944    36  tbnz w2, #0, #+0x2c (addr 0xffff8be0f970)
0xffff8be0f948    40  asr x7, x2, #32
0xffff8be0f94c    44  cmp w7, w5
0xffff8be0f950    48  b.hs #+0x128 (addr 0xffff8be0fa78)
0xffff8be0f954    52  ldr w2, [x4, w7, sxtw #2]
0xffff8be0f958    56  movn w16, #0x80000000
0xffff8be0f95c    60  cmp w2, w16
0xffff8be0f960    64  b.hi #+0x58 (addr 0xffff8be0f9b8)
0xffff8be0f964    68  lsl x3, x2, #32
0xffff8be0f968    72  mov x0, x3
0xffff8be0f96c    76  ret
0xffff8be0f970    80  sub csp, jssp, #0x10 (16)
0xffff8be0f974    84  stp fp, lr, [jssp, #-16]!
0xffff8be0f978    88  movz fp, #0xa00000000
0xffff8be0f97c    92  sub csp, jssp, #0x8 (8)
0xffff8be0f980    96  str fp, [jssp, #-8]!
0xffff8be0f984   100  add fp, jssp, #0x8 (8)
0xffff8be0f988   104  ldur x16, [x2, #-1]
0xffff8be0f98c   108  ldr x17, [x26, #120]
0xffff8be0f990   112  cmp x16, x17
0xffff8be0f994   116  b.ne #+0xf4 (addr 0xffff8be0fa88)
0xffff8be0f998   120  ldur d29, [x2, #7]
0xffff8be0f99c   124  fcvtzs w7, d29
0xffff8be0f9a0   128  scvtf d0, w7
0xffff8be0f9a4   132  fcmp d29, d0
0xffff8be0f9a8   136  b.ne #+0xe0 (addr 0xffff8be0fa88)
0xffff8be0f9ac   140  ldr lr, [jssp, #16]
0xffff8be0f9b0   144  ldp xzr, fp, [jssp], #24
0xffff8be0f9b4   148  b #-0x68 (addr 0xffff8be0f94c)
0xffff8be0f9b8   152  sub csp, jssp, #0x10 (16)
0xffff8be0f9bc   156  stp fp, lr, [jssp, #-16]!
0xffff8be0f9c0   160  movz fp, #0xa00000000
0xffff8be0f9c4   164  sub csp, jssp, #0x8 (8)
0xffff8be0f9c8   168  str fp, [jssp, #-8]!
0xffff8be0f9cc   172  add fp, jssp, #0x8 (8)
0xffff8be0f9d0   176  movz x1, #0xe2c0
0xffff8be0f9d4   180  movk x1, #0x2cb8, lsl #16
0xffff8be0f9d8   184  ldp x3, x0, [x1]
0xffff8be0f9dc   188  adds x16, x3, #0x10 (16)
0xffff8be0f9e0   192  ccmp x16, x0, #nzCv, lo
0xffff8be0f9e4   196  b.hi #+0x18 (addr 0xffff8be0f9fc)
0xffff8be0f9e8   200  str x16, [x1]
0xffff8be0f9ec   204  ldr x1, [x26, #120]
0xffff8be0f9f0   208  str x1, [x3]
0xffff8be0f9f4   212  orr x3, x3, #0x1
0xffff8be0f9f8   216  b #+0x38 (addr 0xffff8be0fa30)
0xffff8be0f9fc   220  movz x3, #0x0
0xffff8be0fa00   224  mov x16, lr
0xffff8be0fa04   228  ldr x17, pc+76 (addr 0x0000ffff8be0fa50)    ;; code: STUB, StoreRegistersStateStub, minor: 0
0xffff8be0fa08   232  blr x17
0xffff8be0fa0c   236  ldur cp, [fp, #-8]
0xffff8be0fa10   240  movz x0, #0x0
0xffff8be0fa14   244  movz x1, #0x4b48
0xffff8be0fa18   248  movk x1, #0xe4, lsl #16
0xffff8be0fa1c   252  ldr x16, pc+60 (addr 0x0000ffff8be0fa58)    ;; code: STUB, CEntryStub, minor: 5
0xffff8be0fa20   256  blr x16
0xffff8be0fa24   260  str x0, [jssp, #24]
0xffff8be0fa28   264  ldr x16, pc+56 (addr 0x0000ffff8be0fa60)    ;; code: STUB, RestoreRegistersStateStub, minor: 0
0xffff8be0fa2c   268  blr x16
0xffff8be0fa30   272  ucvtf d29, w2
0xffff8be0fa34   276  stur d29, [x3, #7]
0xffff8be0fa38   280  ldr lr, [jssp, #16]
0xffff8be0fa3c   284  ldp xzr, fp, [jssp], #24
0xffff8be0fa40   288  b #-0xd8 (addr 0xffff8be0f968)
0xffff8be0fa44   292  5800011f       constant pool begin (num_const = 8)    ;; constant pool
0xffff8be0fa48   296  d63f03e0       constant
0xffff8be0fa4c   300  d503201f       constant
0xffff8be0fa50   304  8bd06820       constant
0xffff8be0fa54   308  0000ffff       constant
0xffff8be0fa58   312  8bd06260       constant
0xffff8be0fa5c   316  0000ffff       constant
0xffff8be0fa60   320  8bd068e0       constant
0xffff8be0fa64   324  0000ffff       constant
0xffff8be0fa68   328  movz x16, #0x0
0xffff8be0fa6c   332  sub csp, jssp, #0x10 (16)
0xffff8be0fa70   336  stp fp, lr, [jssp, #-16]!
0xffff8be0fa74   340  bl #+0x1c (addr 0xffff8be0fa90)
0xffff8be0fa78   344  movz x16, #0x8
0xffff8be0fa7c   348  sub csp, jssp, #0x10 (16)
0xffff8be0fa80   352  stp fp, lr, [jssp, #-16]!
0xffff8be0fa84   356  bl #+0xc (addr 0xffff8be0fa90)
0xffff8be0fa88   360  movz x16, #0x10
0xffff8be0fa8c   364  bl #+0x14 (addr 0xffff8be0faa0)
0xffff8be0fa90   368  movz x17, #0xa00000000
0xffff8be0fa94   372  sub csp, jssp, #0x10 (16)
0xffff8be0fa98   376  stp x17, cp, [jssp, #-16]!
0xffff8be0fa9c   380  add fp, jssp, #0x10 (16)
0xffff8be0faa0   384  ldr x17, pc+24 (addr 0x0000ffff8be0fab8)    ;; lazy deoptimization bailout 0
0xffff8be0faa4   388  add x17, x17, x16
0xffff8be0faa8   392  br x17
0xffff8be0faac   396  5800009f       constant pool begin (num_const = 4)    ;; constant pool
0xffff8be0fab0   400  d63f03e0       constant
0xffff8be0fab4   404  d503201f       constant
0xffff8be0fab8   408  8bb06000       constant
0xffff8be0fabc   412  0000ffff       constant


Safepoints (size = 21)
0xffff8be0fa24   260  000 | x3 | x27 (sp -> fp)  <none>

RelocInfo (size = 21)
0xffff8be0fa04  code target (STUB)  (0xffff8bd06820)
0xffff8be0fa1c  code target (STUB)  (0xffff8bd06260)
0xffff8be0fa28  code target (STUB)  (0xffff8bd068e0)
0xffff8be0fa44  constant pool (size 36)
0xffff8be0faa0  runtime entry
0xffff8be0faac  constant pool (size 20)


